(ROOT
  (FRAG
    (NP (NNP The) (NNP Three) (NNPS Cutters))
    (, ,)
    (PP (IN by)
      (NP (NNP Captain) (NNP Marryat)))
    (. .)))

nn(Cutters-3, The-1)
nn(Cutters-3, Three-2)
root(ROOT-0, Cutters-3)
nn(Marryat-7, Captain-6)
prep_by(Cutters-3, Marryat-7)

(ROOT
  (S
    (NP (NNP Captain) (NNP Frederick) (NNP Marryat))
    (VP (VBD was)
      (VP (VBN born)
        (NP
          (NP
            (NP (NNP July))
            (NP
              (QP (CD 10) (CD 1792))))
          (, ,)
          (CC and)
          (NP
            (NP (NNP died) (NNP August))
            (NP
              (QP (CD 8) (CD 1848)))))))
    (. .)))

nn(Marryat-3, Captain-1)
nn(Marryat-3, Frederick-2)
nsubjpass(born-5, Marryat-3)
auxpass(born-5, was-4)
root(ROOT-0, born-5)
dobj(born-5, July-6)
number(1792-8, 10-7)
dep(July-6, 1792-8)
nn(August-12, died-11)
dobj(born-5, August-12)
conj_and(July-6, August-12)
number(1848-14, 8-13)
dep(August-12, 1848-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD retired)
      (PP (IN from)
        (NP
          (NP (DT the) (JJ British) (NN navy))
          (PP (IN in)
            (NP (CD 1828)))))
      (SBAR (IN in) (NN order)
        (S
          (VP (TO to)
            (VP (VB devote)
              (NP (PRP himself))
              (PP (TO to)
                (NP (NN writing))))))))
    (. .)))

nsubj(retired-2, He-1)
root(ROOT-0, retired-2)
det(navy-6, the-4)
amod(navy-6, British-5)
prep_from(retired-2, navy-6)
prep_in(navy-6, 1828-8)
mark(devote-12, in-9)
dep(devote-12, order-10)
aux(devote-12, to-11)
advcl(retired-2, devote-12)
dobj(devote-12, himself-13)
prep_to(devote-12, writing-15)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ following) (CD 20) (NNS years)))
    (NP (PRP he))
    (VP (VBD wrote)
      (NP
        (NP (CD 26) (NNS books))
        (, ,)
        (SBAR
          (WHNP (DT many)
            (WHPP (IN of)
              (WHNP (WDT which))))
          (S
            (VP (VBP are)
              (PP (IN among)
                (NP
                  (NP (DT the) (RB very) (JJS best))
                  (PP (IN of)
                    (NP (JJ English) (NN literature))))))))
        (, ,)
        (CC and)
        (SBAR
          (WHNP
            (NP (DT some))
            (WHPP (IN of)
              (WHNP (WDT which))))
          (S
            (VP (VBP are)
              (ADVP (RB still))
              (PP (IN in)
                (NP (NN print))))))))
    (. .)))

det(years-5, the-2)
amod(years-5, following-3)
num(years-5, 20-4)
prep_in(wrote-7, years-5)
nsubj(wrote-7, he-6)
root(ROOT-0, wrote-7)
num(books-9, 26-8)
dobj(wrote-7, books-9)
pobj(of-12, books-9)
dep(of-12, many-11)
nsubj(are-14, of-12)
dobj(wrote-7, are-14)
conj_and(books-9, are-14)
rcmod(books-9, are-14)
pobj(of-12, are-14)
det(best-18, the-16)
advmod(best-18, very-17)
prep_among(are-14, best-18)
amod(literature-21, English-20)
prep_of(best-18, literature-21)
nsubj(are-27, some-24)
prep_of(some-24, which-26)
dobj(wrote-7, are-27)
conj_and(books-9, are-27)
pobj(of-12, are-27)
advmod(are-27, still-28)
prep_in(are-27, print-30)

(ROOT
  (S
    (NP (NNP Marryat))
    (VP (VBD had)
      (NP
        (NP (DT an) (JJ extraordinary) (NN gift))
        (PP (IN for)
          (NP
            (NP (DT the) (NN invention))
            (PP (IN of)
              (NP
                (NP (NNS episodes))
                (PP (IN in)
                  (NP (PRP$ his) (NNS stories)))))))))
    (. .)))

nsubj(had-2, Marryat-1)
root(ROOT-0, had-2)
det(gift-5, an-3)
amod(gift-5, extraordinary-4)
dobj(had-2, gift-5)
det(invention-8, the-7)
prep_for(gift-5, invention-8)
prep_of(invention-8, episodes-10)
poss(stories-13, his-12)
prep_in(episodes-10, stories-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ says)
      (ADVP (RB somewhere))
      (SBAR (IN that)
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBD sat)
                (PRT (RP down))
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN day) (POS 's))
                    (NN work))))))
          (, ,)
          (NP (PRP he))
          (ADVP (RB never))
          (VP (VBD knew)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB write))))))))))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
advmod(says-2, somewhere-3)
mark(knew-17, that-4)
advmod(sat-7, when-5)
nsubj(sat-7, he-6)
advcl(knew-17, sat-7)
prt(sat-7, down-8)
det(day-11, the-10)
poss(work-13, day-11)
prep_for(sat-7, work-13)
nsubj(knew-17, he-15)
neg(knew-17, never-16)
ccomp(says-2, knew-17)
dobj(going-21, what-18)
nsubj(write-23, what-18)
nsubj(going-21, he-19)
aux(going-21, was-20)
ccomp(knew-17, going-21)
aux(write-23, to-22)
xcomp(going-21, write-23)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB certainly))
    (VP (VBD was)
      (NP (DT a) (JJ literary) (NN genius)))
    (. .)))

nsubj(genius-6, He-1)
advmod(genius-6, certainly-2)
cop(genius-6, was-3)
det(genius-6, a-4)
amod(genius-6, literary-5)
root(ROOT-0, genius-6)

(ROOT
  (S (`` ``)
    (NP (DT The) (CD Three) (NNS Cutters))
    ('' '')
    (VP (VBD was)
      (VP (VBN published)
        (PP (IN in)
          (NP
            (NP (CD 1836))
            (, ,)
            (NP (DT the) (JJ tenth) (NN book))))
        (S
          (VP (TO to)
            (VP (VB flow)
              (PP (IN from)
                (NP
                  (NP (NNP Marryat) (POS 's))
                  (NN pen))))))))
    (. .)))

det(Cutters-4, The-2)
num(Cutters-4, Three-3)
nsubjpass(published-7, Cutters-4)
nsubj(flow-15, Cutters-4)
auxpass(published-7, was-6)
root(ROOT-0, published-7)
prep_in(published-7, 1836-9)
det(book-13, the-11)
amod(book-13, tenth-12)
appos(1836-9, book-13)
aux(flow-15, to-14)
xcomp(published-7, flow-15)
poss(pen-19, Marryat-17)
prep_from(flow-15, pen-19)

(ROOT
  (S
    (NP (DT This) (NN e-book))
    (VP
      (VP (VBD was)
        (VP (VBN transcribed)
          (PP (IN in)
            (NP (CD 1998)))
          (PP (IN by)
            (NP (NNP Nick) (NNP Hodson)))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (VP (VBN reformatted)
          (PP
            (PP (IN in)
              (NP (CD 2003)))
            (, ,)
            (CC and)
            (ADVP (RB again))
            (PP (IN in)
              (NP (CD 2005)))))))
    (. .)))

det(e-book-2, This-1)
nsubjpass(transcribed-4, e-book-2)
nsubjpass(reformatted-13, e-book-2)
auxpass(transcribed-4, was-3)
root(ROOT-0, transcribed-4)
prep_in(transcribed-4, 1998-6)
nn(Hodson-9, Nick-8)
agent(transcribed-4, Hodson-9)
auxpass(reformatted-13, was-12)
conj_and(transcribed-4, reformatted-13)
prep_in(reformatted-13, 2003-15)
advmod(reformatted-13, again-18)
prep_in(reformatted-13, 2005-20)
conj_and(2003-15, 2005-20)

(ROOT
  (NP
    (NP (DT THE) (NNP THREE) (NNP CUTTERS))
    (, ,)
    (NP (NNP BY) (NNP CAPTAIN) (NNP FREDERICK) (NNP MARRYAT))
    (. .)))

det(CUTTERS-3, THE-1)
nn(CUTTERS-3, THREE-2)
root(ROOT-0, CUTTERS-3)
nn(MARRYAT-8, BY-5)
nn(MARRYAT-8, CAPTAIN-6)
nn(MARRYAT-8, FREDERICK-7)
appos(CUTTERS-3, MARRYAT-8)

(ROOT
  (S
    (NP (NNP CHAPTER))
    (VP (VBZ ONE))
    (. .)))

nsubj(ONE-2, CHAPTER-1)
root(ROOT-0, ONE-2)

(ROOT
  (NP (NNP CUTTER) (NNP THE) (NNP FIRST) (. .)))

nn(FIRST-3, CUTTER-1)
nn(FIRST-3, THE-2)
root(ROOT-0, FIRST-3)

(ROOT
  (S
    (NP (NNP Reader) (, ,))
    (VP (VBP have)
      (NP (PRP you))
      (ADVP (RB ever))
      (VP (VBN been)
        (PP (IN at)
          (NP (NNP Plymouth)))))
    (. ?)))

nsubj(been-6, Reader-1)
aux(been-6, have-3)
dobj(been-6, you-4)
advmod(been-6, ever-5)
root(ROOT-0, been-6)
prep_at(been-6, Plymouth-8)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP have))))
      (, ,)
      (NP (PRP$ your) (NN eye))
      (VP (MD must)
        (VP (VB have)
          (VP (VBN dwelt)
            (PP (IN with)
              (NP (NN ecstasy)))
            (PP (IN upon)
              (NP
                (NP (DT the) (JJ beautiful) (NN property))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNP Earl))
                    (PP (IN of)
                      (NP (NNP Mount) (NNP Edgcumbe)))))))))))
    (: :)
    (X
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP have) (RB not)
            (VP (VBN been)
              (PP (IN at)
                (NP (NNP Plymouth)))))))
      (, ,)
      (X (DT the) (RB sooner))
      (NP
        (NP (DT that))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP go)
              (ADVP (RB there))
              (NP (DT the) (JJR better)))))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(dwelt-9, have-3)
poss(eye-6, your-5)
nsubj(dwelt-9, eye-6)
aux(dwelt-9, must-7)
aux(dwelt-9, have-8)
root(ROOT-0, dwelt-9)
prep_with(dwelt-9, ecstasy-11)
det(property-15, the-13)
amod(property-15, beautiful-14)
prep_upon(dwelt-9, property-15)
det(Earl-18, the-17)
prep_of(property-15, Earl-18)
nn(Edgcumbe-21, Mount-20)
prep_of(Earl-18, Edgcumbe-21)
mark(been-27, if-23)
nsubj(been-27, you-24)
aux(been-27, have-25)
neg(been-27, not-26)
dep(that-33, been-27)
prep_at(been-27, Plymouth-29)
det(sooner-32, the-31)
dep(that-33, sooner-32)
dep(dwelt-9, that-33)
nsubj(go-35, you-34)
rcmod(that-33, go-35)
advmod(go-35, there-36)
det(better-38, the-37)
dobj(go-35, better-38)

(ROOT
  (S
    (PP (IN At)
      (NP (NNP Mount) (NNP Edgcumbe)))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB behold)
        (NP
          (NP (DT the) (JJS finest) (NN timber))
          (PP (IN in)
            (NP (NN existence))))
        (, ,)
        (S
          (VP
            (VP (VBG towering)
              (PRT (RP up))
              (PP (TO to)
                (NP
                  (NP (DT the) (NNS summits))
                  (PP (IN of)
                    (NP (DT the) (NNS hills))))))
            (, ,)
            (CC and)
            (VP (VBG feathering)
              (PRT (RP down))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN shingle))
                  (PP (IN on)
                    (NP (DT the) (NN beach))))))))))
    (. .)))

nn(Edgcumbe-3, Mount-2)
prep_at(behold-6, Edgcumbe-3)
nsubj(behold-6, you-4)
aux(behold-6, will-5)
root(ROOT-0, behold-6)
det(timber-9, the-7)
amod(timber-9, finest-8)
dobj(behold-6, timber-9)
prep_in(timber-9, existence-11)
dep(behold-6, towering-13)
prt(towering-13, up-14)
det(summits-17, the-16)
prep_to(towering-13, summits-17)
det(hills-20, the-19)
prep_of(summits-17, hills-20)
dep(behold-6, feathering-23)
conj_and(towering-13, feathering-23)
prt(feathering-23, down-24)
det(shingle-27, the-26)
prep_to(feathering-23, shingle-27)
det(beach-30, the-29)
prep_on(shingle-27, beach-30)

(ROOT
  (S (CC And)
    (PP (IN from)
      (NP (DT this) (JJ lovely) (NN spot)))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB witness)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (NP (DT the) (RBS most) (JJ splendid) (NNS panoramas))
              (PP (IN in)
                (NP (DT the) (NN world))))))))
    (. .)))

cc(witness-8, And-1)
det(spot-5, this-3)
amod(spot-5, lovely-4)
prep_from(witness-8, spot-5)
nsubj(witness-8, you-6)
aux(witness-8, will-7)
root(ROOT-0, witness-8)
dobj(witness-8, one-9)
det(panoramas-14, the-11)
advmod(panoramas-14, most-12)
amod(panoramas-14, splendid-13)
prep_of(one-9, panoramas-14)
det(world-17, the-16)
prep_in(panoramas-14, world-17)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD will)
        (VP (VB see))))
    (: --)
    (S
      (NP (PRP I))
      (ADVP (RB hardly))
      (VP (VBP know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (MD will) (RB not)
              (VP (VB see)))))))
    (: --)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB see)
          (NP
            (NP (NNP Ram) (NNP Head))
            (, ,)
            (CC and)
            (NP (NNP Cawsand) (NNP Bay))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (MD will)
        (VP (VB see)
          (NP
            (NP
              (NP
                (NP (DT the) (NN Breakwater))
                (, ,)
                (CC and)
                (NP
                  (NP
                    (NP (NNP Drake) (POS 's))
                    (NNP Island))
                  (, ,)
                  (CC and)
                  (NP
                    (NP
                      (NP (DT the) (NNP Devil) (POS 's))
                      (NNP Bridge))
                    (PP (IN below)
                      (NP (PRP you)))))
                (: ;))
              (CC and)
              (NP
                (NP (DT the) (NN town))
                (PP (IN of)
                  (NP (NNP Plymouth)))))
            (CC and)
            (NP
              (NP (PRP$ its) (NNS fortifications))
              (, ,)
              (CC and)
              (NP (DT the) (NN Hoe)))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (MD will)
        (VP
          (VP (VB come)
            (PP (TO to)
              (NP
                (NP (DT the) (NNP Devil) (POS 's))
                (NNP Point))))
          (, ,)
          (VP (VB round)
            (SBAR
              (WHNP (WDT which))
              (S
                (S
                  (NP (DT the) (NN tide))
                  (VP (VBZ runs)
                    (VP (VB devilish)
                      (ADJP (JJ strong)))))
                (: ;)
                (CC and)
                (RB then)
                (S
                  (NP (PRP you))
                  (VP (MD will)
                    (VP (VB see)
                      (NP
                        (NP (DT the) (NNP New) (NNP Victualling) (NNP Office) (, ,))
                        (: --)
                        (SBAR
                          (WHPP (IN about)
                            (WHNP (WDT which)))
                          (S
                            (NP (NNP Sir) (NNP James) (NNP Gordon))
                            (VP (VBD used)
                              (PP (TO to)
                                (NP (NN stump)))
                              (NP (DT all) (NN day))))))))))))
          (, ,)
          (CC and)
          (VP (VB take)
            (NP
              (NP (DT a) (NN pinch))
              (PP (IN of)
                (NP (NN snuff))))
            (PP (IN from)
              (NP
                (NP (DT every) (NN man))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD carried)
                      (NP
                        (NP
                          (NP (DT a) (NN box))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (S
                                (S
                                  (NP (DT all))
                                  (VP (VBD were)
                                    (ADJP (JJ delighted)
                                      (S
                                        (VP (TO to)
                                          (VP (VB give)))))))
                                (, ,)
                                (CC and)
                                (S
                                  (NP (PRP he))
                                  (VP (VBD was)
                                    (ADJP (JJ delighted)
                                      (S
                                        (VP (TO to)
                                          (VP (VB receive) (, ,)
                                            (S
                                              (VP (VBG proving)
                                                (SBAR
                                                  (WHADJP (WRB how) (JJ much))
                                                  (S
                                                    (NP (NN pleasure))
                                                    (VP (MD may)
                                                      (VP (VB be)
                                                        (VP (VBN communicated)
                                                          (ADVP (RB merely))
                                                          (PP (IN by)
                                                            (NP
                                                              (NP (DT a) (NN pinch))
                                                              (PP (IN of)
                                                                (NP (NN snuff)))))))))))))))))))
                              (: ;)
                              (CC and)
                              (RB then)
                              (S
                                (NP (PRP you))
                                (VP (MD will)
                                  (VP (VB see)
                                    (NP
                                      (NP (NNP Mount) (NNP Wise))
                                      (CC and)
                                      (NP (NNP Mutton) (NNP Cove)))))))))
                        (: ;)
                        (NP
                          (NP (DT the) (NN town))
                          (PP (IN of)
                            (NP (NNP Devonport))))
                        (: ;))
                      (PP (IN with)
                        (NP
                          (NP
                            (NP (PRP$ its) (JJ magnificent) (NN dockyard))
                            (CC and)
                            (NP (NNS arsenals)))
                          (, ,)
                          (NP (NNP North) (NNP Corner))
                          (, ,)
                          (CC and)
                          (NP
                            (NP (DT the) (NN way))
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBZ leads)
                                  (PP (TO to)
                                    (NP (NNP Saltash))))))))))))))))))
    (. .)))

nsubj(see-3, You-1)
aux(see-3, will-2)
root(ROOT-0, see-3)
nsubj(know-7, I-5)
advmod(know-7, hardly-6)
conj_and(see-3, know-7)
dobj(see-12, what-8)
nsubj(see-12, you-9)
aux(see-12, will-10)
neg(see-12, not-11)
ccomp(know-7, see-12)
nsubj(see-16, you-14)
aux(see-16, will-15)
conj_and(see-3, see-16)
nn(Head-18, Ram-17)
dobj(see-16, Head-18)
nn(Bay-22, Cawsand-21)
dobj(see-16, Bay-22)
conj_and(Head-18, Bay-22)
advmod(see-28, then-25)
nsubj(see-28, you-26)
aux(see-28, will-27)
conj_and(see-3, see-28)
det(Breakwater-30, the-29)
dobj(see-28, Breakwater-30)
poss(Island-35, Drake-33)
dobj(see-28, Island-35)
conj_and(Breakwater-30, Island-35)
det(Devil-39, the-38)
poss(Bridge-41, Devil-39)
conj_and(Breakwater-30, Bridge-41)
conj_and(Island-35, Bridge-41)
prep_below(Bridge-41, you-43)
det(town-47, the-46)
dobj(see-28, town-47)
conj_and(Breakwater-30, town-47)
prep_of(town-47, Plymouth-49)
poss(fortifications-52, its-51)
dobj(see-28, fortifications-52)
conj_and(Breakwater-30, fortifications-52)
det(Hoe-56, the-55)
conj_and(Breakwater-30, Hoe-56)
conj_and(fortifications-52, Hoe-56)
advmod(come-62, then-59)
nsubj(come-62, you-60)
nsubj(round-69, you-60)
nsubj(take-100, you-60)
aux(come-62, will-61)
conj_and(see-3, come-62)
det(Devil-65, the-64)
poss(Point-67, Devil-65)
prep_to(come-62, Point-67)
conj_and(see-3, round-69)
conj_and(come-62, round-69)
dep(runs-73, which-70)
det(tide-72, the-71)
nsubj(runs-73, tide-72)
dep(round-69, runs-73)
xcomp(runs-73, devilish-74)
acomp(devilish-74, strong-75)
advmod(see-81, then-78)
nsubj(see-81, you-79)
aux(see-81, will-80)
dep(round-69, see-81)
conj_and(runs-73, see-81)
det(Office-85, the-82)
nn(Office-85, New-83)
nn(Office-85, Victualling-84)
dobj(see-81, Office-85)
prep_about(used-93, Office-85)
nn(Gordon-92, Sir-90)
nn(Gordon-92, James-91)
nsubj(used-93, Gordon-92)
rcmod(Office-85, used-93)
prep_to(used-93, stump-95)
det(day-97, all-96)
tmod(used-93, day-97)
conj_and(see-3, take-100)
conj_and(come-62, take-100)
det(pinch-102, a-101)
dobj(take-100, pinch-102)
prep_of(pinch-102, snuff-104)
det(man-107, every-106)
prep_from(take-100, man-107)
nsubj(carried-109, man-107)
rcmod(man-107, carried-109)
det(box-111, a-110)
dobj(carried-109, box-111)
dep(delighted-116, box-111)
nsubj(delighted-116, all-114)
nsubj(give-118, all-114)
cop(delighted-116, were-115)
rcmod(box-111, delighted-116)
aux(give-118, to-117)
xcomp(delighted-116, give-118)
nsubj(delighted-123, he-121)
nsubj(receive-125, he-121)
cop(delighted-123, was-122)
rcmod(box-111, delighted-123)
conj_and(delighted-116, delighted-123)
aux(receive-125, to-124)
xcomp(delighted-123, receive-125)
xcomp(receive-125, proving-127)
advmod(much-129, how-128)
dep(communicated-133, much-129)
nsubjpass(communicated-133, pleasure-130)
aux(communicated-133, may-131)
auxpass(communicated-133, be-132)
ccomp(proving-127, communicated-133)
advmod(communicated-133, merely-134)
det(pinch-137, a-136)
agent(communicated-133, pinch-137)
prep_of(pinch-137, snuff-139)
advmod(see-145, then-142)
nsubj(see-145, you-143)
aux(see-145, will-144)
rcmod(box-111, see-145)
conj_and(delighted-116, see-145)
nn(Wise-147, Mount-146)
dobj(see-145, Wise-147)
nn(Cove-150, Mutton-149)
dobj(see-145, Cove-150)
conj_and(Wise-147, Cove-150)
det(town-153, the-152)
dep(box-111, town-153)
prep_of(town-153, Devonport-155)
poss(dockyard-160, its-158)
amod(dockyard-160, magnificent-159)
prep_with(carried-109, dockyard-160)
prep_with(carried-109, arsenals-162)
conj_and(dockyard-160, arsenals-162)
nn(Corner-165, North-164)
prep_with(carried-109, Corner-165)
conj_and(dockyard-160, Corner-165)
det(way-169, the-168)
prep_with(carried-109, way-169)
conj_and(dockyard-160, way-169)
nsubj(leads-171, way-169)
rcmod(way-169, leads-171)
prep_to(leads-171, Saltash-173)

(ROOT
  (S (CC And)
    (NP (PRP you))
    (VP (MD will)
      (VP
        (VP (VB see)
          (NP
            (NP
              (NP (NNS ships))
              (VP (VBG building)))
            (CC and)
            (NP
              (NP (NNS ships))
              (PP (IN in)
                (NP (JJ ordinary))))
            (: ;)
            (CC and)
            (NP
              (NP
                (NP (NNS ships))
                (VP (VBG repairing)
                  (CC and)
                  (VBG ships)
                  (NP (NN fitting))))
              (: ;)
              (CC and)
              (NP (NNS hulks)))))
        (CC and)
        (VP (VB convict)
          (NP
            (NP (NNS ships))
            (, ,)
            (CC and)
            (NP (DT the) (NN guard-ship))
            (: ;)
            (NP
              (NP
                (NP (NNS ships))
                (ADJP (JJ ready) (TO to) (JJ sail)))
              (CC and)
              (NP
                (NP (NNS ships))
                (PP (IN under)
                  (NP (NN sail)))))
            (: ;)
            (PP (IN besides)
              (NP
                (NP (NNS lighters))
                (, ,)
                (NP
                  (NP (NN men-of-war) (POS 's))
                  (NNS boats))
                (, ,)
                (NP (NNS dockyard-boats))
                (, ,)
                (NP (NNS bum-boats))
                (, ,)
                (CC and)
                (NP (NNS shore-boats))))))))
    (. .)))

nsubj(see-4, you-2)
nsubj(convict-22, you-2)
aux(see-4, will-3)
root(ROOT-0, see-4)
dobj(see-4, ships-5)
vmod(ships-5, building-6)
dobj(see-4, ships-8)
conj_and(ships-5, ships-8)
prep_in(ships-8, ordinary-10)
dobj(see-4, ships-13)
conj_and(ships-5, ships-13)
vmod(ships-13, repairing-14)
vmod(ships-13, ships-16)
conj_and(repairing-14, ships-16)
dobj(repairing-14, fitting-17)
conj_and(ships-5, hulks-20)
conj_and(ships-13, hulks-20)
conj_and(see-4, convict-22)
dobj(convict-22, ships-23)
det(guard-ship-27, the-26)
dobj(convict-22, guard-ship-27)
conj_and(ships-23, guard-ship-27)
dobj(convict-22, ships-29)
conj_and(ships-23, ships-29)
amod(sail-32, ready-30)
dep(sail-32, to-31)
amod(ships-29, sail-32)
conj_and(ships-23, ships-34)
conj_and(ships-29, ships-34)
prep_under(ships-34, sail-36)
dobj(convict-22, besides-38)
conj_and(ships-23, besides-38)
prep_besides(ships-23, lighters-39)
poss(boats-43, men-of-war-41)
prep_besides(ships-23, boats-43)
conj_and(lighters-39, boats-43)
prep_besides(ships-23, dockyard-boats-45)
conj_and(lighters-39, dockyard-boats-45)
prep_besides(ships-23, bum-boats-47)
conj_and(lighters-39, bum-boats-47)
prep_besides(ships-23, shore-boats-50)
conj_and(lighters-39, shore-boats-50)

(ROOT
  (S
    (PP (IN In)
      (ADJP (JJ short)))
    (, ,)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT a) (JJ great) (NN deal)
          (S
            (VP (TO to)
              (VP (VB see)
                (PP (IN at)
                  (NP
                    (NP (NNP Plymouth))
                    (PP (IN besides)
                      (NP
                        (NP (DT the) (NN sea))
                        (ADVP (PRP itself))))))))))))
    (: :)
    (S (CC but)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (ADVP (RB particularly))
          (VP (VBP wish)
            (ADVP (RB now)))))
      (VP (VBZ is) (, ,)
        (SBAR (IN that)
          (S
            (S
              (NP (PRP you))
              (VP (MD will)
                (VP
                  (VP (VB stand)
                    (PP (IN at)
                      (NP
                        (NP (DT the) (NN battery))
                        (PP (IN of)
                          (NP (NNP Mount) (NNP Edgcumbe))))))
                  (CC and)
                  (VP (VB look)
                    (PP (IN into)
                      (NP (NNP Barn) (NNP Pool)))
                    (PP (IN below)
                      (NP (PRP you)))))))
            (, ,)
            (CC and)
            (S
              (ADVP (RB there))
              (NP (PRP you))
              (VP (MD will)
                (VP (VB see))))))
        (, ,)
        (S
          (VP (VBG lying)
            (PP (IN at)
              (NP
                (NP (JJ single) (NNS anchor))
                (, ,)
                (NP (DT a) (NN cutter))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD may)
        (ADVP (RB also))
        (VP (VB see) (, ,)
          (PP (IN by)
            (NP (PRP$ her) (NN pendant)
              (CC and)
              (NN ensign)))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP she))
              (VP (VBZ is)
                (NP (DT a) (NN yacht))))))))
    (. .)))

prep_in(is-5, short-2)
expl(is-5, there-4)
root(ROOT-0, is-5)
det(deal-8, a-6)
amod(deal-8, great-7)
nsubj(is-5, deal-8)
aux(see-10, to-9)
vmod(deal-8, see-10)
prep_at(see-10, Plymouth-12)
det(sea-15, the-14)
prep_besides(Plymouth-12, sea-15)
advmod(sea-15, itself-16)
cc(is-24, but-18)
dobj(wish-22, what-19)
nsubj(wish-22, I-20)
advmod(wish-22, particularly-21)
csubj(is-24, wish-22)
advmod(wish-22, now-23)
conj_and(is-5, is-24)
mark(stand-29, that-26)
nsubj(stand-29, you-27)
nsubj(look-37, you-27)
aux(stand-29, will-28)
ccomp(is-24, stand-29)
det(battery-32, the-31)
prep_at(stand-29, battery-32)
nn(Edgcumbe-35, Mount-34)
prep_of(battery-32, Edgcumbe-35)
ccomp(is-24, look-37)
conj_and(stand-29, look-37)
nn(Pool-40, Barn-39)
prep_into(look-37, Pool-40)
prep_below(look-37, you-42)
advmod(see-48, there-45)
nsubj(see-48, you-46)
aux(see-48, will-47)
ccomp(is-24, see-48)
conj_and(stand-29, see-48)
xcomp(is-24, lying-50)
amod(anchor-53, single-52)
prep_at(lying-50, anchor-53)
det(cutter-56, a-55)
appos(anchor-53, cutter-56)
nsubj(see-62, you-59)
aux(see-62, may-60)
advmod(see-62, also-61)
conj_and(is-5, see-62)
poss(pendant-66, her-65)
prep_by(see-62, pendant-66)
prep_by(see-62, ensign-68)
conj_and(pendant-66, ensign-68)
mark(yacht-74, that-70)
nsubj(yacht-74, she-71)
cop(yacht-74, is-72)
det(yacht-74, a-73)
ccomp(see-62, yacht-74)

(ROOT
  (S
    (PP (IN Of)
      (NP
        (NP (PDT all) (DT the) (NNS amusements))
        (VP (VBN entered)
          (PP (IN into) (IN by)
            (NP
              (NP (DT the) (NN nobility)
                (CC and)
                (NN gentry))
              (PP (IN of)
                (NP (PRP$ our) (NN island))))))))
    (NP (EX there))
    (VP (VBZ is) (RB not)
      (NP
        (NP (CD one))
        (ADJP
          (ADJP (RB so) (JJ manly))
          (, ,)
          (ADJP (RB so) (JJ exciting))
          (, ,)
          (ADJP (RB so) (JJ patriotic))
          (, ,)
          (CC or)
          (ADJP (RB so) (JJ national))
          (, ,) (IN as)
          (ADJP (JJ yacht-sailing)))))
    (. .)))

predet(amusements-4, all-2)
det(amusements-4, the-3)
prep_of(is-16, amusements-4)
vmod(amusements-4, entered-5)
dep(entered-5, into-6)
det(nobility-9, the-8)
agent(entered-5, nobility-9)
agent(entered-5, gentry-11)
conj_and(nobility-9, gentry-11)
poss(island-14, our-13)
prep_of(nobility-9, island-14)
expl(is-16, there-15)
root(ROOT-0, is-16)
neg(is-16, not-17)
nsubj(is-16, one-18)
advmod(manly-20, so-19)
amod(one-18, manly-20)
advmod(exciting-23, so-22)
amod(one-18, exciting-23)
conj_or(manly-20, exciting-23)
advmod(patriotic-26, so-25)
amod(one-18, patriotic-26)
conj_or(manly-20, patriotic-26)
advmod(national-30, so-29)
amod(one-18, national-30)
conj_or(manly-20, national-30)
dep(manly-20, as-32)
dep(manly-20, yacht-sailing-33)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ peculiar)
        (PP
          (PP (TO to)
            (NP (NNP England)))
          (, ,)
          (CONJP (RB not) (JJ only))
          (PP (IN for)
            (NP
              (NP (PRP$ our) (NN insular) (NN position))
              (CC and)
              (NP (PRP$ our) (NN fine))))))
      (SBAR
        (SBAR
          (S
            (VP (VBZ harbours))))
        (, ,)
        (CC but)
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBZ requires)
              (NP (DT a) (JJ certain) (NN degree))
              (PP (IN of)
                (NP
                  (NP (NN energy))
                  (CC and)
                  (NP
                    (NP (DT a) (JJ certain) (NN amount))
                    (PP (IN of)
                      (NP (NN income))))))
              (S
                (ADVP (RB rarely))
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN found)
                      (ADVP (RB elsewhere)))))))))))
    (. .)))

nsubj(peculiar-3, It-1)
cop(peculiar-3, is-2)
root(ROOT-0, peculiar-3)
prep_to(peculiar-3, England-5)
neg(only-8, not-7)
dep(peculiar-3, only-8)
conj(peculiar-3, for-9)
poss(position-12, our-10)
nn(position-12, insular-11)
pobj(for-9, position-12)
poss(fine-15, our-14)
pobj(for-9, fine-15)
conj_and(position-12, fine-15)
advcl(peculiar-3, harbours-16)
mark(requires-21, because-19)
nsubj(requires-21, it-20)
advcl(peculiar-3, requires-21)
conj_but(harbours-16, requires-21)
det(degree-24, a-22)
amod(degree-24, certain-23)
dobj(requires-21, degree-24)
nsubjpass(found-36, degree-24)
prep_of(requires-21, energy-26)
det(amount-30, a-28)
amod(amount-30, certain-29)
prep_of(requires-21, amount-30)
conj_and(energy-26, amount-30)
prep_of(amount-30, income-32)
advmod(found-36, rarely-33)
aux(found-36, to-34)
auxpass(found-36, be-35)
xcomp(requires-21, found-36)
advmod(found-36, elsewhere-37)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (VP (VBN been)
        (VP
          (VP
            (ADVP (RB wisely))
            (VBN fostered)
            (PP (IN by)
              (NP
                (NP (PRP$ our) (NNS sovereigns))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP have)
                      (VP (VBN felt)
                        (SBAR (IN that)
                          (S
                            (NP
                              (NP (DT the) (NN security))
                              (PP (IN of)
                                (NP (DT the) (NN kingdom))))
                            (VP (VBZ is)
                              (VP (VBN increased)
                                (PP (IN by)
                                  (NP
                                    (NP (DT every) (NN man))
                                    (VP (VBG being)
                                      (VP
                                        (ADVP (RBR more)
                                          (CC or)
                                          (RBR less))
                                        (NP (DT a) (NN sailor))))))))))))))
                (, ,))))
          (CC or)
          (VP (VBN connected)
            (PP (IN with)
              (NP (DT the) (JJ nautical) (NN profession)))))))
    (. .)))

nsubjpass(fostered-5, It-1)
nsubjpass(connected-32, It-1)
aux(fostered-5, has-2)
auxpass(fostered-5, been-3)
advmod(fostered-5, wisely-4)
root(ROOT-0, fostered-5)
poss(sovereigns-8, our-7)
agent(fostered-5, sovereigns-8)
nsubj(felt-12, sovereigns-8)
aux(felt-12, have-11)
rcmod(sovereigns-8, felt-12)
mark(increased-20, that-13)
det(security-15, the-14)
nsubjpass(increased-20, security-15)
det(kingdom-18, the-17)
prep_of(security-15, kingdom-18)
auxpass(increased-20, is-19)
ccomp(felt-12, increased-20)
det(man-23, every-22)
agent(increased-20, man-23)
aux(sailor-29, being-24)
advmod(sailor-29, more-25)
conj_or(more-25, less-27)
advmod(sailor-29, less-27)
det(sailor-29, a-28)
vmod(man-23, sailor-29)
conj_or(fostered-5, connected-32)
det(profession-36, the-34)
amod(profession-36, nautical-35)
prep_with(connected-32, profession-36)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN amusement))
        (PP (IN of)
          (NP
            (NP (DT the) (JJS greatest) (NN importance))
            (PP (TO to)
              (NP (DT the) (NN country))))))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBZ has)
            (VP
              (ADVP (RB much))
              (VBN improved)
              (NP
                (NP (PRP$ our) (NN ship-building))
                (CC and)
                (NP (PRP$ our) (NN ship-fitting)))
              (, ,)
              (SBAR (IN while)
                (S
                  (NP (PRP it))
                  (VP
                    (VP (VBZ affords)
                      (NP (NN employment))
                      (PP (TO to)
                        (NP (PRP$ our) (NN seamen))))
                    (CC and)
                    (VP (VBZ shipwrights))))))))))
    (. .)))

nsubj(amusement-4, It-1)
cop(amusement-4, is-2)
det(amusement-4, an-3)
root(ROOT-0, amusement-4)
det(importance-8, the-6)
amod(importance-8, greatest-7)
prep_of(amusement-4, importance-8)
det(country-11, the-10)
prep_to(importance-8, country-11)
mark(improved-17, as-13)
nsubj(improved-17, it-14)
aux(improved-17, has-15)
advmod(improved-17, much-16)
advcl(amusement-4, improved-17)
poss(ship-building-19, our-18)
dobj(improved-17, ship-building-19)
poss(ship-fitting-22, our-21)
dobj(improved-17, ship-fitting-22)
conj_and(ship-building-19, ship-fitting-22)
mark(affords-26, while-24)
nsubj(affords-26, it-25)
nsubj(shipwrights-32, it-25)
advcl(improved-17, affords-26)
dobj(affords-26, employment-27)
poss(seamen-30, our-29)
prep_to(affords-26, seamen-30)
advcl(improved-17, shipwrights-32)
conj_and(affords-26, shipwrights-32)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBD were)
          (S
            (VP (TO to)
              (VP (VB say)
                (NP (DT all))
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (MD could)
                      (VP (VB say)
                        (PP (IN in)
                          (NP
                            (NP (NN praise))
                            (PP (IN of)
                              (NP (NNS yachts)))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD should)
      (ADVP (RB never))
      (VP (VB advance)
        (PP (IN with)
          (NP (PRP$ my) (NN narrative)))))
    (. .)))

cc(advance-20, But-1)
mark(were-4, if-2)
nsubj(were-4, I-3)
nsubj(say-6, I-3)
advcl(advance-20, were-4)
aux(say-6, to-5)
xcomp(were-4, say-6)
dobj(say-6, all-7)
mark(say-11, that-8)
nsubj(say-11, I-9)
aux(say-11, could-10)
ccomp(say-6, say-11)
prep_in(say-11, praise-13)
prep_of(praise-13, yachts-15)
nsubj(advance-20, I-17)
aux(advance-20, should-18)
neg(advance-20, never-19)
root(ROOT-0, advance-20)
poss(narrative-23, my-22)
prep_with(advance-20, narrative-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall)
      (ADVP (RB therefore))
      (VP
        (VP (VB drink)
          (NP (DT a) (NN bumper))
          (PP (TO to)
            (NP
              (NP (DT the) (NN health))
              (PP (IN of)
                (NP
                  (NP (NNP Admiral) (NNP Lord) (NNP Yarborough))
                  (CC and)
                  (NP (DT the) (NNP Yacht) (NNP Club)))))))
        (, ,)
        (CC and)
        (VP (VB proceed))))
    (. .)))

nsubj(drink-4, I-1)
nsubj(proceed-20, I-1)
aux(drink-4, shall-2)
advmod(drink-4, therefore-3)
root(ROOT-0, drink-4)
det(bumper-6, a-5)
dobj(drink-4, bumper-6)
det(health-9, the-8)
prep_to(drink-4, health-9)
nn(Yarborough-13, Admiral-11)
nn(Yarborough-13, Lord-12)
prep_of(health-9, Yarborough-13)
det(Club-17, the-15)
nn(Club-17, Yacht-16)
prep_of(health-9, Club-17)
conj_and(Yarborough-13, Club-17)
conj_and(drink-4, proceed-20)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP observe)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (DT this) (NN yacht))
            (VP (VBZ is)
              (ADJP (JJ cutter-rigged)))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBZ sits)
              (ADVP (RB gracefully))
              (PP (IN on)
                (NP (DT the) (JJ smooth) (NN water))))))))
    (. .)))

nsubj(observe-2, You-1)
root(ROOT-0, observe-2)
mark(cutter-rigged-7, that-3)
det(yacht-5, this-4)
nsubj(cutter-rigged-7, yacht-5)
cop(cutter-rigged-7, is-6)
ccomp(observe-2, cutter-rigged-7)
mark(sits-12, that-10)
nsubj(sits-12, she-11)
ccomp(observe-2, sits-12)
conj_and(cutter-rigged-7, sits-12)
advmod(sits-12, gracefully-13)
det(water-17, the-15)
amod(water-17, smooth-16)
prep_on(sits-12, water-17)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ is)
        (ADVP (RB just))
        (VP (VBG heaving)
          (PRT (RP up))
          (NP (PRP$ her) (NN anchor)))))
    (: ;)
    (S
      (NP (PRP$ her) (NN foresail))
      (VP (VBZ is)
        (ADJP (JJ loose) (, ,) (RB all) (JJ ready))
        (S
          (VP (TO to)
            (VP (VB cast)
              (NP (PRP her)))))))
    (: --)
    (S
      (PP (IN in)
        (NP (DT a) (JJ few) (NNS minutes)))
      (NP (PRP she))
      (VP (MD will)
        (VP (VB be)
          (PP (IN under)
            (NP (NN way))))))
    (. .)))

nsubj(heaving-4, She-1)
aux(heaving-4, is-2)
advmod(heaving-4, just-3)
root(ROOT-0, heaving-4)
prt(heaving-4, up-5)
poss(anchor-7, her-6)
dobj(heaving-4, anchor-7)
poss(foresail-10, her-9)
nsubj(ready-15, foresail-10)
nsubj(cast-17, foresail-10)
cop(ready-15, is-11)
amod(ready-15, loose-12)
advmod(ready-15, all-14)
parataxis(heaving-4, ready-15)
aux(cast-17, to-16)
xcomp(ready-15, cast-17)
dobj(cast-17, her-18)
det(minutes-23, a-21)
amod(minutes-23, few-22)
prep_in(be-26, minutes-23)
nsubj(be-26, she-24)
aux(be-26, will-25)
parataxis(heaving-4, be-26)
prep_under(be-26, way-28)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBP are)
              (NP
                (NP (NNS ladies))
                (VP (VBG sitting)
                  (PP (IN at)
                    (NP (DT the) (NN taffrail))))))))))
    (: ;)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBP are)
        (NP
          (NP (CD five) (NNS haunches))
          (PP (IN of)
            (NP
              (NP (NN venison))
              (VP (VBG hanging)
                (PP (IN over)
                  (NP (DT the) (NN stern)))))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
mark(are-5, that-3)
expl(are-5, there-4)
ccomp(see-2, are-5)
nsubj(are-5, ladies-6)
vmod(ladies-6, sitting-7)
det(taffrail-10, the-9)
prep_at(sitting-7, taffrail-10)
expl(are-14, there-13)
conj_and(see-2, are-14)
num(haunches-16, five-15)
nsubj(are-14, haunches-16)
prep_of(haunches-16, venison-18)
vmod(venison-18, hanging-19)
det(stern-22, the-21)
prep_over(hanging-19, stern-22)

(ROOT
  (S
    (PP (IN Of)
      (NP (DT all) (NNS amusements)))
    (, ,)
    (VP (VB give)
      (NP (PRP me))
      (NP (NN yachting)))
    (. .)))

det(amusements-3, all-2)
prep_of(give-5, amusements-3)
root(ROOT-0, give-5)
iobj(give-5, me-6)
dobj(give-5, yachting-7)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (MD must)
      (VP (VB go)
        (PP (IN on)
          (NP (NN board)))))
    (. .)))

cc(go-4, But-1)
nsubj(go-4, we-2)
aux(go-4, must-3)
root(ROOT-0, go-4)
prep_on(go-4, board-6)

(ROOT
  (S
    (S
      (NP (DT The) (NN deck))
      (PRN (, ,)
        (S
          (NP (PRP you))
          (VP (VBP observe)))
        (, ,))
      (VP (VBZ is)
        (PP (IN of)
          (NP (JJ narrow) (NN deal) (NNS planks)))
        (ADJP (RB as) (JJ white)
          (PP (IN as)
            (NP (NN snow))))))
    (: ;)
    (S
      (NP (DT the) (NNS guns))
      (VP (VBP are)
        (PP (IN of)
          (NP
            (NP (JJ polished) (NN brass))
            (: ;)
            (NP
              (NP (DT the) (NNS bitts)
                (CC and)
                (NNS binnacles))
              (PP (IN of)
                (NP (NN mahogany))))))))
    (: :)
    (S
      (NP (PRP she))
      (VP (VBZ is)
        (VP (VBN painted)
          (PP (IN with)
            (NP (NN taste))))))
    (: ;)
    (CC and)
    (S
      (NP (PDT all) (DT the) (NNS mouldings))
      (VP (VBP are)
        (ADJP (JJ gilded))))
    (. .)))

det(deck-2, The-1)
nsubj(white-13, deck-2)
nsubj(observe-5, you-4)
parataxis(white-13, observe-5)
cop(white-13, is-7)
amod(planks-11, narrow-9)
nn(planks-11, deal-10)
prep_of(white-13, planks-11)
advmod(white-13, as-12)
root(ROOT-0, white-13)
prep_as(white-13, snow-15)
det(guns-18, the-17)
nsubj(are-19, guns-18)
conj_and(white-13, are-19)
amod(brass-22, polished-21)
prep_of(are-19, brass-22)
det(bitts-25, the-24)
dep(brass-22, bitts-25)
dep(brass-22, binnacles-27)
conj_and(bitts-25, binnacles-27)
prep_of(bitts-25, mahogany-29)
nsubjpass(painted-33, she-31)
auxpass(painted-33, is-32)
conj_and(white-13, painted-33)
prep_with(painted-33, taste-35)
predet(mouldings-40, all-38)
det(mouldings-40, the-39)
nsubj(gilded-42, mouldings-40)
cop(gilded-42, are-41)
conj_and(white-13, gilded-42)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (ADJP
        (ADJP (NN nothing) (VBG wanting))
        (PRN (: ;)
          (CC and)
          (ADVP (RB yet)))
        (SBAR
          (WHADJP (WRB how)
            (ADJP (JJ clear)
              (CC and)
              (JJ unencumbered)))
          (S
            (VP (VBP are)
              (NP (PRP$ her) (NNS decks)))))))
    (. !)))

expl(is-2, There-1)
root(ROOT-0, is-2)
dep(wanting-4, nothing-3)
acomp(is-2, wanting-4)
cc(yet-7, and-6)
dep(wanting-4, yet-7)
advmod(clear-9, how-8)
dep(decks-14, clear-9)
conj_and(clear-9, unencumbered-11)
dep(decks-14, unencumbered-11)
cop(decks-14, are-12)
poss(decks-14, her-13)
ccomp(wanting-4, decks-14)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP us))
        (VP (VB go)
          (ADVP (RB below)))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(go-3, us-2)
ccomp(Let-1, go-3)
advmod(go-3, below-4)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NNS ladies) (POS '))
          (NN cabin))))
    (: :)
    (SQ (MD can)
      (NP (NN anything))
      (VP (VB be)
        (ADJP (RBR more) (JJ tasteful)
          (CC or)
          (JJ elegant))))
    (. ?)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(ladies-4, the-3)
poss(cabin-6, ladies-4)
nsubj(is-2, cabin-6)
aux(tasteful-12, can-8)
nsubj(tasteful-12, anything-9)
nsubj(elegant-14, anything-9)
cop(tasteful-12, be-10)
advmod(tasteful-12, more-11)
parataxis(is-2, tasteful-12)
parataxis(is-2, elegant-14)
conj_or(tasteful-12, elegant-14)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (ADJP (RB not) (JJ luxurious))
    (. ?)))

cop(luxurious-4, Is-1)
nsubj(luxurious-4, it-2)
neg(luxurious-4, not-3)
root(ROOT-0, luxurious-4)

(ROOT
  (S
    (S (CC And)
      (, ,)
      (SBAR (IN although)
        (S (RB so)
          (ADJP (JJ small))))
      (, ,)
      (VP (VBZ does)))
    (RB not)
    (S
      (NP (PRP$ its)
        (ADJP (RB very) (JJ confined))
        (NN space))
      (VP (VBP astonish)
        (NP (PRP you))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBP view)
              (SBAR (IN so)
                (S
                  (NP
                    (NP (JJ many) (NNS comforts))
                    (ADJP (RB so) (JJ beautifully)))
                  (VP (VBD arranged)))))))))
    (. ?)))

cc(does-7, And-1)
mark(small-5, although-3)
advmod(small-5, so-4)
advcl(does-7, small-5)
root(ROOT-0, does-7)
neg(does-7, not-8)
poss(space-12, its-9)
advmod(confined-11, very-10)
amod(space-12, confined-11)
nsubj(astonish-13, space-12)
parataxis(does-7, astonish-13)
dobj(astonish-13, you-14)
advmod(view-18, when-16)
nsubj(view-18, you-17)
advcl(astonish-13, view-18)
mark(arranged-24, so-19)
amod(comforts-21, many-20)
nsubj(arranged-24, comforts-21)
advmod(beautifully-23, so-22)
amod(comforts-21, beautifully-23)
advcl(view-18, arranged-24)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (UCP
        (NP (DT the) (NN dining-room))
        (, ,)
        (CC and)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (NNS gentlemen))
            (VP (VBP repair))))))
    (. .)))

nsubj(dining-room-4, This-1)
cop(dining-room-4, is-2)
det(dining-room-4, the-3)
root(ROOT-0, dining-room-4)
advmod(repair-10, where-7)
det(gentlemen-9, the-8)
nsubj(repair-10, gentlemen-9)
conj_and(dining-room-4, repair-10)
rcmod(dining-room-4, repair-10)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD can)
      (VP (VB be)
        (ADJP
          (ADJP (RBR more) (JJ complete))
          (CC or)
          (ADJP (RB _) (JJ recherche)
            (NP (VBG _))))))
    (. ?)))

nsubj(complete-5, What-1)
nsubj(recherche-8, What-1)
aux(complete-5, can-2)
cop(complete-5, be-3)
advmod(complete-5, more-4)
root(ROOT-0, complete-5)
advmod(recherche-8, _-7)
conj_or(complete-5, recherche-8)
dep(recherche-8, _-9)

(ROOT
  (FRAG (CC And)
    (ADVP (RB just) (RB peep))
    (PP (IN into)
      (NP (PRP$ their) (NNS state-rooms)
        (CC and)
        (NNS bed-places)))
    (. .)))

cc(peep-3, And-1)
advmod(peep-3, just-2)
root(ROOT-0, peep-3)
poss(state-rooms-6, their-5)
prep_into(peep-3, state-rooms-6)
prep_into(peep-3, bed-places-8)
conj_and(state-rooms-6, bed-places-8)

(ROOT
  (S
    (S
      (NP (RB Here))
      (VP (VBZ is)
        (NP
          (NP
            (NP (DT the) (NN steward) (POS 's))
            (NN room))
          (CC and)
          (NP (DT the) (NN beaufet)))))
    (: :)
    (S
      (S
        (NP (DT the) (NN steward))
        (VP (VBZ is)
          (VP (VBG squeezing)
            (NP
              (NP (NNS lemons))
              (PP (IN for)
                (NP (DT the) (NN punch)))))))
      (, ,)
      (CC and)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN champagne))
            (PP (IN in)
              (NP (NN ice)))))))
    (: ;)
    (CC and)
    (S
      (S
        (PP (IN by)
          (NP
            (NP (DT the) (NN side))
            (PP (IN of)
              (NP (DT the) (NN pail)))))
        (NP (DT the) (NNS long-corks))
        (VP (VBP are)
          (VP (VBN ranged)
            (PRT (RP up)))))
      (, ,)
      (S
        (NP (DT all))
        (ADJP (JJ ready))))
    (. .)))

nsubj(room-6, Here-1)
cop(room-6, is-2)
det(steward-4, the-3)
poss(room-6, steward-4)
root(ROOT-0, room-6)
det(beaufet-9, the-8)
conj_and(room-6, beaufet-9)
det(steward-12, the-11)
nsubj(squeezing-14, steward-12)
aux(squeezing-14, is-13)
conj_and(room-6, squeezing-14)
dobj(squeezing-14, lemons-15)
det(punch-18, the-17)
prep_for(lemons-15, punch-18)
expl(is-22, there-21)
conj_and(room-6, is-22)
conj_and(squeezing-14, is-22)
det(champagne-24, the-23)
nsubj(is-22, champagne-24)
prep_in(champagne-24, ice-26)
det(side-31, the-30)
agent(ranged-38, side-31)
det(pail-34, the-33)
prep_of(side-31, pail-34)
det(long-corks-36, the-35)
nsubjpass(ranged-38, long-corks-36)
auxpass(ranged-38, are-37)
conj_and(room-6, ranged-38)
prt(ranged-38, up-39)
dep(ready-42, all-41)
parataxis(ranged-38, ready-42)

(ROOT
  (S
    (S
      (S
        (INTJ (RB Now))
        (, ,)
        (VP (VB let)
          (S
            (NP (PRP us))
            (VP (VB go)
              (ADVP (RB forwards) (: :) (RB here))))))
      (VP (VBP are)))
    (PRN (, ,)
      (S
        (NP (DT the) (NNS men))
        (VP (VBZ 's)
          (ADJP (JJ berths))))
      (, ,))
    (RB not)
    (S
      (VP (VBN confined)
        (PP (IN as)
          (PP (IN in)
            (NP (DT a) (NN man-of-war))))))
    (. .)))

discourse(let-3, Now-1)
csubj(are-9, let-3)
nsubj(go-5, us-4)
ccomp(let-3, go-5)
advmod(here-8, forwards-6)
advmod(go-5, here-8)
root(ROOT-0, are-9)
det(men-12, the-11)
nsubj(berths-14, men-12)
cop(berths-14, 's-13)
dep(are-9, berths-14)
neg(are-9, not-16)
parataxis(are-9, confined-17)
prep(confined-17, as-18)
pcomp(as-18, in-19)
det(man-of-war-21, a-20)
pobj(in-19, man-of-war-21)

(ROOT
  (INTJ (UH No) (. !)))

root(ROOT-0, No-1)

(ROOT
  (S
    (NP (NN Luxury))
    (VP
      (VP (VBZ starts)
        (PP (IN from)
          (NP (NN abaft))))
      (, ,)
      (CC and)
      (VP (VBZ is) (RB not)
        (ADJP (RB wholly) (VBN lost)))
      (, ,)
      (PP
        (ADVP (RB even))
        (IN at)
        (NP (DT the) (NN fore-peak))))
    (. .)))

nsubj(starts-2, Luxury-1)
nsubjpass(lost-10, Luxury-1)
root(ROOT-0, starts-2)
prep_from(starts-2, abaft-4)
auxpass(lost-10, is-7)
neg(lost-10, not-8)
advmod(lost-10, wholly-9)
conj_and(starts-2, lost-10)
advmod(starts-2, even-12)
conj_and(starts-2, at-13)
det(fore-peak-15, the-14)
prep_at(starts-2, fore-peak-15)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN kitchen))
        (: ;)
        (SQ (VBZ is)
          (NP (PRP it))
          (ADJP (RB not) (RB admirably) (JJ arranged)))))
    (. ?)))

nsubj(kitchen-4, This-1)
cop(kitchen-4, is-2)
det(kitchen-4, the-3)
root(ROOT-0, kitchen-4)
cop(arranged-10, is-6)
nsubj(arranged-10, it-7)
neg(arranged-10, not-8)
advmod(arranged-10, admirably-9)
dep(kitchen-4, arranged-10)

(ROOT
  (FRAG
    (X
      (X (WP What))
      (NP
        (NP (DT a) (JJ _) (NN multum))
        (PP (IN in)
          (NP (NN parvo)))))
    (VP (VBZ _))
    (. !)))

dep(multum-4, What-1)
det(multum-4, a-2)
amod(multum-4, _-3)
dep(_-7, multum-4)
prep_in(multum-4, parvo-6)
root(ROOT-0, _-7)

(ROOT
  (FRAG (CC And)
    (SBAR
      (WHADVP (WRB how))
      (S
        (NP (NNP delightful))
        (VP (VBP are)
          (NP
            (NP (DT the) (NNS fumes))
            (PP (IN of)
              (NP (DT the) (NN turtle-soup)))))))
    (. !)))

cc(fumes-6, And-1)
advmod(fumes-6, how-2)
nsubj(fumes-6, delightful-3)
cop(fumes-6, are-4)
det(fumes-6, the-5)
root(ROOT-0, fumes-6)
det(turtle-soup-9, the-8)
prep_of(fumes-6, turtle-soup-9)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (NN sea)))
      (NP (PRP we))
      (VP (VBP do)
        (VP (VB meet)
          (PP (IN with)
            (NP (JJ rough) (NN weather)))
          (PP (IN at)
            (NP (NNS times))))))
    (: ;)
    (S (CC but)
      (, ,)
      (PP (IN for)
        (S
          (VP (VBG roughing)
            (NP (PRP it))
            (PRT (RP out)))))
      (, ,)
      (VP (VBP give)
        (NP (PRP me))
        (NP (DT a) (JJ _) (NN yacht) (NN _))))
    (. .)))

prep_at(meet-5, sea-2)
nsubj(meet-5, we-3)
aux(meet-5, do-4)
root(ROOT-0, meet-5)
amod(weather-8, rough-7)
prep_with(meet-5, weather-8)
prep_at(meet-5, times-10)
cc(give-19, but-12)
prepc_for(give-19, roughing-15)
dobj(roughing-15, it-16)
prt(roughing-15, out-17)
parataxis(meet-5, give-19)
iobj(give-19, me-20)
det(_-24, a-21)
amod(_-24, _-22)
nn(_-24, yacht-23)
dobj(give-19, _-24)

(ROOT
  (S
    (SBAR (RB Now) (IN that)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN shown)
            (S
              (NP (PRP you))
              (VP (VB round)
                (NP (DT the) (NN vessel))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD must)
      (VP (VB introduce)
        (NP (DT the) (NNS parties))
        (PP (IN on)
          (NP (NN board)))))
    (. .)))

advmod(shown-5, Now-1)
mark(shown-5, that-2)
nsubj(shown-5, I-3)
aux(shown-5, have-4)
advcl(introduce-13, shown-5)
nsubj(round-7, you-6)
ccomp(shown-5, round-7)
det(vessel-9, the-8)
dobj(round-7, vessel-9)
nsubj(introduce-13, I-11)
aux(introduce-13, must-12)
root(ROOT-0, introduce-13)
det(parties-15, the-14)
dobj(introduce-13, parties-15)
prep_on(introduce-13, board-17)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP observe)
      (NP
        (NP (DT that) (JJ florid) (, ,) (JJ handsome) (NN man))
        (, ,)
        (PP (IN in)
          (NP
            (NP (JJ white) (NNS trousers))
            (CC and)
            (NP (JJ blue) (NN jacket))))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBZ has)
                (NP
                  (NP (DT a) (NN telescope))
                  (PP (IN in)
                    (NP (CD one) (NN hand)))))
              (, ,)
              (CC and)
              (VP (VBZ is)
                (VP (VBG sipping)
                  (NP
                    (NP (DT a) (NN glass))
                    (PP (IN of)
                      (NP (NN brandy)
                        (CC and)
                        (NN water)))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (PRP he))
                        (VP (VBZ has)
                          (ADVP (RB just))
                          (VP (VBN taken)
                            (PRT (RP off))
                            (NP (DT the) (NN skylight))))))))))))))
    (. .)))

nsubj(observe-2, You-1)
root(ROOT-0, observe-2)
det(man-7, that-3)
amod(man-7, florid-4)
amod(man-7, handsome-6)
dobj(observe-2, man-7)
nsubj(has-17, man-7)
nsubj(sipping-26, man-7)
amod(trousers-11, white-10)
prep_in(man-7, trousers-11)
amod(jacket-14, blue-13)
prep_in(man-7, jacket-14)
conj_and(trousers-11, jacket-14)
rcmod(man-7, has-17)
det(telescope-19, a-18)
dobj(has-17, telescope-19)
num(hand-22, one-21)
prep_in(telescope-19, hand-22)
aux(sipping-26, is-25)
rcmod(man-7, sipping-26)
conj_and(has-17, sipping-26)
det(glass-28, a-27)
dobj(sipping-26, glass-28)
dobj(taken-37, glass-28)
prep_of(glass-28, brandy-30)
prep_of(glass-28, water-32)
conj_and(brandy-30, water-32)
nsubj(taken-37, he-34)
aux(taken-37, has-35)
advmod(taken-37, just-36)
rcmod(glass-28, taken-37)
prt(taken-37, off-38)
det(skylight-40, the-39)
dobj(taken-37, skylight-40)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (NN owner))
          (PP (IN of)
            (NP (DT the) (NN vessel))))
        (, ,)
        (CC and)
        (NP
          (NP (DT a) (NN member))
          (PP (IN of)
            (NP (DT the) (NNP Yacht) (NNP Club))))))
    (. .)))

nsubj(owner-4, That-1)
cop(owner-4, is-2)
det(owner-4, the-3)
root(ROOT-0, owner-4)
det(vessel-7, the-6)
prep_of(owner-4, vessel-7)
det(member-11, a-10)
conj_and(owner-4, member-11)
det(Club-15, the-13)
nn(Club-15, Yacht-14)
prep_of(member-11, Club-15)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP (NNP Lord) (NNP B))))
    (: --) (: :)
    (S
      (S
        (NP (PRP he))
        (VP (VBZ looks)
          (PP (IN like)
            (NP (DT a) (NN sailor)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBZ does) (RB not)
          (ADVP (RB much))
          (VP (VB belie)
            (NP (PRP$ his) (NNS looks))))))
    (: ;)
    (CC yet)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN seen)
          (NP (PRP him))
          (PP (IN in)
            (NP
              (NP (PRP$ his) (NNS robes))
              (PP (IN of)
                (NP (NN state)))))
          (PP (IN at)
            (NP
              (NP (DT the) (NN opening))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNP House))
                  (PP (IN of)
                    (NP (NNPS Lords))))))))))
    (. .)))

nsubj(B-4, It-1)
cop(B-4, is-2)
nn(B-4, Lord-3)
root(ROOT-0, B-4)
nsubj(looks-8, he-7)
conj_yet(B-4, looks-8)
det(sailor-11, a-10)
prep_like(looks-8, sailor-11)
nsubj(belie-18, he-14)
aux(belie-18, does-15)
neg(belie-18, not-16)
advmod(belie-18, much-17)
conj_yet(B-4, belie-18)
conj_and(looks-8, belie-18)
poss(looks-20, his-19)
dobj(belie-18, looks-20)
nsubj(seen-25, I-23)
aux(seen-25, have-24)
conj_yet(B-4, seen-25)
dobj(seen-25, him-26)
poss(robes-29, his-28)
prep_in(seen-25, robes-29)
prep_of(robes-29, state-31)
det(opening-34, the-33)
prep_at(seen-25, opening-34)
det(House-37, the-36)
prep_of(opening-34, House-37)
prep_of(House-37, Lords-39)

(ROOT
  (S
    (NP
      (NP (DT The) (NN one))
      (PP (IN near)
        (PP (TO to)
          (NP (PRP him)))))
    (VP (VBZ is)
      (NP
        (NP (NNP Mr) (NNP Stewart))
        (, ,)
        (NP
          (NP (DT a) (NN lieutenant))
          (PP (IN in)
            (NP (DT the) (NN navy))))))
    (. .)))

det(one-2, The-1)
nsubj(Stewart-8, one-2)
prepc_near_to(one-2, to-4)
pobj(one-2, him-5)
cop(Stewart-8, is-6)
nn(Stewart-8, Mr-7)
root(ROOT-0, Stewart-8)
det(lieutenant-11, a-10)
appos(Stewart-8, lieutenant-11)
det(navy-14, the-13)
prep_in(lieutenant-11, navy-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ holds)
      (PRT (RP on))
      (PP (IN by)
        (NP
          (NP (DT the) (NN rigging))
          (PP (IN with)
            (NP (CD one) (NN hand)))))
      (, ,)
      (SBAR (IN because)
        (PRN (, ,)
          (S
            (VP (VBG having)
              (VP (VBN been)
                (ADVP (RB actively))
                (VP (VBN employed)
                  (NP (PDT all) (PRP$ his) (NN life))))))
          (, ,))
        (S
          (NP (PRP he))
          (VP (VBZ does) (RB not)
            (VP (VB know)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (PP (IN with)
                        (NP
                          (NP (NNS hands))
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBP have)
                                (NP
                                  (NP (NN nothing))
                                  (PP (IN in)
                                    (NP (PRP them))))))))))))))))))
    (. .)))

nsubj(holds-2, He-1)
root(ROOT-0, holds-2)
prt(holds-2, on-3)
det(rigging-6, the-5)
prep_by(holds-2, rigging-6)
num(hand-9, one-8)
prep_with(rigging-6, hand-9)
mark(know-24, because-11)
aux(employed-16, having-13)
auxpass(employed-16, been-14)
advmod(employed-16, actively-15)
dep(know-24, employed-16)
predet(life-19, all-17)
poss(life-19, his-18)
dobj(employed-16, life-19)
nsubj(know-24, he-21)
aux(know-24, does-22)
neg(know-24, not-23)
advcl(holds-2, know-24)
nsubj(do-27, what-25)
aux(do-27, to-26)
ccomp(know-24, do-27)
xcomp(know-24, do-27)
prep_with(do-27, hands-29)
nsubj(have-31, hands-29)
rcmod(hands-29, have-31)
dobj(have-31, nothing-32)
prep_in(nothing-32, them-34)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ _) (NN protege) (NN _))
          (PP (IN of)
            (NP (NNP Lord) (NNP B))
            (: --))))
      (, ,)
      (CC and)
      (VP (VBZ is)
        (ADVP (RB now))
        (PP (IN on)
          (NP (NN board)))
        (PP (IN as)
          (NP
            (NP (NN sailing-master))
            (PP (IN of)
              (NP (DT the) (NN yacht)))))))
    (. .)))

nsubj(_-6, He-1)
nsubj(is-13, He-1)
cop(_-6, is-2)
det(_-6, a-3)
amod(_-6, _-4)
nn(_-6, protege-5)
root(ROOT-0, _-6)
nn(B-9, Lord-8)
prep_of(_-6, B-9)
conj_and(_-6, is-13)
advmod(is-13, now-14)
prep_on(is-13, board-16)
prep_as(is-13, sailing-master-18)
det(yacht-21, the-20)
prep_of(sailing-master-18, yacht-21)

(ROOT
  (S
    (NP
      (NP (DT That) (JJ handsome) (, ,) (JJ well-built) (NN man))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ is)
            (VP (VBG standing)
              (PP (IN by)
                (NP (DT the) (NN binnacle)))))))
      (, ,))
    (VP (VBZ is)
      (NP (DT a) (NNP Mr) (NNP Hautaine)))
    (. .)))

det(man-5, That-1)
amod(man-5, handsome-2)
amod(man-5, well-built-4)
nsubj(standing-9, man-5)
nsubj(Hautaine-17, man-5)
aux(standing-9, is-8)
rcmod(man-5, standing-9)
det(binnacle-12, the-11)
prep_by(standing-9, binnacle-12)
cop(Hautaine-17, is-14)
det(Hautaine-17, a-15)
nn(Hautaine-17, Mr-16)
root(ROOT-0, Hautaine-17)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD served)
        (NP (CD six) (NNS years))
        (PP (IN as)
          (NP (NN midshipman)))
        (PP (IN in)
          (NP (DT the) (NN navy))))
      (, ,)
      (CC and)
      (VP (VBD did) (RB not)
        (VP (VB like)
          (NP (PRP it)))))
    (. .)))

nsubj(served-2, He-1)
nsubj(like-14, He-1)
root(ROOT-0, served-2)
num(years-4, six-3)
tmod(served-2, years-4)
prep_as(served-2, midshipman-6)
det(navy-9, the-8)
prep_in(served-2, navy-9)
aux(like-14, did-12)
neg(like-14, not-13)
conj_and(served-2, like-14)
dobj(like-14, it-15)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB then))
    (VP
      (VP (VBD served)
        (NP (CD six) (NNS years))
        (PP (IN in)
          (NP (DT a) (JJ cavalry) (NN regiment))))
      (, ,)
      (CC and)
      (VP (VBD did) (RB not)
        (VP (VB like)
          (NP (PRP it)))))
    (. .)))

nsubj(served-3, He-1)
nsubj(like-14, He-1)
advmod(served-3, then-2)
root(ROOT-0, served-3)
num(years-5, six-4)
tmod(served-3, years-5)
det(regiment-9, a-7)
amod(regiment-9, cavalry-8)
prep_in(served-3, regiment-9)
aux(like-14, did-12)
neg(like-14, not-13)
conj_and(served-3, like-14)
dobj(like-14, it-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (ADVP (RB then))
      (VP (VBD married)))
    (, ,)
    (CC and)
    (S
      (ADVP (RB in))
      (NP (DT a)
        (ADJP (RB much) (JJR shorter))
        (NN probation))
      (VP (VBD found)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD did) (RB not)
              (VP (VB like)
                (NP (DT that))))))))
    (. .)))

nsubj(married-3, He-1)
advmod(married-3, then-2)
root(ROOT-0, married-3)
advmod(found-11, in-6)
det(probation-10, a-7)
advmod(shorter-9, much-8)
amod(probation-10, shorter-9)
nsubj(found-11, probation-10)
conj_and(married-3, found-11)
mark(like-16, that-12)
nsubj(like-16, he-13)
aux(like-16, did-14)
neg(like-16, not-15)
ccomp(found-11, like-16)
dobj(like-16, that-17)

(ROOT
  (S (CC But)
    (S
      (NP (PRP he))
      (VP (VBZ is)
        (ADJP (RB very) (JJ fond)
          (PP (IN of)
            (NP
              (NP (NNS yachts))
              (CC and)
              (NP
                (NP (JJ other) (NNS men) (POS 's))
                (NNS wives)))))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (VBZ does) (RB not)
              (VP (VB like)
                (NP (PRP$ his) (JJ own))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB wherever))
        (S
          (NP (PRP he))
          (VP (VBZ goes))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ is)
        (ADJP (JJ welcome))))
    (. .)))

nsubj(fond-5, he-2)
cop(fond-5, is-3)
advmod(fond-5, very-4)
root(ROOT-0, fond-5)
prep_of(fond-5, yachts-7)
amod(men-10, other-9)
poss(wives-12, men-10)
prep_of(fond-5, wives-12)
conj_and(yachts-7, wives-12)
mark(like-18, if-14)
nsubj(like-18, he-15)
aux(like-18, does-16)
neg(like-18, not-17)
advcl(fond-5, like-18)
poss(own-20, his-19)
dobj(like-18, own-20)
advmod(goes-25, wherever-23)
nsubj(goes-25, he-24)
advcl(welcome-29, goes-25)
nsubj(welcome-29, he-27)
cop(welcome-29, is-28)
conj_and(fond-5, welcome-29)

(ROOT
  (S
    (NP
      (NP (DT That) (JJ young) (NN man))
      (PP (IN with)
        (NP
          (NP (DT an) (JJ embroidered) (NN silk) (NN waistcoat))
          (CC and)
          (NP (JJ white) (NNS gloves))))
      (, ,)
      (VP (VBG bending)
        (S
          (VP (TO to)
            (VP (VB talk)
              (PP (TO to)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (NP (DT the) (NNS ladies)))))))))
      (, ,))
    (VP (VBZ is)
      (NP (DT a) (NNP Mr) (NNP Vaughan)))
    (. .)))

det(man-3, That-1)
amod(man-3, young-2)
nsubj(Vaughan-25, man-3)
det(waistcoat-8, an-5)
amod(waistcoat-8, embroidered-6)
nn(waistcoat-8, silk-7)
prep_with(man-3, waistcoat-8)
amod(gloves-11, white-10)
prep_with(man-3, gloves-11)
conj_and(waistcoat-8, gloves-11)
vmod(man-3, bending-13)
aux(talk-15, to-14)
xcomp(bending-13, talk-15)
prep_to(talk-15, one-17)
det(ladies-20, the-19)
prep_of(one-17, ladies-20)
cop(Vaughan-25, is-22)
det(Vaughan-25, a-23)
nn(Vaughan-25, Mr-24)
root(ROOT-0, Vaughan-25)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN seen)
                (PP (IN at)
                  (NP (NNP Almack) (POS 's)))
                (, ,)
                (PP (IN at)
                  (NP (NNP Crockford) (POS 's)))))))))
    (, ,)
    (CC and)
    (FRAG
      (ADVP (RB everywhere))
      (RB else))
    (. .)))

nsubj(is-2, He-1)
nsubjpass(seen-5, He-1)
root(ROOT-0, is-2)
aux(seen-5, to-3)
auxpass(seen-5, be-4)
xcomp(is-2, seen-5)
prep_at(seen-5, Almack-7)
possessive(Almack-7, 's-8)
prep_at(seen-5, Crockford-11)
possessive(Crockford-11, 's-12)
dep(else-16, everywhere-15)
conj_and(is-2, else-16)

(ROOT
  (S
    (S
      (NP (NN Everybody))
      (VP (VBZ knows)
        (NP (PRP him))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBZ knows)
        (NP (NN everybody))))
    (. .)))

nsubj(knows-2, Everybody-1)
root(ROOT-0, knows-2)
dobj(knows-2, him-3)
nsubj(knows-7, he-6)
conj_and(knows-2, knows-7)
dobj(knows-7, everybody-8)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ little))
          (PP (IN in)
            (NP (NN debt))))))
    (, ,)
    (CC and)
    (S
      (NP (NN yachting))
      (VP (VBZ is)
        (ADJP (JJ convenient))))
    (. .)))

nsubj(little-4, He-1)
cop(little-4, is-2)
det(little-4, a-3)
root(ROOT-0, little-4)
prep_in(little-4, debt-6)
nsubj(convenient-11, yachting-9)
cop(convenient-11, is-10)
conj_and(little-4, convenient-11)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN one))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ sits)
              (PP (IN by)
                (NP (DT the) (NN lady)))))))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN relation))
          (PP (IN of)
            (NP (NNP Lord) (NNP B))))))
    (: --) (: ;)
    (S
      (NP (PRP you))
      (VP (VBP see)
        (ADVP (IN at) (RB once)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP he))
              (VP (VBZ is)))))))
    (. .)))

det(one-2, The-1)
nsubj(sits-4, one-2)
nsubj(relation-10, one-2)
rcmod(one-2, sits-4)
det(lady-7, the-6)
prep_by(sits-4, lady-7)
cop(relation-10, is-8)
det(relation-10, a-9)
root(ROOT-0, relation-10)
nn(B-13, Lord-12)
prep_of(relation-10, B-13)
nsubj(see-17, you-16)
parataxis(relation-10, see-17)
advmod(see-17, at-18)
advmod(at-18, once-19)
dobj(is-22, what-20)
nsubj(is-22, he-21)
ccomp(at-18, is-22)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ apes)
        (NP (DT the) (NN sailor))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBZ has) (RB not)
        (VP (VBN shaved) (, ,)
          (SBAR (IN because)
            (S
              (NP (NNS sailors))
              (VP (VBP have)
                (NP (DT no) (NN time)
                  (S
                    (VP (TO to)
                      (VP (VB shave)
                        (NP (DT every) (NN day))))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBZ has) (RB not)
        (VP (VBN changed)
          (NP (PRP$ his) (NN linen))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (NNS sailors))
              (VP (MD can) (RB not)
                (VP (VB change)
                  (NP (DT every) (NN day)))))))))
    (. .)))

nsubj(apes-2, He-1)
root(ROOT-0, apes-2)
det(sailor-4, the-3)
dobj(apes-2, sailor-4)
nsubj(shaved-9, he-6)
aux(shaved-9, has-7)
neg(shaved-9, not-8)
parataxis(apes-2, shaved-9)
mark(have-13, because-11)
nsubj(have-13, sailors-12)
advcl(shaved-9, have-13)
neg(time-15, no-14)
dobj(have-13, time-15)
aux(shave-17, to-16)
vmod(time-15, shave-17)
det(day-19, every-18)
tmod(shave-17, day-19)
nsubj(changed-24, he-21)
aux(changed-24, has-22)
neg(changed-24, not-23)
parataxis(apes-2, changed-24)
poss(linen-26, his-25)
dobj(changed-24, linen-26)
mark(change-32, because-28)
nsubj(change-32, sailors-29)
aux(change-32, can-30)
neg(change-32, not-31)
advcl(changed-24, change-32)
det(day-34, every-33)
tmod(change-32, day-34)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ has)
      (NP
        (NP (DT a) (NN cigar))
        (PP (IN in)
          (NP
            (NP (PRP$ his) (NN mouth))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP
                  (VP (VBZ makes)
                    (S
                      (NP (PRP him))
                      (ADJP (RB half) (JJ sick))))
                  (CC and)
                  (VP (VBZ annoys)
                    (NP (PRP$ his) (NN company))))))))))
    (. .)))

nsubj(has-2, He-1)
root(ROOT-0, has-2)
det(cigar-4, a-3)
dobj(has-2, cigar-4)
poss(mouth-7, his-6)
prep_in(cigar-4, mouth-7)
nsubj(makes-10, mouth-7)
nsubj(annoys-15, mouth-7)
rcmod(mouth-7, makes-10)
nsubj(sick-13, him-11)
advmod(sick-13, half-12)
xcomp(makes-10, sick-13)
rcmod(mouth-7, annoys-15)
conj_and(makes-10, annoys-15)
poss(company-17, his-16)
dobj(annoys-15, company-17)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ talks)
        (PP (IN of)
          (NP
            (NP (DT the) (NN pleasure))
            (PP (IN of)
              (NP
                (NP (DT a) (JJ rough) (NN sea))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (MD will)
                      (VP (VB drive)
                        (NP (PDT all) (DT the) (NNS ladies))
                        (ADVP (RB below))))))))))))
    (: --)
    (CC and)
    (ADVP (RB then))
    (S
      (NP (PRP they))
      (VP (MD will) (RB not)
        (VP (VB perceive)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBZ is)
                (ADJP (RBR more) (JJ sick)
                  (PP (IN than)
                    (NP (PRP themselves))))))))))
    (. .)))

nsubj(talks-2, He-1)
root(ROOT-0, talks-2)
det(pleasure-5, the-4)
prep_of(talks-2, pleasure-5)
det(sea-9, a-7)
amod(sea-9, rough-8)
prep_of(pleasure-5, sea-9)
nsubj(drive-13, sea-9)
aux(drive-13, will-12)
rcmod(sea-9, drive-13)
predet(ladies-16, all-14)
det(ladies-16, the-15)
dobj(drive-13, ladies-16)
advmod(drive-13, below-17)
advmod(perceive-24, then-20)
nsubj(perceive-24, they-21)
aux(perceive-24, will-22)
neg(perceive-24, not-23)
conj_and(talks-2, perceive-24)
mark(sick-29, that-25)
nsubj(sick-29, he-26)
cop(sick-29, is-27)
advmod(sick-29, more-28)
ccomp(perceive-24, sick-29)
prep_than(sick-29, themselves-31)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ has)
      (NP (DT the) (NN misfortune)
        (S
          (VP
            (VP (TO to)
              (VP (VB be)
                (VP (VBN born)
                  (PP (TO to)
                    (NP (DT a) (JJ large) (NN estate))))))
            (, ,)
            (CC and)
            (VP (TO to)
              (VP (VB be)
                (NP (DT a) (JJ _) (NN fool) (NN _))))))))
    (. .)))

nsubj(has-2, He-1)
root(ROOT-0, has-2)
det(misfortune-4, the-3)
dobj(has-2, misfortune-4)
aux(born-7, to-5)
auxpass(born-7, be-6)
dep(misfortune-4, born-7)
det(estate-11, a-9)
amod(estate-11, large-10)
prep_to(born-7, estate-11)
aux(_-19, to-14)
cop(_-19, be-15)
det(_-19, a-16)
amod(_-19, _-17)
nn(_-19, fool-18)
dep(misfortune-4, _-19)
conj_and(born-7, _-19)

(ROOT
  (S
    (NP (PRP$ His) (NN name))
    (VP (VBZ is)
      (NP (NNP Ossulton)))
    (. .)))

poss(name-2, His-1)
nsubj(Ossulton-4, name-2)
cop(Ossulton-4, is-3)
root(ROOT-0, Ossulton-4)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ last))
      (PP (IN of)
        (NP
          (NP (DT the) (NNS gentlemen))
          (PP (IN on)
            (NP (NN board)))
          (SBAR
            (WHNP (WP whom))
            (S
              (NP (PRP I))
              (VP (VBP have)
                (S
                  (VP (TO to)
                    (VP (VB introduce))))))))))
    (VP (VBZ is)
      (NP (NNP Mr) (NNP Seagrove)))
    (. .)))

det(last-2, The-1)
nsubj(Seagrove-15, last-2)
det(gentlemen-5, the-4)
prep_of(last-2, gentlemen-5)
dobj(have-10, gentlemen-5)
nsubj(introduce-12, gentlemen-5)
prep_on(gentlemen-5, board-7)
nsubj(have-10, I-9)
rcmod(gentlemen-5, have-10)
aux(introduce-12, to-11)
xcomp(have-10, introduce-12)
cop(Seagrove-15, is-13)
nn(Seagrove-15, Mr-14)
root(ROOT-0, Seagrove-15)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ is)
      (VP
        (ADVP (RB slightly))
        (VBN made) (, ,)
        (PP (IN with)
          (NP
            (NP (VBN marked) (NNS features))
            (PP (JJ full) (IN of)
              (NP (NN intelligence)))))))
    (. .)))

nsubjpass(made-4, He-1)
auxpass(made-4, is-2)
advmod(made-4, slightly-3)
root(ROOT-0, made-4)
amod(features-8, marked-7)
prep_with(made-4, features-8)
dep(features-8, full-9)
prep_of(features-8, intelligence-11)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBZ has)
        (VP (VBN been)
          (VP (VBN brought)
            (PRT (RP up))
            (PP (TO to)
              (NP (DT the) (NN bar))))))
      (: ;)
      (CC and)
      (VP (VBZ has)
        (NP
          (NP (DT every) (NN qualification))
          (PP (CC but)
            (NP (NN application))))))
    (. .)))

nsubjpass(brought-4, He-1)
nsubj(has-11, He-1)
aux(brought-4, has-2)
auxpass(brought-4, been-3)
root(ROOT-0, brought-4)
prt(brought-4, up-5)
det(bar-8, the-7)
prep_to(brought-4, bar-8)
conj_and(brought-4, has-11)
det(qualification-13, every-12)
dobj(has-11, qualification-13)
prep(qualification-13, but-14)
pobj(but-14, application-15)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBZ has)
        (ADVP (RB never))
        (VP (VBN had)
          (NP (DT a) (NN brief))))
      (, ,)
      (CC nor)
      (VP (VBZ has)
        (NP (PRP he)
          (NP
            (NP (DT a) (NN chance))
            (PP (IN of)
              (NP (CD one)))))))
    (. .)))

nsubj(had-4, He-1)
nsubj(has-9, He-1)
aux(had-4, has-2)
neg(had-4, never-3)
root(ROOT-0, had-4)
det(brief-6, a-5)
dobj(had-4, brief-6)
conj_nor(had-4, has-9)
dep(chance-12, he-10)
det(chance-12, a-11)
dobj(has-9, chance-12)
prep_of(chance-12, one-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN fiddler))
          (PP (IN of)
            (NP (DT the) (NN company))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBZ has)
        (VP
          (VP (VBN locked)
            (PRT (RP up))
            (NP (PRP$ his) (NNS chambers)))
          (CC and)
          (VP (VBN come) (, ,)
            (PP (IN by)
              (NP
                (NP (NN invitation))
                (PP (IN of)
                  (NP (PRP$ his) (NN lordship)))))
            (, ,)
            (S
              (VP (TO to)
                (VP (VB play)
                  (PP (IN on)
                    (NP
                      (NP (NN board))
                      (PP (IN of)
                        (NP (PRP$ his) (NN yacht))))))))))))
    (. .)))

nsubj(fiddler-4, He-1)
cop(fiddler-4, is-2)
det(fiddler-4, the-3)
root(ROOT-0, fiddler-4)
det(company-7, the-6)
prep_of(fiddler-4, company-7)
nsubj(locked-12, he-10)
nsubj(come-17, he-10)
nsubj(play-26, he-10)
aux(locked-12, has-11)
conj_and(fiddler-4, locked-12)
prt(locked-12, up-13)
poss(chambers-15, his-14)
dobj(locked-12, chambers-15)
conj_and(fiddler-4, come-17)
conj_and(locked-12, come-17)
prep_by(come-17, invitation-20)
poss(lordship-23, his-22)
prep_of(invitation-20, lordship-23)
aux(play-26, to-25)
xcomp(come-17, play-26)
prep_on(play-26, board-28)
poss(yacht-31, his-30)
prep_of(board-28, yacht-31)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (RB yet))
        (S
          (VP (TO to)
            (VP (VB describe)
              (NP (DT the) (NNS ladies)))))))
    (: --)
    (S
      (ADVP (RB perhaps))
      (NP (PRP I))
      (VP (MD should)
        (VP (VB have)
          (VP (VBD commenced)
            (PP (IN with)
              (NP (PRP them)))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (MD must)
        (VP (VB excuse)
          (NP (PRP myself))
          (PP (IN upon)
            (NP
              (NP (DT the) (NN principle))
              (PP (IN of)
                (S
                  (VP (VBG reserving)
                    (NP (DT the) (JJS best))
                    (PP (TO to)
                      (NP (DT the) (JJ last)))))))))))
    (. .)))

nsubj(have-2, I-1)
nsubj(describe-5, I-1)
root(ROOT-0, have-2)
advmod(have-2, yet-3)
aux(describe-5, to-4)
xcomp(have-2, describe-5)
det(ladies-7, the-6)
dobj(describe-5, ladies-7)
advmod(commenced-13, perhaps-9)
nsubj(commenced-13, I-10)
aux(commenced-13, should-11)
aux(commenced-13, have-12)
parataxis(have-2, commenced-13)
prep_with(commenced-13, them-15)
nsubj(excuse-19, I-17)
aux(excuse-19, must-18)
parataxis(have-2, excuse-19)
dobj(excuse-19, myself-20)
det(principle-23, the-22)
prep_upon(excuse-19, principle-23)
prepc_of(principle-23, reserving-25)
det(best-27, the-26)
dobj(reserving-25, best-27)
det(last-30, the-29)
prep_to(reserving-25, last-30)

(ROOT
  (S
    (S
      (NP (DT All) (NN puppet-showmen))
      (VP (VBP do)
        (ADVP (RB so))))
    (: :)
    (CC and)
    (S
      (NP (WDT what))
      (VP (VBZ is)
        (ADVP (DT this)
          (CC but))
        (NP
          (NP (DT the) (JJ first) (NN scene))
          (PP (IN in)
            (NP (PRP$ my) (NN puppet-show))))))
    (. ?)))

det(puppet-showmen-2, All-1)
nsubj(do-3, puppet-showmen-2)
root(ROOT-0, do-3)
advmod(do-3, so-4)
nsubj(scene-13, what-7)
cop(scene-13, is-8)
dep(but-10, this-9)
advmod(scene-13, but-10)
det(scene-13, the-11)
amod(scene-13, first-12)
conj_and(do-3, scene-13)
poss(puppet-show-16, my-15)
prep_in(scene-13, puppet-show-16)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD will)
      (VP (VB describe)
        (NP (PRP them))
        (PP (VBG according)
          (PP (TO to)
            (NP (NN seniority))))))
    (. .)))

nsubj(describe-3, We-1)
aux(describe-3, will-2)
root(ROOT-0, describe-3)
dobj(describe-3, them-4)
prepc_according_to(describe-3, to-6)
pobj(describe-3, seniority-7)

(ROOT
  (S
    (NP
      (NP (DT That) (JJ tall) (, ,) (JJ thin) (, ,) (JJ cross-looking) (NN lady))
      (PP (IN of)
        (NP (NN forty-five))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN spinster))
        (, ,)
        (CC and)
        (NP
          (NP (NN sister))
          (PP (TO to)
            (NP (NNP Lord) (NNP B))))
        (: --)))
    (. .)))

det(lady-7, That-1)
amod(lady-7, tall-2)
amod(lady-7, thin-4)
amod(lady-7, cross-looking-6)
nsubj(spinster-12, lady-7)
prep_of(lady-7, forty-five-9)
cop(spinster-12, is-10)
det(spinster-12, a-11)
root(ROOT-0, spinster-12)
conj_and(spinster-12, sister-15)
nn(B-18, Lord-17)
prep_to(sister-15, B-18)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ has)
        (VP (VBN been)
          (VP (VBN persuaded) (, ,)
            (ADVP
              (ADVP (RB very) (RB much))
              (PP (IN against)
                (NP (PRP$ her) (NN will))))
            (, ,)
            (S
              (VP (TO to)
                (VP (VB come)
                  (PP (IN on)
                    (NP (NN board))))))))))
    (: ;)
    (CC but)
    (S
      (NP
        (NP (PRP$ her) (NNS notions))
        (PP (IN of)
          (NP (NN propriety))))
      (VP (MD would) (RB not)
        (VP (VB permit)
          (NP (PRP$ her) (NN niece)
            (S
              (VP (TO to)
                (VP (VB embark)
                  (PP (IN under)
                    (NP
                      (NP (DT the) (NN protection))
                      (PP (IN of)
                        (NP (RB only) (PRP$ her) (NN father))))))))))))
    (. .)))

nsubjpass(persuaded-4, She-1)
nsubj(come-13, She-1)
aux(persuaded-4, has-2)
auxpass(persuaded-4, been-3)
root(ROOT-0, persuaded-4)
advmod(much-7, very-6)
advmod(persuaded-4, much-7)
poss(will-10, her-9)
prep_against(much-7, will-10)
aux(come-13, to-12)
xcomp(persuaded-4, come-13)
prep_on(come-13, board-15)
poss(notions-19, her-18)
nsubj(permit-24, notions-19)
prep_of(notions-19, propriety-21)
aux(permit-24, would-22)
neg(permit-24, not-23)
conj_but(persuaded-4, permit-24)
poss(niece-26, her-25)
dobj(permit-24, niece-26)
aux(embark-28, to-27)
vmod(niece-26, embark-28)
det(protection-31, the-30)
prep_under(embark-28, protection-31)
advmod(father-35, only-33)
poss(father-35, her-34)
prep_of(protection-31, father-35)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ is)
        (ADJP (VBN frightened)
          (PP (IN at)
            (NP (NN everything))))))
    (: :)
    (S
      (SBAR (IN if)
        (S
          (NP (DT a) (NN rope))
          (VP (VBZ is)
            (VP (VBN thrown)
              (PRT (RP down))
              (PP (IN on)
                (NP (DT the) (NN deck)))))))
      (, ,)
      (ADVP (RB up))
      (NP (PRP she))
      (VP
        (VP (VBZ starts))
        (, ,)
        (CC and)
        (VP (VBD cries) (, ,) (`` ``)
          (INTJ (UH Oh) (. !))
          ('' ''))))))

nsubjpass(frightened-3, She-1)
auxpass(frightened-3, is-2)
root(ROOT-0, frightened-3)
prep_at(frightened-3, everything-5)
mark(thrown-11, if-7)
det(rope-9, a-8)
nsubjpass(thrown-11, rope-9)
auxpass(thrown-11, is-10)
advcl(starts-19, thrown-11)
prt(thrown-11, down-12)
det(deck-15, the-14)
prep_on(thrown-11, deck-15)
advmod(she-18, up-17)
nsubj(starts-19, she-18)
nsubj(cries-22, she-18)
parataxis(frightened-3, starts-19)
parataxis(frightened-3, cries-22)
conj_and(starts-19, cries-22)
discourse(cries-22, Oh-25)

(ROOT
  (S
    (S
      (SBAR (IN if)
        (FRAG
          (PP (IN on)
            (NP (DT the) (NN deck)))))
      (, ,)
      (NP (PRP she))
      (VP (VBZ thinks)
        (SBAR
          (S
            (NP (DT the) (NN water))
            (VP (VBZ is)
              (VP (VBG rushing)
                (PRT (RP in))
                (ADVP (RB below))))))))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (S
            (ADVP (RB down) (RB below))
            (PRN (, ,)
              (CC and)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP (DT a) (NN noise))))
              (, ,))
            (NP (PRP she))
            (VP (VBZ is)
              (ADJP (VBN convinced)
                (SBAR
                  (S
                    (NP (EX there))
                    (VP (VBZ is)
                      (NP (NN danger))))))))
          (: ;)
          (CC and)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VB be)
                  (ADJP (RB perfectly) (RB still)))))
            (, ,)
            (NP (PRP she))
            (VP (VBZ is)
              (ADJP (JJ sure))))))
      (NP (EX there))
      (VP (VBZ is)
        (ADJP
          (NP (NN something))
          (JJ wrong))))
    (. .)))

mark(on-2, if-1)
advcl(thinks-7, on-2)
det(deck-4, the-3)
pobj(on-2, deck-4)
nsubj(thinks-7, she-6)
root(ROOT-0, thinks-7)
det(water-9, the-8)
nsubj(rushing-11, water-9)
aux(rushing-11, is-10)
ccomp(thinks-7, rushing-11)
prt(rushing-11, in-12)
advmod(rushing-11, below-13)
mark(is-26, if-15)
advmod(below-17, down-16)
advmod(is-26, below-17)
cc(is-21, and-19)
expl(is-21, there-20)
parataxis(is-26, is-21)
det(noise-23, a-22)
nsubj(is-21, noise-23)
nsubj(is-26, she-25)
advcl(is-43, is-26)
acomp(is-26, convinced-27)
expl(is-29, there-28)
ccomp(convinced-27, is-29)
nsubj(is-29, danger-30)
mark(still-37, if-33)
nsubj(still-37, it-34)
cop(still-37, be-35)
advmod(still-37, perfectly-36)
advcl(sure-41, still-37)
nsubj(sure-41, she-39)
cop(sure-41, is-40)
conj_and(is-26, sure-41)
advcl(is-43, sure-41)
expl(is-43, there-42)
parataxis(thinks-7, is-43)
npadvmod(wrong-45, something-44)
acomp(is-43, wrong-45)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP
        (VP (VBZ fidgets)
          (NP
            (NP (PRP herself))
            (CC and)
            (NP (NN everybody))))
        (, ,)
        (CC and)
        (VP (VBZ is)
          (ADVP (RB quite)
            (NP (DT a) (NN nuisance)))
          (PP (IN with)
            (NP (PRP$ her) (NN pride)
              (CC and)
              (NN ill-humour))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP she))
      (VP
        (VP (VBZ has)
          (NP
            (NP (JJ strict) (NNS notions))
            (PP (IN of)
              (NP (NN propriety)))))
        (, ,)
        (CC and)
        (VP (VBZ sacrifices)
          (NP (PRP herself))
          (PP (IN as)
            (NP (DT a) (NN martyr))))))
    (. .)))

nsubj(fidgets-2, She-1)
nsubj(is-8, She-1)
root(ROOT-0, fidgets-2)
dobj(fidgets-2, herself-3)
dobj(fidgets-2, everybody-5)
conj_and(herself-3, everybody-5)
conj_and(fidgets-2, is-8)
advmod(is-8, quite-9)
det(nuisance-11, a-10)
pobj(quite-9, nuisance-11)
poss(pride-14, her-13)
prep_with(is-8, pride-14)
prep_with(is-8, ill-humour-16)
conj_and(pride-14, ill-humour-16)
nsubj(has-20, she-19)
nsubj(sacrifices-27, she-19)
conj_but(fidgets-2, has-20)
amod(notions-22, strict-21)
dobj(has-20, notions-22)
prep_of(notions-22, propriety-24)
conj_but(fidgets-2, sacrifices-27)
conj_and(has-20, sacrifices-27)
dobj(sacrifices-27, herself-28)
det(martyr-31, a-30)
prep_as(sacrifices-27, martyr-31)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ is)
      (NP (DT the) (NNP Hon.) (NNP Miss) (NNP Ossulton)))
    (. .)))

nsubj(Ossulton-6, She-1)
cop(Ossulton-6, is-2)
det(Ossulton-6, the-3)
nn(Ossulton-6, Hon.-4)
nn(Ossulton-6, Miss-5)
root(ROOT-0, Ossulton-6)

(ROOT
  (S
    (NP
      (NP (DT The) (NN lady))
      (SBAR
        (WHNP (WP who))
        (S (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP she))
              (VP (VBZ smiles))))
          (, ,)
          (VP (VBZ shows)
            (NP
              (NP
                (ADJP (RB so) (JJ many))
                (NNS dimples))
              (PP (IN in)
                (NP (PRP$ her)
                  (ADJP (RB pretty) (JJ oval))
                  (NN face))))))))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ young) (NN widow))
        (PP (IN of)
          (NP
            (NP (DT the) (NN name))
            (PP (IN of)
              (NP (NNP Lascelles)))))))
    (. .)))

det(lady-2, The-1)
dep(shows-9, lady-2)
nsubj(widow-22, lady-2)
advmod(smiles-7, when-5)
nsubj(smiles-7, she-6)
advcl(shows-9, smiles-7)
rcmod(lady-2, shows-9)
advmod(many-11, so-10)
amod(dimples-12, many-11)
dobj(shows-9, dimples-12)
poss(face-17, her-14)
advmod(oval-16, pretty-15)
amod(face-17, oval-16)
prep_in(dimples-12, face-17)
cop(widow-22, is-19)
det(widow-22, a-20)
amod(widow-22, young-21)
root(ROOT-0, widow-22)
det(name-25, the-24)
prep_of(widow-22, name-25)
prep_of(name-25, Lascelles-27)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD married)
      (NP (DT an) (JJ old) (NN man))
      (S
        (VP (TO to)
          (VP (VB please)
            (NP
              (NP (PRP$ her) (NN father)
                (CC and)
                (NN mother))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (ADJP (RB very) (JJ dutiful))
                    (PP (IN on)
                      (NP (PRP$ her) (NN part)))))))))))
    (. .)))

nsubj(married-2, She-1)
root(ROOT-0, married-2)
det(man-5, an-3)
amod(man-5, old-4)
dobj(married-2, man-5)
aux(please-7, to-6)
vmod(married-2, please-7)
poss(father-9, her-8)
dobj(please-7, father-9)
nsubj(dutiful-16, father-9)
dobj(please-7, mother-11)
conj_and(father-9, mother-11)
nsubj(dutiful-16, mother-11)
cop(dutiful-16, was-14)
advmod(dutiful-16, very-15)
rcmod(father-9, dutiful-16)
poss(part-19, her-18)
prep_on(dutiful-16, part-19)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (VP (VBN rewarded)
        (PP (IN by)
          (S
            (VP (VBG finding)
              (S
                (NP (PRP herself))
                (NP
                  (NP (DT a) (NN widow))
                  (PP (IN with)
                    (NP (DT a) (JJ large) (NN fortune))))))))))
    (. .)))

nsubjpass(rewarded-3, She-1)
auxpass(rewarded-3, was-2)
root(ROOT-0, rewarded-3)
agent(rewarded-3, finding-5)
nsubj(widow-8, herself-6)
det(widow-8, a-7)
xcomp(finding-5, widow-8)
det(fortune-12, a-10)
amod(fortune-12, large-11)
prep_with(widow-8, fortune-12)

(ROOT
  (S
    (S
      (S
        (VP (VBG Having)
          (VP (VBN married)
            (NP (DT the) (JJ first) (NN time))
            (S
              (VP (TO to)
                (VP (VB please)
                  (NP (PRP$ her) (NNS parents))))))))
      (, ,)
      (NP (PRP she))
      (VP (VBZ intends)
        (ADVP (RB now))
        (S
          (VP (TO to)
            (VP (VB marry)
              (S
                (VP (TO to)
                  (VP (VB please)
                    (NP (PRP herself))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP she))
      (VP
        (VP (VBZ is)
          (ADJP (RB very) (JJ young)))
        (, ,)
        (CC and)
        (VP (VBZ is)
          (PP (IN in)
            (NP (DT no) (NN hurry))))))
    (. .)))

aux(married-2, Having-1)
vmod(intends-12, married-2)
det(time-5, the-3)
amod(time-5, first-4)
dobj(married-2, time-5)
aux(please-7, to-6)
vmod(married-2, please-7)
poss(parents-9, her-8)
dobj(please-7, parents-9)
nsubj(intends-12, she-11)
nsubj(marry-15, she-11)
nsubj(please-17, she-11)
root(ROOT-0, intends-12)
advmod(intends-12, now-13)
aux(marry-15, to-14)
xcomp(intends-12, marry-15)
aux(please-17, to-16)
xcomp(marry-15, please-17)
dobj(please-17, herself-18)
nsubj(young-24, she-21)
nsubj(is-27, she-21)
cop(young-24, is-22)
advmod(young-24, very-23)
conj_but(intends-12, young-24)
conj_but(intends-12, is-27)
conj_and(young-24, is-27)
neg(hurry-30, no-29)
prep_in(is-27, hurry-30)

(ROOT
  (S
    (NP
      (NP (DT That) (JJ young) (NN lady))
      (PP (IN with)
        (NP
          (NP (PDT such) (DT a) (JJ sweet) (NN expression))
          (PP (IN of)
            (NP (NN countenance))))))
    (VP (VBZ is)
      (NP (DT the) (NNP Hon.) (NNP Miss) (NNP Cecilia) (NNP Ossulton)))
    (. .)))

det(lady-3, That-1)
amod(lady-3, young-2)
nsubj(Ossulton-16, lady-3)
predet(expression-8, such-5)
det(expression-8, a-6)
amod(expression-8, sweet-7)
prep_with(lady-3, expression-8)
prep_of(expression-8, countenance-10)
cop(Ossulton-16, is-11)
det(Ossulton-16, the-12)
nn(Ossulton-16, Hon.-13)
nn(Ossulton-16, Miss-14)
nn(Ossulton-16, Cecilia-15)
root(ROOT-0, Ossulton-16)

(ROOT
  (S
    (S
      (S
        (NP (PRP She))
        (VP (VBZ is)
          (UCP
            (NP (JJ lively))
            (, ,)
            (ADJP (VBG witty))
            (, ,)
            (CC and)
            (VP (VBZ has)
              (NP
                (NP (DT no) (NN fear))
                (PP (IN in)
                  (NP (PRP$ her) (NN composition))))))))
      (: ;)
      (CC but)
      (S
        (NP (PRP she))
        (VP (VBZ is)
          (ADJP (RB very) (JJ young))
          (ADVP (RB yet))
          (, ,)
          (ADJP (RB not) (JJR more))
          (PP (IN than)
            (NP (CD seventeen)))))
      (: --)
      (CC and)
      (S
        (NP (NN nobody))
        (VP (VBZ knows)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP she))
              (ADVP (RB really))
              (VP (VBZ is)))))))
    (: --)
    (S
      (NP (PRP she))
      (VP (VBZ does) (RB not)
        (VP (VB know)
          (NP (PRP herself)))))
    (. .)))

nsubj(lively-3, She-1)
nsubj(witty-5, She-1)
nsubj(has-8, She-1)
cop(lively-3, is-2)
root(ROOT-0, lively-3)
amod(lively-3, witty-5)
conj_and(lively-3, witty-5)
conj_and(lively-3, has-8)
neg(fear-10, no-9)
dobj(has-8, fear-10)
poss(composition-13, her-12)
prep_in(fear-10, composition-13)
nsubj(young-19, she-16)
cop(young-19, is-17)
advmod(young-19, very-18)
conj_but(lively-3, young-19)
advmod(young-19, yet-20)
neg(more-23, not-22)
acomp(young-19, more-23)
prep_than(young-19, seventeen-25)
nsubj(knows-29, nobody-28)
conj_and(lively-3, knows-29)
dobj(is-33, what-30)
nsubj(is-33, she-31)
advmod(is-33, really-32)
ccomp(knows-29, is-33)
nsubj(know-38, she-35)
aux(know-38, does-36)
neg(know-38, not-37)
parataxis(lively-3, know-38)
dobj(know-38, herself-39)

(ROOT
  (S
    (NP (DT These))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS parties))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP meet)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN cabin))
                  (PP (IN of)
                    (NP (DT the) (NN yacht))))))))))
    (. .)))

nsubj(parties-4, These-1)
cop(parties-4, are-2)
det(parties-4, the-3)
root(ROOT-0, parties-4)
nsubj(meet-6, parties-4)
rcmod(parties-4, meet-6)
det(cabin-9, the-8)
prep_in(meet-6, cabin-9)
det(yacht-12, the-11)
prep_of(cabin-9, yacht-12)

(ROOT
  (S
    (NP (DT The) (NN crew))
    (VP (VBP consist)
      (PP (IN of)
        (NP
          (NP (CD ten) (JJ fine) (NN seamen))
          (, ,)
          (NP (DT the) (NN steward))
          (CC and)
          (NP (DT the) (NN cook)))))
    (. .)))

det(crew-2, The-1)
nsubj(consist-3, crew-2)
root(ROOT-0, consist-3)
num(seamen-7, ten-5)
amod(seamen-7, fine-6)
prep_of(consist-3, seamen-7)
det(steward-10, the-9)
prep_of(consist-3, steward-10)
conj_and(seamen-7, steward-10)
det(cook-13, the-12)
prep_of(consist-3, cook-13)
conj_and(seamen-7, cook-13)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADVP (RB also))
        (NP
          (NP (NNP Lord) (NNP B))
          (: --)
          (SQ (VBZ 's)
            (NP
              (NP (NN valet))
              (, ,)
              (NP
                (NP (NNP Mr) (NNP Ossulton) (POS 's))
                (NN gentleman))
              (, ,))))))
    (CC and)
    (S
      (NP (DT the) (NN lady))
      (VP (VBZ 's) (: -)
        (NP
          (NP (NN maid))
          (PP (IN of)
            (NP (NNP Miss) (NNP Ossulton))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(is-2, also-3)
nn(B-5, Lord-4)
nsubj(is-2, B-5)
dep(B-5, 's-7)
nsubj('s-7, valet-8)
nn(Ossulton-11, Mr-10)
poss(gentleman-13, Ossulton-11)
appos(valet-8, gentleman-13)
det(lady-17, the-16)
nsubj(maid-20, lady-17)
cop(maid-20, 's-18)
conj_and(is-2, maid-20)
nn(Ossulton-23, Miss-22)
prep_of(maid-20, Ossulton-23)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (RB not) (VBG being)
        (ADJP (JJ accommodation))
        (PP (IN for)
          (NP (PRP them)))))
    (, ,)
    (NP (DT the) (JJ other) (NNS servants))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBN left)
          (PP (IN on)
            (NP (NN shore))))))
    (. .)))

expl(being-3, There-1)
neg(being-3, not-2)
dep(left-13, being-3)
acomp(being-3, accommodation-4)
prep_for(being-3, them-6)
det(servants-10, the-8)
amod(servants-10, other-9)
nsubjpass(left-13, servants-10)
aux(left-13, have-11)
auxpass(left-13, been-12)
root(ROOT-0, left-13)
prep_on(left-13, shore-15)

(ROOT
  (S
    (S
      (NP (DT The) (NN yacht))
      (VP (VBZ is)
        (ADVP (RB now))
        (PP (IN under)
          (NP (NN way)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ her) (NNS sails))
      (VP (VBP are) (RB all)
        (VP (VBN set))))
    (. .)))

det(yacht-2, The-1)
nsubj(is-3, yacht-2)
root(ROOT-0, is-3)
advmod(is-3, now-4)
prep_under(is-3, way-6)
poss(sails-10, her-9)
nsubjpass(set-13, sails-10)
auxpass(set-13, are-11)
advmod(set-13, all-12)
conj_and(is-3, set-13)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ is)
      (VP (VBG running)
        (PP (IN between)
          (NP
            (NP
              (NP (NNP Drake) (POS 's))
              (NNP Island))
            (CC and)
            (NP (DT the) (JJ main))))))
    (. .)))

nsubj(running-3, She-1)
aux(running-3, is-2)
root(ROOT-0, running-3)
poss(Island-7, Drake-5)
prep_between(running-3, Island-7)
det(main-10, the-9)
prep_between(running-3, main-10)
conj_and(Island-7, main-10)

(ROOT
  (S
    (NP (NNP Dinner))
    (VP (VBZ has)
      (VP (VBN been)
        (VP (VBN announced))))
    (. .)))

nsubjpass(announced-4, Dinner-1)
aux(announced-4, has-2)
auxpass(announced-4, been-3)
root(ROOT-0, announced-4)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (DT the) (NN reader))
        (VP (VBZ has)
          (VP (VBN learnt)
            (NP (NN something))
            (PP (IN about)
              (NP (DT the) (NNS preparations)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP leave)
      (S
        (NP (PRP him))
        (VP (TO to)
          (VP (VB judge)
            (SBAR (IN whether)
              (S
                (NP (PRP it))
                (VP (VBP be) (RB not)
                  (ADJP (RB very) (JJ pleasant)
                    (S
                      (VP (TO to)
                        (VP (VB sit)
                          (PRT (RP down))
                          (PP (TO to)
                            (NP
                              (NP (NN dinner))
                              (PP (IN in)
                                (NP (DT a) (NN yacht))))))))))))))))
    (. .)))

mark(learnt-5, As-1)
det(reader-3, the-2)
nsubj(learnt-5, reader-3)
aux(learnt-5, has-4)
advcl(leave-12, learnt-5)
dobj(learnt-5, something-6)
det(preparations-9, the-8)
prep_about(learnt-5, preparations-9)
nsubj(leave-12, I-11)
root(ROOT-0, leave-12)
dobj(leave-12, him-13)
nsubj(judge-15, him-13)
aux(judge-15, to-14)
xcomp(leave-12, judge-15)
mark(pleasant-21, whether-16)
nsubj(pleasant-21, it-17)
nsubj(sit-23, it-17)
cop(pleasant-21, be-18)
neg(pleasant-21, not-19)
advmod(pleasant-21, very-20)
ccomp(judge-15, pleasant-21)
aux(sit-23, to-22)
xcomp(pleasant-21, sit-23)
prt(sit-23, down-24)
prep_to(sit-23, dinner-26)
det(yacht-29, a-28)
prep_in(dinner-26, yacht-29)

(ROOT
  (S
    (S
      (NP (DT The) (NN air))
      (VP (VBZ has)
        (VP (VBN given)
          (NP (NN everybody))
          (NP (DT an) (NN appetite)))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (SBAR (RB not) (IN until)
          (S
            (NP (DT the) (NN cloth))
            (VP (VBD was)
              (VP (VBN removed)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN conversation))
                    (VP (VBD became)
                      (ADJP (JJ general)))))))))))
    (. .)))

det(air-2, The-1)
nsubj(given-4, air-2)
aux(given-4, has-3)
root(ROOT-0, given-4)
iobj(given-4, everybody-5)
det(appetite-7, an-6)
dobj(given-4, appetite-7)
nsubj(was-11, it-10)
conj_and(given-4, was-11)
dep(removed-17, not-12)
mark(removed-17, until-13)
det(cloth-15, the-14)
nsubjpass(removed-17, cloth-15)
auxpass(removed-17, was-16)
advcl(was-11, removed-17)
mark(became-21, that-18)
det(conversation-20, the-19)
nsubj(became-21, conversation-20)
ccomp(removed-17, became-21)
acomp(became-21, general-22)

(ROOT
  (SINV (`` ``)
    (FRAG
      (NP (NNP Mr) (NNP Seagrove)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN lordship))
    (, ,) (`` ``)
    (S
      (S
        (NP (PRP you))
        (ADVP (RB very) (RB nearly))
        (VP (VBD lost)
          (NP (PRP$ your) (NN passage))))
      (: ;)
      (S
        (NP (PRP I))
        (VP (VBD expected)
          (NP (PRP you))
          (NP (JJ last) (NNP Thursday)))))
    (. .) ('' '')))

nn(Seagrove-3, Mr-2)
dep(said-6, Seagrove-3)
root(ROOT-0, said-6)
poss(lordship-8, his-7)
nsubj(said-6, lordship-8)
nsubj(lost-14, you-11)
advmod(nearly-13, very-12)
advmod(lost-14, nearly-13)
ccomp(said-6, lost-14)
poss(passage-16, your-15)
dobj(lost-14, passage-16)
nsubj(expected-19, I-18)
parataxis(lost-14, expected-19)
dobj(expected-19, you-20)
amod(Thursday-22, last-21)
tmod(expected-19, Thursday-22)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ sorry))
        (, ,)
        (NP (PRP$ my) (NN lord))))
    (, ,)
    (NP (DT that) (NN business))
    (VP (VBD prevented)
      (NP (PRP$ my) (NN sooner))
      (S
        (VP (VBG attending)
          (PP (TO to)
            (NP
              (NP (PRP$ your) (NN lordship) (POS 's))
              (NN kind) (NNS summons))))))
    (. .) ('' '')))

nsubj(sorry-4, I-2)
cop(sorry-4, am-3)
ccomp(prevented-11, sorry-4)
poss(lord-7, my-6)
dep(sorry-4, lord-7)
det(business-10, that-9)
nsubj(prevented-11, business-10)
root(ROOT-0, prevented-11)
poss(sooner-13, my-12)
dobj(prevented-11, sooner-13)
xcomp(prevented-11, attending-14)
poss(lordship-17, your-16)
poss(summons-20, lordship-17)
nn(summons-20, kind-19)
prep_to(attending-14, summons-20)

(ROOT
  (SINV (`` ``)
    (S
      (NP
        (NP (NNP Come))
        (, ,)
        (NP (NNP Seagrove))
        (, ,))
      (VP (VBP do) (RB n't)
        (VP (VB be)
          (ADJP (JJ nonsensical)))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP Hautaine))
        (: ;) (`` ``)
        (S
          (NP (PRP you))
          (VP (VBD told)
            (NP (PRP me))))))
    (NP
      (NP (PRP yourself))
      (, ,)
      (NP
        (NP (DT the) (JJ other) (NN evening))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBD were)
              (ADJP (JJ talkative))
              (, ,)
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (VBD had)
                    (ADVP (RB never))
                    (VP (VBN had)
                      (NP
                        (NP (DT a) (NN brief))
                        (PP (IN in)
                          (NP (PRP$ your) (NN life)))))))))))))
    (. .) ('' '')))

nsubj(nonsensical-9, Come-2)
appos(Come-2, Seagrove-4)
aux(nonsensical-9, do-6)
neg(nonsensical-9, n't-7)
cop(nonsensical-9, be-8)
ccomp(said-12, nonsensical-9)
root(ROOT-0, said-12)
dobj(said-12, Hautaine-13)
nsubj(told-17, you-16)
dep(Hautaine-13, told-17)
dobj(told-17, me-18)
nsubj(said-12, yourself-19)
det(evening-23, the-21)
amod(evening-23, other-22)
appos(yourself-19, evening-23)
mark(had-34, evening-23)
advmod(talkative-28, when-25)
nsubj(talkative-28, you-26)
cop(talkative-28, were-27)
rcmod(evening-23, talkative-28)
nsubj(had-34, you-31)
aux(had-34, had-32)
neg(had-34, never-33)
ccomp(talkative-28, had-34)
det(brief-36, a-35)
dobj(had-34, brief-36)
poss(life-39, your-38)
prep_in(brief-36, life-39)

(ROOT
  (S (`` ``)
    (FRAG (CC And)
      (NP (DT a)
        (ADJP (RB very) (JJ fortunate))
        (NN circumstance)))
    (, ,) ('' '')
    (VP (VBD replied)
      (NP
        (NP (NNP Seagrove))
        (: ;) (`` ``)
        (SBAR (IN for)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBD had)
                  (VP (VBN had)
                    (NP (DT a) (NN brief))))))
            (NP (PRP I))
            (VP (MD should) (RB not)
              (VP (VB have)
                (VP (VBN known)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (VP (VBN done)
                            (PP (IN with)
                              (NP (PRP it)))))))))))))))
    (. .)))

cc(circumstance-6, And-2)
det(circumstance-6, a-3)
advmod(fortunate-5, very-4)
amod(circumstance-6, fortunate-5)
dep(replied-9, circumstance-6)
root(ROOT-0, replied-9)
dobj(replied-9, Seagrove-10)
nsubj(done-28, Seagrove-10)
mark(known-24, for-13)
mark(had-17, if-14)
nsubj(had-17, I-15)
aux(had-17, had-16)
advcl(known-24, had-17)
det(brief-19, a-18)
dobj(had-17, brief-19)
nsubj(known-24, I-20)
aux(known-24, should-21)
neg(known-24, not-22)
aux(known-24, have-23)
rcmod(Seagrove-10, known-24)
aux(done-28, to-26)
aux(done-28, have-27)
ccomp(known-24, done-28)
xcomp(known-24, done-28)
prep_with(done-28, it-30)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is) (RB not)
        (NP (PRP$ my) (NN fault))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBN fit)
          (PP (IN for)
            (NP
              (NP (NN nothing))
              (PP (CC but)
                (NP (DT a) (NN commissioner))))))))
    (. .)))

nsubj(fault-5, It-1)
cop(fault-5, is-2)
neg(fault-5, not-3)
poss(fault-5, my-4)
root(ROOT-0, fault-5)
nsubjpass(fit-9, I-7)
auxpass(fit-9, am-8)
parataxis(fault-5, fit-9)
prep_for(fit-9, nothing-11)
prep(nothing-11, but-12)
det(commissioner-14, a-13)
pobj(but-12, commissioner-14)

(ROOT
  (S (CC But)
    (ADVP (RB still))
    (NP (PRP I))
    (VP (VBD had)
      (NP
        (NP (NN business))
        (, ,)
        (CC and)
        (NP
          (NP
            (ADJP (RB very) (JJ important))
            (NN business))
          (, ,)
          (ADVP (RB too)))))
    (. .)))

cc(had-4, But-1)
advmod(had-4, still-2)
nsubj(had-4, I-3)
root(ROOT-0, had-4)
dobj(had-4, business-5)
advmod(important-9, very-8)
amod(business-10, important-9)
dobj(had-4, business-10)
conj_and(business-5, business-10)
advmod(business-10, too-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBN summoned)
        (PP (IN by)
          (NP (NNP Ponsonby)))
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN with)
                (NP (PRP him)))
              (PP (TO to)
                (NP (NNP Tattersall) (POS 's)))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB give)
                    (NP (PRP$ my) (NN opinion))
                    (NP
                      (NP (RB about) (DT a) (NN horse))
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (VBZ wishes)
                            (S
                              (VP
                                (VP (TO to)
                                  (VP (VB purchase)))
                                (, ,)
                                (CC and)
                                (ADVP (RB then))
                                (VP (TO to)
                                  (VP (VB attend)
                                    (NP (PRP him))
                                    (PP (TO to)
                                      (NP (NNP Forest) (NNP Wild)))
                                    (S
                                      (VP (TO to)
                                        (VP (VB plead)
                                          (NP (PRP$ his) (NN cause))
                                          (PP (IN with)
                                            (NP (PRP$ his) (NN uncle))))))))))))))))))))))
    (. .) ('' '')))

nsubjpass(summoned-3, I-1)
nsubj(go-7, I-1)
nsubj(give-15, I-1)
auxpass(summoned-3, was-2)
root(ROOT-0, summoned-3)
agent(summoned-3, Ponsonby-5)
aux(go-7, to-6)
xcomp(summoned-3, go-7)
prep_with(go-7, him-9)
prep_to(go-7, Tattersall-11)
possessive(Tattersall-11, 's-12)
aux(give-15, to-14)
xcomp(go-7, give-15)
poss(opinion-17, my-16)
dep(give-15, opinion-17)
advmod(horse-20, about-18)
det(horse-20, a-19)
dobj(give-15, horse-20)
nsubj(wishes-22, he-21)
rcmod(horse-20, wishes-22)
aux(purchase-24, to-23)
ccomp(wishes-22, purchase-24)
advmod(attend-29, then-27)
aux(attend-29, to-28)
ccomp(wishes-22, attend-29)
conj_and(purchase-24, attend-29)
dobj(attend-29, him-30)
nn(Wild-33, Forest-32)
prep_to(attend-29, Wild-33)
aux(plead-35, to-34)
vmod(attend-29, plead-35)
poss(cause-37, his-36)
dobj(plead-35, cause-37)
poss(uncle-40, his-39)
prep_with(plead-35, uncle-40)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ appears) (, ,)
        (ADVP (RB then))
        (, ,)
        (SBAR (IN that)
          (SINV
            (S
              (NP (PRP you))
              (VP (VBD were)
                (VP (VBN retained))))
            (, ,) ('' '')
            (VP (VBD replied))
            (NP (NNP Lord) (NNP B))))))
    (: --) (: ;) (`` ``)
    (S
      (S
        (VP (MD may)))
      (NP (PRP I))
      (VP (VBP ask)
        (NP (PRP you))
        (SBAR (IN whether)
          (S
            (NP (PRP$ your) (NN friend))
            (VP (VBD gained)
              (NP (PRP$ his) (NN cause)))))))
    (. ?) ('' '')))

nsubj(appears-3, It-2)
root(ROOT-0, appears-3)
advmod(appears-3, then-5)
mark(replied-13, that-7)
nsubjpass(retained-10, you-8)
auxpass(retained-10, were-9)
ccomp(replied-13, retained-10)
dep(appears-3, replied-13)
nn(B-15, Lord-14)
nsubj(replied-13, B-15)
dep(ask-21, may-19)
nsubj(ask-21, I-20)
parataxis(appears-3, ask-21)
dobj(ask-21, you-22)
mark(gained-26, whether-23)
poss(friend-25, your-24)
nsubj(gained-26, friend-25)
ccomp(ask-21, gained-26)
poss(cause-28, his-27)
dobj(gained-26, cause-28)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (S
        (NP (PRP$ my))
        (VP (VBD lord)))
      (, ,)
      (S
        (NP (PRP he))
        (VP (VBD lost)
          (NP (PRP$ his) (NN cause)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD gained)
        (NP (DT a) (NN suit))))
    (. .) ('' '')))

discourse(lord-5, No-2)
nsubj(lord-5, my-4)
root(ROOT-0, lord-5)
nsubj(lost-8, he-7)
parataxis(lord-5, lost-8)
poss(cause-10, his-9)
dobj(lost-8, cause-10)
nsubj(gained-14, he-13)
conj_but(lord-5, gained-14)
det(suit-16, a-15)
dobj(gained-14, suit-16)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Expound)
        (NP (PRP$ your) (NN riddle))
        (, ,) (VB sir)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Cecilia) (NNP Ossulton))
    (. .)))

ccomp(said-9, Expound-2)
poss(riddle-4, your-3)
dobj(Expound-2, riddle-4)
dep(Expound-2, sir-6)
root(ROOT-0, said-9)
nn(Ossulton-11, Cecilia-10)
nsubj(said-9, Ossulton-11)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN fact))
    (VP (VBZ is) (, ,)
      (SBAR (IN that)
        (S
          (NP (JJ old) (NNP Ponsonby))
          (VP (VBZ is)
            (ADJP (RB very) (JJ anxious)))))
      (SBAR (IN that)
        (S
          (NP (NNP William))
          (VP (MD should)
            (VP (VB marry)
              (NP
                (NP (NNP Miss) (NNP Percival))
                (, ,)
                (SBAR (WP$ whose)
                  (S
                    (NP (NNS estates))
                    (VP (VB join)
                      (PRT (RP on))
                      (PP (TO to)
                        (NP (NNP Forest) (NNP Wild))))))))))))
    (. .)))

det(fact-3, The-2)
nsubj(is-4, fact-3)
root(ROOT-0, is-4)
mark(anxious-11, that-6)
amod(Ponsonby-8, old-7)
nsubj(anxious-11, Ponsonby-8)
cop(anxious-11, is-9)
advmod(anxious-11, very-10)
ccomp(is-4, anxious-11)
mark(marry-15, that-12)
nsubj(marry-15, William-13)
aux(marry-15, should-14)
ccomp(is-4, marry-15)
nn(Percival-17, Miss-16)
dobj(marry-15, Percival-17)
dep(join-21, Percival-17)
nsubj(join-21, estates-20)
rcmod(Percival-17, join-21)
prt(join-21, on-22)
nn(Wild-25, Forest-24)
prep_to(join-21, Wild-25)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (, ,)
      (NP (PRP$ my) (NN friend) (NNP William))
      (VP (VBZ is) (RB about)
        (ADJP (RB as) (JJ fond)
          (PP (IN of)
            (NP (NN marriage))))
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBP am)
              (PP (IN of)
                (NP (NN law))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB thereby))
      (NP (NN issue))
      (VP (VBD was)
        (VP (VBN joined))))
    (. .) ('' '')))

advmod(fond-9, Now-1)
poss(William-5, my-3)
nn(William-5, friend-4)
nsubj(fond-9, William-5)
cop(fond-9, is-6)
advmod(fond-9, about-7)
advmod(fond-9, as-8)
root(ROOT-0, fond-9)
prep_of(fond-9, marriage-11)
mark(am-14, as-12)
nsubj(am-14, I-13)
advcl(fond-9, am-14)
prep_of(am-14, law-16)
advmod(joined-22, thereby-19)
nsubjpass(joined-22, issue-20)
auxpass(joined-22, was-21)
conj_and(fond-9, joined-22)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB why))
    (SQ (VBD were)
      (NP
        (NP (PRP you))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN called)
                (PP (IN in))))))))
    (. ?) ('' '')))

cc(were-4, But-2)
advmod(were-4, why-3)
root(ROOT-0, were-4)
nsubj(were-4, you-5)
aux(called-8, to-6)
auxpass(called-8, be-7)
vmod(you-5, called-8)
prep(called-8, in-9)

(ROOT
  (NP (NNP inquired) (NNP Mrs) (NNP Lascelles) (. .)))

nn(Lascelles-3, inquired-1)
nn(Lascelles-3, Mrs-2)
root(ROOT-0, Lascelles-3)

(ROOT
  (S (`` ``)
    (S
      (SBAR (IN Because)
        (FRAG (, ,)
          (NP (NN madam))))
      (, ,)
      (NP (RB as) (NNP Ponsonby))
      (ADVP (RB never))
      (VP (VBZ buys)
        (NP (DT a) (NN horse))
        (PP (IN without)
          (S
            (VP (VBG consulting)
              (NP (PRP me)))))))
    (: --) ('' '')
    (S (`` ``)
      (S
        (NP (PRP I))
        (VP (MD can) (RB not)
          (VP (VB see)
            (NP
              (NP (DT the) (NN analogy))
              (, ,)
              (NP (NN sir))
              (, ,)))))
      ('' '')
      (VP (VBD observed)
        (S
          (NP
            (NP (NNP Miss) (NNP Ossulton))
            (, ,)
            (NP (JJ senior))
            (, ,))
          (VP (VBG bridling)
            (PRT (RP up))))))
    (. .)))

mark(madam-4, Because-2)
advcl(buys-9, madam-4)
advmod(Ponsonby-7, as-6)
nsubj(buys-9, Ponsonby-7)
neg(buys-9, never-8)
root(ROOT-0, buys-9)
det(horse-11, a-10)
dobj(buys-9, horse-11)
prepc_without(buys-9, consulting-13)
dobj(consulting-13, me-14)
nsubj(see-21, I-18)
aux(see-21, can-19)
neg(see-21, not-20)
ccomp(observed-28, see-21)
csubj(observed-28, see-21)
det(analogy-23, the-22)
dobj(see-21, analogy-23)
appos(analogy-23, sir-25)
parataxis(buys-9, observed-28)
nn(Ossulton-30, Miss-29)
nsubj(bridling-34, Ossulton-30)
appos(Ossulton-30, senior-32)
dep(observed-28, bridling-34)
prt(bridling-34, up-35)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (VP (VB Pardon)
          (NP (PRP me))
          (, ,) (VB madam)))
      (: :)
      (S
        (NP (DT the) (NN fact))
        (VP (VBZ is))))
    (, ,) ('' '')
    (VP (VBD continued))
    (NP
      (NP (NNP Seagrove))
      (, ,) (`` ``)
      (S
        (S
          (NP (DT that))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP I))
              (ADVP (RB always))
              (VP (VBP have)
                (S
                  (VP (TO to)
                    (VP (VB back)
                      (NP
                        (NP (NNP Ponsonby) (POS 's))
                        (NNS horses))))))))
          (, ,)
          (NP (PRP he))
          (VP (VBD thought)
            (NP (PRP it))
            (ADVP (RB right))
            (SBAR (IN that)
              (S
                (PRN (, ,)
                  (PP (IN in)
                    (NP (DT this) (NN instance)))
                  (, ,))
                (S
                  (NP (PRP I))
                  (VP (MD should)
                    (VP (VB back)
                      (NP (PRP him)))))
                (: ;)
                (S
                  (NP (PRP he))
                  (VP (VBD required)
                    (NP (JJ special) (NNS pleading))))
                (, ,)
                (CC but)
                (S
                  (NP (PRP$ his) (NN uncle))
                  (VP (VBD tried)
                    (NP (PRP him))
                    (PP (IN for)
                      (NP (DT the) (NN capital) (NN offence)))))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP he))
          (VP (VBD was) (RB not)
            (VP (VBN allowed)
              (NP (NN counsel)))))))
    (. .)))

ccomp(continued-12, Pardon-2)
dobj(Pardon-2, me-3)
dep(Pardon-2, madam-5)
det(fact-8, the-7)
nsubj(is-9, fact-8)
parataxis(Pardon-2, is-9)
root(ROOT-0, continued-12)
nsubj(continued-12, Seagrove-13)
nsubj(thought-29, that-16)
mark(have-21, as-18)
nsubj(have-21, I-19)
nsubj(back-23, I-19)
advmod(have-21, always-20)
advcl(thought-29, have-21)
aux(back-23, to-22)
xcomp(have-21, back-23)
poss(horses-26, Ponsonby-24)
dobj(back-23, horses-26)
nsubj(thought-29, he-28)
dep(Seagrove-13, thought-29)
dobj(thought-29, it-30)
advmod(thought-29, right-31)
mark(back-40, that-32)
dep(back-40, in-34)
det(instance-36, this-35)
pobj(in-34, instance-36)
nsubj(back-40, I-38)
aux(back-40, should-39)
ccomp(thought-29, back-40)
dobj(back-40, him-41)
nsubj(required-44, he-43)
ccomp(thought-29, required-44)
conj_but(back-40, required-44)
amod(pleading-46, special-45)
dobj(required-44, pleading-46)
poss(uncle-50, his-49)
nsubj(tried-51, uncle-50)
ccomp(thought-29, tried-51)
conj_but(back-40, tried-51)
dobj(tried-51, him-52)
det(offence-56, the-54)
nn(offence-56, capital-55)
prep_for(tried-51, offence-56)
nsubjpass(allowed-62, he-59)
auxpass(allowed-62, was-60)
neg(allowed-62, not-61)
dep(Seagrove-13, allowed-62)
conj_and(thought-29, allowed-62)
dobj(allowed-62, counsel-63)

(ROOT
  (S
    (SBAR
      (SBAR (IN As)
        (S
          (SBAR (RB soon) (IN as)
            (S
              (S
                (NP (PRP we))
                (VP (VBD arrived)))
              (, ,)
              (CC and)
              (S
                (NP (PRP I))
                (VP (VBD had)
                  (VP (VBD bowed)
                    (NP (PRP myself))
                    (PP (IN into)
                      (NP (DT the) (NN room))))))))
          (, ,)
          (NP (NNP Mr) (NNP Ponsonby))
          (VP (VBD bowed)
            (NP (PRP me))
            (PRT (RP out))
            (ADVP (RB again)))))
      (: --)
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (MD would)
            (VP (VB have)
              (VP (VBN been)
                (ADJP (RB infinitely) (RBR more) (JJ jarring))
                (PP (TO to)
                  (NP (PRP$ my) (NNS feelings))))))))
      (, ,))
    (VP (VBD had) (RB not)
      (ADVP (DT the) (NN door))
      (VP (VBN been)
        (VP (VBN left)
          (NP (NN a-jar)))))
    (. .) ('' '')))

mark(bowed-18, As-1)
advmod(arrived-5, soon-2)
mark(arrived-5, as-3)
nsubj(arrived-5, we-4)
advcl(bowed-18, arrived-5)
nsubj(bowed-10, I-8)
aux(bowed-10, had-9)
conj_and(arrived-5, bowed-10)
advcl(bowed-18, bowed-10)
dobj(bowed-10, myself-11)
det(room-14, the-13)
prep_into(bowed-10, room-14)
nn(Ponsonby-17, Mr-16)
nsubj(bowed-18, Ponsonby-17)
csubjpass(left-39, bowed-18)
dobj(bowed-18, me-19)
prt(bowed-18, out-20)
advmod(bowed-18, again-21)
nsubj(jarring-29, which-23)
aux(jarring-29, would-24)
aux(jarring-29, have-25)
cop(jarring-29, been-26)
advmod(jarring-29, infinitely-27)
advmod(jarring-29, more-28)
dep(bowed-18, jarring-29)
poss(feelings-32, my-31)
prep_to(jarring-29, feelings-32)
aux(left-39, had-34)
neg(left-39, not-35)
det(door-37, the-36)
advmod(left-39, door-37)
auxpass(left-39, been-38)
root(ROOT-0, left-39)
dobj(left-39, a-jar-40)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (NP
        (NP (NN anything))
        (PP (CC but)
          (NP
            (NP (NN pun))
            (, ,)
            (NP (NNP Seagrove))
            (, ,) ('' '')
            (VP (VBN interrupted)
              (NP (NNP Hautaine)))))))
    (. .)))

root(ROOT-0, Do-2)
dobj(Do-2, anything-3)
prep(anything-3, but-4)
pobj(but-4, pun-5)
appos(pun-5, Seagrove-7)
vmod(pun-5, interrupted-10)
dobj(interrupted-10, Hautaine-11)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB take)
        (NP
          (NP (DT a) (NN glass))
          (PP (IN of)
            (NP (NN wine))))))
    (. .) ('' '')))

discourse(take-8, Well-2)
advmod(take-8, then-4)
nsubj(take-8, I-6)
aux(take-8, will-7)
root(ROOT-0, take-8)
det(glass-10, a-9)
dobj(take-8, glass-10)
prep_of(glass-10, wine-12)

(ROOT
  (S
    (S
      (S (`` ``)
        (VP (VB Do)
          (ADVP (RB so)))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (PRP$ his) (NN lordship))))
    (: ;) (`` ``)
    (S (CC but)
      (NP (JJ recollect) (DT the) (JJ whole) (NN company))
      (VP (VBP are)
        (ADJP (JJ impatient)
          (PP (IN for)
            (NP (PRP$ your) (NN story))))))
    (. .) ('' '')))

csubj(said-6, Do-2)
advmod(Do-2, so-3)
root(ROOT-0, said-6)
poss(lordship-8, his-7)
dobj(said-6, lordship-8)
cc(impatient-17, but-11)
amod(company-15, recollect-12)
det(company-15, the-13)
amod(company-15, whole-14)
nsubj(impatient-17, company-15)
cop(impatient-17, are-16)
parataxis(said-6, impatient-17)
poss(story-20, your-19)
prep_for(impatient-17, story-20)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB assure)
        (NP (PRP you))
        (, ,)
        (NP
          (NP (PRP$ my) (NN lord))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADJP (JJ equal)
                  (PP (TO to)
                    (NP
                      (NP (DT any) (NN scene))
                      (PP (IN in)
                        (NP (DT a) (NN comedy))))))))))))
    (. .) ('' '')))

nsubj(assure-4, I-2)
aux(assure-4, can-3)
root(ROOT-0, assure-4)
dobj(assure-4, you-5)
poss(lord-8, my-7)
dobj(assure-4, lord-8)
mark(equal-13, that-10)
nsubj(equal-13, it-11)
cop(equal-13, was-12)
dep(lord-8, equal-13)
det(scene-16, any-15)
prep_to(equal-13, scene-16)
det(comedy-19, a-18)
prep_in(scene-16, comedy-19)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (S
        (VP (VB be)
          (NP (PRP it))))
      (VP (VBD observed)
        (SBAR (IN that)
          (S
            (NP (NNP Mr) (NNP Seagrove))
            (VP (VBD had)
              (NP
                (NP (DT a) (JJ great) (NN deal))
                (PP (IN of)
                  (NP (JJ comic) (NN talent)))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD was)
          (NP (DT an) (JJ excellent) (NN mimic)))
        (, ,)
        (CC and)
        (VP (MD could)
          (VP (VB alter)
            (NP (PRP$ his) (NN voice))
            (ADVP (RB almost))
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (VBD pleased))))))))
    (. .)))

advmod(observed-4, Now-1)
cop(it-3, be-2)
csubj(observed-4, it-3)
root(ROOT-0, observed-4)
mark(had-8, that-5)
nn(Seagrove-7, Mr-6)
nsubj(had-8, Seagrove-7)
ccomp(observed-4, had-8)
det(deal-11, a-9)
amod(deal-11, great-10)
dobj(had-8, deal-11)
amod(talent-14, comic-13)
prep_of(deal-11, talent-14)
nsubj(mimic-20, he-16)
nsubj(alter-24, he-16)
cop(mimic-20, was-17)
det(mimic-20, an-18)
amod(mimic-20, excellent-19)
parataxis(observed-4, mimic-20)
aux(alter-24, could-23)
parataxis(observed-4, alter-24)
conj_and(mimic-20, alter-24)
poss(voice-26, his-25)
dobj(alter-24, voice-26)
advmod(alter-24, almost-27)
mark(pleased-30, as-28)
nsubj(pleased-30, he-29)
advcl(alter-24, pleased-30)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN custom))
          (PP (IN of)
            (NP (PRP$ his)))
          (S
            (VP (TO to)
              (VP (VB act)
                (NP
                  (NP (DT a) (NN scene))
                  (PP (RB as) (IN between)
                    (NP (JJ other) (NNS people))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD performed)
        (NP (PRP it))
        (ADVP (RB remarkably) (RB well))))
    (. .)))

nsubj(custom-4, It-1)
cop(custom-4, was-2)
det(custom-4, a-3)
root(ROOT-0, custom-4)
prep_of(custom-4, his-6)
aux(act-8, to-7)
vmod(custom-4, act-8)
det(scene-10, a-9)
dobj(act-8, scene-10)
advmod(scene-10, as-11)
amod(people-14, other-13)
prep_between(scene-10, people-14)
nsubj(performed-18, he-17)
conj_and(custom-4, performed-18)
dobj(performed-18, it-19)
advmod(well-21, remarkably-20)
advmod(performed-18, well-21)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB Whenever))
      (S
        (NP (PRP he))
        (VP (VBD said)
          (SBAR (IN that)
            (S
              (NP
                (NP (NN anything))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (VP (VBG going)
                        (S
                          (VP (TO to)
                            (VP (VB narrate)))))))))
              (VP (VBD was) (`` ``)
                (ADJP (RB as) (JJ good)
                  (PP (IN as)
                    (NP (DT a) (NN comedy))))))))))
    (, ,) ('' '')
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB generally))
      (VP (VBN understood)
        (PP (IN by)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD were)
                  (ADJP (VBN acquainted)
                    (PP (IN with)
                      (NP (PRP him))))
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (VBD was)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN asked)
                                (S (RB so)
                                  (VP (TO to)
                                    (VP (VB do))))))))))))))))))
    (. .)))

advmod(said-3, Whenever-1)
nsubj(said-3, he-2)
advcl(understood-23, said-3)
mark(good-14, that-4)
nsubj(good-14, anything-5)
nsubj(going-8, he-6)
nsubj(narrate-10, he-6)
aux(going-8, was-7)
rcmod(anything-5, going-8)
aux(narrate-10, to-9)
xcomp(going-8, narrate-10)
cop(good-14, was-11)
advmod(good-14, as-13)
ccomp(said-3, good-14)
det(comedy-17, a-16)
prep_as(good-14, comedy-17)
nsubjpass(understood-23, it-20)
auxpass(understood-23, was-21)
advmod(understood-23, generally-22)
root(ROOT-0, understood-23)
agent(understood-23, those-25)
nsubjpass(acquainted-28, those-25)
auxpass(acquainted-28, were-27)
rcmod(those-25, acquainted-28)
prep_with(acquainted-28, him-30)
mark(was-33, that-31)
nsubj(was-33, he-32)
nsubjpass(asked-36, he-32)
nsubj(do-39, he-32)
ccomp(acquainted-28, was-33)
aux(asked-36, to-34)
auxpass(asked-36, be-35)
xcomp(was-33, asked-36)
advmod(do-39, so-37)
aux(do-39, to-38)
xcomp(asked-36, do-39)

(ROOT
  (S
    (NP (NNP Cecilia) (NNP Ossulton))
    (ADVP (RB therefore))
    (ADVP (RB immediately))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (NP (NNP Pray))
        (VP (VB act)
          (NP (PRP it))
          (, ,)
          (NP (NNP Mr) (NNP Seagrove)))))
    (. .) ('' '')))

nn(Ossulton-2, Cecilia-1)
nsubj(said-5, Ossulton-2)
advmod(said-5, therefore-3)
advmod(said-5, immediately-4)
root(ROOT-0, said-5)
nsubj(act-9, Pray-8)
ccomp(said-5, act-9)
dobj(act-9, it-10)
nn(Seagrove-13, Mr-12)
dobj(act-9, Seagrove-13)

(ROOT
  (S
    (PP (IN Upon)
      (NP (WDT which)))
    (, ,)
    (NP
      (NP
        (NP (NNP Mr) (NNP Seagrove))
        (: --)
        (S
          (S
            (VP (VBG premising)
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP
                      (CONJP (RB not) (JJ only))
                      (VP (VBN heard))
                      (, ,)
                      (CONJP (CC but)
                        (RB also))
                      (VP (VBN seen)
                        (NP
                          (NP (DT all))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD passed))))))))))))
          (: --)
          (S
            (VP (VBG changing)
              (NP (PRP$ his) (NN voice))))
          (, ,)
          (CC and)
          (S
            (VP (VBG suiting)
              (NP (DT the) (NN action))
              (PP (TO to)
                (NP (DT the) (NN word)))))))
      (, ,))
    (VP (VBD commenced))
    (. .)))

prep_upon(commenced-34, which-2)
nn(Seagrove-5, Mr-4)
nsubj(commenced-34, Seagrove-5)
dep(Seagrove-5, premising-7)
mark(heard-13, that-8)
nsubj(heard-13, he-9)
nsubj(seen-17, he-9)
aux(heard-13, had-10)
neg(only-12, not-11)
preconj(heard-13, only-12)
ccomp(premising-7, heard-13)
ccomp(premising-7, seen-17)
conj_and(heard-13, seen-17)
dobj(seen-17, all-18)
nsubj(passed-20, all-18)
rcmod(all-18, passed-20)
dep(Seagrove-5, changing-22)
conj_and(premising-7, changing-22)
poss(voice-24, his-23)
dobj(changing-22, voice-24)
dep(Seagrove-5, suiting-27)
conj_and(premising-7, suiting-27)
det(action-29, the-28)
dobj(suiting-27, action-29)
det(word-32, the-31)
prep_to(suiting-27, word-32)
root(ROOT-0, commenced-34)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (MD may)
        (PRN (, ,) ('' '')
          (SINV
            (VP (VBD said))
            (NP (PRP he)))
          (, ,) (`` ``))
        (VP (VB be)
          (VP (VBN called)))))
    (: :) (: --) (`` ``)
    (S
      (NP (CD FIVE))
      (VP (VBD THOUSAND)
        (NP
          (NP (NNP ACRES))
          (PP (IN IN)
            (NP (DT A) (NN RING-FENCE))))))
    (. .) ('' '')))

nsubjpass(called-11, It-2)
aux(called-11, may-3)
parataxis(called-11, said-6)
nsubj(said-6, he-7)
auxpass(called-11, be-10)
root(ROOT-0, called-11)
nsubj(THOUSAND-16, FIVE-15)
parataxis(called-11, THOUSAND-16)
dobj(THOUSAND-16, ACRES-17)
det(RING-FENCE-20, A-19)
prep_in(ACRES-17, RING-FENCE-20)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD shall) (RB not)
        (VP (VB describe)
          (NP
            (NP (NNP Mr) (NNP Seagrove) (POS 's))
            (NNS motions)))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (MD must)
        (VP (VB be)
          (VP (VBN inferred)
            (PP (IN from)
              (NP (PRP$ his) (NNS words)))))))
    (. .) ('' '')))

nsubj(describe-4, We-1)
aux(describe-4, shall-2)
neg(describe-4, not-3)
root(ROOT-0, describe-4)
nn(Seagrove-6, Mr-5)
poss(motions-8, Seagrove-6)
dobj(describe-4, motions-8)
nsubjpass(inferred-13, they-10)
aux(inferred-13, must-11)
auxpass(inferred-13, be-12)
parataxis(describe-4, inferred-13)
poss(words-16, his-15)
prep_from(inferred-13, words-16)

(ROOT
  (S (`` `)
    (NP (PRP It))
    (VP (MD will) (, ,)
      (SBAR
        (SBAR
          (S
            (NP
              (NP (RB then))
              (, ,)
              (NP (NNP William))
              (, ,) ('' '))
            (VP (VBD observed)
              (NP (NNP Mr) (NNP Ponsonby))
              (, ,)
              (S
                (VP
                  (VP (VBG stopping))
                  (, ,)
                  (CC and)
                  (VP (VBG turning)
                    (PP (TO to)
                      (NP (PRP$ his) (NN nephew))))))
              (, ,)
              (SBAR (IN after)
                (S
                  (NP (DT a) (JJ rapid))
                  (VP (VBP walk)
                    (PRT (RP up)
                      (CC and)
                      (RP down))
                    (NP
                      (NP (DT the) (NN room))
                      (PP (IN with)
                        (NP
                          (NP (PRP$ his) (NNS hands))
                          (PP (IN behind)
                            (NP (PRP him))))))
                    (PP (IN under)
                      (NP (PRP$ his) (NN coat)))))))))
        (, ,)
        (CC so)
        (SBAR (IN as)
          (S
            (S
              (VP (TO to)
                (VP (VB allow)
                  (S
                    (NP (DT the) (NNS tails))
                    (VP (TO to)
                      (VP (VB drop)
                        (NP (PRP$ their) (NN perpendicular))
                        (PP (IN about)
                          (NP
                            (NP (CD three) (NNS inches) (JJ clear))
                            (PP (IN of)
                              (NP (PRP$ his) (NN body)))))))))))
            (, ,) (`` `)
            (NP (PRP I))
            (VP (MD may)
              (VP (VB say) (, ,)
                (PP (IN without)
                  (NP (NN contradiction))))))))
      (, ,)
      (VP (VB be)
        (NP
          (NP
            (NP (DT the) (JJS finest) (NN property))
            (PP (IN in)
              (NP (DT the) (NN country))))
          (: --)
          (NP
            (NP
              (QP (CD five) (CD thousand))
              (NNS acres))
            (PP (IN in)
              (NP (DT a) (NN ring-fence)))))))
    (. .) ('' ') ('' '')))

nsubj(property-69, It-2)
aux(property-69, will-3)
nsubj(observed-10, then-5)
appos(then-5, William-7)
advcl(property-69, observed-10)
nn(Ponsonby-12, Mr-11)
dobj(observed-10, Ponsonby-12)
dep(observed-10, stopping-14)
dep(observed-10, turning-17)
conj_and(stopping-14, turning-17)
poss(nephew-20, his-19)
prep_to(turning-17, nephew-20)
mark(walk-25, after-22)
det(rapid-24, a-23)
nsubj(walk-25, rapid-24)
advcl(observed-10, walk-25)
prt(walk-25, up-26)
cc(up-26, and-27)
dep(up-26, down-28)
det(room-30, the-29)
dobj(walk-25, room-30)
poss(hands-33, his-32)
prep_with(room-30, hands-33)
prep_behind(hands-33, him-35)
poss(coat-38, his-37)
prep_under(walk-25, coat-38)
mark(say-61, as-41)
aux(allow-43, to-42)
advcl(say-61, allow-43)
det(tails-45, the-44)
dobj(allow-43, tails-45)
nsubj(drop-47, tails-45)
aux(drop-47, to-46)
xcomp(allow-43, drop-47)
poss(perpendicular-49, their-48)
dobj(drop-47, perpendicular-49)
num(inches-52, three-51)
prep_about(drop-47, inches-52)
amod(inches-52, clear-53)
poss(body-56, his-55)
prep_of(inches-52, body-56)
nsubj(say-61, I-59)
aux(say-61, may-60)
conj_so(observed-10, say-61)
advcl(property-69, say-61)
prep_without(say-61, contradiction-64)
cop(property-69, be-66)
det(property-69, the-67)
amod(property-69, finest-68)
root(ROOT-0, property-69)
det(country-72, the-71)
prep_in(property-69, country-72)
number(thousand-75, five-74)
num(acres-76, thousand-75)
dep(property-69, acres-76)
det(ring-fence-79, a-78)
prep_in(acres-76, ring-fence-79)

(ROOT
  (S
    (S (`` `)
      (NP (PRP I))
      (VP (MD dare)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD will)))))))
    (, ,)
    (S
      (NP (NN uncle))
      (, ,)
      (NP (POS '))
      (VP (VBD replied)
        (NP (NNP William))))
    (, ,)
    (S
      (VP (VBG tapping)
        (NP (PRP$ his) (NN foot))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD lounged)
              (PP (IN in)
                (NP (DT a) (JJ green) (NN morocco) (NN easy-chair))))))))
    (: ;) (`` `)
    (CC and)
    (S
      (ADVP (RB so))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN set)
              (NP (PRP$ your) (NN fancy))
              (PP (IN upon)
                (S
                  (VP (VBG having)
                    (S
                      (NP (DT these) (CD two) (NNS estates))
                      (VP (VBN enclosed)
                        (ADVP (RB together))
                        (PP (IN in)
                          (NP (DT a) (NN ring-fence))))))))))))
      (, ,)
      (NP (PRP you))
      (VP (VBP wish)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (MD should)
              (ADVP (RB also))
              (VP (VB be)
                (VP (VBN enclosed)
                  (PP (IN in)
                    (NP (DT a) (NN ring-fence))))))))))
    (. .) ('' ') ('' '')))

nsubj(say-4, I-2)
nsubj(tapping-14, I-2)
aux(say-4, dare-3)
root(ROOT-0, say-4)
nsubj(will-6, it-5)
ccomp(say-4, will-6)
nsubj(replied-11, uncle-8)
ccomp(say-4, replied-11)
conj_and(say-4, replied-11)
dobj(replied-11, William-12)
conj_and(say-4, tapping-14)
poss(foot-16, his-15)
dobj(tapping-14, foot-16)
mark(lounged-19, as-17)
nsubj(lounged-19, he-18)
advcl(tapping-14, lounged-19)
det(easy-chair-24, a-21)
amod(easy-chair-24, green-22)
nn(easy-chair-24, morocco-23)
prep_in(lounged-19, easy-chair-24)
advmod(wish-48, so-28)
mark(set-33, because-30)
nsubj(set-33, you-31)
aux(set-33, have-32)
advcl(wish-48, set-33)
poss(fancy-35, your-34)
dobj(set-33, fancy-35)
prepc_upon(set-33, having-37)
det(estates-40, these-38)
num(estates-40, two-39)
nsubj(enclosed-41, estates-40)
ccomp(having-37, enclosed-41)
advmod(enclosed-41, together-42)
det(ring-fence-45, a-44)
prep_in(enclosed-41, ring-fence-45)
nsubj(wish-48, you-47)
conj_and(say-4, wish-48)
mark(enclosed-54, that-49)
nsubjpass(enclosed-54, I-50)
aux(enclosed-54, should-51)
advmod(enclosed-54, also-52)
auxpass(enclosed-54, be-53)
ccomp(wish-48, enclosed-54)
det(ring-fence-57, a-56)
prep_in(enclosed-54, ring-fence-57)

(ROOT
  (S (`` `)
    (CC And)
    (NP
      (NP (DT a) (JJ beautiful) (NN property))
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD will)
            (VP (VB be)))))
      (, ,) ('' '))
    (VP (VBD replied)
      (NP (NNP Mr) (NNP Ponsonby)))
    (. .) ('' '')))

cc(replied-11, And-2)
det(property-5, a-3)
amod(property-5, beautiful-4)
nsubj(replied-11, property-5)
nsubj(be-8, it-6)
aux(be-8, will-7)
rcmod(property-5, be-8)
root(ROOT-0, replied-11)
nn(Ponsonby-13, Mr-12)
dobj(replied-11, Ponsonby-13)

(ROOT
  (S (`` `)
    (NP (WDT Which))
    (, ,)
    (VP (VB uncle))
    (. ?)))

nsubj(uncle-4, Which-2)
root(ROOT-0, uncle-4)

(ROOT
  (S
    (NP (DT The)
      (NX
        (NX (NN estate))
        (CC or)
        (NX (NNP the))))
    (VP (VBZ wife))
    (. ?) ('' ') ('' '')))

det(estate-2, The-1)
nsubj(wife-5, estate-2)
conj_or(estate-2, the-4)
nsubj(wife-5, the-4)
root(ROOT-0, wife-5)

(ROOT
  (S
    (S
      (NP (`` `)
        (NP (DT Both))
        (, ,)
        (NP (NN nephew))
        (, ,)
        (NP
          (NP (DT both))
          (: ;)
          (NP (NNP and)))))
    (NP (PRP I))
    (VP (VBP expect)
      (NP (PRP$ your) (NN consent)))
    (. .) ('' ') ('' '')))

dep(expect-10, Both-2)
appos(Both-2, nephew-4)
appos(Both-2, both-6)
dep(both-6, and-8)
nsubj(expect-10, I-9)
root(ROOT-0, expect-10)
poss(consent-12, your-11)
dobj(expect-10, consent-12)

(ROOT
  (S (`` `)
    (INTJ (UH Uncle))
    (, ,)
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (ADJP (JJ avaricious)))
    (. .)))

discourse(avaricious-7, Uncle-2)
nsubj(avaricious-7, I-4)
cop(avaricious-7, am-5)
neg(avaricious-7, not-6)
root(ROOT-0, avaricious-7)

(ROOT
  (S
    (NP (PRP$ Your) (JJ present) (NN property))
    (VP (VBZ is)
      (ADJP (JJ sufficient)
        (PP (IN for)
          (NP (PRP me)))))
    (. .)))

poss(property-3, Your-1)
amod(property-3, present-2)
nsubj(sufficient-5, property-3)
cop(sufficient-5, is-4)
root(ROOT-0, sufficient-5)
prep_for(sufficient-5, me-7)

(ROOT
  (S
    (PP (IN With)
      (NP (PRP$ your) (NN permission)))
    (, ,)
    (PP (RB instead) (IN of)
      (S
        (VP
          (VP (VBG doubling)
            (NP (DT the) (NN property)))
          (, ,)
          (CC and)
          (VP (VBG doubling)
            (NP (PRP myself))))))
    (, ,)
    (NP (PRP I))
    (VP
      (VP (MD will)
        (VP (VB remain)
          (NP (PRP$ your) (JJ sole) (NN heir))))
      (, ,)
      (CC and)
      (VP (VBP single)))
    (. .) ('' ') ('' '')))

poss(permission-3, your-2)
prep_with(remain-17, permission-3)
prepc_instead_of(remain-17, doubling-7)
det(property-9, the-8)
dobj(doubling-7, property-9)
conj_and(doubling-7, doubling-12)
prepc_instead_of(remain-17, doubling-12)
dobj(doubling-12, myself-13)
nsubj(remain-17, I-15)
nsubj(single-23, I-15)
aux(remain-17, will-16)
root(ROOT-0, remain-17)
poss(heir-20, your-18)
amod(heir-20, sole-19)
xcomp(remain-17, heir-20)
conj_and(remain-17, single-23)

(ROOT
  (S
    (NP (`` `) (NNP Observe) (, ,) (NNP William))
    (, ,)
    (NP (PDT such) (DT an) (NN opportunity))
    (VP (MD may) (RB not)
      (VP (VB occur)
        (ADVP (RB again))
        (PP (IN for)
          (NP (NNS centuries)))))
    (. .)))

nn(William-4, Observe-2)
nsubj(occur-11, William-4)
predet(opportunity-8, such-6)
det(opportunity-8, an-7)
nsubj(occur-11, opportunity-8)
aux(occur-11, may-9)
neg(occur-11, not-10)
root(ROOT-0, occur-11)
advmod(occur-11, again-12)
prep_for(occur-11, centuries-14)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD shall)
      (VP (VB restore)
        (NP
          (NP (NNP Forest) (NNP Wild))
          (PP (TO to)
            (NP (PRP$ its) (JJ ancient) (NNS boundaries))))))
    (. .)))

nsubj(restore-3, We-1)
aux(restore-3, shall-2)
root(ROOT-0, restore-3)
nn(Wild-5, Forest-4)
dobj(restore-3, Wild-5)
poss(boundaries-9, its-7)
amod(boundaries-9, ancient-8)
prep_to(Wild-5, boundaries-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ has)
            (VP (VBN been)
              (VP (VBN divided)
                (NP
                  (QP (RB nearly) (CD two) (CD hundred))
                  (NNS years))))))))
    (. .)))

nsubj(know-2, You-1)
root(ROOT-0, know-2)
nsubjpass(divided-6, it-3)
aux(divided-6, has-4)
auxpass(divided-6, been-5)
ccomp(know-2, divided-6)
quantmod(hundred-9, nearly-7)
number(hundred-9, two-8)
num(years-10, hundred-9)
tmod(divided-6, years-10)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (RB now))
      (VP (VBP have)
        (NP
          (NP (DT a) (JJ glorious) (, ,) (JJ golden) (NN opportunity))
          (PP (IN of)
            (S
              (VP (VBG re-uniting)
                (NP (DT the) (CD two) (NNS properties))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (VP (VBD joined))))
      (, ,)
      (NP (DT the) (NN estate))
      (VP (MD will)
        (VP (VB be)
          (SBAR
            (WHADJP (RB exactly) (WP what))
            (S
              (NP (PRP it))
              (VP (VBD was)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (VP (VBD granted)
                      (PP (TO to)
                        (NP (PRP$ our) (NNS ancestors)))
                      (PP (IN by)
                        (NP (NNP Henry) (DT the) (NNP Eighth)))
                      (, ,)
                      (PP (IN at)
                        (NP
                          (NP (DT the) (NN period))
                          (PP (IN of)
                            (NP (DT the) (NNP Reformation))))))))))))))
    (. .)))

nsubj(have-3, We-1)
advmod(have-3, now-2)
root(ROOT-0, have-3)
det(opportunity-8, a-4)
amod(opportunity-8, glorious-5)
amod(opportunity-8, golden-7)
dobj(have-3, opportunity-8)
prepc_of(opportunity-8, re-uniting-10)
det(properties-13, the-11)
num(properties-13, two-12)
dobj(re-uniting-10, properties-13)
advmod(joined-17, when-16)
advcl(be-22, joined-17)
det(estate-20, the-19)
nsubj(be-22, estate-20)
aux(be-22, will-21)
conj_and(have-3, be-22)
advmod(what-24, exactly-23)
dep(was-26, what-24)
nsubj(was-26, it-25)
ccomp(be-22, was-26)
advmod(granted-28, when-27)
advcl(was-26, granted-28)
poss(ancestors-31, our-30)
prep_to(granted-28, ancestors-31)
nn(Eighth-35, Henry-33)
det(Eighth-35, the-34)
prep_by(granted-28, Eighth-35)
det(period-39, the-38)
prep_at(granted-28, period-39)
det(Reformation-42, the-41)
prep_of(period-39, Reformation-42)

(ROOT
  (S
    (S
      (NP (DT This) (NN house))
      (VP (MD must)
        (VP (VB be)
          (VP (VBN pulled)
            (PRT (RP down))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN monastery))
      (VP (VBD left)
        (NP (NN standing))))
    (. .)))

det(house-2, This-1)
nsubjpass(pulled-5, house-2)
aux(pulled-5, must-3)
auxpass(pulled-5, be-4)
root(ROOT-0, pulled-5)
prt(pulled-5, down-6)
det(monastery-10, the-9)
nsubj(left-11, monastery-10)
conj_and(pulled-5, left-11)
dobj(left-11, standing-12)

(ROOT
  (S (RB Then)
    (NP (PRP we))
    (VP
      (VP (MD shall)
        (VP (VB have)
          (NP (PRP$ our) (JJ own))
          (ADVP (RB again))))
      (, ,)
      (CC and)
      (VP
        (NP (DT the) (NN property))
        (PP (IN without)
          (NP (NN encumbrance)))))
    (. .) ('' ') ('' '')))

advmod(have-4, Then-1)
nsubj(have-4, we-2)
aux(have-4, shall-3)
root(ROOT-0, have-4)
poss(own-6, our-5)
dobj(have-4, own-6)
advmod(have-4, again-7)
det(property-11, the-10)
conj_and(have-4, property-11)
prep_without(property-11, encumbrance-13)

(ROOT
  (S (`` `)
    (PP (IN Without)
      (NP (NN encumbrance)))
    (, ,)
    (VP (VBZ uncle))
    (. !)))

prep_without(uncle-5, encumbrance-3)
root(ROOT-0, uncle-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP forget)
      (SBAR (IN that) (, ,)
        (S
          (NP (EX there))
          (VP (MD will)
            (VP (VB be)
              (NP (DT a) (NN wife)))))))
    (. .) ('' ') ('' '')))

nsubj(forget-2, You-1)
root(ROOT-0, forget-2)
mark(wife-9, that-3)
expl(wife-9, there-5)
aux(wife-9, will-6)
cop(wife-9, be-7)
det(wife-9, a-8)
ccomp(forget-2, wife-9)

(ROOT
  (S (`` `)
    (CC And)
    (NP (PRP you))
    (VP (VBP forget)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (MD will)
            (VP (VB be)
              (NP
                (NP
                  (QP (CD five) (CD thousand))
                  (NNS acres))
                (PP (IN in)
                  (NP (DT a) (NN ring-fence)))))))))
    (. .) ('' ') ('' '')))

cc(forget-4, And-2)
nsubj(forget-4, you-3)
root(ROOT-0, forget-4)
mark(acres-11, that-5)
expl(acres-11, there-6)
aux(acres-11, will-7)
cop(acres-11, be-8)
number(thousand-10, five-9)
num(acres-11, thousand-10)
ccomp(forget-4, acres-11)
det(ring-fence-14, a-13)
prep_in(acres-11, ring-fence-14)

(ROOT
  (S (`` `)
    (INTJ (UH Indeed) (, ,) (UH uncle))
    (, ,)
    (NP (PRP you))
    (VP (VBP ring)
      (NP (PRP it))
      (ADVP
        (ADVP (RB too) (RB often))
        (PP (IN in)
          (NP (PRP$ my) (NNS ears))))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD should)
            (VP (VB forget)
              (NP (PRP it)))))))
    (. .)))

discourse(ring-7, Indeed-2)
dep(Indeed-2, uncle-4)
nsubj(ring-7, you-6)
root(ROOT-0, ring-7)
dobj(ring-7, it-8)
advmod(often-10, too-9)
advmod(ring-7, often-10)
poss(ears-13, my-12)
prep_in(often-10, ears-13)
mark(forget-17, that-14)
nsubj(forget-17, I-15)
aux(forget-17, should-16)
ccomp(ring-7, forget-17)
dobj(forget-17, it-18)

(ROOT
  (S (CC But)
    (, ,)
    (ADVP (RB much)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (MD should)
            (VP (VB like)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP
                      (NP (DT the) (JJ happy) (NN possessor))
                      (PP (IN of)
                        (NP (PDT such) (DT a) (NN property))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB feel)
        (ADJP (JJ inclined)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP
                    (NP (DT the) (JJ happy) (NN possessor))
                    (PP (IN of)
                      (NP (NNP Miss) (NNP Percival))))
                  (: ;)
                  (CC and)
                  (NP (DT the)
                    (ADVP
                      (ADVP (RBR more) (RB so))
                      (, ,)
                      (SBAR (IN as)
                        (S
                          (NP (PRP I))
                          (VP (VBP have)
                            (ADVP (RB never))
                            (VP (VBN seen)
                              (NP (DT the)))))))
                    (NN property)))))))))
    (. .) ('' ') ('' '')))

cc(feel-21, But-1)
advmod(feel-21, much-3)
mark(like-7, as-4)
nsubj(like-7, I-5)
nsubj(possessor-12, I-5)
aux(like-7, should-6)
ccomp(much-3, like-7)
aux(possessor-12, to-8)
cop(possessor-12, be-9)
det(possessor-12, the-10)
amod(possessor-12, happy-11)
xcomp(like-7, possessor-12)
predet(property-16, such-14)
det(property-16, a-15)
prep_of(possessor-12, property-16)
nsubj(feel-21, I-18)
aux(feel-21, do-19)
neg(feel-21, not-20)
root(ROOT-0, feel-21)
acomp(feel-21, inclined-22)
aux(possessor-27, to-23)
cop(possessor-27, be-24)
det(possessor-27, the-25)
amod(possessor-27, happy-26)
xcomp(inclined-22, possessor-27)
nn(Percival-30, Miss-29)
prep_of(possessor-27, Percival-30)
det(property-43, the-33)
advmod(so-35, more-34)
advmod(property-43, so-35)
mark(seen-41, as-37)
nsubj(seen-41, I-38)
aux(seen-41, have-39)
neg(seen-41, never-40)
advcl(so-35, seen-41)
ccomp(so-35, seen-41)
dobj(seen-41, the-42)
xcomp(inclined-22, property-43)
conj_and(possessor-27, property-43)

(ROOT
  (S (`` `)
    (NP (PRP We))
    (VP (MD will)
      (VP (VB ride)
        (PP (IN over)
          (NP
            (NP (PRP it) (NN to-morrow))
            (, ,)
            (NP (NNP William))))))
    (. .) ('' ') ('' '')))

nsubj(ride-4, We-2)
aux(ride-4, will-3)
root(ROOT-0, ride-4)
dep(to-morrow-7, it-6)
prep_over(ride-4, to-morrow-7)
appos(to-morrow-7, William-9)

(ROOT
  (NP
    (NP (`` `) (NNP Ride) (IN over) (NNP Miss) (NNP Percival))
    (, ,)
    (NP (NN uncle))
    (. !)))

nn(Percival-5, Ride-2)
amod(Percival-5, over-3)
nn(Percival-5, Miss-4)
root(ROOT-0, Percival-5)
appos(Percival-5, uncle-7)

(ROOT
  (S
    (NP (DT That))
    (VP (MD will) (RB not)
      (VP (VB be)
        (ADJP (RB very) (JJ gallant))))
    (. .)))

nsubj(gallant-6, That-1)
aux(gallant-6, will-2)
neg(gallant-6, not-3)
cop(gallant-6, be-4)
advmod(gallant-6, very-5)
root(ROOT-0, gallant-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will)))
    (, ,)
    (S
      (ADVP (RB however))
      (, ,)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT these) (NNS days))))
      (VP (VBP ride)
        (PP (IN over)
          (NP
            (NP (DT the) (NN property))
            (PP (IN with)
              (NP (PRP you)))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (PRN (, ,)
            (SBAR (IN as)
              (FRAG
                (CONJP (RB well) (IN as))
                (NP (NNP Miss) (NNP Percival))))
            (, ,))
          (S
            (NP (PRP I))
            (VP (VBP have) (RB not)
              (ADVP (RB as) (RB yet))
              (VP (VBN seen)))))))
    (. .) ('' ') ('' '')))

nsubj(will-2, I-1)
root(ROOT-0, will-2)
advmod(ride-10, however-4)
nsubj(ride-10, one-6)
det(days-9, these-8)
prep_of(one-6, days-9)
parataxis(will-2, ride-10)
det(property-13, the-12)
prep_over(ride-10, property-13)
prep_with(property-13, you-15)
dobj(seen-30, which-17)
mark(Percival-23, as-19)
cc(Percival-23, well-20)
nn(Percival-23, Miss-22)
dep(seen-30, Percival-23)
nsubj(seen-30, I-25)
aux(seen-30, have-26)
neg(seen-30, not-27)
advmod(yet-29, as-28)
advmod(seen-30, yet-29)
ccomp(ride-10, seen-30)

(ROOT
  (S (`` `)
    (ADVP (RB Then))
    (NP (PRP I))
    (VP (MD can)
      (VP (VB tell)
        (NP (PRP you))
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBZ is)
              (NP (DT a)
                (ADJP (RB very) (JJ pretty))
                (NN property)))))))
    (. .) ('' ') ('' '')))

advmod(tell-5, Then-2)
nsubj(tell-5, I-3)
aux(tell-5, can-4)
root(ROOT-0, tell-5)
dobj(tell-5, you-6)
nsubj(property-12, she-7)
cop(property-12, is-8)
det(property-12, a-9)
advmod(pretty-11, very-10)
amod(property-12, pretty-11)
dep(tell-5, property-12)

(ROOT
  (S (`` `)
    (PP (IN If))
    (NP (PRP she))
    (VP (VBD were) (RB not)
      (PP (IN in)
        (NP (DT a) (NN ring-fence))))
    (. .) ('' ') ('' '')))

prep(were-4, If-2)
nsubj(were-4, she-3)
root(ROOT-0, were-4)
neg(were-4, not-5)
det(ring-fence-8, a-7)
prep_in(were-4, ring-fence-8)

(ROOT
  (S
    (VP
      (PP (`` `) (IN In)
        (NP
          (NP (JJ good) (NN heart))
          (, ,)
          (NP (NNP William)))))
    (. .)))

root(ROOT-0, In-2)
amod(heart-4, good-3)
pobj(In-2, heart-4)
appos(heart-4, William-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is) (, ,)
      (S
        (NP (PRP I))
        (VP (VB mean)
          (NP (DT an) (JJ excellent) (NN disposition)))))
    (. .) ('' ') ('' '')))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
nsubj(mean-5, I-4)
ccomp(is-2, mean-5)
det(disposition-8, an-6)
amod(disposition-8, excellent-7)
dobj(mean-5, disposition-8)

(ROOT
  (S (`` `)
    (NP (NNP Valuable))
    (VP
      (ADVP (RB in))
      (VBP matrimony))
    (. .) ('' ') ('' '')))

nsubj(matrimony-4, Valuable-2)
advmod(matrimony-4, in-3)
root(ROOT-0, matrimony-4)

(ROOT
  (S (`` `)
    (CC And)
    (NP (NN well))
    (VP (VBZ tilled)
      (PRN (: --)
        (S
          (NP (PRP I))
          (VP (MD should)
            (VP (VB say)
              (ADJP (RB well) (VBN educated)))))
        (: --))
      (PP (IN by)
        (NP
          (NP (PRP$ her) (CD three) (JJ maiden) (NNS aunts))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP are)
                (NP
                  (NP (DT the) (NNS patterns))
                  (PP (IN of)
                    (NP (NN propriety))))))))))
    (. .) ('' ') ('' '')))

cc(tilled-4, And-2)
nsubj(tilled-4, well-3)
root(ROOT-0, tilled-4)
nsubj(say-8, I-6)
aux(say-8, should-7)
parataxis(tilled-4, say-8)
advmod(educated-10, well-9)
acomp(say-8, educated-10)
poss(aunts-16, her-13)
num(aunts-16, three-14)
amod(aunts-16, maiden-15)
prep_by(tilled-4, aunts-16)
nsubj(patterns-21, aunts-16)
cop(patterns-21, are-19)
det(patterns-21, the-20)
rcmod(aunts-16, patterns-21)
prep_of(patterns-21, propriety-23)

(ROOT
  (S (`` `)
    (ADVP (RB Does))
    (NP (DT any) (NN one))
    (VP (VBP follow)
      (NP (DT the) (NN fashion)))
    (. ?) ('' ') ('' '')))

advmod(follow-5, Does-2)
det(one-4, any-3)
nsubj(follow-5, one-4)
root(ROOT-0, follow-5)
det(fashion-7, the-6)
dobj(follow-5, fashion-7)

(ROOT
  (S (`` `)
    (PP (IN In)
      (NP
        (NP (DT a) (JJ high) (NN state))
        (PP (IN of)
          (NP (NN cultivation)))
        (PRN (: ;)
          (INTJ (DT that) (VBZ is))
          (, ,)
          (NP
            (NP (PRP$ her) (NN mind))
            (SBAR
              (S
                (UCP
                  (ADJP (RB highly) (JJ cultivated))
                  (, ,)
                  (CC and)
                  (PP (VBG according)
                    (PP (TO to)
                      (NP (DT the) (JJ last) (JJ new) (NN system))))))))
          (: --))))
    (NP (WDT what))
    (VP (VBZ is)
      (NP (PRP it)))
    (. ?) ('' ') ('' '')))

det(state-5, a-3)
amod(state-5, high-4)
prep_in(it-27, state-5)
prep_of(state-5, cultivation-7)
discourse(mind-13, that-9)
dep(that-9, is-10)
poss(mind-13, her-12)
dep(state-5, mind-13)
advmod(cultivated-15, highly-14)
rcmod(mind-13, cultivated-15)
rcmod(mind-13, according-18)
conj_and(cultivated-15, according-18)
pcomp(according-18, to-19)
det(system-23, the-20)
amod(system-23, last-21)
amod(system-23, new-22)
pobj(to-19, system-23)
nsubj(it-27, what-25)
cop(it-27, is-26)
root(ROOT-0, it-27)

(ROOT
  (S
    (NP (`` `)
      (NP (DT A) (JJ four-course) (NN shift))
      (, ,)
      (ADJP
        (NP (PRP I))
        (JJ presume))
      (, ,) ('' '))
    (VP (VBD replied)
      (NP (NNP William))
      (, ,)
      (S
        (VP
          (VP (VBG laughing) (: ;) (`` `)
            (S
              (NP (DT that))
              (VP (VBZ is)
                (PRN (, ,)
                  (NP (NN dancing) (, ,) (NN singing) (, ,) (NN music))
                  (, ,)))))
          (CC and)
          (VP (VBG drawing)))))
    (. .) ('' ') ('' '')))

det(shift-4, A-2)
amod(shift-4, four-course-3)
nsubj(replied-10, shift-4)
npadvmod(presume-7, I-6)
amod(shift-4, presume-7)
root(ROOT-0, replied-10)
dobj(replied-10, William-11)
dep(replied-10, laughing-13)
nsubj(is-17, that-16)
ccomp(laughing-13, is-17)
nn(music-23, dancing-19)
dep(music-23, singing-21)
dep(is-17, music-23)
dep(replied-10, drawing-26)
conj_and(laughing-13, drawing-26)

(ROOT
  (S (`` `)
    (CC And)
    (NP (JJ only))
    (VP (VBZ seventeen))
    (. !)))

cc(seventeen-4, And-2)
nsubj(seventeen-4, only-3)
root(ROOT-0, seventeen-4)

(ROOT
  (NP
    (NP (NNP Capital) (NN soil))
    (, ,)
    (NP (JJ promising) (JJ good) (NNS crops))
    (. .)))

nn(soil-2, Capital-1)
root(ROOT-0, soil-2)
amod(crops-6, promising-4)
amod(crops-6, good-5)
appos(soil-2, crops-6)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB have)
        (NP (JJR more))))
    (. ?) ('' ') ('' '')))

dep(have-4, What-1)
aux(have-4, would-2)
nsubj(have-4, you-3)
root(ROOT-0, have-4)
dobj(have-4, more-5)

(ROOT
  (NP
    (NP (`` `) (DT A) (JJ very) (JJ pretty) (NN estate))
    (, ,)
    (NP
      (NP (NN uncle))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBD were) (RB not)
            (NP
              (NP (DT the) (NN estate))
              (PP (IN of)
                (NP (NN matrimony))))))))
    (. .)))

det(estate-5, A-2)
amod(estate-5, very-3)
amod(estate-5, pretty-4)
root(ROOT-0, estate-5)
appos(estate-5, uncle-7)
mark(estate-14, if-9)
nsubj(estate-14, it-10)
cop(estate-14, were-11)
neg(estate-14, not-12)
det(estate-14, the-13)
dep(uncle-7, estate-14)
prep_of(estate-14, matrimony-16)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ sorry) (, ,) (RB very) (JJ sorry))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB disappoint)
              (NP (PRP you)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD must)
        (VP (VB decline)
          (S
            (VP (VBG taking)
              (NP
                (NP (DT a) (NN lease))
                (PP (IN of)
                  (NP (PRP it))))
              (PP (IN for)
                (NP (NN life))))))))
    (. .) ('' ') ('' '')))

nsubj(sorry-6, I-1)
nsubj(disappoint-9, I-1)
cop(sorry-6, am-2)
amod(sorry-6, sorry-3)
advmod(sorry-6, very-5)
root(ROOT-0, sorry-6)
aux(disappoint-9, to-8)
xcomp(sorry-6, disappoint-9)
dobj(disappoint-9, you-10)
nsubj(decline-15, I-13)
aux(decline-15, must-14)
conj_but(sorry-6, decline-15)
xcomp(decline-15, taking-16)
det(lease-18, a-17)
dobj(taking-16, lease-18)
prep_of(lease-18, it-20)
prep_for(taking-16, life-22)

(ROOT
  (S (`` `) (RB Then) (, ,)
    (ADVP (RB sir))
    (, ,)
    (VP (VB allow)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB hint)
            (PP (TO to)
              (NP (PRP you)))
            (SBAR (IN that)
              (S
                (PP (IN in)
                  (NP (PRP$ my) (NN testament)))
                (NP (PRP you))
                (VP (VBP are)
                  (ADVP (RB only))
                  (NP (DT a) (NN tenant-at-will)))))))))
    (. .)))

advmod(allow-6, Then-2)
advmod(allow-6, sir-4)
root(ROOT-0, allow-6)
dobj(allow-6, me-7)
nsubj(hint-9, me-7)
aux(hint-9, to-8)
xcomp(allow-6, hint-9)
prep_to(hint-9, you-11)
mark(tenant-at-will-20, that-12)
poss(testament-15, my-14)
prep_in(tenant-at-will-20, testament-15)
nsubj(tenant-at-will-20, you-16)
cop(tenant-at-will-20, are-17)
advmod(tenant-at-will-20, only-18)
det(tenant-at-will-20, a-19)
ccomp(hint-9, tenant-at-will-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP consider)
      (NP (PRP it))
      (NP (DT a) (NN duty))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP owe)
            (PP (TO to)
              (NP (DT the) (NN family)))
            (SBAR (IN that)
              (S
                (NP (DT the) (NN estate))
                (VP (MD should)
                  (VP (VB be)
                    (ADJP (JJ re-united))))))))))
    (. .)))

nsubj(consider-2, I-1)
root(ROOT-0, consider-2)
iobj(consider-2, it-3)
det(duty-5, a-4)
dobj(consider-2, duty-5)
mark(owe-8, that-6)
nsubj(owe-8, I-7)
ccomp(consider-2, owe-8)
det(family-11, the-10)
prep_to(owe-8, family-11)
mark(re-united-17, that-12)
det(estate-14, the-13)
nsubj(re-united-17, estate-14)
aux(re-united-17, should-15)
cop(re-united-17, be-16)
ccomp(owe-8, re-united-17)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (MD can)
        (ADVP (RB only))
        (VP (VB be)
          (VP (VBN done)
            (PP (IN by)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP (PRP$ our) (NN family)))))
            (S
              (VP (VBG marrying)
                (NP (NNP Miss) (NNP Percival))))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP you))
          (VP (MD will) (RB not))))
      (, ,)
      (NP (PRP I))
      (VP
        (VP (MD shall)
          (ADVP (RB now))
          (VP (VB write)
            (PP (TO to)
              (NP (PRP$ your)
                (NX (NNP cousin) (NNP James))))))
        (, ,)
        (CC and)
        (VP
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBP accept)
                (NP (PRP$ my) (NN proposal)))))
          (, ,) (MD shall)
          (VP (VB make)
            (S
              (VP (VBG _)
                (S
                  (NP (PRP him))
                  (VP (VBG _)
                    (NP (PRP$ my) (NN heir))))))))))
    (. .)))

nsubjpass(done-5, That-1)
aux(done-5, can-2)
advmod(done-5, only-3)
auxpass(done-5, be-4)
root(ROOT-0, done-5)
agent(done-5, one-7)
poss(family-10, our-9)
prep_of(one-7, family-10)
xcomp(done-5, marrying-11)
nn(Percival-13, Miss-12)
dobj(marrying-11, Percival-13)
mark(will-18, as-16)
nsubj(will-18, you-17)
advcl(write-24, will-18)
neg(will-18, not-19)
nsubj(write-24, I-21)
nsubj(make-38, I-21)
aux(write-24, shall-22)
advmod(write-24, now-23)
conj_and(done-5, write-24)
poss(James-28, your-26)
nn(James-28, cousin-27)
prep_to(write-24, James-28)
mark(accept-33, if-31)
nsubj(accept-33, he-32)
advcl(make-38, accept-33)
poss(proposal-35, my-34)
dobj(accept-33, proposal-35)
aux(make-38, shall-37)
conj_and(done-5, make-38)
conj_and(write-24, make-38)
xcomp(make-38, _-39)
nsubj(_-41, him-40)
vmod(_-39, _-41)
poss(heir-43, my-42)
dobj(_-41, heir-43)

(ROOT
  (S
    (ADVP (RB Probably))
    (NP (PRP he))
    (VP (MD will)
      (ADVP (RBR more) (RB fully))
      (VP (VB appreciate)
        (NP
          (NP (DT the) (NNS advantages))
          (PP (IN of)
            (NP
              (QP (CD five) (CD thousand))
              (NNS acres))))
        (PP (IN in)
          (NP (DT a) (NN ring-fence)))))
    (. .) ('' ')))

advmod(appreciate-6, Probably-1)
nsubj(appreciate-6, he-2)
aux(appreciate-6, will-3)
advmod(fully-5, more-4)
advmod(appreciate-6, fully-5)
root(ROOT-0, appreciate-6)
det(advantages-8, the-7)
dobj(appreciate-6, advantages-8)
number(thousand-11, five-10)
num(acres-12, thousand-11)
prep_of(advantages-8, acres-12)
det(ring-fence-15, a-14)
prep_in(appreciate-6, ring-fence-15)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (NNP Mr) (NNP Ponsonby))
    (VP (VBD directed)
      (NP (PRP$ his) (NNS steps))
      (PP (IN towards)
        (NP (DT the) (NN door))))
    (. .) ('' '')))

cc(directed-5, And-2)
nn(Ponsonby-4, Mr-3)
nsubj(directed-5, Ponsonby-4)
root(ROOT-0, directed-5)
poss(steps-7, his-6)
dobj(directed-5, steps-7)
det(door-10, the-9)
prep_towards(directed-5, door-10)

(ROOT
  (S (`` `)
    (S
      (NP
        (NP (NNP Stop))
        (, ,)
        (NP (PRP$ my)
          (ADJP (RB dear))
          (NN uncle))
        (, ,) ('' '))
      (VP (VBD cried)
        (NP (NNP William))
        (, ,)
        (S
          (VP (VBG rising)
            (PRT (RP up))
            (PP (IN from)
              (NP (PRP$ his) (NN easy-chair)))))))
    (: ;) (`` `)
    (S
      (NP (PRP we))
      (VP (VBP do) (RB not)
        (ADVP (RB quite))
        (VP (VB understand)
          (NP (CD one) (DT another)))))
    (. .)))

nsubj(cried-9, Stop-2)
poss(uncle-6, my-4)
amod(uncle-6, dear-5)
appos(Stop-2, uncle-6)
root(ROOT-0, cried-9)
dobj(cried-9, William-10)
vmod(cried-9, rising-12)
prt(rising-12, up-13)
poss(easy-chair-16, his-15)
prep_from(rising-12, easy-chair-16)
nsubj(understand-23, we-19)
aux(understand-23, do-20)
neg(understand-23, not-21)
advmod(understand-23, quite-22)
parataxis(cried-9, understand-23)
dobj(understand-23, one-24)
dep(one-24, another-25)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (RB very) (JJ true)
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (MD would)
                (VP
                  (VP (VB prefer)
                    (NP (PDT half) (DT the) (NN property)))
                  (CC and)
                  (VP (JJ remaining)
                    (NP (JJ single))))))))
        (, ,)
        (PP (TO to)
          (NP
            (NP (DT the) (CD two) (NNS estates))
            (CC and)
            (NP
              (NP (DT the) (NN estate))
              (PP (IN of)
                (NP (NN marriage))))))))
    (: ;)
    (CC but)
    (S
      (PP (IN at)
        (NP (DT the) (JJ same) (NN time)))
      (NP (PRP I))
      (VP (VBD did) (RB not)
        (VP (VB tell)
          (NP (PRP you))
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (MD would)
                (VP (VB prefer)
                  (ADVP (RB beggary))
                  (PP (TO to)
                    (NP
                      (NP (DT a) (NN wife))
                      (CC and)
                      (NP
                        (NP
                          (QP (CD five) (CD thousand))
                          (NNS acres))
                        (PP (IN in)
                          (NP (DT a) (NN ring-fence)))))))))))))
    (. .)))

nsubj(true-4, It-1)
cop(true-4, is-2)
advmod(true-4, very-3)
root(ROOT-0, true-4)
mark(prefer-8, that-5)
nsubj(prefer-8, I-6)
nsubj(remaining-13, I-6)
aux(prefer-8, would-7)
ccomp(true-4, prefer-8)
predet(property-11, half-9)
det(property-11, the-10)
dobj(prefer-8, property-11)
ccomp(true-4, remaining-13)
conj_and(prefer-8, remaining-13)
dobj(remaining-13, single-14)
det(estates-19, the-17)
num(estates-19, two-18)
prep_to(true-4, estates-19)
det(estate-22, the-21)
prep_to(true-4, estate-22)
conj_and(estates-19, estate-22)
prep_of(estate-22, marriage-24)
det(time-30, the-28)
amod(time-30, same-29)
prep_at(tell-34, time-30)
nsubj(tell-34, I-31)
aux(tell-34, did-32)
neg(tell-34, not-33)
conj_but(true-4, tell-34)
dobj(tell-34, you-35)
mark(prefer-39, that-36)
nsubj(prefer-39, I-37)
aux(prefer-39, would-38)
ccomp(tell-34, prefer-39)
advmod(prefer-39, beggary-40)
det(wife-43, a-42)
prep_to(prefer-39, wife-43)
number(thousand-46, five-45)
num(acres-47, thousand-46)
prep_to(prefer-39, acres-47)
conj_and(wife-43, acres-47)
det(ring-fence-50, a-49)
prep_in(acres-47, ring-fence-50)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT a) (NN man))
              (PP (IN of)
                (NP (PRP$ your) (NN word))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
dobj(know-2, you-3)
nsubj(man-7, you-3)
aux(man-7, to-4)
cop(man-7, be-5)
det(man-7, a-6)
xcomp(know-2, man-7)
poss(word-10, your-9)
prep_of(man-7, word-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP accept)
        (NP (PRP$ your) (NN proposal))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP need) (RB not)
        (VP (VB put)
          (NP (PRP$ my) (NN cousin) (NNP James))
          (PP (TO to)
            (NP
              (NP (DT the) (NN expense))
              (PP (IN of)
                (NP (NN postage))))))))
    (. .) ('' ') ('' '')))

nsubj(accept-2, I-1)
root(ROOT-0, accept-2)
poss(proposal-4, your-3)
dobj(accept-2, proposal-4)
nsubj(need-8, you-7)
conj_and(accept-2, need-8)
neg(need-8, not-9)
dep(need-8, put-10)
poss(James-13, my-11)
nn(James-13, cousin-12)
dobj(put-10, James-13)
det(expense-16, the-15)
prep_to(put-10, expense-16)
prep_of(expense-16, postage-18)

(ROOT
  (S (`` `)
    (S
      (FRAG
        (ADJP (JJ Very) (JJ good))
        (, ,)
        (NP (NNP William))
        (: ;))
      (NP (PRP I))
      (VP (VBP require)
        (ADVP (DT no) (RBR more))))
    (: :)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBP know)
            (S
              (NP (PRP you))
              (VP (TO to)
                (VP (VB be)
                  (NP
                    (NP (DT a) (NN man))
                    (PP (IN of)
                      (NP (PRP$ your) (NN word))))))))))
      (, ,)
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB consider)
          (S
            (NP (DT this) (NN match))
            (ADJP (RB as) (JJ settled))))))
    (. .)))

amod(good-3, Very-2)
dep(William-5, good-3)
dep(require-8, William-5)
nsubj(require-8, I-7)
root(ROOT-0, require-8)
neg(more-10, no-9)
advmod(require-8, more-10)
mark(know-15, as-13)
nsubj(know-15, I-14)
advcl(consider-27, know-15)
dobj(know-15, you-16)
nsubj(man-20, you-16)
aux(man-20, to-17)
cop(man-20, be-18)
det(man-20, a-19)
xcomp(know-15, man-20)
poss(word-23, your-22)
prep_of(man-20, word-23)
nsubj(consider-27, I-25)
aux(consider-27, shall-26)
conj_and(require-8, consider-27)
det(match-29, this-28)
nsubj(settled-31, match-29)
advmod(settled-31, as-30)
xcomp(consider-27, settled-31)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (PP (IN on)
          (NP (DT this) (NN account)))
        (SBAR (RB only) (IN that)
          (S
            (NP (PRP I))
            (VP (VBD sent)
              (PP (IN for)
                (NP (PRP you))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB now))
      (NP (PRP you))
      (VP (MD may)
        (VP (VB go)
          (ADVP
            (ADVP
              (ADVP (RB back) (RB again))
              (RB as) (RB soon))
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (VBP please))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
det(account-5, this-4)
prep_on(was-2, account-5)
advmod(sent-9, only-6)
mark(sent-9, that-7)
nsubj(sent-9, I-8)
dep(was-2, sent-9)
prep_for(sent-9, you-11)
advmod(go-17, now-14)
nsubj(go-17, you-15)
aux(go-17, may-16)
conj_and(was-2, go-17)
advmod(again-19, back-18)
advmod(go-17, again-19)
advmod(again-19, as-20)
advmod(again-19, soon-21)
mark(please-24, as-22)
nsubj(please-24, you-23)
advcl(again-19, please-24)
ccomp(again-19, please-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB let)
        (S
          (NP (PRP you))
          (VP (VB know)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (DT all))
                (VP (VBZ is)
                  (ADJP (JJ ready)))))))))
    (. .) ('' ') ('' '')))

nsubj(let-3, I-1)
aux(let-3, will-2)
root(ROOT-0, let-3)
nsubj(know-5, you-4)
ccomp(let-3, know-5)
advmod(ready-9, when-6)
nsubj(ready-9, all-7)
cop(ready-9, is-8)
ccomp(know-5, ready-9)

(ROOT
  (S (`` `)
    (S
      (NP (PRP I))
      (VP (MD must)
        (VP (VB be)
          (PP (IN at)
            (NP (NNP Tattersall) (POS 's)))
          (PP (IN on)
            (NP
              (NP (NNP Monday))
              (, ,)
              (NP (NN uncle)))))))
    (: ;)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN horse))
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD must)
                (VP (VB have)
                  (PP (IN for)
                    (NP (JJ next) (NN season))))))))))
    (. .)))

nsubj(be-4, I-2)
aux(be-4, must-3)
root(ROOT-0, be-4)
prep_at(be-4, Tattersall-6)
possessive(Tattersall-6, 's-7)
prep_on(be-4, Monday-9)
appos(Monday-9, uncle-11)
expl(is-14, there-13)
parataxis(be-4, is-14)
det(horse-16, a-15)
nsubj(is-14, horse-16)
nsubj(have-19, I-17)
aux(have-19, must-18)
rcmod(horse-16, have-19)
amod(season-22, next-21)
prep_for(have-19, season-22)

(ROOT
  (S
    (NP
      (NP (NNP Pray))
      (, ,)
      (NP (NN uncle))
      (, ,))
    (VP (MD may)
      (NP (PRP I))
      (S
        (VP (VB ask)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP you))
              (VP (VBP are)
                (ADJP (JJ likely)
                  (S
                    (VP (TO to)
                      (VP (VB want)
                        (NP (PRP me))))))))))))
    (. ?) ('' ') ('' '')))

nsubj(may-5, Pray-1)
appos(Pray-1, uncle-3)
root(ROOT-0, may-5)
dobj(may-5, I-6)
dep(may-5, ask-7)
advmod(likely-11, when-8)
nsubj(likely-11, you-9)
nsubj(want-13, you-9)
cop(likely-11, are-10)
ccomp(ask-7, likely-11)
aux(want-13, to-12)
xcomp(likely-11, want-13)
dobj(want-13, me-14)

(ROOT
  (S (`` `)
    (S
      (VP (VB Let)
        (S
          (NP (PRP me))
          (VP (VB see)))))
    (: --)
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (NNP May))
        (: --)
        (S
          (NP (RB about) (NNP July))
          (, ,)
          (NP (PRP I))
          (VP (MD should)
            (VP (VB think))))))
    (. .) ('' ') ('' '')))

dep(May-8, Let-2)
nsubj(see-4, me-3)
ccomp(Let-2, see-4)
nsubj(May-8, this-6)
cop(May-8, is-7)
root(ROOT-0, May-8)
advmod(July-11, about-10)
tmod(think-15, July-11)
nsubj(think-15, I-13)
aux(think-15, should-14)
dep(May-8, think-15)

(ROOT
  (NP
    (NP (`` `) (NNP July))
    (, ,)
    (NP (NN uncle))
    (. !)))

root(ROOT-0, July-2)
appos(July-2, uncle-4)

(ROOT
  (S
    (S
      (VP (VB Spare)
        (NP (PRP me))))
    (: --)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB marry)
          (PP (IN in)
            (NP (DT the) (NNS dog-days))))))
    (. .)))

root(ROOT-0, Spare-1)
dobj(Spare-1, me-2)
nsubj(marry-7, I-4)
aux(marry-7, can-5)
neg(marry-7, not-6)
parataxis(Spare-1, marry-7)
det(dog-days-10, the-9)
prep_in(marry-7, dog-days-10)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (VP (VB hang)
      (NP (PRP it)))
    (. !)))

discourse(hang-3, No-1)
root(ROOT-0, hang-3)
dobj(hang-3, it-4)

(ROOT
  (S
    (NP (NNP Not))
    (VP (VBZ July))
    (. .) ('' ') ('' '')))

nsubj(July-2, Not-1)
root(ROOT-0, July-2)

(ROOT
  (S (`` `)
    (INTJ (UH Well))
    (, ,)
    (NP (NNP William))
    (, ,)
    (ADVP (RB perhaps))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP you))
        (VP (MD must)
          (VP (VB come)
            (ADVP (RB down) (RB once)
              (CC or)
              (RB twice))
            (S
              (VP (TO to)
                (VP (VB see)
                  (NP
                    (NP (DT the) (NN property))
                    (: --)
                    (NP (NNP Miss) (NNP Percival))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB say)
        (PRN (: --)
          (S
            (NP (PRP it))
            (VP (MD may)
              (VP (VB be)
                (ADVP (RB too) (RB soon)))))
          (: --))
        (SBAR
          (S
            (VP (VBP suppose)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBD put)
                    (NP (PRP it))
                    (PRT (RP off))
                    (PP (IN till)
                      (NP (NNP October)))))))))))
    (. .) ('' ') ('' '')))

discourse(say-26, Well-2)
nsubj(say-26, William-4)
advmod(say-26, perhaps-6)
mark(come-11, as-8)
nsubj(come-11, you-9)
nsubj(see-17, you-9)
aux(come-11, must-10)
advcl(say-26, come-11)
advmod(once-13, down-12)
advmod(come-11, once-13)
advmod(come-11, twice-15)
conj_or(once-13, twice-15)
aux(see-17, to-16)
xcomp(come-11, see-17)
det(property-19, the-18)
dobj(see-17, property-19)
nn(Percival-22, Miss-21)
dep(property-19, Percival-22)
nsubj(say-26, I-24)
aux(say-26, should-25)
root(ROOT-0, say-26)
nsubj(be-30, it-28)
aux(be-30, may-29)
parataxis(say-26, be-30)
advmod(soon-32, too-31)
advmod(be-30, soon-32)
ccomp(say-26, suppose-34)
nsubj(put-36, we-35)
ccomp(suppose-34, put-36)
dobj(put-36, it-37)
prt(put-36, off-38)
prep_till(put-36, October-40)

(ROOT
  (S
    (NP (`` `) (NNP October))
    (: --)
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB be)
        (ADVP (RB down)
          (PP (IN at)
            (NP (NNP Melton))))))
    (. .) ('' ') ('' '')))

tmod(be-6, October-2)
nsubj(be-6, I-4)
aux(be-6, shall-5)
root(ROOT-0, be-6)
advmod(be-6, down-7)
prep_at(down-7, Melton-9)

(ROOT
  (S (`` `)
    (NP
      (NP (NNP Pray))
      (, ,)
      (NP (NN sir))
      (, ,))
    (VP (MD may)
      (ADVP
        (NP (CD I))
        (RB then))
      (VP (VB inquire)
        (SBAR
          (WHNP (WP what))
          (S
            (NP
              (NP (NN portion))
              (PP (IN of)
                (NP (DT the) (NN year))))
            (VP (VBZ is) (RB not)
              (PRN (, ,)
                (PP (IN with)
                  (NP (PRP you)))
                (, ,))
              (NP
                (NP (JJ _) (NN dog) (NNS _))
                (: -)
                (NP (NNS days))))))))
    (. ?) ('' ') ('' '')))

nsubj(inquire-9, Pray-2)
appos(Pray-2, sir-4)
aux(inquire-9, may-6)
npadvmod(then-8, I-7)
advmod(inquire-9, then-8)
root(ROOT-0, inquire-9)
dobj(_-23, what-10)
nsubj(_-23, portion-11)
det(year-14, the-13)
prep_of(portion-11, year-14)
cop(_-23, is-15)
neg(_-23, not-16)
dep(_-23, with-18)
pobj(with-18, you-19)
amod(_-23, _-21)
nn(_-23, dog-22)
ccomp(inquire-9, _-23)
dep(_-23, days-25)

(ROOT
  (S (`` `)
    (S
      (VP (VBG Why) (, ,)
        (ADVP (RB uncle))
        (, ,)
        (NP (JJ next) (NNP April))
        (, ,)
        (ADVP (RB now))))
    (: --)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (VP (MD would)
            (VP (VB do))))))
    (. .) ('' ') ('' '')))

dep(think-12, Why-2)
advmod(Why-2, uncle-4)
amod(April-7, next-6)
tmod(Why-2, April-7)
advmod(Why-2, now-9)
nsubj(think-12, I-11)
root(ROOT-0, think-12)
mark(do-15, that-13)
aux(do-15, would-14)
ccomp(think-12, do-15)

(ROOT
  (NP
    (NP (`` `) (NNP Next))
    (NP (NNP April))
    (. !)))

root(ROOT-0, Next-2)
appos(Next-2, April-3)

(ROOT
  (FRAG
    (NP (JJ Eleven) (NNS months))
    (, ,)
    (CC and)
    (FRAG
      (NP (DT a) (NN winter))
      (PP (IN between)))
    (. .)))

amod(months-2, Eleven-1)
root(ROOT-0, months-2)
cc(months-2, and-4)
det(winter-6, a-5)
dep(months-2, winter-6)
prep(winter-6, between-7)

(ROOT
  (S
    (NP (NNP Suppose) (NNP Miss) (NNP Percival))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP
            (VP (VB take)
              (NP (DT a) (NN cold)))
            (CC and)
            (VP (VB die))))))
    (. .) ('' ') ('' '')))

nn(Percival-3, Suppose-1)
nn(Percival-3, Miss-2)
nsubj(was-4, Percival-3)
nsubj(take-6, Percival-3)
nsubj(die-10, Percival-3)
root(ROOT-0, was-4)
aux(take-6, to-5)
xcomp(was-4, take-6)
det(cold-8, a-7)
dobj(take-6, cold-8)
xcomp(was-4, die-10)
conj_and(take-6, die-10)

(ROOT
  (S (`` `)
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB be)
          (ADJP (RB excessively) (VBN obliged)
            (PP (TO to)
              (NP (PRP her)))))))
    (, ,) ('' ')
    (VP (VBD thought)
      (NP (NNP William)))
    (. .) ('' '')))

nsubjpass(obliged-6, I-2)
aux(obliged-6, should-3)
auxpass(obliged-6, be-4)
advmod(obliged-6, excessively-5)
ccomp(thought-11, obliged-6)
prep_to(obliged-6, her-8)
root(ROOT-0, thought-11)
dobj(thought-11, William-12)

(ROOT
  (S (`` `)
    (VP (VB No))
    (. !)))

root(ROOT-0, No-2)

(ROOT
  (S
    (VP (VB No))
    (. !) ('' ')))

root(ROOT-0, No-1)

(ROOT
  (S
    (NP (JJ continued) (NNP Mr) (NNP Ponsonby))
    (: :)
    (NP (`` `) (EX there))
    (VP (VBZ is)
      (ADJP (NN nothing) (JJ certain)
        (PP (IN in)
          (NP
            (NP (DT this) (NN world))
            (, ,)
            (NP (NNP William))))))
    (. .) ('' ') ('' '')))

amod(Ponsonby-3, continued-1)
nn(Ponsonby-3, Mr-2)
nsubj(is-7, Ponsonby-3)
expl(is-7, there-6)
root(ROOT-0, is-7)
npadvmod(certain-9, nothing-8)
acomp(is-7, certain-9)
det(world-12, this-11)
prep_in(certain-9, world-12)
appos(world-12, William-14)

(ROOT
  (S (`` `)
    (ADVP (RB Well))
    (, ,)
    (NP
      (NP (RB then))
      (, ,)
      (NP (NN uncle))
      (, ,))
    (VP (VBP suppose)
      (S
        (NP (PRP we))
        (VP (VB arrange)
          (NP (PRP it))
          (PP (IN for)
            (NP (DT the) (JJ first) (NNP _) (JJ hard) (NN frost) (NN _))))))
    (. .) ('' ') ('' '')))

advmod(suppose-8, Well-2)
nsubj(suppose-8, then-4)
appos(then-4, uncle-6)
root(ROOT-0, suppose-8)
nsubj(arrange-10, we-9)
ccomp(suppose-8, arrange-10)
dobj(arrange-10, it-11)
det(_-18, the-13)
amod(_-18, first-14)
nn(_-18, _-15)
amod(_-18, hard-16)
nn(_-18, frost-17)
prep_for(arrange-10, _-18)

(ROOT
  (S (`` `)
    (NP (PRP We))
    (VP (VBP have)
      (VP (VBN had)
        (NP
          (NP
            (NP (DT no) (JJ hard) (NNS frosts))
            (, ,)
            (ADVP (RB lately)))
          (, ,)
          (NP (NNP William)))))
    (. .)))

nsubj(had-4, We-2)
aux(had-4, have-3)
root(ROOT-0, had-4)
neg(frosts-7, no-5)
amod(frosts-7, hard-6)
dobj(had-4, frosts-7)
advmod(frosts-7, lately-9)
appos(frosts-7, William-11)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD may)
      (VP (VB wait)
        (PP (IN for)
          (NP (NNS years)))))
    (. .)))

nsubj(wait-3, We-1)
aux(wait-3, may-2)
root(ROOT-0, wait-3)
prep_for(wait-3, years-5)

(ROOT
  (FRAG
    (SBAR
      (X (DT The) (RB sooner))
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (PP (IN over)
            (NP (DT the) (JJR better))))))
    (. .)))

det(sooner-2, The-1)
dep(is-4, sooner-2)
nsubj(is-4, it-3)
root(ROOT-0, is-4)
det(better-7, the-6)
prep_over(is-4, better-7)

(ROOT
  (S
    (S
      (VP
        (VP (VB Go)
          (PRT (RP back))
          (PP (TO to)
            (NP (NN town))))
        (, ,)
        (VP (VB buy)
          (NP (PRP$ your) (NN horse)))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB then))
          (VB come)
          (PRT (RP down))
          (NP (RB here)))))
    (, ,)
    (NP (PRP$ my))
    (VP (VBD dear)
      (NP (NNP William))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB oblige)
            (NP (PRP$ your) (NN uncle))
            (: --)
            (ADVP (RB never))
            (VB mind)
            (NP (DT the) (NNS dog-days))))))
    (. .) ('' ') ('' '')))

ccomp(dear-17, Go-1)
prt(Go-1, back-2)
prep_to(Go-1, town-4)
conj_and(Go-1, buy-6)
ccomp(dear-17, buy-6)
poss(horse-8, your-7)
dobj(buy-6, horse-8)
advmod(come-12, then-11)
conj_and(Go-1, come-12)
ccomp(dear-17, come-12)
prt(come-12, down-13)
dobj(come-12, here-14)
nsubj(dear-17, my-16)
root(ROOT-0, dear-17)
dobj(dear-17, William-18)
aux(oblige-21, to-20)
vmod(dear-17, oblige-21)
poss(uncle-23, your-22)
dobj(oblige-21, uncle-23)
neg(oblige-21, never-25)
dep(oblige-21, mind-26)
det(dog-days-28, the-27)
dep(oblige-21, dog-days-28)

(ROOT
  (S (`` `)
    (INTJ (UH Well))
    (, ,)
    (NP (NN sir))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (DT a) (NN sacrifice))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD shall) (RB not)
      (VP (VB be)
        (VP (VBN done)
          (PP (IN by)
            (NP
              (NP (NNS halves))
              (: ;)
              (PP (RB out) (IN of)
                (NP
                  (NP (NN respect))
                  (PP (IN for)
                    (NP (PRP you)))))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD will)
                    (ADVP (RB even))
                    (VP (VB marry)
                      (PP (IN in)
                        (NP (NNP July)))
                      (, ,)
                      (PP (IN without)
                        (NP
                          (NP (DT any) (NN regard))
                          (PP (TO to)
                            (NP (DT the) (NN thermometer))))))))))))))
    (. .) ('' ') ('' '')))

discourse(done-18, Well-2)
nsubjpass(done-18, sir-4)
mark(am-8, if-6)
nsubj(am-8, I-7)
nsubj(make-10, I-7)
advcl(done-18, am-8)
aux(make-10, to-9)
xcomp(am-8, make-10)
det(sacrifice-12, a-11)
dobj(make-10, sacrifice-12)
nsubjpass(done-18, it-14)
aux(done-18, shall-15)
neg(done-18, not-16)
auxpass(done-18, be-17)
root(ROOT-0, done-18)
agent(done-18, halves-20)
prep_out_of(halves-20, respect-24)
prep_for(respect-24, you-26)
nsubj(marry-30, I-27)
aux(marry-30, will-28)
advmod(marry-30, even-29)
rcmod(halves-20, marry-30)
prep_in(marry-30, July-32)
det(regard-36, any-35)
prep_without(marry-30, regard-36)
det(thermometer-39, the-38)
prep_to(regard-36, thermometer-39)

(ROOT
  (S (`` `)
    (NP (PRP You))
    (VP (VBP are)
      (NP
        (NP (DT a) (JJ good) (NN boy))
        (, ,)
        (NP (NNP William))))
    (. .)))

nsubj(boy-6, You-2)
cop(boy-6, are-3)
det(boy-6, a-4)
amod(boy-6, good-5)
root(ROOT-0, boy-6)
appos(boy-6, William-8)

(ROOT
  (SBARQ
    (WHNP (WP Do))
    (SQ
      (NP (PRP you))
      (VP (VB want)
        (NP (DT a) (NN cheque))))
    (. ?) ('' ') ('' '')))

dep(want-3, Do-1)
nsubj(want-3, you-2)
root(ROOT-0, want-3)
det(cheque-5, a-4)
dobj(want-3, cheque-5)

(ROOT
  (S (`` `)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN had)
          (NP (CD one))
          (ADVP (RB to-day)))))
    (, ,) ('' ')
    (VP
      (VP (VBD thought)
        (NP (NNP William)))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADVP (RB almost))
        (PP (IN at)
          (NP (NN fault)))))
    (. .)))

nsubj(had-4, I-2)
aux(had-4, have-3)
ccomp(thought-9, had-4)
dobj(had-4, one-5)
advmod(had-4, to-day-6)
root(ROOT-0, thought-9)
dobj(thought-9, William-10)
conj_and(thought-9, was-13)
advmod(was-13, almost-14)
prep_at(was-13, fault-16)

(ROOT
  (S (`` `)
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB be)
        (ADJP (RBS most) (JJ thankful)))
      (, ,)
      (VP (VB sir) (: --)
        (S
          (NP (PRP they))
          (VP (VB sell)
            (NP (NN horse-flesh))
            (PP (IN by)
              (NP (DT the) (NN ounce) (NNS now-a-days)))))))
    (. .) ('' ') ('' '')))

nsubj(thankful-6, I-2)
aux(thankful-6, shall-3)
cop(thankful-6, be-4)
advmod(thankful-6, most-5)
root(ROOT-0, thankful-6)
dep(thankful-6, sir-8)
nsubj(sell-11, they-10)
ccomp(sir-8, sell-11)
parataxis(sir-8, sell-11)
dobj(sell-11, horse-flesh-12)
det(now-a-days-16, the-14)
nn(now-a-days-16, ounce-15)
prep_by(sell-11, now-a-days-16)

(ROOT
  (S (`` `)
    (CC And)
    (NP (PRP you))
    (VP (VBP pay)
      (PP (IN in)
        (NP (NNS pounds))))
    (. .)))

cc(pay-4, And-2)
nsubj(pay-4, you-3)
root(ROOT-0, pay-4)
prep_in(pay-4, pounds-6)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ ,)
      (NP (NNP William)))
    (. .) ('' ') ('' '')))

expl(,-2, There-1)
dobj(,-2, William-3)
nsubj(,-2, William-3)

(ROOT
  (S
    (VP (`` `) (VB Thank)
      (S
        (S
          (NP (PRP you))
          (, ,)
          (ADVP (RB sir))
          (, ,)
          (NP (PRP I))
          (VP (VBP 'm) (RB all)
            (ADJP (JJ obedience))))
        (: ;)
        (CC and)
        (S
          (NP (PRP I))
          (VP (MD 'll)
            (VP (VB keep)
              (NP (PRP$ my) (NN word))
              (, ,)
              (SBAR (RB even) (IN if)
                (S
                  (NP (EX there))
                  (VP (MD should)
                    (VP (VB be)
                      (NP (DT a) (NN comet)))))))))))
    (. .)))

root(ROOT-0, Thank-2)
nsubj(obedience-10, you-3)
advmod(obedience-10, sir-5)
nsubj(obedience-10, I-7)
cop(obedience-10, 'm-8)
advmod(obedience-10, all-9)
dep(Thank-2, obedience-10)
nsubj(keep-15, I-13)
aux(keep-15, 'll-14)
dep(Thank-2, keep-15)
conj_and(obedience-10, keep-15)
poss(word-17, my-16)
dobj(keep-15, word-17)
advmod(comet-25, even-19)
mark(comet-25, if-20)
expl(comet-25, there-21)
aux(comet-25, should-22)
cop(comet-25, be-23)
det(comet-25, a-24)
advcl(keep-15, comet-25)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB go)
          (CC and)
          (VB buy)
          (NP (DT the) (NN horse)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB be)
          (ADJP (JJ ready)
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP (DT the) (NN ring-fence))
                  (ADVP
                    (ADVP (RB as) (RB soon))
                    (SBAR (IN as)
                      (S
                        (NP (PRP you))
                        (VP (VBP please))))))))))))
    (. .) ('' ') ('' '')))

nsubj(go-3, I-1)
nsubj(buy-5, I-1)
aux(go-3, 'll-2)
root(ROOT-0, go-3)
conj_and(go-3, buy-5)
det(horse-7, the-6)
dobj(go-3, horse-7)
advmod(ready-14, then-10)
nsubj(ready-14, I-11)
nsubj(take-16, I-11)
aux(ready-14, shall-12)
cop(ready-14, be-13)
conj_and(go-3, ready-14)
aux(take-16, to-15)
xcomp(ready-14, take-16)
det(ring-fence-18, the-17)
dobj(take-16, ring-fence-18)
advmod(soon-20, as-19)
advmod(take-16, soon-20)
mark(please-23, as-21)
nsubj(please-23, you-22)
advcl(soon-20, please-23)
ccomp(soon-20, please-23)

(ROOT
  (S (`` `)
    (ADVP (RB Yes))
    (PRN (, ,)
      (CC and)
      (S
        (NP (PRP you))
        (VP (MD 'll)
          (VP (VB get)
            (PRT (RP over))
            (NP (PRP it))
            (ADVP (RB cleverly)))))
      (, ,))
    (NP (PRP I))
    (VP (VBP 've)
      (NP (DT no) (NN doubt)))
    (. .)))

advmod('ve-13, Yes-2)
cc(get-7, and-4)
nsubj(get-7, you-5)
aux(get-7, 'll-6)
parataxis('ve-13, get-7)
prt(get-7, over-8)
dobj(get-7, it-9)
advmod(get-7, cleverly-10)
nsubj('ve-13, I-12)
root(ROOT-0, 've-13)
neg(doubt-15, no-14)
dobj('ve-13, doubt-15)

(ROOT
  (S
    (NP (CD Five))
    (VP (VBZ thousand)
      (NP
        (NP
          (NP (NNS acres))
          (, ,)
          (NP (NNP William) (, ,) (NNP and)))
        (: --)
        (NP (DT a) (JJ pretty) (NN wife))))
    (. !) ('' ') ('' '')))

nsubj(thousand-2, Five-1)
root(ROOT-0, thousand-2)
dobj(thousand-2, acres-3)
nn(and-7, William-5)
appos(acres-3, and-7)
det(wife-11, a-9)
amod(wife-11, pretty-10)
dep(acres-3, wife-11)

(ROOT
  (S (`` `)
    (VP (VB Have)
      (NP (PRP you)
        (NP
          (NP (DT any) (JJ further) (NNS commands))
          (, ,)
          (NP (NN uncle)))))
    (. ?) ('' ')))

root(ROOT-0, Have-2)
dep(commands-6, you-3)
det(commands-6, any-4)
amod(commands-6, further-5)
dobj(Have-2, commands-6)
appos(commands-6, uncle-8)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP William))
      (, ,)
      (S
        (VP (VBG depositing)
          (NP (DT the) (NN cheque))
          (PP (IN in)
            (NP (PRP$ his) (NN pocket-book))))))
    (. .) ('' '')))

root(ROOT-0, said-1)
dobj(said-1, William-2)
vmod(said-1, depositing-4)
det(cheque-6, the-5)
dobj(depositing-4, cheque-6)
poss(pocket-book-9, his-8)
prep_in(depositing-4, pocket-book-9)

(ROOT
  (S (`` `)
    (NP (NN None) (, ,) (JJ my) (NNS dear))
    (VP (VBD boy) (: :)
      (SQ (VBP are)
        (NP (PRP you))
        (VP (VBG going))))
    (. ?) ('' ') ('' '')))

nn(dear-5, None-2)
amod(dear-5, my-4)
nsubj(boy-6, dear-5)
root(ROOT-0, boy-6)
aux(going-10, are-8)
nsubj(going-10, you-9)
parataxis(boy-6, going-10)

(ROOT
  (S
    (NP (`` `) (NNP Yes) (, ,) (NNP sir))
    (: ;)
    (NP (PRP I))
    (VP (VBP dine)
      (PP (IN at)
        (NP (DT the) (NNP Clarendon))))
    (. .) ('' ') ('' '')))

nn(sir-4, Yes-2)
nsubj(dine-7, sir-4)
nsubj(dine-7, I-6)
root(ROOT-0, dine-7)
det(Clarendon-10, the-9)
prep_at(dine-7, Clarendon-10)

(ROOT
  (S (`` `)
    (ADVP (RB Well))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (VP (VBP good-bye))
    (. .)))

advmod(good-bye-6, Well-2)
advmod(good-bye-6, then-4)
root(ROOT-0, good-bye-6)

(ROOT
  (S
    (VP (VB Make)
      (NP (PRP$ my) (NNS compliments)
        (CC and)
        (NNS excuses))
      (PP (TO to)
        (NP (PRP$ your) (NN friend) (NN Seagrove))))
    (. .)))

root(ROOT-0, Make-1)
poss(compliments-3, my-2)
dobj(Make-1, compliments-3)
dobj(Make-1, excuses-5)
conj_and(compliments-3, excuses-5)
poss(Seagrove-9, your-7)
nn(Seagrove-9, friend-8)
prep_to(Make-1, Seagrove-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (VP (VB come)
        (PP (IN on)
          (NP (NNP Tuesday)
            (CC or)
            (NNP Wednesday)))))
    (. .) ('' ')))

nsubj(come-3, You-1)
aux(come-3, will-2)
root(ROOT-0, come-3)
prep_on(come-3, Tuesday-5)
prep_on(come-3, Wednesday-7)
conj_or(Tuesday-5, Wednesday-7)

(ROOT
  (S (`` ``) (RB Thus)
    (VP (VBD was)
      (VP (VBN concluded)
        (NP
          (NP (DT the) (NN marriage))
          (PP (IN between)
            (NP
              (NP
                (NP (NNP William) (NNP Ponsonby))
                (CC and)
                (NP (NNP Emily) (NNP Percival)))
              (, ,)
              (CC and)
              (NP
                (NP (DT the) (NN junction))
                (PP (IN of)
                  (NP (DT the) (CD two) (NNS estates))))))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD formed)
                (PRT (RP together))
                (NP
                  (NP (DT the) (JJ great) (NN desideratum))
                  (: --)
                  (NP
                    (NP
                      (QP (CD _) (CD five)))
                    (NP (CD thousand) (NNS acres))))
                (PP (IN in)
                  (NP (DT a) (JJ ring-fence) (NN _)))))))))
    (. .) ('' '')))

advmod(concluded-4, Thus-2)
auxpass(concluded-4, was-3)
root(ROOT-0, concluded-4)
det(marriage-6, the-5)
dobj(concluded-4, marriage-6)
nsubj(formed-23, marriage-6)
nn(Ponsonby-9, William-8)
prep_between(marriage-6, Ponsonby-9)
nn(Percival-12, Emily-11)
prep_between(marriage-6, Percival-12)
conj_and(Ponsonby-9, Percival-12)
det(junction-16, the-15)
prep_between(marriage-6, junction-16)
conj_and(Ponsonby-9, junction-16)
det(estates-20, the-18)
num(estates-20, two-19)
prep_of(junction-16, estates-20)
rcmod(marriage-6, formed-23)
prt(formed-23, together-24)
det(desideratum-27, the-25)
amod(desideratum-27, great-26)
dobj(formed-23, desideratum-27)
number(five-30, _-29)
dep(desideratum-27, five-30)
num(acres-32, thousand-31)
dep(five-30, acres-32)
det(_-36, a-34)
amod(_-36, ring-fence-35)
prep_in(formed-23, _-36)

(ROOT
  (S
    (S
      (NP (NNP Mr) (NNP Seagrove))
      (VP (VBD finished)))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD looked)
        (NP (NN round))
        (PP (IN for)
          (NP (NN approbation)))))
    (. .)))

nn(Seagrove-2, Mr-1)
nsubj(finished-3, Seagrove-2)
root(ROOT-0, finished-3)
nsubj(looked-7, he-6)
conj_and(finished-3, looked-7)
dobj(looked-7, round-8)
prep_for(looked-7, approbation-10)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP
          (NP (NNP Very))
          (NP (JJ good))
          (, ,)
          (ADVP (RB indeed)))
        (, ,)
        (NP (NNP Seagrove))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (PRP$ his) (NN lordship))))
    (: ;) (`` ``)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB take)
          (NP
            (NP (DT a) (NN glass))
            (PP (IN of)
              (NP (NN wine))))
          (PP (IN after)
            (NP (DT that))))))
    (. .) ('' '')))

nsubj(said-10, Very-2)
dep(Very-2, good-3)
advmod(Very-2, indeed-5)
appos(Very-2, Seagrove-7)
root(ROOT-0, said-10)
poss(lordship-12, his-11)
dobj(said-10, lordship-12)
nsubj(take-17, you-15)
aux(take-17, must-16)
parataxis(said-10, take-17)
det(glass-19, a-18)
dobj(take-17, glass-19)
prep_of(glass-19, wine-21)
prep_after(take-17, that-23)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD would) (RB not)
        (VP (VB give)
          (NP (RB much))
          (PP (IN for)
            (NP
              (NP
                (NP (NNP Miss) (NNP Percival) (POS 's))
                (NN chance))
              (PP (IN of)
                (NP (NN happiness))))))))
    (, ,) ('' '')
    (VP (VBD observed)
      (NP (DT the) (JJR elder)))
    (NP (NNP Miss) (NNP Ossulton))
    (. .)))

nsubj(give-5, I-2)
aux(give-5, would-3)
neg(give-5, not-4)
ccomp(observed-16, give-5)
dobj(give-5, much-6)
nn(Percival-9, Miss-8)
poss(chance-11, Percival-9)
prep_for(give-5, chance-11)
prep_of(chance-11, happiness-13)
root(ROOT-0, observed-16)
det(elder-18, the-17)
dobj(observed-16, elder-18)
nn(Ossulton-20, Miss-19)
nsubj(observed-16, Ossulton-20)

(ROOT
  (SINV (`` ``)
    (S
      (PP (IN Of)
        (NP
          (NP (CD two) (NNS evils))
          (VP (VBP choose)
            (NP (DT the) (JJS least)))))
      (, ,)
      (NP (PRP they))
      (VP (VBP say)))
    (, ,) ('' '')
    (VP (VBD observed))
    (NP (NNP Mr) (NNP Hautaine))
    (. .)))

num(evils-4, two-3)
prep_of(say-10, evils-4)
dep(evils-4, choose-5)
det(least-7, the-6)
dobj(choose-5, least-7)
nsubj(say-10, they-9)
ccomp(observed-13, say-10)
root(ROOT-0, observed-13)
nn(Hautaine-15, Mr-14)
nsubj(observed-13, Hautaine-15)

(ROOT
  (S (`` ``)
    (NP (NNP Poor) (NNP Ponsonby))
    (VP (MD could) (RB not)
      (VP (VB help)
        (NP (PRP himself))))
    (. .) ('' '')))

nn(Ponsonby-3, Poor-2)
nsubj(help-6, Ponsonby-3)
aux(help-6, could-4)
neg(help-6, not-5)
root(ROOT-0, help-6)
dobj(help-6, himself-7)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (DT That))
        (VP (VBZ 's)
          (NP
            (NP (DT a) (RB very) (JJ polite) (NN observation))
            (PP (IN of)
              (NP (NNP yours) (, ,) (NNP Mr) (NNP Hautaine))))))
      (: --)
      (S
        (NP (PRP I))
        (VP (VBP thank)
          (NP (PRP you))
          (PP (IN in)
            (NP
              (NP (DT the) (NN name))
              (PP (IN of)
                (NP (DT the) (NN sex))))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Cecilia) (NNP Ossulton))
    (. .)))

nsubj(observation-7, That-2)
cop(observation-7, 's-3)
det(observation-7, a-4)
advmod(observation-7, very-5)
amod(observation-7, polite-6)
ccomp(replied-25, observation-7)
nn(Hautaine-12, yours-9)
appos(Hautaine-12, Mr-11)
prep_of(observation-7, Hautaine-12)
nsubj(thank-15, I-14)
parataxis(observation-7, thank-15)
dobj(thank-15, you-16)
det(name-19, the-18)
prep_in(thank-15, name-19)
det(sex-22, the-21)
prep_of(name-19, sex-22)
root(ROOT-0, replied-25)
nn(Ossulton-27, Cecilia-26)
nsubj(replied-25, Ossulton-27)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Nay))
      (, ,)
      (VP (VBN Miss)
        (NP
          (NP (NNP Ossulton))
          (: ;)
          (SQ (MD would)
            (NP (PRP you))
            (VP (VB like)
              (S
                (VP (TO to)
                  (VP (VB marry)
                    (NP
                      (NP (DT a) (NN person))
                      (SBAR
                        (WHNP (WP whom))
                        (S
                          (NP (PRP you))
                          (ADVP (RB never))
                          (VP (VBD saw)))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Nay-2)
vmod(Nay-2, Miss-4)
dobj(Miss-4, Ossulton-5)
aux(like-9, would-7)
nsubj(like-9, you-8)
nsubj(marry-11, you-8)
dep(Ossulton-5, like-9)
aux(marry-11, to-10)
xcomp(like-9, marry-11)
det(person-13, a-12)
dobj(marry-11, person-13)
dobj(saw-17, person-13)
nsubj(saw-17, you-15)
neg(saw-17, never-16)
rcmod(person-13, saw-17)

(ROOT
  (S (`` ``)
    (S
      (NP (JJS Most))
      (VP (VBZ certainly) (RB not)))
    (: ;)
    (S (CC but)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBD mentioned)
            (NP (DT the) (CD two) (NNS evils)))))
      (, ,)
      (NP
        (NP (NNP Mr) (NNP Hautaine))
        (PRN (, ,)
          (S
            (NP (PRP I))
            (VP (VBP appeal)
              (PP (TO to)
                (NP (PRP$ your) (NN honour)))))
          (, ,)))
      (VP (VBD did)
        (S
          (NP (PRP you))
          (RB not)
          (VP (VB refer)
            (PP (TO to)
              (NP (NN marriage)
                (CC or)
                (NN beggary)))))))
    (. ?) ('' '')))

nsubj(certainly-3, Most-2)
root(ROOT-0, certainly-3)
neg(certainly-3, not-4)
cc(did-23, but-6)
advmod(mentioned-9, when-7)
nsubj(mentioned-9, you-8)
advcl(did-23, mentioned-9)
det(evils-12, the-10)
num(evils-12, two-11)
dobj(mentioned-9, evils-12)
nn(Hautaine-15, Mr-14)
nsubj(did-23, Hautaine-15)
nsubj(appeal-18, I-17)
dep(Hautaine-15, appeal-18)
poss(honour-21, your-20)
prep_to(appeal-18, honour-21)
parataxis(certainly-3, did-23)
nsubj(refer-26, you-24)
neg(refer-26, not-25)
ccomp(did-23, refer-26)
prep_to(refer-26, marriage-28)
prep_to(refer-26, beggary-30)
conj_or(marriage-28, beggary-30)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD must)
        (VP (VB confess)
          (NP
            (NP (PRP it))
            (, ,)
            (NP (NNP Miss) (NNP Ossulton))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB hardly) (JJ fair))
        (S
          (VP (TO to)
            (VP (VB call)
              (PP (IN on)
                (NP (PRP$ my) (NN honour)
                  (S
                    (VP (TO to)
                      (VP (VB get)
                        (NP (PRP me))
                        (PP (IN into)
                          (NP (DT a) (NN scrape)))))))))))))
    (. .) ('' '')))

nsubj(confess-4, I-2)
aux(confess-4, must-3)
root(ROOT-0, confess-4)
dobj(confess-4, it-5)
nn(Ossulton-8, Miss-7)
appos(it-5, Ossulton-8)
nsubj(fair-14, it-11)
nsubj(call-16, it-11)
cop(fair-14, is-12)
advmod(fair-14, hardly-13)
conj_but(confess-4, fair-14)
aux(call-16, to-15)
xcomp(fair-14, call-16)
poss(honour-19, my-18)
prep_on(call-16, honour-19)
aux(get-21, to-20)
vmod(honour-19, get-21)
dobj(get-21, me-22)
det(scrape-25, a-24)
prep_into(get-21, scrape-25)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB only))
      (VP (VBP wish)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN offer))
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBN made)
                  (PP (TO to)
                    (NP (PRP me))))))))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD observed))
        (NP (NNP Vaughan))))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (MD should) (RB not)
        (VP (VB have)
          (VP (VBN hesitated)
            (SBAR (IN as)
              (S
                (NP (NNP Ponsonby))
                (VP (VBD did))))))))
    (. .) ('' '')))

nsubj(wish-4, I-2)
advmod(wish-4, only-3)
root(ROOT-0, wish-4)
mark(made-10, that-5)
det(offer-7, the-6)
nsubjpass(made-10, offer-7)
aux(made-10, had-8)
auxpass(made-10, been-9)
ccomp(wish-4, made-10)
prep_to(made-10, me-12)
dep(wish-4, observed-15)
nsubj(observed-15, Vaughan-16)
nsubj(hesitated-23, I-19)
aux(hesitated-23, should-20)
neg(hesitated-23, not-21)
aux(hesitated-23, have-22)
parataxis(wish-4, hesitated-23)
mark(did-26, as-24)
nsubj(did-26, Ponsonby-25)
advcl(hesitated-23, did-26)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP I))
      (VP (VBD beg)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD will) (RB not)
              (VP (VB think)
                (PP (IN of)
                  (S
                    (VP (VBG proposing)
                      (PP (IN for)
                        (NP (PRP me))))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mrs) (NNP Lascelles))
    (, ,)
    (S
      (VP (VBG laughing) (: ;)
        (PP (IN for)
          (NP
            (NP (NNP Mr) (NNP Vaughan))
            (SBAR
              (S
                (VP (VBD had)
                  (VP (VBN been)
                    (ADJP (RB excessively) (JJ attentive))))))))))
    (. .)))

advmod(beg-4, Then-2)
nsubj(beg-4, I-3)
ccomp(said-15, beg-4)
nsubj(think-8, you-5)
aux(think-8, will-6)
neg(think-8, not-7)
ccomp(beg-4, think-8)
prepc_of(think-8, proposing-10)
prep_for(proposing-10, me-12)
root(ROOT-0, said-15)
nn(Lascelles-17, Mrs-16)
nsubj(said-15, Lascelles-17)
vmod(said-15, laughing-19)
nn(Vaughan-23, Mr-22)
prep_for(laughing-19, Vaughan-23)
aux(attentive-27, had-24)
cop(attentive-27, been-25)
advmod(attentive-27, excessively-26)
rcmod(Vaughan-23, attentive-27)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ appears)
      (PP (TO to)
        (NP
          (NP (PRP me))
          (, ,)
          (NP (NNP Vaughan))))
      (PRN (, ,) ('' '')
        (SINV
          (VP (VBD observed))
          (NP (NNP Seagrove)))
        (, ,) (`` ``))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (ADVP (RB slightly))
            (VP (VBN committed)
              (NP (PRP yourself))
              (PP (IN by)
                (NP (DT that) (NN remark))))))))
    (. .) ('' '')))

nsubj(appears-3, It-2)
root(ROOT-0, appears-3)
prep_to(appears-3, me-5)
appos(me-5, Vaughan-7)
parataxis(appears-3, observed-10)
nsubj(observed-10, Seagrove-11)
mark(committed-18, that-14)
nsubj(committed-18, you-15)
aux(committed-18, have-16)
advmod(committed-18, slightly-17)
ccomp(appears-3, committed-18)
dobj(committed-18, yourself-19)
det(remark-22, that-21)
prep_by(committed-18, remark-22)

(ROOT
  (S
    (NP
      (NP (NNP Vaughan))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD thought)
            (ADVP (RB so) (RB too)))))
      (, ,))
    (VP (VBD replied) (: :) (`` ``)
      (S
        (NP (NNP Mrs) (NNP Lascelles))
        (VP (MD must)
          (VP (VB be)
            (ADJP (JJ aware))
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP (VBD was)
                  (ADVP (RB only))
                  (VP (VBG joking)))))))))
    (. .) ('' '')))

nsubj(thought-4, Vaughan-1)
nsubj(replied-8, Vaughan-1)
rcmod(Vaughan-1, thought-4)
advmod(too-6, so-5)
advmod(thought-4, too-6)
root(ROOT-0, replied-8)
nn(Lascelles-12, Mrs-11)
nsubj(aware-15, Lascelles-12)
aux(aware-15, must-13)
cop(aware-15, be-14)
ccomp(replied-8, aware-15)
mark(joking-20, that-16)
nsubj(joking-20, I-17)
aux(joking-20, was-18)
advmod(joking-20, only-19)
ccomp(aware-15, joking-20)

(ROOT
  (S (`` ``)
    (VP (VB Fie))
    (. !)))

root(ROOT-0, Fie-2)

(ROOT
  (S
    (NP
      (NP (NNP Mr) (NNP Vaughan))
      (, ,) ('' '')
      (VP (VBN cried)
        (NP
          (NP (NNP Cecilia) (NNP Ossulton))
          (: ;) (`` ``)
          (S
            (NP (PRP you))
            (VP (VBP know)
              (NP (PRP it)))))))
    (VP (VBD came)
      (PP (IN from)
        (NP (PRP$ your) (NN heart))))
    (. .) ('' '')))

nn(Vaughan-2, Mr-1)
nsubj(came-13, Vaughan-2)
vmod(Vaughan-2, cried-5)
nn(Ossulton-7, Cecilia-6)
dobj(cried-5, Ossulton-7)
nsubj(know-11, you-10)
dep(Ossulton-7, know-11)
dobj(know-11, it-12)
root(ROOT-0, came-13)
poss(heart-16, your-15)
prep_from(came-13, heart-16)

(ROOT
  (SINV (`` ``)
    (FRAG
      (NP (PRP$ My) (JJ dear) (NN Cecilia)))
    (, ,) ('' '')
    (VP (VBD said)
      (NP (DT the) (JJR elder)))
    (NP (NNP Miss) (NNP Ossulton))
    (, ,) (`` ``)
    (S
      (NP (PRP you))
      (VP (VBP forget)
        (NP (PRP yourself)))
      (: --)
      (SBARQ
        (WHNP (WP what))
        (SQ (MD can)
          (NP (PRP you))
          (ADVP (RB possibly))
          (VP (VB know)
            (PP (IN about)
              (NP
                (NP (NNS gentlemen) (POS 's))
                (NNS hearts)))))))
    (. ?) ('' '')))

poss(Cecilia-4, My-2)
amod(Cecilia-4, dear-3)
dep(said-7, Cecilia-4)
root(ROOT-0, said-7)
det(elder-9, the-8)
dobj(said-7, elder-9)
nn(Ossulton-11, Miss-10)
nsubj(said-7, Ossulton-11)
nsubj(forget-15, you-14)
ccomp(said-7, forget-15)
dobj(forget-15, yourself-16)
dobj(know-22, what-18)
aux(know-22, can-19)
nsubj(know-22, you-20)
advmod(know-22, possibly-21)
parataxis(forget-15, know-22)
poss(hearts-26, gentlemen-24)
prep_about(know-22, hearts-26)

(ROOT
  (S (`` ``)
    (NP (DT The) (NNP Bible))
    (VP (VBZ says)
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (NP (`` `)
              (ADJP
                (ADJP (JJ deceitful))
                (CC and)
                (ADJP (RB desperately) (JJ wicked))
                (, ,))
              ('' ') (NN aunt))))))
    (. .) ('' '')))

det(Bible-3, The-2)
nsubj(says-4, Bible-3)
root(ROOT-0, says-4)
mark(aunt-15, that-5)
nsubj(aunt-15, they-6)
cop(aunt-15, are-7)
amod(aunt-15, deceitful-9)
advmod(wicked-12, desperately-11)
conj_and(deceitful-9, wicked-12)
amod(aunt-15, wicked-12)
ccomp(says-4, aunt-15)

(ROOT
  (S (`` ``)
    (CC And)
    (VP (MD can) (RB not)
      (NP (PRP we))
      (VP
        (ADVP (RB also))
        (VB quote)
        (NP
          (NP (DT the) (NNP Bible))
          (PP (IN against)
            (NP
              (NP (PRP$ your) (NN sex))
              (, ,)
              (NP (NNP Miss) (NNP Ossulton)))))))
    (. ?) ('' '')))

cc(quote-7, And-2)
aux(quote-7, can-3)
neg(quote-7, not-4)
dobj(quote-7, we-5)
advmod(quote-7, also-6)
root(ROOT-0, quote-7)
det(Bible-9, the-8)
dobj(quote-7, Bible-9)
poss(sex-12, your-11)
prep_against(Bible-9, sex-12)
nn(Ossulton-15, Miss-14)
appos(sex-12, Ossulton-15)

(ROOT
  (NP (NNP replied) (NNP Seagrove) (. .)))

nn(Seagrove-2, replied-1)
root(ROOT-0, Seagrove-2)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Yes))
      (, ,)
      (NP (PRP you))
      (VP (MD could) (, ,)
        (ADVP (RB perhaps))
        (, ,)
        (SBAR (IN if)
          (S
            (NP
              (NP (DT any))
              (PP (IN of)
                (NP (PRP you))))
            (VP (VBD had)
              (ADVP (RB ever))
              (VP (VBN read)
                (NP (PRP it))))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP
      (NP (NNP Miss) (NNP Ossulton))
      (, ,)
      (NP (NN carelessly)))
    (. .)))

advmod(could-5, Yes-2)
nsubj(could-5, you-4)
ccomp(replied-19, could-5)
advmod(could-5, perhaps-7)
mark(read-15, if-9)
nsubj(read-15, any-10)
prep_of(any-10, you-12)
aux(read-15, had-13)
advmod(read-15, ever-14)
advcl(could-5, read-15)
dobj(read-15, it-16)
root(ROOT-0, replied-19)
nn(Ossulton-21, Miss-20)
nsubj(replied-19, Ossulton-21)
appos(Ossulton-21, carelessly-23)

(ROOT
  (S
    (S (`` ``)
      (PP (IN Upon)
        (NP (PRP$ my) (NN word)))
      (, ,)
      (ADVP (RB Cissy))
      (, ,)
      (NP (PRP you))
      (VP (VBP are)
        (VP (VBG throwing)
          (NP (DT the) (NN gauntlet))
          (PRT (RP down))
          (PP (TO to)
            (NP (DT the) (NNS gentlemen)))
          (, ,) ('' '')
          (NP (NNP observed) (NNP Lord) (NNP B)))))
    (: --) (: ;) (`` ``)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP
          (VP (VB throw)
            (NP (PRP$ my) (NN warder))
            (PRT (RP down)))
          (, ,)
          (CC and)
          (RB not)
          (VP (VB permit)
            (NP (DT this) (NN combat) (NN _))
            (NP (DT a) (JJ l'outrance) (NN _))))))
    (. .)))

poss(word-4, my-3)
prep_upon(throwing-10, word-4)
advmod(throwing-10, Cissy-6)
nsubj(throwing-10, you-8)
aux(throwing-10, are-9)
root(ROOT-0, throwing-10)
det(gauntlet-12, the-11)
dobj(throwing-10, gauntlet-12)
prt(throwing-10, down-13)
det(gentlemen-16, the-15)
prep_to(throwing-10, gentlemen-16)
nn(B-21, observed-19)
nn(B-21, Lord-20)
dobj(throwing-10, B-21)
nsubj(throw-28, I-26)
nsubj(permit-35, I-26)
aux(throw-28, shall-27)
conj_but(throwing-10, throw-28)
poss(warder-30, my-29)
dobj(throw-28, warder-30)
prt(throw-28, down-31)
neg(permit-35, not-34)
conj_but(throwing-10, permit-35)
conj_and(throw-28, permit-35)
det(_-38, this-36)
nn(_-38, combat-37)
iobj(permit-35, _-38)
det(_-41, a-39)
amod(_-41, l'outrance-40)
dobj(permit-35, _-41)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (PRP I))
      (VP (VBP perceive)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP drink)
              (NP
                (NP (DT no) (JJR more) (NN wine))
                (, ,)
                (NP (NNS gentlemen))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD will)
      (VP (VB take)
        (NP (PRP$ our) (NN coffee))
        (PP (IN on)
          (NP (NN deck)))))
    (. .) ('' '')))

nsubj(perceive-3, I-2)
ccomp(take-14, perceive-3)
nsubj(drink-5, you-4)
ccomp(perceive-3, drink-5)
neg(wine-8, no-6)
amod(wine-8, more-7)
dobj(drink-5, wine-8)
appos(wine-8, gentlemen-10)
nsubj(take-14, we-12)
aux(take-14, will-13)
root(ROOT-0, take-14)
poss(coffee-16, our-15)
dobj(take-14, coffee-16)
prep_on(take-14, deck-18)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP We))
      (VP (VBD were)
        (ADVP (RB just))
        (VP (IN about)
          (S
            (VP (TO to)
              (VP (VB retire) (, ,)
                (NP (PRP$ my) (NN lord))
                (, ,) ('' '')
                (PRN
                  (SINV
                    (VP (VBD observed)
                      (NP (DT the) (JJR elder)))
                    (NP (NNP Miss) (NNP Ossulton))))
                (, ,)
                (PP (IN with)
                  (NP
                    (NP (JJ great) (NN asperity))
                    (: :) (`` ``)
                    (S
                      (NP (PRP I))
                      (VP (VBP have)
                        (VP (VBN been)
                          (VP (VBG trying)
                            (S
                              (VP (TO to)
                                (VP (VB catch)
                                  (NP
                                    (NP (DT the) (NN eye))
                                    (PP (IN of)
                                      (NP (NNP Mrs) (NNPS Lascelles))))
                                  (PP (IN for)
                                    (NP (DT some) (NN time)))
                                  (, ,)
                                  (ADVP (CC but)))))))))
                    (: --) ('' '')))))))))
    (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (VBD was)
          (VP (VBG looking)
            (NP (DT another) (NN way)))))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VBP presume))))
    (, ,) ('' '')
    (VP (VBZ interrupted))
    (NP (NNP Mrs) (NNP Lascelles))
    (, ,)
    (S
      (VP (VBG smiling)))
    (. .)))

nsubj(about-5, We-2)
nsubj(retire-7, We-2)
aux(about-5, were-3)
advmod(about-5, just-4)
dep(interrupted-53, about-5)
aux(retire-7, to-6)
xcomp(about-5, retire-7)
poss(lord-10, my-9)
dobj(retire-7, lord-10)
parataxis(retire-7, observed-13)
det(elder-15, the-14)
dobj(observed-13, elder-15)
nn(Ossulton-17, Miss-16)
nsubj(observed-13, Ossulton-17)
amod(asperity-21, great-20)
prep_with(retire-7, asperity-21)
nsubj(trying-27, I-24)
nsubj(catch-29, I-24)
aux(trying-27, have-25)
aux(trying-27, been-26)
dep(asperity-21, trying-27)
aux(catch-29, to-28)
xcomp(trying-27, catch-29)
det(eye-31, the-30)
dobj(catch-29, eye-31)
nn(Lascelles-34, Mrs-33)
prep_of(eye-31, Lascelles-34)
det(time-37, some-36)
prep_for(catch-29, time-37)
advmod(catch-29, but-39)
nsubj(looking-45, I-43)
aux(looking-45, was-44)
dep(interrupted-53, looking-45)
det(way-47, another-46)
dobj(looking-45, way-47)
nsubj(presume-50, I-49)
parataxis(looking-45, presume-50)
root(ROOT-0, interrupted-53)
nn(Lascelles-55, Mrs-54)
nsubj(interrupted-53, Lascelles-55)
vmod(interrupted-53, smiling-57)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ afraid)
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBP am)
                (NP (DT the)
                  (ADJP (JJ unfortunate))
                  (NN culprit))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Seagrove))
    (. .)))

nsubj(afraid-4, I-2)
cop(afraid-4, am-3)
ccomp(said-13, afraid-4)
mark(culprit-10, that-5)
nsubj(culprit-10, I-6)
cop(culprit-10, am-7)
det(culprit-10, the-8)
amod(culprit-10, unfortunate-9)
ccomp(afraid-4, culprit-10)
root(ROOT-0, said-13)
nn(Seagrove-15, Mr-14)
nsubj(said-13, Seagrove-15)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBG telling)
          (NP (DT a) (JJ little) (NN anecdote))
          (PP (TO to)
            (NP (NNP Mrs) (NNPS Lascelles))))))
    (: --) ('' '')
    (PRN
      (SINV (`` ``)
        (S
          (NP
            (NP (NNP Which))
            (, ,)
            (PP (IN of)
              (NP
                (NP (NN course))
                (, ,)
                (PP (IN from)
                  (NP
                    (NP (PRP$ its))
                    (VP (VBG being)
                      (VP (VBN communicated)
                        (PP (IN in)
                          (NP (DT an) (NN undertone)))))))))
            (, ,))
          (VP (VBD was) (RB not)
            (ADJP (JJ proper)
              (PP (IN for)
                (NP (PDT all) (DT the) (NN company)))
              (S
                (VP (TO to)
                  (VP (VB hear)))))))
        (, ,) ('' '')
        (VP (VBD replied)
          (NP (DT the) (JJR elder)))
        (NP (NNP Miss) (NNP Ossulton))))
    (: ;) (`` ``)
    (S (CC but)
      (SBAR (IN if)
        (S
          (NP (NNP Mrs) (NNP Lascelles))
          (VP (VBZ is)
            (ADVP (RB now))
            (ADJP (JJ ready)))
          (, ,) ('' '')))
      (VP (VBD continued)
        (NP (PRP she))
        (, ,)
        (S
          (VP (VBG bridling)
            (PRT (RP up))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP (VBD rose)
              (PP (IN from)
                (NP (PRP$ her) (NN chair))))))))
    (. .)))

nsubj(telling-4, I-2)
aux(telling-4, was-3)
root(ROOT-0, telling-4)
det(anecdote-7, a-5)
amod(anecdote-7, little-6)
dobj(telling-4, anecdote-7)
nn(Lascelles-10, Mrs-9)
prep_to(telling-4, Lascelles-10)
nsubj(proper-29, Which-14)
nsubj(hear-35, Which-14)
prep_of(Which-14, course-17)
prep_from(course-17, its-20)
auxpass(communicated-22, being-21)
vmod(its-20, communicated-22)
det(undertone-25, an-24)
prep_in(communicated-22, undertone-25)
cop(proper-29, was-27)
neg(proper-29, not-28)
ccomp(replied-38, proper-29)
predet(company-33, all-31)
det(company-33, the-32)
prep_for(proper-29, company-33)
aux(hear-35, to-34)
xcomp(proper-29, hear-35)
dep(telling-4, replied-38)
det(elder-40, the-39)
dobj(replied-38, elder-40)
nn(Ossulton-42, Miss-41)
nsubj(replied-38, Ossulton-42)
cc(continued-54, but-45)
mark(ready-51, if-46)
nn(Lascelles-48, Mrs-47)
nsubj(ready-51, Lascelles-48)
cop(ready-51, is-49)
advmod(ready-51, now-50)
csubj(continued-54, ready-51)
parataxis(telling-4, continued-54)
dobj(continued-54, she-55)
vmod(continued-54, bridling-57)
prt(bridling-57, up-58)
mark(rose-62, as-60)
nsubj(rose-62, she-61)
advcl(continued-54, rose-62)
poss(chair-65, her-64)
prep_from(rose-62, chair-65)

(ROOT
  (SINV (`` ``)
    (S
      (PP (IN At)
        (NP (DT all) (NNS events)))
      (, ,)
      (NP (PRP I))
      (VP (MD can)
        (VP (VB hear)
          (NP
            (NP (DT the) (NN remainder))
            (PP (IN of)
              (NP (PRP it))))
          (PP (IN on)
            (NP (NN deck))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Mrs) (NNP Lascelles))
    (. .)))

det(events-4, all-3)
prep_at(hear-8, events-4)
nsubj(hear-8, I-6)
aux(hear-8, can-7)
ccomp(replied-17, hear-8)
det(remainder-10, the-9)
dobj(hear-8, remainder-10)
prep_of(remainder-10, it-12)
prep_on(hear-8, deck-14)
root(ROOT-0, replied-17)
nn(Lascelles-19, Mrs-18)
nsubj(replied-17, Lascelles-19)

(ROOT
  (S
    (S
      (NP (DT The) (NNS ladies))
      (VP (VBD rose)
        (CC and)
        (VBD went)
        (PP (IN into)
          (NP (DT the) (NN cabin)))))
    (, ,)
    (NP
      (NP (NNP Cecilia)
        (CC and)
        (NNP Mrs) (NNPS Lascelles) (NN exchanging))
      (ADJP (RB very) (JJ significant)))
    (VP (VBZ smiles)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBD followed)
            (NP
              (NP (DT the) (JJ precise) (NN spinster))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD did) (RB not)
                    (VP (VB choose)
                      (SBAR (IN that)
                        (S
                          (NP (NNP Mrs) (NNP Lascelles))
                          (VP (MD should)
                            (VP (VB take)
                              (NP (DT the) (NN lead))
                              (ADVP (RB merely))
                              (SBAR (IN because)
                                (S
                                  (NP (PRP she))
                                  (VP (VBD had)
                                    (ADVP (RB once))
                                    (VP (VBN happened)
                                      (S
                                        (VP (TO to)
                                          (VP (VB have)
                                            (VP (VBN been)
                                              (VP (VBN married)))))))))))))))))))))))
    (. .)))

det(ladies-2, The-1)
nsubj(rose-3, ladies-2)
nsubj(went-5, ladies-2)
ccomp(smiles-17, rose-3)
conj_and(rose-3, went-5)
ccomp(smiles-17, went-5)
det(cabin-8, the-7)
prep_into(rose-3, cabin-8)
nn(exchanging-14, Cecilia-10)
conj_and(Cecilia-10, Mrs-12)
nn(exchanging-14, Mrs-12)
nn(exchanging-14, Lascelles-13)
nsubj(smiles-17, exchanging-14)
advmod(significant-16, very-15)
amod(exchanging-14, significant-16)
root(ROOT-0, smiles-17)
mark(followed-20, as-18)
nsubj(followed-20, they-19)
advcl(smiles-17, followed-20)
det(spinster-23, the-21)
amod(spinster-23, precise-22)
dobj(followed-20, spinster-23)
nsubj(choose-28, spinster-23)
aux(choose-28, did-26)
neg(choose-28, not-27)
rcmod(spinster-23, choose-28)
mark(take-33, that-29)
nn(Lascelles-31, Mrs-30)
nsubj(take-33, Lascelles-31)
aux(take-33, should-32)
ccomp(choose-28, take-33)
det(lead-35, the-34)
dobj(take-33, lead-35)
advmod(take-33, merely-36)
mark(happened-41, because-37)
nsubj(happened-41, she-38)
nsubjpass(married-45, she-38)
aux(happened-41, had-39)
advmod(happened-41, once-40)
advcl(take-33, happened-41)
aux(married-45, to-42)
aux(married-45, have-43)
auxpass(married-45, been-44)
xcomp(happened-41, married-45)

(ROOT
  (S
    (NP (DT The) (NNS gentlemen))
    (ADVP (RB also))
    (VP
      (VP (VBD broke)
        (PRT (RP up)))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PP (IN on)
          (NP (NN deck)))))
    (. .)))

det(gentlemen-2, The-1)
nsubj(broke-4, gentlemen-2)
nsubj(went-8, gentlemen-2)
advmod(broke-4, also-3)
root(ROOT-0, broke-4)
prt(broke-4, up-5)
conj_and(broke-4, went-8)
prep_on(went-8, deck-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (VBP have)
        (NP
          (NP
            (NP (DT a) (JJ nice) (NN breeze))
            (ADVP (RB now)))
          (, ,)
          (NP (PRP$ my) (NN lord)))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD observed))
        (NP
          (NP (NNP Mr) (NNP Stewart))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD had)
                (VP (VBN remained)
                  (PP (IN on)
                    (NP (NN deck)))))))))
      (, ,) (`` ``))
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP lie)
        (ADVP (RB right) (RB up))
        (NP (NNP Channel))))
    (. .) ('' '')))

nsubj(have-3, We-2)
root(ROOT-0, have-3)
det(breeze-6, a-4)
amod(breeze-6, nice-5)
dobj(have-3, breeze-6)
advmod(breeze-6, now-7)
poss(lord-10, my-9)
appos(breeze-6, lord-10)
dep(have-3, observed-13)
nn(Stewart-15, Mr-14)
nsubj(observed-13, Stewart-15)
nsubj(remained-19, Stewart-15)
aux(remained-19, had-18)
rcmod(Stewart-15, remained-19)
prep_on(remained-19, deck-21)
nsubj(lie-26, we-25)
conj_and(have-3, lie-26)
advmod(up-28, right-27)
advmod(lie-26, up-28)
dobj(lie-26, Channel-29)

(ROOT
  (S
    (S
      (NP (`` ``)
        (NP
          (NP (RB So) (RB much) (DT the))
          (NP (JJR better)))
        (, ,) ('' ''))
      (VP (VBD replied)
        (NP (PRP$ his) (NN lordship))))
    (: ;) (`` ``)
    (S
      (NP (PRP we))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB have)
              (VP (VBN been)
                (VP (VBN anchored)
                  (PP (IN at)
                    (NP (NNP Cowes))
                    (NP (DT a) (NN week) (IN ago))))))))))
    (. .)))

advmod(the-4, So-2)
advmod(the-4, much-3)
nsubj(replied-8, the-4)
dep(the-4, better-5)
root(ROOT-0, replied-8)
poss(lordship-10, his-9)
dobj(replied-8, lordship-10)
nsubj(ought-14, we-13)
nsubjpass(anchored-18, we-13)
parataxis(replied-8, ought-14)
aux(anchored-18, to-15)
aux(anchored-18, have-16)
auxpass(anchored-18, been-17)
xcomp(ought-14, anchored-18)
prep_at(anchored-18, Cowes-20)
det(week-22, a-21)
tmod(anchored-18, week-22)
amod(week-22, ago-23)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD will) (RB all)
      (VP (VB be)
        (ADVP (RB there))
        (PP (IN before)
          (NP (PRP us)))))
    (. .) ('' '')))

nsubj(be-4, They-1)
aux(be-4, will-2)
advmod(be-4, all-3)
root(ROOT-0, be-4)
advmod(be-4, there-5)
prep_before(be-4, us-7)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Tell)
        (S
          (NP (NNP Mr) (NNP Simpson))
          (VP (TO to)
            (VP (VB bring)
              (NP (PRP me))
              (NP
                (NP (DT a) (NN light))
                (PP (IN for)
                  (NP (PRP$ my) (NN cigar)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Mr) (NNP Ossulton))
      (PP (TO to)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (NNS men))))))
    (. .)))

ccomp(said-15, Tell-2)
nn(Simpson-4, Mr-3)
dobj(Tell-2, Simpson-4)
nsubj(bring-6, Simpson-4)
aux(bring-6, to-5)
xcomp(Tell-2, bring-6)
iobj(bring-6, me-7)
det(light-9, a-8)
dobj(bring-6, light-9)
poss(cigar-12, my-11)
prep_for(light-9, cigar-12)
root(ROOT-0, said-15)
nn(Ossulton-17, Mr-16)
nsubj(said-15, Ossulton-17)
prep_to(Ossulton-17, one-19)
det(men-22, the-21)
prep_of(one-19, men-22)

(ROOT
  (S
    (S
      (NP (NNP Mr) (NNP Stewart))
      (VP (VBD went)
        (PRT (RP down))
        (PP (TO to)
          (NP (PRP$ his) (NN dinner)))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NNS ladies))
        (CC and)
        (NP (DT the) (NN coffee)))
      (VP (VBD came)
        (PP (IN on)
          (NP (NN deck)))))
    (: :)
    (S
      (NP (DT the) (NN breeze))
      (VP (VBD was)
        (NP
          (NP (NN fine))
          (, ,)
          (NP
            (NP
              (NP (DT the) (NN weather))
              (PRN (-LRB- -LRB-)
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (NP (NNP April))))
                (-RRB- -RRB-)))
            (ADJP (RB almost) (JJ warm))))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN yacht))
        (, ,)
        (SBAR
          (WHNP (WP$ whose) (NN name))
          (S
            (VP (VBD was)
              (NP
                (NP (DT the) (NNP _) (NNP Arrow) (NNP _))
                (, ,)
                (VP (VBN assisted)
                  (PP (IN by)
                    (NP (DT the) (NN tide))))))))
        (, ,))
      (ADVP (RB soon))
      (VP (VBN left)
        (S
          (NP (DT the) (NNP Mewstone))
          (ADJP (RB far) (JJ astern)))))
    (. .)))

nn(Stewart-2, Mr-1)
nsubj(went-3, Stewart-2)
root(ROOT-0, went-3)
prt(went-3, down-4)
poss(dinner-7, his-6)
prep_to(went-3, dinner-7)
det(ladies-10, the-9)
nsubj(came-14, ladies-10)
det(coffee-13, the-12)
conj_and(ladies-10, coffee-13)
nsubj(came-14, coffee-13)
conj_and(went-3, came-14)
prep_on(came-14, deck-16)
det(breeze-19, the-18)
nsubj(fine-21, breeze-19)
cop(fine-21, was-20)
conj_and(went-3, fine-21)
det(weather-24, the-23)
appos(fine-21, weather-24)
nsubj(April-28, it-26)
cop(April-28, was-27)
dep(weather-24, April-28)
advmod(warm-31, almost-30)
amod(weather-24, warm-31)
det(yacht-35, the-34)
poss(name-38, yacht-35)
nsubj(left-51, yacht-35)
nsubj(_-43, name-38)
cop(_-43, was-39)
det(_-43, the-40)
nn(_-43, _-41)
nn(_-43, Arrow-42)
rcmod(yacht-35, _-43)
vmod(_-43, assisted-45)
det(tide-48, the-47)
agent(assisted-45, tide-48)
advmod(left-51, soon-50)
conj_and(went-3, left-51)
det(Mewstone-53, the-52)
nsubj(astern-55, Mewstone-53)
advmod(astern-55, far-54)
xcomp(left-51, astern-55)

(ROOT
  (S
    (NP (NNP CHAPTER))
    (VP (VBZ TWO))
    (. .)))

nsubj(TWO-2, CHAPTER-1)
root(ROOT-0, TWO-2)

(ROOT
  (S
    (NP (NNP CUTTER) (NNP THE))
    (VP (VBD SECOND))
    (. .)))

nn(THE-2, CUTTER-1)
nsubj(SECOND-3, THE-2)
root(ROOT-0, SECOND-3)

(ROOT
  (S
    (NP (NNP Reader) (, ,))
    (VP (VBP have)
      (NP (PRP you))
      (ADVP (RB ever))
      (VP (VBN been)
        (PP (IN at)
          (NP (NNP Portsmouth)))))
    (. ?)))

nsubj(been-6, Reader-1)
aux(been-6, have-3)
dobj(been-6, you-4)
advmod(been-6, ever-5)
root(ROOT-0, been-6)
prep_at(been-6, Portsmouth-8)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP have))))
      (, ,)
      (NP (PRP you))
      (VP (MD must)
        (VP (VB have)
          (VP (VBN been)
            (ADJP (JJ delighted)
              (PP (IN with)
                (NP (DT the) (NN view))))
            (PP (IN from)
              (NP (DT the) (JJ saluting) (NN battery)))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP have) (RB not))))
      (NP (PRP you))
      (VP (VBD had)
        (ADVP (RBR better))
        (VP (VB go)
          (ADVP
            (ADVP (RB there) (RB as) (RB soon))
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (MD can))))))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(delighted-9, have-3)
nsubj(delighted-9, you-5)
aux(delighted-9, must-6)
aux(delighted-9, have-7)
cop(delighted-9, been-8)
root(ROOT-0, delighted-9)
det(view-12, the-11)
prep_with(delighted-9, view-12)
det(battery-16, the-14)
amod(battery-16, saluting-15)
prep_from(delighted-9, battery-16)
mark(have-21, if-19)
nsubj(have-21, you-20)
advcl(go-26, have-21)
neg(have-21, not-22)
nsubj(go-26, you-23)
aux(go-26, had-24)
advmod(go-26, better-25)
conj_and(delighted-9, go-26)
advmod(soon-29, there-27)
advmod(soon-29, as-28)
advmod(go-26, soon-29)
mark(can-32, as-30)
nsubj(can-32, you-31)
advcl(soon-29, can-32)
ccomp(soon-29, can-32)

(ROOT
  (S
    (S
      (PP (IN From)
        (NP (DT the) (JJ saluting) (NN battery)))
      (NP (PRP you))
      (VP (MD may)
        (VP
          (VP (VB look)
            (PRT (RP up))
            (NP (DT the) (NN harbour)))
          (, ,)
          (CC and)
          (VP (VB see)
            (NP
              (NP (RB much))
              (PP (IN of)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP I))
                    (VP (VBP have)
                      (VP (VBN described)
                        (PP (IN at)
                          (NP (NNP Plymouth)))))))))))))
    (: ;)
    (S
      (S
        (NP (DT the) (NN scenery))
        (VP (VBZ is)
          (ADJP (JJ different))))
      (, ,)
      (CC but)
      (S
        (NP
          (NP (JJ similar) (NNS arsenals)
            (CC and)
            (NNS dockyards))
          (, ,)
          (CC and)
          (NP
            (NP (DT an) (JJ equal) (NN portion))
            (PP (IN of)
              (NP (PRP$ our) (JJ stupendous) (NN navy)))))
        (VP (VBP are)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN found)
                  (ADVP (RB there)))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB see)
          (NP
            (NP (NNP Gosport))
            (PP (IN on)
              (NP
                (NP
                  (NP (DT the) (JJ other) (NN side))
                  (PP (IN of)
                    (NP (DT the) (NN harbour))))
                (, ,)
                (CC and)
                (NP
                  (NP (JJ Sallyport) (NN close))
                  (PP (TO to)
                    (NP (PRP you))))
                (: ;))))
          (PP (IN besides)
            (NP (DT a) (JJ great) (JJ many) (JJ other) (NNS places)))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (PRN (, ,)
              (PP (IN from)
                (NP (DT the) (JJ saluting) (NN battery)))
              (, ,))
            (S
              (NP (PRP you))
              (VP (MD can) (RB not)
                (VP (VB see))))))))
    (. .)))

det(battery-4, the-2)
amod(battery-4, saluting-3)
prep_from(look-7, battery-4)
nsubj(look-7, you-5)
nsubj(see-13, you-5)
aux(look-7, may-6)
root(ROOT-0, look-7)
prt(look-7, up-8)
det(harbour-10, the-9)
dobj(look-7, harbour-10)
conj_and(look-7, see-13)
dobj(see-13, much-14)
dobj(described-19, what-16)
nsubj(described-19, I-17)
aux(described-19, have-18)
prepc_of(much-14, described-19)
prep_at(described-19, Plymouth-21)
det(scenery-24, the-23)
nsubj(different-26, scenery-24)
cop(different-26, is-25)
conj_and(look-7, different-26)
amod(arsenals-30, similar-29)
nsubj(are-42, arsenals-30)
nsubjpass(found-45, arsenals-30)
conj_and(arsenals-30, dockyards-32)
nsubj(are-42, dockyards-32)
nsubjpass(found-45, dockyards-32)
det(portion-37, an-35)
amod(portion-37, equal-36)
conj_and(arsenals-30, portion-37)
nsubj(are-42, portion-37)
nsubjpass(found-45, portion-37)
poss(navy-41, our-39)
amod(navy-41, stupendous-40)
prep_of(portion-37, navy-41)
conj_and(look-7, are-42)
conj_but(different-26, are-42)
aux(found-45, to-43)
auxpass(found-45, be-44)
xcomp(are-42, found-45)
advmod(found-45, there-46)
nsubj(see-51, you-49)
aux(see-51, will-50)
conj_and(look-7, see-51)
dobj(see-51, Gosport-52)
det(side-56, the-54)
amod(side-56, other-55)
prep_on(Gosport-52, side-56)
det(harbour-59, the-58)
prep_of(side-56, harbour-59)
amod(close-63, Sallyport-62)
prep_on(Gosport-52, close-63)
conj_and(side-56, close-63)
prep_to(close-63, you-65)
det(places-72, a-68)
amod(places-72, great-69)
amod(places-72, many-70)
amod(places-72, other-71)
prep_besides(see-51, places-72)
dobj(see-84, which-74)
dep(see-84, from-76)
det(battery-79, the-77)
amod(battery-79, saluting-78)
pobj(from-76, battery-79)
nsubj(see-84, you-81)
aux(see-84, can-82)
neg(see-84, not-83)
dep(see-51, see-84)

(ROOT
  (S (CC And)
    (ADVP (RB then))
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (NNP Southsea) (NNP Beach))
        (PP (TO to)
          (NP (PRP$ your) (NN left)))))
    (. .)))

cc(is-4, And-1)
advmod(is-4, then-2)
expl(is-4, there-3)
root(ROOT-0, is-4)
nn(Beach-6, Southsea-5)
nsubj(is-4, Beach-6)
poss(left-9, your-8)
prep_to(Beach-6, left-9)

(ROOT
  (S
    (PP (IN Before)
      (NP (PRP you)))
    (, ,)
    (S
      (NP
        (NP (NNP Spithead))
        (, ,)
        (PRN
          (PP (IN with)
            (NP (DT the) (NN men-of-war))))
        (, ,)
        (CC and)
        (NP (DT the) (NN Motherbank)))
      (VP (VBD crowded)
        (PP (IN with)
          (NP (NN merchant) (NNS vessels)))))
    (: ;)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP
            (NP (DT the) (NN buoy))
            (SBAR
              (WHADVP (WRB where))
              (S
                (S
                  (NP (DT the) (NNP _) (NNP Royal) (NNP George) (NNP _))
                  (VP (VBD was)
                    (ADJP (JJ wrecked))))
                (CC and)
                (S
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (PRP she))
                      (ADVP (RB still))
                      (VP (VBZ lies))))
                  (, ,)
                  (S
                    (S
                      (NP (DT the) (NN fish))
                      (VP (VBG swimming)
                        (PRT (RP in)
                          (CC and)
                          (RP out))
                        (PP (IN of)
                          (NP (PRP$ her) (NN cabin) (NNS windows)))))
                    (CC but)
                    (S
                      (NP (DT that))
                      (VP (VBZ is) (RB not)
                        (NP (DT all)))))
                  (: ;)
                  (S
                    (NP (PRP you))
                    (VP (MD can)
                      (ADVP (RB also))
                      (VP (VB see)
                        (NP
                          (NP (DT the) (NNP Isle))
                          (PP (IN of)
                            (NP (NNP Wight)))))))
                  (, ,)))))
          (: --)
          (NP
            (NP (NNP Ryde))
            (PP (IN with)
              (NP (PRP$ its) (JJ long) (JJ wooden) (NN pier))))
          (, ,)
          (CC and)
          (NP
            (NP (NNP Cowes))
            (, ,)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT the) (NNS yachts))
                (VP (VBP lie))))))))
    (. .)))

prep_before(crowded-13, you-2)
nsubj(crowded-13, Spithead-4)
det(men-of-war-8, the-7)
prep_with(Spithead-4, men-of-war-8)
det(Motherbank-12, the-11)
conj_and(Spithead-4, Motherbank-12)
nsubj(crowded-13, Motherbank-12)
root(ROOT-0, crowded-13)
nn(vessels-16, merchant-15)
prep_with(crowded-13, vessels-16)
expl(is-20, there-19)
conj_and(crowded-13, is-20)
det(buoy-22, the-21)
nsubj(is-20, buoy-22)
advmod(wrecked-30, where-23)
det(_-28, the-24)
nn(_-28, _-25)
nn(_-28, Royal-26)
nn(_-28, George-27)
nsubj(wrecked-30, _-28)
cop(wrecked-30, was-29)
rcmod(buoy-22, wrecked-30)
advmod(lies-35, where-32)
nsubj(lies-35, she-33)
advmod(lies-35, still-34)
advcl(swimming-39, lies-35)
det(fish-38, the-37)
nsubj(swimming-39, fish-38)
rcmod(buoy-22, swimming-39)
conj_and(wrecked-30, swimming-39)
prt(swimming-39, in-40)
cc(in-40, and-41)
dep(in-40, out-42)
poss(windows-46, her-44)
nn(windows-46, cabin-45)
prep_of(swimming-39, windows-46)
nsubj(all-51, that-48)
cop(all-51, is-49)
neg(all-51, not-50)
conj_and(wrecked-30, all-51)
conj_but(swimming-39, all-51)
nsubj(see-56, you-53)
aux(see-56, can-54)
advmod(see-56, also-55)
parataxis(swimming-39, see-56)
det(Isle-58, the-57)
dobj(see-56, Isle-58)
prep_of(Isle-58, Wight-60)
nsubj(is-20, Ryde-63)
conj_and(buoy-22, Ryde-63)
poss(pier-68, its-65)
amod(pier-68, long-66)
amod(pier-68, wooden-67)
prep_with(Ryde-63, pier-68)
conj_and(buoy-22, Cowes-71)
advmod(lie-76, where-73)
det(yachts-75, the-74)
nsubj(lie-76, yachts-75)
rcmod(Cowes-71, lie-76)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (NN fact)))
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT a) (JJ great) (NN deal)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN seen)
                  (PP
                    (PP (IN at)
                      (NP (NNP Portsmouth)))
                    (CONJP (RB as) (RB well) (IN as))
                    (PP (IN at)
                      (NP (NNP Plymouth)))))))))))
    (: ;)
    (S (CC but)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP wish)
            (S
              (NP (PRP you))
              (ADVP (RB particularly))
              (VP (TO to)
                (VP (VB see)
                  (ADVP (RB just))
                  (ADVP (RB now))))))))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN vessel))
          (VP (VBG holding)
            (ADVP (RB fast)
              (PP (TO to)
                (NP (DT the) (NN buoy))))
            (PP
              (ADVP (RB just))
              (IN off)
              (NP (DT the) (JJ saluting) (NN battery)))))))
    (. .)))

prep_in(is-4, fact-2)
expl(is-4, there-3)
root(ROOT-0, is-4)
det(deal-7, a-5)
amod(deal-7, great-6)
nsubj(is-4, deal-7)
aux(seen-10, to-8)
auxpass(seen-10, be-9)
vmod(deal-7, seen-10)
prep_at(seen-10, Portsmouth-12)
prep_at(seen-10, Plymouth-17)
conj_and(Portsmouth-12, Plymouth-17)
cc(vessel-31, but-19)
dobj(wish-22, what-20)
nsubj(see-26, what-20)
nsubj(wish-22, I-21)
csubj(vessel-31, wish-22)
dobj(wish-22, you-23)
nsubj(see-26, you-23)
advmod(see-26, particularly-24)
aux(see-26, to-25)
xcomp(wish-22, see-26)
advmod(see-26, just-27)
advmod(see-26, now-28)
cop(vessel-31, is-29)
det(vessel-31, a-30)
parataxis(is-4, vessel-31)
vmod(vessel-31, holding-32)
advmod(holding-32, fast-33)
det(buoy-36, the-35)
prep_to(fast-33, buoy-36)
advmod(holding-32, just-37)
det(battery-41, the-39)
amod(battery-41, saluting-40)
prep_off(holding-32, battery-41)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ is)
        (NP (DT a) (NN cutter))))
    (: ;)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD may)
        (VP (VB know)
          (SBAR (IN that)
            (S
              (NP (PRP she))
              (VP (VBZ belongs)
                (PP (TO to)
                  (NP (DT the) (NNP Preventive) (NNP Service)))
                (PP (IN by)
                  (NP
                    (NP (DT the) (NN number))
                    (PP (IN of)
                      (NP (NNS gigs)
                        (CC and)
                        (NNS galleys)))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (PRP she))
                        (VP (VBZ has)
                          (VP (VBN hoisted)
                            (ADVP (RB up) (DT all) (RB round))
                            (NP (PRP her))))))))))))))
    (. .)))

nsubj(cutter-4, She-1)
cop(cutter-4, is-2)
det(cutter-4, a-3)
root(ROOT-0, cutter-4)
nsubj(know-9, you-7)
aux(know-9, may-8)
conj_and(cutter-4, know-9)
mark(belongs-12, that-10)
nsubj(belongs-12, she-11)
ccomp(know-9, belongs-12)
det(Service-16, the-14)
nn(Service-16, Preventive-15)
prep_to(belongs-12, Service-16)
det(number-19, the-18)
prep_by(belongs-12, number-19)
dobj(hoisted-27, number-19)
prep_of(number-19, gigs-21)
prep_of(number-19, galleys-23)
conj_and(gigs-21, galleys-23)
nsubj(hoisted-27, she-25)
aux(hoisted-27, has-26)
rcmod(number-19, hoisted-27)
advmod(round-30, up-28)
dep(round-30, all-29)
advmod(hoisted-27, round-30)
dobj(hoisted-27, her-31)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ looks)
      (PP (IN like)
        (NP
          (NP
            (NP (DT a) (NN vessel))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD was)
                  (VP (IN about)
                    (S
                      (VP (TO to)
                        (VP (VB sail)
                          (PP (IN with)
                            (NP
                              (NP (DT a) (NN cargo))
                              (PP (IN of)
                                (NP (NNS boats)))))))))))))
          (: ;)
          (NP
            (NP (CD two))
            (PP (IN on)
              (NP (NN deck))))
          (, ,)
          (NP (CD one) (NN astern))
          (, ,)
          (NP
            (NP (CD one))
            (PP (IN on)
              (NP
                (NP (DT each) (NN side))
                (PP (IN of)
                  (NP (PRP her)))))))))
    (. .)))

nsubj(looks-2, She-1)
root(ROOT-0, looks-2)
det(vessel-5, a-4)
prep_like(looks-2, vessel-5)
nsubj(about-8, vessel-5)
nsubj(sail-10, vessel-5)
aux(about-8, was-7)
rcmod(vessel-5, about-8)
aux(sail-10, to-9)
xcomp(about-8, sail-10)
det(cargo-13, a-12)
prep_with(sail-10, cargo-13)
prep_of(cargo-13, boats-15)
dep(vessel-5, two-17)
prep_on(two-17, deck-19)
num(astern-22, one-21)
appos(vessel-5, astern-22)
appos(vessel-5, one-24)
det(side-27, each-26)
prep_on(one-24, side-27)
prep_of(side-27, her-29)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP observe)
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBZ is)
              (VP (VBN painted)
                (S
                  (ADJP (JJ black)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PDT all) (PRP$ her) (NNS boats))
      (VP (VBP are)
        (ADJP (JJ white))))
    (. .)))

nsubj(observe-2, You-1)
root(ROOT-0, observe-2)
mark(painted-6, that-3)
nsubjpass(painted-6, she-4)
auxpass(painted-6, is-5)
ccomp(observe-2, painted-6)
xcomp(painted-6, black-7)
predet(boats-12, all-10)
poss(boats-12, her-11)
nsubj(white-14, boats-12)
cop(white-14, are-13)
conj_and(observe-2, white-14)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ is) (RB not)
        (NP (PDT such) (DT an) (JJ elegant) (NN vessel))
        (PP (IN as)
          (NP (DT the) (NN yacht)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBZ is)
        (ADVP (RB much) (RBR more))
        (VP (VBN lumbered)
          (PRT (RP up)))))
    (. .)))

nsubj(vessel-7, She-1)
cop(vessel-7, is-2)
neg(vessel-7, not-3)
predet(vessel-7, such-4)
det(vessel-7, an-5)
amod(vessel-7, elegant-6)
root(ROOT-0, vessel-7)
det(yacht-10, the-9)
prep_as(vessel-7, yacht-10)
nsubjpass(lumbered-17, she-13)
auxpass(lumbered-17, is-14)
advmod(more-16, much-15)
advmod(lumbered-17, more-16)
conj_and(vessel-7, lumbered-17)
prt(lumbered-17, up-18)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ has)
      (NP
        (NP (DT no) (NNS haunches))
        (PP (IN of)
          (NP
            (NP (NN venison))
            (VP (VBG hanging)
              (PP (IN over)
                (NP (DT the) (NN stern))))))))
    (. !)))

nsubj(has-2, She-1)
root(ROOT-0, has-2)
neg(haunches-4, no-3)
dobj(has-2, haunches-4)
prep_of(haunches-4, venison-6)
vmod(venison-6, hanging-7)
det(stern-10, the-9)
prep_over(hanging-7, stern-10)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP
                (NP (DT a) (NN leg))
                (PP (IN of)
                  (NP (NN mutton))))
              (CC and)
              (NP
                (NP (DT some) (NNS cabbages))
                (VP (VBG hanging)
                  (PP (IN by)
                    (NP (PRP$ their) (NNS stalks))))))))))
    (. .)))

cc(think-3, But-1)
nsubj(think-3, I-2)
root(ROOT-0, think-3)
expl(is-5, there-4)
ccomp(think-3, is-5)
det(leg-7, a-6)
nsubj(is-5, leg-7)
prep_of(leg-7, mutton-9)
det(cabbages-12, some-11)
nsubj(is-5, cabbages-12)
conj_and(leg-7, cabbages-12)
vmod(cabbages-12, hanging-13)
poss(stalks-16, their-15)
agent(hanging-13, stalks-16)

(ROOT
  (S (CC But)
    (NP (NNS revenue-cutters))
    (VP (VBP are) (RB not)
      (NP (NNS yachts)))
    (. .)))

cc(yachts-5, But-1)
nsubj(yachts-5, revenue-cutters-2)
cop(yachts-5, are-3)
neg(yachts-5, not-4)
root(ROOT-0, yachts-5)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD will)
        (VP (VB find)
          (NP (DT no) (NN turtle)
            (CC or)
            (NN champagne)))))
    (: ;)
    (CC but)
    (, ,)
    (S
      (ADVP (RB nevertheless))
      (, ,)
      (NP (PRP you))
      (VP (MD will) (, ,)
        (ADVP (RB perhaps))
        (, ,)
        (VP (VB find)
          (NP (DT a) (NN joint)
            (S
              (VP (TO to)
                (VP (VB carve)
                  (PP (IN at))
                  (, ,)
                  (NP
                    (NP (DT a) (JJ good) (NN glass))
                    (PP (IN of)
                      (NP (NN grog)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT a) (NN hearty))
      (ADJP (JJ welcome)))
    (. .)))

nsubj(find-3, You-1)
nsubj(welcome-34, You-1)
aux(find-3, will-2)
root(ROOT-0, find-3)
neg(turtle-5, no-4)
dobj(find-3, turtle-5)
dobj(find-3, champagne-7)
conj_or(turtle-5, champagne-7)
advmod(find-18, nevertheless-11)
nsubj(find-18, you-13)
aux(find-18, will-14)
advmod(find-18, perhaps-16)
conj_but(find-3, find-18)
det(joint-20, a-19)
dobj(find-18, joint-20)
aux(carve-22, to-21)
vmod(joint-20, carve-22)
prep(carve-22, at-23)
det(glass-27, a-25)
amod(glass-27, good-26)
dobj(carve-22, glass-27)
prep_of(glass-27, grog-29)
det(hearty-33, a-32)
dep(welcome-34, hearty-33)
conj_and(find-3, welcome-34)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP us))
        (VP (VB go)
          (PP (IN on)
            (NP (NN board))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(go-3, us-2)
ccomp(Let-1, go-3)
prep_on(go-3, board-5)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP observe)
        (SBAR
          (S
            (NP (DT the) (NNS guns))
            (VP (VBP are)
              (NP
                (NP (NN iron))
                (, ,)
                (CC and)
                (ADJP (JJ painted) (JJ black))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ her) (NNS bulwarks))
      (VP (VBP are)
        (VP (VBN painted)
          (S
            (ADJP (JJ red))))))
    (: ;)
    (S
      (S
        (NP (PRP it))
        (VP (VBZ is) (RB not)
          (NP (DT a)
            (ADJP (RB very) (JJ becoming))
            (NN colour))))
      (, ,)
      (CC but)
      (S
        (S
          (ADVP (RB then))
          (NP (PRP it))
          (VP (VBZ lasts)
            (NP (DT a) (JJ long) (NN while))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN dockyard))
          (VP (VBZ is) (RB not)
            (ADJP (RB very) (JJ generous)
              (PP (IN on)
                (NP
                  (NP (DT the) (NN score))
                  (PP (IN of)
                    (NP (NN paint))))))))))
    (: --)
    (CC or)
    (S
      (NP
        (NP (NNS lieutenants))
        (PP (IN of)
          (NP (DT the) (NN navy))))
      (ADJP (JJ troubled)
        (PP (IN with)
          (NP (JJ much) (JJ spare) (NN cash)))))
    (. .)))

nsubj(observe-2, You-1)
nsubj(troubled-53, You-1)
root(ROOT-0, observe-2)
det(guns-4, the-3)
nsubj(iron-6, guns-4)
nsubj(black-10, guns-4)
cop(iron-6, are-5)
ccomp(observe-2, iron-6)
amod(black-10, painted-9)
ccomp(observe-2, black-10)
conj_and(iron-6, black-10)
poss(bulwarks-14, her-13)
nsubjpass(painted-16, bulwarks-14)
auxpass(painted-16, are-15)
conj_and(observe-2, painted-16)
xcomp(painted-16, red-17)
nsubj(colour-25, it-19)
cop(colour-25, is-20)
neg(colour-25, not-21)
det(colour-25, a-22)
advmod(becoming-24, very-23)
amod(colour-25, becoming-24)
conj_and(observe-2, colour-25)
advmod(lasts-30, then-28)
nsubj(lasts-30, it-29)
conj_and(observe-2, lasts-30)
conj_but(colour-25, lasts-30)
det(while-33, a-31)
amod(while-33, long-32)
dobj(lasts-30, while-33)
det(dockyard-37, the-36)
nsubj(generous-41, dockyard-37)
cop(generous-41, is-38)
neg(generous-41, not-39)
advmod(generous-41, very-40)
conj_but(colour-25, generous-41)
conj_and(lasts-30, generous-41)
det(score-44, the-43)
prep_on(generous-41, score-44)
prep_of(score-44, paint-46)
dep(troubled-53, lieutenants-49)
det(navy-52, the-51)
prep_of(lieutenants-49, navy-52)
conj_or(observe-2, troubled-53)
amod(cash-57, much-55)
amod(cash-57, spare-56)
prep_with(troubled-53, cash-57)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ has)
        (NP
          (NP (RB plenty))
          (PP (IN of)
            (NP (NNS men))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (JJ fine) (NNS men))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP are) (: ;)
              (NP
                (NP
                  (NP (DT all))
                  (VP (VBN dressed)
                    (PP (IN in)
                      (NP
                        (NP (JJ red) (JJ flannel) (NNS shirts))
                        (CC and)
                        (NP (JJ blue) (NNS trousers))))))
                (: ;)
                (NP
                  (NP (DT some))
                  (PP (IN of)
                    (NP (PRP them)))))))))
      (VP (VBP have) (RB not)
        (VP (VBN taken)
          (PP (IN off)
            (NP
              (NP (PRP$ their) (NN canvas)
                (CC or)
                (NN tarpaulin) (NNS petticoats))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBP are)
                    (ADJP (RB very) (JJ useful)
                      (PP (TO to)
                        (NP (PRP them))))
                    (, ,)
                    (SBAR (IN as)
                      (S
                        (NP (PRP they))
                        (VP (VBP are)
                          (PP
                            (PP (IN in)
                              (NP (DT the) (NNS boats) (NN night)
                                (CC and)
                                (NN day)))
                            (, ,)
                            (CC and)
                            (PP (IN in)
                              (NP (DT all) (NNS weathers)))))))))))))))
    (. .)))

nsubj(has-2, She-1)
root(ROOT-0, has-2)
dobj(has-2, plenty-3)
prep_of(plenty-3, men-5)
amod(men-9, fine-8)
nsubj(taken-28, men-9)
nsubj(all-13, they-10)
cop(all-13, are-11)
rcmod(men-9, all-13)
vmod(all-13, dressed-14)
amod(shirts-18, red-16)
amod(shirts-18, flannel-17)
prep_in(dressed-14, shirts-18)
amod(trousers-21, blue-20)
prep_in(dressed-14, trousers-21)
conj_and(shirts-18, trousers-21)
dep(all-13, some-23)
prep_of(some-23, them-25)
aux(taken-28, have-26)
neg(taken-28, not-27)
conj_and(has-2, taken-28)
poss(canvas-31, their-30)
prep_off(taken-28, canvas-31)
nsubj(useful-39, canvas-31)
nn(petticoats-34, tarpaulin-33)
prep_off(taken-28, petticoats-34)
conj_or(canvas-31, petticoats-34)
nsubj(useful-39, petticoats-34)
cop(useful-39, are-37)
advmod(useful-39, very-38)
rcmod(canvas-31, useful-39)
prep_to(useful-39, them-41)
mark(are-45, as-43)
nsubj(are-45, they-44)
advcl(useful-39, are-45)
det(night-49, the-47)
nn(night-49, boats-48)
prep_in(are-45, night-49)
prep_in(are-45, day-51)
conj_and(night-49, day-51)
det(weathers-56, all-55)
prep_in(are-45, weathers-56)
conj_and(night-49, weathers-56)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (MD will)
      (ADVP (IN at) (RB once))
      (VP (VB go)
        (PRT (RP down))
        (PP (IN into)
          (NP
            (NP
              (NP (DT the) (NN cabin))
              (, ,)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP we))
                  (VP (MD shall)
                    (VP (VB find)
                      (NP
                        (NP (DT the) (NN lieutenant))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ commands)
                              (NP (PRP her)))))))))))
            (, ,)
            (NP
              (NP (DT a) (NN master) (POS 's))
              (NN mate))
            (, ,)
            (CC and)
            (NP (DT a) (NN midshipman))))))
    (. .)))

cc(go-6, But-1)
nsubj(go-6, we-2)
aux(go-6, will-3)
advmod(go-6, at-4)
advmod(at-4, once-5)
root(ROOT-0, go-6)
prt(go-6, down-7)
det(cabin-10, the-9)
prep_into(go-6, cabin-10)
advmod(find-15, where-12)
nsubj(find-15, we-13)
aux(find-15, shall-14)
rcmod(cabin-10, find-15)
det(lieutenant-17, the-16)
dobj(find-15, lieutenant-17)
nsubj(commands-19, lieutenant-17)
rcmod(lieutenant-17, commands-19)
dobj(commands-19, her-20)
det(master-23, a-22)
poss(mate-25, master-23)
prep_into(go-6, mate-25)
conj_and(cabin-10, mate-25)
det(midshipman-29, a-28)
prep_into(go-6, midshipman-29)
conj_and(cabin-10, midshipman-29)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VBP have)
          (NP (DT each) (PRP$ their) (NN tumbler))
          (PP (IN before)
            (NP (PRP them))))
        (, ,)
        (CC and)
        (VP (VBP are)
          (VP (VBG drinking)
            (NP
              (NP
                (NP (NN gin-toddy))
                (, ,)
                (NP (JJ hot))
                (, ,))
              (PP (IN with)
                (NP (NN sugar))))))))
    (: --)
    (S
      (NP (NN capital) (NN gin))
      (, ,)
      (ADVP (RB too))
      (, ,)
      (VP (`` `) (VBP bove)
        (NP (NN proof))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (PP (IN from)
          (NP
            (NP (DT that) (JJ small) (NN anker))
            (VP (VBG standing)
              (PP (IN under)
                (NP (DT the) (NN table))))))))
    (. .)))

nsubj(have-2, They-1)
nsubj(drinking-11, They-1)
root(ROOT-0, have-2)
predet(tumbler-5, each-3)
poss(tumbler-5, their-4)
dobj(have-2, tumbler-5)
prep_before(have-2, them-7)
aux(drinking-11, are-10)
conj_and(have-2, drinking-11)
dobj(drinking-11, gin-toddy-12)
appos(gin-toddy-12, hot-14)
prep_with(gin-toddy-12, sugar-17)
nn(gin-20, capital-19)
nsubj(bove-25, gin-20)
advmod(bove-25, too-22)
parataxis(have-2, bove-25)
dobj(bove-25, proof-26)
nsubj(is-29, it-28)
parataxis(have-2, is-29)
det(anker-33, that-31)
amod(anker-33, small-32)
prep_from(is-29, anker-33)
vmod(anker-33, standing-34)
det(table-37, the-36)
prep_under(standing-34, table-37)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (CD one))
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBD forgot)
            (S
              (VP (TO to)
                (VP (VB return)
                  (PP (TO to)
                    (NP (DT the) (NN custom-house)))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP they))
                      (VP (VBD made)
                        (NP (PRP$ their) (JJ last) (NN seizure))))))))))))
    (. .)))

nsubj(one-3, It-1)
cop(one-3, was-2)
root(ROOT-0, one-3)
mark(forgot-6, that-4)
nsubj(forgot-6, they-5)
nsubj(return-8, they-5)
ccomp(one-3, forgot-6)
aux(return-8, to-7)
xcomp(forgot-6, return-8)
det(custom-house-11, the-10)
prep_to(return-8, custom-house-11)
advmod(made-14, when-12)
nsubj(made-14, they-13)
advcl(return-8, made-14)
poss(seizure-17, their-15)
amod(seizure-17, last-16)
dobj(made-14, seizure-17)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (VP (VB introduce)
        (NP (PRP them))))
    (. .)))

nsubj(introduce-3, We-1)
aux(introduce-3, must-2)
root(ROOT-0, introduce-3)
dobj(introduce-3, them-4)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ elderly) (NN personage))
      (, ,)
      (PP (IN with)
        (NP
          (NP
            (NP (JJ grizzly) (NN hair)
              (CC and)
              (NNS whiskers))
            (, ,)
            (NP (DT a) (NN round) (NN pale) (NN face))
            (, ,)
            (CC and)
            (NP (DT a)
              (ADJP (RB somewhat) (JJ red))
              (NN nose)))
          (PRN (-LRB- -LRB-)
            (VP (VBG being)
              (ADJP (RB too) (JJ much))
              (PP (IN in)
                (S
                  (S
                    (NP (DT the) (NN wind))
                    (VP (MD will)
                      (VP (VB make)
                        (NP (DT the) (NN nose) (NN red)))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (DT this) (JJ old) (NN officer))
                    (VP (VBZ is)
                      (ADVP (RB very) (RB often))
                      (`` ``)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN wind))
                          (, ,) ('' '')
                          (PP (IN of)
                            (NP (NN course)))))
                      (, ,)
                      (PP (IN from)
                        (NP
                          (NP (DT the) (JJ very) (NN nature))
                          (PP (IN of)
                            (NP (PRP$ his) (NN profession))))))))))
            (-RRB- -RRB-))))
      (, ,))
    (VP (VBZ is)
      (NP (DT a) (NNP Lieutenant) (NNP Appleboy)))
    (. .)))

det(personage-3, The-1)
amod(personage-3, elderly-2)
nsubj(Appleboy-62, personage-3)
amod(hair-7, grizzly-6)
prep_with(personage-3, hair-7)
prep_with(personage-3, whiskers-9)
conj_and(hair-7, whiskers-9)
det(face-14, a-11)
nn(face-14, round-12)
nn(face-14, pale-13)
prep_with(personage-3, face-14)
conj_and(hair-7, face-14)
det(nose-20, a-17)
advmod(red-19, somewhat-18)
amod(nose-20, red-19)
prep_with(personage-3, nose-20)
conj_and(hair-7, nose-20)
cop(much-24, being-22)
advmod(much-24, too-23)
dep(hair-7, much-24)
det(wind-27, the-26)
nsubj(make-29, wind-27)
aux(make-29, will-28)
prepc_in(much-24, make-29)
det(red-32, the-30)
nn(red-32, nose-31)
dobj(make-29, red-32)
det(officer-37, this-35)
amod(officer-37, old-36)
nsubj(is-38, officer-37)
prepc_in(much-24, is-38)
conj_and(make-29, is-38)
advmod(often-40, very-39)
advmod(is-38, often-40)
det(wind-44, the-43)
prep_in(is-38, wind-44)
prep_of(wind-44, course-48)
det(nature-53, the-51)
amod(nature-53, very-52)
prep_from(is-38, nature-53)
poss(profession-56, his-55)
prep_of(nature-53, profession-56)
cop(Appleboy-62, is-59)
det(Appleboy-62, a-60)
nn(Appleboy-62, Lieutenant-61)
root(ROOT-0, Appleboy-62)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP
          (VP (VBN served)
            (PP (IN in)
              (NP
                (NP (DT every) (NN class))
                (PP (IN of)
                  (NP (NN vessel)))))
            (PP (IN in)
              (NP (DT the) (NN service))))
          (, ,)
          (CC and)
          (VP (VBN done)
            (NP
              (NP (DT the) (NN duty))
              (PP (IN of)
                (NP (NN first-lieutenant))))
            (PP (IN for)
              (NP (CD twenty) (NNS years)))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBZ is)
        (ADVP (RB now))
        (PP (IN on)
          (NP (NN promotion)))))
    (: --)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB say))))))
    (, ,)
    (S
      (SBAR (IN after)
        (S
          (NP (PRP he))
          (VP (VBZ has)
            (VP (VBN taken)
              (NP
                (NP (DT a) (JJ certain) (NN number))
                (PP (IN of)
                  (NP
                    (NP (NNS tubs))
                    (PP (IN of)
                      (NP (NN gin))))))))))
      (, ,)
      (NP (PRP he))
      (VP (MD will)
        (VP (VB be)
          (VP (VBN rewarded)
            (PP (IN with)
              (NP (PRP$ his) (NN rank)))
            (PP (IN as)
              (NP (NN commander)))))))
    (. .)))

nsubj(served-3, He-1)
nsubj(done-14, He-1)
aux(served-3, has-2)
root(ROOT-0, served-3)
det(class-6, every-5)
prep_in(served-3, class-6)
prep_of(class-6, vessel-8)
det(service-11, the-10)
prep_in(served-3, service-11)
conj_and(served-3, done-14)
det(duty-16, the-15)
dobj(done-14, duty-16)
prep_of(duty-16, first-lieutenant-18)
num(years-21, twenty-20)
prep_for(done-14, years-21)
nsubj(is-24, he-23)
parataxis(served-3, is-24)
advmod(is-24, now-25)
prep_on(is-24, promotion-27)
nsubj(is-30, that-29)
nsubj(say-32, that-29)
parataxis(served-3, is-30)
aux(say-32, to-31)
xcomp(is-30, say-32)
mark(taken-37, after-34)
nsubj(taken-37, he-35)
aux(taken-37, has-36)
advcl(rewarded-49, taken-37)
det(number-40, a-38)
amod(number-40, certain-39)
dobj(taken-37, number-40)
prep_of(number-40, tubs-42)
prep_of(tubs-42, gin-44)
nsubjpass(rewarded-49, he-46)
aux(rewarded-49, will-47)
auxpass(rewarded-49, be-48)
parataxis(served-3, rewarded-49)
poss(rank-52, his-51)
prep_with(rewarded-49, rank-52)
prep_as(rewarded-49, commander-54)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT a) (NN pity))
      (SBAR (IN that)
        (S
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP he))
              (VP (VBZ takes)
                (NP
                  (NP (NN inside))
                  (PP (IN of)
                    (NP (PRP him)))))))
          (VP (VBZ does) (RB not)
            (VP (VB count)))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBZ takes)
            (S
              (NP (PRP it))
              (NP
                (NP (NN morning))
                (, ,)
                (NP (NN noon))
                (, ,)
                (CC and)
                (NP (NN night))))))))
    (. .)))

nsubj(pity-4, It-1)
cop(pity-4, is-2)
det(pity-4, a-3)
root(ROOT-0, pity-4)
mark(count-14, that-5)
dobj(takes-8, what-6)
nsubj(takes-8, he-7)
csubj(count-14, takes-8)
dobj(takes-8, inside-9)
prep_of(inside-9, him-11)
aux(count-14, does-12)
neg(count-14, not-13)
ccomp(pity-4, count-14)
mark(takes-18, for-16)
nsubj(takes-18, he-17)
advcl(pity-4, takes-18)
nsubj(morning-20, it-19)
xcomp(takes-18, morning-20)
xcomp(takes-18, noon-22)
conj_and(morning-20, noon-22)
xcomp(takes-18, night-25)
conj_and(morning-20, night-25)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (ADVP (RB just))
        (VP (VBG filling)
          (NP (PRP$ his) (JJ fourteenth) (NN glass)))))
    (: ;)
    (S
      (S
        (NP (PRP he))
        (VP
          (ADVP (RB always))
          (VBZ keeps)
          (NP (DT a) (JJ regular) (NN account))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (ADVP (RB never))
              (VP (VBZ exceeds)
                (NP
                  (NP (PRP$ his) (JJ limited) (NN number))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (NP (CD seventeen)))))))))))
      (: ;) (RB then)
      (S
        (NP (PRP he))
        (VP (VBZ is)
          (ADVP (RB exactly) (RB down))
          (PP (TO to)
            (NP (PRP$ his) (NNS bearings))))))
    (. .)))

nsubj(filling-4, He-1)
aux(filling-4, is-2)
advmod(filling-4, just-3)
root(ROOT-0, filling-4)
poss(glass-7, his-5)
amod(glass-7, fourteenth-6)
dobj(filling-4, glass-7)
nsubj(keeps-11, he-9)
advmod(keeps-11, always-10)
parataxis(filling-4, keeps-11)
det(account-14, a-12)
amod(account-14, regular-13)
dobj(keeps-11, account-14)
mark(exceeds-19, as-16)
nsubj(exceeds-19, he-17)
neg(exceeds-19, never-18)
advcl(keeps-11, exceeds-19)
poss(number-22, his-20)
amod(number-22, limited-21)
dobj(exceeds-19, number-22)
nsubj(seventeen-26, number-22)
cop(seventeen-26, is-25)
rcmod(number-22, seventeen-26)
advmod(keeps-11, then-28)
nsubj(is-30, he-29)
parataxis(keeps-11, is-30)
advmod(down-32, exactly-31)
advmod(is-30, down-32)
poss(bearings-35, his-34)
prep_to(is-30, bearings-35)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (DT The) (NN master) (POS 's))
          (NN mate) (POS 's))
        (NN name))
      (VP (VBZ is)
        (NP (NNS Tomkins))))
    (: ;)
    (S
      (NP (PRP he))
      (VP
        (VP (VBZ has)
          (VP (VBN served)
            (NP (PRP$ his) (CD six) (NNS years))
            (ADVP
              (NP (CD three) (NNS times))
              (RB over))))
        (, ,)
        (CC and)
        (VP (VBZ has)
          (ADVP (RB now))
          (VP (VBN outgrown)
            (NP (PRP$ his) (NN ambition))))))
    (: ;)
    (SBAR
      (WHNP (WDT which))
      (S
        (VP (VBZ is)
          (ADJP (JJ fortunate)
            (PP (IN for)
              (NP (PRP him))))
          (, ,)
          (SBAR (IN as)
            (S
              (NP
                (NP (PRP$ his) (NNS chances))
                (PP (IN of)
                  (NP (NN promotion))))
              (VP (VBP are)
                (ADJP (JJ small))))))))
    (. .)))

det(master-2, The-1)
poss(mate-4, master-2)
poss(name-6, mate-4)
nsubj(Tomkins-8, name-6)
cop(Tomkins-8, is-7)
root(ROOT-0, Tomkins-8)
nsubj(served-12, he-10)
nsubj(outgrown-23, he-10)
aux(served-12, has-11)
parataxis(Tomkins-8, served-12)
poss(years-15, his-13)
num(years-15, six-14)
tmod(served-12, years-15)
num(times-17, three-16)
npadvmod(over-18, times-17)
advmod(served-12, over-18)
aux(outgrown-23, has-21)
advmod(outgrown-23, now-22)
parataxis(Tomkins-8, outgrown-23)
conj_and(served-12, outgrown-23)
poss(ambition-25, his-24)
dobj(outgrown-23, ambition-25)
nsubj(fortunate-29, which-27)
cop(fortunate-29, is-28)
parataxis(Tomkins-8, fortunate-29)
prep_for(fortunate-29, him-31)
mark(small-39, as-33)
poss(chances-35, his-34)
nsubj(small-39, chances-35)
prep_of(chances-35, promotion-37)
cop(small-39, are-38)
advcl(fortunate-29, small-39)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ prefers)
      (NP (DT a) (JJ small) (NN vessel))
      (PP (TO to)
        (NP (DT a) (JJ large) (NN one)))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP he))
          (VP
            (VP (VBZ is) (RB not)
              (ADJP (JJ obliged)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (RB so) (JJ particular)
                        (PP (IN in)
                          (NP (PRP$ his) (NN dress)))))))))
            (: --)
            (CC and)
            (VP (VBZ looks)
              (PP (IN for)
                (NP (PRP$ his) (NN lieutenancy)))
              (SBAR
                (WHADVP (WRB whenever))
                (S
                  (NP (EX there))
                  (VP (MD shall)
                    (VP (VB be)
                      (NP (DT another) (NN charity) (NN promotion)))))))))))
    (. .)))

nsubj(prefers-2, He-1)
root(ROOT-0, prefers-2)
det(vessel-5, a-3)
amod(vessel-5, small-4)
dobj(prefers-2, vessel-5)
det(one-9, a-7)
amod(one-9, large-8)
prep_to(prefers-2, one-9)
mark(obliged-15, because-11)
nsubj(obliged-15, he-12)
nsubj(particular-19, he-12)
nsubj(looks-25, he-12)
cop(obliged-15, is-13)
neg(obliged-15, not-14)
advcl(prefers-2, obliged-15)
aux(particular-19, to-16)
cop(particular-19, be-17)
advmod(particular-19, so-18)
xcomp(obliged-15, particular-19)
poss(dress-22, his-21)
prep_in(particular-19, dress-22)
advcl(prefers-2, looks-25)
conj_and(obliged-15, looks-25)
poss(lieutenancy-28, his-27)
prep_for(looks-25, lieutenancy-28)
advmod(promotion-35, whenever-29)
expl(promotion-35, there-30)
aux(promotion-35, shall-31)
cop(promotion-35, be-32)
det(promotion-35, another-33)
nn(promotion-35, charity-34)
advcl(looks-25, promotion-35)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (VP (VBN fond)
          (PP (IN of)
            (NP (JJ soft) (NN bread)))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP$ his) (NNS teeth))
              (VP (VBP are) (RB all)
                (ADJP (JJ absent)
                  (PP (IN without)
                    (NP (NN leave))))))))))
    (: ;)
    (S
      (S
        (NP (PRP he))
        (VP (VBZ prefers)
          (NP (NN porter))
          (PP (TO to)
            (NP (DT any) (JJ other) (NN liquor)))))
      (, ,)
      (CC but)
      (S
        (NP (PRP he))
        (VP (MD can)
          (VP (VB drink)
            (NP
              (NP (PRP$ his) (NN glass))
              (PP (IN of)
                (NP (NN grog))))
            (, ,)
            (SBAR (IN whether)
              (S
                (NP (PRP it))
                (VP (VB be)
                  (VP (VBN based)
                    (PP (IN upon)
                      (NP
                        (NP (NN rum))
                        (, ,)
                        (NP (NN brandy))
                        (CC or)
                        (NP (DT the) (NN liquor))))
                    (PP
                      (ADVP (RB now))
                      (IN before)
                      (NP (PRP him)))))))))))
    (. .)))

nsubjpass(fond-3, He-1)
auxpass(fond-3, is-2)
root(ROOT-0, fond-3)
amod(bread-6, soft-5)
prep_of(fond-3, bread-6)
mark(absent-13, for-8)
poss(teeth-10, his-9)
nsubj(absent-13, teeth-10)
cop(absent-13, are-11)
advmod(absent-13, all-12)
advcl(fond-3, absent-13)
prep_without(absent-13, leave-15)
nsubj(prefers-18, he-17)
parataxis(fond-3, prefers-18)
dobj(prefers-18, porter-19)
det(liquor-23, any-21)
amod(liquor-23, other-22)
prep_to(prefers-18, liquor-23)
nsubj(drink-28, he-26)
aux(drink-28, can-27)
parataxis(fond-3, drink-28)
conj_but(prefers-18, drink-28)
poss(glass-30, his-29)
dobj(drink-28, glass-30)
prep_of(glass-30, grog-32)
mark(based-37, whether-34)
nsubjpass(based-37, it-35)
auxpass(based-37, be-36)
ccomp(drink-28, based-37)
prep_upon(based-37, rum-39)
prep_upon(based-37, brandy-41)
conj_or(rum-39, brandy-41)
det(liquor-44, the-43)
prep_upon(based-37, liquor-44)
conj_or(rum-39, liquor-44)
advmod(based-37, now-45)
prep_before(based-37, him-47)

(ROOT
  (S
    (S
      (NP (NNP Mr) (NNP Smith))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN name))
          (PP (IN of)
            (NP
              (NP (DT that) (JJ young) (NN gentleman))
              (SBAR
                (WHNP (WP$ whose) (NNS jacket))
                (S
                  (VP (VBZ is)
                    (ADVP (RB so) (RB out))
                    (PP (IN at)
                      (NP (DT the) (NNS elbows)))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP
        (VP (VBZ has)
          (VP (VBN been)
            (VP (VBG intending)
              (S
                (VP (TO to)
                  (VP (VB mend)
                    (S
                      (NP (PRP it))
                      (NP (DT these) (JJ last) (CD two) (NNS months)))))))))
        (: ;)
        (CC but)
        (VP (VBZ is)
          (ADJP (RB too) (JJ lazy)
            (S
              (VP (TO to)
                (VP (VB go)
                  (PP (TO to)
                    (NP
                      (NP (PRP$ his) (NN chest))
                      (PP (IN for)
                        (NP (DT another))))))))))))
    (. .)))

nn(Smith-2, Mr-1)
nsubj(name-5, Smith-2)
cop(name-5, is-3)
det(name-5, the-4)
root(ROOT-0, name-5)
det(gentleman-9, that-7)
amod(gentleman-9, young-8)
prep_of(name-5, gentleman-9)
poss(jacket-11, gentleman-9)
nsubj(is-12, jacket-11)
rcmod(gentleman-9, is-12)
advmod(out-14, so-13)
advmod(is-12, out-14)
det(elbows-17, the-16)
prep_at(is-12, elbows-17)
nsubj(intending-22, he-19)
nsubj(mend-24, he-19)
nsubj(lazy-34, he-19)
nsubj(go-36, he-19)
aux(intending-22, has-20)
aux(intending-22, been-21)
parataxis(name-5, intending-22)
aux(mend-24, to-23)
xcomp(intending-22, mend-24)
nsubj(months-29, it-25)
det(months-29, these-26)
amod(months-29, last-27)
num(months-29, two-28)
xcomp(mend-24, months-29)
cop(lazy-34, is-32)
advmod(lazy-34, too-33)
parataxis(name-5, lazy-34)
conj_but(intending-22, lazy-34)
aux(go-36, to-35)
xcomp(lazy-34, go-36)
poss(chest-39, his-38)
prep_to(go-36, chest-39)
prep_for(chest-39, another-41)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN been)
          (VP (VBN turned)
            (PRT (RP out))
            (PP (IN of)
              (NP
                (NP (PDT half) (DT the) (NNS ships))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN service))
                    (PP (IN for)
                      (NP (NNS laziness)))))))))))
    (: ;)
    (S (CC but)
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBN born)
          (ADVP (RB so)))))
    (: --)
    (CC and)
    (S
      (ADVP (RB therefore))
      (NP (PRP it))
      (VP (VBZ is) (RB not)
        (NP (PRP$ his) (NN fault))))
    (. .)))

nsubjpass(turned-4, He-1)
aux(turned-4, has-2)
auxpass(turned-4, been-3)
root(ROOT-0, turned-4)
predet(ships-9, half-7)
det(ships-9, the-8)
prep_out_of(turned-4, ships-9)
det(service-12, the-11)
prep_in(ships-9, service-12)
prep_for(service-12, laziness-14)
cc(born-19, but-16)
nsubjpass(born-19, he-17)
auxpass(born-19, was-18)
conj_and(turned-4, born-19)
advmod(born-19, so-20)
advmod(fault-28, therefore-23)
nsubj(fault-28, it-24)
cop(fault-28, is-25)
neg(fault-28, not-26)
poss(fault-28, his-27)
conj_and(turned-4, fault-28)

(ROOT
  (S
    (S
      (NP (DT A) (NN revenue-cutter))
      (VP (VBZ suits)
        (NP (PRP him))))
    (, ,)
    (S
      (NP (PRP she))
      (VP (VBZ is)
        (NP (PDT half) (PRP$ her) (NN time) (NNS hove))
        (PP (TO to))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBZ has)
        (NP (DT no) (NN objection))
        (PP (TO to)
          (NP (NN boat-service)))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBZ sits)
              (PRT (RP down))
              (ADVP (RB always))
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS stern-sheets))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is) (RB not)
                        (VP (VBG fatiguing))))))))))))
    (. .)))

det(revenue-cutter-2, A-1)
nsubj(suits-3, revenue-cutter-2)
root(ROOT-0, suits-3)
dobj(suits-3, him-4)
nsubj(hove-11, she-6)
cop(hove-11, is-7)
predet(hove-11, half-8)
poss(hove-11, her-9)
nn(hove-11, time-10)
conj_and(suits-3, hove-11)
prep(hove-11, to-12)
nsubj(has-16, he-15)
conj_and(suits-3, has-16)
neg(objection-18, no-17)
dobj(has-16, objection-18)
prep_to(has-16, boat-service-20)
mark(sits-24, as-22)
nsubj(sits-24, he-23)
advcl(has-16, sits-24)
prt(sits-24, down-25)
advmod(sits-24, always-26)
det(stern-sheets-29, the-28)
prep_in(sits-24, stern-sheets-29)
nsubj(fatiguing-34, stern-sheets-29)
aux(fatiguing-34, is-32)
neg(fatiguing-34, not-33)
rcmod(stern-sheets-29, fatiguing-34)

(ROOT
  (S
    (S
      (VP (VBG Creeping)
        (PP (IN for)
          (NP (NNS tubs)))))
    (VP (VBZ is)
      (NP (PRP$ his) (NN delight))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBZ gets)
            (PP (IN over)
              (NP (RB so) (JJ little) (NN ground)))))))
    (. .)))

csubj(delight-6, Creeping-1)
prep_for(Creeping-1, tubs-3)
cop(delight-6, is-4)
poss(delight-6, his-5)
root(ROOT-0, delight-6)
mark(gets-10, as-8)
nsubj(gets-10, he-9)
advcl(delight-6, gets-10)
advmod(ground-14, so-12)
amod(ground-14, little-13)
prep_over(gets-10, ground-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (VP (VBN fond)
          (PP (IN of)
            (NP (NN grog))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT some) (NN trouble))
            (PP (IN in)
              (S
                (VP (VBG carrying)
                  (NP (DT the) (NN tumbler))
                  (ADVP (RB so) (RB often))
                  (PP (TO to)
                    (NP (PRP$ his) (NN mouth)))))))))
      (: ;) (RB so)
      (S
        (NP (PRP he))
        (VP
          (VP (VBZ looks)
            (PP (IN at)
              (NP (PRP it))))
          (, ,)
          (CC and)
          (VP (VBZ lets)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBP stand))))))))
    (. .)))

nsubjpass(fond-3, He-1)
auxpass(fond-3, is-2)
root(ROOT-0, fond-3)
prep_of(fond-3, grog-5)
expl(is-9, there-8)
conj_but(fond-3, is-9)
det(trouble-11, some-10)
nsubj(is-9, trouble-11)
prepc_in(trouble-11, carrying-13)
det(tumbler-15, the-14)
dobj(carrying-13, tumbler-15)
advmod(often-17, so-16)
advmod(carrying-13, often-17)
poss(mouth-20, his-19)
prep_to(carrying-13, mouth-20)
advmod(is-9, so-22)
nsubj(looks-24, he-23)
nsubj(lets-29, he-23)
parataxis(is-9, looks-24)
prep_at(looks-24, it-26)
parataxis(is-9, lets-29)
conj_and(looks-24, lets-29)
nsubj(stand-31, it-30)
ccomp(lets-29, stand-31)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ says)
      (ADJP (JJ little))
      (SBAR (IN because)
        (S
          (NP (PRP he))
          (VP (VBZ is)
            (ADJP (RB too) (JJ lazy))
            (S
              (VP (TO to)
                (VP (VB speak))))))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
acomp(says-2, little-3)
mark(lazy-8, because-4)
nsubj(lazy-8, he-5)
nsubj(speak-10, he-5)
cop(lazy-8, is-6)
advmod(lazy-8, too-7)
advcl(says-2, lazy-8)
aux(speak-10, to-9)
xcomp(lazy-8, speak-10)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN served)
          (PP
            (PP (JJR more) (IN than)
              (NP
                (NP
                  (QP (CD _) (CD eight))
                  (NNS years))
                (VP (VBN _))))
            (: ;)
            (CONJP (CC but)
              (RB as))
            (PP (IN for)
              (S
                (VP (VBG passing))))))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBZ has)
        (ADVP (RB never))
        (VP (VBN come)
          (PP (IN into)
            (NP (PRP$ his) (NN head))))))
    (. .)))

nsubj(served-3, He-1)
nsubj(served-3', He-1)
aux(served-3, has-2)
root(ROOT-0, served-3)
conj_but(served-3, served-3')
prep_than(served-3, more-4)
number(eight-7, _-6)
num(years-8, eight-7)
pobj(served-3, years-8)
vmod(years-8, _-9)
prepc_for(served-3', passing-14)
nsubj(come-19, it-16)
aux(come-19, has-17)
neg(come-19, never-18)
parataxis(served-3, come-19)
poss(head-22, his-21)
prep_into(come-19, head-22)

(ROOT
  (S
    (NP (JJ Such))
    (VP (VBP are)
      (NP
        (NP (DT the) (CD three) (NNS persons))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP are)
              (ADVP (RB now))
              (VP (VBG sitting)
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN cabin))
                    (PP (IN of)
                      (NP (DT the) (NN revenue-cutter)))))
                (, ,)
                (S
                  (VP (VBG drinking)
                    (NP (JJ hot) (NN gin-toddy))))))))))
    (. .)))

nsubj(persons-5, Such-1)
cop(persons-5, are-2)
det(persons-5, the-3)
num(persons-5, three-4)
root(ROOT-0, persons-5)
nsubj(sitting-9, persons-5)
aux(sitting-9, are-7)
advmod(sitting-9, now-8)
rcmod(persons-5, sitting-9)
det(cabin-12, the-11)
prep_in(sitting-9, cabin-12)
det(revenue-cutter-15, the-14)
prep_of(cabin-12, revenue-cutter-15)
vmod(sitting-9, drinking-17)
amod(gin-toddy-19, hot-18)
dobj(drinking-17, gin-toddy-19)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Let)
        (S
          (NP (PRP me))
          (VP (VB see)))))
    (PRN (, ,)
      (S
        (NP (PRP it))
        (VP (VBD was)))
      (, ,))
    (NP (PRP I))
    (VP (VBP think) (, ,)
      (PP (IN in)
        (NP (NN ninety-three)
          (CC or)
          (NN ninety-four))))
    (. .)))

dep(think-10, Let-2)
nsubj(see-4, me-3)
ccomp(Let-2, see-4)
nsubj(was-7, it-6)
parataxis(think-10, was-7)
nsubj(think-10, I-9)
root(ROOT-0, think-10)
prep_in(think-10, ninety-three-13)
prep_in(think-10, ninety-four-15)
conj_or(ninety-three-13, ninety-four-15)

(ROOT
  (S
    (S
      (ADVP (IN Before))
      (NP (PRP you))
      (VP (VBD were)
        (PP (IN in)
          (NP
            (NP (DT the) (NN service))
            (, ,)
            (NP (NNP Tomkins))))))
    (: --) ('' '')
    (S (`` ``)
      (ADVP (RB Maybe))
      (, ,)
      (NP
        (NP (NN sir))
        (: ;)
        (NP (PRP it)))
      (VP (VBZ 's)
        (ADVP
          (ADVP (RB so) (RB long) (RB ago))
          (SBAR (IN since)
            (S
              (NP (PRP I))
              (VP (VBD entered)))))
        (, ,)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (MD ca) (RB n't)
                (VP (VB recollect)
                  (NP (NNS dates))))))
          (: --)
          (PRN (CC but)
            (NP
              (NP (DT this))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP know)))))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP$ my) (NN aunt))
            (VP (VBD died)
              (NP (CD three) (NNS days) (RB before)))))))
    (. .) ('' '')))

advmod(were-3, Before-1)
nsubj(were-3, you-2)
root(ROOT-0, were-3)
det(service-6, the-5)
prep_in(were-3, service-6)
appos(service-6, Tomkins-8)
advmod('s-17, Maybe-12)
nsubj('s-17, sir-14)
dep(sir-14, it-16)
parataxis(were-3, 's-17)
advmod(ago-20, so-18)
advmod(ago-20, long-19)
advmod('s-17, ago-20)
mark(entered-23, since-21)
nsubj(entered-23, I-22)
advcl(ago-20, entered-23)
mark(recollect-29, that-25)
nsubj(recollect-29, I-26)
aux(recollect-29, ca-27)
neg(recollect-29, n't-28)
dep('s-17, recollect-29)
dobj(recollect-29, dates-30)
cc(this-33, but-32)
dep(recollect-29, this-33)
nsubj(know-35, I-34)
rcmod(this-33, know-35)
mark(died-40, that-37)
poss(aunt-39, my-38)
nsubj(died-40, aunt-39)
ccomp('s-17, died-40)
num(days-42, three-41)
tmod(died-40, days-42)
advmod(days-42, before-43)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (DT the) (NN question))
    (VP (VBZ is) (, ,)
      (SBARQ
        (WHADVP (WRB when))
        (SQ (VBD did)
          (NP (PRP$ your) (NN aunt))
          (VP (VB die)))))
    (. ?) ('' '')))

advmod(is-5, Then-2)
det(question-4, the-3)
nsubj(is-5, question-4)
root(ROOT-0, is-5)
advmod(die-11, when-7)
aux(die-11, did-8)
poss(aunt-10, your-9)
nsubj(die-11, aunt-10)
ccomp(is-5, die-11)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD died)
      (NP (RB about) (DT a) (NN year))
      (PP (IN after)
        (NP (PRP$ my) (NN uncle))))
    (. .) ('' '')))

nsubj(died-2, She-1)
root(ROOT-0, died-2)
advmod(year-5, about-3)
det(year-5, a-4)
tmod(died-2, year-5)
poss(uncle-8, my-7)
prep_after(died-2, uncle-8)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHADVP (WRB when))
    (SQ (VBD did)
      (NP (PRP$ your) (NN uncle))
      (VP (VB die)))
    (. ?) ('' '')))

cc(die-7, And-2)
advmod(die-7, when-3)
aux(die-7, did-4)
poss(uncle-6, your-5)
nsubj(die-7, uncle-6)
root(ROOT-0, die-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB be)
        (VP (VBN hanged)
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBP know)))))))
    (. !) ('' '')))

nsubjpass(hanged-5, I-2)
aux(hanged-5, 'll-3)
auxpass(hanged-5, be-4)
root(ROOT-0, hanged-5)
mark(know-8, if-6)
nsubj(know-8, I-7)
advcl(hanged-5, know-8)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (PRN (, ,)
      (S
        (NP (NN d'ye))
        (VP (VBP see)))
      (, ,))
    (NP (PRP you))
    (VP (VBP 've)
      (NP (DT no) (NN departure)
        (S
          (VP (TO to)
            (VP (VB work)
              (PP (IN from)))))))
    (. .)))

advmod('ve-8, Then-2)
nsubj(see-5, d'ye-4)
parataxis('ve-8, see-5)
nsubj('ve-8, you-7)
root(ROOT-0, 've-8)
neg(departure-10, no-9)
dobj('ve-8, departure-10)
aux(work-12, to-11)
vmod(departure-10, work-12)
prep(work-12, from-13)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD can) (RB not)
            (VP (VB have)
              (VP (VBN been)
                (PP (IN in)
                  (NP (DT the) (NN service)))
                (PP (IN at)
                  (NP (DT that) (NN time)))))))))
    (. .)))

advmod(think-4, However-1)
nsubj(think-4, I-3)
root(ROOT-0, think-4)
nsubj(been-9, you-5)
aux(been-9, can-6)
neg(been-9, not-7)
aux(been-9, have-8)
ccomp(think-4, been-9)
det(service-12, the-11)
prep_in(been-9, service-12)
det(time-15, that-14)
prep_at(been-9, time-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD were) (RB not)
      (ADJP
        (ADJP (RB quite) (RB so) (JJ particular))
        (IN about)
        (ADJP (JJ uniform)))
      (SBAR (IN as)
        (S
          (NP (PRP we))
          (VP (VBP are)
            (ADVP (RB now))))))
    (. .) ('' '')))

nsubj(particular-6, We-1)
cop(particular-6, were-2)
neg(particular-6, not-3)
advmod(particular-6, quite-4)
advmod(particular-6, so-5)
root(ROOT-0, particular-6)
dep(particular-6, about-7)
dep(particular-6, uniform-8)
mark(are-11, as-9)
nsubj(are-11, we-10)
advcl(particular-6, are-11)
advmod(are-11, now-12)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT the) (NN service))
          (VP (VBD was)
            (NP
              (NP (PDT all) (DT the) (JJR better))
              (PP (IN for)
                (NP (PRP it))))))))
    (. .)))

advmod(think-4, Then-2)
nsubj(think-4, I-3)
root(ROOT-0, think-4)
det(service-6, the-5)
nsubj(better-10, service-6)
cop(better-10, was-7)
predet(better-10, all-8)
det(better-10, the-9)
ccomp(think-4, better-10)
prep_for(better-10, it-12)

(ROOT
  (S
    (S
      (NP (NNS Now-a-days))
      (, ,)
      (PP (IN in)
        (NP (PRP$ your) (NN crack) (NNS ships)))
      (, ,)
      (NP (DT a) (NN mate))
      (VP (VBZ has)
        (S
          (VP (TO to)
            (VP (VB go)
              (PRT (RP down))
              (PP (IN in)
                (NP (DT the) (NN hold)
                  (CC or)
                  (NN spirit-room))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN after)
        (S
          (VP
            (VP (VBG whipping)
              (PRT (RP up))
              (NP
                (ADJP (RB fifty) (JJ empty))
                (NNS casks)))
            (, ,)
            (CC and)
            (VP (VBG breaking)
              (PRT (RP out))
              (NP (CD twenty) (JJ full) (NNS ones))))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ is)
        (VP (VBN expected)
          (S
            (VP (TO to)
              (VP (VB come)
                (PP (IN on)
                  (NP
                    (NP (NN quarter-deck))
                    (ADJP (RB as) (JJ clean))))
                (SBAR (RB as) (IN if)
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (ADVP (RB just))
                      (VP (VBN come)
                        (PRT (RP out))
                        (PP (IN of)
                          (NP (DT a) (JJ band-box)))))))))))))
    (. .) ('' '')))

nsubj(has-10, Now-a-days-1)
nsubj(go-12, Now-a-days-1)
poss(ships-6, your-4)
nn(ships-6, crack-5)
prep_in(has-10, ships-6)
det(mate-9, a-8)
nsubj(has-10, mate-9)
nsubj(go-12, mate-9)
root(ROOT-0, has-10)
aux(go-12, to-11)
xcomp(has-10, go-12)
prt(go-12, down-13)
det(hold-16, the-15)
prep_in(go-12, hold-16)
prep_in(go-12, spirit-room-18)
conj_or(hold-16, spirit-room-18)
prepc_after(expected-37, whipping-22)
prt(whipping-22, up-23)
advmod(empty-25, fifty-24)
amod(casks-26, empty-25)
dobj(whipping-22, casks-26)
conj_and(whipping-22, breaking-29)
prepc_after(expected-37, breaking-29)
prt(breaking-29, out-30)
num(ones-33, twenty-31)
amod(ones-33, full-32)
dobj(breaking-29, ones-33)
nsubjpass(expected-37, he-35)
nsubj(come-39, he-35)
auxpass(expected-37, is-36)
conj_and(has-10, expected-37)
aux(come-39, to-38)
xcomp(expected-37, come-39)
prep_on(come-39, quarter-deck-41)
advmod(clean-43, as-42)
amod(quarter-deck-41, clean-43)
advmod(come-49, as-44)
mark(come-49, if-45)
nsubjpass(come-49, he-46)
auxpass(come-49, was-47)
advmod(come-49, just-48)
advcl(come-39, come-49)
det(band-box-53, a-52)
prep_out_of(come-49, band-box-53)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (EX there))
      (VP (VBZ 's)
        (NP
          (NP (RB plenty))
          (PP (IN of)
            (NP (NN water) (NNS alongside))))
        (, ,)
        (ADVP
          (ADVP (RB as) (RB far))
          (SBAR (IN as)
            (S
              (NP (DT the) (JJ outward) (NN man))
              (VP (VBZ goes)))))))
    (, ,)
    (CC and)
    (S
      (NP (NN iron) (NN dust))
      (VP (VBZ is)
        (ADVP (RB soon))
        (VP (VBN brushed)
          (PRT (RP off)))))
    (. .)))

discourse('s-5, Well-2)
expl('s-5, there-4)
root(ROOT-0, 's-5)
nsubj('s-5, plenty-6)
nn(alongside-9, water-8)
prep_of(plenty-6, alongside-9)
advmod(far-12, as-11)
advmod('s-5, far-12)
mark(goes-17, as-13)
det(man-16, the-14)
amod(man-16, outward-15)
nsubj(goes-17, man-16)
advcl(far-12, goes-17)
ccomp(far-12, goes-17)
nn(dust-21, iron-20)
nsubjpass(brushed-24, dust-21)
auxpass(brushed-24, is-22)
advmod(brushed-24, soon-23)
conj_and('s-5, brushed-24)
prt(brushed-24, off-25)

(ROOT
  (S
    (S
      (ADVP (RB However))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP you))
          (VP (VBP say))))
      (, ,)
      (NP
        (NP (RB perhaps) (DT a) (JJ little))
        (ADJP (RB too) (JJ much)))
      (VP (VBZ is)
        (VP (VBN expected))))
    (: ;)
    (S
      (ADVP (IN at) (JJS least))
      (, ,)
      (PP (IN in)
        (NP
          (NP (CD five))
          (PP (IN of)
            (NP
              (NP (DT the) (NNS ships))
              (SBAR
                (WHPP (IN in)
                  (WHNP (WDT which)))
                (S
                  (NP (PRP I))
                  (VP (VBD was)
                    (ADJP (JJ first-lieutenant)))))))))
      (, ,)
      (NP (DT the) (NN captain))
      (VP (VBD was)
        (ADVP (RB always))
        (VP (VBG hauling)
          (NP (PRP me))
          (PP (IN over)
            (S
              (NP
                (NP (DT the) (NNS coals))
                (PP (IN about)
                  (NP (DT the) (NN midshipmen))))
              (RB not)
              (VP (VBG dressing)
                (ADVP (RB properly))
                (, ,)
                (SBAR (RB as) (IN if)
                  (S
                    (NP (PRP I))
                    (VP (VBD was)
                      (NP (PRP$ their) (NN dry-nurse)))))))))))
    (. .)))

advmod(expected-13, However-1)
mark(say-5, as-3)
nsubj(say-5, you-4)
advcl(expected-13, say-5)
advmod(little-9, perhaps-7)
det(little-9, a-8)
nsubjpass(expected-13, little-9)
advmod(much-11, too-10)
amod(little-9, much-11)
auxpass(expected-13, is-12)
root(ROOT-0, expected-13)
advmod(hauling-33, at-15)
pobj(at-15, least-16)
prep_in(hauling-33, five-19)
det(ships-22, the-21)
prep_of(five-19, ships-22)
prep_in(first-lieutenant-27, ships-22)
nsubj(first-lieutenant-27, I-25)
cop(first-lieutenant-27, was-26)
rcmod(ships-22, first-lieutenant-27)
det(captain-30, the-29)
nsubj(hauling-33, captain-30)
aux(hauling-33, was-31)
advmod(hauling-33, always-32)
parataxis(expected-13, hauling-33)
dobj(hauling-33, me-34)
det(coals-37, the-36)
nsubj(dressing-42, coals-37)
det(midshipmen-40, the-39)
prep_about(coals-37, midshipmen-40)
neg(dressing-42, not-41)
prepc_over(hauling-33, dressing-42)
advmod(dressing-42, properly-43)
advmod(dry-nurse-50, as-45)
mark(dry-nurse-50, if-46)
nsubj(dry-nurse-50, I-47)
cop(dry-nurse-50, was-48)
poss(dry-nurse-50, their-49)
advcl(dressing-42, dry-nurse-50)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP wonder)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNP Captain) (NNP Prigg))
          (VP (MD would)
            (VP (VB have)
              (VP (VBD said)
                (SBAR (IN if)
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN seen)
                        (NP (PDT such) (DT a) (NN turn-out))
                        (PP (IN as)
                          (NP
                            (NP (PRP you))
                            (, ,)
                            (NP (NNP Mr) (NNP Smith))
                            (, ,)))
                        (PP (IN on)
                          (NP (PRP$ his) (NN quarter-deck)))))))))))))
    (. .) ('' '')))

nsubj(wonder-2, I-1)
root(ROOT-0, wonder-2)
dobj(said-8, what-3)
nn(Prigg-5, Captain-4)
nsubj(said-8, Prigg-5)
aux(said-8, would-6)
aux(said-8, have-7)
ccomp(wonder-2, said-8)
mark(seen-12, if-9)
nsubj(seen-12, he-10)
aux(seen-12, had-11)
advcl(said-8, seen-12)
predet(turn-out-15, such-13)
det(turn-out-15, a-14)
dobj(seen-12, turn-out-15)
prep_as(seen-12, you-17)
nn(Smith-20, Mr-19)
appos(you-17, Smith-20)
poss(quarter-deck-24, his-23)
prep_on(seen-12, quarter-deck-24)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB have)
          (VP (VBN had)
            (NP (CD one) (NN turn-out))
            (ADVP (RBR more))))))
    (, ,) ('' '')
    (VP (VBD drawled))
    (NP (NNP Smith))
    (. .)))

nsubj(had-5, I-2)
aux(had-5, should-3)
aux(had-5, have-4)
ccomp(drawled-11, had-5)
num(turn-out-7, one-6)
dobj(had-5, turn-out-7)
advmod(had-5, more-8)
root(ROOT-0, drawled-11)
nsubj(drawled-11, Smith-12)

(ROOT
  (S (`` ``)
    (PP (IN With)
      (NP (PRP$ your) (JJ out-at-elbows) (NN jacket)))
    (, ,)
    (ADVP (RB there))
    (, ,)
    (VP (VBZ eh))
    (. !) ('' '')))

poss(jacket-5, your-3)
amod(jacket-5, out-at-elbows-4)
prep_with(eh-9, jacket-5)
advmod(eh-9, there-7)
root(ROOT-0, eh-9)

(ROOT
  (S
    (VP (VBD continued)
      (NP (NNP Mr) (NNP Appleboy)))
    (. .)))

root(ROOT-0, continued-1)
nn(Appleboy-3, Mr-2)
dobj(continued-1, Appleboy-3)

(ROOT
  (S
    (S
      (NP (NNP Smith))
      (VP (VBD turned)
        (PRT (RP up))
        (NP
          (NP (PRP$ his) (NNS elbows))
          (, ,)
          (RRC
            (RRC
              (VP (VBN looked)
                (PP (IN at)
                  (NP (CD one)))))
            (CC and)
            (RRC
              (ADVP (RB then))
              (PP (IN at)
                (NP (DT the) (JJ other))))))))
    (: ;)
    (S
      (PP (IN after)
        (S (RB so)
          (VP (VBG fatiguing)
            (NP (DT an) (NN operation)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ silent))))
    (. .)))

nsubj(turned-2, Smith-1)
root(ROOT-0, turned-2)
prt(turned-2, up-3)
poss(elbows-5, his-4)
dobj(turned-2, elbows-5)
rcmod(elbows-5, looked-7)
prep_at(looked-7, one-9)
advmod(at-12, then-11)
rcmod(elbows-5, at-12)
conj_and(looked-7, at-12)
det(other-14, the-13)
pobj(at-12, other-14)
advmod(fatiguing-18, so-17)
prepc_after(silent-24, fatiguing-18)
det(operation-20, an-19)
dobj(fatiguing-18, operation-20)
nsubj(silent-24, he-22)
cop(silent-24, was-23)
parataxis(turned-2, silent-24)

(ROOT
  (S (`` ``)
    (VP (VB Well) (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (VP (VBD was)
            (NP (PRP I))))))
    (. ?)))

root(ROOT-0, Well-2)
advmod(I-6, where-4)
cop(I-6, was-5)
advcl(Well-2, I-6)

(ROOT
  (INTJ (UH Oh) (. !)))

root(ROOT-0, Oh-1)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (RB about) (JJ ninety-three)
        (CC or)
        (JJ ninety-four))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBD said)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBD happened) (: --)
                  (S
                    (NP (NNP Tomkins))
                    (, ,)
                    (VP
                      (VP (VB fill)
                        (NP (PRP$ your) (NN glass)))
                      (CC and)
                      (VP (VB hand)
                        (NP (PRP me))
                        (NP
                          (NP (DT the) (NN sugar))
                          (: --)
                          (SBARQ
                            (WHADVP (WRB how))
                            (SQ (VBP do)
                              (NP (PRP I))
                              (VP (VB get)
                                (PRT (RP on))))
                            (. ?)))))))))))))))

nsubj(ninety-three-4, It-1)
nsubj(ninety-four-6, It-1)
cop(ninety-three-4, was-2)
advmod(ninety-three-4, about-3)
root(ROOT-0, ninety-three-4)
conj_or(ninety-three-4, ninety-four-6)
mark(said-10, as-8)
nsubj(said-10, I-9)
advcl(ninety-three-4, said-10)
mark(happened-13, that-11)
nsubj(happened-13, it-12)
ccomp(said-10, happened-13)
nsubj(fill-17, Tomkins-15)
nsubj(hand-21, Tomkins-15)
ccomp(happened-13, fill-17)
parataxis(happened-13, fill-17)
poss(glass-19, your-18)
dobj(fill-17, glass-19)
ccomp(happened-13, hand-21)
parataxis(happened-13, hand-21)
conj_and(fill-17, hand-21)
iobj(hand-21, me-22)
det(sugar-24, the-23)
dobj(hand-21, sugar-24)
advmod(get-29, how-26)
aux(get-29, do-27)
nsubj(get-29, I-28)
dep(sugar-24, get-29)
prt(get-29, on-30)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (NNP Number) (CD 15))
          (, ,) ('' '')
          (SBAR
            (S
              (VP (VBD said)
                (NP (NNP Appleboy))
                (, ,)
                (S
                  (VP (VBG counting)
                    (NP
                      (NP (DT some) (JJ white) (NNS lines))
                      (PP (IN on)
                        (NP (DT the) (NN table))))
                    (PP (IN by)
                      (NP (PRP him)))))))))))
    (: ;)
    (CC and)
    (S
      (S
        (VP (VBG taking)
          (PRT (RP up))
          (NP
            (NP (DT a) (NN piece))
            (PP (IN of)
              (NP (NN chalk))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD marked)
        (NP (CD one) (JJR more) (NN line))
        (PP (IN on)
          (NP (PRP$ his) (NN tally)))))
    (. .)))

nsubj(Number-3, This-1)
cop(Number-3, is-2)
root(ROOT-0, Number-3)
num(Number-3, 15-4)
rcmod(Number-3, said-7)
dobj(said-7, Appleboy-8)
vmod(said-7, counting-10)
det(lines-13, some-11)
amod(lines-13, white-12)
dobj(counting-10, lines-13)
det(table-16, the-15)
prep_on(lines-13, table-16)
agent(counting-10, him-18)
vmod(marked-29, taking-21)
prt(taking-21, up-22)
det(piece-24, a-23)
dobj(taking-21, piece-24)
prep_of(piece-24, chalk-26)
nsubj(marked-29, he-28)
conj_and(Number-3, marked-29)
num(line-32, one-30)
amod(line-32, more-31)
dobj(marked-29, line-32)
poss(tally-35, his-34)
prep_on(marked-29, tally-35)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (SBAR
            (S
              (NP (DT this))
              (VP (VBZ is)
                (ADJP (RB so) (JJ good)
                  (SBAR
                    (S
                      (S
                        (NP
                          (NP (DT a) (NN tub))
                          (PP (IN as)
                            (NP (DT the) (JJ last) (, ,) (NNP Tomkins) (, ,))))
                        (ADVP (RB there))
                        (VP (VBZ 's)
                          (NP
                            (NP (DT a) (NN twang))
                            (PP (IN about)
                              (NP (PRP it))))))
                      (: --)
                      (S
                        (NP (SYM a))
                        (VP (VBP want)
                          (PP (IN of)
                            (NP (NN juniper)))))
                      (: ;)
                      (S
                        (ADVP (RB however))
                        (, ,)
                        (NP (PRP I))
                        (VP (VBP hope))))))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD shall)
      (VP (VB have)
        (NP (JJR better) (NN luck))
        (NP (DT this) (NN time))))
    (. .)))

nsubj(think-5, I-2)
aux(think-5, do-3)
neg(think-5, n't-4)
ccomp(have-37, think-5)
nsubj(good-9, this-6)
cop(good-9, is-7)
advmod(good-9, so-8)
ccomp(think-5, good-9)
det(tub-11, a-10)
nsubj(twang-21, tub-11)
det(Tomkins-16, the-13)
amod(Tomkins-16, last-14)
prep_as(tub-11, Tomkins-16)
advmod(twang-21, there-18)
cop(twang-21, 's-19)
det(twang-21, a-20)
ccomp(good-9, twang-21)
prep_about(twang-21, it-23)
nsubj(want-26, a-25)
parataxis(twang-21, want-26)
prep_of(want-26, juniper-28)
advmod(hope-33, however-30)
nsubj(hope-33, I-32)
parataxis(twang-21, hope-33)
nsubj(have-37, we-35)
aux(have-37, shall-36)
root(ROOT-0, have-37)
amod(luck-39, better-38)
iobj(have-37, luck-39)
det(time-41, this-40)
dobj(have-37, time-41)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP you))
    (VP (VBP know)
      (S
        (NP (PRP we))
        (VP (VB sail)
          (NP (NN to-morrow)))))
    (. ?) ('' '')))

prep_of(know-4, course-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
nsubj(sail-6, we-5)
ccomp(know-4, sail-6)
dobj(sail-6, to-morrow-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP presume)
      (ADVP (RB so))
      (, ,)
      (PP (IN by)
        (NP
          (NP (DT the) (NN leg))
          (PP (IN of)
            (NP
              (NP (NN mutton))
              (VP (VBG coming)
                (PP (IN on)
                  (NP (NN board)))))))))
    (. .) ('' '')))

nsubj(presume-3, I-2)
root(ROOT-0, presume-3)
advmod(presume-3, so-4)
det(leg-8, the-7)
prep_by(presume-3, leg-8)
prep_of(leg-8, mutton-10)
vmod(mutton-10, coming-11)
prep_on(coming-11, board-13)

(ROOT
  (S (`` ``)
    (ADVP (JJ True))
    (: --)
    (ADVP (RB true))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP
          (ADJP (JJ regular))
          (: --)
          (ADJP (RB as) (JJ clock-work)))))
    (. .)))

advmod(regular-8, True-2)
advmod(regular-8, true-4)
nsubj(regular-8, I-6)
cop(regular-8, 'm-7)
root(ROOT-0, regular-8)
advmod(clock-work-11, as-10)
dep(regular-8, clock-work-11)

(ROOT
  (S
    (PP (IN After)
      (S
        (VP (VBG being)
          (NP (CD twenty) (NNS years)))))
    (NP (DT a) (JJ first-lieutenant) (NN one))
    (VP (VBZ gets)
      (NP (DT a) (JJ little) (NN method)))
    (. .)))

cop(years-4, being-2)
num(years-4, twenty-3)
prepc_after(gets-8, years-4)
det(one-7, a-5)
amod(one-7, first-lieutenant-6)
nsubj(gets-8, one-7)
root(ROOT-0, gets-8)
det(method-11, a-9)
amod(method-11, little-10)
dobj(gets-8, method-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP like)
      (NP (NN regularity)))
    (. .)))

nsubj(like-2, I-1)
root(ROOT-0, like-2)
dobj(like-2, regularity-3)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (DT the) (NN admiral))
    (VP (VBZ has)
      (ADVP (RB never))
      (VP (VBN omitted)
        (S
          (VP (VBG asking)
            (NP (PRP me))
            (PP (TO to)
              (NP (NN dinner)))))
        (SBAR (IN once) (, ,)
          (S
            (NP (DT every) (NN time))
            (NP (PRP I))
            (VP (VBP have)
              (VP (VBN come)
                (PP (IN into)
                  (NP (NN harbour)))
                (, ,)
                (PP (IN except)
                  (NP (DT this) (NN time)))))))))
    (. .)))

advmod(omitted-6, Now-1)
det(admiral-3, the-2)
nsubj(omitted-6, admiral-3)
aux(omitted-6, has-4)
neg(omitted-6, never-5)
root(ROOT-0, omitted-6)
xcomp(omitted-6, asking-7)
dobj(asking-7, me-8)
prep_to(asking-7, dinner-10)
mark(come-17, once-11)
det(time-14, every-13)
nsubj(come-17, time-14)
nsubj(come-17, I-15)
aux(come-17, have-16)
advcl(omitted-6, come-17)
prep_into(come-17, harbour-19)
det(time-23, this-22)
prep_except(come-17, time-23)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD was)
        (ADJP (RB so) (JJ certain))
        (PP (IN of)
          (NP (PRP it)))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (ADVP (RB never))
            (VP (VBD expected)
              (S
                (VP (TO to)
                  (VP (VB sail)))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP
        (VP (VBP have))
        (CC but)
        (VP
          (ADJP
            (NP (CD two) (NNS shirts))
            (JJ clean))
          (PP (IN in)
            (NP (NN consequence))))))
    (. .) ('' '')))

nsubj(certain-4, I-1)
cop(certain-4, was-2)
advmod(certain-4, so-3)
root(ROOT-0, certain-4)
prep_of(certain-4, it-6)
mark(expected-11, that-8)
nsubj(expected-11, I-9)
nsubj(sail-13, I-9)
neg(expected-11, never-10)
ccomp(certain-4, expected-11)
aux(sail-13, to-12)
xcomp(expected-11, sail-13)
nsubj(have-17, I-16)
nsubj(clean-21, I-16)
conj_and(certain-4, have-17)
num(shirts-20, two-19)
npadvmod(clean-21, shirts-20)
conj_and(certain-4, clean-21)
conj_but(have-17, clean-21)
prep_in(clean-21, consequence-23)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (ADJP (JJ odd))))
    (, ,)
    (VP (VBZ is) (RB n't)
      (NP (PRP it)))
    (. ?)))

nsubj(odd-4, That-2)
cop(odd-4, 's-3)
ccomp(it-8, odd-4)
cop(it-8, is-6)
neg(it-8, n't-7)
root(ROOT-0, it-8)

(ROOT
  (S (: --)
    (CC and)
    (NP (DT the) (JJR more))
    (VP
      (VP
        (PRN
          (ADVP (RB so))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (PRP he))
              (VP (VBZ has)))))
        (VBD had)
        (NP
          (NP (JJ such) (JJ great) (NNS people))
          (ADVP (RB down) (RB here))))
      (, ,)
      (CC and)
      (VP (VBZ has)
        (VP (VBN been)
          (VP (VBG giving)
            (NP (JJ large) (NNS parties))
            (NP (DT every) (NN day))))))
    (. .) ('' '')))

det(more-4, the-3)
nsubj(more-4, more-4)
conj_and(had-10, more-4)
nsubj(had-10, more-4)
nsubj(giving-20, more-4)
dep(has-9, so-5)
mark(has-9, because-7)
nsubj(has-9, he-8)
parataxis(had-10, has-9)
root(ROOT-0, had-10)
amod(people-13, such-11)
amod(people-13, great-12)
dobj(had-10, people-13)
advmod(here-15, down-14)
advmod(people-13, here-15)
aux(giving-20, has-18)
aux(giving-20, been-19)
conj_and(had-10, giving-20)
amod(parties-22, large-21)
dobj(giving-20, parties-22)
det(day-24, every-23)
tmod(giving-20, day-24)

(ROOT
  (S (`` ``)
    (CC And)
    (ADVP (RB yet))
    (NP (PRP I))
    (VP (VBD made)
      (NP
        (NP (CD three) (NNS seizures))
        (, ,)
        (PP (IN besides)
          (S
            (VP (VBG sweeping)
              (PRT (RP up))
              (NP (DT those) (JJ thirty-seven) (NNS tubs)))))))
    (. .) ('' '')))

cc(made-5, And-2)
advmod(made-5, yet-3)
nsubj(made-5, I-4)
root(ROOT-0, made-5)
num(seizures-7, three-6)
dobj(made-5, seizures-7)
prepc_besides(seizures-7, sweeping-10)
prt(sweeping-10, up-11)
det(tubs-14, those-12)
amod(tubs-14, thirty-seven-13)
dobj(sweeping-10, tubs-14)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD swept)
        (NP (PRP them))
        (PRT (RP up))))
    (, ,) ('' '')
    (VP (VBD observed))
    (NP (NNP Smith))
    (. .)))

nsubj(swept-3, I-2)
ccomp(observed-8, swept-3)
dobj(swept-3, them-4)
prt(swept-3, up-5)
root(ROOT-0, observed-8)
nsubj(observed-8, Smith-9)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's) (RB all)
      (NP (DT the) (JJ same) (NN thing) (, ,) (NNP _) (NN younker) (NN _)))
    (. .)))

nsubj(_-11, That-2)
cop(_-11, 's-3)
advmod(_-11, all-4)
det(_-11, the-5)
amod(_-11, same-6)
nn(_-11, thing-7)
dep(_-11, _-9)
nn(_-11, younker-10)
root(ROOT-0, _-11)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP you))
          (VP (VBP 've)
            (VP (VBN been)
              (ADJP
                (NP (DT a) (RB little))
                (JJR longer)
                (PP (IN in)
                  (NP (DT the) (NN service))))))))
      (, ,)
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB find)
          (PRT (RP out))
          (SBAR (IN that)
            (S
              (NP (DT the) (JJ commanding) (NN officer))
              (VP (VBZ has)
                (NP
                  (NP (DT the) (NN merit))
                  (PP (IN of)
                    (NP
                      (NP (DT all))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ is)
                            (VP (VBN done))))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBP 're)
        (VP (VBG _)
          (NP (JJ green) (NNS _))
          (ADVP (RB yet)))))
    (. .)))

advmod(longer-7, When-1)
nsubj(longer-7, you-2)
aux(longer-7, 've-3)
cop(longer-7, been-4)
det(little-6, a-5)
npadvmod(longer-7, little-6)
advcl(find-14, longer-7)
det(service-10, the-9)
prep_in(longer-7, service-10)
nsubj(find-14, you-12)
aux(find-14, 'll-13)
root(ROOT-0, find-14)
prt(find-14, out-15)
mark(has-20, that-16)
det(officer-19, the-17)
amod(officer-19, commanding-18)
nsubj(has-20, officer-19)
ccomp(find-14, has-20)
det(merit-22, the-21)
dobj(has-20, merit-22)
prep_of(merit-22, all-24)
nsubjpass(done-27, all-24)
auxpass(done-27, is-26)
rcmod(all-24, done-27)
nsubj(_-32, you-30)
aux(_-32, 're-31)
conj_but(find-14, _-32)
amod(_-34, green-33)
dobj(_-32, _-34)
advmod(_-32, yet-35)

(ROOT
  (S
    (VP (VB Let)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP see) (, ,)
            (SBARQ
              (WHADVP (WRB where))
              (SQ (VBD was)
                (NP (PRP I)))
              (. ?))))))))

root(ROOT-0, Let-1)
nsubj(see-3, me-2)
ccomp(Let-1, see-3)
advmod(was-6, where-5)
ccomp(see-3, was-6)
nsubj(was-6, I-7)

(ROOT
  (INTJ (UH Oh) (. !)))

root(ROOT-0, Oh-1)

(ROOT
  (S (: --)
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (RB about) (JJ ninety-three)
        (CC or)
        (JJ ninety-four))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBD said)))))
    (. .)))

nsubj(ninety-three-5, It-2)
nsubj(ninety-four-7, It-2)
cop(ninety-three-5, was-3)
advmod(ninety-three-5, about-4)
root(ROOT-0, ninety-three-5)
conj_or(ninety-three-5, ninety-four-7)
mark(said-11, as-9)
nsubj(said-11, I-10)
advcl(ninety-three-5, said-11)

(ROOT
  (S
    (PP (IN At)
      (NP
        (SBAR
          (WHNP (WDT that) (NN time))
          (S
            (NP (PRP I))
            (VP (VBD was)
              (PP (IN in)
                (NP (DT the) (NNP Channel) (NN fleet))))))
        (: --)
        (NP (NNP Tomkins))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB trouble)
        (NP (PRP you))
        (PP (IN for)
          (NP
            (NP (DT the) (JJ hot) (NN water))
            (: ;)
            (NP
              (NP (DT this) (NN water) (POS 's))
              (NN cold))))))
    (. .)))

det(time-3, that-2)
dobj(was-5, time-3)
nsubj(was-5, I-4)
dep(Tomkins-11, was-5)
det(fleet-9, the-7)
nn(fleet-9, Channel-8)
prep_in(was-5, fleet-9)
prep_at(trouble-15, Tomkins-11)
nsubj(trouble-15, I-13)
aux(trouble-15, 'll-14)
root(ROOT-0, trouble-15)
dobj(trouble-15, you-16)
det(water-20, the-18)
amod(water-20, hot-19)
prep_for(trouble-15, water-20)
det(water-23, this-22)
poss(cold-25, water-23)
dep(water-20, cold-25)

(ROOT
  (S
    (NP (NNP Mr) (NNP Smith))
    (, ,)
    (VP (VB do)
      (S
        (NP (PRP me))
        (NP (DT the) (NN favour)
          (S
            (VP (TO to)
              (VP (VB ring)
                (NP (DT the) (NN bell))))))))
    (. .)))

nn(Smith-2, Mr-1)
nsubj(do-4, Smith-2)
root(ROOT-0, do-4)
nsubj(favour-7, me-5)
det(favour-7, the-6)
xcomp(do-4, favour-7)
aux(ring-9, to-8)
vmod(favour-7, ring-9)
det(bell-11, the-10)
dobj(ring-9, bell-11)

(ROOT
  (S (: --)
    (ADJP (JJ Jem))
    (, ,)
    (NP (DT some))
    (VP
      (ADVP (RBR more))
      (VBZ hot)
      (NP (NN water)))
    (. .) ('' '')))

dep(hot-6, Jem-2)
nsubj(hot-6, some-4)
advmod(hot-6, more-5)
root(ROOT-0, hot-6)
dobj(hot-6, water-7)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Please))
      (, ,)
      (NP (NN sir)))
    (, ,) ('' '')
    (PRN
      (S
        (VP (VBD said)
          (NP
            (NP (NNP Jem))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD was)
                  (VP (VBN bare-footed)
                    (CONJP (RB as) (RB well) (IN as))
                    (VBN bare-headed))))))
          (, ,)
          (S
            (VP (VBG touching)
              (NP
                (NP (PRP$ his) (NN lock))
                (PP (IN of)
                  (NP (NN hair))))
              (PP (IN on)
                (NP (PRP$ his) (NN forehead))))))))
    (, ,) (`` ``)
    (NP (DT the) (NN cook))
    (VP (VBD had)
      (VP (VBN capsized)
        (NP (DT the) (NN kettle))))
    (: --)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBZ has)
        (VP (VBN put)
          (ADVP (RBR more) (IN on)))))
    (. .) ('' '')))

discourse(sir-4, Please-2)
dep(capsized-31, sir-4)
parataxis(capsized-31, said-7)
dobj(said-7, Jem-8)
nsubjpass(bare-footed-12, Jem-8)
nsubjpass(bare-headed-16, Jem-8)
auxpass(bare-footed-12, was-11)
rcmod(Jem-8, bare-footed-12)
rcmod(Jem-8, bare-headed-16)
conj_and(bare-footed-12, bare-headed-16)
vmod(said-7, touching-18)
poss(lock-20, his-19)
dobj(touching-18, lock-20)
prep_of(lock-20, hair-22)
poss(forehead-25, his-24)
prep_on(touching-18, forehead-25)
det(cook-29, the-28)
nsubj(capsized-31, cook-29)
aux(capsized-31, had-30)
root(ROOT-0, capsized-31)
det(kettle-33, the-32)
dobj(capsized-31, kettle-33)
nsubj(put-38, he-36)
aux(put-38, has-37)
conj_but(capsized-31, put-38)
advmod(on-40, more-39)
advmod(put-38, on-40)

(ROOT
  (S (`` ``)
    (VP (VB Capsized)
      (NP (DT the) (NN kettle)))
    (. !)))

root(ROOT-0, Capsized-2)
det(kettle-4, the-3)
dobj(Capsized-2, kettle-4)

(ROOT
  (S
    (VP (VB Hah))
    (. !)))

root(ROOT-0, Hah-1)

(ROOT
  (S
    (SBAR
      (PRN (: --)
        (ADVP (RB very) (RB well))
        (: --))
      (S
        (NP (PRP we))
        (VP (MD 'll)
          (VP (VB talk)
            (PP (IN about)
              (NP (DT that)))))))
    (VP (VBZ to-morrow))
    (. .)))

advmod(well-3, very-2)
dep(talk-7, well-3)
nsubj(talk-7, we-5)
aux(talk-7, 'll-6)
csubj(to-morrow-10, talk-7)
prep_about(talk-7, that-9)
root(ROOT-0, to-morrow-10)

(ROOT
  (S
    (NP (NNP Mr) (NNP Tomkins))
    (, ,)
    (VP (VBP do)
      (NP (PRP me))
      (NP
        (NP (DT the) (NN favour)
          (S
            (VP (TO to)
              (VP (VB put)
                (NP (PRP him))
                (PP (IN in)
                  (NP (DT the) (NN report)))))))
        (: :)
        (S
          (NP (PRP I))
          (VP (MD may)
            (VP (VB forget)
              (NP (PRP it)))))))
    (. .)))

nn(Tomkins-2, Mr-1)
nsubj(do-4, Tomkins-2)
root(ROOT-0, do-4)
iobj(do-4, me-5)
det(favour-7, the-6)
dobj(do-4, favour-7)
aux(put-9, to-8)
vmod(favour-7, put-9)
dobj(put-9, him-10)
det(report-13, the-12)
prep_in(put-9, report-13)
nsubj(forget-17, I-15)
aux(forget-17, may-16)
dep(favour-7, forget-17)
dobj(forget-17, it-18)

(ROOT
  (FRAG (CC And)
    (NP
      (NP (NN pray))
      (, ,)
      (NP
        (NP (NN sir))
        (, ,)
        (SBAR
          (WHNP (WRB how) (RB long))
          (S
            (VP (VBZ is)
              (NP (PRP it))
              (SBAR (IN since)
                (S
                  (NP (PRP he))
                  (VP (VBZ has)
                    (VP (VBN put)
                      (ADVP (RBR more) (IN on)))))))))))
    (. ?) ('' '')))

cc(pray-2, And-1)
root(ROOT-0, pray-2)
appos(pray-2, sir-4)
advmod(long-7, how-6)
advmod(it-9, long-7)
nsubj(it-9, long-7)
cop(it-9, is-8)
rcmod(sir-4, it-9)
mark(put-13, since-10)
nsubj(put-13, he-11)
aux(put-13, has-12)
advcl(it-9, put-13)
advmod(on-15, more-14)
advmod(put-13, on-15)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (RB Just) (DT this) (NN moment))
      (, ,)
      (NP
        (NP (NN sir))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBD came))))))
    (: aft) (. .) ('' '')))

advmod(moment-4, Just-2)
det(moment-4, this-3)
root(ROOT-0, moment-4)
appos(moment-4, sir-6)
mark(came-10, as-8)
nsubj(came-10, I-9)
rcmod(sir-6, came-10)
punct(moment-4, aft-11)

(ROOT
  (S (`` ``)
    (ADVP
      (NP (NNP Very))
      (RB well))
    (, ,)
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB see)
        (PP (TO to)
          (NP (DT that) (NN to-morrow)))))
    (. .)))

dep(well-3, Very-2)
advmod(see-7, well-3)
nsubj(see-7, we-5)
aux(see-7, 'll-6)
root(ROOT-0, see-7)
det(to-morrow-10, that-9)
prep_to(see-7, to-morrow-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP bring)
      (NP (DT the) (NN kettle) (NN aft))
      (ADVP
        (ADVP (RB as) (RB soon))
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ ready)))))))
    (. .)))

nsubj(bring-2, You-1)
root(ROOT-0, bring-2)
det(aft-5, the-3)
nn(aft-5, kettle-4)
dobj(bring-2, aft-5)
advmod(soon-7, as-6)
advmod(bring-2, soon-7)
mark(ready-11, as-8)
nsubj(ready-11, it-9)
cop(ready-11, is-10)
advcl(soon-7, ready-11)
ccomp(soon-7, ready-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP say) (, ,)
      (NP
        (NP (NNP Mr) (NNP Jem))
        (, ,)
        (PP (VBZ is)
          (NP (DT that) (JJ fellow) (NN sober)))))
    (. ?) ('' '')))

nsubj(say-2, I-1)
root(ROOT-0, say-2)
nn(Jem-5, Mr-4)
dobj(say-2, Jem-5)
prep(Jem-5, is-7)
det(sober-10, that-8)
amod(sober-10, fellow-9)
dep(is-7, sober-10)

(ROOT
  (S (`` ``)
    (NP (NNP Yees))
    (, ,)
    (VP (VB sir) (, ,)
      (S
        (NP (PRP he))
        (VP (VB be)
          (ADJP (JJ sober)
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (VB be))))))))
    (. .) ('' '')))

nsubj(sir-4, Yees-2)
root(ROOT-0, sir-4)
nsubj(sober-8, he-6)
cop(sober-8, be-7)
ccomp(sir-4, sober-8)
mark(be-11, as-9)
nsubj(be-11, you-10)
dep(sober-8, be-11)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (RB quite) (JJ astonishing))
      (SBAR
        (WHNP (WP what))
        (S
          (NP
            (NP (DT a) (NN propensity))
            (NP (DT the) (JJ common) (NNS sailors)))
          (VP (VBP have)
            (VP
              (PP (TO to)
                (NP (NN liquor))))))))
    (. .)))

nsubj(astonishing-5, It-2)
cop(astonishing-5, 's-3)
advmod(astonishing-5, quite-4)
root(ROOT-0, astonishing-5)
dobj(to-13, what-6)
det(propensity-8, a-7)
nsubj(to-13, propensity-8)
det(sailors-11, the-9)
amod(sailors-11, common-10)
dep(propensity-8, sailors-11)
aux(to-13, have-12)
ccomp(astonishing-5, to-13)
pobj(to-13, liquor-14)

(ROOT
  (S
    (S
      (NP (JJ Forty) (JJ odd) (NNS years))
      (VP (VBP have)
        (NP
          (NP (PRP I))
          (VP (VBN been)
            (PP (IN in)
              (NP (DT the) (NN service)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (ADVP (RB never))
        (VP (VBN found)
          (NP (DT any) (NN difference)))))
    (. .)))

amod(years-3, Forty-1)
amod(years-3, odd-2)
nsubj(have-4, years-3)
root(ROOT-0, have-4)
dobj(have-4, I-5)
vmod(I-5, been-6)
det(service-9, the-8)
prep_in(been-6, service-9)
nsubj(found-15, I-12)
aux(found-15, 've-13)
neg(found-15, never-14)
conj_and(have-4, found-15)
det(difference-17, any-16)
dobj(found-15, difference-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB only))
      (VP (VBP wish)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD had)
              (NP
                (NP (DT a) (NN guinea))
                (PP (IN for)
                  (NP (DT every) (NN time))))
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (VBP have)
                    (VP (VBN given)
                      (NP (DT a) (JJ fellow) (JJ seven-water) (NN grog))
                      (PP (IN during)
                        (NP (PRP$ my) (NN servitude)))
                      (PP (IN as)
                        (NP (NN first-lieutenant))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would) (RB n't)
      (VP (VB call)
        (NP (DT the) (NN king))
        (NP (PRP$ my) (NN cousin))))
    (. .)))

nsubj(wish-3, I-1)
advmod(wish-3, only-2)
ccomp(call-28, wish-3)
nsubj(had-5, I-4)
ccomp(wish-3, had-5)
det(guinea-7, a-6)
dobj(had-5, guinea-7)
det(time-10, every-9)
prep_for(guinea-7, time-10)
mark(given-14, that-11)
nsubj(given-14, I-12)
aux(given-14, have-13)
ccomp(had-5, given-14)
det(grog-18, a-15)
amod(grog-18, fellow-16)
amod(grog-18, seven-water-17)
dobj(given-14, grog-18)
poss(servitude-21, my-20)
prep_during(given-14, servitude-21)
prep_as(given-14, first-lieutenant-23)
nsubj(call-28, I-25)
aux(call-28, would-26)
neg(call-28, n't-27)
root(ROOT-0, call-28)
det(king-30, the-29)
iobj(call-28, king-30)
poss(cousin-32, my-31)
dobj(call-28, cousin-32)

(ROOT
  (S
    (S
      (ADVP (RB Well))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP (DT no) (JJ hot) (NN water)))))
      (, ,)
      (NP (PRP we))
      (VP (MD must)
        (VP (VB take)
          (NP (JJ lukewarm)))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (MD wo) (RB n't)
        (VP (VB do)
          (PP (TO to)
            (NP (NN heave-to))))))
    (. .)))

advmod(take-12, Well-1)
mark('s-5, if-3)
expl('s-5, there-4)
advcl(take-12, 's-5)
neg(water-8, no-6)
amod(water-8, hot-7)
nsubj('s-5, water-8)
nsubj(take-12, we-10)
aux(take-12, must-11)
root(ROOT-0, take-12)
dobj(take-12, lukewarm-13)
nsubj(do-18, it-15)
aux(do-18, wo-16)
neg(do-18, n't-17)
parataxis(take-12, do-18)
prep_to(do-18, heave-to-20)

(ROOT
  (FRAG
    (PP (IN By)
      (NP (DT the) (NNP Lord) (NNP Harry)))
    (. !)))

root(ROOT-0, By-1)
det(Harry-4, the-2)
nn(Harry-4, Lord-3)
pobj(By-1, Harry-4)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (MD would)
        (VP (VB have)
          (VP (VBN thought)
            (NP (PRP it))))))
    (. ?)))

nsubj(thought-4, Who-1)
aux(thought-4, would-2)
aux(thought-4, have-3)
root(ROOT-0, thought-4)
dobj(thought-4, it-5)

(ROOT
  (S (: --)
    (NP (PRP I))
    (VP (VBP 'm)
      (PP (IN at)
        (NP (NN number) (NN sixteen))))
    (. !)))

nsubj('m-3, I-2)
root(ROOT-0, 'm-3)
nn(sixteen-6, number-5)
prep_at('m-3, sixteen-6)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP me))
        (VP (VB count))))
    (, ,)
    (NP (RB yes))
    (. !)))

root(ROOT-0, Let-1)
nsubj(count-3, me-2)
ccomp(Let-1, count-3)
dep(Let-1, yes-5)

(ROOT
  (S (: --)
    (S
      (ADVP (RB surely))
      (NP (PRP I))
      (VP (MD must)
        (VP (VB have)
          (VP (VBN made)
            (NP (DT a) (NN mistake))))))
    (. .)))

advmod(made-6, surely-2)
nsubj(made-6, I-3)
aux(made-6, must-4)
aux(made-6, have-5)
root(ROOT-0, made-6)
det(mistake-8, a-7)
dobj(made-6, mistake-8)

(ROOT
  (NP
    (NP (DT A) (NN fact))
    (PRN (, ,)
      (PP (IN by)
        (NP (NNP Heaven))
        (. !) ('' '')))))

det(fact-2, A-1)
root(ROOT-0, fact-2)
prep_by(fact-2, Heaven-5)

(ROOT
  (S
    (VP (VBD continued)
      (NP (NNP Mr) (NNP Appleboy))
      (, ,)
      (S
        (VP (VBG throwing)
          (NP (DT the) (NN chalk))
          (PRT (RP down))
          (PP (IN on)
            (NP (DT the) (NN table))))))
    (. .)))

root(ROOT-0, continued-1)
nn(Appleboy-3, Mr-2)
dobj(continued-1, Appleboy-3)
vmod(continued-1, throwing-5)
det(chalk-7, the-6)
dobj(throwing-5, chalk-7)
prt(throwing-5, down-8)
det(table-11, the-10)
prep_on(throwing-5, table-11)

(ROOT
  (S (`` ``)
    (NP
      (NP
        (NP
          (QP (RB Only) (CD one))
          (JJR more) (NN glass))
        (, ,)
        (PP (IN after)
          (NP (DT this))))
      (: ;)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ is) (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBP have)
                  (VP (VBN counted)
                    (ADVP (RB right)))))))))
      (: --))
    (NP (PRP I))
    (VP (MD may)
      (VP (VB have)
        (VP (VBN seen)
          (ADVP (JJ double)))))
    (. .) ('' '')))

quantmod(one-3, Only-2)
num(glass-5, one-3)
amod(glass-5, more-4)
nsubj(is-11, glass-5)
nsubj(seen-22, glass-5)
prep_after(glass-5, this-8)
rcmod(glass-5, is-11)
mark(counted-16, if-13)
nsubj(counted-16, I-14)
aux(counted-16, have-15)
advcl(is-11, counted-16)
advmod(counted-16, right-17)
nsubj(seen-22, I-19)
aux(seen-22, may-20)
aux(seen-22, have-21)
root(ROOT-0, seen-22)
advmod(seen-22, double-23)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (VP (VBD drawled))
    (NP (NNP Smith))
    (. .)))

dep(drawled-5, Yes-2)
root(ROOT-0, drawled-5)
nsubj(drawled-5, Smith-6)

(ROOT
  (S (`` ``)
    (NP (NNP Well))
    (, ,)
    (ADVP (RB never))
    (VP (VB mind))
    (. .)))

nsubj(mind-5, Well-2)
neg(mind-5, never-4)
root(ROOT-0, mind-5)

(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (VP (VBP go)
      (PRT (RP on))
      (PP (IN with)
        (NP (PRP$ my) (NN story))))
    (. .)))

nsubj(go-3, Let-1)
possessive(Let-1, 's-2)
root(ROOT-0, go-3)
prt(go-3, on-4)
poss(story-7, my-6)
prep_with(go-3, story-7)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD was)
          (ADVP (RB either))
          (PP (IN in)
            (NP
              (NP (DT the) (NN year))
              (ADJP (JJ ninety-three)
                (CC or)
                (JJ ninety-four))))
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBD was)
                (PP (IN in)
                  (NP (DT the) (NNP Channel) (NN fleet))))))))
      (: :)
      (S
        (NP (PRP we))
        (VP (VBD were)
          (ADVP (RB then))
          (NP
            (NP (NN abreast))
            (PP (IN of)
              (NP (NNP Torbay)))))))
    (: --) ('' '')
    (PRN
      (SINV (`` ``)
        (S
          (ADVP (RB Here))
          (VP (VB be)
            (NP
              (NP (DT the) (JJ hot) (NN water))
              (, ,)
              (NP (NN sir)))))
        (, ,) ('' '')
        (VP (VBD cried))
        (NP
          (NP (NNP Jem))
          (, ,)
          (VP (VBG putting)
            (ADVP
              (NP (DT the) (NN kettle))
              (RB down))
            (PP (IN on)
              (NP (DT the) (NN deck)))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(was-2, either-3)
det(year-6, the-5)
prep_in(was-2, year-6)
amod(year-6, ninety-three-7)
amod(year-6, ninety-four-9)
conj_or(ninety-three-7, ninety-four-9)
mark(was-12, that-10)
nsubj(was-12, I-11)
ccomp(was-2, was-12)
det(fleet-16, the-14)
nn(fleet-16, Channel-15)
prep_in(was-12, fleet-16)
nsubj(abreast-21, we-18)
cop(abreast-21, were-19)
advmod(abreast-21, then-20)
parataxis(was-2, abreast-21)
prep_of(abreast-21, Torbay-23)
advmod(water-31, Here-27)
cop(water-31, be-28)
det(water-31, the-29)
amod(water-31, hot-30)
ccomp(cried-36, water-31)
appos(water-31, sir-33)
dep(was-2, cried-36)
nsubj(cried-36, Jem-37)
vmod(Jem-37, putting-39)
det(kettle-41, the-40)
npadvmod(down-42, kettle-41)
advmod(putting-39, down-42)
det(deck-45, the-44)
prep_on(putting-39, deck-45)

(ROOT
  (S (`` ``)
    (VP (VB Very)
      (FRAG
        (INTJ (UH well) (, ,) (UH boy))))
    (. .)))

root(ROOT-0, Very-2)
dep(Very-2, well-3)
dep(well-3, boy-5)

(ROOT
  (SINV
    (ADJP (JJ By-the-bye))
    (, ,)
    (VP (VBZ has))
    (NP
      (NP (DT the) (NN jar))
      (PP (IN of)
        (NP
          (NP (NN butter))
          (VP (VBN come)
            (PP (IN on)
              (NP (NN board)))))))
    (. ?) ('' '')))

dep(has-3, By-the-bye-1)
root(ROOT-0, has-3)
det(jar-5, the-4)
nsubj(has-3, jar-5)
prep_of(jar-5, butter-7)
vmod(butter-7, come-8)
prep_on(come-8, board-10)

(ROOT
  (S
    (INTJ (`` ``) (UH Yes))
    (, ,)
    (ADVP (CC but))
    (NP (PRP it))
    (VP (VBD broke)
      (NP (DT all))
      (PP (IN down)
        (NP (DT the) (NN middle))))
    (. .)))

discourse(broke-6, Yes-2)
advmod(broke-6, but-4)
nsubj(broke-6, it-5)
root(ROOT-0, broke-6)
dobj(broke-6, all-7)
det(middle-10, the-9)
prep_down(broke-6, middle-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD tied)
      (NP (PRP him))
      (PRT (RP up))
      (PP (IN with)
        (NP (DT a) (NN ropeyarn))))
    (. .) ('' '')))

nsubj(tied-2, I-1)
root(ROOT-0, tied-2)
dobj(tied-2, him-3)
prt(tied-2, up-4)
det(ropeyarn-7, a-6)
prep_with(tied-2, ropeyarn-7)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ
      (VP (VBD broke)
        (NP (PRP it))
        (, ,)
        (ADVP (RB sir))))
    (. ?) ('' '')))

nsubj(broke-3, Who-2)
root(ROOT-0, broke-3)
dobj(broke-3, it-4)
advmod(broke-3, sir-6)

(ROOT
  (S (`` ``)
    (NP (NNP Coxswain))
    (VP (VBZ says)
      (PP (IN as)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP he))
            (VP (VBD did) (RB n't))))))
    (. .) ('' '')))

nsubj(says-3, Coxswain-2)
root(ROOT-0, says-3)
advmod(did-7, how-5)
nsubj(did-7, he-6)
prepc_as(says-3, did-7)
neg(did-7, n't-8)

(ROOT
  (S (`` ``)
    (CC But)
    (SBAR
      (WHNP (WP who))
      (S
        (VP (VBD did))))
    (, ,)
    (VP (VBP sir))
    (. .) ('' '')))

cc(sir-6, But-2)
nsubj(did-4, who-3)
dep(sir-6, did-4)
root(ROOT-0, sir-6)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Coxswain))
      (VP (VBD handed)
        (NP (PRP it))
        (PRT (RP up))
        (PP (TO to)
          (NP (NNP Bill) (NNP Jones)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBZ says)
        (PP (IN as)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP he))
              (VP (VBD did) (RB n't)))))))
    (. .) ('' '')))

nsubj(handed-3, Coxswain-2)
root(ROOT-0, handed-3)
dobj(handed-3, it-4)
prt(handed-3, up-5)
nn(Jones-8, Bill-7)
prep_to(handed-3, Jones-8)
nsubj(says-12, he-11)
conj_and(handed-3, says-12)
advmod(did-16, how-14)
nsubj(did-16, he-15)
prepc_as(says-12, did-16)
neg(did-16, n't-17)

(ROOT
  (S (`` ``)
    (CC But)
    (SBAR
      (WHNP (WP who))
      (S
        (VP (VBD did))))
    (, ,)
    (VP (VBP sir))
    (. .) ('' '')))

cc(sir-6, But-2)
nsubj(did-4, who-3)
dep(sir-6, did-4)
root(ROOT-0, sir-6)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Bill) (NNP Jones))
      (VP (VBD gave)
        (NP (PRP it))
        (PP (TO to)
          (NP (PRP me)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sure)
          (PP (IN as)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP I))
                (VP (VBD did) (RB n't))))))))
    (. .) ('' '')))

nn(Jones-3, Bill-2)
nsubj(gave-4, Jones-3)
root(ROOT-0, gave-4)
dobj(gave-4, it-5)
prep_to(gave-4, me-7)
nsubj(sure-12, I-10)
cop(sure-12, 'm-11)
conj_and(gave-4, sure-12)
advmod(did-16, how-14)
nsubj(did-16, I-15)
prepc_as(sure-12, did-16)
neg(did-16, n't-17)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (SBAR
      (WHNP (WP who))
      (S
        (VP (VBD did))))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (PRP I))
    (VP (VBP ask)
      (NP (PRP you)))
    (. .) ('' '')))

advmod(ask-9, Then-2)
nsubj(did-4, who-3)
advcl(ask-9, did-4)
advmod(ask-9, sir-6)
nsubj(ask-9, I-8)
root(ROOT-0, ask-9)
dobj(ask-9, you-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (S
          (NP (PRP it))
          (VP
            (VP (VB be)
              (NP (NNP Bill) (NNP Jones)))
            (, ,)
            (VP (VB sir))
            (, ,)
            (VP (VB 'cause)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBZ 's)
                    (VP (VBN fond)
                      (PP (IN of)
                        (NP (NN butter))))))))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP know)))
      (, ,))
    (CC and)
    (S
      (NP (EX there))
      (VP (VB be)
        (ADJP (RB very) (RB little) (NN left)
          (PP (IN in)
            (NP (DT the) (NN jar))))))
    (. .) ('' '')))

nsubj(think-3, I-2)
nsubj(be-23, I-2)
root(ROOT-0, think-3)
nsubj(Jones-7, it-4)
cop(Jones-7, be-5)
nn(Jones-7, Bill-6)
ccomp(think-3, Jones-7)
dep(Jones-7, sir-9)
dep(Jones-7, 'cause-11)
nsubjpass(fond-14, he-12)
auxpass(fond-14, 's-13)
ccomp('cause-11, fond-14)
prep_of(fond-14, butter-16)
nsubj(know-19, I-18)
dep(think-3, know-19)
expl(be-23, there-22)
conj_and(think-3, be-23)
advmod(left-26, very-24)
advmod(left-26, little-25)
acomp(be-23, left-26)
det(jar-29, the-28)
prep_in(left-26, jar-29)

(ROOT
  (S (`` ``)
    (ADVP
      (NP (NNP Very))
      (RB well))
    (, ,)
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB see)
        (PP (TO to)
          (NP (DT that) (JJ to-morrow) (NN morning)))))
    (. .)))

dep(well-3, Very-2)
advmod(see-7, well-3)
nsubj(see-7, we-5)
aux(see-7, 'll-6)
root(ROOT-0, see-7)
det(morning-11, that-9)
amod(morning-11, to-morrow-10)
prep_to(see-7, morning-11)

(ROOT
  (NP
    (NP (NNP Mr) (NNP Tomkins))
    (, ,)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB oblige)
          (NP (PRP me))
          (PP (IN by)
            (S
              (VP (VBG putting)
                (NP (DT the) (NN butter-jar))
                (PRT (RP down))
                (PP (IN in)
                  (NP (DT the) (NN report)))))))))
    (, ,)
    (PP (IN in)
      (NP (NN case)))
    (SBAR
      (S
        (NP (PRP it))
        (VP (MD should)
          (VP (VB slip)
            (NP (PRP$ my) (NN memory))))))
    (. .)))

nn(Tomkins-2, Mr-1)
root(ROOT-0, Tomkins-2)
nsubj(oblige-6, you-4)
aux(oblige-6, 'll-5)
dep(Tomkins-2, oblige-6)
dobj(oblige-6, me-7)
prepc_by(oblige-6, putting-9)
det(butter-jar-11, the-10)
dobj(putting-9, butter-jar-11)
prt(putting-9, down-12)
det(report-15, the-14)
prep_in(putting-9, report-15)
prep_in(Tomkins-2, case-18)
nsubj(slip-21, it-19)
aux(slip-21, should-20)
rcmod(Tomkins-2, slip-21)
poss(memory-23, my-22)
dobj(slip-21, memory-23)

(ROOT
  (S
    (NP (NNP Bill) (NNP Jones))
    (, ,)
    (ADVP (RB indeed))
    (, ,)
    (VP (VBZ looks)
      (SBAR (RB as) (IN if)
        (S
          (NP (NN butter))
          (VP (MD would) (RB n't)
            (VP (VB melt)
              (PP (IN in)
                (NP (PRP$ his) (NN mouth))))))))
    (. .)))

nn(Jones-2, Bill-1)
nsubj(looks-6, Jones-2)
advmod(looks-6, indeed-4)
root(ROOT-0, looks-6)
advmod(melt-12, as-7)
mark(melt-12, if-8)
nsubj(melt-12, butter-9)
aux(melt-12, would-10)
neg(melt-12, n't-11)
advcl(looks-6, melt-12)
poss(mouth-15, his-14)
prep_in(melt-12, mouth-15)

(ROOT
  (S
    (ADVP (RB Never))
    (VP (VB mind))
    (. .)))

neg(mind-2, Never-1)
root(ROOT-0, mind-2)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (PRP it))
    (VP
      (VP (VBD was))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBD said)
            (SBAR (IN before)
              (PRN (: --)
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN year))
                        (ADJP (JJ ninety-three)
                          (CC or)
                          (JJ ninety-four))
                        (, ,)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP I))
                            (VP (VBD was)
                              (PP (IN in)
                                (NP (DT the) (NNP Channel) (NN fleet))))))))))
                (: ;))
              (S
                (NP (PRP we))
                (VP
                  (VP (VBD were)
                    (ADVP (RB then))
                    (PP (IN off)
                      (NP (NNP Torbay))))
                  (, ,)
                  (CC and)
                  (VP (VBD had)
                    (ADVP (RB just))
                    (VP (VBN taken)
                      (NP
                        (NP (CD two) (NNS reefs))
                        (PP (IN in)
                          (NP (DT the) (NNS top-sails)))))))))))))
    (. .)))

discourse(was-4, Well-1)
nsubj(was-4, it-3)
root(ROOT-0, was-4)
mark(said-8, as-6)
nsubj(said-8, I-7)
advcl(was-4, said-8)
mark(were-29, before-9)
nsubj(was-12, it-11)
dep(were-29, was-12)
det(year-15, the-14)
prep_in(was-12, year-15)
amod(year-15, ninety-three-16)
amod(year-15, ninety-four-18)
conj_or(ninety-three-16, ninety-four-18)
advmod(was-22, when-20)
nsubj(was-22, I-21)
rcmod(year-15, was-22)
det(fleet-26, the-24)
nn(fleet-26, Channel-25)
prep_in(was-22, fleet-26)
nsubj(were-29, we-28)
nsubj(taken-37, we-28)
advcl(said-8, were-29)
advmod(were-29, then-30)
prep_off(were-29, Torbay-32)
aux(taken-37, had-35)
advmod(taken-37, just-36)
advcl(said-8, taken-37)
conj_and(were-29, taken-37)
num(reefs-39, two-38)
dobj(taken-37, reefs-39)
det(top-sails-42, the-41)
prep_in(reefs-39, top-sails-42)

(ROOT
  (S
    (NP
      (NP (NNP Stop))
      (PRN (: --)
        (SBAR (IN before)
          (S
            (NP (PRP I))
            (VP (VBP go)
              (SBAR
                (S
                  (S
                    (PP (IN on)
                      (PP (IN with)
                        (NP (PRP$ my) (NN story))))
                    (, ,)
                    (NP (PRP I))
                    (VP (MD 'll)
                      (VP (VB take)
                        (NP (PRP$ my) (JJ last) (NN glass)))))
                  (: ;)
                  (S
                    (NP (PRP I))
                    (VP (VBP think)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (NP (DT the) (JJ last))))))))))))
        (: --)))
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP count)))))
    (. .)))

nsubj(let-25, Stop-1)
mark(go-5, before-3)
nsubj(go-5, I-4)
dep(Stop-1, go-5)
prep(take-13, on-6)
pcomp(on-6, with-7)
poss(story-9, my-8)
pobj(with-7, story-9)
nsubj(take-13, I-11)
aux(take-13, 'll-12)
dep(go-5, take-13)
poss(glass-16, my-14)
amod(glass-16, last-15)
dobj(take-13, glass-16)
nsubj(think-19, I-18)
parataxis(take-13, think-19)
nsubj(last-23, it-20)
cop(last-23, 's-21)
det(last-23, the-22)
ccomp(think-19, last-23)
root(ROOT-0, let-25)
nsubj(count-27, me-26)
ccomp(let-25, count-27)

(ROOT
  (FRAG
    (INTJ (UH Yes))
    (, ,)
    (PP (IN by)
      (NP (NNS heavens))
      (. !))))

root(ROOT-0, Yes-1)
prep_by(Yes-1, heavens-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP make)
        (PRT (RP out))
        (NP (NN sixteen))))
    (, ,)
    (NP (DT all))
    (VP (VBD told))
    (. .)))

nsubj(make-2, I-1)
ccomp(told-7, make-2)
prt(make-2, out-3)
dobj(make-2, sixteen-4)
nsubj(told-7, all-6)
root(ROOT-0, told-7)

(ROOT
  (S
    (S
      (ADVP (RB Never))
      (VP (VB mind)))
    (, ,)
    (NP (PRP it))
    (VP (MD shall)
      (VP (VB be)
        (NP (DT a) (JJ stiff) (NN one))))
    (. .)))

neg(mind-2, Never-1)
ccomp(one-9, mind-2)
nsubj(one-9, it-4)
aux(one-9, shall-5)
cop(one-9, be-6)
det(one-9, a-7)
amod(one-9, stiff-8)
root(ROOT-0, one-9)

(ROOT
  (S
    (NP (NNP Boy))
    (, ,)
    (VP
      (VP (VB bring)
        (NP (DT the) (NN kettle)))
      (, ,)
      (CC and)
      (VP (VB mind)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB pour)
                (NP (DT the) (JJ hot) (NN water))
                (PP (IN into)
                  (NP (PRP$ my) (NNS shoes)))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP you))
                    (VP (VBD did)
                      (NP (DT the) (JJ other) (NN night)))))))))))
    (. .)))

nsubj(bring-3, Boy-1)
nsubj(mind-8, Boy-1)
root(ROOT-0, bring-3)
det(kettle-5, the-4)
dobj(bring-3, kettle-5)
conj_and(bring-3, mind-8)
nsubj(pour-12, you-9)
aux(pour-12, do-10)
neg(pour-12, n't-11)
ccomp(mind-8, pour-12)
det(water-15, the-13)
amod(water-15, hot-14)
dobj(pour-12, water-15)
poss(shoes-18, my-17)
prep_into(pour-12, shoes-18)
mark(did-22, as-20)
nsubj(did-22, you-21)
advcl(pour-12, did-22)
det(night-25, the-23)
amod(night-25, other-24)
tmod(did-22, night-25)

(ROOT
  (S
    (ADVP (RB There))
    (, ,)
    (NP (DT that))
    (VP (MD will)
      (VP (VB do)))
    (. .)))

advmod(do-5, There-1)
nsubj(do-5, that-3)
aux(do-5, will-4)
root(ROOT-0, do-5)

(ROOT
  (S
    (INTJ (RB Now))
    (, ,)
    (NP (NNP Tomkins))
    (, ,)
    (VP (VB fill)
      (PRT (RP up))
      (NP
        (NP (NNP yours))
        (: ;)
        (CC and)
        (NP
          (NP (PRP you))
          (, ,)
          (NP (NNP Mr) (NNP Smith)))))
    (. .)))

discourse(fill-5, Now-1)
nsubj(fill-5, Tomkins-3)
root(ROOT-0, fill-5)
prt(fill-5, up-6)
dobj(fill-5, yours-7)
dobj(fill-5, you-10)
conj_and(yours-7, you-10)
nn(Smith-13, Mr-12)
appos(you-10, Smith-13)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (PRP us))
          (RB all)
          (VP (VB start)
            (ADJP (JJ fair))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (MD shall)
        (VP (VB have)
          (NP
            (NP (PRP$ my) (NN story))
            (: --)
            (CC and)
            (NP
              (NP (DT a) (RB very) (JJ curious) (NN one))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ is) (, ,)
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (MD can)
                          (VP (VB tell)
                            (NP (PRP you))
                            (PRN (, ,)
                              (S
                                (NP (PRP I))
                                (VP (MD would) (RB n't)
                                  (VP (VB have)
                                    (VP (VBN believed)
                                      (S
                                        (NP (PRP it))
                                        (NP (PRP myself)))))))
                              (, ,))
                            (SBAR (IN if)
                              (S
                                (NP (PRP I))
                                (VP (VBD had) (RB n't)
                                  (VP (VBN seen)
                                    (NP (PRP it))))))))))))))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(start-4, us-2)
advmod(start-4, all-3)
ccomp(Let-1, start-4)
acomp(start-4, fair-5)
advmod(have-11, then-8)
nsubj(have-11, you-9)
aux(have-11, shall-10)
conj_and(Let-1, have-11)
poss(story-13, my-12)
dobj(have-11, story-13)
det(one-19, a-16)
advmod(one-19, very-17)
amod(one-19, curious-18)
dobj(have-11, one-19)
conj_and(story-13, one-19)
nsubj(is-21, it-20)
rcmod(one-19, is-21)
nsubj(tell-25, I-23)
aux(tell-25, can-24)
ccomp(is-21, tell-25)
dobj(tell-25, you-26)
nsubj(believed-32, I-28)
aux(believed-32, would-29)
neg(believed-32, n't-30)
aux(believed-32, have-31)
parataxis(tell-25, believed-32)
nsubj(myself-34, it-33)
xcomp(believed-32, myself-34)
mark(seen-40, if-36)
nsubj(seen-40, I-37)
aux(seen-40, had-38)
neg(seen-40, n't-39)
advcl(tell-25, seen-40)
dobj(seen-40, it-41)

(ROOT
  (FRAG
    (NP (NNP Hilloa))
    (. !)))

root(ROOT-0, Hilloa-1)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (DT this)))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, 's-2)
nsubj(What-1, this-3)

(ROOT
  (S
    (VP (VB Confound)
      (NP (PRP it)))
    (. !)))

root(ROOT-0, Confound-1)
dobj(Confound-1, it-2)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (DT the) (NN matter))
        (PP (IN with)
          (NP (DT the) (NN toddy)))))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, 's-2)
det(matter-4, the-3)
nsubj(What-1, matter-4)
det(toddy-7, the-6)
prep_with(matter-4, toddy-7)

(ROOT
  (NP
    (NP (NNP Heh))
    (, ,)
    (NP (NNP Mr) (NNP Tomkins))
    (. ?) ('' '')))

root(ROOT-0, Heh-1)
nn(Tomkins-4, Mr-3)
appos(Heh-1, Tomkins-4)

(ROOT
  (S
    (S
      (NP (NNP Mr) (NNP Tomkins))
      (VP (VBD tasted)))
    (: ;)
    (CC but)
    (, ,)
    (S
      (PP (IN like)
        (NP (DT the) (NN lieutenant)))
      (, ,)
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN made)
          (S
            (NP (PRP it))
            (ADJP (RB very) (JJ stiff))))))
    (: ;)
    (CC and)
    (S (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (ADVP (RB also))
            (VP (VBN taken)
              (ADVP (RB largely))
              (PP (IN before))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD was) (, ,)
        (PP (IN like)
          (NP (PRP him)))
        (, ,)
        (ADVP (RB not) (RB quite))
        (ADJP (RB so) (JJ clear))
        (PP (IN in)
          (NP (PRP$ his) (NN discrimination)))))
    (. .)))

nn(Tomkins-2, Mr-1)
nsubj(tasted-3, Tomkins-2)
root(ROOT-0, tasted-3)
det(lieutenant-9, the-8)
prep_like(made-13, lieutenant-9)
nsubj(made-13, he-11)
aux(made-13, had-12)
conj_but(tasted-3, made-13)
nsubj(stiff-16, it-14)
advmod(stiff-16, very-15)
xcomp(made-13, stiff-16)
mark(taken-24, as-20)
nsubj(taken-24, he-21)
aux(taken-24, had-22)
advmod(taken-24, also-23)
advcl(clear-37, taken-24)
advmod(taken-24, largely-25)
prep(taken-24, before-26)
nsubj(clear-37, he-28)
cop(clear-37, was-29)
prep_like(clear-37, him-32)
dep(quite-35, not-34)
advmod(clear-37, quite-35)
advmod(clear-37, so-36)
conj_and(tasted-3, clear-37)
poss(discrimination-40, his-39)
prep_in(clear-37, discrimination-40)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ has)
      (NP
        (NP
          (NP (DT a) (JJ queer) (JJ _) (NN twang) (NN _))
          (, ,)
          (NP (NN sir)))
        (: :)
        (NP
          (NP (NNP Smith))
          (, ,)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (NP (PRP it))))))))
    (. ?) ('' '')))

nsubj(has-3, It-2)
root(ROOT-0, has-3)
det(_-8, a-4)
amod(_-8, queer-5)
amod(_-8, _-6)
nn(_-8, twang-7)
dobj(has-3, _-8)
appos(_-8, sir-10)
dep(_-8, Smith-12)
nsubj(it-16, Smith-12)
cop(it-16, is-15)
rcmod(Smith-12, it-16)

(ROOT
  (S
    (NP (NNP Smith))
    (VP (VBD took)
      (PRT (RP up))
      (NP
        (NP (PRP$ his) (NN glass))
        (, ,)
        (VP (VBN tasted)
          (NP (DT the) (NNS contents)))))
    (. .) ('' '')))

nsubj(took-2, Smith-1)
root(ROOT-0, took-2)
prt(took-2, up-3)
poss(glass-5, his-4)
dobj(took-2, glass-5)
vmod(glass-5, tasted-7)
det(contents-9, the-8)
dobj(tasted-7, contents-9)

(ROOT
  (SINV
    (S
      (NP (NNP _) (NNP Salt-water))
      (VP (VBZ _)))
    (, ,) ('' '')
    (VP (VBD drawled))
    (NP (DT the) (NN midshipman))
    (. .)))

nn(Salt-water-2, _-1)
nsubj(_-3, Salt-water-2)
ccomp(drawled-6, _-3)
root(ROOT-0, drawled-6)
det(midshipman-8, the-7)
nsubj(drawled-6, midshipman-8)

(ROOT
  (S (`` ``)
    (VP (VB Salt-water))
    (. !)))

root(ROOT-0, Salt-water-2)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ is)
      (PP (IN by)
        (NP (NNS heavens))))
    (. !) ('' '')))

dep(is-3, So-1)
nsubj(is-3, it-2)
root(ROOT-0, is-3)
prep_by(is-3, heavens-5)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Mr) (NNP Appleboy)))
    (. .)))

root(ROOT-0, cried-1)
nn(Appleboy-3, Mr-2)
dobj(cried-1, Appleboy-3)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Salt))
      (PP (IN as)
        (NP (NN Lot))))
    (VP (VBZ 's)
      (NP (NN wife)))
    (. !)))

nsubj(wife-6, Salt-2)
prep_as(Salt-2, Lot-4)
cop(wife-6, 's-5)
root(ROOT-0, wife-6)

(ROOT
  (S
    (PP (IN By)
      (NP (DT all)))
    (NP (DT that))
    (VP (VBZ 's)
      (ADJP (JJ infamous)))
    (. !) ('' '')))

prep_by(infamous-5, all-2)
nsubj(infamous-5, that-3)
cop(infamous-5, 's-4)
root(ROOT-0, infamous-5)

(ROOT
  (S
    (VP (VB cried)
      (NP
        (NP (DT the) (NN master) (POS 's))
        (NN mate)))
    (. .)))

root(ROOT-0, cried-1)
det(master-3, the-2)
poss(mate-5, master-3)
dobj(cried-1, mate-5)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Salt-water))
    (, ,)
    (NP (NN sir))
    (. !) ('' '')))

root(ROOT-0, Salt-water-2)
dep(Salt-water-2, sir-4)

(ROOT
  (S
    (NP
      (NP (JJ cried) (NN Jem))
      (PP (IN in)
        (NP (DT a) (NN fright))))
    (, ,)
    (VP (VBG expecting)
      (NP
        (NP (DT a) (JJ _) (NN salt) (NN _) (NN eel))
        (PP (IN for)
          (NP (NN supper)))))
    (. .)))

amod(Jem-2, cried-1)
nsubj(expecting-7, Jem-2)
det(fright-5, a-4)
prep_in(Jem-2, fright-5)
root(ROOT-0, expecting-7)
det(eel-12, a-8)
amod(eel-12, _-9)
nn(eel-12, salt-10)
nn(eel-12, _-11)
dobj(expecting-7, eel-12)
prep_for(eel-12, supper-14)

(ROOT
  (SINV (`` ``)
    (NP
      (NP (NNP Yes))
      (, ,)
      (NP (NN sir)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Mr) (NNP Appleboy))
    (, ,)
    (S
      (VP (VBG tossing)
        (NP
          (NP (DT the) (NNS contents))
          (PP (IN of)
            (NP
              (NP (DT the) (NN tumbler))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN boy) (POS 's))
                  (NN face))))))
        (, ,) (`` ``)
        (NP (NN salt-water))))
    (. .)))

dep(replied-7, Yes-2)
appos(Yes-2, sir-4)
root(ROOT-0, replied-7)
nn(Appleboy-9, Mr-8)
nsubj(replied-7, Appleboy-9)
vmod(replied-7, tossing-11)
det(contents-13, the-12)
dobj(tossing-11, contents-13)
det(tumbler-16, the-15)
prep_of(contents-13, tumbler-16)
det(boy-19, the-18)
poss(face-21, boy-19)
prep_in(tumbler-16, face-21)
dobj(tossing-11, salt-water-24)

(ROOT
  (NP
    (NP (JJ Very) (NN well) (, ,) (NN sir) (, ,))
    (: --)
    (NP (RB very) (RB well))
    (. !) ('' '')))

amod(sir-4, Very-1)
nn(sir-4, well-2)
root(ROOT-0, sir-4)
advmod(well-8, very-7)
dep(sir-4, well-8)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBP war) (RB n't)
        (NP (PRP me))
        (, ,)
        (ADVP (RB sir))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (DT the) (NN boy))
    (, ,)
    (S
      (VP (VBG making)
        (PRT (RP up))
        (NP (DT a) (JJ piteous) (NN look))))
    (. .)))

nsubj(war-3, It-2)
ccomp(replied-10, war-3)
neg(war-3, n't-4)
dobj(war-3, me-5)
advmod(war-3, sir-7)
root(ROOT-0, replied-10)
det(boy-12, the-11)
nsubj(replied-10, boy-12)
vmod(replied-10, making-14)
prt(making-14, up-15)
det(look-18, a-16)
amod(look-18, piteous-17)
dobj(making-14, look-18)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (VP (VBP sir))
      (, ,))
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBD said)
        (SBAR
          (S
            (NP (DT the) (NN cook))
            (VP (VBD was)
              (ADJP (JJ sober)))))))
    (. .) ('' '')))

discourse(sir-4, No-2)
root(ROOT-0, sir-4)
nsubj(said-8, you-7)
conj_but(sir-4, said-8)
det(cook-10, the-9)
nsubj(sober-12, cook-10)
cop(sober-12, was-11)
ccomp(said-8, sober-12)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (VBD was) (RB not)
        (NP
          (ADJP (RB so) (RB _) (RB very) (RB _) (RB much) (JJ disguised) (, ,))
          (NN sir))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Jem))
    (. .)))

nsubj(sir-12, He-2)
cop(sir-12, was-3)
neg(sir-12, not-4)
advmod(disguised-10, so-5)
advmod(disguised-10, _-6)
advmod(disguised-10, very-7)
advmod(disguised-10, _-8)
advmod(disguised-10, much-9)
amod(sir-12, disguised-10)
ccomp(replied-15, sir-12)
root(ROOT-0, replied-15)
nsubj(replied-15, Jem-16)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (FRAG
    (FRAG
      (ADVP (RB Very))
      (ADVP (RB well)))
    (: --)
    (FRAG
      (ADVP (RB never))
      (NP (NN mind))
      (. .))))

root(ROOT-0, Very-1)
dep(Very-1, well-2)
neg(mind-5, never-4)
dep(Very-1, mind-5)

(ROOT
  (S
    (NP
      (NP (NNP Mr) (NNP Tomkins))
      (, ,)
      (PP (IN in)
        (NP
          (NP (NN case))
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD should)
                (VP (VB forget)
                  (NP (PRP it))))))))
      (, ,))
    (VP (VBP do)
      (NP (PRP me))
      (NP (DT the) (NN favour)
        (S
          (VP (TO to)
            (VP (VB put)
              (NP
                (NP (DT the) (NN kettle))
                (PP (IN of)
                  (NP (NN salt-water))))
              (ADVP (RB down)
                (PP (IN in)
                  (NP (DT the) (NN report)))))))))
    (. .)))

nn(Tomkins-2, Mr-1)
nsubj(do-11, Tomkins-2)
prep_in(Tomkins-2, case-5)
nsubj(forget-8, I-6)
aux(forget-8, should-7)
rcmod(case-5, forget-8)
dobj(forget-8, it-9)
root(ROOT-0, do-11)
iobj(do-11, me-12)
det(favour-14, the-13)
dobj(do-11, favour-14)
aux(put-16, to-15)
vmod(favour-14, put-16)
det(kettle-18, the-17)
dobj(put-16, kettle-18)
prep_of(kettle-18, salt-water-20)
advmod(put-16, down-21)
det(report-24, the-23)
prep_in(down-21, report-24)

(ROOT
  (X (DT The)
    (ADJP (FW scoundrel) (. !))))

det(scoundrel-2, The-1)
root(ROOT-0, scoundrel-2)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (RB very) (JJ sorry))
        (, ,)
        (NP (NNS gentlemen))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (NP
          (NP (DT no) (NN means))
          (PP (IN of)
            (S
              (VP (VBG having)
                (NP (DT any) (JJR more) (NN gin-toddy))))))))
    (. .)))

nsubj(sorry-4, I-1)
cop(sorry-4, 'm-2)
advmod(sorry-4, very-3)
root(ROOT-0, sorry-4)
dep(sorry-4, gentlemen-6)
expl('s-10, there-9)
conj_but(sorry-4, 's-10)
neg(means-12, no-11)
nsubj('s-10, means-12)
prepc_of(means-12, having-14)
det(gin-toddy-17, any-15)
amod(gin-toddy-17, more-16)
dobj(having-14, gin-toddy-17)

(ROOT
  (S
    (FRAG (CC But)
      (ADVP (RB never))
      (NP (NN mind)))
    (, ,)
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB see)
        (PP (TO to)
          (NP (DT this) (NN to-morrow)))))
    (. .)))

cc(mind-3, But-1)
neg(mind-3, never-2)
dep(see-7, mind-3)
nsubj(see-7, we-5)
aux(see-7, 'll-6)
root(ROOT-0, see-7)
det(to-morrow-10, this-9)
prep_to(see-7, to-morrow-10)

(ROOT
  (S
    (S
      (NP (CD Two))
      (VP (MD can)
        (VP (VB play)
          (PP (IN at)
            (NP (DT this))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBP do) (RB n't)
            (VP
              (VP (VB salt-water)
                (NP (PRP$ their) (NN grog)))
              (, ,)
              (CC and)
              (VP (VB make)
                (S
                  (NP (PRP them))
                  (VP (VB drink)
                    (NP (PRP it))
                    (ADVP (RB too)))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN been)
          (NP
            (NP
              (NP (CD twenty) (NNS years))
              (NP
                (NP (DT a) (NN first-lieutenant))
                (PP (IN for)
                  (NP (NN nothing)))))
            (, ,)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ 's)
                  (NP (DT all)))))))))
    (. .)))

nsubj(play-3, Two-1)
aux(play-3, can-2)
root(ROOT-0, play-3)
prep_at(play-3, this-5)
mark(salt-water-12, if-8)
nsubj(salt-water-12, I-9)
nsubj(make-17, I-9)
aux(salt-water-12, do-10)
neg(salt-water-12, n't-11)
advcl(years-27, salt-water-12)
poss(grog-14, their-13)
dobj(salt-water-12, grog-14)
conj_and(salt-water-12, make-17)
advcl(years-27, make-17)
nsubj(drink-19, them-18)
ccomp(make-17, drink-19)
dobj(drink-19, it-20)
advmod(drink-19, too-21)
nsubj(years-27, I-23)
aux(years-27, have-24)
cop(years-27, been-25)
num(years-27, twenty-26)
conj_and(play-3, years-27)
nsubj(all-35, years-27)
det(first-lieutenant-29, a-28)
dep(years-27, first-lieutenant-29)
prep_for(first-lieutenant-29, nothing-31)
cop(all-35, 's-34)
rcmod(years-27, all-35)

(ROOT
  (S
    (NP
      (NP (JJ Good) (NN night))
      (, ,)
      (NP
        (NP (NNS gentlemen))
        (: ;)
        (CC and)
        (PRN (, ,) ('' '')
          (SINV
            (VP (VBD continued)
              (NP
                (NP (DT the) (NN lieutenant))
                (, ,)
                (PP (IN in)
                  (NP
                    (NP (DT a) (JJ severe) (NN tone))
                    (, ,) (`` ``)
                    (S
                      (NP (PRP you))
                      (VP (MD 'll)
                        (VP (VB keep))))))))
            (NP (DT a) (JJ sharp) (NN look-out)))
          (, ,))
        (NP (NNP Mr) (NNP Smith))
        (: --)))
    (VP (VBP do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP hear))))
      (, ,)
      (ADVP (RB sir)))
    (. ?) ('' '')))

amod(night-2, Good-1)
nsubj(do-29, night-2)
appos(night-2, gentlemen-4)
dep(gentlemen-4, continued-9)
det(lieutenant-11, the-10)
dobj(continued-9, lieutenant-11)
det(tone-16, a-14)
amod(tone-16, severe-15)
prep_in(lieutenant-11, tone-16)
nsubj(keep-21, you-19)
aux(keep-21, 'll-20)
dep(tone-16, keep-21)
det(look-out-24, a-22)
amod(look-out-24, sharp-23)
nsubj(continued-9, look-out-24)
nn(Smith-27, Mr-26)
appos(night-2, Smith-27)
conj_and(gentlemen-4, Smith-27)
root(ROOT-0, do-29)
nsubj(hear-31, you-30)
ccomp(do-29, hear-31)
advmod(do-29, sir-33)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (VP (VBD drawled))
    (NP
      (NP (NNP Smith))
      (, ,) (`` ``)
      (S
        (S (CC but)
          (NP (PRP it))
          (VP (VBZ 's) (RB not)
            (NP (PRP$ my) (NN watch))))
        (: :)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP (PRP$ my) (JJ first) (NN watch))))
        (: :)
        (CC and)
        (S (, ,)
          (PP (RB just)
            (NP (RB now)))
          (, ,)
          (NP (PRP it))
          (VP (VBD struck)
            (NP (CD one) (NN bell))))))
    (. .) ('' '')))

dep(drawled-5, Yes-2)
root(ROOT-0, drawled-5)
nsubj(drawled-5, Smith-6)
nsubj(watch-14, it-10)
cop(watch-14, 's-11)
neg(watch-14, not-12)
poss(watch-14, my-13)
dep(Smith-6, watch-14)
nsubj(watch-20, it-16)
cop(watch-20, was-17)
poss(watch-20, my-18)
amod(watch-20, first-19)
dep(Smith-6, watch-20)
conj_but(watch-14, watch-20)
prep(struck-28, just-24)
pobj(just-24, now-25)
nsubj(struck-28, it-27)
dep(Smith-6, struck-28)
conj_and(watch-14, struck-28)
num(bell-30, one-29)
dobj(struck-28, bell-30)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (MD 'll)
        (VP (VB keep)
          (NP
            (NP
              (NP (DT the) (JJ middle) (NN watch))
              (, ,)
              (ADVP (RB then)))
            (, ,)
            (NP (NNP Mr) (NNP Smith))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Mr) (NNP Appleboy))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD was)
            (ADVP (RB not)
              (NP (DT a) (RB little)))
            (VP (VBN put)
              (PRT (RP out))
              (: ;)
              (SBAR (`` ``)
                (S
                  (NP
                    (NP (NNP and))
                    (, ,)
                    (NP (NNP Mr) (NNP Tomkins))
                    (, ,))
                  (VP (VBD let)
                    (SBAR
                      (S
                        (NP (PRP me))
                        (VP (VBP know)
                          (ADVP
                            (ADVP (RB as) (RB soon))
                            (SBAR (IN as)
                              (S
                                (NP (PRP it))
                                (VP (VBZ 's)
                                  (NP (NN daylight)))))))))))))))))
    (. .)))

nsubj(keep-4, You-2)
aux(keep-4, 'll-3)
ccomp(said-15, keep-4)
det(watch-7, the-5)
amod(watch-7, middle-6)
dobj(keep-4, watch-7)
advmod(watch-7, then-9)
nn(Smith-12, Mr-11)
appos(watch-7, Smith-12)
root(ROOT-0, said-15)
nn(Appleboy-17, Mr-16)
nsubj(said-15, Appleboy-17)
nsubjpass(put-24, Appleboy-17)
auxpass(put-24, was-20)
neg(put-24, not-21)
det(little-23, a-22)
dep(not-21, little-23)
rcmod(Appleboy-17, put-24)
prt(put-24, out-25)
nsubj(let-33, and-28)
nn(Tomkins-31, Mr-30)
appos(and-28, Tomkins-31)
ccomp(put-24, let-33)
parataxis(put-24, let-33)
nsubj(know-35, me-34)
ccomp(let-33, know-35)
advmod(soon-37, as-36)
advmod(know-35, soon-37)
mark(daylight-41, as-38)
nsubj(daylight-41, it-39)
cop(daylight-41, 's-40)
advcl(soon-37, daylight-41)
ccomp(soon-37, daylight-41)

(ROOT
  (S
    (NP (NNP Boy))
    (, ,)
    (S
      (VP (VB get)
        (NP (PRP$ my) (NN bed))))
    (VP (VBD made))
    (. .)))

nsubj(made-6, Boy-1)
dep(made-6, get-3)
poss(bed-5, my-4)
dobj(get-3, bed-5)
root(ROOT-0, made-6)

(ROOT
  (FRAG
    (NP (NN Salt-water))
    (, ,)
    (PP (IN by)
      (NP
        (NP (DT all))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (ADJP (JJ blue)))))))
    (. !)))

root(ROOT-0, Salt-water-1)
prep_by(Salt-water-1, all-4)
nsubj(blue-7, all-4)
cop(blue-7, 's-6)
rcmod(all-4, blue-7)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB see)
        (PP (TO to)
          (NP (DT that) (JJ to-morrow) (NN morning)))))
    (. .) ('' '')))

advmod(see-5, However-1)
nsubj(see-5, we-3)
aux(see-5, 'll-4)
root(ROOT-0, see-5)
det(morning-9, that-7)
amod(morning-9, to-morrow-8)
prep_to(see-5, morning-9)

(ROOT
  (S
    (S
      (NP (NNP Mr) (NNP Appleboy))
      (ADVP (RB then))
      (VP (VBD turned)
        (PRT (RP in))))
    (: ;)
    (CC so)
    (SINV (VBD did)
      (NP (NNP Mr) (NNP Tomkins)))
    (: ;)
    (CC and)
    (S
      (ADVP (RB so))
      (VP (VBD did))
      (NP
        (NP (NNP Mr) (NNP Smith))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBD had)
                (NP
                  (NP (DT no) (NN idea))
                  (PP (IN of)
                    (S
                      (VP (VBG keeping)
                        (NP (DT the) (JJ middle) (NN watch))
                        (SBAR (IN because)
                          (S
                            (NP (DT the) (NN cook))
                            (VP (VBD was)
                              (ADJP (JJ drunk))))))))))
              (CC and)
              (VP (VBD had)
                (VP (VBN filled)
                  (PRT (RP up))
                  (NP (DT the) (NN kettle))
                  (PP (IN with)
                    (NP (NN salt-water))))))))))
    (. .)))

nn(Appleboy-2, Mr-1)
nsubj(turned-4, Appleboy-2)
nsubj(did-14, Appleboy-2)
advmod(turned-4, then-3)
root(ROOT-0, turned-4)
prt(turned-4, in-5)
conj_so(turned-4, did-8)
nn(Tomkins-10, Mr-9)
nsubj(did-8, Tomkins-10)
advmod(did-14, so-13)
conj_and(turned-4, did-14)
nn(Smith-16, Mr-15)
dep(did-14, Smith-16)
nsubj(had-19, Smith-16)
nsubj(filled-34, Smith-16)
rcmod(Smith-16, had-19)
neg(idea-21, no-20)
dobj(had-19, idea-21)
prepc_of(idea-21, keeping-23)
det(watch-26, the-24)
amod(watch-26, middle-25)
dobj(keeping-23, watch-26)
mark(drunk-31, because-27)
det(cook-29, the-28)
nsubj(drunk-31, cook-29)
cop(drunk-31, was-30)
advcl(keeping-23, drunk-31)
aux(filled-34, had-33)
rcmod(Smith-16, filled-34)
conj_and(had-19, filled-34)
prt(filled-34, up-35)
det(kettle-37, the-36)
dobj(filled-34, kettle-37)
prep_with(filled-34, salt-water-39)

(ROOT
  (S
    (S
      (PP (IN As)
        (PP (IN for)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD happened)
                (PP (IN in)
                  (NP (NN ninety-three)
                    (CC or)
                    (NN ninety-four))))))))
      (, ,)
      (NP (PRP I))
      (ADVP (RB really))
      (VP (MD would)
        (VP (VB inform)
          (NP (DT the) (NN reader))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD knew)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ afraid)
          (SBAR (IN that)
            (S
              (NP (DT that) (RBS most) (JJ curious) (NN story))
              (VP (VBZ is)
                (ADVP (RB never))
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN handed)
                        (PRT (RP down))
                        (PP (TO to)
                          (NP (NN posterity)))))))))))))
    (. .)))

prepc_as_for(inform-13, for-2)
nsubj(happened-4, what-3)
pcomp(inform-13, happened-4)
prep_in(happened-4, ninety-three-6)
prep_in(happened-4, ninety-four-8)
conj_or(ninety-three-6, ninety-four-8)
nsubj(inform-13, I-10)
advmod(inform-13, really-11)
aux(inform-13, would-12)
root(ROOT-0, inform-13)
det(reader-15, the-14)
dobj(inform-13, reader-15)
mark(knew-18, if-16)
nsubj(knew-18, I-17)
advcl(inform-13, knew-18)
nsubj(afraid-23, I-21)
cop(afraid-23, am-22)
conj_but(inform-13, afraid-23)
mark(is-29, that-24)
det(story-28, that-25)
advmod(story-28, most-26)
amod(story-28, curious-27)
nsubj(is-29, story-28)
nsubjpass(handed-33, story-28)
ccomp(afraid-23, is-29)
neg(is-29, never-30)
aux(handed-33, to-31)
auxpass(handed-33, be-32)
xcomp(is-29, handed-33)
prt(handed-33, down-34)
prep_to(handed-33, posterity-36)

(ROOT
  (S
    (S
      (NP (DT The) (JJ next) (NN morning))
      (NP
        (NP (NNP Mr) (NNP Tomkins))
        (, ,)
        (ADJP (RB as) (JJ usual))
        (, ,))
      (VP (VBD forgot)
        (S
          (VP (TO to)
            (VP (VB report)
              (NP
                (NP (DT the) (NN cook))
                (, ,)
                (NP
                  (NP (DT the) (NN jar))
                  (PP (IN of)
                    (NP (NN butter))))
                (CC and)
                (NP
                  (NP (DT the) (NN kettle))
                  (PP (IN of)
                    (NP (NN salt-water))))))))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (NNP Mr) (NNP Appleboy) (POS 's))
        (NN wrath))
      (VP (VBD had)
        (ADVP (RB long))
        (VP (VBN been)
          (VP (VBG appeased)
            (SBAR (IN before)
              (S
                (NP (PRP he))
                (VP (VBD remembered)
                  (NP (PRP them)))))))))
    (. .)))

det(morning-3, The-1)
amod(morning-3, next-2)
tmod(forgot-10, morning-3)
nn(Tomkins-5, Mr-4)
nsubj(forgot-10, Tomkins-5)
nsubj(report-12, Tomkins-5)
advmod(usual-8, as-7)
amod(Tomkins-5, usual-8)
root(ROOT-0, forgot-10)
aux(report-12, to-11)
xcomp(forgot-10, report-12)
det(cook-14, the-13)
dobj(report-12, cook-14)
det(jar-17, the-16)
dobj(report-12, jar-17)
conj_and(cook-14, jar-17)
prep_of(jar-17, butter-19)
det(kettle-22, the-21)
dobj(report-12, kettle-22)
conj_and(cook-14, kettle-22)
prep_of(kettle-22, salt-water-24)
nn(Appleboy-28, Mr-27)
poss(wrath-30, Appleboy-28)
nsubj(appeased-34, wrath-30)
aux(appeased-34, had-31)
advmod(appeased-34, long-32)
aux(appeased-34, been-33)
conj_and(forgot-10, appeased-34)
mark(remembered-37, before-35)
nsubj(remembered-37, he-36)
advcl(appeased-34, remembered-37)
dobj(remembered-37, them-38)

(ROOT
  (S
    (PP (IN At)
      (NP (NN daylight)))
    (, ,)
    (NP (DT the) (NN lieutenant))
    (VP (VBD came)
      (PP (IN on)
        (NP (NN deck)))
      (, ,)
      (S
        (VP (VBG having)
          (VP
            (ADVP (RB only))
            (VBD slept)
            (ADVP (RB away))
            (NP
              (NP (NN half))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN sixteen))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (DT a) (NN taste))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (JJ seventeenth) (JJ salt-water) (NN glass))
                        (PP (IN of)
                          (NP (NN gin-toddy)))))))))))))
    (. .)))

prep_at(came-6, daylight-2)
det(lieutenant-5, the-4)
nsubj(came-6, lieutenant-5)
nsubj(slept-12, lieutenant-5)
root(ROOT-0, came-6)
prep_on(came-6, deck-8)
aux(slept-12, having-10)
advmod(slept-12, only-11)
xcomp(came-6, slept-12)
advmod(slept-12, away-13)
dobj(slept-12, half-14)
det(sixteen-17, the-16)
prep_of(half-14, sixteen-17)
det(taste-21, a-20)
prep_of(half-14, taste-21)
conj_and(sixteen-17, taste-21)
det(glass-26, the-23)
amod(glass-26, seventeenth-24)
amod(glass-26, salt-water-25)
prep_of(taste-21, glass-26)
prep_of(glass-26, gin-toddy-28)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD rubbed)
        (NP (PRP$ his) (JJ grey) (NNS eyes))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD might)
              (VP (VB peer)
                (PP (IN through)
                  (NP
                    (NP (DT the) (JJ grey))
                    (PP (IN of)
                      (NP (DT the) (NN morning)))))))))))
    (: ;)
    (S
      (NP (DT the) (JJ fresh) (NN breeze))
      (VP
        (VP (VBD blew)
          (PP (IN about)
            (NP (PRP$ his) (JJ grizzly) (NNS locks))))
        (, ,)
        (CC and)
        (VP (VBD cooled)
          (NP (PRP$ his) (JJ rubicund) (NN nose)))))
    (. .)))

nsubj(rubbed-2, He-1)
root(ROOT-0, rubbed-2)
poss(eyes-5, his-3)
amod(eyes-5, grey-4)
dobj(rubbed-2, eyes-5)
mark(peer-10, that-7)
nsubj(peer-10, he-8)
aux(peer-10, might-9)
ccomp(rubbed-2, peer-10)
det(grey-13, the-12)
prep_through(peer-10, grey-13)
det(morning-16, the-15)
prep_of(grey-13, morning-16)
det(breeze-20, the-18)
amod(breeze-20, fresh-19)
nsubj(blew-21, breeze-20)
nsubj(cooled-28, breeze-20)
parataxis(rubbed-2, blew-21)
poss(locks-25, his-23)
amod(locks-25, grizzly-24)
prep_about(blew-21, locks-25)
parataxis(rubbed-2, cooled-28)
conj_and(blew-21, cooled-28)
poss(nose-31, his-29)
amod(nose-31, rubicund-30)
dobj(cooled-28, nose-31)

(ROOT
  (S
    (NP
      (NP (DT The) (NN revenue-cutter))
      (, ,)
      (SBAR
        (WHNP (WP$ whose) (NN name))
        (S
          (VP (VBD was)
            (NP (DT the) (NNP _) (NNP Active) (NNP _)))))
      (, ,))
    (VP
      (VP (VBD cast)
        (PRT (RP off))
        (PP (IN from)
          (NP (DT the) (NN buoy))))
      (, ,)
      (CC and)
      (VP (, ,)
        (PP (IN with)
          (NP (DT a) (JJ fresh) (NN breeze)))
        (, ,) (VBD steered)
        (NP
          (NP (PRP$ her) (NN course))
          (PP (IN for)
            (NP
              (NP (DT the) (NNPS Needles) (POS '))
              (NN passage))))))
    (. .)))

det(revenue-cutter-2, The-1)
poss(name-5, revenue-cutter-2)
nsubj(cast-12, revenue-cutter-2)
nsubj(steered-25, revenue-cutter-2)
nsubj(_-10, name-5)
cop(_-10, was-6)
det(_-10, the-7)
nn(_-10, _-8)
nn(_-10, Active-9)
rcmod(revenue-cutter-2, _-10)
root(ROOT-0, cast-12)
prt(cast-12, off-13)
det(buoy-16, the-15)
prep_from(cast-12, buoy-16)
det(breeze-23, a-21)
amod(breeze-23, fresh-22)
prep_with(steered-25, breeze-23)
conj_and(cast-12, steered-25)
poss(course-27, her-26)
dobj(steered-25, course-27)
det(Needles-30, the-29)
poss(passage-32, Needles-30)
prep_for(course-27, passage-32)

(ROOT
  (S
    (NP (NNP CHAPTER))
    (VP (VBP THREE))
    (. .)))

nsubj(THREE-2, CHAPTER-1)
root(ROOT-0, THREE-2)

(ROOT
  (S
    (NP (NNP CUTTER) (NNP THE))
    (VP (VBD THIRD))
    (. .)))

nn(THE-2, CUTTER-1)
nsubj(THIRD-3, THE-2)
root(ROOT-0, THIRD-3)

(ROOT
  (INTJ (UH Reader) (. !)))

root(ROOT-0, Reader-1)

(ROOT
  (SQ (VBP Have)
    (NP (PRP you))
    (VP (VBN been)
      (PP (TO to)
        (NP (NNP Saint) (NNP Malo))))
    (. ?)))

aux(been-3, Have-1)
nsubj(been-3, you-2)
root(ROOT-0, been-3)
nn(Malo-6, Saint-5)
prep_to(been-3, Malo-6)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP have))))
      (, ,)
      (NP (PRP you))
      (VP (VBD were)
        (ADJP (JJ glad) (RB enough)
          (S
            (VP (TO to)
              (VP (VB leave)
                (NP (DT the) (NN hole))))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP have) (RB not))))
      (, ,)
      (VP
        (VP (VB take)
          (NP (PRP$ my) (NN advice)))
        (, ,)
        (CC and)
        (VP (VBP do) (RB not)
          (VP (VB give)
            (NP (PRP yourself))
            (NP (DT the) (NN trouble)
              (S
                (VP (TO to)
                  (VP (VB go)
                    (CC and)
                    (VB see)
                    (NP
                      (NP (DT that))
                      (CC or)
                      (NP (DT any) (JJ other) (JJ French) (NN port)))
                    (PP (IN in)
                      (NP (DT the) (NNP Channel)))))))))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(glad-7, have-3)
nsubj(glad-7, you-5)
nsubj(leave-10, you-5)
nsubj(take-20, you-5)
cop(glad-7, were-6)
root(ROOT-0, glad-7)
advmod(glad-7, enough-8)
aux(leave-10, to-9)
xcomp(glad-7, leave-10)
det(hole-12, the-11)
dobj(leave-10, hole-12)
mark(have-17, if-15)
nsubj(have-17, you-16)
advcl(take-20, have-17)
neg(have-17, not-18)
conj_and(glad-7, take-20)
poss(advice-22, my-21)
dobj(take-20, advice-22)
aux(give-27, do-25)
neg(give-27, not-26)
conj_and(glad-7, give-27)
conj_and(take-20, give-27)
iobj(give-27, yourself-28)
det(trouble-30, the-29)
dobj(give-27, trouble-30)
aux(go-32, to-31)
vmod(trouble-30, go-32)
vmod(trouble-30, see-34)
conj_and(go-32, see-34)
dobj(go-32, that-35)
det(port-40, any-37)
amod(port-40, other-38)
amod(port-40, French-39)
dobj(go-32, port-40)
conj_or(that-35, port-40)
det(Channel-43, the-42)
prep_in(go-32, Channel-43)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is) (RB not)
      (NP
        (NP (CD one) (NN worth))
        (VP (VBG looking)
          (PP (IN at)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(is-2, not-3)
num(worth-5, one-4)
nsubj(is-2, worth-5)
vmod(worth-5, looking-6)
prep(looking-6, at-7)

(ROOT
  (S
    (S
      (S
        (NP (PRP They))
        (VP (VBP have)
          (VP (VBN made)
            (NP (CD one)
              (CC or)
              (CD two) (JJ artificial) (NNS ports)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP they))
        (VP (VBP are)
          (NP (DT no) (JJ great) (NNS things)))))
    (: ;)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (ADVP (RB no)
          (S
            (VP
              (VP (VBG getting)
                (PRT (RP out)))
              (CC or)
              (VP (VBG getting)
                (PRT (RP in))))))))
    (. .)))

nsubj(made-3, They-1)
aux(made-3, have-2)
root(ROOT-0, made-3)
nn(ports-8, one-4)
conj_or(one-4, two-6)
nn(ports-8, two-6)
amod(ports-8, artificial-7)
dobj(made-3, ports-8)
nsubj(things-15, they-11)
cop(things-15, are-12)
neg(things-15, no-13)
amod(things-15, great-14)
conj_and(made-3, things-15)
expl(is-18, there-17)
parataxis(made-3, is-18)
advmod(is-18, no-19)
dep(no-19, getting-20)
prt(getting-20, out-21)
dep(no-19, getting-23)
conj_or(getting-20, getting-23)
prt(getting-23, in-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (NP
          (NP (DT no) (NNS harbours))
          (PP (IN in)
            (NP (DT the) (NNP Channel))))
        (, ,)
        (SBAR (IN while)
          (S
            (NP (PRP we))
            (VP (VBP have)
              (NP
                (NP
                  (NP (DT the) (JJS finest))
                  (PP (IN in)
                    (NP (DT the) (NN world))))
                (: ;)
                (NP
                  (NP (DT a) (JJ peculiar) (NN dispensation))
                  (PP (IN of)
                    (NP (NNP Providence)))))
              (, ,)
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBD knew)
                    (SBAR (IN that)
                      (S
                        (NP (PRP we))
                        (VP (MD should)
                          (VP (VB want)
                            (NP (PRP them))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP France))
      (VP (MD would) (RB not)))
    (. .)))

prep_in(have-5, fact-2)
nsubj(have-5, they-4)
root(ROOT-0, have-5)
neg(harbours-7, no-6)
dobj(have-5, harbours-7)
det(Channel-10, the-9)
prep_in(harbours-7, Channel-10)
mark(have-14, while-12)
nsubj(have-14, we-13)
advcl(have-5, have-14)
det(finest-16, the-15)
dobj(have-14, finest-16)
det(world-19, the-18)
prep_in(finest-16, world-19)
det(dispensation-23, a-21)
amod(dispensation-23, peculiar-22)
dep(finest-16, dispensation-23)
prep_of(dispensation-23, Providence-25)
mark(knew-29, because-27)
nsubj(knew-29, it-28)
advcl(have-14, knew-29)
mark(want-33, that-30)
nsubj(want-33, we-31)
aux(want-33, should-32)
ccomp(knew-29, want-33)
dobj(want-33, them-34)
nsubj(would-38, France-37)
conj_and(have-5, would-38)
neg(would-38, not-39)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP
          (NP (NNP France))
          (, ,)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBP are)
                (VP (VBN called)
                  (SBAR
                    (S
                      (NP (NNS ports))
                      (VP (VBP are) (RB all)
                        (ADJP (RB alike)))))))))
          (, ,))
        (: --)
        (NP (JJ nasty) (, ,) (JJ narrow) (NNS holes))))
    (, ,)
    (S
      (SBAR (RB only)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN entered)
                (PP (IN at)
                  (NP
                    (NP (JJ certain) (NNS times))
                    (PP (IN of)
                      (NP (NN tide)
                        (CC and)
                        (JJ certain) (NNS winds))))))))))
      (: ;)
      (S
        (VP (VBN made)
          (PRT (RP up))
          (PP (IN of)
            (NP
              (NP (NNS basins)
                (CC and)
                (NNS backwaters))
              (, ,)
              (NP (NNS custom-houses))
              (, ,)
              (CC and)
              (NP (NNS cabarets))))))
      (: ;)
      (VP
        (VP
          (ADVP (RB just))
          (VBP fit)
          (PP (IN for)
            (NP (NNS smugglers)))
          (S
            (VP (TO to)
              (VP (VB run)
                (PP (IN into))))))
        (, ,)
        (CC and)
        (VP
          (NP (NN nothing))
          (ADVP (RBR more)))))
    (: ;)
    (CC and)
    (, ,)
    (S
      (ADVP (RB therefore))
      (NP (PRP they))
      (VP (VBP are)
        (VP (VBN used)
          (PP (IN for)
            (NP
              (ADJP (RB very) (JJ little))
              (NN else))))))
    (. .)))

nsubjpass(called-6, France-2)
prep_in(fit-44, France-2)
auxpass(called-6, are-5)
rcmod(France-2, called-6)
nsubj(alike-10, ports-7)
cop(alike-10, are-8)
advmod(alike-10, all-9)
ccomp(called-6, alike-10)
amod(holes-16, nasty-13)
amod(holes-16, narrow-15)
dep(France-2, holes-16)
advmod(entered-21, only-18)
aux(entered-21, to-19)
auxpass(entered-21, be-20)
csubj(fit-44, entered-21)
amod(times-24, certain-23)
prep_at(entered-21, times-24)
nn(winds-29, tide-26)
conj_and(tide-26, certain-28)
nn(winds-29, certain-28)
prep_of(times-24, winds-29)
csubj(fit-44, made-31)
parataxis(fit-44, made-31)
prt(made-31, up-32)
prep_of(made-31, basins-34)
prep_of(made-31, backwaters-36)
conj_and(basins-34, backwaters-36)
prep_of(made-31, custom-houses-38)
conj_and(basins-34, custom-houses-38)
prep_of(made-31, cabarets-41)
conj_and(basins-34, cabarets-41)
advmod(fit-44, just-43)
root(ROOT-0, fit-44)
prep_for(fit-44, smugglers-46)
aux(run-48, to-47)
xcomp(fit-44, run-48)
prep(run-48, into-49)
conj_and(fit-44, nothing-52)
advmod(nothing-52, more-53)
advmod(used-60, therefore-57)
nsubjpass(used-60, they-58)
auxpass(used-60, are-59)
conj_and(fit-44, used-60)
advmod(little-63, very-62)
amod(else-64, little-63)
prep_for(used-60, else-64)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (PP (IN in)
      (NP (DT the) (NN dog-hole)))
    (VP (VBD called)
      (SBAR
        (S
          (NP (NNP Saint) (NNP Malo))
          (ADVP (RB there))
          (VP (VBZ is)
            (NP (DT some) (JJ pretty) (NN land))
            (, ,)
            (PP (IN although)
              (NP
                (NP (DT a) (JJ great) (NN deficiency))
                (PP (IN of)
                  (NP (JJ marine) (NN scenery)))))))))
    (. .)))

advmod(called-6, Now-1)
det(dog-hole-5, the-4)
prep_in(called-6, dog-hole-5)
root(ROOT-0, called-6)
nn(Malo-8, Saint-7)
nsubj(land-13, Malo-8)
advmod(land-13, there-9)
cop(land-13, is-10)
det(land-13, some-11)
amod(land-13, pretty-12)
ccomp(called-6, land-13)
det(deficiency-18, a-16)
amod(deficiency-18, great-17)
prep_although(land-13, deficiency-18)
amod(scenery-21, marine-20)
prep_of(deficiency-18, scenery-21)

(ROOT
  (S (CC But)
    (VP
      (ADVP (RB never))
      (VB mind)
      (NP (DT that)))
    (. .)))

cc(mind-3, But-1)
neg(mind-3, never-2)
root(ROOT-0, mind-3)
dobj(mind-3, that-4)

(ROOT
  (S
    (S
      (VP
        (VP (VBN Stay)
          (PP (IN at)
            (NP (NN home))))
        (, ,)
        (CC and)
        (VP (VBP do) (RB n't)
          (VP (VB go)
            (ADVP (RB abroad))
            (S
              (VP (TO to)
                (VP (VB drink)
                  (NP (JJ sour) (NN wine)))))
            (, ,)
            (SBAR (IN because)
              (S
                (NP (PRP they))
                (VP (VBP call)
                  (S
                    (NP (PRP it))
                    (NP (NNP Bordeaux)))
                  (, ,)
                  (CC and)
                  (VBP eat)
                  (NP
                    (NP
                      (NP (JJ villainous) (NN trash))
                      (, ,)
                      (VP
                        (ADVP (RB so))
                        (VBN disguised)
                        (PP (IN by)
                          (S
                            (VP (VBG cooking)
                              (SBAR (IN that)
                                (S
                                  (NP (PRP you))
                                  (VP (MD can) (RB not)
                                    (ADVP (RB possibly))
                                    (VP (VB tell)
                                      (WHNP (WDT which)))))))))))
                    (PP (IN of)
                      (NP
                        (NP
                          (NP (DT the) (NNS birds))
                          (PP (IN of)
                            (NP (DT the) (NN air))))
                        (, ,)
                        (CC or)
                        (NP
                          (NP (NNS beasts))
                          (PP (IN of)
                            (NP (DT the) (NN field))))))
                    (, ,)
                    (CC or)
                    (NP
                      (NP (NNS fishes))
                      (PP (IN of)
                        (NP (DT the) (NN sea))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG cramming)
        (PRT (RP down))
        (NP (PRP$ your) (NN throat))))
    (. .)))

vmod(cramming-58, Stay-1)
prep_at(Stay-1, home-3)
aux(go-8, do-6)
neg(go-8, n't-7)
conj_and(Stay-1, go-8)
vmod(cramming-58, go-8)
advmod(go-8, abroad-9)
aux(drink-11, to-10)
xcomp(go-8, drink-11)
amod(wine-13, sour-12)
dobj(drink-11, wine-13)
mark(call-17, because-15)
nsubj(call-17, they-16)
nsubj(eat-22, they-16)
advcl(go-8, call-17)
nsubj(Bordeaux-19, it-18)
xcomp(call-17, Bordeaux-19)
advcl(go-8, eat-22)
conj_and(call-17, eat-22)
amod(trash-24, villainous-23)
dobj(call-17, trash-24)
advmod(disguised-27, so-26)
vmod(trash-24, disguised-27)
agent(disguised-27, cooking-29)
mark(tell-35, that-30)
nsubj(tell-35, you-31)
aux(tell-35, can-32)
neg(tell-35, not-33)
advmod(tell-35, possibly-34)
ccomp(cooking-29, tell-35)
dobj(tell-35, which-36)
det(birds-39, the-38)
prep_of(trash-24, birds-39)
det(air-42, the-41)
prep_of(birds-39, air-42)
prep_of(trash-24, beasts-45)
conj_or(birds-39, beasts-45)
det(field-48, the-47)
prep_of(beasts-45, field-48)
dobj(call-17, fishes-51)
conj_or(trash-24, fishes-51)
det(sea-54, the-53)
prep_of(fishes-51, sea-54)
nsubj(cramming-58, you-56)
aux(cramming-58, are-57)
root(ROOT-0, cramming-58)
prt(cramming-58, down-59)
poss(throat-61, your-60)
dobj(cramming-58, throat-61)

(ROOT
  (S (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (DT all))
          (VP (VBZ is)
            (ADJP (JJ right)))))
      (, ,)
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN occasion))
          (PP (IN for)
            (NP (NNP disguise))))))
    (, ,) ('' '')
    (VP (VBZ is)
      (NP (DT an) (JJ old) (NN saying)))
    (: ;)
    (S
      (ADVP (RB so))
      (VP (VB depend)
        (PP (IN upon)
          (NP (PRP it)))
        (SBAR
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (ADJP
                  (NP (NN something))
                  (JJ wrong)))))
          (, ,)
          (CC and)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP are)
                (VP (VBG eating)
                  (ADJP (JJ offal)))))))
        (, ,)
        (PP (IN under)
          (NP (DT a) (JJ grand) (JJ French) (NN name)))))
    (. .)))

mark(right-5, If-2)
nsubj(right-5, all-3)
cop(right-5, is-4)
advcl(is-8, right-5)
expl(is-8, there-7)
ccomp(is-15, is-8)
neg(occasion-10, no-9)
nsubj(is-8, occasion-10)
prep_for(occasion-10, disguise-12)
root(ROOT-0, is-15)
det(saying-18, an-16)
amod(saying-18, old-17)
dep(is-15, saying-18)
advmod(depend-21, so-20)
parataxis(is-15, depend-21)
prep_upon(depend-21, it-23)
mark(is-26, that-24)
expl(is-26, there-25)
ccomp(depend-21, is-26)
npadvmod(wrong-28, something-27)
acomp(is-26, wrong-28)
mark(eating-34, that-31)
nsubj(eating-34, you-32)
aux(eating-34, are-33)
ccomp(depend-21, eating-34)
conj_and(is-26, eating-34)
acomp(eating-34, offal-35)
det(name-41, a-38)
amod(name-41, grand-39)
amod(name-41, French-40)
prep_under(depend-21, name-41)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VBP eat)
          (NP (NN everything))
          (PP (IN in)
            (NP (NNP France))))
        (, ,)
        (CC and)
        (VP (MD would)
          (VP (VB serve)
            (NP (PRP you))
            (PP (IN up)
              (NP
                (NP (DT the) (NN head))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN monkey))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ has)
                          (VP (VBN died)
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NN smallpox))
                                (, ,)
                                (RRC
                                  (PP (IN as)
                                    (NP (JJ _) (NN singe)))
                                  (PP (FW a) (FW la)
                                    (NP (JJ petite) (NN verole) (NNS _))))))))))))))))))
    (: --)
    (S
      (NP (DT that))
      (VP (VBZ is) (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBD did) (RB not)
              (VP (VB understand)
                (NP (NNP French))))))))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBD did))))
      (, ,)
      (NP (PRP they))
      (VP (MD would)
        (VP (VB call)
          (NP (PRP it)))))
    (, ,)
    (S
      (NP (JJ _) (NN tete))
      (VP (VBP d'amour)
        (NP (DT a) (JJ l'Ethiopique) (NN _))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (MD would)
        (VP (VB be)
          (VP
            (ADVP (RB even) (RBR more))
            (VBN puzzled)))))
    (. .)))

nsubj(eat-2, They-1)
nsubj(serve-9, They-1)
root(ROOT-0, eat-2)
dobj(eat-2, everything-3)
prep_in(eat-2, France-5)
aux(serve-9, would-8)
conj_and(eat-2, serve-9)
dobj(serve-9, you-10)
det(head-13, the-12)
prep_up(serve-9, head-13)
det(monkey-16, a-15)
prep_of(head-13, monkey-16)
nsubj(died-19, monkey-16)
aux(died-19, has-18)
rcmod(monkey-16, died-19)
det(smallpox-22, the-21)
prep_of(died-19, smallpox-22)
amod(singe-26, _-25)
prep_as(la-28, singe-26)
dep(la-28, a-27)
rcmod(smallpox-22, la-28)
amod(_-31, petite-29)
nn(_-31, verole-30)
pobj(la-28, _-31)
nsubj(is-34, that-33)
conj_and(eat-2, is-34)
mark(understand-40, if-36)
nsubj(understand-40, you-37)
aux(understand-40, did-38)
neg(understand-40, not-39)
advcl(is-34, understand-40)
dobj(understand-40, French-41)
mark(did-45, if-43)
nsubj(did-45, you-44)
advcl(call-49, did-45)
nsubj(call-49, they-47)
aux(call-49, would-48)
conj_and(eat-2, call-49)
dobj(call-49, it-50)
amod(tete-53, _-52)
nsubj(d'amour-54, tete-53)
ccomp(eat-2, d'amour-54)
conj_and(eat-2, d'amour-54)
det(_-57, a-55)
amod(_-57, l'Ethiopique-56)
dobj(d'amour-54, _-57)
advmod(puzzled-66, then-60)
nsubjpass(puzzled-66, you-61)
aux(puzzled-66, would-62)
auxpass(puzzled-66, be-63)
advmod(more-65, even-64)
advmod(puzzled-66, more-65)
conj_and(eat-2, puzzled-66)

(ROOT
  (S
    (S
      (PP (IN As)
        (PP (IN for)
          (NP (PRP$ their) (NN wine))))
      (, ,)
      (NP (EX there))
      (VP (VBZ is)
        (ADJP (RB no) (VBN disguise)
          (WHPP (IN in)
            (WHNP (WDT that))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (RB half) (JJ vinegar))))
    (. .)))

prepc_as_for(is-7, for-2)
poss(wine-4, their-3)
pobj(is-7, wine-4)
expl(is-7, there-6)
root(ROOT-0, is-7)
advmod(disguise-9, no-8)
acomp(is-7, disguise-9)
prep_in(disguise-9, that-11)
nsubj(vinegar-16, it-13)
cop(vinegar-16, 's-14)
advmod(vinegar-16, half-15)
parataxis(is-7, vinegar-16)

(ROOT
  (INTJ
    (INTJ (UH No))
    (, ,)
    (INTJ (UH no) (. !))))

root(ROOT-0, No-1)
discourse(No-1, no-3)

(ROOT
  (S
    (S
      (VP (VBG Stay)
        (PP (IN at)
          (NP (NN home)))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB live)
          (ADVP (RB just))
          (ADVP (RB as) (RB cheaply))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP choose)))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (MD will)
        (VP (VB have)
          (NP
            (NP (JJ good) (NN meat))
            (, ,)
            (NP (JJ good) (NNS vegetables))
            (, ,)
            (NP (JJ good) (NN ale))
            (, ,)
            (NP (JJ good) (NN beer))
            (, ,)
            (CC and)
            (NP
              (NP (DT a) (JJ good) (NN glass))
              (PP (IN of)
                (NP (NN grog))))))))
    (: ;)
    (CC and)
    (S (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ is)
            (PP (IN of)
              (NP (JJR more) (NN importance))))))
      (, ,)
      (NP (PRP you))
      (VP (MD will)
        (VP (VB be)
          (PP (IN in)
            (NP (JJ good) (NN company))))))
    (. .)))

root(ROOT-0, Stay-1)
prep_at(Stay-1, home-3)
nsubj(live-7, you-5)
aux(live-7, can-6)
conj_and(Stay-1, live-7)
advmod(live-7, just-8)
advmod(cheaply-10, as-9)
advmod(live-7, cheaply-10)
mark(choose-14, if-12)
nsubj(choose-14, you-13)
advcl(live-7, choose-14)
advmod(have-20, then-17)
nsubj(have-20, you-18)
aux(have-20, will-19)
conj_and(Stay-1, have-20)
amod(meat-22, good-21)
dobj(have-20, meat-22)
amod(vegetables-25, good-24)
dobj(have-20, vegetables-25)
conj_and(meat-22, vegetables-25)
amod(ale-28, good-27)
dobj(have-20, ale-28)
conj_and(meat-22, ale-28)
amod(beer-31, good-30)
dobj(have-20, beer-31)
conj_and(meat-22, beer-31)
det(glass-36, a-34)
amod(glass-36, good-35)
dobj(have-20, glass-36)
conj_and(meat-22, glass-36)
prep_of(glass-36, grog-38)
nsubj(is-43, what-42)
advcl(be-50, is-43)
amod(importance-46, more-45)
prep_of(is-43, importance-46)
nsubj(be-50, you-48)
aux(be-50, will-49)
conj_and(Stay-1, be-50)
amod(company-53, good-52)
prep_in(be-50, company-53)

(ROOT
  (S
    (VP
      (VP (VB Live)
        (PP (IN with)
          (NP (PRP$ your) (NNS friends))))
      (, ,)
      (CC and)
      (VP (VBP do) (RB n't)
        (VP (VB make)
          (NP
            (NP (DT a) (NN fool))
            (PP (IN of)
              (NP (PRP yourself)))))))
    (. .)))

root(ROOT-0, Live-1)
poss(friends-4, your-3)
prep_with(Live-1, friends-4)
aux(make-9, do-7)
neg(make-9, n't-8)
conj_and(Live-1, make-9)
det(fool-11, a-10)
dobj(make-9, fool-11)
prep_of(fool-11, yourself-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would) (RB not)
      (VP (VB have)
        (VP (VBN condescended)
          (S
            (VP (TO to)
              (VP (VB have)
                (VP (VBN noticed)
                  (NP (DT this) (NN place))
                  (PRN (, ,)
                    (SINV (VBD had)
                      (NP (PRP it))
                      (RB not)
                      (VP (VBN been)
                        (SBAR (IN that)
                          (S
                            (NP (PRP I))
                            (VP (VBP wish)
                              (S
                                (NP (PRP you))
                                (VP (TO to)
                                  (VP (VB observe)
                                    (NP
                                      (NP (DT a) (NN vessel))
                                      (SBAR
                                        (WHNP (WDT which))
                                        (S
                                          (VP (VBZ is)
                                            (VP (VBG lying)
                                              (PP (IN along)
                                                (NP (DT the) (NN pier-wharf))))))))))))))))
                    (, ,))
                  (PP (IN with)
                    (NP
                      (NP (DT a) (NN plank))
                      (PP (IN from)
                        (NP
                          (NP (DT the) (NN shore))
                          (PP (TO to)
                            (NP (PRP$ her) (NN gunwale))))))))))))))
    (. .)))

nsubj(condescended-5, I-1)
nsubj(noticed-8, I-1)
aux(condescended-5, would-2)
neg(condescended-5, not-3)
aux(condescended-5, have-4)
root(ROOT-0, condescended-5)
aux(noticed-8, to-6)
aux(noticed-8, have-7)
xcomp(condescended-5, noticed-8)
det(place-10, this-9)
dobj(noticed-8, place-10)
aux(been-15, had-12)
nsubj(been-15, it-13)
dep(been-15, not-14)
parataxis(noticed-8, been-15)
mark(wish-18, that-16)
nsubj(wish-18, I-17)
ccomp(been-15, wish-18)
dobj(wish-18, you-19)
nsubj(observe-21, you-19)
aux(observe-21, to-20)
xcomp(wish-18, observe-21)
det(vessel-23, a-22)
dobj(observe-21, vessel-23)
nsubj(lying-26, vessel-23)
aux(lying-26, is-25)
rcmod(vessel-23, lying-26)
det(pier-wharf-29, the-28)
prep_along(lying-26, pier-wharf-29)
det(plank-33, a-32)
prep_with(noticed-8, plank-33)
det(shore-36, the-35)
prep_from(plank-33, shore-36)
poss(gunwale-39, her-38)
prep_to(shore-36, gunwale-39)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP (JJ low) (NN water))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP she))
        (VP (VBZ is)
          (VP (VBN aground))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN plank))
        (VP (VBD dips)
          (PRT (RP down))
          (PP (IN at)
            (NP (PDT such) (DT an) (NN angle)))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (NP
                  (NP (DT a) (NN work))
                  (PP (IN of)
                    (NP (NN danger)))
                  (S
                    (VP (TO to)
                      (VP (VB go)
                        (ADVP (RB either))
                        (PP (IN in)
                          (CC or)
                          (IN out)
                          (PP (IN of)
                            (NP (PRP her))))))))))))))
    (. .)))

nsubj(water-4, It-1)
cop(water-4, is-2)
amod(water-4, low-3)
root(ROOT-0, water-4)
nsubjpass(aground-9, she-7)
auxpass(aground-9, is-8)
conj_and(water-4, aground-9)
det(plank-13, the-12)
nsubj(dips-14, plank-13)
conj_and(water-4, dips-14)
conj_and(aground-9, dips-14)
prt(dips-14, down-15)
predet(angle-19, such-17)
det(angle-19, an-18)
prep_at(dips-14, angle-19)
mark(work-24, that-20)
nsubj(work-24, it-21)
cop(work-24, is-22)
det(work-24, a-23)
ccomp(dips-14, work-24)
prep_of(work-24, danger-26)
aux(go-28, to-27)
vmod(work-24, go-28)
advmod(go-28, either-29)
prep(go-28, in-30)
prep(go-28, out-32)
conj_or(in-30, out-32)
pcomp(in-30, of-33)
pobj(of-33, her-34)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP observe)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (ADVP (NN nothing))
            (ADJP (RB very) (JJ remarkable)
              (PP (IN in)
                (NP (PRP her))))))))
    (. .)))

nsubj(observe-2, You-1)
root(ROOT-0, observe-2)
mark(is-5, that-3)
expl(is-5, there-4)
ccomp(observe-2, is-5)
advmod(is-5, nothing-6)
advmod(remarkable-8, very-7)
acomp(is-5, remarkable-8)
prep_in(remarkable-8, her-10)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN cutter))
          (, ,)
          (CC and)
          (NP (DT a) (JJ good) (NN sea-boat)))
        (, ,)
        (CC and)
        (NP
          (NP (NNS sails))
          (PP (RB well) (IN before)
            (NP (DT the) (NN wind))))))
    (. .)))

nsubj(cutter-4, She-1)
cop(cutter-4, is-2)
det(cutter-4, a-3)
root(ROOT-0, cutter-4)
det(sea-boat-9, a-7)
amod(sea-boat-9, good-8)
conj_and(cutter-4, sea-boat-9)
conj_and(cutter-4, sails-12)
advmod(sails-12, well-13)
det(wind-16, the-15)
prep_before(sails-12, wind-16)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBZ is)
        (ADJP (JJ short)
          (PP (IN for)
            (NP
              (NP (PRP$ her) (NN breadth))
              (PP (IN of)
                (NP (NN beam)))))))
      (, ,)
      (CC and)
      (VP (VBZ is) (RB not)
        (ADJP (JJ armed))))
    (. .)))

nsubj(short-3, She-1)
nsubj(armed-13, She-1)
cop(short-3, is-2)
root(ROOT-0, short-3)
poss(breadth-6, her-5)
prep_for(short-3, breadth-6)
prep_of(breadth-6, beam-8)
cop(armed-13, is-11)
neg(armed-13, not-12)
conj_and(short-3, armed-13)

(ROOT
  (S
    (S
      (NP (NNS Smugglers))
      (VP (VBP do) (RB not)
        (VP (VB arm)
          (ADVP (RB now)))))
    (: --)
    (S
      (NP (DT the) (NN service))
      (VP (VBZ is)
        (ADJP (RB too) (JJ dangerous))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VB effect)
        (NP (PRP$ their) (NN purpose))
        (PP
          (PP (IN by)
            (NP (NNP cunning)))
          (, ,) (RB not)
          (PP (IN by)
            (NP (NN force))))))
    (. .)))

nsubj(arm-4, Smugglers-1)
aux(arm-4, do-2)
neg(arm-4, not-3)
root(ROOT-0, arm-4)
advmod(arm-4, now-5)
det(service-8, the-7)
nsubj(dangerous-11, service-8)
cop(dangerous-11, is-9)
advmod(dangerous-11, too-10)
parataxis(arm-4, dangerous-11)
nsubj(effect-14, they-13)
parataxis(arm-4, effect-14)
poss(purpose-16, their-15)
dobj(effect-14, purpose-16)
prep_by(effect-14, cunning-18)
neg(effect-14, not-20)
prep_by(effect-14, force-22)

(ROOT
  (S
    (ADVP (RB Nevertheless))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBZ requires)
        (SBAR (IN that)
          (S
            (NP (NNS smugglers))
            (VP (MD should)
              (VP (VB be)
                (NP
                  (NP (JJ good) (NN seamen))
                  (, ,)
                  (NP (JJ smart) (JJ active) (NNS fellows))
                  (, ,)
                  (CC and)
                  (NP (JJ keen-witted)))))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP they))
      (VP (MD can)
        (VP (VB do)
          (NP (NN nothing)))))
    (. .)))

advmod(requires-4, Nevertheless-1)
nsubj(requires-4, it-3)
root(ROOT-0, requires-4)
mark(seamen-10, that-5)
nsubj(seamen-10, smugglers-6)
nsubj(keen-witted-17, smugglers-6)
aux(seamen-10, should-7)
cop(seamen-10, be-8)
amod(seamen-10, good-9)
ccomp(requires-4, seamen-10)
amod(fellows-14, smart-12)
amod(fellows-14, active-13)
ccomp(requires-4, fellows-14)
conj_and(seamen-10, fellows-14)
ccomp(requires-4, keen-witted-17)
conj_and(seamen-10, keen-witted-17)
nsubj(do-22, they-20)
aux(do-22, can-21)
conj_or(requires-4, do-22)
dobj(do-22, nothing-23)

(ROOT
  (S
    (S
      (NP (DT This) (NN vessel))
      (VP (VBZ has)
        (NP
          (NP (RB not) (DT a) (JJ large) (NN cargo))
          (PP (IN in)
            (NP (PRP her))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ valuable))))
    (. .)))

det(vessel-2, This-1)
nsubj(has-3, vessel-2)
root(ROOT-0, has-3)
neg(cargo-7, not-4)
det(cargo-7, a-5)
amod(cargo-7, large-6)
dobj(has-3, cargo-7)
prep_in(cargo-7, her-9)
nsubj(valuable-14, it-12)
cop(valuable-14, is-13)
conj_but(has-3, valuable-14)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ has)
      (NP
        (NP
          (NP (DT some))
          (PP
            (NP (CD thousand) (NNS yards))
            (IN of)
            (NP
              (NP
                (NP (NN lace))
                (, ,)
                (NP
                  (NP (DT a) (JJ few) (CD hundred) (NNS pounds))
                  (PP (IN of)
                    (NP (NN tea)))))
              (, ,)
              (NP
                (NP (DT a) (JJ few) (NNS bales))
                (PP (IN of)
                  (NP (NN silk))))
              (, ,)
              (CC and)
              (NP
                (NP (RB about) (JJ forty) (NNS ankers))
                (PP (IN of)
                  (NP (NN brandy)))))))
        (: --)
        (ADVP (RB just) (RB as) (RB much)
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (MD can)
                (VP (VB land)
                  (PP (IN in)
                    (NP (CD one) (NN boat))))))))))
    (. .)))

nsubj(has-2, She-1)
root(ROOT-0, has-2)
dobj(has-2, some-3)
num(yards-5, thousand-4)
npadvmod(some-3, yards-5)
prep_of(some-3, lace-7)
det(pounds-12, a-9)
amod(pounds-12, few-10)
num(pounds-12, hundred-11)
appos(lace-7, pounds-12)
prep_of(pounds-12, tea-14)
det(bales-18, a-16)
amod(bales-18, few-17)
prep_of(some-3, bales-18)
conj_and(lace-7, bales-18)
prep_of(bales-18, silk-20)
advmod(ankers-25, about-23)
amod(ankers-25, forty-24)
prep_of(some-3, ankers-25)
conj_and(lace-7, ankers-25)
prep_of(ankers-25, brandy-27)
advmod(much-31, just-29)
advmod(much-31, as-30)
advmod(some-3, much-31)
mark(land-35, as-32)
nsubj(land-35, they-33)
aux(land-35, can-34)
ccomp(much-31, land-35)
num(boat-38, one-37)
prep_in(land-35, boat-38)

(ROOT
  (S
    (S
      (NP
        (NP (DT All))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP ask)))))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ heavy) (NN gale))
          (CC or)
          (NP (DT a) (JJ thick) (NN fog)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP trust)
        (PP (TO to)
          (NP (PRP themselves)))
        (PP (IN for)
          (NP (NN success)))))
    (. .)))

nsubj(gale-7, All-1)
nsubj(ask-3, they-2)
rcmod(All-1, ask-3)
cop(gale-7, is-4)
det(gale-7, a-5)
amod(gale-7, heavy-6)
root(ROOT-0, gale-7)
det(fog-11, a-9)
amod(fog-11, thick-10)
conj_or(gale-7, fog-11)
nsubj(trust-15, they-14)
conj_and(gale-7, trust-15)
prep_to(trust-15, themselves-17)
prep_for(trust-15, success-19)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP (NN nobody))
          (PP (IN on)
            (NP
              (NP (NN board))
              (PP (IN except)
                (NP (DT a) (NN boy))))))))
    (: ;)
    (S
      (S
        (NP (DT the) (NN crew))
        (VP (VBP are)
          (ADVP (DT all) (RB up))
          (PP (IN at)
            (NP (DT the) (NN cabaret)))
          (, ,)
          (VP (VBG settling)
            (NP (PRP$ their) (JJ little) (NNS accounts))
            (PP (IN of)
              (NP (DT every) (NN description)))
            (: --)
            (SBAR (IN for)
              (S
                (NP (PRP they))
                (VP (VB smuggle)
                  (NP (DT both) (NNS ways))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT every) (NN man))
        (VP (VBZ has)
          (NP (PRP$ his) (JJ own) (JJ private) (NN venture)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nsubj(is-2, nobody-3)
prep_on(nobody-3, board-5)
det(boy-8, a-7)
prep_except(board-5, boy-8)
det(crew-11, the-10)
nsubj(settling-19, crew-11)
aux(settling-19, are-12)
dep(up-14, all-13)
advmod(settling-19, up-14)
det(cabaret-17, the-16)
prep_at(settling-19, cabaret-17)
parataxis(is-2, settling-19)
poss(accounts-22, their-20)
amod(accounts-22, little-21)
dobj(settling-19, accounts-22)
det(description-25, every-24)
prep_of(settling-19, description-25)
mark(smuggle-29, for-27)
nsubj(smuggle-29, they-28)
advcl(settling-19, smuggle-29)
parataxis(settling-19, smuggle-29)
det(ways-31, both-30)
dobj(smuggle-29, ways-31)
det(man-35, every-34)
nsubj(has-36, man-35)
parataxis(is-2, has-36)
conj_and(settling-19, has-36)
poss(venture-40, his-37)
amod(venture-40, own-38)
amod(venture-40, private-39)
dobj(has-36, venture-40)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP they))
    (VP (VBP are)
      (NP
        (NP (DT all))
        (, ,)
        (NP
          (NP (CD fifteen))
          (PP (IN of)
            (NP (PRP them))))
        (, ,)
        (CC and)
        (NP
          (NP (JJ fine-looking) (NNS fellows))
          (, ,) (RB too) (, ,)
          (VP (VBG sitting)
            (PP (IN at)
              (NP (DT that) (JJ long) (NN table)))))))
    (. .)))

advmod(all-4, There-1)
nsubj(all-4, they-2)
cop(all-4, are-3)
root(ROOT-0, all-4)
conj_and(all-4, fifteen-6)
prep_of(fifteen-6, them-8)
amod(fellows-12, fine-looking-11)
conj_and(all-4, fellows-12)
advmod(fellows-12, too-14)
vmod(fellows-12, sitting-16)
det(table-20, that-18)
amod(table-20, long-19)
prep_at(sitting-16, table-20)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (ADJP
        (ADJP (RB very) (JJ merry))
        (, ,)
        (CC but)
        (ADJP (RB quite) (JJ sober)))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (PP (TO to)
              (NP (JJ sail) (NN to-night)))))))
    (. .)))

nsubj(merry-4, They-1)
nsubj(sober-8, They-1)
cop(merry-4, are-2)
advmod(merry-4, very-3)
root(ROOT-0, merry-4)
advmod(sober-8, quite-7)
conj_but(merry-4, sober-8)
mark(are-12, as-10)
nsubj(are-12, they-11)
advcl(merry-4, are-12)
amod(to-night-15, sail-14)
prep_to(are-12, to-night-15)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN captain))
        (PP (IN of)
          (NP (DT the) (NN vessel))))
      (PRN (-LRB- -LRB-)
        (SBAR
          (WHNP (WP$ whose) (NN name))
          (, ,)
          (NP (JJ by-the-bye))
          (, ,)
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _) (, ,))
                (: --)
                (NP
                  (NP (DT the) (NN captain))
                  (VP (VBN christened)
                    (S
                      (NP (PRP her))
                      (NP (PRP himself)))))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT that) (JJ fine-looking) (JJ young) (NN man))
      (, ,)
      (PP (IN with)
        (NP
          (NP (JJ dark) (NNS whiskers))
          (VP (VBG meeting)
            (PP (IN under)
              (NP (PRP$ his) (NN throat)))))))
    (. .)))

det(captain-2, The-1)
nsubj(man-29, captain-2)
det(vessel-5, the-4)
prep_of(captain-2, vessel-5)
poss(name-8, whose-7)
nsubj(_-16, name-8)
dep(_-16, by-the-bye-10)
cop(_-16, is-12)
det(_-16, the-13)
nn(_-16, _-14)
nn(_-16, Happy-go-lucky-15)
dep(captain-2, _-16)
det(captain-20, the-19)
dep(_-16, captain-20)
vmod(captain-20, christened-21)
nsubj(himself-23, her-22)
xcomp(christened-21, himself-23)
cop(man-29, is-25)
det(man-29, that-26)
amod(man-29, fine-looking-27)
amod(man-29, young-28)
root(ROOT-0, man-29)
amod(whiskers-33, dark-32)
prep_with(man-29, whiskers-33)
vmod(whiskers-33, meeting-34)
poss(throat-37, his-36)
prep_under(meeting-34, throat-37)

(ROOT
  (S
    (NP (PRP$ His) (NN name))
    (VP (VBZ is)
      (NP (NNP Jack) (NNP Pickersgill)))
    (. .)))

poss(name-2, His-1)
nsubj(Pickersgill-5, name-2)
cop(Pickersgill-5, is-3)
nn(Pickersgill-5, Jack-4)
root(ROOT-0, Pickersgill-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP perceive)
      (ADVP (IN at) (RB once))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBZ is)
            (ADJP (JJ much)
              (PP (IN above)
                (NP
                  (NP (DT a) (JJ common) (NN sailor))
                  (PP (IN in)
                    (NP (NN appearance))))))))))
    (. .)))

nsubj(perceive-2, You-1)
root(ROOT-0, perceive-2)
advmod(perceive-2, at-3)
advmod(at-3, once-4)
mark(much-8, that-5)
nsubj(much-8, he-6)
cop(much-8, is-7)
ccomp(perceive-2, much-8)
det(sailor-12, a-10)
amod(sailor-12, common-11)
prep_above(much-8, sailor-12)
prep_in(sailor-12, appearance-14)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NNS manners))
      (VP (VBP are)
        (ADJP (JJ good))))
    (, ,)
    (NP (PRP he))
    (VP (VBZ is)
      (ADJP
        (ADJP (RB remarkably) (JJ handsome))
        (, ,)
        (ADJP (RB very) (JJ clean))
        (, ,)
        (CC and)
        (ADVP (RB rather)
          (NP
            (QP (DT a) (CD dandy)))
          (PP (IN in)
            (NP (PRP$ his) (NN dress))))))
    (. .)))

poss(manners-2, His-1)
nsubj(good-4, manners-2)
cop(good-4, are-3)
ccomp(handsome-9, good-4)
nsubj(handsome-9, he-6)
nsubj(clean-12, he-6)
cop(handsome-9, is-7)
advmod(handsome-9, remarkably-8)
root(ROOT-0, handsome-9)
advmod(clean-12, very-11)
conj_and(handsome-9, clean-12)
advmod(handsome-9, rather-15)
conj_and(handsome-9, rather-15)
quantmod(dandy-17, a-16)
pobj(rather-15, dandy-17)
poss(dress-20, his-19)
prep_in(rather-15, dress-20)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Observe))
        (SBAR
          (WHADVP (WRB how)
            (ADJP (RB very) (JJ politely)))
          (S
            (NP (PRP he))
            (VP (VBZ takes)
              (PRT (RP off))
              (NP (PRP$ his) (NN hat))
              (PP (TO to)
                (NP
                  (NP (DT that) (NNP Frenchman))
                  (, ,)
                  (SBAR
                    (WHPP (IN with)
                      (WHNP (WP whom)))
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (ADVP (RB just))
                        (VP (VBN settled)))))))))))
      (VP (VBZ accounts)))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBZ beats)
        (NP
          (NP (NNP Johnny) (NNP Crapeau))
          (PP (IN at)
            (NP (PRP$ his) (JJ own) (NNS weapons))))))
    (. .)))

nsubj(accounts-20, Observe-1)
advmod(takes-6, how-2)
advmod(politely-4, very-3)
dep(how-2, politely-4)
nsubj(takes-6, he-5)
dep(Observe-1, takes-6)
prt(takes-6, off-7)
poss(hat-9, his-8)
dobj(takes-6, hat-9)
det(Frenchman-12, that-11)
prep_to(takes-6, Frenchman-12)
prep_with(settled-19, Frenchman-12)
nsubj(settled-19, he-16)
aux(settled-19, had-17)
advmod(settled-19, just-18)
rcmod(Frenchman-12, settled-19)
root(ROOT-0, accounts-20)
nsubj(beats-23, he-22)
parataxis(accounts-20, beats-23)
nn(Crapeau-25, Johnny-24)
dobj(beats-23, Crapeau-25)
poss(weapons-29, his-27)
amod(weapons-29, own-28)
prep_at(Crapeau-25, weapons-29)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB then))
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT an) (NN air))
          (PP (IN of)
            (NP (NN command))))))
    (, ,)
    (NP
      (NP (DT a) (NN feeling))
      (PP (IN of)
        (NP
          (NP (JJ conscious) (NN superiority))
          (, ,) (RB about)
          (NP (NNP Jack))
          (: ;))))
    (VP (VBP see)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP he))
          (VP (VBZ treats)
            (NP
              (NP (DT the) (NN landlord))
              (, ,)
              (NP
                (NP (NNP _) (FW de) (NNP haut) (FW en) (NNP bas))
                (NP (NNP _)))
              (, ,))
            (PP (IN at)
              (NP (DT the) (JJ same) (NN time)))
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (VBZ is)
                  (ADJP (RB very) (JJ civil)))))))))
    (. .)))

cc(is-4, And-1)
advmod(is-4, then-2)
expl(is-4, there-3)
ccomp(see-19, is-4)
det(air-6, an-5)
nsubj(is-4, air-6)
prep_of(air-6, command-8)
det(feeling-11, a-10)
nsubj(see-19, feeling-11)
amod(superiority-14, conscious-13)
prep_of(feeling-11, superiority-14)
advmod(superiority-14, about-16)
dep(superiority-14, Jack-17)
root(ROOT-0, see-19)
advmod(treats-22, how-20)
nsubj(treats-22, he-21)
ccomp(see-19, treats-22)
det(landlord-24, the-23)
dobj(treats-22, landlord-24)
nn(bas-30, _-26)
nn(bas-30, de-27)
nn(bas-30, haut-28)
nn(bas-30, en-29)
appos(landlord-24, bas-30)
appos(bas-30, _-31)
det(time-36, the-34)
amod(time-36, same-35)
prep_at(treats-22, time-36)
mark(civil-41, that-37)
nsubj(civil-41, he-38)
cop(civil-41, is-39)
advmod(civil-41, very-40)
ccomp(treats-22, civil-41)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN fact))
        (VP (VBZ is) (, ,)
          (SBAR (IN that)
            (S
              (NP (NNP Jack))
              (VP (VBZ is)
                (PP (IN of)
                  (NP (DT a)
                    (ADJP (RB very) (JJ good))
                    (, ,) (JJ old) (NN family))))))
          (, ,)
          (CC and)
          (VP (VBD received)
            (NP (DT a)
              (ADJP (RB very) (JJ excellent))
              (NN education)))))
      (: ;)
      (CC but)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (NP (DT an) (JJ orphan))))
      (, ,)
      (S
        (NP (PRP$ his) (NNS friends))
        (VP
          (VP (VBD were)
            (ADJP (JJ poor)))
          (, ,)
          (CC and)
          (VP (MD could)
            (VP (VB do)
              (NP
                (NP (IN but) (RB little))
                (PP (IN for)
                  (NP (PRP him)))))))))
    (: :)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD went)
          (PRT (RP out))
          (PP (TO to)
            (NP (NNP India)))
          (PP (IN as)
            (NP (DT a) (NN cadet))))
        (, ,)
        (VP (VBD ran)
          (PRT (RP away)))
        (, ,)
        (CC and)
        (VP (VBD served)
          (PP (IN in)
            (NP
              (NP (DT a) (NN schooner))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD smuggled)
                    (NP (NN opium))
                    (PP (IN into)
                      (NP (NNP China)))))))))
        (, ,)
        (CC and)
        (ADVP (RB then))
        (VP (VBD came)
          (NP (NN home)))))
    (. .)))

det(fact-2, The-1)
nsubjpass(is-3, fact-2)
nsubjpass(received-17, fact-2)
root(ROOT-0, is-3)
mark(is-7, that-5)
nsubj(is-7, Jack-6)
ccomp(is-3, is-7)
conj_and(is-3, is-7)
det(family-14, a-9)
advmod(good-11, very-10)
amod(family-14, good-11)
amod(family-14, old-13)
prep_of(is-7, family-14)
conj_and(is-3, received-17)
det(education-21, a-18)
advmod(excellent-20, very-19)
amod(education-21, excellent-20)
dobj(received-17, education-21)
nsubj(orphan-27, he-24)
cop(orphan-27, was-25)
det(orphan-27, an-26)
conj_but(is-3, orphan-27)
poss(friends-30, his-29)
nsubj(poor-32, friends-30)
nsubj(do-36, friends-30)
cop(poor-32, were-31)
conj_but(is-3, poor-32)
parataxis(is-3, poor-32)
aux(do-36, could-35)
conj_but(is-3, do-36)
parataxis(is-3, do-36)
conj_and(poor-32, do-36)
amod(little-38, but-37)
dobj(do-36, little-38)
prep_for(little-38, him-40)
nsubj(went-43, he-42)
nsubj(ran-51, he-42)
nsubj(served-55, he-42)
nsubj(came-67, he-42)
parataxis(is-3, went-43)
prt(went-43, out-44)
prep_to(went-43, India-46)
det(cadet-49, a-48)
prep_as(went-43, cadet-49)
parataxis(is-3, ran-51)
conj_and(went-43, ran-51)
prt(ran-51, away-52)
parataxis(is-3, served-55)
conj_and(went-43, served-55)
det(schooner-58, a-57)
prep_in(served-55, schooner-58)
nsubj(smuggled-60, schooner-58)
rcmod(schooner-58, smuggled-60)
dobj(smuggled-60, opium-61)
prep_into(smuggled-60, China-63)
advmod(came-67, then-66)
parataxis(is-3, came-67)
conj_and(went-43, came-67)
dobj(came-67, home-68)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD took)
          (NP (DT a) (NN liking))
          (PP (TO to)
            (NP (DT the) (NN employment))))
        (, ,)
        (CC and)
        (VP (VBZ is)
          (ADVP (RB now))
          (VP (VBG laying)
            (PRT (RP up))
            (NP (DT a)
              (ADJP (RB very) (RB pretty) (JJ little))
              (NN sum))))
        (: :)
        (SBAR (RB not) (IN that)
          (S
            (NP (PRP he))
            (VP (VBZ intends)
              (S
                (VP (TO to)
                  (VP (VB stop)))))))))
    (: :)
    (S
      (INTJ (UH no))
      (, ,)
      (S
        (ADVP (RB as) (RB soon)
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBZ has)
                (ADVP (RB enough))
                (S
                  (VP (TO to)
                    (VP (VB fit)
                      (PRT (RP out))
                      (NP
                        (NP (DT a) (NN vessel))
                        (PP (IN for)
                          (NP (PRP himself)))))))))))
        (, ,)
        (NP (PRP he))
        (VP (VBZ intends)
          (S
            (VP (TO to)
              (VP (VB start)
                (ADVP (RB again))
                (PP (IN for)
                  (NP (NNP India))))))))
      (, ,)
      (CC and)
      (S
        (PP (IN with)
          (NP
            (NP (CD two) (NNS cargoes))
            (PP (IN of)
              (NP (NN opium)))))
        (NP (PRP he))
        (VP (MD will)
          (VP
            (VP (VB return)
              (PRN (, ,)
                (S
                  (NP (PRP he))
                  (VP (VBZ trusts)))
                (, ,))
              (PP (IN with)
                (NP (DT a) (JJ handsome) (NN fortune))))
            (, ,)
            (CC and)
            (VP (VB re-assume)
              (NP (PRP$ his) (NN family) (NN name)))))))
    (. .)))

nsubj(took-2, He-1)
nsubj(laying-12, He-1)
root(ROOT-0, took-2)
det(liking-4, a-3)
dobj(took-2, liking-4)
det(employment-7, the-6)
prep_to(took-2, employment-7)
aux(laying-12, is-10)
advmod(laying-12, now-11)
conj_and(took-2, laying-12)
prt(laying-12, up-13)
det(sum-18, a-14)
advmod(little-17, very-15)
advmod(little-17, pretty-16)
amod(sum-18, little-17)
dobj(laying-12, sum-18)
dep(intends-23, not-20)
mark(intends-23, that-21)
nsubj(intends-23, he-22)
nsubj(stop-25, he-22)
conj_and(took-2, intends-23)
aux(stop-25, to-24)
xcomp(intends-23, stop-25)
discourse(intends-44, no-27)
advmod(soon-30, as-29)
advmod(intends-44, soon-30)
mark(has-33, as-31)
nsubj(has-33, he-32)
nsubj(fit-36, he-32)
ccomp(soon-30, has-33)
advmod(has-33, enough-34)
aux(fit-36, to-35)
xcomp(has-33, fit-36)
prt(fit-36, out-37)
det(vessel-39, a-38)
dobj(fit-36, vessel-39)
prep_for(vessel-39, himself-41)
nsubj(intends-44, he-43)
nsubj(start-46, he-43)
parataxis(took-2, intends-44)
aux(start-46, to-45)
xcomp(intends-44, start-46)
advmod(start-46, again-47)
prep_for(start-46, India-49)
num(cargoes-54, two-53)
prep_with(return-59, cargoes-54)
prep_of(cargoes-54, opium-56)
nsubj(return-59, he-57)
nsubj(re-assume-70, he-57)
aux(return-59, will-58)
parataxis(took-2, return-59)
conj_and(intends-44, return-59)
nsubj(trusts-62, he-61)
parataxis(return-59, trusts-62)
det(fortune-67, a-65)
amod(fortune-67, handsome-66)
prep_with(return-59, fortune-67)
conj_and(intends-44, re-assume-70)
conj_and(return-59, re-assume-70)
poss(name-73, his-71)
nn(name-73, family-72)
dobj(re-assume-70, name-73)

(ROOT
  (S
    (S
      (NP (JJ Such))
      (VP (VBP are)
        (NP
          (NP (NNP Jack) (POS 's))
          (NNS intentions))))
    (: ;)
    (CC and)
    (, ,)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (ADVP (RB eventually))
          (VP (VBZ means)
            (S
              (VP (TO to)
                (VP (VB reappear)
                  (PP (IN as)
                    (NP (DT a) (NN gentleman)))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ preserves)
        (NP (PRP$ his) (JJ gentlemanly) (NNS habits))))
    (: :)
    (S
      (NP (PRP he))
      (ADVP (RB neither))
      (VP
        (VP (VBZ drinks))
        (, ,)
        (CC nor)
        (VP (VBZ chews))
        (, ,)
        (CC nor)
        (VP (VBZ smokes))))
    (. .)))

nsubj(intentions-5, Such-1)
cop(intentions-5, are-2)
poss(intentions-5, Jack-3)
root(ROOT-0, intentions-5)
mark(means-12, as-9)
nsubj(means-12, he-10)
nsubj(reappear-14, he-10)
advmod(means-12, eventually-11)
advcl(preserves-20, means-12)
aux(reappear-14, to-13)
xcomp(means-12, reappear-14)
det(gentleman-17, a-16)
prep_as(reappear-14, gentleman-17)
nsubj(preserves-20, he-19)
conj_and(intentions-5, preserves-20)
poss(habits-23, his-21)
amod(habits-23, gentlemanly-22)
dobj(preserves-20, habits-23)
nsubj(drinks-27, he-25)
nsubj(chews-30, he-25)
nsubj(smokes-33, he-25)
advmod(drinks-27, neither-26)
conj_and(intentions-5, drinks-27)
parataxis(intentions-5, drinks-27)
conj_and(intentions-5, chews-30)
parataxis(intentions-5, chews-30)
conj_nor(drinks-27, chews-30)
conj_and(intentions-5, smokes-33)
parataxis(intentions-5, smokes-33)
conj_nor(drinks-27, smokes-33)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBZ keeps)
          (NP (PRP$ his) (NNS hands))
          (ADJP (JJ clean)))
        (, ,)
        (VP (VBZ wears)
          (NP (NNS rings)))
        (, ,)
        (CC and)
        (VP (VBZ sports)
          (NP (DT a) (JJ gold) (NN snuff-box)))))
    (: ;)
    (S
      (S
        (PP (IN notwithstanding)
          (NP (WDT which)))
        (, ,)
        (NP (NNP Jack))
        (VP (VBZ is)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP
                (NP (DT the) (JJS boldest)
                  (CC and)
                  (JJS best))
                (PP (IN of)
                  (NP (NNS sailors))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NNS men))
        (VP (VBP know)
          (NP (PRP it)))))
    (. .)))

nsubj(keeps-2, He-1)
nsubj(wears-7, He-1)
nsubj(sports-11, He-1)
root(ROOT-0, keeps-2)
poss(hands-4, his-3)
dobj(keeps-2, hands-4)
acomp(keeps-2, clean-5)
conj_and(keeps-2, wears-7)
dobj(wears-7, rings-8)
conj_and(keeps-2, sports-11)
det(snuff-box-14, a-12)
amod(snuff-box-14, gold-13)
dobj(sports-11, snuff-box-14)
prep_notwithstanding(one-21, which-17)
nsubj(one-21, Jack-19)
cop(one-21, is-20)
parataxis(keeps-2, one-21)
dep(boldest-24, the-23)
prep_of(one-21, boldest-24)
prep_of(one-21, best-26)
conj_and(boldest-24, best-26)
prep_of(boldest-24, sailors-28)
det(men-32, the-31)
nsubj(know-33, men-32)
parataxis(keeps-2, know-33)
conj_and(one-21, know-33)
dobj(know-33, it-34)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ is)
      (ADJP
        (ADJP (JJ full)
          (PP (IN of)
            (NP (NN fun))))
        (, ,)
        (CC and)
        (ADJP (RB as) (JJ keen)))
      (PP (IN as)
        (NP (DT a) (NN razor))))
    (. .)))

nsubj(full-3, He-1)
nsubj(keen-9, He-1)
cop(full-3, is-2)
root(ROOT-0, full-3)
prep_of(full-3, fun-5)
advmod(keen-9, as-8)
conj_and(full-3, keen-9)
det(razor-12, a-11)
prep_as(full-3, razor-12)

(ROOT
  (S
    (S
      (NP (NNP Jack))
      (VP (VBZ has)
        (NP
          (NP (DT a)
            (ADJP (RB very) (JJ heavy))
            (NN venture))
          (NP (DT this) (NN time)))))
    (: --)
    (S
      (S
        (NP (PDT all) (DT the) (NN lace))
        (VP (VBZ is)
          (NP (PRP$ his) (JJ own) (NN speculation))))
      (, ,)
      (CC and)
      (S
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (VBZ gets)
              (NP (PRP it))
              (PP (IN in)
                (ADJP (JJ safe))))))
        (, ,)
        (NP (PRP he))
        (VP (MD will)
          (VP (VB clear)
            (NP
              (NP (DT some) (NNS thousands))
              (PP (IN of)
                (NP (NNS pounds))))))))
    (. .)))

nsubj(has-2, Jack-1)
root(ROOT-0, has-2)
det(venture-6, a-3)
advmod(heavy-5, very-4)
amod(venture-6, heavy-5)
dobj(has-2, venture-6)
iobj(has-2, venture-6)
det(time-8, this-7)
dep(venture-6, time-8)
predet(lace-12, all-10)
det(lace-12, the-11)
nsubj(speculation-16, lace-12)
cop(speculation-16, is-13)
poss(speculation-16, his-14)
amod(speculation-16, own-15)
parataxis(has-2, speculation-16)
mark(gets-21, if-19)
nsubj(gets-21, he-20)
advcl(clear-28, gets-21)
dobj(gets-21, it-22)
prep_in(gets-21, safe-24)
nsubj(clear-28, he-26)
aux(clear-28, will-27)
parataxis(has-2, clear-28)
conj_and(speculation-16, clear-28)
det(thousands-30, some-29)
dobj(clear-28, thousands-30)
prep_of(thousands-30, pounds-32)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ certain) (JJ fashionable) (NN shop))
      (PP (IN in)
        (NP (NNP London))))
    (VP (VBZ has)
      (ADVP (RB already))
      (VP (VBN agreed)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (DT the) (NN whole))
              (PP (IN off)
                (NP (PRP$ his) (NNS hands))))))))
    (. .)))

det(shop-4, A-1)
amod(shop-4, certain-2)
amod(shop-4, fashionable-3)
nsubj(agreed-9, shop-4)
nsubj(take-11, shop-4)
prep_in(shop-4, London-6)
aux(agreed-9, has-7)
advmod(agreed-9, already-8)
root(ROOT-0, agreed-9)
aux(take-11, to-10)
xcomp(agreed-9, take-11)
det(whole-13, the-12)
dobj(take-11, whole-13)
poss(hands-16, his-15)
prep_off(take-11, hands-16)

(ROOT
  (S
    (NP (DT That) (JJ short) (, ,) (JJ neatly-made) (JJ young) (NN man))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (NN second))
          (PP (IN in)
            (NP (NN command))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (NN companion))
          (PP (IN of)
            (NP (DT the) (NN captain))))))
    (. .)))

det(man-6, That-1)
amod(man-6, short-2)
amod(man-6, neatly-made-4)
amod(man-6, young-5)
nsubj(second-9, man-6)
cop(second-9, is-7)
det(second-9, the-8)
root(ROOT-0, second-9)
prep_in(second-9, command-11)
det(companion-15, the-14)
conj_and(second-9, companion-15)
det(captain-18, the-17)
prep_of(companion-15, captain-18)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBZ is)
        (ADJP (JJ clever)))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB always))
        (VBZ has)
        (NP (DT a) (NN remedy)
          (S
            (VP (TO to)
              (VP (VB propose)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (EX there))
                    (VP (VBZ is)
                      (NP
                        (NP (DT a) (NN difficulty))
                        (, ,)
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ is)
                              (NP
                                (NP (DT a) (JJ great) (NN quality))
                                (PP (IN in)
                                  (NP
                                    (NP (DT a) (NN second))
                                    (PP (IN in)
                                      (NP (NN command)))))))))))))))))))
    (. .)))

nsubj(clever-3, He-1)
nsubj(has-7, He-1)
cop(clever-3, is-2)
root(ROOT-0, clever-3)
advmod(has-7, always-6)
conj_and(clever-3, has-7)
det(remedy-9, a-8)
dobj(has-7, remedy-9)
aux(propose-11, to-10)
vmod(remedy-9, propose-11)
advmod(is-14, when-12)
expl(is-14, there-13)
advcl(propose-11, is-14)
det(difficulty-16, a-15)
nsubj(is-14, difficulty-16)
nsubj(quality-22, difficulty-16)
cop(quality-22, is-19)
det(quality-22, a-20)
amod(quality-22, great-21)
rcmod(difficulty-16, quality-22)
det(second-25, a-24)
prep_in(quality-22, second-25)
prep_in(second-25, command-27)

(ROOT
  (S
    (NP (PRP$ His) (NN name))
    (VP (VBZ is)
      (NP (NNP Corbett)))
    (. .)))

poss(name-2, His-1)
nsubj(Corbett-4, name-2)
cop(Corbett-4, is-3)
root(ROOT-0, Corbett-4)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (ADVP (RB always))
        (ADJP (JJ merry))))
    (: --)
    (S
      (NP
        (NP (NN half-sailor))
        (, ,)
        (NP (NN half-tradesman))
        (, ;))
      (VP
        (VP (VBZ knows)
          (NP (DT the) (NNS markets)))
        (, ,)
        (VP (VBZ runs)
          (PRT (RP up))
          (PP (TO to)
            (NP (NNP London))))
        (, ,)
        (CC and)
        (VP (VBZ does)
          (NP
            (NP (NN business))
            (CONJP (RB as) (RB well) (IN as))
            (NP (DT a) (NN chapman))))
        (: --)
        (VP (VBZ lives)
          (PP (IN for)
            (NP (DT the) (NN day))))
        (CC and)
        (VP (VBZ laughs)
          (PP (IN at)
            (NP (NN to-morrow))))))
    (. .)))

nsubj(merry-4, He-1)
cop(merry-4, is-2)
advmod(merry-4, always-3)
root(ROOT-0, merry-4)
nsubj(knows-10, half-sailor-6)
nsubj(runs-14, half-sailor-6)
nsubj(does-20, half-sailor-6)
nsubj(lives-28, half-sailor-6)
nsubj(laughs-33, half-sailor-6)
appos(half-sailor-6, half-tradesman-8)
parataxis(merry-4, knows-10)
det(markets-12, the-11)
dobj(knows-10, markets-12)
parataxis(merry-4, runs-14)
conj_and(knows-10, runs-14)
prt(runs-14, up-15)
prep_to(runs-14, London-17)
parataxis(merry-4, does-20)
conj_and(knows-10, does-20)
dobj(does-20, business-21)
det(chapman-26, a-25)
dobj(does-20, chapman-26)
conj_and(business-21, chapman-26)
parataxis(merry-4, lives-28)
conj_and(knows-10, lives-28)
det(day-31, the-30)
prep_for(lives-28, day-31)
parataxis(merry-4, laughs-33)
conj_and(knows-10, laughs-33)
prep_at(laughs-33, to-morrow-35)

(ROOT
  (S
    (NP
      (NP
        (NP (DT That) (JJ little)
          (ADJP (RB punchy) (JJ old))
          (NN man))
        (, ,)
        (PP (IN with)
          (NP
            (NP (JJ long) (JJ grey) (NN hair))
            (CC and)
            (NP (JJ fat) (NN face)))))
      (, ,)
      (PP (IN with)
        (NP
          (NP (DT a) (NN nose))
          (PP (IN like)
            (NP
              (NP (DT a) (NN note))
              (PP (IN of)
                (NP (NN interrogation)))))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ next) (NN personage))
        (PP (IN of)
          (NP (NN importance)))))
    (. .)))

det(man-5, That-1)
amod(man-5, little-2)
advmod(old-4, punchy-3)
amod(man-5, old-4)
nsubj(personage-27, man-5)
amod(hair-10, long-8)
amod(hair-10, grey-9)
prep_with(man-5, hair-10)
amod(face-13, fat-12)
prep_with(man-5, face-13)
conj_and(hair-10, face-13)
det(nose-17, a-16)
prep_with(man-5, nose-17)
det(note-20, a-19)
prep_like(nose-17, note-20)
prep_of(note-20, interrogation-22)
cop(personage-27, is-24)
det(personage-27, the-25)
amod(personage-27, next-26)
root(ROOT-0, personage-27)
prep_of(personage-27, importance-29)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN called)
              (NP (DT the) (NN sailing-master))
              (, ,)
              (PP (IN for))
              (, ,)
              (SBAR (IN although)
                (S
                  (NP (PRP he))
                  (VP (VBZ goes)
                    (PP (IN on)
                      (S
                        (VP (NN shore)
                          (PP (IN in)
                            (NP (NNP France))))))
                    (, ,)
                    (PP (IN off)
                      (NP
                        (NP (DT the) (JJ English) (NN coast))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (ADVP (RB never))
                            (VP (VBZ quits)
                              (NP (DT the) (NN vessel)))))))))))))))
    (. .)))

nsubj(ought-2, He-1)
nsubjpass(called-5, He-1)
root(ROOT-0, ought-2)
aux(called-5, to-3)
auxpass(called-5, be-4)
xcomp(ought-2, called-5)
det(sailing-master-7, the-6)
dobj(called-5, sailing-master-7)
prep(called-5, for-9)
mark(goes-13, although-11)
nsubj(goes-13, he-12)
advcl(called-5, goes-13)
prepc_on(goes-13, shore-15)
prep_in(shore-15, France-17)
det(coast-22, the-20)
amod(coast-22, English-21)
prep_off(goes-13, coast-22)
nsubj(quits-25, he-23)
neg(quits-25, never-24)
rcmod(coast-22, quits-25)
det(vessel-27, the-26)
dobj(quits-25, vessel-27)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP they))
          (VP (VBP leave)
            (NP (PRP her))
            (PP (IN with)
              (NP (DT the) (NNS goods))))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ remains)
        (PP (IN on)
          (NP (NN board)))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBZ is)
        (ADVP (RB always))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN found)
                (PRT (RP off))
                (NP
                  (NP (DT any) (NN part))
                  (PP (IN of)
                    (NP (DT the) (NN coast))))))))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP he))
            (VP (MD may)
              (VP (VB be)
                (VP (VBN ordered))))))))
    (: ;)
    (S
      (S
        (VP (VBG holding)
          (NP (PRP$ his) (NN position))
          (PP (IN in)
            (NP
              (NP (NN defiance))
              (PP (IN of)
                (NP
                  (NP (NNS gales))
                  (, ,)
                  (CC and)
                  (NP (NNS tides))
                  (, ,)
                  (CC and)
                  (NP (NNS fogs))
                  (: ;)))))
          (PP (IN as)
            (PP (IN for)
              (NP (DT the) (NNS revenue-vessels))))))
      (, ,)
      (NP (PRP they))
      (ADVP (DT all))
      (VP (VBP know)
        (NP (PRP him))
        (ADVP (RB well) (RB enough))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (MD can) (RB not)
        (VP (VB touch)
          (NP (DT a) (NN vessel))
          (PP (IN in)
            (NP (NN ballast)))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP she))
              (VP (VBZ has)
                (ADVP
                  (NP
                    (NP (DT no) (JJR more) (NNS men))
                    (PP (IN on)
                      (NP (NN board))))
                  (IN than))
                (VP (VBN allowed)
                  (PP (IN by)
                    (NP (PRP$ her) (NN tonnage))))))))))
    (. .)))

advmod(leave-3, When-1)
nsubj(leave-3, they-2)
advcl(remains-10, leave-3)
dobj(leave-3, her-4)
det(goods-7, the-6)
prep_with(leave-3, goods-7)
nsubj(remains-10, he-9)
root(ROOT-0, remains-10)
prep_on(remains-10, board-12)
nsubj(is-15, he-14)
nsubjpass(found-19, he-14)
conj_but(remains-10, is-15)
advmod(is-15, always-16)
aux(found-19, to-17)
auxpass(found-19, be-18)
xcomp(is-15, found-19)
prt(found-19, off-20)
det(part-22, any-21)
dobj(found-19, part-22)
det(coast-25, the-24)
prep_of(part-22, coast-25)
advmod(ordered-30, where-26)
nsubjpass(ordered-30, he-27)
aux(ordered-30, may-28)
auxpass(ordered-30, be-29)
advcl(is-15, ordered-30)
vmod(know-53, holding-32)
poss(position-34, his-33)
dobj(holding-32, position-34)
prep_in(holding-32, defiance-36)
prep_of(defiance-36, gales-38)
prep_of(defiance-36, tides-41)
conj_and(gales-38, tides-41)
prep_of(defiance-36, fogs-44)
conj_and(gales-38, fogs-44)
prepc_as_for(holding-32, for-47)
det(revenue-vessels-49, the-48)
pobj(holding-32, revenue-vessels-49)
nsubj(know-53, they-51)
advmod(know-53, all-52)
conj_but(remains-10, know-53)
dobj(know-53, him-54)
advmod(enough-56, well-55)
advmod(know-53, enough-56)
nsubj(touch-62, they-59)
aux(touch-62, can-60)
neg(touch-62, not-61)
conj_but(remains-10, touch-62)
det(vessel-64, a-63)
dobj(touch-62, vessel-64)
prep_in(touch-62, ballast-66)
mark(allowed-77, if-68)
nsubj(allowed-77, she-69)
aux(allowed-77, has-70)
neg(men-73, no-71)
amod(men-73, more-72)
npadvmod(than-76, men-73)
prep_on(men-73, board-75)
advmod(allowed-77, than-76)
advcl(touch-62, allowed-77)
poss(tonnage-80, her-79)
prep_by(allowed-77, tonnage-80)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ knows)
      (NP
        (NP (DT every) (NN creek) (, ,)
          (CC and)
          (NN hole))
        (, ,)
        (CC and)
        (NP
          (NP (NN corner))
          (PP (IN of)
            (NP (DT the) (NN coast))))
        (: ;))
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (DT the) (NN tide))
          (VP (VBZ runs)
            (PRT (RP in))
            (: --)
            (NP
              (NP (NN tide))
              (, ,)
              (NP (NN half-tide))
              (, ,)
              (NP (NN eddy))
              (, ,)
              (CC or)
              (NP (JJ current)))))))
    (. .)))

nsubj(knows-2, He-1)
root(ROOT-0, knows-2)
det(creek-4, every-3)
dobj(knows-2, creek-4)
dobj(knows-2, hole-7)
conj_and(creek-4, hole-7)
dobj(knows-2, corner-10)
conj_and(creek-4, corner-10)
det(coast-13, the-12)
prep_of(corner-10, coast-13)
advmod(runs-18, how-15)
det(tide-17, the-16)
nsubj(runs-18, tide-17)
dep(knows-2, runs-18)
prt(runs-18, in-19)
dobj(runs-18, tide-21)
parataxis(runs-18, tide-21)
dobj(runs-18, half-tide-23)
parataxis(runs-18, half-tide-23)
conj_or(tide-21, half-tide-23)
dobj(runs-18, eddy-25)
parataxis(runs-18, eddy-25)
conj_or(tide-21, eddy-25)
dobj(runs-18, current-28)
parataxis(runs-18, current-28)
conj_or(tide-21, current-28)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP (PRP$ his) (NN value)))
    (. .)))

nsubj(value-4, That-1)
cop(value-4, is-2)
poss(value-4, his-3)
root(ROOT-0, value-4)

(ROOT
  (S
    (NP (PRP$ His) (NN name))
    (VP (VBZ is)
      (NP (NNP Morrison)))
    (. .)))

poss(name-2, His-1)
nsubj(Morrison-4, name-2)
cop(Morrison-4, is-3)
root(ROOT-0, Morrison-4)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP observe)
        (SBAR (IN that)
          (S
            (NP (NNP Jack) (NNP Pickersgill))
            (VP (VBZ has)
              (NP
                (NP (CD two) (JJ excellent) (NNS supporters))
                (PP (IN in)
                  (NP (NNP Corbett)
                    (CC and)
                    (NNP Morrison)))))))))
    (: ;)
    (S
      (NP (PRP$ his) (JJ other) (NNS men))
      (VP (VBP are)
        (NP
          (NP (JJ good) (NN seamen))
          (, ,)
          (ADJP (JJ active) (, ,)
            (CC and)
            (JJ obedient))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is) (RB all)
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBZ requires))))))))))
    (. .)))

nsubj(observe-2, You-1)
root(ROOT-0, observe-2)
mark(has-6, that-3)
nn(Pickersgill-5, Jack-4)
nsubj(has-6, Pickersgill-5)
ccomp(observe-2, has-6)
num(supporters-9, two-7)
amod(supporters-9, excellent-8)
dobj(has-6, supporters-9)
prep_in(supporters-9, Corbett-11)
prep_in(supporters-9, Morrison-13)
conj_and(Corbett-11, Morrison-13)
poss(men-17, his-15)
amod(men-17, other-16)
nsubj(seamen-20, men-17)
cop(seamen-20, are-18)
amod(seamen-20, good-19)
parataxis(observe-2, seamen-20)
nsubj(is-28, seamen-20)
amod(seamen-20, active-22)
amod(seamen-20, obedient-25)
conj_and(active-22, obedient-25)
rcmod(seamen-20, is-28)
advmod(is-28, all-29)
mark(requires-32, that-30)
nsubj(requires-32, he-31)
ccomp(is-28, requires-32)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall) (RB not)
      (ADVP (RB particularly))
      (VP (VB introduce)
        (NP (PRP them))))
    (. .)))

nsubj(introduce-5, I-1)
aux(introduce-5, shall-2)
neg(introduce-5, not-3)
advmod(introduce-5, particularly-4)
root(ROOT-0, introduce-5)
dobj(introduce-5, them-6)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Now))
      (NP (PRP you))
      (VP (MD may)
        (VP (VB call)
          (PP (IN for)
            (NP
              (NP (DT another) (JJ _) (NN litre) (NN _))
              (, ,)
              (NP (PRP$ my) (NNS lads))
              (, ,)
              (CC and)
              (NP (DT that)))))))
    (, ,)
    (VP (MD must)
      (VP (VB be)
        (NP (DT the) (JJ last))))
    (: ;)
    (S
      (S
        (NP (DT the) (NN tide))
        (VP (VBZ is)
          (VP (VBG flowing)
            (ADVP (RB fast)))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP we))
          (VP (MD shall)
            (VP (VB be)
              (ADJP (RB afloat))
              (PP (IN in)
                (NP
                  (QP (PDT half) (DT an) (NN hour)))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP we))
          (VP (VBP have)
            (NP
              (NP (RB just) (DT the) (NN breeze))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBP want)))))))))
    (. .)))

advmod(call-5, Now-2)
nsubj(call-5, you-3)
aux(call-5, may-4)
ccomp(last-21, call-5)
det(_-10, another-7)
amod(_-10, _-8)
nn(_-10, litre-9)
prep_for(call-5, _-10)
poss(lads-13, my-12)
prep_for(call-5, lads-13)
conj_and(_-10, lads-13)
prep_for(call-5, that-16)
conj_and(_-10, that-16)
aux(last-21, must-18)
cop(last-21, be-19)
det(last-21, the-20)
root(ROOT-0, last-21)
det(tide-24, the-23)
nsubj(flowing-26, tide-24)
aux(flowing-26, is-25)
parataxis(last-21, flowing-26)
advmod(flowing-26, fast-27)
nsubj(afloat-33, we-30)
aux(afloat-33, shall-31)
cop(afloat-33, be-32)
parataxis(last-21, afloat-33)
conj_and(flowing-26, afloat-33)
quantmod(hour-37, half-35)
quantmod(hour-37, an-36)
prep_in(afloat-33, hour-37)
nsubj(have-41, we-40)
conj_and(flowing-26, have-41)
conj_and(afloat-33, have-41)
advmod(breeze-44, just-42)
det(breeze-44, the-43)
dobj(have-41, breeze-44)
nsubj(want-46, we-45)
rcmod(breeze-44, want-46)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP
          (NP (JJ d'ye) (NN think))
          (, ,)
          (NP (NNP Morrison))
          (, ,))
        (VP (MD shall))))
    (NP (PRP we))
    (VP (VBP have)
      (NP (NN dirt)))
    (. ?) ('' '')))

dobj(shall-7, What-1)
amod(think-3, d'ye-2)
nsubj(shall-7, think-3)
appos(think-3, Morrison-5)
advcl(have-9, shall-7)
nsubj(have-9, we-8)
root(ROOT-0, have-9)
dobj(have-9, dirt-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN been)
          (VP (VBG looking)
            (ADVP (RB just))
            (ADVP (RB now))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBD were)
            (NP
              (NP (DT any) (JJ other) (NN month))
              (PP (IN in)
                (NP (DT the) (NN year)))))))
      (S
        (NP (PRP I))
        (VP (MD should)
          (VP
            (FRAG
              (INTJ (UH say) (, ,) (UH yes))))))
      (: ;)
      (CC but)
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP (DT no)
            (ADJP (JJ trusting)
              (NP (NNP April))
              (, ,))
            (NN captain)))))
    (. .)))

nsubj(looking-5, I-2)
aux(looking-5, 've-3)
aux(looking-5, been-4)
root(ROOT-0, looking-5)
advmod(looking-5, just-6)
advmod(looking-5, now-7)
mark(month-15, if-10)
nsubj(month-15, it-11)
cop(month-15, were-12)
det(month-15, any-13)
amod(month-15, other-14)
advcl(say-21, month-15)
det(year-18, the-17)
prep_in(month-15, year-18)
nsubj(say-21, I-19)
aux(say-21, should-20)
conj_and(looking-5, say-21)
dep(say-21, yes-23)
expl('s-27, there-26)
conj_and(looking-5, 's-27)
conj_but(say-21, 's-27)
neg(captain-32, no-28)
amod(captain-32, trusting-29)
tmod(trusting-29, April-30)
nsubj('s-27, captain-32)

(ROOT
  (S
    (NP (NNP Howsomever))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP it))
        (VP (VBZ does)
          (NP (NN blow))
          (PRT (RP off)))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB promise)
        (NP (PRP you))
        (NP
          (NP (DT a) (NN fog))
          (PP (IN in)
            (NP
              (NP (CD three) (NNS hours))
              (ADVP (RB afterwards)))))))
    (. .) ('' '')))

nsubj(promise-11, Howsomever-1)
mark(does-5, if-3)
nsubj(does-5, it-4)
advcl(promise-11, does-5)
dobj(does-5, blow-6)
prt(does-5, off-7)
nsubj(promise-11, I-9)
aux(promise-11, 'll-10)
root(ROOT-0, promise-11)
iobj(promise-11, you-12)
det(fog-14, a-13)
dobj(promise-11, fog-14)
num(hours-17, three-16)
prep_in(fog-14, hours-17)
advmod(hours-17, afterwards-18)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (MD will)
      (VP (VB do)
        (ADVP (RB as) (RB well))))
    (. .)))

nsubj(do-4, That-2)
aux(do-4, will-3)
root(ROOT-0, do-4)
advmod(well-6, as-5)
mwe(well-6, as-5)
advmod(do-4, well-6)

(ROOT
  (S
    (NP (NNP Corbett) (, ,))
    (VP (VBP have)
      (S
        (NP (PRP you))
        (VP (VBN settled)
          (PP (IN with)
            (NP (NNP Duval))))))
    (. ?) ('' '')))

nsubj(have-3, Corbett-1)
root(ROOT-0, have-3)
nsubj(settled-5, you-4)
ccomp(have-3, settled-5)
prep_with(settled-5, Duval-7)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (PP (IN after)
      (NP (JJR more) (NN noise)
        (CC and)
        (NN _) (NNS charivari)))
    (NP
      (NP (NNP _))
      (PP (IN than)
        (NP
          (NP (DT a) (NN panic))
          (PP (IN in)
            (NP (DT the) (NNP Stock) (NNP Exchange))))))
    (VP (MD would)
      (VP (VB make)
        (PP (IN in)
          (NP (NNP England)))))
    (. .)))

discourse(make-19, Yes-2)
amod(noise-6, more-5)
prep_after(make-19, noise-6)
nn(charivari-9, _-8)
conj_and(noise-6, charivari-9)
prep_after(make-19, charivari-9)
nsubj(make-19, _-10)
det(panic-13, a-12)
prep_than(_-10, panic-13)
det(Exchange-17, the-15)
nn(Exchange-17, Stock-16)
prep_in(panic-13, Exchange-17)
aux(make-19, would-18)
root(ROOT-0, make-19)
prep_in(make-19, England-21)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD fought)
        (CC and)
        (VBD squabbled)
        (PP (IN for)
          (NP (DT an) (NN hour)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD found)
        (SBAR (IN that) (, ,)
          (S
            (PP (IN without)
              (NP (DT some) (NN abatement)))
            (, ,)
            (NP (PRP I))
            (ADVP (RB never))
            (VP (MD should)
              (VP (VB have)
                (VP (VBN settled)
                  (NP (DT the) (NN affair)))))))))
    (. .) ('' '')))

nsubj(fought-2, He-1)
nsubj(squabbled-4, He-1)
root(ROOT-0, fought-2)
conj_and(fought-2, squabbled-4)
det(hour-7, an-6)
prep_for(fought-2, hour-7)
nsubj(found-11, I-10)
conj_and(fought-2, found-11)
mark(settled-22, that-12)
det(abatement-16, some-15)
prep_without(settled-22, abatement-16)
nsubj(settled-22, I-18)
neg(settled-22, never-19)
aux(settled-22, should-20)
aux(settled-22, have-21)
ccomp(found-11, settled-22)
det(affair-24, the-23)
dobj(settled-22, affair-24)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB let)
        (NP (PRP him))
        (PRT (RP off))))
    (. ?) ('' '')))

dep(let-5, What-2)
aux(let-5, did-3)
nsubj(let-5, you-4)
root(ROOT-0, let-5)
dobj(let-5, him-6)
prt(let-5, off-7)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP Seventeen))
      (VP (VBZ sous)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Corbett))
    (, ,)
    (S
      (VP (VBG laughing)))
    (. .)))

nsubj(sous-3, Seventeen-2)
ccomp(replied-6, sous-3)
root(ROOT-0, replied-6)
nsubj(replied-6, Corbett-7)
vmod(replied-6, laughing-9)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (DT that))
    (VP (VBD satisfied)
      (NP (PRP him)))
    (. ?) ('' '')))

cc(satisfied-4, And-2)
nsubj(satisfied-4, that-3)
root(ROOT-0, satisfied-4)
dobj(satisfied-4, him-5)

(ROOT
  (NP (NNP inquired) (NNP Pickersgill) (. .)))

nn(Pickersgill-2, inquired-1)
root(ROOT-0, Pickersgill-2)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB prove)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (NP (DT a) (JJ _) (NN surfaire) (NN _))))))))))))
    (: :)
    (S
      (NP
        (NP (CD two))
        (PP (IN of)
          (NP (DT the) (NNS knives))))
      (VP (VBD were)
        (ADJP
          (NP (DT a) (RB little))
          (JJ rusty))))
    (. .)))

advmod(all-6, Yes-2)
nsubj(all-6, it-4)
cop(all-6, was-5)
root(ROOT-0, all-6)
nsubj(prove-9, he-7)
nsubj(_-15, he-7)
aux(prove-9, could-8)
rcmod(all-6, prove-9)
aux(_-15, to-10)
cop(_-15, be-11)
det(_-15, a-12)
amod(_-15, _-13)
nn(_-15, surfaire-14)
xcomp(prove-9, _-15)
nsubj(rusty-24, two-17)
det(knives-20, the-19)
prep_of(two-17, knives-20)
cop(rusty-24, were-21)
det(little-23, a-22)
npadvmod(rusty-24, little-23)
parataxis(all-6, rusty-24)

(ROOT
  (S
    (S (CC But)
      (NP (PRP he))
      (VP (MD will)
        (ADVP (RB always))
        (VP (VB have)
          (NP (NN something))
          (PP (RP off)))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP (VB be)
          (ADJP (JJ happy)
            (PP (IN without)
              (NP (PRP it)))))))
    (. .)))

cc(have-5, But-1)
nsubj(have-5, he-2)
aux(have-5, will-3)
advmod(have-5, always-4)
root(ROOT-0, have-5)
dobj(have-5, something-6)
prep(have-5, off-7)
nsubj(happy-13, he-9)
aux(happy-13, could-10)
neg(happy-13, not-11)
cop(happy-13, be-12)
parataxis(have-5, happy-13)
prep_without(happy-13, it-15)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB really))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD would)
            (VP (VB commit)
              (NP (NN suicide))
              (SBAR (IN if)
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (S
                      (VP (TO to)
                        (VP (VB pay)
                          (NP (DT a) (NN bill))
                          (PP (IN without)
                            (NP (DT a) (NN deduction))))))))))))))
    (. .) ('' '')))

nsubj(think-3, I-1)
advmod(think-3, really-2)
root(ROOT-0, think-3)
nsubj(commit-6, he-4)
aux(commit-6, would-5)
ccomp(think-3, commit-6)
dobj(commit-6, suicide-7)
mark(had-10, if-8)
nsubj(had-10, he-9)
nsubj(pay-12, he-9)
advcl(commit-6, had-10)
aux(pay-12, to-11)
xcomp(had-10, pay-12)
det(bill-14, a-13)
dobj(pay-12, bill-14)
det(deduction-17, a-16)
prep_without(pay-12, deduction-17)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Let)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBP live))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Pickersgill))
    (. .)))

ccomp(replied-7, Let-2)
nsubj(live-4, him-3)
ccomp(Let-2, live-4)
root(ROOT-0, replied-7)
nsubj(replied-7, Pickersgill-8)

(ROOT
  (S (`` ``)
    (NP
      (NP
        (NP (NNP Jeannette))
        (, ,)
        (NP
          (NP (DT a) (NN bottle))
          (PP (IN of)
            (NP
              (NP (NNP Volnay))
              (PP (IN of)
                (NP (CD 1811))))))
        (, ,))
      (CC and)
      (NP (CD three)))
    (VP (VBZ glasses))
    (. .) ('' '')))

nsubj(glasses-13, Jeannette-2)
det(bottle-5, a-4)
appos(Jeannette-2, bottle-5)
prep_of(bottle-5, Volnay-7)
prep_of(Volnay-7, 1811-9)
conj_and(Jeannette-2, three-12)
nsubj(glasses-13, three-12)
root(ROOT-0, glasses-13)

(ROOT
  (S
    (NP
      (NP (NNP Jeannette))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD was)
            (NP
              (NP (DT the)
                (ADJP (RB _) (JJ fille))
                (FW de) (NN cabaret) (NN _))
              (, ,)
              (VP
                (ADVP (RB soon))
                (VBN appeared)
                (PP (IN with)
                  (NP
                    (NP (DT a) (NN bottle))
                    (PP (IN of)
                      (NP (NN wine))))))))))
      (, ,))
    (ADVP (RB seldom))
    (VP (VBD called)
      (PP (IN for))
      (, ,)
      (PP (IN except) (IN by)
        (NP
          (NP (DT the) (NN captain))
          (PP (IN of)
            (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _))))))
    (. .)))

nsubj(_-10, Jeannette-1)
nsubj(called-21, Jeannette-1)
cop(_-10, was-4)
det(_-10, the-5)
advmod(fille-7, _-6)
amod(_-10, fille-7)
nn(_-10, de-8)
nn(_-10, cabaret-9)
rcmod(Jeannette-1, _-10)
advmod(appeared-13, soon-12)
vmod(_-10, appeared-13)
det(bottle-16, a-15)
prep_with(appeared-13, bottle-16)
prep_of(bottle-16, wine-18)
advmod(called-21, seldom-20)
root(ROOT-0, called-21)
prep(called-21, for-22)
dep(called-21, except-24)
det(captain-27, the-26)
prep_by(called-21, captain-27)
det(_-32, the-29)
nn(_-32, _-30)
nn(_-32, Happy-go-lucky-31)
prep_of(captain-27, _-32)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP sail)
      (NP (NN to-night)))
    (. ?) ('' '')))

nsubj(sail-3, You-2)
root(ROOT-0, sail-3)
dobj(sail-3, to-night-4)

(ROOT
  (S
    (VP (VBD said)
      (NP (PRP she))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD placed)
            (NP (DT the) (NN bottle))
            (PP (IN before)
              (NP (PRP him)))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, she-2)
mark(placed-6, as-4)
nsubj(placed-6, she-5)
advcl(said-1, placed-6)
det(bottle-8, the-7)
dobj(placed-6, bottle-8)
prep_before(placed-6, him-10)

(ROOT
  (S
    (NP (NNP Pickersgill))
    (VP (VBD nodded)
      (NP (PRP$ his) (NN head)))
    (. .)))

nsubj(nodded-2, Pickersgill-1)
root(ROOT-0, nodded-2)
poss(head-4, his-3)
dobj(nodded-2, head-4)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (NP (DT a) (JJ strange) (NN dream))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP Jeannette))
        (: ;) (`` ``)
        (S
          (NP (PRP I))
          (VP (VBD thought)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBD were) (RB all)
                  (VP
                    (VP (VBN taken)
                      (PP (IN by)
                        (NP (DT a) (NN revenue-cutter))))
                    (, ,)
                    (CC and)
                    (VP (VBN put)
                      (PP (IN in)
                        (NP (DT a) (JJ _) (NN cachot))))))))))))
    (NP (NNP _))
    (. .)))

nsubj(had-3, I-2)
ccomp(said-9, had-3)
det(dream-6, a-4)
amod(dream-6, strange-5)
dobj(had-3, dream-6)
root(ROOT-0, said-9)
dobj(said-9, Jeannette-10)
nsubj(thought-14, I-13)
dep(Jeannette-10, thought-14)
nsubjpass(taken-18, you-15)
nsubjpass(put-24, you-15)
auxpass(taken-18, were-16)
advmod(taken-18, all-17)
ccomp(thought-14, taken-18)
det(revenue-cutter-21, a-20)
agent(taken-18, revenue-cutter-21)
ccomp(thought-14, put-24)
conj_and(taken-18, put-24)
det(cachot-28, a-26)
amod(cachot-28, _-27)
prep_in(put-24, cachot-28)
nsubj(said-9, _-29)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBD went)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (PRP you)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBD did) (RB not)
          (VP (VB know)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (PRP you))))
            (ADVP (RB again))))))
    (: --)
    (S
      (NP (PRP you))
      (VP (VBD were) (RB all)
        (VP (VBN changed))))
    (. .) ('' '')))

nsubj(went-2, I-1)
nsubj(see-4, I-1)
root(ROOT-0, went-2)
aux(see-4, to-3)
xcomp(went-2, see-4)
dobj(see-4, you-5)
nsubj(know-11, I-8)
aux(know-11, did-9)
neg(know-11, not-10)
conj_and(went-2, know-11)
dobj(know-11, one-12)
prep_of(one-12, you-14)
advmod(know-11, again-15)
nsubjpass(changed-20, you-17)
auxpass(changed-20, were-18)
advmod(changed-20, all-19)
parataxis(went-2, changed-20)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Very)
        (ADVP (RB likely))
        (, ,) (VB Jeannette)))
    (: ;)
    (NP (PRP you))
    (VP (MD would) (RB not)
      (VP (VB be)
        (NP
          (NP (DT the) (JJ first))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD did) (RB not)
                (VP (VB know)
                  (NP (PRP$ their) (NNS friends))
                  (SBAR
                    (WHADVP
                      (ADVP (RB again))
                      (WRB when))
                    (FRAG
                      (PP (IN in)
                        (NP (NN misfortune))))))))))))
    (. .)))

dep(first-12, Very-2)
advmod(Very-2, likely-3)
dep(Very-2, Jeannette-5)
nsubj(first-12, you-7)
aux(first-12, would-8)
neg(first-12, not-9)
cop(first-12, be-10)
det(first-12, the-11)
root(ROOT-0, first-12)
nsubj(know-16, first-12)
aux(know-16, did-14)
neg(know-16, not-15)
rcmod(first-12, know-16)
poss(friends-18, their-17)
dobj(know-16, friends-18)
advmod(when-20, again-19)
advmod(in-21, when-20)
advcl(know-16, in-21)
pobj(in-21, misfortune-22)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (ADJP (NN nothing) (JJ strange))
      (PP (IN in)
        (NP (PRP$ your) (NN dream))))
    (. .) ('' '') ('' '')))

expl(was-2, There-1)
root(ROOT-0, was-2)
npadvmod(strange-4, nothing-3)
acomp(was-2, strange-4)
poss(dream-7, your-6)
prep_in(was-2, dream-7)

(ROOT
  (NP
    (NP (NNP _) (NNP Mais))
    (, ,)
    (NP (NNP mon) (NNP Dieu))
    (. !)))

nn(Mais-2, _-1)
root(ROOT-0, Mais-2)
nn(Dieu-5, mon-4)
appos(Mais-2, Dieu-5)

(ROOT
  (S
    (S
      (NP (NNP Je) (NNP ne))
      (VP (VBZ suis)
        (SBAR
          (S
            (NP (NN pas) (NN comme))
            (VP (MD ca))))))
    (, ,)
    (NP (FW moi))
    (VP (VBZ _))
    (. .) ('' '')))

nn(ne-2, Je-1)
nsubj(suis-3, ne-2)
ccomp(_-9, suis-3)
nn(comme-5, pas-4)
nsubj(ca-6, comme-5)
ccomp(suis-3, ca-6)
nsubj(_-9, moi-8)
root(ROOT-0, _-9)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP
          (NP (NNP No))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP are) (RB not))))
          (, ,))
        (VP (VBP Jeannette)))
      (: ;)
      (S
        (S
          (NP (PRP you))
          (VP (VBP are)
            (NP (DT a) (JJ good) (NN girl))))
        (, ,)
        (CC and)
        (S
          (NP
            (NP (DT some))
            (PP (IN of)
              (NP (DT these) (JJ fine) (NNS days))))
          (NP (PRP I))
          (VP (MD 'll)
            (VP (VB marry)
              (NP (PRP you)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Corbett))
    (. .) ('' '')))

nsubj(Jeannette-9, No-2)
mark(are-6, that-4)
nsubj(are-6, you-5)
dep(No-2, are-6)
neg(are-6, not-7)
ccomp(said-29, Jeannette-9)
nsubj(girl-15, you-11)
cop(girl-15, are-12)
det(girl-15, a-13)
amod(girl-15, good-14)
parataxis(Jeannette-9, girl-15)
nsubj(marry-25, some-18)
det(days-22, these-20)
amod(days-22, fine-21)
prep_of(some-18, days-22)
nsubj(marry-25, I-23)
aux(marry-25, 'll-24)
parataxis(Jeannette-9, marry-25)
conj_and(girl-15, marry-25)
dobj(marry-25, you-26)
root(ROOT-0, said-29)
nsubj(said-29, Corbett-30)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP Doit))
      (VP (VBP etre)
        (SBAR
          (S
            (NP
              (NP (NN bien) (NN beau) (NNP ce) (FW jour) (NNP la))
              (, ,)
              (NP (JJ par) (NN exemple) (NNS _))
              (, ,) ('' ''))
            (VP (VBD replied)
              (NP (NNP Jeannette))
              (, ,)
              (S
                (VP (VBG laughing))))))))
    (: ;) (`` ``)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (VP (VBN promised)
          (S
            (VP (TO to)
              (VP (VB marry)
                (NP (PRP me))
                (NP (DT every) (NN time))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP have)
                      (VP (VBN come)
                        (PP (IN in)
                          (NP (DT these) (JJ last) (CD three) (NNS years)))))))))))))
    (. .) ('' '')))

nn(Doit-2, _-1)
nsubj(etre-3, Doit-2)
root(ROOT-0, etre-3)
nn(la-8, bien-4)
nn(la-8, beau-5)
nn(la-8, ce-6)
nn(la-8, jour-7)
nsubj(replied-15, la-8)
amod(_-12, par-10)
nn(_-12, exemple-11)
appos(la-8, _-12)
ccomp(etre-3, replied-15)
dobj(replied-15, Jeannette-16)
vmod(replied-15, laughing-18)
nsubj(promised-23, you-21)
nsubj(marry-25, you-21)
aux(promised-23, have-22)
parataxis(etre-3, promised-23)
aux(marry-25, to-24)
xcomp(promised-23, marry-25)
iobj(marry-25, me-26)
det(time-28, every-27)
dobj(marry-25, time-28)
nsubj(come-31, you-29)
aux(come-31, have-30)
dep(marry-25, come-31)
det(years-36, these-33)
amod(years-36, last-34)
num(years-36, three-35)
prep_in(come-31, years-36)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Well))
      (, ,)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ proves)
            (S
              (NP (PRP I))
              (VP (VB keep)
                (PP (TO to)
                  (NP (PRP$ my) (NN promise))))))))
      (, ,))
    (VP (VBD anyhow))
    (. .) ('' '')))

nsubj(proves-5, Well-2)
nsubj(anyhow-12, Well-2)
rcmod(Well-2, proves-5)
nsubj(keep-7, I-6)
ccomp(proves-5, keep-7)
poss(promise-10, my-9)
prep_to(keep-7, promise-10)
root(ROOT-0, anyhow-12)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes)))
    (: ;)
    (S (CC but)
      (NP (PRP you))
      (ADVP (RB never))
      (VP (VBP go)
        (ADVP (DT any) (RBR further))))
    (. .) ('' '')))

dep(go-7, Yes-2)
cc(go-7, but-4)
nsubj(go-7, you-5)
neg(go-7, never-6)
root(ROOT-0, go-7)
dep(further-9, any-8)
advmod(go-7, further-9)

(ROOT
  (S
    (S (`` ``)
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB spare)
          (NP (PRP him)))))
    (, ,)
    (S
      (NP
        (NP (NNP Jeannette))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (NP (DT the) (JJ real) (NN truth)))))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (DT the) (NN captain))))
    (: :) (`` ``)
    (CC but)
    (S
      (NP
        (NP
          (NP (NN wait))
          (NP (DT a) (JJ little))
          (, ,))
        (: --)
        (PP (IN in)
          (NP (DT the) (NN meantime)))
        (, ,))
      (ADVP (RB here))
      (VP (VBZ is)
        (NP (DT a) (JJ five-franc) (NN piece)
          (S
            (VP (TO to)
              (VP (VB add)
                (PP (TO to)
                  (NP (PRP$ your) (JJ _) (JJ petite) (NN fortune) (NN _)))))))))
    (. .) ('' '') ('' '')))

nsubj(spare-5, I-2)
aux(spare-5, ca-3)
neg(spare-5, n't-4)
root(ROOT-0, spare-5)
dobj(spare-5, him-6)
nsubj(truth-14, Jeannette-8)
nsubj(said-17, Jeannette-8)
cop(truth-14, is-11)
det(truth-14, the-12)
amod(truth-14, real-13)
rcmod(Jeannette-8, truth-14)
conj_but(spare-5, said-17)
det(captain-19, the-18)
dobj(said-17, captain-19)
nsubj(piece-36, wait-23)
det(little-25, a-24)
dep(wait-23, little-25)
det(meantime-30, the-29)
prep_in(wait-23, meantime-30)
advmod(piece-36, here-32)
cop(piece-36, is-33)
det(piece-36, a-34)
amod(piece-36, five-franc-35)
conj_but(spare-5, piece-36)
aux(add-38, to-37)
vmod(piece-36, add-38)
poss(_-44, your-40)
amod(_-44, _-41)
amod(_-44, petite-42)
nn(_-44, fortune-43)
prep_to(add-38, _-44)

(ROOT
  (FRAG
    (NP
      (NP (NNP _) (NNP Merci) (NNP bien))
      (, ,)
      (NP (FW monsieur) (FW le) (NN capitaine))
      (: ;)
      (NP (FW bon) (FW voyage) (NNS _)))
    (. !) ('' '')))

nn(bien-3, _-1)
nn(bien-3, Merci-2)
root(ROOT-0, bien-3)
nn(capitaine-7, monsieur-5)
nn(capitaine-7, le-6)
appos(bien-3, capitaine-7)
nn(_-11, bon-9)
nn(_-11, voyage-10)
dep(bien-3, _-11)

(ROOT
  (S
    (NP (NNP Jeannette))
    (VP (VBD held)
      (NP (PRP$ her) (NN finger))
      (PRT (RP up))
      (PP (TO to)
        (NP (NNP Corbett)))
      (, ,)
      (VP (VBG saying) (, ,)
        (PP (IN with)
          (NP (DT a) (NN smile)))
        (, ,) ('' '')
        (NP (JJ _) (NN mechant) (NNS _))))
    (. !) ('' '')))

nsubj(held-2, Jeannette-1)
root(ROOT-0, held-2)
poss(finger-4, her-3)
dobj(held-2, finger-4)
prt(held-2, up-5)
prep_to(held-2, Corbett-7)
dep(held-2, saying-9)
det(smile-13, a-12)
prep_with(saying-9, smile-13)
amod(_-18, _-16)
nn(_-18, mechant-17)
dobj(saying-9, _-18)

(ROOT
  (S (CC and)
    (RB then)
    (VP (VBD quitted)
      (NP (DT the) (NN room)))
    (. .)))

cc(quitted-3, and-1)
advmod(quitted-3, then-2)
root(ROOT-0, quitted-3)
det(room-5, the-4)
dobj(quitted-3, room-5)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NNP Come))
        (, ,)
        (NP (NNP Morrison))
        (, ,))
      (VP (VBP help)
        (S
          (NP (PRP us))
          (VP (TO to)
            (VP (VB empty)
              (NP (DT this) (NN bottle)))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP we))
      (VP (MD will) (RB all)
        (VP (VB go)
          (PP (IN on)
            (NP (NN board))))))
    (. .) ('' '')))

nsubj(help-6, Come-2)
appos(Come-2, Morrison-4)
root(ROOT-0, help-6)
dobj(help-6, us-7)
nsubj(empty-9, us-7)
aux(empty-9, to-8)
xcomp(help-6, empty-9)
det(bottle-11, this-10)
dobj(empty-9, bottle-11)
advmod(go-18, then-14)
nsubj(go-18, we-15)
aux(go-18, will-16)
advmod(go-18, all-17)
conj_and(help-6, go-18)
prep_on(go-18, board-20)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP wish)
        (SBAR (IN that)
          (S
            (NP (NN girl))
            (VP (MD would) (RB n't)
              (VP (VB come)
                (ADVP (RB here))
                (PP (IN with)
                  (NP (PRP$ her) (JJ nonsensical) (NNS dreams)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Morrison))
    (, ,)
    (S
      (VP (VBG taking)
        (NP
          (NP (PRP$ his) (NN seat))
          (: ;) (`` ``)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP (VB like)
                (NP (PRP it))))))))
    (. .)))

nsubj(wish-3, I-2)
ccomp(said-16, wish-3)
mark(come-8, that-4)
nsubj(come-8, girl-5)
aux(come-8, would-6)
neg(come-8, n't-7)
ccomp(wish-3, come-8)
advmod(come-8, here-9)
poss(dreams-13, her-11)
amod(dreams-13, nonsensical-12)
prep_with(come-8, dreams-13)
root(ROOT-0, said-16)
nsubj(said-16, Morrison-17)
vmod(said-16, taking-19)
poss(seat-21, his-20)
dobj(taking-19, seat-21)
nsubj(like-27, I-24)
aux(like-27, do-25)
neg(like-27, n't-26)
dep(seat-21, like-27)
dobj(like-27, it-28)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP she))
          (VP (VBD said)
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (MD should)
                  (VP (VB be)
                    (VP (VBN taken)
                      (PP (IN by)
                        (NP (DT a) (NN revenue-cutter)))))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBG looking)
          (PP (IN at)
            (NP
              (NP (DT a) (NN blue))
              (CC and)
              (NP (DT a) (JJ white) (NN pigeon))))
          (S
            (VP (VBG sitting)
              (PP (IN on)
                (NP (DT the) (NN wall) (NN opposite))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD said)
        (PP (TO to)
          (NP (PRP myself)))
        (, ,)
        (ADVP (RB Now))
        (, ,)
        (SBAR (IN if) (IN that)
          (S
            (S
              (S
                (VP (VB be)
                  (NP (DT a) (NN warning))))
              (, ,)
              (NP (PRP I))
              (VP (MD will)
                (VP (VB see))))
            (: :)
            (S
              (SBAR (IN if)
                (S
                  (NP (DT the) (JJ _) (JJ blue) (NN _) (NN pigeon))
                  (VP (VBZ flies)
                    (PRT (RP away))
                    (ADVP (RB first)))))
              (, ,)
              (NP (PRP I))
              (VP (MD shall)
                (VP (VB be)
                  (PP (IN in)
                    (NP
                      (NP (NN jail))
                      (PP (IN in)
                        (NP (DT a) (NN week))))))))
            (: ;)
            (S
              (SBAR (IN if)
                (FRAG
                  (NP (DT the)
                    (ADJP (RB _) (JJ white))
                    (NN _))))
              (, ,)
              (NP (PRP I))
              (VP (MD shall)
                (VP (VB be)
                  (ADVP (RB back) (RB here)))))))))
    (. .) ('' '')))

advmod(said-3, When-1)
nsubj(said-3, she-2)
advcl(looking-15, said-3)
mark(taken-8, that-4)
nsubjpass(taken-8, we-5)
aux(taken-8, should-6)
auxpass(taken-8, be-7)
ccomp(said-3, taken-8)
det(revenue-cutter-11, a-10)
agent(taken-8, revenue-cutter-11)
nsubj(looking-15, I-13)
aux(looking-15, was-14)
root(ROOT-0, looking-15)
det(blue-18, a-17)
prep_at(looking-15, blue-18)
det(pigeon-22, a-20)
amod(pigeon-22, white-21)
prep_at(looking-15, pigeon-22)
conj_and(blue-18, pigeon-22)
vmod(looking-15, sitting-23)
det(opposite-27, the-25)
nn(opposite-27, wall-26)
prep_on(sitting-23, opposite-27)
nsubj(said-31, I-30)
conj_and(looking-15, said-31)
prep_to(said-31, myself-33)
advmod(said-31, Now-35)
mark(see-45, if-37)
mark(see-45, that-38)
cop(warning-41, be-39)
det(warning-41, a-40)
ccomp(see-45, warning-41)
nsubj(see-45, I-43)
aux(see-45, will-44)
advcl(said-31, see-45)
mark(flies-53, if-47)
det(pigeon-52, the-48)
amod(pigeon-52, _-49)
amod(pigeon-52, blue-50)
nn(pigeon-52, _-51)
nsubj(flies-53, pigeon-52)
advcl(be-59, flies-53)
prt(flies-53, away-54)
advmod(flies-53, first-55)
nsubj(be-59, I-57)
aux(be-59, shall-58)
parataxis(see-45, be-59)
prep_in(be-59, jail-61)
det(week-64, a-63)
prep_in(jail-61, week-64)
mark(_-70, if-66)
det(_-70, the-67)
advmod(white-69, _-68)
amod(_-70, white-69)
advcl(be-74, _-70)
nsubj(be-74, I-72)
aux(be-74, shall-73)
parataxis(see-45, be-74)
advmod(here-76, back-75)
advmod(be-74, here-76)

(ROOT
  (INTJ (`` ``) (UH Well) (. ?) ('' '')))

root(ROOT-0, Well-2)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Pickersgill))
      (, ,)
      (S
        (VP (VBG laughing))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Pickersgill-2)
vmod(said-1, laughing-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBD was) (RB n't)
        (ADVP (RB well))))
    (, ,) ('' '')
    (PRN
      (S
        (VP (VBN answered)
          (NP (NNP Morrison))
          (, ,)
          (S
            (VP
              (VP (VBG tossing)
                (PRT (RP off))
                (NP (PRP$ his) (NN wine)))
              (, ,)
              (CC and)
              (VP (VBG putting)
                (ADVP
                  (NP (DT the) (NN glass))
                  (RB down))
                (PP (IN with)
                  (NP (DT a) (JJ deep) (NN sigh)))))))))
    (: ;) (`` ``)
    (S
      (PP (IN for)
        (NP (DT the) (JJ cursed) (NN _)))
      (NP (JJ blue) (JJ _) (NN pigeon))
      (VP (VBD flew)
        (PRT (RP away))
        (ADVP (RB immediately))))
    (. .) ('' '')))

nsubj(was-3, It-2)
root(ROOT-0, was-3)
neg(was-3, n't-4)
advmod(was-3, well-5)
dep(was-3, answered-8)
dobj(answered-8, Morrison-9)
dep(answered-8, tossing-11)
prt(tossing-11, off-12)
poss(wine-14, his-13)
dobj(tossing-11, wine-14)
dep(answered-8, putting-17)
conj_and(tossing-11, putting-17)
det(glass-19, the-18)
npadvmod(down-20, glass-19)
advmod(putting-17, down-20)
det(sigh-24, a-22)
amod(sigh-24, deep-23)
prep_with(putting-17, sigh-24)
det(_-30, the-28)
amod(_-30, cursed-29)
prep_for(flew-34, _-30)
amod(pigeon-33, blue-31)
amod(pigeon-33, _-32)
nsubj(flew-34, pigeon-33)
parataxis(was-3, flew-34)
prt(flew-34, away-35)
advmod(flew-34, immediately-36)

(ROOT
  (S (`` ``)
    (INTJ
      (INTJ (WRB Why))
      (, ,)
      (INTJ (UH Morrison)))
    (, ,)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB have)
        (NP (DT a) (NN chicken-heart)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (VBN frightened)
                  (PP (IN at)
                    (NP (DT a) (JJ blue) (NN pigeon))))))))))
    (. !) ('' '')))

discourse(have-8, Why-2)
discourse(Why-2, Morrison-4)
nsubj(have-8, you-6)
aux(have-8, must-7)
root(ROOT-0, have-8)
det(chicken-heart-10, a-9)
dobj(have-8, chicken-heart-10)
aux(frightened-13, to-11)
auxpass(frightened-13, be-12)
vmod(chicken-heart-10, frightened-13)
det(pigeon-17, a-15)
amod(pigeon-17, blue-16)
prep_at(frightened-13, pigeon-17)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (NNP Corbett))
        (, ,)
        (S
          (VP
            (VP (VBG laughing))
            (CC and)
            (VP (VBG looking)
              (PRT (RP out))
              (PP (IN of)
                (NP (DT the) (NN window))))))))
    (: ;) (`` ``)
    (S
      (PP (IN at)
        (NP (DT all) (NNS events)))
      (, ,)
      (NP (PRP he))
      (VP (VBZ has)
        (VP (VBN come)
          (PRT (RP back))
          (ADVP (RB again)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB there))
      (NP (PRP he))
      (VP (VBZ is)
        (VP (VBG sitting)
          (PP (IN by)
            (NP (DT the) (JJ white) (NN one))))))
    (. .) ('' '')))

root(ROOT-0, said-1)
dobj(said-1, Corbett-2)
dep(said-1, laughing-4)
dep(said-1, looking-6)
conj_and(laughing-4, looking-6)
det(window-10, the-9)
prep_out_of(looking-6, window-10)
det(events-15, all-14)
prep_at(come-19, events-15)
nsubj(come-19, he-17)
aux(come-19, has-18)
ccomp(said-1, come-19)
conj_and(said-1, come-19)
prt(come-19, back-20)
advmod(come-19, again-21)
advmod(sitting-27, there-24)
nsubj(sitting-27, he-25)
aux(sitting-27, is-26)
conj_and(said-1, sitting-27)
det(one-31, the-29)
amod(one-31, white-30)
prep_by(sitting-27, one-31)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP (DT the) (JJ first) (NN time))
        (SBAR (IN that)
          (S
            (ADVP (RB ever))
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBN called)
                (S
                  (ADJP (JJ chicken-hearted)))))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP
      (NP (NNP Morrison))
      (, ,)
      (PP (IN in)
        (NP (NN wrath))))
    (. .)))

nsubj(time-6, It-2)
cop(time-6, 's-3)
det(time-6, the-4)
amod(time-6, first-5)
ccomp(replied-15, time-6)
mark(called-11, that-7)
advmod(called-11, ever-8)
nsubjpass(called-11, I-9)
auxpass(called-11, was-10)
ccomp(time-6, called-11)
xcomp(called-11, chicken-hearted-12)
root(ROOT-0, replied-15)
nsubj(replied-15, Morrison-16)
prep_in(Morrison-16, wrath-19)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Nor))
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP deserve)
              (SBAR
                (S
                  (NP
                    (NP (PRP it))
                    (, ,)
                    (NP (NNP Morrison))
                    (, ,) ('' ''))
                  (VP (VBD replied)
                    (NP (NNP Pickersgill))))))))))
    (: ;) (`` ``)
    (S (CC but)
      (NP (NNP Corbett))
      (VP (VBZ is)
        (ADVP (RB only))
        (VP (VBG joking))))
    (. .) ('' '')))

nsubj(do-3, Nor-2)
root(ROOT-0, do-3)
nsubj(deserve-5, you-4)
ccomp(do-3, deserve-5)
nsubj(replied-11, it-6)
appos(it-6, Morrison-8)
ccomp(deserve-5, replied-11)
dobj(replied-11, Pickersgill-12)
cc(joking-19, but-15)
nsubj(joking-19, Corbett-16)
aux(joking-19, is-17)
advmod(joking-19, only-18)
parataxis(do-3, joking-19)

(ROOT
  (S (`` ``)
    (ADVP (RB Well))
    (, ,)
    (S
      (PP (IN at)
        (NP (DT all) (NNS events)))
      (, ,)
      (NP (PRP I))
      (VP (MD 'll)
        (VP
          (VP (VB try)
            (NP (PRP$ my) (NN luck))
            (PP (IN in)
              (NP (DT the) (JJ same) (NN way))))
          (, ,)
          (CC and)
          (VP (VB see)
            (SBAR (IN whether)
              (S
                (NP (PRP I))
                (VP (VBP am)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (PP (IN in)
                          (NP (NN jail)))))))))))))
    (: :)
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB take)
          (NP (DT the) (JJ blue) (NN pigeon))
          (PP (IN as)
            (NP (PRP$ my) (JJ bad) (NN omen)))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP you))
              (VP (VBD did)))))))
    (. .) ('' '')))

advmod(try-10, Well-2)
det(events-6, all-5)
prep_at(try-10, events-6)
nsubj(try-10, I-8)
nsubj(see-19, I-8)
aux(try-10, 'll-9)
root(ROOT-0, try-10)
poss(luck-12, my-11)
dobj(try-10, luck-12)
det(way-16, the-14)
amod(way-16, same-15)
prep_in(try-10, way-16)
conj_and(try-10, see-19)
mark(am-22, whether-20)
nsubj(am-22, I-21)
nsubj(be-24, I-21)
ccomp(see-19, am-22)
aux(be-24, to-23)
xcomp(am-22, be-24)
prep_in(be-24, jail-26)
nsubj(take-30, I-28)
aux(take-30, shall-29)
parataxis(try-10, take-30)
det(pigeon-33, the-31)
amod(pigeon-33, blue-32)
dobj(take-30, pigeon-33)
poss(omen-37, my-35)
amod(omen-37, bad-36)
prep_as(take-30, omen-37)
mark(did-41, as-39)
nsubj(did-41, you-40)
advcl(take-30, did-41)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS sailors))
      (CC and)
      (NP (NNP Captain) (NNP Pickersgill)))
    (RB all)
    (VP
      (VP (VBD rose))
      (CC and)
      (VP (VBD went)
        (PP (TO to)
          (NP (DT the) (NN window)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB ascertain)
              (NP
                (NP (NNP Corbett) (POS 's))
                (NN fortune))
              (PP (IN by)
                (NP
                  (NP (DT this) (JJ new) (NN species))
                  (PP (IN of)
                    (NP (NN augury))))))))))
    (. .)))

det(sailors-2, The-1)
nsubj(rose-7, sailors-2)
nsubj(went-9, sailors-2)
nsubj(ascertain-15, sailors-2)
nn(Pickersgill-5, Captain-4)
conj_and(sailors-2, Pickersgill-5)
nsubj(rose-7, Pickersgill-5)
advmod(rose-7, all-6)
root(ROOT-0, rose-7)
conj_and(rose-7, went-9)
det(window-12, the-11)
prep_to(went-9, window-12)
aux(ascertain-15, to-14)
xcomp(went-9, ascertain-15)
poss(fortune-18, Corbett-16)
dobj(ascertain-15, fortune-18)
det(species-22, this-20)
amod(species-22, new-21)
prep_by(ascertain-15, species-22)
prep_of(species-22, augury-24)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (JJ blue) (NN pigeon))
        (VP (VBD flapped)
          (NP (PRP$ his) (NNS wings))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (PRP he))
        (VP (VBD sidled)
          (PRT (RP up))
          (PP (TO to)
            (NP (DT the) (JJ white) (NN one))))))
    (: ;)
    (S
      (PP (IN at)
        (NP (JJ last)))
      (, ,)
      (NP (DT the) (JJ white) (NN pigeon))
      (VP
        (VP (VBD flew)
          (PRT (RP off))
          (NP (DT the) (NN wall)))
        (CC and)
        (VP (VBD settled)
          (PP (IN on)
            (NP
              (NP (DT the) (NN roof))
              (PP (IN of)
                (NP (DT the) (JJ adjacent) (NN house))))))))
    (. .)))

det(pigeon-3, The-1)
amod(pigeon-3, blue-2)
nsubj(flapped-4, pigeon-3)
root(ROOT-0, flapped-4)
poss(wings-6, his-5)
dobj(flapped-4, wings-6)
advmod(sidled-11, then-9)
nsubj(sidled-11, he-10)
conj_and(flapped-4, sidled-11)
prt(sidled-11, up-12)
det(one-16, the-14)
amod(one-16, white-15)
prep_to(sidled-11, one-16)
prep_at(flew-24, last-19)
det(pigeon-23, the-21)
amod(pigeon-23, white-22)
nsubj(flew-24, pigeon-23)
nsubj(settled-29, pigeon-23)
parataxis(flapped-4, flew-24)
prt(flew-24, off-25)
det(wall-27, the-26)
dobj(flew-24, wall-27)
parataxis(flapped-4, settled-29)
conj_and(flew-24, settled-29)
det(roof-32, the-31)
prep_on(settled-29, roof-32)
det(house-36, the-34)
amod(house-36, adjacent-35)
prep_of(roof-32, house-36)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Bravo))
    (, ,)
    (NP (JJ white) (NN pigeon))
    (. !) ('' '')))

root(ROOT-0, Bravo-2)
amod(pigeon-5, white-4)
dep(Bravo-2, pigeon-5)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (NNP Corbett))))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB be)
          (ADVP (RB here))
          (ADVP (RB again))
          (PP (IN in)
            (NP (DT a) (NN week))))))
    (. .) ('' '')))

root(ROOT-0, said-1)
dobj(said-1, Corbett-2)
nsubj(be-7, I-5)
aux(be-7, shall-6)
parataxis(said-1, be-7)
advmod(be-7, here-8)
advmod(be-7, again-9)
det(week-12, a-11)
prep_in(be-7, week-12)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ whole) (NN party))
        (, ,)
        (VP (VBG laughing))
        (, ,))
      (ADVP (RB then))
      (VP (VBD resumed)
        (NP (PRP$ their) (NNS seats))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (NNP Morrison) (POS 's))
        (NN countenance))
      (VP (VBD brightened)
        (PRT (RP up))))
    (. .)))

det(party-3, The-1)
amod(party-3, whole-2)
nsubj(resumed-8, party-3)
vmod(party-3, laughing-5)
advmod(resumed-8, then-7)
root(ROOT-0, resumed-8)
poss(seats-10, their-9)
dobj(resumed-8, seats-10)
poss(countenance-15, Morrison-13)
nsubj(brightened-16, countenance-15)
conj_and(resumed-8, brightened-16)
prt(brightened-16, up-17)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP he))
        (VP (VBD took)
          (NP
            (NP (DT the) (NN glass))
            (PP (IN of)
              (NP
                (NP (NN wine))
                (VP (VBN poured)
                  (PRT (RP out))
                  (PP (IN by)
                    (NP (NNP Pickersgill))))))))))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (VBD said)))
      (, ,))
    (`` ``)
    (ADVP (RB Here))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (PRP$ your) (NN health))
          (, ,)
          (NP (NNP Corbett)))
        (: ;)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP (DT all) (NN nonsense))
            (, ,)
            (ADVP (IN after) (DT all)))))
      (: --)
      (SBAR (IN for) (, ,)
        (S
          (NP (NN d'ye))
          (VP (VBP see)
            (PRN (, ,)
              (S
                (NP (PRP I))
                (VP (MD ca) (RB n't)
                  (VP (VB be)
                    (VP (VBN put)
                      (PP (IN in)
                        (NP (NN jail)))))))
              (, ,))
            (SBAR (IN without)
              (S
                (NP (PRP you))
                (VP (VBP are))))))))
    (. .)))

mark(took-3, As-1)
nsubj(took-3, he-2)
advcl(health-20, took-3)
csubj(health-20, took-3)
det(glass-5, the-4)
dobj(took-3, glass-5)
prep_of(glass-5, wine-7)
vmod(wine-7, poured-8)
prt(poured-8, out-9)
agent(poured-8, Pickersgill-11)
nsubj(said-14, he-13)
parataxis(health-20, said-14)
advmod(health-20, Here-17)
cop(health-20, 's-18)
poss(health-20, your-19)
root(ROOT-0, health-20)
appos(health-20, Corbett-22)
nsubj(nonsense-27, it-24)
cop(nonsense-27, was-25)
det(nonsense-27, all-26)
dep(health-20, nonsense-27)
advmod(nonsense-27, after-29)
dep(after-29, all-30)
mark(see-35, for-32)
nsubj(see-35, d'ye-34)
advcl(health-20, see-35)
parataxis(health-20, see-35)
nsubjpass(put-41, I-37)
aux(put-41, ca-38)
neg(put-41, n't-39)
auxpass(put-41, be-40)
parataxis(see-35, put-41)
prep_in(put-41, jail-43)
mark(are-47, without-45)
nsubj(are-47, you-46)
advcl(see-35, are-47)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (DT all))
      (VP (VBP sail)
        (PP (IN in)
          (NP (DT the) (JJ same) (NN boat)))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP leave)
            (NP (PRP me)))))
      (NP (PRP you))
      (VP (VBP take)
        (PP (IN with)
          (NP (PRP you)))
        (NP
          (NP (NN everything))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (VP (VB condemn)
                  (NP (DT the) (NN vessel))
                  (: --)
                  (SBAR (IN so)
                    (S
                      (NP (RB here))
                      (VP (VBZ 's)
                        (NP
                          (NP (NN success))
                          (PP (TO to)
                            (NP (PRP$ our) (NN trip))))))))))))))
    (. .) ('' '')))

nsubj(sail-3, We-1)
advmod(sail-3, all-2)
root(ROOT-0, sail-3)
det(boat-7, the-5)
amod(boat-7, same-6)
prep_in(sail-3, boat-7)
advmod(leave-12, when-10)
nsubj(leave-12, you-11)
advcl(take-15, leave-12)
dobj(leave-12, me-13)
nsubj(take-15, you-14)
conj_and(sail-3, take-15)
prep_with(take-15, you-17)
dobj(take-15, everything-18)
nsubj(condemn-21, everything-18)
aux(condemn-21, can-20)
rcmod(everything-18, condemn-21)
det(vessel-23, the-22)
dobj(condemn-21, vessel-23)
mark(success-28, so-25)
nsubj(success-28, here-26)
cop(success-28, 's-27)
advcl(condemn-21, success-28)
parataxis(condemn-21, success-28)
poss(trip-31, our-30)
prep_to(success-28, trip-31)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (MD will) (RB all)
        (VP (VB drink)
          (SBAR (IN that)
            (S
              (NP
                (NP
                  (NP (NN toast))
                  (, ,)
                  (NP (PRP$ my) (NNS lads)))
                (, ,)
                (CC and)
                (NP
                  (NP (RB then))
                  (PP (IN on)
                    (NP (NN board))))
                (, ,) ('' ''))
              (VP (VBD said)
                (NP (DT the) (NN captain))))))))
    (: ;) (`` ``)
    (S
      (NP (RB here))
      (VP (VBZ 's)
        (NP
          (NP (NN success))
          (PP (TO to)
            (NP (PRP$ our) (NN trip))))))
    (. .) ('' '')))

nsubj(drink-5, We-2)
aux(drink-5, will-3)
advmod(drink-5, all-4)
root(ROOT-0, drink-5)
mark(said-18, that-6)
nsubj(said-18, toast-7)
poss(lads-10, my-9)
appos(toast-7, lads-10)
conj_and(toast-7, then-13)
nsubj(said-18, then-13)
prep_on(then-13, board-15)
ccomp(drink-5, said-18)
det(captain-20, the-19)
dobj(said-18, captain-20)
nsubj(success-25, here-23)
cop(success-25, 's-24)
parataxis(drink-5, success-25)
poss(trip-28, our-27)
prep_to(success-25, trip-28)

(ROOT
  (S
    (S
      (NP (DT The) (NN captain))
      (VP (VBD rose)
        (SBAR
          (S (, ,)
            (SBAR (IN as)
              (S
                (VP (VBD did)
                  (NP (DT the) (NNS mates)
                    (CC and)
                    (NNS men)))))
            (, ,)
            (VP (VBD drank)
              (NP
                (NP (DT the) (NN toast))
                (, ,)
                (VP
                  (VP (VBN turned)
                    (PRT (RP down))
                    (NP (DT the) (NNS drinking-vessels))
                    (PP (IN on)
                      (NP (DT the) (NN table))))
                  (, ,)
                  (VP (VBN hastened)
                    (PP (TO to)
                      (NP (DT the) (NN wharf))))
                  (, ,)
                  (CC and)
                  (, ,)
                  (PP (IN in)
                    (NP
                      (QP (PDT half) (DT an) (NN hour)))))))))))
    (, ,)
    (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _))
    (VP (VBD was)
      (ADJP (JJ clear)
        (PP (IN of)
          (NP
            (NP (DT the) (NN port))
            (PP (IN of)
              (NP (NNP Saint) (NNP Malo)))))))
    (. .)))

det(captain-2, The-1)
nsubj(rose-3, captain-2)
ccomp(clear-41, rose-3)
mark(did-6, as-5)
advcl(drank-12, did-6)
det(mates-8, the-7)
dobj(did-6, mates-8)
dobj(did-6, men-10)
conj_and(mates-8, men-10)
ccomp(rose-3, drank-12)
det(toast-14, the-13)
dobj(drank-12, toast-14)
dep(toast-14, turned-16)
prt(turned-16, down-17)
det(drinking-vessels-19, the-18)
dobj(turned-16, drinking-vessels-19)
det(table-22, the-21)
prep_on(turned-16, table-22)
dep(toast-14, hastened-24)
conj_and(turned-16, hastened-24)
det(wharf-27, the-26)
prep_to(hastened-24, wharf-27)
dep(toast-14, in-31)
conj_and(turned-16, in-31)
quantmod(hour-34, half-32)
quantmod(hour-34, an-33)
prep_in(turned-16, hour-34)
det(_-39, the-36)
nn(_-39, _-37)
nn(_-39, Happy-go-lucky-38)
nsubj(clear-41, _-39)
cop(clear-41, was-40)
root(ROOT-0, clear-41)
det(port-44, the-43)
prep_of(clear-41, port-44)
nn(Malo-47, Saint-46)
prep_of(port-44, Malo-47)

(ROOT
  (NP (NNP CHAPTER) (NNP FOUR) (. .)))

nn(FOUR-2, CHAPTER-1)
root(ROOT-0, FOUR-2)

(ROOT
  (NP (NNP PORTLAND) (NNP BILL) (. .)))

nn(BILL-2, PORTLAND-1)
root(ROOT-0, BILL-2)

(ROOT
  (S
    (NP (DT The) (NNP _) (NNP Happy-go-lucky) (NNP _))
    (VP (VBD sailed)
      (PP (IN with)
        (NP
          (NP (DT a) (JJ fresh) (NN breeze))
          (CC and)
          (NP (DT a) (JJ flowing) (NN sheet))))
      (PP (IN from)
        (NP
          (NP (NNP Saint) (NNP Malo))
          (, ,)
          (NP (DT the) (NN evening))))
      (SBAR (IN before)
        (S
          (NP (DT the) (NNP _) (NNP Arrow) (NNP _))
          (VP (VBD sailed)
            (PP (IN from)
              (NP (NNP Barn) (NNP Pool)))))))
    (. .)))

det(_-4, The-1)
nn(_-4, _-2)
nn(_-4, Happy-go-lucky-3)
nsubj(sailed-5, _-4)
root(ROOT-0, sailed-5)
det(breeze-9, a-7)
amod(breeze-9, fresh-8)
prep_with(sailed-5, breeze-9)
det(sheet-13, a-11)
amod(sheet-13, flowing-12)
prep_with(sailed-5, sheet-13)
conj_and(breeze-9, sheet-13)
nn(Malo-16, Saint-15)
prep_from(sailed-5, Malo-16)
det(evening-19, the-18)
appos(Malo-16, evening-19)
mark(sailed-25, before-20)
det(_-24, the-21)
nn(_-24, _-22)
nn(_-24, Arrow-23)
nsubj(sailed-25, _-24)
advcl(sailed-5, sailed-25)
nn(Pool-28, Barn-27)
prep_from(sailed-25, Pool-28)

(ROOT
  (S
    (NP (DT The) (NNP _) (NNP Active) (NNP _))
    (VP (VBD sailed)
      (PP (IN from)
        (NP (NNP Portsmouth)))
      (NP (DT the) (NN morning))
      (PP (IN after)))
    (. .)))

det(_-4, The-1)
nn(_-4, _-2)
nn(_-4, Active-3)
nsubj(sailed-5, _-4)
root(ROOT-0, sailed-5)
prep_from(sailed-5, Portsmouth-7)
det(morning-9, the-8)
tmod(sailed-5, morning-9)
prep(sailed-5, after-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN yacht))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP we))
          (ADVP (RB before))
          (VP (VBD observed))))
      (, ,))
    (VP (VBD was)
      (VP (VBN bound)
        (PP (TO to)
          (NP (NNP Cowes)))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT the) (NNP Isle))
            (PP (IN of)
              (NP (NNP Wight)))))))
    (. .)))

det(yacht-2, The-1)
nsubjpass(bound-10, yacht-2)
mark(observed-7, as-4)
nsubj(observed-7, we-5)
advmod(observed-7, before-6)
rcmod(yacht-2, observed-7)
auxpass(bound-10, was-9)
root(ROOT-0, bound-10)
prep_to(bound-10, Cowes-12)
det(Isle-16, the-15)
prep_in(bound-10, Isle-16)
prep_of(Isle-16, Wight-18)

(ROOT
  (S
    (S
      (NP (DT The) (NNP _) (NNP Active) (NNP _))
      (VP (VBD had)
        (NP
          (NP (NNS orders))
          (PP (TO to)
            (NP (NN cruise)))
          (SBAR
            (WHADVP (WRB wherever))
            (S
              (NP (PRP she))
              (VP (VBD pleased)
                (PP (IN within)
                  (NP
                    (NP (DT the) (NNS limits))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN admiral) (POS 's))
                        (NN station)))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD ran)
        (PP (IN for)
          (NP (NNP West) (NNP Bay)))
        (, ,)
        (PP (IN on)
          (NP
            (NP (DT the) (JJ other) (NN side))
            (PP (IN of)
              (NP
                (NP (DT the) (NN Bill))
                (PP (IN of)
                  (NP (NNP Portland)))))))))
    (. .)))

det(_-4, The-1)
nn(_-4, _-2)
nn(_-4, Active-3)
nsubj(had-5, _-4)
root(ROOT-0, had-5)
dobj(had-5, orders-6)
prep_to(orders-6, cruise-8)
advmod(pleased-11, wherever-9)
nsubj(pleased-11, she-10)
rcmod(orders-6, pleased-11)
det(limits-14, the-13)
prep_within(pleased-11, limits-14)
det(admiral-17, the-16)
poss(station-19, admiral-17)
prep_of(limits-14, station-19)
nsubj(ran-23, she-22)
conj_and(had-5, ran-23)
nn(Bay-26, West-25)
prep_for(ran-23, Bay-26)
det(side-31, the-29)
amod(side-31, other-30)
prep_on(ran-23, side-31)
det(Bill-34, the-33)
prep_of(side-31, Bill-34)
prep_of(Bill-34, Portland-36)

(ROOT
  (S
    (NP (DT The) (NNP _) (NNP Happy-go-lucky) (NNP _))
    (VP (VBD was)
      (VP
        (ADVP (RB also))
        (VBN bound)
        (PP (IN for)
          (NP (DT that) (NN bay)))
        (S
          (VP (TO to)
            (VP (VB land)
              (NP (PRP$ her) (NN cargo)))))))
    (. .)))

det(_-4, The-1)
nn(_-4, _-2)
nn(_-4, Happy-go-lucky-3)
nsubjpass(bound-7, _-4)
nsubj(land-12, _-4)
auxpass(bound-7, was-5)
advmod(bound-7, also-6)
root(ROOT-0, bound-7)
det(bay-10, that-9)
prep_for(bound-7, bay-10)
aux(land-12, to-11)
xcomp(bound-7, land-12)
poss(cargo-14, her-13)
dobj(land-12, cargo-14)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN wind))
        (VP (VBD was)
          (ADJP (JJ light))))
      (, ,)
      (CC and)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (DT every) (NN appearance))
            (PP (IN of)
              (NP (JJ fine) (NN weather))))
          (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP
                (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _))
                (, ,)
                (PP (IN at)
                  (NP
                    (NP (CD ten) (RB o'clock))
                    (PP (IN on)
                      (NP (DT the) (NNP Tuesday) (NN night)))))
                (, ,))
              (VP (VBD made)
                (NP (DT the) (NNP Portland) (NNS lights))))))))
    (: ;)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (JJ impossible)
              (S
                (VP (TO to)
                  (VP (VB run)
                    (NP (PRP$ her) (NN cargo))
                    (NP (DT that) (NN night)))))))))
      (, ,)
      (NP (PRP she))
      (VP (VBP hove)
        (PP (TO to))))
    (. .)))

det(wind-2, The-1)
nsubj(light-4, wind-2)
cop(light-4, was-3)
root(ROOT-0, light-4)
expl(was-8, there-7)
conj_and(light-4, was-8)
det(appearance-10, every-9)
nsubj(was-8, appearance-10)
amod(weather-13, fine-12)
prep_of(appearance-10, weather-13)
advmod(made-29, when-15)
det(_-19, the-16)
nn(_-19, _-17)
nn(_-19, Happy-go-lucky-18)
nsubj(made-29, _-19)
prep_at(_-19, ten-22)
advmod(ten-22, o'clock-23)
det(night-27, the-25)
nn(night-27, Tuesday-26)
prep_on(ten-22, night-27)
advcl(was-8, made-29)
det(lights-32, the-30)
nn(lights-32, Portland-31)
dobj(made-29, lights-32)
mark(impossible-37, as-34)
nsubj(impossible-37, it-35)
nsubj(run-39, it-35)
cop(impossible-37, was-36)
advcl(hove-46, impossible-37)
aux(run-39, to-38)
xcomp(impossible-37, run-39)
poss(cargo-41, her-40)
dobj(run-39, cargo-41)
det(night-43, that-42)
tmod(run-39, night-43)
nsubj(hove-46, she-45)
parataxis(light-4, hove-46)
prep(hove-46, to-47)

(ROOT
  (S
    (PP (IN At)
      (NP (NNS eleven)))
    (NP (RB o'clock) (DT the) (NNP Portland) (NNS lights))
    (VP (VBD were)
      (VP (VBN made)
        (PP (IN by)
          (NP (DT the) (JJ revenue-cutter) (NNP _) (NNP Active) (NNP _)))))
    (. .)))

prep_at(made-8, eleven-2)
advmod(lights-6, o'clock-3)
det(lights-6, the-4)
nn(lights-6, Portland-5)
nsubjpass(made-8, lights-6)
auxpass(made-8, were-7)
root(ROOT-0, made-8)
det(_-14, the-10)
amod(_-14, revenue-cutter-11)
nn(_-14, _-12)
nn(_-14, Active-13)
agent(made-8, _-14)

(ROOT
  (S
    (NP (NNP Mr) (NNP Appleboy))
    (VP
      (VP (VBD went)
        (PRT (RP up))
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT a) (NN look))
                (PP (IN at)
                  (NP (PRP them))))))))
      (, ,)
      (VP (VBD ordered)
        (NP (DT the) (NN cutter))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ hove)
                (PP (TO to)))))))
      (, ,)
      (CC and)
      (ADVP (RB then))
      (VP (VBD went)
        (PRT (RP down))
        (S
          (VP (TO to)
            (VP (VB finish)
              (NP
                (NP (PRP$ his) (NN allowance))
                (PP (IN of)
                  (NP (NN gin-toddy)))))))))
    (. .)))

nn(Appleboy-2, Mr-1)
nsubj(went-3, Appleboy-2)
nsubj(have-6, Appleboy-2)
nsubj(ordered-12, Appleboy-2)
nsubj(went-22, Appleboy-2)
nsubj(finish-25, Appleboy-2)
root(ROOT-0, went-3)
prt(went-3, up-4)
aux(have-6, to-5)
xcomp(went-3, have-6)
det(look-8, a-7)
dobj(have-6, look-8)
prep_at(look-8, them-10)
conj_and(went-3, ordered-12)
det(cutter-14, the-13)
dobj(ordered-12, cutter-14)
nsubj(hove-17, cutter-14)
aux(hove-17, to-15)
cop(hove-17, be-16)
xcomp(ordered-12, hove-17)
prep(hove-17, to-18)
advmod(went-22, then-21)
conj_and(went-3, went-22)
prt(went-22, down-23)
aux(finish-25, to-24)
xcomp(went-22, finish-25)
poss(allowance-27, his-26)
dobj(finish-25, allowance-27)
prep_of(allowance-27, gin-toddy-29)

(ROOT
  (S
    (PP (IN At)
      (NP (CD twelve) (RB o'clock)))
    (, ,)
    (NP (DT the) (NN yacht))
    (VP (VBD _)
      (SBAR
        (S
          (NP (NNP Arrow) (NNP _))
          (VP
            (VP (VBD made)
              (NP (DT the) (NNP Portland) (NNS lights)))
            (, ,)
            (CC and)
            (VP (VBD continued)
              (NP (PRP$ her) (NN course))
              (, ,)
              (ADVP (RB hardly))
              (S
                (VP (VBG stemming)
                  (NP (DT the) (NN ebb) (NN tide)))))))))
    (. .)))

prep_at(_-7, twelve-2)
advmod(twelve-2, o'clock-3)
det(yacht-6, the-5)
nsubj(_-7, yacht-6)
root(ROOT-0, _-7)
nn(_-9, Arrow-8)
nsubj(made-10, _-9)
nsubj(continued-16, _-9)
ccomp(_-7, made-10)
det(lights-13, the-11)
nn(lights-13, Portland-12)
dobj(made-10, lights-13)
ccomp(_-7, continued-16)
conj_and(made-10, continued-16)
poss(course-18, her-17)
dobj(continued-16, course-18)
advmod(stemming-21, hardly-20)
vmod(continued-16, stemming-21)
det(tide-24, the-22)
nn(tide-24, ebb-23)
dobj(stemming-21, tide-24)

(ROOT
  (S
    (S
      (NP (NNP Day))
      (VP (VBD broke)))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN horizon))
      (VP (VBD was)
        (ADJP (JJ clear))))
    (. .)))

nsubj(broke-2, Day-1)
root(ROOT-0, broke-2)
det(horizon-6, the-5)
nsubj(clear-8, horizon-6)
cop(clear-8, was-7)
conj_and(broke-2, clear-8)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ first))
        (PP (IN on)
          (NP (DT the) (NN look-out))))
      (VP (VBD were) (, ,)
        (PP (IN of)
          (NP (NN course)))
        (, ,)
        (NP (DT the) (NNS smugglers))))
    (: ;)
    (S
      (NP
        (NP (PRP they))
        (, ,)
        (CC and)
        (NP
          (NP
            (NP (DT those))
            (PP (IN on)
              (NP (NN board))))
          (NP (DT the) (NN revenue-cutter)))
        (, ,))
      (VP (VBD were)
        (NP (DT the)
          (QP (RB only) (CD two))
          (JJ interested) (NNS parties))))
    (: --)
    (S
      (NP (DT the) (NN yacht))
      (VP (VBD was)
        (ADJP (JJ neuter))))
    (. .)))

det(first-2, The-1)
nsubj(smugglers-12, first-2)
det(look-out-5, the-4)
prep_on(first-2, look-out-5)
cop(smugglers-12, were-6)
prep_of(smugglers-12, course-9)
det(smugglers-12, the-11)
root(ROOT-0, smugglers-12)
nsubj(parties-28, they-14)
conj_and(they-14, those-17)
nsubj(parties-28, those-17)
prep_on(those-17, board-19)
det(revenue-cutter-21, the-20)
dep(those-17, revenue-cutter-21)
cop(parties-28, were-23)
det(parties-28, the-24)
quantmod(two-26, only-25)
num(parties-28, two-26)
amod(parties-28, interested-27)
parataxis(smugglers-12, parties-28)
det(yacht-31, the-30)
nsubj(neuter-33, yacht-31)
cop(neuter-33, was-32)
parataxis(smugglers-12, neuter-33)

(ROOT
  (SINV (`` ``)
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (CD two) (NNS cutters))
          (PP (IN in)
            (NP
              (NP (NN sight))
              (, ,)
              (NP (NN sir)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Corbett))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD had)
            (NP (DT the) (NN watch) (: ;)
              (SBAR (IN for)
                (S
                  (NP (NNP Pickersgill))
                  (, ,)
                  (S
                    (VP (VBG having)
                      (VP (VBN been)
                        (ADVP (RB up))
                        (NP (DT the) (JJ whole) (NN night)))))
                  (, ,)
                  (VP (VBD had)
                    (VP (VBN thrown)
                      (NP (PRP himself))
                      (ADVP (RB down)
                        (PP (IN on)
                          (NP
                            (NP (DT the) (NN bed))
                            (PP (IN with)
                              (NP (PRP$ his) (NNS clothes))))))
                      (PP (IN on)))))))))))
    (. .)))

expl(are-3, There-2)
ccomp(said-12, are-3)
num(cutters-5, two-4)
nsubj(are-3, cutters-5)
prep_in(cutters-5, sight-7)
appos(sight-7, sir-9)
root(ROOT-0, said-12)
nsubj(said-12, Corbett-13)
nsubj(had-16, Corbett-13)
rcmod(Corbett-13, had-16)
det(watch-18, the-17)
dobj(had-16, watch-18)
mark(thrown-31, for-20)
nsubj(thrown-31, Pickersgill-21)
aux(night-28, having-23)
cop(night-28, been-24)
advmod(night-28, up-25)
det(night-28, the-26)
amod(night-28, whole-27)
vmod(thrown-31, night-28)
aux(thrown-31, had-30)
ccomp(watch-18, thrown-31)
dobj(thrown-31, himself-32)
advmod(thrown-31, down-33)
det(bed-36, the-35)
prep_on(down-33, bed-36)
poss(clothes-39, his-38)
prep_with(bed-36, clothes-39)
prep(thrown-31, on-40)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP they))
      (VP (VB look)
        (PP (IN like))))
    (. ?) ('' '')))

dep(look-5, What-2)
aux(look-5, do-3)
nsubj(look-5, they-4)
root(ROOT-0, look-5)
prep(look-5, like-6)

(ROOT
  (S
    (VP (VBD said)
      (NP
        (NP (NNP Pickersgill))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD was)
              (ADVP (RB up)
                (PP (IN in)
                  (NP (DT a) (NN moment)))))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Pickersgill-2)
nsubj(was-5, Pickersgill-2)
rcmod(Pickersgill-2, was-5)
advmod(was-5, up-6)
det(moment-9, a-8)
prep_in(up-6, moment-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP One))
      (VP (VBZ is)
        (NP (DT a) (NN yacht))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJ other))
      (VP (MD may)
        (VP (VB be))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (ADVP (RB rather))
      (VP (VBP think)
        (PRN (, ,)
          (ADVP
            (ADVP (RB as) (RB far))
            (SBAR (IN as)
              (S
                (NP (PRP I))
                (VP (MD can)
                  (VP (VB judge)
                    (PP (IN in)
                      (NP (DT the) (JJ grey))))))))
          (, ,))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP (PRP$ our) (JJ old) (NN friend))
              (ADVP (RB off) (RB here)))))))
    (. .) ('' '')))

nsubj(yacht-5, One-2)
cop(yacht-5, is-3)
det(yacht-5, a-4)
root(ROOT-0, yacht-5)
det(other-9, the-8)
nsubj(be-11, other-9)
aux(be-11, may-10)
conj_and(yacht-5, be-11)
nsubj(think-16, I-14)
advmod(think-16, rather-15)
conj_but(yacht-5, think-16)
advmod(far-19, as-18)
dep(think-16, far-19)
mark(judge-23, as-20)
nsubj(judge-23, I-21)
aux(judge-23, can-22)
advcl(far-19, judge-23)
ccomp(far-19, judge-23)
det(grey-26, the-25)
prep_in(judge-23, grey-26)
mark(friend-33, that-28)
nsubj(friend-33, it-29)
cop(friend-33, is-30)
poss(friend-33, our-31)
amod(friend-33, old-32)
ccomp(think-16, friend-33)
advmod(here-35, off-34)
advmod(friend-33, here-35)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ !)))))

nsubj(!-3, What-2)

(ROOT
  (SQ (MD Old)
    (NP (NNP Appleboy))
    (. ?) ('' '')))

root(ROOT-0, Old-1)
dep(Old-1, Appleboy-2)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP it))
      (VP (VBZ looks)
        (PP (IN like)
          (NP (PRP him)))))
    (: ;)
    (CC but)
    (S
      (NP (DT the) (NN day))
      (VP (VBZ has)
        (ADVP (RB scarcely))
        (VP (VBD broke)
          (ADVP (RB yet)))))
    (. .) ('' '')))

discourse(looks-5, Yes-2)
nsubj(looks-5, it-4)
root(ROOT-0, looks-5)
prep_like(looks-5, him-7)
det(day-11, the-10)
nsubj(broke-14, day-11)
aux(broke-14, has-12)
advmod(broke-14, scarcely-13)
conj_but(looks-5, broke-14)
advmod(broke-14, yet-15)

(ROOT
  (S
    (S
      (INTJ (`` ``) (UH Well))
      (, ,)
      (S
        (NP (PRP he))
        (VP (MD can)
          (VP (VB do)
            (NP (NN nothing))
            (PP (IN in)
              (NP
                (NP (DT a) (JJ light) (NN wind))
                (PP (IN like)
                  (NP (DT this))))))))
      (: ;)
      (CC and)
      (S
        (PP (IN before)
          (NP (DT the) (NN wind)))
        (NP (PRP we))
        (VP (MD can)
          (VP (VB show)
            (NP (PRP him))
            (NP (PRP$ our) (NNS heels))))))
    (: :)
    (CC but)
    (SQ (VBP are)
      (NP (PRP you))
      (ADJP (JJ sure))
      (SBAR
        (S
          (NP (DT the) (JJ other))
          (VP (VBZ is)
            (NP (DT a) (NN yacht))))
        (. ?) ('' '')))))

discourse(do-6, Well-2)
nsubj(do-6, he-4)
aux(do-6, can-5)
root(ROOT-0, do-6)
dobj(do-6, nothing-7)
det(wind-11, a-9)
amod(wind-11, light-10)
prep_in(do-6, wind-11)
prep_like(wind-11, this-13)
det(wind-18, the-17)
prep_before(show-21, wind-18)
nsubj(show-21, we-19)
aux(show-21, can-20)
conj_and(do-6, show-21)
iobj(show-21, him-22)
poss(heels-24, our-23)
dobj(show-21, heels-24)
cop(sure-29, are-27)
nsubj(sure-29, you-28)
conj_but(do-6, sure-29)
det(other-31, the-30)
nsubj(yacht-34, other-31)
cop(yacht-34, is-32)
det(yacht-34, a-33)
dep(sure-29, yacht-34)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Pickersgill))
      (, ,)
      (S
        (VP (VBG coming)
          (PP (IN on)
            (NP (NN deck))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Pickersgill-2)
vmod(said-1, coming-4)
prep_on(coming-4, deck-6)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes)))
    (: ;)
    (S
      (NP (DT the) (NN king))
      (VP (VBZ is)
        (ADJP (RBR more) (JJ careful)
          (PP (IN of)
            (NP (PRP$ his) (NN canvas))))))
    (. .) ('' '')))

dep(careful-8, Yes-2)
det(king-5, the-4)
nsubj(careful-8, king-5)
cop(careful-8, is-6)
advmod(careful-8, more-7)
root(ROOT-0, careful-8)
poss(canvas-11, his-10)
prep_of(careful-8, canvas-11)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (ADJP (JJ right))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Pickersgill))
      (, ,)
      (SBAR (`` ``)
        (WHNP (WDT that))
        (S
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN yacht))
              (PRN (: ;)
                (CC and)
                (S
                  (NP (PRP you))
                  (VP (VBP 're)
                    (ADVP (RB right) (RB there))
                    (ADVP (RB again))
                    (PP (IN in)
                      (NP (PRP$ your) (NN guess)))))
                (: --))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (DT the)
                        (ADJP (JJ stupid) (JJ old))
                        (NNP _) (NNP Active) (NN _))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ creeps)
                            (PP (IN about)
                              (S
                                (VP (VBG creeping)
                                  (PP (IN for)
                                    (NP (NNS tubs))))))))))))))))))
    (. .)))

nsubj(right-4, You-2)
cop(right-4, 're-3)
ccomp(said-7, right-4)
root(ROOT-0, said-7)
nsubj(said-7, Pickersgill-8)
nsubj(yacht-14, Pickersgill-8)
cop(yacht-14, is-12)
det(yacht-14, a-13)
rcmod(Pickersgill-8, yacht-14)
nsubj(_-33, yacht-14)
cc('re-18, and-16)
nsubj('re-18, you-17)
dep(yacht-14, 're-18)
advmod(there-20, right-19)
advmod('re-18, there-20)
advmod('re-18, again-21)
poss(guess-24, your-23)
prep_in('re-18, guess-24)
cop(_-33, is-27)
det(_-33, the-28)
amod(old-30, stupid-29)
amod(_-33, old-30)
nn(_-33, _-31)
nn(_-33, Active-32)
rcmod(yacht-14, _-33)
nsubj(creeps-35, _-33)
rcmod(_-33, creeps-35)
prepc_about(creeps-35, creeping-37)
prep_for(creeping-37, tubs-39)

(ROOT
  (S
    (S
      (S
        (INTJ (UH Well))
        (, ,)
        (NP (PRP I))
        (VP (VBP see)
          (NP (NN nothing))
          (S
            (VP (TO to)
              (VP (VB alarm)
                (NP (PRP us))
                (PP (IN at)
                  (ADJP (JJ present)))
                (, ,)
                (PP (VBD provided)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBP do) (RB n't)
                        (VP (VB fall)
                          (NP (DT a) (JJ dead) (NN calm))))))))))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (PRP we))
        (VP (MD must)
          (VP (VB take)
            (PP (TO to)
              (NP (PRP$ our) (NNS boats)))
            (ADVP
              (ADVP (RB as) (RB soon))
              (SBAR (IN as)
                (S
                  (NP (PRP he))
                  (VP (VBZ takes)
                    (PP (TO to)
                      (NP (PRP$ his)))))))))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBP are)
        (PP
          (NP (CD four) (NNS miles))
          (IN from)
          (NP
            (NP (PRP him))
            (ADVP (IN at) (JJS least))))))
    (. .)))

discourse(see-4, Well-1)
nsubj(see-4, I-3)
root(ROOT-0, see-4)
dobj(see-4, nothing-5)
aux(alarm-7, to-6)
vmod(see-4, alarm-7)
dobj(alarm-7, us-8)
prep_at(alarm-7, present-10)
prep(alarm-7, provided-12)
nsubj(fall-16, it-13)
aux(fall-16, do-14)
neg(fall-16, n't-15)
dep(provided-12, fall-16)
det(calm-19, a-17)
amod(calm-19, dead-18)
dobj(fall-16, calm-19)
advmod(take-25, then-22)
nsubj(take-25, we-23)
aux(take-25, must-24)
conj_and(see-4, take-25)
poss(boats-28, our-27)
prep_to(take-25, boats-28)
advmod(soon-30, as-29)
advmod(take-25, soon-30)
mark(takes-33, as-31)
nsubj(takes-33, he-32)
advcl(soon-30, takes-33)
ccomp(soon-30, takes-33)
prep_to(takes-33, his-35)
nsubj(are-38, we-37)
parataxis(see-4, are-38)
num(miles-40, four-39)
npadvmod(are-38, miles-40)
prep_from(are-38, him-42)
advmod(him-42, at-43)
pobj(at-43, least-44)

(ROOT
  (S
    (VP
      (VP (VB Watch)
        (NP (PRP$ his) (NNS motions)))
      (, ,)
      (VP (VB Corbett))
      (, ,)
      (CC and)
      (VP (VB see)
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (VBZ lowers)
              (NP (DT a) (NN boat)))))))
    (. .)))

root(ROOT-0, Watch-1)
poss(motions-3, his-2)
dobj(Watch-1, motions-3)
conj_and(Watch-1, Corbett-5)
conj_and(Watch-1, see-8)
mark(lowers-11, if-9)
nsubj(lowers-11, he-10)
advcl(see-8, lowers-11)
det(boat-13, a-12)
dobj(lowers-11, boat-13)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ does)
      (NP (PRP she))
      (VP (VB go)
        (ADVP (RB now))))
    (. ?)))

dobj(go-4, What-1)
aux(go-4, does-2)
nsubj(go-4, she-3)
root(ROOT-0, go-4)
advmod(go-4, now-5)

(ROOT
  (NP (CD Four) (NNS knots) (. ?)))

num(knots-2, Four-1)
root(ROOT-0, knots-2)

(ROOT
  (S (: --)
    (NP (DT that) (NN will))
    (ADVP (RB soon))
    (VP (VBZ tire)
      (NP (PRP$ their) (NNS men)))
    (. .) ('' '')))

det(will-3, that-2)
nsubj(tire-5, will-3)
advmod(tire-5, soon-4)
root(ROOT-0, tire-5)
poss(men-7, their-6)
dobj(tire-5, men-7)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS positions))
        (PP (IN of)
          (NP (DT the) (CD three) (NNS cutters))))
      (VP (VBD were)
        (SBAR (IN as)
          (S
            (VP (VBZ follows))))))
    (: :)
    (S
      (LST (: --))
      (NP (DT The) (NNP _) (NNP Happy-go-lucky) (NNP _))
      (VP (VBD was)
        (PP
          (PP
            (NP (RB about) (CD four) (NNS miles))
            (IN off)
            (NP (NNP Portland) (NNP Head)))
          (, ,)
          (CC and)
          (RB well)
          (PP (IN into)
            (NP (NNP West) (NNP Bay))))))
    (. .)))

det(positions-2, The-1)
nsubj(were-7, positions-2)
det(cutters-6, the-4)
num(cutters-6, three-5)
prep_of(positions-2, cutters-6)
root(ROOT-0, were-7)
mark(follows-9, as-8)
advcl(were-7, follows-9)
det(_-15, The-12)
nn(_-15, _-13)
nn(_-15, Happy-go-lucky-14)
nsubj(was-16, _-15)
parataxis(were-7, was-16)
advmod(miles-19, about-17)
num(miles-19, four-18)
npadvmod(off-20, miles-19)
prep(was-16, off-20)
nn(Head-22, Portland-21)
pobj(off-20, Head-22)
prep(was-16, well-25)
conj_and(off-20, well-25)
dep(off-20, into-26)
nn(Bay-28, West-27)
pobj(into-26, Bay-28)

(ROOT
  (S
    (NP (DT The) (NN revenue-cutter))
    (VP (VBD was)
      (ADJP (JJ close)
        (PP (TO to)
          (NP (DT the) (NNP Head)))))
    (. .)))

det(revenue-cutter-2, The-1)
nsubj(close-4, revenue-cutter-2)
cop(close-4, was-3)
root(ROOT-0, close-4)
det(Head-7, the-6)
prep_to(close-4, Head-7)

(ROOT
  (S
    (NP (DT The) (NN yacht))
    (VP (VBD was)
      (ADVP
        (ADVP (IN outside)
          (PP (IN of)
            (NP (DT the) (NN smuggler)))
          (, ,)
          (PP (IN about)
            (NP
              (NP
                (NP (CD two) (NNS miles))
                (PP (TO to)
                  (NP (DT the) (NN westward))))
              (, ,)
              (CC and)
              (NP
                (QP (RB about) (CD five))))))
        (CC or)
        (NP (CD six) (NNS miles)))
      (PP (IN from)
        (NP (DT the) (NN revenue-cutter))))
    (. .)))

det(yacht-2, The-1)
nsubj(was-3, yacht-2)
root(ROOT-0, was-3)
det(smuggler-7, the-6)
prep_outside_of(was-3, smuggler-7)
num(miles-11, two-10)
prep_about(was-3, miles-11)
det(westward-14, the-13)
prep_to(miles-11, westward-14)
quantmod(five-18, about-17)
prep_about(was-3, five-18)
conj_and(miles-11, five-18)
num(miles-21, six-20)
conj_or(was-3, miles-21)
det(revenue-cutter-24, the-23)
prep_from(was-3, revenue-cutter-24)

(ROOT
  (SINV (`` ``)
    (NP
      (NP (CD Two) (NNS vessels))
      (PP (IN in)
        (NP
          (NP (NN sight))
          (, ,)
          (NP (NN sir)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Smith))
    (, ,)
    (S
      (VP (VBG coming)
        (PRT (RP down))
        (PP (IN into)
          (NP (DT the) (NN cabin)))
        (PP (TO to)
          (NP (NNP Mr) (NNP Appleboy)))))
    (. .)))

num(vessels-3, Two-2)
dep(said-10, vessels-3)
prep_in(vessels-3, sight-5)
appos(sight-5, sir-7)
root(ROOT-0, said-10)
nn(Smith-12, Mr-11)
nsubj(said-10, Smith-12)
vmod(said-10, coming-14)
prt(coming-14, down-15)
det(cabin-18, the-17)
prep_into(coming-14, cabin-18)
nn(Appleboy-21, Mr-20)
prep_to(coming-14, Appleboy-21)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Very)
        (ADVP (RB well))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP
      (NP (DT the) (NN lieutenant))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD was)
            (VP (VBN _)
              (S
                (VP (VBG lying)
                  (NP (NNS _))
                  (PRT (RP down))
                  (PP (IN in)
                    (NP (PRP$ his) (JJ _) (NN standing) (NN _) (NN bed-place))))))))))
    (. .)))

ccomp(replied-6, Very-2)
advmod(Very-2, well-3)
root(ROOT-0, replied-6)
det(lieutenant-8, the-7)
nsubj(replied-6, lieutenant-8)
nsubjpass(_-12, lieutenant-8)
auxpass(_-12, was-11)
rcmod(lieutenant-8, _-12)
xcomp(_-12, lying-13)
dobj(lying-13, _-14)
prt(lying-13, down-15)
poss(bed-place-21, his-17)
amod(bed-place-21, _-18)
nn(bed-place-21, standing-19)
nn(bed-place-21, _-20)
prep_in(lying-13, bed-place-21)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT The) (NNS people))
      (VP (VBP say)
        (SBAR
          (S
            (NP (PRP one))
            (VP (VBZ is)
              (NP
                (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _))
                (, ,)
                (NP (NN sir))))))))
    (, ,) ('' '')
    (VP (VBD drawled))
    (NP (NNP Smith))
    (. .)))

det(people-3, The-2)
nsubj(say-4, people-3)
ccomp(drawled-15, say-4)
nsubj(_-10, one-5)
cop(_-10, is-6)
det(_-10, the-7)
nn(_-10, _-8)
nn(_-10, Happy-go-lucky-9)
ccomp(say-4, _-10)
appos(_-10, sir-12)
root(ROOT-0, drawled-15)
nsubj(drawled-15, Smith-16)

(ROOT
  (S (`` ``)
    (VP (VB Heh))
    (. ?)))

root(ROOT-0, Heh-2)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (. !)))

root(ROOT-0, What-1)

(ROOT
  (NP (NNP _) (NNP Happy-go-lucky) (NNP _) (. ?)))

nn(_-3, _-1)
nn(_-3, Happy-go-lucky-2)
root(ROOT-0, _-3)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP I))
      (VP (VBP recollect)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN boarded)
          (NP
            (NP (PRP$ her) (CD twenty) (NNS times))
            (: --)
            (ADJP (RB always) (JJ empty))))))
    (. .)))

discourse(recollect-4, Yes-1)
nsubj(recollect-4, I-3)
root(ROOT-0, recollect-4)
nsubj(boarded-8, I-6)
aux(boarded-8, 've-7)
parataxis(recollect-4, boarded-8)
poss(times-11, her-9)
num(times-11, twenty-10)
dobj(boarded-8, times-11)
advmod(empty-14, always-13)
amod(times-11, empty-14)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ 's)
      (NP (PRP she))
      (VP (VBG standing)))
    (. ?) ('' '')))

advmod(standing-4, How-1)
aux(standing-4, 's-2)
nsubj(standing-4, she-3)
root(ROOT-0, standing-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP She))
      (VP (VBZ stands)
        (PP (TO to)
          (NP
            (NP (DT the) (NN westward))
            (ADVP (RB now))))
        (, ,)
        (ADVP (RB sir))))
    (: ;)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (ADJP (JJ hove)
          (PP (TO to))))
      (PRN (, ,)
        (S
          (NP (PRP they))
          (VP (VBP say)))
        (, ,))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (ADVP (RB first))
          (VP (VBD saw)
            (NP (PRP her))))))
    (. .) ('' '')))

nsubj(stands-3, She-2)
root(ROOT-0, stands-3)
det(westward-6, the-5)
prep_to(stands-3, westward-6)
advmod(westward-6, now-7)
advmod(stands-3, sir-9)
nsubj(hove-14, she-12)
cop(hove-14, was-13)
conj_but(stands-3, hove-14)
prep(hove-14, to-15)
nsubj(say-18, they-17)
parataxis(hove-14, say-18)
advmod(saw-23, when-20)
nsubj(saw-23, they-21)
advmod(saw-23, first-22)
advcl(hove-14, saw-23)
dobj(saw-23, her-24)

(ROOT
  (S
    (S (`` ``) (RB Then)
      (NP (PRP she))
      (VP (VBZ has)
        (NP
          (NP (DT a) (NN cargo))
          (PP (IN in)
            (NP (PRP her))))))
    (, ,) ('' '')
    (CC and)
    (S
      (NP (NNP Mr) (NNP Appleboy))
      (VP
        (VP (VBD shaved)
          (NP (PRP himself)))
        (, ,)
        (VP (VBD dressed))
        (, ,)
        (CC and)
        (VP (VBD went)
          (PP (IN on)
            (NP (NN deck))))))
    (. .)))

advmod(has-4, Then-2)
nsubj(has-4, she-3)
root(ROOT-0, has-4)
det(cargo-6, a-5)
dobj(has-4, cargo-6)
prep_in(cargo-6, her-8)
nn(Appleboy-13, Mr-12)
nsubj(shaved-14, Appleboy-13)
nsubj(dressed-17, Appleboy-13)
nsubj(went-20, Appleboy-13)
conj_and(has-4, shaved-14)
dobj(shaved-14, himself-15)
conj_and(has-4, dressed-17)
conj_and(shaved-14, dressed-17)
conj_and(has-4, went-20)
conj_and(shaved-14, went-20)
prep_on(went-20, deck-22)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN lieutenant))
    (, ,)
    (S
      (VP
        (VP (VBG rubbing)
          (NP (PRP$ his) (NNS eyes))
          (ADVP (RB again)
            (CC and)
            (RB again)))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB then))
          (VBG looking)
          (PP (IN through)
            (NP (DT the) (NN glass)))
          (, ,)
          (SBAR (`` ``)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (NP (PRP her))
                (, ,)
                (ADVP (RB sure) (RB enough))))))))
    (. .)))

dep(said-5, Yes-2)
root(ROOT-0, said-5)
det(lieutenant-7, the-6)
nsubj(said-5, lieutenant-7)
vmod(said-5, rubbing-9)
poss(eyes-11, his-10)
dobj(rubbing-9, eyes-11)
advmod(rubbing-9, again-12)
advmod(rubbing-9, again-14)
conj_and(again-12, again-14)
advmod(looking-18, then-17)
vmod(said-5, looking-18)
conj_and(rubbing-9, looking-18)
det(glass-21, the-20)
prep_through(looking-18, glass-21)
nsubj(her-26, it-24)
cop(her-26, is-25)
ccomp(looking-18, her-26)
advmod(enough-29, sure-28)
advmod(her-26, enough-29)

(ROOT
  (S
    (VP (VB Let)
      (VP (VB draw)
        (S
          (NP (DT the) (NNS foresheet-hands))
          (VP (VB make)
            (ADJP (JJ sail))))))
    (. .)))

root(ROOT-0, Let-1)
xcomp(Let-1, draw-2)
det(foresheet-hands-4, the-3)
nsubj(make-5, foresheet-hands-4)
ccomp(draw-2, make-5)
acomp(make-5, sail-6)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN vessel))
    (SQ (VBZ 's)
      (NP (DT the) (JJ other)))
    (. ?) ('' '')))

det(vessel-2, What-1)
dep('s-3, vessel-2)
root(ROOT-0, 's-3)
det(other-5, the-4)
nsubj('s-3, other-5)

(ROOT
  (S (`` ``)
    (S
      (VP (VBP Do) (RB n't)
        (VP (VB know)
          (PRN (, ,)
            (ADVP (RB sir))
            (, ,)))))
    (: --)
    (S
      (NP (PRP she))
      (VP (VBZ 's)
        (NP (DT a) (NN cutter))))
    (. .) ('' '')))

aux(know-4, Do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
dep(know-4, sir-6)
nsubj(cutter-12, she-9)
cop(cutter-12, 's-10)
det(cutter-12, a-11)
parataxis(know-4, cutter-12)

(ROOT
  (NP (`` ``) (DT A) (NN cutter) (. ?)))

det(cutter-3, A-2)
root(ROOT-0, cutter-3)

(ROOT
  (S
    (ADVP (RB Yes))
    (, ,)
    (VP
      (VP (MD may)
        (VP (VB be)
          (NP (DT a) (NN yacht))))
      (, ,)
      (CC or)
      (VP (MD may)
        (VP (VB be)
          (NP
            (NP (DT the) (JJ new) (NN cutter))
            (VP (VBN ordered)
              (PP (IN on)
                (NP (DT the) (NN station))))))))
    (. .)))

advmod(yacht-6, Yes-1)
aux(yacht-6, may-3)
cop(yacht-6, be-4)
det(yacht-6, a-5)
root(ROOT-0, yacht-6)
aux(cutter-13, may-9)
cop(cutter-13, be-10)
det(cutter-13, the-11)
amod(cutter-13, new-12)
conj_or(yacht-6, cutter-13)
vmod(cutter-13, ordered-14)
det(station-17, the-16)
prep_on(ordered-14, station-17)

(ROOT
  (SINV
    (VP (VBP Make))
    (NP
      (NP (DT all) (NN sail))
      (, ,)
      (NP (NNP Mr) (NNP Tomkins)))
    (: :)
    (S
      (S
        (VP
          (VP (VB hoist)
            (NP (PRP$ our) (NN pendant)))
          (, ,)
          (CC and)
          (VP (VB fire)
            (NP (DT a) (NN gun)))))
      (: --)
      (S
        (S
          (NP (PRP they))
          (VP (MD will)
            (VP (VB understand)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP we))
                  (VP (VBP mean)
                    (ADVP (RB then))))))))
        (: ;)
        (S
          (NP (PRP they))
          (VP (VBP do) (RB n't)
            (VP (VB know)
              (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _))
              (ADVP
                (ADVP (RB as) (RB well))
                (SBAR (IN as)
                  (S
                    (NP (PRP we))
                    (VP (VBP do))))))))))
    (. .) ('' '')))

root(ROOT-0, Make-1)
det(sail-3, all-2)
nsubj(Make-1, sail-3)
nn(Tomkins-6, Mr-5)
appos(sail-3, Tomkins-6)
dep(Make-1, hoist-8)
poss(pendant-10, our-9)
dobj(hoist-8, pendant-10)
dep(Make-1, fire-13)
conj_and(hoist-8, fire-13)
det(gun-15, a-14)
dobj(fire-13, gun-15)
nsubj(understand-19, they-17)
aux(understand-19, will-18)
parataxis(hoist-8, understand-19)
dobj(mean-22, what-20)
nsubj(mean-22, we-21)
ccomp(understand-19, mean-22)
advmod(mean-22, then-23)
nsubj(know-28, they-25)
aux(know-28, do-26)
neg(know-28, n't-27)
parataxis(understand-19, know-28)
det(_-32, the-29)
nn(_-32, _-30)
nn(_-32, Happy-go-lucky-31)
dobj(know-28, _-32)
advmod(well-34, as-33)
mwe(well-34, as-33)
advmod(know-28, well-34)
mark(do-37, as-35)
nsubj(do-37, we-36)
advcl(well-34, do-37)
ccomp(well-34, do-37)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT a) (JJ few) (NNS minutes)))
      (NP (DT the) (NNP _) (NNP Active) (NNP _))
      (VP (VBD was)
        (PP (IN under)
          (NP
            (NP (DT a) (NN press))
            (PP (IN of)
              (NP (NN sail)))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD hoisted)
          (NP (PRP$ her) (NN pendant)))
        (, ,)
        (CC and)
        (VP (VBD fired)
          (NP (DT a) (NN gun)))))
    (. .)))

det(minutes-4, a-2)
amod(minutes-4, few-3)
prep_in(was-9, minutes-4)
det(_-8, the-5)
nn(_-8, _-6)
nn(_-8, Active-7)
nsubj(was-9, _-8)
root(ROOT-0, was-9)
det(press-12, a-11)
prep_under(was-9, press-12)
prep_of(press-12, sail-14)
nsubj(hoisted-17, she-16)
nsubj(fired-22, she-16)
parataxis(was-9, hoisted-17)
poss(pendant-19, her-18)
dobj(hoisted-17, pendant-19)
parataxis(was-9, fired-22)
conj_and(hoisted-17, fired-22)
det(gun-24, a-23)
dobj(fired-22, gun-24)

(ROOT
  (S
    (S
      (NP (DT The) (NN smuggler))
      (VP (VBD perceived)
        (SBAR (IN that)
          (S
            (NP (DT the) (NNP _) (NNP Active) (NNP _))
            (VP (VBD had)
              (VP (VBN recognised)
                (NP (PRP her))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (ADVP (RB also))
      (VP
        (VP (VBD threw)
          (PRT (RP out))
          (NP (JJR more) (NN canvas)))
        (, ,)
        (CC and)
        (VP (VBD ran)
          (ADVP (RB off) (RBR more))
          (PP (TO to)
            (NP (DT the) (NN westward))))))
    (. .)))

det(smuggler-2, The-1)
nsubj(perceived-3, smuggler-2)
root(ROOT-0, perceived-3)
mark(recognised-10, that-4)
det(_-8, the-5)
nn(_-8, _-6)
nn(_-8, Active-7)
nsubj(recognised-10, _-8)
aux(recognised-10, had-9)
ccomp(perceived-3, recognised-10)
dobj(recognised-10, her-11)
nsubj(threw-16, she-14)
nsubj(ran-22, she-14)
advmod(threw-16, also-15)
conj_and(perceived-3, threw-16)
prt(threw-16, out-17)
amod(canvas-19, more-18)
dobj(threw-16, canvas-19)
conj_and(perceived-3, ran-22)
conj_and(threw-16, ran-22)
advmod(more-24, off-23)
advmod(ran-22, more-24)
det(westward-27, the-26)
prep_to(ran-22, westward-27)

(ROOT
  (SINV (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN gun))
          (, ,)
          (NP (NN sir)))))
    (, ,) ('' '')
    (VP (VBD reported))
    (NP
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (NNS men))))
      (PP (TO to)
        (NP (NNP Mr) (NNP Stewart)))
      (, ,)
      (PP (IN on)
        (NP
          (NP (NN board))
          (PP (IN of)
            (NP (DT the) (NN yacht))))))
    (. .)))

expl('s-3, There-2)
ccomp(reported-10, 's-3)
det(gun-5, a-4)
nsubj('s-3, gun-5)
appos(gun-5, sir-7)
root(ROOT-0, reported-10)
nsubj(reported-10, one-11)
det(men-14, the-13)
prep_of(one-11, men-14)
nn(Stewart-17, Mr-16)
prep_to(one-11, Stewart-17)
prep_on(one-11, board-20)
det(yacht-23, the-22)
prep_of(board-20, yacht-23)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (: ;)
    (S
      (VP
        (VP (VB give)
          (NP (PRP me))
          (NP (DT the) (NN glass)))
        (: --)
        (NP
          (NP (DT a) (NN revenue-cutter))
          (: ;)
          (NP
            (NP (RB then) (DT this) (NN vessel))
            (PP (IN in)
              (S
                (VP (NN shore)
                  (S
                    (VP (VBG running)
                      (PP (IN towards)
                        (NP (PRP us))))))))))))
    (VP (MD must)
      (VP (VB be)
        (NP (DT a) (NN smuggler))))
    (. .) ('' '')))

advmod(smuggler-23, Yes-2)
csubj(smuggler-23, give-4)
parataxis(smuggler-23, give-4)
iobj(give-4, me-5)
det(glass-7, the-6)
dobj(give-4, glass-7)
det(revenue-cutter-10, a-9)
dobj(give-4, revenue-cutter-10)
parataxis(give-4, revenue-cutter-10)
advmod(vessel-14, then-12)
det(vessel-14, this-13)
dep(revenue-cutter-10, vessel-14)
prepc_in(vessel-14, shore-16)
xcomp(shore-16, running-17)
prep_towards(running-17, us-19)
aux(smuggler-23, must-20)
cop(smuggler-23, be-21)
det(smuggler-23, a-22)
root(ROOT-0, smuggler-23)

(ROOT
  (S (`` ``)
    (NP (PRP She))
    (VP (VBZ has)
      (ADVP (RB just))
      (VP
        (ADVP (RB now))
        (VBN made)
        (NP (DT all) (NN sail))
        (, ,)
        (ADVP (RB sir))))
    (. .) ('' '')))

nsubj(made-6, She-2)
aux(made-6, has-3)
advmod(made-6, just-4)
advmod(made-6, now-5)
root(ROOT-0, made-6)
det(sail-8, all-7)
dobj(made-6, sail-8)
advmod(made-6, sir-10)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT no) (NN doubt))
        (PP (IN of)
          (NP (PRP it)))))
    (. .)))

discourse('s-5, Yes-2)
expl('s-5, there-4)
root(ROOT-0, 's-5)
neg(doubt-7, no-6)
nsubj('s-5, doubt-7)
prep_of(doubt-7, it-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP
        (VP (VB go)
          (PRT (RP down))
          (PP (TO to)
            (NP (PRP$ his) (NN lordship))))
        (: ;)
        (VP (VB keep)
          (NP (PRP her))
          (SBAR (IN as)
            (S
              (NP (PRP she))
              (VP (VBZ goes)))))))
    (. .) ('' '')))

nsubj(go-3, I-1)
aux(go-3, will-2)
root(ROOT-0, go-3)
prt(go-3, down-4)
poss(lordship-7, his-6)
prep_to(go-3, lordship-7)
dep(go-3, keep-9)
dobj(keep-9, her-10)
mark(goes-13, as-11)
nsubj(goes-13, she-12)
advcl(keep-9, goes-13)

(ROOT
  (S
    (NP (NNP Mr) (NNP Stewart))
    (ADVP (RB then))
    (VP (VBD went)
      (PRT (RP down))
      (S
        (VP (TO to)
          (VP (VB inform)
            (NP
              (NP (NNP Lord) (NNP B))
              (: --)
              (PP (IN of)
                (NP (DT the) (NN circumstance))))))))
    (. .)))

nn(Stewart-2, Mr-1)
nsubj(went-4, Stewart-2)
nsubj(inform-7, Stewart-2)
advmod(went-4, then-3)
root(ROOT-0, went-4)
prt(went-4, down-5)
aux(inform-7, to-6)
xcomp(went-4, inform-7)
nn(B-9, Lord-8)
dobj(inform-7, B-9)
det(circumstance-13, the-12)
prep_of(B-9, circumstance-13)

(ROOT
  (S
    (FRAG
      (CONJP (RB Not) (JJ only))
      (NP (NNP Lord) (NNP B)))
    (: --)
    (S (CC but)
      (NP
        (NP (JJS most))
        (PP (IN of)
          (NP (DT the) (NNS gentlemen))))
      (VP (VBD came)
        (PP (IN on)
          (NP
            (NP
              (NP (NN deck))
              (: ;)
              (SBAR (IN as)
                (S
                  (VP (VBD did)
                    (ADVP (RB soon))
                    (ADVP (RB afterwards)))
                  (NP (DT the) (NNS ladies))))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD had)
                    (VP (VBN received)
                      (NP (DT the) (NN intelligence))
                      (PP (IN from)
                        (NP (NNP Lord) (NNP B)))))))
              (: --))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD spoke)
                  (PP (TO to)
                    (NP (PRP them)))
                  (PP (IN through)
                    (NP
                      (NP (DT the) (NN door))
                      (PP (IN of)
                        (NP (DT the) (NN cabin))))))))))))
    (. .)))

neg(only-2, Not-1)
dep(B-4, only-2)
nn(B-4, Lord-3)
dep(came-11, B-4)
cc(came-11, but-6)
nsubj(came-11, most-7)
det(gentlemen-10, the-9)
prep_of(most-7, gentlemen-10)
root(ROOT-0, came-11)
prep_on(came-11, deck-13)
nsubj(received-24, deck-13)
nsubj(spoke-33, deck-13)
mark(did-16, as-15)
dep(deck-13, did-16)
advmod(did-16, soon-17)
advmod(did-16, afterwards-18)
det(ladies-20, the-19)
dep(did-16, ladies-20)
aux(received-24, had-23)
rcmod(deck-13, received-24)
det(intelligence-26, the-25)
dobj(received-24, intelligence-26)
nn(B-29, Lord-28)
prep_from(received-24, B-29)
rcmod(deck-13, spoke-33)
prep_to(spoke-33, them-35)
det(door-38, the-37)
prep_through(spoke-33, door-38)
det(cabin-41, the-40)
prep_of(door-38, cabin-41)

(ROOT
  (S (CC But)
    (NP (DT the) (NN smuggler))
    (VP
      (VP (VBD had)
        (NP
          (NP (JJR more) (NN wind))
          (PP (IN than)
            (NP (DT the) (NN revenue-cutter)))))
      (, ,)
      (CC and)
      (VP (VBD increased)
        (NP (PRP$ her) (NN distance))))
    (. .)))

det(smuggler-3, the-2)
nsubj(had-4, smuggler-3)
nsubj(increased-12, smuggler-3)
root(ROOT-0, had-4)
amod(wind-6, more-5)
dobj(had-4, wind-6)
det(revenue-cutter-9, the-8)
prep_than(wind-6, revenue-cutter-9)
conj_and(had-4, increased-12)
poss(distance-14, her-13)
dobj(increased-12, distance-14)

(ROOT
  (SINV (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP we))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB wear)
                  (NP (NN round))))))))
      (, ,)
      (NP (PRP$ my))
      (VP (VBD lord)))
    (, ,) ('' '')
    (VP (VBD observed))
    (NP (NNP Mr) (NNP Stewart))
    (, ,) (`` ``)
    (S
      (S
        (NP (PRP she))
        (VP (VBZ is)
          (ADVP (RB just))
          (NP
            (NP (NN abreast))
            (PP (IN of)
              (NP (PRP us))))))
      (CC and)
      (S
        (PP (IN in)
          (NP (NN shore)))
        (, ,)
        (NP (PRP we))
        (VP (MD could)
          (VP (VB prevent)
            (NP (PRP$ her) (NN escape))))))
    (. .) ('' '')))

mark(were-4, If-2)
nsubj(were-4, we-3)
nsubj(wear-6, we-3)
advcl(lord-10, were-4)
aux(wear-6, to-5)
xcomp(were-4, wear-6)
dobj(wear-6, round-7)
nsubj(lord-10, my-9)
ccomp(observed-13, lord-10)
root(ROOT-0, observed-13)
nn(Stewart-15, Mr-14)
nsubj(observed-13, Stewart-15)
nsubj(abreast-21, she-18)
cop(abreast-21, is-19)
advmod(abreast-21, just-20)
dep(observed-13, abreast-21)
prep_of(abreast-21, us-23)
prep_in(prevent-30, shore-26)
nsubj(prevent-30, we-28)
aux(prevent-30, could-29)
dep(observed-13, prevent-30)
conj_and(abreast-21, prevent-30)
poss(escape-32, her-31)
dobj(prevent-30, escape-32)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP
          (NP (NNP Round))
          (PP (IN with)
            (NP (PRP her))))
        (, ,)
        (NP (NNP Mr) (NNP Stewart))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (NNP Lord) (NNP B))))
    (: --) (: ;) (`` ``)
    (S
      (NP (PRP we))
      (VP (MD must)
        (VP
          (VP (VB do)
            (NP (PRP$ our) (NN duty)))
          (CC and)
          (VP (VB protect)
            (NP (DT the) (NNS laws))))))
    (. .) ('' '')))

nsubj(said-10, Round-2)
prep_with(Round-2, her-4)
nn(Stewart-7, Mr-6)
appos(Round-2, Stewart-7)
root(ROOT-0, said-10)
nn(B-12, Lord-11)
dobj(said-10, B-12)
nsubj(do-18, we-16)
nsubj(protect-22, we-16)
aux(do-18, must-17)
parataxis(said-10, do-18)
poss(duty-20, our-19)
dobj(do-18, duty-20)
parataxis(said-10, protect-22)
conj_and(do-18, protect-22)
det(laws-24, the-23)
dobj(protect-22, laws-24)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (MD will) (RB not)
      (VP (VB be)
        (ADJP (JJ fair))
        (, ,)
        (NP (NN papa))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (NNP Cecilia) (NNP Ossulton))))
    (: ;) (`` ``)
    (S
      (NP (PRP we))
      (VP (VBP have)
        (NP
          (NP
            (NP (DT no) (NN quarrel))
            (PP (IN with)
              (NP (DT the) (NN smuggler))))
          (: :)
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (ADJP (JJ sure)
                (SBAR
                  (S
                    (NP (DT the) (NNS ladies))
                    (VP (VBP have) (RB not))))))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP they))
            (VP (VB bring)
              (NP (PRP us))
              (NP (JJ beautiful) (NNS things)))))))
    (. .) ('' '')))

nsubj(fair-6, That-2)
dep(fair-6, will-3)
neg(fair-6, not-4)
cop(fair-6, be-5)
root(ROOT-0, fair-6)
dep(fair-6, papa-8)
dep(fair-6, said-11)
nn(Ossulton-13, Cecilia-12)
nsubj(said-11, Ossulton-13)
nsubj(have-17, we-16)
parataxis(fair-6, have-17)
neg(quarrel-19, no-18)
dobj(have-17, quarrel-19)
det(smuggler-22, the-21)
prep_with(quarrel-19, smuggler-22)
nsubj(sure-26, I-24)
cop(sure-26, 'm-25)
dep(quarrel-19, sure-26)
det(ladies-28, the-27)
nsubj(have-29, ladies-28)
ccomp(sure-26, have-29)
neg(have-29, not-30)
mark(bring-34, for-32)
nsubj(bring-34, they-33)
advcl(have-17, bring-34)
iobj(bring-34, us-35)
amod(things-37, beautiful-36)
dobj(bring-34, things-37)

(ROOT
  (S (`` ``)
    (NP (NNP Miss) (NNP Ossulton))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD observed))
        (NP (PRP$ her) (NN aunt)))
      (, ,))
    (`` ``)
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (ADJP (JJ proper))
      (SBAR (IN for)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB offer)
              (NP (DT an) (NN opinion)))))))
    (. .) ('' '')))

nn(Ossulton-3, Miss-2)
nsubj(proper-14, Ossulton-3)
parataxis(proper-14, observed-6)
poss(aunt-8, her-7)
nsubj(observed-6, aunt-8)
nsubj(proper-14, it-11)
cop(proper-14, is-12)
neg(proper-14, not-13)
root(ROOT-0, proper-14)
mark(offer-18, for-15)
nsubj(offer-18, you-16)
aux(offer-18, to-17)
advcl(proper-14, offer-18)
xcomp(proper-14, offer-18)
det(opinion-20, an-19)
dobj(offer-18, opinion-20)

(ROOT
  (S
    (S
      (NP (DT The) (NN yacht))
      (VP (VBD wore)
        (NP (NN round))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (S
        (VP (VBG sailing)
          (ADVP (RB so) (RB fast))))
      (, ,)
      (NP (DT the) (NN smuggler))
      (VP (VBD had)
        (NP
          (NP (JJ little) (NN chance))
          (PP (IN of)
            (S
              (VP (VBG escaping)
                (NP (PRP her))))))))
    (: ;)
    (CC but)
    (S
      (S
        (VP (TO to)
          (VP (VB chase))))
      (VP (VBZ is)
        (NP
          (NP (CD one) (NN thing))
          (: --)
          (S
            (VP (TO to)
              (VP (VB capture)
                (FRAG (, ,)
                  (NP (DT another)))))))))
    (. .)))

det(yacht-2, The-1)
nsubj(wore-3, yacht-2)
root(ROOT-0, wore-3)
dobj(wore-3, round-4)
vmod(had-14, sailing-8)
advmod(fast-10, so-9)
advmod(sailing-8, fast-10)
det(smuggler-13, the-12)
nsubj(had-14, smuggler-13)
conj_and(wore-3, had-14)
amod(chance-16, little-15)
dobj(had-14, chance-16)
prepc_of(chance-16, escaping-18)
dobj(escaping-18, her-19)
aux(chase-23, to-22)
csubj(thing-26, chase-23)
cop(thing-26, is-24)
num(thing-26, one-25)
conj_but(wore-3, thing-26)
aux(capture-29, to-28)
vmod(thing-26, capture-29)
dep(capture-29, another-31)

(ROOT
  (S
    (S
      (S (`` ``)
        (VP (VB Let)
          (S
            (NP (PRP us))
            (VP (VB give)
              (NP (PRP her))
              (NP (DT a) (NN gun)))))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (NNP Lord) (NNP B))
        (: --)
        (SBAR (, ,) (`` ``)
          (S
            (NP (DT that))
            (VP (MD will)
              (VP (VB frighten)
                (NP (PRP her))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD dare) (RB not)
        (VP (VB cross)
          (NP (PRP$ our) (NN hawse)))))
    (. .) ('' '')))

csubj(said-10, Let-2)
nsubj(give-4, us-3)
ccomp(Let-2, give-4)
iobj(give-4, her-5)
det(gun-7, a-6)
dobj(give-4, gun-7)
root(ROOT-0, said-10)
nn(B-12, Lord-11)
dobj(said-10, B-12)
nsubj(frighten-18, that-16)
aux(frighten-18, will-17)
parataxis(said-10, frighten-18)
dobj(frighten-18, her-19)
nsubj(cross-25, he-22)
aux(cross-25, dare-23)
neg(cross-25, not-24)
conj_and(said-10, cross-25)
poss(hawse-27, our-26)
dobj(cross-25, hawse-27)

(ROOT
  (S
    (S
      (NP (DT The) (NN gun))
      (VP (VBD was)
        (VP (VBN loaded))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (RB not) (VBG being)
          (ADJP (JJR more))
          (PP (IN than)
            (NP
              (NP (DT a) (NN mile))
              (PP (IN from)
                (NP (DT the) (NN smuggler))))
            (, ,)
            (ADVP (RB actually)))))
      (VP (VBD threw)
        (NP (DT the) (NN ball))
        (NP (RB almost) (DT a) (NN quarter))
        (PP (IN of)
          (NP (DT the) (NN way)))))
    (. .)))

det(gun-2, The-1)
nsubjpass(loaded-4, gun-2)
auxpass(loaded-4, was-3)
root(ROOT-0, loaded-4)
neg(more-9, not-7)
cop(more-9, being-8)
csubj(threw-18, more-9)
det(mile-12, a-11)
prep_than(more-9, mile-12)
det(smuggler-15, the-14)
prep_from(mile-12, smuggler-15)
advmod(more-9, actually-17)
conj_and(loaded-4, threw-18)
det(ball-20, the-19)
iobj(threw-18, ball-20)
advmod(quarter-23, almost-21)
det(quarter-23, a-22)
dobj(threw-18, quarter-23)
det(way-26, the-25)
prep_of(threw-18, way-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS gentlemen))
      (, ,)
      (CONJP (RB as) (RB well) (IN as))
      (NP (NNP Lord) (NNP B))
      (: --))
    (, ,)
    (VP (VBD were)
      (ADJP (RB equally) (JJ excited)
        (PP (IN by)
          (NP
            (NP
              (NP (DT the) (NN ardour))
              (PP (IN of)
                (NP (NN pursuit))))
            (: ;)
            (S
              (S (CC but)
                (NP (DT the) (NN wind))
                (VP (VBD died)
                  (PRT (RP away))))
              (, ,)
              (CC and)
              (S
                (PP (IN at)
                  (NP (JJ last)))
                (NP (PRP it))
                (VP (VBD was)
                  (ADJP (RB nearly) (JJ calm)))))))))
    (. .)))

det(gentlemen-2, The-1)
nsubj(excited-13, gentlemen-2)
nn(B-8, Lord-7)
conj_and(gentlemen-2, B-8)
nsubj(excited-13, B-8)
cop(excited-13, were-11)
advmod(excited-13, equally-12)
root(ROOT-0, excited-13)
det(ardour-16, the-15)
prep_by(excited-13, ardour-16)
prep_of(ardour-16, pursuit-18)
det(wind-22, the-21)
nsubj(died-23, wind-22)
dep(ardour-16, died-23)
prt(died-23, away-24)
prep_at(calm-32, last-28)
nsubj(calm-32, it-29)
cop(calm-32, was-30)
advmod(calm-32, nearly-31)
dep(ardour-16, calm-32)
conj_and(died-23, calm-32)

(ROOT
  (S
    (NP
      (NP (DT The) (NN revenue-cutter) (POS 's))
      (NNS boats))
    (VP (VBD were)
      (UCP
        (ADJP (IN out))
        (, ,)
        (CC and)
        (VP (VBG coming)
          (ADVP (RB up) (RB fast)))))
    (. .)))

det(revenue-cutter-2, The-1)
poss(boats-4, revenue-cutter-2)
nsubj(out-6, boats-4)
nsubj(coming-9, boats-4)
cop(out-6, were-5)
root(ROOT-0, out-6)
conj_and(out-6, coming-9)
advmod(fast-11, up-10)
advmod(coming-9, fast-11)

(ROOT
  (S (`` ``)
    (S
      (VP
        (VP (VB Let)
          (S
            (NP (PRP us))
            (VP (VB get)
              (NP (PRP$ our) (NN boat))
              (ADVP (RB out))
              (, ,)
              (NP (NNP Stewart))))
          (PRN (, ,) ('' '')
            (SINV
              (VP (VBD said))
              (NP (PRP$ his) (NN lordship)))
            (, ,) (`` ``)))
        (CC and)
        (VP (VB help)
          (NP (PRP them)))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB quite) (JJ calm))
        (ADVP (RB now))))
    (. .) ('' '')))

root(ROOT-0, Let-2)
nsubj(get-4, us-3)
ccomp(Let-2, get-4)
poss(boat-6, our-5)
dobj(get-4, boat-6)
advmod(get-4, out-7)
dobj(get-4, Stewart-9)
parataxis(Let-2, said-12)
poss(lordship-14, his-13)
nsubj(said-12, lordship-14)
conj_and(Let-2, help-18)
dobj(help-18, them-19)
nsubj(calm-24, it-21)
cop(calm-24, is-22)
advmod(calm-24, quite-23)
parataxis(Let-2, calm-24)
advmod(calm-24, now-25)

(ROOT
  (S
    (S
      (NP (DT The) (NN boat))
      (VP (VBD was)
        (ADVP (RB soon) (RB out))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT a)
          (ADJP (RB very) (JJ large))
          (NN one))
        (, ,)
        (S
          (VP
            (VP
              (ADVP (RB usually))
              (VBG stowed)
              (PRT (RP on)))
            (, ,)
            (CC and)
            (VP (VBG occupying)
              (NP
                (NP
                  (NP (DT a) (JJ large) (NN portion))
                  (PP (IN of)))
                (, ,)
                (NP (DT the) (NN deck))))))))
    (. .)))

det(boat-2, The-1)
nsubj(was-3, boat-2)
root(ROOT-0, was-3)
advmod(out-5, soon-4)
advmod(was-3, out-5)
nsubj(one-12, it-7)
cop(one-12, was-8)
det(one-12, a-9)
advmod(large-11, very-10)
amod(one-12, large-11)
parataxis(was-3, one-12)
advmod(stowed-15, usually-14)
dep(one-12, stowed-15)
prt(stowed-15, on-16)
dep(one-12, occupying-19)
conj_and(stowed-15, occupying-19)
det(portion-22, a-20)
amod(portion-22, large-21)
dobj(occupying-19, portion-22)
prep(portion-22, of-23)
det(deck-26, the-25)
appos(portion-22, deck-26)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD pulled)
        (NP (CD six) (NNS oars))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (JJ manned)))))
      (, ,)
      (NP (NNP Mr) (NNP Stewart))
      (VP (VBD jumped)
        (SBAR
          (S
            (NP
              (NP (IN in))
              (, ,)
              (CC and)
              (NP (NNP Lord) (NNP B))
              (: --))
            (VP (VBD followed)
              (NP (PRP him)))))))
    (. .)))

nsubj(pulled-2, It-1)
root(ROOT-0, pulled-2)
num(oars-4, six-3)
dobj(pulled-2, oars-4)
advmod(manned-10, when-7)
nsubj(manned-10, it-8)
cop(manned-10, was-9)
advcl(jumped-14, manned-10)
nn(Stewart-13, Mr-12)
nsubj(jumped-14, Stewart-13)
conj_and(pulled-2, jumped-14)
nsubj(followed-21, in-15)
nn(B-19, Lord-18)
conj_and(in-15, B-19)
nsubj(followed-21, B-19)
ccomp(jumped-14, followed-21)
dobj(followed-21, him-22)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (NP (PRP you))
      (VP (VBP have)
        (NP (DT no) (NNS arms))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Hautaine))
    (. .)))

cc(have-4, But-2)
nsubj(have-4, you-3)
ccomp(said-9, have-4)
neg(arms-6, no-5)
dobj(have-4, arms-6)
root(ROOT-0, said-9)
nn(Hautaine-11, Mr-10)
nsubj(said-9, Hautaine-11)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT The) (NNS smugglers))
      (ADVP (RB never))
      (VP (VBP resist)
        (ADVP (RB now))))
    (, ,) ('' '')
    (VP (VBD observed))
    (NP (NNP Stewart))
    (. .)))

det(smugglers-3, The-2)
nsubj(resist-5, smugglers-3)
neg(resist-5, never-4)
ccomp(observed-9, resist-5)
advmod(resist-5, now-6)
root(ROOT-0, observed-9)
nsubj(observed-9, Stewart-10)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP you))
      (VP (VBP are)
        (VP (VBG going)
          (PP (IN on)
            (NP
              (NP (DT a)
                (ADJP (RB very) (JJ gallant))
                (NN expedition))
              (, ,)
              (ADVP (RB indeed)))))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD observed))
        (NP (NNP Cecilia) (NNP Ossulton))))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP wish)
        (NP (PRP you))
        (NP (NN joy))))
    (. .) ('' '')))

advmod(going-5, Then-2)
nsubj(going-5, you-3)
aux(going-5, are-4)
root(ROOT-0, going-5)
det(expedition-10, a-7)
advmod(gallant-9, very-8)
amod(expedition-10, gallant-9)
prep_on(going-5, expedition-10)
advmod(expedition-10, indeed-12)
dep(going-5, observed-15)
nn(Ossulton-17, Cecilia-16)
nsubj(observed-15, Ossulton-17)
nsubj(wish-21, I-20)
parataxis(going-5, wish-21)
iobj(wish-21, you-22)
dobj(wish-21, joy-23)

(ROOT
  (S (CC But)
    (NP
      (NP (NNP Lord))
      (NP (NNP B)))
    (: --)
    (VP (VBD was)
      (ADJP (RB too) (RB much) (JJ excited)
        (S
          (VP (TO to)
            (VP (VB pay)
              (NP (NN attention)))))))
    (. .)))

cc(excited-8, But-1)
nsubj(excited-8, Lord-2)
nsubj(pay-10, Lord-2)
appos(Lord-2, B-3)
cop(excited-8, was-5)
advmod(excited-8, too-6)
advmod(excited-8, much-7)
root(ROOT-0, excited-8)
aux(pay-10, to-9)
xcomp(excited-8, pay-10)
dobj(pay-10, attention-11)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD shoved)
        (PRT (RP off)))
      (, ,)
      (CC and)
      (VP (VBD pulled)
        (PP (IN towards)
          (NP (DT the) (NN smuggler)))))
    (. .)))

nsubj(shoved-2, They-1)
nsubj(pulled-6, They-1)
root(ROOT-0, shoved-2)
prt(shoved-2, off-3)
conj_and(shoved-2, pulled-6)
det(smuggler-9, the-8)
prep_towards(pulled-6, smuggler-9)

(ROOT
  (S
    (PP (IN At)
      (NP (DT this) (NN time)))
    (NP (DT the) (NN revenue) (NNS boats))
    (VP (VBD were)
      (NP
        (NP
          (NP
            (QP (RB about) (CD five))
            (NNS miles) (NN astern))
          (PP (IN of)
            (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (NN yacht))
          (PP (IN about)
            (NP
              (NP (NNS three-quarters))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN mile))
                  (PP (IN from)
                    (NP (PRP her)))))))))
      (PP (IN in)
        (NP (DT the) (NN offing))))
    (. .)))

det(time-3, this-2)
prep_at(astern-11, time-3)
det(boats-6, the-4)
nn(boats-6, revenue-5)
nsubj(astern-11, boats-6)
cop(astern-11, were-7)
quantmod(five-9, about-8)
num(astern-11, five-9)
nn(astern-11, miles-10)
root(ROOT-0, astern-11)
det(_-16, the-13)
nn(_-16, _-14)
nn(_-16, Happy-go-lucky-15)
prep_of(astern-11, _-16)
det(yacht-20, the-19)
conj_and(astern-11, yacht-20)
prep_about(yacht-20, three-quarters-22)
det(mile-25, a-24)
prep_of(three-quarters-22, mile-25)
prep_from(mile-25, her-27)
det(offing-30, the-29)
prep_in(astern-11, offing-30)

(ROOT
  (S
    (NP (NNP Pickersgill))
    (VP (VBD had)
      (VP (, ,)
        (PP (IN of)
          (NP (NN course)))
        (, ,) (VBD observed)
        (S
          (NP
            (NP (DT the) (NNS motions))
            (PP (IN of)
              (NP (DT the) (NN yacht))))
          (: ;)
          (VP (VBD had)
            (VP (VBN seen)
              (S
                (NP (PRP her))
                (VP
                  (VP (VB wear)
                    (PP (IN on)
                      (NP (NN chase))))
                  (, ,)
                  (VP (VB hoist)
                    (NP (PRP$ her) (NN ensign)
                      (CC and)
                      (NN pendant)))
                  (, ,)
                  (CC and)
                  (VP (VB fire)
                    (NP (PRP$ her) (NN gun))))))))))
    (. .)))

nsubj(observed-7, Pickersgill-1)
aux(observed-7, had-2)
prep_of(observed-7, course-5)
root(ROOT-0, observed-7)
det(motions-9, the-8)
nsubj(seen-15, motions-9)
det(yacht-12, the-11)
prep_of(motions-9, yacht-12)
aux(seen-15, had-14)
ccomp(observed-7, seen-15)
nsubj(wear-17, her-16)
nsubj(hoist-21, her-16)
nsubj(fire-28, her-16)
ccomp(seen-15, wear-17)
prep_on(wear-17, chase-19)
ccomp(seen-15, hoist-21)
conj_and(wear-17, hoist-21)
poss(ensign-23, her-22)
dobj(hoist-21, ensign-23)
dobj(hoist-21, pendant-25)
conj_and(ensign-23, pendant-25)
ccomp(seen-15, fire-28)
conj_and(wear-17, fire-28)
poss(gun-30, her-29)
dobj(fire-28, gun-30)

(ROOT
  (S (`` ``)
    (ADVP (RB Well))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (PRP he)))
      (, ,) (`` ``))
    (NP (DT this))
    (VP (VBZ is)
      (NP (DT the) (JJS blackest) (NN ingratitude)))
    (. !)))

advmod(ingratitude-13, Well-2)
parataxis(ingratitude-13, said-5)
nsubj(said-5, he-6)
nsubj(ingratitude-13, this-9)
cop(ingratitude-13, is-10)
det(ingratitude-13, the-11)
amod(ingratitude-13, blackest-12)
root(ROOT-0, ingratitude-13)

(ROOT
  (S
    (VP (TO To)
      (VP (VB be)
        (VP (VBN attacked)
          (PP (IN by)
            (NP
              (NP (DT the) (JJ very) (NNS people))
              (SBAR
                (WHNP (WP whom))
                (S
                  (NP (PRP we))
                  (VP (VB smuggle)
                    (PP (IN for))))))))))
    (. !)))

aux(attacked-3, To-1)
auxpass(attacked-3, be-2)
root(ROOT-0, attacked-3)
det(people-7, the-5)
amod(people-7, very-6)
agent(attacked-3, people-7)
prep_for(smuggle-10, people-7)
nsubj(smuggle-10, we-9)
rcmod(people-7, smuggle-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB only))
      (VP (VBP wish)
        (SBAR
          (S
            (NP (PRP she))
            (VP (MD may)
              (VP
                (VP (VB come)
                  (PRT (RP up))
                  (PP (IN with)
                    (NP (PRP us))))
                (: ;)
                (CC and)
                (, ,)
                (VP (VB let)
                  (NP (PRP$ her) (NN attempt)
                    (S
                      (VP (TO to)
                        (VP (VB interfere))))))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD shall)
      (VP (VB rue)
        (NP
          (NP (DT the) (NN day))
          (: :)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (ADVP (RB much))
              (VP (VB like)
                (NP (DT this))
                (, ,)
                (ADVP (RB though))))))))
    (. .) ('' '')))

nsubj(wish-3, I-1)
advmod(wish-3, only-2)
ccomp(rue-21, wish-3)
nsubj(come-6, she-4)
nsubj(let-13, she-4)
aux(come-6, may-5)
ccomp(wish-3, come-6)
prt(come-6, up-7)
prep_with(come-6, us-9)
ccomp(wish-3, let-13)
conj_and(come-6, let-13)
poss(attempt-15, her-14)
dobj(let-13, attempt-15)
aux(interfere-17, to-16)
vmod(attempt-15, interfere-17)
nsubj(rue-21, she-19)
aux(rue-21, shall-20)
root(ROOT-0, rue-21)
det(day-23, the-22)
dobj(rue-21, day-23)
nsubj(like-29, I-25)
aux(like-29, do-26)
neg(like-29, n't-27)
advmod(like-29, much-28)
dep(day-23, like-29)
dobj(like-29, this-30)
advmod(like-29, though-32)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (PRP we))
          (ADVP (RB before))
          (VP (VBD observed))))
      (, ,)
      (NP (PRP it))
      (VP (VBD fell)
        (ADJP (RB nearly) (JJ calm))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN revenue) (NNS boats))
      (VP (VBD were)
        (PP (IN in)
          (NP (NN chase)))))
    (. .)))

mark(observed-4, As-1)
nsubj(observed-4, we-2)
advmod(observed-4, before-3)
advcl(fell-7, observed-4)
nsubj(fell-7, it-6)
root(ROOT-0, fell-7)
advmod(calm-9, nearly-8)
acomp(fell-7, calm-9)
det(boats-14, the-12)
nn(boats-14, revenue-13)
nsubj(were-15, boats-14)
conj_and(fell-7, were-15)
prep_in(were-15, chase-17)

(ROOT
  (S
    (NP (NNP Pickersgill))
    (VP (VBD watched)
      (NP (PRP them))
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBD came)
            (PRT (RP up))))))
    (. .)))

nsubj(watched-2, Pickersgill-1)
root(ROOT-0, watched-2)
dobj(watched-2, them-3)
mark(came-6, as-4)
nsubj(came-6, they-5)
advcl(watched-2, came-6)
prt(came-6, up-7)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBD shall)
      (NP (PRP we))
      (VP (VB do)))
    (. ?) ('' '')))

dobj(do-5, What-2)
aux(do-5, shall-3)
nsubj(do-5, we-4)
root(ROOT-0, do-5)

(ROOT
  (FRAG
    (S
      (VP (VBD said)
        (S
          (NP (NNP Corbett)))
        (, ,)
        (PRN (: --)
          (S
            (VP (`` ``) (VB get)
              (ADVP
                (NP (DT the) (NN boat))
                (IN out)))))))
    (. ?) ('' '')))

root(ROOT-0, said-1)
dep(said-1, Corbett-2)
parataxis(said-1, get-6)
det(boat-8, the-7)
npadvmod(out-9, boat-8)
advmod(get-6, out-9)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP
      (NP (NNP Pickersgill))
      (, ,) (`` ``)
      (S
        (S
          (NP (PRP we))
          (VP (MD will)
            (VP
              (VP (VB get)
                (NP (DT the) (NN boat))
                (PRT (RP out)))
              (, ,)
              (CC and)
              (VP (VB have)
                (NP
                  (NP (DT the) (NNS goods))
                  (PP (IN in)
                    (NP (PRP her)))
                  (ADJP (RB all) (JJ ready)))))))
        (: ;)
        (S (CC but)
          (NP (PRP we))
          (VP (MD can)
            (VP (VB pull)
              (ADVP
                (ADVP (RBR faster))
                (SBAR (IN than)
                  (S
                    (NP (PRP they))
                    (VP (VBP do))))
                (, ,)
                (PP (IN in)
                  (NP (DT the) (JJ first) (NN place)))))))
        (: ;)
        (CC and)
        (S (, ,)
          (PP (IN in)
            (NP (DT the) (JJ next)))
          (, ,)
          (NP (PRP they))
          (VP (MD will)
            (VP (VB be)
              (ADJP
                (ADJP (RB pretty) (RB well) (JJ tired))
                (SBAR (IN before)
                  (S
                    (NP (PRP they))
                    (VP (VBP come)
                      (PRT (RP up))
                      (PP (TO to)
                        (NP (PRP us))))))))))))
    (. .)))

dep(replied-5, Yes-2)
root(ROOT-0, replied-5)
nsubj(replied-5, Pickersgill-6)
nsubj(get-11, we-9)
nsubj(have-17, we-9)
aux(get-11, will-10)
dep(Pickersgill-6, get-11)
det(boat-13, the-12)
dobj(get-11, boat-13)
prt(get-11, out-14)
dep(Pickersgill-6, have-17)
conj_and(get-11, have-17)
det(goods-19, the-18)
dobj(have-17, goods-19)
prep_in(goods-19, her-21)
advmod(ready-23, all-22)
amod(goods-19, ready-23)
cc(pull-28, but-25)
nsubj(pull-28, we-26)
aux(pull-28, can-27)
dep(Pickersgill-6, pull-28)
conj_and(get-11, pull-28)
advmod(pull-28, faster-29)
mark(do-32, than-30)
nsubj(do-32, they-31)
advcl(faster-29, do-32)
det(place-37, the-35)
amod(place-37, first-36)
prep_in(faster-29, place-37)
det(next-43, the-42)
prep_in(tired-50, next-43)
nsubj(tired-50, they-45)
aux(tired-50, will-46)
cop(tired-50, be-47)
advmod(tired-50, pretty-48)
advmod(tired-50, well-49)
dep(Pickersgill-6, tired-50)
conj_and(get-11, tired-50)
mark(come-53, before-51)
nsubj(come-53, they-52)
ccomp(tired-50, come-53)
prt(come-53, up-54)
prep_to(come-53, us-56)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBP are)
          (ADJP (JJ fresh)))
        (, ,)
        (CC and)
        (VP (MD shall)
          (ADVP (RB soon))
          (VP (VB walk)
            (PRT (RP away))
            (PP (IN from)
              (NP (PRP them)))))))
    (: ;)
    (S (IN so)
      (NP (PRP I))
      (VP (MD shall) (RB not)
        (VP (VB leave)
          (NP (DT the) (NN vessel))
          (SBAR (IN till)
            (S
              (NP (PRP they))
              (VP (VBP are)
                (PP (IN within)
                  (NP (PDT half) (DT a) (NN mile)))))))))
    (. .)))

nsubj(fresh-3, We-1)
nsubj(walk-8, We-1)
cop(fresh-3, are-2)
root(ROOT-0, fresh-3)
aux(walk-8, shall-6)
advmod(walk-8, soon-7)
conj_and(fresh-3, walk-8)
prep_away_from(walk-8, them-11)
dep(leave-17, so-13)
nsubj(leave-17, I-14)
aux(leave-17, shall-15)
neg(leave-17, not-16)
parataxis(fresh-3, leave-17)
det(vessel-19, the-18)
dobj(leave-17, vessel-19)
mark(are-22, till-20)
nsubj(are-22, they-21)
advcl(leave-17, are-22)
predet(mile-26, half-24)
det(mile-26, a-25)
prep_within(are-22, mile-26)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (VP (VB sink)
        (NP (DT the) (NNS ankers))
        (PRN (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (MD may) (RB not)
                (VP (VB seize)
                  (NP (DT the) (NN vessel))))))
          (, ,))
        (SBAR (IN for)
          (S
            (NP (PRP it))
            (VP (VBZ is) (RB not)
              (ADJP (JJ worth)
                (PP (IN while)
                  (S
                    (VP (VBG taking)
                      (NP (PRP them))
                      (PP (IN with)
                        (NP (PRP us))))))))))))
    (. .)))

nsubj(sink-3, We-1)
aux(sink-3, must-2)
root(ROOT-0, sink-3)
det(ankers-5, the-4)
dobj(sink-3, ankers-5)
mark(seize-11, that-7)
nsubj(seize-11, they-8)
aux(seize-11, may-9)
neg(seize-11, not-10)
parataxis(sink-3, seize-11)
det(vessel-13, the-12)
dobj(seize-11, vessel-13)
mark(worth-19, for-15)
nsubj(worth-19, it-16)
cop(worth-19, is-17)
neg(worth-19, not-18)
advcl(sink-3, worth-19)
prepc_while(worth-19, taking-21)
dobj(taking-21, them-22)
prep_with(taking-21, us-24)

(ROOT
  (S
    (VP
      (VP
        (VP (VB Pass)
          (NP (PRP them))
          (PRT (RP along)))
        (, ,)
        (ADJP (JJ ready)
          (S
            (VP (TO to)
              (VP (VB run)
                (NP (PRP them))
                (PP (IN over)
                  (NP (DT the) (NNS bows)))
                (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (MD may) (RB not)
                      (VP (VB see)
                        (NP (PRP us)))))))))))
      (CC and)
      (VP (VB swear)
        (PP (TO to)
          (NP (PRP it)))))
    (. .)))

root(ROOT-0, Pass-1)
dobj(Pass-1, them-2)
prt(Pass-1, along-3)
acomp(Pass-1, ready-5)
aux(run-7, to-6)
xcomp(ready-5, run-7)
dobj(run-7, them-8)
det(bows-11, the-10)
prep_over(run-7, bows-11)
mark(see-17, that-13)
nsubj(see-17, they-14)
aux(see-17, may-15)
neg(see-17, not-16)
ccomp(run-7, see-17)
dobj(see-17, us-18)
conj_and(Pass-1, swear-20)
prep_to(swear-20, it-22)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP have)
      (NP
        (NP (DT a) (JJ good) (NN half) (NN hour))
        (, ,)
        (CC and)
        (NP (JJR more))))
    (. .) ('' '')))

cc(have-3, But-1)
nsubj(have-3, we-2)
root(ROOT-0, have-3)
det(hour-7, a-4)
amod(hour-7, good-5)
nn(hour-7, half-6)
dobj(have-3, hour-7)
dobj(have-3, more-10)
conj_and(hour-7, more-10)

(ROOT
  (S (`` ``)
    (S
      (S
        (VP (VBN Ay)))
      (, ,)
      (CC and)
      (S
        (NP (PRP you))
        (VP (MD may)
          (VP (VB hold)
            (ADVP (DT all) (RB fast))
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP choose)
                  (PRN (, ,) ('' '')
                    (SINV
                      (VP (VBD said))
                      (NP (NNP Morrison)))
                    (, ,) (`` ``))
                  (SBAR (IN although)
                    (S
                      (NP (PRP it))
                      (VP (VBZ 's)
                        (ADJP (JJR better))
                        (S
                          (VP (TO to)
                            (VP
                              (VP (VB be)
                                (PP (IN on)
                                  (NP (DT the) (JJ right) (NN side))))
                              (CC and)
                              (VP (VB get)
                                (ADJP (JJ ready))))))))))))
            (: ;)
            (ADVP (RB otherwise))
            (, ,)
            (PP (IN before)
              (NP
                (QP (PDT half) (DT an) (NN hour))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB swear)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP are)
              (PRT (RP out))
              (PP (IN of)
                (NP (PRP$ their) (NN sight))))))))
    (. .)))

ccomp(swear-42, Ay-2)
nsubj(hold-7, you-5)
aux(hold-7, may-6)
conj_and(Ay-2, hold-7)
ccomp(swear-42, hold-7)
dep(fast-9, all-8)
advmod(hold-7, fast-9)
mark(choose-12, if-10)
nsubj(choose-12, you-11)
advcl(hold-7, choose-12)
parataxis(choose-12, said-15)
nsubj(said-15, Morrison-16)
mark(better-22, although-19)
nsubj(better-22, it-20)
nsubj(be-24, it-20)
nsubj(ready-31, it-20)
cop(better-22, 's-21)
advcl(choose-12, better-22)
aux(be-24, to-23)
xcomp(better-22, be-24)
det(side-28, the-26)
amod(side-28, right-27)
prep_on(be-24, side-28)
dep(ready-31, get-30)
xcomp(better-22, ready-31)
conj_and(be-24, ready-31)
advmod(hold-7, otherwise-33)
quantmod(hour-38, half-36)
quantmod(hour-38, an-37)
prep_before(hold-7, hour-38)
nsubj(swear-42, I-40)
aux(swear-42, 'll-41)
root(ROOT-0, swear-42)
mark(are-45, that-43)
nsubj(are-45, we-44)
ccomp(swear-42, are-45)
poss(sight-49, their-48)
prep_out_of(are-45, sight-49)

(ROOT
  (S
    (S
      (VP (VB Look)
        (ADVP (RB there))))
    (, ,) ('' '')
    (PRN
      (S
        (VP (VBD said)
          (NP (PRP he))
          (, ,)
          (S
            (VP (VBG pointing)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN eastward))
                  (PP (IN at)
                    (NP (DT a) (JJ heavy) (NN bank))))))))))
    (, ,) (`` ``)
    (NP (PRP it))
    (VP (VBZ 's)
      (VP (VBG coming)
        (ADVP (RB right) (RB down))
        (PP (IN upon)
          (NP (PRP us)))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBD said)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (MD would)))))))))
    (. .) ('' '')))

ccomp(coming-20, Look-1)
advmod(Look-1, there-2)
parataxis(coming-20, said-5)
dobj(said-5, he-6)
vmod(said-5, pointing-8)
det(eastward-11, the-10)
prep_to(pointing-8, eastward-11)
det(bank-15, a-13)
amod(bank-15, heavy-14)
prep_at(eastward-11, bank-15)
nsubj(coming-20, it-18)
aux(coming-20, 's-19)
root(ROOT-0, coming-20)
advmod(down-22, right-21)
advmod(coming-20, down-22)
prep_upon(coming-20, us-24)
mark(said-28, as-26)
nsubj(said-28, I-27)
advcl(coming-20, said-28)
nsubj(would-30, it-29)
ccomp(said-28, would-30)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG True)
        (NP (RB enough))))
    (: ;)
    (S
      (S (CC but)
        (ADVP (RB still))
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT no) (NN saying))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (MD will)
                  (VP (VB come)
                    (NP
                      (NP (JJ first))
                      (, ,)
                      (NP (NNP Morrison))
                      (, ,)
                      (NP (DT the) (NNS boats))
                      (CC or)
                      (NP (DT the) (NN fog))))))))))
      (: ;) (RB so)
      (S
        (NP (PRP we))
        (VP (MD must)
          (VP (VB be)
            (VP (VBN prepared))))))
    (. .) ('' '')))

root(ROOT-0, True-2)
dobj(True-2, enough-3)
cc(is-8, but-5)
advmod(is-8, still-6)
expl(is-8, there-7)
parataxis(True-2, is-8)
neg(saying-10, no-9)
nsubj(is-8, saying-10)
nsubj(come-13, saying-10)
aux(come-13, will-12)
rcmod(saying-10, come-13)
dobj(come-13, first-14)
dobj(come-13, Morrison-16)
conj_or(first-14, Morrison-16)
det(boats-19, the-18)
dobj(come-13, boats-19)
conj_or(first-14, boats-19)
det(fog-22, the-21)
dobj(come-13, fog-22)
conj_or(first-14, fog-22)
advmod(is-8, so-24)
nsubjpass(prepared-28, we-25)
aux(prepared-28, must-26)
auxpass(prepared-28, be-27)
parataxis(is-8, prepared-28)

(ROOT
  (S (`` ``)
    (VP (VB Hilloa))
    (. !)))

root(ROOT-0, Hilloa-2)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (DT this)))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, 's-2)
nsubj(What-1, this-3)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN boat))
        (VP (VBG coming)
          (PP (IN from)
            (NP (DT the) (NN yacht))))))
    (. !) ('' '')))

discourse('s-4, Why-1)
expl('s-4, there-3)
root(ROOT-0, 's-4)
det(boat-6, a-5)
nsubj('s-4, boat-6)
vmod(boat-6, coming-7)
det(yacht-10, the-9)
prep_from(coming-7, yacht-10)

(ROOT
  (S
    (NP (NNP Pickersgill))
    (VP (VBD took)
      (PRT (RP out))
      (NP (PRP$ his) (NN glass)))
    (. .)))

nsubj(took-2, Pickersgill-1)
root(ROOT-0, took-2)
prt(took-2, out-3)
poss(glass-5, his-4)
dobj(took-2, glass-5)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Yes))
      (, ,)
      (CC and)
      (NP
        (NP
          (NP (DT the) (NN yacht) (POS 's))
          (JJ own) (NN boat))
        (PP (IN with)
          (NP (DT the) (NN name)))))
    (VP (VBD painted)
      (PP (IN on)
        (NP (PRP$ her) (NNS bows))))
    (. .)))

nsubj(painted-13, Yes-2)
det(yacht-6, the-5)
poss(boat-9, yacht-6)
amod(boat-9, own-8)
conj_and(Yes-2, boat-9)
nsubj(painted-13, boat-9)
det(name-12, the-11)
prep_with(boat-9, name-12)
root(ROOT-0, painted-13)
poss(bows-16, her-15)
prep_on(painted-13, bows-16)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (VP (VB let)
      (SBAR
        (S
          (NP (PRP them))
          (VP
            (VP (VBD come) (: --)
              (S
                (S
                  (NP (PRP we))
                  (VP (MD will)
                    (VP (VB have)
                      (NP
                        (NP (DT no) (NN ceremony))
                        (PP (IN in)
                          (S
                            (VP (VBG resisting)
                              (NP (PRP them)))))))))
                (: ;)
                (S
                  (NP (PRP they))
                  (VP (VBP are) (RB not)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NNP Act))
                        (PP (IN of)
                          (NP (NNP Parliament)))))))))
            (, ,)
            (CC and)
            (VP (MD must)
              (VP (VB take)
                (NP (DT the) (NNS consequences))))))))
    (. .)))

discourse(let-3, Well-1)
root(ROOT-0, let-3)
nsubj(come-5, them-4)
nsubj(take-27, them-4)
ccomp(let-3, come-5)
nsubj(have-9, we-7)
aux(have-9, will-8)
parataxis(come-5, have-9)
neg(ceremony-11, no-10)
dobj(have-9, ceremony-11)
prepc_in(ceremony-11, resisting-13)
dobj(resisting-13, them-14)
nsubj(are-17, they-16)
parataxis(have-9, are-17)
neg(are-17, not-18)
det(Act-21, the-20)
prep_in(are-17, Act-21)
prep_of(Act-21, Parliament-23)
aux(take-27, must-26)
ccomp(let-3, take-27)
conj_and(come-5, take-27)
det(consequences-29, the-28)
dobj(take-27, consequences-29)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (VP (VBN nought)
        (PP (TO to)
          (NP (NN fear)))))
    (. .)))

nsubj(nought-3, We-1)
aux(nought-3, have-2)
root(ROOT-0, nought-3)
prep_to(nought-3, fear-5)

(ROOT
  (S
    (S
      (VP (VB Get)
        (NP
          (NP (NNS stretchers))
          (, ,)
          (NP (PRP$ my) (NNS lads))
          (, ,)
          (CC and)
          (NP (NNS hand-spikes)))))
    (: ;)
    (S
      (NP (PRP they))
      (VP
        (VP (VBZ row)
          (NP (CD six) (NNS oars)))
        (, ,)
        (CC and)
        (VP (VBP are)
          (NP
            (NP (CD three))
            (PP (IN in)
              (NP (DT the) (NNS stern-sheets)))))))
    (: :)
    (S
      (NP (PRP they))
      (VP (MD must)
        (VP (VB be)
          (NP (JJ good) (NNS men))
          (SBAR (IN if)
            (S
              (NP (PRP they))
              (VP (VBP take)
                (NP (PRP us))))))))
    (. .) ('' '')))

root(ROOT-0, Get-1)
dobj(Get-1, stretchers-2)
poss(lads-5, my-4)
dobj(Get-1, lads-5)
conj_and(stretchers-2, lads-5)
dobj(Get-1, hand-spikes-8)
conj_and(stretchers-2, hand-spikes-8)
nsubj(row-11, they-10)
parataxis(Get-1, row-11)
num(oars-13, six-12)
dobj(row-11, oars-13)
cop(three-17, are-16)
parataxis(Get-1, three-17)
conj_and(row-11, three-17)
det(stern-sheets-20, the-19)
prep_in(three-17, stern-sheets-20)
nsubj(men-26, they-22)
aux(men-26, must-23)
cop(men-26, be-24)
amod(men-26, good-25)
parataxis(Get-1, men-26)
mark(take-29, if-27)
nsubj(take-29, they-28)
advcl(men-26, take-29)
dobj(take-29, us-30)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (JJ few) (NNS minutes))
        (NP (NNP Lord) (NNP B))))
    (: --)
    (VP (VBD was)
      (ADJP (JJ close)
        (PP (TO to)
          (NP (DT the) (NN smuggler)))))
    (. .)))

det(minutes-4, a-2)
amod(minutes-4, few-3)
prep_in(close-9, minutes-4)
nn(B-6, Lord-5)
dep(minutes-4, B-6)
cop(close-9, was-8)
root(ROOT-0, close-9)
det(smuggler-12, the-11)
prep_to(close-9, smuggler-12)

(ROOT
  (S (`` ``)
    (NP (NNP Boat))
    (VP (VBP ahoy))
    (. !)))

nsubj(ahoy-3, Boat-2)
root(ROOT-0, ahoy-3)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB want)))
    (. ?) ('' '')))

dobj(want-4, What-1)
aux(want-4, do-2)
nsubj(want-4, you-3)
root(ROOT-0, want-4)

(ROOT
  (S (`` ``)
    (VP (VB Surrender)
      (PP (IN in)
        (NP
          (NP (DT the) (NN king) (POS 's))
          (NN name))))
    (. .) ('' '')))

root(ROOT-0, Surrender-2)
det(king-5, the-4)
poss(name-7, king-5)
prep_in(Surrender-2, name-7)

(ROOT
  (S (`` ``)
    (PP
      (PP (TO To)
        (NP (WP what)))
      (, ,)
      (CC and)
      (PP (TO to)
        (NP
          (NP (WP whom))
          (, ,)
          (CC and)
          (NP (WP what)))))
    (VP (VBP are)
      (S
        (NP (PRP we))
        (VP (TO to)
          (VP (VB surrender)))))
    (. ?)))

prep_to(are-11, what-3)
prep_to(are-11', whom-7)
conj_and(whom-7, what-10)
prep_to(are-11', what-10)
root(ROOT-0, are-11)
conj_and(are-11, are-11')
dobj(are-11, we-12)
nsubj(surrender-14, we-12)
aux(surrender-14, to-13)
xcomp(are-11, surrender-14)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (NP
        (NP (DT an) (JJ English) (NN vessel))
        (VP (VBG coasting)
          (PP (IN along)
            (NP (NN shore))))))
    (. .) ('' '')))

nsubj(vessel-5, We-1)
cop(vessel-5, are-2)
det(vessel-5, an-3)
amod(vessel-5, English-4)
root(ROOT-0, vessel-5)
vmod(vessel-5, coasting-6)
prep_along(coasting-6, shore-8)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP
          (NP (NNP Pull))
          (PP (IN on)
            (NP (NN board))))
        (, ,)
        (NP (PRP$ my) (NNS lads))
        (, ,) ('' ''))
      (VP (VBD cried)
        (NP (NNP Stewart))))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (NP
          (NP
            (NP (DT a) (NN king) (POS 's))
            (NN officer))
          (: :)
          (S
            (NP (PRP we))
            (VP (VBP know)
              (NP (PRP her)))))))
    (. .) ('' '')))

nsubj(cried-10, Pull-2)
prep_on(Pull-2, board-4)
poss(lads-7, my-6)
appos(Pull-2, lads-7)
root(ROOT-0, cried-10)
dobj(cried-10, Stewart-11)
nsubj(officer-19, I-14)
cop(officer-19, am-15)
det(king-17, a-16)
poss(officer-19, king-17)
parataxis(cried-10, officer-19)
nsubj(know-22, we-21)
dep(officer-19, know-22)
dobj(know-22, her-23)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN boat) (NN darted) (NN alongside))
        (, ,)
        (CC and)
        (NP
          (NP (NNP Stewart))
          (CC and)
          (NP (NNP Lord) (NNP B)))
        (: --))
      (, ,)
      (VP (VBN followed)
        (PP (IN by)
          (NP (DT the) (NNS men))))
      (, ,))
    (VP (VBD jumped)
      (PP (IN on)
        (NP (DT the) (NN deck))))
    (. .)))

det(alongside-4, The-1)
nn(alongside-4, boat-2)
nn(alongside-4, darted-3)
nsubj(jumped-18, alongside-4)
conj_and(alongside-4, Stewart-7)
nsubj(jumped-18, Stewart-7)
nn(B-10, Lord-9)
conj_and(alongside-4, B-10)
conj_and(Stewart-7, B-10)
vmod(alongside-4, followed-13)
det(men-16, the-15)
agent(followed-13, men-16)
root(ROOT-0, jumped-18)
det(deck-21, the-20)
prep_on(jumped-18, deck-21)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Well))
      (, ,)
      (NP
        (NP (NNS gentlemen))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBP do)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP want)))))))))
    (. ?) ('' '')))

root(ROOT-0, Well-2)
appos(Well-2, gentlemen-4)
nsubj(do-7, gentlemen-4)
rcmod(gentlemen-4, do-7)
nsubj(want-9, you-8)
ccomp(do-7, want-9)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Pickersgill)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Pickersgill-2)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (VBP seize)
      (NP (PRP you)))
    (. !)))

nsubj(seize-3, We-2)
root(ROOT-0, seize-3)
dobj(seize-3, you-4)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP are)
        (NP (DT a) (NN smuggler)))
      (, ,))
    (: --)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (NP (DT no)
          (S
            (S
              (VP (VBG denying)
                (NP (PRP it))))
            (: :)
            (S
              (VP (VB look)
                (PP (IN at)
                  (NP
                    (NP (DT the) (NNS casks))
                    (PP (IN of)
                      (NP
                        (NP (NNS spirits))
                        (VP (VBN stretched)
                          (PP (IN along)
                            (NP (DT the) (NN deck))))))))))))))
    (. .) ('' '')))

nsubj(smuggler-4, You-1)
cop(smuggler-4, are-2)
det(smuggler-4, a-3)
root(ROOT-0, smuggler-4)
expl('s-8, there-7)
parataxis(smuggler-4, 's-8)
nsubj('s-8, no-9)
dep(no-9, denying-10)
dobj(denying-10, it-11)
parataxis(denying-10, look-13)
det(casks-16, the-15)
prep_at(look-13, casks-16)
prep_of(casks-16, spirits-18)
vmod(spirits-18, stretched-19)
det(deck-22, the-21)
prep_along(stretched-19, deck-22)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP We))
      (ADVP (RB never))
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBD were) (RB not)
              (ADJP (JJ smugglers)))))))
    (, ,) ('' '')
    (VP (VBD replied)
      (NP
        (NP (NNP Pickersgill))
        (: ;) (`` ``)
        (CC but)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ is))))))
    (NP
      (NP (DT that))
      (PP (TO to)
        (NP (PRP you))))
    (. ?)))

nsubj(said-4, We-2)
neg(said-4, never-3)
ccomp(replied-12, said-4)
mark(smugglers-9, that-5)
nsubj(smugglers-9, we-6)
cop(smugglers-9, were-7)
neg(smugglers-9, not-8)
ccomp(said-4, smugglers-9)
root(ROOT-0, replied-12)
dobj(replied-12, Pickersgill-13)
nsubj(is-18, what-17)
dobj(replied-12, is-18)
conj_but(Pickersgill-13, is-18)
nsubj(replied-12, that-19)
prep_to(that-19, you-21)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP are) (RB not)
        (NP
          (NP (DT a) (NN king) (POS 's))
          (NN ship))))
    (, ,)
    (CC or)
    (S
      (VP (VBN employed)
        (PP (IN by)
          (NP (DT the) (NN revenue)))))
    (. .) ('' '')))

nsubj(ship-7, You-1)
nsubj(employed-10, You-1)
cop(ship-7, are-2)
neg(ship-7, not-3)
det(king-5, a-4)
poss(ship-7, king-5)
root(ROOT-0, ship-7)
conj_or(ship-7, employed-10)
det(revenue-13, the-12)
prep_by(employed-10, revenue-13)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (S (CC but)
        (NP (PRP we))
        (VP (VBP carry)
          (NP (DT a) (NN pendant))))
      (, ,)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP (PRP$ our) (NN duty)
            (S
              (VP (TO to)
                (VP (VB protect)
                  (NP (DT the) (NNS laws)))))))))
    (. .) ('' '')))

dep(carry-6, No-2)
nsubj(carry-6, we-5)
root(ROOT-0, carry-6)
det(pendant-8, a-7)
dobj(carry-6, pendant-8)
nsubj(duty-14, it-11)
cop(duty-14, is-12)
poss(duty-14, our-13)
conj_and(carry-6, duty-14)
aux(protect-16, to-15)
vmod(duty-14, protect-16)
det(laws-18, the-17)
dobj(protect-16, laws-18)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHNP (WP who))
    (SQ (VBP are)
      (NP (PRP you)))
    (. ?) ('' '')))

cc(who-3, And-2)
root(ROOT-0, who-3)
cop(who-3, are-4)
nsubj(who-3, you-5)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Pickersgill)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Pickersgill-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (NP (NNP Lord) (NNP B)))
    (: --) (. .) ('' '')))

nsubj(B-5, I-2)
cop(B-5, am-3)
nn(B-5, Lord-4)
root(ROOT-0, B-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (, ,)
    (NP (PRP$ my) (NN lord))
    (, ,)
    (S
      (VP (VB allow)
        (S
          (NP (PRP me))
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (MD would)
                    (VP (VB do)
                      (ADJP (RB much) (JJR better))
                      (S
                        (VP (TO to)
                          (VP
                            (VP (VB attend)
                              (PP (TO to)
                                (NP
                                  (NP (DT the) (NN framing))
                                  (PP (IN of)
                                    (NP (NNS laws))))))
                            (, ,)
                            (CC and)
                            (VP (VB leave)
                              (NP
                                (NP (NNS people))
                                (PP (IN of)
                                  (NP (JJR less) (NN consequence)))))))))))))))))
    (, ,)
    (VP (VBP like)
      (NP
        (NP (DT those) (NN astern))
        (PP (IN of)
          (NP (PRP me))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB execute)
            (NP (PRP them))))))
    (. .)))

advmod(like-32, Then-2)
poss(lord-5, my-4)
nsubj(like-32, lord-5)
ccomp(like-32, allow-7)
dobj(allow-7, me-8)
nsubj(say-10, me-8)
aux(say-10, to-9)
xcomp(allow-7, say-10)
mark(better-16, that-11)
nsubj(better-16, you-12)
nsubj(attend-18, you-12)
nsubj(leave-26, you-12)
aux(better-16, would-13)
dep(better-16, do-14)
advmod(better-16, much-15)
ccomp(say-10, better-16)
aux(attend-18, to-17)
xcomp(better-16, attend-18)
det(framing-21, the-20)
prep_to(attend-18, framing-21)
prep_of(framing-21, laws-23)
xcomp(better-16, leave-26)
conj_and(attend-18, leave-26)
dobj(leave-26, people-27)
amod(consequence-30, less-29)
prep_of(people-27, consequence-30)
root(ROOT-0, like-32)
det(astern-34, those-33)
dobj(like-32, astern-34)
prep_of(astern-34, me-36)
aux(execute-39, to-38)
vmod(like-32, execute-39)
dobj(execute-39, them-40)

(ROOT
  (S
    (NP (`` `)
      (NP
        (NP (NNP Mind))
        (NP (PRP$ your) (JJ own) (NN business)))
      (, ,) ('' '))
    (VP (VBZ is)
      (NP (DT an) (JJ old) (NN adage)))
    (. .)))

nsubj(adage-11, Mind-2)
poss(business-5, your-3)
amod(business-5, own-4)
dep(Mind-2, business-5)
cop(adage-11, is-8)
det(adage-11, an-9)
amod(adage-11, old-10)
root(ROOT-0, adage-11)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD shall) (RB not)
        (VP (VB hurt)
          (NP
            (NP (PRP you))
            (, ,)
            (NP (PRP$ my) (NN lord))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (VBP have)
                  (ADVP (RB only))
                  (VP (VBN employed)
                    (NP (NNS words))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD shall)
        (VP (VB put)
          (NP (PRP it))
          (PRT (RP out))
          (PP (IN of)
            (NP (PRP$ your) (NN power)
              (S
                (VP (TO to)
                  (VP (VB hurt)
                    (NP (PRP us))))))))))
    (. .)))

nsubj(hurt-4, We-1)
aux(hurt-4, shall-2)
neg(hurt-4, not-3)
root(ROOT-0, hurt-4)
dobj(hurt-4, you-5)
poss(lord-8, my-7)
appos(you-5, lord-8)
mark(employed-14, as-10)
nsubj(employed-14, you-11)
aux(employed-14, have-12)
advmod(employed-14, only-13)
dep(you-5, employed-14)
dobj(employed-14, words-15)
nsubj(put-20, we-18)
aux(put-20, shall-19)
conj_but(hurt-4, put-20)
dobj(put-20, it-21)
poss(power-25, your-24)
prep_out_of(put-20, power-25)
aux(hurt-27, to-26)
vmod(power-25, hurt-27)
dobj(hurt-27, us-28)

(ROOT
  (S
    (VP (VB Come)
      (ADVP (RB aft))
      (, ,)
      (NP (PRP$ my) (NNS lads)))
    (. .)))

root(ROOT-0, Come-1)
advmod(Come-1, aft-2)
poss(lads-5, my-4)
dobj(Come-1, lads-5)

(ROOT
  (S
    (ADVP (RB Now))
    (PRN (, ,)
      (S
        (NP (PRP$ my))
        (VP (VBD lord)))
      (, ,))
    (S
      (NP (NN resistance))
      (VP (VBZ is)
        (ADJP (JJ useless))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBP are) (RB double)
        (NP (PRP$ your) (NNS numbers))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (VP (VBN caught)
          (NP (DT a) (NN Tartar)))))
    (. .) ('' '')))

advmod(useless-8, Now-1)
nsubj(lord-4, my-3)
dep(useless-8, lord-4)
nsubj(useless-8, resistance-6)
cop(useless-8, is-7)
root(ROOT-0, useless-8)
nsubj(numbers-14, we-10)
cop(numbers-14, are-11)
advmod(numbers-14, double-12)
poss(numbers-14, your-13)
conj_and(useless-8, numbers-14)
nsubj(caught-19, you-17)
aux(caught-19, have-18)
conj_and(useless-8, caught-19)
det(Tartar-21, a-20)
dobj(caught-19, Tartar-21)

(ROOT
  (S
    (NP
      (NP (NNP Lord) (NNP B))
      (: --)
      (CC and)
      (NP (NNP Mr) (NNP Stewart)))
    (VP (VBD perceived)
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (PP (IN in)
              (NP (DT an) (JJ awkward) (NN predicament)))))))
    (. .)))

nn(B-2, Lord-1)
nsubj(perceived-7, B-2)
nn(Stewart-6, Mr-5)
conj_and(B-2, Stewart-6)
nsubj(perceived-7, Stewart-6)
root(ROOT-0, perceived-7)
mark(were-10, that-8)
nsubj(were-10, they-9)
ccomp(perceived-7, were-10)
det(predicament-14, an-12)
amod(predicament-14, awkward-13)
prep_in(were-10, predicament-14)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (MD may)
        (VP (VB do)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBP please)))))))
    (, ,) ('' '')
    (VP (VBD observed))
    (NP (NNP Mr) (NNP Stewart))
    (, ,) (`` ``)
    (S (CC but)
      (NP (DT the) (NN revenue) (NNS boats))
      (VP (VBP are)
        (VP (VBG coming)
          (PRT (RP up))
          (, ,)
          (S
            (VP (VB recollect))))))
    (. .) ('' '')))

nsubj(do-4, You-2)
aux(do-4, may-3)
ccomp(observed-10, do-4)
dobj(please-7, what-5)
nsubj(please-7, you-6)
ccomp(do-4, please-7)
root(ROOT-0, observed-10)
nn(Stewart-12, Mr-11)
nsubj(observed-10, Stewart-12)
cc(coming-20, but-15)
det(boats-18, the-16)
nn(boats-18, revenue-17)
nsubj(coming-20, boats-18)
aux(coming-20, are-19)
dep(observed-10, coming-20)
prt(coming-20, up-21)
ccomp(coming-20, recollect-23)

(ROOT
  (S (`` ``)
    (VP (VB Look)
      (SBAR
        (S
          (NP (PRP you))
          (, ,)
          (ADVP (RB sir))
          (, ,)
          (VP (VBP do)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP see)
                  (NP (DT the) (NN revenue-cutter)))))))))
    (. ?) ('' '')))

root(ROOT-0, Look-2)
nsubj(do-7, you-3)
advmod(do-7, sir-5)
ccomp(Look-2, do-7)
nsubj(see-9, you-8)
ccomp(do-7, see-9)
det(revenue-cutter-11, the-10)
dobj(see-9, revenue-cutter-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Pickersgill)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Pickersgill-2)

(ROOT
  (S
    (NP (NNP Stewart))
    (VP
      (VP (VBD looked)
        (PP (IN in)
          (NP (DT that) (NN direction))))
      (CC and)
      (VP (VBD saw)
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBD was)
              (VP (VBN hidden)
                (PP (IN in)
                  (NP (DT the) (NN fog)))))))))
    (. .)))

nsubj(looked-2, Stewart-1)
nsubj(saw-7, Stewart-1)
root(ROOT-0, looked-2)
det(direction-5, that-4)
prep_in(looked-2, direction-5)
conj_and(looked-2, saw-7)
mark(hidden-11, that-8)
nsubjpass(hidden-11, she-9)
auxpass(hidden-11, was-10)
ccomp(saw-7, hidden-11)
det(fog-14, the-13)
prep_in(hidden-11, fog-14)

(ROOT
  (S (`` ``)
    (S
      (S
        (PP (IN In)
          (NP
            (NP (CD five) (NNS minutes))
            (, ,)
            (NP (NN sir))))
        (, ,)
        (NP (DT the) (NNS boats))
        (VP (MD will)
          (VP (VB be)
            (ADJP (IN out)
              (PP (IN of)
                (NP (NN sight))))
            (ADVP (RB also)))))
      (, ,)
      (CC and)
      (RB so)
      (S
        (NP (NN will))
        (NP (PRP$ your) (NN vessel)))
      (: ;)
      (S
        (NP (PRP we))
        (VP (VBP have)
          (ADVP (NN nothing))
          (S
            (VP (TO to)
              (VP (VB fear)
                (PP (IN from)
                  (NP (PRP them)))))))))
    (. .) ('' '')))

num(minutes-4, five-3)
prep_in(out-12, minutes-4)
appos(minutes-4, sir-6)
det(boats-9, the-8)
nsubj(out-12, boats-9)
aux(out-12, will-10)
cop(out-12, be-11)
root(ROOT-0, out-12)
prep_of(out-12, sight-14)
advmod(out-12, also-15)
dep(vessel-21, will-19)
poss(vessel-21, your-20)
conj_and(out-12, vessel-21)
nsubj(have-24, we-23)
nsubj(fear-27, we-23)
conj_and(out-12, have-24)
parataxis(out-12, have-24)
advmod(have-24, nothing-25)
aux(fear-27, to-26)
xcomp(have-24, fear-27)
prep_from(fear-27, them-29)

(ROOT
  (SINV (`` ``)
    (S
      (FRAG
        (INTJ (UH Indeed))
        (, ,)
        (NP (PRP$ my) (NN lord)))
      (, ,)
      (NP (PRP we))
      (VP (VBD had)
        (NP (JJR better) (NN return))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Mr) (NNP Stewart))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD perceived)
            (SBAR (IN that)
              (S
                (NP (NNP Pickersgill))
                (VP (VBD was)
                  (ADJP (JJ right)))))))))
    (. .)))

discourse(lord-5, Indeed-2)
poss(lord-5, my-4)
dep(had-8, lord-5)
nsubj(had-8, we-7)
ccomp(said-13, had-8)
amod(return-10, better-9)
dobj(had-8, return-10)
root(ROOT-0, said-13)
nn(Stewart-15, Mr-14)
nsubj(said-13, Stewart-15)
nsubj(perceived-18, Stewart-15)
rcmod(Stewart-15, perceived-18)
mark(right-22, that-19)
nsubj(right-22, Pickersgill-20)
cop(right-22, was-21)
ccomp(perceived-18, right-22)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VB beg)
        (NP (PRP$ your) (NN pardon))))
    (, ,)
    (NP (PRP you))
    (VP (MD will) (RB not)
      (VP (VB go)
        (PP (IN on)
          (NP (NN board) (PRP$ your) (NN yacht)))
        (ADVP
          (ADVP (RB so) (RB soon))
          (SBAR (IN as)
            (S
              (NP (PRP you))
              (VP (VBP expect)))))))
    (. .)))

nsubj(beg-3, I-2)
ccomp(go-10, beg-3)
poss(pardon-5, your-4)
dobj(beg-3, pardon-5)
nsubj(go-10, you-7)
aux(go-10, will-8)
neg(go-10, not-9)
root(ROOT-0, go-10)
nn(yacht-14, board-12)
poss(yacht-14, your-13)
prep_on(go-10, yacht-14)
advmod(soon-16, so-15)
advmod(go-10, soon-16)
mark(expect-19, as-17)
nsubj(expect-19, you-18)
advcl(soon-16, expect-19)
ccomp(soon-16, expect-19)

(ROOT
  (S
    (VP
      (VP (VB Take)
        (NP (DT the) (NNS oars))
        (PRT (RP out))
        (PP (IN of)
          (NP
            (NP (DT the) (NN boat))
            (: ;)
            (NP
              (NP (PRP$ my) (NNS lads))
              (, ,)
              (NP
                (NP (CD two)
                  (CC or)
                  (CD three))
                (PP (IN of)
                  (NP (PRP you))))
              (, ,)))))
      (CC and)
      (VP (VB throw)
        (PP (IN in)
          (NP
            (NP (DT a) (NN couple))
            (PP (IN of)
              (NP (PRP$ our) (NNS paddles)))))
        (SBAR (IN for)
          (S
            (NP (PRP them))
            (VP (TO to)
              (VP (VB reach)
                (NP (DT the) (NN shore))
                (PP (IN with))))))))
    (. .)))

root(ROOT-0, Take-1)
det(oars-3, the-2)
dobj(Take-1, oars-3)
det(boat-7, the-6)
prep_out_of(Take-1, boat-7)
poss(lads-10, my-9)
dep(boat-7, lads-10)
appos(lads-10, two-12)
appos(lads-10, three-14)
conj_or(two-12, three-14)
prep_of(two-12, you-16)
conj_and(Take-1, throw-19)
det(couple-22, a-21)
prep_in(throw-19, couple-22)
poss(paddles-25, our-24)
prep_of(couple-22, paddles-25)
mark(reach-29, for-26)
nsubj(reach-29, them-27)
aux(reach-29, to-28)
advcl(throw-19, reach-29)
xcomp(throw-19, reach-29)
det(shore-31, the-30)
dobj(reach-29, shore-31)
prep(reach-29, with-32)

(ROOT
  (S
    (NP
      (NP (DT The) (NN rest))
      (PP (IN of)
        (NP (PRP you))))
    (VP (VB knock)
      (PRT (RP down))
      (NP
        (NP (DT the) (JJ first) (NN man))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ offers)
              (S
                (VP (TO to)
                  (VP (VB resist)))))))))
    (. .)))

det(rest-2, The-1)
nsubj(knock-5, rest-2)
prep_of(rest-2, you-4)
root(ROOT-0, knock-5)
prt(knock-5, down-6)
det(man-9, the-7)
amod(man-9, first-8)
dobj(knock-5, man-9)
nsubj(offers-11, man-9)
nsubj(resist-13, man-9)
rcmod(man-9, offers-11)
aux(resist-13, to-12)
xcomp(offers-11, resist-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are) (RB not)
      (ADJP (JJ aware))
      (, ,)
      (ADVP (RB perhaps))
      (, ,)
      (NP
        (NP (PRP$ my) (NN lord))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBN attempted)
                (NP (JJ _) (NN piracy) (NNS _))
                (PP (IN on)
                  (NP (DT the) (JJ high) (NNS seas)))))))))
    (. ?) ('' '')))

nsubj(aware-4, You-1)
cop(aware-4, are-2)
neg(aware-4, not-3)
root(ROOT-0, aware-4)
advmod(aware-4, perhaps-6)
poss(lord-9, my-8)
dep(aware-4, lord-9)
mark(attempted-14, that-11)
nsubj(attempted-14, you-12)
aux(attempted-14, have-13)
dep(lord-9, attempted-14)
amod(_-17, _-15)
nn(_-17, piracy-16)
dobj(attempted-14, _-17)
det(seas-21, the-19)
amod(seas-21, high-20)
prep_on(attempted-14, seas-21)

(ROOT
  (S
    (NP (NNP Stewart))
    (VP (VBD looked)
      (PP (IN at)
        (NP (NNP Lord) (NNP B))))
    (: --) (. .)))

nsubj(looked-2, Stewart-1)
root(ROOT-0, looked-2)
nn(B-5, Lord-4)
prep_at(looked-2, B-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ true) (RB enough)))
    (. .)))

nsubj(true-3, It-1)
cop(true-3, was-2)
root(ROOT-0, true-3)
advmod(true-3, enough-4)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS men))
        (PP (IN of)
          (NP (DT the) (NN yacht))))
      (VP (MD could)
        (VP (VB offer)
          (NP (DT no) (NN resistance)))))
    (: ;)
    (S
      (NP (DT the) (NNS oars))
      (VP (VBD were)
        (VP (VBN taken)
          (PRT (RP out))
          (PP (IN of)
            (NP
              (NP (DT the) (NN boat))
              (CC and)
              (NP
                (NP (DT the) (NNS men))
                (VP (VBN put)
                  (PP (IN in)
                    (ADVP (RB again))))))))))
    (. .)))

det(men-2, The-1)
nsubj(offer-7, men-2)
det(yacht-5, the-4)
prep_of(men-2, yacht-5)
aux(offer-7, could-6)
root(ROOT-0, offer-7)
neg(resistance-9, no-8)
dobj(offer-7, resistance-9)
det(oars-12, the-11)
nsubjpass(taken-14, oars-12)
auxpass(taken-14, were-13)
parataxis(offer-7, taken-14)
det(boat-18, the-17)
prep_out_of(taken-14, boat-18)
det(men-21, the-20)
prep_out_of(taken-14, men-21)
conj_and(boat-18, men-21)
vmod(men-21, put-22)
prep(put-22, in-23)
pcomp(in-23, again-24)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ My) (NN lord))
      (PRN (, ,) ('' '')
        (SINV
          (VP (VBD said))
          (NP
            (NP (NNP Pickersgill))
            (, ,) (`` ``)
            (S
              (NP (PRP$ your) (NN boat))
              (VP (VBZ is)
                (ADJP (JJ manned))))))
        (, ,))
      (VP (VBP do)
        (NP (PRP me))
        (NP (DT the) (NN favour)
          (S
            (VP (TO to)
              (VP (VB step)
                (PP (IN into)
                  (NP (PRP it)))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP you))
      (, ,)
      (ADVP (RB sir))
      (, ,)
      (VP (VBP do)
        (NP (DT the) (JJ same))))
    (. .)))

poss(lord-3, My-2)
nsubj(do-15, lord-3)
parataxis(do-15, said-6)
nsubj(said-6, Pickersgill-7)
poss(boat-11, your-10)
nsubj(manned-13, boat-11)
cop(manned-13, is-12)
dep(Pickersgill-7, manned-13)
root(ROOT-0, do-15)
iobj(do-15, me-16)
det(favour-18, the-17)
dobj(do-15, favour-18)
aux(step-20, to-19)
vmod(favour-18, step-20)
prep_into(step-20, it-22)
nsubj(do-29, you-25)
advmod(do-29, sir-27)
conj_and(do-15, do-29)
det(same-31, the-30)
dobj(do-29, same-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should)
      (VP (VB be)
        (ADJP (JJ sorry)
          (S
            (VP (TO to)
              (VP (VB lay)
                (NP (PRP$ my) (NNS hands))
                (PP (IN upon)
                  (NP
                    (NP
                      (NP (DT a) (NN peer))
                      (PP (IN of)
                        (NP (DT the) (NN realm))))
                    (, ,)
                    (CC or)
                    (NP
                      (NP (DT a) (NN king) (POS 's))
                      (NN officer))))
                (PP
                  (ADVP (RB even))
                  (IN on)
                  (NP (DT half) (NN pay)))))))))
    (. .) ('' '')))

nsubj(sorry-4, I-1)
nsubj(lay-6, I-1)
aux(sorry-4, should-2)
cop(sorry-4, be-3)
root(ROOT-0, sorry-4)
aux(lay-6, to-5)
xcomp(sorry-4, lay-6)
poss(hands-8, my-7)
dobj(lay-6, hands-8)
det(peer-11, a-10)
prep_upon(lay-6, peer-11)
det(realm-14, the-13)
prep_of(peer-11, realm-14)
det(king-18, a-17)
poss(officer-20, king-18)
prep_upon(lay-6, officer-20)
conj_or(peer-11, officer-20)
advmod(lay-6, even-21)
det(pay-24, half-23)
prep_on(lay-6, pay-24)

(ROOT
  (S
    (S
      (NP (NNP Remonstrance))
      (VP (VBD was)
        (ADJP (JJ vain))))
    (: ;)
    (S
      (S
        (NP (PRP$ his) (NN lordship))
        (VP (VBD was)
          (VP (VBN led)
            (PP (TO to)
              (NP (DT the) (NN boat)))
            (PP (IN by)
              (NP
                (NP (CD two))
                (PP (IN of)
                  (NP (DT the) (NNS smugglers))))))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Stewart))
        (VP (VBD followed))))
    (. .)))

nsubj(vain-3, Remonstrance-1)
cop(vain-3, was-2)
root(ROOT-0, vain-3)
poss(lordship-6, his-5)
nsubjpass(led-8, lordship-6)
auxpass(led-8, was-7)
parataxis(vain-3, led-8)
det(boat-11, the-10)
prep_to(led-8, boat-11)
agent(led-8, two-13)
det(smugglers-16, the-15)
prep_of(two-13, smugglers-16)
nsubj(followed-20, Stewart-19)
parataxis(vain-3, followed-20)
conj_and(led-8, followed-20)

(ROOT
  (S
    (S (`` ``)
      (NP (PRP I))
      (VP (MD will)
        (VP (VB leave)
          (NP
            (NP
              (NP (PRP$ your) (NNS oars))
              (, ,)
              (NP (PRP$ my) (NN lord))
              (, ,))
            (PP (IN at)
              (NP (DT the) (NNP Weymouth) (NNP Custom-house)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP trust)
        (SBAR
          (S
            (NP (DT this))
            (VP (MD will)
              (VP (VB be)
                (NP (DT a) (NN lesson))
                (PP (TO to)
                  (NP (PRP you)))
                (PP (IN in)
                  (NP (NN future)
                    (S
                      (VP (TO to) (`` `)
                        (VP (VB mind)
                          (NP (PRP$ your) (JJ own) (NN business)))))))))))))
    (. .) ('' ') ('' '')))

nsubj(leave-4, I-2)
aux(leave-4, will-3)
root(ROOT-0, leave-4)
poss(oars-6, your-5)
dobj(leave-4, oars-6)
poss(lord-9, my-8)
appos(oars-6, lord-9)
det(Custom-house-14, the-12)
nn(Custom-house-14, Weymouth-13)
prep_at(oars-6, Custom-house-14)
nsubj(trust-18, I-17)
conj_and(leave-4, trust-18)
nsubj(lesson-23, this-19)
aux(lesson-23, will-20)
cop(lesson-23, be-21)
det(lesson-23, a-22)
ccomp(trust-18, lesson-23)
prep_to(lesson-23, you-25)
prep_in(lesson-23, future-27)
aux(mind-30, to-28)
vmod(future-27, mind-30)
poss(business-33, your-31)
amod(business-33, own-32)
dobj(mind-30, business-33)

(ROOT
  (S
    (NP (DT The) (NN boat))
    (VP
      (VP (VBD was)
        (VP (VBN shoved)
          (PRT (RP off))
          (PP (IN from)
            (NP (DT the) (NN sloop)))
          (PP (IN by)
            (NP (DT the) (NNS smugglers)))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADVP (RB soon))
        (VP (VBN lost)
          (NP (NN sight))
          (PP (IN of) (IN in)
            (NP
              (NP (DT the) (NN fog))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD had)
                    (ADVP (RB now))
                    (VP (VBN covered)
                      (NP
                        (NP (DT the) (NN revenue) (NNS boats))
                        (CONJP (RB as) (RB well) (IN as))
                        (NP (DT the) (NN yacht)))))))))
          (, ,)
          (PP (IN at)
            (NP
              (NP (DT the) (JJ same) (NN time))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD brought)
                    (PRT (RP down))
                    (NP (DT a) (NN breeze))
                    (PP (IN from)
                      (NP (DT the) (NN eastward)))))))))))
    (. .)))

det(boat-2, The-1)
nsubjpass(shoved-4, boat-2)
nsubjpass(lost-16, boat-2)
auxpass(shoved-4, was-3)
root(ROOT-0, shoved-4)
prt(shoved-4, off-5)
det(sloop-8, the-7)
prep_from(shoved-4, sloop-8)
det(smugglers-11, the-10)
agent(shoved-4, smugglers-11)
auxpass(lost-16, was-14)
advmod(lost-16, soon-15)
conj_and(shoved-4, lost-16)
dobj(lost-16, sight-17)
dep(lost-16, of-18)
det(fog-21, the-20)
prep_in(lost-16, fog-21)
nsubj(covered-26, fog-21)
aux(covered-26, had-24)
advmod(covered-26, now-25)
rcmod(fog-21, covered-26)
det(boats-29, the-27)
nn(boats-29, revenue-28)
dobj(covered-26, boats-29)
det(yacht-34, the-33)
dobj(covered-26, yacht-34)
conj_and(boats-29, yacht-34)
det(time-39, the-37)
amod(time-39, same-38)
prep_at(lost-16, time-39)
nsubj(brought-41, it-40)
rcmod(time-39, brought-41)
prt(brought-41, down-42)
det(breeze-44, a-43)
dobj(brought-41, breeze-44)
det(eastward-47, the-46)
prep_from(brought-41, eastward-47)

(ROOT
  (SINV (`` ``)
    (NP
      (NP (NNP Haul))
      (PP (TO to)
        (NP
          (NP (DT the) (NN wind))
          (, ,)
          (NP (NNP Morrison)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Pickersgill))
    (, ,) (`` ``)
    (S
      (S
        (NP (PRP we))
        (VP (MD will)
          (VP (VB stand)
            (PRT (RP out))
            (S
              (VP (TO to)
                (VP (VB get)
                  (ADJP (JJ rid))
                  (PP (IN of)
                    (NP (DT the) (NNS boats)))))))))
      (: ;)
      (S
        (SBAR (IN if)
          (S
            (NP (PRP they))
            (VP (VBP pull)
              (PRT (RP on)))))
        (NP (PRP they))
        (VP (MD will)
          (VP (VB take)
            (NP (PRP it))
            (PP (IN for)
              (S
                (VP (JJ granted))))
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (MD shall)
                  (VP (VB run)
                    (PP (IN into)
                      (NP
                        (NP (DT the) (NN bay))
                        (, ,)
                        (SBAR (IN as)
                          (SINV
                            (VP (MD will))
                            (NP (DT the) (NN revenue-cutter))))))))))))))
    (. .) ('' '')))

dep(said-10, Haul-2)
det(wind-5, the-4)
prep_to(Haul-2, wind-5)
appos(wind-5, Morrison-7)
root(ROOT-0, said-10)
nsubj(said-10, Pickersgill-11)
nsubj(stand-16, we-14)
nsubj(rid-20, we-14)
aux(stand-16, will-15)
ccomp(said-10, stand-16)
prt(stand-16, out-17)
aux(rid-20, to-18)
dep(rid-20, get-19)
xcomp(stand-16, rid-20)
det(boats-23, the-22)
prep_of(rid-20, boats-23)
mark(pull-27, if-25)
nsubj(pull-27, they-26)
advcl(take-31, pull-27)
prt(pull-27, on-28)
nsubj(take-31, they-29)
aux(take-31, will-30)
parataxis(stand-16, take-31)
dobj(take-31, it-32)
prepc_for(take-31, granted-34)
mark(run-38, that-35)
nsubj(run-38, we-36)
aux(run-38, shall-37)
ccomp(take-31, run-38)
det(bay-41, the-40)
prep_into(run-38, bay-41)
dep(will-44, as-43)
dep(bay-41, will-44)
det(revenue-cutter-46, the-45)
nsubj(will-44, revenue-cutter-46)

(ROOT
  (S
    (NP (NNP Pickersgill)
      (CC and)
      (NNP Corbett))
    (VP (VBD were)
      (PP (IN in)
        (NP (NN conversation) (NN abaft)))
      (PP (IN for)
        (NP (DT a) (JJ short) (NN time)))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (JJ former))
          (VP (VBD desired)
            (NP (DT the) (NN course)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN altered)
                      (NP (CD two) (NNS points)))))))))))
    (. .)))

nsubj(were-4, Pickersgill-1)
conj_and(Pickersgill-1, Corbett-3)
nsubj(were-4, Corbett-3)
root(ROOT-0, were-4)
nn(abaft-7, conversation-6)
prep_in(were-4, abaft-7)
det(time-11, a-9)
amod(time-11, short-10)
prep_for(were-4, time-11)
advmod(desired-16, when-13)
det(former-15, the-14)
nsubj(desired-16, former-15)
advcl(were-4, desired-16)
det(course-18, the-17)
dobj(desired-16, course-18)
aux(altered-21, to-19)
auxpass(altered-21, be-20)
vmod(course-18, altered-21)
num(points-23, two-22)
dobj(altered-21, points-23)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (VP
          (VP (VB Keep)
            (NP (NN silence))
            (NP
              (NP (DT all))
              (PP (IN of)
                (NP
                  (NP (PRP you))
                  (, ,)
                  (NP (PRP$ my) (NNS lads))
                  (, ,)))))
          (CC and)
          (VP (VB let)
            (NP (PRP me)))))
      (VP (VBP know)
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP hear)
              (NP
                (NP (DT a) (NN gun))
                (CC or)
                (NP (DT a) (NN bell)))
              (PP (IN from)
                (NP (DT the) (NN yacht))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Pickersgill))
    (. .)))

csubj(know-14, Keep-2)
iobj(Keep-2, silence-3)
dobj(Keep-2, all-4)
prep_of(all-4, you-6)
poss(lads-9, my-8)
appos(you-6, lads-9)
conj_and(Keep-2, let-12)
csubj(know-14, let-12)
dobj(let-12, me-13)
ccomp(said-28, know-14)
mark(hear-17, if-15)
nsubj(hear-17, you-16)
advcl(know-14, hear-17)
det(gun-19, a-18)
dobj(hear-17, gun-19)
det(bell-22, a-21)
dobj(hear-17, bell-22)
conj_or(gun-19, bell-22)
det(yacht-25, the-24)
prep_from(hear-17, yacht-25)
root(ROOT-0, said-28)
nsubj(said-28, Pickersgill-29)

(ROOT
  (S (`` ``)
    (S
      (S
        (NP (EX There))
        (VP (VBZ is)
          (NP (DT a) (NN gun))))
      (, ,)
      (NP
        (NP (NN sir))
        (, ,)
        (ADJP (JJ close)
          (PP (TO to)
            (NP (PRP us))))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (NNS men))))))
    (: ;) (`` ``)
    (S
      (NP (DT the) (NN sound))
      (VP (VBD was)
        (ADVP (RB right) (RB ahead))))
    (. .) ('' '')))

expl(is-3, There-2)
ccomp(said-14, is-3)
det(gun-5, a-4)
nsubj(is-3, gun-5)
nsubj(said-14, sir-7)
prep_close_to(sir-7, us-11)
root(ROOT-0, said-14)
dobj(said-14, one-15)
det(men-18, the-17)
prep_of(one-15, men-18)
det(sound-22, the-21)
nsubj(was-23, sound-22)
parataxis(said-14, was-23)
advmod(ahead-25, right-24)
advmod(was-23, ahead-25)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (MD will)
      (VP (VB do))
      (, ,)
      (VP (VB keep)
        (NP (PRP her))
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP (VBZ goes))))))
    (. .)))

nsubj(do-4, That-2)
aux(do-4, will-3)
root(ROOT-0, do-4)
dep(do-4, keep-6)
dobj(keep-6, her-7)
mark(goes-10, as-8)
nsubj(goes-10, she-9)
advcl(keep-6, goes-10)

(ROOT
  (S
    (S
      (VP (VB Aft)
        (ADVP (RB here))
        (, ,)
        (NP (PRP$ my) (NNS lads))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (MD can) (RB not)
        (VP (VB run)
          (NP (PRP$ our) (NN cargo))
          (PP (IN in)
            (NP (DT the) (NN bay)))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (DT the) (NN cutter))
              (VP (VBZ has)
                (VP (VBN been)
                  (VP (VBN seen)
                    (S
                      (VP (TO to)
                        (VP (VB chase)
                          (NP (PRP us)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD will) (RB all)
        (VP (VB be)
          (PP (IN on)
            (NP
              (NP (DT the) (NN look-out))
              (PP (IN at)
                (NP
                  (NP (DT the) (JJ preventive) (NNS stations))
                  (PP (IN for)
                    (NP (PRP us)))))))
          (PP (IN on)
            (NP (NN shore))))))
    (. .)))

root(ROOT-0, Aft-1)
advmod(Aft-1, here-2)
poss(lads-5, my-4)
dobj(Aft-1, lads-5)
nsubj(run-10, we-7)
aux(run-10, can-8)
neg(run-10, not-9)
conj_and(Aft-1, run-10)
poss(cargo-12, our-11)
dobj(run-10, cargo-12)
det(bay-15, the-14)
prep_in(run-10, bay-15)
mark(seen-22, for-17)
det(cutter-19, the-18)
nsubjpass(seen-22, cutter-19)
nsubj(chase-24, cutter-19)
aux(seen-22, has-20)
auxpass(seen-22, been-21)
advcl(run-10, seen-22)
aux(chase-24, to-23)
xcomp(seen-22, chase-24)
dobj(chase-24, us-25)
nsubj(be-31, they-28)
aux(be-31, will-29)
advmod(be-31, all-30)
conj_and(Aft-1, be-31)
det(look-out-34, the-33)
prep_on(be-31, look-out-34)
det(stations-38, the-36)
amod(stations-38, preventive-37)
prep_at(look-out-34, stations-38)
prep_for(stations-38, us-40)
prep_on(be-31, shore-42)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP$ my))
    (VP (VBZ lads)
      (PRN (, ,)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBN made)
              (PRT (RP up))
              (NP
                (NP (PRP$ my) (NN mind))
                (SBAR
                  (WHNP (WDT that))
                  (, ,)
                  (S
                    (PP (IN as)
                      (NP (DT these) (NN yacht) (NNS gentlemen)))
                    (VP (VBP have)
                      (VP (VBN thought)
                        (ADJP (JJ proper)
                          (S
                            (VP (TO to)
                              (VP (VB interfere)))))))))))))
        (, ,))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD will)
            (VP (VB take)
              (NP
                (NP (NN possession))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN yacht))
                    (PP (IN for)
                      (NP (DT a) (JJ few) (NNS days)))))))))))
    (. .)))

advmod(lads-4, Now-1)
nsubj(lads-4, my-3)
root(ROOT-0, lads-4)
nsubj(made-8, I-6)
aux(made-8, have-7)
parataxis(lads-4, made-8)
prt(made-8, up-9)
poss(mind-11, my-10)
dobj(made-8, mind-11)
nsubj(thought-19, mind-11)
det(gentlemen-17, these-15)
nn(gentlemen-17, yacht-16)
prep_as(thought-19, gentlemen-17)
aux(thought-19, have-18)
rcmod(mind-11, thought-19)
acomp(thought-19, proper-20)
aux(interfere-22, to-21)
xcomp(proper-20, interfere-22)
mark(take-27, that-24)
nsubj(take-27, I-25)
aux(take-27, will-26)
ccomp(lads-4, take-27)
dobj(take-27, possession-28)
det(yacht-31, the-30)
prep_of(possession-28, yacht-31)
det(days-35, a-33)
amod(days-35, few-34)
prep_for(yacht-31, days-35)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD shall) (RB then)
      (VP
        (VP (VB outsail)
          (NP (NN everything)))
        (, ,)
        (VP (VB go)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP we))
              (VP (VBP like)
                (ADJP (JJ unsuspected))))))
        (, ,)
        (CC and)
        (VP (VB land)
          (NP (PRP$ our) (NN cargo))
          (PP (IN with)
            (NP (NN ease))))))
    (. .)))

nsubj(outsail-4, We-1)
nsubj(go-7, We-1)
nsubj(land-14, We-1)
aux(outsail-4, shall-2)
advmod(outsail-4, then-3)
root(ROOT-0, outsail-4)
dobj(outsail-4, everything-5)
conj_and(outsail-4, go-7)
advmod(like-10, where-8)
nsubj(like-10, we-9)
advcl(go-7, like-10)
acomp(like-10, unsuspected-11)
conj_and(outsail-4, land-14)
poss(cargo-16, our-15)
dobj(land-14, cargo-16)
prep_with(land-14, ease-18)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB run)
          (PP (IN alongside)
            (PP (IN of)
              (NP (PRP her)))))))
    (: --)
    (S
      (S
        (NP (PRP she))
        (VP (MD can)
          (VP (VB have))))
      (CC but)
      (S
        (NP
          (NP (JJ few) (NNS hands))
          (PP (IN on)
            (NP
              (NP (NN board))
              (: ;)
              (CC and)
              (NP (NN mind))
              (, ,))))
        (VP (VBP do) (RB not)
          (VP
            (VP (VB hurt)
              (NP (NN anybody)))
            (, ,)
            (CC but)
            (VP (VB be)
              (ADJP (JJ civil)
                (CC and)
                (JJ obey)))
            (NP (PRP$ my) (NNS orders))))))
    (. .)))

nsubj(run-3, I-1)
aux(run-3, shall-2)
root(ROOT-0, run-3)
prepc_alongside_of(run-3, of-5)
pobj(run-3, her-6)
nsubj(have-10, she-8)
aux(have-10, can-9)
parataxis(run-3, have-10)
amod(hands-13, few-12)
nsubj(hurt-22, hands-13)
nsubj(civil-27, hands-13)
prep_on(hands-13, board-15)
prep_on(hands-13, mind-18)
conj_and(board-15, mind-18)
aux(hurt-22, do-20)
neg(hurt-22, not-21)
parataxis(run-3, hurt-22)
conj_but(have-10, hurt-22)
dobj(hurt-22, anybody-23)
cop(civil-27, be-26)
conj_but(have-10, civil-27)
conj_but(hurt-22, civil-27)
conj_but(hurt-22, obey-29)
conj_and(civil-27, obey-29)
poss(orders-31, my-30)
dobj(hurt-22, orders-31)

(ROOT
  (S
    (NP
      (NP (NNP Morrison))
      (, ,)
      (NP (PRP you))
      (CC and)
      (NP
        (NP (PRP$ your) (CD four) (NNS men))
        (CC and)
        (NP (DT the) (NN boy))))
    (VP (MD will)
      (VP
        (VP (VB remain)
          (PP (IN on)
            (NP (NN board)))
          (ADVP (RB as) (RB before)))
        (, ,)
        (CC and)
        (VP (VB take)
          (NP (DT the) (NN vessel))
          (PP (TO to)
            (NP (NNP Cherbourg)))
          (, ,)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP we))
              (VP (MD will)
                (VP (VB join)
                  (NP (PRP you)))))))))
    (. .) ('' '')))

nsubj(remain-12, Morrison-1)
nsubj(take-19, Morrison-1)
conj_and(Morrison-1, you-3)
nsubj(remain-12, you-3)
poss(men-7, your-5)
num(men-7, four-6)
conj_and(Morrison-1, men-7)
nsubj(remain-12, men-7)
det(boy-10, the-9)
conj_and(Morrison-1, boy-10)
conj_and(men-7, boy-10)
aux(remain-12, will-11)
root(ROOT-0, remain-12)
prep_on(remain-12, board-14)
advmod(before-16, as-15)
advmod(remain-12, before-16)
conj_and(remain-12, take-19)
det(vessel-21, the-20)
dobj(take-19, vessel-21)
prep_to(take-19, Cherbourg-23)
advmod(join-28, where-25)
nsubj(join-28, we-26)
aux(join-28, will-27)
advcl(take-19, join-28)
dobj(join-28, you-29)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ short) (NN time)))
    (NP (DT another) (NN gun))
    (VP (VBD was)
      (VP (VBN fired)
        (PP (IN from)
          (NP (DT the) (NN yacht)))))
    (. .)))

det(time-4, a-2)
amod(time-4, short-3)
prep_in(fired-8, time-4)
det(gun-6, another-5)
nsubjpass(fired-8, gun-6)
auxpass(fired-8, was-7)
root(ROOT-0, fired-8)
det(yacht-11, the-10)
prep_from(fired-8, yacht-11)

(ROOT
  (S
    (S
      (NP
        (NP (DT Those))
        (PP (IN on)
          (NP
            (NP (NN board))
            (, ,)
            (NP (RB particularly) (DT the) (NNS ladies))
            (, ,))))
      (VP (VBD were)
        (ADJP (JJ alarmed))))
    (: ;)
    (S
      (S
        (NP (DT the) (NN fog))
        (VP (VBD was)
          (ADJP (RB very) (JJ thick))))
      (, ,)
      (CC and)
      (S
        (NP (PRP they))
        (VP (MD could) (RB not)
          (VP (VB distinguish)
            (NP
              (NP (DT the) (NN length))
              (PP (IN of)
                (NP (DT the) (NN vessel))))))))
    (. .)))

nsubj(alarmed-10, Those-1)
prep_on(Those-1, board-3)
advmod(ladies-7, particularly-5)
det(ladies-7, the-6)
appos(board-3, ladies-7)
cop(alarmed-10, were-9)
root(ROOT-0, alarmed-10)
det(fog-13, the-12)
nsubj(thick-16, fog-13)
cop(thick-16, was-14)
advmod(thick-16, very-15)
parataxis(alarmed-10, thick-16)
nsubj(distinguish-22, they-19)
aux(distinguish-22, could-20)
neg(distinguish-22, not-21)
parataxis(alarmed-10, distinguish-22)
conj_and(thick-16, distinguish-22)
det(length-24, the-23)
dobj(distinguish-22, length-24)
det(vessel-27, the-26)
prep_of(length-24, vessel-27)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD had)
        (VP (VBN seen)
          (NP (DT the) (NN boat) (NN board))))
      (, ,)
      (CC but)
      (VP (VBD had) (RB not)
        (VP (VBN seen)
          (SBAR
            (S
              (NP (PRP her))
              (VP (VBD turned)
                (NP (NN adrift))
                (PP (IN without)
                  (NP (NNS oars)))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (DT the) (NN fog))
                    (VP (VBD came)
                      (PRT (RP on))
                      (ADVP (RB just))
                      (PP (IN at)
                        (NP (DT that) (NN time))))))))))))
    (. .)))

nsubj(seen-3, They-1)
nsubj(seen-11, They-1)
aux(seen-3, had-2)
root(ROOT-0, seen-3)
det(board-6, the-4)
nn(board-6, boat-5)
dobj(seen-3, board-6)
aux(seen-11, had-9)
neg(seen-11, not-10)
conj_but(seen-3, seen-11)
nsubj(turned-13, her-12)
ccomp(seen-11, turned-13)
dobj(turned-13, adrift-14)
prep_without(turned-13, oars-16)
mark(came-21, as-18)
det(fog-20, the-19)
nsubj(came-21, fog-20)
advcl(turned-13, came-21)
prt(came-21, on-22)
advmod(came-21, just-23)
det(time-26, that-25)
prep_at(came-21, time-26)

(ROOT
  (S
    (S
      (NP (DT The) (NN yacht))
      (VP (VBD was)
        (VP (VBN left)
          (PP (IN with)
            (NP
              (NP (RB only) (CD three) (NN seamen))
              (PP (IN on)
                (NP (NN board))))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (SINV (MD should)
          (NP (PRP it))
          (VP (VB come)
            (PP (IN on)
              (NP (JJ bad) (NN weather))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD were)
        (PP (IN in)
          (NP (DT an) (JJ awkward) (NN predicament)))))
    (. .)))

det(yacht-2, The-1)
nsubjpass(left-4, yacht-2)
auxpass(left-4, was-3)
root(ROOT-0, left-4)
advmod(seamen-8, only-6)
num(seamen-8, three-7)
prep_with(left-4, seamen-8)
prep_on(seamen-8, board-10)
aux(come-15, should-13)
nsubj(come-15, it-14)
advcl(were-21, come-15)
amod(weather-18, bad-17)
prep_on(come-15, weather-18)
nsubj(were-21, they-20)
conj_and(left-4, were-21)
det(predicament-25, an-23)
amod(predicament-25, awkward-24)
prep_in(were-21, predicament-25)

(ROOT
  (S
    (NP (NNP Mr) (NNP Hautaine))
    (VP
      (VP (VBD had)
        (VP (VBN taken)
          (NP (DT the) (NN command))))
      (, ,)
      (CC and)
      (VP (VBD ordered)
        (NP (DT the) (NNS guns))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN fired)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN boat))
                    (VP (MD might)
                      (VP (VB be)
                        (VP (VBN enabled)
                          (S
                            (VP (TO to)
                              (VP (VB find)
                                (NP (PRP them))))))))))))))))
    (. .)))

nn(Hautaine-2, Mr-1)
nsubj(taken-4, Hautaine-2)
nsubj(ordered-9, Hautaine-2)
aux(taken-4, had-3)
root(ROOT-0, taken-4)
det(command-6, the-5)
dobj(taken-4, command-6)
conj_and(taken-4, ordered-9)
det(guns-11, the-10)
dobj(ordered-9, guns-11)
nsubjpass(fired-14, guns-11)
aux(fired-14, to-12)
auxpass(fired-14, be-13)
xcomp(ordered-9, fired-14)
mark(enabled-20, that-15)
det(boat-17, the-16)
nsubjpass(enabled-20, boat-17)
nsubj(find-22, boat-17)
aux(enabled-20, might-18)
auxpass(enabled-20, be-19)
ccomp(fired-14, enabled-20)
aux(find-22, to-21)
xcomp(enabled-20, find-22)
dobj(find-22, them-23)

(ROOT
  (S
    (NP (DT The) (JJ fourth) (NN gun))
    (VP (VBD was)
      (VP (VBG loading) (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBD perceived)
              (NP
                (NP (DT the) (NN smuggler) (POS 's))
                (NN cutter) (NN close))
              (PP (TO to)
                (S
                  (NP (PRP them))
                  (VP (VBG looming)
                    (PP (IN through)
                      (NP (DT the) (NN fog)))))))))))
    (. .)))

det(gun-3, The-1)
amod(gun-3, fourth-2)
nsubj(loading-5, gun-3)
aux(loading-5, was-4)
root(ROOT-0, loading-5)
advmod(perceived-9, when-7)
nsubj(perceived-9, they-8)
advcl(loading-5, perceived-9)
det(smuggler-11, the-10)
poss(close-14, smuggler-11)
nn(close-14, cutter-13)
dobj(perceived-9, close-14)
nsubj(looming-17, them-16)
prepc_to(perceived-9, looming-17)
det(fog-20, the-19)
prep_through(looming-17, fog-20)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Here))
      (NP (PRP they))
      (VP (VBP are)))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD cried))
        (NP (DT the) (NN seamen))))
    (: ;) (`` ``)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (VP (VBN brought)
          (PP
            (ADVP
              (NP (DT the) (NN prize))
              (IN along))
            (IN with)
            (NP (PRP them))))))
    (. !)))

advmod(are-4, Here-2)
nsubj(are-4, they-3)
root(ROOT-0, are-4)
dep(are-4, cried-7)
det(seamen-9, the-8)
nsubj(cried-7, seamen-9)
nsubj(brought-15, they-13)
aux(brought-15, have-14)
conj_and(are-4, brought-15)
det(prize-17, the-16)
npadvmod(brought-15, prize-17)
prep_along_with(brought-15, them-20)

(ROOT
  (FRAG
    (NP
      (NP (CD Three) (NNS cheers))
      (PP (IN for)
        (NP (DT the) (NNP _) (NNP Arrow) (NNP _))))
    (. !) ('' '')))

num(cheers-2, Three-1)
root(ROOT-0, cheers-2)
det(_-7, the-4)
nn(_-7, _-5)
nn(_-7, Arrow-6)
prep_for(cheers-2, _-7)

(ROOT
  (S (`` ``)
    (VP (VB Hilloa))
    (. !)))

root(ROOT-0, Hilloa-2)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD 'll)
      (VP (VB be)
        (PP (IN on)
          (NP
            (NP (NN board))
            (PP (IN of)
              (NP (PRP us)))))))
    (. ?) ('' '')))

nsubj(be-3, You-1)
aux(be-3, 'll-2)
root(ROOT-0, be-3)
prep_on(be-3, board-5)
prep_of(board-5, us-7)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Hautaine)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Hautaine-2)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (SBAR
          (WHADJP (RB exactly) (WP what))
          (S
            (NP (PRP I))
            (VP (VBP intend)
              (S
                (VP (TO to)
                  (VP (VB be)))))))
        (, ,)
        (ADVP (RB sir))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Pickersgill))
    (, ,)
    (S
      (VP (VBG jumping)
        (PP (IN on)
          (NP
            (NP (DT the) (NN quarter-deck))
            (, ,)
            (VP (VBN followed)
              (PP (IN by)
                (NP (PRP$ his) (NNS men))))))))
    (. .)))

nsubj('s-3, That-2)
ccomp(replied-14, 's-3)
advmod(what-5, exactly-4)
dep(intend-7, what-5)
nsubj(intend-7, I-6)
nsubj(be-9, I-6)
ccomp('s-3, intend-7)
aux(be-9, to-8)
xcomp(intend-7, be-9)
advmod('s-3, sir-11)
root(ROOT-0, replied-14)
nsubj(replied-14, Pickersgill-15)
vmod(replied-14, jumping-17)
det(quarter-deck-20, the-19)
prep_on(jumping-17, quarter-deck-20)
vmod(quarter-deck-20, followed-22)
poss(men-25, his-24)
agent(followed-22, men-25)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who) (DT the) (NN devil))
    (SQ (VBP are)
      (NP (PRP you)))
    (. ?) ('' '')))

det(devil-4, Who-2)
det(devil-4, the-3)
root(ROOT-0, devil-4)
cop(devil-4, are-5)
nsubj(devil-4, you-6)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (ADVP (RB exactly))
        (NP
          (NP (DT the) (JJ same) (NN question))
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBD asked)
                (NP (NNP Lord) (NNP B))))))
        (: --)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD boarded)
              (NP (PRP us)))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Pickersgill))
    (, ,)
    (S
      (VP (VBG taking)
        (PRT (RP off))
        (NP (PRP$ his) (NN hat))
        (PP (TO to)
          (NP (DT the) (NNS ladies)))))
    (. .)))

nsubj(question-7, That-2)
cop(question-7, 's-3)
advmod(question-7, exactly-4)
det(question-7, the-5)
amod(question-7, same-6)
ccomp(replied-20, question-7)
mark(asked-10, that-8)
nsubj(asked-10, I-9)
dep(question-7, asked-10)
nn(B-12, Lord-11)
dobj(asked-10, B-12)
advmod(boarded-16, when-14)
nsubj(boarded-16, he-15)
parataxis(question-7, boarded-16)
dobj(boarded-16, us-17)
root(ROOT-0, replied-20)
nsubj(replied-20, Pickersgill-21)
vmod(replied-20, taking-23)
prt(taking-23, off-24)
poss(hat-26, his-25)
dobj(taking-23, hat-26)
det(ladies-29, the-28)
prep_to(taking-23, ladies-29)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Well))
      (, ,)
      (SBAR
        (WHPP (IN but)
          (WHNP (WP what)))
        (S
          (NP (NN business))
          (VP (VBP have)
            (NP (PRP you))
            (NP (RB here))))))
    (. ?) ('' '')))

root(ROOT-0, Well-2)
prep_but(have-7, Well-2)
nsubj(have-7, business-6)
rcmod(Well-2, have-7)
iobj(have-7, you-8)
dobj(have-7, here-9)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VBG Exactly)
        (NP
          (NP (DT the) (JJ same) (NN question))
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP I))
              (VP (VBD put)))))
        (PP (TO to)
          (NP (NNP Lord) (NNP B)))
        (: --)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Pickersgill))
    (. .)))

dep(replied-15, Exactly-2)
det(question-5, the-3)
amod(question-5, same-4)
dobj(Exactly-2, question-5)
dobj(put-8, question-5)
nsubj(put-8, I-7)
rcmod(question-5, put-8)
nn(B-11, Lord-10)
prep_to(Exactly-2, B-11)
root(ROOT-0, replied-15)
nsubj(replied-15, Pickersgill-16)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBZ is)
      (NP
        (NP (JJR Lord) (NN B) (: --))
        (, ,)
        (NP (NN sir))))
    (. ?) ('' '')))

advmod(is-3, Where-2)
root(ROOT-0, is-3)
amod(B-5, Lord-4)
nsubj(is-3, B-5)
appos(B-5, sir-8)

(ROOT
  (SINV
    (VP (VBD said))
    (NP
      (NP (NNP Cecilia) (NNP Ossulton))
      (, ,)
      (VP (VBG going)
        (PRT (RP up))
        (PP (TO to)
          (NP
            (NP (DT the) (NN smuggler))
            (: ;)
            (SQ (`` ``) (VBZ is)
              (NP (PRP he))
              (VP (VBG safe))
              (. ?) ('' ''))))))))

root(ROOT-0, said-1)
nn(Ossulton-3, Cecilia-2)
nsubj(said-1, Ossulton-3)
vmod(Ossulton-3, going-5)
prt(going-5, up-6)
det(smuggler-9, the-8)
prep_to(going-5, smuggler-9)
aux(safe-14, is-12)
nsubj(safe-14, he-13)
dep(smuggler-9, safe-14)

(ROOT
  (S (`` ``)
    (S
      (S
        (INTJ (UH Yes))
        (, ,)
        (VP (VB madam)))
      (, ,)
      (NP (PRP he))
      (VP (VBZ is)
        (ADJP (JJ safe))))
    (: ;)
    (S
      (ADVP (IN at) (JJS least))
      (NP (PRP he))
      (VP (VBZ is)
        (PP (IN in)
          (UCP
            (NP
              (NP (PRP$ his) (NN boat))
              (PP (IN with)
                (NP (PDT all) (PRP$ his) (NNS men))))
            (, ,)
            (CC and)
            (ADJP (JJ unhurt))))))
    (: :)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB excuse)
          (NP (PRP me))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBP request)
                (S
                  (NP
                    (NP (PRP you))
                    (CC and)
                    (NP (DT the) (JJ other) (NNS ladies)))
                  (VP (TO to)
                    (VP (VB go)
                      (PRT (RP down))
                      (ADVP (RB below))
                      (SBAR (IN while)
                        (S
                          (NP (PRP I))
                          (VP (VBP speak)
                            (PP (TO to)
                              (NP (DT these) (NNS gentlemen)))))))))))))))
    (. .)))

discourse(madam-4, Yes-2)
ccomp(safe-8, madam-4)
nsubj(safe-8, he-6)
cop(safe-8, is-7)
root(ROOT-0, safe-8)
advmod(is-13, at-10)
pobj(at-10, least-11)
nsubj(is-13, he-12)
conj_but(safe-8, is-13)
poss(boat-16, his-15)
prep_in(is-13, boat-16)
predet(men-20, all-18)
poss(men-20, his-19)
prep_with(boat-16, men-20)
prep_in(is-13, unhurt-23)
conj_and(boat-16, unhurt-23)
nsubj(excuse-28, you-26)
aux(excuse-28, must-27)
conj_but(safe-8, excuse-28)
dobj(excuse-28, me-29)
mark(request-32, if-30)
nsubj(request-32, I-31)
advcl(excuse-28, request-32)
dobj(request-32, you-33)
nsubj(go-39, you-33)
det(ladies-37, the-35)
amod(ladies-37, other-36)
dobj(request-32, ladies-37)
conj_and(you-33, ladies-37)
nsubj(go-39, ladies-37)
aux(go-39, to-38)
xcomp(request-32, go-39)
prt(go-39, down-40)
advmod(go-39, below-41)
mark(speak-44, while-42)
nsubj(speak-44, I-43)
advcl(go-39, speak-44)
det(gentlemen-47, these-46)
prep_to(speak-44, gentlemen-47)

(ROOT
  (S
    (S
      (S
        (VP
          (VP (VB Be)
            (PP (IN under)
              (NP (DT no) (NN alarm))))
          (, ,)
          (VP (VB miss))))
      (, ,)
      (NP (PRP you))
      (VP (MD will)
        (VP (VB receive)
          (ADJP (DT neither) (JJ insult)
            (CC nor)
            (JJ ill-treatment)))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (RB only))
        (VP (VBN taken)
          (NP
            (NP (NN possession))
            (PP (IN of)
              (NP
                (NP (DT this) (NN vessel))
                (PP (IN for)
                  (NP (DT the) (NN present)))))))))
    (. .) ('' '')))

ccomp(receive-10, Be-1)
neg(alarm-4, no-3)
prep_under(Be-1, alarm-4)
dep(Be-1, miss-6)
nsubj(receive-10, you-8)
aux(receive-10, will-9)
root(ROOT-0, receive-10)
preconj(insult-12, neither-11)
acomp(receive-10, insult-12)
acomp(receive-10, ill-treatment-14)
conj_nor(insult-12, ill-treatment-14)
nsubj(taken-19, I-16)
aux(taken-19, have-17)
advmod(taken-19, only-18)
parataxis(receive-10, taken-19)
dobj(taken-19, possession-20)
det(vessel-23, this-22)
prep_of(possession-20, vessel-23)
det(present-26, the-25)
prep_for(vessel-23, present-26)

(ROOT
  (S (`` ``)
    (VP (VB Take)
      (NP
        (NP (NN possession))
        (PRN (, ,) ('' '')
          (S
            (NP (NN cried))
            (VP (VBP Hautaine)))
          (, ,) (`` ``))
        (PP (IN of)
          (NP (DT a) (NN yacht)))))
    (. .) ('' '')))

root(ROOT-0, Take-2)
dobj(Take-2, possession-3)
nsubj(Hautaine-7, cried-6)
dep(possession-3, Hautaine-7)
det(yacht-12, a-11)
prep_of(possession-3, yacht-12)

(ROOT
  (S
    (INTJ (`` ``) (UH Yes))
    (, ,)
    (VP (VB sir) (, ,)
      (SBAR (IN since)
        (S
          (NP
            (NP (DT the) (NN owner))
            (PP (IN of)
              (NP (DT the) (NN yacht))))
          (VP (VBD thought)
            (ADJP (JJ proper)
              (S
                (VP (TO to)
                  (VP (VB attempt)
                    (S
                      (VP (TO to)
                        (VP (VB take)
                          (NP
                            (NP (NN possession))
                            (PP (IN of)
                              (NP (PRP me)))))))))))))))
    (. .)))

discourse(sir-4, Yes-2)
root(ROOT-0, sir-4)
mark(thought-12, since-6)
det(owner-8, the-7)
nsubj(thought-12, owner-8)
det(yacht-11, the-10)
prep_of(owner-8, yacht-11)
advcl(sir-4, thought-12)
acomp(thought-12, proper-13)
aux(attempt-15, to-14)
xcomp(proper-13, attempt-15)
aux(take-17, to-16)
xcomp(attempt-15, take-17)
dobj(take-17, possession-18)
prep_of(possession-18, me-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB always))
      (VP (VBD thought)
        (SBAR (IN that)
          (S
            (NP (NNS yachts))
            (VP (VBD were)
              (ADJP (JJ pleasure-vessels))
              (, ,)
              (S
                (VP
                  (VP (VBG sailing) (IN about)
                    (PP (IN for)
                      (NP (NN amusement))))
                  (, ,)
                  (VP (VBG respected)
                    (NP (PRP themselves)))
                  (, ,)
                  (CC and)
                  (VP (RB not) (VBG interfering)
                    (PP (IN with)
                      (NP (NNS others)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ appears)
        (SBAR (IN that)
          (S
            (NP (JJ such))
            (VP (VBZ is) (RB not)
              (NP (DT the) (NN case)))))))
    (. .)))

nsubj(thought-3, I-1)
advmod(thought-3, always-2)
root(ROOT-0, thought-3)
mark(pleasure-vessels-7, that-4)
nsubj(pleasure-vessels-7, yachts-5)
cop(pleasure-vessels-7, were-6)
ccomp(thought-3, pleasure-vessels-7)
ccomp(pleasure-vessels-7, sailing-9)
dep(sailing-9, about-10)
prep_for(sailing-9, amusement-12)
ccomp(pleasure-vessels-7, respected-14)
conj_and(sailing-9, respected-14)
dobj(respected-14, themselves-15)
neg(interfering-19, not-18)
ccomp(pleasure-vessels-7, interfering-19)
conj_and(sailing-9, interfering-19)
prep_with(interfering-19, others-21)
nsubj(appears-25, it-24)
conj_but(thought-3, appears-25)
mark(case-31, that-26)
nsubj(case-31, such-27)
cop(case-31, is-28)
neg(case-31, not-29)
det(case-31, the-30)
ccomp(appears-25, case-31)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN owner))
        (PP (IN of)
          (NP (DT this) (NN yacht))))
      (VP (VBZ has)
        (VP (VBN thought)
          (ADJP (JJ proper)
            (S
              (VP (TO to)
                (VP (VB break)
                  (PP (IN through)
                    (NP (DT the)
                      (ADJP (JJ neutrality)
                        (CC and)
                        (JJ commence))
                      (NN aggression))))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN under)
        (NP (JJ such) (NNS circumstances)))
      (NP (PRP I))
      (VP (VBP have)
        (ADVP
          (ADVP (RB now))
          (PRN (, ,)
            (PP (IN in)
              (NP (NN retaliation)))
            (, ,)))
        (VP (VBN taken)
          (NP
            (NP (NN possession))
            (PP (IN of)
              (NP (PRP her)))))))
    (. .) ('' '')))

det(owner-2, The-1)
nsubj(thought-7, owner-2)
det(yacht-5, this-4)
prep_of(owner-2, yacht-5)
aux(thought-7, has-6)
root(ROOT-0, thought-7)
acomp(thought-7, proper-8)
aux(break-10, to-9)
xcomp(proper-8, break-10)
det(aggression-16, the-12)
amod(aggression-16, neutrality-13)
conj_and(neutrality-13, commence-15)
amod(aggression-16, commence-15)
prep_through(break-10, aggression-16)
amod(circumstances-21, such-20)
prep_under(taken-29, circumstances-21)
nsubj(taken-29, I-22)
aux(taken-29, have-23)
advmod(taken-29, now-24)
dep(now-24, in-26)
pobj(in-26, retaliation-27)
conj_and(thought-7, taken-29)
dobj(taken-29, possession-30)
prep_of(possession-30, her-32)

(ROOT
  (S (`` ``)
    (S (CC And)
      (, ,)
      (NP
        (NP (NN pray))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBP do)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP mean)
                    (S
                      (VP (TO to)
                        (VP (VB do))))))))))
        (, ,))
      (VP (VBP sir)))
    (. ?) ('' '')))

cc(sir-13, And-2)
nsubj(do-7, pray-4)
nsubj(sir-13, pray-4)
rcmod(pray-4, do-7)
nsubj(mean-9, you-8)
nsubj(do-11, you-8)
ccomp(do-7, mean-9)
aux(do-11, to-10)
xcomp(mean-9, do-11)
root(ROOT-0, sir-13)

(ROOT
  (S (`` ``)
    (VP (VB Simply)
      (PP (IN for)
        (NP (DT a) (JJ few) (NNS days)))
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (DT an) (NN exchange))))))
    (. .)))

root(ROOT-0, Simply-2)
det(days-6, a-4)
amod(days-6, few-5)
prep_for(Simply-2, days-6)
aux(make-8, to-7)
xcomp(Simply-2, make-8)
det(exchange-10, an-9)
dobj(make-8, exchange-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB send)
        (NP (PRP you))
        (PP (IN on)
          (NP
            (NP (NN board))
            (PP (IN of)
              (NP (PRP$ my) (NN vessel)))))
        (PP (IN as)
          (NP (NNS smugglers)))
        (, ,)
        (SBAR (IN while)
          (S
            (NP (PRP I))
            (VP
              (VP (VBP remain)
                (ADVP (RB here))
                (PP (IN with)
                  (NP (DT the) (NNS ladies))))
              (CC and)
              (VP (VBP amuse)
                (NP (PRP myself))
                (PP (IN with)
                  (NP (NN yachting)))))))))
    (. .) ('' '')))

nsubj(send-3, I-1)
aux(send-3, shall-2)
root(ROOT-0, send-3)
dobj(send-3, you-4)
prep_on(send-3, board-6)
poss(vessel-9, my-8)
prep_of(board-6, vessel-9)
prep_as(send-3, smugglers-11)
mark(remain-15, while-13)
nsubj(remain-15, I-14)
nsubj(amuse-21, I-14)
advcl(send-3, remain-15)
advmod(remain-15, here-16)
det(ladies-19, the-18)
prep_with(remain-15, ladies-19)
advcl(send-3, amuse-21)
conj_and(remain-15, amuse-21)
dobj(amuse-21, myself-22)
prep_with(amuse-21, yachting-24)

(ROOT
  (S (`` ``)
    (ADVP (WRB Why))
    (, ,)
    (S
      (ADVP (RB sir))
      (, ,)
      (NP (PRP you))
      (VP (MD can) (RB not)
        (VP (VB mean))))
    (: --) ('' '')
    (S (`` ``)
      (S
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBD said) (, ,)
              (NP (NNS gentlemen)))))
        (, ,)
        (CC and)
        (S
          (S
            (NP (DT that))
            (VP (VBZ is)
              (ADJP (JJ enough))))
          (: ;)
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ sorry)
                  (S
                    (VP (TO to)
                      (VP (VB resort)
                        (PP (TO to)
                          (NP (NN violence))))))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP I))
        (VP (MD must)
          (VP (VB be)
            (VP (VBN obeyed))))))
    (. .)))

advmod(mean-9, Why-2)
advmod(mean-9, sir-4)
nsubj(mean-9, you-6)
aux(mean-9, can-7)
neg(mean-9, not-8)
root(ROOT-0, mean-9)
nsubj(said-15, I-13)
aux(said-15, have-14)
parataxis(mean-9, said-15)
dobj(said-15, gentlemen-17)
nsubj(enough-22, that-20)
cop(enough-22, is-21)
parataxis(mean-9, enough-22)
conj_and(said-15, enough-22)
nsubj(sorry-27, I-24)
nsubj(resort-29, I-24)
aux(sorry-27, should-25)
cop(sorry-27, be-26)
parataxis(enough-22, sorry-27)
aux(resort-29, to-28)
xcomp(sorry-27, resort-29)
prep_to(resort-29, violence-31)
nsubjpass(obeyed-37, I-34)
aux(obeyed-37, must-35)
auxpass(obeyed-37, be-36)
parataxis(mean-9, obeyed-37)
conj_but(said-15, obeyed-37)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (PRN (, ,)
          (S
            (NP (PRP I))
            (VP (VBP perceive)))
          (, ,))
        (VP
          (ADVP
            (NP (CD three) (NNS seamen))
            (RB only))
          (VBN left))))
    (: :)
    (S
      (NP (PRP they))
      (VP (VBP are) (RB not)
        (ADJP (JJ sufficient)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP
                  (NP
                    (NP
                      (NP (NN charge))
                      (PP (IN of)
                        (NP (DT the) (NN vessel))))
                    (, ,)
                    (CC and)
                    (NP (NNP Lord) (NNP B)))
                  (: --)
                  (CC and)
                  (NP
                    (NP (DT the) (NNS others))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (MD will) (RB not)
                          (VP (VB meet)
                            (PP (IN for)
                              (NP (JJ several) (NNS days)))))))))))))))
    (. .)))

nsubj(left-10, You-1)
aux(left-10, have-2)
nsubj(perceive-5, I-4)
parataxis(left-10, perceive-5)
num(seamen-8, three-7)
npadvmod(only-9, seamen-8)
advmod(left-10, only-9)
root(ROOT-0, left-10)
nsubj(sufficient-15, they-12)
nsubj(take-17, they-12)
cop(sufficient-15, are-13)
neg(sufficient-15, not-14)
parataxis(left-10, sufficient-15)
aux(take-17, to-16)
xcomp(sufficient-15, take-17)
dobj(take-17, charge-18)
det(vessel-21, the-20)
prep_of(charge-18, vessel-21)
nn(B-25, Lord-24)
dobj(take-17, B-25)
conj_and(charge-18, B-25)
det(others-29, the-28)
dobj(take-17, others-29)
conj_and(charge-18, others-29)
nsubj(meet-33, you-30)
aux(meet-33, will-31)
neg(meet-33, not-32)
rcmod(others-29, meet-33)
amod(days-36, several-35)
prep_for(meet-33, days-36)

(ROOT
  (S
    (NP
      (NP (PRP$ My) (NN regard))
      (PP (IN for)
        (NP
          (NP (DT the) (NNS ladies))
          (, ,)
          (NP (RB even) (JJ common) (NN humanity))
          (, ,))))
    (VP (VBZ points)
      (PRT (RP out))
      (PP (TO to)
        (NP (PRP me)))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD can) (RB not)
            (VP (VB leave)
              (NP
                (NP (DT the) (NN vessel))
                (PP (IN in)
                  (NP (DT this) (JJ crippled) (NN condition)))))))))
    (. .)))

poss(regard-2, My-1)
nsubj(points-11, regard-2)
det(ladies-5, the-4)
prep_for(regard-2, ladies-5)
advmod(humanity-9, even-7)
amod(humanity-9, common-8)
appos(ladies-5, humanity-9)
root(ROOT-0, points-11)
prt(points-11, out-12)
prep_to(points-11, me-14)
mark(leave-19, that-15)
nsubj(leave-19, I-16)
aux(leave-19, can-17)
neg(leave-19, not-18)
ccomp(points-11, leave-19)
det(vessel-21, the-20)
dobj(leave-19, vessel-21)
det(condition-25, this-23)
amod(condition-25, crippled-24)
prep_in(vessel-21, condition-25)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (MD must)
          (VP (VB have)
            (NP
              (NP (NNS hands))
              (PP (IN on)
                (NP
                  (NP (NN board))
                  (PP (IN of)
                    (NP (PRP$ my) (JJ own)))))))))
      (, ,))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB oblige)
        (NP (PRP me))
        (PP (IN by)
          (S
            (VP
              (VP (VBG going)
                (PP (IN on)
                  (NP (NN board))))
              (CC and)
              (VP (VBG taking)
                (NP (PRP her))
                (ADVP (RB safely))
                (PP (IN into)
                  (NP (NN port)))))))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(oblige-18, time-4)
nsubj(have-8, I-6)
aux(have-8, must-7)
parataxis(oblige-18, have-8)
dobj(have-8, hands-9)
prep_on(hands-9, board-11)
poss(own-14, my-13)
prep_of(board-11, own-14)
nsubj(oblige-18, you-16)
aux(oblige-18, will-17)
root(ROOT-0, oblige-18)
dobj(oblige-18, me-19)
prepc_by(oblige-18, going-21)
prep_on(going-21, board-23)
prepc_by(oblige-18, taking-25)
conj_and(going-21, taking-25)
dobj(taking-25, her-26)
advmod(taking-25, safely-27)
prep_into(taking-25, port-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS least) (NN return))
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB make)
                (PP (IN for)
                  (NP (PRP$ my) (NN kindness)))))))))
    (. .)))

nsubj(return-5, It-1)
cop(return-5, is-2)
det(return-5, the-3)
amod(return-5, least-4)
root(ROOT-0, return-5)
nsubj(make-8, you-6)
aux(make-8, can-7)
rcmod(return-5, make-8)
poss(kindness-11, my-10)
prep_for(make-8, kindness-11)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT those) (NNS dresses))
        (, ,)
        (NP (NNS gentlemen))))
    (, ,)
    (NP (PRP you))
    (VP (MD will) (RB not)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP
                (VP (VB do)
                  (NP (PRP$ your) (NN duty)))
                (: :)
                (VP (VB oblige)
                  (NP (PRP me))
                  (PP (IN by)
                    (S
                      (VP (VBG shifting)
                        (CC and)
                        (VBG putting)
                        (PP (IN on)
                          (NP (DT these)))))))))))))
    (. .) ('' '')))

det(dresses-3, those-2)
prep_in(able-11, dresses-3)
appos(dresses-3, gentlemen-5)
nsubj(able-11, you-7)
nsubj(do-13, you-7)
aux(able-11, will-8)
neg(able-11, not-9)
cop(able-11, be-10)
root(ROOT-0, able-11)
aux(do-13, to-12)
xcomp(able-11, do-13)
poss(duty-15, your-14)
dobj(do-13, duty-15)
dep(do-13, oblige-17)
dobj(oblige-17, me-18)
prepc_by(oblige-17, shifting-20)
prepc_by(oblige-17, putting-22)
conj_and(shifting-20, putting-22)
prep_on(shifting-20, these-24)

(ROOT
  (S
    (NP (NNP Corbett))
    (VP (VBD handed)
      (NP
        (NP (DT a) (JJ flannel) (NN shirt))
        (, ,)
        (NP (DT a) (JJ rough) (NN jacket))
        (CC and)
        (NP (NNS trousers)))
      (, ,)
      (PP (TO to)
        (NP (NNP Messrs.) (NNP Hautaine)))
      (, ,)
      (NP (NNP Ossulton) (, ,) (NNP Vaughan) (, ,)
        (CC and)
        (NNP Seagrove)))
    (. .)))

nsubj(handed-2, Corbett-1)
root(ROOT-0, handed-2)
det(shirt-5, a-3)
amod(shirt-5, flannel-4)
dobj(handed-2, shirt-5)
det(jacket-9, a-7)
amod(jacket-9, rough-8)
dobj(handed-2, jacket-9)
conj_and(shirt-5, jacket-9)
dobj(handed-2, trousers-11)
conj_and(shirt-5, trousers-11)
nn(Hautaine-15, Messrs.-14)
prep_to(handed-2, Hautaine-15)
dobj(handed-2, Ossulton-17)
dobj(handed-2, Vaughan-19)
conj_and(Ossulton-17, Vaughan-19)
dobj(handed-2, Seagrove-22)
conj_and(Ossulton-17, Seagrove-22)

(ROOT
  (S
    (S
      (PP (IN After)
        (NP (DT some) (JJ useless) (NN resistance)))
      (NP (PRP they))
      (VP (VBD were)
        (VP (VBN stripped))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG having)
          (VP (VBN put)
            (PP (IN on)
              (NP
                (NP (DT the) (NNS smugglers) (POS '))
                (NN attire))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD were)
        (VP (VBN handed)
          (PP (IN on)
            (NP
              (NP (NN board))
              (PP (IN of)
                (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _))))))))
    (. .)))

det(resistance-4, some-2)
amod(resistance-4, useless-3)
prep_after(stripped-7, resistance-4)
nsubjpass(stripped-7, they-5)
auxpass(stripped-7, were-6)
root(ROOT-0, stripped-7)
aux(put-11, having-10)
vmod(handed-20, put-11)
det(smugglers-14, the-13)
poss(attire-16, smugglers-14)
prep_on(put-11, attire-16)
nsubjpass(handed-20, they-18)
auxpass(handed-20, were-19)
conj_and(stripped-7, handed-20)
prep_on(handed-20, board-22)
det(_-27, the-24)
nn(_-27, _-25)
nn(_-27, Happy-go-lucky-26)
prep_of(board-22, _-27)

(ROOT
  (S
    (NP (DT The) (CD three) (JJ English) (NN seamen))
    (VP (VBD were)
      (ADVP (RB also))
      (VP
        (VP (VBN sent)
          (PP (IN on)
            (NP (NN board))))
        (CC and)
        (VP (VBN confined)
          (ADVP (RB below))
          (, ,)
          (ADVP (RB as) (RB well)
            (PP (IN as)
              (NP
                (NP
                  (NP (NNP Ossulton) (POS 's))
                  (NN servant))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD was)
                      (ADVP (RB also))
                      (VP (VBN equipped)
                        (PP (IN like)
                          (NP (PRP$ his) (NN master)))))))))))
        (, ,)
        (CC and)
        (VP (VBN confined)
          (ADVP (RB below))
          (PP (IN with)
            (NP (DT the) (NN seamen))))))
    (. .)))

det(seamen-4, The-1)
num(seamen-4, three-2)
amod(seamen-4, English-3)
nsubjpass(sent-7, seamen-4)
nsubjpass(confined-11, seamen-4)
nsubjpass(confined-30, seamen-4)
auxpass(sent-7, were-5)
advmod(sent-7, also-6)
root(ROOT-0, sent-7)
prep_on(sent-7, board-9)
conj_and(sent-7, confined-11)
advmod(confined-11, below-12)
advmod(well-15, as-14)
mwe(well-15, as-14)
advmod(confined-11, well-15)
poss(servant-19, Ossulton-17)
prep_as(well-15, servant-19)
nsubjpass(equipped-24, servant-19)
auxpass(equipped-24, was-22)
advmod(equipped-24, also-23)
rcmod(servant-19, equipped-24)
poss(master-27, his-26)
prep_like(equipped-24, master-27)
conj_and(sent-7, confined-30)
advmod(confined-30, below-31)
det(seamen-34, the-33)
prep_with(confined-30, seamen-34)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (NNP Corbett))
          (CC and)
          (NP (DT the) (NNS men)))
        (VP
          (VP
            (ADVP (RB then))
            (VBD handed)
            (PRT (RP up))
            (NP (PDT all) (DT the) (JJ smuggled) (NNS goods))
            (PP (IN into)
              (NP (DT the) (NN yacht))))
          (, ,)
          (VP (VBD dropped)
            (NP (DT the) (NN boat)))
          (, ,)
          (CC and)
          (VP (VBD made)
            (NP (PRP it) (JJ fast) (NN astern)))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Morrison))
        (VP (VBG having)
          (VP (VBN received)
            (NP (PRP$ his) (NNS directions))))))
    (, ,)
    (S
      (NP (DT the) (NNS vessels))
      (ADJP (JJ separated)))
    (, ,)
    (S
      (NP (NNP Morrison))
      (VP (VBG running)
        (PP (IN for)
          (NP (NNP Cherbourg)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Pickersgill) (NNP steering))
      (ADVP
        (NP (DT the) (NN yacht))
        (IN along))
      (VP (VB shore)
        (PP (TO to)
          (NP (DT the) (NN westward)))))
    (. .)))

nsubj(handed-6, Corbett-1)
nsubj(dropped-16, Corbett-1)
nsubj(made-21, Corbett-1)
nsubj(separated-35, Corbett-1)
det(men-4, the-3)
conj_and(Corbett-1, men-4)
nsubj(handed-6, men-4)
advmod(handed-6, then-5)
root(ROOT-0, handed-6)
prt(handed-6, up-7)
predet(goods-11, all-8)
det(goods-11, the-9)
amod(goods-11, smuggled-10)
dobj(handed-6, goods-11)
det(yacht-14, the-13)
prep_into(handed-6, yacht-14)
conj_and(handed-6, dropped-16)
det(boat-18, the-17)
dobj(dropped-16, boat-18)
conj_and(handed-6, made-21)
dep(astern-24, it-22)
amod(astern-24, fast-23)
dobj(made-21, astern-24)
nsubj(received-29, Morrison-27)
aux(received-29, having-28)
conj_and(handed-6, received-29)
poss(directions-31, his-30)
dobj(received-29, directions-31)
det(vessels-34, the-33)
dep(separated-35, vessels-34)
ccomp(handed-6, separated-35)
conj_and(handed-6, separated-35)
nsubj(running-38, Morrison-37)
conj_and(handed-6, running-38)
prep_for(running-38, Cherbourg-40)
nn(steering-44, Pickersgill-43)
nsubj(shore-48, steering-44)
det(yacht-46, the-45)
npadvmod(along-47, yacht-46)
advmod(shore-48, along-47)
conj_and(handed-6, shore-48)
det(westward-51, the-50)
prep_to(shore-48, westward-51)

(ROOT
  (S
    (S
      (SBAR
        (NP (RB About) (DT an) (NN hour))
        (IN after)
        (S
          (NP (DT this) (NN exchange))
          (VP (VBD had)
            (VP (VBN been)
              (VP (VBN effected))))))
      (NP (DT the) (NN fog))
      (VP
        (VP (VBD cleared)
          (PRT (RP up)))
        (, ,)
        (CC and)
        (VP (VBD showed)
          (NP (DT the) (JJ revenue-cutter) (NN hove))
          (X (TO to))
          (PP (IN for)
            (NP
              (NP (PRP$ her) (NNS boats))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP
                    (VP (VBD had)
                      (VP (VBN pulled)
                        (ADVP (RB back))))
                    (CC and)
                    (VP (VBD were)
                      (ADJP (JJ close))
                      (PP (IN on)
                        (NP
                          (NP (NN board))
                          (PP (IN of)
                            (NP (PRP her))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _))
        (PP
          (NP (RB about) (CD three) (NNS miles))
          (IN in)
          (NP
            (NP (DT the) (NN offing))
            (: ;)
            (NP (NNP Lord) (NNP B))
            (: --)
            (CC and)
            (NP
              (NP (PRP$ his) (NN boat) (POS 's))
              (NN crew)))))
      (VP (VBD were)
        (PP
          (NP
            (QP (RB about) (CD four))
            (NNS miles))
          (IN in)
          (NP (NN shore)))
        (, ,)
        (S
          (VP (VBG paddling)
            (CC and)
            (VBG drifting)
            (PP (IN with)
              (NP
                (NP (DT the) (NN tide))
                (PP (IN towards)
                  (NP (NNP Portland)))))))))
    (. .)))

advmod(hour-3, About-1)
det(hour-3, an-2)
dep(effected-9, hour-3)
mark(effected-9, after-4)
det(exchange-6, this-5)
nsubjpass(effected-9, exchange-6)
aux(effected-9, had-7)
auxpass(effected-9, been-8)
advcl(cleared-12, effected-9)
det(fog-11, the-10)
nsubj(cleared-12, fog-11)
nsubj(showed-16, fog-11)
root(ROOT-0, cleared-12)
prt(cleared-12, up-13)
conj_and(cleared-12, showed-16)
det(hove-19, the-17)
amod(hove-19, revenue-cutter-18)
dobj(showed-16, hove-19)
dep(showed-16, to-20)
poss(boats-23, her-22)
prep_for(showed-16, boats-23)
nsubj(pulled-27, boats-23)
nsubj(close-31, boats-23)
aux(pulled-27, had-26)
rcmod(boats-23, pulled-27)
advmod(pulled-27, back-28)
cop(close-31, were-30)
rcmod(boats-23, close-31)
conj_and(pulled-27, close-31)
prep_on(close-31, board-33)
prep_of(board-33, her-35)
det(_-41, the-38)
nn(_-41, _-39)
nn(_-41, Happy-go-lucky-40)
nsubj(were-57, _-41)
advmod(miles-44, about-42)
num(miles-44, three-43)
npadvmod(_-41, miles-44)
det(offing-47, the-46)
prep_in(_-41, offing-47)
nn(B-50, Lord-49)
prep_in(_-41, B-50)
conj_and(offing-47, B-50)
poss(boat-54, his-53)
poss(crew-56, boat-54)
prep_in(_-41, crew-56)
conj_and(offing-47, crew-56)
conj_and(cleared-12, were-57)
quantmod(four-59, about-58)
num(miles-60, four-59)
npadvmod(were-57, miles-60)
prep_in(were-57, shore-62)
xcomp(were-57, paddling-64)
xcomp(were-57, drifting-66)
conj_and(paddling-64, drifting-66)
det(tide-69, the-68)
prep_with(paddling-64, tide-69)
prep_towards(tide-69, Portland-71)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (SBAR (RB soon) (IN as)
          (S
            (NP (DT the) (NNS boats))
            (VP (VBD were)
              (PP (IN on)
                (NP (NN board))))))
        (, ,)
        (NP (DT the) (NN revenue-cutter))
        (VP (VBD made)
          (NP (DT all) (NN sail))
          (PP (IN after)
            (NP (DT the) (NN smuggler))))))
    (, ,)
    (S
      (VP (VBG paying)
        (NP (DT no) (NN attention))
        (PP (TO to)
          (NP (DT the) (NN yacht)))))
    (, ,)
    (CC and)
    (ADVP (RB either))
    (S
      (VP
        (VP (RB not) (VBG seeing))
        (CC or)
        (RB not)
        (VP (VBG caring)
          (PP (IN about)
            (NP
              (NP (DT the) (NN boat))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (VP (VBG drifting) (IN about)
                      (PP (IN in)
                        (NP (NNP West) (NNP Bay))))))))))))
    (. .)))

mark(made-12, As-1)
advmod(were-6, soon-2)
mark(were-6, as-3)
det(boats-5, the-4)
nsubj(were-6, boats-5)
advcl(made-12, were-6)
prep_on(were-6, board-8)
det(revenue-cutter-11, the-10)
nsubj(made-12, revenue-cutter-11)
advcl(paying-19, made-12)
det(sail-14, all-13)
dobj(made-12, sail-14)
det(smuggler-17, the-16)
prep_after(made-12, smuggler-17)
root(ROOT-0, paying-19)
neg(attention-21, no-20)
dobj(paying-19, attention-21)
det(yacht-24, the-23)
prep_to(paying-19, yacht-24)
advmod(seeing-29, either-27)
neg(seeing-29, not-28)
conj_and(paying-19, seeing-29)
neg(caring-32, not-31)
conj_and(paying-19, caring-32)
conj_or(seeing-29, caring-32)
det(boat-35, the-34)
prep_about(caring-32, boat-35)
nsubj(drifting-38, boat-35)
aux(drifting-38, was-37)
rcmod(boat-35, drifting-38)
dep(drifting-38, about-39)
nn(Bay-42, West-41)
prep_in(drifting-38, Bay-42)

(ROOT
  (S
    (NP (NNP CHAPTER))
    (VP (VBZ FIVE))
    (. .)))

nsubj(FIVE-2, CHAPTER-1)
root(ROOT-0, FIVE-2)

(ROOT
  (NP (DT THE) (NN TRAVESTY) (. .)))

det(TRAVESTY-2, THE-1)
root(ROOT-0, TRAVESTY-2)

(ROOT
  (S
    (S
      (S (`` ``)
        (S
          (ADVP (RB Here))
          (NP (PRP we))
          (VP (VBP are)
            (PRN (, ,)
              (S
                (NP
                  (NP (NNP Corbett))
                  (, ,)
                  (CC and)
                  (ADVP (RB now))
                  (NP (PRP I)))
                (ADVP (RB only))
                (VP (VBP wish)
                  (SBAR
                    (S
                      (NP (PRP$ my) (NN venture))
                      (VP (VBD had)
                        (VP (VBN been)
                          (ADJP (JJ double))))))))
              (, ,))))
        ('' '')
        (VP (VBD observed)
          (NP (NNP Pickersgill))))
      (: ;) (`` ``)
      (CC but)
      (S
        (NP (PRP I))
        (VP (MD shall) (RB not)
          (VP (VB allow)
            (NP (NN business))
            (S
              (VP (TO to)
                (VP (VB absorb)
                  (NP (PRP me))
                  (ADVP (RB wholly)))))))))
    (: --)
    (S
      (NP (PRP we))
      (VP (MD must)
        (VP (VB add)
          (NP (DT a) (JJ little) (NN amusement)))))
    (. .)))

advmod(are-4, Here-2)
nsubj(are-4, we-3)
ccomp(observed-20, are-4)
csubj(observed-20, are-4)
nsubj(wish-12, Corbett-6)
advmod(I-10, now-9)
conj_and(Corbett-6, I-10)
nsubj(wish-12, I-10)
advmod(wish-12, only-11)
parataxis(are-4, wish-12)
poss(venture-14, my-13)
nsubj(double-17, venture-14)
aux(double-17, had-15)
cop(double-17, been-16)
ccomp(wish-12, double-17)
root(ROOT-0, observed-20)
dobj(observed-20, Pickersgill-21)
nsubj(allow-28, I-25)
aux(allow-28, shall-26)
neg(allow-28, not-27)
conj_but(observed-20, allow-28)
dobj(allow-28, business-29)
nsubj(absorb-31, business-29)
aux(absorb-31, to-30)
xcomp(allow-28, absorb-31)
dobj(absorb-31, me-32)
advmod(absorb-31, wholly-33)
nsubj(add-37, we-35)
aux(add-37, must-36)
parataxis(observed-20, add-37)
det(amusement-40, a-38)
amod(amusement-40, little-39)
dobj(add-37, amusement-40)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ appears)
        (PP (TO to)
          (NP
            (NP (PRP me))
            (, ,)
            (NP (NNP Corbett))
            (, ,)))
        (SBAR (IN that)
          (S
            (NP (DT the) (NN gentleman))
            (VP (VBZ 's)
              (NP
                (NP (NNS clothes))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBP lie)
                      (SBAR
                        (S
                          (NP (EX there))
                          (VP (MD will)
                            (VP (VB fit)
                              (NP (PRP you)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT those))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ good-looking) (NN fellow))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD was)
                  (NP (NN spokesman))))))))
      (VP (MD will)
        (PRN (, ,)
          (S
            (NP (PRP I))
            (VP (VBP am)
              (ADJP (JJ sure))))
          (, ,))
        (VP (VB suit)
          (NP (PRP me))
          (ADVP (RB well)))))
    (. .)))

nsubj(appears-2, It-1)
root(ROOT-0, appears-2)
prep_to(appears-2, me-4)
appos(me-4, Corbett-6)
mark(clothes-12, that-8)
det(gentleman-10, the-9)
nsubj(clothes-12, gentleman-10)
cop(clothes-12, 's-11)
ccomp(appears-2, clothes-12)
nsubj(lie-14, clothes-12)
rcmod(clothes-12, lie-14)
expl(fit-17, there-15)
aux(fit-17, will-16)
ccomp(lie-14, fit-17)
dobj(fit-17, you-18)
nsubj(fit-17, you-18)
nsubj(suit-35, those-21)
det(fellow-25, the-23)
amod(fellow-25, good-looking-24)
prep_of(those-21, fellow-25)
nsubj(spokesman-28, fellow-25)
cop(spokesman-28, was-27)
rcmod(fellow-25, spokesman-28)
aux(suit-35, will-29)
nsubj(sure-33, I-31)
cop(sure-33, am-32)
parataxis(suit-35, sure-33)
conj_and(appears-2, suit-35)
dobj(suit-35, me-36)
advmod(suit-35, well-37)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (VP (VB let)))
    (S
      (NP (PRP us))
      (VP
        (VP (VBP dress)
          (NP (PRP ourselves)))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB then))
          (PP (IN for)
            (NP (NN breakfast))))))
    (. .) ('' '')))

advmod(let-2, Now-1)
root(ROOT-0, let-2)
nsubj(dress-4, us-3)
parataxis(let-2, dress-4)
dobj(dress-4, ourselves-5)
parataxis(let-2, then-8)
conj_and(dress-4, then-8)
prep_for(then-8, breakfast-10)

(ROOT
  (S
    (S
      (NP (NNP Pickersgill))
      (ADVP (RB then))
      (VP (VBD exchanged)
        (NP (PRP$ his) (NNS clothes))
        (PP (IN for)
          (NP
            (NP (DT those))
            (PP (IN of)
              (NP (NNP Mr) (NNP Hautaine)))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Corbett))
      (VP (VBD fitted)
        (PP (IN on)
          (NP
            (NP (DT those))
            (PP (IN of)
              (NP (NNP Mr) (NNP Ossulton)))))))
    (. .)))

nsubj(exchanged-3, Pickersgill-1)
advmod(exchanged-3, then-2)
root(ROOT-0, exchanged-3)
poss(clothes-5, his-4)
dobj(exchanged-3, clothes-5)
prep_for(exchanged-3, those-7)
nn(Hautaine-10, Mr-9)
prep_of(those-7, Hautaine-10)
nsubj(fitted-14, Corbett-13)
conj_and(exchanged-3, fitted-14)
prep_on(fitted-14, those-16)
nn(Ossulton-19, Mr-18)
prep_of(those-16, Ossulton-19)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN steward))
        (VP (VBD was)
          (VP (VBN summoned)
            (PRT (RP up)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD dared) (RB not)
          (VP (VB disobey)))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD appeared)
        (PP (IN on)
          (NP (NN deck)))
        (, ,)
        (S
          (VP (VBG trembling)))))
    (. .)))

det(steward-2, The-1)
nsubjpass(summoned-4, steward-2)
auxpass(summoned-4, was-3)
root(ROOT-0, summoned-4)
prt(summoned-4, up-5)
nsubj(dared-9, he-8)
conj_and(summoned-4, dared-9)
neg(dared-9, not-10)
dep(dared-9, disobey-11)
nsubj(appeared-14, he-13)
parataxis(summoned-4, appeared-14)
prep_on(appeared-14, deck-16)
xcomp(appeared-14, trembling-18)

(ROOT
  (NP
    (NP (`` ``) (NNP Steward))
    (PRN (: --)
      (S
        (NP (PRP you))
        (VP (MD will)
          (VP
            (VP (VB take)
              (NP (DT these) (NNS clothes))
              (ADVP (RB below)))
            (PRN (, ,) ('' '')
              (SINV
                (VP (VBD said))
                (NP (NNP Pickersgill)))
              (, ,) (`` ``))
            (CC and)
            (, ,)
            (VP (VB observe) (, ,)
              (SBAR (IN that)
                (S
                  (S
                    (NP (PRP I))
                    (ADVP (RB now))
                    (VP (VB command)
                      (NP (DT this) (NN yacht))))
                  (: ;)
                  (CC and)
                  (S
                    (PP (IN during)
                      (NP
                        (NP (DT the) (NN time))
                        (SBAR (IN that)
                          (S
                            (NP (PRP I))
                            (VP (VBP am)
                              (PP (IN on)
                                (NP (NN board))))))))
                    (NP (PRP you))
                    (VP (MD will)
                      (VP (VB pay)
                        (NP (PRP me))
                        (NP (DT the) (JJ same) (NN respect)))))))
              (SBAR (IN as)
                (S
                  (NP (PRP you))
                  (VP (VBD did)
                    (NP (NNP Lord) (NNP B)))))))))
      (: --))
    (: :)
    (NP
      (NP (NN nay))
      (, ,)
      (NP (JJR more)))
    (, ,)
    (S
      (NP (PRP you))
      (VP (MD will)
        (ADVP (RB always))
        (VP (VB address)
          (NP (PRP me))
          (PP (IN as)
            (NP
              (NP (NNP Lord) (NNP B))
              (: --))))))
    (. .)))

root(ROOT-0, Steward-2)
nsubj(take-6, you-4)
aux(take-6, will-5)
dep(Steward-2, take-6)
det(clothes-8, these-7)
dobj(take-6, clothes-8)
advmod(take-6, below-9)
parataxis(take-6, said-12)
parataxis(observe-18, said-12)
nsubj(said-12, Pickersgill-13)
cc(take-6, and-16)
dep(take-6, observe-18)
mark(command-23, that-20)
nsubj(command-23, I-21)
advmod(command-23, now-22)
ccomp(observe-18, command-23)
det(yacht-25, this-24)
dobj(command-23, yacht-25)
det(time-30, the-29)
prep_during(pay-38, time-30)
mark(am-33, that-31)
nsubj(am-33, I-32)
dep(time-30, am-33)
prep_on(am-33, board-35)
nsubj(pay-38, you-36)
aux(pay-38, will-37)
ccomp(observe-18, pay-38)
conj_and(command-23, pay-38)
iobj(pay-38, me-39)
det(respect-42, the-40)
amod(respect-42, same-41)
dobj(pay-38, respect-42)
mark(did-45, as-43)
nsubj(did-45, you-44)
advcl(observe-18, did-45)
nn(B-47, Lord-46)
dobj(did-45, B-47)
dep(Steward-2, nay-50)
appos(nay-50, more-52)
nsubj(address-57, you-54)
aux(address-57, will-55)
advmod(address-57, always-56)
dep(Steward-2, address-57)
dobj(address-57, me-58)
nn(B-61, Lord-60)
prep_as(address-57, B-61)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (VP
        (VP (VB prepare)
          (NP (NN dinner)
            (CC and)
            (NN breakfast)))
        (, ,)
        (CC and)
        (VP (VB do)
          (NP (PRP$ your) (NN duty))
          (ADVP
            (ADVP (RB just) (RB as))
            (SBAR (IN if)
              (S
                (NP (PRP$ his) (NN lordship))
                (VP (VBD was)
                  (PP (IN on)
                    (NP (NN board))))))))
        (, ,)
        (CC and)
        (VP (VB take)
          (NP (NN care))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP feed)
                (NP (PRP us))
                (ADVP (RB well))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP I))
                    (VP (MD will) (RB not)
                      (VP (VB allow)
                        (S
                          (NP (DT the) (NNS ladies))
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN entertained)
                                (PP (IN in)
                                  (NP (DT a)
                                    (ADJP (RBR less) (JJ sumptuous))
                                    (NN manner)))
                                (PP (IN than)
                                  (ADVP (RB before)))))))))))))))))
    (. .)))

nsubj(prepare-3, You-1)
nsubj(do-9, You-1)
nsubj(take-22, You-1)
aux(prepare-3, will-2)
root(ROOT-0, prepare-3)
dobj(prepare-3, dinner-4)
dobj(prepare-3, breakfast-6)
conj_and(dinner-4, breakfast-6)
conj_and(prepare-3, do-9)
poss(duty-11, your-10)
dobj(do-9, duty-11)
advmod(as-13, just-12)
advmod(do-9, as-13)
mark(was-17, if-14)
poss(lordship-16, his-15)
nsubj(was-17, lordship-16)
advcl(as-13, was-17)
prep_on(was-17, board-19)
conj_and(prepare-3, take-22)
dobj(take-22, care-23)
mark(feed-26, that-24)
nsubj(feed-26, you-25)
ccomp(take-22, feed-26)
dobj(feed-26, us-27)
advmod(feed-26, well-28)
mark(allow-34, for-30)
nsubj(allow-34, I-31)
aux(allow-34, will-32)
neg(allow-34, not-33)
advcl(feed-26, allow-34)
det(ladies-36, the-35)
dobj(allow-34, ladies-36)
nsubjpass(entertained-39, ladies-36)
aux(entertained-39, to-37)
auxpass(entertained-39, be-38)
xcomp(allow-34, entertained-39)
det(manner-44, a-41)
advmod(sumptuous-43, less-42)
amod(manner-44, sumptuous-43)
prep_in(entertained-39, manner-44)
prep(entertained-39, than-45)
pcomp(than-45, before-46)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD will)
        (VP (VB tell)
          (NP (DT the) (NN cook))
          (SBAR
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP I))
                (VP (VBP say))))
            (: ;)
            (CC and)
            (SBAR
              (ADVP (RB now))
              (IN that)
              (S
                (NP (PRP you))
                (VP (VBP have)
                  (VP (VBN heard)
                    (S
                      (NP (PRP me)))
                    (, ,)
                    (S
                      (VP (VB take)
                        (NP (NN care))
                        (SBAR (IN that)
                          (S
                            (NP (PRP you))
                            (VP
                              (VP (VBZ obey) (: ;)
                                (FRAG (IN if) (RB not)))
                              (PRN (, ,)
                                (S
                                  (VP (VB recollect)
                                    (SBAR (IN that)
                                      (S
                                        (NP (PRP I))
                                        (VP (VBP have)
                                          (NP (PRP$ my) (JJ own) (NNS men))))))))
                              (ADVP (RB here)))))))))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (CC but)
            (VP (VB point)
              (PP (IN with)
                (NP (PRP$ my) (NN finger))))
            (, ,)
            (VP (VB _)
              (ADVP (RB overboard))))))
      (NP (PRP you))
      (VP (VBP go)
        (NP (NNS _))))
    (. .)))

nsubj(tell-3, You-1)
aux(tell-3, will-2)
root(ROOT-0, tell-3)
det(cook-5, the-4)
dobj(tell-3, cook-5)
dobj(say-8, what-6)
nsubj(say-8, I-7)
advcl(tell-3, say-8)
advmod(heard-15, now-11)
mark(heard-15, that-12)
nsubj(heard-15, you-13)
aux(heard-15, have-14)
advcl(tell-3, heard-15)
conj_and(say-8, heard-15)
xcomp(heard-15, me-16)
ccomp(heard-15, take-18)
dobj(take-18, care-19)
mark(obey-22, that-20)
nsubj(obey-22, you-21)
ccomp(take-18, obey-22)
dep(obey-22, if-24)
neg(if-24, not-25)
parataxis(obey-22, recollect-27)
mark(have-30, that-28)
nsubj(have-30, I-29)
ccomp(recollect-27, have-30)
poss(men-33, my-31)
amod(men-33, own-32)
dobj(have-30, men-33)
advmod(obey-22, here-34)
mark(point-40, if-37)
nsubj(point-40, I-38)
cc(point-40, but-39)
advcl(go-48, point-40)
poss(finger-43, my-42)
prep_with(point-40, finger-43)
dep(point-40, _-45)
advmod(_-45, overboard-46)
nsubj(go-48, you-47)
conj_and(tell-3, go-48)
dobj(go-48, _-49)

(ROOT
  (SQ (MD Do)
    (NP (PRP you))
    (VP
      (ADVP (RB perfectly))
      (VBD comprehend)
      (NP (PRP me)))
    (. ?) ('' '')))

aux(comprehend-4, Do-1)
nsubj(comprehend-4, you-2)
advmod(comprehend-4, perfectly-3)
root(ROOT-0, comprehend-4)
dobj(comprehend-4, me-5)

(ROOT
  (S
    (NP
      (SBAR (`` ``)
        (S
          (ADVP (RB Yes))
          (, ,) (: --)
          (VP (VBP sir))
          (, ,) ('' ''))))
    (VP (VBD stammered)
      (NP (DT the) (NN steward)))
    (. .)))

advmod(sir-5, Yes-2)
nsubj(stammered-8, sir-5)
root(ROOT-0, stammered-8)
det(steward-10, the-9)
dobj(stammered-8, steward-10)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (NNP _) (NNP sir))
    (VP (VBZ _))
    (. !)))

discourse(_-6, Yes-2)
nn(sir-5, _-4)
nsubj(_-6, sir-5)
root(ROOT-0, _-6)

(ROOT
  (S (: --)
    (SBAR
      (WHNP (WP what))
      (S
        (VP (VBD did)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP tell)
                (NP (PRP you))))))))
    (, ,)
    (VP (VBP sirrah))
    (. ?)))

nsubj(did-3, what-2)
parataxis(sirrah-8, did-3)
nsubj(tell-5, I-4)
ccomp(did-3, tell-5)
dobj(tell-5, you-6)
root(ROOT-0, sirrah-8)

(ROOT
  (PRN (: --)
    (FRAG
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP$ my) (NN lord)))
    (. .)))

discourse(lord-5, Yes-2)
poss(lord-5, my-4)
root(ROOT-0, lord-5)

(ROOT
  (S
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB understand)
          (NP (PRP me)))))
    (. ?) ('' '')))

root(ROOT-0, Do-1)
nsubj(understand-3, you-2)
ccomp(Do-1, understand-3)
dobj(understand-3, me-4)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes)))
    (: --)
    (S
      (NP (PRP$ my))
      (VP (VBD lord)))
    (. .) ('' '')))

dep(lord-5, Yes-2)
nsubj(lord-5, my-4)
root(ROOT-0, lord-5)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Pray))
      (, ,)
      (NP
        (NP (NN steward))
        (, ,)
        (SBAR
          (WHNP (WP$ whose) (NNS clothes))
          (S
            (VP (VBZ has)
              (NP
                (NP (DT this) (NN gentleman))
                (VP (VBN put)
                  (PRT (RP on)))))))))
    (. ?) ('' '')))

root(ROOT-0, Pray-2)
appos(Pray-2, steward-4)
poss(clothes-7, steward-4)
nsubj(has-8, clothes-7)
rcmod(steward-4, has-8)
det(gentleman-10, this-9)
dobj(has-8, gentleman-10)
vmod(gentleman-10, put-11)
prt(put-11, on-12)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NNP Mr))
        (PRN (: --)
          (S
            (NP (NNP Mr) (NNP Ossulton))
            (VP (VBZ 's) (, ,)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP think))))))
          (: --)))
      (VP (VBP sir) (: --)
        (NP (PRP$ my) (NN lord))))
    (, ,)
    (NP (PRP I))
    (VP (VBP mean))
    (. .) ('' '')))

nsubj(sir-11, Mr-2)
nn(Ossulton-5, Mr-4)
nsubj('s-6, Ossulton-5)
dep(Mr-2, 's-6)
nsubj(think-9, I-8)
ccomp('s-6, think-9)
ccomp(mean-17, sir-11)
poss(lord-14, my-13)
dobj(sir-11, lord-14)
parataxis(sir-11, lord-14)
nsubj(mean-17, I-16)
root(ROOT-0, mean-17)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Very))
      (ADVP (RB well))
      (, ,)
      (S
        (VP (VBN steward)))
      (: ;)
      (VP
        (ADVP (RB then))
        (VBP recollect)))
    (, ,)
    (S
      (PP (IN in)
        (NP (NN future)))
      (NP (PRP you))
      (VP
        (ADVP (RB always))
        (VBP address)
        (NP (DT that) (NN gentleman))
        (PP (IN as)
          (NP (NNP _) (NNP Mr) (NNP Ossulton) (NNP _)))))
    (. .) ('' '')))

nsubj(recollect-8, Very-2)
advmod(recollect-8, well-3)
dep(recollect-8, steward-5)
advmod(recollect-8, then-7)
root(ROOT-0, recollect-8)
prep_in(address-14, future-11)
nsubj(address-14, you-12)
advmod(address-14, always-13)
parataxis(recollect-8, address-14)
det(gentleman-16, that-15)
dobj(address-14, gentleman-16)
nn(_-21, _-18)
nn(_-21, Mr-19)
nn(_-21, Ossulton-20)
prep_as(address-14, _-21)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP$ my))
      (VP (VBD lord))
      (, ,) ('' ''))
    (CC and)
    (S
      (NP (DT the) (NN steward))
      (VP
        (VP (VBD went)
          (PRT (RP down))
          (ADVP (RB below)))
        (, ,)
        (CC and)
        (VP (VBD was)
          (VP (VBN obliged)
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP
                    (NP (DT a) (NN couple))
                    (PP (IN of)
                      (NP
                        (NP (NNS glasses))
                        (PP (IN of)
                          (NP (NN brandy))))))
                  (S
                    (VP (TO to)
                      (VP (VB keep)
                        (NP (PRP himself))
                        (PP (IN from)
                          (NP (NN fainting)))))))))))))
    (. .)))

discourse(lord-5, Yes-2)
nsubj(lord-5, my-4)
root(ROOT-0, lord-5)
det(steward-10, the-9)
nsubj(went-11, steward-10)
nsubjpass(obliged-17, steward-10)
nsubj(take-19, steward-10)
conj_and(lord-5, went-11)
prt(went-11, down-12)
advmod(went-11, below-13)
auxpass(obliged-17, was-16)
conj_and(lord-5, obliged-17)
conj_and(went-11, obliged-17)
aux(take-19, to-18)
xcomp(obliged-17, take-19)
det(couple-21, a-20)
dobj(take-19, couple-21)
prep_of(couple-21, glasses-23)
prep_of(glasses-23, brandy-25)
aux(keep-27, to-26)
vmod(take-19, keep-27)
dobj(keep-27, himself-28)
prep_from(keep-27, fainting-30)

(ROOT
  (SBARQ
    (SBARQ (`` ``)
      (WHNP (WP Who))
      (SQ (VBP are)
        (NP (PRP they))))
    (, ,)
    (CC and)
    (SBARQ
      (WHNP (WP what))
      (SQ (VBP are)
        (NP
          (NP (PRP they))
          (, ,)
          (NP (NNP Mr) (NNP Maddox))))
      (. ?) ('' ''))))

root(ROOT-0, Who-2)
cop(Who-2, are-3)
nsubj(Who-2, they-4)
conj_and(Who-2, what-7)
cop(what-7, are-8)
nsubj(what-7, they-9)
nn(Maddox-12, Mr-11)
appos(they-9, Maddox-12)

(ROOT
  (NP
    (NP
      (NP (NN cried))
      (NP (DT the) (NN lady) (POS 's)))
    (: -)
    (NP
      (NP (NN maid))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD had)
            (VP (VBN been)
              (VP (VBG weeping)))))))
    (. .)))

root(ROOT-0, cried-1)
det(lady-3, the-2)
poss(cried-1, lady-3)
dep(cried-1, maid-6)
nsubj(weeping-11, maid-6)
aux(weeping-11, had-9)
aux(weeping-11, been-10)
rcmod(maid-6, weeping-11)

(ROOT
  (S (`` ``)
    (VP (VB Pirates))
    (. !)))

root(ROOT-0, Pirates-2)

(ROOT
  (S (: --)
    (S
      (VP (VBG _)
        (NP (JJ bloody) (NNS murderous))))
    (, ,)
    (VP (VBP stick-at-nothing)
      (NP (JJ _) (NNS pirates)))
    (. !) ('' '')))

parataxis(stick-at-nothing-6, _-2)
amod(murderous-4, bloody-3)
dobj(_-2, murderous-4)
root(ROOT-0, stick-at-nothing-6)
amod(pirates-8, _-7)
dobj(stick-at-nothing-6, pirates-8)

(ROOT
  (S
    (VP (VBD replied)
      (NP (DT the) (NN steward)))
    (. .)))

root(ROOT-0, replied-1)
det(steward-3, the-2)
dobj(replied-1, steward-3)

(ROOT
  (INTJ (`` ``) (UH Oh) (. !) ('' '')))

root(ROOT-0, Oh-2)

(ROOT
  (SINV
    (VP (VBD screamed))
    (NP
      (NP (DT the) (NN lady) (POS 's))
      (NNP -) (NNP maid))
    (, ,) (`` ``)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (VP (MD will)
            (VP (VB become)
              (PP (IN of)
                (NP (PRP us)))))))
      (, ,)
      (NP (JJ poor))
      (VP (VBD unprotected)
        (NP (NNS females))))
    (. ?) ('' '')))

root(ROOT-0, screamed-1)
det(lady-3, the-2)
poss(maid-6, lady-3)
nsubj(screamed-1, maid-6)
nsubj(become-11, what-9)
aux(become-11, will-10)
advcl(unprotected-16, become-11)
prep_of(become-11, us-13)
nsubj(unprotected-16, poor-15)
ccomp(screamed-1, unprotected-16)
dobj(unprotected-16, females-17)

(ROOT
  (S (CC And)
    (NP (PRP she))
    (VP (VBN hastened)
      (PP (IN into)
        (NP (DT the) (NN cabin)))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB impart)
            (NP (DT this) (JJ dreadful) (NN intelligence))))))
    (. .)))

cc(hastened-3, And-1)
nsubj(hastened-3, she-2)
nsubj(impart-9, she-2)
root(ROOT-0, hastened-3)
det(cabin-6, the-5)
prep_into(hastened-3, cabin-6)
aux(impart-9, to-8)
xcomp(hastened-3, impart-9)
det(intelligence-12, this-10)
amod(intelligence-12, dreadful-11)
dobj(impart-9, intelligence-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS ladies))
      (PP (IN in)
        (NP (DT the) (NN cabin))))
    (VP (VBD were) (RB not)
      (PP (IN in)
        (NP (DT a)
          (ADJP (RB very) (JJ enviable))
          (NN situation))))
    (. .)))

det(ladies-2, The-1)
nsubj(were-6, ladies-2)
det(cabin-5, the-4)
prep_in(ladies-2, cabin-5)
root(ROOT-0, were-6)
neg(were-6, not-7)
det(situation-12, a-9)
advmod(enviable-11, very-10)
amod(situation-12, enviable-11)
prep_in(were-6, situation-12)

(ROOT
  (S
    (PP (IN As) (IN for)
      (NP
        (NP (DT the) (NNP elder) (NNP Miss) (NNP Ossulton))
        (PRN (-LRB- -LRB-) (IN but) (RB perhaps)
          (PRN (, ,)
            (S
              (NP (PRP it))
              (VP (MD will)
                (VP (VB be)
                  (ADJP (JJR better))
                  (PP (IN in)
                    (NP (NN future)))))))
          (NP
            (S
              (VP (TO to)
                (VP (VB distinguish)
                  (NP (DT the) (CD two) (NNS ladies))
                  (, ,)
                  (PP (IN by)
                    (S
                      (VP (VBG calling)
                        (S
                          (NP (DT the) (NN elder))
                          (ADVP (RB simply))
                          (NP (NNP Miss) (NNP Ossulton)))))))))
            (, ,)
            (CC and)
            (NP
              (NP (PRP$ her) (NN niece))
              (, ,)
              (NP (NNP Cecilia))))
          (-RRB- -RRB-))))
    (, ,)
    (NP (PRP she))
    (VP (VBD was)
      (VP (VBG sitting)
        (PP (IN with)
          (NP (PRP$ her) (NNS salts)))
        (PP (TO to)
          (NP
            (NP (PRP$ her) (NN nose))
            (, ,)
            (VP (VBN agonised)
              (PP (IN with)
                (NP
                  (NP (DT a) (NN mixture))
                  (PP (IN of)
                    (NP (NN trepidation)
                      (CC and)
                      (VBN wounded) (NN pride))))))))))
    (. .)))

det(Ossulton-6, the-3)
nn(Ossulton-6, elder-4)
nn(Ossulton-6, Miss-5)
prep_as_for(sitting-40, Ossulton-6)
dep(distinguish-18, but-8)
dep(distinguish-18, perhaps-9)
nsubj(better-14, it-11)
aux(better-14, will-12)
cop(better-14, be-13)
dep(distinguish-18, better-14)
prep_in(better-14, future-16)
aux(distinguish-18, to-17)
dep(Ossulton-6, distinguish-18)
det(ladies-21, the-19)
num(ladies-21, two-20)
dobj(distinguish-18, ladies-21)
prepc_by(distinguish-18, calling-24)
det(elder-26, the-25)
dep(Ossulton-29, elder-26)
advmod(Ossulton-29, simply-27)
nn(Ossulton-29, Miss-28)
dep(calling-24, Ossulton-29)
poss(niece-33, her-32)
dep(Ossulton-6, niece-33)
conj_and(distinguish-18, niece-33)
appos(niece-33, Cecilia-35)
nsubj(sitting-40, she-38)
aux(sitting-40, was-39)
root(ROOT-0, sitting-40)
poss(salts-43, her-42)
prep_with(sitting-40, salts-43)
poss(nose-46, her-45)
prep_to(sitting-40, nose-46)
vmod(nose-46, agonised-48)
det(mixture-51, a-50)
prep_with(agonised-48, mixture-51)
nn(pride-56, trepidation-53)
conj_and(trepidation-53, wounded-55)
nn(pride-56, wounded-55)
prep_of(mixture-51, pride-56)

(ROOT
  (S
    (S
      (NP (NNP Mrs) (NNP Lascelles))
      (VP (VBD was)
        (VP (VBG weeping))))
    (, ,)
    (CC but)
    (S
      (VP (VBG weeping)
        (ADVP (RB gently))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(weeping-4, Lascelles-2)
nsubj(weeping-7, Lascelles-2)
aux(weeping-4, was-3)
root(ROOT-0, weeping-4)
conj_but(weeping-4, weeping-7)
advmod(weeping-7, gently-8)

(ROOT
  (S
    (S
      (NP (NNP Cecilia))
      (VP (VBD was)
        (ADJP (JJ sad))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ her) (NN heart))
      (VP (VBD was)
        (VP (VBG beating)
          (PP (IN with)
            (NP (NN anxiety)
              (CC and)
              (NN suspense))))))
    (: --)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (DT the) (NN maid))
        (VP (VBD rushed)
          (PRT (RP in)))))
    (. .)))

nsubj(sad-3, Cecilia-1)
cop(sad-3, was-2)
root(ROOT-0, sad-3)
poss(heart-7, her-6)
nsubj(beating-9, heart-7)
aux(beating-9, was-8)
conj_and(sad-3, beating-9)
prep_with(beating-9, anxiety-11)
prep_with(beating-9, suspense-13)
conj_and(anxiety-11, suspense-13)
advmod(rushed-18, when-15)
det(maid-17, the-16)
nsubj(rushed-18, maid-17)
conj_and(sad-3, rushed-18)
prt(rushed-18, in-19)

(ROOT
  (S (`` ``)
    (NP (NNP O))
    (VP (VBP madam))
    (. !)))

nsubj(madam-3, O-2)
root(ROOT-0, madam-3)

(ROOT
  (S
    (NP (NNP O))
    (VP (VBP miss))
    (. !)))

nsubj(miss-2, O-1)
root(ROOT-0, miss-2)

(ROOT
  (NP (NNP O) (NNP Mrs) (NNP Lascelles) (. !)))

nn(Lascelles-3, O-1)
nn(Lascelles-3, Mrs-2)
root(ROOT-0, Lascelles-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN found)
        (NP (PRP it))
        (ADVP (DT all) (IN out))))
    (. !)))

nsubj(found-3, I-1)
aux(found-3, have-2)
root(ROOT-0, found-3)
dobj(found-3, it-4)
dep(out-6, all-5)
advmod(found-3, out-6)

(ROOT
  (PRN (: --)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (NP
          (NP (JJ murderous))
          (, ,)
          (NP (JJ bloody) (, ,) (JJ do-everything) (NNS pirates))
          (. !) ('' ''))))))

nsubj(murderous-4, they-2)
cop(murderous-4, are-3)
root(ROOT-0, murderous-4)
amod(pirates-9, bloody-6)
amod(pirates-9, do-everything-8)
appos(murderous-4, pirates-9)

(ROOT
  (S (`` ``)
    (VP (VB Mercy)
      (PP (IN on)
        (NP (PRP us))))
    (. !) ('' '')))

root(ROOT-0, Mercy-2)
prep_on(Mercy-2, us-4)

(ROOT
  (S
    (S
      (NP (NNP exclaimed) (NNP Miss))
      (VP (VBN Ossulton)))
    (: ;) (`` ``)
    (S
      (ADVP (RB surely))
      (NP (PRP they))
      (VP (MD will)
        (ADVP (RB never))
        (VP (VB dare))))
    (: --) (. ?) ('' '')))

nn(Miss-2, exclaimed-1)
nsubj(Ossulton-3, Miss-2)
root(ROOT-0, Ossulton-3)
advmod(dare-10, surely-6)
nsubj(dare-10, they-7)
aux(dare-10, will-8)
neg(dare-10, never-9)
parataxis(Ossulton-3, dare-10)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh))
      (, ,)
      (VP (VB ma'am)))
    (, ,)
    (NP (PRP they))
    (VP (VBP dare)
      (NP (NN anything)))
    (. !)))

discourse(ma'am-4, Oh-2)
ccomp(dare-7, ma'am-4)
nsubj(dare-7, they-6)
root(ROOT-0, dare-7)
dobj(dare-7, anything-8)

(ROOT
  (S (: --)
    (S
      (NP (PRP they))
      (ADVP (RB just) (RB now))
      (VP (VBD were)
        (PP (IN for)
          (S
            (VP (VBG throwing)
              (NP (DT the) (NN steward))
              (ADVP (RB overboard)))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (VP
          (VP (VBN rummaged)
            (PP (IN for)
              (NP (PDT all) (DT the) (NNS portmanteaus))))
          (, ,)
          (CC and)
          (VP (VBN dressed)
            (NP (PRP themselves))
            (PP (IN in)
              (NP
                (NP (DT the) (NNS gentlemen) (POS 's))
                (JJS best) (NNS clothes)))))))
    (. .)))

nsubj(were-5, they-2)
advmod(now-4, just-3)
advmod(were-5, now-4)
root(ROOT-0, were-5)
prepc_for(were-5, throwing-7)
det(steward-9, the-8)
dobj(throwing-7, steward-9)
advmod(throwing-7, overboard-10)
nsubj(rummaged-15, they-13)
nsubj(dressed-22, they-13)
aux(rummaged-15, have-14)
conj_and(were-5, rummaged-15)
predet(portmanteaus-19, all-17)
det(portmanteaus-19, the-18)
prep_for(rummaged-15, portmanteaus-19)
conj_and(were-5, dressed-22)
conj_and(rummaged-15, dressed-22)
dobj(dressed-22, themselves-23)
det(gentlemen-26, the-25)
poss(clothes-29, gentlemen-26)
amod(clothes-29, best-28)
prep_in(dressed-22, clothes-29)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN captain))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBD told)
        (NP (DT the) (NN steward))
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD was)
                (NP (NNP Lord) (NNP B))))
            (: --))
          (, ,)
          (CC and)
          (SBAR (IN that)
            (S
              (SBAR (IN if)
                (S
                  (NP (PRP he))
                  (VP (VBD dared)
                    (S
                      (VP (TO to)
                        (VP (VB call)
                          (S
                            (NP (PRP him))
                            (ADJP (NN anything) (JJ else)))))))))
              (, ,)
              (NP (PRP he))
              (VP (MD would)
                (VP (VB cut)
                  (NP (PRP$ his) (NN throat))
                  (PP (IN from)
                    (NP (NN ear)))
                  (PP (TO to)
                    (NP (NN ear))))))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (DT the) (NN cook))
          (VP (VBP do) (RB n't)
            (VP (VB give)
              (NP (PRP them))
              (NP (DT a) (JJ good) (NN dinner))))))
      (, ,)
      (NP (PRP they))
      (VP (VBP swear)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (MD 'll)
              (VP
                (VP (VB chop)
                  (NP (PRP$ his) (JJ right) (NN hand))
                  (PRT (RP off)))
                (, ,)
                (CC and)
                (VP (VB make)
                  (S
                    (NP (PRP him))
                    (VP (VB eat)
                      (NP (PRP it))
                      (PP (IN without)
                        (NP (NN pepper)
                          (CC or)
                          (NN salt))))))))))))
    (. !) ('' '')))

det(captain-2, The-1)
nsubj(told-5, captain-2)
prep_of(captain-2, them-4)
root(ROOT-0, told-5)
det(steward-7, the-6)
dobj(told-5, steward-7)
mark(B-12, that-8)
nsubj(B-12, he-9)
cop(B-12, was-10)
nn(B-12, Lord-11)
ccomp(told-5, B-12)
mark(cut-28, that-16)
mark(dared-19, if-17)
nsubj(dared-19, he-18)
nsubj(call-21, he-18)
advcl(cut-28, dared-19)
aux(call-21, to-20)
xcomp(dared-19, call-21)
nsubj(else-24, him-22)
npadvmod(else-24, anything-23)
xcomp(call-21, else-24)
nsubj(cut-28, he-26)
aux(cut-28, would-27)
ccomp(told-5, cut-28)
conj_and(B-12, cut-28)
poss(throat-30, his-29)
dobj(cut-28, throat-30)
prep_from(cut-28, ear-32)
prep_to(cut-28, ear-34)
mark(give-42, if-37)
det(cook-39, the-38)
nsubj(give-42, cook-39)
aux(give-42, do-40)
neg(give-42, n't-41)
advcl(swear-49, give-42)
iobj(give-42, them-43)
det(dinner-46, a-44)
amod(dinner-46, good-45)
dobj(give-42, dinner-46)
nsubj(swear-49, they-48)
conj_and(told-5, swear-49)
mark(chop-53, that-50)
nsubj(chop-53, they-51)
nsubj(make-60, they-51)
aux(chop-53, 'll-52)
ccomp(swear-49, chop-53)
poss(hand-56, his-54)
amod(hand-56, right-55)
dobj(chop-53, hand-56)
prt(chop-53, off-57)
ccomp(swear-49, make-60)
conj_and(chop-53, make-60)
nsubj(eat-62, him-61)
ccomp(make-60, eat-62)
dobj(eat-62, it-63)
prep_without(eat-62, pepper-65)
prep_without(eat-62, salt-67)
conj_or(pepper-65, salt-67)

(ROOT
  (S
    (NP (NNP Miss) (NNP Ossulton))
    (VP
      (VP (VBD screamed))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PRT (RP off))
        (PP (IN into)
          (NP (NNS hysterics)))))
    (. .)))

nn(Ossulton-2, Miss-1)
nsubj(screamed-3, Ossulton-2)
nsubj(went-6, Ossulton-2)
root(ROOT-0, screamed-3)
conj_and(screamed-3, went-6)
prt(went-6, off-7)
prep_into(went-6, hysterics-9)

(ROOT
  (S
    (S
      (NP (NNP Mrs) (NNP Lascelles)
        (CC and)
        (NNP Cecilia))
      (VP (VBD went)
        (PP (TO to)
          (NP (PRP$ her) (NN assistance)))))
    (: ;)
    (CC but)
    (S
      (NP (DT the) (NN latter))
      (VP (VBD had) (RB not)
        (VP (VBN forgotten)
          (NP
            (NP (DT the)
              (ADJP (RB very) (JJ different))
              (NN behaviour))
            (PP (IN of)
              (NP
                (NP (NNP Jack) (NNP Pickersgill))
                (, ,)
                (CC and)
                (NP (PRP$ his) (JJ polite) (NNS manners))
                (, ,))))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBD boarded)
                (NP (DT the) (NN vessel))))))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(went-5, Lascelles-2)
conj_and(Lascelles-2, Cecilia-4)
nsubj(went-5, Cecilia-4)
root(ROOT-0, went-5)
poss(assistance-8, her-7)
prep_to(went-5, assistance-8)
det(latter-12, the-11)
nsubj(forgotten-15, latter-12)
aux(forgotten-15, had-13)
neg(forgotten-15, not-14)
conj_but(went-5, forgotten-15)
det(behaviour-19, the-16)
advmod(different-18, very-17)
amod(behaviour-19, different-18)
dobj(forgotten-15, behaviour-19)
nn(Pickersgill-22, Jack-21)
prep_of(behaviour-19, Pickersgill-22)
poss(manners-27, his-25)
amod(manners-27, polite-26)
prep_of(behaviour-19, manners-27)
conj_and(Pickersgill-22, manners-27)
advmod(boarded-31, when-29)
nsubj(boarded-31, he-30)
advcl(forgotten-15, boarded-31)
det(vessel-33, the-32)
dobj(boarded-31, vessel-33)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD did) (RB not)
        (ADVP (RB therefore))
        (VP (VB believe)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (NN maid))
              (VP (VBD had)
                (VP (VBN reported))))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB still))
      (NP (PRP$ her) (NN anxiety)
        (CC and)
        (NN suspense))
      (VP (VBD were)
        (ADJP (JJ great))
        (, ,)
        (PP
          (ADVP (RB especially))
          (IN about)
          (NP (PRP$ her) (NN father)))))
    (. .)))

nsubj(believe-5, She-1)
aux(believe-5, did-2)
neg(believe-5, not-3)
advmod(believe-5, therefore-4)
root(ROOT-0, believe-5)
dobj(reported-10, what-6)
det(maid-8, the-7)
nsubj(reported-10, maid-8)
aux(reported-10, had-9)
ccomp(believe-5, reported-10)
advmod(great-19, still-13)
poss(anxiety-15, her-14)
nsubj(great-19, anxiety-15)
conj_and(anxiety-15, suspense-17)
nsubj(great-19, suspense-17)
cop(great-19, were-18)
conj_but(believe-5, great-19)
advmod(great-19, especially-21)
poss(father-24, her-23)
prep_about(great-19, father-24)

(ROOT
  (S
    (PP (IN After)
      (S
        (VP (VBG having)
          (VP (VBN restored)
            (NP (PRP$ her) (NN aunt))))))
    (NP (PRP she))
    (VP (VBD put)
      (PP (IN on)
        (NP
          (NP (PRP$ her) (NN bonnet))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (VP (VBG lying)
                  (PP (IN on)
                    (NP (DT the) (NN sofa))))))))))
    (. .)))

aux(restored-3, having-2)
prepc_after(put-7, restored-3)
poss(aunt-5, her-4)
dobj(restored-3, aunt-5)
nsubj(put-7, she-6)
root(ROOT-0, put-7)
poss(bonnet-10, her-9)
prep_on(put-7, bonnet-10)
nsubj(lying-14, bonnet-10)
aux(lying-14, was-13)
rcmod(bonnet-10, lying-14)
det(sofa-17, the-16)
prep_on(lying-14, sofa-17)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG going) (, ,)
        (ADVP (RB dear))))
    (. ?) ('' '')))

advmod(going-5, Where-2)
aux(going-5, are-3)
nsubj(going-5, you-4)
root(ROOT-0, going-5)
advmod(going-5, dear-7)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Mrs) (NNP Lascelles)))
    (. .)))

root(ROOT-0, said-1)
nn(Lascelles-3, Mrs-2)
dobj(said-1, Lascelles-3)

(ROOT
  (SINV (`` ``)
    (FRAG
      (PP (IN On)
        (NP (NN deck))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Cecilia))
    (. .)))

dep(replied-6, On-2)
pobj(On-2, deck-3)
root(ROOT-0, replied-6)
nsubj(replied-6, Cecilia-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD must)
      (CC and)
      (MD will)
      (VP (VB speak)
        (PP (TO to)
          (NP (DT these) (NNS men)))))
    (. .) ('' '')))

nsubj(speak-6, I-2)
aux(speak-6, must-3)
aux(speak-6, will-5)
conj_and(speak-6, will-5)
root(ROOT-0, speak-6)
det(men-9, these-8)
prep_to(speak-6, men-9)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Gracious) (NNP heaven))
    (, ,)
    (NP (NNP Miss) (NNP Ossulton))
    (. !)))

nn(heaven-3, Gracious-2)
root(ROOT-0, heaven-3)
nn(Ossulton-6, Miss-5)
dep(heaven-3, Ossulton-6)

(ROOT
  (S
    (VP (VBG Going)
      (PP (IN on)
        (NP (NN deck))))
    (. !)))

root(ROOT-0, Going-1)
prep_on(Going-1, deck-3)

(ROOT
  (SQ (MD Have)
    (NP (PRP you))
    (VP (VBD heard)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNP Phoebe))
          (VP (VBZ says)))))
    (. ?) ('' '')))

aux(heard-3, Have-1)
nsubj(heard-3, you-2)
root(ROOT-0, heard-3)
dobj(says-6, what-4)
nsubj(says-6, Phoebe-5)
ccomp(heard-3, says-6)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes) (, ,) (UH aunt))
      (, ,)
      (NP (PRP I))
      (VP (VBP have)))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD can)
        (VP (VB wait)
          (ADVP (RB here))
          (ADVP (RB no) (RB longer)))))
    (. .) ('' '')))

discourse(have-7, Yes-2)
dep(Yes-2, aunt-4)
nsubj(have-7, I-6)
root(ROOT-0, have-7)
nsubj(wait-12, I-10)
aux(wait-12, can-11)
conj_but(have-7, wait-12)
advmod(wait-12, here-13)
neg(longer-15, no-14)
advmod(wait-12, longer-15)

(ROOT
  (S (`` ``)
    (VP (VB Stop)
      (NP (PRP her)))
    (. !)))

root(ROOT-0, Stop-2)
dobj(Stop-2, her-3)

(ROOT
  (S
    (VP (VB Stop)
      (NP (PRP her)))
    (. !)))

root(ROOT-0, Stop-1)
dobj(Stop-1, her-2)

(ROOT
  (S (: --)
    (NP (PRP she))
    (VP (MD will)
      (VP (VB be)
        (VP (VBN murdered))))
    (. !)))

nsubjpass(murdered-5, she-2)
aux(murdered-5, will-3)
auxpass(murdered-5, be-4)
root(ROOT-0, murdered-5)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (PRP she))
      (VP (MD will)
        (VP (VB be))))
    (: --)
    (S
      (NP (PRP she))
      (VP (VBZ is)
        (ADJP (JJ mad))))
    (. !) ('' '')))

nsubj(be-4, she-2)
aux(be-4, will-3)
root(ROOT-0, be-4)
nsubj(mad-8, she-6)
cop(mad-8, is-7)
parataxis(be-4, mad-8)

(ROOT
  (S
    (SINV
      (VP (VBD screamed))
      (NP (NNP Miss) (NNP Ossulton)))
    (: ;)
    (S (CC but)
      (NP (DT no) (NN one))
      (VP (VBD attempted)
        (S
          (VP (TO to)
            (VP (VB stop)
              (NP (NNP Cecilia)))))))
    (, ,)
    (CC and)
    (S
      (PP (IN on)
        (NP (NN deck)))
      (NP (PRP she))
      (VP (VBD went)))
    (. .)))

dep(attempted-8, screamed-1)
nn(Ossulton-3, Miss-2)
nsubj(screamed-1, Ossulton-3)
neg(one-7, no-6)
nsubj(attempted-8, one-7)
nsubj(stop-10, one-7)
root(ROOT-0, attempted-8)
aux(stop-10, to-9)
xcomp(attempted-8, stop-10)
dobj(stop-10, Cecilia-11)
prep_on(went-17, deck-15)
nsubj(went-17, she-16)
conj_and(attempted-8, went-17)

(ROOT
  (S
    (PP (IN On)
      (NP (PRP$ her) (NN arrival)))
    (NP (PRP she))
    (VP (VBD found)
      (NP (NNP Jack) (NNP Pickersgill)
        (CC and)
        (NNP Corbett))
      (UCP
        (VP (VBG walking)
          (NP
            (NP (DT the) (NN deck))
            (, ,)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS smugglers))
                  (PP (IN at)
                    (NP (DT the) (NN helm))))))
            (, ,)
            (CC and)
            (NP (DT the) (NN rest)))
          (ADVP (RB forward)))
        (, ,)
        (CC and)
        (ADJP (RB as) (JJ quiet)
          (PP (IN as)
            (NP
              (NP (DT the) (NN crew))
              (PP (IN of)
                (NP (DT the) (NN yacht))))))))
    (. .)))

poss(arrival-3, her-2)
prep_on(found-5, arrival-3)
nsubj(found-5, she-4)
root(ROOT-0, found-5)
nn(Pickersgill-7, Jack-6)
dobj(found-5, Pickersgill-7)
dobj(found-5, Corbett-9)
conj_and(Pickersgill-7, Corbett-9)
dep(found-5, walking-10)
det(deck-12, the-11)
dobj(walking-10, deck-12)
dobj(walking-10, one-14)
conj_and(deck-12, one-14)
det(smugglers-17, the-16)
prep_of(one-14, smugglers-17)
det(helm-20, the-19)
prep_at(smugglers-17, helm-20)
det(rest-24, the-23)
dobj(walking-10, rest-24)
conj_and(deck-12, rest-24)
advmod(walking-10, forward-25)
advmod(quiet-29, as-28)
dep(found-5, quiet-29)
conj_and(walking-10, quiet-29)
det(crew-32, the-31)
prep_as(quiet-29, crew-32)
det(yacht-35, the-34)
prep_of(crew-32, yacht-35)

(ROOT
  (S
    (ADVP (RB As) (RB soon)
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD made)
            (NP (PRP$ her) (NN appearance))))))
    (NP (NNP Jack))
    (VP
      (VP (VBD took)
        (PRT (RP off))
        (NP (PRP$ his) (NN hat)))
      (, ,)
      (CC and)
      (VP (VBD made)
        (S
          (NP (PRP her))
          (NP (DT a) (NN bow)))))
    (. .)))

advmod(soon-2, As-1)
advmod(took-9, soon-2)
mark(made-5, as-3)
nsubj(made-5, she-4)
ccomp(soon-2, made-5)
poss(appearance-7, her-6)
dobj(made-5, appearance-7)
nsubj(took-9, Jack-8)
nsubj(made-15, Jack-8)
root(ROOT-0, took-9)
prt(took-9, off-10)
poss(hat-12, his-11)
dobj(took-9, hat-12)
conj_and(took-9, made-15)
nsubj(bow-18, her-16)
det(bow-18, a-17)
xcomp(made-15, bow-18)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB know)
          (SBAR
            (WHNP (WP whom))
            (S
              (NP (PRP I))
              (VP (VBP have)
                (NP
                  (NP (DT the) (NN honour))
                  (PP (IN of)
                    (NP (JJ addressing) (, ,) (JJ young) (NN lady))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBN flattered)
          (PP (IN with)
            (NP
              (NP (DT this) (NN mark))
              (PP (IN of)
                (NP (NN confidence))))))))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, not-4)
root(ROOT-0, know-5)
dobj(have-8, whom-6)
nsubj(have-8, I-7)
ccomp(know-5, have-8)
det(honour-10, the-9)
dobj(have-8, honour-10)
amod(lady-15, addressing-12)
amod(lady-15, young-14)
prep_of(honour-10, lady-15)
nsubjpass(flattered-20, I-18)
auxpass(flattered-20, am-19)
conj_but(know-5, flattered-20)
det(mark-23, this-22)
prep_with(flattered-20, mark-23)
prep_of(mark-23, confidence-25)

(ROOT
  (S
    (S
      (S
        (NP (PRP You))
        (VP (VBP feel)))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VB assure)
          (NP (PRP you)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP feel)
      (ADVP (RB correctly))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP are) (RB not)
            (PP
              (ADVP (RB exactly))
              (IN in)
              (NP (JJ lawless) (NNS hands)))))))
    (. .) ('' '')))

nsubj(feel-2, You-1)
ccomp(feel-10, feel-2)
nsubj(assure-6, I-5)
conj_and(feel-2, assure-6)
ccomp(feel-10, assure-6)
dobj(assure-6, you-7)
nsubj(feel-10, you-9)
root(ROOT-0, feel-10)
advmod(feel-10, correctly-11)
mark(are-15, that-13)
nsubj(are-15, you-14)
ccomp(feel-10, are-15)
neg(are-15, not-16)
advmod(are-15, exactly-17)
amod(hands-20, lawless-19)
prep_in(are-15, hands-20)

(ROOT
  (S
    (NP (NNP Cecilia))
    (VP (VBD looked)
      (PP (IN with)
        (NP
          (NP (JJR more) (NN surprise))
          (PP (IN than)
            (NP (NN fear)))))
      (PP (IN at)
        (NP (NNP Pickersgill))))
    (. .)))

nsubj(looked-2, Cecilia-1)
root(ROOT-0, looked-2)
amod(surprise-5, more-4)
prep_with(looked-2, surprise-5)
prep_than(surprise-5, fear-7)
prep_at(looked-2, Pickersgill-9)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Mr) (NNP Hautaine) (POS 's))
        (NN dress))
      (VP (VBD became)
        (NP (PRP him))))
    (: ;)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD was)
          (NP (DT a) (JJ handsome) (, ,) (JJ fine-looking) (NN man)))
        (, ,)
        (CC and)
        (VP (VBD had)
          (NP
            (NP (NN nothing))
            (PP (IN of)
              (NP
                (NP (DT the) (NN ruffian))
                (PP (IN in)
                  (NP (PRP$ his) (NN appearance)))))))))
    (: ;)
    (SBAR (IN unless) (, ,)
      (PP (IN like)
        (NP
          (NP (NNP Byron) (POS 's))
          (NN Corsair)))
      (, ,)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (VP (VBG _)
            (NP (DT half) (JJ savage) (, ,) (JJ half) (JJ soft) (NN _))))))
    (. .)))

nn(Hautaine-2, Mr-1)
poss(dress-4, Hautaine-2)
nsubj(became-5, dress-4)
root(ROOT-0, became-5)
xcomp(became-5, him-6)
nsubj(man-14, he-8)
nsubj(had-17, he-8)
cop(man-14, was-9)
det(man-14, a-10)
amod(man-14, handsome-11)
amod(man-14, fine-looking-13)
parataxis(became-5, man-14)
parataxis(became-5, had-17)
conj_and(man-14, had-17)
dobj(had-17, nothing-18)
det(ruffian-21, the-20)
prep_of(nothing-18, ruffian-21)
poss(appearance-24, his-23)
prep_in(ruffian-21, appearance-24)
mark(_-35, unless-26)
poss(Corsair-31, Byron-29)
prep_like(_-35, Corsair-31)
nsubj(_-35, he-33)
aux(_-35, was-34)
parataxis(became-5, _-35)
det(_-41, half-36)
amod(_-41, savage-37)
amod(_-41, half-39)
amod(_-41, soft-40)
dobj(_-35, _-41)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD could) (RB not)
      (VP (VB help)
        (S
          (VP (VBG thinking)
            (SBAR (IN that)
              (S
                (NP (PRP she))
                (VP (VBD had)
                  (VP (VBN met)
                    (S
                      (ADJP (JJ many)))
                    (PP (IN with)
                      (NP (JJR less) (NNS pretensions)))
                    (, ,)
                    (ADVP
                      (ADVP (RB as) (RB far))
                      (SBAR (IN as)
                        (S
                          (NP (NN appearance))
                          (VP (VBD went) (, ,)
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NNS claims))
                                (PP (IN of)
                                  (NP (DT a) (NN gentleman)))))
                            (, ,)
                            (PP (IN at)
                              (NP
                                (NP (NNP Almack) (POS 's))
                                (CC and)
                                (NP (JJ other) (JJ fashionable) (NNS circles))))))))))))))))
    (. .)))

nsubj(help-4, She-1)
aux(help-4, could-2)
neg(help-4, not-3)
root(ROOT-0, help-4)
xcomp(help-4, thinking-5)
mark(met-9, that-6)
nsubj(met-9, she-7)
aux(met-9, had-8)
ccomp(thinking-5, met-9)
acomp(met-9, many-10)
amod(pretensions-13, less-12)
prep_with(met-9, pretensions-13)
advmod(far-16, as-15)
advmod(met-9, far-16)
mark(went-19, as-17)
nsubj(went-19, appearance-18)
advcl(far-16, went-19)
ccomp(far-16, went-19)
det(claims-23, the-22)
prep_to(went-19, claims-23)
det(gentleman-26, a-25)
prep_of(claims-23, gentleman-26)
prep_at(went-19, Almack-29)
possessive(Almack-29, 's-30)
amod(circles-34, other-32)
amod(circles-34, fashionable-33)
prep_at(went-19, circles-34)
conj_and(Almack-29, circles-34)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN ventured)
          (PP (IN on)
            (NP
              (NP (NN deck))
              (, ,)
              (NP (NN sir)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Cecilia))
      (, ,)
      (NP
        (PP (IN with)
          (NP (DT a) (JJ little) (NNS tremulousness)))
        (PP (IN in)
          (NP (PRP$ her) (NN voice))))
      (, ,) (`` ``)
      (S
        (VP (TO to)
          (VP (VB request) (, ,)
            (PP (IN as)
              (NP (DT a) (NN favour)))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (VP (MD will)
                  (VP (VB inform)
                    (NP (PRP me))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP$ your) (NNS intentions))
                        (VP (MD may)
                          (VP (VB be)
                            (PP (IN with)
                              (NP
                                (NP (NN regard))
                                (PP
                                  (PP (TO to)
                                    (NP (DT the) (NN vessel)))
                                  (CC and)
                                  (PP (IN with)
                                    (NP (NN regard))))))
                            (PP (TO to)
                              (NP (DT the) (NNS ladies)))))))))))))))
    (. !) ('' '')))

nsubj(ventured-4, I-2)
aux(ventured-4, have-3)
ccomp(said-11, ventured-4)
prep_on(ventured-4, deck-6)
appos(deck-6, sir-8)
root(ROOT-0, said-11)
nsubj(said-11, Cecilia-12)
appos(Cecilia-12, with-14)
det(tremulousness-17, a-15)
amod(tremulousness-17, little-16)
pobj(with-14, tremulousness-17)
poss(voice-20, her-19)
prep_in(with-14, voice-20)
aux(request-24, to-23)
vmod(Cecilia-12, request-24)
det(favour-28, a-27)
prep_as(request-24, favour-28)
mark(inform-33, that-30)
nsubj(inform-33, you-31)
aux(inform-33, will-32)
ccomp(request-24, inform-33)
dobj(inform-33, me-34)
dobj(be-39, what-35)
poss(intentions-37, your-36)
nsubj(be-39, intentions-37)
aux(be-39, may-38)
dep(inform-33, be-39)
prep_with(be-39, regard-41)
prep_with(be-39, regard-41')
conj_and(regard-41, regard-41')
det(vessel-44, the-43)
prep_to(regard-41, vessel-44)
prep_with(regard-41', regard-47)
det(ladies-50, the-49)
prep_to(be-39, ladies-50)

(ROOT
  (S (`` ``)
    (S (CC And)
      (NP (PRP I))
      (VP (VBP feel)
        (ADJP
          (ADJP (RB much) (VBN obliged)
            (PP (TO to)
              (NP (PRP you))))
          (PP (IN for)
            (S (RB so)
              (VP (VBG doing)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VB assure)
        (NP (PRP you))
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD will) (, ,)
              (SBAR
                (ADVP (RB as) (RB far))
                (IN as)
                (S
                  (NP (PRP I))
                  (VP (VBP have)
                    (VP (VBN made)
                      (PRT (RP up))
                      (NP (PRP$ my) (JJ own) (NN mind))))))
              (, ,)
              (VP (VB answer)
                (NP (PRP you))
                (ADVP (RB candidly))))))))
    (: :)
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBP tremble)
        (VP
          (LST (: --))
          (VB allow)
          (NP (PRP me))
          (S
            (VP (TO to)
              (VP (VB conduct)
                (NP (PRP you))
                (PP (TO to)
                  (NP (DT a) (NN seat)))))))))
    (. .)))

nsubj(feel-4, I-3)
root(ROOT-0, feel-4)
advmod(obliged-6, much-5)
acomp(feel-4, obliged-6)
prep_to(obliged-6, you-8)
advmod(doing-11, so-10)
prepc_for(obliged-6, doing-11)
nsubj(assure-15, I-14)
conj_and(feel-4, assure-15)
dobj(assure-15, you-16)
nsubj(answer-31, I-17)
aux(answer-31, will-18)
advmod(far-21, as-20)
advmod(made-25, far-21)
mark(made-25, as-22)
nsubj(made-25, I-23)
aux(made-25, have-24)
advcl(answer-31, made-25)
prt(made-25, up-26)
poss(mind-29, my-27)
amod(mind-29, own-28)
dobj(made-25, mind-29)
dep(assure-15, answer-31)
dobj(answer-31, you-32)
advmod(answer-31, candidly-33)
nsubj(tremble-37, you-36)
conj_but(feel-4, tremble-37)
xcomp(tremble-37, allow-39)
dobj(allow-39, me-40)
nsubj(conduct-42, me-40)
aux(conduct-42, to-41)
xcomp(allow-39, conduct-42)
dobj(conduct-42, you-43)
det(seat-46, a-45)
prep_to(conduct-42, seat-46)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ few) (NNS words)))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB remove)
          (NP (PRP$ your) (JJ present) (NN alarm)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP intend)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN vessel))
          (VP (MD shall)
            (VP (VB be)
              (VP (VBN returned)
                (PP (TO to)
                  (NP (PRP$ its) (NN owner)))
                (, ,)
                (PP (IN with)
                  (NP
                    (NP (DT every) (NN article))
                    (PP (IN in)
                      (NP (PRP it)))
                    (SBAR (IN as)
                      (S
                        (ADVP (RB religiously))
                        (VP (VBD respected)
                          (SBAR (RB as) (IN if)
                            (S
                              (NP (PRP they))
                              (VP (VBD were)
                                (NP (NN church) (NN property))))))))))))))))
    (. .)))

amod(words-3, few-2)
prep_in(intend-14, words-3)
advmod(intend-14, then-5)
aux(remove-8, to-7)
advcl(intend-14, remove-8)
poss(alarm-11, your-9)
amod(alarm-11, present-10)
dobj(remove-8, alarm-11)
nsubj(intend-14, I-13)
root(ROOT-0, intend-14)
mark(returned-20, that-15)
det(vessel-17, the-16)
nsubjpass(returned-20, vessel-17)
aux(returned-20, shall-18)
auxpass(returned-20, be-19)
ccomp(intend-14, returned-20)
poss(owner-23, its-22)
prep_to(returned-20, owner-23)
det(article-27, every-26)
prep_with(returned-20, article-27)
prep_in(article-27, it-29)
mark(respected-32, as-30)
advmod(respected-32, religiously-31)
dep(article-27, respected-32)
advmod(property-38, as-33)
mark(property-38, if-34)
nsubj(property-38, they-35)
cop(property-38, were-36)
nn(property-38, church-37)
advcl(respected-32, property-38)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP
          (NP (NN respect))
          (PP (TO to)
            (NP (PRP you))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (JJ other) (NNS ladies))
          (PP (IN on)
            (NP (NN board))))))
    (, ,)
    (NP (PRP I))
    (VP (VBZ pledge)
      (S
        (NP (PRP you))
        (NP (PRP$ my) (NN honour))
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP have)
                (NP (NN nothing))
                (PP (TO to)
                  (NP (NN fear))))))
          (: ;)
          (SBAR (IN that)
            (S
              (S
                (NP (PRP you))
                (VP (MD shall)
                  (VP (VB be)
                    (VP (VBN treated)
                      (PP (IN with)
                        (NP (DT every) (NN respect)))))))
              (: ;)
              (S
                (NP (PRP$ your) (NN privacy))
                (ADVP (RB never))
                (VP (VBD invaded)))))
          (: ;)
          (CC and)
          (SBAR (IN that)
            (S (, ,)
              (PP (IN in)
                (NP (DT a) (JJ few) (NNS days)))
              (, ,)
              (NP (PRP you))
              (VP (MD will)
                (VP (VB be)
                  (VP (VBN restored)
                    (PP (TO to)
                      (NP (PRP$ your) (NNS friends)))))))))))
    (. .)))

prep_with_respect_to(pledge-14, you-4)
det(ladies-9, the-7)
amod(ladies-9, other-8)
conj_and(pledge-14, ladies-9)
prep_on(ladies-9, board-11)
nsubj(pledge-14, I-13)
root(ROOT-0, pledge-14)
nsubj(have-20, you-15)
poss(honour-17, my-16)
dep(have-20, honour-17)
mark(have-20, that-18)
nsubj(have-20, you-19)
xcomp(pledge-14, have-20)
dobj(have-20, nothing-21)
prep_to(have-20, fear-23)
mark(treated-29, that-25)
nsubjpass(treated-29, you-26)
aux(treated-29, shall-27)
auxpass(treated-29, be-28)
xcomp(pledge-14, treated-29)
conj_and(have-20, treated-29)
det(respect-32, every-31)
prep_with(treated-29, respect-32)
poss(privacy-35, your-34)
nsubj(invaded-37, privacy-35)
neg(invaded-37, never-36)
parataxis(treated-29, invaded-37)
mark(restored-50, that-40)
det(days-45, a-43)
amod(days-45, few-44)
prep_in(restored-50, days-45)
nsubjpass(restored-50, you-47)
aux(restored-50, will-48)
auxpass(restored-50, be-49)
xcomp(pledge-14, restored-50)
conj_and(have-20, restored-50)
poss(friends-53, your-52)
prep_to(restored-50, friends-53)

(ROOT
  (S
    (S
      (NP (NNP Young) (NN lady))
      (, ,)
      (NP (PRP I))
      (VP (VBD pledge)
        (NP
          (NP (PRP$ my) (NNS hopes))
          (PP (IN of)
            (NP (JJ future) (NN salvation))))
        (PP (TO to)
          (NP
            (NP (DT the) (NN truth))
            (PP (IN of)
              (NP (DT this)))))))
    (: ;)
    (CC but)
    (, ,)
    (S
      (PP (IN at)
        (NP (DT the) (JJ same) (NN time)))
      (, ,)
      (NP (PRP I))
      (VP (MD must)
        (VP (VB make)
          (NP
            (NP (DT a) (JJ few) (NNS conditions))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S (, ,)
                (ADVP (RB however))
                (, ,)
                (VP (MD will) (RB not)
                  (VP (VB be)
                    (ADJP (RB very) (JJ severe))))))))))
    (. .) ('' '')))

nn(lady-2, Young-1)
nsubj(pledge-5, lady-2)
nsubj(pledge-5, I-4)
root(ROOT-0, pledge-5)
poss(hopes-7, my-6)
dobj(pledge-5, hopes-7)
amod(salvation-10, future-9)
prep_of(hopes-7, salvation-10)
det(truth-13, the-12)
prep_to(pledge-5, truth-13)
prep_of(truth-13, this-15)
det(time-22, the-20)
amod(time-22, same-21)
prep_at(make-26, time-22)
nsubj(make-26, I-24)
aux(make-26, must-25)
conj_but(pledge-5, make-26)
det(conditions-29, a-27)
amod(conditions-29, few-28)
dobj(make-26, conditions-29)
nsubj(severe-39, conditions-29)
advmod(severe-39, however-33)
aux(severe-39, will-35)
neg(severe-39, not-36)
cop(severe-39, be-37)
advmod(severe-39, very-38)
rcmod(conditions-29, severe-39)

(ROOT
  (S (`` ``)
    (S (CC But)
      (, ,)
      (VP (VBP sir))
      (, ,))
    ('' '')
    (VP (VBD replied)
      (NP
        (NP (NNP Cecilia))
        (, ,)
        (ADJP (RB much) (VBN relieved))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (NNP Pickersgill))
            (VP (VBD had)
              (VP (VBN stood)
                (PP (IN by)
                  (NP (PRP her))))))))
      (PP (IN in)
        (NP
          (NP (DT the)
            (ADJP (RBS most) (JJ respectful))
            (NN manner))
          (, ,) (`` ``)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (PRN (, ,)
                (S
                  (NP (PRP I))
                  (VP (VBP presume)))
                (, ,)))))))
    (NP
      (NP (DT the) (NN captain))
      (PP (IN of)
        (NP (DT the) (NN smuggler))))
    (. ?)))

cc(sir-4, But-2)
ccomp(replied-7, sir-4)
csubj(replied-7, sir-4)
root(ROOT-0, replied-7)
dobj(replied-7, Cecilia-8)
advmod(relieved-11, much-10)
amod(Cecilia-8, relieved-11)
mark(stood-16, for-13)
nsubj(stood-16, Pickersgill-14)
aux(stood-16, had-15)
rcmod(Cecilia-8, stood-16)
prep_by(stood-16, her-18)
det(manner-23, the-20)
advmod(respectful-22, most-21)
amod(manner-23, respectful-22)
prep_in(replied-7, manner-23)
nsubj(are-27, you-26)
dep(manner-23, are-27)
nsubj(presume-30, I-29)
parataxis(are-27, presume-30)
det(captain-33, the-32)
dep(replied-7, captain-33)
det(smuggler-36, the-35)
prep_of(captain-33, smuggler-36)

(ROOT
  (S
    (NP (NNP Pray))
    (VP (VBP answer)
      (S
        (NP (PRP me))
        (ADJP
          (NP (CD one) (NN question))
          (JJR more)))
      (PRN (: --)
        (SBAR
          (WHNP (WP What))
          (S
            (VP (VBD became)
              (PP (IN of)
                (NP (DT the) (NN boat)))
              (PP (IN with)
                (NP (NNP Lord) (NNP B))))))
        (: --)))
    (. ?)))

nsubj(answer-2, Pray-1)
root(ROOT-0, answer-2)
nsubj(more-6, me-3)
num(question-5, one-4)
npadvmod(more-6, question-5)
xcomp(answer-2, more-6)
nsubj(became-9, What-8)
parataxis(answer-2, became-9)
det(boat-12, the-11)
prep_of(became-9, boat-12)
nn(B-15, Lord-14)
prep_with(became-9, B-15)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ is)
      (NP (PRP$ my) (NN father)))
    (. .) ('' '')))

nsubj(father-4, He-1)
cop(father-4, is-2)
poss(father-4, my-3)
root(ROOT-0, father-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD left)
        (NP (PRP him))
        (PP (IN in)
          (NP (PRP$ his) (NN boat)))
        (, ,)
        (PP (IN without)
          (NP
            (NP (DT a) (NN hair))
            (PP (IN of)
              (NP
                (NP (PRP$ his) (NN head))
                (VP (VBN touched) (, ,)
                  (NP (JJ young) (NN lady)))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD took)
        (PRT (RP away))
        (NP (DT the) (NNS oars))))
    (. .) ('' '')))

nsubj(left-3, I-2)
root(ROOT-0, left-3)
dobj(left-3, him-4)
poss(boat-7, his-6)
prep_in(left-3, boat-7)
det(hair-11, a-10)
prep_without(left-3, hair-11)
poss(head-14, his-13)
prep_of(hair-11, head-14)
vmod(head-14, touched-15)
amod(lady-18, young-17)
dobj(touched-15, lady-18)
nsubj(took-22, I-21)
conj_but(left-3, took-22)
prt(took-22, away-23)
det(oars-25, the-24)
dobj(took-22, oars-25)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP he))
    (VP (MD will)
      (VP (VB perish)))
    (. !) ('' '')))

advmod(perish-5, Then-2)
nsubj(perish-5, he-3)
aux(perish-5, will-4)
root(ROOT-0, perish-5)

(ROOT
  (S
    (VP (VBN cried)
      (NP (NNP Cecilia))
      (, ,)
      (S
        (VP (VBG putting)
          (NP (PRP$ her) (NN handkerchief))
          (PP (TO to)
            (NP (PRP$ her) (NNS eyes))))))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Cecilia-2)
vmod(cried-1, putting-4)
poss(handkerchief-6, her-5)
dobj(putting-4, handkerchief-6)
poss(eyes-9, her-8)
prep_to(putting-4, eyes-9)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No))
      (, ,)
      (NP (JJ young) (NN lady)))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBZ is)
        (PP (IN on)
          (NP (NN shore)))
        (, ,)
        (ADVP (RB probably))
        (, ,)
        (PP (IN by)
          (NP (DT this) (NN time)))))
    (. .)))

discourse(lady-5, No-2)
amod(lady-5, young-4)
dep(is-8, lady-5)
nsubj(is-8, he-7)
root(ROOT-0, is-8)
prep_on(is-8, shore-10)
advmod(is-8, probably-12)
det(time-16, this-15)
prep_by(is-8, time-16)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (PRP I))
        (VP (VBD took)
          (PRT (RP away))
          (NP
            (NP (PRP$ his) (NNS means))
            (PP (IN of)
              (S
                (VP (VBG assisting)
                  (S
                    (VP (TO to)
                      (VP (VB capture)
                        (NP (PRP us))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBD left)
      (S
        (NP (PRP him))
        (NP
          (NP (DT the) (NN means))
          (PP (IN of)
            (S
              (VP (VBG gaining)
                (NP (DT the) (NN land))))))))
    (. .)))

mark(took-3, Although-1)
nsubj(took-3, I-2)
advcl(left-14, took-3)
prt(took-3, away-4)
poss(means-6, his-5)
dobj(took-3, means-6)
prepc_of(means-6, assisting-8)
aux(capture-10, to-9)
xcomp(assisting-8, capture-10)
dobj(capture-10, us-11)
nsubj(left-14, I-13)
root(ROOT-0, left-14)
nsubj(means-17, him-15)
det(means-17, the-16)
xcomp(left-14, means-17)
prepc_of(means-17, gaining-19)
det(land-21, the-20)
dobj(gaining-19, land-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT every) (NN one))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD would)
              (VP (VB have)
                (VP (VBN done)
                  (NP (DT that))))))))
      (, ,)
      (PP (IN after)
        (NP (PRP$ his) (NN conduct)))
      (PP (TO to)
        (NP (PRP us))))
    (. .) ('' '')))

nsubj(one-5, It-1)
cop(one-5, is-2)
neg(one-5, not-3)
det(one-5, every-4)
root(ROOT-0, one-5)
nsubj(done-9, one-5)
aux(done-9, would-7)
aux(done-9, have-8)
rcmod(one-5, done-9)
dobj(done-9, that-10)
poss(conduct-14, his-13)
prep_after(one-5, conduct-14)
prep_to(one-5, us-16)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBN begged)
        (S
          (NP (PRP him))
          (RB not)
          (VP (TO to)
            (VP (VB go))))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (NNP Cecilia))))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD told)
        (NP (PRP him))
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD was) (RB not)
                (ADJP (JJ fair)))))
          (, ,)
          (CC and)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (NP
                  (NP (DT no) (NN quarrel))
                  (PP (IN with)
                    (NP (DT the) (NNS smugglers))))))))))
    (. .) ('' '')))

nsubj(begged-3, I-2)
root(ROOT-0, begged-3)
dobj(begged-3, him-4)
nsubj(go-7, him-4)
neg(go-7, not-5)
aux(go-7, to-6)
xcomp(begged-3, go-7)
dep(begged-3, said-10)
nsubj(said-10, Cecilia-11)
nsubj(told-15, I-14)
parataxis(begged-3, told-15)
dobj(told-15, him-16)
mark(fair-21, that-17)
nsubj(fair-21, it-18)
cop(fair-21, was-19)
neg(fair-21, not-20)
ccomp(told-15, fair-21)
mark(had-26, that-24)
nsubj(had-26, he-25)
ccomp(told-15, had-26)
conj_and(fair-21, had-26)
neg(quarrel-28, no-27)
dobj(had-26, quarrel-28)
det(smugglers-31, the-30)
prep_with(quarrel-28, smugglers-31)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP thank)
        (S
          (NP (PRP you))
          (ADJP (VB even)
            (PP (IN for)
              (NP (DT that)))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Pickersgill))
    (. .)))

nsubj(thank-3, I-2)
ccomp(replied-10, thank-3)
nsubj(even-5, you-4)
xcomp(thank-3, even-5)
prep_for(even-5, that-7)
root(ROOT-0, replied-10)
nsubj(replied-10, Pickersgill-11)

(ROOT
  (S (`` ``)
    (S (CC And)
      (ADVP (RB now))
      (, ,)
      (S
        (VP (VBP miss)
          (PRN (: --)
            (S
              (NP (PRP I))
              (VP (VBP have) (RB not)
                (NP
                  (NP (DT the) (NN pleasure))
                  (PP (IN of)
                    (S
                      (VP (VBG recollecting)
                        (NP
                          (NP (PRP$ his) (NN lordship) (POS 's))
                          (NN family) (NN name))))))))
            (: --))))
      ('' '')
      (VP (`` ``) (VBP Ossulton) (, ,)
        (ADVP (RB sir))))
    (, ,) ('' '')
    (VP (VBD cried)
      (NP (NNP Cecilia))
      (, ,)
      (S
        (VP (VBG looking)
          (PP (IN at)
            (NP (NNP Pickersgill)))
          (PP (IN with)
            (NP (NN surprise))))))
    (. .)))

cc(Ossulton-22, And-2)
advmod(Ossulton-22, now-3)
ccomp(Ossulton-22, miss-5)
csubj(Ossulton-22, miss-5)
nsubj(have-8, I-7)
parataxis(miss-5, have-8)
neg(have-8, not-9)
det(pleasure-11, the-10)
dobj(have-8, pleasure-11)
prepc_of(pleasure-11, recollecting-13)
poss(lordship-15, his-14)
poss(name-18, lordship-15)
nn(name-18, family-17)
dobj(recollecting-13, name-18)
ccomp(cried-27, Ossulton-22)
advmod(Ossulton-22, sir-24)
root(ROOT-0, cried-27)
dobj(cried-27, Cecilia-28)
vmod(cried-27, looking-30)
prep_at(looking-30, Pickersgill-32)
prep_with(looking-30, surprise-34)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (PP (IN with)
      (NP
        (NP (PRP$ your) (NN permission))
        (, ,)
        (NP (NNP Miss) (NNP Ossulton))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (MD will)
        (ADVP (RB now))
        (VP
          (VP (VB make)
            (S
              (NP (PRP you))
              (NP (PRP$ my) (NN confidant))))
          (: :)
          (VP (VB excuse)
            (NP (PRP$ my))
            (S
              (VP (VBG using)
                (ADJP (RB so) (JJ free))
                (NP (DT a) (NN term))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (VBP wish)
              (S
                (VP (TO to)
                  (VP (VB relieve)
                    (NP (PRP$ your) (NNS fears))))))))))
    (. .)))

advmod(make-13, Then-2)
poss(permission-5, your-4)
prep_with(make-13, permission-5)
nn(Ossulton-8, Miss-7)
appos(permission-5, Ossulton-8)
nsubj(make-13, I-10)
aux(make-13, will-11)
advmod(make-13, now-12)
root(ROOT-0, make-13)
nsubj(confidant-16, you-14)
poss(confidant-16, my-15)
xcomp(make-13, confidant-16)
dep(make-13, excuse-18)
dobj(excuse-18, my-19)
xcomp(excuse-18, using-20)
advmod(free-22, so-21)
acomp(using-20, free-22)
det(term-24, a-23)
dobj(using-20, term-24)
nsubj(is-28, it-27)
conj_but(make-13, is-28)
mark(wish-31, because-29)
nsubj(wish-31, I-30)
nsubj(relieve-33, I-30)
advcl(is-28, wish-31)
aux(relieve-33, to-32)
xcomp(wish-31, relieve-33)
poss(fears-35, your-34)
dobj(relieve-33, fears-35)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (, ,)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB permit)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB divulge)
              (NP (PDT all) (PRP$ my) (NNS intentions))
              (PP (TO to)
                (NP
                  (NP (DT the) (JJ whole) (NN party))
                  (PP (IN on)
                    (NP (NN board))))))))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(permit-9, time-4)
nsubj(permit-9, I-6)
aux(permit-9, can-7)
neg(permit-9, not-8)
root(ROOT-0, permit-9)
dobj(permit-9, you-10)
nsubj(divulge-12, you-10)
aux(divulge-12, to-11)
xcomp(permit-9, divulge-12)
predet(intentions-15, all-13)
poss(intentions-15, my-14)
dobj(divulge-12, intentions-15)
det(party-19, the-17)
amod(party-19, whole-18)
prep_to(divulge-12, party-19)
prep_on(party-19, board-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP feel)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (MD may)
                (VP (VB trust)
                  (NP (PRP you))))))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP you))
              (VP (VBP have)
                (NP (NN courage)))))
          (, ,)
          (CC and)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (NN courage))
                  (SBAR
                    (S
                      (NP (EX there))
                      (ADVP (RB generally))
                      (VP (VBZ is)
                        (NP (NN truth))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD must)
        (ADVP (RB first))
        (VP (VB tell)
          (NP (PRP me))
          (SBAR (IN whether)
            (S
              (NP (PRP you))
              (VP (MD will)
                (VP (VB condescend)
                  (S
                    (VP (TO to)
                      (VP (VB accept)
                        (NP (DT these) (NNS terms))))))))))))
    (. ?) ('' '')))

nsubj(feel-2, I-1)
root(ROOT-0, feel-2)
mark(trust-6, that-3)
nsubj(trust-6, I-4)
aux(trust-6, may-5)
advcl(feel-2, trust-6)
ccomp(feel-2, trust-6)
dobj(trust-6, you-7)
mark(have-11, for-9)
nsubj(have-11, you-10)
advcl(feel-2, have-11)
ccomp(feel-2, have-11)
conj_and(trust-6, have-11)
dobj(have-11, courage-12)
advmod(is-17, where-15)
expl(is-17, there-16)
advcl(feel-2, is-17)
ccomp(feel-2, is-17)
conj_and(trust-6, is-17)
nsubj(is-17, courage-18)
expl(is-21, there-19)
advmod(is-21, generally-20)
rcmod(courage-18, is-21)
nsubj(is-21, truth-22)
nsubj(tell-28, you-25)
aux(tell-28, must-26)
advmod(tell-28, first-27)
conj_but(feel-2, tell-28)
dobj(tell-28, me-29)
mark(condescend-33, whether-30)
nsubj(condescend-33, you-31)
nsubj(accept-35, you-31)
aux(condescend-33, will-32)
ccomp(tell-28, condescend-33)
aux(accept-35, to-34)
xcomp(condescend-33, accept-35)
det(terms-37, these-36)
dobj(accept-35, terms-37)

(ROOT
  (S
    (S
      (NP (NNP Cecilia))
      (VP (VBD demurred)
        (NP (DT a) (NN moment))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NN idea))
        (PP (IN of)
          (S
            (VP (VBG being)
              (NP
                (NP (DT the) (NN confidant))
                (PP (IN of)
                  (NP (DT a) (NN smuggler))))))))
      (ADVP (RB rather))
      (VP (VBD startled)
        (NP (PRP her))))
    (: :)
    (S (CC but)
      (ADVP (RB still))
      (, ,)
      (NP
        (NP (PRP$ her) (NN knowledge))
        (PP (IN of)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP$ his) (NNS intentions))
              (VP (VBD were)))))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP she))
            (VP (MD might) (RB not)
              (VP (VB reveal)
                (NP (PRP them))))))
        (, ,))
      (VP (MD might)
        (VP (VB be)
          (ADJP (JJ important)))))
    (: ;)
    (SBAR (IN as)
      (PRN (, ,)
        (ADVP (RB perhaps))
        (, ,))
      (S
        (NP (PRP she))
        (VP (MD might)
          (VP (VB dissuade)
            (NP (PRP him))))))
    (. .)))

nsubj(demurred-2, Cecilia-1)
root(ROOT-0, demurred-2)
det(moment-4, a-3)
dobj(demurred-2, moment-4)
det(idea-7, the-6)
nsubj(startled-16, idea-7)
cop(confidant-11, being-9)
det(confidant-11, the-10)
prepc_of(idea-7, confidant-11)
det(smuggler-14, a-13)
prep_of(confidant-11, smuggler-14)
advmod(startled-16, rather-15)
parataxis(demurred-2, startled-16)
dobj(startled-16, her-17)
cc(important-39, but-19)
advmod(important-39, still-20)
poss(knowledge-23, her-22)
nsubj(important-39, knowledge-23)
dobj(were-28, what-25)
poss(intentions-27, his-26)
nsubj(were-28, intentions-27)
prepc_of(knowledge-23, were-28)
mark(reveal-34, if-30)
nsubj(reveal-34, she-31)
aux(reveal-34, might-32)
neg(reveal-34, not-33)
dep(knowledge-23, reveal-34)
dobj(reveal-34, them-35)
aux(important-39, might-37)
cop(important-39, be-38)
parataxis(demurred-2, important-39)
mark(dissuade-47, as-41)
dep(dissuade-47, perhaps-43)
nsubj(dissuade-47, she-45)
aux(dissuade-47, might-46)
parataxis(demurred-2, dissuade-47)
dobj(dissuade-47, him-48)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (MD could)
        (VP (VB be)
          (PP (IN in)
            (NP (DT no) (JJR worse) (NN position)))
          (SBAR (IN than)
            (S
              (NP (PRP she))
              (VP (VBD was)
                (ADVP (RB now))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (MD might)
        (VP (VB be)
          (PP (IN in)
            (NP (DT a)
              (ADJP (RB much) (JJR better)))))))
    (. .)))

nsubj(be-3, She-1)
aux(be-3, could-2)
root(ROOT-0, be-3)
neg(position-7, no-5)
amod(position-7, worse-6)
prep_in(be-3, position-7)
mark(was-10, than-8)
nsubj(was-10, she-9)
advcl(be-3, was-10)
advmod(was-10, now-11)
nsubj(be-16, she-14)
aux(be-16, might-15)
conj_and(be-3, be-16)
det(better-20, a-18)
advmod(better-20, much-19)
prep_in(be-16, better-20)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN conduct))
        (PP (IN of)
          (NP (NNP Pickersgill))))
      (VP (VBD had)
        (VP (VBN been)
          (ADJP (JJ such) (, ,)
            (ADVP (RB up)
              (PP (TO to)
                (NP (DT the) (NN present))))
            (, ,)
            (SBAR (IN as)
              (S
                (VP (TO to)
                  (VP (VB inspire)
                    (NP (NN confidence))))))))))
    (: ;)
    (CC and)
    (, ,)
    (S
      (SBAR (IN although)
        (S
          (NP (PRP he))
          (VP (VBD defied)
            (NP (DT the) (NNS laws)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD appeared)
        (S
          (VP (TO to)
            (VP (VB regard)
              (NP
                (NP (DT the) (NNS courtesies))
                (PP (IN of)
                  (NP (NN life)))))))))
    (. .)))

det(conduct-2, The-1)
nsubj(such-7, conduct-2)
prep_of(conduct-2, Pickersgill-4)
aux(such-7, had-5)
cop(such-7, been-6)
root(ROOT-0, such-7)
advmod(such-7, up-9)
det(present-12, the-11)
prep_to(up-9, present-12)
mark(inspire-16, as-14)
aux(inspire-16, to-15)
dep(such-7, inspire-16)
dobj(inspire-16, confidence-17)
mark(defied-23, although-21)
nsubj(defied-23, he-22)
advcl(appeared-28, defied-23)
det(laws-25, the-24)
dobj(defied-23, laws-25)
nsubj(appeared-28, he-27)
nsubj(regard-30, he-27)
conj_and(such-7, appeared-28)
aux(regard-30, to-29)
xcomp(appeared-28, regard-30)
det(courtesies-32, the-31)
dobj(regard-30, courtesies-32)
prep_of(courtesies-32, life-34)

(ROOT
  (S
    (S
      (S
        (NP (NNP Cecilia))
        (VP (VBD was)
          (NP (DT a) (JJ courageous) (NN girl))))
      (, ,)
      (CC and)
      (S
        (PP (IN at)
          (NP (NN length)))
        (NP (PRP she))
        (VP (VBD replied))))
    (: :) (: --) (`` ``)
    (S
      (S
        (NP
          (NP (NNP Provided))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBP desire)
                (S
                  (NP (PRP me))
                  (VP (TO to)
                    (VP (VB keep)
                      (ADJP (JJ secret)))))))))
        (VP (MD will) (RB not)
          (VP
            (VP (VB be)
              (ADJP (JJ injurious)
                (PP (TO to)
                  (NP (DT any) (NN one)))))
            (, ,)
            (CC or)
            (VP (VB compromise)
              (NP (PRP me))
              (PP (IN in)
                (NP (PRP$ my) (JJ peculiar) (NN situation)))))))
      (, ,)
      (NP (PRP I))
      (VP (VB consent)))
    (. .) ('' '')))

nsubj(girl-5, Cecilia-1)
cop(girl-5, was-2)
det(girl-5, a-3)
amod(girl-5, courageous-4)
root(ROOT-0, girl-5)
prep_at(replied-11, length-9)
nsubj(replied-11, she-10)
conj_and(girl-5, replied-11)
dobj(desire-18, Provided-15)
nsubj(keep-21, Provided-15)
nsubj(injurious-26, Provided-15)
nsubj(compromise-32, Provided-15)
nsubj(desire-18, you-17)
rcmod(Provided-15, desire-18)
dobj(desire-18, me-19)
nsubj(keep-21, me-19)
aux(keep-21, to-20)
xcomp(desire-18, keep-21)
acomp(keep-21, secret-22)
aux(injurious-26, will-23)
neg(injurious-26, not-24)
cop(injurious-26, be-25)
ccomp(consent-40, injurious-26)
det(one-29, any-28)
prep_to(injurious-26, one-29)
conj_or(injurious-26, compromise-32)
ccomp(consent-40, compromise-32)
dobj(compromise-32, me-33)
poss(situation-37, my-35)
amod(situation-37, peculiar-36)
prep_in(compromise-32, situation-37)
nsubj(consent-40, I-39)
parataxis(girl-5, consent-40)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD would) (RB not)
        (VP
          (VP (VB hurt)
            (NP
              (NP (DT a) (NN fly))
              (, ,)
              (NP (NNP Miss) (NNP Ossulton))))
          (, ,)
          (CC but)
          (VP
            (PP (IN in)
              (NP (NN self-defence)))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP
          (NP
            (ADJP (RB too) (JJ much))
            (NN respect))
          (PP (IN for)
            (NP (PRP you)))
          (, ,)
          (PP (IN from)
            (NP
              (NP (PRP$ your) (NN conduct))
              (PP (IN during)
                (NP (PRP$ our) (JJ short) (NN meeting))))))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB compromise)
              (NP (PRP you)))))))
    (. .)))

nsubj(hurt-5, I-2)
aux(hurt-5, would-3)
neg(hurt-5, not-4)
root(ROOT-0, hurt-5)
det(fly-7, a-6)
dobj(hurt-5, fly-7)
nn(Ossulton-10, Miss-9)
appos(fly-7, Ossulton-10)
conj_but(hurt-5, in-13)
pobj(in-13, self-defence-14)
nsubj(have-18, I-17)
conj_and(hurt-5, have-18)
advmod(much-20, too-19)
amod(respect-21, much-20)
dobj(have-18, respect-21)
prep_for(respect-21, you-23)
poss(conduct-27, your-26)
prep_from(respect-21, conduct-27)
poss(meeting-31, our-29)
amod(meeting-31, short-30)
prep_during(conduct-27, meeting-31)
aux(compromise-34, to-33)
vmod(have-18, compromise-34)
dobj(compromise-34, you-35)

(ROOT
  (S
    (S
      (VP (VB Allow)
        (S
          (NP (PRP me))
          (ADVP (RB now))
          (VP (TO to)
            (VP (VB be)
              (ADJP (RB very) (JJ candid)))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB then))
      (, ,)
      (ADVP (RB perhaps))
      (, ,)
      (NP (PRP you))
      (VP (MD will)
        (VP (VB acknowledge)
          (SBAR
            (SBAR (IN that)
              (S
                (PP (IN in)
                  (NP (PRP$ my) (NN situation)))
                (NP (NNS others))
                (VP (MD would)
                  (VP (VB do)
                    (NP (DT the) (JJ same))))))
            (, ,)
            (CC and)
            (PRN (, ,)
              (ADVP (RB perhaps))
              (, ,))
            (SBAR (RB not)
              (S
                (VP (VBP show)
                  (NP (DT half)
                    (ADJP (RB so) (JJ much))
                    (NN forbearance)))))))))
    (. .)))

root(ROOT-0, Allow-1)
dobj(Allow-1, me-2)
nsubj(candid-7, me-2)
advmod(candid-7, now-3)
aux(candid-7, to-4)
cop(candid-7, be-5)
advmod(candid-7, very-6)
xcomp(Allow-1, candid-7)
advmod(acknowledge-16, then-10)
advmod(acknowledge-16, perhaps-12)
nsubj(acknowledge-16, you-14)
aux(acknowledge-16, will-15)
conj_and(Allow-1, acknowledge-16)
mark(do-23, that-17)
poss(situation-20, my-19)
prep_in(do-23, situation-20)
nsubj(do-23, others-21)
nsubj(show-32, others-21)
aux(do-23, would-22)
ccomp(acknowledge-16, do-23)
det(same-25, the-24)
dobj(do-23, same-25)
dep(do-23, perhaps-29)
dep(show-32, not-31)
ccomp(acknowledge-16, show-32)
conj_and(do-23, show-32)
det(forbearance-36, half-33)
advmod(much-35, so-34)
amod(forbearance-36, much-35)
dobj(show-32, forbearance-36)

(ROOT
  (S
    (S
      (NP (PRP$ Your) (NN father))
      (, ,)
      (PP (IN without)
        (NP (DT any) (JJ right) (NN whatever)))
      (, ,)
      (VP (VBZ interferes)
        (PP (IN with)
          (NP
            (NP (PRP me))
            (CC and)
            (NP (PRP$ my) (NN calling))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBZ attempts)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (PRP me))
              (SBAR
                (S
                  (NP (DT a) (NN prisoner))
                  (, ,)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (S
                          (NP (PRP me))
                          (VP (VBN thrown)
                            (PP (IN into)
                              (NP (NN jail))))))))
                  (, ,)
                  (VP
                    (ADVP (RB heavily))
                    (VBN fined)))
                (, ,)
                (CC and)
                (S (, ,)
                  (ADVP (RB perhaps))
                  (, ,)
                  (VP (VBD sent)
                    (PRT (RP out))
                    (PP (IN of)
                      (NP (DT the) (NN country)))))))))))
    (. .)))

poss(father-2, Your-1)
nsubj(interferes-9, father-2)
det(whatever-7, any-5)
amod(whatever-7, right-6)
prep_without(interferes-9, whatever-7)
root(ROOT-0, interferes-9)
prep_with(interferes-9, me-11)
poss(calling-14, my-13)
prep_with(interferes-9, calling-14)
conj_and(me-11, calling-14)
nsubj(attempts-17, he-16)
nsubj(make-19, he-16)
parataxis(interferes-9, attempts-17)
aux(make-19, to-18)
xcomp(attempts-17, make-19)
dobj(make-19, me-20)
det(prisoner-22, a-21)
nsubj(fined-32, prisoner-22)
nsubj(sent-38, prisoner-22)
aux(have-25, to-24)
dep(fined-32, have-25)
nsubj(thrown-27, me-26)
ccomp(have-25, thrown-27)
prep_into(thrown-27, jail-29)
advmod(fined-32, heavily-31)
dep(make-19, fined-32)
advmod(sent-38, perhaps-36)
dep(make-19, sent-38)
conj_and(fined-32, sent-38)
det(country-42, the-41)
prep_out_of(sent-38, country-42)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB enter)
          (PP (IN into)
            (NP
              (NP (DT any) (NN defence))
              (PP (IN of)
                (NP (NN smuggling))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ sufficient)
          (S
            (VP (TO to)
              (VP (VB say)
                (SBAR
                  (SBAR (IN that)
                    (S
                      (NP (EX there))
                      (VP (VBP are)
                        (NP
                          (NP (NNS pains)
                            (CC and)
                            (NNS penalties))
                          (VP (VBN attached)
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN infraction))
                                (PP (IN of)
                                  (NP (JJ certain) (NNS laws))))))))))
                  (, ,)
                  (CC and)
                  (SBAR (IN that)
                    (S
                      (NP (PRP I))
                      (VP (VBP choose)
                        (S
                          (VP (TO to)
                            (VP (VB risk)
                              (NP (PRP them)))))))))))))))
    (. .)))

nsubj(enter-4, I-1)
aux(enter-4, will-2)
neg(enter-4, not-3)
root(ROOT-0, enter-4)
det(defence-7, any-6)
prep_into(enter-4, defence-7)
prep_of(defence-7, smuggling-9)
nsubj(sufficient-13, it-11)
nsubj(say-15, it-11)
cop(sufficient-13, is-12)
parataxis(enter-4, sufficient-13)
aux(say-15, to-14)
xcomp(sufficient-13, say-15)
mark(are-18, that-16)
expl(are-18, there-17)
ccomp(say-15, are-18)
nsubj(are-18, pains-19)
nsubj(are-18, penalties-21)
conj_and(pains-19, penalties-21)
vmod(pains-19, attached-22)
det(infraction-25, the-24)
prep_to(attached-22, infraction-25)
amod(laws-28, certain-27)
prep_of(infraction-25, laws-28)
mark(choose-33, that-31)
nsubj(choose-33, I-32)
nsubj(risk-35, I-32)
ccomp(say-15, choose-33)
conj_and(are-18, choose-33)
aux(risk-35, to-34)
xcomp(choose-33, risk-35)
dobj(risk-35, them-36)

(ROOT
  (S (CC But)
    (S
      (NP
        (NP (NNP Lord) (NNP B))
        (: --)
        (VP (VBD was) (RB not)
          (VP (VBN empowered)
            (PP (IN by)
              (NP (NNP Government)))
            (S
              (VP (TO to)
                (VP (VB attack)
                  (NP (PRP me)))))))
        (: ;))
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT a) (JJ gratuitous) (NN act))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (SINV (VBD had)
          (NP (PRP I))
          (VP
            (VP (VBN thrown)
              (NP (PRP him)))
            (CC and)
            (VP
              (NP (PDT all) (PRP$ his) (NN crew))
              (PP (IN into)
                (NP (DT the) (NN sea)))))))
      (, ,)
      (NP (PRP I))
      (VP (MD should)
        (VP
          (VP (VB have)
            (VP (VBN been)
              (ADJP (JJ justified))))
          (: ;)
          (SBAR (IN for)
            (S
              (NP (PRP it))
              (VP (VBD was) (, ,)
                (PP (IN in)
                  (ADJP (JJ short)))
                (, ,)
                (NP
                  (NP (DT an) (NN act))
                  (PP (IN of)
                    (NP
                      (NP (NN piracy))
                      (PP (IN on)
                        (NP (PRP$ their) (NN part))))))))))))
    (. .)))

nn(B-3, Lord-2)
nsubj(act-18, B-3)
auxpass(empowered-7, was-5)
neg(empowered-7, not-6)
vmod(B-3, empowered-7)
agent(empowered-7, Government-9)
aux(attack-11, to-10)
xcomp(empowered-7, attack-11)
dobj(attack-11, me-12)
nsubj(act-18, it-14)
cop(act-18, was-15)
det(act-18, a-16)
amod(act-18, gratuitous-17)
root(ROOT-0, act-18)
aux(thrown-23, had-21)
nsubj(thrown-23, I-22)
advcl(justified-37, thrown-23)
dobj(thrown-23, him-24)
predet(crew-28, all-26)
poss(crew-28, his-27)
conj_and(thrown-23, crew-28)
advcl(justified-37, crew-28)
det(sea-31, the-30)
prep_into(crew-28, sea-31)
nsubj(justified-37, I-33)
aux(justified-37, should-34)
aux(justified-37, have-35)
cop(justified-37, been-36)
conj_and(act-18, justified-37)
mark(act-47, for-39)
nsubj(act-47, it-40)
cop(act-47, was-41)
prep_in(act-47, short-44)
det(act-47, an-46)
advcl(justified-37, act-47)
parataxis(justified-37, act-47)
prep_of(act-47, piracy-49)
poss(part-52, their-51)
prep_on(piracy-49, part-52)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP$ your) (NN father))
          (VP (VBZ has)
            (VP (VBN thought)
              (S
                (VP (TO to)
                  (VP (VB turn)
                    (NP (DT a) (NN yacht))
                    (PP (IN into)
                      (NP (DT a) (NN revenue-cutter))))))))))
      (, ,)
      (NP (PRP you))
      (VP (MD can) (RB not)
        (VP (VB be)
          (VP (VBN surprised)
            (PP (IN at)
              (NP (PRP$ my) (NN retaliating)))
            (, ,)
            (PP (IN in)
              (S
                (VP (VBG turning)
                  (NP (PRP her))
                  (PP (IN into)
                    (NP (DT a) (NN smuggler))))))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBZ has)
            (VP (VBN mixed)
              (PRT (RP up))
              (S
                (VP (VBG looking)
                  (PP (IN after)
                    (NP
                      (NP (DT the) (NN revenue))
                      (PP (IN with)
                        (NP (NN yachting)))))))))))
      (, ,)
      (NP (PRP he))
      (VP (MD can) (RB not)
        (VP (VB be)
          (ADJP (JJ surprised))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBP retaliate))))
          (, ,)
          (PP (IN by)
            (S
              (VP (VBG mixing)
                (PRT (RP up))
                (NP (DT a) (JJ little) (NN yachting))
                (PP (IN with)
                  (NP (NN smuggling)))))))))
    (. .)))

advmod(surprised-20, Now-1)
mark(thought-7, as-3)
poss(father-5, your-4)
nsubj(thought-7, father-5)
nsubj(turn-9, father-5)
aux(thought-7, has-6)
advcl(surprised-20, thought-7)
aux(turn-9, to-8)
xcomp(thought-7, turn-9)
det(yacht-11, a-10)
dobj(turn-9, yacht-11)
det(revenue-cutter-14, a-13)
prep_into(turn-9, revenue-cutter-14)
nsubjpass(surprised-20, you-16)
aux(surprised-20, can-17)
neg(surprised-20, not-18)
auxpass(surprised-20, be-19)
root(ROOT-0, surprised-20)
poss(retaliating-23, my-22)
prep_at(surprised-20, retaliating-23)
prepc_in(surprised-20, turning-26)
dobj(turning-26, her-27)
det(smuggler-30, a-29)
prep_into(turning-26, smuggler-30)
mark(mixed-36, as-33)
nsubj(mixed-36, he-34)
aux(mixed-36, has-35)
advcl(surprised-49, mixed-36)
prt(mixed-36, up-37)
xcomp(mixed-36, looking-38)
det(revenue-41, the-40)
prep_after(looking-38, revenue-41)
prep_with(revenue-41, yachting-43)
nsubj(surprised-49, he-45)
aux(surprised-49, can-46)
neg(surprised-49, not-47)
cop(surprised-49, be-48)
conj_and(surprised-20, surprised-49)
mark(retaliate-52, if-50)
nsubj(retaliate-52, I-51)
advcl(surprised-49, retaliate-52)
prepc_by(surprised-49, mixing-55)
prt(mixing-55, up-56)
det(yachting-59, a-57)
amod(yachting-59, little-58)
dobj(mixing-55, yachting-59)
prep_with(mixing-55, smuggling-61)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP have)
        (VP (VBN dressed)
          (NP (PRP$ your) (JJ male) (NNS companions))
          (PP (IN as)
            (NP (NNS smugglers)))))
      (, ,)
      (CC and)
      (VP (VBP have)
        (VP (VBN sent)
          (NP (PRP them))
          (PP (IN in)
            (NP
              (NP
                (NP (DT the) (NN smuggling) (NN vessel))
                (PP (TO to)
                  (NP
                    (NP (NNP Cherbourg))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (S
                          (NP (PRP they))
                          (VP (MD will)
                            (VP (VB be)
                              (VP
                                (ADVP (RB safely))
                                (VBN landed)))))
                        (: ;)
                        (CC and)
                        (S
                          (NP (PRP I))
                          (VP (VBP have)
                            (VP (VBN dressed)
                              (NP (PRP myself))))))))))
              (, ,)
              (CC and)
              (NP
                (NP (DT the) (JJ only) (NN person))
                (SBAR
                  (WHNP (WP whom))
                  (S
                    (NP (PRP I))
                    (VP (MD could)
                      (VP (VB join)
                        (PP (IN with)
                          (NP (PRP me)))
                        (PP (IN in)
                          (NP (DT this) (NN frolic)))
                        (, ,)
                        (PP (IN as)
                          (NP
                            (NP (NNS gentlemen))
                            (PP (IN in)
                              (NP (PRP$ their) (NNS places)))))))))))))))
    (. .)))

nsubj(dressed-3, I-1)
nsubj(sent-12, I-1)
aux(dressed-3, have-2)
root(ROOT-0, dressed-3)
poss(companions-6, your-4)
amod(companions-6, male-5)
dobj(dressed-3, companions-6)
prep_as(dressed-3, smugglers-8)
aux(sent-12, have-11)
conj_and(dressed-3, sent-12)
dobj(sent-12, them-13)
det(vessel-17, the-15)
nn(vessel-17, smuggling-16)
prep_in(sent-12, vessel-17)
prep_to(vessel-17, Cherbourg-19)
advmod(landed-26, where-21)
nsubjpass(landed-26, they-22)
aux(landed-26, will-23)
auxpass(landed-26, be-24)
advmod(landed-26, safely-25)
rcmod(Cherbourg-19, landed-26)
nsubj(dressed-31, I-29)
aux(dressed-31, have-30)
rcmod(Cherbourg-19, dressed-31)
conj_and(landed-26, dressed-31)
dobj(dressed-31, myself-32)
det(person-37, the-35)
amod(person-37, only-36)
prep_in(sent-12, person-37)
conj_and(vessel-17, person-37)
dobj(join-41, person-37)
nsubj(join-41, I-39)
aux(join-41, could-40)
rcmod(person-37, join-41)
prep_with(join-41, me-43)
det(frolic-46, this-45)
prep_in(join-41, frolic-46)
prep_as(join-41, gentlemen-49)
poss(places-52, their-51)
prep_in(gentlemen-49, places-52)

(ROOT
  (S
    (S
      (NP (PRP$ My) (NN object))
      (VP (VBZ is)
        (VP (VBN twofold))))
    (: ;)
    (S
      (NP (PRP one))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB land)
              (NP (PRP$ my) (NN cargo))
              (, ,)
              (SBAR
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP I))
                    (VP (VBP have)
                      (NP (RB now))
                      (PP (IN on)
                        (NP (NN board))))))
                (, ,)
                (CC and)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (ADJP (RB very) (JJ valuable)))))))))))
    (: ;)
    (S
      (NP (DT the) (JJ other))
      (VP (VBZ is) (, ,)
        (S
          (VP (TO to)
            (VP (VB retaliate)
              (PP (IN upon)
                (NP
                  (NP (PRP$ your) (NN father))
                  (CC and)
                  (NP
                    (NP (PRP$ his) (NNS companions))
                    (PP (IN for)
                      (NP (PRP$ their) (NN attempt))))))
              (PP (IN upon)
                (NP (PRP me)))
              (, ,)
              (PP (IN by)
                (S
                  (VP
                    (VP (VBG stepping)
                      (PP (IN into)
                        (NP (PRP$ their) (NNS shoes))))
                    (, ,)
                    (CC and)
                    (VP (VBG enjoying)))))))
          (, ,))
        (PP (IN for)
          (NP
            (NP (DT a) (NN day))
            (CC or)
            (NP (CD two))))
        (, ,)
        (NP (PRP$ their) (NNS luxuries))))
    (. .)))

poss(object-2, My-1)
nsubjpass(twofold-4, object-2)
auxpass(twofold-4, is-3)
root(ROOT-0, twofold-4)
nsubj(is-7, one-6)
nsubj(land-9, one-6)
parataxis(twofold-4, is-7)
aux(land-9, to-8)
xcomp(is-7, land-9)
poss(cargo-11, my-10)
dobj(land-9, cargo-11)
dobj(have-15, which-13)
nsubj(have-15, I-14)
dep(land-9, have-15)
dobj(have-15, now-16)
prep_on(have-15, board-18)
nsubj(valuable-24, which-21)
cop(valuable-24, is-22)
advmod(valuable-24, very-23)
dep(land-9, valuable-24)
conj_and(have-15, valuable-24)
det(other-27, the-26)
nsubj(retaliate-31, other-27)
nsubj(luxuries-60, other-27)
cop(luxuries-60, is-28)
aux(retaliate-31, to-30)
xcomp(luxuries-60, retaliate-31)
poss(father-34, your-33)
prep_upon(retaliate-31, father-34)
poss(companions-37, his-36)
prep_upon(retaliate-31, companions-37)
conj_and(father-34, companions-37)
poss(attempt-40, their-39)
prep_for(companions-37, attempt-40)
prep_upon(retaliate-31, me-42)
prepc_by(retaliate-31, stepping-45)
poss(shoes-48, their-47)
prep_into(stepping-45, shoes-48)
prepc_by(retaliate-31, enjoying-51)
conj_and(stepping-45, enjoying-51)
det(day-55, a-54)
prep_for(luxuries-60, day-55)
conj_or(day-55, two-57)
prep_for(luxuries-60, two-57)
poss(luxuries-60, their-59)
parataxis(twofold-4, luxuries-60)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP (PRP$ my) (NN intention)
          (S
            (VP (TO to)
              (VP (VB make)
                (ADJP (JJ free))
                (PP (IN with)
                  (NP (NN nothing)))))))))
    (CC but)
    (S
      (NP (PRP$ his) (NN lordship))
      (VP (VBZ 's)
        (NP (NNS wines)
          (CC and)
          (NNS eatables))
        (: --)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD may)
              (VP (VB be)
                (VP (VBN assured)
                  (PP (IN of)))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB have)
          (NP
            (NP (DT no) (NN pleasure))
            (SBAR (IN if)
              (S
                (NP (DT the) (NNS ladies))
                (VP (VBP do) (RB not)
                  (VP (VB sit)
                    (PRT (RP down))
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN dinner-table))
                        (PP (IN with)
                          (NP (PRP us))))))))))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (VBD did)
                (ADVP (RB before))
                (PP (IN with)
                  (NP
                    (NP (PRP$ your) (NN father))
                    (CC and)
                    (NP (PRP$ his) (NNS friends))))))))))
    (. .) ('' '')))

nsubj(intention-4, It-1)
cop(intention-4, is-2)
poss(intention-4, my-3)
root(ROOT-0, intention-4)
aux(make-6, to-5)
vmod(intention-4, make-6)
acomp(make-6, free-7)
prep_with(make-6, nothing-9)
poss(lordship-12, his-11)
nsubj(wines-14, lordship-12)
cop(wines-14, 's-13)
conj_but(intention-4, wines-14)
conj_but(intention-4, eatables-16)
conj_and(wines-14, eatables-16)
mark(assured-22, that-18)
nsubjpass(assured-22, you-19)
aux(assured-22, may-20)
auxpass(assured-22, be-21)
ccomp(wines-14, assured-22)
parataxis(wines-14, assured-22)
prep(assured-22, of-23)
nsubj(have-28, I-26)
aux(have-28, shall-27)
conj_but(intention-4, have-28)
neg(pleasure-30, no-29)
dobj(have-28, pleasure-30)
mark(sit-36, if-31)
det(ladies-33, the-32)
nsubj(sit-36, ladies-33)
aux(sit-36, do-34)
neg(sit-36, not-35)
rcmod(pleasure-30, sit-36)
prt(sit-36, down-37)
det(dinner-table-40, the-39)
prep_to(sit-36, dinner-table-40)
prep_with(dinner-table-40, us-42)
mark(did-46, as-44)
nsubj(did-46, they-45)
advcl(have-28, did-46)
advmod(did-46, before-47)
poss(father-50, your-49)
prep_with(did-46, father-50)
poss(friends-53, his-52)
prep_with(did-46, friends-53)
conj_and(father-50, friends-53)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (MD can)
        (ADVP (RB hardly))
        (VP (VB expect)
          (NP
            (NP (DT that))
            (, ,)
            (NP (NN sir))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Cecilia))
    (. .)))

nsubj(expect-5, You-2)
aux(expect-5, can-3)
advmod(expect-5, hardly-4)
ccomp(said-11, expect-5)
dobj(expect-5, that-6)
appos(that-6, sir-8)
root(ROOT-0, said-11)
nsubj(said-11, Cecilia-12)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VBP do)))
      (: ;)
      (CC and)
      (S
        (NP (DT that))
        (VP (MD will)
          (VP (VB be)
            (ADJP (RB not) (JJ only))
            (NP
              (NP (DT the) (NN price))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ early) (NN release))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN yacht))
                      (CC and)
                      (NP (PRP themselves)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD will)
        (ADVP (RB also))
        (VP (VB be)
          (NP
            (NP (DT the) (JJ only) (NN means))
            (SBAR
              (WHPP (IN by)
                (WHNP (WDT which)))
              (S
                (NP (PRP they))
                (VP (MD will)
                  (VP (VB obtain)
                    (NP (NN anything))
                    (S
                      (VP (TO to)
                        (VP (VB eat))))))))))))
    (. .)))

discourse(do-5, Yes-2)
nsubj(do-5, I-4)
root(ROOT-0, do-5)
nsubj(only-12, that-8)
aux(only-12, will-9)
cop(only-12, be-10)
neg(only-12, not-11)
conj_and(do-5, only-12)
det(price-14, the-13)
dep(only-12, price-14)
det(release-18, the-16)
amod(release-18, early-17)
prep_of(price-14, release-18)
det(yacht-21, the-20)
prep_of(release-18, yacht-21)
prep_of(release-18, themselves-23)
conj_and(yacht-21, themselves-23)
nsubj(means-32, it-26)
aux(means-32, will-27)
advmod(means-32, also-28)
cop(means-32, be-29)
det(means-32, the-30)
amod(means-32, only-31)
conj_but(do-5, means-32)
prep_by(obtain-37, means-32)
nsubj(obtain-37, they-35)
aux(obtain-37, will-36)
rcmod(means-32, obtain-37)
dobj(obtain-37, anything-38)
aux(eat-40, to-39)
vmod(obtain-37, eat-40)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP observe)))
    (, ,)
    (NP
      (NP (NNP Miss) (NNP Ossulton))
      (, ,)
      (NP
        (NP (DT the) (NNS sins))
        (PP (IN of)
          (NP (DT the) (NNS fathers)))))
    (VP (VBP are)
      (VP (VBN visited)
        (PP (IN on)
          (NP (DT the) (NNS children)))))
    (. .)))

nsubj(observe-2, You-1)
ccomp(visited-13, observe-2)
nn(Ossulton-5, Miss-4)
nsubjpass(visited-13, Ossulton-5)
det(sins-8, the-7)
appos(Ossulton-5, sins-8)
det(fathers-11, the-10)
prep_of(sins-8, fathers-11)
auxpass(visited-13, are-12)
root(ROOT-0, visited-13)
det(children-16, the-15)
prep_on(visited-13, children-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB now))
      (VP (VBN told)
        (NP (PRP you))
        (SBAR
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP mean)
                (S
                  (VP (TO to)
                    (VP (VB do)))))))
          (CC and)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP wish)))))))
    (. .)))

nsubj(told-4, I-1)
aux(told-4, have-2)
advmod(told-4, now-3)
root(ROOT-0, told-4)
dobj(told-4, you-5)
dobj(mean-8, what-6)
nsubj(do-10, what-6)
nsubj(mean-8, I-7)
dep(told-4, mean-8)
aux(do-10, to-9)
xcomp(mean-8, do-10)
dobj(wish-14, what-12)
nsubj(wish-14, I-13)
dep(told-4, wish-14)
conj_and(mean-8, wish-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP leave)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP
            (VP (VB think)
              (PP (IN of)
                (NP (PRP it))))
            (, ,)
            (CC and)
            (VP (VB decide)
              (SBAR (IN whether)
                (S
                  (NP (PRP it))
                  (VP (MD will) (RB not)
                    (VP (VB be)
                      (NP
                        (NP (DT the) (JJS best))
                        (PP (IN for)
                          (NP
                            (NP (DT all) (NNS parties))
                            (PP (TO to)
                              (NP (NN consent)))))))))))))))
    (. .)))

nsubj(leave-2, I-1)
root(ROOT-0, leave-2)
dobj(leave-2, you-3)
nsubj(think-5, you-3)
nsubj(decide-10, you-3)
aux(think-5, to-4)
xcomp(leave-2, think-5)
prep_of(think-5, it-7)
xcomp(leave-2, decide-10)
conj_and(think-5, decide-10)
mark(best-17, whether-11)
nsubj(best-17, it-12)
aux(best-17, will-13)
neg(best-17, not-14)
cop(best-17, be-15)
det(best-17, the-16)
ccomp(decide-10, best-17)
det(parties-20, all-19)
prep_for(best-17, parties-20)
prep_to(parties-20, consent-22)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (NP (PRP$ my) (NN permission)
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (DT the) (JJ other) (NNS ladies))
                (SBAR (IN that)
                  (PRN (, ,)
                    (SBAR
                      (WHNP (WDT whatever))
                      (S
                        (VP (MD may)
                          (VP (VB be)
                            (NP (PRP$ their) (NN conduct))))))
                    (, ,))
                  (S
                    (NP (PRP they))
                    (VP (VBP are)
                      (ADJP (RB as) (JJ secure)
                        (PP (IN from)
                          (NP (NN ill-treatment)
                            (CC or)
                            (NNS rudeness)))))))))))
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP they))
            (VP (VBD were)
              (PP (IN in)
                (NP (NNP Grosvenor-Square))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB answer)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (MD will) (RB not)
                (VP (VB be)
                  (ADJP (JJ hungry))
                  (, ,)
                  (SBAR (IN if)
                    (S (, ,)
                      (PP (IN after)
                        (NP
                          (NP (JJ such) (NN forbearance))
                          (PP (IN in)
                            (NP (DT every) (NN point)))))
                      (, ,)
                      (NP (PRP they))
                      (VP (VBP show)
                        (ADJP
                          (ADJP (RB so) (RB little) (JJ gratitude))
                          (SBAR (IN as)
                            (S (RB not)
                              (VP (TO to)
                                (VP (VB honour)
                                  (NP (PRP me))
                                  (PP (IN with)
                                    (NP (PRP$ their) (NN company))))))))))))))))))
    (. .) ('' '')))

nsubj(have-2, You-1)
root(ROOT-0, have-2)
poss(permission-4, my-3)
dobj(have-2, permission-4)
aux(tell-6, to-5)
vmod(permission-4, tell-6)
det(ladies-9, the-7)
amod(ladies-9, other-8)
dobj(tell-6, ladies-9)
mark(secure-21, that-10)
nsubj(conduct-16, whatever-12)
aux(conduct-16, may-13)
cop(conduct-16, be-14)
poss(conduct-16, their-15)
dep(secure-21, conduct-16)
nsubj(secure-21, they-18)
cop(secure-21, are-19)
advmod(secure-21, as-20)
ccomp(tell-6, secure-21)
prep_from(secure-21, ill-treatment-23)
prep_from(secure-21, rudeness-25)
conj_or(ill-treatment-23, rudeness-25)
advmod(were-29, as-26)
mark(were-29, if-27)
nsubj(were-29, they-28)
advcl(have-2, were-29)
prep_in(were-29, Grosvenor-Square-31)
nsubj(answer-37, I-34)
aux(answer-37, can-35)
neg(answer-37, not-36)
conj_but(have-2, answer-37)
mark(hungry-43, that-38)
nsubj(hungry-43, they-39)
aux(hungry-43, will-40)
neg(hungry-43, not-41)
cop(hungry-43, be-42)
ccomp(answer-37, hungry-43)
mark(show-55, if-45)
amod(forbearance-49, such-48)
prep_after(show-55, forbearance-49)
det(point-52, every-51)
prep_in(forbearance-49, point-52)
nsubj(show-55, they-54)
advcl(hungry-43, show-55)
advmod(gratitude-58, so-56)
advmod(gratitude-58, little-57)
acomp(show-55, gratitude-58)
mark(honour-62, as-59)
neg(honour-62, not-60)
aux(honour-62, to-61)
dep(gratitude-58, honour-62)
dobj(honour-62, me-63)
poss(company-66, their-65)
prep_with(honour-62, company-66)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP I))
    (VP (VBP am)
      (S
        (VP (TO to)
          (VP (VB understand)
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (VBP are)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN starved)
                          (PP (IN into)
                            (NP (NN submission))))))))))))))
    (. ?) ('' '')))

advmod(am-4, Then-2)
nsubj(am-4, I-3)
nsubj(understand-6, I-3)
root(ROOT-0, am-4)
aux(understand-6, to-5)
xcomp(am-4, understand-6)
mark(are-9, that-7)
nsubj(are-9, we-8)
nsubjpass(starved-12, we-8)
ccomp(understand-6, are-9)
aux(starved-12, to-10)
auxpass(starved-12, be-11)
xcomp(are-9, starved-12)
prep_into(starved-12, submission-14)

(ROOT
  (S (`` ``)
    (S
      (FRAG
        (INTJ (UH No))
        (, ,) (RB not)
        (NP (NNP starved))
        (, ,)
        (NP (NNP Miss) (NNP Ossulton))
        (: ;))
      (NP (CC but))
      (VP
        (VP (VBP recollect)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (MD will)
                (VP (VB be)
                  (PP (IN on)
                    (NP (NN bread)
                      (CC and)
                      (NN water))))))))
        (, ,)
        (CC and)
        (VP (VBD detained)
          (SBAR (IN until)
            (S
              (NP (PRP you))
              (VP (VBP do)
                (NP (NN consent))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ your) (NN detention))
      (VP (MD will)
        (VP (VB increase)
          (NP
            (NP (DT the) (NN anxiety))
            (PP (IN of)
              (NP (PRP$ your) (NN father)))))))
    (. .) ('' '')))

discourse(not-4, No-2)
dep(recollect-11, not-4)
dep(not-4, starved-5)
nn(Ossulton-8, Miss-7)
dep(not-4, Ossulton-8)
nsubj(recollect-11, but-10)
nsubj(detained-22, but-10)
root(ROOT-0, recollect-11)
mark(be-15, that-12)
nsubj(be-15, you-13)
aux(be-15, will-14)
ccomp(recollect-11, be-15)
prep_on(be-15, bread-17)
prep_on(be-15, water-19)
conj_and(bread-17, water-19)
conj_and(recollect-11, detained-22)
mark(do-25, until-23)
nsubj(do-25, you-24)
advcl(detained-22, do-25)
dobj(do-25, consent-26)
poss(detention-30, your-29)
nsubj(increase-32, detention-30)
aux(increase-32, will-31)
conj_and(recollect-11, increase-32)
det(anxiety-34, the-33)
dobj(increase-32, anxiety-34)
poss(father-37, your-36)
prep_of(anxiety-34, father-37)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP know)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB persuade) (, ,)
                (ADVP (RB sir))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Cecilia))
    (. .)))

nsubj(know-3, You-2)
nsubj(persuade-6, You-2)
ccomp(said-11, know-3)
advmod(persuade-6, how-4)
aux(persuade-6, to-5)
ccomp(know-3, persuade-6)
xcomp(know-3, persuade-6)
advmod(persuade-6, sir-8)
root(ROOT-0, said-11)
nsubj(said-11, Cecilia-12)

(ROOT
  (S (`` ``)
    (ADVP (RB As) (RB far)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (ADJP (JJ concerned))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP trust)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD shall)
            (ADVP (RB ever))
            (VP (VB be)
              (ADJP (JJ ready)
                (S
                  (VP (TO to)
                    (VP (VB sacrifice)
                      (NP
                        (NP (DT any) (NNS feelings))
                        (PP (IN of)
                          (NP (NN pride))))
                      (S
                        (VP (TO to)
                          (VP (VB spare)
                            (NP (PRP$ my) (NN father))
                            (ADVP (RB so)
                              (NP (JJ much) (NN uneasiness)))))))))))))))
    (. .)))

advmod(far-3, As-2)
advmod(trust-10, far-3)
mark(concerned-7, as-4)
nsubj(concerned-7, I-5)
cop(concerned-7, am-6)
ccomp(far-3, concerned-7)
nsubj(trust-10, I-9)
root(ROOT-0, trust-10)
nsubj(ready-15, I-11)
nsubj(sacrifice-17, I-11)
aux(ready-15, shall-12)
advmod(ready-15, ever-13)
cop(ready-15, be-14)
ccomp(trust-10, ready-15)
aux(sacrifice-17, to-16)
xcomp(ready-15, sacrifice-17)
det(feelings-19, any-18)
dobj(sacrifice-17, feelings-19)
prep_of(feelings-19, pride-21)
aux(spare-23, to-22)
vmod(sacrifice-17, spare-23)
poss(father-25, my-24)
dobj(spare-23, father-25)
advmod(spare-23, so-26)
amod(uneasiness-28, much-27)
pobj(so-26, uneasiness-28)

(ROOT
  (S
    (PP (IN With)
      (NP (PRP$ your) (NN permission)))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (ADVP (RB now))
      (VP
        (VP (VB go)
          (PRT (RP down))
          (PP (IN into)
            (NP (DT the) (NN cabin))))
        (CC and)
        (VP (VB relieve)
          (NP (PRP$ my) (NNS companions))
          (PP (IN from)
            (NP
              (NP (DT the) (JJS worst))
              (PP (IN of)
                (NP (PRP$ their) (NNS fears))))))))
    (. .)))

poss(permission-3, your-2)
prep_with(go-8, permission-3)
nsubj(go-8, I-5)
nsubj(relieve-14, I-5)
aux(go-8, will-6)
advmod(go-8, now-7)
root(ROOT-0, go-8)
prt(go-8, down-9)
det(cabin-12, the-11)
prep_into(go-8, cabin-12)
conj_and(go-8, relieve-14)
poss(companions-16, my-15)
dobj(relieve-14, companions-16)
det(worst-19, the-18)
prep_from(relieve-14, worst-19)
poss(fears-22, their-21)
prep_of(worst-19, fears-22)

(ROOT
  (S
    (PP (RB As) (IN for)
      (S
        (VP (VBG obtaining)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBP wish)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB say)
        (SBAR (IN that)
          (S (, ,)
            (PP (IN as)
              (NP (DT a) (JJ young) (NN person)))
            (, ,)
            (NP (PRP I))
            (VP
              (VP (VBP am) (RB not)
                (ADJP (JJ likely)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (NP (JJ much) (NN influence))
                        (PP (IN with)
                          (NP
                            (NP (DT those) (JJR older))
                            (PP (IN than)
                              (NP (PRP myself))))))))))
              (, ,)
              (CC and)
              (VP (MD must)
                (ADVP (RB inevitably))
                (VP (VB be)
                  (ADJP (JJ overruled))
                  (, ,)
                  (SBAR (IN as)
                    (S
                      (NP (PRP I))
                      (VP (VBP have) (RB not)
                        (VP (VBN permission)
                          (S
                            (VP (TO to)
                              (VP (VB point)
                                (PRT (RP out))
                                (PP (TO to)
                                  (NP (PRP them)))
                                (NP
                                  (NP (NNS reasons))
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (VP (MD might)
                                        (VP (VB avail))))))))))))))))))))
    (. .)))

prepc_as_for(say-11, obtaining-3)
dobj(wish-6, what-4)
nsubj(wish-6, you-5)
ccomp(obtaining-3, wish-6)
nsubj(say-11, I-8)
aux(say-11, can-9)
advmod(say-11, only-10)
root(ROOT-0, say-11)
mark(likely-22, that-12)
det(person-17, a-15)
amod(person-17, young-16)
prep_as(likely-22, person-17)
nsubj(likely-22, I-19)
nsubj(have-24, I-19)
nsubj(overruled-37, I-19)
cop(likely-22, am-20)
neg(likely-22, not-21)
ccomp(say-11, likely-22)
aux(have-24, to-23)
xcomp(likely-22, have-24)
amod(influence-26, much-25)
dobj(have-24, influence-26)
det(older-29, those-28)
prep_with(have-24, older-29)
prep_than(older-29, myself-31)
aux(overruled-37, must-34)
advmod(overruled-37, inevitably-35)
cop(overruled-37, be-36)
ccomp(say-11, overruled-37)
conj_and(likely-22, overruled-37)
mark(permission-43, as-39)
nsubj(permission-43, I-40)
nsubj(point-45, I-40)
aux(permission-43, have-41)
neg(permission-43, not-42)
advcl(overruled-37, permission-43)
aux(point-45, to-44)
xcomp(permission-43, point-45)
prt(point-45, out-46)
prep_to(point-45, them-48)
dobj(point-45, reasons-49)
nsubj(avail-52, reasons-49)
aux(avail-52, might-51)
rcmod(reasons-49, avail-52)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (ADVP (RB so) (RB far))
    (VP (VB allow)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB be)
            (VP (VBN relieved)
              (PP (IN from)
                (NP (PRP$ my) (NN promise)))
              (, ,)
              (SBAR (IN as)
                (S
                  (VP (TO to)
                    (VP (VB communicate)
                      (NP
                        (NP (DT all))
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBP have)
                              (VP (VBN said)
                                (PP (TO to)
                                  (NP (PRP me)))
                                (PP (TO to)
                                  (NP
                                    (NP (DT the) (RB only) (VBN married) (NN woman))
                                    (PP (IN on)
                                      (NP (NN board)))))))))))))))))))
    (. ?)))

aux(allow-5, Would-1)
nsubj(allow-5, you-2)
advmod(far-4, so-3)
advmod(allow-5, far-4)
root(ROOT-0, allow-5)
dobj(allow-5, me-6)
nsubjpass(relieved-9, me-6)
aux(relieved-9, to-7)
auxpass(relieved-9, be-8)
xcomp(allow-5, relieved-9)
poss(promise-12, my-11)
prep_from(relieved-9, promise-12)
mark(communicate-16, as-14)
aux(communicate-16, to-15)
advcl(relieved-9, communicate-16)
dobj(communicate-16, all-17)
nsubj(said-20, you-18)
aux(said-20, have-19)
rcmod(all-17, said-20)
prep_to(said-20, me-22)
det(woman-27, the-24)
advmod(woman-27, only-25)
amod(woman-27, married-26)
prep_to(said-20, woman-27)
prep_on(woman-27, board-29)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD might) (RB then)
              (VP (VB obtain)
                (NP (PRP$ your) (NNS wishes))))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (, ,)
          (S
            (NP (PRP I))
            (VP (MD must)
              (ADVP (RB candidly))
              (VP (VB tell)
                (NP (PRP you))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB attempt)
        (S
          (VP (TO to)
            (VP (VB effect)
              (NP (JJ _) (JJ only) (NNS _))
              (SBAR (IN because)
                (S
                  (NP (PRP I))
                  (VP (VBP am)
                    (ADJP (RBS most) (JJ anxious)
                      (S
                        (VP (TO to)
                          (VP (VB rejoin)
                            (NP (PRP$ my) (NNS friends))))))))))))))
    (. .) ('' '')))

nsubj(think-2, I-1)
ccomp(attempt-20, think-2)
nsubj(obtain-6, I-3)
aux(obtain-6, might-4)
advmod(obtain-6, then-5)
ccomp(think-2, obtain-6)
poss(wishes-8, your-7)
dobj(obtain-6, wishes-8)
dobj(tell-15, which-10)
nsubj(tell-15, I-12)
aux(tell-15, must-13)
advmod(tell-15, candidly-14)
ccomp(think-2, tell-15)
dobj(tell-15, you-16)
nsubj(attempt-20, I-18)
nsubj(effect-22, I-18)
aux(attempt-20, shall-19)
root(ROOT-0, attempt-20)
aux(effect-22, to-21)
xcomp(attempt-20, effect-22)
amod(_-25, _-23)
amod(_-25, only-24)
dobj(effect-22, _-25)
mark(anxious-30, because-26)
nsubj(anxious-30, I-27)
nsubj(rejoin-32, I-27)
cop(anxious-30, am-28)
advmod(anxious-30, most-29)
advcl(effect-22, anxious-30)
aux(rejoin-32, to-31)
xcomp(anxious-30, rejoin-32)
poss(friends-34, my-33)
dobj(rejoin-32, friends-34)

(ROOT
  (SINV (`` ``)
    (S (CC And)
      (VP (VB be)
        (VP (VBN relieved)
          (PP (IN of)
            (NP (PRP$ my) (NN company))))))
    (, ,) ('' '')
    (VP (VBD replied)
      (NP
        (NP (NNP Pickersgill))
        (PRN (, ,)
          (ADVP (RB smiling))
          (ADVP (RB ironically))
          (, ,))
        (: --) (`` ``)
        (S
          (S
            (PP (IN of)
              (NP (NN course)))
            (NP (PRP you))
            (VP (VBP are)))
          (: ;)
          (S (CC but)
            (NP (PRP I))
            (VP (MD must)
              (CC and)
              (MD will)
              (VP (VB have)
                (NP (PRP$ my) (JJ pretty) (NN revenge)))))
          (: :)
          (CC and)
          (S
            (SBAR (IN although)
              (S
                (NP (PRP you))
                (VP
                  (VP (MD may))
                  (, ,)
                  (CC and)
                  (ADVP (RB probably))
                  (VP (MD will)))))
            (, ,)
            (VP (VB detest)
              (NP (PRP me))))))
      (, ,)
      (ADVP (IN at) (DT all)))
    (NP
      (NP (NNS events))
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD shall) (RB not)
            (VP (VB have)
              (NP (DT any) (RB very) (JJ formidable) (NN charge))
              (S
                (VP (TO to)
                  (VP (VB make)
                    (PP (IN against)
                      (NP (PRP me)))))))))))
    (. .)))

cc(relieved-4, And-2)
auxpass(relieved-4, be-3)
ccomp(replied-10, relieved-4)
poss(company-7, my-6)
prep_of(relieved-4, company-7)
root(ROOT-0, replied-10)
dobj(replied-10, Pickersgill-11)
dep(Pickersgill-11, smiling-13)
dep(smiling-13, ironically-14)
prep_of(are-21, course-19)
nsubj(are-21, you-20)
nsubj(detest-42, you-20)
dep(Pickersgill-11, are-21)
nsubj(have-28, I-24)
aux(have-28, must-25)
conj_and(are-21, will-27)
aux(have-28, will-27)
conj_and(have-28, will-27)
dep(Pickersgill-11, have-28)
conj_and(are-21, have-28)
poss(revenge-31, my-29)
amod(revenge-31, pretty-30)
dobj(have-28, revenge-31)
mark(may-36, although-34)
nsubj(may-36, you-35)
advcl(detest-42, may-36)
advmod(will-40, probably-39)
conj_and(may-36, will-40)
advcl(detest-42, will-40)
dep(Pickersgill-11, detest-42)
conj_and(are-21, detest-42)
dobj(detest-42, me-43)
advmod(replied-10, at-45)
pobj(at-45, all-46)
nsubj(replied-10, events-47)
nsubj(have-51, you-48)
aux(have-51, shall-49)
neg(have-51, not-50)
rcmod(events-47, have-51)
det(charge-55, any-52)
advmod(charge-55, very-53)
amod(charge-55, formidable-54)
dobj(have-51, charge-55)
aux(make-57, to-56)
vmod(have-51, make-57)
prep_against(make-57, me-59)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (S
          (NP (PRP you))
          (VP (VBP go)
            (S
              (ADVP (RB below))
              (, ,)
              (NP (NNP Miss) (NNP Ossulton))
              (, ,)
              (NP (PRP I))
              (VP (VBP give)
                (NP (PRP you))
                (NP (PRP$ my) (NN permission)
                  (S
                    (VP (TO to)
                      (VP (VB add)
                        (NP (DT the) (JJ married) (NN lady))
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN number))
                            (PP (IN of)
                              (NP (PRP$ my) (NNS confidants)))))))))))))
        (: ;)
        (CC and)
        (S
          (NP (PRP you))
          (VP (MD must)
            (VP (VB permit)
              (S
                (NP (PRP me))
                (VP (TO to)
                  (VP (VB introduce)
                    (NP (PRP$ my) (NN friend))))))))))
    (, ,)
    (NP
      (NP (NNP Mr) (NNP Ossulton))
      (, ;) ('' '')
      (CC and)
      (NP (NNP Pickersgill)))
    (VP (VBD waved)
      (NP (PRP$ his) (NN hand))
      (PP (IN in)
        (NP
          (NP (DT the) (NN direction))
          (PP (IN of)
            (NP (NNP Corbett)))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VBD took)
                  (PRT (RP off))
                  (NP (PRP$ his) (NN hat)))
                (CC and)
                (VP (VBD made)
                  (NP (DT a) (JJ low) (NN obeisance)))))))))
    (. .)))

mark(go-3, Before-1)
nsubj(go-3, you-2)
advcl(waved-42, go-3)
advmod(give-10, below-4)
nn(Ossulton-7, Miss-6)
nsubj(give-10, Ossulton-7)
nsubj(give-10, I-9)
ccomp(go-3, give-10)
iobj(give-10, you-11)
poss(permission-13, my-12)
dobj(give-10, permission-13)
aux(add-15, to-14)
vmod(permission-13, add-15)
det(lady-18, the-16)
amod(lady-18, married-17)
dobj(add-15, lady-18)
det(number-21, the-20)
prep_to(add-15, number-21)
poss(confidants-24, my-23)
prep_of(number-21, confidants-24)
nsubj(permit-29, you-27)
aux(permit-29, must-28)
conj_and(go-3, permit-29)
advcl(waved-42, permit-29)
dobj(permit-29, me-30)
nsubj(introduce-32, me-30)
aux(introduce-32, to-31)
xcomp(permit-29, introduce-32)
poss(friend-34, my-33)
dobj(introduce-32, friend-34)
nn(Ossulton-37, Mr-36)
nsubj(waved-42, Ossulton-37)
conj_and(Ossulton-37, Pickersgill-41)
nsubj(waved-42, Pickersgill-41)
root(ROOT-0, waved-42)
poss(hand-44, his-43)
dobj(waved-42, hand-44)
det(direction-47, the-46)
prep_in(waved-42, direction-47)
nsubj(took-52, direction-47)
nsubj(made-57, direction-47)
prep_of(direction-47, Corbett-49)
rcmod(direction-47, took-52)
prt(took-52, off-53)
poss(hat-55, his-54)
dobj(took-52, hat-55)
rcmod(direction-47, made-57)
conj_and(took-52, made-57)
det(obeisance-60, a-58)
amod(obeisance-60, low-59)
dobj(made-57, obeisance-60)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ impossible)
        (PP (IN for)
          (NP (NNP Cecilia) (NNP Ossulton))))
      (S
        (VP (TO to)
          (VP (VB help)
            (NP (VBG smiling))))))
    (. .)))

nsubj(impossible-3, It-1)
nsubj(help-8, It-1)
cop(impossible-3, was-2)
root(ROOT-0, impossible-3)
nn(Ossulton-6, Cecilia-5)
prep_for(impossible-3, Ossulton-6)
aux(help-8, to-7)
xcomp(impossible-3, help-8)
dobj(help-8, smiling-9)

(ROOT
  (S (`` ``)
    (CC And)
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD continued))
        (NP (NNP Pickersgill))))
    (, ,) (`` ``)
    (S
      (VP (VBG having)
        (VP (VBN taken)
          (NP
            (NP (DT the) (NN command))
            (PP (IN of)
              (NP
                (NP (DT this) (NN yacht))
                (PP (RB instead) (IN of)
                  (NP (PRP$ his) (NN lordship)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (RB absolutely) (JJ necessary))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (ADVP (RB also))
          (VP (VB take)
            (NP
              (NP (PRP$ his) (NN lordship) (POS 's))
              (NN name))))))
    (. .)))

cc(necessary-24, And-2)
parataxis(necessary-24, continued-5)
nsubj(continued-5, Pickersgill-6)
aux(taken-10, having-9)
vmod(necessary-24, taken-10)
det(command-12, the-11)
dobj(taken-10, command-12)
det(yacht-15, this-14)
prep_of(command-12, yacht-15)
poss(lordship-19, his-18)
prep_instead_of(yacht-15, lordship-19)
nsubj(necessary-24, it-21)
cop(necessary-24, is-22)
advmod(necessary-24, absolutely-23)
root(ROOT-0, necessary-24)
mark(take-28, that-25)
nsubj(take-28, I-26)
advmod(take-28, also-27)
ccomp(necessary-24, take-28)
poss(lordship-30, his-29)
poss(name-32, lordship-30)
dobj(take-28, name-32)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (S
          (PP (IN on)
            (NP
              (NP (NN board))
              (NP
                (NP (PRP I))
                (SBAR
                  (S
                    (VP (VBP am)
                      (NP (NNP Lord) (NNP B))))))
              (: --))))
        (: ;)
        (CC and)
        (S
          (VP (VB allow)
            (S
              (NP (PRP me))
              (VP (TO to)
                (VP (VB introduce)
                  (NP (PRP myself))
                  (PP (IN under)
                    (NP (DT that) (NN name))))))))))
    (: ;)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN addressed)
          (ADVP (RB otherwise)))))
    (. .)))

mark(on-2, While-1)
advcl(addressed-24, on-2)
pobj(on-2, board-3)
dep(board-3, I-4)
cop(B-7, am-5)
nn(B-7, Lord-6)
rcmod(I-4, B-7)
conj_and(on-2, allow-11)
advcl(addressed-24, allow-11)
dobj(allow-11, me-12)
nsubj(introduce-14, me-12)
aux(introduce-14, to-13)
xcomp(allow-11, introduce-14)
dobj(introduce-14, myself-15)
det(name-18, that-17)
prep_under(introduce-14, name-18)
nsubjpass(addressed-24, I-20)
aux(addressed-24, can-21)
neg(addressed-24, not-22)
auxpass(addressed-24, be-23)
root(ROOT-0, addressed-24)
advmod(addressed-24, otherwise-25)

(ROOT
  (S
    (S
      (VP (VBN Depend)
        (PP (IN upon)
          (NP (PRP it)))))
    (, ,)
    (NP (NNP Miss) (NNP Ossulton))
    (, ,)
    (X (IN that))
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB have)
        (NP (DT a)
          (ADJP (RBS most) (JJ paternal))
          (NN solicitude)
          (S
            (VP (TO to)
              (VP (VB make)
                (S
                  (NP (PRP you))
                  (ADJP (JJ happy)
                    (CC and)
                    (JJ comfortable)))))))))
    (. .) ('' '')))

vmod(have-11, Depend-1)
prep_upon(Depend-1, it-3)
nn(Ossulton-6, Miss-5)
nsubj(have-11, Ossulton-6)
dep(have-11, that-8)
nsubj(have-11, I-9)
aux(have-11, shall-10)
root(ROOT-0, have-11)
det(solicitude-15, a-12)
advmod(paternal-14, most-13)
amod(solicitude-15, paternal-14)
dobj(have-11, solicitude-15)
aux(make-17, to-16)
vmod(solicitude-15, make-17)
nsubj(happy-19, you-18)
nsubj(comfortable-21, you-18)
xcomp(make-17, happy-19)
xcomp(make-17, comfortable-21)
conj_and(happy-19, comfortable-21)

(ROOT
  (S
    (S
      (SBAR
        (SINV (VBD Had)
          (NP (NNP Cecilia) (NNP Ossulton))
          (VP (VBD dared)
            (S
              (VP (TO to)
                (VP (VB have)
                  (VP (VBN given)
                    (S
                      (VP (VB vent)
                        (PP (TO to)
                          (NP (PRP$ her) (JJ real) (NNS feelings)))
                        (PP (IN at)
                          (NP (DT that) (NN time))))))))))))
      (, ,)
      (NP (PRP she))
      (VP (MD would)
        (VP (VB have)
          (NP (NN burst))
          (PP (IN into)
            (NP
              (NP (DT a) (NN fit))
              (PP (IN of)
                (NP (NN laughter))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (RB too) (JJ ludicrous))))
    (. .)))

aux(dared-4, Had-1)
nn(Ossulton-3, Cecilia-2)
nsubj(dared-4, Ossulton-3)
nsubj(given-7, Ossulton-3)
advcl(have-19, dared-4)
aux(given-7, to-5)
aux(given-7, have-6)
xcomp(dared-4, given-7)
ccomp(given-7, vent-8)
poss(feelings-12, her-10)
amod(feelings-12, real-11)
prep_to(vent-8, feelings-12)
det(time-15, that-14)
prep_at(vent-8, time-15)
nsubj(have-19, she-17)
aux(have-19, would-18)
root(ROOT-0, have-19)
dobj(have-19, burst-20)
det(fit-23, a-22)
prep_into(have-19, fit-23)
prep_of(fit-23, laughter-25)
nsubj(ludicrous-30, it-27)
cop(ludicrous-30, was-28)
advmod(ludicrous-30, too-29)
parataxis(have-19, ludicrous-30)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (, ,)
    (NP (DT the) (JJ very) (NN burlesque))
    (VP (VBD reassured)
      (S
        (NP (PRP her))
        (ADJP (RB still) (RBR more))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(reassured-9, time-4)
det(burlesque-8, the-6)
amod(burlesque-8, very-7)
nsubj(reassured-9, burlesque-8)
root(ROOT-0, reassured-9)
nsubj(more-12, her-10)
advmod(more-12, still-11)
xcomp(reassured-9, more-12)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD went)
      (PP (IN into)
        (NP (DT the) (NN cabin)))
      (PP (IN with)
        (NP
          (NP (DT a) (JJ heavy) (NN weight))
          (VP (VBN removed)
            (PP (IN from)
              (NP (PRP$ her) (NN heart)))))))
    (. .)))

nsubj(went-2, She-1)
root(ROOT-0, went-2)
det(cabin-5, the-4)
prep_into(went-2, cabin-5)
det(weight-9, a-7)
amod(weight-9, heavy-8)
prep_with(went-2, weight-9)
vmod(weight-9, removed-10)
poss(heart-13, her-12)
prep_from(removed-10, heart-13)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT the) (NN meantime)))
      (, ,)
      (NP (NNP Miss) (NNP Ossulton)
        (CC and)
        (NNP Mrs) (NNP Lascelles))
      (VP (VBD remained)
        (ADVP (RB below))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT the) (JJS greatest) (NN anxiety))
            (PP (IN at)
              (NP
                (NP (NNP Cecilia) (POS 's))
                (VBN prolonged) (NN stay)))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP
        (VP (VBD knew)
          (S
            (NP (RB not) (WDT what))
            (VP (TO to)
              (VP (VB think)))))
        (, ,)
        (CC and)
        (VP (VBD dared) (RB not)
          (VP (VB go)
            (PP (IN on)
              (NP (NN deck)))))))
    (. .)))

det(meantime-3, the-2)
prep_in(remained-10, meantime-3)
nn(Ossulton-6, Miss-5)
nsubj(remained-10, Ossulton-6)
nn(Lascelles-9, Mrs-8)
conj_and(Ossulton-6, Lascelles-9)
nsubj(remained-10, Lascelles-9)
root(ROOT-0, remained-10)
advmod(remained-10, below-11)
det(anxiety-16, the-14)
amod(anxiety-16, greatest-15)
prep_in(remained-10, anxiety-16)
poss(stay-21, Cecilia-18)
amod(stay-21, prolonged-20)
prep_at(anxiety-16, stay-21)
nsubj(knew-24, they-23)
nsubj(dared-31, they-23)
parataxis(remained-10, knew-24)
neg(what-26, not-25)
dobj(knew-24, what-26)
nsubj(think-28, what-26)
aux(think-28, to-27)
xcomp(knew-24, think-28)
parataxis(remained-10, dared-31)
conj_and(knew-24, dared-31)
neg(dared-31, not-32)
dep(dared-31, go-33)
prep_on(go-33, deck-35)

(ROOT
  (S
    (S
      (NP (NNP Mrs) (NNP Lascelles))
      (VP (VBD had)
        (VP
          (ADVP (RB once))
          (VBN determined)
          (PP (IN at)
            (NP (DT all) (NNS risks)))
          (S
            (VP (TO to)
              (VP (VB go)
                (PRT (RP up))))))))
    (: ;)
    (CC but)
    (S
      (NP (NNP Miss) (NNP Ossulton)
        (CC and)
        (NNP Phoebe))
      (VP (VBD had)
        (S
          (VP
            (VP (VBD screamed))
            (CC and)
            (VP (VBD implored)
              (NP (PRP her))
              (ADVP (RB so) (RB fervently)))))
        (S (RB not)
          (VP (TO to)
            (VP (VB leave)
              (NP (PRP them))
              (SBAR (IN that)
                (S
                  (NP (PRP she))
                  (ADVP (RB unwillingly))
                  (VP (VBD consented)
                    (S
                      (VP (TO to)
                        (VP (VB remain))))))))))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(determined-5, Lascelles-2)
nsubj(go-10, Lascelles-2)
aux(determined-5, had-3)
advmod(determined-5, once-4)
root(ROOT-0, determined-5)
det(risks-8, all-7)
prep_at(determined-5, risks-8)
aux(go-10, to-9)
xcomp(determined-5, go-10)
prt(go-10, up-11)
nn(Ossulton-15, Miss-14)
nsubj(had-18, Ossulton-15)
nsubj(leave-27, Ossulton-15)
conj_and(Ossulton-15, Phoebe-17)
nsubj(had-18, Phoebe-17)
nsubj(leave-27, Phoebe-17)
conj_but(determined-5, had-18)
ccomp(had-18, screamed-19)
ccomp(had-18, implored-21)
conj_and(screamed-19, implored-21)
dobj(implored-21, her-22)
advmod(fervently-24, so-23)
advmod(implored-21, fervently-24)
neg(leave-27, not-25)
aux(leave-27, to-26)
xcomp(had-18, leave-27)
dobj(leave-27, them-28)
mark(consented-32, that-29)
nsubj(consented-32, she-30)
nsubj(remain-34, she-30)
advmod(consented-32, unwillingly-31)
ccomp(leave-27, consented-32)
aux(remain-34, to-33)
xcomp(consented-32, remain-34)

(ROOT
  (S
    (NP (NNP Cecilia) (POS 's))
    (VP (VBZ countenance)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP she))
          (VP (VBD entered)
            (NP
              (NP (DT the) (NN cabin))
              (, ,)
              (VP (VBN reassured)
                (NP
                  (NP (NNP Mrs) (NNP Lascelles))
                  (, ,)
                  (CONJP (CC but)
                    (RB not))
                  (NP (PRP$ her) (NN aunt))
                  (, ,)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBD ran)
                        (PP (TO to)
                          (S
                            (NP (PRP her))
                            (VP
                              (VP (VBG crying)
                                (CC and)
                                (VBG sobbing))
                              (CC and)
                              (VP (VBG clinging)
                                (PP (TO to)
                                  (NP (PRP her))))))))))))
              (, ,)
              (VP (VBG saying) (, ,) (`` ``)
                (SBARQ
                  (WHNP (WP What))
                  (SQ (VBP have)
                    (NP (PRP they))
                    (VP (VBN done)
                      (PP (TO to)
                        (NP
                          (NP (PRP you))
                          (, ,)
                          (NP (PRP$ my) (JJ poor) (, ,) (JJ poor) (NN Cecilia))))))
                  (. ?))
                ('' '')))))))))

nsubj(countenance-3, Cecilia-1)
possessive(Cecilia-1, 's-2)
root(ROOT-0, countenance-3)
advmod(entered-6, when-4)
nsubj(entered-6, she-5)
advcl(countenance-3, entered-6)
det(cabin-8, the-7)
dobj(entered-6, cabin-8)
vmod(cabin-8, reassured-10)
nn(Lascelles-12, Mrs-11)
dobj(reassured-10, Lascelles-12)
poss(aunt-17, her-16)
dobj(reassured-10, aunt-17)
conj_negcc(Lascelles-12, aunt-17)
nsubj(ran-20, who-19)
dobj(reassured-10, ran-20)
conj_negcc(Lascelles-12, ran-20)
nsubj(crying-23, her-22)
nsubj(sobbing-25, her-22)
nsubj(clinging-27, her-22)
prepc_to(ran-20, crying-23)
prepc_to(ran-20, sobbing-25)
conj_and(crying-23, sobbing-25)
prepc_to(ran-20, clinging-27)
conj_and(crying-23, clinging-27)
prep_to(clinging-27, her-29)
vmod(cabin-8, saying-31)
dobj(done-37, What-34)
aux(done-37, have-35)
nsubj(done-37, they-36)
ccomp(saying-31, done-37)
prep_to(done-37, you-39)
poss(Cecilia-45, my-41)
amod(Cecilia-45, poor-42)
amod(Cecilia-45, poor-44)
appos(you-39, Cecilia-45)

(ROOT
  (S (`` ``)
    (NP
      (NP (NN Nothing))
      (PP (IN at)
        (NP
          (NP (DT all))
          (, ,)
          (NP (NN aunt))
          (, ,) ('' ''))))
    (VP (VBD replied)
      (NP (NNP Cecilia))
      (PRN (, ,)
        (S (`` ``)
          (NP (DT the) (NN captain))
          (VP
            (VP (VBZ speaks)
              (ADVP (RB very) (RB fairly)))
            (, ,)
            (CC and)
            (VP (VBZ says)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (MD shall)
                    (VP (VB respect)
                      (NP (PRP us))
                      (PP (IN in)
                        (NP
                          (NP (DT every) (JJ possible) (NN way))
                          (, ,)
                          (VP (VBN provided)
                            (SBAR (IN that)
                              (S
                                (NP (PRP we))
                                (VP (VBP obey)
                                  (NP (PRP$ his) (NNS orders))))))))
                      (PRN (: ;)
                        (CC but)
                        (ADVP (IN if) (RB not))
                        (: --))))))))
          ('' '')))
      (`` ``)
      (FRAG (IN If)
        (NP
          (NP (RB not))
          (: --)
          (NP (WP what))))
      (, ,)
      (S
        (NP (NNP Cecilia))))
    (. ?) ('' '')))

nsubj(replied-9, Nothing-2)
prep_at(Nothing-2, all-4)
appos(all-4, aunt-6)
root(ROOT-0, replied-9)
dobj(replied-9, Cecilia-10)
det(captain-14, the-13)
nsubj(speaks-15, captain-14)
nsubj(says-20, captain-14)
parataxis(replied-9, speaks-15)
advmod(fairly-17, very-16)
advmod(speaks-15, fairly-17)
parataxis(replied-9, says-20)
conj_and(speaks-15, says-20)
nsubj(respect-23, he-21)
aux(respect-23, shall-22)
ccomp(says-20, respect-23)
dobj(respect-23, us-24)
det(way-28, every-26)
amod(way-28, possible-27)
prep_in(respect-23, way-28)
vmod(way-28, provided-30)
mark(obey-33, that-31)
nsubj(obey-33, we-32)
ccomp(provided-30, obey-33)
poss(orders-35, his-34)
dobj(obey-33, orders-35)
cc(if-38, but-37)
dep(respect-23, if-38)
dep(if-38, not-39)
dep(replied-9, If-43)
dep(If-43, not-44)
dep(not-44, what-46)
dep(replied-9, Cecilia-48)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Miss) (NNP Ossulton))
      (, ,)
      (S
        (VP (VBG grasping)
          (NP
            (NP (PRP$ her) (NN niece) (POS 's))
            (NN arm)))))
    (. .)))

root(ROOT-0, said-1)
nn(Ossulton-3, Miss-2)
dobj(said-1, Ossulton-3)
vmod(said-1, grasping-5)
poss(niece-7, her-6)
poss(arm-9, niece-7)
dobj(grasping-5, arm-9)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (MD will)
      (VP
        (VP (VB starve)
          (NP (PRP us)))
        (, ,)
        (CC and)
        (RB not)
        (VP (VB let)
          (S
            (NP (PRP us))
            (VP (VB go))))))
    (. !) ('' '')))

nsubj(starve-4, He-2)
nsubj(let-9, He-2)
aux(starve-4, will-3)
root(ROOT-0, starve-4)
dobj(starve-4, us-5)
neg(let-9, not-8)
conj_and(starve-4, let-9)
nsubj(go-11, us-10)
ccomp(let-9, go-11)

(ROOT
  (S (`` ``)
    (NP (NNP God))
    (VP (VBP have)
      (VP (VBN mercy)
        (PP (IN on)
          (NP (PRP us)))))
    (. !) ('' '')))

nsubj(mercy-4, God-2)
aux(mercy-4, have-3)
root(ROOT-0, mercy-4)
prep_on(mercy-4, us-6)

(ROOT
  (S
    (VP (VBN cried)
      (NP (NNP Miss) (NNP Ossulton))
      (, ,)
      (S
        (VP (VBG renewing)
          (NP (PRP$ her) (NNS sobs)))))
    (. .)))

root(ROOT-0, cried-1)
nn(Ossulton-3, Miss-2)
dobj(cried-1, Ossulton-3)
vmod(cried-1, renewing-5)
poss(sobs-7, her-6)
dobj(renewing-5, sobs-7)

(ROOT
  (S
    (S
      (NP (NNP Cecilia))
      (ADVP (RB then))
      (VP (VBD went)
        (PP (TO to)
          (NP (NNP Mrs) (NNPS Lascelles)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBN communicated)
          (PP (TO to)
            (NP (PRP$ her) (RB apart)))))
      (, ,)
      (NP (PDT all) (DT that))
      (VP (VBD had)
        (VP (VBN passed))))
    (. .)))

nsubj(went-3, Cecilia-1)
advmod(went-3, then-2)
root(ROOT-0, went-3)
nn(Lascelles-6, Mrs-5)
prep_to(went-3, Lascelles-6)
vmod(passed-17, communicated-9)
prep(communicated-9, to-10)
poss(apart-12, her-11)
pobj(to-10, apart-12)
predet(that-15, all-14)
nsubj(passed-17, that-15)
aux(passed-17, had-16)
conj_and(went-3, passed-17)

(ROOT
  (S
    (S
      (NP (NNP Mrs) (NNP Lascelles))
      (VP (VBD agreed)
        (PP (IN with)
          (NP (NNP Cecilia)))
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBD were)
                (PP (IN in)
                  (NP
                    (NP (DT no) (NN danger))
                    (PP (IN of)
                      (NP (NN insult))))))))
          (: ;)
          (CC and)
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (VBD talked)
                (PRT (RP over))
                (NP
                  (NP (DT the) (NN matter))
                  (SBAR
                    (S
                      (NP (PRP they))
                      (ADVP (IN at) (JJ last))
                      (VP (VBD began)
                        (S
                          (VP (TO to)
                            (VP (VB laugh))))))))))))))
    (: ;)
    (S
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN novelty))
            (PP (IN in)
              (NP (PRP it))))))
      (, ,)
      (CC and)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (NN something))
            (ADJP (RB so) (JJ ridiculous)
              (PP (IN in)
                (NP
                  (NP (PDT all) (DT the) (NNS gentlemen))
                  (VP (VBG being)
                    (VP (VBN turned)
                      (PP (IN into)
                        (NP (NNS smugglers))))))))))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(agreed-3, Lascelles-2)
root(ROOT-0, agreed-3)
prep_with(agreed-3, Cecilia-5)
mark(were-8, that-6)
nsubj(were-8, they-7)
advcl(agreed-3, were-8)
ccomp(agreed-3, were-8)
neg(danger-11, no-10)
prep_in(were-8, danger-11)
prep_of(danger-11, insult-13)
mark(talked-18, as-16)
nsubj(talked-18, they-17)
advcl(agreed-3, talked-18)
ccomp(agreed-3, talked-18)
conj_and(were-8, talked-18)
prt(talked-18, over-19)
det(matter-21, the-20)
dobj(talked-18, matter-21)
nsubj(began-25, they-22)
nsubj(laugh-27, they-22)
advmod(began-25, at-23)
advmod(at-23, last-24)
rcmod(matter-21, began-25)
aux(laugh-27, to-26)
xcomp(began-25, laugh-27)
expl(was-30, there-29)
parataxis(agreed-3, was-30)
det(novelty-32, a-31)
nsubj(was-30, novelty-32)
prep_in(novelty-32, it-34)
expl(was-38, there-37)
parataxis(agreed-3, was-38)
conj_and(was-30, was-38)
nsubj(was-38, something-39)
advmod(ridiculous-41, so-40)
amod(something-39, ridiculous-41)
predet(gentlemen-45, all-43)
det(gentlemen-45, the-44)
prep_in(ridiculous-41, gentlemen-45)
auxpass(turned-47, being-46)
vmod(gentlemen-45, turned-47)
prep_into(turned-47, smugglers-49)

(ROOT
  (S
    (S
      (NP (NNP Cecilia))
      (VP (VBD was)
        (ADJP (JJ glad))
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (MD could) (RB not)
              (VP (VB tell)
                (NP (PRP$ her) (NN aunt))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP she))
                    (VP (VBD wished)
                      (S
                        (NP (PRP her))
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (RB so) (JJ frightened)
                              (PP (IN as)
                                (ADVP (RB never))))
                            (S
                              (VP (TO to)
                                (VP (VB have)
                                  (NP
                                    (NP (PRP$ her) (NN company))
                                    (PP (IN on)
                                      (NP (NN board))))
                                  (ADVP
                                    (NP (DT the) (NN yacht))
                                    (RB again)))))))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (NNP Mrs) (NNP Lascelles))
      (VP (VBD was)
        (ADJP (RB too) (JJ glad)
          (S
            (VP (TO to)
              (VP (VB annoy)
                (NP (PRP her))
                (PP (IN for)
                  (NP
                    (NP (JJ many)
                      (CC and)
                      (JJ various) (NNS insults))
                    (VP (VBN received))))))))))
    (. .)))

nsubj(glad-3, Cecilia-1)
cop(glad-3, was-2)
root(ROOT-0, glad-3)
mark(tell-8, that-4)
nsubj(tell-8, she-5)
aux(tell-8, could-6)
neg(tell-8, not-7)
ccomp(glad-3, tell-8)
poss(aunt-10, her-9)
dobj(tell-8, aunt-10)
mark(wished-14, as-12)
nsubj(wished-14, she-13)
advcl(tell-8, wished-14)
dobj(wished-14, her-15)
nsubj(frightened-19, her-15)
nsubj(have-23, her-15)
aux(frightened-19, to-16)
cop(frightened-19, be-17)
advmod(frightened-19, so-18)
xcomp(wished-14, frightened-19)
prep(frightened-19, as-20)
pcomp(as-20, never-21)
aux(have-23, to-22)
xcomp(frightened-19, have-23)
poss(company-25, her-24)
dobj(have-23, company-25)
prep_on(company-25, board-27)
det(yacht-29, the-28)
npadvmod(again-30, yacht-29)
advmod(have-23, again-30)
nn(Lascelles-34, Mrs-33)
nsubj(glad-37, Lascelles-34)
nsubj(annoy-39, Lascelles-34)
cop(glad-37, was-35)
advmod(glad-37, too-36)
conj_and(glad-3, glad-37)
aux(annoy-39, to-38)
xcomp(glad-37, annoy-39)
dobj(annoy-39, her-40)
amod(insults-45, many-42)
conj_and(many-42, various-44)
amod(insults-45, various-44)
prep_for(annoy-39, insults-45)
vmod(insults-45, received-46)

(ROOT
  (S
    (S
      (NP (DT The) (NN matter))
      (VP (VBD was)
        (ADVP (RB therefore))
        (VP (VBN canvassed)
          (ADVP (RB over) (RB very))
          (ADVP (RB satisfactorily)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Mrs) (NNP Lascelles))
      (VP (VBD felt)
        (NP (DT a) (JJ natural) (NN curiosity))
        (S
          (VP (TO to)
            (VP (VB see)
              (NP
                (NP (DT this) (JJ new) (NNP Lord) (NNP B))
                (: --)
                (CC and)
                (NP (DT the) (JJ second) (NNP Mr) (NNP Ossulton))))))))
    (. .)))

det(matter-2, The-1)
nsubjpass(canvassed-5, matter-2)
auxpass(canvassed-5, was-3)
advmod(canvassed-5, therefore-4)
root(ROOT-0, canvassed-5)
advmod(very-7, over-6)
advmod(canvassed-5, very-7)
advmod(canvassed-5, satisfactorily-8)
nn(Lascelles-12, Mrs-11)
nsubj(felt-13, Lascelles-12)
conj_and(canvassed-5, felt-13)
det(curiosity-16, a-14)
amod(curiosity-16, natural-15)
dobj(felt-13, curiosity-16)
aux(see-18, to-17)
vmod(felt-13, see-18)
det(B-22, this-19)
amod(B-22, new-20)
nn(B-22, Lord-21)
dobj(see-18, B-22)
det(Ossulton-28, the-25)
amod(Ossulton-28, second-26)
nn(Ossulton-28, Mr-27)
dobj(see-18, Ossulton-28)
conj_and(B-22, Ossulton-28)

(ROOT
  (S (CC But)
    (NP (PRP they))
    (VP
      (VP (VBD had)
        (VP (VBN had)
          (NP (DT no) (NN breakfast))))
      (, ,)
      (CC and)
      (VP (VBD were)
        (VP (VBG feeling)
          (ADJP (RB very) (JJ hungry))
          (ADVP (RB now))
          (SBAR (IN that)
            (S
              (NP (PRP$ their) (NN alarm))
              (VP (VBD was)
                (ADJP (RP over))))))))
    (. .)))

nsubj(had-4, they-2)
nsubj(feeling-10, they-2)
aux(had-4, had-3)
root(ROOT-0, had-4)
neg(breakfast-6, no-5)
dobj(had-4, breakfast-6)
aux(feeling-10, were-9)
conj_and(had-4, feeling-10)
advmod(hungry-12, very-11)
acomp(feeling-10, hungry-12)
advmod(feeling-10, now-13)
mark(over-18, that-14)
poss(alarm-16, their-15)
nsubj(over-18, alarm-16)
cop(over-18, was-17)
ccomp(feeling-10, over-18)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD desired)
      (S
        (NP (NNP Phoebe))
        (VP (TO to)
          (VP (VB ask)
            (NP
              (NP (DT the) (NN steward))
              (PP (IN for)
                (NP (DT some) (NN tea)
                  (CC or)
                  (NN coffee))))))))
    (. .)))

nsubj(desired-2, They-1)
root(ROOT-0, desired-2)
dobj(desired-2, Phoebe-3)
nsubj(ask-5, Phoebe-3)
aux(ask-5, to-4)
xcomp(desired-2, ask-5)
det(steward-7, the-6)
dobj(ask-5, steward-7)
det(tea-10, some-9)
prep_for(steward-7, tea-10)
prep_for(steward-7, coffee-12)
conj_or(tea-10, coffee-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NN reply))
      (SBAR
        (S
          (VP
            (VP (VBD was))
            (, ,)
            (SBAR (IN that) (`` ``)
              (S
                (NP (NNP Breakfast))
                (VP (VBD was)
                  (VP (VBN laid)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN cabin))
                        (, ,)
                        (CC and)
                        (NP (NNP Lord) (NNP B))
                        (: --)))))))))))
    (VP (VBD trusted)
      (SBAR (IN that)
        (S
          (NP (DT the) (NNS ladies))
          (VP (MD would)
            (VP (VB come)
              (S
                (VP (TO to)
                  (VP (VB partake)
                    (PP (IN of)
                      (NP (PRP it)))))))))))
    (. .) ('' '')))

det(reply-2, The-1)
mark(laid-9, reply-2)
nsubj(trusted-18, reply-2)
rcmod(reply-2, was-3)
nsubjpass(laid-9, Breakfast-7)
auxpass(laid-9, was-8)
ccomp(was-3, laid-9)
det(cabin-12, the-11)
prep_in(laid-9, cabin-12)
nn(B-16, Lord-15)
prep_in(laid-9, B-16)
conj_and(cabin-12, B-16)
root(ROOT-0, trusted-18)
mark(come-23, that-19)
det(ladies-21, the-20)
nsubj(come-23, ladies-21)
nsubj(partake-25, ladies-21)
aux(come-23, would-22)
ccomp(trusted-18, come-23)
aux(partake-25, to-24)
xcomp(come-23, partake-25)
prep_of(partake-25, it-27)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No) (, ,) (UH no)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Mrs) (NNP Lascelles))
    (, ,) (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (MD can) (, ,)
        (PP (IN without)
          (NP (NN being)))
        (VP (VBD introduced)
          (PP (TO to)
            (NP (PRP them)))
          (ADVP (RB first)))))
    (. .) ('' '')))

dep(replied-7, No-2)
dep(No-2, no-4)
root(ROOT-0, replied-7)
nn(Lascelles-9, Mrs-8)
nsubj(replied-7, Lascelles-9)
nsubj(introduced-18, I-12)
neg(introduced-18, never-13)
aux(introduced-18, can-14)
prep_without(introduced-18, being-17)
ccomp(replied-7, introduced-18)
prep_to(introduced-18, them-20)
advmod(introduced-18, first-21)

(ROOT
  (SINV (`` ``)
    (SINV (CC Nor)
      (MD will)
      (NP (PRP I))
      (VP (VB go)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Cecilia))
    (, ,) (`` ``)
    (S
      (S (CC but)
        (NP (PRP I))
        (VP (MD will)
          (VP (VB write)
            (NP (DT a) (NN note)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP we))
        (VP (MD will)
          (VP (VB have)
            (NP (PRP$ our) (NN breakfast))
            (ADVP (RB here))))))
    (. .) ('' '')))

cc(go-5, Nor-2)
aux(go-5, will-3)
nsubj(go-5, I-4)
dep(replied-8, go-5)
root(ROOT-0, replied-8)
nsubj(replied-8, Cecilia-9)
nsubj(write-15, I-13)
aux(write-15, will-14)
ccomp(replied-8, write-15)
det(note-17, a-16)
dobj(write-15, note-17)
nsubj(have-22, we-20)
aux(have-22, will-21)
ccomp(replied-8, have-22)
conj_and(write-15, have-22)
poss(breakfast-24, our-23)
dobj(have-22, breakfast-24)
advmod(have-22, here-25)

(ROOT
  (S
    (S
      (NP (NNP Cecilia))
      (VP (VBD wrote)
        (NP (DT a) (NN note))
        (PP (IN in)
          (NP (NN pencil)))
        (SBAR (IN as)
          (S
            (VP (VBZ follows) (: :) (`` ``)
              (NP
                (NP
                  (NP (NNP Miss) (NNP Ossulton) (POS 's))
                  (NNS compliments))
                (PP (TO to)
                  (NP (NNP Lord) (NNP B)))))
            (: --)))))
    (, ,)
    (CC and)
    (S (, ,)
      (SBAR (IN as)
        (S
          (NP (DT the) (NNS ladies))
          (VP (VBP feel)
            (ADJP (RB rather) (JJ indisposed))
            (PP (IN after)
              (NP
                (NP (DT the) (NN alarm))
                (PP (IN of)
                  (NP (DT this) (NN morning))))))))
      (, ,)
      (NP (PRP they))
      (VP
        (VP (VBP trust)
          (SBAR (IN that)
            (S
              (NP (PRP$ his) (NN lordship))
              (VP (MD will)
                (VP (VB excuse)
                  (NP (PRP$ their) (JJ coming))
                  (PP (TO to)
                    (NP (NN breakfast))))))))
        (: ;)
        (CC but)
        (VP (VBP hope)
          (S
            (VP (TO to)
              (VP
                (VP (VB meet)
                  (NP (PRP$ his) (NN lordship))
                  (PP (IN at)
                    (NP (NN dinner))))
                (, ,)
                (FRAG (IN if) (RB not)
                  (PP (IN before)
                    (NP (DT that) (NN time)))
                  (PP (IN on)
                    (NP (NN deck))))))))))
    (. .) ('' '')))

nsubj(wrote-2, Cecilia-1)
root(ROOT-0, wrote-2)
det(note-4, a-3)
dobj(wrote-2, note-4)
prep_in(wrote-2, pencil-6)
mark(follows-8, as-7)
advcl(wrote-2, follows-8)
nn(Ossulton-12, Miss-11)
poss(compliments-14, Ossulton-12)
dobj(follows-8, compliments-14)
nn(B-17, Lord-16)
prep_to(compliments-14, B-17)
mark(feel-25, as-22)
det(ladies-24, the-23)
nsubj(feel-25, ladies-24)
advcl(trust-36, feel-25)
advmod(indisposed-27, rather-26)
acomp(feel-25, indisposed-27)
det(alarm-30, the-29)
prep_after(feel-25, alarm-30)
det(morning-33, this-32)
prep_of(alarm-30, morning-33)
nsubj(trust-36, they-35)
nsubj(hope-48, they-35)
nsubj(meet-50, they-35)
conj_and(wrote-2, trust-36)
mark(excuse-41, that-37)
poss(lordship-39, his-38)
nsubj(excuse-41, lordship-39)
aux(excuse-41, will-40)
ccomp(trust-36, excuse-41)
poss(coming-43, their-42)
dobj(excuse-41, coming-43)
prep_to(excuse-41, breakfast-45)
conj_and(wrote-2, hope-48)
conj_but(trust-36, hope-48)
aux(meet-50, to-49)
xcomp(hope-48, meet-50)
poss(lordship-52, his-51)
dobj(meet-50, lordship-52)
prep_at(meet-50, dinner-54)
dep(meet-50, if-56)
neg(if-56, not-57)
det(time-60, that-59)
prep_before(if-56, time-60)
prep_on(if-56, deck-62)

(ROOT
  (S
    (S
      (NP (DT The) (NN answer))
      (VP (VBD was)
        (ADJP (JJ propitious))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN steward))
      (ADVP (RB soon))
      (VP (VBD appeared)
        (PP (IN with)
          (NP (DT the) (NN breakfast)))
        (PP (IN in)
          (NP
            (NP (DT the) (NNS ladies) (POS '))
            (NN cabin)))))
    (. .)))

det(answer-2, The-1)
nsubj(propitious-4, answer-2)
cop(propitious-4, was-3)
root(ROOT-0, propitious-4)
det(steward-8, the-7)
nsubj(appeared-10, steward-8)
advmod(appeared-10, soon-9)
conj_and(propitious-4, appeared-10)
det(breakfast-13, the-12)
prep_with(appeared-10, breakfast-13)
det(ladies-16, the-15)
poss(cabin-18, ladies-16)
prep_in(appeared-10, cabin-18)

(ROOT
  (S
    (NP (`` ``)
      (NP (NNP Well) (, ,) (NNP Maddox))
      (, ,) ('' ''))
    (VP (VBD said)
      (NP
        (NP (NNP Cecilia))
        (, ,) (`` ``)
        (SBARQ
          (WHADVP (WRB how))
          (SQ (VBP do)
            (NP (PRP you))
            (VP (VB get)
              (PRT (RP on))
              (PP (IN with)
                (NP (PRP$ your) (JJ new) (NN master)))))
          (. ?))
        ('' '')))))

nn(Maddox-4, Well-2)
nsubj(said-7, Maddox-4)
root(ROOT-0, said-7)
dobj(said-7, Cecilia-8)
advmod(get-14, how-11)
aux(get-14, do-12)
nsubj(get-14, you-13)
dep(Cecilia-8, get-14)
prt(get-14, on-15)
poss(master-19, your-17)
amod(master-19, new-18)
prep_with(get-14, master-19)

(ROOT
  (S
    (NP (DT The) (NN steward))
    (VP (VBD looked)
      (PP (IN at)
        (NP (DT the) (NN door)))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB see)
            (SBAR
              (S
                (SBAR (IN if)
                  (S
                    (NP (PRP it))
                    (VP
                      (VP (VBD was)
                        (ADJP (JJ closed)))
                      (, ,)
                      (VP (VBD shook)
                        (NP (PRP$ his) (NN head)))
                      (, ,)
                      (CC and)
                      (ADVP (RB then))
                      (VP (VBD said)))))
                (, ,)
                (PP (IN with)
                  (NP
                    (NP (DT a) (NN look))
                    (PP (IN of)
                      (NP (NN despair)))))
                (, ,) (`` ``)
                (S
                  (NP (PRP He))
                  (VP (VBZ has)
                    (VP (VBN ordered)
                      (NP
                        (NP (DT a) (NN haunch))
                        (PP (IN of)
                          (NP (NN venison))))
                      (PP (IN for)
                        (NP (NN dinner)))
                      (, ,)
                      (S
                        (VP (VB miss))))))
                (, ,)
                (CC and)
                (S
                  (NP (PRP he))
                  (VP (VBZ has)
                    (ADVP (RB twice))
                    (VP (VBN threatened)
                      (S
                        (VP (TO to)
                          (VP (VB toss)
                            (NP (PRP me))
                            (ADVP (RB overboard))))))))))))))
    (. .) ('' '')))

det(steward-2, The-1)
nsubj(looked-3, steward-2)
nsubj(see-9, steward-2)
root(ROOT-0, looked-3)
det(door-6, the-5)
prep_at(looked-3, door-6)
aux(see-9, to-8)
xcomp(looked-3, see-9)
mark(closed-13, if-10)
nsubj(closed-13, it-11)
nsubj(shook-15, it-11)
nsubj(said-21, it-11)
cop(closed-13, was-12)
advcl(ordered-32, closed-13)
conj_and(closed-13, shook-15)
advcl(ordered-32, shook-15)
poss(head-17, his-16)
dobj(shook-15, head-17)
advmod(said-21, then-20)
conj_and(closed-13, said-21)
advcl(ordered-32, said-21)
det(look-25, a-24)
prep_with(ordered-32, look-25)
prep_of(look-25, despair-27)
nsubj(ordered-32, He-30)
aux(ordered-32, has-31)
dep(see-9, ordered-32)
det(haunch-34, a-33)
dobj(ordered-32, haunch-34)
prep_of(haunch-34, venison-36)
prep_for(ordered-32, dinner-38)
dep(ordered-32, miss-40)
nsubj(threatened-46, he-43)
nsubj(toss-48, he-43)
aux(threatened-46, has-44)
advmod(threatened-46, twice-45)
dep(see-9, threatened-46)
conj_and(ordered-32, threatened-46)
aux(toss-48, to-47)
xcomp(threatened-46, toss-48)
dobj(toss-48, me-49)
advmod(toss-48, overboard-50)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD must)
        (VP (VB obey)
          (NP
            (NP (PRP him))
            (, ,)
            (NP (NNP Maddox))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP he))
      (ADVP (RB certainly))
      (VP (MD will)))
    (. .)))

nsubj(obey-4, You-2)
aux(obey-4, must-3)
root(ROOT-0, obey-4)
dobj(obey-4, him-5)
appos(him-5, Maddox-7)
nsubj(will-12, he-10)
advmod(will-12, certainly-11)
conj_or(obey-4, will-12)

(ROOT
  (S
    (NP (DT These) (NNS pirates))
    (VP (VBP are)
      (NP (JJ dreadful) (NNS fellows)))
    (. .)))

det(pirates-2, These-1)
nsubj(fellows-5, pirates-2)
cop(fellows-5, are-3)
amod(fellows-5, dreadful-4)
root(ROOT-0, fellows-5)

(ROOT
  (S
    (VP
      (VP (VB Be)
        (ADJP (JJ attentive)))
      (, ,)
      (CC and)
      (VP (VB serve)
        (NP (PRP him))
        (ADVP
          (ADVP (RB just) (RB as))
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBD was)
                (NP (PRP$ my) (NN father))))))))
    (. .) ('' '')))

cop(attentive-2, Be-1)
root(ROOT-0, attentive-2)
conj_and(attentive-2, serve-5)
dobj(serve-5, him-6)
advmod(as-8, just-7)
advmod(serve-5, as-8)
mark(father-13, if-9)
nsubj(father-13, he-10)
cop(father-13, was-11)
poss(father-13, my-12)
advcl(as-8, father-13)

(ROOT
  (S (`` ``)
    (S
      (S
        (INTJ (UH Yes) (, ,) (UH yes))
        (, ,)
        (VP (VB ma'am)))
      (, ,)
      (NP (PRP I))
      (VP (MD will)))
    (: ;)
    (CC but)
    (S
      (NP (PRP$ our) (NN time))
      (VP (MD may)
        (VP (VB come))))
    (. .)))

discourse(ma'am-6, Yes-2)
dep(Yes-2, yes-4)
ccomp(will-9, ma'am-6)
nsubj(will-9, I-8)
root(ROOT-0, will-9)
poss(time-13, our-12)
nsubj(come-15, time-13)
aux(come-15, may-14)
conj_but(will-9, come-15)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (JJ _) (NN burglary) (NNS _))
          (PP (IN on)
            (NP (DT the) (JJ high) (NNS seas))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB go)
          (NP (JJ fifty) (NNS miles))
          (S
            (VP (TO to)
              (VP (VB see)
                (S
                  (NP (PRP him))
                  (VP (VBN hanged)))))))))
    (. .) ('' '')))

nsubj(_-5, It-1)
cop(_-5, 's-2)
amod(_-5, _-3)
nn(_-5, burglary-4)
root(ROOT-0, _-5)
det(seas-9, the-7)
amod(seas-9, high-8)
prep_on(_-5, seas-9)
nsubj(go-14, I-12)
aux(go-14, 'll-13)
conj_and(_-5, go-14)
amod(miles-16, fifty-15)
dobj(go-14, miles-16)
aux(see-18, to-17)
vmod(go-14, see-18)
nsubj(hanged-20, him-19)
dep(see-18, hanged-20)

(ROOT
  (S (`` ``)
    (VP (VB Steward))
    (. !) ('' '')))

root(ROOT-0, Steward-2)

(ROOT
  (S
    (VP (VBN cried)
      (NP (NNP Pickersgill))
      (, ,)
      (PP (IN from)
        (NP (DT the) (NN cabin))))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Pickersgill-2)
det(cabin-6, the-5)
prep_from(cried-1, cabin-6)

(ROOT
  (S (`` ``)
    (NP (NNP O))
    (VP (VBZ Lord))
    (. !)))

nsubj(Lord-3, O-2)
root(ROOT-0, Lord-3)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD ca) (RB n't)
        (VP (VB have)
          (VP (VBN heard)
            (NP (PRP me))))))
    (: --)
    (S
      (NP (NN d'ye))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD did) (, ,)
              (S
                (VP (VB miss))))))))
    (. ?) ('' '')))

nsubj(heard-5, He-1)
aux(heard-5, ca-2)
neg(heard-5, n't-3)
aux(heard-5, have-4)
root(ROOT-0, heard-5)
dobj(heard-5, me-6)
nsubj(think-9, d'ye-8)
parataxis(heard-5, think-9)
nsubj(did-11, he-10)
ccomp(think-9, did-11)
ccomp(did-11, miss-13)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (DT The) (NNS partitions))
        (VP (VBP are)
          (ADJP (RB very) (JJ thin))))
      (, ,)
      (CC and)
      (S
        (NP (PRP you))
        (VP (VBD spoke)
          (ADJP (RB very) (JJ loud)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mrs) (NNP Lascelles))
    (: :) (`` ``)
    (S
      (ADVP (IN at))
      (NP (DT all))
      (VP (VBP events) (, ,) (VBP go)
        (PP (TO to)
          (NP (PRP him)))
        (ADVP (RB quickly))))
    (. .) ('' '')))

det(partitions-3, The-2)
nsubj(thin-6, partitions-3)
cop(thin-6, are-4)
advmod(thin-6, very-5)
ccomp(said-15, thin-6)
nsubj(spoke-10, you-9)
conj_and(thin-6, spoke-10)
ccomp(said-15, spoke-10)
advmod(loud-12, very-11)
acomp(spoke-10, loud-12)
root(ROOT-0, said-15)
nn(Lascelles-17, Mrs-16)
nsubj(said-15, Lascelles-17)
advmod(events-22, at-20)
nsubj(events-22, all-21)
dep(said-15, events-22)
dep(events-22, go-24)
prep_to(events-22, him-26)
advmod(events-22, quickly-27)

(ROOT
  (SINV (`` ``)
    (S
      (NP
        (NP (JJ Good) (NN bye))
        (, ,)
        (NP
          (NP (NNP miss))
          (: ;)
          (NP (JJ good) (NN bye)))
        (, ,))
      (VP (VBP ma'am) (: ;)
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (MD should) (RB n't)
              (VP (VB see)
                (NP (PRP you))
                (ADVP (DT any) (RBR more))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Maddox))
    (, ,)
    (S
      (VP (VBG trembling)
        (PP (IN with)
          (NP (NN fear)))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD obeyed)
              (NP (DT the) (JJ awful) (NNS summons)))))
        (: --)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD was)
              (S
                (VP (TO to)
                  (VP (VB demand)
                    (NP (DT a) (NN tooth-pick))))))))))
    (. .)))

amod(bye-3, Good-2)
nsubj(ma'am-10, bye-3)
appos(bye-3, miss-5)
amod(bye-8, good-7)
dep(miss-5, bye-8)
ccomp(said-22, ma'am-10)
mark(see-16, if-12)
nsubj(see-16, I-13)
aux(see-16, should-14)
neg(see-16, n't-15)
advcl(ma'am-10, see-16)
parataxis(ma'am-10, see-16)
dobj(see-16, you-17)
dep(more-19, any-18)
advmod(see-16, more-19)
root(ROOT-0, said-22)
nsubj(said-22, Maddox-23)
vmod(said-22, trembling-25)
prep_with(trembling-25, fear-27)
mark(obeyed-31, as-29)
nsubj(obeyed-31, he-30)
advcl(trembling-25, obeyed-31)
det(summons-34, the-32)
amod(summons-34, awful-33)
dobj(obeyed-31, summons-34)
nsubj(was-37, which-36)
nsubj(demand-39, which-36)
ccomp(trembling-25, was-37)
parataxis(trembling-25, was-37)
aux(demand-39, to-38)
xcomp(was-37, demand-39)
det(tooth-pick-41, a-40)
dobj(demand-39, tooth-pick-41)

(ROOT
  (S
    (NP (NNP Miss) (NNP Ossulton))
    (VP (MD would) (RB not)
      (VP (VB touch)
        (NP
          (NP (DT the) (NN breakfast))
          (: ;)
          (NP
            (ADVP (RB not) (RB so)
              (NP
                (NP (NNP Mrs) (NNP Lascelles))
                (CC and)
                (NP (NNP Cecilia))))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD ate)
                  (ADJP (RB very) (JJ heartily)))))))))
    (. .)))

nn(Ossulton-2, Miss-1)
nsubj(touch-5, Ossulton-2)
aux(touch-5, would-3)
neg(touch-5, not-4)
root(ROOT-0, touch-5)
det(breakfast-7, the-6)
dobj(touch-5, breakfast-7)
dep(so-10, not-9)
dep(breakfast-7, so-10)
nn(Lascelles-12, Mrs-11)
pobj(so-10, Lascelles-12)
pobj(so-10, Cecilia-14)
conj_and(Lascelles-12, Cecilia-14)
nsubj(ate-17, who-16)
dep(so-10, ate-17)
advmod(heartily-19, very-18)
acomp(ate-17, heartily-19)

(ROOT
  (S
    (S
      (SINV (`` ``)
        (S
          (NP (PRP It))
          (VP (VBZ 's)
            (ADJP (RB very) (JJ dull))
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN shut)
                    (PRT (RP up))
                    (PP (IN in)
                      (NP (DT this) (NN cabin)))))))))
        (, ,) ('' '')
        (VP (VBD said))
        (NP (NNP Mrs) (NNP Lascelles)))
      (: ;)
      (FRAG
        (VP (`` ``) (VB come) (, ,)
          (NP (NNP Cecilia)))))
    (, ,)
    (NP (NNP let) (POS 's))
    (VP (VBP go)
      (PP (IN on)
        (NP (NN deck))))
    (. .) ('' '')))

nsubj(dull-5, It-2)
nsubjpass(shut-8, It-2)
cop(dull-5, 's-3)
advmod(dull-5, very-4)
ccomp(said-15, dull-5)
aux(shut-8, to-6)
auxpass(shut-8, be-7)
xcomp(dull-5, shut-8)
prt(shut-8, up-9)
det(cabin-12, this-11)
prep_in(shut-8, cabin-12)
dep(come-20, said-15)
nn(Lascelles-17, Mrs-16)
nsubj(said-15, Lascelles-17)
ccomp(go-26, come-20)
dobj(come-20, Cecilia-22)
nsubj(go-26, let-24)
possessive(let-24, 's-25)
root(ROOT-0, go-26)
prep_on(go-26, deck-28)

(ROOT
  (S (`` ``)
    (CC And)
    (VP (VBP leave)
      (NP (PRP me)))
    (. !) ('' '')))

cc(leave-3, And-2)
root(ROOT-0, leave-3)
dobj(leave-3, me-4)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Miss) (NNP Ossulton)))
    (. .)))

root(ROOT-0, cried-1)
nn(Ossulton-3, Miss-2)
dobj(cried-1, Ossulton-3)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADJP (JJ Phoebe))
        (ADVP (RB here))
        (, ,)
        (NP (NN aunt))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBP are)
        (VP (VBG going)
          (PRT (RP up))
          (S
            (VP (TO to)
              (VP (VB persuade)
                (S
                  (NP (DT the) (NNS pirates))
                  (VP (TO to)
                    (VP (VB put)
                      (NP (PRP us))
                      (PP (DT all) (IN on)
                        (NP (NN shore))))))))))))
    (. .) ('' '')))

expl(is-3, There-2)
root(ROOT-0, is-3)
acomp(is-3, Phoebe-4)
advmod(is-3, here-5)
nsubj(is-3, aunt-7)
nsubj(going-11, we-9)
nsubj(persuade-14, we-9)
aux(going-11, are-10)
parataxis(is-3, going-11)
prt(going-11, up-12)
aux(persuade-14, to-13)
xcomp(going-11, persuade-14)
det(pirates-16, the-15)
dobj(persuade-14, pirates-16)
nsubj(put-18, pirates-16)
aux(put-18, to-17)
xcomp(persuade-14, put-18)
dobj(put-18, us-19)
dep(put-18, all-20)
prep_on(put-18, shore-22)

(ROOT
  (S
    (NP (NNP Mrs) (NNP Lascelles)
      (CC and)
      (NNP Cecilia))
    (VP
      (VP (VBD put)
        (PP (IN on)
          (NP (PRP$ their) (NNS bonnets))))
      (CC and)
      (VP (VBD went)
        (PRT (RP up))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(put-5, Lascelles-2)
nsubj(went-10, Lascelles-2)
conj_and(Lascelles-2, Cecilia-4)
nsubj(put-5, Cecilia-4)
root(ROOT-0, put-5)
poss(bonnets-8, their-7)
prep_on(put-5, bonnets-8)
conj_and(put-5, went-10)
prt(went-10, up-11)

(ROOT
  (NP
    (NP (NNP Lord) (NNP B))
    (: --)
    (S
      (S
        (VP (VBD took)
          (PRT (RP off))
          (NP (PRP$ his) (NN hat))))
      (, ,)
      (CC and)
      (S
        (VP (VBN begged)
          (NP
            (NP (DT the) (NN honour))
            (PP (IN of)
              (S
                (VP (VBG being)
                  (VP (VBN introduced)
                    (PP (TO to)
                      (NP (DT the) (JJ pretty) (NN widow)))))))))))
    (. .)))

nn(B-2, Lord-1)
root(ROOT-0, B-2)
dep(B-2, took-4)
prt(took-4, off-5)
poss(hat-7, his-6)
dobj(took-4, hat-7)
dep(B-2, begged-10)
conj_and(took-4, begged-10)
det(honour-12, the-11)
dobj(begged-10, honour-12)
auxpass(introduced-15, being-14)
prepc_of(honour-12, introduced-15)
det(widow-19, the-17)
amod(widow-19, pretty-18)
prep_to(introduced-15, widow-19)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD handed)
        (NP (DT the) (NNS ladies))
        (PP (TO to)
          (NP (DT a) (NN seat))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB then))
        (VBD commenced)
        (S
          (VP (VBG conversing)
            (PP (IN upon)
              (NP
                (NP (JJ various) (NNS subjects))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (PP (IN at)
                      (NP (DT the) (JJ same) (NN time)))
                    (VP (VBD possessed)
                      (NP (JJ great) (NN novelty)))))))))))
    (. .)))

nsubj(handed-2, He-1)
nsubj(commenced-11, He-1)
root(ROOT-0, handed-2)
det(ladies-4, the-3)
dobj(handed-2, ladies-4)
det(seat-7, a-6)
prep_to(handed-2, seat-7)
advmod(commenced-11, then-10)
conj_and(handed-2, commenced-11)
xcomp(commenced-11, conversing-12)
amod(subjects-15, various-14)
prep_upon(conversing-12, subjects-15)
nsubj(possessed-22, subjects-15)
det(time-21, the-19)
amod(time-21, same-20)
prep_at(possessed-22, time-21)
rcmod(subjects-15, possessed-22)
amod(novelty-24, great-23)
dobj(possessed-22, novelty-24)

(ROOT
  (S
    (NP (PRP$ His) (NN lordship))
    (VP
      (VP (VBD talked)
        (PP (IN about)
          (NP (NNP France))))
      (, ,)
      (CC and)
      (VP (VBD described)
        (NP (PRP$ its) (NNS ports)))
      (: ;)
      (VP (VBD told)
        (ADVP (RB now)
          (CC and)
          (RB then))
        (NP (DT a) (JJ good) (NN anecdote)))
      (: ;)
      (VP (VBN pointed)
        (PRT (RP out))
        (NP
          (NP (DT the) (JJ different) (NNS headlands))
          (, ,)
          (NP (NNS bays))
          (, ,)
          (NP (NNS towns))
          (, ,)
          (CC and)
          (NP (NNS villages)))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP they))
            (VP (VBD were)
              (VP (VBG passing)
                (ADVP (RB rapidly)))))))
      (, ,)
      (CC and)
      (ADVP (RB always))
      (VP (VBD had)
        (NP
          (NP (DT some) (JJ little) (NN story))
          (VP (VBN connected)
            (PP (IN with)
              (NP (DT each)))))))
    (. .)))

poss(lordship-2, His-1)
nsubj(talked-3, lordship-2)
nsubj(described-8, lordship-2)
nsubj(told-12, lordship-2)
nsubj(pointed-20, lordship-2)
nsubj(had-41, lordship-2)
root(ROOT-0, talked-3)
prep_about(talked-3, France-5)
conj_and(talked-3, described-8)
poss(ports-10, its-9)
dobj(described-8, ports-10)
conj_and(talked-3, told-12)
advmod(told-12, now-13)
advmod(told-12, then-15)
conj_and(now-13, then-15)
det(anecdote-18, a-16)
amod(anecdote-18, good-17)
dobj(told-12, anecdote-18)
conj_and(talked-3, pointed-20)
prt(pointed-20, out-21)
det(headlands-24, the-22)
amod(headlands-24, different-23)
dobj(pointed-20, headlands-24)
dobj(pointed-20, bays-26)
conj_and(headlands-24, bays-26)
dobj(pointed-20, towns-28)
conj_and(headlands-24, towns-28)
dobj(pointed-20, villages-31)
conj_and(headlands-24, villages-31)
dobj(passing-36, which-33)
nsubj(passing-36, they-34)
aux(passing-36, were-35)
dep(pointed-20, passing-36)
advmod(passing-36, rapidly-37)
advmod(had-41, always-40)
conj_and(talked-3, had-41)
det(story-44, some-42)
amod(story-44, little-43)
dobj(had-41, story-44)
vmod(story-44, connected-45)
prep_with(connected-45, each-47)

(ROOT
  (S
    (S
      (S
        (SBAR (IN Before)
          (S
            (NP (DT the) (NNS ladies))
            (VP (VBD had)
              (VP (VBN been)
                (NP
                  (NP (CD two) (NNS hours))
                  (PP (IN on)
                    (NP (NN deck))))))))
        (NP (PRP they))
        (VP (VBD found)
          (NP (PRP themselves))
          (, ,)
          (PP (TO to)
            (NP (PRP$ their) (JJ infinite) (NN surprise)))))
      (, ,) (RB not)
      (S
        (ADVP (RB only))
        (ADJP (JJ interested))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP
          (NP (NN conversation))
          (PP (IN with)
            (NP
              (NP
                (NP (DT the) (NN captain))
                (PP (IN of)
                  (NP (DT the) (NN smuggler))))
              (, ,)
              (CC and)
              (NP
                (QP (JJR more) (IN than) (RB once)))))))
      (NP (PRP they))
      (VP (VBD laughed)
        (ADVP (RB outright))))
    (. .)))

mark(hours-7, Before-1)
det(ladies-3, the-2)
nsubj(hours-7, ladies-3)
aux(hours-7, had-4)
cop(hours-7, been-5)
num(hours-7, two-6)
advcl(found-11, hours-7)
prep_on(hours-7, deck-9)
nsubj(found-11, they-10)
root(ROOT-0, found-11)
dobj(found-11, themselves-12)
poss(surprise-17, their-15)
amod(surprise-17, infinite-16)
prep_to(found-11, surprise-17)
neg(interested-21, not-19)
advmod(interested-21, only-20)
parataxis(found-11, interested-21)
prep_in(laughed-38, conversation-25)
det(captain-28, the-27)
prep_with(conversation-25, captain-28)
det(smuggler-31, the-30)
prep_of(captain-28, smuggler-31)
quantmod(than-35, more-34)
prep_with(conversation-25, than-35)
conj_and(captain-28, than-35)
quantmod(than-35, once-36)
nsubj(laughed-38, they-37)
conj_but(found-11, laughed-38)
advmod(laughed-38, outright-39)

(ROOT
  (S (CC But)
    (S
      (NP
        (NP (DT the) (JJ _) (NN soi-disant))
        (NP (NNP _) (NNP Lord) (NNP B)))
      (: --)
      (VP (VBD had)
        (VP (VBN inspired)
          (NP (PRP them))
          (PP (IN with)
            (NP (NN confidence))))))
    (: ;)
    (S
      (NP (PRP they))
      (ADVP (RB fully))
      (VP (VBD believed)
        (SBAR
          (SBAR (IN that)
            (S
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN told)))))
              (NP (PRP them))
              (VP (VBD was)
                (ADJP (JJ true)))))
          (, ,)
          (CC and)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN taken)
                  (NP
                    (NP (NN possession))
                    (PP (IN of)
                      (NP (DT the) (NN yacht)
                        (S
                          (VP (TO to)
                            (VP (VB smuggle)
                              (NP (PRP$ his) (NNS goods))))))))
                  (, ,)
                  (S
                    (VP
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN revenged))))
                      (, ,)
                      (CC and)
                      (VP (TO to)
                        (VP (VB have)
                          (NP (DT a) (NN laugh)))))))))))))
    (. .)))

cc(inspired-10, But-1)
det(soi-disant-4, the-2)
amod(soi-disant-4, _-3)
nsubj(inspired-10, soi-disant-4)
nn(B-7, _-5)
nn(B-7, Lord-6)
dep(soi-disant-4, B-7)
aux(inspired-10, had-9)
root(ROOT-0, inspired-10)
dobj(inspired-10, them-11)
prep_with(inspired-10, confidence-13)
nsubj(believed-17, they-15)
advmod(believed-17, fully-16)
parataxis(inspired-10, believed-17)
mark(true-25, that-18)
dobj(told-22, what-19)
nsubj(told-22, he-20)
aux(told-22, had-21)
advcl(true-25, told-22)
nsubj(true-25, them-23)
cop(true-25, was-24)
ccomp(believed-17, true-25)
mark(taken-31, that-28)
nsubj(taken-31, he-29)
aux(taken-31, had-30)
ccomp(believed-17, taken-31)
conj_and(true-25, taken-31)
dobj(taken-31, possession-32)
det(yacht-35, the-34)
prep_of(possession-32, yacht-35)
aux(smuggle-37, to-36)
vmod(yacht-35, smuggle-37)
poss(goods-39, his-38)
dobj(smuggle-37, goods-39)
aux(revenged-43, to-41)
auxpass(revenged-43, be-42)
dep(taken-31, revenged-43)
aux(have-47, to-46)
dep(taken-31, have-47)
conj_and(revenged-43, have-47)
det(laugh-49, a-48)
dobj(have-47, laugh-49)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Now))
        (NP
          (NP (NN none))
          (PP (IN of)
            (NP (DT these) (CD three) (NNS offences))))
        (VP (VBP are)
          (NP
            (NP (NN capital))
            (PP (IN in)
              (NP
                (NP (DT the) (NNS eyes))
                (PP (IN of)
                  (NP (DT the) (JJ fair) (NN sex))))))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Jack))
        (VP (VBD was)
          (NP
            (NP (DT a) (JJ handsome) (, ,) (JJ fine-looking) (NN fellow))
            (, ,)
            (PP (IN of)
              (NP
                (NP (JJ excellent) (NNS manners))
                (CC and)
                (NP
                  (ADJP (RB very) (JJ agreeable))
                  (NN conversation))))))))
    (: ;)
    (S
      (PP (IN at)
        (NP (DT the) (JJ same) (NN time)))
      (, ,)
      (NP (CC neither)
        (NP (PRP he))
        (CC nor)
        (NP (PRP$ his) (NN friend)))
      (VP (VBD were)
        (PP (IN in)
          (NP (PRP$ their) (JJ general) (NN deportment)
            (CC and)
            (NN behaviour)))
        (ADJP
          (ADVP (RB otherwise))
          (SBAR (IN than)
            (FRAG
              (ADJP (RBS most) (JJ respectful)))))))
    (. .)))

advmod(capital-8, Now-1)
nsubj(capital-8, none-2)
det(offences-6, these-4)
num(offences-6, three-5)
prep_of(none-2, offences-6)
cop(capital-8, are-7)
root(ROOT-0, capital-8)
det(eyes-11, the-10)
prep_in(capital-8, eyes-11)
det(sex-15, the-13)
amod(sex-15, fair-14)
prep_of(eyes-11, sex-15)
nsubj(fellow-24, Jack-18)
cop(fellow-24, was-19)
det(fellow-24, a-20)
amod(fellow-24, handsome-21)
amod(fellow-24, fine-looking-23)
conj_and(capital-8, fellow-24)
amod(manners-28, excellent-27)
prep_of(fellow-24, manners-28)
advmod(agreeable-31, very-30)
amod(conversation-32, agreeable-31)
prep_of(fellow-24, conversation-32)
conj_and(manners-28, conversation-32)
det(time-37, the-35)
amod(time-37, same-36)
prep_at(otherwise-51, time-37)
preconj(he-40, neither-39)
nsubj(otherwise-51, he-40)
poss(friend-43, his-42)
conj_nor(he-40, friend-43)
nsubj(otherwise-51, friend-43)
cop(otherwise-51, were-44)
poss(deportment-48, their-46)
amod(deportment-48, general-47)
prep_in(otherwise-51, deportment-48)
conj_and(deportment-48, behaviour-50)
prep_in(otherwise-51, behaviour-50)
parataxis(capital-8, otherwise-51)
mark(respectful-54, than-52)
advmod(respectful-54, most-53)
dep(otherwise-51, respectful-54)

(ROOT
  (S (`` ``)
    (NP (NNP Ladies))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP you))
        (VP (VBP are) (RB not)
          (ADJP (JJ afraid)
            (PP (IN of)
              (NP
                (NP (PRP me))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (NP (DT a) (JJR greater) (NN happiness))
                      (SBAR (IN than)
                        (S
                          (NP (PRP I))
                          (VP (VBD had)
                            (NP (NN reason)
                              (S
                                (VP (TO to)
                                  (VP (VB expect)))))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD may)
            (VP (VB be)
              (ADJP (VBN amused)
                (S
                  (VP (TO to)
                    (VP (VB witness)
                      (NP
                        (NP (DT the) (NN fear))
                        (PP (IN of)
                          (NP
                            (NP (DT those))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBP accuse)
                                  (NP
                                    (NP (PRP$ your) (NN sex))
                                    (PP (IN of)
                                      (NP (NN cowardice)))))))))))))))))))
    (. .)))

nsubj(think-25, Ladies-2)
mark(afraid-8, as-4)
nsubj(afraid-8, you-5)
cop(afraid-8, are-6)
neg(afraid-8, not-7)
advcl(think-25, afraid-8)
prep_of(afraid-8, me-10)
nsubj(happiness-16, me-10)
cop(happiness-16, is-13)
det(happiness-16, a-14)
amod(happiness-16, greater-15)
rcmod(me-10, happiness-16)
mark(had-19, than-17)
nsubj(had-19, I-18)
advcl(happiness-16, had-19)
dobj(had-19, reason-20)
aux(expect-22, to-21)
vmod(reason-20, expect-22)
nsubj(think-25, I-24)
root(ROOT-0, think-25)
nsubjpass(amused-29, you-26)
nsubj(witness-31, you-26)
aux(amused-29, may-27)
auxpass(amused-29, be-28)
ccomp(think-25, amused-29)
aux(witness-31, to-30)
xcomp(amused-29, witness-31)
det(fear-33, the-32)
dobj(witness-31, fear-33)
prep_of(fear-33, those-35)
nsubj(accuse-37, those-35)
rcmod(those-35, accuse-37)
poss(sex-39, your-38)
dobj(accuse-37, sex-39)
prep_of(sex-39, cowardice-41)

(ROOT
  (S
    (PP (IN With)
      (NP (PRP$ your) (NN permission)))
    (, ,)
    (NP (PRP I))
    (VP
      (VP (MD will)
        (VP (VB send)
          (PP (IN for)
            (NP (DT the) (NN cook)))))
      (CC and)
      (VP (VBD steward))
      (, ,)
      (CC and)
      (VP (VBP inquire)
        (PP (IN about)
          (NP (DT the) (NN dinner)))))
    (. .) ('' '')))

poss(permission-3, your-2)
prep_with(send-7, permission-3)
nsubj(send-7, I-5)
nsubj(steward-12, I-5)
nsubj(inquire-15, I-5)
aux(send-7, will-6)
root(ROOT-0, send-7)
det(cook-10, the-9)
prep_for(send-7, cook-10)
conj_and(send-7, steward-12)
conj_and(send-7, inquire-15)
det(dinner-18, the-17)
prep_about(inquire-15, dinner-18)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB like)
          (S
            (VP (TO to)
              (VP (VB know)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (EX there))
                    (VP (VBZ is)
                      (PP (IN for)
                        (NP (NN dinner))))))))))))
    (, ,) ('' '')
    (VP (VBD observed)
      (NP
        (NP (NNP Mrs) (NNPS Lascelles) (NN demurely))
        (: ;) (`` ``)
        (SINV
          (VP (MD would) (RB n't))
          (NP
            (NP (PRP you))
            (, ,)
            (NP (NNP Cecilia))))))
    (. ?) ('' '')))

nsubj(like-4, I-2)
nsubj(know-6, I-2)
aux(like-4, should-3)
ccomp(observed-14, like-4)
aux(know-6, to-5)
xcomp(like-4, know-6)
dobj(is-9, what-7)
expl(is-9, there-8)
ccomp(know-6, is-9)
prep_for(is-9, dinner-11)
root(ROOT-0, observed-14)
nn(demurely-17, Mrs-15)
nn(demurely-17, Lascelles-16)
dobj(observed-14, demurely-17)
dep(demurely-17, would-20)
neg(would-20, n't-21)
nsubj(would-20, you-22)
appos(you-22, Cecilia-24)

(ROOT
  (S
    (NP (NNP Cecilia))
    (VP (VBD put)
      (NP (PRP$ her) (NN handkerchief))
      (PP (TO to)
        (NP (PRP$ her) (NN mouth))))
    (. .)))

nsubj(put-2, Cecilia-1)
root(ROOT-0, put-2)
poss(handkerchief-4, her-3)
dobj(put-2, handkerchief-4)
poss(mouth-7, her-6)
prep_to(put-2, mouth-7)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Tell)
        (S
          (NP
            (NP (DT the) (NN steward))
            (CC and)
            (NP (DT the) (NN cook)))
          (VP (DT both) (TO to)
            (VP (VB come)
              (NP (JJ aft))
              (ADVP (RB immediately)))))))
    (, ,) ('' '')
    (VP (VBD cried))
    (NP (NNP Pickersgill))
    (. .)))

ccomp(cried-15, Tell-2)
det(steward-4, the-3)
dobj(Tell-2, steward-4)
nsubj(come-10, steward-4)
det(cook-7, the-6)
dobj(Tell-2, cook-7)
conj_and(steward-4, cook-7)
nsubj(come-10, cook-7)
dep(come-10, both-8)
aux(come-10, to-9)
ccomp(Tell-2, come-10)
xcomp(Tell-2, come-10)
dobj(come-10, aft-11)
advmod(come-10, immediately-12)
root(ROOT-0, cried-15)
nsubj(cried-15, Pickersgill-16)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ few) (NNS seconds)))
    (NP (PRP they))
    (ADVP (DT both))
    (VP (VBD made)
      (NP (PRP$ their) (NN appearance)))
    (. .)))

det(seconds-4, a-2)
amod(seconds-4, few-3)
prep_in(made-7, seconds-4)
nsubj(made-7, they-5)
advmod(made-7, both-6)
root(ROOT-0, made-7)
poss(appearance-9, their-8)
dobj(made-7, appearance-9)

(ROOT
  (S (`` ``)
    (VP (VB Steward))
    (. !) ('' '')))

root(ROOT-0, Steward-2)

(ROOT
  (S
    (VP (VBN cried)
      (NP (NNP Pickersgill))
      (, ,)
      (PP (IN with)
        (NP (DT a) (JJ loud) (NN voice))))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Pickersgill-2)
det(voice-7, a-5)
amod(voice-7, loud-6)
prep_with(cried-1, voice-7)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Yes))
      (, ,)
      (NP (PRP$ my))
      (VP (VBD lord)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP
      (NP (NNP Maddox))
      (, ,)
      (PP (IN with)
        (NP
          (NP (PRP$ his) (NN hat))
          (PP (IN in)
            (NP (PRP$ his) (NN hand))))))
    (. .)))

advmod(lord-5, Yes-2)
nsubj(lord-5, my-4)
ccomp(replied-8, lord-5)
root(ROOT-0, replied-8)
nsubj(replied-8, Maddox-9)
poss(hat-13, his-12)
prep_with(Maddox-9, hat-13)
poss(hand-16, his-15)
prep_in(hat-13, hand-16)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WDT What) (NN wines))
    (SQ (VBP have)
      (NP (PRP you))
      (VP (VBN put)
        (PRT (RP out))
        (PP (IN for)
          (NP (NN dinner)))))
    (. ?) ('' '')))

det(wines-3, What-2)
dobj(put-6, wines-3)
aux(put-6, have-4)
nsubj(put-6, you-5)
root(ROOT-0, put-6)
prt(put-6, out-7)
prep_for(put-6, dinner-9)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP
          (NP
            (NP (NNP Champagne))
            (, ,)
            (NP (PRP$ my) (NN lord))
            (: ;))
          (CC and)
          (NP (NN claret)))
        (, ,)
        (NP (PRP$ my) (NN lord))
        (: ;)
        (CC and)
        (NP (NNP Madeira))))
    (CC and)
    (S
      (ADVP (RB sherry))
      (, ,)
      (NP (PRP$ my))
      (VP (VBD lord)))
    (. .) ('' '')))

root(ROOT-0, Champagne-2)
poss(lord-5, my-4)
appos(Champagne-2, lord-5)
conj_and(Champagne-2, claret-8)
poss(lord-11, my-10)
conj_and(Champagne-2, lord-11)
conj_and(Champagne-2, Madeira-14)
advmod(lord-19, sherry-16)
nsubj(lord-19, my-18)
conj_and(Champagne-2, lord-19)

(ROOT
  (FRAG (`` ``)
    (NP (DT No) (NNP Burgundy))
    (, ,)
    (NP (NN sir))
    (. ?) ('' '')))

neg(Burgundy-3, No-2)
root(ROOT-0, Burgundy-3)
dep(Burgundy-3, sir-5)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (NP (PRP$ my))
      (VP (VBD lord)))
    (: ;)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN Burgundy))
          (PP (IN on)
            (NP (NN board))))))
    (. .) ('' '')))

discourse(lord-5, No-2)
nsubj(lord-5, my-4)
root(ROOT-0, lord-5)
expl(is-8, there-7)
parataxis(lord-5, is-8)
neg(Burgundy-10, no-9)
nsubj(is-8, Burgundy-10)
prep_on(Burgundy-10, board-12)

(ROOT
  (FRAG (`` ``)
    (NP (DT No) (NNP Burgundy))
    (, ,)
    (NP (NN sir))
    (. !)))

neg(Burgundy-3, No-2)
root(ROOT-0, Burgundy-3)
dep(Burgundy-3, sir-5)

(ROOT
  (FRAG
    (S
      (VP (VBP Do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP dare)
              (S
                (VP (TO to)
                  (VP (VB tell)
                    (NP (PRP me))
                    (NP (DT that))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-1)
nsubj(dare-3, you-2)
nsubj(tell-5, you-2)
ccomp(Do-1, dare-3)
aux(tell-5, to-4)
xcomp(dare-3, tell-5)
iobj(tell-5, me-6)
dobj(tell-5, that-7)

(ROOT
  (SINV (`` ``)
    (S
      (PP (IN Upon)
        (NP (PRP$ my) (NN soul)))
      (, ,)
      (NP (PRP$ my))
      (VP (VBD lord)))
    (, ,) ('' '')
    (VP (VBD cried))
    (NP
      (NP (NNP Maddox))
      (, ,)
      (VP (VBG dropping)
        (PP (IN on)
          (NP (PRP$ his) (NNS knees)))))
    (, ,) (`` ``)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (ADJP (RB no) (JJ Burgundy)
          (PP (IN on)
            (NP (NN board))))
        (: --)
        (FRAG
          (VP (VB ask)
            (NP (DT the) (NNS ladies))))))
    (. .) ('' '')))

poss(soul-4, my-3)
prep_upon(lord-7, soul-4)
nsubj(lord-7, my-6)
ccomp(cried-10, lord-7)
root(ROOT-0, cried-10)
nsubj(cried-10, Maddox-11)
vmod(Maddox-11, dropping-13)
poss(knees-16, his-15)
prep_on(dropping-13, knees-16)
expl(is-20, there-19)
dep(cried-10, is-20)
neg(Burgundy-22, no-21)
acomp(is-20, Burgundy-22)
prep_on(Burgundy-22, board-24)
dep(is-20, ask-26)
det(ladies-28, the-27)
dobj(ask-26, ladies-28)

(ROOT
  (S (`` ``)
    (ADVP
      (NP (NNP Very))
      (RB well))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (PRP you))
    (VP (MD may)
      (VP (VB go)))
    (. .) ('' '')))

dep(well-3, Very-2)
advmod(go-9, well-3)
advmod(go-9, sir-5)
nsubj(go-9, you-7)
aux(go-9, may-8)
root(ROOT-0, go-9)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Cook))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBP have)
            (S
              (NP (PRP you))
              (VP (VBN got)
                (PP (IN for)
                  (NP (NN dinner)))))))))
    (. ?) ('' '')))

root(ROOT-0, Cook-2)
nsubj(have-5, Cook-2)
rcmod(Cook-2, have-5)
nsubj(got-7, you-6)
ccomp(have-5, got-7)
prep_for(got-7, dinner-9)

(ROOT
  (SINV (`` ``)
    (NP
      (NP (NNP Sir))
      (, ,)
      (NP
        (NP (DT a) (NN haunch))
        (PP (IN of)
          (NP (NN mut)))
        (: --)
        (PP (IN of)
          (NP
            (NP (NN venison))
            (, ,)
            (NP (PRP$ my) (NN lord))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP
      (NP (DT the) (NN cook))
      (, ,)
      (PP (IN with)
        (NP
          (NP (PRP$ his) (JJ white) (NN night-cap))
          (PP (IN in)
            (NP (PRP$ his) (NN hand))))))
    (. .)))

dep(replied-16, Sir-2)
det(haunch-5, a-4)
appos(Sir-2, haunch-5)
prep_of(haunch-5, mut-7)
prep_of(haunch-5, venison-10)
poss(lord-13, my-12)
appos(venison-10, lord-13)
root(ROOT-0, replied-16)
det(cook-18, the-17)
nsubj(replied-16, cook-18)
poss(night-cap-23, his-21)
amod(night-cap-23, white-22)
prep_with(cook-18, night-cap-23)
poss(hand-26, his-25)
prep_in(night-cap-23, hand-26)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBD else) (, ,)
        (NP (NN sirrah))))
    (. ?) ('' '')))

nsubj(else-3, What-2)
root(ROOT-0, else-3)
dobj(else-3, sirrah-5)

(ROOT
  (S (`` ``)
    (NP (DT A) (JJ boiled) (NN calf))
    (VP (VBZ 's)
      (NP
        (NP (NN head))
        (, ,)
        (NP (PRP$ my) (NN lord))))
    (. .) ('' '')))

det(calf-4, A-2)
amod(calf-4, boiled-3)
nsubj(head-6, calf-4)
cop(head-6, 's-5)
root(ROOT-0, head-6)
poss(lord-9, my-8)
appos(head-6, lord-9)

(ROOT
  (S (`` ``)
    (NP (DT A) (JJ boiled) (NN calf))
    (VP (VBZ 's)
      (NP (NN head)))
    (. !)))

det(calf-4, A-2)
amod(calf-4, boiled-3)
nsubj(head-6, calf-4)
cop(head-6, 's-5)
root(ROOT-0, head-6)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (PRP it))
          (VP (VB be)
            (ADJP (JJ roasted))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB roast)
          (NP (PRP you))
          (, ,)
          (ADVP (RB sir)))))
    (. !) ('' '')))

root(ROOT-0, Let-1)
nsubj(roasted-4, it-2)
cop(roasted-4, be-3)
ccomp(Let-1, roasted-4)
nsubj(roast-9, I-7)
aux(roast-9, 'll-8)
conj_or(Let-1, roast-9)
dobj(roast-9, you-10)
advmod(roast-9, sir-12)

(ROOT
  (S
    (VP (VBN cried)
      (NP (NNP Pickersgill))
      (, ,)
      (PP (IN in)
        (NP (DT an) (JJ angry) (NN tone))))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Pickersgill-2)
det(tone-7, an-5)
amod(tone-7, angry-6)
prep_in(cried-1, tone-7)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP$ my))
      (VP (VBD lord)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB roast)
          (NP (PRP it)))))
    (. .) ('' '')))

discourse(lord-5, Yes-2)
nsubj(lord-5, my-4)
root(ROOT-0, lord-5)
nsubj(roast-9, I-7)
aux(roast-9, 'll-8)
parataxis(lord-5, roast-9)
dobj(roast-9, it-10)

(ROOT
  (S (`` ``)
    (CC And)
    (SBAR
      (WHNP (WP what))
      (S
        (VP (VBZ else))))
    (, ,)
    (VP (VBP sir))
    (. ?) ('' '')))

cc(sir-6, And-2)
nsubj(else-4, what-3)
dep(sir-6, else-4)
root(ROOT-0, sir-6)

(ROOT
  (FRAG (`` ``)
    (NP (JJ Maintenon) (NNS cutlets))
    (, ,)
    (NP (PRP$ my) (NN lord))
    (. .) ('' '')))

amod(cutlets-3, Maintenon-2)
root(ROOT-0, cutlets-3)
poss(lord-6, my-5)
dep(cutlets-3, lord-6)

(ROOT
  (S (`` ``)
    (NP (NNP Maintenon))
    (VP (VBZ cutlets))
    (. !)))

nsubj(cutlets-3, Maintenon-2)
root(ROOT-0, cutlets-3)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP hate)
        (NP (PRP them))))
    (: --)
    (S
      (NP (PRP I))
      (VP (MD wo) (RB n't)
        (VP (VB have)
          (NP (PRP them))
          (, ,)
          (ADVP (RB sir)))))
    (. .)))

nsubj(hate-2, I-1)
root(ROOT-0, hate-2)
dobj(hate-2, them-3)
nsubj(have-8, I-5)
aux(have-8, wo-6)
neg(have-8, n't-7)
parataxis(hate-2, have-8)
dobj(have-8, them-9)
advmod(have-8, sir-11)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP them))
        (VP (VB be)
          (VP (VBN dressed)
            (S
              (VP (VBG _)
                (NP (DT a) (JJ l'ombre) (NNP Chinoise) (NNP _))))))))
    (. .) ('' '')))

root(ROOT-0, Let-1)
nsubjpass(dressed-4, them-2)
auxpass(dressed-4, be-3)
ccomp(Let-1, dressed-4)
xcomp(dressed-4, _-5)
det(_-9, a-6)
amod(_-9, l'ombre-7)
nn(_-9, Chinoise-8)
dobj(_-5, _-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT that))
            (VP (VBZ is) (, ,)
              (NP (PRP$ my) (NN lord)))))))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
dobj(lord-11, what-6)
nsubj(lord-11, that-7)
cop(lord-11, is-8)
poss(lord-11, my-10)
ccomp(know-5, lord-11)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB care)
          (PP (IN for)
            (NP
              (NP (DT that))
              (, ,)
              (NP (NN sirrah)))))))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB find)
              (PRT (RP out))
              (PP (IN by)
                (NP (NN dinner-time)))))))
      (, ,)
      (NP (PRP you))
      (VP (VBP 're)
        (NP
          (NP (NN food))
          (PP (IN for)
            (NP
              (NP (NNS fishes))
              (: --)
              (SBAR (IN that)
                (S
                  (NP (DT all))
                  (: ;)
                  (NP (PRP you))
                  (VP (MD may)
                    (VP (VB go))))))))))
    (. .) ('' '')))

nsubj(care-5, I-2)
aux(care-5, do-3)
neg(care-5, n't-4)
root(ROOT-0, care-5)
prep_for(care-5, that-7)
appos(that-7, sirrah-9)
mark(find-15, if-11)
nsubj(find-15, you-12)
aux(find-15, do-13)
neg(find-15, n't-14)
advcl(food-22, find-15)
prt(find-15, out-16)
prep_by(find-15, dinner-time-18)
nsubj(food-22, you-20)
cop(food-22, 're-21)
parataxis(care-5, food-22)
prep_for(food-22, fishes-24)
mark(go-31, that-26)
nsubj(go-31, all-27)
nsubj(go-31, you-29)
aux(go-31, may-30)
dep(fishes-24, go-31)

(ROOT
  (S
    (NP (DT The) (NN cook))
    (VP
      (VP (VBD walked)
        (PRT (RP off))
        (S
          (VP (VBG wringing)
            (NP
              (NP (PRP$ his) (NNS hands))
              (CC and)
              (NP (PRP$ his) (NN night-cap)))
            (ADVP (RB as) (RB well)))))
      (PRN (: --)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (ADVP (RB still))
            (VP (VBD held)
              (NP (PRP it))
              (PP (IN in)
                (NP (PRP$ his) (JJ right) (NN hand))))))
        (: --))
      (CC and)
      (VP (VBD disappeared)
        (PRT (RP down))
        (NP (DT the) (NN fore-hatchway))))
    (. .)))

det(cook-2, The-1)
nsubj(walked-3, cook-2)
nsubj(disappeared-25, cook-2)
root(ROOT-0, walked-3)
prt(walked-3, off-4)
xcomp(walked-3, wringing-5)
poss(hands-7, his-6)
dobj(wringing-5, hands-7)
poss(night-cap-10, his-9)
dobj(wringing-5, night-cap-10)
conj_and(hands-7, night-cap-10)
advmod(well-12, as-11)
mwe(well-12, as-11)
advmod(wringing-5, well-12)
mark(held-17, for-14)
nsubj(held-17, he-15)
advmod(held-17, still-16)
parataxis(walked-3, held-17)
parataxis(disappeared-25, held-17)
dobj(held-17, it-18)
poss(hand-22, his-20)
amod(hand-22, right-21)
prep_in(held-17, hand-22)
conj_and(walked-3, disappeared-25)
prt(disappeared-25, down-26)
det(fore-hatchway-28, the-27)
dobj(disappeared-25, fore-hatchway-28)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN done)
          (S
            (NP (DT this))
            (VP (TO to)
              (VP (VB pay)
                (NP (PRP you))
                (NP (DT a) (JJ deserved) (NN compliment))
                (, ,)
                (NP (NNS ladies))))))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (NP (JJR more) (NN courage))
        (PP (IN than)
          (NP (DT the) (JJ other) (NN sex)))))
    (. .) ('' '')))

nsubj(done-4, I-2)
aux(done-4, have-3)
root(ROOT-0, done-4)
dobj(done-4, this-5)
nsubj(pay-7, this-5)
aux(pay-7, to-6)
xcomp(done-4, pay-7)
iobj(pay-7, you-8)
det(compliment-11, a-9)
amod(compliment-11, deserved-10)
dobj(pay-7, compliment-11)
dobj(pay-7, ladies-13)
nsubj(have-16, you-15)
parataxis(done-4, have-16)
amod(courage-18, more-17)
dobj(have-16, courage-18)
det(sex-22, the-20)
amod(sex-22, other-21)
prep_than(have-16, sex-22)

(ROOT
  (S (`` ``)
    (VP (VB Recollect)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP have)
            (VP (VBN had)
              (NP (NN confidence))
              (PP (VBN given)
                (PP (TO to)
                  (NP (PRP us))))
              (PP (IN in)
                (NP
                  (NP (NN consequence))
                  (PP (IN of)
                    (NP (PRP$ your) (NN pledging)))
                  (NP
                    (NP (PRP$ your) (NN word))
                    (, ,)
                    (NP (PRP$ my) (NN lord))))))))))
    (. .) ('' '')))

root(ROOT-0, Recollect-2)
mark(had-6, that-3)
nsubj(had-6, we-4)
aux(had-6, have-5)
ccomp(Recollect-2, had-6)
dobj(had-6, confidence-7)
prep(had-6, given-8)
pcomp(given-8, to-9)
pobj(to-9, us-10)
prep_in(had-6, consequence-12)
poss(pledging-15, your-14)
prep_of(consequence-12, pledging-15)
poss(word-17, your-16)
dep(consequence-12, word-17)
poss(lord-20, my-19)
appos(word-17, lord-20)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP do)
      (NP (PRP me))
      (, ,)
      (ADVP (RB then))
      (, ,)
      (S
        (NP
          (NP (DT the) (NN honour))
          (PP (IN of)
            (S
              (VP (VBG believing)
                (NP (PRP me))))))))
    (. ?) ('' '')))

nsubj(do-3, You-2)
root(ROOT-0, do-3)
dobj(do-3, me-4)
advmod(do-3, then-6)
det(honour-9, the-8)
dep(do-3, honour-9)
prepc_of(honour-9, believing-11)
dobj(believing-11, me-12)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD did)
        (SBAR (RB not) (IN until)
          (S
            (NP (PRP I))
            (VP (VBD saw)
              (NP (PRP you)))))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD replied))
        (NP (NNP Mrs) (NNP Lascelles)))
      (, ,))
    (`` ``)
    (CC but)
    (S
      (ADVP (RB now))
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (VBN convinced)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (MD will)
                (VP (VB perform)
                  (NP (PRP$ your) (NN promise)))))))))
    (. .) ('' '')))

nsubj(did-3, I-2)
root(ROOT-0, did-3)
dep(saw-7, not-4)
mark(saw-7, until-5)
nsubj(saw-7, I-6)
advcl(did-3, saw-7)
dobj(saw-7, you-8)
dep(did-3, replied-11)
nn(Lascelles-13, Mrs-12)
nsubj(replied-11, Lascelles-13)
advmod(convinced-20, now-17)
nsubjpass(convinced-20, I-18)
auxpass(convinced-20, am-19)
conj_but(did-3, convinced-20)
mark(perform-24, that-21)
nsubj(perform-24, you-22)
aux(perform-24, will-23)
ccomp(convinced-20, perform-24)
poss(promise-26, your-25)
dobj(perform-24, promise-26)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP do) (, ,)
        (ADVP (RB indeed))
        (, ,)
        (S
          (VP (VB encourage)
            (S
              (NP
                (NP (PRP me))
                (, ,)
                (NP (NN madam))
                (, ,))
              (VP (TO to)
                (VP (VB pursue)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (ADJP (JJ right))))))))))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP (NNP Pickersgill))
      (, ,)
      (S
        (VP (VBG bowing) (: ;) (`` ``)
          (PP (IN for)
            (NP
              (NP (PRP$ your) (NN approbation))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD should)
                    (VP (VB be)
                      (ADJP (RBS most) (JJ sorry)
                        (S
                          (VP (TO to)
                            (VP (VB lose) (, ,)
                              (ADVP (RB still))
                              (S
                                (ADJP (RBR more) (JJ sorry)
                                  (S
                                    (VP (TO to)
                                      (VP (VB prove)
                                        (S
                                          (NP (PRP myself))
                                          (ADJP (NN unworthy))))))))))))))))
              (PP (IN of)
                (NP (PRP it))))))))
    (. .) ('' '')))

nsubj(do-3, You-2)
ccomp(said-19, do-3)
advmod(do-3, indeed-5)
ccomp(do-3, encourage-7)
dobj(encourage-7, me-8)
nsubj(pursue-13, me-8)
appos(me-8, madam-10)
aux(pursue-13, to-12)
xcomp(encourage-7, pursue-13)
nsubj(right-16, what-14)
cop(right-16, is-15)
ccomp(pursue-13, right-16)
root(ROOT-0, said-19)
dobj(said-19, Pickersgill-20)
vmod(said-19, bowing-22)
poss(approbation-27, your-26)
prep_for(bowing-22, approbation-27)
nsubj(sorry-32, I-28)
nsubj(lose-34, I-28)
aux(sorry-32, should-29)
cop(sorry-32, be-30)
advmod(sorry-32, most-31)
rcmod(approbation-27, sorry-32)
aux(lose-34, to-33)
xcomp(sorry-32, lose-34)
advmod(lose-34, still-36)
advmod(sorry-38, more-37)
dep(lose-34, sorry-38)
aux(prove-40, to-39)
xcomp(sorry-38, prove-40)
nsubj(unworthy-42, myself-41)
xcomp(prove-40, unworthy-42)
prep_of(approbation-27, it-44)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (DT the) (NN reader))
        (VP (MD will)
          (VP (VB observe)))))
    (, ,)
    (NP (NN everything))
    (VP (VBD was)
      (VP (VBG going)
        (PRT (RP on))
        (ADVP (RB remarkably) (RB well))))
    (. .)))

mark(observe-5, As-1)
det(reader-3, the-2)
nsubj(observe-5, reader-3)
aux(observe-5, will-4)
advcl(going-9, observe-5)
nsubj(going-9, everything-7)
aux(going-9, was-8)
root(ROOT-0, going-9)
prt(going-9, on-10)
advmod(well-12, remarkably-11)
advmod(going-9, well-12)

(ROOT
  (NP (NNP CHAPTER) (NNP SIX) (. .)))

nn(SIX-2, CHAPTER-1)
root(ROOT-0, SIX-2)

(ROOT
  (S
    (NP (DT THE) (NN SMUGGLING))
    (VP (VBP YACHT))
    (. .)))

det(SMUGGLING-2, THE-1)
nsubj(YACHT-3, SMUGGLING-2)
root(ROOT-0, YACHT-3)

(ROOT
  (S
    (S
      (NP (NNP Cecilia))
      (VP (VBD returned)
        (PP (TO to)
          (NP (DT the) (NN cabin)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB ascertain)
              (SBAR (IN whether)
                (S
                  (NP (PRP$ her) (NN aunt))
                  (VP (VBD was)
                    (VP
                      (ADVP (RBR more))
                      (VBN composed))))))))))
    (: ;)
    (CC but)
    (S
      (NP (NNP Mrs) (NNP Lascelles))
      (VP (VBD remained)
        (PP (IN on)
          (NP (NN deck)))))
    (. .)))

nsubj(returned-2, Cecilia-1)
nsubj(ascertain-8, Cecilia-1)
root(ROOT-0, returned-2)
det(cabin-5, the-4)
prep_to(returned-2, cabin-5)
aux(ascertain-8, to-7)
xcomp(returned-2, ascertain-8)
mark(composed-14, whether-9)
poss(aunt-11, her-10)
nsubjpass(composed-14, aunt-11)
auxpass(composed-14, was-12)
advmod(composed-14, more-13)
ccomp(ascertain-8, composed-14)
nn(Lascelles-18, Mrs-17)
nsubj(remained-19, Lascelles-18)
conj_but(returned-2, remained-19)
prep_on(remained-19, deck-21)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (ADJP (RB much) (JJ pleased))
        (PP (IN with)
          (NP (NNP Pickersgill)))))
    (: ;)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD continued)
        (NP (PRP$ their) (NN conversation))))
    (. .)))

nsubj(pleased-4, She-1)
cop(pleased-4, was-2)
advmod(pleased-4, much-3)
root(ROOT-0, pleased-4)
prep_with(pleased-4, Pickersgill-6)
nsubj(continued-10, they-9)
conj_and(pleased-4, continued-10)
poss(conversation-12, their-11)
dobj(continued-10, conversation-12)

(ROOT
  (S
    (S
      (NP (NNP Pickersgill))
      (VP (VBD entered)
        (PP (IN into)
          (NP
            (NP (DT a) (NN defence))
            (PP (IN of)
              (NP (PRP$ his) (NN conduct)))))
        (PP (TO to)
          (NP (NNP Lord) (NNP B)))))
    (: --) (: ;)
    (CC and)
    (S
      (NP (NNP Mrs) (NNP Lascelles))
      (VP (MD could) (RB not)
        (ADVP (CC but))
        (VP (VB admit)
          (NP (DT the) (NN provocation)))))
    (. .)))

nsubj(entered-2, Pickersgill-1)
root(ROOT-0, entered-2)
det(defence-5, a-4)
prep_into(entered-2, defence-5)
poss(conduct-8, his-7)
prep_of(defence-5, conduct-8)
nn(B-11, Lord-10)
prep_to(entered-2, B-11)
nn(Lascelles-16, Mrs-15)
nsubj(admit-20, Lascelles-16)
aux(admit-20, could-17)
neg(admit-20, not-18)
advmod(admit-20, but-19)
conj_and(entered-2, admit-20)
det(provocation-22, the-21)
dobj(admit-20, provocation-22)

(ROOT
  (S
    (S
      (PP (IN After)
        (NP (DT a) (JJ long) (NN conversation)))
      (NP (PRP she))
      (VP (VBD hinted)
        (PP (IN at)
          (NP (PRP$ his) (NN profession)))))
    (, ,)
    (CC and)
    (S
      (FRAG
        (WHADVP (WRB how))
        (ADJP (JJ superior)))
      (NP (PRP he))
      (VP (VBD appeared)
        (S
          (VP (TO to)
            (VP (VB be)
              (PP (TO to)
                (NP (PDT such) (DT a) (NNS lawless) (NN life))))))))
    (. .)))

det(conversation-4, a-2)
amod(conversation-4, long-3)
prep_after(hinted-6, conversation-4)
nsubj(hinted-6, she-5)
root(ROOT-0, hinted-6)
poss(profession-9, his-8)
prep_at(hinted-6, profession-9)
dep(superior-13, how-12)
dep(appeared-15, superior-13)
nsubj(appeared-15, he-14)
nsubj(be-17, he-14)
conj_and(hinted-6, appeared-15)
aux(be-17, to-16)
xcomp(appeared-15, be-17)
predet(life-22, such-19)
det(life-22, a-20)
nn(life-22, lawless-21)
prep_to(be-17, life-22)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD may)
      (VP (VB be)
        (NP
          (NP (NNS incredulous))
          (, ,)
          (NP (NN madam)))
        (PRN (, ,) ('' '')
          (SINV
            (VP (VBD replied))
            (NP (NNP Pickersgill)))
          (, ,) (`` ``))
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBP tell)
              (NP (PRP you))
              (SBAR
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (VBP have)
                      (NP (RB as)
                        (NP
                          (ADVP (RB good)
                            (NP (DT a) (NN right))
                            (PP (TO to)
                              (NP (NN quarter))))
                          (NP (PRP$ my) (NNS arms))
                          (PP (IN as)
                            (NP (NNP Lord) (NNP B))))
                        (: --)
                        (NP (PRP himself))))))
                (: ;)
                (CC and)
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (VBP am) (RB not)
                      (PP (IN under)
                        (NP (PRP$ my) (JJ real) (NN name))))))))))))
    (. .)))

nsubj(incredulous-5, You-2)
aux(incredulous-5, may-3)
cop(incredulous-5, be-4)
root(ROOT-0, incredulous-5)
appos(incredulous-5, madam-7)
parataxis(incredulous-5, replied-10)
nsubj(replied-10, Pickersgill-11)
mark(tell-16, if-14)
nsubj(tell-16, I-15)
advcl(incredulous-5, tell-16)
dobj(tell-16, you-17)
mark(have-20, that-18)
nsubj(have-20, I-19)
ccomp(tell-16, have-20)
advmod(arms-28, as-21)
advmod(arms-28, good-22)
det(right-24, a-23)
pobj(good-22, right-24)
prep_to(good-22, quarter-26)
poss(arms-28, my-27)
dobj(have-20, arms-28)
nn(B-31, Lord-30)
prep_as(arms-28, B-31)
npadvmod(arms-28, himself-33)
mark(am-38, that-36)
nsubj(am-38, I-37)
ccomp(tell-16, am-38)
conj_and(have-20, am-38)
neg(am-38, not-39)
poss(name-43, my-41)
amod(name-43, real-42)
prep_under(am-38, name-43)

(ROOT
  (S
    (S
      (NP (NNP Smuggling))
      (VP (VBZ is) (, ,)
        (PP (IN at)
          (NP (DT all) (NNS events)))
        (, ,)
        (NP (DT no) (NN crime))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (ADVP (RB infinitely))
      (VP (VBP prefer)
        (NP
          (NP (DT the) (JJ wild) (NN life))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP lead)
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN head))
                    (PP (IN of)
                      (NP (PRP$ my) (NNS men)))))
                (PP (TO to)
                  (S
                    (VP (VBG being)
                      (VP (VBN spurned)
                        (PP (IN by)
                          (NP (NN society)))
                        (SBAR (IN because)
                          (S
                            (NP (PRP I))
                            (VP (VBP am)
                              (ADJP (JJ poor)))))))))))))))
    (. .)))

nsubj(crime-9, Smuggling-1)
cop(crime-9, is-2)
det(events-6, all-5)
prep_at(crime-9, events-6)
neg(crime-9, no-8)
root(ROOT-0, crime-9)
nsubj(prefer-14, I-12)
advmod(prefer-14, infinitely-13)
conj_and(crime-9, prefer-14)
det(life-17, the-15)
amod(life-17, wild-16)
dobj(prefer-14, life-17)
nsubj(lead-19, I-18)
rcmod(life-17, lead-19)
det(head-22, the-21)
prep_at(lead-19, head-22)
poss(men-25, my-24)
prep_of(head-22, men-25)
auxpass(spurned-28, being-27)
prepc_to(lead-19, spurned-28)
agent(spurned-28, society-30)
mark(poor-34, because-31)
nsubj(poor-34, I-32)
cop(poor-34, am-33)
advcl(spurned-28, poor-34)

(ROOT
  (S
    (NP
      (NP (DT The) (JJS greatest) (NN crime))
      (PP (IN in)
        (NP (DT this) (NN country))))
    (VP (VBZ is)
      (NP (NN poverty)))
    (. .)))

det(crime-3, The-1)
amod(crime-3, greatest-2)
nsubj(poverty-8, crime-3)
det(country-6, this-5)
prep_in(crime-3, country-6)
cop(poverty-8, is-7)
root(ROOT-0, poverty-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD may)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (ADJP (JJ fortunate)))))
    (, ,)
    (NP (DT some) (NN day))
    (VP (VB resume)
      (NP (PRP$ my) (NN name)))
    (. .)))

nsubj(may-2, I-1)
ccomp(resume-11, may-2)
mark(fortunate-7, if-4)
nsubj(fortunate-7, I-5)
cop(fortunate-7, am-6)
advcl(resume-11, fortunate-7)
det(day-10, some-9)
nsubj(resume-11, day-10)
root(ROOT-0, resume-11)
poss(name-13, my-12)
dobj(resume-11, name-13)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD may) (, ,)
        (ADVP (RB perhaps))
        (, ,)
        (VP (VB meet)
          (NP (PRP me)))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP please))))
      (, ,)
      (NP (PRP you))
      (VP (MD may)
        (VP (VB expose)
          (NP (PRP me)))))
    (. .) ('' '')))

nsubj(meet-6, You-1)
aux(meet-6, may-2)
advmod(meet-6, perhaps-4)
root(ROOT-0, meet-6)
dobj(meet-6, me-7)
mark(please-12, if-10)
nsubj(please-12, you-11)
advcl(expose-16, please-12)
nsubj(expose-16, you-14)
aux(expose-16, may-15)
conj_and(meet-6, expose-16)
dobj(expose-16, me-17)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (DT That))
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD should) (RB not)
              (VP (VB be)
                (ADJP (JJ likely)
                  (S
                    (VP (TO to)
                      (VP (VB do)))))))))
        (, ,) ('' ''))
      (VP (VBD replied)
        (NP (DT the) (NN widow))))
    (: ;) (`` ``)
    (S (CC but)
      (ADVP (RB still))
      (NP (PRP I))
      (VP (VBP regret)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP
                (NP (DT a) (NN person))
                (, ,)
                (VP
                  (ADVP (RB evidently))
                  (VBN intended)
                  (PP (IN for)
                    (NP
                      (NP (JJR better) (NNS things))
                      (, ,)
                      (VP (VBN employed)
                        (PP (IN in)
                          (NP
                            (ADJP (RB so) (JJ disreputable))
                            (DT a) (NN profession)))))))))))))
    (. .) ('' '')))

nsubj(replied-12, That-2)
nsubj(likely-7, I-3)
nsubj(do-9, I-3)
aux(likely-7, should-4)
neg(likely-7, not-5)
cop(likely-7, be-6)
rcmod(That-2, likely-7)
aux(do-9, to-8)
xcomp(likely-7, do-9)
root(ROOT-0, replied-12)
det(widow-14, the-13)
dobj(replied-12, widow-14)
cc(regret-20, but-17)
advmod(regret-20, still-18)
nsubj(regret-20, I-19)
nsubj(see-22, I-19)
parataxis(replied-12, regret-20)
aux(see-22, to-21)
xcomp(regret-20, see-22)
det(person-24, a-23)
dobj(see-22, person-24)
advmod(intended-27, evidently-26)
vmod(person-24, intended-27)
amod(things-30, better-29)
prep_for(intended-27, things-30)
vmod(things-30, employed-32)
advmod(disreputable-35, so-34)
amod(profession-37, disreputable-35)
det(profession-37, a-36)
prep_in(employed-32, profession-37)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (ADVP (RB hardly))
    (VP (VB know) (, ,) (VB madam) (, ,)
      (SBAR
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ is))))
        (CC and)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ is) (RB not)
              (ADJP (JJ disreputable)
                (PP (IN in)
                  (NP (DT this) (JJ conventional) (NN world)))))))))
    (. .)))

nsubj(know-4, I-2)
advmod(know-4, hardly-3)
root(ROOT-0, know-4)
dep(know-4, madam-6)
nsubj(is-9, what-8)
dep(know-4, is-9)
nsubj(disreputable-14, what-11)
cop(disreputable-14, is-12)
neg(disreputable-14, not-13)
dep(know-4, disreputable-14)
conj_and(is-9, disreputable-14)
det(world-18, this-16)
amod(world-18, conventional-17)
prep_in(disreputable-14, world-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (VP (VBN considered)
        (ADJP (JJ disreputable)
          (S
            (VP
              (VP (TO to)
                (VP (VB cringe)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NNS vices))
                      (PP (IN of)
                        (NP (DT a) (NN court)))))))
              (, ,)
              (CC or)
              (VP (TO to)
                (VP (VB accept)
                  (NP (DT a) (NN pension) (NN wrung))
                  (PP (IN from)
                    (NP
                      (NP (DT the) (NN industry))
                      (PP (IN of)
                        (NP (DT the) (NN nation)))))
                  (, ,)
                  (PP (IN in)
                    (NP
                      (NP (NN return))
                      (PP (IN for)
                        (NP (NN base) (NN servility))))))))))))
    (. .)))

nsubjpass(considered-4, It-1)
auxpass(considered-4, is-2)
neg(considered-4, not-3)
root(ROOT-0, considered-4)
acomp(considered-4, disreputable-5)
aux(cringe-7, to-6)
dep(disreputable-5, cringe-7)
det(vices-10, the-9)
prep_to(cringe-7, vices-10)
det(court-13, a-12)
prep_of(vices-10, court-13)
aux(accept-17, to-16)
dep(disreputable-5, accept-17)
conj_or(cringe-7, accept-17)
det(wrung-20, a-18)
nn(wrung-20, pension-19)
dobj(accept-17, wrung-20)
det(industry-23, the-22)
prep_from(accept-17, industry-23)
det(nation-26, the-25)
prep_of(industry-23, nation-26)
prep_in(accept-17, return-29)
nn(servility-32, base-31)
prep_for(return-29, servility-32)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (VP (VBN considered)
        (UCP
          (ADJP (JJ disreputable)
            (S
              (VP (TO to)
                (VP
                  (VP (VB take)
                    (NP (NNS tithes)))
                  (, ,)
                  (VP (JJ intended)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN service))
                        (PP (IN of)
                          (NP (NNP God))))))
                  (, ,)
                  (CC and)
                  (VP (VB lavish)
                    (NP (PRP them))
                    (PRT (RP away))
                    (PP (IN at)
                      (NP (NNS watering-places))))))))
          (CC or)
          (ADVP (RB elsewhere)))
        (, ,)
        (S
          (VP
            (VP (VBG seeking)
              (NP (NN pleasure)))
            (CONJP (RB instead) (IN of))
            (VP (VBG doing)
              (NP (NNP God) (NN service)))))))
    (. .)))

nsubjpass(considered-4, It-1)
auxpass(considered-4, is-2)
neg(considered-4, not-3)
root(ROOT-0, considered-4)
acomp(considered-4, disreputable-5)
aux(take-7, to-6)
xcomp(disreputable-5, take-7)
dobj(take-7, tithes-8)
xcomp(disreputable-5, intended-10)
conj_and(take-7, intended-10)
det(service-13, the-12)
prep_for(intended-10, service-13)
prep_of(service-13, God-15)
xcomp(disreputable-5, lavish-18)
conj_and(take-7, lavish-18)
dobj(lavish-18, them-19)
prt(lavish-18, away-20)
prep_at(lavish-18, watering-places-22)
acomp(considered-4, elsewhere-24)
advmod(disreputable-5, elsewhere-24)
conj_or(disreputable-5, elsewhere-24)
ccomp(considered-4, seeking-26)
dobj(seeking-26, pleasure-27)
ccomp(considered-4, doing-30)
conj_negcc(seeking-26, doing-30)
nn(service-32, God-31)
dobj(doing-30, service-32)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (VP (VBN considered)
        (ADJP (JJ disreputable)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (NN fee))
                (PP (IN after)
                  (NP (NN fee)))
                (S
                  (VP
                    (VP (TO to)
                      (VP (VB uphold)
                        (NP (NN injustice))))
                    (, ,)
                    (VP (TO to)
                      (VP (VB plead)
                        (PP (IN against)
                          (NP (NN innocence)))
                        (, ,)
                        (PP (TO to)
                          (NP (NN pervert) (NN truth)))))
                    (, ,)
                    (CC and)
                    (VP (TO to)
                      (VP (VB aid)
                        (NP (DT the) (NN devil))))))))))))
    (. .)))

nsubjpass(considered-4, It-1)
auxpass(considered-4, is-2)
neg(considered-4, not-3)
root(ROOT-0, considered-4)
acomp(considered-4, disreputable-5)
aux(take-7, to-6)
xcomp(disreputable-5, take-7)
dobj(take-7, fee-8)
prep_after(take-7, fee-10)
aux(uphold-12, to-11)
dep(take-7, uphold-12)
dobj(uphold-12, injustice-13)
aux(plead-16, to-15)
dep(take-7, plead-16)
conj_and(uphold-12, plead-16)
prep_against(plead-16, innocence-18)
nn(truth-22, pervert-21)
prep_to(plead-16, truth-22)
aux(aid-26, to-25)
dep(take-7, aid-26)
conj_and(uphold-12, aid-26)
det(devil-28, the-27)
dobj(aid-26, devil-28)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (VP (VBN considered)
        (ADJP (JJ disreputable)
          (S
            (VP
              (VP (TO to)
                (VP (VB gamble)
                  (PP (IN on)
                    (NP (DT the) (NNP Stock) (NNP Exchange)))))
              (, ,)
              (CC or)
              (VP (TO to)
                (VP (VB corrupt)
                  (NP
                    (NP (DT the) (NN honesty))
                    (PP (IN of)
                      (NP (NNS electors))))
                  (PP (IN by)
                    (NP (NNS bribes)))
                  (, ,)
                  (PP (IN for)
                    (S
                      (VP (VBG doing)
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (NP
                              (NP (DT the) (NN penalty))
                              (VP (VBN attached)))
                            (VP (VBZ is)
                              (ADJP (JJ equal)
                                (PP (TO to)
                                  (NP
                                    (NP (DT that))
                                    (VP (VBN decreed)
                                      (PP (TO to)
                                        (NP
                                          (NP (DT the) (NN offence))
                                          (SBAR
                                            (WHPP (IN of)
                                              (WHNP (WDT which)))
                                            (S
                                              (NP (PRP I))
                                              (VP (VBP am)
                                                (ADJP (JJ guilty))))))))))))))))))))))))
    (. .)))

nsubjpass(considered-4, It-1)
auxpass(considered-4, is-2)
neg(considered-4, not-3)
root(ROOT-0, considered-4)
acomp(considered-4, disreputable-5)
aux(gamble-7, to-6)
dep(disreputable-5, gamble-7)
det(Exchange-11, the-9)
nn(Exchange-11, Stock-10)
prep_on(gamble-7, Exchange-11)
aux(corrupt-15, to-14)
dep(disreputable-5, corrupt-15)
conj_or(gamble-7, corrupt-15)
det(honesty-17, the-16)
dobj(corrupt-15, honesty-17)
prep_of(honesty-17, electors-19)
prep_by(corrupt-15, bribes-21)
prepc_for(corrupt-15, doing-24)
dobj(equal-30, which-25)
det(penalty-27, the-26)
nsubj(equal-30, penalty-27)
vmod(penalty-27, attached-28)
cop(equal-30, is-29)
ccomp(doing-24, equal-30)
prep_to(equal-30, that-32)
vmod(that-32, decreed-33)
det(offence-36, the-35)
prep_to(decreed-33, offence-36)
prep_of(guilty-41, offence-36)
nsubj(guilty-41, I-39)
cop(guilty-41, am-40)
rcmod(offence-36, guilty-41)

(ROOT
  (S
    (S
      (S
        (NP (PDT All) (DT these))
        (PRN (, ,)
          (CC and)
          (ADVP (RB much) (JJR more))
          (, ,))
        (VP (VBP are) (RB not)
          (VP (VBN considered)
            (S
              (ADJP (JJ disreputable))))))
      (: ;) (RB yet)
      (S
        (PP (IN by)
          (NP (DT all)))
        (NP (DT these))
        (VP (VBP are)
          (NP
            (NP (DT the) (JJ moral) (NNS bonds))
            (PP (IN of)
              (NP
                (NP (NN society))
                (VP (VBN loosened) (, ,)
                  (SBAR (IN while)
                    (S
                      (PP (IN in)
                        (NP (NN mine)))
                      (NP (PRP we))
                      (VP (VBP cause)
                        (NP
                          (NP (DT no) (NN guilt))
                          (PP (IN in)
                            (NP (NNS others))))))))))))))
    (: --) ('' '')
    (S (`` ``)
      (ADVP (CC But)
        (RB still))
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT a) (NN crime))))
    (. .) ('' '')))

predet(these-2, All-1)
nsubjpass(considered-10, these-2)
cc(more-6, and-4)
advmod(more-6, much-5)
dep(considered-10, more-6)
auxpass(considered-10, are-8)
neg(considered-10, not-9)
root(ROOT-0, considered-10)
xcomp(considered-10, disreputable-11)
advmod(considered-10, yet-13)
prep_by(bonds-20, all-15)
nsubj(bonds-20, these-16)
cop(bonds-20, are-17)
det(bonds-20, the-18)
amod(bonds-20, moral-19)
parataxis(considered-10, bonds-20)
prep_of(bonds-20, society-22)
vmod(society-22, loosened-23)
mark(cause-29, while-25)
prep_in(cause-29, mine-27)
nsubj(cause-29, we-28)
advcl(loosened-23, cause-29)
neg(guilt-31, no-30)
dobj(cause-29, guilt-31)
prep_in(guilt-31, others-33)
cc(still-38, But-37)
advmod(crime-42, still-38)
nsubj(crime-42, it-39)
cop(crime-42, is-40)
det(crime-42, a-41)
parataxis(considered-10, crime-42)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (DT A) (NN violation))
        (PP (IN of)
          (NP (DT the) (NN revenue))))
      (VP (VBZ laws)))
    (, ,)
    (CC and)
    (ADVP (DT no) (RBR more))
    (. .)))

det(violation-3, A-2)
nsubj(laws-7, violation-3)
det(revenue-6, the-5)
prep_of(violation-3, revenue-6)
root(ROOT-0, laws-7)
neg(more-11, no-10)
advmod(laws-7, more-11)
conj_and(laws-7, more-11)

(ROOT
  (S
    (ADVP (RB Observe))
    (, ,)
    (NP
      (NP (NN madam))
      (, ,)
      (NP (DT the) (JJ English) (NN Government)))
    (VP (VBP encourage)
      (NP
        (NP (DT the) (NN smuggling))
        (PP (IN of)
          (NP (PRP$ our) (NN manufactures))))
      (PP (TO to)
        (NP (DT the) (NN Continent)))
      (, ,)
      (PP (IN at)
        (NP
          (NP (DT the) (JJ same) (NN time))
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBP take)
                (S
                  (NP (DT every) (NN step))
                  (VP (TO to)
                    (VP (VB prevent)
                      (NP
                        (NP (NNS articles))
                        (VP (VBG being)
                          (VP (VBN smuggled)
                            (PP (IN into)
                              (NP (DT this) (NN country)))))))))))))))
    (. .)))

advmod(encourage-8, Observe-1)
nsubj(encourage-8, madam-3)
det(Government-7, the-5)
amod(Government-7, English-6)
appos(madam-3, Government-7)
root(ROOT-0, encourage-8)
det(smuggling-10, the-9)
dobj(encourage-8, smuggling-10)
poss(manufactures-13, our-12)
prep_of(smuggling-10, manufactures-13)
det(Continent-16, the-15)
prep_to(encourage-8, Continent-16)
det(time-21, the-19)
amod(time-21, same-20)
prep_at(encourage-8, time-21)
mark(take-24, that-22)
nsubj(take-24, they-23)
dep(time-21, take-24)
det(step-26, every-25)
dobj(take-24, step-26)
nsubj(prevent-28, step-26)
aux(prevent-28, to-27)
xcomp(take-24, prevent-28)
dobj(prevent-28, articles-29)
auxpass(smuggled-31, being-30)
vmod(articles-29, smuggled-31)
det(country-34, this-33)
prep_into(smuggled-31, country-34)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S
      (VP (VB madam)))
    (, ,)
    (VP (MD can)
      (ADVP (IN that))
      (VP (VB be)
        (NP
          (NP (DT a) (JJ _) (NN crime) (NN _))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP
                (NP (DT the) (NN head))
                (PP (IN of)
                  (NP (DT the) (NN vessel))))
              (VP (VBZ is)
                (VP (VBN turned)
                  (NP
                    (NP (NN north))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ becomes)
                          (S
                            (VP (VBG _)
                              (NP (DT no) (NN crime) (NN _))
                              (SBAR
                                (WHADVP (WRB when))
                                (S
                                  (NP (PRP she))
                                  (VP (VBZ steers)
                                    (NP (DT the) (JJ opposite) (NN way))))))))))))))))))
    (. ?) ('' '')))

advmod(_-11, Now-1)
ccomp(_-11, madam-3)
aux(_-11, can-5)
advmod(_-11, that-6)
cop(_-11, be-7)
det(_-11, a-8)
amod(_-11, _-9)
nn(_-11, crime-10)
root(ROOT-0, _-11)
tmod(turned-19, _-11)
advmod(turned-19, when-12)
det(head-14, the-13)
nsubjpass(turned-19, head-14)
det(vessel-17, the-16)
prep_of(head-14, vessel-17)
auxpass(turned-19, is-18)
rcmod(_-11, turned-19)
dobj(turned-19, north-20)
nsubj(becomes-23, north-20)
rcmod(north-20, becomes-23)
xcomp(becomes-23, _-24)
neg(_-27, no-25)
nn(_-27, crime-26)
dobj(_-24, _-27)
advmod(steers-30, when-28)
nsubj(steers-30, she-29)
advcl(_-24, steers-30)
det(way-33, the-31)
amod(way-33, opposite-32)
dobj(steers-30, way-33)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN stigma))
          (VP (VBN attached)
            (PP (TO to)
              (NP (PRP it)))))))
    (, ,)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB allow)))
    (. .) ('' '')))

expl(is-3, There-2)
ccomp(allow-12, is-3)
det(stigma-5, a-4)
nsubj(is-3, stigma-5)
vmod(stigma-5, attached-6)
prep_to(attached-6, it-8)
nsubj(allow-12, you-10)
aux(allow-12, must-11)
root(ROOT-0, allow-12)

(ROOT
  (S (`` ``)
    (S
      (SBAR (IN That)
        (S
          (NP (PRP I))
          (VP (VBP grant)
            (NP (PRP you)))))
      (, ,)
      (VP (VB madam)))
    (: ;)
    (CC and)
    (S
      (ADVP (RB as) (RB soon)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (MD can)
              (VP (VB quit)
                (NP (DT the) (NN profession)))))))
      (NP (PRP I))
      (VP (MD shall)))
    (. .)))

mark(grant-4, That-2)
nsubj(grant-4, I-3)
ccomp(madam-7, grant-4)
dobj(grant-4, you-5)
root(ROOT-0, madam-7)
advmod(soon-11, as-10)
advmod(shall-19, soon-11)
mark(quit-15, as-12)
nsubj(quit-15, I-13)
aux(quit-15, can-14)
ccomp(soon-11, quit-15)
det(profession-17, the-16)
dobj(quit-15, profession-17)
nsubj(shall-19, I-18)
conj_and(madam-7, shall-19)

(ROOT
  (S
    (S
      (NP (DT No) (NN captive))
      (ADVP (RB ever))
      (VP (VBD sighed)
        (NP (JJR more))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN released)
                (PP (IN from)
                  (NP (PRP$ his) (NNS chains)))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB leave)
          (NP (PRP it))
          (, ,)
          (SBAR (IN till)
            (S
              (NP (PRP I))
              (VP (VBP find)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP am)
                      (ADVP (RB in))
                      (NP (DT a) (NN situation)
                        (S (RB not)
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN spurned)
                                (CC and)
                                (VBN neglected)
                                (PP (IN by)
                                  (NP
                                    (NP (DT those))
                                    (PP (IN with)
                                      (SBAR
                                        (WHNP (WP whom))
                                        (S
                                          (NP (PRP I))
                                          (VP (VBP have)
                                            (NP (DT a) (NN right))
                                            (PP (TO to)
                                              (NP (NN associate)))))))))))))))))))))))
    (. .) ('' '')))

neg(captive-2, No-1)
nsubj(sighed-4, captive-2)
advmod(sighed-4, ever-3)
root(ROOT-0, sighed-4)
dobj(sighed-4, more-5)
aux(released-8, to-6)
auxpass(released-8, be-7)
vmod(sighed-4, released-8)
poss(chains-11, his-10)
prep_from(released-8, chains-11)
nsubj(leave-17, I-14)
aux(leave-17, will-15)
neg(leave-17, not-16)
conj_but(sighed-4, leave-17)
dobj(leave-17, it-18)
mark(find-22, till-20)
nsubj(find-22, I-21)
advcl(leave-17, find-22)
nsubj(situation-27, I-23)
cop(situation-27, am-24)
advmod(situation-27, in-25)
det(situation-27, a-26)
ccomp(find-22, situation-27)
neg(spurned-31, not-28)
aux(spurned-31, to-29)
auxpass(spurned-31, be-30)
vmod(situation-27, spurned-31)
vmod(situation-27, neglected-33)
conj_and(spurned-31, neglected-33)
agent(spurned-31, those-35)
dobj(have-39, whom-37)
nsubj(have-39, I-38)
prepc_with(those-35, have-39)
det(right-41, a-40)
dobj(have-39, right-41)
prep_to(have-39, associate-43)

(ROOT
  (S
    (PP (IN At)
      (NP (DT this) (NN moment)))
    (NP (DT the) (NN steward))
    (VP (VBD was)
      (VP (VBN seen)
        (ADVP (RB forward))
        (S
          (VP (VBG making)
            (NP (NNS signs))
            (PP (TO to)
              (NP
                (NP (NNP Mrs) (NNP Lascelles))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP
                      (VP (VBN excused)
                        (NP (PRP herself)))
                      (, ,)
                      (CC and)
                      (VP (VBD went)
                        (PP (TO to)
                          (NP (PRP him)))))))))))))
    (. .)))

det(moment-3, this-2)
prep_at(seen-7, moment-3)
det(steward-5, the-4)
nsubjpass(seen-7, steward-5)
auxpass(seen-7, was-6)
root(ROOT-0, seen-7)
advmod(seen-7, forward-8)
xcomp(seen-7, making-9)
dobj(making-9, signs-10)
nn(Lascelles-13, Mrs-12)
prep_to(making-9, Lascelles-13)
nsubj(excused-16, Lascelles-13)
nsubj(went-20, Lascelles-13)
rcmod(Lascelles-13, excused-16)
dobj(excused-16, herself-17)
rcmod(Lascelles-13, went-20)
conj_and(excused-16, went-20)
prep_to(went-20, him-22)

(ROOT
  (S (`` ``)
    (S
      (PP (IN For)
        (NP
          (NP (DT the) (NN love))
          (PP (IN of)
            (NP (NNP God)))))
      (, ,)
      (S
        (VP (VBP madam)
          (PRN (, ,) ('' '')
            (SINV
              (VP (VBD said))
              (NP (NNP Maddox)))
            (, ,) (`` ``))
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBZ appears)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ friendly)
                        (PP (IN with)
                          (NP (PRP you))))))))))))
      (, ,)
      (VP (VBP do)
        (ADVP (RB pray))
        (VP (VB find)
          (PRT (RP out))
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT these) (NNS cutlets))
              (VP (VBP are)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN dressed)))))))))))
    (: ;)
    (S
      (S
        (NP (DT the) (NN cook))
        (VP (VBZ is)
          (VP (VBG tearing)
            (NP (PRP$ his) (NN hair)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP we))
        (VP (MD shall)
          (ADVP (RB never))
          (VP (VB have)
            (NP (DT any) (NN dinner))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP it))
      (VP (MD will) (RB all)
        (VP (VB fall)
          (SBAR (IN upon)
            (S
              (NP
                (NP (PRP me))
                (, ,)
                (CC and)
                (NP (PRP I))
                (: --))
              (VP (MD shall)
                (VP (VB be)
                  (VP (VBN tossed)
                    (ADVP (RB overboard))))))))))
    (. .) ('' '')))

det(love-4, the-3)
prep_for(find-26, love-4)
prep_of(love-4, God-6)
ccomp(find-26, madam-8)
parataxis(madam-8, said-11)
nsubj(said-11, Maddox-12)
mark(appears-17, as-15)
nsubj(appears-17, he-16)
nsubj(friendly-20, he-16)
advcl(madam-8, appears-17)
aux(friendly-20, to-18)
cop(friendly-20, be-19)
xcomp(appears-17, friendly-20)
prep_with(friendly-20, you-22)
aux(find-26, do-24)
advmod(find-26, pray-25)
root(ROOT-0, find-26)
prt(find-26, out-27)
advmod(are-31, how-28)
det(cutlets-30, these-29)
nsubj(are-31, cutlets-30)
nsubjpass(dressed-34, cutlets-30)
ccomp(find-26, are-31)
aux(dressed-34, to-32)
auxpass(dressed-34, be-33)
xcomp(are-31, dressed-34)
det(cook-37, the-36)
nsubj(tearing-39, cook-37)
aux(tearing-39, is-38)
conj_and(find-26, tearing-39)
poss(hair-41, his-40)
dobj(tearing-39, hair-41)
nsubj(have-47, we-44)
aux(have-47, shall-45)
neg(have-47, never-46)
conj_and(find-26, have-47)
conj_and(tearing-39, have-47)
det(dinner-49, any-48)
dobj(have-47, dinner-49)
advmod(fall-56, then-52)
nsubj(fall-56, it-53)
aux(fall-56, will-54)
advmod(fall-56, all-55)
conj_and(find-26, fall-56)
mark(tossed-65, upon-57)
nsubjpass(tossed-65, me-58)
conj_and(me-58, I-61)
nsubjpass(tossed-65, I-61)
aux(tossed-65, shall-63)
auxpass(tossed-65, be-64)
advcl(fall-56, tossed-65)
advmod(tossed-65, overboard-66)

(ROOT
  (S
    (NP (NNP Mrs) (NNP Lascelles))
    (VP (VBD desired)
      (NP (JJ poor) (NN Maddox))
      (S
        (VP (TO to)
          (VP (VB wait)
            (ADVP (RB there))
            (SBAR (IN while)
              (S
                (NP (PRP she))
                (VP (VBD obtained)
                  (NP (DT the) (VBN desired) (NN information)))))))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(desired-3, Lascelles-2)
root(ROOT-0, desired-3)
amod(Maddox-5, poor-4)
dobj(desired-3, Maddox-5)
nsubj(wait-7, Maddox-5)
aux(wait-7, to-6)
xcomp(desired-3, wait-7)
advmod(wait-7, there-8)
mark(obtained-11, while-9)
nsubj(obtained-11, she-10)
advcl(wait-7, obtained-11)
det(information-14, the-12)
amod(information-14, desired-13)
dobj(obtained-11, information-14)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ few) (NNS minutes)))
    (NP (PRP she))
    (VP (VBD returned)
      (PP (TO to)
        (NP (PRP him))))
    (. .)))

det(minutes-4, a-2)
amod(minutes-4, few-3)
prep_in(returned-6, minutes-4)
nsubj(returned-6, she-5)
root(ROOT-0, returned-6)
prep_to(returned-6, him-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN found)
        (NP (PRP it))
        (PRT (RP out))))
    (. .)))

nsubj(found-4, I-2)
aux(found-4, have-3)
root(ROOT-0, found-4)
dobj(found-4, it-5)
prt(found-4, out-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (ADJP (JJ first)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP
                (VP (VBN boiled)
                  (PP (IN in)
                    (NP (NN vinegar))))
                (, ,)
                (VP
                  (ADVP (RB then))
                  (VBN fried)
                  (PP (IN in)
                    (NP (NN batter))))
                (, ,)
                (CC and)
                (VP (VBN served)
                  (PRT (RP up))
                  (PP (IN with)
                    (NP
                      (NP (DT a) (NN sauce))
                      (PP (IN of)
                        (NP (NN anchovy)
                          (CC and)
                          (NN Malaga) (NNS raisins))))))))))))
    (. !) ('' '')))

nsubj(first-3, They-1)
nsubjpass(boiled-6, They-1)
nsubjpass(fried-11, They-1)
nsubjpass(served-16, They-1)
cop(first-3, are-2)
root(ROOT-0, first-3)
aux(boiled-6, to-4)
auxpass(boiled-6, be-5)
xcomp(first-3, boiled-6)
prep_in(boiled-6, vinegar-8)
advmod(fried-11, then-10)
xcomp(first-3, fried-11)
conj_and(boiled-6, fried-11)
prep_in(fried-11, batter-13)
xcomp(first-3, served-16)
conj_and(boiled-6, served-16)
prt(served-16, up-17)
det(sauce-20, a-19)
prep_with(served-16, sauce-20)
nn(raisins-25, anchovy-22)
conj_and(anchovy-22, Malaga-24)
nn(raisins-25, Malaga-24)
prep_of(sauce-20, raisins-25)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP First) (NNP fried))
      (PP (IN in)
        (NP (NN vinegar))))
    (, ,) (RB then)
    (VP
      (VP (VBD boiled)
        (PP (IN in)
          (NP (NN batter))))
      (, ,)
      (CC and)
      (VP (VBD served)
        (PRT (RP up))
        (PP (IN with)
          (NP (NNS almonds)
            (CC and)
            (NNS raisins)))))
    (. .) ('' '')))

nn(fried-3, First-2)
nsubj(boiled-8, fried-3)
nsubj(served-13, fried-3)
prep_in(fried-3, vinegar-5)
advmod(boiled-8, then-7)
root(ROOT-0, boiled-8)
prep_in(boiled-8, batter-10)
conj_and(boiled-8, served-13)
prt(served-13, up-14)
prep_with(served-13, almonds-16)
prep_with(served-13, raisins-18)
conj_and(almonds-16, raisins-18)

(ROOT
  (NP
    (NP (`` ``) (DT No))
    (: --)
    (NP (RB no))
    (. !) ('' '')))

root(ROOT-0, No-2)
dep(No-2, no-4)

(ROOT
  (S
    (NP (NNP Mrs) (NNP Lascelles))
    (VP
      (VP (VBD repeated)
        (NP (DT the) (NN injunction))
        (PP (TO to)
          (NP (DT the)
            (ADJP (JJ frightened))
            (NN steward))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB then))
        (VBD returned)
        (NP (JJ aft)))
      (, ,)
      (CC and)
      (VP (VBD re-entered)
        (PP (IN into)
          (NP (DT a) (NN conversation)))
        (PP (IN with)
          (NP
            (NP (NNP Pickersgill))
            (, ,)
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (PP (IN for)
                  (NP (DT the) (JJ first) (NN time)))
                (, ,)
                (NP (NNP Corbett))
                (ADVP (RB now))
                (VP (VBD joined))))))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(repeated-3, Lascelles-2)
nsubj(returned-13, Lascelles-2)
nsubj(re-entered-17, Lascelles-2)
root(ROOT-0, repeated-3)
det(injunction-5, the-4)
dobj(repeated-3, injunction-5)
det(steward-9, the-7)
amod(steward-9, frightened-8)
prep_to(repeated-3, steward-9)
advmod(returned-13, then-12)
conj_and(repeated-3, returned-13)
dobj(returned-13, aft-14)
conj_and(repeated-3, re-entered-17)
det(conversation-20, a-19)
prep_into(re-entered-17, conversation-20)
prep_with(re-entered-17, Pickersgill-22)
prep_in(joined-33, Pickersgill-22)
det(time-29, the-27)
amod(time-29, first-28)
prep_for(joined-33, time-29)
nsubj(joined-33, Corbett-31)
advmod(joined-33, now-32)
rcmod(Pickersgill-22, joined-33)

(ROOT
  (S
    (NP (NNP Corbett))
    (VP (VBD had)
      (NP
        (NP (NN sense))
        (ADJP (JJ enough)
          (S
            (VP (TO to)
              (VP (VB feel))))))
      (, ,)
      (SBAR (IN that)
        (S
          (SBAR
            (X (DT the) (JJR less))
            (S
              (NP (PRP he))
              (VP (VBD came)
                (ADVP (RB forward))
                (SBAR (IN until)
                  (S
                    (NP (PRP$ his) (JJ superior))
                    (VP (VBD had)
                      (VP (VBN established)
                        (NP (PRP himself))
                        (PP (IN in)
                          (NP
                            (NP (DT the) (JJ good) (NN graces))
                            (PP (IN of)
                              (NP (DT the) (NNS ladies))))))))))))
          (, ,)
          (NP (DT the) (JJR more) (NN favourable))
          (VP (MD would)
            (VP (VB be)
              (NP (DT the) (NN result)))))))
    (. .)))

nsubj(had-2, Corbett-1)
root(ROOT-0, had-2)
dobj(had-2, sense-3)
amod(sense-3, enough-4)
aux(feel-6, to-5)
xcomp(enough-4, feel-6)
mark(result-34, that-8)
det(less-10, the-9)
dep(came-12, less-10)
nsubj(came-12, he-11)
advcl(result-34, came-12)
advmod(came-12, forward-13)
mark(established-18, until-14)
poss(superior-16, his-15)
nsubj(established-18, superior-16)
aux(established-18, had-17)
advcl(came-12, established-18)
dobj(established-18, himself-19)
det(graces-23, the-21)
amod(graces-23, good-22)
prep_in(established-18, graces-23)
det(ladies-26, the-25)
prep_of(graces-23, ladies-26)
det(favourable-30, the-28)
amod(favourable-30, more-29)
nsubj(result-34, favourable-30)
aux(result-34, would-31)
cop(result-34, be-32)
det(result-34, the-33)
ccomp(had-2, result-34)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN meantime)))
    (NP (NNP Cecilia))
    (VP (VBD had)
      (VP (VBN gone)
        (PRT (RP down))
        (PP (TO to)
          (NP
            (NP (PRP$ her) (NN aunt))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (ADVP (RB still))
                (VP (VBD continued)
                  (S
                    (VP (TO to)
                      (VP (VB wail)
                        (CC and)
                        (VB lament)))))))))))
    (. .)))

det(meantime-3, the-2)
prep_in(gone-6, meantime-3)
nsubj(gone-6, Cecilia-4)
aux(gone-6, had-5)
root(ROOT-0, gone-6)
prt(gone-6, down-7)
poss(aunt-10, her-9)
prep_to(gone-6, aunt-10)
nsubj(continued-14, aunt-10)
nsubj(wail-16, aunt-10)
nsubj(lament-18, aunt-10)
advmod(continued-14, still-13)
rcmod(aunt-10, continued-14)
aux(wail-16, to-15)
xcomp(continued-14, wail-16)
xcomp(continued-14, lament-18)
conj_and(wail-16, lament-18)

(ROOT
  (S
    (NP (DT The) (JJ young) (NN lady))
    (VP (VBD tried)
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP she))
            (VP (MD could)
              (S
                (VP
                  (VP (TO to)
                    (VP (VB console)
                      (NP (PRP her))))
                  (, ,)
                  (CC and)
                  (VP (TO to)
                    (VP (VB persuade)
                      (NP (PRP her))
                      (SBAR (IN that)
                        (S
                          (SBAR (IN if)
                            (S
                              (NP (PRP they))
                              (VP (VBD were)
                                (ADJP (JJ civil)
                                  (CC and)
                                  (JJ obedient)))))
                          (NP (PRP they))
                          (VP (VBD had)
                            (NP
                              (NP (NN nothing))
                              (PP (TO to)
                                (NP (NN fear))))))))))))))))
    (. .)))

det(lady-3, The-1)
amod(lady-3, young-2)
nsubj(tried-4, lady-3)
root(ROOT-0, tried-4)
dobj(tried-4, all-5)
nsubj(could-7, she-6)
rcmod(all-5, could-7)
aux(console-9, to-8)
ccomp(could-7, console-9)
dobj(console-9, her-10)
aux(persuade-14, to-13)
ccomp(could-7, persuade-14)
conj_and(console-9, persuade-14)
dobj(persuade-14, her-15)
mark(had-24, that-16)
mark(civil-20, if-17)
nsubj(civil-20, they-18)
nsubj(obedient-22, they-18)
cop(civil-20, were-19)
advcl(had-24, civil-20)
conj_and(civil-20, obedient-22)
advcl(had-24, obedient-22)
nsubj(had-24, they-23)
ccomp(persuade-14, had-24)
dobj(had-24, nothing-25)
prep_to(nothing-25, fear-27)

(ROOT
  (S (`` ``)
    (VP (VB Civil)
      (CC and)
      (VB obedient) (, ,)
      (ADVP (RB indeed)))
    (. !) ('' '')))

root(ROOT-0, Civil-2)
conj_and(Civil-2, obedient-4)
advmod(Civil-2, indeed-6)

(ROOT
  (SQ
    (VP (VB cried)
      (NP (NNP Miss) (NNP Ossulton))
      (, ,) (`` ``)
      (PP (TO to)
        (NP
          (NP (DT a) (NN fellow))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ is)
                (NP
                  (NP (DT a) (NN smuggler))
                  (CC and)
                  (NP (DT a) (NN pirate)))))))))
    (. !)))

root(ROOT-0, cried-1)
nn(Ossulton-3, Miss-2)
dobj(cried-1, Ossulton-3)
det(fellow-8, a-7)
prep_to(cried-1, fellow-8)
nsubj(smuggler-12, fellow-8)
cop(smuggler-12, is-10)
det(smuggler-12, a-11)
rcmod(fellow-8, smuggler-12)
det(pirate-15, a-14)
rcmod(fellow-8, pirate-15)
conj_and(smuggler-12, pirate-15)

(ROOT
  (NP
    (NP (PRP I))
    (, ,)
    (NP
      (NP (DT the) (NN sister))
      (PP (IN of)
        (NP (NNP Lord) (NNP B))
        (: --)))
    (. !)))

root(ROOT-0, I-1)
det(sister-4, the-3)
appos(I-1, sister-4)
nn(B-7, Lord-6)
prep_of(sister-4, B-7)

(ROOT
  (FRAG
    (ADVP (RB Never))
    (. !)))

root(ROOT-0, Never-1)

(ROOT
  (FRAG
    (NP
      (NP (DT The) (NN presumption))
      (PP (IN of)
        (NP (DT the) (NN wretch))))
    (. !) ('' '')))

det(presumption-2, The-1)
root(ROOT-0, presumption-2)
det(wretch-5, the-4)
prep_of(presumption-2, wretch-5)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ is)
        (ADVP (DT all) (RB very))
        (ADVP (RB well))
        (, ,)
        (NP (NN aunt))))
    (: ;)
    (CC but)
    (S
      (S
        (ADJP (JJ recollect)))
      (, ,)
      (NP (PRP we))
      (VP (MD must)
        (VP (VB submit)
          (PP (TO to)
            (NP (NNS circumstances))))))
    (. .)))

nsubj(aunt-8, That-2)
cop(aunt-8, is-3)
dep(very-5, all-4)
advmod(aunt-8, very-5)
advmod(aunt-8, well-6)
root(ROOT-0, aunt-8)
ccomp(submit-15, recollect-11)
nsubj(submit-15, we-13)
aux(submit-15, must-14)
conj_but(aunt-8, submit-15)
prep_to(submit-15, circumstances-17)

(ROOT
  (S
    (S
      (NP (DT These) (NNS men))
      (VP (VBP insist)
        (PP (IN upon)
          (NP (PRP$ our) (NN dining)))
        (PP (IN with)
          (NP (PRP them)))))
    (: ;)
    (CC and)
    (S
      (S
        (NP (PRP we))
        (VP (MD must)
          (VP (VB go))))
      (, ,)
      (CC or)
      (S
        (NP (PRP we))
        (VP (MD shall)
          (VP (VB have)
            (NP (DT no) (NN dinner))))))
    (. .) ('' '')))

det(men-2, These-1)
nsubj(insist-3, men-2)
root(ROOT-0, insist-3)
poss(dining-6, our-5)
prep_upon(insist-3, dining-6)
prep_with(insist-3, them-8)
nsubj(go-13, we-11)
aux(go-13, must-12)
conj_and(insist-3, go-13)
nsubj(have-18, we-16)
aux(have-18, shall-17)
conj_and(insist-3, have-18)
conj_or(go-13, have-18)
neg(dinner-20, no-19)
dobj(have-18, dinner-20)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (, ,)
    (VP (VB sit)
      (PRT (RP down))
      (PP (IN with)
        (NP (DT a) (NN pirate))))
    (. !)))

nsubj(sit-4, I-2)
root(ROOT-0, sit-4)
prt(sit-4, down-5)
det(pirate-8, a-7)
prep_with(sit-4, pirate-8)

(ROOT
  (FRAG
    (ADVP (RB Never))
    (. !)))

root(ROOT-0, Never-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB have)
        (NP
          (NP (DT no) (NN dinner))
          (PRN (: --)
            (S
              (NP (PRP I))
              (VP (MD 'll)
                (VP (VB starve))))
            (: --))
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD 'll)
                (VP (VB die))))))))
    (. !) ('' '')))

nsubj(have-3, I-1)
aux(have-3, 'll-2)
root(ROOT-0, have-3)
neg(dinner-5, no-4)
dobj(have-3, dinner-5)
nsubj(starve-9, I-7)
aux(starve-9, 'll-8)
dep(dinner-5, starve-9)
nsubj(die-13, I-11)
aux(die-13, 'll-12)
rcmod(dinner-5, die-13)

(ROOT
  (S (`` ``)
    (CC But)
    (S
      (SBAR
        (PRN (, ,)
          (NP (PRP$ my) (JJ dear) (NN aunt))
          (, ,))
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP (DT the) (JJ only) (NN chance)))))
      (NP (PRP we))
      (VP (VBP have)
        (PP (IN of)
          (S
            (VP (VBG obtaining)
              (NP (PRP$ our) (NN release)))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB not)
            (VP (VB do)
              (NP (PRP it))))))
      (NP (NNP Mrs) (NNP Lascelles))
      (VP (MD will)
        (VP (VB think)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP wish)
                (S
                  (VP (TO to)
                    (VP (VB remain)
                      (PP (IN with)
                        (NP (PRP them))))))))))))
    (. .) ('' '')))

poss(aunt-6, my-4)
amod(aunt-6, dear-5)
dep(chance-12, aunt-6)
nsubj(chance-12, it-8)
cop(chance-12, 's-9)
det(chance-12, the-10)
amod(chance-12, only-11)
advcl(have-14, chance-12)
nsubj(have-14, we-13)
root(ROOT-0, have-14)
prepc_of(have-14, obtaining-16)
poss(release-18, our-17)
dobj(obtaining-16, release-18)
mark(do-25, if-21)
nsubj(do-25, you-22)
aux(do-25, do-23)
neg(do-25, not-24)
advcl(think-30, do-25)
dobj(do-25, it-26)
nn(Lascelles-28, Mrs-27)
nsubj(think-30, Lascelles-28)
aux(think-30, will-29)
conj_and(have-14, think-30)
mark(wish-33, that-31)
nsubj(wish-33, you-32)
nsubj(remain-35, you-32)
ccomp(think-30, wish-33)
aux(remain-35, to-34)
xcomp(wish-33, remain-35)
prep_with(remain-35, them-37)

(ROOT
  (S (`` ``)
    (NP (NNP Mrs))
    (VP (VBZ Lascelles)
      (NP
        (NP (NNS judges))
        (PP (IN of)
          (NP (JJ other) (NNS people))))
      (PP (IN by)
        (NP (PRP herself))))
    (. .) ('' '')))

nsubj(Lascelles-3, Mrs-2)
root(ROOT-0, Lascelles-3)
dobj(Lascelles-3, judges-4)
amod(people-7, other-6)
prep_of(judges-4, people-7)
prep_by(Lascelles-3, herself-9)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN captain))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (NP (DT a)
        (ADJP (RB very) (JJ well-behaved))
        (, ,) (JJ handsome) (NN man)))
    (. .)))

det(captain-3, The-2)
nsubj(man-11, captain-3)
cop(man-11, is-4)
advmod(man-11, certainly-5)
det(man-11, a-6)
advmod(well-behaved-8, very-7)
amod(man-11, well-behaved-8)
amod(man-11, handsome-10)
root(ROOT-0, man-11)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ looks)
      (PP (IN like)
        (NP
          (NP (DT a) (NN nobleman))
          (PP (IN in)
            (NP (NNP disguise))))))
    (. .)))

nsubj(looks-2, He-1)
root(ROOT-0, looks-2)
det(nobleman-5, a-4)
prep_like(looks-2, nobleman-5)
prep_in(nobleman-5, disguise-7)

(ROOT
  (S
    (SBAR
      (X
        (X (WP What))
        (NP (DT an) (JJ odd) (NN thing)))
      (S
        (NP (PRP it))
        (VP (MD would)
          (VP (VB be)))))
    (, ,)
    (NP
      (NP (NN aunt))
      (, ,)
      (SBAR (IN if)
        (FRAG
          (NP (DT this)))))
    (VP (MD should)
      (VP (VB be)
        (NP (PDT all) (DT a) (NN hoax))))
    (. !) ('' '')))

dep(thing-4, What-1)
det(thing-4, an-2)
amod(thing-4, odd-3)
dep(be-7, thing-4)
nsubj(be-7, it-5)
aux(be-7, would-6)
advcl(hoax-17, be-7)
nsubj(hoax-17, aunt-9)
mark(this-12, if-11)
dep(aunt-9, this-12)
aux(hoax-17, should-13)
cop(hoax-17, be-14)
predet(hoax-17, all-15)
det(hoax-17, a-16)
root(ROOT-0, hoax-17)

(ROOT
  (FRAG (`` ``)
    (NP (DT A) (NN hoax))
    (, ,)
    (NP (NN child))
    (. ?) ('' '')))

det(hoax-3, A-2)
root(ROOT-0, hoax-3)
dep(hoax-3, child-5)

(ROOT
  (S
    (VP (VBD replied)
      (NP (NNP Miss) (NNP Ossulton))
      (, ,)
      (S
        (VP (VBG sitting)
          (PRT (RP up))
          (PP (IN on)
            (NP (DT the) (NN sofa))))))
    (. .)))

root(ROOT-0, replied-1)
nn(Ossulton-3, Miss-2)
dobj(replied-1, Ossulton-3)
vmod(replied-1, sitting-5)
prt(sitting-5, up-6)
det(sofa-9, the-8)
prep_on(sitting-5, sofa-9)

(ROOT
  (S
    (S
      (NP (NNP Cecilia))
      (VP (VBD found)
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBD had)
              (VP (VBN hit)
                (NP (DT the) (NN right))
                (ADVP (NN nail))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (DT the) (NN saying))
                    (VP (VBZ is))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD brought)
        (PRT (RP forward))
        (NP
          (ADJP (RB so) (JJ many))
          (NNS arguments))
        (S
          (VP (TO to)
            (VP (VB prove)
              (SBAR
                (SBAR (IN that)
                  (S
                    (NP (PRP she))
                    (VP (VBD thought)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (VBD was)
                            (NP (DT a) (NN hoax)
                              (S
                                (VP (TO to)
                                  (VP (VB frighten)
                                    (NP (PRP them))))))))))))
                (, ,)
                (CC and)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN gentleman))
                    (ADVP (RB above))
                    (VP (VBD was)
                      (NP
                        (NP (DT a) (NN man))
                        (PP (IN of)
                          (NP (NN consequence))))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP (PRP$ her) (NN aunt))
                          (VP (VBD began)
                            (S
                              (VP (TO to)
                                (VP (VB listen)
                                  (PP
                                    (PP (TO to)
                                      (NP (NN reason)))
                                    (, ,)
                                    (CC and)
                                    (PP (IN at)
                                      (NP (JJ last) (NNS consented))))
                                  (S
                                    (VP (TO to)
                                      (VP (VB join)
                                        (NP (DT the) (NN dinner-party))))))))))))))))))))
    (. .)))

nsubj(found-2, Cecilia-1)
root(ROOT-0, found-2)
mark(hit-6, that-3)
nsubj(hit-6, she-4)
aux(hit-6, had-5)
ccomp(found-2, hit-6)
det(right-8, the-7)
dobj(hit-6, right-8)
advmod(hit-6, nail-9)
mark(is-14, as-11)
det(saying-13, the-12)
nsubj(is-14, saying-13)
advcl(hit-6, is-14)
nsubj(brought-18, she-17)
conj_and(found-2, brought-18)
prt(brought-18, forward-19)
advmod(many-21, so-20)
amod(arguments-22, many-21)
dobj(brought-18, arguments-22)
aux(prove-24, to-23)
vmod(brought-18, prove-24)
mark(thought-27, that-25)
nsubj(thought-27, she-26)
ccomp(prove-24, thought-27)
nsubj(hoax-31, it-28)
cop(hoax-31, was-29)
det(hoax-31, a-30)
ccomp(thought-27, hoax-31)
aux(frighten-33, to-32)
vmod(hoax-31, frighten-33)
dobj(frighten-33, them-34)
mark(man-43, that-37)
det(gentleman-39, the-38)
nsubj(man-43, gentleman-39)
advmod(man-43, above-40)
cop(man-43, was-41)
det(man-43, a-42)
ccomp(prove-24, man-43)
conj_and(thought-27, man-43)
prep_of(man-43, consequence-45)
mark(began-50, that-47)
poss(aunt-49, her-48)
nsubj(began-50, aunt-49)
nsubj(listen-52, aunt-49)
nsubj(listen-52', aunt-49)
nsubj(join-61, aunt-49)
ccomp(man-43, began-50)
aux(listen-52, to-51)
xcomp(began-50, listen-52)
xcomp(began-50, listen-52')
conj_and(listen-52, listen-52')
prep_to(listen-52, reason-54)
amod(consented-59, last-58)
prep_at(listen-52', consented-59)
aux(join-61, to-60)
xcomp(listen-52, join-61)
det(dinner-party-63, the-62)
dobj(join-61, dinner-party-63)

(ROOT
  (S
    (S
      (NP (NNP Mrs) (NNP Lascelles))
      (ADVP (RB now))
      (VP (VBD came)
        (PRT (RP down))
        (ADVP (RB below))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NN dinner))
          (VP (VBD was)
            (VP (VBN announced)))))
      (NP (PRP they))
      (VP (VBD repaired)
        (PP (TO to)
          (NP (DT the) (JJ large) (NN cabin)))
        (, ,)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP they))
            (VP (VBD found)
              (S
                (NP (NNP Pickersgill)
                  (CC and)
                  (NNP Corbett))
                (VP (VBG waiting)
                  (PP (IN for)
                    (NP (PRP them))))))))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(came-4, Lascelles-2)
advmod(came-4, now-3)
root(ROOT-0, came-4)
prt(came-4, down-5)
advmod(came-4, below-6)
advmod(announced-12, when-9)
nsubjpass(announced-12, dinner-10)
auxpass(announced-12, was-11)
advcl(repaired-14, announced-12)
nsubj(repaired-14, they-13)
conj_and(came-4, repaired-14)
det(cabin-18, the-16)
amod(cabin-18, large-17)
prep_to(repaired-14, cabin-18)
advmod(found-22, where-20)
nsubj(found-22, they-21)
advcl(repaired-14, found-22)
nsubj(waiting-26, Pickersgill-23)
conj_and(Pickersgill-23, Corbett-25)
nsubj(waiting-26, Corbett-25)
dep(found-22, waiting-26)
prep_for(waiting-26, them-28)

(ROOT
  (S
    (S
      (NP (NNP Miss) (NNP Ossulton))
      (VP (VBD did) (RB not)
        (VP (VB venture)
          (S
            (VP (TO to)
              (VP (VB look)
                (PRT (RP up))))))))
    (PRN (, ,)
      (SBAR (IN until)
        (S
          (NP (PRP she))
          (VP (VBD heard)
            (SBAR
              (S
                (NP (NNP Pickersgill))
                (VP (VBP say)
                  (PP (TO to)
                    (NP (NNP Mrs) (NNPS Lascelles)))))))))
      (, ,))
    (`` ``)
    (S
      (ADVP (RB Perhaps))
      (, ,)
      (ADVP (RB madam))
      (, ,)
      (NP (PRP you))
      (VP (MD will)
        (VP (VB do)
          (NP (PRP me))
          (NP (DT the) (NN favour)
            (S
              (VP (TO to)
                (VP (VB introduce)
                  (NP (PRP me))
                  (PP (TO to)
                    (NP
                      (NP (DT that) (NN lady))
                      (, ,)
                      (SBAR
                        (WHNP (WP whom))
                        (S
                          (NP (PRP I))
                          (VP (VBP have) (RB not)
                            (VP (VBN had)
                              (NP
                                (NP (DT the) (NN honour))
                                (PP (IN of)
                                  (S
                                    (VP (VBG seeing)
                                      (ADVP (RB before)))))))))))))))))))
    (. ?) ('' '')))

nn(Ossulton-2, Miss-1)
nsubj(venture-5, Ossulton-2)
nsubj(look-7, Ossulton-2)
aux(venture-5, did-3)
neg(venture-5, not-4)
root(ROOT-0, venture-5)
aux(look-7, to-6)
xcomp(venture-5, look-7)
prt(look-7, up-8)
mark(heard-12, until-10)
nsubj(heard-12, she-11)
dep(venture-5, heard-12)
nsubj(say-14, Pickersgill-13)
ccomp(heard-12, say-14)
nn(Lascelles-17, Mrs-16)
prep_to(say-14, Lascelles-17)
advmod(do-26, Perhaps-20)
advmod(do-26, madam-22)
nsubj(do-26, you-24)
aux(do-26, will-25)
parataxis(venture-5, do-26)
iobj(do-26, me-27)
det(favour-29, the-28)
dobj(do-26, favour-29)
aux(introduce-31, to-30)
vmod(favour-29, introduce-31)
dobj(introduce-31, me-32)
det(lady-35, that-34)
prep_to(introduce-31, lady-35)
dobj(had-41, lady-35)
nsubj(had-41, I-38)
aux(had-41, have-39)
neg(had-41, not-40)
rcmod(lady-35, had-41)
det(honour-43, the-42)
dobj(had-41, honour-43)
prepc_of(honour-43, seeing-45)
advmod(seeing-45, before-46)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Certainly))
      (, ,)
      (NP (PRP$ my))
      (VP (VBD lord)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Mrs) (NNP Lascelles))
    (. .)))

advmod(lord-5, Certainly-2)
nsubj(lord-5, my-4)
ccomp(replied-8, lord-5)
root(ROOT-0, replied-8)
nn(Lascelles-10, Mrs-9)
nsubj(replied-8, Lascelles-10)

(ROOT
  (S (`` ``)
    (NP (NNP Miss))
    (VP
      (VP (VBZ Ossulton))
      (, ,)
      (NP
        (NP (DT the) (NN aunt))
        (PP (IN of)
          (NP (DT this) (JJ young) (NN lady)))))
    (. .) ('' '')))

nsubj(Ossulton-3, Miss-2)
root(ROOT-0, Ossulton-3)
det(aunt-6, the-5)
dobj(Ossulton-3, aunt-6)
det(lady-10, this-8)
amod(lady-10, young-9)
prep_of(aunt-6, lady-10)

(ROOT
  (S
    (NP (NNP Mrs) (NNP Lascelles))
    (ADVP (RB purposely))
    (VP (VBD did) (RB not)
      (VP (VB introduce)
        (S
          (VP (VBG _)
            (NP (PRP$ his) (NN lordship) (NN _))
            (PP (IN in)
              (NP (NN return)))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (MD might)
              (VP (VB mystify)
                (NP (DT the) (JJ old) (NN spinster))))))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(introduce-6, Lascelles-2)
advmod(introduce-6, purposely-3)
aux(introduce-6, did-4)
neg(introduce-6, not-5)
root(ROOT-0, introduce-6)
xcomp(introduce-6, _-7)
poss(_-10, his-8)
nn(_-10, lordship-9)
dobj(_-7, _-10)
prep_in(_-7, return-12)
mark(mystify-17, that-14)
nsubj(mystify-17, she-15)
aux(mystify-17, might-16)
ccomp(introduce-6, mystify-17)
det(spinster-20, the-18)
amod(spinster-20, old-19)
dobj(mystify-17, spinster-20)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP feel)
        (ADJP (RB highly) (VBN honoured)
          (PP (IN in)
            (NP
              (NP (NN finding))
              (, ,)
              (NP
                (NP (PRP myself))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN company))
                    (PP (IN of)
                      (NP (NNP Miss) (NNP Ossulton)))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Pickersgill))
    (. .)))

nsubj(feel-3, I-2)
ccomp(said-18, feel-3)
advmod(honoured-5, highly-4)
acomp(feel-3, honoured-5)
prep_in(honoured-5, finding-7)
appos(finding-7, myself-9)
det(company-12, the-11)
prep_in(myself-9, company-12)
nn(Ossulton-15, Miss-14)
prep_of(company-12, Ossulton-15)
root(ROOT-0, said-18)
nsubj(said-18, Pickersgill-19)

(ROOT
  (S (`` ``)
    (INTJ (UH Ladies))
    (, ,)
    (NP (PRP we))
    (VP (VBP wait)
      (PP (CC but)
        (PP (IN for)
          (NP (PRP you))))
      (S
        (VP (TO to)
          (VP (VB sit)
            (PRT (RP down))))))
    (. .)))

discourse(wait-5, Ladies-2)
nsubj(wait-5, we-4)
nsubj(sit-10, we-4)
root(ROOT-0, wait-5)
cc(wait-5, but-6)
prep_for(wait-5, you-8)
aux(sit-10, to-9)
xcomp(wait-5, sit-10)
prt(sit-10, down-11)

(ROOT
  (S
    (VP
      (VP (VB Ossulton))
      (, ,)
      (VP (VB take)
        (NP
          (NP (DT the) (NN head))
          (PP (IN of)
            (NP (DT the) (NN table)))))
      (CC and)
      (VP (VB serve)
        (NP (DT the) (NN soup))))
    (. .) ('' '')))

root(ROOT-0, Ossulton-1)
conj_and(Ossulton-1, take-3)
det(head-5, the-4)
dobj(take-3, head-5)
det(table-8, the-7)
prep_of(head-5, table-8)
conj_and(Ossulton-1, serve-10)
det(soup-12, the-11)
dobj(serve-10, soup-12)

(ROOT
  (S
    (S
      (NP (NNP Miss) (NNP Ossulton))
      (VP (VBD was)
        (VP (VBN astonished))))
    (: ;)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD looked)
          (PP (IN at)
            (NP (DT the) (NNS smugglers))))
        (, ,)
        (CC and)
        (VP (VBD perceived)
          (NP
            (NP (CD two) (JJ well-dressed) (NN gentlemanly) (NNS men))
            (, ,)
            (SBAR
              (WHNP (CD one)
                (WHPP (IN of)
                  (WHNP (WP whom))))
              (S
                (VP (VBD was)
                  (ADVP (RB apparently))
                  (NP
                    (NP (DT a) (NN lord))
                    (CC and)
                    (NP
                      (NP (DT the) (JJ other))
                      (VP (VBG having)
                        (NP (DT the) (JJ same) (NN family) (NN name))))))))))))
    (. .)))

nn(Ossulton-2, Miss-1)
nsubjpass(astonished-4, Ossulton-2)
auxpass(astonished-4, was-3)
root(ROOT-0, astonished-4)
nsubj(looked-7, she-6)
nsubj(perceived-13, she-6)
parataxis(astonished-4, looked-7)
det(smugglers-10, the-9)
prep_at(looked-7, smugglers-10)
parataxis(astonished-4, perceived-13)
conj_and(looked-7, perceived-13)
num(men-17, two-14)
amod(men-17, well-dressed-15)
nn(men-17, gentlemanly-16)
dobj(perceived-13, men-17)
prep_of(one-19, men-17)
nsubj(lord-25, one-19)
nsubj(other-28, one-19)
cop(lord-25, was-22)
advmod(lord-25, apparently-23)
det(lord-25, a-24)
rcmod(men-17, lord-25)
det(other-28, the-27)
rcmod(men-17, other-28)
conj_and(lord-25, other-28)
vmod(other-28, having-29)
det(name-33, the-30)
amod(name-33, same-31)
nn(name-33, family-32)
dobj(having-29, name-33)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (MD must)
        (VP (VB be)
          (NP (PDT all) (DT a) (NN hoax)))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD thought))
        (NP (PRP she)))
      (, ,))
    (CC and)
    (S
      (NP (PRP she))
      (ADVP (RB very) (RB quietly))
      (VP (VBD took)
        (PP (TO to)
          (NP (PRP$ her) (NN soup)))))
    (. .)))

nsubj(hoax-7, It-2)
aux(hoax-7, must-3)
cop(hoax-7, be-4)
predet(hoax-7, all-5)
det(hoax-7, a-6)
root(ROOT-0, hoax-7)
dep(hoax-7, thought-10)
nsubj(thought-10, she-11)
nsubj(took-17, she-14)
advmod(quietly-16, very-15)
advmod(took-17, quietly-16)
conj_and(hoax-7, took-17)
poss(soup-20, her-19)
prep_to(took-17, soup-20)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN dinner))
        (VP (VBD passed)
          (PRT (RP off))
          (S
            (ADJP (RB very) (JJ pleasantly)))))
      (: ;)
      (S
        (NP (NNP Pickersgill))
        (VP (VBD was)
          (ADJP (JJ agreeable)))))
    (, ,)
    (S
      (NP (NNP Corbett))
      (ADJP (JJ funny)))
    (, ,)
    (CC and)
    (S
      (NP (NNP Miss) (NNP Ossulton))
      (VP
        (ADVP (RB so) (RB far))
        (VBD recovered)
        (NP (PRP herself))
        (SBAR (IN as)
          (S
            (VP
              (VP (TO to)
                (VP (VB drink)
                  (NP (NN wine))
                  (PP (IN with)
                    (NP (PRP$ his) (NN lordship)))))
              (, ,)
              (CC and)
              (VP (TO to)
                (VP (VB ask)
                  (NP
                    (NP (NNP Corbett))
                    (SBAR
                      (WHNP (WP what) (NN branch)
                        (PP (IN of)
                          (NP (PRP$ their) (NN family))))
                      (S
                        (NP (PRP he))
                        (VP (VBD belonged)
                          (PP (TO to)))))))))))))
    (. .)))

det(dinner-2, The-1)
nsubj(passed-3, dinner-2)
nsubj(funny-13, dinner-2)
root(ROOT-0, passed-3)
prt(passed-3, off-4)
advmod(pleasantly-6, very-5)
dep(passed-3, pleasantly-6)
nsubj(agreeable-10, Pickersgill-8)
cop(agreeable-10, was-9)
parataxis(passed-3, agreeable-10)
dep(funny-13, Corbett-12)
ccomp(passed-3, funny-13)
conj_and(passed-3, funny-13)
nn(Ossulton-17, Miss-16)
nsubj(recovered-20, Ossulton-17)
advmod(far-19, so-18)
advmod(recovered-20, far-19)
conj_and(passed-3, recovered-20)
dobj(recovered-20, herself-21)
mark(drink-24, as-22)
aux(drink-24, to-23)
advcl(recovered-20, drink-24)
dobj(drink-24, wine-25)
poss(lordship-28, his-27)
prep_with(drink-24, lordship-28)
aux(ask-32, to-31)
advcl(recovered-20, ask-32)
conj_and(drink-24, ask-32)
dobj(ask-32, Corbett-33)
det(branch-35, Corbett-33)
prep_to(belonged-40, branch-35)
poss(family-38, their-37)
prep_of(branch-35, family-38)
nsubj(belonged-40, he-39)
rcmod(Corbett-33, belonged-40)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP presume)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP (DT the) (JJ Irish) (NN branch))))))
    (. ?) ('' '')))

nsubj(presume-3, I-2)
root(ROOT-0, presume-3)
nsubj(branch-8, it-4)
cop(branch-8, 's-5)
det(branch-8, the-6)
amod(branch-8, Irish-7)
ccomp(presume-3, branch-8)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Mrs) (NNP Lascelles))
      (, ,)
      (S
        (VP (VBG prompting)
          (NP (PRP him)))))
    (. .)))

root(ROOT-0, said-1)
nn(Lascelles-3, Mrs-2)
dobj(said-1, Lascelles-3)
vmod(said-1, prompting-5)
dobj(prompting-5, him-6)

(ROOT
  (SINV (`` ``)
    (NP
      (NP (NNP Exactly))
      (, ,)
      (NP (NN madam)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Corbett))
    (. .)))

dep(replied-7, Exactly-2)
appos(Exactly-2, madam-4)
root(ROOT-0, replied-7)
nsubj(replied-7, Corbett-8)

(ROOT
  (S (`` ``)
    (VP (VB Have)
      (S
        (NP (PRP you))
        (VP
          (ADVP (RB ever))
          (VBN been)
          (PP (TO to)
            (NP
              (NP (NNP Torquay))
              (, ,)
              (NP (NNS ladies)))))))
    (. ?) ('' '')))

root(ROOT-0, Have-2)
nsubj(been-5, you-3)
advmod(been-5, ever-4)
ccomp(Have-2, been-5)
prep_to(been-5, Torquay-7)
appos(Torquay-7, ladies-9)

(ROOT
  (NP (NNP inquired) (NNP Pickersgill) (. .)))

nn(Pickersgill-2, inquired-1)
root(ROOT-0, Pickersgill-2)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH No))
      (, ,)
      (NP (PRP$ my) (NN lord)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Mrs) (NNP Lascelles))
    (. .)))

discourse(lord-5, No-2)
poss(lord-5, my-4)
dep(answered-8, lord-5)
root(ROOT-0, answered-8)
nn(Lascelles-10, Mrs-9)
dep(answered-8, Lascelles-10)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD shall)
      (VP
        (VP (VB anchor)
          (ADVP (RB there))
          (PP (IN in)
            (NP
              (NP (DT the) (NN course))
              (PP (IN of)
                (NP (DT an) (NN hour))))))
        (, ,)
        (CC and)
        (ADVP (RB probably))
        (VP (VB remain)
          (S
            (NP (EX there))
            (PP (IN till)
              (NP (NN to-morrow)))))))
    (. .)))

nsubj(anchor-4, We-2)
nsubj(remain-15, We-2)
aux(anchor-4, shall-3)
root(ROOT-0, anchor-4)
advmod(anchor-4, there-5)
det(course-8, the-7)
prep_in(anchor-4, course-8)
det(hour-11, an-10)
prep_of(course-8, hour-11)
advmod(remain-15, probably-14)
conj_and(anchor-4, remain-15)
dep(remain-15, there-16)
dep(there-16, till-17)
pobj(till-17, to-morrow-18)

(ROOT
  (S
    (NP (NNP Steward))
    (, ,)
    (VP (VB bring)
      (NP (NN coffee)))
    (. .)))

nsubj(bring-3, Steward-1)
root(ROOT-0, bring-3)
dobj(bring-3, coffee-4)

(ROOT
  (S
    (VP (VB Tell)
      (NP
        (NP (DT the) (NN cook))
        (SBAR
          (S
            (NP (DT these) (NNS cutlets))
            (VP (VBD were)
              (ADJP (RB remarkably) (JJ well-dressed)))))))
    (. .) ('' '')))

root(ROOT-0, Tell-1)
det(cook-3, the-2)
dobj(Tell-1, cook-3)
det(cutlets-5, these-4)
nsubj(well-dressed-8, cutlets-5)
cop(well-dressed-8, were-6)
advmod(well-dressed-8, remarkably-7)
rcmod(cook-3, well-dressed-8)

(ROOT
  (S
    (NP (DT The) (NNS ladies))
    (VP (VBD retired)
      (PP (TO to)
        (NP (PRP$ their) (NN cabin))))
    (. .)))

det(ladies-2, The-1)
nsubj(retired-3, ladies-2)
root(ROOT-0, retired-3)
poss(cabin-6, their-5)
prep_to(retired-3, cabin-6)

(ROOT
  (S
    (S
      (NP (NNP Miss) (NNP Ossulton))
      (VP (VBD was)
        (ADVP (RB now))
        (VP (VBN convinced)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (NP (PDT all) (DT a) (NN hoax))))))))
    (: ;) (`` ``)
    (S
      (ADVP (CC but))
      (PRN (, ,) ('' '')
        (SINV
          (VP (VBD said))
          (NP (PRP she)))
        (, ,) (`` ``))
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB tell)
          (NP
            (NP (NNP Lord) (NNP B))
            (: --)
            (NP
              (NP (PRP$ my) (NN opinion))
              (PP (IN of)
                (NP (PRP$ their) (JJ practical) (NNS jokes)))))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBZ returns)))))))
    (. .)))

nn(Ossulton-2, Miss-1)
nsubjpass(convinced-5, Ossulton-2)
auxpass(convinced-5, was-3)
advmod(convinced-5, now-4)
root(ROOT-0, convinced-5)
mark(hoax-11, that-6)
nsubj(hoax-11, it-7)
cop(hoax-11, was-8)
predet(hoax-11, all-9)
det(hoax-11, a-10)
ccomp(convinced-5, hoax-11)
advmod(tell-23, but-14)
parataxis(tell-23, said-17)
nsubj(said-17, she-18)
nsubj(tell-23, I-21)
aux(tell-23, shall-22)
parataxis(convinced-5, tell-23)
nn(B-25, Lord-24)
dobj(tell-23, B-25)
poss(opinion-28, my-27)
dep(B-25, opinion-28)
poss(jokes-32, their-30)
amod(jokes-32, practical-31)
prep_of(opinion-28, jokes-32)
advmod(returns-35, when-33)
nsubj(returns-35, he-34)
ccomp(tell-23, returns-35)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP
          (NP (PRP$ his) (NN lordship) (POS 's))
          (NN name))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ is)
              (PP (IN on)
                (NP (NN board))))))))
    (. ?) ('' '')))

root(ROOT-0, What-1)
cop(What-1, is-2)
poss(lordship-4, his-3)
poss(name-6, lordship-4)
nsubj(What-1, name-6)
nsubj(is-8, name-6)
rcmod(name-6, is-8)
prep_on(is-8, board-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP He))
      (VP (MD wo) (RB n't)
        (VP (VB tell)
          (NP (PRP us)))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD replied))
        (NP (NNP Mrs) (NNP Lascelles))))
    (: ;) (`` ``)
    (CC but)
    (S
      (S
        (NP (PRP I))
        (VP (VBP think)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP know))))))
      (: ;)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP (NNP Lord) (NNP Blarney)))))
    (. .) ('' '')))

nsubj(tell-5, He-2)
aux(tell-5, wo-3)
neg(tell-5, n't-4)
root(ROOT-0, tell-5)
dobj(tell-5, us-6)
dep(tell-5, replied-9)
nn(Lascelles-11, Mrs-10)
nsubj(replied-9, Lascelles-11)
nsubj(think-16, I-15)
conj_but(tell-5, think-16)
nsubj(know-18, I-17)
ccomp(think-16, know-18)
nsubj(Blarney-23, it-20)
cop(Blarney-23, is-21)
nn(Blarney-23, Lord-22)
parataxis(think-16, Blarney-23)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Lord) (NNP Blaney) (PRP you))
      (VP (VBP mean) (, ,)
        (S
          (NP (PRP I))
          (ADJP (JJ presume)))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (NNP Miss) (NNP Ossulton))))
    (: ;) (`` ``)
    (S
      (ADVP (RB however))
      (NP (DT the) (NN thing))
      (VP (VBZ is)
        (VP (VBN carried)
          (ADVP (RB too) (RB far)))))
    (. .)))

nn(Blaney-3, Lord-2)
nsubj(mean-5, Blaney-3)
dep(Blaney-3, you-4)
root(ROOT-0, mean-5)
nsubj(presume-8, I-7)
xcomp(mean-5, presume-8)
dep(mean-5, said-11)
nn(Ossulton-13, Miss-12)
nsubj(said-11, Ossulton-13)
advmod(carried-20, however-16)
det(thing-18, the-17)
nsubjpass(carried-20, thing-18)
auxpass(carried-20, is-19)
parataxis(mean-5, carried-20)
advmod(far-22, too-21)
advmod(carried-20, far-22)

(ROOT
  (S
    (ADVP (RB Cecilia))
    (, ,)
    (NP (PRP we))
    (VP (MD will)
      (VP
        (VP (VB go)
          (PP (IN on)
            (S
              (VP (NN shore)
                (PP (IN at)
                  (NP (NNP Torquay)))))))
        (, ,)
        (CC and)
        (VP (VB wait)
          (SBAR (IN till)
            (S
              (NP (DT the) (NN yacht))
              (VP (VBZ returns)
                (PP (IN with)
                  (NP (NNP Lord) (NNP B)))))))))
    (: --) (. .)))

advmod(go-5, Cecilia-1)
nsubj(go-5, we-3)
nsubj(wait-12, we-3)
aux(go-5, will-4)
root(ROOT-0, go-5)
prepc_on(go-5, shore-7)
prep_at(shore-7, Torquay-9)
conj_and(go-5, wait-12)
mark(returns-16, till-13)
det(yacht-15, the-14)
nsubj(returns-16, yacht-15)
advcl(wait-12, returns-16)
nn(B-19, Lord-18)
prep_with(returns-16, B-19)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB like)
          (NP (DT these) (NNS jokes)))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (MD may)
        (VP (VB do)
          (ADVP (RB very) (RB well))
          (PP (IN for)
            (NP
              (NP (NNS widows))
              (, ,)
              (CC and)
              (NP
                (NP (NNS people))
                (PP (IN of)
                  (NP (DT no) (NN rank)))))))))
    (. .) ('' '')))

nsubj(like-4, I-1)
aux(like-4, do-2)
neg(like-4, n't-3)
root(ROOT-0, like-4)
det(jokes-6, these-5)
dobj(like-4, jokes-6)
nsubj(do-10, they-8)
aux(do-10, may-9)
parataxis(like-4, do-10)
advmod(well-12, very-11)
advmod(do-10, well-12)
prep_for(do-10, widows-14)
prep_for(do-10, people-17)
conj_and(widows-14, people-17)
neg(rank-20, no-19)
prep_of(people-17, rank-20)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (NNP Mrs) (NNP Lascelles))
    (VP (VBD was)
      (ADJP (JJ sorry)
        (S
          (VP (TO to)
            (VP (VB find)
              (NP (NNP Miss) (NNP Ossulton))
              (ADVP (RB so) (RB much))
              (PP (IN at)
                (NP (PRP$ her) (NN ease))))))))
    (. .)))

advmod(sorry-5, Now-1)
nn(Lascelles-3, Mrs-2)
nsubj(sorry-5, Lascelles-3)
nsubj(find-7, Lascelles-3)
cop(sorry-5, was-4)
root(ROOT-0, sorry-5)
aux(find-7, to-6)
xcomp(sorry-5, find-7)
nn(Ossulton-9, Miss-8)
dobj(find-7, Ossulton-9)
advmod(much-11, so-10)
advmod(find-7, much-11)
poss(ease-14, her-13)
prep_at(find-7, ease-14)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD owed)
        (NP (PRP her))
        (NP (DT no) (JJ little) (NN spite)))
      (, ,)
      (CC and)
      (VP (VBD wished)
        (PP (IN for)
          (NP (NN revenge)))))
    (. .)))

nsubj(owed-2, She-1)
nsubj(wished-9, She-1)
root(ROOT-0, owed-2)
iobj(owed-2, her-3)
neg(spite-6, no-4)
amod(spite-6, little-5)
dobj(owed-2, spite-6)
conj_and(owed-2, wished-9)
prep_for(wished-9, revenge-11)

(ROOT
  (S
    (NP (NNP Ladies))
    (VP (MD will)
      (VP (VB go)
        (ADVP (RB very) (RB far))
        (S
          (VP (TO to)
            (VP (VB obtain)
              (NP (DT this)))))))
    (. .)))

nsubj(go-3, Ladies-1)
nsubj(obtain-7, Ladies-1)
aux(go-3, will-2)
root(ROOT-0, go-3)
advmod(far-5, very-4)
advmod(go-3, far-5)
aux(obtain-7, to-6)
xcomp(go-3, obtain-7)
dobj(obtain-7, this-8)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB How) (RB far))
        (S
          (NP (NNP Mrs) (NNP Lascelles))
          (VP (MD would)
            (VP (VB have)
              (VP (VBN gone))))))
      (, ,)
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB pretend)
          (S
            (VP (TO to)
              (VP (VB say)))))))
    (: ;)
    (CC but)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (ADJP (JJ certain))
        (, ,)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (JJ last) (NN innuendo))
              (PP (IN of)
                (NP (NNP Miss) (NNP Ossulton))))
            (ADVP (RB very) (RB much))
            (VP (VBD added)
              (PP (TO to)
                (NP (PRP$ her) (NN determination))))))))
    (. .)))

advmod(far-2, How-1)
advmod(gone-7, far-2)
nn(Lascelles-4, Mrs-3)
nsubj(gone-7, Lascelles-4)
aux(gone-7, would-5)
aux(gone-7, have-6)
advcl(pretend-12, gone-7)
nsubj(pretend-12, I-9)
nsubj(say-14, I-9)
aux(pretend-12, will-10)
neg(pretend-12, not-11)
root(ROOT-0, pretend-12)
aux(say-14, to-13)
xcomp(pretend-12, say-14)
nsubj(certain-19, this-17)
cop(certain-19, is-18)
conj_but(pretend-12, certain-19)
mark(added-30, that-21)
det(innuendo-24, the-22)
amod(innuendo-24, last-23)
nsubj(added-30, innuendo-24)
nn(Ossulton-27, Miss-26)
prep_of(innuendo-24, Ossulton-27)
advmod(much-29, very-28)
advmod(added-30, much-29)
ccomp(certain-19, added-30)
poss(determination-33, her-32)
prep_to(added-30, determination-33)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD took)
        (NP (PRP$ her) (NN bonnet)))
      (CC and)
      (VP (VBD went)
        (PP (IN on)
          (NP (NN deck))))
      (, ,)
      (VP
        (ADVP (IN at) (RB once))
        (VBD told)
        (NP
          (NP (NNP Pickersgill))
          (UCP
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (MD could) (RB not)
                  (VP (VB please)
                    (NP (PRP her))))))
            (CC or)
            (PP
              (ADVP
                (NP (NNP Cecilia))
                (RBR more))
              (IN than) (IN by)
              (NP
                (NP (NNP frightening) (NNP Miss) (NNP Ossulton))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S (, ,)
                    (PP (IN under)
                      (NP
                        (NP (DT the) (NN idea))
                        (SBAR (IN that)
                          (S
                            (NP (PRP it))
                            (VP (VBD was)
                              (NP (PDT all) (DT a) (NN hoax)))))))
                    (, ,)
                    (VP (VBD had)
                      (ADVP (RB quite))
                      (VP (VBN recovered)
                        (NP (PRP$ her) (NNS spirits)))))))))))
      (: ;)
      (VP (VBN talked)
        (PP (IN of)
          (NP (PRP$ her) (NN pride)
            (CC and)
            (NN ill-nature))))
      (, ,)
      (CC and)
      (VP (VBD wished)
        (S
          (NP (PRP her))
          (VP (TO to)
            (VP (VB receive)
              (NP (DT a) (JJ useful) (NN lesson)))))))
    (. .)))

nsubj(took-2, She-1)
nsubj(went-6, She-1)
nsubj(wished-55, She-1)
root(ROOT-0, took-2)
poss(bonnet-4, her-3)
dobj(took-2, bonnet-4)
conj_and(took-2, went-6)
prep_on(went-6, deck-8)
advmod(told-12, at-10)
advmod(at-10, once-11)
dep(took-2, told-12)
dobj(told-12, Pickersgill-13)
mark(please-18, that-14)
nsubj(please-18, he-15)
aux(please-18, could-16)
neg(please-18, not-17)
dep(Pickersgill-13, please-18)
dobj(please-18, her-19)
dep(more-22, Cecilia-21)
advmod(by-24, more-22)
dep(by-24, than-23)
dep(Pickersgill-13, by-24)
conj_or(please-18, by-24)
nn(Ossulton-27, frightening-25)
nn(Ossulton-27, Miss-26)
pobj(by-24, Ossulton-27)
nsubj(recovered-43, Ossulton-27)
det(idea-33, the-32)
prep_under(recovered-43, idea-33)
mark(hoax-39, that-34)
nsubj(hoax-39, it-35)
cop(hoax-39, was-36)
predet(hoax-39, all-37)
det(hoax-39, a-38)
dep(idea-33, hoax-39)
aux(recovered-43, had-41)
advmod(recovered-43, quite-42)
rcmod(Ossulton-27, recovered-43)
poss(spirits-45, her-44)
dobj(recovered-43, spirits-45)
dep(took-2, talked-47)
poss(pride-50, her-49)
prep_of(talked-47, pride-50)
prep_of(talked-47, ill-nature-52)
conj_and(pride-50, ill-nature-52)
conj_and(took-2, wished-55)
dobj(wished-55, her-56)
nsubj(receive-58, her-56)
aux(receive-58, to-57)
xcomp(wished-55, receive-58)
det(lesson-61, a-59)
amod(lesson-61, useful-60)
dobj(receive-58, lesson-61)

(ROOT
  (S
    (ADVP (RB Thus))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB follow)
          (PRT (RP up))
          (NP (PRP$ her) (NN revenge)))))
    (, ,)
    (VP (VBD did)
      (SBAR
        (S
          (NP (NNP Mrs) (NNP Lascelles))
          (VP (VBP commit)
            (NP (PRP herself))
            (ADVP (RB so) (RB far))
            (, ,)
            (SBAR (IN as)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ confidential)
                      (PP (IN with)
                        (NP
                          (NP (DT the) (NN smuggler))
                          (PP (IN in)
                            (NP (NN return))))))))))))))
    (. .)))

advmod(did-9, Thus-1)
aux(follow-4, to-3)
dep(did-9, follow-4)
prt(follow-4, up-5)
poss(revenge-7, her-6)
dobj(follow-4, revenge-7)
root(ROOT-0, did-9)
nn(Lascelles-11, Mrs-10)
nsubj(commit-12, Lascelles-11)
ccomp(did-9, commit-12)
dobj(commit-12, herself-13)
nsubj(confidential-20, herself-13)
advmod(far-15, so-14)
advmod(commit-12, far-15)
mark(confidential-20, as-17)
aux(confidential-20, to-18)
cop(confidential-20, be-19)
advcl(commit-12, confidential-20)
xcomp(commit-12, confidential-20)
det(smuggler-23, the-22)
prep_with(confidential-20, smuggler-23)
prep_in(smuggler-23, return-25)

(ROOT
  (S (`` ``)
    (VP (VB Mrs)
      (NP
        (NP (NNP Lascelles))
        (, ,)
        (SBAR
          (S
            (S
              (NP (PRP I))
              (VP (MD shall)
                (VP (VB be)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB obey)
                          (NP (PRP you)))))))))
            (, ,)
            (CC and)
            (, ,)
            (PP (IN at)
              (NP (DT the) (JJ same) (NN time)))))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB combine)
              (NP (NN business))
              (PP (IN with)
                (NP (NN pleasure))))))))
    (. .) ('' '')))

root(ROOT-0, Mrs-2)
dobj(Mrs-2, Lascelles-3)
nsubj(able-8, I-5)
nsubj(obey-10, I-5)
aux(able-8, shall-6)
cop(able-8, be-7)
rcmod(Lascelles-3, able-8)
aux(obey-10, to-9)
xcomp(able-8, obey-10)
dobj(obey-10, you-11)
rcmod(Lascelles-3, at-15)
conj_and(able-8, at-15)
det(time-18, the-16)
amod(time-18, same-17)
prep_at(able-8, time-18)
aux(combine-21, to-20)
vmod(Lascelles-3, combine-21)
dobj(combine-21, business-22)
prep_with(combine-21, pleasure-24)

(ROOT
  (S
    (PP (IN After)
      (NP (DT a) (JJ short) (NN conversation)))
    (, ,)
    (NP (DT the) (NN yacht))
    (VP (VBD dropped)
      (NP (PRP$ her) (NN anchor))
      (PP (IN at)
        (NP (NNP Torquay))))
    (. .)))

det(conversation-4, a-2)
amod(conversation-4, short-3)
prep_after(dropped-8, conversation-4)
det(yacht-7, the-6)
nsubj(dropped-8, yacht-7)
root(ROOT-0, dropped-8)
poss(anchor-10, her-9)
dobj(dropped-8, anchor-10)
prep_at(dropped-8, Torquay-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB then))
      (PP (IN about)
        (NP (CD two) (NNS hours)))
      (PP (IN before)
        (NP (NN sunset))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(was-2, then-3)
num(hours-6, two-5)
prep_about(was-2, hours-6)
prep_before(was-2, sunset-8)

(ROOT
  (S
    (S
      (ADVP (RB As) (RB soon)
        (SBAR (IN as)
          (S
            (NP (DT the) (NNS sails))
            (VP (VBD were)
              (VP (VBN furled))))))
      (, ,)
      (NP
        (NP (CD one))
        (CC or)
        (NP
          (NP (CD two) (NNS gentlemen))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBN resided)
                (ADVP (RB there)))))
          (, ,)))
      (VP (VBD came)
        (PP (IN on)
          (NP (NN board)))
        (S
          (VP (TO to)
            (VP (VB pay)
              (NP (PRP$ their) (NNS respects))
              (PP (TO to)
                (NP (NNP Lord) (NNP B))))))))
    (: --) (: ;)
    (CC and)
    (S (, ,)
      (SBAR (IN as)
        (S
          (NP (NNP Pickersgill))
          (VP (VBD had)
            (VP (VBN found)
              (PRT (RP out))
              (PP (IN from)
                (NP (NNP Cecilia)))
              (SBAR (IN that)
                (S
                  (NP (PRP$ her) (NN father))
                  (VP (VBD was)
                    (ADJP (VBN acquainted)
                      (PP (IN with)
                        (ADVP
                          (NP (DT no) (NN one))
                          (RB there)))))))))))
      (, ,)
      (NP (PRP he))
      (VP
        (VP (VBD received)
          (NP (PRP them))
          (PP (IN in)
            (NP (NN person))))
        (: ;)
        (VP (VBD asked)
          (NP (PRP them))
          (PRT (RP down))
          (PP (IN in)
            (NP (DT the) (NN cabin))))
        (: --)
        (VP (VBN called)
          (PP (IN for)
            (NP (NN wine))))
        (: --)
        (CC and)
        (VP (VBD desired)
          (S
            (NP (PRP them))
            (VP (TO to)
              (VP (VB send)
                (NP (PRP$ their) (NNS boats))
                (ADVP (RB away))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP$ his) (JJ own))
                    (VP (VBD was)
                      (VP (VBG going)
                        (PP (IN on)
                          (NP (NN shore)))))))))))))
    (. .)))

advmod(soon-2, As-1)
advmod(came-18, soon-2)
mark(furled-7, as-3)
det(sails-5, the-4)
nsubjpass(furled-7, sails-5)
auxpass(furled-7, were-6)
ccomp(soon-2, furled-7)
nsubj(came-18, one-9)
nsubj(pay-22, one-9)
num(gentlemen-12, two-11)
conj_or(one-9, gentlemen-12)
nsubj(resided-15, gentlemen-12)
nsubj(came-18, gentlemen-12)
nsubj(pay-22, gentlemen-12)
rcmod(gentlemen-12, resided-15)
advmod(resided-15, there-16)
root(ROOT-0, came-18)
prep_on(came-18, board-20)
aux(pay-22, to-21)
xcomp(came-18, pay-22)
poss(respects-24, their-23)
dobj(pay-22, respects-24)
nn(B-27, Lord-26)
prep_to(pay-22, B-27)
mark(found-35, as-32)
nsubj(found-35, Pickersgill-33)
aux(found-35, had-34)
advcl(received-50, found-35)
prt(found-35, out-36)
prep_from(found-35, Cecilia-38)
mark(acquainted-43, that-39)
poss(father-41, her-40)
nsubjpass(acquainted-43, father-41)
auxpass(acquainted-43, was-42)
ccomp(found-35, acquainted-43)
prep(acquainted-43, with-44)
neg(one-46, no-45)
npadvmod(there-47, one-46)
pcomp(with-44, there-47)
pobj(with-44, there-47)
nsubj(received-50, he-49)
nsubj(asked-55, he-49)
nsubj(called-62, he-49)
nsubj(desired-67, he-49)
conj_and(came-18, received-50)
dobj(received-50, them-51)
prep_in(received-50, person-53)
conj_and(came-18, asked-55)
conj_and(received-50, asked-55)
dobj(asked-55, them-56)
prt(asked-55, down-57)
det(cabin-60, the-59)
prep_in(asked-55, cabin-60)
conj_and(came-18, called-62)
conj_and(received-50, called-62)
prep_for(called-62, wine-64)
conj_and(came-18, desired-67)
conj_and(received-50, desired-67)
dobj(desired-67, them-68)
nsubj(send-70, them-68)
aux(send-70, to-69)
xcomp(desired-67, send-70)
poss(boats-72, their-71)
dobj(send-70, boats-72)
advmod(send-70, away-73)
mark(going-79, as-75)
poss(own-77, his-76)
nsubj(going-79, own-77)
aux(going-79, was-78)
advcl(send-70, going-79)
prep_on(going-79, shore-81)

(ROOT
  (S
    (NP (DT The) (NNS smugglers))
    (VP (VBD took)
      (NP (JJ great) (NN care))
      (SBAR (IN that)
        (S
          (NP
            (NP
              (NP (DT the) (NN steward))
              (, ,)
              (NP (NN cook)))
            (, ,)
            (CC and)
            (NP
              (NP (NN lady) (POS 's))
              (JJ -) (NN maid))
            (, ,))
          (VP (MD should)
            (VP (VB have)
              (NP
                (NP
                  (NP (DT no) (NN communication))
                  (PP (IN with)
                    (NP (DT the) (NNS guests))))
                (: ;)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (S
                      (NP (PRP them))
                      (, ,)
                      (PP (IN by)
                        (NP
                          (NP (NNP Corbett) (POS 's))
                          (NN direction)))
                      (, ,)
                      (VP (VBG being)
                        (NP
                          (NP (DT a) (NN sentinel))
                          (PP (IN over)
                            (NP (DT each) (NN individual))))))))))))))
    (. .)))

det(smugglers-2, The-1)
nsubj(took-3, smugglers-2)
root(ROOT-0, took-3)
amod(care-5, great-4)
dobj(took-3, care-5)
mark(have-19, that-6)
det(steward-8, the-7)
nsubj(have-19, steward-8)
appos(steward-8, cook-10)
poss(maid-16, lady-13)
conj_and(steward-8, maid-16)
nsubj(have-19, maid-16)
aux(have-19, should-18)
ccomp(took-3, have-19)
neg(communication-21, no-20)
dobj(have-19, communication-21)
det(guests-24, the-23)
prep_with(communication-21, guests-24)
dep(communication-21, one-26)
nsubj(sentinel-37, them-28)
poss(direction-33, Corbett-31)
prep_by(sentinel-37, direction-33)
cop(sentinel-37, being-35)
det(sentinel-37, a-36)
prepc_of(one-26, sentinel-37)
det(individual-40, each-39)
prep_over(sentinel-37, individual-40)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNS gentlemen))
        (VP (VBD remained)
          (PP (IN about)
            (NP (NN half-an-hour)))
          (PP (IN on)
            (NP
              (NP (NN board))
              (, ,)
              (SBAR
                (WHPP (IN during)
                  (WHNP (WDT which)))
                (S
                  (NP
                    (NP (NNP Corbett))
                    (CC and)
                    (NP (DT the) (NNS smugglers)))
                  (VP (VBD had)
                    (VP (VBN filled)
                      (NP
                        (NP (DT the) (NNS portmanteaus))
                        (VP (VBN found)
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NN cabin))
                              (PP (IN with)
                                (NP (DT the) (NN lace)))))))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP they))
        (VP (VBD were)
          (VP (VBN put)
            (PP (IN in)
              (NP (DT the) (NN boat)))))))
    (: ;)
    (S
      (NP (NNP Corbett))
      (ADVP (RB then))
      (VP
        (VP (VBD landed)
          (NP (DT the) (NNS gentlemen))
          (PP (IN in)
            (NP (DT the) (JJ same) (NN boat))))
        (, ,)
        (CC and)
        (VP (VBD went)
          (PRT (RP up))
          (PP (TO to)
            (NP
              (NP (DT the) (NN hotel))
              (, ,)
              (NP (DT the) (NNS smugglers))))
          (S
            (VP (VBG following)
              (NP (PRP him))
              (PP (IN with)
                (NP (DT the) (NNS portmanteaus)))
              (, ,)
              (PP (IN without)
                (NP (DT any) (NN suspicion)
                  (CC or)
                  (NN interruption))))))))
    (. .)))

det(gentlemen-2, The-1)
nsubj(remained-3, gentlemen-2)
root(ROOT-0, remained-3)
prep_about(remained-3, half-an-hour-5)
prep_on(remained-3, board-7)
prep_during(filled-16, board-7)
nsubj(filled-16, Corbett-11)
det(smugglers-14, the-13)
conj_and(Corbett-11, smugglers-14)
nsubj(filled-16, smugglers-14)
aux(filled-16, had-15)
rcmod(board-7, filled-16)
det(portmanteaus-18, the-17)
dobj(filled-16, portmanteaus-18)
vmod(portmanteaus-18, found-19)
det(cabin-22, the-21)
prep_in(found-19, cabin-22)
det(lace-25, the-24)
prep_with(cabin-22, lace-25)
nsubjpass(put-30, they-28)
auxpass(put-30, were-29)
conj_and(remained-3, put-30)
det(boat-33, the-32)
prep_in(put-30, boat-33)
nsubj(landed-37, Corbett-35)
nsubj(went-46, Corbett-35)
advmod(landed-37, then-36)
parataxis(remained-3, landed-37)
det(gentlemen-39, the-38)
dobj(landed-37, gentlemen-39)
det(boat-43, the-41)
amod(boat-43, same-42)
prep_in(landed-37, boat-43)
parataxis(remained-3, went-46)
conj_and(landed-37, went-46)
prt(went-46, up-47)
det(hotel-50, the-49)
prep_to(went-46, hotel-50)
det(smugglers-53, the-52)
appos(hotel-50, smugglers-53)
xcomp(went-46, following-54)
dobj(following-54, him-55)
det(portmanteaus-58, the-57)
prep_with(following-54, portmanteaus-58)
det(suspicion-62, any-61)
prep_without(following-54, suspicion-62)
prep_without(following-54, interruption-64)
conj_or(suspicion-62, interruption-64)

(ROOT
  (S
    (S
      (ADVP (RB As) (RB soon)
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADVP (RB there))))))
      (, ,)
      (NP (PRP he))
      (VP
        (VP (VBD ordered)
          (NP (NNS post-horses)))
        (, ,)
        (CC and)
        (VP (VBD set)
          (PRT (RP off))
          (PP (IN for)
            (NP (DT a) (NN town) (NN close)))
          (PP (IN by)))
        (, ,)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP he))
            (VP (VBD had)
              (NP (NNS correspondents)))))))
    (: ;)
    (CC and)
    (ADVP (RB thus))
    (S
      (NP
        (NP (DT the) (JJ major) (NN part))
        (PP (IN of)
          (NP (DT the) (NN cargo))))
      (VP (VBD was)
        (VP (VBN secured))))
    (. .)))

advmod(soon-2, As-1)
advmod(ordered-9, soon-2)
mark(was-5, as-3)
nsubj(was-5, he-4)
ccomp(soon-2, was-5)
advmod(was-5, there-6)
nsubj(ordered-9, he-8)
nsubj(set-13, he-8)
root(ROOT-0, ordered-9)
dobj(ordered-9, post-horses-10)
conj_and(ordered-9, set-13)
prt(set-13, off-14)
det(close-18, a-16)
nn(close-18, town-17)
prep_for(set-13, close-18)
prep(set-13, by-19)
advmod(had-23, where-21)
nsubj(had-23, he-22)
advcl(ordered-9, had-23)
conj_and(ordered-9, had-23)
dobj(had-23, correspondents-24)
advmod(secured-35, thus-27)
det(part-30, the-28)
amod(part-30, major-29)
nsubjpass(secured-35, part-30)
det(cargo-33, the-32)
prep_of(part-30, cargo-33)
auxpass(secured-35, was-34)
conj_and(ordered-9, secured-35)

(ROOT
  (S
    (S
      (NP (NNP Corbett))
      (ADVP (RB then))
      (VP (VBD returned)
        (PP (IN in)
          (NP (DT the) (NN night)))
        (, ,)
        (S
          (VP (VBG bringing)
            (PP (IN with)
              (NP (PRP him)))
            (NP (NNS people)
              (S
                (VP (TO to)
                  (VP (VB receive)
                    (NP (DT the) (NNS goods))))))))))
    (: ;)
    (CC and)
    (S
      (NP (DT the) (NNS smugglers))
      (VP (VBD landed)
        (NP
          (NP (DT the) (NNS silks))
          (, ,)
          (NP (NNS teas))
          (, ,)
          (NP (NN etcetera))
          (, ,)
          (PP (IN with)
            (NP (DT the) (JJ same) (JJ good) (NN fortune))))))
    (. .)))

nsubj(returned-3, Corbett-1)
advmod(returned-3, then-2)
root(ROOT-0, returned-3)
det(night-6, the-5)
prep_in(returned-3, night-6)
xcomp(returned-3, bringing-8)
prep_with(bringing-8, him-10)
dobj(bringing-8, people-11)
aux(receive-13, to-12)
vmod(people-11, receive-13)
det(goods-15, the-14)
dobj(receive-13, goods-15)
det(smugglers-19, the-18)
nsubj(landed-20, smugglers-19)
conj_and(returned-3, landed-20)
det(silks-22, the-21)
dobj(landed-20, silks-22)
appos(silks-22, teas-24)
appos(silks-22, etcetera-26)
det(fortune-32, the-29)
amod(fortune-32, same-30)
amod(fortune-32, good-31)
prep_with(silks-22, fortune-32)

(ROOT
  (S
    (NP (NNP Everything))
    (VP (VBD was)
      (ADVP (IN out)
        (PP (IN of)
          (NP (DT the) (NN yacht))))
      (PP (IN except)
        (NP
          (NP (DT a) (NN portion))
          (PP (IN of)
            (NP (DT the) (NN lace)))))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (DT the) (NNS portmanteaus))
          (VP (MD would) (RB not)
            (VP (VB hold))))))
    (. .)))

nsubj(was-2, Everything-1)
root(ROOT-0, was-2)
det(yacht-6, the-5)
prep_out_of(was-2, yacht-6)
det(portion-9, a-8)
prep_except(was-2, portion-9)
det(lace-12, the-11)
prep_of(portion-9, lace-12)
dobj(hold-19, which-14)
det(portmanteaus-16, the-15)
nsubj(hold-19, portmanteaus-16)
aux(hold-19, would-17)
neg(hold-19, not-18)
ccomp(was-2, hold-19)

(ROOT
  (S
    (S
      (NP (NNP Pickersgill))
      (VP (MD might)
        (ADVP (RB easily))
        (VP (VB have)
          (VP (VBN sent)
            (NP
              (NP (DT this))
              (PP (IN on)
                (NP (NN shore))))))))
    (: ;)
    (CC but)
    (, ,)
    (S
      (S
        (VP (TO to)
          (VP (VB please)
            (NP (NNP Mrs) (NNP Lascelles)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD arranged)
        (ADVP (RB otherwise))))
    (. .)))

nsubj(sent-5, Pickersgill-1)
aux(sent-5, might-2)
advmod(sent-5, easily-3)
aux(sent-5, have-4)
root(ROOT-0, sent-5)
dobj(sent-5, this-6)
prep_on(this-6, shore-8)
aux(please-13, to-12)
advcl(arranged-18, please-13)
nn(Lascelles-15, Mrs-14)
dobj(please-13, Lascelles-15)
nsubj(arranged-18, he-17)
conj_but(sent-5, arranged-18)
advmod(arranged-18, otherwise-19)

(ROOT
  (S
    (NP (DT The) (JJ next) (NN morning))
    (, ,)
    (SBAR
      (NP (RB about) (DT an) (NN hour))
      (IN after)
      (S
        (NP (NN breakfast))
        (VP (VBD was)
          (VP (VBN finished)))))
    (, ,)
    (NP (NNP Mrs) (NNP Lascelles))
    (VP
      (VP (VBD entered)
        (NP
          (NP (DT the) (NN cabin))
          (VP (VBG pretending)
            (S
              (VP (TO to)
                (VP (VB be)
                  (PP (IN in)
                    (NP (DT the) (JJS greatest) (NN consternation)))))))))
      (, ,)
      (CC and)
      (VP (VBD fell)
        (PP (IN on)
          (NP (DT the) (NN sofa)))
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP she))
            (VP (VBD were)
              (VP (VBG going)
                (PP (TO to)
                  (ADJP (JJ faint)))))))))
    (. .)))

det(morning-3, The-1)
amod(morning-3, next-2)
tmod(entered-15, morning-3)
advmod(hour-7, about-5)
det(hour-7, an-6)
dep(finished-11, hour-7)
mark(finished-11, after-8)
nsubjpass(finished-11, breakfast-9)
auxpass(finished-11, was-10)
advcl(entered-15, finished-11)
nn(Lascelles-14, Mrs-13)
nsubj(entered-15, Lascelles-14)
nsubj(fell-27, Lascelles-14)
root(ROOT-0, entered-15)
det(cabin-17, the-16)
dobj(entered-15, cabin-17)
vmod(cabin-17, pretending-18)
aux(be-20, to-19)
xcomp(pretending-18, be-20)
det(consternation-24, the-22)
amod(consternation-24, greatest-23)
prep_in(be-20, consternation-24)
conj_and(entered-15, fell-27)
det(sofa-30, the-29)
prep_on(fell-27, sofa-30)
advmod(going-35, as-31)
mark(going-35, if-32)
nsubj(going-35, she-33)
aux(going-35, were-34)
advcl(fell-27, going-35)
prep_to(going-35, faint-37)

(ROOT
  (FRAG (`` ``)
    (INTJ (JJ Good) (NN heavens))
    (. !)))

root(ROOT-0, Good-2)
dep(Good-2, heavens-3)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP (DT the) (NN matter)))
    (. ?) ('' '')))

root(ROOT-0, What-1)
cop(What-1, is-2)
det(matter-4, the-3)
nsubj(What-1, matter-4)

(ROOT
  (S
    (VP (VB exclaimed)
      (NP
        (NP (NNP Cecilia))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD knew)
              (ADVP
                (ADVP (RB very) (RB well))
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBD was)
                      (VP (VBG coming)))))))))))
    (. .)))

root(ROOT-0, exclaimed-1)
dobj(exclaimed-1, Cecilia-2)
nsubj(knew-5, Cecilia-2)
rcmod(Cecilia-2, knew-5)
advmod(well-7, very-6)
advmod(knew-5, well-7)
nsubj(coming-10, what-8)
aux(coming-10, was-9)
advcl(well-7, coming-10)
ccomp(well-7, coming-10)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (NP (DT the) (NN wretch))
    (. !)))

discourse(wretch-5, Oh-2)
det(wretch-5, the-4)
root(ROOT-0, wretch-5)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ has)
      (VP (VBN made)
        (NP (JJ such) (NNS proposals))))
    (. !) ('' '')))

nsubj(made-3, He-1)
aux(made-3, has-2)
root(ROOT-0, made-3)
amod(proposals-5, such-4)
dobj(made-3, proposals-5)

(ROOT
  (S (`` ``)
    (VP (VB Proposals))
    (. !)))

root(ROOT-0, Proposals-2)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ proposals)))
    (. ?)))

nsubj(proposals-2, What-1)
root(ROOT-0, proposals-2)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (. !)))

root(ROOT-0, What-1)

(ROOT
  (SQ (MD Lord)
    (NP (NNP Blaney))
    (. ?) ('' '')))

root(ROOT-0, Lord-1)
dep(Lord-1, Blaney-2)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Miss) (NNP Ossulton)))
    (. .)))

root(ROOT-0, cried-1)
nn(Ossulton-3, Miss-2)
dobj(cried-1, Ossulton-3)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP he))
    (VP (VBZ 's)
      (ADJP (RB no) (JJ lord)))
    (. !)))

discourse(lord-7, Oh-2)
nsubj(lord-7, he-4)
cop(lord-7, 's-5)
neg(lord-7, no-6)
root(ROOT-0, lord-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN villain))
        (CC and)
        (NP (DT a) (NN smuggler))))
    (. !)))

nsubj(villain-4, He-1)
cop(villain-4, 's-2)
det(villain-4, a-3)
root(ROOT-0, villain-4)
det(smuggler-7, a-6)
conj_and(villain-4, smuggler-7)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBZ insists)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (MD shall) (DT both)
            (VP
              (VP (VB fill)
                (NP
                  (NP (PRP$ our) (NNS pockets))
                  (PP (JJ full) (IN of)
                    (NP (NN lace)))))
              (, ,)
              (CC and)
              (VP (VB go)
                (PP (IN on)
                  (S
                    (VP (NN shore)
                      (PP (IN with)
                        (NP (PRP him))))))))))))
    (. .) ('' '')))

cc(insists-3, And-1)
nsubj(insists-3, he-2)
root(ROOT-0, insists-3)
mark(fill-8, that-4)
nsubj(fill-8, we-5)
nsubj(go-16, we-5)
aux(fill-8, shall-6)
dep(fill-8, both-7)
ccomp(insists-3, fill-8)
poss(pockets-10, our-9)
dobj(fill-8, pockets-10)
dep(pockets-10, full-11)
prep_of(pockets-10, lace-13)
ccomp(insists-3, go-16)
conj_and(fill-8, go-16)
prepc_on(go-16, shore-18)
prep_with(shore-18, him-20)

(ROOT
  (S (`` ``)
    (VP (VB Mercy)
      (PP (IN on)
        (NP (PRP me))))
    (. !)))

root(ROOT-0, Mercy-2)
prep_on(Mercy-2, me-4)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN hoax))
          (PP (IN after)
            (NP (DT all))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN been)
          (VP (VBG sitting)
            (ADVP (RB down)
              (PP (TO to)
                (NP (NN dinner))))
            (PP (IN with)
              (NP (DT a) (NN smuggler)))))))
    (. !) ('' '')))

advmod(hoax-5, Then-1)
nsubj(hoax-5, it-2)
cop(hoax-5, is-3)
neg(hoax-5, no-4)
root(ROOT-0, hoax-5)
prep_after(hoax-5, all-7)
nsubj(sitting-13, I-10)
aux(sitting-13, 've-11)
aux(sitting-13, been-12)
conj_and(hoax-5, sitting-13)
advmod(sitting-13, down-14)
prep_to(down-14, dinner-16)
det(smuggler-19, a-18)
prep_with(sitting-13, smuggler-19)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Sitting)
        (PRT (RP down))))
    (, ,)
    (VP (VBP madam))
    (. !)))

dep(madam-5, Sitting-2)
prt(Sitting-2, down-3)
root(ROOT-0, madam-5)

(ROOT
  (UCP (: --)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP
                    (ADVP (RB no) (RBR more))
                    (SBAR (IN than)
                      (FRAG
                        (WHNP (WDT that)))))))))))
      (: --)
      (ADVP (CC but))
      (NP (PRP we))
      (VP (VBP are)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (PRP$ his) (NN arm))
              (PRT (RP up))
              (PP (TO to)
                (NP (DT the) (NN hotel))))))))
    (. .)))

mark(were-4, if-2)
nsubj(were-4, it-3)
nsubj(more-8, it-3)
advcl(are-14, were-4)
aux(more-8, to-5)
cop(more-8, be-6)
neg(more-8, no-7)
xcomp(were-4, more-8)
mark(that-10, than-9)
dep(more-8, that-10)
advmod(are-14, but-12)
nsubj(are-14, we-13)
nsubj(take-16, we-13)
root(ROOT-0, are-14)
aux(take-16, to-15)
xcomp(are-14, take-16)
poss(arm-18, his-17)
dobj(take-16, arm-18)
prt(take-16, up-19)
det(hotel-22, the-21)
prep_to(take-16, hotel-22)

(ROOT
  (S
    (INTJ (UH Oh))
    (VP (VB dear))
    (. !)))

discourse(dear-2, Oh-1)
root(ROOT-0, dear-2)

(ROOT
  (S
    (NP (NNP Cecilia))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (VP (VBN ordered)
            (PP (IN on)
              (NP
                (NP (NN deck))
                (: ;)
                (NP (NN pray)))))))
      (, ,))
    (VP (VBP come)
      (PP (IN with)
        (NP (PRP me))))
    (. !) ('' '')))

nsubj(come-11, Cecilia-1)
nsubjpass(ordered-5, I-3)
auxpass(ordered-5, am-4)
parataxis(come-11, ordered-5)
prep_on(ordered-5, deck-7)
dep(deck-7, pray-9)
root(ROOT-0, come-11)
prep_with(come-11, me-13)

(ROOT
  (S
    (S
      (NP (NNP Miss) (NNP Ossulton))
      (VP
        (VP (VBD rolled)
          (PP (IN on)
            (NP (DT the) (NN sofa))))
        (, ,)
        (CC and)
        (VP (VBD rang)
          (PP (IN for)
            (NP (NNP Phoebe))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (PP (IN in)
          (NP
            (NP (DT a) (NN state))
            (PP (IN of)
              (NP (JJ great) (NN alarm)))))))
    (. .)))

nn(Ossulton-2, Miss-1)
nsubj(rolled-3, Ossulton-2)
nsubj(rang-9, Ossulton-2)
root(ROOT-0, rolled-3)
det(sofa-6, the-5)
prep_on(rolled-3, sofa-6)
conj_and(rolled-3, rang-9)
prep_for(rang-9, Phoebe-11)
nsubj(was-14, she-13)
parataxis(rolled-3, was-14)
det(state-17, a-16)
prep_in(was-14, state-17)
amod(alarm-20, great-19)
prep_of(state-17, alarm-20)

(ROOT
  (NP
    (NP (DT A) (NN knock))
    (PP (IN at)
      (NP (DT the) (NN door)))
    (. .)))

det(knock-2, A-1)
root(ROOT-0, knock-2)
det(door-5, the-4)
prep_at(knock-2, door-5)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Come)
        (PRT (RP in))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Miss) (NNP Ossulton))
    (, ,)
    (S
      (VP (VBG thinking)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADJP (JJ Phoebe)))
            (: ;)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (NNP Pickersgill))
                (VP (VBD made)
                  (NP (PRP$ his) (NN appearance)))))))))
    (. .)))

ccomp(said-6, Come-2)
prt(Come-2, in-3)
root(ROOT-0, said-6)
nn(Ossulton-8, Miss-7)
nsubj(said-6, Ossulton-8)
vmod(said-6, thinking-10)
nsubj(Phoebe-13, it-11)
cop(Phoebe-13, was-12)
ccomp(thinking-10, Phoebe-13)
advmod(made-17, when-15)
nsubj(made-17, Pickersgill-16)
parataxis(Phoebe-13, made-17)
poss(appearance-19, his-18)
dobj(made-17, appearance-19)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB want) (, ,)
        (ADVP (RB sir))))
    (. ?)))

dobj(want-5, What-2)
aux(want-5, do-3)
nsubj(want-5, you-4)
root(ROOT-0, want-5)
advmod(want-5, sir-7)

(ROOT
  (S
    (VP (VB Go)
      (PRT (RP out)))
    (, ,)
    (NP (NN sir))
    (. !)))

root(ROOT-0, Go-1)
prt(Go-1, out-2)
dep(Go-1, sir-4)

(ROOT
  (S
    (VP (VB Go)
      (ADVP (IN out) (RB directly))
      (, ,)
      (SBAR (IN of)
        (S
          (NP (PRP I))
          (VP (MD 'll)
            (VP (VB scream))))))
    (. !) ('' '')))

root(ROOT-0, Go-1)
advmod(Go-1, out-2)
advmod(out-2, directly-3)
mark(scream-8, of-5)
nsubj(scream-8, I-6)
aux(scream-8, 'll-7)
advcl(Go-1, scream-8)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT no) (NN use) (NN screaming))
          (, ,)
          (NP (NN madam)))
        (: ;)
        (NP
          (NP (NN recollect))
          (, ,)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT all))
                (PP (IN on)
                  (NP (NN board))))
              (VP (VBP are)
                (PP (IN at)
                  (NP (PRP$ my) (NN service)))))))))
    (. .)))

nsubj(screaming-6, It-2)
cop(screaming-6, is-3)
neg(screaming-6, no-4)
nn(screaming-6, use-5)
root(ROOT-0, screaming-6)
appos(screaming-6, madam-8)
dep(screaming-6, recollect-10)
mark(are-16, that-12)
nsubj(are-16, all-13)
prep_on(all-13, board-15)
dep(recollect-10, are-16)
poss(service-19, my-18)
prep_at(are-16, service-19)

(ROOT
  (S
    (NP (PRP You))
    (, ,)
    (VP (MD will)
      (VP (VB oblige)
        (NP (PRP me))
        (PP (IN by)
          (S
            (VP (VBG listening)
              (PP (TO to)
                (NP
                  (NP (PRP me))
                  (, ,)
                  (NP (NNP Miss) (NNP Ossulton)))))))))
    (. .)))

nsubj(oblige-4, You-1)
aux(oblige-4, will-3)
root(ROOT-0, oblige-4)
dobj(oblige-4, me-5)
prepc_by(oblige-4, listening-7)
prep_to(listening-7, me-9)
nn(Ossulton-12, Miss-11)
appos(me-9, Ossulton-12)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am) (, ,)
        (PP (IN as)
          (S
            (NP (PRP you))
            (VP (VBP know))))
        (, ,)
        (NP (DT a) (NN smuggler))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD must)
        (VP (VB send)
          (NP (DT this) (NN lace))
          (PP (IN on)
            (NP (NN shore))))))
    (. .)))

nsubj(smuggler-9, I-1)
cop(smuggler-9, am-2)
nsubj(know-6, you-5)
prepc_as(smuggler-9, know-6)
det(smuggler-9, a-8)
root(ROOT-0, smuggler-9)
nsubj(send-14, I-12)
aux(send-14, must-13)
conj_and(smuggler-9, send-14)
det(lace-16, this-15)
dobj(send-14, lace-16)
prep_on(send-14, shore-18)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (VP
        (VP (VB oblige)
          (NP (PRP me))
          (PP (IN by)
            (S
              (VP (VBG putting)))))
        (, ,)
        (VP
          (NP (PRP it))
          (PP
            (PP (IN into)
              (NP (PRP$ your) (NNS pockets)))
            (, ,)
            (CC or)
            (PP (IN about)
              (NP (PRP$ your) (NN person)))))
        (, ,)
        (CC and)
        (VP (VB prepare)
          (S
            (VP (TO to)
              (VP (VB go)
                (PP (IN on)
                  (S
                    (VP (NN shore)
                      (PP (IN with)
                        (NP (PRP me))))))))))))
    (. .)))

nsubj(oblige-3, You-1)
nsubj(prepare-19, You-1)
nsubj(go-21, You-1)
aux(oblige-3, will-2)
root(ROOT-0, oblige-3)
dobj(oblige-3, me-4)
prepc_by(oblige-3, putting-6)
conj_and(oblige-3, it-8)
conj_and(oblige-3, it-8')
conj_or(it-8, it-8')
poss(pockets-11, your-10)
prep_into(it-8, pockets-11)
poss(person-16, your-15)
prep_about(it-8', person-16)
conj_and(oblige-3, prepare-19)
aux(go-21, to-20)
xcomp(prepare-19, go-21)
prepc_on(go-21, shore-23)
prep_with(shore-23, me-25)

(ROOT
  (S
    (S
      (ADVP (RB As) (RB soon)
        (SBAR (IN as)
          (S
            (NP (PRP we))
            (VP (VBP arrive)
              (PP (IN at)
                (NP (DT the) (NN hotel)))))))
      (, ,)
      (NP (PRP you))
      (VP (MD will)
        (VP (VB deliver)
          (NP (PRP it))
          (PP (TO to)
            (NP (PRP me))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (ADVP (RB then))
      (VP (MD shall)
        (VP (VB re-conduct)
          (NP (PRP you))
          (PP (IN on)
            (NP
              (NP (NN board))
              (PP (IN of)
                (NP (DT the) (NN yacht))))))))
    (. .)))

advmod(soon-2, As-1)
advmod(deliver-12, soon-2)
mark(arrive-5, as-3)
nsubj(arrive-5, we-4)
ccomp(soon-2, arrive-5)
det(hotel-8, the-7)
prep_at(arrive-5, hotel-8)
nsubj(deliver-12, you-10)
aux(deliver-12, will-11)
root(ROOT-0, deliver-12)
dobj(deliver-12, it-13)
prep_to(deliver-12, me-15)
nsubj(re-conduct-21, I-18)
advmod(re-conduct-21, then-19)
aux(re-conduct-21, shall-20)
conj_and(deliver-12, re-conduct-21)
dobj(re-conduct-21, you-22)
prep_on(re-conduct-21, board-24)
det(yacht-27, the-26)
prep_of(board-24, yacht-27)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are) (RB not)
      (NP
        (NP (DT the) (JJ first) (NN lady))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ has)
              (VP (VBN gone)
                (PP (IN on)
                  (S
                    (VP (NN shore)
                      (PP (IN with)
                        (NP (JJ contraband) (NNS articles)))
                      (PP (IN about)
                        (NP (PRP$ her) (NN person))))))))))))
    (. .) ('' '')))

nsubj(lady-6, You-1)
cop(lady-6, are-2)
neg(lady-6, not-3)
det(lady-6, the-4)
amod(lady-6, first-5)
root(ROOT-0, lady-6)
nsubj(gone-9, lady-6)
aux(gone-9, has-8)
rcmod(lady-6, gone-9)
prepc_on(gone-9, shore-11)
amod(articles-14, contraband-13)
prep_with(shore-11, articles-14)
poss(person-17, her-16)
prep_about(shore-11, person-17)

(ROOT
  (FRAG (`` ``)
    (NP (PRP Me))
    (, ,)
    (NP (NN sir))
    (. !)))

root(ROOT-0, Me-2)
dep(Me-2, sir-4)

(ROOT
  (SQ
    (VP (VB Go)
      (PP (IN on)
        (S
          (VP (NN shore)
            (PP (IN in)
              (NP (DT that) (NN way)))))))
    (. ?)))

root(ROOT-0, Go-1)
prepc_on(Go-1, shore-3)
det(way-6, that-5)
prep_in(shore-3, way-6)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (VP (VB sir) (: --)
      (ADVP (RB never)))
    (. !)))

discourse(sir-3, No-1)
root(ROOT-0, sir-3)
neg(sir-3, never-5)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD will)
      (NP (DT the) (NN world))
      (VP (VB say)))
    (. ?)))

dobj(say-5, What-1)
aux(say-5, will-2)
det(world-4, the-3)
nsubj(say-5, world-4)
root(ROOT-0, say-5)

(ROOT
  (NP (: --)
    (NP (DT the) (NNP Hon.) (NNP Miss) (NNP Ossulton))
    (VP (VBG walking)
      (PP (IN with)
        (NP (DT a) (NN smuggler))))
    (. !)))

det(Ossulton-5, the-2)
nn(Ossulton-5, Hon.-3)
nn(Ossulton-5, Miss-4)
root(ROOT-0, Ossulton-5)
vmod(Ossulton-5, walking-6)
det(smuggler-9, a-8)
prep_with(walking-6, smuggler-9)

(ROOT
  (FRAG
    (NP
      (NP (NNP No))
      (, ,)
      (VP (VBN sir) (: --)
        (ADVP (RB never))))
    (. !) ('' '')))

root(ROOT-0, No-1)
vmod(No-1, sir-3)
neg(sir-3, never-5)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (S
        (NP
          (NP (NN madam))
          (: ;)
          (NP
            (NP (VBG walking) (NN arm-in-arm))
            (PP (IN with)
              (NP (DT a) (NN smuggler))))
          (: :))
        (NP (PRP I))
        (VP (MD shall)
          (VP (VB have)
            (NP (PRP you))
            (PP (IN on)
              (NP
                (NP (CD one) (NN arm))
                (, ,)
                (CC and)
                (NP
                  (NP (NNP Mrs) (NNP Lascelles))
                  (PP (IN on)
                    (NP (DT the) (JJ other)))))))))
      (: ;)
      (CC and)
      (S
        (NP (PRP I))
        (VP (MD would)
          (VP (VB advise)
            (S
              (NP (PRP you))
              (VP (TO to)
                (VP (VB take)
                  (NP (PRP it))
                  (ADVP (RB very) (RB quietly)))))))))
    (: ;)
    (S
      (SBAR
        (SBAR (IN for)
          (S
            (PRN (, ,)
              (PP (IN in)
                (NP (DT the) (JJ first) (NN place)))
              (, ,))
            (S
              (NP (PRP it))
              (VP (MD will)
                (VP (VB be)
                  (NP (PRP you))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VB smuggle))))
                  (, ,)
                  (SBAR (IN as)
                    (S
                      (NP (DT the) (NNS goods))
                      (VP (MD will)
                        (VP (VB be)
                          (VP (VBN found)
                            (PP (IN on)
                              (NP (PRP$ your) (NN person)))))))))))
            (, ,)
            (CC and)
            (S
              (NP (PRP you))
              (VP (MD will)
                (ADVP (RB certainly))
                (VP (VB be)
                  (VP (VBN put)
                    (PP (IN in)
                      (NP (NN prison)))))))))
        (: :)
        (SBAR (IN for)
          (S
            (S
              (PP (IN at)
                (NP
                  (NP (DT the) (JJS least) (NN appearance))
                  (PP (IN of)
                    (NP (NN insubordination)))))
              (, ,)
              (NP (PRP we))
              (VP
                (VP (VB run))
                (CC and)
                (VP (VB inform)
                  (PP (IN against)
                    (NP (PRP you))))))
            (: ;)
            (CC and)
            (S
              (ADVP (RB further))
              (, ,)
              (NP (PRP$ your) (NN niece))
              (VP (MD will)
                (VP (VB remain)
                  (PP (IN on)
                    (NP (NN board)))
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN hostage))
                      (PP (IN for)
                        (NP (PRP$ your) (JJ good) (NN behaviour))))))))))
        (: --)
        (CC and)
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP have)
              (NP
                (NP (DT any) (NN regard))
                (PP (IN for)
                  (NP (PRP$ her) (NN liberty))))))))
      (, ,)
      (NP (PRP you))
      (VP (MD will)
        (VP (VB consent)
          (ADVP (RB immediately)))))
    (. .) ('' '')))

discourse(have-14, Yes-2)
nsubj(have-14, madam-4)
amod(arm-in-arm-7, walking-6)
dep(madam-4, arm-in-arm-7)
det(smuggler-10, a-9)
prep_with(arm-in-arm-7, smuggler-10)
nsubj(have-14, I-12)
aux(have-14, shall-13)
root(ROOT-0, have-14)
dobj(have-14, you-15)
num(arm-18, one-17)
prep_on(have-14, arm-18)
nn(Lascelles-22, Mrs-21)
prep_on(have-14, Lascelles-22)
conj_and(arm-18, Lascelles-22)
det(other-25, the-24)
prep_on(Lascelles-22, other-25)
nsubj(advise-30, I-28)
aux(advise-30, would-29)
conj_and(have-14, advise-30)
dobj(advise-30, you-31)
nsubj(take-33, you-31)
aux(take-33, to-32)
xcomp(advise-30, take-33)
dobj(take-33, it-34)
advmod(quietly-36, very-35)
advmod(take-33, quietly-36)
mark(you-48, for-38)
dep(you-48, in-40)
det(place-43, the-41)
amod(place-43, first-42)
pobj(in-40, place-43)
nsubj(you-48, it-45)
aux(you-48, will-46)
cop(you-48, be-47)
advcl(consent-115, you-48)
nsubj(smuggle-50, who-49)
dep(you-48, smuggle-50)
mark(found-57, as-52)
det(goods-54, the-53)
nsubjpass(found-57, goods-54)
aux(found-57, will-55)
auxpass(found-57, be-56)
advcl(you-48, found-57)
poss(person-60, your-59)
prep_on(found-57, person-60)
nsubjpass(put-67, you-63)
aux(put-67, will-64)
advmod(put-67, certainly-65)
auxpass(put-67, be-66)
conj_and(you-48, put-67)
advcl(consent-115, put-67)
prep_in(put-67, prison-69)
mark(run-80, for-71)
det(appearance-75, the-73)
amod(appearance-75, least-74)
prep_at(run-80, appearance-75)
prep_of(appearance-75, insubordination-77)
nsubj(run-80, we-79)
nsubj(inform-82, we-79)
conj_and(you-48, run-80)
advcl(consent-115, run-80)
conj_and(you-48, inform-82)
conj_and(run-80, inform-82)
prep_against(inform-82, you-84)
advmod(remain-92, further-87)
poss(niece-90, your-89)
nsubj(remain-92, niece-90)
aux(remain-92, will-91)
conj_and(you-48, remain-92)
conj_and(run-80, remain-92)
prep_on(remain-92, board-94)
det(hostage-97, a-96)
prep_as(remain-92, hostage-97)
poss(behaviour-101, your-99)
amod(behaviour-101, good-100)
prep_for(hostage-97, behaviour-101)
mark(have-106, if-104)
nsubj(have-106, you-105)
conj_and(you-48, have-106)
advcl(consent-115, have-106)
det(regard-108, any-107)
dobj(have-106, regard-108)
poss(liberty-111, her-110)
prep_for(regard-108, liberty-111)
nsubj(consent-115, you-113)
aux(consent-115, will-114)
parataxis(have-14, consent-115)
advmod(consent-115, immediately-116)

(ROOT
  (S
    (S
      (NP (NNP Pickersgill))
      (VP (VBD left)
        (NP (DT the) (NN cabin))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB shortly))
      (ADVP (RB afterwards))
      (NP (NNP Cecilia)
        (CC and)
        (NNP Mrs) (NNP Lascelles))
      (VP (VBD entered) (, ,)
        (PP
          (ADVP (RB apparently))
          (RB much)
          (ADJP (JJ distressed)))))
    (. .)))

nsubj(left-2, Pickersgill-1)
root(ROOT-0, left-2)
det(cabin-4, the-3)
dobj(left-2, cabin-4)
advmod(entered-13, shortly-7)
advmod(entered-13, afterwards-8)
nn(Lascelles-12, Cecilia-9)
conj_and(Cecilia-9, Mrs-11)
nn(Lascelles-12, Mrs-11)
nsubj(entered-13, Lascelles-12)
conj_and(left-2, entered-13)
prep(entered-13, apparently-15)
dep(apparently-15, much-16)
pobj(apparently-15, distressed-17)

(ROOT
  (S
    (S
      (S
        (NP (PRP They))
        (VP (VBD had)
          (VP (VBN been)
            (VP (VBN informed)
              (PP (IN of)
                (NP (DT all)))))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Mrs) (NNP Lascelles))
        (VP (VBD declared)
          (SBAR
            (S (, ,)
              (SBAR
                (WHNP (WDT that))
                (FRAG
                  (PP (IN for)
                    (NP (PRP$ her) (NN part)))))
              (, ,)
              (VP
                (ADVP (RBR sooner) (IN than))
                (VBP leave)
                (NP (PRP$ her) (JJ poor) (NN Cecilia))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN mercy))
                    (PP (IN of)
                      (NP (JJ such) (NNS people)))))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD had)
      (VP (VBN made)
        (PRT (RP up))
        (NP (PRP$ her) (NN mind))
        (S
          (VP (TO to)
            (VP (VB submit)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN smuggler) (POS 's))
                  (NNS demands))))))))
    (. .)))

nsubjpass(informed-4, They-1)
aux(informed-4, had-2)
auxpass(informed-4, been-3)
ccomp(made-33, informed-4)
prep_of(informed-4, all-6)
nn(Lascelles-10, Mrs-9)
nsubj(declared-11, Lascelles-10)
conj_and(informed-4, declared-11)
ccomp(made-33, declared-11)
dep(for-14, that-13)
dep(leave-20, for-14)
poss(part-16, her-15)
pobj(for-14, part-16)
advmod(than-19, sooner-18)
advmod(leave-20, than-19)
ccomp(declared-11, leave-20)
poss(Cecilia-23, her-21)
amod(Cecilia-23, poor-22)
dobj(leave-20, Cecilia-23)
det(mercy-26, the-25)
prep_to(leave-20, mercy-26)
amod(people-29, such-28)
prep_of(mercy-26, people-29)
nsubj(made-33, she-31)
aux(made-33, had-32)
root(ROOT-0, made-33)
prt(made-33, up-34)
poss(mind-36, her-35)
dobj(made-33, mind-36)
aux(submit-38, to-37)
vmod(made-33, submit-38)
det(smuggler-41, the-40)
poss(demands-43, smuggler-41)
prep_to(submit-38, demands-43)

(ROOT
  (S
    (NP (NNP Cecilia))
    (ADVP (RB also))
    (VP (VBN begged)
      (S
        (ADJP (RB so) (JJ earnestly)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP
            (NP (NNP Miss) (NNP Ossulton))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD had)
                  (NP (DT no) (NN idea))
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (NP (DT a) (NN trick))
                        (, ,)
                        (PP (IN with)
                          (S
                            (ADVP (RB much))
                            (VP (VBG sobbing)
                              (CC and)
                              (VBG blubbering))))))))))
            (, ,))
          (VP (VBD consented)))))
    (. .)))

nsubj(begged-3, Cecilia-1)
advmod(begged-3, also-2)
root(ROOT-0, begged-3)
advmod(earnestly-5, so-4)
acomp(begged-3, earnestly-5)
mark(consented-27, that-7)
nn(Ossulton-9, Miss-8)
nsubj(had-12, Ossulton-9)
nsubj(consented-27, Ossulton-9)
rcmod(Ossulton-9, had-12)
neg(idea-14, no-13)
dobj(had-12, idea-14)
mark(trick-19, that-15)
nsubj(trick-19, it-16)
cop(trick-19, was-17)
det(trick-19, a-18)
ccomp(had-12, trick-19)
advmod(sobbing-23, much-22)
prepc_with(trick-19, sobbing-23)
prepc_with(trick-19, blubbering-25)
conj_and(sobbing-23, blubbering-25)
ccomp(begged-3, consented-27)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (DT all))
          (VP (VBD was)
            (ADJP (JJ ready)))))
      (, ,)
      (NP (NNP Cecilia))
      (VP (VBD left)
        (NP (DT the) (NN cabin))))
    (: ;)
    (S
      (NP (NNP Pickersgill))
      (VP (VBD came)
        (PRT (RP down))
        (, ,)
        (S
          (VP (VBN handed)
            (PRT (RP up))
            (NP
              (NP (DT the) (CD two) (NNS ladies))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD had) (RB not)
                    (VP (VBN exchanged)
                      (NP
                        (NP (DT a) (NN word))
                        (PP (IN with)
                          (NP (DT each) (JJ other))))
                      (PP (IN during)
                        (NP
                          (NP (NNP Cecilia) (POS 's))
                          (NN absence))))))))))))
    (: ;)
    (S
      (NP (DT the) (NN boat))
      (VP (VBD was)
        (ADJP (JJ ready)
          (PP (IN alongside)))))
    (: --)
    (S
      (NP (PRP they))
      (VP
        (VP (VBD went)
          (PRT (RP in)))
        (, ,)
        (CC and)
        (VP (VBD pulled)
          (PP (IN on)
            (NP (NN shore))))))
    (. .)))

advmod(ready-4, When-1)
nsubj(ready-4, all-2)
cop(ready-4, was-3)
advcl(left-7, ready-4)
nsubj(left-7, Cecilia-6)
root(ROOT-0, left-7)
det(cabin-9, the-8)
dobj(left-7, cabin-9)
nsubj(came-12, Pickersgill-11)
parataxis(left-7, came-12)
prt(came-12, down-13)
dep(came-12, handed-15)
prt(handed-15, up-16)
det(ladies-19, the-17)
num(ladies-19, two-18)
dobj(handed-15, ladies-19)
nsubj(exchanged-24, ladies-19)
aux(exchanged-24, had-22)
neg(exchanged-24, not-23)
rcmod(ladies-19, exchanged-24)
det(word-26, a-25)
dobj(exchanged-24, word-26)
det(other-29, each-28)
prep_with(word-26, other-29)
poss(absence-33, Cecilia-31)
prep_during(exchanged-24, absence-33)
det(boat-36, the-35)
nsubj(ready-38, boat-36)
cop(ready-38, was-37)
parataxis(left-7, ready-38)
prep(ready-38, alongside-39)
nsubj(went-42, they-41)
nsubj(pulled-46, they-41)
parataxis(left-7, went-42)
prt(went-42, in-43)
parataxis(left-7, pulled-46)
conj_and(went-42, pulled-46)
prep_on(pulled-46, shore-48)

(ROOT
  (S
    (NP (NNP Everything))
    (VP (VBD succeeded)
      (PP (TO to)
        (NP
          (NP (DT the) (NN smuggler) (POS 's))
          (NN satisfaction))))
    (. .)))

nsubj(succeeded-2, Everything-1)
root(ROOT-0, succeeded-2)
det(smuggler-5, the-4)
poss(satisfaction-7, smuggler-5)
prep_to(succeeded-2, satisfaction-7)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Miss) (NNP Ossulton))
        (, ,)
        (VP (VBD frightened)
          (PRT (RP out))
          (PP (IN of)
            (NP (PRP$ her) (NNS wits))))
        (, ,))
      (VP (VBD took)
        (NP (PRP$ his) (NN arm))))
    (: ;)
    (CC and)
    (, ,)
    (S
      (PP (IN with)
        (NP
          (NP (NNP Mrs) (NNP Lascelles))
          (PP (IN on)
            (NP (DT the) (JJ other)))))
      (, ,)
      (NP (PRP they))
      (VP (VBD went)
        (PRT (RP up))
        (PP (TO to)
          (NP (DT the) (NN hotel)))))
    (, ,)
    (PP (VBN followed)
      (PP (IN by)
        (NP
          (NP (CD four))
          (PP (IN of)
            (NP
              (NP (PRP$ his) (NN boat) (POS 's))
              (NN crew))))))
    (. .)))

nn(Ossulton-2, Miss-1)
nsubj(took-10, Ossulton-2)
nsubj(followed-30, Ossulton-2)
vmod(Ossulton-2, frightened-4)
poss(wits-8, her-7)
prep_out_of(frightened-4, wits-8)
root(ROOT-0, took-10)
poss(arm-12, his-11)
dobj(took-10, arm-12)
nn(Lascelles-18, Mrs-17)
prep_with(went-24, Lascelles-18)
det(other-21, the-20)
prep_on(Lascelles-18, other-21)
nsubj(went-24, they-23)
conj_and(took-10, went-24)
prt(went-24, up-25)
det(hotel-28, the-27)
prep_to(went-24, hotel-28)
conj_and(took-10, followed-30)
prepc_followed_by(took-10, by-31)
pobj(took-10, four-32)
poss(boat-35, his-34)
poss(crew-37, boat-35)
prep_of(four-32, crew-37)

(ROOT
  (S
    (ADVP (RB As) (RB soon)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (VP (VBN shown)
              (PP (IN into)
                (NP (DT a) (NN room))))))))
    (, ,)
    (NP
      (NP (NNP Corbett))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD was)
            (ADVP (RB already))
            (PP (IN on)
              (NP (NN shore))))))
      (, ,))
    (VP
      (VP (VBD asked)
        (PP (IN for)
          (NP
            (NP (NNP Lord) (NNP B))
            (: --))))
      (, ,)
      (CC and)
      (VP (VBD joined)
        (NP (PRP them))))
    (. .)))

advmod(soon-2, As-1)
advmod(asked-19, soon-2)
mark(shown-6, as-3)
nsubjpass(shown-6, they-4)
auxpass(shown-6, were-5)
ccomp(soon-2, shown-6)
det(room-9, a-8)
prep_into(shown-6, room-9)
nsubj(was-14, Corbett-11)
nsubj(asked-19, Corbett-11)
nsubj(joined-26, Corbett-11)
rcmod(Corbett-11, was-14)
advmod(was-14, already-15)
prep_on(was-14, shore-17)
root(ROOT-0, asked-19)
nn(B-22, Lord-21)
prep_for(asked-19, B-22)
conj_and(asked-19, joined-26)
dobj(joined-26, them-27)

(ROOT
  (S
    (S
      (NP (DT The) (NNS ladies))
      (VP (VBD retired)
        (PP (TO to)
          (NP
            (NP (DT another) (NN apartment))
            (, ,)
            (VP (VBD divested)
              (NP (PRP themselves))
              (PP (IN of)
                (NP (PRP$ their) (JJ contraband) (NNS goods))))
            (, ,)))))
    (CC and)
    (, ,)
    (S
      (PP (IN after)
        (S
          (VP (VBG calling)
            (PP (IN for)
              (NP
                (NP (DT some) (NNS sandwiches))
                (CC and)
                (NP (NN wine)))))))
      (, ,)
      (NP (NNP Pickersgill))
      (VP
        (VP (VBD waited)
          (NP (DT an) (NN hour)))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB then))
          (VBD returned)
          (PP (IN on)
            (NP (NN board))))))
    (. .)))

det(ladies-2, The-1)
nsubj(retired-3, ladies-2)
root(ROOT-0, retired-3)
det(apartment-6, another-5)
prep_to(retired-3, apartment-6)
vmod(apartment-6, divested-8)
dobj(divested-8, themselves-9)
poss(goods-13, their-11)
amod(goods-13, contraband-12)
prep_of(divested-8, goods-13)
prepc_after(waited-26, calling-18)
det(sandwiches-21, some-20)
prep_for(calling-18, sandwiches-21)
prep_for(calling-18, wine-23)
conj_and(sandwiches-21, wine-23)
nsubj(waited-26, Pickersgill-25)
nsubj(returned-32, Pickersgill-25)
conj_and(retired-3, waited-26)
det(hour-28, an-27)
dobj(waited-26, hour-28)
advmod(returned-32, then-31)
conj_and(retired-3, returned-32)
conj_and(waited-26, returned-32)
prep_on(returned-32, board-34)

(ROOT
  (S
    (S
      (NP (NNP Mrs) (NNP Lascelles))
      (VP (VBD was)
        (ADJP (JJ triumphant))))
    (: ;)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBN rewarded)
        (NP
          (NP (PRP$ her) (JJ new) (NN ally))
          (PRN (: --)
            (NP (DT the) (NN smuggler))
            (: --)))
        (PP (IN with)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (PRP$ her) (JJ sweetest) (NN smiles)))))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(triumphant-4, Lascelles-2)
cop(triumphant-4, was-3)
root(ROOT-0, triumphant-4)
nsubj(rewarded-8, she-7)
conj_and(triumphant-4, rewarded-8)
poss(ally-11, her-9)
amod(ally-11, new-10)
dobj(rewarded-8, ally-11)
det(smuggler-14, the-13)
dep(ally-11, smuggler-14)
prep_with(rewarded-8, one-17)
poss(smiles-21, her-19)
amod(smiles-21, sweetest-20)
prep_of(one-17, smiles-21)

(ROOT
  (S
    (NP
      (NP (NNP Community))
      (PP (IN of)
        (NP (NN interest))))
    (VP (MD will)
      (ADVP (RB sometimes))
      (VP (VB make)
        (NP (JJ strange) (NNS friendships))))
    (. .)))

nsubj(make-6, Community-1)
prep_of(Community-1, interest-3)
aux(make-6, will-4)
advmod(make-6, sometimes-5)
root(ROOT-0, make-6)
amod(friendships-8, strange-7)
dobj(make-6, friendships-8)

(ROOT
  (NP (NNP CHAPTER) (NNP SEVEN) (. .)))

nn(SEVEN-2, CHAPTER-1)
root(ROOT-0, SEVEN-2)

(ROOT
  (S
    (VP (VB CONCLUSION))
    (. .)))

root(ROOT-0, CONCLUSION-1)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (ADVP (RB now))
      (VP (VB return)
        (PP (TO to)
          (NP
            (NP (DT the) (JJ other) (NNS parties))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP have)
                  (VP (VBN assisted)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NNS acts))
                        (PP (IN of)
                          (NP (DT this) (JJ little) (NN drama)))))))))))))
    (. .)))

nsubj(return-4, We-1)
aux(return-4, must-2)
advmod(return-4, now-3)
root(ROOT-0, return-4)
det(parties-8, the-6)
amod(parties-8, other-7)
prep_to(return-4, parties-8)
nsubj(assisted-11, parties-8)
aux(assisted-11, have-10)
rcmod(parties-8, assisted-11)
det(acts-14, the-13)
prep_in(assisted-11, acts-14)
det(drama-18, this-16)
amod(drama-18, little-17)
prep_of(acts-14, drama-18)

(ROOT
  (NP
    (NP (NNP Lord) (NNP B))
    (: --)
    (S
      (SBAR
        (PRN (, ,)
          (SBAR (IN after)
            (FRAG
              (ADJP (JJ paddling)
                (CC and)
                (JJ paddling))))
          (, ,))
        (S
          (NP
            (NP (DT the) (NNS men))
            (VP (VBG relieving)
              (NP (DT each) (JJ other))
              (, ,)
              (SBAR (IN in) (NN order)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP
                        (NP (NN head))
                        (PP (IN against)
                          (NP
                            (NP (DT the) (NN wind))
                            (, ,)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBD was)
                                  (PP (IN off)
                                    (NP (NN shore))))))
                            (, ,))))))))))
          (VP (VBD arrived)
            (PP (IN about)
              (NP (NN midnight)))
            (PP (IN at)
              (NP
                (NP (DT a) (JJ small) (NN town))
                (PP (IN in)
                  (NP (NNP West) (NNP Bay))))))))
      (, ,)
      (X (IN from)
        (NP (NN whence)))
      (NP (PRP he))
      (VP (VBD took)
        (NP (DT a) (NN chaise))
        (PP (IN on)
          (PP (TO to)
            (NP (NNP Portsmouth))))
        (, ,)
        (S
          (VP (VBG taking)
            (NP (PRP it))
            (PP
              (PP (IN for)
                (VP (JJ granted)
                  (SBAR (IN that)
                    (S
                      (NP (PRP$ his) (NN yacht))
                      (VP (MD would)
                        (VP (VB arrive)
                          (ADVP (RB as) (RB soon) (RB as))))))))
              (, ,)
              (CONJP (IN if) (RB not))
              (PP (IN before)
                (NP (PRP himself))))))
        (, ,)
        (S
          (ADVP (RB little))
          (VP (VBG imagining)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (PP (IN in)
                    (NP
                      (NP (NN possession))
                      (PP (IN of)
                        (NP (DT the) (NNS smugglers))))))))))))
    (. .)))

nn(B-2, Lord-1)
root(ROOT-0, B-2)
mark(paddling-6, after-5)
dep(arrived-30, paddling-6)
conj_and(paddling-6, paddling-8)
dep(arrived-30, paddling-8)
det(men-11, the-10)
nsubj(arrived-30, men-11)
vmod(men-11, relieving-12)
det(other-14, each-13)
dobj(relieving-12, other-14)
mark(make-19, in-16)
dep(make-19, order-17)
aux(make-19, to-18)
advcl(relieving-12, make-19)
dobj(make-19, head-20)
det(wind-23, the-22)
prep_against(head-20, wind-23)
nsubj(was-26, wind-23)
rcmod(wind-23, was-26)
prep_off(was-26, shore-28)
advcl(took-44, arrived-30)
prep_about(arrived-30, midnight-32)
det(town-36, a-34)
amod(town-36, small-35)
prep_at(arrived-30, town-36)
nn(Bay-39, West-38)
prep_in(town-36, Bay-39)
dep(whence-42, from-41)
dep(took-44, whence-42)
nsubj(took-44, he-43)
dep(B-2, took-44)
det(chaise-46, a-45)
dobj(took-44, chaise-46)
prep(took-44, on-47)
pcomp(on-47, to-48)
pobj(to-48, Portsmouth-49)
vmod(took-44, taking-51)
vmod(took-44, taking-51')
conj_negcc(taking-51, taking-51')
dobj(taking-51, it-52)
prep_for(taking-51, granted-54)
mark(arrive-59, that-55)
poss(yacht-57, his-56)
nsubj(arrive-59, yacht-57)
aux(arrive-59, would-58)
ccomp(granted-54, arrive-59)
advmod(as-62, as-60)
advmod(as-62, soon-61)
advmod(arrive-59, as-62)
prep_before(taking-51', himself-67)
advmod(imagining-70, little-69)
xcomp(took-44, imagining-70)
mark(was-73, that-71)
nsubj(was-73, it-72)
ccomp(imagining-70, was-73)
prep_in(was-73, possession-75)
det(smugglers-78, the-77)
prep_of(possession-75, smugglers-78)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP he))
    (VP (VBD remained)
      (NP
        (NP (CD three)
          (CC or)
          (CD four) (NNS days))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (PRN (, ,)
            (S
              (VP (VBG becoming)
                (ADJP (JJ impatient))))
            (, ,))
          (S
            (NP (PRP he))
            (VP (VBD applied)
              (PP (TO to)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (NP (PRP$ his) (NNS friends)))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP
                        (VP (VBD had)
                          (NP
                            (NP (DT a) (NN yacht))
                            (PP (IN at)
                              (NP (NNP Cowes)))))
                        (, ,)
                        (CC and)
                        (VP (VBD sailed)
                          (PP (IN with)
                            (NP (PRP him)))
                          (S
                            (VP (TO to)
                              (VP (VB look)
                                (PP (IN after)
                                  (NP (PRP$ his) (JJ own)))))))))))))))))
    (. .)))

advmod(remained-3, There-1)
nsubj(remained-3, he-2)
root(ROOT-0, remained-3)
nn(days-7, three-4)
conj_or(three-4, four-6)
nn(days-7, four-6)
xcomp(remained-3, days-7)
tmod(applied-15, days-7)
advmod(applied-15, when-9)
dep(applied-15, becoming-11)
acomp(becoming-11, impatient-12)
nsubj(applied-15, he-14)
rcmod(days-7, applied-15)
prep_to(applied-15, one-17)
nsubj(had-22, one-17)
nsubj(sailed-29, one-17)
nsubj(look-33, one-17)
poss(friends-20, his-19)
prep_of(one-17, friends-20)
rcmod(one-17, had-22)
det(yacht-24, a-23)
dobj(had-22, yacht-24)
prep_at(yacht-24, Cowes-26)
rcmod(one-17, sailed-29)
conj_and(had-22, sailed-29)
prep_with(sailed-29, him-31)
aux(look-33, to-32)
xcomp(sailed-29, look-33)
poss(own-36, his-35)
prep_after(look-33, own-36)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD left)
      (SBAR
        (S
          (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _))
          (VP (VBD chased)
            (PP (IN by)
              (NP (DT the) (NN revenue-cutter)))))))
    (. .)))

nsubj(left-2, We-1)
root(ROOT-0, left-2)
det(_-6, the-3)
nn(_-6, _-4)
nn(_-6, Happy-go-lucky-5)
nsubj(chased-7, _-6)
ccomp(left-2, chased-7)
det(revenue-cutter-10, the-9)
prep_by(chased-7, revenue-cutter-10)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (JJ first)))
      (NP (DT the) (NN smuggler))
      (VP (VBD had)
        (NP
          (NP (DT the) (NN advantage))
          (PP (IN before)
            (NP (DT the) (NN wind))))))
    (: ;)
    (CC but)
    (, ,)
    (S
      (PP (IN by)
        (NP (NNS degrees)))
      (, ,)
      (NP (DT the) (NN wind))
      (VP
        (VP (VBD went)
          (NP (NN round))
          (PP (IN with)
            (NP (DT the) (NN sun))))
        (, ,)
        (CC and)
        (VP (VBD brought)
          (NP (DT the) (JJ revenue-cutter) (NN leeward)))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADVP (RB then))
        (NP
          (NP (DT a) (NN chase))
          (PP (IN on)
            (NP (DT a) (NN wind))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN revenue-cutter))
      (VP (VBD came)
        (ADVP (RB fast) (RB up))
        (PP (IN with)
          (NP (PRP her)))))
    (. .)))

prep_at(had-5, first-2)
det(smuggler-4, the-3)
nsubj(had-5, smuggler-4)
root(ROOT-0, had-5)
det(advantage-7, the-6)
dobj(had-5, advantage-7)
det(wind-10, the-9)
prep_before(advantage-7, wind-10)
prep_by(went-19, degrees-15)
det(wind-18, the-17)
nsubj(went-19, wind-18)
nsubj(brought-26, wind-18)
conj_but(had-5, went-19)
dobj(went-19, round-20)
det(sun-23, the-22)
prep_with(went-19, sun-23)
conj_but(had-5, brought-26)
conj_and(went-19, brought-26)
det(leeward-29, the-27)
amod(leeward-29, revenue-cutter-28)
dobj(brought-26, leeward-29)
nsubj(chase-35, it-31)
cop(chase-35, was-32)
advmod(chase-35, then-33)
det(chase-35, a-34)
conj_but(had-5, chase-35)
det(wind-38, a-37)
prep_on(chase-35, wind-38)
det(revenue-cutter-42, the-41)
nsubj(came-43, revenue-cutter-42)
conj_and(had-5, came-43)
advmod(up-45, fast-44)
advmod(came-43, up-45)
prep_with(came-43, her-47)

(ROOT
  (S
    (NP (NNP Morrison))
    (, ,)
    (S
      (VP (VBG perceiving)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (NP
                (NP (DT no) (NN chance))
                (PP (IN of)
                  (NP (NN escape)))))))))
    (, ,)
    (VP (VBP let)
      (VP (VB run)
        (NP
          (NP (DT the) (NNS ankers))
          (PP (IN of)
            (NP (NN brandy))))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD might) (RB not)
              (VP (VB be)
                (VP (VBN condemned))))))))
    (: ;)
    (CC but)
    (ADVP (RB still))
    (S
      (NP (PRP he))
      (VP (VBD was)
        (PP (IN in)
          (NP
            (NP (DT an) (JJ awkward) (NN situation))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (ADVP
                    (NP
                      (NP (JJR more) (NNS men))
                      (PP (IN on)
                        (NP (NN board))))
                    (IN than))
                  (VP (VBN allowed)
                    (PP (IN by)
                      (NP
                        (NP (NNP Act))
                        (PP (IN of)
                          (NP (NNP Parliament)))))))))))))
    (. .)))

nsubj(let-12, Morrison-1)
vmod(let-12, perceiving-3)
mark(had-6, that-4)
nsubj(had-6, he-5)
ccomp(perceiving-3, had-6)
neg(chance-8, no-7)
dobj(had-6, chance-8)
prep_of(chance-8, escape-10)
root(ROOT-0, let-12)
xcomp(let-12, run-13)
det(ankers-15, the-14)
dobj(run-13, ankers-15)
prep_of(ankers-15, brandy-17)
mark(condemned-23, that-18)
nsubjpass(condemned-23, he-19)
aux(condemned-23, might-20)
neg(condemned-23, not-21)
auxpass(condemned-23, be-22)
ccomp(run-13, condemned-23)
advmod(was-28, still-26)
nsubj(was-28, he-27)
conj_but(let-12, was-28)
det(situation-32, an-30)
amod(situation-32, awkward-31)
prep_in(was-28, situation-32)
mark(allowed-42, as-34)
nsubj(allowed-42, he-35)
aux(allowed-42, had-36)
amod(men-38, more-37)
npadvmod(than-41, men-38)
prep_on(men-38, board-40)
advmod(allowed-42, than-41)
rcmod(situation-32, allowed-42)
prep_by(allowed-42, Act-44)
prep_of(Act-44, Parliament-46)

(ROOT
  (S
    (S
      (NP (PRP He))
      (ADVP (RB therefore))
      (VP (VBD stood)
        (PRT (RP on))
        (, ,)
        (PP (IN notwithstanding)
          (NP
            (NP (DT the) (NN shot))
            (PP (IN of)
              (NP
                (NP (DT the) (NN cutter))
                (VP (VBD went)
                  (PRT (RP over)
                    (CC and)
                    (RP over))
                  (NP (PRP him)))
                (VP (VBG hoping))))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (DT a) (NN fog)
              (CC or)
              (NN night))
            (VP (MD might)
              (VP (VB enable)
                (S
                  (NP (PRP him))
                  (VP (TO to)
                    (VP (VB escape))))))))))
    (: ;)
    (S (CC but)
      (NP (PRP he))
      (VP (VBD had)
        (NP (DT no) (JJ such) (JJ good) (NN fortune))))
    (: ;)
    (S
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (NN shot))))
      (VP (VBD carried)
        (PRT (RP away))
        (NP
          (NP (DT the) (NN head))
          (PP (IN of)
            (NP (PRP$ his) (NN mast))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NNP _) (NNP Happy-go-lucky) (POS 's))
        (JJ _) (NN luck))
      (VP (VBD was)
        (ADVP (DT all) (RP over))))
    (. .)))

nsubj(stood-3, He-1)
advmod(stood-3, therefore-2)
root(ROOT-0, stood-3)
prt(stood-3, on-4)
det(shot-8, the-7)
prep_notwithstanding(stood-3, shot-8)
det(cutter-11, the-10)
prep_of(shot-8, cutter-11)
vmod(cutter-11, went-12)
prt(went-12, over-13)
cc(over-13, and-14)
dep(over-13, over-15)
dobj(went-12, him-16)
vmod(cutter-11, hoping-17)
mark(enable-25, that-19)
det(fog-21, a-20)
nsubj(enable-25, fog-21)
conj_or(fog-21, night-23)
nsubj(enable-25, night-23)
aux(enable-25, might-24)
ccomp(stood-3, enable-25)
dobj(enable-25, him-26)
nsubj(escape-28, him-26)
aux(escape-28, to-27)
xcomp(enable-25, escape-28)
cc(had-32, but-30)
nsubj(had-32, he-31)
conj_and(stood-3, had-32)
neg(fortune-36, no-33)
amod(fortune-36, such-34)
amod(fortune-36, good-35)
dobj(had-32, fortune-36)
nsubj(carried-42, one-38)
det(shot-41, the-40)
prep_of(one-38, shot-41)
conj_and(stood-3, carried-42)
prt(carried-42, away-43)
det(head-45, the-44)
dobj(carried-42, head-45)
poss(mast-48, his-47)
prep_of(head-45, mast-48)
det(Happy-go-lucky-53, the-51)
nn(Happy-go-lucky-53, _-52)
poss(luck-56, Happy-go-lucky-53)
amod(luck-56, _-55)
nsubj(was-57, luck-56)
conj_and(stood-3, was-57)
dep(over-59, all-58)
advmod(was-57, over-59)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (VP (VBN boarded)
          (CC and)
          (VBN taken)
          (NP
            (NP (NN possession))
            (PP (IN of))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD asserted)
        (SBAR (IN that)
          (S
            (NP (DT the) (JJ extra) (NNS men))
            (VP (VBD were)
              (NP (JJ only) (NNS passengers)))))))
    (: ;)
    (S (CC but)
      (, ,)
      (PP (IN in)
        (NP (DT the) (JJ first) (NN place)))
      (, ,)
      (NP (PRP they))
      (VP (VBD were)
        (VP (VBN dressed)
          (PP (IN in)
            (NP
              (NP (NN seamen) (POS 's))
              (NNS clothes))))))
    (: ;)
    (CC and)
    (S (, ,)
      (PP (IN in)
        (NP (DT the) (NN second)))
      (, ,)
      (SBAR (RB as) (RB soon) (IN as)
        (S
          (NP (DT the) (NN boat))
          (VP (VBD was)
            (ADVP (RB aboard))
            (PP (IN of)
              (NP (PRP her))))))
      (, ,)
      (NP (NNP Appleboy))
      (VP
        (VP (VBD had)
          (VP (VBN gone)
            (PRT (RP down))
            (PP (TO to)
              (NP (PRP$ his) (NN gin-toddy)))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (VP (RB not)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN disturbed)))))))))
    (. .)))

nsubjpass(boarded-3, He-1)
nsubjpass(taken-5, He-1)
auxpass(boarded-3, was-2)
root(ROOT-0, boarded-3)
conj_and(boarded-3, taken-5)
dobj(boarded-3, possession-6)
prep(possession-6, of-7)
nsubj(asserted-10, he-9)
conj_and(boarded-3, asserted-10)
mark(passengers-17, that-11)
det(men-14, the-12)
amod(men-14, extra-13)
nsubj(passengers-17, men-14)
cop(passengers-17, were-15)
amod(passengers-17, only-16)
ccomp(asserted-10, passengers-17)
cc(dressed-28, but-19)
det(place-24, the-22)
amod(place-24, first-23)
prep_in(dressed-28, place-24)
nsubjpass(dressed-28, they-26)
auxpass(dressed-28, were-27)
conj_and(boarded-3, dressed-28)
poss(clothes-32, seamen-30)
prep_in(dressed-28, clothes-32)
det(second-38, the-37)
prep_in(gone-52, second-38)
advmod(was-45, as-40)
advmod(was-45, soon-41)
mark(was-45, as-42)
det(boat-44, the-43)
nsubj(was-45, boat-44)
advcl(gone-52, was-45)
advmod(was-45, aboard-46)
prep_of(was-45, her-48)
nsubj(gone-52, Appleboy-50)
aux(gone-52, had-51)
conj_and(boarded-3, gone-52)
prt(gone-52, down-53)
poss(gin-toddy-56, his-55)
prep_to(gone-52, gin-toddy-56)
aux(not-60, was-59)
conj_and(boarded-3, not-60)
conj_and(gone-52, not-60)
aux(disturbed-63, to-61)
auxpass(disturbed-63, be-62)
xcomp(not-60, disturbed-63)

(ROOT
  (S
    (S
      (NP (DT The) (NNS gentlemen) (NNS smugglers))
      (ADVP (RB therefore))
      (VP (VBD passed)
        (NP
          (NP (DT an) (JJ uncomfortable) (NN night))
          (: ;)
          (CC and)
          (NP (DT the) (NN cutter)))
        (S
          (VP (VBG going)
            (NP (NNP Portland))
            (PP (IN by)
              (NP (NN daylight)))))
        (, ,)
        (SBAR (IN before)
          (S
            (NP (NNP Appleboy))
            (VP (VBD was)
              (ADVP (RB out))
              (PP (IN of)
                (NP (NN bed))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD were)
      (VP (VBN taken)
        (PP (IN on)
          (S
            (VP (NN shore)
              (PP (TO to)
                (NP (DT the) (NN magistrate))))))))
    (. .)))

det(smugglers-3, The-1)
nn(smugglers-3, gentlemen-2)
nsubj(passed-5, smugglers-3)
advmod(passed-5, therefore-4)
ccomp(taken-27, passed-5)
det(night-8, an-6)
amod(night-8, uncomfortable-7)
dobj(passed-5, night-8)
det(cutter-12, the-11)
dobj(passed-5, cutter-12)
conj_and(night-8, cutter-12)
xcomp(passed-5, going-13)
dobj(going-13, Portland-14)
prep_by(going-13, daylight-16)
mark(was-20, before-18)
nsubj(was-20, Appleboy-19)
advcl(passed-5, was-20)
prep_out_of(was-20, bed-23)
nsubjpass(taken-27, they-25)
auxpass(taken-27, were-26)
root(ROOT-0, taken-27)
prepc_on(taken-27, shore-29)
det(magistrate-32, the-31)
prep_to(shore-29, magistrate-32)

(ROOT
  (S
    (S
      (NP (NNP Hautaine))
      (VP (VBD explained)
        (NP (DT the) (JJ whole) (NN affair))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD were)
        (ADVP (RB immediately))
        (VP (VBN released)
          (CC and)
          (VBN treated)
          (PP (IN with)
            (NP (NN respect))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBD were) (RB not)
        (VP (VBN permitted)
          (S
            (VP (TO to)
              (VP (VB depart)
                (SBAR (IN until)
                  (S
                    (NP (PRP they))
                    (VP (VBD were)
                      (VP (VBN bound)
                        (PRT (RP over))
                        (S
                          (VP (TO to)
                            (VP
                              (VP (VB appear)
                                (PP (IN against)
                                  (NP (DT the) (NNS smugglers))))
                              (, ,)
                              (CC and)
                              (VP (VB prove)
                                (NP (DT the) (NN brandy))
                                (S
                                  (VP (VBG having)
                                    (VP (VBN been)
                                      (PP (IN on)
                                        (NP (NN board))))))))))))))))))))
    (. .)))

nsubj(explained-2, Hautaine-1)
root(ROOT-0, explained-2)
det(affair-5, the-3)
amod(affair-5, whole-4)
dobj(explained-2, affair-5)
nsubjpass(released-11, they-8)
nsubjpass(treated-13, they-8)
auxpass(released-11, were-9)
advmod(released-11, immediately-10)
conj_and(explained-2, released-11)
conj_and(explained-2, treated-13)
conj_and(released-11, treated-13)
prep_with(released-11, respect-15)
nsubjpass(permitted-21, they-18)
nsubj(depart-23, they-18)
auxpass(permitted-21, were-19)
neg(permitted-21, not-20)
conj_but(explained-2, permitted-21)
aux(depart-23, to-22)
xcomp(permitted-21, depart-23)
mark(bound-27, until-24)
nsubjpass(bound-27, they-25)
nsubj(appear-30, they-25)
nsubj(prove-36, they-25)
auxpass(bound-27, were-26)
advcl(depart-23, bound-27)
prt(bound-27, over-28)
aux(appear-30, to-29)
xcomp(bound-27, appear-30)
det(smugglers-33, the-32)
prep_against(appear-30, smugglers-33)
xcomp(bound-27, prove-36)
conj_and(appear-30, prove-36)
det(brandy-38, the-37)
dobj(prove-36, brandy-38)
nsubj(been-40, brandy-38)
aux(been-40, having-39)
xcomp(prove-36, been-40)
prep_on(been-40, board-42)

(ROOT
  (S
    (S
      (NP (PRP They))
      (ADVP (RB then))
      (VP (VBD set)
        (PRT (RP off))
        (PP (IN for)
          (NP (NNP Portsmouth)))
        (PP (IN in)
          (NP
            (NP (DT the) (NN seamen) (POS 's))
            (NNS clothes)))
        (, ,)
        (S
          (VP (VBG having)
            (VP (VBN had)
              (NP
                (NP (RB quite) (RB enough))
                (PP (IN of)
                  (NP
                    (NP (NN yachting))
                    (PP (IN for)
                      (NP
                        (NP (DT that) (NN season))
                        (, ,)
                        (NP
                          (NP (NNP Mr) (NNP Ossulton))
                          (VP (VBG declaring)
                            (SBAR (IN that)
                              (S
                                (NP (PRP he))
                                (ADVP (RB only))
                                (VP (VBD wanted)
                                  (S
                                    (VP (TO to)
                                      (VP (VB get)
                                        (NP (PRP$ his) (NN luggage))))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (MD would)
        (VP (VB take)
          (NP (NN care))
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP he))
              (VP (VBD put)
                (NP (PRP himself))
                (ADVP (RB again))
                (PP
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN way))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN shot))
                          (PP (IN of)
                            (NP (DT a) (NN revenue) (NN cruiser)))))))
                  (, ,)
                  (CC or)
                  (PP (IN of)
                    (S
                      (VP (VBG sleeping)
                        (NP (DT a) (NN night))
                        (PP (IN on)
                          (NP (PRP$ her) (NNS decks)))))))))))))
    (. .)))

nsubj(set-3, They-1)
nsubj(had-14, They-1)
advmod(set-3, then-2)
root(ROOT-0, set-3)
prt(set-3, off-4)
prep_for(set-3, Portsmouth-6)
det(seamen-9, the-8)
poss(clothes-11, seamen-9)
prep_in(set-3, clothes-11)
aux(had-14, having-13)
xcomp(set-3, had-14)
advmod(enough-16, quite-15)
dobj(had-14, enough-16)
prep_of(enough-16, yachting-18)
det(season-21, that-20)
prep_for(yachting-18, season-21)
nn(Ossulton-24, Mr-23)
appos(season-21, Ossulton-24)
vmod(Ossulton-24, declaring-25)
mark(wanted-29, that-26)
nsubj(wanted-29, he-27)
nsubj(get-31, he-27)
advmod(wanted-29, only-28)
ccomp(declaring-25, wanted-29)
aux(get-31, to-30)
xcomp(wanted-29, get-31)
poss(luggage-33, his-32)
dobj(get-31, luggage-33)
advmod(take-39, then-36)
nsubj(take-39, he-37)
aux(take-39, would-38)
conj_and(set-3, take-39)
dobj(take-39, care-40)
advmod(put-43, how-41)
nsubj(put-43, he-42)
nsubj(put-43', he-42)
dep(take-39, put-43)
dep(take-39, put-43')
conj_or(put-43, put-43')
dobj(put-43, himself-44)
advmod(put-43, again-45)
det(way-48, the-47)
prep_in(put-43, way-48)
det(shot-51, the-50)
prep_of(way-48, shot-51)
det(cruiser-55, a-53)
nn(cruiser-55, revenue-54)
prep_of(shot-51, cruiser-55)
prepc_of(put-43', sleeping-59)
det(night-61, a-60)
tmod(sleeping-59, night-61)
poss(decks-64, her-63)
prep_on(sleeping-59, decks-64)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (JJ mean) (NN time))
        (SBAR
          (S
            (NP
              (NP (NNP Morrison))
              (CC and)
              (NP (PRP$ his) (NNS men)))
            (VP (VBD were)
              (VP (VBN locked)
                (PRT (RP up))
                (PP (IN in)
                  (NP (DT the) (NN gaol)))))))))
    (, ,)
    (NP
      (NP
        (NP (DT the) (JJ old) (NN man))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (DT the) (NN key))
            (VP (VBD was)
              (VP (VBN turned)
                (PP (IN on)
                  (NP (PRP him)))))))
        (, ,))
      (VP (VBG exclaiming)))
    (PRN (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD raised)
            (NP (PRP$ his) (NN foot))
            (PP (IN in)
              (NP (NN vexation))))))
      (, ,))
    (`` ``)
    (NP (DT That))
    (VP (VBD cursed)
      (NP (JJ blue) (NN pigeon)))
    (. !) ('' '')))

det(time-4, the-2)
amod(time-4, mean-3)
prep_in(cursed-40, time-4)
nsubjpass(locked-10, Morrison-5)
poss(men-8, his-7)
conj_and(Morrison-5, men-8)
nsubjpass(locked-10, men-8)
auxpass(locked-10, were-9)
rcmod(time-4, locked-10)
prt(locked-10, up-11)
det(gaol-14, the-13)
prep_in(locked-10, gaol-14)
det(man-18, the-16)
amod(man-18, old-17)
nsubj(cursed-40, man-18)
mark(turned-24, as-20)
det(key-22, the-21)
nsubjpass(turned-24, key-22)
auxpass(turned-24, was-23)
dep(man-18, turned-24)
prep_on(turned-24, him-26)
vmod(man-18, exclaiming-28)
mark(raised-32, as-30)
nsubj(raised-32, he-31)
parataxis(cursed-40, raised-32)
poss(foot-34, his-33)
dobj(raised-32, foot-34)
prep_in(raised-32, vexation-36)
nsubj(cursed-40, That-39)
root(ROOT-0, cursed-40)
amod(pigeon-42, blue-41)
dobj(cursed-40, pigeon-42)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD will)
      (ADVP (RB now))
      (VP (VB return)
        (PP (TO to)
          (NP (DT the) (NN yacht)))))
    (. .)))

nsubj(return-4, We-1)
aux(return-4, will-2)
advmod(return-4, now-3)
root(ROOT-0, return-4)
det(yacht-7, the-6)
prep_to(return-4, yacht-7)

(ROOT
  (S
    (SBAR
      (NP (RB About) (DT an) (NN hour))
      (IN after)
      (S
        (NP (NNP Pickersgill))
        (VP (VBD had)
          (VP (VBN come)
            (PP (IN on)
              (NP (NN board)))))))
    (, ,)
    (NP (NNP Corbett))
    (VP
      (VP (VBD had)
        (VP (VBN made)
          (NP (PDT all) (PRP$ his) (NNS arrangements))))
      (CC and)
      (VP (VBD followed)
        (NP (PRP him))))
    (. .)))

advmod(hour-3, About-1)
det(hour-3, an-2)
dep(come-7, hour-3)
mark(come-7, after-4)
nsubj(come-7, Pickersgill-5)
aux(come-7, had-6)
advcl(made-13, come-7)
prep_on(come-7, board-9)
nsubj(made-13, Corbett-11)
nsubj(followed-18, Corbett-11)
aux(made-13, had-12)
root(ROOT-0, made-13)
predet(arrangements-16, all-14)
poss(arrangements-16, his-15)
dobj(made-13, arrangements-16)
conj_and(made-13, followed-18)
dobj(followed-18, him-19)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was) (RB not)
        (ADJP (JJ advisable)
          (S
            (VP (TO to)
              (VP (VB remain)
                (PP (IN at)
                  (NP (NNP Torquay)))
                (ADVP (DT any) (RBR longer))
                (, ,)
                (PP (IN through)
                  (NP
                    (NP (NN fear))
                    (PP (IN of)
                      (NP (NN discovery)))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (ADVP (RB therefore))
      (VP
        (VP (VBD weighed)
          (VP (VB anchor)
            (PP (IN before)
              (NP (NN dinner)))))
        (, ,)
        (CC and)
        (VP (VBD made)
          (NP (NN sail)))))
    (. .)))

nsubj(advisable-4, It-1)
nsubj(remain-6, It-1)
cop(advisable-4, was-2)
neg(advisable-4, not-3)
root(ROOT-0, advisable-4)
aux(remain-6, to-5)
xcomp(advisable-4, remain-6)
prep_at(remain-6, Torquay-8)
dep(longer-10, any-9)
advmod(remain-6, longer-10)
prep_through(remain-6, fear-13)
prep_of(fear-13, discovery-15)
nsubj(weighed-19, he-17)
nsubj(made-25, he-17)
advmod(weighed-19, therefore-18)
parataxis(advisable-4, weighed-19)
xcomp(weighed-19, anchor-20)
prep_before(anchor-20, dinner-22)
parataxis(advisable-4, made-25)
conj_and(weighed-19, made-25)
dobj(made-25, sail-26)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB intend)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP
                (NP (RB now))
                (, ,)
                (NP (PRP$ my) (NN lord))))))))
    (. ?) ('' '')))

dep(intend-5, What-2)
aux(intend-5, do-3)
nsubj(intend-5, you-4)
nsubj(do-7, you-4)
root(ROOT-0, intend-5)
aux(do-7, to-6)
xcomp(intend-5, do-7)
dobj(do-7, now-8)
poss(lord-11, my-10)
appos(now-8, lord-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Mrs) (NNP Lascelles)))
    (. .)))

root(ROOT-0, said-1)
nn(Lascelles-3, Mrs-2)
dobj(said-1, Lascelles-3)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP intend)
        (S
          (VP (TO to)
            (VP
              (VP (VB run)
                (PRT (RP down))
                (PP (TO to)
                  (NP (NNP Cowes))))
              (, ,)
              (VP (VB anchor)
                (NP
                  (NP (DT the) (NN yacht))
                  (PP (IN in)
                    (NP (DT the) (NN night))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT an) (NN hour))
        (PP (IN before)
          (NP (NN daylight))))
      (VP (VBP have)
        (NP (PRP you))
        (PP (IN in)
          (NP
            (NP (PRP$ my) (NN boat))
            (PP (IN with)
              (NP (PDT all) (PRP$ my) (NNS men)))))))
    (. .)))

nsubj(intend-3, I-2)
nsubj(run-5, I-2)
root(ROOT-0, intend-3)
aux(run-5, to-4)
xcomp(intend-3, run-5)
prt(run-5, down-6)
prep_to(run-5, Cowes-8)
dep(run-5, anchor-10)
det(yacht-12, the-11)
dobj(anchor-10, yacht-12)
det(night-15, the-14)
prep_in(yacht-12, night-15)
det(hour-19, an-18)
nsubj(have-22, hour-19)
prep_before(hour-19, daylight-21)
conj_and(intend-3, have-22)
dobj(have-22, you-23)
poss(boat-26, my-25)
prep_in(have-22, boat-26)
predet(men-30, all-28)
poss(men-30, my-29)
prep_with(boat-26, men-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP
        (VP (VB take)
          (NP (NN care))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP are)
                (PP (IN in)
                  (NP (JJ perfect) (NN safety)))))))
        (, ,)
        (VP (VB depend)
          (PP (IN upon)
            (NP (PRP it))))
        (, ,)
        (SBAR (RB even) (IN if)
          (S
            (NP (PRP I))
            (VP (VBP run)
              (NP (DT a) (NN risk)))))))
    (. .)))

nsubj(take-3, I-1)
aux(take-3, will-2)
root(ROOT-0, take-3)
dobj(take-3, care-4)
mark(are-7, that-5)
nsubj(are-7, you-6)
ccomp(take-3, are-7)
amod(safety-10, perfect-9)
prep_in(are-7, safety-10)
dep(take-3, depend-12)
prep_upon(depend-12, it-14)
advmod(run-19, even-16)
mark(run-19, if-17)
nsubj(run-19, I-18)
advcl(take-3, run-19)
det(risk-21, a-20)
dobj(run-19, risk-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should) (, ,)
      (ADVP (RB indeed))
      (, ,)
      (VP (VB be)
        (ADJP (JJ miserable))
        (, ,)
        (SBAR (IN if)
          (S (, ,)
            (PP (IN through)
              (NP (PRP$ my) (JJ wild) (NNS freaks)))
            (, ,)
            (NP (DT any) (NN accident))
            (VP (MD should)
              (VP (VB happen)
                (PP (TO to)
                  (NP
                    (NP (NNP Mrs) (NNP Lascelles))
                    (CC or)
                    (NP (NNP Miss) (NNP Ossulton))))))))))
    (. .) ('' '')))

nsubj(miserable-7, I-1)
aux(miserable-7, should-2)
advmod(miserable-7, indeed-4)
cop(miserable-7, be-6)
root(ROOT-0, miserable-7)
mark(happen-19, if-9)
poss(freaks-14, my-12)
amod(freaks-14, wild-13)
prep_through(happen-19, freaks-14)
det(accident-17, any-16)
nsubj(happen-19, accident-17)
aux(happen-19, should-18)
advcl(miserable-7, happen-19)
nn(Lascelles-22, Mrs-21)
prep_to(happen-19, Lascelles-22)
nn(Ossulton-25, Miss-24)
prep_to(happen-19, Ossulton-25)
conj_or(Lascelles-22, Ossulton-25)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (RB very) (JJ anxious)
          (PP (IN about)
            (NP (PRP$ my) (NN father))))))
    (, ,) ('' '')
    (VP (VBD observed))
    (NP (NNP Cecilia))
    (. .)))

nsubj(anxious-5, I-2)
cop(anxious-5, am-3)
advmod(anxious-5, very-4)
ccomp(observed-11, anxious-5)
poss(father-8, my-7)
prep_about(anxious-5, father-8)
root(ROOT-0, observed-11)
nsubj(observed-11, Cecilia-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP trust)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB keep)
              (NP (PRP$ your) (NN promise)))))))
    (. .) ('' '')))

nsubj(trust-3, I-2)
root(ROOT-0, trust-3)
mark(keep-7, that-4)
nsubj(keep-7, you-5)
aux(keep-7, will-6)
ccomp(trust-3, keep-7)
poss(promise-9, your-8)
dobj(keep-7, promise-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (ADVP (RB always))
    (VP (VB have)
      (S
        (NP (NN hitherto))
        (, ,)
        (NP (NNP Miss) (NNP Ossulton))
        (: ;)
        (VP (VBP have)
          (NP (PRP I))
          (NP (RB not)))))
    (. ?) ('' '')))

nsubj(have-4, I-2)
advmod(have-4, always-3)
root(ROOT-0, have-4)
nsubj(have-10, hitherto-5)
nn(Ossulton-8, Miss-7)
nsubj(have-10, Ossulton-8)
ccomp(have-4, have-10)
iobj(have-10, I-11)
dobj(have-10, not-12)

(ROOT
  (S (`` ``)
    (NP (NNP Ours))
    (VP (VBZ is)
      (ADVP (CC but))
      (NP (DT a)
        (ADJP (JJ short)
          (CC and)
          (JJ strange))
        (NN acquaintance)))
    (. .) ('' '')))

nsubj(acquaintance-9, Ours-2)
cop(acquaintance-9, is-3)
advmod(acquaintance-9, but-4)
det(acquaintance-9, a-5)
amod(acquaintance-9, short-6)
conj_and(short-6, strange-8)
amod(acquaintance-9, strange-8)
root(ROOT-0, acquaintance-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP grant)
        (NP (PRP it))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD will)
        (VP (VB serve)
          (SBAR (IN for)
            (S
              (NP (PRP you))
              (VP (TO to)
                (VP (VB talk)
                  (NP (RB about) (JJ long))
                  (PP (IN after)))))))))
    (. .)))

nsubj(grant-3, I-2)
root(ROOT-0, grant-3)
dobj(grant-3, it-4)
nsubj(serve-9, it-7)
aux(serve-9, will-8)
conj_but(grant-3, serve-9)
mark(talk-13, for-10)
nsubj(talk-13, you-11)
aux(talk-13, to-12)
advcl(serve-9, talk-13)
xcomp(serve-9, talk-13)
advmod(long-15, about-14)
dobj(talk-13, long-15)
prep(talk-13, after-16)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB disappear)
          (PP (IN as)
            (ADVP (RB suddenly)))
          (SBAR (IN as)
            (S
              (NP (PRP I))
              (VP (VBP have)
                (VP (VBN come))))))))
    (: --)
    (S
      (NP (PRP you))
      (VP (MD will) (RB neither)
        (PP (IN of)
          (NP
            (NP (PRP you))
            (, ,)
            (PP (IN in)
              (NP (DT all) (NN probability)))))
        (, ,)
        (ADVP (RB ever))
        (VP (VB see)
          (NP (PRP me))
          (ADVP (RB again)))))
    (. .) ('' '')))

nsubj(disappear-3, I-1)
aux(disappear-3, shall-2)
root(ROOT-0, disappear-3)
prep(disappear-3, as-4)
pcomp(as-4, suddenly-5)
mark(come-9, as-6)
nsubj(come-9, I-7)
aux(come-9, have-8)
advcl(disappear-3, come-9)
nsubj(see-22, you-11)
aux(see-22, will-12)
advmod(see-22, neither-13)
prep_of(see-22, you-15)
det(probability-19, all-18)
prep_in(you-15, probability-19)
advmod(see-22, ever-21)
parataxis(disappear-3, see-22)
dobj(see-22, me-23)
advmod(see-22, again-24)

(ROOT
  (S
    (S
      (NP (DT The) (NN dinner))
      (VP (VBD was)
        (VP (VBN announced))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD sat)
        (ADVP (RB down)
          (PP (TO to)
            (NP (NN table))))
        (ADVP (RB as) (RB before))))
    (: ;)
    (CC but)
    (S
      (S
        (NP (DT the) (JJ elderly) (NN spinster))
        (VP (VBD refused)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (PRP$ her) (NN appearance)))))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (NNP Mr) (NNP Lascelles)
            (CC and)
            (NNP Cecilia))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD thought)
                (SBAR
                  (S
                    (NP (PRP she))
                    (VP (VBD had)
                      (VP (VBN been)
                        (ADJP (JJ frightened) (RB enough)))))))))
          (, ,))
        (VP (VBD did) (RB not)
          (VP (VB attempt)
            (S
              (VP (TO to)
                (VP (VB force)
                  (NP (PRP her)))))))))
    (. .)))

det(dinner-2, The-1)
nsubjpass(announced-4, dinner-2)
auxpass(announced-4, was-3)
root(ROOT-0, announced-4)
nsubj(sat-8, they-7)
conj_and(announced-4, sat-8)
advmod(sat-8, down-9)
prep_to(down-9, table-11)
advmod(before-13, as-12)
advmod(sat-8, before-13)
det(spinster-18, the-16)
amod(spinster-18, elderly-17)
nsubj(refused-19, spinster-18)
nsubj(make-21, spinster-18)
conj_but(announced-4, refused-19)
aux(make-21, to-20)
xcomp(refused-19, make-21)
poss(appearance-23, her-22)
dobj(make-21, appearance-23)
nn(Lascelles-27, Mr-26)
nsubj(thought-32, Lascelles-27)
nsubj(attempt-41, Lascelles-27)
nsubj(force-43, Lascelles-27)
conj_and(Lascelles-27, Cecilia-29)
nsubj(thought-32, Cecilia-29)
nsubj(attempt-41, Cecilia-29)
nsubj(force-43, Cecilia-29)
rcmod(Lascelles-27, thought-32)
nsubj(frightened-36, she-33)
aux(frightened-36, had-34)
cop(frightened-36, been-35)
ccomp(thought-32, frightened-36)
advmod(frightened-36, enough-37)
aux(attempt-41, did-39)
neg(attempt-41, not-40)
conj_but(announced-4, attempt-41)
conj_and(refused-19, attempt-41)
aux(force-43, to-42)
xcomp(attempt-41, force-43)
dobj(force-43, her-44)

(ROOT
  (S
    (NP (NNP Pickersgill))
    (ADVP (RB immediately))
    (VP (VBD yielded)
      (PP
        (PP (TO to)
          (NP (DT these) (NNS remonstrances)))
        (, ,)
        (CC and)
        (PP (IN from)
          (SBAR
            (WHNP (WDT that) (NN time))
            (S
              (NP (PRP she))
              (VP (VBD remained)
                (ADJP (JJ undisturbed))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NNS ladies) (POS '))
                    (NN cabin)))
                (, ,)
                (S
                  (VP (VBG meditating)
                    (PRT (RP over))
                    (NP
                      (NP (DT the) (NN indignity))
                      (PP (IN of)
                        (S
                          (VP (VBG having)
                            (VP
                              (VP (VBN sat)
                                (PRT (RP down))
                                (PP (TO to)
                                  (NP (NN table)))
                                (, ,)
                                (S
                                  (VP (VBG having)
                                    (VP (VBD drank)
                                      (NP (NN wine))))))
                              (, ,)
                              (CC and)
                              (VP (VBN been)
                                (VP (VBN obliged)
                                  (S
                                    (VP (TO to)
                                      (VP
                                        (VP (VB walk)
                                          (PP (IN on)
                                            (NP (NN shore)))
                                          (, ,)
                                          (S
                                            (VP (VBG taking)
                                              (NP
                                                (NP (DT the) (NN arm))
                                                (PP (IN of)
                                                  (NP (DT a) (NN smuggler)))))))
                                        (, ,)
                                        (CC and)
                                        (VP (VB appear)
                                          (PP (IN in)
                                            (NP (PDT such) (DT a) (JJ humiliating) (NN situation))))))))))))))))))))))
    (. .)))

nsubj(yielded-3, Pickersgill-1)
nsubj(yielded-3', Pickersgill-1)
advmod(yielded-3, immediately-2)
root(ROOT-0, yielded-3)
conj_and(yielded-3, yielded-3')
det(remonstrances-6, these-5)
prep_to(yielded-3, remonstrances-6)
det(time-11, that-10)
dobj(remained-13, time-11)
nsubj(remained-13, she-12)
prepc_from(yielded-3', remained-13)
acomp(remained-13, undisturbed-14)
det(ladies-17, the-16)
poss(cabin-19, ladies-17)
prep_in(remained-13, cabin-19)
xcomp(remained-13, meditating-21)
prt(meditating-21, over-22)
det(indignity-24, the-23)
dobj(meditating-21, indignity-24)
aux(sat-27, having-26)
prepc_of(indignity-24, sat-27)
prt(sat-27, down-28)
prep_to(sat-27, table-30)
aux(drank-33, having-32)
xcomp(sat-27, drank-33)
dobj(drank-33, wine-34)
auxpass(obliged-38, been-37)
prepc_of(indignity-24, obliged-38)
conj_and(sat-27, obliged-38)
aux(walk-40, to-39)
xcomp(obliged-38, walk-40)
prep_on(walk-40, shore-42)
xcomp(walk-40, taking-44)
det(arm-46, the-45)
dobj(taking-44, arm-46)
det(smuggler-49, a-48)
prep_of(arm-46, smuggler-49)
xcomp(obliged-38, appear-52)
conj_and(walk-40, appear-52)
predet(situation-57, such-54)
det(situation-57, a-55)
amod(situation-57, humiliating-56)
prep_in(appear-52, situation-57)

(ROOT
  (S
    (S
      (NP (DT The) (NN wind))
      (VP (VBD was)
        (ADJP (JJ light))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP they))
        (VP
          (VP (VBD made)
            (PP (CC but)
              (NP (JJ little) (NN progress))))
          (, ,)
          (CC and)
          (VP (VBD were) (RB not)
            (ADJP (JJ abreast)
              (PP (IN of)
                (NP (NNP Portland))))
            (PP (IN till)
              (NP
                (NP (DT the) (JJ second) (NN day))
                (, ,)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (DT another) (NN yacht))
                    (VP (VBD appeared)
                      (PP (IN in)
                        (NP (NN sight)))))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (CD two) (NNS vessels))
        (ADVP (RB slowly))
        (VP (VBD neared) (, ,)
          (SBAR (IN until)
            (S
              (PP (IN in)
                (NP (DT the) (NN afternoon)))
              (NP (PRP they))
              (VP (VBD were)
                (PP (IN within)
                  (NP
                    (NP (CD four) (NNS miles))
                    (PP (IN of)
                      (NP (DT each) (JJ other)))))))))))
    (. .)))

det(wind-2, The-1)
nsubj(light-4, wind-2)
cop(light-4, was-3)
root(ROOT-0, light-4)
nsubj(made-8, they-7)
nsubj(abreast-16, they-7)
conj_and(light-4, made-8)
prep(made-8, but-9)
amod(progress-11, little-10)
pobj(but-9, progress-11)
cop(abreast-16, were-14)
neg(abreast-16, not-15)
conj_and(light-4, abreast-16)
conj_and(made-8, abreast-16)
prep_of(abreast-16, Portland-18)
det(day-22, the-20)
amod(day-22, second-21)
prep_till(abreast-16, day-22)
tmod(appeared-27, day-22)
advmod(appeared-27, when-24)
det(yacht-26, another-25)
nsubj(appeared-27, yacht-26)
rcmod(day-22, appeared-27)
prep_in(appeared-27, sight-29)
det(vessels-34, the-32)
num(vessels-34, two-33)
nsubj(neared-36, vessels-34)
advmod(neared-36, slowly-35)
conj_and(light-4, neared-36)
conj_and(made-8, neared-36)
mark(were-43, until-38)
det(afternoon-41, the-40)
prep_in(were-43, afternoon-41)
nsubj(were-43, they-42)
advcl(neared-36, were-43)
num(miles-46, four-45)
prep_within(were-43, miles-46)
det(other-49, each-48)
prep_of(miles-46, other-49)

(ROOT
  (S
    (S
      (NP (PRP It))
      (ADVP (RB then))
      (VP (VBD fell)
        (NP (DT a) (JJ dead) (NN calm))))
    (: :)
    (S
      (S
        (NP (NNS signals))
        (VP
          (VP (VBD were)
            (VP (VBN thrown)
              (PRT (RP out))
              (PP (IN by)
                (NP (DT the) (JJ other) (NN yacht)))))
          (, ,)
          (CC but)
          (VP (MD could) (RB not)
            (VP (VB be)
              (ADJP (JJ distinguished))))))
      (, ,)
      (CC and)
      (S (, ,)
        (PP (IN for)
          (NP (DT the) (JJ last) (NN time)))
        (, ,)
        (NP (PRP they))
        (VP (VBD sat)
          (PRT (RP down))
          (PP (TO to)
            (NP (NN dinner))))))
    (. .)))

nsubj(fell-3, It-1)
advmod(fell-3, then-2)
root(ROOT-0, fell-3)
det(calm-6, a-4)
amod(calm-6, dead-5)
dobj(fell-3, calm-6)
nsubjpass(thrown-10, signals-8)
nsubj(distinguished-21, signals-8)
auxpass(thrown-10, were-9)
parataxis(fell-3, thrown-10)
prt(thrown-10, out-11)
det(yacht-15, the-13)
amod(yacht-15, other-14)
agent(thrown-10, yacht-15)
aux(distinguished-21, could-18)
neg(distinguished-21, not-19)
cop(distinguished-21, be-20)
parataxis(fell-3, distinguished-21)
conj_but(thrown-10, distinguished-21)
det(time-28, the-26)
amod(time-28, last-27)
prep_for(sat-31, time-28)
nsubj(sat-31, they-30)
parataxis(fell-3, sat-31)
conj_and(thrown-10, sat-31)
prt(sat-31, down-32)
prep_to(sat-31, dinner-34)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (CD Three) (NNS days) (POS '))
          (NN companionship))
        (PP (IN on)
          (NP
            (NP (NN board))
            (PP (IN of)
              (NP (DT a) (NN vessel)))))
        (, ,)
        (VP (VBN cooped)
          (PRT (RP up))
          (UCP
            (ADJP (RB together))
            (, ,)
            (CC and)
            (VP (VBG having)
              (S
                (NP (DT no) (NN one))
                (ADJP (RB else))
                (S
                  (VP (TO to)
                    (VP (VB converse)
                      (PP (IN with)))))))))
        (, ,))
      (VP (MD will)
        (VP (VB produce)
          (NP (NN intimacy)))))
    (: ;)
    (CC and)
    (S
      (NP (NNP Pickersgill))
      (VP (VBD was)
        (NP
          (NP (DT a) (JJ young) (NN man))
          (PP (IN of)
            (NP
              (ADJP (RB so) (JJ much))
              (NN originality)
              (CC and)
              (NN information))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBN listened)
                (S
                  (VP (TO to)))
                (PP (IN with)
                  (NP (NN pleasure)))))))))
    (. .)))

num(days-2, Three-1)
poss(companionship-4, days-2)
nsubj(produce-25, companionship-4)
prep_on(companionship-4, board-6)
det(vessel-9, a-8)
prep_of(board-6, vessel-9)
vmod(companionship-4, cooped-11)
prt(cooped-11, up-12)
acomp(cooped-11, together-13)
acomp(cooped-11, having-16)
conj_and(together-13, having-16)
neg(one-18, no-17)
nsubj(converse-21, one-18)
dep(converse-21, else-19)
aux(converse-21, to-20)
xcomp(having-16, converse-21)
prep(converse-21, with-22)
aux(produce-25, will-24)
root(ROOT-0, produce-25)
dobj(produce-25, intimacy-26)
nsubj(man-33, Pickersgill-29)
cop(man-33, was-30)
det(man-33, a-31)
amod(man-33, young-32)
conj_and(produce-25, man-33)
advmod(much-36, so-35)
amod(originality-37, much-36)
prep_of(man-33, originality-37)
prep_of(man-33, information-39)
conj_and(originality-37, information-39)
mark(listened-44, that-41)
nsubjpass(listened-44, he-42)
nsubj(to-45, he-42)
auxpass(listened-44, was-43)
ccomp(man-33, listened-44)
xcomp(listened-44, to-45)
prep_with(listened-44, pleasure-47)

(ROOT
  (S
    (S
      (NP (PRP He))
      (ADVP (RB never))
      (VP (VBD attempted)
        (S
          (VP (TO to)
            (VP (VB advance)
              (PP (IN beyond)
                (NP
                  (NP (DT the) (NN line))
                  (PP (IN of)
                    (NP (JJ strict) (NN decorum)
                      (CC and)
                      (NNS politeness))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP$ his) (NN companion))
      (VP (VBD was)
        (ADJP (RB equally) (JJ unpresuming))))
    (. .)))

nsubj(attempted-3, He-1)
nsubj(advance-5, He-1)
neg(attempted-3, never-2)
root(ROOT-0, attempted-3)
aux(advance-5, to-4)
xcomp(attempted-3, advance-5)
det(line-8, the-7)
prep_beyond(advance-5, line-8)
amod(decorum-11, strict-10)
prep_of(line-8, decorum-11)
prep_of(line-8, politeness-13)
conj_and(decorum-11, politeness-13)
poss(companion-17, his-16)
nsubj(unpresuming-20, companion-17)
cop(unpresuming-20, was-18)
advmod(unpresuming-20, equally-19)
conj_and(attempted-3, unpresuming-20)

(ROOT
  (S
    (S
      (VP (VBN Situated)
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP (VBD were))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG feeling)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (MD must)
                (VP (VB have)
                  (VP (VBN been)
                    (NP
                      (NP (DT the) (NN case))
                      (SBAR
                        (S
                          (VP (VBD had)
                            (S
                              (NP (PRP they))
                              (VP (VBN fallen)
                                (PP (IN into)
                                  (NP (JJ other) (NNS hands))))))))))))))))
      (, ,)
      (NP (DT both) (NNP Cecilia)
        (CC and)
        (NNP Mrs) (NNP Lascelles))
      (VP (VBD felt)
        (NP
          (NP (DT some) (NN degree))
          (PP (IN of)
            (NP (NN gratitude))))
        (PP (IN towards)
          (NP (PRP him)))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN although)
        (FRAG
          (ADJP (JJ anxious)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN relieved)
                    (PP (IN from)
                      (NP
                        (ADJP (RB so) (JJ strange))
                        (DT a) (NN position))))))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD had)
        (ADVP (RB gradually))
        (VP (VBN acquired)
          (NP
            (NP (DT a) (JJ perfect) (NN confidence))
            (PP (IN in)
              (NP (PRP him)))))))
    (: ;)
    (CC and)
    (S
      (NP (DT this))
      (VP (VBD had)
        (VP (VBN produced)
          (NP
            (NP (DT a) (NN degree))
            (PP (IN of)
              (NP (NN familiarity))))
          (PP (IN on)
            (NP (PRP$ their) (NNS parts)))
          (, ,)
          (SBAR (IN although)
            (S
              (ADVP (RB never))
              (VP (VBN ventured)
                (PP (RP upon)
                  (PP (IN by)
                    (NP (DT the) (NN smuggler))))))))))
    (. .)))

root(ROOT-0, Situated-1)
mark(were-4, as-2)
nsubj(were-4, they-3)
advcl(Situated-1, were-4)
vmod(felt-26, feeling-7)
nsubj(case-13, what-8)
aux(case-13, must-9)
aux(case-13, have-10)
cop(case-13, been-11)
det(case-13, the-12)
ccomp(feeling-7, case-13)
rcmod(case-13, had-14)
nsubj(fallen-16, they-15)
ccomp(had-14, fallen-16)
amod(hands-19, other-18)
prep_into(fallen-16, hands-19)
preconj(Lascelles-25, both-21)
nn(Lascelles-25, Cecilia-22)
conj_and(Cecilia-22, Mrs-24)
nn(Lascelles-25, Mrs-24)
nsubj(felt-26, Lascelles-25)
conj_and(Situated-1, felt-26)
det(degree-28, some-27)
dobj(felt-26, degree-28)
prep_of(degree-28, gratitude-30)
prep_towards(felt-26, him-32)
mark(anxious-36, although-35)
advcl(acquired-49, anxious-36)
aux(relieved-39, to-37)
auxpass(relieved-39, be-38)
xcomp(anxious-36, relieved-39)
advmod(strange-42, so-41)
amod(position-44, strange-42)
det(position-44, a-43)
prep_from(relieved-39, position-44)
nsubj(acquired-49, they-46)
aux(acquired-49, had-47)
advmod(acquired-49, gradually-48)
conj_and(Situated-1, acquired-49)
det(confidence-52, a-50)
amod(confidence-52, perfect-51)
dobj(acquired-49, confidence-52)
prep_in(confidence-52, him-54)
nsubj(produced-59, this-57)
aux(produced-59, had-58)
conj_and(Situated-1, produced-59)
det(degree-61, a-60)
dobj(produced-59, degree-61)
prep_of(degree-61, familiarity-63)
poss(parts-66, their-65)
prep_on(produced-59, parts-66)
mark(ventured-70, although-68)
neg(ventured-70, never-69)
advcl(produced-59, ventured-70)
prep(ventured-70, upon-71)
det(smuggler-74, the-73)
prep_by(upon-71, smuggler-74)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (NNP Corbett))
        (VP (VBD was)
          (PP (IN at)
            (NP (DT the) (NN table))))))
    (, ,)
    (NP
      (NP (CD one))
      (PP (IN of)
        (NP (DT the) (NNS men))))
    (VP
      (VP (VBD came)
        (PRT (RP down)))
      (CC and)
      (VP (VBD made)
        (NP (DT a) (NN sign))))
    (. .)))

mark(was-3, As-1)
nsubj(was-3, Corbett-2)
advcl(came-12, was-3)
det(table-6, the-5)
prep_at(was-3, table-6)
nsubj(came-12, one-8)
nsubj(made-15, one-8)
det(men-11, the-10)
prep_of(one-8, men-11)
root(ROOT-0, came-12)
prt(came-12, down-13)
conj_and(came-12, made-15)
det(sign-17, a-16)
dobj(made-15, sign-17)

(ROOT
  (S
    (NP (NNP Corbett))
    (, ,)
    (ADVP (RB shortly))
    (VP
      (VP
        (ADVP (IN after))
        (VBD quitted)
        (NP (DT the) (NN table)))
      (CC and)
      (VP (VBD went)
        (PP (IN on)
          (NP (NN deck)))))
    (. .)))

nsubj(quitted-5, Corbett-1)
nsubj(went-9, Corbett-1)
advmod(quitted-5, shortly-3)
advmod(quitted-5, after-4)
root(ROOT-0, quitted-5)
det(table-7, the-6)
dobj(quitted-5, table-7)
conj_and(quitted-5, went-9)
prep_on(went-9, deck-11)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP
        (VP (VBP wish)
          (PRN (, ,)
            (S
              (NP (PRP$ my) (NN lord))
              (, ,)
              (NP (PRP you))
              (VP (MD would)
                (VP (VB come)
                  (PRT (RP up))
                  (NP (DT a) (NN moment)))))
            (, ,)))
        (CC and)
        (VP (VBP see)
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (MD can)
                (VP (VB make)
                  (NP (DT this) (NN flag))
                  (PRT (RP out)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Corbett))
    (, ,)
    (S
      (VP (VBG giving)
        (NP (DT a) (JJ significant) (NN nod))
        (PP (TO to)
          (NP (NNP Pickersgill)))))
    (. .)))

nsubj(wish-3, I-2)
nsubj(see-16, I-2)
ccomp(said-26, wish-3)
poss(lord-6, my-5)
nsubj(come-10, lord-6)
nsubj(come-10, you-8)
aux(come-10, would-9)
parataxis(wish-3, come-10)
prt(come-10, up-11)
det(moment-13, a-12)
dobj(come-10, moment-13)
conj_and(wish-3, see-16)
ccomp(said-26, see-16)
mark(make-20, if-17)
nsubj(make-20, you-18)
aux(make-20, can-19)
advcl(see-16, make-20)
det(flag-22, this-21)
dobj(make-20, flag-22)
prt(make-20, out-23)
root(ROOT-0, said-26)
nsubj(said-26, Corbett-27)
vmod(said-26, giving-29)
det(nod-32, a-30)
amod(nod-32, significant-31)
dobj(giving-29, nod-32)
prep_to(giving-29, Pickersgill-34)

(ROOT
  (SINV (`` ``)
    (FRAG
      (NP
        (NP (NNP Excuse) (PRP me) (, ,) (NNP ladies) (, ,))
        (NP (CD one) (NN moment))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Pickersgill))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD went)
            (PP (IN on)
              (NP (NN deck)))))))
    (. .)))

nn(ladies-5, Excuse-2)
dep(ladies-5, me-3)
dep(said-11, ladies-5)
num(moment-8, one-7)
dep(ladies-5, moment-8)
root(ROOT-0, said-11)
nsubj(said-11, Pickersgill-12)
nsubj(went-15, Pickersgill-12)
rcmod(Pickersgill-12, went-15)
prep_on(went-15, deck-17)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN boat))
        (PP (IN of)
          (NP
            (NP (DT the) (NN yacht))
            (VP (VBG coming)
              (PP (IN on)
                (NP (NN board))))
            (, ,) ('' '')
            (SBAR
              (S
                (VP (VBD said)
                  (NP
                    (NP (NNP Corbett))
                    (: ;) (`` ``)
                    (CC and)
                    (NP (NNP Lord) (NNP B))))))))
        (: --)
        (SBAR
          (S
            (VP (VBZ is)
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS stern-sheets))
                  (PP (IN with)
                    (NP
                      (NP (DT the) (NN gentleman))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBD was)
                            (PP (IN with)
                              (NP (PRP him)))))))))))))))
    (. .) ('' '')))

nsubj(boat-5, It-2)
cop(boat-5, is-3)
det(boat-5, the-4)
root(ROOT-0, boat-5)
det(yacht-8, the-7)
prep_of(boat-5, yacht-8)
vmod(yacht-8, coming-9)
prep_on(coming-9, board-11)
rcmod(yacht-8, said-14)
dobj(said-14, Corbett-15)
nn(B-20, Lord-19)
dobj(said-14, B-20)
conj_and(Corbett-15, B-20)
rcmod(boat-5, is-22)
det(stern-sheets-25, the-24)
prep_in(is-22, stern-sheets-25)
det(gentleman-28, the-27)
prep_with(stern-sheets-25, gentleman-28)
nsubj(was-30, gentleman-28)
rcmod(gentleman-28, was-30)
prep_with(was-30, him-32)

(ROOT
  (S (`` ``)
    (CC And)
    (ADVP (WRB how))
    (NP (JJ many) (NNS men))
    (VP
      (ADVP (IN in) (DT the))
      (VBZ boat))
    (. ?)))

cc(boat-8, And-2)
advmod(boat-8, how-3)
amod(men-5, many-4)
nsubj(boat-8, men-5)
advmod(boat-8, in-6)
dep(in-6, the-7)
root(ROOT-0, boat-8)

(ROOT
  (S
    (LST (: --))
    (VP (VB let)
      (S
        (NP (PRP me))
        (VP (VB see) (: --)
          (ADVP (RB only)
            (NP (CD four))))))
    (. .)))

root(ROOT-0, let-2)
nsubj(see-4, me-3)
ccomp(let-2, see-4)
advmod(see-4, only-6)
pobj(only-6, four-7)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (VP
      (VP (VB let)
        (SBAR
          (S
            (NP
              (NP (PRP$ his) (NN lordship))
              (CC and)
              (NP (PRP$ his) (NN friend)))
            (VP (VBP come) (: :)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (PP (IN on)
                      (NP (DT the) (NN deck))))))))))
      (, ,)
      (VP (VB have)
        (S
          (NP (DT the) (NNS men))
          (ADJP (JJ ready)
            (PP (IN in)
              (NP
                (NP
                  (NP (NN case))
                  (PP (IN of)
                    (NP (NN accident))))
                (: ;)
                (ADVP (CC but)))))
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (MD can)
                (VP (VB manage)
                  (S
                    (VP (TO to)
                      (VP (VB tell)
                        (NP
                          (NP (DT the) (NN boat) (POS 's))
                          (NN crew))
                        (SBAR (IN that)
                          (S
                            (NP (PRP they))
                            (VP (VBP are)
                              (S
                                (VP (TO to)
                                  (VP (VB go)
                                    (PP (IN on)
                                      (NP (NN board)))
                                    (ADVP (RB again)))))))))))))))))
      (, ,)
      (CC and)
      (VP (VB get)
        (ADJP
          (ADJP (JJ rid)
            (PP (IN of)
              (NP
                (NP (PRP them))
                (NP (DT that) (NN way)))))
          (, ,)
          (ADJP (RB so) (JJ much))
          (ADVP (DT the) (JJR better)))))
    (. .)))

discourse(let-3, Well-1)
root(ROOT-0, let-3)
poss(lordship-5, his-4)
nsubj(come-9, lordship-5)
poss(friend-8, his-7)
conj_and(lordship-5, friend-8)
nsubj(come-9, friend-8)
ccomp(let-3, come-9)
advmod(are-13, when-11)
nsubj(are-13, they-12)
parataxis(come-9, are-13)
det(deck-16, the-15)
prep_on(are-13, deck-16)
conj_and(let-3, have-18)
det(men-20, the-19)
nsubj(manage-31, men-20)
nsubj(tell-33, men-20)
dep(manage-31, ready-21)
prep_in_case_of(ready-21, accident-25)
advmod(ready-21, but-27)
mark(manage-31, if-28)
nsubj(manage-31, you-29)
nsubj(tell-33, you-29)
aux(manage-31, can-30)
xcomp(have-18, manage-31)
aux(tell-33, to-32)
xcomp(manage-31, tell-33)
det(boat-35, the-34)
poss(crew-37, boat-35)
dobj(tell-33, crew-37)
mark(are-40, that-38)
nsubj(are-40, they-39)
nsubj(go-42, they-39)
ccomp(tell-33, are-40)
aux(go-42, to-41)
xcomp(are-40, go-42)
prep_on(go-42, board-44)
advmod(go-42, again-45)
dep(rid-49, get-48)
conj_and(let-3, rid-49)
prep_of(rid-49, them-51)
det(way-53, that-52)
dep(them-51, way-53)
advmod(much-56, so-55)
dep(rid-49, much-56)
det(better-58, the-57)
advmod(rid-49, better-58)

(ROOT
  (S
    (S
      (VP
        (VP (VB Arrange)
          (NP
            (NP (DT this))
            (PP (IN with)
              (NP (NNP Adams)))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB then))
          (VB come)
          (ADVP (RB down) (RB again)))))
    (: --)
    (S
      (NP (PRP$ his) (NN lordship))
      (VP (MD must)
        (VP (VB see)
          (NP (PRP us))
          (PP (DT all) (IN at)
            (NP (NN dinner))))))
    (. .) ('' '')))

root(ROOT-0, Arrange-1)
dobj(Arrange-1, this-2)
prep_with(this-2, Adams-4)
advmod(come-8, then-7)
conj_and(Arrange-1, come-8)
advmod(again-10, down-9)
advmod(come-8, again-10)
poss(lordship-13, his-12)
nsubj(see-15, lordship-13)
aux(see-15, must-14)
parataxis(Arrange-1, see-15)
dobj(see-15, us-16)
dep(see-15, all-17)
prep_at(see-15, dinner-19)

(ROOT
  (S
    (S
      (NP (NNP Pickersgill))
      (ADVP (RB then))
      (VP (VBD descended)))
    (, ,)
    (CC and)
    (S
      (NP (NNP Corbett))
      (VP (VBD had)
        (NP (RB hardly) (NN time)
          (S
            (VP
              (VP (TO to)
                (VP (VB give)
                  (NP (PRP$ his) (NNS directions))))
              (CC and)
              (VP (TO to)
                (VP (VB resume)
                  (NP (PRP$ his) (NN seat))
                  (, ,)
                  (SBAR (IN before)
                    (S
                      (NP
                        (NP (PRP$ his) (NN lordship))
                        (CC and)
                        (NP (NNP Mr) (NNP Stewart)))
                      (VP
                        (VP (VBD pulled)
                          (PRT (RP up))
                          (PP (IN alongside)))
                        (CC and)
                        (VP (VBD jumped)
                          (PP (IN on)
                            (NP (NN deck))))))))))))))
    (. .)))

nsubj(descended-3, Pickersgill-1)
advmod(descended-3, then-2)
root(ROOT-0, descended-3)
nsubj(had-7, Corbett-6)
conj_and(descended-3, had-7)
advmod(time-9, hardly-8)
dobj(had-7, time-9)
aux(give-11, to-10)
dep(time-9, give-11)
poss(directions-13, his-12)
dobj(give-11, directions-13)
aux(resume-16, to-15)
dep(time-9, resume-16)
conj_and(give-11, resume-16)
poss(seat-18, his-17)
dobj(resume-16, seat-18)
mark(pulled-26, before-20)
poss(lordship-22, his-21)
nsubj(pulled-26, lordship-22)
nsubj(jumped-30, lordship-22)
nn(Stewart-25, Mr-24)
conj_and(lordship-22, Stewart-25)
nsubj(pulled-26, Stewart-25)
advcl(resume-16, pulled-26)
prt(pulled-26, up-27)
prep(pulled-26, alongside-28)
advcl(resume-16, jumped-30)
conj_and(pulled-26, jumped-30)
prep_on(jumped-30, deck-32)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP (DT no) (NN one)
          (S
            (VP (TO to)
              (VP (VB receive)
                (NP (PRP them))
                (PP (CC but)
                  (NP (DT the) (NN seamen)))))))
        (, ,)
        (CC and)
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WP whom))
            (S
              (NP (PRP they))
              (VP (VBD did) (RB not)
                (VP (VB know))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(one-4, no-3)
nsubj(was-2, one-4)
aux(receive-6, to-5)
vmod(one-4, receive-6)
dobj(receive-6, them-7)
prep(receive-6, but-8)
det(seamen-10, the-9)
pobj(but-8, seamen-10)
nsubj(was-2, those-13)
conj_and(one-4, those-13)
dobj(know-18, those-13)
nsubj(know-18, they-15)
aux(know-18, did-16)
neg(know-18, not-17)
rcmod(those-13, know-18)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD looked)
      (NP (NN round))
      (PP (IN in)
        (NP (NN amazement)))
      (PRN (: ;)
        (PP (IN at)
          (NP
            (NP (JJ last))
            (SBAR
              (S
                (NP (PRP$ his) (NN lordship))
                (VP (VBD said)
                  (PP (TO to)
                    (NP
                      (NP (NNP Adams))
                      (, ,)
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBD stood)
                            (ADVP (RB forward))))))))))))
        (: --))
      (`` ``)
      (SBAR
        (WHNP (WP What))
        (S
          (NP (NNS men))
          (VP (VBP are)
            (NP (PRP you))))))
    (. ?) ('' '')))

nsubj(looked-2, They-1)
root(ROOT-0, looked-2)
dobj(looked-2, round-3)
prep_in(looked-2, amazement-5)
dep(looked-2, at-7)
pobj(at-7, last-8)
poss(lordship-10, his-9)
nsubj(said-11, lordship-10)
rcmod(last-8, said-11)
prep_to(said-11, Adams-13)
nsubj(stood-16, Adams-13)
rcmod(Adams-13, stood-16)
advmod(stood-16, forward-17)
dobj(you-23, What-20)
nsubj(you-23, men-21)
cop(you-23, are-22)
dep(looked-2, you-23)

(ROOT
  (S (`` ``)
    (VP (VB Belong)
      (PP (TO to)
        (NP
          (NP (DT the) (NN yacht))
          (, ,)
          (NP
            (NP (NNP ye) (POS '))
            (NN r) (NN honour)))))
    (. .) ('' '')))

root(ROOT-0, Belong-2)
det(yacht-5, the-4)
prep_to(Belong-2, yacht-5)
poss(honour-10, ye-7)
nn(honour-10, r-9)
appos(yacht-5, honour-10)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Lord) (NNP B))
        (: --)
        (VP (VBN heard)
          (S
            (VP (VBG laughing)
              (PP (IN in)
                (NP (DT the) (NN cabin))))))
        (: ;))
      (NP (PRP he))
      (VP (MD would) (RB not)
        (VP (VB wait)
          (S
            (VP (TO to)
              (VP (VB interrogate)
                (NP (DT the) (NNS men))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD walked)
        (SBAR
          (S
            (NP
              (NP (JJ aft))
              (, ,)
              (VP (VBN followed)
                (PP (IN by)
                  (NP (NNP Mr) (NNP Stewart))))
              (, ,))
            (VP
              (VP (VBD looked)
                (PRT (RP down))
                (NP (DT the) (NN skylight)))
              (, ,)
              (CC and)
              (VP (VBD perceived)
                (NP
                  (NP (PRP$ his) (NN daughter))
                  (CC and)
                  (NP (NNP Mrs) (NNP Lascelles))))
              (, ,)
              (PP (IN with)
                (PRN (, ,)
                  (SBAR (IN as)
                    (S
                      (NP (PRP he))
                      (VP (VBD supposed))))
                  (, ,))
                (NP (NNP Hautaine)
                  (CC and)
                  (NNP Ossulton))))))))
    (. .)))

nn(B-2, Lord-1)
nsubj(wait-13, B-2)
nsubj(interrogate-15, B-2)
vmod(B-2, heard-4)
xcomp(heard-4, laughing-5)
det(cabin-8, the-7)
prep_in(laughing-5, cabin-8)
nsubj(wait-13, he-10)
nsubj(interrogate-15, he-10)
aux(wait-13, would-11)
neg(wait-13, not-12)
root(ROOT-0, wait-13)
aux(interrogate-15, to-14)
xcomp(wait-13, interrogate-15)
det(men-17, the-16)
dobj(interrogate-15, men-17)
nsubj(walked-20, he-19)
parataxis(wait-13, walked-20)
nsubj(looked-28, aft-21)
nsubj(perceived-34, aft-21)
vmod(aft-21, followed-23)
nn(Stewart-26, Mr-25)
agent(followed-23, Stewart-26)
ccomp(walked-20, looked-28)
prt(looked-28, down-29)
det(skylight-31, the-30)
dobj(looked-28, skylight-31)
ccomp(walked-20, perceived-34)
conj_and(looked-28, perceived-34)
poss(daughter-36, his-35)
dobj(perceived-34, daughter-36)
nn(Lascelles-39, Mrs-38)
dobj(perceived-34, Lascelles-39)
conj_and(daughter-36, Lascelles-39)
ccomp(walked-20, with-41)
conj_and(looked-28, with-41)
mark(supposed-45, as-43)
nsubj(supposed-45, he-44)
dep(looked-28, supposed-45)
prep_with(looked-28, Hautaine-47)
prep_with(looked-28, Ossulton-49)
conj_and(Hautaine-47, Ossulton-49)

(ROOT
  (S
    (S
      (NP (NNP Pickersgill))
      (VP (VBD had)
        (VP (VBN heard)
          (NP
            (NP
              (NP (DT the) (NN boat) (NN rub))
              (NP (DT the) (NN side)))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (NN sound))
              (PP (IN of)
                (NP (DT the) (NNS feet)))))
          (PP (IN on)
            (NP (NN deck))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD talked)
        (NP (DT the) (JJR more) (NN loudly))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (DT the) (NNS ladies))
            (VP (MD might)
              (VP (VB be)
                (VP (VBN caught)
                  (PP (IN by)
                    (NP (NNP Lord) (NNP B)))
                  (: --)
                  (SBAR (IN as)
                    (S
                      (NP (PRP they))
                      (VP (VBD were)))))))))))
    (. .)))

nsubj(heard-3, Pickersgill-1)
aux(heard-3, had-2)
root(ROOT-0, heard-3)
det(rub-6, the-4)
nn(rub-6, boat-5)
dobj(heard-3, rub-6)
det(side-8, the-7)
dep(rub-6, side-8)
det(sound-12, the-11)
dobj(heard-3, sound-12)
conj_and(rub-6, sound-12)
det(feet-15, the-14)
prep_of(sound-12, feet-15)
prep_on(heard-3, deck-17)
nsubj(talked-21, he-20)
conj_and(heard-3, talked-21)
det(loudly-24, the-22)
amod(loudly-24, more-23)
dobj(talked-21, loudly-24)
mark(caught-31, that-26)
det(ladies-28, the-27)
nsubjpass(caught-31, ladies-28)
aux(caught-31, might-29)
auxpass(caught-31, be-30)
ccomp(talked-21, caught-31)
nn(B-34, Lord-33)
agent(caught-31, B-34)
mark(were-38, as-36)
nsubj(were-38, they-37)
advcl(caught-31, were-38)
parataxis(caught-31, were-38)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD heard)
        (NP (PRP$ their) (NNS feet))
        (PP (IN at)
          (NP (DT the) (NN skylight))))
      (, ,)
      (CC and)
      (VP (VBD knew)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (MD could)
              (VP (VB hear)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (S
                      (VP (VBN passed)))
                    (PRN (: ;)
                      (CC and)
                      (PP (IN at)
                        (NP (DT that) (NN moment)))
                      (S
                        (NP (PRP he))
                        (VP (VBD proposed)
                          (PP (TO to)
                            (NP (DT the) (NNS ladies)))
                          (SBAR (IN that)
                            (S
                              (SBAR (IN as)
                                (S
                                  (NP (DT this))
                                  (VP (VBD was)
                                    (NP
                                      (NP (PRP$ their) (JJ last) (NN meeting))
                                      (PP (IN at)
                                        (NP (NN table)))))))
                              (NP (PRP they))
                              (VP (MD should) (RB all)
                                (VP (VB take)
                                  (NP
                                    (NP (DT a) (NN glass))
                                    (PP (IN of)
                                      (NP (NN champagne))))
                                  (S
                                    (VP (TO to)
                                      (VP (VB drink)
                                        (PP (TO to) (`` ``)
                                          (NP
                                            (NP (PRP$ their) (JJ happy) (NN meeting))
                                            (PP (IN with)
                                              (NP (NNP Lord) (NNP B))))))))))))))
                      (: --))))))))))
    (. .) ('' '')))

nsubj(heard-2, He-1)
nsubj(knew-10, He-1)
root(ROOT-0, heard-2)
poss(feet-4, their-3)
dobj(heard-2, feet-4)
det(skylight-7, the-6)
prep_at(heard-2, skylight-7)
conj_and(heard-2, knew-10)
mark(hear-14, that-11)
nsubj(hear-14, they-12)
aux(hear-14, could-13)
ccomp(knew-10, hear-14)
dep(passed-16, what-15)
dep(hear-14, passed-16)
cc(proposed-23, and-18)
dep(proposed-23, at-19)
det(moment-21, that-20)
pobj(at-19, moment-21)
nsubj(proposed-23, he-22)
dep(passed-16, proposed-23)
det(ladies-26, the-25)
prep_to(proposed-23, ladies-26)
mark(take-39, that-27)
mark(meeting-33, as-28)
nsubj(meeting-33, this-29)
cop(meeting-33, was-30)
poss(meeting-33, their-31)
amod(meeting-33, last-32)
advcl(take-39, meeting-33)
prep_at(meeting-33, table-35)
nsubj(take-39, they-36)
aux(take-39, should-37)
advmod(take-39, all-38)
ccomp(proposed-23, take-39)
det(glass-41, a-40)
dobj(take-39, glass-41)
prep_of(glass-41, champagne-43)
aux(drink-45, to-44)
vmod(take-39, drink-45)
poss(meeting-50, their-48)
amod(meeting-50, happy-49)
prep_to(drink-45, meeting-50)
nn(B-53, Lord-52)
prep_with(meeting-50, B-53)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN toast))
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP they))
            (VP (VBD did) (RB not)
              (VP (VB refuse)))))))
    (. .)))

nsubj(toast-4, This-1)
cop(toast-4, was-2)
det(toast-4, a-3)
root(ROOT-0, toast-4)
dobj(refuse-9, toast-4)
nsubj(refuse-9, they-6)
aux(refuse-9, did-7)
neg(refuse-9, not-8)
rcmod(toast-4, refuse-9)

(ROOT
  (S
    (S
      (NP (NNP Maddox))
      (VP (VBD poured)
        (PRT (RP out))
        (NP (DT the) (NN wine))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD were) (RB all)
        (VP (VBG bowing)
          (PP (TO to)
            (NP
              (NP (DT each) (JJ other))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP
                    (NP (PRP$ his) (NN lordship))
                    (, ,)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBD had)
                          (VP (VBN come)
                            (PRT (RP down))
                            (NP (DT the) (NN ladder))))))
                    (, ,))
                  (VP (VBD walked)
                    (PP (IN into)
                      (NP (DT the) (NN cabin)))
                    (, ,)
                    (PP (VBN followed)
                      (PP (IN by)
                        (NP (NNP Mr) (NNP Stewart))))))))))))
    (. .)))

nsubj(poured-2, Maddox-1)
root(ROOT-0, poured-2)
prt(poured-2, out-3)
det(wine-5, the-4)
dobj(poured-2, wine-5)
nsubj(bowing-11, they-8)
aux(bowing-11, were-9)
advmod(bowing-11, all-10)
conj_and(poured-2, bowing-11)
det(other-14, each-13)
prep_to(bowing-11, other-14)
tmod(walked-27, other-14)
advmod(walked-27, when-16)
poss(lordship-18, his-17)
nsubj(come-22, lordship-18)
nsubj(walked-27, lordship-18)
aux(come-22, had-21)
rcmod(lordship-18, come-22)
prt(come-22, down-23)
det(ladder-25, the-24)
dobj(come-22, ladder-25)
rcmod(other-14, walked-27)
det(cabin-30, the-29)
prep_into(walked-27, cabin-30)
prepc_followed_by(walked-27, by-33)
nn(Stewart-35, Mr-34)
pobj(walked-27, Stewart-35)

(ROOT
  (S
    (S
      (NP (NNP Cecilia))
      (VP (VBD perceived)
        (NP (PRP$ her) (NN father))))
    (: ;)
    (S
      (NP (DT the) (NNS champagne-glass))
      (VP (VBD dropped)
        (PP (IN from)
          (NP (PRP$ her) (NN hand)))))
    (: --)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD flew)
          (PP (IN into)
            (NP (PRP$ his) (NNS arms))))
        (, ,)
        (CC and)
        (VP (VBP burst)
          (PP (IN into)
            (NP (NNS tears))))))
    (. .)))

nsubj(perceived-2, Cecilia-1)
root(ROOT-0, perceived-2)
poss(father-4, her-3)
dobj(perceived-2, father-4)
det(champagne-glass-7, the-6)
nsubj(dropped-8, champagne-glass-7)
parataxis(perceived-2, dropped-8)
poss(hand-11, her-10)
prep_from(dropped-8, hand-11)
nsubj(flew-14, she-13)
nsubj(burst-20, she-13)
parataxis(perceived-2, flew-14)
poss(arms-17, his-16)
prep_into(flew-14, arms-17)
parataxis(perceived-2, burst-20)
conj_and(flew-14, burst-20)
prep_into(burst-20, tears-22)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ
      (VP (MD would) (RB not)
        (VP (VB be)
          (NP
            (NP (DT a) (NN father))
            (, ,)
            (NP (NNP Mrs) (NNP Lascelles))))))
    (. ?) ('' '')))

nsubj(father-7, Who-2)
aux(father-7, would-3)
neg(father-7, not-4)
cop(father-7, be-5)
det(father-7, a-6)
root(ROOT-0, father-7)
nn(Lascelles-10, Mrs-9)
appos(father-7, Lascelles-10)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Pickersgill))
      (, ,)
      (S
        (ADVP (RB quietly))
        (VP (VBG seating)
          (NP (PRP himself))
          (, ,)
          (PP (IN after)
            (S
              (VP (VBG having)
                (ADVP (RB first))
                (VP (VBN risen)
                  (S
                    (VP (TO to)
                      (VP (VB receive)
                        (NP (NNP Lord) (NNP B)))))))))
          (: --))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Pickersgill-2)
advmod(seating-5, quietly-4)
vmod(said-1, seating-5)
dobj(seating-5, himself-6)
aux(risen-11, having-9)
advmod(risen-11, first-10)
prepc_after(seating-5, risen-11)
aux(receive-13, to-12)
xcomp(risen-11, receive-13)
nn(B-15, Lord-14)
dobj(receive-13, B-15)

(ROOT
  (S (`` ``)
    (CC And)
    (S
      (ADVP (RB pray))
      (, ,)
      (SBAR
        (WHNP (WP whom))
        (S
          (VP (MD may))))
      (NP (PRP I))
      (VP (VBP have)
        (NP
          (NP (DT the) (NN honour))
          (PP (IN of)
            (NP
              (NP (NN finding))
              (VP (VBN established)
                (ADVP (RB here))))))))
    (. ?) ('' '')))

cc(have-8, And-2)
advmod(have-8, pray-3)
nsubj(may-6, whom-5)
advcl(have-8, may-6)
nsubj(have-8, I-7)
root(ROOT-0, have-8)
det(honour-10, the-9)
dobj(have-8, honour-10)
prep_of(honour-10, finding-12)
vmod(finding-12, established-13)
advmod(established-13, here-14)

(ROOT
  (S
    (VP (VBD said)
      (NP
        (NP
          (NP (NNP Lord) (NNP B))
          (PRN (: --)
            (FRAG (, ,)
              (PP (IN in)
                (NP (DT an) (JJ angry) (NN tone)))
              (, ,))))
        (VP (VBG speaking)
          (PP (IN over)
            (NP
              (NP
                (NP (PRP$ his) (NN daughter) (POS 's))
                (NN head))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (ADVP (RB still))
                  (VP (VBD lay)
                    (PP (IN in)
                      (NP (PRP$ his) (NNS arms)))))))))))
    (. .)))

root(ROOT-0, said-1)
nn(B-3, Lord-2)
dobj(said-1, B-3)
dep(B-3, in-6)
det(tone-9, an-7)
amod(tone-9, angry-8)
pobj(in-6, tone-9)
vmod(B-3, speaking-11)
poss(daughter-14, his-13)
poss(head-16, daughter-14)
prep_over(speaking-11, head-16)
nsubj(lay-20, head-16)
advmod(lay-20, still-19)
rcmod(head-16, lay-20)
poss(arms-23, his-22)
prep_in(lay-20, arms-23)

(ROOT
  (S (`` ``)
    (PP (IN By)
      (NP (NNS heavens)))
    (, ,)
    (VP (VBZ yes))
    (. !)))

prep_by(yes-5, heavens-3)
root(ROOT-0, yes-5)

(ROOT
  (S
    (LST (: --))
    (NP (NNP Stewart))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN smuggling) (NN captain))
        (VP (VBN dressed)
          (PRT (RP out)))))
    (. .) ('' '')))

nsubj(captain-8, Stewart-2)
nsubj(captain-8, it-4)
cop(captain-8, is-5)
det(captain-8, the-6)
nn(captain-8, smuggling-7)
root(ROOT-0, captain-8)
vmod(captain-8, dressed-9)
prt(dressed-9, out-10)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Even) (RB so))
      (, ,)
      (NP (PRP$ my))
      (VP (VBD lord)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Pickersgill))
    (. .)))

advmod(so-3, Even-2)
advmod(lord-6, so-3)
nsubj(lord-6, my-5)
ccomp(replied-9, lord-6)
root(ROOT-0, replied-9)
nsubj(replied-9, Pickersgill-10)

(ROOT
  (S
    (S (`` ``)
      (NP (PRP You))
      (VP (VBD abandoned)
        (NP (PRP$ your) (NN yacht)
          (S
            (VP (TO to)
              (VP (VB capture)
                (NP (PRP me))))))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (VBD left)
        (SBAR
          (S
            (NP
              (NP (DT these) (NNS ladies))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN vessel))
                  (VP (VBN crippled)
                    (PP (IN for))))))
            (VP (VBP want)
              (PP (IN of)
                (NP (NNS men))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (MD might)
        (VP (VB have)
          (VP (VBN been)
            (VP (VBN lost))))))
    (. .)))

nsubj(abandoned-3, You-2)
root(ROOT-0, abandoned-3)
poss(yacht-5, your-4)
dobj(abandoned-3, yacht-5)
aux(capture-7, to-6)
vmod(yacht-5, capture-7)
dobj(capture-7, me-8)
nsubj(left-11, you-10)
parataxis(abandoned-3, left-11)
det(ladies-13, these-12)
nsubj(want-19, ladies-13)
det(vessel-16, a-15)
prep_in(ladies-13, vessel-16)
vmod(vessel-16, crippled-17)
prep(crippled-17, for-18)
ccomp(left-11, want-19)
prep_of(want-19, men-21)
nsubjpass(lost-27, they-23)
aux(lost-27, might-24)
aux(lost-27, have-25)
auxpass(lost-27, been-26)
parataxis(abandoned-3, lost-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN returned)
        (ADJP (JJ good)
          (PP (IN for)
            (ADJP (JJ evil))))
        (PP (IN by)
          (S
            (VP
              (VP (VBG coming)
                (PP (IN on)
                  (NP (NN board)))
                (PP (IN with)
                  (NP (PRP$ my) (JJ own) (NNS people))))
              (, ,)
              (CC and)
              (VP (VBG taking)
                (NP
                  (NP (NN charge))
                  (PP (IN of)
                    (NP (PRP them))))))))))
    (. .)))

nsubj(returned-3, I-1)
aux(returned-3, have-2)
root(ROOT-0, returned-3)
acomp(returned-3, good-4)
prep_for(good-4, evil-6)
prepc_by(returned-3, coming-8)
prep_on(coming-8, board-10)
poss(people-14, my-12)
amod(people-14, own-13)
prep_with(coming-8, people-14)
prepc_by(returned-3, taking-17)
conj_and(coming-8, taking-17)
dobj(taking-17, charge-18)
prep_of(charge-18, them-20)

(ROOT
  (S
    (NP (DT This) (NN night))
    (NP (PRP I))
    (VP
      (VP (VBD expected)
        (S
          (VP (TO to)
            (VP (VB have)
              (VP (VBN anchored)
                (NP (PRP$ your) (NN vessel))
                (PP (IN in)
                  (NP (NNP Cowes))))))))
      (, ,)
      (CC and)
      (VP (VBP have)
        (VP (VBN left)
          (NP (PRP them))
          (PP (IN in)
            (NP (NN safety))))))
    (. .) ('' '')))

det(night-2, This-1)
tmod(expected-4, night-2)
nsubj(expected-4, I-3)
nsubj(anchored-7, I-3)
nsubj(left-15, I-3)
root(ROOT-0, expected-4)
aux(anchored-7, to-5)
aux(anchored-7, have-6)
xcomp(expected-4, anchored-7)
poss(vessel-9, your-8)
dobj(anchored-7, vessel-9)
prep_in(anchored-7, Cowes-11)
aux(left-15, have-14)
conj_and(expected-4, left-15)
dobj(left-15, them-16)
prep_in(left-15, safety-18)

(ROOT
  (SINV (`` ``)
    (FRAG
      (ADVP (RB By)
        (NP (NNP the)))
      (: --))
    ('' '')
    (VP (VBD cried))
    (NP (NNP Stewart))
    (. .)))

dep(cried-6, By-2)
pobj(By-2, the-3)
root(ROOT-0, cried-6)
nsubj(cried-6, Stewart-7)

(ROOT
  (S (`` ``)
    (VP (VB Stop) (, ,) (VB sir) (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP please)))))
    (. !) ('' '')))

root(ROOT-0, Stop-2)
dep(Stop-2, sir-4)
mark(please-8, if-6)
nsubj(please-8, you-7)
advcl(Stop-2, please-8)

(ROOT
  (S
    (S
      (VP (VBN cried)
        (NP
          (NP (NNP Pickersgill))
          (: ;) (`` ``)
          (NP (NN recollect)))))
    (NP (PRP you))
    (VP (VBP have)
      (ADVP (RB once))
      (VP
        (ADVP (RB already))
        (VBN attacked)
        (NP
          (NP (CD one))
          (SBAR
            (WHNP (WP who))
            (S
              (ADVP (RB never))
              (VP (VBD offended)))))))
    (. .)))

dep(attacked-10, cried-1)
dobj(cried-1, Pickersgill-2)
dep(Pickersgill-2, recollect-5)
nsubj(attacked-10, you-6)
aux(attacked-10, have-7)
advmod(attacked-10, once-8)
advmod(attacked-10, already-9)
root(ROOT-0, attacked-10)
dobj(attacked-10, one-11)
nsubj(offended-14, one-11)
neg(offended-14, never-13)
rcmod(one-11, offended-14)

(ROOT
  (S
    (S
      (VP (VB Oblige)
        (NP (PRP me))
        (PP (IN by)
          (S
            (VP (VBG refraining)
              (PP (IN from)
                (NP (JJ intemperate) (NN language))))))))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (NP (PRP I))
          (VP (VBP tell)
            (NP (PRP you)))))
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB put)
          (PRT (RP up))
          (PP (IN with)
            (NP (PRP it))))))
    (. .)))

root(ROOT-0, Oblige-1)
dobj(Oblige-1, me-2)
prepc_by(Oblige-1, refraining-4)
amod(language-7, intemperate-6)
prep_from(refraining-4, language-7)
mark(tell-11, for-9)
nsubj(tell-11, I-10)
advcl(put-16, tell-11)
dobj(tell-11, you-12)
nsubj(put-16, I-13)
aux(put-16, will-14)
neg(put-16, not-15)
parataxis(Oblige-1, put-16)
prt(put-16, up-17)
prep_with(put-16, it-19)

(ROOT
  (S
    (VP (VB Recollect) (, ,) (VB sir) (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBN refrained)
              (PP
                (PP (IN from)
                  (NP (DT that)))
                (, ,)
                (CC and)
                (PP
                  (ADVP (RB also))
                  (IN from)
                  (S
                    (VP (VBG taking)
                      (NP
                        (NP (NN advantage))
                        (PP (IN of)
                          (NP (PRP you)))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP you))
                            (VP (VBD were)
                              (PP (IN in)
                                (NP (PRP$ my) (NN power))))))))))))))))
    (. .)))

root(ROOT-0, Recollect-1)
dep(Recollect-1, sir-3)
mark(refrained-8, that-5)
nsubj(refrained-8, I-6)
aux(refrained-8, have-7)
ccomp(Recollect-1, refrained-8)
prep_from(refrained-8, that-10)
advmod(refrained-8, also-13)
prep_from(refrained-8, taking-15)
conj_and(that-10, taking-15)
dobj(taking-15, advantage-16)
prep_of(advantage-16, you-18)
advmod(were-21, when-19)
nsubj(were-21, you-20)
rcmod(advantage-16, were-21)
poss(power-24, my-23)
prep_in(were-21, power-24)

(ROOT
  (S
    (VP (VB Recollect) (, ,) (VB sir) (, ,)
      (ADVP (RB also))
      (, ,)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (DT the) (NN yacht))
            (VP (VBZ is)
              (ADVP (RB still))
              (PP (IN in)
                (NP
                  (NP (NN possession))
                  (PP (IN of)
                    (NP (DT the) (NNS smugglers))))))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (PP (IN in)
                (NP
                  (NP (DT no) (NN condition))
                  (PP (TO to)
                    (NP (NN insult)))))
              (PP (IN with)
                (NP (NN impunity))))))))
    (. .)))

root(ROOT-0, Recollect-1)
dep(Recollect-1, sir-3)
advmod(Recollect-1, also-5)
mark(is-10, that-7)
det(yacht-9, the-8)
nsubj(is-10, yacht-9)
ccomp(Recollect-1, is-10)
advmod(is-10, still-11)
prep_in(is-10, possession-13)
det(smugglers-16, the-15)
prep_of(possession-13, smugglers-16)
mark(are-21, that-19)
nsubj(are-21, you-20)
ccomp(Recollect-1, are-21)
conj_and(is-10, are-21)
neg(condition-24, no-23)
prep_in(are-21, condition-24)
prep_to(condition-24, insult-26)
prep_with(are-21, impunity-28)

(ROOT
  (S
    (NP (PRP$ My) (NN lord))
    (, ,)
    (VP (VBP allow)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB observe))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP we) (NNS men))
          (VP (VBP are)
            (ADJP (RB too) (JJ hot)
              (PP (IN of)
                (NP (NN temperament)
                  (S
                    (VP (TO to)
                      (VP (VB argue)
                        (CC or)
                        (VB listen)
                        (ADVP (RB coolly))))))))))))
    (. .)))

poss(lord-2, My-1)
nsubj(allow-4, lord-2)
root(ROOT-0, allow-4)
dobj(allow-4, me-5)
nsubj(observe-7, me-5)
aux(observe-7, to-6)
xcomp(allow-4, observe-7)
mark(hot-14, that-9)
dep(men-11, we-10)
nsubj(hot-14, men-11)
cop(hot-14, are-12)
advmod(hot-14, too-13)
ccomp(allow-4, hot-14)
prep_of(hot-14, temperament-16)
aux(argue-18, to-17)
vmod(temperament-16, argue-18)
vmod(temperament-16, listen-20)
conj_or(argue-18, listen-20)
advmod(argue-18, coolly-21)

(ROOT
  (S
    (PP (IN With)
      (NP (PRP$ your) (NN permission)))
    (, ,)
    (NP
      (NP
        (NP (PRP$ your) (NN friend))
        (, ,)
        (CC and)
        (NP (PRP$ my) (NN friend)))
      (PRN (, ,)
        (CC and)
        (NNP I) (, ,)))
    (VP (MD will)
      (VP (VB repair)
        (PP (IN on)
          (NP (NN deck)))
        (, ,)
        (S
          (VP (VBG leaving)
            (S
              (NP (PRP you))
              (VP (TO to)
                (VP (VB hear)
                  (PP (IN from)
                    (NP
                      (NP (PRP$ your) (NN daughter))
                      (CC and)
                      (NP (DT that) (NN lady))))
                  (NP
                    (NP (DT all))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ has)
                          (VP (VBN passed)))))))))))))
    (. .)))

poss(permission-3, your-2)
prep_with(repair-16, permission-3)
poss(friend-6, your-5)
nsubj(repair-16, friend-6)
poss(friend-10, my-9)
conj_and(friend-6, friend-10)
nsubj(repair-16, friend-10)
cc(I-13, and-12)
dep(friend-6, I-13)
aux(repair-16, will-15)
root(ROOT-0, repair-16)
prep_on(repair-16, deck-18)
xcomp(repair-16, leaving-20)
dobj(leaving-20, you-21)
nsubj(hear-23, you-21)
aux(hear-23, to-22)
xcomp(leaving-20, hear-23)
poss(daughter-26, your-25)
prep_from(hear-23, daughter-26)
det(lady-29, that-28)
prep_from(hear-23, lady-29)
conj_and(daughter-26, lady-29)
dobj(hear-23, all-30)
nsubj(passed-33, all-30)
aux(passed-33, has-32)
rcmod(all-30, passed-33)

(ROOT
  (S
    (PP (IN After)
      (NP
        (NP (DT that))
        (, ,)
        (NP (PRP$ my) (NN lord))))
    (, ,)
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB be)
        (ADJP (RBS most) (JJ happy)
          (S
            (VP (TO to)
              (VP (VB hear)
                (NP
                  (NP (NN anything))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP (PRP$ your) (NN lordship))
                      (VP (MD may)
                        (VP (VB please)
                          (S
                            (VP (TO to)
                              (VP (VB say)))))))))))))))
    (. .) ('' '')))

prep_after(happy-11, that-2)
poss(lord-5, my-4)
appos(that-2, lord-5)
nsubj(happy-11, I-7)
nsubj(hear-13, I-7)
aux(happy-11, shall-8)
cop(happy-11, be-9)
advmod(happy-11, most-10)
root(ROOT-0, happy-11)
aux(hear-13, to-12)
xcomp(happy-11, hear-13)
dobj(hear-13, anything-14)
dobj(please-19, anything-14)
nsubj(say-21, anything-14)
poss(lordship-17, your-16)
nsubj(please-19, lordship-17)
aux(please-19, may-18)
rcmod(anything-14, please-19)
aux(say-21, to-20)
xcomp(please-19, say-21)

(ROOT
  (SINV (`` ``)
    (FRAG
      (PP (IN Upon)
        (NP (PRP$ my)))
      (NP (CD word))
      (: --))
    ('' '')
    (VP (VBD commenced))
    (NP (NNP Mr) (NNP Stewart))
    (. .)))

prep_upon(word-4, my-3)
dep(commenced-7, word-4)
root(ROOT-0, commenced-7)
nn(Stewart-9, Mr-8)
nsubj(commenced-7, Stewart-9)

(ROOT
  (S (`` ``)
    (NP (NNP Mr) (NNP Stewart))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBZ interrupted))
        (NP (NNP Cecilia) (NNP Ossulton)))
      (, ,))
    (`` ``)
    (NP (PRP I))
    (VP (VBP request)
      (NP (PRP$ your) (NN silence) (: ;) (NN nay))
      (, ,)
      (ADVP (RBR more))
      (, ,)
      (SBAR (IN if)
        (S
          (SBAR (RB ever)
            (S
              (NP (PRP we))
              (VP (VBP are)
                (ADVP (RB again))
                (S
                  (VP (TO to)
                    (VP (VB sail)
                      (PP (IN in)
                        (NP (DT the) (JJ same) (NN vessel)))
                      (ADVP (RB together))))))))
          (, ,)
          (NP (PRP I))
          (ADVP (RB _))
          (VP (VBP insist)
            (ADVP (RB _))
            (PP (IN upon)
              (NP (PRP it)))))))
    (. .) ('' '')))

nn(Stewart-3, Mr-2)
nsubj(request-12, Stewart-3)
parataxis(request-12, interrupted-6)
nn(Ossulton-8, Cecilia-7)
nsubj(interrupted-6, Ossulton-8)
nsubj(request-12, I-11)
root(ROOT-0, request-12)
poss(nay-16, your-13)
nn(nay-16, silence-14)
dobj(request-12, nay-16)
advmod(request-12, more-18)
mark(insist-35, if-20)
advmod(are-23, ever-21)
nsubj(are-23, we-22)
nsubj(sail-26, we-22)
advcl(insist-35, are-23)
advmod(are-23, again-24)
aux(sail-26, to-25)
xcomp(are-23, sail-26)
det(vessel-30, the-28)
amod(vessel-30, same-29)
prep_in(sail-26, vessel-30)
advmod(sail-26, together-31)
nsubj(insist-35, I-33)
advmod(insist-35, _-34)
advcl(request-12, insist-35)
advmod(insist-35, _-36)
prep_upon(insist-35, it-38)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP$ Your) (NN lordship))
      (VP (MD will)
        (VP (VB oblige)
          (NP (PRP me))
          (PP (IN by)
            (S
              (VP (VBG enforcing)
                (NP
                  (NP (NNP Miss) (NNP Ossulton) (POS 's))
                  (NN request))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mrs) (NNP Lascelles))
    (. .)))

poss(lordship-3, Your-2)
nsubj(oblige-5, lordship-3)
aux(oblige-5, will-4)
ccomp(said-15, oblige-5)
dobj(oblige-5, me-6)
prepc_by(oblige-5, enforcing-8)
nn(Ossulton-10, Miss-9)
poss(request-12, Ossulton-10)
dobj(enforcing-8, request-12)
root(ROOT-0, said-15)
nn(Lascelles-17, Mrs-16)
nsubj(said-15, Lascelles-17)

(ROOT
  (S
    (NP (NNP Mr) (NNP Stewart))
    (VP (VBD was)
      (ADJP (JJ dumbfounded)
        (PRN (: --)
          (NP (DT no) (NN wonder))
          (: --))
        (S
          (VP (TO to)
            (VP (VB find)
              (NP (DT the) (NNS ladies) (NN siding))
              (PP (IN with)
                (NP (DT the) (NN smuggler))))))))
    (. .)))

nn(Stewart-2, Mr-1)
nsubj(dumbfounded-4, Stewart-2)
nsubj(find-10, Stewart-2)
cop(dumbfounded-4, was-3)
root(ROOT-0, dumbfounded-4)
neg(wonder-7, no-6)
dep(dumbfounded-4, wonder-7)
aux(find-10, to-9)
xcomp(dumbfounded-4, find-10)
det(siding-13, the-11)
nn(siding-13, ladies-12)
dobj(find-10, siding-13)
det(smuggler-16, the-15)
prep_with(find-10, smuggler-16)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBN obliged)
          (PP (TO to)
            (NP
              (NP (PRP you))
              (, ,)
              (NP (NNS ladies))
              (, ,)))
          (PP (IN for)
            (NP (PRP$ your) (NN interference))))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP Pickersgill))
        (: ;) (`` ``)
        (SBAR (IN for) (, ,)
          (S
            (SBAR (IN although)
              (S
                (NP (PRP I))
                (VP (VBP have)
                  (NP
                    (NP (DT the) (NN means))
                    (PP (IN of)
                      (S
                        (VP (VBG enforcing)
                          (NP (NNS conditions)))))))))
            (, ,)
            (NP (PRP I))
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ sorry)
                  (PP (TO to)
                    (NP (NN avail))))))))))
    (NP
      (NP (PRP myself))
      (PP (IN of)
        (NP (PRP them))))
    (. .)))

nsubjpass(obliged-4, I-2)
auxpass(obliged-4, am-3)
ccomp(said-15, obliged-4)
prep_to(obliged-4, you-6)
appos(you-6, ladies-8)
poss(interference-12, your-11)
prep_for(obliged-4, interference-12)
root(ROOT-0, said-15)
dobj(said-15, Pickersgill-16)
mark(sorry-33, for-19)
mark(have-23, although-21)
nsubj(have-23, I-22)
advcl(sorry-33, have-23)
det(means-25, the-24)
dobj(have-23, means-25)
prepc_of(means-25, enforcing-27)
dobj(enforcing-27, conditions-28)
nsubj(sorry-33, I-30)
aux(sorry-33, should-31)
cop(sorry-33, be-32)
rcmod(Pickersgill-16, sorry-33)
prep_to(sorry-33, avail-35)
nsubj(said-15, myself-36)
prep_of(myself-36, them-38)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP wait)
      (PP (IN for)
        (NP
          (NP (PRP$ his) (NN lordship) (POS 's))
          (NN reply))))
    (. .) ('' '')))

nsubj(wait-2, I-1)
root(ROOT-0, wait-2)
poss(lordship-5, his-4)
poss(reply-7, lordship-5)
prep_for(wait-2, reply-7)

(ROOT
  (S
    (NP (NNP Lord) (NNP B))
    (: --)
    (VP (VBD was)
      (ADJP (RB very) (RB much) (JJ surprised)))
    (. .)))

nn(B-2, Lord-1)
nsubj(surprised-7, B-2)
cop(surprised-7, was-4)
advmod(surprised-7, very-5)
advmod(surprised-7, much-6)
root(ROOT-0, surprised-7)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD wished)
        (PP (IN for)
          (NP (DT an) (NN explanation)))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD bowed)
        (PP (IN with)
          (NP (JJ _) (NN hauteur) (NNS _)))))
    (. .)))

nsubj(wished-2, He-1)
root(ROOT-0, wished-2)
det(explanation-5, an-4)
prep_for(wished-2, explanation-5)
nsubj(bowed-8, he-7)
parataxis(wished-2, bowed-8)
amod(_-12, _-10)
nn(_-12, hauteur-11)
prep_with(bowed-8, _-12)

(ROOT
  (S
    (S
      (NP (NN Everybody))
      (VP (VBD appeared)
        (S
          (VP (TO to)
            (VP (VB be)
              (PP (IN in)
                (NP
                  (NP (DT a) (JJ false) (NN position))
                  (PRN (: ;)
                    (ADVP (RB even))
                    (NP
                      (NP (PRP he))
                      (, ,)
                      (NP (NNP Lord) (NNP B)))
                    (: --))))
              (, ,)
              (ADVP (RB somehow)))))))
    (CC or)
    (S
      (NP (DT another))
      (VP (VBD had)
        (VP (VBN bowed)
          (PP (TO to)
            (NP (DT a) (NN smuggler))))))
    (. .)))

nsubj(appeared-2, Everybody-1)
nsubj(be-4, Everybody-1)
root(ROOT-0, appeared-2)
aux(be-4, to-3)
xcomp(appeared-2, be-4)
det(position-8, a-6)
amod(position-8, false-7)
prep_in(be-4, position-8)
dep(he-11, even-10)
dep(position-8, he-11)
nn(B-14, Lord-13)
appos(he-11, B-14)
advmod(be-4, somehow-17)
nsubj(bowed-21, another-19)
aux(bowed-21, had-20)
conj_or(appeared-2, bowed-21)
det(smuggler-24, a-23)
prep_to(bowed-21, smuggler-24)

(ROOT
  (S
    (NP (NNP Pickersgill)
      (CC and)
      (NNP Stewart))
    (VP (VBD went)
      (PP (IN on)
        (NP (NN deck)))
      (, ,)
      (S
        (VP
          (VP (VBG walking)
            (ADVP (RB up)
              (CC and)
              (RB down))
            (, ,)
            (S
              (VP (VBG crossing)
                (NP (DT each) (JJ other))
                (PP (IN without)
                  (NP (NN speaking))))))
          (, ,)
          (CC but)
          (VP (VBG reminding)
            (NP (PRP you))
            (PP (IN of)
              (NP
                (NP (CD two) (NNS dogs))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP
                      (VP (VBP are) (DT both)
                        (ADJP (JJ anxious)
                          (PP (TO to)
                            (NP (NN fight)))))
                      (, ,)
                      (CC but)
                      (VP (VBP have)
                        (VP (VBN been)
                          (VP (VBN restrained)
                            (PP (IN by)
                              (NP
                                (NP (DT the) (NN voice))
                                (PP (IN of)
                                  (NP (PRP$ their) (NNS masters)))))))))))))))))
    (. .)))

nsubj(went-4, Pickersgill-1)
conj_and(Pickersgill-1, Stewart-3)
nsubj(went-4, Stewart-3)
root(ROOT-0, went-4)
prep_on(went-4, deck-6)
ccomp(went-4, walking-8)
advmod(walking-8, up-9)
advmod(walking-8, down-11)
conj_and(up-9, down-11)
vmod(walking-8, crossing-13)
det(other-15, each-14)
dobj(crossing-13, other-15)
prep_without(crossing-13, speaking-17)
ccomp(went-4, reminding-20)
conj_but(walking-8, reminding-20)
dobj(reminding-20, you-21)
num(dogs-24, two-23)
prep_of(reminding-20, dogs-24)
nsubj(anxious-28, dogs-24)
nsubjpass(restrained-35, dogs-24)
cop(anxious-28, are-26)
dep(anxious-28, both-27)
rcmod(dogs-24, anxious-28)
prep_to(anxious-28, fight-30)
aux(restrained-35, have-33)
auxpass(restrained-35, been-34)
rcmod(dogs-24, restrained-35)
conj_but(anxious-28, restrained-35)
det(voice-38, the-37)
agent(restrained-35, voice-38)
poss(masters-41, their-40)
prep_of(voice-38, masters-41)

(ROOT
  (S
    (S
      (NP (NNP Corbett))
      (VP
        (VP (VBD followed))
        (, ,)
        (CC and)
        (VP (VBD talked)
          (PP (IN in)
            (NP (DT a) (JJ low) (NN tone)))
          (PP (TO to)
            (NP (NNP Pickersgill))))))
    (: ;)
    (S
      (S
        (NP (NNP Stewart))
        (VP (VBD went)
          (PRT (RP over))
          (S
            (VP (TO to)
              (VP (VB leeward)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (SBAR (IN if)
                        (S
                          (NP (DT the) (NN boat))
                          (VP (VBD was)
                            (ADVP (RB still))
                            (PP (IN alongside)))))))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD had)
          (ADVP (RB long) (RB before))
          (VP (VBN returned)
            (PP (TO to)
              (NP (DT the) (NN yacht)))))))
    (. .)))

nsubj(followed-2, Corbett-1)
nsubj(talked-5, Corbett-1)
root(ROOT-0, followed-2)
conj_and(followed-2, talked-5)
det(tone-9, a-7)
amod(tone-9, low-8)
prep_in(talked-5, tone-9)
prep_to(talked-5, Pickersgill-11)
nsubj(went-14, Stewart-13)
nsubj(leeward-17, Stewart-13)
nsubj(see-19, Stewart-13)
parataxis(followed-2, went-14)
prt(went-14, over-15)
aux(leeward-17, to-16)
xcomp(went-14, leeward-17)
aux(see-19, to-18)
xcomp(leeward-17, see-19)
mark(was-23, if-20)
det(boat-22, the-21)
nsubj(was-23, boat-22)
advcl(see-19, was-23)
advmod(was-23, still-24)
prep(was-23, alongside-25)
nsubj(returned-32, it-28)
aux(returned-32, had-29)
advmod(before-31, long-30)
advmod(returned-32, before-31)
parataxis(followed-2, returned-32)
conj_but(went-14, returned-32)
det(yacht-35, the-34)
prep_to(returned-32, yacht-35)

(ROOT
  (S
    (S
      (NP (NNP Miss) (NNP Ossulton))
      (VP
        (VP (VBD had)
          (VP (VBN heard)
            (NP
              (NP (PRP$ her) (NN brother) (POS 's))
              (NN voice))))
        (, ,)
        (CC but)
        (VP (VBD did) (RB not)
          (VP (VB come)
            (PRT (RP out))
            (PP (IN of)
              (NP (DT the) (NN after-cabin)))))))
    (: ;)
    (S
      (S
        (NP (PRP she))
        (VP (VBD wished)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ magnificent)))))))
      (, ,)
      (CC and)
      (S
        (PP (IN at)
          (NP (DT the) (JJ same) (NN time)))
        (NP (PRP she))
        (VP (VBD was) (RB not)
          (ADJP (JJ sure))
          (SBAR (IN whether)
            (S
              (NP (DT all))
              (VP (VBD was)
                (ADJP (JJ right)))))))
      (, ,)
      (S
        (NP (NNP Phoebe))
        (VP (VBG having)
          (VP (VBN informed)
            (NP (PRP her))
            (SBAR
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBD was)
                    (NP
                      (NP (NN nobody))
                      (PP (IN with)
                        (NP
                          (NP (PRP$ her) (NN brother))
                          (CC and)
                          (NP (NNP Mr) (NNP Stewart))))))))
              (, ,)
              (CC and)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NNS smugglers))
                  (ADVP (RB still))
                  (VP (VBD had)
                    (NP
                      (NP (DT the) (NN command))
                      (PP (IN of)
                        (NP (DT the) (NN vessel))))))))))))
    (. .)))

nn(Ossulton-2, Miss-1)
nsubj(heard-4, Ossulton-2)
nsubj(come-13, Ossulton-2)
aux(heard-4, had-3)
root(ROOT-0, heard-4)
poss(brother-6, her-5)
poss(voice-8, brother-6)
dobj(heard-4, voice-8)
aux(come-13, did-11)
neg(come-13, not-12)
conj_but(heard-4, come-13)
det(after-cabin-17, the-16)
prep_out_of(come-13, after-cabin-17)
nsubj(wished-20, she-19)
nsubj(magnificent-23, she-19)
parataxis(heard-4, wished-20)
aux(magnificent-23, to-21)
cop(magnificent-23, be-22)
xcomp(wished-20, magnificent-23)
det(time-29, the-27)
amod(time-29, same-28)
prep_at(sure-33, time-29)
nsubj(sure-33, she-30)
cop(sure-33, was-31)
neg(sure-33, not-32)
parataxis(heard-4, sure-33)
conj_and(wished-20, sure-33)
mark(right-37, whether-34)
nsubj(right-37, all-35)
cop(right-37, was-36)
ccomp(sure-33, right-37)
nsubj(informed-41, Phoebe-39)
aux(informed-41, having-40)
parataxis(heard-4, informed-41)
conj_and(wished-20, informed-41)
parataxis(wished-20, informed-41)
dobj(informed-41, her-42)
mark(was-45, that-43)
expl(was-45, there-44)
ccomp(informed-41, was-45)
nsubj(was-45, nobody-46)
poss(brother-49, her-48)
prep_with(nobody-46, brother-49)
nn(Stewart-52, Mr-51)
prep_with(nobody-46, Stewart-52)
conj_and(brother-49, Stewart-52)
mark(had-59, that-55)
det(smugglers-57, the-56)
nsubj(had-59, smugglers-57)
advmod(had-59, still-58)
ccomp(informed-41, had-59)
conj_and(was-45, had-59)
det(command-61, the-60)
dobj(had-59, command-61)
det(vessel-64, the-63)
prep_of(command-61, vessel-64)

(ROOT
  (S
    (PP (IN After)
      (NP (DT a) (NN while)))
    (, ,)
    (NP (NNP Pickersgill)
      (CC and)
      (NNP Corbett))
    (VP
      (VP (VBD went)
        (PRT (RP down))
        (ADVP (RB forward)))
      (, ,)
      (CC and)
      (VP (VBD returned)
        (VP (VBN dressed)
          (PP (IN in)
            (NP
              (NP
                (NP (DT the) (NNS smugglers) (POS '))
                (NNS clothes))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP they))
                  (VP (VBD resumed)
                    (NP (PRP$ their) (NN walk))
                    (PP (IN on)
                      (NP (NN deck)))))))))))
    (. .)))

det(while-3, a-2)
prep_after(went-8, while-3)
nsubj(went-8, Pickersgill-5)
nsubj(returned-13, Pickersgill-5)
conj_and(Pickersgill-5, Corbett-7)
nsubj(went-8, Corbett-7)
root(ROOT-0, went-8)
prt(went-8, down-9)
advmod(went-8, forward-10)
conj_and(went-8, returned-13)
dep(returned-13, dressed-14)
det(smugglers-17, the-16)
poss(clothes-19, smugglers-17)
prep_in(dressed-14, clothes-19)
tmod(resumed-23, clothes-19)
advmod(resumed-23, when-21)
nsubj(resumed-23, they-22)
rcmod(clothes-19, resumed-23)
poss(walk-25, their-24)
dobj(resumed-23, walk-25)
prep_on(resumed-23, deck-27)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT the) (JJ mean) (NN time)))
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ dark))))
    (: ;)
    (S
      (S
        (NP (DT the) (NN cutter))
        (VP (VBD flew)
          (PP (IN along)
            (NP (DT the) (NN coast)))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (DT the) (NNPS Needles) (POS '))
          (NNS lights))
        (VP (VBD were)
          (PP (IN on)
            (NP (DT the) (JJ larboard) (NN bow))))))
    (. .)))

det(time-4, the-2)
amod(time-4, mean-3)
prep_in(dark-7, time-4)
nsubj(dark-7, it-5)
cop(dark-7, was-6)
root(ROOT-0, dark-7)
det(cutter-10, the-9)
nsubj(flew-11, cutter-10)
parataxis(dark-7, flew-11)
det(coast-14, the-13)
prep_along(flew-11, coast-14)
det(Needles-18, the-17)
poss(lights-20, Needles-18)
nsubj(were-21, lights-20)
parataxis(dark-7, were-21)
conj_and(flew-11, were-21)
det(bow-25, the-23)
amod(bow-25, larboard-24)
prep_on(were-21, bow-25)

(ROOT
  (S
    (NP
      (NP (DT The) (NN conversation))
      (PP (IN between)
        (NP
          (NP (NNP Cecilia))
          (, ,)
          (NP (NNP Mrs) (NNP Lascelles))
          (, ,)
          (CC and)
          (NP (PRP$ her) (NN father))
          (, ,))))
    (VP (VBD was)
      (ADJP (JJ long)))
    (. .)))

det(conversation-2, The-1)
nsubj(long-14, conversation-2)
prep_between(conversation-2, Cecilia-4)
nn(Lascelles-7, Mrs-6)
prep_between(conversation-2, Lascelles-7)
conj_and(Cecilia-4, Lascelles-7)
poss(father-11, her-10)
prep_between(conversation-2, father-11)
conj_and(Cecilia-4, father-11)
cop(long-14, was-13)
root(ROOT-0, long-14)

(ROOT
  (S
    (SBAR
      (SBAR
        (WHADVP (WRB When))
        (S
          (S
            (NP (DT all))
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBN detailed)))))
          (, ,)
          (CC and)
          (S
            (NP
              (NP (DT the) (NN conduct))
              (PP (IN of)
                (NP (NNP Pickersgill))))
            (ADVP (RB duly))
            (VP (VBD represented) (, ,)
              (SBAR
                (S
                  (NP (NNP Lord) (NNP B))
                  (: --)
                  (VP (VBD acknowledged)
                    (SBAR (IN that)
                      (S (, ,)
                        (PP (IN by)
                          (S
                            (VP (VBG attacking)
                              (NP (DT the) (NN smuggler)))))
                        (, ,)
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN laid)
                            (S
                              (NP (PRP himself))
                              (ADJP (JJ open)
                                (PP (TO to)
                                  (NP (NN retaliation))))))))))))))))
      (: ;)
      (SBAR (IN that)
        (S
          (NP (NNP Pickersgill))
          (VP (VBD had)
            (VP (VBN shown)
              (NP
                (NP (DT a) (JJ great) (NN deal))
                (PP (IN of)
                  (NP (NN forbearance))))
              (PP (IN in)
                (NP (DT every) (NN instance)))))))
      (: ;)
      (CC and)
      (ADVP (IN after) (DT all))
      (, ,)
      (SBAR (VBD had)
        (S
          (NP (PRP he))
          (VP (RB not) (VBN gone)
            (PP (IN on)
              (NP
                (NP (NN board))
                (NP (DT the) (NN yacht))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD might)
      (VP (VB have)
        (VP (VBN been)
          (VP (VBN lost) (, ,)
            (PP (IN with)
              (NP
                (NP (RB only) (CD three) (NN seamen))
                (PP (IN on)
                  (NP (NN board)))))))))
    (. .)))

advmod(detailed-5, When-1)
nsubjpass(detailed-5, all-2)
aux(detailed-5, had-3)
auxpass(detailed-5, been-4)
advcl(lost-64, detailed-5)
det(conduct-9, the-8)
nsubj(represented-13, conduct-9)
prep_of(conduct-9, Pickersgill-11)
advmod(represented-13, duly-12)
conj_and(detailed-5, represented-13)
advcl(lost-64, represented-13)
nn(B-16, Lord-15)
nsubj(acknowledged-18, B-16)
ccomp(represented-13, acknowledged-18)
mark(laid-28, that-19)
prepc_by(laid-28, attacking-22)
det(smuggler-24, the-23)
dobj(attacking-22, smuggler-24)
nsubj(laid-28, he-26)
aux(laid-28, had-27)
ccomp(acknowledged-18, laid-28)
nsubj(open-30, himself-29)
xcomp(laid-28, open-30)
prep_to(open-30, retaliation-32)
mark(shown-37, that-34)
nsubj(shown-37, Pickersgill-35)
aux(shown-37, had-36)
conj_and(detailed-5, shown-37)
advcl(lost-64, shown-37)
det(deal-40, a-38)
amod(deal-40, great-39)
dobj(shown-37, deal-40)
prep_of(deal-40, forbearance-42)
det(instance-45, every-44)
prep_in(shown-37, instance-45)
advmod(detailed-5, after-48)
conj_and(detailed-5, after-48)
advcl(lost-64, after-48)
dep(after-48, all-49)
dep(gone-54, had-51)
nsubj(gone-54, he-52)
neg(gone-54, not-53)
conj_and(detailed-5, gone-54)
advcl(lost-64, gone-54)
prep_on(gone-54, board-56)
det(yacht-58, the-57)
dep(board-56, yacht-58)
nsubjpass(lost-64, she-60)
aux(lost-64, might-61)
aux(lost-64, have-62)
auxpass(lost-64, been-63)
root(ROOT-0, lost-64)
advmod(seamen-69, only-67)
num(seamen-69, three-68)
prep_with(lost-64, seamen-69)
prep_on(seamen-69, board-71)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (VBN amused)
        (PP (IN with)
          (NP
            (NP (DT the) (NN smuggling))
            (CC and)
            (NP
              (NP (DT the) (NN fright))
              (PP (IN of)
                (NP
                  (NP (PRP$ his) (NN sister))
                  (, ,)
                  (NP
                    (NP (RB still) (JJR more))
                    (PP (IN with)
                      (NP (DT the) (NNS gentlemen)))
                    (UCP
                      (VP (VBG being)
                        (VP (VBN sent)
                          (PP (TO to)
                            (NP (NNP Cherbourg)))))
                      (, ,)
                      (CC and)
                      (ADJP (RB much) (JJ consoled))))))))))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD was) (RB not)
            (NP (DT the) (JJ only) (NN one)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN laughed)
                      (PP (IN at)))))))))))
    (. .)))

nsubjpass(amused-3, He-1)
auxpass(amused-3, was-2)
root(ROOT-0, amused-3)
det(smuggling-6, the-5)
prep_with(amused-3, smuggling-6)
det(fright-9, the-8)
prep_with(amused-3, fright-9)
conj_and(smuggling-6, fright-9)
poss(sister-12, his-11)
prep_of(fright-9, sister-12)
advmod(more-15, still-14)
appos(sister-12, more-15)
det(gentlemen-18, the-17)
prep_with(more-15, gentlemen-18)
auxpass(sent-20, being-19)
dep(more-15, sent-20)
prep_to(sent-20, Cherbourg-22)
advmod(consoled-26, much-25)
dep(more-15, consoled-26)
conj_and(sent-20, consoled-26)
mark(one-33, that-27)
nsubj(one-33, he-28)
cop(one-33, was-29)
neg(one-33, not-30)
det(one-33, the-31)
amod(one-33, only-32)
ccomp(amused-3, one-33)
aux(laughed-36, to-34)
auxpass(laughed-36, be-35)
vmod(one-33, laughed-36)
prep(laughed-36, at-37)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADVP (RB also))
      (ADJP (RB much) (JJ pleased))
      (PP (IN with)
        (NP
          (NP
            (NP (NNP Pickersgill) (POS 's))
            (NN intention))
          (PP (IN of)
            (S
              (VP (VBG leaving)
                (NP
                  (NP
                    (NP (DT the) (NN yacht) (NN safe))
                    (PP (IN in)
                      (NP (NNP Cowes) (NN harbour))))
                  (, ,)
                  (NP
                    (NP (PRP$ his) (NN respect))
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN property))
                        (PP (IN on)
                          (NP (NN board))))))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (PRP$ his) (NN conduct))
                    (PP (TO to)
                      (NP (DT the) (NNS ladies)))))))))))
    (. .)))

nsubj(pleased-5, He-1)
cop(pleased-5, was-2)
advmod(pleased-5, also-3)
advmod(pleased-5, much-4)
root(ROOT-0, pleased-5)
poss(intention-9, Pickersgill-7)
prep_with(pleased-5, intention-9)
prepc_of(intention-9, leaving-11)
det(safe-14, the-12)
nn(safe-14, yacht-13)
dobj(leaving-11, safe-14)
nn(harbour-17, Cowes-16)
prep_in(safe-14, harbour-17)
poss(respect-20, his-19)
dobj(leaving-11, respect-20)
conj_and(safe-14, respect-20)
det(property-23, the-22)
prep_for(respect-20, property-23)
prep_on(property-23, board-25)
poss(conduct-29, his-28)
dobj(leaving-11, conduct-29)
conj_and(safe-14, conduct-29)
det(ladies-32, the-31)
prep_to(conduct-29, ladies-32)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (NN whole)))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD felt)
        (ADJP (JJ grateful)
          (PP (TO to)
            (NP (NNP Pickersgill))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (NN gratitude))
              (SBAR
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (ADVP (RB always))
                    (ADJP (JJ good)))))))))
      (VP (MD will)))
    (. .)))

det(whole-3, the-2)
prep_on(felt-6, whole-3)
nsubj(felt-6, he-5)
root(ROOT-0, felt-6)
acomp(felt-6, grateful-7)
prep_to(grateful-7, Pickersgill-9)
advmod(is-14, where-12)
expl(is-14, there-13)
advcl(will-20, is-14)
csubj(will-20, is-14)
nsubj(is-14, gratitude-15)
expl(is-17, there-16)
rcmod(gratitude-15, is-17)
advmod(is-17, always-18)
acomp(is-17, good-19)
conj_and(felt-6, will-20)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHNP (WP who))
    (SQ (MD can)
      (NP (PRP he))
      (VP (VB be)))
    (. ?) ('' '')))

cc(be-6, But-2)
dobj(be-6, who-3)
aux(be-6, can-4)
nsubj(be-6, he-5)
root(ROOT-0, be-6)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP
          (NP (NNP Mrs) (NNP Lascelles))
          (: ;) (`` ``)
          (NP (PRP$ his) (NN name)))))
    (S
      (NP (PRP he))
      (VP (VBZ acknowledges)
        (S (RB not)
          (VP (TO to)
            (VP (VB be)
              (NP (NNP Pickersgill)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD told)
        (NP (PRP me))
        (ADVP (RB confidentially))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (PP (IN of)
                (NP (JJ good) (NN family))))))))
    (. .) ('' '')))

root(ROOT-0, said-1)
nn(Lascelles-3, Mrs-2)
dobj(said-1, Lascelles-3)
poss(name-7, his-6)
dep(Lascelles-3, name-7)
nsubj(acknowledges-9, he-8)
nsubj(Pickersgill-13, he-8)
ccomp(said-1, acknowledges-9)
neg(Pickersgill-13, not-10)
aux(Pickersgill-13, to-11)
cop(Pickersgill-13, be-12)
xcomp(acknowledges-9, Pickersgill-13)
nsubj(told-17, he-16)
conj_and(said-1, told-17)
dobj(told-17, me-18)
advmod(told-17, confidentially-19)
mark(was-22, that-20)
nsubj(was-22, he-21)
ccomp(told-17, was-22)
amod(family-25, good-24)
prep_of(was-22, family-25)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Confidentially))
      (, ,)
      (NP (PRP$ my)
        (ADJP (RB dear))
        (NN Mrs)))
    (VP (VBZ Lascelles))
    (. !) ('' '')))

nsubj(Lascelles-7, Confidentially-2)
poss(Mrs-6, my-4)
amod(Mrs-6, dear-5)
appos(Confidentially-2, Mrs-6)
root(ROOT-0, Lascelles-7)

(ROOT
  (SINV
    (VP (VBD said))
    (NP
      (NP (NNP Lord))
      (ADVP (RB B)))
    (: --) (. .)))

root(ROOT-0, said-1)
nsubj(said-1, Lord-2)
advmod(Lord-2, B-3)

(ROOT
  (INTJ (`` ``) (UH Oh) (, ,) (RB yes) (. !)))

root(ROOT-0, Oh-2)
dep(Oh-2, yes-4)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (NP (PDT both) (PRP$ his) (NNS confidants)))
    (. .)))

nsubj(confidants-5, We-1)
cop(confidants-5, are-2)
predet(confidants-5, both-3)
poss(confidants-5, his-4)
root(ROOT-0, confidants-5)

(ROOT
  (FRAG
    (PP (IN Are)
      (NP (PRP we)))
    (NP (RB not))
    (, ,)
    (NP (NNP Cecilia))
    (. ?) ('' '')))

prep_are(not-3, we-2)
root(ROOT-0, not-3)
dep(not-3, Cecilia-5)

(ROOT
  (S (`` ``)
    (PP (IN Upon)
      (NP
        (NP (PRP$ my) (NN honour))
        (, ,)
        (NP (NNP Mrs) (NNP Lascelles))))
    (, ,)
    (NP (DT this) (NN smuggler))
    (VP (VBZ appears)
      (S
        (VP (TO to)
          (VP (VB have)
            (VP (VBN made)
              (NP
                (NP (DT an) (NN impression))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (DT many))
                    (VP (VBP have)
                      (VP (VBN attempted)
                        (PP (IN in)
                          (NP (JJ vain)))))))))))))
    (. .) ('' '')))

poss(honour-4, my-3)
prep_upon(appears-11, honour-4)
nn(Lascelles-7, Mrs-6)
appos(honour-4, Lascelles-7)
det(smuggler-10, this-9)
nsubj(appears-11, smuggler-10)
nsubj(made-14, smuggler-10)
root(ROOT-0, appears-11)
aux(made-14, to-12)
aux(made-14, have-13)
xcomp(appears-11, made-14)
det(impression-16, an-15)
dobj(made-14, impression-16)
dobj(attempted-20, impression-16)
nsubj(attempted-20, many-18)
aux(attempted-20, have-19)
rcmod(impression-16, attempted-20)
prep_in(attempted-20, vain-22)

(ROOT
  (S
    (S
      (NP (NNP Mrs) (NNP Lascelles))
      (VP
        (VP (VBD did) (RB not)
          (VP (VB reply)
            (PP (TO to)
              (NP (DT the) (NN remark)))))
        (, ,)
        (CC but)
        (VP (VBD said) (, ,) (`` ``)
          (S
            (INTJ (RB Now))
            (, ,)
            (NP (PRP$ my) (NN lord))
            (, ,)
            (NP (PRP you))
            (VP (MD must)
              (VP (VB decide)))))))
    (: --)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP trust)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD will))))
        (, ,)
        (S
          (VP (TO to)
            (VP
              (VP (VB oblige)
                (NP (PRP us)))
              (: ;)
              (VP (VB treat)
                (NP (PRP him))
                (SBAR (IN as)
                  (S
                    (NP (PRP he))
                    (VP (VBZ has)
                      (VP (VBN treated)
                        (NP (PRP us))
                        (, ,)
                        (PP (IN with)
                          (NP
                            (NP (DT the) (JJS greatest) (NN respect))
                            (CC and)
                            (NP (NN kindness))))))))))))))
    (. .) ('' '')))

nn(Lascelles-2, Mrs-1)
nsubj(reply-5, Lascelles-2)
nsubj(said-11, Lascelles-2)
aux(reply-5, did-3)
neg(reply-5, not-4)
root(ROOT-0, reply-5)
det(remark-8, the-7)
prep_to(reply-5, remark-8)
conj_but(reply-5, said-11)
discourse(decide-21, Now-14)
poss(lord-17, my-16)
nsubj(decide-21, lord-17)
nsubj(decide-21, you-19)
aux(decide-21, must-20)
ccomp(said-11, decide-21)
nsubj(trust-25, I-24)
nsubj(oblige-30, I-24)
conj_and(reply-5, trust-25)
nsubj(will-27, you-26)
ccomp(trust-25, will-27)
aux(oblige-30, to-29)
xcomp(trust-25, oblige-30)
dobj(oblige-30, us-31)
dep(oblige-30, treat-33)
dobj(treat-33, him-34)
mark(treated-38, as-35)
nsubj(treated-38, he-36)
aux(treated-38, has-37)
advcl(treat-33, treated-38)
dobj(treated-38, us-39)
det(respect-44, the-42)
amod(respect-44, greatest-43)
prep_with(treated-38, respect-44)
prep_with(treated-38, kindness-46)
conj_and(respect-44, kindness-46)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB suppose)
        (ADVP (RB otherwise))))
    (. ?) ('' '')))

advmod(suppose-5, Why-2)
aux(suppose-5, should-3)
nsubj(suppose-5, you-4)
root(ROOT-0, suppose-5)
advmod(suppose-5, otherwise-6)

(ROOT
  (FRAG
    (NP
      (NP (NNP replied) (NNP Lord) (NNP B))
      (: --) (: ;)
      (S (`` ``)
        (NP (PRP it))
        (VP (VBZ is) (RB not)
          (NP
            (NP (RB only) (PRP$ my) (NN wish))
            (PP (CC but)
              (NP (PRP$ my) (NN interest)))
            (S (RB so)
              (VP (TO to)
                (VP (VB do)))))))
      (. .))))

nn(B-3, replied-1)
nn(B-3, Lord-2)
root(ROOT-0, B-3)
nsubj(wish-12, it-7)
cop(wish-12, is-8)
neg(wish-12, not-9)
advmod(wish-12, only-10)
poss(wish-12, my-11)
dep(B-3, wish-12)
prep(wish-12, but-13)
poss(interest-15, my-14)
pobj(but-13, interest-15)
advmod(do-18, so-16)
aux(do-18, to-17)
vmod(wish-12, do-18)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD may)
      (VP (VB take)
        (NP (PRP us))
        (ADVP
          (ADVP (RB over)
            (PP (TO to)
              (NP (NNP France) (NN to-night))))
          (, ,)
          (CC or)
          (ADVP (RB anywhere) (RB else)))))
    (. .)))

nsubj(take-3, He-1)
aux(take-3, may-2)
root(ROOT-0, take-3)
dobj(take-3, us-4)
advmod(take-3, over-5)
nn(to-night-8, France-7)
prep_to(over-5, to-night-8)
advmod(else-12, anywhere-11)
advmod(take-3, else-12)
conj_or(over-5, else-12)

(ROOT
  (FRAG
    (S
      (VP (VBG Has)
        (S
          (NP (PRP he))
          (NP
            (NP (RB not) (NN possession))
            (PP (IN of)
              (NP (DT the) (NN vessel)))))))
    (. ?) ('' '')))

root(ROOT-0, Has-1)
nsubj(possession-4, he-2)
neg(possession-4, not-3)
xcomp(Has-1, possession-4)
det(vessel-7, the-6)
prep_of(possession-4, vessel-7)

(ROOT
  (S
    (S
      (NP (`` ``)
        (NP (NNP Yes))
        (, ,) ('' ''))
      (VP (VBD replied)
        (NP (NNP Cecilia))))
    (: ;) (`` ``)
    (S (CC but)
      (NP (PRP we))
      (VP (VBP flatter)
        (NP (PRP ourselves))
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP have)
              (VP (VBN _)
                (NP (DT the) (NN command) (NN _))))))))
    (. .)))

nsubj(replied-5, Yes-2)
root(ROOT-0, replied-5)
dobj(replied-5, Cecilia-6)
cc(flatter-11, but-9)
nsubj(flatter-11, we-10)
parataxis(replied-5, flatter-11)
dobj(flatter-11, ourselves-12)
mark(_-16, that-13)
nsubj(_-16, we-14)
aux(_-16, have-15)
ccomp(flatter-11, _-16)
det(_-19, the-17)
nn(_-19, command-18)
dobj(_-16, _-19)

(ROOT
  (S
    (VP (VB Shall)
      (S
        (NP (PRP we))
        (VP (VB call)
          (NP (PRP him))
          (ADVP (RB down))
          (, ,)
          (NP (NN papa)))))
    (. ?) ('' '')))

root(ROOT-0, Shall-1)
nsubj(call-3, we-2)
ccomp(Shall-1, call-3)
dobj(call-3, him-4)
advmod(call-3, down-5)
dobj(call-3, papa-7)

(ROOT
  (S
    (VP (`` ``) (VBG Ring)
      (PP (IN for)
        (NP (NNP Maddox))))
    (. .)))

root(ROOT-0, Ring-2)
prep_for(Ring-2, Maddox-4)

(ROOT
  (SINV
    (ADVP (RB Maddox))
    (, ,)
    (VP (VBP tell))
    (NP
      (NP (NNP Mr) (NNP Pickersgill))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ is)
            (PP (IN on)
              (NP (NN deck)))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP
                  (VP (VBP wish)
                    (S
                      (VP (TO to)
                        (VP (VB speak)
                          (PP (IN with)
                            (NP (PRP him)))))))
                  (, ,)
                  (CC and)
                  (VP (MD shall)
                    (VP (VB be)
                      (VP (VBN obliged)
                        (PP (IN by)
                          (S
                            (NP (PRP$ his))
                            (VP (VBG stepping)
                              (PRT (RP down))
                              (PP (IN into)
                                (NP (DT the) (NN cabin))))))))))))))))
    (. .) ('' '')))

advmod(tell-3, Maddox-1)
root(ROOT-0, tell-3)
nn(Pickersgill-5, Mr-4)
nsubj(tell-3, Pickersgill-5)
nsubj(is-8, Pickersgill-5)
rcmod(Pickersgill-5, is-8)
prep_on(is-8, deck-10)
mark(wish-14, that-12)
nsubj(wish-14, I-13)
nsubj(speak-16, I-13)
nsubjpass(obliged-23, I-13)
ccomp(is-8, wish-14)
aux(speak-16, to-15)
xcomp(wish-14, speak-16)
prep_with(speak-16, him-18)
aux(obliged-23, shall-21)
auxpass(obliged-23, be-22)
ccomp(is-8, obliged-23)
conj_and(wish-14, obliged-23)
nsubj(stepping-26, his-25)
agent(obliged-23, stepping-26)
prt(stepping-26, down-27)
det(cabin-30, the-29)
prep_into(stepping-26, cabin-30)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ
      (VP (, ,)
        (S
          (NP
            (NP (PRP$ my))
            (VP (VBN lord))))))
    (. ?)))

nsubj(my-4, Who-2)
root(ROOT-0, my-4)
vmod(my-4, lord-5)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (. ?)))

root(ROOT-0, What-1)

(ROOT
  (S
    (NP (NNP _) (NNP Him))
    (VP (VBZ _))
    (. ?) ('' '')))

nn(Him-2, _-1)
nsubj(_-3, Him-2)
root(ROOT-0, _-3)

(ROOT
  (SINV (`` ``)
    (S
      (FRAG
        (INTJ (UH Yes)))
      (: ;)
      (S
        (ADVP (RB _))
        (NP (PRP him))
        (VP (VBZ _))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Cecilia))
    (, ,)
    (S
      (VP (VBG laughing)))
    (. .)))

dep(_-6, Yes-2)
advmod(_-6, _-4)
nsubj(_-6, him-5)
ccomp(replied-9, _-6)
root(ROOT-0, replied-9)
nsubj(replied-9, Cecilia-10)
vmod(replied-9, laughing-12)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Must)
        (S
          (NP (PRP I))
          (VP (VB call)
            (NP (PRP him))
            (NP (PRP$ my) (NN lord))))))
    (, ,)
    (ADVP (RB now))
    (, ,)
    (VP (VBP miss))
    (. ?) ('' '')))

dep(miss-11, Must-2)
nsubj(call-4, I-3)
ccomp(Must-2, call-4)
iobj(call-4, him-5)
poss(lord-7, my-6)
dobj(call-4, lord-7)
advmod(miss-11, now-9)
root(ROOT-0, miss-11)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (MD may)
        (VP (VB do)
          (S
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (VBP please))))
            (, ,)
            (NP (NNP Maddox))
            (: ;)
            (VP (CC but)
              (VP (VBD recollect)
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBZ is)
                      (ADVP (RB still))
                      (PP (IN in)
                        (NP
                          (NP (NN possession))
                          (PP (IN of)
                            (NP (DT the) (NN vessel))))))))))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Cecilia))
    (. .)))

nsubj(do-4, You-2)
aux(do-4, may-3)
ccomp(replied-23, do-4)
mark(please-7, as-5)
nsubj(please-7, you-6)
advcl(recollect-12, please-7)
nsubj(recollect-12, Maddox-9)
cc(recollect-12, but-11)
ccomp(do-4, recollect-12)
nsubj(is-14, he-13)
ccomp(recollect-12, is-14)
advmod(is-14, still-15)
prep_in(is-14, possession-17)
det(vessel-20, the-19)
prep_of(possession-17, vessel-20)
root(ROOT-0, replied-23)
nsubj(replied-23, Cecilia-24)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (, ,)
    (S
      (PP (IN with)
        (NP
          (NP (PRP$ your) (NN lordship) (POS 's))
          (NN permission)))
      (, ,)
      (NP (PRP I))
      (VP (MD will)))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT the) (JJS safest) (NN way))))
    (. .) ('' '')))

advmod(will-11, Then-2)
poss(lordship-6, your-5)
poss(permission-8, lordship-6)
prep_with(will-11, permission-8)
nsubj(will-11, I-10)
root(ROOT-0, will-11)
nsubj(way-17, it-13)
cop(way-17, 's-14)
det(way-17, the-15)
amod(way-17, safest-16)
parataxis(will-11, way-17)

(ROOT
  (S
    (S
      (NP (DT The) (NN smuggler))
      (VP (VBD entered)
        (NP (DT the) (NN cabin))))
    (, ,)
    (NP (DT the) (NNS ladies))
    (VP (VBD started)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD appeared)
            (PP (IN in)
              (NP (PRP$ his) (JJ rough) (NN costume)))))))
    (. .)))

det(smuggler-2, The-1)
nsubj(entered-3, smuggler-2)
ccomp(started-9, entered-3)
det(cabin-5, the-4)
dobj(entered-3, cabin-5)
det(ladies-8, the-7)
nsubj(started-9, ladies-8)
root(ROOT-0, started-9)
mark(appeared-12, as-10)
nsubj(appeared-12, he-11)
advcl(started-9, appeared-12)
poss(costume-16, his-14)
amod(costume-16, rough-15)
prep_in(appeared-12, costume-16)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (PRP$ his) (NN throat) (JJ open))
        (, ,)
        (CC and)
        (NP (PRP$ his) (JJ loose) (JJ black) (NN handkerchief))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ _) (JJ beau) (NN ideal) (NN _))
        (PP (IN of)
          (NP (DT a) (JJ handsome) (NN sailor)))))
    (. .)))

poss(throat-3, his-2)
prep_with(_-18, throat-3)
amod(throat-3, open-4)
poss(handkerchief-10, his-7)
amod(handkerchief-10, loose-8)
amod(handkerchief-10, black-9)
conj_and(throat-3, handkerchief-10)
prep_with(_-18, handkerchief-10)
nsubj(_-18, he-12)
cop(_-18, was-13)
det(_-18, the-14)
amod(_-18, _-15)
amod(_-18, beau-16)
nn(_-18, ideal-17)
root(ROOT-0, _-18)
det(sailor-22, a-20)
amod(sailor-22, handsome-21)
prep_of(_-18, sailor-22)

(ROOT
  (S (`` ``)
    (NP (PRP$ Your) (NN lordship))
    (VP (VBZ wishes)
      (S
        (VP (TO to)
          (VP (VB communicate)
            (PP (IN with)
              (NP (PRP me)))))))
    (. ?) ('' '')))

poss(lordship-3, Your-2)
nsubj(wishes-4, lordship-3)
nsubj(communicate-6, lordship-3)
root(ROOT-0, wishes-4)
aux(communicate-6, to-5)
xcomp(wishes-4, communicate-6)
prep_with(communicate-6, me-8)

(ROOT
  (S (`` ``)
    (NP (NNP Mr) (NNP Pickersgill))
    (, ,)
    (NP (PRP I))
    (VP (VBP feel)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBN had)
                (NP
                  (NP (NN cause))
                  (PP (IN of)
                    (NP
                      (NP (NN enmity))
                      (PP (IN against)
                        (NP (PRP me))))))))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBD behaved)
                (PP (IN with)
                  (NP (NN forbearance)))))))))
    (. .)))

nn(Pickersgill-3, Mr-2)
nsubj(feel-6, Pickersgill-3)
nsubj(feel-6, I-5)
root(ROOT-0, feel-6)
mark(had-10, that-7)
nsubj(had-10, you-8)
aux(had-10, have-9)
ccomp(feel-6, had-10)
dobj(had-10, cause-11)
prep_of(cause-11, enmity-13)
prep_against(enmity-13, me-15)
mark(behaved-21, that-18)
nsubj(behaved-21, you-19)
aux(behaved-21, have-20)
ccomp(feel-6, behaved-21)
conj_and(had-10, behaved-21)
prep_with(behaved-21, forbearance-23)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP thank)
        (NP (PRP you))
        (PP (IN for)
          (NP
            (NP (PRP$ your) (JJ considerate) (NN treatment))
            (PP (IN of)
              (NP (DT the) (NNS ladies)))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VB assure)
        (NP (PRP you))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP feel)
              (NP
                (NP (DT no) (NN resentment))
                (PP (IN for)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ has)
                        (VP (VBN passed))))))))))))
    (. .) ('' '')))

nsubj(thank-2, I-1)
root(ROOT-0, thank-2)
dobj(thank-2, you-3)
poss(treatment-7, your-5)
amod(treatment-7, considerate-6)
prep_for(thank-2, treatment-7)
det(ladies-10, the-9)
prep_of(treatment-7, ladies-10)
nsubj(assure-14, I-13)
conj_and(thank-2, assure-14)
dobj(assure-14, you-15)
mark(feel-19, that-17)
nsubj(feel-19, I-18)
ccomp(assure-14, feel-19)
neg(resentment-21, no-20)
dobj(feel-19, resentment-21)
nsubj(passed-25, what-23)
aux(passed-25, has-24)
prepc_for(resentment-21, passed-25)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ My) (NN lord))
      (, ,)
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (RB quite) (JJ satisfied)
          (PP (IN with)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP have)
                  (VP (VBD said)))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (ADVP (RB only))
      (VP (VBP hope)
        (SBAR (IN that)
          (S (, ,)
            (PP (IN in)
              (NP (NN future)))
            (, ,)
            (NP (PRP you))
            (VP (MD will) (RB not)
              (VP (VB interfere)
                (PRT (RP with))
                (NP
                  (NP
                    (NP (DT a) (JJ poor) (NN smuggler))
                    (, ,)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (MD may)
                          (VP (VB be)
                            (VP (VBG striving) (, ,)
                              (PP (IN by)
                                (NP
                                  (NP (DT a) (NN life))
                                  (PP (IN of)
                                    (NP (NN danger)
                                      (CC and)
                                      (NN privation)))))
                              (, ,)
                              (S
                                (VP (TO to)
                                  (VP (VB procure)
                                    (NP (NN subsistence))
                                    (PP (IN for)
                                      (NP (PRP himself))))))))))))
                  (, ,)
                  (CC and)
                  (PRN (, ,)
                    (ADVP (RB perhaps))
                    (, ,))
                  (NP (PRP$ his) (NN family)))))))))
    (. .)))

poss(lord-3, My-2)
nsubj(satisfied-8, lord-3)
nsubj(satisfied-8, I-5)
cop(satisfied-8, am-6)
advmod(satisfied-8, quite-7)
root(ROOT-0, satisfied-8)
dobj(said-13, what-10)
nsubj(said-13, you-11)
aux(said-13, have-12)
prepc_with(satisfied-8, said-13)
nsubj(hope-18, I-16)
advmod(hope-18, only-17)
conj_and(satisfied-8, hope-18)
mark(interfere-27, that-19)
prep_in(interfere-27, future-22)
nsubj(interfere-27, you-24)
aux(interfere-27, will-25)
neg(interfere-27, not-26)
ccomp(hope-18, interfere-27)
prt(interfere-27, with-28)
det(smuggler-31, a-29)
amod(smuggler-31, poor-30)
dobj(interfere-27, smuggler-31)
nsubj(striving-36, smuggler-31)
nsubj(procure-47, smuggler-31)
aux(striving-36, may-34)
aux(striving-36, be-35)
rcmod(smuggler-31, striving-36)
det(life-40, a-39)
prep_by(striving-36, life-40)
prep_of(life-40, danger-42)
prep_of(life-40, privation-44)
conj_and(danger-42, privation-44)
aux(procure-47, to-46)
xcomp(striving-36, procure-47)
dobj(procure-47, subsistence-48)
prep_for(procure-47, himself-50)
dep(smuggler-31, perhaps-54)
poss(family-57, his-56)
dobj(interfere-27, family-57)
conj_and(smuggler-31, family-57)
nsubj(striving-36, family-57)
nsubj(procure-47, family-57)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD stated)
      (PP (TO to)
        (NP (DT these) (NNS ladies)))
      (NP
        (NP (PRP$ my) (NN intention))
        (PP (IN of)
          (S
            (VP
              (VP (VBG anchoring)
                (NP (DT the) (NN yacht))
                (NP (DT this) (NN night))
                (PP (IN at)
                  (NP (NNP Cowes))))
              (, ,)
              (CC and)
              (VP (VBG leaving)
                (NP (PRP her))
                (SBAR
                  (ADVP (RB as) (RB soon))
                  (IN as)
                  (S
                    (NP (PRP she))
                    (VP (VBD was)
                      (PP (IN in)
                        (NP (NN safety))))))))))))
    (. .)))

nsubj(stated-2, I-1)
root(ROOT-0, stated-2)
det(ladies-5, these-4)
prep_to(stated-2, ladies-5)
poss(intention-7, my-6)
dobj(stated-2, intention-7)
prepc_of(intention-7, anchoring-9)
det(yacht-11, the-10)
dobj(anchoring-9, yacht-11)
det(night-13, this-12)
tmod(anchoring-9, night-13)
prep_at(anchoring-9, Cowes-15)
prepc_of(intention-7, leaving-18)
conj_and(anchoring-9, leaving-18)
dobj(leaving-18, her-19)
advmod(soon-21, as-20)
advmod(was-24, soon-21)
mark(was-24, as-22)
nsubj(was-24, she-23)
advcl(leaving-18, was-24)
prep_in(was-24, safety-26)

(ROOT
  (S
    (NP (PRP$ Your) (JJ unexpected) (NN presence))
    (VP (MD will)
      (ADVP (RB only))
      (VP (VB make)
        (NP
          (NP (DT this) (NN difference))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is) (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (MD must)
                      (ADVP (RB previously))
                      (VP (VB obtain)
                        (NP
                          (NP (PRP$ your) (NN lordship) (POS 's))
                          (NN assurance))
                        (SBAR (IN that)
                          (S
                            (NP
                              (NP (DT those))
                              (PP (IN with)
                                (NP (PRP you))))
                            (VP (MD will)
                              (VP (VB allow)
                                (S
                                  (NP
                                    (NP (PRP me))
                                    (CC and)
                                    (NP (PRP$ my) (NNS men)))
                                  (VP (TO to)
                                    (VP (VB quit)
                                      (NP (PRP her))
                                      (PP (IN without)
                                        (NP (NN molestation))))))))))))))
                (, ,)
                (SBAR (IN after)
                  (S
                    (NP (PRP we))
                    (VP (VBP have)
                      (VP (VBN performed)
                        (NP (DT this) (NN service))))))))))))
    (. .) ('' '')))

poss(presence-3, Your-1)
amod(presence-3, unexpected-2)
nsubj(make-6, presence-3)
aux(make-6, will-4)
advmod(make-6, only-5)
root(ROOT-0, make-6)
det(difference-8, this-7)
dobj(make-6, difference-8)
nsubj(is-11, difference-8)
rcmod(difference-8, is-11)
mark(obtain-17, that-13)
nsubj(obtain-17, I-14)
aux(obtain-17, must-15)
advmod(obtain-17, previously-16)
ccomp(is-11, obtain-17)
poss(lordship-19, your-18)
poss(assurance-21, lordship-19)
dobj(obtain-17, assurance-21)
mark(allow-27, that-22)
nsubj(allow-27, those-23)
prep_with(those-23, you-25)
aux(allow-27, will-26)
ccomp(obtain-17, allow-27)
dobj(allow-27, me-28)
nsubj(quit-33, me-28)
poss(men-31, my-30)
dobj(allow-27, men-31)
conj_and(me-28, men-31)
nsubj(quit-33, men-31)
aux(quit-33, to-32)
xcomp(allow-27, quit-33)
dobj(quit-33, her-34)
prep_without(quit-33, molestation-36)
mark(performed-41, after-38)
nsubj(performed-41, we-39)
aux(performed-41, have-40)
advcl(is-11, performed-41)
det(service-43, this-42)
dobj(performed-41, service-43)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP
      (VP (VBD pledge)
        (S
          (NP (PRP you))
          (NP
            (NP (PRP$ my) (NN word))
            (, ,)
            (NP (NNP Mr) (NNP Pickersgill))
            (, ,))))
      (CC and)
      (VP (VBP thank)
        (NP (PRP you))
        (PP (IN into)
          (NP (DT the) (NN bargain)))))
    (. .)))

nsubj(pledge-3, I-2)
nsubj(thank-12, I-2)
root(ROOT-0, pledge-3)
nsubj(word-6, you-4)
poss(word-6, my-5)
xcomp(pledge-3, word-6)
nn(Pickersgill-9, Mr-8)
appos(word-6, Pickersgill-9)
conj_and(pledge-3, thank-12)
dobj(thank-12, you-13)
det(bargain-16, the-15)
prep_into(thank-12, bargain-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP trust)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB allow)
              (S
                (NP (PRP me))
                (VP (TO to)
                  (VP (VB offer)
                    (NP (DT some) (NN remuneration))))))))))
    (. .) ('' '')))

nsubj(trust-2, I-1)
root(ROOT-0, trust-2)
nsubj(allow-5, you-3)
aux(allow-5, will-4)
ccomp(trust-2, allow-5)
dobj(allow-5, me-6)
nsubj(offer-8, me-6)
aux(offer-8, to-7)
xcomp(allow-5, offer-8)
det(remuneration-10, some-9)
dobj(offer-8, remuneration-10)

(ROOT
  (S (`` ``)
    (ADVP
      (NP
        (NP (JJS Most))
        (ADVP (RB certainly)))
      (RB not))
    (, ,)
    (NP (PRP$ my))
    (VP (VBD lord))
    (. .) ('' '')))

npadvmod(not-4, Most-2)
advmod(Most-2, certainly-3)
neg(lord-7, not-4)
nsubj(lord-7, my-6)
root(ROOT-0, lord-7)

(ROOT
  (S (`` ``)
    (PP (IN At)
      (NP (DT all) (NNS events)))
    (, ,)
    (NP (NNP Mr) (NNP Pickersgill))
    (, ,)
    (SBAR (IN if) (, ,)
      (PP (IN at)
        (NP (DT any) (JJ other) (NN time)))
      (, ,)
      (S
        (NP (PRP I))
        (VP (MD can)
          (VP (VB be)
            (PP (IN of)
              (NP (NN service)))))))
    (, ,)
    (NP (PRP you))
    (VP (MD may)
      (VP (VB command)
        (NP (PRP me))))
    (. .) ('' '')))

det(events-4, all-3)
prep_at(command-24, events-4)
nn(Pickersgill-7, Mr-6)
nsubj(command-24, Pickersgill-7)
mark(be-18, if-9)
det(time-14, any-12)
amod(time-14, other-13)
prep_at(be-18, time-14)
nsubj(be-18, I-16)
aux(be-18, can-17)
advcl(command-24, be-18)
prep_of(be-18, service-20)
nsubj(command-24, you-22)
aux(command-24, may-23)
root(ROOT-0, command-24)
dobj(command-24, me-25)

(ROOT
  (S
    (NP (NNP Pickersgill))
    (VP (VBD made)
      (NP (DT no) (NN reply)))
    (. .)))

nsubj(made-2, Pickersgill-1)
root(ROOT-0, made-2)
neg(reply-4, no-3)
dobj(made-2, reply-4)

(ROOT
  (S (`` ``)
    (VP
      (VP (VBZ Surely))
      (, ,)
      (NP
        (NP (JJR Mr) (NN Pickersgill) (: --))
        ('' '')
        (SBAR (`` ``)
          (S
            (VP (VBZ Pickersgill))))))
    (. !)))

root(ROOT-0, Surely-2)
amod(Pickersgill-5, Mr-4)
dobj(Surely-2, Pickersgill-5)
dep(Pickersgill-5, Pickersgill-9)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB How))
      (S
        (NP (PRP I))
        (VP (VBP hate))))
    (NP (DT that))
    (VP (VBP name))
    (. !) ('' '')))

advmod(hate-3, How-1)
nsubj(hate-3, I-2)
advcl(name-5, hate-3)
nsubj(name-5, that-4)
root(ROOT-0, name-5)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN smuggler))
      (, ,)
      (S
        (VP (VBG musing))))
    (. .)))

root(ROOT-0, said-1)
det(smuggler-3, the-2)
dobj(said-1, smuggler-3)
vmod(said-1, musing-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP
      (VP (VB beg)
        (NP
          (NP
            (NP (PRP$ your) (NN lordship) (POS 's))
            (NN pardon))
          (PRN (: --)
            (SBAR (IN If)
              (S
                (NP (PRP I))
                (VP (MD may)
                  (VP (VB require)
                    (NP (PRP$ your) (NN assistance))
                    (PP (IN for)
                      (NP
                        (NP (DT any))
                        (PP (IN of)
                          (NP (PRP$ my)
                            (ADJP (JJ unfortunate))
                            (NNS companions)))))))))
            (: --)))
        ('' '')
        (PP (`` ``) (RB Not) (IN for)
          (NP (PRP yourself))))
      (, ,)
      (VP (VB Mr)
        (NP (NNP Pickersgill))))
    (. ?) ('' '')))

nsubj(beg-3, I-2)
root(ROOT-0, beg-3)
poss(lordship-5, your-4)
poss(pardon-7, lordship-5)
dobj(beg-3, pardon-7)
mark(require-12, If-9)
nsubj(require-12, I-10)
aux(require-12, may-11)
dep(pardon-7, require-12)
poss(assistance-14, your-13)
dobj(require-12, assistance-14)
prep_for(require-12, any-16)
poss(companions-20, my-18)
amod(companions-20, unfortunate-19)
prep_of(any-16, companions-20)
neg(beg-3, Not-24)
prep_for(beg-3, yourself-26)
dep(beg-3, Mr-28)
dobj(Mr-28, Pickersgill-29)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Mrs) (NNP Lascelles)))
    (. .)))

root(ROOT-0, said-1)
nn(Lascelles-3, Mrs-2)
dobj(said-1, Lascelles-3)

(ROOT
  (S (`` ``)
    (VP (VB Madam) (, ,)
      (S
        (NP (PRP I))
        (VP (VB smuggle)
          (ADVP (DT no) (RBR more)))))
    (. .) ('' '')))

root(ROOT-0, Madam-2)
nsubj(smuggle-5, I-4)
ccomp(Madam-2, smuggle-5)
neg(more-7, no-6)
advmod(smuggle-5, more-7)

(ROOT
  (S (`` ``)
    (PP (IN For)
      (NP (DT the) (NN pleasure)))
    (PRN
      (S
        (NP (PRP I))
        (VP (VBP feel)
          (PP (IN in)
            (S
              (VP (VBG hearing)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (NN resolution))
                      (, ,)
                      (NP (NNP Mr) (NNP Pickersgill))
                      (, ,) ('' ''))
                    (VP (VBD said)
                      (NP (NNP Cecilia))))))))))
      (, ,))
    (`` ``)
    (VP (VBP take)
      (NP (PRP$ my) (NN hand)
        (CC and)
        (NNS thanks)))
    (. .) ('' '')))

det(pleasure-4, the-3)
prep_for(take-20, pleasure-4)
nsubj(feel-6, I-5)
parataxis(take-20, feel-6)
prepc_in(feel-6, hearing-8)
mark(said-16, that-9)
nsubj(said-16, resolution-10)
nn(Pickersgill-13, Mr-12)
appos(resolution-10, Pickersgill-13)
ccomp(hearing-8, said-16)
dobj(said-16, Cecilia-17)
root(ROOT-0, take-20)
poss(hand-22, my-21)
dobj(take-20, hand-22)
dobj(take-20, thanks-24)
conj_and(hand-22, thanks-24)

(ROOT
  (SINV (`` ``)
    (S (CC And)
      (VP (VB mine)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Mrs) (NNP Lascelles))
      (, ,)
      (NP
        (NP (NN half))
        (VP (VBG crying))))
    (. .)))

cc(mine-3, And-2)
ccomp(said-6, mine-3)
root(ROOT-0, said-6)
nn(Lascelles-8, Mrs-7)
nsubj(said-6, Lascelles-8)
appos(Lascelles-8, half-10)
vmod(half-10, crying-11)

(ROOT
  (S (`` ``)
    (CC And)
    (NP
      (NP (NN mine))
      (, ,)
      (ADVP (RB too)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (JJR Lord) (NN B) (: --))
      (, ,)
      (VP (VBG rising)
        (PRT (RP up))))
    (. .)))

cc(said-8, And-2)
nsubj(said-8, mine-3)
advmod(mine-3, too-5)
root(ROOT-0, said-8)
amod(B-10, Lord-9)
dep(said-8, B-10)
vmod(B-10, rising-13)
prt(rising-13, up-14)

(ROOT
  (S
    (NP (NNP Pickersgill))
    (VP
      (VP (VBD passed)
        (NP
          (NP (DT the) (NN back))
          (PP (IN of)
            (NP (PRP$ his) (NN hand))))
        (PP (IN across)
          (NP (PRP$ his) (NNS eyes))))
      (, ,)
      (VP (VBD turned)
        (NP (NN round)))
      (, ,)
      (CC and)
      (VP (VBD left)
        (NP (DT the) (NN cabin))))
    (. .)))

nsubj(passed-2, Pickersgill-1)
nsubj(turned-12, Pickersgill-1)
nsubj(left-16, Pickersgill-1)
root(ROOT-0, passed-2)
det(back-4, the-3)
dobj(passed-2, back-4)
poss(hand-7, his-6)
prep_of(back-4, hand-7)
poss(eyes-10, his-9)
prep_across(passed-2, eyes-10)
conj_and(passed-2, turned-12)
dobj(turned-12, round-13)
conj_and(passed-2, left-16)
det(cabin-18, the-17)
dobj(left-16, cabin-18)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB so) (JJ happy)))
    (. !) ('' '')))

nsubj(happy-5, I-2)
cop(happy-5, 'm-3)
advmod(happy-5, so-4)
root(ROOT-0, happy-5)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Mrs) (NNP Lascelles))
      (, ,)
      (S
        (VP (VBG bursting)
          (PP (IN into)
            (NP (NNS tears))))))
    (. .)))

root(ROOT-0, said-1)
nn(Lascelles-3, Mrs-2)
dobj(said-1, Lascelles-3)
vmod(said-1, bursting-5)
prep_into(bursting-5, tears-7)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (VBZ 's)
        (NP (DT a) (JJ magnificent) (NN fellow))))
    (, ,) ('' '')
    (VP (VBD observed))
    (NP (NNP Lord) (NNP B))
    (: --) (. .)))

nsubj(fellow-6, He-2)
cop(fellow-6, 's-3)
det(fellow-6, a-4)
amod(fellow-6, magnificent-5)
ccomp(observed-9, fellow-6)
root(ROOT-0, observed-9)
nn(B-11, Lord-10)
nsubj(observed-9, B-11)

(ROOT
  (S (`` ``)
    (VP
      (VP (VB Come))
      (, ,)
      (VP (VB let)
        (S
          (NP (PRP us))
          (RB all)
          (VP (VB go)
            (PP (IN on)
              (NP (NN deck)))))))
    (. .) ('' '')))

root(ROOT-0, Come-2)
dep(Come-2, let-4)
nsubj(go-7, us-5)
advmod(go-7, all-6)
ccomp(let-4, go-7)
prep_on(go-7, deck-9)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP have) (RB not)
      (VP (VBN seen)
        (NP
          (NP (PRP$ my) (NN aunt))
          (, ,)
          (NP (NN papa)))))
    (. .) ('' '')))

nsubj(seen-5, You-2)
aux(seen-5, have-3)
neg(seen-5, not-4)
root(ROOT-0, seen-5)
poss(aunt-7, my-6)
dobj(seen-5, aunt-7)
appos(aunt-7, papa-9)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH True)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP
          (VP (VB go)
            (PP (IN in)
              (PP (TO to)
                (NP (PRP her)))))
          (, ,)
          (CC and)
          (ADVP (RB then))
          (VP (VB follow)
            (NP (PRP you))))))
    (. .) ('' '')))

dep(go-6, True-2)
nsubj(go-6, I-4)
nsubj(follow-13, I-4)
aux(go-6, 'll-5)
root(ROOT-0, go-6)
prep(go-6, in-7)
pcomp(in-7, to-8)
pobj(to-8, her-9)
advmod(follow-13, then-12)
conj_and(go-6, follow-13)
dobj(follow-13, you-14)

(ROOT
  (S
    (NP (DT The) (NNS ladies))
    (VP (VBD went)
      (PP (IN upon)
        (NP (NN deck))))
    (. .)))

det(ladies-2, The-1)
nsubj(went-3, ladies-2)
root(ROOT-0, went-3)
prep_upon(went-3, deck-5)

(ROOT
  (S
    (NP (NNP Cecilia))
    (VP (VBD entered)
      (PP (IN into)
        (NP (NN conversation)))
      (PP (IN with)
        (NP (NNP Mr) (NNP Stewart)))
      (, ,)
      (S
        (VP (VBG giving)
          (NP (PRP him))
          (NP
            (NP (DT a) (NN narrative))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD had)
                    (VP (VBN happened))))))))))
    (. .)))

nsubj(entered-2, Cecilia-1)
root(ROOT-0, entered-2)
prep_into(entered-2, conversation-4)
nn(Stewart-7, Mr-6)
prep_with(entered-2, Stewart-7)
xcomp(entered-2, giving-9)
iobj(giving-9, him-10)
det(narrative-12, a-11)
dobj(giving-9, narrative-12)
nsubj(happened-16, what-14)
aux(happened-16, had-15)
prepc_of(narrative-12, happened-16)

(ROOT
  (S
    (NP (NNP Mrs) (NNP Lascelles))
    (VP (VBD sat)
      (NP (NN abaft))
      (PP (IN at)
        (NP (DT the) (NN taffrail)))
      (, ,)
      (PP (IN with)
        (NP
          (NP (PRP$ her) (JJ pretty) (NN hand))
          (VP
            (VP (VBG supporting)
              (NP (PRP$ her) (NN cheek)))
            (, ,)
            (VP (VBG looking)
              (ADVP (RB very) (RB much))
              (S
                (VP (VBG _)
                  (NP (DT a) (NNP la) (NNP Juliette) (NNP _)))))))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(sat-3, Lascelles-2)
root(ROOT-0, sat-3)
dobj(sat-3, abaft-4)
det(taffrail-7, the-6)
prep_at(sat-3, taffrail-7)
poss(hand-12, her-10)
amod(hand-12, pretty-11)
prep_with(sat-3, hand-12)
dep(hand-12, supporting-13)
poss(cheek-15, her-14)
dobj(supporting-13, cheek-15)
dep(supporting-13, looking-17)
advmod(much-19, very-18)
advmod(looking-17, much-19)
vmod(looking-17, _-20)
det(_-24, a-21)
nn(_-24, la-22)
nn(_-24, Juliette-23)
dobj(_-20, _-24)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP Mrs))
      (VP (VBZ Lascelles)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Pickersgill))
      (, ,) (`` ``)
      (S
        (SBAR (IN before)
          (S
            (NP (PRP we))
            (VP (VB part))))
        (, ,)
        (VP (VB allow)
          (S
            (NP (PRP me))
            (VP (TO to)
              (VP (VB observe) (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (VP (VBZ is)
                      (VP (VBG _)
                        (S
                          (NP (PRP you))
                          (ADJP (JJ _)
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBP have)
                                  (VP (VBN induced)
                                    (S
                                      (NP (PRP me))
                                      (VP (TO to)
                                        (VP (VB give)
                                          (PRT (RP up))
                                          (NP (PRP$ my) (NN profession))))))))
                              (: --))))))))
                ('' '')
                (NP (`` ``)
                  (NP (JJ Why)
                    (NX (FW me)))
                  (, ,)
                  (NP (NNP Mr) (NNP Pickersgill)))))))))
    (. ?) ('' '')))

nsubj(Lascelles-3, Mrs-2)
ccomp(said-6, Lascelles-3)
root(ROOT-0, said-6)
nsubj(said-6, Pickersgill-7)
mark(part-12, before-10)
nsubj(part-12, we-11)
advcl(allow-14, part-12)
dep(Pickersgill-7, allow-14)
dobj(allow-14, me-15)
nsubj(observe-17, me-15)
aux(observe-17, to-16)
xcomp(allow-14, observe-17)
mark(_-22, that-19)
nsubj(_-22, it-20)
aux(_-22, is-21)
ccomp(observe-17, _-22)
nsubj(_-24, you-23)
xcomp(_-22, _-24)
nsubj(induced-27, who-25)
aux(induced-27, have-26)
ccomp(_-24, induced-27)
dobj(induced-27, me-28)
nsubj(give-30, me-28)
aux(give-30, to-29)
xcomp(induced-27, give-30)
prt(give-30, up-31)
poss(profession-33, my-32)
dobj(give-30, profession-33)
amod(me-38, Why-37)
dobj(observe-17, me-38)
nn(Pickersgill-41, Mr-40)
appos(me-38, Pickersgill-41)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBD did) (RB not)
            (VP (VB like)
              (NP (PRP it)))))))
    (. .) ('' '')))

nsubj(said-3, You-2)
root(ROOT-0, said-3)
mark(like-8, that-4)
nsubj(like-8, you-5)
aux(like-8, did-6)
neg(like-8, not-7)
ccomp(said-3, like-8)
dobj(like-8, it-9)

(ROOT
  (S
    (NP (NNP Mrs) (NNP Lascelles))
    (VP (VBD felt)
      (NP
        (NP (DT the) (NN force))
        (PP (IN of)
          (NP (DT the) (NN compliment)))))
    (. .)))

nn(Lascelles-2, Mrs-1)
nsubj(felt-3, Lascelles-2)
root(ROOT-0, felt-3)
det(force-5, the-4)
dobj(felt-3, force-5)
det(compliment-8, the-7)
prep_of(force-5, compliment-8)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBD said)
      (SBAR (RB just) (RB now) (IN that)
        (S
          (NP (PRP you))
          (VP (VBZ hated)
            (NP
              (NP (DT the) (NN name))
              (PP (IN of)
                (NP (NNP Pickersgill)))
              (: :)
              (SBARQ
                (WHADVP (WRB why))
                (SQ (VBP do)
                  (NP (PRP you))
                  (VP (VB call)
                    (NP (PRP yourself))
                    (ADVP (RB so))))
                (. ?)))))))
    ('' '')))

nsubj(said-3, You-2)
root(ROOT-0, said-3)
advmod(hated-8, just-4)
advmod(hated-8, now-5)
mark(hated-8, that-6)
nsubj(hated-8, you-7)
advcl(said-3, hated-8)
ccomp(said-3, hated-8)
det(name-10, the-9)
dobj(hated-8, name-10)
prep_of(name-10, Pickersgill-12)
advmod(call-17, why-14)
aux(call-17, do-15)
nsubj(call-17, you-16)
dep(name-10, call-17)
dobj(call-17, yourself-18)
advmod(call-17, so-19)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (PRP$ my) (NN smuggling) (NN name))
        (, ,)
        (NP (NNP Mrs) (NNP Lascelles))))
    (. .) ('' '')))

nsubj(name-6, It-2)
cop(name-6, was-3)
poss(name-6, my-4)
nn(name-6, smuggling-5)
root(ROOT-0, name-6)
nn(Lascelles-9, Mrs-8)
appos(name-6, Lascelles-9)

(ROOT
  (S (`` ``)
    (CC And)
    (SBAR (RB now) (IN that)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (VP (VBN left)
            (PP (IN off)
              (NP (NN smuggling)))))))
    (, ,)
    (ADVP (RB pray))
    (NP (WDT what))
    (VP (MD may)
      (VP (VB be)
        (NP
          (NP (DT the) (NN name))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP are)
                (S
                  (VP (TO to)
                    (VP (VB call)
                      (NP (PRP you))
                      (PP (IN by)))))))))))
    (. ?) ('' '')))

cc(name-16, And-2)
advmod(left-7, now-3)
mark(left-7, that-4)
nsubj(left-7, you-5)
aux(left-7, have-6)
advcl(name-16, left-7)
prep_off(left-7, smuggling-9)
advmod(what-12, pray-11)
nsubj(name-16, what-12)
aux(name-16, may-13)
cop(name-16, be-14)
det(name-16, the-15)
root(ROOT-0, name-16)
prep_by(call-20, name-16)
nsubj(are-18, we-17)
nsubj(call-20, we-17)
rcmod(name-16, are-18)
aux(call-20, to-19)
xcomp(are-18, call-20)
dobj(call-20, you-21)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP
          (VP (VB resume)
            (NP (PRP it))
            (SBAR (IN till)
              (S
                (NP (PRP I))
                (VP (VBP have) (RB not)
                  (ADVP (RB only))
                  (VP
                    (VP (VBN left)
                      (NP (DT this) (NN vessel)))
                    (, ,)
                    (CC but)
                    (VP (VBN shaken)
                      (NP (NNS hands))
                      (PP (IN with))))))))
          (, ,)
          (CC and)
          (VP (VB bid)
            (ADJP (JJ farewell)
              (PP (TO to)
                (NP (PRP$ my) (NNS companions))))))))
    (: ;)
    (CC and)
    (S
      (PP (IN by)
        (NP
          (NP (DT that) (NN time))
          (, ,)
          (NP (NNP Mrs) (NNP Lascelles))))
      (, ,)
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB be)
          (ADVP (RB away))
          (PP (IN from)
            (NP (PRP you))))))
    (. .) ('' '')))

nsubj(resume-5, I-2)
nsubj(bid-22, I-2)
aux(resume-5, can-3)
neg(resume-5, not-4)
root(ROOT-0, resume-5)
dobj(resume-5, it-6)
mark(left-12, till-7)
nsubj(left-12, I-8)
nsubj(shaken-17, I-8)
aux(left-12, have-9)
neg(left-12, not-10)
advmod(left-12, only-11)
advcl(resume-5, left-12)
det(vessel-14, this-13)
dobj(left-12, vessel-14)
advcl(resume-5, shaken-17)
conj_but(left-12, shaken-17)
dobj(shaken-17, hands-18)
prep(shaken-17, with-19)
conj_and(resume-5, bid-22)
acomp(bid-22, farewell-23)
poss(companions-26, my-25)
prep_to(farewell-23, companions-26)
det(time-31, that-30)
prep_by(be-38, time-31)
nn(Lascelles-34, Mrs-33)
appos(time-31, Lascelles-34)
nsubj(be-38, I-36)
aux(be-38, shall-37)
conj_and(resume-5, be-38)
prep_away_from(be-38, you-41)

(ROOT
  (S (`` ``)
    (S (CC But)
      (NP (PRP I))
      (VP (VBP 've)
        (NP (DT a) (JJ great) (NN curiosity)
          (S
            (VP (TO to)
              (VP (VB know)
                (NP (PRP it))))))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (DT a) (NN lady) (POS 's))
        (NN curiosity))
      (VP (MD must)
        (VP (VB be)
          (VP (VBN gratified)))))
    (. .)))

nsubj('ve-4, I-3)
root(ROOT-0, 've-4)
det(curiosity-7, a-5)
amod(curiosity-7, great-6)
dobj('ve-4, curiosity-7)
aux(know-9, to-8)
vmod(curiosity-7, know-9)
dobj(know-9, it-10)
det(lady-14, a-13)
poss(curiosity-16, lady-14)
nsubjpass(gratified-19, curiosity-16)
aux(gratified-19, must-17)
auxpass(gratified-19, be-18)
conj_and('ve-4, gratified-19)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must)
      (VP
        (VP (VB call)
          (PP (IN upon)
            (NP
              (NP (PRP me))
              (NP (DT some) (NN day)))))
        (, ,)
        (CC and)
        (VP (VB tell)
          (NP (PRP it))
          (NP (PRP me)))))
    (. .)))

nsubj(call-3, You-1)
nsubj(tell-10, You-1)
aux(call-3, must-2)
root(ROOT-0, call-3)
prep_upon(call-3, me-5)
det(day-7, some-6)
dep(me-5, day-7)
conj_and(call-3, tell-10)
iobj(tell-10, it-11)
dobj(tell-10, me-12)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ is)
      (NP (PRP$ my) (NN address)))
    (. .) ('' '')))

nsubj(address-4, Here-1)
cop(address-4, is-2)
poss(address-4, my-3)
root(ROOT-0, address-4)

(ROOT
  (S
    (NP (NNP Pickersgill))
    (VP (VBD received)
      (NP (DT the) (NN card))
      (PP (IN with)
        (NP
          (NP (DT a) (JJ low) (NN bow))
          (: :)
          (CC and)
          (NP (NNP Lord) (NNP B))
          (: --)))
      (S
        (VP (VBG coming)
          (PP (IN on)
            (NP
              (NP (NN deck))
              (, ,)
              (NP
                (NP (NNP Mrs) (NNP Lascelles))
                (VP (VBN hastened)
                  (S
                    (VP (TO to)
                      (VP (VB meet)
                        (NP (PRP him))))))))))))
    (. .)))

nsubj(received-2, Pickersgill-1)
root(ROOT-0, received-2)
det(card-4, the-3)
dobj(received-2, card-4)
det(bow-8, a-6)
amod(bow-8, low-7)
prep_with(received-2, bow-8)
nn(B-12, Lord-11)
prep_with(received-2, B-12)
conj_and(bow-8, B-12)
xcomp(received-2, coming-14)
prep_on(coming-14, deck-16)
nn(Lascelles-19, Mrs-18)
appos(deck-16, Lascelles-19)
vmod(Lascelles-19, hastened-20)
aux(meet-22, to-21)
xcomp(hastened-20, meet-22)
dobj(meet-22, him-23)

(ROOT
  (S
    (S
      (NP (DT The) (NN vessel))
      (VP (VBD was)
        (ADVP (RB now))
        (VP (VBG passing)
          (NP (DT the) (NN Bridge))
          (PP (IN at)
            (NP (DT the) (NNPS Needles))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN smuggler))
      (VP (VBD piloted)
        (NP (PRP her))
        (PP (IN on))))
    (. .)))

det(vessel-2, The-1)
nsubj(passing-5, vessel-2)
aux(passing-5, was-3)
advmod(passing-5, now-4)
root(ROOT-0, passing-5)
det(Bridge-7, the-6)
dobj(passing-5, Bridge-7)
det(Needles-10, the-9)
prep_at(passing-5, Needles-10)
det(smuggler-14, the-13)
nsubj(piloted-15, smuggler-14)
conj_and(passing-5, piloted-15)
dobj(piloted-15, her-16)
prep(piloted-15, on-17)

(ROOT
  (S
    (ADVP (RB As) (RB soon)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (UCP
              (ADJP (JJ clear))
              (CC and)
              (ADVP (RB well) (RB inside)))))))
    (, ,)
    (NP (DT the) (JJ whole) (NN party))
    (VP
      (VP (VBD went)
        (PRT (RP down))
        (PP (IN into)
          (NP
            (NP (DT the) (NN cabin))
            (, ,)
            (NP (NNP Lord) (NNP B)))))
      (: --)
      (S
        (VP (VBG requesting)
          (S
            (NP (NNP Pickersgill)
              (CC and)
              (NNP Corbett))
            (VP (TO to)
              (VP (VB join)
                (NP (PRP him))
                (PP (IN in)
                  (NP (DT a) (NN parting) (NN glass)))))))))
    (. .)))

advmod(soon-2, As-1)
advmod(went-14, soon-2)
mark(clear-6, as-3)
nsubj(clear-6, they-4)
cop(clear-6, were-5)
ccomp(soon-2, clear-6)
advmod(inside-9, well-8)
ccomp(soon-2, inside-9)
advmod(clear-6, inside-9)
conj_and(clear-6, inside-9)
det(party-13, the-11)
amod(party-13, whole-12)
nsubj(went-14, party-13)
root(ROOT-0, went-14)
prt(went-14, down-15)
det(cabin-18, the-17)
prep_into(went-14, cabin-18)
nn(B-21, Lord-20)
appos(cabin-18, B-21)
parataxis(went-14, requesting-23)
dobj(requesting-23, Pickersgill-24)
nsubj(join-28, Pickersgill-24)
dobj(requesting-23, Corbett-26)
conj_and(Pickersgill-24, Corbett-26)
nsubj(join-28, Corbett-26)
aux(join-28, to-27)
xcomp(requesting-23, join-28)
dobj(join-28, him-29)
det(glass-33, a-31)
nn(glass-33, parting-32)
prep_in(join-28, glass-33)

(ROOT
  (S
    (NP
      (NP (NNP Mr) (NNP Stewart))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD had)
            (VP (VBN received)
              (NP
                (NP (DT the) (NN account))
                (PP (IN of)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBD had)
                        (VP (VBN passed)
                          (PP (IN from)
                            (NP (NNP Cecilia)))))))))))))
      (, ,))
    (VP
      (VP (VBD was)
        (ADJP (RB very) (JJ attentive))
        (PP (TO to)
          (NP (NNP Pickersgill))))
      (CC and)
      (VP (VBD took)
        (NP
          (NP (DT an) (NN opportunity))
          (PP (IN of)
            (S
              (VP (VBG saying)
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (ADJP (JJ sorry))
                      (SBAR (IN that)
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (VP
                              (VP (VBN said))
                              (CC or)
                              (VP (VBN done)
                                (NP (NN anything))
                                (S
                                  (VP (TO to)
                                    (VP (VB annoy)
                                      (NP (PRP him)))))))))))))))))))
    (. .)))

nn(Stewart-2, Mr-1)
nsubj(received-6, Stewart-2)
nsubj(attentive-18, Stewart-2)
nsubj(took-22, Stewart-2)
aux(received-6, had-5)
rcmod(Stewart-2, received-6)
det(account-8, the-7)
dobj(received-6, account-8)
nsubj(passed-12, what-10)
aux(passed-12, had-11)
prepc_of(account-8, passed-12)
prep_from(passed-12, Cecilia-14)
cop(attentive-18, was-16)
advmod(attentive-18, very-17)
root(ROOT-0, attentive-18)
prep_to(attentive-18, Pickersgill-20)
conj_and(attentive-18, took-22)
det(opportunity-24, an-23)
dobj(took-22, opportunity-24)
prepc_of(opportunity-24, saying-26)
mark(sorry-30, that-27)
nsubj(sorry-30, he-28)
cop(sorry-30, was-29)
ccomp(saying-26, sorry-30)
mark(said-34, that-31)
nsubj(said-34, he-32)
nsubj(done-36, he-32)
aux(said-34, had-33)
ccomp(sorry-30, said-34)
ccomp(sorry-30, done-36)
conj_or(said-34, done-36)
dobj(done-36, anything-37)
aux(annoy-39, to-38)
vmod(done-36, annoy-39)
dobj(annoy-39, him-40)

(ROOT
  (S
    (S
      (NP (DT Every) (NN one))
      (VP (VBD recovered)
        (NP (PRP$ his) (NNS spirits))))
    (: :)
    (CC and)
    (S
      (NP (DT all))
      (VP (VBD was)
        (NP (JJ good) (NN humour)
          (CC and)
          (NN mirth))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (NNP Miss) (NNP Ossulton))
            (VP (VBD adhered)
              (NP (PRP$ her) (NN resolution))
              (PP (IN of)
                (S (RB not)
                  (VP (VBG quitting)
                    (NP (DT the) (NN cabin))
                    (SBAR (IN till)
                      (S
                        (NP (PRP she))
                        (VP (MD could)
                          (VP (VB quit)
                            (NP (DT the) (NN yacht))))))))))))))
    (. .)))

det(one-2, Every-1)
nsubj(recovered-3, one-2)
root(ROOT-0, recovered-3)
poss(spirits-5, his-4)
dobj(recovered-3, spirits-5)
nsubj(humour-11, all-8)
cop(humour-11, was-9)
amod(humour-11, good-10)
conj_and(recovered-3, humour-11)
conj_and(recovered-3, mirth-13)
conj_and(humour-11, mirth-13)
mark(adhered-18, because-15)
nn(Ossulton-17, Miss-16)
nsubj(adhered-18, Ossulton-17)
advcl(humour-11, adhered-18)
poss(resolution-20, her-19)
dobj(adhered-18, resolution-20)
neg(quitting-23, not-22)
prepc_of(adhered-18, quitting-23)
det(cabin-25, the-24)
dobj(quitting-23, cabin-25)
mark(quit-29, till-26)
nsubj(quit-29, she-27)
aux(quit-29, could-28)
advcl(quitting-23, quit-29)
det(yacht-31, the-30)
dobj(quit-29, yacht-31)

(ROOT
  (S
    (PP (IN At)
      (NP (CD ten) (RB o'clock)))
    (NP (DT the) (NN yacht))
    (VP (VBD was)
      (VP (VBN anchored)))
    (. .)))

prep_at(anchored-7, ten-2)
advmod(ten-2, o'clock-3)
det(yacht-5, the-4)
nsubjpass(anchored-7, yacht-5)
auxpass(anchored-7, was-6)
root(ROOT-0, anchored-7)

(ROOT
  (S
    (NP
      (NP (NNP Pickersgill))
      (SBAR
        (S
          (VP
            (VP (VBD took)
              (NP
                (NP (PRP$ his) (NN leave))
                (PP (IN of)
                  (NP (DT the) (JJ honourable) (NN company)))))
            (CC and)
            (VP (VBD went)
              (PP (IN in)
                (NP (PRP$ his) (NN boat)))
              (PP (IN with)
                (NP (PRP$ his) (NNS men)))))))
      (PRN (: ;)
        (CC and)
        (NP (NNP Lord) (NNP B))
        (: --)))
    (VP (VBD was)
      (ADVP (RB again))
      (PP (IN in)
        (NP
          (NP (NN possession))
          (PP (IN of)
            (NP (PRP$ his) (NN vessel)))))
      (, ,)
      (SBAR (IN although)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (NP
              (NP (RB not) (NN ship) (POS 's))
              (NN company))))))
    (. .)))

nsubj(was-22, Pickersgill-1)
rcmod(Pickersgill-1, took-2)
poss(leave-4, his-3)
dobj(took-2, leave-4)
det(company-8, the-6)
amod(company-8, honourable-7)
prep_of(leave-4, company-8)
rcmod(Pickersgill-1, went-10)
conj_and(took-2, went-10)
poss(boat-13, his-12)
prep_in(went-10, boat-13)
poss(men-16, his-15)
prep_with(went-10, men-16)
cc(B-20, and-18)
nn(B-20, Lord-19)
dep(Pickersgill-1, B-20)
root(ROOT-0, was-22)
advmod(was-22, again-23)
prep_in(was-22, possession-25)
poss(vessel-28, his-27)
prep_of(possession-25, vessel-28)
mark(had-32, although-30)
nsubj(had-32, he-31)
advcl(was-22, had-32)
neg(ship-34, not-33)
poss(company-36, ship-34)
dobj(had-32, company-36)

(ROOT
  (S
    (S
      (NP (NNP Maddox))
      (VP (VBD recovered)
        (NP (PRP$ his) (JJ usual) (NN tone))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN cook))
        (VP (VBN flourished)
          (NP (PRP$ his) (NN knife))
          (, ,)
          (S
            (VP (VBG swearing)
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (MD should)
                    (VP (VB like)
                      (S
                        (VP (TO to)
                          (VP (VB see)
                            (NP
                              (NP (DT the) (NN smuggler))
                              (SBAR
                                (WHNP (WP who))
                                (S
                                  (VP (MD would)
                                    (ADVP (RB again))
                                    (VP (VB order)
                                      (S
                                        (NP (PRP him))
                                        (VP (TO to)
                                          (VP (VB dress)
                                            (NP (NNS cutlets)))))))))))))))))))))
      (VP (VBZ _)
        (NP (DT a) (JJ l'ombre) (NNP Chinoise) (NNP _))))
    (. .)))

nsubj(recovered-2, Maddox-1)
root(ROOT-0, recovered-2)
poss(tone-5, his-3)
amod(tone-5, usual-4)
dobj(recovered-2, tone-5)
det(cook-9, the-8)
nsubj(_-31, cook-9)
vmod(cook-9, flourished-10)
poss(knife-12, his-11)
dobj(flourished-10, knife-12)
vmod(flourished-10, swearing-14)
mark(like-18, that-15)
nsubj(like-18, he-16)
nsubj(see-20, he-16)
aux(like-18, should-17)
ccomp(swearing-14, like-18)
aux(see-20, to-19)
xcomp(like-18, see-20)
det(smuggler-22, the-21)
dobj(see-20, smuggler-22)
nsubj(order-26, smuggler-22)
aux(order-26, would-24)
advmod(order-26, again-25)
rcmod(smuggler-22, order-26)
dobj(order-26, him-27)
nsubj(dress-29, him-27)
aux(dress-29, to-28)
xcomp(order-26, dress-29)
dobj(dress-29, cutlets-30)
conj_and(recovered-2, _-31)
det(_-35, a-32)
amod(_-35, l'ombre-33)
nn(_-35, Chinoise-34)
dobj(_-31, _-35)

(ROOT
  (S
    (NP (DT The) (NN yacht))
    (VP (VBD had)
      (VP (VBN remained)
        (NP (CD three) (NNS days))
        (PP (IN at)
          (NP
            (NP (NNP Cowes))
            (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (NNP Lord) (NNP B))
                (: --)
                (VP (VBD received)
                  (NP (DT a) (NN letter))
                  (PP (IN from)
                    (NP (NNP Pickersgill)))
                  (, ,)
                  (S
                    (VP (VBG stating)
                      (SBAR (IN that)
                        (S
                          (NP
                            (NP (DT the) (NNS men))
                            (PP (IN of)
                              (NP (PRP$ his) (NN vessel))))
                          (VP
                            (VP (VBD had)
                              (VP (VBN been)
                                (VP (VBN captured))))
                            (, ,)
                            (CC and)
                            (VP (MD would)
                              (VP (VB be)
                                (VP (VBN condemned))))))))))))))
        (, ,)
        (PP (IN in)
          (S
            (NP
              (NP (NN consequence))
              (PP (IN of)
                (NP (PRP$ their))))
            (VP (VBG having)
              (S
                (NP
                  (NP (DT the) (NNS gentlemen))
                  (PP (IN on)
                    (NP (NN board)))
                  (, ,)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBD were)
                        (VP (VBN bound)
                          (S
                            (VP (TO to)
                              (VP (VB appear)
                                (PP (IN against)
                                  (NP (PRP them))))))))))
                  (, ,))
                (VP (TO to)
                  (VP (VB prove)
                    (SBAR (IN that)
                      (S
                        (NP (PRP they))
                        (VP (VBD had)
                          (VP (VBN sunk)
                            (NP (DT the) (NN brandy))))))))))))))
    (. .)))

det(yacht-2, The-1)
nsubj(remained-4, yacht-2)
aux(remained-4, had-3)
root(ROOT-0, remained-4)
num(days-6, three-5)
tmod(remained-4, days-6)
prep_at(remained-4, Cowes-8)
advmod(received-14, when-10)
nn(B-12, Lord-11)
nsubj(received-14, B-12)
rcmod(Cowes-8, received-14)
det(letter-16, a-15)
dobj(received-14, letter-16)
prep_from(received-14, Pickersgill-18)
vmod(received-14, stating-20)
mark(captured-29, that-21)
det(men-23, the-22)
nsubjpass(captured-29, men-23)
nsubjpass(condemned-34, men-23)
poss(vessel-26, his-25)
prep_of(men-23, vessel-26)
aux(captured-29, had-27)
auxpass(captured-29, been-28)
ccomp(stating-20, captured-29)
aux(condemned-34, would-32)
auxpass(condemned-34, be-33)
ccomp(stating-20, condemned-34)
conj_and(captured-29, condemned-34)
nsubj(having-40, consequence-37)
prep_of(consequence-37, their-39)
prepc_in(remained-4, having-40)
det(gentlemen-42, the-41)
dobj(having-40, gentlemen-42)
nsubjpass(bound-48, gentlemen-42)
nsubj(appear-50, gentlemen-42)
nsubj(prove-55, gentlemen-42)
prep_on(gentlemen-42, board-44)
auxpass(bound-48, were-47)
rcmod(gentlemen-42, bound-48)
aux(appear-50, to-49)
xcomp(bound-48, appear-50)
prep_against(appear-50, them-52)
aux(prove-55, to-54)
ccomp(having-40, prove-55)
xcomp(having-40, prove-55)
mark(sunk-59, that-56)
nsubj(sunk-59, they-57)
aux(sunk-59, had-58)
ccomp(prove-55, sunk-59)
det(brandy-61, the-60)
dobj(sunk-59, brandy-61)

(ROOT
  (S
    (NP (NNP Lord) (NNP B))
    (: --)
    (VP (VBD paid)
      (SBAR
        (S
          (NP
            (NP (PDT all) (DT the) (NNS recognisances))
            (, ,)
            (CC and)
            (NP (DT the) (NNS men)))
          (VP (VBD were)
            (VP (VBN liberated)
              (SBAR (IN for)
                (S
                  (VP (VBP want)
                    (PP (IN of)
                      (NP (NN evidence)))))))))))
    (. .)))

nn(B-2, Lord-1)
nsubj(paid-4, B-2)
root(ROOT-0, paid-4)
predet(recognisances-7, all-5)
det(recognisances-7, the-6)
nsubjpass(liberated-13, recognisances-7)
det(men-11, the-10)
conj_and(recognisances-7, men-11)
nsubjpass(liberated-13, men-11)
auxpass(liberated-13, were-12)
ccomp(paid-4, liberated-13)
mark(want-15, for-14)
advcl(liberated-13, want-15)
prep_of(want-15, evidence-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP
        (NP
          (QP (RB about) (CD two))
          (NNS years))
        (PP (IN after)
          (NP (DT this)))
        (SBAR (IN that)
          (S
            (NP
              (NP (NNP Cecilia) (NNP Ossulton))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD was)
                    (VP (VBG sitting)
                      (PP (IN at)
                        (NP (PRP$ her) (NN work-table)))
                      (PP (IN in)
                        (NP
                          (NP (JJ deep) (VBG mourning))
                          (PP (IN for)
                            (NP (PRP$ her) (NN aunt)))))))))
              (, ,))
            (VP (VBD was)
              (VP (VBN presented)
                (PP (IN with)
                  (NP (DT a) (NN letter)))
                (PP (IN by)
                  (NP (DT the) (NN butler)))))))))
    (. .)))

nsubj(years-5, It-1)
cop(years-5, was-2)
quantmod(two-4, about-3)
num(years-5, two-4)
root(ROOT-0, years-5)
prep_after(years-5, this-7)
mark(presented-26, that-8)
nn(Ossulton-10, Cecilia-9)
nsubj(sitting-14, Ossulton-10)
nsubjpass(presented-26, Ossulton-10)
aux(sitting-14, was-13)
rcmod(Ossulton-10, sitting-14)
poss(work-table-17, her-16)
prep_at(sitting-14, work-table-17)
prep_in(sitting-14, deep-19)
amod(deep-19, mourning-20)
poss(aunt-23, her-22)
prep_for(deep-19, aunt-23)
auxpass(presented-26, was-25)
ccomp(years-5, presented-26)
det(letter-29, a-28)
prep_with(presented-26, letter-29)
det(butler-32, the-31)
agent(presented-26, butler-32)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (PP (IN from)
        (NP
          (NP (PRP$ her) (NN friend) (NNP Mrs) (NNPS Lascelles))
          (, ,)
          (VP (VBG informing)
            (NP (PRP her))
            (SBAR (IN that)
              (S
                (NP (PRP she))
                (VP (VBD was)
                  (VP
                    (VP (VBN married)
                      (ADVP (RB again))
                      (PP (TO to)
                        (NP (DT a) (NNP Mr) (NNP Davenant))))
                    (, ,)
                    (CC and)
                    (VP (VBN intended)
                      (S
                        (VP (TO to)
                          (VP (VB pay)
                            (NP (PRP her))))))
                    (, ,)
                    (NP
                      (NP (DT a) (JJ short) (NN visit))
                      (PP (IN on)
                        (NP
                          (NP (PRP$ her) (NN way))
                          (PP (TO to)
                            (NP (DT the) (NN Continent))))))))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
poss(Lascelles-7, her-4)
nn(Lascelles-7, friend-5)
nn(Lascelles-7, Mrs-6)
prep_from(was-2, Lascelles-7)
vmod(Lascelles-7, informing-9)
dobj(informing-9, her-10)
mark(married-14, that-11)
nsubjpass(married-14, she-12)
nsubjpass(intended-22, she-12)
nsubj(pay-24, she-12)
auxpass(married-14, was-13)
ccomp(informing-9, married-14)
advmod(married-14, again-15)
det(Davenant-19, a-17)
nn(Davenant-19, Mr-18)
prep_to(married-14, Davenant-19)
ccomp(informing-9, intended-22)
conj_and(married-14, intended-22)
aux(pay-24, to-23)
xcomp(intended-22, pay-24)
dobj(pay-24, her-25)
det(visit-29, a-27)
amod(visit-29, short-28)
ccomp(informing-9, visit-29)
conj_and(married-14, visit-29)
dobj(married-14, visit-29)
poss(way-32, her-31)
prep_on(visit-29, way-32)
det(Continent-35, the-34)
prep_to(way-32, Continent-35)

(ROOT
  (S
    (S
      (NP (NNP Mr)
        (CC and)
        (NNP Mrs) (NNP Davenant))
      (VP (VBD arrived)
        (NP (DT the) (JJ next) (NN day))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN latter))
          (VP (VBD introduced)
            (NP (PRP$ her) (NN husband)))))
      (, ,)
      (NP (PRP she))
      (VP (VBD said)
        (PP (TO to)
          (NP (NNP Miss) (NNP Ossulton)))
        (, ,) (`` ``)
        (S
          (S
            (VP
              (VP (VB Look))
              (, ,)
              (NP
                (NP (NNP Cecilia))
                (, ,)
                (ADJP (RB dear))
                (, ,))))
          (CC and)
          (S
            (VP (VB tell)
              (NP (PRP me))
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP have)
                    (ADVP (RB ever))
                    (VP (VBN seen)
                      (S
                        (NP (NNP Davenant))
                        (ADVP (RB before))))))))))))
    (. .) ('' '')))

nn(Davenant-4, Mr-1)
conj_and(Mr-1, Mrs-3)
nn(Davenant-4, Mrs-3)
nsubj(arrived-5, Davenant-4)
root(ROOT-0, arrived-5)
det(day-8, the-6)
amod(day-8, next-7)
tmod(arrived-5, day-8)
advmod(introduced-14, when-11)
det(latter-13, the-12)
nsubj(introduced-14, latter-13)
advcl(said-19, introduced-14)
poss(husband-16, her-15)
dobj(introduced-14, husband-16)
nsubj(said-19, she-18)
conj_and(arrived-5, said-19)
nn(Ossulton-22, Miss-21)
prep_to(said-19, Ossulton-22)
dep(said-19, Look-25)
dobj(Look-25, Cecilia-27)
amod(Cecilia-27, dear-29)
dep(said-19, tell-32)
conj_and(Look-25, tell-32)
dobj(tell-32, me-33)
mark(seen-38, if-34)
nsubj(seen-38, you-35)
aux(seen-38, have-36)
advmod(seen-38, ever-37)
advcl(tell-32, seen-38)
dep(seen-38, Davenant-39)
advmod(Davenant-39, before-40)

(ROOT
  (S
    (S
      (NP (NNP Cecilia))
      (VP (VBD looked)
        (ADVP (RB earnestly))
        (: :) (`` ``)
        (S
          (NP (PRP I))
          (VP (VBP have))))
      (, ,)
      (ADVP (RB indeed)))
    (, ,) ('' '')
    (PRN
      (S
        (VP (VBN cried)
          (NP (PRP she))
          (PP (IN at)
            (NP (JJ last)))
          (, ,)
          (S
            (VP (VBG extending)
              (NP (PRP$ her) (NN hand))
              (PP (IN with)
                (NP (NN warmth))))))))
    (: ;) (`` ``)
    (CC and)
    (S
      (NP (JJ happy))
      (VP (VBP am)
        (S
          (NP (PRP I))
          (VP (TO to)
            (VP (VB meet)
              (PP (IN with)
                (NP (PRP him)))
              (ADVP (RB again)))))))
    (. .) ('' '')))

nsubj(looked-2, Cecilia-1)
root(ROOT-0, looked-2)
advmod(looked-2, earnestly-3)
nsubj(have-7, I-6)
ccomp(looked-2, have-7)
advmod(looked-2, indeed-9)
dep(looked-2, cried-12)
dobj(cried-12, she-13)
prep_at(cried-12, last-15)
vmod(cried-12, extending-17)
poss(hand-19, her-18)
dobj(extending-17, hand-19)
prep_with(extending-17, warmth-21)
nsubj(am-26, happy-25)
conj_and(looked-2, am-26)
dobj(am-26, I-27)
nsubj(meet-29, I-27)
aux(meet-29, to-28)
xcomp(am-26, meet-29)
prep_with(meet-29, him-31)
advmod(meet-29, again-32)

(ROOT
  (S
    (PP (IN For)
      (PP (IN in)
        (NP (NNP Mr) (NNP Davenant))))
    (NP (PRP she))
    (VP (VBD recognised)
      (S
        (S
          (NP (PRP$ her) (JJ old) (NN acquaintance))
          (NP
            (NP (DT the) (NN captain))
            (PP (IN of)
              (NP (DT the) (NNP _) (NNP Happy-go-lucky) (NNP _)))))
        (, ,)
        (S
          (NP (NNP Jack) (NNP Pickersgill))
          (NP (DT the) (NN smuggler)))))
    (. .)))

prep(recognised-6, For-1)
pcomp(For-1, in-2)
nn(Davenant-4, Mr-3)
pobj(in-2, Davenant-4)
nsubj(recognised-6, she-5)
root(ROOT-0, recognised-6)
poss(acquaintance-9, her-7)
amod(acquaintance-9, old-8)
dep(captain-11, acquaintance-9)
det(captain-11, the-10)
dep(recognised-6, captain-11)
det(_-16, the-13)
nn(_-16, _-14)
nn(_-16, Happy-go-lucky-15)
prep_of(captain-11, _-16)
nn(Pickersgill-19, Jack-18)
dep(smuggler-21, Pickersgill-19)
det(smuggler-21, the-20)
parataxis(captain-11, smuggler-21)

(ROOT
  (NP (DT THE) (NN END) (. .)))

det(END-2, THE-1)
root(ROOT-0, END-2)

