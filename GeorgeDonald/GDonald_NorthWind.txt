(ROOT
  (S
    (NP
      (NP (NNP AT) (NNP THE) (NNP BACK))
      (PP (IN OF)
        (NP (DT THE) (NNP NORTH))))
    (VP (VBD WIND)
      (PP (IN By)
        (NP
          (NP (NNP George) (NNP Mac) (NNP Donald) (NNP Author))
          (PP (IN of)
            (NP (`` ``)
              (VP
                (NP (NNS Dealings))
                (PP (IN with)
                  (NP (NNP Fairies))))
              (, ,) ('' '')
              (NP
                (NP (`` ``) (NNP Ranald) (CD Bannerman) (, ,) ('' ''))
                (NP (FW etc.))
                (, ,) (FW etc.)))))))
    (. .)))

nn(BACK-3, AT-1)
nn(BACK-3, THE-2)
nsubj(WIND-7, BACK-3)
det(NORTH-6, THE-5)
prep_of(BACK-3, NORTH-6)
root(ROOT-0, WIND-7)
nn(Author-12, George-9)
nn(Author-12, Mac-10)
nn(Author-12, Donald-11)
prep_by(WIND-7, Author-12)
dep(Ranald-21, Dealings-15)
prep_with(Dealings-15, Fairies-17)
prep_of(Author-12, Ranald-21)
num(Ranald-21, Bannerman-22)
nn(Ranald-21, etc.-25)
dep(Ranald-21, etc.-27)

(ROOT
  (S
    (VP (VB CHAPTER)
      (NP (PRP I)))
    (. .)))

root(ROOT-0, CHAPTER-1)
dobj(CHAPTER-1, I-2)

(ROOT
  (S
    (NP (DT THE) (JJ HAY-LOFT) (NN I))
    (VP (VBP HAVE)
      (VP (VBN been)
        (VP (VBN asked)
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP you))
                (PP (IN about)
                  (NP
                    (NP (DT the) (NN back))
                    (PP (IN of)
                      (NP (DT the) (NN north) (NN wind)))))))))))
    (. .)))

det(I-3, THE-1)
amod(I-3, HAY-LOFT-2)
nsubjpass(asked-6, I-3)
nsubj(tell-8, I-3)
aux(asked-6, HAVE-4)
auxpass(asked-6, been-5)
root(ROOT-0, asked-6)
aux(tell-8, to-7)
xcomp(asked-6, tell-8)
dobj(tell-8, you-9)
det(back-12, the-11)
prep_about(tell-8, back-12)
det(wind-16, the-14)
nn(wind-16, north-15)
prep_of(back-12, wind-16)

(ROOT
  (S
    (NP (DT An) (JJ old) (JJ Greek) (NN writer))
    (VP (VBZ mentions)
      (NP
        (NP (DT a) (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBD lived)
                (ADVP (RB there)))
              (, ,)
              (CC and)
              (VP (VBD were)
                (ADJP (RB so) (JJ comfortable)
                  (SBAR (IN that)
                    (S
                      (NP (PRP they))
                      (VP (MD could) (RB not)
                        (VP (VB bear)
                          (NP (PRP it))
                          (ADVP (DT any) (RBR longer))))))))
              (, ,)
              (CC and)
              (VP (VBD drowned)
                (NP (PRP themselves))))))))
    (. .)))

det(writer-4, An-1)
amod(writer-4, old-2)
amod(writer-4, Greek-3)
nsubj(mentions-5, writer-4)
root(ROOT-0, mentions-5)
det(people-7, a-6)
dobj(mentions-5, people-7)
nsubj(lived-9, people-7)
nsubj(comfortable-15, people-7)
nsubj(drowned-26, people-7)
rcmod(people-7, lived-9)
advmod(lived-9, there-10)
cop(comfortable-15, were-13)
advmod(comfortable-15, so-14)
rcmod(people-7, comfortable-15)
conj_and(lived-9, comfortable-15)
mark(bear-20, that-16)
nsubj(bear-20, they-17)
aux(bear-20, could-18)
neg(bear-20, not-19)
ccomp(comfortable-15, bear-20)
dobj(bear-20, it-21)
dep(longer-23, any-22)
advmod(bear-20, longer-23)
rcmod(people-7, drowned-26)
conj_and(lived-9, drowned-26)
dobj(drowned-26, themselves-27)

(ROOT
  (S
    (NP (PRP$ My) (NN story))
    (VP (VBZ is) (RB not)
      (NP (DT the) (JJ same))
      (PP (IN as)
        (NP (PRP$ his))))
    (. .)))

poss(story-2, My-1)
nsubj(same-6, story-2)
cop(same-6, is-3)
neg(same-6, not-4)
det(same-6, the-5)
root(ROOT-0, same-6)
prep_as(same-6, his-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB think)
        (SBAR
          (S
            (NP (NNP Herodotus))
            (VP (VBD had)
              (VP (VBN got)
                (NP
                  (NP (DT the) (JJ right) (NN account))
                  (PP (IN of)
                    (NP (DT the) (NN place))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, not-3)
root(ROOT-0, think-4)
nsubj(got-7, Herodotus-5)
aux(got-7, had-6)
ccomp(think-4, got-7)
det(account-10, the-8)
amod(account-10, right-9)
dobj(got-7, account-10)
det(place-13, the-12)
prep_of(account-10, place-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP (PRP you))
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (PRP it))
                  (VP (VBD fared)
                    (PP (IN with)
                      (NP
                        (NP (DT a) (NN boy))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBD went)
                              (ADVP (RB there)))))))))))))))
    (. .)))

nsubj(going-3, I-1)
nsubj(tell-5, I-1)
aux(going-3, am-2)
root(ROOT-0, going-3)
aux(tell-5, to-4)
xcomp(going-3, tell-5)
dobj(tell-5, you-6)
advmod(fared-9, how-7)
nsubj(fared-9, it-8)
dep(tell-5, fared-9)
det(boy-12, a-11)
prep_with(fared-9, boy-12)
nsubj(went-14, boy-12)
rcmod(boy-12, went-14)
advmod(went-14, there-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD lived)
        (PP (IN in)
          (NP (DT a) (JJ low) (NN room)))
        (PP (IN over)
          (NP (DT a) (NN coach-house)))))
    (: ;)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD was) (RB not)
        (PP (IN by)
          (NP
            (NP (DT any) (NN means))
            (PP (IN at)
              (NP
                (NP (DT the) (NN back))
                (PP (IN of)
                  (NP (DT the) (NN north) (NN wind)))))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP$ his) (NN mother))
            (ADVP (RB very) (RB well))
            (VP (VBD knew))))))
    (. .)))

nsubj(lived-2, He-1)
root(ROOT-0, lived-2)
det(room-6, a-4)
amod(room-6, low-5)
prep_in(lived-2, room-6)
det(coach-house-9, a-8)
prep_over(lived-2, coach-house-9)
nsubj(was-13, that-12)
conj_and(lived-2, was-13)
neg(was-13, not-14)
det(means-17, any-16)
prep_by(was-13, means-17)
det(back-20, the-19)
prep_at(means-17, back-20)
det(wind-24, the-22)
nn(wind-24, north-23)
prep_of(back-20, wind-24)
mark(knew-31, as-26)
poss(mother-28, his-27)
nsubj(knew-31, mother-28)
advmod(well-30, very-29)
advmod(knew-31, well-30)
advcl(was-13, knew-31)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (CD one)))
      (NP
        (NP (NN side))
        (PP (IN of)
          (NP (DT the) (NN room))))
      (VP (VBD was)
        (VP (VBN built)
          (ADVP (RB only))
          (PP (IN of)
            (NP (NNS boards))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS boards))
      (VP (VBD were)
        (ADJP (RB so) (JJ old))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD might)
              (VP (VB run)
                (NP (DT a) (NN penknife))
                (PP (IN through)
                  (PP (IN into)
                    (NP (DT the) (NN north) (NN wind))))))))))
    (. .)))

prep_for(built-8, one-2)
nsubjpass(built-8, side-3)
det(room-6, the-5)
prep_of(side-3, room-6)
auxpass(built-8, was-7)
root(ROOT-0, built-8)
advmod(built-8, only-9)
prep_of(built-8, boards-11)
det(boards-15, the-14)
nsubj(old-18, boards-15)
cop(old-18, were-16)
advmod(old-18, so-17)
conj_and(built-8, old-18)
mark(run-22, that-19)
nsubj(run-22, you-20)
aux(run-22, might-21)
ccomp(old-18, run-22)
det(penknife-24, a-23)
dobj(run-22, penknife-24)
prep(run-22, through-25)
pcomp(through-25, into-26)
det(wind-29, the-27)
nn(wind-29, north-28)
pobj(into-26, wind-29)

(ROOT
  (S (CC And)
    (RB then)
    (VP (VBP let)
      (S
        (NP (PRP them))
        (VP (VB settle)
          (PP (IN between)
            (NP
              (NP (PRP them))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (NP (DT the) (JJR sharper))))))))))
    (. !)))

cc(let-3, And-1)
advmod(let-3, then-2)
root(ROOT-0, let-3)
nsubj(settle-5, them-4)
ccomp(let-3, settle-5)
prep_between(settle-5, them-7)
nsubj(sharper-11, them-7)
cop(sharper-11, was-9)
det(sharper-11, the-10)
rcmod(them-7, sharper-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBD pulled)
                  (NP (PRP it))
                  (PRT (RP out))
                  (ADVP (RB again)))))
            (NP (DT the) (NN wind))
            (VP (MD would)
              (VP (VB be)
                (SBAR (IN after)
                  (S
                    (NP (PRP it))
                    (VP (VBP like)
                      (NP (DT a) (NN cat))
                      (PP (IN after)
                        (NP (DT a) (NN mouse))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD would)
        (VP (VB know)
          (ADVP (RB soon) (RB enough)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBD were) (RB not)
                  (PP (IN at)
                    (NP
                      (NP (DT the) (NN back))
                      (PP (IN of)
                        (NP (DT the) (NN north) (NN wind))))))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
mark(be-13, that-3)
advmod(pulled-6, when-4)
nsubj(pulled-6, you-5)
advcl(be-13, pulled-6)
dobj(pulled-6, it-7)
prt(pulled-6, out-8)
advmod(pulled-6, again-9)
det(wind-11, the-10)
nsubj(be-13, wind-11)
aux(be-13, would-12)
ccomp(know-2, be-13)
mark(like-16, after-14)
nsubj(like-16, it-15)
advcl(be-13, like-16)
det(cat-18, a-17)
dobj(like-16, cat-18)
det(mouse-21, a-20)
prep_after(like-16, mouse-21)
nsubj(know-26, you-24)
aux(know-26, would-25)
conj_and(know-2, know-26)
advmod(enough-28, soon-27)
advmod(know-26, enough-28)
nsubj(were-30, you-29)
dep(enough-28, were-30)
neg(were-30, not-31)
det(back-34, the-33)
prep_at(were-30, back-34)
det(wind-38, the-36)
nn(wind-38, north-37)
prep_of(back-34, wind-38)

(ROOT
  (S
    (S
      (ADVP (RB Still))
      (, ,)
      (NP (DT this) (NN room))
      (VP (VBD was) (RB not)
        (ADJP (RB very) (JJ cold))
        (, ,)
        (PP (IN except)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (DT the) (NN north) (NN wind))
              (VP (VBD blew)
                (ADJP
                  (ADVP (JJR stronger) (IN than))
                  (JJ usual))))))))
    (: :)
    (S
      (NP
        (NP (DT the) (NN room))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP have)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (PP (IN with)
                      (NP (RB now))))))))))
      (VP (VBD was)
        (ADVP (RB always))
        (ADJP (JJ cold))
        (, ,)
        (PP (IN except) (IN in)
          (NP
            (NP (NN summer))
            (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (DT the) (NN sun))
                (VP (VBD took)
                  (NP (DT the) (NN matter))
                  (PP (IN into)
                    (NP (PRP$ his) (JJ own) (NNS hands))))))))))
    (. .)))

advmod(cold-8, Still-1)
det(room-4, this-3)
nsubj(cold-8, room-4)
cop(cold-8, was-5)
neg(cold-8, not-6)
advmod(cold-8, very-7)
root(ROOT-0, cold-8)
advmod(blew-15, when-11)
det(wind-14, the-12)
nn(wind-14, north-13)
nsubj(blew-15, wind-14)
prepc_except(cold-8, blew-15)
dep(than-17, stronger-16)
advmod(usual-18, than-17)
acomp(blew-15, usual-18)
det(room-21, the-20)
nsubj(cold-30, room-21)
nsubj(have-23, I-22)
nsubj(do-25, I-22)
rcmod(room-21, have-23)
aux(do-25, to-24)
xcomp(have-23, do-25)
prep(do-25, with-26)
pobj(with-26, now-27)
cop(cold-30, was-28)
advmod(cold-30, always-29)
parataxis(cold-8, cold-30)
dep(cold-30, except-32)
prep_in(cold-30, summer-34)
tmod(took-39, summer-34)
advmod(took-39, when-36)
det(sun-38, the-37)
nsubj(took-39, sun-38)
rcmod(summer-34, took-39)
det(matter-41, the-40)
dobj(took-39, matter-41)
poss(hands-45, his-43)
amod(hands-45, own-44)
prep_into(took-39, hands-45)

(ROOT
  (S
    (ADVP (RB Indeed))
    (, ,)
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (ADJP (JJ sure))
      (SBAR (IN whether)
        (S
          (NP (PRP I))
          (VP (MD ought)
            (S
              (VP (TO to)
                (VP (VB call)
                  (NP (PRP it))
                  (NP
                    (NP (DT a) (NN room))
                    (PP (IN at)
                      (NP (DT all))))))
              (: ;)
              (SBAR (IN for)
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (ADVP (RB just))
                    (NP
                      (NP (DT a) (NN loft))
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (PRP they))
                          (VP (VBD kept)
                            (NP
                              (NP (NN hay)
                                (CC and)
                                (NN straw))
                              (CC and)
                              (NP (NNS oats)))
                            (PP (IN for)
                              (NP (DT the) (NNS horses)))))))))))))))
    (. .)))

advmod(sure-6, Indeed-1)
nsubj(sure-6, I-3)
cop(sure-6, am-4)
neg(sure-6, not-5)
root(ROOT-0, sure-6)
mark(ought-9, whether-7)
nsubj(ought-9, I-8)
nsubj(call-11, I-8)
ccomp(sure-6, ought-9)
aux(call-11, to-10)
xcomp(ought-9, call-11)
iobj(call-11, it-12)
det(room-14, a-13)
dobj(call-11, room-14)
prep_at(room-14, all-16)
mark(loft-23, for-18)
nsubj(loft-23, it-19)
cop(loft-23, was-20)
advmod(loft-23, just-21)
det(loft-23, a-22)
parataxis(call-11, loft-23)
advmod(kept-26, where-24)
nsubj(kept-26, they-25)
rcmod(loft-23, kept-26)
dobj(kept-26, hay-27)
dobj(kept-26, straw-29)
conj_and(hay-27, straw-29)
dobj(kept-26, oats-31)
conj_and(hay-27, oats-31)
det(horses-34, the-33)
prep_for(kept-26, horses-34)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (RB little))
        (VP
          (VP (VBZ Diamond))
          (: --)
          (CC but)
          (VP (VBP stop)))))
    (: :)
    (NP (PRP I))
    (VP (MD must)
      (VP (VB tell)
        (NP (PRP you))
        (SBAR (IN that)
          (S
            (S
              (NP
                (NP (PRP$ his) (NN father))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD was)
                      (NP (DT a) (NN coachman)))))
                (, ,))
              (VP (VBD had)
                (VP (VBN named)
                  (NP (PRP him))
                  (PP (IN after)
                    (NP (DT a) (JJ favourite) (NN horse))))))
            (, ,)
            (CC and)
            (S
              (NP (PRP$ his) (NN mother))
              (VP (VBD had)
                (VP (VBN had)
                  (NP (DT no) (NN objection)))))
            (: :)
            (S
              (LST (: --))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (JJ little) (NNP Diamond))
                  (, ,)
                  (ADVP (RB then))
                  (, ,)
                  (VP (VBD lay)
                    (ADVP (RB there))
                    (PP (IN in)
                      (NP (NN bed))))))
              (, ,)
              (NP (PRP he))
              (VP (MD could)
                (VP (VB hear)
                  (NP (DT the) (NNS horses))
                  (PP (IN under)
                    (S
                      (NP (PRP him))
                      (VP
                        (VP (VBG munching)
                          (PRT (RP away))
                          (PP (IN in)
                            (NP (DT the) (NN dark))))
                        (, ,)
                        (CC or)
                        (VP (VBG moving)
                          (ADVP (RB sleepily))
                          (PP (IN in)
                            (NP (PRP$ their) (NNS dreams))))))))))))))
    (. .)))

cc(tell-11, And-1)
advmod(Diamond-4, when-2)
nsubj(Diamond-4, little-3)
nsubj(stop-7, little-3)
advcl(tell-11, Diamond-4)
conj_but(Diamond-4, stop-7)
advcl(tell-11, stop-7)
nsubj(tell-11, I-9)
aux(tell-11, must-10)
root(ROOT-0, tell-11)
dobj(tell-11, you-12)
mark(named-23, that-13)
poss(father-15, his-14)
nsubj(coachman-20, father-15)
nsubj(named-23, father-15)
cop(coachman-20, was-18)
det(coachman-20, a-19)
rcmod(father-15, coachman-20)
aux(named-23, had-22)
ccomp(tell-11, named-23)
dobj(named-23, him-24)
det(horse-28, a-26)
amod(horse-28, favourite-27)
prep_after(named-23, horse-28)
poss(mother-32, his-31)
nsubj(had-34, mother-32)
aux(had-34, had-33)
ccomp(tell-11, had-34)
conj_and(named-23, had-34)
neg(objection-36, no-35)
dobj(had-34, objection-36)
advmod(lay-45, when-39)
amod(Diamond-41, little-40)
nsubj(lay-45, Diamond-41)
advmod(lay-45, then-43)
advcl(hear-52, lay-45)
advmod(lay-45, there-46)
prep_in(lay-45, bed-48)
nsubj(hear-52, he-50)
aux(hear-52, could-51)
ccomp(tell-11, hear-52)
conj_and(named-23, hear-52)
parataxis(named-23, hear-52)
det(horses-54, the-53)
dobj(hear-52, horses-54)
nsubj(munching-57, him-56)
nsubj(moving-64, him-56)
prepc_under(hear-52, munching-57)
prt(munching-57, away-58)
det(dark-61, the-60)
prep_in(munching-57, dark-61)
prepc_under(hear-52, moving-64)
conj_or(munching-57, moving-64)
advmod(moving-64, sleepily-65)
poss(dreams-68, their-67)
prep_in(moving-64, dreams-68)

(ROOT
  (S
    (S
      (SBAR (IN For)
        (S
          (NP
            (NP (NNP Diamond) (POS 's))
            (NN father))
          (VP (VBD had)
            (VP (VBN built)
              (S
                (NP (PRP him))
                (NP
                  (NP (DT a) (NN bed))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN loft))
                      (PP (IN with)
                        (NP (NNS boards)))))))))))
      (NP (DT all))
      (VP (VBP round)
        (NP (PRP it))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP they))
            (VP (VBD had)
              (NP
                (ADJP (RB so) (JJ little))
                (NN room))
              (PP (IN in)
                (NP (PRP$ their) (JJ own) (NN end)))
              (PP (IN over)
                (NP (DT the) (NN coach-house))))))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (NNP Diamond) (POS 's))
        (NN father))
      (VP (VBD put)
        (NP (JJ old) (NNP Diamond))
        (PP (IN in)
          (NP (DT the) (NN stall)))
        (PP (IN under)
          (NP (DT the) (NN bed)))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP he))
            (VP
              (VP (VBD was)
                (NP (DT a) (JJ quiet) (NN horse)))
              (, ,)
              (CC and)
              (VP (VBD did) (RB not)
                (VP (VB go)
                  (S
                    (VP (TO to)
                      (VP (VB sleep)
                        (NP (NN standing)))))))
              (, ,)
              (CC but)
              (VP (VBD lay)
                (PRT (RP down))
                (PP (IN like)
                  (NP (DT a) (JJ reasonable) (NN creature)))))))))
    (. .)))

mark(built-6, For-1)
poss(father-4, Diamond-2)
nsubj(built-6, father-4)
aux(built-6, had-5)
advcl(round-16, built-6)
nsubj(bed-9, him-7)
det(bed-9, a-8)
xcomp(built-6, bed-9)
det(loft-12, the-11)
prep_in(bed-9, loft-12)
prep_with(loft-12, boards-14)
nsubj(round-16, all-15)
root(ROOT-0, round-16)
dobj(round-16, it-17)
mark(had-21, because-19)
nsubj(had-21, they-20)
advcl(round-16, had-21)
advmod(little-23, so-22)
amod(room-24, little-23)
dobj(had-21, room-24)
poss(end-28, their-26)
amod(end-28, own-27)
prep_in(had-21, end-28)
det(coach-house-31, the-30)
prep_over(had-21, coach-house-31)
poss(father-36, Diamond-34)
nsubj(put-37, father-36)
conj_and(round-16, put-37)
amod(Diamond-39, old-38)
dobj(put-37, Diamond-39)
det(stall-42, the-41)
prep_in(put-37, stall-42)
det(bed-45, the-44)
prep_under(put-37, bed-45)
mark(horse-52, because-47)
nsubj(horse-52, he-48)
nsubj(go-57, he-48)
nsubj(sleep-59, he-48)
nsubj(lay-63, he-48)
cop(horse-52, was-49)
det(horse-52, a-50)
amod(horse-52, quiet-51)
advcl(put-37, horse-52)
aux(go-57, did-55)
neg(go-57, not-56)
advcl(put-37, go-57)
conj_and(horse-52, go-57)
aux(sleep-59, to-58)
xcomp(go-57, sleep-59)
dobj(sleep-59, standing-60)
advcl(put-37, lay-63)
conj_but(horse-52, lay-63)
prt(lay-63, down-64)
det(creature-68, a-66)
amod(creature-68, reasonable-67)
prep_like(lay-63, creature-68)

(ROOT
  (S (CC But)
    (, ,)
    (SBAR (IN although)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (NP (DT a)
            (ADJP (RB surprisingly) (JJ reasonable))
            (NN creature)))))
    (, ,)
    (ADVP (RB yet))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (JJ young) (NNP Diamond))
        (VP
          (VP (VBD woke)
            (PP (IN in)
              (NP
                (NP (DT the) (NN middle))
                (PP (IN of)
                  (NP (DT the) (NN night))))))
          (, ,)
          (CC and)
          (VP (VBD felt)
            (NP
              (NP (DT the) (NN bed))
              (VP (VBG shaking)
                (PP (IN in)
                  (NP
                    (NP (DT the) (NNS blasts))
                    (PP (IN of)
                      (NP (DT the) (NN north) (NN wind)))))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD could) (RB not)
      (VP (VB help)
        (S
          (VP (VBG wondering)
            (SBAR (IN whether) (, ,)
              (S
                (SBAR (IN if)
                  (S
                    (S
                      (NP (DT the) (NN wind))
                      (VP (MD should)
                        (VP (VB blow)
                          (NP (DT the) (NN house))
                          (PRT (RP down)))))
                    (, ,)
                    (CC and)
                    (S
                      (NP (PRP he))
                      (VP (VBD were)
                        (S
                          (VP (TO to)
                            (VP (VB fall)
                              (PRT (RP through))
                              (PP (IN into)
                                (NP (DT the) (NN manger))))))))))
                (, ,)
                (NP (JJ old) (NNP Diamond))
                (VP (MD might) (RB n't)
                  (VP (VB eat)
                    (NP (PRP him))
                    (PRT (RP up))))))))
        (SBAR (IN before)
          (S
            (NP (PRP he))
            (VP (VBD knew)
              (NP (PRP him))
              (PP (IN in)
                (NP (PRP$ his) (NN night-gown))))))))
    (. .)))

cc(help-40, But-1)
mark(creature-9, although-3)
nsubj(creature-9, he-4)
cop(creature-9, was-5)
det(creature-9, a-6)
advmod(reasonable-8, surprisingly-7)
amod(creature-9, reasonable-8)
advcl(help-40, creature-9)
advmod(help-40, yet-11)
advmod(woke-16, when-13)
amod(Diamond-15, young-14)
nsubj(woke-16, Diamond-15)
nsubj(felt-25, Diamond-15)
advcl(help-40, woke-16)
det(middle-19, the-18)
prep_in(woke-16, middle-19)
det(night-22, the-21)
prep_of(middle-19, night-22)
conj_and(woke-16, felt-25)
advcl(help-40, felt-25)
det(bed-27, the-26)
dobj(felt-25, bed-27)
vmod(bed-27, shaking-28)
det(blasts-31, the-30)
prep_in(shaking-28, blasts-31)
det(wind-35, the-33)
nn(wind-35, north-34)
prep_of(blasts-31, wind-35)
nsubj(help-40, he-37)
aux(help-40, could-38)
neg(help-40, not-39)
root(ROOT-0, help-40)
xcomp(help-40, wondering-41)
mark(eat-67, whether-42)
mark(blow-48, if-44)
det(wind-46, the-45)
nsubj(blow-48, wind-46)
aux(blow-48, should-47)
advcl(eat-67, blow-48)
det(house-50, the-49)
dobj(blow-48, house-50)
prt(blow-48, down-51)
nsubj(were-55, he-54)
nsubj(fall-57, he-54)
conj_and(blow-48, were-55)
advcl(eat-67, were-55)
aux(fall-57, to-56)
xcomp(were-55, fall-57)
prt(fall-57, through-58)
det(manger-61, the-60)
prep_into(fall-57, manger-61)
amod(Diamond-64, old-63)
nsubj(eat-67, Diamond-64)
aux(eat-67, might-65)
neg(eat-67, n't-66)
ccomp(wondering-41, eat-67)
dobj(eat-67, him-68)
prt(eat-67, up-69)
mark(knew-72, before-70)
nsubj(knew-72, he-71)
advcl(help-40, knew-72)
dobj(knew-72, him-73)
poss(night-gown-76, his-75)
prep_in(knew-72, night-gown-76)

(ROOT
  (S (CC And)
    (SBAR (IN although)
      (S
        (NP (JJ old) (NNP Diamond))
        (VP (VBD was)
          (ADJP (RB very) (JJ quiet))
          (NP (DT all) (NN night)))))
    (S
      (ADVP (RB long))
      (, ,)
      (SBAR
        (ADVP (RB yet))
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD woke))))
      (NP (PRP he))
      (VP (VBD got)
        (PRT (RP up))
        (PP (IN like)
          (NP (DT an) (NN earthquake)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (JJ young) (NNP Diamond))
      (VP (VBD knew)
        (SBAR
          (SBAR
            (WHNP (WP what))
            (S
              (NP (RB o'clock) (PRP it))
              (VP (VBD was))))
          (, ,)
          (CC or)
          (ADVP (IN at) (JJS least))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD was)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN done)
                        (NP
                          (NP (JJ next))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP
                                (VP (VBD was))
                                (: --)
                                (S
                                  (VP (TO to)
                                    (VP (VB go)
                                      (S
                                        (VP (TO to)
                                          (VP (VB sleep)
                                            (ADVP (RB again))
                                            (ADVP
                                              (ADVP (RB as) (RB fast))
                                              (SBAR (IN as)
                                                (S
                                                  (NP (PRP he))
                                                  (VP (MD could)))))))))))))))))))))))))
    (. .)))

mark(quiet-7, although-2)
amod(Diamond-4, old-3)
nsubj(quiet-7, Diamond-4)
cop(quiet-7, was-5)
advmod(quiet-7, very-6)
advcl(got-17, quiet-7)
det(night-9, all-8)
tmod(quiet-7, night-9)
advmod(got-17, long-10)
advmod(woke-15, yet-12)
advmod(woke-15, when-13)
nsubj(woke-15, he-14)
advcl(got-17, woke-15)
nsubj(got-17, he-16)
root(ROOT-0, got-17)
prt(got-17, up-18)
det(earthquake-21, an-20)
prep_like(got-17, earthquake-21)
advmod(knew-27, then-24)
amod(Diamond-26, young-25)
nsubj(knew-27, Diamond-26)
conj_and(got-17, knew-27)
dobj(was-31, what-28)
advmod(it-30, o'clock-29)
nsubj(was-31, it-30)
dep(knew-27, was-31)
dep(knew-27, at-34)
advmod(was-31, at-34)
conj_or(was-31, at-34)
pobj(at-34, least-35)
nsubj(was-37, what-36)
nsubjpass(done-40, what-36)
dep(knew-27, was-37)
conj_or(was-31, was-37)
aux(done-40, to-38)
auxpass(done-40, be-39)
xcomp(was-37, done-40)
dobj(done-40, next-41)
nsubj(was-44, next-41)
nsubj(go-47, next-41)
rcmod(next-41, was-44)
aux(go-47, to-46)
parataxis(was-44, go-47)
xcomp(was-44, go-47)
aux(sleep-49, to-48)
xcomp(go-47, sleep-49)
advmod(sleep-49, again-50)
advmod(fast-52, as-51)
advmod(sleep-49, fast-52)
mark(could-55, as-53)
nsubj(could-55, he-54)
advcl(fast-52, could-55)
ccomp(fast-52, could-55)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (VP
        (VP (VBN hay)
          (PP (IN at)
            (NP (PRP$ his) (NNS feet))))
        (CC and)
        (VP (VBN hay)
          (PP (IN at)
            (NP (PRP$ his) (NN head))))
        (, ,)
        (VP (VBN piled)
          (PRT (RP up))
          (PP (IN in)
            (NP (JJ great) (NNS trusses))))
        (PP (TO to)
          (NP (DT the) (JJ very) (NN roof)))))
    (. .)))

expl(hay-3, There-1)
auxpass(hay-3, was-2)
root(ROOT-0, hay-3)
poss(feet-6, his-5)
prep_at(hay-3, feet-6)
conj_and(hay-3, hay-8)
poss(head-11, his-10)
prep_at(hay-8, head-11)
dep(hay-3, piled-13)
prt(piled-13, up-14)
amod(trusses-17, great-16)
prep_in(piled-13, trusses-17)
det(roof-21, the-19)
amod(roof-21, very-20)
prep_to(hay-3, roof-21)

(ROOT
  (S
    (ADVP (RB Indeed))
    (NP (PRP it))
    (VP (VBD was)
      (ADJP (RB sometimes) (JJ only))
      (PP (IN through)
        (NP (DT a) (JJ little) (NN lane)))
      (PP (IN with)
        (NP
          (NP (JJ several) (NNS turnings))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD looked)
                (SBAR (RB as) (IN if)
                  (S
                    (NP (PRP it))
                    (VP (VBD had)
                      (VP (VBN been)
                        (VP (VBN sawn)
                          (PRT (RP out))
                          (PP (IN for)
                            (NP (PRP him)))))))))))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB reach)
              (NP (PRP$ his) (NN bed))
              (ADVP (IN at) (DT all)))))))
    (. .)))

advmod(only-5, Indeed-1)
nsubj(only-5, it-2)
cop(only-5, was-3)
advmod(only-5, sometimes-4)
root(ROOT-0, only-5)
det(lane-9, a-7)
amod(lane-9, little-8)
prep_through(only-5, lane-9)
amod(turnings-12, several-11)
prep_with(only-5, turnings-12)
nsubj(looked-15, turnings-12)
rcmod(turnings-12, looked-15)
advmod(sawn-21, as-16)
mark(sawn-21, if-17)
nsubjpass(sawn-21, it-18)
aux(sawn-21, had-19)
auxpass(sawn-21, been-20)
advcl(looked-15, sawn-21)
prt(sawn-21, out-22)
prep_for(sawn-21, him-24)
mark(reach-29, that-26)
nsubj(reach-29, he-27)
aux(reach-29, could-28)
ccomp(only-5, reach-29)
poss(bed-31, his-30)
dobj(reach-29, bed-31)
advmod(reach-29, at-32)
pobj(at-32, all-33)

(ROOT
  (S (IN For)
    (NP
      (NP (DT the) (NN stock))
      (PP (IN of)
        (NP (NN hay))))
    (VP (VBD was) (, ,)
      (PP (IN of)
        (NP (NN course)))
      (, ,)
      (ADVP (RB always))
      (PP (IN in)
        (NP (DT a) (NN state)))
      (PP (CC either)
        (PP (IN of)
          (NP (JJ slow) (NN ebb)))
        (CC or)
        (PP (IN of)
          (NP (JJ sudden) (NN flow)))))
    (. .)))

dep(was-6, For-1)
det(stock-3, the-2)
nsubj(was-6, stock-3)
prep_of(stock-3, hay-5)
root(ROOT-0, was-6)
prep_of(was-6, course-9)
advmod(was-6, always-11)
det(state-14, a-13)
prep_in(was-6, state-14)
preconj(was-6, either-15)
amod(ebb-18, slow-17)
prep_of(was-6, ebb-18)
amod(flow-22, sudden-21)
prep_of(was-6, flow-22)
conj_or(ebb-18, flow-22)

(ROOT
  (S
    (S
      (ADVP (RB Sometimes))
      (NP
        (NP (DT the) (JJ whole) (NN space))
        (PP (IN of)
          (NP (DT the) (NN loft)))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT the) (JJ little) (NNS panes))
            (PP (IN in)
              (NP
                (NP (DT the) (NN roof))
                (PP (IN for)
                  (NP (DT the) (NNS stars)))))
            (S
              (VP (TO to)
                (VP (VB look)
                  (PRT (RP in)))))))
        (, ,))
      (VP (MD would)
        (VP (VB lie)
          (PRT (RP open))
          (PP (IN before)
            (NP (PRP$ his) (JJ open) (NNS eyes)))
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBD lay)
                (PP (IN in)
                  (NP (NN bed)))))))))
    (: ;)
    (S
      (ADVP (RB sometimes))
      (NP
        (NP (DT a) (JJ yellow) (NN wall))
        (PP (IN of)
          (NP (JJ sweet-smelling) (NNS fibres))))
      (VP (VBD closed)
        (PRT (RP up))
        (NP (PRP$ his) (NN view))
        (PP (IN at)
          (NP
            (NP (DT the) (NN distance))
            (PP (IN of)
              (NP (PDT half) (DT a) (NN yard)))))))
    (. .)))

advmod(lie-24, Sometimes-1)
det(space-4, the-2)
amod(space-4, whole-3)
nsubj(lie-24, space-4)
det(loft-7, the-6)
prep_of(space-4, loft-7)
det(panes-12, the-10)
amod(panes-12, little-11)
prep_with(space-4, panes-12)
det(roof-15, the-14)
prep_in(panes-12, roof-15)
det(stars-18, the-17)
prep_for(roof-15, stars-18)
aux(look-20, to-19)
vmod(panes-12, look-20)
prt(look-20, in-21)
aux(lie-24, would-23)
root(ROOT-0, lie-24)
prt(lie-24, open-25)
poss(eyes-29, his-27)
amod(eyes-29, open-28)
prep_before(lie-24, eyes-29)
mark(lay-32, as-30)
nsubj(lay-32, he-31)
advcl(lie-24, lay-32)
prep_in(lay-32, bed-34)
advmod(closed-43, sometimes-36)
det(wall-39, a-37)
amod(wall-39, yellow-38)
nsubj(closed-43, wall-39)
amod(fibres-42, sweet-smelling-41)
prep_of(wall-39, fibres-42)
parataxis(lie-24, closed-43)
prt(closed-43, up-44)
poss(view-46, his-45)
dobj(closed-43, view-46)
det(distance-49, the-48)
prep_at(closed-43, distance-49)
predet(yard-53, half-51)
det(yard-53, a-52)
prep_of(distance-49, yard-53)

(ROOT
  (S
    (S
      (ADVP (RB Sometimes))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP$ his) (NN mother))
          (VP
            (VP (VBD had)
              (VP (VBN undressed)
                (NP (PRP him))
                (PP (IN in)
                  (NP (PRP$ her) (NN room)))))
            (, ,)
            (CC and)
            (VP (VBD told)
              (S
                (NP (PRP him))
                (VP (TO to)
                  (VP (VB trot)
                    (PP (TO to)
                      (NP (NN bed)))
                    (PP (IN by)
                      (NP (PRP himself))))))))))
      (, ,)
      (NP (PRP he))
      (VP (MD would)
        (VP
          (VP (VB creep)
            (PP (IN into)
              (NP
                (NP (DT the) (NN heart))
                (PP (IN of)
                  (NP (DT the) (NN hay))))))
          (, ,)
          (CC and)
          (VP (VB lie)
            (S
              (NP (EX there))
              (VP (VBG thinking)
                (SBAR
                  (SBAR
                    (WHADJP (WRB how) (JJ cold))
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (ADVP (RB outside))
                        (PP (IN in)
                          (NP (DT the) (NN wind))))))
                  (, ,)
                  (CC and)
                  (SBAR
                    (WHADVP (WRB how)
                      (ADJP (JJ warm)))
                    (S
                      (S
                        (NP (PRP it))
                        (VP (VBD was)
                          (ADVP (RB inside) (RB there))
                          (PP (IN in)
                            (NP (PRP$ his) (NN bed)))))
                      (, ,)
                      (CC and)
                      (S
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (NP (PRP he))
                            (VP (MD could)
                              (VP (VB go)
                                (PP (TO to)
                                  (NP (PRP it)))
                                (SBAR
                                  (WHADVP (WRB when))
                                  (S
                                    (NP (PRP he))
                                    (VP (VBD pleased))))))))
                        (, ,)
                        (ADVP (RB only))
                        (NP (PRP he))
                        (VP (MD would) (RB n't))))))))
            (ADVP (RB just) (RB yet))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (MD would)
        (VP (VB get)
          (NP (DT a) (JJ little) (JJR colder))
          (ADVP (RB first)))))
    (. .)))

advmod(creep-25, Sometimes-1)
advmod(undressed-7, when-3)
poss(mother-5, his-4)
nsubj(undressed-7, mother-5)
nsubj(told-14, mother-5)
aux(undressed-7, had-6)
advcl(creep-25, undressed-7)
dobj(undressed-7, him-8)
poss(room-11, her-10)
prep_in(undressed-7, room-11)
conj_and(undressed-7, told-14)
advcl(creep-25, told-14)
dobj(told-14, him-15)
nsubj(trot-17, him-15)
aux(trot-17, to-16)
xcomp(told-14, trot-17)
prep_to(trot-17, bed-19)
prep_by(trot-17, himself-21)
nsubj(creep-25, he-23)
nsubj(lie-34, he-23)
aux(creep-25, would-24)
root(ROOT-0, creep-25)
det(heart-28, the-27)
prep_into(creep-25, heart-28)
det(hay-31, the-30)
prep_of(heart-28, hay-31)
conj_and(creep-25, lie-34)
expl(thinking-36, there-35)
dep(lie-34, thinking-36)
advmod(cold-38, how-37)
dep(was-40, cold-38)
nsubj(was-40, it-39)
dep(thinking-36, was-40)
advmod(was-40, outside-41)
det(wind-44, the-43)
prep_in(was-40, wind-44)
advmod(was-50, how-47)
dep(how-47, warm-48)
nsubj(was-50, it-49)
dep(thinking-36, was-50)
conj_and(was-40, was-50)
advmod(there-52, inside-51)
advmod(was-50, there-52)
poss(bed-55, his-54)
prep_in(was-50, bed-55)
advmod(go-61, how-58)
nsubj(go-61, he-59)
aux(go-61, could-60)
advcl(would-70, go-61)
prep_to(go-61, it-63)
advmod(pleased-66, when-64)
nsubj(pleased-66, he-65)
advcl(go-61, pleased-66)
advmod(he-69, only-68)
nsubj(would-70, he-69)
conj_and(was-40, would-70)
conj_and(was-50, would-70)
neg(would-70, n't-71)
advmod(yet-73, just-72)
advmod(lie-34, yet-73)
nsubj(get-77, he-75)
aux(get-77, would-76)
parataxis(creep-25, get-77)
det(colder-80, a-78)
amod(colder-80, little-79)
dobj(get-77, colder-80)
advmod(get-77, first-81)

(ROOT
  (S (CC And)
    (SBAR (RB ever) (IN as)
      (S
        (NP (PRP he))
        (VP (VBD grew)
          (NP (JJR colder)))))
    (, ,)
    (NP (PRP$ his) (NN bed))
    (VP (MD would)
      (VP (VB grow)
        (NP (JJR warmer))
        (, ,)
        (SBAR (IN till)
          (S
            (PP (IN at)
              (NP (JJ last)))
            (NP (PRP he))
            (VP (MD would)
              (VP
                (VP (VB scramble)
                  (PRT (RP out))
                  (PP (IN of)
                    (NP (DT the) (NN hay))))
                (, ,)
                (VP (VB shoot)
                  (PP (IN like)
                    (NP (DT an) (NN arrow)))
                  (PP (IN into)
                    (NP (PRP$ his) (NN bed))))
                (, ,)
                (VP (VB cover)
                  (NP (PRP himself))
                  (PRT (RP up)))
                (, ,)
                (CC and)
                (VP (VB snuggle)
                  (PRT (RP down))
                  (, ,)
                  (S
                    (VP (VBG thinking)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP
                            (NP (DT a) (JJ happy) (NN boy))
                            (NP (PRP he)))
                          (VP (VBD was)))))))))))))
    (. .)))

cc(grow-11, And-1)
advmod(grew-5, ever-2)
mark(grew-5, as-3)
nsubj(grew-5, he-4)
advcl(grow-11, grew-5)
dobj(grew-5, colder-6)
poss(bed-9, his-8)
nsubj(grow-11, bed-9)
aux(grow-11, would-10)
root(ROOT-0, grow-11)
dobj(grow-11, warmer-12)
mark(scramble-19, till-14)
prep_at(scramble-19, last-16)
nsubj(scramble-19, he-17)
nsubj(shoot-25, he-17)
nsubj(cover-33, he-17)
nsubj(snuggle-38, he-17)
aux(scramble-19, would-18)
advcl(grow-11, scramble-19)
det(hay-23, the-22)
prep_out_of(scramble-19, hay-23)
advcl(grow-11, shoot-25)
conj_and(scramble-19, shoot-25)
det(arrow-28, an-27)
prep_like(shoot-25, arrow-28)
poss(bed-31, his-30)
prep_into(shoot-25, bed-31)
advcl(grow-11, cover-33)
conj_and(scramble-19, cover-33)
dobj(cover-33, himself-34)
prt(cover-33, up-35)
advcl(grow-11, snuggle-38)
conj_and(scramble-19, snuggle-38)
prt(snuggle-38, down-39)
xcomp(snuggle-38, thinking-41)
dobj(was-47, what-42)
det(boy-45, a-43)
amod(boy-45, happy-44)
nsubj(was-47, boy-45)
dep(boy-45, he-46)
ccomp(thinking-41, was-47)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (NP (RB not) (DT the) (JJS least) (NN idea))
      (SBAR (IN that)
        (S
          (NP (DT the) (NN wind))
          (VP
            (VP (VBD got)
              (PRT (RP in))
              (PP (IN at)
                (NP
                  (NP (DT a) (NN chink))
                  (PP (IN in)
                    (NP (DT the) (NN wall))))))
            (, ,)
            (CC and)
            (VP (VBD blew)
              (PRT (RP about))
              (NP (PRP him))
              (NP (DT all) (NN night)))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
neg(idea-6, not-3)
det(idea-6, the-4)
amod(idea-6, least-5)
dobj(had-2, idea-6)
mark(got-10, that-7)
det(wind-9, the-8)
nsubj(got-10, wind-9)
nsubj(blew-20, wind-9)
ccomp(had-2, got-10)
prt(got-10, in-11)
det(chink-14, a-13)
prep_at(got-10, chink-14)
det(wall-17, the-16)
prep_in(chink-14, wall-17)
ccomp(had-2, blew-20)
conj_and(got-10, blew-20)
prt(blew-20, about-21)
dobj(blew-20, him-22)
det(night-24, all-23)
tmod(blew-20, night-24)

(ROOT
  (S
    (SBAR (IN For)
      (S
        (NP
          (NP (DT the) (NN back))
          (PP (IN of)
            (NP (PRP$ his) (NN bed))))
        (VP (VBD was)
          (ADVP (RB only))
          (PP
            (PP (IN of)
              (NP
                (NP (NNS boards))
                (NP (DT an) (NN inch))))
            (ADVP (JJ thick))
            (, ,)
            (CC and)
            (PP (IN on)
              (NP
                (NP (DT the) (JJ other) (NN side))
                (PP (IN of)
                  (NP (PRP them)))))))))
    (VP (VBD was)
      (NP (DT the) (NN north) (NN wind)))
    (. .)))

mark(was-7, For-1)
det(back-3, the-2)
nsubj(was-7, back-3)
nsubj(was-7', back-3)
poss(bed-6, his-5)
prep_of(back-3, bed-6)
conj_and(was-7, was-7')
csubj(wind-25, was-7)
csubj(wind-25, was-7')
advmod(was-7, only-8)
prep_of(was-7, boards-10)
det(inch-12, an-11)
dep(boards-10, inch-12)
dep(was-7, thick-13)
det(side-19, the-17)
amod(side-19, other-18)
prep_on(was-7', side-19)
prep_of(side-19, them-21)
cop(wind-25, was-22)
det(wind-25, the-23)
nn(wind-25, north-24)
root(ROOT-0, wind-25)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (ADVP (RB already))
          (VP (VBN said)))))
    (, ,)
    (NP (DT these) (NNS boards))
    (VP (VBD were)
      (ADJP (JJ soft)
        (CC and)
        (JJ crumbly)))
    (. .)))

advmod(soft-12, Now-1)
mark(said-7, as-3)
nsubj(said-7, I-4)
aux(said-7, have-5)
advmod(said-7, already-6)
advcl(soft-12, said-7)
det(boards-10, these-9)
nsubj(soft-12, boards-10)
nsubj(crumbly-14, boards-10)
cop(soft-12, were-11)
root(ROOT-0, soft-12)
conj_and(soft-12, crumbly-14)

(ROOT
  (S
    (S
      (S
        (VP (TO To)
          (VP (VB be)
            (ADJP (JJ sure)))))
      (, ,)
      (NP (PRP they))
      (VP (VBD were)
        (VP (VBN tarred)
          (PP (IN on)
            (NP (DT the) (NN outside))))))
    (, ,)
    (CC yet)
    (S
      (PP (IN in)
        (NP (JJ many) (NNS places)))
      (NP (PRP they))
      (VP (VBD were)
        (ADJP
          (ADJP (JJR more))
          (PP (IN like)
            (NP (NN tinder))))
        (PP (IN than)
          (NP (NN timber)))))
    (. .)))

aux(sure-3, To-1)
cop(sure-3, be-2)
advcl(tarred-7, sure-3)
nsubjpass(tarred-7, they-5)
auxpass(tarred-7, were-6)
root(ROOT-0, tarred-7)
det(outside-10, the-9)
prep_on(tarred-7, outside-10)
amod(places-15, many-14)
prep_in(more-18, places-15)
nsubj(more-18, they-16)
cop(more-18, were-17)
conj_yet(tarred-7, more-18)
prep_like(more-18, tinder-20)
prep_than(more-18, timber-22)

(ROOT
  (S
    (ADVP (RB Hence))
    (NP (PRP it))
    (VP (VBD happened)
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ soft) (NN part)
            (S
              (VP (VBG having)
                (VP (VBN worn)
                  (PP
                    (ADVP (RB away))
                    (IN from) (IN about)
                    (NP
                      (NP (PRP it))
                      (, ,) (RB little)
                      (NP (NNP Diamond))))))))
          (VP (VBD found)
            (NP (CD one))
            (NP (NN night))
            (, ,)
            (SBAR
              (SBAR (IN after)
                (S
                  (NP (PRP he))
                  (VP (VBD lay)
                    (PRT (RP down)))))
              (, ,)
              (SBAR (IN that)
                (S
                  (NP (DT a) (NN knot))
                  (VP (VBD had)
                    (VP (VBN come)
                      (PRT (RP out))
                      (PP (IN of)
                        (NP
                          (NP (CD one))
                          (PP (IN of)
                            (NP (PRP them)))))))))
              (, ,)
              (CC and)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN wind))
                  (VP (VBD was)
                    (VP (VBG blowing)
                      (PRT (RP in))
                      (PP (IN upon)
                        (NP (PRP him)))
                      (PP (IN in)
                        (NP (DT a)
                          (ADJP
                            (ADJP (JJ cold))
                            (CC and)
                            (ADJP (RB rather) (JJ imperious)))
                          (NN fashion))))))))))))
    (. .)))

advmod(happened-3, Hence-1)
nsubj(happened-3, it-2)
root(ROOT-0, happened-3)
mark(found-17, that-4)
det(part-7, the-5)
amod(part-7, soft-6)
nsubj(found-17, part-7)
aux(worn-9, having-8)
dep(part-7, worn-9)
advmod(worn-9, away-10)
dep(worn-9, from-11)
prep_about(worn-9, it-13)
advmod(it-13, little-15)
dep(it-13, Diamond-16)
ccomp(happened-3, found-17)
dobj(found-17, one-18)
tmod(found-17, night-19)
mark(lay-23, after-21)
nsubj(lay-23, he-22)
advcl(found-17, lay-23)
ccomp(found-17, lay-23)
prt(lay-23, down-24)
mark(come-30, that-26)
det(knot-28, a-27)
nsubj(come-30, knot-28)
aux(come-30, had-29)
advcl(found-17, come-30)
ccomp(found-17, come-30)
conj_and(lay-23, come-30)
prep_out_of(come-30, one-33)
prep_of(one-33, them-35)
mark(blowing-42, that-38)
det(wind-40, the-39)
nsubj(blowing-42, wind-40)
aux(blowing-42, was-41)
advcl(found-17, blowing-42)
ccomp(found-17, blowing-42)
conj_and(lay-23, blowing-42)
prt(blowing-42, in-43)
prep_upon(blowing-42, him-45)
det(fashion-52, a-47)
amod(fashion-52, cold-48)
advmod(imperious-51, rather-50)
conj_and(cold-48, imperious-51)
amod(fashion-52, imperious-51)
prep_in(blowing-42, fashion-52)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP he))
      (VP (VBD had)
        (NP
          (NP (DT no) (NN fancy))
          (PP (IN for)
            (S
              (VP (VBG leaving)
                (S
                  (NP (NNS things))
                  (ADJP (JJ wrong))))))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD might)
                (VP (VB be)
                  (VP (VBN set)
                    (ADVP (RB right))))))))))
    (: ;)
    (S (IN so)
      (NP (PRP he))
      (VP
        (VP (VBD jumped)
          (PRT (RP out))
          (PP (IN of)
            (NP (NN bed)))
          (ADVP (RB again)))
        (, ,)
        (VP (VBD got)
          (SBAR
            (S
              (NP
                (NP (DT a) (JJ little) (NN strike))
                (PP (IN of)
                  (NP (NN hay)))
                (, ,)
                (VP (VBN twisted)
                  (NP (PRP it))
                  (PRT (RP up)))
                (, ,))
              (VP (VBD folded)
                (NP (PRP it))
                (PP (IN in)
                  (NP (DT the) (NN middle))))))
          (, ,))
        (CC and)
        (PRN (, ,)
          (S
            (VP (VBG having)
              (ADVP (RB thus))
              (VP (VBN made)
                (NP (PRP it))
                (PP (IN into)
                  (NP (DT a) (NN cork))))))
          (, ,))
        (VP (VBD stuck)
          (NP (PRP it))
          (PP (IN into)
            (NP
              (NP (DT the) (NN hole))
              (PP (IN in)
                (NP (DT the) (NN wall))))))))
    (. .)))

advmod(had-3, Now-1)
nsubj(had-3, he-2)
root(ROOT-0, had-3)
neg(fancy-5, no-4)
dobj(had-3, fancy-5)
nsubjpass(set-13, fancy-5)
prepc_for(fancy-5, leaving-7)
nsubj(wrong-9, things-8)
xcomp(leaving-7, wrong-9)
aux(set-13, might-11)
auxpass(set-13, be-12)
rcmod(fancy-5, set-13)
advmod(set-13, right-14)
dep(jumped-18, so-16)
nsubj(jumped-18, he-17)
nsubj(got-24, he-17)
nsubj(stuck-51, he-17)
parataxis(had-3, jumped-18)
prep_out_of(jumped-18, bed-21)
advmod(jumped-18, again-22)
parataxis(had-3, got-24)
conj_and(jumped-18, got-24)
det(strike-27, a-25)
amod(strike-27, little-26)
nsubj(folded-35, strike-27)
prep_of(strike-27, hay-29)
vmod(strike-27, twisted-31)
dobj(twisted-31, it-32)
prt(twisted-31, up-33)
ccomp(got-24, folded-35)
dobj(folded-35, it-36)
det(middle-39, the-38)
prep_in(folded-35, middle-39)
aux(made-45, having-43)
advmod(made-45, thus-44)
parataxis(jumped-18, made-45)
parataxis(got-24, made-45)
parataxis(stuck-51, made-45)
dobj(made-45, it-46)
det(cork-49, a-48)
prep_into(made-45, cork-49)
parataxis(had-3, stuck-51)
conj_and(jumped-18, stuck-51)
dobj(stuck-51, it-52)
det(hole-55, the-54)
prep_into(stuck-51, hole-55)
det(wall-58, the-57)
prep_in(hole-55, wall-58)

(ROOT
  (S (CC But)
    (NP (DT the) (NN wind))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP
            (VP (VB blow)
              (ADJP (JJ loud)
                (CC and)
                (JJ angrily)))
            (, ,)
            (CC and)
            (VP (, ,)
              (SBAR (IN as)
                (S
                  (NP (NNP Diamond))
                  (VP (VBD was)
                    (VP (VBG falling)
                      (UCP
                        (ADJP (RB asleep))
                        (, ,)
                        (ADJP (RB out)
                          (SBAR
                            (S
                              (VP
                                (VP (VBD blew)
                                  (NP (PRP$ his) (NN cork)))
                                (CC and)
                                (VP (VBD hit)
                                  (NP (PRP him))
                                  (PP (IN on)
                                    (NP (DT the) (NN nose))))))))
                        (, ,)
                        (ADJP
                          (ADJP (RB just) (JJ hard))
                          (RB enough)
                          (S
                            (VP (TO to)
                              (VP (VB wake)
                                (NP (PRP him))
                                (ADVP (RB up) (RB quite))))))
                        (, ,)
                        (CC and)
                        (VP (VBD let)
                          (SBAR
                            (S
                              (NP (PRP him))
                              (VP (VBP hear)
                                (NP
                                  (NP (DT the) (NN wind) (VBG whistling) (NN shrill))
                                  (PP (IN in)
                                    (NP (DT the) (NN hole))))))))))))))))))
    (. .)))

cc(began-4, But-1)
det(wind-3, the-2)
nsubj(began-4, wind-3)
nsubj(blow-6, wind-3)
root(ROOT-0, began-4)
aux(blow-6, to-5)
xcomp(began-4, blow-6)
acomp(blow-6, loud-7)
acomp(blow-6, angrily-9)
conj_and(loud-7, angrily-9)
mark(falling-16, as-13)
nsubj(falling-16, Diamond-14)
aux(falling-16, was-15)
xcomp(began-4, falling-16)
conj_and(blow-6, falling-16)
acomp(falling-16, asleep-17)
acomp(falling-16, out-19)
conj_and(asleep-17, out-19)
ccomp(out-19, blew-20)
poss(cork-22, his-21)
dobj(blew-20, cork-22)
ccomp(out-19, hit-24)
conj_and(blew-20, hit-24)
dobj(hit-24, him-25)
det(nose-28, the-27)
prep_on(hit-24, nose-28)
advmod(hard-31, just-30)
acomp(falling-16, hard-31)
conj_and(asleep-17, hard-31)
advmod(hard-31, enough-32)
aux(wake-34, to-33)
xcomp(hard-31, wake-34)
dobj(wake-34, him-35)
advmod(quite-37, up-36)
advmod(wake-34, quite-37)
acomp(falling-16, let-40)
conj_and(asleep-17, let-40)
nsubj(hear-42, him-41)
ccomp(let-40, hear-42)
det(shrill-46, the-43)
nn(shrill-46, wind-44)
amod(shrill-46, whistling-45)
dobj(hear-42, shrill-46)
det(hole-49, the-48)
prep_in(shrill-46, hole-49)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD searched)
        (PP (IN for)
          (NP (PRP$ his) (NN hay-cork))))
      (, ,)
      (VP (VBD found)
        (NP (PRP it)))
      (, ,)
      (VP (VBD stuck)
        (NP (PRP it))
        (PP (IN in)
          (ADVP (RBR harder))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (VP
          (ADVP (RB just))
          (VBG dropping)
          (PRT (RP off))
          (ADVP (RB once) (RBR more))
          (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S (, ,)
              (VP (VBP pop)))))))
    (. !)))

nsubj(searched-2, He-1)
nsubj(found-7, He-1)
nsubj(stuck-10, He-1)
nsubj(dropping-18, He-1)
root(ROOT-0, searched-2)
poss(hay-cork-5, his-4)
prep_for(searched-2, hay-cork-5)
conj_and(searched-2, found-7)
dobj(found-7, it-8)
conj_and(searched-2, stuck-10)
dobj(stuck-10, it-11)
prepc_in(stuck-10, harder-13)
aux(dropping-18, was-16)
advmod(dropping-18, just-17)
conj_and(searched-2, dropping-18)
prt(dropping-18, off-19)
advmod(more-21, once-20)
advmod(dropping-18, more-21)
advmod(pop-25, when-23)
advcl(dropping-18, pop-25)

(ROOT
  (S
    (PP (IN with)
      (NP
        (NP (DT an) (JJ angry) (NN whistle))
        (PP (IN behind)
          (NP (PRP it)))))
    (, ,)
    (NP (DT the) (NN cork))
    (VP
      (VP (VBD struck)
        (NP (PRP him))
        (ADVP (RB again)))
      (, ,)
      (NP
        (NP (DT this) (NN time))
        (PP (IN on)
          (NP (DT the) (NN cheek)))))
    (. .)))

det(whistle-4, an-2)
amod(whistle-4, angry-3)
prep_with(struck-10, whistle-4)
prep_behind(whistle-4, it-6)
det(cork-9, the-8)
nsubj(struck-10, cork-9)
root(ROOT-0, struck-10)
dobj(struck-10, him-11)
advmod(struck-10, again-12)
det(time-15, this-14)
dobj(struck-10, time-15)
det(cheek-18, the-17)
prep_on(time-15, cheek-18)

(ROOT
  (S
    (PP (IN Up))
    (NP (PRP he))
    (VP
      (VP (VBD rose)
        (ADVP (RB once) (RBR more)))
      (, ,)
      (VP (VBD made)
        (NP
          (NP (DT a) (JJ fresh) (NN stopple))
          (PP (IN of)
            (NP (NN hay)))))
      (, ,)
      (CC and)
      (VP (VBD corked)
        (NP (DT the) (NN hole))
        (ADVP (RB severely))))
    (. .)))

prep(rose-3, Up-1)
nsubj(rose-3, he-2)
nsubj(made-7, he-2)
nsubj(corked-15, he-2)
root(ROOT-0, rose-3)
advmod(more-5, once-4)
advmod(rose-3, more-5)
conj_and(rose-3, made-7)
det(stopple-10, a-8)
amod(stopple-10, fresh-9)
dobj(made-7, stopple-10)
prep_of(stopple-10, hay-12)
conj_and(rose-3, corked-15)
det(hole-17, the-16)
dobj(corked-15, hole-17)
advmod(corked-15, severely-18)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD was)
      (ADVP (RB hardly))
      (SBAR
        (ADVP (RB down) (RB again))
        (IN before)
        (PRN (: --)
          (S
            (VP (VB pop))))))
    (. !)))

cc(was-3, But-1)
nsubj(was-3, he-2)
root(ROOT-0, was-3)
advmod(was-3, hardly-4)
advmod(again-6, down-5)
advmod(before-7, again-6)
advcl(was-3, before-7)
dep(before-7, pop-9)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD came)
      (PP (IN on)
        (NP (PRP$ his) (NN forehead))))
    (. .)))

nsubj(came-2, it-1)
root(ROOT-0, came-2)
poss(forehead-5, his-4)
prep_on(came-2, forehead-5)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD gave)
        (NP (PRP it))
        (PRT (RP up)))
      (, ,)
      (VP (VBD drew)
        (NP (DT the) (NNS clothes))
        (PP (IN above)
          (NP (PRP$ his) (NN head))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADVP (RB soon) (RB fast))
        (ADJP (RB asleep))))
    (. .)))

nsubj(gave-2, He-1)
nsubj(drew-6, He-1)
root(ROOT-0, gave-2)
dobj(gave-2, it-3)
prt(gave-2, up-4)
conj_and(gave-2, drew-6)
det(clothes-8, the-7)
dobj(drew-6, clothes-8)
poss(head-11, his-10)
prep_above(drew-6, head-11)
cop(asleep-17, was-14)
advmod(fast-16, soon-15)
advmod(asleep-17, fast-16)
conj_and(gave-2, asleep-17)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (DT the) (JJ next) (NN day))
        (VP (VBD was)
          (ADJP (RB very) (JJ stormy)))))
    (, ,)
    (NP (NNP Diamond))
    (VP (VBD forgot)
      (NP (DT all))
      (PP (IN about)
        (NP (DT the) (NN hole)))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (JJ busy)
              (S
                (S
                  (VP (VBG making)
                    (NP (DT a) (NN cave))
                    (PP (IN by)
                      (NP
                        (NP (DT the) (NN side))
                        (PP (IN of)
                          (NP
                            (NP (PRP$ his) (NN mother) (POS 's))
                            (NN fire)))))
                    (PP (IN with)
                      (NP
                        (NP (DT a) (JJ broken) (NN chair))
                        (, ,)
                        (NP (DT a) (JJ three-legged) (NN stool))
                        (, ,)
                        (CC and)
                        (NP (DT a) (NN blanket))))))
                (, ,)
                (CC and)
                (S
                  (VP
                    (ADVP (RB then))
                    (VBG sitting)
                    (PP (IN in)
                      (NP (PRP it)))))))))))
    (. .)))

mark(stormy-7, Although-1)
det(day-4, the-2)
amod(day-4, next-3)
nsubj(stormy-7, day-4)
cop(stormy-7, was-5)
advmod(stormy-7, very-6)
advcl(forgot-10, stormy-7)
nsubj(forgot-10, Diamond-9)
root(ROOT-0, forgot-10)
dobj(forgot-10, all-11)
det(hole-14, the-13)
prep_about(forgot-10, hole-14)
mark(busy-19, for-16)
nsubj(busy-19, he-17)
cop(busy-19, was-18)
advcl(forgot-10, busy-19)
dep(busy-19, making-20)
det(cave-22, a-21)
dobj(making-20, cave-22)
det(side-25, the-24)
prep_by(making-20, side-25)
poss(mother-28, his-27)
poss(fire-30, mother-28)
prep_of(side-25, fire-30)
det(chair-34, a-32)
amod(chair-34, broken-33)
prep_with(making-20, chair-34)
det(stool-38, a-36)
amod(stool-38, three-legged-37)
prep_with(making-20, stool-38)
conj_and(chair-34, stool-38)
det(blanket-42, a-41)
prep_with(making-20, blanket-42)
conj_and(chair-34, blanket-42)
advmod(sitting-46, then-45)
dep(busy-19, sitting-46)
conj_and(making-20, sitting-46)
prep_in(sitting-46, it-48)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN mother))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (VP
        (VP (VBD discovered)
          (NP (PRP it)))
        (, ,)
        (CC and)
        (VP (VBD pasted)
          (NP
            (NP (DT a) (NN bit))
            (PP (IN of)
              (NP (JJ brown) (NN paper))))
          (PP (IN over)
            (NP (PRP it))))))
    (, ,) (IN so)
    (S
      (NP (DT that))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NNP Diamond))
          (VP (VBD had)
            (VP (VBN snuggled)
              (PRT (RP down))
              (NP (DT the) (JJ next) (NN night))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD had)
        (NP (DT no) (NN occasion)
          (S
            (VP (TO to)
              (VP (VB think)
                (PP (IN of)
                  (NP (PRP it)))))))))
    (. .)))

poss(mother-2, His-1)
nsubj(discovered-6, mother-2)
nsubj(pasted-10, mother-2)
advmod(discovered-6, however-4)
root(ROOT-0, discovered-6)
dobj(discovered-6, it-7)
conj_and(discovered-6, pasted-10)
det(bit-12, a-11)
dobj(pasted-10, bit-12)
amod(paper-15, brown-14)
prep_of(bit-12, paper-15)
prep_over(pasted-10, it-17)
dep(discovered-6, so-19)
nsubj(had-32, that-20)
advmod(snuggled-25, when-22)
nsubj(snuggled-25, Diamond-23)
aux(snuggled-25, had-24)
advcl(had-32, snuggled-25)
prt(snuggled-25, down-26)
det(night-29, the-27)
amod(night-29, next-28)
tmod(snuggled-25, night-29)
nsubj(had-32, he-31)
parataxis(discovered-6, had-32)
neg(occasion-34, no-33)
dobj(had-32, occasion-34)
aux(think-36, to-35)
vmod(occasion-34, think-36)
prep_of(think-36, it-38)

(ROOT
  (S
    (ADVP (RB Presently))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD lifted)
        (NP (PRP$ his) (NN head)))
      (CC and)
      (VP (VBD listened)))
    (. .)))

advmod(lifted-6, Presently-1)
advmod(lifted-6, however-3)
nsubj(lifted-6, he-5)
nsubj(listened-10, he-5)
root(ROOT-0, lifted-6)
poss(head-8, his-7)
dobj(lifted-6, head-8)
conj_and(lifted-6, listened-10)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ (MD could)
      (NP (DT that))
      (VP (VB be)
        (VP (VBG talking)
          (PP (TO to)
            (NP (PRP him))))))
    (. ?)))

dobj(talking-5, Who-1)
aux(talking-5, could-2)
nsubj(talking-5, that-3)
aux(talking-5, be-4)
root(ROOT-0, talking-5)
prep_to(talking-5, him-7)

(ROOT
  (S
    (NP (DT The) (NN wind))
    (VP (VBD was)
      (VP
        (VP (VBG rising)
          (ADVP (RB again)))
        (, ,)
        (CC and)
        (VP (VBG getting)
          (ADJP
            (ADJP (RB very) (JJ loud))
            (, ,)
            (CC and)
            (ADJP (JJ full)
              (PP (IN of)
                (NP (NNP rushes)
                  (CC and)
                  (NNP whistles))))))))
    (. .)))

det(wind-2, The-1)
nsubj(rising-4, wind-2)
nsubj(loud-10, wind-2)
aux(rising-4, was-3)
root(ROOT-0, rising-4)
advmod(rising-4, again-5)
dep(loud-10, getting-8)
advmod(loud-10, very-9)
conj_and(rising-4, loud-10)
conj_and(rising-4, full-13)
conj_and(loud-10, full-13)
prep_of(full-13, rushes-15)
prep_of(full-13, whistles-17)
conj_and(rushes-15, whistles-17)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (DT some) (NN one))
              (VP (VBD was)
                (VP (VBG talking))))))))
    (: --)
    (CC and)
    (ADVP (RB very) (RB near))
    (S
      (NP (PRP him))
      (, ,)
      (ADVP (RB too))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)))
    (. .)))

nsubj(sure-3, He-1)
cop(sure-3, was-2)
root(ROOT-0, sure-3)
det(one-5, some-4)
nsubj(talking-7, one-5)
aux(talking-7, was-6)
ccomp(sure-3, talking-7)
advmod(near-11, very-10)
advmod(sure-3, near-11)
conj_and(sure-3, near-11)
nsubj(was-17, him-12)
advmod(was-17, too-14)
nsubj(was-17, it-16)
ccomp(sure-3, was-17)
conj_and(sure-3, was-17)

(ROOT
  (S
    (S (CC But)
      (NP (PRP he))
      (VP (VBD was) (RB not)
        (ADJP (JJ frightened))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD had) (RB not)
              (ADVP (RB yet))
              (VP (VBN learned)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (VP (TO to)
                      (VP (VB be)))))))))))
    (: ;)
    (S (IN so)
      (NP (PRP he))
      (VP
        (VP (VBD sat)
          (PRT (RP up)))
        (CC and)
        (VP (VBD hearkened))))
    (. .)))

cc(frightened-5, But-1)
nsubj(frightened-5, he-2)
cop(frightened-5, was-3)
neg(frightened-5, not-4)
root(ROOT-0, frightened-5)
mark(learned-12, for-7)
nsubj(learned-12, he-8)
nsubj(be-15, he-8)
aux(learned-12, had-9)
neg(learned-12, not-10)
advmod(learned-12, yet-11)
advcl(frightened-5, learned-12)
advmod(be-15, how-13)
aux(be-15, to-14)
ccomp(learned-12, be-15)
xcomp(learned-12, be-15)
dep(sat-19, so-17)
nsubj(sat-19, he-18)
nsubj(hearkened-22, he-18)
parataxis(frightened-5, sat-19)
prt(sat-19, up-20)
parataxis(frightened-5, hearkened-22)
conj_and(sat-19, hearkened-22)

(ROOT
  (S
    (PP (IN At)
      (NP (JJ last)))
    (NP
      (NP (DT the) (NN voice))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (PRN (, ,)
            (SBAR (IN though)
              (FRAG
                (ADJP (RB quite) (JJ gentle))))
            (, ,))
          (VP (VBD sounded)
            (ADJP
              (NP (DT a) (RB little))
              (JJ angry)))))
      (, ,))
    (VP (VBD appeared)
      (S
        (VP (TO to)
          (VP (VB come)
            (PP (IN from)
              (NP
                (NP (DT the) (NN back))
                (PP (IN of)
                  (NP (DT the) (NN bed)))))))))
    (. .)))

prep_at(appeared-17, last-2)
det(voice-4, the-3)
nsubj(sounded-12, voice-4)
nsubj(appeared-17, voice-4)
nsubj(come-19, voice-4)
mark(gentle-10, though-8)
advmod(gentle-10, quite-9)
parataxis(sounded-12, gentle-10)
rcmod(voice-4, sounded-12)
det(little-14, a-13)
npadvmod(angry-15, little-14)
acomp(sounded-12, angry-15)
root(ROOT-0, appeared-17)
aux(come-19, to-18)
xcomp(appeared-17, come-19)
det(back-22, the-21)
prep_from(come-19, back-22)
det(bed-25, the-24)
prep_of(back-22, bed-25)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD crept)
        (ADVP (RB nearer))
        (PP (TO to)
          (NP (PRP it))))
      (, ,)
      (CC and)
      (VP (VBD laid)
        (NP (PRP$ his) (NN ear))
        (PP (IN against)
          (NP (DT the) (NN wall)))))
    (. .)))

nsubj(crept-2, He-1)
nsubj(laid-8, He-1)
root(ROOT-0, crept-2)
advmod(crept-2, nearer-3)
prep_to(crept-2, it-5)
conj_and(crept-2, laid-8)
poss(ear-10, his-9)
dobj(laid-8, ear-10)
det(wall-13, the-12)
prep_against(laid-8, wall-13)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD heard)
      (NP
        (NP (NN nothing))
        (PP (CC but)
          (NP
            (NP (DT the) (NN wind))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD sounded)
                  (ADJP (RB very) (JJ loud))
                  (ADVP (RB indeed)))))))))
    (. .)))

advmod(heard-3, Then-1)
nsubj(heard-3, he-2)
root(ROOT-0, heard-3)
dobj(heard-3, nothing-4)
prep(nothing-4, but-5)
det(wind-7, the-6)
pobj(but-5, wind-7)
nsubj(sounded-10, wind-7)
rcmod(wind-7, sounded-10)
advmod(loud-12, very-11)
acomp(sounded-10, loud-12)
advmod(sounded-10, indeed-13)

(ROOT
  (S
    (NP (DT The) (NN moment))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (SBAR (IN that)
      (S
        (NP (PRP he))
        (VP (VBD moved)
          (NP (PRP$ his) (NN head))
          (PP (IN from)
            (NP (DT the) (NN wall))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD heard)
      (NP (DT the) (NN voice))
      (S
        (ADVP (RB again))
        (, ,)
        (VP (VB close)
          (PP (TO to)
            (NP (PRP$ his) (NN ear))))))
    (. .)))

det(moment-2, The-1)
nsubj(heard-16, moment-2)
advmod(heard-16, however-4)
mark(moved-8, that-6)
nsubj(moved-8, he-7)
advcl(heard-16, moved-8)
poss(head-10, his-9)
dobj(moved-8, head-10)
det(wall-13, the-12)
prep_from(moved-8, wall-13)
nsubj(heard-16, he-15)
root(ROOT-0, heard-16)
det(voice-18, the-17)
dobj(heard-16, voice-18)
advmod(heard-16, again-19)
poss(ear-24, his-23)
prep_close_to(heard-16, ear-24)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD felt)
          (PRT (RP about))
          (PP (IN with)
            (NP (PRP$ his) (NN hand))))
        (, ,)
        (CC and)
        (VP (VBD came)
          (PP (IN upon)
            (NP
              (NP (DT the) (NN piece))
              (PP (IN of)
                (NP (NN paper))))))))
    (NP (PRP$ his) (NN mother))
    (VP (VBD had)
      (VP (VBN pasted)
        (PP (IN over)
          (NP (DT the) (NN hole)))))
    (. .)))

nsubj(felt-2, He-1)
nsubj(came-9, He-1)
dep(pasted-18, felt-2)
prt(felt-2, about-3)
poss(hand-6, his-5)
prep_with(felt-2, hand-6)
conj_and(felt-2, came-9)
dep(pasted-18, came-9)
det(piece-12, the-11)
prep_upon(came-9, piece-12)
prep_of(piece-12, paper-14)
poss(mother-16, his-15)
nsubj(pasted-18, mother-16)
aux(pasted-18, had-17)
root(ROOT-0, pasted-18)
det(hole-21, the-20)
prep_over(pasted-18, hole-21)

(ROOT
  (S
    (S
      (PP (IN Against)
        (NP (DT this)))
      (NP (PRP he))
      (VP (VBD laid)
        (NP (PRP$ his) (NN ear))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (VBD heard)
        (S
          (NP (DT the) (NN voice))
          (ADJP (RB quite) (RB distinctly)))))
    (. .)))

prep_against(laid-4, this-2)
nsubj(laid-4, he-3)
root(ROOT-0, laid-4)
poss(ear-6, his-5)
dobj(laid-4, ear-6)
advmod(heard-11, then-9)
nsubj(heard-11, he-10)
conj_and(laid-4, heard-11)
det(voice-13, the-12)
nsubj(distinctly-15, voice-13)
advmod(distinctly-15, quite-14)
xcomp(heard-11, distinctly-15)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was) (, ,)
        (PP
          (PP (IN in)
            (NP
              (NP (NN fact))
              (, ,)
              (NP
                (NP (DT a) (JJ little) (NN corner))
                (PP (IN of)
                  (NP (DT the) (NN paper))))))
          (ADVP (RB loose))
          (, ,)
          (CC and)
          (PP (IN through)
            (NP (DT that)))
          (, ,) (RB as)
          (PP (IN from)
            (NP (DT a) (NN mouth))))
        (PP (IN in)
          (NP (DT the) (NN wall)))))
    (, ,)
    (NP (DT the) (NN voice))
    (VP (VBD came))
    (. .)))

expl(was-2, There-1)
conj_and(was-2, was-2')
ccomp(came-29, was-2)
ccomp(came-29, was-2')
prep_in(was-2, fact-5)
det(corner-9, a-7)
amod(corner-9, little-8)
appos(fact-5, corner-9)
det(paper-12, the-11)
prep_of(corner-9, paper-12)
dep(was-2, loose-13)
prep_through(was-2', that-17)
conj(was-2, as-19)
det(mouth-22, a-21)
prep_from(was-2, mouth-22)
det(wall-25, the-24)
prep_in(was-2, wall-25)
det(voice-28, the-27)
nsubj(came-29, voice-28)
root(ROOT-0, came-29)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB mean)
        (NP
          (NP (, ,) (JJ little) (NN boy))
          (: --)
          (S
            (VP (VBG closing)
              (PRT (RP up))
              (NP (PRP$ my) (NN window)))))))
    (. ?) ('' '')))

dep(mean-5, What-2)
aux(mean-5, do-3)
nsubj(mean-5, you-4)
root(ROOT-0, mean-5)
amod(boy-8, little-7)
dobj(mean-5, boy-8)
dep(boy-8, closing-10)
prt(closing-10, up-11)
poss(window-13, my-12)
dobj(closing-10, window-13)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ window)))
    (. ?) ('' '')))

nsubj(window-3, What-2)
root(ROOT-0, window-3)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBD stuffed)
      (NP (NN hay))
      (PP (IN into)
        (NP
          (NP (PRP it))
          (NP (CD three) (NNS times))))
      (NP (JJ last) (NN night)))
    (. .)))

nsubj(stuffed-3, You-2)
root(ROOT-0, stuffed-3)
dobj(stuffed-3, hay-4)
prep_into(stuffed-3, it-6)
num(times-8, three-7)
dep(it-6, times-8)
amod(night-10, last-9)
tmod(stuffed-3, night-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB blow)
            (NP (PRP it))
            (PRT (RP out))
            (ADVP (RB again))
            (NP (CD three) (NNS times))))))
    (. .) ('' '')))

nsubj(had-2, I-1)
nsubj(blow-4, I-1)
root(ROOT-0, had-2)
aux(blow-4, to-3)
xcomp(had-2, blow-4)
dobj(blow-4, it-5)
prt(blow-4, out-6)
advmod(blow-4, again-7)
num(times-9, three-8)
dobj(blow-4, times-9)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB mean)
        (NP (DT this) (JJ little) (NN hole))))
    (. !)))

nsubj(mean-5, You-2)
aux(mean-5, ca-3)
neg(mean-5, n't-4)
root(ROOT-0, mean-5)
det(hole-8, this-6)
amod(hole-8, little-7)
dobj(mean-5, hole-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is) (RB n't)
        (NP (DT a) (NN window))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN hole))
          (PP (IN in)
            (NP (PRP$ my) (NN bed))))))
    (. .) ('' '')))

nsubj(window-5, It-1)
cop(window-5, is-2)
neg(window-5, n't-3)
det(window-5, a-4)
root(ROOT-0, window-5)
nsubj(hole-10, it-7)
cop(hole-10, 's-8)
det(hole-10, a-9)
parataxis(window-5, hole-10)
poss(bed-13, my-12)
prep_in(hole-10, bed-13)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB not)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (NP (DT a) (NN window))))))))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP (PRP$ my) (NN window)))))))
    (. .) ('' '')))

nsubj(say-5, I-2)
aux(say-5, did-3)
neg(say-5, not-4)
root(ROOT-0, say-5)
nsubj(window-9, it-6)
cop(window-9, was-7)
det(window-9, a-8)
ccomp(say-5, window-9)
nsubj(said-12, I-11)
parataxis(say-5, said-12)
nsubj(window-16, it-13)
cop(window-16, was-14)
poss(window-16, my-15)
ccomp(said-12, window-16)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP it))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (NP (DT a) (NN window))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (NNS windows))
            (VP (VBP are)
              (ADJP (JJ holes)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (PRT (RP out))
                      (PP (IN of)))))))))))
    (. .) ('' '')))

cc(window-8, But-2)
nsubj(window-8, it-3)
aux(window-8, ca-4)
neg(window-8, n't-5)
cop(window-8, be-6)
det(window-8, a-7)
root(ROOT-0, window-8)
mark(holes-13, because-10)
nsubj(holes-13, windows-11)
nsubj(see-15, windows-11)
cop(holes-13, are-12)
advcl(window-8, holes-13)
aux(see-15, to-14)
xcomp(holes-13, see-15)
prt(see-15, out-16)
prep(see-15, of-17)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (SBAR
        (WHADJP (RB just) (WP what))
        (S
          (NP (PRP I))
          (VP (VBD made)
            (NP (DT this) (NN window))
            (PP (IN for))))))
    (. .) ('' '')))

discourse('s-5, Well-2)
nsubj('s-5, that-4)
root(ROOT-0, 's-5)
advmod(what-7, just-6)
dep(made-9, what-7)
nsubj(made-9, I-8)
ccomp('s-5, made-9)
det(window-11, this-10)
dobj(made-9, window-11)
prep(made-9, for-12)

(ROOT
  (S (`` ``)
    (S (CC But)
      (NP (PRP you))
      (VP (VBP are)
        (ADVP (RB outside))))
    (: :)
    (S
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (VB want)
          (NP (DT a) (NN window)))))
    (. .) ('' '')))

cc(are-4, But-2)
nsubj(are-4, you-3)
root(ROOT-0, are-4)
advmod(are-4, outside-5)
nsubj(want-10, you-7)
aux(want-10, ca-8)
neg(want-10, n't-9)
parataxis(are-4, want-10)
det(window-12, a-11)
dobj(want-10, window-12)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (RB quite) (JJ mistaken)))
    (. .)))

nsubj(mistaken-5, You-2)
cop(mistaken-5, are-3)
advmod(mistaken-5, quite-4)
root(ROOT-0, mistaken-5)

(ROOT
  (S
    (S
      (NP (NNP Windows))
      (VP (VBP are)
        (S
          (VP (TO to)
            (VP (VB see)
              (PRT (RP out))
              (PP (IN of)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP say))
    (. .)))

nsubj(are-2, Windows-1)
nsubj(see-4, Windows-1)
ccomp(say-9, are-2)
aux(see-4, to-3)
xcomp(are-2, see-4)
prt(see-4, out-5)
prep(see-4, of-6)
nsubj(say-9, you-8)
root(ROOT-0, say-9)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP I))
      (VP (VBP 'm)
        (PP (IN in)
          (NP (PRP$ my) (NN house)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP want)
        (S
          (NP (NNS windows))
          (VP (TO to)
            (VP (VB see)
              (PRT (RP out))
              (PP (IN of)
                (NP (PRP it))))))))
    (. .) ('' '')))

discourse('m-4, Well-1)
nsubj('m-4, I-3)
root(ROOT-0, 'm-4)
poss(house-7, my-6)
prep_in('m-4, house-7)
nsubj(want-11, I-10)
conj_and('m-4, want-11)
dobj(want-11, windows-12)
nsubj(see-14, windows-12)
aux(see-14, to-13)
xcomp(want-11, see-14)
prep_out_of(see-14, it-17)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (VBP 've)
      (VP (VBN made)
        (NP (DT a) (NN window))
        (PP (IN into)
          (NP (PRP$ my) (NN bed)))))
    (. .) ('' '')))

cc(made-5, But-2)
nsubj(made-5, you-3)
aux(made-5, 've-4)
root(ROOT-0, made-5)
det(window-7, a-6)
dobj(made-5, window-7)
poss(bed-10, my-9)
prep_into(made-5, bed-10)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP$ your) (NN mother))
      (VP (VBZ has)
        (VP (VBN got)
          (NP (CD three) (NNS windows))
          (PP (IN into)
            (NP (PRP$ my) (NN dancing) (NN room))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (NP (CD three))
        (PP (IN into)
          (NP (PRP$ my) (NN garret)))))
    (. .) ('' '')))

discourse(got-7, Well-2)
poss(mother-5, your-4)
nsubj(got-7, mother-5)
aux(got-7, has-6)
root(ROOT-0, got-7)
num(windows-9, three-8)
dobj(got-7, windows-9)
poss(room-13, my-11)
nn(room-13, dancing-12)
prep_into(got-7, room-13)
nsubj(have-17, you-16)
conj_and(got-7, have-17)
dobj(have-17, three-18)
poss(garret-21, my-20)
prep_into(have-17, garret-21)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBD heard)
      (SBAR
        (S
          (NP (NN father))
          (VP (VBP say)
            (PRN (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP$ my) (NN mother))
                  (VP (VBD wanted)
                    (S
                      (NP (PRP him))
                      (VP (TO to)
                        (VP (VB make)
                          (NP (DT a) (NN window))
                          (PP (IN through)
                            (NP (DT the) (NN wall)))
                          (, ,)
                          (SBAR (IN that)
                            (S
                              (NP (PRP it))
                              (VP (VBD was)
                                (PP (IN against)
                                  (NP (DT the) (NN law))))))))))))
              (, ,))
            (SBAR (IN for)
              (S
                (NP (PRP it))
                (VP (MD would)
                  (VP (VB look)
                    (PP (IN into)
                      (NP
                        (NP (NNP Mr.) (NNP Dyves) (POS 's))
                        (NN garden)))))))))))
    (. .) ('' '')))

cc(heard-4, But-2)
nsubj(heard-4, I-3)
root(ROOT-0, heard-4)
nsubj(say-6, father-5)
ccomp(heard-4, say-6)
advmod(wanted-11, when-8)
poss(mother-10, my-9)
nsubj(wanted-11, mother-10)
parataxis(say-6, wanted-11)
dobj(wanted-11, him-12)
nsubj(make-14, him-12)
aux(make-14, to-13)
xcomp(wanted-11, make-14)
det(window-16, a-15)
dobj(make-14, window-16)
det(wall-19, the-18)
prep_through(make-14, wall-19)
mark(was-23, that-21)
nsubj(was-23, it-22)
ccomp(make-14, was-23)
det(law-26, the-25)
prep_against(was-23, law-26)
mark(look-31, for-28)
nsubj(look-31, it-29)
aux(look-31, would-30)
advcl(say-6, look-31)
nn(Dyves-34, Mr.-33)
poss(garden-36, Dyves-34)
prep_into(look-31, garden-36)

(ROOT
  (S
    (NP (DT The) (NN voice))
    (VP (VBD laughed))
    (. .)))

det(voice-2, The-1)
nsubj(laughed-3, voice-2)
root(ROOT-0, laughed-3)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN law))
    (VP (MD would)
      (VP (VB have)
        (NP (DT some) (NN trouble)
          (S
            (VP (TO to)
              (VP (VB catch)
                (NP (PRP me))))))))
    (. !) ('' '')))

det(law-3, The-2)
nsubj(have-5, law-3)
aux(have-5, would-4)
root(ROOT-0, have-5)
det(trouble-7, some-6)
dobj(have-5, trouble-7)
aux(catch-9, to-8)
vmod(trouble-7, catch-9)
dobj(catch-9, me-10)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD said))
    (. .)))

nsubj(said-2, it-1)
root(ROOT-0, said-2)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBZ 's) (RB not)
            (ADJP (JJ right)))))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (SBAR (`` ``)
        (WHNP (WDT that))
        (S
          (VP (VBZ 's)
            (NP (DT no) (NN matter))))))
    (. .)))

cc(know-10, But-2)
mark(right-7, if-3)
nsubj(right-7, it-4)
cop(right-7, 's-5)
neg(right-7, not-6)
advcl(know-10, right-7)
nsubj(know-10, you-9)
ccomp(said-13, know-10)
root(ROOT-0, said-13)
nsubj(said-13, Diamond-14)
nsubj(matter-20, Diamond-14)
cop(matter-20, 's-18)
neg(matter-20, no-19)
rcmod(Diamond-14, matter-20)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD should) (RB n't)
      (VP (VB do)
        (NP (PRP it))))
    (. .) ('' '')))

nsubj(do-4, You-1)
aux(do-4, should-2)
neg(do-4, n't-3)
root(ROOT-0, do-4)
dobj(do-4, it-5)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (RB so) (JJ tall)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP am)
                (PP (IN above)
                  (NP (DT that) (NN law)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN voice))
    (. .)))

nsubj(tall-5, I-2)
cop(tall-5, am-3)
advmod(tall-5, so-4)
ccomp(said-13, tall-5)
nsubj(am-7, I-6)
ccomp(tall-5, am-7)
det(law-10, that-9)
prep_above(am-7, law-10)
root(ROOT-0, said-13)
det(voice-15, the-14)
nsubj(said-13, voice-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (MD must)
        (VP (VB have)
          (NP (DT a) (JJ tall) (NN house))
          (, ,)
          (ADVP (RB then)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(have-4, You-2)
aux(have-4, must-3)
ccomp(said-12, have-4)
det(house-7, a-5)
amod(house-7, tall-6)
dobj(have-4, house-7)
advmod(have-4, then-9)
root(ROOT-0, said-12)
nsubj(said-12, Diamond-13)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes)))
    (: ;)
    (S
      (NP
        (NP (DT a) (JJ tall) (NN house))
        (: :)
        (NP (DT the) (NNS clouds)))
      (VP (VBP are)
        (PP (IN inside)
          (NP (PRP it)))))
    (. .) ('' '')))

dep(are-10, Yes-2)
det(house-6, a-4)
amod(house-6, tall-5)
nsubj(are-10, house-6)
det(clouds-9, the-8)
dep(house-6, clouds-9)
root(ROOT-0, are-10)
prep_inside(are-10, it-12)

(ROOT
  (S (`` ``)
    (VP (VB Dear)
      (NP (PRP me)))
    (. !) ('' '')))

root(ROOT-0, Dear-2)
dobj(Dear-2, me-3)

(ROOT
  (S
    (VP
      (VP (VBD said)
        (NP (NNP Diamond)))
      (, ,)
      (CC and)
      (VP (VBD thought)
        (NP (DT a) (NN minute))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)
conj_and(said-1, thought-5)
det(minute-7, a-6)
dobj(thought-5, minute-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP think))
      (, ,)
      (ADVP (RB then)))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (ADVP (RB hardly))
      (VP (VB expect)
        (S
          (NP (PRP me))
          (VP (TO to)
            (VP (VB keep)
              (NP (DT a) (NN window))
              (PP (IN in)
                (NP
                  (NP (PRP$ my) (NN bed))
                  (PP (IN for)
                    (NP (PRP you))))))))))
    (. .)))

nsubj(think-3, I-2)
ccomp(expect-10, think-3)
advmod(think-3, then-5)
nsubj(expect-10, you-7)
aux(expect-10, can-8)
advmod(expect-10, hardly-9)
root(ROOT-0, expect-10)
dobj(expect-10, me-11)
nsubj(keep-13, me-11)
aux(keep-13, to-12)
xcomp(expect-10, keep-13)
det(window-15, a-14)
dobj(keep-13, window-15)
poss(bed-18, my-17)
prep_in(keep-13, bed-18)
prep_for(bed-18, you-20)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do) (RB n't)
      (NP (PRP you))
      (VP (VB make)
        (NP (DT a) (NN window))
        (PP (IN into)
          (NP
            (NP (NNP Mr.) (NNP Dyves) (POS 's))
            (NN bed)))))
    (. ?) ('' '')))

advmod(make-5, Why-1)
aux(make-5, do-2)
neg(make-5, n't-3)
nsubj(make-5, you-4)
root(ROOT-0, make-5)
det(window-7, a-6)
dobj(make-5, window-7)
nn(Dyves-10, Mr.-9)
poss(bed-12, Dyves-10)
prep_into(make-5, bed-12)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NN Nobody))
      (VP (VBZ makes)
        (NP (DT a) (NN window))
        (PP (IN into)
          (NP (DT an) (NN ash-pit)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (DT the) (NN voice))
      (, ,)
      (ADJP (RB rather) (RB sadly)))
    (. .)))

nsubj(makes-3, Nobody-2)
ccomp(said-11, makes-3)
det(window-5, a-4)
dobj(makes-3, window-5)
det(ash-pit-8, an-7)
prep_into(makes-3, ash-pit-8)
root(ROOT-0, said-11)
det(voice-13, the-12)
nsubj(said-11, voice-13)
advmod(sadly-16, rather-15)
amod(voice-13, sadly-16)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP like)
      (S
        (VP (TO to)
          (VP (VB see)
            (NP (JJ nice) (NNS things))
            (PRT (RP out))
            (PP (IN of)
              (NP (PRP$ my) (NNS windows)))))))
    (. .) ('' '')))

nsubj(like-3, I-2)
nsubj(see-5, I-2)
root(ROOT-0, like-3)
aux(see-5, to-4)
xcomp(like-3, see-5)
amod(things-7, nice-6)
dobj(see-5, things-7)
poss(windows-11, my-10)
prep_out_of(see-5, windows-11)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP he))
    (VP (MD must)
      (VP (VB have)
        (NP
          (NP (DT a) (JJ nicer) (NN bed))
          (SBAR (IN than)
            (S
              (NP (PRP I))
              (VP (VBP have)))))
        (, ,)
        (SBAR (IN though)
          (S
            (NP (PRP mine))
            (VP (VBZ is)
              (ADJP
                (ADJP (RB very) (JJ nice))
                (: --)
                (ADJP (RB so) (JJ nice)))
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (MD could) (RB n't)
                    (VP (VB wish)
                      (NP (DT a) (JJR better)))))))))))
    (. .) ('' '')))

cc(have-5, But-2)
nsubj(have-5, he-3)
aux(have-5, must-4)
root(ROOT-0, have-5)
det(bed-8, a-6)
amod(bed-8, nicer-7)
dobj(have-5, bed-8)
mark(have-11, than-9)
nsubj(have-11, I-10)
advcl(bed-8, have-11)
mark(nice-17, though-13)
nsubj(nice-17, mine-14)
cop(nice-17, is-15)
advmod(nice-17, very-16)
advcl(have-5, nice-17)
advmod(nice-20, so-19)
dep(nice-17, nice-20)
mark(wish-25, that-21)
nsubj(wish-25, I-22)
aux(wish-25, could-23)
neg(wish-25, n't-24)
ccomp(nice-17, wish-25)
det(better-27, a-26)
dobj(wish-25, better-27)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's) (RB not)
        (NP
          (NP (DT the) (NN bed))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP care)
                (PRT (RP about))))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ is)
              (PP (IN in)
                (NP (PRP it))))))))
    (. .)))

nsubj(bed-6, It-2)
cop(bed-6, 's-3)
neg(bed-6, not-4)
det(bed-6, the-5)
root(ROOT-0, bed-6)
nsubj(care-8, I-7)
rcmod(bed-6, care-8)
prt(care-8, about-9)
nsubj('s-12, it-11)
parataxis(bed-6, 's-12)
nsubj(is-14, what-13)
ccomp('s-12, is-14)
prep_in(is-14, it-16)

(ROOT
  (S (: --)
    (CC But)
    (NP (PRP you))
    (VP
      (ADVP (RB just))
      (VBP open)
      (NP (DT that) (NN window)))
    (. .) ('' '')))

conj_but(open-5, you-3)
nsubj(open-5, you-3)
advmod(open-5, just-4)
root(ROOT-0, open-5)
det(window-7, that-6)
dobj(open-5, window-7)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (NN mother))
    (VP (VBZ says)
      (S
        (S
          (NP (PRP I))
          (VP (MD should) (RB n't)
            (VP (VB be)
              (ADJP (JJ disobliging)))))
        (: ;)
        (CC but)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (RB rather) (JJ hard))))))
    (. .)))

discourse(says-5, Well-2)
nsubj(says-5, mother-4)
root(ROOT-0, says-5)
nsubj(disobliging-10, I-6)
aux(disobliging-10, should-7)
neg(disobliging-10, n't-8)
cop(disobliging-10, be-9)
dep(says-5, disobliging-10)
nsubj(hard-16, it-13)
cop(hard-16, 's-14)
advmod(hard-16, rather-15)
dep(says-5, hard-16)
conj_but(disobliging-10, hard-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see)
      (SBAR
        (S
          (NP (DT the) (NN north) (NN wind))
          (VP (MD will)
            (VP (VB blow)
              (ADVP (RB right)
                (PP (IN in)
                  (NP (PRP$ my) (NN face))))
              (SBAR (IN if)
                (S
                  (NP (PRP I))
                  (VP (VBP do)))))))))
    (. .) ('' '')))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
det(wind-5, the-3)
nn(wind-5, north-4)
nsubj(blow-7, wind-5)
aux(blow-7, will-6)
ccomp(see-2, blow-7)
advmod(blow-7, right-8)
poss(face-11, my-10)
prep_in(right-8, face-11)
mark(do-14, if-12)
nsubj(do-14, I-13)
advcl(blow-7, do-14)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (NP (DT the) (NNP North) (NN Wind)))
    (. .) ('' '')))

nsubj(Wind-6, I-2)
cop(Wind-6, am-3)
det(Wind-6, the-4)
nn(Wind-6, North-5)
root(ROOT-0, Wind-6)

(ROOT
  (S (`` ``)
    (VP (VB O-o-oh))
    (. !) ('' '')))

root(ROOT-0, O-o-oh-2)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Diamond))
      (, ,)
      (ADVP (RB thoughtfully)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)
advmod(said-1, thoughtfully-4)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Then))
    (SQ (MD will)
      (NP (PRP you))
      (VP (VB promise)
        (S (RB not)
          (VP (TO to)
            (VP (VB blow)
              (PP (IN on)
                (NP (PRP$ my) (NN face)))
              (SBAR (IN if)
                (S
                  (NP (PRP I))
                  (VP (VBP open)
                    (NP (PRP$ your) (NN window))))))))))
    (. ?) ('' '')))

advmod(promise-5, Then-2)
aux(promise-5, will-3)
nsubj(promise-5, you-4)
nsubj(blow-8, you-4)
root(ROOT-0, promise-5)
neg(blow-8, not-6)
aux(blow-8, to-7)
xcomp(promise-5, blow-8)
poss(face-11, my-10)
prep_on(blow-8, face-11)
mark(open-14, if-12)
nsubj(open-14, I-13)
advcl(blow-8, open-14)
poss(window-16, your-15)
dobj(open-14, window-16)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB promise)
        (NP (DT that))))
    (. .) ('' '')))

nsubj(promise-5, I-2)
aux(promise-5, ca-3)
neg(promise-5, n't-4)
root(ROOT-0, promise-5)
dobj(promise-5, that-6)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (MD 'll)
      (VP (VB give)
        (NP (PRP me))
        (NP (DT the) (NN toothache))))
    (. .)))

cc(give-5, But-2)
nsubj(give-5, you-3)
aux(give-5, 'll-4)
root(ROOT-0, give-5)
iobj(give-5, me-6)
det(toothache-8, the-7)
dobj(give-5, toothache-8)

(ROOT
  (S
    (NP (NNP Mother) (POS 's))
    (VP (VBD got)
      (NP (PRP it))
      (ADVP (RB already)))
    (. .) ('' '')))

nsubj(got-3, Mother-1)
possessive(Mother-1, 's-2)
root(ROOT-0, got-3)
dobj(got-3, it-4)
advmod(got-3, already-5)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHNP (WP what))
    (SQ (VBZ 's)
      (S
        (VP (TO to)
          (VP (VB become)
            (PP (IN of)
              (NP (PRP me)))
            (PP (IN without)
              (NP (DT a) (NN window)))))))
    (. ?) ('' '')))

cc(become-6, But-2)
dep(become-6, what-3)
cop(become-6, 's-4)
aux(become-6, to-5)
root(ROOT-0, become-6)
prep_of(become-6, me-8)
det(window-11, a-10)
prep_without(become-6, window-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP (VB know)))))))
    (. .)))

nsubj(sure-4, I-2)
cop(sure-4, 'm-3)
root(ROOT-0, sure-4)
nsubj(know-8, I-5)
aux(know-8, do-6)
neg(know-8, n't-7)
ccomp(sure-4, know-8)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP say)))))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD will)
            (VP (VB be)
              (ADJP (JJR worse))
              (PP (IN for)
                (NP (PRP me)))
              (SBAR (IN than)
                (FRAG
                  (PP (IN for)
                    (NP (PRP you))))))))))
    (. .) ('' '')))

nsubj(is-4, All-1)
nsubj(say-3, I-2)
rcmod(All-1, say-3)
root(ROOT-0, is-4)
nsubj(worse-9, it-6)
aux(worse-9, will-7)
cop(worse-9, be-8)
ccomp(is-4, worse-9)
prep_for(worse-9, me-11)
mark(for-13, than-12)
advcl(worse-9, for-13)
pobj(for-13, you-14)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (PRP it))
      (VP (MD will) (RB not)))
    (. .)))

dep(will-5, No-2)
nsubj(will-5, it-4)
root(ROOT-0, will-5)
neg(will-5, not-6)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD shall) (RB not)
        (VP (VB be)
          (NP
            (NP (DT the) (JJR worse))
            (PP (IN for)
              (NP (PRP it)))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP promise)
        (S
          (NP (PRP you))
          (NP (DT that)))))
    (. .)))

nsubj(worse-6, You-1)
aux(worse-6, shall-2)
neg(worse-6, not-3)
cop(worse-6, be-4)
det(worse-6, the-5)
root(ROOT-0, worse-6)
prep_for(worse-6, it-8)
nsubj(promise-11, I-10)
parataxis(worse-6, promise-11)
nsubj(that-13, you-12)
xcomp(promise-11, that-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (VP (VB be)
        (NP
          (NP (RB much) (DT the) (JJ better))
          (PP (IN for)
            (NP (PRP it))))))
    (. .)))

nsubj(better-6, You-1)
aux(better-6, will-2)
cop(better-6, be-3)
advmod(better-6, much-4)
det(better-6, the-5)
root(ROOT-0, better-6)
prep_for(better-6, it-8)

(ROOT
  (S
    (ADVP (RB Just))
    (NP (PRP you))
    (VP (VBP believe)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP
            (VP (VBP say))
            (, ,)
            (CC and)
            (VP (VBP do)
              (SBAR (IN as)
                (S
                  (NP (PRP I))
                  (VP (VBP tell)
                    (NP (PRP you))))))))))
    (. .) ('' '')))

advmod(believe-3, Just-1)
nsubj(believe-3, you-2)
root(ROOT-0, believe-3)
dobj(say-6, what-4)
nsubj(say-6, I-5)
nsubj(do-9, I-5)
ccomp(believe-3, say-6)
ccomp(believe-3, do-9)
conj_and(say-6, do-9)
mark(tell-12, as-10)
nsubj(tell-12, I-11)
advcl(do-9, tell-12)
dobj(tell-12, you-13)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP I))
      (VP (MD can)
        (VP (VB pull)
          (NP (DT the) (NNS clothes))
          (PP (IN over)
            (NP (PRP$ my) (NN head))))))
    (, ,) ('' '')
    (VP (VBD said)
      (SBAR
        (S
          (UCP
            (NP (NNP Diamond))
            (, ,)
            (CC and)
            (VP (VBG feeling)
              (PP (IN with)
                (NP (PRP$ his) (JJ little) (JJ sharp) (NNS nails)))))
          (, ,)
          (NP (PRP he))
          (VP
            (VP (VBD got)
              (NP
                (NP (NN hold))
                (PP (IN of)
                  (NP
                    (NP (DT the) (JJ open) (NN edge))
                    (PP (IN of)
                      (NP (DT the) (NN paper)))))))
            (CC and)
            (VP (VBD tore)
              (NP (PRP it))
              (PRT (RP off))
              (PP (IN at)
                (NP (RB once))))))))
    (. .)))

discourse(pull-6, Well-2)
nsubj(pull-6, I-4)
aux(pull-6, can-5)
ccomp(said-14, pull-6)
det(clothes-8, the-7)
dobj(pull-6, clothes-8)
poss(head-11, my-10)
prep_over(pull-6, head-11)
root(ROOT-0, said-14)
nsubj(got-26, Diamond-15)
nsubj(tore-36, Diamond-15)
conj_and(Diamond-15, feeling-18)
vmod(Diamond-15, feeling-18)
nsubj(got-26, feeling-18)
poss(nails-23, his-20)
amod(nails-23, little-21)
amod(nails-23, sharp-22)
prep_with(feeling-18, nails-23)
nsubj(got-26, he-25)
ccomp(said-14, got-26)
dobj(got-26, hold-27)
det(edge-31, the-29)
amod(edge-31, open-30)
prep_of(hold-27, edge-31)
det(paper-34, the-33)
prep_of(edge-31, paper-34)
ccomp(said-14, tore-36)
conj_and(got-26, tore-36)
dobj(tore-36, it-37)
prt(tore-36, off-38)
prep(tore-36, at-39)
pobj(at-39, once-40)

(ROOT
  (S
    (NP (NNP In))
    (VP
      (VP (VBD came)
        (NP
          (NP (DT a) (JJ long) (NN whistling) (NN spear))
          (PP (IN of)
            (NP (NN cold)))))
      (, ,)
      (CC and)
      (VP (VBD struck)
        (NP (PRP$ his) (JJ little) (JJ naked) (NN chest))))
    (. .)))

nsubj(came-2, In-1)
nsubj(struck-11, In-1)
root(ROOT-0, came-2)
det(spear-6, a-3)
amod(spear-6, long-4)
nn(spear-6, whistling-5)
dobj(came-2, spear-6)
prep_of(spear-6, cold-8)
conj_and(came-2, struck-11)
poss(chest-15, his-12)
amod(chest-15, little-13)
amod(chest-15, naked-14)
dobj(struck-11, chest-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD scrambled))
        (CC and)
        (VP (VBD tumbled)
          (PRT (RP in))
          (PP (IN under)
            (NP (DT the) (NNS bedclothes))))
        (, ,)
        (CC and)
        (VP (VBD covered)
          (NP (PRP himself))
          (PRT (RP up)))))
    (: :)
    (S
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (DT no) (NN paper))
            (PP
              (ADVP (RB now))
              (IN between)
              (NP
                (NP (PRP him))
                (CC and)
                (NP (DT the) (NN voice)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD felt)
            (NP (DT a) (JJ little)))
          (: --) (RB not)
          (VP (VBD frightened)
            (ADVP (RB exactly))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBD told)
        (NP (PRP you))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had) (RB not)
              (VP (VBN learned)
                (ADVP (DT that)
                  (CC yet))))))))
    (: --)
    (CC but)
    (S
      (SBAR (RB rather)
        (S
          (NP
            (NP (NN queer))
            (: ;)
            (SBAR
              (WHPP (IN for)
                (WHNP (WP what)))
              (S
                (NP
                  (NP (DT a) (JJ strange) (NN person))
                  (NP (DT this) (JJ North) (NN Wind)))
                (VP (MD must)
                  (VP (VB be)
                    (SBAR (IN that)
                      (S
                        (VP (VBD lived)
                          (PP (IN in)
                            (NP (DT the) (JJ great) (NN house))))))))))
            (: --))
          (`` ``)
          (VP (VBD called)
            (NP (NNP Out-of-Doors)))))
      (, ,)
      (NP (PRP I))
      (VP
        (VP (VBP suppose))
        (, ,) ('' '')
        (VP (VBD thought)
          (NP (NNP Diamond)))
        (: --)
        (CC and)
        (VP (VBD made)
          (NP (NNS windows))
          (PP (IN into)
            (NP
              (NP (NNS people) (POS 's))
              (NNS beds))))))
    (. !)))

nsubj(scrambled-2, He-1)
nsubj(tumbled-4, He-1)
nsubj(covered-11, He-1)
root(ROOT-0, scrambled-2)
conj_and(scrambled-2, tumbled-4)
prt(tumbled-4, in-5)
det(bedclothes-8, the-7)
prep_under(tumbled-4, bedclothes-8)
conj_and(scrambled-2, covered-11)
dobj(covered-11, himself-12)
prt(covered-11, up-13)
expl(was-16, there-15)
conj_and(scrambled-2, was-16)
neg(paper-18, no-17)
nsubj(was-16, paper-18)
advmod(paper-18, now-19)
prep_between(paper-18, him-21)
det(voice-24, the-23)
prep_between(paper-18, voice-24)
conj_and(him-21, voice-24)
nsubj(felt-28, he-27)
conj_and(scrambled-2, felt-28)
conj_and(was-16, felt-28)
det(little-30, a-29)
dobj(felt-28, little-30)
neg(felt-28, not-32)
dep(felt-28, frightened-33)
advmod(frightened-33, exactly-34)
nsubj(told-37, I-36)
conj_and(scrambled-2, told-37)
dobj(told-37, you-38)
nsubj(learned-42, he-39)
aux(learned-42, had-40)
neg(learned-42, not-41)
dep(told-37, learned-42)
dep(yet-44, that-43)
advmod(learned-42, yet-44)
advmod(called-68, rather-47)
prep_for(be-59, queer-48)
nsubj(called-68, queer-48)
det(person-54, a-52)
amod(person-54, strange-53)
nsubj(be-59, person-54)
det(Wind-57, this-55)
amod(Wind-57, North-56)
dep(person-54, Wind-57)
aux(be-59, must-58)
rcmod(queer-48, be-59)
mark(lived-61, that-60)
ccomp(be-59, lived-61)
det(house-65, the-63)
amod(house-65, great-64)
prep_in(lived-61, house-65)
advcl(suppose-72, called-68)
dobj(called-68, Out-of-Doors-69)
nsubj(suppose-72, I-71)
nsubj(thought-75, I-71)
nsubj(made-79, I-71)
conj_but(scrambled-2, suppose-72)
conj_but(scrambled-2, thought-75)
conj_and(suppose-72, thought-75)
dobj(thought-75, Diamond-76)
conj_but(scrambled-2, made-79)
conj_and(suppose-72, made-79)
dobj(made-79, windows-80)
poss(beds-84, people-82)
prep_into(made-79, beds-84)

(ROOT
  (S (CC But)
    (S
      (NP (DT the) (NN voice))
      (VP (VBD began)
        (ADVP (RB again))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD could)
        (VP (VB hear)
          (NP (PRP it))
          (ADVP (RB quite))
          (ADVP (RB plainly))
          (, ,)
          (PP (RB even) (IN with)
            (NP
              (NP (PRP$ his) (NN head))
              (PP (IN under)
                (NP (DT the) (NNS bed-clothes))))))))
    (. .)))

det(voice-3, the-2)
nsubj(began-4, voice-3)
root(ROOT-0, began-4)
advmod(began-4, again-5)
nsubj(hear-10, he-8)
aux(hear-10, could-9)
conj_and(began-4, hear-10)
dobj(hear-10, it-11)
advmod(hear-10, quite-12)
advmod(hear-10, plainly-13)
advmod(hear-10, even-15)
poss(head-18, his-17)
prep_with(hear-10, head-18)
det(bed-clothes-21, the-20)
prep_under(head-18, bed-clothes-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a)
          (ADJP (RB still) (RBR more) (JJ gentle))
          (NN voice))
        (ADVP (RB now)))
      (, ,)
      (SBAR (IN although)
        (S
          (NP
            (NP (CD six) (NNS times))
            (ADJP
              (ADJP (RB as) (JJ large)
                (CC and)
                (JJ loud))
              (SBAR (IN as)
                (S
                  (S
                    (NP (PRP it))
                    (VP (VBD had)
                      (VP (VBN been))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (PRP he))
                    (VP (VBD thought)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (VBD sounded)
                            (NP (DT a) (JJ little))
                            (PP (IN like)
                              (NP (PRP$ his) (NN mother))))))))))))
          (VP (VBZ 's)))))
    (. .)))

nsubj(voice-7, It-1)
cop(voice-7, was-2)
det(voice-7, a-3)
advmod(gentle-6, still-4)
advmod(gentle-6, more-5)
amod(voice-7, gentle-6)
root(ROOT-0, voice-7)
advmod(voice-7, now-8)
mark('s-32, although-10)
num(times-12, six-11)
nsubj('s-32, times-12)
advmod(large-14, as-13)
amod(times-12, large-14)
amod(times-12, loud-16)
conj_and(large-14, loud-16)
mark(been-20, as-17)
nsubj(been-20, it-18)
aux(been-20, had-19)
dep(large-14, been-20)
nsubj(thought-24, he-23)
dep(large-14, thought-24)
conj_and(been-20, thought-24)
nsubj(sounded-26, it-25)
ccomp(thought-24, sounded-26)
det(little-28, a-27)
dobj(sounded-26, little-28)
poss(mother-31, his-30)
prep_like(sounded-26, mother-31)
advcl(voice-7, 's-32)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (PRP$ your) (NN name))
        (, ,)
        (NP (JJ little) (NN boy))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
poss(name-5, your-4)
nsubj(What-2, name-5)
amod(boy-8, little-7)
appos(name-5, boy-8)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, it-1)
root(ROOT-0, asked-2)

(ROOT
  (SINV (`` ``)
    (FRAG
      (NP (NNP Diamond)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (PP (IN under)
        (NP (DT the) (NNS bed-clothes))))
    (. .)))

dep(answered-5, Diamond-2)
root(ROOT-0, answered-5)
nsubj(answered-5, Diamond-6)
det(bed-clothes-10, the-9)
prep_under(Diamond-6, bed-clothes-10)

(ROOT
  (S (`` ``)
    (X (WP What))
    (NP (DT a) (JJ funny))
    (VP (VBP name))
    (. !) ('' '')))

dep(name-5, What-2)
det(funny-4, a-3)
nsubj(name-5, funny-4)
root(ROOT-0, name-5)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP (DT a)
          (ADJP (RB very) (JJ nice))
          (NN name))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (PRP$ its) (NN owner))
    (. .)))

nsubj(name-7, It-2)
cop(name-7, 's-3)
det(name-7, a-4)
advmod(nice-6, very-5)
amod(name-7, nice-6)
ccomp(returned-10, name-7)
root(ROOT-0, returned-10)
poss(owner-12, its-11)
nsubj(returned-10, owner-12)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (NP (DT that)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN voice))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
ccomp(said-9, know-5)
dobj(know-5, that-6)
root(ROOT-0, said-9)
det(voice-11, the-10)
nsubj(said-9, voice-11)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Well))
      (, ,)
      (NP (PRP I))
      (VP (VBP do)))
    (, ,) ('' '')
    (VP (VBD retorted))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (NP (DT a) (JJ little) (NN rudely)))
    (. .)))

advmod(do-5, Well-2)
nsubj(do-5, I-4)
ccomp(retorted-8, do-5)
root(ROOT-0, retorted-8)
nsubj(retorted-8, Diamond-9)
det(rudely-13, a-11)
amod(rudely-13, little-12)
appos(Diamond-9, rudely-13)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP know)
            (PP (TO to)
              (SBAR
                (WHNP (WP whom))
                (S
                  (NP (PRP you))
                  (VP (VBP are)
                    (VP (VBG speaking))))))))))
    (. !) ('' '')))

root(ROOT-0, Do-2)
nsubj(know-4, you-3)
ccomp(Do-2, know-4)
dobj(speaking-9, whom-6)
nsubj(speaking-9, you-7)
aux(speaking-9, are-8)
prepc_to(know-4, speaking-9)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

dep(said-5, No-2)
root(ROOT-0, said-5)
nsubj(said-5, Diamond-6)

(ROOT
  (S (CC And)
    (ADVP (RB indeed))
    (NP (PRP he))
    (VP (VBD did) (RB not))
    (. .)))

cc(did-4, And-1)
advmod(did-4, indeed-2)
nsubj(did-4, he-3)
root(ROOT-0, did-4)
neg(did-4, not-5)

(ROOT
  (S
    (SBAR (IN For)
      (S
        (VP (TO to)
          (VP (VB know)
            (NP
              (NP (DT a) (NN person) (POS 's))
              (NN name))))))
    (VP (VBZ is) (RB not)
      (ADVP (RB always))
      (S
        (VP (TO to)
          (VP (VB know)
            (NP
              (NP (DT the) (NN person) (POS 's))
              (NN self))))))
    (. .)))

mark(know-3, For-1)
aux(know-3, to-2)
csubj(is-8, know-3)
det(person-5, a-4)
poss(name-7, person-5)
dobj(know-3, name-7)
root(ROOT-0, is-8)
neg(is-8, not-9)
advmod(is-8, always-10)
aux(know-12, to-11)
xcomp(is-8, know-12)
det(person-14, the-13)
poss(self-16, person-14)
dobj(know-12, self-16)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP I))
    (VP (MD must) (RB not)
      (VP (VB be)
        (ADJP (JJ angry)
          (PP (IN with)
            (NP (PRP you))))))
    (. .)))

advmod(angry-7, Then-2)
nsubj(angry-7, I-3)
aux(angry-7, must-4)
neg(angry-7, not-5)
cop(angry-7, be-6)
root(ROOT-0, angry-7)
prep_with(angry-7, you-9)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (PRP You))
      (VP (VBD had)
        (ADVP (RBR better))
        (VP (VB look)
          (CC and)
          (VB see))))
    (, ,)
    (ADVP (RB though))
    (. .) ('' '')))

nsubj(look-5, You-2)
nsubj(see-7, You-2)
aux(look-5, had-3)
advmod(look-5, better-4)
root(ROOT-0, look-5)
conj_and(look-5, see-7)
advmod(look-5, though-9)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP Diamond))
      (VP (VBZ is)
        (NP (DT a)
          (ADJP (RB very) (JJ pretty))
          (NN name))))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP
      (NP (DT the) (NN boy))
      (, ,)
      (VP (VBN vexed)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD should) (RB not)
              (VP (VB give)
                (NP (NN satisfaction))))))))
    (. .)))

nsubj(name-7, Diamond-2)
cop(name-7, is-3)
det(name-7, a-4)
advmod(pretty-6, very-5)
amod(name-7, pretty-6)
ccomp(persisted-10, name-7)
root(ROOT-0, persisted-10)
det(boy-12, the-11)
nsubj(persisted-10, boy-12)
vmod(boy-12, vexed-14)
mark(give-19, that-15)
nsubj(give-19, it-16)
aux(give-19, should-17)
neg(give-19, not-18)
ccomp(vexed-14, give-19)
dobj(give-19, satisfaction-20)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP Diamond))
      (VP (VBZ is)
        (NP (DT a)
          (ADJP (JJ useless))
          (NN thing))
        (ADVP (RB rather))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN voice))
    (. .)))

nsubj(thing-6, Diamond-2)
cop(thing-6, is-3)
det(thing-6, a-4)
amod(thing-6, useless-5)
ccomp(said-10, thing-6)
advmod(thing-6, rather-7)
root(ROOT-0, said-10)
det(voice-12, the-11)
nsubj(said-10, voice-12)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's) (RB not)
      (ADJP (JJ true)))
    (. .)))

nsubj(true-5, That-2)
cop(true-5, 's-3)
neg(true-5, not-4)
root(ROOT-0, true-5)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBZ is)
      (ADJP
        (ADJP
          (ADJP (RB very) (JJ nice))
          (PRN (: --)
            (SBAR (IN as)
              (FRAG
                (ADJP (JJ big)
                  (PP (IN as)
                    (NP (CD two))))))
            (: --)))
        (CC and)
        (ADJP (RB so) (JJ quiet)))
      (NP (DT all) (NN night)))
    (. !)))

nsubj(nice-4, Diamond-1)
nsubj(quiet-13, Diamond-1)
cop(nice-4, is-2)
advmod(nice-4, very-3)
root(ROOT-0, nice-4)
mark(big-7, as-6)
dep(nice-4, big-7)
prep_as(big-7, two-9)
advmod(quiet-13, so-12)
conj_and(nice-4, quiet-13)
det(night-15, all-14)
tmod(nice-4, night-15)

(ROOT
  (S (CC And)
    (S
      (VP (VBZ does) (RB n't)
        (NP (PRP he))))
    (VP (VBP make)
      (NP
        (NP (DT a) (JJ jolly) (NN row))
        (PP (IN in)
          (NP (DT the) (NN morning))))
      (, ,)
      (S
        (VP (VBG getting)
          (PP (IN upon)
            (NP (PRP$ his) (CD four) (JJ great) (NNS legs))))))
    (. !)))

cc(make-5, And-1)
csubj(make-5, does-2)
neg(does-2, n't-3)
dobj(does-2, he-4)
root(ROOT-0, make-5)
det(row-8, a-6)
amod(row-8, jolly-7)
dobj(make-5, row-8)
det(morning-11, the-10)
prep_in(row-8, morning-11)
vmod(make-5, getting-13)
poss(legs-18, his-15)
num(legs-18, four-16)
amod(legs-18, great-17)
prep_upon(getting-13, legs-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (PP (IN like)
        (NP (NN thunder))))
    (. .) ('' '')))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
prep_like('s-2, thunder-4)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB seem)
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT a) (NN diamond))
                  (VP (VBZ is)))))))))
    (. .) ('' '')))

nsubj(seem-5, You-2)
nsubj(know-7, You-2)
aux(seem-5, do-3)
neg(seem-5, n't-4)
root(ROOT-0, seem-5)
aux(know-7, to-6)
xcomp(seem-5, know-7)
dobj(is-11, what-8)
det(diamond-10, a-9)
nsubj(is-11, diamond-10)
ccomp(know-7, is-11)

(ROOT
  (SINV
    (FRAG
      (INTJ (`` ``) (UH Oh)))
    (, ,)
    (VP (VBP do) (RB n't))
    (NP
      (NP (PRP I))
      (ADVP (RB just)))
    (. !)))

dep(do-4, Oh-2)
root(ROOT-0, do-4)
neg(do-4, n't-5)
nsubj(do-4, I-6)
advmod(I-6, just-7)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (VBZ is)
        (NP (DT a)
          (ADJP (JJ great)
            (CC and)
            (JJ good))
          (NN horse))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBZ sleeps)
        (ADVP (RB right))
        (PP (IN under)
          (NP (PRP me)))))
    (. .)))

nsubj(horse-7, Diamond-1)
cop(horse-7, is-2)
det(horse-7, a-3)
amod(horse-7, great-4)
conj_and(great-4, good-6)
amod(horse-7, good-6)
root(ROOT-0, horse-7)
nsubj(sleeps-11, he-10)
conj_and(horse-7, sleeps-11)
advmod(sleeps-11, right-12)
prep_under(sleeps-11, me-14)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP (VBZ is)
          (NP (JJ old) (NNP Diamond))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (NP (JJ young) (NNP Diamond)))))
    (: ;)
    (CC or)
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP like)
            (NP (PRP it))
            (ADVP (RBR better))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP you))
                (VP (VBP 're)
                  (ADJP (RB very) (JJ particular))))))))
      (, ,)
      (NP (NNP Mr.) (NNP North))
      (VP (VBZ Wind)))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBZ 's)
        (NP (JJ big) (NNP Diamond))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (RB little) (JJ Diamond))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WDT which))
            (S
              (PP (IN of)
                (NP (PRP us)))
              (NP (PRP$ my) (NN father))
              (VP (VBZ likes)
                (ADVP (RBS best))))))))
    (. .) ('' '')))

nsubj(Diamond-4, He-1)
cop(Diamond-4, is-2)
amod(Diamond-4, old-3)
root(ROOT-0, Diamond-4)
nsubj(Diamond-10, I-7)
cop(Diamond-10, am-8)
amod(Diamond-10, young-9)
conj_and(Diamond-4, Diamond-10)
mark(like-16, if-14)
nsubj(like-16, you-15)
advcl(Wind-28, like-16)
dobj(like-16, it-17)
advmod(like-16, better-18)
mark(particular-24, for-20)
nsubj(particular-24, you-21)
cop(particular-24, 're-22)
advmod(particular-24, very-23)
advcl(like-16, particular-24)
nn(North-27, Mr.-26)
nsubj(Wind-28, North-27)
conj_or(Diamond-4, Wind-28)
nsubj(Diamond-33, he-30)
cop(Diamond-33, 's-31)
amod(Diamond-33, big-32)
ccomp(Diamond-4, Diamond-33)
conj_or(Diamond-4, Diamond-33)
nsubj(Diamond-39, I-36)
cop(Diamond-39, 'm-37)
advmod(Diamond-39, little-38)
conj_and(Diamond-4, Diamond-39)
nsubj(know-45, I-42)
aux(know-45, do-43)
neg(know-45, n't-44)
conj_and(Diamond-4, know-45)
dobj(likes-51, which-46)
prep_of(likes-51, us-48)
poss(father-50, my-49)
nsubj(likes-51, father-50)
ccomp(know-45, likes-51)
advmod(likes-51, best-52)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (JJ beautiful) (NN laugh))
        (, ,)
        (ADJP
          (ADJP (JJ large))
          (CC but)
          (ADJP (RB very) (JJ soft)
            (CC and)
            (JJ musical)))
        (, ,))
      (VP (VBD sounded)
        (ADVP (RB somewhere))
        (PP (IN beside)
          (NP (PRP him)))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Diamond))
      (VP (VBD kept)
        (NP (PRP$ his) (NN head))
        (PP (IN under)
          (NP (DT the) (NNS clothes)))))
    (. .)))

det(laugh-3, A-1)
amod(laugh-3, beautiful-2)
nsubj(sounded-12, laugh-3)
amod(laugh-3, large-5)
advmod(soft-8, very-7)
amod(laugh-3, soft-8)
conj_but(large-5, soft-8)
conj_but(large-5, musical-10)
conj_and(soft-8, musical-10)
root(ROOT-0, sounded-12)
advmod(sounded-12, somewhere-13)
prep_beside(sounded-12, him-15)
nsubj(kept-19, Diamond-18)
conj_but(sounded-12, kept-19)
poss(head-21, his-20)
dobj(kept-19, head-21)
det(clothes-24, the-23)
prep_under(kept-19, clothes-24)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (NP (NNP Mr.) (NNP North) (NNP Wind))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN voice))
    (. .)))

nsubj(Wind-7, I-2)
cop(Wind-7, 'm-3)
neg(Wind-7, not-4)
nn(Wind-7, Mr.-5)
nn(Wind-7, North-6)
ccomp(said-10, Wind-7)
root(ROOT-0, said-10)
det(voice-12, the-11)
nsubj(said-10, voice-12)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBD told)
        (NP (PRP me))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBD were)
              (NP (DT the) (NNP North) (NN Wind)))))))
    (, ,) ('' '')
    (VP (VBD insisted))
    (NP (NNP Diamond))
    (. .)))

nsubj(told-3, You-2)
ccomp(insisted-13, told-3)
dobj(told-3, me-4)
mark(Wind-10, that-5)
nsubj(Wind-10, you-6)
cop(Wind-10, were-7)
det(Wind-10, the-8)
nn(Wind-10, North-9)
ccomp(told-3, Wind-10)
root(ROOT-0, insisted-13)
nsubj(insisted-13, Diamond-14)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB not)
        (VP (VB say)
          (NP (NNP Mister) (NNP North) (NNP Wind)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN voice))
    (. .)))

nsubj(say-5, I-2)
aux(say-5, did-3)
neg(say-5, not-4)
ccomp(said-11, say-5)
nn(Wind-8, Mister-6)
nn(Wind-8, North-7)
dobj(say-5, Wind-8)
root(ROOT-0, said-11)
det(voice-13, the-12)
nsubj(said-11, voice-13)

(ROOT
  (S (`` ``)
    (ADVP (RB Well))
    (, ,)
    (S
      (ADVP (RB then))
      (, ,)
      (NP (PRP I))
      (VP (VBP do)))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (NP (NN mother))
          (VP (VBZ tells)
            (NP (PRP me)))))
      (NP (PRP I))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ polite)))))))
    (. .) ('' '')))

advmod(do-7, Well-2)
advmod(do-7, then-4)
nsubj(do-7, I-6)
root(ROOT-0, do-7)
mark(tells-11, for-9)
nsubj(tells-11, mother-10)
advcl(ought-14, tells-11)
dobj(tells-11, me-12)
nsubj(ought-14, I-13)
nsubj(polite-17, I-13)
parataxis(do-7, ought-14)
aux(polite-17, to-15)
cop(polite-17, be-16)
xcomp(ought-14, polite-17)

(ROOT
  (S (`` ``) (RB Then)
    (VP (VBP let)
      (S
        (NP (PRP me))
        (VP (VB tell)
          (NP (PRP you))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP do) (RB n't)
                (VP (VB think)
                  (NP (PRP it))
                  (PP (IN at)
                    (NP
                      (NP (DT all) (JJ polite))
                      (PP (IN of)
                        (NP (PRP you)))))
                  (S
                    (VP (TO to)
                      (VP (VB say)
                        (NP (NNP Mister))
                        (PP (TO to)
                          (NP (PRP me)))))))))))))
    (. .) ('' '')))

advmod(let-3, Then-2)
root(ROOT-0, let-3)
nsubj(tell-5, me-4)
ccomp(let-3, tell-5)
dobj(tell-5, you-6)
nsubj(think-10, I-7)
aux(think-10, do-8)
neg(think-10, n't-9)
dep(tell-5, think-10)
dobj(think-10, it-11)
det(polite-14, all-13)
prep_at(think-10, polite-14)
prep_of(polite-14, you-16)
aux(say-18, to-17)
vmod(think-10, say-18)
dobj(say-18, Mister-19)
prep_to(say-18, me-21)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB know)
        (ADVP (RBR better))))
    (. .)))

discourse(know-7, Well-2)
nsubj(know-7, I-4)
aux(know-7, did-5)
neg(know-7, n't-6)
root(ROOT-0, know-7)
advmod(know-7, better-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB very) (JJ sorry)))
    (. .) ('' '')))

nsubj(sorry-4, I-1)
cop(sorry-4, 'm-2)
advmod(sorry-4, very-3)
root(ROOT-0, sorry-4)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB know)
            (ADVP (RBR better))))))
    (. .) ('' '')))

cc(ought-4, But-2)
nsubj(ought-4, you-3)
nsubj(know-6, you-3)
root(ROOT-0, ought-4)
aux(know-6, to-5)
xcomp(ought-4, know-6)
advmod(know-6, better-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP (DT that))))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
dobj(know-5, that-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do))
    (. .)))

nsubj(do-3, I-2)
root(ROOT-0, do-3)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB say)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADJP (JJ polite)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB lie)
                        (S
                          (NP (EX there))
                          (VP (VBG talking)
                            (PRN (: --)
                              (PP (IN with)
                                (NP (PRP$ your) (NN head)))
                              (PP (IN under)
                                (NP (DT the) (NNS bed-clothes)))))))
                      (, ,)
                      (CC and)
                      (ADVP (RB never))
                      (VP (VB look)
                        (PRT (RP up))
                        (S
                          (VP (TO to)
                            (VP (VB see)
                              (SBAR
                                (WHNP (WP what) (NN kind)
                                  (PP (IN of)
                                    (NP (NN person))))
                                (S
                                  (NP (PRP you))
                                  (VP (VBP are)
                                    (VP (VBG talking)
                                      (PP (TO to)))))))))))))))))))
    (. .)))

nsubj(say-4, You-1)
aux(say-4, ca-2)
neg(say-4, n't-3)
root(ROOT-0, say-4)
nsubj(polite-7, it-5)
nsubj(lie-9, it-5)
nsubj(look-22, it-5)
nsubj(see-25, it-5)
cop(polite-7, 's-6)
ccomp(say-4, polite-7)
aux(lie-9, to-8)
xcomp(polite-7, lie-9)
expl(talking-11, there-10)
dep(lie-9, talking-11)
dep(talking-11, with-13)
poss(head-15, your-14)
pobj(with-13, head-15)
det(bed-clothes-18, the-17)
prep_under(with-13, bed-clothes-18)
neg(look-22, never-21)
xcomp(polite-7, look-22)
conj_and(lie-9, look-22)
prt(look-22, up-23)
aux(see-25, to-24)
xcomp(look-22, see-25)
det(kind-27, what-26)
prep_to(talking-32, kind-27)
prep_of(kind-27, person-29)
nsubj(talking-32, you-30)
aux(talking-32, are-31)
ccomp(see-25, talking-32)

(ROOT
  (PRN (: --)
    (S
      (NP (PRP I))
      (VP (VBP want)
        (FRAG
          (NP (PRP you))
          (S
            (VP (TO to)
              (VP (VB come)
                (PRT (RP out))
                (PP (IN with)
                  (NP (PRP me))))))
          (. .) ('' ''))))))

nsubj(want-3, I-2)
root(ROOT-0, want-3)
dep(want-3, you-4)
aux(come-6, to-5)
dep(you-4, come-6)
prt(come-6, out-7)
prep_with(come-6, me-9)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB go)
              (S
                (VP (TO to)
                  (VP (VB sleep)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (NP
        (NP (RB very) (RB nearly))
        (VP (VBG crying) (, ,)
          (SBAR
            (SBAR (IN for)
              (S
                (NP (PRP he))
                (VP (VBD did) (RB not)
                  (VP (VB like)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN scolded)))))))))
            (, ,) (RB even)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP he))
                (VP (VBD deserved)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(want-3, I-2)
nsubj(go-5, I-2)
nsubj(sleep-7, I-2)
ccomp(said-10, want-3)
aux(go-5, to-4)
xcomp(want-3, go-5)
aux(sleep-7, to-6)
xcomp(go-5, sleep-7)
root(ROOT-0, said-10)
nsubj(said-10, Diamond-11)
advmod(nearly-14, very-13)
appos(Diamond-11, nearly-14)
vmod(nearly-14, crying-15)
mark(like-21, for-17)
nsubj(like-21, he-18)
nsubjpass(scolded-24, he-18)
aux(like-21, did-19)
neg(like-21, not-20)
advcl(crying-15, like-21)
aux(scolded-24, to-22)
auxpass(scolded-24, be-23)
xcomp(like-21, scolded-24)
advmod(like-21, even-26)
advmod(deserved-29, when-27)
nsubj(deserved-29, he-28)
dep(like-21, deserved-29)
dobj(deserved-29, it-30)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD shall)
      (VP (VB sleep)
        (NP (PDT all) (DT the))
        (ADVP (RBR better))
        (NP (JJ to-morrow) (NN night))))
    (. .) ('' '')))

nsubj(sleep-4, You-2)
aux(sleep-4, shall-3)
root(ROOT-0, sleep-4)
predet(the-6, all-5)
dobj(sleep-4, the-6)
advmod(sleep-4, better-7)
amod(night-9, to-morrow-8)
tmod(sleep-4, night-9)

(ROOT
  (SINV (`` ``)
    (FRAG
      (PP (IN Besides)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,) (`` ``)
      (S
        (S
          (NP (PRP you))
          (VP (VBP are)
            (PRT (RP out))
            (PP (IN in)
              (NP
                (NP (NNP Mr.) (NNP Dyves) (POS 's))
                (NN garden)))))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP (MD ca) (RB n't)
            (VP (VB get)
              (ADVP (RB there)))))))
    (. .)))

dep(said-5, Besides-2)
root(ROOT-0, said-5)
nsubj(said-5, Diamond-6)
nsubj(are-10, you-9)
dep(Diamond-6, are-10)
prt(are-10, out-11)
nn(Dyves-14, Mr.-13)
poss(garden-16, Dyves-14)
prep_in(are-10, garden-16)
nsubj(get-22, I-19)
aux(get-22, ca-20)
neg(get-22, n't-21)
dep(Diamond-6, get-22)
conj_and(are-10, get-22)
advmod(get-22, there-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB get)
        (PP (IN into)
          (NP (PRP$ our) (JJ own) (NN yard)))))
    (. .) ('' '')))

nsubj(get-4, I-1)
aux(get-4, can-2)
advmod(get-4, only-3)
root(ROOT-0, get-4)
poss(yard-8, our-6)
amod(yard-8, own-7)
prep_into(get-4, yard-8)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Will))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP take)
            (NP (PRP$ your) (NN head))
            (PRT (RP out))
            (PP (IN of)
              (NP (DT the) (NNS bed-clothes)))))))
    (. ?) ('' '')))

root(ROOT-0, Will-2)
nsubj(take-4, you-3)
rcmod(Will-2, take-4)
poss(head-6, your-5)
dobj(take-4, head-6)
det(bed-clothes-10, the-9)
prep_out_of(take-4, bed-clothes-10)

(ROOT
  (S
    (VP (VBD said)
      (NP
        (NP (DT the) (NN voice))
        (, ,) (RB just)
        (NP (DT a) (JJ little) (NN angrily))))
    (. .)))

root(ROOT-0, said-1)
det(voice-3, the-2)
dobj(said-1, voice-3)
advmod(voice-3, just-5)
det(angrily-8, a-6)
amod(angrily-8, little-7)
dep(voice-3, angrily-8)

(ROOT
  (INTJ (`` ``) (UH No) (. !) ('' '')))

root(ROOT-0, No-2)

(ROOT
  (NP
    (NP
      (NP (NNP answered) (NNP Diamond))
      (, ,)
      (NP (DT half) (NN peevish))
      (, ,))
    (ADJP (RB half) (VBN frightened))
    (. .)))

nn(Diamond-2, answered-1)
root(ROOT-0, Diamond-2)
det(peevish-5, half-4)
appos(Diamond-2, peevish-5)
advmod(frightened-8, half-7)
amod(Diamond-2, frightened-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN instant))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD said)
            (NP
              (NP (DT the) (NN word))
              (, ,)
              (NP
                (NP (DT a) (JJ tremendous) (NN blast))
                (PP (IN of)
                  (NP (NN wind)))))))))
    (VP
      (VP (VBD crashed)
        (PP (IN in)
          (NP
            (NP (DT a) (NN board))
            (PP (IN of)
              (NP (DT the) (NN wall))))))
      (, ,)
      (CC and)
      (VP (VBD swept)
        (NP (DT the) (NNS clothes))
        (PP (IN off)
          (NP (NNP Diamond)))))
    (. .)))

det(instant-2, The-1)
nsubj(crashed-13, instant-2)
nsubj(swept-22, instant-2)
nsubj(said-4, he-3)
rcmod(instant-2, said-4)
det(word-6, the-5)
dobj(said-4, word-6)
det(blast-10, a-8)
amod(blast-10, tremendous-9)
appos(word-6, blast-10)
prep_of(blast-10, wind-12)
root(ROOT-0, crashed-13)
det(board-16, a-15)
prep_in(crashed-13, board-16)
det(wall-19, the-18)
prep_of(board-16, wall-19)
conj_and(crashed-13, swept-22)
det(clothes-24, the-23)
dobj(swept-22, clothes-24)
prep_off(swept-22, Diamond-26)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD started)
      (PRT (RP up))
      (PP (IN in)
        (NP (NN terror))))
    (. .)))

nsubj(started-2, He-1)
root(ROOT-0, started-2)
prt(started-2, up-3)
prep_in(started-2, terror-5)

(ROOT
  (S
    (NP
      (NP (NNP Leaning))
      (PP (IN over)
        (NP (PRP him))))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ large) (, ,) (JJ beautiful) (, ,) (JJ pale) (NN face))
        (PP (IN of)
          (NP (DT a) (NN woman)))))
    (. .)))

nsubj(face-11, Leaning-1)
prep_over(Leaning-1, him-3)
cop(face-11, was-4)
det(face-11, the-5)
amod(face-11, large-6)
amod(face-11, beautiful-8)
amod(face-11, pale-10)
root(ROOT-0, face-11)
det(woman-14, a-13)
prep_of(face-11, woman-14)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (JJ dark) (NNS eyes))
      (VP (VBD looked)
        (ADJP
          (NP (DT a) (RB little))
          (JJ angry))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP they))
            (VP (VBD had)
              (ADVP (RB just))
              (VP (VBN begun)
                (S
                  (VP (TO to)
                    (VP (VB flash))))))))))
    (: ;)
    (CC but)
    (S
      (NP
        (NP (DT a) (NN quivering))
        (PP (IN in)
          (NP (PRP$ her) (JJ sweet) (JJ upper) (NN lip))))
      (VP (VBD made)
        (SBAR
          (S
            (NP (PRP her))
            (VP (VBP look)
              (SBAR (RB as) (IN if)
                (S
                  (NP (PRP she))
                  (VP (VBD were)
                    (VP (VBG going)
                      (S
                        (VP (TO to)
                          (VP (VB cry)))))))))))))
    (. .)))

poss(eyes-3, Her-1)
amod(eyes-3, dark-2)
nsubj(looked-4, eyes-3)
root(ROOT-0, looked-4)
det(little-6, a-5)
npadvmod(angry-7, little-6)
acomp(looked-4, angry-7)
mark(begun-13, for-9)
nsubj(begun-13, they-10)
nsubj(flash-15, they-10)
aux(begun-13, had-11)
advmod(begun-13, just-12)
advcl(looked-4, begun-13)
aux(flash-15, to-14)
xcomp(begun-13, flash-15)
det(quivering-19, a-18)
nsubj(made-25, quivering-19)
poss(lip-24, her-21)
amod(lip-24, sweet-22)
amod(lip-24, upper-23)
prep_in(quivering-19, lip-24)
conj_but(looked-4, made-25)
nsubj(look-27, her-26)
ccomp(made-25, look-27)
advmod(going-32, as-28)
mark(going-32, if-29)
nsubj(going-32, she-30)
nsubj(cry-34, she-30)
aux(going-32, were-31)
advcl(look-27, going-32)
aux(cry-34, to-33)
xcomp(going-32, cry-34)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBD was)
          (SBAR
            (SBAR
              (S
                (NP (DT the) (RBS most) (JJ strange))
                (VP (VBD was)
                  (SBAR
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP
                          (ADVP (RB away)
                            (PP (IN from)
                              (NP (PRP$ her) (NN head))))
                          (VBD streamed)
                          (PRT (RP out))
                          (NP
                            (NP (PRP$ her) (JJ black) (NN hair))
                            (PP (IN in)
                              (NP (DT every) (NN direction)))))))
                    (, ,)
                    (CC so)
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (DT the) (NNS darkness))
                          (PP (IN in)
                            (NP (DT the) (NN hay-loft))))
                        (VP (VBD looked)
                          (SBAR (RB as) (IN if)
                            (S
                              (NP (PRP it))
                              (VP (VBD were)
                                (VP (VBN made)
                                  (PP (IN of)
                                    (NP
                                      (NP (PRP her))
                                      (, ,)
                                      (NP (NN hair)))))))))))))))
            (CC but)
            (SBAR (IN as)
              (S
                (NP (NNP Diamond))
                (VP (VBD gazed)
                  (PP (IN at)
                    (NP (PRP her)))
                  (PP (IN in)
                    (NP
                      (NP (JJ speechless) (NN amazement))
                      (, ,)
                      (VP (VBN mingled)
                        (PP (IN with)
                          (NP (NN confidence)))))))))))))
    (PRN (: --)
      (SBAR (IN for)
        (S
          (NP (DT the) (NN boy))
          (VP (VBD was)
            (ADJP (VBN entranced)
              (PP (IN with)
                (NP (PRP$ her) (JJ mighty) (NN beauty)))))))
      (: --))
    (NP (PRP$ her) (NN hair))
    (VP
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB gather)
              (NP (PRP itself))
              (PRT (RP out))
              (PP (IN of)
                (NP (DT the) (NNS darkness)))))))
      (, ,)
      (CC and)
      (VP (VBD fell)
        (ADVP (IN down) (DT all))
        (PP (IN about)
          (NP (PRP her)))
        (ADVP (RB again)))
      (, ,)
      (SBAR (IN till)
        (S
          (NP (PRP$ her) (NN face))
          (VP (VBD looked)
            (PRT (RP out))
            (PP (IN of)
              (NP
                (NP (DT the) (NN midst))
                (PP (IN of)
                  (NP (PRP it)))))
            (PP (IN like)
              (NP
                (NP (DT a) (NN moon))
                (PP (RB out) (IN of)
                  (NP (DT a) (NN cloud)))))))))
    (. .)))

nsubj(was-2, What-1)
advcl(began-64, was-2)
det(strange-5, the-3)
advmod(strange-5, most-4)
nsubj(was-6, strange-5)
advcl(was-2, was-6)
nsubj(streamed-12, that-7)
poss(head-11, her-10)
prep_away_from(streamed-12, head-11)
ccomp(was-6, streamed-12)
prt(streamed-12, out-13)
poss(hair-16, her-14)
amod(hair-16, black-15)
dobj(streamed-12, hair-16)
det(direction-19, every-18)
prep_in(hair-16, direction-19)
mark(looked-28, that-22)
det(darkness-24, the-23)
nsubj(looked-28, darkness-24)
det(hay-loft-27, the-26)
prep_in(darkness-24, hay-loft-27)
ccomp(was-6, looked-28)
conj_so(streamed-12, looked-28)
advmod(made-33, as-29)
mark(made-33, if-30)
nsubjpass(made-33, it-31)
auxpass(made-33, were-32)
advcl(looked-28, made-33)
prep_of(made-33, her-35)
appos(her-35, hair-37)
mark(gazed-41, as-39)
nsubj(gazed-41, Diamond-40)
advcl(was-2, gazed-41)
conj_but(was-6, gazed-41)
prep_at(gazed-41, her-43)
amod(amazement-46, speechless-45)
prep_in(gazed-41, amazement-46)
vmod(amazement-46, mingled-48)
prep_with(mingled-48, confidence-50)
mark(entranced-56, for-52)
det(boy-54, the-53)
nsubjpass(entranced-56, boy-54)
auxpass(entranced-56, was-55)
parataxis(began-64, entranced-56)
poss(beauty-60, her-58)
amod(beauty-60, mighty-59)
prep_with(entranced-56, beauty-60)
poss(hair-63, her-62)
nsubj(began-64, hair-63)
nsubj(gather-66, hair-63)
nsubj(fell-74, hair-63)
root(ROOT-0, began-64)
aux(gather-66, to-65)
xcomp(began-64, gather-66)
dobj(gather-66, itself-67)
prt(gather-66, out-68)
det(darkness-71, the-70)
prep_of(gather-66, darkness-71)
conj_and(began-64, fell-74)
advmod(fell-74, down-75)
dep(down-75, all-76)
prep_about(fell-74, her-78)
advmod(fell-74, again-79)
mark(looked-84, till-81)
poss(face-83, her-82)
nsubj(looked-84, face-83)
advcl(began-64, looked-84)
conj_and(began-64, looked-84)
det(midst-88, the-87)
prep_out_of(looked-84, midst-88)
prep_of(midst-88, it-90)
det(moon-93, a-92)
prep_like(looked-84, moon-93)
det(cloud-97, a-96)
prep_out_of(moon-93, cloud-97)

(ROOT
  (S
    (S
      (PP (IN From)
        (NP (PRP her)))
      (NP (NNS eyes))
      (VP (VBD came)
        (NP (PDT all) (DT the) (NN light))
        (PP (IN by)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (NNP Diamond))
              (VP (VBD saw)
                (NP (PRP$ her) (NN face))))))))
    (CC and)
    (S
      (NP (PRP her))
      (, ,)
      (NP (NN hair)))
    (: ;)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD was)
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD did)
                (VP (VB see)
                  (PP (IN of)
                    (NP (PRP her)))
                  (ADVP (RB yet)))))))))
    (. .)))

prep_from(came-4, her-2)
nsubj(came-4, eyes-3)
root(ROOT-0, came-4)
predet(light-7, all-5)
det(light-7, the-6)
dobj(came-4, light-7)
dobj(saw-11, which-9)
nsubj(saw-11, Diamond-10)
prepc_by(came-4, saw-11)
poss(face-13, her-12)
dobj(saw-11, face-13)
dep(hair-17, her-15)
conj_and(came-4, hair-17)
nsubj(all-22, that-20)
cop(all-22, was-21)
conj_and(came-4, all-22)
nsubj(see-25, he-23)
aux(see-25, did-24)
rcmod(all-22, see-25)
prep_of(see-25, her-27)
advmod(see-25, yet-28)

(ROOT
  (S
    (NP (DT The) (NN wind))
    (VP (VBD was)
      (ADJP (JJ over)
        (CC and)
        (VBN gone)))
    (. .)))

det(wind-2, The-1)
nsubjpass(over-4, wind-2)
nsubjpass(gone-6, wind-2)
auxpass(over-4, was-3)
root(ROOT-0, over-4)
conj_and(over-4, gone-6)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Will))
    (SQ
      (NP (PRP you))
      (VP (VB go)
        (PP (IN with)
          (NP (PRP me)))
        (ADVP (RB now))
        (, ,)
        (S
          (NP (PRP you))
          (ADJP (RB little) (JJ Diamond)))))
    (. ?)))

advmod(go-4, Will-2)
nsubj(go-4, you-3)
root(ROOT-0, go-4)
prep_with(go-4, me-6)
advmod(go-4, now-7)
nsubj(Diamond-11, you-9)
advmod(Diamond-11, little-10)
xcomp(go-4, Diamond-11)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ sorry)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD was)
                (VP (VBN forced)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (RB so) (JJ rough)
                          (PP (IN with)
                            (NP (PRP you))))))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN lady))
    (. .)))

nsubj(sorry-3, I-1)
cop(sorry-3, am-2)
ccomp(said-15, sorry-3)
nsubjpass(forced-6, I-4)
nsubj(rough-10, I-4)
auxpass(forced-6, was-5)
ccomp(sorry-3, forced-6)
aux(rough-10, to-7)
cop(rough-10, be-8)
advmod(rough-10, so-9)
xcomp(forced-6, rough-10)
prep_with(rough-10, you-12)
root(ROOT-0, said-15)
det(lady-17, the-16)
nsubj(said-15, lady-17)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (MD will)))
      (: ;)
      (S
        (INTJ (UH yes))
        (, ,)
        (NP (PRP I))
        (VP (MD will))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Diamond))
    (, ,)
    (S
      (VP (VBG holding)
        (PRT (RP out))
        (NP (PDT both) (PRP$ his) (NNS arms))))
    (. .)))

nsubj(will-3, I-2)
ccomp(answered-11, will-3)
discourse(will-8, yes-5)
nsubj(will-8, I-7)
parataxis(will-3, will-8)
root(ROOT-0, answered-11)
nsubj(answered-11, Diamond-12)
vmod(answered-11, holding-14)
prt(holding-14, out-15)
predet(arms-18, both-16)
poss(arms-18, his-17)
dobj(holding-14, arms-18)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD added) (, ,)
      (S
        (VP (VBG dropping)
          (NP (PRP them))
          (, ,) (`` ``)
          (S
            (SBAR
              (WHADVP (WRB how))
              (S
                (VP (MD shall))))
            (NP (PRP I))
            (VP (VBP get)
              (NP (PRP$ my) (NNS clothes)))))))
    (. ?)))

cc(added-6, But-2)
nsubj(added-6, he-5)
root(ROOT-0, added-6)
xcomp(added-6, dropping-8)
dobj(dropping-8, them-9)
advmod(shall-13, how-12)
advcl(get-15, shall-13)
nsubj(get-15, I-14)
dep(dropping-8, get-15)
poss(clothes-17, my-16)
dobj(get-15, clothes-17)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP are)
        (PP (IN in)
          (NP
            (NP (NN mother) (POS 's))
            (NN room)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN door))
      (VP (VBZ is)
        (VP (VBN locked))))
    (. .) ('' '')))

nsubj(are-2, They-1)
root(ROOT-0, are-2)
poss(room-6, mother-4)
prep_in(are-2, room-6)
det(door-10, the-9)
nsubjpass(locked-12, door-10)
auxpass(locked-12, is-11)
conj_and(are-2, locked-12)

(ROOT
  (S
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (VP
      (ADVP (RB never))
      (VB mind)
      (NP (PRP$ your) (NNS clothes)))
    (. .)))

discourse(mind-5, Oh-2)
neg(mind-5, never-4)
root(ROOT-0, mind-5)
poss(clothes-7, your-6)
dobj(mind-5, clothes-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will) (RB not)
      (VP (VB be)
        (ADJP (JJ cold))))
    (. .)))

nsubj(cold-5, You-1)
aux(cold-5, will-2)
neg(cold-5, not-3)
cop(cold-5, be-4)
root(ROOT-0, cold-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB take)
        (NP
          (NP (NN care))
          (PP (IN of)
            (NP (DT that))))))
    (. .)))

nsubj(take-3, I-1)
aux(take-3, shall-2)
root(ROOT-0, take-3)
dobj(take-3, care-4)
prep_of(care-4, that-6)

(ROOT
  (S
    (NP (NN Nobody))
    (VP (VBZ is)
      (ADJP (JJ cold)
        (PP (IN with)
          (NP (DT the) (NN north) (NN wind)))))
    (. .) ('' '')))

nsubj(cold-3, Nobody-1)
cop(cold-3, is-2)
root(ROOT-0, cold-3)
det(wind-7, the-5)
nn(wind-7, north-6)
prep_with(cold-3, wind-7)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (NN everybody))
            (VP (VBD was))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(thought-3, I-2)
ccomp(said-8, thought-3)
nsubj(was-5, everybody-4)
ccomp(thought-3, was-5)
root(ROOT-0, said-8)
nsubj(said-8, Diamond-9)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is)
      (NP (DT a) (JJ great) (NN mistake)))
    (. .)))

nsubj(mistake-6, That-2)
cop(mistake-6, is-3)
det(mistake-6, a-4)
amod(mistake-6, great-5)
root(ROOT-0, mistake-6)

(ROOT
  (S
    (NP (JJS Most) (NNS people))
    (VP (VBP make)
      (NP (PRP it))
      (, ,)
      (ADVP (RB however)))
    (. .)))

amod(people-2, Most-1)
nsubj(make-3, people-2)
root(ROOT-0, make-3)
dobj(make-3, it-4)
advmod(make-3, however-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (ADJP (JJ cold)
        (SBAR (IN because)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (PP (RB not)
                (PP (IN with)
                  (NP (DT the) (NN north) (NN wind)))
                (, ,)
                (CC but)
                (PP (IN without)
                  (NP (PRP it)))))))))
    (. .) ('' '')))

nsubj(cold-3, They-1)
cop(cold-3, are-2)
root(ROOT-0, cold-3)
mark(are-6, because-4)
nsubj(are-6, they-5)
nsubj(are-6', they-5)
ccomp(cold-3, are-6)
ccomp(cold-3, are-6')
conj_but(are-6, are-6')
neg(are-6, not-7)
det(wind-11, the-9)
nn(wind-11, north-10)
prep_with(are-6, wind-11)
prep_without(are-6', it-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP Diamond))
        (VP
          (VP (VBD had)
            (VP (VBN been)
              (ADJP
                (NP (DT a) (RB little))
                (JJR older))))
          (, ,)
          (CC and)
          (VP (VBD had)
            (VP (VBN supposed)
              (S
                (NP (PRP himself))
                (ADJP
                  (NP (DT a) (JJ good) (NN deal))
                  (JJR wiser))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN thought)
          (SBAR
            (S
              (NP (DT the) (NN lady))
              (VP (VBD was)
                (VP (VBG joking))))))))
    (. .)))

mark(older-7, If-1)
nsubj(older-7, Diamond-2)
nsubj(supposed-11, Diamond-2)
aux(older-7, had-3)
cop(older-7, been-4)
det(little-6, a-5)
npadvmod(older-7, little-6)
advcl(thought-21, older-7)
aux(supposed-11, had-10)
conj_and(older-7, supposed-11)
advcl(thought-21, supposed-11)
nsubj(wiser-16, himself-12)
det(deal-15, a-13)
amod(deal-15, good-14)
npadvmod(wiser-16, deal-15)
xcomp(supposed-11, wiser-16)
nsubj(thought-21, he-18)
aux(thought-21, would-19)
aux(thought-21, have-20)
root(ROOT-0, thought-21)
det(lady-23, the-22)
nsubj(joking-25, lady-23)
aux(joking-25, was-24)
ccomp(thought-21, joking-25)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP
      (VP (VBD was)
        (ADJP (RB not) (JJR older)))
      (, ,)
      (CC and)
      (VP (VBD did) (RB not)
        (VP (VB fancy)
          (S
            (NP (PRP himself))
            (ADJP (JJR wiser)))))
      (, ,)
      (CC and)
      (ADVP (RB therefore))
      (VP (VBD understood)
        (NP (PRP her))
        (ADVP (RB well) (RB enough))))
    (. .)))

nsubj(older-5, he-2)
nsubj(fancy-10, he-2)
nsubj(understood-16, he-2)
cop(older-5, was-3)
neg(older-5, not-4)
root(ROOT-0, older-5)
aux(fancy-10, did-8)
neg(fancy-10, not-9)
conj_and(older-5, fancy-10)
nsubj(wiser-12, himself-11)
xcomp(fancy-10, wiser-12)
advmod(understood-16, therefore-15)
conj_and(older-5, understood-16)
dobj(understood-16, her-17)
advmod(enough-19, well-18)
advmod(understood-16, enough-19)

(ROOT
  (S
    (ADVP (RB Again))
    (NP (PRP he))
    (VP (VBD stretched)
      (PRT (RP out))
      (NP (PRP$ his) (NNS arms)))
    (. .)))

advmod(stretched-3, Again-1)
nsubj(stretched-3, he-2)
root(ROOT-0, stretched-3)
prt(stretched-3, out-4)
poss(arms-6, his-5)
dobj(stretched-3, arms-6)

(ROOT
  (S
    (NP
      (NP (DT The) (NN lady) (POS 's))
      (NN face))
    (VP (VBD drew)
      (ADVP (RB back)
        (NP (DT a) (RB little))))
    (. .)))

det(lady-2, The-1)
poss(face-4, lady-2)
nsubj(drew-5, face-4)
root(ROOT-0, drew-5)
advmod(drew-5, back-6)
det(little-8, a-7)
pobj(back-6, little-8)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Follow)
        (NP (PRP me))))
    (, ,)
    (NP (NNP Diamond))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

ccomp(said-9, Follow-2)
dobj(Follow-2, me-3)
nsubj(said-9, Diamond-5)
nsubj(said-9, she-8)
root(ROOT-0, said-9)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (NP
        (QP (RB only) (DT a) (JJ little))
        (NNS ruefully)))
    (. .)))

dep(said-5, Yes-2)
root(ROOT-0, said-5)
nsubj(said-5, Diamond-6)
quantmod(little-10, only-8)
quantmod(little-10, a-9)
num(ruefully-11, little-10)
appos(Diamond-6, ruefully-11)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP 're) (RB not)
      (ADJP (JJ afraid)))
    (. ?) ('' '')))

nsubj(afraid-5, You-2)
cop(afraid-5, 're-3)
neg(afraid-5, not-4)
root(ROOT-0, afraid-5)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NNP North) (NN Wind)))
    (. .)))

root(ROOT-0, said-1)
det(Wind-4, the-2)
nn(Wind-4, North-3)
dobj(said-1, Wind-4)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (VP (VB ma'am)
        (S (: ;)
          (S (CC but)
            (NP (NN mother))
            (ADVP (RB never))
            (VP (MD would)
              (VP (VB let)
                (S
                  (NP (PRP me))
                  (VP (VB go)
                    (PP (IN without)
                      (NP (NNS shoes))))))))
          (: :)
          (S
            (NP (PRP she))
            (ADVP (RB never))
            (VP (VBD said)
              (NP (NN anything))
              (PP (IN about)
                (NP (NNS clothes)))
              (, ,)
              (SBAR (IN so)
                (S
                  (NP (PRP I))
                  (VP (MD dare)
                    (VP (VB say)
                      (NP (PRP she)))))))))))
    (VP (MD would) (RB n't)
      (VP (VB mind)
        (NP (DT that))))
    (. .) ('' '')))

discourse(ma'am-4, No-2)
csubj(mind-30, ma'am-4)
cc(let-10, but-6)
nsubj(let-10, mother-7)
neg(let-10, never-8)
aux(let-10, would-9)
dep(ma'am-4, let-10)
nsubj(go-12, me-11)
ccomp(let-10, go-12)
prep_without(go-12, shoes-14)
nsubj(said-18, she-16)
neg(said-18, never-17)
parataxis(let-10, said-18)
dobj(said-18, anything-19)
prep_about(said-18, clothes-21)
mark(say-26, so-23)
nsubj(say-26, I-24)
aux(say-26, dare-25)
advcl(said-18, say-26)
dobj(say-26, she-27)
aux(mind-30, would-28)
neg(mind-30, n't-29)
root(ROOT-0, mind-30)
dobj(mind-30, that-31)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP (PRP$ your) (NN mother))
        (ADVP (RB very) (RB well))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN lady))
    (. .)))

nsubj(know-3, I-2)
ccomp(said-10, know-3)
poss(mother-5, your-4)
dobj(know-3, mother-5)
advmod(well-7, very-6)
advmod(know-3, well-7)
root(ROOT-0, said-10)
det(lady-12, the-11)
nsubj(said-10, lady-12)

(ROOT
  (S (`` ``)
    (NP (PRP She))
    (VP (VBZ is)
      (NP (DT a) (JJ good) (NN woman)))
    (. .)))

nsubj(woman-6, She-2)
cop(woman-6, is-3)
det(woman-6, a-4)
amod(woman-6, good-5)
root(ROOT-0, woman-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN visited)
        (S
          (NP (PRP her))
          (ADVP (RB often)))))
    (. .)))

nsubj(visited-3, I-1)
aux(visited-3, have-2)
root(ROOT-0, visited-3)
dep(visited-3, her-4)
advmod(her-4, often-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (PP (IN with)
        (NP (PRP her)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBD were)
            (VP (VBN born))))))
    (. .)))

nsubj(was-2, I-1)
root(ROOT-0, was-2)
prep_with(was-2, her-4)
advmod(born-8, when-5)
nsubjpass(born-8, you-6)
auxpass(born-8, were-7)
advcl(was-2, born-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD saw)
      (NP (PRP$ her) (NN laugh)
        (CC and)
        (NN cry))
      (PP (DT both) (IN at)
        (NP (RB once))))
    (. .)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
poss(laugh-4, her-3)
dobj(saw-2, laugh-4)
dobj(saw-2, cry-6)
conj_and(laugh-4, cry-6)
dep(at-8, both-7)
prep(saw-2, at-8)
pobj(at-8, once-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP love)
      (NP
        (NP (PRP$ your) (NN mother))
        (, ,)
        (NP (NNP Diamond))))
    (. .) ('' '')))

nsubj(love-2, I-1)
root(ROOT-0, love-2)
poss(mother-4, your-3)
dobj(love-2, mother-4)
appos(mother-4, Diamond-6)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBD was)
      (NP
        (NP (PRP it))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD did) (RB not)
              (VP (VB know)
                (NP (PRP$ my) (NN name))
                (, ,)
                (S
                  (ADVP (RB then))
                  (, ,)
                  (VP (VB ma'am)))))))))
    (. ?)))

advmod(was-3, How-2)
root(ROOT-0, was-3)
nsubj(was-3, it-4)
nsubj(know-8, you-5)
aux(know-8, did-6)
neg(know-8, not-7)
rcmod(it-4, know-8)
poss(name-10, my-9)
dobj(know-8, name-10)
advmod(ma'am-14, then-12)
dep(know-8, ma'am-14)

(ROOT
  (SBARQ
    (WHADVP (WRB Please))
    (SQ (VBP am)
      (NP (PRP I))
      (S
        (VP (TO to)
          (VP (VB say)
            (NP (NN ma'am))
            (PP (TO to)
              (NP
                (NP (PRP you))
                (, ,)
                (NP (NN ma'am))))))))
    (. ?) ('' '')))

advmod(am-2, Please-1)
root(ROOT-0, am-2)
nsubj(am-2, I-3)
aux(say-5, to-4)
dep(am-2, say-5)
dobj(say-5, ma'am-6)
prep_to(say-5, you-8)
appos(you-8, ma'am-10)

(ROOT
  (S (`` ``)
    (NP (PRP One))
    (VP (VBP question)
      (PP (IN at)
        (NP
          (NP (DT a) (NN time))
          (, ,)
          (NP
            (ADJP (RB dear))
            (NN boy)))))
    (. .)))

nsubj(question-3, One-2)
root(ROOT-0, question-3)
det(time-6, a-5)
prep_at(question-3, time-6)
amod(boy-9, dear-8)
appos(time-6, boy-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD knew)
        (NP (PRP$ your) (NN name))
        (ADVP (RB quite) (RB well))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD wanted)
        (S
          (VP (TO to)
            (VP (VB hear)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP you))
                  (VP (MD would)
                    (VP (VB say)
                      (PP (IN for)
                        (NP (PRP it))))))))))))
    (. .)))

nsubj(knew-2, I-1)
root(ROOT-0, knew-2)
poss(name-4, your-3)
dobj(knew-2, name-4)
advmod(well-6, quite-5)
advmod(knew-2, well-6)
nsubj(wanted-10, I-9)
nsubj(hear-12, I-9)
conj_but(knew-2, wanted-10)
aux(hear-12, to-11)
xcomp(wanted-10, hear-12)
dobj(say-16, what-13)
nsubj(say-16, you-14)
aux(say-16, would-15)
ccomp(hear-12, say-16)
prep_for(say-16, it-18)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP remember)
      (NP
        (NP (DT that) (NN day))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN man))
            (VP (VBD was)
              (VP (VBG finding)
                (NP (NN fault))
                (PP (IN with)
                  (NP (PRP$ your) (NN name)))))))
        (: --)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP I))
            (VP (VBD blew)
              (NP (DT the) (NN window))
              (PP (IN in)))))))
    (. ?) ('' '')))

nsubj(remember-4, Do-1)
neg(remember-4, n't-2)
nsubj(remember-4, you-3)
root(ROOT-0, remember-4)
det(day-6, that-5)
dobj(remember-4, day-6)
tmod(finding-11, day-6)
advmod(finding-11, when-7)
det(man-9, the-8)
nsubj(finding-11, man-9)
aux(finding-11, was-10)
rcmod(day-6, finding-11)
dobj(finding-11, fault-12)
poss(name-15, your-14)
prep_with(finding-11, name-15)
advmod(blew-19, how-17)
nsubj(blew-19, I-18)
dep(day-6, blew-19)
det(window-21, the-20)
dobj(blew-19, window-21)
prep(blew-19, in-22)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes) (, ,) (UH yes)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (NP (NNP eagerly)))
    (. .)))

dep(answered-7, Yes-2)
dep(Yes-2, yes-4)
root(ROOT-0, answered-7)
nsubj(answered-7, Diamond-8)
appos(Diamond-8, eagerly-10)

(ROOT
  (S (`` ``)
    (NP (PRP$ Our) (NN window))
    (VP (VBZ opens)
      (PP (IN like)
        (NP (DT a) (NN door)))
      (, ,)
      (ADVP (RB right)
        (PP (IN over)
          (NP (DT the) (JJ coach-house) (NN door)))))
    (. .)))

poss(window-3, Our-2)
nsubj(opens-4, window-3)
root(ROOT-0, opens-4)
det(door-7, a-6)
prep_like(opens-4, door-7)
advmod(opens-4, right-9)
det(door-13, the-11)
amod(door-13, coach-house-12)
prep_over(right-9, door-13)

(ROOT
  (S
    (S (CC And)
      (NP
        (NP (DT the) (NN wind))
        (PRN (: --)
          (NP
            (NP (PRP you))
            (, ,)
            (NP (NN ma'am)))
          (: --)))
      (VP
        (VP (VBD came)
          (PRT (RP in)))
        (, ,)
        (CC and)
        (VP (VBD blew)
          (NP (DT the) (NNP Bible))
          (PRT (RP out))
          (PP (IN of)
            (NP
              (NP (DT the) (NN man) (POS 's))
              (NNS hands))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS leaves))
      (VP (VBD went)
        (SBAR
          (S
            (NP
              (NP (DT all) (NN flutter))
              (, ,)
              (NP
                (NP (NN flutter))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN floor))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (PRP$ my) (NN mother))
                      (SBAR
                        (S
                          (VP
                            (VP (VBD picked)
                              (NP (PRP it))
                              (PRT (RP up)))
                            (CC and)
                            (VP (VBD gave)
                              (S
                                (NP (PRP it))
                                (UCP
                                  (ADVP (RB back)
                                    (PP (TO to)
                                      (NP (PRP him))))
                                  (ADJP (JJ open))
                                  (, ,)
                                  (CC and)
                                  (NP (RB there)))))))))
                    (: --) ('' '')))))
            (`` ``)
            (VP (VBD Was)
              (NP
                (NP
                  (NP (PRP$ your) (NN name))
                  (PP (IN in)
                    (NP (DT the) (NNP Bible))))
                (: --)
                (NP
                  (NP (DT the) (JJ sixth) (NN stone))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (JJ high) (NN priest) (POS 's))
                      (NN breastplate))))))))))
    (. .) ('' '')))

det(wind-3, the-2)
nsubj(came-9, wind-3)
nsubj(blew-13, wind-3)
dep(wind-3, you-5)
appos(you-5, ma'am-7)
root(ROOT-0, came-9)
prt(came-9, in-10)
conj_and(came-9, blew-13)
det(Bible-15, the-14)
dobj(blew-13, Bible-15)
det(man-19, the-18)
poss(hands-21, man-19)
prep_out_of(blew-13, hands-21)
det(leaves-25, the-24)
nsubj(went-26, leaves-25)
conj_and(came-9, went-26)
det(flutter-28, all-27)
nsubj(name-56, flutter-28)
appos(flutter-28, flutter-30)
det(floor-33, the-32)
prep_on(flutter-30, floor-33)
poss(mother-37, my-36)
prep_on(flutter-30, mother-37)
conj_and(floor-33, mother-37)
rcmod(mother-37, picked-38)
dobj(picked-38, it-39)
prt(picked-38, up-40)
rcmod(mother-37, gave-42)
conj_and(picked-38, gave-42)
dep(gave-42, it-43)
advmod(it-43, back-44)
prep_to(back-44, him-46)
dep(back-44, open-47)
advmod(it-43, there-50)
conj_and(back-44, there-50)
cop(name-56, Was-54)
poss(name-56, your-55)
ccomp(went-26, name-56)
det(Bible-59, the-58)
prep_in(name-56, Bible-59)
det(stone-63, the-61)
amod(stone-63, sixth-62)
dep(name-56, stone-63)
det(priest-67, the-65)
amod(priest-67, high-66)
poss(breastplate-69, priest-67)
prep_in(stone-63, breastplate-69)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S (: --)
    (S
      (NP (DT a) (VBG stone)))
    (, ,)
    (VP (VBD was)
      (NP (PRP it)))
    (. ?) ('' '')))

parataxis(it-6, a-2)
amod(a-2, stone-3)
cop(it-6, was-5)
root(ROOT-0, it-6)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD had)
              (VP (VBN been)
                (NP (DT a) (NN horse))))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBD did)))
    (. .) ('' '')))

nsubj(thought-3, I-2)
root(ROOT-0, thought-3)
nsubj(horse-8, it-4)
aux(horse-8, had-5)
cop(horse-8, been-6)
det(horse-8, a-7)
ccomp(thought-3, horse-8)
nsubj(did-11, I-10)
parataxis(thought-3, did-11)

(ROOT
  (S (`` ``)
    (ADVP (RB Never))
    (VP (VB mind))
    (. .)))

neg(mind-3, Never-2)
root(ROOT-0, mind-3)

(ROOT
  (S
    (NP (DT A) (NN horse))
    (VP (VBZ is)
      (ADJP
        (ADJP (JJR better))
        (PP (IN than)
          (NP
            (NP (DT a) (NN stone))
            (NP (DT any) (NN day))))))
    (. .)))

det(horse-2, A-1)
nsubj(better-4, horse-2)
cop(better-4, is-3)
root(ROOT-0, better-4)
det(stone-7, a-6)
prep_than(better-4, stone-7)
det(day-9, any-8)
dep(stone-7, day-9)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (PRP you))
    (VP (VB see) (, ,)
      (S
        (NP (PRP I))
        (VP (VB know)
          (NP (DT all))
          (PP (IN about)
            (NP
              (NP (PRP you))
              (CC and)
              (NP (PRP$ your) (NN mother)))))))
    (. .) ('' '')))

discourse(see-4, Well-1)
nsubj(see-4, you-3)
root(ROOT-0, see-4)
nsubj(know-7, I-6)
ccomp(see-4, know-7)
dobj(know-7, all-8)
prep_about(know-7, you-10)
poss(mother-13, your-12)
prep_about(know-7, mother-13)
conj_and(you-10, mother-13)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB go)
        (PP (IN with)
          (NP (PRP you)))))
    (. .) ('' '')))

nsubj(go-3, I-1)
aux(go-3, will-2)
root(ROOT-0, go-3)
prep_with(go-3, you-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Now)
      (PP (IN for)
        (NP (DT the) (JJ next) (NN question))))
    (: :)
    (S
      (NP (PRP you))
      (VP (VBP 're)
        (VP (RB not)
          (S
            (VP (TO to)
              (VP (VB call)
                (S
                  (NP (PRP me))
                  (VP (VB ma'am)))))))))
    (. .)))

advmod(not-10, Now-2)
det(question-6, the-4)
amod(question-6, next-5)
prep_for(Now-2, question-6)
nsubj(not-10, you-8)
nsubj(call-12, you-8)
aux(not-10, 're-9)
root(ROOT-0, not-10)
aux(call-12, to-11)
xcomp(not-10, call-12)
nsubj(ma'am-14, me-13)
ccomp(call-12, ma'am-14)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD must)
        (VP (VB call)
          (NP (PRP me))
          (PP (RB just)
            (NP (PRP$ my) (JJ own) (NN name))))))
    (: --)
    (S
      (ADVP (RB respectfully))
      (, ,)
      (NP (PRP you))
      (VP (VBP know) (: --)
        (NP (RB just) (JJ North) (NN Wind))))
    (. .) ('' '')))

nsubj(call-3, You-1)
aux(call-3, must-2)
root(ROOT-0, call-3)
dobj(call-3, me-4)
prep(call-3, just-5)
poss(name-8, my-6)
amod(name-8, own-7)
pobj(just-5, name-8)
advmod(know-13, respectfully-10)
nsubj(know-13, you-12)
parataxis(call-3, know-13)
advmod(Wind-17, just-15)
amod(Wind-17, North-16)
dobj(know-13, Wind-17)
parataxis(know-13, Wind-17)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (VP (VB please)))
    (, ,)
    (NP (NNP North))
    (ADVP (RB Wind))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (RB so) (JJ beautiful))))
      (, ,))
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (RB quite) (JJ ready)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN with)
                (NP (PRP you))))))))
    (. .) ('' '')))

discourse(please-4, Well-2)
ccomp(ready-17, please-4)
nsubj(ready-17, North-6)
nsubj(go-19, North-6)
advmod(ready-17, Wind-7)
nsubj(beautiful-12, you-9)
cop(beautiful-12, are-10)
advmod(beautiful-12, so-11)
parataxis(ready-17, beautiful-12)
nsubj(ready-17, I-14)
nsubj(go-19, I-14)
cop(ready-17, am-15)
advmod(ready-17, quite-16)
root(ROOT-0, ready-17)
aux(go-19, to-18)
xcomp(ready-17, go-19)
prep_with(go-19, you-21)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD must) (RB not)
      (VP (VB be)
        (ADJP (JJ ready)
          (S
            (VP (TO to)
              (VP (VB go)
                (PP (IN with)
                  (NP
                    (NP
                      (NP (NN everything))
                      (ADJP (JJ beautiful)
                        (ADVP (DT all) (IN at) (RB once))))
                    (, ,)
                    (NP (NNP Diamond))))))))))
    (. .) ('' '')))

nsubj(ready-6, You-2)
nsubj(go-8, You-2)
aux(ready-6, must-3)
neg(ready-6, not-4)
cop(ready-6, be-5)
root(ROOT-0, ready-6)
aux(go-8, to-7)
xcomp(ready-6, go-8)
prep_with(go-8, everything-10)
amod(everything-10, beautiful-11)
pobj(at-13, all-12)
advmod(beautiful-11, at-13)
advmod(at-13, once-14)
appos(everything-10, Diamond-16)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (WDT what))
    (VP (VBZ 's)
      (ADJP (JJ beautiful)
        (SBAR
          (S
            (VP (MD ca) (RB n't)
              (VP (VB be)
                (ADJP (JJ bad))))))))
    (. .)))

cc(beautiful-5, But-2)
nsubj(beautiful-5, what-3)
cop(beautiful-5, 's-4)
root(ROOT-0, beautiful-5)
aux(bad-9, ca-6)
neg(bad-9, n't-7)
cop(bad-9, be-8)
ccomp(beautiful-5, bad-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're) (RB not)
      (NP
        (ADJP (JJ bad) (, ,) (JJ North))
        (NN Wind)))
    (. ?) ('' '')))

nsubj(Wind-7, You-1)
cop(Wind-7, 're-2)
neg(Wind-7, not-3)
amod(North-6, bad-4)
amod(Wind-7, North-6)
root(ROOT-0, Wind-7)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (ADJP (JJ bad))))
    (. .)))

dep(bad-7, No-2)
nsubj(bad-7, I-4)
cop(bad-7, 'm-5)
neg(bad-7, not-6)
root(ROOT-0, bad-7)

(ROOT
  (S
    (S (CC But)
      (ADVP (RB sometimes))
      (NP (JJ beautiful) (NNS things))
      (VP (VBP grow)
        (ADJP (JJ bad)
          (PP (IN by)
            (S
              (VP (VBG doing)
                (ADJP (JJ bad))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ takes)
        (NP
          (NP (DT some) (NN time))
          (PP (IN for)
            (NP (PRP$ their) (NNS badness)
              (S
                (VP (TO to)
                  (VP (VB spoil)
                    (NP (PRP$ their) (NN beauty))))))))))
    (. .)))

advmod(grow-5, sometimes-2)
amod(things-4, beautiful-3)
nsubj(grow-5, things-4)
root(ROOT-0, grow-5)
acomp(grow-5, bad-6)
prepc_by(bad-6, doing-8)
acomp(doing-8, bad-9)
nsubj(takes-13, it-12)
conj_and(grow-5, takes-13)
det(time-15, some-14)
dobj(takes-13, time-15)
poss(badness-18, their-17)
prep_for(time-15, badness-18)
aux(spoil-20, to-19)
vmod(badness-18, spoil-20)
poss(beauty-22, their-21)
dobj(spoil-20, beauty-22)

(ROOT
  (S (IN So)
    (NP (JJ little) (NNS boys))
    (VP (MD may)
      (VP (VB be)
        (VP (VBN mistaken)
          (SBAR (IN if)
            (S
              (NP (PRP they))
              (VP (VBP go)
                (PP (IN after)
                  (NP (NNS things)))
                (SBAR (IN because)
                  (S
                    (NP (PRP they))
                    (VP (VBP are)
                      (ADJP (JJ beautiful)))))))))))
    (. .) ('' '')))

dep(mistaken-6, So-1)
amod(boys-3, little-2)
nsubjpass(mistaken-6, boys-3)
aux(mistaken-6, may-4)
auxpass(mistaken-6, be-5)
root(ROOT-0, mistaken-6)
mark(go-9, if-7)
nsubj(go-9, they-8)
advcl(mistaken-6, go-9)
prep_after(go-9, things-11)
mark(beautiful-15, because-12)
nsubj(beautiful-15, they-13)
cop(beautiful-15, are-14)
advcl(go-9, beautiful-15)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB go)
        (PP (IN with)
          (NP (PRP you)))
        (SBAR (IN because)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ beautiful)
                (CC and)
                (JJ good))
              (, ,)
              (ADVP (RB too)))))))
    (. .) ('' '')))

discourse(go-6, Well-2)
nsubj(go-6, I-4)
aux(go-6, will-5)
root(ROOT-0, go-6)
prep_with(go-6, you-8)
mark(beautiful-12, because-9)
nsubj(beautiful-12, you-10)
nsubj(good-14, you-10)
cop(beautiful-12, are-11)
advcl(go-6, beautiful-12)
advcl(go-6, good-14)
conj_and(beautiful-12, good-14)
advmod(beautiful-12, too-16)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Ah))
      (, ,)
      (CC but)
      (NP (EX there))
      (VP (VBZ 's)
        (NP
          (NP
            (NP (DT another) (NN thing))
            (, ,)
            (NP (NNP Diamond))
            (: :))
          (PRN (: --)
            (SBAR
              (NP (WP What))
              (IN if)
              (S
                (NP (PRP I))
                (VP (MD should)
                  (VP (VB look)
                    (ADJP (JJ ugly)
                      (PP (IN without)
                        (S
                          (VP (VBG being)
                            (ADJP (JJ bad))))))))))
            (: --)))))
    (NP (NN look))
    (VP (VBD ugly)
      (NP (PRP myself))
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (VP (VBG making)
              (S
                (NP (JJ ugly) (NNS things))
                (ADJP (JJ beautiful))))))))
    (. ?)))

discourse('s-6, Ah-2)
conj_but('s-6, there-5)
expl('s-6, there-5)
dep(ugly-24, there-5)
dep(ugly-24, 's-6)
det(thing-8, another-7)
nsubj('s-6, thing-8)
appos(thing-8, Diamond-10)
dep(look-17, What-13)
mark(look-17, if-14)
nsubj(look-17, I-15)
aux(look-17, should-16)
dep(thing-8, look-17)
acomp(look-17, ugly-18)
cop(bad-21, being-20)
prepc_without(ugly-18, bad-21)
nsubj(ugly-24, look-23)
root(ROOT-0, ugly-24)
dobj(ugly-24, myself-25)
mark(making-29, because-26)
nsubj(making-29, I-27)
aux(making-29, am-28)
advcl(ugly-24, making-29)
amod(things-31, ugly-30)
nsubj(beautiful-32, things-31)
xcomp(making-29, beautiful-32)

(ROOT
  (SBARQ
    (ADVP (RB --))
    (WHNP (WP What))
    (SQ
      (VP (VBZ then)))
    (. ?) ('' '')))

nsubj(then-3, What-2)
root(ROOT-0, then-3)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (ADVP (RB quite))
        (VP (VB understand)
          (NP (PRP you)))))
    (, ,)
    (NP (NNP North))
    (VP (VBZ Wind))
    (. .)))

nsubj(understand-6, I-2)
aux(understand-6, do-3)
neg(understand-6, n't-4)
advmod(understand-6, quite-5)
ccomp(Wind-10, understand-6)
dobj(understand-6, you-7)
nsubj(Wind-10, North-9)
root(ROOT-0, Wind-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBZ tell)
      (NP (PRP me))
      (FRAG (WP what) (RB then)))
    (. .) ('' '')))

nsubj(tell-2, You-1)
root(ROOT-0, tell-2)
dobj(tell-2, me-3)
dep(then-5, what-4)
dep(tell-2, then-5)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB tell)
        (NP (PRP you))))
    (. .)))

discourse(tell-6, Well-2)
nsubj(tell-6, I-4)
aux(tell-6, will-5)
root(ROOT-0, tell-6)
dobj(tell-6, you-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP see)
          (NP (PRP me))
          (PP (IN with)
            (NP
              (NP (PRP$ my) (NN face))
              (ADJP (RB all) (JJ black)))))))
    (, ,)
    (VP (VB do) (RB n't)
      (VP (VB be)
        (ADJP (JJ frightened))))
    (. .)))

mark(see-3, If-1)
nsubj(see-3, you-2)
advcl(frightened-14, see-3)
dobj(see-3, me-4)
poss(face-7, my-6)
prep_with(see-3, face-7)
advmod(black-9, all-8)
amod(face-7, black-9)
aux(frightened-14, do-11)
neg(frightened-14, n't-12)
cop(frightened-14, be-13)
root(ROOT-0, frightened-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP see)
          (S
            (NP (PRP me))
            (VP (VBG flapping)
              (NP (NNS wings))
              (PP (IN like)
                (NP (DT a) (NN bat) (POS 's))))))))
    (, ,)
    (S
      (ADJP (RB as) (JJ big))
      (PP (IN as)
        (NP (DT the) (JJ whole) (NN sky))))
    (, ,)
    (VP (VBP do) (RB n't)
      (VP (VB be)
        (ADJP (JJ frightened))))
    (. .)))

mark(see-3, If-1)
nsubj(see-3, you-2)
advcl(frightened-22, see-3)
nsubj(flapping-5, me-4)
dep(see-3, flapping-5)
dobj(flapping-5, wings-6)
det(bat-9, a-8)
prep_like(flapping-5, bat-9)
possessive(bat-9, 's-10)
advmod(big-13, as-12)
ccomp(frightened-22, big-13)
dep(big-13, as-14)
det(sky-17, the-15)
amod(sky-17, whole-16)
pobj(as-14, sky-17)
aux(frightened-22, do-19)
neg(frightened-22, n't-20)
cop(frightened-22, be-21)
root(ROOT-0, frightened-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP hear)
          (S
            (NP (PRP me))
            (VP (VBG raging)
              (PP
                (ADVP
                  (NP (CD ten) (NNS times))
                  (RBR worse))
                (IN than)
                (NP
                  (NP (NNP Mrs.) (NNP Bill))
                  (, ,)
                  (NP
                    (NP (DT the) (NN blacksmith) (POS 's))
                    (NN wife)))))))))
    (PRN (: --)
      (SBAR (RB even) (IN if)
        (S
          (NP (PRP you))
          (VP (VBP see)
            (S
              (NP (PRP me))
              (VP (VBG looking)
                (PRT (RP in))
                (PP (IN at)
                  (NP
                    (NP (NNS people) (POS 's))
                    (NNS windows)))
                (PP (IN like)
                  (NP
                    (NP (NNP Mrs.) (NNP Eve) (NNP Dropper))
                    (, ,)
                    (NP
                      (NP (DT the) (NN gardener) (POS 's))
                      (NN wife)))))))))
      (: --))
    (NP (PRP you))
    (VP (MD must)
      (VP (VB believe)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP am)
              (VP (VBG doing)
                (NP (PRP$ my) (NN work))))))))
    (. .)))

mark(hear-3, If-1)
nsubj(hear-3, you-2)
advcl(believe-41, hear-3)
nsubj(raging-5, me-4)
dep(hear-3, raging-5)
num(times-7, ten-6)
npadvmod(worse-8, times-7)
advmod(raging-5, worse-8)
nn(Bill-11, Mrs.-10)
prep_than(raging-5, Bill-11)
det(blacksmith-14, the-13)
poss(wife-16, blacksmith-14)
appos(Bill-11, wife-16)
advmod(see-21, even-18)
mark(see-21, if-19)
nsubj(see-21, you-20)
parataxis(believe-41, see-21)
nsubj(looking-23, me-22)
dep(see-21, looking-23)
prt(looking-23, in-24)
poss(windows-28, people-26)
prep_at(looking-23, windows-28)
nn(Dropper-32, Mrs.-30)
nn(Dropper-32, Eve-31)
prep_like(looking-23, Dropper-32)
det(gardener-35, the-34)
poss(wife-37, gardener-35)
appos(Dropper-32, wife-37)
nsubj(believe-41, you-39)
aux(believe-41, must-40)
root(ROOT-0, believe-41)
mark(doing-45, that-42)
nsubj(doing-45, I-43)
aux(doing-45, am-44)
ccomp(believe-41, doing-45)
poss(work-47, my-46)
dobj(doing-45, work-47)

(ROOT
  (S
    (NP (NNP Nay) (, ,) (NNP Diamond))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBP change)
          (PP (IN into)
            (NP
              (NP (DT a) (NN serpent))
              (CC or)
              (NP (DT a) (NN tiger)))))))
    (, ,)
    (NP (PRP you))
    (VP (MD must) (RB not)
      (VP (VB let) (VB go)
        (NP
          (NP (PRP$ your) (NN hold))
          (PP (IN of)
            (NP (PRP me))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP$ my) (NN hand))
            (VP (MD will)
              (ADVP (RB never))
              (VP (VB change)
                (PP (IN in)
                  (NP (NNP yours)))
                (SBAR (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VBP keep)
                      (NP (DT a) (JJ good) (NN hold)))))))))))
    (. .)))

nn(Diamond-3, Nay-1)
nsubj(let-18, Diamond-3)
mark(change-7, if-5)
nsubj(change-7, I-6)
advcl(let-18, change-7)
det(serpent-10, a-9)
prep_into(change-7, serpent-10)
det(tiger-13, a-12)
prep_into(change-7, tiger-13)
conj_or(serpent-10, tiger-13)
nsubj(let-18, you-15)
aux(let-18, must-16)
neg(let-18, not-17)
root(ROOT-0, let-18)
dep(let-18, go-19)
poss(hold-21, your-20)
dobj(let-18, hold-21)
prep_of(hold-21, me-23)
mark(change-30, for-25)
poss(hand-27, my-26)
nsubj(change-30, hand-27)
aux(change-30, will-28)
neg(change-30, never-29)
advcl(let-18, change-30)
prep_in(change-30, yours-32)
mark(keep-35, if-33)
nsubj(keep-35, you-34)
advcl(change-30, keep-35)
det(hold-38, a-36)
amod(hold-38, good-37)
dobj(keep-35, hold-38)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP keep)
          (NP (DT a) (NN hold)))))
    (, ,)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB know)
        (SBAR
          (SBAR
            (WHNP (WP who))
            (S
              (NP (PRP I))
              (VP (VBP am)
                (NP (PDT all) (DT the) (NN time)))))
          (, ,) (RB even)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP you))
              (VP
                (VP (VBP look)
                  (PP (IN at)
                    (NP (PRP me))))
                (CC and)
                (VP (MD ca) (RB n't)
                  (VP (VB see)
                    (S
                      (NP (PRP me))
                      (NP
                        (NP (DT the) (JJS least))
                        (PP (IN like)
                          (NP (DT the) (NNP North) (NN Wind)))))))))))))
    (. .)))

mark(keep-3, If-1)
nsubj(keep-3, you-2)
advcl(know-9, keep-3)
det(hold-5, a-4)
dobj(keep-3, hold-5)
nsubj(know-9, you-7)
aux(know-9, will-8)
root(ROOT-0, know-9)
dobj(time-15, who-10)
nsubj(time-15, I-11)
cop(time-15, am-12)
predet(time-15, all-13)
det(time-15, the-14)
dep(know-9, time-15)
advmod(time-15, even-17)
advmod(look-20, when-18)
nsubj(look-20, you-19)
nsubj(see-26, you-19)
dep(time-15, look-20)
prep_at(look-20, me-22)
aux(see-26, ca-24)
neg(see-26, n't-25)
dep(time-15, see-26)
conj_and(look-20, see-26)
nsubj(least-29, me-27)
det(least-29, the-28)
xcomp(see-26, least-29)
det(Wind-33, the-31)
nn(Wind-33, North-32)
prep_like(least-29, Wind-33)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD may)
      (VP (VB look)
        (NP
          (NP (NN something))
          (ADJP (RB very) (JJ awful)))))
    (. .)))

nsubj(look-3, I-1)
aux(look-3, may-2)
root(ROOT-0, look-3)
dobj(look-3, something-4)
advmod(awful-6, very-5)
amod(something-4, awful-6)

(ROOT
  (S
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB understand))))
    (. ?) ('' '')))

root(ROOT-0, Do-1)
nsubj(understand-3, you-2)
ccomp(Do-1, understand-3)

(ROOT
  (S
    (NP (`` ``)
      (NP (RB Quite) (RB well))
      (, ,) ('' ''))
    (VP (VBD said)
      (NP (JJ little) (NNP Diamond)))
    (. .)))

advmod(well-3, Quite-2)
nsubj(said-6, well-3)
root(ROOT-0, said-6)
amod(Diamond-8, little-7)
dobj(said-6, Diamond-8)

(ROOT
  (S
    (S (`` ``)
      (VP (VB Come)
        (ADVP (RB along))
        (, ,)
        (ADVP (RB then)))
      (, ,) ('' ''))
    (VP
      (VP (VBD said)
        (NP (JJ North) (NN Wind)))
      (, ,)
      (CC and)
      (VP (VBD disappeared)
        (PP (IN behind)
          (NP
            (NP (DT the) (NN mountain))
            (PP (IN of)
              (NP (NN hay)))))))
    (. .)))

csubj(said-8, Come-2)
csubj(disappeared-13, Come-2)
advmod(Come-2, along-3)
advmod(Come-2, then-5)
root(ROOT-0, said-8)
amod(Wind-10, North-9)
dobj(said-8, Wind-10)
conj_and(said-8, disappeared-13)
det(mountain-16, the-15)
prep_behind(disappeared-13, mountain-16)
prep_of(mountain-16, hay-18)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP
      (VP (VBD crept)
        (PRT (RP out))
        (PP (IN of)
          (NP (NN bed))))
      (CC and)
      (VP (VBD followed)
        (NP (PRP her))))
    (. .)))

nsubj(crept-2, Diamond-1)
nsubj(followed-7, Diamond-1)
root(ROOT-0, crept-2)
prep_out_of(crept-2, bed-5)
conj_and(crept-2, followed-7)
dobj(followed-7, her-8)

(ROOT
  (NP (NNP CHAPTER) (NNP II) (. .)))

nn(II-2, CHAPTER-1)
root(ROOT-0, II-2)

(ROOT
  (S
    (NP
      (NP (DT THE) (NN LAWN))
      (SBAR
        (WHADVP (WRB WHEN))
        (S
          (NP (NNP Diamond))
          (VP (VBD got)))))
    (VP (VBP round)
      (NP
        (NP (DT the) (NN corner))
        (PP (IN of)
          (NP (DT the) (NN hay))))
      (, ,)
      (PP (IN for)
        (NP
          (NP (DT a) (NN moment))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD hesitated)))))))
    (. .)))

det(LAWN-2, THE-1)
nsubj(round-6, LAWN-2)
advmod(got-5, WHEN-3)
nsubj(got-5, Diamond-4)
rcmod(LAWN-2, got-5)
root(ROOT-0, round-6)
det(corner-8, the-7)
dobj(round-6, corner-8)
det(hay-11, the-10)
prep_of(corner-8, hay-11)
det(moment-15, a-14)
prep_for(round-6, moment-15)
nsubj(hesitated-17, he-16)
rcmod(moment-15, hesitated-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NN stair))
      (SBAR
        (WHPP (IN by)
          (WHNP (WDT which)))
        (S
          (NP (PRP he))
          (VP (MD would)
            (ADVP (RB naturally))
            (VP (VB have)
              (VP (VBN gone)
                (PRT (RP down))
                (PP (TO to)
                  (NP (DT the) (NN door)))))))))
    (VP
      (VP (VBD was)
        (PP (IN at)
          (NP
            (NP (DT the) (JJ other) (NN side))
            (PP (IN of)
              (NP (DT the) (NN loft))))))
      (, ,)
      (CC and)
      (VP (VBD looked)
        (ADJP (RB very) (JJ black))
        (ADVP (RB indeed)))
      (: ;)
      (SBAR (IN for)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (JJ full))
            (PP (IN of)
              (NP
                (NP (NNP North) (NNP Wind) (POS 's))
                (NN hair)))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP she))
                (VP (VBD descended)
                  (PP (IN before)
                    (NP (PRP him))))))))))
    (. .)))

det(stair-2, The-1)
prep_by(gone-9, stair-2)
nsubj(was-14, stair-2)
nsubj(looked-24, stair-2)
nsubj(gone-9, he-5)
aux(gone-9, would-6)
advmod(gone-9, naturally-7)
aux(gone-9, have-8)
rcmod(stair-2, gone-9)
prt(gone-9, down-10)
det(door-13, the-12)
prep_to(gone-9, door-13)
root(ROOT-0, was-14)
det(side-18, the-16)
amod(side-18, other-17)
prep_at(was-14, side-18)
det(loft-21, the-20)
prep_of(side-18, loft-21)
conj_and(was-14, looked-24)
advmod(black-26, very-25)
acomp(looked-24, black-26)
advmod(looked-24, indeed-27)
mark(full-32, for-29)
nsubj(full-32, it-30)
cop(full-32, was-31)
advcl(was-14, full-32)
conj_and(was-14, full-32)
nn(Wind-35, North-34)
poss(hair-37, Wind-35)
prep_of(full-32, hair-37)
mark(descended-41, as-39)
nsubj(descended-41, she-40)
advcl(full-32, descended-41)
prep_before(descended-41, him-43)

(ROOT
  (SINV (CC And)
    (ADVP (RB just))
    (PP (IN beside)
      (NP (PRP him)))
    (VP (VBD was))
    (NP
      (NP (DT the) (NN ladder))
      (VP (VBG going)
        (ADVP (RB straight))
        (ADVP (RB down)
          (PP (IN into)
            (NP (DT the) (NN stable))))
        (, ,)
        (ADVP (RB up)))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP$ his) (NN father))
          (ADVP (RB always))
          (VP (VBD came)
            (S
              (VP (TO to)
                (VP (VB fetch)
                  (NP
                    (NP (DT the) (NN hay))
                    (PP (IN for)
                      (NP
                        (NP (NNP Diamond) (POS 's))
                        (NN dinner)))))))))))
    (. .)))

cc(was-5, And-1)
advmod(was-5, just-2)
prep_beside(was-5, him-4)
root(ROOT-0, was-5)
det(ladder-7, the-6)
nsubj(was-5, ladder-7)
dobj(came-20, ladder-7)
nsubj(fetch-22, ladder-7)
vmod(ladder-7, going-8)
advmod(going-8, straight-9)
advmod(going-8, down-10)
det(stable-13, the-12)
prep_into(down-10, stable-13)
advmod(going-8, up-15)
poss(father-18, his-17)
nsubj(came-20, father-18)
advmod(came-20, always-19)
rcmod(ladder-7, came-20)
aux(fetch-22, to-21)
xcomp(came-20, fetch-22)
det(hay-24, the-23)
dobj(fetch-22, hay-24)
poss(dinner-28, Diamond-26)
prep_for(hay-24, dinner-28)

(ROOT
  (S
    (S
      (PP (IN Through)
        (NP
          (NP (DT the) (NN opening))
          (PP (IN in)
            (NP (DT the) (NN floor)))))
      (NP
        (NP (DT the) (JJ faint) (NN gleam))
        (PP (IN of)
          (NP (JJ the-stable) (NN lantern))))
      (VP (VBD was)
        (VP (VBG enticing))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Diamond))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB run)
                (PRT (RP down))
                (NP (DT that) (NN way))))))))
    (. .)))

det(opening-3, the-2)
prep_through(enticing-14, opening-3)
det(floor-6, the-5)
prep_in(opening-3, floor-6)
det(gleam-9, the-7)
amod(gleam-9, faint-8)
nsubj(enticing-14, gleam-9)
amod(lantern-12, the-stable-11)
prep_of(gleam-9, lantern-12)
aux(enticing-14, was-13)
root(ROOT-0, enticing-14)
nsubj(thought-18, Diamond-17)
conj_and(enticing-14, thought-18)
nsubj(run-21, he-19)
aux(run-21, would-20)
ccomp(thought-18, run-21)
prt(run-21, down-22)
det(way-24, that-23)
dobj(run-21, way-24)

(ROOT
  (S
    (NP (DT The) (NN stair))
    (VP (VBD went)
      (SBAR
        (ADVP (JJ close) (NN past))
        (WHNP
          (NP (DT the) (JJ loose-box))
          (WHPP (IN in)
            (WHNP (WDT which) (NN Diamond))))
        (S
          (NP (DT the) (NN horse))
          (VP (VBD lived)))))
    (. .)))

det(stair-2, The-1)
nsubj(went-3, stair-2)
root(ROOT-0, went-3)
advmod(lived-13, close-4)
dep(close-4, past-5)
det(loose-box-7, the-6)
dobj(lived-13, loose-box-7)
det(Diamond-10, which-9)
prep_in(loose-box-7, Diamond-10)
det(horse-12, the-11)
nsubj(lived-13, horse-12)
ccomp(went-3, lived-13)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When) (RB Diamond))
      (S
        (NP (DT the) (NN boy))
        (VP (VBD was)
          (VP (VBN half-way)
            (PRT (RP down))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD remembered)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (PP (IN of)
              (NP (DT no) (NN use)
                (S
                  (VP (TO to)
                    (VP (VB go)
                      (NP (DT this) (NN way)))))))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (DT the) (NN stable-door))
                (VP (VBD was)
                  (VP (VBN locked)))))))))
    (. .)))

advmod(Diamond-2, When-1)
advmod(half-way-6, Diamond-2)
det(boy-4, the-3)
nsubjpass(half-way-6, boy-4)
auxpass(half-way-6, was-5)
advcl(remembered-10, half-way-6)
prt(half-way-6, down-7)
nsubj(remembered-10, he-9)
root(ROOT-0, remembered-10)
mark(was-13, that-11)
nsubj(was-13, it-12)
ccomp(remembered-10, was-13)
neg(use-16, no-15)
prep_of(was-13, use-16)
aux(go-18, to-17)
vmod(use-16, go-18)
det(way-20, this-19)
dobj(go-18, way-20)
mark(locked-26, for-22)
det(stable-door-24, the-23)
nsubjpass(locked-26, stable-door-24)
auxpass(locked-26, was-25)
advcl(was-13, locked-26)

(ROOT
  (S (CC But)
    (PP (IN at)
      (NP (DT the) (JJ same) (NN moment)))
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (NN horse))
        (SBAR
          (S
            (NP
              (NP (NNP Diamond) (POS 's))
              (JJ great) (NN head))
            (VP (VBD poked)
              (PRT (RP out))
              (PP (IN of)
                (NP (PRP$ his) (NN box)))
              (PP (IN on)
                (PP (TO to)
                  (NP (DT the) (NN ladder))))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP he))
                  (VP
                    (VP (VBD knew)
                      (NP (NN boy) (NNS Diamond))
                      (SBAR (IN although)
                        (S
                          (NP (PRP he))
                          (VP (VBD was)
                            (PP (IN in)
                              (NP (PRP$ his) (NN night-gown)))))))
                    (, ,)
                    (CC and)
                    (VP (VBD wanted)
                      (S
                        (NP (PRP him))
                        (VP (TO to)
                          (VP (VB pull)
                            (NP (PRP$ his) (NNS ears))
                            (PP (IN for)
                              (NP (PRP him)))))))))))))))
    (. .)))

cc(was-7, But-1)
det(moment-5, the-3)
amod(moment-5, same-4)
prep_at(was-7, moment-5)
expl(was-7, there-6)
root(ROOT-0, was-7)
nsubj(was-7, horse-8)
poss(head-12, Diamond-9)
amod(head-12, great-11)
nsubj(poked-13, head-12)
rcmod(horse-8, poked-13)
poss(box-17, his-16)
prep_out_of(poked-13, box-17)
prep(poked-13, on-18)
pcomp(on-18, to-19)
det(ladder-21, the-20)
pobj(to-19, ladder-21)
mark(knew-25, for-23)
nsubj(knew-25, he-24)
nsubj(wanted-36, he-24)
advcl(poked-13, knew-25)
nn(Diamond-27, boy-26)
dobj(knew-25, Diamond-27)
mark(was-30, although-28)
nsubj(was-30, he-29)
advcl(knew-25, was-30)
poss(night-gown-33, his-32)
prep_in(was-30, night-gown-33)
advcl(poked-13, wanted-36)
conj_and(knew-25, wanted-36)
dobj(wanted-36, him-37)
nsubj(pull-39, him-37)
aux(pull-39, to-38)
xcomp(wanted-36, pull-39)
poss(ears-41, his-40)
dobj(pull-39, ears-41)
prep_for(pull-39, him-43)

(ROOT
  (S
    (NP (DT This) (NNP Diamond))
    (VP
      (VP (VBD did)
        (ADVP (RB very) (RB gently))
        (PP (IN for)
          (NP (DT a) (NN minute)
            (CC or)
            (RB so))))
      (, ,)
      (CC and)
      (VP
        (VP (VBD patted))
        (CC and)
        (VP (VBD stroked)
          (NP (PRP$ his) (NN neck))
          (ADVP (RB too)))
        (, ,)
        (CC and)
        (VP (VBD kissed)
          (NP (DT the) (JJ big) (NN horse)))
        (, ,)
        (CC and)
        (VP (VBD had)
          (VP (VBN begun)
            (S
              (VP (TO to)
                (VP
                  (VP (VB take)
                    (NP
                      (NP (DT the) (NNS bits))
                      (PP (IN of)
                        (NP (NN straw)))))
                  (CC and)
                  (VP (VB hay)
                    (PRT (RP out))
                    (PP (IN of)
                      (NP
                        (NP (PRP$ his) (NN mane))
                        (, ,)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (ADVP (DT all)
                              (PP (IN at)
                                (ADVP (RB once))))
                            (NP (PRP he))
                            (VP (VBD recollected)
                              (SBAR (IN that)
                                (S
                                  (NP (DT the) (NNP Lady) (NNP North) (NN Wind))
                                  (VP (VBD was)
                                    (VP (VBG waiting)
                                      (PP (IN for)
                                        (NP (PRP him)))
                                      (PP (IN in)
                                        (NP (DT the) (NN yard))))))))))))))))))))
    (. .)))

det(Diamond-2, This-1)
nsubj(did-3, Diamond-2)
nsubj(patted-13, Diamond-2)
root(ROOT-0, did-3)
advmod(gently-5, very-4)
advmod(did-3, gently-5)
det(minute-8, a-7)
prep_for(did-3, minute-8)
prep_for(did-3, so-10)
advmod(minute-8, so-10)
conj_or(minute-8, so-10)
conj_and(did-3, patted-13)
conj_and(did-3, stroked-15)
conj_and(patted-13, stroked-15)
poss(neck-17, his-16)
dobj(stroked-15, neck-17)
advmod(stroked-15, too-18)
conj_and(did-3, kissed-21)
conj_and(patted-13, kissed-21)
det(horse-24, the-22)
amod(horse-24, big-23)
dobj(kissed-21, horse-24)
aux(begun-28, had-27)
conj_and(did-3, begun-28)
conj_and(patted-13, begun-28)
aux(take-30, to-29)
xcomp(begun-28, take-30)
det(bits-32, the-31)
dobj(take-30, bits-32)
prep_of(bits-32, straw-34)
xcomp(begun-28, hay-36)
conj_and(take-30, hay-36)
poss(mane-40, his-39)
prep_out_of(hay-36, mane-40)
tmod(recollected-47, mane-40)
mark(waiting-54, mane-40)
advmod(recollected-47, when-42)
advmod(recollected-47, all-43)
prep(all-43, at-44)
pcomp(at-44, once-45)
nsubj(recollected-47, he-46)
rcmod(mane-40, recollected-47)
det(Wind-52, the-49)
nn(Wind-52, Lady-50)
nn(Wind-52, North-51)
nsubj(waiting-54, Wind-52)
aux(waiting-54, was-53)
ccomp(recollected-47, waiting-54)
prep_for(waiting-54, him-56)
det(yard-59, the-58)
prep_in(waiting-54, yard-59)

(ROOT
  (S (`` ``)
    (NP (JJ Good) (NN night))
    (, ,)
    (NP (NNP Diamond))
    (, ,) ('' '')
    (NP (PRP he))
    (VP
      (VP (VBD said))
      (, ,)
      (CC and)
      (VP (VBD darted)
        (PRT (RP up))
        (NP
          (NP (DT the) (NN ladder))
          (, ,)
          (UCP
            (PP (IN across)
              (NP (DT the) (NN loft)))
            (, ,)
            (CC and)
            (ADVP (IN down)
              (NP (DT the) (NN stair))
              (PP (TO to)
                (NP (DT the) (NN door))))))))
    (. .)))

amod(night-3, Good-2)
tmod(said-9, night-3)
nsubj(said-9, Diamond-5)
nsubj(darted-12, Diamond-5)
nsubj(said-9, he-8)
root(ROOT-0, said-9)
conj_and(said-9, darted-12)
prt(darted-12, up-13)
det(ladder-15, the-14)
dobj(darted-12, ladder-15)
dobj(darted-12, ladder-15')
conj_and(ladder-15, ladder-15')
det(loft-19, the-18)
prep_across(ladder-15, loft-19)
det(stair-24, the-23)
prep_down(ladder-15', stair-24)
det(door-27, the-26)
prep_to(ladder-15, door-27)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBD got)
          (PRT (RP out))
          (PP (IN into)
            (NP (DT the) (NN yard))))))
    (, ,)
    (NP (EX there))
    (VP (VBD was)
      (NP (DT no) (NN lady)))
    (. .)))

cc(was-11, But-1)
advmod(got-4, when-2)
nsubj(got-4, he-3)
advcl(was-11, got-4)
prt(got-4, out-5)
det(yard-8, the-7)
prep_into(got-4, yard-8)
expl(was-11, there-10)
root(ROOT-0, was-11)
neg(lady-13, no-12)
nsubj(was-11, lady-13)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB always))
      (NP (DT a) (JJ dreadful) (NN thing)
        (S
          (VP (TO to)
            (VP
              (VP (VB think)
                (SBAR
                  (S
                    (NP (EX there))
                    (VP (VBZ is)
                      (NP (NN somebody))))))
              (CC and)
              (VP (VB find)
                (NP (NN nobody))))))))
    (. .)))

advmod(thing-7, Now-1)
nsubj(thing-7, it-2)
cop(thing-7, is-3)
advmod(thing-7, always-4)
det(thing-7, a-5)
amod(thing-7, dreadful-6)
root(ROOT-0, thing-7)
aux(think-9, to-8)
vmod(thing-7, think-9)
expl(is-11, there-10)
ccomp(think-9, is-11)
nsubj(is-11, somebody-12)
vmod(thing-7, find-14)
conj_and(think-9, find-14)
dobj(find-14, nobody-15)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Children))
        (PP (IN in)
          (NP (NN particular))))
      (VP (VBP have) (RB not)
        (VP (VBN made)
          (PRT (RP up))
          (NP (PRP$ their) (NNS minds))
          (PP (TO to)
            (NP (PRP it))))))
    (: ;)
    (S
      (NP (PRP they))
      (ADVP (RB generally))
      (VP (VB cry)
        (PP (IN at)
          (NP
            (NP (NN nobody))
            (, ,)
            (SBAR
              (WHADVP (RB especially) (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP wake)
                  (PRT (RP up))
                  (PP (IN at)
                    (NP (NN night))))))))))
    (. .)))

nsubj(made-6, Children-1)
prep_in(Children-1, particular-3)
aux(made-6, have-4)
neg(made-6, not-5)
root(ROOT-0, made-6)
prt(made-6, up-7)
poss(minds-9, their-8)
dobj(made-6, minds-9)
prep_to(made-6, it-11)
nsubj(cry-15, they-13)
advmod(cry-15, generally-14)
parataxis(made-6, cry-15)
prep_at(cry-15, nobody-17)
tmod(wake-22, nobody-17)
advmod(when-20, especially-19)
advmod(wake-22, when-20)
nsubj(wake-22, they-21)
rcmod(nobody-17, wake-22)
prt(wake-22, up-23)
prep_at(wake-22, night-25)

(ROOT
  (S
    (S (CC But)
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT an) (JJ especial) (NN disappointment))
          (PP (TO to)
            (NP (NNP Diamond))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP$ his) (JJ little) (NN heart))
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBG beating)
                  (PP (IN with)
                    (NP (NN joy))))))))))
    (: :)
    (S
      (NP
        (NP (DT the) (NN face))
        (PP (IN of)
          (NP (DT the) (NNP North) (NN Wind))))
      (VP (VBD was)
        (ADJP (RB so) (JJ grand))))
    (. !)))

cc(disappointment-6, But-1)
nsubj(disappointment-6, it-2)
cop(disappointment-6, was-3)
det(disappointment-6, an-4)
amod(disappointment-6, especial-5)
root(ROOT-0, disappointment-6)
prep_to(disappointment-6, Diamond-8)
mark(beating-16, for-10)
poss(heart-13, his-11)
amod(heart-13, little-12)
nsubj(beating-16, heart-13)
aux(beating-16, had-14)
aux(beating-16, been-15)
advcl(disappointment-6, beating-16)
prep_with(beating-16, joy-18)
det(face-21, the-20)
nsubj(grand-28, face-21)
det(Wind-25, the-23)
nn(Wind-25, North-24)
prep_of(face-21, Wind-25)
cop(grand-28, was-26)
advmod(grand-28, so-27)
parataxis(disappointment-6, grand-28)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB have)
          (NP (DT a) (NN lady)))))
    (VP (VBP like)
      (NP
        (NP (DT that))
        (PP (IN for)
          (NP (DT a) (NN friend))))
      (: --)
      (PP (IN with)
        (NP (JJ such) (JJ long) (NN hair)))
      (, ,)
      (ADVP (RB too)))
    (. !)))

aux(have-2, To-1)
csubj(like-5, have-2)
det(lady-4, a-3)
dobj(have-2, lady-4)
root(ROOT-0, like-5)
dobj(like-5, that-6)
det(friend-9, a-8)
prep_for(that-6, friend-9)
amod(hair-14, such-12)
amod(hair-14, long-13)
prep_with(like-5, hair-14)
advmod(like-5, too-16)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB longer)
        (PP (IN than)
          (NP
            (NP (NNP twenty) (NNP Diamonds) (POS '))
            (NNS tails)))))
    (. !)))

discourse(was-4, Why-1)
nsubj(was-4, it-3)
root(ROOT-0, was-4)
advmod(was-4, longer-5)
nn(Diamonds-8, twenty-7)
poss(tails-10, Diamonds-8)
prep_than(longer-5, tails-10)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (VP (VBN gone)))
    (. .)))

nsubjpass(gone-3, She-1)
auxpass(gone-3, was-2)
root(ROOT-0, gone-3)

(ROOT
  (S (CC And)
    (ADVP (RB there))
    (NP (PRP he))
    (VP (VBD stood) (, ,)
      (PP (IN with)
        (NP (PRP$ his) (JJ bare) (NNS feet)))
      (PP (IN on)
        (NP
          (NP (DT the) (NNS stones))
          (PP (IN of)
            (NP (DT the) (JJ paved) (NN yard))))))
    (. .)))

cc(stood-4, And-1)
advmod(stood-4, there-2)
nsubj(stood-4, he-3)
root(ROOT-0, stood-4)
poss(feet-9, his-7)
amod(feet-9, bare-8)
prep_with(stood-4, feet-9)
det(stones-12, the-11)
prep_on(stood-4, stones-12)
det(yard-16, the-14)
amod(yard-16, paved-15)
prep_of(stones-12, yard-16)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT a)
          (ADJP (JJ clear)
            (NP (NN night)))
          (NN overhead))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS stars))
      (VP (VBD were)
        (VP (VBG shining))))
    (. .)))

nsubj(overhead-6, It-1)
cop(overhead-6, was-2)
det(overhead-6, a-3)
amod(overhead-6, clear-4)
tmod(clear-4, night-5)
root(ROOT-0, overhead-6)
det(stars-10, the-9)
nsubj(shining-12, stars-10)
aux(shining-12, were-11)
conj_and(overhead-6, shining-12)

(ROOT
  (S
    (NP
      (NP (NNP Orion))
      (PP (IN in)
        (NP (NN particular))))
    (VP (VBD was)
      (VP (VBG making)
        (NP
          (NP (DT the) (JJS most))
          (PP (IN of)
            (NP
              (NP (PRP$ his) (JJ bright) (NN belt))
              (CC and)
              (NP (JJ golden) (NN sword)))))))
    (. .)))

nsubj(making-5, Orion-1)
prep_in(Orion-1, particular-3)
aux(making-5, was-4)
root(ROOT-0, making-5)
det(most-7, the-6)
dobj(making-5, most-7)
poss(belt-11, his-9)
amod(belt-11, bright-10)
prep_of(most-7, belt-11)
amod(sword-14, golden-13)
prep_of(most-7, sword-14)
conj_and(belt-11, sword-14)

(ROOT
  (S (CC But)
    (NP (DT the) (NN moon))
    (VP (VBD was)
      (ADVP (RB only))
      (NP (DT a) (JJ poor) (JJ thin) (NN crescent)))
    (. .)))

cc(crescent-9, But-1)
det(moon-3, the-2)
nsubj(crescent-9, moon-3)
cop(crescent-9, was-4)
advmod(crescent-9, only-5)
det(crescent-9, a-6)
amod(crescent-9, poor-7)
amod(crescent-9, thin-8)
root(ROOT-0, crescent-9)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (ADVP (RB just))
        (NP
          (NP (CD one)
            (ADJP (JJ great) (, ,) (JJ jagged) (, ,) (JJ black)
              (CC and)
              (JJ gray))
            (NN cloud))
          (PP (IN in)
            (NP (DT the) (NN sky))))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT a) (JJ steep) (NN side))
            (PP (TO to)
              (NP (PRP it)))
            (PP (IN like)
              (NP (DT a) (NN precipice)))))))
    (: ;)
    (CC and)
    (S
      (NP (DT the) (NN moon))
      (VP
        (VP (VBD was)
          (PP (IN against)
            (NP (DT this) (NN side))))
        (, ,)
        (CC and)
        (VP (VBD looked)
          (SBAR (RB as) (IN if)
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP
                  (VP (VBD tumbled)
                    (PRT (RP off))
                    (NP
                      (NP (DT the) (NN top))
                      (PP (IN of)
                        (NP (DT the) (NN cloud-hill)))))
                  (, ,)
                  (CC and)
                  (VP (VBN broken)
                    (NP (PRP herself))
                    (PP (IN in)
                      (S
                        (VP (VBG rolling)
                          (PRT (RP down))
                          (NP (DT the) (NN precipice)))))))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
advmod(was-2, just-3)
num(cloud-12, one-4)
amod(cloud-12, great-5)
conj_and(great-5, jagged-7)
amod(cloud-12, jagged-7)
conj_and(great-5, black-9)
amod(cloud-12, black-9)
conj_and(great-5, gray-11)
amod(cloud-12, gray-11)
nsubj(was-2, cloud-12)
det(sky-15, the-14)
prep_in(cloud-12, sky-15)
det(side-20, a-18)
amod(side-20, steep-19)
prep_with(was-2, side-20)
prep_to(side-20, it-22)
det(precipice-25, a-24)
prep_like(side-20, precipice-25)
det(moon-29, the-28)
nsubj(was-30, moon-29)
nsubj(looked-36, moon-29)
conj_and(was-2, was-30)
det(side-33, this-32)
prep_against(was-30, side-33)
conj_and(was-2, looked-36)
conj_and(was-30, looked-36)
advmod(tumbled-41, as-37)
mark(tumbled-41, if-38)
nsubj(tumbled-41, she-39)
nsubj(broken-50, she-39)
aux(tumbled-41, had-40)
advcl(looked-36, tumbled-41)
prt(tumbled-41, off-42)
det(top-44, the-43)
dobj(tumbled-41, top-44)
det(cloud-hill-47, the-46)
prep_of(top-44, cloud-hill-47)
advcl(looked-36, broken-50)
conj_and(tumbled-41, broken-50)
dobj(broken-50, herself-51)
prepc_in(broken-50, rolling-53)
prt(rolling-53, down-54)
det(precipice-56, the-55)
dobj(rolling-53, precipice-56)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD did) (RB not)
      (VP (VB seem)
        (ADJP (JJ comfortable))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP she))
            (VP (VBD was)
              (VP (VBG looking)
                (PRT (RP down))
                (PP (IN into)
                  (NP (DT the) (JJ deep) (NN pit)))
                (S
                  (VP (VBG waiting)
                    (PP (IN for)
                      (NP (PRP her)))))))))))
    (. .)))

nsubj(seem-4, She-1)
aux(seem-4, did-2)
neg(seem-4, not-3)
root(ROOT-0, seem-4)
acomp(seem-4, comfortable-5)
mark(looking-10, for-7)
nsubj(looking-10, she-8)
aux(looking-10, was-9)
advcl(seem-4, looking-10)
prt(looking-10, down-11)
det(pit-15, the-13)
amod(pit-15, deep-14)
prep_into(looking-10, pit-15)
vmod(looking-10, waiting-16)
prep_for(waiting-16, her-18)

(ROOT
  (S
    (ADVP (IN At) (JJS least))
    (NP (DT that))
    (VP (VBD was)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNP Diamond))
          (VP (VBD thought)
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (VBD stood)
                  (PP (IN for)
                    (NP (DT a) (NN moment)))
                  (PP (VBG staring)
                    (PP (IN at)
                      (NP (PRP her)))))))))))
    (. .)))

advmod(was-4, At-1)
pobj(At-1, least-2)
nsubj(was-4, that-3)
root(ROOT-0, was-4)
dobj(thought-7, what-5)
nsubj(thought-7, Diamond-6)
ccomp(was-4, thought-7)
mark(stood-10, as-8)
nsubj(stood-10, he-9)
advcl(thought-7, stood-10)
det(moment-13, a-12)
prep_for(stood-10, moment-13)
prep(stood-10, staring-14)
pcomp(staring-14, at-15)
pobj(at-15, her-16)

(ROOT
  (S (CC But)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (RB quite) (JJ wrong))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (DT the) (NN moon))
            (VP (VBD was) (RB not)
              (ADJP (JJ afraid)))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (DT no) (NN pit))
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBD was)
                  (VP (VBG going)
                    (PRT (RP down))
                    (PP (IN into))
                    (, ,)
                    (SBAR (IN for)
                      (S
                        (NP (EX there))
                        (VP (VBD were)
                          (NP
                            (NP (DT no) (NNS sides))
                            (PP (TO to)
                              (NP (PRP it))))))))))))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (DT a) (NN pit))
          (PP (IN without)
            (NP
              (NP (NNS sides))
              (PP (TO to)
                (NP (PRP it))))))
        (VP (VBZ is) (RB not)
          (NP (DT a) (NN pit))
          (ADVP (IN at) (DT all)))))
    (. .)))

nsubj(wrong-5, he-2)
cop(wrong-5, was-3)
advmod(wrong-5, quite-4)
root(ROOT-0, wrong-5)
mark(afraid-12, for-7)
det(moon-9, the-8)
nsubj(afraid-12, moon-9)
cop(afraid-12, was-10)
neg(afraid-12, not-11)
advcl(wrong-5, afraid-12)
expl(was-16, there-15)
conj_and(wrong-5, was-16)
neg(pit-18, no-17)
nsubj(was-16, pit-18)
prep_into(going-21, pit-18)
nsubj(going-21, she-19)
aux(going-21, was-20)
rcmod(pit-18, going-21)
prt(going-21, down-22)
mark(were-27, for-25)
expl(were-27, there-26)
advcl(going-21, were-27)
neg(sides-29, no-28)
nsubj(were-27, sides-29)
prep_to(sides-29, it-31)
det(pit-35, a-34)
nsubj(pit-43, pit-35)
prep_without(pit-35, sides-37)
prep_to(sides-37, it-39)
cop(pit-43, is-40)
neg(pit-43, not-41)
det(pit-43, a-42)
conj_and(wrong-5, pit-43)
conj_and(was-16, pit-43)
advmod(pit-43, at-44)
pobj(at-44, all-45)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (VP (VBD had) (RB not)
        (VP (VBN been)
          (ADJP (IN out) (RB so) (JJ late))
          (PP (IN before)
            (PP (IN in)
              (NP (PDT all) (PRP$ his) (NN life)))))))
    (, ,)
    (CC and)
    (S
      (NP (NNS things))
      (VP (VBD looked)
        (ADJP (RB so) (JJ strange))
        (PP (IN about)
          (NP (PRP him)))))
    (. !)))

nsubj(late-10, Diamond-1)
advmod(late-10, however-3)
aux(late-10, had-5)
neg(late-10, not-6)
cop(late-10, been-7)
dep(late-10, out-8)
advmod(late-10, so-9)
root(ROOT-0, late-10)
prep(late-10, before-11)
pcomp(before-11, in-12)
predet(life-15, all-13)
poss(life-15, his-14)
pobj(in-12, life-15)
nsubj(looked-19, things-18)
conj_and(late-10, looked-19)
advmod(strange-21, so-20)
acomp(looked-19, strange-21)
prep_about(looked-19, him-23)

(ROOT
  (PRN (: --)
    (ADVP
      (ADVP (RB just) (RB as))
      (SBAR (IN if)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN got)
              (PP (IN into)
                (NP
                  (NP (NNP Fairyland))
                  (, ,)
                  (SBAR
                    (WHPP (IN of)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP he))
                      (VP (VBD knew)
                        (ADVP (RB quite) (RB as) (RB much))
                        (PP (IN as)
                          (NP (NN anybody))))))))))
          (: ;)
          (SBAR (IN for)
            (S
              (NP (PRP$ his) (NN mother))
              (VP (VBD had)
                (NP (DT no) (NN money)
                  (S
                    (VP (TO to)
                      (VP (VB buy)
                        (S
                          (NP (NNS books))
                          (VP (TO to)
                            (VP (VB set)
                              (S
                                (NP (PRP him))
                                (ADJP (JJ wrong)
                                  (PP (IN on)
                                    (NP (DT the) (NN subject)))))))))))))))))
      (. .))))

advmod(as-3, just-2)
root(ROOT-0, as-3)
mark(got-7, if-4)
nsubj(got-7, he-5)
aux(got-7, had-6)
advcl(as-3, got-7)
prep_into(got-7, Fairyland-9)
prep_of(knew-14, Fairyland-9)
nsubj(knew-14, he-13)
rcmod(Fairyland-9, knew-14)
advmod(much-17, quite-15)
advmod(much-17, as-16)
advmod(knew-14, much-17)
prep_as(knew-14, anybody-19)
mark(had-24, for-21)
poss(mother-23, his-22)
nsubj(had-24, mother-23)
parataxis(got-7, had-24)
neg(money-26, no-25)
dobj(had-24, money-26)
aux(buy-28, to-27)
vmod(money-26, buy-28)
dobj(buy-28, books-29)
nsubj(set-31, books-29)
aux(set-31, to-30)
xcomp(buy-28, set-31)
nsubj(wrong-33, him-32)
xcomp(set-31, wrong-33)
det(subject-36, the-35)
prep_on(wrong-33, subject-36)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN seen)
          (NP (DT this) (NN world) (: --) (JJ only))
          (ADVP (RB sometimes))
          (, ,)
          (ADVP (RB just) (RB now)))))
    (CC and)
    (S
      (ADVP (RB then))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)
        (PRN (: --)
          (S
            (VP (VB look)
              (ADJP (RB as) (JJ strange)))))
        (SBAR (IN as)
          (S
            (ADVP (RB ever))
            (NP (PRP I))
            (VP (VBD saw)
              (NP (NNP Fairyland)))))))
    (. .)))

nsubj(seen-3, I-1)
aux(seen-3, have-2)
root(ROOT-0, seen-3)
det(world-5, this-4)
dobj(seen-3, world-5)
amod(world-5, only-7)
advmod(seen-3, sometimes-8)
advmod(now-11, just-10)
advmod(seen-3, now-11)
advmod(know-16, then-13)
nsubj(know-16, you-15)
conj_and(seen-3, know-16)
parataxis(know-16, look-18)
advmod(strange-20, as-19)
acomp(look-18, strange-20)
mark(saw-24, as-21)
advmod(saw-24, ever-22)
nsubj(saw-24, I-23)
advcl(know-16, saw-24)
dobj(saw-24, Fairyland-25)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBZ confess)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP have) (RB not)
            (ADVP (RB yet))
            (VP (VBN seen)
              (NP
                (NP (NNP Fairyland))
                (PP (IN at)
                  (NP (PRP$ its) (JJS best)))))))))
    (. .)))

cc(confess-3, But-1)
nsubj(confess-3, I-2)
root(ROOT-0, confess-3)
mark(seen-9, that-4)
nsubj(seen-9, I-5)
aux(seen-9, have-6)
neg(seen-9, not-7)
advmod(seen-9, yet-8)
ccomp(confess-3, seen-9)
dobj(seen-9, Fairyland-10)
poss(best-13, its-12)
prep_at(Fairyland-10, best-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB always))
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP it))
              (ADVP (RB so)
                (NP (DT some) (NN time))))))))
    (. .)))

nsubj(going-4, I-1)
nsubj(see-6, I-1)
aux(going-4, am-2)
advmod(going-4, always-3)
root(ROOT-0, going-4)
aux(see-6, to-5)
xcomp(going-4, see-6)
dobj(see-6, it-7)
advmod(see-6, so-8)
det(time-10, some-9)
pobj(so-8, time-10)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBD had)
          (VP
            (VP (VBN been)
              (PP (RB out)
                (PP (IN in)
                  (NP (DT the) (NN face)))
                (CC and)
                (RB not)
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN back))
                    (PP (IN of)
                      (NP (DT the) (NNP North) (NN Wind)))))
                (, ,)
                (PP (IN on)
                  (NP (DT a) (NN cold))))
              (NP (RB rather) (JJ frosty) (NN night)))
            (, ,)
            (CC and)
            (VP
              (PP (IN in)
                (NP (PRP$ your) (NN night-gown))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN felt)
          (NP (PRP it))
          (ADVP
            (ADVP (RB all) (RB quite))
            (PP (IN as)
              (ADJP (JJ strange))))
          (SBAR (IN as)
            (S
              (NP (NNP Diamond))
              (VP (VBD did)))))))
    (. .)))

cc(felt-35, But-1)
mark(night-25, if-2)
nsubj(night-25, you-3)
aux(night-25, had-4)
cop(night-25, been-5)
advmod(night-25, out-6)
det(face-9, the-8)
prep_in(night-25, face-9)
neg(night-25, not-11)
det(back-14, the-13)
prep_at(night-25', back-14)
det(Wind-18, the-16)
nn(Wind-18, North-17)
prep_of(back-14, Wind-18)
det(cold-22, a-21)
prep_on(night-25'', cold-22)
advmod(night-25, rather-23)
amod(night-25, frosty-24)
conj_and(night-25, night-25')
conj_and(night-25, night-25'')
advcl(felt-35, night-25)
advcl(felt-35, night-25')
advcl(felt-35, night-25'')
conj_and(night-25, in-28)
advcl(felt-35, in-28)
poss(night-gown-30, your-29)
pobj(in-28, night-gown-30)
nsubj(felt-35, you-32)
aux(felt-35, would-33)
aux(felt-35, have-34)
root(ROOT-0, felt-35)
dobj(felt-35, it-36)
advmod(quite-38, all-37)
advmod(felt-35, quite-38)
prep_as(quite-38, strange-40)
mark(did-43, as-41)
nsubj(did-43, Diamond-42)
advcl(felt-35, did-43)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD cried)
        (NP (DT a) (JJ little))
        (, ,)
        (ADVP (RB just)
          (NP (DT a) (RB little)))
        (, ,)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADJP (RB so) (VBN disappointed)
                (S
                  (VP (TO to)
                    (VP (VB lose)
                      (NP (DT the) (NN lady)))))))))))
    (: :)
    (S
      (PP (IN of)
        (NP (NN course)))
      (, ,)
      (NP
        (NP (PRP you))
        (, ,)
        (NP (JJ little) (NN man))
        (, ,))
      (VP (MD would) (RB n't)
        (VP (VB have)
          (VP (VBN done)
            (NP (DT that))))))
    (. !)))

nsubj(cried-2, He-1)
root(ROOT-0, cried-2)
det(little-4, a-3)
dobj(cried-2, little-4)
advmod(cried-2, just-6)
det(little-8, a-7)
pobj(just-6, little-8)
nsubjpass(disappointed-13, he-10)
nsubj(lose-15, he-10)
auxpass(disappointed-13, was-11)
advmod(disappointed-13, so-12)
dep(cried-2, disappointed-13)
aux(lose-15, to-14)
xcomp(disappointed-13, lose-15)
det(lady-17, the-16)
dobj(lose-15, lady-17)
prep_of(done-30, course-20)
nsubj(done-30, you-22)
amod(man-25, little-24)
appos(you-22, man-25)
aux(done-30, would-27)
neg(done-30, n't-28)
aux(done-30, have-29)
parataxis(cried-2, done-30)
dobj(done-30, that-31)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP (PRP$ my) (NN part)))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB mind)
        (NP
          (NP
            (NP (NNS people))
            (VP (VBG crying)
              (ADVP
                (ADVP (RB so) (RB much))
                (SBAR (IN as)
                  (S
                    (NP (PRP I))
                    (VP
                      (VP (VB mind)
                        (SBAR
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP they))
                              (VP (VB cry)
                                (PRT (RP about)))))
                          (, ,)
                          (CC and)
                          (SBAR
                            (WHADVP (WRB how))
                            (S
                              (NP (PRP they))
                              (VP (VB cry)))))
                        (: --)
                        (SBAR (IN whether)
                          (S
                            (NP (PRP they))
                            (VP (VB cry)
                              (ADVP (RB quietly))
                              (PP (IN like)
                                (NP (NNS ladies)
                                  (CC and)
                                  (NNS gentlemen)))))))
                      (, ,)
                      (CC or)
                      (VP (VB go)
                        (S
                          (VP (VBG shrieking)
                            (PP (IN like)
                              (NP (NN vulgar) (NNS emperors))))))))))))
          (, ,)
          (CC or)
          (NP
            (NP (JJ ill-natured)
              (NX (NNS cooks)))
            (PRN (: ;)
              (SBAR (IN for)
                (S
                  (S
                    (NP (DT all) (NNS emperors))
                    (VP (VBP are) (RB not)
                      (NP (NNS gentlemen))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (DT all) (NN cooks))
                    (VP (VBP are) (RB not)
                      (NP (NNS ladies))))))
              (: --))
            (CC nor)
            (NP
              (NP (DT all) (NNS queens)
                (CC and)
                (NNS princesses))
              (PP (IN for)
                (NP (DT that) (NN matter))))))
        (, ,)
        (ADVP (RB either))))
    (. .)))

cc(mind-9, But-1)
poss(part-4, my-3)
prep_for(mind-9, part-4)
nsubj(mind-9, I-6)
aux(mind-9, do-7)
neg(mind-9, n't-8)
root(ROOT-0, mind-9)
dobj(mind-9, people-10)
vmod(people-10, crying-11)
advmod(much-13, so-12)
advmod(crying-11, much-13)
mark(mind-16, as-14)
nsubj(mind-16, I-15)
nsubj(go-37, I-15)
advcl(much-13, mind-16)
ccomp(much-13, mind-16)
dobj(cry-19, what-17)
nsubj(cry-19, they-18)
dep(mind-16, cry-19)
prt(cry-19, about-20)
advmod(cry-25, how-23)
nsubj(cry-25, they-24)
dep(mind-16, cry-25)
conj_and(cry-19, cry-25)
mark(cry-29, whether-27)
nsubj(cry-29, they-28)
ccomp(mind-16, cry-29)
parataxis(mind-16, cry-29)
advmod(cry-29, quietly-30)
prep_like(cry-29, ladies-32)
prep_like(cry-29, gentlemen-34)
conj_and(ladies-32, gentlemen-34)
advcl(much-13, go-37)
ccomp(much-13, go-37)
conj_or(mind-16, go-37)
xcomp(go-37, shrieking-38)
nn(emperors-41, vulgar-40)
prep_like(shrieking-38, emperors-41)
amod(cooks-45, ill-natured-44)
dobj(mind-9, cooks-45)
conj_or(people-10, cooks-45)
mark(gentlemen-52, for-47)
det(emperors-49, all-48)
nsubj(gentlemen-52, emperors-49)
cop(gentlemen-52, are-50)
neg(gentlemen-52, not-51)
dep(cooks-45, gentlemen-52)
det(cooks-56, all-55)
nsubj(ladies-59, cooks-56)
cop(ladies-59, are-57)
neg(ladies-59, not-58)
dep(cooks-45, ladies-59)
conj_and(gentlemen-52, ladies-59)
det(queens-63, all-62)
conj_or(people-10, queens-63)
conj_nor(cooks-45, queens-63)
conj_nor(cooks-45, princesses-65)
conj_and(queens-63, princesses-65)
det(matter-68, that-67)
prep_for(queens-63, matter-68)
advmod(mind-9, either-70)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (VP (VBN denied)
          (SBAR (IN that)
            (S
              (NP (DT a)
                (ADJP (RB little) (JJ gentle))
                (NN crying))
              (VP (VBZ does)
                (S
                  (NP (PRP one))
                  (ADJP (JJ good)))))))))
    (. .)))

cc(denied-6, But-1)
nsubjpass(denied-6, it-2)
aux(denied-6, ca-3)
neg(denied-6, n't-4)
auxpass(denied-6, be-5)
root(ROOT-0, denied-6)
mark(does-12, that-7)
det(crying-11, a-8)
advmod(gentle-10, little-9)
amod(crying-11, gentle-10)
nsubj(does-12, crying-11)
ccomp(denied-6, does-12)
nsubj(good-14, one-13)
xcomp(does-12, good-14)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD did)
        (S
          (NP (NNP Diamond))
          (ADJP (JJ good)))))
    (: ;)
    (S
      (PP (IN for)
        (ADVP
          (ADVP (RB as) (RB soon))
          (RB as)))
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ over)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD was)
                (NP (DT a)
                  (ADJP (JJ brave))
                  (NN boy))
                (ADVP (RB again))))))))
    (. .)))

nsubj(did-2, It-1)
root(ROOT-0, did-2)
nsubj(good-4, Diamond-3)
xcomp(did-2, good-4)
prep(over-12, for-6)
advmod(soon-8, as-7)
pcomp(for-6, soon-8)
advmod(soon-8, as-9)
nsubj(over-12, it-10)
cop(over-12, was-11)
parataxis(did-2, over-12)
nsubj(boy-17, he-13)
cop(boy-17, was-14)
det(boy-17, a-15)
amod(boy-17, brave-16)
ccomp(over-12, boy-17)
advmod(boy-17, again-18)

(ROOT
  (S (`` ``)
    (NP (PRP She))
    (VP (VBP sha) (RB n't)
      (VP (VB say)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP (PRP$ my) (NN fault))
              (, ,)
              (ADVP (RB anyhow)))))))
    (. !) ('' '')))

nsubj(say-5, She-2)
aux(say-5, sha-3)
neg(say-5, n't-4)
root(ROOT-0, say-5)
nsubj(fault-9, it-6)
cop(fault-9, was-7)
poss(fault-9, my-8)
ccomp(say-5, fault-9)
advmod(fault-9, anyhow-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP daresay)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBZ is)
            (VP (VBG hiding)
              (ADVP (RB somewhere))
              (S
                (VP (TO to)
                  (VP (VB see)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP I))
                        (VP (MD will)
                          (VP (VB do)))))))))))))
    (. .)))

nsubj(daresay-3, I-2)
root(ROOT-0, daresay-3)
nsubj(hiding-6, she-4)
nsubj(see-9, she-4)
aux(hiding-6, is-5)
ccomp(daresay-3, hiding-6)
advmod(hiding-6, somewhere-7)
aux(see-9, to-8)
xcomp(hiding-6, see-9)
dobj(do-13, what-10)
nsubj(do-13, I-11)
aux(do-13, will-12)
ccomp(see-9, do-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB look)
        (PP (IN for)
          (NP (PRP her)))))
    (. .) ('' '')))

nsubj(look-3, I-1)
aux(look-3, will-2)
root(ROOT-0, look-3)
prep_for(look-3, her-5)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBD went)
      (VP (VB round)
        (NP
          (NP (DT the) (NN end))
          (PP (IN of)
            (NP
              (NP (DT the) (NN stable))
              (PP (IN towards)
                (NP (DT the) (NN kitchen-garden))))))))
    (. .)))

dep(went-3, So-1)
nsubj(went-3, he-2)
root(ROOT-0, went-3)
xcomp(went-3, round-4)
det(end-6, the-5)
dobj(round-4, end-6)
det(stable-9, the-8)
prep_of(end-6, stable-9)
det(kitchen-garden-12, the-11)
prep_towards(stable-9, kitchen-garden-12)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NN moment))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (JJ clear)))))
      (PP (IN of)
        (NP
          (NP (DT the) (NN shelter))
          (PP (IN of)
            (NP
              (NP (DT the)
                (ADJP (JJ stable) (, ,) (JJ sharp)))
              (PP (IN as)
                (NP (DT a) (NN knife))))))))
    (VP (VBD came)
      (NP (DT the) (NN wind))
      (PP (IN against)
        (NP
          (NP (PRP$ his) (JJ little) (NN chest))
          (CC and)
          (NP (PRP$ his) (JJ bare) (NNS legs)))))
    (. .)))

cc(came-18, But-1)
det(moment-3, the-2)
nsubj(came-18, moment-3)
nsubj(clear-6, he-4)
cop(clear-6, was-5)
rcmod(moment-3, clear-6)
det(shelter-9, the-8)
prep_of(moment-3, shelter-9)
det(sharp-14, the-11)
amod(sharp-14, stable-12)
prep_of(shelter-9, sharp-14)
det(knife-17, a-16)
prep_as(sharp-14, knife-17)
root(ROOT-0, came-18)
det(wind-20, the-19)
dobj(came-18, wind-20)
poss(chest-24, his-22)
amod(chest-24, little-23)
prep_against(came-18, chest-24)
poss(legs-28, his-26)
amod(legs-28, bare-27)
prep_against(came-18, legs-28)
conj_and(chest-24, legs-28)

(ROOT
  (S
    (ADVP (RB Still))
    (NP (PRP he))
    (VP
      (VP (MD would)
        (VP (VB look)
          (PP (IN in)
            (NP (DT the) (NN kitchen-garden)))))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PRT (RP on))))
    (. .)))

advmod(look-4, Still-1)
nsubj(look-4, he-2)
nsubj(went-10, he-2)
aux(look-4, would-3)
root(ROOT-0, look-4)
det(kitchen-garden-7, the-6)
prep_in(look-4, kitchen-garden-7)
conj_and(look-4, went-10)
prt(went-10, on-11)

(ROOT
  (S
    (S (CC But)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD got)
            (ADVP (RB round)
              (NP (DT the) (NN weeping-ash)))
            (SBAR (IN that)
              (S
                (VP (VBD stood)
                  (PP (IN in)
                    (NP (DT the) (NN corner)))))))))
      (, ,)
      (NP (DT the) (NN wind))
      (VP (VBD blew)
        (ADJP (RB much) (JJR stronger))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD grew)
        (ADJP (JJR stronger)
          (CC and)
          (JJR stronger))
        (SBAR (IN till)
          (S
            (NP (PRP he))
            (VP (MD could)
              (ADVP (RB hardly))
              (VP (VB fight)
                (PP (IN against)
                  (NP (PRP it)))))))))
    (. .)))

advmod(got-4, when-2)
nsubj(got-4, he-3)
advcl(blew-16, got-4)
advmod(got-4, round-5)
det(weeping-ash-7, the-6)
pobj(round-5, weeping-ash-7)
mark(stood-9, that-8)
ccomp(got-4, stood-9)
det(corner-12, the-11)
prep_in(stood-9, corner-12)
det(wind-15, the-14)
nsubj(blew-16, wind-15)
root(ROOT-0, blew-16)
advmod(stronger-18, much-17)
acomp(blew-16, stronger-18)
nsubj(grew-22, it-21)
conj_and(blew-16, grew-22)
acomp(grew-22, stronger-23)
acomp(grew-22, stronger-25)
conj_and(stronger-23, stronger-25)
mark(fight-30, till-26)
nsubj(fight-30, he-27)
aux(fight-30, could-28)
advmod(fight-30, hardly-29)
advcl(grew-22, fight-30)
prep_against(fight-30, it-32)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (VBD was)
      (ADJP (RB so) (JJ cold)))
    (. !)))

cc(cold-5, And-1)
nsubj(cold-5, it-2)
cop(cold-5, was-3)
advmod(cold-5, so-4)
root(ROOT-0, cold-5)

(ROOT
  (S
    (NP
      (NP (PDT All) (DT the) (JJ flashy) (NNS spikes))
      (PP (IN of)
        (NP (DT the) (NNS stars))))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB have)
            (VP (VBN got)
              (ADVP (RB somehow))
              (PP (IN into)
                (NP (DT the) (NN wind))))))))
    (. .)))

predet(spikes-4, All-1)
det(spikes-4, the-2)
amod(spikes-4, flashy-3)
nsubj(seemed-8, spikes-4)
nsubj(got-11, spikes-4)
det(stars-7, the-6)
prep_of(spikes-4, stars-7)
root(ROOT-0, seemed-8)
aux(got-11, to-9)
aux(got-11, have-10)
xcomp(seemed-8, got-11)
advmod(got-11, somehow-12)
det(wind-15, the-14)
prep_into(got-11, wind-15)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD thought)
      (SBAR
        (WHPP (IN of)
          (WHNP (WP what)))
        (S
          (NP (DT the) (NN lady))
          (VP (VBD had)
            (VP (VBN said)
              (PP (IN about)
                (NP (NNS people)))
              (S
                (VP (VBG being)
                  (ADJP (JJ cold)
                    (SBAR (IN because)
                      (S
                        (NP (PRP they))
                        (VP (VBD were) (RB not)
                          (PP (IN with)
                            (NP (DT the) (NNP North) (NN Wind))))))))))))))
    (. .)))

advmod(thought-3, Then-1)
nsubj(thought-3, he-2)
root(ROOT-0, thought-3)
prep_of(said-9, what-5)
det(lady-7, the-6)
nsubj(said-9, lady-7)
aux(said-9, had-8)
ccomp(thought-3, said-9)
prep_about(said-9, people-11)
cop(cold-13, being-12)
xcomp(said-9, cold-13)
mark(were-16, because-14)
nsubj(were-16, they-15)
ccomp(cold-13, were-16)
neg(were-16, not-17)
det(Wind-21, the-19)
nn(Wind-21, North-20)
prep_with(were-16, Wind-21)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB How))
        (S
          (NP (PRP it))
          (VP (VBD was)
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (MD should)
                  (VP (VB have)
                    (VP (VBD guessed)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP she))
                          (VP (VBD meant)
                            (PP (IN at)
                              (NP (DT that) (JJ very) (NN moment))))))))))))))
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB tell))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN observed)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the)
                  (ADJP (RBS most) (JJ wonderful))
                  (NN thing))
                (PP (IN in)
                  (NP (DT the) (NN world))))
              (VP (VBZ is)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (NNS people))
                    (VP (VBP come)
                      (S
                        (VP (TO to)
                          (VP (VB understand)
                            (NP (NN anything))))))))))))))
    (. .)))

advmod(was-3, How-1)
nsubj(was-3, it-2)
advcl(tell-19, was-3)
mark(guessed-8, that-4)
nsubj(guessed-8, he-5)
aux(guessed-8, should-6)
aux(guessed-8, have-7)
ccomp(was-3, guessed-8)
dobj(meant-11, what-9)
nsubj(meant-11, she-10)
ccomp(guessed-8, meant-11)
det(moment-15, that-13)
amod(moment-15, very-14)
prep_at(meant-11, moment-15)
nsubj(tell-19, I-16)
aux(tell-19, can-17)
neg(tell-19, not-18)
root(ROOT-0, tell-19)
nsubj(observed-24, I-22)
aux(observed-24, have-23)
conj_but(tell-19, observed-24)
mark(is-33, that-25)
det(thing-29, the-26)
advmod(wonderful-28, most-27)
amod(thing-29, wonderful-28)
nsubj(is-33, thing-29)
det(world-32, the-31)
prep_in(thing-29, world-32)
ccomp(observed-24, is-33)
advmod(come-36, how-34)
nsubj(come-36, people-35)
nsubj(understand-38, people-35)
ccomp(is-33, come-36)
aux(understand-38, to-37)
xcomp(come-36, understand-38)
dobj(understand-38, anything-39)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD turned)
          (NP (PRP$ his) (NN back))
          (PP (TO to)
            (NP (DT the) (NN wind))))
        (, ,)
        (CC and)
        (VP (VBD trotted)
          (ADVP (RB again))
          (PP (IN towards)
            (NP (DT the) (NN yard))))))
    (: ;)
    (S
      (NP
        (NP (NN whereupon))
        (, ,)
        (ADJP (JJ strange)
          (S
            (VP (TO to)
              (VP (VB say)))))
        (, ,))
      (NP (PRP it))
      (VP (VBD blew)
        (SBAR
          (ADVP (RB so)
            (ADVP (RB much) (RBR more) (RB gently))
            (PP (IN against)
              (NP (PRP$ his) (NNS calves))))
          (IN than)
          (S
            (NP (PRP it))
            (VP (VBD had)
              (VP (VBN blown)
                (PP (IN against)
                  (NP (PRP$ his)
                    (NX (NNS shins))))
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBD began)
                      (S
                        (VP (TO to)
                          (VP (VB feel)
                            (ADJP (RB almost) (JJ warm))
                            (PP (IN by)
                              (NP (NN contrast)))))))))))))))
    (. .)))

nsubj(turned-2, He-1)
nsubj(trotted-10, He-1)
root(ROOT-0, turned-2)
poss(back-4, his-3)
dobj(turned-2, back-4)
det(wind-7, the-6)
prep_to(turned-2, wind-7)
conj_and(turned-2, trotted-10)
advmod(trotted-10, again-11)
det(yard-14, the-13)
prep_towards(trotted-10, yard-14)
nsubj(blew-23, whereupon-16)
amod(whereupon-16, strange-18)
aux(say-20, to-19)
xcomp(strange-18, say-20)
nsubj(blew-23, it-22)
parataxis(turned-2, blew-23)
advmod(gently-27, so-24)
advmod(gently-27, much-25)
advmod(gently-27, more-26)
advmod(blown-34, gently-27)
poss(calves-30, his-29)
prep_against(gently-27, calves-30)
mark(blown-34, than-31)
nsubj(blown-34, it-32)
aux(blown-34, had-33)
advcl(blew-23, blown-34)
poss(shins-37, his-36)
prep_against(blown-34, shins-37)
mark(began-40, that-38)
nsubj(began-40, he-39)
nsubj(feel-42, he-39)
ccomp(blown-34, began-40)
aux(feel-42, to-41)
xcomp(began-40, feel-42)
advmod(warm-44, almost-43)
acomp(feel-42, warm-44)
prep_by(feel-42, contrast-46)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD must) (RB not)
        (VP (VB think)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (VP (VBN cowardly)
                  (PP (IN of)
                    (NP (NNP Diamond)))
                  (S
                    (VP (TO to)
                      (VP (VB turn)
                        (NP (PRP$ his) (NN back))
                        (PP (TO to)
                          (NP (DT the) (NN wind)))))))))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD did)
        (SBAR (RB so) (RB only) (IN because)
          (S
            (NP (PRP he))
            (VP (VBD thought)
              (SBAR
                (S
                  (NP (NNP Lady) (NNP North) (NNP Wind))
                  (VP (VBD had)
                    (VP (VBN said)
                      (NP (NN something))
                      (PP (IN like)
                        (S
                          (VP (VBG telling)
                            (S
                              (NP (PRP him))
                              (VP (TO to)
                                (VP (VB do)
                                  (ADVP (RB so)))))))))))))))))
    (. .)))

nsubj(think-4, You-1)
aux(think-4, must-2)
neg(think-4, not-3)
root(ROOT-0, think-4)
nsubjpass(cowardly-7, it-5)
nsubj(turn-11, it-5)
auxpass(cowardly-7, was-6)
ccomp(think-4, cowardly-7)
prep_of(cowardly-7, Diamond-9)
aux(turn-11, to-10)
xcomp(cowardly-7, turn-11)
poss(back-13, his-12)
dobj(turn-11, back-13)
det(wind-16, the-15)
prep_to(turn-11, wind-16)
nsubj(did-19, he-18)
parataxis(think-4, did-19)
advmod(thought-24, so-20)
advmod(thought-24, only-21)
mark(thought-24, because-22)
nsubj(thought-24, he-23)
advcl(did-19, thought-24)
ccomp(did-19, thought-24)
nn(Wind-27, Lady-25)
nn(Wind-27, North-26)
nsubj(said-29, Wind-27)
aux(said-29, had-28)
ccomp(thought-24, said-29)
dobj(said-29, something-30)
prepc_like(said-29, telling-32)
dobj(telling-32, him-33)
nsubj(do-35, him-33)
aux(do-35, to-34)
xcomp(telling-32, do-35)
advmod(do-35, so-36)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP she))
        (VP (VBD had)
          (VP (VBN said)
            (PP (TO to)
              (NP (PRP him)))
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (MD must)
                  (VP (VB hold)
                    (NP (PRP$ his) (NN face))
                    (PP (TO to)
                      (NP (PRP it)))))))))))
    (, ,)
    (NP (NNP Diamond))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN held)
          (NP (PRP$ his) (NN face))
          (PP (TO to)
            (NP (PRP it))))))
    (. .)))

mark(said-4, If-1)
nsubj(said-4, she-2)
aux(said-4, had-3)
advcl(held-19, said-4)
prep_to(said-4, him-6)
mark(hold-10, that-7)
nsubj(hold-10, he-8)
aux(hold-10, must-9)
ccomp(said-4, hold-10)
poss(face-12, his-11)
dobj(hold-10, face-12)
prep_to(hold-10, it-14)
nsubj(held-19, Diamond-16)
aux(held-19, would-17)
aux(held-19, have-18)
root(ROOT-0, held-19)
poss(face-21, his-20)
dobj(held-19, face-21)
prep_to(held-19, it-23)

(ROOT
  (S (CC But)
    (NP (DT the)
      (ADJP (RBS most) (JJ foolish))
      (NN thing))
    (VP (VBZ is)
      (S
        (VP
          (VP (TO to)
            (VP (VB fight)
              (PP (IN for)
                (NP (DT no) (JJ good)))))
          (, ,)
          (CC and)
          (VP (TO to)
            (VP (VB please)
              (NP (NN nobody)))))))
    (. .)))

cc(is-6, But-1)
det(thing-5, the-2)
advmod(foolish-4, most-3)
amod(thing-5, foolish-4)
nsubj(is-6, thing-5)
root(ROOT-0, is-6)
aux(fight-8, to-7)
ccomp(is-6, fight-8)
neg(good-11, no-10)
prep_for(fight-8, good-11)
aux(please-15, to-14)
ccomp(is-6, please-15)
conj_and(fight-8, please-15)
dobj(please-15, nobody-16)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADVP
        (ADVP (RB just) (RB as))
        (SBAR (IN if)
          (S
            (NP (DT the) (NN wind))
            (VP (VBD was)
              (VP (VBG pushing)
                (NP (NNP Diamond))
                (PRT (RP along))))))))
    (. .)))

discourse(was-4, Well-1)
nsubj(was-4, it-3)
root(ROOT-0, was-4)
advmod(as-6, just-5)
advmod(was-4, as-6)
mark(pushing-11, if-7)
det(wind-9, the-8)
nsubj(pushing-11, wind-9)
aux(pushing-11, was-10)
advcl(as-6, pushing-11)
dobj(pushing-11, Diamond-12)
prt(pushing-11, along-13)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP he))
          (VP (VBD turned)
            (NP (NN round)))))
      (, ,)
      (NP (PRP it))
      (VP (VBD grew)
        (ADJP (RB very) (JJ sharp)
          (PP (IN on)
            (NP (PRP$ his) (NNS legs))))
        (ADVP (RB especially))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (PRP he))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (DT the) (NN wind))
            (VP (MD might)
              (ADVP (RB really))
              (VP (VB be)
                (NP
                  (NP (NNP Lady) (NNP North) (NNP Wind))
                  (, ,)
                  (SBAR (IN though)
                    (S
                      (NP (PRP he))
                      (VP (MD could) (RB not)
                        (VP (VB see)
                          (NP (PRP her)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RBR better))
        (VP (VB let)
          (S
            (NP (PRP$ her) (NN blow))
            (NP (PRP him))
            (SBAR
              (WHADVP (WRB wherever))
              (S
                (NP (PRP she))
                (VP (VBD pleased))))))))
    (. .)))

mark(turned-3, If-1)
nsubj(turned-3, he-2)
advcl(grew-7, turned-3)
dobj(turned-3, round-4)
nsubj(grew-7, it-6)
root(ROOT-0, grew-7)
advmod(sharp-9, very-8)
acomp(grew-7, sharp-9)
poss(legs-12, his-11)
prep_on(sharp-9, legs-12)
advmod(grew-7, especially-13)
conj_and(grew-7, so-16)
nsubj(thought-18, he-17)
ccomp(grew-7, thought-18)
det(wind-20, the-19)
nsubj(Wind-26, wind-20)
aux(Wind-26, might-21)
advmod(Wind-26, really-22)
cop(Wind-26, be-23)
nn(Wind-26, Lady-24)
nn(Wind-26, North-25)
ccomp(thought-18, Wind-26)
mark(see-32, though-28)
nsubj(see-32, he-29)
aux(see-32, could-30)
neg(see-32, not-31)
dep(Wind-26, see-32)
dobj(see-32, her-33)
nsubj(let-39, he-36)
aux(let-39, had-37)
advmod(let-39, better-38)
conj_and(grew-7, let-39)
poss(blow-41, her-40)
nsubj(pleased-45, blow-41)
dep(pleased-45, him-42)
advmod(pleased-45, wherever-43)
nsubj(pleased-45, she-44)
xcomp(let-39, pleased-45)

(ROOT
  (S (CC So)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD blew))
        (CC and)
        (VP (VBD blew))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD went)
        (CC and)
        (VBD went) (, ,)
        (SBAR (IN until)
          (S
            (NP (PRP he))
            (VP (VBD found)
              (NP (PRP himself))
              (S
                (VP (VBG standing)
                  (PP (IN at)
                    (NP
                      (NP (DT a) (NN door))
                      (PP (IN in)
                        (NP
                          (NP (DT a) (NN wall))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (ADVP (NN door))
                              (VP (VBN led)
                                (PP (IN from)
                                  (NP (DT the) (NN yard)))
                                (PP (IN into)
                                  (NP
                                    (NP (DT a) (JJ little) (NN belt))
                                    (PP (IN of)
                                      (NP (NN shrubbery)))))
                                (, ,)
                                (S
                                  (VP (VBG flanking)
                                    (NP
                                      (NP (NNP Mr.) (NNP Coleman) (POS 's))
                                      (NN house))))))))))))))))))
    (. .)))

nsubj(blew-3, she-2)
nsubj(blew-5, she-2)
root(ROOT-0, blew-3)
conj_and(blew-3, blew-5)
nsubj(went-9, he-8)
nsubj(went-11, he-8)
conj_and(blew-3, went-9)
conj_and(blew-3, went-11)
conj_and(went-9, went-11)
mark(found-15, until-13)
nsubj(found-15, he-14)
advcl(went-9, found-15)
dobj(found-15, himself-16)
xcomp(found-15, standing-17)
det(door-20, a-19)
prep_at(standing-17, door-20)
det(wall-23, a-22)
prep_in(door-20, wall-23)
nsubj(led-27, wall-23)
advmod(led-27, door-26)
rcmod(wall-23, led-27)
det(yard-30, the-29)
prep_from(led-27, yard-30)
det(belt-34, a-32)
amod(belt-34, little-33)
prep_into(led-27, belt-34)
prep_of(belt-34, shrubbery-36)
xcomp(led-27, flanking-38)
nn(Coleman-40, Mr.-39)
poss(house-42, Coleman-40)
dobj(flanking-38, house-42)

(ROOT
  (S
    (NP (NNP Mr.) (NNP Coleman))
    (VP (VBD was)
      (NP
        (NP
          (NP (PRP$ his) (NN father) (POS 's))
          (NN master))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (NN owner))
          (PP (IN of)
            (NP (NNP Diamond))))))
    (. .)))

nn(Coleman-2, Mr.-1)
nsubj(master-7, Coleman-2)
cop(master-7, was-3)
poss(father-5, his-4)
poss(master-7, father-5)
root(ROOT-0, master-7)
det(owner-11, the-10)
conj_and(master-7, owner-11)
prep_of(owner-11, Diamond-13)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD opened)
        (NP (DT the) (NN door)))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PP
          (PP (IN through)
            (NP (DT the) (NN shrubbery)))
          (, ,)
          (CC and)
          (RB out)
          (PP (IN into)
            (NP
              (NP (DT the) (NN middle))
              (PP (IN of)
                (NP (DT the) (NN lawn))))))
        (, ,)
        (ADVP (RB still))
        (S
          (VP (VBG hoping)
            (S
              (VP (TO to)
                (VP (VB find)
                  (NP (JJ North) (NN Wind)))))))))
    (. .)))

nsubj(opened-2, He-1)
nsubj(went-7, He-1)
root(ROOT-0, opened-2)
det(door-4, the-3)
dobj(opened-2, door-4)
conj_and(opened-2, went-7)
prep(went-7, through-8)
det(shrubbery-10, the-9)
pobj(through-8, shrubbery-10)
prep(went-7, out-13)
conj_and(through-8, out-13)
dep(through-8, into-14)
det(middle-16, the-15)
pobj(into-14, middle-16)
det(lawn-19, the-18)
prep_of(middle-16, lawn-19)
advmod(hoping-22, still-21)
xcomp(went-7, hoping-22)
aux(find-24, to-23)
xcomp(hoping-22, find-24)
amod(Wind-26, North-25)
dobj(find-24, Wind-26)

(ROOT
  (S
    (S
      (NP (DT The) (JJ soft) (NN grass))
      (VP
        (VP (VBD was)
          (ADJP (RB very) (JJ pleasant))
          (PP (TO to)
            (NP (PRP$ his) (JJ bare) (NNS feet))))
        (, ,)
        (CC and)
        (VP (VBD felt)
          (ADJP (JJ warm))
          (PP (IN after)
            (NP
              (NP (DT the) (NNS stones))
              (PP (IN of)
                (NP (DT the) (NN yard))))))))
    (: ;)
    (CC but)
    (S
      (NP (DT the) (NN lady))
      (VP (VBD was)
        (ADVP (RB nowhere))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN seen)))))))
    (. .)))

det(grass-3, The-1)
amod(grass-3, soft-2)
nsubj(pleasant-6, grass-3)
nsubj(felt-13, grass-3)
cop(pleasant-6, was-4)
advmod(pleasant-6, very-5)
root(ROOT-0, pleasant-6)
poss(feet-10, his-8)
amod(feet-10, bare-9)
prep_to(pleasant-6, feet-10)
conj_and(pleasant-6, felt-13)
acomp(felt-13, warm-14)
det(stones-17, the-16)
prep_after(felt-13, stones-17)
det(yard-20, the-19)
prep_of(stones-17, yard-20)
det(lady-24, the-23)
nsubj(was-25, lady-24)
nsubjpass(seen-29, lady-24)
conj_but(pleasant-6, was-25)
advmod(was-25, nowhere-26)
aux(seen-29, to-27)
auxpass(seen-29, be-28)
xcomp(was-25, seen-29)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB think)
              (SBAR (IN that)
                (S
                  (PP (IN after)
                    (NP (DT all)))
                  (NP (PRP he))
                  (VP (MD must)
                    (VP (VB have)
                      (VP (VBN done)
                        (S
                          (ADJP (JJ wrong)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (VP (VBN offended)
          (PP (IN with)
            (NP (PRP him)))
          (PP (IN for)
            (S (RB not)
              (VP
                (VP (VBG following)
                  (ADVP (RB close)
                    (PP (IN after)
                      (NP (PRP her)))))
                (, ,)
                (CC but)
                (VP (VBG staying)
                  (S
                    (VP (TO to)
                      (VP (VB talk)
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN horse))
                            (, ,)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (ADVP (RB certainly))
                                (VP (VBD was)
                                  (ADJP (DT neither) (JJ wise)
                                    (CC nor)
                                    (JJ polite)))))))))))))))))
    (. .)))

advmod(began-3, Then-1)
nsubj(began-3, he-2)
nsubj(think-5, he-2)
root(ROOT-0, began-3)
aux(think-5, to-4)
xcomp(began-3, think-5)
mark(done-12, that-6)
prep_after(done-12, all-8)
nsubj(done-12, he-9)
aux(done-12, must-10)
aux(done-12, have-11)
ccomp(think-5, done-12)
acomp(done-12, wrong-13)
nsubjpass(offended-18, she-16)
auxpass(offended-18, was-17)
conj_and(began-3, offended-18)
prep_with(offended-18, him-20)
neg(following-23, not-22)
prepc_for(offended-18, following-23)
advmod(following-23, close-24)
prep_after(close-24, her-26)
prepc_for(offended-18, staying-29)
conj_but(following-23, staying-29)
aux(talk-31, to-30)
xcomp(staying-29, talk-31)
det(horse-34, the-33)
prep_to(talk-31, horse-34)
nsubj(wise-40, horse-34)
nsubj(polite-42, horse-34)
advmod(wise-40, certainly-37)
cop(wise-40, was-38)
preconj(wise-40, neither-39)
rcmod(horse-34, wise-40)
rcmod(horse-34, polite-42)
conj_nor(wise-40, polite-42)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP he))
    (VP (VBD stood)
      (PP (IN in)
        (NP
          (NP (DT the) (NN middle))
          (PP (IN of)
            (NP
              (NP (DT the) (NN lawn))
              (, ,)
              (NP
                (NP (DT the) (NN wind))
                (VP (VBG blowing)
                  (NP (PRP$ his) (NN night-gown))
                  (SBAR (IN till)
                    (S
                      (NP (PRP it))
                      (VP (VBD flapped)
                        (PP (IN like)
                          (NP (DT a) (JJ loose) (NN sail)))))))))))))
    (. .)))

advmod(stood-3, There-1)
nsubj(stood-3, he-2)
root(ROOT-0, stood-3)
det(middle-6, the-5)
prep_in(stood-3, middle-6)
det(lawn-9, the-8)
prep_of(middle-6, lawn-9)
det(wind-12, the-11)
appos(lawn-9, wind-12)
vmod(wind-12, blowing-13)
poss(night-gown-15, his-14)
dobj(blowing-13, night-gown-15)
mark(flapped-18, till-16)
nsubj(flapped-18, it-17)
advcl(blowing-13, flapped-18)
det(sail-22, a-20)
amod(sail-22, loose-21)
prep_like(flapped-18, sail-22)

(ROOT
  (S
    (S
      (NP (DT The) (NNS stars))
      (VP (VBD were)
        (ADJP (RB very) (JJ shiny))
        (PP (IN over)
          (NP (PRP$ his) (NN head)))))
    (: ;)
    (S (CC but)
      (NP (PRP they))
      (VP (VBD did) (RB not)
        (VP (VB give)
          (ADJP (JJ light) (RB enough)
            (S
              (VP (TO to)
                (VP (VB show)
                  (SBAR (IN that)
                    (S
                      (NP (DT the) (NN grass))
                      (VP (VBD was)
                        (ADJP (JJ green))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (NNP Diamond))
      (VP (VBD stood)
        (ADVP (RB alone))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ strange) (NN night))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD looked)
                  (ADJP (RB half) (JJ solid))
                  (PP (DT all) (IN about)
                    (NP (PRP him))))))))))
    (. .)))

det(stars-2, The-1)
nsubj(shiny-5, stars-2)
cop(shiny-5, were-3)
advmod(shiny-5, very-4)
root(ROOT-0, shiny-5)
poss(head-8, his-7)
prep_over(shiny-5, head-8)
cc(give-14, but-10)
nsubj(give-14, they-11)
aux(give-14, did-12)
neg(give-14, not-13)
conj_and(shiny-5, give-14)
acomp(give-14, light-15)
advmod(light-15, enough-16)
aux(show-18, to-17)
xcomp(light-15, show-18)
mark(green-23, that-19)
det(grass-21, the-20)
nsubj(green-23, grass-21)
cop(green-23, was-22)
ccomp(show-18, green-23)
nsubj(stood-27, Diamond-26)
conj_and(shiny-5, stood-27)
advmod(stood-27, alone-28)
det(night-32, the-30)
amod(night-32, strange-31)
prep_in(stood-27, night-32)
nsubj(looked-35, night-32)
rcmod(night-32, looked-35)
advmod(solid-37, half-36)
acomp(looked-35, solid-37)
dep(looked-35, all-38)
prep_about(looked-35, him-40)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB wonder)
            (SBAR (IN whether)
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (PP (IN in)
                    (NP (DT a) (NN dream)))))
              (CC or)
              (RB not))))))
    (. .)))

nsubj(began-2, He-1)
nsubj(wonder-4, He-1)
root(ROOT-0, began-2)
aux(wonder-4, to-3)
xcomp(began-2, wonder-4)
mark(was-7, whether-5)
nsubj(was-7, he-6)
ccomp(wonder-4, was-7)
det(dream-10, a-9)
prep_in(was-7, dream-10)
ccomp(wonder-4, not-12)
conj_or(was-7, not-12)

(ROOT
  (SINV
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP (JJ important)
          (S
            (VP (TO to)
              (VP (VB determine)
                (NP (DT this))
                (: ;) (`` ``)
                (PP (IN for))))))))
    (, ,) ('' '')
    (VP (VBD thought))
    (NP
      (NP (NNP Diamond))
      (, ,) (`` ``)
      (S
        (S
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBP am)
                (PP (IN in)
                  (NP (DT a) (NN dream))))))
          (, ,)
          (NP (PRP I))
          (VP (VBP am)
            (ADJP (JJ safe)
              (PP (IN in)
                (NP (PRP$ my) (NN bed))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP (VBP need) (RB n't)
            (VP (VB cry))))))
    (. .)))

nsubj(important-3, It-1)
nsubj(determine-5, It-1)
cop(important-3, was-2)
ccomp(thought-12, important-3)
aux(determine-5, to-4)
xcomp(important-3, determine-5)
dobj(determine-5, this-6)
prep(determine-5, for-9)
root(ROOT-0, thought-12)
nsubj(thought-12, Diamond-13)
mark(am-18, if-16)
nsubj(am-18, I-17)
advcl(safe-25, am-18)
det(dream-21, a-20)
prep_in(am-18, dream-21)
nsubj(safe-25, I-23)
cop(safe-25, am-24)
dep(Diamond-13, safe-25)
poss(bed-28, my-27)
prep_in(safe-25, bed-28)
nsubj(need-32, I-31)
dep(Diamond-13, need-32)
conj_and(safe-25, need-32)
neg(need-32, n't-33)
dep(need-32, cry-34)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBP 'm) (RB not)
          (PP (IN in)
            (NP (DT a) (NN dream))))))
    (, ,)
    (S
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (ADVP (RB out))
          (ADVP (RB here))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB perhaps))
        (NP (PRP I))
        (VP (VBD had)
          (NP (JJR better) (NN cry)))))
    (, ,)
    (CC or)
    (PRN (, ,)
      (ADVP (IN at) (JJS least))
      (, ,))
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (ADJP (JJ sure))
        (SBAR (IN whether)
          (S
            (NP (PRP I))
            (VP (MD can)
              (VP (VB help)
                (NP (PRP it))))))))
    (. .) ('' '')))

mark('m-4, if-2)
nsubj('m-4, I-3)
advcl('m-11, 'm-4)
neg('m-4, not-5)
det(dream-8, a-7)
prep_in('m-4, dream-8)
nsubj('m-11, I-10)
root(ROOT-0, 'm-11)
advmod('m-11, out-12)
advmod('m-11, here-13)
advmod(had-18, perhaps-16)
nsubj(had-18, I-17)
conj_and('m-11, had-18)
amod(cry-20, better-19)
dobj(had-18, cry-20)
dep('m-11, at-24)
pobj(at-24, least-25)
nsubj(sure-30, I-27)
cop(sure-30, 'm-28)
neg(sure-30, not-29)
ccomp('m-11, sure-30)
conj_or('m-11, sure-30)
mark(help-34, whether-31)
nsubj(help-34, I-32)
aux(help-34, can-33)
ccomp(sure-30, help-34)
dobj(help-34, it-35)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD came)
        (PP (TO to)
          (NP (DT the) (NN conclusion)))
        (, ,)
        (ADVP (RB however))
        (, ,)
        (SBAR (IN that)
          (PRN (, ,)
            (SBAR (IN whether)
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (PP (IN in)
                    (NP (DT a) (NN dream)))))
              (CC or)
              (RB not))
            (, ,))
          (S
            (NP (EX there))
            (VP (MD could)
              (VP (VB be)
                (NP
                  (NP (DT no) (NN harm))
                  (PP (IN in)
                    (S (RB not)
                      (VP (VBG crying)
                        (PP (IN for)
                          (NP (DT a) (JJ little) (NN while)))
                        (ADVP (RBR longer))))))))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (MD could)
        (VP (VB begin)
          (SBAR
            (WHADVP (WRB whenever))
            (S
              (NP (PRP he))
              (VP (VBD liked)))))))
    (. .)))

nsubj(came-2, He-1)
root(ROOT-0, came-2)
det(conclusion-5, the-4)
prep_to(came-2, conclusion-5)
advmod(came-2, however-7)
mark(harm-24, that-9)
mark(was-13, whether-11)
nsubj(was-13, he-12)
dep(harm-24, was-13)
det(dream-16, a-15)
prep_in(was-13, dream-16)
conj_or(was-13, not-18)
dep(harm-24, not-18)
expl(harm-24, there-20)
aux(harm-24, could-21)
cop(harm-24, be-22)
neg(harm-24, no-23)
ccomp(came-2, harm-24)
neg(crying-27, not-26)
prepc_in(harm-24, crying-27)
det(while-31, a-29)
amod(while-31, little-30)
prep_for(crying-27, while-31)
advmod(crying-27, longer-32)
nsubj(begin-36, he-34)
aux(begin-36, could-35)
parataxis(came-2, begin-36)
advmod(liked-39, whenever-37)
nsubj(liked-39, he-38)
advcl(begin-36, liked-39)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN back))
        (PP (IN of)
          (NP
            (NP (NNP Mr.) (NNP Coleman) (POS 's))
            (NN house))))
      (VP (VBD was)
        (PP (TO to)
          (NP (DT the) (NN lawn)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (JJ drawing-room) (NNS windows))))
      (VP (VBD looked)
        (PRT (RP out))
        (PP (IN upon)
          (NP (PRP it)))))
    (. .)))

det(back-2, The-1)
nsubj(was-8, back-2)
nn(Coleman-5, Mr.-4)
poss(house-7, Coleman-5)
prep_of(back-2, house-7)
root(ROOT-0, was-8)
det(lawn-11, the-10)
prep_to(was-8, lawn-11)
nsubj(looked-19, one-14)
det(windows-18, the-16)
amod(windows-18, drawing-room-17)
prep_of(one-14, windows-18)
conj_and(was-8, looked-19)
prt(looked-19, out-20)
prep_upon(looked-19, it-22)

(ROOT
  (S
    (NP (DT The) (NNS ladies))
    (VP (VBD had) (RB not)
      (VP (VBN gone)
        (PP (TO to)
          (NP (NN bed)))
        (: ;)
        (SBAR (IN for)
          (S
            (NP (DT the) (NN light))
            (VP (VBD was)
              (ADVP (RB still))
              (VP (VBG shining)
                (PP (IN in)
                  (NP (DT that) (NN window)))))))))
    (. .)))

det(ladies-2, The-1)
nsubj(gone-5, ladies-2)
aux(gone-5, had-3)
neg(gone-5, not-4)
root(ROOT-0, gone-5)
prep_to(gone-5, bed-7)
mark(shining-14, for-9)
det(light-11, the-10)
nsubj(shining-14, light-11)
aux(shining-14, was-12)
advmod(shining-14, still-13)
advcl(gone-5, shining-14)
parataxis(gone-5, shining-14)
det(window-17, that-16)
prep_in(shining-14, window-17)

(ROOT
  (S (CC But)
    (S
      (NP (PRP they))
      (VP (VBD had)
        (NP (DT no) (NN idea))
        (SBAR (IN that)
          (S
            (NP (DT a) (JJ little) (NN boy))
            (VP (VBD was)
              (VP (VBG standing)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN lawn))
                    (PP (IN in)
                      (NP (PRP$ his) (NN night-gown)))))))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP they))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN run)
            (PRT (RP out))
            (PP (IN in)
              (NP (DT a) (NN moment)))))))
    (. .)))

nsubj(had-3, they-2)
root(ROOT-0, had-3)
neg(idea-5, no-4)
dobj(had-3, idea-5)
mark(standing-11, that-6)
det(boy-9, a-7)
amod(boy-9, little-8)
nsubj(standing-11, boy-9)
aux(standing-11, was-10)
ccomp(had-3, standing-11)
det(lawn-14, the-13)
prep_on(standing-11, lawn-14)
poss(night-gown-17, his-16)
prep_in(lawn-14, night-gown-17)
nsubj(run-23, they-20)
aux(run-23, would-21)
aux(run-23, have-22)
conj_or(had-3, run-23)
prt(run-23, out-24)
det(moment-27, a-26)
prep_in(run-23, moment-27)

(ROOT
  (S (CC And)
    (ADVP (RB as) (RB long)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD saw)
            (NP (DT that) (NN light))))))
    (, ,)
    (NP (NNP Diamond))
    (VP (MD could) (RB not)
      (VP (VB feel)
        (ADJP (RB quite) (JJ lonely))))
    (. .)))

cc(feel-13, And-1)
advmod(long-3, as-2)
advmod(feel-13, long-3)
mark(saw-6, as-4)
nsubj(saw-6, he-5)
ccomp(long-3, saw-6)
det(light-8, that-7)
dobj(saw-6, light-8)
nsubj(feel-13, Diamond-10)
aux(feel-13, could-11)
neg(feel-13, not-12)
root(ROOT-0, feel-13)
advmod(lonely-15, quite-14)
acomp(feel-13, lonely-15)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD stood)
      (SBAR
        (S
          (NP (NNP staring))
          (VP
            (VP (, ,)
              (PP (RB not) (IN at)
                (NP
                  (NP (DT the) (JJ great) (NN warrior))
                  (UCP
                    (NP
                      (NP (NNP Orion))
                      (PP (IN in)
                        (NP (DT the) (NN sky))))
                    (, ,)
                    (CC nor)
                    (ADVP (RB yet))
                    (PP (IN at)
                      (NP (DT the) (NN disconsolate))))))
              (, ,) (VBD neglected)
              (NP
                (NP (NN moon))
                (VP (VBG going)
                  (PRT (RP down))
                  (PP (IN in)
                    (NP (DT the) (NN west))))))
            (, ,)
            (CC but)
            (PP (IN at)
              (NP (DT the) (JJ drawing-room) (NN window)))
            (PP (IN with)
              (NP
                (NP (DT the) (NN light))
                (VP (VBG shining)
                  (PP (IN through)
                    (NP (PRP$ its) (JJ green) (NNS curtains))))))))))
    (. .)))

nsubj(stood-2, He-1)
root(ROOT-0, stood-2)
nsubj(neglected-21, staring-3)
neg(neglected-21, not-5)
det(warrior-9, the-7)
amod(warrior-9, great-8)
prep_at(neglected-21, warrior-9)
dep(warrior-9, Orion-10)
det(sky-13, the-12)
prep_in(Orion-10, sky-13)
dep(warrior-9, yet-16)
conj_nor(Orion-10, yet-16)
det(disconsolate-19, the-18)
prep_at(yet-16, disconsolate-19)
ccomp(stood-2, neglected-21)
dobj(neglected-21, moon-22)
vmod(moon-22, going-23)
prt(going-23, down-24)
det(west-27, the-26)
prep_in(going-23, west-27)
ccomp(stood-2, at-30)
conj_but(neglected-21, at-30)
det(window-33, the-31)
amod(window-33, drawing-room-32)
pobj(at-30, window-33)
det(light-36, the-35)
prep_with(neglected-21, light-36)
vmod(light-36, shining-37)
poss(curtains-41, its-39)
amod(curtains-41, green-40)
prep_through(shining-37, curtains-41)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (VP (VBN been)
        (PP (IN in)
          (NP (DT that) (NN room)))
        (SBAR
          (ADVP (RB once)
            (CC or)
            (RB twice))
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB remember)
                  (PP (IN at)
                    (NP (NNP Christmas) (NNS times)))))))
          (: ;)
          (SBAR (IN for)
            (S
              (NP (DT the) (NNPS Colemans))
              (VP (VBD were)
                (NP (NN kind) (NNS people))
                (, ,)
                (SBAR (IN though)
                  (S
                    (NP (PRP they))
                    (VP (VBD did) (RB not)
                      (VP (VB care)
                        (NP
                          (QP (RB much) (RB about))
                          (NNS children))))))))))))
    (. .)))

nsubj(been-3, He-1)
aux(been-3, had-2)
root(ROOT-0, been-3)
det(room-6, that-5)
prep_in(been-3, room-6)
advmod(remember-13, once-7)
conj_or(once-7, twice-9)
advmod(remember-13, twice-9)
mark(remember-13, that-10)
nsubj(remember-13, he-11)
aux(remember-13, could-12)
advcl(been-3, remember-13)
nn(times-16, Christmas-15)
prep_at(remember-13, times-16)
mark(people-23, for-18)
det(Colemans-20, the-19)
nsubj(people-23, Colemans-20)
cop(people-23, were-21)
nn(people-23, kind-22)
dep(remember-13, people-23)
mark(care-29, though-25)
nsubj(care-29, they-26)
aux(care-29, did-27)
neg(care-29, not-28)
advcl(people-23, care-29)
quantmod(about-31, much-30)
num(children-32, about-31)
dobj(care-29, children-32)

(ROOT
  (S
    (S
      (ADVP (DT All) (IN at))
      (ADVP (RB once))
      (NP (DT the) (NN light))
      (VP (VBD went)
        (ADVP (RB nearly) (RB out))))
    (: :)
    (S
      (NP (PRP he))
      (VP (MD could)
        (ADVP (RB only))
        (VP (VB see)
          (NP
            (NP (DT a) (NN glimmer))
            (PP (IN of)
              (NP
                (NP (DT the) (NN shape))
                (PP (IN of)
                  (NP (DT the) (NN window)))))))))
    (. .)))

pobj(at-2, All-1)
advmod(went-6, at-2)
advmod(went-6, once-3)
det(light-5, the-4)
nsubj(went-6, light-5)
root(ROOT-0, went-6)
advmod(out-8, nearly-7)
advmod(went-6, out-8)
nsubj(see-13, he-10)
aux(see-13, could-11)
advmod(see-13, only-12)
parataxis(went-6, see-13)
det(glimmer-15, a-14)
dobj(see-13, glimmer-15)
det(shape-18, the-17)
prep_of(glimmer-15, shape-18)
det(window-21, the-20)
prep_of(shape-18, window-21)

(ROOT
  (S
    (ADVP (RB Then))
    (, ,)
    (ADVP (RB indeed))
    (, ,)
    (NP (PRP he))
    (VP (VBD felt)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD was)
            (VP (VBN left)
              (ADVP (RB alone)))))))
    (. .)))

advmod(felt-6, Then-1)
advmod(felt-6, indeed-3)
nsubj(felt-6, he-5)
root(ROOT-0, felt-6)
mark(left-10, that-7)
nsubjpass(left-10, he-8)
auxpass(left-10, was-9)
ccomp(felt-6, left-10)
advmod(left-10, alone-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (RB so) (JJ dreadful)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (IN out)
                (PP (IN in)
                  (NP (DT the) (NN night))))
              (SBAR (IN after)
                (S
                  (NP (NN everybody))
                  (VP (VBD was)
                    (VP (VBN gone)
                      (PP (TO to)
                        (NP (NN bed))))))))))))
    (. !)))

nsubj(dreadful-4, It-1)
nsubj(out-7, It-1)
cop(dreadful-4, was-2)
advmod(dreadful-4, so-3)
root(ROOT-0, dreadful-4)
aux(out-7, to-5)
cop(out-7, be-6)
xcomp(dreadful-4, out-7)
det(night-10, the-9)
prep_in(out-7, night-10)
mark(gone-14, after-11)
nsubjpass(gone-14, everybody-12)
auxpass(gone-14, was-13)
advcl(out-7, gone-14)
prep_to(gone-14, bed-16)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (ADJP
        (ADJP (JJR more))
        (SBAR (IN than)
          (S
            (NP (PRP he))
            (VP (MD could)
              (VP (VB bear)))))))
    (. .)))

nsubj(more-3, That-1)
cop(more-3, was-2)
root(ROOT-0, more-3)
mark(bear-7, than-4)
nsubj(bear-7, he-5)
aux(bear-7, could-6)
ccomp(more-3, bear-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBP burst)
      (PRT (RP out))
      (S
        (VP
          (VP (VBG crying)
            (PP (IN in)
              (NP (JJ good) (NN earnest))))
          (, ,)
          (VP (VBG beginning)
            (PP (IN with)
              (NP
                (NP (DT a) (NN wail))
                (PP (IN like)
                  (NP
                    (NP (DT that))
                    (PP (IN of)
                      (NP (DT the) (NN wind)))))))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (VP (VBG waking)
                    (PRT (RP up))))))))))
    (. .)))

nsubj(burst-2, He-1)
root(ROOT-0, burst-2)
prt(burst-2, out-3)
ccomp(burst-2, crying-4)
amod(earnest-7, good-6)
prep_in(crying-4, earnest-7)
dep(crying-4, beginning-9)
det(wail-12, a-11)
prep_with(beginning-9, wail-12)
prep_like(wail-12, that-14)
det(wind-17, the-16)
prep_of(that-14, wind-17)
advmod(waking-21, when-18)
nsubj(waking-21, it-19)
aux(waking-21, is-20)
advcl(beginning-9, waking-21)
prt(waking-21, up-22)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT this))
          (VP (VBD was)
            (ADJP (RB very) (JJ foolish)))
          (: ;)
          (SBAR (IN for)
            (FRAG
              (S (MD could)
                (NP (PRP he))
                (VP (RB not)
                  (VP (VB go)
                    (NP (NN home))
                    (PP (TO to)
                      (NP (PRP$ his) (JJ own) (NN bed)))
                    (SBAR
                      (ADVP (RB again))
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP he))
                        (VP (VBD liked))))))))))))
    (. ?)))

advmod(think-3, Perhaps-1)
nsubj(think-3, you-2)
root(ROOT-0, think-3)
nsubj(foolish-7, this-4)
cop(foolish-7, was-5)
advmod(foolish-7, very-6)
ccomp(think-3, foolish-7)
mark(go-13, for-9)
dep(go-13, could-10)
nsubj(go-13, he-11)
neg(go-13, not-12)
parataxis(foolish-7, go-13)
dobj(go-13, home-14)
poss(bed-18, his-16)
amod(bed-18, own-17)
prep_to(go-13, bed-18)
advmod(liked-22, again-19)
advmod(liked-22, when-20)
nsubj(liked-22, he-21)
advcl(go-13, liked-22)

(ROOT
  (S
    (FRAG
      (INTJ (UH Yes)))
    (: ;)
    (S
      (S (CC but)
        (NP (PRP it))
        (VP (VBD looked)
          (NP (JJ dreadful))
          (PP (TO to)
            (NP (PRP him)))
          (S
            (VP (TO to)
              (VP
                (VP (VB creep)
                  (PRT (RP up))
                  (NP (DT that) (NN stair))
                  (ADVP (RB again)))
                (CC and)
                (VP (VB lie)
                  (PRT (RP down))
                  (PP (IN in)
                    (NP (PRP$ his) (NN bed)))
                  (ADVP (RB again)))
                (, ,)
                (CC and)
                (VP (VB know)
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (NNP North) (NNP Wind) (POS 's))
                        (NN window))
                      (VP (VBD was)
                        (ADJP (JJ open)
                          (PP (IN beside)
                            (NP (PRP him)))))))))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP she))
          (VP (VBN gone)))
        (, ,)
        (CC and)
        (S
          (NP (PRP he))
          (VP (MD might)
            (ADVP (RB never))
            (VP (VB see)
              (NP (PRP her))
              (ADVP (RB again)))))))
    (. .)))

dep(looked-5, Yes-1)
nsubj(looked-5, it-4)
root(ROOT-0, looked-5)
dobj(looked-5, dreadful-6)
prep_to(looked-5, him-8)
aux(creep-10, to-9)
vmod(looked-5, creep-10)
prt(creep-10, up-11)
det(stair-13, that-12)
dobj(creep-10, stair-13)
advmod(creep-10, again-14)
vmod(looked-5, lie-16)
conj_and(creep-10, lie-16)
prt(lie-16, down-17)
poss(bed-20, his-19)
prep_in(lie-16, bed-20)
advmod(lie-16, again-21)
vmod(looked-5, know-24)
conj_and(creep-10, know-24)
mark(open-31, that-25)
nn(Wind-27, North-26)
poss(window-29, Wind-27)
nsubj(open-31, window-29)
cop(open-31, was-30)
ccomp(know-24, open-31)
prep_beside(open-31, him-33)
nsubj(gone-37, she-36)
conj_and(looked-5, gone-37)
nsubj(see-43, he-40)
aux(see-43, might-41)
neg(see-43, never-42)
conj_and(looked-5, see-43)
conj_and(gone-37, see-43)
dobj(see-43, her-44)
advmod(see-43, again-45)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB just) (RB as) (JJ lonely))
        (ADVP (RB there) (RB as) (RB here))))
    (. .)))

nsubj(lonely-6, He-1)
aux(lonely-6, would-2)
cop(lonely-6, be-3)
advmod(lonely-6, just-4)
advmod(lonely-6, as-5)
root(ROOT-0, lonely-6)
advmod(here-9, there-7)
advmod(here-9, as-8)
advmod(lonely-6, here-9)

(ROOT
  (S
    (ADVP (RB Nay))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP
          (ADJP (RB much) (JJR worse))
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (S
                  (VP (TO to)
                    (VP (VB think)
                      (SBAR (IN that)
                        (S
                          (NP (DT the) (NN window))
                          (VP (VBD was)
                            (NP
                              (NP (NN nothing))
                              (PP (CC but)
                                (NP
                                  (NP (DT a) (NN hole))
                                  (PP (IN in)
                                    (NP (DT the) (NN wall))))))))))))))))))
    (. .)))

advmod(worse-7, Nay-1)
nsubj(worse-7, it-3)
aux(worse-7, would-4)
cop(worse-7, be-5)
advmod(worse-7, much-6)
root(ROOT-0, worse-7)
mark(had-10, if-8)
nsubj(had-10, he-9)
nsubj(think-12, he-9)
ccomp(worse-7, had-10)
aux(think-12, to-11)
xcomp(had-10, think-12)
mark(nothing-17, that-13)
det(window-15, the-14)
nsubj(nothing-17, window-15)
cop(nothing-17, was-16)
ccomp(think-12, nothing-17)
prep(nothing-17, but-18)
det(hole-20, a-19)
pobj(but-18, hole-20)
det(wall-23, the-22)
prep_in(hole-20, wall-23)

(ROOT
  (S
    (PP (IN At)
      (NP
        (NP (DT the) (JJ very) (NN moment))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBP burst)
              (PRT (RP out))
              (S
                (VP (VBG crying))))))))
    (, ,)
    (NP
      (NP (DT the) (JJ old) (NN nurse))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD had)
            (VP (VBN grown)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP
                      (NP (CD one))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN family))
                          (, ,)
                          (SBAR (IN for)
                            (S
                              (NP (PRP she))
                              (VP (VBD had) (RB not)
                                (VP (VBN gone)
                                  (ADVP (RB away))
                                  (SBAR
                                    (WHADVP (WRB when))
                                    (S
                                      (NP (NNP Miss) (NNP Coleman))
                                      (VP (VBD did) (RB not)
                                        (VP (VB want)
                                          (NP (DT any) (JJR more) (NN nursing))))))))))
                          (, ,))))))))))))
    (VP (VBD came)
      (PP (TO to)
        (NP
          (NP (DT the) (JJ back) (NN door))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (PP (IN of)
                  (NP (NN glass)))
                (, ,)
                (S
                  (VP (TO to)
                    (VP (VB close)
                      (NP (DT the) (NNS shutters)))))))))))
    (. .)))

det(moment-4, the-2)
amod(moment-4, very-3)
tmod(burst-7, moment-4)
prep_at(came-40, moment-4)
advmod(burst-7, when-5)
nsubj(burst-7, he-6)
rcmod(moment-4, burst-7)
prt(burst-7, out-8)
xcomp(burst-7, crying-9)
det(nurse-13, the-11)
amod(nurse-13, old-12)
nsubj(grown-16, nurse-13)
nsubj(one-19, nurse-13)
nsubj(came-40, nurse-13)
aux(grown-16, had-15)
rcmod(nurse-13, grown-16)
aux(one-19, to-17)
cop(one-19, be-18)
xcomp(grown-16, one-19)
det(family-22, the-21)
prep_of(one-19, family-22)
mark(gone-28, for-24)
nsubj(gone-28, she-25)
aux(gone-28, had-26)
neg(gone-28, not-27)
rcmod(family-22, gone-28)
advmod(gone-28, away-29)
advmod(want-35, when-30)
nn(Coleman-32, Miss-31)
nsubj(want-35, Coleman-32)
aux(want-35, did-33)
neg(want-35, not-34)
advcl(gone-28, want-35)
det(nursing-38, any-36)
amod(nursing-38, more-37)
dobj(want-35, nursing-38)
root(ROOT-0, came-40)
det(door-44, the-42)
amod(door-44, back-43)
prep_to(came-40, door-44)
nsubj(was-47, door-44)
nsubj(close-52, door-44)
rcmod(door-44, was-47)
prep_of(was-47, glass-49)
aux(close-52, to-51)
xcomp(was-47, close-52)
det(shutters-54, the-53)
dobj(close-52, shutters-54)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD thought)
      (SBAR
        (S
          (S
            (NP (PRP she))
            (VP (VBD heard)
              (NP (DT a) (NN cry))))
          (, ,)
          (CC and)
          (, ,)
          (S
            (S
              (VP (VBG peering)
                (PRT (RP out))
                (PP (IN with)
                  (NP
                    (NP (DT a) (NN hand))
                    (PP (IN on)
                      (NP
                        (NP (DT each) (NN side))
                        (PP (IN of)
                          (NP (PRP$ her) (NNS eyes)))))))
                (PP (IN like)
                  (NP
                    (NP (NNP Diamond) (POS 's))
                    (NNS blinkers)))))
            (, ,)
            (NP (PRP she))
            (VP (VBD saw)
              (NP (NN something) (JJ white))
              (PP (IN on)
                (NP (DT the) (NN lawn))))))))
    (. .)))

nsubj(thought-2, She-1)
root(ROOT-0, thought-2)
nsubj(heard-4, she-3)
dep(thought-2, heard-4)
det(cry-6, a-5)
dobj(heard-4, cry-6)
vmod(saw-27, peering-10)
prt(peering-10, out-11)
det(hand-14, a-13)
prep_with(peering-10, hand-14)
det(side-17, each-16)
prep_on(hand-14, side-17)
poss(eyes-20, her-19)
prep_of(side-17, eyes-20)
poss(blinkers-24, Diamond-22)
prep_like(peering-10, blinkers-24)
nsubj(saw-27, she-26)
dep(thought-2, saw-27)
conj_and(heard-4, saw-27)
dobj(saw-27, something-28)
amod(something-28, white-29)
det(lawn-32, the-31)
prep_on(saw-27, lawn-32)

(ROOT
  (S
    (S
      (ADJP
        (ADJP (RB Too) (JJ old))
        (CC and)
        (ADJP (RB too) (JJ wise)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ frightened))))))))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (VBD opened)
        (NP (DT the) (NN door)))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PP (RB straight) (IN towards)
          (NP (DT the) (JJ white) (NN thing)))
        (S
          (VP (TO to)
            (VP (VB see)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP it))
                  (VP (VBD was)))))))))
    (. .)))

advmod(old-2, Too-1)
ccomp(opened-11, old-2)
advmod(wise-5, too-4)
conj_and(old-2, wise-5)
ccomp(opened-11, wise-5)
aux(frightened-8, to-6)
cop(frightened-8, be-7)
xcomp(wise-5, frightened-8)
nsubj(opened-11, she-10)
nsubj(went-16, she-10)
nsubj(see-23, she-10)
root(ROOT-0, opened-11)
det(door-13, the-12)
dobj(opened-11, door-13)
conj_and(opened-11, went-16)
advmod(went-16, straight-17)
det(thing-21, the-19)
amod(thing-21, white-20)
prep_towards(went-16, thing-21)
aux(see-23, to-22)
xcomp(went-16, see-23)
dobj(was-26, what-24)
nsubj(was-26, it-25)
ccomp(see-23, was-26)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (NNP Diamond))
        (VP (VBD saw)
          (NP (PRP$ her) (JJ coming)))))
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (RB not) (JJ frightened))
        (ADVP (RB either))
        (, ,)
        (SBAR
          (SBAR (IN though)
            (S
              (NP (NNP Mrs.) (NNP Crump))
              (VP (VBD was)
                (NP (DT a) (JJ little) (NN cross))
                (ADVP (RB sometimes)))))
          (: ;)
          (SBAR (IN for)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (DT a) (JJ good) (NN kind))
                  (PP (IN of)
                    (NP
                      (NP (NNS crossness))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ is)
                            (ADJP (RB only) (JJ disagreeable))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ bad) (NN kind))
          (PP (IN of)
            (NP
              (NP (NNS crossness))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (ADJP (RB very) (JJ nasty))
                    (ADVP (RB indeed))))))))))
    (. .)))

advmod(saw-4, when-2)
nsubj(saw-4, Diamond-3)
advcl(frightened-10, saw-4)
poss(coming-6, her-5)
dobj(saw-4, coming-6)
nsubj(frightened-10, he-7)
cop(frightened-10, was-8)
neg(frightened-10, not-9)
root(ROOT-0, frightened-10)
advmod(frightened-10, either-11)
mark(cross-19, though-13)
nn(Crump-15, Mrs.-14)
nsubj(cross-19, Crump-15)
cop(cross-19, was-16)
det(cross-19, a-17)
amod(cross-19, little-18)
advcl(frightened-10, cross-19)
advmod(cross-19, sometimes-20)
mark(is-24, for-22)
expl(is-24, there-23)
dep(cross-19, is-24)
det(kind-27, a-25)
amod(kind-27, good-26)
nsubj(is-24, kind-27)
prep_of(kind-27, crossness-29)
nsubj(disagreeable-33, crossness-29)
cop(disagreeable-33, is-31)
advmod(disagreeable-33, only-32)
rcmod(crossness-29, disagreeable-33)
expl(is-37, there-36)
conj_and(frightened-10, is-37)
det(kind-40, a-38)
amod(kind-40, bad-39)
nsubj(is-37, kind-40)
prep_of(kind-40, crossness-42)
nsubj(nasty-46, crossness-42)
cop(nasty-46, is-44)
advmod(nasty-46, very-45)
rcmod(crossness-42, nasty-46)
advmod(nasty-46, indeed-47)

(ROOT
  (S (IN So)
    (NP (PRP she))
    (VP (VBD came)
      (PRT (RP up))
      (PP (IN with)
        (NP
          (NP
            (NP
              (NP (PRP$ her) (NN neck))
              (VP (VBN stretched)
                (PRT (RP out))))
            (, ,)
            (CC and)
            (NP
              (NP (PRP$ her) (NN head))
              (PP (IN at)
                (NP
                  (NP (DT the) (NN end))
                  (PP (IN of)
                    (NP (PRP it)))))))
          (, ,)
          (CC and)
          (NP
            (NP (PRP$ her) (NNS eyes))
            (ADVP (RB foremost))
            (PP (IN of)
              (NP
                (NP (DT all))
                (, ,)
                (PP (IN like)
                  (NP (DT a) (NN snail) (POS 's)))
                (, ,)
                (VP (VBG peering)
                  (PP (IN into)
                    (NP (DT the) (NN night)))
                  (S
                    (VP (TO to)
                      (VP (VB see)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP it))
                            (VP (MD could)
                              (VP (VB be)))))))))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD went)
                      (PP (IN on)
                        (S
                          (VP (VBG glimmering)
                            (ADJP (JJ white))
                            (PP (IN before)
                              (NP (PRP her)))))))))))))))
    (. .)))

dep(came-3, So-1)
nsubj(came-3, she-2)
root(ROOT-0, came-3)
prt(came-3, up-4)
poss(neck-7, her-6)
prep_with(came-3, neck-7)
vmod(neck-7, stretched-8)
prt(stretched-8, out-9)
poss(head-13, her-12)
prep_with(came-3, head-13)
conj_and(neck-7, head-13)
det(end-16, the-15)
prep_at(head-13, end-16)
prep_of(end-16, it-18)
poss(eyes-22, her-21)
prep_with(came-3, eyes-22)
conj_and(neck-7, eyes-22)
advmod(eyes-22, foremost-23)
prep_of(eyes-22, all-25)
nsubj(went-43, all-25)
det(snail-29, a-28)
prep_like(all-25, snail-29)
possessive(snail-29, 's-30)
vmod(all-25, peering-32)
det(night-35, the-34)
prep_into(peering-32, night-35)
aux(see-37, to-36)
xcomp(peering-32, see-37)
dobj(be-41, what-38)
nsubj(be-41, it-39)
aux(be-41, could-40)
ccomp(see-37, be-41)
rcmod(all-25, went-43)
prepc_on(went-43, glimmering-45)
acomp(glimmering-45, white-46)
prep_before(glimmering-45, her-48)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP she))
        (VP (VBD did)
          (VP (VB see)))))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (VBD made)
        (NP (DT a) (JJ great) (NN exclamation)))
      (, ,)
      (CC and)
      (VP (VBD threw)
        (PRT (RP up))
        (NP (PRP$ her) (NNS hands))))
    (. .)))

advmod(see-4, When-1)
nsubj(see-4, she-2)
aux(see-4, did-3)
advcl(made-7, see-4)
nsubj(made-7, she-6)
nsubj(threw-13, she-6)
root(ROOT-0, made-7)
det(exclamation-10, a-8)
amod(exclamation-10, great-9)
dobj(made-7, exclamation-10)
conj_and(made-7, threw-13)
prt(threw-13, up-14)
poss(hands-16, her-15)
dobj(threw-13, hands-16)

(ROOT
  (S (RB Then)
    (PP (IN without)
      (NP (DT a) (NN word)))
    (, ,)
    (SBAR (IN for)
      (S
        (NP (PRP she))
        (VP (VBD thought)
          (SBAR
            (S
              (NP (NNP Diamond))
              (VP (VBD was)
                (VP (VBG walking)
                  (PP (IN in)
                    (NP (PRP$ his) (NN sleep))))))))))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (VBD caught)
        (NP
          (NP (NN hold))
          (PP (IN of)
            (NP (PRP him)))))
      (, ,)
      (CC and)
      (VP (VBD led)
        (NP (PRP him))
        (PP (IN towards)
          (NP (DT the) (NN house)))))
    (. .)))

advmod(caught-17, Then-1)
det(word-4, a-3)
prep_without(caught-17, word-4)
mark(thought-8, for-6)
nsubj(thought-8, she-7)
advcl(caught-17, thought-8)
nsubj(walking-11, Diamond-9)
aux(walking-11, was-10)
ccomp(thought-8, walking-11)
poss(sleep-14, his-13)
prep_in(walking-11, sleep-14)
nsubj(caught-17, she-16)
nsubj(led-23, she-16)
root(ROOT-0, caught-17)
dobj(caught-17, hold-18)
prep_of(hold-18, him-20)
conj_and(caught-17, led-23)
dobj(led-23, him-24)
det(house-27, the-26)
prep_towards(led-23, house-27)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD made)
        (NP (DT no) (NN objection))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADVP (RB just))
              (PP (IN in)
                (NP (DT the) (NN mood)))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ grateful)
                      (PP (IN for)
                        (NP
                          (NP (NN notice))
                          (PP (IN of)
                            (NP (DT any) (NN sort))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Mrs.) (NNP Crump))
      (VP (VBD led)
        (NP (PRP him))
        (PP (RB straight) (IN into)
          (NP (DT the) (NN drawing-room)))))
    (. .)))

nsubj(made-2, He-1)
root(ROOT-0, made-2)
neg(objection-4, no-3)
dobj(made-2, objection-4)
mark(was-8, for-6)
nsubj(was-8, he-7)
nsubj(grateful-15, he-7)
advcl(made-2, was-8)
advmod(was-8, just-9)
det(mood-12, the-11)
prep_in(was-8, mood-12)
aux(grateful-15, to-13)
cop(grateful-15, be-14)
xcomp(was-8, grateful-15)
prep_for(grateful-15, notice-17)
det(sort-20, any-19)
prep_of(notice-17, sort-20)
nn(Crump-24, Mrs.-23)
nsubj(led-25, Crump-24)
conj_and(made-2, led-25)
dobj(led-25, him-26)
advmod(led-25, straight-27)
det(drawing-room-30, the-29)
prep_into(led-25, drawing-room-30)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S
      (PP (IN from)
        (NP
          (NP (DT the) (NN neglect))
          (PP (IN of)
            (NP (DT the) (JJ new) (NN housemaid)))))
      (, ,)
      (NP
        (NP (DT the) (NN fire))
        (PP (IN in)
          (NP
            (NP (NNP Miss) (NNP Coleman) (POS 's))
            (NN bedroom))))
      (VP (VBD had)
        (VP (VBN gone)
          (PRT (RP out)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ her) (NN mother))
      (VP (VBD had)
        (VP (VBN told)
          (S
            (NP (PRP her))
            (VP (TO to)
              (VP (VB brush)
                (NP (PRP$ her) (NN hair))
                (PP (IN by)
                  (NP
                    (NP (DT the) (JJ drawing-room) (NN fire))
                    (: --)
                    (NP
                      (NP (DT a) (JJ disorderly) (NN proceeding))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP
                            (NP (DT a) (NN mother) (POS 's))
                            (NN wish))
                          (VP (MD could)
                            (VP (VB justify))))))))))))))
    (. .)))

advmod(gone-19, Now-1)
det(neglect-5, the-4)
prep_from(gone-19, neglect-5)
det(housemaid-9, the-7)
amod(housemaid-9, new-8)
prep_of(neglect-5, housemaid-9)
det(fire-12, the-11)
nsubj(gone-19, fire-12)
nn(Coleman-15, Miss-14)
poss(bedroom-17, Coleman-15)
prep_in(fire-12, bedroom-17)
aux(gone-19, had-18)
root(ROOT-0, gone-19)
prt(gone-19, out-20)
poss(mother-24, her-23)
nsubj(told-26, mother-24)
aux(told-26, had-25)
conj_and(gone-19, told-26)
dobj(told-26, her-27)
nsubj(brush-29, her-27)
aux(brush-29, to-28)
xcomp(told-26, brush-29)
poss(hair-31, her-30)
dobj(brush-29, hair-31)
det(fire-35, the-33)
amod(fire-35, drawing-room-34)
prep_by(brush-29, fire-35)
det(proceeding-39, a-37)
amod(proceeding-39, disorderly-38)
dep(fire-35, proceeding-39)
dobj(justify-46, proceeding-39)
det(mother-42, a-41)
poss(wish-44, mother-42)
nsubj(justify-46, wish-44)
aux(justify-46, could-45)
rcmod(proceeding-39, justify-46)

(ROOT
  (S
    (S
      (NP (DT The) (JJ young) (NN lady))
      (VP (VBD was)
        (ADJP (RB very) (JJ lovely))
        (, ,)
        (SBAR (IN though)
          (S (RB not)
            (ADJP (RB nearly) (RB so) (JJ beautiful)
              (PP (IN as)
                (NP (NNP North) (NNP Wind))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP$ her) (NN hair))
      (VP (VBD was)
        (ADJP (RB extremely) (JJ long))
        (, ,)
        (SBAR
          (SBAR (IN for)
            (S
              (NP (PRP it))
              (VP (VBD came)
                (PRT (RP down))
                (PP (TO to)
                  (NP (PRP$ her) (NNS knees))))))
          (: --)
          (SBAR (IN though)
            (S
              (NP (DT that))
              (VP (VBD was)
                (NP
                  (NP (NN nothing))
                  (ADVP (IN at) (DT all)))
                (PP (TO to)
                  (NP
                    (NP (NNP North) (NNP Wind) (POS 's))
                    (NN hair)))))))))
    (. .)))

det(lady-3, The-1)
amod(lady-3, young-2)
nsubj(lovely-6, lady-3)
cop(lovely-6, was-4)
advmod(lovely-6, very-5)
root(ROOT-0, lovely-6)
mark(beautiful-12, though-8)
neg(beautiful-12, not-9)
advmod(beautiful-12, nearly-10)
advmod(beautiful-12, so-11)
advcl(lovely-6, beautiful-12)
nn(Wind-15, North-14)
prep_as(beautiful-12, Wind-15)
poss(hair-19, her-18)
nsubj(long-22, hair-19)
cop(long-22, was-20)
advmod(long-22, extremely-21)
conj_and(lovely-6, long-22)
mark(came-26, for-24)
nsubj(came-26, it-25)
advcl(long-22, came-26)
prt(came-26, down-27)
poss(knees-30, her-29)
prep_to(came-26, knees-30)
mark(nothing-35, though-32)
nsubj(nothing-35, that-33)
cop(nothing-35, was-34)
dep(came-26, nothing-35)
advmod(nothing-35, at-36)
pobj(at-36, all-37)
nn(Wind-40, North-39)
poss(hair-42, Wind-40)
prep_to(nothing-35, hair-42)

(ROOT
  (S (CC Yet)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP she))
        (VP (VBD looked)
          (NP (NN round))
          (, ,)
          (PP (IN with)
            (NP (PRP$ her) (NN hair)))
          (PP (DT all) (IN about)
            (NP (PRP her)))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (NNP Diamond))
              (VP (VBD entered)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD thought)
      (PP (IN for)
        (NP (CD one) (NN moment)))
      (SBAR (IN that)
        (S
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP (JJ North) (NN Wind))))
          (, ,)
          (CC and)
          (, ,)
          (S
            (S
              (VP (VBG pulling)
                (NP (PRP$ his) (NN hand))
                (PP (IN from)
                  (NP (NNP Mrs.) (NNP Crump) (POS 's)))))
            (, ,)
            (NP (PRP he))
            (VP
              (VP (VBD stretched)
                (PRT (RP out))
                (NP (PRP$ his) (NNS arms)))
              (CC and)
              (VP (VBD ran)
                (PP (IN towards)
                  (NP (NNP Miss) (NNP Coleman)))))))))
    (. .)))

cc(thought-19, Yet-1)
advmod(looked-4, when-2)
nsubj(looked-4, she-3)
advcl(thought-19, looked-4)
dobj(looked-4, round-5)
poss(hair-9, her-8)
prep_with(looked-4, hair-9)
dep(looked-4, all-10)
prep_about(looked-4, her-12)
mark(entered-16, as-14)
nsubj(entered-16, Diamond-15)
advcl(looked-4, entered-16)
nsubj(thought-19, he-18)
root(ROOT-0, thought-19)
num(moment-22, one-21)
prep_for(thought-19, moment-22)
mark(Wind-27, that-23)
nsubj(Wind-27, it-24)
cop(Wind-27, was-25)
amod(Wind-27, North-26)
ccomp(thought-19, Wind-27)
vmod(stretched-40, pulling-31)
poss(hand-33, his-32)
dobj(pulling-31, hand-33)
nn(Crump-36, Mrs.-35)
prep_from(pulling-31, Crump-36)
possessive(Crump-36, 's-37)
nsubj(stretched-40, he-39)
nsubj(ran-45, he-39)
ccomp(thought-19, stretched-40)
conj_and(Wind-27, stretched-40)
prt(stretched-40, out-41)
poss(arms-43, his-42)
dobj(stretched-40, arms-43)
conj_and(Wind-27, ran-45)
conj_and(stretched-40, ran-45)
nn(Coleman-48, Miss-47)
prep_towards(ran-45, Coleman-48)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADJP
        (ADJP (RB so) (VBN pleased)
          (SBAR (IN that)
            (S
              (NP (PRP she))
              (VP (VBD threw)
                (PRT (RP down))
                (NP (PRP$ her) (NN brush))))))
        (, ,)
        (CC and)
        (ADJP (RB almost) (JJ knelt)
          (PP (IN on)
            (NP (DT the) (NN floor)
              (S
                (VP (TO to)
                  (VP (VB receive)
                    (NP (PRP him))
                    (PP (IN in)
                      (NP (PRP$ her) (NNS arms)))))))))))
    (. .)))

nsubjpass(pleased-4, She-1)
nsubj(knelt-14, She-1)
auxpass(pleased-4, was-2)
cop(pleased-4, was-2)
advmod(pleased-4, so-3)
root(ROOT-0, pleased-4)
mark(threw-7, that-5)
nsubj(threw-7, she-6)
ccomp(pleased-4, threw-7)
prt(threw-7, down-8)
poss(brush-10, her-9)
dobj(threw-7, brush-10)
advmod(knelt-14, almost-13)
conj_and(pleased-4, knelt-14)
det(floor-17, the-16)
prep_on(knelt-14, floor-17)
aux(receive-19, to-18)
vmod(floor-17, receive-19)
dobj(receive-19, him-20)
poss(arms-23, her-22)
prep_in(receive-19, arms-23)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD saw)
        (NP (DT the) (JJ next) (NN moment))
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBD was) (RB not)
              (NP (NNP Lady) (NNP North) (NNP Wind)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD looked)
        (SBAR (IN so)
          (S
            (PP (IN like)
              (NP (PRP her)))
            (NP (PRP he))
            (VP (MD could) (RB not)
              (VP (VB help)
                (S
                  (VP
                    (VP (VBG running)
                      (PP (IN into)
                        (NP (PRP$ her) (NNS arms))))
                    (CC and)
                    (VP (VBG bursting)
                      (PP (IN into)
                        (NP (NNS tears) (NN afresh))))))))))))
    (. .)))

nsubj(saw-2, He-1)
root(ROOT-0, saw-2)
det(moment-5, the-3)
amod(moment-5, next-4)
dobj(saw-2, moment-5)
mark(Wind-12, that-6)
nsubj(Wind-12, she-7)
cop(Wind-12, was-8)
neg(Wind-12, not-9)
nn(Wind-12, Lady-10)
nn(Wind-12, North-11)
ccomp(saw-2, Wind-12)
nsubj(looked-16, she-15)
conj_but(saw-2, looked-16)
mark(help-23, so-17)
prep_like(help-23, her-19)
nsubj(help-23, he-20)
aux(help-23, could-21)
neg(help-23, not-22)
advcl(looked-16, help-23)
ccomp(help-23, running-24)
poss(arms-27, her-26)
prep_into(running-24, arms-27)
ccomp(help-23, bursting-29)
conj_and(running-24, bursting-29)
nn(afresh-32, tears-31)
prep_into(bursting-29, afresh-32)

(ROOT
  (S
    (S
      (S
        (NP (NNP Mrs.) (NNP Crump))
        (VP (VBD said)
          (SBAR
            (S
              (NP (DT the) (JJ poor) (NN child))
              (VP (VBD had)
                (VP (VBD walked)
                  (PRT (RP out))
                  (PP (IN in)
                    (NP (PRP$ his) (NN sleep)))))))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Diamond))
        (VP
          (VP (VBD thought)
            (SBAR
              (S
                (NP (PRP she))
                (VP (MD ought)
                  (S
                    (VP (TO to)
                      (VP (VB know))))))))
          (, ,)
          (CC and)
          (VP (VBD did) (RB not)
            (VP (VB contradict)
              (NP (PRP her))
              (PP (IN for)
                (NP
                  (NP (NN anything))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD knew)))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD might)
      (VP (VB be)
        (ADVP (RB so))
        (ADVP (RB indeed))))
    (. .)))

nn(Crump-2, Mrs.-1)
nsubj(said-3, Crump-2)
ccomp(be-34, said-3)
det(child-6, the-4)
amod(child-6, poor-5)
nsubj(walked-8, child-6)
aux(walked-8, had-7)
ccomp(said-3, walked-8)
prt(walked-8, out-9)
poss(sleep-12, his-11)
prep_in(walked-8, sleep-12)
nsubj(thought-16, Diamond-15)
nsubj(contradict-25, Diamond-15)
conj_and(said-3, thought-16)
ccomp(be-34, thought-16)
nsubj(ought-18, she-17)
nsubj(know-20, she-17)
ccomp(thought-16, ought-18)
aux(know-20, to-19)
xcomp(ought-18, know-20)
aux(contradict-25, did-23)
neg(contradict-25, not-24)
conj_and(said-3, contradict-25)
conj_and(thought-16, contradict-25)
dobj(contradict-25, her-26)
prep_for(contradict-25, anything-28)
nsubj(knew-30, he-29)
rcmod(anything-28, knew-30)
nsubj(be-34, it-32)
aux(be-34, might-33)
root(ROOT-0, be-34)
advmod(be-34, so-35)
advmod(be-34, indeed-36)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD let)
          (S
            (NP (PRP them))
            (VP (VB talk)
              (PRT (RP on))
              (PP (IN about)
                (NP (PRP him))))))
        (, ,)
        (CC and)
        (VP (VBD said)
          (NP (NN nothing)))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (, ,)
        (S
          (SBAR (IN after)
            (S
              (S
                (NP (PRP$ their) (NN astonishment))
                (VP (VBD was)
                  (ADJP (RP over))))
              (, ,)
              (CC and)
              (S
                (NP (NNP Miss) (NNP Coleman))
                (VP (VBD had)
                  (VP (VBN given)
                    (NP (PRP him))
                    (NP (DT a) (NN sponge-cake)))))))
          (, ,)
          (NP (PRP it))
          (VP (VBD was)
            (VP (VBN decreed)
              (SBAR (IN that)
                (S
                  (NP (NNP Mrs.) (NNP Crump))
                  (VP (MD should)
                    (VP (VB take)
                      (NP (PRP him))
                      (PP (TO to)
                        (NP (PRP$ his) (NN mother)))))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (RB quite) (VBN satisfied))))
    (. .)))

nsubj(let-2, He-1)
nsubj(said-10, He-1)
root(ROOT-0, let-2)
nsubj(talk-4, them-3)
ccomp(let-2, talk-4)
prt(talk-4, on-5)
prep_about(talk-4, him-7)
conj_and(let-2, said-10)
dobj(said-10, nothing-11)
advmod(decreed-33, when-14)
mark(over-20, after-16)
poss(astonishment-18, their-17)
nsubj(over-20, astonishment-18)
cop(over-20, was-19)
advcl(decreed-33, over-20)
nn(Coleman-24, Miss-23)
nsubj(given-26, Coleman-24)
aux(given-26, had-25)
conj_and(over-20, given-26)
advcl(decreed-33, given-26)
iobj(given-26, him-27)
det(sponge-cake-29, a-28)
dobj(given-26, sponge-cake-29)
nsubjpass(decreed-33, it-31)
auxpass(decreed-33, was-32)
advcl(satisfied-47, decreed-33)
mark(take-38, that-34)
nn(Crump-36, Mrs.-35)
nsubj(take-38, Crump-36)
aux(take-38, should-37)
ccomp(decreed-33, take-38)
dobj(take-38, him-39)
poss(mother-42, his-41)
prep_to(take-38, mother-42)
nsubjpass(satisfied-47, he-44)
auxpass(satisfied-47, was-45)
advmod(satisfied-47, quite-46)
conj_and(let-2, satisfied-47)

(ROOT
  (S
    (NP (PRP$ His) (NN mother))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB get)
            (PRT (RP out))
            (PP (IN of)
              (NP (NN bed))))))
      (S
        (VP (TO to)
          (VP (VB open)
            (NP (DT the) (NN door))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (NNP Mrs.) (NNP Crump))
                (VP (VBD knocked))))))))
    (. .)))

poss(mother-2, His-1)
nsubj(had-3, mother-2)
nsubj(get-5, mother-2)
nsubj(open-10, mother-2)
root(ROOT-0, had-3)
aux(get-5, to-4)
xcomp(had-3, get-5)
prep_out_of(get-5, bed-8)
aux(open-10, to-9)
xcomp(had-3, open-10)
det(door-12, the-11)
dobj(open-10, door-12)
advmod(knocked-16, when-13)
nn(Crump-15, Mrs.-14)
nsubj(knocked-16, Crump-15)
advcl(open-10, knocked-16)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD was)
        (ADVP (RB indeed))
        (VP (VBN surprised)
          (S
            (S
              (VP (TO to)
                (VP (VB see)
                  (NP
                    (NP (PRP her))
                    (, ,)
                    (NP (NN boy))))))
            (: ;)
            (CC and)
            (S
              (VP (VBG having)
                (VP (VBN taken)
                  (NP (PRP him))
                  (PP (IN in)
                    (NP (PRP$ her) (NNS arms)))))))))
      (CC and)
      (VP (VBD carried)
        (NP (PRP him))
        (PP (TO to)
          (NP (PRP$ his) (NN bed))))
      (, ,)
      (VP (VBD returned))
      (CC and)
      (VP (VBD had)
        (NP (DT a) (JJ long) (NN confabulation))
        (PP (IN with)
          (NP (NNP Mrs.) (NNP Crump)))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP they))
            (VP (VBD were)
              (ADVP (RB still))
              (VP (VBG talking)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (NNP Diamond))
                    (VP (VBD fell)
                      (ADVP (RB fast))
                      (ADJP (RB asleep))))))))))
      (, ,)
      (CC and)
      (VP (MD could)
        (VP (VB hear)
          (NP (PRP them))
          (ADVP (RB no) (RB longer)))))
    (. .)))

nsubjpass(surprised-4, She-1)
nsubjpass(carried-19, She-1)
nsubjpass(had-27, She-1)
nsubj(hear-48, She-1)
auxpass(surprised-4, was-2)
advmod(surprised-4, indeed-3)
root(ROOT-0, surprised-4)
aux(see-6, to-5)
dep(surprised-4, see-6)
dobj(see-6, her-7)
appos(her-7, boy-9)
aux(taken-13, having-12)
dep(surprised-4, taken-13)
conj_and(see-6, taken-13)
dobj(taken-13, him-14)
poss(arms-17, her-16)
prep_in(taken-13, arms-17)
conj_and(surprised-4, carried-19)
dobj(carried-19, him-20)
poss(bed-23, his-22)
prep_to(carried-19, bed-23)
dep(surprised-4, returned-25)
conj_and(surprised-4, had-27)
det(confabulation-30, a-28)
amod(confabulation-30, long-29)
dobj(had-27, confabulation-30)
nn(Crump-33, Mrs.-32)
prep_with(had-27, Crump-33)
mark(talking-39, for-35)
nsubj(talking-39, they-36)
aux(talking-39, were-37)
advmod(talking-39, still-38)
advcl(had-27, talking-39)
advmod(fell-42, when-40)
nsubj(fell-42, Diamond-41)
advcl(talking-39, fell-42)
advmod(fell-42, fast-43)
acomp(fell-42, asleep-44)
aux(hear-48, could-47)
conj_and(surprised-4, hear-48)
dobj(hear-48, them-49)
neg(longer-51, no-50)
advmod(hear-48, longer-51)

(ROOT
  (NP (NNP CHAPTER) (NNP III) (. .)))

nn(III-2, CHAPTER-1)
root(ROOT-0, III-2)

(ROOT
  (S
    (NP (NNP OLD) (NNP DIAMOND) (NNP DIAMOND))
    (VP
      (VP (VBD woke)
        (ADVP (RB very) (RB early))
        (PP (IN in)
          (NP (DT the) (NN morning))))
      (, ,)
      (CC and)
      (VP (VBD thought)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT a) (JJ curious))
            (VP (VBP dream)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN had))))))))))
    (. .)))

nn(DIAMOND-3, OLD-1)
nn(DIAMOND-3, DIAMOND-2)
nsubj(woke-4, DIAMOND-3)
nsubj(thought-12, DIAMOND-3)
root(ROOT-0, woke-4)
advmod(early-6, very-5)
advmod(woke-4, early-6)
det(morning-9, the-8)
prep_in(woke-4, morning-9)
conj_and(woke-4, thought-12)
dobj(dream-16, what-13)
det(curious-15, a-14)
nsubj(dream-16, curious-15)
ccomp(thought-12, dream-16)
nsubj(had-19, he-17)
aux(had-19, had-18)
ccomp(dream-16, had-19)

(ROOT
  (S (CC But)
    (S
      (NP (DT the) (NN memory))
      (VP (VBD grew)
        (NP (NN brighter)
          (CC and)
          (NN brighter))
        (PP (IN in)
          (NP (PRP$ his) (NN head)))
        (, ,)
        (SBAR (IN until)
          (S
            (NP (PRP it))
            (VP (VBD did) (RB not)
              (VP (VB look)
                (ADVP (RB altogether))
                (PP (IN like)
                  (NP (DT a) (NN dream)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB doubt)
              (SBAR (IN whether)
                (S
                  (NP (PRP he))
                  (VP (VBD had) (RB not)
                    (ADVP (RB really))
                    (VP (VBN been)
                      (ADVP (RB abroad))
                      (PP (IN in)
                        (NP (DT the) (NN wind))))))))))
        (NP (JJ last) (NN night))))
    (. .)))

det(memory-3, the-2)
nsubj(grew-4, memory-3)
root(ROOT-0, grew-4)
dobj(grew-4, brighter-5)
dobj(grew-4, brighter-7)
conj_and(brighter-5, brighter-7)
poss(head-10, his-9)
prep_in(grew-4, head-10)
mark(look-16, until-12)
nsubj(look-16, it-13)
aux(look-16, did-14)
neg(look-16, not-15)
advcl(grew-4, look-16)
advmod(look-16, altogether-17)
det(dream-20, a-19)
prep_like(look-16, dream-20)
nsubj(began-24, he-23)
nsubj(doubt-26, he-23)
conj_and(grew-4, began-24)
aux(doubt-26, to-25)
xcomp(began-24, doubt-26)
mark(been-32, whether-27)
nsubj(been-32, he-28)
aux(been-32, had-29)
neg(been-32, not-30)
advmod(been-32, really-31)
ccomp(doubt-26, been-32)
advmod(been-32, abroad-33)
det(wind-36, the-35)
prep_in(been-32, wind-36)
amod(night-38, last-37)
tmod(began-24, night-38)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD came)
        (PP (TO to)
          (NP (DT the) (NN conclusion)))
        (SBAR (IN that) (, ,)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (ADVP (RB really))
                  (VP (VBN been)
                    (VP (VBN brought)
                      (ADVP (NN home)
                        (PP (TO to)
                          (NP (PRP$ his) (NN mother))))
                      (PP (IN by)
                        (NP (NNP Mrs.) (NNP Crump))))))))
            (, ,)
            (NP (PRP she))
            (VP (MD would)
              (VP (VB say)
                (NP (NN something))
                (PP (TO to)
                  (NP (PRP him)))
                (PP (IN about)
                  (NP (PRP it)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (MD would)
        (VP (VB settle)
          (NP (DT the) (NN matter)))))
    (. .)))

nsubj(came-2, He-1)
root(ROOT-0, came-2)
det(conclusion-5, the-4)
prep_to(came-2, conclusion-5)
mark(say-24, that-6)
mark(brought-13, if-8)
nsubjpass(brought-13, he-9)
aux(brought-13, had-10)
advmod(brought-13, really-11)
auxpass(brought-13, been-12)
advcl(say-24, brought-13)
advmod(brought-13, home-14)
poss(mother-17, his-16)
prep_to(home-14, mother-17)
nn(Crump-20, Mrs.-19)
agent(brought-13, Crump-20)
nsubj(say-24, she-22)
aux(say-24, would-23)
ccomp(came-2, say-24)
dobj(say-24, something-25)
prep_to(say-24, him-27)
prep_about(say-24, it-29)
nsubj(settle-34, that-32)
aux(settle-34, would-33)
conj_and(came-2, settle-34)
det(matter-36, the-35)
dobj(settle-34, matter-36)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP
        (VP (VBD got)
          (PRT (RP up)))
        (CC and)
        (VP (VBD dressed)
          (NP (PRP himself)))))
    (, ,)
    (CC but)
    (, ,)
    (S
      (S
        (VP (VBG finding)
          (SBAR (IN that)
            (S
              (NP (PRP$ his) (NN father)
                (CC and)
                (NN mother))
              (VP (VBD were) (RB not)
                (VP
                  (ADVP (RB yet))
                  (VBG stirring)))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD went)
        (PRT (RP down))
        (NP (DT the) (NN ladder))
        (PP (TO to)
          (NP (DT the) (NN stable)))))
    (. .)))

advmod(got-3, Then-1)
nsubj(got-3, he-2)
nsubj(dressed-6, he-2)
root(ROOT-0, got-3)
prt(got-3, up-4)
conj_and(got-3, dressed-6)
dobj(dressed-6, himself-7)
vmod(went-23, finding-11)
mark(stirring-20, that-12)
poss(father-14, his-13)
nsubj(stirring-20, father-14)
conj_and(father-14, mother-16)
nsubj(stirring-20, mother-16)
aux(stirring-20, were-17)
neg(stirring-20, not-18)
advmod(stirring-20, yet-19)
ccomp(finding-11, stirring-20)
nsubj(went-23, he-22)
conj_but(got-3, went-23)
prt(went-23, down-24)
det(ladder-26, the-25)
dobj(went-23, ladder-26)
det(stable-29, the-28)
prep_to(went-23, stable-29)

(ROOT
  (S
    (S
      (ADVP (RB There))
      (NP (PRP he))
      (VP (VBD found)
        (SBAR (IN that)
          (S
            (NP
              (ADJP (RB even) (JJ old))
              (NNP Diamond))
            (VP (VBD was) (RB not)
              (VP (VBN awake)
                (ADVP (RB yet))
                (, ,)
                (UCP
                  (PP (IN for)
                    (NP (PRP he)))
                  (, ,)
                  (CONJP (RB as) (RB well) (IN as))
                  (NP (JJ young) (NNP Diamond)))
                (, ,)
                (S
                  (ADVP (RB always))
                  (VP (VBN got)
                    (PRT (RP up))
                    (NP
                      (NP (DT the) (NN moment))
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (VBD woke)))))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB now))
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBG lying)
          (ADVP
            (ADVP (RB as) (JJ flat))
            (SBAR (IN as)
              (S
                (NP (DT a) (NN horse))
                (VP (MD could)
                  (VP (VB lie)
                    (PP (IN upon)
                      (NP
                        (NP (PRP$ his) (JJ nice) (JJ trim) (NN bed))
                        (PP (IN of)
                          (NP (NN straw)))))))))))))
    (. .)))

advmod(found-3, There-1)
nsubj(found-3, he-2)
root(ROOT-0, found-3)
mark(awake-10, that-4)
advmod(old-6, even-5)
amod(Diamond-7, old-6)
nsubjpass(awake-10, Diamond-7)
auxpass(awake-10, was-8)
neg(awake-10, not-9)
ccomp(found-3, awake-10)
advmod(awake-10, yet-11)
dep(awake-10, for-13)
pobj(for-13, he-14)
amod(Diamond-20, young-19)
dep(awake-10, Diamond-20)
conj_and(for-13, Diamond-20)
advmod(got-23, always-22)
dep(awake-10, got-23)
prt(got-23, up-24)
det(moment-26, the-25)
dobj(got-23, moment-26)
nsubj(woke-28, he-27)
rcmod(moment-26, woke-28)
advmod(lying-34, now-31)
nsubj(lying-34, he-32)
aux(lying-34, was-33)
conj_and(found-3, lying-34)
advmod(flat-36, as-35)
advmod(lying-34, flat-36)
mark(lie-41, as-37)
det(horse-39, a-38)
nsubj(lie-41, horse-39)
aux(lie-41, could-40)
advcl(flat-36, lie-41)
ccomp(flat-36, lie-41)
poss(bed-46, his-43)
amod(bed-46, nice-44)
amod(bed-46, trim-45)
prep_upon(lie-41, bed-46)
prep_of(bed-46, straw-48)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB give)
          (NP (JJ old) (NNP Diamond))
          (NP (DT a) (NN surprise)))))
    (, ,) ('' '')
    (VP (VBD thought)
      (NP (DT the) (NN boy)))
    (: ;)
    (S (CC and)
      (S
        (S
          (VP (VBG creeping)
            (ADVP (RB up) (RB very))
            (ADVP (RB softly))
            (, ,)
            (SBAR (IN before)
              (S
                (NP (DT the) (NN horse))
                (VP (VBD knew))))))
        (, ,)
        (NP (PRP he))
        (VP (VBD was)
          (VP (VBN astride)
            (PP (IN of)
              (NP (PRP$ his) (NN back)))))))
    (. .)))

nsubj(give-4, I-2)
aux(give-4, 'll-3)
ccomp(thought-11, give-4)
amod(Diamond-6, old-5)
iobj(give-4, Diamond-6)
det(surprise-8, a-7)
dobj(give-4, surprise-8)
root(ROOT-0, thought-11)
det(boy-13, the-12)
dobj(thought-11, boy-13)
cc(astride-28, and-15)
vmod(astride-28, creeping-16)
advmod(very-18, up-17)
advmod(creeping-16, very-18)
advmod(creeping-16, softly-19)
mark(knew-24, before-21)
det(horse-23, the-22)
nsubj(knew-24, horse-23)
advcl(creeping-16, knew-24)
nsubjpass(astride-28, he-26)
auxpass(astride-28, was-27)
parataxis(thought-11, astride-28)
poss(back-31, his-30)
prep_of(astride-28, back-31)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (JJ young) (NNP Diamond) (POS 's))
          (NN turn)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (JJR more))
                  (PP (IN of)
                    (NP (DT a) (NN surprise))))
                (SBAR (IN than)
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN expected)))))))))))
    (: ;)
    (S
      (PP (IN for)
        (PP (IN as) (IN with)
          (NP
            (NP (DT an) (NN earthquake))
            (, ,)
            (PP (IN with)
              (NP
                (NP (DT a) (NN rumbling))
                (CC and)
                (NP (DT a) (JJ rocking) (NN hither)
                  (CC and)
                  (NN thither))))
            (, ,)
            (NP
              (NP (DT a) (VBG sprawling))
              (PP (IN of)
                (NP (NNS legs)
                  (CC and)
                  (NN heaving)))
              (PP (RB as) (IN of)
                (NP (JJ many) (NNS backs)))))))
      (, ,)
      (NP (JJ young) (NNP Diamond))
      (VP (VBD found)
        (SBAR
          (S
            (NP (PRP himself))
            (VP (VBD hoisted)
              (PRT (RP up))
              (PP (IN in)
                (NP (DT the) (NN air)))
              (, ,)
              (PP (IN with)
                (NP
                  (NP (DT both) (NNS hands))
                  (VP (VBN twisted)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN horse) (POS 's))
                        (NN mane)))))))))))
    (. .)))

advmod(turn-7, Then-1)
nsubj(turn-7, it-2)
cop(turn-7, was-3)
amod(Diamond-5, young-4)
poss(turn-7, Diamond-5)
root(ROOT-0, turn-7)
aux(have-9, to-8)
vmod(turn-7, have-9)
dobj(have-9, more-10)
det(surprise-13, a-12)
prep_of(more-10, surprise-13)
mark(expected-17, than-14)
nsubj(expected-17, he-15)
aux(expected-17, had-16)
advcl(have-9, expected-17)
prep(found-48, for-19)
dep(with-21, as-20)
pcomp(for-19, with-21)
det(earthquake-23, an-22)
pobj(with-21, earthquake-23)
det(rumbling-27, a-26)
prep_with(earthquake-23, rumbling-27)
det(hither-31, a-29)
amod(hither-31, rocking-30)
prep_with(earthquake-23, hither-31)
conj_and(rumbling-27, hither-31)
conj_and(rumbling-27, thither-33)
conj_and(hither-31, thither-33)
appos(earthquake-23, a-35)
amod(a-35, sprawling-36)
prep_of(a-35, legs-38)
prep_of(a-35, heaving-40)
conj_and(legs-38, heaving-40)
amod(backs-44, many-43)
prep_as_of(a-35, backs-44)
amod(Diamond-47, young-46)
nsubj(found-48, Diamond-47)
parataxis(turn-7, found-48)
nsubj(hoisted-50, himself-49)
ccomp(found-48, hoisted-50)
prt(hoisted-50, up-51)
det(air-54, the-53)
prep_in(hoisted-50, air-54)
det(hands-58, both-57)
prep_with(hoisted-50, hands-58)
vmod(hands-58, twisted-59)
det(horse-62, the-61)
poss(mane-64, horse-62)
prep_in(twisted-59, mane-64)

(ROOT
  (S
    (S
      (NP (DT The) (JJ next) (JJ instant) (JJ old) (NN Diamond))
      (VP (VBD lashed)
        (PRT (RP out))
        (PP (IN with)
          (NP (CC both)
            (PRP$ his)
            (ADJP (JJ hind))
            (NNS legs)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG giving)
          (NP
            (NP (CD one) (NN cry))
            (PP (IN of)
              (NP (NN terror))))
          (NP
            (NP (JJ young) (NNP Diamond))
            (VP (VBN found)
              (NP (PRP himself))
              (S
                (VP (VBG lying)
                  (PP (IN on)
                    (NP (PRP$ his) (NN neck)))))
              (, ,)
              (PP (IN with)
                (NP (PRP$ his) (NNS arms)))))))
      (VP
        (ADVP (RB as) (RB far))
        (VBP round)
        (NP (PRP it))
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP (MD would)
              (VP (VB go)))))))
    (. .)))

det(Diamond-5, The-1)
amod(Diamond-5, next-2)
amod(Diamond-5, instant-3)
amod(Diamond-5, old-4)
nsubj(lashed-6, Diamond-5)
root(ROOT-0, lashed-6)
prt(lashed-6, out-7)
dep(legs-12, both-9)
poss(legs-12, his-10)
amod(legs-12, hind-11)
prep_with(lashed-6, legs-12)
csubj(round-34, giving-15)
num(cry-17, one-16)
iobj(giving-15, cry-17)
prep_of(cry-17, terror-19)
amod(Diamond-21, young-20)
dobj(giving-15, Diamond-21)
vmod(Diamond-21, found-22)
dobj(found-22, himself-23)
xcomp(found-22, lying-24)
poss(neck-27, his-26)
prep_on(lying-24, neck-27)
poss(arms-31, his-30)
prep_with(found-22, arms-31)
advmod(far-33, as-32)
advmod(round-34, far-33)
conj_and(lashed-6, round-34)
dobj(round-34, it-35)
mark(go-39, as-36)
nsubj(go-39, they-37)
aux(go-39, would-38)
advcl(round-34, go-39)

(ROOT
  (S (CC But)
    (ADVP (RB then))
    (NP (DT the) (NN horse))
    (VP (VBD stood)
      (PP (IN as)
        (ADVP (RB still)))
      (PP (IN as)
        (NP (DT a) (NN stone)))
      (, ,)
      (SBAR (IN except) (IN that)
        (S
          (NP (PRP he))
          (VP (VBD lifted)
            (NP (PRP$ his) (NN head))
            (ADVP (RB gently) (RB up)
              (S
                (VP (TO to)
                  (VP (VB let)
                    (NP (DT the) (NN boy) (NN slip))
                    (PRT (RP down))
                    (PP (TO to)
                      (NP (PRP$ his) (NN back)))))))))))
    (. .)))

cc(stood-5, But-1)
advmod(stood-5, then-2)
det(horse-4, the-3)
nsubj(stood-5, horse-4)
root(ROOT-0, stood-5)
prep(stood-5, as-6)
pcomp(as-6, still-7)
det(stone-10, a-9)
prep_as(stood-5, stone-10)
mark(lifted-15, except-12)
mark(lifted-15, that-13)
nsubj(lifted-15, he-14)
advcl(stood-5, lifted-15)
poss(head-17, his-16)
dobj(lifted-15, head-17)
advmod(up-19, gently-18)
advmod(lifted-15, up-19)
aux(let-21, to-20)
dep(up-19, let-21)
det(slip-24, the-22)
nn(slip-24, boy-23)
dobj(let-21, slip-24)
prt(let-21, down-25)
poss(back-28, his-27)
prep_to(let-21, back-28)

(ROOT
  (S
    (S
      (PP (IN For)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD heard)
              (NP
                (NP (JJ young) (NNP Diamond) (POS 's))
                (NN cry))))))
      (NP (PRP he))
      (VP (VBD knew)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD was)
              (ADJP (NN nothing))
              (S
                (VP (TO to)
                  (VP (VB kick)
                    (PRT (RP about)))))
              (: ;)
              (SBAR (IN for)
                (S
                  (NP (JJ young) (NNP Diamond))
                  (VP (VBD was)
                    (NP (DT a) (JJ good) (NN boy))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (JJ old) (NNP Diamond))
        (VP (VBD was)
          (NP (DT a) (JJ good) (NN horse))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN one))
        (VP (VBD was)
          (ADVP (DT all) (RB right))
          (PP (IN on)
            (NP
              (NP (DT the) (NN back))
              (PP (IN of)
                (NP (DT the) (JJ other))))))))
    (. .)))

dep(knew-10, For-1)
advmod(heard-4, when-2)
nsubj(heard-4, he-3)
pcomp(For-1, heard-4)
amod(Diamond-6, young-5)
poss(cry-8, Diamond-6)
dobj(heard-4, cry-8)
nsubj(knew-10, he-9)
root(ROOT-0, knew-10)
mark(was-13, that-11)
expl(was-13, there-12)
ccomp(knew-10, was-13)
acomp(was-13, nothing-14)
aux(kick-16, to-15)
xcomp(was-13, kick-16)
prt(kick-16, about-17)
mark(boy-25, for-19)
amod(Diamond-21, young-20)
nsubj(boy-25, Diamond-21)
cop(boy-25, was-22)
det(boy-25, a-23)
amod(boy-25, good-24)
advcl(was-13, boy-25)
parataxis(was-13, boy-25)
amod(Diamond-29, old-28)
nsubj(horse-33, Diamond-29)
cop(horse-33, was-30)
det(horse-33, a-31)
amod(horse-33, good-32)
conj_and(knew-10, horse-33)
det(one-37, the-36)
nsubj(was-38, one-37)
conj_and(knew-10, was-38)
conj_and(horse-33, was-38)
dep(right-40, all-39)
advmod(was-38, right-40)
det(back-43, the-42)
prep_on(was-38, back-43)
det(other-46, the-45)
prep_of(back-43, other-46)

(ROOT
  (S
    (S
      (ADVP (RB As) (RB soon)
        (SBAR (IN as)
          (S
            (NP (NNP Diamond))
            (VP (VBD had)
              (VP (VBN got)
                (S
                  (NP (PRP himself))
                  (ADJP (JJ comfortable)
                    (PP (IN on)
                      (NP (DT the) (NN saddle) (NN place))))))))))
      (, ,)
      (NP (DT the) (NN horse))
      (VP (VBD began)
        (S
          (VP (VBG pulling)
            (PP (IN at)
              (NP (DT the) (NN hay)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN boy))
      (VP (VBD began)
        (S
          (VP (VBG thinking)))))
    (. .)))

advmod(soon-2, As-1)
advmod(began-16, soon-2)
mark(got-6, as-3)
nsubj(got-6, Diamond-4)
aux(got-6, had-5)
ccomp(soon-2, got-6)
nsubj(comfortable-8, himself-7)
xcomp(got-6, comfortable-8)
det(place-12, the-10)
nn(place-12, saddle-11)
prep_on(comfortable-8, place-12)
det(horse-15, the-14)
nsubj(began-16, horse-15)
root(ROOT-0, began-16)
xcomp(began-16, pulling-17)
det(hay-20, the-19)
prep_at(pulling-17, hay-20)
det(boy-24, the-23)
nsubj(began-25, boy-24)
conj_and(began-16, began-25)
xcomp(began-25, thinking-26)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (ADVP (RB never))
        (VP (VBN mounted)
          (S
            (VP (VBG Diamond)
              (NP (PRP himself))
              (ADVP (RB before)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RB never))
        (VP (VBN got)
          (PRT (RP off))
          (NP (PRP him))
          (PP (IN without)
            (S
              (VP (VBG being)
                (VP (VBN lifted)
                  (PRT (RP down)))))))))
    (. .)))

nsubj(mounted-4, He-1)
aux(mounted-4, had-2)
neg(mounted-4, never-3)
root(ROOT-0, mounted-4)
xcomp(mounted-4, Diamond-5)
dobj(Diamond-5, himself-6)
advmod(Diamond-5, before-7)
nsubj(got-13, he-10)
aux(got-13, had-11)
neg(got-13, never-12)
conj_and(mounted-4, got-13)
prt(got-13, off-14)
dobj(got-13, him-15)
auxpass(lifted-18, being-17)
prepc_without(got-13, lifted-18)
prt(lifted-18, down-19)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBD sat) (, ,)
      (SBAR (IN while)
        (S
          (NP (DT the) (NN horse))
          (VP (VBD ate) (, ,)
            (S
              (VP (VBG wondering)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (S
                        (VP (TO to)
                          (VP (VB reach)
                            (NP (DT the) (NN ground))))))))))))))
    (. .)))

dep(sat-3, So-1)
nsubj(sat-3, he-2)
root(ROOT-0, sat-3)
mark(ate-8, while-5)
det(horse-7, the-6)
nsubj(ate-8, horse-7)
advcl(sat-3, ate-8)
xcomp(ate-8, wondering-10)
advmod(was-13, how-11)
nsubj(was-13, he-12)
nsubj(reach-15, he-12)
ccomp(wondering-10, was-13)
aux(reach-15, to-14)
xcomp(was-13, reach-15)
det(ground-17, the-16)
dobj(reach-15, ground-17)

(ROOT
  (S
    (S (CC But)
      (SBAR (IN while)
        (S
          (NP (PRP he))
          (VP (VBD meditated))))
      (, ,)
      (NP (PRP$ his) (NN mother))
      (VP (VBD woke)))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ her) (JJ first) (NN thought))
      (VP (VBD was)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP$ her) (NN boy)))))))
    (. .)))

mark(meditated-4, while-2)
nsubj(meditated-4, he-3)
advcl(woke-8, meditated-4)
poss(mother-7, his-6)
nsubj(woke-8, mother-7)
root(ROOT-0, woke-8)
poss(thought-13, her-11)
amod(thought-13, first-12)
nsubj(was-14, thought-13)
nsubj(see-16, thought-13)
conj_and(woke-8, was-14)
aux(see-16, to-15)
xcomp(was-14, see-16)
poss(boy-18, her-17)
dobj(see-16, boy-18)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD had)
        (VP (VBN visited)
          (NP (PRP him))
          (ADVP (RB twice))
          (PP (IN during)
            (NP (DT the) (NN night)))))
      (, ,)
      (CC and)
      (VP (VBD found)
        (S
          (NP (PRP him))
          (VP (VBG sleeping)
            (ADVP (RB quietly))))))
    (. .)))

nsubj(visited-3, She-1)
nsubj(found-11, She-1)
aux(visited-3, had-2)
root(ROOT-0, visited-3)
dobj(visited-3, him-4)
advmod(visited-3, twice-5)
det(night-8, the-7)
prep_during(visited-3, night-8)
conj_and(visited-3, found-11)
nsubj(sleeping-13, him-12)
dep(found-11, sleeping-13)
advmod(sleeping-13, quietly-14)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP$ his) (NN bed))
      (VP (VBD was)
        (ADJP (JJ empty))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (ADJP (JJ frightened))))
    (. .)))

advmod(empty-5, Now-1)
poss(bed-3, his-2)
nsubj(empty-5, bed-3)
cop(empty-5, was-4)
root(ROOT-0, empty-5)
nsubj(frightened-10, she-8)
cop(frightened-10, was-9)
conj_and(empty-5, frightened-10)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Diamond))
    (. !)))

root(ROOT-0, Diamond-2)

(ROOT
  (INTJ (UH Diamond) (. !)))

root(ROOT-0, Diamond-1)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBP are)
      (NP
        (NP (PRP you))
        (, ,)
        (NP (NNP Diamond))))
    (. ?) ('' '')))

advmod(are-2, Where-1)
root(ROOT-0, are-2)
nsubj(are-2, you-3)
appos(you-3, Diamond-5)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD called)
      (PRT (RP out)))
    (. .)))

nsubj(called-2, she-1)
root(ROOT-0, called-2)
prt(called-2, out-3)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD turned)
      (NP (PRP$ his) (NN head))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP he))
          (VP (VBD sat)
            (PP (IN like)
              (NP
                (NP (DT a) (NN knight))
                (PP (IN on)
                  (NP
                    (NP (PRP$ his) (NN steed))
                    (PP (IN in)
                      (NP
                        (NP (JJ enchanted) (NN stall))
                        (, ,)
                        (CC and)
                        (NP (JJ cried) (NNS aloud))
                        (, ,)))))))
            (: --) (`` ``)
            (FRAG
              (ADVP (RB Here))
              (, ,)
              (NP (NN mother))
              (. !) ('' ''))))))))

nsubj(turned-2, Diamond-1)
root(ROOT-0, turned-2)
poss(head-4, his-3)
dobj(turned-2, head-4)
advmod(sat-7, where-5)
nsubj(sat-7, he-6)
advcl(turned-2, sat-7)
det(knight-10, a-9)
prep_like(sat-7, knight-10)
poss(steed-13, his-12)
prep_on(knight-10, steed-13)
amod(stall-16, enchanted-15)
prep_in(steed-13, stall-16)
amod(aloud-20, cried-19)
prep_in(steed-13, aloud-20)
conj_and(stall-16, aloud-20)
dep(mother-26, Here-24)
dep(sat-7, mother-26)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WRB Where))
    (SQ
      (VP (, ,)
        (S
          (VP (VBG Diamond)))))
    (. ?) ('' '')))

nsubj(Diamond-4, Where-2)
root(ROOT-0, Diamond-4)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD returned))
    (. .)))

nsubj(returned-2, she-1)
root(ROOT-0, returned-2)

(ROOT
  (S (`` ``)
    (NP
      (NP
        (NP (RB Here))
        (, ,)
        (NP (NN mother))
        (, ,))
      (PP (IN on)
        (NP (NNP Diamond))))
    (VP (VBZ 's)
      (ADVP (RB back)))
    (. .) ('' '')))

nsubj('s-8, Here-2)
appos(Here-2, mother-4)
prep_on(Here-2, Diamond-7)
root(ROOT-0, 's-8)
advmod('s-8, back-9)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD came)
      (SBAR
        (S
          (S
            (VP
              (VP (VBG running)
                (PP (TO to)
                  (NP (DT the) (NN ladder))))
              (, ,)
              (CC and)
              (VP (VBG peeping)
                (PRT (RP down)))))
          (, ,)
          (VP (VBD saw)
            (NP (PRP him))
            (ADVP (RB aloft))
            (PP (IN on)
              (NP (DT the) (JJ great) (NN horse)))))))
    (. .)))

nsubj(came-2, She-1)
root(ROOT-0, came-2)
dep(saw-12, running-3)
det(ladder-6, the-5)
prep_to(running-3, ladder-6)
conj_and(running-3, peeping-9)
dep(saw-12, peeping-9)
prt(peeping-9, down-10)
ccomp(came-2, saw-12)
dobj(saw-12, him-13)
advmod(saw-12, aloft-14)
det(horse-18, the-16)
amod(horse-18, great-17)
prep_on(saw-12, horse-18)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Come)
        (PRT (RP down))))
    (, ,)
    (NP (NNP Diamond))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

ccomp(said-9, Come-2)
prt(Come-2, down-3)
nsubj(said-9, Diamond-5)
nsubj(said-9, she-8)
root(ROOT-0, said-9)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Diamond))
    (. .)))

nsubj(ca-3, I-2)
ccomp(answered-7, ca-3)
neg(ca-3, n't-4)
root(ROOT-0, answered-7)
nsubj(answered-7, Diamond-8)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB get)
        (PRT (RP up))))
    (. ?) ('' '')))

advmod(get-5, How-2)
aux(get-5, did-3)
nsubj(get-5, you-4)
root(ROOT-0, get-5)
prt(get-5, up-6)

(ROOT
  (S
    (VP (VBD asked)
      (NP (PRP$ his) (NN mother)))
    (. .)))

root(ROOT-0, asked-1)
poss(mother-3, his-2)
dobj(asked-1, mother-3)

(ROOT
  (S
    (S
      (S (`` ``)
        (VP (VB Quite)
          (ADVP (RB easily)))
        (, ,) ('' ''))
      (VP (VBD answered)
        (NP (PRP he))))
    (: ;) (`` ``)
    (S
      (S (CC but)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBD got)
              (PRT (RP up)))))
        (, ,)
        (NP (NNP Diamond))
        (VP (MD would)
          (VP (VB get)
            (ADVP (RB up) (RB too)))))
      (, ,)
      (CC and)
      (RB so)
      (S
        (ADVP (RB here))
        (NP (PRP I))
        (VP (VBP am))))
    (. .) ('' '')))

csubj(answered-6, Quite-2)
advmod(Quite-2, easily-3)
root(ROOT-0, answered-6)
dobj(answered-6, he-7)
advmod(got-13, when-11)
nsubj(got-13, I-12)
advcl(get-18, got-13)
prt(got-13, up-14)
nsubj(get-18, Diamond-16)
aux(get-18, would-17)
parataxis(answered-6, get-18)
advmod(too-20, up-19)
advmod(get-18, too-20)
advmod(am-26, here-24)
nsubj(am-26, I-25)
parataxis(answered-6, am-26)
conj_and(get-18, am-26)

(ROOT
  (S
    (NP (PRP$ His) (NN mother))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP
              (VP (VBN been)
                (VP (VBG walking)
                  (PP (IN in)
                    (NP (PRP$ his) (NN sleep)))
                  (ADVP (RB again))))
              (, ,)
              (CC and)
              (VP (VBN hurried)
                (PRT (RP down))
                (NP (DT the) (NN ladder))))))))
    (. .)))

poss(mother-2, His-1)
nsubj(thought-3, mother-2)
root(ROOT-0, thought-3)
nsubj(walking-7, he-4)
nsubj(hurried-14, he-4)
aux(walking-7, had-5)
aux(walking-7, been-6)
ccomp(thought-3, walking-7)
poss(sleep-10, his-9)
prep_in(walking-7, sleep-10)
advmod(walking-7, again-11)
ccomp(thought-3, hurried-14)
conj_and(walking-7, hurried-14)
prt(hurried-14, down-15)
det(ladder-17, the-16)
dobj(hurried-14, ladder-17)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD did)
        (ADVP (RB not) (RB much))
        (PP (IN like)
          (S
            (VP (VBG going)
              (PRT (RP up))
              (PP (TO to)
                (NP (DT the) (NN horse))))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP she))
            (VP (VBD had) (RB not)
              (VP (VBN been)
                (VP (VBN used)
                  (PP (TO to)
                    (NP (NNS horses))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP she))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN gone)
            (PP (IN into)
              (NP
                (NP (DT a) (NN lion) (POS 's))
                (NN den)))
            (, ,)
            (S (RB not)
              (VP (TO to)
                (VP (VB say)
                  (NP
                    (NP (DT a) (NN horse) (POS 's))
                    (NN stall))
                  (, ,)
                  (S
                    (VP (TO to)
                      (VP (VB help)
                        (NP (PRP$ her) (NN boy))))))))))))
    (. .)))

nsubj(did-2, She-1)
root(ROOT-0, did-2)
dep(much-4, not-3)
advmod(did-2, much-4)
prepc_like(did-2, going-6)
prt(going-6, up-7)
det(horse-10, the-9)
prep_to(going-6, horse-10)
mark(used-17, for-12)
nsubjpass(used-17, she-13)
aux(used-17, had-14)
neg(used-17, not-15)
auxpass(used-17, been-16)
advcl(did-2, used-17)
prep_to(used-17, horses-19)
nsubj(gone-25, she-22)
nsubj(say-34, she-22)
aux(gone-25, would-23)
aux(gone-25, have-24)
conj_but(did-2, gone-25)
det(lion-28, a-27)
poss(den-30, lion-28)
prep_into(gone-25, den-30)
neg(say-34, not-32)
aux(say-34, to-33)
xcomp(gone-25, say-34)
det(horse-36, a-35)
poss(stall-38, horse-36)
dobj(say-34, stall-38)
aux(help-41, to-40)
vmod(say-34, help-41)
poss(boy-43, her-42)
dobj(help-41, boy-43)

(ROOT
  (S (IN So)
    (NP (PRP she))
    (VP
      (VP (VBD went)
        (CC and)
        (VBD lifted)
        (NP (PRP him))
        (PP (IN off)
          (NP
            (NP (NNP Diamond) (POS 's))
            (NN back))))
      (, ,)
      (CC and)
      (VP (VBD felt)
        (NP (NN braver))
        (NP (PDT all) (PRP$ her) (NN life))
        (PP (IN after))))
    (. .)))

dep(went-3, So-1)
nsubj(went-3, she-2)
nsubj(lifted-5, she-2)
nsubj(felt-13, she-2)
root(ROOT-0, went-3)
conj_and(went-3, lifted-5)
dobj(went-3, him-6)
poss(back-10, Diamond-8)
prep_off(went-3, back-10)
conj_and(went-3, felt-13)
iobj(felt-13, braver-14)
predet(life-17, all-15)
poss(life-17, her-16)
dobj(felt-13, life-17)
prep(felt-13, after-18)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD carried)
        (NP (PRP him))
        (PP (IN in)
          (NP (PRP$ her) (NNS arms)))
        (PP (RP up)
          (PP (TO to)
            (NP (PRP$ her) (NN room))))))
    (: ;)
    (S (CC but)
      (, ,)
      (S
        (ADJP (JJ afraid)
          (PP (IN of)
            (S
              (VP (VBG frightening)
                (NP (PRP him))
                (PP (IN at)
                  (NP
                    (NP (PRP$ his) (JJ own) (NN sleep-walking))
                    (, ,)
                    (SBAR (IN as)
                      (S
                        (NP (PRP she))
                        (VP (VBD supposed)
                          (NP (PRP it))))))))))))
      (, ,)
      (VP (VBD said)
        (NP (NN nothing))
        (NP (RB about) (JJ last) (NN night))))
    (. .)))

nsubj(carried-2, She-1)
root(ROOT-0, carried-2)
dobj(carried-2, him-3)
poss(arms-6, her-5)
prep_in(carried-2, arms-6)
prep(carried-2, up-7)
poss(room-10, her-9)
prep_to(up-7, room-10)
cc(said-28, but-12)
dep(said-28, afraid-14)
prepc_of(afraid-14, frightening-16)
dobj(frightening-16, him-17)
poss(sleep-walking-21, his-19)
amod(sleep-walking-21, own-20)
prep_at(frightening-16, sleep-walking-21)
mark(supposed-25, as-23)
nsubj(supposed-25, she-24)
dep(sleep-walking-21, supposed-25)
dobj(supposed-25, it-26)
parataxis(carried-2, said-28)
dobj(said-28, nothing-29)
advmod(night-32, about-30)
amod(night-32, last-31)
tmod(said-28, night-32)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (DT the) (JJ next) (NN day))
        (VP (VBD was)
          (ADJP (RP over)))))
    (, ,)
    (NP (NNP Diamond))
    (VP (VBD had)
      (ADVP (RB almost))
      (VP (VBN concluded)
        (NP
          (NP (DT the) (JJ whole) (NN adventure))
          (NP (DT a) (NN dream)))))
    (. .)))

mark(over-6, Before-1)
det(day-4, the-2)
amod(day-4, next-3)
nsubj(over-6, day-4)
cop(over-6, was-5)
advcl(concluded-11, over-6)
nsubj(concluded-11, Diamond-8)
aux(concluded-11, had-9)
advmod(concluded-11, almost-10)
root(ROOT-0, concluded-11)
det(adventure-14, the-12)
amod(adventure-14, whole-13)
dobj(concluded-11, adventure-14)
iobj(concluded-11, adventure-14)
det(dream-16, a-15)
dep(adventure-14, dream-16)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (DT a) (NN week)))
      (NP (PRP$ his) (NN mother))
      (VP (VBD watched)
        (NP (PRP him))
        (ADVP (RB very) (RB carefully))))
    (: --)
    (S
      (VP
        (VP (VBG going)
          (PP (IN into)
            (NP (DT the) (NN loft)
              (QP (JJ several) (NNS times))))
          (NP (DT a) (NN night)))
        (PRN (: --)
          (ADVP
            (ADVP (RB as) (RB often))
            (, ,)
            (PP (IN in)
              (NP (NN fact)))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP she))
                (VP (VBD woke))))))))
    (. .)))

det(week-3, a-2)
prep_for(watched-6, week-3)
poss(mother-5, his-4)
nsubj(watched-6, mother-5)
root(ROOT-0, watched-6)
dobj(watched-6, him-7)
advmod(carefully-9, very-8)
advmod(watched-6, carefully-9)
parataxis(watched-6, going-11)
det(loft-14, the-13)
prep_into(going-11, loft-14)
quantmod(times-16, several-15)
num(loft-14, times-16)
det(night-18, a-17)
tmod(going-11, night-18)
advmod(often-21, as-20)
dep(going-11, often-21)
prep_in(often-21, fact-24)
mark(woke-28, as-26)
nsubj(woke-28, she-27)
advcl(often-21, woke-28)
ccomp(often-21, woke-28)

(ROOT
  (S
    (NP (DT Every) (NN time))
    (NP (PRP she))
    (VP (VBD found)
      (S
        (NP (PRP him))
        (ADVP (RB fast))
        (ADJP (RB asleep))))
    (. .)))

det(time-2, Every-1)
nsubj(found-4, time-2)
nsubj(found-4, she-3)
root(ROOT-0, found-4)
dep(asleep-7, him-5)
advmod(asleep-7, fast-6)
dep(found-4, asleep-7)

(ROOT
  (S
    (NP (PDT All) (DT that) (NN week))
    (NP (PRP it))
    (VP (VBD was)
      (NP (JJ hard) (NN weather)))
    (. .)))

predet(week-3, All-1)
det(week-3, that-2)
tmod(weather-7, week-3)
nsubj(weather-7, it-4)
cop(weather-7, was-5)
amod(weather-7, hard-6)
root(ROOT-0, weather-7)

(ROOT
  (S
    (NP (DT The) (NN grass))
    (VP (VBD showed)
      (ADJP (JJ white)
        (PP (IN in)
          (NP (DT the) (NN morning))))
      (PP (IN with)
        (NP
          (NP (DT the) (NN hoar-frost))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBG clung)
                (PP (IN like)
                  (NP (JJ tiny) (NNS comfits)))
                (PP (TO to)
                  (NP (DT every) (NN blade)))))))))
    (. .)))

det(grass-2, The-1)
nsubj(showed-3, grass-2)
root(ROOT-0, showed-3)
acomp(showed-3, white-4)
det(morning-7, the-6)
prep_in(white-4, morning-7)
det(hoar-frost-10, the-9)
prep_with(showed-3, hoar-frost-10)
nsubj(clung-12, hoar-frost-10)
rcmod(hoar-frost-10, clung-12)
amod(comfits-15, tiny-14)
prep_like(clung-12, comfits-15)
det(blade-18, every-17)
prep_to(clung-12, blade-18)

(ROOT
  (S (CC And)
    (SBAR (IN as)
      (S
        (S
          (NP
            (NP (NNP Diamond) (POS 's))
            (NNS shoes))
          (VP (VBD were) (RB not)
            (ADJP (JJ good))))
        (, ,)
        (CC and)
        (S
          (NP (PRP$ his) (NN mother))
          (VP (VBD had) (RB not)
            (ADVP (RB quite))
            (VP (VBN saved)
              (PRT (RP up))
              (NP (JJ enough) (NN money))
              (S
                (VP (TO to)
                  (VP (VB get)
                    (NP (PRP him))
                    (NP
                      (NP (DT the) (JJ new) (NN pair))
                      (SBAR
                        (S
                          (NP (PRP she))
                          (ADVP (RB so) (RB much))
                          (VP (VBD wanted)
                            (PP (IN for)
                              (NP (PRP him)))))))))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD would) (RB not)
      (VP (VB let)
        (S
          (NP (PRP him))
          (VP (VB run)
            (PRT (RP out))))))
    (. .)))

cc(let-36, And-1)
mark(good-8, as-2)
poss(shoes-5, Diamond-3)
nsubj(good-8, shoes-5)
cop(good-8, were-6)
neg(good-8, not-7)
advcl(let-36, good-8)
poss(mother-12, his-11)
nsubj(saved-16, mother-12)
aux(saved-16, had-13)
neg(saved-16, not-14)
advmod(saved-16, quite-15)
conj_and(good-8, saved-16)
advcl(let-36, saved-16)
prt(saved-16, up-17)
amod(money-19, enough-18)
dobj(saved-16, money-19)
aux(get-21, to-20)
vmod(saved-16, get-21)
iobj(get-21, him-22)
det(pair-25, the-23)
amod(pair-25, new-24)
dobj(get-21, pair-25)
nsubj(wanted-29, she-26)
advmod(much-28, so-27)
advmod(wanted-29, much-28)
rcmod(pair-25, wanted-29)
prep_for(wanted-29, him-31)
nsubj(let-36, she-33)
aux(let-36, would-34)
neg(let-36, not-35)
root(ROOT-0, let-36)
nsubj(run-38, him-37)
ccomp(let-36, run-38)
prt(run-38, out-39)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP (VBD played)
          (NP (PDT all) (PRP$ his) (NNS games))
          (PRT (RP over)
            (CC and)
            (RP over))
          (ADVP (RB indoors))))
      (, ,)
      (ADVP (RB especially))
      (S
        (NP
          (NP (DT that))
          (PP (IN of)
            (S
              (VP (VBG driving)
                (NP (CD two) (NNS chairs))))))
        (VP (VBD harnessed)
          (PP (TO to)
            (NP
              (NP (DT the) (NN baby) (POS 's))
              (NN cradle))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP they))
          (VP (VBD did) (RB not)
            (VP (VB go)
              (ADVP (RB very) (RB fast))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD went)
        (ADVP
          (ADVP (RB as) (RB fast))
          (SBAR (IN as)
            (S
              (VP (MD could)
                (VP (VB be)
                  (VP (VBN expected)
                    (PP (IN of)
                      (NP
                        (NP (DT the) (JJS best) (NNS chairs))
                        (PP (IN in)
                          (NP (DT the) (NN world)))))
                    (, ,)
                    (SBAR (IN although)
                      (S
                        (NP
                          (NP (CD one))
                          (PP (IN of)
                            (NP (PRP them))))
                        (VP (VBD had)
                          (NP
                            (NP
                              (QP (RB only) (CD three))
                              (NNS legs))
                            (, ,)
                            (CC and)
                            (NP (DT the) (JJ other)
                              (QP (RB only) (PDT half) (DT a))))
                          (ADVP (RB back)))))))))))))
    (. .)))

nsubj(played-2, He-1)
root(ROOT-0, played-2)
predet(games-5, all-3)
poss(games-5, his-4)
dobj(played-2, games-5)
prt(played-2, over-6)
cc(over-6, and-7)
dep(over-6, over-8)
advmod(played-2, indoors-9)
advmod(harnessed-17, especially-11)
nsubj(harnessed-17, that-12)
prepc_of(that-12, driving-14)
num(chairs-16, two-15)
dobj(driving-14, chairs-16)
parataxis(played-2, harnessed-17)
det(baby-20, the-19)
poss(cradle-22, baby-20)
prep_to(harnessed-17, cradle-22)
mark(go-29, if-25)
nsubj(go-29, they-26)
aux(go-29, did-27)
neg(go-29, not-28)
advcl(went-34, go-29)
advmod(fast-31, very-30)
advmod(go-29, fast-31)
nsubj(went-34, they-33)
conj_and(played-2, went-34)
advmod(fast-36, as-35)
advmod(went-34, fast-36)
mark(expected-40, as-37)
aux(expected-40, could-38)
auxpass(expected-40, be-39)
advcl(fast-36, expected-40)
ccomp(fast-36, expected-40)
det(chairs-44, the-42)
amod(chairs-44, best-43)
prep_of(expected-40, chairs-44)
det(world-47, the-46)
prep_in(chairs-44, world-47)
mark(had-53, although-49)
nsubj(had-53, one-50)
prep_of(one-50, them-52)
advcl(expected-40, had-53)
quantmod(three-55, only-54)
num(legs-56, three-55)
dobj(had-53, legs-56)
det(half-62, the-59)
amod(half-62, other-60)
quantmod(half-62, only-61)
dobj(had-53, half-62)
conj_and(legs-56, half-62)
quantmod(half-62, a-63)
advmod(had-53, back-64)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (NP (PRP$ his) (NN mother))
    (VP
      (VP (VBD brought)
        (ADVP (RB home))
        (NP (PRP$ his) (JJ new) (NNS shoes)))
      (, ,)
      (CC and)
      (ADVP (DT no) (RBR sooner))
      (VP (VBD did)
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBP find)
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBD fitted)
                    (NP (PRP him))
                    (SBAR (IN than)
                      (S
                        (NP (PRP she))
                        (VP
                          (VP (VBD told)
                            (NP (PRP him))
                            (SBAR
                              (S
                                (NP (PRP he))
                                (VP (MD might)
                                  (VP (VB run)
                                    (PRT (RP out))
                                    (PP (IN in)
                                      (NP (DT the) (NN yard))))))))
                          (CC and)
                          (VP (VBP amuse)
                            (NP (PRP himself))
                            (PP (IN for)
                              (NP (DT an) (NN hour)))))))))))))))
    (. .)))

prep_at(brought-5, length-2)
poss(mother-4, his-3)
nsubj(brought-5, mother-4)
nsubj(did-14, mother-4)
root(ROOT-0, brought-5)
advmod(brought-5, home-6)
poss(shoes-9, his-7)
amod(shoes-9, new-8)
dobj(brought-5, shoes-9)
neg(sooner-13, no-12)
advmod(brought-5, sooner-13)
conj_and(brought-5, sooner-13)
conj_and(brought-5, did-14)
nsubj(find-16, she-15)
ccomp(did-14, find-16)
nsubj(fitted-18, they-17)
ccomp(find-16, fitted-18)
dobj(fitted-18, him-19)
mark(told-22, than-20)
nsubj(told-22, she-21)
nsubj(amuse-32, she-21)
advcl(fitted-18, told-22)
dobj(told-22, him-23)
nsubj(run-26, he-24)
aux(run-26, might-25)
dep(told-22, run-26)
prt(run-26, out-27)
det(yard-30, the-29)
prep_in(run-26, yard-30)
advcl(fitted-18, amuse-32)
conj_and(told-22, amuse-32)
dobj(amuse-32, himself-33)
det(hour-36, an-35)
prep_for(amuse-32, hour-36)

(ROOT
  (S
    (NP (DT The) (NN sun))
    (VP (VBD was)
      (VP (VBG going)
        (PRT (RP down))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD flew)
              (PP (IN from)
                (NP
                  (NP (DT the) (NN door))
                  (PP (IN like)
                    (NP (DT a) (NN bird)))))
              (PP (IN from)
                (NP (PRP$ its) (NN cage))))))))
    (. .)))

det(sun-2, The-1)
nsubj(going-4, sun-2)
aux(going-4, was-3)
root(ROOT-0, going-4)
prt(going-4, down-5)
advmod(flew-8, when-6)
nsubj(flew-8, he-7)
advcl(going-4, flew-8)
det(door-11, the-10)
prep_from(flew-8, door-11)
det(bird-14, a-13)
prep_like(door-11, bird-14)
poss(cage-17, its-16)
prep_from(flew-8, cage-17)

(ROOT
  (S
    (NP (PDT All) (DT the) (NN world))
    (VP (VBD was)
      (ADJP (JJ new)
        (PP (TO to)
          (NP (PRP him)))))
    (. .)))

predet(world-3, All-1)
det(world-3, the-2)
nsubj(new-5, world-3)
cop(new-5, was-4)
root(ROOT-0, new-5)
prep_to(new-5, him-7)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ great) (NN fire))
      (PP (IN of)
        (NP
          (NP (NN sunset))
          (VP (VBN burned)
            (PP (IN on)
              (NP
                (NP (DT the) (NN top))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN gate))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD led)
                          (PP (IN from)
                            (NP (DT the) (NNS stables)))
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NN house))
                              (: ;)
                              (PP (IN above)
                                (NP (DT the) (NN fire)))
                              (PP (IN in)
                                (NP (DT the) (NN sky))))))))))))))))
    (VP (VBD lay)
      (NP
        (NP (DT a) (JJ large) (NN lake))
        (PP (IN of)
          (NP (JJ green) (NN light))))
      (, ,)
      (PP (IN above)
        (NP
          (NP
            (NP (DT that))
            (NP (DT a) (JJ golden) (NN cloud)))
          (, ,)
          (CC and)
          (ADVP (IN over) (DT that))
          (NP
            (NP (DT the) (NN blue))
            (PP (IN of)
              (NP (DT the) (JJ wintry) (NNS heavens)))))))
    (. .)))

det(fire-3, A-1)
amod(fire-3, great-2)
nsubj(lay-28, fire-3)
prep_of(fire-3, sunset-5)
vmod(sunset-5, burned-6)
det(top-9, the-8)
prep_on(burned-6, top-9)
det(gate-12, the-11)
prep_of(top-9, gate-12)
nsubj(led-14, gate-12)
rcmod(gate-12, led-14)
det(stables-17, the-16)
prep_from(led-14, stables-17)
det(house-20, the-19)
prep_to(led-14, house-20)
det(fire-24, the-23)
prep_above(house-20, fire-24)
det(sky-27, the-26)
prep_in(house-20, sky-27)
root(ROOT-0, lay-28)
det(lake-31, a-29)
amod(lake-31, large-30)
dobj(lay-28, lake-31)
amod(light-34, green-33)
prep_of(lake-31, light-34)
prep_above(lay-28, that-37)
det(cloud-40, a-38)
amod(cloud-40, golden-39)
dep(that-37, cloud-40)
prep_above(lay-28, over-43)
advmod(that-37, over-43)
conj_and(that-37, over-43)
dep(over-43, that-44)
det(blue-46, the-45)
prep_above(lay-28, blue-46)
conj_and(that-37, blue-46)
det(heavens-50, the-48)
amod(heavens-50, wintry-49)
prep_of(blue-46, heavens-50)

(ROOT
  (S (CC And)
    (NP (NNP Diamond))
    (VP (VBD thought)
      (SBAR (IN that)
        (S (, ,)
          (ADVP (JJ next)
            (PP (TO to)
              (NP (PRP$ his) (JJ own) (NN home))))
          (, ,)
          (NP (PRP he))
          (VP (VBD had)
            (ADVP (RB never))
            (VP (VBN seen)
              (NP
                (NP (DT any) (NN place))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (MD would)
                      (VP (VB like)
                        (ADVP (RB so) (RB much))
                        (S
                          (VP (TO to)
                            (VP (VB live)
                              (PRT (RP in))
                              (PP (IN as)
                                (NP (DT that) (NN sky))))))))))))))))
    (. .)))

cc(thought-3, And-1)
nsubj(thought-3, Diamond-2)
root(ROOT-0, thought-3)
mark(seen-15, that-4)
poss(home-10, his-8)
amod(home-10, own-9)
prep_next_to(seen-15, home-10)
nsubj(seen-15, he-12)
aux(seen-15, had-13)
neg(seen-15, never-14)
ccomp(thought-3, seen-15)
det(place-17, any-16)
dobj(seen-15, place-17)
nsubj(like-20, he-18)
nsubj(live-24, he-18)
aux(like-20, would-19)
rcmod(place-17, like-20)
advmod(much-22, so-21)
advmod(like-20, much-22)
aux(live-24, to-23)
xcomp(like-20, live-24)
prt(live-24, in-25)
det(sky-28, that-27)
prep_as(live-24, sky-28)

(ROOT
  (S (IN For)
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (NP
        (NP (JJ fine) (NNS things))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP make)
              (NP
                (ADVP (NN home))
                (NP (DT a) (JJ nice) (NN place))
                (, ,)
                (CC but)
                (NP
                  (NP (PRP$ your) (NN mother))
                  (CC and)
                  (NP (PRP$ your) (NN father)))))))))
    (. .)))

dep(things-6, For-1)
nsubj(things-6, it-2)
cop(things-6, is-3)
neg(things-6, not-4)
amod(things-6, fine-5)
root(ROOT-0, things-6)
nsubj(make-8, things-6)
rcmod(things-6, make-8)
advmod(place-12, home-9)
det(place-12, a-10)
amod(place-12, nice-11)
dobj(make-8, place-12)
poss(mother-16, your-15)
dobj(make-8, mother-16)
conj_but(place-12, mother-16)
poss(father-19, your-18)
conj_but(place-12, father-19)
conj_and(mother-16, father-19)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (PRP he))
          (VP (VBD was)
            (VP (VBG looking)
              (PP (IN at)
                (NP (DT the) (JJ lovely) (NNS colours)))))))
      (, ,)
      (NP (DT the) (NNS gates))
      (VP (VBD were)
        (VP (VBN thrown)
          (S
            (ADJP (JJ open))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (JJ old) (NNP Diamond))
          (CC and)
          (NP (PRP$ his) (NN friend)))
        (PP (IN in)
          (NP (DT the) (NN carriage)))
        (, ,)
        (VP (VBG dancing)
          (PP (IN with)
            (NP (NN impatience)))
          (S
            (VP (TO to)
              (VP (VB get)
                (PP (IN at)
                  (NP
                    (NP (PRP$ their) (NNS stalls))
                    (CC and)
                    (NP (PRP$ their) (NNS oats))))))))))
    (. .)))

mark(looking-4, As-1)
nsubj(looking-4, he-2)
aux(looking-4, was-3)
advcl(thrown-13, looking-4)
det(colours-8, the-6)
amod(colours-8, lovely-7)
prep_at(looking-4, colours-8)
det(gates-11, the-10)
nsubjpass(thrown-13, gates-11)
auxpass(thrown-13, were-12)
root(ROOT-0, thrown-13)
xcomp(thrown-13, open-14)
expl(dancing-28, there-17)
cop(dancing-28, was-18)
amod(Diamond-20, old-19)
nsubj(dancing-28, Diamond-20)
nsubj(get-32, Diamond-20)
poss(friend-23, his-22)
conj_and(Diamond-20, friend-23)
nsubj(dancing-28, friend-23)
nsubj(get-32, friend-23)
det(carriage-26, the-25)
prep_in(dancing-28, carriage-26)
conj_and(thrown-13, dancing-28)
prep_with(dancing-28, impatience-30)
aux(get-32, to-31)
xcomp(dancing-28, get-32)
poss(stalls-35, their-34)
prep_at(get-32, stalls-35)
poss(oats-38, their-37)
prep_at(get-32, oats-38)
conj_and(stalls-35, oats-38)

(ROOT
  (S (CC And)
    (ADVP (RB in))
    (NP (PRP they))
    (VP (VBD came))
    (. .)))

cc(came-4, And-1)
advmod(came-4, in-2)
nsubj(came-4, they-3)
root(ROOT-0, came-4)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (VBD was) (RB not)
        (PP (IN in)
          (NP (DT the)
            (ADJP
              (ADJP (RBS least) (JJ afraid))
              (PP (IN of)
                (NP
                  (NP (PRP$ his) (NN father))
                  (VP (VBG driving)
                    (PP (IN over)
                      (NP (PRP him)))
                    (, ,)
                    (ADVP (CC but))))))
            (, ,)
            (ADJP (JJ careful) (RB not)
              (S
                (VP (TO to)
                  (VP (VB spoil)
                    (NP
                      (NP (DT the) (JJ grand) (NN show))
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (VBD made)
                            (PP (IN with)
                              (NP
                                (NP (PRP$ his) (JJ fine) (NNS horses))
                                (CC and)
                                (NP (PRP$ his) (NNS multitudinous))))))))))))
            (NN cape)))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT a) (JJ red) (NN edge))
            (PP (TO to)
              (NP (DT every) (NN fold)))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD slipped)
        (PRT (RP out))
        (PP (IN of)
          (NP (DT the) (NN way))))
      (CC and)
      (VP (VBD let)
        (S
          (NP (PRP him))
          (VP (VB dash)
            (ADVP (RB right)
              (PP (IN on)
                (PP (TO to)
                  (NP (DT the) (NNS stables)))))))))
    (. .)))

nsubj(was-2, Diamond-1)
ccomp(slipped-44, was-2)
neg(was-2, not-3)
det(cape-33, the-5)
advmod(afraid-7, least-6)
amod(cape-33, afraid-7)
poss(father-10, his-9)
prep_of(afraid-7, father-10)
vmod(father-10, driving-11)
prep_over(driving-11, him-13)
advmod(driving-11, but-15)
amod(cape-33, careful-17)
neg(careful-17, not-18)
aux(spoil-20, to-19)
xcomp(careful-17, spoil-20)
det(show-23, the-21)
amod(show-23, grand-22)
dobj(spoil-20, show-23)
nsubj(made-25, he-24)
rcmod(show-23, made-25)
poss(horses-29, his-27)
amod(horses-29, fine-28)
prep_with(made-25, horses-29)
poss(multitudinous-32, his-31)
prep_with(made-25, multitudinous-32)
conj_and(horses-29, multitudinous-32)
prep_in(was-2, cape-33)
det(edge-38, a-36)
amod(edge-38, red-37)
prep_with(was-2, edge-38)
det(fold-41, every-40)
prep_to(edge-38, fold-41)
nsubj(slipped-44, he-43)
nsubj(let-50, he-43)
root(ROOT-0, slipped-44)
det(way-48, the-47)
prep_out_of(slipped-44, way-48)
conj_and(slipped-44, let-50)
nsubj(dash-52, him-51)
ccomp(let-50, dash-52)
advmod(dash-52, right-53)
prep(right-53, on-54)
pcomp(on-54, to-55)
det(stables-57, the-56)
pobj(to-55, stables-57)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB be)
          (ADJP (RB quite) (JJ safe)))))
    (NP (PRP he))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB step)
            (PP (IN into)
              (NP
                (NP (DT the) (NN recess))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN door))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD led)
                          (PP (IN from)
                            (NP (DT the) (NN yard)))
                          (PP (TO to)
                            (NP (DT the) (NN shrubbery))))))))))))))
    (. .)))

aux(safe-4, To-1)
cop(safe-4, be-2)
advmod(safe-4, quite-3)
dep(had-6, safe-4)
nsubj(had-6, he-5)
nsubj(step-8, he-5)
root(ROOT-0, had-6)
aux(step-8, to-7)
xcomp(had-6, step-8)
det(recess-11, the-10)
prep_into(step-8, recess-11)
det(door-14, the-13)
prep_of(recess-11, door-14)
nsubj(led-16, door-14)
rcmod(door-14, led-16)
det(yard-19, the-18)
prep_from(led-16, yard-19)
det(shrubbery-22, the-21)
prep_to(led-16, shrubbery-22)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP he))
        (VP (VBD stood)
          (ADVP (RB there)))))
    (NP (PRP he))
    (VP (VBD remembered)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (DT the) (NN wind))
          (VP (VBD had)
            (VP (VBN driven)
              (NP (PRP him))
              (PP (TO to)
                (NP
                  (NP (DT this) (JJ same) (NN spot))
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NN night))
                      (PP (IN of)
                        (NP (PRP$ his) (NN dream))))))))))))
    (. .)))

mark(stood-3, As-1)
nsubj(stood-3, he-2)
advcl(remembered-6, stood-3)
advmod(stood-3, there-4)
nsubj(remembered-6, he-5)
root(ROOT-0, remembered-6)
advmod(driven-11, how-7)
det(wind-9, the-8)
nsubj(driven-11, wind-9)
aux(driven-11, had-10)
ccomp(remembered-6, driven-11)
dobj(driven-11, him-12)
det(spot-16, this-14)
amod(spot-16, same-15)
prep_to(driven-11, spot-16)
det(night-19, the-18)
prep_on(spot-16, night-19)
poss(dream-22, his-21)
prep_of(night-19, dream-22)

(ROOT
  (S (CC And)
    (ADVP (RB once) (RBR more))
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (RB almost) (JJ sure))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP (DT no) (NN dream))))))
    (. .)))

cc(sure-7, And-1)
advmod(more-3, once-2)
advmod(sure-7, more-3)
nsubj(sure-7, he-4)
cop(sure-7, was-5)
advmod(sure-7, almost-6)
root(ROOT-0, sure-7)
mark(dream-12, that-8)
nsubj(dream-12, it-9)
cop(dream-12, was-10)
neg(dream-12, no-11)
ccomp(sure-7, dream-12)

(ROOT
  (S
    (PP (IN At)
      (NP (DT all) (NNS events)))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP
        (VP (VB go)
          (PRT (RP in)))
        (CC and)
        (VP (VB see)
          (SBAR (IN whether)
            (S
              (NP (NNS things))
              (VP (VBD looked)
                (ADVP (IN at) (DT all))
                (SBAR
                  (ADVP (RB now))
                  (IN as)
                  (S
                    (NP (PRP they))
                    (VP (VBD did)
                      (ADVP (RB then)))))))))))
    (. .)))

det(events-3, all-2)
prep_at(go-7, events-3)
nsubj(go-7, he-5)
nsubj(see-10, he-5)
aux(go-7, would-6)
root(ROOT-0, go-7)
prt(go-7, in-8)
conj_and(go-7, see-10)
mark(looked-13, whether-11)
nsubj(looked-13, things-12)
ccomp(see-10, looked-13)
advmod(looked-13, at-14)
pobj(at-14, all-15)
advmod(did-19, now-16)
mark(did-19, as-17)
nsubj(did-19, they-18)
advcl(looked-13, did-19)
advmod(did-19, then-20)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD opened)
        (NP (DT the) (NN door)))
      (, ,)
      (CC and)
      (VP (VBD passed)
        (PP (IN through)
          (NP
            (NP (DT the) (JJ little) (NN belt))
            (PP (IN of)
              (NP (NN shrubbery)))))))
    (. .)))

nsubj(opened-2, He-1)
nsubj(passed-7, He-1)
root(ROOT-0, opened-2)
det(door-4, the-3)
dobj(opened-2, door-4)
conj_and(opened-2, passed-7)
det(belt-11, the-9)
amod(belt-11, little-10)
prep_through(passed-7, belt-11)
prep_of(belt-11, shrubbery-13)

(ROOT
  (S (RB Not)
    (NP (DT a) (NN flower))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN seen)
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS beds))
                  (PP (IN on)
                    (NP (DT the) (NN lawn))))))))))
    (. .)))

neg(was-4, Not-1)
det(flower-3, a-2)
nsubj(was-4, flower-3)
nsubjpass(seen-7, flower-3)
root(ROOT-0, was-4)
aux(seen-7, to-5)
auxpass(seen-7, be-6)
xcomp(was-4, seen-7)
det(beds-10, the-9)
prep_in(seen-7, beds-10)
det(lawn-13, the-12)
prep_on(beds-10, lawn-13)

(ROOT
  (S
    (NP
      (NP (RB Even) (DT the)
        (ADJP (JJ brave) (JJ old))
        (NN chrysanthemums))
      (CC and)
      (NP (NNP Christmas) (NNP roses)))
    (VP (VBD had)
      (VP (VBN passed)
        (PRT (RP away))
        (PP (IN before)
          (NP (DT the) (NN frost)))))
    (. .)))

advmod(chrysanthemums-5, Even-1)
det(chrysanthemums-5, the-2)
amod(old-4, brave-3)
amod(chrysanthemums-5, old-4)
nsubj(passed-10, chrysanthemums-5)
nn(roses-8, Christmas-7)
conj_and(chrysanthemums-5, roses-8)
nsubj(passed-10, roses-8)
aux(passed-10, had-9)
root(ROOT-0, passed-10)
prt(passed-10, away-11)
det(frost-14, the-13)
prep_before(passed-10, frost-14)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (. ?)))

root(ROOT-0, What-1)

(ROOT
  (INTJ (UH Yes) (. !)))

root(ROOT-0, Yes-1)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP (CD one)))
    (. !)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nsubj(was-2, one-3)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD ran))
      (CC and)
      (VP (VBP knelt)
        (PRT (RP down))
        (S
          (VP (TO to)
            (VP (VB look)
              (PP (IN at)
                (NP (PRP it))))))))
    (. .)))

nsubj(ran-2, He-1)
nsubj(knelt-4, He-1)
nsubj(look-7, He-1)
root(ROOT-0, ran-2)
conj_and(ran-2, knelt-4)
prt(knelt-4, down-5)
aux(look-7, to-6)
xcomp(knelt-4, look-7)
prep_at(look-7, it-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN primrose))
        (: --)
        (NP (DT a) (JJ dwarfish) (NN thing))
        (, ,)))
    (CC but)
    (VP (JJ perfect)
      (PP (IN in)
        (NP
          (NP (NN shape))
          (: --)
          (NP (DT a) (NN baby-wonder)))))
    (. .)))

nsubj(primrose-4, It-1)
nsubj(perfect-11, It-1)
cop(primrose-4, was-2)
det(primrose-4, a-3)
root(ROOT-0, primrose-4)
det(thing-8, a-6)
amod(thing-8, dwarfish-7)
dep(primrose-4, thing-8)
conj_but(primrose-4, perfect-11)
prep_in(perfect-11, shape-13)
det(baby-wonder-16, a-15)
dep(shape-13, baby-wonder-16)

(ROOT
  (S
    (S
      (S
        (SBAR (IN As)
          (S
            (NP (PRP he))
            (VP (VBD stooped)
              (NP (PRP$ his) (NN face)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (S
                        (NP (PRP it))
                        (ADJP (JJ close))))))))))
        (, ,)
        (NP (DT a) (JJ little) (NN wind))
        (VP (VBD began)
          (S
            (VP (TO to)
              (VP (VB blow))))))
      (, ,)
      (CC and)
      (S
        (NP (CD two)
          (CC or)
          (CD three))
        (ADVP (RB long))
        (VP (VBZ leaves)
          (SBAR (IN that)
            (S
              (VP
                (VP (VBD stood)
                  (PRT (RP up))
                  (PP (IN behind)
                    (NP
                      (NP (DT the) (NN flower))
                      (SBAR
                        (S
                          (VP
                            (VP (VBD shook))
                            (CC and)
                            (VP (VBD waved))))))))
                (CC and)
                (VP (VBD quivered))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN primrose))
      (VP (VBD lay)
        (ADVP (RB still))
        (PP (IN in)
          (NP (DT the) (JJ green) (NN hollow)))
        (, ,)
        (S
          (VP (VBG looking)
            (PRT (RP up))
            (PP (IN at)
              (UCP
                (NP (DT the) (NN sky))
                (, ,)
                (CC and)
                (RB not)
                (ADJP (JJ seeming)
                  (S
                    (VP (TO to)
                      (VP (VB know)
                        (SBAR (IN that)
                          (S
                            (NP (DT the) (NN wind))
                            (VP (VBD was)
                              (VP (VBG blowing)
                                (ADVP (IN at) (DT all))))))))))))))))
    (. .)))

mark(stooped-3, As-1)
nsubj(stooped-3, he-2)
advcl(began-14, stooped-3)
poss(face-5, his-4)
dobj(stooped-3, face-5)
aux(see-7, to-6)
vmod(face-5, see-7)
nsubj(close-9, it-8)
xcomp(see-7, close-9)
det(wind-13, a-11)
amod(wind-13, little-12)
nsubj(began-14, wind-13)
nsubj(blow-16, wind-13)
root(ROOT-0, began-14)
aux(blow-16, to-15)
xcomp(began-14, blow-16)
nsubj(leaves-23, two-19)
conj_or(two-19, three-21)
nsubj(leaves-23, three-21)
advmod(leaves-23, long-22)
conj_and(began-14, leaves-23)
mark(stood-25, that-24)
ccomp(leaves-23, stood-25)
prt(stood-25, up-26)
det(flower-29, the-28)
prep_behind(stood-25, flower-29)
rcmod(flower-29, shook-30)
rcmod(flower-29, waved-32)
conj_and(shook-30, waved-32)
ccomp(leaves-23, quivered-34)
conj_and(stood-25, quivered-34)
det(primrose-38, the-37)
nsubj(lay-39, primrose-38)
conj_but(began-14, lay-39)
advmod(lay-39, still-40)
det(hollow-44, the-42)
amod(hollow-44, green-43)
prep_in(lay-39, hollow-44)
xcomp(lay-39, looking-46)
prt(looking-46, up-47)
det(sky-50, the-49)
prep_at(looking-46, sky-50)
neg(seeming-54, not-53)
prep_at(looking-46, seeming-54)
conj_and(sky-50, seeming-54)
aux(know-56, to-55)
xcomp(seeming-54, know-56)
mark(blowing-61, that-57)
det(wind-59, the-58)
nsubj(blowing-61, wind-59)
aux(blowing-61, was-60)
ccomp(know-56, blowing-61)
advmod(blowing-61, at-62)
pobj(at-62, all-63)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB just))
      (NP (DT a) (CD one) (NN eye))
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ dull) (JJ black) (NN wintry) (NN earth))
          (VP (VBD had)
            (VP (VBN opened)
              (S
                (VP (TO to)
                  (VP (VB look)
                    (PP (IN at)
                      (NP (DT the) (NN sky)))
                    (PP (IN with))))))))))
    (. .)))

nsubj(eye-6, It-1)
cop(eye-6, was-2)
advmod(eye-6, just-3)
det(eye-6, a-4)
num(eye-6, one-5)
root(ROOT-0, eye-6)
mark(opened-14, that-7)
det(earth-12, the-8)
amod(earth-12, dull-9)
amod(earth-12, black-10)
nn(earth-12, wintry-11)
nsubj(opened-14, earth-12)
nsubj(look-16, earth-12)
aux(opened-14, had-13)
ccomp(eye-6, opened-14)
aux(look-16, to-15)
xcomp(opened-14, look-16)
det(sky-19, the-18)
prep_at(look-16, sky-19)
prep(look-16, with-20)

(ROOT
  (S
    (S
      (ADVP (DT All) (IN at))
      (ADVP (RB once))
      (NP (NNP Diamond))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (VP (VBG saying)
                (NP (PRP$ its) (NNS prayers))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD ought)
        (S (RB not)
          (VP (TO to)
            (VP (VB be)
              (VP (VBG staring)
                (PP (IN at)
                  (NP (PRP it)))
                (ADVP (RB so))))))))
    (. .)))

pobj(at-2, All-1)
advmod(thought-5, at-2)
advmod(thought-5, once-3)
nsubj(thought-5, Diamond-4)
root(ROOT-0, thought-5)
nsubj(saying-8, it-6)
aux(saying-8, was-7)
ccomp(thought-5, saying-8)
poss(prayers-10, its-9)
dobj(saying-8, prayers-10)
nsubj(ought-14, he-13)
nsubj(staring-18, he-13)
conj_and(thought-5, ought-14)
neg(staring-18, not-15)
aux(staring-18, to-16)
aux(staring-18, be-17)
xcomp(ought-14, staring-18)
prep_at(staring-18, it-20)
advmod(staring-18, so-21)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD ran)
      (PP (TO to)
        (NP (DT the) (NN stable)))
      (S
        (VP (TO to)
          (VP (VB see)
            (S
              (NP (PRP$ his) (NN father))
              (VP (VB make)
                (NP
                  (NP (NNP Diamond) (POS 's))
                  (NN bed))))))))
    (. .)))

nsubj(ran-2, He-1)
nsubj(see-7, He-1)
root(ROOT-0, ran-2)
det(stable-5, the-4)
prep_to(ran-2, stable-5)
aux(see-7, to-6)
xcomp(ran-2, see-7)
poss(father-9, his-8)
nsubj(make-10, father-9)
ccomp(see-7, make-10)
poss(bed-13, Diamond-11)
dobj(make-10, bed-13)

(ROOT
  (S (RB Then)
    (NP (PRP$ his) (NN father))
    (VP
      (VP (VBD took)
        (NP (PRP him))
        (PP (IN in)
          (NP (PRP$ his) (NNS arms))))
      (, ,)
      (VP (VBD carried)
        (NP (PRP him))
        (ADVP (RB up)
          (NP (DT the) (NN ladder))))
      (, ,)
      (CC and)
      (VP (VBD set)
        (NP (PRP him))
        (PRT (RP down))
        (PP (IN at)
          (NP
            (NP (DT the) (NN table))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP they))
                (VP (VBD were)
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (NP (PRP$ their) (NN tea)))))))))))))
    (. .)))

advmod(took-4, Then-1)
poss(father-3, his-2)
nsubj(took-4, father-3)
nsubj(carried-10, father-3)
nsubj(set-17, father-3)
root(ROOT-0, took-4)
dobj(took-4, him-5)
poss(arms-8, his-7)
prep_in(took-4, arms-8)
conj_and(took-4, carried-10)
dobj(carried-10, him-11)
advmod(carried-10, up-12)
det(ladder-14, the-13)
pobj(up-12, ladder-14)
conj_and(took-4, set-17)
dobj(set-17, him-18)
prt(set-17, down-19)
det(table-22, the-21)
prep_at(set-17, table-22)
advmod(going-26, where-23)
nsubj(going-26, they-24)
nsubj(have-28, they-24)
aux(going-26, were-25)
rcmod(table-22, going-26)
aux(have-28, to-27)
xcomp(going-26, have-28)
poss(tea-30, their-29)
dobj(have-28, tea-30)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP Miss))
      (VP (VBZ is)
        (ADJP (RB very) (RB poorly))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond) (POS 's))
      (NN father))
    (. .)))

nsubj(poorly-5, Miss-2)
cop(poorly-5, is-3)
advmod(poorly-5, very-4)
ccomp(said-8, poorly-5)
root(ROOT-0, said-8)
poss(father-11, Diamond-9)
nsubj(said-8, father-11)

(ROOT
  (S
    (S
      (NP (`` ``) (NN Mis) (`` `) (NN ess))
      (VP (VBZ has)
        (VP (VBN been)
          (PP (TO to)
            (NP (DT the) (NN doctor)))
          (PP (IN with)
            (NP (PRP$ her) (NN to-day))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD looked)
        (NP (JJ very) (NN glum))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP she))
            (VP (VBD came)
              (PRT (RP out))
              (ADVP (RB again)))))))
    (. .)))

nn(ess-4, Mis-2)
nsubj(been-6, ess-4)
aux(been-6, has-5)
root(ROOT-0, been-6)
det(doctor-9, the-8)
prep_to(been-6, doctor-9)
poss(to-day-12, her-11)
prep_with(been-6, to-day-12)
nsubj(looked-16, she-15)
conj_and(been-6, looked-16)
amod(glum-18, very-17)
dobj(looked-16, glum-18)
advmod(came-21, when-19)
nsubj(came-21, she-20)
advcl(looked-16, came-21)
prt(came-21, out-22)
advmod(came-21, again-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG a-watching)
        (PP (IN of)
          (NP (PRP them)))
        (S
          (VP (TO to)
            (VP (VB see)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (NN doctor))
                  (VP (VBD had)
                    (VP (VBN said))))))))))
    (. .) ('' '')))

nsubj(a-watching-3, I-1)
nsubj(see-7, I-1)
aux(a-watching-3, was-2)
root(ROOT-0, a-watching-3)
prep_of(a-watching-3, them-5)
aux(see-7, to-6)
xcomp(a-watching-3, see-7)
dobj(said-11, what-8)
nsubj(said-11, doctor-9)
aux(said-11, had-10)
ccomp(see-7, said-11)

(ROOT
  (S (`` ``)
    (CC And)
    (VP (VBD did) (RB n't)
      (ADVP (RB Miss))
      (VP (VB look)
        (NP (NN glum))
        (ADVP (RB too))))
    (. ?) ('' '')))

cc(look-6, And-2)
aux(look-6, did-3)
neg(look-6, n't-4)
advmod(look-6, Miss-5)
root(ROOT-0, look-6)
dobj(look-6, glum-7)
advmod(look-6, too-8)

(ROOT
  (S
    (VP (VBD asked)
      (NP (PRP$ his) (NN mother)))
    (. .)))

root(ROOT-0, asked-1)
poss(mother-3, his-2)
dobj(asked-1, mother-3)

(ROOT
  (SINV (`` ``)
    (S
      (NP
        (NP
          (QP (RB Not) (PDT half)))
        (PP (IN as)
          (NP
            (NP (NN glum))
            (PP (IN as)
              (NP (NNP Mis))))))
      (`` `)
      (VP (VBP ess)))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (DT the) (NN coachman))
    (. .)))

quantmod(half-3, Not-2)
nsubj(ess-9, half-3)
prep_as(half-3, glum-5)
prep_as(glum-5, Mis-7)
ccomp(returned-12, ess-9)
root(ROOT-0, returned-12)
det(coachman-14, the-13)
nsubj(returned-12, coachman-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (: --) ('' '')
    (S
      (S (CC But)
        (NP (PRP he))
        (VP (VBD lowered)
          (NP (PRP$ his) (NN voice))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Diamond))
        (VP (MD could) (RB not)
          (VP (VB make)
            (ADVP (IN out)
              (NP
                (QP (JJR more) (IN than) (DT a))
                (NN word)))
            (ADVP (RB here)
              (CC and)
              (RB there))))))
    (. .)))

nsubj(see-3, You-2)
root(ROOT-0, see-3)
nsubj(lowered-8, he-7)
parataxis(see-3, lowered-8)
poss(voice-10, his-9)
dobj(lowered-8, voice-10)
nsubj(make-16, Diamond-13)
aux(make-16, could-14)
neg(make-16, not-15)
parataxis(see-3, make-16)
conj_and(lowered-8, make-16)
advmod(make-16, out-17)
mwe(than-19, more-18)
quantmod(a-20, than-19)
num(word-21, a-20)
pobj(out-17, word-21)
advmod(make-16, here-22)
advmod(make-16, there-24)
conj_and(here-22, there-24)

(ROOT
  (S (IN For)
    (NP
      (NP (NNP Diamond) (POS 's))
      (NN father))
    (VP (VBD was) (RB not)
      (NP
        (NP
          (NP
            (QP (RB only) (CD one)))
          (PP (IN of)
            (NP
              (NP (DT the) (JJS finest))
              (PP (IN of)
                (NP (NN coachmen)))
              (S
                (VP (TO to)
                  (VP (VB look)
                    (PP (IN at))))))))
        (, ,)
        (CC and)
        (NP
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP
                (NP (DT the) (JJS best))
                (PP (IN of)
                  (NP (NNS drivers))))))
          (, ,)
          (CC but)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP
                (NP (DT the) (JJS most) (NN discreet))
                (PP (IN of)
                  (NP
                    (NP (NNS servants))
                    (ADVP (RB as) (RB well))))))))))
    (. .)))

dep(one-8, For-1)
poss(father-4, Diamond-2)
nsubj(one-8, father-4)
cop(one-8, was-5)
neg(one-8, not-6)
quantmod(one-8, only-7)
root(ROOT-0, one-8)
det(finest-11, the-10)
prep_of(one-8, finest-11)
prep_of(finest-11, coachmen-13)
aux(look-15, to-14)
vmod(finest-11, look-15)
prep(look-15, at-16)
conj_and(one-8, one-19)
det(best-22, the-21)
prep_of(one-19, best-22)
prep_of(best-22, drivers-24)
conj_and(one-8, one-27)
conj_but(one-19, one-27)
det(discreet-31, the-29)
amod(discreet-31, most-30)
prep_of(one-27, discreet-31)
prep_of(discreet-31, servants-33)
advmod(well-35, as-34)
mwe(well-35, as-34)
advmod(servants-33, well-35)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (PRP he))
    (VP
      (VP (VBD did) (RB not)
        (VP (VB talk)
          (PP (IN about)
            (NP (NN family) (NNS affairs)))
          (PP (TO to)
            (NP
              (NP (DT any) (NN one))
              (PP (CC but)
                (NP
                  (NP (PRP$ his) (NN wife))
                  (, ,)
                  (SBAR
                    (WHNP (WP whom))
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (VP (VBN proved)
                          (ADVP (RBR better))
                          (PP (IN than)
                            (NP (PRP himself)))
                          (ADVP (RB long) (RB ago))))))))))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADJP (JJ careful)
          (SBAR (IN that)
            (S
              (SBAR (RB even)
                (S
                  (NP (NNP Diamond))
                  (VP (MD should)
                    (VP (VB hear)
                      (NP (NN nothing))))))
              (NP (PRP he))
              (VP (MD could)
                (VP (VB repeat)
                  (ADVP (RB again))
                  (PP (VBG concerning)
                    (NP
                      (NP (NN master))
                      (CC and)
                      (NP (PRP$ his) (NN family)))))))))))
    (. .)))

advmod(talk-5, Therefore-1)
nsubj(talk-5, he-2)
nsubj(careful-28, he-2)
aux(talk-5, did-3)
neg(talk-5, not-4)
root(ROOT-0, talk-5)
nn(affairs-8, family-7)
prep_about(talk-5, affairs-8)
det(one-11, any-10)
prep_to(talk-5, one-11)
prep(one-11, but-12)
poss(wife-14, his-13)
pobj(but-12, wife-14)
dobj(proved-19, wife-14)
nsubj(proved-19, he-17)
aux(proved-19, had-18)
rcmod(wife-14, proved-19)
advmod(proved-19, better-20)
prep_than(proved-19, himself-22)
advmod(ago-24, long-23)
advmod(proved-19, ago-24)
cop(careful-28, was-27)
conj_and(talk-5, careful-28)
mark(repeat-37, that-29)
advmod(hear-33, even-30)
nsubj(hear-33, Diamond-31)
aux(hear-33, should-32)
advcl(repeat-37, hear-33)
dobj(hear-33, nothing-34)
nsubj(repeat-37, he-35)
aux(repeat-37, could-36)
ccomp(careful-28, repeat-37)
advmod(repeat-37, again-38)
prep_concerning(repeat-37, master-40)
poss(family-43, his-42)
prep_concerning(repeat-37, family-43)
conj_and(master-40, family-43)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP (JJ bed-time))
        (ADVP (RB soon))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Diamond))
      (VP
        (VP (VBD went)
          (PP (TO to)
            (NP (NN bed))))
        (CC and)
        (VP (VBD fell)
          (ADVP (RB fast)
            (ADJP (RB asleep))))))
    (. .)))

nsubj(bed-time-3, It-1)
cop(bed-time-3, was-2)
root(ROOT-0, bed-time-3)
advmod(bed-time-3, soon-4)
nsubj(went-8, Diamond-7)
nsubj(fell-12, Diamond-7)
conj_and(bed-time-3, went-8)
prep_to(went-8, bed-10)
conj_and(bed-time-3, fell-12)
conj_and(went-8, fell-12)
advmod(fell-12, fast-13)
pobj(fast-13, asleep-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD awoke)
      (ADVP (DT all) (IN at) (RB once))
      (, ,)
      (PP (IN in)
        (NP (DT the) (NN dark))))
    (. .)))

nsubj(awoke-2, He-1)
root(ROOT-0, awoke-2)
pobj(at-4, all-3)
advmod(awoke-2, at-4)
advmod(at-4, once-5)
det(dark-9, the-8)
prep_in(awoke-2, dark-9)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Open)
        (NP
          (NP (DT the) (NN window))
          (, ,)
          (NP (NNP Diamond)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT a) (NN voice))
    (. .)))

ccomp(said-9, Open-2)
det(window-4, the-3)
dobj(Open-2, window-4)
appos(window-4, Diamond-6)
root(ROOT-0, said-9)
det(voice-11, a-10)
nsubj(said-9, voice-11)

(ROOT
  (S
    (ADVP (RB Now))
    (NP
      (NP (NNP Diamond) (POS 's))
      (NN mother))
    (VP (VBD had)
      (ADVP (RB once) (RBR more))
      (VP (VBN pasted)
        (PRT (RP up))
        (NP
          (NP (NNP North) (NNP Wind) (POS 's))
          (NN window))))
    (. .)))

advmod(pasted-8, Now-1)
poss(mother-4, Diamond-2)
nsubj(pasted-8, mother-4)
aux(pasted-8, had-5)
advmod(more-7, once-6)
advmod(pasted-8, more-7)
root(ROOT-0, pasted-8)
prt(pasted-8, up-9)
nn(Wind-11, North-10)
poss(window-13, Wind-11)
dobj(pasted-8, window-13)

(ROOT
  (S (`` ``)
    (VP (VB Are)
      (S
        (NP (PRP you))
        (NP (NNP North) (NNP Wind))))
    (. ?) ('' '')))

root(ROOT-0, Are-2)
nsubj(Wind-5, you-3)
nn(Wind-5, North-4)
xcomp(Are-2, Wind-5)

(ROOT
  (SINV
    (VP (VBD said))
    (NP (NNP Diamond))
    (: :) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB hear)
          (S
            (NP (PRP you))
            (VP (VBG blowing))))))
    (. .) ('' '')))

root(ROOT-0, said-1)
nsubj(said-1, Diamond-2)
nsubj(hear-8, I-5)
aux(hear-8, do-6)
neg(hear-8, n't-7)
ccomp(said-1, hear-8)
nsubj(blowing-10, you-9)
dep(hear-8, blowing-10)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S (CC but)
      (NP (PRP you))
      (VP (VBP hear)
        (S
          (NP (PRP me))
          (VP (VBG talking)))))
    (. .)))

dep(hear-6, No-2)
cc(hear-6, but-4)
nsubj(hear-6, you-5)
root(ROOT-0, hear-6)
nsubj(talking-8, me-7)
dep(hear-6, talking-8)

(ROOT
  (S
    (S
      (VP (VB Open)
        (NP (DT the) (NN window))))
    (, ,) (IN for)
    (S
      (NP (PRP I))
      (VP (VBP have) (RB n't)
        (VP (VBP overmuch)
          (NP (NN time)))))
    (. .) ('' '')))

root(ROOT-0, Open-1)
det(window-3, the-2)
dobj(Open-1, window-3)
dep(Open-1, for-5)
nsubj(overmuch-9, I-6)
aux(overmuch-9, have-7)
neg(overmuch-9, n't-8)
parataxis(Open-1, overmuch-9)
dobj(overmuch-9, time-10)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Diamond))
    (. .)))

dep(returned-5, Yes-2)
root(ROOT-0, returned-5)
nsubj(returned-5, Diamond-6)

(ROOT
  (S (`` ``)
    (ADVP (CC But))
    (, ,)
    (VP (VBP please) (, ,)
      (NP (JJ North) (NN Wind))
      (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (VP (VBZ 's)
            (NP (DT the) (NN use))))))
    (. ?)))

advmod(please-4, But-2)
root(ROOT-0, please-4)
amod(Wind-7, North-6)
dobj(please-4, Wind-7)
advmod(use-12, where-9)
cop(use-12, 's-10)
det(use-12, the-11)
advcl(please-4, use-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD left)
      (NP (PRP me))
      (NP (RB all) (RB alone) (JJ last) (NN time)))
    (. .) ('' '')))

nsubj(left-2, You-1)
root(ROOT-0, left-2)
iobj(left-2, me-3)
advmod(time-7, all-4)
advmod(time-7, alone-5)
amod(time-7, last-6)
dobj(left-2, time-7)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD had)
        (VP (VBN got)
          (PRT (RP up))
          (PP (IN on)
            (NP (PRP$ his) (NNS knees)))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADJP (JJ busy)
          (PP (IN with)
            (NP (PRP$ his) (NNS nails))))
        (PP
          (ADVP (RB once) (RBR more))
          (IN at)
          (NP
            (NP (DT the) (NN paper))
            (PP (IN over)
              (NP
                (NP (DT the) (NN hole))
                (PP (IN in)
                  (NP (DT the) (NN wall)))))))))
    (. .)))

nsubj(got-3, He-1)
nsubj(busy-11, He-1)
aux(got-3, had-2)
root(ROOT-0, got-3)
prt(got-3, up-4)
poss(knees-7, his-6)
prep_on(got-3, knees-7)
cop(busy-11, was-10)
conj_and(got-3, busy-11)
poss(nails-14, his-13)
prep_with(busy-11, nails-14)
advmod(more-16, once-15)
advmod(busy-11, more-16)
det(paper-19, the-18)
prep_at(busy-11, paper-19)
det(hole-22, the-21)
prep_over(paper-19, hole-22)
det(wall-25, the-24)
prep_in(hole-22, wall-25)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (RB now))
        (SBAR (IN that)
          (S
            (NP (NNP North) (NNP Wind))
            (VP (VBD spoke)
              (ADVP (RB again)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD remembered)
      (NP
        (NP (DT all))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD had)
              (VP (VBN taken)
                (NP (NN place))
                (PP (IN before)
                  (ADJP
                    (ADJP (RB as) (RB distinctly) (RB as))
                    (SBAR (IN if)
                      (S
                        (NP (PRP it))
                        (VP (VBD had)
                          (VP (VBN happened)
                            (NP (RB only) (JJ last) (NN night))))))))))))))
    (. .)))

prep(remembered-10, For-1)
pobj(For-1, now-2)
mark(spoke-6, that-3)
nn(Wind-5, North-4)
nsubj(spoke-6, Wind-5)
dep(now-2, spoke-6)
advmod(spoke-6, again-7)
nsubj(remembered-10, he-9)
root(ROOT-0, remembered-10)
dobj(remembered-10, all-11)
nsubj(taken-14, all-11)
aux(taken-14, had-13)
rcmod(all-11, taken-14)
dobj(taken-14, place-15)
prep(taken-14, before-16)
advmod(as-19, as-17)
advmod(as-19, distinctly-18)
pobj(before-16, as-19)
mark(happened-23, if-20)
nsubj(happened-23, it-21)
aux(happened-23, had-22)
ccomp(as-19, happened-23)
advmod(night-26, only-24)
amod(night-26, last-25)
tmod(happened-23, night-26)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (CC but)
      (NP (DT that))
      (VP (VBD was)
        (NP (PRP$ your) (NN fault))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP North) (NNP Wind))
    (. .)))

discourse(fault-8, Yes-2)
conj_but(fault-8, that-5)
nsubj(fault-8, that-5)
ccomp(returned-11, that-5)
cop(fault-8, was-6)
poss(fault-8, your-7)
ccomp(returned-11, fault-8)
root(ROOT-0, returned-11)
nn(Wind-13, North-12)
dep(returned-11, Wind-13)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (NP (NN work)
          (S
            (VP (TO to)
              (VP (VB do)))))))
    (: ;)
    (CC and)
    (S (, ,)
      (PP (IN besides))
      (, ,)
      (NP (DT a) (NN gentleman))
      (VP (MD should)
        (ADVP (RB never))
        (VP (VB keep)
          (NP (DT a) (NN lady) (NN waiting)))))
    (. .) ('' '')))

nsubj(had-3, I-2)
root(ROOT-0, had-3)
dobj(had-3, work-4)
aux(do-6, to-5)
vmod(work-4, do-6)
prep(keep-16, besides-10)
det(gentleman-13, a-12)
nsubj(keep-16, gentleman-13)
aux(keep-16, should-14)
neg(keep-16, never-15)
conj_and(had-3, keep-16)
det(waiting-19, a-17)
nn(waiting-19, lady-18)
dobj(keep-16, waiting-19)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (NP (DT a) (NN gentleman))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (, ,)
    (S
      (VP (VBG scratching)
        (PRT (RP away))
        (PP (IN at)
          (NP (DT the) (NN paper)))))
    (. .)))

cc(gentleman-7, But-2)
nsubj(gentleman-7, I-3)
cop(gentleman-7, 'm-4)
neg(gentleman-7, not-5)
det(gentleman-7, a-6)
ccomp(said-10, gentleman-7)
root(ROOT-0, said-10)
nsubj(said-10, Diamond-11)
vmod(said-10, scratching-13)
prt(scratching-13, away-14)
det(paper-17, the-16)
prep_at(scratching-13, paper-17)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD wo) (RB n't)
            (VP (VB say)
              (ADVP (RB so)
                (NP (CD ten) (NNS years)))
              (PP (IN after)
                (NP (DT this))))))))
    (. .) ('' '')))

nsubj(hope-3, I-2)
root(ROOT-0, hope-3)
nsubj(say-7, you-4)
aux(say-7, wo-5)
neg(say-7, n't-6)
ccomp(hope-3, say-7)
advmod(say-7, so-8)
num(years-10, ten-9)
pobj(so-8, years-10)
prep_after(say-7, this-12)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP (DT a) (NN coachman))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT a) (NN coachman))
        (VP (VBZ is) (RB not)
          (NP (DT a) (NN gentleman)))))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP (NNP Diamond))
    (. .)))

nsubj(going-4, I-2)
nsubj(coachman-8, I-2)
aux(going-4, 'm-3)
ccomp(persisted-19, going-4)
aux(coachman-8, to-5)
cop(coachman-8, be-6)
det(coachman-8, a-7)
xcomp(going-4, coachman-8)
det(coachman-12, a-11)
nsubj(gentleman-16, coachman-12)
cop(gentleman-16, is-13)
neg(gentleman-16, not-14)
det(gentleman-16, a-15)
conj_and(going-4, gentleman-16)
ccomp(persisted-19, gentleman-16)
root(ROOT-0, persisted-19)
nsubj(persisted-19, Diamond-20)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP We))
      (VP (VBP call)
        (S
          (NP (PRP$ your) (NN father))
          (NP
            (NP (DT a) (NN gentleman))
            (PP (IN in)
              (NP (PRP$ our) (NN house)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP North) (NNP Wind))
    (. .)))

nsubj(call-3, We-2)
ccomp(said-13, call-3)
poss(father-5, your-4)
nsubj(gentleman-7, father-5)
det(gentleman-7, a-6)
xcomp(call-3, gentleman-7)
poss(house-10, our-9)
prep_in(gentleman-7, house-10)
root(ROOT-0, said-13)
nn(Wind-15, North-14)
nsubj(said-13, Wind-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (VBZ does) (RB n't)
        (VP (VB call)
          (NP (PRP himself))
          (NP (CD one)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(call-5, He-2)
aux(call-5, does-3)
neg(call-5, n't-4)
ccomp(said-10, call-5)
iobj(call-5, himself-6)
dobj(call-5, one-7)
root(ROOT-0, said-10)
nsubj(said-10, Diamond-11)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (PP (IN of)
          (NP (DT no) (NN consequence)))))
    (: :)
    (S
      (NP (DT every) (NN man))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (DT a) (NN gentleman)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ your) (NN father))
      (VP (VBZ is)
        (NP (CD one))))
    (. .) ('' '')))

nsubj('s-3, That-2)
root(ROOT-0, 's-3)
neg(consequence-6, no-5)
prep_of('s-3, consequence-6)
det(man-9, every-8)
nsubj(ought-10, man-9)
nsubj(gentleman-14, man-9)
conj_and('s-3, ought-10)
aux(gentleman-14, to-11)
cop(gentleman-14, be-12)
det(gentleman-14, a-13)
xcomp(ought-10, gentleman-14)
poss(father-18, your-17)
nsubj(one-20, father-18)
cop(one-20, is-19)
conj_and('s-3, one-20)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD was)
      (ADJP (RB so) (JJ pleased)
        (S
          (VP (TO to)
            (VP (VB hear)
              (NP (DT this))
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP
                    (VP (VBD scratched)
                      (PP (IN at)
                        (NP (DT the) (NN paper)))
                      (PP (IN like)
                        (NP (CD ten) (NNS mice))))
                    (, ,)
                    (CC and)
                    (VP
                      (S
                        (VP (VBG getting)
                          (NP
                            (NP (NN hold))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NN edge))
                                (PP (IN of)
                                  (NP (PRP it))))))))
                      (, ,)
                      (VP (VBD tore)
                        (NP (PRP it))
                        (PRT (RP off))))))))))))
    (. .)))

nsubj(pleased-4, Diamond-1)
nsubj(hear-6, Diamond-1)
cop(pleased-4, was-2)
advmod(pleased-4, so-3)
root(ROOT-0, pleased-4)
aux(hear-6, to-5)
xcomp(pleased-4, hear-6)
dobj(hear-6, this-7)
mark(scratched-10, that-8)
nsubj(scratched-10, he-9)
nsubj(tore-27, he-9)
ccomp(hear-6, scratched-10)
det(paper-13, the-12)
prep_at(scratched-10, paper-13)
num(mice-16, ten-15)
prep_like(scratched-10, mice-16)
xcomp(tore-27, getting-19)
dobj(getting-19, hold-20)
det(edge-23, the-22)
prep_of(hold-20, edge-23)
prep_of(edge-23, it-25)
ccomp(hear-6, tore-27)
conj_and(scratched-10, tore-27)
dobj(tore-27, it-28)
prt(tore-27, off-29)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ next) (NN instant))
      (NP (DT a) (JJ young) (NN girl)))
    (VP
      (VP (VBD glided)
        (PP (IN across)
          (NP (DT the) (NN bed))))
      (, ,)
      (CC and)
      (VP (VBD stood)
        (PP (IN upon)
          (NP (DT the) (NN floor)))))
    (. .)))

det(instant-3, The-1)
amod(instant-3, next-2)
nsubj(glided-7, instant-3)
nsubj(stood-13, instant-3)
det(girl-6, a-4)
amod(girl-6, young-5)
dep(instant-3, girl-6)
root(ROOT-0, glided-7)
det(bed-10, the-9)
prep_across(glided-7, bed-10)
conj_and(glided-7, stood-13)
det(floor-16, the-15)
prep_upon(stood-13, floor-16)

(ROOT
  (S (`` ``)
    (VP (VB Oh)
      (ADJP (RB dear)))
    (. !) ('' '')))

root(ROOT-0, Oh-2)
acomp(Oh-2, dear-3)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP
          (NP (NNP Diamond))
          (, ,)
          (ADJP (RB quite) (JJ dismayed)))))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP
        (VP (VBD did) (RB n't)
          (VP (VB know) (: --)
            (SBARQ
              (WHNP (WP who))
              (SQ (VBP are)
                (NP (PRP you))))))
        (PRN (, ,)
          (INTJ (VB please)))))
    (. ?) ('' '')))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)
advmod(dismayed-5, quite-4)
amod(Diamond-2, dismayed-5)
nsubj(know-11, I-8)
aux(know-11, did-9)
neg(know-11, n't-10)
parataxis(said-1, know-11)
ccomp(know-11, who-13)
parataxis(know-11, who-13)
cop(who-13, are-14)
nsubj(who-13, you-15)
discourse(know-11, please-17)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (NP (JJ North) (NN Wind)))
    (. .) ('' '')))

nsubj(Wind-5, I-2)
cop(Wind-5, 'm-3)
amod(Wind-5, North-4)
root(ROOT-0, Wind-5)

(ROOT
  (S (`` ``)
    (VP (VB Are)
      (NP (PRP you))
      (ADVP (RB really)))
    (. ?) ('' '')))

cop(you-3, Are-2)
root(ROOT-0, you-3)
advmod(you-3, really-4)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (S
    (VP (VB Make)
      (NP (NN haste)))
    (. .) ('' '')))

root(ROOT-0, Make-1)
dobj(Make-1, haste-2)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP
        (ADJP (RB no) (JJR bigger))
        (PP (IN than)
          (NP (PRP me)))))
    (. .) ('' '')))

cc(bigger-6, But-2)
nsubj(bigger-6, you-3)
cop(bigger-6, 're-4)
neg(bigger-6, no-5)
root(ROOT-0, bigger-6)
prep_than(bigger-6, me-8)

(ROOT
  (SQ (`` ``) (VBP Do)
    (NP (PRP you))
    (VP (VB think)
      (SBAR
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP care)
              (PP (IN about)
                (NP (WRB how) (JJ big))))))
        (CC or)
        (SBAR
          (WHNP (WRB how) (JJ little))
          (S
            (NP (PRP I))
            (VP (VBP am))))))
    (. ?)))

aux(think-4, Do-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj(care-6, I-5)
dep(think-4, care-6)
advmod(big-9, how-8)
prep_about(care-6, big-9)
advmod(little-12, how-11)
advmod(am-14, little-12)
nsubj(am-14, I-13)
dep(think-4, am-14)
conj_or(care-6, am-14)

(ROOT
  (SQ (MD Did) (RB n't)
    (NP (PRP you))
    (VP (VB see)
      (NP (PRP me))
      (NP (DT this) (NN evening)))
    (. ?)))

aux(see-4, Did-1)
neg(see-4, n't-2)
nsubj(see-4, you-3)
root(ROOT-0, see-4)
dobj(see-4, me-5)
det(evening-7, this-6)
tmod(see-4, evening-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJR less))
      (ADVP (RB then)))
    (. .) ('' '')))

nsubj(less-3, I-1)
cop(less-3, was-2)
root(ROOT-0, less-3)
advmod(less-3, then-4)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBD was)
      (NP (PRP you)))
    (. ?) ('' '')))

advmod(was-2, Where-1)
root(ROOT-0, was-2)
nsubj(was-2, you-3)

(ROOT
  (S (`` ``)
    (VP (VB Behind)
      (NP
        (NP (DT the) (NNS leaves))
        (PP (IN of)
          (NP (DT the) (NN primrose)))))
    (. .)))

root(ROOT-0, Behind-2)
det(leaves-4, the-3)
dobj(Behind-2, leaves-4)
det(primrose-7, the-6)
prep_of(leaves-4, primrose-7)

(ROOT
  (S
    (NP (NNP Did))
    (RB n't)
    (NP (PRP you))
    (VP (VBP see)
      (S
        (NP (PRP them))
        (VP (VBG blowing))))
    (. ?) ('' '')))

nsubj(see-4, Did-1)
neg(see-4, n't-2)
nsubj(see-4, you-3)
root(ROOT-0, see-4)
nsubj(blowing-6, them-5)
dep(see-4, blowing-6)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (VP (VB Make)
      (NP (NN haste) (, ,)
        (ADVP (RB then))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP want)
              (S
                (VP (TO to)
                  (VP (VB go)
                    (PP (IN with)
                      (NP (PRP me)))))))))))
    (. .) ('' '')))

root(ROOT-0, Make-2)
dobj(Make-2, haste-3)
advmod(haste-3, then-5)
mark(want-9, if-7)
nsubj(want-9, you-8)
nsubj(go-11, you-8)
ccomp(haste-3, want-9)
aux(go-11, to-10)
xcomp(want-9, go-11)
prep_with(go-11, me-13)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (VBP are) (RB not)
      (ADJP (JJ big) (RB enough)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP
                (NP (NN care))
                (PP (IN of)
                  (NP (PRP me)))))))))
    (. .)))

cc(big-6, But-2)
nsubj(big-6, you-3)
nsubj(take-9, you-3)
cop(big-6, are-4)
neg(big-6, not-5)
root(ROOT-0, big-6)
advmod(big-6, enough-7)
aux(take-9, to-8)
xcomp(big-6, take-9)
dobj(take-9, care-10)
prep_of(care-10, me-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADVP (RB only))
            (NP (NNP Miss) (NNP North) (NNP Wind))))))
    (. .) ('' '')))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(Wind-8, you-3)
cop(Wind-8, are-4)
advmod(Wind-8, only-5)
nn(Wind-8, Miss-6)
nn(Wind-8, North-7)
ccomp(think-2, Wind-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ big) (RB enough)
        (S
          (VP (TO to)
            (VP (VB show)
              (NP (PRP you))
              (NP
                (NP (DT the) (NN way))
                (, ,)
                (NP (NN anyhow))))))))
    (. .)))

nsubj(big-4, I-2)
nsubj(show-7, I-2)
cop(big-4, am-3)
root(ROOT-0, big-4)
advmod(big-4, enough-5)
aux(show-7, to-6)
xcomp(big-4, show-7)
iobj(show-7, you-8)
det(way-10, the-9)
dobj(show-7, way-10)
appos(way-10, anyhow-12)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD wo) (RB n't)
          (VP (VB come)))))
    (, ,)
    (ADVP (RB why))
    (, ,)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB stay)))
    (. .) ('' '')))

cc(stay-12, But-1)
mark(come-6, if-2)
nsubj(come-6, you-3)
aux(come-6, wo-4)
neg(come-6, n't-5)
advcl(stay-12, come-6)
advmod(stay-12, why-8)
nsubj(stay-12, you-10)
aux(stay-12, must-11)
root(ROOT-0, stay-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD must)
      (VP (VB dress)
        (NP (PRP myself))))
    (. .)))

nsubj(dress-4, I-2)
aux(dress-4, must-3)
root(ROOT-0, dress-4)
dobj(dress-4, myself-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB mind)
          (PP (IN with)
            (NP (DT a) (JJ grown) (NN lady))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB go)
          (PP (IN with)
            (NP
              (NP (DT a) (JJ little) (NN girl))
              (PP (IN in)
                (NP (PRP$ my) (NN night-gown))))))))
    (. .) ('' '')))

nsubj(mind-4, I-1)
aux(mind-4, did-2)
neg(mind-4, n't-3)
root(ROOT-0, mind-4)
det(lady-8, a-6)
amod(lady-8, grown-7)
prep_with(mind-4, lady-8)
nsubj(go-14, I-11)
aux(go-14, could-12)
neg(go-14, n't-13)
conj_but(mind-4, go-14)
det(girl-18, a-16)
amod(girl-18, little-17)
prep_with(go-14, girl-18)
poss(night-gown-21, my-20)
prep_in(girl-18, night-gown-21)

(ROOT
  (S (`` ``)
    (VP (VB Very)
      (ADVP (RB well)))
    (. .)))

root(ROOT-0, Very-2)
advmod(Very-2, well-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (PP (IN in)
        (NP (PDT such) (DT a) (NN hurry)))
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBD was)
            (NP (DT the) (JJ other) (NN night))))))
    (. .)))

nsubj('m-2, I-1)
root(ROOT-0, 'm-2)
neg('m-2, not-3)
predet(hurry-7, such-5)
det(hurry-7, a-6)
prep_in('m-2, hurry-7)
mark(night-13, as-8)
nsubj(night-13, I-9)
cop(night-13, was-10)
det(night-13, the-11)
amod(night-13, other-12)
advcl('m-2, night-13)

(ROOT
  (S
    (NP
      (NP (NNP Dress))
      (SBAR (IN as)
        (S
          (S
            (ADVP (RB fast) (RB as))
            (NP (PRP you))
            (VP (MD can)))
          (, ,)
          (CC and)
          (S
            (NP (PRP I))
            (VP (MD 'll)
              (VP (VB go)
                (CC and)
                (VB shake)
                (NP (DT the) (NN primrose))))))))
    (VP (VBZ leaves)
      (SBAR (IN till)
        (S
          (NP (PRP you))
          (VP (VBP come)))))
    (. .) ('' '')))

nsubj(leaves-16, Dress-1)
mark(can-6, as-2)
advmod(as-4, fast-3)
advmod(can-6, as-4)
nsubj(can-6, you-5)
dep(Dress-1, can-6)
nsubj(go-11, I-9)
nsubj(shake-13, I-9)
aux(go-11, 'll-10)
dep(Dress-1, go-11)
conj_and(can-6, go-11)
conj_and(can-6, shake-13)
conj_and(go-11, shake-13)
det(primrose-15, the-14)
dobj(go-11, primrose-15)
root(ROOT-0, leaves-16)
mark(come-19, till-17)
nsubj(come-19, you-18)
advcl(leaves-16, come-19)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VBP Do) (RB n't)
        (VP (VB hurt)
          (NP (PRP it)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

aux(hurt-4, Do-2)
neg(hurt-4, n't-3)
ccomp(said-8, hurt-4)
dobj(hurt-4, it-5)
root(ROOT-0, said-8)
nsubj(said-8, Diamond-9)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP
      (VP (VBD broke)
        (PRT (RP out))
        (PP (IN in)
          (NP (DT a) (JJ little) (NN laugh)))
        (PP (IN like)
          (NP
            (NP (DT the) (NN breaking))
            (PP (IN of)
              (NP (JJ silver) (NNS bubbles))))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (VP (VBN gone)
          (PP (IN in)
            (NP (DT a) (NN moment))))))
    (. .)))

nn(Wind-2, North-1)
nsubj(broke-3, Wind-2)
nsubjpass(gone-18, Wind-2)
root(ROOT-0, broke-3)
prt(broke-3, out-4)
det(laugh-8, a-6)
amod(laugh-8, little-7)
prep_in(broke-3, laugh-8)
det(breaking-11, the-10)
prep_like(broke-3, breaking-11)
amod(bubbles-14, silver-13)
prep_of(breaking-11, bubbles-14)
auxpass(gone-18, was-17)
conj_and(broke-3, gone-18)
det(moment-21, a-20)
prep_in(gone-18, moment-21)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP
      (VP (VBD saw))
      (PRN (: --)
        (SBAR (IN for)
          (S
            (S
              (NP (PRP it))
              (VP (VBD was)
                (NP (DT a) (JJ starlit) (NN night))))
            (, ,)
            (CC and)
            (S
              (NP
                (NP (DT the) (NN mass))
                (PP (IN of)
                  (NP (NN hay))))
              (VP (VBD was)
                (PP (IN at)
                  (NP (DT a) (JJ low) (NN ebb)))
                (ADVP (RB now))))))
        (: --))
      (NP
        (NP (DT the) (NN gleam))
        (PP (IN of)
          (NP (NN something)))
        (SBAR
          (S
            (S
              (VP (VBG vanishing)
                (PRT (RP down))
                (NP (DT the) (NN stair))))
            (, ,)
            (CC and)
            (, ,)
            (S
              (VP (VBG springing)
                (PRT (RP out))
                (PP (IN of)
                  (NP
                    (NP (NN bed))
                    (, ,)
                    (VP (VBN dressed)
                      (NP (PRP himself))
                      (ADVP
                        (ADVP (RB as) (RB fast))
                        (SBAR (IN as)
                          (S
                            (ADVP (RB ever))
                            (NP (PRP he))
                            (VP (MD could))))))))))))))
    (. .)))

nsubj(saw-2, Diamond-1)
root(ROOT-0, saw-2)
mark(night-9, for-4)
nsubj(night-9, it-5)
cop(night-9, was-6)
det(night-9, a-7)
amod(night-9, starlit-8)
parataxis(saw-2, night-9)
det(mass-13, the-12)
nsubj(was-16, mass-13)
prep_of(mass-13, hay-15)
parataxis(saw-2, was-16)
conj_and(night-9, was-16)
det(ebb-20, a-18)
amod(ebb-20, low-19)
prep_at(was-16, ebb-20)
advmod(was-16, now-21)
det(gleam-24, the-23)
dobj(saw-2, gleam-24)
prep_of(gleam-24, something-26)
rcmod(gleam-24, vanishing-27)
prt(vanishing-27, down-28)
det(stair-30, the-29)
dobj(vanishing-27, stair-30)
rcmod(gleam-24, springing-34)
conj_and(vanishing-27, springing-34)
prep_out_of(springing-34, bed-37)
vmod(bed-37, dressed-39)
dobj(dressed-39, himself-40)
advmod(fast-42, as-41)
advmod(dressed-39, fast-42)
mark(could-46, as-43)
advmod(could-46, ever-44)
nsubj(could-46, he-45)
advcl(fast-42, could-46)
ccomp(fast-42, could-46)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD crept)
      (PRT (RP out))
      (PP (IN into)
        (NP (DT the) (NN yard)))
      (, ,)
      (PP
        (PP (IN through)
          (NP
            (NP (DT the) (NN door))
            (PP (IN in)
              (NP (DT the) (NN wall)))))
        (, ,)
        (CC and)
        (RB away)
        (PP (TO to)
          (NP (DT the) (NN primrose)))))
    (. .)))

advmod(crept-3, Then-1)
nsubj(crept-3, he-2)
root(ROOT-0, crept-3)
prt(crept-3, out-4)
det(yard-7, the-6)
prep_into(crept-3, yard-7)
prep(crept-3, through-9)
det(door-11, the-10)
pobj(through-9, door-11)
det(wall-14, the-13)
prep_in(door-11, wall-14)
prep(crept-3, away-17)
conj_and(through-9, away-17)
dep(through-9, to-18)
det(primrose-20, the-19)
pobj(to-18, primrose-20)

(ROOT
  (SINV
    (PP (IN Behind)
      (NP (PRP it)))
    (VP (VBD stood))
    (NP (NNP North) (NNP Wind))
    (, ,)
    (S
      (VP
        (VP (VBG leaning)
          (PRT (RP over))
          (NP (PRP it)))
        (, ,)
        (CC and)
        (VP (VBG looking)
          (PP (IN at)
            (NP (DT the) (NN flower)))
          (SBAR (RB as) (IN if)
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN been)
                  (NP (PRP$ its) (NN mother)))))))))
    (. .)))

prep_behind(stood-3, it-2)
root(ROOT-0, stood-3)
nn(Wind-5, North-4)
nsubj(stood-3, Wind-5)
vmod(stood-3, leaning-7)
prt(leaning-7, over-8)
dobj(leaning-7, it-9)
vmod(stood-3, looking-12)
conj_and(leaning-7, looking-12)
det(flower-15, the-14)
prep_at(looking-12, flower-15)
advmod(mother-22, as-16)
mark(mother-22, if-17)
nsubj(mother-22, she-18)
aux(mother-22, had-19)
cop(mother-22, been-20)
poss(mother-22, its-21)
advcl(looking-12, mother-22)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Come)
        (PRT (RP along))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said) (, ,)
      (S
        (VP
          (VP (VBG jumping)
            (PRT (RP up)))
          (CC and)
          (VP (VBG holding)
            (PRT (RP out))
            (NP (PRP$ her) (NN hand))))))
    (. .)))

ccomp(said-7, Come-2)
prt(Come-2, along-3)
nsubj(said-7, she-6)
root(ROOT-0, said-7)
ccomp(said-7, jumping-9)
prt(jumping-9, up-10)
ccomp(said-7, holding-12)
conj_and(jumping-9, holding-12)
prt(holding-12, out-13)
poss(hand-15, her-14)
dobj(holding-12, hand-15)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD took)
      (NP (PRP$ her) (NN hand)))
    (. .)))

nsubj(took-2, Diamond-1)
root(ROOT-0, took-2)
poss(hand-4, her-3)
dobj(took-2, hand-4)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP
          (ADJP (JJ cold))
          (, ,)
          (CC but)
          (ADJP (RB so) (JJ pleasant)
            (CC and)
            (JJ full)))
        (PP (IN of)
          (NP (NN life)))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADJP
        (ADVP (JJR better) (IN than))
        (JJ warm)))
    (. .)))

nsubj(cold-3, It-1)
nsubj(pleasant-7, It-1)
cop(cold-3, was-2)
ccomp(warm-17, cold-3)
advmod(pleasant-7, so-6)
conj_but(cold-3, pleasant-7)
ccomp(warm-17, pleasant-7)
conj_but(cold-3, full-9)
conj_and(pleasant-7, full-9)
prep_of(cold-3, life-11)
nsubj(warm-17, it-13)
cop(warm-17, was-14)
dep(than-16, better-15)
advmod(warm-17, than-16)
root(ROOT-0, warm-17)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD led)
      (NP (PRP him))
      (PP (IN across)
        (NP (DT the) (NN garden))))
    (. .)))

nsubj(led-2, She-1)
root(ROOT-0, led-2)
dobj(led-2, him-3)
det(garden-6, the-5)
prep_across(led-2, garden-6)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (CD one))
        (VP (VBN bound))))
    (NP (PRP she))
    (VP (VBD was)
      (PP (IN on)
        (NP
          (NP (DT the) (NN top))
          (PP (IN of)
            (NP (DT the) (NN wall))))))
    (. .)))

prep_with(was-5, one-2)
vmod(one-2, bound-3)
nsubj(was-5, she-4)
root(ROOT-0, was-5)
det(top-8, the-7)
prep_on(was-5, top-8)
det(wall-11, the-10)
prep_of(top-8, wall-11)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD was)
      (VP (VBN left)
        (PP (IN at)
          (NP (DT the) (NN foot)))))
    (. .)))

nsubjpass(left-3, Diamond-1)
auxpass(left-3, was-2)
root(ROOT-0, left-3)
det(foot-6, the-5)
prep_at(left-3, foot-6)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Stop))
    (, ,)
    (NP (NN stop))
    (. !) ('' '')))

root(ROOT-0, Stop-2)
dep(Stop-2, stop-4)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD cried))
    (. .)))

nsubj(cried-2, he-1)
root(ROOT-0, cried-2)

(ROOT
  (S (`` ``)
    (INTJ (UH Please))
    (, ,)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB jump)
        (PP (IN like)
          (NP (DT that)))))
    (. .) ('' '')))

discourse(jump-7, Please-2)
nsubj(jump-7, I-4)
aux(jump-7, ca-5)
neg(jump-7, n't-6)
root(ROOT-0, jump-7)
prep_like(jump-7, that-9)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP do) (RB n't)
        (VP (VB try))))
    ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP North) (NNP Wind))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (PP (IN from)
            (NP (DT the) (NN top)))
          (VP (VBD looked)
            (PRT (RP down))
            (NP (DT a) (NN foot) (JJR taller))
            (ADVP (IN than) (RB before))))))
    (. .)))

nsubj(try-5, You-2)
aux(try-5, do-3)
neg(try-5, n't-4)
ccomp(said-7, try-5)
root(ROOT-0, said-7)
nn(Wind-9, North-8)
nsubj(said-7, Wind-9)
nsubj(looked-15, Wind-9)
det(top-14, the-13)
prep_from(looked-15, top-14)
rcmod(Wind-9, looked-15)
prt(looked-15, down-16)
det(taller-19, a-17)
dep(taller-19, foot-18)
dobj(looked-15, taller-19)
advmod(looked-15, than-20)
advmod(than-20, before-21)

(ROOT
  (S (`` ``)
    (S
      (S
        (VP (VB Give)
          (NP (PRP me))
          (NP
            (NP (PRP$ your) (NN hand))
            (ADVP (RB again)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP
          (VP (MD will))
          (, ,)
          (VP (VBP try)))))
    ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

ccomp(said-14, Give-2)
csubj(said-14, Give-2)
iobj(Give-2, me-3)
poss(hand-5, your-4)
dobj(Give-2, hand-5)
advmod(hand-5, again-6)
nsubj(will-10, I-9)
conj_and(Give-2, will-10)
ccomp(said-14, will-10)
csubj(said-14, will-10)
dep(will-10, try-12)
root(ROOT-0, said-14)
dep(said-14, Diamond-15)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD reached)
        (PRT (RP down))))
    (, ,)
    (NP (NNP Diamond))
    (VP
      (VP (VBD laid)
        (NP
          (NP (NN hold))
          (PP (IN of)
            (NP (PRP$ her) (NN hand)))))
      (, ,)
      (VP (VBD gave)
        (NP (DT a) (JJ great) (NN spring)))
      (, ,)
      (CC and)
      (VP (VBD stood)
        (PP (IN beside)
          (NP (PRP her)))))
    (. .)))

nsubj(reached-2, She-1)
ccomp(laid-6, reached-2)
prt(reached-2, down-3)
nsubj(laid-6, Diamond-5)
nsubj(gave-12, Diamond-5)
nsubj(stood-18, Diamond-5)
root(ROOT-0, laid-6)
dobj(laid-6, hold-7)
poss(hand-10, her-9)
prep_of(hold-7, hand-10)
conj_and(laid-6, gave-12)
det(spring-15, a-13)
amod(spring-15, great-14)
tmod(gave-12, spring-15)
conj_and(laid-6, stood-18)
prep_beside(stood-18, her-20)

(ROOT
  (S (`` ``)
    (NP (DT This))
    (VP (VBZ is)
      (ADJP (JJ nice)))
    (. !) ('' '')))

nsubj(nice-4, This-2)
cop(nice-4, is-3)
root(ROOT-0, nice-4)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S
    (S
      (NP (DT Another))
      (VP (VBN bound)))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD stood)
        (PP (IN in)
          (NP (DT the) (NN road)))
        (PP (IN by)
          (NP (DT the) (NN river)))))
    (. .)))

nsubj(bound-2, Another-1)
root(ROOT-0, bound-2)
nsubj(stood-6, they-5)
conj_and(bound-2, stood-6)
det(road-9, the-8)
prep_in(stood-6, road-9)
det(river-12, the-11)
prep_by(stood-6, river-12)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (JJ full) (NN tide))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS stars))
      (VP (VBD were)
        (VP (VBG shining)
          (ADJP (JJ clear))
          (PP (IN in)
            (NP (PRP$ its) (NNS depths)))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP it))
              (VP (VBD lay)
                (ADVP (RB still))
                (, ,)
                (S
                  (VP (VBG waiting)
                    (PP (IN for)
                      (NP (DT the) (NN turn)
                        (S
                          (VP (TO to)
                            (VP (VB run)
                              (ADVP (RB down) (RB again))
                              (PP (TO to)
                                (NP (DT the) (NN sea))))))))))))))))
    (. .)))

nsubj(tide-4, It-1)
cop(tide-4, was-2)
amod(tide-4, full-3)
root(ROOT-0, tide-4)
det(stars-8, the-7)
nsubj(shining-10, stars-8)
aux(shining-10, were-9)
conj_and(tide-4, shining-10)
acomp(shining-10, clear-11)
poss(depths-14, its-13)
prep_in(shining-10, depths-14)
mark(lay-18, for-16)
nsubj(lay-18, it-17)
advcl(shining-10, lay-18)
advmod(lay-18, still-19)
xcomp(lay-18, waiting-21)
det(turn-24, the-23)
prep_for(waiting-21, turn-24)
aux(run-26, to-25)
vmod(turn-24, run-26)
advmod(again-28, down-27)
advmod(run-26, again-28)
det(sea-31, the-30)
prep_to(run-26, sea-31)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD walked)
      (PP (IN along)
        (NP (PRP$ its) (NN side))))
    (. .)))

nsubj(walked-2, They-1)
root(ROOT-0, walked-2)
poss(side-5, its-4)
prep_along(walked-2, side-5)

(ROOT
  (S (CC But)
    (S
      (NP (PRP they))
      (VP (VBD had) (RB not)
        (VP (VBN walked)
          (ADVP (RB far))
          (SBAR (IN before)
            (S
              (NP (PRP$ its) (NN surface))
              (VP (VBD was)
                (VP (VBN covered)
                  (PP (IN with)
                    (NP (NNS ripples))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS stars))
      (VP (VBD had)
        (VP (VBN vanished)
          (PP (IN from)
            (NP (PRP$ its) (NN bosom))))))
    (. .)))

nsubj(walked-5, they-2)
aux(walked-5, had-3)
neg(walked-5, not-4)
root(ROOT-0, walked-5)
advmod(walked-5, far-6)
mark(covered-11, before-7)
poss(surface-9, its-8)
nsubjpass(covered-11, surface-9)
auxpass(covered-11, was-10)
advcl(walked-5, covered-11)
prep_with(covered-11, ripples-13)
det(stars-17, the-16)
nsubj(vanished-19, stars-17)
aux(vanished-19, had-18)
conj_and(walked-5, vanished-19)
poss(bosom-22, its-21)
prep_from(vanished-19, bosom-22)

(ROOT
  (S (CC And)
    (NP (NNP North) (NNP Wind))
    (VP (VBD was)
      (ADVP (RB now))
      (ADJP (JJ tall)
        (PP (IN as)
          (NP (DT a) (JJ full-grown) (NN girl)))))
    (. .)))

cc(tall-6, And-1)
nn(Wind-3, North-2)
nsubj(tall-6, Wind-3)
cop(tall-6, was-4)
advmod(tall-6, now-5)
root(ROOT-0, tall-6)
det(girl-10, a-8)
amod(girl-10, full-grown-9)
prep_as(tall-6, girl-10)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NN hair))
      (VP (VBD was)
        (VP (VBG flying)
          (PP (IN about)
            (NP (PRP$ her) (NN head))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN wind))
      (VP (VBD was)
        (VP (VBG blowing)
          (NP (DT a) (NN breeze))
          (ADVP (RB down)
            (NP (DT the) (NN river))))))
    (. .)))

poss(hair-2, Her-1)
nsubj(flying-4, hair-2)
aux(flying-4, was-3)
root(ROOT-0, flying-4)
poss(head-7, her-6)
prep_about(flying-4, head-7)
det(wind-11, the-10)
nsubj(blowing-13, wind-11)
aux(blowing-13, was-12)
conj_and(flying-4, blowing-13)
det(breeze-15, a-14)
dobj(blowing-13, breeze-15)
advmod(blowing-13, down-16)
det(river-18, the-17)
pobj(down-16, river-18)

(ROOT
  (S (CC But)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD turned)
          (ADVP (RB aside)))
        (CC and)
        (VP (VBD went)
          (PRT (RP up))
          (NP (DT a) (JJ narrow) (NN lane)))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD went)
            (NP (PRP$ her) (NN hair)))))
      (VP (VBD fell)
        (PRT (RP down))
        (PP (IN around)
          (NP (PRP her)))))
    (. .)))

nsubj(turned-3, she-2)
nsubj(went-6, she-2)
root(ROOT-0, turned-3)
advmod(turned-3, aside-4)
conj_and(turned-3, went-6)
prt(went-6, up-7)
det(lane-10, a-8)
amod(lane-10, narrow-9)
dobj(went-6, lane-10)
mark(went-15, as-13)
nsubj(went-15, she-14)
csubj(fell-18, went-15)
poss(hair-17, her-16)
dobj(went-15, hair-17)
conj_and(turned-3, fell-18)
prt(fell-18, down-19)
prep_around(fell-18, her-21)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (DT some)
          (ADJP (RB rather) (JJ disagreeable))
          (NN work)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (NN to-night))
                (PRN (, ,) ('' '')
                  (S
                    (NP (PRP she))
                    (VP (VBD said)))
                  (, ,) (`` ``))
                (SBAR (IN before)
                  (S
                    (NP (PRP I))
                    (VP (VBP get)
                      (PRT (RP out))
                      (PP (TO to)
                        (NP (NN sea))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD must)
        (VP (VB set)
          (PP (IN about)
            (NP (PRP it)))
          (PP (IN at)
            (NP (RB once))))))
    (. .)))

nsubj(have-3, I-2)
root(ROOT-0, have-3)
det(work-7, some-4)
advmod(disagreeable-6, rather-5)
amod(work-7, disagreeable-6)
dobj(have-3, work-7)
aux(do-9, to-8)
vmod(work-7, do-9)
dobj(do-9, to-night-10)
nsubj(said-14, she-13)
parataxis(do-9, said-14)
mark(get-19, before-17)
nsubj(get-19, I-18)
advcl(do-9, get-19)
prt(get-19, out-20)
prep_to(get-19, sea-22)
nsubj(set-27, I-25)
aux(set-27, must-26)
conj_and(have-3, set-27)
prep_about(set-27, it-29)
prep(set-27, at-30)
pobj(at-30, once-31)

(ROOT
  (S
    (NP (DT The) (JJ disagreeable) (NN work))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN looked)
          (PP (IN after)
            (NP (JJ first))))))
    (. .) ('' '')))

det(work-3, The-1)
amod(work-3, disagreeable-2)
nsubjpass(looked-6, work-3)
aux(looked-6, must-4)
auxpass(looked-6, be-5)
root(ROOT-0, looked-6)
prep_after(looked-6, first-8)

(ROOT
  (S
    (S (RB So)
      (VP (VBG saying)))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (VBD laid)
        (NP
          (NP (NN hold))
          (PP (IN of)
            (NP (NNP Diamond)))))
      (CC and)
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB run) (, ,)
              (S
                (VP (VBG gliding)
                  (ADVP (RB along) (RBR faster)
                    (CC and)
                    (RBR faster)))))))))
    (. .)))

advmod(saying-2, So-1)
vmod(laid-5, saying-2)
nsubj(laid-5, she-4)
nsubj(began-10, she-4)
nsubj(run-12, she-4)
root(ROOT-0, laid-5)
dobj(laid-5, hold-6)
prep_of(hold-6, Diamond-8)
conj_and(laid-5, began-10)
aux(run-12, to-11)
xcomp(began-10, run-12)
xcomp(run-12, gliding-14)
advmod(faster-16, along-15)
advmod(gliding-14, faster-16)
advmod(gliding-14, faster-18)
conj_and(faster-16, faster-18)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD kept)
      (PRT (RP up))
      (PP (IN with)
        (NP (PRP her)))
      (SBAR
        (ADVP (RB as) (RB well))
        (IN as)
        (S
          (NP (PRP he))
          (VP (MD could)))))
    (. .)))

nsubj(kept-2, Diamond-1)
root(ROOT-0, kept-2)
prt(kept-2, up-3)
prep_with(kept-2, her-5)
advmod(well-7, as-6)
mwe(well-7, as-6)
advmod(could-10, well-7)
mark(could-10, as-8)
nsubj(could-10, he-9)
advcl(kept-2, could-10)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD made)
      (NP (JJ many) (NNS turnings)
        (CC and)
        (NNS windings))
      (, ,)
      (SBAR
        (ADVP (RB apparently))
        (IN because)
        (S
          (NP (PRP it))
          (VP (VBD was) (RB not)
            (ADJP (RB quite) (JJ easy)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (NP (PRP him))
                    (PP (IN over)
                      (NP (NNS walls)
                        (CC and)
                        (NNS houses)))))))))))
    (. .)))

nsubj(made-2, She-1)
root(ROOT-0, made-2)
amod(turnings-4, many-3)
dobj(made-2, turnings-4)
dobj(made-2, windings-6)
conj_and(turnings-4, windings-6)
advmod(easy-14, apparently-8)
mark(easy-14, because-9)
nsubj(easy-14, it-10)
nsubj(get-16, it-10)
cop(easy-14, was-11)
neg(easy-14, not-12)
advmod(easy-14, quite-13)
advcl(made-2, easy-14)
aux(get-16, to-15)
xcomp(easy-14, get-16)
dobj(get-16, him-17)
prep_over(get-16, walls-19)
prep_over(get-16, houses-21)
conj_and(walls-19, houses-21)

(ROOT
  (S
    (SBAR (IN Once)
      (S
        (NP (PRP they))
        (VP (VBD ran)
          (PP (IN through)
            (NP (DT a) (NN hall)))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP they))
              (VP (VBD found)
                (ADVP (NN back)
                  (CC and)
                  (NN front))))))))
    (NP (NNS doors))
    (VP (VBP open))
    (. .)))

mark(ran-3, Once-1)
nsubj(ran-3, they-2)
advcl(open-14, ran-3)
det(hall-6, a-5)
prep_through(ran-3, hall-6)
advmod(found-9, where-7)
nsubj(found-9, they-8)
advcl(ran-3, found-9)
advmod(found-9, back-10)
advmod(found-9, front-12)
conj_and(back-10, front-12)
nsubj(open-14, doors-13)
root(ROOT-0, open-14)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP
          (NP (DT the) (NN foot))
          (PP (IN of)
            (NP (DT the) (NN stair)))))
      (NP (NNP North) (NNP Wind))
      (VP (VBD stood)
        (ADVP (RB still))))
    (, ,)
    (CC and)
    (S
      (S
        (NP
          (NP (NNP Diamond))
          (, ,)
          (VP (VBG hearing)
            (NP (DT a) (JJ great) (NN growl)))
          (, ,))
        (VP (VBD started)
          (PP (IN in)
            (NP (NN terror)))))
      (, ,)
      (CC and)
      (S
        (NP (EX there))
        (, ,)
        (PP (RB instead) (IN of)
          (NP (NNP North) (NNP Wind)))
        (, ,)
        (VP (VBD was)
          (NP
            (NP (DT a) (JJ huge) (NN wolf))
            (PP (IN by)
              (NP (PRP$ his) (NN side)))))))
    (. .)))

det(foot-3, the-2)
prep_at(stood-9, foot-3)
det(stair-6, the-5)
prep_of(foot-3, stair-6)
nn(Wind-8, North-7)
nsubj(stood-9, Wind-8)
root(ROOT-0, stood-9)
advmod(stood-9, still-10)
nsubj(started-20, Diamond-13)
vmod(Diamond-13, hearing-15)
det(growl-18, a-16)
amod(growl-18, great-17)
dobj(hearing-15, growl-18)
conj_and(stood-9, started-20)
prep_in(started-20, terror-22)
expl(was-32, there-25)
nn(Wind-30, North-29)
prep_instead_of(was-32, Wind-30)
conj_and(stood-9, was-32)
conj_and(started-20, was-32)
det(wolf-35, a-33)
amod(wolf-35, huge-34)
nsubj(was-32, wolf-35)
poss(side-38, his-37)
prep_by(wolf-35, side-38)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBP let)
        (VP (VB go)
          (NP (PRP$ his) (NN hold))
          (PP (IN in)
            (NP (NN dismay))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN wolf))
      (VP (VBD bounded)
        (PRT (RP up))
        (NP (DT the) (NN stair))))
    (. .)))

nsubj(let-2, He-1)
root(ROOT-0, let-2)
xcomp(let-2, go-3)
poss(hold-5, his-4)
dobj(go-3, hold-5)
prep_in(go-3, dismay-7)
det(wolf-11, the-10)
nsubj(bounded-12, wolf-11)
conj_and(let-2, bounded-12)
prt(bounded-12, up-13)
det(stair-15, the-14)
dobj(bounded-12, stair-15)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS windows))
        (PP (IN of)
          (NP (DT the) (NN house))))
      (VP
        (VP (VBN rattled))
        (CC and)
        (VP (VBD shook)
          (SBAR (RB as) (IN if)
            (S
              (NP (NNS guns))
              (VP (VBD were)
                (NP (NN firing))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN sound))
        (PP (IN of)
          (NP (DT a) (JJ great) (NN fall))))
      (VP (VBD came)
        (PP (IN from)
          (ADJP (JJ above)))))
    (. .)))

det(windows-2, The-1)
nsubj(rattled-6, windows-2)
nsubj(shook-8, windows-2)
det(house-5, the-4)
prep_of(windows-2, house-5)
root(ROOT-0, rattled-6)
conj_and(rattled-6, shook-8)
advmod(firing-13, as-9)
mark(firing-13, if-10)
nsubj(firing-13, guns-11)
cop(firing-13, were-12)
advcl(shook-8, firing-13)
det(sound-17, the-16)
nsubj(came-22, sound-17)
det(fall-21, a-19)
amod(fall-21, great-20)
prep_of(sound-17, fall-21)
conj_and(rattled-6, came-22)
prep_from(came-22, above-24)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD stood)
      (PP (IN with)
        (NP (JJ white) (NN face)))
      (S
        (VP (VBG staring)
          (PRT (RP up))
          (PP (IN at)
            (NP (DT the) (NN landing))))))
    (. .)))

nsubj(stood-2, Diamond-1)
root(ROOT-0, stood-2)
amod(face-5, white-4)
prep_with(stood-2, face-5)
xcomp(stood-2, staring-6)
prt(staring-6, up-7)
det(landing-10, the-9)
prep_at(staring-6, landing-10)

(ROOT
  (S (`` ``)
    (ADVP (RB Surely))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD thought)))
      (, ,))
    (`` ``)
    (NP (NNP North) (NNP Wind))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (VP (VBG eating)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (DT the) (NNS children)))))))
    (. !) ('' '')))

advmod(eating-14, Surely-2)
nsubj(thought-6, he-5)
parataxis(eating-14, thought-6)
nn(Wind-10, North-9)
nsubj(eating-14, Wind-10)
aux(eating-14, ca-11)
neg(eating-14, n't-12)
aux(eating-14, be-13)
root(ROOT-0, eating-14)
dobj(eating-14, one-15)
det(children-18, the-17)
prep_of(one-15, children-18)

(ROOT
  (S
    (S
      (VP (VBG Coming)
        (PP (TO to)
          (NP (PRP himself)))
        (ADVP (DT all) (IN at) (RB once))))
    (, ,)
    (NP (PRP he))
    (VP (VBD rushed)
      (PP (IN after)
        (NP (PRP her)))
      (PP (IN with)
        (NP (PRP$ his) (JJ little) (NN fist) (NN clenched))))
    (. .)))

vmod(rushed-9, Coming-1)
prep_to(Coming-1, himself-3)
pobj(at-5, all-4)
advmod(Coming-1, at-5)
advmod(at-5, once-6)
nsubj(rushed-9, he-8)
root(ROOT-0, rushed-9)
prep_after(rushed-9, her-11)
poss(clenched-16, his-13)
amod(clenched-16, little-14)
nn(clenched-16, fist-15)
prep_with(rushed-9, clenched-16)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD were)
        (NP
          (NP
            (NP (NNS ladies))
            (PP (IN in)
              (NP
                (NP (JJ long) (NNS trains))
                (VP (VBG going)
                  (PRT (RP up)
                    (CC and)
                    (RP down))
                  (NP (DT the) (NNS stairs))))))
          (, ,)
          (CC and)
          (NP
            (NP (NNS gentlemen))
            (PP (IN in)
              (NP
                (NP (JJ white) (NNS neckties))
                (VP (VBG attending)
                  (PP (IN on)
                    (NP (PRP them))))))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD stared)
                  (PP (IN at)
                    (NP (PRP him))))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP
          (NP (NN none))
          (PP (IN of)
            (NP (PRP them))))
        (VP (VBD were)
          (PP (IN of)
            (NP
              (NP (DT the) (NNS people))
              (PP (IN of)
                (NP (DT the) (NN house)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP they))
        (VP (VBD said)
          (NP (NN nothing)))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
nsubj(were-2, ladies-3)
amod(trains-6, long-5)
prep_in(ladies-3, trains-6)
vmod(trains-6, going-7)
prt(going-7, up-8)
cc(up-8, and-9)
dep(up-8, down-10)
det(stairs-12, the-11)
dobj(going-7, stairs-12)
nsubj(were-2, gentlemen-15)
conj_and(ladies-3, gentlemen-15)
nsubj(stared-24, gentlemen-15)
amod(neckties-18, white-17)
prep_in(gentlemen-15, neckties-18)
vmod(neckties-18, attending-19)
prep_on(attending-19, them-21)
rcmod(gentlemen-15, stared-24)
prep_at(stared-24, him-26)
nsubj(were-32, none-29)
prep_of(none-29, them-31)
conj_but(were-2, were-32)
det(people-35, the-34)
prep_of(were-32, people-35)
det(house-38, the-37)
prep_of(people-35, house-38)
nsubj(said-42, they-41)
conj_but(were-2, said-42)
conj_and(were-32, said-42)
dobj(said-42, nothing-43)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (PRP he))
        (VP (VBD reached)
          (NP
            (NP (DT the) (NN head))
            (PP (IN of)
              (NP (DT the) (NN stair))))
          (, ,)
          (ADVP (RB however)))))
    (, ,)
    (NP (NNP North) (NNP Wind))
    (VP
      (VP (VBD met)
        (NP (PRP him)))
      (, ,)
      (VP (VBD took)
        (NP (PRP him))
        (PP (IN by)
          (NP (DT the) (NN hand))))
      (, ,)
      (CC and)
      (VP (VBD hurried)
        (PRT (RP down)
          (CC and)
          (RP out))
        (PP (IN of)
          (NP (DT the) (NN house)))))
    (. .)))

mark(reached-3, Before-1)
nsubj(reached-3, he-2)
advcl(met-14, reached-3)
det(head-5, the-4)
dobj(reached-3, head-5)
det(stair-8, the-7)
prep_of(head-5, stair-8)
advmod(reached-3, however-10)
nn(Wind-13, North-12)
nsubj(met-14, Wind-13)
nsubj(took-17, Wind-13)
nsubj(hurried-24, Wind-13)
root(ROOT-0, met-14)
dobj(met-14, him-15)
conj_and(met-14, took-17)
dobj(took-17, him-18)
det(hand-21, the-20)
prep_by(took-17, hand-21)
conj_and(met-14, hurried-24)
prt(hurried-24, down-25)
cc(down-25, and-26)
dep(down-25, out-27)
det(house-30, the-29)
prep_of(hurried-24, house-30)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP have) (RB n't)
            (VP (VBN eaten)
              (NP
                (NP (DT a) (NN baby))
                (, ,)
                (NP (NNP North) (NNP Wind))))))))
    (. !) ('' '')))

nsubj(hope-3, I-2)
root(ROOT-0, hope-3)
nsubj(eaten-7, you-4)
aux(eaten-7, have-5)
neg(eaten-7, n't-6)
ccomp(hope-3, eaten-7)
det(baby-9, a-8)
dobj(eaten-7, baby-9)
nn(Wind-12, North-11)
appos(baby-9, Wind-12)

(ROOT
  (S
    (VP (VBD said)
      (NP
        (NP (NNP Diamond))
        (, ,)
        (ADJP (RB very) (VBN solemnly))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)
advmod(solemnly-5, very-4)
amod(Diamond-2, solemnly-5)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP
      (VP (VBD laughed)
        (ADVP (RB merrily)))
      (, ,)
      (CC and)
      (VP (VBD went)
        (S
          (VP (VBG tripping)
            (PP (IN on)
              (ADVP (RBR faster)))))))
    (. .)))

nn(Wind-2, North-1)
nsubj(laughed-3, Wind-2)
nsubj(went-7, Wind-2)
root(ROOT-0, laughed-3)
advmod(laughed-3, merrily-4)
conj_and(laughed-3, went-7)
xcomp(went-7, tripping-8)
prepc_on(tripping-8, faster-10)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (JJ grassy) (NN robe))
      (VP (VBD swept)
        (CC and)
        (VBD swirled)
        (PP (IN about)
          (NP (PRP$ her) (NNS steps)))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB wherever))
        (S
          (NP (PRP it))
          (VP (VBD passed)
            (PP (IN over)
              (NP (JJ withered) (NNS leaves))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD went)
        (S
          (VP
            (VP (VBG fleeing))
            (CC and)
            (VP (VBG whirling)
              (PP (IN in)
                (NP (NNS spirals))))
            (, ,)
            (CC and)
            (VP (VBG running)
              (PP (IN on)
                (NP (PRP$ their) (NNS edges)))
              (PP (IN like)
                (NP
                  (NP (NNS wheels))
                  (, ,)
                  (NP
                    (NP (DT all))
                    (PP (IN about)
                      (NP (PRP$ her) (NNS feet)))))))))))
    (. .)))

poss(robe-3, Her-1)
amod(robe-3, grassy-2)
nsubj(swept-4, robe-3)
nsubj(swirled-6, robe-3)
root(ROOT-0, swept-4)
conj_and(swept-4, swirled-6)
poss(steps-9, her-8)
prep_about(swept-4, steps-9)
advmod(passed-14, wherever-12)
nsubj(passed-14, it-13)
advcl(went-20, passed-14)
amod(leaves-17, withered-16)
prep_over(passed-14, leaves-17)
nsubj(went-20, they-19)
conj_and(swept-4, went-20)
ccomp(went-20, fleeing-21)
ccomp(went-20, whirling-23)
conj_and(fleeing-21, whirling-23)
prep_in(whirling-23, spirals-25)
ccomp(went-20, running-28)
conj_and(fleeing-21, running-28)
poss(edges-31, their-30)
prep_on(running-28, edges-31)
prep_like(running-28, wheels-33)
appos(wheels-33, all-35)
poss(feet-38, her-37)
prep_about(all-35, feet-38)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH No)))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP she))
        (VP (VBD said)
          (PP (IN at)
            (NP (JJ last))))))
    (, ,) (`` ``)
    (NP (PRP I))
    (VP (VBD did) (RB not)
      (VP (VB eat)
        (NP (DT a) (NN baby))))
    (. .)))

dep(eat-14, No-2)
nsubj(said-6, she-5)
parataxis(eat-14, said-6)
prep_at(said-6, last-8)
nsubj(eat-14, I-11)
aux(eat-14, did-12)
neg(eat-14, not-13)
root(ROOT-0, eat-14)
det(baby-16, a-15)
dobj(eat-14, baby-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD would) (RB not)
      (VP (VB have)
        (VP (VBN had)
          (S
            (VP (TO to)
              (VP (VB ask)
                (NP (DT that) (JJ foolish) (NN question)))))
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBD had) (RB not)
                (VP (VBN let)
                  (S
                    (VP (VB go)
                      (NP
                        (NP (PRP$ your) (NN hold))
                        (PP (IN of)
                          (NP (PRP me)))))))))))))
    (. .)))

nsubj(had-5, You-1)
nsubj(ask-7, You-1)
aux(had-5, would-2)
neg(had-5, not-3)
aux(had-5, have-4)
root(ROOT-0, had-5)
aux(ask-7, to-6)
xcomp(had-5, ask-7)
det(question-10, that-8)
amod(question-10, foolish-9)
dobj(ask-7, question-10)
mark(let-15, if-11)
nsubj(let-15, you-12)
aux(let-15, had-13)
neg(let-15, not-14)
advcl(had-5, let-15)
ccomp(let-15, go-16)
poss(hold-18, your-17)
dobj(go-16, hold-18)
prep_of(hold-18, me-20)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN seen)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP I))
                (VP (VBD served)
                  (NP
                    (NP (DT a) (NN nurse))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD was)
                          (VP (VBG calling)
                            (NP (DT a) (NN child))
                            (NP (JJ bad) (NNS names))))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG telling)
          (NP (PRP her))))
      (NP (PRP she))
      (VP (VBD was)
        (ADJP (JJ wicked))))
    (. .)))

nsubj(seen-4, You-1)
aux(seen-4, would-2)
aux(seen-4, have-3)
root(ROOT-0, seen-4)
advmod(served-7, how-5)
nsubj(served-7, I-6)
ccomp(seen-4, served-7)
det(nurse-9, a-8)
dobj(served-7, nurse-9)
nsubj(calling-12, nurse-9)
aux(calling-12, was-11)
rcmod(nurse-9, calling-12)
det(child-14, a-13)
iobj(calling-12, child-14)
amod(names-16, bad-15)
dobj(calling-12, names-16)
dep(wicked-23, telling-19)
dobj(telling-19, her-20)
nsubj(wicked-23, she-21)
cop(wicked-23, was-22)
conj_and(seen-4, wicked-23)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBG drinking))))
    (. .)))

nsubj(drinking-4, She-1)
aux(drinking-4, had-2)
aux(drinking-4, been-3)
root(ROOT-0, drinking-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD saw)
      (NP (DT an) (JJ ugly) (NN gin) (NN bottle))
      (PP (IN in)
        (NP (DT a) (NN cupboard))))
    (. .) ('' '')))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
det(bottle-6, an-3)
amod(bottle-6, ugly-4)
nn(bottle-6, gin-5)
dobj(saw-2, bottle-6)
det(cupboard-9, a-8)
prep_in(saw-2, cupboard-9)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP you))
    (VP (VBD frightened)
      (NP (PRP her)))
    (. ?) ('' '')))

cc(frightened-4, And-2)
nsubj(frightened-4, you-3)
root(ROOT-0, frightened-4)
dobj(frightened-4, her-5)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP believe)
      (ADVP (RB so)))
    (. !) ('' '')))

nsubj(believe-3, I-2)
root(ROOT-0, believe-3)
advmod(believe-3, so-4)

(ROOT
  (S
    (NP (NNP answered) (NNP North))
    (VP (VBZ Wind)
      (S
        (VP (VBG laughing)
          (ADVP (RB merrily)))))
    (. .)))

nn(North-2, answered-1)
nsubj(Wind-3, North-2)
root(ROOT-0, Wind-3)
xcomp(Wind-3, laughing-4)
advmod(laughing-4, merrily-5)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD flew)
        (PP (IN at)
          (NP (PRP$ her) (NN throat)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD tumbled)
        (PRT (RP over))
        (PP (IN on)
          (NP
            (NP (DT the) (NN floor))
            (PP (IN with)
              (NP (PDT such) (DT a) (NN crash)))))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBD ran)
              (PRT (RP in)))))))
    (. .)))

nsubj(flew-3, I-2)
root(ROOT-0, flew-3)
poss(throat-6, her-5)
prep_at(flew-3, throat-6)
nsubj(tumbled-10, she-9)
conj_and(flew-3, tumbled-10)
prt(tumbled-10, over-11)
det(floor-14, the-13)
prep_on(tumbled-10, floor-14)
predet(crash-18, such-16)
det(crash-18, a-17)
prep_with(floor-14, crash-18)
mark(ran-21, that-19)
nsubj(ran-21, they-20)
ccomp(tumbled-10, ran-21)
prt(ran-21, in-22)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD 'll)
      (VP (VB be)
        (VP (VBN turned)
          (PRT (RP away))
          (NP
            (NP (NN to-morrow))
            (: --)
            (CC and)
            (NP (RB quite) (NN time)))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP they))
              (VP (VBD knew)
                (ADVP (RB as) (RB much))
                (SBAR (IN as)
                  (S
                    (NP (PRP I))
                    (VP (VBP do))))))))))
    (. .) ('' '')))

nsubjpass(turned-4, She-1)
aux(turned-4, 'll-2)
auxpass(turned-4, be-3)
root(ROOT-0, turned-4)
prt(turned-4, away-5)
dobj(turned-4, to-morrow-6)
advmod(time-10, quite-9)
dobj(turned-4, time-10)
conj_and(to-morrow-6, time-10)
mark(knew-14, if-12)
nsubj(knew-14, they-13)
advcl(turned-4, knew-14)
advmod(much-16, as-15)
advmod(knew-14, much-16)
mark(do-19, as-17)
nsubj(do-19, I-18)
advcl(knew-14, do-19)

(ROOT
  (S (`` ``)
    (CC But)
    (VP (VBD did) (RB n't)
      (VP
        (NP (PRP you))
        (S
          (VP (VB frighten)
            (NP (DT the) (JJ little) (NN one))))))
    (. ?) ('' '')))

cc(you-5, But-2)
aux(you-5, did-3)
neg(you-5, n't-4)
root(ROOT-0, you-5)
dep(you-5, frighten-6)
det(one-9, the-7)
amod(one-9, little-8)
dobj(frighten-6, one-9)

(ROOT
  (S (`` ``)
    (NP (PRP She))
    (ADVP (RB never))
    (VP (VBD saw)
      (NP (PRP me)))
    (. .)))

nsubj(saw-4, She-2)
neg(saw-4, never-3)
root(ROOT-0, saw-4)
dobj(saw-4, me-5)

(ROOT
  (S
    (NP (DT The) (NN woman))
    (VP (MD would) (RB not)
      (VP (VB have)
        (VP (VBN seen)
          (NP (PRP me))
          (ADVP (RB either))
          (SBAR (IN if)
            (S
              (NP (PRP she))
              (VP (VBD had) (RB not)
                (VP (VBN been)
                  (ADJP (JJ wicked)))))))))
    (. .) ('' '')))

det(woman-2, The-1)
nsubj(seen-6, woman-2)
aux(seen-6, would-3)
neg(seen-6, not-4)
aux(seen-6, have-5)
root(ROOT-0, seen-6)
dobj(seen-6, me-7)
advmod(seen-6, either-8)
mark(wicked-14, if-9)
nsubj(wicked-14, she-10)
aux(wicked-14, had-11)
neg(wicked-14, not-12)
cop(wicked-14, been-13)
advcl(seen-6, wicked-14)

(ROOT
  (INTJ (`` ``) (UH Oh) (. !) ('' '')))

root(ROOT-0, Oh-2)

(ROOT
  (SINV
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (NP (NNP dubiously) (. .)))))

root(ROOT-0, said-1)
nsubj(said-1, Diamond-2)
appos(Diamond-2, dubiously-4)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB see)
        (NP (NNS things))
        (PRN (, ,) ('' '')
          (SINV
            (VP (VBD returned))
            (NP (NNP North) (NNP Wind)))
          (, ,) (`` ``))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD would) (RB n't)
              (VP (VB understand)
                (CC or)
                (VB know)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (PP (IN with))))))))))))
    (. ?)))

advmod(see-5, Why-2)
aux(see-5, should-3)
nsubj(see-5, you-4)
root(ROOT-0, see-5)
dobj(see-5, things-6)
parataxis(see-5, returned-9)
nn(Wind-11, North-10)
nsubj(returned-9, Wind-11)
mark(understand-18, that-14)
nsubj(understand-18, you-15)
nsubj(know-20, you-15)
aux(understand-18, would-16)
neg(understand-18, n't-17)
ccomp(see-5, understand-18)
ccomp(see-5, know-20)
conj_or(understand-18, know-20)
nsubj(do-23, what-21)
aux(do-23, to-22)
ccomp(understand-18, do-23)
xcomp(understand-18, do-23)
prep(do-23, with-24)

(ROOT
  (S
    (NP (JJ Good) (NNS people))
    (VP (VBP see)
      (NP
        (NP (JJ good) (NNS things))
        (: ;)
        (NP
          (NP (JJ bad) (NNS people))
          (, ,)
          (NP (JJ bad) (NNS things)))))
    (. .) ('' '')))

amod(people-2, Good-1)
nsubj(see-3, people-2)
root(ROOT-0, see-3)
amod(things-5, good-4)
dobj(see-3, things-5)
amod(people-8, bad-7)
dep(things-5, people-8)
amod(things-11, bad-10)
appos(people-8, things-11)

(ROOT
  (S (`` ``) (RB Then)
    (VP (VBP are)
      (NP (PRP you))
      (NP (DT a) (JJ bad) (NN thing)))
    (. ?) ('' '')))

advmod(you-4, Then-2)
cop(you-4, are-3)
root(ROOT-0, you-4)
det(thing-7, a-5)
amod(thing-7, bad-6)
dep(you-4, thing-7)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S
    (SBAR (IN For)
      (S
        (NP (PRP you))
        (VP (VBP see)
          (NP (PRP me)))))
    (, ,)
    (S
      (NP
        (NP (NNP Diamond))
        (, ,)
        (ADJP (RB dear))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (DT the) (NN girl))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP she))
        (VP (VBD looked)
          (PRT (RP down))
          (PP (IN at)
            (NP (PRP him)))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Diamond))
        (VP (VBD saw)
          (NP
            (NP (DT the) (VBG loving) (NNS eyes))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ great) (NN lady) (VBG beaming))
                (PP (IN from)
                  (NP
                    (NP (DT the) (NNS depths))
                    (PP (IN of)
                      (NP (PRP$ her) (VBG falling) (NN hair)))))))))))
    (. .)))

mark(see-3, For-1)
nsubj(see-3, you-2)
advcl(said-11, see-3)
dobj(see-3, me-4)
nsubj(said-11, Diamond-6)
amod(Diamond-6, dear-8)
root(ROOT-0, said-11)
det(girl-13, the-12)
dobj(said-11, girl-13)
nsubj(looked-17, she-16)
conj_and(said-11, looked-17)
prt(looked-17, down-18)
prep_at(looked-17, him-20)
nsubj(saw-24, Diamond-23)
conj_and(said-11, saw-24)
conj_and(looked-17, saw-24)
det(eyes-27, the-25)
amod(eyes-27, loving-26)
dobj(saw-24, eyes-27)
det(lady-31, the-29)
amod(lady-31, great-30)
prep_of(eyes-27, lady-31)
amod(lady-31, beaming-32)
det(depths-35, the-34)
prep_from(lady-31, depths-35)
poss(hair-39, her-37)
amod(hair-39, falling-38)
prep_of(depths-35, hair-39)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB make)
            (S
              (NP (PRP myself))
              (VP (VB look)
                (PP (IN like)
                  (NP (DT a) (JJ bad) (NN thing)))
                (SBAR (IN before)
                  (S
                    (NP (PRP she))
                    (VP (MD could)
                      (VP (VB see)
                        (NP (PRP me))))))))))))
    (. .)))

nsubj(had-3, I-2)
nsubj(make-5, I-2)
root(ROOT-0, had-3)
aux(make-5, to-4)
xcomp(had-3, make-5)
nsubj(look-7, myself-6)
ccomp(make-5, look-7)
det(thing-11, a-9)
amod(thing-11, bad-10)
prep_like(look-7, thing-11)
mark(see-15, before-12)
nsubj(see-15, she-13)
aux(see-15, could-14)
advcl(look-7, see-15)
dobj(see-15, me-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (VP (VBN put)
            (PP (IN on)
              (NP (DT any) (JJ other) (NN shape)))
            (PP (IN than)
              (NP (DT a) (NN wolf) (POS 's)))))))
    (NP (PRP she))
    (VP (MD would) (RB not)
      (VP (VB have)
        (VP (VBN seen)
          (NP (PRP me))
          (, ,)
          (PP (IN for)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (VP (VBG growing)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (NP
                                  (NP (PRP$ her) (JJ own) (NN shape) (NN inside))
                                  (PP (IN of)
                                    (NP (PRP her))))))))))))))))))
    (. .) ('' '')))

mark(put-4, If-1)
nsubj(put-4, I-2)
aux(put-4, had-3)
advcl(seen-17, put-4)
det(shape-8, any-6)
amod(shape-8, other-7)
prep_on(put-4, shape-8)
det(wolf-11, a-10)
prep_than(put-4, wolf-11)
possessive(wolf-11, 's-12)
nsubj(seen-17, she-13)
aux(seen-17, would-14)
neg(seen-17, not-15)
aux(seen-17, have-16)
root(ROOT-0, seen-17)
dobj(seen-17, me-18)
nsubj(is-22, that-21)
prepc_for(seen-17, is-22)
nsubj(growing-25, what-23)
nsubj(inside-31, what-23)
aux(growing-25, is-24)
ccomp(is-22, growing-25)
aux(inside-31, to-26)
cop(inside-31, be-27)
poss(inside-31, her-28)
amod(inside-31, own-29)
nn(inside-31, shape-30)
xcomp(growing-25, inside-31)
prep_of(inside-31, her-33)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBP mean)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (, ,) (`` ``)
    (S (CC but)
      (NP (PRP I))
      (VP (VBP suppose)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's) (RB all)
              (ADJP (JJ right)))))))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
ccomp(said-11, know-5)
dobj(mean-8, what-6)
nsubj(mean-8, you-7)
ccomp(know-5, mean-8)
root(ROOT-0, said-11)
nsubj(said-11, Diamond-12)
cc(suppose-17, but-15)
nsubj(suppose-17, I-16)
dep(said-11, suppose-17)
nsubj(right-21, it-18)
cop(right-21, 's-19)
advmod(right-21, all-20)
ccomp(suppose-17, right-21)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (ADVP (RB now))
      (VP (VBG climbing)
        (NP
          (NP (DT the) (NN slope))
          (PP (IN of)
            (NP (DT a) (JJ grassy) (NN ascent))))))
    (. .)))

nsubj(climbing-4, They-1)
aux(climbing-4, were-2)
advmod(climbing-4, now-3)
root(ROOT-0, climbing-4)
det(slope-6, the-5)
dobj(climbing-4, slope-6)
det(ascent-10, a-8)
amod(ascent-10, grassy-9)
prep_of(slope-6, ascent-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (NNP Primrose) (NNP Hill))
      (, ,)
      (PP (IN in)
        (NP (NN fact)))
      (, ,)
      (SBAR (IN although)
        (S
          (NP (NNP Diamond))
          (VP (VBD had)
            (ADVP (RB never))
            (VP (VBN heard)
              (PP (IN of)
                (NP (PRP it))))))))
    (. .)))

nsubj(Hill-4, It-1)
cop(Hill-4, was-2)
nn(Hill-4, Primrose-3)
root(ROOT-0, Hill-4)
prep_in(Hill-4, fact-7)
mark(heard-13, although-9)
nsubj(heard-13, Diamond-10)
aux(heard-13, had-11)
neg(heard-13, never-12)
advcl(Hill-4, heard-13)
prep_of(heard-13, it-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NN moment))
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBD reached)
            (NP (DT the) (JJ top) (, ,) (JJ North) (NN Wind))))))
    (VP (VBD stood)
      (CC and)
      (VBD turned)
      (NP
        (NP (PRP$ her) (NN face))
        (PP (IN towards)
          (NP (NNP London)))
        (SBAR
          (S
            (NP (DT The) (NNS stars))
            (VP (VBD were)
              (ADVP (RB still))
              (VP (VBG shining)
                (NP
                  (ADJP (JJ clear)
                    (CC and)
                    (JJ cold))
                  (NN overhead))))))))
    (. .)))

det(moment-2, The-1)
nsubj(stood-10, moment-2)
nsubj(turned-12, moment-2)
nsubj(reached-4, they-3)
rcmod(moment-2, reached-4)
det(Wind-9, the-5)
amod(Wind-9, top-6)
amod(Wind-9, North-8)
dobj(reached-4, Wind-9)
root(ROOT-0, stood-10)
conj_and(stood-10, turned-12)
poss(face-14, her-13)
dobj(stood-10, face-14)
prep_towards(face-14, London-16)
det(stars-18, The-17)
nsubj(shining-21, stars-18)
aux(shining-21, were-19)
advmod(shining-21, still-20)
rcmod(face-14, shining-21)
amod(overhead-25, clear-22)
conj_and(clear-22, cold-24)
amod(overhead-25, cold-24)
dobj(shining-21, overhead-25)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was) (RB not)
      (NP (DT a) (NN cloud)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN seen)))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(was-2, not-3)
det(cloud-5, a-4)
nsubj(was-2, cloud-5)
aux(seen-8, to-6)
auxpass(seen-8, be-7)
vmod(cloud-5, seen-8)

(ROOT
  (S
    (S
      (NP (DT The) (NN air))
      (VP (VBD was)
        (ADJP (JJ sharp))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Diamond))
      (VP (VBD did) (RB not)
        (VP (VB find)
          (S
            (NP (PRP it))
            (ADJP (JJ cold))))))
    (. .)))

det(air-2, The-1)
nsubj(sharp-4, air-2)
cop(sharp-4, was-3)
root(ROOT-0, sharp-4)
nsubj(find-10, Diamond-7)
aux(find-10, did-8)
neg(find-10, not-9)
conj_but(sharp-4, find-10)
nsubj(cold-12, it-11)
xcomp(find-10, cold-12)

(ROOT
  (SINV (`` ``)
    (FRAG
      (ADVP (RB Now)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (DT the) (NN lady))
      (, ,) (`` ``)
      (S
        (SBAR
          (WHNP (WDT whatever))
          (S
            (NP (PRP you))
            (VP (VBP do))))
        (, ,)
        (VP (VB do) (RB not)
          (VP (VB let)
            (S
              (NP (PRP$ my) (NN hand))
              (VP (VB go)))))))
    (. .)))

dep(said-5, Now-2)
root(ROOT-0, said-5)
det(lady-7, the-6)
nsubj(said-5, lady-7)
dobj(do-12, whatever-10)
nsubj(do-12, you-11)
dep(let-16, do-12)
aux(let-16, do-14)
neg(let-16, not-15)
dep(lady-7, let-16)
poss(hand-18, my-17)
nsubj(go-19, hand-18)
ccomp(let-16, go-19)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD might)
        (VP (VB have)
          (VP (VBN lost)
            (NP (PRP you))
            (NP (DT the) (JJ last) (NN time))
            (, ,)
            (SBAR (RB only)
              (S
                (NP (PRP I))
                (VP (VBD was) (RB not)
                  (VP
                    (PP (IN in)
                      (NP (DT a) (NN hurry)))
                    (ADVP (RB then))))))))))
    (: :)
    (S
      (ADVP (RB now))
      (NP (PRP I))
      (VP (VBP am)
        (PP (IN in)
          (NP (DT a) (NN hurry)))))
    (. .) ('' '')))

nsubj(lost-4, I-1)
aux(lost-4, might-2)
aux(lost-4, have-3)
root(ROOT-0, lost-4)
iobj(lost-4, you-5)
det(time-8, the-6)
amod(time-8, last-7)
dobj(lost-4, time-8)
advmod(in-14, only-10)
nsubj(in-14, I-11)
aux(in-14, was-12)
neg(in-14, not-13)
dep(lost-4, in-14)
det(hurry-16, a-15)
pobj(in-14, hurry-16)
advmod(in-14, then-17)
advmod(am-21, now-19)
nsubj(am-21, I-20)
parataxis(lost-4, am-21)
det(hurry-24, a-23)
prep_in(am-21, hurry-24)

(ROOT
  (S (CC Yet)
    (NP (PRP she))
    (VP (VBD stood)
      (ADVP (RB still))
      (PP (IN for)
        (NP (DT a) (NN moment))))
    (. .)))

cc(stood-3, Yet-1)
nsubj(stood-3, she-2)
root(ROOT-0, stood-3)
advmod(stood-3, still-4)
det(moment-7, a-6)
prep_for(stood-3, moment-7)

(ROOT
  (NP (NNP CHAPTER) (NNP IV) (. .)))

nn(IV-2, CHAPTER-1)
root(ROOT-0, IV-2)

(ROOT
  (S
    (NP
      (NP (NNP NORTH) (NNP WIND) (NNP AND))
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD stood)
            (S
              (VP (VBG looking)
                (PP (IN towards)
                  (NP (NNP London) (, ,) (NNP Diamond)))))))))
    (VP (VBD saw)
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (VBD was)
            (VP (VBG trembling))))))
    (. .)))

nn(AND-3, NORTH-1)
nn(AND-3, WIND-2)
nsubj(saw-12, AND-3)
mark(stood-6, as-4)
nsubj(stood-6, she-5)
rcmod(AND-3, stood-6)
xcomp(stood-6, looking-7)
nn(Diamond-11, London-9)
prep_towards(looking-7, Diamond-11)
root(ROOT-0, saw-12)
mark(trembling-16, that-13)
nsubj(trembling-16, she-14)
aux(trembling-16, was-15)
ccomp(saw-12, trembling-16)

(ROOT
  (X (`` ``)
    (NP
      (SQ (VBP Are)
        (NP (PRP you)))
      (VP (VB cold)))
    (, ,)
    (NP
      (NP (NNP North))
      (VP (VBN Wind)))
    (. ?) ('' '')))

dep(cold-4, Are-2)
nsubj(Are-2, you-3)
dep(North-6, cold-4)
root(ROOT-0, North-6)
vmod(North-6, Wind-7)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH No))
      (, ,)
      (NP (NNP Diamond)))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered) (, ,)
      (S
        (VP (VBG looking)
          (PRT (RP down))
          (PP (IN upon)
            (NP (PRP him)))
          (PP (IN with)
            (NP
              (NP (DT a) (NN smile))
              (: ;) (`` ``)
              (S
                (NP (PRP I))
                (VP (VBP am)
                  (ADVP (RB only))
                  (VP (VBG getting)
                    (ADJP (JJ ready)
                      (PP (TO to)
                        (NP
                          (NP (NN sweep) (CD one))
                          (PP (IN of)
                            (NP (PRP$ my) (NNS rooms))))))))))))))
    (. .)))

discourse(Diamond-4, No-2)
dep(answered-8, Diamond-4)
nsubj(answered-8, she-7)
root(ROOT-0, answered-8)
xcomp(answered-8, looking-10)
prt(looking-10, down-11)
prep_upon(looking-10, him-13)
det(smile-16, a-15)
prep_with(looking-10, smile-16)
nsubj(ready-23, I-19)
aux(ready-23, am-20)
advmod(ready-23, only-21)
dep(ready-23, getting-22)
dep(smile-16, ready-23)
prep_to(ready-23, sweep-25)
num(sweep-25, one-26)
poss(rooms-29, my-28)
prep_of(sweep-25, rooms-29)

(ROOT
  (S
    (NP (DT Those)
      (ADJP (JJ careless) (, ,) (JJ greedy) (, ,) (JJ untidy))
      (NNS children))
    (VP (VBP make)
      (NP (PRP it))
      (PP (IN in)
        (NP (PDT such) (DT a) (NN mess))))
    (. .) ('' '')))

det(children-7, Those-1)
amod(untidy-6, careless-2)
amod(untidy-6, greedy-4)
amod(children-7, untidy-6)
nsubj(make-8, children-7)
root(ROOT-0, make-8)
dobj(make-8, it-9)
predet(mess-13, such-11)
det(mess-13, a-12)
prep_in(make-8, mess-13)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP she))
        (VP (VBD spoke))))
    (NP (PRP he))
    (VP (MD could)
      (VP (VB have)
        (VP (VBN told)
          (PP (IN by)
            (NP (PRP$ her) (NN voice)))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBD had) (RB not)
                (VP (VBN seen)
                  (PP (IN with)
                    (NP (PRP$ his) (NNS eyes)))))))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP she))
              (VP (VBD was)
                (VP (VBG growing)
                  (ADJP (JJR larger)
                    (CC and)
                    (JJR larger)))))))))
    (. .)))

mark(spoke-3, As-1)
nsubj(spoke-3, she-2)
advcl(told-7, spoke-3)
nsubj(told-7, he-4)
aux(told-7, could-5)
aux(told-7, have-6)
root(ROOT-0, told-7)
poss(voice-10, her-9)
prep_by(told-7, voice-10)
mark(seen-16, if-12)
nsubj(seen-16, he-13)
aux(seen-16, had-14)
neg(seen-16, not-15)
advcl(told-7, seen-16)
poss(eyes-19, his-18)
prep_with(seen-16, eyes-19)
mark(growing-24, that-21)
nsubj(growing-24, she-22)
aux(growing-24, was-23)
ccomp(told-7, growing-24)
acomp(growing-24, larger-25)
acomp(growing-24, larger-27)
conj_and(larger-25, larger-27)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NN head))
      (VP (VBD went)
        (ADVP (RB up)
          (CC and)
          (RB up))
        (PP (IN towards)
          (NP (DT the) (NNS stars)))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD grew) (, ,)
            (S
              (ADVP (RB still))
              (VP (VBG trembling)
                (PP (IN through)
                  (NP (PDT all) (PRP$ her) (NN body))))))))
      (, ,)
      (NP (PRP$ her) (NN hair))
      (ADVP (RB also))
      (VP
        (VP (VBD grew) (: --)
          (S
            (UCP
              (ADJP
                (ADJP (JJR longer))
                (CC and)
                (ADJP (JJR longer)))
              (, ,)
              (CC and)
              (VP (VBD lifted)
                (NP (PRP itself))
                (PP (IN from)
                  (NP (PRP$ her) (NN head)))))))
        (, ,)
        (CC and)
        (VP (VBD went)
          (PRT (RP out))
          (PP (IN in)
            (NP (JJ black) (NNS waves))))))
    (. .)))

poss(head-2, Her-1)
nsubj(went-3, head-2)
root(ROOT-0, went-3)
advmod(went-3, up-4)
advmod(went-3, up-6)
conj_and(up-4, up-6)
det(stars-9, the-8)
prep_towards(went-3, stars-9)
mark(grew-14, as-12)
nsubj(grew-14, she-13)
advcl(grew-26, grew-14)
advmod(trembling-17, still-16)
xcomp(grew-14, trembling-17)
predet(body-21, all-19)
poss(body-21, her-20)
prep_through(trembling-17, body-21)
poss(hair-24, her-23)
nsubj(grew-26, hair-24)
nsubj(went-40, hair-24)
advmod(grew-26, also-25)
conj_and(went-3, grew-26)
parataxis(grew-26, longer-28)
parataxis(grew-26, longer-30)
conj_and(longer-28, longer-30)
parataxis(grew-26, lifted-33)
conj_and(longer-28, lifted-33)
dobj(lifted-33, itself-34)
poss(head-37, her-36)
prep_from(lifted-33, head-37)
conj_and(went-3, went-40)
conj_and(grew-26, went-40)
prt(went-40, out-41)
amod(waves-44, black-43)
prep_in(went-40, waves-44)

(ROOT
  (S
    (S
      (NP (DT The) (JJ next) (NN moment))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (NP (PRP it))
      (VP (VBD fell)
        (ADVP (RB back))
        (PP (IN around)
          (NP (PRP her)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD grew)
        (ADJP (JJR less)
          (CC and)
          (JJR less))
        (SBAR (IN till)
          (S
            (NP (PRP she))
            (VP (VBD was)
              (NP (RB only) (DT a) (JJ tall) (NN woman)))))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, next-2)
nsubj(fell-8, moment-3)
advmod(fell-8, however-5)
nsubj(fell-8, it-7)
root(ROOT-0, fell-8)
advmod(fell-8, back-9)
prep_around(fell-8, her-11)
nsubj(grew-15, she-14)
conj_and(fell-8, grew-15)
acomp(grew-15, less-16)
acomp(grew-15, less-18)
conj_and(less-16, less-18)
mark(woman-25, till-19)
nsubj(woman-25, she-20)
cop(woman-25, was-21)
advmod(woman-25, only-22)
det(woman-25, a-23)
amod(woman-25, tall-24)
advcl(grew-15, woman-25)

(ROOT
  (S (RB Then)
    (NP (PRP she))
    (VP
      (VP (VBD put)
        (NP (PRP$ her) (NNS hands))
        (PP (IN behind)
          (NP (PRP$ her) (NN head))))
      (, ,)
      (CC and)
      (VP (VBD gathered)
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP (PRP$ her) (NN hair)))))
      (, ,)
      (CC and)
      (VP (VBD began)
        (S
          (VP
            (VP (VBG weaving))
            (CC and)
            (VP (VBG knotting)
              (NP (PRP it))
              (ADVP (RB together)))))))
    (. .)))

advmod(put-3, Then-1)
nsubj(put-3, she-2)
nsubj(gathered-11, she-2)
nsubj(began-18, she-2)
root(ROOT-0, put-3)
poss(hands-5, her-4)
dobj(put-3, hands-5)
poss(head-8, her-7)
prep_behind(put-3, head-8)
conj_and(put-3, gathered-11)
dobj(gathered-11, some-12)
poss(hair-15, her-14)
prep_of(some-12, hair-15)
conj_and(put-3, began-18)
ccomp(began-18, weaving-19)
ccomp(began-18, knotting-21)
conj_and(weaving-19, knotting-21)
dobj(knotting-21, it-22)
advmod(knotting-21, together-23)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN done)))))
      (, ,)
      (NP (PRP she))
      (VP
        (VP (VBZ bent)
          (PRT (VBP down))
          (NP (PRP$ her) (JJ beautiful) (NN face) (NN close))
          (PP (TO to)
            (NP (PRP$ his))))
        (, ,)
        (CC and)
        (VP (VBD said) (: --)
          (S (`` ``)
            (NP (NNP Diamond))
            (, ,)
            (NP (PRP I))
            (VP (VBP am)
              (ADJP (JJ afraid)
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD would) (RB not)
                      (VP (VB keep)
                        (NP
                          (NP (NN hold))
                          (PP (IN of)
                            (NP (PRP me))))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBD were)
              (S
                (VP (TO to)
                  (VP (VB drop)
                    (NP (PRP you))))))))
        (, ,)
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (MD might)
                  (VP (VB happen))))))))
      (: ;) (RB so)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN been)
            (VP (VBG making)
              (NP
                (NP (DT a) (NN place))
                (PP (IN for)
                  (NP (PRP you))))
              (PP (IN in)
                (NP (PRP$ my) (NN hair))))))))
    (. .)))

advmod(done-4, When-1)
nsubj(done-4, she-2)
aux(done-4, had-3)
advcl(bent-7, done-4)
nsubj(bent-7, she-6)
nsubj(said-17, she-6)
root(ROOT-0, bent-7)
prt(bent-7, down-8)
poss(close-12, her-9)
amod(close-12, beautiful-10)
nn(close-12, face-11)
dobj(bent-7, close-12)
prep_to(bent-7, his-14)
conj_and(bent-7, said-17)
nsubj(afraid-24, Diamond-20)
nsubj(afraid-24, I-22)
cop(afraid-24, am-23)
ccomp(said-17, afraid-24)
parataxis(said-17, afraid-24)
nsubj(keep-28, you-25)
aux(keep-28, would-26)
neg(keep-28, not-27)
ccomp(afraid-24, keep-28)
dobj(keep-28, hold-29)
prep_of(hold-29, me-31)
mark(were-36, if-34)
nsubj(were-36, I-35)
nsubj(drop-38, I-35)
advcl(know-44, were-36)
aux(drop-38, to-37)
xcomp(were-36, drop-38)
dobj(drop-38, you-39)
nsubj(know-44, I-41)
aux(know-44, do-42)
neg(know-44, n't-43)
conj_and(bent-7, know-44)
nsubj(happen-47, what-45)
aux(happen-47, might-46)
ccomp(know-44, happen-47)
advmod(know-44, so-49)
nsubj(making-53, I-50)
aux(making-53, have-51)
aux(making-53, been-52)
parataxis(know-44, making-53)
det(place-55, a-54)
dobj(making-53, place-55)
prep_for(place-55, you-57)
poss(hair-60, my-59)
prep_in(making-53, hair-60)

(ROOT
  (S
    (VP (VB Come))
    (. .) ('' '')))

root(ROOT-0, Come-1)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (VBD held)
        (PRT (RP out))
        (NP (PRP$ his) (NNS arms))
        (, ,)
        (PP (IN for) (IN with)
          (NP
            (NP (DT that) (JJ grand) (NN face))
            (VP (VBG looking)
              (PP (IN at)
                (NP (PRP him))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD believed)
      (PP (IN like)
        (NP (DT a) (NN baby))))
    (. .)))

nsubj(held-2, Diamond-1)
ccomp(believed-17, held-2)
prt(held-2, out-3)
poss(arms-5, his-4)
dobj(held-2, arms-5)
dep(held-2, for-7)
det(face-11, that-9)
amod(face-11, grand-10)
prep_with(held-2, face-11)
vmod(face-11, looking-12)
prep_at(looking-12, him-14)
nsubj(believed-17, he-16)
root(ROOT-0, believed-17)
det(baby-20, a-19)
prep_like(believed-17, baby-20)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD took)
        (NP (PRP him))
        (PP (IN in)
          (NP (PRP$ her) (NNS hands))))
      (, ,)
      (VP (VBD threw)
        (NP (PRP him))
        (PP (IN over)
          (NP (PRP$ her) (NN shoulder))))
      (, ,)
      (CC and)
      (VP (VBD said) (, ,)
        (S (`` ``)
          (S
            (VP (VB Get)
              (PRT (RP in))))
          (, ,)
          (S
            (VP (VBG Diamond))))))
    (. .) ('' '')))

nsubj(took-2, She-1)
nsubj(threw-8, She-1)
nsubj(said-15, She-1)
root(ROOT-0, took-2)
dobj(took-2, him-3)
poss(hands-6, her-5)
prep_in(took-2, hands-6)
conj_and(took-2, threw-8)
dobj(threw-8, him-9)
poss(shoulder-12, her-11)
prep_over(threw-8, shoulder-12)
conj_and(took-2, said-15)
dep(said-15, Get-18)
prt(Get-18, in-19)
parataxis(Get-18, Diamond-21)

(ROOT
  (S (CC And)
    (S
      (NP (NNP Diamond))
      (VP (VBD parted)
        (NP (PRP$ her) (NN hair))
        (PP (IN with)
          (NP
            (NP (PRP$ his) (NNS hands))
            (, ,)
            (VP (VBN crept)
              (PP (IN between)))))))
    (, ,)
    (CC and)
    (S
      (NP (NN feeling) (RB about))
      (ADVP (RB soon))
      (VP (VBD found)
        (NP (DT the) (JJ woven) (NN nest))))
    (. .)))

nsubj(parted-3, Diamond-2)
root(ROOT-0, parted-3)
poss(hair-5, her-4)
dobj(parted-3, hair-5)
poss(hands-8, his-7)
prep_with(parted-3, hands-8)
vmod(hands-8, crept-10)
prep(crept-10, between-11)
nsubj(found-17, feeling-14)
advmod(feeling-14, about-15)
advmod(found-17, soon-16)
conj_and(parted-3, found-17)
det(nest-20, the-18)
amod(nest-20, woven-19)
dobj(found-17, nest-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB just))
      (PP
        (PP (IN like)
          (NP (DT a) (NN pocket)))
        (, ,)
        (CC or)
        (PP (IN like)
          (NP
            (NP (DT the) (NN shawl))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (JJ gipsy) (NNS women))
                (VP (VBP carry)
                  (NP (PRP$ their) (NNS children)))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(was-2, just-3)
det(pocket-6, a-5)
prep_like(was-2, pocket-6)
det(shawl-11, the-10)
prep_like(was-2, shawl-11)
conj_or(pocket-6, shawl-11)
prep_in(carry-16, shawl-11)
amod(women-15, gipsy-14)
nsubj(carry-16, women-15)
rcmod(shawl-11, carry-16)
poss(children-18, their-17)
dobj(carry-16, children-18)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP
      (VP (VBD put)
        (NP (PRP$ her) (NNS hands))
        (PP (TO to)
          (NP (PRP$ her) (NN back))))
      (, ,)
      (VP (VBD felt)
        (NP (DT all))
        (PP (IN about)
          (NP (DT the) (NN nest))))
      (, ,)
      (CC and)
      (VP
        (S
          (VP (VBG finding)
            (S
              (NP (PRP it))
              (ADJP (JJ safe)))))
        (, ,)
        (VP (VBD said) (: --) (`` ``)
          (SQ (VBP Are)
            (NP (PRP you))
            (ADJP (JJ comfortable) (, ,) (JJ Diamond))))))
    (. ?) ('' '')))

nn(Wind-2, North-1)
nsubj(put-3, Wind-2)
nsubj(felt-10, Wind-2)
nsubj(said-21, Wind-2)
root(ROOT-0, put-3)
poss(hands-5, her-4)
dobj(put-3, hands-5)
poss(back-8, her-7)
prep_to(put-3, back-8)
conj_and(put-3, felt-10)
dobj(felt-10, all-11)
det(nest-14, the-13)
prep_about(felt-10, nest-14)
xcomp(said-21, finding-17)
nsubj(safe-19, it-18)
xcomp(finding-17, safe-19)
conj_and(put-3, said-21)
cop(Diamond-28, Are-24)
nsubj(Diamond-28, you-25)
amod(Diamond-28, comfortable-26)
dep(said-21, Diamond-28)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Yes))
      (, ,)
      (ADVP (RB indeed)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Diamond))
    (. .)))

discourse(indeed-4, Yes-2)
dep(answered-7, indeed-4)
root(ROOT-0, answered-7)
dep(answered-7, Diamond-8)

(ROOT
  (S
    (NP (DT The) (JJ next) (NN moment))
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG rising)
        (PP (IN in)
          (NP (DT the) (NN air)))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, next-2)
nsubj(rising-6, moment-3)
nsubj(rising-6, he-4)
aux(rising-6, was-5)
root(ROOT-0, rising-6)
det(air-9, the-8)
prep_in(rising-6, air-9)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP (VBD grew)
      (S
        (VP (VBG towering)
          (PRT (RP up))
          (PP (TO to)
            (NP
              (NP (DT the) (NN place))
              (PP (IN of)
                (NP (DT the) (NNS clouds))))))))
    (. .)))

nn(Wind-2, North-1)
nsubj(grew-3, Wind-2)
root(ROOT-0, grew-3)
xcomp(grew-3, towering-4)
prt(towering-4, up-5)
det(place-8, the-7)
prep_to(towering-4, place-8)
det(clouds-11, the-10)
prep_of(place-8, clouds-11)

(ROOT
  (S
    (NP (PRP$ Her) (NN hair))
    (VP (VBD went)
      (NP (NN streaming))
      (PRT (RP out))
      (PP (IN from)
        (NP (PRP her)))
      (, ,)
      (SBAR (IN till)
        (S
          (NP (PRP it))
          (VP (VBD spread)
            (PP (IN like)
              (NP (DT a) (NN mist)))
            (PP (IN over)
              (NP (DT the) (NNS stars)))))))
    (. .)))

poss(hair-2, Her-1)
nsubj(went-3, hair-2)
root(ROOT-0, went-3)
dobj(went-3, streaming-4)
prt(went-3, out-5)
prep_from(went-3, her-7)
mark(spread-11, till-9)
nsubj(spread-11, it-10)
advcl(went-3, spread-11)
det(mist-14, a-13)
prep_like(spread-11, mist-14)
det(stars-17, the-16)
prep_over(spread-11, stars-17)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBG flung)
      (NP (PRP herself))
      (ADVP (RB abroad))
      (PP (IN in)
        (NP (NN space))))
    (. .)))

nsubj(flung-2, She-1)
root(ROOT-0, flung-2)
dobj(flung-2, herself-3)
advmod(flung-2, abroad-4)
prep_in(flung-2, space-6)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD held)
      (PP (IN on) (IN by)
        (NP
          (NP (CD two))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ twisted) (NNS ropes))
              (SBAR
                (WHNP
                  (WHNP (WDT which))
                  (, ,)
                  (NP (NN parted)
                    (CC and)
                    (NN interwoven))
                  (, ,))
                (S
                  (VP (VBD formed)
                    (NP (PRP$ his) (NN shelter))
                    (, ,)
                    (SBAR (IN for)
                      (S
                        (NP (PRP he))
                        (VP (MD could) (RB not)
                          (VP (VB help)
                            (S
                              (VP (VBG being)
                                (ADJP
                                  (NP (DT a) (RB little))
                                  (JJ afraid))))))))))))))))
    (. .)))

nsubj(held-2, Diamond-1)
root(ROOT-0, held-2)
dep(held-2, on-3)
prep_by(held-2, two-5)
det(ropes-9, the-7)
amod(ropes-9, twisted-8)
prep_of(two-5, ropes-9)
nsubj(formed-16, ropes-9)
appos(which-10, parted-12)
appos(which-10, interwoven-14)
conj_and(parted-12, interwoven-14)
rcmod(ropes-9, formed-16)
poss(shelter-18, his-17)
dobj(formed-16, shelter-18)
mark(help-24, for-20)
nsubj(help-24, he-21)
aux(help-24, could-22)
neg(help-24, not-23)
advcl(formed-16, help-24)
cop(afraid-28, being-25)
det(little-27, a-26)
npadvmod(afraid-28, little-27)
xcomp(help-24, afraid-28)

(ROOT
  (S
    (ADVP (RB As) (RB soon)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN come)
              (PP (TO to)
                (NP (PRP himself))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD peeped)
      (PP (IN through)
        (NP (DT the) (JJ woven) (NNS meshes)))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD did) (RB not)
            (VP (VB dare)
              (S
                (VP (TO to)
                  (VP (VB look)
                    (PRT (RP over))
                    (NP
                      (NP (DT the) (NN top))
                      (PP (IN of)
                        (NP (DT the) (NN nest))))))))))))
    (. .)))

advmod(soon-2, As-1)
advmod(peeped-11, soon-2)
mark(come-6, as-3)
nsubj(come-6, he-4)
aux(come-6, had-5)
ccomp(soon-2, come-6)
prep_to(come-6, himself-8)
nsubj(peeped-11, he-10)
root(ROOT-0, peeped-11)
det(meshes-15, the-13)
amod(meshes-15, woven-14)
prep_through(peeped-11, meshes-15)
mark(dare-21, for-17)
nsubj(dare-21, he-18)
nsubj(look-23, he-18)
aux(dare-21, did-19)
neg(dare-21, not-20)
advcl(peeped-11, dare-21)
aux(look-23, to-22)
xcomp(dare-21, look-23)
prt(look-23, over-24)
det(top-26, the-25)
dobj(look-23, top-26)
det(nest-29, the-28)
prep_of(top-26, nest-29)

(ROOT
  (S
    (NP (DT The) (NN earth))
    (VP (VBD was)
      (VP (VBG rushing)
        (PP (RB past) (IN like)
          (NP
            (NP (DT a) (NN river))
            (CC or)
            (NP (DT a) (NN sea))))
        (PP (IN below)
          (NP (PRP him)))))
    (. .)))

det(earth-2, The-1)
nsubj(rushing-4, earth-2)
aux(rushing-4, was-3)
root(ROOT-0, rushing-4)
advmod(rushing-4, past-5)
det(river-8, a-7)
prep_like(rushing-4, river-8)
det(sea-11, a-10)
prep_like(rushing-4, sea-11)
conj_or(river-8, sea-11)
prep_below(rushing-4, him-13)

(ROOT
  (S
    (NP
      (NP (NNP Trees))
      (CC and)
      (NP (NN water)
        (CC and)
        (JJ green) (NN grass)))
    (VP (VBN hurried)
      (PRT (RP away))
      (PP (IN beneath)))
    (. .)))

nsubj(hurried-7, Trees-1)
nn(grass-6, water-3)
conj_and(water-3, green-5)
nn(grass-6, green-5)
conj_and(Trees-1, grass-6)
nsubj(hurried-7, grass-6)
root(ROOT-0, hurried-7)
prt(hurried-7, away-8)
prep(hurried-7, beneath-9)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (JJ great) (NN roar))
        (PP (IN of)
          (NP (JJ wild) (NNS animals))))
      (VP (VBD rose)
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP (VBD rushed)
              (PP (IN over)
                (NP (DT the) (NNP Zoological) (NNPS Gardens)))
              (, ,)
              (S
                (ADJP (JJ mixed)))
              (PP (IN with)
                (NP
                  (NP
                    (NP (DT a) (NN chattering))
                    (PP (IN of)
                      (NP (NNS monkeys))))
                  (CC and)
                  (NP
                    (NP (DT a) (NN screaming))
                    (PP (IN of)
                      (NP (NNS birds)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD died)
        (PRT (RP away))
        (PP (IN in)
          (NP
            (NP (DT a) (NN moment))
            (PP (IN behind)
              (NP (PRP them)))))))
    (. .)))

det(roar-3, A-1)
amod(roar-3, great-2)
nsubj(rose-7, roar-3)
amod(animals-6, wild-5)
prep_of(roar-3, animals-6)
root(ROOT-0, rose-7)
mark(rushed-10, as-8)
nsubj(rushed-10, they-9)
advcl(rose-7, rushed-10)
det(Gardens-14, the-12)
nn(Gardens-14, Zoological-13)
prep_over(rushed-10, Gardens-14)
dep(rushed-10, mixed-16)
det(chattering-19, a-18)
prep_with(rushed-10, chattering-19)
prep_of(chattering-19, monkeys-21)
det(screaming-24, a-23)
prep_with(rushed-10, screaming-24)
conj_and(chattering-19, screaming-24)
prep_of(screaming-24, birds-26)
nsubj(died-30, it-29)
conj_but(rose-7, died-30)
prt(died-30, away-31)
det(moment-34, a-33)
prep_in(died-30, moment-34)
prep_behind(moment-34, them-36)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (NN nothing))
        (PP (CC but)
          (NP
            (NP (DT the) (NNS roofs))
            (PP (IN of)
              (NP (NNS houses)))))
        (, ,)
        (VP (VBG sweeping)
          (PRT (RP along))
          (PP (IN like)
            (NP
              (NP (DT a) (JJ great) (NN torrent))
              (PP (IN of)
                (NP (NNS stones)
                  (CC and)
                  (NNS rocks))))))))
    (. .)))

cc(was-4, And-1)
advmod(was-4, now-2)
expl(was-4, there-3)
root(ROOT-0, was-4)
nsubj(was-4, nothing-5)
prep(nothing-5, but-6)
det(roofs-8, the-7)
pobj(but-6, roofs-8)
prep_of(roofs-8, houses-10)
vmod(nothing-5, sweeping-12)
prt(sweeping-12, along-13)
det(torrent-17, a-15)
amod(torrent-17, great-16)
prep_like(sweeping-12, torrent-17)
prep_of(torrent-17, stones-19)
prep_of(torrent-17, rocks-21)
conj_and(stones-19, rocks-21)

(ROOT
  (S
    (S
      (NP (NNS Chimney-pots))
      (VP (VBD fell)))
    (, ,)
    (CC and)
    (S
      (NP (NNS tiles))
      (VP (VBD flew)
        (PP (IN from)
          (NP (DT the) (NNS roofs)))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD looked)
        (PP (TO to)
          (NP (PRP him)))
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP they))
            (VP (VBD were)
              (VP (VBN left)
                (PRT (RP behind))
                (PP (IN by)
                  (NP
                    (NP (DT the) (NNS roofs))
                    (CC and)
                    (NP (DT the) (NNS chimneys))))
                (SBAR (IN as)
                  (S
                    (NP (PRP they))
                    (VP (VBD scudded)
                      (PRT (RP away)))))))))))
    (. .)))

nsubj(fell-2, Chimney-pots-1)
root(ROOT-0, fell-2)
nsubj(flew-6, tiles-5)
conj_and(fell-2, flew-6)
det(roofs-9, the-8)
prep_from(flew-6, roofs-9)
nsubj(looked-13, it-12)
conj_but(fell-2, looked-13)
prep_to(looked-13, him-15)
advmod(left-20, as-16)
mark(left-20, if-17)
nsubjpass(left-20, they-18)
auxpass(left-20, were-19)
advcl(looked-13, left-20)
prt(left-20, behind-21)
det(roofs-24, the-23)
agent(left-20, roofs-24)
det(chimneys-27, the-26)
agent(left-20, chimneys-27)
conj_and(roofs-24, chimneys-27)
mark(scudded-30, as-28)
nsubj(scudded-30, they-29)
advcl(left-20, scudded-30)
prt(scudded-30, away-31)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP (DT a) (JJ great) (NN roaring))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (DT the) (NN wind))
            (VP (VBD was)
              (VP (VBG dashing)
                (PP (IN against)
                  (NP (NNP London)))
                (PP (IN like)
                  (NP (DT a) (NN sea)))))))))
    (: ;)
    (CC but)
    (S
      (PP (IN at)
        (NP
          (NP (NNP North) (NNP Wind) (POS 's))
          (NN back)))
      (NP
        (NP (NNP Diamond))
        (, ,)
        (PP (IN of)
          (NP (NN course)))
        (, ,))
      (VP (VBD felt)
        (NP
          (NP (NN nothing))
          (PP (IN of)
            (NP (PRP it) (DT all))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(roaring-5, a-3)
amod(roaring-5, great-4)
nsubj(was-2, roaring-5)
mark(dashing-11, for-7)
det(wind-9, the-8)
nsubj(dashing-11, wind-9)
aux(dashing-11, was-10)
advcl(was-2, dashing-11)
prep_against(dashing-11, London-13)
det(sea-16, a-15)
prep_like(dashing-11, sea-16)
nn(Wind-21, North-20)
poss(back-23, Wind-21)
prep_at(felt-29, back-23)
nsubj(felt-29, Diamond-24)
prep_of(Diamond-24, course-27)
conj_but(was-2, felt-29)
dobj(felt-29, nothing-30)
prep_of(nothing-30, it-32)
det(it-32, all-33)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (PP (IN in)
        (NP (DT a) (JJ perfect) (NN calm))))
    (. .)))

nsubj(was-2, He-1)
root(ROOT-0, was-2)
det(calm-6, a-4)
amod(calm-6, perfect-5)
prep_in(was-2, calm-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD could)
      (VP (VB hear)
        (NP
          (NP (DT the) (NN sound))
          (PP (IN of)
            (NP (PRP it)))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was)
                (NP (DT all))))))))
    (. .)))

nsubj(hear-3, He-1)
aux(hear-3, could-2)
root(ROOT-0, hear-3)
det(sound-5, the-4)
dobj(hear-3, sound-5)
nsubj(all-11, sound-5)
prep_of(sound-5, it-7)
cop(all-11, was-10)
rcmod(sound-5, all-11)

(ROOT
  (S
    (PP (IN By)
      (PRN (CC and)
        (PP (IN by))))
    (NP (PRP he))
    (VP
      (VP (VBD raised)
        (NP (PRP himself)))
      (CC and)
      (VP (VBD looked)
        (PRT (RP over))
        (NP
          (NP (DT the) (NN edge))
          (PP (IN of)
            (NP (PRP$ his) (NN nest))))))
    (. .)))

prep(raised-5, By-1)
cc(by-3, and-2)
dep(By-1, by-3)
nsubj(raised-5, he-4)
nsubj(looked-8, he-4)
root(ROOT-0, raised-5)
dobj(raised-5, himself-6)
conj_and(raised-5, looked-8)
prt(looked-8, over-9)
det(edge-11, the-10)
dobj(looked-8, edge-11)
poss(nest-14, his-13)
prep_of(edge-11, nest-14)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP
        (NP (DT the) (NNS houses))
        (VP
          (VP (VBG rushing)
            (PRT (RP up)))
          (CC and)
          (VP (VBG shooting)
            (PRT (RP away))
            (PP (IN below)
              (NP (PRP him)))
            (, ,)
            (PP (IN like)
              (NP
                (NP (DT a) (JJ fierce) (NN torrent))
                (PP (IN of)
                  (NP
                    (NP (NNS rocks))
                    (PP (RB instead) (IN of)
                      (NP (NN water)))))))))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
det(houses-4, the-3)
nsubj(were-2, houses-4)
dep(houses-4, rushing-5)
prt(rushing-5, up-6)
dep(houses-4, shooting-8)
conj_and(rushing-5, shooting-8)
prt(shooting-8, away-9)
prep_below(shooting-8, him-11)
det(torrent-16, a-14)
amod(torrent-16, fierce-15)
prep_like(shooting-8, torrent-16)
prep_of(torrent-16, rocks-18)
prep_instead_of(rocks-18, water-21)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP
        (VP (VBD looked)
          (PRT (RP up))
          (PP (TO to)
            (NP (DT the) (NN sky))))
        (, ,)
        (CC but)
        (VP (MD could)
          (VP (VB see)
            (NP (DT no) (NNS stars))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBD were)
        (VP (VBN hidden)
          (PP (IN by)
            (NP
              (NP (DT the) (VBG blinding) (NNS masses))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN lady) (POS 's))
                  (NN hair)))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBN swept)
                    (PP (IN between))))))))))
    (. .)))

advmod(looked-3, Then-1)
nsubj(looked-3, he-2)
nsubj(see-11, he-2)
root(ROOT-0, looked-3)
prt(looked-3, up-4)
det(sky-7, the-6)
prep_to(looked-3, sky-7)
aux(see-11, could-10)
conj_but(looked-3, see-11)
neg(stars-13, no-12)
dobj(see-11, stars-13)
nsubjpass(hidden-17, they-15)
auxpass(hidden-17, were-16)
parataxis(looked-3, hidden-17)
det(masses-21, the-19)
amod(masses-21, blinding-20)
agent(hidden-17, masses-21)
nsubj(swept-28, masses-21)
prep_between(swept-28, masses-21)
det(lady-24, the-23)
poss(hair-26, lady-24)
prep_of(masses-21, hair-26)
rcmod(masses-21, swept-28)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB wonder)
            (SBAR (IN whether)
              (S
                (NP (PRP she))
                (VP (MD would)
                  (VP (VB hear)
                    (NP (PRP him))
                    (SBAR (IN if)
                      (S
                        (NP (PRP he))
                        (VP (VBD spoke))))))))))))
    (. .)))

nsubj(began-2, He-1)
nsubj(wonder-4, He-1)
root(ROOT-0, began-2)
aux(wonder-4, to-3)
xcomp(began-2, wonder-4)
mark(hear-8, whether-5)
nsubj(hear-8, she-6)
aux(hear-8, would-7)
ccomp(wonder-4, hear-8)
dobj(hear-8, him-9)
mark(spoke-12, if-10)
nsubj(spoke-12, he-11)
advcl(hear-8, spoke-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP (VB try)))
    (. .)))

nsubj(try-3, He-1)
aux(try-3, would-2)
root(ROOT-0, try-3)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Please))
      (, ,)
      (NP (NNP North) (NNP Wind)))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said))))
    (, ,) (`` ``)
    (NP (WDT what))
    (VP (VBZ is)
      (NP (DT that) (NN noise)))
    (. ?) ('' '')))

discourse(Wind-5, Please-2)
nn(Wind-5, North-4)
dep(noise-15, Wind-5)
nsubj(said-9, he-8)
parataxis(noise-15, said-9)
nsubj(noise-15, what-12)
cop(noise-15, is-13)
det(noise-15, that-14)
root(ROOT-0, noise-15)

(ROOT
  (S
    (PP (IN From)
      (NP
        (ADJP (JJ high)
          (PP (IN over)
            (NP
              (NP (PRP$ his) (NN head))
              (VP (VBD came)
                (NP
                  (NP (DT the) (NN voice))
                  (PP (IN of)
                    (NP (NNP North))))))))
        (NN Wind)))
    (, ,)
    (S
      (VP (VBG answering)
        (NP (PRP him))))
    (, ,)
    (VP (VBZ gently) (: --) (`` ``)
      (NP
        (NP (DT The) (NN noise))
        (PP (IN of)
          (NP (PRP$ my) (NN besom)))))
    (. .)))

amod(Wind-11, high-2)
poss(head-5, his-4)
prep_over(high-2, head-5)
vmod(head-5, came-6)
det(voice-8, the-7)
dobj(came-6, voice-8)
prep_of(voice-8, North-10)
prep_from(gently-16, Wind-11)
dep(gently-16, answering-13)
dobj(answering-13, him-14)
root(ROOT-0, gently-16)
det(noise-20, The-19)
dobj(gently-16, noise-20)
poss(besom-23, my-22)
prep_of(noise-20, besom-23)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (NP
          (NP (DT the) (JJ old) (NN woman))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ sweeps)
                (NP (DT the) (NNS cobwebs))
                (PP (IN from)
                  (NP (DT the) (NN sky)))))))))
    (: ;)
    (S
      (ADVP (RB only))
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ busy)
          (PP (IN with)
            (NP (DT the) (NN floor))))
        (ADVP (RB now))))
    (. .) ('' '')))

nsubj(woman-5, I-1)
cop(woman-5, am-2)
det(woman-5, the-3)
amod(woman-5, old-4)
root(ROOT-0, woman-5)
nsubj(sweeps-7, woman-5)
rcmod(woman-5, sweeps-7)
det(cobwebs-9, the-8)
dobj(sweeps-7, cobwebs-9)
det(sky-12, the-11)
prep_from(sweeps-7, sky-12)
advmod(busy-17, only-14)
nsubj(busy-17, I-15)
cop(busy-17, 'm-16)
parataxis(woman-5, busy-17)
det(floor-20, the-19)
prep_with(busy-17, floor-20)
advmod(busy-17, now-21)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (SBAR
          (S
            (NP (DT the) (NNS houses))
            (VP (VBP look)
              (SBAR (RB as) (IN if)
                (S
                  (NP (PRP they))
                  (VP (VBD were)
                    (VP (VBG running)
                      (PRT (RP away)))))))))))
    (. ?) ('' '')))

nsubj(makes-3, What-2)
root(ROOT-0, makes-3)
det(houses-5, the-4)
nsubj(look-6, houses-5)
ccomp(makes-3, look-6)
advmod(running-11, as-7)
mark(running-11, if-8)
nsubj(running-11, they-9)
aux(running-11, were-10)
advcl(look-6, running-11)
prt(running-11, away-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG sweeping)
        (ADVP (RB so) (RB fast))
        (PP (IN over)
          (NP (PRP them)))))
    (. .) ('' '')))

nsubj(sweeping-4, I-2)
aux(sweeping-4, am-3)
root(ROOT-0, sweeping-4)
advmod(fast-6, so-5)
advmod(sweeping-4, fast-6)
prep_over(sweeping-4, them-8)

(ROOT
  (S (`` ``)
    (S (CC But)
      (, ,)
      (S
        (VP
          (VP (VB please))
          (, ,)
          (NP
            (ADJP (JJ North))
            (NN Wind))))
      (, ,)
      (NP (PRP I))
      (VP (VBD knew)
        (SBAR
          (S
            (NP (NNP London))
            (VP (VBD was)
              (ADJP (RB very) (JJ big)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB know)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADJP (RB so) (JJ big))
                (PP (IN as)
                  (NP (DT this)))))))))
    (. .)))

dep(knew-10, please-4)
amod(Wind-7, North-6)
dobj(please-4, Wind-7)
nsubj(knew-10, I-9)
root(ROOT-0, knew-10)
nsubj(big-14, London-11)
cop(big-14, was-12)
advmod(big-14, very-13)
ccomp(knew-10, big-14)
nsubj(know-20, I-17)
aux(know-20, did-18)
neg(know-20, n't-19)
conj_but(knew-10, know-20)
nsubj(big-24, it-21)
cop(big-24, was-22)
advmod(big-24, so-23)
ccomp(know-20, big-24)
prep_as(big-24, this-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP we))
          (VP (MD should)
            (ADVP (RB never))
            (VP (VB get)
              (PRT (RP away))
              (PP (IN from)
                (NP (PRP it))))))))
    (. .) ('' '')))

nsubj(seems-2, It-1)
root(ROOT-0, seems-2)
advmod(get-8, as-3)
mark(get-8, if-4)
nsubj(get-8, we-5)
aux(get-8, should-6)
neg(get-8, never-7)
advcl(seems-2, get-8)
prep_away_from(get-8, it-11)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (VBP are)
        (VP (VBG going)
          (ADVP (RB round)
            (CC and)
            (RB round)))))
    (, ,)
    (ADVP (RB else))
    (S
      (NP (PRP we))
      (VP (MD should)
        (VP (VB have)
          (VP (VBN left)
            (NP (PRP it))
            (ADVP (RB long) (RB ago))))))
    (. .) ('' '')))

nsubj(going-4, We-2)
aux(going-4, are-3)
root(ROOT-0, going-4)
advmod(going-4, round-5)
advmod(going-4, round-7)
conj_and(round-5, round-7)
advmod(left-13, else-9)
nsubj(left-13, we-10)
aux(left-13, should-11)
aux(left-13, have-12)
parataxis(going-4, left-13)
dobj(left-13, it-14)
advmod(ago-16, long-15)
advmod(left-13, ago-16)

(ROOT
  (X (`` ``)
    (NP
      (SQ (VBZ Is)
        (NP (DT this))
        (ADVP (DT the) (NN way))
        (NP (PRP you)))
      (VP (VB sweep)))
    (, ,)
    (NP
      (NP (NNP North))
      (VP (VBN Wind)))
    (. ?) ('' '')))

cop(you-6, Is-2)
nsubj(you-6, this-3)
det(way-5, the-4)
advmod(you-6, way-5)
dep(sweep-7, you-6)
dep(North-9, sweep-7)
root(ROOT-0, North-9)
vmod(North-9, Wind-10)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP go)
        (ADVP (RB round)
          (CC and)
          (RB round))
        (PP (IN with)
          (NP (PRP$ my) (JJ great) (NN besom)))))
    (. .) ('' '')))

dep(go-5, Yes-2)
nsubj(go-5, I-4)
root(ROOT-0, go-5)
advmod(go-5, round-6)
advmod(go-5, round-8)
conj_and(round-6, round-8)
poss(besom-12, my-10)
amod(besom-12, great-11)
prep_with(go-5, besom-12)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Please))
      (, ,)
      (PRN
        (SINV (MD would)
          (NP (PRP you))
          (VP (VB mind)
            (S
              (VP (VBG going)
                (ADJP
                  (NP (DT a) (RB little))
                  (JJR slower))))
            (, ,)
            (PP (IN for)
              (NP (PRP I))))))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (DT the) (NNS streets)))))))
    (. ?) ('' '')))

discourse(want-14, Please-2)
aux(mind-6, would-4)
nsubj(mind-6, you-5)
parataxis(want-14, mind-6)
xcomp(mind-6, going-7)
det(little-9, a-8)
npadvmod(slower-10, little-9)
acomp(going-7, slower-10)
prep_for(mind-6, I-13)
root(ROOT-0, want-14)
aux(see-16, to-15)
xcomp(want-14, see-16)
det(streets-18, the-17)
dobj(see-16, streets-18)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD wo) (RB n't)
      (VP (VB see)
        (ADVP (RB much) (RB now))))
    (. .) ('' '')))

nsubj(see-5, You-2)
aux(see-5, wo-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
advmod(now-7, much-6)
advmod(see-5, now-7)

(ROOT
  (INTJ (`` ``) (UH Why) (. ?) ('' '')))

root(ROOT-0, Why-2)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (ADVP (RB nearly)))))
    (VP (VBD swept)
      (NP (PDT all) (DT the) (NNS people))
      (ADVP (RB home)))
    (. .) ('' '')))

mark(have-4, Because-2)
nsubj(have-4, I-3)
csubj(swept-6, have-4)
advmod(have-4, nearly-5)
root(ROOT-0, swept-6)
predet(people-9, all-7)
det(people-9, the-8)
dobj(swept-6, people-9)
advmod(swept-6, home-10)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD forgot))
      (, ,) ('' '')
      (VP (VBD said)
        (NP (NNP Diamond)))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADJP (JJ quiet)
          (PP (IN after)
            (NP
              (NP (DT that))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP he))
                  (VP (VBD did) (RB not)
                    (VP (VB want)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ troublesome))))))))))))))
    (. .)))

nsubj(forgot-2, I-1)
nsubj(said-5, I-1)
nsubj(quiet-10, I-1)
root(ROOT-0, forgot-2)
conj_and(forgot-2, said-5)
dobj(said-5, Diamond-6)
cop(quiet-10, was-9)
conj_and(forgot-2, quiet-10)
prep_after(quiet-10, that-12)
mark(want-18, for-14)
nsubj(want-18, he-15)
nsubj(troublesome-21, he-15)
aux(want-18, did-16)
neg(want-18, not-17)
rcmod(that-12, want-18)
aux(troublesome-21, to-19)
cop(troublesome-21, be-20)
xcomp(want-18, troublesome-21)

(ROOT
  (S (CC But)
    (S
      (NP (PRP she))
      (VP (VBD dropped)
        (NP (DT a) (JJ little))
        (PP (IN towards)
          (NP
            (NP (DT the) (NNS roofs))
            (PP (IN of)
              (NP (DT the) (NNS houses)))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Diamond))
      (VP (MD could)
        (VP (VB see)
          (PRT (RP down))
          (PP (IN into)
            (NP (DT the) (NNS streets))))))
    (. .)))

nsubj(dropped-3, she-2)
root(ROOT-0, dropped-3)
det(little-5, a-4)
dobj(dropped-3, little-5)
det(roofs-8, the-7)
prep_towards(dropped-3, roofs-8)
det(houses-11, the-10)
prep_of(roofs-8, houses-11)
nsubj(see-16, Diamond-14)
aux(see-16, could-15)
conj_and(dropped-3, see-16)
prt(see-16, down-17)
det(streets-20, the-19)
prep_into(see-16, streets-20)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP
        (ADJP (RB very) (JJ few))
        (NNS people))
      (PP (IN about))
      (, ,)
      (ADVP (RB though)))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
advmod(few-4, very-3)
amod(people-5, few-4)
nsubj(were-2, people-5)
prep(were-2, about-6)
advmod(were-2, though-8)

(ROOT
  (S
    (S
      (NP (DT The) (NNS lamps))
      (VP
        (VP (VBD flickered))
        (CC and)
        (VP (VBN flared)
          (ADVP (RB again)))))
    (, ,)
    (CC but)
    (S
      (NP (NN nobody))
      (VP (VBD seemed)
        (S
          (VP (TO to)
            (VP (VB want)
              (NP (PRP them)))))))
    (. .)))

det(lamps-2, The-1)
nsubj(flickered-3, lamps-2)
nsubj(flared-5, lamps-2)
root(ROOT-0, flickered-3)
conj_and(flickered-3, flared-5)
advmod(flared-5, again-6)
nsubj(seemed-10, nobody-9)
nsubj(want-12, nobody-9)
conj_but(flickered-3, seemed-10)
aux(want-12, to-11)
xcomp(seemed-10, want-12)
dobj(want-12, them-13)

(ROOT
  (S
    (ADVP (RB Suddenly))
    (NP (NNP Diamond))
    (VP (VBD espied)
      (NP
        (NP (DT a) (JJ little) (NN girl))
        (VP (VBG coming)
          (PP (IN along)
            (NP (DT a) (NN street))))))
    (. .)))

advmod(espied-3, Suddenly-1)
nsubj(espied-3, Diamond-2)
root(ROOT-0, espied-3)
det(girl-6, a-4)
amod(girl-6, little-5)
dobj(espied-3, girl-6)
vmod(girl-6, coming-7)
det(street-10, a-9)
prep_along(coming-7, street-10)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (ADVP (RB dreadfully))
        (VP (VBN blown)
          (PP (IN by)
            (NP (DT the) (NN wind))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT a) (NN broom))
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBD was)
              (VP (VBG trailing)
                (PP (IN behind)
                  (NP (PRP her))))))))
      (VP (VBD was)
        (ADJP (RB very) (JJ troublesome))))
    (. .)))

nsubjpass(blown-4, She-1)
auxpass(blown-4, was-2)
advmod(blown-4, dreadfully-3)
root(ROOT-0, blown-4)
det(wind-7, the-6)
agent(blown-4, wind-7)
det(broom-11, a-10)
nsubj(troublesome-19, broom-11)
nsubj(trailing-14, she-12)
aux(trailing-14, was-13)
rcmod(broom-11, trailing-14)
prep_behind(trailing-14, her-16)
cop(troublesome-19, was-17)
advmod(troublesome-19, very-18)
conj_and(blown-4, troublesome-19)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD seemed)
        (SBAR (RB as) (IN if)
          (S
            (NP (DT the) (NN wind))
            (VP (VBD had)
              (NP
                (NP (DT a) (NN spite))
                (PP (IN at)
                  (NP (PRP her)))))))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBD kept)
        (S
          (VP
            (VP (VBG worrying)
              (NP (PRP her))
              (PP (IN like)
                (NP (DT a) (JJ wild) (NN beast))))
            (, ,)
            (CC and)
            (VP (VBG tearing)
              (PP (IN at)
                (NP (PRP$ her) (NNS rags))))))))
    (. .)))

nsubj(seemed-2, It-1)
root(ROOT-0, seemed-2)
advmod(had-7, as-3)
mark(had-7, if-4)
det(wind-6, the-5)
nsubj(had-7, wind-6)
advcl(seemed-2, had-7)
det(spite-9, a-8)
dobj(had-7, spite-9)
prep_at(spite-9, her-11)
nsubj(kept-14, it-13)
parataxis(seemed-2, kept-14)
ccomp(kept-14, worrying-15)
dobj(worrying-15, her-16)
det(beast-20, a-18)
amod(beast-20, wild-19)
prep_like(worrying-15, beast-20)
ccomp(kept-14, tearing-23)
conj_and(worrying-15, tearing-23)
poss(rags-26, her-25)
prep_at(tearing-23, rags-26)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADJP (RB so) (JJ lonely))
      (ADVP (RB there)))
    (. !)))

nsubj(lonely-4, She-1)
cop(lonely-4, was-2)
advmod(lonely-4, so-3)
root(ROOT-0, lonely-4)
advmod(lonely-4, there-5)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (SBARQ
    (WHADVP (WRB please))
    (PRN (, ,)
      (S
        (NP (NNP North) (NNP Wind))
        (, ,) ('' '')
        (NP (PRP he))
        (VP (VBD cried)))
      (, ,))
    (`` ``)
    (SQ (MD wo) (RB n't)
      (NP (PRP you))
      (VP (VB help)
        (NP (DT that) (JJ little) (NN girl))))
    (. ?) ('' '')))

advmod(help-14, please-1)
nn(Wind-4, North-3)
nsubj(cried-8, Wind-4)
nsubj(cried-8, he-7)
dep(help-14, cried-8)
aux(help-14, wo-11)
neg(help-14, n't-12)
nsubj(help-14, you-13)
root(ROOT-0, help-14)
det(girl-17, that-15)
amod(girl-17, little-16)
dobj(help-14, girl-17)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No))
      (, ,)
      (NP (NNP Diamond)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD must) (RB n't)
        (VP (VB leave)
          (NP (PRP$ my) (NN work)))))
    (. .) ('' '')))

discourse(Diamond-4, No-2)
dep(leave-9, Diamond-4)
nsubj(leave-9, I-6)
aux(leave-9, must-7)
neg(leave-9, n't-8)
root(ROOT-0, leave-9)
poss(work-11, my-10)
dobj(leave-9, work-11)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB why))
    (SQ (MD should) (RB n't)
      (NP (PRP you))
      (VP (VB be)
        (ADJP (JJ kind)
          (PP (TO to)
            (NP (PRP her))))))
    (. ?) ('' '')))

cc(kind-8, But-2)
advmod(kind-8, why-3)
aux(kind-8, should-4)
neg(kind-8, n't-5)
nsubj(kind-8, you-6)
cop(kind-8, be-7)
root(ROOT-0, kind-8)
prep_to(kind-8, her-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ kind)
        (PP (TO to)
          (NP (PRP her)))))
    (. .)))

nsubj(kind-4, I-2)
cop(kind-4, am-3)
root(ROOT-0, kind-4)
prep_to(kind-4, her-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG sweeping)
        (NP (DT the) (JJ wicked) (NN smells))
        (PRT (RP away))))
    (. .) ('' '')))

nsubj(sweeping-3, I-1)
aux(sweeping-3, am-2)
root(ROOT-0, sweeping-3)
det(smells-6, the-4)
amod(smells-6, wicked-5)
dobj(sweeping-3, smells-6)
prt(sweeping-3, away-7)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP
        (ADJP (JJR kinder))
        (PP (TO to)
          (NP (PRP me))))
      (, ,)
      (S
        (ADJP (RB dear))
        (NP (NNP North) (NNP Wind))))
    (. .)))

cc(kinder-5, But-2)
nsubj(kinder-5, you-3)
cop(kinder-5, 're-4)
root(ROOT-0, kinder-5)
prep_to(kinder-5, me-7)
dep(kinder-5, dear-9)
nn(Wind-11, North-10)
dep(dear-9, Wind-11)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should) (RB n't)
      (NP (PRP you))
      (VP (VB be)
        (ADJP (RB as) (JJ kind)
          (PP (TO to)
            (NP (PRP her))))
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (PP (TO to)
                (NP (PRP me))))))))
    (. ?) ('' '')))

advmod(kind-7, Why-1)
aux(kind-7, should-2)
neg(kind-7, n't-3)
nsubj(kind-7, you-4)
cop(kind-7, be-5)
advmod(kind-7, as-6)
root(ROOT-0, kind-7)
prep_to(kind-7, her-9)
mark(are-12, as-10)
nsubj(are-12, you-11)
advcl(kind-7, are-12)
prep_to(are-12, me-14)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS reasons))
        (, ,)
        (NP (NNP Diamond))))
    (. .)))

expl(are-3, There-2)
root(ROOT-0, are-3)
nsubj(are-3, reasons-4)
appos(reasons-4, Diamond-6)

(ROOT
  (S
    (NP (NN Everybody))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (VP (VBN done)
          (PP (TO to)
            (NP
              (NP (DT all))
              (NP (DT the) (JJ same)))))))
    (. .)))

nsubjpass(done-5, Everybody-1)
aux(done-5, ca-2)
neg(done-5, n't-3)
auxpass(done-5, be-4)
root(ROOT-0, done-5)
prep_to(done-5, all-7)
det(same-9, the-8)
dep(all-7, same-9)

(ROOT
  (S
    (NP (NN Everybody))
    (VP (VBZ is) (RB not)
      (ADJP (JJ ready)
        (PP (IN for)
          (NP (DT the) (JJ same) (NN thing)))))
    (. .) ('' '')))

nsubj(ready-4, Everybody-1)
cop(ready-4, is-2)
neg(ready-4, not-3)
root(ROOT-0, ready-4)
det(thing-8, the-6)
amod(thing-8, same-7)
prep_for(ready-4, thing-8)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB be)
                (VP
                  (ADVP (RB kinder))
                  (VBN used)
                  (PP (IN than)
                    (NP (PRP she))))))))))
    (. .) ('' '')))

cc(see-6, But-2)
nsubj(see-6, I-3)
aux(see-6, do-4)
neg(see-6, n't-5)
root(ROOT-0, see-6)
advmod(used-12, why-7)
nsubjpass(used-12, I-8)
aux(used-12, should-9)
auxpass(used-12, be-10)
advmod(used-12, kinder-11)
advcl(see-6, used-12)
prep_than(used-12, she-14)

(ROOT
  (SQ (`` ``) (VBP Do)
    (NP (PRP you))
    (VP (VB think)
      (SBAR
        (SBAR
          (S
            (NP (NN nothing))
            (VP (VBZ 's)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN done))))))))
        (CC but)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB see) (, ,)
                (ADVP (RB Diamond))
                (, ,)
                (S
                  (NP (PRP you))
                  (ADJP (JJ silly)))))))))
    (. !)))

aux(think-4, Do-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj('s-6, nothing-5)
nsubjpass(done-9, nothing-5)
dep(think-4, 's-6)
aux(done-9, to-7)
auxpass(done-9, be-8)
xcomp('s-6, done-9)
dobj(see-14, what-11)
nsubj(see-14, you-12)
aux(see-14, can-13)
dep(think-4, see-14)
conj_but('s-6, see-14)
advmod(see-14, Diamond-16)
nsubj(silly-19, you-18)
xcomp(see-14, silly-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB all)
      (ADJP (JJ right)))
    (. .)))

nsubj(right-4, It-1)
cop(right-4, 's-2)
advmod(right-4, all-3)
root(ROOT-0, right-4)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP you))
    (VP (MD can)
      (VP (VB help)
        (NP (PRP her))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP like))))))
    (. .)))

prep_of(help-5, course-2)
nsubj(help-5, you-3)
aux(help-5, can-4)
root(ROOT-0, help-5)
dobj(help-5, her-6)
mark(like-9, if-7)
nsubj(like-9, you-8)
advcl(help-5, like-9)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 've)
        (VP (VBN got)
          (NP (NN nothing) (JJ particular))
          (S
            (VP (TO to)
              (VP (VB do)
                (PP (IN at)
                  (NP (DT this) (NN moment)))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP have)))
    (. .) ('' '')))

nsubj(got-3, You-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
dobj(got-3, nothing-4)
amod(nothing-4, particular-5)
aux(do-7, to-6)
vmod(got-3, do-7)
det(moment-10, this-9)
prep_at(do-7, moment-10)
nsubj(have-13, I-12)
parataxis(got-3, have-13)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (VP (VB do)
      (VP (VB let)
        (S
          (NP (PRP me))
          (VP (VB help)
            (NP (PRP her))
            (, ,)
            (ADVP (RB then))))))
    (. .)))

aux(let-2, do-1)
root(ROOT-0, let-2)
nsubj(help-4, me-3)
ccomp(let-2, help-4)
dobj(help-4, her-5)
advmod(help-4, then-7)

(ROOT
  (S (CC But)
    (NP (PRP you))
    (VP (MD wo) (RB n't)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB wait)))))
        (, ,)
        (ADVP (RB perhaps))))
    (. ?) ('' '')))

cc(able-6, But-1)
nsubj(able-6, you-2)
nsubj(wait-8, you-2)
aux(able-6, wo-3)
neg(able-6, n't-4)
cop(able-6, be-5)
root(ROOT-0, able-6)
aux(wait-8, to-7)
xcomp(able-6, wait-8)
advmod(able-6, perhaps-10)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB wait))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB do)
          (NP (PRP it))
          (NP (PRP yourself)))))
    (. .)))

discourse(wait-7, No-2)
nsubj(wait-7, I-4)
aux(wait-7, ca-5)
neg(wait-7, n't-6)
root(ROOT-0, wait-7)
nsubj(do-11, you-9)
aux(do-11, must-10)
parataxis(wait-7, do-11)
iobj(do-11, it-12)
dobj(do-11, yourself-13)

(ROOT
  (S (CC And)
    (PRN (, ,)
      (S
        (VP (VB mind)))
      (, ,))
    (NP (DT the) (NN wind))
    (VP (MD will)
      (VP (VB get)
        (NP
          (NP (DT a) (NN hold))
          (PP (IN of)
            (NP (PRP you))))
        (, ,)
        (ADVP (RB too))))
    (. .) ('' '')))

cc(get-8, And-1)
parataxis(get-8, mind-3)
det(wind-6, the-5)
nsubj(get-8, wind-6)
aux(get-8, will-7)
root(ROOT-0, get-8)
det(hold-10, a-9)
dobj(get-8, hold-10)
prep_of(hold-10, you-12)
advmod(get-8, too-14)

(ROOT
  (X (`` ``)
    (NP
      (SQ (VBP Do) (RB n't)
        (NP (PRP you))
        (VP (VB want)
          (NP (PRP me))
          (PP (TO to))))
      (VP (VB help)
        (NP (PRP her))))
    (, ,)
    (NP
      (NP (NNP North))
      (VP (VBN Wind)))
    (. ?) ('' '')))

aux(want-5, Do-2)
neg(want-5, n't-3)
nsubj(want-5, you-4)
dep(help-8, want-5)
dobj(want-5, me-6)
prep(want-5, to-7)
dep(North-11, help-8)
dobj(help-8, her-9)
root(ROOT-0, North-11)
vmod(North-11, Wind-12)

(ROOT
  (S (`` ``)
    (PP (RB Not) (IN without)
      (S
        (VP (VBG having)
          (NP (DT some) (NN idea)))))
    (NP (WDT what))
    (VP (MD will)
      (VP (VB happen)))
    (. .)))

neg(happen-9, Not-2)
prepc_without(happen-9, having-4)
det(idea-6, some-5)
dobj(having-4, idea-6)
nsubj(happen-9, what-7)
aux(happen-9, will-8)
root(ROOT-0, happen-9)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP
            (VP (VB break)
              (PRT (RP down)))
            (CC and)
            (VP (VB cry)))))
      (, ,)
      (NP (DT that))
      (VP (MD wo) (RB n't)
        (VP (VB be)
          (ADJP (JJ much)
            (PP (IN of)
              (NP (DT a) (NN help))))
          (PP (TO to)
            (NP (PRP her))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD will)
        (VP (VB make)
          (NP
            (NP (DT a) (NN goose))
            (PP (IN of)
              (NP (JJ little) (NNP Diamond)))))))
    (. .) ('' '')))

mark(break-3, If-1)
nsubj(break-3, you-2)
nsubj(cry-6, you-2)
advcl(much-12, break-3)
prt(break-3, down-4)
conj_and(break-3, cry-6)
advcl(much-12, cry-6)
nsubj(much-12, that-8)
aux(much-12, wo-9)
neg(much-12, n't-10)
cop(much-12, be-11)
root(ROOT-0, much-12)
det(help-15, a-14)
prep_of(much-12, help-15)
prep_to(much-12, her-17)
nsubj(make-22, it-20)
aux(make-22, will-21)
conj_and(much-12, make-22)
det(goose-24, a-23)
dobj(make-22, goose-24)
amod(Diamond-27, little-26)
prep_of(goose-24, Diamond-27)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB go))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(want-3, I-2)
nsubj(go-5, I-2)
ccomp(said-8, want-3)
aux(go-5, to-4)
xcomp(want-3, go-5)
root(ROOT-0, said-8)
nsubj(said-8, Diamond-9)

(ROOT
  (S (`` ``)
    (ADVP (RB Only))
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (RB just) (CD one) (NN thing))
        (: --)
        (SBARQ
          (WHADVP (WRB how))
          (SQ (VBP am)
            (NP (PRP I))
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP (NN home)))))))))
    (. ?) ('' '')))

advmod('s-4, Only-2)
expl('s-4, there-3)
root(ROOT-0, 's-4)
advmod(thing-7, just-5)
num(thing-7, one-6)
nsubj('s-4, thing-7)
advmod(am-10, how-9)
dep(thing-7, am-10)
nsubj(am-10, I-11)
aux(get-13, to-12)
dep(am-10, get-13)
dobj(get-13, home-14)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (ADJP (JJ anxious)
            (PP (IN about)
              (NP (DT that)))))))
    (, ,)
    (ADVP (RB perhaps))
    (NP (PRP you))
    (VP (VBD had)
      (ADVP (RBR better))
      (VP (VB go)
        (PP (IN with)
          (NP (PRP me)))))
    (. .)))

mark(anxious-5, If-2)
nsubj(anxious-5, you-3)
cop(anxious-5, 're-4)
advcl(go-13, anxious-5)
prep_about(anxious-5, that-7)
advmod(you-10, perhaps-9)
nsubj(go-13, you-10)
aux(go-13, had-11)
advmod(go-13, better-12)
root(ROOT-0, go-13)
prep_with(go-13, me-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (VBN bound)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (PRP you))
              (ADVP (RB home))
              (ADVP (RB again))
              (, ,)
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP do)))))))))
    (. .) ('' '')))

nsubjpass(bound-3, I-1)
nsubj(take-5, I-1)
auxpass(bound-3, am-2)
root(ROOT-0, bound-3)
aux(take-5, to-4)
xcomp(bound-3, take-5)
dobj(take-5, you-6)
advmod(take-5, home-7)
advmod(take-5, again-8)
mark(do-12, if-10)
nsubj(do-12, you-11)
advcl(take-5, do-12)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ !))
    ('' '')))

expl(!-3, There-2)

(ROOT
  (S
    (VP (VB cried)
      (NP
        (NP (NNP Diamond))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD was)
              (ADVP (RB still))
              (VP (VBG looking)
                (PP (IN after)
                  (NP (DT the) (JJ little) (NN girl)))))))))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Diamond-2)
nsubj(looking-7, Diamond-2)
aux(looking-7, was-5)
advmod(looking-7, still-6)
rcmod(Diamond-2, looking-7)
det(girl-11, the-9)
amod(girl-11, little-10)
prep_after(looking-7, girl-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (DT the) (NN wind))
            (VP (MD will)
              (VP
                (VP (VB blow)
                  (NP (PRP her))
                  (PRT (RP over)))
                (, ,)
                (CC and)
                (ADVP (RB perhaps))
                (VP (VB kill)
                  (NP (PRP her)))))))))
    (. .)))

nsubj(sure-4, I-2)
cop(sure-4, 'm-3)
root(ROOT-0, sure-4)
det(wind-6, the-5)
nsubj(blow-8, wind-6)
nsubj(kill-14, wind-6)
aux(blow-8, will-7)
ccomp(sure-4, blow-8)
dobj(blow-8, her-9)
prt(blow-8, over-10)
advmod(kill-14, perhaps-13)
ccomp(sure-4, kill-14)
conj_and(blow-8, kill-14)
dobj(kill-14, her-15)

(ROOT
  (S
    (NP (NNP Do))
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP go)))))
    (. .) ('' '')))

nsubj(let-2, Do-1)
root(ROOT-0, let-2)
nsubj(go-4, me-3)
ccomp(let-2, go-4)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBG sweeping)
          (ADVP (RBR more) (RB slowly))
          (PP (IN along)
            (NP
              (NP (DT the) (NN line))
              (PP (IN of)
                (NP (DT the) (NN street))))))))
    (. .)))

nsubj(sweeping-4, They-1)
aux(sweeping-4, had-2)
aux(sweeping-4, been-3)
root(ROOT-0, sweeping-4)
advmod(slowly-6, more-5)
advmod(sweeping-4, slowly-6)
det(line-9, the-8)
prep_along(sweeping-4, line-9)
det(street-12, the-11)
prep_of(line-9, street-12)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN lull))
        (PP (IN in)
          (NP (DT the) (NN roaring)))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(lull-4, a-3)
nsubj(was-2, lull-4)
det(roaring-7, the-6)
prep_in(lull-4, roaring-7)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Well))
      (, ,)
      (ADVP (RB though))
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB promise)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (PRP you))
                (ADVP (RB home))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP North) (NNP Wind))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD sank)
            (SBAR
              (S
                (S
                  (VP (VBG nearer)
                    (CC and)
                    (VBG nearer)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NNS tops))
                        (PP (IN of)
                          (NP (DT the) (NNS houses)))))))
                (, ,) (`` ``)
                (NP (PRP I))
                (VP (MD can)
                  (VP (VB promise)
                    (NP (PRP you))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (MD will)
                          (VP (VB be)
                            (NP
                              (NP (DT all) (NN right))
                              (PP (IN in)
                                (NP (DT the) (NN end))))))))))))))))
    (. .)))

advmod(promise-8, Well-2)
advmod(promise-8, though-4)
nsubj(promise-8, I-5)
nsubj(take-10, I-5)
aux(promise-8, can-6)
neg(promise-8, not-7)
ccomp(said-15, promise-8)
aux(take-10, to-9)
xcomp(promise-8, take-10)
dobj(take-10, you-11)
advmod(take-10, home-12)
root(ROOT-0, said-15)
nn(Wind-17, North-16)
nsubj(said-15, Wind-17)
mark(sank-21, as-19)
nsubj(sank-21, she-20)
dep(Wind-17, sank-21)
dep(promise-35, nearer-22)
conj_and(nearer-22, nearer-24)
dep(promise-35, nearer-24)
det(tops-27, the-26)
prep_to(nearer-22, tops-27)
det(houses-30, the-29)
prep_of(tops-27, houses-30)
nsubj(promise-35, I-33)
aux(promise-35, can-34)
ccomp(sank-21, promise-35)
dobj(promise-35, you-36)
nsubj(right-41, it-37)
aux(right-41, will-38)
cop(right-41, be-39)
det(right-41, all-40)
dep(promise-35, right-41)
det(end-44, the-43)
prep_in(right-41, end-44)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (VP (VB get)
        (NP (NN home))
        (ADVP (RB somehow))))
    (. .)))

nsubj(get-3, You-1)
aux(get-3, will-2)
root(ROOT-0, get-3)
dobj(get-3, home-4)
advmod(get-3, somehow-5)

(ROOT
  (SQ (MD Have)
    (NP (PRP you))
    (VP (VBD made)
      (PRT (RP up))
      (NP
        (NP (PRP$ your) (NN mind))
        (SBAR
          (WHNP (WP what))
          (S
            (VP (TO to)
              (VP (VB do)))))))
    (. ?) ('' '')))

aux(made-3, Have-1)
nsubj(made-3, you-2)
root(ROOT-0, made-3)
prt(made-3, up-4)
poss(mind-6, your-5)
dobj(made-3, mind-6)
nsubj(do-9, mind-6)
aux(do-9, to-8)
rcmod(mind-6, do-9)
vmod(mind-6, do-9)

(ROOT
  (SINV (`` ``)
    (S
      (FRAG
        (INTJ (UH Yes)))
      (: ;)
      (S
        (NP (TO to))
        (VP (VBP help)
          (NP (DT the) (JJ little) (NN girl)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond) (NNP firmly))
    (. .)))

dep(help-5, Yes-2)
nsubj(help-5, to-4)
ccomp(said-11, help-5)
det(girl-8, the-6)
amod(girl-8, little-7)
dobj(help-5, girl-8)
root(ROOT-0, said-11)
nn(firmly-13, Diamond-12)
nsubj(said-11, firmly-13)

(ROOT
  (S
    (NP (DT The) (JJ same) (NN moment) (NNP North) (NNP Wind))
    (VP
      (VP (VBP dropt)
        (PP (IN into)
          (NP (DT the) (NN street))))
      (CC and)
      (VP (VBD stood) (, ,)
        (NP (RB only) (DT a) (JJ tall) (NN lady)))
      (, ,)
      (PP (CC but)
        (PP (IN with)
          (NP
            (NP (PRP$ her) (NN hair))
            (VP (VBG flying)
              (PRT (RP up))
              (PP (IN over)
                (NP (DT the) (NNS housetops))))))))
    (. .)))

det(Wind-5, The-1)
amod(Wind-5, same-2)
nn(Wind-5, moment-3)
nn(Wind-5, North-4)
nsubj(dropt-6, Wind-5)
nsubj(stood-11, Wind-5)
root(ROOT-0, dropt-6)
det(street-9, the-8)
prep_into(dropt-6, street-9)
conj_and(dropt-6, stood-11)
advmod(lady-16, only-13)
det(lady-16, a-14)
amod(lady-16, tall-15)
dobj(stood-11, lady-16)
poss(hair-21, her-20)
prep_with(dropt-6, hair-21)
vmod(hair-21, flying-22)
prt(flying-22, up-23)
det(housetops-26, the-25)
prep_over(flying-22, housetops-26)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD put)
        (NP (PRP$ her) (NNS hands))
        (PP (TO to)
          (NP (PRP$ her) (NN back))))
      (, ,)
      (VP (VBD took)
        (NP (NNP Diamond)))
      (, ,)
      (CC and)
      (VP (VBD set)
        (NP (PRP him))
        (PRT (RP down))
        (PP (IN in)
          (NP (DT the) (NN street)))))
    (. .)))

nsubj(put-2, She-1)
nsubj(took-9, She-1)
nsubj(set-13, She-1)
root(ROOT-0, put-2)
poss(hands-4, her-3)
dobj(put-2, hands-4)
poss(back-7, her-6)
prep_to(put-2, back-7)
conj_and(put-2, took-9)
dobj(took-9, Diamond-10)
conj_and(put-2, set-13)
dobj(set-13, him-14)
prt(set-13, down-15)
det(street-18, the-17)
prep_in(set-13, street-18)

(ROOT
  (S
    (NP (DT The) (JJ same) (NN moment))
    (NP (PRP he))
    (VP (VBD was)
      (VP
        (VP (VBN caught)
          (PP (IN in)
            (NP
              (NP (DT the) (JJ fierce) (NNS coils))
              (PP (IN of)
                (NP (DT the) (NN blast))))))
        (, ,)
        (CC and)
        (ADVP (DT all)
          (CC but))
        (VP (VBN blown)
          (PRT (RP away)))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, same-2)
nsubjpass(caught-6, moment-3)
nsubjpass(blown-18, moment-3)
nsubjpass(caught-6, he-4)
auxpass(caught-6, was-5)
root(ROOT-0, caught-6)
det(coils-10, the-8)
amod(coils-10, fierce-9)
prep_in(caught-6, coils-10)
det(blast-13, the-12)
prep_of(coils-10, blast-13)
mwe(but-17, all-16)
advmod(caught-6, but-17)
conj_and(caught-6, but-17)
conj_and(caught-6, blown-18)
prt(blown-18, away-19)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP
      (VP (VBD stepped)
        (PRT (RP back))
        (NP (DT a) (NN step)))
      (, ,)
      (CC and)
      (VP
        (ADVP (IN at) (RB once))
        (VBD towered)
        (PP (IN in)
          (NP (NN stature)))
        (PP (TO to)
          (NP
            (NP (DT the) (NN height))
            (PP (IN of)
              (NP (DT the) (NNS houses)))))))
    (. .)))

nn(Wind-2, North-1)
nsubj(stepped-3, Wind-2)
nsubj(towered-11, Wind-2)
root(ROOT-0, stepped-3)
prt(stepped-3, back-4)
det(step-6, a-5)
dobj(stepped-3, step-6)
advmod(towered-11, at-9)
advmod(at-9, once-10)
conj_and(stepped-3, towered-11)
prep_in(towered-11, stature-13)
det(height-16, the-15)
prep_to(towered-11, height-16)
det(houses-19, the-18)
prep_of(height-16, houses-19)

(ROOT
  (S
    (NP (DT A) (NN chimney-pot))
    (VP (VBD clashed)
      (PP (IN at)
        (NP
          (NP (NNP Diamond) (POS 's))
          (NNS feet))))
    (. .)))

det(chimney-pot-2, A-1)
nsubj(clashed-3, chimney-pot-2)
root(ROOT-0, clashed-3)
poss(feet-7, Diamond-5)
prep_at(clashed-3, feet-7)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD turned)
        (PP (IN in)
          (NP (NN terror)))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP it))
        (VP (VBD was)
          (S
            (VP (TO to)
              (VP (VB look)
                (PP (IN for)
                  (NP (DT the) (JJ little) (NN girl))))))))
      (, ,)
      (CC and)
      (S
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBD turned))))
          (ADVP (RB again))
          (NP (DT the) (NN lady))
          (VP (VBD had)
            (VP (VBN vanished))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN wind))
          (VP (VBD was)
            (VP (VBN roaring)
              (PP (IN along)
                (NP (DT the) (NN street)))
              (SBAR (RB as) (IN if)
                (S
                  (NP (PRP it))
                  (VP (VBD had)
                    (VP (VBN been)
                      (NP
                        (NP (DT the) (NN bed))
                        (PP (IN of)
                          (NP (DT an) (JJ invisible) (NN torrent)))))))))))))
    (. .)))

nsubj(turned-2, He-1)
root(ROOT-0, turned-2)
prep_in(turned-2, terror-4)
nsubj(was-8, it-7)
nsubj(look-10, it-7)
conj_but(turned-2, was-8)
aux(look-10, to-9)
xcomp(was-8, look-10)
det(girl-14, the-12)
amod(girl-14, little-13)
prep_for(look-10, girl-14)
advmod(turned-19, when-17)
nsubj(turned-19, he-18)
advcl(vanished-24, turned-19)
advmod(vanished-24, again-20)
det(lady-22, the-21)
nsubj(vanished-24, lady-22)
aux(vanished-24, had-23)
conj_but(turned-2, vanished-24)
conj_and(was-8, vanished-24)
det(wind-28, the-27)
nsubjpass(roaring-30, wind-28)
auxpass(roaring-30, was-29)
conj_and(was-8, roaring-30)
conj_and(vanished-24, roaring-30)
det(street-33, the-32)
prep_along(roaring-30, street-33)
advmod(bed-40, as-34)
mark(bed-40, if-35)
nsubj(bed-40, it-36)
aux(bed-40, had-37)
cop(bed-40, been-38)
det(bed-40, the-39)
advcl(roaring-30, bed-40)
det(torrent-44, an-42)
amod(torrent-44, invisible-43)
prep_of(bed-40, torrent-44)

(ROOT
  (S
    (S
      (NP (DT The) (JJ little) (NN girl))
      (VP (VBD was)
        (VP (VBG scudding)
          (PP (IN before)
            (NP
              (NP (DT the) (NN blast))
              (, ,)
              (NP
                (NP (PRP$ her) (NN hair))
                (VP (VBG flying)
                  (ADVP (RB too)))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN behind)
        (NP (PRP her)))
      (NP (PRP she))
      (VP (VBD dragged)
        (NP (PRP$ her) (NN broom))))
    (. .)))

det(girl-3, The-1)
amod(girl-3, little-2)
nsubj(scudding-5, girl-3)
aux(scudding-5, was-4)
root(ROOT-0, scudding-5)
det(blast-8, the-7)
prep_before(scudding-5, blast-8)
poss(hair-11, her-10)
appos(blast-8, hair-11)
vmod(hair-11, flying-12)
advmod(flying-12, too-13)
prep_behind(dragged-19, her-17)
nsubj(dragged-19, she-18)
conj_and(scudding-5, dragged-19)
poss(broom-21, her-20)
dobj(dragged-19, broom-21)

(ROOT
  (S
    (NP (PRP$ Her) (JJ little) (NNS legs))
    (VP (VBD were)
      (VP (VBG going)
        (ADVP
          (ADVP (RB as) (RB fast))
          (SBAR (IN as)
            (S
              (ADVP (RB ever))
              (NP (PRP they))
              (VP (MD could)
                (S
                  (VP (TO to)
                    (VP (VB keep)
                      (NP (PRP her))
                      (PP (IN from)
                        (NP (VBG falling))))))))))))
    (. .)))

poss(legs-3, Her-1)
amod(legs-3, little-2)
nsubj(going-5, legs-3)
aux(going-5, were-4)
root(ROOT-0, going-5)
advmod(fast-7, as-6)
advmod(going-5, fast-7)
mark(could-11, as-8)
advmod(could-11, ever-9)
nsubj(could-11, they-10)
nsubj(keep-13, they-10)
advcl(fast-7, could-11)
ccomp(fast-7, could-11)
aux(keep-13, to-12)
xcomp(could-11, keep-13)
dobj(keep-13, her-14)
prep_from(keep-13, falling-16)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (VBD crept)
        (PP (IN into)
          (NP
            (NP (DT the) (NN shelter))
            (PP (IN of)
              (NP (DT a) (NN doorway)))))
        (, ,)
        (S
          (VP (VBG thinking)
            (S
              (VP (TO to)
                (VP (VB stop)
                  (NP (PRP her)))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD passed)
        (NP (PRP him))
        (PP (IN like)
          (NP (DT a) (NN bird)))
        (, ,)
        (UCP
          (VP (VBG crying)
            (ADVP (RB gently)))
          (CC and)
          (ADJP (JJ pitifully)))))
    (. .)))

nsubj(crept-2, Diamond-1)
root(ROOT-0, crept-2)
det(shelter-5, the-4)
prep_into(crept-2, shelter-5)
det(doorway-8, a-7)
prep_of(shelter-5, doorway-8)
xcomp(crept-2, thinking-10)
aux(stop-12, to-11)
xcomp(thinking-10, stop-12)
dobj(stop-12, her-13)
nsubj(passed-17, she-16)
conj_but(crept-2, passed-17)
dobj(passed-17, him-18)
det(bird-21, a-20)
prep_like(passed-17, bird-21)
dep(passed-17, crying-23)
advmod(crying-23, gently-24)
dep(passed-17, pitifully-26)
conj_and(crying-23, pitifully-26)

(ROOT
  (S (`` ``)
    (VP (VB Stop))
    (. !)))

root(ROOT-0, Stop-2)

(ROOT
  (S
    (VP (VB stop))
    (. !)))

root(ROOT-0, stop-1)

(ROOT
  (SINV
    (FRAG
      (NP (JJ little) (NN girl)))
    (, ,) ('' '')
    (VP (VBD shouted))
    (NP (NNP Diamond))
    (, ,)
    (S
      (VP (VBG starting)
        (PP (IN in)
          (NP (NN pursuit)))))
    (. .)))

amod(girl-2, little-1)
dep(shouted-5, girl-2)
root(ROOT-0, shouted-5)
nsubj(shouted-5, Diamond-6)
vmod(shouted-5, starting-8)
prep_in(starting-8, pursuit-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)))
    (, ,) ('' '')
    (VP (VBD wailed))
    (NP (DT the) (NN girl))
    (, ,) (`` ``)
    (S
      (NP (DT the) (NN wind))
      (VP (MD wo) (RB n't)
        (VP (VB leave)
          (VP (VB go)
            (PP (IN of)
              (NP (PRP me)))))))
    (. .) ('' '')))

nsubj(ca-3, I-2)
ccomp(wailed-7, ca-3)
neg(ca-3, n't-4)
root(ROOT-0, wailed-7)
det(girl-9, the-8)
nsubj(wailed-7, girl-9)
det(wind-13, the-12)
nsubj(leave-16, wind-13)
aux(leave-16, wo-14)
neg(leave-16, n't-15)
dep(wailed-7, leave-16)
xcomp(leave-16, go-17)
prep_of(go-17, me-19)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (MD could)
        (VP (VB run)
          (ADVP (RBR faster))
          (PP (IN than)
            (NP (PRP she))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (NP (DT no) (NN broom))))
    (. .)))

nsubj(run-3, Diamond-1)
aux(run-3, could-2)
root(ROOT-0, run-3)
advmod(run-3, faster-4)
prep_than(run-3, she-6)
nsubj(had-10, he-9)
conj_and(run-3, had-10)
neg(broom-12, no-11)
dobj(had-10, broom-12)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT a) (JJ few) (NNS moments)))
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN caught)
          (NP (PRP her))
          (PP (IN by)
            (NP (DT the) (NN frock))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP
        (VP (VBD tore)
          (PP (IN in)
            (NP (PRP$ his) (NN hand))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB away))
          (VBD went)
          (NP (DT the) (JJ little) (NN girl)))))
    (. .)))

det(moments-4, a-2)
amod(moments-4, few-3)
prep_in(caught-7, moments-4)
nsubj(caught-7, he-5)
aux(caught-7, had-6)
root(ROOT-0, caught-7)
dobj(caught-7, her-8)
det(frock-11, the-10)
prep_by(caught-7, frock-11)
nsubj(tore-15, it-14)
nsubj(went-22, it-14)
conj_but(caught-7, tore-15)
poss(hand-18, his-17)
prep_in(tore-15, hand-18)
advmod(went-22, away-21)
conj_but(caught-7, went-22)
conj_and(tore-15, went-22)
det(girl-25, the-23)
amod(girl-25, little-24)
dobj(went-22, girl-25)

(ROOT
  (S (IN So)
    (S
      (S
        (NP (PRP he))
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP (VB run)
                (ADVP (RB again)))))))
      (, ,)
      (CC and)
      (S
        (NP (DT this) (NN time))
        (NP (PRP he))
        (VP (VBD ran)
          (ADVP (RB so) (RB fast))
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD got)
                (PP (IN before)
                  (NP (PRP her)))))))))
    (, ,)
    (CC and)
    (S
      (VP (VBG turning)
        (NP
          (NP (NN round))
          (VP (VBN caught)
            (NP (PRP her))
            (PP (IN in)
              (NP
                (NP (PRP$ his) (NNS arms))
                (, ,)
                (SBAR
                  (WHADVP (WRB when) (RB down))
                  (S
                    (NP (PRP they))
                    (VP (VBD went)
                      (NP (DT both))
                      (ADVP (RB together))))))))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD made)
                (NP (DT the) (JJ little) (NN girl) (NN laugh))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN midst))
                    (PP (IN of)
                      (NP (PRP$ her) (NN crying)))))))))))
    (. .)))

dep(had-3, So-1)
nsubj(had-3, he-2)
nsubj(run-5, he-2)
nsubj(turning-22, he-2)
root(ROOT-0, had-3)
aux(run-5, to-4)
xcomp(had-3, run-5)
advmod(run-5, again-6)
det(time-10, this-9)
nsubj(ran-12, time-10)
nsubj(ran-12, he-11)
conj_and(had-3, ran-12)
advmod(fast-14, so-13)
advmod(ran-12, fast-14)
mark(got-17, that-15)
nsubj(got-17, he-16)
ccomp(ran-12, got-17)
prep_before(got-17, her-19)
conj_and(had-3, turning-22)
dobj(turning-22, round-23)
nsubj(made-38, round-23)
vmod(round-23, caught-24)
dobj(caught-24, her-25)
poss(arms-28, his-27)
prep_in(caught-24, arms-28)
tmod(went-33, arms-28)
advmod(down-31, when-30)
advmod(went-33, down-31)
nsubj(went-33, they-32)
rcmod(arms-28, went-33)
dobj(went-33, both-34)
advmod(went-33, together-35)
rcmod(round-23, made-38)
det(laugh-42, the-39)
amod(laugh-42, little-40)
nn(laugh-42, girl-41)
dobj(made-38, laugh-42)
det(midst-45, the-44)
prep_in(made-38, midst-45)
poss(crying-48, her-47)
prep_of(midst-45, crying-48)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG going)))
    (. ?) ('' '')))

advmod(going-5, Where-2)
aux(going-5, are-3)
nsubj(going-5, you-4)
root(ROOT-0, going-5)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond))
      (, ,)
      (S
        (VP (VBG rubbing)
          (NP
            (NP (DT the) (NN elbow))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD had)
                  (VP (VBN stuck)
                    (S
                      (VP (VBG farthest)
                        (PRT (RP out))))))))))))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)
vmod(asked-1, rubbing-4)
det(elbow-6, the-5)
dobj(rubbing-4, elbow-6)
nsubj(stuck-9, elbow-6)
aux(stuck-9, had-8)
rcmod(elbow-6, stuck-9)
xcomp(stuck-9, farthest-10)
prt(farthest-10, out-11)

(ROOT
  (S
    (NP
      (NP (DT The) (NN arm))
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD belonged)
            (PP (TO to))))))
    (VP (VBD was)
      (VP (VBN twined)
        (ADVP (RB round)
          (NP (DT a) (NN lamp-post)))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD stood)
              (PP (IN between)
                (NP
                  (NP (DT the) (JJ little) (NN girl))
                  (CC and)
                  (NP (DT the) (NN wind)))))))))
    (. .)))

det(arm-2, The-1)
prep_to(belonged-4, arm-2)
nsubjpass(twined-7, arm-2)
nsubj(belonged-4, it-3)
rcmod(arm-2, belonged-4)
auxpass(twined-7, was-6)
root(ROOT-0, twined-7)
advmod(twined-7, round-8)
det(lamp-post-10, a-9)
pobj(round-8, lamp-post-10)
mark(stood-13, as-11)
nsubj(stood-13, he-12)
advcl(twined-7, stood-13)
det(girl-17, the-15)
amod(girl-17, little-16)
prep_between(stood-13, girl-17)
det(wind-20, the-19)
prep_between(stood-13, wind-20)
conj_and(girl-17, wind-20)

(ROOT
  (S (`` ``)
    (FRAG
      (NP (NNP Home)))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said) (, ,)
      (S
        (VP (VBG gasping)
          (PP (IN for)
            (NP (NN breath))))))
    (. .)))

dep(said-6, Home-2)
nsubj(said-6, she-5)
root(ROOT-0, said-6)
xcomp(said-6, gasping-8)
prep_for(gasping-8, breath-10)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP I))
      (VP (MD will)
        (VP (VB go)
          (PP (IN with)
            (NP (PRP you))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

advmod(go-5, Then-2)
nsubj(go-5, I-3)
aux(go-5, will-4)
ccomp(said-10, go-5)
prep_with(go-5, you-7)
root(ROOT-0, said-10)
nsubj(said-10, Diamond-11)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB then))
      (NP (PRP they))
      (VP (VBD were)
        (ADJP (JJ silent))
        (PP (IN for)
          (NP (DT a) (NN while)))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (DT the) (NN wind))
            (VP (VBD blew)
              (ADVP (RBR worse) (IN than) (RB ever)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD had)
        (S
          (VP (DT both) (TO to)
            (VP (VB hold)
              (PRT (RP on))
              (PP (TO to)
                (NP (DT the) (NN lamp-post))))))))
    (. .)))

advmod(silent-5, then-2)
nsubj(silent-5, they-3)
cop(silent-5, were-4)
root(ROOT-0, silent-5)
det(while-8, a-7)
prep_for(silent-5, while-8)
mark(blew-13, for-10)
det(wind-12, the-11)
nsubj(blew-13, wind-12)
advcl(silent-5, blew-13)
advmod(than-15, worse-14)
advmod(blew-13, than-15)
advmod(than-15, ever-16)
nsubj(had-20, they-19)
nsubj(hold-23, they-19)
conj_and(silent-5, had-20)
dep(hold-23, both-21)
aux(hold-23, to-22)
ccomp(had-20, hold-23)
xcomp(had-20, hold-23)
prt(hold-23, on-24)
det(lamp-post-27, the-26)
prep_to(hold-23, lamp-post-27)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBZ is)
      (NP (PRP$ your))
      (VP (VBG crossing)))
    (. ?) ('' '')))

advmod(crossing-5, Where-2)
aux(crossing-5, is-3)
nsubj(crossing-5, your-4)
root(ROOT-0, crossing-5)

(ROOT
  (S
    (VP (VBD asked)
      (NP (DT the) (NN girl))
      (PP (IN at)
        (NP (NN length))))
    (. .)))

root(ROOT-0, asked-1)
det(girl-3, the-2)
dobj(asked-1, girl-3)
prep_at(asked-1, length-5)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB sweep))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Diamond))
    (. .)))

nsubj(sweep-5, I-2)
aux(sweep-5, do-3)
neg(sweep-5, n't-4)
ccomp(answered-8, sweep-5)
root(ROOT-0, answered-8)
nsubj(answered-8, Diamond-9)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB do) (, ,)
        (ADVP (RB then))))
    (. ?) ('' '')))

dobj(do-5, What-2)
aux(do-5, do-3)
nsubj(do-5, you-4)
root(ROOT-0, do-5)
advmod(do-5, then-7)

(ROOT
  (S
    (VP (VBD asked)
      (NP (PRP she)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, she-2)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP ai) (RB n't)
      (ADJP (JJ big) (RB enough))
      (PP (IN for)
        (NP (JJS most) (NNS things))))
    (. .) ('' '')))

nsubj(big-5, You-2)
cop(big-5, ai-3)
neg(big-5, n't-4)
root(ROOT-0, big-5)
advmod(big-5, enough-6)
amod(things-9, most-8)
prep_for(big-5, things-9)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP do)
                (VP (VB do))))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (PRP he))
    (, ,)
    (S
      (VP (VBG feeling)
        (PP (RB rather)
          (ADJP (JJ ashamed)))))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
ccomp(answered-12, know-5)
dobj(do-9, what-6)
nsubj(do-9, I-7)
aux(do-9, do-8)
ccomp(know-5, do-9)
root(ROOT-0, answered-12)
nsubj(answered-12, he-13)
vmod(answered-12, feeling-15)
prep(feeling-15, rather-16)
pobj(rather-16, ashamed-17)

(ROOT
  (S (`` ``)
    (INTJ (UH Nothing))
    (, ,)
    (NP (PRP I))
    (VP (VBP suppose))
    (. .)))

discourse(suppose-5, Nothing-2)
nsubj(suppose-5, I-4)
root(ROOT-0, suppose-5)

(ROOT
  (S
    (NP (PRP$ My) (NN father))
    (VP (VBZ 's)
      (NP
        (NP (NNP Mr.) (NNP Coleman) (POS 's))
        (NN coachman)))
    (. .) ('' '')))

poss(father-2, My-1)
nsubj(coachman-7, father-2)
cop(coachman-7, 's-3)
nn(Coleman-5, Mr.-4)
poss(coachman-7, Coleman-5)
root(ROOT-0, coachman-7)

(ROOT
  (S (`` ``)
    (VP (VB Have)
      (S
        (NP (PRP you))
        (NP (DT a) (NN father))))
    (. ?) ('' '')))

root(ROOT-0, Have-2)
nsubj(father-5, you-3)
det(father-5, a-4)
xcomp(Have-2, father-5)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said) (, ,)
      (S
        (VP (VBG staring)
          (PP (IN at)
            (NP (PRP him)))
          (SBAR (RB as) (IN if)
            (S
              (NP
                (NP (DT a) (NN boy))
                (PP (IN with)
                  (NP (DT a) (NN father))))
              (VP (VBD was)
                (NP (DT a) (JJ natural) (NN curiosity))))))))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
xcomp(said-2, staring-4)
prep_at(staring-4, him-6)
advmod(curiosity-17, as-7)
mark(curiosity-17, if-8)
det(boy-10, a-9)
nsubj(curiosity-17, boy-10)
det(father-13, a-12)
prep_with(boy-10, father-13)
cop(curiosity-17, was-14)
det(curiosity-17, a-15)
amod(curiosity-17, natural-16)
advcl(staring-4, curiosity-17)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (FRAG
    (S
      (VP (VBD Have) (RB n't)
        (NP (PRP you))))
    (. ?) ('' '')))

root(ROOT-0, Have-1)
neg(Have-1, n't-2)
dobj(Have-1, you-3)

(ROOT
  (S
    (VP (VBN returned)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, returned-1)
dobj(returned-1, Diamond-2)

(ROOT
  (NP
    (NP (`` ``) (DT No))
    (: ;)
    (NP
      (NP (CC nor)
        (NN mother))
      (NP (DT neither)))
    (. .)))

root(ROOT-0, No-2)
cc(mother-5, nor-4)
dep(No-2, mother-5)
dep(mother-5, neither-6)

(ROOT
  (S
    (NP (NNP Old) (NNP Sal))
    (VP (VBZ 's)
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBN got)))))))
    (. .) ('' '')))

nn(Sal-2, Old-1)
nsubj(all-4, Sal-2)
cop(all-4, 's-3)
root(ROOT-0, all-4)
nsubj(got-7, I-5)
aux(got-7, 've-6)
rcmod(all-4, got-7)

(ROOT
  (S (CC And)
    (NP (PRP she))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB cry)
            (ADVP (RB again))))))
    (. .)))

cc(began-3, And-1)
nsubj(began-3, she-2)
nsubj(cry-5, she-2)
root(ROOT-0, began-3)
aux(cry-5, to-4)
xcomp(began-3, cry-5)
advmod(cry-5, again-6)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD would) (RB n't)
        (VP (VB go)
          (PP (TO to)
            (NP (PRP her)))
          (SBAR (IN if)
            (S
              (NP (PRP she))
              (VP (VBD was) (RB n't)
                (ADJP (JJ good)
                  (PP (TO to)
                    (NP (PRP me))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(go-5, I-2)
aux(go-5, would-3)
neg(go-5, n't-4)
ccomp(said-17, go-5)
prep_to(go-5, her-7)
mark(good-12, if-8)
nsubj(good-12, she-9)
cop(good-12, was-10)
neg(good-12, n't-11)
advcl(go-5, good-12)
prep_to(good-12, me-14)
root(ROOT-0, said-17)
nsubj(said-17, Diamond-18)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB go)
        (NP (NNS somewheres))))
    (. .) ('' '')))

cc(go-5, But-2)
nsubj(go-5, you-3)
aux(go-5, must-4)
root(ROOT-0, go-5)
dobj(go-5, somewheres-6)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Move)
        (PRT (RP on))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (DT the) (NN voice))
      (PP (IN of)
        (NP
          (NP (DT a) (NN policeman))
          (PP (IN behind)
            (NP (PRP them))))))
    (. .)))

ccomp(said-6, Move-2)
prt(Move-2, on-3)
root(ROOT-0, said-6)
det(voice-8, the-7)
nsubj(said-6, voice-8)
det(policeman-11, a-10)
prep_of(voice-8, policeman-11)
prep_behind(policeman-11, them-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD told)
        (NP (PRP you))
        (ADVP (RB so))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN girl))
    (. .)))

nsubj(told-3, I-2)
ccomp(said-8, told-3)
dobj(told-3, you-4)
advmod(told-3, so-5)
root(ROOT-0, said-8)
det(girl-10, the-9)
nsubj(said-8, girl-10)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD must)
      (VP (VB go)
        (NP (NNS somewheres))))
    (. .)))

nsubj(go-4, You-2)
aux(go-4, must-3)
root(ROOT-0, go-4)
dobj(go-4, somewheres-5)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 're)
      (ADVP (RB always))
      (PP (IN at)
        (NP (PRP it))))
    (. .) ('' '')))

nsubj('re-2, They-1)
root(ROOT-0, 're-2)
advmod('re-2, always-3)
prep_at('re-2, it-5)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (JJ old) (NNS Sal))
    (VP
      (VP (VBZ does) (RB n't)
        (VP (VB beat)
          (NP (PRP you))))
      (, ,)
      (VP (VBZ does)
        (NP (PRP she))))
    (. ?) ('' '')))

cc(beat-7, But-2)
amod(Sal-4, old-3)
nsubj(beat-7, Sal-4)
aux(beat-7, does-5)
neg(beat-7, n't-6)
root(ROOT-0, beat-7)
dobj(beat-7, you-8)
dep(beat-7, does-10)
dobj(does-10, she-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP she))
          (VP (MD would)))))
    (. .) ('' '')))

nsubj(wish-3, I-2)
root(ROOT-0, wish-3)
nsubj(would-5, she-4)
ccomp(wish-3, would-5)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB mean)))
    (. ?) ('' '')))

dobj(mean-5, What-2)
aux(mean-5, do-3)
nsubj(mean-5, you-4)
root(ROOT-0, mean-5)

(ROOT
  (S
    (VP (VBD asked)
      (NP
        (NP (NNP Diamond))
        (, ,)
        (ADJP (RB quite) (VBN bewildered))))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)
advmod(bewildered-5, quite-4)
amod(Diamond-2, bewildered-5)

(ROOT
  (S (`` ``)
    (NP (PRP She))
    (VP (MD would)
      (SBAR (IN if)
        (S
          (NP (PRP she))
          (VP (VBD was)
            (NP (PRP$ my) (NN mother))))))
    (. .)))

nsubj(would-3, She-2)
root(ROOT-0, would-3)
mark(mother-8, if-4)
nsubj(mother-8, she-5)
cop(mother-8, was-6)
poss(mother-8, my-7)
advcl(would-3, mother-8)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (VP (MD would) (RB n't)
      (VP
        (VP (VB lie)
          (NP
            (NP (JJ abed) (NN a-cuddlin))
            ('' ')
            (PP (IN of)
              (NP (PRP$ her) (JJ ugly) (JJ old) (NNS bones)))))
        (, ,)
        (CC and)
        (VP (NN laugh)
          (S
            (VP (TO to)
              (VP (VB hear)
                (S
                  (NP (PRP me))
                  (VP (VBG crying)
                    (PP (IN at)
                      (NP (DT the) (NN door)))))))))))
    (. .) ('' '')))

nsubj(lie-5, she-2)
aux(lie-5, would-3)
neg(lie-5, n't-4)
root(ROOT-0, lie-5)
amod(a-cuddlin-7, abed-6)
dobj(lie-5, a-cuddlin-7)
poss(bones-13, her-10)
amod(bones-13, ugly-11)
amod(bones-13, old-12)
prep_of(a-cuddlin-7, bones-13)
conj_and(lie-5, laugh-16)
aux(hear-18, to-17)
xcomp(laugh-16, hear-18)
nsubj(crying-20, me-19)
dep(hear-18, crying-20)
det(door-23, the-22)
prep_at(crying-20, door-23)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP she))
            (VP (MD wo) (RB n't)
              (VP (VB let)
                (NP (PRP you))
                (PP (IN in)
                  (NP (NN to-night)))))))))
    (. ?) ('' '')))

nsubj(mean-5, You-2)
aux(mean-5, do-3)
neg(mean-5, n't-4)
root(ROOT-0, mean-5)
nsubj(let-9, she-6)
aux(let-9, wo-7)
neg(let-9, n't-8)
ccomp(mean-5, let-9)
dobj(let-9, you-10)
prep_in(let-9, to-night-12)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD 'll)
      (VP (VB be)
        (NP (DT a) (JJ good) (NN chance))
        (SBAR (IN if)
          (S
            (NP (PRP she))
            (VP (VBZ does))))))
    (. .) ('' '')))

nsubj(chance-7, It-2)
aux(chance-7, 'll-3)
cop(chance-7, be-4)
det(chance-7, a-5)
amod(chance-7, good-6)
root(ROOT-0, chance-7)
mark(does-10, if-8)
nsubj(does-10, she-9)
advcl(chance-7, does-10)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (VBP are)
      (NP (PRP you))
      (PP (IN out)
        (NP
          (NP (RB so) (RB late))
          (, ,)
          (ADVP (RB then)))))
    (. ?) ('' '')))

advmod(are-3, Why-2)
root(ROOT-0, are-3)
nsubj(are-3, you-4)
prep(are-3, out-5)
advmod(late-7, so-6)
pobj(out-5, late-7)
advmod(late-7, then-9)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ My) (NN crossing))
      (VP (VBZ 's)
        (NP (DT a) (JJ long) (NN way))
        (ADVP (RB off)
          (PP (IN at)
            (NP (DT the) (NNP West) (NN End))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (VP (VBN been)
          (VP (VBN indulgin) ('' ')
            (PP (IN in)
              (NP (NNS door-steps)
                (CC and)
                (NNS mewses)))))))
    (. .) ('' '')))

poss(crossing-3, My-2)
nsubj(way-7, crossing-3)
cop(way-7, 's-4)
det(way-7, a-5)
amod(way-7, long-6)
root(ROOT-0, way-7)
advmod(way-7, off-8)
det(End-12, the-10)
nn(End-12, West-11)
prep_at(off-8, End-12)
nsubjpass(indulgin-18, I-15)
aux(indulgin-18, had-16)
auxpass(indulgin-18, been-17)
conj_and(way-7, indulgin-18)
prep_in(indulgin-18, door-steps-21)
prep_in(indulgin-18, mewses-23)
conj_and(door-steps-21, mewses-23)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP We))
      (VP (MD 'd)
        (ADVP (RBR better))
        (VP (VB have)
          (NP (DT a) (NN try) (NN anyhow)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(have-5, We-2)
aux(have-5, 'd-3)
advmod(have-5, better-4)
ccomp(said-11, have-5)
det(anyhow-8, a-6)
nn(anyhow-8, try-7)
dobj(have-5, anyhow-8)
root(ROOT-0, said-11)
nsubj(said-11, Diamond-12)

(ROOT
  (S (`` ``)
    (VP (VB Come)
      (PRT (RP along)))
    (. .) ('' '')))

root(ROOT-0, Come-2)
prt(Come-2, along-3)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (PRP he))
          (VP (VBD spoke))))
      (S
        (NP (NNP Diamond))
        (VP (VBD thought)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD caught)
                (NP
                  (NP (DT a) (NN glimpse))
                  (PP (IN of)
                    (NP
                      (NP (NNP North) (NNP Wind))
                      (VP (VBG turning)
                        (NP
                          (NP (DT a) (NN corner))
                          (PP (IN in)
                            (NP
                              (NP (NN front))
                              (PP (IN of)
                                (NP (PRP them)))))))))))))))
      (: ;)
      (CC and)
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBD turned)
              (NP (DT the) (NN corner))
              (ADVP (RB too)))))
        (, ,)
        (NP (PRP they))
        (VP (VBD found)
          (S
            (NP (PRP it))
            (ADJP (JJ quiet))
            (ADVP (RB there))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD saw)
        (NP
          (NP (NN nothing))
          (PP (IN of)
            (NP (DT the) (NN lady))))))
    (. .)))

mark(spoke-3, As-1)
nsubj(spoke-3, he-2)
advcl(thought-5, spoke-3)
nsubj(thought-5, Diamond-4)
root(ROOT-0, thought-5)
nsubj(caught-7, he-6)
ccomp(thought-5, caught-7)
det(glimpse-9, a-8)
dobj(caught-7, glimpse-9)
nn(Wind-12, North-11)
prep_of(glimpse-9, Wind-12)
vmod(Wind-12, turning-13)
det(corner-15, a-14)
dobj(turning-13, corner-15)
prep_in_front_of(corner-15, them-19)
advmod(turned-24, when-22)
nsubj(turned-24, they-23)
advcl(found-30, turned-24)
det(corner-26, the-25)
dobj(turned-24, corner-26)
advmod(turned-24, too-27)
nsubj(found-30, they-29)
conj_and(thought-5, found-30)
nsubj(quiet-32, it-31)
xcomp(found-30, quiet-32)
advmod(quiet-32, there-33)
nsubj(saw-37, he-36)
conj_but(thought-5, saw-37)
dobj(saw-37, nothing-38)
det(lady-41, the-40)
prep_of(nothing-38, lady-41)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Now))
      (NP (PRP you))
      (VP (VBP lead)
        (NP (PRP me))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD said) (, ,)
          (S
            (VP (VBG taking)
              (NP (PRP$ her) (NN hand))))))
      (, ,) (`` ``))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB take)
          (NP
            (NP (NN care))
            (PP (IN of)
              (NP (PRP you)))))))
    (. .) ('' '')))

advmod(lead-4, Now-2)
nsubj(lead-4, you-3)
root(ROOT-0, lead-4)
dobj(lead-4, me-5)
nsubj(said-9, he-8)
dep(lead-4, said-9)
xcomp(said-9, taking-11)
poss(hand-13, her-12)
dobj(taking-11, hand-13)
nsubj(take-19, I-17)
aux(take-19, 'll-18)
conj_and(lead-4, take-19)
dobj(take-19, care-20)
prep_of(care-20, you-22)

(ROOT
  (S
    (NP (DT The) (NN girl))
    (VP
      (VP (VBD withdrew)
        (NP (PRP$ her) (NN hand)))
      (, ,)
      (CC but)
      (VP (RB only)
        (S
          (VP (TO to)
            (VP (VB dry)
              (NP (PRP$ her) (NNS eyes))
              (PP (IN with)
                (NP (PRP$ her) (NN frock))))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (DT the) (JJ other))
            (VP (VBD had)
              (ADVP (RB enough))
              (S
                (VP (TO to)
                  (VP (VB do)
                    (PP (IN with)
                      (NP (PRP$ her) (NN broom)))))))))))
    (. .)))

det(girl-2, The-1)
nsubj(withdrew-3, girl-2)
root(ROOT-0, withdrew-3)
poss(hand-5, her-4)
dobj(withdrew-3, hand-5)
conj_but(withdrew-3, only-8)
aux(dry-10, to-9)
xcomp(only-8, dry-10)
poss(eyes-12, her-11)
dobj(dry-10, eyes-12)
poss(frock-15, her-14)
prep_with(dry-10, frock-15)
mark(had-20, for-17)
det(other-19, the-18)
nsubj(had-20, other-19)
nsubj(do-23, other-19)
advcl(only-8, had-20)
advmod(had-20, enough-21)
aux(do-23, to-22)
xcomp(had-20, do-23)
poss(broom-26, her-25)
prep_with(do-23, broom-26)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD put)
        (NP (PRP it))
        (PP (IN in)
          (NP (PRP$ his) (RB again))))
      (, ,)
      (CC and)
      (VP (VBD led)
        (NP (PRP him)))
      (, ,)
      (S
        (VP (VBG turning)
          (PP (IN after)
            (S
              (VP (VBG turning))))
          (, ,)
          (SBAR (IN until)
            (S
              (NP (PRP they))
              (VP (VBD stopped)
                (PP (IN at)
                  (NP (DT a) (NN cellar-door)))
                (PP (IN in)
                  (NP (DT a)
                    (ADJP (RB very) (JJ dirty))
                    (NN lane)))))))))
    (. .)))

nsubj(put-2, She-1)
nsubj(led-9, She-1)
nsubj(turning-12, She-1)
root(ROOT-0, put-2)
dobj(put-2, it-3)
prep(put-2, in-4)
poss(again-6, his-5)
pobj(in-4, again-6)
conj_and(put-2, led-9)
dobj(led-9, him-10)
conj_and(put-2, turning-12)
vmod(put-2, turning-12)
prepc_after(turning-12, turning-14)
mark(stopped-18, until-16)
nsubj(stopped-18, they-17)
advcl(turning-12, stopped-18)
det(cellar-door-21, a-20)
prep_at(stopped-18, cellar-door-21)
det(lane-26, a-23)
advmod(dirty-25, very-24)
amod(lane-26, dirty-25)
prep_in(stopped-18, lane-26)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP she))
    (VP (VBD knocked))
    (. .)))

advmod(knocked-3, There-1)
nsubj(knocked-3, she-2)
root(ROOT-0, knocked-3)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD should) (RB n't)
        (VP (VB like)
          (S
            (VP (TO to)
              (VP (VB live)
                (ADVP (RB here))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(like-5, I-2)
nsubj(live-7, I-2)
aux(like-5, should-3)
neg(like-5, n't-4)
ccomp(said-11, like-5)
aux(live-7, to-6)
xcomp(like-5, live-7)
advmod(live-7, here-8)
root(ROOT-0, said-11)
nsubj(said-11, Diamond-12)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh) (, ,) (UH yes))
      (, ,)
      (NP (PRP you))
      (VP
        (VP (MD would))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBD had)
              (ADVP (RB nowhere) (RB else))
              (S
                (VP (TO to)
                  (VP (VB go)
                    (PP (TO to))))))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (DT the) (NN girl))
    (. .)))

discourse(would-7, Oh-2)
dep(Oh-2, yes-4)
nsubj(would-7, you-6)
ccomp(answered-19, would-7)
mark(had-11, if-9)
nsubj(had-11, you-10)
nsubj(go-15, you-10)
advcl(would-7, had-11)
advmod(else-13, nowhere-12)
advmod(had-11, else-13)
aux(go-15, to-14)
xcomp(had-11, go-15)
prep(go-15, to-16)
root(ROOT-0, answered-19)
det(girl-21, the-20)
dep(answered-19, girl-21)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP
      (ADVP (RB only))
      (VBP wish)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD may)
            (VP (VB get)
              (PRT (RP in)))))))
    (. .) ('' '')))

nsubj(wish-4, I-2)
advmod(wish-4, only-3)
root(ROOT-0, wish-4)
nsubj(get-7, we-5)
aux(get-7, may-6)
ccomp(wish-4, get-7)
prt(get-7, in-8)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB go)
                (PRT (RP in))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(want-5, I-2)
nsubj(go-7, I-2)
aux(want-5, do-3)
neg(want-5, n't-4)
ccomp(said-11, want-5)
aux(go-7, to-6)
xcomp(want-5, go-7)
prt(go-7, in-8)
root(ROOT-0, said-11)
nsubj(said-11, Diamond-12)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB mean)
        (S
          (VP (TO to)
            (VP (VB go) (, ,)
              (ADVP (RB then)))))))
    (. ?) ('' '')))

advmod(mean-5, Where-2)
aux(mean-5, do-3)
nsubj(mean-5, you-4)
nsubj(go-7, you-4)
root(ROOT-0, mean-5)
aux(go-7, to-6)
xcomp(mean-5, go-7)
advmod(go-7, then-9)

(ROOT
  (S (`` ``)
    (VP (VB Home)
      (PP (TO to)
        (NP (PRP$ my) (NN home))))
    (. .) ('' '')))

root(ROOT-0, Home-2)
poss(home-5, my-4)
prep_to(Home-2, home-5)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBZ 's)
      (NP (DT that)))
    (. ?) ('' '')))

advmod('s-3, Where-2)
root(ROOT-0, 's-3)
nsubj('s-3, that-4)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (ADVP (RB exactly))
      (VP (VB know)))
    (. .) ('' '')))

nsubj(know-6, I-2)
aux(know-6, do-3)
neg(know-6, n't-4)
advmod(know-6, exactly-5)
root(ROOT-0, know-6)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP (JJR worse) (RP off))
      (SBAR (IN than)
        (S
          (NP (PRP I))
          (VP (VBP am)))))
    (. .) ('' '')))

advmod(worse-5, Then-2)
nsubj(worse-5, you-3)
cop(worse-5, 're-4)
root(ROOT-0, worse-5)
dep(worse-5, off-6)
mark(am-9, than-7)
nsubj(am-9, I-8)
advcl(worse-5, am-9)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Oh) (UH no))
      (, ,)
      (PP (IN for)
        (NP (NNP North) (NNP Wind))
        (: --)))
    ('' '')
    (VP
      (VP (VBD began)
        (NP (NNP Diamond)))
      (, ,)
      (CC and)
      (VP (VBD stopped) (, ,)
        (S
          (NP (PRP he))
          (ADVP (RB hardly))
          (VP (VBD knew)
            (VP
              (FRAG
                (WHADVP (WRB why))))))))
    (. .)))

dep(began-10, Oh-2)
dep(Oh-2, no-3)
nn(Wind-7, North-6)
prep_for(Oh-2, Wind-7)
root(ROOT-0, began-10)
dobj(began-10, Diamond-11)
conj_and(began-10, stopped-14)
nsubj(knew-18, he-16)
advmod(knew-18, hardly-17)
ccomp(stopped-14, knew-18)
dep(knew-18, why-19)

(ROOT
  (INTJ (`` ``) (UH What) (. ?) ('' '')))

root(ROOT-0, What-2)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN girl))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD held)
            (NP (PRP$ her) (NN ear))
            (PP (TO to)
              (NP (DT the) (NN door) (NN listening)))))))
    (. .)))

root(ROOT-0, said-1)
det(girl-3, the-2)
dobj(said-1, girl-3)
mark(held-7, as-5)
nsubj(held-7, she-6)
advcl(said-1, held-7)
poss(ear-9, her-8)
dobj(held-7, ear-9)
det(listening-13, the-11)
nn(listening-13, door-12)
prep_to(held-7, listening-13)

(ROOT
  (S (CC But)
    (NP (NNP Diamond))
    (VP (VBD did) (RB not)
      (VP (VB reply)))
    (. .)))

cc(reply-5, But-1)
nsubj(reply-5, Diamond-2)
aux(reply-5, did-3)
neg(reply-5, not-4)
root(ROOT-0, reply-5)

(ROOT
  (S
    (NP (DT Neither))
    (VP (VBD did)
      (NP (JJ old) (NN Sal)))
    (. .)))

nsubj(did-2, Neither-1)
root(ROOT-0, did-2)
amod(Sal-4, old-3)
dobj(did-2, Sal-4)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD told)
        (NP (PRP you))
        (ADVP (RB so))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN girl))
    (. .)))

nsubj(told-3, I-2)
ccomp(said-8, told-3)
dobj(told-3, you-4)
advmod(told-3, so-5)
root(ROOT-0, said-8)
det(girl-10, the-9)
nsubj(said-8, girl-10)

(ROOT
  (S (`` ``)
    (NP (PRP She))
    (VP (VBZ is)
      (NP (JJ wide) (JJ awake) (NN hearkening)))
    (. .)))

nsubj(hearkening-6, She-2)
cop(hearkening-6, is-3)
amod(hearkening-6, wide-4)
amod(hearkening-6, awake-5)
root(ROOT-0, hearkening-6)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP do) (RB n't)
      (VP (VB get)
        (PRT (RP in))))
    (. .) ('' '')))

cc(get-5, But-1)
nsubj(get-5, we-2)
aux(get-5, do-3)
neg(get-5, n't-4)
root(ROOT-0, get-5)
prt(get-5, in-6)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (MD will)
      (NP (PRP you))
      (VP (VB do) (, ,)
        (ADVP (RB then))))
    (. ?) ('' '')))

dobj(do-5, What-2)
aux(do-5, will-3)
nsubj(do-5, you-4)
root(ROOT-0, do-5)
advmod(do-5, then-7)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Move)
        (PRT (RP on))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

ccomp(answered-7, Move-2)
prt(Move-2, on-3)
nsubj(answered-7, she-6)
root(ROOT-0, answered-7)

(ROOT
  (INTJ (`` ``) (UH Where) (. ?) ('' '')))

root(ROOT-0, Where-2)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (ADVP (RB anywheres))
    (. .)))

discourse(anywheres-4, Oh-2)
root(ROOT-0, anywheres-4)

(ROOT
  (S
    (S
      (VP (VB Bless)
        (NP (PRP you))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBN used)
        (PP (TO to)
          (NP (PRP it)))))
    (. .) ('' '')))

ccomp(used-6, Bless-1)
dobj(Bless-1, you-2)
nsubjpass(used-6, I-4)
auxpass(used-6, 'm-5)
root(ROOT-0, used-6)
prep_to(used-6, it-8)

(ROOT
  (S (`` ``)
    (NP (NNP Had))
    (RB n't)
    (NP (PRP you))
    (ADVP (RB better))
    (VP (VBP come)
      (ADVP (RB home))
      (PP (IN with)
        (NP (PRP me)))
      (, ,)
      (ADVP (RB then)))
    (. ?) ('' '')))

nsubj(come-6, Had-2)
neg(come-6, n't-3)
nsubj(come-6, you-4)
advmod(come-6, better-5)
root(ROOT-0, come-6)
advmod(come-6, home-7)
prep_with(come-6, me-9)
advmod(come-6, then-11)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ good) (NN joke))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB know)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP it))
                    (VP (VBZ is))))))))))
    (. .)))

nsubj(joke-6, That-2)
cop(joke-6, 's-3)
det(joke-6, a-4)
amod(joke-6, good-5)
root(ROOT-0, joke-6)
tmod(know-12, joke-6)
advmod(know-12, when-8)
nsubj(know-12, you-9)
aux(know-12, do-10)
neg(know-12, n't-11)
rcmod(joke-6, know-12)
advmod(is-15, where-13)
nsubj(is-15, it-14)
ccomp(know-12, is-15)

(ROOT
  (S
    (VP (VB Come)
      (PRT (RP on)))
    (. .) ('' '')))

root(ROOT-0, Come-1)
prt(Come-1, on-2)

(ROOT
  (S (`` ``)
    (CC But)
    (VP (VBZ where))
    (. ?) ('' '')))

cc(where-3, But-2)
root(ROOT-0, where-3)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (NP
      (NP (NNS nowheres))
      (PP (IN in)
        (NP (NN particular))))
    (. .)))

discourse(nowheres-4, Oh-2)
root(ROOT-0, nowheres-4)
prep_in(nowheres-4, particular-6)

(ROOT
  (S
    (VP (VB Come)
      (PRT (RP on)))
    (. .) ('' '')))

root(ROOT-0, Come-1)
prt(Come-1, on-2)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD obeyed))
    (. .)))

nsubj(obeyed-2, Diamond-1)
root(ROOT-0, obeyed-2)

(ROOT
  (S
    (NP (DT The) (NN wind))
    (VP (VBD had)
      (ADVP (RB now))
      (VP (VBN fallen)
        (ADVP (RB considerably))))
    (. .)))

det(wind-2, The-1)
nsubj(fallen-5, wind-2)
aux(fallen-5, had-3)
advmod(fallen-5, now-4)
root(ROOT-0, fallen-5)
advmod(fallen-5, considerably-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD wandered)
      (ADVP (RP on)
        (CC and)
        (RP on))
      (, ,)
      (S
        (VP (VBG turning)
          (PP (IN in)
            (NP
              (NP (DT this) (NN direction))
              (CC and)
              (NP (DT that))))
          (, ,)
          (PP (IN without)
            (NP
              (NP (DT any) (NN reason))
              (PP (IN for)
                (NP
                  (NP (CD one) (NN way))
                  (QP (JJR more) (IN than) (DT another))))))))
      (, ,)
      (SBAR (IN until)
        (S
          (NP (PRP they))
          (VP (VBD had)
            (VP (VBN got)
              (PRT (RP out))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ thick))
                  (PP (IN of)
                    (NP (DT the) (NNS houses)))))
              (PP (IN into)
                (NP
                  (NP (DT a) (NN waste) (NN kind))
                  (PP (IN of)
                    (NP (NN place))))))))))
    (. .)))

nsubj(wandered-2, They-1)
root(ROOT-0, wandered-2)
advmod(wandered-2, on-3)
advmod(wandered-2, on-5)
conj_and(on-3, on-5)
xcomp(wandered-2, turning-7)
det(direction-10, this-9)
prep_in(turning-7, direction-10)
prep_in(turning-7, that-12)
conj_and(direction-10, that-12)
det(reason-16, any-15)
prep_without(turning-7, reason-16)
num(way-19, one-18)
prep_for(reason-16, way-19)
mwe(than-21, more-20)
quantmod(another-22, than-21)
num(way-19, another-22)
mark(got-27, until-24)
nsubj(got-27, they-25)
aux(got-27, had-26)
advcl(wandered-2, got-27)
det(thick-31, the-30)
prep_out_of(got-27, thick-31)
det(houses-34, the-33)
prep_of(thick-31, houses-34)
det(kind-38, a-36)
nn(kind-38, waste-37)
prep_into(got-27, kind-38)
prep_of(kind-38, place-40)

(ROOT
  (S
    (PP (IN By)
      (NP (DT this) (NN time)))
    (NP (PRP they))
    (VP (VBD were)
      (ADJP (DT both) (RB very) (JJ tired)))
    (. .)))

det(time-3, this-2)
prep_by(tired-8, time-3)
nsubj(tired-8, they-4)
cop(tired-8, were-5)
det(tired-8, both-6)
advmod(tired-8, very-7)
root(ROOT-0, tired-8)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP
        (VP (VBD felt)
          (NP
            (NP (DT a) (JJ good) (NN deal))
            (VP (VBN inclined)
              (S
                (VP (TO to)
                  (VP (VB cry)))))))
        (, ,)
        (CC and)
        (VP (VBD thought)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN been)
                  (ADJP (RB very) (JJ silly)
                    (S
                      (VP (TO to)
                        (VP (VB get)
                          (PRT (RP down))
                          (PP (IN from)
                            (NP
                              (NP (DT the) (NN back))
                              (PP (IN of)
                                (NP (NNP North) (NNP Wind)))))
                          (: ;)
                          (SBAR (RB not) (IN that)
                            (S
                              (NP (PRP he))
                              (VP (MD would)
                                (VP (VB have)
                                  (VP (VBD minded)
                                    (NP (PRP it)))))))))))
                  (SBAR (IN if)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (VP (VBN done)
                          (S
                            (NP (DT the) (NN girl))
                            (ADJP (DT any) (JJ good))))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN been)
                (PP (IN of)
                  (NP (DT no) (NN use)))
                (PP (TO to)
                  (NP (PRP her)))))))))
    (. .)))

nsubj(felt-2, Diamond-1)
nsubj(thought-11, Diamond-1)
root(ROOT-0, felt-2)
det(deal-5, a-3)
amod(deal-5, good-4)
dobj(felt-2, deal-5)
vmod(deal-5, inclined-6)
aux(cry-8, to-7)
xcomp(inclined-6, cry-8)
conj_and(felt-2, thought-11)
nsubj(silly-16, he-12)
nsubj(get-18, he-12)
aux(silly-16, had-13)
cop(silly-16, been-14)
advmod(silly-16, very-15)
ccomp(thought-11, silly-16)
aux(get-18, to-17)
xcomp(silly-16, get-18)
prt(get-18, down-19)
det(back-22, the-21)
prep_from(get-18, back-22)
nn(Wind-25, North-24)
prep_of(back-22, Wind-25)
dep(minded-32, not-27)
mark(minded-32, that-28)
nsubj(minded-32, he-29)
aux(minded-32, would-30)
aux(minded-32, have-31)
parataxis(get-18, minded-32)
dobj(minded-32, it-33)
mark(done-37, if-34)
nsubj(done-37, he-35)
aux(done-37, had-36)
advcl(silly-16, done-37)
det(girl-39, the-38)
nsubj(good-41, girl-39)
det(good-41, any-40)
xcomp(done-37, good-41)
nsubj(thought-45, he-44)
conj_but(felt-2, thought-45)
nsubj(been-48, he-46)
aux(been-48, had-47)
ccomp(thought-45, been-48)
neg(use-51, no-50)
prep_of(been-48, use-51)
prep_to(been-48, her-53)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (VP (VBN mistaken)
        (ADVP (RB there))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP she))
            (VP (VBD was)
              (ADJP
                (ADJP (RB far) (JJR happier))
                (PP (IN for)
                  (S
                    (VP (VBG having)
                      (NP
                        (NP (NNP Diamond))
                        (PP (IN with)
                          (NP (PRP her))))))))
              (SBAR (IN than) (IN if)
                (S
                  (NP (PRP she))
                  (VP (VBD had)
                    (VP (VBN been)
                      (VP (VBG wandering)
                        (PRT (RP about))
                        (ADVP (RB alone))))))))))))
    (. .)))

nsubjpass(mistaken-3, He-1)
auxpass(mistaken-3, was-2)
root(ROOT-0, mistaken-3)
advmod(mistaken-3, there-4)
mark(happier-10, for-6)
nsubj(happier-10, she-7)
cop(happier-10, was-8)
advmod(happier-10, far-9)
advcl(mistaken-3, happier-10)
prepc_for(happier-10, having-12)
dobj(having-12, Diamond-13)
prep_with(Diamond-13, her-15)
mark(wandering-21, than-16)
mark(wandering-21, if-17)
nsubj(wandering-21, she-18)
aux(wandering-21, had-19)
aux(wandering-21, been-20)
advcl(happier-10, wandering-21)
prt(wandering-21, about-22)
advmod(wandering-21, alone-23)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD did) (RB not)
      (VP (VB seem)
        (ADJP (RB so) (JJ tired))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD was))))))
    (. .)))

nsubj(seem-4, She-1)
aux(seem-4, did-2)
neg(seem-4, not-3)
root(ROOT-0, seem-4)
advmod(tired-6, so-5)
acomp(seem-4, tired-6)
mark(was-9, as-7)
nsubj(was-9, he-8)
advcl(seem-4, was-9)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP Do))
      (VP (VBD let)
        (SBAR
          (S
            (NP (PRP us))
            (VP (VBP rest)
              (NP (DT a) (NN bit)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(let-3, Do-2)
ccomp(said-10, let-3)
nsubj(rest-5, us-4)
ccomp(let-3, rest-5)
det(bit-7, a-6)
dobj(rest-5, bit-7)
root(ROOT-0, said-10)
nsubj(said-10, Diamond-11)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Let) (POS 's))
      (VP (VBP see)))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

nsubj(see-4, Let-2)
possessive(Let-2, 's-3)
ccomp(answered-8, see-4)
nsubj(answered-8, she-7)
root(ROOT-0, answered-8)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (NN something))
        (PP (IN like)
          (NP (DT a) (NN railway))))
      (ADVP (RB there)))
    (. .)))

expl('s-3, There-2)
root(ROOT-0, 's-3)
nsubj('s-3, something-4)
det(railway-7, a-6)
prep_like(something-4, railway-7)
advmod('s-3, there-8)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (EX there))
    (VP (VBZ 's)
      (NP (DT an) (JJ open) (NN arch)))
    (. .) ('' '')))

advmod('s-3, Perhaps-1)
expl('s-3, there-2)
root(ROOT-0, 's-3)
det(arch-6, an-4)
amod(arch-6, open-5)
nsubj('s-3, arch-6)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VBD went)
          (PP (IN towards)
            (NP (PRP it))))
        (CC and)
        (VP (VBD found)
          (NP (CD one)))))
    (, ,)
    (CC and)
    (PRN (, ,)
      (ADVP (RBR better) (RB still))
      (, ,))
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (DT an) (JJ empty) (NN barrel))
          (VP (VBG lying)
            (PP (IN under)
              (NP (DT the) (NN arch)))))))
    (. .)))

nsubj(went-2, They-1)
nsubj(found-6, They-1)
root(ROOT-0, went-2)
prep_towards(went-2, it-4)
conj_and(went-2, found-6)
dobj(found-6, one-7)
advmod(still-12, better-11)
dep(went-2, still-12)
expl(was-15, there-14)
ccomp(went-2, was-15)
conj_and(went-2, was-15)
det(barrel-18, an-16)
amod(barrel-18, empty-17)
nsubj(was-15, barrel-18)
vmod(barrel-18, lying-19)
det(arch-22, the-21)
prep_under(lying-19, arch-22)

(ROOT
  (S (`` ``)
    (VP (VB Hallo))
    (. !)))

root(ROOT-0, Hallo-2)

(ROOT
  (S
    (ADVP (RB here))
    (NP (PRP we))
    (VP (VBP are))
    (. !) ('' '')))

advmod(are-3, here-1)
nsubj(are-3, we-2)
root(ROOT-0, are-3)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN girl)))
    (. .)))

root(ROOT-0, said-1)
det(girl-3, the-2)
dobj(said-1, girl-3)

(ROOT
  (S (`` ``)
    (S
      (NP (DT A) (NN barrel))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (JJ jolliest) (NN bed))
          (VP (VBG going)))))
    (: --)
    (S
      (PP (IN on)
        (NP (DT the) (NN tramp)))
      (, ,)
      (NP (PRP I))
      (VP (VBP mean)))
    (. .)))

det(barrel-3, A-2)
nsubj(bed-7, barrel-3)
cop(bed-7, 's-4)
det(bed-7, the-5)
amod(bed-7, jolliest-6)
root(ROOT-0, bed-7)
vmod(bed-7, going-8)
det(tramp-12, the-11)
prep_on(mean-15, tramp-12)
nsubj(mean-15, I-14)
parataxis(bed-7, mean-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD 'll)
      (VP
        (VP (VB have)
          (NP (JJ forty) (NNS winks)))
        (, ,)
        (CC and)
        (ADVP (RB then))
        (VP (VB go)
          (PRT (RP on))
          (ADVP (RB again)))))
    (. .) ('' '')))

nsubj(have-3, We-1)
nsubj(go-9, We-1)
aux(have-3, 'll-2)
root(ROOT-0, have-3)
amod(winks-5, forty-4)
dobj(have-3, winks-5)
advmod(go-9, then-8)
conj_and(have-3, go-9)
prt(go-9, on-10)
advmod(go-9, again-11)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD crept)
        (PRT (RP in))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Diamond))
      (VP (VBD crept)
        (PRT (RP in))
        (PP (IN beside)
          (NP (PRP her)))))
    (. .)))

nsubj(crept-2, She-1)
root(ROOT-0, crept-2)
prt(crept-2, in-3)
nsubj(crept-7, Diamond-6)
conj_and(crept-2, crept-7)
prt(crept-7, in-8)
prep_beside(crept-7, her-10)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD put)
        (SBAR
          (S
            (NP (PRP$ their) (NNS arms))
            (VP (VBP round)
              (NP (DT each) (JJ other)))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD began)
            (S
              (VP (TO to)
                (VP (VB grow)
                  (ADJP (JJ warm))))))))
      (, ,)
      (NP
        (NP (NNP Diamond) (POS 's))
        (NN courage))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB come)
              (ADVP (RB back)))))))
    (. .)))

nsubj(put-2, They-1)
root(ROOT-0, put-2)
poss(arms-4, their-3)
nsubj(round-5, arms-4)
ccomp(put-2, round-5)
det(other-7, each-6)
dobj(round-5, other-7)
advmod(began-12, when-10)
nsubj(began-12, he-11)
nsubj(grow-14, he-11)
advcl(began-20, began-12)
aux(grow-14, to-13)
xcomp(began-12, grow-14)
acomp(grow-14, warm-15)
poss(courage-19, Diamond-17)
nsubj(began-20, courage-19)
nsubj(come-22, courage-19)
conj_and(put-2, began-20)
aux(come-22, to-21)
xcomp(began-20, come-22)
advmod(come-22, back-23)

(ROOT
  (S (`` ``)
    (NP (DT This))
    (VP (VBZ is)
      (ADJP (JJ jolly)))
    (. !) ('' '')))

nsubj(jolly-4, This-2)
cop(jolly-4, is-3)
root(ROOT-0, jolly-4)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB so) (JJ glad)))
    (. !) ('' '')))

nsubj(glad-5, I-2)
cop(glad-5, 'm-3)
advmod(glad-5, so-4)
root(ROOT-0, glad-5)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (ADVP (RB so) (RB much))
          (PP (IN of)
            (NP (PRP it))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN girl))
    (. .)))

nsubj(think-5, I-2)
aux(think-5, do-3)
neg(think-5, n't-4)
ccomp(said-12, think-5)
advmod(much-7, so-6)
advmod(think-5, much-7)
prep_of(think-5, it-9)
root(ROOT-0, said-12)
det(girl-14, the-13)
nsubj(said-12, girl-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBN used)
          (PP (TO to)
            (NP (PRP it))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP suppose))
    (. .)))

nsubjpass(used-4, I-2)
auxpass(used-4, 'm-3)
ccomp(suppose-9, used-4)
prep_to(used-4, it-6)
nsubj(suppose-9, I-8)
root(ROOT-0, suppose-9)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB think)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (DT a) (NN kid))
            (VP (VBP like)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBZ comes)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADVP (IN out) (DT all))
                          (ADVP (RB alone)
                            (NP
                              (NP (DT this) (NN time) (NN o) (POS '))
                              (NN night))))))))))))))
    (. .) ('' '')))

cc(think-5, But-1)
nsubj(think-5, I-2)
aux(think-5, ca-3)
neg(think-5, n't-4)
root(ROOT-0, think-5)
advmod(like-9, how-6)
det(kid-8, a-7)
nsubj(like-9, kid-8)
ccomp(think-5, like-9)
nsubj(comes-11, you-10)
nsubj(be-13, you-10)
ccomp(like-9, comes-11)
aux(be-13, to-12)
xcomp(comes-11, be-13)
advmod(be-13, out-14)
dep(out-14, all-15)
advmod(be-13, alone-16)
det(o-19, this-17)
nn(o-19, time-18)
poss(night-21, o-19)
pobj(alone-16, night-21)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD called)
        (S
          (NP (PRP him))
          (NP (DT a) (NN kid)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD was) (RB not)
        (ADJP
          (ADJP (RB really)
            (NP (DT a) (NN month))
            (JJR older))
          (SBAR (IN than)
            (S
              (NP (PRP he))
              (VP (VBD was)))))))
    (: ;)
    (S
      (ADVP (RB only))
      (NP (PRP she))
      (VP (VBD had)
        (VP (VBN had)
          (S
            (VP (TO to)
              (VP (VB work)
                (PP (IN for)
                  (NP (PRP$ her) (NN bread)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (ADVP (RB so) (RB soon))
      (VP (VBZ makes)
        (S
          (NP (NNS people))
          (ADJP (JJR older)))))
    (. .)))

nsubj(called-2, She-1)
root(ROOT-0, called-2)
nsubj(kid-5, him-3)
det(kid-5, a-4)
xcomp(called-2, kid-5)
nsubj(older-14, she-8)
cop(older-14, was-9)
neg(older-14, not-10)
advmod(older-14, really-11)
det(month-13, a-12)
tmod(older-14, month-13)
conj_but(called-2, older-14)
mark(was-17, than-15)
nsubj(was-17, he-16)
ccomp(older-14, was-17)
advmod(had-22, only-19)
nsubj(had-22, she-20)
nsubj(work-24, she-20)
aux(had-22, had-21)
conj_but(called-2, had-22)
aux(work-24, to-23)
xcomp(had-22, work-24)
poss(bread-27, her-26)
prep_for(work-24, bread-27)
nsubj(makes-33, that-30)
advmod(soon-32, so-31)
advmod(makes-33, soon-32)
conj_and(called-2, makes-33)
nsubj(older-35, people-34)
xcomp(makes-33, older-35)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (NP (PRP I))
      (VP (MD should) (RB n't)
        (VP (VB have)
          (VP (VBN been)
            (ADJP (IN out) (RB so) (JJ late))
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBD had) (RB n't)
                  (VP (VBN got)
                    (PRT (RP down))
                    (S
                      (VP (TO to)
                        (VP (VB help)
                          (NP (PRP you)))))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

cc(late-10, But-2)
nsubj(late-10, I-3)
aux(late-10, should-4)
neg(late-10, n't-5)
aux(late-10, have-6)
cop(late-10, been-7)
dep(late-10, out-8)
advmod(late-10, so-9)
ccomp(said-22, late-10)
mark(got-15, if-11)
nsubj(got-15, I-12)
nsubj(help-18, I-12)
aux(got-15, had-13)
neg(got-15, n't-14)
advcl(late-10, got-15)
prt(got-15, down-16)
aux(help-18, to-17)
xcomp(got-15, help-18)
dobj(help-18, you-19)
root(ROOT-0, said-22)
nsubj(said-22, Diamond-23)

(ROOT
  (S (`` ``)
    (NP (NNP North) (NNP Wind))
    (VP (VBZ is)
      (VP (VBN gone)
        (NP (NN home))
        (ADVP (RB long) (RB ago))))
    (. .) ('' '')))

nn(Wind-3, North-2)
nsubjpass(gone-5, Wind-3)
auxpass(gone-5, is-4)
root(ROOT-0, gone-5)
dobj(gone-5, home-6)
advmod(ago-8, long-7)
advmod(gone-5, ago-8)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD must)
              (VP (VB ha)
                (SBAR
                  (S
                    (NP (POS '))
                    (VP (VBD got)
                      (PRT (RP out))
                      (NP
                        (NP
                          (NP (NNP o) (POS '))
                          (NN one) (NN o) ('' '))
                        (SBAR
                          (S
                            (NP (PRP them))
                            (VP (VB Hidget)
                              (NP (NNS Asylms)))))))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN girl))
    (. .)))

nsubj(think-3, I-2)
ccomp(said-20, think-3)
nsubj(ha-6, you-4)
aux(ha-6, must-5)
ccomp(think-3, ha-6)
ccomp(ha-6, got-8)
prt(got-8, out-9)
poss(o-13, o-10)
nn(o-13, one-12)
dobj(got-8, o-13)
nsubj(Hidget-16, them-15)
rcmod(o-13, Hidget-16)
dobj(Hidget-16, Asylms-17)
root(ROOT-0, said-20)
det(girl-22, the-21)
nsubj(said-20, girl-22)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBD said)
      (NP (NN something))
      (PP (IN about)
        (NP (DT the) (NN north) (NN wind) (NN afore)))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD could) (RB n't)
            (VP (VB get)
              (NP (DT the) (NNS rights))
              (PP (IN of)))))))
    (. .) ('' '')))

nsubj(said-3, You-2)
root(ROOT-0, said-3)
dobj(said-3, something-4)
det(afore-9, the-6)
nn(afore-9, north-7)
nn(afore-9, wind-8)
prep_about(said-3, afore-9)
mark(get-14, that-10)
nsubj(get-14, I-11)
aux(get-14, could-12)
neg(get-14, n't-13)
ccomp(said-3, get-14)
det(rights-16, the-15)
dobj(get-14, rights-16)
prep(get-14, of-17)

(ROOT
  (S
    (ADVP (IN So) (RB now))
    (, ,)
    (PP (IN for)
      (NP
        (NP (DT the) (NN sake))
        (PP (IN of)
          (NP (PRP$ his) (NN character)))))
    (, ,)
    (NP (NNP Diamond))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB tell)
            (NP (PRP her))
            (NP (DT the) (JJ whole) (NN story))))))
    (. .)))

advmod(had-12, So-1)
advmod(So-1, now-2)
det(sake-6, the-5)
prep_for(had-12, sake-6)
poss(character-9, his-8)
prep_of(sake-6, character-9)
nsubj(had-12, Diamond-11)
nsubj(tell-14, Diamond-11)
root(ROOT-0, had-12)
aux(tell-14, to-13)
xcomp(had-12, tell-14)
iobj(tell-14, her-15)
det(story-18, the-16)
amod(story-18, whole-17)
dobj(tell-14, story-18)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD did) (RB not)
      (VP (VB believe)
        (NP
          (NP (DT a) (NN word))
          (PP (IN of)
            (NP (PRP it))))))
    (. .)))

nsubj(believe-4, She-1)
aux(believe-4, did-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
det(word-6, a-5)
dobj(believe-4, word-6)
prep_of(word-6, it-8)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was) (RB n't)
            (NP (JJ such) (DT a)
              (ADJP (JJ flat) (RB as)
                (S
                  (VP (TO to)
                    (VP (VB believe)
                      (NP (PDT all) (DT that))))))
              (NN bosh))))))
    (. .)))

nsubj(said-2, She-1)
root(ROOT-0, said-2)
nsubj(bosh-14, he-3)
cop(bosh-14, was-4)
neg(bosh-14, n't-5)
amod(bosh-14, such-6)
det(bosh-14, a-7)
amod(bosh-14, flat-8)
advmod(flat-8, as-9)
aux(believe-11, to-10)
xcomp(flat-8, believe-11)
predet(that-13, all-12)
dobj(believe-11, that-13)
ccomp(said-2, bosh-14)

(ROOT
  (S (CC But)
    (SBAR (IN as)
      (S
        (NP (PRP she))
        (VP (VBD spoke))))
    (NP (EX there))
    (VP
      (VP (VBD came)
        (NP
          (NP (DT a) (JJ great) (NN blast))
          (PP (IN of)
            (NP (NN wind))))
        (PP (IN through)
          (NP (DT the) (NN arch))))
      (, ,)
      (CC and)
      (VP (VBD set)
        (NP
          (NP (DT the) (NN barrel))
          (VP (VBG rolling)))))
    (. .)))

mark(spoke-4, as-2)
nsubj(spoke-4, she-3)
advcl(came-6, spoke-4)
expl(came-6, there-5)
root(ROOT-0, came-6)
det(blast-9, a-7)
amod(blast-9, great-8)
dobj(came-6, blast-9)
nsubj(came-6, blast-9)
nsubj(set-17, blast-9)
prep_of(blast-9, wind-11)
det(arch-14, the-13)
prep_through(came-6, arch-14)
conj_and(came-6, set-17)
det(barrel-19, the-18)
nsubj(came-6, barrel-19)
dobj(set-17, barrel-19)
vmod(barrel-19, rolling-20)

(ROOT
  (S (IN So)
    (NP (PRP they))
    (VP (VBD made)
      (NP (NN haste))
      (S
        (VP (TO to)
          (VP (VB get)
            (PRT (RP out))
            (PP (IN of)
              (NP (PRP it))))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP they))
          (VP
            (VP (VBD had)
              (NP
                (NP (DT no) (NN notion))
                (PP (IN of)
                  (S
                    (VP (VBG being)
                      (VP (VBN rolled)
                        (PRT (RP over)
                          (CC and)
                          (RP over))
                        (SBAR (RB as) (IN if)
                          (S
                            (NP (PRP they))
                            (VP (VBD had)
                              (VP (VBN been)
                                (VP (VBN packed)
                                  (ADVP (RB tight)))))))))))))
            (CC and)
            (VP (MD would) (RB n't)
              (VP (VB hurt) (, ,)
                (PP (IN like)
                  (NP
                    (NP (DT a) (NN barrel))
                    (PP (IN of)
                      (NP (NNS herrings)))))))))))
    (. .)))

dep(made-3, So-1)
nsubj(made-3, they-2)
root(ROOT-0, made-3)
dobj(made-3, haste-4)
aux(get-6, to-5)
vmod(made-3, get-6)
prep_out_of(get-6, it-9)
mark(had-13, for-11)
nsubj(had-13, they-12)
nsubj(hurt-32, they-12)
advcl(made-3, had-13)
neg(notion-15, no-14)
dobj(had-13, notion-15)
auxpass(rolled-18, being-17)
prepc_of(notion-15, rolled-18)
prt(rolled-18, over-19)
cc(over-19, and-20)
dep(over-19, over-21)
advmod(packed-27, as-22)
mark(packed-27, if-23)
nsubjpass(packed-27, they-24)
aux(packed-27, had-25)
auxpass(packed-27, been-26)
advcl(rolled-18, packed-27)
advmod(packed-27, tight-28)
aux(hurt-32, would-30)
neg(hurt-32, n't-31)
advcl(made-3, hurt-32)
conj_and(had-13, hurt-32)
det(barrel-36, a-35)
prep_like(hurt-32, barrel-36)
prep_of(barrel-36, herrings-38)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD should)
              (VP (VB have)
                (VP (VBN had)
                  (NP (DT a) (NN sleep)))))))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (NNP Diamond))))
    (: ;) (`` ``)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (ADJP (RB very) (JJ sleepy)
                  (PP (IN after)
                    (NP (DT all))))))))))
    (. .)))

nsubj(thought-3, I-2)
root(ROOT-0, thought-3)
nsubj(had-7, we-4)
aux(had-7, should-5)
aux(had-7, have-6)
ccomp(thought-3, had-7)
det(sleep-9, a-8)
dobj(had-7, sleep-9)
dep(thought-3, said-12)
nsubj(said-12, Diamond-13)
nsubj(say-20, I-17)
aux(say-20, ca-18)
neg(say-20, n't-19)
conj_but(thought-3, say-20)
nsubj(sleepy-24, I-21)
cop(sleepy-24, 'm-22)
advmod(sleepy-24, very-23)
ccomp(say-20, sleepy-24)
prep_after(sleepy-24, all-26)

(ROOT
  (S
    (S
      (VP (VB Come)))
    (, ,)
    (NP (NNP let) (POS 's))
    (VP (VBP go)
      (PRT (RP on))
      (ADVP (RB again)))
    (. .) ('' '')))

ccomp(go-5, Come-1)
nsubj(go-5, let-3)
possessive(let-3, 's-4)
root(ROOT-0, go-5)
prt(go-5, on-6)
advmod(go-5, again-7)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD wandered)
      (PRT (RP on)
        (CC and)
        (RP on))
      (, ,)
      (S
        (ADVP (RB sometimes))
        (VP
          (VP (VBG sitting)
            (PP (IN on)
              (NP (DT a) (NN door-step))))
          (, ,)
          (CC but)
          (VP
            (ADVP (RB always))
            (VBG turning)
            (PP (IN into)
              (NP (NNS lanes)
                (CC or)
                (NNS fields)))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBD had)
                  (NP (DT a) (NN chance)))))))))
    (. .)))

nsubj(wandered-2, They-1)
root(ROOT-0, wandered-2)
prt(wandered-2, on-3)
cc(on-3, and-4)
dep(on-3, on-5)
advmod(sitting-8, sometimes-7)
ccomp(wandered-2, sitting-8)
det(door-step-11, a-10)
prep_on(sitting-8, door-step-11)
advmod(turning-15, always-14)
ccomp(wandered-2, turning-15)
conj_but(sitting-8, turning-15)
prep_into(turning-15, lanes-17)
prep_into(turning-15, fields-19)
conj_or(lanes-17, fields-19)
advmod(had-22, when-20)
nsubj(had-22, they-21)
advcl(turning-15, had-22)
det(chance-24, a-23)
dobj(had-22, chance-24)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD found)
      (NP (PRP themselves))
      (PP (IN at)
        (NP (JJ last)))
      (PP (IN on)
        (NP
          (NP (DT a) (VBG rising) (NN ground))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD sloped)
                (ADVP (RB rather))
                (ADVP (RB steeply))
                (PP (IN on)
                  (NP (DT the) (JJ other) (NN side)))))))))
    (. .)))

nsubj(found-2, They-1)
root(ROOT-0, found-2)
dobj(found-2, themselves-3)
prep_at(found-2, last-5)
det(ground-9, a-7)
amod(ground-9, rising-8)
prep_on(found-2, ground-9)
nsubj(sloped-11, ground-9)
rcmod(ground-9, sloped-11)
advmod(sloped-11, rather-12)
advmod(sloped-11, steeply-13)
det(side-17, the-15)
amod(side-17, other-16)
prep_on(sloped-11, side-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN waste) (NN kind))
        (PP (IN of)
          (NP
            (NP (NN spot) (RB below))
            (, ,)
            (VP (VBN bounded)
              (PP (IN by)
                (NP (DT an) (NN irregular) (NN wall)))
              (, ,)
              (PP (IN with)
                (NP
                  (NP (DT a) (JJ few) (NNS doors))
                  (PP (IN in)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(kind-5, It-1)
cop(kind-5, was-2)
det(kind-5, a-3)
nn(kind-5, waste-4)
root(ROOT-0, kind-5)
prep_of(kind-5, spot-7)
advmod(spot-7, below-8)
vmod(spot-7, bounded-10)
det(wall-14, an-12)
nn(wall-14, irregular-13)
agent(bounded-10, wall-14)
det(doors-19, a-17)
amod(doors-19, few-18)
prep_with(bounded-10, doors-19)
prep_in(doors-19, it-21)

(ROOT
  (S
    (NP (JJ Outside))
    (VP (VBD lay)
      (NP (JJ broken) (NNS things))
      (PP (IN in)
        (NP (NN general)))
      (, ,)
      (PP (IN from)
        (NP (NN garden) (NNS rollers)))
      (PP (TO to)
        (NP (NNS flower-pots)
          (CC and)
          (NNS wine-bottles))))
    (. .)))

nsubj(lay-2, Outside-1)
root(ROOT-0, lay-2)
amod(things-4, broken-3)
dobj(lay-2, things-4)
prep_in(lay-2, general-6)
nn(rollers-10, garden-9)
prep_from(lay-2, rollers-10)
prep_to(lay-2, flower-pots-12)
prep_to(lay-2, wine-bottles-14)
conj_and(flower-pots-12, wine-bottles-14)

(ROOT
  (S
    (S (CC But)
      (NP (DT the) (NN moment))
      (NP (PRP they))
      (VP (VBD reached)
        (NP
          (NP (DT the) (NN brow))
          (PP (IN of)
            (NP (DT the) (VBG rising) (NN ground))))))
    (, ,)
    (NP
      (NP (DT a) (NN gust))
      (PP (IN of)
        (NP (NN wind))))
    (VP
      (VP (VBD seized)
        (NP (PRP them)))
      (CC and)
      (VP (VBD blew)
        (NP (PRP them))
        (ADVP
          (ADVP
            (ADVP (RB down) (RB hill))
            (RB as) (RB fast))
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (MD could)
                (VP (VB run))))))))
    (. .)))

cc(reached-5, But-1)
det(moment-3, the-2)
nsubj(reached-5, moment-3)
nsubj(reached-5, they-4)
ccomp(seized-17, reached-5)
det(brow-7, the-6)
dobj(reached-5, brow-7)
det(ground-11, the-9)
amod(ground-11, rising-10)
prep_of(brow-7, ground-11)
det(gust-14, a-13)
nsubj(seized-17, gust-14)
nsubj(blew-20, gust-14)
prep_of(gust-14, wind-16)
root(ROOT-0, seized-17)
dobj(seized-17, them-18)
conj_and(seized-17, blew-20)
dobj(blew-20, them-21)
advmod(hill-23, down-22)
advmod(blew-20, hill-23)
advmod(hill-23, as-24)
advmod(hill-23, fast-25)
mark(run-29, as-26)
nsubj(run-29, they-27)
aux(run-29, could-28)
advcl(hill-23, run-29)
ccomp(hill-23, run-29)

(ROOT
  (SINV (CC Nor)
    (MD could)
    (NP (NNP Diamond))
    (VP (VB stop)
      (SBAR (IN before)
        (S
          (NP (PRP he))
          (VP (VBD went)
            (NP (NN bang))
            (PP (IN against)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP (DT the) (NNS doors)))))
            (PP (IN in)
              (NP (DT the) (NN wall)))))))
    (. .)))

cc(stop-4, Nor-1)
aux(stop-4, could-2)
nsubj(stop-4, Diamond-3)
root(ROOT-0, stop-4)
mark(went-7, before-5)
nsubj(went-7, he-6)
advcl(stop-4, went-7)
dobj(went-7, bang-8)
prep_against(went-7, one-10)
det(doors-13, the-12)
prep_of(one-10, doors-13)
det(wall-16, the-15)
prep_in(went-7, wall-16)

(ROOT
  (S
    (PP (TO To)
      (NP (PRP$ his) (NN dismay)))
    (NP (PRP it))
    (VP (VBP burst)
      (ADJP (JJ open)))
    (. .)))

poss(dismay-3, his-2)
prep_to(burst-5, dismay-3)
nsubj(burst-5, it-4)
root(ROOT-0, burst-5)
acomp(burst-5, open-6)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBD came)
          (PP (TO to)
            (NP (PRP themselves))))))
    (NP (PRP they))
    (VP (VBD peeped)
      (PRT (RP in)))
    (. .)))

advmod(came-3, When-1)
nsubj(came-3, they-2)
advcl(peeped-7, came-3)
prep_to(came-3, themselves-5)
nsubj(peeped-7, they-6)
root(ROOT-0, peeped-7)
prt(peeped-7, in-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ back) (NN door))
        (PP (IN of)
          (NP (DT a) (NN garden)))))
    (. .)))

nsubj(door-5, It-1)
cop(door-5, was-2)
det(door-5, the-3)
amod(door-5, back-4)
root(ROOT-0, door-5)
det(garden-8, a-7)
prep_of(door-5, garden-8)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Ah))
    (, ,)
    (NP (NN ah))
    (. !) ('' '')))

discourse(ah-4, Ah-2)
root(ROOT-0, ah-4)

(ROOT
  (FRAG
    (NP (NNP cried) (NNP Diamond))
    (, ,)
    (SBAR (IN after)
      (S
        (PP (VBG staring)
          (PP (IN for)
            (NP (DT a) (JJ few) (NNS moments))))
        (, ,) (`` ``)
        (NP (PRP I))
        (VP (VBD thought)
          (ADVP (RB so)))))
    (. !)))

nn(Diamond-2, cried-1)
root(ROOT-0, Diamond-2)
mark(thought-13, after-4)
prep(thought-13, staring-5)
pcomp(staring-5, for-6)
det(moments-9, a-7)
amod(moments-9, few-8)
pobj(for-6, moments-9)
nsubj(thought-13, I-12)
dep(Diamond-2, thought-13)
advmod(thought-13, so-14)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP (VBZ takes)
      (NP (NN nobody))
      (PP (IN in)))
    (. !)))

nn(Wind-2, North-1)
nsubj(takes-3, Wind-2)
root(ROOT-0, takes-3)
dobj(takes-3, nobody-4)
prep(takes-3, in-5)

(ROOT
  (S
    (ADVP (RB Here))
    (NP (PRP I))
    (VP (VBP am)
      (PP (IN in)
        (NP
          (NP (NN master) (POS 's))
          (NN garden))))
    (. !)))

advmod(am-3, Here-1)
nsubj(am-3, I-2)
root(ROOT-0, am-3)
poss(garden-7, master-5)
prep_in(am-3, garden-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP tell)
      (NP (PRP you))
      (SBAR
        (WHNP (WP what))
        (PRN (, ,)
          (NP (JJ little) (NN girl))
          (, ,))
        (S
          (NP (PRP you))
          (ADVP (RB just))
          (VP
            (VP (VBD bore)
              (NP (DT a) (NN hole))
              (PP (IN in)
                (NP
                  (NP (JJ old) (NNP Sal) (POS 's))
                  (NN wall))))
            (, ,)
            (CC and)
            (VP (VBD put)
              (NP (PRP$ your) (NN mouth))
              (PP (TO to)
                (NP (PRP it)))))))
      (, ,)
      (CC and)
      (VBP say) (, ,)
      (S (`` `)
        (INTJ (UH Please))
        (, ,)
        (NP (NNP North))
        (VP (VBD Wind) (, ,)
          (SQ (MD may) (RB n't)
            (NP (PRP I))
            (VP (VB go)
              (PRT (RP out))
              (PP (IN with)
                (NP (PRP you))))
            (. ?)))
        ('' ')))))

nsubj(tell-2, I-1)
nsubj(say-28, I-1)
root(ROOT-0, tell-2)
dobj(tell-2, you-3)
dobj(bore-11, what-4)
amod(girl-7, little-6)
dep(bore-11, girl-7)
nsubj(bore-11, you-9)
nsubj(put-21, you-9)
advmod(bore-11, just-10)
dep(tell-2, bore-11)
det(hole-13, a-12)
dobj(bore-11, hole-13)
amod(Sal-16, old-15)
poss(wall-18, Sal-16)
prep_in(bore-11, wall-18)
dep(tell-2, put-21)
conj_and(bore-11, put-21)
poss(mouth-23, your-22)
dobj(put-21, mouth-23)
prep_to(put-21, it-25)
conj_and(tell-2, say-28)
discourse(Wind-34, Please-31)
nsubj(Wind-34, North-33)
conj_and(tell-2, Wind-34)
aux(go-39, may-36)
neg(go-39, n't-37)
nsubj(go-39, I-38)
dep(Wind-34, go-39)
prt(go-39, out-40)
prep_with(go-39, you-42)

(ROOT
  (S (CC and)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (MD 'll)
      (VP (VB see)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (MD 'll)
              (VP (VB come)))))))
    (. .) ('' '')))

cc(see-5, and-1)
advmod(see-5, then-2)
nsubj(see-5, you-3)
aux(see-5, 'll-4)
root(ROOT-0, see-5)
nsubj(come-8, what-6)
aux(come-8, 'll-7)
ccomp(see-5, come-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP daresay)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD shall)))))
    (. .)))

nsubj(daresay-3, I-2)
root(ROOT-0, daresay-3)
nsubj(shall-5, I-4)
ccomp(daresay-3, shall-5)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (IN out)
        (PP (IN in)
          (NP (DT the) (NN wind)))
        (ADVP (RB too) (RB often)))
      (ADJP (RB already)
        (S
          (VP (TO to)
            (VP (VB want)
              (NP
                (NP (JJR more))
                (PP (IN of)
                  (NP (PRP it)))))))))
    (. .) ('' '')))

cc(already-10, But-1)
nsubj(already-10, I-2)
nsubj(want-12, I-2)
cop(already-10, 'm-3)
dep(often-9, out-4)
det(wind-7, the-6)
prep_in(often-9, wind-7)
advmod(often-9, too-8)
advmod(already-10, often-9)
root(ROOT-0, already-10)
aux(want-12, to-11)
xcomp(already-10, want-12)
dobj(want-12, more-13)
prep_of(more-13, it-15)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD said)
      (PP (IN with)
        (NP (DT the) (NNP North) (NN Wind)))
      (, ,)
      (ADVP (RB not)
        (PP (IN in)
          (NP (PRP it)))))
    (. .) ('' '')))

nsubj(said-3, I-2)
root(ROOT-0, said-3)
det(Wind-7, the-5)
nn(Wind-7, North-6)
prep_with(said-3, Wind-7)
neg(said-3, not-9)
prep_in(not-9, it-11)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's) (RB all)
      (NP (CD one)))
    (. .) ('' '')))

nsubj(one-5, It-2)
cop(one-5, 's-3)
advmod(one-5, all-4)
root(ROOT-0, one-5)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP (DT all) (NN one)))
    (. .) ('' '')))

nsubj(one-6, It-2)
cop(one-6, 's-3)
neg(one-6, not-4)
det(one-6, all-5)
root(ROOT-0, one-6)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is) (RB all)
      (NP (CD one)))
    (. .) ('' '')))

nsubj(one-5, It-2)
cop(one-5, is-3)
advmod(one-5, all-4)
root(ROOT-0, one-5)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBP know)
      (ADVP (RBS best)))
    (. .) ('' '')))

cc(know-4, But-2)
nsubj(know-4, I-3)
root(ROOT-0, know-4)
advmod(know-4, best-5)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP I))
    (VP (VBP know)
      (ADVP (RBR better)))
    (. .)))

cc(know-4, And-2)
nsubj(know-4, I-3)
root(ROOT-0, know-4)
advmod(know-4, better-5)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB box)
          (NP (PRP$ your) (NNS ears)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN girl))
    (. .)))

nsubj(box-3, I-1)
aux(box-3, 'll-2)
ccomp(said-8, box-3)
poss(ears-5, your-4)
dobj(box-3, ears-5)
root(ROOT-0, said-8)
det(girl-10, the-9)
nsubj(said-8, girl-10)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD got)
      (ADJP (RB very) (JJ angry)))
    (. .)))

nsubj(angry-4, Diamond-1)
dep(angry-4, got-2)
advmod(angry-4, very-3)
root(ROOT-0, angry-4)

(ROOT
  (S (CC But)
    (S
      (NP (PRP he))
      (VP (VBD remembered)
        (SBAR (IN that)
          (S
            (SBAR (RB even) (IN if)
              (S
                (NP (PRP she))
                (VP (VBD did)
                  (NP (NN box))
                  (NP (PRP$ his) (NNS ears)))))
            (, ,)
            (NP (PRP he))
            (VP (VBP mus) (RB n't)
              (VP (VB box)
                (NP (NNS hers))
                (ADVP (RB again))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP she))
                    (VP (VBD was)
                      (NP (DT a) (NN girl)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PDT all) (DT that) (NNS boys))
      (VP (MD must)
        (VP (VB do)
          (SBAR
            (S (, ,)
              (SBAR (IN if)
                (S
                  (NP (NNS girls))
                  (VP (VBP are)
                    (ADJP (JJ rude)))))
              (, ,)
              (VP (VBZ is)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB go)
                        (PRT (RP away)))
                      (CC and)
                      (VP (VB leave)
                        (NP (PRP them))))))))))))
    (. .)))

nsubj(remembered-3, he-2)
root(ROOT-0, remembered-3)
mark(mus-14, that-4)
advmod(did-8, even-5)
mark(did-8, if-6)
nsubj(did-8, she-7)
advcl(mus-14, did-8)
iobj(did-8, box-9)
poss(ears-11, his-10)
dobj(did-8, ears-11)
nsubj(mus-14, he-13)
ccomp(remembered-3, mus-14)
neg(mus-14, n't-15)
dep(mus-14, box-16)
dobj(box-16, hers-17)
advmod(box-16, again-18)
mark(girl-24, for-20)
nsubj(girl-24, she-21)
cop(girl-24, was-22)
det(girl-24, a-23)
advcl(box-16, girl-24)
predet(boys-29, all-27)
det(boys-29, that-28)
nsubj(do-31, boys-29)
aux(do-31, must-30)
conj_and(remembered-3, do-31)
mark(rude-36, if-33)
nsubj(rude-36, girls-34)
cop(rude-36, are-35)
advcl(is-38, rude-36)
ccomp(do-31, is-38)
aux(go-40, to-39)
xcomp(is-38, go-40)
prt(go-40, away-41)
xcomp(is-38, leave-43)
conj_and(go-40, leave-43)
dobj(leave-43, them-44)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBD went)
      (PRT (RP in))
      (PP (IN at)
        (NP (DT the) (NN door))))
    (. .)))

dep(went-3, So-1)
nsubj(went-3, he-2)
root(ROOT-0, went-3)
prt(went-3, in-4)
det(door-7, the-6)
prep_at(went-3, door-7)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Good-bye))
      (, ,)
      (NP (NN mister)))
    ('' '')
    (VP (VBD said)
      (NP (DT the) (NN girl)))
    (. .)))

discourse(mister-4, Good-bye-2)
dep(said-6, mister-4)
root(ROOT-0, said-6)
det(girl-8, the-7)
dobj(said-6, girl-8)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD brought)
      (NP (NNP Diamond))
      (PP (TO to)
        (NP (PRP$ his) (NNS senses))))
    (. .)))

nsubj(brought-2, This-1)
root(ROOT-0, brought-2)
dobj(brought-2, Diamond-3)
poss(senses-6, his-5)
prep_to(brought-2, senses-6)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sorry)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD was)
                (NP (NN cross))))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(sorry-4, I-2)
cop(sorry-4, 'm-3)
ccomp(said-11, sorry-4)
nsubj(cross-7, I-5)
cop(cross-7, was-6)
ccomp(sorry-4, cross-7)
nsubj(said-11, he-10)
root(ROOT-0, said-11)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Come)
        (PRT (RP in))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ my) (NN mother))
      (VP (MD will)
        (VP (VB give)
          (NP (PRP you))
          (NP (DT some) (NN breakfast)))))
    (. .) ('' '')))

root(ROOT-0, Come-2)
prt(Come-2, in-3)
poss(mother-7, my-6)
nsubj(give-9, mother-7)
aux(give-9, will-8)
conj_and(Come-2, give-9)
iobj(give-9, you-10)
det(breakfast-12, some-11)
dobj(give-9, breakfast-12)

(ROOT
  (S
    (INTJ (`` ``) (UH No))
    (, ,)
    (VP (VB thank)
      (NP (PRP you)))
    (. .)))

discourse(thank-4, No-2)
root(ROOT-0, thank-4)
dobj(thank-4, you-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (VP (VB be)
        (ADJP (IN off)
          (PP (TO to)
            (NP (PRP$ my) (NN crossing))))))
    (. .)))

nsubj(off-4, I-1)
aux(off-4, must-2)
cop(off-4, be-3)
root(ROOT-0, off-4)
poss(crossing-7, my-6)
prep_to(off-4, crossing-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (NN morning))
      (ADVP (RB now)))
    (. .) ('' '')))

nsubj(morning-3, It-1)
cop(morning-3, 's-2)
root(ROOT-0, morning-3)
advmod(morning-3, now-4)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (RB very) (JJ sorry)
          (PP (IN for)
            (NP (PRP you))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(sorry-5, I-2)
cop(sorry-5, 'm-3)
advmod(sorry-5, very-4)
ccomp(said-10, sorry-5)
prep_for(sorry-5, you-7)
root(ROOT-0, said-10)
nsubj(said-10, Diamond-11)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN life)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ tired)
                  (PP (IN of)))))))
        (: --)
        (NP
          (NP (WP what))
          (PP (IN with)
            (NP (JJ old) (NNP Sal))))
        (, ,)
        (CC and)
        (NP
          (NP
            (ADJP (RB so) (JJ many))
            (NNS holes))
          (PP (IN in)
            (NP (PRP$ my) (NNS shoes))))))
    (. .) ('' '')))

discourse(life-7, Well-2)
nsubj(life-7, it-4)
cop(life-7, is-5)
det(life-7, a-6)
root(ROOT-0, life-7)
aux(tired-10, to-8)
cop(tired-10, be-9)
vmod(life-7, tired-10)
prep(tired-10, of-11)
conj_and(life-7, what-13)
amod(Sal-16, old-15)
prep_with(what-13, Sal-16)
advmod(many-20, so-19)
amod(holes-21, many-20)
conj_and(life-7, holes-21)
poss(shoes-24, my-23)
prep_in(holes-21, shoes-24)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wonder)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (ADJP (RB so) (JJ good))))))
    (. .)))

nsubj(wonder-3, I-2)
root(ROOT-0, wonder-3)
nsubj(good-7, you-4)
cop(good-7, 're-5)
advmod(good-7, so-6)
ccomp(wonder-3, good-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should)
      (VP (VB kill)
        (NP (PRP myself))))
    (. .) ('' '')))

nsubj(kill-3, I-1)
aux(kill-3, should-2)
root(ROOT-0, kill-3)
dobj(kill-3, myself-4)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh) (, ,) (UH no))
    (, ,)
    (NP (PRP you))
    (VP (MD would) (RB n't))
    (. !)))

discourse(would-7, Oh-2)
dep(Oh-2, no-4)
nsubj(would-7, you-6)
root(ROOT-0, would-7)
neg(would-7, n't-8)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBP think)
          (PP (IN of)
            (NP (PRP it))))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB always))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB see)
            (SBAR
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ 's)
                    (VP (VBG coming)
                      (ADVP (JJ next))))))
              (, ,)
              (CC and)
              (SBAR (IN so)
                (S
                  (NP (PRP I))
                  (ADVP (RB always))
                  (VP (VBP wait)
                    (SBAR (IN till)
                      (S
                        (NP (JJ next))
                        (VP (VBZ is)
                          (ADJP (RP over)))))))))))))
    (. .)))

advmod(think-3, When-1)
nsubj(think-3, I-2)
advcl(want-9, think-3)
prep_of(think-3, it-5)
nsubj(want-9, I-7)
nsubj(see-11, I-7)
advmod(want-9, always-8)
root(ROOT-0, want-9)
aux(see-11, to-10)
xcomp(want-9, see-11)
nsubj(coming-14, what-12)
aux(coming-14, 's-13)
advcl(see-11, coming-14)
advmod(coming-14, next-15)
mark(wait-21, so-18)
nsubj(wait-21, I-19)
advmod(wait-21, always-20)
advcl(see-11, wait-21)
conj_and(coming-14, wait-21)
mark(over-25, till-22)
nsubj(over-25, next-23)
cop(over-25, is-24)
advcl(wait-21, over-25)

(ROOT
  (INTJ (UH Well) (. !)))

root(ROOT-0, Well-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP
              (NP (NN somebody))
              (ADJP (JJ happy) (JJ somewheres)))))))
    (. .)))

nsubj(suppose-2, I-1)
root(ROOT-0, suppose-2)
expl('s-4, there-3)
ccomp(suppose-2, 's-4)
nsubj('s-4, somebody-5)
amod(somewheres-7, happy-6)
amod(somebody-5, somewheres-7)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ ai) (RB n't)
      (SBAR (IN in)
        (S
          (NP (PRP them))
          (VP (VBZ carriages)))))
    (. .)))

cc(ai-3, But-1)
nsubj(ai-3, it-2)
root(ROOT-0, ai-3)
neg(ai-3, n't-4)
mark(carriages-7, in-5)
nsubj(carriages-7, them-6)
advcl(ai-3, carriages-7)

(ROOT
  (INTJ (UH Oh) (PRP$ my) (NNP !)))

root(ROOT-0, Oh-1)
poss(Oh-1, my-2)

(ROOT
  (FRAG
    (SBAR
      (WHADVP (WRB how))
      (S
        (NP (PRP they))
        (VP (VBP do)
          (S
            (VP (VB look)
              (ADVP (RB sometimes)))))))
    (: --)
    (VP (VBP fit)
      (S
        (VP (TO to)
          (VP (VB bite)
            (NP (PRP$ your) (NN head))
            (PRT (RP off))))))
    (. !)))

advmod(do-3, how-1)
nsubj(do-3, they-2)
root(ROOT-0, do-3)
ccomp(do-3, look-4)
advmod(look-4, sometimes-5)
dep(do-3, fit-7)
aux(bite-9, to-8)
xcomp(fit-7, bite-9)
poss(head-11, your-10)
dobj(bite-9, head-11)
prt(bite-9, off-12)

(ROOT
  (ADVP (RB Good-bye) (. !) ('' '')))

root(ROOT-0, Good-bye-1)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD ran)
        (PRT (RP up))
        (NP (DT the) (NN hill)))
      (CC and)
      (VP (VBD disappeared)
        (PRT (RP behind))
        (NP (PRP it))))
    (. .)))

nsubj(ran-2, She-1)
nsubj(disappeared-7, She-1)
root(ROOT-0, ran-2)
prt(ran-2, up-3)
det(hill-5, the-4)
dobj(ran-2, hill-5)
conj_and(ran-2, disappeared-7)
prt(disappeared-7, behind-8)
dobj(disappeared-7, it-9)

(ROOT
  (S (RB Then)
    (NP (NNP Diamond))
    (VP (VBD shut)
      (NP (DT the) (NN door))
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (ADVP (RB best))
          (VP
            (VP (MD could))
            (, ,)
            (CC and)
            (VP (VBD ran)
              (PP (IN through)
                (NP (DT the) (NN kitchen-garden)))
              (PP (TO to)
                (NP (DT the) (NN stable))))))))
    (. .)))

advmod(shut-3, Then-1)
nsubj(shut-3, Diamond-2)
root(ROOT-0, shut-3)
det(door-5, the-4)
dobj(shut-3, door-5)
mark(could-9, as-6)
nsubj(could-9, he-7)
nsubj(ran-12, he-7)
advmod(could-9, best-8)
advcl(shut-3, could-9)
advcl(shut-3, ran-12)
conj_and(could-9, ran-12)
det(kitchen-garden-15, the-14)
prep_through(ran-12, kitchen-garden-15)
det(stable-18, the-17)
prep_to(ran-12, stable-18)

(ROOT
  (S (CC And)
    (VP (VBD was) (RB n't)
      (NP
        (NP (PRP he))
        (ADJP (JJ glad)
          (S
            (VP (TO to)
              (VP (VB get)
                (PP (IN into)
                  (NP (PRP$ his) (JJ own) (JJ blessed) (NN bed))))))))
      (ADVP (RB again)))
    (. !)))

cc(he-4, And-1)
cop(he-4, was-2)
neg(he-4, n't-3)
root(ROOT-0, he-4)
amod(he-4, glad-5)
aux(get-7, to-6)
xcomp(glad-5, get-7)
poss(bed-12, his-9)
amod(bed-12, own-10)
amod(bed-12, blessed-11)
prep_into(get-7, bed-12)
advmod(he-4, again-13)

(ROOT
  (NP (NNP CHAPTER) (NNP V) (. .)))

nn(V-2, CHAPTER-1)
root(ROOT-0, V-2)

(ROOT
  (S
    (NP (DT THE) (NNP SUMMER-HOUSE) (NNP DIAMOND))
    (VP (VBD said)
      (NP (NN nothing))
      (PP (TO to)
        (NP (PRP$ his) (NN mother)))
      (PP (IN about)
        (NP (PRP$ his) (NNS adventures))))
    (. .)))

det(DIAMOND-3, THE-1)
nn(DIAMOND-3, SUMMER-HOUSE-2)
nsubj(said-4, DIAMOND-3)
root(ROOT-0, said-4)
dobj(said-4, nothing-5)
poss(mother-8, his-7)
prep_to(said-4, mother-8)
poss(adventures-11, his-10)
prep_about(said-4, adventures-11)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (NP (PDT half) (DT a) (NN notion))
        (SBAR (IN that)
          (S
            (NP (NNP North) (NNP Wind))
            (VP (VBD was)
              (NP
                (NP (DT a) (NN friend))
                (PP (IN of)
                  (NP (PRP$ his) (NN mother)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP she))
          (VP (VBD did) (RB not)
            (VP (VB know)
              (NP
                (NP (DT all))
                (PP (IN about)
                  (NP (PRP it)))
                (, ,)
                (ADVP (IN at) (JJS least)))))))
      (NP (PRP she))
      (VP (VBD did) (RB not)
        (VP (VB mind)
          (NP (PRP$ his) (NN going))
          (ADVP (RB anywhere))
          (PP (IN with)
            (NP
              (NP (DT the) (NN lady))
              (PP (IN of)
                (NP (DT the) (NN wind))))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
predet(notion-5, half-3)
det(notion-5, a-4)
dobj(had-2, notion-5)
mark(friend-11, that-6)
nn(Wind-8, North-7)
nsubj(friend-11, Wind-8)
cop(friend-11, was-9)
det(friend-11, a-10)
ccomp(had-2, friend-11)
poss(mother-14, his-13)
prep_of(friend-11, mother-14)
nsubj(mind-33, that-17)
mark(know-23, if-19)
nsubj(know-23, she-20)
aux(know-23, did-21)
neg(know-23, not-22)
advcl(mind-33, know-23)
dobj(know-23, all-24)
prep_about(all-24, it-26)
advmod(all-24, at-28)
pobj(at-28, least-29)
nsubj(mind-33, she-30)
aux(mind-33, did-31)
neg(mind-33, not-32)
conj_and(had-2, mind-33)
poss(going-35, his-34)
dobj(mind-33, going-35)
advmod(mind-33, anywhere-36)
det(lady-39, the-38)
prep_with(mind-33, lady-39)
det(wind-42, the-41)
prep_of(lady-39, wind-42)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (NP (PRP he))
    (VP (VBD doubted)
      (SBAR (IN whether)
        (S
          (NP (PRP he))
          (VP (MD might) (RB not)
            (VP (VB appear)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBG telling)
                      (NP (NNS stories))
                      (SBAR (IN if)
                        (S
                          (NP (PRP he))
                          (VP (VBD told)
                            (NP (DT all))
                            (, ,)
                            (SBAR (RB especially) (IN as)
                              (S
                                (NP (PRP he))
                                (VP (MD could)
                                  (ADVP (RB hardly))
                                  (VP (VB believe)
                                    (S
                                      (NP (PRP it))
                                      (NP (PRP himself))))))))))))))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP he))
                  (VP (VBD thought)
                    (PP (IN about)
                      (NP (PRP it)))
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN middle))
                        (PP (IN of)
                          (NP (DT the) (NN day)))))
                    (, ,)
                    (SBAR (IN although)
                      (S
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (DT the) (NN twilight))
                            (VP (VBD was)
                              (ADVP (RB once))
                              (VP (VBN half-way)
                                (PP (IN on)
                                  (PP (TO to)
                                    (NP (NN night))))))))
                        (NP (PRP he))
                        (VP (VBD had)
                          (NP
                            (NP (DT no) (NN doubt))
                            (PP (IN about)
                              (NP (PRP it))))
                          (, ,)
                          (ADVP
                            (ADVP (IN at) (JJS least))
                            (PP (IN for)
                              (NP (DT the) (JJ first) (JJ few) (NNS days))))
                          (SBAR (IN after)
                            (S
                              (NP (PRP he))
                              (VP (VBD had)
                                (VP (VBN been)
                                  (PP (IN with)
                                    (NP (PRP her))))))))))))))))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(doubted-6, time-4)
nsubj(doubted-6, he-5)
root(ROOT-0, doubted-6)
mark(appear-11, whether-7)
nsubj(appear-11, he-8)
nsubj(telling-14, he-8)
aux(appear-11, might-9)
neg(appear-11, not-10)
ccomp(doubted-6, appear-11)
aux(telling-14, to-12)
aux(telling-14, be-13)
xcomp(appear-11, telling-14)
dobj(telling-14, stories-15)
mark(told-18, if-16)
nsubj(told-18, he-17)
advcl(telling-14, told-18)
dobj(told-18, all-19)
advmod(believe-26, especially-21)
mark(believe-26, as-22)
nsubj(believe-26, he-23)
aux(believe-26, could-24)
advmod(believe-26, hardly-25)
advcl(told-18, believe-26)
nsubj(himself-28, it-27)
xcomp(believe-26, himself-28)
advmod(thought-31, when-29)
nsubj(thought-31, he-30)
advcl(appear-11, thought-31)
prep_about(thought-31, it-33)
det(middle-36, the-35)
prep_in(thought-31, middle-36)
det(day-39, the-38)
prep_of(middle-36, day-39)
mark(had-52, although-41)
advmod(half-way-47, when-42)
det(twilight-44, the-43)
nsubjpass(half-way-47, twilight-44)
auxpass(half-way-47, was-45)
advmod(half-way-47, once-46)
advcl(had-52, half-way-47)
prep(half-way-47, on-48)
pcomp(on-48, to-49)
pobj(to-49, night-50)
nsubj(had-52, he-51)
advcl(thought-31, had-52)
neg(doubt-54, no-53)
dobj(had-52, doubt-54)
prep_about(doubt-54, it-56)
advmod(had-52, at-58)
pobj(at-58, least-59)
det(days-64, the-61)
amod(days-64, first-62)
amod(days-64, few-63)
prep_for(at-58, days-64)
mark(been-68, after-65)
nsubj(been-68, he-66)
aux(been-68, had-67)
advcl(had-52, been-68)
prep_with(been-68, her-70)

(ROOT
  (S
    (NP
      (NP (DT The) (NN girl))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD swept)
            (NP (DT the) (NN crossing))))))
    (VP (VBD had)
      (ADVP (RB certainly))
      (VP (VBN refused)
        (S
          (VP (TO to)
            (VP (VB believe)
              (NP (PRP him)))))))
    (. .)))

det(girl-2, The-1)
nsubj(swept-4, girl-2)
nsubj(refused-9, girl-2)
nsubj(believe-11, girl-2)
rcmod(girl-2, swept-4)
det(crossing-6, the-5)
dobj(swept-4, crossing-6)
aux(refused-9, had-7)
advmod(refused-9, certainly-8)
root(ROOT-0, refused-9)
aux(believe-11, to-10)
xcomp(refused-9, believe-11)
dobj(believe-11, him-12)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (NP (PRP he))
    (VP (VBD felt)
      (ADJP (JJ sure))
      (SBAR (IN that)
        (S
          (NP (NNP North) (NNP Wind))
          (VP (MD would)
            (VP (VB tell)
              (NP (PRP him))
              (SBAR (IN if)
                (S
                  (NP (PRP he))
                  (VP (MD ought)
                    (S
                      (VP (TO to)
                        (VP (VB speak))))))))))))
    (. .)))

advmod(felt-4, Besides-1)
nsubj(felt-4, he-3)
root(ROOT-0, felt-4)
acomp(felt-4, sure-5)
mark(tell-10, that-6)
nn(Wind-8, North-7)
nsubj(tell-10, Wind-8)
aux(tell-10, would-9)
ccomp(felt-4, tell-10)
dobj(tell-10, him-11)
mark(ought-14, if-12)
nsubj(ought-14, he-13)
nsubj(speak-16, he-13)
advcl(tell-10, ought-14)
aux(speak-16, to-15)
xcomp(ought-14, speak-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT some) (NN time))
      (SBAR (IN before)
        (S
          (NP (PRP he))
          (VP (VBD saw)
            (NP
              (NP (DT the) (NN lady))
              (PP (IN of)
                (NP (DT the) (NN wind))))
            (ADVP (RB again))))))
    (. .)))

nsubj(time-4, It-1)
cop(time-4, was-2)
det(time-4, some-3)
root(ROOT-0, time-4)
mark(saw-7, before-5)
nsubj(saw-7, he-6)
advcl(time-4, saw-7)
det(lady-9, the-8)
dobj(saw-7, lady-9)
det(wind-12, the-11)
prep_of(lady-9, wind-12)
advmod(saw-7, again-13)

(ROOT
  (S
    (ADVP (RB Indeed))
    (NP (NN nothing) (JJ remarkable))
    (VP (VBD took)
      (NP (NN place))
      (PP (IN in)
        (NP
          (NP (NNP Diamond) (POS 's))
          (NN history)))
      (PP (IN until)
        (NP (DT the) (JJ following) (NN week))))
    (. .)))

advmod(took-4, Indeed-1)
nsubj(took-4, nothing-2)
amod(nothing-2, remarkable-3)
root(ROOT-0, took-4)
dobj(took-4, place-5)
poss(history-9, Diamond-7)
prep_in(took-4, history-9)
det(week-13, the-11)
amod(week-13, following-12)
prep_until(took-4, week-13)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBD happened)
            (ADVP (RB then))))))
    (. .)))

nsubj(was-2, This-1)
root(ROOT-0, was-2)
nsubj(happened-4, what-3)
ccomp(was-2, happened-4)
advmod(happened-4, then-5)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Diamond))
        (NP (DT the) (NN horse)))
      (VP (VBD wanted)
        (NP (JJ new) (NNS shoes))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNP Diamond) (POS 's))
        (NN father))
      (VP
        (VP (VBD took)
          (NP (PRP him))
          (PRT (RP out))
          (PP (IN of)
            (NP (DT the) (NN stable))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (VP
            (VP
              (ADVP (RB just))
              (VBG getting)
              (PP (IN on)
                (NP (PRP$ his) (NN back)
                  (S
                    (VP (TO to)
                      (VP (VB ride)
                        (NP (PRP him))
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN forge))
                            (, ,)
                            (SBAR
                              (WHADVP (WRB when))
                              (S
                                (NP (PRP he))
                                (VP (VBD saw)
                                  (NP (PRP$ his) (JJ little) (NN boy) (NN standing))
                                  (PP (IN by)
                                    (NP (DT the) (NN pump))))))
                            (, ,)))))))))
            (CC and)
            (VP (VBG looking)
              (PP (IN at)
                (NP (PRP him)))
              (ADVP (RB wistfully)))))))
    (. .)))

nsubj(wanted-4, Diamond-1)
det(horse-3, the-2)
dep(Diamond-1, horse-3)
root(ROOT-0, wanted-4)
amod(shoes-6, new-5)
dobj(wanted-4, shoes-6)
poss(father-11, Diamond-9)
nsubj(took-12, father-11)
nsubj(getting-22, father-11)
conj_and(wanted-4, took-12)
dobj(took-12, him-13)
det(stable-17, the-16)
prep_out_of(took-12, stable-17)
aux(getting-22, was-20)
advmod(getting-22, just-21)
conj_and(wanted-4, getting-22)
conj_and(took-12, getting-22)
poss(back-25, his-24)
prep_on(getting-22, back-25)
aux(ride-27, to-26)
vmod(back-25, ride-27)
dobj(ride-27, him-28)
det(forge-31, the-30)
prep_to(ride-27, forge-31)
tmod(saw-35, forge-31)
advmod(saw-35, when-33)
nsubj(saw-35, he-34)
rcmod(forge-31, saw-35)
poss(standing-39, his-36)
amod(standing-39, little-37)
nn(standing-39, boy-38)
dobj(saw-35, standing-39)
det(pump-42, the-41)
prep_by(saw-35, pump-42)
conj_and(took-12, looking-45)
conj_and(getting-22, looking-45)
prep_at(looking-45, him-47)
advmod(looking-45, wistfully-48)

(ROOT
  (S (RB Then)
    (NP (DT the) (NN coachman))
    (VP
      (VP (VBD took)
        (NP (PRP$ his) (NN foot))
        (PRT (RP out))
        (PP (IN of)
          (NP (DT the) (NN stirrup))))
      (, ,)
      (VP (VBD left)
        (NP
          (NP (PRP$ his) (NN hold))
          (PP (IN of)
            (NP (DT the) (NN mane)
              (CC and)
              (NN bridle)))))
      (, ,)
      (VP (VBD came)
        (PRT (RP across))
        (PP (TO to)
          (NP (PRP$ his) (NN boy))))
      (, ,)
      (VP (VBD lifted)
        (NP (PRP him))
        (PRT (RP up)))
      (, ,)
      (CC and)
      (VP
        (S
          (VP (VBG setting)
            (NP (PRP him))
            (PP (IN on)
              (NP
                (NP (DT the) (NN horse) (POS 's))
                (NN back)))))
        (, ,)
        (VP (VBD told)
          (S
            (NP (PRP him))
            (VP (TO to)
              (VP (VB sit)
                (PRT (RP up))
                (PP (IN like)
                  (NP (DT a) (NN man)))))))))
    (. .)))

advmod(took-4, Then-1)
det(coachman-3, the-2)
nsubj(took-4, coachman-3)
nsubj(left-12, coachman-3)
nsubj(came-21, coachman-3)
nsubj(lifted-27, coachman-3)
nsubj(told-40, coachman-3)
root(ROOT-0, took-4)
poss(foot-6, his-5)
dobj(took-4, foot-6)
det(stirrup-10, the-9)
prep_out_of(took-4, stirrup-10)
conj_and(took-4, left-12)
poss(hold-14, his-13)
dobj(left-12, hold-14)
det(mane-17, the-16)
prep_of(hold-14, mane-17)
prep_of(hold-14, bridle-19)
conj_and(mane-17, bridle-19)
conj_and(took-4, came-21)
prt(came-21, across-22)
poss(boy-25, his-24)
prep_to(came-21, boy-25)
conj_and(took-4, lifted-27)
dobj(lifted-27, him-28)
prt(lifted-27, up-29)
xcomp(told-40, setting-32)
dobj(setting-32, him-33)
det(horse-36, the-35)
poss(back-38, horse-36)
prep_on(setting-32, back-38)
conj_and(took-4, told-40)
dobj(told-40, him-41)
nsubj(sit-43, him-41)
aux(sit-43, to-42)
xcomp(told-40, sit-43)
prt(sit-43, up-44)
det(man-47, a-46)
prep_like(sit-43, man-47)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB then))
    (VP (VBD led)
      (PRT (RP away))
      (NP (DT both) (NNPS Diamonds))
      (ADVP (RB together)))
    (. .)))

nsubj(led-3, He-1)
advmod(led-3, then-2)
root(ROOT-0, led-3)
prt(led-3, away-4)
det(Diamonds-6, both-5)
dobj(led-3, Diamonds-6)
advmod(led-3, together-7)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN boy) (NN atop))
        (VP (VBD felt)
          (NP (RB not) (DT a) (JJ little) (NN tremulous))
          (PP (IN as)
            (NP
              (NP (DT the) (JJ great) (NNS muscles))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD lifted)
                    (NP
                      (NP (DT the) (NNS legs))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN horse))
                          (VP (VBN knotted)
                            (CC and)
                            (VBN relaxed)
                            (PP (IN against)
                              (NP (PRP$ his) (NNS legs))))))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD cowered)
          (PP (IN towards)
            (NP (DT the) (NNS withers)))
          (, ,)
          (S
            (VP (VBG grasping)
              (PP (IN with)
                (NP (PRP$ his) (NNS hands)))
              (NP
                (NP (DT the) (NN bit))
                (PP (IN of)
                  (NP
                    (NP (NN mane))
                    (VP (VBN worn)
                      (ADJP (JJ short))
                      (PP (IN by)
                        (NP (DT the) (NN collar))))))))))))
    (: ;)
    (S (CC but)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP$ his) (NN father))
          (VP (VBD looked)
            (ADVP (RB back))
            (PP (IN at)
              (NP (PRP him)))
            (, ,)
            (S
              (VP (VBG saying)
                (ADVP (RB once) (RBR more))))
            (, ,)
            (S (`` ``)
              (VP (VB Sit)
                (PRT (RP up)))))))
      (, ,)
      (PRN
        (S
          (NP (NNP Diamond))
          (, ,) ('' '')
          (NP (PRP he))
          (VP (VBP let)
            (S
              (NP (DT the) (NN mane))
              (VP
                (VP (VB go))
                (CC and)
                (VP (VBD sat)
                  (PRT (RP up)))))
            (, ,)
            (SBAR
              (ADVP (RB notwithstanding))
              (IN that)
              (S
                (NP (DT the) (NN horse))
                (, ,)
                (S
                  (VP (VBG thinking)
                    (PRN (, ,)
                      (S
                        (NP (PRP I))
                        (VP (VBP suppose)))
                      (, ,))
                    (SBAR (IN that)
                      (S
                        (NP (PRP$ his) (NN master))
                        (VP (VBD had)
                          (VP (VBN said)
                            (PP (TO to)
                              (NP (PRP him)))))))))
                (, ,)
                (VP (`` ``) (VBZ Come)
                  (PRT (RP up))
                  (, ,)
                  (S
                    (NP (NNP Diamond)))
                  (, ,) ('' '')))))))
      (VP (VBD stepped)
        (PRT (RP out))
        (ADVP (RBR faster))))
    (. .)))

det(atop-3, The-1)
nn(atop-3, boy-2)
nsubj(felt-4, atop-3)
root(ROOT-0, felt-4)
neg(tremulous-8, not-5)
det(tremulous-8, a-6)
amod(tremulous-8, little-7)
dobj(felt-4, tremulous-8)
det(muscles-12, the-10)
amod(muscles-12, great-11)
prep_as(felt-4, muscles-12)
nsubj(lifted-14, muscles-12)
rcmod(muscles-12, lifted-14)
det(legs-16, the-15)
dobj(lifted-14, legs-16)
det(horse-19, the-18)
prep_of(legs-16, horse-19)
vmod(horse-19, knotted-20)
vmod(horse-19, relaxed-22)
conj_and(knotted-20, relaxed-22)
poss(legs-25, his-24)
prep_against(knotted-20, legs-25)
nsubj(cowered-29, he-28)
conj_and(felt-4, cowered-29)
det(withers-32, the-31)
prep_towards(cowered-29, withers-32)
xcomp(cowered-29, grasping-34)
poss(hands-37, his-36)
prep_with(grasping-34, hands-37)
det(bit-39, the-38)
dobj(grasping-34, bit-39)
prep_of(bit-39, mane-41)
vmod(mane-41, worn-42)
acomp(worn-42, short-43)
det(collar-46, the-45)
agent(worn-42, collar-46)
cc(stepped-102, but-48)
advmod(looked-52, when-49)
poss(father-51, his-50)
nsubj(looked-52, father-51)
advcl(stepped-102, looked-52)
advmod(looked-52, back-53)
prep_at(looked-52, him-55)
xcomp(looked-52, saying-57)
advmod(more-59, once-58)
advmod(saying-57, more-59)
ccomp(looked-52, Sit-62)
prt(Sit-62, up-63)
nsubj(let-69, Diamond-65)
nsubj(let-69, he-68)
parataxis(stepped-102, let-69)
det(mane-71, the-70)
nsubj(go-72, mane-71)
nsubj(sat-74, mane-71)
ccomp(let-69, go-72)
ccomp(let-69, sat-74)
conj_and(go-72, sat-74)
prt(sat-74, up-75)
advmod(Come-96, notwithstanding-77)
mark(Come-96, that-78)
det(horse-80, the-79)
nsubj(Come-96, horse-80)
vmod(Come-96, thinking-82)
nsubj(suppose-85, I-84)
parataxis(thinking-82, suppose-85)
mark(said-91, that-87)
poss(master-89, his-88)
nsubj(said-91, master-89)
aux(said-91, had-90)
ccomp(thinking-82, said-91)
prep_to(said-91, him-93)
dep(let-69, Come-96)
prt(Come-96, up-97)
dep(Come-96, Diamond-99)
parataxis(felt-4, stepped-102)
prt(stepped-102, out-103)
advmod(stepped-102, faster-104)

(ROOT
  (S
    (PP (IN For)
      (NP (DT both)))
    (NP (DT the) (NNPS Diamonds))
    (VP (VBD were)
      (ADVP (RB just))
      (VP
        (ADVP (RB grandly))
        (VBN obedient)))
    (. .)))

prep_for(obedient-8, both-2)
det(Diamonds-4, the-3)
nsubjpass(obedient-8, Diamonds-4)
auxpass(obedient-8, were-5)
advmod(obedient-8, just-6)
advmod(obedient-8, grandly-7)
root(ROOT-0, obedient-8)

(ROOT
  (S (CC And)
    (NP (NNP Diamond))
    (ADVP (RB soon))
    (VP (VBD found)
      (NP (DT that))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (JJ obedient))
            (PP (TO to)
              (NP (PRP$ his) (NN father)))
            (, ,)
            (SBAR (IN so)
              (S
                (NP (DT the) (NN horse))
                (VP (VBD was)
                  (ADJP (JJ obedient)
                    (PP (TO to)
                      (NP (PRP him)))))))))))
    (. .)))

cc(found-4, And-1)
nsubj(found-4, Diamond-2)
advmod(found-4, soon-3)
root(ROOT-0, found-4)
dobj(found-4, that-5)
mark(obedient-10, as-7)
nsubj(obedient-10, he-8)
cop(obedient-10, was-9)
advcl(found-4, obedient-10)
poss(father-13, his-12)
prep_to(obedient-10, father-13)
mark(obedient-19, so-15)
det(horse-17, the-16)
nsubj(obedient-19, horse-17)
cop(obedient-19, was-18)
advcl(obedient-10, obedient-19)
prep_to(obedient-19, him-21)

(ROOT
  (S
    (S (IN For)
      (NP (PRP he))
      (VP (VBD had) (RB not)
        (VP (VBN ridden)
          (ADVP (RB far))
          (SBAR
            (SBAR (IN before)
              (S
                (NP (PRP he))
                (VP (VBD found)
                  (NP (NN courage))
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB reach)
                          (ADVP (RB forward)))
                        (CC and)
                        (VP (VB catch)
                          (NP
                            (NP (NN hold))
                            (PP (IN of)
                              (NP (DT the) (NN bridle)))))))))))
            (, ,)
            (CC and)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP
                  (NP (PRP$ his) (NN father))
                  (, ,)
                  (SBAR (WP$ whose)
                    (S
                      (NP (NN hand))
                      (VP (VBD was)
                        (PP (IN upon)
                          (NP (PRP it))))))
                  (, ,))
                (VP (VBD felt)
                  (S
                    (NP (DT the) (NN boy))
                    (VP
                      (VP
                        (VP (VB pull)
                          (NP (PRP it))
                          (PP (IN towards)
                            (NP (PRP him))))
                        (PRN (, ,)
                          (S
                            (NP (PRP he))
                            (VP
                              (VP (VBD looked)
                                (PRT (RP up)))
                              (CC and)
                              (VP (VBD smiled))))
                          (, ,))
                        (CC and)
                        (, ,)
                        (ADVP (RB well) (VBN pleased)))
                      (, ,)
                      (VP (VB let)
                        (VP (VB go)
                          (NP (PRP$ his) (NN hold))))
                      (, ,)
                      (CC and)
                      (VP (VBD left)
                        (S
                          (NP (NNP Diamond))
                          (VP (TO to)
                            (VP (VB guide)
                              (NP (NNP Diamond)))))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (DT the) (NN boy))
      (ADVP (RB soon))
      (VP (VBD found)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD could)
              (VP (VB do)
                (ADVP (RB so) (RB perfectly))))))))
    (. .)))

dep(ridden-5, For-1)
nsubj(ridden-5, he-2)
aux(ridden-5, had-3)
neg(ridden-5, not-4)
root(ROOT-0, ridden-5)
advmod(ridden-5, far-6)
mark(found-9, before-7)
nsubj(found-9, he-8)
advcl(ridden-5, found-9)
dobj(found-9, courage-10)
aux(reach-12, to-11)
vmod(found-9, reach-12)
advmod(reach-12, forward-13)
vmod(found-9, catch-15)
conj_and(reach-12, catch-15)
dobj(catch-15, hold-16)
det(bridle-19, the-18)
prep_of(hold-16, bridle-19)
advmod(felt-32, when-22)
poss(father-24, his-23)
nsubj(felt-32, father-24)
dep(was-28, whose-26)
nsubj(was-28, hand-27)
dep(father-24, was-28)
prep_upon(was-28, it-30)
advcl(ridden-5, felt-32)
conj_and(found-9, felt-32)
det(boy-34, the-33)
nsubj(pull-35, boy-34)
nsubj(let-51, boy-34)
nsubj(left-57, boy-34)
ccomp(felt-32, pull-35)
dobj(pull-35, it-36)
prep_towards(pull-35, him-38)
nsubj(looked-41, he-40)
nsubj(smiled-44, he-40)
parataxis(pull-35, looked-41)
prt(looked-41, up-42)
parataxis(pull-35, smiled-44)
conj_and(looked-41, smiled-44)
advmod(pull-35, well-48)
dep(well-48, pleased-49)
ccomp(felt-32, let-51)
conj_and(pull-35, let-51)
xcomp(let-51, go-52)
poss(hold-54, his-53)
dobj(go-52, hold-54)
ccomp(felt-32, left-57)
conj_and(pull-35, left-57)
dobj(left-57, Diamond-58)
nsubj(guide-60, Diamond-58)
aux(guide-60, to-59)
xcomp(left-57, guide-60)
dobj(guide-60, Diamond-61)
det(boy-65, the-64)
nsubj(found-67, boy-65)
advmod(found-67, soon-66)
conj_and(ridden-5, found-67)
mark(do-71, that-68)
nsubj(do-71, he-69)
aux(do-71, could-70)
ccomp(found-67, do-71)
advmod(perfectly-73, so-72)
advmod(do-71, perfectly-73)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a) (JJ grand) (NN thing)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB guide)
                      (NP (DT a) (JJ great) (NN beast))
                      (PP (IN like)
                        (NP (DT that))))))))))))
    (. .)))

nsubj(thing-5, It-1)
cop(thing-5, was-2)
det(thing-5, a-3)
amod(thing-5, grand-4)
root(ROOT-0, thing-5)
aux(able-8, to-6)
cop(able-8, be-7)
vmod(thing-5, able-8)
aux(guide-10, to-9)
xcomp(able-8, guide-10)
det(beast-13, a-11)
amod(beast-13, great-12)
dobj(guide-10, beast-13)
prep_like(guide-10, that-15)

(ROOT
  (S (CC And)
    (NP
      (NP (DT another) (NN discovery))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD made)))))
    (VP (VBD was)
      (SBAR (IN that) (, ,)
        (S
          (SBAR (IN in) (NN order)
            (S
              (VP (TO to)
                (VP (VB guide)
                  (NP (DT the) (NN horse))))))
          (, ,)
          (NP (PRP he))
          (VP (VBD had)
            (PP (IN in)
              (NP (DT a) (NN measure)))
            (S
              (VP (TO to)
                (VP (VB obey)
                  (NP (DT the) (NN horse))
                  (ADVP (RB first)))))))))
    (. .)))

cc(was-6, And-1)
det(discovery-3, another-2)
nsubj(was-6, discovery-3)
nsubj(made-5, he-4)
rcmod(discovery-3, made-5)
root(ROOT-0, was-6)
mark(had-17, that-7)
mark(guide-12, in-9)
dep(guide-12, order-10)
aux(guide-12, to-11)
advcl(had-17, guide-12)
det(horse-14, the-13)
dobj(guide-12, horse-14)
nsubj(had-17, he-16)
nsubj(obey-22, he-16)
ccomp(was-6, had-17)
det(measure-20, a-19)
prep_in(had-17, measure-20)
aux(obey-22, to-21)
xcomp(had-17, obey-22)
det(horse-24, the-23)
dobj(obey-22, horse-24)
advmod(obey-22, first-25)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP he))
          (VP (VBD did) (RB not)
            (VP (VB yield)
              (NP (PRP$ his) (NN body))
              (PP (TO to)
                (NP
                  (NP (DT the) (NNS motions))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN horse) (POS 's))
                      (NN body)))))))))
      (, ,)
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP (VB guide)
          (NP (PRP him)))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (MD must)
        (VP (VB fall)
          (PRT (RP off)))))
    (. .)))

mark(yield-5, If-1)
nsubj(yield-5, he-2)
aux(yield-5, did-3)
neg(yield-5, not-4)
advcl(guide-20, yield-5)
poss(body-7, his-6)
dobj(yield-5, body-7)
det(motions-10, the-9)
prep_to(yield-5, motions-10)
det(horse-13, the-12)
poss(body-15, horse-13)
prep_of(motions-10, body-15)
nsubj(guide-20, he-17)
aux(guide-20, could-18)
neg(guide-20, not-19)
root(ROOT-0, guide-20)
dobj(guide-20, him-21)
nsubj(fall-25, he-23)
aux(fall-25, must-24)
parataxis(guide-20, fall-25)
prt(fall-25, off-26)

(ROOT
  (S
    (NP (DT The) (NN blacksmith))
    (VP (VBD lived)
      (PP (IN at)
        (NP (DT some) (NN distance)))
      (, ,)
      (ADVP
        (ADVP (RBR deeper))
        (PP (IN into)
          (NP (NNP London)))))
    (. .)))

det(blacksmith-2, The-1)
nsubj(lived-3, blacksmith-2)
root(ROOT-0, lived-3)
det(distance-6, some-5)
prep_at(lived-3, distance-6)
advmod(lived-3, deeper-8)
prep_into(deeper-8, London-10)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP they))
        (VP (VBD crossed)
          (NP
            (NP (DT the) (NN angle))
            (PP (IN of)
              (NP (DT a) (NN square)))))))
    (, ,)
    (NP
      (NP (NNP Diamond))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD was)
            (ADVP (RB now))
            (ADJP (RB quite) (JJ comfortable))
            (PP (IN on)
              (NP (PRP$ his) (VBG living) (NN throne))))))
      (, ,))
    (VP (VBD was)
      (VP (VBG glancing)
        (NP
          (NP (DT this) (NN way))
          (CC and)
          (NP (DT that)))
        (PP (IN in)
          (NP
            (NP (DT a) (JJ gentle) (NN pride))
            (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP he))
                (VP (VBD saw)
                  (NP (DT a) (NN girl))
                  (S
                    (VP (VBG sweeping)
                      (NP (DT a) (JJ crossing) (NN scuddingly))
                      (PP (IN before)
                        (NP (DT a) (NN lady))))))))))))
    (. .)))

mark(crossed-3, As-1)
nsubj(crossed-3, they-2)
advcl(glancing-23, crossed-3)
det(angle-5, the-4)
dobj(crossed-3, angle-5)
det(square-8, a-7)
prep_of(angle-5, square-8)
nsubj(comfortable-16, Diamond-10)
nsubj(glancing-23, Diamond-10)
cop(comfortable-16, was-13)
advmod(comfortable-16, now-14)
advmod(comfortable-16, quite-15)
rcmod(Diamond-10, comfortable-16)
poss(throne-20, his-18)
amod(throne-20, living-19)
prep_on(comfortable-16, throne-20)
aux(glancing-23, was-22)
root(ROOT-0, glancing-23)
det(way-25, this-24)
dobj(glancing-23, way-25)
dobj(glancing-23, that-27)
conj_and(way-25, that-27)
det(pride-31, a-29)
amod(pride-31, gentle-30)
prep_in(glancing-23, pride-31)
tmod(saw-35, pride-31)
advmod(saw-35, when-33)
nsubj(saw-35, he-34)
rcmod(pride-31, saw-35)
det(girl-37, a-36)
dobj(saw-35, girl-37)
xcomp(saw-35, sweeping-38)
det(scuddingly-41, a-39)
amod(scuddingly-41, crossing-40)
dobj(sweeping-38, scuddingly-41)
det(lady-44, a-43)
prep_before(sweeping-38, lady-44)

(ROOT
  (S
    (S
      (NP (DT The) (NN lady))
      (VP (VBD was)
        (NP
          (NP
            (NP (PRP$ his) (NN father) (POS 's))
            (NN mistress))
          (, ,)
          (NP (NNP Mrs.) (NNP Coleman)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJ little) (NN girl))
      (VP (VBD was)
        (NP (PRP she))
        (PP (IN for)
          (SBAR
            (WHNP (WP$ whose) (NNS sake))
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN got)
                  (PRT (RP off))
                  (NP
                    (NP (NNP North) (NNP Wind) (POS 's))
                    (NN back)))))))))
    (. .)))

det(lady-2, The-1)
nsubj(mistress-7, lady-2)
cop(mistress-7, was-3)
poss(father-5, his-4)
poss(mistress-7, father-5)
root(ROOT-0, mistress-7)
nn(Coleman-10, Mrs.-9)
appos(mistress-7, Coleman-10)
det(girl-15, the-13)
amod(girl-15, little-14)
nsubj(she-17, girl-15)
cop(she-17, was-16)
conj_and(mistress-7, she-17)
poss(sake-20, whose-19)
dobj(got-23, sake-20)
nsubj(got-23, he-21)
aux(got-23, had-22)
prepc_for(she-17, got-23)
prt(got-23, off-24)
nn(Wind-26, North-25)
poss(back-28, Wind-26)
dobj(got-23, back-28)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD drew)
      (NP
        (NP
          (NP (NNP Diamond) (POS 's))
          (NN bridle))
        (PP (IN in)
          (NP (JJ eager) (NN anxiety))))
      (S
        (VP (TO to)
          (VP (VB see)
            (SBAR (IN whether)
              (S
                (NP (PRP$ her) (JJ outstretched) (NN hand))
                (VP (MD would)
                  (VP (VB gather)
                    (NP (DT a) (NN penny))
                    (PP (IN from)
                      (NP (NNP Mrs.) (NNP Coleman)))))))))))
    (. .)))

nsubj(drew-2, He-1)
root(ROOT-0, drew-2)
poss(bridle-5, Diamond-3)
dobj(drew-2, bridle-5)
amod(anxiety-8, eager-7)
prep_in(bridle-5, anxiety-8)
aux(see-10, to-9)
vmod(drew-2, see-10)
mark(gather-16, whether-11)
poss(hand-14, her-12)
amod(hand-14, outstretched-13)
nsubj(gather-16, hand-14)
aux(gather-16, would-15)
ccomp(see-10, gather-16)
det(penny-18, a-17)
dobj(gather-16, penny-18)
nn(Coleman-21, Mrs.-20)
prep_from(gather-16, Coleman-21)

(ROOT
  (S (CC But)
    (S
      (NP (PRP she))
      (VP (VBD had)
        (VP (VBN given)
          (NP (CD one))
          (PP (IN at)
            (NP (DT the) (JJ last) (NN crossing))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN hand))
      (VP (VBD returned)
        (ADVP (RB only))
        (S
          (VP (TO to)
            (VP (VB grasp)
              (NP (PRP$ its) (NN broom)))))))
    (. .)))

nsubj(given-4, she-2)
aux(given-4, had-3)
root(ROOT-0, given-4)
dobj(given-4, one-5)
det(crossing-9, the-7)
amod(crossing-9, last-8)
prep_at(given-4, crossing-9)
det(hand-13, the-12)
nsubj(returned-14, hand-13)
nsubj(grasp-17, hand-13)
conj_and(given-4, returned-14)
advmod(returned-14, only-15)
aux(grasp-17, to-16)
xcomp(returned-14, grasp-17)
poss(broom-19, its-18)
dobj(grasp-17, broom-19)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (MD could) (RB not)
      (VP (VB bear)
        (NP (PRP it))))
    (. .)))

nsubj(bear-4, Diamond-1)
aux(bear-4, could-2)
neg(bear-4, not-3)
root(ROOT-0, bear-4)
dobj(bear-4, it-5)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (NP
          (NP (DT a) (NN penny))
          (PP (IN in)
            (NP
              (NP (PRP$ his) (NN pocket))
              (, ,)
              (NP
                (NP (DT a) (NN gift))
                (PP (IN of)
                  (NP
                    (NP (DT the) (JJ same) (NN lady))
                    (NP (DT the) (NN day))))))))
        (ADVP (RB before))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD tumbled)
        (PRT (RP off))
        (NP (PRP$ his) (NN horse)
          (S
            (VP (TO to)
              (VP (VB give)
                (NP (PRP it))
                (PP (TO to)
                  (NP (DT the) (NN girl)))))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
det(penny-4, a-3)
dobj(had-2, penny-4)
poss(pocket-7, his-6)
prep_in(penny-4, pocket-7)
det(gift-10, a-9)
appos(pocket-7, gift-10)
det(lady-14, the-12)
amod(lady-14, same-13)
prep_of(gift-10, lady-14)
det(day-16, the-15)
dep(lady-14, day-16)
advmod(had-2, before-17)
nsubj(tumbled-21, he-20)
conj_and(had-2, tumbled-21)
prt(tumbled-21, off-22)
poss(horse-24, his-23)
dobj(tumbled-21, horse-24)
aux(give-26, to-25)
vmod(horse-24, give-26)
dobj(give-26, it-27)
det(girl-30, the-29)
prep_to(give-26, girl-30)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD tumbled)
        (PRT (RP off))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP say)))
      (, ,))
    (IN for)
    (S
      (NP (PRP he))
      (VP (VBD did)
        (NP (NN tumble))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD reached)
              (NP (DT the) (NN ground)))))))
    (. .)))

nsubj(tumbled-2, He-1)
root(ROOT-0, tumbled-2)
prt(tumbled-2, off-3)
nsubj(say-6, I-5)
dep(tumbled-2, say-6)
dep(tumbled-2, for-8)
nsubj(did-10, he-9)
parataxis(tumbled-2, did-10)
dobj(did-10, tumble-11)
advmod(reached-14, when-12)
nsubj(reached-14, he-13)
advcl(did-10, reached-14)
det(ground-16, the-15)
dobj(reached-14, ground-16)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP
      (VP (VBD got)
        (PRT (RP up))
        (PP (IN in)
          (NP (DT an) (NN instant))))
      (, ,)
      (CC and)
      (VP (VBD ran))
      (, ,)
      (S
        (VP (VBG searching)
          (NP (PRP$ his) (NN pocket))
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBD ran)))))))
    (. .)))

nsubj(got-3, he-2)
nsubj(ran-10, he-2)
nsubj(searching-12, he-2)
root(ROOT-0, got-3)
prt(got-3, up-4)
det(instant-7, an-6)
prep_in(got-3, instant-7)
conj_and(got-3, ran-10)
conj_and(got-3, searching-12)
vmod(got-3, searching-12)
poss(pocket-14, his-13)
dobj(searching-12, pocket-14)
mark(ran-17, as-15)
nsubj(ran-17, he-16)
advcl(searching-12, ran-17)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD made)
      (S
        (NP (PRP him))
        (ADJP (DT a) (RB pretty) (JJ courtesy))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP
              (VP (VBD offered)
                (NP (PRP$ his) (NN treasure)))
              (, ,)
              (CC but)
              (VP
                (PP (IN with)
                  (NP (DT a) (JJ bewildered) (NN stare)))))))))
    (. .)))

nsubj(made-2, She-1)
root(ROOT-0, made-2)
nsubj(offered-9, him-3)
det(courtesy-6, a-4)
advmod(courtesy-6, pretty-5)
dep(offered-9, courtesy-6)
advmod(offered-9, when-7)
nsubj(offered-9, he-8)
xcomp(made-2, offered-9)
poss(treasure-11, his-10)
dobj(offered-9, treasure-11)
xcomp(made-2, with-14)
conj_but(offered-9, with-14)
det(stare-17, a-15)
amod(stare-17, bewildered-16)
pobj(with-14, stare-17)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD thought)
        (ADVP (RB first))))
    (: :) (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD was)
        (PP (IN on)
          (NP
            (NP (DT the) (NN back))
            (PP (IN of)
              (NP (DT the) (NNP North) (NN Wind)))))
        (PP (IN after)
          (NP (DT all)))))
    (. !) ('' '')))

nsubj(thought-2, She-1)
root(ROOT-0, thought-2)
advmod(thought-2, first-3)
advmod(was-8, Then-6)
nsubj(was-8, he-7)
parataxis(thought-2, was-8)
det(back-11, the-10)
prep_on(was-8, back-11)
det(Wind-15, the-13)
nn(Wind-15, North-14)
prep_of(back-11, Wind-15)
prep_after(was-8, all-17)

(ROOT
  (S (CC but)
    (, ,)
    (S
      (VP (VBG looking)
        (PRT (RP up))
        (PP (IN at)
          (NP
            (NP (DT the) (NN sound))
            (PP (IN of)
              (NP
                (NP (DT the) (NN horse) (POS 's))
                (NNS feet)))))
        (PP (IN on)
          (NP (DT the) (JJ paved) (NN crossing)))))
    (, ,)
    (PRN
      (S
        (NP (PRP she))
        (VP (VBD changed)
          (NP (PRP$ her) (NN idea))
          (, ,)
          (S
            (VP (VBG saying)
              (PP (TO to)
                (NP (PRP herself))))))))
    (, ,) (`` ``)
    (NP (NNP North) (NNP Wind))
    (VP (VBZ is)
      (NP
        (NP (PRP$ his) (NN father) (POS 's))
        (NN horse)))
    (. !)))

cc(horse-34, but-1)
dep(horse-34, looking-3)
prt(looking-3, up-4)
det(sound-7, the-6)
prep_at(looking-3, sound-7)
det(horse-10, the-9)
poss(feet-12, horse-10)
prep_of(sound-7, feet-12)
det(crossing-16, the-14)
amod(crossing-16, paved-15)
prep_on(looking-3, crossing-16)
nsubj(changed-19, she-18)
parataxis(horse-34, changed-19)
poss(idea-21, her-20)
dobj(changed-19, idea-21)
vmod(changed-19, saying-23)
prep_to(saying-23, herself-25)
nn(Wind-29, North-28)
nsubj(horse-34, Wind-29)
cop(horse-34, is-30)
poss(father-32, his-31)
poss(horse-34, father-32)
root(ROOT-0, horse-34)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN secret))
        (PP (IN of)
          (NP (PRP it)))))
    (. !)))

nsubj(secret-4, That-1)
cop(secret-4, 's-2)
det(secret-4, the-3)
root(ROOT-0, secret-4)
prep_of(secret-4, it-6)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD could) (RB n't)
      (NP (PRP he))
      (VP (VB say)
        (ADVP (RB so))))
    (. ?) ('' '')))

advmod(say-5, Why-1)
aux(say-5, could-2)
neg(say-5, n't-3)
nsubj(say-5, he-4)
root(ROOT-0, say-5)
advmod(say-5, so-6)

(ROOT
  (S (CC And)
    (NP (PRP she))
    (VP (VBD had)
      (NP (DT a) (NN mind)
        (S
          (VP (TO to)
            (VP (VB refuse)
              (NP (DT the) (NN penny)))))))
    (. .)))

cc(had-3, And-1)
nsubj(had-3, she-2)
root(ROOT-0, had-3)
det(mind-5, a-4)
dobj(had-3, mind-5)
aux(refuse-7, to-6)
vmod(mind-5, refuse-7)
det(penny-9, the-8)
dobj(refuse-7, penny-9)

(ROOT
  (S (CC But)
    (S
      (NP (PRP$ his) (NN smile))
      (VP (VBD put)
        (NP (PRP it))
        (ADVP (DT all) (RB right))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP
        (CONJP (RB not) (JJ only))
        (VP (VBD took)
          (NP (PRP$ his) (NN penny)))
        (CC but)
        (VP (VBD put)
          (NP (PRP it))
          (PP (IN in)
            (NP (PRP$ her) (NN mouth)))
          (PP (IN with)
            (NP
              (NP (DT a) (`` ``) (JJ Thank) (NN you))
              (, ,)
              (NP (NN mister)))))))
    (. .)))

poss(smile-3, his-2)
nsubj(put-4, smile-3)
root(ROOT-0, put-4)
dobj(put-4, it-5)
dep(right-7, all-6)
advmod(put-4, right-7)
nsubj(took-13, she-10)
nsubj(put-17, she-10)
neg(only-12, not-11)
preconj(took-13, only-12)
conj_and(put-4, took-13)
poss(penny-15, his-14)
dobj(took-13, penny-15)
conj_and(put-4, put-17)
conj_but(took-13, put-17)
dobj(put-17, it-18)
poss(mouth-21, her-20)
prep_in(put-17, mouth-21)
det(you-26, a-23)
amod(you-26, Thank-25)
prep_with(put-17, you-26)
appos(you-26, mister-28)

(ROOT
  (FRAG
    (S
      (VP (VBD Did)
        (S
          (NP (PRP they))
          (VP (VB wollop)
            (NP (PRP you))
            (ADVP (RB then))))))
    (. ?) ('' '')))

root(ROOT-0, Did-1)
nsubj(wollop-3, they-2)
ccomp(Did-1, wollop-3)
dobj(wollop-3, you-4)
advmod(wollop-3, then-5)

(ROOT
  (S (`` ``)
    (VP (VB Oh)
      (NP (RB no)))
    (. !) ('' '')))

root(ROOT-0, Oh-2)
dobj(Oh-2, no-3)

(ROOT
  (NP (NNP answered) (NNP Diamond) (. .)))

nn(Diamond-2, answered-1)
root(ROOT-0, Diamond-2)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP
      (ADVP (RB never))
      (VBZ wollops)
      (NP (PRP me)))
    (. .) ('' '')))

nsubj(wollops-4, They-2)
neg(wollops-4, never-3)
root(ROOT-0, wollops-4)
dobj(wollops-4, me-5)

(ROOT
  (S (`` ``)
    (VP (VB Lor))
    (. !) ('' '')))

root(ROOT-0, Lor-2)

(ROOT
  (S
    (VP
      (VP (VBD said)
        (NP (DT the) (JJ little) (NN girl)))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADJP (JJ speechless))))
    (. .)))

root(ROOT-0, said-1)
det(girl-4, the-2)
amod(girl-4, little-3)
dobj(said-1, girl-4)
cop(speechless-8, was-7)
conj_and(said-1, speechless-8)

(ROOT
  (S
    (ADVP (RB Meantime))
    (NP (PRP$ his) (NN father))
    (, ,)
    (S
      (VP
        (VP (VBG looking)
          (PRT (RP up)))
        (, ,)
        (CC and)
        (VP (VBG seeing)
          (S
            (NP
              (NP (DT the) (NN horse) (POS 's))
              (NN back))
            (ADJP (JJ bare))))))
    (, ,)
    (VP
      (VP (VBD suffered)
        (NP
          (NP
            (NP (DT a) (NN pang))
            (PP (IN of)
              (NP (JJ awful) (NN dread))))
          (, ,)
          (CC but)
          (NP
            (NP (DT the) (JJ next) (NN moment))
            (VP (VBG catching)
              (NP
                (NP (NN sight))
                (PP (IN of)
                  (NP (PRP him))))))))
      (, ,)
      (VP (VBD took)
        (NP (PRP him))
        (PRT (RP up)))
      (CC and)
      (VP (VBD put)
        (NP (PRP him))
        (PP (IN on)
          (PRN (, ,)
            (S
              (VP (VBG saying) (: --) (`` ``)
                (S
                  (VP (VB Do) (RB n't)
                    (VP (VB get)
                      (PRT (RP off))
                      (ADVP (RB again)))))))
            (, ,))
          (NP (NNP Diamond)))))
    (. .)))

advmod(suffered-16, Meantime-1)
poss(father-3, his-2)
nsubj(suffered-16, father-3)
nsubj(took-32, father-3)
nsubj(put-36, father-3)
vmod(suffered-16, looking-5)
prt(looking-5, up-6)
conj_and(looking-5, seeing-9)
vmod(suffered-16, seeing-9)
det(horse-11, the-10)
poss(back-13, horse-11)
nsubj(bare-14, back-13)
xcomp(seeing-9, bare-14)
root(ROOT-0, suffered-16)
det(pang-18, a-17)
dobj(suffered-16, pang-18)
amod(dread-21, awful-20)
prep_of(pang-18, dread-21)
det(moment-26, the-24)
amod(moment-26, next-25)
dobj(suffered-16, moment-26)
conj_but(pang-18, moment-26)
vmod(moment-26, catching-27)
dobj(catching-27, sight-28)
prep_of(sight-28, him-30)
conj_and(suffered-16, took-32)
dobj(took-32, him-33)
prt(took-32, up-34)
conj_and(suffered-16, put-36)
dobj(put-36, him-37)
dep(put-36, saying-40)
aux(get-45, Do-43)
neg(get-45, n't-44)
ccomp(saying-40, get-45)
prt(get-45, off-46)
advmod(get-45, again-47)
prep_on(put-36, Diamond-49)

(ROOT
  (S
    (NP (DT The) (NN horse))
    (VP (MD might)
      (VP (VB have)
        (VP (VBN put)
          (NP (PRP$ his) (NN foot))
          (PP (IN on)
            (NP (PRP you))))))
    (. .) ('' '')))

det(horse-2, The-1)
nsubj(put-5, horse-2)
aux(put-5, might-3)
aux(put-5, have-4)
root(ROOT-0, put-5)
poss(foot-7, his-6)
dobj(put-5, foot-7)
prep_on(put-5, you-9)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH No))
      (, ,)
      (NP (NN father)))
    (, ,) ('' '')
    (VP
      (VP (VBD answered)
        (NP (DT the) (NN boy)))
      (, ,)
      (CC and)
      (VP (VBD rode)
        (PRT (RP on))
        (PP (IN in)
          (NP (JJ majestic) (NN safety)))))
    (. .)))

discourse(father-4, No-2)
dep(answered-7, father-4)
root(ROOT-0, answered-7)
det(boy-9, the-8)
dobj(answered-7, boy-9)
conj_and(answered-7, rode-12)
prt(rode-12, on-13)
amod(safety-16, majestic-15)
prep_in(rode-12, safety-16)

(ROOT
  (S
    (NP (DT The) (NN summer))
    (VP (VBD drew)
      (S
        (ADJP (JJ near) (, ,) (JJ warm)
          (CC and)
          (JJ splendid))))
    (. .)))

det(summer-2, The-1)
nsubj(drew-3, summer-2)
root(ROOT-0, drew-3)
acomp(drew-3, near-4)
acomp(drew-3, warm-6)
conj_and(near-4, warm-6)
acomp(drew-3, splendid-8)
conj_and(near-4, splendid-8)

(ROOT
  (S
    (NP (NNP Miss) (NNP Coleman))
    (VP
      (VP (VBD was)
        (ADJP
          (NP (DT a) (RB little))
          (JJR better)
          (PP (IN in)
            (NP (NN health)))))
      (, ,)
      (CC and)
      (VP (VBD sat)
        (NP (DT a) (JJ good) (NN deal))
        (PP (IN in)
          (NP (DT the) (NN garden)))))
    (. .)))

nn(Coleman-2, Miss-1)
nsubj(better-6, Coleman-2)
nsubj(sat-11, Coleman-2)
cop(better-6, was-3)
det(little-5, a-4)
npadvmod(better-6, little-5)
root(ROOT-0, better-6)
prep_in(better-6, health-8)
conj_and(better-6, sat-11)
det(deal-14, a-12)
amod(deal-14, good-13)
dobj(sat-11, deal-14)
det(garden-17, the-16)
prep_in(sat-11, garden-17)

(ROOT
  (S
    (NP (CD One) (NN day))
    (NP (PRP she))
    (VP
      (VP (VBD saw)
        (NP
          (NP (NNP Diamond))
          (VP (VBG peeping)
            (PP (IN through)
              (NP (DT the) (NN shrubbery))))))
      (, ,)
      (CC and)
      (VP (VBD called)
        (NP (PRP him))))
    (. .)))

num(day-2, One-1)
tmod(saw-4, day-2)
nsubj(saw-4, she-3)
nsubj(called-12, she-3)
root(ROOT-0, saw-4)
dobj(saw-4, Diamond-5)
vmod(Diamond-5, peeping-6)
det(shrubbery-9, the-8)
prep_through(peeping-6, shrubbery-9)
conj_and(saw-4, called-12)
dobj(called-12, him-13)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD talked)
        (PP (TO to)
          (NP (PRP$ her) (RB so)))
        (ADVP (RB frankly))
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (ADVP (RB often))
            (VP (VBD sent)
              (PP (IN for)
                (NP (PRP him)))
              (PP (IN after)
                (NP (DT that))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN by)
        (NP (NNS degrees)))
      (NP (PRP it))
      (VP (VBD came)
        (PRT (RP about))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (S
                (VP (VB leave)
                  (S
                    (VP (TO to)
                      (VP (VB run)
                        (PP (IN in)
                          (NP (DT the) (NN garden))))))
                  (SBAR (IN as)
                    (S
                      (NP (PRP he))
                      (VP (VBD pleased)))))))))))
    (. .)))

nsubj(talked-2, He-1)
root(ROOT-0, talked-2)
prep(talked-2, to-3)
poss(so-5, her-4)
pobj(to-3, so-5)
advmod(talked-2, frankly-6)
mark(sent-10, that-7)
nsubj(sent-10, she-8)
advmod(sent-10, often-9)
ccomp(talked-2, sent-10)
prep_for(sent-10, him-12)
prep_after(sent-10, that-14)
prep_by(came-20, degrees-18)
nsubj(came-20, it-19)
conj_and(talked-2, came-20)
prt(came-20, about-21)
mark(had-24, that-22)
nsubj(had-24, he-23)
ccomp(came-20, had-24)
ccomp(had-24, leave-25)
aux(run-27, to-26)
xcomp(leave-25, run-27)
det(garden-30, the-29)
prep_in(run-27, garden-30)
mark(pleased-33, as-31)
nsubj(pleased-33, he-32)
advcl(leave-25, pleased-33)

(ROOT
  (S
    (S
      (NP (PRP He))
      (ADVP (RB never))
      (VP (VBD touched)
        (NP
          (NP (DT any))
          (PP (IN of)
            (NP (DT the) (NNS flowers)
              (CC or)
              (NNS blossoms))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD was) (RB not)
              (PP (IN like)
                (NP
                  (NP (DT some) (NNS boys))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (MD can) (RB not)
                        (VP (VB enjoy)
                          (NP (DT a) (NN thing))
                          (PP (IN without)
                            (S
                              (VP (VBG pulling)
                                (NP (PRP it))
                                (PP (TO to)
                                  (NP (NNS pieces)))))))))))))))))
    (, ,)
    (CC and)
    (RB so)
    (S
      (VP (VBG preventing)
        (NP (DT every) (NN one))
        (PP (IN from)
          (S
            (VP (VBG enjoying)
              (NP (PRP it))
              (PP (IN after)
                (NP (PRP them))))))))
    (. .)))

nsubj(touched-3, He-1)
nsubj(preventing-32, He-1)
neg(touched-3, never-2)
root(ROOT-0, touched-3)
dobj(touched-3, any-4)
det(flowers-7, the-6)
prep_of(any-4, flowers-7)
prep_of(any-4, blossoms-9)
conj_or(flowers-7, blossoms-9)
mark(was-13, for-11)
nsubj(was-13, he-12)
advcl(touched-3, was-13)
neg(was-13, not-14)
det(boys-17, some-16)
prep_like(was-13, boys-17)
nsubj(enjoy-21, boys-17)
aux(enjoy-21, can-19)
neg(enjoy-21, not-20)
rcmod(boys-17, enjoy-21)
det(thing-23, a-22)
dobj(enjoy-21, thing-23)
prepc_without(enjoy-21, pulling-25)
dobj(pulling-25, it-26)
prep_to(pulling-25, pieces-28)
conj_and(touched-3, preventing-32)
det(one-34, every-33)
dobj(preventing-32, one-34)
prepc_from(preventing-32, enjoying-36)
dobj(enjoying-36, it-37)
prep_after(enjoying-36, them-39)

(ROOT
  (S
    (NP (DT A) (NN week))
    (ADVP (RB even))
    (VP (VBZ makes)
      (NP (PDT such) (DT a) (JJ long) (NN time))
      (PP (IN in)
        (NP
          (NP (DT a) (NN child) (POS 's))
          (NN life)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (NNP Diamond))
          (VP (VBD had)
            (VP (VBN begun)
              (ADVP (RB once) (RBR more))
              (S
                (VP (TO to)
                  (VP (VB feel)
                    (SBAR (RB as) (IN if)
                      (S
                        (NP (NNP North) (NNP Wind))
                        (VP (VBD were)
                          (NP
                            (NP (DT a) (NN dream))
                            (PP (IN of)
                              (NP (DT some) (JJ far-off) (NN year)))))))))))))))
    (. .)))

det(week-2, A-1)
nsubj(makes-4, week-2)
advmod(makes-4, even-3)
root(ROOT-0, makes-4)
predet(time-8, such-5)
det(time-8, a-6)
amod(time-8, long-7)
dobj(makes-4, time-8)
det(child-11, a-10)
poss(life-13, child-11)
prep_in(makes-4, life-13)
mark(begun-18, that-15)
nsubj(begun-18, Diamond-16)
nsubj(feel-22, Diamond-16)
aux(begun-18, had-17)
ccomp(makes-4, begun-18)
advmod(more-20, once-19)
advmod(begun-18, more-20)
aux(feel-22, to-21)
xcomp(begun-18, feel-22)
advmod(dream-29, as-23)
mark(dream-29, if-24)
nn(Wind-26, North-25)
nsubj(dream-29, Wind-26)
cop(dream-29, were-27)
det(dream-29, a-28)
advcl(feel-22, dream-29)
det(year-33, some-31)
amod(year-33, far-off-32)
prep_of(dream-29, year-33)

(ROOT
  (S
    (NP (CD One) (JJ hot) (NN evening))
    (, ,)
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBG sitting)
          (PP (IN with)
            (NP
              (NP (DT the) (JJ young) (NN mistress))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (PRP they))
                  (VP (VBD called)
                    (NP (PRP her))
                    (, ,)
                    (PP (IN in)
                      (ADJP
                        (NP (DT a) (RB little))
                        (JJ summer-house)
                        (PP (IN at)
                          (NP
                            (NP
                              (NP (DT the) (NN bottom))
                              (PP (IN of)
                                (NP (DT the) (NN lawn))))
                            (: --)
                            (NP
                              (NP (DT a) (JJ wonderful) (NN thing))
                              (PP (IN for)
                                (NP (NN beauty))))))
                        (PRN (, ,)
                          (S
                            (NP (DT the) (NN boy))
                            (VP (VBD thought)))
                          (, ,)))))))))
          (SBAR (IN for)
            (S
              (NP
                (NP (DT a) (JJ little) (NN window))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN side))
                    (PP (IN of)
                      (NP (PRP it))))))
              (VP (VBD was)
                (VP (VBN made)
                  (PP (IN of)
                    (NP (VBN coloured) (NN glass))))))))))
    (. .)))

num(evening-3, One-1)
amod(evening-3, hot-2)
tmod(sitting-8, evening-3)
nsubj(sitting-8, he-5)
aux(sitting-8, had-6)
aux(sitting-8, been-7)
root(ROOT-0, sitting-8)
det(mistress-12, the-10)
amod(mistress-12, young-11)
prep_with(sitting-8, mistress-12)
mark(called-16, as-14)
nsubj(called-16, they-15)
dep(mistress-12, called-16)
dobj(called-16, her-17)
det(little-21, a-20)
npadvmod(summer-house-22, little-21)
prep_in(called-16, summer-house-22)
det(bottom-25, the-24)
prep_at(summer-house-22, bottom-25)
det(lawn-28, the-27)
prep_of(bottom-25, lawn-28)
det(thing-32, a-30)
amod(thing-32, wonderful-31)
dep(bottom-25, thing-32)
prep_for(thing-32, beauty-34)
det(boy-37, the-36)
nsubj(thought-38, boy-37)
dep(summer-house-22, thought-38)
mark(made-50, for-40)
det(window-43, a-41)
amod(window-43, little-42)
nsubjpass(made-50, window-43)
det(side-46, the-45)
prep_in(window-43, side-46)
prep_of(side-46, it-48)
auxpass(made-50, was-49)
advcl(sitting-8, made-50)
amod(glass-53, coloured-52)
prep_of(made-50, glass-53)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD grew)
        (ADVP (RB dusky))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN lady))
      (VP
        (VP (VBD began)
          (S
            (VP (TO to)
              (VP (VB feel)
                (NP (NN chill))))))
        (, ,)
        (CC and)
        (VP (VBD went)
          (PRT (RP in)))
        (, ,)
        (S
          (VP (VBG leaving)
            (NP (DT the) (NN boy))
            (PP (IN in)
              (NP (DT the) (NN summer-house)))))))
    (. .)))

nsubj(grew-2, It-1)
root(ROOT-0, grew-2)
advmod(grew-2, dusky-3)
det(lady-7, the-6)
nsubj(began-8, lady-7)
nsubj(feel-10, lady-7)
nsubj(went-14, lady-7)
nsubj(leaving-17, lady-7)
conj_and(grew-2, began-8)
aux(feel-10, to-9)
xcomp(began-8, feel-10)
dobj(feel-10, chill-11)
conj_and(grew-2, went-14)
conj_and(began-8, went-14)
prt(went-14, in-15)
conj_and(grew-2, leaving-17)
conj_and(began-8, leaving-17)
vmod(began-8, leaving-17)
det(boy-19, the-18)
dobj(leaving-17, boy-19)
det(summer-house-22, the-21)
prep_in(leaving-17, summer-house-22)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD sat)
      (S
        (NP (EX there))
        (VP (VBG gazing)
          (PRT (RP out))
          (PP (IN at)
            (NP
              (NP (DT a) (NN bed))
              (PP (IN of)
                (NP
                  (NP (NNS tulips))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (PRN (, ,)
                        (SBAR (IN although)
                          (S
                            (NP (PRP they))
                            (VP (VBD had)
                              (VP (VBN closed)
                                (PP (IN for)
                                  (NP (DT the) (NN night)))))))
                        (, ,))
                      (VP (MD could) (RB not)
                        (VP (VB go)
                          (ADJP (RB quite) (JJ asleep))
                          (PP (IN for)
                            (NP
                              (NP (DT the) (NN wind))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBD kept)
                                    (S
                                      (VP (VBG waving)
                                        (S
                                          (NP (PRP them))
                                          (ADJP (IN about)))))))))))))))))))))
    (. .)))

nsubj(sat-2, He-1)
root(ROOT-0, sat-2)
expl(gazing-4, there-3)
dep(sat-2, gazing-4)
prt(gazing-4, out-5)
det(bed-8, a-7)
prep_at(gazing-4, bed-8)
prep_of(bed-8, tulips-10)
nsubj(go-24, tulips-10)
mark(closed-17, although-14)
nsubj(closed-17, they-15)
aux(closed-17, had-16)
parataxis(go-24, closed-17)
det(night-20, the-19)
prep_for(closed-17, night-20)
aux(go-24, could-22)
neg(go-24, not-23)
rcmod(tulips-10, go-24)
advmod(asleep-26, quite-25)
acomp(go-24, asleep-26)
det(wind-29, the-28)
prep_for(go-24, wind-29)
nsubj(kept-31, wind-29)
rcmod(wind-29, kept-31)
xcomp(kept-31, waving-32)
nsubj(about-34, them-33)
xcomp(waving-32, about-34)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN at)
        (SBAR (IN once)
          (S
            (NP (PRP he))
            (VP (VBD saw)
              (NP (DT a) (JJ great) (NN bumble-bee)))))))
    (VP (VBP fly)
      (PRT (RP out))
      (PP (IN of)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (NNS tulips))))))
    (. .)))

nsubj(fly-9, All-1)
mark(saw-5, once-3)
nsubj(saw-5, he-4)
prepc_at(All-1, saw-5)
det(bumble-bee-8, a-6)
amod(bumble-bee-8, great-7)
dobj(saw-5, bumble-bee-8)
root(ROOT-0, fly-9)
prep_out_of(fly-9, one-12)
det(tulips-15, the-14)
prep_of(one-12, tulips-15)

(ROOT
  (S
    (NP (`` ``) (EX There))
    (VP (VBZ !))))

expl(!-3, There-2)

(ROOT
  (S
    (NP (DT that))
    (VP (VBZ is)
      (SBAR
        (S
          (NP
            (NP (NN something))
            (VP (VBN done))
            (, ,) ('' ''))
          (VP (VBD said)
            (NP
              (NP (DT a) (NN voice))
              (: --)
              (NP (DT a) (JJ gentle) (, ,) (JJ merry) (, ,) (JJ childish) (NN voice)))))
        (, ,)
        (CC but)
        (S (RB so)
          (ADJP (JJ tiny)))))
    (. .)))

nsubj(is-2, that-1)
root(ROOT-0, is-2)
nsubj(said-7, something-3)
nsubj(tiny-21, something-3)
vmod(something-3, done-4)
ccomp(is-2, said-7)
det(voice-9, a-8)
dobj(said-7, voice-9)
det(voice-17, a-11)
amod(voice-17, gentle-12)
amod(voice-17, merry-14)
amod(voice-17, childish-16)
dep(voice-9, voice-17)
advmod(tiny-21, so-20)
ccomp(is-2, tiny-21)
conj_but(said-7, tiny-21)

(ROOT
  (S (`` ``)
    (PP (IN At)
      (NP (JJ last)))
    (NP (PRP it))
    (VP (VBD was))
    (. .)))

prep_at(was-5, last-3)
nsubj(was-5, it-4)
root(ROOT-0, was-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD would)
            (VP (VB have)
              (VP (VBN had)
                (S
                  (VP (TO to)
                    (VP (VB stay)
                      (NP (RB there) (DT all) (NN night))
                      (, ,)
                      (NP (JJ poor) (NN fellow)))))))))))
    (. !)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(had-6, he-3)
nsubj(stay-8, he-3)
aux(had-6, would-4)
aux(had-6, have-5)
ccomp(thought-2, had-6)
aux(stay-8, to-7)
xcomp(had-6, stay-8)
advmod(night-11, there-9)
det(night-11, all-10)
tmod(stay-8, night-11)
amod(fellow-14, poor-13)
dobj(stay-8, fellow-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did))
    (. .) ('' '')))

nsubj(did-2, I-1)
root(ROOT-0, did-2)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (MD could) (RB not)
        (VP (VB tell)
          (SBAR (IN whether)
            (S
              (NP (DT the) (NN voice))
              (VP (VBD was)
                (ADVP (RB near)
                  (CC or)
                  (RB far))
                (ADVP (RB away))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADJP
        (ADJP (RB so) (JJ small))
        (CC and)
        (ADJP (RB yet) (RB so) (JJ clear))))
    (. .)))

nsubj(tell-4, Diamond-1)
aux(tell-4, could-2)
neg(tell-4, not-3)
ccomp(small-17, tell-4)
mark(was-8, whether-5)
det(voice-7, the-6)
nsubj(was-8, voice-7)
ccomp(tell-4, was-8)
advmod(was-8, near-9)
advmod(was-8, far-11)
conj_or(near-9, far-11)
advmod(was-8, away-12)
nsubj(small-17, it-14)
nsubj(clear-21, it-14)
cop(small-17, was-15)
advmod(small-17, so-16)
root(ROOT-0, small-17)
advmod(clear-21, yet-19)
advmod(clear-21, so-20)
conj_and(small-17, clear-21)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (ADVP (RB never))
        (VP (VBN seen)
          (NP (DT a) (NN fairy)))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN heard)
            (PP (IN of)
              (NP (JJ such))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD began)
          (S
            (VP (TO to)
              (VP (VB look)
                (ADVP (DT all) (IN about))
                (PP (IN for)
                  (NP (CD one)))))))))
    (. .)))

nsubj(seen-4, He-1)
aux(seen-4, had-2)
neg(seen-4, never-3)
root(ROOT-0, seen-4)
det(fairy-6, a-5)
dobj(seen-4, fairy-6)
nsubj(heard-11, he-9)
aux(heard-11, had-10)
conj_but(seen-4, heard-11)
prep_of(heard-11, such-13)
nsubj(began-17, he-16)
nsubj(look-19, he-16)
conj_but(seen-4, began-17)
conj_and(heard-11, began-17)
aux(look-19, to-18)
xcomp(began-17, look-19)
dep(about-21, all-20)
advmod(look-19, about-21)
prep_for(look-19, one-23)

(ROOT
  (S (CC And)
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJS tiniest) (NN creature))
        (VP (VBG sliding)
          (PRT (RP down))
          (NP
            (NP (DT the) (NN stem))
            (PP (IN of)
              (NP (DT the) (NN tulip)))))))
    (. !)))

cc(was-3, And-1)
expl(was-3, there-2)
root(ROOT-0, was-3)
det(creature-6, the-4)
amod(creature-6, tiniest-5)
nsubj(was-3, creature-6)
vmod(creature-6, sliding-7)
prt(sliding-7, down-8)
det(stem-10, the-9)
dobj(sliding-7, stem-10)
det(tulip-13, the-12)
prep_of(stem-10, tulip-13)

(ROOT
  (S (`` ``)
    (VP (VB Are)
      (S
        (NP (PRP you))
        (NP
          (NP (DT the) (NN fairy))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ herds)
                (NP (DT the) (NNS bees))))))))
    (. ?) ('' '')))

root(ROOT-0, Are-2)
nsubj(fairy-5, you-3)
det(fairy-5, the-4)
xcomp(Are-2, fairy-5)
nsubj(herds-7, fairy-5)
rcmod(fairy-5, herds-7)
det(bees-9, the-8)
dobj(herds-7, bees-9)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked) (, ,)
      (S
        (VP (VBG going)
          (PRT (RP out))
          (PP
            (PP (IN of)
              (NP (DT the) (NN summer-house)))
            (, ,)
            (CC and)
            (RB down)
            (PP (IN on)
              (NP (PRP$ his) (NNS knees))))
          (PP (IN on)
            (NP
              (NP (DT the) (JJ green) (NN shore))
              (PP (IN of)
                (NP (DT the) (NN tulip-bed))))))))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)
xcomp(asked-2, going-4)
det(summer-house-8, the-7)
prep_out_of(going-4, summer-house-8)
xcomp(asked-2, down-11)
conj_and(going-4, down-11)
dep(going-4, on-12)
poss(knees-14, his-13)
pobj(on-12, knees-14)
det(shore-18, the-16)
amod(shore-18, green-17)
prep_on(going-4, shore-18)
det(tulip-bed-21, the-20)
prep_of(shore-18, tulip-bed-21)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (NP (DT a) (NN fairy))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (DT the) (JJ little) (NN creature))
    (. .)))

nsubj(fairy-6, I-2)
cop(fairy-6, 'm-3)
neg(fairy-6, not-4)
det(fairy-6, a-5)
ccomp(answered-9, fairy-6)
root(ROOT-0, answered-9)
det(creature-12, the-10)
amod(creature-12, little-11)
nsubj(answered-9, creature-12)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (NP (DT that))))
    (. ?) ('' '')))

advmod(know-5, How-2)
aux(know-5, do-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
dobj(know-5, that-6)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD would)
      (VP (VB become)
        (S
          (NP (PRP you))
          (ADJP (JJR better)
            (S
              (VP (TO to)
                (VP (VB ask)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (PRP you))
                      (VP (VBP are)
                        (S
                          (VP (TO to)
                            (VP (VB know)
                              (NP (PRP it)))))))))))))))
    (. .) ('' '')))

nsubj(become-4, It-2)
aux(become-4, would-3)
root(ROOT-0, become-4)
nsubj(better-6, you-5)
nsubj(ask-8, you-5)
xcomp(become-4, better-6)
aux(ask-8, to-7)
xcomp(better-6, ask-8)
advmod(are-11, how-9)
nsubj(are-11, you-10)
nsubj(know-13, you-10)
ccomp(ask-8, are-11)
aux(know-13, to-12)
xcomp(are-11, know-13)
dobj(know-13, it-14)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP 've)
      (ADVP (RB just))
      (VP (VBN told)
        (NP (PRP me))))
    (. .) ('' '')))

nsubj(told-5, You-2)
aux(told-5, 've-3)
advmod(told-5, just-4)
root(ROOT-0, told-5)
dobj(told-5, me-6)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (SBARQ (CC But)
    (WHNP (WP what))
    (SQ
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN use))
          (PP (IN of)
            (S
              (VP (VBG knowing)
                (NP (DT a) (NN thing))
                (SBAR (RB only) (IN because)
                  (S
                    (NP (PRP you))
                    (VP (VBP 're)
                      (VP (VBN told)
                        (NP (PRP it))))))))))))
    (. ?) ('' '')))

cc(use-5, But-1)
nsubj(use-5, what-2)
cop(use-5, 's-3)
det(use-5, the-4)
root(ROOT-0, use-5)
prepc_of(use-5, knowing-7)
det(thing-9, a-8)
dobj(knowing-7, thing-9)
advmod(told-14, only-10)
mark(told-14, because-11)
nsubjpass(told-14, you-12)
auxpass(told-14, 're-13)
advcl(knowing-7, told-14)
dobj(told-14, it-15)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (ADVP (WRB how))
    (VP (VBP am)
      (S
        (NP (PRP I))
        (VP (TO to)
          (VP (VB know)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP are) (RB not)
                  (NP (DT a) (NN fairy)))))))))
    (. ?)))

discourse(am-5, Well-2)
advmod(am-5, how-4)
root(ROOT-0, am-5)
dobj(am-5, I-6)
nsubj(know-8, I-6)
aux(know-8, to-7)
xcomp(am-5, know-8)
nsubj(fairy-13, you-9)
cop(fairy-13, are-10)
neg(fairy-13, not-11)
det(fairy-13, a-12)
ccomp(know-8, fairy-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do)
      (S
        (VP (VB look)
          (ADVP (RB very)
            (PP (IN like)
              (NP (CD one)))))))
    (. .) ('' '')))

nsubj(do-2, You-1)
root(ROOT-0, do-2)
ccomp(do-2, look-3)
advmod(look-3, very-4)
prep_like(very-4, one-6)

(ROOT
  (S (`` ``)
    (PP (IN In)
      (NP (DT the) (JJ first) (NN place)))
    (, ,)
    (NP (NNS fairies))
    (VP (VBP are)
      (ADJP
        (ADJP (RB much) (JJR bigger))
        (SBAR (IN than)
          (S
            (NP (PRP you))
            (VP (VBP see)
              (NP (PRP me)))))))
    (. .) ('' '')))

det(place-5, the-3)
amod(place-5, first-4)
prep_in(bigger-10, place-5)
nsubj(bigger-10, fairies-7)
cop(bigger-10, are-8)
advmod(bigger-10, much-9)
root(ROOT-0, bigger-10)
mark(see-13, than-11)
nsubj(see-13, you-12)
ccomp(bigger-10, see-13)
dobj(see-13, me-14)

(ROOT
  (INTJ (`` ``) (UH Oh) (. !) ('' '')))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (NNP Diamond))
        (ADVP (RB reflectively))))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD were)
              (ADJP (RB very) (JJ little)))))))
    (. .) ('' '')))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)
advmod(said-1, reflectively-3)
nsubj(thought-7, I-6)
parataxis(said-1, thought-7)
nsubj(little-11, they-8)
cop(little-11, were-9)
advmod(little-11, very-10)
ccomp(thought-7, little-11)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP they))
    (VP (MD might)
      (VP (VB be)
        (ADJP
          (ADJP (RB tremendously) (JJR bigger))
          (SBAR (IN than)
            (S
              (NP (PRP I))
              (VP
                (VP (VBP am))
                (, ,)
                (CC and)
                (VP
                  (ADVP (RB yet))
                  (RB not)
                  (NP (RB very) (JJ big)))))))))
    (. .)))

cc(bigger-7, But-2)
nsubj(bigger-7, they-3)
aux(bigger-7, might-4)
cop(bigger-7, be-5)
advmod(bigger-7, tremendously-6)
root(ROOT-0, bigger-7)
mark(am-10, than-8)
nsubj(am-10, I-9)
nsubj(big-16, I-9)
ccomp(bigger-7, am-10)
advmod(big-16, yet-13)
neg(big-16, not-14)
advmod(big-16, very-15)
ccomp(bigger-7, big-16)
conj_and(am-10, big-16)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP I))
    (VP (MD could)
      (VP
        (VP (VB be)
          (NP
            (NP
              (QP (CD six) (NNS times))
              (DT the) (NN size))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP am))))))
        (, ,)
        (CC and)
        (RB not)
        (VP (VB be)
          (ADJP (RB very) (JJ huge)))))
    (. .)))

discourse(size-9, Why-1)
nsubj(size-9, I-3)
nsubj(huge-17, I-3)
aux(size-9, could-4)
cop(size-9, be-5)
number(times-7, six-6)
num(size-9, times-7)
det(size-9, the-8)
root(ROOT-0, size-9)
nsubj(am-11, I-10)
rcmod(size-9, am-11)
neg(huge-17, not-14)
cop(huge-17, be-15)
advmod(huge-17, very-16)
conj_and(size-9, huge-17)

(ROOT
  (S
    (ADVP (IN Besides))
    (PRN (, ,)
      (S
        (NP (DT a) (NN fairy))
        (VP (MD ca) (RB n't)
          (VP (VB grow)
            (ADJP (JJ big)
              (CC and)
              (JJ little))
            (PP (IN at)
              (NP (NN will))))))
      (, ,))
    (SBAR (IN though)
      (S
        (NP (DT the) (NNS nursery-tales))
        (VP (VBP do)
          (ADVP (VB say) (RB so)))))
    (: :)
    (NP (PRP they))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (ADVP (RBR better))))
    (. .)))

advmod(know-24, Besides-1)
det(fairy-4, a-3)
nsubj(grow-7, fairy-4)
aux(grow-7, ca-5)
neg(grow-7, n't-6)
parataxis(know-24, grow-7)
acomp(grow-7, big-8)
acomp(grow-7, little-10)
conj_and(big-8, little-10)
prep_at(grow-7, will-12)
mark(do-17, though-14)
det(nursery-tales-16, the-15)
nsubj(do-17, nursery-tales-16)
advcl(know-24, do-17)
dep(so-19, say-18)
advmod(do-17, so-19)
nsubj(know-24, they-21)
aux(know-24, do-22)
neg(know-24, n't-23)
root(ROOT-0, know-24)
advmod(know-24, better-25)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBZ stupid)
      (NP (NNP Diamond)))
    (. !)))

nsubj(stupid-2, You-1)
root(ROOT-0, stupid-2)
dobj(stupid-2, Diamond-3)

(ROOT
  (FRAG
    (S
      (VP (VBP have)
        (NP (PRP you))
        (ADVP (RB never))
        (VP (VBN seen)
          (S
            (NP (PRP me))
            (ADVP (RB before))))))
    (. ?) ('' '')))

aux(seen-4, have-1)
dobj(seen-4, you-2)
neg(seen-4, never-3)
root(ROOT-0, seen-4)
dep(seen-4, me-5)
advmod(me-5, before-6)

(ROOT
  (S (CC And)
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP she))
        (VP (VBD spoke))))
    (, ,)
    (S
      (NP
        (NP (DT a) (NN moan))
        (PP (IN of)
          (NP (NN wind))))
      (VP (VBZ bent)
        (NP (DT the) (NNS tulips))
        (ADVP (RB almost)
          (PP (TO to)
            (NP (DT the) (NN ground))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN creature))
      (VP (VBD laid)
        (NP (PRP$ her) (NN hand))
        (PP (IN on)
          (NP
            (NP (NNP Diamond) (POS 's))
            (NN shoulder)))))
    (. .)))

mark(spoke-5, as-3)
nsubj(spoke-5, she-4)
advcl(bent-11, spoke-5)
det(moan-8, a-7)
nsubj(bent-11, moan-8)
prep_of(moan-8, wind-10)
root(ROOT-0, bent-11)
det(tulips-13, the-12)
dobj(bent-11, tulips-13)
advmod(bent-11, almost-14)
det(ground-17, the-16)
prep_to(almost-14, ground-17)
det(creature-21, the-20)
nsubj(laid-22, creature-21)
conj_and(bent-11, laid-22)
poss(hand-24, her-23)
dobj(laid-22, hand-24)
poss(shoulder-28, Diamond-26)
prep_on(laid-22, shoulder-28)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (NN moment)))
    (NP (PRP he))
    (VP (VBD knew)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP (JJ North) (NN Wind))))))
    (. .)))

det(moment-3, a-2)
prep_in(knew-5, moment-3)
nsubj(knew-5, he-4)
root(ROOT-0, knew-5)
mark(Wind-10, that-6)
nsubj(Wind-10, it-7)
cop(Wind-10, was-8)
amod(Wind-10, North-9)
ccomp(knew-5, Wind-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (RB very) (JJ stupid))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said))))
    (: ;) (`` ``)
    (CC but)
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD saw)
        (S
          (NP (PRP you))
          (ADJP (RB so) (JJ small))
          (ADVP (RB before)))
        (, ,)
        (SBAR
          (ADVP (RB not) (RB even))
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBD were)
              (VP (VBG nursing)
                (NP (DT the) (NN primrose))))))))
    (. .) ('' '')))

nsubj(stupid-5, I-2)
cop(stupid-5, am-3)
advmod(stupid-5, very-4)
root(ROOT-0, stupid-5)
nsubj(said-9, he-8)
dep(stupid-5, said-9)
nsubj(saw-15, I-13)
neg(saw-15, never-14)
conj_but(stupid-5, saw-15)
nsubj(small-18, you-16)
advmod(small-18, so-17)
xcomp(saw-15, small-18)
advmod(small-18, before-19)
dep(even-22, not-21)
advmod(nursing-26, even-22)
advmod(nursing-26, when-23)
nsubj(nursing-26, you-24)
aux(nursing-26, were-25)
advcl(saw-15, nursing-26)
det(primrose-28, the-27)
dobj(nursing-26, primrose-28)

(ROOT
  (S (`` ``)
    (ADVP (RB Must))
    (NP (PRP you))
    (VP (VBP see)
      (S
        (NP (PRP me))
        (NP
          (NP
            (NP (DT every) (NN size))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD can)
                  (VP (VB be)
                    (VP (VBN measured)
                      (SBAR (IN before)
                        (S
                          (NP (PRP you))
                          (VP (VBP know)
                            (NP (PRP me)))))))))))
          (, ,)
          (NP (NNP Diamond)))))
    (. ?) ('' '')))

advmod(see-4, Must-2)
nsubj(see-4, you-3)
root(ROOT-0, see-4)
nsubj(size-7, me-5)
det(size-7, every-6)
xcomp(see-4, size-7)
nsubjpass(measured-11, size-7)
aux(measured-11, can-9)
auxpass(measured-11, be-10)
rcmod(size-7, measured-11)
mark(know-14, before-12)
nsubj(know-14, you-13)
advcl(measured-11, know-14)
dobj(know-14, me-15)
appos(size-7, Diamond-17)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB how))
    (SQ (MD could)
      (NP (PRP I))
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (S
                (NP (PRP you))
                (VP (VBG taking)
                  (NP
                    (NP (NN care))
                    (PP (IN of)
                      (NP (DT a) (JJ great) (JJ stupid) (NN bumble-bee)))))))))))
    (. ?) ('' '')))

cc(think-6, But-2)
advmod(think-6, how-3)
aux(think-6, could-4)
nsubj(think-6, I-5)
root(ROOT-0, think-6)
nsubj(was-8, it-7)
ccomp(think-6, was-8)
nsubj(taking-10, you-9)
dep(was-8, taking-10)
dobj(taking-10, care-11)
det(bumble-bee-16, a-13)
amod(bumble-bee-16, great-14)
amod(bumble-bee-16, stupid-15)
prep_of(care-11, bumble-bee-16)

(ROOT
  (S (`` ``)
    (X (DT The)
      (ADJP (RBR more) (JJ stupid)))
    (NP (PRP he))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJR more) (NN need))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN taken)
                      (NP (VB care) (IN of)))))))))))
    (. .)))

det(stupid-4, The-2)
advmod(stupid-4, more-3)
dep(need-9, stupid-4)
nsubj(need-9, he-5)
cop(need-9, was-6)
det(need-9, the-7)
amod(need-9, more-8)
root(ROOT-0, need-9)
nsubj(had-11, he-10)
nsubjpass(taken-14, he-10)
rcmod(need-9, had-11)
aux(taken-14, to-12)
auxpass(taken-14, be-13)
xcomp(had-11, taken-14)
dobj(taken-14, care-15)
amod(care-15, of-16)

(ROOT
  (SBARQ
    (SBAR
      (WHNP (WP What))
      (S
        (S
          (PP (IN with)
            (S
              (VP
                (VP (VBG sucking)
                  (NP (NN honey)))
                (CC and)
                (VP (VBG trying)
                  (S
                    (VP (TO to)
                      (VP (VB open)
                        (NP (DT the) (NN door)))))))))
          (, ,)
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (RB nearly) (JJ dated))))
        (: ;)
        (CC and)
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP it))
              (VP (VBD opened)
                (PP (IN in)
                  (NP (DT the) (NN morning)))
                (S
                  (VP (TO to)
                    (VP (VB let)
                      (NP (DT the) (NN sun))))))))
          (VP (VBP see)
            (NP
              (NP (DT the) (NN tulip) (POS 's))
              (NN heart))))))
    (, ,)
    (WHNP (WP what))
    (SQ (MD would)
      (NP (DT the) (NN sun))
      (VP (VB have)
        (VP (VBD thought)
          (S
            (VP (TO to)
              (VP (VB find)
                (NP
                  (NP (PDT such) (DT a) (JJ stupid) (NN thing))
                  (VP (VBG lying)
                    (ADVP (RB there))
                    (: --)
                    (PP (IN with)
                      (NP (NNS wings) (RB too))))))))
          (. ?) ('' ''))))))

dep(dated-15, What-1)
prepc_with(dated-15, sucking-3)
dobj(sucking-3, honey-4)
conj_and(sucking-3, trying-6)
prepc_with(dated-15, trying-6)
aux(open-8, to-7)
xcomp(trying-6, open-8)
det(door-10, the-9)
dobj(open-8, door-10)
nsubj(dated-15, he-12)
cop(dated-15, was-13)
advmod(dated-15, nearly-14)
dep(thought-39, dated-15)
advmod(opened-20, when-18)
nsubj(opened-20, it-19)
nsubj(let-25, it-19)
advcl(see-28, opened-20)
csubj(see-28, opened-20)
det(morning-23, the-22)
prep_in(opened-20, morning-23)
aux(let-25, to-24)
xcomp(opened-20, let-25)
det(sun-27, the-26)
dobj(let-25, sun-27)
conj_and(dated-15, see-28)
dep(thought-39, see-28)
det(tulip-30, the-29)
poss(heart-32, tulip-30)
dobj(see-28, heart-32)
dobj(thought-39, what-34)
nsubj(find-41, what-34)
aux(thought-39, would-35)
det(sun-37, the-36)
nsubj(thought-39, sun-37)
aux(thought-39, have-38)
root(ROOT-0, thought-39)
aux(find-41, to-40)
xcomp(thought-39, find-41)
predet(thing-45, such-42)
det(thing-45, a-43)
amod(thing-45, stupid-44)
dobj(find-41, thing-45)
vmod(thing-45, lying-46)
advmod(lying-46, there-47)
prep_with(lying-46, wings-50)
advmod(wings-50, too-51)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB how))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB have)
        (NP (NN time))
        (S
          (VP (TO to)
            (VP (VB look)
              (PP (IN after)
                (NP (NNS bees))))))))
    (. ?) ('' '')))

cc(have-6, But-2)
advmod(have-6, how-3)
aux(have-6, do-4)
nsubj(have-6, you-5)
root(ROOT-0, have-6)
dobj(have-6, time-7)
aux(look-9, to-8)
vmod(have-6, look-9)
prep_after(look-9, bees-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB look)
        (PP (IN after)
          (NP (NNS bees)))))
    (. .)))

nsubj(look-5, I-2)
aux(look-5, do-3)
neg(look-5, n't-4)
root(ROOT-0, look-5)
prep_after(look-5, bees-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD had)
      (NP (DT this) (NN one)
        (S
          (VP (TO to)
            (VP (VB look)
              (PP (IN after)))))))
    (. .)))

nsubj(had-2, I-1)
root(ROOT-0, had-2)
det(one-4, this-3)
dobj(had-2, one-4)
aux(look-6, to-5)
vmod(one-4, look-6)
prep(look-6, after-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (JJ hard) (NN work))
      (, ,)
      (ADVP (RB though)))
    (. .) ('' '')))

nsubj(work-4, It-1)
cop(work-4, was-2)
amod(work-4, hard-3)
root(ROOT-0, work-4)
advmod(work-4, though-6)

(ROOT
  (S (`` ``)
    (NP (NNP Hard))
    (VP (VBP work))
    (. !)))

nsubj(work-3, Hard-2)
root(ROOT-0, work-3)

(ROOT
  (SINV
    (S
      (ADVP (WRB Why))
      (, ,)
      (NP (PRP you))
      (VP (MD could)
        (VP (VB blow)
          (NP
            (NP
              (NP (DT a) (NN chimney) (RP down))
              (, ,)
              (ADVP (CC or)))
            (: --)
            (CC or)
            (NP
              (NP (DT a) (NN boy) (POS 's))
              (NN cap)))
          (PRT (RP off)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

advmod(blow-5, Why-1)
nsubj(blow-5, you-3)
aux(blow-5, could-4)
ccomp(said-20, blow-5)
det(chimney-7, a-6)
dobj(blow-5, chimney-7)
dep(chimney-7, down-8)
advmod(chimney-7, or-10)
det(boy-14, a-13)
poss(cap-16, boy-14)
dobj(blow-5, cap-16)
conj_or(chimney-7, cap-16)
prt(blow-5, off-17)
root(ROOT-0, said-20)
nsubj(said-20, Diamond-21)

(ROOT
  (S (`` ``)
    (NP (DT Both))
    (VP (VBP are)
      (ADJP
        (ADJP (JJR easier))
        (SBAR (IN than)
          (S
            (VP (TO to)
              (VP (VB blow)
                (S
                  (NP (DT a) (NN tulip))
                  (ADJP (JJ open)))))))))
    (. .)))

nsubj(easier-4, Both-2)
cop(easier-4, are-3)
root(ROOT-0, easier-4)
mark(blow-7, than-5)
aux(blow-7, to-6)
ccomp(easier-4, blow-7)
det(tulip-9, a-8)
nsubj(open-10, tulip-9)
xcomp(blow-7, open-10)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (ADVP (RB scarcely))
    (VP (VBP know)
      (NP
        (NP (DT the) (NN difference))
        (PP (IN between)
          (ADJP (JJ hard)
            (CC and)
            (JJ easy)))))
    (. .)))

cc(know-4, But-1)
nsubj(know-4, I-2)
advmod(know-4, scarcely-3)
root(ROOT-0, know-4)
det(difference-6, the-5)
dobj(know-4, difference-6)
prep_between(difference-6, hard-8)
prep_between(difference-6, easy-10)
conj_and(hard-8, easy-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB always))
      (ADJP (JJ able)
        (PP (IN for)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP have)
                (S
                  (VP (TO to)
                    (VP (VB do))))))))))
    (. .)))

nsubj(able-4, I-1)
cop(able-4, am-2)
advmod(able-4, always-3)
root(ROOT-0, able-4)
dobj(have-8, what-6)
nsubj(do-10, what-6)
nsubj(have-8, I-7)
prepc_for(able-4, have-8)
aux(do-10, to-9)
xcomp(have-8, do-10)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP I))
          (VP (VBP see)
            (NP (PRP$ my) (NN work)))))
      (, ,)
      (NP (PRP I))
      (ADVP (RB just))
      (VP (VBP rush)
        (PP (IN at)
          (NP (PRP it)))))
    (: --)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (VP (VBN done))))
    (. .)))

advmod(see-3, When-1)
nsubj(see-3, I-2)
advcl(rush-9, see-3)
poss(work-5, my-4)
dobj(see-3, work-5)
nsubj(rush-9, I-7)
advmod(rush-9, just-8)
root(ROOT-0, rush-9)
prep_at(rush-9, it-11)
nsubjpass(done-16, it-14)
auxpass(done-16, is-15)
conj_and(rush-9, done-16)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (MD must) (RB n't)
      (VP (VB chatter)))
    (. .)))

cc(chatter-5, But-1)
nsubj(chatter-5, I-2)
aux(chatter-5, must-3)
neg(chatter-5, n't-4)
root(ROOT-0, chatter-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN got)
        (S
          (VP (TO to)
            (VP (VB sink)
              (NP (DT a) (NN ship) (NN to-night)))))))
    (. .) ('' '')))

nsubj(got-3, I-1)
nsubj(sink-5, I-1)
aux(got-3, have-2)
root(ROOT-0, got-3)
aux(sink-5, to-4)
xcomp(got-3, sink-5)
det(to-night-8, a-6)
nn(to-night-8, ship-7)
dobj(sink-5, to-night-8)

(ROOT
  (S (`` ``)
    (VP (VB Sink)
      (NP (DT a) (NN ship)))
    (. !)))

root(ROOT-0, Sink-2)
det(ship-4, a-3)
dobj(Sink-2, ship-4)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (. !)))

root(ROOT-0, What-1)

(ROOT
  (FRAG
    (NP
      (NP (IN with) (NNS men))
      (PP (IN in)
        (NP (PRP it))))
    (. ?) ('' '')))

amod(men-2, with-1)
root(ROOT-0, men-2)
prep_in(men-2, it-4)

(ROOT
  (S (`` ``)
    (NP (NNP Yes))
    (, ,)
    (VP (VB and)
      (NP (NNS women))
      (ADVP (RB too)))
    (. .) ('' '')))

nsubj(and-4, Yes-2)
root(ROOT-0, and-4)
dobj(and-4, women-5)
advmod(and-4, too-6)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WRB How) (JJ dreadful))
    (SQ
      (VP (VBZ !)))))

advmod(dreadful-3, How-2)
nsubj(!-4, dreadful-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD would) (RB n't)
            (VP (VB talk)
              (ADVP (RB so)))))))
    (. .) ('' '')))

nsubj(wish-2, I-1)
root(ROOT-0, wish-2)
nsubj(talk-6, you-3)
aux(talk-6, would-4)
neg(talk-6, n't-5)
ccomp(wish-2, talk-6)
advmod(talk-6, so-7)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB rather) (JJ dreadful)))
    (. .)))

nsubj(dreadful-5, It-2)
cop(dreadful-5, is-3)
advmod(dreadful-5, rather-4)
root(ROOT-0, dreadful-5)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ is)
      (NP (PRP$ my) (NN work)))
    (. .)))

cc(work-5, But-1)
nsubj(work-5, it-2)
cop(work-5, is-3)
poss(work-5, my-4)
root(ROOT-0, work-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (VP (VB do)
        (NP (PRP it))))
    (. .) ('' '')))

nsubj(do-3, I-1)
aux(do-3, must-2)
root(ROOT-0, do-3)
dobj(do-3, it-4)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD wo) (RB n't)
            (VP (VB ask)
              (S
                (NP (PRP me))
                (VP (TO to)
                  (VP (VB go)
                    (PP (IN with)
                      (NP (PRP you)))))))))))
    (. .) ('' '')))

nsubj(hope-3, I-2)
root(ROOT-0, hope-3)
nsubj(ask-7, you-4)
aux(ask-7, wo-5)
neg(ask-7, n't-6)
ccomp(hope-3, ask-7)
dobj(ask-7, me-8)
nsubj(go-10, me-8)
aux(go-10, to-9)
xcomp(ask-7, go-10)
prep_with(go-10, you-12)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (PRP I))
    (VP (MD wo) (RB n't)
      (VP (VB ask)
        (NP (PRP you))))
    (. .)))

discourse(ask-7, No-2)
nsubj(ask-7, I-4)
aux(ask-7, wo-5)
neg(ask-7, n't-6)
root(ROOT-0, ask-7)
dobj(ask-7, you-8)

(ROOT
  (S (CC But)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB come)
        (PP (IN for)
          (NP (PDT all) (DT that)))))
    (. .) ('' '')))

cc(come-4, But-1)
nsubj(come-4, you-2)
aux(come-4, must-3)
root(ROOT-0, come-4)
predet(that-7, all-6)
prep_for(come-4, that-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD wo)
      (VP (RB n't)
        (NP (RB then))))
    (. .) ('' '')))

nsubj(then-5, I-2)
aux(then-5, wo-3)
neg(then-5, n't-4)
root(ROOT-0, then-5)

(ROOT
  (S (`` ``)
    (VP (VB Wo)
      (S
        (VP (RB n't)
          (NP (PRP you)))))
    (. ?) ('' '')))

root(ROOT-0, Wo-2)
neg(you-4, n't-3)
ccomp(Wo-2, you-4)

(ROOT
  (S (CC And)
    (S
      (NP (NNP North) (NNP Wind))
      (VP
        (VP (VBD grew)
          (NP (DT a) (JJ tall) (NN lady)))
        (, ,)
        (CC and)
        (VP (VBD looked)
          (NP (PRP him))
          (PP (IN in)
            (NP (DT the) (NNS eyes))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Diamond))
      (VP (VBD said) (: --) (`` ``)
        (S
          (INTJ (UH Please))
          (VP (VB take)
            (NP (PRP me))))))
    (. .)))

nn(Wind-3, North-2)
nsubj(grew-4, Wind-3)
nsubj(looked-10, Wind-3)
root(ROOT-0, grew-4)
det(lady-7, a-5)
amod(lady-7, tall-6)
dobj(grew-4, lady-7)
conj_and(grew-4, looked-10)
dobj(looked-10, him-11)
det(eyes-14, the-13)
prep_in(looked-10, eyes-14)
nsubj(said-18, Diamond-17)
conj_and(grew-4, said-18)
discourse(take-22, Please-21)
ccomp(said-18, take-22)
dobj(take-22, me-23)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can) (RB not)
      (VP (VB be)
        (ADJP (JJ cruel))))
    (. .) ('' '')))

nsubj(cruel-5, You-1)
aux(cruel-5, can-2)
neg(cruel-5, not-3)
cop(cruel-5, be-4)
root(ROOT-0, cruel-5)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD could) (RB not)
        (VP (VB be)
          (ADJP (JJ cruel))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (MD would)))))))
    (. .)))

dep(cruel-8, No-2)
nsubj(cruel-8, I-4)
aux(cruel-8, could-5)
neg(cruel-8, not-6)
cop(cruel-8, be-7)
root(ROOT-0, cruel-8)
mark(would-11, if-9)
nsubj(would-11, I-10)
advcl(cruel-8, would-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP (VB do)
        (ADJP (NN nothing) (JJ cruel))
        (, ,)
        (SBAR (IN although)
          (S
            (NP (PRP I))
            (ADVP (RB often))
            (VP (VBP do)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ looks)
                    (PP (IN like)
                      (ADJP (JJ cruel)))
                    (PP (TO to)
                      (NP
                        (NP (DT those))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBP do) (RB not)
                              (VP (VB know)
                                (SBAR
                                  (WHNP (WP what))
                                  (S
                                    (NP (PRP I))
                                    (ADVP (RB really))
                                    (VP (VBP am)
                                      (VP (VBG doing)))))))))))))))))))
    (. .)))

nsubj(cruel-5, I-1)
aux(cruel-5, can-2)
dep(cruel-5, do-3)
npadvmod(cruel-5, nothing-4)
root(ROOT-0, cruel-5)
mark(do-10, although-7)
nsubj(do-10, I-8)
advmod(do-10, often-9)
advcl(cruel-5, do-10)
nsubj(looks-12, what-11)
ccomp(do-10, looks-12)
prep_like(looks-12, cruel-14)
prep_to(looks-12, those-16)
nsubj(know-20, those-16)
aux(know-20, do-18)
neg(know-20, not-19)
rcmod(those-16, know-20)
dobj(doing-25, what-21)
nsubj(doing-25, I-22)
advmod(doing-25, really-23)
aux(doing-25, am-24)
ccomp(know-20, doing-25)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS people))
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP say)
            (S
              (NP (PRP I))
              (VP (VB drown)))))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB only))
    (VP (VBP carry)
      (PRT (RP away))
      (PP (TO to))
      (: --)
      (PP (TO to)
        (PRN (: --)
          (PP (TO to))
          (: --))
        (NP
          (NP (NN well))
          (, ,)
          (NP
            (NP (DT the) (NN back))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ North) (NN Wind))
                (: --)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP they))
                          (VP (VBD used)
                            (S
                              (VP (TO to)
                                (VP (VB call)
                                  (NP (PRP it))
                                  (ADVP (RB long) (RB ago))
                                  (, ,)
                                  (SBAR (RB only)
                                    (S
                                      (NP (PRP I))
                                      (ADVP (RB never))
                                      (VP (VBD saw)
                                        (NP (DT the) (NN place))))))))))))))))))))
    (. .) ('' '')))

det(people-2, The-1)
nsubj(carry-10, people-2)
nsubj(say-4, they-3)
rcmod(people-2, say-4)
nsubj(drown-6, I-5)
ccomp(say-4, drown-6)
nsubj(carry-10, I-8)
advmod(carry-10, only-9)
root(ROOT-0, carry-10)
prt(carry-10, away-11)
prep(carry-10, to-12)
dep(carry-10, to-16)
prep_to(carry-10, well-18)
det(back-21, the-20)
appos(well-18, back-21)
det(Wind-25, the-23)
amod(Wind-25, North-24)
prep_of(back-21, Wind-25)
nsubj(is-28, Wind-25)
rcmod(Wind-25, is-28)
dobj(used-31, what-29)
nsubj(call-33, what-29)
nsubj(used-31, they-30)
ccomp(is-28, used-31)
aux(call-33, to-32)
xcomp(used-31, call-33)
dobj(call-33, it-34)
advmod(ago-36, long-35)
advmod(call-33, ago-36)
advmod(saw-41, only-38)
nsubj(saw-41, I-39)
neg(saw-41, never-40)
dep(call-33, saw-41)
det(place-43, the-42)
dobj(saw-41, place-43)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB carry)
        (NP (PRP them))
        (ADVP (RB there))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (ADVP (RB never))
            (VP (VBD saw)
              (NP (PRP it)))))))
    (. ?) ('' '')))

advmod(carry-5, How-2)
aux(carry-5, can-3)
nsubj(carry-5, you-4)
root(ROOT-0, carry-5)
dobj(carry-5, them-6)
advmod(carry-5, there-7)
mark(saw-11, if-8)
nsubj(saw-11, you-9)
neg(saw-11, never-10)
advcl(carry-5, saw-11)
dobj(saw-11, it-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP know)
      (NP (DT the) (NN way)))
    (. .) ('' '')))

nsubj(know-3, I-2)
root(ROOT-0, know-3)
det(way-5, the-4)
dobj(know-3, way-5)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB how))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (SBAR
          (S
            (NP (PRP you))
            (ADVP (RB never))
            (VP (VBD saw)
              (NP (PRP it)))))))
    (. ?) ('' '')))

cc(is-4, But-2)
advmod(is-4, how-3)
root(ROOT-0, is-4)
nsubj(is-4, it-5)
nsubj(saw-8, you-6)
neg(saw-8, never-7)
rcmod(it-5, saw-8)
dobj(saw-8, it-9)

(ROOT
  (S (`` ``)
    (PP (IN Because))
    (NP (PRP it))
    (VP (VBZ is)
      (PP (IN behind)
        (NP (PRP me))))
    (. .) ('' '')))

prep(is-4, Because-2)
nsubj(is-4, it-3)
root(ROOT-0, is-4)
prep_behind(is-4, me-6)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (MD can)
      (VP (VB look)
        (NP (NN round))))
    (. .) ('' '')))

cc(look-5, But-2)
nsubj(look-5, you-3)
aux(look-5, can-4)
root(ROOT-0, look-5)
dobj(look-5, round-6)

(ROOT
  (S (`` ``) (RB Not)
    (VP
      (ADVP
        (ADVP (RB far) (RB enough))
        (PP (TO to)))
      (VBP see)
      (NP (PRP$ my) (JJ own) (NN back)))
    (. .)))

neg(see-6, Not-2)
advmod(enough-4, far-3)
advmod(see-6, enough-4)
prep(enough-4, to-5)
root(ROOT-0, see-6)
poss(back-9, my-7)
amod(back-9, own-8)
dobj(see-6, back-9)

(ROOT
  (S
    (FRAG
      (INTJ (UH No)))
    (: ;)
    (S
      (NP (PRP I))
      (ADVP (RB always))
      (VP (VBP look)
        (PP (IN before)
          (NP (PRP me)))))
    (. .)))

dep(look-5, No-1)
nsubj(look-5, I-3)
advmod(look-5, always-4)
root(ROOT-0, look-5)
prep_before(look-5, me-7)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (PRP I))
    (VP (VBP grow)
      (ADJP (RB quite) (JJ blind)
        (CC and)
        (JJ deaf)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBP try)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP (PRP$ my) (NN back))))))))))
    (. .)))

prep_in(grow-5, fact-2)
nsubj(grow-5, I-4)
root(ROOT-0, grow-5)
advmod(blind-7, quite-6)
acomp(grow-5, blind-7)
acomp(grow-5, deaf-9)
conj_and(blind-7, deaf-9)
advmod(try-12, when-10)
nsubj(try-12, I-11)
nsubj(see-14, I-11)
ccomp(blind-7, try-12)
aux(see-14, to-13)
xcomp(try-12, see-14)
poss(back-16, my-15)
dobj(see-14, back-16)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB only))
    (VP (VB mind)
      (NP (PRP$ my) (NN work)))
    (. .) ('' '')))

nsubj(mind-3, I-1)
advmod(mind-3, only-2)
root(ROOT-0, mind-3)
poss(work-5, my-4)
dobj(mind-3, work-5)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB how))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB be)
        (NP (PRP$ your) (NN work))))
    (. ?) ('' '')))

cc(work-8, But-2)
advmod(work-8, how-3)
aux(work-8, does-4)
nsubj(work-8, it-5)
cop(work-8, be-6)
poss(work-8, your-7)
root(ROOT-0, work-8)

(ROOT
  (S (`` ``)
    (INTJ (UH Ah))
    (, ,)
    (NP (DT that) (NN I))
    (VP (MD ca) (RB n't)
      (VP (VB tell)
        (NP (PRP you))))
    (. .)))

discourse(tell-8, Ah-2)
det(I-5, that-4)
nsubj(tell-8, I-5)
aux(tell-8, ca-6)
neg(tell-8, n't-7)
root(ROOT-0, tell-8)
dobj(tell-8, you-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB only))
      (VP (VBP know)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is) (, ,)
              (SBAR (IN because)
                (S
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP I))
                      (VP (VBP do)
                        (NP (PRP it)))))
                  (NP (PRP I))
                  (VP (VBP feel)
                    (ADVP (DT all) (RB right))))))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBP do) (RB n't))))
      (NP (PRP I))
      (VP (VBP feel)
        (S
          (NP (DT all))
          (ADJP (JJ wrong)))))
    (. .)))

nsubj(know-3, I-1)
advmod(know-3, only-2)
root(ROOT-0, know-3)
nsubj(is-5, it-4)
ccomp(know-3, is-5)
mark(feel-13, because-7)
advmod(do-10, when-8)
nsubj(do-10, I-9)
advcl(feel-13, do-10)
dobj(do-10, it-11)
nsubj(feel-13, I-12)
advcl(is-5, feel-13)
dep(right-15, all-14)
advmod(feel-13, right-15)
advmod(do-20, when-18)
nsubj(do-20, I-19)
advcl(feel-23, do-20)
neg(do-20, n't-21)
nsubj(feel-23, I-22)
conj_and(know-3, feel-23)
nsubj(wrong-25, all-24)
xcomp(feel-23, wrong-25)

(ROOT
  (S
    (S
      (NP (NNP East) (NNP Wind))
      (VP (VBZ says)))
    (: --)
    (S
      (NP (RB only) (CD one))
      (VP (VBZ does) (RB not)
        (ADVP (RB exactly))
        (VP (VB know)
          (SBAR
            (WHNP (WRB how) (JJ much))
            (S
              (VP (TO to)
                (VP (VB believe)
                  (PP (IN of)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP she))
                        (VP (VBZ says) (, ,)
                          (SBAR (IN for)
                            (S
                              (NP (PRP she))
                              (VP (VBZ is)
                                (ADJP (RB very) (JJ naughty))
                                (ADVP (RB sometimes))))))))))))))))
    (: --)
    (S
      (NP (PRP she))
      (VP (VBZ says)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is) (RB all)
              (VP (VBN managed)
                (PP (IN by)
                  (NP (DT a) (NN baby)))))))))
    (: ;)
    (CC but)
    (S
      (SBAR (IN whether)
        (S
          (NP (PRP she))
          (VP (VBZ is)
            (ADJP (JJ good)
              (CC or)
              (JJ naughty))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP she))
                (VP (VBZ says)
                  (NP (DT that))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know))))
    (. .)))

nn(Wind-2, East-1)
nsubj(says-3, Wind-2)
root(ROOT-0, says-3)
advmod(one-6, only-5)
nsubj(know-10, one-6)
aux(know-10, does-7)
neg(know-10, not-8)
advmod(know-10, exactly-9)
conj_but(says-3, know-10)
advmod(much-12, how-11)
advmod(believe-14, much-12)
nsubj(believe-14, much-12)
aux(believe-14, to-13)
ccomp(know-10, believe-14)
xcomp(know-10, believe-14)
dobj(says-18, what-16)
nsubj(says-18, she-17)
prepc_of(believe-14, says-18)
mark(naughty-24, for-20)
nsubj(naughty-24, she-21)
cop(naughty-24, is-22)
advmod(naughty-24, very-23)
advcl(says-18, naughty-24)
advmod(naughty-24, sometimes-25)
nsubj(says-28, she-27)
conj_but(says-3, says-28)
nsubjpass(managed-32, it-29)
auxpass(managed-32, is-30)
advmod(managed-32, all-31)
ccomp(says-28, managed-32)
det(baby-35, a-34)
agent(managed-32, baby-35)
mark(good-41, whether-38)
nsubj(good-41, she-39)
nsubj(naughty-43, she-39)
cop(good-41, is-40)
advcl(know-52, good-41)
ccomp(know-52, good-41)
conj_or(good-41, naughty-43)
advcl(know-52, naughty-43)
ccomp(know-52, naughty-43)
advmod(says-46, when-44)
nsubj(says-46, she-45)
advcl(good-41, says-46)
dobj(says-46, that-47)
nsubj(know-52, I-49)
aux(know-52, do-50)
neg(know-52, n't-51)
conj_but(says-3, know-52)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP stick)
      (PP (TO to)
        (NP (PRP$ my) (NN work))))
    (. .)))

nsubj(stick-3, I-1)
advmod(stick-3, just-2)
root(ROOT-0, stick-3)
poss(work-6, my-5)
prep_to(stick-3, work-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB all)
        (NP (CD one))
        (PP (TO to)
          (NP (PRP me))))
      (S
        (VP
          (VP (TO to)
            (VP (VB let)
              (NP (DT a) (NN bee))
              (PRT (RP out))
              (PP (IN of)
                (NP (DT a) (NN tulip)))))
          (, ,)
          (CC or)
          (VP (TO to)
            (VP (VB sweep)
              (NP (DT the) (NNS cobwebs))
              (PP (IN from)
                (NP (DT the) (NN sky))))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
advmod(is-2, all-3)
pobj(all-3, one-4)
prep_to(all-3, me-6)
aux(let-8, to-7)
ccomp(is-2, let-8)
det(bee-10, a-9)
dobj(let-8, bee-10)
det(tulip-14, a-13)
prep_out_of(let-8, tulip-14)
aux(sweep-18, to-17)
ccomp(is-2, sweep-18)
conj_or(let-8, sweep-18)
det(cobwebs-20, the-19)
dobj(sweep-18, cobwebs-20)
det(sky-23, the-22)
prep_from(sweep-18, sky-23)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD would)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN with)
                (NP (PRP me)))
              (ADJP (JJ to-night)))))))
    (. ?) ('' '')))

nsubj(like-3, You-1)
nsubj(go-5, You-1)
aux(like-3, would-2)
root(ROOT-0, like-3)
aux(go-5, to-4)
xcomp(like-3, go-5)
prep_with(go-5, me-7)
acomp(go-5, to-night-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP
                (NP (DT a) (NN ship))
                (VP (VBN sunk))))))))
    (. .) ('' '')))

nsubj(want-5, I-2)
nsubj(see-7, I-2)
aux(want-5, do-3)
neg(want-5, n't-4)
root(ROOT-0, want-5)
aux(see-7, to-6)
xcomp(want-5, see-7)
det(ship-9, a-8)
dobj(see-7, ship-9)
vmod(ship-9, sunk-10)

(ROOT
  (S (`` ``)
    (CC But)
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD had)
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP (PRP you)))))))))
    (. ?) ('' '')))

cc(suppose-3, But-2)
root(ROOT-0, suppose-3)
nsubj(had-5, I-4)
nsubj(take-7, I-4)
ccomp(suppose-3, had-5)
aux(take-7, to-6)
xcomp(had-5, take-7)
dobj(take-7, you-8)

(ROOT
  (S (`` ``)
    (ADVP (WRB Why))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (PP (IN of)
      (NP (NN course)))
    (NP (PRP I))
    (VP (MD must)
      (VP (VB go)))
    (. .) ('' '')))

advmod(go-10, Why-2)
advmod(go-10, then-4)
prep_of(go-10, course-7)
nsubj(go-10, I-8)
aux(go-10, must-9)
root(ROOT-0, go-10)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT a) (JJ good) (NNP Diamond)))
    (. .)))

expl('s-3, There-2)
root(ROOT-0, 's-3)
det(Diamond-6, a-4)
amod(Diamond-6, good-5)
nsubj('s-3, Diamond-6)

(ROOT
  (S (: --)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD had)
            (ADVP (RBR better))
            (VP (VB be)
              (VP (VBG growing)
                (NP (DT a) (NN bit))))))))
    (. .)))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(growing-8, I-4)
aux(growing-8, had-5)
advmod(growing-8, better-6)
aux(growing-8, be-7)
ccomp(think-3, growing-8)
det(bit-10, a-9)
dobj(growing-8, bit-10)

(ROOT
  (S (RB Only)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB go)
        (PP (TO to)
          (NP (NN bed)))
        (ADVP (RB first))))
    (. .)))

advmod(go-4, Only-1)
nsubj(go-4, you-2)
aux(go-4, must-3)
root(ROOT-0, go-4)
prep_to(go-4, bed-6)
advmod(go-4, first-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB take)
        (NP (PRP you))
        (SBAR (IN till)
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (PP (IN in)
                (NP (NN bed))))))))
    (. .)))

nsubj(take-4, I-1)
aux(take-4, ca-2)
neg(take-4, n't-3)
root(ROOT-0, take-4)
dobj(take-4, you-5)
mark('re-8, till-6)
nsubj('re-8, you-7)
advcl(take-4, 're-8)
prep_in('re-8, bed-10)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN law))
        (PP (IN about)
          (NP (DT the) (NNS children)))))
    (. .)))

nsubj(law-4, That-1)
cop(law-4, 's-2)
det(law-4, the-3)
root(ROOT-0, law-4)
det(children-7, the-6)
prep_about(law-4, children-7)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBD had)
      (ADVP (RBR better))
      (VP (VB go)
        (CC and)
        (VB do)
        (NP (NN something) (RB else))
        (ADVP (RB first))))
    (. .) ('' '')))

dep(go-5, So-1)
nsubj(go-5, I-2)
nsubj(do-7, I-2)
aux(go-5, had-3)
advmod(go-5, better-4)
root(ROOT-0, go-5)
conj_and(go-5, do-7)
dobj(go-5, something-8)
advmod(something-8, else-9)
advmod(go-5, first-10)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (NNP Very))
        (ADVP (RB well)))
      (, ,)
      (NP (NNP North))
      (VP (VBZ Wind)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

ccomp(Wind-6, Very-2)
advmod(Very-2, well-3)
nsubj(Wind-6, North-5)
ccomp(said-9, Wind-6)
root(ROOT-0, said-9)
nsubj(said-9, Diamond-10)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB do)
              (ADVP (RB first))
              (, ,)
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP please)))))))))
    (. ?) ('' '')))

dep(going-5, What-2)
aux(going-5, are-3)
nsubj(going-5, you-4)
nsubj(do-7, you-4)
root(ROOT-0, going-5)
aux(do-7, to-6)
xcomp(going-5, do-7)
advmod(do-7, first-8)
mark(please-12, if-10)
nsubj(please-12, you-11)
advcl(do-7, please-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD may)
            (VP (VB tell)
              (NP (PRP you)))))))
    (. .)))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(tell-6, I-4)
aux(tell-6, may-5)
ccomp(think-3, tell-6)
dobj(tell-6, you-7)

(ROOT
  (S
    (VP (VB Jump)
      (PRT (RP up))
      (PP (IN on)
        (NP
          (NP (DT the) (NN top))
          (PP (IN of)
            (NP (DT the) (NN wall))))
        (, ,)
        (ADVP (RB there))))
    (. .) ('' '')))

root(ROOT-0, Jump-1)
prt(Jump-1, up-2)
det(top-5, the-4)
prep_on(Jump-1, top-5)
det(wall-8, the-7)
prep_of(top-5, wall-8)
advmod(Jump-1, there-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD ca) (RB n't))
    (. .) ('' '')))

nsubj(ca-3, I-2)
root(ROOT-0, ca-3)
neg(ca-3, n't-4)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (S
    (S
      (S (CC and)
        (NP (PRP I))
        (VP (MD ca) (RB n't)
          (VP (VB help)
            (NP (PRP you)))))
      (: --)
      (S
        (NP (PRP you))
        (VP (VBP have) (RB n't)
          (VP (VBN been)
            (PP (TO to)
              (NP (NN bed)))
            (ADVP (RB yet))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP see))
    (. .)))

cc(help-5, and-1)
nsubj(help-5, I-2)
aux(help-5, ca-3)
neg(help-5, n't-4)
ccomp(see-17, help-5)
dobj(help-5, you-6)
nsubj(been-11, you-8)
aux(been-11, have-9)
neg(been-11, n't-10)
parataxis(help-5, been-11)
prep_to(been-11, bed-13)
advmod(been-11, yet-14)
nsubj(see-17, you-16)
root(ROOT-0, see-17)

(ROOT
  (S
    (S
      (VP (VB Come)
        (PRT (RP out))
        (PP
          (PP (TO to)
            (NP
              (NP (DT the) (NN road))
              (PP (IN with)
                (NP (PRP me)))))
          (, ,) (RB just)
          (PP (IN in)
            (NP
              (NP (NN front))
              (PP (IN of)
                (NP (DT the) (NN coach-house))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB show)
          (NP (PRP you)))))
    (. .) ('' '')))

root(ROOT-0, Come-1)
prt(Come-1, out-2)
det(road-5, the-4)
prep_to(Come-1, road-5)
prep_with(road-5, me-7)
dep(Come-1, just-9)
det(coach-house-14, the-13)
prep_in_front_of(Come-1, coach-house-14)
nsubj(show-19, I-17)
aux(show-19, will-18)
conj_and(Come-1, show-19)
dobj(show-19, you-20)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP (VBD grew)
      (ADJP
        (ADJP (RB very) (JJ small))
        (ADVP (RB indeed))
        (, ,)
        (ADJP (RB so) (JJ small)))
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (MD could) (RB not)
            (VP (VB have)
              (VP (VBN blown)
                (NP (DT the) (NN dust))
                (PP (IN off)
                  (NP (DT a) (JJ dusty) (NN miller)))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (DT the) (NNP Scotch) (NNS children))
                    (VP (VBP call)
                      (NP (DT a) (JJ yellow) (NN auricula)))))))))))
    (. .)))

nn(Wind-2, North-1)
nsubj(grew-3, Wind-2)
root(ROOT-0, grew-3)
advmod(small-5, very-4)
acomp(grew-3, small-5)
advmod(small-5, indeed-6)
advmod(small-9, so-8)
dep(small-5, small-9)
mark(blown-15, that-10)
nsubj(blown-15, she-11)
aux(blown-15, could-12)
neg(blown-15, not-13)
aux(blown-15, have-14)
ccomp(grew-3, blown-15)
det(dust-17, the-16)
dobj(blown-15, dust-17)
det(miller-21, a-19)
amod(miller-21, dusty-20)
prep_off(blown-15, miller-21)
mark(call-27, as-23)
det(children-26, the-24)
nn(children-26, Scotch-25)
nsubj(call-27, children-26)
advcl(blown-15, call-27)
det(auricula-30, a-28)
amod(auricula-30, yellow-29)
dobj(call-27, auricula-30)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (MD could) (RB not)
      (ADVP (RB even))
      (VP (VB see)
        (NP
          (NP (DT the) (NNS blades))
          (PP (IN of)
            (NP (NN grass) (NN move))))
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP (VBD flitted)
              (PRT (RP along))
              (PP (IN by)
                (NP (PRP$ his) (NN foot))))))))
    (. .)))

nsubj(see-5, Diamond-1)
aux(see-5, could-2)
neg(see-5, not-3)
advmod(see-5, even-4)
root(ROOT-0, see-5)
det(blades-7, the-6)
dobj(see-5, blades-7)
nn(move-10, grass-9)
prep_of(blades-7, move-10)
mark(flitted-13, as-11)
nsubj(flitted-13, she-12)
advcl(see-5, flitted-13)
prt(flitted-13, along-14)
poss(foot-17, his-16)
prep_by(flitted-13, foot-17)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD left)
        (NP (DT the) (NN lawn)))
      (, ,)
      (VP (VBD went)
        (PRT (RP out))
        (PP (IN by)
          (NP
            (NP (DT the) (NN wicket))
            (PP (IN in)
              (NP (JJ the-coach-house) (NNS gates))))))
      (, ,)
      (CC and)
      (ADVP (RB then))
      (VP (VBD crossed)
        (NP (DT the) (NN road))
        (PP (TO to)
          (NP
            (NP (DT the) (JJ low) (NN wall))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBN separated)
                  (NP (PRP it))
                  (PP (IN from)
                    (NP (DT the) (NN river))))))))))
    (. .)))

nsubj(left-2, They-1)
nsubj(went-6, They-1)
nsubj(crossed-17, They-1)
root(ROOT-0, left-2)
det(lawn-4, the-3)
dobj(left-2, lawn-4)
conj_and(left-2, went-6)
prt(went-6, out-7)
det(wicket-10, the-9)
prep_by(went-6, wicket-10)
amod(gates-13, the-coach-house-12)
prep_in(wicket-10, gates-13)
advmod(crossed-17, then-16)
conj_and(left-2, crossed-17)
det(road-19, the-18)
dobj(crossed-17, road-19)
det(wall-23, the-21)
amod(wall-23, low-22)
prep_to(crossed-17, wall-23)
nsubj(separated-25, wall-23)
rcmod(wall-23, separated-25)
dobj(separated-25, it-26)
det(river-29, the-28)
prep_from(separated-25, river-29)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB get)
          (PRT (RP up))
          (PP (IN on)
            (NP
              (NP (DT this) (NN wall))
              (, ,)
              (NP (NNP Diamond)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP North) (NNP Wind))
    (. .)))

nsubj(get-4, You-2)
aux(get-4, can-3)
ccomp(said-13, get-4)
prt(get-4, up-5)
det(wall-8, this-7)
prep_on(get-4, wall-8)
appos(wall-8, Diamond-10)
root(ROOT-0, said-13)
nn(Wind-15, North-14)
nsubj(said-13, Wind-15)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes)))
    (: ;)
    (S (CC but)
      (NP (PRP$ my) (NN mother))
      (VP (VBZ has)
        (VP (VBN forbidden)
          (NP (PRP me)))))
    (. .) ('' '')))

dep(forbidden-8, Yes-2)
cc(forbidden-8, but-4)
poss(mother-6, my-5)
nsubj(forbidden-8, mother-6)
aux(forbidden-8, has-7)
root(ROOT-0, forbidden-8)
dobj(forbidden-8, me-9)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (VP (VB do) (RB n't)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP North) (NNP Wind))
    (. .)))

advmod(do-3, Then-2)
ccomp(said-7, do-3)
neg(do-3, n't-4)
root(ROOT-0, said-7)
nn(Wind-9, North-8)
nsubj(said-7, Wind-9)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (NP (PRP I))
      (VP (MD can)
        (VP (VB see)
          (PRT (RP over)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

cc(see-5, But-2)
nsubj(see-5, I-3)
aux(see-5, can-4)
ccomp(said-9, see-5)
prt(see-5, over-6)
root(ROOT-0, said-9)
nsubj(said-9, Diamond-10)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (S
    (VP (TO to)
      (VP (VB be)
        (ADJP (JJ sure))))
    (. .)))

aux(sure-3, to-1)
cop(sure-3, be-2)
root(ROOT-0, sure-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't))
    (. .) ('' '')))

nsubj(ca-2, I-1)
root(ROOT-0, ca-2)
neg(ca-2, n't-3)

(ROOT
  (S
    (S (RB So)
      (VP (VBG saying)))
    (, ,)
    (NP (NNP North) (NNP Wind))
    (VP
      (VP (VBD gave)
        (NP (DT a) (JJ little))
        (S
          (ADJP (VBN bound))))
      (, ,)
      (CC and)
      (VP (VBD stood)
        (PP (IN on)
          (NP
            (NP (DT the) (NN top))
            (PP (IN of)
              (NP (DT the) (NN wall)))))))
    (. .)))

advmod(saying-2, So-1)
vmod(gave-6, saying-2)
nn(Wind-5, North-4)
nsubj(gave-6, Wind-5)
nsubj(stood-12, Wind-5)
root(ROOT-0, gave-6)
det(little-8, a-7)
dobj(gave-6, little-8)
dep(gave-6, bound-9)
conj_and(gave-6, stood-12)
det(top-15, the-14)
prep_on(stood-12, top-15)
det(wall-18, the-17)
prep_of(top-15, wall-18)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADVP (RB just))
      (PP (IN about)
        (NP
          (NP (DT the) (NN height))
          (SBAR
            (S
              (NP (DT a) (NN dragon-fly))
              (VP (MD would)
                (VP (VB be)))))))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBD stood)
            (PP (IN on)
              (NP (NN end)))))))
    (. .)))

nsubj(was-2, She-1)
root(ROOT-0, was-2)
advmod(was-2, just-3)
det(height-6, the-5)
prep_about(was-2, height-6)
det(dragon-fly-8, a-7)
nsubj(be-10, dragon-fly-8)
aux(be-10, would-9)
rcmod(height-6, be-10)
mark(stood-14, if-12)
nsubj(stood-14, it-13)
advcl(was-2, stood-14)
prep_on(stood-14, end-16)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBZ darling))
    (. !) ('' '')))

nsubj(darling-3, You-2)
root(ROOT-0, darling-3)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (NNP Diamond))
        (, ,)
        (S
          (VP (VBG seeing)
            (NP (WP what))
            (NP (DT a) (JJ lovely) (JJ little) (NN toy-woman))))))
    (NP (PRP she))
    (VP (VBD was))
    (. .)))

dep(was-11, said-1)
dobj(said-1, Diamond-2)
vmod(said-1, seeing-4)
iobj(seeing-4, what-5)
det(toy-woman-9, a-6)
amod(toy-woman-9, lovely-7)
amod(toy-woman-9, little-8)
dobj(seeing-4, toy-woman-9)
nsubj(was-11, she-10)
root(ROOT-0, was-11)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VBP Do) (RB n't)
        (VP (VB be)
          (NP
            (NP (NN impertinent))
            (, ,)
            (NP (NNP Master) (NNP Diamond))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP North) (NNP Wind))
    (. .)))

aux(impertinent-5, Do-2)
neg(impertinent-5, n't-3)
cop(impertinent-5, be-4)
ccomp(said-11, impertinent-5)
nn(Diamond-8, Master-7)
appos(impertinent-5, Diamond-8)
root(ROOT-0, said-11)
nn(Wind-13, North-12)
nsubj(said-11, Wind-13)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP
            (NP (CD one) (NN thing))
            (SBAR
              (S
                (VP (VBZ makes)
                  (S
                    (NP (PRP me))
                    (ADJP (RBR more) (JJ angry)
                      (PP (IN than)
                        (NP (DT another))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN way))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD humans)
              (NP (NN judge) (NNS things))
              (PP (IN by)
                (NP (PRP$ their) (NN size))))))))
    (. .)))

mark('s-4, If-2)
expl('s-4, there-3)
advcl(is-15, 's-4)
num(thing-6, one-5)
nsubj('s-4, thing-6)
rcmod(thing-6, makes-7)
nsubj(angry-10, me-8)
advmod(angry-10, more-9)
xcomp(makes-7, angry-10)
prep_than(angry-10, another-12)
nsubj(is-15, it-14)
root(ROOT-0, is-15)
det(way-17, the-16)
dep(is-15, way-17)
nsubj(humans-19, you-18)
rcmod(way-17, humans-19)
nn(things-21, judge-20)
dobj(humans-19, things-21)
poss(size-24, their-23)
prep_by(humans-19, size-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP
        (ADJP (RB quite) (RB as) (JJ respectable))
        (SBAR
          (ADVP (RB now))
          (IN as)
          (S
            (NP (PRP I))
            (VP (MD shall)
              (VP
                (VP (VB be)
                  (NP (CD six) (NNS hours))
                  (SBAR (IN after)
                    (S
                      (NP
                        (NP (DT this))
                        (, ,)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP I))
                            (VP (VBP take)
                              (NP (DT an) (NNP East) (NNP Indiaman))
                              (PP (IN by)
                                (NP (DT the) (NNS royals))))))
                        (, ,))
                      (VP (VBP twist)
                        (NP (PRP$ her) (NN round))))))
                (, ,)
                (CC and)
                (VP (VB push)
                  (NP (PRP her))
                  (PP (IN under)))))))))
    (. .)))

nsubj(respectable-5, I-1)
cop(respectable-5, am-2)
advmod(respectable-5, quite-3)
advmod(respectable-5, as-4)
root(ROOT-0, respectable-5)
advmod(hours-12, now-6)
mark(hours-12, as-7)
nsubj(hours-12, I-8)
nsubj(push-31, I-8)
aux(hours-12, shall-9)
cop(hours-12, be-10)
num(hours-12, six-11)
dep(respectable-5, hours-12)
mark(twist-26, after-13)
tmod(take-18, this-14)
nsubj(twist-26, this-14)
advmod(take-18, when-16)
nsubj(take-18, I-17)
rcmod(this-14, take-18)
det(Indiaman-21, an-19)
nn(Indiaman-21, East-20)
dobj(take-18, Indiaman-21)
det(royals-24, the-23)
prep_by(take-18, royals-24)
advcl(hours-12, twist-26)
poss(round-28, her-27)
dobj(twist-26, round-28)
dep(respectable-5, push-31)
conj_and(hours-12, push-31)
dobj(push-31, her-32)
prep(push-31, under-33)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (ADVP (RB no) (RB right))
      (S
        (VP (TO to)
          (VP (VB address)
            (NP (PRP me))
            (PP (IN in)
              (NP (PDT such) (DT a) (NN fashion)))))))
    (. .) ('' '')))

nsubj(have-2, You-1)
nsubj(address-6, You-1)
root(ROOT-0, have-2)
neg(right-4, no-3)
advmod(have-2, right-4)
aux(address-6, to-5)
xcomp(have-2, address-6)
dobj(address-6, me-7)
predet(fashion-11, such-9)
det(fashion-11, a-10)
prep_in(address-6, fashion-11)

(ROOT
  (S (CC But)
    (SBAR (IN as)
      (S
        (NP (PRP she))
        (VP (VBD spoke))))
    (, ,)
    (NP (DT the) (JJ tiny) (NN face))
    (VP (VBD wore)
      (NP
        (NP (DT the) (NN smile))
        (PP (IN of)
          (NP (DT a) (JJ great) (, ,) (JJ grand) (NN woman)))))
    (. .)))

cc(wore-9, But-1)
mark(spoke-4, as-2)
nsubj(spoke-4, she-3)
advcl(wore-9, spoke-4)
det(face-8, the-6)
amod(face-8, tiny-7)
nsubj(wore-9, face-8)
root(ROOT-0, wore-9)
det(smile-11, the-10)
dobj(wore-9, smile-11)
det(woman-17, a-13)
amod(woman-17, great-14)
amod(woman-17, grand-16)
prep_of(smile-11, woman-17)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (ADVP (RB only))
        (VP (VBG having)
          (NP
            (NP (PRP$ her) (JJ own) (JJ beautiful) (NN fun))
            (PP (RB out) (IN of)
              (NP (NNP Diamond)))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (JJ true) (NN woman) (POS 's))
        (NN fun))
      (ADVP (RB never))
      (VP (VBZ hurts)))
    (. .)))

nsubj(having-4, She-1)
aux(having-4, was-2)
advmod(having-4, only-3)
root(ROOT-0, having-4)
poss(fun-8, her-5)
amod(fun-8, own-6)
amod(fun-8, beautiful-7)
dobj(having-4, fun-8)
prep_out_of(fun-8, Diamond-11)
amod(woman-15, true-14)
poss(fun-17, woman-15)
nsubj(hurts-19, fun-17)
neg(hurts-19, never-18)
conj_and(having-4, hurts-19)

(ROOT
  (S (`` ``)
    (CC But)
    (VP (VBP look)
      (ADVP (RB there)))
    (. !) ('' '')))

cc(look-3, But-2)
root(ROOT-0, look-3)
advmod(look-3, there-4)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD resumed))
    (. .)))

nsubj(resumed-2, she-1)
root(ROOT-0, resumed-2)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB see)
          (NP (DT a) (NN boat))
          (PP (IN with)
            (NP
              (NP (CD one) (NN man))
              (PP (IN in)
                (NP
                  (NP (PRP it))
                  (: --)
                  (NP (DT a)
                    (ADJP (JJ green)
                      (CC and)
                      (JJ white))
                    (NN boat)))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(see-4, you-3)
ccomp(Do-2, see-4)
det(boat-6, a-5)
dobj(see-4, boat-6)
num(man-9, one-8)
prep_with(see-4, man-9)
prep_in(man-9, it-11)
det(boat-17, a-13)
amod(boat-17, green-14)
conj_and(green-14, white-16)
amod(boat-17, white-16)
dep(it-11, boat-17)

(ROOT
  (S (`` ``)
    (VP (VB Yes) (: ;)
      (ADVP (RB quite) (RB well)))
    (. .) ('' '')))

root(ROOT-0, Yes-2)
advmod(well-5, quite-4)
advmod(Yes-2, well-5)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (NP (DT a) (NN poet)))
    (. .) ('' '')))

nsubj(poet-5, That-2)
cop(poet-5, 's-3)
det(poet-5, a-4)
root(ROOT-0, poet-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD said)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (NP (DT a) (NN bo-at)))))))))
    (. .) ('' '')))

nsubj(thought-3, I-2)
root(ROOT-0, thought-3)
nsubj(said-5, you-4)
ccomp(thought-3, said-5)
nsubj(bo-at-9, it-6)
cop(bo-at-9, was-7)
det(bo-at-9, a-8)
ccomp(said-5, bo-at-9)

(ROOT
  (S (`` ``)
    (VP (VB Stupid)
      (NP (NN pet)))
    (. !)))

root(ROOT-0, Stupid-2)
dobj(Stupid-2, pet-3)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP know)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT a) (NN poet))
          (VP (VBZ is)))))
    (. ?) ('' '')))

nsubj(know-4, Do-1)
neg(know-4, n't-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
dobj(is-8, what-5)
det(poet-7, a-6)
nsubj(is-8, poet-7)
ccomp(know-4, is-8)

(ROOT
  (S (`` ``)
    (ADVP (WRB Why))
    (, ,)
    (S
      (NP (DT a) (NN thing))
      (VP (TO to)
        (VP (VB sail)
          (PP (IN on)
            (NP (DT the) (NN water)))
          (PP (IN in)))))
    (. .) ('' '')))

advmod(sail-7, Why-2)
det(thing-5, a-4)
nsubj(sail-7, thing-5)
aux(sail-7, to-6)
root(ROOT-0, sail-7)
det(water-10, the-9)
prep_on(sail-7, water-10)
prep(sail-7, in-11)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (ADVP (RB perhaps))
    (NP (PRP you))
    (VP (VBP 're) (RB not)
      (ADJP (RB so) (RB far) (JJ wrong)))
    (. .)))

discourse(wrong-10, Well-2)
advmod(wrong-10, perhaps-4)
nsubj(wrong-10, you-5)
cop(wrong-10, 're-6)
neg(wrong-10, not-7)
advmod(wrong-10, so-8)
advmod(wrong-10, far-9)
root(ROOT-0, wrong-10)

(ROOT
  (S
    (NP (DT Some) (NNS poets))
    (VP (VBP do)
      (VP (VB carry)
        (NP (NNS people))
        (PP (IN over)
          (NP (DT the) (NN sea)))))
    (. .)))

det(poets-2, Some-1)
nsubj(carry-4, poets-2)
aux(carry-4, do-3)
root(ROOT-0, carry-4)
dobj(carry-4, people-5)
det(sea-8, the-7)
prep_over(carry-4, sea-8)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP have)
      (NP (DT no) (NN business)
        (S
          (VP (TO to)
            (VP (VB talk)
              (ADVP (RB so) (RB much)))))))
    (. .)))

cc(have-3, But-1)
nsubj(have-3, I-2)
root(ROOT-0, have-3)
neg(business-5, no-4)
dobj(have-3, business-5)
aux(talk-7, to-6)
vmod(business-5, talk-7)
advmod(much-9, so-8)
advmod(talk-7, much-9)

(ROOT
  (S
    (NP (DT The) (NN man))
    (VP (VBZ is)
      (NP (DT a) (NN poet)))
    (. .) ('' '')))

det(man-2, The-1)
nsubj(poet-5, man-2)
cop(poet-5, is-3)
det(poet-5, a-4)
root(ROOT-0, poet-5)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT The) (NN boat))
      (VP (VBZ is)
        (NP (DT a) (NN boat))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

det(boat-3, The-2)
nsubj(boat-6, boat-3)
cop(boat-6, is-4)
det(boat-6, a-5)
ccomp(said-9, boat-6)
root(ROOT-0, said-9)
nsubj(said-9, Diamond-10)

(ROOT
  (FRAG (`` ``)
    (ADJP
      (ADJP (JJ Ca))
      (SBAR (RB n't)
        (S
          (NP (PRP you))
          (VP (VB spell)))))
    (. ?) ('' '')))

root(ROOT-0, Ca-2)
dep(spell-5, n't-3)
nsubj(spell-5, you-4)
ccomp(Ca-2, spell-5)

(ROOT
  (S
    (VP (VBD asked)
      (NP (JJ North) (NN Wind)))
    (. .)))

root(ROOT-0, asked-1)
amod(Wind-3, North-2)
dobj(asked-1, Wind-3)

(ROOT
  (S (`` ``)
    (VP (VB Not)
      (ADVP (RB very) (RB well)))
    (. .) ('' '')))

root(ROOT-0, Not-2)
advmod(well-4, very-3)
advmod(Not-2, well-4)

(ROOT
  (S (`` ``)
    (CC So)
    (NP (PRP I))
    (VP (VBP see))
    (. .)))

cc(see-4, So-2)
nsubj(see-4, I-3)
root(ROOT-0, see-4)

(ROOT
  (S
    (NP (DT A) (NN poet))
    (VP (VBZ is) (RB not)
      (NP (DT a) (NN bo-at))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP you))
          (VP (VBP call)
            (NP (PRP it))))))
    (. .)))

det(poet-2, A-1)
nsubj(bo-at-6, poet-2)
cop(bo-at-6, is-3)
neg(bo-at-6, not-4)
det(bo-at-6, a-5)
root(ROOT-0, bo-at-6)
mark(call-10, as-8)
nsubj(call-10, you-9)
advcl(bo-at-6, call-10)
dobj(call-10, it-11)

(ROOT
  (S
    (NP (DT A) (NN poet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN man))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBZ is)
                (ADJP (JJ glad)
                  (PP (IN of)
                    (NP (NN something)))))
              (, ,)
              (CC and)
              (VP (VBZ tries)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (S
                        (NP (JJ other) (NNS people))
                        (ADJP (JJ glad)
                          (PP (IN of)
                            (NP (PRP it))))
                        (ADVP (RB too))))))))))))
    (. .) ('' '')))

det(poet-2, A-1)
nsubj(man-5, poet-2)
cop(man-5, is-3)
det(man-5, a-4)
root(ROOT-0, man-5)
nsubj(glad-8, man-5)
nsubj(tries-13, man-5)
nsubj(make-15, man-5)
cop(glad-8, is-7)
rcmod(man-5, glad-8)
prep_of(glad-8, something-10)
rcmod(man-5, tries-13)
conj_and(glad-8, tries-13)
aux(make-15, to-14)
xcomp(tries-13, make-15)
amod(people-17, other-16)
nsubj(glad-18, people-17)
xcomp(make-15, glad-18)
prep_of(glad-18, it-20)
advmod(glad-18, too-21)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (S
    (ADVP (RB now))
    (NP (PRP I))
    (VP (VBP know))
    (. .)))

advmod(know-3, now-1)
nsubj(know-3, I-2)
root(ROOT-0, know-3)

(ROOT
  (S
    (VP (VB Like)
      (NP (DT the) (NN man))
      (PP (IN in)
        (NP (DT the) (NN sweety-shop))))
    (. .) ('' '')))

root(ROOT-0, Like-1)
det(man-3, the-2)
dobj(Like-1, man-3)
det(sweety-shop-6, the-5)
prep_in(Like-1, sweety-shop-6)

(ROOT
  (FRAG
    (ADVP (`` ``) (RB Not)
      (ADVP (JJ very)))
    (. .)))

dep(very-3, Not-2)
root(ROOT-0, very-3)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP see)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (NP (DT no) (NN use))))))
    (. .)))

cc(see-3, But-1)
nsubj(see-3, I-2)
root(ROOT-0, see-3)
nsubj(use-7, it-4)
cop(use-7, is-5)
neg(use-7, no-6)
ccomp(see-3, use-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD was) (RB n't)
        (VP (VBN sent)
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP you))))))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB tell)
          (NP (PRP you)))))
    (. .)))

nsubjpass(sent-4, I-1)
nsubj(tell-6, I-1)
auxpass(sent-4, was-2)
neg(sent-4, n't-3)
root(ROOT-0, sent-4)
aux(tell-6, to-5)
xcomp(sent-4, tell-6)
dobj(tell-6, you-7)
conj_and(sent-4, so-10)
nsubj(tell-14, I-11)
aux(tell-14, ca-12)
neg(tell-14, n't-13)
ccomp(sent-4, tell-14)
dobj(tell-14, you-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (VP (VB be)
        (ADJP (RP off))))
    (. .)))

nsubj(off-4, I-1)
aux(off-4, must-2)
cop(off-4, be-3)
root(ROOT-0, off-4)

(ROOT
  (S
    (NP (RB Only) (JJ first))
    (ADVP (RB just))
    (VP (VBP look)
      (PP (IN at)
        (NP (DT the) (NN man))))
    (. .) ('' '')))

advmod(first-2, Only-1)
nsubj(look-4, first-2)
advmod(look-4, just-3)
root(ROOT-0, look-4)
det(man-7, the-6)
prep_at(look-4, man-7)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (RB much))
        (PP (IN of)
          (NP
            (NP (DT a) (NN rower))
            ('' '')
            (SBAR
              (S
                (VP (VBD said)
                  (NP (NNP Diamond))))))))
      (: --) (`` ``)
      (VP (VBG paddling)
        (ADVP (RB first))
        (PP
          (PP (IN with)
            (NP (CD one) (NN fin)))
          (CC and)
          (RB then)
          (PP (IN with)
            (NP (DT the) (JJ other))))))
    (. .) ('' '')))

nsubj(paddling-14, He-2)
cop(paddling-14, 's-3)
neg(paddling-14, not-4)
dep(paddling-14, much-5)
det(rower-8, a-7)
prep_of(much-5, rower-8)
rcmod(rower-8, said-10)
dobj(said-10, Diamond-11)
root(ROOT-0, paddling-14)
advmod(paddling-14, first-15)
num(fin-18, one-17)
prep_with(paddling-14, fin-18)
advmod(paddling-14, then-20)
det(other-23, the-22)
prep_with(paddling-14, other-23)
conj_and(fin-18, other-23)

(ROOT
  (S (`` ``)
    (NP (RB Now))
    (VP (VBP look)
      (ADVP (RB here)))
    (. !) ('' '')))

nsubj(look-3, Now-2)
root(ROOT-0, look-3)
advmod(look-3, here-4)

(ROOT
  (S
    (VP (VBD said)
      (NP (JJ North) (NN Wind)))
    (. .)))

root(ROOT-0, said-1)
amod(Wind-3, North-2)
dobj(said-1, Wind-3)

(ROOT
  (S (CC And)
    (NP (PRP she))
    (VP (VBD flashed)
      (PP (IN like)
        (NP (DT a) (NN dragon-fly)))
      (PP (IN across)
        (NP
          (NP (DT the) (NN water))
          (, ,)
          (SBAR
            (WHNP (WP$ whose) (NNS surface))
            (S
              (VP
                (VP (VBD rippled))
                (CC and)
                (VP (VBD puckered)
                  (SBAR (IN as)
                    (S
                      (NP (PRP she))
                      (VP (VBD passed)))))))))))
    (. .)))

cc(flashed-3, And-1)
nsubj(flashed-3, she-2)
root(ROOT-0, flashed-3)
det(dragon-fly-6, a-5)
prep_like(flashed-3, dragon-fly-6)
det(water-9, the-8)
prep_across(flashed-3, water-9)
poss(surface-12, water-9)
nsubj(rippled-13, surface-12)
nsubj(puckered-15, surface-12)
rcmod(water-9, rippled-13)
rcmod(water-9, puckered-15)
conj_and(rippled-13, puckered-15)
mark(passed-18, as-16)
nsubj(passed-18, she-17)
advcl(puckered-15, passed-18)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (JJ next) (NN moment))
        (NP (DT the) (NN man)))
      (PP (IN in)
        (NP (DT the) (NN boat))))
    (VP
      (VP (VBD glanced)
        (PP (IN about)
          (NP (PRP him))))
      (, ,)
      (CC and)
      (VP
        (ADJP (JJ bent))
        (PP (TO to)
          (NP (PRP$ his) (NNS oars)))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, next-2)
nsubj(glanced-9, moment-3)
nsubj(bent-14, moment-3)
det(man-5, the-4)
dep(moment-3, man-5)
det(boat-8, the-7)
prep_in(moment-3, boat-8)
root(ROOT-0, glanced-9)
prep_about(glanced-9, him-11)
conj_and(glanced-9, bent-14)
poss(oars-17, his-16)
prep_to(bent-14, oars-17)

(ROOT
  (S
    (NP (DT The) (NN boat))
    (VP (VBD flew)
      (PP (IN over)
        (NP (DT the) (JJ rippling) (NN water))))
    (. .)))

det(boat-2, The-1)
nsubj(flew-3, boat-2)
root(ROOT-0, flew-3)
det(water-7, the-5)
amod(water-7, rippling-6)
prep_over(flew-3, water-7)

(ROOT
  (S
    (NP
      (NP (NN Man))
      (CC and)
      (NP (NN boat)
        (CC and)
        (NN river)))
    (VP (VBD were)
      (ADJP (RB awake)))
    (. .)))

nsubj(awake-7, Man-1)
conj_and(Man-1, boat-3)
nsubj(awake-7, boat-3)
conj_and(Man-1, river-5)
conj_and(boat-3, river-5)
cop(awake-7, were-6)
root(ROOT-0, awake-7)

(ROOT
  (S
    (ADVP
      (NP (DT The) (JJ same) (NN instant))
      (RB almost))
    (, ,)
    (NP (NNP North) (NNP Wind))
    (VP (VBN perched)
      (ADVP (RB again))
      (PP (IN upon)
        (NP (DT the) (NN river) (NN wall))))
    (. .)))

det(instant-3, The-1)
amod(instant-3, same-2)
npadvmod(almost-4, instant-3)
advmod(perched-8, almost-4)
nn(Wind-7, North-6)
nsubj(perched-8, Wind-7)
root(ROOT-0, perched-8)
advmod(perched-8, again-9)
det(wall-13, the-11)
nn(wall-13, river-12)
prep_upon(perched-8, wall-13)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB do)
        (NP (DT that))))
    (. ?) ('' '')))

advmod(do-5, How-2)
aux(do-5, did-3)
nsubj(do-5, you-4)
root(ROOT-0, do-5)
dobj(do-5, that-6)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD blew)
        (PP (IN in)
          (NP (PRP$ his) (NN face)))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP North) (NNP Wind))
    (. .)))

nsubj(blew-3, I-2)
ccomp(answered-9, blew-3)
poss(face-6, his-5)
prep_in(blew-3, face-6)
root(ROOT-0, answered-9)
nn(Wind-11, North-10)
nsubj(answered-9, Wind-11)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT that))
              (VP (MD could)
                (VP (VB do)
                  (NP (PRP it)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(see-5, I-2)
aux(see-5, do-3)
neg(see-5, n't-4)
ccomp(said-13, see-5)
advmod(do-9, how-6)
nsubj(do-9, that-7)
aux(do-9, could-8)
ccomp(see-5, do-9)
dobj(do-9, it-10)
root(ROOT-0, said-13)
nsubj(said-13, Diamond-14)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP daresay) (RB not))
    (. .)))

nsubj(daresay-3, I-2)
root(ROOT-0, daresay-3)
neg(daresay-3, not-4)

(ROOT
  (S (CC And)
    (ADVP (RB therefore))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB say)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB believe)
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (MD could))))))))))
    (. .) ('' '')))

cc(say-5, And-1)
advmod(say-5, therefore-2)
nsubj(say-5, you-3)
aux(say-5, will-4)
root(ROOT-0, say-5)
nsubj(believe-9, you-6)
aux(believe-9, do-7)
neg(believe-9, n't-8)
ccomp(say-5, believe-9)
nsubj(could-11, it-10)
ccomp(believe-9, could-11)

(ROOT
  (S (`` ``)
    (INTJ (UH No) (, ,) (UH no))
    (, ,)
    (NP (NNP dear) (NNP North))
    (VP (VBZ Wind))
    (. .)))

discourse(Wind-8, No-2)
dep(No-2, no-4)
nn(North-7, dear-6)
nsubj(Wind-8, North-7)
root(ROOT-0, Wind-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (S
        (NP (PRP you))
        (ADVP (RB too) (RB well) (RB not))
        (VP (TO to)
          (VP (VB believe)
            (NP (PRP you))))))
    (. .) ('' '')))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
dobj(know-2, you-3)
nsubj(believe-8, you-3)
advmod(not-6, too-4)
advmod(not-6, well-5)
neg(believe-8, not-6)
aux(believe-8, to-7)
xcomp(know-2, believe-8)
dobj(believe-8, you-9)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP I))
      (VP (VBD blew)
        (PP (IN in)
          (NP (PRP$ his) (NN face)))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD woke)
        (NP (PRP him))
        (PRT (RP up))))
    (. .) ('' '')))

discourse(blew-5, Well-2)
nsubj(blew-5, I-4)
root(ROOT-0, blew-5)
poss(face-8, his-7)
prep_in(blew-5, face-8)
nsubj(woke-12, that-11)
conj_and(blew-5, woke-12)
dobj(woke-12, him-13)
prt(woke-12, up-14)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHNP (WP what))
    (SQ (VBD was)
      (NP
        (NP (DT the) (NN good))
        (PP (IN of)
          (NP (PRP it)))))
    (. ?) ('' '')))

cc(what-3, But-2)
root(ROOT-0, what-3)
cop(what-3, was-4)
det(good-6, the-5)
nsubj(what-3, good-6)
prep_of(good-6, it-8)

(ROOT
  (FRAG (`` ``)
    (INTJ (WRB Why))
    (. !)))

root(ROOT-0, Why-2)

(ROOT
  (S
    (S
      (VP (VB do) (RB n't)))
    (NP (PRP you))
    (VP (VBP see))
    (. ?)))

dep(see-4, do-1)
neg(do-1, n't-2)
nsubj(see-4, you-3)
root(ROOT-0, see-4)

(ROOT
  (S
    (VP (VB Look)
      (PP (IN at)
        (NP
          (NP (PRP him))
          (: --)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP he))
              (VP (VBZ is)
                (VP (VBG pulling))))))))
    (. .)))

root(ROOT-0, Look-1)
prep_at(Look-1, him-3)
advmod(pulling-8, how-5)
nsubj(pulling-8, he-6)
aux(pulling-8, is-7)
dep(him-3, pulling-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD blew)
      (NP (DT the) (NN mist))
      (PRT (RP out))
      (PP (IN of)
        (NP (PRP him))))
    (. .) ('' '')))

nsubj(blew-2, I-1)
root(ROOT-0, blew-2)
det(mist-4, the-3)
dobj(blew-2, mist-4)
prep_out_of(blew-2, him-7)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBD was)
      (NP (DT that)))
    (. ?) ('' '')))

advmod(was-3, How-2)
root(ROOT-0, was-3)
nsubj(was-3, that-4)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHADJP (RB just) (WP what))
        (S
          (NP (PRP I))
          (VP (MD can) (RB not)
            (VP (VB tell)
              (NP (PRP you)))))))
    (. .) ('' '')))

nsubj(is-3, That-2)
root(ROOT-0, is-3)
advmod(what-5, just-4)
dep(tell-9, what-5)
nsubj(tell-9, I-6)
aux(tell-9, can-7)
neg(tell-9, not-8)
ccomp(is-3, tell-9)
dobj(tell-9, you-10)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (VBD did)
      (NP (PRP it)))
    (. .) ('' '')))

cc(did-4, But-2)
nsubj(did-4, you-3)
root(ROOT-0, did-4)
dobj(did-4, it-5)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB do)
            (NP
              (QP (CD ten) (CD thousand))
              (NNS things))
            (PP (IN without)
              (S
                (VP (VBG being)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB tell)
                          (NP (WRB how)))))))))))))
    (. .) ('' '')))

nsubj(have-2, I-1)
nsubj(do-4, I-1)
root(ROOT-0, have-2)
aux(do-4, to-3)
xcomp(have-2, do-4)
number(thousand-6, ten-5)
num(things-7, thousand-6)
dobj(do-4, things-7)
cop(able-10, being-9)
prepc_without(do-4, able-10)
aux(tell-12, to-11)
xcomp(able-10, tell-12)
dobj(tell-12, how-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB like)
          (NP (DT that)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(like-5, I-2)
aux(like-5, do-3)
neg(like-5, n't-4)
ccomp(said-9, like-5)
dobj(like-5, that-6)
root(ROOT-0, said-9)
nsubj(said-9, Diamond-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (VP (VBG staring)
        (PP (IN after)
          (NP (DT the) (NN boat)))))
    (. .)))

nsubj(staring-3, He-1)
aux(staring-3, was-2)
root(ROOT-0, staring-3)
det(boat-6, the-5)
prep_after(staring-3, boat-6)

(ROOT
  (S
    (S
      (VP (VBG Hearing)
        (NP (DT no) (NN answer))))
    (, ,)
    (NP (PRP he))
    (VP (VBD looked)
      (PRT (RP down))
      (PP (TO to)
        (NP (DT the) (NN wall))))
    (. .)))

vmod(looked-6, Hearing-1)
neg(answer-3, no-2)
dobj(Hearing-1, answer-3)
nsubj(looked-6, he-5)
root(ROOT-0, looked-6)
prt(looked-6, down-7)
det(wall-10, the-9)
prep_to(looked-6, wall-10)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP (VBD was)
      (VP (VBN gone)))
    (. .)))

nn(Wind-2, North-1)
nsubjpass(gone-4, Wind-2)
auxpass(gone-4, was-3)
root(ROOT-0, gone-4)

(ROOT
  (SINV
    (ADVP (RB Away)
      (PP (IN across)
        (NP (DT the) (NN river))))
    (VP (VBD went))
    (NP
      (NP (DT a) (JJ long) (NN ripple))
      (: --)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNS sailors))
          (VP (VBP call)
            (NP
              (NP (DT a) (NN cat) (POS 's))
              (NN paw))))))
    (. .)))

advmod(went-5, Away-1)
det(river-4, the-3)
prep_across(Away-1, river-4)
root(ROOT-0, went-5)
det(ripple-8, a-6)
amod(ripple-8, long-7)
nsubj(went-5, ripple-8)
dobj(call-12, ripple-8)
nsubj(call-12, sailors-11)
rcmod(ripple-8, call-12)
det(cat-14, a-13)
poss(paw-16, cat-14)
dobj(call-12, paw-16)

(ROOT
  (S
    (NP
      (NP (DT The) (NN man))
      (PP (IN in)
        (NP (DT the) (NN boat))))
    (VP (VBD was)
      (VP (VBG putting)
        (PRT (RP up))
        (NP (DT a) (NN sail))))
    (. .)))

det(man-2, The-1)
nsubj(putting-7, man-2)
det(boat-5, the-4)
prep_in(man-2, boat-5)
aux(putting-7, was-6)
root(ROOT-0, putting-7)
prt(putting-7, up-8)
det(sail-10, a-9)
dobj(putting-7, sail-10)

(ROOT
  (S
    (S
      (NP (DT The) (NN moon))
      (VP (VBD was)
        (VP (VBG coming)
          (PP (TO to)
            (NP (PRP herself)))
          (PP (IN on)
            (NP
              (NP (DT the) (NN edge))
              (PP (IN of)
                (NP (DT a) (JJ great) (NN cloud))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN sail))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB shine)
              (ADJP (JJ white)))))))
    (. .)))

det(moon-2, The-1)
nsubj(coming-4, moon-2)
aux(coming-4, was-3)
root(ROOT-0, coming-4)
prep_to(coming-4, herself-6)
det(edge-9, the-8)
prep_on(coming-4, edge-9)
det(cloud-13, a-11)
amod(cloud-13, great-12)
prep_of(edge-9, cloud-13)
det(sail-17, the-16)
nsubj(began-18, sail-17)
nsubj(shine-20, sail-17)
conj_and(coming-4, began-18)
aux(shine-20, to-19)
xcomp(began-18, shine-20)
acomp(shine-20, white-21)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP
      (VP (VBD rubbed)
        (NP (PRP$ his) (NNS eyes)))
      (, ,)
      (CC and)
      (VP (VBD wondered)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADVP (DT all) (IN about)))))))
    (. .)))

nsubj(rubbed-2, Diamond-1)
nsubj(wondered-7, Diamond-1)
root(ROOT-0, rubbed-2)
poss(eyes-4, his-3)
dobj(rubbed-2, eyes-4)
conj_and(rubbed-2, wondered-7)
dobj(was-10, what-8)
nsubj(was-10, it-9)
ccomp(wondered-7, was-10)
dep(about-12, all-11)
advmod(was-10, about-12)

(ROOT
  (S
    (S
      (NP (NNS Things))
      (VP (VBD seemed)
        (SBAR
          (S
            (S
              (VP (VBG going)
                (PRT (RP on))
                (PP (IN around)
                  (NP (PRP him)))
                (, ,)))
            (CC and)
            (S (RB all)
              (VP (TO to)
                (VP (VB understand)
                  (NP (DT each) (JJ other)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD could)
        (VP (VB make)
          (NP
            (NP (NN nothing))
            (PP (IN of)
              (NP (PRP it)))))))
    (. .)))

nsubj(seemed-2, Things-1)
root(ROOT-0, seemed-2)
dep(seemed-2, going-3)
prt(going-3, on-4)
prep_around(going-3, him-6)
advmod(understand-11, all-9)
aux(understand-11, to-10)
dep(seemed-2, understand-11)
conj_and(going-3, understand-11)
det(other-13, each-12)
dobj(understand-11, other-13)
nsubj(make-18, he-16)
aux(make-18, could-17)
conj_but(seemed-2, make-18)
dobj(make-18, nothing-19)
prep_of(nothing-19, it-21)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP
      (VP (VBD put)
        (NP (PRP$ his) (NNS hands))
        (PP (IN in)
          (NP (PRP$ his) (NNS pockets))))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PRT (RP in))
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (PRP$ his) (NN tea)))))))
    (. .)))

dep(put-3, So-1)
nsubj(put-3, he-2)
nsubj(went-11, he-2)
nsubj(have-14, he-2)
root(ROOT-0, put-3)
poss(hands-5, his-4)
dobj(put-3, hands-5)
poss(pockets-8, his-7)
prep_in(put-3, pockets-8)
conj_and(put-3, went-11)
prt(went-11, in-12)
aux(have-14, to-13)
xcomp(went-11, have-14)
poss(tea-16, his-15)
dobj(have-14, tea-16)

(ROOT
  (S
    (NP (DT The) (NN night))
    (VP (VBD was)
      (ADJP (RB very) (JJ hot))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (DT the) (NN wind))
          (VP (VBD had)
            (VP (VBN fallen)
              (ADVP (RB again)))))))
    (. .)))

det(night-2, The-1)
nsubj(hot-5, night-2)
cop(hot-5, was-3)
advmod(hot-5, very-4)
root(ROOT-0, hot-5)
mark(fallen-11, for-7)
det(wind-9, the-8)
nsubj(fallen-11, wind-9)
aux(fallen-11, had-10)
advcl(hot-5, fallen-11)
advmod(fallen-11, again-12)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP do) (RB n't)
        (VP (VB seem)
          (NP
            (ADJP (RB very) (RB well) (JJ to-night) (, ,))
            (NNS Diamond)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN mother))
    (. .)))

nsubj(seem-5, You-2)
aux(seem-5, do-3)
neg(seem-5, n't-4)
ccomp(said-13, seem-5)
advmod(to-night-8, very-6)
advmod(to-night-8, well-7)
amod(Diamond-10, to-night-8)
xcomp(seem-5, Diamond-10)
root(ROOT-0, said-13)
poss(mother-15, his-14)
nsubj(said-13, mother-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADVP (RB quite) (RB well))
        (, ,)
        (NP (NN mother))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD was)
            (VP
              (ADVP (RB only))
              (VBN puzzled))))))
    (. .)))

nsubj(mother-7, I-2)
cop(mother-7, am-3)
advmod(well-5, quite-4)
advmod(mother-7, well-5)
ccomp(returned-10, mother-7)
root(ROOT-0, returned-10)
nsubj(returned-10, Diamond-11)
nsubjpass(puzzled-16, Diamond-11)
auxpass(puzzled-16, was-14)
advmod(puzzled-16, only-15)
rcmod(Diamond-11, puzzled-16)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD had)
              (ADVP (RBR better))
              (VP (VB go)
                (PP (TO to)
                  (NP (NN bed)))))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD added))
    (. .)))

nsubj(think-3, I-2)
ccomp(added-13, think-3)
nsubj(go-7, you-4)
aux(go-7, had-5)
advmod(go-7, better-6)
ccomp(think-3, go-7)
prep_to(go-7, bed-9)
nsubj(added-13, she-12)
root(ROOT-0, added-13)

(ROOT
  (S (`` ``)
    (ADVP
      (NP (NNP Very))
      (RB well))
    (, ,)
    (NP (NN mother))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD answered))
    (. .)))

dep(well-3, Very-2)
advmod(answered-9, well-3)
nsubj(answered-9, mother-5)
nsubj(answered-9, he-8)
root(ROOT-0, answered-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD stopped)
      (PP (IN for)
        (NP (CD one) (NN moment)))
      (S
        (VP (TO to)
          (VP (VB look)
            (PRT (RP out))
            (PP (IN of)
              (NP (DT the) (NN window)))))))
    (. .)))

nsubj(stopped-2, He-1)
nsubj(look-7, He-1)
root(ROOT-0, stopped-2)
num(moment-5, one-4)
prep_for(stopped-2, moment-5)
aux(look-7, to-6)
xcomp(stopped-2, look-7)
det(window-11, the-10)
prep_out_of(look-7, window-11)

(ROOT
  (S
    (PP (IN Above)
      (NP (DT the) (NN moon)))
    (NP (DT the) (NNS clouds))
    (VP (VBD were)
      (VP (VBG going)
        (NP (JJ different) (NNS ways))))
    (. .)))

det(moon-3, the-2)
prep_above(going-7, moon-3)
det(clouds-5, the-4)
nsubj(going-7, clouds-5)
aux(going-7, were-6)
root(ROOT-0, going-7)
amod(ways-9, different-8)
dobj(going-7, ways-9)

(ROOT
  (S
    (S
      (ADVP (JJ Somehow)
        (CC or)
        (JJ other))
      (NP (DT this))
      (VP (VBD troubled)
        (NP (PRP him))))
    (, ,)
    (CC but)
    (, ,)
    (S
      (ADVP (RB notwithstanding))
      (, ,)
      (NP (PRP he))
      (VP (VBD was)
        (ADVP (RB soon) (RB fast))
        (ADJP (RB asleep))))
    (. .)))

advmod(troubled-5, Somehow-1)
conj_or(Somehow-1, other-3)
advmod(troubled-5, other-3)
nsubj(troubled-5, this-4)
root(ROOT-0, troubled-5)
dobj(troubled-5, him-6)
advmod(asleep-16, notwithstanding-10)
nsubj(asleep-16, he-12)
cop(asleep-16, was-13)
advmod(fast-15, soon-14)
advmod(asleep-16, fast-15)
conj_but(troubled-5, asleep-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD woke)
      (PP (IN in)
        (NP
          (NP (DT the) (NN middle))
          (PP (IN of)
            (NP
              (NP (DT the) (NN night))
              (CC and)
              (NP (DT the) (NNS darkness)))))))
    (. .)))

nsubj(woke-2, He-1)
root(ROOT-0, woke-2)
det(middle-5, the-4)
prep_in(woke-2, middle-5)
det(night-8, the-7)
prep_of(middle-5, night-8)
det(darkness-11, the-10)
prep_of(middle-5, darkness-11)
conj_and(night-8, darkness-11)

(ROOT
  (S
    (NP (DT A) (JJ terrible) (NN noise))
    (VP (VBD was)
      (VP (VBG rumbling)
        (ADVP (RB overhead))
        (, ,)
        (PP (IN like)
          (NP
            (NP (DT the) (VBG rolling) (NN beat))
            (PP (IN of)
              (NP
                (NP (JJ great) (NNS drums))
                (VP (VBG echoing)
                  (PP (IN through)
                    (NP (DT a) (JJ brazen) (NN vault))))))))))
    (. .)))

det(noise-3, A-1)
amod(noise-3, terrible-2)
nsubj(rumbling-5, noise-3)
aux(rumbling-5, was-4)
root(ROOT-0, rumbling-5)
advmod(rumbling-5, overhead-6)
det(beat-11, the-9)
amod(beat-11, rolling-10)
prep_like(rumbling-5, beat-11)
amod(drums-14, great-13)
prep_of(beat-11, drums-14)
vmod(drums-14, echoing-15)
det(vault-19, a-17)
amod(vault-19, brazen-18)
prep_through(echoing-15, vault-19)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN roof))
        (PP (IN of)
          (NP
            (NP (DT the) (NN loft))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (PRP he))
                (VP (VBD lay)))))))
      (VP (VBD had)
        (NP (DT no) (NN ceiling))))
    (: ;)
    (S
      (NP (RB only) (DT the) (NNS tiles))
      (VP (VBD were)
        (PP (IN between)
          (NP
            (NP (PRP him))
            (CC and)
            (NP (DT the) (NN sky))))))
    (. .)))

det(roof-2, The-1)
nsubj(had-10, roof-2)
det(loft-5, the-4)
prep_of(roof-2, loft-5)
prep_in(lay-9, loft-5)
nsubj(lay-9, he-8)
rcmod(loft-5, lay-9)
root(ROOT-0, had-10)
neg(ceiling-12, no-11)
dobj(had-10, ceiling-12)
advmod(tiles-16, only-14)
det(tiles-16, the-15)
nsubj(were-17, tiles-16)
parataxis(had-10, were-17)
prep_between(were-17, him-19)
det(sky-22, the-21)
prep_between(were-17, sky-22)
conj_and(him-19, sky-22)

(ROOT
  (S
    (PP (IN For)
      (NP (DT a) (NN while)))
    (NP (PRP he))
    (VP (MD could) (RB not)
      (VP (VB come)
        (NP (RB quite) (JJ awake))
        (, ,)
        (PP (IN for)
          (NP
            (NP (DT the) (NN noise))
            (VP (VBN kept)
              (S
                (VP (VBG beating)
                  (NP (PRP him))
                  (PRT (RP down)))))))
        (, ,)
        (SBAR (RB so) (IN that)
          (S
            (NP (PRP$ his) (NN heart))
            (VP (VBD was)
              (VP (VBN troubled)
                (CC and)
                (VBN fluttered)
                (ADVP (RB painfully))))))))
    (. .)))

det(while-3, a-2)
prep_for(come-7, while-3)
nsubj(come-7, he-4)
aux(come-7, could-5)
neg(come-7, not-6)
root(ROOT-0, come-7)
advmod(awake-9, quite-8)
dobj(come-7, awake-9)
det(noise-13, the-12)
prep_for(come-7, noise-13)
vmod(noise-13, kept-14)
xcomp(kept-14, beating-15)
dobj(beating-15, him-16)
prt(beating-15, down-17)
advmod(troubled-24, so-19)
mark(troubled-24, that-20)
poss(heart-22, his-21)
nsubjpass(troubled-24, heart-22)
nsubjpass(fluttered-26, heart-22)
auxpass(troubled-24, was-23)
advcl(come-7, troubled-24)
advcl(come-7, fluttered-26)
conj_and(troubled-24, fluttered-26)
advmod(troubled-24, painfully-27)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ second) (NN peal))
      (PP (IN of)
        (NP (NN thunder))))
    (VP
      (VP (VBP burst)
        (PRT (RP over))
        (NP (PRP$ his) (NN head)))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB almost))
        (VBD choked)
        (NP (PRP him))
        (PP (IN with)
          (NP (NN fear)))))
    (. .)))

det(peal-3, A-1)
amod(peal-3, second-2)
nsubj(burst-6, peal-3)
nsubj(choked-13, peal-3)
prep_of(peal-3, thunder-5)
root(ROOT-0, burst-6)
prt(burst-6, over-7)
poss(head-9, his-8)
dobj(burst-6, head-9)
advmod(choked-13, almost-12)
conj_and(burst-6, choked-13)
dobj(choked-13, him-14)
prep_with(choked-13, fear-16)

(ROOT
  (SINV (CC Nor)
    (VBD did)
    (NP (PRP he))
    (VP (VB recover)
      (SBAR (IN until)
        (S
          (NP
            (NP (DT the) (JJ great) (NN blast))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD followed)))))
          (, ,)
          (S
            (VP (VBG having)
              (VP (VBN torn)
                (NP (DT some) (NNS tiles))
                (PP (IN off)
                  (NP (DT the) (NN roof))))))
          (, ,)
          (VP (VBD sent)
            (NP
              (NP (DT a) (NN spout))
              (PP (IN of)
                (NP (NN wind))))
            (PP
              (PP
                (ADVP (RB down))
                (IN into)
                (NP (PRP$ his) (NN bed)))
              (CC and)
              (PP (IN over)
                (NP
                  (NP (PRP$ his) (NN face))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP
                        (VP (VBD brought)
                          (S
                            (NP (PRP him))
                            (ADVP (JJ wide))
                            (ADJP (RB awake))))
                        (, ,)
                        (CC and)
                        (VP (VBD gave)
                          (S
                            (NP (PRP him))
                            (VP (VB back)
                              (NP (PRP$ his) (NN courage)))))))))))))))
    (. .)))

cc(recover-4, Nor-1)
aux(recover-4, did-2)
nsubj(recover-4, he-3)
root(ROOT-0, recover-4)
mark(sent-20, until-5)
det(blast-8, the-6)
amod(blast-8, great-7)
nsubj(followed-10, blast-8)
nsubj(sent-20, blast-8)
nsubj(sent-20', blast-8)
rcmod(blast-8, followed-10)
aux(torn-13, having-12)
vmod(sent-20, torn-13)
det(tiles-15, some-14)
dobj(torn-13, tiles-15)
det(roof-18, the-17)
prep_off(torn-13, roof-18)
advcl(recover-4, sent-20)
advcl(recover-4, sent-20')
conj_and(sent-20, sent-20')
det(spout-22, a-21)
dobj(sent-20, spout-22)
prep_of(spout-22, wind-24)
advmod(sent-20, down-25)
poss(bed-28, his-27)
prep_into(sent-20, bed-28)
poss(face-32, his-31)
prep_over(sent-20', face-32)
nsubj(brought-35, face-32)
nsubj(gave-41, face-32)
rcmod(face-32, brought-35)
dep(awake-38, him-36)
advmod(awake-38, wide-37)
dep(brought-35, awake-38)
rcmod(face-32, gave-41)
conj_and(brought-35, gave-41)
nsubj(back-43, him-42)
ccomp(gave-41, back-43)
poss(courage-45, his-44)
dobj(back-43, courage-45)

(ROOT
  (S
    (NP (DT The) (JJ same) (NN moment))
    (NP (PRP he))
    (VP (VBD heard)
      (NP (DT a)
        (ADJP (RB mighty) (RB yet))
        (JJ musical) (NN voice))
      (S
        (VP (VBG calling)
          (NP (PRP him)))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, same-2)
nsubj(heard-5, moment-3)
nsubj(heard-5, he-4)
root(ROOT-0, heard-5)
det(voice-10, a-6)
advmod(yet-8, mighty-7)
amod(voice-10, yet-8)
amod(voice-10, musical-9)
dobj(heard-5, voice-10)
xcomp(heard-5, calling-11)
dobj(calling-11, him-12)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Come)
        (PRT (RP up))))
    (, ,)
    (NP (NNP Diamond))
    (, ,) ('' '')
    (NP (PRP it))
    (VP (VBD said))
    (. .)))

ccomp(said-9, Come-2)
prt(Come-2, up-3)
nsubj(said-9, Diamond-5)
nsubj(said-9, it-8)
root(ROOT-0, said-9)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's) (RB all)
      (ADJP (JJ ready)))
    (. .)))

nsubj(ready-5, It-2)
cop(ready-5, 's-3)
advmod(ready-5, all-4)
root(ROOT-0, ready-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG waiting)
        (PP (IN for)
          (NP (PRP you)))))
    (. .) ('' '')))

nsubj(waiting-3, I-1)
aux(waiting-3, 'm-2)
root(ROOT-0, waiting-3)
prep_for(waiting-3, you-5)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD looked)
        (PRT (RP out))
        (PP (IN of)
          (NP (DT the) (NN bed))))
      (, ,)
      (CC and)
      (VP (VBD saw)
        (SBAR
          (S
            (NP
              (NP (DT a) (JJ gigantic) (, ,)
                (ADJP
                  (ADJP (JJ powerful))
                  (, ,)
                  (CC but)
                  (ADJP (RBS most) (JJ lovely)))
                (NN arm))
              (PRN (: --)
                (PP (IN with)
                  (NP
                    (NP (DT a) (NN hand))
                    (SBAR
                      (WHNP (WP$ whose) (NNS fingers))
                      (S
                        (VP (VBD were)
                          (ADVP (NN nothing))
                          (NP (DT the) (JJR less) (NN ladylike))
                          (SBAR (IN that)
                            (S
                              (NP (PRP they))
                              (VP
                                (VP (MD could)
                                  (VP (VB have)
                                    (VP (VBN strangled)
                                      (NP (DT a) (NN boa-constrictor)))))
                                (, ,)
                                (CC or)
                                (VP (VBD choked)
                                  (NP (DT a) (NNS tigress))
                                  (PP (IN off)
                                    (NP (PRP$ its) (NN prey))))))))))))
                (: --)))
            (VP (VBN stretched)
              (PRT (RP down))
              (PP (IN through)
                (NP
                  (NP (DT a) (JJ big) (NN hole))
                  (PP (IN in)
                    (NP (DT the) (NN roof))))))))))
    (. .)))

nsubj(looked-2, He-1)
nsubj(saw-9, He-1)
root(ROOT-0, looked-2)
det(bed-6, the-5)
prep_out_of(looked-2, bed-6)
conj_and(looked-2, saw-9)
det(arm-18, a-10)
amod(arm-18, gigantic-11)
amod(arm-18, powerful-13)
advmod(lovely-17, most-16)
conj_but(powerful-13, lovely-17)
amod(arm-18, lovely-17)
nsubj(stretched-46, arm-18)
det(hand-22, a-21)
prep_with(arm-18, hand-22)
poss(fingers-24, hand-22)
nsubj(ladylike-29, fingers-24)
cop(ladylike-29, were-25)
advmod(ladylike-29, nothing-26)
det(ladylike-29, the-27)
amod(ladylike-29, less-28)
rcmod(hand-22, ladylike-29)
mark(strangled-34, that-30)
nsubj(strangled-34, they-31)
nsubj(choked-39, they-31)
aux(strangled-34, could-32)
aux(strangled-34, have-33)
ccomp(ladylike-29, strangled-34)
det(boa-constrictor-36, a-35)
dobj(strangled-34, boa-constrictor-36)
ccomp(ladylike-29, choked-39)
conj_or(strangled-34, choked-39)
det(tigress-41, a-40)
dobj(choked-39, tigress-41)
poss(prey-44, its-43)
prep_off(choked-39, prey-44)
ccomp(saw-9, stretched-46)
prt(stretched-46, down-47)
det(hole-51, a-49)
amod(hole-51, big-50)
prep_through(stretched-46, hole-51)
det(roof-54, the-53)
prep_in(hole-51, roof-54)

(ROOT
  (S
    (PP (IN Without)
      (NP
        (NP (DT a) (NN moment) (POS 's))
        (NN hesitation)))
    (NP (PRP he))
    (VP
      (VP (VBD reached)
        (PRT (RP out))
        (NP (PRP$ his) (JJ tiny) (NN one)))
      (, ,)
      (CC and)
      (VP (VBD laid)
        (NP (PRP it))
        (PP (IN in)
          (NP (DT the) (JJ grand) (NN palm)))
        (PP (IN before)
          (NP (PRP him)))))
    (. .)))

det(moment-3, a-2)
poss(hesitation-5, moment-3)
prep_without(reached-7, hesitation-5)
nsubj(reached-7, he-6)
nsubj(laid-14, he-6)
root(ROOT-0, reached-7)
prt(reached-7, out-8)
poss(one-11, his-9)
amod(one-11, tiny-10)
dobj(reached-7, one-11)
conj_and(reached-7, laid-14)
dobj(laid-14, it-15)
det(palm-19, the-17)
amod(palm-19, grand-18)
prep_in(laid-14, palm-19)
prep_before(laid-14, him-21)

(ROOT
  (NP (NNP CHAPTER) (NNP VI) (. .)))

nn(VI-2, CHAPTER-1)
root(ROOT-0, VI-2)

(ROOT
  (S
    (S
      (NP
        (NP (NNP OUT))
        (PP (IN IN)
          (NP (DT THE) (NNP STORM) (NNP THE) (NN hand))))
      (VP (VBD felt)
        (NP (PRP$ its) (NN way))
        (PP (IN up)
          (NP (PRP$ his) (NN arm)))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (S
        (VP (VBG grasping)
          (NP (PRP it))
          (ADVP (RB gently)
            (CC and)
            (RB strongly))
          (PP (IN above)
            (NP (DT the) (NN elbow)))))
      (, ,)
      (S
        (VP (VBN lifted)
          (NP
            (NP (NNP Diamond))
            (PP (IN from)
              (NP (DT the) (NN bed)))))))
    (. .)))

nsubj(felt-7, OUT-1)
nsubj(grasping-16, OUT-1)
det(hand-6, THE-3)
nn(hand-6, STORM-4)
nn(hand-6, THE-5)
prep_in(OUT-1, hand-6)
root(ROOT-0, felt-7)
poss(way-9, its-8)
dobj(felt-7, way-9)
poss(arm-12, his-11)
prep_up(felt-7, arm-12)
conj_and(felt-7, grasping-16)
dobj(grasping-16, it-17)
advmod(grasping-16, gently-18)
advmod(grasping-16, strongly-20)
conj_and(gently-18, strongly-20)
det(elbow-23, the-22)
prep_above(grasping-16, elbow-23)
parataxis(grasping-16, lifted-25)
dobj(lifted-25, Diamond-26)
det(bed-29, the-28)
prep_from(Diamond-26, bed-29)

(ROOT
  (S
    (NP
      (NP (DT The) (NN moment))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was)
            (PP (IN through)
              (NP
                (NP (DT the) (NN hole))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN roof))
                    (, ,)
                    (NP
                      (NP (PDT all) (DT the) (NNS winds))
                      (PP (IN of)
                        (NP (NN heaven))))))))))))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP
            (VP (VB lay)
              (NP (NN hold))
              (PP (IN upon)
                (NP (PRP him))))
            (, ,)
            (CC and)
            (VP
              (VP (VB buffet)
                (NP (PRP him))
                (ADVP (RB hither)))
              (CC and)
              (VP (VB thither)))))))
    (. .)))

det(moment-2, The-1)
nsubj(seemed-17, moment-2)
nsubj(lay-19, moment-2)
nsubj(buffet-25, moment-2)
nsubj(was-4, he-3)
rcmod(moment-2, was-4)
det(hole-7, the-6)
prep_through(was-4, hole-7)
det(roof-10, the-9)
prep_in(hole-7, roof-10)
predet(winds-14, all-12)
det(winds-14, the-13)
appos(roof-10, winds-14)
prep_of(winds-14, heaven-16)
root(ROOT-0, seemed-17)
aux(lay-19, to-18)
xcomp(seemed-17, lay-19)
dobj(lay-19, hold-20)
prep_upon(lay-19, him-22)
xcomp(seemed-17, buffet-25)
conj_and(lay-19, buffet-25)
dobj(buffet-25, him-26)
advmod(buffet-25, hither-27)
conj_and(lay-19, thither-29)
conj_and(buffet-25, thither-29)

(ROOT
  (S
    (NP (PRP$ His) (NN hair))
    (VP (VBD blew)
      (NP
        (NP
          (NP (CD one) (NN way))
          (, ,)
          (NP
            (NP (PRP$ his) (NN night-gown))
            (NP (DT another))))
        (, ,)
        (NP
          (NP (PRP$ his) (NNS legs))
          (VP (VBN threatened)
            (S
              (VP (TO to)
                (VP (VB float)
                  (PP (IN from)
                    (PP (IN under)
                      (NP (PRP him)))))))))
        (, ,)
        (CC and)
        (NP (PRP$ his) (NN head)
          (S
            (VP (TO to)
              (VP (VB grow)
                (NP (NNS dizzy))
                (PP (IN with)
                  (NP
                    (NP (DT the) (NNS swiftness))
                    (PP (IN of)
                      (NP (DT the) (JJ invisible) (NN assailant)))))))))))
    (. .)))

poss(hair-2, His-1)
nsubj(blew-3, hair-2)
root(ROOT-0, blew-3)
num(way-5, one-4)
dobj(blew-3, way-5)
poss(night-gown-8, his-7)
appos(way-5, night-gown-8)
dep(night-gown-8, another-9)
poss(legs-12, his-11)
dobj(blew-3, legs-12)
conj_and(way-5, legs-12)
vmod(legs-12, threatened-13)
aux(float-15, to-14)
xcomp(threatened-13, float-15)
prep(float-15, from-16)
pcomp(from-16, under-17)
pobj(under-17, him-18)
poss(head-22, his-21)
dobj(blew-3, head-22)
conj_and(way-5, head-22)
aux(grow-24, to-23)
vmod(head-22, grow-24)
dobj(grow-24, dizzy-25)
det(swiftness-28, the-27)
prep_with(grow-24, swiftness-28)
det(assailant-32, the-30)
amod(assailant-32, invisible-31)
prep_of(swiftness-28, assailant-32)

(ROOT
  (S
    (S
      (NP (VBG Cowering))
      (, ,)
      (NP (PRP he))
      (VP (VBN clung)
        (PP (IN with)
          (NP (DT the) (JJ other) (NN hand)))
        (PP (TO to)
          (NP
            (NP (DT the) (JJ huge) (NN hand))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD held)
                  (NP (PRP$ his) (NN arm)))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN fear))
      (VP (VBD invaded)
        (NP (PRP$ his) (NN heart))))
    (. .)))

nsubj(clung-4, Cowering-1)
nsubj(clung-4, he-3)
root(ROOT-0, clung-4)
det(hand-8, the-6)
amod(hand-8, other-7)
prep_with(clung-4, hand-8)
det(hand-12, the-10)
amod(hand-12, huge-11)
prep_to(clung-4, hand-12)
nsubj(held-14, hand-12)
rcmod(hand-12, held-14)
poss(arm-16, his-15)
dobj(held-14, arm-16)
nsubj(invaded-20, fear-19)
conj_and(clung-4, invaded-20)
poss(heart-22, his-21)
dobj(invaded-20, heart-22)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (NP (NNP North) (NNP Wind))
    (. !) ('' '')))

discourse(Wind-5, Oh-2)
nn(Wind-5, North-4)
root(ROOT-0, Wind-5)

(ROOT
  (S
    (S
      (NP (PRP he))
      (VP (VBD murmured)))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NNS words))
      (VP (VBN vanished)
        (PP (IN from)
          (NP (PRP$ his) (NNS lips)))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN seen)
                (NP (DT the) (NNS soap-bubbles))
                (SBAR (IN that)
                  (S
                    (NP (NN burst))
                    (ADVP (RB too) (RB soon))
                    (VP (VBP vanish)
                      (PP (IN from)
                        (NP
                          (NP (DT the) (NN mouth))
                          (PP (IN of)
                            (NP (PRP$ his) (NN pipe))))))))))))))
    (. .)))

nsubj(murmured-2, he-1)
root(ROOT-0, murmured-2)
det(words-6, the-5)
nsubj(vanished-7, words-6)
conj_but(murmured-2, vanished-7)
poss(lips-10, his-9)
prep_from(vanished-7, lips-10)
mark(seen-14, as-11)
nsubj(seen-14, he-12)
aux(seen-14, had-13)
advcl(vanished-7, seen-14)
det(soap-bubbles-16, the-15)
dobj(seen-14, soap-bubbles-16)
mark(vanish-21, that-17)
nsubj(vanish-21, burst-18)
advmod(soon-20, too-19)
advmod(vanish-21, soon-20)
ccomp(seen-14, vanish-21)
det(mouth-24, the-23)
prep_from(vanish-21, mouth-24)
poss(pipe-27, his-26)
prep_of(mouth-24, pipe-27)

(ROOT
  (S
    (S
      (NP (DT The) (NN wind))
      (VP (VBD caught)
        (NP (PRP them))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD were)
        (ADVP (RB nowhere))))
    (. .)))

det(wind-2, The-1)
nsubj(caught-3, wind-2)
root(ROOT-0, caught-3)
dobj(caught-3, them-4)
nsubj(were-8, they-7)
conj_and(caught-3, were-8)
advmod(were-8, nowhere-9)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (MD could) (RB n't)
        (VP (VB get)
          (PRT (RP out))
          (ADVP (IN at) (DT all))))
      (, ,)
      (CC but)
      (VP (VBD were)
        (VP
          (VP (VBN torn)
            (PRT (RP away)))
          (CC and)
          (VP (VBN strangled)))))
    (. .)))

nsubj(get-4, They-1)
nsubjpass(torn-11, They-1)
aux(get-4, could-2)
neg(get-4, n't-3)
root(ROOT-0, get-4)
prt(get-4, out-5)
advmod(get-4, at-6)
pobj(at-6, all-7)
auxpass(torn-11, were-10)
conj_but(get-4, torn-11)
prt(torn-11, away-12)
conj_but(get-4, strangled-14)
conj_and(torn-11, strangled-14)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB yet))
      (NP (NNP North) (NNP Wind))
      (VP (VBD heard)
        (NP (PRP them))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP (PRP$ her) (NN answer)))
      (NP (PRP it))
      (VP (VBD seemed)
        (PP (TO to)
          (NP (NNP Diamond)))
        (SBAR (IN that)
          (S
            (SBAR (RB just) (IN because)
              (S
                (NP (PRP she))
                (VP
                  (VP (VBD was)
                    (ADJP (RB so) (JJ big)))
                  (CC and)
                  (VP (MD could) (RB not)
                    (VP (VB help)
                      (NP (PRP it))))
                  (, ,)
                  (CC and)
                  (ADVP (RB just))
                  (SBAR (IN because)
                    (S
                      (NP
                        (NP (PRP$ her) (NN ear))
                        (CC and)
                        (NP (PRP$ her) (NN mouth)))
                      (VP (MD must)
                        (VP (VB seem)
                          (PP (TO to)
                            (NP
                              (NP (PRP him))
                              (ADJP (RB so) (JJ dreadfully))))
                          (ADVP (RB far) (RB away)))))))))
            (, ,)
            (NP (PRP she))
            (VP (VBD spoke)
              (PP (TO to)
                (NP (PRP him)))
              (ADJP (RBR more) (JJ tenderly)
                (CC and)
                (JJ graciously))
              (ADVP (IN than) (RB ever) (RB before)))))))
    (. .)))

advmod(heard-5, yet-2)
nn(Wind-4, North-3)
nsubj(heard-5, Wind-4)
root(ROOT-0, heard-5)
dobj(heard-5, them-6)
poss(answer-11, her-10)
prep_in(seemed-13, answer-11)
nsubj(seemed-13, it-12)
conj_and(heard-5, seemed-13)
prep_to(seemed-13, Diamond-15)
mark(spoke-47, that-16)
advmod(big-22, just-17)
mark(big-22, because-18)
nsubj(big-22, she-19)
nsubj(help-26, she-19)
cop(big-22, was-20)
advmod(big-22, so-21)
advcl(spoke-47, big-22)
aux(help-26, could-24)
neg(help-26, not-25)
conj_and(big-22, help-26)
advcl(spoke-47, help-26)
dobj(help-26, it-27)
advmod(seem-38, just-30)
mark(seem-38, because-31)
poss(ear-33, her-32)
nsubj(seem-38, ear-33)
poss(mouth-36, her-35)
conj_and(ear-33, mouth-36)
nsubj(seem-38, mouth-36)
aux(seem-38, must-37)
advcl(big-22, seem-38)
conj_and(big-22, seem-38)
advcl(spoke-47, seem-38)
prep_to(seem-38, him-40)
advmod(dreadfully-42, so-41)
amod(him-40, dreadfully-42)
advmod(away-44, far-43)
advmod(seem-38, away-44)
nsubj(spoke-47, she-46)
ccomp(seemed-13, spoke-47)
prep_to(spoke-47, him-49)
advmod(tenderly-51, more-50)
acomp(spoke-47, tenderly-51)
acomp(spoke-47, graciously-53)
conj_and(tenderly-51, graciously-53)
advmod(spoke-47, than-54)
advmod(than-54, ever-55)
advmod(than-54, before-56)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NN voice))
      (VP (VBD was)
        (PP (IN like)
          (NP
            (NP (DT the) (NN bass))
            (PP (IN of)
              (NP (DT a) (JJ deep) (NN organ)))))
        (, ,)
        (PP (IN without)
          (NP
            (NP (DT the) (NN groan))
            (PP (IN in)
              (NP (PRP it)))))))
    (: ;)
    (S
      (PP (IN like)
        (NP
          (NP (DT the) (RBS most) (JJ delicate))
          (PP (IN of)
            (NP
              (NP (NN violin) (NNS tones))
              (PP
                (PP (IN without)
                  (NP
                    (NP (DT the) (NN wail))
                    (PP (IN in)
                      (NP (PRP it)))))
                (: ;)
                (PP (IN like)
                  (NP
                    (NP
                      (NP (DT the) (RBS most) (JJ glorious))
                      (PP (IN of)
                        (NP
                          (NP (NNS trumpet-ejaculations))
                          (PP (IN without)
                            (NP
                              (NP (DT the) (NN defiance))
                              (PP (IN in)
                                (NP (PRP it))))))))
                    (: ;)
                    (PP (IN like)
                      (NP
                        (NP (DT the) (NN sound))
                        (PP (IN of)
                          (S
                            (VP (VBG falling)
                              (NP (NN water))
                              (PP (IN without)
                                (NP
                                  (NP (DT the) (NN clatter)
                                    (CC and)
                                    (NN clash))
                                  (PP (IN in)
                                    (NP (PRP it))))))))))
                    (: :))))))))
      (NP (PRP it))
      (VP (VBD was)
        (PP (IN like)
          (NP
            (NP
              (NP (DT all))
              (PP (IN of)
                (NP (PRP them))))
            (CC and)
            (NP
              (NP
                (NP (DT neither))
                (PP (IN of)
                  (NP (PRP them))))
              (: --)
              (NP
                (NP (DT all))
                (PP (IN of)
                  (NP (PRP them)))))))
        (PP (IN without)
          (NP
            (NP (PRP$ their) (NNS faults))
            (, ,)
            (NP
              (NP (DT each))
              (PP (IN of)
                (NP (PRP them))))))
        (PP (IN without)
          (NP (PRP$ its) (NN peculiarity)))))
    (: :)
    (S
      (PP (IN after)
        (NP (DT all)))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)
        (ADJP
          (ADJP (JJR more))
          (PP (IN like)
            (NP
              (NP (PRP$ his) (NN mother) (POS 's))
              (NN voice))))
        (PP (IN than)
          (NP
            (NP (NN anything) (RB else))
            (PP (IN in)
              (NP (DT the) (NN world)))))))
    (. .)))

poss(voice-2, Her-1)
nsubj(was-3, voice-2)
root(ROOT-0, was-3)
det(bass-6, the-5)
prep_like(was-3, bass-6)
det(organ-10, a-8)
amod(organ-10, deep-9)
prep_of(bass-6, organ-10)
det(groan-14, the-13)
prep_without(was-3, groan-14)
prep_in(groan-14, it-16)
det(delicate-21, the-19)
advmod(delicate-21, most-20)
prep_like(was-58, delicate-21)
nn(tones-24, violin-23)
prep_of(delicate-21, tones-24)
det(wail-27, the-26)
prep_without(tones-24, wail-27)
prep_in(wail-27, it-29)
det(glorious-34, the-32)
advmod(glorious-34, most-33)
prep_like(tones-24, glorious-34)
prep_of(glorious-34, trumpet-ejaculations-36)
det(defiance-39, the-38)
prep_without(trumpet-ejaculations-36, defiance-39)
prep_in(defiance-39, it-41)
det(sound-45, the-44)
prep_like(glorious-34, sound-45)
prepc_of(sound-45, falling-47)
dobj(falling-47, water-48)
det(clatter-51, the-50)
prep_without(falling-47, clatter-51)
prep_without(falling-47, clash-53)
conj_and(clatter-51, clash-53)
prep_in(clatter-51, it-55)
nsubj(was-58, it-57)
parataxis(was-3, was-58)
prep_like(was-58, all-60)
prep_of(all-60, them-62)
prep_like(was-58, neither-64)
conj_and(all-60, neither-64)
prep_of(neither-64, them-66)
dep(neither-64, all-68)
prep_of(all-68, them-70)
poss(faults-73, their-72)
prep_without(was-58, faults-73)
appos(faults-73, each-75)
prep_of(each-75, them-77)
poss(peculiarity-80, its-79)
prep_without(was-58, peculiarity-80)
prep_after(more-87, all-83)
nsubj(more-87, it-85)
cop(more-87, was-86)
parataxis(was-3, more-87)
poss(mother-90, his-89)
poss(voice-92, mother-90)
prep_like(more-87, voice-92)
prep_than(more-87, anything-94)
advmod(anything-94, else-95)
det(world-98, the-97)
prep_in(anything-94, world-98)

(ROOT
  (S (`` ``)
    (FRAG
      (NP
        (NP (NNP Diamond))
        (, ,)
        (ADJP (RB dear))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (VP (VB be)
          (NP (DT a) (NN man)))))
    (. .)))

dep(said-8, Diamond-2)
amod(Diamond-2, dear-4)
nsubj(said-8, she-7)
root(ROOT-0, said-8)
cop(man-13, be-11)
det(man-13, a-12)
ccomp(said-8, man-13)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ is)
          (ADJP (JJ fearful)
            (PP (TO to)
              (NP (PRP you)))))))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT the)
          (ADJP (JJS least) (JJ fearful)))
        (PP (TO to)
          (NP (PRP me)))))
    (. .) ('' '')))

nsubj(fearful-3, What-1)
cop(fearful-3, is-2)
csubj(fearful-10, fearful-3)
prep_to(fearful-3, you-5)
cop(fearful-10, is-6)
neg(fearful-10, not-7)
det(fearful-10, the-8)
dep(fearful-10, least-9)
root(ROOT-0, fearful-10)
prep_to(fearful-10, me-12)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP it))
    (VP (MD ca) (RB n't)
      (VP (VB hurt)
        (NP (PRP you))
        (PRN (, ,) ('' '')
          (SINV
            (VP (VBD murmured))
            (NP (NNP Diamond)))
          (, ,) (`` ``))
        (SBAR (IN for)
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (NP (PRP it)))))))
    (. .) ('' '')))

cc(hurt-6, But-2)
nsubj(hurt-6, it-3)
aux(hurt-6, ca-4)
neg(hurt-6, n't-5)
root(ROOT-0, hurt-6)
dobj(hurt-6, you-7)
parataxis(hurt-6, murmured-10)
nsubj(murmured-10, Diamond-11)
mark(it-17, for-14)
nsubj(it-17, you-15)
cop(it-17, 're-16)
advcl(hurt-6, it-17)

(ROOT
  (SBARQ (`` ``)
    (SBAR
      (ADVP (RB Then))
      (IN if)
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (NP (PRP it)))))
    (PRN (, ,)
      (CC and)
      (VP (VBP have)
        (NP (PRP you))
        (PP (IN in)
          (NP (PRP$ my) (NNS arms))))
      (, ,))
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (PRP it))
      (VP (VB hurt)
        (NP (PRP you))))
    (. ?) ('' '')))

advmod(it-6, Then-2)
mark(it-6, if-3)
nsubj(it-6, I-4)
cop(it-6, 'm-5)
dep(hurt-18, it-6)
cc(have-9, and-8)
dep(hurt-18, have-9)
dobj(have-9, you-10)
poss(arms-13, my-12)
prep_in(have-9, arms-13)
advmod(hurt-18, how-15)
aux(hurt-18, can-16)
nsubj(hurt-18, it-17)
root(ROOT-0, hurt-18)
dobj(hurt-18, you-19)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh) (UH yes))
    (. !)))

root(ROOT-0, Oh-2)
dep(Oh-2, yes-3)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBP see)))
    (, ,) ('' '')
    (VP (VBZ whispered))
    (NP (NNP Diamond))
    (. .)))

nsubj(see-2, I-1)
ccomp(whispered-5, see-2)
root(ROOT-0, whispered-5)
nsubj(whispered-5, Diamond-6)

(ROOT
  (S (`` ``)
    (S (CC But)
      (NP (PRP it))
      (VP (VBZ looks)
        (ADJP (RB so) (JJ dreadful))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ pushes)
        (S
          (NP (PRP me))
          (ADJP (IN about) (RB so)))))
    (. .) ('' '')))

nsubj(looks-4, it-3)
root(ROOT-0, looks-4)
advmod(dreadful-6, so-5)
acomp(looks-4, dreadful-6)
nsubj(pushes-10, it-9)
conj_and(looks-4, pushes-10)
nsubj(so-13, me-11)
dep(so-13, about-12)
xcomp(pushes-10, so-13)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP it))
    (VP (VBZ does) (, ,)
      (S
        (NP (PRP$ my))
        (ADJP (RB dear))))
    (. .)))

discourse(does-5, Yes-2)
nsubj(does-5, it-4)
root(ROOT-0, does-5)
nsubj(dear-8, my-7)
xcomp(does-5, dear-8)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBD was)
            (VP (VBN sent)
              (PP (IN for)))))))
    (. .) ('' '')))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
prep_for(sent-6, what-3)
nsubjpass(sent-6, it-4)
auxpass(sent-6, was-5)
ccomp(is-2, sent-6)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (DT the) (JJ same) (NN moment)))
      (, ,)
      (NP
        (NP (DT a) (NN peal))
        (PP (IN of)
          (NP
            (NP (NN thunder))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD shook)
                  (NP
                    (NP (NNP Diamond) (POS 's))
                    (NN heart))
                  (PP (IN against)
                    (NP
                      (NP (DT the) (NNS sides))
                      (PP (IN of)
                        (NP (PRP$ his) (NN bosom)))))))))))
      (VP (VBD hurtled)
        (PRT (RP out))
        (PP (IN of)
          (NP (DT the) (NNS heavens)))))
    (: :)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB say)
          (PRT (RP out))
          (PP (IN of)
            (NP
              (NP (DT the) (NN sky))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (EX there))
                  (VP (VBD was)
                    (ADVP (DT no) (NN sky))))))))))
    (. .)))

det(moment-4, the-2)
amod(moment-4, same-3)
prep_at(hurtled-21, moment-4)
det(peal-7, a-6)
nsubj(hurtled-21, peal-7)
prep_of(peal-7, thunder-9)
nsubj(shook-11, thunder-9)
rcmod(thunder-9, shook-11)
poss(heart-14, Diamond-12)
dobj(shook-11, heart-14)
det(sides-17, the-16)
prep_against(shook-11, sides-17)
poss(bosom-20, his-19)
prep_of(sides-17, bosom-20)
root(ROOT-0, hurtled-21)
prt(hurtled-21, out-22)
det(heavens-25, the-24)
prep_of(hurtled-21, heavens-25)
nsubj(say-30, I-27)
aux(say-30, can-28)
neg(say-30, not-29)
parataxis(hurtled-21, say-30)
det(sky-34, the-33)
prep_out_of(say-30, sky-34)
mark(was-38, for-36)
expl(was-38, there-37)
dep(sky-34, was-38)
neg(sky-40, no-39)
advmod(was-38, sky-40)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD had) (RB not)
      (VP (VBN seen)
        (NP (DT the) (NN lightning))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN been)
                (ADJP (JJ intent)
                  (PP (IN on)
                    (S
                      (VP (VBG finding)
                        (NP
                          (NP (DT the) (NN face))
                          (PP (IN of)
                            (NP (NNP North) (NNP Wind))))))))))))))
    (. .)))

nsubj(seen-4, Diamond-1)
aux(seen-4, had-2)
neg(seen-4, not-3)
root(ROOT-0, seen-4)
det(lightning-6, the-5)
dobj(seen-4, lightning-6)
mark(intent-12, for-8)
nsubj(intent-12, he-9)
aux(intent-12, had-10)
cop(intent-12, been-11)
advcl(seen-4, intent-12)
prepc_on(intent-12, finding-14)
det(face-16, the-15)
dobj(finding-14, face-16)
nn(Wind-19, North-18)
prep_of(face-16, Wind-19)

(ROOT
  (S
    (NP
      (NP (DT Every) (NN moment))
      (SBAR
        (S
          (NP
            (NP (DT the) (NNS folds))
            (PP (IN of)
              (NP (PRP$ her) (NN garment))))
          (VP (MD would)
            (VP
              (VP (VB sweep)
                (PP (IN across)
                  (NP (PRP$ his) (NNS eyes))))
              (CC and)
              (VP (VB blind)
                (NP (PRP him)))
              (, ,)
              (CC but)
              (VP
                (PP (IN between))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD could)
      (ADVP (RB just))
      (VP (VB persuade)
        (NP (PRP himself))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD saw)
              (NP
                (NP (JJ great) (NNS glories))
                (PP (IN of)
                  (NP
                    (NP (NN woman) (POS 's))
                    (NNS eyes))))
              (S
                (VP (VBG looking)
                  (PRT (RP down))
                  (PP (IN through)
                    (NP
                      (NP (NNS rifts))
                      (PP (IN in)
                        (NP
                          (NP (DT the) (JJ mountainous) (NNS clouds))
                          (PP (IN over)
                            (NP (PRP$ his) (NN head))))))))))))))
    (. .)))

det(moment-2, Every-1)
nsubj(persuade-23, moment-2)
det(folds-4, the-3)
nsubj(sweep-9, folds-4)
nsubj(blind-14, folds-4)
poss(garment-7, her-6)
prep_of(folds-4, garment-7)
aux(sweep-9, would-8)
rcmod(moment-2, sweep-9)
poss(eyes-12, his-11)
prep_across(sweep-9, eyes-12)
rcmod(moment-2, blind-14)
conj_and(sweep-9, blind-14)
dobj(blind-14, him-15)
rcmod(moment-2, between-18)
conj_but(sweep-9, between-18)
nsubj(persuade-23, he-20)
aux(persuade-23, could-21)
advmod(persuade-23, just-22)
root(ROOT-0, persuade-23)
dobj(persuade-23, himself-24)
mark(saw-27, that-25)
nsubj(saw-27, he-26)
ccomp(persuade-23, saw-27)
amod(glories-29, great-28)
dobj(saw-27, glories-29)
poss(eyes-33, woman-31)
prep_of(glories-29, eyes-33)
xcomp(saw-27, looking-34)
prt(looking-34, down-35)
prep_through(looking-34, rifts-37)
det(clouds-41, the-39)
amod(clouds-41, mountainous-40)
prep_in(rifts-37, clouds-41)
poss(head-44, his-43)
prep_over(clouds-41, head-44)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD trembled)
        (ADVP (RB so))
        (PP (IN at)
          (NP (DT the) (NN thunder)))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP$ his) (NNS knees))
            (VP (VBD failed)
              (NP (PRP him)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP
        (VP (VBN sunk)
          (PRT (RP down))
          (PP (IN at)
            (NP
              (NP (NNP North) (NNP Wind) (POS 's))
              (NNS feet))))
        (, ,)
        (CC and)
        (VP (VBD clasped)
          (S
            (NP (PRP$ her) (NN round))
            (NP
              (NP (DT the) (NN column))
              (PP (IN of)
                (NP (PRP$ her) (NN ankle))))))))
    (. .)))

nsubj(trembled-2, He-1)
root(ROOT-0, trembled-2)
advmod(trembled-2, so-3)
det(thunder-6, the-5)
prep_at(trembled-2, thunder-6)
mark(failed-11, that-8)
poss(knees-10, his-9)
nsubj(failed-11, knees-10)
ccomp(trembled-2, failed-11)
dobj(failed-11, him-12)
nsubj(sunk-16, he-15)
nsubj(clasped-25, he-15)
conj_and(trembled-2, sunk-16)
prt(sunk-16, down-17)
nn(Wind-20, North-19)
poss(feet-22, Wind-20)
prep_at(sunk-16, feet-22)
conj_and(trembled-2, clasped-25)
conj_and(sunk-16, clasped-25)
poss(round-27, her-26)
nsubj(column-29, round-27)
det(column-29, the-28)
xcomp(clasped-25, column-29)
poss(ankle-32, her-31)
prep_of(column-29, ankle-32)

(ROOT
  (S
    (S
      (NP (PRP She))
      (ADVP (RB instantly))
      (VP
        (VP (VBD stooped))
        (, ,)
        (VP (VBN lifted)
          (NP (PRP him))
          (PP
            (PP (IN from)
              (NP
                (NP (DT the) (NN roof))
                (PRN (: --)
                  (ADVP (RB up) (: --))
                  (UCP
                    (PP
                      (ADVP (RB up))
                      (IN into)
                      (NP (PRP$ her) (NN bosom)))
                    (, ,)
                    (CC and)
                    (S
                      (VP (VBD held)
                        (S
                          (NP (PRP him))
                          (NP (EX there)))
                        (, ,)
                        (S
                          (VP (VBG saying)))))))))
            (, ,)
            (CONJP (RB as) (IN if))
            (PP (TO to)
              (NP (DT an) (JJ inconsolable) (NN child)))))
        (: --) (`` ``)
        (NP
          (NP (NNP Diamond))
          (, ,)
          (ADJP (RB dear)))))
    (, ,)
    (NP (DT this))
    (VP (MD will)
      (ADVP (RB never))
      (VP (VB do)))
    (. .) ('' '')))

nsubj(stooped-3, She-1)
advmod(stooped-3, instantly-2)
ccomp(do-40, stooped-3)
dep(stooped-3, lifted-5)
dep(stooped-3, lifted-5')
conj_as(lifted-5, lifted-5')
dobj(lifted-5, him-6)
det(roof-9, the-8)
prep_from(lifted-5, roof-9)
dep(roof-9, up-11)
advmod(into-14, up-13)
dep(up-11, into-14)
poss(bosom-16, her-15)
pobj(into-14, bosom-16)
dep(up-11, held-19)
conj_and(into-14, held-19)
nsubj(there-21, him-20)
xcomp(held-19, there-21)
xcomp(held-19, saying-23)
det(child-30, an-28)
amod(child-30, inconsolable-29)
prep_to(lifted-5', child-30)
dobj(stooped-3, Diamond-33)
amod(Diamond-33, dear-35)
nsubj(do-40, this-37)
aux(do-40, will-38)
neg(do-40, never-39)
root(ROOT-0, do-40)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh) (UH yes))
      (, ,)
      (NP (PRP it))
      (VP (MD will)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Diamond))
    (. .)))

discourse(will-6, Oh-2)
dep(Oh-2, yes-3)
nsubj(will-6, it-5)
ccomp(answered-9, will-6)
root(ROOT-0, answered-9)
dep(answered-9, Diamond-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am) (RB all)
        (ADVP (RB right) (RB now))
        (: --)
        (ADJP (RB quite) (JJ comfortable) (, ,)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VB assure)
                (NP (PRP you))))))))
    (, ,)
    (VP (VBZ dear))
    (NP (NNP North) (NNP Wind))
    (. .)))

nsubj(comfortable-9, I-2)
cop(comfortable-9, am-3)
advmod(comfortable-9, all-4)
advmod(now-6, right-5)
advmod(comfortable-9, now-6)
advmod(comfortable-9, quite-8)
ccomp(dear-15, comfortable-9)
nsubj(assure-12, I-11)
ccomp(comfortable-9, assure-12)
dobj(assure-12, you-13)
root(ROOT-0, dear-15)
nn(Wind-17, North-16)
nsubj(dear-15, Wind-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD will)
          (ADVP (RB only))
          (VP (VB let)
            (S
              (NP (PRP me))
              (VP (VB stay)
                (ADVP (RB here))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB be)
        (ADJP (RB all) (JJ right))
        (ADVP (RB indeed))))
    (. .) ('' '')))

mark(let-5, If-1)
nsubj(let-5, you-2)
aux(let-5, will-3)
advmod(let-5, only-4)
advcl(right-14, let-5)
nsubj(stay-7, me-6)
ccomp(let-5, stay-7)
advmod(stay-7, here-8)
nsubj(right-14, I-10)
aux(right-14, shall-11)
cop(right-14, be-12)
advmod(right-14, all-13)
root(ROOT-0, right-14)
advmod(right-14, indeed-15)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB feel)
        (NP (DT the) (NN wind))
        (ADVP (RB here))
        (, ,)
        (ADVP (RB Diamond))))
    (. .) ('' '')))

cc(feel-5, But-2)
nsubj(feel-5, you-3)
aux(feel-5, will-4)
root(ROOT-0, feel-5)
det(wind-7, the-6)
dobj(feel-5, wind-7)
advmod(feel-5, here-8)
advmod(feel-5, Diamond-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB mind)
          (NP
            (NP (DT that))
            (NP (DT a) (NN bit)))
          (, ,)
          (ADVP
            (ADVP (RB so) (RB long))
            (SBAR (IN as)
              (S
                (NP (PRP I))
                (VP (VBP feel)
                  (NP (PRP$ your) (NNS arms))
                  (PP (IN through)
                    (NP (PRP it))))))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Diamond))
    (, ,)
    (S
      (VP (VBG nestling)
        (ADVP (RBR closer))
        (PP (TO to)
          (NP (PRP$ her) (JJ grand) (NN bosom)))))
    (. .)))

nsubj(mind-5, I-2)
aux(mind-5, do-3)
neg(mind-5, n't-4)
ccomp(answered-21, mind-5)
dobj(mind-5, that-6)
iobj(mind-5, that-6)
det(bit-8, a-7)
dep(that-6, bit-8)
advmod(long-11, so-10)
advmod(mind-5, long-11)
mark(feel-14, as-12)
nsubj(feel-14, I-13)
advcl(long-11, feel-14)
ccomp(long-11, feel-14)
poss(arms-16, your-15)
dobj(feel-14, arms-16)
prep_through(feel-14, it-18)
root(ROOT-0, answered-21)
nsubj(answered-21, Diamond-22)
vmod(answered-21, nestling-24)
advmod(nestling-24, closer-25)
poss(bosom-29, her-27)
amod(bosom-29, grand-28)
prep_to(nestling-24, bosom-29)

(ROOT
  (S (`` ``)
    (NP (NNP Brave))
    (VP (VBZ boy))
    (. !) ('' '')))

nsubj(boy-3, Brave-2)
root(ROOT-0, boy-3)

(ROOT
  (S
    (VP (VBN returned)
      (NP (JJ North) (NN Wind))
      (, ,)
      (S
        (VP (VBG pressing)
          (S
            (NP (PRP him))
            (ADJP (JJR closer))))))
    (. .)))

root(ROOT-0, returned-1)
amod(Wind-3, North-2)
dobj(returned-1, Wind-3)
vmod(returned-1, pressing-5)
nsubj(closer-7, him-6)
xcomp(pressing-5, closer-7)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,) (`` ``)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB see)
            (NP (DT that))))))
    (. .)))

dep(said-5, No-2)
root(ROOT-0, said-5)
nsubj(said-5, Diamond-6)
nsubj(see-12, I-9)
aux(see-12, do-10)
neg(see-12, n't-11)
dep(Diamond-6, see-12)
dobj(see-12, that-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP (NN courage))
      (ADVP (IN at) (DT all))
      (, ,)
      (ADJP (RB so) (JJ long))
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBP feel)
            (S
              (NP (PRP you))
              (NP (EX there)))))))
    (. .) ('' '')))

nsubj(long-9, It-1)
cop(long-9, 's-2)
neg(long-9, not-3)
dep(long-9, courage-4)
advmod(long-9, at-5)
pobj(at-5, all-6)
advmod(long-9, so-8)
root(ROOT-0, long-9)
mark(feel-12, as-10)
nsubj(feel-12, I-11)
advcl(long-9, feel-12)
nsubj(there-14, you-13)
xcomp(feel-12, there-14)

(ROOT
  (S (`` ``)
    (ADVP (CC But))
    (VP (VBD had)
      (VP (RB n't)
        (NP (PRP you))))
    (VP
      (ADVP (RBR better))
      (VB get)
      (PP (IN into)
        (NP (PRP$ my) (NN hair))))
    (. ?)))

advmod(you-5, But-2)
aux(you-5, had-3)
neg(you-5, n't-4)
root(ROOT-0, you-5)
advmod(get-7, better-6)
dep(you-5, get-7)
poss(hair-10, my-9)
prep_into(get-7, hair-10)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP you))
      (VP (MD would) (RB not)
        (VP (VB feel)
          (NP (DT the) (NN wind)))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD will)
        (ADVP (RB here))))
    (. .) ('' '')))

advmod(feel-5, Then-1)
nsubj(feel-5, you-2)
aux(feel-5, would-3)
neg(feel-5, not-4)
root(ROOT-0, feel-5)
det(wind-7, the-6)
dobj(feel-5, wind-7)
nsubj(will-10, you-9)
parataxis(feel-5, will-10)
advmod(will-10, here-11)

(ROOT
  (S
    (INTJ (`` ``) (UH Ah))
    (, ,)
    (ADVP (CC but))
    (, ,)
    (PP (IN dear)
      (NP (NNP North) (NNP Wind)))
    (, ,)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB how)
            (ADJP (JJ nice)))
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB feel)
                    (NP (PRP$ your) (NNS arms))
                    (PP (IN about)
                      (NP (PRP me)))))))))))
    (. .)))

discourse(know-13, Ah-2)
advmod(know-13, but-4)
nn(Wind-8, North-7)
prep_dear(know-13, Wind-8)
nsubj(know-13, you-10)
aux(know-13, do-11)
neg(know-13, n't-12)
root(ROOT-0, know-13)
advmod(is-17, how-14)
dep(how-14, nice-15)
nsubj(is-17, it-16)
nsubj(feel-19, it-16)
ccomp(know-13, is-17)
aux(feel-19, to-18)
xcomp(is-17, feel-19)
poss(arms-21, your-20)
dobj(feel-19, arms-21)
prep_about(feel-19, me-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP
        (NP
          (QP (DT a) (CD thousand))
          (NNS times))
        (JJR better))
      (S
        (VP (TO to)
          (VP (VB have)
            (NP
              (NP (PRP them))
              (CC and)
              (NP (DT the) (NN wind)))
            (ADVP (RB together)))))
      (, ,)
      (SBAR (IN than)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (RB only) (PRP$ your) (NN hair))
                (CC and)
                (NP
                  (NP (DT the) (NN back))
                  (PP (IN of)
                    (NP
                      (NP (PRP$ your) (NN neck))
                      (CC and)
                      (NP (DT no) (NN wind))))))
              (ADVP (IN at) (DT all)))))))
    (. .) ('' '')))

nsubj(better-6, It-1)
nsubj(have-8, It-1)
nsubj(have-17, It-1)
cop(better-6, is-2)
quantmod(thousand-4, a-3)
num(times-5, thousand-4)
npadvmod(better-6, times-5)
root(ROOT-0, better-6)
aux(have-8, to-7)
xcomp(better-6, have-8)
dobj(have-8, them-9)
det(wind-12, the-11)
dobj(have-8, wind-12)
conj_and(them-9, wind-12)
advmod(have-8, together-13)
mark(have-17, than-15)
aux(have-17, to-16)
advcl(better-6, have-17)
xcomp(better-6, have-17)
advmod(hair-20, only-18)
poss(hair-20, your-19)
dobj(have-17, hair-20)
det(back-23, the-22)
dobj(have-17, back-23)
conj_and(hair-20, back-23)
poss(neck-26, your-25)
prep_of(back-23, neck-26)
neg(wind-29, no-28)
prep_of(back-23, wind-29)
conj_and(neck-26, wind-29)
advmod(have-17, at-30)
pobj(at-30, all-31)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB surely))
      (ADJP (RBR more) (JJ comfortable))
      (NP (RB there)))
    (. ?) ('' '')))

cc(comfortable-7, But-2)
nsubj(comfortable-7, it-3)
cop(comfortable-7, is-4)
advmod(comfortable-7, surely-5)
advmod(comfortable-7, more-6)
root(ROOT-0, comfortable-7)
dep(comfortable-7, there-8)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Well))
      (, ,)
      (ADVP (RB perhaps)))
    (: ;)
    (S (CC but)
      (NP (PRP I))
      (VP (VBP begin)
        (S
          (VP (TO to)
            (VP (VB think)
              (SBAR
                (S
                  (NP (EX there))
                  (VP (VBP are)
                    (NP
                      (NP (JJR better) (NNS things))
                      (PP (IN than)
                        (S
                          (VP (VBG being)
                            (ADJP (JJ comfortable))))))))))))))
    (. .) ('' '')))

discourse(perhaps-4, Well-2)
dep(begin-8, perhaps-4)
cc(begin-8, but-6)
nsubj(begin-8, I-7)
nsubj(think-10, I-7)
root(ROOT-0, begin-8)
aux(think-10, to-9)
xcomp(begin-8, think-10)
expl(are-12, there-11)
ccomp(think-10, are-12)
amod(things-14, better-13)
nsubj(are-12, things-14)
cop(comfortable-17, being-16)
prepc_than(things-14, comfortable-17)

(ROOT
  (S
    (INTJ (`` ``) (UH Yes))
    (, ,)
    (ADVP (RB indeed))
    (NP (EX there))
    (VP (VBP are))
    (. .)))

discourse(are-6, Yes-2)
advmod(are-6, indeed-4)
expl(are-6, there-5)
root(ROOT-0, are-6)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB keep)
        (NP (PRP you))
        (PP (IN in)
          (NP
            (NP (NN front))
            (PP (IN of)
              (NP (PRP me)))))))
    (. .)))

discourse(keep-5, Well-1)
nsubj(keep-5, I-3)
aux(keep-5, will-4)
root(ROOT-0, keep-5)
dobj(keep-5, you-6)
prep_in_front_of(keep-5, me-10)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD will)
        (VP (VB feel)
          (NP (DT the) (NN wind)))))
    (, ,)
    (CC but)
    (FRAG (RB not)
      (ADVP (RB too) (RB much)))
    (. .)))

nsubj(feel-3, You-1)
aux(feel-3, will-2)
root(ROOT-0, feel-3)
det(wind-5, the-4)
dobj(feel-3, wind-5)
conj_but(feel-3, not-8)
advmod(much-10, too-9)
dep(not-8, much-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD shall)
        (ADVP (RB only))
        (VP (VB want)
          (S
            (NP (CD one) (NN arm))
            (VP (TO to)
              (VP (VB take)
                (NP
                  (NP (NN care))
                  (PP (IN of)
                    (NP (PRP you))))))))))
    (: ;)
    (S
      (NP (DT the) (JJ other))
      (VP (MD will)
        (VP (VB be)
          (ADJP (RB quite) (JJ enough)
            (S
              (VP (TO to)
                (VP (VB sink)
                  (NP (DT the) (NN ship)))))))))
    (. .) ('' '')))

nsubj(want-4, I-1)
aux(want-4, shall-2)
advmod(want-4, only-3)
root(ROOT-0, want-4)
num(arm-6, one-5)
dobj(want-4, arm-6)
nsubj(take-8, arm-6)
aux(take-8, to-7)
xcomp(want-4, take-8)
dobj(take-8, care-9)
prep_of(care-9, you-11)
det(other-14, the-13)
nsubj(enough-18, other-14)
nsubj(sink-20, other-14)
aux(enough-18, will-15)
cop(enough-18, be-16)
advmod(enough-18, quite-17)
parataxis(want-4, enough-18)
aux(sink-20, to-19)
xcomp(enough-18, sink-20)
det(ship-22, the-21)
dobj(sink-20, ship-22)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (NP (NNP dear) (NNP North))
    (VP (VBZ Wind))
    (. !)))

discourse(Wind-6, Oh-2)
nn(North-5, dear-4)
nsubj(Wind-6, North-5)
root(ROOT-0, Wind-6)

(ROOT
  (SBARQ
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB talk)
        (ADVP (RB so))))
    (. ?) ('' '')))

advmod(talk-4, how-1)
aux(talk-4, can-2)
nsubj(talk-4, you-3)
root(ROOT-0, talk-4)
advmod(talk-4, so-5)

(ROOT
  (S (`` ``)
    (S
      (S
        (NP (PRP$ My)
          (ADJP (RB dear))
          (NN boy)))
      (, ,)
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBP talk)))
    (: ;)
    (S
      (NP (PRP I))
      (ADVP (RB always))
      (VP (VBP mean)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP say))))))
    (. .) ('' '')))

poss(boy-4, My-2)
amod(boy-4, dear-3)
ccomp(talk-8, boy-4)
nsubj(talk-8, I-6)
neg(talk-8, never-7)
root(ROOT-0, talk-8)
nsubj(mean-12, I-10)
advmod(mean-12, always-11)
parataxis(talk-8, mean-12)
dobj(say-15, what-13)
nsubj(say-15, I-14)
ccomp(mean-12, say-15)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (VBP do)
      (VP (VB mean)
        (S
          (VP (TO to)
            (VP (VB sink)
              (NP (DT the) (NN ship))
              (PP (IN with)
                (NP (DT the) (JJ other) (NN hand))))))))
    (. ?) ('' '')))

advmod(mean-5, Then-2)
nsubj(mean-5, you-3)
nsubj(sink-7, you-3)
aux(mean-5, do-4)
root(ROOT-0, mean-5)
aux(sink-7, to-6)
xcomp(mean-5, sink-7)
det(ship-9, the-8)
dobj(sink-7, ship-9)
det(hand-13, the-11)
amod(hand-13, other-12)
prep_with(sink-7, hand-13)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (PP (IN like)
        (NP (PRP you))))
    (. .) ('' '')))

nsubj('s-3, It-2)
root(ROOT-0, 's-3)
neg('s-3, not-4)
prep_like('s-3, you-6)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (NP (DT that))))
    (. ?) ('' '')))

advmod(know-5, How-2)
aux(know-5, do-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
dobj(know-5, that-6)

(ROOT
  (S (`` ``)
    (VP (VB Quite)
      (ADVP (RB easily)))
    (. .)))

root(ROOT-0, Quite-2)
advmod(Quite-2, easily-3)

(ROOT
  (S
    (S
      (ADVP (RB Here))
      (NP (PRP you))
      (VP (VBP are)
        (VP (VBG taking)
          (NP
            (NP (NN care))
            (PP (IN of)
              (NP
                (NP (DT a) (JJ poor) (JJ little) (NN boy))
                (PP (IN with)
                  (NP (CD one) (NN arm)))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB there))
      (NP (PRP you))
      (VP (VBP are)
        (VP (VBG sinking)
          (NP (DT a) (NN ship))
          (PP (IN with)
            (NP (DT the) (JJ other))))))
    (. .)))

advmod(taking-4, Here-1)
nsubj(taking-4, you-2)
aux(taking-4, are-3)
root(ROOT-0, taking-4)
dobj(taking-4, care-5)
det(boy-10, a-7)
amod(boy-10, poor-8)
amod(boy-10, little-9)
prep_of(care-5, boy-10)
num(arm-13, one-12)
prep_with(boy-10, arm-13)
advmod(sinking-19, there-16)
nsubj(sinking-19, you-17)
aux(sinking-19, are-18)
conj_and(taking-4, sinking-19)
det(ship-21, a-20)
dobj(sinking-19, ship-21)
det(other-24, the-23)
prep_with(sinking-19, other-24)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (PP (IN like)
          (NP (PRP you)))))
    (. .) ('' '')))

nsubj(be-4, It-1)
aux(be-4, ca-2)
neg(be-4, n't-3)
root(ROOT-0, be-4)
prep_like(be-4, you-6)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (SBARQ
    (WHPP (IN but)
      (WHNP (WDT which)))
    (SQ (VBZ is)
      (NP (PRP me)))
    (. ?)))

prep_but(is-3, which-2)
root(ROOT-0, is-3)
nsubj(is-3, me-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB be)
          (NP (CD two) (NN mes)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .) ('' '')))

nsubj(mes-6, I-1)
aux(mes-6, ca-2)
neg(mes-6, n't-3)
cop(mes-6, be-4)
num(mes-6, two-5)
ccomp(know-9, mes-6)
nsubj(know-9, you-8)
root(ROOT-0, know-9)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S
    (NP (NN Nobody))
    (VP (MD can)
      (VP (VB be)
        (NP (CD two) (NN mes))))
    (. .) ('' '')))

nsubj(mes-5, Nobody-1)
aux(mes-5, can-2)
cop(mes-5, be-3)
num(mes-5, two-4)
root(ROOT-0, mes-5)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Well))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP me))
          (VP (VBZ is)
            (NP (PRP me))))))
    (. ?) ('' '')))

root(ROOT-0, Well-2)
dobj(me-7, Well-2)
nsubj(me-7, me-5)
cop(me-7, is-6)
rcmod(Well-2, me-7)

(ROOT
  (S (`` ``)
    (ADVP (RB Now))
    (NP (PRP I))
    (VP (MD must)
      (VP (VB think)))
    (. .)))

advmod(think-5, Now-2)
nsubj(think-5, I-3)
aux(think-5, must-4)
root(ROOT-0, think-5)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ looks)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (CD two))))))
    (. .) ('' '')))

expl(looks-2, There-1)
root(ROOT-0, looks-2)
aux(two-5, to-3)
cop(two-5, be-4)
xcomp(looks-2, two-5)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (DT the) (JJ very) (NN point)))
    (. .)))

nsubj(point-5, That-1)
cop(point-5, 's-2)
det(point-5, the-3)
amod(point-5, very-4)
root(ROOT-0, point-5)

(ROOT
  (PRN (: --)
    (S
      (NP (PRP You))
      (VP (MD ca) (RB n't)
        (VP (VB be)
          (VP (VBG knowing)
            (NP (DT the) (NN thing))
            (SBAR
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP do) (RB n't)
                    (VP (VB know)))))
              (, ,)
              (SBAR
                (S
                  (VP (MD can))
                  (NP (PRP you)))
                (. ?) ('' '')))))))))

nsubj(knowing-6, You-2)
aux(knowing-6, ca-3)
neg(knowing-6, n't-4)
aux(knowing-6, be-5)
root(ROOT-0, knowing-6)
det(thing-8, the-7)
dobj(knowing-6, thing-8)
nsubj(know-12, you-9)
aux(know-12, do-10)
neg(know-12, n't-11)
dep(knowing-6, know-12)
dep(know-12, can-14)
dep(can-14, you-15)

(ROOT
  (INTJ (`` ``) (UH No) (. .) ('' '')))

root(ROOT-0, No-2)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WDT Which)
      (NP (PRP me)))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)))
    (. ?) ('' '')))

det(me-3, Which-2)
dobj(know-6, me-3)
aux(know-6, do-4)
nsubj(know-6, you-5)
root(ROOT-0, know-6)

(ROOT
  (SINV (`` ``)
    (NP
      (NP (DT The) (NN kindest))
      (, ,)
      (NP (NN goodest))
      (, ,)
      (RRC
        (ADVP (RB best))
        (NP
          (NP (PRP me))
          (PP (IN in)
            (NP (DT the) (NN world))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Diamond))
    (, ,)
    (S
      (VP (VBG clinging)
        (PP (TO to)
          (NP (NNP North) (NNP Wind)))))
    (. .)))

det(kindest-3, The-2)
dep(answered-14, kindest-3)
appos(kindest-3, goodest-5)
advmod(me-8, best-7)
rcmod(kindest-3, me-8)
det(world-11, the-10)
prep_in(me-8, world-11)
root(ROOT-0, answered-14)
nsubj(answered-14, Diamond-15)
vmod(answered-14, clinging-17)
nn(Wind-20, North-19)
prep_to(clinging-17, Wind-20)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (VBP am)
      (NP (PRP I))
      (ADJP (JJ good)
        (PP (TO to)
          (NP (PRP you)))))
    (. ?) ('' '')))

advmod(good-5, Why-2)
cop(good-5, am-3)
nsubj(good-5, I-4)
root(ROOT-0, good-5)
prep_to(good-5, you-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)

(ROOT
  (S (`` ``)
    (VP (VB Have)
      (S
        (NP (PRP you))
        (ADVP (RB ever))
        (VP (VBN done)
          (NP
            (NP (NN anything))
            (PP (IN for)
              (NP (PRP me)))))))
    (. ?) ('' '')))

root(ROOT-0, Have-2)
nsubj(done-5, you-3)
advmod(done-5, ever-4)
ccomp(Have-2, done-5)
dobj(done-5, anything-6)
prep_for(anything-6, me-8)

(ROOT
  (INTJ (`` ``) (UH No) (. .) ('' '')))

root(ROOT-0, No-2)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP I))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ good)
          (PP (TO to)
            (NP (PRP you))))
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (VBP choose)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ good)
                      (PP (TO to)
                        (NP (PRP you))))))))))))
    (. .) ('' '')))

advmod(good-6, Then-2)
nsubj(good-6, I-3)
aux(good-6, must-4)
cop(good-6, be-5)
root(ROOT-0, good-6)
prep_to(good-6, you-8)
mark(choose-11, because-9)
nsubj(choose-11, I-10)
nsubj(good-14, I-10)
advcl(good-6, choose-11)
aux(good-14, to-12)
cop(good-14, be-13)
xcomp(choose-11, good-14)
prep_to(good-14, you-16)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB choose)))
    (. ?) ('' '')))

advmod(choose-5, Why-2)
aux(choose-5, should-3)
nsubj(choose-5, I-4)
root(ROOT-0, choose-5)

(ROOT
  (S (`` ``)
    (VP (VB Because)
      (PRN (: --)
        (PP (IN because))
        (: --))
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBP like)))))
    (. .) ('' '')))

root(ROOT-0, Because-2)
dep(Because-2, because-4)
mark(like-8, because-6)
nsubj(like-8, you-7)
advcl(Because-2, like-8)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ good)
                (PP (TO to)
                  (NP (PRP you)))))))))
    (. ?) ('' '')))

advmod(like-5, Why-2)
aux(like-5, should-3)
nsubj(like-5, I-4)
nsubj(good-8, I-4)
root(ROOT-0, like-5)
aux(good-8, to-6)
cop(good-8, be-7)
xcomp(like-5, good-8)
prep_to(good-8, you-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know) (, ,)
        (SBAR (IN except)
          (S
            (NP (PRP it))
            (VP (VB be)
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (ADJP (JJ good)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ good)
                              (PP (TO to)
                                (NP (PRP me))))))))))))))))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
mark(be-9, except-7)
nsubj(be-9, it-8)
advcl(know-5, be-9)
mark(good-13, because-10)
nsubj(good-13, it-11)
nsubj(good-16, it-11)
cop(good-13, 's-12)
advcl(be-9, good-13)
aux(good-16, to-14)
cop(good-16, be-15)
xcomp(good-13, good-16)
prep_to(good-16, me-18)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (ADVP (RB just))
        (NP (PRP it))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ good)
          (PP (TO to)
            (NP (PRP you))))
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (VBP like)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ good))))))))))
    (. .) ('' '')))

nsubj(it-5, That-2)
cop(it-5, 's-3)
advmod(it-5, just-4)
root(ROOT-0, it-5)
nsubj(good-9, I-7)
cop(good-9, am-8)
parataxis(it-5, good-9)
prep_to(good-9, you-11)
mark(like-14, because-12)
nsubj(like-14, I-13)
nsubj(good-17, I-13)
advcl(good-9, like-14)
aux(good-17, to-15)
cop(good-17, be-16)
xcomp(like-14, good-17)

(ROOT
  (SBARQ (`` ``)
    (WHADVP
      (ADVP (RB Then))
      (WRB why))
    (SQ (MD should) (RB n't)
      (NP (PRP you))
      (VP (VB be)
        (ADJP (JJ good))
        (PP
          (PP (TO to)
            (NP (JJ other) (NNS people)))
          (CONJP (RB as) (RB well) (IN as))
          (PP (TO to)
            (NP (PRP me))))))
    (. ?) ('' '')))

advmod(why-3, Then-2)
advmod(good-8, why-3)
aux(good-8, should-4)
neg(good-8, n't-5)
nsubj(good-8, you-6)
cop(good-8, be-7)
root(ROOT-0, good-8)
amod(people-11, other-10)
prep_to(good-8, people-11)
prep_to(good-8, me-16)
conj_and(people-11, me-16)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADJP (RB just) (WP what))
        (S
          (NP (PRP I))
          (VP (VBP do) (RB n't)
            (VP (VB know))))))
    (. .)))

nsubj('s-3, That-2)
root(ROOT-0, 's-3)
advmod(what-5, just-4)
dep(know-9, what-5)
nsubj(know-9, I-6)
aux(know-9, do-7)
neg(know-9, n't-8)
ccomp('s-3, know-9)

(ROOT
  (S
    (NP (NNP Why))
    (VP (MD should)
      (VP (RB n't)
        (NP (PRP I))))
    (. ?) ('' '')))

nsubj(I-4, Why-1)
aux(I-4, should-2)
neg(I-4, n't-3)
root(ROOT-0, I-4)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (ADVP (RB either))))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
advmod(know-5, either-6)

(ROOT
  (SINV
    (ADVP (RB Then))
    (ADJP (JJ why))
    (VP (MD should) (RB n't))
    (NP (PRP you))
    (. ?) ('' '')))

advmod(should-3, Then-1)
dep(should-3, why-2)
root(ROOT-0, should-3)
neg(should-3, n't-4)
nsubj(should-3, you-5)

(ROOT
  (S (`` ``)
    (PP (IN Because))
    (NP (PRP I))
    (VP (VBP am))
    (. .) ('' '')))

prep(am-4, Because-2)
nsubj(am-4, I-3)
root(ROOT-0, am-4)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB There))
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB again))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

advmod(is-4, There-2)
nsubj(is-4, it-3)
ccomp(said-8, is-4)
advmod(is-4, again-5)
root(ROOT-0, said-8)
nsubj(said-8, Diamond-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP are))))))
    (. .)))

nsubj(see-5, I-2)
aux(see-5, do-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
mark(are-8, that-6)
nsubj(are-8, you-7)
ccomp(see-5, are-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ looks)
      (NP (RB quite) (DT the) (JJ other) (NN thing)))
    (. .) ('' '')))

nsubj(looks-2, It-1)
root(ROOT-0, looks-2)
advmod(thing-6, quite-3)
det(thing-6, the-4)
amod(thing-6, other-5)
dobj(looks-2, thing-6)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (VP (CC but)
      (VP (VB listen)
        (PP (TO to)
          (NP (PRP me))))
      (, ,)
      (VP (VB Diamond)))
    (. .)))

discourse(listen-5, Well-2)
cc(listen-5, but-4)
root(ROOT-0, listen-5)
prep_to(listen-5, me-7)
dep(listen-5, Diamond-9)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP know)
        (S
          (NP (DT the) (NN one))
          (NP (PRP me)))))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP say)))
      (, ,))
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (ADJP (JJ good))))
    (. .) ('' '')))

nsubj(know-2, You-1)
root(ROOT-0, know-2)
det(one-4, the-3)
nsubj(me-5, one-4)
xcomp(know-2, me-5)
nsubj(say-8, you-7)
dep(know-2, say-8)
nsubj(good-13, that-11)
cop(good-13, is-12)
conj_and(know-2, good-13)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB know)
          (NP (DT the) (JJ other)
            (NX (FW me)))
          (ADVP (RB as) (RB well)))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(know-4, you-3)
ccomp(Do-2, know-4)
det(me-7, the-5)
amod(me-7, other-6)
dobj(know-4, me-7)
advmod(well-9, as-8)
mwe(well-9, as-8)
advmod(know-4, well-9)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't))
    (. .)))

nsubj(ca-2, I-1)
root(ROOT-0, ca-2)
neg(ca-2, n't-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should) (RB n't)
      (VP (VB like)
        (PP (TO to))))
    (. .) ('' '')))

nsubj(like-4, I-1)
aux(like-4, should-2)
neg(like-4, n't-3)
root(ROOT-0, like-4)
prep(like-4, to-5)

(ROOT
  (S (`` ``)
    (ADVP (RB There))
    (NP (PRP it))
    (VP (VBZ is))
    (. .)))

advmod(is-4, There-2)
nsubj(is-4, it-3)
root(ROOT-0, is-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP (DT the) (JJ other)
          (NX (FW me)))))
    (. .)))

nsubj(know-4, You-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
det(me-7, the-5)
amod(me-7, other-6)
dobj(know-4, me-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (JJ sure)
        (PP (IN of)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (PRP them)))))))
    (. ?) ('' '')))

nsubj(sure-3, You-1)
cop(sure-3, are-2)
root(ROOT-0, sure-3)
prep_of(sure-3, one-5)
prep_of(one-5, them-7)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (EX there))
            (VP (MD ca) (RB n't)
              (VP (VB be)
                (NP (CD two) (NN mes))))))))
    (. ?) ('' '')))

cc(sure-5, And-2)
nsubj(sure-5, you-3)
cop(sure-5, are-4)
root(ROOT-0, sure-5)
expl(mes-11, there-6)
aux(mes-11, ca-7)
neg(mes-11, n't-8)
cop(mes-11, be-9)
num(mes-11, two-10)
ccomp(sure-5, mes-11)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Then))
      (NP
        (NP (DT the)
          (NX (FW me)))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB know))))))
      (VP (MD must)
        (VP (VB be)
          (NP
            (NP (DT the) (JJ same))
            (PP (IN as)
              (NP (DT the)
                (NX (FW me))))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP do)
                  (VP (VB know))))))))
      (, ,))
    (: --)
    (S
      (ADVP (RB else))
      (NP (EX there))
      (VP (MD would)
        (VP (VB be)
          (NP (CD two) (NN mes)))))
    (. ?) ('' '')))

advmod(same-12, Then-2)
det(me-4, the-3)
nsubj(same-12, me-4)
nsubj(know-8, you-5)
aux(know-8, do-6)
neg(know-8, n't-7)
rcmod(me-4, know-8)
aux(same-12, must-9)
cop(same-12, be-10)
det(same-12, the-11)
root(ROOT-0, same-12)
det(me-15, the-14)
prep_as(same-12, me-15)
nsubj(know-18, you-16)
aux(know-18, do-17)
rcmod(same-12, know-18)
advmod(mes-26, else-21)
expl(mes-26, there-22)
aux(mes-26, would-23)
cop(mes-26, be-24)
num(mes-26, two-25)
parataxis(same-12, mes-26)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP
      (NP (DT the) (JJ other)
        (NX (FW me)))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB know))))))
    (VP (MD must)
      (VP (VB be)
        (ADJP (RB as) (JJ kind)
          (PP (IN as)
            (NP
              (NP (DT the)
                (NX (FW me)))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP do)
                    (VP (VB know))))))))))
    (. ?) ('' '')))

advmod(kind-13, Then-2)
det(me-5, the-3)
amod(me-5, other-4)
nsubj(kind-13, me-5)
nsubj(know-9, you-6)
aux(know-9, do-7)
neg(know-9, n't-8)
rcmod(me-5, know-9)
aux(kind-13, must-10)
cop(kind-13, be-11)
advmod(kind-13, as-12)
root(ROOT-0, kind-13)
det(me-16, the-15)
prep_as(kind-13, me-16)
nsubj(know-19, you-17)
aux(know-19, do-18)
rcmod(me-16, know-19)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (ADVP (IN Besides))
    (, ,)
    (NP (PRP I))
    (VP (VBP tell)
      (NP (PRP you))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADVP (RB so))
            (, ,)
            (SBAR (RB only)
              (S
                (NP (PRP it))
                (VP (VBZ does) (RB n't)
                  (VP (VB look)
                    (PP (IN like)
                      (NP (PRP it)))))))))))
    (. .)))

advmod(tell-5, Besides-2)
nsubj(tell-5, I-4)
root(ROOT-0, tell-5)
dobj(tell-5, you-6)
mark(is-9, that-7)
nsubj(is-9, it-8)
ccomp(tell-5, is-9)
advmod(is-9, so-10)
advmod(look-16, only-12)
nsubj(look-16, it-13)
aux(look-16, does-14)
neg(look-16, n't-15)
ccomp(is-9, look-16)
prep_like(look-16, it-18)

(ROOT
  (S
    (NP (DT That))
    (NP (PRP I))
    (VP (VBZ confess)
      (ADVP (RB freely)))
    (. .)))

nsubj(confess-3, That-1)
nsubj(confess-3, I-2)
root(ROOT-0, confess-3)
advmod(confess-3, freely-4)

(ROOT
  (S
    (VP (VB Have)
      (S
        (NP (PRP you))
        (ADJP
          (NP (NN anything))
          (JJR more))
        (S
          (VP (TO to)
            (VP (VB object))))))
    (. ?) ('' '')))

root(ROOT-0, Have-1)
nsubj(object-6, you-2)
npadvmod(more-4, anything-3)
dep(object-6, more-4)
aux(object-6, to-5)
xcomp(Have-1, object-6)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No) (, ,) (UH no))
      (, ,)
      (NP (NNP dear) (NNP North))
      (VP (VBZ Wind)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (RB quite) (VBN satisfied))))
    (. .) ('' '')))

discourse(Wind-8, No-2)
dep(No-2, no-4)
nn(North-7, dear-6)
nsubj(Wind-8, North-7)
root(ROOT-0, Wind-8)
nsubjpass(satisfied-13, I-10)
auxpass(satisfied-13, am-11)
advmod(satisfied-13, quite-12)
parataxis(Wind-8, satisfied-13)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP I))
    (VP (MD will)
      (VP (VB tell)
        (NP (PRP you))
        (NP
          (NP (NN something))
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD might)
                (VP (VB object))))))))
    (. .)))

advmod(tell-5, Then-2)
nsubj(tell-5, I-3)
aux(tell-5, will-4)
root(ROOT-0, tell-5)
iobj(tell-5, you-6)
dobj(tell-5, something-7)
nsubj(object-10, you-8)
aux(object-10, might-9)
rcmod(something-7, object-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD might)
      (VP (VB say)
        (SBAR
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the)
                  (NX (FW me)))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP know)))))
              (VP (VBZ is)
                (PP (IN like)
                  (NP (DT the) (JJ other)
                    (NX (FW me))
                    (, ,))))))
          (CC and)
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBP am)
                (ADJP (JJ cruel))
                (ADVP (DT all) (IN through))))))))
    (. .) ('' '')))

nsubj(say-3, You-1)
aux(say-3, might-2)
root(ROOT-0, say-3)
mark(is-9, that-4)
det(me-6, the-5)
nsubj(is-9, me-6)
nsubj(know-8, you-7)
rcmod(me-6, know-8)
ccomp(say-3, is-9)
det(me-13, the-11)
amod(me-13, other-12)
prep_like(is-9, me-13)
mark(cruel-19, that-16)
nsubj(cruel-19, I-17)
cop(cruel-19, am-18)
ccomp(say-3, cruel-19)
conj_and(is-9, cruel-19)
dep(through-21, all-20)
advmod(cruel-19, through-21)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (DT that))
          (VP (MD ca) (RB n't)
            (VP (VB be)))))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADJP (RB so) (JJ kind))))))
    (. .) ('' '')))

nsubj(know-3, I-2)
root(ROOT-0, know-3)
nsubj(be-7, that-4)
aux(be-7, ca-5)
neg(be-7, n't-6)
ccomp(know-3, be-7)
mark(kind-13, because-9)
nsubj(kind-13, you-10)
cop(kind-13, are-11)
advmod(kind-13, so-12)
advcl(know-3, kind-13)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (DT that) (NN kindness))
    (VP (MD might)
      (VP (VB be)
        (NP
          (NP (RB only) (DT a) (NN pretence))
          (PP (IN for)
            (NP
              (NP (DT the) (NN sake))
              (PP (IN of)
                (S
                  (VP (VBG being)
                    (ADJP (RBR more) (JJ cruel))))))
            (ADVP (RB afterwards))))))
    (. .) ('' '')))

cc(pretence-9, But-2)
det(kindness-4, that-3)
nsubj(pretence-9, kindness-4)
aux(pretence-9, might-5)
cop(pretence-9, be-6)
advmod(pretence-9, only-7)
det(pretence-9, a-8)
root(ROOT-0, pretence-9)
det(sake-12, the-11)
prep_for(pretence-9, sake-12)
cop(cruel-16, being-14)
advmod(cruel-16, more-15)
prepc_of(sake-12, cruel-16)
advmod(pretence-9, afterwards-17)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (VBG clung)
        (PP (TO to)
          (NP (PRP$ her) (NN tighter)))
        (PP (IN than)
          (ADVP (RB ever)))
        (, ,)
        (S
          (VP (VBG crying) (: --) (`` ``)
            (S
              (INTJ (UH No))
              (, ,)
              (INTJ (UH no))
              (, ,)
              (NP (NNP dear) (NNP North))
              (VP (VBZ Wind)))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB believe)
          (NP (DT that)))))
    (. .)))

nsubj(clung-2, Diamond-1)
root(ROOT-0, clung-2)
poss(tighter-5, her-4)
prep_to(clung-2, tighter-5)
prep(clung-2, than-6)
pcomp(than-6, ever-7)
vmod(clung-2, crying-9)
discourse(Wind-18, No-12)
discourse(Wind-18, no-14)
nn(North-17, dear-16)
nsubj(Wind-18, North-17)
ccomp(crying-9, Wind-18)
nsubj(believe-23, I-20)
aux(believe-23, ca-21)
neg(believe-23, n't-22)
parataxis(clung-2, believe-23)
dobj(believe-23, that-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB believe)
        (NP (PRP it))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
dobj(believe-4, it-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD wo) (RB n't)
      (VP (VB believe)
        (NP (PRP it))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, wo-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
dobj(believe-4, it-5)

(ROOT
  (S
    (NP (DT That))
    (VP (MD would)
      (VP (VB kill)
        (NP (PRP me))))
    (. .)))

nsubj(kill-3, That-1)
aux(kill-3, would-2)
root(ROOT-0, kill-3)
dobj(kill-3, me-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP love)
        (NP (PRP you))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB love)
          (NP (PRP me))
          (, ,)
          (S
            (ADJP (RB else))
            (SBAR
              (WHADVP (WRB how))
              (S
                (VP (VBD did)
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBP come)
                        (S
                          (VP (TO to)
                            (VP (VB love)
                              (NP (PRP you)))))))))))))))
    (. ?)))

nsubj(love-2, I-1)
root(ROOT-0, love-2)
dobj(love-2, you-3)
nsubj(love-8, you-6)
aux(love-8, must-7)
conj_and(love-2, love-8)
dobj(love-8, me-9)
dep(did-13, else-11)
advmod(did-13, how-12)
dep(love-8, did-13)
nsubj(come-15, I-14)
nsubj(love-17, I-14)
ccomp(did-13, come-15)
aux(love-17, to-16)
xcomp(come-15, love-17)
dobj(love-17, you-18)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (PRP you))
      (VP (VB know)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB put)
                (PP (IN on)
                  (NP (PDT such) (DT a) (JJ beautiful) (NN face)))
                (SBAR (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VBD did) (RB not)
                      (VP (VB love)
                        (NP
                          (NP (PRP me))
                          (CC and)
                          (NP (DT the) (NN rest)))))))))))))
    (. ?)))

advmod(know-4, How-1)
aux(know-4, could-2)
nsubj(know-4, you-3)
nsubj(put-7, you-3)
root(ROOT-0, know-4)
advmod(put-7, how-5)
aux(put-7, to-6)
ccomp(know-4, put-7)
xcomp(know-4, put-7)
predet(face-12, such-9)
det(face-12, a-10)
amod(face-12, beautiful-11)
prep_on(put-7, face-12)
mark(love-17, if-13)
nsubj(love-17, you-14)
aux(love-17, did-15)
neg(love-17, not-16)
advcl(put-7, love-17)
dobj(love-17, me-18)
det(rest-21, the-20)
dobj(love-17, rest-21)
conj_and(me-18, rest-21)

(ROOT
  (INTJ (UH No) (. .)))

root(ROOT-0, No-1)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD may)
        (VP (VB sink)
          (PP (IN as)
            (NP (JJ many) (NNS ships)))
          (SBAR (IN as)
            (S
              (NP (PRP you))
              (VP (VBP like)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD wo) (RB n't)
        (VP (VB say)
          (NP (DT another) (NN word)))))
    (. .)))

nsubj(sink-3, You-1)
aux(sink-3, may-2)
root(ROOT-0, sink-3)
amod(ships-6, many-5)
prep_as(sink-3, ships-6)
mark(like-9, as-7)
nsubj(like-9, you-8)
advcl(sink-3, like-9)
nsubj(say-15, I-12)
aux(say-15, wo-13)
neg(say-15, n't-14)
conj_and(sink-3, say-15)
det(word-17, another-16)
dobj(say-15, word-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD shall)
                (VP (VB like)
                  (S
                    (VP (TO to)
                      (VP (VB see)
                        (NP (PRP it))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .) ('' '')))

nsubj(say-4, I-1)
aux(say-4, ca-2)
neg(say-4, n't-3)
ccomp(know-13, say-4)
nsubj(like-7, I-5)
nsubj(see-9, I-5)
aux(like-7, shall-6)
ccomp(say-4, like-7)
aux(see-9, to-8)
xcomp(like-7, see-9)
dobj(see-9, it-10)
nsubj(know-13, you-12)
root(ROOT-0, know-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (NP (PDT quite) (DT another) (NN thing))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP North) (NNP Wind))
        (: ;)
        (CC and)
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP (VBD spoke)
              (SBAR
                (S
                  (NP (PRP she))
                  (VP
                    (VP (VBD gave)
                      (NP (CD one))
                      (NP (NN spring))
                      (PP (IN from)
                        (NP
                          (NP (DT the) (NN roof))
                          (PP (IN of)
                            (NP (DT the) (NN hay-loft))))))
                    (, ,)
                    (CC and)
                    (VP (VBD rushed)
                      (PRT (RP up))
                      (PP (IN into)
                        (NP (DT the) (NNS clouds))))))))))
        (, ,)
        (PP (IN with)
          (NP
            (NP (NNP Diamond))
            (PP (IN on)
              (NP (PRP$ her) (JJ left) (NN arm)))))))
    (NP
      (NP (NN close))
      (PP (TO to)
        (NP (PRP$ her) (NN heart))))
    (. .)))

nsubj(thing-6, That-2)
cop(thing-6, 's-3)
predet(thing-6, quite-4)
det(thing-6, another-5)
ccomp(said-9, thing-6)
root(ROOT-0, said-9)
nn(Wind-11, North-10)
dobj(said-9, Wind-11)
mark(spoke-16, as-14)
nsubj(spoke-16, she-15)
dobj(said-9, spoke-16)
conj_and(Wind-11, spoke-16)
nsubj(gave-18, she-17)
nsubj(rushed-29, she-17)
ccomp(spoke-16, gave-18)
dobj(gave-18, one-19)
tmod(gave-18, spring-20)
det(roof-23, the-22)
prep_from(gave-18, roof-23)
det(hay-loft-26, the-25)
prep_of(roof-23, hay-loft-26)
ccomp(spoke-16, rushed-29)
conj_and(gave-18, rushed-29)
prt(rushed-29, up-30)
det(clouds-33, the-32)
prep_into(rushed-29, clouds-33)
prep_with(spoke-16, Diamond-36)
poss(arm-40, her-38)
amod(arm-40, left-39)
prep_on(Diamond-36, arm-40)
nsubj(said-9, close-41)
poss(heart-44, her-43)
prep_to(close-41, heart-44)

(ROOT
  (S (CC And)
    (SBAR (RB as) (IN if)
      (S
        (NP (DT the) (NNS clouds))
        (VP (VBD knew)
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN come))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP burst)
      (PP (IN into)
        (NP
          (NP (DT a) (JJ fresh) (NN jubilation))
          (PP (IN of)
            (NP (JJ thunderous) (NN light))))))
    (. .)))

cc(burst-12, And-1)
advmod(knew-6, as-2)
mark(knew-6, if-3)
det(clouds-5, the-4)
nsubj(knew-6, clouds-5)
advcl(burst-12, knew-6)
nsubj(come-9, she-7)
aux(come-9, had-8)
ccomp(knew-6, come-9)
nsubj(burst-12, they-11)
root(ROOT-0, burst-12)
det(jubilation-16, a-14)
amod(jubilation-16, fresh-15)
prep_into(burst-12, jubilation-16)
amod(light-19, thunderous-18)
prep_of(jubilation-16, light-19)

(ROOT
  (S
    (PP (IN For)
      (NP (DT a) (JJ few) (NNS moments)))
    (PRN (, ,)
      (S
        (NP (NNP Diamond))
        (VP (VBD seemed)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN borne)
                  (PRT (RP up))
                  (PP (IN through)
                    (NP
                      (NP (DT the) (NNS depths))
                      (PP (IN of)
                        (NP
                          (NP
                            (NP (DT an) (NN ocean))
                            (PP (IN of)
                              (NP (JJ dazzling) (NN flame))))
                          (: ;)
                          (NP (DT the) (JJ next))))))))))))
      (, ,))
    (NP (DT the) (NNS winds))
    (VP (VBD were)
      (VP (VBG writhing)
        (PRT (RP around))
        (NP (PRP him))
        (PP (IN like)
          (NP
            (NP (DT a) (NN storm))
            (PP (IN of)
              (NP (NNS serpents)))))))
    (. .)))

det(moments-4, a-2)
amod(moments-4, few-3)
prep_for(writhing-28, moments-4)
nsubj(seemed-7, Diamond-6)
nsubjpass(borne-10, Diamond-6)
parataxis(writhing-28, seemed-7)
aux(borne-10, to-8)
auxpass(borne-10, be-9)
xcomp(seemed-7, borne-10)
prt(borne-10, up-11)
det(depths-14, the-13)
prep_through(borne-10, depths-14)
det(ocean-17, an-16)
prep_of(depths-14, ocean-17)
amod(flame-20, dazzling-19)
prep_of(ocean-17, flame-20)
det(next-23, the-22)
dep(ocean-17, next-23)
det(winds-26, the-25)
nsubj(writhing-28, winds-26)
aux(writhing-28, were-27)
root(ROOT-0, writhing-28)
prt(writhing-28, around-29)
dobj(writhing-28, him-30)
det(storm-33, a-32)
prep_like(writhing-28, storm-33)
prep_of(storm-33, serpents-35)

(ROOT
  (S
    (S (IN For)
      (NP (PRP they))
      (VP (VBD were)
        (PP (IN in)
          (NP
            (NP (DT the) (NN midst))
            (PP (IN of)
              (NP (DT the) (NNS clouds)
                (CC and)
                (NNS mists)))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP
          (NP (PRP they))
          (PP (IN of)
            (NP (NN course))))
        (VP (VBD took)
          (NP
            (NP (DT the) (NNS shapes))
            (PP (IN of)
              (NP (DT the) (NN wind))))
          (, ,)
          (S
            (VP
              (VP (VBG eddying)
                (CC and)
                (VBG wreathing))
              (CC and)
              (VP
                (VP (VBG whirling)
                  (CC and)
                  (VBG shooting))
                (CC and)
                (VP (VBG dashing) (IN about)
                  (PP (IN like)
                    (NP
                      (ADJP (JJ grey)
                        (CC and)
                        (JJ black))
                      (NN water)))))))
          (, ,)
          (SBAR (RB so) (IN that)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (SBAR (RB as) (IN if)
                  (S
                    (NP
                      (NP (DT the) (NN wind))
                      (SBAR
                        (S
                          (NP (PRP itself))
                          (VP (VBD had)
                            (VP (VBN taken))))))
                    (VP (VBP shape)))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD saw)
          (NP (DT the)
            (ADJP (JJ grey)
              (CC and)
              (JJ black))
            (NN wind))
          (S
            (VP (VBG tossing)
              (CC and)
              (VBG raving)
              (NP
                (NP
                  (ADJP (RBS most) (JJ madly))
                  (DT all))
                (PP (IN about)
                  (NP (PRP him)))))))))
    (. .)))

dep(were-3, For-1)
nsubj(were-3, they-2)
root(ROOT-0, were-3)
det(midst-6, the-5)
prep_in(were-3, midst-6)
det(clouds-9, the-8)
prep_of(midst-6, clouds-9)
prep_of(midst-6, mists-11)
conj_and(clouds-9, mists-11)
nsubj(took-17, they-14)
prep_of(they-14, course-16)
conj_and(were-3, took-17)
det(shapes-19, the-18)
dobj(took-17, shapes-19)
det(wind-22, the-21)
prep_of(shapes-19, wind-22)
dep(took-17, eddying-24)
dep(took-17, wreathing-26)
conj_and(eddying-24, wreathing-26)
dep(took-17, whirling-28)
conj_and(eddying-24, whirling-28)
conj_and(eddying-24, shooting-30)
conj_and(whirling-28, shooting-30)
conj_and(eddying-24, dashing-32)
conj_and(whirling-28, dashing-32)
dep(dashing-32, about-33)
amod(water-38, grey-35)
conj_and(grey-35, black-37)
amod(water-38, black-37)
prep_like(dashing-32, water-38)
advmod(was-43, so-40)
mark(was-43, that-41)
nsubj(was-43, it-42)
advcl(took-17, was-43)
advmod(shape-51, as-44)
mark(shape-51, if-45)
det(wind-47, the-46)
nsubj(shape-51, wind-47)
nsubj(taken-50, itself-48)
aux(taken-50, had-49)
rcmod(wind-47, taken-50)
advcl(was-43, shape-51)
nsubj(saw-55, he-54)
conj_and(were-3, saw-55)
conj_and(took-17, saw-55)
det(wind-60, the-56)
amod(wind-60, grey-57)
conj_and(grey-57, black-59)
amod(wind-60, black-59)
dobj(saw-55, wind-60)
xcomp(saw-55, tossing-61)
xcomp(saw-55, raving-63)
conj_and(tossing-61, raving-63)
advmod(madly-65, most-64)
dobj(tossing-61, madly-65)
dep(madly-65, all-66)
prep_about(madly-65, him-68)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP it))
      (VP (VBD blinded)
        (NP (PRP him))
        (PP (IN by)
          (S
            (VP (VBG smiting)
              (NP (PRP him))
              (PP (IN upon)
                (NP (DT the) (NNS eyes))))))))
    (: ;)
    (S
      (ADVP (RB now))
      (NP (PRP it))
      (VP (VBD deafened)
        (NP (PRP him))
        (PP (IN by)
          (S
            (VP (VBG bellowing)
              (PP (IN in)
                (NP (PRP$ his) (NNS ears))))))))
    (: ;)
    (SBAR (IN for)
      (FRAG
        (S
          (SBAR (RB even)
            (WHADVP (WRB when))
            (S
              (NP (DT the) (NN thunder))
              (VP (VBD came)
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD knew)
                      (ADVP (RB now))
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (VBD was)
                            (NP
                              (NP (DT the) (NNS billows))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (JJ great) (NN ocean))
                                  (PP (IN of)
                                    (NP
                                      (NP (DT the) (NN air))
                                      (VP (VBG dashing)
                                        (PP (IN against)
                                          (NP
                                            (NP (DT each) (JJ other))
                                            (PP (IN in)
                                              (NP (PRP$ their) (NN haste)
                                                (S
                                                  (VP (TO to)
                                                    (VP (VB fill)
                                                      (NP (DT the) (JJ hollow) (NN scooped))
                                                      (PRT (RP out))
                                                      (PP (IN by)
                                                        (NP (DT the) (NN lightning)))))))))))))))))))))))))
          (: ;)
          (ADVP (RB now))
          (NP (PRP it))
          (VP (VBD took)
            (NP (PRP$ his) (NN breath))
            (ADVP (RB quite) (RB away))
            (PP (IN by)
              (S
                (VP (VBG sucking)
                  (NP (PRP it))
                  (PP (IN from)
                    (NP (PRP$ his) (NN body)))
                  (PP (IN with)
                    (NP
                      (NP (DT the) (NN speed))
                      (PP (IN of)
                        (NP (PRP$ its) (NN rush))))))))))))
    (. .)))

advmod(blinded-3, Now-1)
nsubj(blinded-3, it-2)
root(ROOT-0, blinded-3)
dobj(blinded-3, him-4)
prepc_by(blinded-3, smiting-6)
dobj(smiting-6, him-7)
det(eyes-10, the-9)
prep_upon(smiting-6, eyes-10)
advmod(deafened-14, now-12)
nsubj(deafened-14, it-13)
parataxis(blinded-3, deafened-14)
dobj(deafened-14, him-15)
prepc_by(deafened-14, bellowing-17)
poss(ears-20, his-19)
prep_in(bellowing-17, ears-20)
mark(took-62, for-22)
advmod(came-27, even-23)
advmod(came-27, when-24)
det(thunder-26, the-25)
nsubj(came-27, thunder-26)
advcl(took-62, came-27)
nsubj(knew-29, he-28)
ccomp(came-27, knew-29)
advmod(knew-29, now-30)
mark(billows-35, that-31)
nsubj(billows-35, it-32)
cop(billows-35, was-33)
det(billows-35, the-34)
ccomp(knew-29, billows-35)
det(ocean-39, the-37)
amod(ocean-39, great-38)
prep_of(billows-35, ocean-39)
det(air-42, the-41)
prep_of(ocean-39, air-42)
vmod(air-42, dashing-43)
det(other-46, each-45)
prep_against(dashing-43, other-46)
poss(haste-49, their-48)
prep_in(other-46, haste-49)
aux(fill-51, to-50)
vmod(haste-49, fill-51)
det(scooped-54, the-52)
amod(scooped-54, hollow-53)
dobj(fill-51, scooped-54)
prt(fill-51, out-55)
det(lightning-58, the-57)
prep_by(fill-51, lightning-58)
advmod(took-62, now-60)
nsubj(took-62, it-61)
parataxis(blinded-3, took-62)
poss(breath-64, his-63)
dobj(took-62, breath-64)
advmod(away-66, quite-65)
advmod(took-62, away-66)
prepc_by(took-62, sucking-68)
dobj(sucking-68, it-69)
poss(body-72, his-71)
prep_from(sucking-68, body-72)
det(speed-75, the-74)
prep_with(sucking-68, speed-75)
poss(rush-78, its-77)
prep_of(speed-75, rush-78)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD did) (RB not)
      (VP (VB mind)
        (NP (PRP it))))
    (. .)))

cc(mind-5, But-1)
nsubj(mind-5, he-2)
aux(mind-5, did-3)
neg(mind-5, not-4)
root(ROOT-0, mind-5)
dobj(mind-5, it-6)

(ROOT
  (S
    (S
      (NP (PRP He))
      (ADVP (RB only))
      (VP
        (VP (VBD gasped)
          (ADVP (RB first)))
        (CC and)
        (VP
          (ADVP (RB then))
          (VBD laughed))
        (, ,)
        (SBAR (IN for)
          (S
            (NP
              (NP (DT the) (NN arm))
              (PP (IN of)
                (NP (NNP North) (NNP Wind))))
            (VP (VBD was)
              (PP (IN about)
                (NP (PRP him))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBG leaning)
          (PP (IN against)
            (NP (PRP$ her) (NN bosom))))))
    (. .)))

nsubj(gasped-3, He-1)
nsubj(laughed-7, He-1)
advmod(gasped-3, only-2)
root(ROOT-0, gasped-3)
advmod(gasped-3, first-4)
advmod(laughed-7, then-6)
conj_and(gasped-3, laughed-7)
mark(was-15, for-9)
det(arm-11, the-10)
nsubj(was-15, arm-11)
nn(Wind-14, North-13)
prep_of(arm-11, Wind-14)
advcl(gasped-3, was-15)
prep_about(was-15, him-17)
nsubj(leaning-22, he-20)
aux(leaning-22, was-21)
conj_and(gasped-3, leaning-22)
poss(bosom-25, her-24)
prep_against(leaning-22, bosom-25)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB quite) (JJ impossible)
        (PP (IN for)
          (NP (PRP me))))
      (S
        (VP (TO to)
          (VP (VB describe)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP he))
                (VP (VBD saw))))))))
    (. .)))

nsubj(impossible-4, It-1)
nsubj(describe-8, It-1)
cop(impossible-4, is-2)
advmod(impossible-4, quite-3)
root(ROOT-0, impossible-4)
prep_for(impossible-4, me-6)
aux(describe-8, to-7)
xcomp(impossible-4, describe-8)
dobj(saw-11, what-9)
nsubj(saw-11, he-10)
ccomp(describe-8, saw-11)

(ROOT
  (SQ (VBD Did)
    (NP (PRP you))
    (VP
      (ADVP (RB ever))
      (VB watch)
      (NP (DT a) (JJ great) (NN wave) (NN shoot))
      (PP (IN into)
        (NP (DT a) (JJ winding) (NN passage)))
      (PP (IN amongst)
        (NP (NNS rocks))))
    (. ?)))

aux(watch-4, Did-1)
nsubj(watch-4, you-2)
advmod(watch-4, ever-3)
root(ROOT-0, watch-4)
det(shoot-8, a-5)
amod(shoot-8, great-6)
nn(shoot-8, wave-7)
dobj(watch-4, shoot-8)
det(passage-12, a-10)
amod(passage-12, winding-11)
prep_into(watch-4, passage-12)
prep_amongst(watch-4, rocks-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (ADVP (RB ever))
        (VP (VBD did))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (VP (VB see)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN water))
            (VP (VBD rushed)
              (NP (DT every) (NN way))
              (PP (IN at)
                (NP
                  (NP (RB once))
                  (, ,)
                  (NP
                    (NP (DT some))
                    (PP (IN of)
                      (S
                        (NP (PRP it))
                        (ADVP (RB even))
                        (VP
                          (VP (VBG turning)
                            (ADVP (RB back)))
                          (CC and)
                          (VP (VBG opposing)
                            (NP
                              (NP (DT the) (NN rest))
                              (: ;)
                              (NP
                                (NP (JJR greater) (NN confusion))
                                (SBAR
                                  (S
                                    (NP (PRP you))
                                    (VP (MD might)
                                      (VP (VB see)
                                        (PP
                                          (ADVP (RB nowhere))
                                          (IN except) (IN in)
                                          (NP
                                            (NP (DT a) (NN crowd))
                                            (PP (IN of)
                                              (NP
                                                (ADJP (VBN frightened))
                                                (NNS people)))))))))))))))))))))))
    (. .)))

mark(did-4, If-1)
nsubj(did-4, you-2)
advmod(did-4, ever-3)
advcl(see-8, did-4)
nsubj(see-8, you-6)
aux(see-8, would-7)
root(ROOT-0, see-8)
mark(rushed-12, that-9)
det(water-11, the-10)
nsubj(rushed-12, water-11)
ccomp(see-8, rushed-12)
det(way-14, every-13)
dobj(rushed-12, way-14)
prep(rushed-12, at-15)
pobj(at-15, once-16)
appos(once-16, some-18)
nsubj(turning-22, it-20)
nsubj(opposing-25, it-20)
advmod(turning-22, even-21)
prepc_of(some-18, turning-22)
advmod(turning-22, back-23)
prepc_of(some-18, opposing-25)
conj_and(turning-22, opposing-25)
det(rest-27, the-26)
dobj(opposing-25, rest-27)
amod(confusion-30, greater-29)
dep(rest-27, confusion-30)
nsubj(see-33, you-31)
aux(see-33, might-32)
rcmod(confusion-30, see-33)
advmod(see-33, nowhere-34)
dep(see-33, except-35)
det(crowd-38, a-37)
prep_in(see-33, crowd-38)
amod(people-41, frightened-40)
prep_of(crowd-38, people-41)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (DT the) (NN wind))
    (VP (VBD was)
      (PP (IN like)
        (NP (DT that)))
      (, ,)
      (PP (IN except)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP
              (VP (VBD went)
                (ADVP (RB much) (RBR faster)))
              (, ,)
              (CC and)
              (ADVP (RB therefore))
              (VP (VBD was)
                (ADVP (RB much))
                (VP
                  (VP (VBN wilder) (, ,)
                    (CC and)
                    (VBN twisted)
                    (CC and)
                    (VBN shot)
                    (CC and)
                    (VBN curled)
                    (CC and)
                    (VBN dodged)
                    (CC and)
                    (VBN clashed))
                  (CC and)
                  (VP (VBN raved)
                    (ADJP
                      (ADJP
                        (NP (CD ten) (NNS times))
                        (RBR more) (JJ madly))
                      (PP (IN than)
                        (NP
                          (NP (NN anything) (RB else))
                          (PP (IN in)
                            (NP (NN creation))))))
                    (PP (IN except)
                      (NP (JJ human) (NNS passions)))))))))))
    (. .)))

discourse(was-5, Well-1)
det(wind-4, the-3)
nsubj(was-5, wind-4)
root(ROOT-0, was-5)
prep_like(was-5, that-7)
mark(went-12, that-10)
nsubj(went-12, it-11)
nsubjpass(wilder-20, it-11)
prepc_except(was-5, went-12)
advmod(faster-14, much-13)
advmod(went-12, faster-14)
advmod(wilder-20, therefore-17)
auxpass(wilder-20, was-18)
advmod(wilder-20, much-19)
prepc_except(was-5, wilder-20)
conj_and(went-12, wilder-20)
conj_and(went-12, twisted-23)
conj_and(wilder-20, twisted-23)
conj_and(went-12, shot-25)
conj_and(wilder-20, shot-25)
conj_and(went-12, curled-27)
conj_and(wilder-20, curled-27)
conj_and(went-12, dodged-29)
conj_and(wilder-20, dodged-29)
conj_and(went-12, clashed-31)
conj_and(wilder-20, clashed-31)
conj_and(went-12, raved-33)
conj_and(wilder-20, raved-33)
num(times-35, ten-34)
dep(madly-37, times-35)
advmod(madly-37, more-36)
acomp(raved-33, madly-37)
prep_than(madly-37, anything-39)
advmod(anything-39, else-40)
prep_in(anything-39, creation-42)
amod(passions-45, human-44)
prep_except(raved-33, passions-45)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD saw)
      (NP
        (NP (DT the) (NNS threads))
        (PP (IN of)
          (NP
            (NP (DT the) (NN lady) (POS 's))
            (NN hair)
            (S
              (VP (VBG streaking)
                (S
                  (NP (PRP it))
                  (NP (DT all)))))))))
    (. .)))

nsubj(saw-2, Diamond-1)
root(ROOT-0, saw-2)
det(threads-4, the-3)
dobj(saw-2, threads-4)
det(lady-7, the-6)
poss(hair-9, lady-7)
prep_of(threads-4, hair-9)
dep(hair-9, streaking-10)
nsubj(all-12, it-11)
xcomp(streaking-10, all-12)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS parts))
        (ADVP (RB indeed))))
    (NP (PRP he))
    (VP (MD could) (RB not)
      (VP (VB tell)
        (NP
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (NP (NN hair)))))
          (CC and)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (NP (JJ black) (NN storm)
                  (CC and)
                  (NN vapour))))))))
    (. .)))

prep_in(tell-7, parts-2)
advmod(parts-2, indeed-3)
nsubj(tell-7, he-4)
aux(tell-7, could-5)
neg(tell-7, not-6)
root(ROOT-0, tell-7)
nsubj(hair-10, which-8)
cop(hair-10, was-9)
dobj(tell-7, hair-10)
nsubj(storm-15, which-12)
cop(storm-15, was-13)
amod(storm-15, black-14)
dobj(tell-7, storm-15)
conj_and(hair-10, storm-15)
conj_and(hair-10, vapour-17)
conj_and(storm-15, vapour-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD seemed)
      (ADVP (RB sometimes))
      (SBAR (IN that)
        (S
          (NP
            (NP (PDT all) (DT the) (JJ great) (NNS billows))
            (PP (IN of)
              (NP (JJ mist-muddy) (NN wind))))
          (VP (VBD were)
            (VP (VBN woven)
              (PRT (RP out))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ crossing) (NNS lines))
                  (PP (IN of)
                    (NP
                      (NP (NNP North) (NNP Wind) (POS 's))
                      (JJ infinite) (NN hair)))))
              (, ,)
              (S
                (VP (VBG sweeping)
                  (PP (IN in)
                    (NP (JJ endless) (NNS intertwistings))))))))))
    (. .)))

nsubj(seemed-2, It-1)
root(ROOT-0, seemed-2)
advmod(seemed-2, sometimes-3)
mark(woven-13, that-4)
predet(billows-8, all-5)
det(billows-8, the-6)
amod(billows-8, great-7)
nsubjpass(woven-13, billows-8)
amod(wind-11, mist-muddy-10)
prep_of(billows-8, wind-11)
auxpass(woven-13, were-12)
ccomp(seemed-2, woven-13)
det(lines-18, the-16)
amod(lines-18, crossing-17)
prep_out_of(woven-13, lines-18)
nn(Wind-21, North-20)
poss(hair-24, Wind-21)
amod(hair-24, infinite-23)
prep_of(lines-18, hair-24)
xcomp(woven-13, sweeping-26)
amod(intertwistings-29, endless-28)
prep_in(sweeping-26, intertwistings-29)

(ROOT
  (S (CC And)
    (S
      (NP (NNP Diamond))
      (VP (VBD felt)
        (SBAR (IN as)
          (S
            (NP (DT the) (NN wind))
            (VP (VBD seized)
              (PP (IN on)
                (NP
                  (NP (PRP$ his) (NN hair))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP (PRP$ his) (NN mother))
                      (VP (VBD kept)
                        (ADVP (RB rather) (RB long))
                        (, ,)
                        (SBAR (RB as) (IN if)
                          (S
                            (NP (PRP he))
                            (ADVP (RB too))
                            (VP (VBD was)
                              (NP
                                (NP (DT a) (NN part))
                                (PP (IN of)
                                  (NP (DT the) (NN storm)))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT some))
        (PP (IN of)
          (NP (PRP$ its) (NN life))))
      (VP (VBD went)
        (PRT (RP out))
        (PP (IN from)
          (NP (PRP him)))))
    (. .)))

nsubj(felt-3, Diamond-2)
root(ROOT-0, felt-3)
mark(seized-7, as-4)
det(wind-6, the-5)
nsubj(seized-7, wind-6)
advcl(felt-3, seized-7)
poss(hair-10, his-9)
prep_on(seized-7, hair-10)
dobj(kept-15, hair-10)
poss(mother-14, his-13)
nsubj(kept-15, mother-14)
rcmod(hair-10, kept-15)
advmod(long-17, rather-16)
advmod(kept-15, long-17)
advmod(part-25, as-19)
mark(part-25, if-20)
nsubj(part-25, he-21)
advmod(part-25, too-22)
cop(part-25, was-23)
det(part-25, a-24)
advcl(kept-15, part-25)
det(storm-28, the-27)
prep_of(part-25, storm-28)
nsubj(went-35, some-31)
poss(life-34, its-33)
prep_of(some-31, life-34)
conj_and(felt-3, went-35)
prt(went-35, out-36)
prep_from(went-35, him-38)

(ROOT
  (S (CC But)
    (NP (RB so) (JJ sheltered))
    (VP (VBD was)
      (NP (PRP he))
      (PP (IN by)
        (NP
          (NP
            (NP (NNP North) (NNP Wind) (POS 's))
            (NN arm)
            (CC and)
            (NN bosom))
          (SBAR (IN that)
            (SINV
              (ADVP (RB only))
              (PP (IN at)
                (NP
                  (NP (NNS times))
                  (, ,)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN fiercer) (NN onslaught))
                      (PP (IN of)
                        (NP (DT some) (JJ curl-billowed) (NN eddy)))))
                  (, ,)))
              (VBD did)
              (NP (PRP he))
              (VP (VB recognise)
                (PP (IN for)
                  (NP (DT a) (NN moment)))
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (JJ wild))
                    (VP (VBD was)
                      (NP
                        (NP (DT the) (NN storm))
                        (SBAR
                          (WHPP (IN in)
                            (WHNP (WDT which)))
                          (S
                            (NP (PRP he))
                            (VP (VBD was)
                              (VP (VBN carried))))))))))))))
      (, ,)
      (S
        (VP (VBG nestling)
          (PP (IN in)
            (NP (PRP$ its) (JJ very) (NN core)
              (CC and)
              (NN formative) (NN centre))))))
    (. .)))

cc(he-5, But-1)
advmod(sheltered-3, so-2)
nsubj(he-5, sheltered-3)
cop(he-5, was-4)
root(ROOT-0, he-5)
nn(Wind-8, North-7)
poss(arm-10, Wind-8)
prep_by(he-5, arm-10)
prep_by(he-5, bosom-12)
conj_and(arm-10, bosom-12)
mark(recognise-29, that-13)
advmod(recognise-29, only-14)
prep_at(recognise-29, times-16)
det(onslaught-21, the-19)
nn(onslaught-21, fiercer-20)
prep_in(times-16, onslaught-21)
det(eddy-25, some-23)
amod(eddy-25, curl-billowed-24)
prep_of(onslaught-21, eddy-25)
aux(recognise-29, did-27)
nsubj(recognise-29, he-28)
dep(arm-10, recognise-29)
det(moment-32, a-31)
prep_for(recognise-29, moment-32)
advmod(storm-37, how-33)
nsubj(storm-37, wild-34)
cop(storm-37, was-35)
det(storm-37, the-36)
ccomp(recognise-29, storm-37)
prep_in(carried-42, storm-37)
nsubjpass(carried-42, he-40)
auxpass(carried-42, was-41)
rcmod(storm-37, carried-42)
vmod(he-5, nestling-44)
poss(core-48, its-46)
amod(core-48, very-47)
prep_in(nestling-44, core-48)
nn(centre-51, formative-50)
prep_in(nestling-44, centre-51)
conj_and(core-48, centre-51)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD seemed)
      (PP (TO to)
        (NP (NNP Diamond)))
      (ADVP (RB likewise))
      (SBAR
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBD were)
              (NP
                (NP (NNS motionless))
                (PP (IN in)
                  (NP (DT this) (NN centre)))))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP
              (NP (PDT all) (DT the) (NN confusion))
              (CC and)
              (NP (NN fighting)))
            (VP (VBD went)
              (PRT (RP on))
              (PP (IN around)
                (NP (PRP them))))))))
    (. .)))

nsubj(seemed-2, It-1)
root(ROOT-0, seemed-2)
prep_to(seemed-2, Diamond-4)
advmod(seemed-2, likewise-5)
mark(motionless-9, that-6)
nsubj(motionless-9, they-7)
cop(motionless-9, were-8)
ccomp(seemed-2, motionless-9)
det(centre-12, this-11)
prep_in(motionless-9, centre-12)
mark(went-21, that-15)
predet(confusion-18, all-16)
det(confusion-18, the-17)
nsubj(went-21, confusion-18)
conj_and(confusion-18, fighting-20)
nsubj(went-21, fighting-20)
ccomp(seemed-2, went-21)
conj_and(motionless-9, went-21)
prt(went-21, on-22)
prep_around(went-21, them-24)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Flash))
        (PP (IN after)
          (NP (NN flash))))
      (VP (VBD illuminated)
        (NP (DT the) (JJ fierce) (NN chaos))
        (, ,)
        (S
          (VP (VBG revealing)
            (PP (IN in)
              (NP (JJ varied)
                (ADJP
                  (ADJP (JJ yellow)
                    (CC and)
                    (JJ blue)
                    (CC and)
                    (JJ grey))
                  (CC and)
                  (ADJP (RB dusky) (JJ red)
                    (NP (DT the) (NNS vapourous))))
                (NN contention)))))))
    (: ;)
    (S
      (NP
        (NP (NN peal))
        (PP (IN after)
          (NP
            (NP (NN peal))
            (PP (IN of)
              (NP (NN thunder))))))
      (VP (VBD tore)
        (NP (DT the) (JJ infinite) (NN waste))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD seemed)
        (PP (TO to)
          (NP (NNP Diamond)))
        (SBAR (IN that)
          (S
            (NP (NNP North))
            (VP (VBZ Wind)
              (PRN (CC and)
                (S
                  (NP (PRP he))
                  (VP (VBD were)
                    (NP (NNS motionless))
                    (, ,)
                    (ADVP (DT all)
                      (CC but)))))
              (NP (DT the) (NN hair)))))))
    (. .)))

nsubj(illuminated-4, Flash-1)
prep_after(Flash-1, flash-3)
root(ROOT-0, illuminated-4)
det(chaos-7, the-5)
amod(chaos-7, fierce-6)
dobj(illuminated-4, chaos-7)
vmod(illuminated-4, revealing-9)
amod(contention-22, varied-11)
dep(blue-14, yellow-12)
amod(contention-22, blue-14)
conj_and(blue-14, grey-16)
amod(contention-22, grey-16)
advmod(red-19, dusky-18)
conj_and(blue-14, red-19)
amod(contention-22, red-19)
det(vapourous-21, the-20)
dep(red-19, vapourous-21)
prep_in(revealing-9, contention-22)
nsubj(tore-29, peal-24)
prep_after(peal-24, peal-26)
prep_of(peal-26, thunder-28)
conj_but(illuminated-4, tore-29)
det(waste-32, the-30)
amod(waste-32, infinite-31)
dobj(tore-29, waste-32)
nsubj(seemed-36, it-35)
conj_but(illuminated-4, seemed-36)
prep_to(seemed-36, Diamond-38)
mark(Wind-41, that-39)
nsubj(Wind-41, North-40)
ccomp(seemed-36, Wind-41)
cc(motionless-45, and-42)
nsubj(motionless-45, he-43)
cop(motionless-45, were-44)
parataxis(Wind-41, motionless-45)
mwe(but-48, all-47)
advmod(motionless-45, but-48)
det(hair-50, the-49)
dobj(Wind-41, hair-50)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was) (RB not)
      (ADVP (RB so)))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
neg(was-2, not-3)
advmod(was-2, so-4)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (ADJP (JJ sweeping)
        (PP (IN with)
          (NP
            (NP (DT the) (NN speed))
            (PP (IN of)
              (NP
                (NP (DT the) (NN wind))
                (ADVP (PRP itself)))))))
      (PP (IN towards)
        (NP (DT the) (NN sea))))
    (. .)))

nsubj(sweeping-3, They-1)
cop(sweeping-3, were-2)
root(ROOT-0, sweeping-3)
det(speed-6, the-5)
prep_with(sweeping-3, speed-6)
det(wind-9, the-8)
prep_of(speed-6, wind-9)
advmod(wind-9, itself-10)
det(sea-13, the-12)
prep_towards(sweeping-3, sea-13)

(ROOT
  (S
    (NP (NNP CHAPTER))
    (VP (VBZ VII))
    (. .)))

nsubj(VII-2, CHAPTER-1)
root(ROOT-0, VII-2)

(ROOT
  (S
    (NP
      (NP (DT THE) (NNP CATHEDRAL))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP MUST) (RB not)
            (VP (VB go)
              (PP (IN on)
                (S
                  (VP (VBG describing)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (MD can) (RB not)
                          (VP (VB be)
                            (VP (VBN described)))))))))
              (, ,)
              (PP (IN for)
                (NP (NN nothing))))))))
    (VP (VBZ is)
      (ADJP (RBR more) (JJ wearisome)))
    (. .)))

det(CATHEDRAL-2, THE-1)
nsubj(wearisome-19, CATHEDRAL-2)
nsubj(go-6, I-3)
aux(go-6, MUST-4)
neg(go-6, not-5)
rcmod(CATHEDRAL-2, go-6)
prepc_on(go-6, describing-8)
nsubjpass(described-13, what-9)
aux(described-13, can-10)
neg(described-13, not-11)
auxpass(described-13, be-12)
ccomp(describing-8, described-13)
prep_for(go-6, nothing-16)
cop(wearisome-19, is-17)
advmod(wearisome-19, more-18)
root(ROOT-0, wearisome-19)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (PRP they))
        (VP (VBD reached)
          (NP (DT the) (NN sea)))))
    (, ,)
    (NP (NNP Diamond))
    (VP (VBD felt)
      (NP
        (NP (NNP North) (NNP Wind) (POS 's))
        (NN hair)
        (S
          (ADVP (RB just))
          (VP (VBG beginning)
            (S
              (VP (TO to)
                (VP (VB fall)
                  (PP (IN about)
                    (NP (PRP him))))))))))
    (. .)))

mark(reached-3, Before-1)
nsubj(reached-3, they-2)
advcl(felt-8, reached-3)
det(sea-5, the-4)
dobj(reached-3, sea-5)
nsubj(felt-8, Diamond-7)
root(ROOT-0, felt-8)
nn(Wind-10, North-9)
poss(hair-12, Wind-10)
dobj(felt-8, hair-12)
advmod(beginning-14, just-13)
dep(hair-12, beginning-14)
aux(fall-16, to-15)
xcomp(beginning-14, fall-16)
prep_about(fall-16, him-18)

(ROOT
  (S (`` ``)
    (S
      (S
        (VP (NNP Is)
          (S
            (NP (DT the) (NN storm))
            (ADJP (RB over)))))
      (, ,)
      (NP (NNP North))
      (VP (VBZ Wind)))
    (. ?) ('' '')))

ccomp(Wind-8, Is-2)
det(storm-4, the-3)
nsubj(over-5, storm-4)
xcomp(Is-2, over-5)
nsubj(Wind-8, North-7)
root(ROOT-0, Wind-8)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD called)
      (PRT (RP out)))
    (. .)))

nsubj(called-2, he-1)
root(ROOT-0, called-2)
prt(called-2, out-3)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No) (, ,) (UH Diamond))
    (. .)))

root(ROOT-0, No-2)
dep(No-2, Diamond-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB only))
      (VP (VBG waiting)
        (NP (DT a) (NN moment)
          (S
            (VP (TO to)
              (VP (VB set)
                (NP (PRP you))
                (PRT (RP down))))))))
    (. .)))

nsubj(waiting-4, I-1)
aux(waiting-4, am-2)
advmod(waiting-4, only-3)
root(ROOT-0, waiting-4)
det(moment-6, a-5)
dobj(waiting-4, moment-6)
aux(set-8, to-7)
vmod(moment-6, set-8)
dobj(set-8, you-9)
prt(set-8, down-10)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD would) (RB not)
        (VP (VB like)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP
                  (NP (DT the) (NN ship))
                  (VP (VBN sunk)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB give)
                (NP (PRP you))
                (NP (DT a) (NN place)
                  (S
                    (VP (TO to)
                      (VP (VB stop)
                        (PRT (RP in))
                        (SBAR (IN till)
                          (S
                            (NP (PRP I))
                            (VP (VBP come)
                              (ADVP (RB back))
                              (PP (IN for)
                                (NP (PRP you))))))))))))))))
    (. .) ('' '')))

nsubj(like-4, You-1)
nsubj(see-6, You-1)
aux(like-4, would-2)
neg(like-4, not-3)
root(ROOT-0, like-4)
aux(see-6, to-5)
xcomp(like-4, see-6)
det(ship-8, the-7)
dobj(see-6, ship-8)
vmod(ship-8, sunk-9)
nsubj(going-14, I-12)
nsubj(give-16, I-12)
aux(going-14, am-13)
conj_and(like-4, going-14)
aux(give-16, to-15)
xcomp(going-14, give-16)
iobj(give-16, you-17)
det(place-19, a-18)
dobj(give-16, place-19)
aux(stop-21, to-20)
vmod(place-19, stop-21)
prt(stop-21, in-22)
mark(come-25, till-23)
nsubj(come-25, I-24)
advcl(stop-21, come-25)
advmod(come-25, back-26)
prep_for(come-25, you-28)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (SINV
    (S
      (VP (VB thank)
        (NP (PRP you))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

ccomp(said-5, thank-1)
dobj(thank-1, you-2)
root(ROOT-0, said-5)
nsubj(said-5, Diamond-6)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB be)
          (ADJP (JJ sorry)
            (S
              (VP (TO to)
                (VP (VB leave)
                  (NP (PRP you)))))))))
    (PRN (, ,)
      (NP (NNP North))
      (VP (VBZ Wind))
      (, ,))
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD would)
        (ADVP (RB rather))
        (RB not)
        (VP (VB see)
          (S
            (NP (DT the) (NN ship))
            (VP (VB go)
              (PRT (RP down)))))))
    (. .)))

nsubj(sorry-5, I-2)
nsubj(leave-7, I-2)
aux(sorry-5, shall-3)
cop(sorry-5, be-4)
root(ROOT-0, sorry-5)
aux(leave-7, to-6)
xcomp(sorry-5, leave-7)
dobj(leave-7, you-8)
nsubj(Wind-11, North-10)
dep(sorry-5, Wind-11)
nsubj(see-18, I-14)
aux(see-18, would-15)
advmod(see-18, rather-16)
neg(see-18, not-17)
conj_but(sorry-5, see-18)
det(ship-20, the-19)
nsubj(go-21, ship-20)
ccomp(see-18, go-21)
prt(go-21, down-22)

(ROOT
  (S (CC And)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ afraid)
          (SBAR
            (S
              (NP (DT the) (JJ poor) (NNS people))
              (VP (MD will)
                (VP (VB cry))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB hear)
          (NP (PRP them)))))
    (. .)))

nsubj(afraid-4, I-2)
cop(afraid-4, 'm-3)
root(ROOT-0, afraid-4)
det(people-7, the-5)
amod(people-7, poor-6)
nsubj(cry-9, people-7)
aux(cry-9, will-8)
ccomp(afraid-4, cry-9)
nsubj(hear-14, I-12)
aux(hear-14, should-13)
conj_and(afraid-4, hear-14)
dobj(hear-14, them-15)

(ROOT
  (FRAG
    (INTJ (UH Oh))
    (, ,)
    (NP (NNP dear))
    (. !) ('' '')))

discourse(dear-3, Oh-1)
root(ROOT-0, dear-3)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (DT a) (JJ good) (JJ many) (NNS passengers))
          (PP (IN on)
            (NP (NN board))))))
    (: ;)
    (CC and)
    (S
      (S
        (VP (TO to)
          (VP (VB tell)
            (NP
              (NP (DT the) (NN truth))
              (, ,)
              (NP (NNP Diamond))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB care)
          (PP (IN about)
            (NP (PRP$ your) (NN hearing)))
          (NP
            (NP (DT the) (NN cry))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP speak)
                  (PP (IN of)))))))))
    (. .)))

expl(are-3, There-2)
root(ROOT-0, are-3)
det(passengers-7, a-4)
amod(passengers-7, good-5)
amod(passengers-7, many-6)
nsubj(are-3, passengers-7)
prep_on(passengers-7, board-9)
aux(tell-13, to-12)
advcl(care-22, tell-13)
det(truth-15, the-14)
dobj(tell-13, truth-15)
appos(truth-15, Diamond-17)
nsubj(care-22, I-19)
aux(care-22, do-20)
neg(care-22, n't-21)
conj_and(are-3, care-22)
poss(hearing-25, your-24)
prep_about(care-22, hearing-25)
det(cry-27, the-26)
dobj(care-22, cry-27)
prep_of(speak-29, cry-27)
nsubj(speak-29, you-28)
rcmod(cry-27, speak-29)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ afraid)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD would) (RB not)
              (VP (VB get)
                (NP (PRP it))
                (PRT (RP out))
                (PP (IN of)
                  (NP (PRP$ your) (JJ little) (NN head)))
                (PP
                  (ADVP (RB again))
                  (IN for)
                  (NP (DT a) (JJ long) (NN time)))))))))
    (. .) ('' '')))

nsubj(afraid-3, I-1)
cop(afraid-3, am-2)
root(ROOT-0, afraid-3)
nsubj(get-7, you-4)
aux(get-7, would-5)
neg(get-7, not-6)
ccomp(afraid-3, get-7)
dobj(get-7, it-8)
poss(head-13, your-11)
amod(head-13, little-12)
prep_out_of(get-7, head-13)
advmod(get-7, again-14)
det(time-18, a-16)
amod(time-18, long-17)
prep_for(get-7, time-18)

(ROOT
  (S (`` ``)
    (CC But)
    (SBAR
      (WHADVP (WRB how))
      (S
        (VP (MD can)
          (NP (PRP you))
          (S
            (VP (VB bear)
              (NP (PRP it))
              (ADVP (RB then)))))))
    (, ,)
    (NP (NNP North))
    (VP (VBZ Wind))
    (. ?)))

cc(Wind-11, But-2)
advmod(can-4, how-3)
advcl(Wind-11, can-4)
dobj(can-4, you-5)
dep(can-4, bear-6)
dobj(bear-6, it-7)
advmod(bear-6, then-8)
nsubj(Wind-11, North-10)
root(ROOT-0, Wind-11)

(ROOT
  (S (IN For)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ kind)))))))
    (. .)))

dep(sure-4, For-1)
nsubj(sure-4, I-2)
cop(sure-4, am-3)
root(ROOT-0, sure-4)
nsubj(kind-7, you-5)
cop(kind-7, are-6)
ccomp(sure-4, kind-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall)
      (ADVP (RB never))
      (VP (VB doubt)
        (NP (DT that))
        (ADVP (RB again))))
    (. .) ('' '')))

nsubj(doubt-4, I-1)
aux(doubt-4, shall-2)
neg(doubt-4, never-3)
root(ROOT-0, doubt-4)
dobj(doubt-4, that-5)
advmod(doubt-4, again-6)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB tell)
          (NP (PRP you))
          (NP
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP I))
                (VP (VBP am)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB bear)
                          (NP (PRP it)))))))))
            (, ,)
            (NP (NNP Diamond))))))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADVP (RB always))
        (VP (VBG hearing) (, ,)
          (PP (IN through)
            (NP (DT every) (NN noise)))
          (, ,)
          (PP (IN through)
            (NP
              (NP
                (NP (PDT all) (DT the) (NN noise))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP am)
                      (VP (VBG making)
                        (NP (PRP myself))
                        (ADVP (RB even)))))))
              (, ,)
              (NP
                (NP (DT the) (NN sound))
                (PP (IN of)
                  (NP (DT a) (JJ far-off) (NN song)))))))))
    (. .)))

nsubj(tell-4, I-2)
aux(tell-4, will-3)
root(ROOT-0, tell-4)
iobj(tell-4, you-5)
advmod(able-9, how-6)
nsubj(able-9, I-7)
nsubj(bear-11, I-7)
cop(able-9, am-8)
dep(Diamond-14, able-9)
aux(bear-11, to-10)
xcomp(able-9, bear-11)
dobj(bear-11, it-12)
dobj(tell-4, Diamond-14)
nsubj(hearing-19, I-16)
aux(hearing-19, am-17)
advmod(hearing-19, always-18)
parataxis(tell-4, hearing-19)
det(noise-23, every-22)
prep_through(hearing-19, noise-23)
predet(noise-28, all-26)
det(noise-28, the-27)
prep_through(hearing-19, noise-28)
nsubj(making-31, I-29)
aux(making-31, am-30)
rcmod(noise-28, making-31)
dobj(making-31, myself-32)
advmod(making-31, even-33)
det(sound-36, the-35)
appos(noise-28, sound-36)
det(song-40, a-38)
amod(song-40, far-off-39)
prep_of(sound-36, song-40)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (ADVP (RB exactly))
        (VP (VB know)
          (SBAR
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP it))
                (VP (VBZ is))))
            (, ,)
            (CC or)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP it))
                (VP (VBZ means))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB hear)
          (NP
            (NP
              (NP (RB much))
              (PP (IN of)
                (NP (PRP it))))
            (, ,) (RB only)
            (NP
              (NP (DT the) (NN odour))
              (PP (IN of)
                (NP (PRP$ its) (NN music)))))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP (VBD were) (, ,)
                (SBAR
                  (S
                    (S
                      (VP (VBG flitting)
                        (PRT (RP across))
                        (NP
                          (NP (DT the) (JJ great) (NNS billows))
                          (PP (IN of)
                            (NP (DT the) (NN ocean))))
                        (PP (IN outside)
                          (NP
                            (NP (DT this) (NN air))
                            (SBAR
                              (WHPP (IN in)
                                (WHNP (WDT which)))
                              (S
                                (NP (PRP I))
                                (VP (VBP make)
                                  (NP (PDT such) (DT a) (NN storm))
                                  (: ;)
                                  (CC but)
                                  (FRAG
                                    (SBAR
                                      (WHNP (WP what))
                                      (S
                                        (NP (PRP I))
                                        (VP (VBP do)
                                          (VP (VB hear)))))))))))))
                    (VP (VBZ is)
                      (ADJP (RB quite) (JJ enough))
                      (S
                        (VP (TO to)
                          (VP (VB make)
                            (S
                              (NP (PRP me))
                              (ADJP (JJ able)
                                (S
                                  (VP (TO to)
                                    (VP (VB bear)
                                      (NP (DT the) (NN cry))
                                      (PP (IN from)
                                        (NP (DT the) (VBG drowning) (NN ship))))))))))))))))))))
    (. .)))

nsubj(know-5, I-1)
aux(know-5, do-2)
neg(know-5, not-3)
advmod(know-5, exactly-4)
root(ROOT-0, know-5)
advmod(is-8, where-6)
nsubj(is-8, it-7)
ccomp(know-5, is-8)
dobj(means-13, what-11)
nsubj(means-13, it-12)
ccomp(know-5, means-13)
conj_or(is-8, means-13)
nsubj(hear-19, I-16)
aux(hear-19, do-17)
neg(hear-19, n't-18)
conj_and(know-5, hear-19)
dobj(hear-19, much-20)
prep_of(much-20, it-22)
advmod(much-20, only-24)
det(odour-26, the-25)
dep(much-20, odour-26)
poss(music-29, its-28)
prep_of(odour-26, music-29)
mark(were-33, as-31)
nsubj(were-33, it-32)
advcl(hear-19, were-33)
csubj(enough-61, flitting-35)
prt(flitting-35, across-36)
det(billows-39, the-37)
amod(billows-39, great-38)
dobj(flitting-35, billows-39)
det(ocean-42, the-41)
prep_of(billows-39, ocean-42)
det(air-45, this-44)
prep_outside(flitting-35, air-45)
prep_in(make-49, air-45)
nsubj(make-49, I-48)
rcmod(air-45, make-49)
predet(storm-52, such-50)
det(storm-52, a-51)
dobj(make-49, storm-52)
dobj(hear-58, what-55)
nsubj(hear-58, I-56)
aux(hear-58, do-57)
rcmod(air-45, hear-58)
conj_but(make-49, hear-58)
cop(enough-61, is-59)
advmod(enough-61, quite-60)
ccomp(were-33, enough-61)
aux(make-63, to-62)
xcomp(enough-61, make-63)
nsubj(able-65, me-64)
nsubj(bear-67, me-64)
xcomp(make-63, able-65)
aux(bear-67, to-66)
xcomp(able-65, bear-67)
det(cry-69, the-68)
dobj(bear-67, cry-69)
det(ship-73, the-71)
amod(ship-73, drowning-72)
prep_from(bear-67, ship-73)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (MD would)
      (S
        (NP (PRP you))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (MD could)
              (VP (VB hear)
                (NP (PRP it))))))))
    (. .) ('' '')))

dep(would-3, So-1)
nsubj(would-3, it-2)
root(ROOT-0, would-3)
dep(hear-8, you-4)
mark(hear-8, if-5)
nsubj(hear-8, you-6)
aux(hear-8, could-7)
dep(would-3, hear-8)
dobj(hear-8, it-9)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (NP (PRP it))
      (VP (MD would) (RB n't)))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (ADVP (RB stoutly)))
    (. .)))

discourse(would-5, No-2)
nsubj(would-5, it-4)
ccomp(returned-9, would-5)
neg(would-5, n't-6)
root(ROOT-0, returned-9)
dep(returned-9, Diamond-10)
advmod(Diamond-10, stoutly-12)

(ROOT
  (S
    (S (`` ``) (IN For)
      (NP (PRP they))
      (VP (MD would) (RB n't)
        (VP (VB hear)
          (NP
            (NP (DT the) (NN music))
            (PP (IN of)
              (NP (DT the) (JJ far-away) (NN song)))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP they))
          (VP (VBD did))))
      (, ,)
      (NP (PRP it))
      (VP (MD would) (RB n't)
        (VP (VB do)
          (S
            (NP (PRP them))
            (ADJP (DT any) (JJ good))))))
    (. .)))

dep(hear-6, For-2)
nsubj(hear-6, they-3)
aux(hear-6, would-4)
neg(hear-6, n't-5)
root(ROOT-0, hear-6)
det(music-8, the-7)
dobj(hear-6, music-8)
det(song-12, the-10)
amod(song-12, far-away-11)
prep_of(music-8, song-12)
mark(did-17, if-15)
nsubj(did-17, they-16)
advcl(do-22, did-17)
nsubj(do-22, it-19)
aux(do-22, would-20)
neg(do-22, n't-21)
conj_and(hear-6, do-22)
nsubj(good-25, them-23)
det(good-25, any-24)
xcomp(do-22, good-25)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)
        (NP (PRP you))))
    (CC and)
    (S
      (S
        (NP (PRP I))
        (VP (VBP are) (RB not)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN drowned))))))))
      (, ,)
      (CC and)
      (RB so)
      (S
        (NP (PRP we))
        (VP (MD might)
          (VP (VB enjoy)
            (NP (PRP it))))))
    (. .) ('' '')))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
dobj(see-2, you-3)
nsubj(going-8, I-5)
nsubjpass(drowned-11, I-5)
aux(going-8, are-6)
neg(going-8, not-7)
conj_and(see-2, going-8)
aux(drowned-11, to-9)
auxpass(drowned-11, be-10)
xcomp(going-8, drowned-11)
nsubj(enjoy-17, we-15)
aux(enjoy-17, might-16)
conj_and(see-2, enjoy-17)
conj_and(going-8, enjoy-17)
dobj(enjoy-17, it-18)

(ROOT
  (S (`` ``)
    (S (CC But)
      (NP (PRP you))
      (VP (VBP have)
        (ADVP (RB never))
        (VP (VBN heard)
          (NP (DT the) (NN psalm)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (JJ like))))))))
    (. .)))

nsubj(heard-6, you-3)
aux(heard-6, have-4)
neg(heard-6, never-5)
root(ROOT-0, heard-6)
det(psalm-8, the-7)
dobj(heard-6, psalm-8)
nsubj(know-14, you-11)
aux(know-14, do-12)
neg(know-14, n't-13)
conj_and(heard-6, know-14)
dobj(like-18, what-15)
nsubj(like-18, it-16)
cop(like-18, is-17)
ccomp(know-14, like-18)

(ROOT
  (S
    (ADVP (RB Somehow))
    (, ,)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB say)
        (SBAR
          (WHADVP (WRB how))
          (, ,)
          (S
            (NP (PRP it))
            (VP (VBZ tells)
              (NP (PRP me))
              (SBAR (IN that)
                (S
                  (NP (DT all))
                  (VP (VBZ is)
                    (ADJP (JJ right))
                    (: ;)
                    (SBAR (IN that)
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (VP (VBG coming)
                            (S
                              (VP (TO to)
                                (VP (VB swallow)
                                  (PRT (RP up))
                                  (NP (DT all) (NN cries)))))))))))))))))
    (. .) ('' '')))

advmod(say-6, Somehow-1)
nsubj(say-6, I-3)
aux(say-6, ca-4)
neg(say-6, n't-5)
root(ROOT-0, say-6)
advmod(tells-10, how-7)
nsubj(tells-10, it-9)
ccomp(say-6, tells-10)
dobj(tells-10, me-11)
mark(right-15, that-12)
nsubj(right-15, all-13)
cop(right-15, is-14)
ccomp(tells-10, right-15)
mark(coming-20, that-17)
nsubj(coming-20, it-18)
nsubj(swallow-22, it-18)
aux(coming-20, is-19)
ccomp(right-15, coming-20)
parataxis(right-15, coming-20)
aux(swallow-22, to-21)
xcomp(coming-20, swallow-22)
prt(swallow-22, up-23)
det(cries-25, all-24)
dobj(swallow-22, cries-25)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (SBAR
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD wo) (RB n't)
              (VP (VB do)
                (S
                  (NP (PRP them))
                  (ADJP (DT any) (JJ good)))))))
        (: --)
        (PRN
          (FRAG
            (NP (DT the) (NNS people)))))
      (, ,)
      (NP (PRP I))
      (VP (VBP mean)))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP (NNP Diamond))
    (. .)))

cc(mean-15, But-2)
nsubj(do-6, that-3)
aux(do-6, wo-4)
neg(do-6, n't-5)
advcl(mean-15, do-6)
nsubj(good-9, them-7)
det(good-9, any-8)
xcomp(do-6, good-9)
det(people-12, the-11)
dep(do-6, people-12)
nsubj(mean-15, I-14)
ccomp(persisted-18, mean-15)
root(ROOT-0, persisted-18)
nsubj(persisted-18, Diamond-19)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD must))
    (. .)))

nsubj(must-3, It-2)
root(ROOT-0, must-3)

(ROOT
  (SINV
    (S
      (NP (PRP It))
      (VP (MD must)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP North) (NNP Wind))
      (, ,)
      (NP (NNP hurriedly)))
    (. .)))

nsubj(must-2, It-1)
ccomp(said-5, must-2)
root(ROOT-0, said-5)
nn(Wind-7, North-6)
nsubj(said-5, Wind-7)
appos(Wind-7, hurriedly-9)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD would) (RB n't)
      (VP (VB be)
        (NP
          (NP (DT the) (NN song))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ seems)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (SBAR (IN if)
                        (S
                          (NP (PRP it))
                          (VP (VBD did) (RB not)
                            (VP
                              (VP (VB swallow)
                                (ADVP (IN up) (DT all))
                                (NP (PRP$ their) (NN fear)
                                  (CC and)
                                  (NN pain))
                                (ADVP (RB too)))
                              (, ,)
                              (CC and)
                              (VP (VB set)
                                (S
                                  (NP (PRP them))
                                  (VP (VBG singing)
                                    (NP (PRP it))
                                    (ADVP (PRP themselves))
                                    (PP (IN with)
                                      (NP (DT the) (NN rest)))))))))))))))))))
    (. .)))

nsubj(song-7, It-2)
aux(song-7, would-3)
neg(song-7, n't-4)
cop(song-7, be-5)
det(song-7, the-6)
root(ROOT-0, song-7)
nsubj(seems-9, it-8)
nsubj(be-11, it-8)
rcmod(song-7, seems-9)
aux(be-11, to-10)
xcomp(seems-9, be-11)
mark(swallow-16, if-12)
nsubj(swallow-16, it-13)
nsubj(set-26, it-13)
aux(swallow-16, did-14)
neg(swallow-16, not-15)
advcl(be-11, swallow-16)
advmod(swallow-16, up-17)
dep(up-17, all-18)
poss(fear-20, their-19)
dobj(swallow-16, fear-20)
dobj(swallow-16, pain-22)
conj_and(fear-20, pain-22)
advmod(swallow-16, too-23)
advcl(be-11, set-26)
conj_and(swallow-16, set-26)
nsubj(singing-28, them-27)
dep(set-26, singing-28)
dobj(singing-28, it-29)
advmod(singing-28, themselves-30)
det(rest-33, the-32)
prep_with(singing-28, rest-33)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD will))))))
    (. .)))

nsubj(sure-3, I-1)
cop(sure-3, am-2)
root(ROOT-0, sure-3)
nsubj(will-5, it-4)
ccomp(sure-3, will-5)

(ROOT
  (S (CC And)
    (VBP do)
    (NP (PRP you))
    (VP (VB know) (, ,)
      (SBAR (RB ever) (IN since)
        (S
          (NP (PRP I))
          (VP (VBD knew)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD had)
                  (NP
                    (NP (NN hair))
                    (, ,)
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ is) (, ,)
                          (ADVP (RB ever))
                          (SBAR (IN since)
                            (S
                              (NP (PRP it))
                              (VP (VBD began)
                                (S
                                  (VP (TO to)
                                    (VP (VB go)
                                      (PRT (RP out)
                                        (CC and)
                                        (RP away))
                                      (, ,)
                                      (SBAR (IN that)
                                        (S
                                          (NP (NN song))
                                          (VP (VBZ has)
                                            (VP (VBN been)
                                              (VP (VBG coming)
                                                (ADJP (JJ nearer)
                                                  (CC and)
                                                  (JJ nearer))))))))))))))))))))))))
    (. .)))

cc(know-4, And-1)
dep(know-4, do-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
advmod(knew-9, ever-6)
mark(knew-9, since-7)
nsubj(knew-9, I-8)
advcl(know-4, knew-9)
nsubj(had-11, I-10)
ccomp(knew-9, had-11)
dobj(had-11, hair-12)
nsubj(is-15, hair-12)
rcmod(hair-12, is-15)
advmod(is-15, ever-17)
mark(began-20, since-18)
nsubj(began-20, it-19)
nsubj(go-22, it-19)
advcl(is-15, began-20)
aux(go-22, to-21)
xcomp(began-20, go-22)
prt(go-22, out-23)
cc(out-23, and-24)
dep(out-23, away-25)
mark(coming-31, that-27)
nsubj(coming-31, song-28)
aux(coming-31, has-29)
aux(coming-31, been-30)
ccomp(go-22, coming-31)
acomp(coming-31, nearer-32)
acomp(coming-31, nearer-34)
conj_and(nearer-32, nearer-34)

(ROOT
  (S (RB Only)
    (NP (PRP I))
    (VP (MD must)
      (VP (VB say)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (SBAR
                (NP
                  (QP (DT some) (CD thousand))
                  (NNS years))
                (IN before)
                (S
                  (NP (PRP I))
                  (VP (VBD heard)
                    (NP (PRP it))))))))))
    (. .) ('' '')))

advmod(say-4, Only-1)
nsubj(say-4, I-2)
aux(say-4, must-3)
root(ROOT-0, say-4)
nsubj(was-6, it-5)
ccomp(say-4, was-6)
quantmod(thousand-8, some-7)
num(years-9, thousand-8)
dep(heard-12, years-9)
mark(heard-12, before-10)
nsubj(heard-12, I-11)
advcl(was-6, heard-12)
ccomp(was-6, heard-12)
dobj(heard-12, it-13)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB say)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (VP (VBG coming)
                (S
                  (VP (VBG nearer)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP you))
                        (VP (VBD did) (RB not)
                          (VP (VB hear)
                            (NP (PRP it))))))))))))))
    (. ?) ('' '')))

cc(say-6, But-2)
advmod(say-6, how-3)
aux(say-6, can-4)
nsubj(say-6, you-5)
root(ROOT-0, say-6)
nsubj(coming-9, it-7)
aux(coming-9, was-8)
ccomp(say-6, coming-9)
vmod(coming-9, nearer-10)
advmod(hear-15, when-11)
nsubj(hear-15, you-12)
aux(hear-15, did-13)
neg(hear-15, not-14)
advcl(nearer-10, hear-15)
dobj(hear-15, it-16)

(ROOT
  (S
    (VP (VBN asked)
      (S
        (VP (VBG doubting)
          (NP (JJ little) (NNP Diamond)))))
    (. .)))

root(ROOT-0, asked-1)
xcomp(asked-1, doubting-2)
amod(Diamond-4, little-3)
dobj(doubting-2, Diamond-4)

(ROOT
  (S (`` ``)
    (S
      (SBAR (IN Since)
        (S
          (NP (PRP I))
          (VP (VBD began)
            (S
              (VP (TO to)
                (VP (VB hear)
                  (NP (PRP it))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (VP (VBG growing)
                (ADVP (RBR louder))))))))
    (, ,)
    (ADVP (RB therefore))
    (S
      (NP (PRP I))
      (VP (VBP judge)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP (VBG coming) (NNS nearer)
                (CC and)
                (NNS nearer))
              (SBAR (IN until)
                (S
                  (NP (PRP I))
                  (VP (VBD did)
                    (VP (VB hear)
                      (NP (PRP it))
                      (ADVP (RB first)))))))))))
    (. .)))

mark(began-4, Since-2)
nsubj(began-4, I-3)
nsubj(hear-6, I-3)
advcl(know-10, began-4)
aux(hear-6, to-5)
xcomp(began-4, hear-6)
dobj(hear-6, it-7)
nsubj(know-10, I-9)
root(ROOT-0, know-10)
nsubj(growing-13, it-11)
aux(growing-13, is-12)
ccomp(know-10, growing-13)
advmod(growing-13, louder-14)
advmod(judge-18, therefore-16)
nsubj(judge-18, I-17)
parataxis(know-10, judge-18)
nsubj(nearer-22, it-19)
cop(nearer-22, was-20)
amod(nearer-22, coming-21)
ccomp(judge-18, nearer-22)
ccomp(judge-18, nearer-24)
conj_and(nearer-22, nearer-24)
mark(hear-28, until-25)
nsubj(hear-28, I-26)
aux(hear-28, did-27)
advcl(nearer-22, hear-28)
dobj(hear-28, it-29)
advmod(hear-28, first-30)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBP 'm) (RB not)
          (ADJP (RB so) (RB very) (JJ old) (, ,)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP know)))))))
      (: --)
      (S
        (NP (DT a) (JJ few))
        (NP (CD thousand) (NNS years) (RB only)))
      (: --)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBD was)
          (NP
            (NP (RB quite) (DT a) (NN baby))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP I))
                (VP (VBD heard)
                  (NP (DT the) (NN noise))
                  (ADVP (RB first)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD knew)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD must)
              (VP (VB come)
                (PP (IN from)
                  (NP
                    (NP (DT the) (NNS voices))
                    (PP (IN of)
                      (NP
                        (NP (NNS people))
                        (ADJP
                          (ADJP
                            (ADVP (RB ever) (RB so))
                            (RB much) (JJR older))
                          (CC and)
                          (ADJP (JJR wiser)))))))
                (SBAR (IN than)
                  (S
                    (NP (PRP I))
                    (VP (VBD was))))))))))
    (. .)))

nsubj(old-6, I-1)
cop(old-6, 'm-2)
neg(old-6, not-3)
advmod(old-6, so-4)
advmod(old-6, very-5)
root(ROOT-0, old-6)
nsubj(know-9, you-8)
ccomp(old-6, know-9)
det(few-12, a-11)
dep(years-14, few-12)
num(years-14, thousand-13)
conj_and(old-6, years-14)
advmod(years-14, only-15)
nsubj(baby-22, I-18)
cop(baby-22, was-19)
advmod(baby-22, quite-20)
det(baby-22, a-21)
conj_and(old-6, baby-22)
tmod(heard-25, baby-22)
advmod(heard-25, when-23)
nsubj(heard-25, I-24)
rcmod(baby-22, heard-25)
det(noise-27, the-26)
dobj(heard-25, noise-27)
advmod(heard-25, first-28)
nsubj(knew-32, I-31)
conj_but(old-6, knew-32)
nsubj(come-35, it-33)
aux(come-35, must-34)
ccomp(knew-32, come-35)
det(voices-38, the-37)
prep_from(come-35, voices-38)
prep_of(voices-38, people-40)
advmod(so-42, ever-41)
advmod(older-44, so-42)
advmod(older-44, much-43)
amod(people-40, older-44)
amod(people-40, wiser-46)
conj_and(older-44, wiser-46)
mark(was-49, than-47)
nsubj(was-49, I-48)
advcl(come-35, was-49)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (MD ca) (RB n't)
          (VP (VB sing)
            (UCP
              (ADVP (IN at) (DT all))
              (, ,)
              (PP (IN except)
                (NP (RB now)))
              (CC and)
              (ADVP (RB then))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (MD can)
          (ADVP (RB never))
          (VP (VB tell)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP$ my) (NN song))
                (VP (VBZ is)
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB be))))))))))))
    (: ;)
    (S
      (NP (PRP I))
      (ADVP (RB only))
      (VP (VBP know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (SBAR (IN after)
                (S
                  (NP (PRP I))
                  (VP (VBP have)
                    (VP (VBN sung)
                      (NP (PRP it)))))))))))
    (. .)))

nsubj(sing-4, I-1)
aux(sing-4, ca-2)
neg(sing-4, n't-3)
root(ROOT-0, sing-4)
advmod(sing-4, at-5)
pobj(at-5, all-6)
advmod(sing-4, except-8)
conj_and(at-5, except-8)
prep(at-5, except-8)
pobj(except-8, now-9)
advmod(sing-4, then-11)
conj_and(at-5, then-11)
nsubj(tell-17, I-14)
aux(tell-17, can-15)
neg(tell-17, never-16)
conj_and(sing-4, tell-17)
dobj(going-22, what-18)
nsubj(be-24, what-18)
poss(song-20, my-19)
nsubj(going-22, song-20)
aux(going-22, is-21)
ccomp(tell-17, going-22)
aux(be-24, to-23)
xcomp(going-22, be-24)
nsubj(know-28, I-26)
advmod(know-28, only-27)
parataxis(sing-4, know-28)
dobj(is-31, what-29)
nsubj(is-31, it-30)
ccomp(know-28, is-31)
mark(sung-35, after-32)
nsubj(sung-35, I-33)
aux(sung-35, have-34)
advcl(is-31, sung-35)
dobj(sung-35, it-36)

(ROOT
  (S (: --)
    (CC But)
    (NP (DT this))
    (VP (MD will)
      (ADVP (RB never))
      (VP (VB do)))
    (. .)))

conj_but(do-6, this-3)
nsubj(do-6, this-3)
aux(do-6, will-4)
neg(do-6, never-5)
root(ROOT-0, do-6)

(ROOT
  (SQ (MD Will)
    (NP (PRP you))
    (VP (VBP stop)
      (ADVP (RB here)))
    (. ?) ('' '')))

aux(stop-3, Will-1)
nsubj(stop-3, you-2)
root(ROOT-0, stop-3)
advmod(stop-3, here-4)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB see)
          (ADVP (RB anywhere))
          (S
            (VP (TO to)
              (VP (VB stop)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(see-5, I-2)
nsubj(stop-8, I-2)
aux(see-5, ca-3)
neg(see-5, n't-4)
ccomp(said-11, see-5)
advmod(see-5, anywhere-6)
aux(stop-8, to-7)
xcomp(see-5, stop-8)
root(ROOT-0, said-11)
nsubj(said-11, Diamond-12)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ Your) (NN hair))
      (VP (VBZ is)
        (ADVP (DT all) (RB down))
        (PP (IN like)
          (NP (DT a) (NNS darkness)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB see)
          (PP (IN through)
            (NP (PRP it)))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VB knock)
                (NP (PRP$ my) (NNS eyes))
                (PP (IN into)
                  (NP (PRP it))
                  (ADVP
                    (ADVP (RB ever) (RB so))
                    (RB much)))))))))
    (. .) ('' '')))

poss(hair-3, Your-2)
nsubj(is-4, hair-3)
root(ROOT-0, is-4)
dep(down-6, all-5)
advmod(is-4, down-6)
det(darkness-9, a-8)
prep_like(is-4, darkness-9)
nsubj(see-15, I-12)
aux(see-15, ca-13)
neg(see-15, n't-14)
conj_and(is-4, see-15)
prep_through(see-15, it-17)
mark(knock-20, if-18)
nsubj(knock-20, I-19)
advcl(see-15, knock-20)
poss(eyes-22, my-21)
dobj(knock-20, eyes-22)
prep_into(knock-20, it-24)
advmod(so-26, ever-25)
advmod(knock-20, so-26)
advmod(so-26, much-27)

(ROOT
  (S
    (S
      (NP (`` ``)
        (NP
          (NP (NN Look))
          (, ,)
          (ADVP (RB then)))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (JJ North) (NN Wind))))
    (: ;)
    (CC and)
    (, ,)
    (S
      (PP (IN with)
        (NP
          (NP (CD one) (NN sweep))
          (PP (IN of)
            (NP (PRP$ her) (JJ great) (JJ white) (NN arm)))))
      (, ,)
      (NP (PRP she))
      (VP (VBD swept)
        (NP
          (NP (NNS yards))
          (ADVP (RB deep))
          (PP (IN of)
            (NP
              (NP (NNS darkness))
              (PP (IN like)
                (NP (DT a) (JJ great) (NN curtain))))))
        (PP (IN from) (IN before)
          (NP
            (NP (DT the) (NN face))
            (PP (IN of)
              (NP (DT the) (NN boy)))))))
    (. .)))

nsubj(said-7, Look-2)
advmod(Look-2, then-4)
root(ROOT-0, said-7)
amod(Wind-9, North-8)
dobj(said-7, Wind-9)
num(sweep-15, one-14)
prep_with(swept-23, sweep-15)
poss(arm-20, her-17)
amod(arm-20, great-18)
amod(arm-20, white-19)
prep_of(sweep-15, arm-20)
nsubj(swept-23, she-22)
conj_and(said-7, swept-23)
dobj(swept-23, yards-24)
advmod(yards-24, deep-25)
prep_of(yards-24, darkness-27)
det(curtain-31, a-29)
amod(curtain-31, great-30)
prep_like(darkness-27, curtain-31)
dep(swept-23, from-32)
det(face-35, the-34)
prep_before(swept-23, face-35)
det(boy-38, the-37)
prep_of(face-35, boy-38)

(ROOT
  (FRAG (CC And)
    (ADVP (RB lo))
    (. !)))

cc(lo-2, And-1)
root(ROOT-0, lo-2)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (NP (DT a) (JJ blue) (NN night))
      (, ,)
      (S
        (VP (VBG lit)
          (PRT (RP up))
          (PP (IN with)
            (NP (NNS stars))))))
    (. .)))

nsubj(night-5, it-1)
cop(night-5, was-2)
det(night-5, a-3)
amod(night-5, blue-4)
root(ROOT-0, night-5)
vmod(night-5, lit-7)
prt(lit-7, up-8)
prep_with(lit-7, stars-10)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB Where))
      (S
        (NP (PRP it))
        (VP (VBD did) (RB not)
          (VP (VB shine)
            (PP (IN with)
              (NP (NNS stars)))))))
    (NP (PRP it))
    (VP (VBD shimmered)
      (PP (IN with)
        (NP
          (NP (DT the) (NN milk))
          (PP (IN of)
            (NP (DT the) (NNS stars)))))
      (, ,)
      (PP (IN except)
        (SBAR
          (WHADVP (WRB where))
          (S
            (PRN (, ,)
              (ADVP (RB just))
              (PP (IN opposite)
                (PP (TO to)
                  (NP
                    (NP (NNP Diamond) (POS 's))
                    (NN face))))
              (, ,))
            (NP
              (NP (DT the) (JJ grey) (NNS towers))
              (PP (IN of)
                (NP (DT a) (NN cathedral))))
            (VP
              (VP (VBD blotted)
                (PRT (RP out))
                (NP
                  (NP
                    (ADVP (DT each))
                    (PRP$ its) (JJ own) (NN shape))
                  (PP (IN of)
                    (NP (NN sky)))))
              (CC and)
              (VP (VBZ stars)))))))
    (. .)))

advmod(shine-5, Where-1)
nsubj(shine-5, it-2)
aux(shine-5, did-3)
neg(shine-5, not-4)
advcl(shimmered-9, shine-5)
prep_with(shine-5, stars-7)
nsubj(shimmered-9, it-8)
root(ROOT-0, shimmered-9)
det(milk-12, the-11)
prep_with(shimmered-9, milk-12)
det(stars-15, the-14)
prep_of(milk-12, stars-15)
advmod(blotted-33, where-18)
dep(opposite-21, just-20)
dep(blotted-33, opposite-21)
pcomp(opposite-21, to-22)
poss(face-25, Diamond-23)
pobj(to-22, face-25)
det(towers-29, the-27)
amod(towers-29, grey-28)
nsubj(blotted-33, towers-29)
nsubj(stars-42, towers-29)
det(cathedral-32, a-31)
prep_of(towers-29, cathedral-32)
prepc_except(shimmered-9, blotted-33)
prt(blotted-33, out-34)
advmod(shape-38, each-35)
poss(shape-38, its-36)
amod(shape-38, own-37)
dobj(blotted-33, shape-38)
prep_of(shape-38, sky-40)
prepc_except(shimmered-9, stars-42)
conj_and(blotted-33, stars-42)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (SBARQ
    (WHNP (WP what))
    (SQ (VBZ 's)
      (NP (DT that)))
    (. ?) ('' '')))

root(ROOT-0, what-1)
cop(what-1, 's-2)
nsubj(what-1, that-3)

(ROOT
  (S
    (S
      (VP (VBN cried)
        (NP
          (NP (NNP Diamond))
          (, ,)
          (VP (VBN struck)
            (PP (IN with)
              (NP
                (NP (DT a) (NN kind))
                (PP (IN of)
                  (NP (NN terror))))))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (ADVP (RB never))
                (VP (VBN seen)
                  (NP (DT a) (NN cathedral)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD rose)
        (PP (IN before)
          (NP (PRP him)))
        (PP (IN with)
          (NP
            (NP (DT an) (JJ awful) (NN reality))
            (PP (IN in)
              (NP
                (NP (DT the) (NN midst))
                (PP (IN of)
                  (NP (DT the) (JJ wide) (NNS spaces)))))))
        (, ,)
        (S
          (VP (VBG conquering)
            (NP (NNS emptiness))
            (PP (IN with)
              (NP (NN grandeur)))))))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Diamond-2)
vmod(Diamond-2, struck-4)
det(kind-7, a-6)
prep_with(struck-4, kind-7)
prep_of(kind-7, terror-9)
mark(seen-15, for-11)
nsubj(seen-15, he-12)
aux(seen-15, had-13)
neg(seen-15, never-14)
dep(Diamond-2, seen-15)
det(cathedral-17, a-16)
dobj(seen-15, cathedral-17)
nsubj(rose-21, it-20)
conj_and(cried-1, rose-21)
prep_before(rose-21, him-23)
det(reality-27, an-25)
amod(reality-27, awful-26)
prep_with(rose-21, reality-27)
det(midst-30, the-29)
prep_in(reality-27, midst-30)
det(spaces-34, the-32)
amod(spaces-34, wide-33)
prep_of(midst-30, spaces-34)
xcomp(rose-21, conquering-36)
dobj(conquering-36, emptiness-37)
prep_with(conquering-36, grandeur-39)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT A)
        (ADJP (RB very) (JJ good)))
      (VP (VBP place)
        (SBAR (IN for)
          (S
            (NP (PRP you))
            (VP (TO to)
              (VP (VB wait)
                (PRT (RP in))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP North) (NNP Wind))
    (. .)))

det(good-4, A-2)
advmod(good-4, very-3)
nsubj(place-5, good-4)
ccomp(said-13, place-5)
mark(wait-9, for-6)
nsubj(wait-9, you-7)
aux(wait-9, to-8)
advcl(place-5, wait-9)
xcomp(place-5, wait-9)
prt(wait-9, in-10)
root(ROOT-0, said-13)
nn(Wind-15, North-14)
nsubj(said-13, Wind-15)

(ROOT
  (S (`` ``)
    (S (CC But)
      (NP (PRP we))
      (VP (MD shall)
        (VP (VB go)
          (PRT (RP in)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD shall)
        (VP (VB judge)
          (PP (IN for)
            (NP (PRP yourself))))))
    (. .) ('' '')))

nsubj(go-5, we-3)
aux(go-5, shall-4)
root(ROOT-0, go-5)
prt(go-5, in-6)
nsubj(judge-11, you-9)
aux(judge-11, shall-10)
conj_and(go-5, judge-11)
prep_for(judge-11, yourself-13)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (DT an) (JJ open) (NN door))
          (PP (IN in)
            (NP
              (NP (DT the) (NN middle))
              (PP (IN of)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (NP (DT the) (NNS towers)))))))
          (, ,)
          (VP (VBG leading)
            (PRT (RP out))
            (PP (IN upon)
              (NP (DT the) (NN roof)))))))
    (, ,)
    (CC and)
    (S
      (PP (IN through)
        (NP (PRP it)))
      (NP (PRP they))
      (VP (VBD passed)))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(door-5, an-3)
amod(door-5, open-4)
nsubj(was-2, door-5)
det(middle-8, the-7)
prep_in(door-5, middle-8)
prep_of(middle-8, one-10)
det(towers-13, the-12)
prep_of(one-10, towers-13)
vmod(door-5, leading-15)
prt(leading-15, out-16)
det(roof-19, the-18)
prep_upon(leading-15, roof-19)
prep_through(passed-25, it-23)
nsubj(passed-25, they-24)
conj_and(was-2, passed-25)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (NNP North) (NNP Wind))
      (VP (VBD set)
        (NP
          (NP (NNP Diamond))
          (PP (IN on)
            (NP (PRP$ his) (NNS feet))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD found)
        (NP (PRP himself))
        (PP (IN at)
          (NP
            (NP (DT the) (NN top))
            (PP (IN of)
              (NP
                (NP (DT a) (NN stone) (NN stair))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD went)
                      (S
                        (VP (VBG twisting)
                          (ADVP (RB away) (RB down))
                          (PP (IN into)
                            (NP (DT the) (NNS darkness)))
                          (SBAR (IN for)
                            (S
                              (NP (RB only) (DT a) (JJ little) (NN light))
                              (VP (VBD came)
                                (PRT (RP in))
                                (PP (IN at)
                                  (NP (DT the) (NN door)))))))))))))))))
    (. .)))

advmod(set-4, Then-1)
nn(Wind-3, North-2)
nsubj(set-4, Wind-3)
root(ROOT-0, set-4)
dobj(set-4, Diamond-5)
poss(feet-8, his-7)
prep_on(Diamond-5, feet-8)
nsubj(found-12, he-11)
conj_and(set-4, found-12)
dobj(found-12, himself-13)
det(top-16, the-15)
prep_at(found-12, top-16)
det(stair-20, a-18)
nn(stair-20, stone-19)
prep_of(top-16, stair-20)
nsubj(went-23, stair-20)
rcmod(stair-20, went-23)
xcomp(went-23, twisting-24)
advmod(down-26, away-25)
advmod(twisting-24, down-26)
det(darkness-29, the-28)
prep_into(twisting-24, darkness-29)
mark(came-35, for-30)
advmod(light-34, only-31)
det(light-34, a-32)
amod(light-34, little-33)
nsubj(came-35, light-34)
advcl(twisting-24, came-35)
prt(came-35, in-36)
det(door-39, the-38)
prep_at(came-35, door-39)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ enough)
        (PRN (, ,)
          (ADVP (RB however))
          (, ,))
        (S
          (VP (TO to)
            (VP (VB allow)
              (S
                (NP (NNP Diamond))
                (VP (TO to)
                  (VP (VB see)
                    (SBAR (IN that)
                      (S
                        (NP (NNP North) (NNP Wind))
                        (VP (VBD stood)
                          (PP (IN beside)
                            (NP (PRP him))))))))))))))
    (. .)))

nsubj(enough-3, It-1)
nsubj(allow-8, It-1)
cop(enough-3, was-2)
root(ROOT-0, enough-3)
dep(enough-3, however-5)
aux(allow-8, to-7)
xcomp(enough-3, allow-8)
dobj(allow-8, Diamond-9)
nsubj(see-11, Diamond-9)
aux(see-11, to-10)
xcomp(allow-8, see-11)
mark(stood-15, that-12)
nn(Wind-14, North-13)
nsubj(stood-15, Wind-14)
ccomp(see-11, stood-15)
prep_beside(stood-15, him-17)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD looked)
        (PRT (RP up))
        (S
          (VP (TO to)
            (VP (VB find)
              (NP (PRP$ her) (NN face))))))
      (, ,)
      (CC and)
      (VP (VBD saw)
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBD was)
              (ADVP (RB no) (RB longer))
              (NP
                (NP (DT a) (JJ beautiful) (NNS giantess))
                (, ,)
                (CC but)
                (NP
                  (NP (DT the) (JJ tall) (JJ gracious) (NN lady))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD liked)
                        (ADVP (RBS best))
                        (S
                          (VP (TO to)
                            (VP (VB see))))))))))))))
    (. .)))

nsubj(looked-2, He-1)
nsubj(find-5, He-1)
nsubj(saw-10, He-1)
root(ROOT-0, looked-2)
prt(looked-2, up-3)
aux(find-5, to-4)
xcomp(looked-2, find-5)
poss(face-7, her-6)
dobj(find-5, face-7)
conj_and(looked-2, saw-10)
mark(giantess-18, that-11)
nsubj(giantess-18, she-12)
cop(giantess-18, was-13)
neg(longer-15, no-14)
advmod(giantess-18, longer-15)
det(giantess-18, a-16)
amod(giantess-18, beautiful-17)
ccomp(saw-10, giantess-18)
det(lady-24, the-21)
amod(lady-24, tall-22)
amod(lady-24, gracious-23)
ccomp(saw-10, lady-24)
conj_but(giantess-18, lady-24)
nsubj(liked-26, he-25)
nsubj(see-29, he-25)
rcmod(lady-24, liked-26)
advmod(liked-26, best-27)
aux(see-29, to-28)
xcomp(liked-26, see-29)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD took)
        (NP (PRP$ his) (NN hand))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (S
        (VP (VBG giving)
          (NP (PRP him))
          (NP
            (NP (DT the) (JJ broad) (NN part))
            (PP (IN of)
              (NP (DT the) (NN spiral) (NN stair)))
            (S
              (VP (TO to)
                (VP (VB walk)
                  (PRT (RP on))))))))
      (, ,)
      (S
        (VP (VBN led)
          (NP (PRP him))
          (PP (IN down)
            (NP (DT a) (JJ good) (NN way))))))
    (: ;)
    (S
      (ADVP (RB then))
      (, ,)
      (S
        (VP (VBG opening)
          (NP (DT another) (JJ little) (NN door))))
      (, ,)
      (VP (VBD led)
        (NP (PRP him))
        (PP
          (PP (RB out) (IN upon)
            (NP
              (NP (DT a) (JJ narrow) (NN gallery))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD ran) (RB all)
                    (VP (VB round)
                      (NP
                        (NP (DT the) (JJ central) (NN part))
                        (PP (IN of)
                          (NP (DT the) (NN church))))))))))
          (, ,)
          (PP (IN on)
            (NP
              (NP (DT the) (NNS ledges))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS windows))
                  (PP (IN of)
                    (NP (DT the) (NN clerestory)))))))
          (, ,)
          (CC and)
          (PP (IN through)
            (NP
              (NP (NNS openings))
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS parts))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN wall))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD divided)
                            (NP (DT the) (NNS windows))
                            (PP (IN from)
                              (NP (DT each) (JJ other)))))))))))))))
    (. .)))

nsubj(took-2, She-1)
nsubj(giving-8, She-1)
nsubj(led-35, She-1)
root(ROOT-0, took-2)
poss(hand-4, his-3)
dobj(took-2, hand-4)
conj_and(took-2, giving-8)
iobj(giving-8, him-9)
det(part-12, the-10)
amod(part-12, broad-11)
dobj(giving-8, part-12)
det(stair-16, the-14)
nn(stair-16, spiral-15)
prep_of(part-12, stair-16)
aux(walk-18, to-17)
vmod(part-12, walk-18)
prt(walk-18, on-19)
parataxis(giving-8, led-21)
dobj(led-21, him-22)
det(way-26, a-24)
amod(way-26, good-25)
prep_down(led-21, way-26)
advmod(led-35, then-28)
dep(led-35, opening-30)
det(door-33, another-31)
amod(door-33, little-32)
dobj(opening-30, door-33)
conj_and(took-2, led-35)
conj_and(took-2, led-35')
conj_and(took-2, led-35'')
parataxis(took-2, led-35)
parataxis(took-2, led-35')
parataxis(took-2, led-35'')
conj_and(led-35, led-35')
conj_and(led-35, led-35'')
dobj(led-35, him-36)
advmod(led-35, out-37)
det(gallery-41, a-39)
amod(gallery-41, narrow-40)
prep_upon(led-35, gallery-41)
nsubj(ran-43, gallery-41)
rcmod(gallery-41, ran-43)
advmod(ran-43, all-44)
dep(ran-43, round-45)
det(part-48, the-46)
amod(part-48, central-47)
dobj(round-45, part-48)
det(church-51, the-50)
prep_of(part-48, church-51)
det(ledges-55, the-54)
prep_on(led-35', ledges-55)
det(windows-58, the-57)
prep_of(ledges-55, windows-58)
det(clerestory-61, the-60)
prep_of(windows-58, clerestory-61)
prep_through(led-35'', openings-65)
det(parts-68, the-67)
prep_in(openings-65, parts-68)
det(wall-71, the-70)
prep_of(parts-68, wall-71)
nsubj(divided-73, wall-71)
rcmod(wall-71, divided-73)
det(windows-75, the-74)
dobj(divided-73, windows-75)
det(other-78, each-77)
prep_from(divided-73, other-78)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP (RB very) (JJ narrow))))
    (, ,)
    (CC and)
    (S
      (PP (IN except)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBD were)
              (VP (VBG passing)
                (PP (IN through)
                  (NP (DT the) (NN wall))))))))
      (, ,)
      (NP (NNP Diamond))
      (VP (VBD saw)
        (NP (NN nothing))
        (S
          (VP (TO to)
            (VP (VB keep)
              (NP (PRP him))
              (PP (IN from)
                (S
                  (VP (VBG falling)
                    (PP (IN into)
                      (NP (DT the) (NN church)))))))))))
    (. .)))

nsubj(narrow-4, It-1)
cop(narrow-4, was-2)
advmod(narrow-4, very-3)
root(ROOT-0, narrow-4)
dep(saw-17, except-7)
advmod(passing-11, when-8)
nsubj(passing-11, they-9)
aux(passing-11, were-10)
pcomp(except-7, passing-11)
det(wall-14, the-13)
prep_through(passing-11, wall-14)
nsubj(saw-17, Diamond-16)
conj_and(narrow-4, saw-17)
dobj(saw-17, nothing-18)
aux(keep-20, to-19)
vmod(saw-17, keep-20)
dobj(keep-20, him-21)
prepc_from(keep-20, falling-23)
det(church-26, the-25)
prep_into(falling-23, church-26)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD lay)
        (PP (IN below)
          (NP (PRP him)))
        (PP (IN like)
          (NP
            (NP (DT a) (JJ great) (JJ silent) (NN gulf))
            (VP (VBN hollowed)
              (PP (IN in)
                (NP (NN stone))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD held)
        (NP (PRP$ his) (NN breath))
        (PP (IN for)
          (NP (NN fear)))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD looked)
              (PRT (RP down)))))))
    (. .)))

nsubj(lay-2, It-1)
root(ROOT-0, lay-2)
prep_below(lay-2, him-4)
det(gulf-9, a-6)
amod(gulf-9, great-7)
amod(gulf-9, silent-8)
prep_like(lay-2, gulf-9)
vmod(gulf-9, hollowed-10)
prep_in(hollowed-10, stone-12)
nsubj(held-16, he-15)
conj_and(lay-2, held-16)
poss(breath-18, his-17)
dobj(held-16, breath-18)
prep_for(held-16, fear-20)
mark(looked-23, as-21)
nsubj(looked-23, he-22)
advcl(held-16, looked-23)
prt(looked-23, down-24)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG trembling)
        (PP (IN for))
        (, ,)
        (ADVP (RB little) (RB Diamond))))
    (. ?) ('' '')))

dep(trembling-5, What-2)
aux(trembling-5, are-3)
nsubj(trembling-5, you-4)
root(ROOT-0, trembling-5)
prep(trembling-5, for-6)
advmod(Diamond-9, little-8)
advmod(trembling-5, Diamond-9)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN lady))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD walked)
            (ADVP (RB gently) (RB along))
            (, ,)
            (PP (IN with)
              (NP
                (NP (PRP$ her) (NN hand))
                (VP (VBN held)
                  (PRT (RP out))
                  (PP (IN behind)
                    (S
                      (NP (PRP her))
                      (VP (VBG leading)
                        (NP (PRP him))))))))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (EX there))
                (VP (VBD was) (RB not)
                  (ADJP (JJ breadth) (RB enough)
                    (SBAR (IN for)
                      (S
                        (NP (PRP them))
                        (VP (TO to)
                          (VP (VB walk)
                            (NP (NN side))
                            (PP (IN by)
                              (NP (NN side)))))))))))))))
    (. .)))

root(ROOT-0, said-1)
det(lady-3, the-2)
dobj(said-1, lady-3)
mark(walked-7, as-5)
nsubj(walked-7, she-6)
advcl(said-1, walked-7)
advmod(along-9, gently-8)
advmod(walked-7, along-9)
poss(hand-13, her-12)
prep_with(walked-7, hand-13)
vmod(hand-13, held-14)
prt(held-14, out-15)
nsubj(leading-18, her-17)
prepc_behind(held-14, leading-18)
dobj(leading-18, him-19)
mark(was-23, for-21)
expl(was-23, there-22)
advcl(walked-7, was-23)
neg(was-23, not-24)
acomp(was-23, breadth-25)
advmod(breadth-25, enough-26)
mark(walk-30, for-27)
nsubj(walk-30, them-28)
aux(walk-30, to-29)
ccomp(breadth-25, walk-30)
dobj(walk-30, side-31)
prep_by(walk-30, side-33)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ afraid)
          (PP (IN of)
            (S
              (VP (VBG falling)
                (ADVP (RB down) (RB there))))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Diamond))
    (. .)))

nsubj(afraid-4, I-2)
cop(afraid-4, am-3)
ccomp(answered-11, afraid-4)
prepc_of(afraid-4, falling-6)
advmod(there-8, down-7)
advmod(falling-6, there-8)
root(ROOT-0, answered-11)
nsubj(answered-11, Diamond-12)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB so) (JJ deep))
      (ADVP (RB down)))
    (. .) ('' '')))

nsubj(deep-5, It-2)
cop(deep-5, is-3)
advmod(deep-5, so-4)
root(ROOT-0, deep-5)
advmod(deep-5, down-6)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Yes))
      (, ,)
      (ADVP (RB rather))
      (, ,) ('' '')
      (NP (NNP answered) (NNP North))
      (VP (VBZ Wind)))
    (: ;) (`` ``)
    (S (CC but)
      (NP (PRP you))
      (VP (VBD were)
        (NP
          (QP (DT a) (CD hundred) (NNS times))
          (JJR higher))
        (ADVP
          (NP (DT a) (JJ few) (NNS minutes))
          (RB ago))))
    (. .) ('' '')))

advmod(Wind-9, Yes-2)
advmod(Wind-9, rather-4)
nn(North-8, answered-7)
nsubj(Wind-9, North-8)
root(ROOT-0, Wind-9)
cc(higher-18, but-12)
nsubj(higher-18, you-13)
cop(higher-18, were-14)
quantmod(times-17, a-15)
number(times-17, hundred-16)
num(higher-18, times-17)
parataxis(Wind-9, higher-18)
det(minutes-21, a-19)
amod(minutes-21, few-20)
npadvmod(ago-22, minutes-21)
advmod(higher-18, ago-22)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Ah) (, ,) (UH yes))
      (, ,)
      (CC but)
      (NP (NN somebody))
      (VP (VBZ 's)
        (NP
          (NP (NN arm))
          (SBAR
            (S
              (VP (VBD was)
                (PP (IN about)
                  (NP (PRP me)))
                (ADVP (RB then))))))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP (NNP Diamond))
      (, ,)
      (S
        (VP (VBG putting)
          (NP (PRP$ his) (JJ little) (NN mouth))
          (PP (TO to)
            (NP
              (NP (DT the) (JJ beautiful) (JJ cold) (NN hand))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD had)
                    (NP
                      (NP (DT a) (NN hold))
                      (PP (IN of)
                        (NP (PRP$ his))))))))))))
    (. .)))

discourse(arm-9, Ah-2)
dep(Ah-2, yes-4)
conj_but(arm-9, somebody-7)
nsubj(arm-9, somebody-7)
ccomp(said-16, somebody-7)
cop(arm-9, 's-8)
ccomp(said-16, arm-9)
rcmod(arm-9, was-10)
prep_about(was-10, me-12)
advmod(was-10, then-13)
root(ROOT-0, said-16)
dobj(said-16, Diamond-17)
vmod(said-16, putting-19)
poss(mouth-22, his-20)
amod(mouth-22, little-21)
dobj(putting-19, mouth-22)
det(hand-27, the-24)
amod(hand-27, beautiful-25)
amod(hand-27, cold-26)
prep_to(putting-19, hand-27)
nsubj(had-29, hand-27)
rcmod(hand-27, had-29)
det(hold-31, a-30)
dobj(had-29, hold-31)
prep_of(hold-31, his-33)

(ROOT
  (S (`` ``)
    (X
      (X (WP What))
      (NP
        (NP (DT a) (NN dear))
        (NP (JJ little) (JJ warm) (NN mouth))))
    (NP (PRP you))
    (VP (VBP 've)
      (VP (VBN got)))
    (. !) ('' '')))

dep(dear-4, What-2)
det(dear-4, a-3)
dep(got-10, dear-4)
amod(mouth-7, little-5)
amod(mouth-7, warm-6)
dep(dear-4, mouth-7)
nsubj(got-10, you-8)
aux(got-10, 've-9)
root(ROOT-0, got-10)

(ROOT
  (S
    (VP (VBD said)
      (NP (JJ North) (NN Wind)))
    (. .)))

root(ROOT-0, said-1)
amod(Wind-3, North-2)
dobj(said-1, Wind-3)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN pity))
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD should)
              (VP (VB talk)
                (NP (NN nonsense))
                (PP (IN with)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(pity-5, It-2)
cop(pity-5, is-3)
det(pity-5, a-4)
root(ROOT-0, pity-5)
nsubj(talk-8, you-6)
aux(talk-8, should-7)
rcmod(pity-5, talk-8)
dobj(talk-8, nonsense-9)
prep_with(talk-8, it-11)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP have)
            (NP
              (NP (DT a) (NN hold))
              (PP (IN of)
                (NP (PRP you))))))))
    (. ?) ('' '')))

nsubj(know-4, Do-1)
neg(know-4, n't-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
nsubj(have-6, I-5)
ccomp(know-4, have-6)
det(hold-8, a-7)
dobj(have-6, hold-8)
prep_of(hold-8, you-10)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (: ;)
    (S (CC but)
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBG walking)
          (PP (IN on)
            (NP (PRP$ my) (JJ own) (NNS legs))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD might)
        (VP (VB slip))))
    (. .)))

advmod(walking-7, Yes-2)
nsubj(walking-7, I-5)
aux(walking-7, 'm-6)
root(ROOT-0, walking-7)
poss(legs-11, my-9)
amod(legs-11, own-10)
prep_on(walking-7, legs-11)
nsubj(slip-16, they-14)
aux(slip-16, might-15)
conj_and(walking-7, slip-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB trust)
        (NP (PRP myself))
        (ADVP (RB so) (RB well))
        (PP (IN as)
          (NP (PRP$ your) (NNS arms)))))
    (. .) ('' '')))

nsubj(trust-4, I-1)
aux(trust-4, ca-2)
neg(trust-4, n't-3)
root(ROOT-0, trust-4)
dobj(trust-4, myself-5)
advmod(well-7, so-6)
advmod(trust-4, well-7)
poss(arms-10, your-9)
prep_as(trust-4, arms-10)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN hold))
        (PP (IN of)
          (NP (PRP you))))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VB tell)
          (NP (PRP you))
          (, ,)
          (NP (JJ foolish) (NN child)))))
    (. .) ('' '')))

cc(have-4, But-2)
nsubj(have-4, I-3)
root(ROOT-0, have-4)
det(hold-6, a-5)
dobj(have-4, hold-6)
prep_of(hold-6, you-8)
nsubj(tell-11, I-10)
ccomp(have-4, tell-11)
dobj(tell-11, you-12)
amod(child-15, foolish-14)
dobj(tell-11, child-15)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (, ,)
    (S (CC but)
      (ADVP (RB somehow))
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB feel)
          (ADJP (JJ comfortable)))))
    (. .) ('' '')))

advmod(feel-9, Yes-2)
cc(feel-9, but-4)
advmod(feel-9, somehow-5)
nsubj(feel-9, I-6)
aux(feel-9, ca-7)
neg(feel-9, n't-8)
root(ROOT-0, feel-9)
acomp(feel-9, comfortable-10)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (S
          (NP (PRP you))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB fall))))))
        (, ,)
        (CC and)
        (S
          (NP
            (NP (PRP$ my) (NN hold))
            (PP (IN of)
              (NP (PRP you))))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB give)
                  (NP (NN way)))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB be)
        (ADVP (RB down)
          (PP (IN after)
            (NP (PRP you))))
        (PP (IN in)
          (NP (DT a) (JJR less) (NN moment)))
        (SBAR (IN than)
          (S
            (NP
              (NP (DT a) (NN lady) (POS 's))
              (NN watch))
            (VP (MD can)
              (VP (VB tick) (, ,)
                (CC and)
                (VB catch)
                (NP (PRP you))
                (SBAR (RB long) (IN before)
                  (S
                    (NP (PRP you))
                    (VP (VBD had)
                      (VP (VBN reached)
                        (NP (DT the) (NN ground))))))))))))
    (. .) ('' '')))

mark(were-4, If-2)
nsubj(were-4, you-3)
nsubj(fall-6, you-3)
advcl(be-20, were-4)
aux(fall-6, to-5)
xcomp(were-4, fall-6)
poss(hold-10, my-9)
nsubj(were-13, hold-10)
nsubj(give-15, hold-10)
prep_of(hold-10, you-12)
conj_and(were-4, were-13)
advcl(be-20, were-13)
aux(give-15, to-14)
xcomp(were-13, give-15)
dobj(give-15, way-16)
nsubj(be-20, I-18)
aux(be-20, should-19)
root(ROOT-0, be-20)
advmod(be-20, down-21)
prep_after(down-21, you-23)
det(moment-27, a-25)
amod(moment-27, less-26)
prep_in(be-20, moment-27)
mark(tick-34, than-28)
det(lady-30, a-29)
poss(watch-32, lady-30)
nsubj(tick-34, watch-32)
nsubj(catch-37, watch-32)
aux(tick-34, can-33)
advcl(be-20, tick-34)
advcl(be-20, catch-37)
conj_and(tick-34, catch-37)
dobj(tick-34, you-38)
advmod(reached-43, long-39)
mark(reached-43, before-40)
nsubj(reached-43, you-41)
aux(reached-43, had-42)
advcl(tick-34, reached-43)
det(ground-45, the-44)
dobj(reached-43, ground-45)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB like)
          (NP (PRP it))
          (ADVP (RB though)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(like-5, I-2)
aux(like-5, do-3)
neg(like-5, n't-4)
ccomp(said-10, like-5)
dobj(like-5, it-6)
advmod(like-5, though-7)
root(ROOT-0, said-10)
nsubj(said-10, Diamond-11)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (INTJ (UH oh) (. !)))

root(ROOT-0, oh-1)

(ROOT
  (ADVP (RB oh) (. !) ('' '')))

root(ROOT-0, oh-1)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD screamed)
      (NP
        (NP (DT the) (JJ next) (NN moment))
        (, ,)
        (ADJP (JJ bent) (JJ double)))
      (PP (IN with)
        (NP (NN terror)))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (NNP North) (NNP Wind))
          (VP
            (VP (VBD had)
              (VP (VBN let)
                (S
                  (VP (VB go)
                    (NP
                      (NP (PRP$ her) (NN hold))
                      (PP (IN of)
                        (NP (PRP$ his) (NN hand))))))))
            (, ,)
            (CC and)
            (VP (VBD had)
              (VP (VBN vanished)))
            (, ,)
            (S
              (VP (VBG leaving)
                (S
                  (NP (PRP him))
                  (VP (VBG standing)
                    (SBAR (RB as) (IN if)
                      (S
                        (VP (VBN rooted)
                          (PP (TO to)
                            (NP (DT the) (NN gallery))))))))))))))
    (. .)))

nsubj(screamed-2, he-1)
root(ROOT-0, screamed-2)
det(moment-5, the-3)
amod(moment-5, next-4)
dobj(screamed-2, moment-5)
amod(double-8, bent-7)
amod(moment-5, double-8)
prep_with(screamed-2, terror-10)
mark(let-16, for-12)
nn(Wind-14, North-13)
nsubj(let-16, Wind-14)
nsubj(vanished-26, Wind-14)
nsubj(leaving-28, Wind-14)
aux(let-16, had-15)
advcl(screamed-2, let-16)
ccomp(let-16, go-17)
poss(hold-19, her-18)
dobj(go-17, hold-19)
poss(hand-22, his-21)
prep_of(hold-19, hand-22)
aux(vanished-26, had-25)
advcl(screamed-2, vanished-26)
conj_and(let-16, vanished-26)
advcl(screamed-2, leaving-28)
conj_and(let-16, leaving-28)
vmod(let-16, leaving-28)
nsubj(standing-30, him-29)
vmod(leaving-28, standing-30)
advmod(rooted-33, as-31)
mark(rooted-33, if-32)
advcl(standing-30, rooted-33)
det(gallery-36, the-35)
prep_to(rooted-33, gallery-36)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD left)
      (NP (DT the) (NNS words))
      (, ,)
      (S (`` ``)
        (VP (VBG Come)
          (PP (IN after)
            (NP (PRP me))))
        (, ,) ('' '')
        (PRN
          (S
            (VP (VBG sounding)
              (PP (IN in)
                (NP (PRP$ his) (NNS ears))))))))
    (. .)))

nsubj(left-2, She-1)
root(ROOT-0, left-2)
det(words-4, the-3)
dobj(left-2, words-4)
vmod(left-2, Come-7)
prep_after(Come-7, me-9)
parataxis(Come-7, sounding-12)
poss(ears-15, his-14)
prep_in(sounding-12, ears-15)

(ROOT
  (S (CC But)
    (VP (VB move)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD dared) (RB not)))))
    (. .)))

cc(move-2, But-1)
root(ROOT-0, move-2)
nsubj(dared-4, he-3)
ccomp(move-2, dared-4)
neg(dared-4, not-5)

(ROOT
  (S
    (S
      (PP (IN In)
        (ADVP
          (NP (DT a) (NN moment))
          (RBR more)))
      (NP (PRP he))
      (VP (MD would)
        (PP (IN from)
          (NP (JJ very) (NN terror)))
        (VP (VB have)
          (VP (VBN fallen)
            (PP (IN into)
              (NP (DT the) (NN church)))))))
    (, ,)
    (CC but)
    (S
      (S
        (ADVP (RB suddenly))
        (NP (EX there))
        (VP (VBD came)
          (NP
            (NP (DT a) (JJ gentle) (NN breath))
            (PP (IN of)
              (NP (JJ cool) (NN wind))))
          (PP (IN upon)
            (NP (PRP$ his) (NN face)))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP it))
          (VP (VBD kept)
            (S
              (VP (VBG blowing)
                (PRT (RP upon))
                (NP (PRP him))
                (PP (IN in)
                  (NP (JJ little) (NNS puffs)))))))
        (, ,)
        (CC and)
        (S
          (PP (IN at)
            (NP (DT every) (NN puff)))
          (NP (NNP Diamond))
          (VP (VBD felt)
            (NP
              (NP
                (NP (PRP$ his) (NNS faintness))
                (VP (VBG going)
                  (PRT (RP away))))
              (, ,)
              (CC and)
              (NP
                (NP (PRP$ his) (NN fear))
                (PP (IN with)
                  (NP (PRP it)))))))))
    (. .)))

det(moment-3, a-2)
npadvmod(more-4, moment-3)
prepc_in(fallen-11, more-4)
nsubj(fallen-11, he-5)
aux(fallen-11, would-6)
amod(terror-9, very-8)
prep_from(fallen-11, terror-9)
aux(fallen-11, have-10)
root(ROOT-0, fallen-11)
det(church-14, the-13)
prep_into(fallen-11, church-14)
advmod(came-19, suddenly-17)
expl(came-19, there-18)
conj_but(fallen-11, came-19)
det(breath-22, a-20)
amod(breath-22, gentle-21)
dobj(came-19, breath-22)
nsubj(came-19, breath-22)
amod(wind-25, cool-24)
prep_of(breath-22, wind-25)
poss(face-28, his-27)
prep_upon(came-19, face-28)
nsubj(kept-32, it-31)
conj_but(fallen-11, kept-32)
conj_and(came-19, kept-32)
xcomp(kept-32, blowing-33)
prt(blowing-33, upon-34)
dobj(blowing-33, him-35)
amod(puffs-38, little-37)
prep_in(blowing-33, puffs-38)
det(puff-43, every-42)
prep_at(felt-45, puff-43)
nsubj(felt-45, Diamond-44)
conj_and(came-19, felt-45)
conj_and(kept-32, felt-45)
poss(faintness-47, his-46)
dobj(felt-45, faintness-47)
vmod(faintness-47, going-48)
prt(going-48, away-49)
poss(fear-53, his-52)
dobj(felt-45, fear-53)
conj_and(faintness-47, fear-53)
prep_with(fear-53, it-55)

(ROOT
  (S
    (S
      (NP (NNP Courage))
      (VP (VBD was)
        (VP (VBG reviving)
          (PP (IN in)
            (NP (PRP$ his) (JJ little) (NN heart))))))
    (, ,)
    (CC and)
    (ADVP (RB still))
    (S
      (S
        (NP
          (NP (DT the) (JJ cool) (NNS wafts))
          (PP (IN of)
            (NP (DT the) (JJ soft) (NN wind))))
        (VP (VBD breathed)
          (PP (IN upon)
            (NP (PRP him)))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (JJ soft) (NN wind))
        (VP (VBD was)
          (ADJP
            (ADJP (RB so) (RB mighty))
            (CC and)
            (ADJP (JJ strong)))
          (PP (IN within)
            (NP (PRP$ its) (NN gentleness)))
          (, ,)
          (SBAR (IN that)
            (S
              (PP (IN in)
                (ADVP
                  (NP (DT a) (NN minute))
                  (RBR more)))
              (NP (NNP Diamond))
              (VP (VBD was)
                (VP (VBG marching)
                  (PRT (RP along))
                  (NP
                    (NP (DT the) (JJ narrow) (NN ledge))
                    (ADJP (RB as) (JJ fearless)))
                  (PP (IN for)
                    (S
                      (NP
                        (NP (DT the) (NN time))
                        (PP (IN as)
                          (NP (NNP North))))
                      (VP (VBG Wind)
                        (NP (PRP herself))))))))))))
    (. .)))

nsubj(reviving-3, Courage-1)
aux(reviving-3, was-2)
root(ROOT-0, reviving-3)
poss(heart-7, his-5)
amod(heart-7, little-6)
prep_in(reviving-3, heart-7)
advmod(breathed-18, still-10)
det(wafts-13, the-11)
amod(wafts-13, cool-12)
nsubj(breathed-18, wafts-13)
det(wind-17, the-15)
amod(wind-17, soft-16)
prep_of(wafts-13, wind-17)
conj_and(reviving-3, breathed-18)
prep_upon(breathed-18, him-20)
det(wind-25, the-23)
amod(wind-25, soft-24)
nsubj(mighty-28, wind-25)
nsubj(strong-30, wind-25)
cop(mighty-28, was-26)
advmod(mighty-28, so-27)
conj_and(reviving-3, mighty-28)
conj_and(breathed-18, mighty-28)
conj_and(breathed-18, strong-30)
conj_and(mighty-28, strong-30)
poss(gentleness-33, its-32)
prep_within(mighty-28, gentleness-33)
mark(marching-42, that-35)
det(minute-38, a-37)
npadvmod(more-39, minute-38)
prepc_in(marching-42, more-39)
nsubj(marching-42, Diamond-40)
aux(marching-42, was-41)
ccomp(mighty-28, marching-42)
prt(marching-42, along-43)
det(ledge-46, the-44)
amod(ledge-46, narrow-45)
dobj(marching-42, ledge-46)
advmod(fearless-48, as-47)
amod(ledge-46, fearless-48)
det(time-51, the-50)
nsubj(Wind-54, time-51)
prep_as(time-51, North-53)
prepc_for(marching-42, Wind-54)
dobj(Wind-54, herself-55)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD walked)
        (ADVP (RP on)
          (CC and)
          (RP on))
        (, ,)
        (PP (IN with)
          (NP (DT the) (NNS windows)))
        (PP (DT all) (IN in)
          (NP
            (NP (DT a) (NN row))
            (PP (IN on)
              (NP
                (NP (CD one) (NN side))
                (PP (IN of)
                  (NP (PRP him)))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (JJ great) (JJ empty) (NN nave))
        (PP (IN of)
          (NP (DT the) (NN church))))
      (VP (VBG echoing)
        (PP (TO to)
          (NP
            (NP (DT every) (NN one))
            (PP (IN of)
              (NP (PRP$ his) (JJ brave) (NNS strides)))))
        (PP (IN on)
          (NP
            (NP (DT the) (JJ other))
            (, ,)
            (SBAR (IN until)
              (S
                (PP (IN at)
                  (NP (JJ last)))
                (NP (PRP he))
                (VP (VBD came)
                  (PP (TO to)
                    (NP
                      (NP (DT a)
                        (ADJP (RB little) (JJ open))
                        (NN door))
                      (, ,)
                      (SBAR
                        (WHPP (IN from)
                          (WHNP (WDT which)))
                        (S
                          (NP (DT a) (JJR broader) (NN stair))
                          (VP (VBD led)
                            (S
                              (S
                                (NP (PRP him))
                                (ADVP (RB down)))
                              (CC and)
                              (S
                                (ADVP (RB down)
                                  (CC and)
                                  (RB down))
                                (, ,)
                                (PP (IN till)
                                  (PP (IN at)
                                    (NP
                                      (NP (JJ last))
                                      (ADVP (DT all) (IN at))))))))))))
                  (SBAR (IN once)
                    (S
                      (NP (PRP he))
                      (VP (VBD found)
                        (NP (PRP himself))
                        (PP (IN in)
                          (NP
                            (NP (DT the) (NNS arms))
                            (PP (IN of)
                              (NP
                                (NP (NNP North) (NNP Wind))
                                (, ,)
                                (SBAR
                                  (WHNP (WP who))
                                  (S
                                    (VP
                                      (VP (VBD held)
                                        (S
                                          (NP (PRP him))
                                          (ADJP (JJ close)
                                            (PP (TO to)
                                              (NP (PRP her))))))
                                      (, ,)
                                      (CC and)
                                      (VP (VBD kissed)
                                        (NP (PRP him))
                                        (PP (IN on)
                                          (NP (DT the) (NN forehead)))))))))))))))))))))
    (. .)))

nsubj(walked-2, He-1)
root(ROOT-0, walked-2)
advmod(walked-2, on-3)
advmod(walked-2, on-5)
conj_and(on-3, on-5)
det(windows-9, the-8)
prep_with(walked-2, windows-9)
dep(walked-2, all-10)
det(row-13, a-12)
prep_in(walked-2, row-13)
num(side-16, one-15)
prep_on(row-13, side-16)
prep_of(side-16, him-18)
det(nave-24, the-21)
amod(nave-24, great-22)
amod(nave-24, empty-23)
nsubj(echoing-28, nave-24)
det(church-27, the-26)
prep_of(nave-24, church-27)
conj_and(walked-2, echoing-28)
det(one-31, every-30)
prep_to(echoing-28, one-31)
poss(strides-35, his-33)
amod(strides-35, brave-34)
prep_of(one-31, strides-35)
det(other-38, the-37)
prep_on(echoing-28, other-38)
prep_at(came-44, last-42)
nsubj(came-44, he-43)
prepc_until(other-38, came-44)
det(door-49, a-46)
advmod(open-48, little-47)
amod(door-49, open-48)
prep_to(came-44, door-49)
prep_from(led-56, door-49)
det(stair-55, a-53)
amod(stair-55, broader-54)
nsubj(led-56, stair-55)
rcmod(door-49, led-56)
dep(led-56, him-57)
advmod(him-57, down-58)
advmod(till-64, down-60)
conj_and(down-60, down-62)
advmod(till-64, down-62)
dep(led-56, till-64)
conj_and(him-57, till-64)
pcomp(till-64, at-65)
pobj(at-65, last-66)
pobj(at-68, all-67)
advmod(last-66, at-68)
mark(found-71, once-69)
nsubj(found-71, he-70)
advcl(came-44, found-71)
dobj(found-71, himself-72)
det(arms-75, the-74)
prep_in(found-71, arms-75)
nn(Wind-78, North-77)
prep_of(arms-75, Wind-78)
nsubj(held-81, Wind-78)
nsubj(kissed-88, Wind-78)
rcmod(Wind-78, held-81)
nsubj(close-83, him-82)
xcomp(held-81, close-83)
prep_to(close-83, her-85)
rcmod(Wind-78, kissed-88)
conj_and(held-81, kissed-88)
dobj(kissed-88, him-89)
det(forehead-92, the-91)
prep_on(kissed-88, forehead-92)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP
        (VP (VBD nestled)
          (PP (TO to)
            (NP (PRP her))))
        (, ,)
        (CC and)
        (VP (VBD murmured)
          (PP (IN into)
            (NP (PRP$ her) (NN bosom))))
        (, ,)))
    (: --) (`` ``)
    (SBARQ
      (WHADVP (WRB Why))
      (SQ (VBD did)
        (NP (PRP you))
        (VP (VB leave)
          (NP (PRP me))
          (, ,)
          (NP
            (ADJP (RB dear))
            (JJ North) (NN Wind)))))
    (. ?) ('' '')))

nsubj(nestled-2, Diamond-1)
nsubj(murmured-7, Diamond-1)
root(ROOT-0, nestled-2)
prep_to(nestled-2, her-4)
conj_and(nestled-2, murmured-7)
poss(bosom-10, her-9)
prep_into(murmured-7, bosom-10)
advmod(leave-17, Why-14)
aux(leave-17, did-15)
nsubj(leave-17, you-16)
parataxis(nestled-2, leave-17)
dobj(leave-17, me-18)
amod(Wind-22, dear-20)
amod(Wind-22, North-21)
dobj(leave-17, Wind-22)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP I))
        (VP (VBD wanted)
          (S
            (NP (PRP you))
            (VP (TO to)
              (VP (VB walk)
                (ADVP (RB alone))))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

mark(wanted-4, Because-2)
nsubj(wanted-4, I-3)
advcl(answered-12, wanted-4)
dobj(wanted-4, you-5)
nsubj(walk-7, you-5)
aux(walk-7, to-6)
xcomp(wanted-4, walk-7)
advmod(walk-7, alone-8)
nsubj(answered-12, she-11)
root(ROOT-0, answered-12)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (RB so) (RB much) (JJR nicer))
      (ADVP (RB here)))
    (. !) ('' '')))

cc(nicer-7, But-2)
nsubj(nicer-7, it-3)
cop(nicer-7, is-4)
advmod(nicer-7, so-5)
advmod(nicer-7, much-6)
root(ROOT-0, nicer-7)
advmod(nicer-7, here-8)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP daresay)))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB hold)
          (NP (DT a) (JJ little) (NN coward))
          (PP (TO to)
            (NP (PRP$ my) (NN heart))))))
    (. .)))

nsubj(daresay-3, I-2)
root(ROOT-0, daresay-3)
nsubj(hold-9, I-6)
aux(hold-9, could-7)
neg(hold-9, n't-8)
conj_but(daresay-3, hold-9)
det(coward-12, a-10)
amod(coward-12, little-11)
dobj(hold-9, coward-12)
poss(heart-15, my-14)
prep_to(hold-9, heart-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB make)
        (S
          (NP (PRP me))
          (ADJP (RB so) (JJ cold)))))
    (. !) ('' '')))

nsubj(make-3, It-1)
aux(make-3, would-2)
root(ROOT-0, make-3)
nsubj(cold-6, me-4)
advmod(cold-6, so-5)
xcomp(make-3, cold-6)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (NP (PRP I))
      (VP (VBD was) (RB n't)
        (ADJP (JJ brave)
          (PP (IN of)
            (NP (PRP myself))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (SBAR
        (WHNP (WP whom))
        (S
          (NP (PRP$ my) (JJR older) (NNS readers))
          (VP (MD will)
            (VP (VB have)
              (VP
                (ADVP (RB already))
                (VBN discovered)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP
                        (NP (DT a) (JJ true) (NN child))
                        (PP (IN in)
                          (NP (DT this)))))))
                (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (VP (VBN given)
                        (PP (TO to)
                          (NP (NNS metaphysics)))))))))))))
    (. .)))

cc(brave-6, But-2)
nsubj(brave-6, I-3)
cop(brave-6, was-4)
neg(brave-6, n't-5)
ccomp(said-11, brave-6)
prep_of(brave-6, myself-8)
root(ROOT-0, said-11)
nsubj(said-11, Diamond-12)
dobj(discovered-21, Diamond-12)
nsubj(child-26, Diamond-12)
poss(readers-17, my-15)
amod(readers-17, older-16)
nsubj(discovered-21, readers-17)
aux(discovered-21, will-18)
aux(discovered-21, have-19)
advmod(discovered-21, already-20)
rcmod(Diamond-12, discovered-21)
aux(child-26, to-22)
cop(child-26, be-23)
det(child-26, a-24)
amod(child-26, true-25)
xcomp(discovered-21, child-26)
prep_in(child-26, this-28)
mark(given-33, that-30)
nsubjpass(given-33, he-31)
auxpass(given-33, was-32)
ccomp(discovered-21, given-33)
prep_to(given-33, metaphysics-35)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN wind))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD blew)
              (PP (IN in)
                (NP
                  (NP (PRP$ my) (NN face))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD made)
                        (S
                          (NP (PRP me))
                          (ADJP (JJ brave)))))))))))))
    (. .)))

nsubj(wind-5, It-2)
cop(wind-5, was-3)
det(wind-5, the-4)
root(ROOT-0, wind-5)
nsubj(blew-7, wind-5)
rcmod(wind-5, blew-7)
poss(face-10, my-9)
prep_in(blew-7, face-10)
nsubj(made-12, face-10)
rcmod(face-10, made-12)
nsubj(brave-14, me-13)
xcomp(made-12, brave-14)

(ROOT
  (FRAG
    (S
      (VP (VBD Was) (RB n't)
        (NP (PRP it))
        (ADVP (RB now))
        (, ,)
        (ADJP (JJ North)
          (NP (CD Wind)))))
    (. ?) ('' '')))

cop(North-6, Was-1)
neg(North-6, n't-2)
dep(North-6, it-3)
advmod(North-6, now-4)
root(ROOT-0, North-6)
dep(North-6, Wind-7)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP (DT that))))
    (. .)))

advmod(know-5, Yes-2)
nsubj(know-5, I-4)
root(ROOT-0, know-5)
dobj(know-5, that-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN taught)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (NN courage))
                  (VP (VBD was)))))))))
    (. .)))

nsubj(had-2, You-1)
nsubjpass(taught-5, You-1)
root(ROOT-0, had-2)
aux(taught-5, to-3)
auxpass(taught-5, be-4)
xcomp(had-2, taught-5)
dobj(was-8, what-6)
nsubj(was-8, courage-7)
ccomp(taught-5, was-8)

(ROOT
  (S
    (S (CC And)
      (NP (PRP you))
      (VP (MD could) (RB n't)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBD was)
                (PP (IN without)
                  (S
                    (VP (VBG feeling)
                      (NP (PRP it)))))))))))
    (: :)
    (S
      (ADVP (RB therefore))
      (NP (PRP it))
      (VP (VBD was)
        (VP (VBN given)
          (NP (PRP you)))))
    (. .)))

cc(know-5, And-1)
nsubj(know-5, you-2)
aux(know-5, could-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
dobj(was-8, what-6)
nsubj(was-8, it-7)
ccomp(know-5, was-8)
prepc_without(was-8, feeling-10)
dobj(feeling-10, it-11)
advmod(given-16, therefore-13)
nsubjpass(given-16, it-14)
auxpass(given-16, was-15)
parataxis(know-5, given-16)
dobj(given-16, you-17)

(ROOT
  (S
    (S (CC But)
      (VP (VB do) (RB n't)))
    (S
      (NP (PRP you))
      (VP (VBP feel)
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP you))
            (VP (MD would)
              (VP (VB try)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ brave)
                        (NP (PRP yourself)))
                      (NP (JJ next) (NN time)))))))))))
    (. ?) ('' '')))

cc(do-2, But-1)
root(ROOT-0, do-2)
neg(do-2, n't-3)
nsubj(feel-5, you-4)
parataxis(do-2, feel-5)
advmod(try-10, as-6)
mark(try-10, if-7)
nsubj(try-10, you-8)
nsubj(brave-13, you-8)
aux(try-10, would-9)
advcl(feel-5, try-10)
aux(brave-13, to-11)
cop(brave-13, be-12)
xcomp(try-10, brave-13)
dep(brave-13, yourself-14)
amod(time-16, next-15)
dep(brave-13, time-16)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP do))
    (. .)))

discourse(do-5, Yes-2)
nsubj(do-5, I-4)
root(ROOT-0, do-5)

(ROOT
  (S (CC But)
    (S
      (VP (VBG trying)))
    (VP (VBZ is) (RB not)
      (ADJP (JJ much)))
    (. .) ('' '')))

cc(much-5, But-1)
csubj(much-5, trying-2)
cop(much-5, is-3)
neg(much-5, not-4)
root(ROOT-0, much-5)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP it))
    (VP
      (VP (VBZ is))
      (: --)
      (NP
        (NP (DT a)
          (ADJP (RB very) (JJ great))
          (NN deal))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP (DT a) (NN beginning)))))))
    (. .)))

discourse(is-5, Yes-2)
nsubj(is-5, it-4)
root(ROOT-0, is-5)
det(deal-10, a-7)
advmod(great-9, very-8)
amod(deal-10, great-9)
dobj(is-5, deal-10)
parataxis(is-5, deal-10)
mark(beginning-16, for-12)
nsubj(beginning-16, it-13)
cop(beginning-16, is-14)
det(beginning-16, a-15)
dep(deal-10, beginning-16)

(ROOT
  (S (CC And)
    (NP (DT a) (NN beginning))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS greatest) (NN thing))
        (PP (IN of)
          (NP (DT all)))))
    (. .)))

cc(thing-7, And-1)
det(beginning-3, a-2)
nsubj(thing-7, beginning-3)
cop(thing-7, is-4)
det(thing-7, the-5)
amod(thing-7, greatest-6)
root(ROOT-0, thing-7)
prep_of(thing-7, all-9)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB try)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ brave))))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ brave))))))
    (. .)))

aux(try-2, To-1)
csubj(is-6, try-2)
aux(brave-5, to-3)
cop(brave-5, be-4)
xcomp(try-2, brave-5)
root(ROOT-0, is-6)
aux(brave-9, to-7)
cop(brave-9, be-8)
xcomp(is-6, brave-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NN coward))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ tries)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ brave)))))))))
    (VP (VBZ is)
      (PP (IN before)
        (NP
          (NP (DT the) (NN man))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ is)
                (ADJP (JJ brave))
                (SBAR (IN because)
                  (S
                    (NP (PRP he))
                    (VP
                      (VP (VBZ is)
                        (VP (VBN made)
                          (ADVP (RB so))))
                      (, ,)
                      (CC and)
                      (ADVP (RB never))
                      (VP (VBD had)
                        (S
                          (VP (TO to)
                            (VP (VB try))))))))))))))
    (. .) ('' '')))

det(coward-2, The-1)
nsubj(tries-4, coward-2)
nsubj(brave-7, coward-2)
nsubj(is-8, coward-2)
rcmod(coward-2, tries-4)
aux(brave-7, to-5)
cop(brave-7, be-6)
xcomp(tries-4, brave-7)
root(ROOT-0, is-8)
det(man-11, the-10)
prep_before(is-8, man-11)
nsubj(brave-14, man-11)
cop(brave-14, is-13)
rcmod(man-11, brave-14)
mark(made-18, because-15)
nsubjpass(made-18, he-16)
nsubjpass(had-23, he-16)
nsubj(try-25, he-16)
auxpass(made-18, is-17)
advcl(brave-14, made-18)
advmod(made-18, so-19)
neg(had-23, never-22)
advcl(brave-14, had-23)
conj_and(made-18, had-23)
aux(try-25, to-24)
xcomp(had-23, try-25)

(ROOT
  (S (`` ``)
    (SBAR
      (WHNP
        (WHADVP (WRB How))
        (NN kind))
      (S
        (NP (PRP you))
        (VP (VBP are))))
    (, ,)
    (NP (NNP North))
    (VP (VBZ Wind))
    (. !) ('' '')))

advmod(kind-3, How-2)
dobj(are-5, kind-3)
nsubj(are-5, you-4)
advcl(Wind-8, are-5)
nsubj(Wind-8, North-7)
root(ROOT-0, Wind-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB only))
      (ADVP (RB just)))
    (. .)))

nsubj(am-3, I-2)
root(ROOT-0, am-3)
advmod(am-3, only-4)
advmod(am-3, just-5)

(ROOT
  (S
    (NP (DT All) (NN kindness))
    (VP (VBZ is)
      (PP (CC but)
        (NP (NN justice))))
    (. .)))

det(kindness-2, All-1)
nsubj(is-3, kindness-2)
root(ROOT-0, is-3)
prep(is-3, but-4)
pobj(but-4, justice-5)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP owe)
      (NP (PRP it)))
    (. .) ('' '')))

nsubj(owe-2, We-1)
root(ROOT-0, owe-2)
dobj(owe-2, it-3)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (ADVP (RB quite))
      (VP (VB understand)
        (NP (DT that))))
    (. .) ('' '')))

nsubj(understand-6, I-2)
aux(understand-6, do-3)
neg(understand-6, n't-4)
advmod(understand-6, quite-5)
root(ROOT-0, understand-6)
dobj(understand-6, that-7)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Never)
        (NP (NN mind))))
    (: ;)
    (NP (PRP you))
    (VP (MD will)
      (VP
        (NP (DT some) (NN day))))
    (. .)))

dep(day-8, Never-2)
dobj(Never-2, mind-3)
nsubj(day-8, you-5)
aux(day-8, will-6)
det(day-8, some-7)
root(ROOT-0, day-8)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN hurry))
        (PP (IN about)
          (S
            (VP (VBG understanding)
              (NP (PRP it))
              (ADVP (RB now)))))))
    (. .) ('' '')))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(hurry-4, no-3)
nsubj(is-2, hurry-4)
prepc_about(hurry-4, understanding-6)
dobj(understanding-6, it-7)
advmod(understanding-6, now-8)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ
      (VP (VBD blew)
        (NP
          (NP (DT the) (NN wind))
          (PP (IN on)
            (NP (PRP me)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD made)
                (S
                  (NP (PRP me))
                  (ADJP (JJ brave)))))))))
    (. ?) ('' '')))

nsubj(blew-3, Who-2)
root(ROOT-0, blew-3)
det(wind-5, the-4)
dobj(blew-3, wind-5)
nsubj(made-9, wind-5)
prep_on(wind-5, me-7)
rcmod(wind-5, made-9)
nsubj(brave-11, me-10)
xcomp(made-9, brave-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD did))
    (. .) ('' '')))

nsubj(did-3, I-2)
root(ROOT-0, did-3)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB see)
        (NP (PRP you))))
    (. .) ('' '')))

nsubj(see-5, I-2)
aux(see-5, did-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
dobj(see-5, you-6)

(ROOT
  (S (`` ``)
    (ADVP (RB Therefore))
    (NP (PRP you))
    (VP (MD can)
      (VP (VB believe)
        (NP (PRP me))))
    (. .) ('' '')))

advmod(believe-5, Therefore-2)
nsubj(believe-5, you-3)
aux(believe-5, can-4)
root(ROOT-0, believe-5)
dobj(believe-5, me-6)

(ROOT
  (FRAG
    (FRAG
      (INTJ (`` ``) (UH Yes))
      (, ,)
      (NP (RB yes)))
    (: ;)
    (FRAG
      (PP (IN of)
        (NP (NN course)))
      (. .))))

discourse(yes-4, Yes-2)
root(ROOT-0, yes-4)
dep(yes-4, of-6)
pobj(of-6, course-7)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB how))
    (SQ (VBD was)
      (NP (PRP it))
      (SBAR (IN that)
        (S
          (NP (PDT such) (DT a) (JJ little) (NN breath))
          (VP (MD could)
            (VP (VB be)
              (ADJP (RB so) (JJ strong)))))))
    (. ?) ('' '')))

cc(was-3, But-1)
advmod(was-3, how-2)
root(ROOT-0, was-3)
nsubj(was-3, it-4)
mark(strong-13, that-5)
predet(breath-9, such-6)
det(breath-9, a-7)
amod(breath-9, little-8)
nsubj(strong-13, breath-9)
aux(strong-13, could-10)
cop(strong-13, be-11)
advmod(strong-13, so-12)
dep(was-3, strong-13)

(ROOT
  (S (`` ``)
    (NP (DT That) (NN I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .) ('' '')))

det(I-3, That-2)
nsubj(know-6, I-3)
aux(know-6, do-4)
neg(know-6, n't-5)
root(ROOT-0, know-6)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (VBD made)
      (S
        (NP (PRP it))
        (ADJP (JJ strong))))
    (. ?) ('' '')))

cc(made-4, But-2)
nsubj(made-4, you-3)
root(ROOT-0, made-4)
nsubj(strong-6, it-5)
xcomp(made-4, strong-6)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: :)
    (S
      (NP (PRP I))
      (ADVP (RB only))
      (VP (VBD blew)
        (NP (PRP it))))
    (. .)))

dep(blew-6, No-2)
nsubj(blew-6, I-4)
advmod(blew-6, only-5)
root(ROOT-0, blew-6)
dobj(blew-6, it-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD knew)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB make)
                (S
                  (NP (PRP you))
                  (ADJP (JJ strong)))))))
        (, ,)
        (SBAR (RB just) (IN as)
          (S
            (NP (PRP it))
            (VP (VBD did)
              (NP (DT the) (NN man))
              (PP (IN in)
                (NP (DT the) (NN boat))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP remember))
    (. .)))

nsubj(knew-2, I-1)
ccomp(remember-20, knew-2)
nsubj(make-5, it-3)
aux(make-5, would-4)
ccomp(knew-2, make-5)
nsubj(strong-7, you-6)
xcomp(make-5, strong-7)
advmod(did-12, just-9)
mark(did-12, as-10)
nsubj(did-12, it-11)
advcl(knew-2, did-12)
det(man-14, the-13)
dobj(did-12, man-14)
det(boat-17, the-16)
prep_in(did-12, boat-17)
nsubj(remember-20, you-19)
root(ROOT-0, remember-20)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB how))
      (S
        (NP (PRP$ my) (NN breath))
        (VP (VBZ has)
          (NP (DT that) (NN power)))))
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB tell)))
    (. .)))

cc(tell-11, But-1)
advmod(has-5, how-2)
poss(breath-4, my-3)
nsubj(has-5, breath-4)
advcl(tell-11, has-5)
det(power-7, that-6)
dobj(has-5, power-7)
nsubj(tell-11, I-8)
aux(tell-11, can-9)
neg(tell-11, not-10)
root(ROOT-0, tell-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (VP (VBN put)
        (PP (IN into)
          (NP (PRP it)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBN made)))))))
    (. .)))

nsubjpass(put-3, It-1)
auxpass(put-3, was-2)
root(ROOT-0, put-3)
prep_into(put-3, it-5)
advmod(made-9, when-6)
nsubjpass(made-9, I-7)
auxpass(made-9, was-8)
advcl(put-3, made-9)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP know))))))
    (. .)))

nsubj(all-3, That-1)
cop(all-3, is-2)
root(ROOT-0, all-3)
nsubj(know-5, I-4)
rcmod(all-3, know-5)

(ROOT
  (S (CC But)
    (ADVP (RB really))
    (NP (PRP I))
    (VP (MD must)
      (VP (VB be)
        (VP (VBG going)
          (PP (IN about)
            (NP (PRP$ my) (NN work))))))
    (. .) ('' '')))

cc(going-6, But-1)
advmod(going-6, really-2)
nsubj(going-6, I-3)
aux(going-6, must-4)
aux(going-6, be-5)
root(ROOT-0, going-6)
poss(work-9, my-8)
prep_about(going-6, work-9)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (NP (DT the) (JJ poor) (NN ship) (. !)))

det(ship-3, the-1)
amod(ship-3, poor-2)
root(ROOT-0, ship-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD would)
            (VP
              (VP (VB stop)
                (ADVP (RB here)))
              (, ,)
              (CC and)
              (VP (VB let)
                (S
                  (NP (DT the) (JJ poor) (NN ship))
                  (VP (VB go)))))))))
    (. .) ('' '')))

nsubj(wish-2, I-1)
root(ROOT-0, wish-2)
nsubj(stop-5, you-3)
nsubj(let-9, you-3)
aux(stop-5, would-4)
ccomp(wish-2, stop-5)
advmod(stop-5, here-6)
ccomp(wish-2, let-9)
conj_and(stop-5, let-9)
det(ship-12, the-10)
amod(ship-12, poor-11)
nsubj(go-13, ship-12)
ccomp(let-9, go-13)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (NP (PRP I))
    (VP (MD dare) (RB not)
      (VP (VB do)))
    (. .)))

nsubj(do-6, That-2)
nsubj(do-6, I-3)
aux(do-6, dare-4)
neg(do-6, not-5)
root(ROOT-0, do-6)

(ROOT
  (SQ (MD Will)
    (NP (PRP you))
    (VP (VBP stop)
      (SBAR
        (ADVP (RB here))
        (IN till)
        (S
          (NP (PRP I))
          (VP (VBP come)
            (ADVP (RB back))))))
    (. ?) ('' '')))

aux(stop-3, Will-1)
nsubj(stop-3, you-2)
root(ROOT-0, stop-3)
advmod(come-7, here-4)
mark(come-7, till-5)
nsubj(come-7, I-6)
advcl(stop-3, come-7)
advmod(come-7, back-8)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD wo) (RB n't)
      (VP (VB be)
        (ADJP (JJ long))))
    (. ?) ('' '')))

nsubj(long-5, You-1)
aux(long-5, wo-2)
neg(long-5, n't-3)
cop(long-5, be-4)
root(ROOT-0, long-5)

(ROOT
  (S (`` ``)
    (ADVP
      (ADVP (RB Not) (RB longer))
      (IN than))
    (NP (PRP I))
    (VP (MD can)
      (VP (VB help)))
    (. .)))

dep(longer-3, Not-2)
advmod(help-7, longer-3)
dep(longer-3, than-4)
nsubj(help-7, I-5)
aux(help-7, can-6)
root(ROOT-0, help-7)

(ROOT
  (S
    (NP (NNP Trust) (PRP me))
    (, ,)
    (NP (PRP you))
    (VP (MD shall)
      (VP (VB get)
        (NP (NN home))
        (PP (IN before)
          (NP (DT the) (NN morning)))))
    (. .) ('' '')))

nsubj(get-6, Trust-1)
dep(Trust-1, me-2)
nsubj(get-6, you-4)
aux(get-6, shall-5)
root(ROOT-0, get-6)
dobj(get-6, home-7)
det(morning-10, the-9)
prep_before(get-6, morning-10)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT a) (NN moment)))
      (NP (NNP North) (NNP Wind))
      (VP (VBD was)
        (VP (VBN gone))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJ next) (NNP Diamond))
      (VP (VBD heard)
        (NP (DT a) (NN moaning))
        (PP (IN about)
          (NP
            (NP (DT the) (NN church))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD grew)
                  (CC and)
                  (VBD grew)
                  (PP (TO to)
                    (NP (DT a) (NN roaring))))))))))
    (. .)))

det(moment-3, a-2)
prep_in(gone-7, moment-3)
nn(Wind-5, North-4)
nsubjpass(gone-7, Wind-5)
auxpass(gone-7, was-6)
root(ROOT-0, gone-7)
det(Diamond-12, the-10)
amod(Diamond-12, next-11)
nsubj(heard-13, Diamond-12)
conj_and(gone-7, heard-13)
det(moaning-15, a-14)
dobj(heard-13, moaning-15)
det(church-18, the-17)
prep_about(heard-13, church-18)
nsubj(grew-21, church-18)
nsubj(grew-23, church-18)
rcmod(church-18, grew-21)
rcmod(church-18, grew-23)
conj_and(grew-21, grew-23)
det(roaring-26, a-25)
prep_to(grew-21, roaring-26)

(ROOT
  (S
    (S
      (NP (DT The) (NN storm))
      (VP (VBD was)
        (ADVP (RB up) (RB again))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD knew)
        (SBAR (IN that)
          (S
            (NP
              (NP (NNP North) (NNP Wind) (POS 's))
              (NN hair))
            (VP (VBD was)
              (VP (VBG flying)))))))
    (. .)))

det(storm-2, The-1)
nsubj(was-3, storm-2)
root(ROOT-0, was-3)
advmod(again-5, up-4)
advmod(was-3, again-5)
nsubj(knew-9, he-8)
conj_and(was-3, knew-9)
mark(flying-16, that-10)
nn(Wind-12, North-11)
poss(hair-14, Wind-12)
nsubj(flying-16, hair-14)
aux(flying-16, was-15)
ccomp(knew-9, flying-16)

(ROOT
  (S
    (NP (DT The) (NN church))
    (VP (VBD was)
      (ADJP (JJ dark)))
    (. .)))

det(church-2, The-1)
nsubj(dark-4, church-2)
cop(dark-4, was-3)
root(ROOT-0, dark-4)

(ROOT
  (S
    (NP (RB Only) (DT a) (JJ little) (NN light))
    (VP (VBD came)
      (PP (IN through)
        (NP
          (NP (DT the) (NNS windows))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD were)
                (NP
                  (NP
                    (QP (RB almost) (DT all)))
                  (PP (IN of)
                    (NP
                      (NP (DT that) (JJ precious) (JJ old) (JJ stained) (NN glass))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ is)
                            (ADJP
                              (ADJP (RB so) (RB much) (JJ lovelier))
                              (PP (IN than)
                                (NP (DT the) (JJ new))))))))))))))))
    (. .)))

advmod(light-4, Only-1)
det(light-4, a-2)
amod(light-4, little-3)
nsubj(came-5, light-4)
root(ROOT-0, came-5)
det(windows-8, the-7)
prep_through(came-5, windows-8)
nsubj(all-13, windows-8)
cop(all-13, were-11)
quantmod(all-13, almost-12)
rcmod(windows-8, all-13)
det(glass-19, that-15)
amod(glass-19, precious-16)
amod(glass-19, old-17)
amod(glass-19, stained-18)
prep_of(all-13, glass-19)
nsubj(lovelier-24, glass-19)
cop(lovelier-24, is-21)
advmod(lovelier-24, so-22)
advmod(lovelier-24, much-23)
rcmod(glass-19, lovelier-24)
det(new-27, the-26)
prep_than(lovelier-24, new-27)

(ROOT
  (S (CC But)
    (NP (NNP Diamond))
    (VP (MD could) (RB not)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB how)
            (ADJP (JJ beautiful)))
          (S
            (NP (PRP they))
            (VP
              (VP (VBD were))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (EX there))
                  (VP (VBD was) (RB not)
                    (ADJP (JJ enough)
                      (PP (IN of)
                        (NP
                          (NP (NN light))
                          (PP (IN in)
                            (NP (DT the) (NNS stars)))))
                      (S
                        (VP (TO to)
                          (VP (VB show)
                            (NP
                              (NP (DT the) (NNS colours))
                              (PP (IN of)
                                (NP (PRP them))))))))))))))))
    (. .)))

cc(see-5, But-1)
nsubj(see-5, Diamond-2)
aux(see-5, could-3)
neg(see-5, not-4)
root(ROOT-0, see-5)
advmod(were-9, how-6)
dep(how-6, beautiful-7)
nsubj(were-9, they-8)
ccomp(see-5, were-9)
mark(was-13, for-11)
expl(was-13, there-12)
advcl(were-9, was-13)
neg(was-13, not-14)
acomp(was-13, enough-15)
prep_of(enough-15, light-17)
det(stars-20, the-19)
prep_in(light-17, stars-20)
aux(show-22, to-21)
xcomp(enough-15, show-22)
det(colours-24, the-23)
dobj(show-22, colours-24)
prep_of(colours-24, them-26)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD could)
        (ADVP (RB only) (RB just))
        (VP (VB distinguish)
          (NP (PRP them))
          (PP (IN from)
            (NP (DT the) (NNS walls))))))
    (, ,)
    (NP (PRP He))
    (VP
      (VP (VBD looked)
        (PRT (RP up)))
      (, ,)
      (CC but)
      (VP (MD could) (RB not)
        (VP (VB see)
          (NP
            (NP (DT the) (NN gallery))
            (PP (IN along)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN passed))))))))))
    (. .)))

nsubj(distinguish-5, He-1)
aux(distinguish-5, could-2)
advmod(just-4, only-3)
advmod(distinguish-5, just-4)
ccomp(looked-12, distinguish-5)
dobj(distinguish-5, them-6)
det(walls-9, the-8)
prep_from(distinguish-5, walls-9)
nsubj(looked-12, He-11)
nsubj(see-18, He-11)
root(ROOT-0, looked-12)
prt(looked-12, up-13)
aux(see-18, could-16)
neg(see-18, not-17)
conj_but(looked-12, see-18)
det(gallery-20, the-19)
dobj(see-18, gallery-20)
dobj(passed-25, which-22)
nsubj(passed-25, he-23)
aux(passed-25, had-24)
prepc_along(gallery-20, passed-25)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD could)
      (ADVP (RB only))
      (VP (VB tell)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADVP (RB far) (RB up))
              (PP (IN by)
                (NP
                  (NP (DT the) (JJ faint) (NN glimmer))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NNS windows))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN clerestory))
                          (, ,)
                          (SBAR (WP$ whose)
                            (S
                              (NP (NNS sills))
                              (VP (VBD made)
                                (NP
                                  (NP (NN part))
                                  (PP (IN of)
                                    (NP (PRP it))))))))))))))))))
    (. .)))

nsubj(tell-4, He-1)
aux(tell-4, could-2)
advmod(tell-4, only-3)
root(ROOT-0, tell-4)
advmod(was-7, where-5)
nsubj(was-7, it-6)
ccomp(tell-4, was-7)
advmod(up-9, far-8)
advmod(was-7, up-9)
det(glimmer-13, the-11)
amod(glimmer-13, faint-12)
prep_by(was-7, glimmer-13)
det(windows-16, the-15)
prep_of(glimmer-13, windows-16)
det(clerestory-19, the-18)
prep_of(windows-16, clerestory-19)
dep(made-23, whose-21)
nsubj(made-23, sills-22)
dep(clerestory-19, made-23)
dobj(made-23, part-24)
prep_of(part-24, it-26)

(ROOT
  (S
    (S
      (NP (DT The) (NN church))
      (VP (VBD grew)
        (ADJP (RB very) (JJ lonely))
        (PP (IN about)
          (NP (PRP him)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB feel)
              (PP (IN like)
                (NP
                  (NP (DT a) (NN child))
                  (SBAR
                    (WHNP (WP$ whose) (NNS mother))
                    (S
                      (VP (VBZ has)
                        (VP (VBN forsaken)
                          (NP (PRP it)))))))))))))
    (. .)))

det(church-2, The-1)
nsubj(grew-3, church-2)
root(ROOT-0, grew-3)
advmod(lonely-5, very-4)
acomp(grew-3, lonely-5)
prep_about(grew-3, him-7)
nsubj(began-11, he-10)
nsubj(feel-13, he-10)
conj_and(grew-3, began-11)
aux(feel-13, to-12)
xcomp(began-11, feel-13)
det(child-16, a-15)
prep_like(feel-13, child-16)
poss(mother-18, child-16)
nsubj(forsaken-20, mother-18)
aux(forsaken-20, has-19)
rcmod(child-16, forsaken-20)
dobj(forsaken-20, it-21)

(ROOT
  (S (RB Only)
    (NP (PRP he))
    (VP (VBD knew)
      (SBAR (IN that)
        (S
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN left)
                  (ADVP (RB alone))))))
          (VP (VBZ is) (RB not)
            (ADVP (RB always))
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN forsaken)))))))))
    (. .)))

advmod(knew-3, Only-1)
nsubj(knew-3, he-2)
root(ROOT-0, knew-3)
mark(is-9, that-4)
aux(left-7, to-5)
auxpass(left-7, be-6)
csubj(is-9, left-7)
advmod(left-7, alone-8)
ccomp(knew-3, is-9)
neg(is-9, not-10)
advmod(is-9, always-11)
aux(forsaken-14, to-12)
auxpass(forsaken-14, be-13)
xcomp(is-9, forsaken-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD began)
      (SBAR
        (SBAR
          (S
            (VP (TO to)
              (VP (VB feel)
                (NP (PRP$ his) (NN way))
                (PP (IN about)
                  (NP (DT the) (NN place)))))))
        (, ,)
        (CC and)
        (SBAR (IN for)
          (S
            (NP (DT a) (NN while))
            (VP (VBD went)
              (S
                (VP (VBG wandering)
                  (ADVP (RB up)
                    (CC and)
                    (RB down)))))))))
    (. .)))

nsubj(began-2, He-1)
root(ROOT-0, began-2)
aux(feel-4, to-3)
advcl(began-2, feel-4)
poss(way-6, his-5)
dobj(feel-4, way-6)
det(place-9, the-8)
prep_about(feel-4, place-9)
mark(went-15, for-12)
det(while-14, a-13)
nsubj(went-15, while-14)
advcl(began-2, went-15)
conj_and(feel-4, went-15)
xcomp(went-15, wandering-16)
advmod(wandering-16, up-17)
advmod(wandering-16, down-19)
conj_and(up-17, down-19)

(ROOT
  (S
    (NP (PRP$ His) (JJ little) (NNS footsteps))
    (VP (VBD waked)
      (NP (JJ little) (NN answering) (NNS echoes))
      (PP (IN in)
        (NP (DT the) (JJ great) (NN house))))
    (. .)))

poss(footsteps-3, His-1)
amod(footsteps-3, little-2)
nsubj(waked-4, footsteps-3)
root(ROOT-0, waked-4)
amod(echoes-7, little-5)
nn(echoes-7, answering-6)
dobj(waked-4, echoes-7)
det(house-11, the-9)
amod(house-11, great-10)
prep_in(waked-4, house-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was) (RB n't)
      (ADJP (RB too) (JJ big)
        (S
          (VP (TO to)
            (VP (VB mind)
              (NP (PRP him)))))))
    (. .)))

nsubj(big-5, It-1)
nsubj(mind-7, It-1)
cop(big-5, was-2)
neg(big-5, n't-3)
advmod(big-5, too-4)
root(ROOT-0, big-5)
aux(mind-7, to-6)
xcomp(big-5, mind-7)
dobj(mind-7, him-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (SBAR (RB as) (IN if)
        (S
          (NP (DT the) (NN church))
          (VP (VBD knew)
            (SBAR
              (S
                (NP (PRP he))
                (VP
                  (VP (VBD was)
                    (ADVP (RB there)))
                  (, ,)
                  (CC and)
                  (VP (VBD meant)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (S
                            (NP (PRP itself))
                            (NP (PRP$ his) (NN house))))))))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(knew-7, as-3)
mark(knew-7, if-4)
det(church-6, the-5)
nsubj(knew-7, church-6)
advcl(was-2, knew-7)
nsubj(was-9, he-8)
nsubj(meant-13, he-8)
nsubj(make-15, he-8)
ccomp(knew-7, was-9)
advmod(was-9, there-10)
ccomp(knew-7, meant-13)
conj_and(was-9, meant-13)
aux(make-15, to-14)
xcomp(meant-13, make-15)
nsubj(house-18, itself-16)
poss(house-18, his-17)
xcomp(make-15, house-18)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBD went)
      (PP (IN on)
        (S
          (VP (VBG giving)
            (PRT (RP back))
            (NP (DT an) (NN answer))
            (PP (TO to)
              (NP (DT every) (NN step)))
            (, ,)
            (SBAR (IN until)
              (S
                (PP (IN at)
                  (NP (NN length)))
                (NP (NNP Diamond))
                (VP (VBD thought)
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (MD should)
                        (VP (VB like)
                          (S
                            (VP (TO to)
                              (VP
                                (VP (VB say)
                                  (NP (NN something))
                                  (ADVP (IN out) (RB loud)))
                                (, ,)
                                (CC and)
                                (VP (VB see)
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (NP (DT the) (NN church))
                                      (VP (MD would)
                                        (VP (VB answer))))))))))))))))))))
    (. .)))

dep(went-3, So-1)
nsubj(went-3, it-2)
root(ROOT-0, went-3)
prepc_on(went-3, giving-5)
prt(giving-5, back-6)
det(answer-8, an-7)
dobj(giving-5, answer-8)
det(step-11, every-10)
prep_to(giving-5, step-11)
mark(thought-17, until-13)
prep_at(thought-17, length-15)
nsubj(thought-17, Diamond-16)
advcl(giving-5, thought-17)
nsubj(like-20, he-18)
nsubj(say-22, he-18)
nsubj(see-28, he-18)
aux(like-20, should-19)
ccomp(thought-17, like-20)
aux(say-22, to-21)
xcomp(like-20, say-22)
dobj(say-22, something-23)
advmod(say-22, out-24)
advmod(out-24, loud-25)
xcomp(like-20, see-28)
conj_and(say-22, see-28)
dobj(answer-33, what-29)
det(church-31, the-30)
nsubj(answer-33, church-31)
aux(answer-33, would-32)
ccomp(see-28, answer-33)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD found)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (JJ afraid)
              (S
                (VP (TO to)
                  (VP (VB speak)))))))))
    (. .)))

cc(found-3, But-1)
nsubj(found-3, he-2)
root(ROOT-0, found-3)
nsubj(afraid-6, he-4)
nsubj(speak-8, he-4)
cop(afraid-6, was-5)
ccomp(found-3, afraid-6)
aux(speak-8, to-7)
xcomp(afraid-6, speak-8)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD could) (RB not)
      (VP (VB utter)
        (NP (DT a) (NN word))
        (PP (IN for)
          (NP
            (NP (NN fear))
            (PP (IN of)
              (NP (DT the) (NNS loneliness)))))))
    (. .)))

nsubj(utter-4, He-1)
aux(utter-4, could-2)
neg(utter-4, not-3)
root(ROOT-0, utter-4)
det(word-6, a-5)
dobj(utter-4, word-6)
prep_for(utter-4, fear-8)
det(loneliness-11, the-10)
prep_of(fear-8, loneliness-11)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP it))
    (VP (VBD was)
      (ADVP
        (ADVP (RB as) (RB well))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD did) (RB not)
              (VP (, ,)
                (SBAR (IN for)
                  (S
                    (NP
                      (NP (DT the) (NN sound))
                      (PP (IN of)
                        (NP (DT a) (JJ spoken) (NN word))))
                    (VP (MD would)
                      (VP (VB have)
                        (VP (VBN made)
                          (S
                            (NP (PRP him))
                            (VP (VB feel)
                              (S
                                (NP (DT the) (NN place))
                                (ADVP (RB yet))
                                (ADJP (RBR more) (JJ deserted)
                                  (CC and)
                                  (JJ empty))))))))))))))))
    (. .)))

advmod(was-3, Perhaps-1)
nsubj(was-3, it-2)
root(ROOT-0, was-3)
advmod(well-5, as-4)
mwe(well-5, as-4)
advmod(was-3, well-5)
mark(made-20, that-6)
nsubj(made-20, he-7)
aux(made-20, did-8)
neg(made-20, not-9)
mark(made-20, for-11)
det(sound-13, the-12)
nsubj(made-20, sound-13)
det(word-17, a-15)
amod(word-17, spoken-16)
prep_of(sound-13, word-17)
aux(made-20, would-18)
aux(made-20, have-19)
advcl(well-5, made-20)
ccomp(well-5, made-20)
nsubj(feel-22, him-21)
ccomp(made-20, feel-22)
det(place-24, the-23)
dep(deserted-27, place-24)
advmod(deserted-27, yet-25)
advmod(deserted-27, more-26)
dep(feel-22, deserted-27)
dep(feel-22, empty-29)
conj_and(deserted-27, empty-29)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB sing))))))
    (. .)))

cc(thought-3, But-1)
nsubj(thought-3, he-2)
root(ROOT-0, thought-3)
nsubj(sing-6, he-4)
aux(sing-6, could-5)
ccomp(thought-3, sing-6)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP (VBD was)
          (VP (VBN fond)
            (PP (IN of)
              (NP (NN singing))))))
      (, ,)
      (CC and)
      (S
        (PP (IN at)
          (NP (NN home)))
        (NP (PRP he))
        (VP (VBD used)
          (S
            (VP (TO to)
              (VP (VB sing))))
          (, ,)
          (PP (TO to)
            (NP
              (NP (NNS tunes))
              (PP (IN of)
                (NP (PRP$ his) (JJ own))))))))
    (, ,)
    (NP (PDT all) (DT the) (NN nursery))
    (VP (VBZ rhymes)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD knew)))))
    (. .)))

nsubjpass(fond-3, He-1)
auxpass(fond-3, was-2)
ccomp(rhymes-24, fond-3)
prep_of(fond-3, singing-5)
prep_at(used-11, home-9)
nsubj(used-11, he-10)
nsubj(sing-13, he-10)
conj_and(fond-3, used-11)
ccomp(rhymes-24, used-11)
aux(sing-13, to-12)
xcomp(used-11, sing-13)
prep_to(used-11, tunes-16)
poss(own-19, his-18)
prep_of(tunes-16, own-19)
predet(nursery-23, all-21)
det(nursery-23, the-22)
nsubj(rhymes-24, nursery-23)
root(ROOT-0, rhymes-24)
nsubj(knew-26, he-25)
ccomp(rhymes-24, knew-26)

(ROOT
  (S
    (S (IN So)
      (NP (PRP he))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB try) (`` `)
              (NP (JJ Hey) (NN diddle) (NN diddle))
              ('' '))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD would) (RB n't)
        (VP (VB do))))
    (. .)))

dep(began-3, So-1)
nsubj(began-3, he-2)
nsubj(try-5, he-2)
root(ROOT-0, began-3)
aux(try-5, to-4)
xcomp(began-3, try-5)
amod(diddle-9, Hey-7)
nn(diddle-9, diddle-8)
dobj(try-5, diddle-9)
nsubj(do-16, it-13)
aux(do-16, would-14)
neg(do-16, n't-15)
conj_but(began-3, do-16)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD tried) (`` `)
        (NP (NNP Little) (NNP Boy) (NNP Blue))
        ('' ')))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (RB no) (JJR better))))
    (. .)))

advmod(tried-3, Then-1)
nsubj(tried-3, he-2)
root(ROOT-0, tried-3)
nn(Blue-7, Little-5)
nn(Blue-7, Boy-6)
dobj(tried-3, Blue-7)
nsubj(better-14, it-11)
cop(better-14, was-12)
neg(better-14, no-13)
conj_but(tried-3, better-14)

(ROOT
  (S
    (NP (DT Neither))
    (VP (MD would) (`` `)
      (VP (VB Sing)
        (S
          (NP
            (NP (DT a) (NN Song))
            (PP (IN of)
              (NP (NNP Sixpence) (POS '))))
          (VP (VB sing)
            (NP (PRP itself))
            (ADVP (IN at) (DT all))))))
    (. .)))

nsubj(Sing-4, Neither-1)
aux(Sing-4, would-2)
root(ROOT-0, Sing-4)
det(Song-6, a-5)
nsubj(sing-10, Song-6)
prep_of(Song-6, Sixpence-8)
ccomp(Sing-4, sing-10)
dobj(sing-10, itself-11)
advmod(sing-10, at-12)
pobj(at-12, all-13)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD tried)
        (NP (`` `)
          (ADJP (NNP Poor) (JJ old))
          (NN Cockytoo) ('' '))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD would) (RB n't)
        (VP (VB do))))
    (. .)))

advmod(tried-3, Then-1)
nsubj(tried-3, he-2)
root(ROOT-0, tried-3)
amod(old-6, Poor-5)
amod(Cockytoo-7, old-6)
dobj(tried-3, Cockytoo-7)
nsubj(do-14, he-11)
aux(do-14, would-12)
neg(do-14, n't-13)
conj_but(tried-3, do-14)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (DT all))
    (VP (VBD sounded)
      (ADJP (RB so) (JJ silly)))
    (. !)))

nsubj(sounded-3, They-1)
advmod(sounded-3, all-2)
root(ROOT-0, sounded-3)
advmod(silly-5, so-4)
acomp(sounded-3, silly-5)

(ROOT
  (S (CC and)
    (NP (PRP he))
    (VP (VBD had)
      (ADVP (RB never))
      (VP (VBN thought)
        (S
          (NP (PRP them))
          (ADJP (JJ silly))
          (ADVP (RB before)))))
    (. .)))

cc(thought-5, and-1)
nsubj(thought-5, he-2)
aux(thought-5, had-3)
neg(thought-5, never-4)
root(ROOT-0, thought-5)
nsubj(silly-7, them-6)
xcomp(thought-5, silly-7)
advmod(silly-7, before-8)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP
      (VP (VBD was)
        (ADJP (JJ quiet)))
      (, ,)
      (CC and)
      (VP (VBD listened)
        (PP (TO to)
          (NP
            (NP (DT the) (NNS echoes))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD came)
                  (PRT (RP out))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (JJ dark) (NNS corners))
                      (PP (IN in)
                        (NP (NN answer)))))
                  (PP (TO to)
                    (NP (PRP$ his) (NNS footsteps))))))))))
    (. .)))

dep(quiet-4, So-1)
nsubj(quiet-4, he-2)
nsubj(listened-7, he-2)
cop(quiet-4, was-3)
root(ROOT-0, quiet-4)
conj_and(quiet-4, listened-7)
det(echoes-10, the-9)
prep_to(listened-7, echoes-10)
nsubj(came-12, echoes-10)
rcmod(echoes-10, came-12)
det(corners-17, the-15)
amod(corners-17, dark-16)
prep_out_of(came-12, corners-17)
prep_in(corners-17, answer-19)
poss(footsteps-22, his-21)
prep_to(came-12, footsteps-22)

(ROOT
  (S
    (PP (IN At)
      (NP (JJ last)))
    (PRN
      (S
        (NP (PRP he))
        (VP
          (VP (VBD gave)
            (NP (DT a) (JJ great) (NN sigh)))
          (, ,)
          (CC and)
          (VP (VBD said))))
      (, ,))
    (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB so) (JJ tired)))
    (. .) ('' '')))

prep_at(tired-16, last-2)
nsubj(gave-4, he-3)
nsubj(said-10, he-3)
parataxis(tired-16, gave-4)
det(sigh-7, a-5)
amod(sigh-7, great-6)
dobj(gave-4, sigh-7)
conj_and(gave-4, said-10)
parataxis(tired-16, said-10)
nsubj(tired-16, I-13)
cop(tired-16, 'm-14)
advmod(tired-16, so-15)
root(ROOT-0, tired-16)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD did) (RB not)
      (VP
        (VP (VB hear)
          (NP
            (NP (DT the) (JJ gentle) (NN echo))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBN answered)
                  (PP (IN from)
                    (ADVP (RB far) (RB away)))
                  (PP (IN over)
                    (NP (PRP$ his) (NN head)))
                  (, ,)
                  (PP (IN for) (IN at)
                    (NP
                      (NP (DT the) (JJ same) (NN moment))
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP
                            (VP (VBD came)
                              (PP (IN against)
                                (NP
                                  (NP (DT the) (JJS lowest))
                                  (PP (IN of)
                                    (NP
                                      (NP (DT a) (JJ few) (NNS steps))
                                      (SBAR
                                        (WHNP (WDT that))
                                        (S
                                          (VP (VBN stretched)
                                            (PP (IN across)
                                              (NP (DT the) (NN church)))))))))))
                            (, ,)
                            (CC and)
                            (VP (VBD fell)
                              (PRT (RP down)))))))))))))
        (CC and)
        (VP (VB hurt)
          (NP (PRP$ his) (NN arm)))))
    (. .)))

nsubj(hear-5, he-2)
nsubj(hurt-42, he-2)
aux(hear-5, did-3)
neg(hear-5, not-4)
root(ROOT-0, hear-5)
det(echo-8, the-6)
amod(echo-8, gentle-7)
dobj(hear-5, echo-8)
nsubj(answered-10, echo-8)
rcmod(echo-8, answered-10)
prep(answered-10, from-11)
advmod(away-13, far-12)
pcomp(from-11, away-13)
poss(head-16, his-15)
prep_over(answered-10, head-16)
dep(answered-10, for-18)
det(moment-22, the-20)
amod(moment-22, same-21)
prep_at(answered-10, moment-22)
nsubj(came-24, he-23)
nsubj(fell-39, he-23)
rcmod(moment-22, came-24)
det(lowest-27, the-26)
prep_against(came-24, lowest-27)
det(steps-31, a-29)
amod(steps-31, few-30)
prep_of(lowest-27, steps-31)
nsubj(stretched-33, steps-31)
rcmod(steps-31, stretched-33)
det(church-36, the-35)
prep_across(stretched-33, church-36)
rcmod(moment-22, fell-39)
conj_and(came-24, fell-39)
prt(fell-39, down-40)
conj_and(hear-5, hurt-42)
poss(arm-44, his-43)
dobj(hurt-42, arm-44)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD cried)
        (NP (DT a) (JJ little) (JJ first)))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB then))
        (VBD crawled)
        (PRT (RP up))
        (NP (DT the) (NNS steps))
        (PP (IN on)
          (NP (PRP$ his) (NNS hands)
            (CC and)
            (NNS knees)))))
    (. .)))

nsubj(cried-2, He-1)
nsubj(crawled-9, He-1)
root(ROOT-0, cried-2)
det(first-5, a-3)
amod(first-5, little-4)
dobj(cried-2, first-5)
advmod(crawled-9, then-8)
conj_and(cried-2, crawled-9)
prt(crawled-9, up-10)
det(steps-12, the-11)
dobj(crawled-9, steps-12)
poss(hands-15, his-14)
prep_on(crawled-9, hands-15)
prep_on(crawled-9, knees-17)
conj_and(hands-15, knees-17)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (DT the) (NN top)))
      (NP (PRP he))
      (VP (VBD came)
        (PP (TO to)
          (NP
            (NP (DT a) (JJ little) (NN bit))
            (PP (IN of)
              (NP
                (NP (NN carpet))
                (, ,)
                (SBAR
                  (WHPP (IN on)
                    (WHNP (WDT which)))
                  (S
                    (NP (PRP he))
                    (VP (VBD lay)
                      (PRT (RP down)))))))))))
    (: ;)
    (CC and)
    (ADVP (RB there))
    (S
      (NP (PRP he))
      (VP (VBD lay)
        (PP (VBG staring)
          (PP (IN at)
            (NP
              (NP (DT the) (JJ dull) (NN window))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD rose)
                    (NP
                      (QP (RB nearly) (DT a) (CD hundred))
                      (NNS feet))
                    (PP (IN above)
                      (NP (PRP$ his) (NN head)))))))))))
    (. .)))

det(top-3, the-2)
prep_at(came-5, top-3)
nsubj(came-5, he-4)
root(ROOT-0, came-5)
det(bit-9, a-7)
amod(bit-9, little-8)
prep_to(came-5, bit-9)
prep_of(bit-9, carpet-11)
prep_on(lay-16, carpet-11)
nsubj(lay-16, he-15)
rcmod(carpet-11, lay-16)
prt(lay-16, down-17)
advmod(lay-22, there-20)
nsubj(lay-22, he-21)
conj_and(came-5, lay-22)
prep(lay-22, staring-23)
pcomp(staring-23, at-24)
det(window-27, the-25)
amod(window-27, dull-26)
pobj(at-24, window-27)
nsubj(rose-29, window-27)
rcmod(window-27, rose-29)
quantmod(hundred-32, nearly-30)
quantmod(hundred-32, a-31)
num(feet-33, hundred-32)
dobj(rose-29, feet-33)
poss(head-36, his-35)
prep_above(rose-29, head-36)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (DT this))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJ eastern) (NN window))
          (PP (IN of)
            (NP (DT the) (NN church))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN moon))
      (VP (VBD was)
        (PP (IN at)
          (NP (DT that) (NN moment)))
        (ADVP (RB just))
        (PP (IN on)
          (NP
            (NP (DT the) (NN edge))
            (PP (IN of)
              (NP (DT the) (NN horizon)))))))
    (. .)))

advmod(window-6, Now-1)
nsubj(window-6, this-2)
cop(window-6, was-3)
det(window-6, the-4)
amod(window-6, eastern-5)
root(ROOT-0, window-6)
det(church-9, the-8)
prep_of(window-6, church-9)
det(moon-13, the-12)
nsubj(was-14, moon-13)
conj_and(window-6, was-14)
det(moment-17, that-16)
prep_at(was-14, moment-17)
advmod(was-14, just-18)
det(edge-21, the-20)
prep_on(was-14, edge-21)
det(horizon-24, the-23)
prep_of(edge-21, horizon-24)

(ROOT
  (S
    (NP (DT The) (JJ next))
    (, ,)
    (NP (PRP she))
    (VP (VBD was)
      (VP (VBG peeping)
        (PRT (RP over))
        (NP (PRP it))))
    (. .)))

det(next-2, The-1)
nsubj(peeping-6, next-2)
nsubj(peeping-6, she-4)
aux(peeping-6, was-5)
root(ROOT-0, peeping-6)
prt(peeping-6, over-7)
dobj(peeping-6, it-8)

(ROOT
  (FRAG (CC And)
    (ADVP (RB lo))
    (. !)))

cc(lo-2, And-1)
root(ROOT-0, lo-2)

(ROOT
  (S
    (PP (IN with)
      (NP (DT the) (NN moon)))
    (, ,)
    (NP
      (NP
        (NP (NNP St.) (NNP John))
        (CC and)
        (NP (NNP St.) (NNP Paul)))
      (, ,)
      (CC and)
      (NP
        (NP (DT the) (NN rest))
        (PP (IN of)
          (NP (PRP them))))
      (, ,))
    (VP (VBD began)
      (PP (TO to)
        (NP (NN dawn)))
      (PP (IN in)
        (NP
          (NP (DT the) (NN window))
          (PP (IN in)
            (NP (PRP$ their) (JJ lovely) (NNS garments))))))
    (. .)))

det(moon-3, the-2)
prep_with(began-17, moon-3)
nn(John-6, St.-5)
nsubj(began-17, John-6)
nn(Paul-9, St.-8)
conj_and(John-6, Paul-9)
nsubj(began-17, Paul-9)
det(rest-13, the-12)
conj_and(John-6, rest-13)
nsubj(began-17, rest-13)
prep_of(rest-13, them-15)
root(ROOT-0, began-17)
prep_to(began-17, dawn-19)
det(window-22, the-21)
prep_in(began-17, window-22)
poss(garments-26, their-24)
amod(garments-26, lovely-25)
prep_in(window-22, garments-26)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP
        (VP (VBD did) (RB not)
          (VP (VB know)
            (SBAR
              (SBAR (IN that)
                (S
                  (S
                    (NP (DT the) (JJ wonder-working) (NN moon))
                    (VP (VBD was)
                      (ADVP (RB behind))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (PRP he))
                    (VP (VBD thought)
                      (SBAR
                        (S
                          (NP (PDT all) (DT the) (NN light))
                          (VP (VBD was)
                            (VP (VBG coming)
                              (PRT (RP out))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (NN window))
                                  (ADVP (PRP itself))))))))))))
              (, ,)
              (CC and)
              (SBAR (IN that)
                (S
                  (NP (DT the) (JJ good) (JJ old) (NNS men))
                  (VP (VBD were)
                    (VP
                      (VP (VBG appearing)
                        (S
                          (VP (TO to)
                            (VP (VB help)
                              (NP (PRP him))))))
                      (, ,)
                      (VP (VBG growing)
                        (PRT (RP out))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NN night))
                            (CC and)
                            (NP (DT the) (NNS darkness))))
                        (, ,)
                        (SBAR (IN because)
                          (S
                            (NP (PRP he))
                            (VP (VBD had)
                              (VP (VBN hurt)
                                (NP (PRP$ his) (NN arm))))))))))))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (ADJP (RB very) (JJ tired)
            (CC and)
            (JJ lonely)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP North) (NNP Wind))
      (VP (VBD was)
        (ADJP (RB so) (JJ long)
          (PP (IN in)
            (S
              (VP (VBG coming)))))))
    (. .)))

nsubj(know-4, Diamond-1)
nsubj(tired-57, Diamond-1)
aux(know-4, did-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
mark(was-9, that-5)
det(moon-8, the-6)
amod(moon-8, wonder-working-7)
nsubj(was-9, moon-8)
ccomp(know-4, was-9)
advmod(was-9, behind-10)
nsubj(thought-14, he-13)
ccomp(know-4, thought-14)
conj_and(was-9, thought-14)
predet(light-17, all-15)
det(light-17, the-16)
nsubj(coming-19, light-17)
aux(coming-19, was-18)
ccomp(thought-14, coming-19)
prt(coming-19, out-20)
det(window-23, the-22)
prep_of(coming-19, window-23)
advmod(window-23, itself-24)
mark(appearing-33, that-27)
det(men-31, the-28)
amod(men-31, good-29)
amod(men-31, old-30)
nsubj(appearing-33, men-31)
nsubj(help-35, men-31)
aux(appearing-33, were-32)
ccomp(know-4, appearing-33)
conj_and(was-9, appearing-33)
aux(help-35, to-34)
xcomp(appearing-33, help-35)
dobj(help-35, him-36)
dep(appearing-33, growing-38)
det(night-42, the-41)
prep_out_of(growing-38, night-42)
det(darkness-45, the-44)
prep_out_of(growing-38, darkness-45)
conj_and(night-42, darkness-45)
mark(hurt-50, because-47)
nsubj(hurt-50, he-48)
aux(hurt-50, had-49)
advcl(growing-38, hurt-50)
poss(arm-52, his-51)
dobj(hurt-50, arm-52)
cop(tired-57, was-55)
advmod(tired-57, very-56)
conj_and(know-4, tired-57)
conj_and(know-4, lonely-59)
conj_and(tired-57, lonely-59)
nn(Wind-63, North-62)
nsubj(long-66, Wind-63)
cop(long-66, was-64)
advmod(long-66, so-65)
conj_and(know-4, long-66)
prepc_in(long-66, coming-68)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP
      (VP (VBD lay))
      (CC and)
      (VP (VBD looked)
        (PP (IN at)
          (NP (PRP them)))
        (ADVP (RB backwards)
          (PP (IN over)
            (NP (PRP$ his) (NN head))))
        (, ,)
        (S
          (VP (VBG wondering)
            (SBAR
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP they))
                  (VP (MD would)
                    (VP (VB come)
                      (PRT (RP down))))))
              (CC or)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP they))
                  (VP (MD would)
                    (VP (VB do)
                      (ADVP (JJ next)))))))))))
    (. .)))

dep(lay-3, So-1)
nsubj(lay-3, he-2)
nsubj(looked-5, he-2)
root(ROOT-0, lay-3)
conj_and(lay-3, looked-5)
prep_at(looked-5, them-7)
advmod(looked-5, backwards-8)
poss(head-11, his-10)
prep_over(backwards-8, head-11)
xcomp(looked-5, wondering-13)
advmod(come-17, when-14)
nsubj(come-17, they-15)
aux(come-17, would-16)
ccomp(wondering-13, come-17)
prt(come-17, down-18)
dobj(do-23, what-20)
nsubj(do-23, they-21)
aux(do-23, would-22)
ccomp(wondering-13, do-23)
conj_or(come-17, do-23)
advmod(do-23, next-24)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD were)
        (ADJP (RB very) (JJ dim))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (DT the) (NN moonlight))
            (VP (VBD was) (RB not)
              (ADJP (JJ strong) (RB enough))
              (PP (IN for)
                (NP (DT the) (NNS colours))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RB enough))
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP
                  (NP (PRP$ his) (NNS eyes))
                  (VP (VBG trying)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (PRT (RP out))
                          (NP (PRP$ their) (NNS shapes)))))))))))))
    (. .)))

nsubj(dim-4, They-1)
cop(dim-4, were-2)
advmod(dim-4, very-3)
root(ROOT-0, dim-4)
mark(strong-11, for-6)
det(moonlight-8, the-7)
nsubj(strong-11, moonlight-8)
cop(strong-11, was-9)
neg(strong-11, not-10)
advcl(dim-4, strong-11)
advmod(strong-11, enough-12)
det(colours-15, the-14)
prep_for(strong-11, colours-15)
nsubj(had-19, he-18)
nsubj(do-22, he-18)
conj_and(dim-4, had-19)
advmod(had-19, enough-20)
aux(do-22, to-21)
xcomp(had-19, do-22)
poss(eyes-25, his-24)
prep_with(do-22, eyes-25)
vmod(eyes-25, trying-26)
aux(make-28, to-27)
xcomp(trying-26, make-28)
prt(make-28, out-29)
poss(shapes-31, their-30)
dobj(make-28, shapes-31)

(ROOT
  (S (CC So)
    (S
      (NP (PRP$ his) (NNS eyes))
      (VP (VBD grew)
        (S
          (ADJP
            (ADJP (VBN tired))
            (, ,)
            (CC and)
            (ADJP
              (ADVP (RBR more)
                (CC and)
                (RBR more))
              (VBN tired))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NNS eyelids))
      (VP (VBD grew)
        (ADJP (RB so) (JJ heavy))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (MD would)
              (VP (VB keep)
                (S
                  (VP (VBG tumbling)
                    (PRT (RP down))
                    (PP (IN over)
                      (NP (PRP$ his) (NNS eyes)))))))))))
    (. .)))

poss(eyes-3, his-2)
nsubj(grew-4, eyes-3)
root(ROOT-0, grew-4)
dep(grew-4, tired-5)
advmod(tired-11, more-8)
conj_and(more-8, more-10)
advmod(tired-11, more-10)
dep(grew-4, tired-11)
conj_and(tired-5, tired-11)
poss(eyelids-15, his-14)
nsubj(grew-16, eyelids-15)
conj_and(grew-4, grew-16)
advmod(heavy-18, so-17)
acomp(grew-16, heavy-18)
mark(keep-22, that-19)
nsubj(keep-22, they-20)
aux(keep-22, would-21)
ccomp(grew-16, keep-22)
xcomp(keep-22, tumbling-23)
prt(tumbling-23, down-24)
poss(eyes-27, his-26)
prep_over(tumbling-23, eyes-27)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD kept)
        (S
          (VP
            (VP (VBG lifting)
              (NP (PRP them)))
            (CC and)
            (VP (VBG lifting)
              (NP (PRP them)))))))
    (, ,)
    (CC but)
    (S
      (NP (DT every) (NN time))
      (NP (PRP they))
      (VP (VBD were)
        (ADJP (JJR heavier))
        (PP (IN than)
          (NP (DT the) (JJ last)))))
    (. .)))

nsubj(kept-2, He-1)
root(ROOT-0, kept-2)
ccomp(kept-2, lifting-3)
dobj(lifting-3, them-4)
ccomp(kept-2, lifting-6)
conj_and(lifting-3, lifting-6)
dobj(lifting-6, them-7)
det(time-11, every-10)
nsubj(heavier-14, time-11)
nsubj(heavier-14, they-12)
cop(heavier-14, were-13)
conj_but(kept-2, heavier-14)
det(last-17, the-16)
prep_than(heavier-14, last-17)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT no) (NN use))))
    (: :)
    (S
      (NP (PRP they))
      (VP (VBD were)
        (ADJP (RB too) (JJ much))
        (PP (IN for)
          (NP (PRP him)))))
    (. .)))

nsubj(use-4, It-1)
cop(use-4, was-2)
neg(use-4, no-3)
root(ROOT-0, use-4)
nsubj(much-9, they-6)
cop(much-9, were-7)
advmod(much-9, too-8)
parataxis(use-4, much-9)
prep_for(much-9, him-11)

(ROOT
  (S
    (S
      (S
        (SBAR
          (ADVP (RB Sometimes))
          (IN before)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN got)
                (NP (PRP them))
                (ADVP (NN half) (IN up))))))
        (, ,)
        (ADVP (RB down))
        (NP (PRP they))
        (VP (VBD were)
          (ADVP (RB again))))
      (: ;)
      (CC and)
      (S
        (S
          (PP (IN at)
            (NP (NN length)))
          (NP (PRP he))
          (VP (VBD gave)
            (NP (PRP it))
            (ADVP (RB up) (RB quite))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN moment))
          (NP (PRP he))
          (VP (VBD gave)
            (NP (PRP it))
            (PRT (RP up))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (ADVP (RB fast))
      (ADJP (RB asleep)))
    (. .)))

advmod(got-5, Sometimes-1)
mark(got-5, before-2)
nsubj(got-5, he-3)
aux(got-5, had-4)
advcl(were-12, got-5)
dobj(got-5, them-6)
dep(up-8, half-7)
advmod(got-5, up-8)
advmod(they-11, down-10)
nsubj(were-12, they-11)
ccomp(asleep-35, were-12)
advmod(were-12, again-13)
prep_at(gave-19, length-17)
nsubj(gave-19, he-18)
conj_and(were-12, gave-19)
ccomp(asleep-35, gave-19)
dobj(gave-19, it-20)
advmod(quite-22, up-21)
advmod(gave-19, quite-22)
det(moment-26, the-25)
nsubj(gave-28, moment-26)
nsubj(gave-28, he-27)
conj_and(were-12, gave-28)
conj_and(gave-19, gave-28)
dobj(gave-28, it-29)
prt(gave-28, up-30)
nsubj(asleep-35, he-32)
cop(asleep-35, was-33)
advmod(asleep-35, fast-34)
root(ROOT-0, asleep-35)

(ROOT
  (NP (NNP CHAPTER) (NNP VIII) (. .)))

nn(VIII-2, CHAPTER-1)
root(ROOT-0, VIII-2)

(ROOT
  (S
    (NP (DT THE) (NNP EAST) (NNP WINDOW) (NNP THAT) (NNP Diamond))
    (VP (VBD had)
      (VP (VBN fallen)
        (SBAR
          (S
            (NP (JJ fast) (NNS asleep))
            (VP (VBZ is)
              (ADJP (RB very) (JJ evident)
                (PP (IN from)
                  (NP
                    (NP (DT the) (JJ strange) (NNS things))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (ADVP (RB now))
                        (VP (VBD fancied)
                          (PP (IN as)
                            (S
                              (VP (VBG taking)
                                (NP (NN place))))))))))))))))
    (. .)))

det(Diamond-5, THE-1)
nn(Diamond-5, EAST-2)
nn(Diamond-5, WINDOW-3)
nn(Diamond-5, THAT-4)
nsubj(fallen-7, Diamond-5)
aux(fallen-7, had-6)
root(ROOT-0, fallen-7)
amod(asleep-9, fast-8)
nsubj(evident-12, asleep-9)
cop(evident-12, is-10)
advmod(evident-12, very-11)
ccomp(fallen-7, evident-12)
det(things-16, the-14)
amod(things-16, strange-15)
prep_from(evident-12, things-16)
nsubj(fancied-19, he-17)
advmod(fancied-19, now-18)
rcmod(things-16, fancied-19)
prepc_as(fancied-19, taking-21)
dobj(taking-21, place-22)

(ROOT
  (S (IN For)
    (NP (PRP he))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD heard)
            (NP (DT a) (NN sound))
            (PP (RB as) (IN of)
              (S
                (VP (VBG whispering)
                  (PRT (RP up))
                  (PP (IN in)
                    (NP (DT the) (JJ great) (NN window))))))))))
    (. .)))

dep(thought-3, For-1)
nsubj(thought-3, he-2)
root(ROOT-0, thought-3)
nsubj(heard-5, he-4)
ccomp(thought-3, heard-5)
det(sound-7, a-6)
dobj(heard-5, sound-7)
prepc_as_of(heard-5, whispering-10)
prt(whispering-10, up-11)
det(window-15, the-13)
amod(window-15, great-14)
prep_in(whispering-10, window-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD tried)
        (S
          (VP (TO to)
            (VP (VB open)
              (NP (PRP$ his) (NNS eyes)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD could) (RB not)))
    (. .)))

nsubj(tried-2, He-1)
nsubj(open-4, He-1)
root(ROOT-0, tried-2)
aux(open-4, to-3)
xcomp(tried-2, open-4)
poss(eyes-6, his-5)
dobj(open-4, eyes-6)
nsubj(could-10, he-9)
conj_but(tried-2, could-10)
neg(could-10, not-11)

(ROOT
  (S (CC And)
    (NP (DT the) (NN whispering))
    (VP
      (VP (VBD went)
        (PRT (RP on)))
      (CC and)
      (VP (VBD grew)
        (S
          (ADJP (JJR louder)
            (CC and)
            (JJR louder))))
      (, ,)
      (SBAR (IN until)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB hear)
              (NP
                (NP (DT every) (NN word))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD was)
                      (VP (VBN said)))))))))))
    (. .)))

det(whispering-3, the-2)
nsubj(went-4, whispering-3)
nsubj(grew-7, whispering-3)
root(ROOT-0, went-4)
prt(went-4, on-5)
conj_and(went-4, grew-7)
acomp(grew-7, louder-8)
acomp(grew-7, louder-10)
conj_and(louder-8, louder-10)
mark(hear-15, until-12)
nsubj(hear-15, he-13)
aux(hear-15, could-14)
advcl(went-4, hear-15)
det(word-17, every-16)
dobj(hear-15, word-17)
nsubjpass(said-20, word-17)
auxpass(said-20, was-19)
rcmod(word-17, said-20)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP
              (NP (DT the) (NNPS Apostles))
              (VP (VBG talking)
                (PP (IN about)
                  (NP (PRP him)))))))))
    (. .)))

nsubj(thought-2, He-1)
root(ROOT-0, thought-2)
nsubj(Apostles-6, it-3)
cop(Apostles-6, was-4)
det(Apostles-6, the-5)
ccomp(thought-2, Apostles-6)
vmod(Apostles-6, talking-7)
prep_about(talking-7, him-9)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (MD could) (RB not)
      (VP (VB open)
        (NP (PRP$ his) (NNS eyes))))
    (. .)))

cc(open-5, But-1)
nsubj(open-5, he-2)
aux(open-5, could-3)
neg(open-5, not-4)
root(ROOT-0, open-5)
poss(eyes-7, his-6)
dobj(open-5, eyes-7)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHADVP (WRB how))
    (SQ
      (VP (VBZ comes))
      (NP (PRP he))
      (PP (TO to)
        (VP (VB be)
          (VP (VBG lying)
            (NP
              (NP (RB there))
              (, ,)
              (NP (NNP St.) (NNP Peter)))))))
    (. ?) ('' '')))

cc(comes-4, And-2)
advmod(comes-4, how-3)
root(ROOT-0, comes-4)
dep(comes-4, he-5)
prep(comes-4, to-6)
aux(lying-8, be-7)
dep(to-6, lying-8)
dobj(lying-8, there-9)
nn(Peter-12, St.-11)
appos(there-9, Peter-12)

(ROOT
  (S
    (VP (VBD said)
      (NP (CD one)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, one-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD saw)
            (NP (PRP him))
            (NP (DT a) (NN while))
            (PP
              (ADVP (RB ago) (RB up))
              (IN in)
              (NP (DT the) (NN gallery)))
            (, ,)
            (PP (IN under)
              (NP (DT the) (NNP Nicodemus) (NN window)))))))
    (. .)))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(saw-5, I-4)
ccomp(think-3, saw-5)
iobj(saw-5, him-6)
det(while-8, a-7)
dobj(saw-5, while-8)
advmod(up-10, ago-9)
advmod(saw-5, up-10)
det(gallery-13, the-12)
prep_in(saw-5, gallery-13)
det(window-18, the-16)
nn(window-18, Nicodemus-17)
prep_under(saw-5, window-18)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP he))
    (VP (VBZ has)
      (VP (VBN fallen)
        (PRT (RP down))))
    (. .)))

advmod(fallen-4, Perhaps-1)
nsubj(fallen-4, he-2)
aux(fallen-4, has-3)
root(ROOT-0, fallen-4)
prt(fallen-4, down-5)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (FRAG (, ,)
          (NP (NNP St.) (NNP Matthew)))))
    (. ?) ('' '')))

dobj(think-5, What-2)
aux(think-5, do-3)
nsubj(think-5, you-4)
root(ROOT-0, think-5)
nn(Matthew-8, St.-7)
dep(think-5, Matthew-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could)
              (VP (VB have)
                (VP (VBN crept)
                  (ADVP (RB here))
                  (PP (IN after)
                    (S
                      (VP (VBG falling)
                        (PP (IN from)
                          (NP (PDT such) (DT a) (NN height)))))))))))))
    (. .)))

nsubj(think-5, I-2)
aux(think-5, do-3)
neg(think-5, n't-4)
root(ROOT-0, think-5)
nsubj(crept-9, he-6)
aux(crept-9, could-7)
aux(crept-9, have-8)
ccomp(think-5, crept-9)
advmod(crept-9, here-10)
prepc_after(crept-9, falling-12)
predet(height-16, such-14)
det(height-16, a-15)
prep_from(falling-12, height-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must)
      (VP (VB have)
        (VP (VBN been)
          (VP (VBN killed)))))
    (. .) ('' '')))

nsubjpass(killed-5, He-1)
aux(killed-5, must-2)
aux(killed-5, have-3)
auxpass(killed-5, been-4)
root(ROOT-0, killed-5)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP are)
      (NP (PRP we))
      (S
        (VP (TO to)
          (VP (VB do)
            (PP (IN with)
              (NP (PRP him)))))))
    (. ?)))

root(ROOT-0, What-2)
cop(What-2, are-3)
nsubj(What-2, we-4)
aux(do-6, to-5)
vmod(What-2, do-6)
prep_with(do-6, him-8)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD ca) (RB n't)
      (VP (VB leave)
        (S
          (NP (PRP him))
          (VP (VBG lying)
            (ADVP (RB there))))))
    (. .)))

nsubj(leave-4, We-1)
aux(leave-4, ca-2)
neg(leave-4, n't-3)
root(ROOT-0, leave-4)
nsubj(lying-6, him-5)
dep(leave-4, lying-6)
advmod(lying-6, there-7)

(ROOT
  (S
    (S (CC And)
      (NP (PRP we))
      (VP (MD could) (RB not)
        (VP (VB make)
          (S
            (NP (PRP him))
            (ADJP (JJ comfortable)))
          (ADVP (RB up) (RB here))
          (PP (IN in)
            (NP (DT the) (NN window))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (RB rather) (JJ crowded))
        (ADVP (RB already))))
    (. .)))

cc(make-5, And-1)
nsubj(make-5, we-2)
aux(make-5, could-3)
neg(make-5, not-4)
root(ROOT-0, make-5)
nsubj(comfortable-7, him-6)
xcomp(make-5, comfortable-7)
advmod(here-9, up-8)
advmod(make-5, here-9)
det(window-12, the-11)
prep_in(make-5, window-12)
nsubj(crowded-17, it-14)
cop(crowded-17, 's-15)
advmod(crowded-17, rather-16)
parataxis(make-5, crowded-17)
advmod(crowded-17, already-18)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB say)
        (FRAG (, ,)
          (NP (NNP St.) (NNP Thomas)))))
    (. ?) ('' '')))

dobj(say-4, What-1)
aux(say-4, do-2)
nsubj(say-4, you-3)
root(ROOT-0, say-4)
nn(Thomas-7, St.-6)
dep(say-4, Thomas-7)

(ROOT
  (S (`` ``)
    (VP
      (VP (VB Let)
        (S
          (NP (POS 's))
          (VP (VB go)
            (PRT (RP down)))))
      (CC and)
      (VP (VB look)
        (PP (IN at)
          (NP (PRP him)))))
    (. .) ('' '')))

root(ROOT-0, Let-2)
nsubj(go-4, 's-3)
ccomp(Let-2, go-4)
prt(go-4, down-5)
conj_and(Let-2, look-7)
prep_at(look-7, him-9)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBD came)
          (NP
            (NP (DT a) (NN rustling))
            (, ,)
            (CC and)
            (NP (DT a) (NN chinking))
            (, ,))
          (PP (IN for)
            (NP (DT some) (NN time)))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP (DT a) (NN silence)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Diamond))
      (VP (VBD felt)
        (ADVP (RB somehow))
        (SBAR (IN that)
          (S
            (NP (PDT all) (DT the) (NNS Apostles))
            (VP (VBD were)
              (VP
                (VP (VBG standing)
                  (S
                    (VP (VB round)
                      (NP (PRP him)))))
                (CC and)
                (VP (VBG looking)
                  (PRT (RP down))
                  (PP (IN on)
                    (NP (PRP him))))))))))
    (. .)))

expl(came-2, There-1)
root(ROOT-0, came-2)
det(rustling-4, a-3)
dobj(came-2, rustling-4)
nsubj(came-2, rustling-4)
det(chinking-8, a-7)
dobj(came-2, chinking-8)
nsubj(came-2, chinking-8)
conj_and(rustling-4, chinking-8)
det(time-12, some-11)
prep_for(came-2, time-12)
advmod(was-17, then-15)
expl(was-17, there-16)
conj_and(came-2, was-17)
det(silence-19, a-18)
nsubj(was-17, silence-19)
nsubj(felt-23, Diamond-22)
conj_and(came-2, felt-23)
advmod(felt-23, somehow-24)
mark(standing-30, that-25)
predet(Apostles-28, all-26)
det(Apostles-28, the-27)
nsubj(standing-30, Apostles-28)
nsubj(looking-34, Apostles-28)
aux(standing-30, were-29)
ccomp(felt-23, standing-30)
ccomp(standing-30, round-31)
dobj(round-31, him-32)
ccomp(felt-23, looking-34)
conj_and(standing-30, looking-34)
prt(looking-34, down-35)
prep_on(looking-34, him-37)

(ROOT
  (S (CC And)
    (ADVP (RB still))
    (NP (PRP he))
    (VP (MD could) (RB not)
      (VP (VB open)
        (NP (PRP$ his) (NNS eyes))))
    (. .)))

cc(open-6, And-1)
advmod(open-6, still-2)
nsubj(open-6, he-3)
aux(open-6, could-4)
neg(open-6, not-5)
root(ROOT-0, open-6)
poss(eyes-8, his-7)
dobj(open-6, eyes-8)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN matter))
        (PP (IN with)
          (NP
            (NP (PRP him))
            (, ,)
            (NP (NNP St.) (NNP Luke))))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
det(matter-5, the-4)
nsubj(What-2, matter-5)
prep_with(matter-5, him-7)
nn(Luke-10, St.-9)
appos(him-7, Luke-10)

(ROOT
  (S
    (VP (VBD asked)
      (NP (CD one)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, one-2)

(ROOT
  (SINV (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (ADVP (NN nothing))
        (NP
          (NP (DT the) (NN matter))
          (PP (IN with)
            (NP (PRP him))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP
      (NP (NNP St.) (NNP Luke))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (MD must)
            (VP (VB have)
              (VP (VBN joined)
                (NP
                  (NP (DT the) (NN company))
                  (PP (IN of)
                    (NP (DT the) (NNPS Apostles))))
                (PP (IN from)
                  (NP (DT the) (JJ next) (NN window)))
                (, ,)
                (SBAR
                  (S
                    (NP (PRP one))
                    (VP (MD would)
                      (VP (VB think)))))))))))
    (. .)))

expl('s-3, There-2)
ccomp(answered-11, 's-3)
advmod('s-3, nothing-4)
det(matter-6, the-5)
nsubj('s-3, matter-6)
prep_with(matter-6, him-8)
root(ROOT-0, answered-11)
nn(Luke-13, St.-12)
nsubj(answered-11, Luke-13)
nsubj(joined-18, Luke-13)
aux(joined-18, must-16)
aux(joined-18, have-17)
rcmod(Luke-13, joined-18)
det(company-20, the-19)
dobj(joined-18, company-20)
det(Apostles-23, the-22)
prep_of(company-20, Apostles-23)
det(window-27, the-25)
amod(window-27, next-26)
prep_from(joined-18, window-27)
nsubj(think-31, one-29)
aux(think-31, would-30)
dep(joined-18, think-31)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBZ 's)
      (PP (IN in)
        (NP (DT a) (JJ sound) (NN sleep))))
    (. .) ('' '')))

nsubj('s-3, He-2)
root(ROOT-0, 's-3)
det(sleep-7, a-5)
amod(sleep-7, sound-6)
prep_in('s-3, sleep-7)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (PRP it))))
    (, ,) ('' '')
    (VP (VBD cried))
    (NP (DT another))
    (. .)))

nsubj(have-3, I-2)
ccomp(cried-7, have-3)
dobj(have-3, it-4)
root(ROOT-0, cried-7)
nsubj(cried-7, another-8)

(ROOT
  (S (`` ``)
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (NNP North) (NNP Wind) (POS 's))
            (NNS tricks)))))
    (. .)))

nsubj(one-4, This-2)
cop(one-4, is-3)
root(ROOT-0, one-4)
nn(Wind-7, North-6)
poss(tricks-9, Wind-7)
prep_of(one-4, tricks-9)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBZ has)
        (VP (VBN caught)
          (NP (PRP him))
          (PRT (RP up))))
      (CC and)
      (VP (VBD dropped)
        (NP (PRP him))
        (PP (IN at)
          (NP (PRP$ our) (NN door))))
      (, ,)
      (PP (IN like)
        (NP
          (NP (DT a) (JJ withered) (NN leaf))
          (CC or)
          (NP (DT a) (VBG foundling) (NN baby)))))
    (. .)))

nsubj(caught-3, She-1)
nsubj(dropped-7, She-1)
aux(caught-3, has-2)
root(ROOT-0, caught-3)
dobj(caught-3, him-4)
prt(caught-3, up-5)
conj_and(caught-3, dropped-7)
dobj(dropped-7, him-8)
poss(door-11, our-10)
prep_at(dropped-7, door-11)
det(leaf-16, a-14)
amod(leaf-16, withered-15)
prep_like(caught-3, leaf-16)
det(baby-20, a-18)
amod(baby-20, foundling-19)
prep_like(caught-3, baby-20)
conj_or(leaf-16, baby-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB understand)
          (NP
            (NP (DT that) (NN woman) (POS 's))
            (NN conduct)))))
    (, ,)
    (NP (PRP I))
    (VP (MD must)
      (VP (VB say)))
    (. .)))

nsubj(understand-4, I-1)
aux(understand-4, do-2)
neg(understand-4, n't-3)
ccomp(say-12, understand-4)
det(woman-6, that-5)
poss(conduct-8, woman-6)
dobj(understand-4, conduct-8)
nsubj(say-12, I-10)
aux(say-12, must-11)
root(ROOT-0, say-12)

(ROOT
  (S
    (SBAR (IN As) (IN if)
      (S
        (NP (PRP we))
        (VP (VBD had) (RB n't))))
    (VP
      (ADVP (RB enough)
        (PP (TO to)))
      (VBP do)
      (PP (IN with)
        (NP (PRP$ our) (NN money)))
      (, ,)
      (PP (IN without)
        (S
          (VP (VBG going)
            (S
              (VP (VBG taking)
                (NP
                  (NP (NN care))
                  (PP (IN of)
                    (NP
                      (NP (JJ other) (NNS people) (POS 's))
                      (NNS children))))))))))
    (. !)))

mark(had-4, As-1)
mark(had-4, if-2)
nsubj(had-4, we-3)
advcl(do-8, had-4)
csubj(do-8, had-4)
neg(had-4, n't-5)
advmod(do-8, enough-6)
prep(enough-6, to-7)
root(ROOT-0, do-8)
poss(money-11, our-10)
prep_with(do-8, money-11)
prepc_without(do-8, going-14)
vmod(going-14, taking-15)
dobj(taking-15, care-16)
amod(people-19, other-18)
poss(children-21, people-19)
prep_of(care-16, children-21)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's) (RB not)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP$ our) (NNS forefathers))
          (VP (VBD built)
            (NP (NNS cathedrals))
            (PP (IN for))))))
    (. .) ('' '')))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
neg('s-2, not-3)
prep_for(built-7, what-4)
poss(forefathers-6, our-5)
nsubj(built-7, forefathers-6)
ccomp('s-2, built-7)
dobj(built-7, cathedrals-8)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (NNP Diamond))
    (VP (MD could) (RB not)
      (VP (VB bear)
        (S
          (VP (TO to)
            (VP (VB hear)
              (NP (JJ such) (NNS things))
              (PP (IN against)
                (NP
                  (NP (NNP North) (NNP Wind))
                  (, ,)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (PRN (, ,)
                        (S
                          (NP (PRP he))
                          (VP (VBD knew)))
                        (, ,))
                      (VP
                        (ADVP (RB never))
                        (VBD played)
                        (NP (NN anybody))
                        (NP (DT a) (NN trick))))))))))))
    (. .)))

advmod(bear-5, Now-1)
nsubj(bear-5, Diamond-2)
nsubj(hear-7, Diamond-2)
aux(bear-5, could-3)
neg(bear-5, not-4)
root(ROOT-0, bear-5)
aux(hear-7, to-6)
xcomp(bear-5, hear-7)
amod(things-9, such-8)
dobj(hear-7, things-9)
nn(Wind-12, North-11)
prep_against(hear-7, Wind-12)
nsubj(played-20, Wind-12)
nsubj(knew-17, he-16)
parataxis(played-20, knew-17)
neg(played-20, never-19)
rcmod(Wind-12, played-20)
iobj(played-20, anybody-21)
det(trick-23, a-22)
dobj(played-20, trick-23)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADJP (RB far) (RB too) (JJ busy))
      (PP (IN with)
        (NP
          (NP (PRP$ her) (JJ own) (NN work))
          (PP (IN for)
            (NP (DT that))))))
    (. .)))

nsubj(busy-5, She-1)
cop(busy-5, was-2)
advmod(busy-5, far-3)
advmod(busy-5, too-4)
root(ROOT-0, busy-5)
poss(work-9, her-7)
amod(work-9, own-8)
prep_with(busy-5, work-9)
prep_for(work-9, that-11)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD struggled)
      (ADJP (JJ hard)
        (S
          (VP (TO to)
            (VP
              (VP (VB open)
                (NP (PRP$ his) (NNS eyes)))
              (, ,)
              (CC but)
              (VP
                (PP (IN without)
                  (NP (NN success)))))))))
    (. .)))

nsubj(struggled-2, He-1)
root(ROOT-0, struggled-2)
acomp(struggled-2, hard-3)
aux(open-5, to-4)
xcomp(hard-3, open-5)
poss(eyes-7, his-6)
dobj(open-5, eyes-7)
xcomp(hard-3, without-10)
conj_but(open-5, without-10)
pobj(without-10, success-11)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP She))
      (VP (MD should)
        (VP (VB consider)
          (SBAR (IN that)
            (S
              (NP (DT a) (NN church))
              (VP (VBZ is) (RB not)
                (NP
                  (NP (DT a) (NN place))
                  (PP (IN for)
                    (NP (NNS pranks))))
                (, ,)
                (S (RB not)
                  (VP (TO to)
                    (VP (VB mention)
                      (SBAR (IN that)
                        (S
                          (NP (PRP we))
                          (VP (VBP live)
                            (PP (IN in)
                              (NP (PRP it)))))))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT another))
    (. .)))

nsubj(consider-4, She-2)
aux(consider-4, should-3)
ccomp(said-25, consider-4)
mark(place-11, that-5)
det(church-7, a-6)
nsubj(place-11, church-7)
cop(place-11, is-8)
neg(place-11, not-9)
det(place-11, a-10)
ccomp(consider-4, place-11)
prep_for(place-11, pranks-13)
neg(mention-17, not-15)
aux(mention-17, to-16)
vmod(place-11, mention-17)
mark(live-20, that-18)
nsubj(live-20, we-19)
ccomp(mention-17, live-20)
prep_in(live-20, it-22)
root(ROOT-0, said-25)
nsubj(said-25, another-26)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (ADVP (RB certainly))
    (VP (VBZ is)
      (NP
        (NP (NN disrespectful))
        (PP (IN of)
          (NP (PRP her)))))
    (. .)))

nsubj(disrespectful-5, It-2)
advmod(disrespectful-5, certainly-3)
cop(disrespectful-5, is-4)
root(ROOT-0, disrespectful-5)
prep_of(disrespectful-5, her-7)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (ADVP (RB always))
    (VP (VBZ is)
      (ADJP (JJ disrespectful)))
    (. .)))

cc(disrespectful-5, But-1)
nsubj(disrespectful-5, she-2)
advmod(disrespectful-5, always-3)
cop(disrespectful-5, is-4)
root(ROOT-0, disrespectful-5)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP
        (ADVP (RB right))
        (VBZ has)
        (NP
          (NP (PRP she))
          (PP (TO to)
            (NP
              (NP (NN bang))
              (PP (IN at)
                (NP (PRP$ our) (NNS windows))))))
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP (VBZ has)
              (VP (VBN been)
                (VP (VBG doing)
                  (NP
                    (NP (DT the) (NN whole))
                    (PP (IN of)
                      (NP (DT this) (NN night)))))))))))
    (. ?)))

nsubj(has-3, What-1)
advmod(has-3, right-2)
root(ROOT-0, has-3)
dobj(has-3, she-4)
prep_to(she-4, bang-6)
poss(windows-9, our-8)
prep_at(bang-6, windows-9)
mark(doing-14, as-10)
nsubj(doing-14, she-11)
aux(doing-14, has-12)
aux(doing-14, been-13)
advcl(has-3, doing-14)
det(whole-16, the-15)
dobj(doing-14, whole-16)
det(night-19, this-18)
prep_of(whole-16, night-19)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB daresay))
    (ADVP (RB there))
    (VP (VBZ is)
      (NP
        (NP (NN glass))
        (VP (VBN broken)
          (ADVP (RB somewhere)))))
    (. .)))

nsubj(glass-5, I-1)
advmod(glass-5, daresay-2)
advmod(glass-5, there-3)
cop(glass-5, is-4)
root(ROOT-0, glass-5)
vmod(glass-5, broken-6)
advmod(broken-6, somewhere-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP$ my) (JJ blue) (NN robe))
          (VP (VBZ is)
            (PP (IN in)
              (NP
                (NP (DT a) (JJ dreadful) (NN mess))
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN rain) (JJ first))
                    (CC and)
                    (NP (DT the) (NN dust))))))
            (PP (IN after))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
poss(robe-5, my-3)
amod(robe-5, blue-4)
nsubj(is-6, robe-5)
ccomp(know-2, is-6)
det(mess-10, a-8)
amod(mess-10, dreadful-9)
prep_in(is-6, mess-10)
det(rain-13, the-12)
prep_with(mess-10, rain-13)
amod(rain-13, first-14)
det(dust-17, the-16)
prep_with(mess-10, dust-17)
conj_and(rain-13, dust-17)
prep(is-6, after-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB cost)
        (NP (PRP me))
        (NP (NNS shillings)
          (S
            (VP (TO to)
              (VP (VB clean)
                (NP (PRP it))))))))
    (. .) ('' '')))

nsubj(cost-3, It-1)
aux(cost-3, will-2)
root(ROOT-0, cost-3)
iobj(cost-3, me-4)
dobj(cost-3, shillings-5)
aux(clean-7, to-6)
vmod(shillings-5, clean-7)
dobj(clean-7, it-8)

(ROOT
  (S (RB Then)
    (NP (NNP Diamond))
    (VP (VBD knew)
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (MD could) (RB not)
            (VP (VB be)
              (NP
                (NP (NNP Apostles))
                (, ,)
                (VP (VBG talking)
                  (PP (IN like)
                    (NP (DT this))))))))))
    (. .)))

advmod(knew-3, Then-1)
nsubj(knew-3, Diamond-2)
root(ROOT-0, knew-3)
mark(Apostles-9, that-4)
nsubj(Apostles-9, they-5)
aux(Apostles-9, could-6)
neg(Apostles-9, not-7)
cop(Apostles-9, be-8)
ccomp(knew-3, Apostles-9)
vmod(Apostles-9, talking-11)
prep_like(talking-11, this-13)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD could)
      (ADVP (RB only))
      (VP (VB be)
        (NP
          (NP
            (NP (DT the) (NNS sextons)
              (CC and)
              (NNS vergers))
            (CC and)
            (NP (NN such-like)))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VBD got)
                  (PRT (RP up))
                  (PP (IN at)
                    (NP (NN night))))
                (, ,)
                (CC and)
                (VP (VBD put)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NNS robes))
                      (PP (IN of)
                        (NP (NNS deans)
                          (CC and)
                          (NNS bishops))))))
                (, ,)
                (CC and)
                (VP (VBD called)
                  (NP (DT each) (JJ other) (JJ grand) (NNS names)))
                (, ,)
                (PP (IN as)
                  (NP
                    (NP (DT the) (JJ foolish) (NNS servants))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN heard)
                            (S
                              (NP (PRP$ his) (NN father))
                              (VP (VB tell)
                                (PP (IN of)
                                  (S
                                    (VP (VB call)
                                      (NP (PRP themselves))
                                      (NP (NNS lords)
                                        (CC and)
                                        (NNS ladies))
                                      (, ,))))
                                (PP (IN after)
                                  (NP (PRP$ their) (NNS masters)
                                    (CC and)
                                    (NNS mistresses)))))))))))))))))
    (. .)))

nsubj(sextons-6, They-1)
aux(sextons-6, could-2)
advmod(sextons-6, only-3)
cop(sextons-6, be-4)
det(sextons-6, the-5)
root(ROOT-0, sextons-6)
nsubj(got-13, sextons-6)
nsubj(put-19, sextons-6)
nsubj(called-29, sextons-6)
conj_and(sextons-6, vergers-8)
nsubj(got-13, vergers-8)
conj_and(sextons-6, such-like-10)
nsubj(got-13, such-like-10)
rcmod(sextons-6, got-13)
prt(got-13, up-14)
prep_at(got-13, night-16)
rcmod(sextons-6, put-19)
conj_and(got-13, put-19)
det(robes-22, the-21)
prep_on(put-19, robes-22)
prep_of(robes-22, deans-24)
prep_of(robes-22, bishops-26)
conj_and(deans-24, bishops-26)
rcmod(sextons-6, called-29)
conj_and(got-13, called-29)
det(names-33, each-30)
amod(names-33, other-31)
amod(names-33, grand-32)
dobj(called-29, names-33)
rcmod(sextons-6, as-35)
conj_and(got-13, as-35)
det(servants-38, the-36)
amod(servants-38, foolish-37)
prep_as(got-13, servants-38)
nsubj(heard-41, he-39)
aux(heard-41, had-40)
rcmod(servants-38, heard-41)
poss(father-43, his-42)
nsubj(tell-44, father-43)
ccomp(heard-41, tell-44)
prepc_of(tell-44, call-46)
iobj(call-46, themselves-47)
dobj(call-46, lords-48)
dobj(call-46, ladies-50)
conj_and(lords-48, ladies-50)
poss(masters-54, their-53)
prep_after(tell-44, masters-54)
prep_after(tell-44, mistresses-56)
conj_and(masters-54, mistresses-56)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (RB so) (JJ angry))
      (PP (IN at)
        (NP (PRP$ their)
          (ADJP (JJ daring)
            (PP (TO to)
              (NP (NN abuse))))
          (NNP North) (NN Wind)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD jumped)
            (PRT (RP up))
            (, ,)
            (S
              (VP (VBG crying) (: --) (`` ``)
                (S
                  (NP (NNP North) (NNP Wind))
                  (VP (VBZ knows)
                    (NP
                      (NP (JJS best))
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP she))
                          (VP (VBZ is)
                            (ADJP (IN about))))))))))))))
    (. .)))

cc(angry-5, And-1)
nsubj(angry-5, he-2)
cop(angry-5, was-3)
advmod(angry-5, so-4)
root(ROOT-0, angry-5)
poss(Wind-12, their-7)
amod(Wind-12, daring-8)
prep_to(daring-8, abuse-10)
nn(Wind-12, North-11)
prep_at(angry-5, Wind-12)
mark(jumped-16, that-14)
nsubj(jumped-16, he-15)
ccomp(angry-5, jumped-16)
prt(jumped-16, up-17)
xcomp(jumped-16, crying-19)
nn(Wind-23, North-22)
nsubj(knows-24, Wind-23)
ccomp(crying-19, knows-24)
dobj(knows-24, best-25)
dobj(about-29, best-25)
nsubj(about-29, she-27)
cop(about-29, is-28)
rcmod(best-25, about-29)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ has)
      (NP (DT a) (JJ good) (NN right)
        (S
          (VP (TO to)
            (VP (VB blow)
              (NP (DT the) (NNS cobwebs))
              (PP (IN from)
                (NP (PRP$ your) (NNS windows)))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP she))
                  (VP (VBD was)
                    (VP (VBN sent)
                      (S
                        (VP (TO to)
                          (VP (VB do)
                            (NP (PRP it))))))))))))))
    (. .)))

nsubj(has-2, She-1)
root(ROOT-0, has-2)
det(right-5, a-3)
amod(right-5, good-4)
dobj(has-2, right-5)
aux(blow-7, to-6)
vmod(right-5, blow-7)
det(cobwebs-9, the-8)
dobj(blow-7, cobwebs-9)
poss(windows-12, your-11)
prep_from(blow-7, windows-12)
mark(sent-17, for-14)
nsubjpass(sent-17, she-15)
nsubj(do-19, she-15)
auxpass(sent-17, was-16)
advcl(blow-7, sent-17)
aux(do-19, to-18)
xcomp(sent-17, do-19)
dobj(do-19, it-20)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ sweeps)
        (NP (PRP them))
        (PRT (RP away))
        (PP (IN from)
          (NP (JJ grander) (NNS places)))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB tell)
        (NP (PRP you))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBN been)
                (PP (IN with)
                  (NP (PRP her)))
                (PP (IN at)
                  (NP (PRP it)))))))))
    (. .) ('' '')))

nsubj(sweeps-2, She-1)
ccomp(tell-11, sweeps-2)
dobj(sweeps-2, them-3)
amod(places-7, grander-6)
prep_away_from(sweeps-2, places-7)
nsubj(tell-11, I-9)
aux(tell-11, can-10)
root(ROOT-0, tell-11)
dobj(tell-11, you-12)
mark(been-17, for-14)
nsubj(been-17, I-15)
aux(been-17, 've-16)
advcl(tell-11, been-17)
prep_with(been-17, her-19)
prep_at(been-17, it-21)

(ROOT
  (S
    (S
      (S
        (NP (DT This))
        (VP (VBD was)
          (SBAR
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP he))
                (VP (VBD began)
                  (S
                    (VP (TO to)
                      (VP (VB say)))))))
            (, ,)
            (CC but)
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (VBD spoke)
                  (SBAR
                    (S
                      (NP (PRP$ his) (NNS eyes))
                      (VP (VBD came)
                        (ADJP (RB wide) (JJ open)))))))))))
      (, ,)
      (CC and)
      (S
        (S
          (ADVP (RB behold))
          (, ,)
          (NP (EX there))
          (VP (VBD were)
            (ADJP (DT neither) (JJ Apostles)
              (CC nor)
              (JJ vergers))
            (ADVP (RB there))))
        (: --) (RB not)
        (S
          (ADVP (RB even))
          (NP
            (NP (DT a) (NN window))
            (PP (IN with)
              (NP
                (NP (DT the) (NNS effigies))
                (PP (IN of)
                  (NP
                    (NP (JJ holy) (NNS men))
                    (PP (IN in)
                      (NP (PRP it)))))))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT a) (JJ dark) (NN heap))
        (PP (IN of)
          (NP
            (NP
              (NP (NN hay))
              (PP
                (ADVP (DT all))
                (IN about)
                (NP (PRP him))))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (JJ little) (NNS panes))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN roof))
                  (PP (IN of)
                    (NP (PRP$ his) (NN loft)))))))))
      (VP (VBG glimmering)
        (NP (NN blue))
        (PP (IN in)
          (NP
            (NP (DT the) (NN light))
            (PP (IN of)
              (NP (DT the) (NN morning)))))))
    (. .)))

nsubj(was-2, This-1)
nsubj(were-23, This-1)
root(ROOT-0, was-2)
dobj(began-5, what-3)
nsubj(say-7, what-3)
nsubj(began-5, he-4)
advcl(was-2, began-5)
aux(say-7, to-6)
xcomp(began-5, say-7)
mark(spoke-12, as-10)
nsubj(spoke-12, he-11)
advcl(was-2, spoke-12)
conj_but(began-5, spoke-12)
poss(eyes-14, his-13)
nsubj(came-15, eyes-14)
ccomp(spoke-12, came-15)
advmod(open-17, wide-16)
acomp(came-15, open-17)
advmod(were-23, behold-20)
expl(were-23, there-22)
conj_and(was-2, were-23)
preconj(Apostles-25, neither-24)
acomp(were-23, Apostles-25)
acomp(were-23, vergers-27)
conj_nor(Apostles-25, vergers-27)
advmod(were-23, there-28)
neg(were-23, not-30)
advmod(window-33, even-31)
det(window-33, a-32)
parataxis(were-23, window-33)
det(effigies-36, the-35)
prep_with(window-33, effigies-36)
amod(men-39, holy-38)
prep_of(effigies-36, men-39)
prep_in(men-39, it-41)
det(heap-46, a-44)
amod(heap-46, dark-45)
nsubj(glimmering-63, heap-46)
prep_of(heap-46, hay-48)
advmod(hay-48, all-49)
prep_about(hay-48, him-51)
det(panes-56, the-54)
amod(panes-56, little-55)
prep_of(heap-46, panes-56)
conj_and(hay-48, panes-56)
det(roof-59, the-58)
prep_in(panes-56, roof-59)
poss(loft-62, his-61)
prep_of(roof-59, loft-62)
conj_but(was-2, glimmering-63)
dobj(glimmering-63, blue-64)
det(light-67, the-66)
prep_in(glimmering-63, light-67)
det(morning-70, the-69)
prep_of(light-67, morning-70)

(ROOT
  (S
    (NP (NNP Old) (NNP Diamond))
    (VP (VBD was)
      (VP (VBG coming)
        (ADJP (RB awake))
        (ADVP (RB down) (RB below))
        (PP (IN in)
          (NP (DT the) (NN stable)))))
    (. .)))

nn(Diamond-2, Old-1)
nsubj(coming-4, Diamond-2)
aux(coming-4, was-3)
root(ROOT-0, coming-4)
acomp(coming-4, awake-5)
advmod(below-7, down-6)
advmod(coming-4, below-7)
det(stable-10, the-9)
prep_in(coming-4, stable-10)

(ROOT
  (S
    (PP (IN In)
      (ADVP
        (NP (DT a) (NN moment))
        (RBR more)))
    (NP (PRP he))
    (VP (VBD was)
      (UCP
        (PP (IN on)
          (NP (PRP$ his) (NNS feet)))
        (, ,)
        (CC and)
        (S
          (VP (VBG shaking)
            (NP (PRP himself))
            (SBAR (RB so) (IN that)
              (S
                (NP
                  (NP (JJ young) (NNP Diamond) (POS 's))
                  (NN bed))
                (VP (VBD trembled)
                  (PP (IN under)
                    (NP (PRP him))))))))))
    (. .)))

det(moment-3, a-2)
npadvmod(more-4, moment-3)
prepc_in(was-6, more-4)
nsubj(was-6, he-5)
root(ROOT-0, was-6)
dep(was-6, on-7)
poss(feet-9, his-8)
pobj(on-7, feet-9)
dep(was-6, shaking-12)
conj_and(on-7, shaking-12)
dobj(shaking-12, himself-13)
advmod(trembled-20, so-14)
mark(trembled-20, that-15)
amod(Diamond-17, young-16)
poss(bed-19, Diamond-17)
nsubj(trembled-20, bed-19)
advcl(shaking-12, trembled-20)
prep_under(trembled-20, him-22)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (VBZ 's)
        (NP
          (NP (JJ grand))
          (PP (IN at)
            (S
              (VP (VBG shaking)
                (NP (PRP himself))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(grand-4, He-2)
cop(grand-4, 's-3)
ccomp(said-10, grand-4)
prepc_at(grand-4, shaking-6)
dobj(shaking-6, himself-7)
root(ROOT-0, said-10)
nsubj(said-10, Diamond-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD could)
            (VP (VB shake)
              (NP (PRP myself))
              (PP (IN like)
                (NP (DT that))))))))
    (. .)))

nsubj(wish-3, I-2)
root(ROOT-0, wish-3)
nsubj(shake-6, I-4)
aux(shake-6, could-5)
ccomp(wish-3, shake-6)
dobj(shake-6, myself-7)
prep_like(shake-6, that-9)

(ROOT
  (S
    (S (CC But)
      (ADVP (RB then))
      (NP (PRP I))
      (VP (MD can)
        (VP (VB wash)
          (NP (PRP myself)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD ca) (RB n't)))
    (. .)))

advmod(wash-5, then-2)
nsubj(wash-5, I-3)
aux(wash-5, can-4)
root(ROOT-0, wash-5)
dobj(wash-5, myself-6)
nsubj(ca-10, he-9)
conj_and(wash-5, ca-10)
neg(ca-10, n't-11)

(ROOT
  (NP
    (NP (WP What) (NN fun))
    (SBAR
      (S
        (NP (PRP it))
        (VP (MD would)
          (VP (VB be)
            (S
              (VP (TO to)
                (VP (VB see)
                  (S
                    (NP (NNP Old) (NNP Diamond))
                    (VP (VBG washing)
                      (NP (PRP$ his) (NN face))
                      (PP (IN with)
                        (NP (PRP$ his) (NN hoofs)
                          (CC and)
                          (NN iron) (NNS shoes))))))))))))
    (. !)))

det(fun-2, What-1)
root(ROOT-0, fun-2)
nsubj(be-5, it-3)
nsubj(see-7, it-3)
aux(be-5, would-4)
rcmod(fun-2, be-5)
aux(see-7, to-6)
xcomp(be-5, see-7)
nn(Diamond-9, Old-8)
nsubj(washing-10, Diamond-9)
dep(see-7, washing-10)
poss(face-12, his-11)
dobj(washing-10, face-12)
poss(hoofs-15, his-14)
prep_with(washing-10, hoofs-15)
nn(shoes-18, iron-17)
prep_with(washing-10, shoes-18)
conj_and(hoofs-15, shoes-18)

(ROOT
  (FRAG
    (S
      (VP (MD Would) (RB n't)
        (NP (PRP it))
        (VP (VB be)
          (NP (DT a) (NN picture)))))
    (. ?) ('' '')))

aux(picture-6, Would-1)
neg(picture-6, n't-2)
dobj(picture-6, it-3)
cop(picture-6, be-4)
det(picture-6, a-5)
root(ROOT-0, picture-6)

(ROOT
  (S
    (S (RB So)
      (VP (VBG saying)))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD got)
        (PRT (RP up)))
      (CC and)
      (VP (VBD dressed)
        (NP (PRP himself))))
    (. .)))

advmod(saying-2, So-1)
vmod(got-5, saying-2)
nsubj(got-5, he-4)
nsubj(dressed-8, he-4)
root(ROOT-0, got-5)
prt(got-5, up-6)
conj_and(got-5, dressed-8)
dobj(dressed-8, himself-9)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD went)
      (PRT (RP out))
      (PP (IN into)
        (NP (DT the) (NN garden))))
    (. .)))

advmod(went-3, Then-1)
nsubj(went-3, he-2)
root(ROOT-0, went-3)
prt(went-3, out-4)
det(garden-7, the-6)
prep_into(went-3, garden-7)

(ROOT
  (S
    (NP (EX There))
    (VP (MD must)
      (VP (VB have)
        (VP (VBN been)
          (NP
            (NP (DT a) (JJ tremendous) (NN wind))
            (PP (IN in)
              (NP (DT the) (NN night))))
          (, ,)
          (SBAR (IN for)
            (S
              (SBAR (IN although)
                (S
                  (NP (DT all))
                  (VP (VBD was)
                    (ADJP (JJ quiet))
                    (ADVP (RB now)))))
              (, ,)
              (NP (EX there))
              (VP (VBD lay)
                (NP
                  (NP (DT the) (JJ little) (NN summer-house))
                  (VP (VBN crushed)
                    (PP
                      (PP (TO to)
                        (NP (DT the) (NN ground)))
                      (, ,)
                      (CC and)
                      (PP (IN over)
                        (NP (PRP it))))
                    (NP
                      (NP (DT the) (JJ great) (NN elm-tree))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (DT the) (NN wind))
                          (VP (VBD had)
                            (VP (VBN broken)
                              (PRT (RP across)))))))))
                (, ,)
                (S
                  (VP (VBG being)
                    (ADJP (RB much) (JJ decayed))
                    (PP (IN in)
                      (NP (DT the) (NN middle)))))))))))
    (. .)))

expl(wind-7, There-1)
aux(wind-7, must-2)
aux(wind-7, have-3)
cop(wind-7, been-4)
det(wind-7, a-5)
amod(wind-7, tremendous-6)
root(ROOT-0, wind-7)
det(night-10, the-9)
prep_in(wind-7, night-10)
mark(lay-20, for-12)
mark(quiet-16, although-13)
nsubj(quiet-16, all-14)
cop(quiet-16, was-15)
advcl(lay-20, quiet-16)
advmod(quiet-16, now-17)
expl(lay-20, there-19)
advcl(wind-7, lay-20)
det(summer-house-23, the-21)
amod(summer-house-23, little-22)
dobj(lay-20, summer-house-23)
nsubj(lay-20, summer-house-23)
vmod(summer-house-23, crushed-24)
vmod(summer-house-23, crushed-24')
conj_and(crushed-24, crushed-24')
det(ground-27, the-26)
prep_to(crushed-24, ground-27)
prep_over(crushed-24', it-31)
det(elm-tree-34, the-32)
amod(elm-tree-34, great-33)
dobj(crushed-24, elm-tree-34)
dobj(broken-40, elm-tree-34)
det(wind-38, the-37)
nsubj(broken-40, wind-38)
aux(broken-40, had-39)
rcmod(elm-tree-34, broken-40)
prt(broken-40, across-41)
cop(decayed-45, being-43)
advmod(decayed-45, much-44)
vmod(lay-20, decayed-45)
det(middle-48, the-47)
prep_in(decayed-45, middle-48)

(ROOT
  (S
    (NP (NNP Diamond))
    (ADVP (RB almost))
    (VP (VBD cried)
      (S
        (VP (TO to)
          (VP (VB see)
            (NP
              (NP (DT the) (NN wilderness))
              (PP (IN of)
                (NP
                  (NP (JJ green) (NNS leaves))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD used)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (ADVP (RB so) (RB far) (RB up))
                              (PP (IN in)
                                (NP (DT the) (JJ blue) (NN air))))))
                        (, ,)
                        (S
                          (VP
                            (VP (VBG tossing) (IN about)
                              (PP (IN in)
                                (NP (DT the) (NN breeze))))
                            (, ,)
                            (CC and)
                            (VP (VBG liking)
                              (S
                                (NP (PRP it))
                                (ADJP (JJS best))
                                (SBAR
                                  (WHADVP (WRB when))
                                  (S
                                    (NP (DT the) (NN wind))
                                    (VP (VBD blew)
                                      (NP (PRP it))
                                      (ADVP (RBS most)))))))
                            (, ,)
                            (ADVP (RB now))
                            (VP (VBG lying)
                              (ADVP (RB so))
                              (PP
                                (PP (IN near)
                                  (NP (DT the) (NN ground)))
                                (, ,)
                                (CC and)
                                (PP (IN without)
                                  (NP
                                    (NP (DT any) (NN hope))
                                    (PP (IN of)
                                      (S
                                        (VP
                                          (ADVP (RB ever))
                                          (VBG getting)
                                          (PRT (RP up))
                                          (PP (IN into)
                                            (NP (DT the) (JJ deep) (NN air)))))))))))))))))))))
      (ADVP (RB again)))
    (. .)))

nsubj(cried-3, Diamond-1)
nsubj(see-5, Diamond-1)
advmod(cried-3, almost-2)
root(ROOT-0, cried-3)
aux(see-5, to-4)
xcomp(cried-3, see-5)
det(wilderness-7, the-6)
dobj(see-5, wilderness-7)
amod(leaves-10, green-9)
prep_of(wilderness-7, leaves-10)
nsubj(used-13, leaves-10)
nsubj(be-15, leaves-10)
rcmod(leaves-10, used-13)
aux(be-15, to-14)
xcomp(used-13, be-15)
advmod(up-18, so-16)
advmod(up-18, far-17)
advmod(be-15, up-18)
det(air-22, the-20)
amod(air-22, blue-21)
prep_in(be-15, air-22)
ccomp(used-13, tossing-24)
dep(tossing-24, about-25)
det(breeze-28, the-27)
prep_in(tossing-24, breeze-28)
ccomp(used-13, liking-31)
conj_and(tossing-24, liking-31)
nsubj(blew-37, it-32)
dep(blew-37, best-33)
advmod(blew-37, when-34)
det(wind-36, the-35)
nsubj(blew-37, wind-36)
xcomp(liking-31, blew-37)
dobj(blew-37, it-38)
advmod(blew-37, most-39)
advmod(lying-42, now-41)
ccomp(used-13, lying-42)
conj_and(tossing-24, lying-42)
conj_and(tossing-24, lying-42')
conj_and(lying-42, lying-42')
advmod(lying-42, so-43)
det(ground-46, the-45)
prep_near(lying-42, ground-46)
det(hope-51, any-50)
prep_without(lying-42', hope-51)
advmod(getting-54, ever-53)
prepc_of(hope-51, getting-54)
prt(getting-54, up-55)
det(air-59, the-57)
amod(air-59, deep-58)
prep_into(getting-54, air-59)
advmod(cried-3, again-60)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wonder)
      (SBAR
        (WHADJP (WRB how) (JJ old))
        (S
          (NP (DT the) (NN tree))
          (VP (VBZ is)))))
    (. !) ('' '')))

nsubj(wonder-3, I-2)
root(ROOT-0, wonder-3)
advmod(old-5, how-4)
dep(is-8, old-5)
det(tree-7, the-6)
nsubj(is-8, tree-7)
ccomp(wonder-3, is-8)

(ROOT
  (S
    (VP (VBD thought)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, thought-1)
dobj(thought-1, Diamond-2)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD must)
      (VP (VB take)
        (NP (DT a) (JJ long) (NN time))
        (S
          (VP (TO to)
            (VP (VB get)
              (ADVP (RB so)
                (PP (IN near)
                  (NP (DT the) (NN sky))))
              (SBAR (IN as)
                (S
                  (NP (DT that) (JJ poor) (NN tree))
                  (VP (VBD was)))))))))
    (. .) ('' '')))

nsubj(take-4, It-2)
aux(take-4, must-3)
root(ROOT-0, take-4)
det(time-7, a-5)
amod(time-7, long-6)
dobj(take-4, time-7)
aux(get-9, to-8)
vmod(take-4, get-9)
advmod(get-9, so-10)
det(sky-13, the-12)
prep_near(so-10, sky-13)
mark(was-18, as-14)
det(tree-17, that-15)
amod(tree-17, poor-16)
nsubj(was-18, tree-17)
advcl(get-9, was-18)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Yes))
      (, ,)
      (ADVP (RB indeed)))
    (, ,) ('' '')
    (VP (VBD said)
      (NP (DT a) (NN voice))
      (PP (IN beside)
        (NP (PRP him)))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (NNP Diamond))
          (VP (VBD had)
            (VP (VBN spoken)
              (NP (DT the) (JJ last) (NNS words))
              (ADVP (RB aloud)))))))
    (. .)))

discourse(indeed-4, Yes-2)
dep(said-7, indeed-4)
root(ROOT-0, said-7)
det(voice-9, a-8)
dobj(said-7, voice-9)
prep_beside(said-7, him-11)
mark(spoken-16, for-13)
nsubj(spoken-16, Diamond-14)
aux(spoken-16, had-15)
advcl(said-7, spoken-16)
det(words-19, the-17)
amod(words-19, last-18)
dobj(spoken-16, words-19)
advmod(spoken-16, aloud-20)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (VBD started)))
    (, ,)
    (CC and)
    (SINV
      (VP (VBG looking)
        (PRT (RP around)))
      (VP (VBD saw))
      (NP
        (NP (DT a) (NN clergyman))
        (, ,)
        (NP
          (NP (DT a) (NN brother))
          (PP (IN of)
            (NP
              (NP (NNP Mrs.) (NNP Coleman))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD happened)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBG visiting)
                            (NP (PRP her))))))))))))))
    (. .)))

nsubj(started-2, Diamond-1)
root(ROOT-0, started-2)
conj_and(started-2, looking-5)
prt(looking-5, around-6)
dep(looking-5, saw-7)
det(clergyman-9, a-8)
nsubj(looking-5, clergyman-9)
det(brother-12, a-11)
appos(clergyman-9, brother-12)
nn(Coleman-15, Mrs.-14)
prep_of(brother-12, Coleman-15)
nsubj(happened-18, Coleman-15)
nsubj(visiting-21, Coleman-15)
rcmod(Coleman-15, happened-18)
aux(visiting-21, to-19)
aux(visiting-21, be-20)
xcomp(happened-18, visiting-21)
dobj(visiting-21, her-22)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD was)
        (NP (DT a) (JJ great) (NN scholar)))
      (, ,)
      (CC and)
      (VP (VBD was)
        (PP (IN in)
          (NP
            (NP (DT the) (NN habit))
            (PP (IN of)
              (S
                (VP (VBG rising)
                  (ADVP (RB early)))))))))
    (. .)))

nsubj(scholar-5, He-1)
nsubj(was-8, He-1)
cop(scholar-5, was-2)
det(scholar-5, a-3)
amod(scholar-5, great-4)
root(ROOT-0, scholar-5)
conj_and(scholar-5, was-8)
det(habit-11, the-10)
prep_in(was-8, habit-11)
prepc_of(habit-11, rising-13)
advmod(rising-13, early-14)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ (VBP are)
      (NP
        (NP (PRP you))
        (, ,)
        (NP (PRP$ my) (NN man))))
    (. ?) ('' '')))

root(ROOT-0, Who-2)
cop(Who-2, are-3)
nsubj(Who-2, you-4)
poss(man-7, my-6)
appos(you-4, man-7)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD added))
    (. .)))

nsubj(added-2, he-1)
root(ROOT-0, added-2)

(ROOT
  (S
    (NP (`` ``)
      (NP (NNP Little) (NNP Diamond))
      (, ,) ('' ''))
    (VP (VBD answered)
      (NP (DT the) (NN boy)))
    (. .)))

nn(Diamond-3, Little-2)
nsubj(answered-6, Diamond-3)
root(ROOT-0, answered-6)
det(boy-8, the-7)
dobj(answered-6, boy-8)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN heard)
        (PP (IN of)
          (NP (PRP you)))))
    (. .)))

nsubj(heard-3, I-1)
aux(heard-3, have-2)
root(ROOT-0, heard-3)
prep_of(heard-3, you-5)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB come)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADVP (RB up) (RB so) (RB early)))))))
    (. ?) ('' '')))

advmod(come-4, How-1)
aux(come-4, do-2)
nsubj(come-4, you-3)
nsubj(be-6, you-3)
root(ROOT-0, come-4)
aux(be-6, to-5)
xcomp(come-4, be-6)
advmod(early-9, up-7)
advmod(early-9, so-8)
advmod(be-6, early-9)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (DT the) (NN sham) (NNS Apostles))
        (VP (VBD talked)
          (NP (JJ such) (NN nonsense)))))
    (, ,)
    (NP (PRP they))
    (VP (VBD waked)
      (NP (PRP me))
      (PRT (RP up)))
    (. .) ('' '')))

mark(talked-6, Because-2)
det(Apostles-5, the-3)
nn(Apostles-5, sham-4)
nsubj(talked-6, Apostles-5)
advcl(waked-11, talked-6)
amod(nonsense-8, such-7)
dobj(talked-6, nonsense-8)
nsubj(waked-11, they-10)
root(ROOT-0, waked-11)
dobj(waked-11, me-12)
prt(waked-11, up-13)

(ROOT
  (S
    (NP (DT The) (NN clergyman))
    (VP (VBD stared))
    (. .)))

det(clergyman-2, The-1)
nsubj(stared-3, clergyman-2)
root(ROOT-0, stared-3)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD saw)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (ADVP (RBR better))
            (VP (VB have)
              (VP (VBN held)
                (NP (PRP$ his) (NN tongue))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP he))
                    (VP (MD could) (RB not)
                      (VP (VB explain)
                        (NP (NNS things))))))))))))
    (. .)))

nsubj(saw-2, Diamond-1)
root(ROOT-0, saw-2)
mark(held-8, that-3)
nsubj(held-8, he-4)
aux(held-8, had-5)
advmod(held-8, better-6)
aux(held-8, have-7)
ccomp(saw-2, held-8)
poss(tongue-10, his-9)
dobj(held-8, tongue-10)
mark(explain-16, for-12)
nsubj(explain-16, he-13)
aux(explain-16, could-14)
neg(explain-16, not-15)
advcl(held-8, explain-16)
dobj(explain-16, things-17)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (MD must)
        (VP (VB have)
          (VP (VBN been)
            (VP (VBN dreaming) (, ,)
              (NP (PRP$ my) (JJ little) (NN man)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP he))
    (. .)))

nsubjpass(dreaming-6, You-2)
aux(dreaming-6, must-3)
aux(dreaming-6, have-4)
auxpass(dreaming-6, been-5)
ccomp(said-13, dreaming-6)
poss(man-10, my-8)
amod(man-10, little-9)
dobj(dreaming-6, man-10)
root(ROOT-0, said-13)
nsubj(said-13, he-14)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Dear))
    (. !)))

root(ROOT-0, Dear-2)

(ROOT
  (ADVP (RB dear) (. !) ('' '')))

root(ROOT-0, dear-1)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD went)
      (PRT (RP on))
      (, ,)
      (S
        (VP (VBG looking)
          (PP (IN at)
            (NP (DT the) (NN tree)))
          (, ,) (`` ``)
          (S
            (NP (EX there))
            (VP (VBZ has)
              (VP (VBN been)
                (NP (JJ terrible) (NN work))
                (ADVP (RB here))))))))
    (. .)))

nsubj(went-2, he-1)
root(ROOT-0, went-2)
prt(went-2, on-3)
xcomp(went-2, looking-5)
det(tree-8, the-7)
prep_at(looking-5, tree-8)
expl(work-15, there-11)
aux(work-15, has-12)
cop(work-15, been-13)
amod(work-15, terrible-14)
ccomp(looking-5, work-15)
advmod(work-15, here-16)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN north) (NN wind))
        (SBAR
          (S
            (VP (VBZ 's)
              (VP (VBG doing)))))))
    (. .)))

nsubj(wind-5, This-1)
cop(wind-5, is-2)
det(wind-5, the-3)
nn(wind-5, north-4)
root(ROOT-0, wind-5)
aux(doing-7, 's-6)
rcmod(wind-5, doing-7)

(ROOT
  (FRAG
    (WHNP (WP What)
      (NP (DT a) (NN pity)))
    (. !)))

root(ROOT-0, What-1)
det(pity-3, a-2)
dep(What-1, pity-3)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP wish)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD lived)
              (PP (IN at)
                (NP
                  (NP (DT the) (NN back))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)))
    (. .) ('' '')))

nsubj(wish-2, I-1)
ccomp(sure-13, wish-2)
nsubj(lived-4, we-3)
ccomp(wish-2, lived-4)
det(back-7, the-6)
prep_at(lived-4, back-7)
prep_of(back-7, it-9)
nsubj(sure-13, I-11)
cop(sure-13, 'm-12)
root(ROOT-0, sure-13)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBZ is)
      (NP (DT that) (NN sir)))
    (. ?) ('' '')))

advmod(is-3, Where-2)
root(ROOT-0, is-3)
det(sir-5, that-4)
nsubj(is-3, sir-5)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)

(ROOT
  (SINV (`` ``)
    (FRAG
      (ADVP (RB Away)
        (PP (IN in)
          (NP (DT the) (NNP Hyperborean) (NNS regions)))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP
      (NP (DT the) (NN clergyman))
      (, ,)
      (NP (VBG smiling)))
    (. .)))

dep(answered-9, Away-2)
det(regions-6, the-4)
nn(regions-6, Hyperborean-5)
prep_in(Away-2, regions-6)
root(ROOT-0, answered-9)
det(clergyman-11, the-10)
nsubj(answered-9, clergyman-11)
appos(clergyman-11, smiling-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBN heard)
        (PP (IN of)
          (NP (DT the) (NN place)))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Diamond))
    (. .)))

nsubj(heard-4, I-2)
neg(heard-4, never-3)
dep(returned-10, heard-4)
det(place-7, the-6)
prep_of(heard-4, place-7)
root(ROOT-0, returned-10)
nsubj(returned-10, Diamond-11)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP daresay) (RB not)))
    (, ,) ('' '')
    (VP (VBD answered)
      (NP
        (NP (DT the) (NN clergyman))
        (: ;) (`` ``)
        (S
          (S (CC but)
            (SBAR (IN if)
              (S
                (NP (DT this) (NN tree))
                (VP (VBD had)
                  (VP (VBN been)
                    (ADVP (RB there))
                    (ADVP (RB now))))))
            (, ,)
            (NP (PRP it))
            (VP (MD would) (RB not)
              (VP (VB have)
                (VP (VBN been)
                  (VP (VBN blown)
                    (PRT (RP down)))))))
          (, ,) (IN for)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT no) (NN wind))
              (ADVP (RB there)))))))
    (. .) ('' '')))

nsubj(daresay-3, I-2)
ccomp(answered-7, daresay-3)
neg(daresay-3, not-4)
root(ROOT-0, answered-7)
det(clergyman-9, the-8)
dobj(answered-7, clergyman-9)
cc(blown-26, but-12)
mark(been-17, if-13)
det(tree-15, this-14)
nsubj(been-17, tree-15)
aux(been-17, had-16)
advcl(blown-26, been-17)
advmod(been-17, there-18)
advmod(been-17, now-19)
nsubjpass(blown-26, it-21)
aux(blown-26, would-22)
neg(blown-26, not-23)
aux(blown-26, have-24)
auxpass(blown-26, been-25)
dep(clergyman-9, blown-26)
prt(blown-26, down-27)
dep(blown-26, for-29)
expl(is-31, there-30)
parataxis(blown-26, is-31)
neg(wind-33, no-32)
nsubj(is-31, wind-33)
advmod(is-31, there-34)

(ROOT
  (S (`` ``)
    (S (CC But)
      (, ,)
      (S
        (VP (VB please)))
      (, ,)
      (VP
        (VP (VBP sir))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBD had)
              (VP (VBN been)
                (ADVP (RB there))))))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (NNP Diamond))))
    (, ,) (`` ``)
    (NP (PRP we))
    (VP (MD should) (RB not)
      (VP (VB have)
        (VP (VBN had)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ sorry)
                  (PP (IN for)
                    (NP (PRP it))))))))))
    (. .) ('' '')))

cc(sir-6, But-2)
dep(sir-6, please-4)
ccomp(had-23, sir-6)
mark(been-11, if-8)
nsubj(been-11, it-9)
aux(been-11, had-10)
advcl(sir-6, been-11)
advmod(been-11, there-12)
parataxis(had-23, said-15)
nsubj(said-15, Diamond-16)
nsubj(had-23, we-19)
nsubj(sorry-26, we-19)
aux(had-23, should-20)
neg(had-23, not-21)
aux(had-23, have-22)
root(ROOT-0, had-23)
aux(sorry-26, to-24)
cop(sorry-26, be-25)
xcomp(had-23, sorry-26)
prep_for(sorry-26, it-28)

(ROOT
  (S (`` ``)
    (VP (VB Certainly) (RB not))
    (. .) ('' '')))

root(ROOT-0, Certainly-2)
neg(Certainly-2, not-3)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP we))
    (VP (MD should) (RB n't)
      (VP (VB have)
        (VP (VBN had)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ glad))
                (PP (IN for)
                  (NP (PRP it)))
                (, ,)
                (ADVP (RB either))))))))
    (. .) ('' '')))

advmod(had-7, Then-2)
nsubj(had-7, we-3)
nsubj(glad-10, we-3)
aux(had-7, should-4)
neg(had-7, n't-5)
aux(had-7, have-6)
root(ROOT-0, had-7)
aux(glad-10, to-8)
cop(glad-10, be-9)
xcomp(had-7, glad-10)
prep_for(glad-10, it-12)
advmod(glad-10, either-14)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (ADJP (RB quite) (JJ right))
        (, ,)
        (NP (PRP$ my) (NN boy))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN clergyman))
    (, ,)
    (S
      (VP (VBG looking)
        (PP (IN at)
          (NP (PRP him)))
        (ADVP
          (ADVP (RB very) (RB kindly))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBD turned)
                (ADVP (RB away))
                (PP (TO to)
                  (NP (DT the) (NN house)))
                (, ,)
                (PP (IN with)
                  (NP
                    (NP (PRP$ his) (NNS eyes) (NN bent))
                    (PP (IN towards)
                      (NP (DT the) (NN earth)))))))))))
    (. .)))

nsubj(right-5, You-2)
cop(right-5, 're-3)
advmod(right-5, quite-4)
ccomp(said-11, right-5)
poss(boy-8, my-7)
dep(right-5, boy-8)
root(ROOT-0, said-11)
det(clergyman-13, the-12)
nsubj(said-11, clergyman-13)
vmod(said-11, looking-15)
prep_at(looking-15, him-17)
advmod(kindly-19, very-18)
advmod(looking-15, kindly-19)
mark(turned-23, as-21)
nsubj(turned-23, he-22)
advcl(kindly-19, turned-23)
ccomp(kindly-19, turned-23)
advmod(turned-23, away-24)
det(house-27, the-26)
prep_to(turned-23, house-27)
poss(bent-32, his-30)
nn(bent-32, eyes-31)
prep_with(turned-23, bent-32)
det(earth-35, the-34)
prep_towards(bent-32, earth-35)

(ROOT
  (S (CC But)
    (NP (NNP Diamond))
    (VP (VBD thought)
      (SBAR
        (S
          (PP (IN within)
            (NP (PRP himself)))
          (, ,) (`` ``)
          (NP (PRP I))
          (VP (MD will)
            (VP (VB ask)
              (NP (JJ North) (NN Wind))
              (NP (JJ next) (NN time))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP see)
                    (S
                      (NP (PRP her))
                      (VP (TO to)
                        (VP (VB take)
                          (NP (PRP me))
                          (PP (TO to)
                            (NP (DT that) (NN country))))))))))))))
    (. .)))

cc(thought-3, But-1)
nsubj(thought-3, Diamond-2)
root(ROOT-0, thought-3)
prep_within(ask-10, himself-5)
nsubj(ask-10, I-8)
aux(ask-10, will-9)
ccomp(thought-3, ask-10)
amod(Wind-12, North-11)
iobj(ask-10, Wind-12)
amod(time-14, next-13)
dobj(ask-10, time-14)
nsubj(see-16, I-15)
dep(ask-10, see-16)
dobj(see-16, her-17)
nsubj(take-19, her-17)
aux(take-19, to-18)
xcomp(see-16, take-19)
dobj(take-19, me-20)
det(country-23, that-22)
prep_to(take-19, country-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD did)
            (VP (VB speak)
              (PP (IN about)
                (NP (PRP it)))
              (ADVP (RB once) (RB before)))))))
    (. .) ('' '')))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(speak-5, she-3)
aux(speak-5, did-4)
ccomp(think-2, speak-5)
prep_about(speak-5, it-7)
advmod(before-9, once-8)
advmod(speak-5, before-9)

(ROOT
  (NP (NNP CHAPTER) (NNP IX) (. .)))

nn(IX-2, CHAPTER-1)
root(ROOT-0, IX-2)

(ROOT
  (S
    (S
      (NP (NNP HOW) (NNP DIAMOND) (NNP GOT))
      (VP (VBD TO)
        (NP
          (NP (DT THE) (NN BACK))
          (PP (IN OF)
            (NP (DT THE) (NNP NORTH) (NNP WIND))))
        (SBAR
          (WHADVP (WRB WHEN))
          (S
            (NP (NNP Diamond))
            (VP (VBD went)
              (NP (NN home))
              (PP (TO to)
                (NP (NN breakfast))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD found)
      (NP
        (NP (PRP$ his) (NN father)
          (CC and)
          (NN mother))
        (VP
          (ADVP (RB already))
          (VBN seated)
          (PP (IN at)
            (NP (DT the) (NN table))))))
    (. .)))

nn(GOT-3, HOW-1)
nn(GOT-3, DIAMOND-2)
nsubj(TO-4, GOT-3)
ccomp(found-19, TO-4)
det(BACK-6, THE-5)
dobj(TO-4, BACK-6)
det(WIND-10, THE-8)
nn(WIND-10, NORTH-9)
prep_of(BACK-6, WIND-10)
advmod(went-13, WHEN-11)
nsubj(went-13, Diamond-12)
advcl(TO-4, went-13)
dobj(went-13, home-14)
prep_to(went-13, breakfast-16)
nsubj(found-19, he-18)
root(ROOT-0, found-19)
poss(father-21, his-20)
dobj(found-19, father-21)
dobj(found-19, mother-23)
conj_and(father-21, mother-23)
advmod(seated-25, already-24)
vmod(father-21, seated-25)
det(table-28, the-27)
prep_at(seated-25, table-28)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD were) (DT both)
        (ADJP (JJ busy))
        (PP (IN with)
          (NP (PRP$ their) (NN bread)
            (CC and)
            (NN butter)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Diamond))
      (VP (VBD sat)
        (NP (PRP himself))
        (PRT (RP down))
        (PP (IN in)
          (NP (PRP$ his) (JJ usual) (NN place)))))
    (. .)))

nsubj(busy-4, They-1)
cop(busy-4, were-2)
dep(busy-4, both-3)
root(ROOT-0, busy-4)
poss(bread-7, their-6)
prep_with(busy-4, bread-7)
prep_with(busy-4, butter-9)
conj_and(bread-7, butter-9)
nsubj(sat-13, Diamond-12)
conj_and(busy-4, sat-13)
dobj(sat-13, himself-14)
prt(sat-13, down-15)
poss(place-19, his-17)
amod(place-19, usual-18)
prep_in(sat-13, place-19)

(ROOT
  (S
    (NP (PRP$ His) (NN mother))
    (VP
      (VP (VBD looked)
        (PRT (RP up))
        (PP (IN at)
          (NP (PRP him))))
      (, ,)
      (CC and)
      (, ,)
      (VP
        (PP (IN after)
          (S
            (VP (VBG watching)
              (NP (PRP him))
              (PP (IN for)
                (NP (DT a) (NN moment))))))
        (, ,) (VBD said) (: :) (`` ``)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP (VB think)
                (S
                  (NP (DT the) (NN boy))
                  (VP (VBZ is)
                    (VP (VBG looking)
                      (ADVP (RB well)))))
                (, ,)
                (NP (NN husband))))))))
    (. .) ('' '')))

poss(mother-2, His-1)
nsubj(looked-3, mother-2)
nsubj(said-17, mother-2)
root(ROOT-0, looked-3)
prt(looked-3, up-4)
prep_at(looked-3, him-6)
prepc_after(said-17, watching-11)
dobj(watching-11, him-12)
det(moment-15, a-14)
prep_for(watching-11, moment-15)
conj_and(looked-3, said-17)
nsubj(think-23, I-20)
aux(think-23, do-21)
neg(think-23, n't-22)
ccomp(said-17, think-23)
det(boy-25, the-24)
nsubj(looking-27, boy-25)
aux(looking-27, is-26)
ccomp(think-23, looking-27)
advmod(looking-27, well-28)
dobj(think-23, husband-30)

(ROOT
  (SQ
    (VP (`` ``) (VB Do)
      (ADVP (RB n't))
      (NP (PRP you)))
    (. ?)))

root(ROOT-0, Do-2)
neg(Do-2, n't-3)
dobj(Do-2, you-4)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .)))

discourse(know-6, Well-1)
nsubj(know-6, I-3)
aux(know-6, do-4)
neg(know-6, n't-5)
root(ROOT-0, know-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBZ looks)
            (ADJP (RB pretty) (JJ bobbish))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(looks-4, he-3)
ccomp(think-2, looks-4)
advmod(bobbish-6, pretty-5)
acomp(looks-4, bobbish-6)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB feel)
        (NP
          (NP (PRP yourself))
          (, ,)
          (NP
            (NP (NNP Diamond))
            (, ,)
            (NP (PRP$ my) (NN boy))))))
    (. ?) ('' '')))

advmod(feel-4, How-1)
aux(feel-4, do-2)
nsubj(feel-4, you-3)
root(ROOT-0, feel-4)
dobj(feel-4, yourself-5)
appos(yourself-5, Diamond-7)
poss(boy-10, my-9)
appos(Diamond-7, boy-10)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (RB Quite) (RB well))
        (, ,)
        (VP (VBP thank)
          (NP (PRP you)))
        (, ,))
      (VP (VBZ father)))
    (: ;)
    (S
      (ADVP (IN at) (JJS least))
      (, ,)
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBN got)
                (NP (DT a) (JJ little) (NN headache))))))))
    (. .) ('' '')))

advmod(well-3, Quite-2)
nsubj(father-8, well-3)
dep(well-3, thank-5)
dobj(thank-5, you-6)
root(ROOT-0, father-8)
advmod(think-14, at-10)
pobj(at-10, least-11)
nsubj(think-14, I-13)
parataxis(father-8, think-14)
nsubj(got-17, I-15)
aux(got-17, 've-16)
ccomp(think-14, got-17)
det(headache-20, a-18)
amod(headache-20, little-19)
dobj(got-17, headache-20)

(ROOT
  (S
    (NP (`` ``) (EX There))
    (VP (VBZ !))))

expl(!-3, There-2)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBD told)
        (NP (PRP you))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP (PRP$ his) (NN father)
        (CC and)
        (NN mother))
      (PP (DT both) (IN at)))
    (NP (RB once))
    (. .)))

nsubj(told-2, I-1)
ccomp(said-6, told-2)
dobj(told-2, you-3)
root(ROOT-0, said-6)
poss(father-8, his-7)
dobj(said-6, father-8)
dobj(said-6, mother-10)
conj_and(father-8, mother-10)
dep(at-12, both-11)
prep(said-6, at-12)
nsubj(said-6, once-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT The) (NN child))
      (VP (VBZ 's)
        (ADJP (RB very) (RB poorly))))
    ('' '')
    (VP (VBD added))
    (NP (PRP$ his) (NN mother))
    (. .)))

det(child-3, The-2)
nsubj(poorly-6, child-3)
cop(poorly-6, 's-4)
advmod(poorly-6, very-5)
ccomp(added-8, poorly-6)
root(ROOT-0, added-8)
poss(mother-10, his-9)
nsubj(added-8, mother-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT The) (NN child))
      (VP (VBZ 's)
        (ADVP (RB quite) (RB well))))
    (, ,) ('' '')
    (VP (VBD added))
    (NP (PRP$ his) (NN father))
    (. .)))

det(child-3, The-2)
nsubj('s-4, child-3)
ccomp(added-9, 's-4)
advmod(well-6, quite-5)
advmod('s-4, well-6)
root(ROOT-0, added-9)
poss(father-11, his-10)
nsubj(added-9, father-11)

(ROOT
  (S (CC And)
    (RB then)
    (NP (PRP they))
    (ADVP (DT both))
    (VP (VBD laughed))
    (. .)))

cc(laughed-5, And-1)
advmod(laughed-5, then-2)
nsubj(laughed-5, they-3)
advmod(laughed-5, both-4)
root(ROOT-0, laughed-5)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN mother))
    (, ,) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN had)
          (NP (DT a) (NN letter))
          (PP (IN from)
            (NP (PRP$ my) (NN sister)))
          (PP (IN at)
            (NP (NNP Sandwich))))))
    (. .) ('' '')))

nsubj(see-3, You-2)
ccomp(said-6, see-3)
root(ROOT-0, said-6)
poss(mother-8, his-7)
nsubj(said-6, mother-8)
nsubj(had-13, I-11)
aux(had-13, 've-12)
dep(said-6, had-13)
det(letter-15, a-14)
dobj(had-13, letter-15)
poss(sister-18, my-17)
prep_from(had-13, sister-18)
prep_at(had-13, Sandwich-20)

(ROOT
  (S (`` ``)
    (NP (NNP Sleepy) (JJ old))
    (VP (VBP hole))
    (. !) ('' '')))

nsubj(hole-4, Sleepy-2)
amod(Sleepy-2, old-3)
root(ROOT-0, hole-4)

(ROOT
  (S
    (VP (VBD said)
      (NP (PRP$ his) (NN father)))
    (. .)))

root(ROOT-0, said-1)
poss(father-3, his-2)
dobj(said-1, father-3)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (VP (VBP Do) (RB n't)
          (VP (VB abuse)
            (NP (DT the) (NN place)))))
      (: ;)
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP
            (NP (JJ good) (NNS people))
            (PP (IN in)
              (NP (PRP it)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN mother))
    (. .)))

aux(abuse-4, Do-2)
neg(abuse-4, n't-3)
ccomp(said-16, abuse-4)
det(place-6, the-5)
dobj(abuse-4, place-6)
expl('s-9, there-8)
parataxis(abuse-4, 's-9)
amod(people-11, good-10)
nsubj('s-9, people-11)
prep_in(people-11, it-13)
root(ROOT-0, said-16)
poss(mother-18, his-17)
nsubj(said-16, mother-18)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NNP Right))
        (, ,)
        (NP (JJ old) (NN lady))
        (, ,) ('' ''))
      (VP (VBD returned)
        (NP (PRP$ his) (NN father))))
    (: ;) (`` ``)
    (S
      (ADVP (RB only))
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB believe)
          (SBAR
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (NP
                    (QP (JJR more) (IN than) (CD two))
                    (NN pair))
                  (PP (IN of)
                    (NP
                      (NP (NNS carriage-horses))
                      (PP (IN in)
                        (NP (DT the) (JJ whole) (JJ blessed) (NN place))))))))))))
    (. .) ('' '')))

nsubj(returned-8, Right-2)
amod(lady-5, old-4)
appos(Right-2, lady-5)
root(ROOT-0, returned-8)
poss(father-10, his-9)
dobj(returned-8, father-10)
advmod(believe-17, only-13)
nsubj(believe-17, I-14)
aux(believe-17, do-15)
neg(believe-17, n't-16)
parataxis(returned-8, believe-17)
expl(are-19, there-18)
ccomp(believe-17, are-19)
mwe(than-21, more-20)
quantmod(two-22, than-21)
num(pair-23, two-22)
nsubj(are-19, pair-23)
prep_of(pair-23, carriage-horses-25)
det(place-30, the-27)
amod(place-30, whole-28)
amod(place-30, blessed-29)
prep_in(carriage-horses-25, place-30)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (NNS people))
    (VP (MD can)
      (VP
        (VP (VB get)
          (PP (TO to)
            (NP (NN heaven)))
          (PP (IN without)
            (NP (NNS carriages))))
        (: --)
        (CC or)
        (VP (VB coachmen)
          (NP
            (NP (DT either))
            (, ,)
            (NP (NN husband))))))
    (. .)))

discourse(get-6, Well-2)
nsubj(get-6, people-4)
nsubj(coachmen-13, people-4)
aux(get-6, can-5)
root(ROOT-0, get-6)
prep_to(get-6, heaven-8)
prep_without(get-6, carriages-10)
conj_or(get-6, coachmen-13)
dobj(coachmen-13, either-14)
appos(either-14, husband-16)

(ROOT
  (S
    (SBAR (RB Not) (IN that)
      (S
        (NP (PRP I))
        (VP (MD should)
          (VP (VB like)
            (S
              (VP (TO to)
                (VP (VB go)
                  (PP (IN without)
                    (NP (PRP$ my) (NN coachman))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .)))

dep(like-5, Not-1)
mark(like-5, that-2)
nsubj(like-5, I-3)
nsubj(go-7, I-3)
aux(like-5, should-4)
advcl(know-13, like-5)
aux(go-7, to-6)
xcomp(like-5, go-7)
poss(coachman-10, my-9)
prep_without(go-7, coachman-10)
nsubj(know-13, you-12)
root(ROOT-0, know-13)

(ROOT
  (FRAG (CC But)
    (PP (IN about)
      (NP (DT the) (NN boy))
      (. ?) ('' ''))))

root(ROOT-0, But-1)
det(boy-4, the-3)
prep_about(But-1, boy-4)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ boy)))
    (. ?) ('' '')))

nsubj(boy-3, What-2)
root(ROOT-0, boy-3)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBD boy) (, ,)
      (ADVP (RB there))
      (, ,)
      (PP (VBG staring)
        (PP (IN at)
          (NP
            (NP (PRP you))
            (PP (IN with)
              (NP (PRP$ his) (NNS goggle-eyes)))))))
    (. .) ('' '')))

nsubj(boy-3, That-2)
root(ROOT-0, boy-3)
advmod(boy-3, there-5)
prep(boy-3, staring-7)
pcomp(staring-7, at-8)
pobj(at-8, you-9)
poss(goggle-eyes-12, his-11)
prep_with(you-9, goggle-eyes-12)

(ROOT
  (S (`` ``)
    (ADVP (RB Have))
    (NP (PRP I))
    (VP (VBD got)
      (NP
        (NP (NNS goggle-eyes))
        (, ,)
        (NP (NN mother))))
    (. ?) ('' '')))

advmod(got-4, Have-2)
nsubj(got-4, I-3)
root(ROOT-0, got-4)
dobj(got-4, goggle-eyes-5)
appos(goggle-eyes-5, mother-7)

(ROOT
  (S
    (VP (VBN asked)
      (NP
        (NP (NNP Diamond))
        (, ,)
        (ADJP
          (NP (DT a) (RB little))
          (JJ dismayed))))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)
det(little-5, a-4)
npadvmod(dismayed-6, little-5)
amod(Diamond-2, dismayed-6)

(ROOT
  (S (`` ``)
    (FRAG (RB Not)
      (ADJP (RB too) (JJ goggle)))
    (, ,) ('' '')
    (VP (VBD said)
      (SBAR
        (S
          (NP
            (NP (PRP$ his) (NN mother))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD was)
                  (ADJP (RB quite) (JJ proud))
                  (PP (IN of)
                    (NP
                      (NP (PRP$ her) (NN boy) (POS 's))
                      (NNS eyes))))))
            (, ,))
          (ADVP (RB only))
          (VP (VBD did) (RB not)
            (VP (VB want)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP (PRP him))))))))))
    (NP (JJ vain))
    (. .)))

dep(said-7, Not-2)
advmod(goggle-4, too-3)
dep(Not-2, goggle-4)
root(ROOT-0, said-7)
poss(mother-9, his-8)
nsubj(proud-14, mother-9)
nsubj(want-24, mother-9)
nsubj(make-26, mother-9)
cop(proud-14, was-12)
advmod(proud-14, quite-13)
rcmod(mother-9, proud-14)
poss(boy-17, her-16)
poss(eyes-19, boy-17)
prep_of(proud-14, eyes-19)
advmod(want-24, only-21)
aux(want-24, did-22)
neg(want-24, not-23)
ccomp(said-7, want-24)
aux(make-26, to-25)
xcomp(want-24, make-26)
dobj(make-26, him-27)
dep(said-7, vain-28)

(ROOT
  (S (`` ``)
    (S
      (VP
        (ADVP (RB Not) (RB too))
        (VBN goggle)))
    (: ;)
    (S
      (ADVP (RB only))
      (NP (PRP you))
      (VP (VBP need) (RB not)
        (VP (VB stare)
          (ADVP (RB so)))))
    (. .) ('' '')))

dep(too-3, Not-2)
advmod(goggle-4, too-3)
root(ROOT-0, goggle-4)
advmod(need-8, only-6)
nsubj(need-8, you-7)
parataxis(goggle-4, need-8)
neg(need-8, not-9)
dep(need-8, stare-10)
advmod(stare-10, so-11)

(ROOT
  (X (`` ``)
    (X (SYM Well))
    (, ,)
    (X
      (X (WP what))
      (PP (IN about)
        (NP (PRP him))))
    (. ?) ('' '')))

dep(about-5, Well-2)
dep(about-5, what-4)
root(ROOT-0, about-5)
pobj(about-5, him-6)

(ROOT
  (S
    (VP (VBD said)
      (NP (PRP$ his) (NN father)))
    (. .)))

root(ROOT-0, said-1)
poss(father-3, his-2)
dobj(said-1, father-3)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD told)
      (NP (PRP you))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD had)
            (VP (VBN got)
              (NP (DT a) (NN letter)))))))
    (. .) ('' '')))

nsubj(told-3, I-2)
root(ROOT-0, told-3)
dobj(told-3, you-4)
nsubj(got-7, I-5)
aux(got-7, had-6)
dep(told-3, got-7)
det(letter-9, a-8)
dobj(got-7, letter-9)

(ROOT
  (FRAG
    (FRAG
      (INTJ (`` ``) (UH Yes))
      (, ,)
      (PP (IN from)
        (NP (PRP$ your) (NN sister))))
    (: ;)
    (FRAG (RB not)
      (PP (IN from)
        (NP (NNP Diamond))
        (. .) ('' '')))))

root(ROOT-0, Yes-2)
poss(sister-6, your-5)
prep_from(Yes-2, sister-6)
dep(Yes-2, not-8)
prep_from(not-8, Diamond-10)

(ROOT
  (FRAG (`` ``)
    (NP (NNP La))
    (, ,)
    (NP (NN husband))
    (. !)))

root(ROOT-0, La-2)
dep(La-2, husband-4)

(ROOT
  (S
    (S
      (NP (PRP you))
      (VP (VBP 've)
        (VP (VBN got)
          (PRT (RP out))
          (PP (IN of)
            (S
              (VP (VBG bed)
                (NP (DT the) (JJ wrong) (NN leg))
                (NP (RB first) (DT this) (NN morning))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do)
      (VP (VB believe)))
    (. .) ('' '')))

nsubj(got-3, you-1)
aux(got-3, 've-2)
ccomp(believe-16, got-3)
prepc_out_of(got-3, bed-6)
det(leg-9, the-7)
amod(leg-9, wrong-8)
dobj(bed-6, leg-9)
advmod(morning-12, first-10)
det(morning-12, this-11)
tmod(bed-6, morning-12)
nsubj(believe-16, I-14)
aux(believe-16, do-15)
root(ROOT-0, believe-16)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB always))
      (VP (VBP get)
        (PRT (RP out))
        (PP (IN with)
          (NP
            (NP (DT both))
            (PP (IN at)
              (NP (RB once)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN father))
    (, ,)
    (S
      (VP (VBG laughing)))
    (. .)))

nsubj(get-4, I-2)
advmod(get-4, always-3)
ccomp(said-12, get-4)
prt(get-4, out-5)
prep_with(get-4, both-7)
prep(both-7, at-8)
pobj(at-8, once-9)
root(ROOT-0, said-12)
poss(father-14, his-13)
nsubj(said-12, father-14)
vmod(said-12, laughing-16)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (VP (VB listen)
      (ADVP (RB then)))
    (. .)))

discourse(listen-4, Well-2)
root(ROOT-0, listen-4)
advmod(listen-4, then-5)

(ROOT
  (S
    (NP (PRP$ His) (NN aunt))
    (VP (VBZ wants)
      (NP (DT the) (NN boy)
        (S
          (VP (TO to)
            (VP
              (VP (VB go)
                (PRT (RP down)))
              (CC and)
              (VP (VB see)
                (NP (PRP her))))))))
    (. .) ('' '')))

poss(aunt-2, His-1)
nsubj(wants-3, aunt-2)
root(ROOT-0, wants-3)
det(boy-5, the-4)
dobj(wants-3, boy-5)
aux(go-7, to-6)
vmod(boy-5, go-7)
prt(go-7, down-8)
vmod(boy-5, see-10)
conj_and(go-7, see-10)
dobj(see-10, her-11)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (DT that))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB make)
                  (PRT (RP out))
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (VBP ai) (RB n't)
                        (VP (VBG looking)
                          (ADVP (RB well)))))))))))))
    (. .) ('' '')))

cc('s-4, And-2)
nsubj('s-4, that-3)
root(ROOT-0, 's-4)
advmod(want-7, why-5)
nsubj(want-7, you-6)
nsubj(make-9, you-6)
advcl('s-4, want-7)
aux(make-9, to-8)
xcomp(want-7, make-9)
prt(make-9, out-10)
mark(looking-15, that-11)
nsubj(looking-15, he-12)
aux(looking-15, ai-13)
neg(looking-15, n't-14)
ccomp(make-9, looking-15)
advmod(looking-15, well-16)

(ROOT
  (S (`` ``)
    (ADVP (DT No) (RBR more))
    (NP (PRP he))
    (VP (VBZ is))
    (. .)))

neg(more-3, No-2)
advmod(is-5, more-3)
nsubj(is-5, he-4)
root(ROOT-0, is-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD had)
            (ADVP (RBR better))
            (VP (VB go))))))
    (. .) ('' '')))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(go-6, he-3)
aux(go-6, had-4)
advmod(go-6, better-5)
ccomp(think-2, go-6)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Well))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB care) (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (MD can)
                (VP (VB find)
                  (NP (DT the) (NN money)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN father))
    (. .)))

advmod(care-7, Well-2)
nsubj(care-7, I-4)
aux(care-7, do-5)
neg(care-7, n't-6)
ccomp(said-17, care-7)
mark(find-12, if-9)
nsubj(find-12, you-10)
aux(find-12, can-11)
advcl(care-7, find-12)
det(money-14, the-13)
dobj(find-12, money-14)
root(ROOT-0, said-17)
poss(father-19, his-18)
nsubj(said-17, father-19)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB manage)
          (NP (DT that)))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP (PRP$ his) (NN mother)))
    (: ;)
    (S (CC and)
      (S (IN so)
        (NP (PRP it))
        (VP (VBD was)
          (VP (VBN agreed)
            (SBAR (IN that)
              (S
                (NP (NNP Diamond))
                (VP (MD should)
                  (VP (VB go)
                    (PP (TO to)
                      (NP (NNP Sandwich)))))))))))
    (. .)))

nsubj(manage-4, I-2)
aux(manage-4, 'll-3)
ccomp(said-8, manage-4)
dobj(manage-4, that-5)
root(ROOT-0, said-8)
poss(mother-10, his-9)
dobj(said-8, mother-10)
cc(agreed-16, and-12)
dep(agreed-16, so-13)
nsubjpass(agreed-16, it-14)
auxpass(agreed-16, was-15)
parataxis(said-8, agreed-16)
mark(go-20, that-17)
nsubj(go-20, Diamond-18)
aux(go-20, should-19)
ccomp(agreed-16, go-20)
prep_to(go-20, Sandwich-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will) (RB not)
      (VP (VB describe)
        (NP
          (NP (DT the) (NNP preparations) (NNP Diamond))
          (VP (VBN made)))))
    (. .)))

nsubj(describe-4, I-1)
aux(describe-4, will-2)
neg(describe-4, not-3)
root(ROOT-0, describe-4)
det(Diamond-7, the-5)
nn(Diamond-7, preparations-6)
dobj(describe-4, Diamond-7)
vmod(Diamond-7, made-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN thought)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN been)
                  (VP (VBG going)
                    (PP (IN on)
                      (NP
                        (NP (DT a) (CD three) (NNS months) (POS '))
                        (NN voyage)))))))))))
    (. .)))

nsubj(thought-4, You-1)
aux(thought-4, would-2)
aux(thought-4, have-3)
root(ROOT-0, thought-4)
nsubj(going-8, he-5)
aux(going-8, had-6)
aux(going-8, been-7)
ccomp(thought-4, going-8)
det(months-12, a-10)
num(months-12, three-11)
poss(voyage-14, months-12)
prep_on(going-8, voyage-14)

(ROOT
  (SINV (CC Nor)
    (MD will)
    (NP (PRP I))
    (VP (VB describe)
      (NP (DT the) (NN journey))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP$ our) (NN business))
          (VP (VBZ is)
            (ADVP (RB now))
            (PP (IN at)
              (NP (DT the) (NN place)))))))
    (. .)))

cc(describe-4, Nor-1)
aux(describe-4, will-2)
nsubj(describe-4, I-3)
root(ROOT-0, describe-4)
det(journey-6, the-5)
dobj(describe-4, journey-6)
mark(is-11, for-8)
poss(business-10, our-9)
nsubj(is-11, business-10)
advcl(describe-4, is-11)
advmod(is-11, now-12)
det(place-15, the-14)
prep_at(is-11, place-15)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD was)
        (VP (VBN met)
          (PP (IN at)
            (NP (DT the) (NN station)))
          (PP (IN by)
            (NP
              (NP (PRP$ his) (NN aunt))
              (, ,)
              (NP (DT a) (JJ cheerful) (JJ middle-aged) (NN woman))
              (, ,)))))
      (CC and)
      (VP (VBD conveyed)
        (PP (IN in)
          (NP (NN safety)))
        (PP (TO to)
          (NP (DT the) (JJ sleepy) (JJ old) (NN town))))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP$ his) (NN father))
          (VP (VBD called)
            (NP (PRP it))))))
    (. .)))

nsubjpass(met-3, He-1)
nsubjpass(conveyed-17, He-1)
auxpass(met-3, was-2)
root(ROOT-0, met-3)
det(station-6, the-5)
prep_at(met-3, station-6)
poss(aunt-9, his-8)
agent(met-3, aunt-9)
det(woman-14, a-11)
amod(woman-14, cheerful-12)
amod(woman-14, middle-aged-13)
appos(aunt-9, woman-14)
conj_and(met-3, conveyed-17)
prep_in(conveyed-17, safety-19)
det(town-24, the-21)
amod(town-24, sleepy-22)
amod(town-24, old-23)
prep_to(conveyed-17, town-24)
mark(called-29, as-26)
poss(father-28, his-27)
nsubj(called-29, father-28)
advcl(met-3, called-29)
dobj(called-29, it-30)

(ROOT
  (S (CC And)
    (NP (RB no))
    (VP (VBP wonder)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (JJ sleepy))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (ADJP (RB nearly) (JJ dead))
                  (PP (IN of)
                    (NP (JJ old) (NN age))))))))))
    (. .)))

cc(wonder-3, And-1)
nsubj(wonder-3, no-2)
root(ROOT-0, wonder-3)
mark(sleepy-7, that-4)
nsubj(sleepy-7, it-5)
cop(sleepy-7, was-6)
ccomp(wonder-3, sleepy-7)
mark(dead-13, for-9)
nsubj(dead-13, it-10)
cop(dead-13, was-11)
advmod(dead-13, nearly-12)
advcl(sleepy-7, dead-13)
amod(age-16, old-15)
prep_of(dead-13, age-16)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD went)
      (NP
        (QP (RB about) (CD staring)))
      (PP (IN with)
        (NP (PRP$ his) (JJ beautiful) (NNS goggle-eyes)))
      (, ,)
      (PP (IN at)
        (NP
          (NP (DT the) (JJ quaint) (JJ old) (NNS streets))
          (, ,)
          (CC and)
          (NP (DT the) (NNS shops))
          (, ,)
          (CC and)
          (NP (DT the) (NNS houses)))))
    (. .)))

nsubj(went-2, Diamond-1)
root(ROOT-0, went-2)
quantmod(staring-4, about-3)
dobj(went-2, staring-4)
poss(goggle-eyes-8, his-6)
amod(goggle-eyes-8, beautiful-7)
prep_with(went-2, goggle-eyes-8)
det(streets-14, the-11)
amod(streets-14, quaint-12)
amod(streets-14, old-13)
prep_at(went-2, streets-14)
det(shops-18, the-17)
prep_at(went-2, shops-18)
conj_and(streets-14, shops-18)
det(houses-22, the-21)
prep_at(went-2, houses-22)
conj_and(streets-14, houses-22)

(ROOT
  (S
    (S
      (NP (NNP Everything))
      (VP (VBD looked)
        (ADJP (RB very) (JJ strange))
        (, ,)
        (ADVP (RB indeed))))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (ADVP (RB here))
          (VP (VBD was)
            (NP
              (NP (DT a) (NN town))
              (VP (VBN abandoned)
                (PP (IN by)
                  (NP (PRP$ its) (NN nurse))))))))
      (, ,)
      (NP
        (NP (DT the) (NN sea))
        (, ,)
        (PP (IN like)
          (NP (DT an) (JJ old) (NN oyster))))
      (VP (VBD left)
        (PP (IN on)
          (NP (DT the) (NN shore)))
        (SBAR (IN till)
          (S
            (NP (PRP it))
            (VP (VBN gaped)
              (PP (IN for)
                (NP (NN weariness))))))))
    (. .)))

nsubj(looked-2, Everything-1)
root(ROOT-0, looked-2)
advmod(strange-4, very-3)
acomp(looked-2, strange-4)
advmod(looked-2, indeed-6)
mark(town-12, for-8)
advmod(town-12, here-9)
cop(town-12, was-10)
det(town-12, a-11)
advcl(left-25, town-12)
vmod(town-12, abandoned-13)
poss(nurse-16, its-15)
agent(abandoned-13, nurse-16)
det(sea-19, the-18)
nsubj(left-25, sea-19)
det(oyster-24, an-22)
amod(oyster-24, old-23)
prep_like(sea-19, oyster-24)
parataxis(looked-2, left-25)
det(shore-28, the-27)
prep_on(left-25, shore-28)
mark(gaped-31, till-29)
nsubj(gaped-31, it-30)
advcl(left-25, gaped-31)
prep_for(gaped-31, weariness-33)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD used)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP (DT the) (CD five) (JJ chief) (NNS seaports))
                    (PP (IN in)
                      (NP (NNP England)))))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP it))
        (VP (VBD began)
          (S
            (VP (TO to)
              (VP (VB hold)
                (S
                  (NP (PRP itself))
                  (ADJP (RB too) (JJ high))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN consequence))
        (VP (VBD was)
          (NP
            (NP (DT the) (NN sea))
            (SBAR
              (S
                (VP
                  (VP (VBD grew)
                    (ADJP
                      (ADJP (JJR less))
                      (CC and)
                      (ADJP (RBR less) (JJ intimate)))
                    (PP (IN with)
                      (NP (PRP it))))
                  (, ,)
                  (VP
                    (ADVP (RB gradually))
                    (VBD drew)
                    (PRT (RP back)))
                  (, ,)
                  (CC and)
                  (VP (VBD kept)
                    (ADVP (RBR more))
                    (PP (TO to)
                      (NP (PRP itself))))))))
          (, ,)
          (SBAR (IN till)
            (S
              (PP (IN at)
                (NP (NN length)))
              (NP (PRP it))
              (VP (VBD left)
                (S
                  (NP (PRP it))
                  (ADJP (JJ high)
                    (CC and)
                    (JJ dry)))))))))
    (: :)
    (S
      (NP (NNP Sandwich))
      (VP (VBD was)
        (NP (DT a) (NN seaport))
        (ADVP (DT no) (RBR more))))
    (: ;)
    (S
      (NP (DT the) (NN sea))
      (VP
        (VP (VBD went)
          (PRT (RP on))
          (PP (IN with)
            (NP
              (NP (PRP$ its) (JJ own) (NNS tide-business))
              (NP (DT a) (JJ long) (NN way))))
          (ADVP (RB off)))
        (, ,)
        (CC and)
        (VP (VBD forgot)
          (NP (PRP it)))))
    (. .)))

nsubj(used-2, It-1)
nsubj(one-5, It-1)
root(ROOT-0, used-2)
aux(one-5, to-3)
cop(one-5, be-4)
xcomp(used-2, one-5)
det(seaports-10, the-7)
num(seaports-10, five-8)
amod(seaports-10, chief-9)
prep_of(one-5, seaports-10)
prep_in(seaports-10, England-12)
nsubj(began-16, it-15)
nsubj(hold-18, it-15)
conj_but(used-2, began-16)
aux(hold-18, to-17)
xcomp(began-16, hold-18)
nsubj(high-21, itself-19)
advmod(high-21, too-20)
xcomp(hold-18, high-21)
det(consequence-25, the-24)
nsubj(sea-28, consequence-25)
cop(sea-28, was-26)
det(sea-28, the-27)
conj_but(used-2, sea-28)
conj_and(began-16, sea-28)
rcmod(sea-28, grew-29)
acomp(grew-29, less-30)
advmod(intimate-33, less-32)
acomp(grew-29, intimate-33)
conj_and(less-30, intimate-33)
prep_with(grew-29, it-35)
advmod(drew-38, gradually-37)
rcmod(sea-28, drew-38)
conj_and(grew-29, drew-38)
prt(drew-38, back-39)
rcmod(sea-28, kept-42)
conj_and(grew-29, kept-42)
advmod(kept-42, more-43)
prep_to(kept-42, itself-45)
mark(left-51, till-47)
prep_at(left-51, length-49)
nsubj(left-51, it-50)
advcl(sea-28, left-51)
nsubj(high-53, it-52)
nsubj(dry-55, it-52)
xcomp(left-51, high-53)
xcomp(left-51, dry-55)
conj_and(high-53, dry-55)
nsubj(seaport-60, Sandwich-57)
cop(seaport-60, was-58)
det(seaport-60, a-59)
conj_but(used-2, seaport-60)
parataxis(used-2, seaport-60)
neg(more-62, no-61)
advmod(seaport-60, more-62)
det(sea-65, the-64)
nsubj(went-66, sea-65)
nsubj(forgot-78, sea-65)
conj_but(used-2, went-66)
parataxis(used-2, went-66)
prt(went-66, on-67)
poss(tide-business-71, its-69)
amod(tide-business-71, own-70)
prep_with(went-66, tide-business-71)
det(way-74, a-72)
amod(way-74, long-73)
dep(tide-business-71, way-74)
advmod(went-66, off-75)
conj_but(used-2, forgot-78)
parataxis(used-2, forgot-78)
conj_and(went-66, forgot-78)
dobj(forgot-78, it-79)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP it))
    (VP (VBD went)
      (S
        (VP (TO to)
          (VP (VB sleep)))))
    (, ,)
    (CC and)
    (VP (VBD had)
      (ADVP (DT no) (RBR more))
      (S
        (VP (TO to)
          (VP (VB do)
            (PP (IN with)
              (NP (NNS ships)))))))
    (. .)))

prep_of(went-4, course-2)
nsubj(went-4, it-3)
nsubj(sleep-6, it-3)
nsubj(had-9, it-3)
nsubj(do-13, it-3)
root(ROOT-0, went-4)
aux(sleep-6, to-5)
xcomp(went-4, sleep-6)
conj_and(went-4, had-9)
neg(more-11, no-10)
advmod(had-9, more-11)
aux(do-13, to-12)
xcomp(had-9, do-13)
prep_with(do-13, ships-15)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ comes)
              (PP (TO to)
                (NP (NNS cities)
                  (CC and)
                  (NNS nations))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNS boys)
          (CC and)
          (NNS girls))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP say)))))
      (, ,) (`` ``)
      (NP (PRP I))
      (VP (MD can)
        (VP (VB do)
          (PP (IN without)
            (NP (PRP$ your) (NN help))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
nsubj(comes-4, what-3)
ccomp('s-2, comes-4)
prep_to(comes-4, cities-6)
prep_to(comes-4, nations-8)
conj_and(cities-6, nations-8)
nsubj(say-16, boys-11)
nsubj(do-21, boys-11)
conj_and(boys-11, girls-13)
nsubj(say-16, girls-13)
nsubj(do-21, girls-13)
rcmod(boys-11, say-16)
nsubj(do-21, I-19)
aux(do-21, can-20)
conj_and('s-2, do-21)
poss(help-24, your-23)
prep_without(do-21, help-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ enough)
        (PP (IN for)
          (NP (PRP myself)))))
    (. .) ('' '')))

nsubj(enough-3, I-1)
cop(enough-3, 'm-2)
root(ROOT-0, enough-3)
prep_for(enough-3, myself-5)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (ADVP (RB soon))
      (VP (VBD made)
        (NP (JJ great) (NNS friends))
        (PP (IN with)
          (NP
            (NP (DT an) (JJ old) (NN woman))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD kept)
                  (NP (DT a) (NN toyshop))
                  (, ,)
                  (SBAR (IN for)
                    (S
                      (NP (PRP$ his) (NN mother))
                      (VP (VBD had)
                        (VP (VBN given)
                          (S
                            (NP (PRP him))
                            (ADJP (JJ twopence)
                              (PP (IN for)
                                (NP (NN pocket-money))))
                            (SBAR (IN before)
                              (S
                                (NP (PRP he))
                                (VP (VBD left))))))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN gone)
            (PP (IN into)
              (NP (PRP$ her) (NN shop)
                (S
                  (VP (TO to)
                    (VP (VB spend)
                      (NP (PRP it))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (VBD got)
          (S
            (VP (VBG talking)
              (PP (TO to)
                (NP (PRP him))))))))
    (. .)))

nsubj(made-3, Diamond-1)
advmod(made-3, soon-2)
root(ROOT-0, made-3)
amod(friends-5, great-4)
dobj(made-3, friends-5)
det(woman-9, an-7)
amod(woman-9, old-8)
prep_with(made-3, woman-9)
nsubj(kept-11, woman-9)
rcmod(woman-9, kept-11)
det(toyshop-13, a-12)
dobj(kept-11, toyshop-13)
mark(given-19, for-15)
poss(mother-17, his-16)
nsubj(given-19, mother-17)
aux(given-19, had-18)
advcl(kept-11, given-19)
nsubj(left-26, him-20)
dep(left-26, twopence-21)
prep_for(twopence-21, pocket-money-23)
mark(left-26, before-24)
nsubj(left-26, he-25)
xcomp(given-19, left-26)
nsubj(gone-31, he-29)
aux(gone-31, had-30)
conj_and(made-3, gone-31)
poss(shop-34, her-33)
prep_into(gone-31, shop-34)
aux(spend-36, to-35)
vmod(shop-34, spend-36)
dobj(spend-36, it-37)
nsubj(got-41, she-40)
conj_and(made-3, got-41)
conj_and(gone-31, got-41)
xcomp(got-41, talking-42)
prep_to(talking-42, him-44)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD looked)
        (ADJP (RB very) (JJ funny))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP she))
            (VP (VBD had) (RB not)
              (VP (VBN got)
                (NP (DT any) (NNS teeth))))))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Diamond))
      (VP
        (VP (VBD liked)
          (NP (PRP her)))
        (, ,)
        (CC and)
        (VP (VBD went)
          (ADVP (RB often))
          (PP (TO to)
            (NP (PRP$ her) (NN shop))))
        (, ,)
        (SBAR (IN although)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (NP (NN nothing)
                (S
                  (VP (TO to)
                    (VP (VB spend)
                      (ADVP (RB there))
                      (SBAR (IN after)
                        (S
                          (NP (DT the) (NN twopence))
                          (VP (VBD was)
                            (VP (VBN gone))))))))))))))
    (. .)))

nsubj(looked-2, She-1)
root(ROOT-0, looked-2)
advmod(funny-4, very-3)
acomp(looked-2, funny-4)
mark(got-10, because-6)
nsubj(got-10, she-7)
aux(got-10, had-8)
neg(got-10, not-9)
advcl(looked-2, got-10)
det(teeth-12, any-11)
dobj(got-10, teeth-12)
nsubj(liked-16, Diamond-15)
nsubj(went-20, Diamond-15)
conj_but(looked-2, liked-16)
dobj(liked-16, her-17)
conj_but(looked-2, went-20)
conj_and(liked-16, went-20)
advmod(went-20, often-21)
poss(shop-24, her-23)
prep_to(went-20, shop-24)
mark(had-28, although-26)
nsubj(had-28, he-27)
conj_but(looked-2, had-28)
advcl(liked-16, had-28)
conj_and(liked-16, had-28)
dobj(had-28, nothing-29)
aux(spend-31, to-30)
vmod(nothing-29, spend-31)
advmod(spend-31, there-32)
mark(gone-37, after-33)
det(twopence-35, the-34)
nsubjpass(gone-37, twopence-35)
auxpass(gone-37, was-36)
advcl(spend-31, gone-37)

(ROOT
  (S
    (NP (CD One) (NN afternoon))
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBG wandering)
          (PP (RB rather)
            (PP
              (ADVP (RB wearily))
              (IN about)
              (NP
                (NP (DT the) (NNS streets))
                (PP (IN for)
                  (NP (DT some) (NN time)))))))))
    (. .)))

num(afternoon-2, One-1)
nsubj(wandering-6, afternoon-2)
nsubj(wandering-6, he-3)
aux(wandering-6, had-4)
aux(wandering-6, been-5)
root(ROOT-0, wandering-6)
advmod(wandering-6, rather-7)
advmod(wandering-6, wearily-8)
det(streets-11, the-10)
prep_about(wandering-6, streets-11)
det(time-14, some-13)
prep_for(streets-11, time-14)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT a) (JJ hot) (NN day))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD felt)
        (ADJP (JJ tired))))
    (. .)))

nsubj(day-5, It-1)
cop(day-5, was-2)
det(day-5, a-3)
amod(day-5, hot-4)
root(ROOT-0, day-5)
nsubj(felt-9, he-8)
conj_and(day-5, felt-9)
acomp(felt-9, tired-10)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP he))
        (VP (VBD passed)
          (NP (DT the) (NN toyshop)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD stepped)
      (PRT (RP in)))
    (. .)))

mark(passed-3, As-1)
nsubj(passed-3, he-2)
advcl(stepped-8, passed-3)
det(toyshop-5, the-4)
dobj(passed-3, toyshop-5)
nsubj(stepped-8, he-7)
root(ROOT-0, stepped-8)
prt(stepped-8, in-9)

(ROOT
  (S
    (S (`` ``)
      (INTJ (VB Please))
      (VP (MD may)))
    (S
      (NP (PRP I))
      (VP (VBP sit)
        (PRT (RP down))
        (PP (IN for)
          (NP
            (NP (DT a) (NN minute))
            (PP (IN on)
              (NP (DT this) (NN box)))))))
    (. ?) ('' '')))

discourse(may-3, Please-2)
root(ROOT-0, may-3)
nsubj(sit-5, I-4)
parataxis(may-3, sit-5)
prt(sit-5, down-6)
det(minute-9, a-8)
prep_for(sit-5, minute-9)
det(box-12, this-11)
prep_on(minute-9, box-12)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (S
        (VP (VBG thinking)
          (SBAR
            (S
              (NP (DT the) (JJ old) (NN woman))
              (VP (VBD was)
                (ADVP (RB somewhere))
                (PP (IN in)
                  (NP (DT the) (NN shop)))))))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
xcomp(said-2, thinking-4)
det(woman-7, the-5)
amod(woman-7, old-6)
nsubj(was-8, woman-7)
ccomp(thinking-4, was-8)
advmod(was-8, somewhere-9)
det(shop-12, the-11)
prep_in(was-8, shop-12)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP
      (VP (VBD got)
        (NP (DT no) (NN answer)))
      (, ,)
      (CC and)
      (VP (VBD sat)
        (PRT (RP down))
        (PP (IN without)
          (NP (CD one)))))
    (. .)))

nsubj(got-3, he-2)
nsubj(sat-8, he-2)
root(ROOT-0, got-3)
neg(answer-5, no-4)
dobj(got-3, answer-5)
conj_and(got-3, sat-8)
prt(sat-8, down-9)
prep_without(sat-8, one-11)

(ROOT
  (S
    (ADVP (RB Around))
    (NP (PRP him))
    (VP (VBD were)
      (NP
        (NP (DT a) (JJ great) (JJ many) (NNS toys))
        (PP (IN of)
          (NP (DT all) (NNS prices))))
      (, ,)
      (PP (IN from)
        (NP
          (NP (DT a) (NN penny))
          (ADVP (RB up)
            (PP (TO to)
              (NP (NNS shillings)))))))
    (. .)))

advmod(toys-7, Around-1)
nsubj(toys-7, him-2)
cop(toys-7, were-3)
det(toys-7, a-4)
amod(toys-7, great-5)
amod(toys-7, many-6)
root(ROOT-0, toys-7)
det(prices-10, all-9)
prep_of(toys-7, prices-10)
det(penny-14, a-13)
prep_from(toys-7, penny-14)
advmod(penny-14, up-15)
prep_to(up-15, shillings-17)

(ROOT
  (S
    (ADVP (DT All)
      (PP (IN at)
        (ADVP (RB once))))
    (NP (PRP he))
    (VP (VBD heard)
      (NP (DT a) (JJ gentle) (NN whirring))
      (PP (RB somewhere) (IN amongst)
        (NP (PRP them))))
    (. .)))

advmod(heard-5, All-1)
prep(All-1, at-2)
pcomp(at-2, once-3)
nsubj(heard-5, he-4)
root(ROOT-0, heard-5)
det(whirring-8, a-6)
amod(whirring-8, gentle-7)
dobj(heard-5, whirring-8)
advmod(heard-5, somewhere-9)
prep_amongst(heard-5, them-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD made)
      (SBAR
        (S
          (NP (PRP him))
          (VP (VBP start)
            (CC and)
            (VBP look)
            (PP (IN behind)
              (NP (PRP him)))))))
    (. .)))

nsubj(made-2, It-1)
root(ROOT-0, made-2)
nsubj(start-4, him-3)
nsubj(look-6, him-3)
ccomp(made-2, start-4)
ccomp(made-2, look-6)
conj_and(start-4, look-6)
prep_behind(start-4, him-8)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP
        (NP (DT the) (NNS sails))
        (PP (IN of)
          (NP
            (NP (DT a) (NN windmill))
            (VP (VBG going)
              (ADVP (RB round)
                (CC and)
                (RB round))
              (ADVP
                (ADVP (RB almost) (RB close))
                (PP (TO to)
                  (NP (PRP$ his) (NN ear)))))))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
det(sails-4, the-3)
nsubj(were-2, sails-4)
det(windmill-7, a-6)
prep_of(sails-4, windmill-7)
vmod(windmill-7, going-8)
advmod(going-8, round-9)
advmod(going-8, round-11)
conj_and(round-9, round-11)
advmod(going-8, almost-12)
poss(ear-16, his-15)
prep_close_to(going-8, ear-16)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD thought)
        (PP (IN at)
          (NP
            (NP (JJ first))
            (SBAR
              (S
                (NP (PRP it))
                (VP (MD must)
                  (VP
                    (VP (VB be)
                      (NP
                        (NP (CD one))
                        (PP (IN of)
                          (NP
                            (NP (DT those) (NNS toys))
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBP are)
                                  (VP (VBG wound)
                                    (PRT (RP up))))))))))
                    (CC and)
                    (VP (VB go)
                      (PP (IN with)
                        (NP (NN clockwork))))))))))))
    (: ;)
    (CC but)
    (S
      (INTJ (UH no))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT a) (JJ common) (NN penny) (NN toy))
        (, ,)
        (PP (IN with)
          (NP
            (NP
              (NP (DT the) (NN windmill))
              (PP (IN at)
                (NP
                  (NP (DT the) (NN end))
                  (PP (IN of)
                    (NP (DT a) (NN whistle))))))
            (, ,)
            (CC and)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP
                  (NP (DT the) (JJ whistle) (NNS blows))
                  (NP (DT the) (NN windmill)))
                (VP (VBZ goes))))))))
    (. .)))

nsubj(thought-2, He-1)
root(ROOT-0, thought-2)
prep_at(thought-2, first-4)
nsubj(one-8, it-5)
nsubj(go-17, it-5)
aux(one-8, must-6)
cop(one-8, be-7)
rcmod(first-4, one-8)
det(toys-11, those-10)
prep_of(one-8, toys-11)
nsubj(wound-14, toys-11)
aux(wound-14, are-13)
rcmod(toys-11, wound-14)
prt(wound-14, up-15)
rcmod(first-4, go-17)
conj_and(one-8, go-17)
prep_with(go-17, clockwork-19)
discourse(toy-29, no-22)
nsubj(toy-29, it-24)
cop(toy-29, was-25)
det(toy-29, a-26)
amod(toy-29, common-27)
nn(toy-29, penny-28)
conj_but(thought-2, toy-29)
det(windmill-33, the-32)
prep_with(toy-29, windmill-33)
det(end-36, the-35)
prep_at(windmill-33, end-36)
det(whistle-39, a-38)
prep_of(end-36, whistle-39)
advmod(goes-48, when-42)
det(blows-45, the-43)
amod(blows-45, whistle-44)
nsubj(goes-48, blows-45)
det(windmill-47, the-46)
dep(blows-45, windmill-47)
prep_with(toy-29, goes-48)
conj_and(windmill-33, goes-48)
rcmod(windmill-33, goes-48)

(ROOT
  (S (CC But)
    (S
      (NP (DT the) (NN wonder))
      (VP (VBD was)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD was)
              (ADVP (RB no)
                (NP (CD one))
                (PP (IN at)
                  (NP (DT the) (JJ whistle) (NN end))))
              (VP (VBG blowing)))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB yet))
      (NP (DT the) (NNS sails))
      (VP (VBD were)
        (VP (VBG turning)
          (ADVP (RB round)
            (CC and)
            (RB round))
          (: --)
          (ADVP (RB now) (RBR faster))
          (, ,)
          (ADVP
            (ADVP (RB now) (RBR slower))
            (, ,) (RB now)
            (ADVP (RBR faster) (RB again))))))
    (. .)))

det(wonder-3, the-2)
nsubj(was-4, wonder-3)
root(ROOT-0, was-4)
mark(blowing-14, that-5)
expl(blowing-14, there-6)
aux(blowing-14, was-7)
advmod(blowing-14, no-8)
pobj(no-8, one-9)
det(end-13, the-11)
amod(end-13, whistle-12)
prep_at(no-8, end-13)
ccomp(was-4, blowing-14)
advmod(turning-21, yet-17)
det(sails-19, the-18)
nsubj(turning-21, sails-19)
aux(turning-21, were-20)
conj_and(was-4, turning-21)
advmod(turning-21, round-22)
advmod(turning-21, round-24)
conj_and(round-22, round-24)
advmod(faster-27, now-26)
advmod(turning-21, faster-27)
advmod(slower-30, now-29)
advmod(turning-21, slower-30)
advmod(slower-30, now-32)
advmod(again-34, faster-33)
advmod(slower-30, again-34)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (MD can)
      (NP (PRP it))
      (VP (VB mean)))
    (. ?) ('' '')))

dobj(mean-5, What-2)
aux(mean-5, can-3)
nsubj(mean-5, it-4)
root(ROOT-0, mean-5)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Diamond))
      (, ,)
      (ADVP (RB aloud)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)
advmod(said-1, aloud-4)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ means)
        (NP (PRP me))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (DT the) (JJS tiniest) (NN voice))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD had)
            (ADVP (RB ever))
            (VP (VBN heard))))))
    (. .)))

nsubj(means-3, It-2)
ccomp(said-7, means-3)
dobj(means-3, me-4)
root(ROOT-0, said-7)
det(voice-10, the-8)
amod(voice-10, tiniest-9)
nsubj(said-7, voice-10)
nsubj(heard-14, he-11)
aux(heard-14, had-12)
advmod(heard-14, ever-13)
rcmod(voice-10, heard-14)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ (VBP are)
      (NP
        (NP (PRP you))
        (, ,)
        (NP (NNP please))))
    (. ?) ('' '')))

root(ROOT-0, Who-2)
cop(Who-2, are-3)
nsubj(Who-2, you-4)
appos(you-4, please-6)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)

(ROOT
  (SINV (`` ``)
    (S
      (FRAG
        (INTJ (UH Well))
        (, ,)
        (ADVP (RB really)))
      (, ,)
      (NP (PRP I))
      (VP (VBP begin)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ ashamed)
                (PP (IN of)
                  (NP (PRP you)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN voice))
    (. .)))

discourse(really-4, Well-2)
dep(begin-7, really-4)
nsubj(begin-7, I-6)
nsubj(ashamed-10, I-6)
ccomp(said-15, begin-7)
aux(ashamed-10, to-8)
cop(ashamed-10, be-9)
xcomp(begin-7, ashamed-10)
prep_of(ashamed-10, you-12)
root(ROOT-0, said-15)
det(voice-17, the-16)
nsubj(said-15, voice-17)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wonder)
      (SBAR
        (WHADVP (WRB how) (RB long))
        (S
          (NP (PRP it))
          (VP (MD will)
            (VP (VB be)
              (SBAR
                (SBAR (IN before)
                  (S
                    (NP (PRP you))
                    (VP (VBP know)
                      (NP (PRP me)))))
                (: ;)
                (CC or)
                (SBAR
                  (WHADVP (WRB how) (RB often))
                  (S
                    (NP (PRP I))
                    (VP (MD might)
                      (VP (VB take)
                        (NP (PRP you))
                        (PP (IN in)
                          (SBAR (IN before)
                            (S
                              (NP (PRP you))
                              (VP (VBD got)
                                (ADJP (JJ sharp) (RB enough)
                                  (S
                                    (VP (TO to)
                                      (VP (VB suspect)
                                        (NP (PRP me))))))))))))))))))))
    (. .)))

nsubj(wonder-3, I-2)
root(ROOT-0, wonder-3)
advmod(long-5, how-4)
advmod(be-8, long-5)
nsubj(be-8, it-6)
aux(be-8, will-7)
ccomp(wonder-3, be-8)
mark(know-11, before-9)
nsubj(know-11, you-10)
advcl(be-8, know-11)
dobj(know-11, me-12)
advmod(often-16, how-15)
advmod(take-19, often-16)
nsubj(take-19, I-17)
aux(take-19, might-18)
advcl(be-8, take-19)
conj_or(know-11, take-19)
dobj(take-19, you-20)
mark(sharp-25, before-22)
nsubj(sharp-25, you-23)
nsubj(suspect-28, you-23)
dep(sharp-25, got-24)
prepc_in(take-19, sharp-25)
advmod(sharp-25, enough-26)
aux(suspect-28, to-27)
xcomp(sharp-25, suspect-28)
dobj(suspect-28, me-29)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (RB as) (JJ bad)
        (PP (IN as)
          (NP
            (NP (DT a) (NN baby))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ does) (RB n't)
                  (VP (VB know)
                    (NP (PRP$ his) (NN mother))
                    (PP (IN in)
                      (NP (DT a) (JJ new) (NN bonnet)))))))))))
    (. .) ('' '')))

nsubj(bad-4, You-1)
cop(bad-4, are-2)
advmod(bad-4, as-3)
root(ROOT-0, bad-4)
det(baby-7, a-6)
prep_as(bad-4, baby-7)
nsubj(know-11, baby-7)
aux(know-11, does-9)
neg(know-11, n't-10)
rcmod(baby-7, know-11)
poss(mother-13, his-12)
dobj(know-11, mother-13)
det(bonnet-17, a-15)
amod(bonnet-17, new-16)
prep_in(know-11, bonnet-17)

(ROOT
  (SINV (`` ``)
    (S
      (FRAG (RB Not)
        (ADVP (RB quite) (RB so))
        (ADJP (JJ bad)
          (PP (IN as)
            (NP (DT that)))))
      (, ,)
      (NP (NNP dear) (NNP North))
      (VP (VBZ Wind)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,) (`` ``)
      (S
        (S
          (X (IN for))
          (NP (PRP I))
          (VP (VBD did) (RB n't)
            (VP (VB see)
              (NP (PRP you))
              (ADVP (IN at) (DT all)))))
        (, ,)
        (CC and)
        (S
          (ADVP (RB indeed))
          (NP (PRP I))
          (VP (VBP do) (RB n't)
            (VP (VB see)
              (NP (PRP you))
              (ADVP (RB yet))
              (, ,)
              (SBAR (IN although)
                (S
                  (NP (PRP I))
                  (VP (VBP recognise)
                    (NP (PRP$ your) (NN voice))))))))))
    (. .)))

dep(Wind-11, Not-2)
advmod(so-4, quite-3)
dep(Not-2, so-4)
dep(Not-2, bad-5)
prep_as(bad-5, that-7)
nn(North-10, dear-9)
nsubj(Wind-11, North-10)
ccomp(said-14, Wind-11)
root(ROOT-0, said-14)
nsubj(said-14, Diamond-15)
dep(see-22, for-18)
nsubj(see-22, I-19)
aux(see-22, did-20)
neg(see-22, n't-21)
dep(Diamond-15, see-22)
dobj(see-22, you-23)
advmod(see-22, at-24)
pobj(at-24, all-25)
advmod(see-32, indeed-28)
nsubj(see-32, I-29)
aux(see-32, do-30)
neg(see-32, n't-31)
dep(Diamond-15, see-32)
conj_and(see-22, see-32)
dobj(see-32, you-33)
advmod(see-32, yet-34)
mark(recognise-38, although-36)
nsubj(recognise-38, I-37)
advcl(see-32, recognise-38)
poss(voice-40, your-39)
dobj(recognise-38, voice-40)

(ROOT
  (S
    (NP (NNP Do))
    (VP (VBP grow)
      (NP (DT a) (JJ little))
      (, ,)
      (S
        (VP (VB please))))
    (. .) ('' '')))

nsubj(grow-2, Do-1)
root(ROOT-0, grow-2)
det(little-4, a-3)
dobj(grow-2, little-4)
dep(grow-2, please-6)

(ROOT
  (S
    (S (`` ``) (RB Not)
      (NP (DT a) (NN hair))
      (VP
        (VP (VBZ 's))
        (: -)
        (NP
          (NP (NN breadth))
          (, ,) ('' '')
          (SBAR
            (S
              (VP (VBD said)
                (NP (DT the) (NN voice))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJS smallest) (NN voice))
          (SBAR
            (WHNP (WDT that))
            (S
              (ADVP (RB ever))
              (VP (VBD spoke)))))))
    (. .)))

neg('s-5, Not-2)
det(hair-4, a-3)
nsubj('s-5, hair-4)
root(ROOT-0, 's-5)
dobj('s-5, breadth-7)
parataxis('s-5, breadth-7)
rcmod(breadth-7, said-10)
det(voice-12, the-11)
dobj(said-10, voice-12)
nsubj(voice-19, it-15)
cop(voice-19, was-16)
det(voice-19, the-17)
amod(voice-19, smallest-18)
conj_and('s-5, voice-19)
nsubj(spoke-22, voice-19)
advmod(spoke-22, ever-21)
rcmod(voice-19, spoke-22)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG doing)
        (ADVP (RB here))))
    (. ?) ('' '')))

dobj(doing-5, What-2)
aux(doing-5, are-3)
nsubj(doing-5, you-4)
root(ROOT-0, doing-5)
advmod(doing-5, here-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBN come)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP$ my) (NN aunt)))))))
    (. .)))

nsubjpass(come-4, I-2)
nsubj(see-6, I-2)
auxpass(come-4, am-3)
root(ROOT-0, come-4)
aux(see-6, to-5)
xcomp(come-4, see-6)
poss(aunt-8, my-7)
dobj(see-6, aunt-8)

(ROOT
  (S (CC But)
    (PRN (, ,)
      (S
        (VP (VB please)))
      (, ,))
    (NP (NNP North))
    (VP (VBP Wind) (, ,)
      (SBARQ
        (WHADVP (WRB why))
        (SQ (VBD did) (RB n't)
          (NP (PRP you))
          (VP (VB come)
            (PRT (RP back))
            (PP (IN for)
              (NP
                (NP (PRP me))
                (PP (IN in)
                  (NP (DT the) (NN church)))))
            (NP (DT that) (NN night))))
        (. ?)))
    ('' '')))

cc(Wind-6, But-1)
parataxis(Wind-6, please-3)
nsubj(Wind-6, North-5)
root(ROOT-0, Wind-6)
advmod(come-12, why-8)
aux(come-12, did-9)
neg(come-12, n't-10)
nsubj(come-12, you-11)
ccomp(Wind-6, come-12)
prt(come-12, back-13)
prep_for(come-12, me-15)
det(church-18, the-17)
prep_in(me-15, church-18)
det(night-20, that-19)
tmod(come-12, night-20)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD did))
    (. .)))

nsubj(did-3, I-2)
root(ROOT-0, did-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD carried)
      (NP (PRP you))
      (ADVP (JJ safe) (NN home)))
    (. .)))

nsubj(carried-2, I-1)
root(ROOT-0, carried-2)
dobj(carried-2, you-3)
advmod(carried-2, safe-4)
dep(safe-4, home-5)

(ROOT
  (S
    (S
      (NP (PDT All) (DT the) (NN time))
      (NP (PRP you))
      (VP (VBD were)
        (VP (VBG dreaming)
          (PP (IN about)
            (NP (DT the) (NN glass) (NNS Apostles))))))
    (, ,)
    (NP (PRP you))
    (VP (VBD were)
      (VP (VBG lying)
        (PP (IN in)
          (NP (PRP$ my) (NNS arms)))))
    (. .) ('' '')))

predet(time-3, All-1)
det(time-3, the-2)
nsubj(dreaming-6, time-3)
nsubj(dreaming-6, you-4)
aux(dreaming-6, were-5)
ccomp(lying-14, dreaming-6)
det(Apostles-10, the-8)
nn(Apostles-10, glass-9)
prep_about(dreaming-6, Apostles-10)
nsubj(lying-14, you-12)
aux(lying-14, were-13)
root(ROOT-0, lying-14)
poss(arms-17, my-16)
prep_in(lying-14, arms-17)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (RB so) (JJ glad))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(glad-5, I-2)
cop(glad-5, 'm-3)
advmod(glad-5, so-4)
ccomp(said-8, glad-5)
root(ROOT-0, said-8)
nsubj(said-8, Diamond-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR (IN that)
          (S
            (VP (MD must)
              (VP (VB be)
                (NP (PRP it))))))))
    (, ,)
    (ADVP (RB only))
    (S
      (NP (PRP I))
      (VP (VBD wanted)
        (S
          (VP (TO to)
            (VP (VB hear)
              (NP (PRP you))
              (ADVP (VB say) (RB so)))))))
    (. .)))

nsubj(thought-3, I-2)
root(ROOT-0, thought-3)
mark(it-7, that-4)
aux(it-7, must-5)
cop(it-7, be-6)
ccomp(thought-3, it-7)
advmod(wanted-11, only-9)
nsubj(wanted-11, I-10)
nsubj(hear-13, I-10)
parataxis(thought-3, wanted-11)
aux(hear-13, to-12)
xcomp(wanted-11, hear-13)
dobj(hear-13, you-14)
dep(so-16, say-15)
advmod(hear-13, so-16)

(ROOT
  (FRAG
    (S
      (VP (VBD Did)
        (S
          (NP (PRP you))
          (VP (VB sink)
            (NP (DT the) (NN ship))
            (, ,)
            (ADVP (RB then))))))
    (. ?) ('' '')))

root(ROOT-0, Did-1)
nsubj(sink-3, you-2)
ccomp(Did-1, sink-3)
det(ship-5, the-4)
dobj(sink-3, ship-5)
advmod(sink-3, then-7)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (CC And)
    (VP (VBZ drown)
      (NP (NN everybody)))
    (. ?) ('' '')))

cc(drown-3, And-2)
root(ROOT-0, drown-3)
dobj(drown-3, everybody-4)

(ROOT
  (FRAG
    (ADVP (`` ``) (RB Not)
      (ADVP (RB quite)))
    (. .)))

dep(quite-3, Not-2)
root(ROOT-0, quite-3)

(ROOT
  (S
    (NP (CD One) (NN boat))
    (VP (VBD got)
      (PRT (RP away))
      (PP (IN with)
        (NP (CD six)
          (CC or)
          (CD seven) (NNS men)))
      (PP (IN in)
        (NP (PRP it))))
    (. .) ('' '')))

num(boat-2, One-1)
nsubj(got-3, boat-2)
root(ROOT-0, got-3)
prt(got-3, away-4)
nn(men-9, six-6)
conj_or(six-6, seven-8)
nn(men-9, seven-8)
prep_with(got-3, men-9)
prep_in(got-3, it-11)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (DT the) (NN boat))
      (VP (VBP swim)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN ship))
            (VP (MD could) (RB n't))))))
    (. ?) ('' '')))

advmod(swim-6, How-2)
aux(swim-6, could-3)
det(boat-5, the-4)
nsubj(swim-6, boat-5)
root(ROOT-0, swim-6)
advmod(could-10, when-7)
det(ship-9, the-8)
nsubj(could-10, ship-9)
advcl(swim-6, could-10)
neg(could-10, n't-11)

(ROOT
  (S (`` ``)
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP I))
    (VP (VBD had)
      (NP
        (NP (DT some) (NN trouble))
        (PP (IN with)
          (NP (PRP it)))))
    (. .)))

prep_of(had-5, course-3)
nsubj(had-5, I-4)
root(ROOT-0, had-5)
det(trouble-7, some-6)
dobj(had-5, trouble-7)
prep_with(trouble-7, it-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP
            (VP (VB contrive)
              (NP (DT a) (NN bit)))
            (, ,)
            (CC and)
            (VP (VB manage)
              (NP
                (NP (DT the) (NNS waves))
                (NP (DT a) (JJ little))))))))
    (. .)))

nsubj(had-2, I-1)
nsubj(contrive-4, I-1)
nsubj(manage-9, I-1)
root(ROOT-0, had-2)
aux(contrive-4, to-3)
xcomp(had-2, contrive-4)
det(bit-6, a-5)
dobj(contrive-4, bit-6)
xcomp(had-2, manage-9)
conj_and(contrive-4, manage-9)
det(waves-11, the-10)
dobj(manage-9, waves-11)
iobj(manage-9, waves-11)
det(little-13, a-12)
dep(waves-11, little-13)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBP 're)
          (ADVP (RB once))
          (VP
            (ADVP (RB thoroughly))
            (VBN waked)
            (PRT (RP up))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT a) (JJ good) (NN deal))
        (PP (IN of)
          (NP
            (NP (NN trouble))
            (PP (IN with)
              (NP (PRP them)))
            (ADVP (RB sometimes))))))
    (. .)))

advmod(waked-6, When-1)
nsubjpass(waked-6, they-2)
auxpass(waked-6, 're-3)
advmod(waked-6, once-4)
advmod(waked-6, thoroughly-5)
advcl(have-10, waked-6)
prt(waked-6, up-7)
nsubj(have-10, I-9)
root(ROOT-0, have-10)
det(deal-13, a-11)
amod(deal-13, good-12)
dobj(have-10, deal-13)
prep_of(deal-13, trouble-15)
prep_with(trouble-15, them-17)
advmod(trouble-15, sometimes-18)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 're)
      (ADJP (JJ apt)
        (S
          (VP (TO to)
            (VP (VB get)
              (ADJP (JJ stupid)
                (PP (IN with)
                  (S
                    (VP (VBG tumbling)
                      (PP (IN over)
                        (NP
                          (NP (DT each) (JJ other) (POS 's))
                          (NNS heads))))))))))))
    (. .)))

nsubj(apt-3, They-1)
nsubj(stupid-6, They-1)
cop(apt-3, 're-2)
root(ROOT-0, apt-3)
aux(stupid-6, to-4)
dep(stupid-6, get-5)
xcomp(apt-3, stupid-6)
prepc_with(stupid-6, tumbling-8)
det(other-11, each-10)
poss(heads-13, other-11)
prep_over(tumbling-8, heads-13)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBP 're)
            (ADJP (RB fairly)
              (PP (IN at)
                (NP (PRP it))))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(fairly-6, when-3)
nsubj(fairly-6, they-4)
cop(fairly-6, 're-5)
advcl('s-2, fairly-6)
prep_at(fairly-6, it-8)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (DT the) (NN boat))
    (VP (VBD got)
      (PP (TO to)
        (NP (DT a) (NN desert) (NN island)))
      (PP (IN before)
        (NP (NN noon)))
      (NP (JJ next) (NN day)))
    (. .) ('' '')))

advmod(got-5, However-1)
det(boat-4, the-3)
nsubj(got-5, boat-4)
root(ROOT-0, got-5)
det(island-9, a-7)
nn(island-9, desert-8)
prep_to(got-5, island-9)
prep_before(got-5, noon-11)
amod(day-13, next-12)
tmod(got-5, day-13)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHNP (WDT what) (NN good))
    (SQ (MD will)
      (VP (VB come)
        (PP (IN of)
          (NP (DT that)))))
    (. ?) ('' '')))

cc(come-6, And-2)
det(good-4, what-3)
nsubj(come-6, good-4)
aux(come-6, will-5)
root(ROOT-0, come-6)
prep_of(come-6, that-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD obeyed)
      (NP (NNS orders)))
    (. .)))

nsubj(obeyed-2, I-1)
root(ROOT-0, obeyed-2)
dobj(obeyed-2, orders-3)

(ROOT
  (S
    (NP (NNP Good))
    (VP (VBP bye))
    (. .) ('' '')))

nsubj(bye-2, Good-1)
root(ROOT-0, bye-2)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (NP
      (NP (NN stay))
      (, ,)
      (NP (NNP North) (NNP Wind))
      (, ,))
    (VP (VBP do)
      (VP (VB stay)))
    (. !) ('' '')))

nsubj(stay-7, stay-1)
nn(Wind-4, North-3)
appos(stay-1, Wind-4)
aux(stay-7, do-6)
root(ROOT-0, stay-7)

(ROOT
  (S
    (NP
      (NP (NNP cried) (NNP Diamond))
      (, ,)
      (VP (VBN dismayed)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (DT the) (NN windmill)))))))
    (VP (VBP get)
      (S
        (ADJP (JJR slower)
          (CC and)
          (JJR slower))))
    (. .)))

nn(Diamond-2, cried-1)
nsubj(get-9, Diamond-2)
vmod(Diamond-2, dismayed-4)
aux(see-6, to-5)
xcomp(dismayed-4, see-6)
det(windmill-8, the-7)
dobj(see-6, windmill-8)
root(ROOT-0, get-9)
acomp(get-9, slower-10)
acomp(get-9, slower-12)
conj_and(slower-10, slower-12)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (, ,)
        (NP (PRP$ my) (JJ dear) (NN child))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
nsubj(What-2, it-4)
poss(child-8, my-6)
amod(child-8, dear-7)
appos(it-4, child-8)

(ROOT
  (S
    (SINV
      (VP (VBD said))
      (NP (NNP North) (NNP Wind)))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN windmill))
      (VP (VBD began)
        (S
          (VP (VBG turning)
            (ADVP (RB again) (RB so) (RB swiftly))
            (SBAR (IN that)
              (S
                (NP (NNP Diamond))
                (VP (MD could)
                  (ADVP (RB scarcely))
                  (VP (VB see)
                    (NP (PRP it))))))))))
    (. .)))

root(ROOT-0, said-1)
nn(Wind-3, North-2)
nsubj(said-1, Wind-3)
det(windmill-7, the-6)
nsubj(began-8, windmill-7)
conj_and(said-1, began-8)
xcomp(began-8, turning-9)
advmod(swiftly-12, again-10)
advmod(swiftly-12, so-11)
advmod(turning-9, swiftly-12)
mark(see-17, that-13)
nsubj(see-17, Diamond-14)
aux(see-17, could-15)
advmod(see-17, scarcely-16)
ccomp(turning-9, see-17)
dobj(see-17, it-18)

(ROOT
  (S (`` ``)
    (X
      (X (WP What))
      (NP (DT a) (JJ big) (NN voice)))
    (NP (PRP you))
    (VP (VBP 've)
      (VP (VBN got)))
    (. !)))

dep(voice-5, What-2)
det(voice-5, a-3)
amod(voice-5, big-4)
dep(got-8, voice-5)
nsubj(got-8, you-6)
aux(got-8, 've-7)
root(ROOT-0, got-8)

(ROOT
  (FRAG (CC and)
    (SBAR
      (WHNP (WP what))
      (S
        (NP
          (NP (DT a) (NN noise))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP do)))))
        (VP (VBP make)
          (PP (IN with)
            (NP (PRP it))))))
    (. ?)))

cc(make-7, and-1)
dobj(make-7, what-2)
det(noise-4, a-3)
nsubj(make-7, noise-4)
nsubj(do-6, you-5)
rcmod(noise-4, do-6)
root(ROOT-0, make-7)
prep_with(make-7, it-9)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP (PRP it))
      (NP (PRP you))
      (VP (VB want)))
    (. ?)))

dobj(want-5, What-1)
cop(want-5, is-2)
nsubj(want-5, it-3)
nsubj(want-5, you-4)
root(ROOT-0, want-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (RB little))
        (S
          (VP (TO to)
            (VP (VB do))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (ADVP (RB little))
      (VP (MD must)
        (VP (VB be)
          (VP (VBN done)))))
    (. .) ('' '')))

nsubj(have-2, I-1)
nsubj(do-5, I-1)
root(ROOT-0, have-2)
advmod(have-2, little-3)
aux(do-5, to-4)
xcomp(have-2, do-5)
nsubjpass(done-12, that-8)
advmod(done-12, little-9)
aux(done-12, must-10)
auxpass(done-12, be-11)
conj_but(have-2, done-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP want)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP (VB take)
            (NP (PRP me))
            (PP (TO to)
              (NP
                (NP (DT the) (NN country))
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN back))
                    (PP (IN of)
                      (NP (DT the) (NN north) (NN wind)))))))))))
    (. .) ('' '')))

nsubj(want-3, I-2)
root(ROOT-0, want-3)
dobj(want-3, you-4)
nsubj(take-6, you-4)
aux(take-6, to-5)
xcomp(want-3, take-6)
dobj(take-6, me-7)
det(country-10, the-9)
prep_to(take-6, country-10)
det(back-13, the-12)
prep_at(country-10, back-13)
det(wind-17, the-15)
nn(wind-17, north-16)
prep_of(back-13, wind-17)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's) (RB not)
        (ADJP (RB so) (JJ easy))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP (JJ North) (NN Wind)))
    (, ,)
    (CC and)
    (VP (VBD was)
      (ADJP (JJ silent)
        (PP (IN for)
          (ADVP (RB so) (RB long))))
      (SBAR (IN that)
        (S
          (NP (NNP Diamond))
          (VP (VBD thought)
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBD was)
                  (VP (VBN gone)
                    (ADVP (RB indeed))))))))))
    (. .)))

nsubj(easy-6, That-2)
cop(easy-6, 's-3)
neg(easy-6, not-4)
advmod(easy-6, so-5)
ccomp(said-9, easy-6)
root(ROOT-0, said-9)
amod(Wind-11, North-10)
dobj(said-9, Wind-11)
cop(silent-15, was-14)
conj_and(said-9, silent-15)
prep(silent-15, for-16)
advmod(long-18, so-17)
pcomp(for-16, long-18)
mark(thought-21, that-19)
nsubj(thought-21, Diamond-20)
ccomp(silent-15, thought-21)
nsubjpass(gone-24, she-22)
auxpass(gone-24, was-23)
ccomp(thought-21, gone-24)
advmod(gone-24, indeed-25)

(ROOT
  (S (CC But)
    (SBAR (IN after)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (ADVP (RB quite))
          (VP (VBN given)
            (NP (PRP her))
            (PRT (RP up))))))
    (, ,)
    (NP (DT the) (NN voice))
    (VP (VBD began)
      (ADVP (RB again)))
    (. .)))

cc(began-12, But-1)
mark(given-6, after-2)
nsubj(given-6, he-3)
aux(given-6, had-4)
advmod(given-6, quite-5)
advcl(began-12, given-6)
dobj(given-6, her-7)
prt(given-6, up-8)
det(voice-11, the-10)
nsubj(began-12, voice-11)
root(ROOT-0, began-12)
advmod(began-12, again-13)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (ADVP (RB almost))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (JJ old) (NNS Herodotus))
          (VP (VBD had)
            (VP (VBN held)
              (NP (PRP$ his) (NN tongue))
              (PP (IN about)
                (NP (PRP it))))))))
    (. .)))

nsubj(wish-4, I-2)
advmod(wish-4, almost-3)
root(ROOT-0, wish-4)
amod(Herodotus-6, old-5)
nsubj(held-8, Herodotus-6)
aux(held-8, had-7)
ccomp(wish-4, held-8)
poss(tongue-10, his-9)
dobj(held-8, tongue-10)
prep_about(held-8, it-12)

(ROOT
  (S
    (ADVP (RB Much))
    (NP (PRP he))
    (VP (VBD knew)
      (PP (IN of)
        (NP (PRP it))))
    (. !) ('' '')))

advmod(knew-3, Much-1)
nsubj(knew-3, he-2)
root(ROOT-0, knew-3)
prep_of(knew-3, it-5)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB wish)
        (NP
          (NP (DT that))
          (, ,)
          (NP (NNP North) (NNP Wind)))))
    (. ?) ('' '')))

advmod(wish-5, Why-2)
aux(wish-5, do-3)
nsubj(wish-5, you-4)
root(ROOT-0, wish-5)
dobj(wish-5, that-6)
nn(Wind-9, North-8)
appos(that-6, Wind-9)

(ROOT
  (S (`` ``)
    (PP (IN Because)
      (NP (RB then)))
    (NP (DT that) (NN clergyman))
    (VP (MD would)
      (ADVP (RB never))
      (VP
        (VP (VB have)
          (VP (VBN heard)
            (PP (IN of)
              (NP (PRP it)))))
        (, ,)
        (CC and)
        (VP (VB set)
          (S
            (NP (PRP you))
            (VP (VBG wanting)
              (S
                (VP (TO to)
                  (VP (VB go)))))))))
    (. .)))

prep(heard-9, Because-2)
pobj(Because-2, then-3)
det(clergyman-5, that-4)
nsubj(heard-9, clergyman-5)
nsubj(set-14, clergyman-5)
aux(heard-9, would-6)
neg(heard-9, never-7)
aux(heard-9, have-8)
root(ROOT-0, heard-9)
prep_of(heard-9, it-11)
conj_and(heard-9, set-14)
nsubj(wanting-16, you-15)
nsubj(go-18, you-15)
dep(set-14, wanting-16)
aux(go-18, to-17)
xcomp(wanting-16, go-18)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (MD shall)
      (VP (VB see)))
    (. .)))

cc(see-4, But-1)
nsubj(see-4, we-2)
aux(see-4, shall-3)
root(ROOT-0, see-4)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD shall)
      (VP (VB see)))
    (. .)))

nsubj(see-3, We-1)
aux(see-3, shall-2)
root(ROOT-0, see-3)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD must)
        (VP (VB go)
          (NP (NN home))
          (ADVP (RB now))
          (, ,)
          (S
            (NP (PRP$ my))
            (ADJP (RB dear))))))
    (, ,) (IN for)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)
        (VP (VB seem)
          (ADVP (RB very) (RB well)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB see)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (MD can)
                (VP (VB be)
                  (VP (VBN done)
                    (PP (IN for)
                      (NP (PRP you)))))))))))
    (. .)))

nsubj(go-3, You-1)
aux(go-3, must-2)
root(ROOT-0, go-3)
dobj(go-3, home-4)
advmod(go-3, now-5)
nsubj(dear-8, my-7)
xcomp(go-3, dear-8)
dep(go-3, for-10)
nsubj(seem-14, you-11)
aux(seem-14, do-12)
neg(seem-14, n't-13)
ccomp(go-3, seem-14)
advmod(well-16, very-15)
advmod(seem-14, well-16)
nsubj(see-21, I-19)
aux(see-21, 'll-20)
conj_and(go-3, see-21)
nsubjpass(done-25, what-22)
aux(done-25, can-23)
auxpass(done-25, be-24)
ccomp(see-21, done-25)
prep_for(done-25, you-27)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP (VB wait)
        (PP (IN for)
          (NP (PRP me)))))
    (. .)))

aux(wait-3, Do-1)
neg(wait-3, n't-2)
root(ROOT-0, wait-3)
prep_for(wait-3, me-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB break)
                (NP
                  (NP (DT a) (JJ few))
                  (PP (IN of)
                    (NP
                      (NP (JJ old) (NNP Goody) (POS 's))
                      (NNS toys))))))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBZ 's)
        (VP (VBG thinking)
          (ADVP (RB too) (RB much))
          (PP (IN of)
            (NP (PRP$ her) (JJ new) (NN stock))))))
    (. .)))

nsubj(got-3, I-1)
nsubj(break-5, I-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
aux(break-5, to-4)
xcomp(got-3, break-5)
det(few-7, a-6)
dobj(break-5, few-7)
amod(Goody-10, old-9)
poss(toys-12, Goody-10)
prep_of(few-7, toys-12)
nsubj(thinking-16, she-14)
aux(thinking-16, 's-15)
parataxis(got-3, thinking-16)
advmod(much-18, too-17)
advmod(thinking-16, much-18)
poss(stock-22, her-20)
amod(stock-22, new-21)
prep_of(thinking-16, stock-22)

(ROOT
  (S
    (NP (CD Two)
      (CC or)
      (CD three))
    (VP (MD will)
      (VP (VB do)))
    (. .)))

nsubj(do-5, Two-1)
conj_or(Two-1, three-3)
nsubj(do-5, three-3)
aux(do-5, will-4)
root(ROOT-0, do-5)

(ROOT
  (FRAG
    (ADVP (RB There))
    (. !)))

root(ROOT-0, There-1)

(ROOT
  (S
    (VP (VB go)
      (ADVP (RB now)))
    (. .) ('' '')))

root(ROOT-0, go-1)
advmod(go-1, now-2)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD rose) (, ,)
      (S
        (UCP
          (ADJP (RB quite) (JJ sorry))
          (, ,)
          (CC and)
          (PP (IN without)
            (NP
              (NP (DT a) (NN word))
              (VP
                (VP (VBN left)
                  (NP (DT the) (NN shop)))
                (, ,)
                (CC and)
                (VP (VBD went)
                  (NP (NN home)))))))))
    (. .)))

nsubj(rose-2, Diamond-1)
root(ROOT-0, rose-2)
advmod(sorry-5, quite-4)
dep(rose-2, sorry-5)
dep(rose-2, without-8)
conj_and(sorry-5, without-8)
det(word-10, a-9)
pobj(without-8, word-10)
dep(word-10, left-11)
det(shop-13, the-12)
dobj(left-11, shop-13)
dep(word-10, went-16)
conj_and(left-11, went-16)
dobj(went-16, home-17)

(ROOT
  (S
    (S
      (NP (PRP It))
      (ADVP (RB soon))
      (VP (VBD appeared)
        (SBAR (IN that)
          (S
            (NP (PRP$ his) (NN mother))
            (VP (VBD had)
              (VP (VBN been)
                (ADJP (JJ right)
                  (PP (IN about)
                    (NP
                      (NP (PRP him))
                      (, ,)
                      (SBAR
                        (WHPP (IN for)
                          (WHNP (WDT that)))
                        (S
                          (NP (JJ same) (NN afternoon))
                          (NP (PRP$ his) (NN head))
                          (VP (VBD began)
                            (S
                              (VP (TO to)
                                (VP (VB ache)
                                  (ADJP (RB very) (JJ much)))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (TO to)
                (NP (NN bed))))))))
    (. .)))

nsubj(appeared-3, It-1)
advmod(appeared-3, soon-2)
root(ROOT-0, appeared-3)
mark(right-9, that-4)
poss(mother-6, his-5)
nsubj(right-9, mother-6)
aux(right-9, had-7)
cop(right-9, been-8)
ccomp(appeared-3, right-9)
prep_about(right-9, him-11)
prep_for(began-19, him-11)
amod(afternoon-16, same-15)
nsubj(began-19, afternoon-16)
nsubj(ache-21, afternoon-16)
poss(head-18, his-17)
nsubj(began-19, head-18)
nsubj(ache-21, head-18)
rcmod(him-11, began-19)
aux(ache-21, to-20)
xcomp(began-19, ache-21)
advmod(much-23, very-22)
acomp(ache-21, much-23)
nsubj(had-27, he-26)
nsubj(go-29, he-26)
conj_and(appeared-3, had-27)
aux(go-29, to-28)
xcomp(had-27, go-29)
prep_to(go-29, bed-31)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD awoke)
      (PP (IN in)
        (NP
          (NP (DT the) (NN middle))
          (PP (IN of)
            (NP (DT the) (NN night))))))
    (. .)))

nsubj(awoke-2, He-1)
root(ROOT-0, awoke-2)
det(middle-5, the-4)
prep_in(awoke-2, middle-5)
det(night-8, the-7)
prep_of(middle-5, night-8)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN lattice) (NN window))
        (PP (IN of)
          (NP (PRP$ his) (NN room))))
      (VP (VBD had)
        (VP (VBN blown)
          (S
            (ADJP (JJ open))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NNS curtains))
        (PP (IN of)
          (NP (PRP$ his) (JJ little) (NN bed))))
      (VP (VBD were)
        (VP (VBG swinging) (IN about)
          (PP (IN in)
            (NP (DT the) (NN wind))))))
    (. .)))

det(window-3, The-1)
nn(window-3, lattice-2)
nsubj(blown-8, window-3)
poss(room-6, his-5)
prep_of(window-3, room-6)
aux(blown-8, had-7)
root(ROOT-0, blown-8)
acomp(blown-8, open-9)
det(curtains-13, the-12)
nsubj(swinging-19, curtains-13)
poss(bed-17, his-15)
amod(bed-17, little-16)
prep_of(curtains-13, bed-17)
aux(swinging-19, were-18)
conj_and(blown-8, swinging-19)
dep(swinging-19, about-20)
det(wind-23, the-22)
prep_in(swinging-19, wind-23)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (DT that))
        (VP (MD should)
          (VP (VB be)
            (ADJP (JJ North))))))
    (VP (VBZ Wind)
      (ADVP (RB now)))
    (. !) ('' '')))

mark(North-6, If-2)
nsubj(North-6, that-3)
aux(North-6, should-4)
cop(North-6, be-5)
csubj(Wind-7, North-6)
root(ROOT-0, Wind-7)
advmod(Wind-7, now-8)

(ROOT
  (S
    (VP (VBD thought)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, thought-1)
dobj(thought-1, Diamond-2)

(ROOT
  (S
    (S (CC But)
      (NP (DT the) (JJ next) (NN moment))
      (NP (PRP he))
      (VP (VBD heard)
        (NP (DT some) (NN one))
        (S
          (VP (VBG closing)
            (NP (DT the) (NN window))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NN aunt))
      (VP (VBD came)
        (PP (TO to)
          (NP (PRP$ his) (NN bedside)))))
    (. .)))

det(moment-4, the-2)
amod(moment-4, next-3)
nsubj(heard-6, moment-4)
nsubj(heard-6, he-5)
root(ROOT-0, heard-6)
det(one-8, some-7)
dobj(heard-6, one-8)
xcomp(heard-6, closing-9)
det(window-11, the-10)
dobj(closing-9, window-11)
poss(aunt-15, his-14)
nsubj(came-16, aunt-15)
conj_and(heard-6, came-16)
poss(bedside-19, his-18)
prep_to(came-16, bedside-19)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD put)
        (NP (PRP$ her) (NN hand))
        (PP (IN on)
          (NP (PRP$ his) (NN face))))
      (, ,)
      (CC and)
      (VP (VBD said) (: --) (`` ``)
        (SBAR
          (SBARQ
            (WHADVP (WRB How))
            (SQ (VBZ 's)
              (NP
                (NP (PRP$ your) (NN head))
                (, ,)
                (NP (NNP dear))))
            (. ?)))
        ('' '')))))

nsubj(put-2, She-1)
nsubj(said-10, She-1)
root(ROOT-0, put-2)
poss(hand-4, her-3)
dobj(put-2, hand-4)
poss(face-7, his-6)
prep_on(put-2, face-7)
conj_and(put-2, said-10)
advmod('s-14, How-13)
dep(said-10, 's-14)
poss(head-16, your-15)
nsubj('s-14, head-16)
appos(head-16, dear-18)

(ROOT
  (S
    (S
      (ADJP (`` ``)
        (ADJP (RBR Better))
        (, ,)
        (ADJP (JJ auntie))))
    (, ,)
    (NP (PRP I))
    (VP (VBP think))
    (. .) ('' '')))

ccomp(think-7, Better-2)
dep(Better-2, auntie-4)
nsubj(think-7, I-6)
root(ROOT-0, think-7)

(ROOT
  (S (`` ``)
    (ADVP (RB Would))
    (NP (PRP you))
    (VP (VBP like)
      (NP (NN something))
      (S
        (VP (TO to)
          (VP (VB drink)))))
    (. ?) ('' '')))

advmod(like-4, Would-2)
nsubj(like-4, you-3)
root(ROOT-0, like-4)
dobj(like-4, something-5)
aux(drink-7, to-6)
vmod(like-4, drink-7)

(ROOT
  (INTJ (`` ``) (UH Oh) (, ,) (RB yes) (. !)))

root(ROOT-0, Oh-2)
dep(Oh-2, yes-4)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (MD should))
      (PRN (, ,)
        (INTJ (VB please))))
    (. .) ('' '')))

nsubj(should-2, I-1)
root(ROOT-0, should-2)
discourse(should-2, please-4)

(ROOT
  (S (IN So)
    (NP (PRP$ his) (NN aunt))
    (VP (VBD gave)
      (NP (PRP him))
      (NP
        (NP (DT some) (NN lemonade))
        (, ,)
        (SBAR (IN for)
          (S
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN been)
                  (VP (VBN used)
                    (PP (TO to)
                      (S
                        (VP (VBG nursing)
                          (NP (JJ sick) (NNS people)))))))))
            (, ,)
            (CC and)
            (S
              (NP (NNP Diamond))
              (VP
                (VP (VBD felt)
                  (ADJP (RB very) (RB much) (JJ refreshed)))
                (, ,)
                (CC and)
                (VP (VBD laid)
                  (NP (PRP$ his) (NN head))
                  (ADVP (RB down) (RB again))
                  (S
                    (VP (TO to)
                      (VP (VB go)
                        (ADJP
                          (ADVP (RB very) (RB fast))
                          (JJ asleep))
                        (, ,)
                        (SBAR (IN as)
                          (S
                            (NP (PRP he))
                            (VP (VBD thought))))))))))))))
    (. .)))

dep(gave-4, So-1)
poss(aunt-3, his-2)
nsubj(gave-4, aunt-3)
root(ROOT-0, gave-4)
iobj(gave-4, him-5)
det(lemonade-7, some-6)
dobj(gave-4, lemonade-7)
mark(used-13, for-9)
nsubjpass(used-13, she-10)
aux(used-13, had-11)
auxpass(used-13, been-12)
dep(lemonade-7, used-13)
prepc_to(used-13, nursing-15)
amod(people-17, sick-16)
dobj(nursing-15, people-17)
nsubj(felt-21, Diamond-20)
nsubj(laid-27, Diamond-20)
dep(lemonade-7, felt-21)
conj_and(used-13, felt-21)
advmod(refreshed-24, very-22)
advmod(refreshed-24, much-23)
acomp(felt-21, refreshed-24)
conj_and(used-13, laid-27)
conj_and(felt-21, laid-27)
poss(head-29, his-28)
dobj(laid-27, head-29)
advmod(again-31, down-30)
advmod(laid-27, again-31)
aux(go-33, to-32)
vmod(laid-27, go-33)
advmod(fast-35, very-34)
advmod(asleep-36, fast-35)
acomp(go-33, asleep-36)
mark(thought-40, as-38)
nsubj(thought-40, he-39)
advcl(go-33, thought-40)

(ROOT
  (S (CC And)
    (ADVP (RB so))
    (NP (PRP he))
    (VP (VBD did) (, ,)
      (CC but)
      (ADVP (RB only))
      (S
        (VP (TO to)
          (VP (VB come)
            (ADJP (RB awake))
            (ADVP (RB again))
            (, ,)
            (SBAR (IN as)
              (S
                (NP
                  (NP (DT a) (JJ fresh) (NN burst))
                  (PP (IN of)
                    (NP (NN wind))))
                (VP (VBD blew)
                  (S
                    (NP (DT the) (NN lattice))
                    (VP (VB open)
                      (NP (DT a) (JJ second) (NN time)))))))))))
    (. .)))

advmod(did-4, so-2)
nsubj(did-4, he-3)
nsubj(come-9, he-3)
root(ROOT-0, did-4)
advmod(did-4, only-7)
conj_but(did-4, only-7)
aux(come-9, to-8)
conj_but(did-4, come-9)
xcomp(did-4, come-9)
acomp(come-9, awake-10)
advmod(come-9, again-11)
mark(blew-19, as-13)
det(burst-16, a-14)
amod(burst-16, fresh-15)
nsubj(blew-19, burst-16)
prep_of(burst-16, wind-18)
advcl(come-9, blew-19)
det(lattice-21, the-20)
nsubj(open-22, lattice-21)
ccomp(blew-19, open-22)
det(time-25, a-23)
amod(time-25, second-24)
dobj(open-22, time-25)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ same) (NN moment))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD found)
            (NP (PRP himself))
            (PP (IN in)
              (NP
                (NP (DT a) (NN cloud))
                (PP (IN of)
                  (NP
                    (NP (NNP North) (NNP Wind) (POS 's))
                    (NN hair)))))))))
    (, ,)
    (PP (IN with)
      (NP (PRP$ her) (JJ beautiful) (NN face)))
    (, ,)
    (VP (VBD set)
      (PP (IN in)
        (NP (PRP it)))
      (PP (IN like)
        (NP (DT a) (NN moon)))
      (, ,)
      (S
        (VP (VBG bending)
          (PRT (RP over))
          (NP (PRP him)))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, same-2)
nsubj(set-21, moment-3)
nsubj(found-5, he-4)
rcmod(moment-3, found-5)
dobj(found-5, himself-6)
det(cloud-9, a-8)
prep_in(found-5, cloud-9)
nn(Wind-12, North-11)
poss(hair-14, Wind-12)
prep_of(cloud-9, hair-14)
poss(face-19, her-17)
amod(face-19, beautiful-18)
prep_with(set-21, face-19)
root(ROOT-0, set-21)
prep_in(set-21, it-23)
det(moon-26, a-25)
prep_like(set-21, moon-26)
xcomp(set-21, bending-28)
prt(bending-28, over-29)
dobj(bending-28, him-30)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Quick))
    (, ,)
    (NP (NNP Diamond))
    (. !) ('' '')))

root(ROOT-0, Quick-2)
dep(Quick-2, Diamond-4)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN found)
        (NP (PDT such) (DT a) (NN chance))))
    (. !) ('' '')))

nsubj(found-4, I-2)
aux(found-4, have-3)
root(ROOT-0, found-4)
predet(chance-7, such-5)
det(chance-7, a-6)
dobj(found-4, chance-7)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (ADVP (RB well))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

cc('m-4, But-2)
nsubj('m-4, I-3)
ccomp(said-9, 'm-4)
neg('m-4, not-5)
advmod('m-4, well-6)
root(ROOT-0, said-9)
nsubj(said-9, Diamond-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP (DT that))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB be)
          (ADJP (JJR better))
          (PP (IN for)
            (NP (DT a) (JJ little) (JJ fresh) (NN air))))))
    (. .)))

nsubj(know-3, I-2)
root(ROOT-0, know-3)
dobj(know-3, that-4)
nsubj(better-10, you-7)
aux(better-10, will-8)
cop(better-10, be-9)
conj_but(know-3, better-10)
det(air-15, a-12)
amod(air-15, little-13)
amod(air-15, fresh-14)
prep_for(better-10, air-15)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD shall)
      (VP (VB have)
        (NP
          (NP (RB plenty))
          (PP (IN of)
            (NP (DT that))))))
    (. .) ('' '')))

nsubj(have-3, You-1)
aux(have-3, shall-2)
root(ROOT-0, have-3)
dobj(have-3, plenty-4)
prep_of(plenty-4, that-6)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP want)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB go) (, ,)
            (ADVP (RB then))))))
    (. ?) ('' '')))

nsubj(want-3, You-2)
root(ROOT-0, want-3)
dobj(want-3, me-4)
nsubj(go-6, me-4)
aux(go-6, to-5)
xcomp(want-3, go-6)
advmod(go-6, then-8)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP do))
    (. .)))

discourse(do-5, Yes-2)
nsubj(do-5, I-4)
root(ROOT-0, do-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD wo) (RB n't)
      (VP (VB hurt)
        (NP (PRP you))))
    (. .) ('' '')))

nsubj(hurt-4, It-1)
aux(hurt-4, wo-2)
neg(hurt-4, n't-3)
root(ROOT-0, hurt-4)
dobj(hurt-4, you-5)

(ROOT
  (S
    (S
      (S (`` ``)
        (VP (VB Very)
          (ADVP (RB well)))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (NNP Diamond))))
    (: ;)
    (CC and)
    (S
      (S
        (VP (VBG getting)
          (PRT (RP out))
          (PP (IN of)
            (NP (DT the) (NNS bed-clothes)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD jumped)
        (PP (IN into)
          (NP
            (NP (NNP North) (NNP Wind) (POS 's))
            (NNS arms)))))
    (. .)))

csubj(said-6, Very-2)
advmod(Very-2, well-3)
root(ROOT-0, said-6)
dobj(said-6, Diamond-7)
vmod(jumped-17, getting-10)
det(bed-clothes-14, the-13)
prep_out_of(getting-10, bed-clothes-14)
nsubj(jumped-17, he-16)
conj_and(said-6, jumped-17)
nn(Wind-20, North-19)
poss(arms-22, Wind-20)
prep_into(jumped-17, arms-22)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP We))
      (VP (MD must)
        (VP (VB make)
          (NP (NN haste))
          (SBAR (IN before)
            (S
              (NP (PRP$ your) (NN aunt))
              (VP (VBZ comes)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP she))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP she))
        (VP
          (VP (VBD glided)
            (PRT (RP out))
            (PP (IN of)
              (NP (DT the) (JJ open) (NN lattice))))
          (CC and)
          (VP (VBD left)
            (S
              (NP (PRP it))
              (ADJP (JJ swinging)))))))
    (. .)))

nsubj(make-4, We-2)
aux(make-4, must-3)
ccomp(said-12, make-4)
dobj(make-4, haste-5)
mark(comes-9, before-6)
poss(aunt-8, your-7)
nsubj(comes-9, aunt-8)
advcl(make-4, comes-9)
root(ROOT-0, said-12)
nsubj(said-12, she-13)
mark(glided-17, as-15)
nsubj(glided-17, she-16)
nsubj(left-24, she-16)
dep(said-12, glided-17)
det(lattice-22, the-20)
amod(lattice-22, open-21)
prep_out_of(glided-17, lattice-22)
dep(said-12, left-24)
conj_and(glided-17, left-24)
nsubj(swinging-26, it-25)
xcomp(left-24, swinging-26)

(ROOT
  (S
    (S
      (NP (DT The) (NN moment) (NNP Diamond))
      (VP (VBD felt)
        (S
          (NP (PRP$ her) (NNS arms))
          (VP (VB fold)
            (PRT (RP around))
            (NP (PRP him))))))
    (NP (PRP he))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB feel)
            (ADVP (RBR better))))))
    (. .)))

det(Diamond-3, The-1)
nn(Diamond-3, moment-2)
nsubj(felt-4, Diamond-3)
dep(began-11, felt-4)
poss(arms-6, her-5)
nsubj(fold-7, arms-6)
ccomp(felt-4, fold-7)
prt(fold-7, around-8)
dobj(fold-7, him-9)
nsubj(began-11, he-10)
nsubj(feel-13, he-10)
root(ROOT-0, began-11)
aux(feel-13, to-12)
xcomp(began-11, feel-13)
advmod(feel-13, better-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ moonless) (NN night))
        (, ,)
        (CC and)
        (ADJP (RB very) (JJ dark)))
      (, ,)
      (PP (IN with)
        (NP
          (NP (NNS glimpses))
          (PP (IN of)
            (NP
              (NP (NNS stars))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (DT the) (NNS clouds))
                  (VP (VBD parted)))))))))
    (. .)))

nsubj(night-5, It-1)
nsubj(dark-9, It-1)
cop(night-5, was-2)
det(night-5, a-3)
amod(night-5, moonless-4)
root(ROOT-0, night-5)
advmod(dark-9, very-8)
conj_and(night-5, dark-9)
prep_with(night-5, glimpses-12)
prep_of(glimpses-12, stars-14)
tmod(parted-18, stars-14)
advmod(parted-18, when-15)
det(clouds-17, the-16)
nsubj(parted-18, clouds-17)
rcmod(stars-14, parted-18)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD used)
        (S
          (VP (TO to)
            (VP (VB dash)
              (NP (DT the) (NNS waves))
              (PP (IN about)
                (NP (RB here)))))))
      (PRN (, ,) ('' '')
        (SINV
          (VP (VBD said))
          (NP (NNP North) (NNP Wind)))
        (, ,) (`` ``))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (NNS cows)
            (CC and)
            (NN sheep))
          (VP (VBP are)
            (VP (VBG feeding)
              (ADVP (RB now)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD shall)
        (ADVP (RB soon))
        (VP (VB get)
          (PP (TO to)
            (NP (PRP them))))))
    (. .)))

nsubj(used-3, I-2)
nsubj(dash-5, I-2)
root(ROOT-0, used-3)
aux(dash-5, to-4)
xcomp(used-3, dash-5)
det(waves-7, the-6)
dobj(dash-5, waves-7)
prep(dash-5, about-8)
pobj(about-8, here-9)
parataxis(used-3, said-12)
nn(Wind-14, North-13)
nsubj(said-12, Wind-14)
advmod(feeding-22, where-17)
nsubj(feeding-22, cows-18)
conj_and(cows-18, sheep-20)
nsubj(feeding-22, sheep-20)
aux(feeding-22, are-21)
advcl(used-3, feeding-22)
advmod(feeding-22, now-23)
nsubj(get-29, we-26)
aux(get-29, shall-27)
advmod(get-29, soon-28)
conj_but(used-3, get-29)
prep_to(get-29, them-31)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP they))
    (VP (VBP are))
    (. .) ('' '')))

advmod(are-3, There-1)
nsubj(are-3, they-2)
root(ROOT-0, are-3)

(ROOT
  (S (CC And)
    (NP
      (NP (NNP Diamond))
      (, ,)
      (VP (VBG looking)
        (PRT (RP down)))
      (, ,))
    (VP (VBD saw)
      (NP
        (NP (DT the) (JJ white) (NN glimmer))
        (PP (IN of)
          (S
            (VP (VBG breaking)
              (NP (NN water))
              (ADVP (RB far)
                (PP (IN below)
                  (NP (PRP him)))))))))
    (. .)))

cc(saw-7, And-1)
nsubj(saw-7, Diamond-2)
vmod(Diamond-2, looking-4)
prt(looking-4, down-5)
root(ROOT-0, saw-7)
det(glimmer-10, the-8)
amod(glimmer-10, white-9)
dobj(saw-7, glimmer-10)
prepc_of(glimmer-10, breaking-12)
dobj(breaking-12, water-13)
advmod(breaking-12, far-14)
prep_below(far-14, him-16)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (, ,)
    (S
      (NP (NNP Diamond))
      (PRN (, ,) ('' '')
        (SINV
          (VP (VBD said))
          (NP (NNP North) (NNP Wind)))
        (, ,) (`` ``))
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB very) (JJ difficult)
          (PP (IN for)
            (NP (PRP me))))
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (PRP you))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN back))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN north) (NN wind))
                      (, ,)
                      (SBAR
                        (WHPP (IN for)
                          (WHNP (WDT that) (NN country)))
                        (S
                          (VP (VBZ lies)
                            (PP (IN in)
                              (NP (DT the) (JJ very) (NN north))))
                          (NP (PRP itself)))))))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN of)
        (NP (NN course)))
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB blow)
          (NP (NNS northwards)))))
    (. .) ('' '')))

nsubj(see-3, You-2)
root(ROOT-0, see-3)
nsubj(difficult-16, Diamond-5)
nsubj(get-20, Diamond-5)
parataxis(difficult-16, said-8)
nn(Wind-10, North-9)
nsubj(said-8, Wind-10)
nsubj(difficult-16, it-13)
nsubj(get-20, it-13)
cop(difficult-16, is-14)
advmod(difficult-16, very-15)
ccomp(see-3, difficult-16)
conj_and(see-3, difficult-16)
prep_for(difficult-16, me-18)
aux(get-20, to-19)
xcomp(difficult-16, get-20)
dobj(get-20, you-21)
det(back-24, the-23)
prep_to(get-20, back-24)
det(wind-28, the-26)
nn(wind-28, north-27)
prep_of(back-24, wind-28)
det(country-32, wind-28)
prep_for(lies-33, country-32)
rcmod(wind-28, lies-33)
det(north-37, the-35)
amod(north-37, very-36)
prep_in(lies-33, north-37)
dep(lies-33, itself-38)
prep_of(blow-46, course-42)
nsubj(blow-46, I-43)
aux(blow-46, ca-44)
neg(blow-46, n't-45)
conj_and(see-3, blow-46)
dobj(blow-46, northwards-47)

(ROOT
  (S (`` ``)
    (VP (VB Why) (RB not))
    (. ?) ('' '')))

root(ROOT-0, Why-2)
neg(Why-2, not-3)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP
      (ADVP (RB little))
      (VBZ silly))
    (. !) ('' '')))

nsubj(silly-4, You-2)
advmod(silly-4, little-3)
root(ROOT-0, silly-4)

(ROOT
  (S
    (VP (VBD said)
      (NP (JJ North) (NN Wind)))
    (. .)))

root(ROOT-0, said-1)
amod(Wind-3, North-2)
dobj(said-1, Wind-3)

(ROOT
  (X (`` ``)
    (NP
      (SQ (VBP Do) (RB n't)
        (NP (PRP you))
        (VP (VB see)
          (SBAR (IN that)
            (S
              (SBAR (IN if)
                (S
                  (NP (PRP I))
                  (VP (VBD were)
                    (S
                      (VP (TO to)
                        (VP (VB blow)
                          (NP (NNS northwards))))))))
              (NP (PRP I))
              (VP (MD should)
                (VP (VB be)
                  (ADJP (JJ South))))))))
      (VP (VB Wind)))
    (, ,)
    (NP
      (NP (NNP and))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ is)
            (ADJP (RB as) (JJ much))
            (SBAR (IN as)
              (S
                (VP (TO to)
                  (VP (VB say)
                    (SBAR (IN that)
                      (S
                        (NP (CD one) (NN person))
                        (VP (MD could)
                          (VP (VB be)
                            (NP (CD two) (NNS persons))))))))))))))
    (. ?) ('' '')))

aux(see-5, Do-2)
neg(see-5, n't-3)
nsubj(see-5, you-4)
dep(Wind-17, see-5)
mark(South-16, that-6)
mark(were-9, if-7)
nsubj(were-9, I-8)
nsubj(blow-11, I-8)
advcl(South-16, were-9)
aux(blow-11, to-10)
xcomp(were-9, blow-11)
dobj(blow-11, northwards-12)
nsubj(South-16, I-13)
aux(South-16, should-14)
cop(South-16, be-15)
ccomp(see-5, South-16)
dep(and-19, Wind-17)
root(ROOT-0, and-19)
nsubj(much-23, and-19)
nsubj(say-26, and-19)
cop(much-23, is-21)
advmod(much-23, as-22)
rcmod(and-19, much-23)
mark(say-26, as-24)
aux(say-26, to-25)
advcl(much-23, say-26)
xcomp(much-23, say-26)
mark(persons-33, that-27)
num(person-29, one-28)
nsubj(persons-33, person-29)
aux(persons-33, could-30)
cop(persons-33, be-31)
num(persons-33, two-32)
ccomp(say-26, persons-33)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (PRP you))
      (ADVP (RB ever))
      (VP (VB get)
        (NP (NN home))
        (ADVP (IN at) (DT all))
        (, ,)
        (ADVP (RB then))))
    (. ?) ('' '')))

cc(get-7, But-2)
advmod(get-7, how-3)
aux(get-7, can-4)
nsubj(get-7, you-5)
advmod(get-7, ever-6)
root(ROOT-0, get-7)
dobj(get-7, home-8)
advmod(get-7, at-9)
pobj(at-9, all-10)
advmod(get-7, then-12)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (RB quite) (JJ right))
      (: --)
      (SBAR (IN that)
        (S
          (VP (VBZ is)
            (NP (PRP$ my) (NN home))
            (, ,)
            (SBAR (IN though)
              (S
                (NP (PRP I))
                (ADVP (RB never))
                (VP (VBP get)
                  (ADVP (RB farther))
                  (PP (IN than)
                    (NP (DT the) (JJ outer) (NN door))))))))))
    (. .)))

nsubj(right-5, You-2)
cop(right-5, are-3)
advmod(right-5, quite-4)
root(ROOT-0, right-5)
mark(home-10, that-7)
cop(home-10, is-8)
poss(home-10, my-9)
ccomp(right-5, home-10)
parataxis(right-5, home-10)
mark(get-15, though-12)
nsubj(get-15, I-13)
neg(get-15, never-14)
advcl(home-10, get-15)
advmod(get-15, farther-16)
det(door-20, the-18)
amod(door-20, outer-19)
prep_than(get-15, door-20)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP sit)
        (PP (IN on)
          (NP (DT the) (NN doorstep))))
      (, ,)
      (CC and)
      (VP (VBP hear)
        (NP (DT the) (NNS voices))
        (ADVP (RB inside))))
    (. .)))

nsubj(sit-2, I-1)
nsubj(hear-8, I-1)
root(ROOT-0, sit-2)
det(doorstep-5, the-4)
prep_on(sit-2, doorstep-5)
conj_and(sit-2, hear-8)
det(voices-10, the-9)
dobj(hear-8, voices-10)
advmod(hear-8, inside-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (NP (NN nobody))
      (ADVP (RB there))
      (, ,)
      (ADJP (JJ Diamond)))
    (. .) ('' '')))

nsubj(Diamond-6, I-1)
cop(Diamond-6, am-2)
dep(Diamond-6, nobody-3)
advmod(Diamond-6, there-4)
root(ROOT-0, Diamond-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB very) (JJ sorry)))
    (. .) ('' '')))

nsubj(sorry-5, I-2)
cop(sorry-5, 'm-3)
advmod(sorry-5, very-4)
root(ROOT-0, sorry-5)

(ROOT
  (INTJ (`` ``) (UH Why) (. ?) ('' '')))

root(ROOT-0, Why-2)

(ROOT
  (S (`` ``)
    (NP (DT That) (PRP you))
    (VP (MD should)
      (VP (VB be)
        (NP (NN nobody))))
    (. .) ('' '')))

det(you-3, That-2)
nsubj(nobody-6, you-3)
aux(nobody-6, should-4)
cop(nobody-6, be-5)
root(ROOT-0, nobody-6)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB mind)
        (NP (PRP it))))
    (. .)))

discourse(mind-7, Oh-2)
nsubj(mind-7, I-4)
aux(mind-7, do-5)
neg(mind-7, n't-6)
root(ROOT-0, mind-7)
dobj(mind-7, it-8)

(ROOT
  (NP
    (NP (NNP Dear))
    (NP (JJ little) (NN man))
    (. !)))

root(ROOT-0, Dear-1)
amod(man-3, little-2)
dep(Dear-1, man-3)

(ROOT
  (S
    (NP (PRP you))
    (VP (MD will)
      (VP (VB be)
        (ADJP (RB very) (JJ glad)
          (SBAR
            (S
              (NP (DT some) (NN day))
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN nobody)
                    (NP (PRP yourself))))))))))
    (. .)))

nsubj(glad-5, you-1)
aux(glad-5, will-2)
cop(glad-5, be-3)
advmod(glad-5, very-4)
root(ROOT-0, glad-5)
det(day-7, some-6)
nsubjpass(nobody-10, day-7)
aux(nobody-10, to-8)
auxpass(nobody-10, be-9)
ccomp(glad-5, nobody-10)
dobj(nobody-10, yourself-11)

(ROOT
  (S
    (S
      (S (CC But)
        (NP (PRP you))
        (VP (MD ca) (RB n't)
          (VP (VB understand)
            (NP (DT that))
            (ADVP (RB now)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP you))
        (VP (VBD had)
          (ADVP (RBR better) (RB not))
          (VP (VB try)))))
    (: ;)
    (S
      (SBAR (IN for) (IN if)
        (S
          (NP (PRP you))
          (VP (VBP do))))
      (, ,)
      (NP (PRP you))
      (VP (MD will)
        (VP (VB be)
          (ADJP (JJ certain)
            (S
              (VP (TO to)
                (VP (VB go)
                  (S
                    (VP
                      (VP (VBG fancying)
                        (NP (DT some)
                          (ADJP (JJ egregious))
                          (NN nonsense)))
                      (, ,)
                      (CC and)
                      (VP (VBG making)
                        (S
                          (NP (PRP yourself))
                          (ADJP (JJ miserable)
                            (PP (IN about)
                              (NP (PRP it)))))))))))))))
    (. .) ('' '')))

nsubj(understand-5, you-2)
aux(understand-5, ca-3)
neg(understand-5, n't-4)
root(ROOT-0, understand-5)
dobj(understand-5, that-6)
advmod(understand-5, now-7)
nsubj(try-14, you-10)
aux(try-14, had-11)
advmod(not-13, better-12)
neg(try-14, not-13)
conj_and(understand-5, try-14)
mark(do-19, for-16)
mark(do-19, if-17)
nsubj(do-19, you-18)
advcl(certain-24, do-19)
nsubj(certain-24, you-21)
nsubj(go-26, you-21)
aux(certain-24, will-22)
cop(certain-24, be-23)
parataxis(understand-5, certain-24)
aux(go-26, to-25)
xcomp(certain-24, go-26)
ccomp(go-26, fancying-27)
det(nonsense-30, some-28)
amod(nonsense-30, egregious-29)
dobj(fancying-27, nonsense-30)
ccomp(go-26, making-33)
conj_and(fancying-27, making-33)
nsubj(miserable-35, yourself-34)
xcomp(making-33, miserable-35)
prep_about(miserable-35, it-37)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP I))
      (VP (MD wo) (RB n't)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

advmod(wo-4, Then-2)
nsubj(wo-4, I-3)
ccomp(said-8, wo-4)
neg(wo-4, n't-5)
root(ROOT-0, said-8)
nsubj(said-8, Diamond-9)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT a) (JJ good) (NN boy)))
    (. .)))

expl('s-3, There-2)
root(ROOT-0, 's-3)
det(boy-6, a-4)
amod(boy-6, good-5)
nsubj('s-3, boy-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will) (RB all)
      (VP (VB come)
        (PP (IN in)
          (NP (JJ good) (NN time)))))
    (. .) ('' '')))

nsubj(come-4, It-1)
aux(come-4, will-2)
advmod(come-4, all-3)
root(ROOT-0, come-4)
amod(time-7, good-6)
prep_in(come-4, time-7)

(ROOT
  (S (`` ``)
    (CC But)
    (S
      (NP (PRP you))
      (VP (VBP have) (RB n't)
        (VP (VBN told)
          (NP (PRP me))
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP you))
              (VP (VBP get)
                (PP (TO to)
                  (NP (DT the) (NN doorstep)))))))))
    (, ,)
    (S
      (NP (PRP you))
      (VP (VBP know)))
    (. .) ('' '')))

cc(told-6, But-2)
nsubj(told-6, you-3)
aux(told-6, have-4)
neg(told-6, n't-5)
root(ROOT-0, told-6)
dobj(told-6, me-7)
advmod(get-10, how-8)
nsubj(get-10, you-9)
dep(told-6, get-10)
det(doorstep-13, the-12)
prep_to(get-10, doorstep-13)
nsubj(know-16, you-15)
parataxis(told-6, know-16)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB easy) (JJ enough)
        (PP (IN for)
          (NP (PRP me)))))
    (. .)))

nsubj(enough-5, It-2)
cop(enough-5, is-3)
advmod(enough-5, easy-4)
root(ROOT-0, enough-5)
prep_for(enough-5, me-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (RB only))
        (S
          (VP (TO to)
            (VP (VB consent)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP (NN nobody))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB there))
      (NP (PRP I))
      (VP (VBP am)))
    (. .)))

nsubj(have-2, I-1)
nsubj(consent-5, I-1)
nsubj(nobody-8, I-1)
root(ROOT-0, have-2)
advmod(have-2, only-3)
aux(consent-5, to-4)
xcomp(have-2, consent-5)
aux(nobody-8, to-6)
cop(nobody-8, be-7)
xcomp(consent-5, nobody-8)
advmod(am-13, there-11)
nsubj(am-13, I-12)
conj_and(have-2, am-13)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP draw)
        (PP (IN into)
          (NP (PRP myself)))))
    (CC and)
    (S
      (ADVP (RB there))
      (NP (PRP I))
      (VP (VBP am)
        (PP (IN on)
          (NP (DT the) (NN doorstep)))))
    (. .)))

nsubj(draw-2, I-1)
root(ROOT-0, draw-2)
prep_into(draw-2, myself-4)
advmod(am-8, there-6)
nsubj(am-8, I-7)
conj_and(draw-2, am-8)
det(doorstep-11, the-10)
prep_on(am-8, doorstep-11)

(ROOT
  (S
    (S (CC But)
      (NP (PRP you))
      (VP (MD can)
        (ADVP (RB easily))
        (VP (VB see))))
    (, ,)
    (CC or)
    (S
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP (JJR less) (NN sense))
          (SBAR (IN than)
            (S
              (NP (PRP I))
              (VP (VBP think))))
          (, ,)
          (SBAR (IN that)
            (S
              (NP
                (S
                  (VP (TO to)
                    (VP (VB drag)
                      (NP (PRP you)))))
                (, ,)
                (RRC
                  (NP
                    (ADJP
                      (NP (PRP you))
                      (JJ heavy))
                    (NN thing))
                  (, ,)
                  (ADVP (IN along)
                    (PP (IN with)
                      (NP (PRP me)))))
                (, ,))
              (VP (MD would)
                (VP (VB take)
                  (NP (NNS centuries))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (MD could) (RB not)
          (VP (VB give)
            (NP (DT the) (NN time))
            (PP (TO to)
              (NP (PRP it)))))))
    (. .) ('' '')))

nsubj(see-5, you-2)
aux(see-5, can-3)
advmod(see-5, easily-4)
root(ROOT-0, see-5)
nsubj(have-9, you-8)
conj_or(see-5, have-9)
amod(sense-11, less-10)
dobj(have-9, sense-11)
mark(think-14, than-12)
nsubj(think-14, I-13)
advcl(have-9, think-14)
mark(take-30, that-16)
aux(drag-18, to-17)
nsubj(take-30, drag-18)
dobj(drag-18, you-19)
npadvmod(heavy-22, you-21)
amod(thing-23, heavy-22)
rcmod(drag-18, thing-23)
prep_along_with(thing-23, me-27)
aux(take-30, would-29)
ccomp(have-9, take-30)
dobj(take-30, centuries-31)
nsubj(give-37, I-34)
aux(give-37, could-35)
neg(give-37, not-36)
conj_or(see-5, give-37)
conj_and(have-9, give-37)
det(time-39, the-38)
dobj(give-37, time-39)
prep_to(give-37, it-41)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB so) (JJ sorry)))
    (. !) ('' '')))

discourse(sorry-7, Oh-2)
nsubj(sorry-7, I-4)
cop(sorry-7, 'm-5)
advmod(sorry-7, so-6)
root(ROOT-0, sorry-7)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)

(ROOT
  (X (`` ``)
    (X
      (X (WP What))
      (PP (IN for)
        (NP (RB now))))
    (, ,)
    (X (SYM pet))
    (. ?) ('' '')))

dep(for-3, What-2)
dep(pet-6, for-3)
pobj(for-3, now-4)
root(ROOT-0, pet-6)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB so) (JJ heavy)
        (PP (IN for)
          (NP (PRP you)))))
    (. .)))

nsubj(heavy-6, That-2)
nsubj(heavy-6, I-3)
cop(heavy-6, 'm-4)
advmod(heavy-6, so-5)
root(ROOT-0, heavy-6)
prep_for(heavy-6, you-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB be)
          (ADJP
            (ADJP (JJR lighter))
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (MD could))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (NP (WRB how)))))
    (. .) ('' '')))

nsubj(lighter-4, I-1)
aux(lighter-4, would-2)
cop(lighter-4, be-3)
root(ROOT-0, lighter-4)
mark(could-7, if-5)
nsubj(could-7, I-6)
ccomp(lighter-4, could-7)
nsubj(know-13, I-10)
aux(know-13, do-11)
neg(know-13, n't-12)
conj_but(lighter-4, know-13)
dobj(know-13, how-14)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBZ silly)
      (NP (NN darling)))
    (. !)))

nsubj(silly-3, You-2)
root(ROOT-0, silly-3)
dobj(silly-3, darling-4)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP I))
    (VP (MD could)
      (VP (VB toss)
        (NP (PRP you))
        (PP
          (NP
            (QP (DT a) (CD hundred))
            (NNS miles))
          (IN from)
          (NP (PRP me)))
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBD liked))))))
    (. .)))

discourse(toss-5, Why-1)
nsubj(toss-5, I-3)
aux(toss-5, could-4)
root(ROOT-0, toss-5)
dobj(toss-5, you-6)
quantmod(hundred-8, a-7)
num(miles-9, hundred-8)
npadvmod(toss-5, miles-9)
prep_from(toss-5, me-11)
mark(liked-14, if-12)
nsubj(liked-14, I-13)
advcl(toss-5, liked-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB only))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBP am)
            (VP (VBG going)
              (NP (NN home))
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (MD shall)
                    (VP (VB find)
                      (S
                        (NP (PRP you))
                        (ADJP (JJ heavy))))))))))))
    (. .) ('' '')))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
advmod(is-2, only-3)
advmod(going-7, when-4)
nsubj(going-7, I-5)
aux(going-7, am-6)
advcl(is-2, going-7)
dobj(going-7, home-8)
mark(find-12, that-9)
nsubj(find-12, I-10)
aux(find-12, shall-11)
ccomp(going-7, find-12)
nsubj(heavy-14, you-13)
xcomp(find-12, heavy-14)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG going)
        (NP (NN home))
        (PP (IN with)
          (NP (PRP me)))))
    (. ?) ('' '')))

advmod(going-5, Then-2)
nsubj(going-5, you-3)
aux(going-5, are-4)
root(ROOT-0, going-5)
dobj(going-5, home-6)
prep_with(going-5, me-8)

(ROOT
  (PP (`` ``) (IN Of)
    (NP (NN course))
    (. .)))

root(ROOT-0, Of-2)
pobj(Of-2, course-3)

(ROOT
  (FRAG
    (S
      (VP (VBD Did)
        (S
          (NP (PRP I))
          (RB not)
          (VP (VB come)
            (S
              (VP (TO to)
                (VP (VB fetch)
                  (NP (PRP you))
                  (ADVP (RB just))
                  (PP (IN for)
                    (NP (DT that))))))))))
    (. ?) ('' '')))

root(ROOT-0, Did-1)
nsubj(come-4, I-2)
nsubj(fetch-6, I-2)
neg(come-4, not-3)
ccomp(Did-1, come-4)
aux(fetch-6, to-5)
xcomp(come-4, fetch-6)
dobj(fetch-6, you-7)
advmod(fetch-6, just-8)
prep_for(fetch-6, that-10)

(ROOT
  (S (`` ``)
    (CC But)
    (S
      (NP (PDT all) (DT this) (NN time))
      (NP (PRP you))
      (VP (MD must)
        (VP (VB be)
          (VP (VBG going)
            (NP (NNS southwards))))))
    (. .) ('' '')))

cc(going-9, But-2)
predet(time-5, all-3)
det(time-5, this-4)
nsubj(going-9, time-5)
nsubj(going-9, you-6)
aux(going-9, must-7)
aux(going-9, be-8)
root(ROOT-0, going-9)
dobj(going-9, southwards-10)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP I))
    (VP (VBP am))
    (. .) ('' '')))

prep_of(am-4, course-2)
nsubj(am-4, I-3)
root(ROOT-0, am-4)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB be)
        (VP (VBG taking)
          (SBAR
            (S
              (NP (PRP me))
              (VP (VBZ northwards))))
          (, ,)
          (ADVP (RB then)))))
    (. ?) ('' '')))

advmod(taking-6, How-2)
aux(taking-6, can-3)
nsubj(taking-6, you-4)
aux(taking-6, be-5)
root(ROOT-0, taking-6)
nsubj(northwards-8, me-7)
ccomp(taking-6, northwards-8)
advmod(taking-6, then-10)

(ROOT
  (NP (`` ``) (DT A) (JJ very) (JJ sensible) (NN question) (. .)))

det(question-5, A-2)
amod(question-5, very-3)
amod(question-5, sensible-4)
root(ROOT-0, question-5)

(ROOT
  (S (CC But)
    (NP (PRP you))
    (VP (MD shall)
      (VP (VB see)))
    (. .)))

cc(see-4, But-1)
nsubj(see-4, you-2)
aux(see-4, shall-3)
root(ROOT-0, see-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB get)
          (ADJP (JJ rid))
          (PP (IN of)
            (NP
              (NP (DT a) (JJ few))
              (PP (IN of)
                (NP (DT these) (NNS clouds))))))))
    (: --)
    (S
      (ADVP (RB only))
      (NP (PRP they))
      (VP (VBP do)
        (VP (VB come)
          (PRT (RP up))
          (ADVP (RB so) (RB fast)))))
    (. !)))

nsubj(rid-4, I-1)
aux(rid-4, will-2)
dep(rid-4, get-3)
root(ROOT-0, rid-4)
det(few-7, a-6)
prep_of(rid-4, few-7)
det(clouds-10, these-9)
prep_of(few-7, clouds-10)
advmod(come-15, only-12)
nsubj(come-15, they-13)
aux(come-15, do-14)
parataxis(rid-4, come-15)
prt(come-15, up-16)
advmod(fast-18, so-17)
advmod(come-15, fast-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (PP (IN like)
        (S
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB blow)
                  (S
                    (NP (DT a) (NN brook))
                    (ADJP (JJ dry))))))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
prepc_like('s-2, trying-4)
aux(blow-6, to-5)
xcomp(trying-4, blow-6)
det(brook-8, a-7)
nsubj(dry-9, brook-8)
xcomp(blow-6, dry-9)

(ROOT
  (FRAG
    (ADVP (RB There))
    (. !)))

root(ROOT-0, There-1)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB see)
        (ADVP (RB now))))
    (. ?) ('' '')))

dobj(see-4, What-1)
aux(see-4, do-2)
nsubj(see-4, you-3)
root(ROOT-0, see-4)
advmod(see-4, now-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP see)
            (NP (DT a) (JJ little) (NN boat))
            (, ,)
            (ADVP
              (ADVP (RB away) (RB there))
              (, ,) (RB down)
              (ADVP (RB below)))))))
    (. .) ('' '')))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(see-5, I-4)
ccomp(think-3, see-5)
det(boat-8, a-6)
amod(boat-8, little-7)
dobj(see-5, boat-8)
advmod(there-11, away-10)
advmod(see-5, there-11)
advmod(there-11, down-13)
advmod(there-11, below-14)

(ROOT
  (FRAG (`` ``)
    (NP (DT A) (JJ little) (NN boat))
    (, ,)
    (NP (NNP indeed))
    (. !)))

det(boat-4, A-2)
amod(boat-4, little-3)
root(ROOT-0, boat-4)
dep(boat-4, indeed-6)

(ROOT
  (INTJ (UH Well) (. !)))

root(ROOT-0, Well-1)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN yacht))
          (PP (IN of)
            (NP (CD two) (CD hundred) (NNS tons))))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN captain))
        (PP (IN of)
          (NP (PRP it))))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN friend))
          (PP (IN of)
            (NP (NN mine))))))
    (: ;)
    (SBAR (IN for)
      (S
        (NP (PRP he))
        (VP
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN man))
              (PP (IN of)
                (NP (JJ good) (NN sense)))))
          (, ,)
          (CC and)
          (VP (MD can)
            (VP (VB sail)
              (NP (PRP$ his) (NN craft))
              (ADVP (RB well)))))))
    (. .)))

nsubj(yacht-4, She-1)
cop(yacht-4, 's-2)
det(yacht-4, a-3)
root(ROOT-0, yacht-4)
num(tons-8, two-6)
num(tons-8, hundred-7)
prep_of(yacht-4, tons-8)
det(captain-12, the-11)
nsubj(friend-17, captain-12)
prep_of(captain-12, it-14)
cop(friend-17, is-15)
det(friend-17, a-16)
conj_and(yacht-4, friend-17)
prep_of(friend-17, mine-19)
mark(man-25, for-21)
nsubj(man-25, he-22)
nsubj(sail-32, he-22)
cop(man-25, is-23)
det(man-25, a-24)
conj_and(yacht-4, man-25)
amod(sense-28, good-27)
prep_of(man-25, sense-28)
aux(sail-32, can-31)
conj_and(yacht-4, sail-32)
conj_and(man-25, sail-32)
poss(craft-34, his-33)
dobj(sail-32, craft-34)
advmod(sail-32, well-35)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN helped)
        (NP (PRP him))
        (NP (JJ many) (DT a) (NN time))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (ADVP (RB little))
            (VP (VBD thought)
              (NP (PRP it)))))))
    (. .)))

nsubj(helped-3, I-1)
aux(helped-3, 've-2)
root(ROOT-0, helped-3)
iobj(helped-3, him-4)
amod(time-7, many-5)
det(time-7, a-6)
dobj(helped-3, time-7)
advmod(thought-11, when-8)
nsubj(thought-11, he-9)
advmod(thought-11, little-10)
advcl(helped-3, thought-11)
dobj(thought-11, it-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN heard)
        (S
          (NP (PRP him))
          (VP (VBG grumbling)
            (PP (IN at)
              (NP (PRP me)))))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBG doing)
                (NP
                  (NP (DT the) (RB very) (JJS best))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (MD could)
                        (PP (IN for)
                          (NP (PRP him)))))))))))))
    (. .)))

nsubj(heard-3, I-1)
aux(heard-3, 've-2)
root(ROOT-0, heard-3)
nsubj(grumbling-5, him-4)
dep(heard-3, grumbling-5)
prep_at(grumbling-5, me-7)
advmod(doing-12, when-9)
nsubj(doing-12, I-10)
aux(doing-12, was-11)
advcl(heard-3, doing-12)
det(best-15, the-13)
advmod(best-15, very-14)
dobj(doing-12, best-15)
nsubj(could-17, I-16)
rcmod(best-15, could-17)
prep_for(could-17, him-19)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN carried)
        (S
          (NP (PRP him))
          (VP (VB eighty)
            (NP (NNS miles))
            (NP (DT a) (NN day))
            (, ,)
            (ADVP (RB again)
              (CC and)
              (RB again))
            (, ,)
            (ADVP (RB right) (RB north))))))
    (. .) ('' '')))

discourse(carried-5, Why-1)
nsubj(carried-5, I-3)
aux(carried-5, 've-4)
root(ROOT-0, carried-5)
nsubj(eighty-7, him-6)
ccomp(carried-5, eighty-7)
dobj(eighty-7, miles-8)
det(day-10, a-9)
tmod(eighty-7, day-10)
advmod(eighty-7, again-12)
advmod(eighty-7, again-14)
conj_and(again-12, again-14)
advmod(north-17, right-16)
advmod(eighty-7, north-17)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (MD must)
        (VP (VB have)
          (VP (VBD dodged)
            (PP (IN for)
              (NP (DT that)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBG watching)
                  (NP (DT the) (NNS vessels)))))
            (, ,)
            (CC and)
            (VP (VBD had)
              (VP (VBN seen)
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (VBD went)
                      (NP (JJ other) (NNS ways))
                      (SBAR (IN than)
                        (S
                          (NP (DT the) (NN wind))
                          (VP (VBD blew)))))))))))))
    (. .)))

nsubj(dodged-5, He-2)
aux(dodged-5, must-3)
aux(dodged-5, have-4)
ccomp(said-10, dodged-5)
prep_for(dodged-5, that-7)
root(ROOT-0, said-10)
nsubj(said-10, Diamond-11)
nsubj(watching-16, Diamond-11)
nsubj(seen-22, Diamond-11)
aux(watching-16, had-14)
aux(watching-16, been-15)
rcmod(Diamond-11, watching-16)
det(vessels-18, the-17)
dobj(watching-16, vessels-18)
aux(seen-22, had-21)
rcmod(Diamond-11, seen-22)
conj_and(watching-16, seen-22)
mark(went-25, that-23)
nsubj(went-25, they-24)
ccomp(seen-22, went-25)
amod(ways-27, other-26)
dobj(went-25, ways-27)
mark(blew-31, than-28)
det(wind-30, the-29)
nsubj(blew-31, wind-30)
advcl(went-25, blew-31)

(ROOT
  (S (`` ``)
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP he))
    (VP (MD must))
    (. .)))

prep_of(must-5, course-3)
nsubj(must-5, he-4)
root(ROOT-0, must-5)

(ROOT
  (SBARQ (CC But)
    (SQ (VBP do) (RB n't)
      (NP (PRP you))
      (VP (VB see) (, ,)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP
                (NP (DT the) (JJS best))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (MD could)
                      (VP (VB do)))))))))))
    (. ?)))

cc(see-5, But-1)
aux(see-5, do-2)
neg(see-5, n't-3)
nsubj(see-5, you-4)
root(ROOT-0, see-5)
nsubj(best-10, it-7)
cop(best-10, was-8)
det(best-10, the-9)
ccomp(see-5, best-10)
nsubj(do-13, I-11)
aux(do-13, could-12)
rcmod(best-10, do-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could) (RB n't)
      (VP (VB be)
        (NP (JJ South) (NN Wind))))
    (. .)))

nsubj(Wind-6, I-1)
aux(Wind-6, could-2)
neg(Wind-6, n't-3)
cop(Wind-6, be-4)
amod(Wind-6, South-5)
root(ROOT-0, Wind-6)

(ROOT
  (S (CC And)
    (ADVP (RB besides))
    (NP (PRP it))
    (VP (VBD gave)
      (NP (PRP him))
      (NP
        (NP (DT a) (NN share))
        (PP (IN in)
          (NP (DT the) (NN business)))))
    (. .)))

cc(gave-4, And-1)
advmod(gave-4, besides-2)
nsubj(gave-4, it-3)
root(ROOT-0, gave-4)
iobj(gave-4, him-5)
det(share-7, a-6)
dobj(gave-4, share-7)
det(business-10, the-9)
prep_in(share-7, business-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (ADJP (JJ good)
        (PP (IN at)
          (NP
            (NP (DT all))
            (PRN (: --)
              (NP
                (NP (NN mind))
                (NP (DT that))
                (, ,)
                (NP (NNP Diamond)))
              (: --)))))
      (S
        (VP (TO to)
          (VP
            (VP (VB do)
              (NP (NN everything))
              (PP (IN for)
                (NP
                  (NP (DT those))
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP love)))))))
            (, ,)
            (CC and)
            (RB not)
            (VP (VB give)
              (NP (PRP them))
              (NP
                (NP (DT a) (NN share))
                (PP (IN in)
                  (NP
                    (NP (DT the))
                    (VP (VBG doing))))))))))
    (. .)))

nsubj(good-4, It-1)
nsubj(do-14, It-1)
nsubj(give-23, It-1)
cop(good-4, is-2)
neg(good-4, not-3)
root(ROOT-0, good-4)
prep_at(good-4, all-6)
dep(all-6, mind-8)
dep(mind-8, that-9)
appos(mind-8, Diamond-11)
aux(do-14, to-13)
xcomp(good-4, do-14)
dobj(do-14, everything-15)
prep_for(do-14, those-17)
nsubj(love-19, you-18)
rcmod(those-17, love-19)
neg(give-23, not-22)
xcomp(good-4, give-23)
conj_and(do-14, give-23)
iobj(give-23, them-24)
det(share-26, a-25)
dobj(give-23, share-26)
prep_in(share-26, the-28)
vmod(the-28, doing-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP (NN kind)))
    (. .)))

nsubj(kind-4, It-1)
cop(kind-4, 's-2)
neg(kind-4, not-3)
root(ROOT-0, kind-4)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (VP (VBG making)
        (ADVP (RB too) (RB much))
        (PP (IN of)
          (NP
            (NP (PRP yourself))
            (, ,)
            (NP (PRP$ my) (NN child))))))
    (. .)))

nsubj(making-3, It-1)
aux(making-3, 's-2)
root(ROOT-0, making-3)
advmod(much-5, too-4)
advmod(making-3, much-5)
prep_of(making-3, yourself-7)
poss(child-10, my-9)
appos(yourself-7, child-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (VP (VBN been)
            (NP (JJ South) (NN Wind))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (MD would)
        (ADVP (RB only))
        (VP (VB have)
          (VP (VBN smoked)
            (NP
              (NP (PRP$ his) (NN pipe))
              (NP (DT all) (NN day))))))
      (, ,)
      (CC and)
      (VP (VBD made)
        (S
          (NP (PRP himself))
          (ADJP (JJ stupid)))))
    (. .) ('' '')))

mark(Wind-6, If-1)
nsubj(Wind-6, I-2)
aux(Wind-6, had-3)
cop(Wind-6, been-4)
amod(Wind-6, South-5)
advcl(smoked-12, Wind-6)
nsubj(smoked-12, he-8)
nsubj(made-19, he-8)
aux(smoked-12, would-9)
advmod(smoked-12, only-10)
aux(smoked-12, have-11)
root(ROOT-0, smoked-12)
poss(pipe-14, his-13)
dobj(smoked-12, pipe-14)
det(day-16, all-15)
dep(pipe-14, day-16)
conj_and(smoked-12, made-19)
nsubj(stupid-21, himself-20)
xcomp(made-19, stupid-21)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB how))
    (SQ (MD could)
      (NP (PRP he))
      (VP
        (VP (VB be)
          (NP
            (NP (DT a) (NN man))
            (PP (IN of)
              (NP (NN sense)))))
        (CC and)
        (VP (VB grumble)
          (PP (IN at)
            (NP (PRP you)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP you))
              (VP (VBD were)
                (VP (VBG doing)
                  (NP (PRP$ your) (JJS best))
                  (PP (IN for)
                    (NP (PRP him))))))))))
    (. ?) ('' '')))

advmod(man-8, how-3)
aux(man-8, could-4)
nsubj(man-8, he-5)
nsubj(grumble-12, he-5)
cop(man-8, be-6)
det(man-8, a-7)
root(ROOT-0, man-8)
prep_of(man-8, sense-10)
conj_and(man-8, grumble-12)
prep_at(grumble-12, you-14)
advmod(doing-18, when-15)
nsubj(doing-18, you-16)
aux(doing-18, were-17)
advcl(grumble-12, doing-18)
poss(best-20, your-19)
dobj(doing-18, best-20)
prep_for(doing-18, him-22)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB make)
          (NP (NNS allowances)))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (NNP North) (NNP Wind)))
      (, ,) (`` ``))
    (CC or)
    (S
      (NP (PRP you))
      (VP (MD will)
        (ADVP (RB never))
        (VP (VB do)
          (NP (NN justice))
          (PP (TO to)
            (NP (NN anybody))))))
    (. .)))

nsubj(make-3, you-1)
aux(make-3, must-2)
root(ROOT-0, make-3)
dobj(make-3, allowances-4)
dep(make-3, said-7)
nn(Wind-9, North-8)
nsubj(said-7, Wind-9)
nsubj(do-16, you-13)
aux(do-16, will-14)
neg(do-16, never-15)
conj_or(make-3, do-16)
dobj(do-16, justice-17)
prep_to(do-16, anybody-19)

(ROOT
  (S (: --)
    (S
      (NP (PRP You))
      (VP (VBP do)
        (S
          (VP (VB understand)
            (PRN (, ,)
              (ADVP (RB then))
              (, ,))
            (SBAR (IN that)
              (S
                (NP (DT a) (NN captain))
                (VP (MD may)
                  (VP (VB sail)
                    (NP (NN north))))))))))
    (: --) ('' '')
    (S (`` ``)
      (S
        (PP (IN In)
          (NP
            (NP (NN spite))
            (PP (IN of)
              (NP (DT a) (NN north)))))
        (VP (VBP wind) (: --)
          (NP (UH yes))))
      (, ,) ('' '')
      (NP (NN supplemented))
      (VP (VBZ Diamond)))
    (. .)))

nsubj(do-3, You-2)
root(ROOT-0, do-3)
ccomp(do-3, understand-4)
dep(understand-4, then-6)
mark(sail-12, that-8)
det(captain-10, a-9)
nsubj(sail-12, captain-10)
aux(sail-12, may-11)
ccomp(understand-4, sail-12)
dobj(sail-12, north-13)
det(north-21, a-20)
prep_in_spite_of(wind-22, north-21)
ccomp(Diamond-28, wind-22)
dobj(wind-22, yes-24)
parataxis(wind-22, yes-24)
nsubj(Diamond-28, supplemented-27)
parataxis(do-3, Diamond-28)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Now))
      (, ,)
      (NP (PRP I))
      (VP (VBP do)
        (VP (VB think)
          (S
            (NP (PRP you))
            (VP (MD must)
              (VP (VB be)
                (ADJP (JJ stupid)))))
          (, ,)
          (NP (PRP$ my) (NN dear)))))
    ('' '')
    (VP (VBD said))
    (NP (NNP North) (NNP Wind))
    (. .)))

advmod(think-6, Now-2)
nsubj(think-6, I-4)
aux(think-6, do-5)
ccomp(said-15, think-6)
nsubj(stupid-10, you-7)
aux(stupid-10, must-8)
cop(stupid-10, be-9)
ccomp(think-6, stupid-10)
poss(dear-13, my-12)
dobj(think-6, dear-13)
root(ROOT-0, said-15)
nn(Wind-17, North-16)
nsubj(said-15, Wind-17)

(ROOT
  (S
    (VP (`` ``) (VB Suppose)
      (S
        (NP (DT the) (NN north) (NN wind))
        (VP (VBD did) (RB not)
          (VP (VB blow)
            (SBAR
              (SBARQ
                (WHADVP (WRB where))
                (SQ (MD would)
                  (NP (PRP he))
                  (VP (VB be)
                    (ADVP (RB then))))
                (. ?) ('' '')))))))))

root(ROOT-0, Suppose-2)
det(wind-5, the-3)
nn(wind-5, north-4)
nsubj(blow-8, wind-5)
aux(blow-8, did-6)
neg(blow-8, not-7)
ccomp(Suppose-2, blow-8)
advmod(be-12, where-9)
aux(be-12, would-10)
nsubj(be-12, he-11)
dep(blow-8, be-12)
advmod(be-12, then-13)

(ROOT
  (S (`` ``)
    (ADVP (WRB Why))
    (NP (RB then) (DT the) (JJ south) (NN wind))
    (VP (MD would)
      (VP (VB carry)
        (NP (PRP him))))
    (. .) ('' '')))

advmod(carry-8, Why-2)
advmod(wind-6, then-3)
det(wind-6, the-4)
amod(wind-6, south-5)
nsubj(carry-8, wind-6)
aux(carry-8, would-7)
root(ROOT-0, carry-8)
dobj(carry-8, him-9)

(ROOT
  (S (`` ``)
    (CC So)
    (NP (PRP you))
    (VP (VBP think)
      (SBAR (IN that)
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN north) (NN wind))
          (VP (VBZ stops)
            (NP (DT the) (JJ south) (NN wind) (NNS blows))))))
    (. .)))

cc(think-4, So-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
mark(stops-10, that-5)
advmod(stops-10, when-6)
det(wind-9, the-7)
nn(wind-9, north-8)
nsubj(stops-10, wind-9)
ccomp(think-4, stops-10)
det(blows-14, the-11)
amod(blows-14, south-12)
nn(blows-14, wind-13)
dobj(stops-10, blows-14)

(ROOT
  (NP (NN Nonsense) (. .)))

root(ROOT-0, Nonsense-1)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD did) (RB n't)
          (VP (VB blow)))))
    (, ,)
    (NP (DT the) (NN captain))
    (VP (MD could) (RB n't)
      (VP (VB sail)
        (NP (PRP$ his) (JJ eighty) (NNS miles))
        (NP (DT a) (NN day))))
    (. .)))

mark(blow-5, If-1)
nsubj(blow-5, I-2)
aux(blow-5, did-3)
neg(blow-5, n't-4)
advcl(sail-11, blow-5)
det(captain-8, the-7)
nsubj(sail-11, captain-8)
aux(sail-11, could-9)
neg(sail-11, n't-10)
root(ROOT-0, sail-11)
poss(miles-14, his-12)
amod(miles-14, eighty-13)
dobj(sail-11, miles-14)
det(day-16, a-15)
tmod(sail-11, day-16)

(ROOT
  (S
    (S
      (ADVP (DT No) (NN doubt))
      (NP (NNP South) (NNP Wind))
      (VP (MD would)
        (VP (VB carry)
          (NP (PRP him))
          (ADVP (RBR faster)))))
    (, ,)
    (CC but)
    (S
      (NP (NNP South) (NNP Wind))
      (VP (VBZ is)
        (VP (VBG sitting)
          (PRT (RP on))
          (NP (PRP$ her) (NN doorstep))
          (UCP
            (NP (RB then))
            (, ,)
            (CC and)
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBD stopped)
                  (SBAR
                    (S
                      (NP (EX there))
                      (VP (MD would)
                        (VP (VB be)
                          (NP (DT a) (JJ dead) (NN calm)))))))))))))
    (. .)))

neg(doubt-2, No-1)
advmod(carry-6, doubt-2)
nn(Wind-4, South-3)
nsubj(carry-6, Wind-4)
aux(carry-6, would-5)
root(ROOT-0, carry-6)
dobj(carry-6, him-7)
advmod(carry-6, faster-8)
nn(Wind-12, South-11)
nsubj(sitting-14, Wind-12)
aux(sitting-14, is-13)
conj_but(carry-6, sitting-14)
prt(sitting-14, on-15)
poss(doorstep-17, her-16)
dep(sitting-14, doorstep-17)
dobj(sitting-14, then-18)
mark(stopped-23, if-21)
nsubj(stopped-23, I-22)
dobj(sitting-14, stopped-23)
conj_and(then-18, stopped-23)
expl(calm-29, there-24)
aux(calm-29, would-25)
cop(calm-29, be-26)
det(calm-29, a-27)
amod(calm-29, dead-28)
ccomp(stopped-23, calm-29)

(ROOT
  (S (IN So)
    (S
      (NP (PRP you))
      (VP (VBP are) (RB all)
        (ADJP (JJ wrong)
          (S
            (VP (TO to)
              (VP (VB say)
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (MD can)
                      (VP (VB sail)
                        (ADVP (RB north)
                          (PP (IN in)
                            (NP
                              (NP (NN spite))
                              (PP (IN of)
                                (NP (PRP me))))))))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBZ sails)
        (ADVP (RB north)
          (PP (IN by)
            (NP (PRP$ my) (NN help))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ my) (NN help))
      (ADJP (RB alone)))
    (. .)))

dep(wrong-5, So-1)
nsubj(wrong-5, you-2)
nsubj(say-7, you-2)
cop(wrong-5, are-3)
advmod(wrong-5, all-4)
root(ROOT-0, wrong-5)
aux(say-7, to-6)
xcomp(wrong-5, say-7)
nsubj(sail-10, he-8)
aux(sail-10, can-9)
ccomp(say-7, sail-10)
advmod(sail-10, north-11)
prep_in_spite_of(north-11, me-15)
nsubj(sails-18, he-17)
conj_and(wrong-5, sails-18)
advmod(sails-18, north-19)
poss(help-22, my-21)
prep_by(north-19, help-22)
poss(help-26, my-25)
dep(alone-27, help-26)
conj_and(wrong-5, alone-27)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see)
      (NP
        (NP (DT that))
        (, ,)
        (NP (NNP Diamond))))
    (. ?) ('' '')))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
dobj(see-2, that-3)
appos(that-3, Diamond-5)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (, ,)
      (S
        (NP (NNP North))
        (ADJP (JJ Wind))))
    (. .)))

discourse(do-5, Yes-2)
nsubj(do-5, I-4)
root(ROOT-0, do-5)
nsubj(Wind-8, North-7)
xcomp(do-5, Wind-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ stupid))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ stupid))))))))
    (. .) ('' '')))

nsubj(stupid-3, I-1)
cop(stupid-3, am-2)
root(ROOT-0, stupid-3)
nsubj(want-9, I-6)
nsubj(stupid-12, I-6)
aux(want-9, do-7)
neg(want-9, n't-8)
conj_but(stupid-3, want-9)
aux(stupid-12, to-10)
cop(stupid-12, be-11)
xcomp(want-9, stupid-12)

(ROOT
  (FRAG (`` ``)
    (INTJ (JJ Good) (NN boy))
    (. !)))

root(ROOT-0, Good-2)
dep(Good-2, boy-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB blow)
              (NP (PRP you))
              (ADVP (RB north)
                (PP (IN in)
                  (NP
                    (NP (DT that) (JJ little) (NN craft))
                    (, ,)
                    (NP
                      (NP (CD one))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (JJS finest))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (ADVP (RB ever))
                              (VP (VBD sailed)
                                (NP (DT the) (NN sea))))))))))))))))
    (. .)))

nsubj(going-3, I-1)
nsubj(blow-5, I-1)
aux(going-3, am-2)
root(ROOT-0, going-3)
aux(blow-5, to-4)
xcomp(going-3, blow-5)
dobj(blow-5, you-6)
advmod(blow-5, north-7)
det(craft-11, that-9)
amod(craft-11, little-10)
prep_in(north-7, craft-11)
appos(craft-11, one-13)
det(finest-16, the-15)
prep_of(one-13, finest-16)
nsubj(sailed-19, finest-16)
advmod(sailed-19, ever-18)
rcmod(finest-16, sailed-19)
det(sea-21, the-20)
dobj(sailed-19, sea-21)

(ROOT
  (S
    (ADVP (RB Here))
    (NP (PRP we))
    (VP (VBP are) (, ,)
      (ADVP (RB right))
      (PP (IN over)
        (NP (PRP it))))
    (. .)))

advmod(are-3, Here-1)
nsubj(are-3, we-2)
root(ROOT-0, are-3)
advmod(are-3, right-5)
prep_over(are-3, it-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB be)
          (VP (VBG blowing)
            (PP (IN against)
              (NP (PRP you)))))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB be)
          (VP (VBG sailing)
            (PP (IN against)
              (NP (PRP me)))))))
    (: ;)
    (CC and)
    (S
      (NP (DT all))
      (VP (MD will)
        (VP (VB be)
          (ADVP (RB just))
          (SBAR (IN as)
            (S
              (NP (PRP we))
              (VP (VBP want)
                (NP (PRP it))))))))
    (. .)))

nsubj(blowing-4, I-1)
aux(blowing-4, shall-2)
aux(blowing-4, be-3)
root(ROOT-0, blowing-4)
prep_against(blowing-4, you-6)
nsubj(sailing-11, you-8)
aux(sailing-11, will-9)
aux(sailing-11, be-10)
conj_and(blowing-4, sailing-11)
prep_against(sailing-11, me-13)
nsubj(be-18, all-16)
aux(be-18, will-17)
conj_and(blowing-4, be-18)
advmod(be-18, just-19)
mark(want-22, as-20)
nsubj(want-22, we-21)
advcl(be-18, want-22)
dobj(want-22, it-23)

(ROOT
  (S
    (S
      (NP (DT The) (NN captain))
      (VP (MD wo) (RB n't)
        (VP (VB get)
          (PRT (RP on))
          (ADVP
            (ADVP (RB so) (RB fast))
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (MD would)
                  (VP (VB like)))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP he))
        (VP (MD will)
          (VP (VB get)
            (PRT (RP on)))))
      (, ,)
      (CC and)
      (RB so)
      (S
        (ADVP (RB shall))
        (NP (PRP we))))
    (. .)))

det(captain-2, The-1)
nsubj(get-5, captain-2)
aux(get-5, wo-3)
neg(get-5, n't-4)
root(ROOT-0, get-5)
prt(get-5, on-6)
advmod(fast-8, so-7)
advmod(get-5, fast-8)
mark(like-12, as-9)
nsubj(like-12, he-10)
aux(like-12, would-11)
advcl(fast-8, like-12)
ccomp(fast-8, like-12)
nsubj(get-17, he-15)
aux(get-17, will-16)
conj_but(get-5, get-17)
prt(get-17, on-18)
advmod(we-23, shall-22)
conj_but(get-5, we-23)
conj_and(get-17, we-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB just))
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB put)
              (NP (PRP you))
              (PP (IN on)
                (NP (NN board))))))))
    (. .)))

nsubj(going-4, I-1)
nsubj(put-6, I-1)
aux(going-4, 'm-2)
advmod(going-4, just-3)
root(ROOT-0, going-4)
aux(put-6, to-5)
xcomp(going-4, put-6)
dobj(put-6, you-7)
prep_on(put-6, board-9)

(ROOT
  (S
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB see)
          (PP (IN in)
            (NP
              (NP (NN front))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN tiller))
                  (PRN (: --)
                    (SBAR (IN that)
                      (NP
                        (NP
                          (NP (NN thing))
                          (SBAR
                            (S
                              (NP (DT the) (NN man))
                              (VP (VBZ is)
                                (VP (VBG working) (, ,)
                                  (ADVP (RB now))
                                  (PP
                                    (PP (TO to)
                                      (NP (CD one) (NN side)))
                                    (, ,)
                                    (ADVP (RB now))
                                    (PP (TO to)
                                      (NP (DT the) (JJ other)))))))))
                        (: --)
                        (NP
                          (NP (DT a) (NN round) (NN thing))
                          (PP (IN like)
                            (NP
                              (NP (DT the) (NN top))
                              (PP (IN of)
                                (NP (DT a) (NN drum)))))))
                      (. ?) ('' ''))))))))))))

root(ROOT-0, Do-1)
nsubj(see-3, you-2)
ccomp(Do-1, see-3)
det(tiller-8, the-7)
prep_in_front_of(see-3, tiller-8)
dep(tiller-8, that-10)
dep(that-10, thing-11)
det(man-13, the-12)
nsubj(working-15, man-13)
aux(working-15, is-14)
rcmod(thing-11, working-15)
advmod(working-15, now-17)
num(side-20, one-19)
prep_to(working-15, side-20)
advmod(working-15, now-22)
det(other-25, the-24)
prep_to(working-15, other-25)
det(thing-29, a-27)
nn(thing-29, round-28)
dep(thing-11, thing-29)
det(top-32, the-31)
prep_like(thing-29, top-32)
det(drum-35, a-34)
prep_of(top-32, drum-35)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

dep(said-5, Yes-2)
root(ROOT-0, said-5)
nsubj(said-5, Diamond-6)

(ROOT
  (S (`` ``)
    (ADVP (RB Below))
    (NP (DT that))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP they))
          (VP (VBP keep)
            (NP
              (NP (PRP$ their) (JJ spare) (NNS sails))
              (, ,)
              (CC and)
              (NP
                (NP (DT some) (NNS stores))
                (PP (IN of)
                  (NP (DT that) (NN sort)))))))))
    (. .)))

advmod(is-4, Below-2)
nsubj(is-4, that-3)
root(ROOT-0, is-4)
advmod(keep-7, where-5)
nsubj(keep-7, they-6)
advcl(is-4, keep-7)
poss(sails-10, their-8)
amod(sails-10, spare-9)
dobj(keep-7, sails-10)
det(stores-14, some-13)
dobj(keep-7, stores-14)
conj_and(sails-10, stores-14)
det(sort-17, that-16)
prep_of(stores-14, sort-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB blow)
              (S
                (NP (DT that))
                (VP (VB cover)
                  (PRT (RP off)))))))))
    (. .)))

nsubj(going-3, I-1)
nsubj(blow-5, I-1)
aux(going-3, am-2)
root(ROOT-0, going-3)
aux(blow-5, to-4)
xcomp(going-3, blow-5)
nsubj(cover-7, that-6)
ccomp(blow-5, cover-7)
prt(cover-7, off-8)

(ROOT
  (S
    (S
      (NP (DT The) (JJ same) (NN moment) (NN I))
      (VP (MD will)
        (VP (VB drop)
          (NP (PRP you))
          (PP (IN on)
            (NP (NN deck))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB tumble)
          (PRT (RP in)))))
    (. .)))

det(I-4, The-1)
amod(I-4, same-2)
nn(I-4, moment-3)
nsubj(drop-6, I-4)
aux(drop-6, will-5)
root(ROOT-0, drop-6)
dobj(drop-6, you-7)
prep_on(drop-6, deck-9)
nsubj(tumble-14, you-12)
aux(tumble-14, must-13)
conj_and(drop-6, tumble-14)
prt(tumble-14, in-15)

(ROOT
  (S
    (S
      (S
        (VP (VBP Do) (RB n't)
          (VP (VB be)
            (ADJP (JJ afraid)))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is)
        (PP (IN of)
          (NP (DT no) (NN depth)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB fall)
          (PP (IN on)
            (NP (NN sail-cloth))))))
    (. .)))

aux(afraid-4, Do-1)
neg(afraid-4, n't-2)
cop(afraid-4, be-3)
ccomp(is-7, afraid-4)
nsubj(is-7, it-6)
root(ROOT-0, is-7)
neg(depth-10, no-9)
prep_of(is-7, depth-10)
nsubj(fall-15, you-13)
aux(fall-15, will-14)
conj_and(is-7, fall-15)
prep_on(fall-15, sail-cloth-17)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD will)
        (VP (VB find)
          (S
            (NP (PRP it))
            (ADJP
              (ADJP (JJ nice)
                (CC and)
                (JJ warm)
                (CC and)
                (JJ dry-only))
              (JJ dark))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB know)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP am)
                (PP (IN near)
                  (NP (PRP you)))
                (PP (IN by)
                  (NP
                    (NP (DT every) (NN roll)
                      (CC and)
                      (NN pitch))
                    (PP (IN of)
                      (NP (DT the) (NN vessel)))))))))))
    (. .)))

nsubj(find-3, You-1)
aux(find-3, will-2)
root(ROOT-0, find-3)
nsubj(dark-10, it-4)
dep(warm-7, nice-5)
dep(dark-10, warm-7)
conj_and(warm-7, dry-only-9)
dep(dark-10, dry-only-9)
xcomp(find-3, dark-10)
nsubj(know-15, you-13)
aux(know-15, will-14)
conj_and(find-3, know-15)
nsubj(am-17, I-16)
ccomp(know-15, am-17)
prep_near(am-17, you-19)
det(roll-22, every-21)
prep_by(am-17, roll-22)
prep_by(am-17, pitch-24)
conj_and(roll-22, pitch-24)
det(vessel-27, the-26)
prep_of(roll-22, vessel-27)

(ROOT
  (S
    (VP
      (VP (VB Coil)
        (NP (PRP yourself))
        (PRT (RP up)))
      (CC and)
      (VP (VB go)
        (S
          (VP (TO to)
            (VP (VB sleep))))))
    (. .)))

root(ROOT-0, Coil-1)
dobj(Coil-1, yourself-2)
prt(Coil-1, up-3)
conj_and(Coil-1, go-5)
aux(sleep-7, to-6)
xcomp(go-5, sleep-7)

(ROOT
  (S
    (S
      (NP (DT The) (NN yacht))
      (VP (MD shall)
        (VP (VB be)
          (NP (PRP$ my) (NN cradle)))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD shall)
        (VP (VB be)
          (NP (PRP$ my) (NN baby)))))
    (. .) ('' '')))

det(yacht-2, The-1)
nsubj(cradle-6, yacht-2)
aux(cradle-6, shall-3)
cop(cradle-6, be-4)
poss(cradle-6, my-5)
root(ROOT-0, cradle-6)
nsubj(baby-12, you-8)
aux(baby-12, shall-9)
cop(baby-12, be-10)
poss(baby-12, my-11)
conj_and(cradle-6, baby-12)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Thank)
        (NP (PRP you))))
    (, ,)
    (VP (VBZ dear))
    (NP (NNP North) (NNP Wind))
    (. .)))

ccomp(dear-5, Thank-2)
dobj(Thank-2, you-3)
root(ROOT-0, dear-5)
nn(Wind-7, North-6)
nsubj(dear-5, Wind-7)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBP am) (RB not)
        (ADJP
          (NP (DT a) (RB bit))
          (JJ afraid))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(afraid-6, I-1)
cop(afraid-6, am-2)
neg(afraid-6, not-3)
det(bit-5, a-4)
npadvmod(afraid-6, bit-5)
ccomp(said-9, afraid-6)
root(ROOT-0, said-9)
nsubj(said-9, Diamond-10)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT a) (NN moment)))
      (NP (PRP they))
      (VP (VBD were)
        (PP (IN on)
          (NP
            (NP (DT a) (NN level))
            (PP (IN with)
              (NP (DT the) (NNS bulwarks)))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP North) (NNP Wind))
      (VP (VBD sent)
        (NP
          (NP (DT the) (NN hatch))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ after-store) (VBG rattling) (RB away))
              (PP (IN over)
                (NP (DT the) (NN deck)
                  (S
                    (VP (TO to)
                      (VP (VB leeward)))))))))))
    (. .)))

det(moment-3, a-2)
prep_in(were-5, moment-3)
nsubj(were-5, they-4)
root(ROOT-0, were-5)
det(level-8, a-7)
prep_on(were-5, level-8)
det(bulwarks-11, the-10)
prep_with(level-8, bulwarks-11)
nn(Wind-15, North-14)
nsubj(sent-16, Wind-15)
conj_and(were-5, sent-16)
det(hatch-18, the-17)
dobj(sent-16, hatch-18)
prep(hatch-18, of-19)
det(away-23, the-20)
amod(away-23, after-store-21)
amod(away-23, rattling-22)
pobj(of-19, away-23)
det(deck-26, the-25)
prep_over(away-23, deck-26)
aux(leeward-28, to-27)
vmod(deck-26, leeward-28)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ next))
        (, ,)
        (NP (NNP Diamond)))
      (VP (VBD found)
        (NP (PRP himself))
        (PP (IN in)
          (NP (DT the) (NN dark)))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBD tumbled)
                (PP (IN through)
                  (NP (DT the) (NN hole)))
                (SBAR (IN as)
                  (S
                    (NP (NNP North) (NNP Wind))
                    (VP (VBD had)
                      (VP (VBN told)
                        (NP (PRP him))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN cover))
      (VP (VBD was)
        (VP (VBN replaced)
          (PP (IN over)
            (NP (PRP$ his) (NN head))))))
    (. .)))

det(next-2, The-1)
nsubj(found-5, next-2)
appos(next-2, Diamond-4)
root(ROOT-0, found-5)
dobj(found-5, himself-6)
det(dark-9, the-8)
prep_in(found-5, dark-9)
mark(tumbled-14, for-11)
nsubj(tumbled-14, he-12)
aux(tumbled-14, had-13)
advcl(found-5, tumbled-14)
det(hole-17, the-16)
prep_through(tumbled-14, hole-17)
mark(told-22, as-18)
nn(Wind-20, North-19)
nsubj(told-22, Wind-20)
aux(told-22, had-21)
advcl(tumbled-14, told-22)
dobj(told-22, him-23)
det(cover-27, the-26)
nsubjpass(replaced-29, cover-27)
auxpass(replaced-29, was-28)
conj_and(found-5, replaced-29)
poss(head-32, his-31)
prep_over(replaced-29, head-32)

(ROOT
  (S
    (ADVP (RB Away))
    (NP (PRP he))
    (VP (VBD went)
      (S
        (VP (VBG rolling)
          (S
            (VP (TO to)
              (VP (VB leeward))))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (DT the) (NN wind))
          (VP (VBD began)
            (ADVP (DT all) (IN at) (RB once))
            (S
              (VP (TO to)
                (VP (VB blow)
                  (ADJP (JJ hard)))))))))
    (. .)))

advmod(went-3, Away-1)
nsubj(went-3, he-2)
root(ROOT-0, went-3)
xcomp(went-3, rolling-4)
aux(leeward-6, to-5)
xcomp(rolling-4, leeward-6)
mark(began-11, for-8)
det(wind-10, the-9)
nsubj(began-11, wind-10)
nsubj(blow-16, wind-10)
advcl(went-3, began-11)
pobj(at-13, all-12)
advmod(began-11, at-13)
advmod(at-13, once-14)
aux(blow-16, to-15)
xcomp(began-11, blow-16)
acomp(blow-16, hard-17)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD heard)
      (NP
        (NP
          (NP (DT the) (NN call))
          (PP (IN of)
            (NP (DT the) (NN captain))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (JJ loud) (NN trampling))
          (PP (IN of)
            (NP (DT the) (NNS men)))))
      (PP (IN over)
        (NP (PRP$ his) (NN head)))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBD hauled)
            (PP (IN at)
              (NP (DT the) (JJ main) (NN sheet)))
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP (DT the) (NN boom))
                  (PP (IN on)
                    (NP (NN board)))
                  (SBAR (IN that)
                    (S
                      (NP (PRP they))
                      (VP (MD might)
                        (VP (VB take)
                          (PP (IN in)
                            (NP
                              (NP (DT a) (NN reef))
                              (PP (IN in)
                                (NP (DT the) (NN mainsail))))))))))))))))
    (. .)))

nsubj(heard-2, He-1)
root(ROOT-0, heard-2)
det(call-4, the-3)
dobj(heard-2, call-4)
det(captain-7, the-6)
prep_of(call-4, captain-7)
det(trampling-12, the-10)
amod(trampling-12, loud-11)
dobj(heard-2, trampling-12)
conj_and(call-4, trampling-12)
det(men-15, the-14)
prep_of(trampling-12, men-15)
poss(head-18, his-17)
prep_over(heard-2, head-18)
mark(hauled-22, as-20)
nsubj(hauled-22, they-21)
nsubj(get-28, they-21)
advcl(heard-2, hauled-22)
det(sheet-26, the-24)
amod(sheet-26, main-25)
prep_at(hauled-22, sheet-26)
aux(get-28, to-27)
xcomp(hauled-22, get-28)
det(boom-30, the-29)
dobj(get-28, boom-30)
prep_on(get-28, board-32)
mark(take-36, that-33)
nsubj(take-36, they-34)
aux(take-36, might-35)
ccomp(get-28, take-36)
det(reef-39, a-38)
prep_in(take-36, reef-39)
det(mainsail-42, the-41)
prep_in(reef-39, mainsail-42)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (VBD felt)
        (PRT (RP about))
        (SBAR (IN until)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN found)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBD seemed)
                      (NP (DT the)
                        (ADJP (RBS most) (JJ comfortable))
                        (NN place)))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB there))
      (NP (PRP he))
      (VP
        (VP (VBD snuggled)
          (PRT (RP down)))
        (CC and)
        (VP (VBD lay))))
    (. .)))

nsubj(felt-2, Diamond-1)
root(ROOT-0, felt-2)
prt(felt-2, about-3)
mark(found-7, until-4)
nsubj(found-7, he-5)
aux(found-7, had-6)
advcl(felt-2, found-7)
nsubj(seemed-9, what-8)
ccomp(found-7, seemed-9)
det(place-13, the-10)
advmod(comfortable-12, most-11)
amod(place-13, comfortable-12)
xcomp(seemed-9, place-13)
advmod(snuggled-18, there-16)
nsubj(snuggled-18, he-17)
nsubj(lay-21, he-17)
conj_and(felt-2, snuggled-18)
prt(snuggled-18, down-19)
conj_and(felt-2, lay-21)
conj_and(snuggled-18, lay-21)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (NNS Hours))
          (PP (IN after)
            (NP (NNS hours))))
        (, ,)
        (NP
          (NP (DT a) (JJ great) (JJ many))
          (PP (IN of)
            (NP (PRP them))))
        (, ,))
      (VP (VBD went)
        (PP (IN by))))
    (: ;)
    (CC and)
    (ADVP (RB still))
    (S
      (NP (NNP Diamond))
      (VP (VBD lay)
        (ADVP (RB there))))
    (. .)))

nsubj(went-11, Hours-1)
prep_after(Hours-1, hours-3)
det(many-7, a-5)
amod(many-7, great-6)
appos(Hours-1, many-7)
prep_of(many-7, them-9)
root(ROOT-0, went-11)
prep(went-11, by-12)
advmod(lay-17, still-15)
nsubj(lay-17, Diamond-16)
conj_and(went-11, lay-17)
advmod(lay-17, there-18)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB never))
    (VP (VBD felt)
      (PP (IN in)
        (NP (DT the)
          (ADJP (RBS least) (JJ tired)
            (CC or)
            (JJ impatient))))
      (, ,)
      (PP (IN for)
        (NP
          (NP (DT a) (JJ strange) (NN pleasure))
          (VP (VBN filled)
            (NP (PRP$ his) (NN heart))))))
    (. .)))

nsubj(felt-3, He-1)
neg(felt-3, never-2)
root(ROOT-0, felt-3)
det(tired-7, the-5)
advmod(tired-7, least-6)
prep_in(felt-3, tired-7)
prep_in(felt-3, impatient-9)
conj_or(tired-7, impatient-9)
det(pleasure-14, a-12)
amod(pleasure-14, strange-13)
prep_for(felt-3, pleasure-14)
vmod(pleasure-14, filled-15)
poss(heart-17, his-16)
dobj(filled-15, heart-17)

(ROOT
  (NP
    (NP (DT The) (NN straining))
    (PP (IN of)
      (NP (DT the) (NNS masts)))
    (, ,)
    (NP
      (NP (DT the) (NN creaking))
      (PP (IN of)
        (NP (DT the) (NN boom))))
    (, ,)
    (NP
      (NP (DT the) (NN singing))
      (PP (IN of)
        (NP (DT the) (NNS ropes))))
    (, ,)
    (NP
      (NP (DT the) (NN banging))
      (PP (IN of)
        (NP
          (NP
            (NP (DT the) (NNS blocks))
            (SBAR (IN as)
              (S
                (NP (PRP they))
                (VP (VBD put)
                  (NP
                    (NP (DT the) (NN vessel))
                    (PP (IN about)
                      (PRN (, ,)
                        (S
                          (NP (DT all))
                          (VP (VBD fell)
                            (PP (IN in) (IN with)
                              (NP
                                (NP (DT the) (NN roaring))
                                (PP (IN of)
                                  (NP (DT the) (NN wind)))))
                            (PP (IN above))))
                        (, ,))
                      (NP
                        (NP (DT the) (NN surge))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NNS waves))
                            (PP (IN past)
                              (NP (PRP$ her) (NNS sides))))))))))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NN thud))
            (SBAR
              (WHPP (IN with)
                (WHNP (WDT which)))
              (S
                (SBAR
                  (ADVP (DT every) (RB now)
                    (CC and)
                    (RB then))
                  (S
                    (NP (PRP one))
                    (VP (MD would)
                      (VP (VB strike)
                        (NP (PRP her))))))
                (: ;)
                (SBAR (IN while)
                  (S
                    (PP (IN through)
                      (NP (PRP it)))
                    (NP (DT all) (NNP Diamond))
                    (VP (MD could)
                      (VP (VB hear)
                        (NP (DT the) (NN gurgling))
                        (, ,)
                        (S
                          (VP
                            (VP (VBG rippling))
                            (, ,)
                            (VP (VBG talking)
                              (NP
                                (NP (NN flow))
                                (PP (IN of)
                                  (NP (DT the) (NN water))))
                              (PP (IN against)
                                (NP (PRP$ her) (NNS planks)))
                              (, ,)
                              (SBAR (IN as)
                                (S
                                  (NP (PRP she))
                                  (VP (VBD slipped)
                                    (PP (IN through)
                                      (NP (PRP it)))))))
                            (, ,)
                            (VP (VBG lying)
                              (ADVP (RB now))
                              (PP (IN on)
                                (NP (DT this) (NN side))))
                            (, ,)
                            (VP
                              (ADVP
                                (ADVP (RB now) (IN on) (DT that))
                                (: --)
                                (PP (IN like)
                                  (NP (DT a) (JJ subdued) (NN air))))
                              (VBG running)
                              (PP (IN through)
                                (NP (DT the) (JJ grand) (NN music))))
                            (NP (PRP$ his) (NNP North) (NN Wind))))))))
                (VP (VBD was)
                  (VP (VBG making)
                    (PP (IN about)
                      (NP (PRP him)))
                    (S
                      (VP (TO to)
                        (VP (VB keep)
                          (NP (PRP him))
                          (PP (IN from)
                            (S
                              (VP (VBG tiring)
                                (SBAR (IN as)
                                  (S
                                    (NP (PRP they))
                                    (VP (VBD sped)
                                      (PRT (RP on))
                                      (PP (IN towards)
                                        (NP (DT the) (NN country)))
                                      (PP (IN at)
                                        (NP
                                          (NP (DT the) (NN back))
                                          (PP (IN of)
                                            (NP (PRP$ her) (NN doorstep))))))))))))))))))))))
    (. .)))

det(straining-2, The-1)
root(ROOT-0, straining-2)
det(masts-5, the-4)
prep_of(straining-2, masts-5)
det(creaking-8, the-7)
appos(straining-2, creaking-8)
det(boom-11, the-10)
prep_of(creaking-8, boom-11)
det(singing-14, the-13)
appos(straining-2, singing-14)
det(ropes-17, the-16)
prep_of(singing-14, ropes-17)
det(banging-20, the-19)
appos(straining-2, banging-20)
det(blocks-23, the-22)
prep_of(banging-20, blocks-23)
mark(put-26, as-24)
nsubj(put-26, they-25)
dep(blocks-23, put-26)
det(vessel-28, the-27)
dobj(put-26, vessel-28)
nsubj(fell-32, all-31)
dep(vessel-28, fell-32)
dep(fell-32, in-33)
det(roaring-36, the-35)
prep_with(fell-32, roaring-36)
det(wind-39, the-38)
prep_of(roaring-36, wind-39)
prep(fell-32, above-40)
det(surge-43, the-42)
prep_about(vessel-28, surge-43)
det(waves-46, the-45)
prep_of(surge-43, waves-46)
poss(sides-49, her-48)
prep_past(waves-46, sides-49)
det(thud-53, the-52)
prep_of(banging-20, thud-53)
conj_and(blocks-23, thud-53)
prep_with(making-115, thud-53)
dep(now-57, every-56)
advmod(strike-62, now-57)
conj_and(now-57, then-59)
advmod(strike-62, then-59)
nsubj(strike-62, one-60)
aux(strike-62, would-61)
csubj(making-115, strike-62)
dobj(strike-62, her-63)
mark(hear-71, while-65)
prep_through(hear-71, it-67)
det(Diamond-69, all-68)
nsubj(hear-71, Diamond-69)
aux(hear-71, could-70)
csubj(making-115, hear-71)
parataxis(making-115, hear-71)
det(gurgling-73, the-72)
dobj(hear-71, gurgling-73)
dep(hear-71, rippling-75)
dep(rippling-75, talking-77)
dobj(talking-77, flow-78)
det(water-81, the-80)
prep_of(flow-78, water-81)
poss(planks-84, her-83)
prep_against(talking-77, planks-84)
mark(slipped-88, as-86)
nsubj(slipped-88, she-87)
advcl(talking-77, slipped-88)
prep_through(slipped-88, it-90)
dep(rippling-75, lying-92)
advmod(lying-92, now-93)
det(side-96, this-95)
prep_on(lying-92, side-96)
advmod(on-99, now-98)
advmod(running-106, on-99)
dep(on-99, that-100)
det(air-105, a-103)
amod(air-105, subdued-104)
prep_like(on-99, air-105)
dep(rippling-75, running-106)
det(music-110, the-108)
amod(music-110, grand-109)
prep_through(running-106, music-110)
poss(Wind-113, his-111)
nn(Wind-113, North-112)
dobj(rippling-75, Wind-113)
aux(making-115, was-114)
rcmod(thud-53, making-115)
prep_about(making-115, him-117)
aux(keep-119, to-118)
xcomp(making-115, keep-119)
dobj(keep-119, him-120)
prepc_from(keep-119, tiring-122)
mark(sped-125, as-123)
nsubj(sped-125, they-124)
advcl(tiring-122, sped-125)
prt(sped-125, on-126)
det(country-129, the-128)
prep_towards(sped-125, country-129)
det(back-132, the-131)
prep_at(sped-125, back-132)
poss(doorstep-135, her-134)
prep_of(back-132, doorstep-135)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB How) (RB long))
      (S
        (NP (DT this))
        (VP (VBD lasted))))
    (NP (NNP Diamond))
    (VP (VBD had)
      (NP (DT no) (NN idea)))
    (. .)))

advmod(long-2, How-1)
advmod(lasted-4, long-2)
nsubj(lasted-4, this-3)
advcl(had-6, lasted-4)
nsubj(had-6, Diamond-5)
root(ROOT-0, had-6)
neg(idea-8, no-7)
dobj(had-6, idea-8)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB fall)
            (ADJP (RB asleep))
            (ADVP (RB sometimes))
            (, ,)
            (PP (RB only) (IN through)
              (NP
                (NP (DT the) (NN sleep))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD heard)
                      (NP
                        (NP (DT the) (NNS sounds))
                        (VP (VBG going)
                          (PRT (RP on)))))))))))))
    (. .)))

nsubj(seemed-2, He-1)
nsubj(fall-4, He-1)
root(ROOT-0, seemed-2)
aux(fall-4, to-3)
xcomp(seemed-2, fall-4)
acomp(fall-4, asleep-5)
advmod(fall-4, sometimes-6)
advmod(fall-4, only-8)
det(sleep-11, the-10)
prep_through(fall-4, sleep-11)
nsubj(heard-13, he-12)
rcmod(sleep-11, heard-13)
det(sounds-15, the-14)
dobj(heard-13, sounds-15)
vmod(sounds-15, going-16)
prt(going-16, on-17)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (NP (DT the) (NN weather))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB get)
            (ADJP (JJR worse))))))
    (. .)))

prep_at(seemed-5, length-2)
det(weather-4, the-3)
nsubj(seemed-5, weather-4)
nsubj(worse-8, weather-4)
root(ROOT-0, seemed-5)
aux(worse-8, to-6)
dep(worse-8, get-7)
xcomp(seemed-5, worse-8)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN confusion)
          (CC and)
          (NN trampling))
        (PP (IN of)
          (NP (NNS feet))))
      (VP (VBD grew)
        (ADJP (RBR more) (JJ frequent))
        (PP (IN over)
          (NP (PRP$ his) (NN head)))))
    (: ;)
    (S
      (NP (DT the) (NN vessel))
      (VP
        (VP (VBD lay)
          (ADVP (RB over) (RBR more)
            (CC and)
            (RBR more))
          (PP (IN on)
            (NP (PRP$ her) (NN side))))
        (, ,)
        (CC and)
        (VP (VBD went)
          (NP (NN roaring))
          (PP (IN through)
            (NP
              (NP (DT the) (NNS waves))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBN banged)
                    (CC and)
                    (VBN thumped)
                    (PP
                      (PP (IN at)
                        (NP (PRP her)))
                      (CONJP (RB as) (IN if))
                      (PP (IN in)
                        (NP (NN anger))))))))))))
    (. .)))

det(confusion-2, The-1)
nsubj(grew-7, confusion-2)
conj_and(confusion-2, trampling-4)
nsubj(grew-7, trampling-4)
prep_of(confusion-2, feet-6)
root(ROOT-0, grew-7)
advmod(frequent-9, more-8)
acomp(grew-7, frequent-9)
poss(head-12, his-11)
prep_over(grew-7, head-12)
det(vessel-15, the-14)
nsubj(lay-16, vessel-15)
nsubj(went-26, vessel-15)
parataxis(grew-7, lay-16)
advmod(more-18, over-17)
advmod(lay-16, more-18)
advmod(lay-16, more-20)
conj_and(more-18, more-20)
poss(side-23, her-22)
prep_on(lay-16, side-23)
parataxis(grew-7, went-26)
conj_and(lay-16, went-26)
dobj(went-26, roaring-27)
det(waves-30, the-29)
prep_through(went-26, waves-30)
nsubj(banged-33, waves-30)
nsubj(banged-33', waves-30)
nsubj(thumped-35, waves-30)
rcmod(waves-30, banged-33)
rcmod(waves-30, banged-33')
conj_as(banged-33, banged-33')
rcmod(waves-30, thumped-35)
conj_and(banged-33, thumped-35)
prep_at(banged-33, her-37)
prep_in(banged-33', anger-41)

(ROOT
  (S
    (NP (DT All))
    (ADVP (IN at) (RB once))
    (VP (VBD arose)
      (NP (DT a) (JJ terrible) (NN uproar)))
    (. .)))

nsubj(arose-4, All-1)
advmod(arose-4, at-2)
advmod(at-2, once-3)
root(ROOT-0, arose-4)
det(uproar-7, a-5)
amod(uproar-7, terrible-6)
dobj(arose-4, uproar-7)

(ROOT
  (S
    (S
      (NP (DT The) (NN hatch))
      (VP (VBD was)
        (VP (VBN blown)
          (PRT (RP off)))))
    (: ;)
    (S
      (NP (DT a) (JJ cold) (JJ fierce) (NN wind))
      (VP (VBD swept)
        (PRT (RP in))
        (PP (IN upon)
          (NP (PRP him)))))
    (: ;)
    (CC and)
    (S
      (NP (DT a) (JJ long) (NN arm))
      (VP (VBD came)
        (PP (IN with)
          (NP
            (NP (PRP it))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP
                  (VP (VBD laid)
                    (NP
                      (NP (NN hold))
                      (PP (IN of)
                        (NP (PRP him)))))
                  (CC and)
                  (VP (VBD lifted)
                    (NP (PRP him))
                    (PRT (RP out))))))))))
    (. .)))

det(hatch-2, The-1)
nsubjpass(blown-4, hatch-2)
auxpass(blown-4, was-3)
root(ROOT-0, blown-4)
prt(blown-4, off-5)
det(wind-10, a-7)
amod(wind-10, cold-8)
amod(wind-10, fierce-9)
nsubj(swept-11, wind-10)
conj_and(blown-4, swept-11)
prt(swept-11, in-12)
prep_upon(swept-11, him-14)
det(arm-19, a-17)
amod(arm-19, long-18)
nsubj(came-20, arm-19)
conj_and(blown-4, came-20)
prep_with(came-20, it-22)
nsubj(laid-24, it-22)
nsubj(lifted-29, it-22)
rcmod(it-22, laid-24)
dobj(laid-24, hold-25)
prep_of(hold-25, him-27)
rcmod(it-22, lifted-29)
conj_and(laid-24, lifted-29)
dobj(lifted-29, him-30)
prt(lifted-29, out-31)

(ROOT
  (S
    (NP (DT The) (JJ same) (NN moment))
    (NP (PRP he))
    (VP (VBD saw)
      (NP (DT the) (JJ little) (NN vessel))
      (ADVP (RB far)
        (PP (IN below)
          (S
            (NP (PRP him))
            (VP (VBG righting)
              (NP (PRP herself)))))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, same-2)
nsubj(saw-5, moment-3)
nsubj(saw-5, he-4)
root(ROOT-0, saw-5)
det(vessel-8, the-6)
amod(vessel-8, little-7)
dobj(saw-5, vessel-8)
advmod(saw-5, far-9)
nsubj(righting-12, him-11)
prepc_below(far-9, righting-12)
dobj(righting-12, herself-13)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD had)
        (VP (VBN taken)
          (PP (IN in)
            (NP (PDT all) (PRP$ her) (NNS sails)))))
      (CC and)
      (VP (VBD lay)
        (ADVP (RB now))
        (S
          (VP (VBG tossing)
            (PP (IN on)
              (NP
                (NP (DT the) (NNS waves))
                (PP (IN like)
                  (NP
                    (NP (DT a) (NN sea-bird))
                    (PP (IN with)
                      (NP (JJ folded) (NNS wings)))))))))))
    (. .)))

nsubj(taken-3, She-1)
nsubj(lay-9, She-1)
aux(taken-3, had-2)
root(ROOT-0, taken-3)
predet(sails-7, all-5)
poss(sails-7, her-6)
prep_in(taken-3, sails-7)
conj_and(taken-3, lay-9)
advmod(lay-9, now-10)
xcomp(lay-9, tossing-11)
det(waves-14, the-13)
prep_on(tossing-11, waves-14)
det(sea-bird-17, a-16)
prep_like(waves-14, sea-bird-17)
amod(wings-20, folded-19)
prep_with(sea-bird-17, wings-20)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ short) (NN distance))
      (PP (TO to)
        (NP (DT the) (NN south))))
    (VP (VBD lay)
      (NP (DT a)
        (ADJP (RB much) (JJR larger))
        (NN vessel))
      (, ,)
      (PP
        (PP (IN with)
          (NP
            (NP (CD two)
              (CC or)
              (CD three) (NNS sails))
            (VP (VBN set))))
        (, ,)
        (CC and)
        (PP (IN towards)
          (NP
            (NP (PRP it))
            (SBAR
              (S
                (NP (NNP North) (NNP Wind))
                (VP (VBD was)
                  (VP (VBG carrying)
                    (NP (NNP Diamond))))))))))
    (. .)))

det(distance-3, A-1)
amod(distance-3, short-2)
nsubj(lay-7, distance-3)
nsubj(lay-7', distance-3)
det(south-6, the-5)
prep_to(distance-3, south-6)
root(ROOT-0, lay-7)
conj_and(lay-7, lay-7')
det(vessel-11, a-8)
advmod(larger-10, much-9)
amod(vessel-11, larger-10)
dobj(lay-7, vessel-11)
nn(sails-17, two-14)
conj_or(two-14, three-16)
nn(sails-17, three-16)
prep_with(lay-7, sails-17)
vmod(sails-17, set-18)
prep_towards(lay-7', it-22)
nn(Wind-24, North-23)
nsubj(carrying-26, Wind-24)
aux(carrying-26, was-25)
rcmod(it-22, carrying-26)
dobj(carrying-26, Diamond-27)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a) (JJ German) (NN ship))
      (, ,)
      (PP (IN on)
        (NP
          (NP (PRP$ its) (NN way))
          (PP (TO to)
            (NP (DT the) (NNP North) (NNP Pole))))))
    (. .)))

nsubj(ship-5, It-1)
cop(ship-5, was-2)
det(ship-5, a-3)
amod(ship-5, German-4)
root(ROOT-0, ship-5)
poss(way-9, its-8)
prep_on(ship-5, way-9)
det(Pole-13, the-11)
nn(Pole-13, North-12)
prep_to(way-9, Pole-13)

(ROOT
  (S (`` ``)
    (S
      (ADVP
        (NP (DT That) (NN vessel))
        (RB down))
      (NP (EX there))
      (VP (MD will)
        (VP (VB give)
          (NP (PRP us))
          (NP
            (NP (DT a) (NN lift))
            (ADVP (RB now))))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP North) (NNP Wind))
        (: ;) (`` ``)
        (CC and)
        (SBAR
          (WHPP (IN after)
            (WHNP (WDT that)))
          (S
            (NP (PRP I))
            (VP (MD must)
              (VP (VB do)
                (NP
                  (NP (DT the) (JJS best))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (MD can)))))))))))
    (. .) ('' '')))

det(vessel-3, That-2)
npadvmod(down-4, vessel-3)
advmod(give-7, down-4)
expl(give-7, there-5)
aux(give-7, will-6)
ccomp(said-14, give-7)
iobj(give-7, us-8)
nsubj(give-7, us-8)
det(lift-10, a-9)
dobj(give-7, lift-10)
nsubj(give-7, lift-10)
advmod(lift-10, now-11)
root(ROOT-0, said-14)
nn(Wind-16, North-15)
dobj(said-14, Wind-16)
prep_after(do-24, that-21)
nsubj(do-24, I-22)
aux(do-24, must-23)
dobj(said-14, do-24)
conj_and(Wind-16, do-24)
det(best-26, the-25)
dobj(do-24, best-26)
nsubj(can-28, I-27)
rcmod(best-26, can-28)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD managed)
      (S
        (VP (TO to)
          (VP (VB hide)
            (NP (PRP him))
            (PP
              (PP (IN amongst)
                (NP
                  (NP (DT the) (NNS flags))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (JJ big) (NN ship))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBD were) (RB all)
                            (VP
                              (ADVP (RB snugly))
                              (VBD stowed)
                              (PRT (RP away))))))))))
              (, ,)
              (CC and)
              (PP (IN on))
              (CC and)
              (PP (IN on)
                (NP
                  (NP (PRP they))
                  (VP (VBN sped)
                    (PP (IN towards)
                      (NP (DT the) (NN north)))))))))))
    (. .)))

nsubj(managed-2, She-1)
nsubj(hide-4, She-1)
nsubj(hide-4', She-1)
nsubj(hide-4'', She-1)
root(ROOT-0, managed-2)
aux(hide-4, to-3)
xcomp(managed-2, hide-4)
xcomp(managed-2, hide-4')
xcomp(managed-2, hide-4'')
conj_and(hide-4, hide-4')
conj_and(hide-4, hide-4'')
dobj(hide-4, him-5)
det(flags-8, the-7)
prep_amongst(hide-4, flags-8)
prep_on(hide-4', flags-8)
det(ship-12, the-10)
amod(ship-12, big-11)
prep_of(flags-8, ship-12)
nsubjpass(stowed-18, ship-12)
auxpass(stowed-18, were-15)
advmod(stowed-18, all-16)
advmod(stowed-18, snugly-17)
rcmod(ship-12, stowed-18)
prt(stowed-18, away-19)
cc(hide-4, and-21)
prep_on(hide-4'', they-25)
vmod(they-25, sped-26)
det(north-29, the-28)
prep_towards(sped-26, north-29)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (NP (CD one) (NN night))
    (PRN
      (S
        (NP (PRP she))
        (VP (VBN whispered)
          (PP (IN in)
            (NP (PRP$ his) (NN ear)))))
      (, ,))
    (`` ``)
    (PP (VBN Come)
      (PP (IN on)
        (NP (NN deck))))
    (, ,)
    (NP
      (NP (NNP Diamond))
      (, ;) ('' '')
      (CC and)
      (NP (PRP he)))
    (VP
      (VP (VBD got)
        (PRT (RP up))
        (PP (IN at)
          (NP (RB once))))
      (CC and)
      (VP (VBD crept)
        (PP (IN on)
          (NP (NN deck)))))
    (. .)))

prep_at(got-21, length-2)
num(night-4, one-3)
tmod(got-21, night-4)
nsubj(whispered-6, she-5)
parataxis(got-21, whispered-6)
poss(ear-9, his-8)
prep_in(whispered-6, ear-9)
prep(got-21, Come-12)
pcomp(Come-12, on-13)
pobj(on-13, deck-14)
nsubj(got-21, Diamond-16)
nsubj(crept-26, Diamond-16)
conj_and(Diamond-16, he-20)
nsubj(got-21, he-20)
root(ROOT-0, got-21)
prt(got-21, up-22)
prep(got-21, at-23)
pobj(at-23, once-24)
conj_and(got-21, crept-26)
prep_on(crept-26, deck-28)

(ROOT
  (S
    (NP (NNP Everything))
    (VP (VBD looked)
      (ADJP (RB very) (JJ strange)))
    (. .)))

nsubj(looked-2, Everything-1)
root(ROOT-0, looked-2)
advmod(strange-4, very-3)
acomp(looked-2, strange-4)

(ROOT
  (S
    (NP
      (UCP
        (ADVP (RB Here))
        (CC and)
        (PP
          (ADVP (RB there))
          (IN on)
          (NP (DT all))))
      (NNS sides))
    (VP (VBD were)
      (NP
        (NP (JJ huge) (NNS masses))
        (PP (IN of)
          (NP
            (NP (VBG floating) (NN ice))
            (, ,)
            (VP (VBG looking)
              (PP (IN like)
                (NP
                  (NP (NNS cathedrals))
                  (, ,)
                  (CC and)
                  (NP (NNS castles))
                  (, ,)
                  (CC and)
                  (NP (NNS crags))
                  (, ,)))
              (SBAR (IN while)
                (SINV
                  (ADVP (RB away) (IN beyond))
                  (VBD was)
                  (NP (DT a) (JJ blue) (NN sea)))))))))
    (. .)))

advmod(sides-6, Here-1)
advmod(on-4, there-3)
conj_and(Here-1, on-4)
advmod(sides-6, on-4)
pobj(on-4, all-5)
nsubj(masses-9, sides-6)
cop(masses-9, were-7)
amod(masses-9, huge-8)
root(ROOT-0, masses-9)
amod(ice-12, floating-11)
prep_of(masses-9, ice-12)
vmod(ice-12, looking-14)
prep_like(looking-14, cathedrals-16)
prep_like(looking-14, castles-19)
conj_and(cathedrals-16, castles-19)
prep_like(looking-14, crags-22)
conj_and(cathedrals-16, crags-22)
dep(sea-30, while-24)
advmod(beyond-26, away-25)
advmod(sea-30, beyond-26)
dep(sea-30, was-27)
det(sea-30, a-28)
amod(sea-30, blue-29)
advcl(looking-14, sea-30)

(ROOT
  (S (`` ``)
    (VP (VB Is)
      (NP
        (NP (DT the) (NN sun))
        (VP (VBG rising)
          (CC or)
          (VBG setting))))
    (. ?) ('' '')))

cop(sun-4, Is-2)
det(sun-4, the-3)
root(ROOT-0, sun-4)
vmod(sun-4, rising-5)
vmod(sun-4, setting-7)
conj_or(rising-5, setting-7)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)

(ROOT
  (NP
    (NP (`` ``)
      (NP (DT Neither))
      (CC or)
      (NP
        (NP (DT both))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP you))
            (VP (VBP please))))))
    (. .)))

root(ROOT-0, Neither-2)
conj_or(Neither-2, both-4)
dobj(please-8, both-4)
nsubj(please-8, you-7)
rcmod(both-4, please-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB hardly))
      (VP (VB tell)
        (S
          (NP (WDT which))
          (NP (PRP myself)))))
    (. .)))

nsubj(tell-4, I-1)
aux(tell-4, can-2)
advmod(tell-4, hardly-3)
root(ROOT-0, tell-4)
nsubj(myself-6, which-5)
xcomp(tell-4, myself-6)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBZ is)
          (VP (VBG setting)
            (ADVP (RB now))))))
    (, ,)
    (NP (PRP he))
    (VP (MD will)
      (VP (VB be)
        (VP (VBG rising)
          (NP (DT the) (JJ next) (NN moment)))))
    (. .) ('' '')))

mark(setting-4, If-1)
nsubj(setting-4, he-2)
aux(setting-4, is-3)
advcl(rising-10, setting-4)
advmod(setting-4, now-5)
nsubj(rising-10, he-7)
aux(rising-10, will-8)
aux(rising-10, be-9)
root(ROOT-0, rising-10)
det(moment-13, the-11)
amod(moment-13, next-12)
dobj(rising-10, moment-13)

(ROOT
  (S (`` ``)
    (X
      (X (WP What))
      (NP (DT a) (JJ strange) (NN light)))
    (NP (PRP it))
    (VP (VBZ is))
    (. !) ('' '')))

dep(light-5, What-2)
det(light-5, a-3)
amod(light-5, strange-4)
dep(is-7, light-5)
nsubj(is-7, it-6)
root(ROOT-0, is-7)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN heard)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN sun))
            (VP (VBZ does) (RB n't)
              (VP (VB go)
                (PP (TO to)
                  (NP (NN bed)))
                (NP (PDT all) (DT the) (NN summer))
                (PP (IN in)
                  (NP (DT these) (NNS parts)))))))))
    (. .)))

nsubj(heard-4, I-2)
aux(heard-4, have-3)
root(ROOT-0, heard-4)
mark(go-10, that-5)
det(sun-7, the-6)
nsubj(go-10, sun-7)
aux(go-10, does-8)
neg(go-10, n't-9)
ccomp(heard-4, go-10)
prep_to(go-10, bed-12)
predet(summer-15, all-13)
det(summer-15, the-14)
tmod(go-10, summer-15)
det(parts-18, these-17)
prep_in(go-10, parts-18)

(ROOT
  (S
    (NP (NNP Miss) (NNP Coleman))
    (VP (VBD told)
      (S
        (NP (PRP me))
        (NP (DT that))))
    (. .)))

nn(Coleman-2, Miss-1)
nsubj(told-3, Coleman-2)
root(ROOT-0, told-3)
nsubj(that-5, me-4)
xcomp(told-3, that-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP suppose)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBZ feels)
              (ADJP (RB very) (JJ sleepy)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP
              (NP (DT the) (NN light))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBZ sends)
                    (PRT (RP out))))))
            (VP (VBZ looks)
              (ADVP (RB so))
              (PP (IN like)
                (NP (DT a) (NN dream))))))))
    (. .) ('' '')))

nsubj(suppose-2, I-1)
root(ROOT-0, suppose-2)
nsubj(feels-4, he-3)
ccomp(suppose-2, feels-4)
advmod(sleepy-6, very-5)
acomp(feels-4, sleepy-6)
nsubj(is-10, that-9)
conj_and(suppose-2, is-10)
advmod(looks-17, why-11)
det(light-13, the-12)
nsubj(looks-17, light-13)
nsubj(sends-15, he-14)
rcmod(light-13, sends-15)
prt(sends-15, out-16)
advcl(is-10, looks-17)
advmod(looks-17, so-18)
det(dream-21, a-20)
prep_like(looks-17, dream-21)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT That))
      (VP (MD will)
        (VP (VB account)
          (PP (IN for)
            (NP (PRP it)))
          (ADVP
            (ADVP (RB well) (RB enough))
            (PP (IN for)
              (NP (DT all) (JJ practical) (NNS purposes)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP North) (NNP Wind))
    (. .)))

nsubj(account-4, That-2)
aux(account-4, will-3)
ccomp(said-15, account-4)
prep_for(account-4, it-6)
advmod(enough-8, well-7)
advmod(account-4, enough-8)
det(purposes-12, all-10)
amod(purposes-12, practical-11)
prep_for(enough-8, purposes-12)
root(ROOT-0, said-15)
nn(Wind-17, North-16)
nsubj(said-15, Wind-17)

(ROOT
  (S
    (S
      (NP
        (NP (DT Some))
        (PP (IN of)
          (NP (DT the) (NNS icebergs))))
      (VP (VBD were)
        (VP (VBG drifting)
          (NP (NNS northwards)))))
    (: ;)
    (S
      (NP (PRP one))
      (VP (VBD was)
        (VP (VBG passing)
          (ADVP (RB very)
            (PP (IN near)
              (NP (DT the) (NN ship)))))))
    (. .)))

nsubj(drifting-6, Some-1)
det(icebergs-4, the-3)
prep_of(Some-1, icebergs-4)
aux(drifting-6, were-5)
root(ROOT-0, drifting-6)
dobj(drifting-6, northwards-7)
nsubj(passing-11, one-9)
aux(passing-11, was-10)
parataxis(drifting-6, passing-11)
advmod(passing-11, very-12)
det(ship-15, the-14)
prep_near(very-12, ship-15)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP
      (VP (VBD seized)
        (NP (NNP Diamond)))
      (, ,)
      (CC and)
      (VP
        (PP (IN with)
          (NP
            (NP
              (NP (DT a) (JJ single) (NN bound))
              (ADJP (JJ lighted)
                (PP (IN on)
                  (NP
                    (NP (CD one))
                    (PP (IN of)
                      (NP (PRP them)))))))
            (: --)
            (NP (DT a) (JJ huge) (NN thing))
            (, ,)))
        (PP (IN with)
          (NP
            (NP (JJ sharp) (NNS pinnacles))
            (CC and)
            (NP (JJ great) (NNS clefts))))))
    (. .)))

nn(Wind-2, North-1)
nsubj(seized-3, Wind-2)
root(ROOT-0, seized-3)
dobj(seized-3, Diamond-4)
conj_and(seized-3, with-7)
det(bound-10, a-8)
amod(bound-10, single-9)
pobj(with-7, bound-10)
amod(bound-10, lighted-11)
prep_on(lighted-11, one-13)
prep_of(one-13, them-15)
det(thing-19, a-17)
amod(thing-19, huge-18)
dep(bound-10, thing-19)
amod(pinnacles-23, sharp-22)
prep_with(with-7, pinnacles-23)
amod(clefts-26, great-25)
prep_with(with-7, clefts-26)
conj_and(pinnacles-23, clefts-26)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ same) (NN instant))
      (NP (DT a) (NN wind)))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB blow)
            (PP (IN from)
              (NP (DT the) (NN south)))))))
    (. .)))

det(instant-3, The-1)
amod(instant-3, same-2)
nsubj(began-6, instant-3)
nsubj(blow-8, instant-3)
det(wind-5, a-4)
dep(instant-3, wind-5)
root(ROOT-0, began-6)
aux(blow-8, to-7)
xcomp(began-6, blow-8)
det(south-11, the-10)
prep_from(blow-8, south-11)

(ROOT
  (S
    (NP
      (NP (NNP North) (NNP Wind))
      (VP (VBN hurried)
        (S
          (VP
            (VP (VBG Diamond)
              (PRT (RP down))
              (NP
                (NP (DT the) (NN north) (NN side))
                (PP (IN of)
                  (NP (DT the) (NN iceberg)))))
            (, ,)
            (VP (VBG stepping)
              (PP (IN by)
                (NP (PRP$ its) (NNS jags))))
            (CC and)
            (VP (VBG splintering))))
        (: ;)
        (PP (IN for)
          (NP (DT this) (NN berg)))))
    (VP (VBD had)
      (ADVP (RB never))
      (VP (VBN got)
        (ADVP (RB far) (RB enough) (RB south))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN melted)
                (CC and)
                (VBN smoothed)
                (PP (IN by)
                  (NP (DT the) (NN summer) (NN sun)))))))))
    (. .)))

nn(Wind-2, North-1)
nsubj(got-25, Wind-2)
nsubjpass(melted-31, Wind-2)
nsubjpass(smoothed-33, Wind-2)
vmod(Wind-2, hurried-3)
ccomp(hurried-3, Diamond-4)
prt(Diamond-4, down-5)
det(side-8, the-6)
nn(side-8, north-7)
dobj(Diamond-4, side-8)
det(iceberg-11, the-10)
prep_of(side-8, iceberg-11)
ccomp(hurried-3, stepping-13)
conj_and(Diamond-4, stepping-13)
poss(jags-16, its-15)
prep_by(stepping-13, jags-16)
ccomp(hurried-3, splintering-18)
conj_and(Diamond-4, splintering-18)
det(berg-22, this-21)
prep_for(hurried-3, berg-22)
aux(got-25, had-23)
neg(got-25, never-24)
root(ROOT-0, got-25)
advmod(south-28, far-26)
advmod(south-28, enough-27)
advmod(got-25, south-28)
aux(melted-31, to-29)
auxpass(melted-31, be-30)
xcomp(got-25, melted-31)
xcomp(got-25, smoothed-33)
conj_and(melted-31, smoothed-33)
det(sun-37, the-35)
nn(sun-37, summer-36)
agent(melted-31, sun-37)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD brought)
        (NP (PRP him))
        (PP (TO to)
          (NP
            (NP (DT a) (NN cave))
            (PP (IN near)
              (NP
                (NP (DT the) (NN water))
                (, ,)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP she))
                    (VP (VBD entered))))
                (, ,))))))
      (CC and)
      (PRN (, ,)
        (S
          (NP (NNP letting) (NNP Diamond))
          (VP (VBP go)))
        (, ,))
      (VP (VBD sat)
        (ADVP
          (ADVP (RB down) (RB as))
          (SBAR (IN if)
            (FRAG
              (ADJP (JJ weary)))))
        (PP (IN on)
          (NP
            (NP (DT a) (NN ledge))
            (PP (IN of)
              (NP (NN ice)))))))
    (. .)))

nsubj(brought-2, She-1)
nsubj(sat-21, She-1)
root(ROOT-0, brought-2)
dobj(brought-2, him-3)
det(cave-6, a-5)
prep_to(brought-2, cave-6)
det(water-9, the-8)
prep_near(cave-6, water-9)
advmod(entered-13, where-11)
nsubj(entered-13, she-12)
rcmod(water-9, entered-13)
nn(Diamond-18, letting-17)
nsubj(go-19, Diamond-18)
parataxis(brought-2, go-19)
parataxis(sat-21, go-19)
conj_and(brought-2, sat-21)
advmod(as-23, down-22)
advmod(sat-21, as-23)
mark(weary-25, if-24)
advcl(as-23, weary-25)
det(ledge-28, a-27)
prep_on(sat-21, ledge-28)
prep_of(ledge-28, ice-30)

(ROOT
  (S
    (NP
      (NP (NNP Diamond))
      (VP (VBN seated)
        (NP (PRP himself))
        (PP
          (PP (IN on)
            (NP (DT the) (JJ other) (NN side)))
          (, ,)
          (CC and)
          (PP (IN for)
            (NP (DT a) (NN while))))))
    (VP (VBD was)
      (VP (VBN enraptured)
        (PP (IN with)
          (NP
            (NP (DT the) (NN colour))
            (PP (IN of)
              (NP
                (NP (DT the) (NN air))
                (PP (IN inside)
                  (NP (DT the) (NN cave)))))))))
    (. .)))

nsubjpass(enraptured-14, Diamond-1)
vmod(Diamond-1, seated-2)
vmod(Diamond-1, seated-2')
conj_and(seated-2, seated-2')
dobj(seated-2, himself-3)
det(side-7, the-5)
amod(side-7, other-6)
prep_on(seated-2, side-7)
det(while-12, a-11)
prep_for(seated-2', while-12)
auxpass(enraptured-14, was-13)
root(ROOT-0, enraptured-14)
det(colour-17, the-16)
prep_with(enraptured-14, colour-17)
det(air-20, the-19)
prep_of(colour-17, air-20)
det(cave-23, the-22)
prep_inside(air-20, cave-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a) (JJ deep) (, ,) (JJ dazzling) (, ,) (JJ lovely) (NN blue))
      (, ,)
      (ADVP
        (ADVP (RBR deeper))
        (PP (IN than)
          (NP
            (NP (DT the) (JJS deepest) (NN blue))
            (PP (IN of)
              (NP (DT the) (NN sky)))))))
    (. .)))

nsubj(blue-9, It-1)
cop(blue-9, was-2)
det(blue-9, a-3)
amod(blue-9, deep-4)
amod(blue-9, dazzling-6)
amod(blue-9, lovely-8)
root(ROOT-0, blue-9)
advmod(blue-9, deeper-11)
det(blue-15, the-13)
amod(blue-15, deepest-14)
prep_than(deeper-11, blue-15)
det(sky-18, the-17)
prep_of(blue-15, sky-18)

(ROOT
  (S
    (NP (DT The) (NN blue))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB be)
            (PP (IN in)
              (NP (JJ constant) (NN motion)))
            (, ,)
            (PP (IN like)
              (NP
                (NP (DT the) (NNS blackness))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP you))
                    (VP (VBP press)
                      (NP (PRP$ your) (NNS eyeballs))
                      (PP (IN with)
                        (NP (PRP$ your) (NNS fingers)))))))))))
      (, ,)
      (S
        (VP (VBG boiling)
          (CC and)
          (VBG sparkling))))
    (. .)))

det(blue-2, The-1)
nsubj(seemed-3, blue-2)
nsubj(be-5, blue-2)
root(ROOT-0, seemed-3)
aux(be-5, to-4)
xcomp(seemed-3, be-5)
amod(motion-8, constant-7)
prep_in(be-5, motion-8)
det(blackness-12, the-11)
prep_like(be-5, blackness-12)
tmod(press-15, blackness-12)
advmod(press-15, when-13)
nsubj(press-15, you-14)
rcmod(blackness-12, press-15)
poss(eyeballs-17, your-16)
dobj(press-15, eyeballs-17)
poss(fingers-20, your-19)
prep_with(press-15, fingers-20)
xcomp(seemed-3, boiling-22)
xcomp(seemed-3, sparkling-24)
conj_and(boiling-22, sparkling-24)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBD looked)
          (PRT (RP across))
          (PP (TO to)
            (NP (NNP North) (NNP Wind))))))
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ frightened))))
    (: ;)
    (S
      (NP (PRP$ her) (NN face))
      (VP (VBD was)
        (ADJP (JJ worn)
          (CC and)
          (JJ livid))))
    (. .)))

cc(frightened-11, But-1)
advmod(looked-4, when-2)
nsubj(looked-4, he-3)
advcl(frightened-11, looked-4)
prt(looked-4, across-5)
nn(Wind-8, North-7)
prep_to(looked-4, Wind-8)
nsubj(frightened-11, he-9)
cop(frightened-11, was-10)
root(ROOT-0, frightened-11)
poss(face-14, her-13)
nsubj(worn-16, face-14)
nsubj(livid-18, face-14)
cop(worn-16, was-15)
parataxis(frightened-11, worn-16)
parataxis(frightened-11, livid-18)
conj_and(worn-16, livid-18)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN matter))
        (PP (IN with)
          (NP
            (NP (PRP you))
            (, ,)
            (NP
              (ADJP (RB dear))
              (NNP North) (NN Wind))))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
det(matter-5, the-4)
nsubj(What-2, matter-5)
prep_with(matter-5, you-7)
amod(Wind-11, dear-9)
nn(Wind-11, North-10)
appos(you-7, Wind-11)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (VP (VB Nothing)
      (ADVP (RB much)))
    (. .)))

root(ROOT-0, Nothing-2)
advmod(Nothing-2, much-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP feel)
      (ADJP (RB very) (JJ faint)))
    (. .)))

nsubj(feel-2, I-1)
root(ROOT-0, feel-2)
advmod(faint-4, very-3)
acomp(feel-2, faint-4)

(ROOT
  (S (CC But)
    (NP (PRP you))
    (VP (MD must) (RB n't)
      (VP (VB mind)
        (NP (PRP it))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP I))
            (VP (MD can)
              (VP (VB bear)
                (NP (PRP it))
                (ADVP (RB quite) (RB well))))))))
    (. .)))

cc(mind-5, But-1)
nsubj(mind-5, you-2)
aux(mind-5, must-3)
neg(mind-5, n't-4)
root(ROOT-0, mind-5)
dobj(mind-5, it-6)
mark(bear-11, for-8)
nsubj(bear-11, I-9)
aux(bear-11, can-10)
advcl(mind-5, bear-11)
dobj(bear-11, it-12)
advmod(well-14, quite-13)
advmod(bear-11, well-14)

(ROOT
  (S
    (NP (NNP South) (NNP Wind))
    (ADVP (RB always))
    (VP (VBZ blows)
      (S
        (NP (PRP me))
        (ADJP (JJ faint))))
    (. .)))

nn(Wind-2, South-1)
nsubj(blows-4, Wind-2)
advmod(blows-4, always-3)
root(ROOT-0, blows-4)
nsubj(faint-6, me-5)
xcomp(blows-4, faint-6)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD were) (RB not)
          (PP (IN for)
            (NP
              (NP (DT the) (NN cool))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ thick) (NN ice))
                  (PP (IN between)
                    (NP
                      (NP (PRP me))
                      (CC and)
                      (NP (PRP her)))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB faint)
        (ADVP (RB altogether))))
    (. .)))

mark(were-3, If-1)
nsubj(were-3, it-2)
advcl(faint-19, were-3)
neg(were-3, not-4)
det(cool-7, the-6)
prep_for(were-3, cool-7)
det(ice-11, the-9)
amod(ice-11, thick-10)
prep_of(cool-7, ice-11)
prep_between(ice-11, me-13)
prep_between(ice-11, her-15)
conj_and(me-13, her-15)
nsubj(faint-19, I-17)
aux(faint-19, should-18)
root(ROOT-0, faint-19)
advmod(faint-19, altogether-20)

(ROOT
  (S
    (ADVP (RB Indeed))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP it))
        (VP (VBZ is))))
    (, ,)
    (NP (PRP I))
    (VP (VBP fear)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD must)
            (VP (VB vanish))))))
    (. .) ('' '')))

advmod(fear-8, Indeed-1)
mark(is-5, as-3)
nsubj(is-5, it-4)
advcl(fear-8, is-5)
nsubj(fear-8, I-7)
root(ROOT-0, fear-8)
nsubj(vanish-11, I-9)
aux(vanish-11, must-10)
ccomp(fear-8, vanish-11)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD stared)
      (PP (IN at)
        (NP (PRP her)))
      (PP (IN in)
        (NP (NN terror)))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD saw)
            (SBAR (IN that)
              (S
                (NP (PRP$ her) (NN form)
                  (CC and)
                  (NN face))
                (VP (VBD were)
                  (ADJP
                    (ADJP (JJ growing))
                    (, ,)
                    (ADJP (RB not) (JJ small))
                    (, ,)
                    (CC but)
                    (ADJP (JJ transparent)))
                  (, ,)
                  (PP (IN like)
                    (NP
                      (NP (NN something))
                      (VP (VBG dissolving) (, ,)
                        (PP (RB not)
                          (PP (IN in)
                            (NP (NN water)))
                          (, ,)
                          (CC but)
                          (PP (IN in)
                            (NP (NN light))))))))))))))
    (. .)))

nsubj(stared-2, Diamond-1)
root(ROOT-0, stared-2)
prep_at(stared-2, her-4)
prep_in(stared-2, terror-6)
mark(saw-10, for-8)
nsubj(saw-10, he-9)
advcl(stared-2, saw-10)
mark(growing-17, that-11)
poss(form-13, her-12)
nsubj(growing-17, form-13)
nsubj(small-20, form-13)
nsubj(transparent-23, form-13)
conj_and(form-13, face-15)
nsubj(growing-17, face-15)
cop(growing-17, were-16)
ccomp(saw-10, growing-17)
neg(small-20, not-19)
ccomp(saw-10, small-20)
conj_but(growing-17, small-20)
ccomp(saw-10, transparent-23)
conj_but(growing-17, transparent-23)
prep_like(growing-17, something-26)
vmod(something-26, dissolving-27)
neg(dissolving-27, not-29)
prep_in(dissolving-27, water-31)
prep_in(dissolving-27, light-35)
conj_but(water-31, light-35)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD could)
      (VP (VB see)
        (NP
          (NP (DT the) (NN side))
          (PP (IN of)
            (NP (DT the) (JJ blue) (NN cave))))
        (PP (IN through)
          (NP (PRP$ her) (JJ very) (NN heart)))))
    (. .)))

nsubj(see-3, He-1)
aux(see-3, could-2)
root(ROOT-0, see-3)
det(side-5, the-4)
dobj(see-3, side-5)
det(cave-9, the-7)
amod(cave-9, blue-8)
prep_of(side-5, cave-9)
poss(heart-13, her-11)
amod(heart-13, very-12)
prep_through(see-3, heart-13)

(ROOT
  (S (CC And)
    (NP (PRP she))
    (VP (VBD melted)
      (PRT (RP away))
      (SBAR (IN till)
        (S
          (NP
            (NP (DT all))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD was)
                  (VP (VBN left))))))
          (VP (VBD was)
            (NP (DT a) (JJ pale) (NN face))
            (, ,)
            (PP (IN like)
              (NP
                (NP (DT the) (NN moon))
                (PP (IN in)
                  (NP (DT the) (NN morning)))))
            (, ,)
            (PP (IN with)
              (NP
                (NP (CD two) (JJ great) (JJ lucid) (NNS eyes))
                (PP (IN in)
                  (NP (PRP it)))))))))
    (. .)))

cc(melted-3, And-1)
nsubj(melted-3, she-2)
root(ROOT-0, melted-3)
prt(melted-3, away-4)
mark(face-13, till-5)
nsubjpass(left-9, all-6)
nsubj(face-13, all-6)
auxpass(left-9, was-8)
rcmod(all-6, left-9)
cop(face-13, was-10)
det(face-13, a-11)
amod(face-13, pale-12)
advcl(melted-3, face-13)
det(moon-17, the-16)
prep_like(face-13, moon-17)
det(morning-20, the-19)
prep_in(moon-17, morning-20)
num(eyes-26, two-23)
amod(eyes-26, great-24)
amod(eyes-26, lucid-25)
prep_with(face-13, eyes-26)
prep_in(eyes-26, it-28)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG going) (, ,)
          (ADVP (RB Diamond)))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(going-4, I-2)
aux(going-4, am-3)
ccomp(said-10, going-4)
advmod(going-4, Diamond-6)
nsubj(said-10, she-9)
root(ROOT-0, said-10)

(ROOT
  (S (`` ``)
    (ADVP (RB Does))
    (NP (PRP it))
    (VP (VBP hurt)
      (NP (PRP you)))
    (. ?) ('' '')))

advmod(hurt-4, Does-2)
nsubj(hurt-4, it-3)
root(ROOT-0, hurt-4)
dobj(hurt-4, you-5)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)

(ROOT
  (S
    (S
      (S (`` ``)
        (S
          (NP (PRP It))
          (VP (VBZ 's)
            (ADJP (RB very) (JJ uncomfortable))))
        (, ,) ('' '')
        (NP (PRP she))
        (VP (VBD answered)))
      (: ;) (`` ``)
      (CC but)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB mind)
            (NP (PRP it))))))
    (, ,) (IN for)
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB come)
          (NP (DT all) (NN right))
          (ADVP (RB again) (IN before) (JJ long)))))
    (. .)))

nsubj(uncomfortable-5, It-2)
cop(uncomfortable-5, 's-3)
advmod(uncomfortable-5, very-4)
ccomp(answered-9, uncomfortable-5)
nsubj(answered-9, she-8)
root(ROOT-0, answered-9)
nsubj(mind-16, I-13)
aux(mind-16, do-14)
neg(mind-16, n't-15)
conj_but(answered-9, mind-16)
dobj(mind-16, it-17)
dep(answered-9, for-19)
nsubj(come-22, I-20)
aux(come-22, shall-21)
parataxis(answered-9, come-22)
det(right-24, all-23)
dobj(come-22, right-24)
advmod(before-26, again-25)
advmod(come-22, before-26)
advmod(before-26, long-27)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB go)
                        (PP (IN with)
                          (NP (PRP you)))
                        (NP
                          (NP (DT all))
                          (NP (DT the) (NN way)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)))
    (. .)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(able-6, I-3)
nsubj(go-8, I-3)
aux(able-6, should-4)
cop(able-6, be-5)
ccomp(thought-2, able-6)
aux(go-8, to-7)
xcomp(able-6, go-8)
prep_with(go-8, you-10)
dobj(go-8, all-11)
iobj(go-8, all-11)
det(way-13, the-12)
dep(all-11, way-13)
nsubj(can-17, I-16)
conj_but(thought-2, can-17)
neg(can-17, not-18)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must) (RB not)
      (VP (VB be)
        (ADJP (JJ frightened))
        (ADVP (RB though))))
    (. .)))

nsubj(frightened-5, You-1)
aux(frightened-5, must-2)
neg(frightened-5, not-3)
cop(frightened-5, be-4)
root(ROOT-0, frightened-5)
advmod(frightened-5, though-6)

(ROOT
  (S
    (S
      (ADVP (RB Just))
      (VP (VB go)
        (ADVP (RB straight))
        (PP (IN on))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB come)
          (NP (DT all) (NN right)))))
    (. .)))

advmod(go-2, Just-1)
root(ROOT-0, go-2)
advmod(go-2, straight-3)
prep(go-2, on-4)
nsubj(come-9, you-7)
aux(come-9, will-8)
conj_and(go-2, come-9)
det(right-11, all-10)
dobj(come-9, right-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD 'll)
      (VP (VB find)
        (NP (PRP me))
        (PP (IN on)
          (NP (DT the) (NN doorstep)))))
    (. .) ('' '')))

nsubj(find-3, You-1)
aux(find-3, 'll-2)
root(ROOT-0, find-3)
dobj(find-3, me-4)
det(doorstep-7, the-6)
prep_on(find-3, doorstep-7)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP she))
        (VP (VBD spoke))))
    (, ,)
    (NP (PRP$ her) (NN face))
    (ADVP (RB too))
    (VP (VBD faded)
      (ADVP (RB quite) (RB away))
      (, ,)
      (SBAR (RB only)
        (S
          (NP (NNP Diamond))
          (VP (VBD thought)
            (SBAR
              (S
                (NP (PRP he))
                (VP (MD could)
                  (ADVP (RB still))
                  (VP (VB see)
                    (NP (PRP$ her) (NNS eyes))
                    (S
                      (VP (VBG shining)
                        (PP (IN through)
                          (NP (DT the) (NN blue)))))))))))))
    (. .)))

mark(spoke-3, As-1)
nsubj(spoke-3, she-2)
advcl(faded-8, spoke-3)
poss(face-6, her-5)
nsubj(faded-8, face-6)
advmod(faded-8, too-7)
root(ROOT-0, faded-8)
advmod(away-10, quite-9)
advmod(faded-8, away-10)
advmod(thought-14, only-12)
nsubj(thought-14, Diamond-13)
ccomp(faded-8, thought-14)
nsubj(see-18, he-15)
aux(see-18, could-16)
advmod(see-18, still-17)
ccomp(thought-14, see-18)
poss(eyes-20, her-19)
dobj(see-18, eyes-20)
xcomp(see-18, shining-21)
det(blue-24, the-23)
prep_through(shining-21, blue-24)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD went)
          (ADJP (JJR closer)))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP he))
    (VP (VBD found)
      (NP
        (NP (DT that))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (VP (VBD thought)
              (SBAR
                (S
                  (NP (PRP$ her) (NNS eyes))
                  (VP (VBD were)
                    (NP
                      (NP (RB only) (CD two) (NNS hollows))
                      (PP (IN in)
                        (NP (DT the) (NN ice))))))))))))
    (. .)))

advmod(went-3, When-1)
nsubj(went-3, he-2)
advcl(found-9, went-3)
acomp(went-3, closer-4)
advmod(found-9, however-6)
nsubj(found-9, he-8)
root(ROOT-0, found-9)
dobj(found-9, that-10)
dobj(thought-13, that-10)
nsubj(thought-13, he-12)
rcmod(that-10, thought-13)
poss(eyes-15, her-14)
nsubj(hollows-19, eyes-15)
cop(hollows-19, were-16)
advmod(hollows-19, only-17)
num(hollows-19, two-18)
ccomp(thought-13, hollows-19)
det(ice-22, the-21)
prep_in(hollows-19, ice-22)

(ROOT
  (S
    (S
      (NP (NNP North) (NNP Wind))
      (VP (VBD was)
        (ADJP (RB quite) (VBN gone))))
    (: ;)
    (CC and)
    (S
      (NP (NNP Diamond))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN cried) (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP he))
                (VP (VBD had) (RB not)
                  (VP (VBN trusted)
                    (S
                      (NP (PRP her))
                      (ADJP (RB so) (RB thoroughly)))))))))))
    (. .)))

nn(Wind-2, North-1)
nsubjpass(gone-5, Wind-2)
auxpass(gone-5, was-3)
advmod(gone-5, quite-4)
root(ROOT-0, gone-5)
nsubj(cried-11, Diamond-8)
aux(cried-11, would-9)
aux(cried-11, have-10)
conj_and(gone-5, cried-11)
mark(trusted-17, if-13)
nsubj(trusted-17, he-14)
aux(trusted-17, had-15)
neg(trusted-17, not-16)
advcl(cried-11, trusted-17)
nsubj(thoroughly-20, her-18)
advmod(thoroughly-20, so-19)
xcomp(trusted-17, thoroughly-20)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBD sat)
      (ADVP (RB still))
      (PP (IN in)
        (NP
          (NP (DT the) (JJ blue) (NN air))
          (PP (IN of)
            (NP
              (NP (DT the) (NN cavern))
              (VP (VBG listening)
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN wash)
                      (CC and)
                      (NN ripple))
                    (PP (IN of)
                      (NP (DT the) (NN water)))))
                (PP (DT all) (IN about)
                  (NP
                    (NP (DT the) (NN base))
                    (PP (IN of)
                      (NP (DT the) (NN iceberg)))))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBD sped)
                      (PP (IN on)
                        (CC and)
                        (IN on)
                        (PP (IN into)
                          (NP (DT the) (JJ open) (NN sea) (NNS northwards)))))))))))))
    (. .)))

dep(sat-3, So-1)
nsubj(sat-3, he-2)
root(ROOT-0, sat-3)
advmod(sat-3, still-4)
det(air-8, the-6)
amod(air-8, blue-7)
prep_in(sat-3, air-8)
det(cavern-11, the-10)
prep_of(air-8, cavern-11)
vmod(cavern-11, listening-12)
det(wash-15, the-14)
prep_to(listening-12, wash-15)
prep_to(listening-12, ripple-17)
conj_and(wash-15, ripple-17)
det(water-20, the-19)
prep_of(wash-15, water-20)
dep(listening-12, all-21)
det(base-24, the-23)
prep_about(listening-12, base-24)
det(iceberg-27, the-26)
prep_of(base-24, iceberg-27)
mark(sped-31, as-29)
nsubj(sped-31, it-30)
advcl(listening-12, sped-31)
prep(sped-31, on-32)
prep(sped-31, on-34)
conj_and(on-32, on-34)
pcomp(on-32, into-35)
det(northwards-39, the-36)
amod(northwards-39, open-37)
nn(northwards-39, sea-38)
pobj(into-35, northwards-39)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT an) (JJ excellent) (NN craft)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN with)
                (NP (DT the) (JJ current)))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (EX there))
                  (VP (VBD was)
                    (NP
                      (NP
                        (QP (RB twice) (RB as) (JJ much)))
                      (PP (IN of)
                        (NP (PRP it))))
                    (PP (IN below)
                      (NP
                        (NP (NN water))
                        (ADJP (RB as) (JJ above))))))))))))
    (. .)))

nsubj(craft-5, It-1)
cop(craft-5, was-2)
det(craft-5, an-3)
amod(craft-5, excellent-4)
root(ROOT-0, craft-5)
aux(go-7, to-6)
vmod(craft-5, go-7)
det(current-10, the-9)
prep_with(go-7, current-10)
mark(was-14, for-12)
expl(was-14, there-13)
advcl(go-7, was-14)
quantmod(much-17, twice-15)
quantmod(much-17, as-16)
nsubj(was-14, much-17)
prep_of(much-17, it-19)
prep_below(was-14, water-21)
advmod(above-23, as-22)
amod(water-21, above-23)

(ROOT
  (S (CC But)
    (S
      (NP (DT a) (JJ light) (NN south) (NN wind))
      (VP (VBD was)
        (VP (VBG blowing)
          (ADVP (RB too)))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (PRP it))
      (VP (VBD went)
        (ADVP (RB fast))))
    (. .)))

det(wind-5, a-2)
amod(wind-5, light-3)
nn(wind-5, south-4)
nsubj(blowing-7, wind-5)
aux(blowing-7, was-6)
root(ROOT-0, blowing-7)
advmod(blowing-7, too-8)
conj_and(blowing-7, so-11)
nsubj(went-13, it-12)
ccomp(blowing-7, went-13)
advmod(went-13, fast-14)

(ROOT
  (S
    (PP (IN After)
      (NP (DT a) (JJ little) (NN while)))
    (NP (NNP Diamond))
    (VP
      (VP (VBD went)
        (PRT (RP out)))
      (CC and)
      (VP (VBD sat)
        (PP (IN on)
          (NP
            (NP (DT the) (NN edge))
            (PP (IN of)
              (NP (PRP$ his) (JJ floating) (NN island))))))
      (, ,)
      (CC and)
      (VP (VBD looked)
        (PRT (RP down))
        (PP (IN into)
          (NP (DT the) (NN ocean)))
        (PP (IN beneath)
          (NP (PRP him)))))
    (. .)))

det(while-4, a-2)
amod(while-4, little-3)
prep_after(went-6, while-4)
nsubj(went-6, Diamond-5)
nsubj(sat-9, Diamond-5)
nsubj(looked-19, Diamond-5)
root(ROOT-0, went-6)
prt(went-6, out-7)
conj_and(went-6, sat-9)
det(edge-12, the-11)
prep_on(sat-9, edge-12)
poss(island-16, his-14)
amod(island-16, floating-15)
prep_of(edge-12, island-16)
conj_and(went-6, looked-19)
prt(looked-19, down-20)
det(ocean-23, the-22)
prep_into(looked-19, ocean-23)
prep_beneath(looked-19, him-25)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ white) (NNS sides))
      (PP (IN of)
        (NP (DT the) (NN berg))))
    (VP (VBD reflected)
      (ADJP (RB so) (RB much) (JJ light))
      (PP (IN below)
        (NP (DT the) (NN water)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB see)
              (ADVP (RB far) (RB down))
              (PP (IN into)
                (NP (DT the) (JJ green) (NNS abyss))))))))
    (. .)))

det(sides-3, The-1)
amod(sides-3, white-2)
nsubj(reflected-7, sides-3)
det(berg-6, the-5)
prep_of(sides-3, berg-6)
root(ROOT-0, reflected-7)
advmod(light-10, so-8)
advmod(light-10, much-9)
acomp(reflected-7, light-10)
det(water-13, the-12)
prep_below(reflected-7, water-13)
mark(see-18, that-15)
nsubj(see-18, he-16)
aux(see-18, could-17)
ccomp(reflected-7, see-18)
advmod(down-20, far-19)
advmod(see-18, down-20)
det(abyss-24, the-22)
amod(abyss-24, green-23)
prep_into(see-18, abyss-24)

(ROOT
  (S
    (S
      (ADVP (RB Sometimes))
      (NP (PRP he))
      (VP (VBD fancied)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD saw)
              (NP
                (NP (DT the) (NNS eyes))
                (PP (IN of)
                  (NP
                    (NP (NNP North) (NNP Wind))
                    (VP (VBG looking)
                      (PRT (RP up))
                      (PP (IN at)
                        (NP (PRP him)))
                      (PP (IN from)
                        (ADVP (RB below))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN fancy))
      (ADVP (RB never))
      (VP (VBD lasted)
        (PP (IN beyond)
          (NP
            (NP (DT the) (NN moment))
            (PP (IN of)
              (NP (PRP$ its) (NN birth)))))))
    (. .)))

advmod(fancied-3, Sometimes-1)
nsubj(fancied-3, he-2)
root(ROOT-0, fancied-3)
nsubj(saw-5, he-4)
ccomp(fancied-3, saw-5)
det(eyes-7, the-6)
dobj(saw-5, eyes-7)
nn(Wind-10, North-9)
prep_of(eyes-7, Wind-10)
vmod(Wind-10, looking-11)
prt(looking-11, up-12)
prep_at(looking-11, him-14)
prep(looking-11, from-15)
pcomp(from-15, below-16)
det(fancy-20, the-19)
nsubj(lasted-22, fancy-20)
neg(lasted-22, never-21)
conj_but(fancied-3, lasted-22)
det(moment-25, the-24)
prep_beyond(lasted-22, moment-25)
poss(birth-28, its-27)
prep_of(moment-25, birth-28)

(ROOT
  (S (CC And)
    (NP (DT the) (NN time))
    (VP (VBD passed)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD did) (RB not)
            (VP (VB know)
              (NP (WRB how))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP he))
                  (VP (VBD felt)
                    (SBAR (RB as) (IN if)
                      (S
                        (NP (PRP he))
                        (VP (VBD were)
                          (PP (IN in)
                            (NP (DT a) (NN dream))))))))))))))
    (. .)))

cc(passed-4, And-1)
det(time-3, the-2)
nsubj(passed-4, time-3)
root(ROOT-0, passed-4)
nsubj(know-8, he-5)
aux(know-8, did-6)
neg(know-8, not-7)
ccomp(passed-4, know-8)
dobj(know-8, how-9)
mark(felt-13, for-11)
nsubj(felt-13, he-12)
advcl(know-8, felt-13)
advmod(were-17, as-14)
mark(were-17, if-15)
nsubj(were-17, he-16)
advcl(felt-13, were-17)
det(dream-20, a-19)
prep_in(were-17, dream-20)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP he))
          (VP (VBD got)
            (ADJP (JJ tired))
            (PP (IN of)
              (NP (DT the) (JJ green) (NN water))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD went)
        (PP (IN into)
          (NP (DT the) (JJ blue) (NN cave)))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD got)
            (ADJP (JJ tired))
            (PP (IN of)
              (NP (DT the) (JJ blue) (NN cave))))))
      (NP (PRP he))
      (VP
        (VP (VBD went)
          (PRT (RP out)))
        (CC and)
        (VP (VBD gazed)
          (NP
            (NP (DT all))
            (PP (IN about)
              (NP (PRP him))))
          (PP (IN on)
            (NP
              (NP (DT the) (JJ blue) (NN sea))
              (, ,)
              (NP
                (NP (RB ever) (JJ sparkling))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN sun))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBD kept)
                          (NP
                            (NP (NN wheeling))
                            (PP (IN about)
                              (NP (DT the) (NN sky))))
                          (, ,)
                          (S
                            (ADVP (RB never))
                            (VP (VBG going)
                              (PP (IN below)
                                (NP (DT the) (NN horizon))))))))))))))))
    (. .)))

advmod(tired-4, When-1)
nsubj(tired-4, he-2)
dep(tired-4, got-3)
advcl(went-11, tired-4)
det(water-8, the-6)
amod(water-8, green-7)
prep_of(tired-4, water-8)
nsubj(went-11, he-10)
root(ROOT-0, went-11)
det(cave-15, the-13)
amod(cave-15, blue-14)
prep_into(went-11, cave-15)
advmod(tired-21, when-18)
nsubj(tired-21, he-19)
dep(tired-21, got-20)
advcl(went-27, tired-21)
det(cave-25, the-23)
amod(cave-25, blue-24)
prep_of(tired-21, cave-25)
nsubj(went-27, he-26)
nsubj(gazed-30, he-26)
conj_and(went-11, went-27)
prt(went-27, out-28)
conj_and(went-11, gazed-30)
conj_and(went-27, gazed-30)
dobj(gazed-30, all-31)
prep_about(all-31, him-33)
det(sea-37, the-35)
amod(sea-37, blue-36)
prep_on(gazed-30, sea-37)
advmod(sparkling-40, ever-39)
appos(sea-37, sparkling-40)
det(sun-43, the-42)
prep_in(sparkling-40, sun-43)
nsubj(kept-46, sun-43)
rcmod(sun-43, kept-46)
dobj(kept-46, wheeling-47)
det(sky-50, the-49)
prep_about(wheeling-47, sky-50)
neg(going-53, never-52)
vmod(kept-46, going-53)
det(horizon-56, the-55)
prep_below(going-53, horizon-56)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (ADVP (RB chiefly))
    (VP (VBD gazed)
      (NP (NNS northwards))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB see)
            (SBAR (IN whether)
              (S
                (NP (DT any) (NN land))
                (VP (VBD were)
                  (VP (VBG appearing)))))))))
    (. .)))

cc(gazed-4, But-1)
nsubj(gazed-4, he-2)
advmod(gazed-4, chiefly-3)
root(ROOT-0, gazed-4)
dobj(gazed-4, northwards-5)
aux(see-8, to-7)
vmod(gazed-4, see-8)
mark(appearing-13, whether-9)
det(land-11, any-10)
nsubj(appearing-13, land-11)
aux(appearing-13, were-12)
ccomp(see-8, appearing-13)

(ROOT
  (S
    (NP (PDT All) (DT this) (NN time))
    (NP (PRP he))
    (VP
      (ADVP (RB never))
      (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB eat)))))
    (. .)))

predet(time-3, All-1)
det(time-3, this-2)
nsubj(wanted-6, time-3)
nsubj(eat-8, time-3)
nsubj(wanted-6, he-4)
nsubj(eat-8, he-4)
neg(wanted-6, never-5)
root(ROOT-0, wanted-6)
aux(eat-8, to-7)
xcomp(wanted-6, eat-8)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD broke)
          (PRT (RP off))
          (NP
            (NP (JJ little) (NNS bits))
            (PP (IN of)
              (NP
                (NP (DT the) (NN berg))
                (ADVP (RB now)
                  (CC and)
                  (RB then))))))
        (CC and)
        (VP (VBD sucked)
          (NP (PRP them)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD thought)
        (S
          (NP (PRP them))
          (ADJP (RB very) (JJ nice)))))
    (. .)))

nsubj(broke-2, He-1)
nsubj(sucked-13, He-1)
root(ROOT-0, broke-2)
prt(broke-2, off-3)
amod(bits-5, little-4)
dobj(broke-2, bits-5)
det(berg-8, the-7)
prep_of(bits-5, berg-8)
advmod(berg-8, now-9)
advmod(berg-8, then-11)
conj_and(now-9, then-11)
conj_and(broke-2, sucked-13)
dobj(sucked-13, them-14)
nsubj(thought-18, he-17)
conj_and(broke-2, thought-18)
nsubj(nice-21, them-19)
advmod(nice-21, very-20)
xcomp(thought-18, nice-21)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (, ,)
    (S
      (NP (CD one) (NN time))
      (NP (PRP he))
      (VP
        (VP (VBD came)
          (PRT (RP out))
          (PP (IN of)
            (NP (PRP$ his) (NN cave))))
        (PRN (, ,)
          (S
            (NP (PRP he))
            (VP (VBD spied)
              (ADVP (RB far) (RB off))
              (PP (IN on)
                (NP (DT the) (NN horizon)))))
          (, ,))
        (NP
          (NP (DT a) (VBG shining) (NN peak))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD rose)
                (PP (IN into)
                  (NP (DT the) (NN sky)))
                (PP (IN like)
                  (NP
                    (NP (DT the) (NN top))
                    (PP (IN of)
                      (NP (DT some) (JJ tremendous) (NN iceberg)))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP$ his) (NN vessel))
      (VP (VBD was)
        (VP (VBG bearing)
          (NP (PRP him))
          (PP (RB straight) (IN towards)
            (NP (PRP it))))))
    (. .)))

prep_at(came-7, length-2)
num(time-5, one-4)
nsubj(came-7, time-5)
nsubj(came-7, he-6)
root(ROOT-0, came-7)
poss(cave-11, his-10)
prep_out_of(came-7, cave-11)
nsubj(spied-14, he-13)
parataxis(came-7, spied-14)
advmod(off-16, far-15)
advmod(spied-14, off-16)
det(horizon-19, the-18)
prep_on(spied-14, horizon-19)
det(peak-23, a-21)
amod(peak-23, shining-22)
dobj(came-7, peak-23)
nsubj(rose-25, peak-23)
rcmod(peak-23, rose-25)
det(sky-28, the-27)
prep_into(rose-25, sky-28)
det(top-31, the-30)
prep_like(rose-25, top-31)
det(iceberg-35, some-33)
amod(iceberg-35, tremendous-34)
prep_of(top-31, iceberg-35)
poss(vessel-39, his-38)
nsubj(bearing-41, vessel-39)
aux(bearing-41, was-40)
conj_and(came-7, bearing-41)
dobj(bearing-41, him-42)
advmod(bearing-41, straight-43)
prep_towards(bearing-41, it-45)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (PRP it))
          (VP (VBD went)
            (PP (IN on)
              (NP (DT the) (NN peak))))))
      (VP
        (VP (VBD rose))
        (CC and)
        (VP (VBD rose)
          (S
            (ADJP (JJR higher)
              (CC and)
              (JJR higher)))
          (PP (IN above)
            (NP (DT the) (NN horizon))))))
    (: ;)
    (CC and)
    (S
      (NP (JJ other) (NNS peaks))
      (VP (VBD rose)
        (PP (IN after)
          (NP (PRP it)))
        (, ,)
        (PP (IN with)
          (S
            (NP
              (NP (JJ sharp) (NNS edges))
              (CC and)
              (NP (JJ jagged) (NNS ridges)))
            (VP (VBG connecting)
              (NP (PRP them)))))))
    (. .)))

mark(went-3, As-1)
nsubj(went-3, it-2)
csubj(rose-7, went-3)
csubj(rose-9, went-3)
det(peak-6, the-5)
prep_on(went-3, peak-6)
root(ROOT-0, rose-7)
conj_and(rose-7, rose-9)
acomp(rose-9, higher-10)
acomp(rose-9, higher-12)
conj_and(higher-10, higher-12)
det(horizon-15, the-14)
prep_above(rose-9, horizon-15)
amod(peaks-19, other-18)
nsubj(rose-20, peaks-19)
conj_and(rose-7, rose-20)
prep_after(rose-20, it-22)
amod(edges-26, sharp-25)
nsubj(connecting-30, edges-26)
amod(ridges-29, jagged-28)
conj_and(edges-26, ridges-29)
nsubj(connecting-30, ridges-29)
prepc_with(rose-20, connecting-30)
dobj(connecting-30, them-31)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (DT this))
            (VP (MD must)
              (VP (VB be)
                (NP
                  (NP (DT the) (NN place))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD was)
                        (VP (VBG going)
                          (PP (TO to)))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ right))))
    (: ;)
    (SBAR (IN for)
      (S
        (NP (DT the) (NNS mountains))
        (VP (VBD rose)
          (CC and)
          (VBD rose) (, ,)
          (SBAR (IN till)
            (S
              (NP (PRP he))
              (VP (VBD saw)
                (NP
                  (NP (DT the) (NN line))
                  (PP (IN of)
                    (NP (DT the) (NN coast))))
                (PP (IN at)
                  (NP (PRP$ their) (NNS feet)))))))))
    (CC and)
    (S
      (PP (IN at)
        (NP (NN length)))
      (NP (DT the) (NN iceberg))
      (VP (VBD drove)
        (PP (IN into)
          (NP
            (NP (DT a) (JJ little) (NN bay))
            (, ,)
            (SBAR
              (WHNP (DT all)
                (WHPP (IN around)
                  (WHNP (WDT which))))
              (S
                (VP (VBD were)
                  (NP
                    (NP
                      (NP (JJ lofty) (NNS precipices))
                      (PP (IN with)
                        (NP
                          (NP (NN snow))
                          (PP (IN on)
                            (NP (PRP$ their) (NNS tops))))))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (NNS streaks))
                      (PP (IN of)
                        (NP (NN ice)))))
                  (PP (IN down)
                    (NP (PRP$ their) (NNS sides))))))))))
    (. .)))

nsubj(thought-2, Diamond-1)
root(ROOT-0, thought-2)
nsubj(place-7, this-3)
aux(place-7, must-4)
cop(place-7, be-5)
det(place-7, the-6)
ccomp(thought-2, place-7)
prep_to(going-10, place-7)
nsubj(going-10, he-8)
aux(going-10, was-9)
rcmod(place-7, going-10)
nsubj(right-16, he-14)
cop(right-16, was-15)
conj_and(thought-2, right-16)
mark(rose-21, for-18)
det(mountains-20, the-19)
nsubj(rose-21, mountains-20)
nsubj(rose-23, mountains-20)
conj_and(thought-2, rose-21)
conj_and(thought-2, rose-23)
conj_and(rose-21, rose-23)
mark(saw-27, till-25)
nsubj(saw-27, he-26)
advcl(rose-21, saw-27)
det(line-29, the-28)
dobj(saw-27, line-29)
det(coast-32, the-31)
prep_of(line-29, coast-32)
poss(feet-35, their-34)
prep_at(saw-27, feet-35)
prep_at(drove-41, length-38)
det(iceberg-40, the-39)
nsubj(drove-41, iceberg-40)
conj_and(thought-2, drove-41)
det(bay-45, a-43)
amod(bay-45, little-44)
prep_into(drove-41, bay-45)
pobj(around-48, bay-45)
dep(around-48, all-47)
nsubj(precipices-52, around-48)
cop(precipices-52, were-50)
amod(precipices-52, lofty-51)
rcmod(bay-45, precipices-52)
prep_with(precipices-52, snow-54)
poss(tops-57, their-56)
prep_on(snow-54, tops-57)
rcmod(bay-45, streaks-60)
conj_and(precipices-52, streaks-60)
prep_of(streaks-60, ice-62)
poss(sides-65, their-64)
prep_down(precipices-52, sides-65)

(ROOT
  (S
    (NP (DT The) (NN berg))
    (VP (VBD floated)
      (ADVP (RB slowly) (RB up))
      (PP (TO to)
        (NP (DT a) (JJ projecting) (NN rock))))
    (. .)))

det(berg-2, The-1)
nsubj(floated-3, berg-2)
root(ROOT-0, floated-3)
advmod(up-5, slowly-4)
advmod(floated-3, up-5)
det(rock-9, a-7)
amod(rock-9, projecting-8)
prep_to(floated-3, rock-9)

(ROOT
  (S
    (S
      (NP (NNP Diamond))
      (VP (VBD stepped)
        (PP (IN on)
          (NP (NN shore)))))
    (, ,)
    (CC and)
    (S
      (PP (IN without)
        (S
          (VP (VBG looking)
            (PRT (RP behind)))))
      (NP (PRP him))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB follow)
              (NP
                (NP (DT a) (JJ natural) (NN path))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD led)
                      (ADVP (RB windingly))
                      (PP (IN towards)
                        (NP
                          (NP (DT the) (NN top))
                          (PP (IN of)
                            (NP (DT the) (NN precipice))))))))))))))
    (. .)))

nsubj(stepped-2, Diamond-1)
root(ROOT-0, stepped-2)
prep_on(stepped-2, shore-4)
prepc_without(began-11, looking-8)
prt(looking-8, behind-9)
nsubj(began-11, him-10)
nsubj(follow-13, him-10)
conj_and(stepped-2, began-11)
aux(follow-13, to-12)
xcomp(began-11, follow-13)
det(path-16, a-14)
amod(path-16, natural-15)
dobj(follow-13, path-16)
nsubj(led-18, path-16)
rcmod(path-16, led-18)
advmod(led-18, windingly-19)
det(top-22, the-21)
prep_towards(led-18, top-22)
det(precipice-25, the-24)
prep_of(top-22, precipice-25)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD reached)
          (NP (PRP it)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD found)
      (NP (PRP himself))
      (PP (IN on)
        (NP
          (NP (DT a) (JJ broad) (NN table))
          (PP (IN of)
            (NP (NN ice)))))
      (, ,)
      (PP (IN along)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP he))
            (VP (MD could)
              (VP (VB walk)
                (PP (IN without)
                  (NP (JJ much) (NN difficulty)))))))))
    (. .)))

advmod(reached-3, When-1)
nsubj(reached-3, he-2)
advcl(found-7, reached-3)
dobj(reached-3, it-4)
nsubj(found-7, he-6)
root(ROOT-0, found-7)
dobj(found-7, himself-8)
det(table-12, a-10)
amod(table-12, broad-11)
prep_on(found-7, table-12)
prep_of(table-12, ice-14)
dobj(walk-20, which-17)
nsubj(walk-20, he-18)
aux(walk-20, could-19)
prepc_along(found-7, walk-20)
amod(difficulty-23, much-22)
prep_without(walk-20, difficulty-23)

(ROOT
  (S
    (PP (IN Before)
      (NP (PRP him)))
    (, ,)
    (PP (IN at)
      (NP (DT a) (JJ considerable) (NN distance)))
    (, ,)
    (VP (VBD rose)
      (NP
        (NP (DT a) (JJ lofty) (NN ridge))
        (PP (IN of)
          (NP
            (NP (NN ice))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD shot)
                  (PRT (RP up))
                  (PP (IN into)
                    (NP
                      (NP (JJ fantastic) (NNS pinnacles))
                      (CC and)
                      (NP (NNS towers)
                        (CC and)
                        (NNS battlements)))))))))))
    (. .)))

prep_before(rose-9, him-2)
det(distance-7, a-5)
amod(distance-7, considerable-6)
prep_at(rose-9, distance-7)
root(ROOT-0, rose-9)
det(ridge-12, a-10)
amod(ridge-12, lofty-11)
dobj(rose-9, ridge-12)
prep_of(ridge-12, ice-14)
nsubj(shot-17, ice-14)
rcmod(ice-14, shot-17)
prt(shot-17, up-18)
amod(pinnacles-21, fantastic-20)
prep_into(shot-17, pinnacles-21)
prep_into(shot-17, towers-23)
conj_and(pinnacles-21, towers-23)
conj_and(pinnacles-21, battlements-25)
conj_and(towers-23, battlements-25)

(ROOT
  (S
    (NP (DT The) (NN air))
    (VP
      (VP (VBD was)
        (ADJP (RB very) (JJ cold)))
      (, ,)
      (CC and)
      (VP (VBD seemed)
        (ADJP
          (ADVP (RB somehow))
          (JJ dead))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (EX there))
            (VP (VBD was) (RB not)
              (NP
                (NP (DT the) (JJS slightest) (NN breath))
                (PP (IN of)
                  (NP (NN wind)))))))))
    (. .)))

det(air-2, The-1)
nsubj(cold-5, air-2)
nsubj(seemed-8, air-2)
cop(cold-5, was-3)
advmod(cold-5, very-4)
root(ROOT-0, cold-5)
conj_and(cold-5, seemed-8)
advmod(dead-10, somehow-9)
acomp(seemed-8, dead-10)
mark(was-14, for-12)
expl(was-14, there-13)
advcl(seemed-8, was-14)
neg(was-14, not-15)
det(breath-18, the-16)
amod(breath-18, slightest-17)
nsubj(was-14, breath-18)
prep_of(breath-18, wind-20)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN centre))
        (PP (IN of)
          (NP
            (NP (DT the) (NN ridge))
            (ADVP (IN before))))))
    (NP (PRP him))
    (VP (VBD appeared)
      (NP (DT a) (NN gap))
      (PP (IN like)
        (NP
          (NP (DT the) (NN opening))
          (PP (IN of)
            (NP (DT a) (NN valley))))))
    (. .)))

det(centre-3, the-2)
prep_in(appeared-9, centre-3)
det(ridge-6, the-5)
prep_of(centre-3, ridge-6)
advmod(ridge-6, before-7)
nsubj(appeared-9, him-8)
root(ROOT-0, appeared-9)
det(gap-11, a-10)
dobj(appeared-9, gap-11)
det(opening-14, the-13)
prep_like(appeared-9, opening-14)
det(valley-17, a-16)
prep_of(opening-14, valley-17)

(ROOT
  (S (CC But)
    (SBAR (IN as)
      (S
        (NP (PRP he))
        (VP (VBD walked)
          (PP (IN towards)
            (NP (PRP it)))
          (, ,)
          (S
            (VP
              (VP (VBG gazing))
              (, ,)
              (CC and)
              (VP (VBG wondering)
                (SBAR (IN whether)
                  (S
                    (NP (DT that))
                    (VP (MD could)
                      (VP (VB be)
                        (NP
                          (NP (DT the) (NN way))
                          (SBAR
                            (S
                              (NP (PRP he))
                              (VP (VBD had)
                                (S
                                  (VP (TO to)
                                    (VP (VB take))))))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD saw)
      (NP
        (NP
          (NP (DT that))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD had)
                (VP (VBN appeared)
                  (SBAR
                    (S
                      (NP (DT a) (NN gap))
                      (VP (VBD was)
                        (NP
                          (NP (DT the) (NN form))
                          (PP (IN of)
                            (NP
                              (NP (DT a) (NN woman))
                              (VP (VBN seated)
                                (PP (IN against)
                                  (NP
                                    (NP (DT the) (NN ice) (NN front))
                                    (PP (IN of)
                                      (NP (DT the) (NN ridge))))))))
                          (, ,)
                          (VP (VBG leaning)
                            (ADVP (RB forwards)
                              (PP (IN with)
                                (NP (PRP$ her) (NNS hands))))
                            (PP (IN in)
                              (NP (PRP$ her) (NN lap)))))))))))))
        (, ,)
        (CC and)
        (NP
          (NP (PRP$ her) (NN hair))
          (VP (VBG hanging)
            (PRT (RP down))
            (PP (TO to)
              (NP (DT the) (NN ground)))))))
    (. .)))

cc(saw-24, But-1)
mark(walked-4, as-2)
nsubj(walked-4, he-3)
advcl(saw-24, walked-4)
prep_towards(walked-4, it-6)
ccomp(walked-4, gazing-8)
ccomp(walked-4, wondering-11)
conj_and(gazing-8, wondering-11)
mark(way-17, whether-12)
nsubj(way-17, that-13)
aux(way-17, could-14)
cop(way-17, be-15)
det(way-17, the-16)
ccomp(wondering-11, way-17)
nsubj(had-19, he-18)
nsubj(take-21, he-18)
rcmod(way-17, had-19)
aux(take-21, to-20)
xcomp(had-19, take-21)
nsubj(saw-24, he-23)
root(ROOT-0, saw-24)
dobj(saw-24, that-25)
nsubj(appeared-28, that-25)
aux(appeared-28, had-27)
rcmod(that-25, appeared-28)
det(gap-30, a-29)
nsubj(form-33, gap-30)
cop(form-33, was-31)
det(form-33, the-32)
ccomp(appeared-28, form-33)
det(woman-36, a-35)
prep_of(form-33, woman-36)
vmod(woman-36, seated-37)
det(front-41, the-39)
nn(front-41, ice-40)
prep_against(seated-37, front-41)
det(ridge-44, the-43)
prep_of(front-41, ridge-44)
vmod(form-33, leaning-46)
advmod(leaning-46, forwards-47)
poss(hands-50, her-49)
prep_with(forwards-47, hands-50)
poss(lap-53, her-52)
prep_in(leaning-46, lap-53)
poss(hair-57, her-56)
dobj(saw-24, hair-57)
conj_and(that-25, hair-57)
nsubj(appeared-28, hair-57)
vmod(hair-57, hanging-58)
prt(hanging-58, down-59)
det(ground-62, the-61)
prep_to(hanging-58, ground-62)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP
          (NP (NNP North) (NNP Wind))
          (PP (IN on)
            (NP (PRP$ her) (NN doorstep))))))
    (, ,) ('' '')
    (VP
      (VP (VBD said)
        (NP (NNP Diamond))
        (ADVP (RB joyfully)))
      (, ,)
      (CC and)
      (VP (VBN hurried)
        (PRT (RP on))))
    (. .)))

nsubj(Wind-5, It-2)
cop(Wind-5, is-3)
nn(Wind-5, North-4)
ccomp(said-11, Wind-5)
poss(doorstep-8, her-7)
prep_on(Wind-5, doorstep-8)
root(ROOT-0, said-11)
dobj(said-11, Diamond-12)
advmod(said-11, joyfully-13)
conj_and(said-11, hurried-16)
prt(hurried-16, on-17)

(ROOT
  (S
    (S
      (NP (PRP He))
      (ADVP (RB soon))
      (VP (VBD came)
        (PRT (RP up))
        (PP (TO to)
          (NP (DT the) (NN place)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB there))
      (NP (DT the) (NN form))
      (VP (VBD sat) (, ,)
        (PP (IN like)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (DT the) (JJ great) (NNS figures)))))
        (PP (IN at)
          (NP
            (NP (DT the) (NN door))
            (PP (IN of)
              (NP
                (NP (DT an) (JJ Egyptian) (NN temple))
                (, ,)
                (NP (NNS motionless))))))
        (, ,)
        (PP (IN with)
          (S
            (VP (VBG drooping)
              (NP (NNS arms)
                (CC and)
                (NN head)))))))
    (. .)))

nsubj(came-3, He-1)
advmod(came-3, soon-2)
root(ROOT-0, came-3)
prt(came-3, up-4)
det(place-7, the-6)
prep_to(came-3, place-7)
advmod(sat-13, there-10)
det(form-12, the-11)
nsubj(sat-13, form-12)
conj_and(came-3, sat-13)
prep_like(sat-13, one-16)
det(figures-20, the-18)
amod(figures-20, great-19)
prep_of(one-16, figures-20)
det(door-23, the-22)
prep_at(sat-13, door-23)
det(temple-27, an-25)
amod(temple-27, Egyptian-26)
prep_of(door-23, temple-27)
appos(temple-27, motionless-29)
prepc_with(sat-13, drooping-32)
dobj(drooping-32, arms-33)
dobj(drooping-32, head-35)
conj_and(arms-33, head-35)

(ROOT
  (S (RB Then)
    (NP (NNP Diamond))
    (VP (VBD grew)
      (ADJP (JJ frightened))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP she))
          (VP
            (VP (VBD did) (RB not)
              (VP (VB move)))
            (CC nor)
            (VP (VBP speak))))))
    (. .)))

advmod(grew-3, Then-1)
nsubj(grew-3, Diamond-2)
root(ROOT-0, grew-3)
acomp(grew-3, frightened-4)
mark(move-10, because-6)
nsubj(move-10, she-7)
nsubj(speak-12, she-7)
aux(move-10, did-8)
neg(move-10, not-9)
advcl(grew-3, move-10)
advcl(grew-3, speak-12)
conj_nor(move-10, speak-12)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (NP (JJ North) (NN Wind))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP she))
            (VP (MD must)
              (VP (VB be)
                (ADJP (JJ dead)
                  (PP (IN at)
                    (NP (JJ last))))))))))
    (. .)))

nsubj(sure-3, He-1)
cop(sure-3, was-2)
root(ROOT-0, sure-3)
nsubj(Wind-7, it-4)
cop(Wind-7, was-5)
amod(Wind-7, North-6)
ccomp(sure-3, Wind-7)
nsubj(thought-11, he-10)
conj_but(sure-3, thought-11)
nsubj(dead-15, she-12)
aux(dead-15, must-13)
cop(dead-15, be-14)
ccomp(thought-11, dead-15)
prep_at(dead-15, last-17)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NN face))
      (VP (VBD was)
        (ADJP (JJ white)
          (PP (IN as)
            (NP (DT the) (NN snow))))))
    (PRN (, ,)
      (S
        (NP (PRP$ her) (NNS eyes))
        (VP (VBD were)
          (ADJP (JJ blue)
            (PP (IN as)
              (NP
                (NP (DT the) (NN air))
                (PP (IN in)
                  (NP (DT the) (NN ice-cave))))))))
      (, ,))
    (CC and)
    (S
      (NP (PRP$ her) (NN hair))
      (VP (VBD hung)
        (PRT (RP down))
        (ADVP (RB straight))
        (, ,)
        (PP (IN like)
          (NP (NNS icicles)))))
    (. .)))

poss(face-2, Her-1)
nsubj(white-4, face-2)
cop(white-4, was-3)
root(ROOT-0, white-4)
det(snow-7, the-6)
prep_as(white-4, snow-7)
poss(eyes-10, her-9)
nsubj(blue-12, eyes-10)
cop(blue-12, were-11)
dep(white-4, blue-12)
det(air-15, the-14)
prep_as(blue-12, air-15)
det(ice-cave-18, the-17)
prep_in(air-15, ice-cave-18)
poss(hair-22, her-21)
nsubj(hung-23, hair-22)
conj_and(white-4, hung-23)
prt(hung-23, down-24)
advmod(hung-23, straight-25)
prep_like(hung-23, icicles-28)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (PP (IN on)
        (NP
          (NP (DT a) (JJ greenish) (NN robe))
          (, ,)
          (PP (IN like)
            (NP
              (NP (DT the) (NN colour))
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS hollows))
                  (PP (IN of)
                    (NP (DT a) (NN glacier)))))))))
      (VP (VBN seen)
        (PP (IN from)
          (ADVP (RB far) (RB off)))))
    (. .)))

nsubj(seen-17, She-1)
aux(seen-17, had-2)
det(robe-6, a-4)
amod(robe-6, greenish-5)
prep_on(seen-17, robe-6)
det(colour-10, the-9)
prep_like(robe-6, colour-10)
det(hollows-13, the-12)
prep_in(colour-10, hollows-13)
det(glacier-16, a-15)
prep_of(hollows-13, glacier-16)
root(ROOT-0, seen-17)
prep(seen-17, from-18)
advmod(off-20, far-19)
pcomp(from-18, off-20)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD stood)
        (PRT (RP up))
        (PP (IN before)
          (NP (PRP her))))
      (, ,)
      (CC and)
      (VP (VBD gazed)
        (ADVP (RB fearfully))
        (PP (IN into)
          (NP
            (NP (PRP$ her) (NN face))
            (PP (IN for)
              (NP (DT a) (JJ few) (NNS minutes)))))
        (SBAR (IN before)
          (S
            (NP (PRP he))
            (VP (VBD ventured)
              (S
                (VP (TO to)
                  (VP (VB speak)))))))))
    (. .)))

nsubj(stood-2, He-1)
nsubj(gazed-8, He-1)
root(ROOT-0, stood-2)
prt(stood-2, up-3)
prep_before(stood-2, her-5)
conj_and(stood-2, gazed-8)
advmod(gazed-8, fearfully-9)
poss(face-12, her-11)
prep_into(gazed-8, face-12)
det(minutes-16, a-14)
amod(minutes-16, few-15)
prep_for(face-12, minutes-16)
mark(ventured-19, before-17)
nsubj(ventured-19, he-18)
nsubj(speak-21, he-18)
advcl(gazed-8, ventured-19)
aux(speak-21, to-20)
xcomp(ventured-19, speak-21)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (, ,)
    (PP (IN with)
      (NP
        (NP (DT a) (JJ great) (NN effort))
        (CC and)
        (NP (DT a) (JJ trembling) (NN voice))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD faltered)
        (PRT (RP out))))
    (: --) (`` ``)
    (S
      (NP (NNP North))
      (VP (VBZ Wind)))
    (. !) ('' '')))

prep_at(faltered-14, length-2)
det(effort-7, a-5)
amod(effort-7, great-6)
prep_with(faltered-14, effort-7)
det(voice-11, a-9)
amod(voice-11, trembling-10)
conj_and(effort-7, voice-11)
prep_with(faltered-14, voice-11)
nsubj(faltered-14, he-13)
root(ROOT-0, faltered-14)
prt(faltered-14, out-15)
nsubj(Wind-19, North-18)
parataxis(faltered-14, Wind-19)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Well))
    (, ,)
    (NP (NN child))
    (. ?) ('' '')))

discourse(child-4, Well-2)
root(ROOT-0, child-4)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN form))
      (, ,)
      (PP (IN without)
        (S
          (VP (VBG lifting)
            (NP (PRP$ its) (NN head))))))
    (. .)))

root(ROOT-0, said-1)
det(form-3, the-2)
dobj(said-1, form-3)
prepc_without(said-1, lifting-6)
poss(head-8, its-7)
dobj(lifting-6, head-8)

(ROOT
  (X (`` ``)
    (NP
      (SQ (VBP Are)
        (NP (PRP you)))
      (VP (VB ill)))
    (, ,)
    (NP
      (NP (NNP dear) (NNP North))
      (VP (VBN Wind)))
    (. ?) ('' '')))

dep(ill-4, Are-2)
nsubj(Are-2, you-3)
dep(North-7, ill-4)
nn(North-7, dear-6)
root(ROOT-0, North-7)
vmod(North-7, Wind-8)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG waiting)))
    (. .) ('' '')))

nsubj(waiting-3, I-1)
aux(waiting-3, am-2)
root(ROOT-0, waiting-3)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ for)))
    (. ?) ('' '')))

nsubj(for-3, What-2)
root(ROOT-0, for-3)

(ROOT
  (S (`` ``)
    (ADVP (RB Till))
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBN wanted)))
    (. .) ('' '')))

advmod(wanted-5, Till-2)
nsubjpass(wanted-5, I-3)
auxpass(wanted-5, 'm-4)
root(ROOT-0, wanted-5)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP do) (RB n't)
        (VP (VB care)
          (PP (IN for)
            (NP (PRP me)))
          (ADVP (DT any) (RBR more)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (NP (RB almost)
        (NP (NNP crying))
        (ADVP (RB now))))
    (. .)))

nsubj(care-5, You-2)
aux(care-5, do-3)
neg(care-5, n't-4)
ccomp(said-12, care-5)
prep_for(care-5, me-7)
dep(more-9, any-8)
advmod(care-5, more-9)
root(ROOT-0, said-12)
nsubj(said-12, Diamond-13)
advmod(crying-16, almost-15)
appos(Diamond-13, crying-16)
advmod(crying-16, now-17)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (NP (PRP I))
    (VP (VBP do))
    (. .)))

advmod(do-4, Yes-2)
nsubj(do-4, I-3)
root(ROOT-0, do-4)

(ROOT
  (S (RB Only)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB show)
        (NP (PRP it))))
    (. .)))

advmod(show-5, Only-1)
nsubj(show-5, I-2)
aux(show-5, ca-3)
neg(show-5, n't-4)
root(ROOT-0, show-5)
dobj(show-5, it-6)

(ROOT
  (S
    (NP (PDT All) (PRP$ my) (NN love))
    (VP (VBZ is)
      (ADVP (RB down))
      (PP (IN at)
        (NP
          (NP (DT the) (NN bottom))
          (PP (IN of)
            (NP (PRP$ my) (NN heart))))))
    (. .)))

predet(love-3, All-1)
poss(love-3, my-2)
nsubj(is-4, love-3)
root(ROOT-0, is-4)
advmod(is-4, down-5)
det(bottom-8, the-7)
prep_at(is-4, bottom-8)
poss(heart-11, my-10)
prep_of(bottom-8, heart-11)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP feel)
      (S
        (NP (PRP it))
        (VP (VBG bubbling)
          (ADVP (RB there)))))
    (. .) ('' '')))

cc(feel-3, But-1)
nsubj(feel-3, I-2)
root(ROOT-0, feel-3)
nsubj(bubbling-5, it-4)
dep(feel-3, bubbling-5)
advmod(bubbling-5, there-6)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB want)
        (S
          (NP (PRP me))
          (VP (TO to)
            (VP (VB do)
              (NP (JJ next) (, ,) (JJ dear) (JJ North) (NN Wind)))))))
    (. ?) ('' '')))

dep(want-5, What-2)
aux(want-5, do-3)
nsubj(want-5, you-4)
root(ROOT-0, want-5)
dobj(want-5, me-6)
nsubj(do-8, me-6)
aux(do-8, to-7)
xcomp(want-5, do-8)
amod(Wind-13, next-9)
amod(Wind-13, dear-11)
amod(Wind-13, North-12)
dobj(do-8, Wind-13)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Diamond))
      (, ,)
      (S
        (VP (VBG wishing)
          (S
            (VP (TO to)
              (VP (VB show)
                (NP (PRP$ his) (NN love))
                (PP (IN by)
                  (S
                    (VP (VBG being)
                      (ADJP (JJ obedient)))))))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)
vmod(said-1, wishing-4)
aux(show-6, to-5)
xcomp(wishing-4, show-6)
poss(love-8, his-7)
dobj(show-6, love-8)
cop(obedient-11, being-10)
prepc_by(show-6, obedient-11)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (PRP yourself)))))))
    (. ?) ('' '')))

dep(want-5, What-2)
aux(want-5, do-3)
nsubj(want-5, you-4)
nsubj(do-7, you-4)
root(ROOT-0, want-5)
aux(do-7, to-6)
xcomp(want-5, do-7)
dobj(do-7, yourself-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB go)
            (PP (IN into)
              (NP
                (NP (DT the) (NN country))
                (PP (IN at)
                  (NP (PRP$ your) (NN back)))))))))
    (. .) ('' '')))

nsubj(want-3, I-2)
nsubj(go-5, I-2)
root(ROOT-0, want-3)
aux(go-5, to-4)
xcomp(want-3, go-5)
det(country-8, the-7)
prep_into(go-5, country-8)
poss(back-11, your-10)
prep_at(country-8, back-11)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (MD must)
      (VP (VB go)
        (PP (IN through)
          (NP (PRP me)))))
    (. .) ('' '')))

advmod(go-5, Then-2)
nsubj(go-5, you-3)
aux(go-5, must-4)
root(ROOT-0, go-5)
prep_through(go-5, me-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP mean))))))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
dobj(mean-8, what-6)
nsubj(mean-8, you-7)
ccomp(know-5, mean-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP mean)
      (SBAR
        (WHADJP (RB just) (WP what))
        (S
          (NP (PRP I))
          (VP (VBP say)))))
    (. .)))

nsubj(mean-3, I-2)
root(ROOT-0, mean-3)
advmod(what-5, just-4)
dep(say-7, what-5)
nsubj(say-7, I-6)
ccomp(mean-3, say-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must)
      (VP
        (VP (VB walk)
          (PRT (RP on))
          (SBAR (RB as) (IN if)
            (S
              (NP (PRP I))
              (VP (VBD were)
                (NP (DT an) (JJ open) (NN door))))))
        (, ,)
        (CC and)
        (VP (VB go)
          (ADVP (RB right))
          (PP (IN through)
            (NP (PRP me))))))
    (. .) ('' '')))

nsubj(walk-3, You-1)
nsubj(go-14, You-1)
aux(walk-3, must-2)
root(ROOT-0, walk-3)
prt(walk-3, on-4)
advmod(door-11, as-5)
mark(door-11, if-6)
nsubj(door-11, I-7)
cop(door-11, were-8)
det(door-11, an-9)
amod(door-11, open-10)
advcl(walk-3, door-11)
conj_and(walk-3, go-14)
advmod(go-14, right-15)
prep_through(go-14, me-17)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (DT that))
    (VP (MD will)
      (VP (VB hurt)
        (NP (PRP you))))
    (. .) ('' '')))

cc(hurt-5, But-2)
nsubj(hurt-5, that-3)
aux(hurt-5, will-4)
root(ROOT-0, hurt-5)
dobj(hurt-5, you-6)

(ROOT
  (S (`` ``)
    (VP (VB Not)
      (PP (IN in)
        (NP (DT the) (JJS least))))
    (. .)))

root(ROOT-0, Not-2)
det(least-5, the-4)
prep_in(Not-2, least-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB hurt)
        (NP (PRP you))
        (, ,)
        (ADVP (RB though))))
    (. .) ('' '')))

nsubj(hurt-3, It-1)
aux(hurt-3, will-2)
root(ROOT-0, hurt-3)
dobj(hurt-3, you-4)
advmod(hurt-3, though-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB mind)
        (NP (DT that))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP tell)
              (S
                (NP (PRP me))
                (VP (TO to)
                  (VP (VB do)
                    (NP (PRP it))))))))))
    (. .) ('' '')))

nsubj(mind-5, I-2)
aux(mind-5, do-3)
neg(mind-5, n't-4)
root(ROOT-0, mind-5)
dobj(mind-5, that-6)
mark(tell-10, if-8)
nsubj(tell-10, you-9)
advcl(mind-5, tell-10)
dobj(tell-10, me-11)
nsubj(do-13, me-11)
aux(do-13, to-12)
xcomp(tell-10, do-13)
dobj(do-13, it-14)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Do)
        (NP (PRP it))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP North) (NNP Wind))
    (. .)))

ccomp(said-6, Do-2)
dobj(Do-2, it-3)
root(ROOT-0, said-6)
nn(Wind-8, North-7)
nsubj(said-6, Wind-8)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD walked)
      (PP (IN towards)
        (NP (PRP her)))
      (ADVP (RB instantly)))
    (. .)))

nsubj(walked-2, Diamond-1)
root(ROOT-0, walked-2)
prep_towards(walked-2, her-4)
advmod(walked-2, instantly-5)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP he))
          (VP (VBD reached)
            (NP (PRP$ her) (NNS knees)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD put)
        (PRT (RP out))
        (NP (PRP$ his) (NN hand)
          (S
            (VP (TO to)
              (VP (VB lay)
                (NP (PRP it))
                (PP (IN on)
                  (NP (PRP her)))))))))
    (, ,)
    (CC but)
    (S
      (NP (NN nothing))
      (VP (VBD was)
        (S
          (NP (EX there))
          (VP (VB save)
            (NP (DT an) (JJ intense) (NN cold))))))
    (. .)))

advmod(reached-3, When-1)
nsubj(reached-3, he-2)
advcl(put-8, reached-3)
poss(knees-5, her-4)
dobj(reached-3, knees-5)
nsubj(put-8, he-7)
root(ROOT-0, put-8)
prt(put-8, out-9)
poss(hand-11, his-10)
dobj(put-8, hand-11)
aux(lay-13, to-12)
vmod(hand-11, lay-13)
dobj(lay-13, it-14)
prep_on(lay-13, her-16)
nsubj(was-20, nothing-19)
conj_but(put-8, was-20)
expl(save-22, there-21)
ccomp(was-20, save-22)
det(cold-25, an-23)
amod(cold-25, intense-24)
dobj(save-22, cold-25)
nsubj(save-22, cold-25)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD walked)
      (PRT (RP on)))
    (. .)))

nsubj(walked-2, He-1)
root(ROOT-0, walked-2)
prt(walked-2, on-3)

(ROOT
  (S (RB Then)
    (NP (DT all))
    (VP (VBD grew)
      (NP
        (NP
          (NP (JJ white))
          (PP (IN about)
            (NP (PRP him))))
        (: ;)
        (CC and)
        (NP
          (NP (DT the) (NN cold))
          (VP (VBN stung)
            (NP (PRP him))
            (PP (IN like)
              (NP (NN fire)))))))
    (. .)))

advmod(grew-3, Then-1)
nsubj(grew-3, all-2)
root(ROOT-0, grew-3)
dobj(grew-3, white-4)
prep_about(white-4, him-6)
det(cold-10, the-9)
dobj(grew-3, cold-10)
conj_and(white-4, cold-10)
vmod(cold-10, stung-11)
dobj(stung-11, him-12)
prep_like(stung-11, fire-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD walked)
      (PP (IN on)
        (ADVP (RB still)))
      (, ,)
      (S
        (VP (VBG groping)
          (PP (IN through)
            (NP (DT the) (NNS whiteness))))))
    (. .)))

nsubj(walked-2, He-1)
root(ROOT-0, walked-2)
prep(walked-2, on-3)
pcomp(on-3, still-4)
xcomp(walked-2, groping-6)
det(whiteness-9, the-8)
prep_through(groping-6, whiteness-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD thickened)
      (PP (IN about)
        (NP (PRP him))))
    (. .)))

nsubj(thickened-2, It-1)
root(ROOT-0, thickened-2)
prep_about(thickened-2, him-4)

(ROOT
  (S
    (PP (IN At)
      (NP (JJ last)))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBD got)
        (PP (IN into)
          (NP (PRP$ his) (NN heart)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD lost)
        (NP (DT all) (NN sense))))
    (. .)))

prep_at(got-5, last-2)
nsubj(got-5, it-4)
root(ROOT-0, got-5)
poss(heart-8, his-7)
prep_into(got-5, heart-8)
nsubj(lost-12, he-11)
conj_and(got-5, lost-12)
det(sense-14, all-13)
dobj(lost-12, sense-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD fainted))))
          (: --)
          (SBAR (RB only) (IN whereas)
            (S
              (PP (IN in)
                (NP (JJ common) (NNS faints)))
              (NP (DT all))
              (VP (VBZ grows)
                (ADJP (JJ black)
                  (PP (IN about)
                    (NP (PRP you))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD felt)
      (VP (VBN swallowed)
        (PRT (RP up))
        (PP (IN in)
          (NP (NNS whiteness)))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, would-2)
ccomp(felt-20, say-3)
mark(fainted-6, that-4)
nsubj(fainted-6, he-5)
ccomp(say-3, fainted-6)
advmod(grows-14, only-8)
mark(grows-14, whereas-9)
amod(faints-12, common-11)
prep_in(grows-14, faints-12)
nsubj(grows-14, all-13)
advcl(say-3, grows-14)
parataxis(say-3, grows-14)
acomp(grows-14, black-15)
prep_about(black-15, you-17)
nsubj(felt-20, he-19)
root(ROOT-0, felt-20)
dep(felt-20, swallowed-21)
prt(swallowed-21, up-22)
prep_in(swallowed-21, whiteness-24)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD reached)
            (NP
              (NP (NNP North) (NNP Wind) (POS 's))
              (NN heart))
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP
                  (VP (VBD fainted))
                  (CC and)
                  (VP (VBD fell)))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(reached-5, when-3)
nsubj(reached-5, he-4)
advcl(was-2, reached-5)
nn(Wind-7, North-6)
poss(heart-9, Wind-7)
dobj(reached-5, heart-9)
mark(fainted-12, that-10)
nsubj(fainted-12, he-11)
nsubj(fell-14, he-11)
ccomp(reached-5, fainted-12)
ccomp(reached-5, fell-14)
conj_and(fainted-12, fell-14)

(ROOT
  (S
    (S (CC But)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD fell))))
      (, ,)
      (NP (PRP he))
      (VP (VBD rolled)
        (PP (IN over)
          (NP (DT the) (NN threshold)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADVP (RB thus))
        (SBAR (IN that)
          (S
            (NP (NNP Diamond))
            (VP (VBD got)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN back))
                  (PP (IN of)
                    (NP (DT the) (NN north) (NN wind))))))))))
    (. .)))

mark(fell-4, as-2)
nsubj(fell-4, he-3)
advcl(rolled-7, fell-4)
nsubj(rolled-7, he-6)
root(ROOT-0, rolled-7)
det(threshold-10, the-9)
prep_over(rolled-7, threshold-10)
nsubj(was-14, it-13)
conj_and(rolled-7, was-14)
advmod(was-14, thus-15)
mark(got-18, that-16)
nsubj(got-18, Diamond-17)
ccomp(was-14, got-18)
det(back-21, the-20)
prep_to(got-18, back-21)
det(wind-25, the-23)
nn(wind-25, north-24)
prep_of(back-21, wind-25)

(ROOT
  (NP (NNP CHAPTER) (NNP X) (. .)))

nn(X-2, CHAPTER-1)
root(ROOT-0, X-2)

(ROOT
  (S
    (NP
      (NP (NNP AT) (NNP THE) (NNP BACK))
      (PP (IN OF)
        (NP (DT THE) (NNP NORTH))))
    (VP (VBD WIND)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP HAVE)
            (ADVP (RB now))
            (VP (VB come)
              (PP (TO to)
                (NP
                  (NP (DT the)
                    (ADJP (RBS most) (JJ difficult))
                    (NN part))
                  (PP (IN of)
                    (NP (PRP$ my) (NN story))))))))))
    (. .)))

nn(BACK-3, AT-1)
nn(BACK-3, THE-2)
nsubj(WIND-7, BACK-3)
det(NORTH-6, THE-5)
prep_of(BACK-3, NORTH-6)
root(ROOT-0, WIND-7)
nsubj(come-11, I-8)
aux(come-11, HAVE-9)
advmod(come-11, now-10)
ccomp(WIND-7, come-11)
det(part-16, the-13)
advmod(difficult-15, most-14)
amod(part-16, difficult-15)
prep_to(come-11, part-16)
poss(story-19, my-18)
prep_of(part-16, story-19)

(ROOT
  (FRAG (CC And)
    (ADVP (RB why))
    (. ?)))

cc(why-2, And-1)
root(ROOT-0, why-2)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB not))))
    (VP (VBP know)
      (ADVP (RB enough)
        (PP (IN about)
          (NP (PRP it)))))
    (. .)))

mark(do-3, Because-1)
nsubj(do-3, I-2)
csubj(know-5, do-3)
neg(do-3, not-4)
root(ROOT-0, know-5)
advmod(know-5, enough-6)
prep_about(enough-6, it-8)

(ROOT
  (SBARQ (CC And)
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (PRP I))
      (VP (RB not) (VB know)
        (NP (RB as) (RB much) (RB about))
        (PP
          (ADVP
            (NP (DT this) (NN part))
            (RB as))
          (IN about)
          (NP (DT any) (JJ other) (NN part)))))
    (. ?)))

cc(know-6, And-1)
advmod(know-6, why-2)
aux(know-6, should-3)
nsubj(know-6, I-4)
neg(know-6, not-5)
root(ROOT-0, know-6)
advmod(about-9, as-7)
advmod(about-9, much-8)
dobj(know-6, about-9)
det(part-11, this-10)
npadvmod(as-12, part-11)
advmod(know-6, as-12)
det(part-16, any-14)
amod(part-16, other-15)
prep_about(know-6, part-16)

(ROOT
  (S
    (PP (IN For)
      (PP (IN of)
        (NP (NN course))))
    (NP (PRP I))
    (VP (MD could)
      (VP (VB know)
        (NP (NN nothing))
        (PP (IN about)
          (NP (DT the) (NN story)))
        (SBAR
          (SBAR (IN except)
            (S
              (NP (NNP Diamond))
              (VP (VBD had)
                (VP (VBN told)
                  (NP (PRP it))))))
          (: ;)
          (CC and)
          (SBAR
            (WHADVP (WRB why))
            (S
              (VP (MD should) (RB not)
                (ADVP (RB Diamond))
                (VP (VB tell)
                  (PP (IN about)
                    (NP
                      (NP (DT the) (NN country))
                      (PP
                        (PP (IN at)
                          (NP
                            (NP (DT the) (NN back))
                            (PP (IN of)
                              (NP (DT the) (NN north) (NN wind)))))
                        (, ,)
                        (CONJP (RB as) (RB well) (IN as))
                        (PP (IN about)
                          (NP (PRP$ his) (NNS adventures))))))
                  (PP (IN in)
                    (S
                      (VP (VBG getting)
                        (ADVP (RB there))))))))))))
    (. ?)))

prep(know-6, For-1)
pcomp(For-1, of-2)
pobj(of-2, course-3)
nsubj(know-6, I-4)
aux(know-6, could-5)
root(ROOT-0, know-6)
dobj(know-6, nothing-7)
det(story-10, the-9)
prep_about(know-6, story-10)
mark(told-14, except-11)
nsubj(told-14, Diamond-12)
nsubj(tell-22, Diamond-12)
aux(told-14, had-13)
advcl(know-6, told-14)
dobj(told-14, it-15)
advmod(tell-22, why-18)
aux(tell-22, should-19)
neg(tell-22, not-20)
advmod(tell-22, Diamond-21)
advcl(know-6, tell-22)
conj_and(told-14, tell-22)
det(country-25, the-24)
prep_about(tell-22, country-25)
prep_about(tell-22, country-25')
conj_and(country-25, country-25')
det(back-28, the-27)
prep_at(country-25, back-28)
det(wind-32, the-30)
nn(wind-32, north-31)
prep_of(back-28, wind-32)
poss(adventures-39, his-38)
prep_about(country-25', adventures-39)
prepc_in(tell-22, getting-41)
advmod(getting-41, there-42)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (S (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBD came)
                (ADVP (RB back)))))
          (, ,)
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN forgotten)
              (NP (DT a) (JJ great) (NN deal)))))
        (, ,)
        (CC and)
        (S
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP he))
              (VP (VBD did))))
          (VP (VBP remember)))))
    (VP (VBD was)
      (ADJP (RB very) (JJ hard)
        (S
          (VP (TO to)
            (VP (VB tell))))))
    (. .)))

mark(forgotten-10, Because-1)
advmod(came-5, when-3)
nsubj(came-5, he-4)
advcl(forgotten-10, came-5)
advmod(came-5, back-6)
nsubj(forgotten-10, he-8)
aux(forgotten-10, had-9)
csubj(hard-22, forgotten-10)
det(deal-13, a-11)
amod(deal-13, great-12)
dobj(forgotten-10, deal-13)
dobj(did-18, what-16)
nsubj(did-18, he-17)
csubj(remember-19, did-18)
conj_and(forgotten-10, remember-19)
csubj(hard-22, remember-19)
cop(hard-22, was-20)
advmod(hard-22, very-21)
root(ROOT-0, hard-22)
aux(tell-24, to-23)
xcomp(hard-22, tell-24)

(ROOT
  (S
    (NP (NNS Things))
    (ADVP (RB there))
    (VP (VBP are)
      (ADJP (RB so) (JJ different)
        (PP (IN from)
          (NP (NNS things))))
      (ADVP (RB here)))
    (. !)))

nsubj(different-5, Things-1)
advmod(different-5, there-2)
cop(different-5, are-3)
advmod(different-5, so-4)
root(ROOT-0, different-5)
prep_from(different-5, things-7)
advmod(different-5, here-8)

(ROOT
  (S
    (NP (DT The) (NNS people))
    (ADVP (RB there))
    (VP (VBP do) (RB not)
      (VP (VB speak)
        (NP
          (NP (DT the) (JJ same) (NN language))
          (PP (IN for)
            (NP (CD one) (NN thing))))))
    (. .)))

det(people-2, The-1)
nsubj(speak-6, people-2)
advmod(speak-6, there-3)
aux(speak-6, do-4)
neg(speak-6, not-5)
root(ROOT-0, speak-6)
det(language-9, the-7)
amod(language-9, same-8)
dobj(speak-6, language-9)
num(thing-12, one-11)
prep_for(language-9, thing-12)

(ROOT
  (S
    (ADVP (RB Indeed))
    (, ,)
    (NP (NNP Diamond))
    (VP (VBD insisted)
      (SBAR (IN that)
        (S
          (ADVP (RB there))
          (NP (PRP they))
          (VP (VBP do) (RB not)
            (VP (VB speak)
              (ADVP (IN at) (DT all)))))))
    (. .)))

advmod(insisted-4, Indeed-1)
nsubj(insisted-4, Diamond-3)
root(ROOT-0, insisted-4)
mark(speak-10, that-5)
advmod(speak-10, there-6)
nsubj(speak-10, they-7)
aux(speak-10, do-8)
neg(speak-10, not-9)
ccomp(insisted-4, speak-10)
advmod(speak-10, at-11)
pobj(at-11, all-12)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB think)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD was)
                (ADJP (JJ right))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD may)
        (ADVP (RB well))
        (VP (VB have)
          (VP (VBN appeared)
            (ADVP (RB so))
            (PP (TO to)
              (NP (NNP Diamond)))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, not-3)
root(ROOT-0, think-4)
nsubj(right-7, he-5)
cop(right-7, was-6)
ccomp(think-4, right-7)
nsubj(appeared-14, it-10)
aux(appeared-14, may-11)
advmod(appeared-14, well-12)
aux(appeared-14, have-13)
conj_but(think-4, appeared-14)
advmod(appeared-14, so-15)
prep_to(appeared-14, Diamond-17)

(ROOT
  (S
    (NP (DT The) (NN fact))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP have)
            (NP
              (NP (JJ different) (NNS reports))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN place))
                  (PP (IN from)
                    (NP (DT the)
                      (ADJP (RBS most) (JJ trustworthy))
                      (NNS people))))))))))
    (. .)))

det(fact-2, The-1)
nsubj(is-3, fact-2)
root(ROOT-0, is-3)
nsubj(have-6, we-5)
ccomp(is-3, have-6)
amod(reports-8, different-7)
dobj(have-6, reports-8)
det(place-11, the-10)
prep_of(reports-8, place-11)
det(people-16, the-13)
advmod(trustworthy-15, most-14)
amod(people-16, trustworthy-15)
prep_from(place-11, people-16)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (PRP we))
    (VP (VBP are)
      (ADJP (VBN bound)
        (S
          (VP (TO to)
            (VP (VB believe)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ appears)
                    (ADJP (RB somewhat) (JJ different)
                      (PP (TO to)
                        (NP (JJ different) (NNS people))))))))))))
    (. .)))

advmod(bound-4, Therefore-1)
nsubjpass(bound-4, we-2)
nsubj(believe-6, we-2)
auxpass(bound-4, are-3)
root(ROOT-0, bound-4)
aux(believe-6, to-5)
xcomp(bound-4, believe-6)
mark(appears-9, that-7)
nsubj(appears-9, it-8)
ccomp(believe-6, appears-9)
advmod(different-11, somewhat-10)
acomp(appears-9, different-11)
amod(people-14, different-13)
prep_to(different-11, people-14)

(ROOT
  (S
    (NP (DT All))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (VBP agree)
      (PP (IN in)
        (NP
          (NP (DT a) (JJ general) (NN way))
          (PP (IN about)
            (NP (PRP it))))))
    (. .)))

nsubj(agree-5, All-1)
advmod(agree-5, however-3)
root(ROOT-0, agree-5)
det(way-9, a-7)
amod(way-9, general-8)
prep_in(agree-5, way-9)
prep_about(way-9, it-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB tell)
          (NP (PRP you))
          (NP
            (NP (NN something))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (CD two) (JJ very) (JJ different) (NNS people))
                  (VP (VBP have)
                    (VP (VBN reported))))))
            (, ,)
            (SBAR
              (WHNP (DT both)
                (WHPP (IN of)
                  (WHNP (WP whom))))
              (S
                (VP (VBD knew)
                  (NP (JJR more))
                  (PP (IN about)
                    (NP (PRP it))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP believe) (, ,)
      (PP (IN than)
        (NP (NNP Herodotus))))
    (. .)))

nsubj(tell-3, I-1)
aux(tell-3, will-2)
ccomp(believe-24, tell-3)
iobj(tell-3, you-4)
dobj(tell-3, something-5)
pobj(of-16, something-5)
dobj(reported-13, what-7)
num(people-11, two-8)
amod(people-11, very-9)
amod(people-11, different-10)
nsubj(reported-13, people-11)
aux(reported-13, have-12)
prepc_of(something-5, reported-13)
dep(of-16, both-15)
nsubj(knew-18, of-16)
rcmod(something-5, knew-18)
dobj(knew-18, more-19)
prep_about(knew-18, it-21)
nsubj(believe-24, I-23)
root(ROOT-0, believe-24)
prep_than(believe-24, Herodotus-27)

(ROOT
  (S
    (NP
      (NP (CD One))
      (PP (IN of)
        (NP (PRP them))))
    (VP (VBZ speaks)
      (PP (IN from)
        (NP (PRP$ his) (JJ own) (NN experience)))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD visited)
            (NP
              (NP (DT the) (NN country))
              (: ;)
              (NP
                (NP (DT the)
                  (ADJP (JJ other)
                    (PP (IN from)
                      (NP
                        (NP (DT the) (NN testimony))
                        (PP (IN of)
                          (NP (DT a) (JJ young) (NN peasant))))))
                  (NN girl))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD came)
                      (PRT (RP back))
                      (PP (IN from)
                        (NP (PRP it)))
                      (PP (IN for)
                        (NP
                          (NP (DT a) (NN month) (POS 's))
                          (NN visit)))
                      (PP (TO to)
                        (NP (PRP$ her) (NNS friends))))))))))))
    (. .)))

nsubj(speaks-4, One-1)
prep_of(One-1, them-3)
root(ROOT-0, speaks-4)
poss(experience-8, his-6)
amod(experience-8, own-7)
prep_from(speaks-4, experience-8)
mark(visited-12, for-10)
nsubj(visited-12, he-11)
advcl(speaks-4, visited-12)
det(country-14, the-13)
dobj(visited-12, country-14)
det(girl-25, the-16)
amod(girl-25, other-17)
det(testimony-20, the-19)
prep_from(other-17, testimony-20)
det(peasant-24, a-22)
amod(peasant-24, young-23)
prep_of(testimony-20, peasant-24)
dep(country-14, girl-25)
nsubj(came-27, girl-25)
rcmod(girl-25, came-27)
prt(came-27, back-28)
prep_from(came-27, it-30)
det(month-33, a-32)
poss(visit-35, month-33)
prep_for(came-27, visit-35)
poss(friends-38, her-37)
prep_to(came-27, friends-38)

(ROOT
  (S
    (S
      (NP (DT The) (JJ former))
      (VP (VBD was)
        (NP
          (NP (DT a) (JJ great) (JJ Italian))
          (PP (IN of)
            (NP
              (NP (JJ noble) (NN family))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD died)
                    (ADVP
                      (NP
                        (QP (JJR more) (IN than) (CD five) (CD hundred))
                        (NNS years))
                      (RB ago))))))))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NN latter))
        (NP (DT a) (NNP Scotch)))
      (VP (VBD shepherd)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD died) (RB not)
              (VP (VB forty)
                (NP (NNS years))
                (ADVP (IN ago))))))))
    (. .)))

det(former-2, The-1)
nsubj(Italian-6, former-2)
cop(Italian-6, was-3)
det(Italian-6, a-4)
amod(Italian-6, great-5)
root(ROOT-0, Italian-6)
amod(family-9, noble-8)
prep_of(Italian-6, family-9)
nsubj(died-12, family-9)
rcmod(family-9, died-12)
mwe(than-14, more-13)
quantmod(hundred-16, than-14)
number(hundred-16, five-15)
num(years-17, hundred-16)
npadvmod(ago-18, years-17)
advmod(died-12, ago-18)
det(latter-21, the-20)
nsubj(shepherd-24, latter-21)
det(Scotch-23, a-22)
dep(latter-21, Scotch-23)
parataxis(Italian-6, shepherd-24)
nsubj(died-26, who-25)
ccomp(shepherd-24, died-26)
neg(died-26, not-27)
dep(died-26, forty-28)
tmod(forty-28, years-29)
advmod(forty-28, ago-30)

(ROOT
  (S
    (NP (DT The) (JJ Italian))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (VP (VBZ informs)
      (NP (PRP us))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (S
              (VP (TO to)
                (VP (VB enter)
                  (NP (DT that) (NN country))
                  (PP (IN through)
                    (NP
                      (NP (DT a) (NN fire))
                      (ADJP (RB so) (JJ hot))))
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (MD would)
                        (VP (VB have)
                          (VP (VBN thrown)
                            (NP (PRP himself))
                            (PP (IN into)
                              (NP (JJ boiling) (NN glass)))))))))))
            (S
              (VP (TO to)
                (VP (VB cool)
                  (NP (PRP himself)))))))))
    (. .)))

det(Italian-2, The-1)
nsubj(informs-6, Italian-2)
advmod(informs-6, then-4)
root(ROOT-0, informs-6)
dobj(informs-6, us-7)
mark(had-10, that-8)
nsubj(had-10, he-9)
nsubj(enter-12, he-9)
nsubj(cool-30, he-9)
ccomp(informs-6, had-10)
aux(enter-12, to-11)
xcomp(had-10, enter-12)
det(country-14, that-13)
dobj(enter-12, country-14)
det(fire-17, a-16)
prep_through(enter-12, fire-17)
advmod(hot-19, so-18)
amod(fire-17, hot-19)
mark(thrown-24, that-20)
nsubj(thrown-24, he-21)
aux(thrown-24, would-22)
aux(thrown-24, have-23)
ccomp(enter-12, thrown-24)
dobj(thrown-24, himself-25)
amod(glass-28, boiling-27)
prep_into(thrown-24, glass-28)
aux(cool-30, to-29)
xcomp(had-10, cool-30)
dobj(cool-30, himself-31)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBD was) (RB not)
        (NP
          (NP
            (NP (NNP Diamond) (POS 's))
            (NN experience))
          (PRN (, ,)
            (ADVP (RB but) (RB then))
            (NP (NNP Durante))
            (: --))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was)
                (NP
                  (NP (DT the) (NN name))
                  (PP (IN of)
                    (NP (DT the) (JJ Italian))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ means)
        (NP
          (NP (NNP Lasting))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP$ his) (NNS books))
              (VP (MD will)
                (VP (VB last)
                  (ADVP
                    (ADVP (RB as) (RB long))
                    (SBAR (IN as)
                      (S
                        (S
                          (NP (EX there))
                          (VP (VBP are)
                            (NP
                              (NP (JJ enough) (NNS men))
                              (PP (IN in)
                                (NP
                                  (NP (DT the) (NN world))
                                  (ADJP (JJ worthy)
                                    (PP (IN of)
                                      (S
                                        (VP (VBG having)
                                          (NP (PRP them)))))))))))
                        (: --)
                        (S
                          (NP (NNP Durante))
                          (VP (VBD was)
                            (NP (DT an) (JJ elderly) (NN man))))
                        (, ,)
                        (CC and)
                        (S
                          (NP (NNP Diamond))
                          (VP (VBD was)
                            (NP (DT a) (JJ little) (NN boy))))
                        (, ,)
                        (CC and)
                        (RB so)
                        (S
                          (NP (PRP$ their) (NN experience))
                          (VP (MD must)
                            (VP (VB be)
                              (ADJP
                                (NP (DT a) (RB little))
                                (JJ different)))))))))))))))
    (. .)))

nsubj(experience-6, This-1)
cop(experience-6, was-2)
neg(experience-6, not-3)
poss(experience-6, Diamond-4)
root(ROOT-0, experience-6)
nsubj(name-15, experience-6)
advmod(then-9, but-8)
dep(Durante-10, then-9)
dep(experience-6, Durante-10)
cop(name-15, was-13)
det(name-15, the-14)
rcmod(experience-6, name-15)
det(Italian-18, the-17)
prep_of(name-15, Italian-18)
nsubj(means-22, it-21)
conj_and(experience-6, means-22)
nsubj(name-15, means-22)
dobj(means-22, Lasting-23)
mark(last-29, for-25)
poss(books-27, his-26)
nsubj(last-29, books-27)
aux(last-29, will-28)
rcmod(Lasting-23, last-29)
advmod(long-31, as-30)
advmod(last-29, long-31)
mark(are-34, as-32)
expl(are-34, there-33)
advcl(long-31, are-34)
amod(men-36, enough-35)
nsubj(are-34, men-36)
det(world-39, the-38)
prep_in(men-36, world-39)
amod(world-39, worthy-40)
prepc_of(worthy-40, having-42)
dobj(having-42, them-43)
nsubj(man-49, Durante-45)
cop(man-49, was-46)
det(man-49, an-47)
amod(man-49, elderly-48)
advcl(long-31, man-49)
conj_and(are-34, man-49)
nsubj(boy-56, Diamond-52)
cop(boy-56, was-53)
det(boy-56, a-54)
amod(boy-56, little-55)
advcl(long-31, boy-56)
conj_and(are-34, boy-56)
poss(experience-61, their-60)
nsubj(different-66, experience-61)
aux(different-66, must-62)
cop(different-66, be-63)
det(little-65, a-64)
npadvmod(different-66, little-65)
advcl(long-31, different-66)
conj_and(are-34, different-66)

(ROOT
  (S
    (NP
      (NP (DT The) (NN peasant) (NN girl))
      (, ,)
      (PP (IN on)
        (NP (DT the) (JJ other) (NN hand)))
      (, ,))
    (VP
      (VP (VBD fell)
        (ADVP (RB fast)
          (ADJP (RB asleep)))
        (PP (IN in)
          (NP (DT a) (NN wood))))
      (, ,)
      (CC and)
      (VP (VBD woke)
        (PP (IN in)
          (NP (DT the) (JJ same) (NN country)))))
    (. .)))

det(girl-3, The-1)
nn(girl-3, peasant-2)
nsubj(fell-10, girl-3)
nsubj(woke-18, girl-3)
det(hand-8, the-6)
amod(hand-8, other-7)
prep_on(girl-3, hand-8)
root(ROOT-0, fell-10)
advmod(fell-10, fast-11)
pobj(fast-11, asleep-12)
det(wood-15, a-14)
prep_in(fell-10, wood-15)
conj_and(fell-10, woke-18)
det(country-22, the-20)
amod(country-22, same-21)
prep_in(woke-18, country-22)

(ROOT
  (S
    (PP (IN In)
      (S
        (VP (VBG describing)
          (NP (PRP it)))))
    (, ,)
    (NP (NNP Durante))
    (VP (VBZ says)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (DT the) (NN ground))
            (ADVP (RB everywhere))
            (VP (VBN smelt)
              (ADVP (RB sweetly)))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (JJ gentle) (, ,) (JJ even-tempered) (NN wind))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (ADVP (RB never))
                  (VP (VBD blew)
                    (S
                      (ADJP (JJR faster)
                        (CC or)
                        (JJR slower))))))
              (, ,))
            (VP (VBD breathed)
              (PP (IN in)
                (NP (PRP$ his) (NN face)))
              (SBAR (IN as)
                (S
                  (NP (PRP he))
                  (VP (VBD went) (, ,)
                    (S
                      (VP (VBG making)
                        (SBAR
                          (S
                            (S
                              (NP (PDT all) (DT the) (NNS leaves))
                              (VP (VBP point)
                                (NP (CD one) (NN way))
                                (, ,)
                                (SBAR (RB not) (RB so) (RB as)
                                  (S
                                    (VP (TO to)
                                      (VP (VB disturb)
                                        (NP (DT the) (NNS birds))
                                        (PP (IN in)
                                          (NP
                                            (NP (DT the) (NNS tops))
                                            (PP (IN of)
                                              (NP (DT the) (NNS trees)))))))))))
                            (, ,)
                            (CC but)
                            (, ,)
                            (PP (IN on)
                              (NP (DT the) (NN contrary))))))))))
              (, ,)
              (S
                (VP (VBG sounding)
                  (NP (DT a) (NN bass))
                  (PP (TO to)
                    (NP (PRP$ their) (NN song))))))))))
    (. .)))

prepc_in(says-6, describing-2)
dobj(describing-2, it-3)
nsubj(says-6, Durante-5)
root(ROOT-0, says-6)
mark(smelt-11, that-7)
det(ground-9, the-8)
nsubj(smelt-11, ground-9)
advmod(smelt-11, everywhere-10)
ccomp(says-6, smelt-11)
advmod(smelt-11, sweetly-12)
mark(breathed-29, that-15)
det(wind-20, a-16)
amod(wind-20, gentle-17)
amod(wind-20, even-tempered-19)
nsubj(blew-24, wind-20)
nsubj(breathed-29, wind-20)
neg(blew-24, never-23)
rcmod(wind-20, blew-24)
acomp(blew-24, faster-25)
acomp(blew-24, slower-27)
conj_or(faster-25, slower-27)
ccomp(says-6, breathed-29)
conj_and(smelt-11, breathed-29)
poss(face-32, his-31)
prep_in(breathed-29, face-32)
mark(went-35, as-33)
nsubj(went-35, he-34)
advcl(breathed-29, went-35)
xcomp(went-35, making-37)
predet(leaves-40, all-38)
det(leaves-40, the-39)
nsubj(point-41, leaves-40)
dep(making-37, point-41)
num(way-43, one-42)
dobj(point-41, way-43)
nsubj(disturb-49, way-43)
dep(disturb-49, not-45)
advmod(disturb-49, so-46)
advmod(disturb-49, as-47)
aux(disturb-49, to-48)
xcomp(point-41, disturb-49)
det(birds-51, the-50)
dobj(disturb-49, birds-51)
det(tops-54, the-53)
prep_in(disturb-49, tops-54)
det(trees-57, the-56)
prep_of(tops-54, trees-57)
dep(making-37, on-61)
conj_but(point-41, on-61)
det(contrary-63, the-62)
prep_on(point-41, contrary-63)
xcomp(breathed-29, sounding-65)
det(bass-67, a-66)
dobj(sounding-65, bass-67)
poss(song-70, their-69)
prep_to(sounding-65, song-70)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ describes)
      (ADVP (RB also))
      (NP
        (NP (DT a) (JJ little) (NN river))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD was)
              (ADJP (RB so) (JJ full))
              (SBAR (IN that)
                (S
                  (NP
                    (NP (PRP$ its) (JJ little) (NNS waves))
                    (, ,)
                    (SBAR (IN as)
                      (S
                        (NP (PRP it))
                        (VP (VBN hurried)
                          (ADVP (RB along)))))
                    (, ,))
                  (VP (VBZ bent)
                    (NP
                      (NP (DT the) (NN grass))
                      (, ,)
                      (PP (JJ full) (IN of)
                        (NP
                          (NP
                            (ADJP (JJ red)
                              (CC and)
                              (JJ yellow))
                            (NNS flowers))
                          (, ,)
                          (SBAR
                            (WHPP (IN through)
                              (WHNP (WDT which)))
                            (S
                              (NP (PRP it))
                              (VP (VBD flowed)))))))))))))))
    (. .)))

nsubj(describes-2, He-1)
root(ROOT-0, describes-2)
advmod(describes-2, also-3)
det(river-6, a-4)
amod(river-6, little-5)
dobj(describes-2, river-6)
nsubj(full-10, river-6)
cop(full-10, was-8)
advmod(full-10, so-9)
rcmod(river-6, full-10)
mark(bent-21, that-11)
poss(waves-14, its-12)
amod(waves-14, little-13)
nsubj(bent-21, waves-14)
mark(hurried-18, as-16)
nsubj(hurried-18, it-17)
rcmod(waves-14, hurried-18)
advmod(hurried-18, along-19)
ccomp(full-10, bent-21)
det(grass-23, the-22)
dobj(bent-21, grass-23)
dep(grass-23, full-25)
amod(flowers-30, red-27)
conj_and(red-27, yellow-29)
amod(flowers-30, yellow-29)
prep_of(grass-23, flowers-30)
prep_through(flowed-35, flowers-30)
nsubj(flowed-35, it-34)
rcmod(flowers-30, flowed-35)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ says)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (JJ purest) (NN stream))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN world))
                  (PP (IN beside)
                    (NP (DT this) (NN one))))))
            (VP (MD would)
              (VP (VB look)
                (SBAR (RB as) (IN if)
                  (S
                    (NP (PRP it))
                    (VP (VBD were)
                      (ADJP (JJ mixed))
                      (PP (IN with)
                        (NP
                          (NP (NN something))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD did) (RB not)
                                (VP (VB belong)
                                  (PP (TO to)
                                    (NP (PRP it)))))))))
                      (, ,)
                      (SBAR (RB even) (IN although)
                        (S
                          (NP (PRP it))
                          (VP (VBD was)
                            (VP (VBG flowing)
                              (ADVP (RB ever))
                              (PP (IN in)
                                (NP
                                  (NP (DT the) (JJ brown) (NN shadow))
                                  (PP (IN of)
                                    (NP (DT the) (NNS trees))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (CC neither)
        (NP (NN sun))
        (CC nor)
        (NP (NN moon)))
      (VP (MD could)
        (VP (VB shine)
          (PP (IN upon)
            (NP (PRP it))))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
mark(look-14, that-3)
det(stream-6, the-4)
amod(stream-6, purest-5)
nsubj(look-14, stream-6)
det(world-9, the-8)
prep_in(stream-6, world-9)
det(one-12, this-11)
prep_beside(world-9, one-12)
aux(look-14, would-13)
ccomp(says-2, look-14)
advmod(mixed-19, as-15)
mark(mixed-19, if-16)
nsubj(mixed-19, it-17)
cop(mixed-19, were-18)
advcl(look-14, mixed-19)
prep_with(mixed-19, something-21)
nsubj(belong-25, something-21)
aux(belong-25, did-23)
neg(belong-25, not-24)
rcmod(something-21, belong-25)
prep_to(belong-25, it-27)
advmod(flowing-33, even-29)
mark(flowing-33, although-30)
nsubj(flowing-33, it-31)
aux(flowing-33, was-32)
advcl(mixed-19, flowing-33)
advmod(flowing-33, ever-34)
det(shadow-38, the-36)
amod(shadow-38, brown-37)
prep_in(flowing-33, shadow-38)
det(trees-41, the-40)
prep_of(shadow-38, trees-41)
preconj(sun-45, neither-44)
nsubj(shine-49, sun-45)
conj_nor(sun-45, moon-47)
nsubj(shine-49, moon-47)
aux(shine-49, could-48)
conj_and(says-2, shine-49)
prep_upon(shine-49, it-51)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB imply)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (ADVP (RB always))
                  (NP
                    (NP (DT the) (NN month))
                    (PP (IN of)
                      (NP
                        (NP (NNP May))
                        (PP (IN in)
                          (NP (DT that) (NN country)))))))))))))
    (. .)))

nsubj(seems-2, He-1)
nsubj(imply-4, He-1)
root(ROOT-0, seems-2)
aux(imply-4, to-3)
xcomp(seems-2, imply-4)
mark(month-10, that-5)
nsubj(month-10, it-6)
cop(month-10, is-7)
advmod(month-10, always-8)
det(month-10, the-9)
ccomp(imply-4, month-10)
prep_of(month-10, May-12)
det(country-15, that-14)
prep_in(May-12, country-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (IN out)
          (PP (IN of)
            (NP (NN place))))
        (S
          (VP (TO to)
            (VP (VB describe)
              (ADVP (RB here))
              (NP
                (NP (DT the) (JJ wonderful) (NNS sights))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD saw))))))))
        (, ,)
        (PP (IN for)
          (NP
            (NP (DT the) (NN music))
            (PP (IN of)
              (NP
                (S
                  (S
                    (NP (PRP them))
                    (VP (VBZ is)
                      (PP (IN in)
                        (NP
                          (NP (DT another) (NN key))
                          (PP (IN from)
                            (NP
                              (NP (DT that))
                              (PP (IN of)
                                (NP (DT this) (NN story)))))))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (PRP I))
                    (VP (MD shall)
                      (ADVP (RB therefore))
                      (ADVP (RB only))
                      (VP (VB add)
                        (PP (IN from)
                          (NP
                            (NP (DT the) (NN account))
                            (PP (IN of)
                              (NP (DT this) (NN traveller)))))
                        (, ,)
                        (SBAR (IN that)
                          (S
                            (NP (DT the) (NNS people))
                            (ADVP (RB there))
                            (VP (VBP are)
                              (ADJP
                                (ADJP (RB so) (JJ free))
                                (CC and)
                                (ADJP (RB so) (RB just))
                                (CC and)
                                (ADJP (RB so) (JJ healthy)))
                              (, ,)
                              (SBAR (IN that)
                                (S
                                  (NP
                                    (NP (DT every) (NN one))
                                    (PP (IN of)
                                      (NP (PRP them))))
                                  (VP (VBZ has)
                                    (NP
                                      (NP (DT a) (NN crown))
                                      (PP (IN like)
                                        (NP (DT a) (NN king))))))))))))))
                (CC and)
                (NP
                  (NP (DT a) (NN mitre))
                  (PP (IN like)
                    (NP (DT a) (NN priest))))))))))
    (. .)))

nsubj(out-4, It-1)
nsubj(describe-8, It-1)
aux(out-4, would-2)
cop(out-4, be-3)
root(ROOT-0, out-4)
prep_of(out-4, place-6)
aux(describe-8, to-7)
xcomp(out-4, describe-8)
advmod(describe-8, here-9)
det(sights-12, the-10)
amod(sights-12, wonderful-11)
dobj(describe-8, sights-12)
nsubj(saw-14, he-13)
rcmod(sights-12, saw-14)
det(music-18, the-17)
prep_for(out-4, music-18)
nsubj(is-21, them-20)
prep_of(music-18, is-21)
det(key-24, another-23)
prep_in(is-21, key-24)
prep_from(key-24, that-26)
det(story-29, this-28)
prep_of(that-26, story-29)
nsubj(add-36, I-32)
aux(add-36, shall-33)
advmod(add-36, therefore-34)
advmod(add-36, only-35)
prep_of(music-18, add-36)
conj_and(is-21, add-36)
det(account-39, the-38)
prep_from(add-36, account-39)
det(traveller-42, this-41)
prep_of(account-39, traveller-42)
mark(free-50, that-44)
det(people-46, the-45)
nsubj(free-50, people-46)
nsubj(healthy-56, people-46)
advmod(free-50, there-47)
cop(free-50, are-48)
advmod(free-50, so-49)
ccomp(add-36, free-50)
advmod(just-53, so-52)
ccomp(add-36, just-53)
conj_and(free-50, just-53)
advmod(healthy-56, so-55)
ccomp(add-36, healthy-56)
conj_and(free-50, healthy-56)
mark(has-63, that-58)
det(one-60, every-59)
nsubj(has-63, one-60)
prep_of(one-60, them-62)
ccomp(free-50, has-63)
det(crown-65, a-64)
dobj(has-63, crown-65)
det(king-68, a-67)
prep_like(crown-65, king-68)
det(mitre-71, a-70)
prep_of(music-18, mitre-71)
conj_and(is-21, mitre-71)
det(priest-74, a-73)
prep_like(mitre-71, priest-74)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN peasant) (NN girl))
        (PRN (: --)
          (S
            (NP (NNP Kilmeny))
            (VP (VBD was)
              (NP (PRP$ her) (NN name))))
          (: --)))
      (VP (MD could) (RB not)
        (VP (VB report)
          (NP (JJ such) (JJ grand) (NNS things))
          (PP (IN as)
            (NP (NNP Durante)))
          (, ,)
          (PP (IN for))
          (, ,)
          (SBAR (IN as)
            (S
              (S
                (NP (DT the) (NN shepherd))
                (VP (VBZ says)))
              (, ,)
              (S
                (S
                  (VP (VBG telling)
                    (NP (PRP$ her) (NN story))
                    (SBAR (IN as)
                      (S
                        (NP (PRP I))
                        (VP (VBP tell)
                          (NP (NNP Diamond) (POS 's)))))
                    (: --) (`` ``)
                    (S
                      (NP (NNP Kilmeny))
                      (VP (VBD had)
                        (VP (VBN been)
                          (NP (PRP she)))))))
                (VP (VBD knew) (RB not)
                  (VP
                    (FRAG
                      (WHADVP (WRB where))))))
              (, ,)
              (CC And)
              (S
                (NP (NNP Kilmeny))
                (VP (VBD had)
                  (VP (VBN seen)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP she))
                        (VP (MD could) (RB not)
                          (VP (VB declare))))))))
              (: ;)
              (S
                (NP (NNP Kilmeny))
                (VP (VBD had)
                  (VP (VBN been)
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (DT the) (NN cock))
                        (ADVP (RB never))
                        (VP (VBZ crew)))))))))
          (, ,)
          (SBAR
            (WHADVP (WRB Where))
            (S
              (NP (DT the) (NN rain))
              (ADVP (RB never))
              (VP (VBD fell)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN wind))
      (ADVP (RB never))
      (VP (VBD blew)))
    (. .)))

det(girl-3, The-1)
nn(girl-3, peasant-2)
nsubj(report-12, girl-3)
nsubj(name-8, Kilmeny-5)
cop(name-8, was-6)
poss(name-8, her-7)
dep(girl-3, name-8)
aux(report-12, could-10)
neg(report-12, not-11)
root(ROOT-0, report-12)
amod(things-15, such-13)
amod(things-15, grand-14)
dobj(report-12, things-15)
prep_as(report-12, Durante-17)
prep(report-12, for-19)
mark(says-24, as-21)
det(shepherd-23, the-22)
nsubj(says-24, shepherd-23)
advcl(report-12, says-24)
csubj(knew-40, telling-26)
poss(story-28, her-27)
dobj(telling-26, story-28)
mark(tell-31, as-29)
nsubj(tell-31, I-30)
advcl(telling-26, tell-31)
dobj(tell-31, Diamond-32)
possessive(Diamond-32, 's-33)
nsubj(she-39, Kilmeny-36)
aux(she-39, had-37)
cop(she-39, been-38)
dep(telling-26, she-39)
advcl(report-12, knew-40)
ccomp(says-24, knew-40)
conj_and(says-24, knew-40)
neg(knew-40, not-41)
dep(knew-40, where-42)
nsubj(seen-47, Kilmeny-45)
aux(seen-47, had-46)
advcl(report-12, seen-47)
conj_and(says-24, seen-47)
dobj(declare-52, what-48)
nsubj(declare-52, she-49)
aux(declare-52, could-50)
neg(declare-52, not-51)
ccomp(seen-47, declare-52)
nsubj(been-56, Kilmeny-54)
aux(been-56, had-55)
advcl(report-12, been-56)
conj_and(says-24, been-56)
parataxis(says-24, been-56)
advmod(crew-61, where-57)
det(cock-59, the-58)
nsubj(crew-61, cock-59)
neg(crew-61, never-60)
advcl(been-56, crew-61)
advmod(fell-67, Where-63)
det(rain-65, the-64)
nsubj(fell-67, rain-65)
neg(fell-67, never-66)
advcl(report-12, fell-67)
det(wind-71, the-70)
nsubj(blew-73, wind-71)
neg(blew-73, never-72)
conj_and(report-12, blew-73)

(ROOT
  (S
    (S (CC But)
      (NP (PRP it))
      (VP (VBD seemed)
        (SBAR (IN as)
          (S
            (NP
              (NP (DT the) (NN harp))
              (PP (IN of)
                (NP (DT the) (NN sky))))
            (VP (VBD had)
              (VP (VBN rung)))))))
    (, ,)
    (CC And)
    (S
      (S
        (NP
          (NP (DT the) (NNS airs))
          (PP (IN of)
            (NP (NN heaven))))
        (VP (VBD played)
          (NP (NN round))
          (NP
            (NP
              (NP
                (NP (PRP$ her) (NN tongue))
                (, ,)
                (SBAR
                  (WHADVP (WRB When))
                  (S
                    (NP (PRP she))
                    (VP (VBD spoke)
                      (SBAR
                        (S
                          (PP (IN of)
                            (NP (DT the) (JJ lovely) (NNS forms)))
                          (NP (PRP she))
                          (VP (VBD had)
                            (VP (VBN seen))))))))
                (, ,))
              (CC And)
              (NP
                (NP (DT a) (NN land))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (NN sin))
                    (VP (VBD had)
                      (ADVP (RB never))
                      (VP (VBN been)))))))
            (: ;)
            (NP
              (NP
                (NP (DT A) (NN land))
                (PP (IN of)
                  (NP (NN love))))
              (CC and)
              (NP
                (NP (DT a) (NN land))
                (PP (IN of)
                  (NP
                    (NP (NN light))
                    (, ,)
                    (NP (JJ Withouten) (NN sun))
                    (, ,)
                    (CC or)
                    (NP (NN moon))))))
            (, ,)
            (CC or)
            (NP
              (NP (NN night))
              (: ;)
              (SBAR
                (WHADVP (WRB Where))
                (S
                  (NP (DT the) (NN river))
                  (VP (VBN swayed)
                    (NP (DT a) (NN living) (NN stream)))))))))
      (, ,)
      (CC And)
      (S
        (FRAG
          (NP
            (NP (DT the) (NN light))
            (NP (DT a) (JJ pure)
              (CC and)
              (JJ cloudless) (NN beam)))
          (: :)
          (NP
            (NP (DT The) (NN land))
            (PP (IN of)
              (NP (NN vision)))))
        (NP (PRP it))
        (VP (MD would)
          (VP (VB seem) (, ,)
            (FRAG (CC And)
              (ADVP (RB still))
              (NP (DT an) (JJ everlasting) (NN dream)))))))
    (. .) ('' '')))

nsubj(seemed-3, it-2)
root(ROOT-0, seemed-3)
mark(rung-11, as-4)
det(harp-6, the-5)
nsubj(rung-11, harp-6)
det(sky-9, the-8)
prep_of(harp-6, sky-9)
aux(rung-11, had-10)
advcl(seemed-3, rung-11)
det(airs-15, the-14)
nsubj(played-18, airs-15)
prep_of(airs-15, heaven-17)
conj_and(seemed-3, played-18)
iobj(played-18, round-19)
poss(tongue-21, her-20)
dobj(played-18, tongue-21)
advmod(spoke-25, When-23)
nsubj(spoke-25, she-24)
rcmod(tongue-21, spoke-25)
det(forms-29, the-27)
amod(forms-29, lovely-28)
prep_of(seen-32, forms-29)
nsubj(seen-32, she-30)
aux(seen-32, had-31)
ccomp(spoke-25, seen-32)
det(land-36, a-35)
conj_and(tongue-21, land-36)
advmod(been-41, where-37)
nsubj(been-41, sin-38)
aux(been-41, had-39)
neg(been-41, never-40)
rcmod(land-36, been-41)
det(land-44, A-43)
dobj(played-18, land-44)
conj_and(tongue-21, land-44)
prep_of(land-44, love-46)
det(land-49, a-48)
conj_and(tongue-21, land-49)
conj_and(land-44, land-49)
prep_of(land-49, light-51)
amod(sun-54, Withouten-53)
prep_of(land-49, sun-54)
conj_or(light-51, sun-54)
prep_of(land-49, moon-57)
conj_or(light-51, moon-57)
conj_or(tongue-21, night-60)
advmod(swayed-65, Where-62)
det(river-64, the-63)
nsubj(swayed-65, river-64)
rcmod(night-60, swayed-65)
det(stream-68, a-66)
nn(stream-68, living-67)
dobj(swayed-65, stream-68)
det(light-72, the-71)
dep(seem-85, light-72)
det(beam-77, a-73)
amod(beam-77, pure-74)
conj_and(pure-74, cloudless-76)
amod(beam-77, cloudless-76)
dep(light-72, beam-77)
det(land-80, The-79)
dep(light-72, land-80)
prep_of(land-80, vision-82)
nsubj(seem-85, it-83)
aux(seem-85, would-84)
conj_and(seemed-3, seem-85)
conj_and(played-18, seem-85)
cc(dream-91, And-87)
dep(dream-91, still-88)
det(dream-91, an-89)
amod(dream-91, everlasting-90)
dep(seem-85, dream-91)

(ROOT
  (S
    (NP (DT The) (JJ last) (CD two) (NNS lines))
    (VP (VBP are)
      (NP
        (NP
          (NP (DT the) (NN shepherd) (POS 's))
          (JJ own) (NN remark))
        (, ,)
        (CC and)
        (NP
          (NP (DT a) (NN matter))
          (PP (IN of)
            (NP (NN opinion))))))
    (. .)))

det(lines-4, The-1)
amod(lines-4, last-2)
num(lines-4, two-3)
nsubj(remark-10, lines-4)
cop(remark-10, are-5)
det(shepherd-7, the-6)
poss(remark-10, shepherd-7)
amod(remark-10, own-9)
root(ROOT-0, remark-10)
det(matter-14, a-13)
conj_and(remark-10, matter-14)
prep_of(matter-14, opinion-16)

(ROOT
  (S
    (S (CC But)
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ clear))
        (PRN (, ,)
          (S
            (NP (PRP I))
            (VP (VBP think)))
          (, ,))
        (SBAR (IN that)
          (S
            (NP (NNP Kilmeny))
            (VP (MD must)
              (VP (VB have)
                (VP (VBN described)
                  (NP (DT the) (JJ same) (NN country))
                  (SBAR (IN as)
                    (S
                      (NP (NNP Durante))
                      (VP (VBD saw) (, ,)
                        (ADVP (RB though))
                        (, ,)
                        (S
                          (VP (RB not) (VBG having)
                            (NP (PRP$ his) (NN experience))))))))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD could) (RB neither)
      (VP (VB understand)
        (CC nor)
        (VB describe)
        (NP (PRP it))
        (ADVP (RB so) (RB well))))
    (. .)))

cc(clear-4, But-1)
nsubj(clear-4, it-2)
cop(clear-4, is-3)
ccomp(understand-31, clear-4)
nsubj(think-7, I-6)
parataxis(clear-4, think-7)
mark(described-13, that-9)
nsubj(described-13, Kilmeny-10)
aux(described-13, must-11)
aux(described-13, have-12)
ccomp(clear-4, described-13)
det(country-16, the-14)
amod(country-16, same-15)
dobj(described-13, country-16)
mark(saw-19, as-17)
nsubj(saw-19, Durante-18)
advcl(described-13, saw-19)
advmod(saw-19, though-21)
neg(having-24, not-23)
ccomp(saw-19, having-24)
xcomp(saw-19, having-24)
poss(experience-26, his-25)
dobj(having-24, experience-26)
nsubj(understand-31, she-28)
nsubj(describe-33, she-28)
aux(understand-31, could-29)
advmod(understand-31, neither-30)
root(ROOT-0, understand-31)
conj_nor(understand-31, describe-33)
dobj(understand-31, it-34)
advmod(well-36, so-35)
advmod(understand-31, well-36)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP I))
    (VP (MD must)
      (VP (VB give)
        (NP (PRP you))
        (NP
          (NP (JJ such) (NNS fragments))
          (PP (IN of)
            (NP (NN recollection))))
        (SBAR (IN as)
          (S
            (NP (NNP Diamond))
            (VP (VBD was)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB bring)
                      (PRT (RP back))
                      (PP (IN with)
                        (NP (PRP him))))))))))))
    (. .)))

advmod(give-4, Now-1)
nsubj(give-4, I-2)
aux(give-4, must-3)
root(ROOT-0, give-4)
iobj(give-4, you-5)
amod(fragments-7, such-6)
dobj(give-4, fragments-7)
prep_of(fragments-7, recollection-9)
mark(able-13, as-10)
nsubj(able-13, Diamond-11)
nsubj(bring-15, Diamond-11)
cop(able-13, was-12)
advcl(give-4, able-13)
aux(bring-15, to-14)
xcomp(able-13, bring-15)
prt(bring-15, back-16)
prep_with(bring-15, him-18)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD came)
          (PP (TO to)
            (NP (PRP himself)))
          (SBAR (IN after)
            (S
              (NP (PRP he))
              (VP (VBD fell)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD found)
      (NP (PRP himself))
      (PP (IN at)
        (NP
          (NP (DT the) (NN back))
          (PP (IN of)
            (NP (DT the) (NN north) (NN wind))))))
    (. .)))

advmod(came-3, When-1)
nsubj(came-3, he-2)
advcl(found-11, came-3)
prep_to(came-3, himself-5)
mark(fell-8, after-6)
nsubj(fell-8, he-7)
advcl(came-3, fell-8)
nsubj(found-11, he-10)
root(ROOT-0, found-11)
dobj(found-11, himself-12)
det(back-15, the-14)
prep_at(found-11, back-15)
det(wind-19, the-17)
nn(wind-19, north-18)
prep_of(back-15, wind-19)

(ROOT
  (S
    (NP (NNP North))
    (VP (VBD Wind)
      (SBAR
        (S
          (NP (PRP herself))
          (VP (VBD was)
            (ADVP (RB nowhere))
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN seen)))))))))
    (. .)))

nsubj(Wind-2, North-1)
root(ROOT-0, Wind-2)
nsubj(was-4, herself-3)
nsubjpass(seen-8, herself-3)
ccomp(Wind-2, was-4)
advmod(was-4, nowhere-5)
aux(seen-8, to-6)
auxpass(seen-8, be-7)
xcomp(was-4, seen-8)

(ROOT
  (S
    (NP (DT Neither))
    (VP (VBD was)
      (ADVP (RB there))
      (NP
        (NP
          (NP (DT a) (NN vestige))
          (PP (IN of)
            (NP (NN snow))))
        (CC or)
        (NP
          (PP (IN of)
            (NP (NN ice)))
          (PP (IN within)
            (NP (NN sight))))))
    (. .)))

nsubj(vestige-5, Neither-1)
cop(vestige-5, was-2)
advmod(vestige-5, there-3)
det(vestige-5, a-4)
root(ROOT-0, vestige-5)
prep_of(vestige-5, snow-7)
conj_or(vestige-5, of-9)
pobj(of-9, ice-10)
prep_within(of-9, sight-12)

(ROOT
  (S
    (S
      (NP (DT The) (NN sun))
      (ADVP (RB too))
      (VP (VBD had)
        (VP (VBN vanished))))
    (: ;)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBD was)
        (ADVP (DT no) (NN matter))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP
                (NP (RB plenty))
                (PP (IN of)
                  (NP (DT a) (JJ certain)
                    (ADJP (RB still) (JJ rayless))
                    (NN light)))))))))
    (. .)))

det(sun-2, The-1)
nsubj(vanished-5, sun-2)
advmod(vanished-5, too-3)
aux(vanished-5, had-4)
root(ROOT-0, vanished-5)
nsubj(was-9, that-8)
conj_but(vanished-5, was-9)
neg(matter-11, no-10)
advmod(was-9, matter-11)
mark(was-15, for-13)
expl(was-15, there-14)
advcl(was-9, was-15)
nsubj(was-15, plenty-16)
det(light-22, a-18)
amod(light-22, certain-19)
advmod(rayless-21, still-20)
amod(light-22, rayless-21)
prep_of(plenty-16, light-22)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB Where))
        (S
          (NP (PRP it))
          (VP (VBD came)
            (PP (IN from)
              (NP (PRP he))))))
      (ADVP (RB never))
      (VP (VBD found)
        (PRT (RP out))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD belonged)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN country))
                  (ADVP (PRP itself)))))))))
    (. .)))

advmod(came-3, Where-1)
nsubj(came-3, it-2)
advcl(found-7, came-3)
csubj(found-7, came-3)
prep_from(came-3, he-5)
neg(found-7, never-6)
root(ROOT-0, found-7)
prt(found-7, out-8)
nsubj(thought-12, he-11)
conj_but(found-7, thought-12)
nsubj(belonged-14, it-13)
ccomp(thought-12, belonged-14)
det(country-17, the-16)
prep_to(belonged-14, country-17)
advmod(country-17, itself-18)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (NP (PRP he))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP it))
          (VP
            (VP (VBD came)
              (PRT (RP out))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS flowers))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD were)
                        (ADJP (RB very) (JJ bright))))))))
            (, ,)
            (CC but)
            (VP (VBD had)
              (NP (DT no) (JJ strong) (NN colour)))))))
    (. .)))

advmod(thought-3, Sometimes-1)
nsubj(thought-3, he-2)
root(ROOT-0, thought-3)
nsubj(came-5, it-4)
nsubj(had-17, it-4)
ccomp(thought-3, came-5)
det(flowers-9, the-8)
prep_out_of(came-5, flowers-9)
nsubj(bright-14, flowers-9)
cop(bright-14, were-12)
advmod(bright-14, very-13)
rcmod(flowers-9, bright-14)
ccomp(thought-3, had-17)
conj_but(came-5, had-17)
neg(colour-20, no-18)
amod(colour-20, strong-19)
dobj(had-17, colour-20)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (SBAR
          (S
            (NP
              (NP (DT the) (NN river))
              (PRN (: --)
                (SBAR (IN for)
                  (S
                    (NP (DT all))
                    (VP (VBP agree)
                      (SBAR (IN that)
                        (S
                          (NP (EX there))
                          (VP (VBZ is)
                            (NP (DT a) (NN river))
                            (ADVP (RB there))))))))
                (: --)))
            (VP (VBD flowed)
              (PP
                (CONJP (RB not) (JJ only))
                (PP (IN through))
                (, ,)
                (CC but)
                (PP (IN over)
                  (NP (NN grass)))))))))
    (: :)
    (S
      (NP (PRP$ its) (NN channel))
      (, ,)
      (PP (RB instead) (IN of)
        (S
          (VP (VBG being)
            (NP
              (NP (NN rock))
              (, ,)
              (NP (NNS stones))
              (, ,)
              (NP (NNS pebbles))
              (, ,)
              (NP (NN sand))
              (, ,)
              (CC or)
              (NP (NN anything) (RB else))))))
      (, ,)
      (VP (VBD was)
        (PP (IN of)
          (NP (JJ pure) (NN meadow) (NN grass)))
        (, ,)
        (ADVP (RB not) (IN over) (JJ long))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
det(river-4, the-3)
nsubj(flowed-16, river-4)
mark(agree-8, for-6)
nsubj(agree-8, all-7)
dep(river-4, agree-8)
mark(is-11, that-9)
expl(is-11, there-10)
ccomp(agree-8, is-11)
det(river-13, a-12)
nsubj(is-11, river-13)
advmod(is-11, there-14)
ccomp(said-2, flowed-16)
neg(only-18, not-17)
preconj(through-19, only-18)
prep(flowed-16, through-19)
prep(flowed-16, over-22)
conj_but(through-19, over-22)
pobj(over-22, grass-23)
poss(channel-26, its-25)
nsubj(was-43, channel-26)
cop(rock-31, being-30)
prepc_instead_of(was-43, rock-31)
conj_or(rock-31, stones-33)
prepc_instead_of(was-43, stones-33)
conj_or(rock-31, pebbles-35)
prepc_instead_of(was-43, pebbles-35)
conj_or(rock-31, sand-37)
prepc_instead_of(was-43, sand-37)
conj_or(rock-31, anything-40)
prepc_instead_of(was-43, anything-40)
advmod(anything-40, else-41)
parataxis(said-2, was-43)
amod(grass-47, pure-45)
nn(grass-47, meadow-46)
prep_of(was-43, grass-47)
dep(over-50, not-49)
advmod(was-43, over-50)
advmod(over-50, long-51)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD insisted)
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP it))
              (VP (VBD did) (RB not)
                (VP (VB sing)
                  (NP
                    (NP (NNS tunes))
                    (PP (IN in)
                      (NP
                        (NP (NNS people) (POS 's))
                        (NNS ears))))))))
          (, ,)
          (NP (PRP it))
          (VP (VBD sung)
            (SBAR
              (S
                (NP
                  (NP (NNS tunes))
                  (PP (IN in)
                    (NP (PRP$ their) (NNS heads)))
                  (, ,)
                  (PP (IN in)
                    (NP
                      (NP (NN proof))
                      (SBAR
                        (WHPP (IN of)
                          (WHNP (WDT which)))
                        (S
                          (NP (PRP I))
                          (VP (MD may)
                            (VP (VB mention)
                              (SBAR
                                (SBAR (IN that)
                                  (S (, ,)
                                    (PP (IN in)
                                      (NP
                                        (NP (DT the) (NNS troubles))
                                        (SBAR
                                          (WHNP (WDT which))
                                          (S
                                            (VP (VBD followed))))))
                                    (, ,)
                                    (NP (NNP Diamond))
                                    (VP (VBD was)
                                      (ADVP (RB often))
                                      (VP (VBN heard)
                                        (S
                                          (VP (VBG singing)))))))
                                (: ;)
                                (CC and)
                                (SBAR
                                  (WHADVP (WRB when))
                                  (S
                                    (VP (VBD asked)
                                      (SBAR
                                        (WHNP (WP what))
                                        (S
                                          (NP (PRP he))
                                          (VP (VBD was)
                                            (VP (VBG singing)))))))))))))))
                  (, ,))
                (VP (MD would)
                  (VP (VB answer) (, ,) (`` ``)
                    (S
                      (NP
                        (NP (CD One))
                        (PP (IN of)
                          (NP (DT the) (NNS tunes))))
                      (NP
                        (NP (DT the) (NN river))
                        (PP (IN at)
                          (NP
                            (NP (DT the) (NN back))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NN north) (NN wind))
                                (VP (VBN sung))))))))))))))))
    (. .) ('' '')))

nsubj(insisted-2, He-1)
root(ROOT-0, insisted-2)
mark(sung-16, that-3)
mark(sing-8, if-4)
nsubj(sing-8, it-5)
aux(sing-8, did-6)
neg(sing-8, not-7)
advcl(sung-16, sing-8)
dobj(sing-8, tunes-9)
poss(ears-13, people-11)
prep_in(tunes-9, ears-13)
nsubj(sung-16, it-15)
ccomp(insisted-2, sung-16)
nsubj(answer-52, tunes-17)
poss(heads-20, their-19)
prep_in(tunes-17, heads-20)
prep_in(tunes-17, proof-23)
prep_of(mention-28, proof-23)
nsubj(mention-28, I-26)
aux(mention-28, may-27)
rcmod(proof-23, mention-28)
mark(heard-40, that-29)
det(troubles-33, the-32)
nsubj(followed-35, troubles-33)
prep_in(heard-40, troubles-33)
rcmod(troubles-33, followed-35)
nsubjpass(heard-40, Diamond-37)
nsubjpass(asked-45, Diamond-37)
auxpass(heard-40, was-38)
advmod(heard-40, often-39)
ccomp(mention-28, heard-40)
xcomp(heard-40, singing-41)
advmod(asked-45, when-44)
ccomp(mention-28, asked-45)
conj_and(heard-40, asked-45)
dobj(singing-49, what-46)
nsubj(singing-49, he-47)
aux(singing-49, was-48)
ccomp(asked-45, singing-49)
aux(answer-52, would-51)
ccomp(sung-16, answer-52)
nsubj(river-60, One-55)
det(tunes-58, the-57)
prep_of(One-55, tunes-58)
det(river-60, the-59)
xcomp(answer-52, river-60)
det(back-63, the-62)
prep_at(river-60, back-63)
det(wind-67, the-65)
nn(wind-67, north-66)
prep_of(back-63, wind-67)
vmod(wind-67, sung-68)

(ROOT
  (S (CC And)
    (S
      (NP (PRP I))
      (VP (MD may)
        (ADVP (RB as) (RB well))
        (VP (VB say)
          (ADVP (IN at) (RB once))
          (SBAR (IN that)
            (S
              (NP (NNP Diamond))
              (ADVP (RB never))
              (VP (VBD told)
                (NP (DT these) (NNS things))
                (PP (TO to)
                  (NP (DT any) (NN one)))
                (ADVP (RB but) (: --) (RB no))))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (ADVP (RBR better) (RB not))
          (VP (VB say)
            (SBAR
              (SBAR
                (WHNP (WP who))
                (S
                  (NP (PRP it))
                  (VP (VBD was))))
              (: ;)
              (PRN (CC but)
                (SBAR
                  (WHNP (WP whoever))
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (VP (VBN told)
                        (NP (PRP me)))))))))))
      (, ,))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (ADVP (RB well))
                (S
                  (VP (TO to)
                    (VP (VB write)
                      (NP (PRP them))
                      (PP (IN for)
                        (NP (PRP$ my) (NNS child-readers))))))))))))
    (. .)))

nsubj(say-6, I-2)
aux(say-6, may-3)
advmod(well-5, as-4)
mwe(well-5, as-4)
advmod(say-6, well-5)
root(ROOT-0, say-6)
advmod(say-6, at-7)
advmod(at-7, once-8)
mark(told-12, that-9)
nsubj(told-12, Diamond-10)
neg(told-12, never-11)
ccomp(say-6, told-12)
det(things-14, these-13)
dobj(told-12, things-14)
det(one-17, any-16)
prep_to(told-12, one-17)
advmod(no-20, but-18)
advmod(told-12, no-20)
nsubj(say-26, I-22)
aux(say-26, had-23)
advmod(not-25, better-24)
neg(say-26, not-25)
dep(say-6, say-26)
dobj(was-29, who-27)
nsubj(was-29, it-28)
dep(say-26, was-29)
cc(told-35, but-31)
dobj(told-35, whoever-32)
nsubjpass(told-35, it-33)
auxpass(told-35, was-34)
dep(was-29, told-35)
dobj(told-35, me-36)
nsubj(thought-40, I-39)
conj_and(say-6, thought-40)
nsubj(be-43, it-41)
nsubj(write-46, it-41)
aux(be-43, would-42)
ccomp(thought-40, be-43)
advmod(be-43, well-44)
aux(write-46, to-45)
xcomp(be-43, write-46)
dobj(write-46, them-47)
poss(child-readers-50, my-49)
prep_for(write-46, child-readers-50)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD could) (RB not)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD was)
                (ADJP (RB very) (JJ happy))
                (ADVP (RB there))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (S
                        (NP (CC neither)
                          (NP (PRP$ his) (NN father))
                          (CC nor)
                          (NP (NN mother)))
                        (PP (IN with)
                          (NP (PRP him)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD felt)
        (ADJP
          (ADJP (RB so) (RB still))
          (CC and)
          (ADJP (JJ quiet)
            (CC and)
            (JJ patient)
            (CC and)
            (JJ contented)))
        (, ,)
        (SBAR (IN that)
          (PRN (, ,)
            (ADVP
              (ADVP (RB as) (RB far))
              (SBAR (IN as)
                (S
                  (NP (DT the) (JJ mere) (NN feeling))
                  (VP (VBD went)))))
            (, ,))
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADJP
                (NP (NN something))
                (JJR better)
                (PP (IN than)
                  (NP (JJ mere) (NN happiness)))))))))
    (. .)))

nsubj(say-4, He-1)
aux(say-4, could-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
nsubj(happy-8, he-5)
cop(happy-8, was-6)
advmod(happy-8, very-7)
ccomp(say-4, happy-8)
advmod(happy-8, there-9)
mark(had-13, for-11)
nsubj(had-13, he-12)
advcl(happy-8, had-13)
preconj(father-16, neither-14)
poss(father-16, his-15)
dep(had-13, father-16)
dep(had-13, mother-18)
conj_nor(father-16, mother-18)
dep(father-16, with-19)
pobj(with-19, him-20)
nsubj(felt-24, he-23)
conj_but(say-4, felt-24)
advmod(still-26, so-25)
acomp(felt-24, still-26)
dep(patient-30, quiet-28)
acomp(felt-24, patient-30)
conj_and(still-26, patient-30)
conj_and(still-26, contented-32)
conj_and(patient-30, contented-32)
mark(better-47, that-34)
advmod(far-37, as-36)
dep(better-47, far-37)
mark(went-42, as-38)
det(feeling-41, the-39)
amod(feeling-41, mere-40)
nsubj(went-42, feeling-41)
advcl(far-37, went-42)
ccomp(far-37, went-42)
nsubj(better-47, it-44)
cop(better-47, was-45)
npadvmod(better-47, something-46)
ccomp(felt-24, better-47)
amod(happiness-50, mere-49)
prep_than(better-47, happiness-50)

(ROOT
  (S
    (NP (NN Nothing))
    (VP (VBD went)
      (ADJP (JJ wrong))
      (PP (IN at)
        (NP
          (NP (DT the) (NN back))
          (PP (IN of)
            (NP (DT the) (NN north) (NN wind))))))
    (. .)))

nsubj(went-2, Nothing-1)
root(ROOT-0, went-2)
acomp(went-2, wrong-3)
det(back-6, the-5)
prep_at(went-2, back-6)
det(wind-10, the-8)
nn(wind-10, north-9)
prep_of(back-6, wind-10)

(ROOT
  (S
    (S
      (NP (DT Neither))
      (VP (VBD was)
        (NP (NN anything))
        (ADVP (RB quite) (RB right))))
    (, ,)
    (NP (PRP he))
    (VP (VBD thought))
    (. .)))

nsubj(anything-3, Neither-1)
cop(anything-3, was-2)
ccomp(thought-8, anything-3)
advmod(right-5, quite-4)
advmod(anything-3, right-5)
nsubj(thought-8, he-7)
root(ROOT-0, thought-8)

(ROOT
  (S
    (NP (RB Only) (NN everything))
    (VP (VBD was)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ right))
              (NP (DT some) (NN day)))))))
    (. .)))

advmod(everything-2, Only-1)
nsubj(going-4, everything-2)
nsubj(right-7, everything-2)
aux(going-4, was-3)
root(ROOT-0, going-4)
aux(right-7, to-5)
cop(right-7, be-6)
xcomp(going-4, right-7)
det(day-9, some-8)
tmod(right-7, day-9)

(ROOT
  (S
    (NP (PRP$ His) (NN account))
    (VP
      (VP (VBD disagreed)
        (PP (IN with)
          (NP
            (NP (DT that))
            (PP (IN of)
              (NP (NNP Durante))))))
      (, ,)
      (CC and)
      (VP (VBD agreed)
        (PP (IN with)
          (NP
            (NP (DT that))
            (PP (IN of)
              (NP (NNP Kilmeny))))))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT this))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD protested)
                (SBAR
                  (S
                    (NP (EX there))
                    (VP (VBD was)
                      (ADVP
                        (NP (DT no) (NN wind))
                        (RB there))
                      (ADVP (IN at) (DT all)))))))))))
    (. .)))

poss(account-2, His-1)
nsubj(disagreed-3, account-2)
nsubj(agreed-10, account-2)
root(ROOT-0, disagreed-3)
prep_with(disagreed-3, that-5)
prep_of(that-5, Durante-7)
conj_and(disagreed-3, agreed-10)
prep_with(agreed-10, that-12)
prep_of(that-12, Kilmeny-14)
conj_and(disagreed-3, in-16)
prep_in(disagreed-3, this-17)
mark(protested-21, that-19)
nsubj(protested-21, he-20)
dep(this-17, protested-21)
expl(was-23, there-22)
ccomp(protested-21, was-23)
neg(wind-25, no-24)
npadvmod(there-26, wind-25)
advmod(was-23, there-26)
advmod(was-23, at-27)
pobj(at-27, all-28)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD fancy)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD missed)
            (NP (PRP it))))))
    (. .)))

nsubj(fancy-2, I-1)
root(ROOT-0, fancy-2)
nsubj(missed-4, he-3)
ccomp(fancy-2, missed-4)
dobj(missed-4, it-5)

(ROOT
  (S
    (PP (IN At)
      (NP (DT all) (NNS events)))
    (NP (PRP we))
    (VP (MD could) (RB not)
      (VP (VB do)
        (PP (IN without)
          (NP (NN wind)))))
    (. .)))

det(events-3, all-2)
prep_at(do-7, events-3)
nsubj(do-7, we-4)
aux(do-7, could-5)
neg(do-7, not-6)
root(ROOT-0, do-7)
prep_without(do-7, wind-9)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (DT all))
    (VP (VBZ depends)
      (PP (IN on)
        (SBAR
          (WHADJP (WRB how) (JJ big))
          (S
            (NP (PRP$ our) (NNS lungs))
            (VP (VBP are)
              (SBAR (IN whether)
                (S
                  (NP (DT the) (NN wind))
                  (VP (VBZ is)
                    (ADJP (RB too) (JJ strong)
                      (PP (IN for)
                        (NP (PRP us))))))
                (CC or)
                (RB not)))))))
    (. .)))

nsubj(depends-3, It-1)
advmod(depends-3, all-2)
root(ROOT-0, depends-3)
advmod(big-6, how-5)
dep(are-9, big-6)
poss(lungs-8, our-7)
nsubj(are-9, lungs-8)
prepc_on(depends-3, are-9)
mark(strong-15, whether-10)
det(wind-12, the-11)
nsubj(strong-15, wind-12)
cop(strong-15, is-13)
advmod(strong-15, too-14)
ccomp(are-9, strong-15)
prep_for(strong-15, us-17)
ccomp(are-9, not-19)
conj_or(strong-15, not-19)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When)
        (NP (DT the) (NN person)))
      (S
        (NP (PRP he))
        (VP (VBD told)
          (SBAR (IN about)
            (S
              (NP (PRP it))
              (VP (VBD asked)
                (NP (PRP him))
                (SBAR (IN whether)
                  (S
                    (NP (PRP he))
                    (VP (VBD saw)
                      (NP
                        (NP (NN anybody))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD knew)
                              (ADVP (RB there)))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD answered) (, ,) (`` ``)
      (S
        (NP
          (NP (RB Only) (DT a) (JJ little) (NN girl))
          (VP (VBG belonging)
            (PP (TO to)
              (NP
                (NP (DT the) (NN gardener))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP
                      (VP (VBD thought)
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD had)
                              (VP (VBN lost)
                                (NP (PRP her)))))))
                      (, ,)
                      (CC but)
                      (VP (VBD was)
                        (VP
                          (ADVP (RB quite))
                          (VBN mistaken) (, ,)
                          (SBAR (IN for)
                            (S
                              (ADVP (RB there))
                              (NP (PRP she))
                              (VP (VBD was)
                                (ADJP (JJ safe) (RB enough)))))))
                      (, ,)
                      (CC and)
                      (VP (VBD was)))))))))
        (VP (TO to)
          (VP (VB come)
            (PRT (RP back))
            (NP (DT some) (NN day)))))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBD came)
            (ADVP (RB back))
            (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP they))
                (VP (MD would)
                  (ADVP (RB only))
                  (VP (VB wait)))))))))
    (. .) ('' '')))

advmod(told-5, When-1)
det(person-3, the-2)
dep(When-1, person-3)
nsubj(told-5, he-4)
advcl(answered-19, told-5)
mark(asked-8, about-6)
nsubj(asked-8, it-7)
advcl(told-5, asked-8)
dobj(asked-8, him-9)
mark(saw-12, whether-10)
nsubj(saw-12, he-11)
ccomp(asked-8, saw-12)
dobj(saw-12, anybody-13)
nsubj(knew-15, he-14)
rcmod(anybody-13, knew-15)
advmod(knew-15, there-16)
nsubj(answered-19, he-18)
root(ROOT-0, answered-19)
advmod(girl-25, Only-22)
det(girl-25, a-23)
amod(girl-25, little-24)
dobj(answered-19, girl-25)
nsubj(come-53, girl-25)
vmod(girl-25, belonging-26)
det(gardener-29, the-28)
prep_to(belonging-26, gardener-29)
nsubj(thought-32, gardener-29)
nsubjpass(mistaken-41, gardener-29)
nsubj(was-51, gardener-29)
rcmod(gardener-29, thought-32)
nsubj(lost-35, he-33)
aux(lost-35, had-34)
ccomp(thought-32, lost-35)
dobj(lost-35, her-36)
auxpass(mistaken-41, was-39)
advmod(mistaken-41, quite-40)
rcmod(gardener-29, mistaken-41)
conj_but(thought-32, mistaken-41)
mark(safe-47, for-43)
advmod(safe-47, there-44)
nsubj(safe-47, she-45)
cop(safe-47, was-46)
advcl(mistaken-41, safe-47)
advmod(safe-47, enough-48)
rcmod(gardener-29, was-51)
conj_and(thought-32, was-51)
aux(come-53, to-52)
xcomp(answered-19, come-53)
prt(come-53, back-54)
det(day-56, some-55)
tmod(come-53, day-56)
mark(came-60, as-58)
nsubj(came-60, I-59)
advcl(answered-19, came-60)
advmod(came-60, back-61)
mark(wait-67, if-63)
nsubj(wait-67, they-64)
aux(wait-67, would-65)
advmod(wait-67, only-66)
advcl(came-60, wait-67)

(ROOT
  (S (`` ``)
    (ADVP (RB Did))
    (NP (PRP you))
    (VP (VBP talk)
      (PP (TO to)
        (NP
          (NP (PRP her))
          (, ,)
          (NP (NNP Diamond)))))
    (. ?) ('' '')))

advmod(talk-4, Did-2)
nsubj(talk-4, you-3)
root(ROOT-0, talk-4)
prep_to(talk-4, her-6)
appos(her-6, Diamond-8)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S
    (NP (NN Nobody))
    (VP (VBZ talks)
      (ADVP (RB there)))
    (. .)))

nsubj(talks-2, Nobody-1)
root(ROOT-0, talks-2)
advmod(talks-2, there-3)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB only))
    (VP
      (VP (VBP look)
        (PP (IN at)
          (NP (DT each) (JJ other))))
      (, ,)
      (CC and)
      (VP (VBP understand)
        (NP (NN everything))))
    (. .) ('' '')))

nsubj(look-3, They-1)
nsubj(understand-9, They-1)
advmod(look-3, only-2)
root(ROOT-0, look-3)
det(other-6, each-5)
prep_at(look-3, other-6)
conj_and(look-3, understand-9)
dobj(understand-9, everything-10)

(ROOT
  (S (`` ``)
    (VP (VB Is)
      (S
        (NP (PRP it))
        (ADJP (JJ cold))
        (ADVP (RB there))))
    (. ?) ('' '')))

root(ROOT-0, Is-2)
nsubj(cold-4, it-3)
xcomp(Is-2, cold-4)
advmod(cold-4, there-5)

(ROOT
  (INTJ (`` ``) (UH No) (. .) ('' '')))

root(ROOT-0, No-2)

(ROOT
  (S (`` ``)
    (VP (VB Is)
      (S
        (NP (PRP it))
        (ADJP (JJ hot))))
    (. ?) ('' '')))

root(ROOT-0, Is-2)
nsubj(hot-4, it-3)
xcomp(Is-2, hot-4)

(ROOT
  (INTJ (`` ``) (UH No) (. .) ('' '')))

root(ROOT-0, No-2)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP (PRP it))
      (ADVP (RB then)))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
nsubj(What-2, it-4)
advmod(What-2, then-5)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP
      (ADVP (RB never))
      (VBP think)
      (NP (RB about) (JJ such) (NNS things))
      (ADVP (RB there)))
    (. .) ('' '')))

nsubj(think-4, You-2)
neg(think-4, never-3)
root(ROOT-0, think-4)
advmod(things-7, about-5)
amod(things-7, such-6)
dobj(think-4, things-7)
advmod(think-4, there-8)

(ROOT
  (S (`` ``)
    (X (WP What))
    (NP (DT a) (NN queer))
    (VP (VBP place)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD must)
            (VP (VB be))))))
    (. !) ('' '')))

dep(place-5, What-2)
det(queer-4, a-3)
nsubj(place-5, queer-4)
root(ROOT-0, place-5)
nsubj(be-8, it-6)
aux(be-8, must-7)
ccomp(place-5, be-8)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT a)
        (ADJP (RB very) (JJ good))
        (NN place)))
    (. .) ('' '')))

nsubj(place-7, It-2)
cop(place-7, 's-3)
det(place-7, a-4)
advmod(good-6, very-5)
amod(place-7, good-6)
root(ROOT-0, place-7)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB go)
                  (PRT (RP back))
                  (ADVP (RB again)))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(want-4, you-3)
nsubj(go-6, you-3)
ccomp(Do-2, want-4)
aux(go-6, to-5)
xcomp(want-4, go-6)
prt(go-6, back-7)
advmod(go-6, again-8)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (S
            (S
              (NP (PRP I))
              (VP (VBP have)
                (VP (VBN left)
                  (NP (PRP it)))))
            (: ;)
            (S
              (NP (PRP I))
              (VP (VBP feel)
                (NP (PRP it))
                (ADVP (RB here))))
            (, ,))
          (ADVP (RB somewhere)))))
    (. .) ('' '')))

dep(think-7, No-2)
nsubj(think-7, I-4)
aux(think-7, do-5)
neg(think-7, n't-6)
root(ROOT-0, think-7)
nsubj(left-10, I-8)
aux(left-10, have-9)
dep(think-7, left-10)
dobj(left-10, it-11)
nsubj(feel-14, I-13)
parataxis(left-10, feel-14)
dobj(feel-14, it-15)
advmod(feel-14, here-16)
advmod(think-7, somewhere-18)

(ROOT
  (S (`` ``)
    (PP (IN Did)
      (NP (DT the) (NNS people)))
    (NP (EX there))
    (VP (VBP look)
      (ADJP (JJ pleased)))
    (. ?) ('' '')))

det(people-4, the-3)
prep_did(look-6, people-4)
expl(look-6, there-5)
root(ROOT-0, look-6)
acomp(look-6, pleased-7)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Yes))
      (: --)
      (ADJP (RB quite) (VBN pleased))
      (, ,))
    (VP
      (ADVP (RB only)
        (NP (DT a) (RB little)))
      (VBZ sad))
    (. .) ('' '')))

nsubj(sad-10, Yes-2)
advmod(pleased-5, quite-4)
amod(Yes-2, pleased-5)
advmod(sad-10, only-7)
det(little-9, a-8)
pobj(only-7, little-9)
root(ROOT-0, sad-10)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP they))
    (VP (VBD did) (RB n't)
      (VP (VB look)
        (ADJP (JJ glad))))
    (. ?) ('' '')))

advmod(look-6, Then-2)
nsubj(look-6, they-3)
aux(look-6, did-4)
neg(look-6, n't-5)
root(ROOT-0, look-6)
acomp(look-6, glad-7)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (VBD looked)
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (VP (VBG waiting)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP
                      (NP (NN gladder))
                      (NP (DT some) (NN day)))))))))))
    (. .) ('' '')))

nsubj(looked-3, They-2)
root(ROOT-0, looked-3)
advmod(waiting-8, as-4)
mark(waiting-8, if-5)
nsubj(waiting-8, they-6)
nsubj(gladder-11, they-6)
aux(waiting-8, were-7)
advcl(looked-3, waiting-8)
aux(gladder-11, to-9)
cop(gladder-11, be-10)
xcomp(waiting-8, gladder-11)
det(day-13, some-12)
dep(gladder-11, day-13)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (NNP Diamond))
          (VP (VBD used)
            (S
              (VP (TO to)
                (VP (VB answer)
                  (NP (NNS questions))
                  (PP (IN about)
                    (NP (DT that) (NN country))))))))))
    (. .)))

nsubj(was-2, This-1)
root(ROOT-0, was-2)
advmod(used-5, how-3)
nsubj(used-5, Diamond-4)
nsubj(answer-7, Diamond-4)
ccomp(was-2, used-5)
aux(answer-7, to-6)
xcomp(used-5, answer-7)
dobj(answer-7, questions-8)
det(country-11, that-10)
prep_about(answer-7, country-11)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (NP (PRP I))
    (VP (MD will)
      (VP
        (VP (VB take)
          (PRT (RP up))
          (NP (DT the) (NN story))
          (ADVP (RB again)))
        (, ,)
        (CC and)
        (VP (VB tell)
          (NP (PRP you))
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP he))
              (VP (VBD got)
                (ADVP (RB back))
                (PP (TO to)
                  (NP (DT this) (NN country)))))))))
    (. .)))

advmod(take-5, now-2)
nsubj(take-5, I-3)
nsubj(tell-12, I-3)
aux(take-5, will-4)
root(ROOT-0, take-5)
prt(take-5, up-6)
det(story-8, the-7)
dobj(take-5, story-8)
advmod(take-5, again-9)
conj_and(take-5, tell-12)
dobj(tell-12, you-13)
advmod(got-16, how-14)
nsubj(got-16, he-15)
dep(tell-12, got-16)
advmod(got-16, back-17)
det(country-20, this-19)
prep_to(got-16, country-20)

(ROOT
  (NP (NNP CHAPTER) (NNP XI) (. .)))

nn(XI-2, CHAPTER-1)
root(ROOT-0, XI-2)

(ROOT
  (S
    (S
      (NP
        (NP (NNP HOW) (NNP DIAMOND) (NNP GOT) (NNP HOME) (NNP AGAIN))
        (SBAR
          (WHADVP (WRB WHEN))
          (S
            (NP
              (NP (CD one))
              (PP (IN at)
                (NP
                  (NP (DT the) (NN back))
                  (PP (IN of)
                    (NP (DT the) (NN north) (NN wind))))))
            (VP (VBD wanted)
              (S
                (VP (TO to)
                  (VP (VB know)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (NNS things))
                        (VP (VBD were)
                          (VP (VBG going)
                            (PP (IN with)
                              (NP (DT any) (NN one))))))))))))))
      (NP (PRP he))
      (VP (VBD loved)))
    (, ,)
    (NP (PRP he))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP
            (VP (VB go)
              (PP (TO to)
                (NP (DT a) (JJ certain) (NN tree))))
            (, ,)
            (VP (VB climb)
              (NP (DT the) (NN stem)))
            (, ,)
            (CC and)
            (VP (VB sit)
              (PRT (RP down))
              (PP (IN in)
                (NP (DT the) (NNS branches))))))))
    (. .)))

nn(AGAIN-5, HOW-1)
nn(AGAIN-5, DIAMOND-2)
nn(AGAIN-5, GOT-3)
nn(AGAIN-5, HOME-4)
nsubj(loved-26, AGAIN-5)
advmod(wanted-15, WHEN-6)
nsubj(wanted-15, one-7)
nsubj(know-17, one-7)
det(back-10, the-9)
prep_at(one-7, back-10)
det(wind-14, the-12)
nn(wind-14, north-13)
prep_of(back-10, wind-14)
rcmod(AGAIN-5, wanted-15)
aux(know-17, to-16)
xcomp(wanted-15, know-17)
advmod(going-21, how-18)
nsubj(going-21, things-19)
aux(going-21, were-20)
ccomp(know-17, going-21)
det(one-24, any-23)
prep_with(going-21, one-24)
nsubj(loved-26, he-25)
ccomp(had-29, loved-26)
nsubj(had-29, he-28)
nsubj(go-31, he-28)
nsubj(climb-37, he-28)
nsubj(sit-42, he-28)
root(ROOT-0, had-29)
aux(go-31, to-30)
xcomp(had-29, go-31)
det(tree-35, a-33)
amod(tree-35, certain-34)
prep_to(go-31, tree-35)
xcomp(had-29, climb-37)
conj_and(go-31, climb-37)
det(stem-39, the-38)
dobj(climb-37, stem-39)
xcomp(had-29, sit-42)
conj_and(go-31, sit-42)
prt(sit-42, down-43)
det(branches-46, the-45)
prep_in(sit-42, branches-46)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ few) (NNS minutes)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP he))
        (VP (VBD kept)
          (ADJP (RB very) (RB still)))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB see)
        (NP
          (NP (NN something))
          (ADVP (IN at) (JJS least))
          (PP (IN of)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD was)
                  (VP (VBG going)
                    (PP (IN on) (IN with)
                      (NP
                        (NP (DT the) (NNS people))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD loved))))))))))))))
    (. .)))

det(minutes-4, a-2)
amod(minutes-4, few-3)
prep_in(see-14, minutes-4)
mark(kept-8, if-6)
nsubj(kept-8, he-7)
advcl(see-14, kept-8)
advmod(still-10, very-9)
acomp(kept-8, still-10)
nsubj(see-14, he-12)
aux(see-14, would-13)
root(ROOT-0, see-14)
dobj(see-14, something-15)
advmod(something-15, at-16)
pobj(at-16, least-17)
nsubj(going-21, what-19)
aux(going-21, was-20)
prepc_of(something-15, going-21)
dep(going-21, on-22)
det(people-25, the-24)
prep_with(going-21, people-25)
nsubj(loved-27, he-26)
rcmod(people-25, loved-27)

(ROOT
  (S
    (NP (CD One) (NN day))
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (NNP Diamond))
        (VP (VBD was)
          (VP (VBG sitting)
            (PP (IN in)
              (NP (DT this) (NN tree)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD began)
      (PP (TO to)
        (NP
          (ADJP (RB long) (RB very) (JJ much)
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP
                    (NP
                      (NP (NN home))
                      (ADVP (RB again)))
                    (, ,)
                    (CC and)
                    (NP (DT no) (NN wonder))
                    (, ,))
                  (SBAR (IN for)
                    (S
                      (NP (PRP he))
                      (VP (VBD saw)
                        (NP (PRP$ his) (NN mother)))))))))
          (NNS crying))))
    (. .)))

num(day-2, One-1)
tmod(began-12, day-2)
advmod(sitting-6, when-3)
nsubj(sitting-6, Diamond-4)
aux(sitting-6, was-5)
advcl(began-12, sitting-6)
det(tree-9, this-8)
prep_in(sitting-6, tree-9)
nsubj(began-12, he-11)
root(ROOT-0, began-12)
advmod(much-16, long-14)
advmod(much-16, very-15)
amod(crying-31, much-16)
aux(get-18, to-17)
xcomp(much-16, get-18)
dobj(get-18, home-19)
advmod(home-19, again-20)
neg(wonder-24, no-23)
dobj(get-18, wonder-24)
conj_and(home-19, wonder-24)
mark(saw-28, for-26)
nsubj(saw-28, he-27)
advcl(get-18, saw-28)
poss(mother-30, his-29)
dobj(saw-28, mother-30)
prep_to(began-12, crying-31)

(ROOT
  (S
    (NP (NNP Durante))
    (VP (VBZ says)
      (SBAR (IN that)
        (S
          (NP (DT the) (NNS people))
          (ADVP (RB there))
          (VP (MD may)
            (ADVP (RB always))
            (VP (VB follow)
              (NP
                (NP (PRP$ their) (NNS wishes))
                (, ,)
                (SBAR
                  (SBAR (IN because)
                    (S
                      (NP (PRP they))
                      (ADVP (RB never))
                      (VP (VBP wish))))
                  (CC but)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (ADJP (JJ good))))))))))))
    (. .)))

nsubj(says-2, Durante-1)
root(ROOT-0, says-2)
mark(follow-9, that-3)
det(people-5, the-4)
nsubj(follow-9, people-5)
advmod(follow-9, there-6)
aux(follow-9, may-7)
advmod(follow-9, always-8)
ccomp(says-2, follow-9)
poss(wishes-11, their-10)
dobj(follow-9, wishes-11)
nsubj(good-20, wishes-11)
mark(wish-16, because-13)
nsubj(wish-16, they-14)
neg(wish-16, never-15)
rcmod(wishes-11, wish-16)
cop(good-20, is-19)
rcmod(wishes-11, good-20)
conj_but(wish-16, good-20)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Diamond) (POS 's))
        (NN wish))
      (VP (VBD was)
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (NN home)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD would)
        (VP (VB fain)
          (VP (VB follow)
            (NP (PRP$ his) (NN wish))))))
    (. .)))

poss(wish-3, Diamond-1)
nsubj(was-4, wish-3)
nsubj(get-6, wish-3)
root(ROOT-0, was-4)
aux(get-6, to-5)
xcomp(was-4, get-6)
dobj(get-6, home-7)
nsubj(fain-12, he-10)
aux(fain-12, would-11)
conj_and(was-4, fain-12)
xcomp(fain-12, follow-13)
poss(wish-15, his-14)
dobj(follow-13, wish-15)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB how))
    (SQ (VBD was)
      (NP
        (NP (PRP he))
        (S
          (VP (TO to)
            (VP (VB set)
              (PP (IN about)
                (NP (PRP it))))))))
    (. ?)))

cc(was-3, But-1)
advmod(was-3, how-2)
root(ROOT-0, was-3)
nsubj(was-3, he-4)
aux(set-6, to-5)
vmod(he-4, set-6)
prep_about(set-6, it-8)

(ROOT
  (FRAG
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (MD could)
          (ADVP (RB only))
          (VP (VB see)
            (NP (JJ North) (NN Wind))))))
    (. !)))

mark(see-5, If-1)
nsubj(see-5, he-2)
aux(see-5, could-3)
advmod(see-5, only-4)
root(ROOT-0, see-5)
amod(Wind-7, North-6)
dobj(see-5, Wind-7)

(ROOT
  (S
    (S (CC But)
      (NP (DT the) (NN moment))
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN got)
          (PP (TO to)
            (NP (PRP$ her) (NN back))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD was)
      (VP (VBN gone)
        (ADVP (RB altogether))
        (PP (IN from)
          (NP (PRP$ his) (NN sight)))))
    (. .)))

cc(got-6, But-1)
det(moment-3, the-2)
nsubj(got-6, moment-3)
nsubj(got-6, he-4)
aux(got-6, had-5)
ccomp(gone-13, got-6)
poss(back-9, her-8)
prep_to(got-6, back-9)
nsubjpass(gone-13, she-11)
auxpass(gone-13, was-12)
root(ROOT-0, gone-13)
advmod(gone-13, altogether-14)
poss(sight-17, his-16)
prep_from(gone-13, sight-17)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (ADVP (RB never))
      (VP (VBN seen)
        (S
          (NP (PRP her))
          (ADVP (RB back)))))
    (. .)))

nsubj(seen-4, He-1)
aux(seen-4, had-2)
neg(seen-4, never-3)
root(ROOT-0, seen-4)
dep(seen-4, her-5)
advmod(her-5, back-6)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD might)
      (VP (VB be)
        (VP
          (VP (VBG sitting)
            (PP (IN on)
              (NP (PRP$ her) (NN doorstep)))
            (ADVP (RB still)))
          (, ,)
          (VP (VBG looking)
            (NP (NNS southwards)))
          (, ,)
          (CC and)
          (VP
            (ADJP (JJ waiting) (, ,) (JJ white)
              (CC and)
              (JJ thin)
              (CC and)
              (JJ blue-eyed))
            (, ,)
            (SBAR (IN until)
              (S
                (NP (PRP she))
                (VP (VBD was)
                  (VP (VBN wanted)))))))))
    (. .)))

nsubj(sitting-4, She-1)
nsubj(looking-10, She-1)
nsubj(thin-18, She-1)
aux(sitting-4, might-2)
aux(sitting-4, be-3)
root(ROOT-0, sitting-4)
poss(doorstep-7, her-6)
prep_on(sitting-4, doorstep-7)
advmod(sitting-4, still-8)
conj_and(sitting-4, looking-10)
dobj(looking-10, southwards-11)
dep(thin-18, waiting-14)
conj_and(sitting-4, white-16)
conj_and(thin-18, white-16)
conj_and(sitting-4, thin-18)
conj_and(sitting-4, blue-eyed-20)
conj_and(thin-18, blue-eyed-20)
mark(wanted-25, until-22)
nsubjpass(wanted-25, she-23)
auxpass(wanted-25, was-24)
advcl(thin-18, wanted-25)

(ROOT
  (S (CC Or)
    (NP (PRP she))
    (VP (MD might)
      (VP (VB have)
        (ADVP (RB again))
        (VP (VBN become)
          (NP (DT a) (JJ mighty) (NN creature))
          (, ,)
          (PP (IN with)
            (NP (NN power)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (NP
                      (NP (DT that))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBD was)
                            (VP
                              (VP (VBN demanded)
                                (PP (IN of)
                                  (NP (PRP her))))
                              (, ,)
                              (CC and)
                              (VP (VBN gone)
                                (ADVP (RB far) (RB away))
                                (PP (IN upon)
                                  (NP (JJ many) (NNS missions)))))))))))))))))
    (. .)))

cc(become-6, Or-1)
nsubj(become-6, she-2)
aux(become-6, might-3)
aux(become-6, have-4)
advmod(become-6, again-5)
root(ROOT-0, become-6)
det(creature-9, a-7)
amod(creature-9, mighty-8)
xcomp(become-6, creature-9)
prep_with(become-6, power-12)
aux(do-14, to-13)
vmod(power-12, do-14)
dobj(do-14, that-15)
nsubjpass(demanded-18, that-15)
nsubjpass(gone-23, that-15)
auxpass(demanded-18, was-17)
rcmod(that-15, demanded-18)
prep_of(demanded-18, her-20)
rcmod(that-15, gone-23)
conj_and(demanded-18, gone-23)
advmod(away-25, far-24)
advmod(gone-23, away-25)
amod(missions-28, many-27)
prep_upon(gone-23, missions-28)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD must)
      (VP (VB be)
        (ADVP (RB somewhere))
        (, ,)
        (ADVP (RB however))))
    (. .)))

nsubj(be-3, She-1)
aux(be-3, must-2)
root(ROOT-0, be-3)
advmod(be-3, somewhere-4)
advmod(be-3, however-6)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD could) (RB not)
        (VP (VB go)
          (NP (NN home))
          (PP (IN without)
            (NP (PRP her))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB therefore))
      (NP (PRP he))
      (VP (MD must)
        (VP (VB find)
          (NP (PRP her)))))
    (. .)))

nsubj(go-4, He-1)
aux(go-4, could-2)
neg(go-4, not-3)
root(ROOT-0, go-4)
dobj(go-4, home-5)
prep_without(go-4, her-7)
advmod(find-13, therefore-10)
nsubj(find-13, he-11)
aux(find-13, must-12)
conj_and(go-4, find-13)
dobj(find-13, her-14)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD could)
      (ADVP (RB never))
      (VP (VB have)
        (VP (VBN intended)
          (S
            (VP (TO to)
              (VP (VB leave)
                (NP (PRP him))
                (ADVP (RB always))
                (PRT (RP away))
                (PP (IN from)
                  (NP (PRP$ his) (NN mother)))))))))
    (. .)))

nsubj(intended-5, She-1)
nsubj(leave-7, She-1)
aux(intended-5, could-2)
neg(intended-5, never-3)
aux(intended-5, have-4)
root(ROOT-0, intended-5)
aux(leave-7, to-6)
xcomp(intended-5, leave-7)
dobj(leave-7, him-8)
advmod(leave-7, always-9)
poss(mother-13, his-12)
prep_away_from(leave-7, mother-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBD had)
          (VP (VBN been)
            (NP
              (NP (DT any) (NN danger))
              (PP (IN of)
                (NP (DT that))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD would)
      (VP (VB have)
        (VP
          (VP (VBN told)
            (NP (PRP him)))
          (, ,)
          (CC and)
          (VP (VBN given)
            (NP (PRP him))
            (NP
              (NP (PRP$ his) (NN choice))
              (PP (IN about)
                (S
                  (VP (VBG going)))))))))
    (. .)))

mark(danger-6, If-1)
expl(danger-6, there-2)
aux(danger-6, had-3)
cop(danger-6, been-4)
det(danger-6, any-5)
advcl(told-13, danger-6)
prep_of(danger-6, that-8)
nsubj(told-13, she-10)
nsubj(given-17, she-10)
aux(told-13, would-11)
aux(told-13, have-12)
root(ROOT-0, told-13)
dobj(told-13, him-14)
conj_and(told-13, given-17)
iobj(given-17, him-18)
poss(choice-20, his-19)
dobj(given-17, choice-20)
prepc_about(choice-20, going-22)

(ROOT
  (S (IN For)
    (NP (NNP North) (NNP Wind))
    (VP (VBD was)
      (ADVP (RB right) (JJ honest)))
    (. .)))

dep(was-4, For-1)
nn(Wind-3, North-2)
nsubj(was-4, Wind-3)
root(ROOT-0, was-4)
advmod(honest-6, right-5)
advmod(was-4, honest-6)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB How))
      (S
        (VP (TO to)
          (VP (VB find)
            (NP (JJ North) (NN Wind))))))
    (, ,)
    (ADVP (RB therefore))
    (, ,)
    (VP (VBD occupied)
      (NP (PDT all) (PRP$ his) (NNS thoughts)))
    (. .)))

advmod(find-3, How-1)
aux(find-3, to-2)
dep(occupied-9, find-3)
amod(Wind-5, North-4)
dobj(find-3, Wind-5)
advmod(occupied-9, therefore-7)
root(ROOT-0, occupied-9)
predet(thoughts-12, all-10)
poss(thoughts-12, his-11)
dobj(occupied-9, thoughts-12)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (PRP$ his) (NN anxiety))
        (PP (IN about)
          (NP (PRP$ his) (NN mother)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD used)
      (S
        (VP (TO to)
          (VP
            (VP (VB climb)
              (NP
                (NP (DT the) (NN tree))
                (NP (DT every) (NN day))))
            (, ,)
            (CC and)
            (VP (VB sit)
              (PP (IN in)
                (NP (PRP$ its) (NNS branches))))))))
    (. .)))

poss(anxiety-3, his-2)
prep_in(used-9, anxiety-3)
poss(mother-6, his-5)
prep_about(anxiety-3, mother-6)
nsubj(used-9, he-8)
nsubj(climb-11, he-8)
nsubj(sit-18, he-8)
root(ROOT-0, used-9)
aux(climb-11, to-10)
xcomp(used-9, climb-11)
det(tree-13, the-12)
dobj(climb-11, tree-13)
det(day-15, every-14)
dep(tree-13, day-15)
xcomp(used-9, sit-18)
conj_and(climb-11, sit-18)
poss(branches-21, its-20)
prep_in(sit-18, branches-21)

(ROOT
  (S
    (S
      (SBAR
        (WHADJP (WRB However) (JJ many)
          (PP (IN of)
            (NP (DT the) (NNS dwellers))))
        (S
          (NP (EX there))
          (VP (VBD did)
            (ADVP (RB so)))))
      (, ,)
      (NP (PRP they))
      (ADVP (RB never))
      (VP (VBD incommoded)
        (NP (CD one) (DT another))))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (NP (DT the) (NN moment) (NN one))
          (VP (VBD got)
            (PP (IN into)
              (NP (DT the) (NN tree))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD became)
        (ADJP (JJ invisible)
          (PP (TO to)
            (NP (DT every) (CD one) (RB else))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP (PDT such) (DT a) (JJ wide-spreading) (NN tree))
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP
                (NP (NN room))
                (PP (IN for)
                  (NP
                    (NP (DT every) (NN one))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NNS people))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NN country))
                            (PP (IN in)
                              (NP (PRP it))))))))))
              (, ,)
              (PP (IN without)
                (NP
                  (NP (DT the) (JJS least) (NN interference))
                  (PP (IN with)
                    (NP (DT each) (JJ other))))))))))
    (. .)))

advmod(many-2, However-1)
dep(did-7, many-2)
det(dwellers-5, the-4)
prep_of(many-2, dwellers-5)
expl(did-7, there-6)
advcl(incommoded-12, did-7)
advmod(did-7, so-8)
nsubj(incommoded-12, they-10)
neg(incommoded-12, never-11)
root(ROOT-0, incommoded-12)
dobj(incommoded-12, one-13)
dep(one-13, another-14)
mark(got-20, for-16)
det(one-19, the-17)
nn(one-19, moment-18)
nsubj(got-20, one-19)
advcl(became-26, got-20)
det(tree-23, the-22)
prep_into(got-20, tree-23)
nsubj(became-26, he-25)
conj_and(incommoded-12, became-26)
acomp(became-26, invisible-27)
det(one-30, every-29)
prep_to(invisible-27, one-30)
advmod(one-30, else-31)
nsubj(tree-39, it-34)
cop(tree-39, was-35)
predet(tree-39, such-36)
det(tree-39, a-37)
amod(tree-39, wide-spreading-38)
conj_and(incommoded-12, tree-39)
mark(was-42, that-40)
expl(was-42, there-41)
ccomp(tree-39, was-42)
nsubj(was-42, room-43)
det(one-46, every-45)
prep_for(room-43, one-46)
det(people-49, the-48)
prep_of(one-46, people-49)
det(country-52, the-51)
prep_of(people-49, country-52)
prep_in(country-52, it-54)
det(interference-59, the-57)
amod(interference-59, least-58)
prep_without(was-42, interference-59)
det(other-62, each-61)
prep_with(interference-59, other-62)

(ROOT
  (S
    (S
      (ADVP (RB Sometimes))
      (, ,)
      (PP (IN on)
        (S
          (VP (VBG getting)
            (PRT (RP down)))))
      (, ,)
      (NP
        (NP (CD two))
        (PP (IN of)
          (NP (PRP them))))
      (VP (MD would)
        (VP (VB meet)
          (PP (IN at)
            (NP (DT the) (NN root))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP they))
      (VP (MD would)
        (VP (VB smile)
          (PP (TO to)
            (NP (DT each) (JJ other) (JJR more) (NN sweetly)))
          (PP (IN than)
            (PP (IN at)
              (NP (DT any) (JJ other) (NN time))))
          (, ,)
          (ADVP
            (ADVP (RB as) (RB much))
            (SBAR (IN as)
              (S
                (VP (TO to)
                  (VP (VB say) (, ,) (`` ``)
                    (S
                      (INTJ (UH Ah))
                      (, ,)
                      (NP (PRP you))
                      (VP (VBP 've)
                        (VP (VBN been)
                          (ADVP (RB up) (RB there))
                          (ADVP (RB too)))))))))))))
    (. !) ('' '')))

advmod(meet-11, Sometimes-1)
prepc_on(meet-11, getting-4)
prt(getting-4, down-5)
nsubj(meet-11, two-7)
prep_of(two-7, them-9)
aux(meet-11, would-10)
root(ROOT-0, meet-11)
det(root-14, the-13)
prep_at(meet-11, root-14)
advmod(smile-20, then-17)
nsubj(smile-20, they-18)
aux(smile-20, would-19)
conj_and(meet-11, smile-20)
det(sweetly-25, each-22)
amod(sweetly-25, other-23)
amod(sweetly-25, more-24)
prep_to(smile-20, sweetly-25)
prep(smile-20, than-26)
pcomp(than-26, at-27)
det(time-30, any-28)
amod(time-30, other-29)
pobj(at-27, time-30)
advmod(much-33, as-32)
advmod(smile-20, much-33)
mark(say-36, as-34)
aux(say-36, to-35)
advcl(much-33, say-36)
discourse(been-43, Ah-39)
nsubj(been-43, you-41)
aux(been-43, 've-42)
ccomp(say-36, been-43)
advmod(there-45, up-44)
advmod(been-43, there-45)
advmod(been-43, too-46)

(ROOT
  (S
    (NP (CD One) (NN day))
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG sitting)
        (PP (IN on)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ outer) (NNS branches))
                (PP (IN of)
                  (NP (DT the) (NN tree)))))))
        (, ,)
        (S
          (VP (VBG looking)
            (NP (NNS southwards))
            (PP (IN after)
              (NP (PRP$ his) (NN home)))))))
    (. .)))

num(day-2, One-1)
tmod(sitting-5, day-2)
nsubj(sitting-5, he-3)
aux(sitting-5, was-4)
root(ROOT-0, sitting-5)
prep_on(sitting-5, one-7)
det(branches-11, the-9)
amod(branches-11, outer-10)
prep_of(one-7, branches-11)
det(tree-14, the-13)
prep_of(branches-11, tree-14)
vmod(sitting-5, looking-16)
dobj(looking-16, southwards-17)
poss(home-20, his-19)
prep_after(looking-16, home-20)

(ROOT
  (S
    (NP (NNP Far))
    (ADVP (RB away))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ blue) (VBG shining) (NN sea))
        (, ,)
        (VP (VBD dotted)
          (PP (IN with)
            (NP
              (NP (VBG gleaming))
              (CC and)
              (NP
                (NP (JJ sparkling) (NNS specks))
                (PP (IN of)
                  (NP (JJ white)))))))))
    (. .)))

nsubj(sea-7, Far-1)
advmod(sea-7, away-2)
cop(sea-7, was-3)
det(sea-7, a-4)
amod(sea-7, blue-5)
amod(sea-7, shining-6)
root(ROOT-0, sea-7)
vmod(sea-7, dotted-9)
prep_with(dotted-9, gleaming-11)
amod(specks-14, sparkling-13)
prep_with(dotted-9, specks-14)
conj_and(gleaming-11, specks-14)
prep_of(specks-14, white-16)

(ROOT
  (S
    (NP (DT Those))
    (VP (VBD were)
      (NP (DT the) (NNS icebergs)))
    (. .)))

nsubj(icebergs-4, Those-1)
cop(icebergs-4, were-2)
det(icebergs-4, the-3)
root(ROOT-0, icebergs-4)

(ROOT
  (S
    (VP (VB Nearer)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD saw)
            (NP
              (NP
                (NP (DT a) (JJ great) (NN range))
                (PP (IN of)
                  (NP (JJ snow-capped) (NNS mountains))))
              (, ,)
              (CC and)
              (NP
                (ADVP (RB down)
                  (PP (IN below)
                    (NP (PRP him))))
                (NP (DT the) (JJ lovely) (NNS meadow-grass))
                (PP (IN of)
                  (NP (DT the) (NN country)))))
            (, ,)
            (PP (IN with)
              (NP
                (NP (DT the) (NN stream))
                (VP (VBG flowing)
                  (CC and)
                  (VBG flowing)
                  (PP (IN through)
                    (NP (PRP it)))
                  (, ,)
                  (ADVP (RB away)
                    (PP (IN towards)
                      (NP (DT the) (NN sea)))))))))))
    (. .)))

root(ROOT-0, Nearer-1)
nsubj(saw-3, he-2)
ccomp(Nearer-1, saw-3)
det(range-6, a-4)
amod(range-6, great-5)
dobj(saw-3, range-6)
amod(mountains-9, snow-capped-8)
prep_of(range-6, mountains-9)
advmod(meadow-grass-17, down-12)
prep_below(down-12, him-14)
det(meadow-grass-17, the-15)
amod(meadow-grass-17, lovely-16)
dobj(saw-3, meadow-grass-17)
conj_and(range-6, meadow-grass-17)
det(country-20, the-19)
prep_of(meadow-grass-17, country-20)
det(stream-24, the-23)
prep_with(saw-3, stream-24)
vmod(stream-24, flowing-25)
vmod(stream-24, flowing-27)
conj_and(flowing-25, flowing-27)
prep_through(flowing-25, it-29)
advmod(flowing-25, away-31)
det(sea-34, the-33)
prep_towards(away-31, sea-34)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP he))
        (VP (VBD looked)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD began)
                (S
                  (VP (TO to)
                    (VP (VB wonder))))
                (, ,)
                (SBAR
                  (SBAR (IN for)
                    (S
                      (NP (DT the) (JJ whole) (NN country))
                      (VP (VBD lay)
                        (PP (IN beneath)
                          (NP (PRP him)))
                        (PP (IN like)
                          (NP (DT a) (NN map))))))
                  (, ,)
                  (CC and)
                  (SBAR (IN that)
                    (S
                      (NP (WDT which))
                      (VP (VBD was)
                        (ADJP (JJ near))))))))))))
    (NP (PRP him))
    (VP (VBD looked)
      (NP (RB just) (RB as) (JJ small))
      (PP (IN as)
        (NP
          (NP (DT that))
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP he))
              (VP (VBD knew)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP (NNS miles))
                      (ADVP (RB away)))))))))))
    (. .)))

mark(looked-3, As-1)
nsubj(looked-3, he-2)
advcl(looked-26, looked-3)
nsubj(began-5, he-4)
nsubj(wonder-7, he-4)
ccomp(looked-3, began-5)
aux(wonder-7, to-6)
xcomp(began-5, wonder-7)
mark(lay-13, for-9)
det(country-12, the-10)
amod(country-12, whole-11)
nsubj(lay-13, country-12)
advcl(began-5, lay-13)
ccomp(began-5, lay-13)
prep_beneath(lay-13, him-15)
det(map-18, a-17)
prep_like(lay-13, map-18)
mark(near-24, that-21)
nsubj(near-24, which-22)
cop(near-24, was-23)
advcl(began-5, near-24)
ccomp(began-5, near-24)
conj_and(lay-13, near-24)
nsubj(looked-26, him-25)
root(ROOT-0, looked-26)
advmod(small-29, just-27)
advmod(small-29, as-28)
dobj(looked-26, small-29)
prep_as(looked-26, that-31)
dobj(knew-34, that-31)
nsubj(miles-37, that-31)
nsubj(knew-34, he-33)
rcmod(that-31, knew-34)
aux(miles-37, to-35)
cop(miles-37, be-36)
xcomp(knew-34, miles-37)
advmod(miles-37, away-38)

(ROOT
  (S
    (NP
      (NP (DT The) (NN ridge))
      (PP (IN of)
        (NP
          (NP
            (NP (NN ice))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD encircled)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBD appeared)
                        (PRN (CC but)
                          (ADVP
                            (NP (DT a) (JJ few) (NNS yards))
                            (RB off))))))))))
          (, ,)
          (CC and)
          (NP
            (NP (RB no) (JJR larger))
            (PP (IN than)
              (NP
                (NP (DT the) (NN row))
                (PP (IN of)
                  (NP
                    (NP (NNS pebbles))
                    (SBAR
                      (WHPP (IN with)
                        (WHNP (WDT which)))
                      (S
                        (NP (DT a) (NN child))
                        (VP (MD will)
                          (VP (VB mark)
                            (PRT (RP out))
                            (NP
                              (NP (DT the) (NNS boundaries))
                              (PP (IN of)
                                (NP (DT the) (NN kingdom) (PRP he))))))))))))))))
    (VP (VBZ has)
      (VP (VBN appropriated)
        (PP (IN on)
          (NP (DT the) (NN sea-shore)))))
    (. .)))

det(ridge-2, The-1)
nsubj(appropriated-37, ridge-2)
prep_of(ridge-2, ice-4)
nsubj(encircled-6, ice-4)
rcmod(ice-4, encircled-6)
nsubj(appeared-8, it-7)
ccomp(encircled-6, appeared-8)
cc(off-13, but-9)
det(yards-12, a-10)
amod(yards-12, few-11)
npadvmod(off-13, yards-12)
dep(appeared-8, off-13)
neg(larger-17, no-16)
prep_of(ridge-2, larger-17)
conj_and(ice-4, larger-17)
nsubj(encircled-6, larger-17)
det(row-20, the-19)
prep_than(larger-17, row-20)
prep_of(row-20, pebbles-22)
prep_with(mark-28, pebbles-22)
det(child-26, a-25)
nsubj(mark-28, child-26)
aux(mark-28, will-27)
rcmod(pebbles-22, mark-28)
prt(mark-28, out-29)
det(boundaries-31, the-30)
dobj(mark-28, boundaries-31)
det(kingdom-34, the-33)
prep_of(boundaries-31, kingdom-34)
dep(kingdom-34, he-35)
aux(appropriated-37, has-36)
root(ROOT-0, appropriated-37)
det(sea-shore-40, the-39)
prep_on(appropriated-37, sea-shore-40)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB distinguish)
              (NP
                (NP (DT the) (JJ vapoury) (NN form))
                (PP (IN of)
                  (NP
                    (NP (NNP North) (NNP Wind))
                    (, ,)
                    (VP (VBN seated)
                      (SBAR (IN as)
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (VP (VBN left)
                              (NP (PRP her)))))))
                    (, ,))))
              (PP (IN on)
                (NP (DT the) (JJ other) (NN side))))))))
    (. .)))

nsubj(thought-2, He-1)
root(ROOT-0, thought-2)
nsubj(distinguish-5, he-3)
aux(distinguish-5, could-4)
ccomp(thought-2, distinguish-5)
det(form-8, the-6)
amod(form-8, vapoury-7)
dobj(distinguish-5, form-8)
nn(Wind-11, North-10)
prep_of(form-8, Wind-11)
vmod(Wind-11, seated-13)
mark(left-17, as-14)
nsubj(left-17, he-15)
aux(left-17, had-16)
advcl(seated-13, left-17)
dobj(left-17, her-18)
det(side-23, the-21)
amod(side-23, other-22)
prep_on(distinguish-5, side-23)

(ROOT
  (S
    (S
      (ADVP (RB Hastily))
      (NP (PRP he))
      (VP (VBD descended)
        (NP (DT the) (NN tree))))
    (, ,)
    (CC and)
    (S
      (X (TO to))
      (NP (PRP$ his) (NN amazement))
      (VP (VBD found)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN map)
                (CC or)
                (NN model))
              (PP (IN of)
                (NP (DT the) (NN country))))
            (ADVP (RB still))
            (VP (VBD lay)
              (PP (IN at)
                (NP (PRP$ his) (NNS feet))))))))
    (. .)))

advmod(descended-3, Hastily-1)
nsubj(descended-3, he-2)
root(ROOT-0, descended-3)
det(tree-5, the-4)
dobj(descended-3, tree-5)
dep(found-11, to-8)
poss(amazement-10, his-9)
nsubj(found-11, amazement-10)
conj_and(descended-3, found-11)
mark(lay-21, that-12)
det(map-14, the-13)
nsubj(lay-21, map-14)
conj_or(map-14, model-16)
nsubj(lay-21, model-16)
det(country-19, the-18)
prep_of(map-14, country-19)
advmod(lay-21, still-20)
ccomp(found-11, lay-21)
poss(feet-24, his-23)
prep_at(lay-21, feet-24)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD stood)
      (PP (IN in)
        (NP (PRP it))))
    (. .)))

nsubj(stood-2, He-1)
root(ROOT-0, stood-2)
prep_in(stood-2, it-4)

(ROOT
  (S
    (S
      (PP (IN With)
        (NP (CD one) (NN stride)))
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN crossed)
          (NP (DT the) (NN river)))))
    (: ;)
    (S
      (PP (IN with)
        (NP (DT another)))
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN reached)
          (NP
            (NP (DT the) (NN ridge))
            (PP (IN of)
              (NP (NN ice)))))))
    (: ;)
    (S
      (PP (IN with)
        (NP (DT the) (JJ third)))
      (NP (PRP he))
      (VP
        (VP (VBD stepped)
          (PRT (RP over))
          (NP (PRP$ its) (NNS peaks)))
        (, ,)
        (CC and)
        (VP (VBD sank)
          (NP (NN wearily))
          (PRT (RP down))
          (PP (IN at)
            (NP
              (NP (NNP North) (NNP Wind) (POS 's))
              (NNS knees))))))
    (. .)))

num(stride-3, one-2)
prep_with(crossed-6, stride-3)
nsubj(crossed-6, he-4)
aux(crossed-6, had-5)
root(ROOT-0, crossed-6)
det(river-8, the-7)
dobj(crossed-6, river-8)
prep_with(reached-14, another-11)
nsubj(reached-14, he-12)
aux(reached-14, had-13)
parataxis(crossed-6, reached-14)
det(ridge-16, the-15)
dobj(reached-14, ridge-16)
prep_of(ridge-16, ice-18)
det(third-22, the-21)
prep_with(stepped-24, third-22)
nsubj(stepped-24, he-23)
nsubj(sank-30, he-23)
parataxis(crossed-6, stepped-24)
prt(stepped-24, over-25)
poss(peaks-27, its-26)
dobj(stepped-24, peaks-27)
parataxis(crossed-6, sank-30)
conj_and(stepped-24, sank-30)
dobj(sank-30, wearily-31)
prt(sank-30, down-32)
nn(Wind-35, North-34)
poss(knees-37, Wind-35)
prep_at(sank-30, knees-37)

(ROOT
  (S
    (PP (IN For)
      (NP (RB there)))
    (NP (PRP she))
    (VP (VBD sat)
      (PP (IN on)
        (NP (PRP$ her) (NN doorstep))))
    (. .)))

prep(sat-4, For-1)
pobj(For-1, there-2)
nsubj(sat-4, she-3)
root(ROOT-0, sat-4)
poss(doorstep-7, her-6)
prep_on(sat-4, doorstep-7)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS peaks))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ great) (NN ridge))
            (PP (IN of)
              (NP (NN ice))))))
      (VP (VBD were)
        (ADJP (RB as) (JJ lofty)
          (PP (IN as)
            (ADVP (RB ever))))
        (PP (IN behind)
          (NP (PRP her)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN country))
        (PP (IN at)
          (NP (PRP$ her) (NN back))))
      (VP (VBD had)
        (VP (VBN vanished)
          (PP (IN from)
            (NP
              (NP (NNP Diamond) (POS 's))
              (NN view))))))
    (. .)))

det(peaks-2, The-1)
nsubj(lofty-11, peaks-2)
det(ridge-6, the-4)
amod(ridge-6, great-5)
prep_of(peaks-2, ridge-6)
prep_of(ridge-6, ice-8)
cop(lofty-11, were-9)
advmod(lofty-11, as-10)
root(ROOT-0, lofty-11)
prep(lofty-11, as-12)
pcomp(as-12, ever-13)
prep_behind(lofty-11, her-15)
det(country-19, the-18)
nsubj(vanished-24, country-19)
poss(back-22, her-21)
prep_at(country-19, back-22)
aux(vanished-24, had-23)
conj_and(lofty-11, vanished-24)
poss(view-28, Diamond-26)
prep_from(vanished-24, view-28)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP (VBD was)
      (PP (IN as)
        (ADVP (RB still)))
      (SBAR (IN as)
        (S
          (NP (NNP Diamond))
          (VP (VBD had)
            (VP (VBN left)
              (NP (PRP her)))))))
    (. .)))

nn(Wind-2, North-1)
nsubj(was-3, Wind-2)
root(ROOT-0, was-3)
prep(was-3, as-4)
pcomp(as-4, still-5)
mark(left-9, as-6)
nsubj(left-9, Diamond-7)
aux(left-9, had-8)
advcl(was-3, left-9)
dobj(left-9, her-10)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (JJ pale) (NN face))
      (VP (VBD was)
        (ADJP (JJ white)
          (PP (IN as)
            (NP (DT the) (NN snow))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ her) (JJ motionless) (NNS eyes))
      (VP (VBD were)
        (ADJP (RB as) (JJ blue))
        (PP (IN as)
          (NP
            (NP (DT the) (NNS caverns))
            (PP (IN in)
              (NP (DT the) (NN ice)))))))
    (. .)))

poss(face-3, Her-1)
amod(face-3, pale-2)
nsubj(white-5, face-3)
cop(white-5, was-4)
root(ROOT-0, white-5)
det(snow-8, the-7)
prep_as(white-5, snow-8)
poss(eyes-13, her-11)
amod(eyes-13, motionless-12)
nsubj(blue-16, eyes-13)
cop(blue-16, were-14)
advmod(blue-16, as-15)
conj_and(white-5, blue-16)
det(caverns-19, the-18)
prep_as(blue-16, caverns-19)
det(ice-22, the-21)
prep_in(caverns-19, ice-22)

(ROOT
  (S
    (S (CC But)
      (NP (DT the) (JJ instant) (NNP Diamond))
      (VP (VBD touched)
        (NP (PRP her))))
    (, ,)
    (NP (PRP$ her) (NN face))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB change)
            (PP (IN like)
              (S
                (NP
                  (NP (DT that))
                  (PP (IN of)
                    (NP (CD one))))
                (VP (VBG waking)
                  (PP (IN from)
                    (NP (NN sleep))))))))))
    (. .)))

cc(touched-5, But-1)
det(Diamond-4, the-2)
amod(Diamond-4, instant-3)
nsubj(touched-5, Diamond-4)
ccomp(began-10, touched-5)
dobj(touched-5, her-6)
poss(face-9, her-8)
nsubj(began-10, face-9)
nsubj(change-12, face-9)
root(ROOT-0, began-10)
aux(change-12, to-11)
xcomp(began-10, change-12)
nsubj(waking-17, that-14)
prep_of(that-14, one-16)
prepc_like(change-12, waking-17)
prep_from(waking-17, sleep-19)

(ROOT
  (S
    (NP (NNP Light))
    (VP (VBD began)
      (PP (TO to)
        (NP (NN glimmer)))
      (PP (IN from)
        (NP
          (NP (DT the) (NN blue))
          (PP (IN of)
            (NP (PRP$ her) (NNS eyes))))))
    (. .)))

nsubj(began-2, Light-1)
root(ROOT-0, began-2)
prep_to(began-2, glimmer-4)
det(blue-7, the-6)
prep_from(began-2, blue-7)
poss(eyes-10, her-9)
prep_of(blue-7, eyes-10)

(ROOT
  (S
    (NP
      (NP (DT A) (NN moment))
      (UCP
        (ADJP (JJR more))
        (, ,)
        (CC and)
        (NP (PRP she))))
    (VP
      (VP (VBD laid)
        (NP (PRP$ her) (NN hand))
        (PP (IN on)
          (NP
            (NP (NNP Diamond) (POS 's))
            (NN head))))
      (, ,)
      (CC and)
      (VP (VBD began)
        (S
          (VP (VBG playing)
            (PP (IN with)
              (NP (PRP$ his) (NN hair)))))))
    (. .)))

det(moment-2, A-1)
nsubj(laid-7, moment-2)
nsubj(began-16, moment-2)
amod(moment-2, more-3)
amod(moment-2, she-6)
conj_and(more-3, she-6)
root(ROOT-0, laid-7)
poss(hand-9, her-8)
dobj(laid-7, hand-9)
poss(head-13, Diamond-11)
prep_on(laid-7, head-13)
conj_and(laid-7, began-16)
xcomp(began-16, playing-17)
poss(hair-20, his-19)
prep_with(playing-17, hair-20)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP
      (VP (VBD took)
        (NP
          (NP (NN hold))
          (PP (IN of)
            (NP (PRP$ her) (NN hand)))))
      (, ,)
      (CC and)
      (VP (VBD laid)
        (NP (PRP$ his) (NN face))
        (PP (TO to)
          (NP (PRP it)))))
    (. .)))

nsubj(took-2, Diamond-1)
nsubj(laid-9, Diamond-1)
root(ROOT-0, took-2)
dobj(took-2, hold-3)
poss(hand-6, her-5)
prep_of(hold-3, hand-6)
conj_and(took-2, laid-9)
poss(face-11, his-10)
dobj(laid-9, face-11)
prep_to(laid-9, it-13)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD gave)
      (NP (DT a) (JJ little) (NN start)))
    (. .)))

nsubj(gave-2, She-1)
root(ROOT-0, gave-2)
det(start-5, a-3)
amod(start-5, little-4)
dobj(gave-2, start-5)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB How)
        (ADJP (RB very) (JJ alive)))
      (S
        (NP (PRP you))
        (VP (VBP are))))
    (, ,)
    (VP (VBZ child))
    (. !) ('' '')))

advmod(are-6, How-2)
advmod(alive-4, very-3)
dep(How-2, alive-4)
nsubj(are-6, you-5)
dep(child-8, are-6)
root(ROOT-0, child-8)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD murmured))
    (. .)))

nsubj(murmured-2, she-1)
root(ROOT-0, murmured-2)

(ROOT
  (S (`` ``)
    (VP (VB Come)
      (NP (NNS nearer))
      (PP (TO to)
        (NP (PRP me))))
    (. .) ('' '')))

root(ROOT-0, Come-2)
dobj(Come-2, nearer-3)
prep_to(Come-2, me-5)

(ROOT
  (S
    (PP (IN By)
      (NP
        (NP (DT the) (NN help))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS stones))
            (ADVP (DT all) (IN around))))))
    (NP (PRP he))
    (VP
      (VP (VBD clambered)
        (PRT (RP up))
        (PP (IN beside)
          (NP (PRP her))))
      (, ,)
      (CC and)
      (VP (VBD laid)
        (NP (PRP himself))
        (PP (IN against)
          (NP (PRP$ her) (NN bosom)))))
    (. .)))

det(help-3, the-2)
prep_by(clambered-10, help-3)
det(stones-6, the-5)
prep_of(help-3, stones-6)
dep(around-8, all-7)
advmod(stones-6, around-8)
nsubj(clambered-10, he-9)
nsubj(laid-16, he-9)
root(ROOT-0, clambered-10)
prt(clambered-10, up-11)
prep_beside(clambered-10, her-13)
conj_and(clambered-10, laid-16)
dobj(laid-16, himself-17)
poss(bosom-20, her-19)
prep_against(laid-16, bosom-20)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD gave)
        (NP (DT a) (JJ great) (NN sigh)))
      (, ,)
      (VP
        (ADVP (RB slowly))
        (VBD lifted)
        (NP (PRP$ her) (NNS arms)))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB slowly))
        (VBD folded)
        (NP (PRP them))
        (PP (IN about)
          (NP (PRP him))))
      (, ,)
      (SBAR (IN until)
        (S
          (NP (PRP she))
          (VP (VBD clasped)
            (S
              (NP (PRP him))
              (ADJP (JJ close)))))))
    (. .)))

nsubj(gave-2, She-1)
nsubj(lifted-8, She-1)
nsubj(folded-14, She-1)
root(ROOT-0, gave-2)
det(sigh-5, a-3)
amod(sigh-5, great-4)
dobj(gave-2, sigh-5)
advmod(lifted-8, slowly-7)
conj_and(gave-2, lifted-8)
poss(arms-10, her-9)
dobj(lifted-8, arms-10)
advmod(folded-14, slowly-13)
conj_and(gave-2, folded-14)
dobj(folded-14, them-15)
prep_about(folded-14, him-17)
mark(clasped-21, until-19)
nsubj(clasped-21, she-20)
advcl(gave-2, clasped-21)
conj_and(gave-2, clasped-21)
nsubj(close-23, him-22)
xcomp(clasped-21, close-23)

(ROOT
  (S (CC Yet)
    (S
      (NP
        (NP (DT a) (NN moment))
        (, ,)
        (CC and)
        (NP (PRP she)))
      (VP
        (VP (VBD roused)
          (NP (PRP herself)))
        (, ,)
        (CC and)
        (VP (VBD came)
          (NP (RB quite) (JJ awake)))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN cold))
        (PP (IN of)
          (NP (PRP$ her) (NN bosom)))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD had)
              (VP (VBN pierced)
                (NP
                  (NP (NNP Diamond) (POS 's))
                  (NNS bones))))))
        (, ,))
      (VP (VBN vanished)))
    (. .)))

det(moment-3, a-2)
nsubj(roused-7, moment-3)
nsubj(came-11, moment-3)
conj_and(moment-3, she-6)
nsubj(roused-7, she-6)
root(ROOT-0, roused-7)
dobj(roused-7, herself-8)
conj_and(roused-7, came-11)
advmod(awake-13, quite-12)
dobj(came-11, awake-13)
det(cold-17, the-16)
nsubj(pierced-24, cold-17)
nsubj(vanished-29, cold-17)
poss(bosom-20, her-19)
prep_of(cold-17, bosom-20)
aux(pierced-24, had-23)
rcmod(cold-17, pierced-24)
poss(bones-27, Diamond-25)
dobj(pierced-24, bones-27)
conj_and(roused-7, vanished-29)

(ROOT
  (S (`` ``)
    (VP
      (VP (VB Have)
        (NP (PRP you))
        (VP (VBN been)
          (VP (VBG sitting)
            (ADVP (RB here))
            (SBAR (RB ever) (IN since)
              (S
                (NP (PRP I))
                (VP (VBD went)
                  (PP (IN through)
                    (NP (PRP you)))))))))
      (, ,)
      (NP
        (ADJP (RB dear))
        (JJ North) (NN Wind)))
    (. ?) ('' '')))

aux(sitting-5, Have-2)
dobj(sitting-5, you-3)
aux(sitting-5, been-4)
root(ROOT-0, sitting-5)
advmod(sitting-5, here-6)
advmod(went-10, ever-7)
mark(went-10, since-8)
nsubj(went-10, I-9)
advcl(sitting-5, went-10)
prep_through(went-10, you-12)
amod(Wind-16, dear-14)
amod(Wind-16, North-15)
dobj(sitting-5, Wind-16)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Diamond))
      (, ,)
      (S
        (VP (VBG stroking)
          (NP (PRP$ her) (NN hand)))))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Diamond-2)
vmod(asked-1, stroking-4)
poss(hand-6, her-5)
dobj(stroking-4, hand-6)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered) (, ,)
      (S
        (VP (VBG looking)
          (PP (IN at)
            (NP (PRP him)))
          (PP (IN with)
            (NP (PRP$ her) (JJ old) (NN kindness))))))
    (. .)))

dep(answered-6, Yes-2)
nsubj(answered-6, she-5)
root(ROOT-0, answered-6)
xcomp(answered-6, looking-8)
prep_at(looking-8, him-10)
poss(kindness-14, her-12)
amod(kindness-14, old-13)
prep_with(looking-8, kindness-14)

(ROOT
  (S (`` ``)
    (VP (VB Ai)
      (ADVP (RB n't))
      (NP
        (NP (PRP you))
        (ADJP (RB very) (VBN tired))))
    (. ?) ('' '')))

cop(you-4, Ai-2)
neg(you-4, n't-3)
root(ROOT-0, you-4)
advmod(tired-6, very-5)
amod(you-4, tired-6)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (ADVP (RB often))
        (VP (VBN had)
          (S
            (VP (TO to)
              (VP (VB sit)
                (ADVP (RBR longer))))))))
    (. .)))

dep(had-7, No-2)
nsubj(had-7, I-4)
nsubj(sit-9, I-4)
aux(had-7, 've-5)
advmod(had-7, often-6)
root(ROOT-0, had-7)
aux(sit-9, to-8)
xcomp(had-7, sit-9)
advmod(sit-9, longer-10)

(ROOT
  (FRAG
    (S
      (VP (VBP Do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP know)
              (SBAR
                (WHADVP (WRB how) (RB long))
                (S
                  (NP (PRP you))
                  (VP (VBP have)
                    (VP (VBN been))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-1)
nsubj(know-3, you-2)
ccomp(Do-1, know-3)
advmod(long-5, how-4)
advmod(been-8, long-5)
nsubj(been-8, you-6)
aux(been-8, have-7)
ccomp(know-3, been-8)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (NP
      (NP (NNS years)
        (CC and)
        (NNS years))
      (, ,) ('' '')
      (VP (VBN answered)))
    (VP (VBZ Diamond))
    (. .)))

nsubj(Diamond-7, years-1)
conj_and(years-1, years-3)
nsubj(Diamond-7, years-3)
vmod(years-1, answered-6)
root(ROOT-0, Diamond-7)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP have)
        (ADVP (RB just))
        (VP (VBN been)
          (NP (CD seven) (NNS days)))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP North) (NNP Wind))
    (. .)))

nsubj(days-7, You-2)
aux(days-7, have-3)
advmod(days-7, just-4)
cop(days-7, been-5)
num(days-7, seven-6)
ccomp(returned-10, days-7)
root(ROOT-0, returned-10)
nn(Wind-12, North-11)
nsubj(returned-10, Wind-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD had)
            (VP (VBN been)
              (NP (DT a) (CD hundred) (NNS years)))))))
    (. !) ('' '')))

nsubj(thought-3, I-2)
root(ROOT-0, thought-3)
nsubj(years-9, I-4)
aux(years-9, had-5)
cop(years-9, been-6)
det(years-9, a-7)
num(years-9, hundred-8)
ccomp(thought-3, years-9)

(ROOT
  (S
    (VP (VB exclaimed)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, exclaimed-1)
dobj(exclaimed-1, Diamond-2)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Yes))
      (, ,)
      (NP (PRP I))
      (VP (VBP daresay)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP North) (NNP Wind))
    (. .)))

advmod(daresay-5, Yes-2)
nsubj(daresay-5, I-4)
ccomp(replied-8, daresay-5)
root(ROOT-0, replied-8)
nn(Wind-10, North-9)
nsubj(replied-8, Wind-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP 've)
        (VP (VBN been)
          (ADVP (RB away)
            (PP (IN from)
              (ADVP (RB here))))
          (NP (CD seven) (NNS days)))))
    (: ;)
    (S (CC but)
      (SBAR
        (WHADVP (WRB how) (RB long))
        (S
          (NP (PRP you))
          (VP (MD may)
            (VP (VB have)
              (VP (VBN been)
                (PP (IN in)
                  (NP (RB there))))))))
      (VP (VBZ is)
        (NP (PDT quite) (DT another) (NN thing))))
    (. .)))

nsubj(days-9, You-2)
aux(days-9, 've-3)
cop(days-9, been-4)
pobj(days-9, here-7)
prepc_away_from(days-9, here-7)
num(days-9, seven-8)
root(ROOT-0, days-9)
cc(thing-23, but-11)
advmod(long-13, how-12)
advmod(been-17, long-13)
nsubj(been-17, you-14)
aux(been-17, may-15)
aux(been-17, have-16)
csubj(thing-23, been-17)
prep(been-17, in-18)
pobj(in-18, there-19)
cop(thing-23, is-20)
predet(thing-23, quite-21)
det(thing-23, another-22)
parataxis(days-9, thing-23)

(ROOT
  (S
    (NP
      (UCP
        (PP (IN Behind)
          (NP (PRP$ my) (NN back)))
        (CC and)
        (SBAR (IN before)
          (FRAG
            (NP (PRP$ my) (NN face)))))
      (NNS things))
    (VP (VBP are)
      (ADJP (RB so) (JJ different)))
    (. !)))

prep(things-8, Behind-1)
poss(back-3, my-2)
pobj(Behind-1, back-3)
mark(face-7, before-5)
poss(face-7, my-6)
conj_and(Behind-1, face-7)
prep(things-8, face-7)
nsubj(different-11, things-8)
cop(different-11, are-9)
advmod(different-11, so-10)
root(ROOT-0, different-11)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP do) (RB n't)
      (VP (VB go)
        (ADVP (IN at) (DT all))
        (PP (IN by)
          (NP (DT the) (JJ same) (NN rule)))))
    (. .) ('' '')))

nsubj(go-4, They-1)
aux(go-4, do-2)
neg(go-4, n't-3)
root(ROOT-0, go-4)
advmod(go-4, at-5)
pobj(at-5, all-6)
det(rule-10, the-8)
amod(rule-10, same-9)
prep_by(go-4, rule-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (RB very) (JJ glad))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (SBAR (IN after)
        (S
          (VP (VBG thinking)
            (NP (DT a) (NN while))))))
    (. .)))

nsubj(glad-5, I-2)
cop(glad-5, 'm-3)
advmod(glad-5, very-4)
ccomp(said-8, glad-5)
root(ROOT-0, said-8)
nsubj(said-8, Diamond-9)
prepc_after(Diamond-9, thinking-12)
det(while-14, a-13)
dobj(thinking-12, while-14)

(ROOT
  (INTJ (`` ``) (UH Why) (. ?) ('' '')))

root(ROOT-0, Why-2)

(ROOT
  (S
    (VP (VBD asked)
      (NP (JJ North) (NN Wind)))
    (. .)))

root(ROOT-0, asked-1)
amod(Wind-3, North-2)
dobj(asked-1, Wind-3)

(ROOT
  (S (`` ``)
    (PP (IN Because))
    (NP (PRP I))
    (VP (VBP 've)
      (VP
        (VP (VBN been)
          (NP (PDT such) (DT a) (JJ long) (NN time))
          (ADVP (RB there)))
        (, ,)
        (CC and)
        (VP
          (NP (PDT such) (DT a) (JJ little) (NN while))
          (ADVP (RB away)
            (PP (IN from)
              (NP (NN mother)))))))
    (. .)))

prep(time-9, Because-2)
nsubj(time-9, I-3)
aux(time-9, 've-4)
cop(time-9, been-5)
predet(time-9, such-6)
det(time-9, a-7)
amod(time-9, long-8)
root(ROOT-0, time-9)
advmod(time-9, there-10)
predet(while-16, such-13)
det(while-16, a-14)
amod(while-16, little-15)
conj_and(time-9, while-16)
prep_away_from(while-16, mother-19)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP she))
    (VP (MD wo) (RB n't)
      (VP (VB be)
        (VP (VBG expecting)
          (NP (PRP me))
          (ADVP (NN home)
            (PP (IN from)
              (NP (NNP Sandwich))
              (ADVP (RB yet)))))))
    (. !) ('' '')))

discourse(expecting-7, Why-1)
nsubj(expecting-7, she-3)
aux(expecting-7, wo-4)
neg(expecting-7, n't-5)
aux(expecting-7, be-6)
root(ROOT-0, expecting-7)
dobj(expecting-7, me-8)
advmod(expecting-7, home-9)
prep_from(home-9, Sandwich-11)
advmod(home-9, yet-12)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (MD must) (RB n't)
      (VP (VB talk)
        (ADVP (DT any) (RBR longer))))
    (. .)))

cc(talk-5, But-1)
nsubj(talk-5, we-2)
aux(talk-5, must-3)
neg(talk-5, n't-4)
root(ROOT-0, talk-5)
dep(longer-7, any-6)
advmod(talk-5, longer-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN got)
          (NP (PRP$ my) (NNS orders))
          (ADVP (RB now)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD must)
        (VP (VB be)
          (ADJP (IN off)
            (PP (IN in)
              (NP (DT a) (JJ few) (NNS minutes)))))))
    (. .) ('' '')))

nsubj(got-3, I-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
poss(orders-5, my-4)
dobj(got-3, orders-5)
advmod(got-3, now-6)
nsubj(off-12, we-9)
aux(off-12, must-10)
cop(off-12, be-11)
conj_and(got-3, off-12)
det(minutes-16, a-14)
amod(minutes-16, few-15)
prep_in(off-12, minutes-16)

(ROOT
  (S
    (NP (NNP Next) (NN moment) (NNP Diamond))
    (VP (VBD found)
      (NP (PRP himself))
      (S
        (VP (VBG sitting)
          (ADVP (RB alone))
          (PP (IN on)
            (NP (DT the) (NN rock))))))
    (. .)))

nn(Diamond-3, Next-1)
nn(Diamond-3, moment-2)
nsubj(found-4, Diamond-3)
root(ROOT-0, found-4)
dobj(found-4, himself-5)
xcomp(found-4, sitting-6)
advmod(sitting-6, alone-7)
det(rock-10, the-9)
prep_on(sitting-6, rock-10)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP (VBD had)
      (VP (VBN vanished)))
    (. .)))

nn(Wind-2, North-1)
nsubj(vanished-4, Wind-2)
aux(vanished-4, had-3)
root(ROOT-0, vanished-4)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN creature))
        (PP (IN like)
          (NP (DT a) (JJ great) (NN humble-bee)
            (CC or)
            (NN cockchafer))))
      (VP (VBD flew)
        (PP (IN past)
          (NP (PRP$ his) (NN face)))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD could)
        (VP (VB be)
          (NP (DT neither))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (EX there))
              (VP (VBD were)
                (NP (DT no) (NNS insects))
                (PP (IN amongst)
                  (NP (DT the) (NN ice)))))))))
    (. .)))

det(creature-2, A-1)
nsubj(flew-9, creature-2)
det(humble-bee-6, a-4)
amod(humble-bee-6, great-5)
prep_like(creature-2, humble-bee-6)
prep_like(creature-2, cockchafer-8)
conj_or(humble-bee-6, cockchafer-8)
root(ROOT-0, flew-9)
poss(face-12, his-11)
prep_past(flew-9, face-12)
nsubj(neither-18, it-15)
aux(neither-18, could-16)
cop(neither-18, be-17)
conj_but(flew-9, neither-18)
mark(were-22, for-20)
expl(were-22, there-21)
advcl(neither-18, were-22)
neg(insects-24, no-23)
nsubj(were-22, insects-24)
det(ice-27, the-26)
prep_amongst(were-22, ice-27)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD passed)
        (NP (PRP him))
        (ADVP (RB again)
          (CC and)
          (RB again))
        (, ,)
        (S
          (VP (VBG flying)
            (PP (IN in)
              (NP
                (NP (NNS circles))
                (PP (IN around)
                  (NP (PRP him)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD concluded)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD must)
              (VP (VB be)
                (ADJP (JJ North))
                (S
                  (VP (VBG Wind)
                    (NP (PRP herself))))
                (, ,)
                (S
                  (ADJP
                    (ADJP (RB no) (JJR bigger))
                    (PP (IN than)
                      (NP (NNP Tom) (NNP Thumb))))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP$ his) (NN mother))
                      (VP (VBD put)
                        (NP (PRP him))
                        (PP (IN in)
                          (NP
                            (NP (DT the) (NN nutshell))
                            (VP (VBN lined)
                              (PP (IN with)
                                (NP (NN flannel))))))))))))))))
    (. .)))

nsubj(passed-2, It-1)
root(ROOT-0, passed-2)
dobj(passed-2, him-3)
advmod(passed-2, again-4)
advmod(passed-2, again-6)
conj_and(again-4, again-6)
vmod(passed-2, flying-8)
prep_in(flying-8, circles-10)
prep_around(circles-10, him-12)
nsubj(concluded-16, he-15)
conj_and(passed-2, concluded-16)
mark(North-21, that-17)
nsubj(North-21, it-18)
aux(North-21, must-19)
cop(North-21, be-20)
ccomp(concluded-16, North-21)
xcomp(North-21, Wind-22)
dobj(Wind-22, herself-23)
neg(bigger-26, no-25)
dep(put-33, bigger-26)
nn(Thumb-29, Tom-28)
prep_than(bigger-26, Thumb-29)
advmod(put-33, when-30)
poss(mother-32, his-31)
nsubj(put-33, mother-32)
dep(North-21, put-33)
dobj(put-33, him-34)
det(nutshell-37, the-36)
prep_in(put-33, nutshell-37)
vmod(nutshell-37, lined-38)
prep_with(lined-38, flannel-40)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (VP (VBD was)
      (ADVP (RB no) (RB longer))
      (ADJP (JJ vapoury)
        (CC and)
        (JJ thin)))
    (. .)))

nsubj(vapoury-6, she-2)
nsubj(thin-8, she-2)
cop(vapoury-6, was-3)
neg(longer-5, no-4)
advmod(vapoury-6, longer-5)
root(ROOT-0, vapoury-6)
conj_and(vapoury-6, thin-8)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADJP (JJ solid) (, ,) (IN although) (JJ tiny)))
    (. .)))

nsubj(tiny-6, She-1)
cop(tiny-6, was-2)
amod(tiny-6, solid-3)
dep(tiny-6, although-5)
root(ROOT-0, tiny-6)

(ROOT
  (NP
    (NP
      (NP
        (NP (DT A) (NN moment))
        (NP (JJR more)))
      (, ,)
      (CC and)
      (NP (PRP she)))
    (VP (VBN perched)
      (PP (IN on)
        (NP (PRP$ his) (NN shoulder))))
    (. .)))

det(moment-2, A-1)
root(ROOT-0, moment-2)
dep(moment-2, more-3)
conj_and(moment-2, she-6)
vmod(moment-2, perched-7)
poss(shoulder-10, his-9)
prep_on(perched-7, shoulder-10)

(ROOT
  (S (`` ``)
    (S
      (PP (VBN Come)
        (PP (IN along)
          (FRAG (, ,)
            (NP (NNP Diamond)))))
      (, ,) ('' '')
      (NP (PRP she))
      (VP (VBD said)
        (PP (IN in)
          (NP (PRP$ his) (NN ear)))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT the) (JJS smallest)
              (CC and)
              (JJS highest))
            (PP (IN of)
              (NP (JJ treble) (NNS voices)))))))
    (: ;) (`` ``)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (NN time))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD were)
                (VP (VBG setting)
                  (PRT (RP out))
                  (PP (IN for)
                    (NP (NNP Sandwich))))))))))
    (. .) ('' '')))

prep(said-9, Come-2)
pcomp(Come-2, along-3)
dep(along-3, Diamond-5)
nsubj(said-9, she-8)
root(ROOT-0, said-9)
poss(ear-12, his-11)
prep_in(said-9, ear-12)
dep(smallest-16, the-15)
prep_in(said-9, smallest-16)
prep_in(said-9, highest-18)
conj_and(smallest-16, highest-18)
amod(voices-21, treble-20)
prep_of(smallest-16, voices-21)
nsubj(time-26, it-24)
cop(time-26, is-25)
parataxis(said-9, time-26)
nsubj(setting-29, we-27)
aux(setting-29, were-28)
rcmod(time-26, setting-29)
prt(setting-29, out-30)
prep_for(setting-29, Sandwich-32)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (MD could)
      (ADVP (RB just))
      (VP (VB see)
        (NP (PRP her))
        (, ,)
        (PP (IN by)
          (S
            (VP (VBG turning)
              (NP (PRP$ his) (NN head))
              (PP (IN towards)
                (NP (PRP$ his) (NN shoulder)))
              (SBAR
                (ADVP (RB as) (RB far))
                (IN as)
                (S
                  (NP (PRP he))
                  (VP (MD could) (, ,)
                    (PP
                      (CONJP (CC but)
                        (RB only))
                      (PP (IN with)
                        (NP (CD one) (NN eye)))
                      (, ,)
                      (PP (IN for)
                        (NP (PRP$ his) (NN nose))))
                    (VP (VBD came)
                      (PP (IN between)
                        (NP
                          (NP (PRP her))
                          (CC and)
                          (NP (DT the) (JJ other)))))))))))))
    (. .)))

nsubj(see-4, Diamond-1)
aux(see-4, could-2)
advmod(see-4, just-3)
root(ROOT-0, see-4)
dobj(see-4, her-5)
prepc_by(see-4, turning-8)
poss(head-10, his-9)
dobj(turning-8, head-10)
poss(shoulder-13, his-12)
prep_towards(turning-8, shoulder-13)
advmod(far-15, as-14)
advmod(came-29, far-15)
mark(came-29, as-16)
nsubj(came-29, he-17)
aux(came-29, could-18)
cc(came-29, but-20)
num(eye-24, one-23)
prep_with(came-29, eye-24)
dep(came-29, for-26)
poss(nose-28, his-27)
pobj(for-26, nose-28)
advcl(turning-8, came-29)
prep_between(came-29, her-31)
det(other-34, the-33)
prep_between(came-29, other-34)
conj_and(her-31, other-34)

(ROOT
  (S (`` ``)
    (S
      (VP (MD Wo) (RB n't)
        (NP (PRP you))
        (VP (VB take)
          (NP (PRP me))
          (PP (IN in)
            (NP (PRP$ your) (NNS arms))))))
    (CC and)
    (S
      (VP (VB carry)
        (NP (PRP me))))
    (. ?) ('' '')))

aux(take-5, Wo-2)
neg(take-5, n't-3)
dobj(take-5, you-4)
root(ROOT-0, take-5)
dobj(take-5, me-6)
poss(arms-9, your-8)
prep_in(take-5, arms-9)
conj_and(take-5, carry-11)
dobj(carry-11, me-12)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said)
      (PP (IN in)
        (NP (DT a) (NN whisper)))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD knew)
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBD did) (RB not)
                  (VP (VB like)
                    (NP (DT a) (JJ loud) (NN voice))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP she))
                        (VP (VBD was)
                          (ADJP (JJ small)))))))))))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
det(whisper-5, a-4)
prep_in(said-2, whisper-5)
mark(knew-9, for-7)
nsubj(knew-9, he-8)
advcl(said-2, knew-9)
nsubj(like-13, she-10)
aux(like-13, did-11)
neg(like-13, not-12)
ccomp(knew-9, like-13)
det(voice-16, a-14)
amod(voice-16, loud-15)
dobj(like-13, voice-16)
advmod(small-20, when-17)
nsubj(small-20, she-18)
cop(small-20, was-19)
advcl(like-13, small-20)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (SINV
    (S
      (NP (PRP you))
      (VP (VBP ungrateful)
        (NP (NN boy))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP (NNP North) (NNP Wind))
      (, ,)
      (VP (VBG smiling) (`` ``)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (VBP dare)
              (S
                (NP (PRP you))
                (VP (VB make)
                  (NP
                    (NP (NN game))
                    (PP (IN of)
                      (NP (PRP me)))))))))))
    (. ?)))

nsubj(ungrateful-2, you-1)
ccomp(returned-6, ungrateful-2)
dobj(ungrateful-2, boy-3)
root(ROOT-0, returned-6)
nn(Wind-8, North-7)
nsubj(returned-6, Wind-8)
vmod(Wind-8, smiling-10)
advmod(dare-13, how-12)
ccomp(smiling-10, dare-13)
nsubj(make-15, you-14)
ccomp(dare-13, make-15)
dobj(make-15, game-16)
prep_of(game-16, me-18)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP I))
      (VP (MD will)
        (VP (VB carry)
          (NP (PRP you)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD shall)
        (VP (VB walk)
          (NP
            (NP (DT a) (NN bit))
            (PP (IN for)
              (NP (PRP$ your) (NN impertinence))))
          (ADVP (RB first)))))
    (. .)))

discourse(carry-5, Yes-1)
nsubj(carry-5, I-3)
aux(carry-5, will-4)
root(ROOT-0, carry-5)
dobj(carry-5, you-6)
nsubj(walk-11, you-9)
aux(walk-11, shall-10)
conj_but(carry-5, walk-11)
det(bit-13, a-12)
dobj(walk-11, bit-13)
poss(impertinence-16, your-15)
prep_for(bit-13, impertinence-16)
advmod(walk-11, first-17)

(ROOT
  (S
    (VP (VB Come)
      (PRT (RP along)))
    (. .) ('' '')))

root(ROOT-0, Come-1)
prt(Come-1, along-2)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD jumped)
        (PP (IN from)
          (NP (PRP$ his) (NN shoulder)))))
    (, ,)
    (CC but)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NNP Diamond))
          (VP (VBD looked)
            (PP (IN for)
              (NP (PRP her)))
            (PP (IN upon)
              (NP (DT the) (NN ground))))))
      (, ,)
      (NP (PRP he))
      (VP (MD could)
        (VP (VB see)
          (NP
            (NP (NN nothing))
            (PP (CC but)
              (NP (DT a) (JJ little) (NN spider))))
          (PP (IN with)
            (NP
              (NP (JJ long) (NNS legs))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD made)
                    (NP (PRP$ its) (NN way))
                    (PP (IN over)
                      (NP (DT the) (NN ice)))
                    (PP (IN towards)
                      (NP (DT the) (NN south)))))))))))
    (. .)))

nsubj(jumped-2, She-1)
root(ROOT-0, jumped-2)
poss(shoulder-5, his-4)
prep_from(jumped-2, shoulder-5)
advmod(looked-10, when-8)
nsubj(looked-10, Diamond-9)
advcl(see-19, looked-10)
prep_for(looked-10, her-12)
det(ground-15, the-14)
prep_upon(looked-10, ground-15)
nsubj(see-19, he-17)
aux(see-19, could-18)
conj_but(jumped-2, see-19)
dobj(see-19, nothing-20)
prep(nothing-20, but-21)
det(spider-24, a-22)
amod(spider-24, little-23)
pobj(but-21, spider-24)
amod(legs-27, long-26)
prep_with(see-19, legs-27)
nsubj(made-29, legs-27)
rcmod(legs-27, made-29)
poss(way-31, its-30)
dobj(made-29, way-31)
det(ice-34, the-33)
prep_over(made-29, ice-34)
det(south-37, the-36)
prep_towards(made-29, south-37)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD ran)
        (ADVP (RB very) (RB fast))
        (ADVP (RB indeed))
        (PP (IN for)
          (NP (DT a) (NN spider)))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Diamond))
      (VP
        (VP (VBD ran)
          (NP (DT a) (JJ long) (NN way))
          (PP (IN before)
            (NP (PRP it))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB then))
          (VBD waited)
          (PP (IN for)
            (NP (PRP it))))))
    (. .)))

nsubj(ran-2, It-1)
root(ROOT-0, ran-2)
advmod(fast-4, very-3)
advmod(ran-2, fast-4)
advmod(ran-2, indeed-5)
det(spider-8, a-7)
prep_for(ran-2, spider-8)
nsubj(ran-12, Diamond-11)
nsubj(waited-21, Diamond-11)
conj_but(ran-2, ran-12)
det(way-15, a-13)
amod(way-15, long-14)
dobj(ran-12, way-15)
prep_before(ran-12, it-17)
advmod(waited-21, then-20)
conj_but(ran-2, waited-21)
conj_and(ran-12, waited-21)
prep_for(waited-21, it-23)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADVP (RB up)
          (PP (IN with)
            (NP (PRP him))))
        (ADVP
          (ADVP (RBR sooner))
          (SBAR (IN than)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN expected) (, ,)
                  (ADVP (RB however)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD had)
        (VP (VBN grown)
          (NP (DT a) (JJ good) (NN deal)))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(was-2, up-3)
prep_with(up-3, him-5)
advmod(was-2, sooner-6)
mark(expected-10, than-7)
nsubj(expected-10, he-8)
aux(expected-10, had-9)
advcl(sooner-6, expected-10)
advmod(expected-10, however-12)
nsubj(grown-17, it-15)
aux(grown-17, had-16)
conj_and(was-2, grown-17)
det(deal-20, a-18)
amod(deal-20, good-19)
dobj(grown-17, deal-20)

(ROOT
  (S (CC And)
    (S
      (NP (DT the) (NN spider))
      (VP
        (VP (VBD grew))
        (CC and)
        (VP
          (VP (VBD grew))
          (CC and)
          (VP (VBD went)
            (ADVP
              (ADVP (RBR faster))
              (CC and)
              (ADVP (RBR faster)))
            (, ,)
            (PP (IN till)
              (NP
                (NP (DT all))
                (PP (IN at)
                  (SBAR (IN once)
                    (S
                      (NP (NNP Diamond))
                      (VP (VBD discovered)
                        (SBAR (IN that)
                          (S
                            (NP (PRP it))
                            (VP (VBD was) (RB not)
                              (NP
                                (NP (DT a) (NN spider))
                                (, ,)
                                (CC but)
                                (NP (DT a) (NN weasel))
                                (: ;)
                                (CC and)
                                (NP
                                  (ADJP (RB away) (JJ glided))
                                  (DT the) (NN weasel)))))))))))))
          (, ,)
          (CC and)
          (ADVP (RB away))
          (VP (VBD went)
            (NP (NNP Diamond))
            (PP (IN after)
              (NP (PRP it)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD took)
        (SBAR
          (S
            (NP (PDT all) (DT the))
            (VP (VBP run)
              (SBAR
                (S
                  (NP (EX there))
                  (VP (VBD was)
                    (PP (IN in)
                      (NP (PRP him)))
                    (S
                      (VP (TO to)
                        (VP (VB keep)
                          (PRT (RP up))
                          (PP (IN with)
                            (NP (DT the) (NN weasel))))))))))))))
    (. .)))

det(spider-3, the-2)
nsubj(grew-4, spider-3)
nsubj(grew-6, spider-3)
root(ROOT-0, grew-4)
conj_and(grew-4, grew-6)
conj_and(grew-4, went-8)
conj_and(grew-6, went-8)
advmod(went-8, faster-9)
advmod(went-8, faster-11)
conj_and(faster-9, faster-11)
prep_till(went-8, all-14)
mark(discovered-18, once-16)
nsubj(discovered-18, Diamond-17)
prepc_at(all-14, discovered-18)
mark(spider-24, that-19)
nsubj(spider-24, it-20)
cop(spider-24, was-21)
neg(spider-24, not-22)
det(spider-24, a-23)
ccomp(discovered-18, spider-24)
det(weasel-28, a-27)
ccomp(discovered-18, weasel-28)
conj_but(spider-24, weasel-28)
advmod(glided-32, away-31)
amod(weasel-34, glided-32)
det(weasel-34, the-33)
ccomp(discovered-18, weasel-34)
conj_and(spider-24, weasel-34)
advmod(went-38, away-37)
conj_and(grew-4, went-38)
conj_and(grew-6, went-38)
dobj(went-38, Diamond-39)
prep_after(went-38, it-41)
nsubj(took-45, it-44)
conj_and(grew-4, took-45)
predet(the-47, all-46)
nsubj(run-48, the-47)
ccomp(took-45, run-48)
expl(was-50, there-49)
ccomp(run-48, was-50)
prep_in(was-50, him-52)
aux(keep-54, to-53)
xcomp(was-50, keep-54)
prt(keep-54, up-55)
det(weasel-58, the-57)
prep_with(keep-54, weasel-58)

(ROOT
  (S (CC And)
    (NP (DT the) (NN weasel))
    (VP
      (VP (VBD grew))
      (, ,)
      (CC and)
      (VP (VBD grew))
      (, ,)
      (CC and)
      (VP (VBD grew))
      (, ,)
      (PP (IN till)
        (NP
          (NP (DT all))
          (PP (IN at)
            (SBAR (IN once)
              (S
                (NP (NNP Diamond))
                (VP (VBD saw)
                  (SBAR (IN that)
                    (S
                      (NP (DT the) (NN weasel))
                      (VP (VBD was) (RB not)
                        (NP
                          (NP (DT a) (NN weasel))
                          (PP (CC but)
                            (NP (DT a) (NN cat))))))))))))))
    (. .)))

det(weasel-3, the-2)
nsubj(grew-4, weasel-3)
nsubj(grew-7, weasel-3)
nsubj(grew-10, weasel-3)
root(ROOT-0, grew-4)
conj_and(grew-4, grew-7)
conj_and(grew-4, grew-10)
conj_and(grew-4, till-12)
prep_till(grew-4, all-13)
mark(saw-17, once-15)
nsubj(saw-17, Diamond-16)
prepc_at(all-13, saw-17)
mark(weasel-24, that-18)
det(weasel-20, the-19)
nsubj(weasel-24, weasel-20)
cop(weasel-24, was-21)
neg(weasel-24, not-22)
det(weasel-24, a-23)
ccomp(saw-17, weasel-24)
prep(weasel-24, but-25)
det(cat-27, a-26)
pobj(but-25, cat-27)

(ROOT
  (S (CC And)
    (ADVP (RB away))
    (VP (VBD went)
      (NP
        (NP (DT the) (NN cat))
        (, ,)
        (CC and)
        (NP (NNP Diamond))))
    (PP (IN after)
      (NP (PRP it)))
    (. .)))

cc(went-3, And-1)
advmod(went-3, away-2)
root(ROOT-0, went-3)
det(cat-5, the-4)
dobj(went-3, cat-5)
dobj(went-3, Diamond-8)
conj_and(cat-5, Diamond-8)
prep_after(went-3, it-10)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN run)
            (NP (PDT half) (DT a) (NN mile))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD found)
      (NP (DT the) (NN cat))
      (S
        (VP
          (VP (VBG waiting)
            (PP (IN for)
              (NP (PRP him))))
          (, ,)
          (VP (VBG sitting)
            (PRT (RP up)))
          (CC and)
          (VP (VBG washing)
            (NP (PRP$ her) (NN face))
            (S (RB not)
              (VP (TO to)
                (VP (VB lose)
                  (NP (NN time)))))))))
    (. .)))

cc(found-11, And-1)
advmod(run-5, when-2)
nsubj(run-5, he-3)
aux(run-5, had-4)
advcl(found-11, run-5)
predet(mile-8, half-6)
det(mile-8, a-7)
dobj(run-5, mile-8)
nsubj(found-11, he-10)
root(ROOT-0, found-11)
det(cat-13, the-12)
dobj(found-11, cat-13)
dep(found-11, waiting-14)
prep_for(waiting-14, him-16)
dep(found-11, sitting-18)
conj_and(waiting-14, sitting-18)
prt(sitting-18, up-19)
dep(found-11, washing-21)
conj_and(waiting-14, washing-21)
poss(face-23, her-22)
dobj(washing-21, face-23)
neg(lose-26, not-24)
aux(lose-26, to-25)
vmod(washing-21, lose-26)
dobj(lose-26, time-27)

(ROOT
  (S (CC And)
    (ADVP (RB away))
    (VP
      (VP (VBD went)
        (NP (DT the) (NN cat))
        (ADVP (RB again)))
      (, ,)
      (CC and)
      (VP (VBZ Diamond)))
    (PP (IN after)
      (NP (PRP it)))
    (. .)))

advmod(went-3, away-2)
root(ROOT-0, went-3)
det(cat-5, the-4)
dobj(went-3, cat-5)
advmod(went-3, again-6)
conj_and(went-3, Diamond-9)
prep_after(went-3, it-11)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (JJ next) (NN time))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD came)
            (PRT (RP up))
            (PP (IN with)
              (NP
                (NP (DT the) (NN cat))
                (, ,)
                (NP (DT the) (NN cat))))))))
    (VP (VBD was) (RB not)
      (NP
        (NP (DT a) (NN cat))
        (, ,)
        (CC but)
        (NP (DT a) (NN hunting-leopard))))
    (. .)))

det(time-4, the-2)
amod(time-4, next-3)
nsubj(cat-17, time-4)
nsubj(came-6, he-5)
rcmod(time-4, came-6)
prt(came-6, up-7)
det(cat-10, the-9)
prep_with(came-6, cat-10)
det(cat-13, the-12)
appos(cat-10, cat-13)
cop(cat-17, was-14)
neg(cat-17, not-15)
det(cat-17, a-16)
root(ROOT-0, cat-17)
det(hunting-leopard-21, a-20)
conj_but(cat-17, hunting-leopard-21)

(ROOT
  (S (CC And)
    (NP (DT the) (NN hunting-leopard))
    (VP (VBD grew)
      (PP (TO to)
        (NP
          (NP (DT a) (NN jaguar))
          (, ,)
          (NP
            (NP (DT all))
            (VP (VBN covered)
              (PP (IN with)
                (NP
                  (NP (NNS spots))
                  (PP (IN like)
                    (NP (NNS eyes))))))))))
    (. .)))

cc(grew-4, And-1)
det(hunting-leopard-3, the-2)
nsubj(grew-4, hunting-leopard-3)
root(ROOT-0, grew-4)
det(jaguar-7, a-6)
prep_to(grew-4, jaguar-7)
appos(jaguar-7, all-9)
vmod(all-9, covered-10)
prep_with(covered-10, spots-12)
prep_like(spots-12, eyes-14)

(ROOT
  (S (CC And)
    (NP (DT the) (NN jaguar))
    (VP (VBD grew)
      (PP (TO to)
        (NP (DT a) (NNP Bengal) (NN tiger))))
    (. .)))

cc(grew-4, And-1)
det(jaguar-3, the-2)
nsubj(grew-4, jaguar-3)
root(ROOT-0, grew-4)
det(tiger-8, a-6)
nn(tiger-8, Bengal-7)
prep_to(grew-4, tiger-8)

(ROOT
  (S (CC And)
    (PP (IN at)
      (NP
        (NP (NN none))
        (PP (IN of))))
    (S
      (NP (PRP them))
      (VP (VBD was)
        (ADJP (RB Diamond) (JJ afraid))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN been)
                (PP (IN at)
                  (NP
                    (NP (NNP North) (NNP Wind) (POS 's))
                    (NN back)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD could)
        (VP (VB be)
          (ADJP (JJ afraid)
            (PP (IN of)
              (NP (PRP her))))
          (SBAR
            (ADVP (RB no) (RB longer))
            (WHNP (WDT whatever))
            (S
              (NP (PRP she))
              (VP
                (VP (VBD did))
                (CC or)
                (VP (VBD grew))))))))
    (. .)))

prep_at(afraid-8, none-3)
prep(none-3, of-4)
nsubj(afraid-8, them-5)
cop(afraid-8, was-6)
advmod(afraid-8, Diamond-7)
root(ROOT-0, afraid-8)
mark(been-13, for-10)
nsubj(been-13, he-11)
aux(been-13, had-12)
advcl(afraid-8, been-13)
nn(Wind-16, North-15)
poss(back-18, Wind-16)
prep_at(been-13, back-18)
nsubj(afraid-24, he-21)
aux(afraid-24, could-22)
cop(afraid-24, be-23)
conj_and(afraid-8, afraid-24)
prep_of(afraid-24, her-26)
neg(longer-28, no-27)
advmod(did-31, longer-28)
dobj(did-31, whatever-29)
nsubj(did-31, she-30)
nsubj(grew-33, she-30)
ccomp(afraid-24, did-31)
ccomp(afraid-24, grew-33)
conj_or(did-31, grew-33)

(ROOT
  (S (CC And)
    (NP (DT the) (NN tiger))
    (VP (VBD flew)
      (PP (IN over)
        (NP
          (NP (DT the) (NN snow))
          (PP (IN in)
            (NP (DT a) (JJ straight) (NN line)))))
      (PP (IN for)
        (NP (DT the) (NN south)))
      (, ,)
      (S
        (VP (VBG growing)
          (ADJP
            (ADJP (JJR less)
              (CC and)
              (JJR less))
            (PP (TO to)
              (NP
                (NP (NNP Diamond) (POS 's))
                (NNS eyes))))
          (SBAR (IN till)
            (S
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (ADVP (RB only))
                  (NP (DT a) (JJ black) (NN speck))
                  (PP (IN upon)
                    (NP (DT the) (NNS whiteness)))))
              (: ;)
              (CC and)
              (RB then)
              (S
                (NP (PRP it))
                (VP (VBN vanished)
                  (ADVP (RB altogether)))))))))
    (. .)))

cc(flew-4, And-1)
det(tiger-3, the-2)
nsubj(flew-4, tiger-3)
root(ROOT-0, flew-4)
det(snow-7, the-6)
prep_over(flew-4, snow-7)
det(line-11, a-9)
amod(line-11, straight-10)
prep_in(snow-7, line-11)
det(south-14, the-13)
prep_for(flew-4, south-14)
xcomp(flew-4, growing-16)
acomp(growing-16, less-17)
acomp(growing-16, less-19)
conj_and(less-17, less-19)
poss(eyes-23, Diamond-21)
prep_to(less-17, eyes-23)
mark(speck-30, till-24)
nsubj(speck-30, it-25)
cop(speck-30, was-26)
advmod(speck-30, only-27)
det(speck-30, a-28)
amod(speck-30, black-29)
advcl(growing-16, speck-30)
det(whiteness-33, the-32)
prep_upon(speck-30, whiteness-33)
advmod(vanished-38, then-36)
nsubj(vanished-38, it-37)
advcl(growing-16, vanished-38)
conj_and(speck-30, vanished-38)
advmod(vanished-38, altogether-39)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (NP (NNP Diamond))
    (VP (VBD felt)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD would)
              (ADVP (RB rather))
              (RB not)
              (VP (VB run)
                (ADVP (DT any) (RBR farther))))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN ice))
            (VP (VBD had)
              (VP (VBN got)
                (S
                  (ADJP (RB very) (JJ rough)))))))))
    (. .)))

cc(felt-4, And-1)
advmod(felt-4, now-2)
nsubj(felt-4, Diamond-3)
root(ROOT-0, felt-4)
mark(run-10, that-5)
nsubj(run-10, he-6)
aux(run-10, would-7)
advmod(run-10, rather-8)
neg(run-10, not-9)
ccomp(felt-4, run-10)
dep(farther-12, any-11)
advmod(run-10, farther-12)
mark(got-19, that-15)
det(ice-17, the-16)
nsubj(got-19, ice-17)
aux(got-19, had-18)
ccomp(felt-4, got-19)
conj_and(run-10, got-19)
advmod(rough-21, very-20)
acomp(got-19, rough-21)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (PP (IN near)
        (NP
          (NP
            (NP (DT the) (NNS precipices))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD bounded)
                  (NP (DT the) (NN sea))
                  (, ,)
                  (SBAR (IN so)
                    (S
                      (NP (PRP he))
                      (VP (VBD slackened)
                        (NP (PRP$ his) (NN pace))
                        (PP (TO to)
                          (NP (DT a) (NN walk)))
                        (, ,)
                        (S
                          (VP (VBG saying)
                            (ADVP (RB aloud))
                            (PP (TO to)
                              (NP (PRP himself))))))))))))
          (: :) (`` ``)
          (S
            (S
              (SBAR
                (WHADVP (WRB When))
                (S
                  (NP (NNP North) (NNP Wind))
                  (VP (VBZ has)
                    (VP (VBN punished)
                      (S
                        (NP (PRP me))
                        (ADJP (JJ enough)
                          (PP (IN for)
                            (S
                              (VP (VBG making)
                                (NP
                                  (NP (NN game))
                                  (PP (IN of)
                                    (NP (PRP her)))))))))))))
              (, ,)
              (NP (PRP she))
              (VP (MD will)
                (VP (VB come)
                  (PRT (RP back))
                  (PP (TO to)
                    (NP (PRP me))))))
            (: ;)
            (S
              (NP (PRP I))
              (VP (VBP know)
                (SBAR
                  (S
                    (NP (PRP she))
                    (VP (MD will)))))))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP I))
          (VP (MD ca) (RB n't)
            (VP (VB go)
              (ADVP (RB much) (RBR farther))
              (PP (IN without)
                (NP (PRP her))))))))
    (. .) ('' '')))

advmod(was-4, Besides-1)
nsubj(was-4, he-3)
root(ROOT-0, was-4)
det(precipices-7, the-6)
prep_near(was-4, precipices-7)
nsubj(bounded-9, precipices-7)
rcmod(precipices-7, bounded-9)
det(sea-11, the-10)
dobj(bounded-9, sea-11)
mark(slackened-15, so-13)
nsubj(slackened-15, he-14)
advcl(bounded-9, slackened-15)
poss(pace-17, his-16)
dobj(slackened-15, pace-17)
det(walk-20, a-19)
prep_to(slackened-15, walk-20)
vmod(slackened-15, saying-22)
advmod(saying-22, aloud-23)
prep_to(saying-22, himself-25)
advmod(punished-32, When-28)
nn(Wind-30, North-29)
nsubj(punished-32, Wind-30)
aux(punished-32, has-31)
advcl(come-43, punished-32)
nsubj(enough-34, me-33)
xcomp(punished-32, enough-34)
prepc_for(enough-34, making-36)
dobj(making-36, game-37)
prep_of(game-37, her-39)
nsubj(come-43, she-41)
aux(come-43, will-42)
dep(precipices-7, come-43)
prt(come-43, back-44)
prep_to(come-43, me-46)
nsubj(know-49, I-48)
parataxis(come-43, know-49)
nsubj(will-51, she-50)
ccomp(know-49, will-51)
mark(go-57, for-53)
nsubj(go-57, I-54)
aux(go-57, ca-55)
neg(go-57, n't-56)
advcl(was-4, go-57)
advmod(farther-59, much-58)
advmod(go-57, farther-59)
prep_without(go-57, her-61)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBZ dear)
      (NP (NN boy)))
    (. !)))

nsubj(dear-3, You-2)
root(ROOT-0, dear-3)
dobj(dear-3, boy-4)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB only))
      (PP (IN in)
        (NP (NN fun))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(was-2, only-3)
prep_in(was-2, fun-5)

(ROOT
  (S
    (ADVP (RB Here))
    (NP (PRP I))
    (VP (VBP am))
    (. !) ('' '')))

advmod(am-3, Here-1)
nsubj(am-3, I-2)
root(ROOT-0, am-3)

(ROOT
  (S
    (VP (VBD said)
      (NP
        (NP (NNP North) (NNP Wind) (POS 's))
        (NN voice))
      (PP (IN behind)
        (NP (PRP him))))
    (. .)))

root(ROOT-0, said-1)
nn(Wind-3, North-2)
poss(voice-5, Wind-3)
dobj(said-1, voice-5)
prep_behind(said-1, him-7)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP
      (VP (VBD turned))
      (, ,)
      (CC and)
      (VP (VBD saw)
        (NP (PRP her))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD liked)
              (ADVP (RBS best))
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP (PRP her)))))
              (, ,)
              (S
                (VP (VBG standing)
                  (PP (IN beside)
                    (NP
                      (NP (PRP him))
                      (, ,)
                      (NP (DT a) (JJ tall) (NN lady)))))))))))
    (. .)))

nsubj(turned-2, Diamond-1)
nsubj(saw-5, Diamond-1)
root(ROOT-0, turned-2)
conj_and(turned-2, saw-5)
dobj(saw-5, her-6)
mark(liked-9, as-7)
nsubj(liked-9, he-8)
nsubj(see-12, he-8)
advcl(saw-5, liked-9)
advmod(liked-9, best-10)
aux(see-12, to-11)
xcomp(liked-9, see-12)
dobj(see-12, her-13)
xcomp(liked-9, standing-15)
prep_beside(standing-15, him-17)
det(lady-21, a-19)
amod(lady-21, tall-20)
appos(him-17, lady-21)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBZ 's)
      (NP (DT the) (NN tiger)))
    (. ?) ('' '')))

advmod('s-3, Where-2)
root(ROOT-0, 's-3)
det(tiger-5, the-4)
nsubj('s-3, tiger-5)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked) (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD knew)
            (NP (PDT all) (DT the) (NNS creatures))
            (PP (IN from)
              (NP (DT a) (NN picture) (NN book)))
            (SBAR (IN that)
              (S
                (NP (NNP Miss) (NNP Coleman))
                (VP (VBD had)
                  (VP (VBN given)
                    (NP (PRP him))))))))))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)
mark(knew-6, for-4)
nsubj(knew-6, he-5)
advcl(asked-2, knew-6)
predet(creatures-9, all-7)
det(creatures-9, the-8)
dobj(knew-6, creatures-9)
det(book-13, a-11)
nn(book-13, picture-12)
prep_from(knew-6, book-13)
mark(given-18, that-14)
nn(Coleman-16, Miss-15)
nsubj(given-18, Coleman-16)
aux(given-18, had-17)
ccomp(knew-6, given-18)
dobj(given-18, him-19)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,)
    (PP (IN of)
      (NP (NN course)))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD added) (, ,) (`` ``)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (NP (DT the) (NN tiger)))))
    (. .)))

cc(added-9, But-2)
prep_of(added-9, course-5)
nsubj(added-9, he-8)
root(ROOT-0, added-9)
nsubj(tiger-15, you-12)
cop(tiger-15, were-13)
det(tiger-15, the-14)
ccomp(added-9, tiger-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBN puzzled)
        (CC and)
        (VBN forgot)))
    (. .)))

nsubjpass(puzzled-3, I-1)
nsubjpass(forgot-5, I-1)
auxpass(puzzled-3, was-2)
root(ROOT-0, puzzled-3)
conj_and(puzzled-3, forgot-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD saw)
        (NP (PRP it))
        (PP (JJ such)
          (NP (DT a) (JJ long) (NN way)))
        (PP (RP off)
          (PP (IN before)
            (NP (PRP me))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB there))
      (NP (PRP you))
      (VP (VBD were)
        (PP (IN behind)
          (NP (PRP me)))))
    (. .)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
dobj(saw-2, it-3)
prep(saw-2, such-4)
det(way-7, a-5)
amod(way-7, long-6)
dep(such-4, way-7)
prep(saw-2, off-8)
prep_before(off-8, me-10)
advmod(were-15, there-13)
nsubj(were-15, you-14)
conj_and(saw-2, were-15)
prep_behind(were-15, me-17)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADJP (RB so) (JJ odd))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .) ('' '')))

nsubj(odd-4, It-1)
cop(odd-4, 's-2)
advmod(odd-4, so-3)
ccomp(know-7, odd-4)
nsubj(know-7, you-6)
root(ROOT-0, know-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (MD must)
        (VP (VB look)
          (ADJP (RB very) (JJ odd)
            (PP (TO to)
              (NP
                (NP (PRP you))
                (, ,)
                (NP (NNP Diamond))))))))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBP see)
        (NP (DT that))))
    (. .)))

nsubj(look-4, It-2)
aux(look-4, must-3)
root(ROOT-0, look-4)
advmod(odd-6, very-5)
acomp(look-4, odd-6)
prep_to(odd-6, you-8)
appos(you-8, Diamond-10)
nsubj(see-13, I-12)
parataxis(look-4, see-13)
dobj(see-13, that-14)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP
        (ADJP (DT no) (RBR more) (JJ odd))
        (PP (TO to)
          (NP (PRP me))))
      (SBAR (IN than)
        (S
          (VP (TO to)
            (VP (VB break)
              (NP (DT an) (JJ old) (NN pine))
              (PP (IN in)
                (NP (CD two))))))))
    (. .) ('' '')))

cc(odd-6, But-1)
nsubj(odd-6, it-2)
nsubj(break-11, it-2)
cop(odd-6, is-3)
neg(odd-6, no-4)
advmod(odd-6, more-5)
root(ROOT-0, odd-6)
prep_to(odd-6, me-8)
mark(break-11, than-9)
aux(break-11, to-10)
advcl(odd-6, break-11)
xcomp(odd-6, break-11)
det(pine-14, an-12)
amod(pine-14, old-13)
dobj(break-11, pine-14)
prep_in(break-11, two-16)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Well))
      (, ,)
      (NP (DT that))
      (VP (VBZ 's)
        (ADJP (JJ odd) (RB enough))))
    (, ,) ('' '')
    (VP (VBD remarked))
    (NP (NNP Diamond))
    (. .)))

advmod(odd-6, Well-2)
nsubj(odd-6, that-4)
cop(odd-6, 's-5)
ccomp(remarked-10, odd-6)
advmod(odd-6, enough-7)
root(ROOT-0, remarked-10)
nsubj(remarked-10, Diamond-11)

(ROOT
  (S (`` ``)
    (CC So)
    (NP (PRP it))
    (VP (VBZ is))
    (. !)))

cc(is-4, So-2)
nsubj(is-4, it-3)
root(ROOT-0, is-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD forgot))
    (. .)))

nsubj(forgot-2, I-1)
root(ROOT-0, forgot-2)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP
      (NP (NN none))
      (PP (IN of)
        (NP (DT these) (NNS things))))
    (VP (VBP are)
      (ADJP (JJ odder)
        (PP (TO to)
          (NP (PRP me))))
      (SBAR (IN than)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (PP (TO to)
              (NP (PRP you)))
            (S
              (VP (TO to)
                (VP (VB eat)
                  (NP (NN bread)
                    (CC and)
                    (NN butter)))))))))
    (. .) ('' '')))

discourse(odder-8, Well-1)
nsubj(odder-8, none-3)
det(things-6, these-5)
prep_of(none-3, things-6)
cop(odder-8, are-7)
root(ROOT-0, odder-8)
prep_to(odder-8, me-10)
mark(is-13, than-11)
nsubj(is-13, it-12)
nsubj(eat-17, it-12)
advcl(odder-8, is-13)
prep_to(is-13, you-15)
aux(eat-17, to-16)
xcomp(is-13, eat-17)
dobj(eat-17, bread-18)
dobj(eat-17, butter-20)
conj_and(bread-18, butter-20)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Well))
      (, ,)
      (NP (DT that))
      (VP (VBZ 's)
        (ADJP (JJ odd))
        (ADVP (RB too))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBP think)
              (PP (IN of)
                (NP (PRP it))))))))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP (NNP Diamond))
    (. .)))

advmod(odd-6, Well-2)
nsubj(odd-6, that-4)
cop(odd-6, 's-5)
ccomp(persisted-16, odd-6)
advmod(odd-6, too-7)
advmod(think-11, when-9)
nsubj(think-11, I-10)
advcl(odd-6, think-11)
prep_of(think-11, it-13)
root(ROOT-0, persisted-16)
nsubj(persisted-16, Diamond-17)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD should)
      (ADVP (RB just))
      (VP (VB like)
        (NP
          (NP (DT a) (NN slice))
          (PP (IN of)
            (NP (NN bread)
              (CC and)
              (NN butter))))))
    (. !)))

nsubj(like-5, I-2)
aux(like-5, should-3)
advmod(like-5, just-4)
root(ROOT-0, like-5)
det(slice-7, a-6)
dobj(like-5, slice-7)
prep_of(slice-7, bread-9)
prep_of(slice-7, butter-11)
conj_and(bread-9, butter-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ afraid)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR
                (WHADVP (WRB how) (RB long))
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (PRN (: --)
                      (SBAR
                        (WHADVP (WRB how) (RB long))
                        (S
                          (NP (PRP it))
                          (VP (VBZ seems)
                            (PP (TO to)
                              (NP
                                (NP (PRP me))
                                (, ,)
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBZ is)))))))))
                      (: --)))))))))
      (SBAR (IN since)
        (S
          (NP (PRP I))
          (VP (VBD had)
            (NP (NN anything)
              (S
                (VP (TO to)
                  (VP (VB eat)))))))))
    (. .) ('' '')))

nsubj(afraid-3, I-1)
nsubj(say-5, I-1)
cop(afraid-3, 'm-2)
root(ROOT-0, afraid-3)
aux(say-5, to-4)
xcomp(afraid-3, say-5)
advmod(long-7, how-6)
advmod(is-9, long-7)
nsubj(is-9, it-8)
ccomp(say-5, is-9)
advmod(long-12, how-11)
advmod(seems-14, long-12)
nsubj(seems-14, it-13)
parataxis(is-9, seems-14)
prep_to(seems-14, me-16)
nsubj(is-19, me-16)
rcmod(me-16, is-19)
mark(had-23, since-21)
nsubj(had-23, I-22)
advcl(afraid-3, had-23)
dobj(had-23, anything-24)
aux(eat-26, to-25)
vmod(anything-24, eat-26)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Come)
        (ADVP (RB then))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP North) (NNP Wind))
    (, ,)
    (S
      (VP
        (VP (VBG stooping))
        (CC and)
        (VP (VBG holding)
          (PRT (RP out))
          (NP (PRP$ her) (NNS arms)))))
    (. .)))

ccomp(said-6, Come-2)
advmod(Come-2, then-3)
root(ROOT-0, said-6)
nn(Wind-8, North-7)
nsubj(said-6, Wind-8)
vmod(said-6, stooping-10)
vmod(said-6, holding-12)
conj_and(stooping-10, holding-12)
prt(holding-12, out-13)
poss(arms-15, her-14)
dobj(holding-12, arms-15)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD shall)
      (VP (VB have)
        (NP (DT some) (NN bread)
          (CC and)
          (NN butter))
        (ADVP (RB very) (RB soon))))
    (. .)))

nsubj(have-4, You-2)
aux(have-4, shall-3)
root(ROOT-0, have-4)
det(bread-6, some-5)
dobj(have-4, bread-6)
dobj(have-4, butter-8)
conj_and(bread-6, butter-8)
advmod(soon-10, very-9)
advmod(have-4, soon-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ glad)
        (S
          (VP (TO to)
            (VP (VB find)
              (S
                (NP (PRP you))
                (VP (VB want)
                  (NP (DT some)))))))))
    (. .) ('' '')))

nsubj(glad-3, I-1)
nsubj(find-5, I-1)
cop(glad-3, am-2)
root(ROOT-0, glad-3)
aux(find-5, to-4)
xcomp(glad-3, find-5)
nsubj(want-7, you-6)
ccomp(find-5, want-7)
dobj(want-7, some-8)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP
      (VP (VBD held)
        (PRT (RP up))
        (NP (PRP$ his) (NNS arms)
          (S
            (VP (TO to)
              (VP (VB meet)
                (NP (NNS hers)))))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADJP (JJ safe))
        (PP (IN upon)
          (NP (PRP$ her) (NN bosom)))))
    (. .)))

nsubj(held-2, Diamond-1)
nsubj(safe-12, Diamond-1)
root(ROOT-0, held-2)
prt(held-2, up-3)
poss(arms-5, his-4)
dobj(held-2, arms-5)
aux(meet-7, to-6)
vmod(arms-5, meet-7)
dobj(meet-7, hers-8)
cop(safe-12, was-11)
conj_and(held-2, safe-12)
poss(bosom-15, her-14)
prep_upon(safe-12, bosom-15)

(ROOT
  (S
    (NP (NNP North) (NNP Wind))
    (VP (VBD bounded)
      (PP (IN into)
        (NP (DT the) (NN air))))
    (. .)))

nn(Wind-2, North-1)
nsubj(bounded-3, Wind-2)
root(ROOT-0, bounded-3)
det(air-6, the-5)
prep_into(bounded-3, air-6)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NNS tresses))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB lift)
              (CC and)
              (VB rise)
              (NP (CC and)
                (NP
                  (NP (NN spread)
                    (CC and)
                    (NN stream))
                  (CC and)
                  (NP (NN flow)
                    (CC and)
                    (NN flutter)))))))))
    (: ;)
    (CC and)
    (S
      (PP
        (PP (IN with)
          (NP
            (NP (DT a) (NN roar))
            (PP (IN from)
              (NP
                (NP (PRP$ her) (NN hair))
                (CC and)
                (NP (DT an) (NN answering) (NN roar))))))
        (PP (IN from)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (DT the) (JJ great) (NNS glaciers)))))
        (PP (IN beside)
          (NP
            (NP (PRP them))
            (, ,)
            (SBAR (WP$ whose)
              (S
                (NP (JJ slow) (NN torrent))
                (VP (VBD tumbled)
                  (NP (CD two)
                    (CC or)
                    (CD three) (NNS icebergs))
                  (PP (IN at)
                    (NP (RB once)))
                  (PP (IN into)
                    (NP
                      (NP (DT the) (NNS waves))
                      (PP (IN at)
                        (NP (PRP$ their) (NNS feet)))))))))))
      (, ,)
      (NP (NNP North) (NNP Wind)
        (CC and)
        (NNP Diamond))
      (VP (VBD went)
        (S
          (VP (VBG flying)
            (NP (NNS southwards))))))
    (. .)))

poss(tresses-2, Her-1)
nsubj(began-3, tresses-2)
nsubj(lift-5, tresses-2)
nsubj(rise-7, tresses-2)
root(ROOT-0, began-3)
aux(lift-5, to-4)
xcomp(began-3, lift-5)
xcomp(began-3, rise-7)
conj_and(lift-5, rise-7)
dobj(lift-5, spread-9)
dobj(lift-5, stream-11)
conj_and(spread-9, stream-11)
dobj(lift-5, flow-13)
conj_and(spread-9, flow-13)
conj_and(spread-9, flutter-15)
conj_and(flow-13, flutter-15)
det(roar-20, a-19)
prep_with(went-58, roar-20)
poss(hair-23, her-22)
prep_from(roar-20, hair-23)
det(roar-27, an-25)
nn(roar-27, answering-26)
prep_from(roar-20, roar-27)
conj_and(hair-23, roar-27)
prep_from(went-58, one-29)
det(glaciers-33, the-31)
amod(glaciers-33, great-32)
prep_of(one-29, glaciers-33)
prep_beside(went-58, them-35)
dep(tumbled-40, whose-37)
amod(torrent-39, slow-38)
nsubj(tumbled-40, torrent-39)
dep(them-35, tumbled-40)
nn(icebergs-44, two-41)
conj_or(two-41, three-43)
nn(icebergs-44, three-43)
dobj(tumbled-40, icebergs-44)
prep(tumbled-40, at-45)
pobj(at-45, once-46)
det(waves-49, the-48)
prep_into(tumbled-40, waves-49)
poss(feet-52, their-51)
prep_at(waves-49, feet-52)
nn(Wind-55, North-54)
nsubj(went-58, Wind-55)
conj_and(Wind-55, Diamond-57)
nsubj(went-58, Diamond-57)
conj_and(began-3, went-58)
xcomp(went-58, flying-59)
dobj(flying-59, southwards-60)

(ROOT
  (NP (NNP CHAPTER) (NNP XII) (. .)))

nn(XII-2, CHAPTER-1)
root(ROOT-0, XII-2)

(ROOT
  (S
    (SBAR
      (WHNP (WP WHO))
      (S
        (NP (NNP MET) (NNP DIAMOND) (NNP AT) (NNP SANDWICH))
        (PP (IN As)
          (NP (NNP THEY)))
        (VP (VBD flew))))
    (, ,)
    (ADVP (RB so) (RB fast))
    (NP (PRP they))
    (VP (VBD went)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN sea))
          (VP (VBD slid)
            (PRT (RP away))
            (PP (IN from)
              (PP (IN under)
                (NP (PRP them))))
            (PP (IN like)
              (NP
                (NP
                  (NP (DT a) (JJ great) (NN web))
                  (PP (IN of)
                    (NP (NN shot) (NN silk))))
                (, ,)
                (NP
                  (NP (JJ blue) (NN shot))
                  (PP (IN with)
                    (ADJP (JJ grey))))
                (, ,)
                (CC and)
                (NP
                  (NP (JJ green) (NN shot))
                  (PP (IN with)
                    (NP (NNP purple))))))))))
    (. .)))

dobj(flew-8, WHO-1)
nn(SANDWICH-5, MET-2)
nn(SANDWICH-5, DIAMOND-3)
nn(SANDWICH-5, AT-4)
nsubj(flew-8, SANDWICH-5)
prep_as(flew-8, THEY-7)
advcl(went-13, flew-8)
advmod(fast-11, so-10)
advmod(went-13, fast-11)
nsubj(went-13, they-12)
root(ROOT-0, went-13)
mark(slid-17, that-14)
det(sea-16, the-15)
nsubj(slid-17, sea-16)
ccomp(went-13, slid-17)
prepc_away_from(slid-17, under-20)
pobj(under-20, them-21)
det(web-25, a-23)
amod(web-25, great-24)
prep_like(slid-17, web-25)
nn(silk-28, shot-27)
prep_of(web-25, silk-28)
amod(shot-31, blue-30)
prep_like(slid-17, shot-31)
conj_and(web-25, shot-31)
prep_with(shot-31, grey-33)
amod(shot-37, green-36)
prep_like(slid-17, shot-37)
conj_and(web-25, shot-37)
prep_with(shot-37, purple-39)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD went)
      (ADVP (RB so) (RB fast))
      (SBAR (IN that)
        (S
          (NP (DT the) (NNS stars))
          (ADVP (PRP themselves))
          (VP (VBD appeared)
            (S
              (VP (TO to)
                (VP (VB sail)
                  (PRT (RP away))
                  (PP (IN past)
                    (NP (PRP them)))
                  (ADVP (RB overhead))))))))
      (, ,) (`` ``)
      (PP (IN like)
        (NP (JJ golden) (NNS boats)))
      (, ,) ('' '')
      (PP (IN on)
        (NP
          (NP (DT a) (JJ blue) (NN sea))
          (VP (VBN turned)
            (ADVP (RB upside) (RB down))))))
    (. .)))

nsubj(went-2, They-1)
root(ROOT-0, went-2)
advmod(fast-4, so-3)
advmod(went-2, fast-4)
mark(appeared-9, that-5)
det(stars-7, the-6)
nsubj(appeared-9, stars-7)
nsubj(sail-11, stars-7)
advmod(appeared-9, themselves-8)
ccomp(went-2, appeared-9)
aux(sail-11, to-10)
xcomp(appeared-9, sail-11)
prt(sail-11, away-12)
prep_past(sail-11, them-14)
advmod(sail-11, overhead-15)
amod(boats-20, golden-19)
prep_like(went-2, boats-20)
det(sea-26, a-24)
amod(sea-26, blue-25)
prep_on(went-2, sea-26)
vmod(sea-26, turned-27)
advmod(down-29, upside-28)
advmod(turned-27, down-29)

(ROOT
  (S
    (S (CC And)
      (NP (PRP they))
      (VP (VBD went)
        (ADVP (RB so) (RB fast))
        (SBAR (IN that)
          (S
            (NP (NNP Diamond) (PRP himself))
            (VP (VBD went)
              (NP (DT the) (JJ other) (NN way))
              (ADVP (RB as) (RB fast)))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP mean)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD went)
              (ADVP (RB fast)
                (ADJP (RB asleep)))
              (PP (IN in)
                (NP
                  (NP (NNP North) (NNP Wind) (POS 's))
                  (NNS arms))))))))
    (. .)))

cc(went-3, And-1)
nsubj(went-3, they-2)
root(ROOT-0, went-3)
advmod(fast-5, so-4)
advmod(went-3, fast-5)
mark(went-9, that-6)
nsubj(went-9, Diamond-7)
npadvmod(Diamond-7, himself-8)
ccomp(went-3, went-9)
det(way-12, the-10)
amod(way-12, other-11)
dobj(went-9, way-12)
advmod(fast-14, as-13)
advmod(went-9, fast-14)
nsubj(mean-17, I-16)
parataxis(went-3, mean-17)
nsubj(went-19, he-18)
ccomp(mean-17, went-19)
advmod(went-19, fast-20)
pobj(fast-20, asleep-21)
nn(Wind-24, North-23)
poss(arms-26, Wind-24)
prep_in(went-19, arms-26)

(ROOT
  (S
    (S
      (S
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP he))
            (VP (VBD woke))))
        (, ,)
        (NP (DT a) (NN face))
        (VP (VBD was)
          (VP (VBG bending)
            (PRT (RP over))
            (NP (PRP him)))))
      (: ;)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD was) (RB not)
          (NP (JJ North)
            (NX (NNP Wind) (POS 's))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (PRP$ his) (NN mother))
          (VP (VBZ 's)))))
    (. .)))

advmod(woke-3, When-1)
nsubj(woke-3, he-2)
advcl(bending-8, woke-3)
det(face-6, a-5)
nsubj(bending-8, face-6)
aux(bending-8, was-7)
root(ROOT-0, bending-8)
prt(bending-8, over-9)
dobj(bending-8, him-10)
nsubj(Wind-17, it-13)
cop(Wind-17, was-14)
neg(Wind-17, not-15)
amod(Wind-17, North-16)
conj_but(bending-8, Wind-17)
dep(Wind-17, 's-18)
nsubj(mother-23, it-20)
cop(mother-23, was-21)
poss(mother-23, his-22)
parataxis(bending-8, mother-23)
dep(mother-23, 's-24)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD put)
        (PRT (RP out))
        (NP (PRP$ his) (NNS arms))
        (PP (TO to)
          (NP (PRP her)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD clasped)
        (NP (PRP him))
        (PP (TO to)
          (NP (PRP$ her) (NN bosom)
            (CC and)
            (NN burst)))
        (PP (IN out)
          (S
            (VP (VBG crying))))))
    (. .)))

nsubj(put-2, He-1)
root(ROOT-0, put-2)
prt(put-2, out-3)
poss(arms-5, his-4)
dobj(put-2, arms-5)
prep_to(put-2, her-7)
nsubj(clasped-11, she-10)
conj_and(put-2, clasped-11)
dobj(clasped-11, him-12)
poss(bosom-15, her-14)
prep_to(clasped-11, bosom-15)
prep_to(clasped-11, burst-17)
conj_and(bosom-15, burst-17)
prepc_out(clasped-11, crying-19)

(ROOT
  (S
    (NP (NNP Diamond))
    (VP (VBD kissed)
      (NP (PRP her))
      (ADVP (RB again)
        (CC and)
        (RB again))
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (PRP$ her) (NN stop))))))
    (. .)))

nsubj(kissed-2, Diamond-1)
root(ROOT-0, kissed-2)
dobj(kissed-2, her-3)
advmod(kissed-2, again-4)
advmod(kissed-2, again-6)
conj_and(again-4, again-6)
aux(make-8, to-7)
vmod(kissed-2, make-8)
poss(stop-10, her-9)
dobj(make-8, stop-10)

(ROOT
  (S
    (S
      (ADVP (RB Perhaps))
      (NP (NN kissing))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJS best) (NN thing))
          (PP (IN for)
            (S
              (VP (VBG crying)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD will) (RB not)
        (ADVP (RB always))
        (VP (VB stop)
          (NP (PRP it)))))
    (. .)))

advmod(thing-6, Perhaps-1)
nsubj(thing-6, kissing-2)
cop(thing-6, is-3)
det(thing-6, the-4)
amod(thing-6, best-5)
root(ROOT-0, thing-6)
prepc_for(thing-6, crying-8)
nsubj(stop-15, it-11)
aux(stop-15, will-12)
neg(stop-15, not-13)
advmod(stop-15, always-14)
conj_but(thing-6, stop-15)
dobj(stop-15, it-16)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN matter))
        (, ,)
        (NP (NN mother))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
det(matter-5, the-4)
nsubj(What-2, matter-5)
appos(matter-5, mother-7)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (FRAG
    (INTJ
      (INTJ (`` ``) (UH Oh))
      (, ,)
      (INTJ (UH Diamond)))
    (, ,)
    (NP (PRP$ my) (NN darling))
    (. !)))

discourse(darling-7, Oh-2)
discourse(Oh-2, Diamond-4)
poss(darling-7, my-6)
root(ROOT-0, darling-7)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBP have)
      (VP (VBN been)
        (ADJP (RB so) (JJ ill))))
    (. !) ('' '')))

nsubj(ill-5, you-1)
aux(ill-5, have-2)
cop(ill-5, been-3)
advmod(ill-5, so-4)
root(ROOT-0, ill-5)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD sobbed))
    (. .)))

nsubj(sobbed-2, she-1)
root(ROOT-0, sobbed-2)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (NN mother))
    (VP (VBZ dear))
    (. .)))

discourse(dear-5, No-2)
nsubj(dear-5, mother-4)
root(ROOT-0, dear-5)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (ADVP (RB only))
        (VP (VBN been)
          (PP (IN at)
            (NP
              (NP (DT the) (NN back))
              (PP (IN of)
                (NP (DT the) (NN north) (NN wind))))))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Diamond))
    (. .)))

nsubj(been-4, I-1)
aux(been-4, 've-2)
advmod(been-4, only-3)
ccomp(returned-14, been-4)
det(back-7, the-6)
prep_at(been-4, back-7)
det(wind-11, the-9)
nn(wind-11, north-10)
prep_of(back-7, wind-11)
root(ROOT-0, returned-14)
nsubj(returned-14, Diamond-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD were)
              (ADJP (JJ dead)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN mother))
    (. .)))

nsubj(thought-3, I-2)
ccomp(said-9, thought-3)
nsubj(dead-6, you-4)
cop(dead-6, were-5)
ccomp(thought-3, dead-6)
root(ROOT-0, said-9)
poss(mother-11, his-10)
nsubj(said-9, mother-11)

(ROOT
  (S (CC But)
    (NP
      (NP (DT that) (NN moment))
      (NP (DT the) (NN doctor)))
    (VP (VBD came)
      (PRT (RP in)))
    (. .)))

cc(came-6, But-1)
det(moment-3, that-2)
nsubj(came-6, moment-3)
det(doctor-5, the-4)
dep(moment-3, doctor-5)
root(ROOT-0, came-6)
prt(came-6, in-7)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (ADVP (RB there) (. !) ('' '')))

root(ROOT-0, there-1)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (DT the) (NN doctor))
        (PP (IN with)
          (NP (JJ gentle) (NNS cheerfulness)))))
    (: ;) (`` ``)
    (S
      (NP (PRP we))
      (VP (VBP 're)
        (ADJP
          (ADJP (RBR better) (JJ to-day))
          (, ,)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP see)))))))
    (. .) ('' '')))

root(ROOT-0, said-1)
det(doctor-3, the-2)
dobj(said-1, doctor-3)
amod(cheerfulness-6, gentle-5)
prep_with(said-1, cheerfulness-6)
nsubj(to-day-12, we-9)
cop(to-day-12, 're-10)
advmod(to-day-12, better-11)
parataxis(said-1, to-day-12)
nsubj(see-15, I-14)
ccomp(to-day-12, see-15)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD drew)
        (NP (DT the) (NN mother))
        (ADVP (RB aside)))
      (, ,)
      (CC and)
      (VP (VBD told)
        (NP (PRP her))
        (S (RB not)
          (VP
            (VP (TO to)
              (VP (VB talk)
                (PP (TO to)
                  (NP (NNP Diamond)))))
            (, ,)
            (CC or)
            (VP (TO to)
              (VP (VB mind)
                (SBAR
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP he))
                      (VP (MD might)
                        (VP (VB say)))))
                  (: ;)
                  (SBAR (IN for)
                    (S
                      (NP (PRP he))
                      (VP (MD must)
                        (VP (VB be)
                          (VP (VBN kept)
                            (ADJP (RB as) (JJ quiet)
                              (PP (IN as)
                                (ADJP (JJ possible))))))))))))))))
    (. .)))

advmod(drew-3, Then-1)
nsubj(drew-3, he-2)
nsubj(told-9, he-2)
root(ROOT-0, drew-3)
det(mother-5, the-4)
dobj(drew-3, mother-5)
advmod(drew-3, aside-6)
conj_and(drew-3, told-9)
dobj(told-9, her-10)
neg(talk-13, not-11)
aux(talk-13, to-12)
dep(told-9, talk-13)
prep_to(talk-13, Diamond-15)
aux(mind-19, to-18)
dep(told-9, mind-19)
conj_or(talk-13, mind-19)
dobj(say-23, what-20)
nsubj(say-23, he-21)
aux(say-23, might-22)
advcl(mind-19, say-23)
mark(kept-29, for-25)
nsubjpass(kept-29, he-26)
aux(kept-29, must-27)
auxpass(kept-29, be-28)
dep(say-23, kept-29)
advmod(quiet-31, as-30)
acomp(kept-29, quiet-31)
prep_as(quiet-31, possible-33)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB indeed))
      (NP (NNP Diamond))
      (VP (VBD was) (RB not)
        (ADJP (RB much) (VBN inclined)
          (S
            (VP (TO to)
              (VP (VB talk) (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP he))
                    (VP (VBD felt)
                      (ADJP (RB very) (JJ strange)
                        (CC and)
                        (JJ weak)))))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD was)
                      (NP (JJ little) (NN wonder))
                      (, ,)
                      (S
                        (VP (VBG seeing)
                          (SBAR (IN that)
                            (S
                              (NP (PDT all) (DT the) (NN time))
                              (NP (PRP he))
                              (VP (VBD had)
                                (VP (VBN been)
                                  (ADVP (RB away)
                                    (SBAR
                                      (S
                                        (NP (PRP he))
                                        (VP (VBD had)
                                          (ADVP (RB only))
                                          (VP (VBN sucked)
                                            (NP
                                              (NP (DT a) (JJ few) (NN lumps))
                                              (PP (IN of)
                                                (NP (NN ice))))))))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (MD could) (RB not)
        (VP (VB be)
          (ADJP (RB much) (JJ nourishment)
            (PP (IN in)
              (NP (PRP them)))))))
    (. .)))

advmod(inclined-7, indeed-2)
nsubjpass(inclined-7, Diamond-3)
nsubj(talk-9, Diamond-3)
nsubj(nourishment-49, Diamond-3)
auxpass(inclined-7, was-4)
neg(inclined-7, not-5)
advmod(inclined-7, much-6)
root(ROOT-0, inclined-7)
aux(talk-9, to-8)
xcomp(inclined-7, talk-9)
mark(felt-13, for-11)
nsubj(felt-13, he-12)
advcl(talk-9, felt-13)
advmod(strange-15, very-14)
acomp(felt-13, strange-15)
acomp(felt-13, weak-17)
conj_and(strange-15, weak-17)
nsubj(wonder-22, which-19)
cop(wonder-22, was-20)
amod(wonder-22, little-21)
ccomp(talk-9, wonder-22)
vmod(wonder-22, seeing-24)
mark(been-31, that-25)
predet(time-28, all-26)
det(time-28, the-27)
nsubj(been-31, time-28)
nsubj(been-31, he-29)
aux(been-31, had-30)
ccomp(seeing-24, been-31)
advmod(been-31, away-32)
nsubj(sucked-36, he-33)
aux(sucked-36, had-34)
advmod(sucked-36, only-35)
dep(away-32, sucked-36)
det(lumps-39, a-37)
amod(lumps-39, few-38)
dobj(sucked-36, lumps-39)
prep_of(lumps-39, ice-41)
expl(nourishment-49, there-44)
aux(nourishment-49, could-45)
neg(nourishment-49, not-46)
cop(nourishment-49, be-47)
advmod(nourishment-49, much-48)
conj_and(inclined-7, nourishment-49)
prep_in(nourishment-49, them-51)

(ROOT
  (S
    (SBAR (RB Now) (IN while)
      (S
        (NP (PRP he))
        (VP (VBZ is)
          (VP (VBG lying)
            (ADVP (RB there))
            (, ,)
            (S
              (VP (VBG getting)
                (ADJP (JJ strong))
                (ADVP (RB again))
                (PP (IN with)
                  (NP
                    (NP (NN chicken) (NN broth))
                    (CC and)
                    (NP (JJ other) (JJ nice) (NNS things))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB tell)
        (NP
          (NP (PRP$ my) (NNS readers))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD had)
                (VP (VBN been)
                  (VP (VBG taking)
                    (NP (NN place))
                    (PP (IN at)
                      (NP (PRP$ his) (NN home)))
                    (, ,)
                    (SBAR (IN for)
                      (S
                        (NP (PRP they))
                        (VP (MD ought)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (VP (VBN told)
                                  (NP (PRP it)))))))))))))))))
    (. .)))

advmod(lying-5, Now-1)
mark(lying-5, while-2)
nsubj(lying-5, he-3)
aux(lying-5, is-4)
advcl(tell-21, lying-5)
advmod(lying-5, there-6)
dep(strong-9, getting-8)
vmod(lying-5, strong-9)
advmod(strong-9, again-10)
nn(broth-13, chicken-12)
prep_with(strong-9, broth-13)
amod(things-17, other-15)
amod(things-17, nice-16)
prep_with(strong-9, things-17)
conj_and(broth-13, things-17)
nsubj(tell-21, I-19)
aux(tell-21, will-20)
root(ROOT-0, tell-21)
poss(readers-23, my-22)
dobj(tell-21, readers-23)
nsubj(taking-27, readers-23)
aux(taking-27, had-25)
aux(taking-27, been-26)
rcmod(readers-23, taking-27)
dobj(taking-27, place-28)
poss(home-31, his-30)
prep_at(taking-27, home-31)
mark(ought-35, for-33)
nsubj(ought-35, they-34)
nsubjpass(told-38, they-34)
advcl(taking-27, ought-35)
aux(told-38, to-36)
auxpass(told-38, be-37)
xcomp(ought-35, told-38)
dobj(told-38, it-39)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD may)
      (VP (VB have)
        (VP (VBN forgotten)
          (SBAR (IN that)
            (S
              (NP (NNP Miss) (NNP Coleman))
              (VP (VBD was)
                (PP (IN in)
                  (NP
                    (NP (DT a)
                      (ADJP (RB very) (JJ poor))
                      (NN state))
                    (PP (IN of)
                      (NP (NN health)))))))))))
    (. .)))

nsubj(forgotten-4, They-1)
aux(forgotten-4, may-2)
aux(forgotten-4, have-3)
root(ROOT-0, forgotten-4)
mark(was-8, that-5)
nn(Coleman-7, Miss-6)
nsubj(was-8, Coleman-7)
ccomp(forgotten-4, was-8)
det(state-13, a-10)
advmod(poor-12, very-11)
amod(state-13, poor-12)
prep_in(was-8, state-13)
prep_of(state-13, health-15)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (EX there))
    (VP (VBD were)
      (NP
        (NP (CD three) (NNS reasons))
        (PP (IN for)
          (NP (DT this)))))
    (. .)))

advmod(were-3, Now-1)
expl(were-3, there-2)
root(ROOT-0, were-3)
num(reasons-5, three-4)
nsubj(were-3, reasons-5)
prep_for(reasons-5, this-7)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ first) (NN place)))
    (, ,)
    (NP (PRP$ her) (NNS lungs))
    (VP (VBD were) (RB not)
      (ADJP (JJ strong)))
    (. .)))

det(place-4, the-2)
amod(place-4, first-3)
prep_in(strong-10, place-4)
poss(lungs-7, her-6)
nsubj(strong-10, lungs-7)
cop(strong-10, were-8)
neg(strong-10, not-9)
root(ROOT-0, strong-10)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ second) (NN place)))
    (, ,)
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN gentleman) (RB somewhere))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD had) (RB not)
              (VP (VBN behaved)
                (ADVP (RB very) (RB well))
                (PP (TO to)
                  (NP (PRP her)))))))))
    (. .)))

det(place-4, the-2)
amod(place-4, second-3)
prep_in(was-7, place-4)
expl(was-7, there-6)
root(ROOT-0, was-7)
det(gentleman-9, a-8)
nsubj(was-7, gentleman-9)
nsubj(behaved-14, gentleman-9)
advmod(gentleman-9, somewhere-10)
aux(behaved-14, had-12)
neg(behaved-14, not-13)
rcmod(gentleman-9, behaved-14)
advmod(well-16, very-15)
advmod(behaved-14, well-16)
prep_to(behaved-14, her-18)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ third) (NN place)))
    (, ,)
    (NP (PRP she))
    (VP (VBD had)
      (S
        (NP (RB not) (NN anything))
        (ADJP (JJ particular)
          (S
            (VP (TO to)
              (VP (VB do)))))))
    (. .)))

det(place-4, the-2)
amod(place-4, third-3)
prep_in(had-7, place-4)
nsubj(had-7, she-6)
root(ROOT-0, had-7)
neg(anything-9, not-8)
nsubj(particular-10, anything-9)
nsubj(do-12, anything-9)
xcomp(had-7, particular-10)
aux(do-12, to-11)
xcomp(particular-10, do-12)

(ROOT
  (S
    (NP (DT These) (CD three) (NNS nots))
    (ADVP (RB together))
    (VP (VBP are)
      (ADJP (JJ enough)
        (S
          (VP (TO to)
            (VP (VB make)
              (S
                (NP (DT a) (NN lady))
                (ADJP (RB very) (JJ ill))
                (ADVP (RB indeed))))))))
    (. .)))

det(nots-3, These-1)
num(nots-3, three-2)
nsubj(enough-6, nots-3)
nsubj(make-8, nots-3)
advmod(enough-6, together-4)
cop(enough-6, are-5)
root(ROOT-0, enough-6)
aux(make-8, to-7)
xcomp(enough-6, make-8)
det(lady-10, a-9)
nsubj(ill-12, lady-10)
advmod(ill-12, very-11)
xcomp(make-8, ill-12)
advmod(ill-12, indeed-13)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP (NN course)))
      (NP (PRP she))
      (VP (MD could) (RB not)
        (VP (VB help)
          (NP (DT the) (JJ first) (NN cause)))))
    (: ;)
    (S (CC but)
      (SBAR (IN if)
        (S
          (NP (DT the) (JJ other) (CD two) (NNS causes))
          (VP (VBD had) (RB not)
            (VP (VBN existed)))))
      (, ,)
      (NP (DT that))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (PP (IN of)
              (NP (JJ little) (NN consequence)))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (MD would)
        (ADVP (RB only))
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP
                  (NP (DT a) (RB little))
                  (JJ careful))))))))
    (. .)))

prep_of(help-6, course-2)
nsubj(help-6, she-3)
aux(help-6, could-4)
neg(help-6, not-5)
root(ROOT-0, help-6)
det(cause-9, the-7)
amod(cause-9, first-8)
dobj(help-6, cause-9)
cc(been-24, but-11)
mark(existed-19, if-12)
det(causes-16, the-13)
amod(causes-16, other-14)
num(causes-16, two-15)
nsubj(existed-19, causes-16)
aux(existed-19, had-17)
neg(existed-19, not-18)
advcl(been-24, existed-19)
nsubj(been-24, that-21)
aux(been-24, would-22)
aux(been-24, have-23)
parataxis(help-6, been-24)
amod(consequence-27, little-26)
prep_of(been-24, consequence-27)
nsubj(have-32, she-29)
nsubj(careful-37, she-29)
aux(have-32, would-30)
advmod(have-32, only-31)
parataxis(help-6, have-32)
aux(careful-37, to-33)
cop(careful-37, be-34)
det(little-36, a-35)
npadvmod(careful-37, little-36)
xcomp(have-32, careful-37)

(ROOT
  (S
    (S
      (NP (DT The) (NN second))
      (NP (PRP she))
      (VP (MD could) (RB not)
        (VP (VB help)
          (ADVP (RB quite)))))
    (: ;)
    (S (CC but)
      (SBAR (IN if)
        (S
          (NP (PRP she))
          (VP
            (VP (VBD had)
              (VP (VBN had)
                (NP (NN anything))
                (S
                  (VP (TO to)
                    (VP (VB do))))))
            (, ,)
            (CC and)
            (VP (VBD had)
              (VP (VBN done)
                (S
                  (NP (PRP it))
                  (ADVP (RB well))))))))
      (, ,)
      (NP (PRP it))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (ADJP (RB very) (JJ difficult)
              (PP (IN for)
                (NP (DT any) (NN man)
                  (S
                    (VP (TO to)
                      (VP (VB behave)
                        (ADVP (RB badly))
                        (PP (TO to)
                          (NP (PRP her)))))))))))))
    (. .)))

det(second-2, The-1)
nsubj(help-6, second-2)
nsubj(help-6, she-3)
aux(help-6, could-4)
neg(help-6, not-5)
root(ROOT-0, help-6)
advmod(help-6, quite-7)
cc(difficult-29, but-9)
mark(had-13, if-10)
nsubj(had-13, she-11)
nsubj(done-20, she-11)
aux(had-13, had-12)
advcl(difficult-29, had-13)
dobj(had-13, anything-14)
aux(do-16, to-15)
vmod(had-13, do-16)
aux(done-20, had-19)
conj_and(had-13, done-20)
advcl(difficult-29, done-20)
dep(done-20, it-21)
advmod(it-21, well-22)
nsubj(difficult-29, it-24)
aux(difficult-29, would-25)
aux(difficult-29, have-26)
cop(difficult-29, been-27)
advmod(difficult-29, very-28)
parataxis(help-6, difficult-29)
det(man-32, any-31)
prep_for(difficult-29, man-32)
aux(behave-34, to-33)
vmod(man-32, behave-34)
advmod(behave-34, badly-35)
prep_to(behave-34, her-37)

(ROOT
  (S (CC And)
    (PP (IN for)
      (NP
        (NP (DT this) (JJ third) (NN cause))
        (PP (IN of)
          (NP (PRP$ her) (NN illness)))))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP she))
        (VP (VBD had)
          (VP (VBN had)
            (NP (NN anything))
            (S
              (VP (TO to)
                (VP (VB do)
                  (SBAR (IN that)
                    (S
                      (VP (VBD was)
                        (ADJP (JJ worth)
                          (S
                            (VP (VBG doing))))))))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD might)
      (VP (VB have)
        (VP (VBN borne)
          (NP (PRP$ his) (JJ bad) (NN behaviour))
          (SBAR (RB so) (IN that)
            (S
              (NP (RB even) (WDT that))
              (VP (MD would) (RB not)
                (VP (VB have)
                  (VP (VBN made)
                    (S
                      (NP (PRP her))
                      (ADJP (RB ill)))))))))))
    (. .)))

cc(borne-25, And-1)
det(cause-5, this-3)
amod(cause-5, third-4)
prep_for(borne-25, cause-5)
poss(illness-8, her-7)
prep_of(cause-5, illness-8)
mark(had-13, if-10)
nsubj(had-13, she-11)
aux(had-13, had-12)
advcl(borne-25, had-13)
dobj(had-13, anything-14)
aux(do-16, to-15)
vmod(had-13, do-16)
mark(worth-19, that-17)
cop(worth-19, was-18)
ccomp(do-16, worth-19)
dep(worth-19, doing-20)
nsubj(borne-25, she-22)
aux(borne-25, might-23)
aux(borne-25, have-24)
root(ROOT-0, borne-25)
poss(behaviour-28, his-26)
amod(behaviour-28, bad-27)
dobj(borne-25, behaviour-28)
advmod(made-36, so-29)
mark(made-36, that-30)
advmod(that-32, even-31)
nsubj(made-36, that-32)
aux(made-36, would-33)
neg(made-36, not-34)
aux(made-36, have-35)
advcl(borne-25, made-36)
nsubj(ill-38, her-37)
xcomp(made-36, ill-38)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is) (RB not)
        (ADVP (RB always))
        (ADJP (JJ easy)
          (PRN (, ,)
            (S
              (NP (PRP I))
              (VP (VBZ confess)))
            (, ,))
          (S
            (VP (TO to)
              (VP (VB find)
                (NP (NN something))
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (SBAR (IN that)
                        (S
                          (VP (VBZ is)
                            (ADJP (JJ worth))
                            (S
                              (VP (VBG doing)))))))))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (DT the)
          (ADJP (RBS most) (JJ difficult))
          (NNS things))
        (VP (VBP are)
          (ADVP (RB constantly))
          (VP (VBG being)
            (VP (VBN done)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (MD might)
          (VP (VB have)
            (VP (VBN found)
              (NP (NN something))
              (SBAR (IN if)
                (S
                  (NP (PRP she))
                  (VP (VBD had)
                    (VP (VBN tried))))))))))
    (. .)))

nsubj(easy-5, It-1)
nsubj(find-11, It-1)
cop(easy-5, is-2)
neg(easy-5, not-3)
advmod(easy-5, always-4)
root(ROOT-0, easy-5)
nsubj(confess-8, I-7)
dep(easy-5, confess-8)
aux(find-11, to-10)
xcomp(easy-5, find-11)
dobj(find-11, something-12)
aux(do-14, to-13)
vmod(find-11, do-14)
mark(worth-17, that-15)
cop(worth-17, is-16)
ccomp(do-14, worth-17)
xcomp(worth-17, doing-18)
det(things-24, the-21)
advmod(difficult-23, most-22)
amod(things-24, difficult-23)
nsubjpass(done-28, things-24)
aux(done-28, are-25)
advmod(done-28, constantly-26)
auxpass(done-28, being-27)
conj_but(easy-5, done-28)
nsubj(found-34, she-31)
aux(found-34, might-32)
aux(found-34, have-33)
conj_but(easy-5, found-34)
conj_and(done-28, found-34)
dobj(found-34, something-35)
mark(tried-39, if-36)
nsubj(tried-39, she-37)
aux(tried-39, had-38)
advcl(found-34, tried-39)

(ROOT
  (S
    (NP (PRP$ Her) (NN fault))
    (VP (VBD lay)
      (PP (IN in)
        (NP (DT this)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (VBD had) (RB not)
            (VP (VBN tried))))))
    (. .)))

poss(fault-2, Her-1)
nsubj(lay-3, fault-2)
root(ROOT-0, lay-3)
prep_in(lay-3, this-5)
mark(tried-11, that-7)
nsubj(tried-11, she-8)
aux(tried-11, had-9)
neg(tried-11, not-10)
ccomp(lay-3, tried-11)

(ROOT
  (S (CC But)
    (, ,)
    (S
      (VP (TO to)
        (VP (VB be)
          (ADJP (JJ sure)))))
    (, ,)
    (NP (PRP$ her) (NN father)
      (CC and)
      (NN mother))
    (VP (VBD were)
      (S
        (VP (TO to)
          (VP (VB blame)
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (VBD had)
                  (ADVP (RB never))
                  (VP (VBN set)
                    (NP (PRP$ her) (NN going))))))))))
    (. .)))

cc(were-11, But-1)
aux(sure-5, to-3)
cop(sure-5, be-4)
advcl(were-11, sure-5)
poss(father-8, her-7)
nsubj(were-11, father-8)
nsubj(blame-13, father-8)
conj_and(father-8, mother-10)
nsubj(were-11, mother-10)
nsubj(blame-13, mother-10)
root(ROOT-0, were-11)
aux(blame-13, to-12)
xcomp(were-11, blame-13)
mark(set-18, that-14)
nsubj(set-18, they-15)
aux(set-18, had-16)
neg(set-18, never-17)
ccomp(blame-13, set-18)
poss(going-20, her-19)
dobj(set-18, going-20)

(ROOT
  (S
    (ADVP
      (NP (RB Only) (RB then))
      (RB again))
    (, ,)
    (NP (NN nobody))
    (VP (VBD had)
      (VP (VBN told)
        (NP (PRP$ her) (NN father)
          (CC and)
          (NN mother))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP (VB set)
                    (S
                      (NP (PRP her))
                      (VP (VBG going)
                        (PP (IN in)
                          (NP (DT that) (NN direction)))))))))))))
    (. .)))

advmod(then-2, Only-1)
npadvmod(again-3, then-2)
advmod(told-7, again-3)
nsubj(told-7, nobody-5)
aux(told-7, had-6)
root(ROOT-0, told-7)
poss(father-9, her-8)
dobj(told-7, father-9)
dobj(told-7, mother-11)
conj_and(father-9, mother-11)
mark(ought-14, that-12)
nsubj(ought-14, they-13)
nsubj(set-16, they-13)
ccomp(told-7, ought-14)
aux(set-16, to-15)
xcomp(ought-14, set-16)
nsubj(going-18, her-17)
dep(set-16, going-18)
det(direction-21, that-20)
prep_in(going-18, direction-21)

(ROOT
  (S (IN So)
    (SBAR (IN as)
      (S
        (NP
          (NP (NN none))
          (PP (IN of)
            (NP (PRP them))))
        (VP (MD would)
          (VP (VB find)
            (NP (PRP it))
            (PRT (RP out))
            (PP (IN of)
              (NP (PRP themselves)))))))
    (, ,)
    (NP (NNP North) (NNP Wind))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB teach)
            (NP (PRP them))))))
    (. .)))

dep(had-15, So-1)
mark(find-7, as-2)
nsubj(find-7, none-3)
prep_of(none-3, them-5)
aux(find-7, would-6)
advcl(had-15, find-7)
dobj(find-7, it-8)
prep_out_of(find-7, themselves-11)
nn(Wind-14, North-13)
nsubj(had-15, Wind-14)
nsubj(teach-17, Wind-14)
root(ROOT-0, had-15)
aux(teach-17, to-16)
xcomp(had-15, teach-17)
dobj(teach-17, them-18)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP (NNP North) (NNP Wind))
          (VP (VBD was)
            (ADJP (RB very) (JJ busy))
            (NP (DT that) (NN night))
            (PP (IN on)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP she))
                  (VP (VBD left)
                    (NP
                      (NP (NNP Diamond))
                      (PP (IN in)
                        (NP (DT the) (NN cathedral))))))))))))
    (. .)))

nsubj(know-2, We-1)
root(ROOT-0, know-2)
mark(busy-8, that-3)
nn(Wind-5, North-4)
nsubj(busy-8, Wind-5)
cop(busy-8, was-6)
advmod(busy-8, very-7)
ccomp(know-2, busy-8)
det(night-10, that-9)
tmod(busy-8, night-10)
dobj(left-14, which-12)
nsubj(left-14, she-13)
prepc_on(busy-8, left-14)
dobj(left-14, Diamond-15)
det(cathedral-18, the-17)
prep_in(Diamond-15, cathedral-18)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (PP (IN in)
        (NP (DT a) (NN sense)))
      (VP (VBN been)
        (VP (VBG blowing)
          (PP (IN through)
            (CC and)
            (IN through)
            (NP
              (NP (DT the) (NNPS Colemans) (POS '))
              (NN house)))
          (NP
            (NP (DT the) (NN whole))
            (PP (IN of)
              (NP (DT the) (NN night)))))))
    (. .)))

nsubj(blowing-7, She-1)
aux(blowing-7, had-2)
det(sense-5, a-4)
prep_in(blowing-7, sense-5)
aux(blowing-7, been-6)
root(ROOT-0, blowing-7)
det(Colemans-12, the-11)
poss(house-14, Colemans-12)
prep_through(blowing-7, house-14)
det(whole-16, the-15)
dobj(blowing-7, whole-16)
det(night-19, the-18)
prep_of(whole-16, night-19)

(ROOT
  (S
    (ADVP (RB First))
    (, ,)
    (S
      (NP
        (NP (NNP Miss) (NNP Coleman) (POS 's))
        (NN maid))
      (VP (VBD had)
        (VP (VBN left)
          (NP
            (NP (DT a) (NN chink))
            (PP (IN of)
              (NP
                (NP (PRP$ her) (NN mistress) (POS 's))
                (NN window) (NN open))))
          (, ,)
          (S
            (VP (VBG thinking)
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (VBD had)
                    (VP (VBN shut)
                      (NP (PRP it)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP North) (NNP Wind))
      (VP (VBD had)
        (VP (VBD wound)
          (SBAR
            (S
              (NP
                (NP (DT a) (JJ few))
                (PP (IN of)
                  (NP (PRP$ her) (NNS hairs))))
              (VP (VBP round)
                (NP
                  (NP (DT the) (NN lady) (POS 's))
                  (NN throat))))))))
    (. .)))

advmod(left-8, First-1)
nn(Coleman-4, Miss-3)
poss(maid-6, Coleman-4)
nsubj(left-8, maid-6)
aux(left-8, had-7)
root(ROOT-0, left-8)
det(chink-10, a-9)
dobj(left-8, chink-10)
poss(mistress-13, her-12)
poss(open-16, mistress-13)
nn(open-16, window-15)
prep_of(chink-10, open-16)
vmod(left-8, thinking-18)
nsubj(shut-21, she-19)
aux(shut-21, had-20)
ccomp(thinking-18, shut-21)
dobj(shut-21, it-22)
nn(Wind-26, North-25)
nsubj(wound-28, Wind-26)
aux(wound-28, had-27)
conj_and(left-8, wound-28)
det(few-30, a-29)
nsubj(round-34, few-30)
poss(hairs-33, her-32)
prep_of(few-30, hairs-33)
ccomp(wound-28, round-34)
det(lady-36, the-35)
poss(throat-38, lady-36)
dobj(round-34, throat-38)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADJP (RB considerably) (JJR worse))
      (NP (DT the) (JJ next) (NN morning)))
    (. .)))

nsubj(worse-4, She-1)
cop(worse-4, was-2)
advmod(worse-4, considerably-3)
root(ROOT-0, worse-4)
det(morning-7, the-5)
amod(morning-7, next-6)
tmod(worse-4, morning-7)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP
      (NP (DT the) (NN ship))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (NNP North) (NNP Wind))
          (VP (VBD had)
            (VP (VBN sunk)
              (NP (DT that) (JJ very) (NN night)))))))
    (VP (VBD belonged)
      (PP (TO to)
        (NP (NNP Mr.) (NNP Coleman))))
    (. .)))

advmod(belonged-13, Again-1)
det(ship-4, the-3)
dobj(sunk-9, ship-4)
nsubj(belonged-13, ship-4)
nn(Wind-7, North-6)
nsubj(sunk-9, Wind-7)
aux(sunk-9, had-8)
rcmod(ship-4, sunk-9)
det(night-12, that-10)
amod(night-12, very-11)
tmod(sunk-9, night-12)
root(ROOT-0, belonged-13)
nn(Coleman-16, Mr.-15)
prep_to(belonged-13, Coleman-16)

(ROOT
  (SINV (CC Nor)
    (MD will)
    (NP (PRP$ my) (NNS readers))
    (VP (VB understand)
      (SBAR
        (WHNP (WP what))
        (S
          (NP
            (NP (DT a) (JJ heavy) (NN loss))
            (NP (DT this)))
          (VP (VBD was)
            (PP (TO to)
              (NP (PRP him)))
            (SBAR (IN until)
              (S
                (NP (PRP I))
                (VP (VBP have)
                  (VP (VBN informed)
                    (NP (PRP them))
                    (SBAR (IN that)
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN been)
                            (VP (VBG getting)
                              (NP
                                (NP (JJR poorer)
                                  (CC and)
                                  (JJR poorer))
                                (PP (IN for)
                                  (NP (DT some) (NN time)))))))))))))))))
    (. .)))

cc(understand-5, Nor-1)
aux(understand-5, will-2)
poss(readers-4, my-3)
nsubj(understand-5, readers-4)
root(ROOT-0, understand-5)
dobj(was-11, what-6)
det(loss-9, a-7)
amod(loss-9, heavy-8)
nsubj(was-11, loss-9)
dep(loss-9, this-10)
ccomp(understand-5, was-11)
prep_to(was-11, him-13)
mark(informed-17, until-14)
nsubj(informed-17, I-15)
aux(informed-17, have-16)
advcl(was-11, informed-17)
dobj(informed-17, them-18)
mark(getting-23, that-19)
nsubj(getting-23, he-20)
aux(getting-23, had-21)
aux(getting-23, been-22)
ccomp(informed-17, getting-23)
dobj(getting-23, poorer-24)
dobj(getting-23, poorer-26)
conj_and(poorer-24, poorer-26)
det(time-29, some-28)
prep_for(poorer-24, time-29)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was) (RB not)
        (ADJP (RB so) (JJ successful)
          (PP (IN in)
            (NP (PRP$ his) (NNS speculations))))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN been)))))))
    (, ,)
    (S
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD speculated)
            (NP (DT a) (JJ great) (NN deal))
            (ADVP (RBR more) (IN than)))))
      (VP (VBD was)
        (ADJP (JJ right))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (NN time))
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD should)
                (VP (VB be)
                  (VP (VBN pulled)
                    (PRT (RP up))))))))))
    (. .)))

nsubj(successful-5, He-1)
cop(successful-5, was-2)
neg(successful-5, not-3)
advmod(successful-5, so-4)
root(ROOT-0, successful-5)
poss(speculations-8, his-7)
prep_in(successful-5, speculations-8)
mark(been-12, as-9)
nsubj(been-12, he-10)
aux(been-12, had-11)
advcl(successful-5, been-12)
mark(speculated-16, for-14)
nsubj(speculated-16, he-15)
csubj(right-23, speculated-16)
det(deal-19, a-17)
amod(deal-19, great-18)
dobj(speculated-16, deal-19)
advmod(than-21, more-20)
advmod(speculated-16, than-21)
cop(right-23, was-22)
ccomp(successful-5, right-23)
conj_and(successful-5, right-23)
nsubj(time-28, it-26)
cop(time-28, was-27)
conj_and(successful-5, time-28)
nsubjpass(pulled-32, he-29)
aux(pulled-32, should-30)
auxpass(pulled-32, be-31)
rcmod(time-28, pulled-32)
prt(pulled-32, up-33)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBZ is)
          (NP
            (NP (DT a) (JJ hard) (NN thing))
            (PP (IN for)
              (NP (DT a) (JJ rich) (NN man)
                (S
                  (VP (TO to)
                    (VP (VB grow)
                      (ADJP (JJ poor))))))))))
      (: ;)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP
            (NP (DT an) (JJ awful) (NN thing))
            (PP (IN for)
              (NP (PRP him)))
            (S
              (VP (TO to)
                (VP (VB grow)
                  (NP (NN dishonest)))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT some) (NNS kinds))
        (PP (IN of)
          (NP (NN speculation))))
      (VP (VBP lead)
        (S
          (NP (DT a) (NN man))
          (ADJP (JJ deep)
            (PP (IN into)
              (NP (NN dishonesty))))
          (SBAR (IN before)
            (S
              (NP (PRP he))
              (VP (VBZ thinks)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP he))
                    (VP (VBZ is)
                      (ADJP (IN about)))))))))))
    (. .)))

nsubj(thing-5, It-1)
cop(thing-5, is-2)
det(thing-5, a-3)
amod(thing-5, hard-4)
root(ROOT-0, thing-5)
det(man-9, a-7)
amod(man-9, rich-8)
prep_for(thing-5, man-9)
aux(grow-11, to-10)
vmod(man-9, grow-11)
acomp(grow-11, poor-12)
nsubj(thing-19, it-15)
cop(thing-19, is-16)
det(thing-19, an-17)
amod(thing-19, awful-18)
conj_but(thing-5, thing-19)
prep_for(thing-19, him-21)
aux(grow-23, to-22)
vmod(thing-19, grow-23)
dobj(grow-23, dishonest-24)
det(kinds-28, some-27)
nsubj(lead-31, kinds-28)
prep_of(kinds-28, speculation-30)
conj_and(thing-5, lead-31)
det(man-33, a-32)
nsubj(thinks-39, man-33)
dep(thinks-39, deep-34)
prep_into(deep-34, dishonesty-36)
mark(thinks-39, before-37)
nsubj(thinks-39, he-38)
xcomp(lead-31, thinks-39)
dobj(about-43, what-40)
nsubj(about-43, he-41)
cop(about-43, is-42)
ccomp(thinks-39, about-43)

(ROOT
  (S
    (S
      (NP (NNP Poverty))
      (VP (MD will) (RB not)
        (VP (VB make)
          (S
            (NP (DT a) (NN man))
            (ADJP (JJ worthless))))))
    (: --)
    (S
      (NP (PRP he))
      (VP (MD may)
        (VP (VB be)
          (ADJP (JJ worth)
            (NP
              (NP (DT a) (JJ great) (NN deal))
              (JJR more)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBZ is)
                (ADJP (JJ poor))
                (SBAR (IN than)
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP he))
                          (VP (VBD was)
                            (ADJP (JJ rich))))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (NN dishonesty))
      (VP (VBZ goes)
        (ADVP (RB very) (RB far))
        (ADVP (RB indeed))
        (S
          (VP (TO to)
            (VP (VB make)
              (NP
                (NP
                  (NP (DT a) (NN man))
                  (PP (IN of)
                    (NP (DT no) (NN value))))
                (: --)
                (NP (DT a) (NN thing)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN thrown)
                          (PRT (RP out))
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NN dust-hole))
                              (PP (IN of)
                                (NP (DT the) (NN creation)))))
                          (, ,)
                          (PP (IN like)
                            (NP
                              (NP (DT a) (NN bit))
                              (PP (IN of)
                                (NP (DT a) (VBN broken) (NN basin))))))))))
                (, ,)
                (CC or)
                (NP (DT a) (JJ dirty) (NN rag))))))))
    (. .)))

nsubj(make-4, Poverty-1)
aux(make-4, will-2)
neg(make-4, not-3)
root(ROOT-0, make-4)
det(man-6, a-5)
nsubj(worthless-7, man-6)
xcomp(make-4, worthless-7)
nsubj(worth-12, he-9)
aux(worth-12, may-10)
cop(worth-12, be-11)
conj_but(make-4, worth-12)
det(deal-15, a-13)
amod(deal-15, great-14)
dep(more-16, deal-15)
dep(worth-12, more-16)
advmod(poor-20, when-17)
nsubj(poor-20, he-18)
cop(poor-20, is-19)
advcl(worth-12, poor-20)
mark(was-23, than-21)
nsubj(was-23, he-22)
advcl(poor-20, was-23)
advmod(rich-27, when-24)
nsubj(rich-27, he-25)
cop(rich-27, was-26)
advcl(was-23, rich-27)
nsubj(goes-31, dishonesty-30)
nsubj(make-36, dishonesty-30)
conj_but(make-4, goes-31)
advmod(far-33, very-32)
advmod(goes-31, far-33)
advmod(goes-31, indeed-34)
aux(make-36, to-35)
xcomp(goes-31, make-36)
det(man-38, a-37)
dobj(make-36, man-38)
neg(value-41, no-40)
prep_of(man-38, value-41)
det(thing-44, a-43)
dobj(make-36, thing-44)
conj_or(man-38, thing-44)
aux(thrown-47, to-45)
auxpass(thrown-47, be-46)
vmod(thing-44, thrown-47)
prt(thrown-47, out-48)
det(dust-hole-51, the-50)
prep_in(thrown-47, dust-hole-51)
det(creation-54, the-53)
prep_of(dust-hole-51, creation-54)
det(bit-58, a-57)
prep_like(thrown-47, bit-58)
det(basin-62, a-60)
amod(basin-62, broken-61)
prep_of(bit-58, basin-62)
det(rag-67, a-65)
amod(rag-67, dirty-66)
dobj(make-36, rag-67)
conj_or(man-38, rag-67)

(ROOT
  (S (IN So)
    (NP (NNP North) (NNP Wind))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP
            (VP (VB look)
              (PP (IN after)
                (NP (NNP Mr.) (NNP Coleman))))
            (, ,)
            (CC and)
            (VP (VB try)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP
                      (NP (DT an) (JJ honest) (NN man))
                      (PP (IN of)
                        (NP (PRP him))))))))))))
    (. .)))

dep(had-4, So-1)
nn(Wind-3, North-2)
nsubj(had-4, Wind-3)
nsubj(look-6, Wind-3)
nsubj(try-12, Wind-3)
nsubj(make-14, Wind-3)
root(ROOT-0, had-4)
aux(look-6, to-5)
xcomp(had-4, look-6)
nn(Coleman-9, Mr.-8)
prep_after(look-6, Coleman-9)
xcomp(had-4, try-12)
conj_and(look-6, try-12)
aux(make-14, to-13)
xcomp(try-12, make-14)
det(man-17, an-15)
amod(man-17, honest-16)
dobj(make-14, man-17)
prep_of(man-17, him-19)

(ROOT
  (S (CC So)
    (S
      (NP (PRP she))
      (VP (VBD sank)
        (NP
          (NP (DT the) (NN ship))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (NP (PRP$ his) (JJ last) (NN venture))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (SBAR
          (WHNP (WP what))
          (S
            (NP
              (NP (PRP himself))
              (CC and)
              (NP
                (NP (PRP$ his) (NN wife))
                (CC and)
                (NP (DT the) (NN world))))
            (VP (VBD called)
              (ADJP (VBN ruined)))))))
    (. .)))

nsubj(sank-3, she-2)
root(ROOT-0, sank-3)
det(ship-5, the-4)
dobj(sank-3, ship-5)
nsubj(venture-10, ship-5)
cop(venture-10, was-7)
poss(venture-10, his-8)
amod(venture-10, last-9)
rcmod(ship-5, venture-10)
nsubj(was-14, he-13)
conj_and(sank-3, was-14)
dobj(called-23, what-15)
nsubj(called-23, himself-16)
poss(wife-19, his-18)
conj_and(himself-16, wife-19)
nsubj(called-23, wife-19)
det(world-22, the-21)
conj_and(himself-16, world-22)
conj_and(wife-19, world-22)
ccomp(was-14, called-23)
acomp(called-23, ruined-24)

(ROOT
  (SINV (CC Nor)
    (VBD was)
    (NP (DT this))
    (NP
      (NP (DT all))
      (NP (RB yet)))
    (. .)))

cc(this-3, Nor-1)
cop(this-3, was-2)
root(ROOT-0, this-3)
dep(this-3, all-4)
dep(all-4, yet-5)

(ROOT
  (S
    (PP (IN For)
      (PP (IN on)
        (NP
          (NP (NN board))
          (SBAR
            (SBAR (IN that)
              (S
                (NP
                  (NP (NN vessel) (NNP Miss) (NNP Coleman) (POS 's))
                  (NN lover))
                (VP (VBD was)
                  (NP (DT a) (NN passenger)))))
            (: ;)
            (CC and)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (DT the) (NN news))
                (VP (VBD came)
                  (SBAR
                    (SBAR (IN that)
                      (S
                        (NP (DT the) (NN vessel))
                        (VP (VBD had)
                          (VP (VBN gone)
                            (PRT (RP down))))))
                    (, ,)
                    (CC and)
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (DT all))
                          (PP (IN on)
                            (NP (NN board))))
                        (VP (VBD had)
                          (VP (VBN perished)))))))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD may)
      (VP (VB be)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD did) (RB not)
                (VP (VB think)
                  (NP
                    (NP
                      (NP (DT the) (NN loss))
                      (PP (IN of)
                        (NP (PRP$ their) (JJ fine) (NN house))))
                    (CC and)
                    (NP
                      (NP (NN garden)
                        (CC and)
                        (NN furniture))
                      (NP (DT the) (JJS greatest) (NN misfortune))))
                  (PP (IN in)
                    (NP (DT the) (NN world))))))))))
    (. .)))

prep(sure-37, For-1)
pcomp(For-1, on-2)
pobj(on-2, board-3)
mark(passenger-12, that-4)
nn(Coleman-7, vessel-5)
nn(Coleman-7, Miss-6)
poss(lover-9, Coleman-7)
nsubj(passenger-12, lover-9)
cop(passenger-12, was-10)
det(passenger-12, a-11)
dep(board-3, passenger-12)
advmod(came-18, when-15)
det(news-17, the-16)
nsubj(came-18, news-17)
dep(board-3, came-18)
conj_and(passenger-12, came-18)
mark(gone-23, that-19)
det(vessel-21, the-20)
nsubj(gone-23, vessel-21)
aux(gone-23, had-22)
ccomp(came-18, gone-23)
prt(gone-23, down-24)
mark(perished-32, that-27)
nsubj(perished-32, all-28)
prep_on(all-28, board-30)
aux(perished-32, had-31)
ccomp(came-18, perished-32)
conj_and(gone-23, perished-32)
nsubj(sure-37, we-34)
aux(sure-37, may-35)
cop(sure-37, be-36)
root(ROOT-0, sure-37)
nsubj(think-41, she-38)
aux(think-41, did-39)
neg(think-41, not-40)
ccomp(sure-37, think-41)
det(loss-43, the-42)
dobj(think-41, loss-43)
poss(house-47, their-45)
amod(house-47, fine-46)
prep_of(loss-43, house-47)
dobj(think-41, garden-49)
conj_and(loss-43, garden-49)
conj_and(loss-43, furniture-51)
conj_and(garden-49, furniture-51)
det(misfortune-54, the-52)
amod(misfortune-54, greatest-53)
dep(garden-49, misfortune-54)
det(world-57, the-56)
prep_in(think-41, world-57)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (NP (DT the) (NN trouble))
    (VP (VBD did) (RB not)
      (VP (VB end)
        (PP (IN with)
          (NP
            (NP (NNP Mr.) (NNP Coleman))
            (CC and)
            (NP (PRP$ his) (NN family))))))
    (. .)))

prep_of(end-8, course-2)
det(trouble-5, the-4)
nsubj(end-8, trouble-5)
aux(end-8, did-6)
neg(end-8, not-7)
root(ROOT-0, end-8)
nn(Coleman-11, Mr.-10)
prep_with(end-8, Coleman-11)
poss(family-14, his-13)
prep_with(end-8, family-14)
conj_and(Coleman-11, family-14)

(ROOT
  (S
    (NP (NN Nobody))
    (VP (MD can)
      (VP (VB suffer)
        (ADVP (RB alone))))
    (. .)))

nsubj(suffer-3, Nobody-1)
aux(suffer-3, can-2)
root(ROOT-0, suffer-3)
advmod(suffer-3, alone-4)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP
          (NP (DT the) (NN cause))
          (PP (IN of)
            (NP (NN suffering))))
        (VP (VBZ is)
          (ADVP (RBS most) (RB deeply))
          (VP (VBN hidden)
            (PP (IN in)
              (NP (DT the) (NN heart)))))))
    (, ,)
    (S
      (S (CC and)
        (S
          (NP (NN nobody))
          (VP (VBZ knows)
            (NP
              (NP (NN anything))
              (PP (IN about)
                (NP (PRP it)))))))
      (CC but)
      (S
        (NP (DT the) (NN man))
        (NP (PRP himself))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (MD must)
        (VP (VB be)
          (NP (DT a) (JJ great)))))
    (CC and)
    (S
      (NP
        (NP (DT a) (JJ good) (NN man))
        (UCP
          (ADVP (RB indeed))
          (, ,)
          (PP (JJ such) (IN as)
            (NP
              (NP (JJ few))
              (PP (IN of)
                (NP (PRP us)))))))
      (VP (VBP have)
        (VP (VBN known) (, ,)
          (SBAR (IN if)
            (S
              (NP
                (NP (DT the) (NN pain))
                (PP (IN inside)
                  (NP (PRP him))))
              (VP (VBZ does) (RB not)
                (VP (VB make)
                  (S
                    (NP (PRP him))
                    (VP (VB behave)
                      (ADVP (RB so) (RB as))
                      (S
                        (VP (TO to)
                          (VP (VB cause)
                            (NP
                              (NP (DT all))
                              (PP (IN about)
                                (NP (PRP him))))
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (ADJP
                                    (ADVP (RBR more)
                                      (CC or)
                                      (RBR less))
                                    (JJ uncomfortable)))))))))))))))))
    (. .)))

advmod(hidden-9, When-1)
det(cause-3, the-2)
nsubjpass(hidden-9, cause-3)
prep_of(cause-3, suffering-5)
auxpass(hidden-9, is-6)
advmod(deeply-8, most-7)
advmod(hidden-9, deeply-8)
advcl(knows-16, hidden-9)
det(heart-12, the-11)
prep_in(hidden-9, heart-12)
nsubj(knows-16, nobody-15)
root(ROOT-0, knows-16)
dobj(knows-16, anything-17)
prep_about(anything-17, it-19)
det(man-22, the-21)
dep(himself-23, man-22)
conj_but(knows-16, himself-23)
nsubj(great-29, he-25)
aux(great-29, must-26)
cop(great-29, be-27)
det(great-29, a-28)
conj_but(knows-16, great-29)
det(man-33, a-31)
amod(man-33, good-32)
nsubj(known-42, man-33)
advmod(man-33, indeed-34)
prep_such_as(indeed-34, few-38)
prep_of(few-38, us-40)
aux(known-42, have-41)
conj_and(knows-16, known-42)
mark(make-51, if-44)
det(pain-46, the-45)
nsubj(make-51, pain-46)
prep_inside(pain-46, him-48)
aux(make-51, does-49)
neg(make-51, not-50)
advcl(known-42, make-51)
nsubj(behave-53, him-52)
nsubj(cause-57, him-52)
ccomp(make-51, behave-53)
advmod(as-55, so-54)
advmod(behave-53, as-55)
aux(cause-57, to-56)
xcomp(behave-53, cause-57)
dobj(cause-57, all-58)
prep_about(all-58, him-60)
aux(uncomfortable-66, to-61)
cop(uncomfortable-66, be-62)
advmod(uncomfortable-66, more-63)
conj_or(more-63, less-65)
advmod(uncomfortable-66, less-65)
vmod(cause-57, uncomfortable-66)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (DT a) (NN man))
        (VP (VBZ brings)
          (NP
            (NP (NNS money-troubles))
            (PP (IN on)
              (NP (PRP himself))))
          (PP (IN by)
            (S
              (VP (VBG making)
                (NP (NN haste))
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ rich)))))))))))
    (, ,)
    (ADVP (RB then))
    (NP
      (NP (JJS most))
      (PP (IN of)
        (NP
          (NP (DT the) (NNS people))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBZ has)
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (PP (IN with)))))))))))
    (VP (MD must)
      (VP (VB suffer)
        (PP (IN in)
          (NP
            (NP (DT the) (JJ same) (NN way))
            (PP (IN with)
              (NP (PRP himself)))))))
    (. .)))

cc(suffer-27, But-1)
advmod(brings-5, when-2)
det(man-4, a-3)
nsubj(brings-5, man-4)
advcl(suffer-27, brings-5)
dobj(brings-5, money-troubles-6)
prep_on(money-troubles-6, himself-8)
prepc_by(brings-5, making-10)
dobj(making-10, haste-11)
aux(rich-14, to-12)
cop(rich-14, be-13)
vmod(making-10, rich-14)
advmod(most-17, then-16)
nsubj(suffer-27, most-17)
det(people-20, the-19)
prep_of(most-17, people-20)
prep_with(do-24, people-20)
nsubj(has-22, he-21)
nsubj(do-24, he-21)
rcmod(people-20, has-22)
aux(do-24, to-23)
xcomp(has-22, do-24)
aux(suffer-27, must-26)
root(ROOT-0, suffer-27)
det(way-31, the-29)
amod(way-31, same-30)
prep_in(suffer-27, way-31)
prep_with(way-31, himself-33)

(ROOT
  (S
    (NP
      (NP (DT The) (NN elm-tree))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (NNP North) (NNP Wind))
          (VP (VBD blew)
            (ADVP (IN down) (DT that))
            (NP (JJ very) (NN night))))))
    (, ,)
    (SBAR (RB as) (IN if)
      (S
        (NP (JJ small)
          (CC and)
          (JJ great) (NNS trials))
        (VP (VBD were)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN gathered)
                  (PP (IN in)
                    (NP (CD one) (NN heap))))))))))
    (, ,)
    (VP (VBN crushed)
      (NP
        (NP
          (NP (NNP Miss) (NNP Coleman))
          (SBAR
            (S
              (VP (VBZ 's)
                (ADJP (RB pretty) (JJ summer-house))))))
        (: :) (RB just)
        (NP
          (NP (RB so) (DT the) (NN fall))
          (PP (IN of)
            (NP (NNP Mr.) (NNP Coleman)))
          (UCP
            (VP (VBN crushed)
              (NP
                (NP (DT the) (JJ little) (NN family))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD lived)
                      (PP (IN over)
                        (NP (PRP$ his) (NN coach-house))))))))
            (CC and)
            (ADJP (JJ stable))))))
    (. .)))

det(elm-tree-2, The-1)
dobj(blew-6, elm-tree-2)
nsubj(crushed-26, elm-tree-2)
nn(Wind-5, North-4)
nsubj(blew-6, Wind-5)
rcmod(elm-tree-2, blew-6)
advmod(blew-6, down-7)
dep(down-7, that-8)
amod(night-10, very-9)
tmod(blew-6, night-10)
advmod(were-18, as-12)
mark(were-18, if-13)
amod(trials-17, small-14)
conj_and(small-14, great-16)
amod(trials-17, great-16)
nsubj(were-18, trials-17)
nsubjpass(gathered-21, trials-17)
dep(crushed-26, were-18)
aux(gathered-21, to-19)
auxpass(gathered-21, be-20)
xcomp(were-18, gathered-21)
num(heap-24, one-23)
prep_in(gathered-21, heap-24)
root(ROOT-0, crushed-26)
nn(Coleman-28, Miss-27)
dobj(crushed-26, Coleman-28)
cop(summer-house-31, 's-29)
advmod(summer-house-31, pretty-30)
rcmod(Coleman-28, summer-house-31)
advmod(Coleman-28, just-33)
advmod(fall-36, so-34)
det(fall-36, the-35)
dep(Coleman-28, fall-36)
nn(Coleman-39, Mr.-38)
prep_of(fall-36, Coleman-39)
dep(fall-36, crushed-40)
det(family-43, the-41)
amod(family-43, little-42)
dobj(crushed-40, family-43)
nsubj(lived-45, family-43)
rcmod(family-43, lived-45)
poss(coach-house-48, his-47)
prep_over(lived-45, coach-house-48)
dep(fall-36, stable-50)
conj_and(crushed-40, stable-50)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (NNP Diamond))
        (VP (VBD was)
          (ADJP (RB well) (JJ enough)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN taken)
                    (ADVP (RB home))))))))))
    (, ,)
    (NP (EX there))
    (VP (VBD was)
      (ADVP (DT no) (NN home)
        (SBAR (IN for)
          (S
            (NP (PRP him))
            (VP (TO to)
              (VP (VB go)
                (PP (TO to))))))))
    (. .)))

mark(enough-5, Before-1)
nsubj(enough-5, Diamond-2)
nsubjpass(taken-8, Diamond-2)
cop(enough-5, was-3)
advmod(enough-5, well-4)
advcl(was-12, enough-5)
aux(taken-8, to-6)
auxpass(taken-8, be-7)
xcomp(enough-5, taken-8)
advmod(taken-8, home-9)
expl(was-12, there-11)
root(ROOT-0, was-12)
neg(home-14, no-13)
advmod(was-12, home-14)
mark(go-18, for-15)
nsubj(go-18, him-16)
aux(go-18, to-17)
dep(home-14, go-18)
prep(go-18, to-19)

(ROOT
  (S
    (NP (NNP Mr.) (NNP Coleman))
    (PRN (: --)
      (CC or)
      (S
        (NP
          (NP (PRP$ his) (NNS creditors))
          (, ,)
          (PP (IN for)
            (NP (PRP I))))
        (VP (VBP do) (RB not)
          (VP (VB know)
            (NP (DT the) (NNS particulars)))))
      (: --))
    (VP (VBD had)
      (VP (VBN sold)
        (NP
          (NP (NN house))
          (, ,)
          (NP (NN carriage))
          (, ,)
          (NP (NNS horses))
          (, ,)
          (NP (NN furniture))
          (, ,)
          (CC and)
          (NP (NN everything)))))
    (. .)))

nn(Coleman-2, Mr.-1)
nsubj(sold-17, Coleman-2)
cc(know-12, or-4)
poss(creditors-6, his-5)
nsubj(know-12, creditors-6)
prep_for(creditors-6, I-9)
aux(know-12, do-10)
neg(know-12, not-11)
parataxis(sold-17, know-12)
det(particulars-14, the-13)
dobj(know-12, particulars-14)
aux(sold-17, had-16)
root(ROOT-0, sold-17)
dobj(sold-17, house-18)
dobj(sold-17, carriage-20)
conj_and(house-18, carriage-20)
dobj(sold-17, horses-22)
conj_and(house-18, horses-22)
dobj(sold-17, furniture-24)
conj_and(house-18, furniture-24)
dobj(sold-17, everything-27)
conj_and(house-18, everything-27)

(ROOT
  (S
    (S
      (NP
        (NP (PRP He))
        (CC and)
        (NP
          (NP (PRP$ his) (NN wife)
            (CC and)
            (NN daughter))
          (CC and)
          (NP (NNP Mrs.) (NNP Crump))))
      (VP (VBD had)
        (VP (VBN gone)
          (S
            (VP (TO to)
              (VP (VB live)
                (PP (IN in)
                  (NP
                    (NP (DT a) (JJ small) (NN house))
                    (PP (IN in)
                      (NP (NNP Hoxton))))))))
          (, ,)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP he))
              (VP (MD would)
                (VP (VB be)
                  (ADJP (JJ unknown)))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB whence))
      (NP (PRP he))
      (VP (MD could)
        (VP (VB walk)
          (PP (TO to)
            (NP
              (NP (PRP$ his) (NN place))
              (PP (IN of)
                (NP (NN business)))))
          (PP (IN in)
            (NP (DT the) (NNP City))))))
    (. .)))

nsubj(gone-11, He-1)
nsubj(live-13, He-1)
poss(wife-4, his-3)
conj_and(He-1, wife-4)
nsubj(gone-11, wife-4)
nsubj(live-13, wife-4)
conj_and(He-1, daughter-6)
conj_and(wife-4, daughter-6)
nn(Crump-9, Mrs.-8)
conj_and(He-1, Crump-9)
conj_and(wife-4, Crump-9)
aux(gone-11, had-10)
root(ROOT-0, gone-11)
aux(live-13, to-12)
xcomp(gone-11, live-13)
det(house-17, a-15)
amod(house-17, small-16)
prep_in(live-13, house-17)
prep_in(house-17, Hoxton-19)
advmod(unknown-25, where-21)
nsubj(unknown-25, he-22)
aux(unknown-25, would-23)
cop(unknown-25, be-24)
advcl(gone-11, unknown-25)
advmod(walk-31, whence-28)
nsubj(walk-31, he-29)
aux(walk-31, could-30)
conj_and(gone-11, walk-31)
poss(place-34, his-33)
prep_to(walk-31, place-34)
prep_of(place-34, business-36)
det(City-39, the-38)
prep_in(walk-31, City-39)

(ROOT
  (S (IN For)
    (S
      (NP (PRP he))
      (VP (VBD was) (RB not)
        (NP (DT an) (JJ old) (NN man))))
    (, ,)
    (CC and)
    (S
      (VP (VBN hoped)
        (S (RB yet)
          (VP (TO to)
            (VP (VB retrieve)
              (NP (PRP$ his) (NNS fortunes)))))))
    (. .)))

dep(man-7, For-1)
nsubj(man-7, he-2)
nsubj(hoped-10, he-2)
nsubj(retrieve-13, he-2)
cop(man-7, was-3)
neg(man-7, not-4)
det(man-7, an-5)
amod(man-7, old-6)
root(ROOT-0, man-7)
conj_and(man-7, hoped-10)
advmod(retrieve-13, yet-11)
aux(retrieve-13, to-12)
xcomp(hoped-10, retrieve-13)
poss(fortunes-15, his-14)
dobj(retrieve-13, fortunes-15)

(ROOT
  (S
    (S
      (VP (VB Let)
        (SBAR
          (S
            (NP (PRP us))
            (VP (VBP hope)
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBD lived)
                    (S
                      (VP (TO to)
                        (VP (VB retrieve)
                          (NP (PRP$ his) (NN honesty)))))))))))))
    (, ,)
    (NP
      (NP (DT the) (NN tail))
      (WHPP (IN of)
        (WHNP (WDT which))))
    (VP (VBD had)
      (VP (VBN slipped)
        (PP (IN through)
          (NP (PRP$ his) (NNS fingers)))
        (PP
          (PP (TO to)
            (NP (DT the) (RB very) (JJ last) (NN joint)))
          (, ,)
          (CONJP (IN if) (RB not))
          (PP (IN beyond)
            (NP (PRP it))))))
    (. .)))

ccomp(slipped-17, Let-1)
nsubj(hope-3, us-2)
ccomp(Let-1, hope-3)
mark(lived-6, that-4)
nsubj(lived-6, he-5)
nsubj(retrieve-8, he-5)
ccomp(hope-3, lived-6)
aux(retrieve-8, to-7)
xcomp(lived-6, retrieve-8)
poss(honesty-10, his-9)
dobj(retrieve-8, honesty-10)
det(tail-13, the-12)
nsubj(slipped-17, tail-13)
nsubj(slipped-17', tail-13)
prep_of(tail-13, which-15)
aux(slipped-17, had-16)
root(ROOT-0, slipped-17)
conj_negcc(slipped-17, slipped-17')
poss(fingers-20, his-19)
prep_through(slipped-17, fingers-20)
det(joint-25, the-22)
advmod(joint-25, very-23)
amod(joint-25, last-24)
prep_to(slipped-17, joint-25)
prep_beyond(slipped-17', it-30)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP (NN course)))
      (, ,)
      (NP
        (NP (NNP Diamond) (POS 's))
        (NN father))
      (VP (VBD had)
        (NP (NN nothing)
          (S
            (VP (TO to)
              (VP (VB do)
                (PP (IN for)
                  (NP (DT a) (NN time)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was) (RB not)
        (ADJP (RB so) (JJ hard))
        (SBAR (IN for)
          (S
            (NP (PRP him))
            (VP (TO to)
              (VP (VB have)
                (NP (NN nothing))
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (SBAR (IN as)
                        (S
                          (NP (PRP it))
                          (VP (VBD was)
                            (PP (IN for)
                              (NP (NNP Miss) (NNP Coleman)))))))))))))))
    (. .)))

prep_of(had-7, course-2)
poss(father-6, Diamond-4)
nsubj(had-7, father-6)
root(ROOT-0, had-7)
dobj(had-7, nothing-8)
aux(do-10, to-9)
vmod(nothing-8, do-10)
det(time-13, a-12)
prep_for(do-10, time-13)
nsubj(hard-20, it-16)
cop(hard-20, was-17)
neg(hard-20, not-18)
advmod(hard-20, so-19)
conj_but(had-7, hard-20)
mark(have-24, for-21)
nsubj(have-24, him-22)
aux(have-24, to-23)
advcl(hard-20, have-24)
xcomp(hard-20, have-24)
dobj(have-24, nothing-25)
aux(do-27, to-26)
vmod(have-24, do-27)
mark(was-30, as-28)
nsubj(was-30, it-29)
advcl(do-27, was-30)
nn(Coleman-33, Miss-32)
prep_for(was-30, Coleman-33)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD wrote)
        (PP (TO to)
          (NP (PRP$ his) (NN wife)))
        (SBAR (IN that) (, ,)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP$ her) (NN sister))
                (VP (MD would)
                  (VP (VB keep)
                    (NP (PRP her))
                    (ADVP (RB there))
                    (SBAR (IN till)
                      (S
                        (NP (PRP he))
                        (VP (VBD got)
                          (NP (DT a) (NN place)))))))))
            (, ,)
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (ADJP (JJR better))
                (PP (IN for)
                  (NP (PRP them)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD would)
        (VP (VB be)
          (ADJP (RB greatly) (VBN obliged)
            (PP (TO to)
              (NP (PRP her)))))))
    (. .)))

nsubj(wrote-2, He-1)
root(ROOT-0, wrote-2)
poss(wife-5, his-4)
prep_to(wrote-2, wife-5)
mark(better-24, that-6)
mark(keep-12, if-8)
poss(sister-10, her-9)
nsubj(keep-12, sister-10)
aux(keep-12, would-11)
advcl(better-24, keep-12)
dobj(keep-12, her-13)
advmod(keep-12, there-14)
mark(got-17, till-15)
nsubj(got-17, he-16)
advcl(keep-12, got-17)
det(place-19, a-18)
dobj(got-17, place-19)
nsubj(better-24, it-21)
aux(better-24, would-22)
cop(better-24, be-23)
ccomp(wrote-2, better-24)
prep_for(better-24, them-26)
nsubjpass(obliged-33, he-29)
aux(obliged-33, would-30)
auxpass(obliged-33, be-31)
advmod(obliged-33, greatly-32)
conj_and(wrote-2, obliged-33)
prep_to(obliged-33, her-35)

(ROOT
  (S
    (ADVP (RB Meantime))
    (, ,)
    (NP
      (NP (DT the) (NN gentleman))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD had)
            (VP (VBN bought)
              (NP (DT the) (NN house)))))))
    (VP (VBD had)
      (VP (VBN allowed)
        (NP (PRP$ his) (NN furniture)
          (S
            (VP (TO to)
              (VP (VB remain)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (PP (IN for)
                        (NP (DT a) (JJ little) (NN while))))))))))))
    (. .)))

advmod(allowed-11, Meantime-1)
det(gentleman-4, the-3)
nsubj(bought-7, gentleman-4)
nsubj(allowed-11, gentleman-4)
aux(bought-7, had-6)
rcmod(gentleman-4, bought-7)
det(house-9, the-8)
dobj(bought-7, house-9)
aux(allowed-11, had-10)
root(ROOT-0, allowed-11)
poss(furniture-13, his-12)
dobj(allowed-11, furniture-13)
aux(remain-15, to-14)
vmod(furniture-13, remain-15)
advmod(was-18, where-16)
nsubj(was-18, it-17)
advcl(remain-15, was-18)
det(while-22, a-20)
amod(while-22, little-21)
prep_for(was-18, while-22)

(ROOT
  (S
    (NP
      (NP (NNP Diamond) (POS 's))
      (NN aunt))
    (VP (VBD was)
      (ADJP (RB quite) (JJ willing)
        (S
          (VP (TO to)
            (VP (VB keep)
              (NP (PRP them))
              (ADVP
                (ADVP (RB as) (RB long))
                (SBAR (IN as)
                  (S
                    (NP (PRP she))
                    (VP (MD could))))))))))
    (. .)))

poss(aunt-3, Diamond-1)
nsubj(willing-6, aunt-3)
nsubj(keep-8, aunt-3)
cop(willing-6, was-4)
advmod(willing-6, quite-5)
root(ROOT-0, willing-6)
aux(keep-8, to-7)
xcomp(willing-6, keep-8)
dobj(keep-8, them-9)
advmod(long-11, as-10)
advmod(keep-8, long-11)
mark(could-14, as-12)
nsubj(could-14, she-13)
advcl(long-11, could-14)
ccomp(long-11, could-14)

(ROOT
  (S (CC And)
    (ADVP (RB indeed))
    (NP (NNP Diamond))
    (VP (VBD was) (RB not)
      (ADJP
        (ADVP (RB yet) (RB well))
        (JJ enough)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN moved)
                (PP (IN with)
                  (NP (NN safety)))))))))
    (. .)))

cc(enough-8, And-1)
advmod(enough-8, indeed-2)
nsubj(enough-8, Diamond-3)
nsubjpass(moved-11, Diamond-3)
cop(enough-8, was-4)
neg(enough-8, not-5)
advmod(well-7, yet-6)
advmod(enough-8, well-7)
root(ROOT-0, enough-8)
aux(moved-11, to-9)
auxpass(moved-11, be-10)
xcomp(enough-8, moved-11)
prep_with(moved-11, safety-13)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN recovered)
            (ADVP (RB so) (RB far) (RB as))
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB go)
                          (PRT (RP out)))))))))))))
    (, ,)
    (NP (CD one) (NN day))
    (NP (PRP$ his) (NN mother))
    (VP (VBD got)
      (NP
        (NP
          (NP (PRP$ her) (NN sister) (POS 's))
          (NN husband))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD had)
              (NP (DT a) (JJ little) (NN pony-cart))))))
      (, ,)
      (S
        (VP (TO to)
          (VP
            (VP (VB carry)
              (NP (PRP them))
              (PRT (RP down))
              (PP (TO to)
                (NP (DT the) (NN sea-shore))))
            (, ,)
            (CC and)
            (VP (VB leave)
              (NP (PRP them))
              (ADVP (RB there))
              (PP (IN for)
                (NP (DT a) (JJ few) (NNS hours))))))))
    (. .)))

advmod(recovered-4, When-1)
nsubj(recovered-4, he-2)
nsubj(able-10, he-2)
nsubj(go-12, he-2)
aux(recovered-4, had-3)
advcl(got-19, recovered-4)
advmod(as-7, so-5)
advmod(as-7, far-6)
advmod(recovered-4, as-7)
aux(able-10, to-8)
cop(able-10, be-9)
xcomp(recovered-4, able-10)
aux(go-12, to-11)
xcomp(able-10, go-12)
prt(go-12, out-13)
num(day-16, one-15)
tmod(got-19, day-16)
poss(mother-18, his-17)
nsubj(got-19, mother-18)
root(ROOT-0, got-19)
poss(sister-21, her-20)
poss(husband-23, sister-21)
dobj(got-19, husband-23)
nsubj(had-26, husband-23)
rcmod(husband-23, had-26)
det(pony-cart-29, a-27)
amod(pony-cart-29, little-28)
dobj(had-26, pony-cart-29)
aux(carry-32, to-31)
vmod(got-19, carry-32)
dobj(carry-32, them-33)
prt(carry-32, down-34)
det(sea-shore-37, the-36)
prep_to(carry-32, sea-shore-37)
vmod(got-19, leave-40)
conj_and(carry-32, leave-40)
dobj(leave-40, them-41)
advmod(leave-40, there-42)
det(hours-46, a-44)
amod(hours-46, few-45)
prep_for(leave-40, hours-46)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD had)
        (NP (DT some) (NN business)
          (S
            (VP (TO to)
              (VP (VB do)
                (ADVP (RBR further))
                (PP (IN on)
                  (PP (IN at)
                    (NP (NNP Ramsgate)))))))))
      (, ,)
      (CC and)
      (VP (MD would)
        (VP (VB pick)
          (NP (PRP them))
          (ADVP (RB up))
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBD returned)))))))
    (. .)))

nsubj(had-2, He-1)
nsubj(pick-14, He-1)
root(ROOT-0, had-2)
det(business-4, some-3)
dobj(had-2, business-4)
aux(do-6, to-5)
vmod(business-4, do-6)
advmod(do-6, further-7)
prep(do-6, on-8)
pcomp(on-8, at-9)
pobj(at-9, Ramsgate-10)
aux(pick-14, would-13)
conj_and(had-2, pick-14)
dobj(pick-14, them-15)
advmod(pick-14, up-16)
mark(returned-19, as-17)
nsubj(returned-19, he-18)
advcl(pick-14, returned-19)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN whiff))
        (PP (IN of)
          (NP (DT the) (NN sea-air))))
      (VP (MD would)
        (VP (VB do)
          (S
            (NP (PRP them))
            (ADJP (DT both) (JJ good))))))
    (PRN (, ,)
      (S
        (NP (PRP she))
        (VP (VBD said)))
      (, ,))
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD thought)
        (PP (IN besides)
          (S
            (NP (PRP she))
            (VP (MD could)
              (ADVP (RBS best))
              (VP (VB tell)
                (NP
                  (NP (NNP Diamond))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBD had)
                        (VP (VBN happened)
                          (SBAR (IN if)
                            (S
                              (NP (PRP she))
                              (VP (VBD had)
                                (NP (PRP him))
                                (ADVP (RB quite)
                                  (PP (TO to)
                                    (NP (PRP herself))))))))))))))))))
    (. .)))

det(whiff-2, A-1)
nsubj(do-7, whiff-2)
det(sea-air-5, the-4)
prep_of(whiff-2, sea-air-5)
aux(do-7, would-6)
root(ROOT-0, do-7)
nsubj(good-10, them-8)
det(good-10, both-9)
xcomp(do-7, good-10)
nsubj(said-13, she-12)
dep(do-7, said-13)
nsubj(thought-17, she-16)
conj_and(do-7, thought-17)
nsubj(tell-22, she-19)
aux(tell-22, could-20)
advmod(tell-22, best-21)
prepc_besides(thought-17, tell-22)
dobj(tell-22, Diamond-23)
nsubj(happened-26, Diamond-23)
aux(happened-26, had-25)
rcmod(Diamond-23, happened-26)
mark(had-29, if-27)
nsubj(had-29, she-28)
advcl(happened-26, had-29)
dobj(had-29, him-30)
advmod(had-29, quite-31)
prep_to(quite-31, herself-33)

(ROOT
  (NP (NNP CHAPTER) (NNP XIII) (. .)))

nn(XIII-2, CHAPTER-1)
root(ROOT-0, XIII-2)

(ROOT
  (S
    (NP
      (NP (DT THE) (NNP SEASIDE) (NNP DIAMOND))
      (CC and)
      (NP (PRP$ his) (NN mother)))
    (VP (VBD sat)
      (PRT (RP down))
      (PP (IN upon)
        (NP
          (NP (DT the) (NN edge))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ rough) (NN grass))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBN bordered)
                    (NP (DT the) (NN sand))))))))))
    (. .)))

det(DIAMOND-3, THE-1)
nn(DIAMOND-3, SEASIDE-2)
nsubj(sat-7, DIAMOND-3)
poss(mother-6, his-5)
conj_and(DIAMOND-3, mother-6)
nsubj(sat-7, mother-6)
root(ROOT-0, sat-7)
prt(sat-7, down-8)
det(edge-11, the-10)
prep_upon(sat-7, edge-11)
det(grass-15, the-13)
amod(grass-15, rough-14)
prep_of(edge-11, grass-15)
nsubj(bordered-17, grass-15)
rcmod(grass-15, bordered-17)
det(sand-19, the-18)
dobj(bordered-17, sand-19)

(ROOT
  (S
    (NP (DT The) (NN sun))
    (VP (VBD was)
      (ADVP (RB just))
      (ADJP
        (ADJP (RB far) (RB enough)
          (PP (IN past)
            (NP (PRP$ its) (JJS highest)))
          (S
            (VP (RB not) (TO to)
              (VP (VB shine)
                (PP (IN in)
                  (NP (PRP$ their) (NNS eyes)))))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBD looked)
              (ADVP (RB eastward)))))))
    (. .)))

det(sun-2, The-1)
nsubj(enough-6, sun-2)
cop(enough-6, was-3)
advmod(enough-6, just-4)
advmod(enough-6, far-5)
root(ROOT-0, enough-6)
poss(highest-9, its-8)
prep_past(enough-6, highest-9)
neg(shine-12, not-10)
aux(shine-12, to-11)
dep(enough-6, shine-12)
poss(eyes-15, their-14)
prep_in(shine-12, eyes-15)
advmod(looked-18, when-16)
nsubj(looked-18, they-17)
ccomp(enough-6, looked-18)
advmod(looked-18, eastward-19)

(ROOT
  (S
    (NP (DT A) (JJ sweet) (JJ little) (NN wind))
    (VP
      (VP (VBD blew)
        (PP (IN on)
          (NP (PRP$ their) (JJ left) (NN side))))
      (, ,)
      (CC and)
      (VP (VBN comforted)
        (NP (DT the) (NN mother))
        (PP (IN without)
          (S
            (VP (VBG letting)
              (SBAR
                (S
                  (NP (PRP her))
                  (VP (VBP know)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP it))
                        (VP (VBD was)
                          (NP
                            (NP (DT that))
                            (VP (VBN comforted)
                              (NP (PRP her)))))))))))))))
    (. .)))

det(wind-4, A-1)
amod(wind-4, sweet-2)
amod(wind-4, little-3)
nsubj(blew-5, wind-4)
nsubj(comforted-12, wind-4)
root(ROOT-0, blew-5)
poss(side-9, their-7)
amod(side-9, left-8)
prep_on(blew-5, side-9)
conj_and(blew-5, comforted-12)
det(mother-14, the-13)
dobj(comforted-12, mother-14)
prepc_without(comforted-12, letting-16)
nsubj(know-18, her-17)
ccomp(letting-16, know-18)
dobj(that-22, what-19)
nsubj(that-22, it-20)
cop(that-22, was-21)
ccomp(know-18, that-22)
vmod(that-22, comforted-23)
dobj(comforted-23, her-24)

(ROOT
  (S
    (ADVP (RB Away) (RB before))
    (NP (PRP them))
    (VP (VBD stretched)
      (NP
        (NP (DT the) (JJ sparkling) (NNS waters))
        (PP (IN of)
          (NP
            (NP (DT the) (NN ocean))
            (, ,)
            (SBAR
              (WHNP
                (NP (DT every) (NN wave))
                (WHPP (IN of)
                  (WHNP (WDT which))))
              (S
                (VP (VBD flashed)
                  (PRT (RP out))
                  (NP (PRP$ its) (JJ own) (NN delight))
                  (PP
                    (ADVP (RB back))
                    (IN in)
                    (NP
                      (NP (DT the) (NN face))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (JJ great) (NN sun))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBD looked)
                                (PRT (RP down))
                                (PP (IN from)
                                  (NP
                                    (NP (DT the) (NNS stillness))
                                    (PP (IN of)
                                      (NP (PRP$ its) (JJ blue) (NN house)))))
                                (PP (IN with)
                                  (NP (JJ glorious) (JJ silent) (NN face)))
                                (PP (IN upon)
                                  (NP (PRP$ its) (JJ flashing) (NNS children)))))))))))))))))
    (. .)))

advmod(before-2, Away-1)
advmod(stretched-4, before-2)
nsubj(stretched-4, them-3)
root(ROOT-0, stretched-4)
det(waters-7, the-5)
amod(waters-7, sparkling-6)
dobj(stretched-4, waters-7)
det(ocean-10, the-9)
prep_of(waters-7, ocean-10)
prep_of(wave-13, ocean-10)
det(wave-13, every-12)
nsubj(flashed-16, wave-13)
rcmod(ocean-10, flashed-16)
prt(flashed-16, out-17)
poss(delight-20, its-18)
amod(delight-20, own-19)
dobj(flashed-16, delight-20)
advmod(flashed-16, back-21)
det(face-24, the-23)
prep_in(flashed-16, face-24)
det(sun-28, the-26)
amod(sun-28, great-27)
prep_of(face-24, sun-28)
nsubj(looked-31, sun-28)
rcmod(sun-28, looked-31)
prt(looked-31, down-32)
det(stillness-35, the-34)
prep_from(looked-31, stillness-35)
poss(house-39, its-37)
amod(house-39, blue-38)
prep_of(stillness-35, house-39)
amod(face-43, glorious-41)
amod(face-43, silent-42)
prep_with(looked-31, face-43)
poss(children-47, its-45)
amod(children-47, flashing-46)
prep_upon(looked-31, children-47)

(ROOT
  (S
    (PP (IN On)
      (NP (DT each) (NN hand)))
    (NP (DT the) (NN shore))
    (VP (VBD rounded)
      (NP (NNS outwards))
      (, ,)
      (S
        (VP (VBG forming)
          (NP (DT a) (JJ little) (NN bay)))))
    (. .)))

det(hand-3, each-2)
prep_on(rounded-6, hand-3)
det(shore-5, the-4)
nsubj(rounded-6, shore-5)
root(ROOT-0, rounded-6)
dobj(rounded-6, outwards-7)
vmod(rounded-6, forming-9)
det(bay-12, a-10)
amod(bay-12, little-11)
dobj(forming-9, bay-12)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBD were)
          (ADVP
            (NP (DT no) (JJ white) (NNS cliffs))
            (RB here))
          (, ,)
          (ADVP (RB as) (RBR further) (RB north)
            (CC and)
            (RB south))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN place))
        (VP (VBD was)
          (ADJP (RB rather) (JJ dreary)))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN sky))
      (VP (VBD got)
        (PP (IN at)
          (NP (PRP them)))
        (ADVP (RB so) (RB much))
        (ADVP (DT the) (RBR better))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
neg(cliffs-5, no-3)
amod(cliffs-5, white-4)
npadvmod(here-6, cliffs-5)
advmod(were-2, here-6)
advmod(north-10, as-8)
advmod(north-10, further-9)
advmod(were-2, north-10)
advmod(were-2, south-12)
conj_and(north-10, south-12)
det(place-16, the-15)
nsubj(dreary-19, place-16)
cop(dreary-19, was-17)
advmod(dreary-19, rather-18)
conj_and(were-2, dreary-19)
det(sky-23, the-22)
nsubj(got-24, sky-23)
conj_but(were-2, got-24)
prep_at(got-24, them-26)
advmod(much-28, so-27)
advmod(got-24, much-28)
dep(better-30, the-29)
advmod(got-24, better-30)

(ROOT
  (S
    (NP (RB Not)
      (NP (DT a) (NN house))
      (, ,) (RB not)
      (NP (DT a) (NN creature)))
    (VP (VBD was)
      (PP (IN within)
        (NP (NN sight))))
    (. .)))

neg(house-3, Not-1)
det(house-3, a-2)
nsubj(was-8, house-3)
neg(creature-7, not-5)
det(creature-7, a-6)
appos(house-3, creature-7)
root(ROOT-0, was-8)
prep_within(was-8, sight-10)

(ROOT
  (S
    (NP (NNP Dry) (NN sand))
    (VP (VBD was)
      (PP
        (PP (IN about)
          (NP (PRP$ their) (NNS feet)))
        (, ,)
        (CC and)
        (PP (IN under)
          (NP (PRP them))))
      (NP
        (NP (JJ thin) (JJ wiry) (NN grass))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB just))
            (VP (VBD managed)
              (S
                (VP (TO to)
                  (VP (VB grow)
                    (PRT (RP out))
                    (PP (IN of)
                      (NP (DT the) (JJ poverty-stricken) (NN shore)))))))))))
    (. .)))

nn(sand-2, Dry-1)
nsubj(grass-13, sand-2)
cop(grass-13, was-3)
poss(feet-6, their-5)
prep_about(grass-13, feet-6)
prep_under(grass-13', them-10)
amod(grass-13, thin-11)
amod(grass-13, wiry-12)
root(ROOT-0, grass-13)
conj_and(grass-13, grass-13')
nsubj(managed-17, grass-13)
nsubj(managed-17, grass-13')
nsubj(grow-19, grass-13)
nsubj(grow-19, grass-13')
advmod(managed-17, just-16)
rcmod(grass-13, managed-17)
aux(grow-19, to-18)
xcomp(managed-17, grow-19)
det(shore-24, the-22)
amod(shore-24, poverty-stricken-23)
prep_out_of(grow-19, shore-24)

(ROOT
  (S (`` ``)
    (VP (VB Oh)
      (ADJP (RB dear)))
    (. !) ('' '')))

root(ROOT-0, Oh-2)
acomp(Oh-2, dear-3)

(ROOT
  (SINV
    (VP (VBD said))
    (NP
      (NP (NNP Diamond) (POS 's))
      (NN mother))
    (, ,)
    (S
      (PP (IN with)
        (NP (DT a) (JJ deep) (NN sigh)))
      (, ,) (`` ``)
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT a) (JJ sad) (NN world))))
    (. !) ('' '')))

root(ROOT-0, said-1)
poss(mother-4, Diamond-2)
nsubj(said-1, mother-4)
det(sigh-9, a-7)
amod(sigh-9, deep-8)
prep_with(world-16, sigh-9)
nsubj(world-16, it-12)
cop(world-16, 's-13)
det(world-16, a-14)
amod(world-16, sad-15)
ccomp(said-1, world-16)

(ROOT
  (S (`` ``)
    (VP (VB Is)
      (NP (PRP it)))
    (. ?) ('' '')))

cop(it-3, Is-2)
root(ROOT-0, it-3)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Diamond)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB know)))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, did-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB know)
        (FRAG (, ,)
          (NP (NN child)))))
    (. ?)))

advmod(know-5, How-2)
aux(know-5, should-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
dep(know-5, child-7)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 've)
        (VP (VBN been)
          (ADVP (RB too) (RB well))
          (VP (VBN taken)
            (NP (VB care) (IN of))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP trust))
    (. .) ('' '')))

nsubjpass(taken-6, You-1)
aux(taken-6, 've-2)
auxpass(taken-6, been-3)
advmod(well-5, too-4)
advmod(taken-6, well-5)
ccomp(trust-11, taken-6)
dobj(taken-6, care-7)
amod(care-7, of-8)
nsubj(trust-11, I-10)
root(ROOT-0, trust-11)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh) (UH yes))
      (, ,)
      (NP (PRP I))
      (VP (VBP have)))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Diamond))
    (. .)))

discourse(have-6, Oh-2)
dep(Oh-2, yes-3)
nsubj(have-6, I-5)
ccomp(returned-9, have-6)
root(ROOT-0, returned-9)
dep(returned-9, Diamond-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sorry)))
    (. !)))

nsubj(sorry-4, I-2)
cop(sorry-4, 'm-3)
root(ROOT-0, sorry-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD were)
            (VP (VBN taken)
              (NP
                (NP (NN care))
                (PP (IN of)
                  (ADVP (RB too)))))))))
    (. .)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubjpass(taken-5, you-3)
auxpass(taken-5, were-4)
ccomp(thought-2, taken-5)
dobj(taken-5, care-6)
prep(care-6, of-7)
pcomp(of-7, too-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP$ my) (NN father))
          (VP (VBD took)
            (NP
              (NP (NN care))
              (PP (IN of)
                (NP (PRP you))))))))
    (. .)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
poss(father-4, my-3)
nsubj(took-5, father-4)
ccomp(thought-2, took-5)
dobj(took-5, care-6)
prep_of(care-6, you-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB ask)
        (NP (PRP him))
        (PP (IN about)
          (NP (PRP it)))))
    (. .)))

nsubj(ask-3, I-1)
aux(ask-3, will-2)
root(ROOT-0, ask-3)
dobj(ask-3, him-4)
prep_about(ask-3, it-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD must)
            (VP (VB have)
              (VP (VBN forgotten)))))))
    (. .) ('' '')))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(forgotten-6, he-3)
aux(forgotten-6, must-4)
aux(forgotten-6, have-5)
ccomp(think-2, forgotten-6)

(ROOT
  (S (`` ``)
    (NP (NNP Dear))
    (VP (VBZ boy))
    (. !) ('' '')))

nsubj(boy-3, Dear-2)
root(ROOT-0, boy-3)

(ROOT
  (SINV
    (VP (VBD said))
    (NP (PRP$ his) (NN mother))
    (, ,) (`` ``)
    (S
      (NP (PRP$ your) (NN father))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (JJS best) (NN man))
          (PP (IN in)
            (NP (DT the) (NN world))))))
    (. .) ('' '')))

root(ROOT-0, said-1)
poss(mother-3, his-2)
nsubj(said-1, mother-3)
poss(father-7, your-6)
nsubj(man-11, father-7)
cop(man-11, 's-8)
det(man-11, the-9)
amod(man-11, best-10)
ccomp(said-1, man-11)
det(world-14, the-13)
prep_in(man-11, world-14)

(ROOT
  (S (`` ``)
    (CC So)
    (NP (PRP I))
    (VP (VBD thought))
    (. !) ('' '')))

cc(thought-4, So-2)
nsubj(thought-4, I-3)
root(ROOT-0, thought-4)

(ROOT
  (S
    (VP (VBN returned)
      (NP
        (NP (NNP Diamond))
        (PP (IN with)
          (NP (NN triumph)))))
    (. .)))

root(ROOT-0, returned-1)
dobj(returned-1, Diamond-2)
prep_with(Diamond-2, triumph-4)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ sure)
        (PP (IN of)
          (NP (PRP it)))))
    (. !)))

nsubj(sure-4, I-2)
cop(sure-4, was-3)
root(ROOT-0, sure-4)
prep_of(sure-4, it-6)

(ROOT
  (S
    (LST (: --))
    (NP (NNP Well))
    (, ,)
    (PRN
      (S
        (VP (VBZ does) (RB n't))))
    (NP (PRP he))
    (VP (VBP take)
      (NP
        (NP
          (ADJP (RB very) (JJ good))
          (NN care))
        (PP (IN of)
          (NP (PRP you)))))
    (. ?) ('' '')))

nsubj(take-7, Well-2)
parataxis(take-7, does-4)
neg(does-4, n't-5)
nsubj(take-7, he-6)
root(ROOT-0, take-7)
advmod(good-9, very-8)
amod(care-10, good-9)
dobj(take-7, care-10)
prep_of(care-10, you-12)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Yes))
      (, ,)
      (INTJ (UH yes))
      (, ,)
      (NP (PRP he))
      (VP (VBZ does)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (PRP$ his) (NN mother))
    (, ,)
    (S
      (VP (VBG bursting)
        (PP (IN into)
          (NP (NNS tears)))))
    (. .)))

advmod(does-7, Yes-2)
discourse(does-7, yes-4)
nsubj(does-7, he-6)
ccomp(answered-10, does-7)
root(ROOT-0, answered-10)
poss(mother-12, his-11)
nsubj(answered-10, mother-12)
vmod(answered-10, bursting-14)
prep_into(bursting-14, tears-16)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (WP who))
    (VP (VBZ 's)
      (S
        (VP (TO to)
          (VP (VB take)
            (NP
              (NP (NN care))
              (PP (IN of)
                (NP (PRP him))))))))
    (. ?)))

cc('s-4, But-2)
nsubj('s-4, who-3)
nsubj(take-6, who-3)
root(ROOT-0, 's-4)
aux(take-6, to-5)
xcomp('s-4, take-6)
dobj(take-6, care-7)
prep_of(care-7, him-9)

(ROOT
  (SBARQ (CC And)
    (WHADVP (WRB how))
    (SQ (VBZ is)
      (NP (PRP he))
      (VP (TO to)
        (VP (VB take)
          (NP
            (NP (NN care))
            (PP (IN of)
              (NP (PRP us))))
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBZ 's)
                (VP (VBN got)
                  (NP (NN nothing))
                  (S
                    (VP (TO to)
                      (VP (VB eat)
                        (NP (PRP himself))))))))))))
    (. ?) ('' '')))

cc(take-6, And-1)
advmod(take-6, how-2)
aux(take-6, is-3)
nsubj(take-6, he-4)
aux(take-6, to-5)
root(ROOT-0, take-6)
dobj(take-6, care-7)
prep_of(care-7, us-9)
mark(got-13, if-10)
nsubjpass(got-13, he-11)
auxpass(got-13, 's-12)
advcl(take-6, got-13)
dobj(got-13, nothing-14)
aux(eat-16, to-15)
vmod(got-13, eat-16)
dobj(eat-16, himself-17)

(ROOT
  (S (`` ``)
    (VP (VB Oh)
      (ADJP (RB dear)))
    (. !) ('' '')))

root(ROOT-0, Oh-2)
acomp(Oh-2, dear-3)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (NNP Diamond))
        (PP (IN with)
          (NP (DT a) (NN gasp)))))
    (: ;) (`` ``)
    (S
      (S
        (VP (VBZ has) (RB n't)
          (VP
            (NP (PRP he)))))
      (VP (VBD got)
        (NP (NN anything))
        (S
          (VP (TO to)
            (VP (VB eat))))))
    (. ?)))

root(ROOT-0, said-1)
dobj(said-1, Diamond-2)
det(gasp-5, a-4)
prep_with(said-1, gasp-5)
aux(he-10, has-8)
neg(he-10, n't-9)
csubj(got-11, he-10)
parataxis(said-1, got-11)
dobj(got-11, anything-12)
aux(eat-14, to-13)
vmod(got-11, eat-14)

(ROOT
  (INTJ (UH Oh) (. !)))

root(ROOT-0, Oh-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (VP (VB go)
        (NP (NN home))
        (PP (TO to)
          (NP (PRP him)))))
    (. .) ('' '')))

nsubj(go-3, I-1)
aux(go-3, must-2)
root(ROOT-0, go-3)
dobj(go-3, home-4)
prep_to(go-3, him-6)

(ROOT
  (FRAG
    (INTJ
      (INTJ (`` ``) (UH No))
      (, ,)
      (INTJ (UH no)))
    (, ,)
    (NP (NN child))
    (. .)))

discourse(child-6, No-2)
discourse(No-2, no-4)
root(ROOT-0, child-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ 's) (RB not)
      (VP (VBN come)
        (PP (TO to)
          (NP (DT that)))
        (ADVP (RB yet))))
    (. .)))

nsubjpass(come-4, He-1)
auxpass(come-4, 's-2)
neg(come-4, not-3)
root(ROOT-0, come-4)
prep_to(come-4, that-6)
advmod(come-4, yet-7)

(ROOT
  (S (CC But)
    (SBAR
      (WHNP (WP what))
      (S
        (VP (VBZ 's)
          (S
            (VP (TO to)
              (VP (VB become)
                (PP (IN of)
                  (NP (PRP us)))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .) ('' '')))

cc(know-12, But-1)
nsubj('s-3, what-2)
nsubj(become-5, what-2)
advcl(know-12, 's-3)
aux(become-5, to-4)
xcomp('s-3, become-5)
prep_of(become-5, us-7)
nsubj(know-12, I-9)
aux(know-12, do-10)
neg(know-12, n't-11)
root(ROOT-0, know-12)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Are)
        (S
          (NP (PRP you))
          (ADJP (RB very) (JJ hungry)))))
    (, ,)
    (VP (VBZ mother))
    (. ?)))

dep(mother-7, Are-2)
nsubj(hungry-5, you-3)
advmod(hungry-5, very-4)
xcomp(Are-2, hungry-5)
root(ROOT-0, mother-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT the) (NN basket)))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(basket-4, the-3)
nsubj('s-2, basket-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD put)
            (NP (NN something))
            (S
              (VP (TO to)
                (VP (VB eat)
                  (PP (IN in)
                    (NP (PRP it))))))))))
    (. .) ('' '')))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(put-4, you-3)
ccomp(thought-2, put-4)
dobj(put-4, something-5)
aux(eat-7, to-6)
vmod(put-4, eat-7)
prep_in(eat-7, it-9)

(ROOT
  (S (`` ``)
    (ADVP (RB O))
    (NP (PRP you))
    (VP (VBZ darling)
      (ADJP (JJ stupid)))
    (. !)))

advmod(darling-4, O-2)
nsubj(darling-4, you-3)
root(ROOT-0, darling-4)
acomp(darling-4, stupid-5)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD was)
                (ADJP (JJ hungry))))))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (PRP$ his) (NN mother))
    (, ,)
    (S
      (VP (VBG smiling)
        (PP (IN through)
          (NP (PRP$ her) (NNS tears)))))
    (. .)))

nsubj(say-4, I-1)
aux(say-4, did-2)
neg(say-4, n't-3)
ccomp(returned-10, say-4)
nsubj(hungry-7, I-5)
cop(hungry-7, was-6)
ccomp(say-4, hungry-7)
root(ROOT-0, returned-10)
poss(mother-12, his-11)
nsubj(returned-10, mother-12)
vmod(returned-10, smiling-14)
poss(tears-17, her-16)
prep_through(smiling-14, tears-17)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB understand)
          (NP (PRP you))
          (ADVP (IN at) (DT all)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

advmod(understand-6, Then-2)
nsubj(understand-6, I-3)
aux(understand-6, do-4)
neg(understand-6, n't-5)
ccomp(said-12, understand-6)
dobj(understand-6, you-7)
advmod(understand-6, at-8)
pobj(at-8, all-9)
root(ROOT-0, said-12)
nsubj(said-12, Diamond-13)

(ROOT
  (S (`` ``)
    (NP (NNP Do))
    (VP (VBP tell)
      (NP
        (NP (PRP me))
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ 's)
              (NP (DT the) (NN matter)))))))
    (. .) ('' '')))

nsubj(tell-3, Do-2)
root(ROOT-0, tell-3)
dobj(tell-3, me-4)
nsubj(matter-8, me-4)
cop(matter-8, 's-6)
det(matter-8, the-7)
rcmod(me-4, matter-8)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS people))
        (PP (IN in)
          (NP
            (NP
              (NP (DT the) (NN world))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP have)
                    (ADVP (NN nothing))
                    (S
                      (VP (TO to)
                        (VP (VB eat))))))))
            (, ,)
            (NP (NNP Diamond))))))
    (. .) ('' '')))

expl(are-3, There-2)
root(ROOT-0, are-3)
nsubj(are-3, people-4)
det(world-7, the-6)
prep_in(people-4, world-7)
nsubj(have-9, world-7)
nsubj(eat-12, world-7)
rcmod(world-7, have-9)
advmod(have-9, nothing-10)
aux(eat-12, to-11)
xcomp(have-9, eat-12)
appos(world-7, Diamond-14)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP do) (RB n't)
            (VP (VB stop)
              (PP (IN in)
                (NP (PRP it)))
              (ADVP (DT any) (RBR longer)))))))
    (. .)))

advmod(suppose-4, Then-2)
nsubj(suppose-4, I-3)
root(ROOT-0, suppose-4)
nsubj(stop-8, they-5)
aux(stop-8, do-6)
neg(stop-8, n't-7)
ccomp(suppose-4, stop-8)
prep_in(stop-8, it-10)
dep(longer-12, any-11)
advmod(stop-8, longer-12)

(ROOT
  (S
    (NP (PRP They))
    (: --)
    (S
      (NP (PRP they))
      (PRN (: --)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP call))))
        (: --))
      (VP (VBP die)
        (PRN (: --)
          (S
            (VP (VB do) (RB n't))))
        (NP (PRP they))))
    (. ?) ('' '')))

dep(die-9, They-1)
nsubj(die-9, they-3)
dobj(call-7, what-5)
nsubj(call-7, you-6)
parataxis(die-9, call-7)
root(ROOT-0, die-9)
parataxis(die-9, do-11)
neg(do-11, n't-12)
dobj(die-9, they-13)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP they))
    (VP (VBP do))
    (. .)))

discourse(do-5, Yes-2)
nsubj(do-5, they-4)
root(ROOT-0, do-5)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB like)
        (NP (DT that))))
    (. ?) ('' '')))

advmod(like-4, How-1)
aux(like-4, would-2)
nsubj(like-4, you-3)
root(ROOT-0, like-4)
dobj(like-4, that-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBD tried))
    (. .)))

nsubj(tried-3, I-1)
neg(tried-3, never-2)
root(ROOT-0, tried-3)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP go)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP they))
                (VP (VBP get)
                  (NP (NN something))
                  (S
                    (VP (TO to)
                      (VP (VB eat)))))))))))
    (. .) ('' '')))

cc(suppose-3, But-1)
nsubj(suppose-3, I-2)
root(ROOT-0, suppose-3)
nsubj(go-5, they-4)
ccomp(suppose-3, go-5)
advmod(get-8, where-6)
nsubj(get-8, they-7)
advcl(go-5, get-8)
dobj(get-8, something-9)
aux(eat-11, to-10)
vmod(get-8, eat-11)

(ROOT
  (SINV (`` ``)
    (S
      (PP (IN Like)
        (NP (RB enough)))
      (NP (PRP they))
      (VP (VBP do) (RB n't)
        (VP (VB want)
          (NP (PRP it)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (PRP$ his) (NN mother))
      (, ,)
      (NP (NN petulantly)))
    (. .)))

prep(want-7, Like-2)
pobj(Like-2, enough-3)
nsubj(want-7, they-4)
aux(want-7, do-5)
neg(want-7, n't-6)
ccomp(said-11, want-7)
dobj(want-7, it-8)
root(ROOT-0, said-11)
poss(mother-13, his-12)
nsubj(said-11, mother-13)
appos(mother-13, petulantly-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's) (RB all)
        (ADJP (JJ right))
        (ADVP (RB then))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (, ,)
    (S
      (VP (VBG thinking)
        (S
          (NP (PRP I))
          (ADJP (RB daresay) (RBR more)))
        (SBAR (IN than)
          (S
            (NP (PRP he))
            (VP (VBD chose)
              (S
                (VP (TO to)
                  (VP (VB put)
                    (PP (IN in)
                      (NP (NNS words)))))))))))
    (. .)))

nsubj(right-5, That-2)
cop(right-5, 's-3)
advmod(right-5, all-4)
ccomp(said-9, right-5)
advmod(right-5, then-6)
root(ROOT-0, said-9)
nsubj(said-9, Diamond-10)
vmod(said-9, thinking-12)
nsubj(more-15, I-13)
advmod(more-15, daresay-14)
xcomp(thinking-12, more-15)
mark(chose-18, than-16)
nsubj(chose-18, he-17)
nsubj(put-20, he-17)
advcl(thinking-12, chose-18)
aux(put-20, to-19)
xcomp(chose-18, put-20)
prep_in(put-20, words-22)

(ROOT
  (S (`` ``)
    (VP (VBZ Is)
      (NP (PRP it))
      (ADVP (RB though)))
    (. ?)))

cop(it-3, Is-2)
root(ROOT-0, it-3)
advmod(it-3, though-4)

(ROOT
  (NP (NNP Poor) (NNP boy) (. !)))

nn(boy-2, Poor-1)
root(ROOT-0, boy-2)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WRB how) (JJ little))
      (S
        (NP (PRP you))
        (VP (VBP know)
          (PP (IN about)
            (NP (NNS things))))))
    (. !)))

advmod(little-2, how-1)
advmod(know-4, little-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
prep_about(know-4, things-6)

(ROOT
  (S
    (S
      (NP (NNP Mr.) (NNP Coleman))
      (VP (VBZ 's)
        (VP (VBN lost)
          (NP (PDT all) (PRP$ his) (NN money)))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP$ your) (NN father))
        (VP (VBZ has)
          (NP (NN nothing)
            (S
              (VP (TO to)
                (VP (VB do)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP we))
        (VP (MD shall)
          (VP (VB have)
            (NP (NN nothing))
            (S
              (VP (TO to)
                (VP (VB eat)
                  (ADVP (RP by)
                    (CC and)
                    (RP by)))))))))
    (. .) ('' '')))

nn(Coleman-2, Mr.-1)
nsubjpass(lost-4, Coleman-2)
auxpass(lost-4, 's-3)
root(ROOT-0, lost-4)
predet(money-7, all-5)
poss(money-7, his-6)
dobj(lost-4, money-7)
poss(father-11, your-10)
nsubj(has-12, father-11)
conj_and(lost-4, has-12)
dobj(has-12, nothing-13)
aux(do-15, to-14)
vmod(nothing-13, do-15)
nsubj(have-20, we-18)
aux(have-20, shall-19)
conj_and(lost-4, have-20)
conj_and(has-12, have-20)
dobj(have-20, nothing-21)
aux(eat-23, to-22)
vmod(have-20, eat-23)
advmod(eat-23, by-24)
advmod(eat-23, by-26)
conj_and(by-24, by-26)

(ROOT
  (S (`` ``)
    (VP (VB Are)
      (NP (PRP you))
      (ADVP (RB sure))
      (, ,)
      (NP (NN mother)))
    (. ?) ('' '')))

cop(you-3, Are-2)
root(ROOT-0, you-3)
advmod(you-3, sure-4)
dep(you-3, mother-6)

(ROOT
  (FRAG (`` ``)
    (ADJP (VBN Sure)
      (PP (IN of)
        (NP (WP what))))
    (. ?) ('' '')))

root(ROOT-0, Sure-2)
prep_of(Sure-2, what-4)

(ROOT
  (S (`` ``)
    (VP (VB Sure)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (MD shall)
            (VP (VB have)
              (NP (NN nothing))
              (S
                (VP (TO to)
                  (VP (VB eat)))))))))
    (. .) ('' '')))

root(ROOT-0, Sure-2)
mark(have-6, that-3)
nsubj(have-6, we-4)
aux(have-6, shall-5)
ccomp(Sure-2, have-6)
dobj(have-6, nothing-7)
aux(eat-9, to-8)
vmod(have-6, eat-9)

(ROOT
  (S
    (INTJ (`` ``) (UH No))
    (, ,)
    (VP (VB thank)
      (NP (NNP Heaven)))
    (. !)))

discourse(thank-4, No-2)
root(ROOT-0, thank-4)
dobj(thank-4, Heaven-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ sure)
        (PP (IN of)
          (NP (PRP it)))))
    (. .)))

nsubj(sure-4, I-1)
cop(sure-4, 'm-2)
neg(sure-4, not-3)
root(ROOT-0, sure-4)
prep_of(sure-4, it-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hope) (RB not))
    (. .) ('' '')))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
neg(hope-2, not-3)

(ROOT
  (S
    (S (`` ``) (RB Then)
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB understand)
          (NP (PRP it)))))
    (, ,)
    (FRAG
      (NP (NN mother)))
    (. .)))

advmod(understand-6, Then-2)
nsubj(understand-6, I-3)
aux(understand-6, ca-4)
neg(understand-6, n't-5)
root(ROOT-0, understand-6)
dobj(understand-6, it-7)
dep(understand-6, mother-9)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN piece))
          (PP (IN of)
            (NP
              (NP (NN gingerbread))
              (PP (IN in)
                (NP (DT the) (NN basket))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP know))
    (. .) ('' '')))

expl('s-2, There-1)
ccomp(know-12, 's-2)
det(piece-4, a-3)
nsubj('s-2, piece-4)
prep_of(piece-4, gingerbread-6)
det(basket-9, the-8)
prep_in(gingerbread-6, basket-9)
nsubj(know-12, I-11)
root(ROOT-0, know-12)

(ROOT
  (S (`` ``)
    (VP (VB O)
      (NP (PRP you) (JJ little) (NN bird)))
    (. !)))

root(ROOT-0, O-2)
dep(bird-5, you-3)
amod(bird-5, little-4)
dobj(O-2, bird-5)

(ROOT
  (S
    (NP (PRP You))
    (VP
      (VP (VBP have)
        (NP
          (NP (DT no) (JJR more) (NN sense))
          (PP (IN than)
            (NP
              (NP (DT a) (NN sparrow))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ picks)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP it))
                        (VP
                          (VP (VBZ wants))
                          (, ,)
                          (CC and)
                          (VP
                            (ADVP (RB never))
                            (VBZ thinks)
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NN winter))
                                (CC and)
                                (NP (DT the) (NN frost)))))))))))))))
      (CC and)
      (, ,)
      (NP (DT the) (NN snow)))
    (. .) ('' '')))

nsubj(have-2, You-1)
root(ROOT-0, have-2)
neg(sense-5, no-3)
amod(sense-5, more-4)
dobj(have-2, sense-5)
det(sparrow-8, a-7)
prep_than(sense-5, sparrow-8)
nsubj(picks-10, sparrow-8)
rcmod(sparrow-8, picks-10)
dobj(wants-13, what-11)
nsubj(wants-13, it-12)
nsubj(thinks-17, it-12)
ccomp(picks-10, wants-13)
neg(thinks-17, never-16)
ccomp(picks-10, thinks-17)
conj_and(wants-13, thinks-17)
det(winter-20, the-19)
prep_of(thinks-17, winter-20)
det(frost-23, the-22)
prep_of(thinks-17, frost-23)
conj_and(winter-20, frost-23)
cc(have-2, and-24)
det(snow-27, the-26)
dobj(have-2, snow-27)

(ROOT
  (S (`` ``)
    (ADVP (RB Ah))
    (PRN (: --)
      (S
        (VP (VB yes)))
      (: --))
    (NP (PRP I))
    (VP (VBP see))
    (. .)))

advmod(see-7, Ah-2)
parataxis(see-7, yes-4)
nsubj(see-7, I-6)
root(ROOT-0, see-7)

(ROOT
  (SINV
    (S (CC But)
      (NP (DT the) (NNS birds))
      (VP (VBP get)
        (PP (IN through)
          (NP (DT the) (NN winter)))))
    (, ,)
    (VP (VBP do) (RB n't))
    (NP (PRP they))
    (. ?) ('' '')))

cc(get-4, But-1)
det(birds-3, the-2)
nsubj(get-4, birds-3)
ccomp(do-9, get-4)
det(winter-7, the-6)
prep_through(get-4, winter-7)
root(ROOT-0, do-9)
neg(do-9, n't-10)
nsubj(do-9, they-11)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT Some))
      (PP (IN of)
        (NP (PRP them))))
    (VP (VBP fall)
      (ADJP (JJ dead))
      (PP (IN on)
        (NP (DT the) (NN ground))))
    (. .) ('' '')))

nsubj(fall-5, Some-2)
prep_of(Some-2, them-4)
root(ROOT-0, fall-5)
acomp(fall-5, dead-6)
det(ground-9, the-8)
prep_on(fall-5, ground-9)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (MD must)
      (VP (VB die)
        (NP (DT some) (NN time))))
    (. .)))

nsubj(die-4, They-2)
aux(die-4, must-3)
root(ROOT-0, die-4)
det(time-6, some-5)
dobj(die-4, time-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD would) (RB n't)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (NNS birds))
              (ADVP (RB always)))))))
    (. .)))

nsubj(like-4, They-1)
nsubj(birds-7, They-1)
aux(like-4, would-2)
neg(like-4, n't-3)
root(ROOT-0, like-4)
aux(birds-7, to-5)
cop(birds-7, be-6)
xcomp(like-4, birds-7)
advmod(birds-7, always-8)

(ROOT
  (FRAG
    (PP (IN Would)
      (NP (PRP you)))
    (, ,)
    (NP (NN mother))
    (. ?) ('' '')))

prep_would(mother-4, you-2)
root(ROOT-0, mother-4)

(ROOT
  (S (`` ``)
    (X
      (X (WP What))
      (NP (DT a) (NN child)))
    (NP (PRP it))
    (VP (VBZ is))
    (. !) ('' '')))

dep(child-4, What-2)
det(child-4, a-3)
dep(is-6, child-4)
nsubj(is-6, it-5)
root(ROOT-0, is-6)

(ROOT
  (S
    (SINV
      (VP (VBD thought))
      (NP (PRP$ his) (NN mother)))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD said)
        (NP (NN nothing))))
    (. .)))

root(ROOT-0, thought-1)
poss(mother-3, his-2)
nsubj(thought-1, mother-3)
nsubj(said-7, she-6)
conj_but(thought-1, said-7)
dobj(said-7, nothing-8)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (S
      (ADVP (RB now))
      (NP (PRP I))
      (VP (VBP remember)))
    (, ,) ('' '')
    (NP (NNP Diamond))
    (VP (VBD went)
      (PRT (RP on)))
    (. .)))

advmod(remember-3, now-1)
nsubj(remember-3, I-2)
ccomp(went-7, remember-3)
nsubj(went-7, Diamond-6)
root(ROOT-0, went-7)
prt(went-7, on-8)

(ROOT
  (S (`` ``)
    (NP (NNP Father))
    (VP (VBD told)
      (NP (PRP me))
      (SBAR (IN that)
        (S
          (NP (NN day))
          (NP (PRP I))
          (VP (VBD went)
            (PP (TO to)
              (NP (NNP Epping) (NNP Forest)))
            (PP (IN with)
              (NP (PRP him)))
            (, ,)
            (SBAR (IN that)
              (S
                (NP
                  (NP
                    (NP (DT the) (NNS rose-bushes))
                    (, ,)
                    (CC and)
                    (NP (DT the) (NNS may-bushes))
                    (, ,))
                  (CC and)
                  (NP (DT the) (NNS holly-bushes)))
                (VP (VBD were)
                  (NP
                    (NP (DT the) (NN bird) (POS 's))
                    (NNS barns))
                  (, ,)
                  (SBAR (IN for)
                    (S
                      (NP (EX there))
                      (VP (VBD were)
                        (UCP
                          (NP (DT the) (NNS hips))
                          (, ,)
                          (CC and)
                          (ADVP
                            (NP
                              (NP (DT the) (NNS haws))
                              (, ,)
                              (CC and)
                              (NP (DT the) (NNS holly-berries))
                              (, ,))
                            (RB all))
                          (ADJP (JJ ready)
                            (PP (IN for)
                              (NP (DT the) (NN winter)))))))))))))))
    (. .) ('' '')))

nsubj(told-3, Father-2)
root(ROOT-0, told-3)
dobj(told-3, me-4)
mark(went-8, that-5)
tmod(went-8, day-6)
nsubj(went-8, I-7)
ccomp(told-3, went-8)
nn(Forest-11, Epping-10)
prep_to(went-8, Forest-11)
prep_with(went-8, him-13)
mark(barns-30, that-15)
det(rose-bushes-17, the-16)
nsubj(barns-30, rose-bushes-17)
det(may-bushes-21, the-20)
conj_and(rose-bushes-17, may-bushes-21)
nsubj(barns-30, may-bushes-21)
det(holly-bushes-25, the-24)
conj_and(rose-bushes-17, holly-bushes-25)
nsubj(barns-30, holly-bushes-25)
cop(barns-30, were-26)
det(bird-28, the-27)
poss(barns-30, bird-28)
ccomp(went-8, barns-30)
mark(were-34, for-32)
expl(were-34, there-33)
advcl(barns-30, were-34)
det(hips-36, the-35)
nsubj(were-34, hips-36)
det(haws-40, the-39)
npadvmod(all-46, haws-40)
det(holly-berries-44, the-43)
conj_and(haws-40, holly-berries-44)
npadvmod(all-46, holly-berries-44)
advmod(ready-47, all-46)
nsubj(were-34, ready-47)
conj_and(hips-36, ready-47)
det(winter-50, the-49)
prep_for(ready-47, winter-50)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (: ;)
    (S
      (NP (DT that))
      (VP (VBZ 's) (RB all)
        (ADJP (RB very) (JJ true))))
    (. .)))

advmod(true-8, Yes-2)
nsubj(true-8, that-4)
cop(true-8, 's-5)
advmod(true-8, all-6)
advmod(true-8, very-7)
root(ROOT-0, true-8)

(ROOT
  (S (IN So)
    (NP (PRP you))
    (VP (VBP see)
      (SBAR
        (S
          (NP (DT the) (NNS birds))
          (VP (VBP are)
            (VP (VBN provided)
              (PP (IN for)))))))
    (. .)))

dep(see-3, So-1)
nsubj(see-3, you-2)
root(ROOT-0, see-3)
det(birds-5, the-4)
nsubjpass(provided-7, birds-5)
auxpass(provided-7, are-6)
ccomp(see-3, provided-7)
prep(provided-7, for-8)

(ROOT
  (S (CC But)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP
          (NP (DT no) (JJ such) (NNS barns))
          (PP (IN for)
            (NP (PRP you))))
        (CC and)
        (NP
          (NP (PRP me))
          (, ,)
          (NP (NNP Diamond)))))
    (. .) ('' '')))

cc(are-3, But-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
neg(barns-6, no-4)
amod(barns-6, such-5)
nsubj(are-3, barns-6)
prep_for(barns-6, you-8)
nsubj(are-3, me-10)
conj_and(barns-6, me-10)
appos(me-10, Diamond-12)

(ROOT
  (S (`` ``)
    (VP (VB Ai)
      (ADVP (RB n't) (RB there)))
    (. ?) ('' '')))

root(ROOT-0, Ai-2)
dep(there-4, n't-3)
advmod(Ai-2, there-4)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN got)
        (S
          (VP (TO to)
            (VP (VB work)
              (PP (IN for)
                (NP (PRP$ our) (NN bread))))))))
    (. .) ('' '')))

nsubj(got-3, We-1)
nsubj(work-5, We-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
aux(work-5, to-4)
xcomp(got-3, work-5)
poss(bread-8, our-7)
prep_for(work-5, bread-8)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (VP (VB let)
        (S
          (NP (POS 's))
          (VP (VB go)
            (CC and)
            (VB work)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (, ,)
    (S
      (VP (VBG getting)
        (PRT (RP up))))
    (. .)))

advmod(let-3, Then-2)
ccomp(said-10, let-3)
nsubj(go-5, 's-4)
nsubj(work-7, 's-4)
ccomp(let-3, go-5)
ccomp(let-3, work-7)
conj_and(go-5, work-7)
root(ROOT-0, said-10)
nsubj(said-10, Diamond-11)
vmod(said-10, getting-13)
prt(getting-13, up-14)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT no) (NN use)))
    (. .)))

nsubj(use-5, It-2)
cop(use-5, 's-3)
neg(use-5, no-4)
root(ROOT-0, use-5)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've) (RB not)
      (VP (VBN got)
        (NP (NN anything))
        (S
          (VP (TO to)
            (VP (VB do))))))
    (. .) ('' '')))

nsubj(got-4, We-1)
aux(got-4, 've-2)
neg(got-4, not-3)
root(ROOT-0, got-4)
dobj(got-4, anything-5)
aux(do-7, to-6)
vmod(got-4, do-7)

(ROOT
  (S (`` ``) (RB Then)
    (VP (VBP let)
      (S
        (NP (POS 's))
        (VP (VB wait))))
    (. .) ('' '')))

advmod(let-3, Then-2)
root(ROOT-0, let-3)
nsubj(wait-5, 's-4)
ccomp(let-3, wait-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP we))
    (VP (MD shall)
      (VP (VB starve)))
    (. .) ('' '')))

advmod(starve-5, Then-2)
nsubj(starve-5, we-3)
aux(starve-5, shall-4)
root(ROOT-0, starve-5)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT the) (NN basket)))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(basket-4, the-3)
nsubj('s-2, basket-4)

(ROOT
  (S
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP know) (, ,)
            (NP (NN mother))
            (, ,)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP think)
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (MD shall)
                        (VP (VB call)
                          (NP (DT that) (NN basket))
                          (NP (DT the) (NN barn)))))))))))))
    (. .) ('' '')))

root(ROOT-0, Do-1)
nsubj(know-3, you-2)
ccomp(Do-1, know-3)
dobj(know-3, mother-5)
nsubj(think-8, I-7)
dep(know-3, think-8)
nsubj(call-11, I-9)
aux(call-11, shall-10)
ccomp(think-8, call-11)
det(basket-13, that-12)
iobj(call-11, basket-13)
det(barn-15, the-14)
dobj(call-11, barn-15)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP (DT a)
        (ADJP (RB very) (JJ big))
        (NN one)))
    (. .)))

nsubj(one-8, It-2)
cop(one-8, 's-3)
neg(one-8, not-4)
det(one-8, a-5)
advmod(big-7, very-6)
amod(one-8, big-7)
root(ROOT-0, one-8)

(ROOT
  (S (CC And)
    (SBAR
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (JJ empty)))))
      (: --)
      (PRN
        (FRAG
          (WHADVP (WRB where)))))
    (VP (VBP are)
      (NP (PRP we))
      (ADVP (RB then)))
    (. ?) ('' '')))

cc(we-9, And-1)
advmod(empty-5, when-2)
nsubj(empty-5, it-3)
cop(empty-5, 's-4)
advcl(we-9, empty-5)
csubj(we-9, empty-5)
dep(empty-5, where-7)
cop(we-9, are-8)
root(ROOT-0, we-9)
advmod(we-9, then-10)

(ROOT
  (SINV (`` ``)
    (FRAG
      (PP (IN At)
        (NP
          (NP (NN auntie) (POS 's))
          (NN cupboard))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Diamond) (NNP promptly))
    (. .)))

dep(returned-8, At-2)
poss(cupboard-5, auntie-3)
pobj(At-2, cupboard-5)
root(ROOT-0, returned-8)
nn(promptly-10, Diamond-9)
nsubj(returned-8, promptly-10)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP we))
    (VP (MD ca) (RB n't)
      (VP
        (VP (VB eat)
          (NP
            (NP (NN auntie) (POS 's))
            (NNS things))
          (ADVP (DT all) (RB up)))
        (CC and)
        (VP (VB leave)
          (S
            (NP (PRP her))
            (VP (TO to)
              (VP (VB starve)))))))
    (. .) ('' '')))

nsubj(eat-6, we-3)
nsubj(leave-13, we-3)
aux(eat-6, ca-4)
neg(eat-6, n't-5)
root(ROOT-0, eat-6)
poss(things-9, auntie-7)
dobj(eat-6, things-9)
dep(up-11, all-10)
advmod(eat-6, up-11)
conj_and(eat-6, leave-13)
dobj(leave-13, her-14)
nsubj(starve-16, her-14)
aux(starve-16, to-15)
xcomp(leave-13, starve-16)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No) (, ,) (UH no))
    (. .)))

root(ROOT-0, No-2)
dep(No-2, no-4)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD 'll)
      (VP (VB go)
        (ADVP (RB back)
          (PP (TO to)
            (NP (NN father))))
        (PP (IN before)
          (NP (DT that)))))
    (. .)))

nsubj(go-3, We-1)
aux(go-3, 'll-2)
root(ROOT-0, go-3)
advmod(go-3, back-4)
prep_to(back-4, father-6)
prep_before(go-3, that-8)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD 'll)
      (VP (VB have)
        (VP (VBN found)
          (PP
            (ADVP
              (NP (DT a) (NN cupboard))
              (RB somewhere))
            (IN by)
            (NP (DT that) (NN time))))))
    (. .) ('' '')))

nsubj(found-4, He-1)
aux(found-4, 'll-2)
aux(found-4, have-3)
root(ROOT-0, found-4)
det(cupboard-6, a-5)
npadvmod(somewhere-7, cupboard-6)
advmod(found-4, somewhere-7)
det(time-10, that-9)
prep_by(found-4, time-10)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (NP (DT that))))
    (. ?) ('' '')))

advmod(know-5, How-2)
aux(know-5, do-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
dobj(know-5, that-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP (PRP it))))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
dobj(know-5, it-6)

(ROOT
  (S (CC But)
    (S
      (NP (PRP I))
      (VP (VBP have) (RB n't)
        (VP (VBN got)
          (ADVP (RB even)
            (NP (DT a) (NN cupboard))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (ADVP (RB always))
        (VP (VBN had)
          (NP (RB plenty))
          (S
            (VP (TO to)
              (VP (VB eat)))))))
    (. .)))

nsubj(got-5, I-2)
aux(got-5, have-3)
neg(got-5, n't-4)
root(ROOT-0, got-5)
advmod(got-5, even-6)
det(cupboard-8, a-7)
pobj(even-6, cupboard-8)
nsubj(had-14, I-11)
aux(had-14, 've-12)
advmod(had-14, always-13)
conj_and(got-5, had-14)
dobj(had-14, plenty-15)
aux(eat-17, to-16)
vmod(had-14, eat-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN heard)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP say)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD had)
                    (NP (RB too) (RB much))
                    (, ,)
                    (ADVP (RB sometimes))))))))))
    (. .) ('' '')))

nsubj(heard-3, I-1)
aux(heard-3, 've-2)
root(ROOT-0, heard-3)
nsubj(say-5, you-4)
ccomp(heard-3, say-5)
nsubj(had-7, I-6)
ccomp(say-5, had-7)
advmod(much-9, too-8)
dobj(had-7, much-9)
advmod(had-7, sometimes-11)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBP tell)
      (NP (PRP you))
      (SBAR (IN that)
        (S
          (VP (VBZ 's)
            (SBAR (IN because)
              (S
                (NP (PRP I))
                (VP (VBP 've)
                  (VP (VBN had)
                    (NP
                      (NP (DT a) (NN cupboard))
                      (PP (IN for)
                        (NP
                          (NP (PRP you))
                          (, ,)
                          (NP (NN child)))))))))))))
    (. .) ('' '')))

cc(tell-4, But-2)
nsubj(tell-4, I-3)
root(ROOT-0, tell-4)
dobj(tell-4, you-5)
mark('s-7, that-6)
ccomp(tell-4, 's-7)
mark(had-11, because-8)
nsubj(had-11, I-9)
aux(had-11, 've-10)
advcl('s-7, had-11)
det(cupboard-13, a-12)
dobj(had-11, cupboard-13)
prep_for(cupboard-13, you-15)
appos(you-15, child-17)

(ROOT
  (S (`` ``)
    (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP$ yours))
        (VP (VBD was)
          (ADJP (JJ empty)))))
    (, ,)
    (NP (NN auntie))
    (VP (VBD opened)
      (NP (NNS hers)))
    (. .) ('' '')))

cc(opened-9, And-2)
advmod(empty-6, when-3)
nsubj(empty-6, yours-4)
cop(empty-6, was-5)
advcl(opened-9, empty-6)
nsubj(opened-9, auntie-8)
root(ROOT-0, opened-9)
dobj(opened-9, hers-10)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (DT that))
    (VP (MD ca) (RB n't)
      (VP (VB go)
        (PRT (RP on))))
    (. .) ('' '')))

cc(go-6, But-2)
nsubj(go-6, that-3)
aux(go-6, ca-4)
neg(go-6, n't-5)
root(ROOT-0, go-6)
prt(go-6, on-7)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)))
    (. ?)))

advmod(know-5, How-2)
aux(know-5, do-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (EX there))
          (VP (MD must)
            (VP
              (VP (VB be)
                (ADVP
                  (ADVP
                    (NP (DT a) (JJ big) (NNS cupboard))
                    (RB somewhere))
                  (, ,)
                  (ADVP (RB out)
                    (SBAR
                      (WHPP (IN of)
                        (WHNP (WDT which)))
                      (S
                        (NP (DT the) (JJ little) (NNS cupboards))
                        (VP (VBP are)
                          (VP (VBN filled))))))))
              (PRN (, ,)
                (S
                  (NP (PRP you))
                  (VP (VBP know)))
                (, ,))
              (NP (NN mother)))))))
    (. .) ('' '')))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
expl(be-5, there-3)
aux(be-5, must-4)
ccomp(think-2, be-5)
det(cupboard-8, a-6)
amod(cupboard-8, big-7)
npadvmod(somewhere-9, cupboard-8)
advmod(be-5, somewhere-9)
advmod(somewhere-9, out-11)
prep_of(filled-18, which-13)
det(cupboards-16, the-14)
amod(cupboards-16, little-15)
nsubjpass(filled-18, cupboards-16)
auxpass(filled-18, are-17)
dep(out-11, filled-18)
nsubj(know-21, you-20)
parataxis(be-5, know-21)
dobj(be-5, mother-23)
nsubj(be-5, mother-23)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Well))
      (, ,)
      (NP (PRP I))
      (VP (VBP wish)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD could)
              (VP (VB find)
                (NP
                  (NP (DT the) (NN door))
                  (WHPP (IN of)
                    (WHNP (WDT that) (NN cupboard))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN mother))
    (. .)))

advmod(wish-5, Well-2)
nsubj(wish-5, I-4)
ccomp(said-16, wish-5)
nsubj(find-8, I-6)
aux(find-8, could-7)
ccomp(wish-5, find-8)
det(door-10, the-9)
dobj(find-8, door-10)
det(cupboard-13, that-12)
prep_of(door-10, cupboard-13)
root(ROOT-0, said-16)
poss(mother-18, his-17)
nsubj(said-16, mother-18)

(ROOT
  (S (CC But)
    (NP (DT the) (JJ same) (NN moment))
    (NP (PRP she))
    (VP
      (VP (VBD stopped))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADJP (JJ silent))
        (PP (IN for)
          (NP (DT a) (JJ good) (NN while)))))
    (. .)))

det(moment-4, the-2)
amod(moment-4, same-3)
nsubj(stopped-6, moment-4)
nsubj(silent-10, moment-4)
nsubj(stopped-6, she-5)
root(ROOT-0, stopped-6)
cop(silent-10, was-9)
conj_and(stopped-6, silent-10)
det(while-14, a-12)
amod(while-14, good-13)
prep_for(silent-10, while-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB tell)
          (SBAR (IN whether)
            (S
              (NP (NNP Diamond))
              (VP (VBD knew)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP she))
                    (VP (VBD was)
                      (VP (VBG thinking)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP know))))))
    (. .)))

nsubj(tell-4, I-1)
aux(tell-4, can-2)
neg(tell-4, not-3)
root(ROOT-0, tell-4)
mark(knew-7, whether-5)
nsubj(knew-7, Diamond-6)
ccomp(tell-4, knew-7)
dobj(thinking-11, what-8)
nsubj(thinking-11, she-9)
aux(thinking-11, was-10)
ccomp(knew-7, thinking-11)
nsubj(think-15, I-14)
conj_but(tell-4, think-15)
nsubj(know-17, I-16)
ccomp(think-15, know-17)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (VP (VBN heard)
        (NP
          (NP
            (NP (NN something))
            (PP (IN at)
              (NP
                (NP
                  (NP (NN church))
                  (NP (DT the) (NN day))
                  (ADVP (IN before)))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD came)
                      (ADVP (RB back))
                      (PP (IN upon)
                        (NP (PRP her)))))))))
          (: --)
          (NP
            (NP (NN something))
            (PP (IN like)
              (NP
                (NP (DT this))
                (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP she))
                    (VP (VBD had)
                      (VP (RB n't)
                        (S
                          (VP (TO to)
                            (VP (VB eat)
                              (PP
                                (PP (IN for)
                                  (NP (NN tomorrow)))
                                (CONJP (RB as) (RB well) (IN as))
                                (PP (IN for)
                                  (NP (NN to-day))))))))))))))
          (: ;)
          (CC and)
          (NP
            (NP (DT that))
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD was) (RB not)
                  (VP (VBD wanted)
                    (SBAR
                      (S
                        (VP (MD could) (RB n't)
                          (VP (VB be)
                            (VP (VBN missed))))))))))))))
    (. .)))

nsubj(heard-3, She-1)
aux(heard-3, had-2)
root(ROOT-0, heard-3)
dobj(heard-3, something-4)
prep_at(something-4, church-6)
nsubj(came-12, church-6)
det(day-8, the-7)
dep(church-6, day-8)
advmod(church-6, before-9)
rcmod(church-6, came-12)
advmod(came-12, back-13)
prep_upon(came-12, her-15)
dobj(heard-3, something-17)
conj_and(something-4, something-17)
prep_like(something-17, this-19)
mark(n't-24, that-21)
nsubj(n't-24, she-22)
nsubj(eat-26, she-22)
aux(n't-24, had-23)
dep(this-19, n't-24)
aux(eat-26, to-25)
xcomp(n't-24, eat-26)
prep_for(eat-26, tomorrow-28)
prep_for(eat-26, to-day-33)
conj_and(tomorrow-28, to-day-33)
dobj(heard-3, that-36)
conj_and(something-4, that-36)
nsubjpass(wanted-40, that-36)
auxpass(wanted-40, was-38)
neg(wanted-40, not-39)
rcmod(that-36, wanted-40)
aux(missed-44, could-41)
neg(missed-44, n't-42)
auxpass(missed-44, be-43)
ccomp(wanted-40, missed-44)

(ROOT
  (S
    (S
      (ADVP (RB So))
      (, ,)
      (PP (RB instead) (IN of)
        (S
          (VP (VBG saying)
            (NP (NN anything) (JJR more)))))
      (, ,)
      (NP (PRP she))
      (VP (VBD stretched)
        (PRT (RP out))
        (NP (PRP$ her) (NN hand))
        (PP (IN for)
          (NP (DT the) (NN basket)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she)
        (CC and)
        (NNP Diamond))
      (VP (VBD had)
        (NP (PRP$ their) (NN dinner))))
    (. .)))

advmod(stretched-10, So-1)
prepc_instead_of(stretched-10, saying-5)
dep(more-7, anything-6)
dobj(saying-5, more-7)
nsubj(stretched-10, she-9)
root(ROOT-0, stretched-10)
prt(stretched-10, out-11)
poss(hand-13, her-12)
dobj(stretched-10, hand-13)
det(basket-16, the-15)
prep_for(stretched-10, basket-16)
nsubj(had-22, she-19)
conj_and(she-19, Diamond-21)
nsubj(had-22, Diamond-21)
conj_and(stretched-10, had-22)
poss(dinner-24, their-23)
dobj(had-22, dinner-24)

(ROOT
  (S (CC And)
    (NP (NNP Diamond))
    (VP (VBD did)
      (VP (VB enjoy)
        (NP (PRP it))))
    (. .)))

cc(enjoy-4, And-1)
nsubj(enjoy-4, Diamond-2)
aux(enjoy-4, did-3)
root(ROOT-0, enjoy-4)
dobj(enjoy-4, it-5)

(ROOT
  (S (IN For)
    (S
      (NP
        (NP (DT the) (NN drive))
        (CC and)
        (NP (DT the) (JJ fresh) (NN air)))
      (VP (VBD had)
        (VP (VBN made)
          (S
            (NP (PRP him))
            (ADJP (RB quite) (JJ hungry))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD did) (RB not)))
    (, ,)
    (PP (IN like)
      (NP
        (NP (PRP$ his) (NN mother))
        (, ,)
        (NP
          (NP (NN trouble))
          (SBAR
            (WHNP
              (NP (PRP himself))
              (WHPP (IN about)
                (WHNP (WP what))))
            (S
              (NP (PRP they))
              (VP (MD should)
                (VP (VB dine)
                  (PRT (RP off))
                  (NP (DT that) (NN day) (NN week)))))))))
    (. .)))

dep(made-9, For-1)
det(drive-3, the-2)
nsubj(made-9, drive-3)
det(air-7, the-5)
amod(air-7, fresh-6)
conj_and(drive-3, air-7)
nsubj(made-9, air-7)
aux(made-9, had-8)
root(ROOT-0, made-9)
nsubj(hungry-12, him-10)
advmod(hungry-12, quite-11)
xcomp(made-9, hungry-12)
nsubj(did-16, he-15)
conj_and(made-9, did-16)
neg(did-16, not-17)
conj_and(made-9, like-19)
poss(mother-21, his-20)
prep_like(made-9, mother-21)
appos(mother-21, trouble-23)
prep_about(himself-24, trouble-23)
det(week-33, trouble-23)
dobj(dine-29, himself-24)
nsubj(dine-29, they-27)
aux(dine-29, should-28)
rcmod(trouble-23, dine-29)
prt(dine-29, off-30)
nn(week-33, day-32)
tmod(dine-29, week-33)

(ROOT
  (S
    (S
      (NP (DT The) (NN fact))
      (VP (VBD was)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN lived)
                (ADVP (RB so) (RB long))
                (PP (IN without)
                  (NP
                    (NP (DT any) (NN food))
                    (ADVP (IN at) (DT all))))
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN back))
                    (PP (IN of)
                      (NP (DT the) (NN north) (NN wind)))))
                (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBD knew)
                      (ADVP (RB quite) (RB well))
                      (SBAR (IN that)
                        (S
                          (NP (NN food))
                          (VP (VBD was) (RB not)
                            (ADJP (JJ essential)
                              (PP (TO to)
                                (NP (NN existence))))))))))))))))
    (: ;)
    (S
      (NP
        (NP (DT that))
        (PP (IN in)
          (NP (NN fact))))
      (, ,)
      (PP (IN under)
        (NP (JJ certain) (NNS circumstances)))
      (, ,)
      (NP (NNS people))
      (VP (MD could)
        (VP (VB live)
          (PP (IN without)
            (NP (PRP it)))
          (ADVP (RB well) (RB enough)))))
    (. .)))

det(fact-2, The-1)
nsubj(was-3, fact-2)
root(ROOT-0, was-3)
nsubj(lived-6, he-4)
aux(lived-6, had-5)
ccomp(was-3, lived-6)
advmod(long-8, so-7)
advmod(lived-6, long-8)
det(food-11, any-10)
prep_without(lived-6, food-11)
advmod(food-11, at-12)
pobj(at-12, all-13)
det(back-16, the-15)
prep_at(lived-6, back-16)
det(wind-20, the-18)
nn(wind-20, north-19)
prep_of(back-16, wind-20)
mark(knew-24, that-22)
nsubj(knew-24, he-23)
ccomp(lived-6, knew-24)
advmod(well-26, quite-25)
advmod(knew-24, well-26)
mark(essential-31, that-27)
nsubj(essential-31, food-28)
cop(essential-31, was-29)
neg(essential-31, not-30)
ccomp(knew-24, essential-31)
prep_to(essential-31, existence-33)
nsubj(live-45, that-35)
prep_in(that-35, fact-37)
amod(circumstances-41, certain-40)
prep_under(live-45, circumstances-41)
nsubj(live-45, people-43)
aux(live-45, could-44)
parataxis(was-3, live-45)
prep_without(live-45, it-47)
advmod(enough-49, well-48)
advmod(live-45, enough-49)

(ROOT
  (S
    (NP (PRP$ His) (NN mother))
    (VP (VBD did) (RB not)
      (VP (VB speak)
        (NP (RB much))
        (PP (IN during)
          (NP (PRP$ their) (NN dinner)))))
    (. .)))

poss(mother-2, His-1)
nsubj(speak-5, mother-2)
aux(speak-5, did-3)
neg(speak-5, not-4)
root(ROOT-0, speak-5)
dobj(speak-5, much-6)
poss(dinner-9, their-8)
prep_during(speak-5, dinner-9)

(ROOT
  (S
    (S
      (SBAR (IN After)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (RP over)))))
      (NP (PRP she))
      (VP (VBD helped)
        (S
          (NP (PRP him))
          (VP (TO to)
            (VP (VB walk)
              (NP
                (QP (RB about) (DT a) (JJ little))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD was)
          (ADJP (RB not) (JJ able))
          (PP (IN for)
            (NP (RB much))))
        (CC and)
        (VP
          (ADVP (RB soon))
          (VBD got)
          (ADJP (JJ tired)))))
    (. .)))

mark(over-4, After-1)
nsubj(over-4, it-2)
cop(over-4, was-3)
advcl(helped-6, over-4)
nsubj(helped-6, she-5)
root(ROOT-0, helped-6)
dobj(helped-6, him-7)
nsubj(walk-9, him-7)
aux(walk-9, to-8)
xcomp(helped-6, walk-9)
quantmod(little-12, about-10)
quantmod(little-12, a-11)
dobj(walk-9, little-12)
nsubj(able-18, he-15)
nsubj(tired-24, he-15)
cop(able-18, was-16)
neg(able-18, not-17)
conj_but(helped-6, able-18)
prep(able-18, for-19)
pobj(for-19, much-20)
advmod(tired-24, soon-22)
dep(tired-24, got-23)
conj_but(helped-6, tired-24)
conj_and(able-18, tired-24)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD did) (RB not)
      (VP (VB get)
        (NP (NN fretful))
        (, ,)
        (ADVP (RB though))))
    (. .)))

nsubj(get-4, He-1)
aux(get-4, did-2)
neg(get-4, not-3)
root(ROOT-0, get-4)
dobj(get-4, fretful-5)
advmod(get-4, though-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (RB too) (JJ glad))
      (PP (IN of)
        (S
          (VP (VBG having)
            (NP
              (NP (DT the) (NN sun))
              (CC and)
              (NP (DT the) (NN wind)))
            (ADVP (RB again)))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB fret)
            (SBAR (IN because)
              (S
                (NP (PRP he))
                (VP (MD could) (RB not)
                  (VP (VB run)
                    (PRT (RP about))))))))))
    (. .)))

nsubj(glad-4, He-1)
nsubj(fret-15, He-1)
cop(glad-4, was-2)
advmod(glad-4, too-3)
root(ROOT-0, glad-4)
prepc_of(glad-4, having-6)
det(sun-8, the-7)
dobj(having-6, sun-8)
det(wind-11, the-10)
dobj(having-6, wind-11)
conj_and(sun-8, wind-11)
advmod(having-6, again-12)
aux(fret-15, to-14)
xcomp(glad-4, fret-15)
mark(run-20, because-16)
nsubj(run-20, he-17)
aux(run-20, could-18)
neg(run-20, not-19)
advcl(fret-15, run-20)
prt(run-20, about-21)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD lay)
        (PRT (RP down))
        (PP (IN on)
          (NP (DT the) (JJ dry) (NN sand)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NN mother))
      (VP (VBD covered)
        (NP (PRP him))
        (PP (IN with)
          (NP (DT a) (NN shawl)))))
    (. .)))

nsubj(lay-2, He-1)
root(ROOT-0, lay-2)
prt(lay-2, down-3)
det(sand-7, the-5)
amod(sand-7, dry-6)
prep_on(lay-2, sand-7)
poss(mother-11, his-10)
nsubj(covered-12, mother-11)
conj_and(lay-2, covered-12)
dobj(covered-12, him-13)
det(shawl-16, a-15)
prep_with(covered-12, shawl-16)

(ROOT
  (S
    (NP (PRP She))
    (ADVP (RB then))
    (VP
      (VP (VBD sat)
        (PP (IN by)
          (NP (PRP$ his) (NN side))))
      (, ,)
      (CC and)
      (VP (VBD took)
        (NP
          (NP (DT a) (NN bit))
          (PP (IN of)
            (NP (NN work))))
        (PP (IN from)
          (NP (PRP$ her) (NN pocket)))))
    (. .)))

nsubj(sat-3, She-1)
nsubj(took-9, She-1)
advmod(sat-3, then-2)
root(ROOT-0, sat-3)
poss(side-6, his-5)
prep_by(sat-3, side-6)
conj_and(sat-3, took-9)
det(bit-11, a-10)
dobj(took-9, bit-11)
prep_of(bit-11, work-13)
poss(pocket-16, her-15)
prep_from(took-9, pocket-16)

(ROOT
  (S (CC But)
    (NP (NNP Diamond))
    (VP
      (VP
        (VP (VBD felt)
          (PP (RB rather)
            (ADJP (JJ sleepy))))
        (, ,)
        (CC and)
        (VP (VBN turned)
          (PP (IN on)
            (NP (PRP$ his) (NN side)))))
      (CC and)
      (VP (VBD gazed)
        (ADVP (RB sleepily))
        (PP (IN over)
          (NP (DT the) (NN sand)))))
    (. .)))

nsubj(felt-3, Diamond-2)
nsubj(turned-8, Diamond-2)
nsubj(gazed-13, Diamond-2)
root(ROOT-0, felt-3)
prep(felt-3, rather-4)
pobj(rather-4, sleepy-5)
conj_and(felt-3, turned-8)
poss(side-11, his-10)
prep_on(turned-8, side-11)
conj_and(felt-3, gazed-13)
advmod(gazed-13, sleepily-14)
det(sand-17, the-16)
prep_over(gazed-13, sand-17)

(ROOT
  (S
    (ADVP
      (NP (DT A) (JJ few) (NNS yards))
      (RB off))
    (NP (PRP he))
    (VP (VBD saw)
      (NP (NN something) (NN fluttering)))
    (. .)))

det(yards-3, A-1)
amod(yards-3, few-2)
npadvmod(off-4, yards-3)
advmod(saw-6, off-4)
nsubj(saw-6, he-5)
root(ROOT-0, saw-6)
nn(fluttering-8, something-7)
dobj(saw-6, fluttering-8)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT that))
        (, ,)
        (NP (NN mother))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
nsubj(What-2, that-4)
appos(that-4, mother-6)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (NP
      (NP
        (QP (RB Only) (DT a) (NN bit)))
      (PP (IN of)
        (NP (NN paper))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

quantmod(bit-4, Only-2)
quantmod(bit-4, a-3)
nsubj(answered-10, bit-4)
prep_of(bit-4, paper-6)
nsubj(answered-10, she-9)
root(ROOT-0, answered-10)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP It))
        (VP (VBZ flutters)
          (SBAR
            (S
              (NP
                (NP
                  (QP (JJR more) (IN than) (DT a) (NN bit)))
                (PP (IN of)
                  (NP (NN paper))))
              (VP (MD would))))))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VBP think))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(flutters-3, It-2)
ccomp(said-16, flutters-3)
mwe(than-5, more-4)
quantmod(bit-7, than-5)
quantmod(bit-7, a-6)
nsubj(would-10, bit-7)
prep_of(bit-7, paper-9)
ccomp(flutters-3, would-10)
nsubj(think-13, I-12)
parataxis(flutters-3, think-13)
root(ROOT-0, said-16)
nsubj(said-16, Diamond-17)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB go)
          (CC and)
          (VB see)
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP like)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN mother))
    (. .)))

nsubj(go-4, I-2)
nsubj(see-6, I-2)
aux(go-4, 'll-3)
ccomp(said-12, go-4)
conj_and(go-4, see-6)
ccomp(said-12, see-6)
mark(like-9, if-7)
nsubj(like-9, you-8)
advcl(go-4, like-9)
root(ROOT-0, said-12)
poss(mother-14, his-13)
nsubj(said-12, mother-14)

(ROOT
  (S (`` ``)
    (NP (PRP$ My) (NNS eyes))
    (VP (VBP are)
      (NP
        (NP (NN none))
        (PP (IN of)
          (NP (DT the) (JJS best)))))
    (. .) ('' '')))

poss(eyes-3, My-2)
nsubj(none-5, eyes-3)
cop(none-5, are-4)
root(ROOT-0, none-5)
det(best-8, the-7)
prep_of(none-5, best-8)

(ROOT
  (S (IN So)
    (NP (PRP she))
    (VP
      (VP (VBD rose))
      (CC and)
      (VP
        (VP (VBD went))
        (CC and)
        (VP (VBD found)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBD were)
                (NP (DT both) (NN right))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (NP (DT a) (JJ little) (NN book))
                      (, ,)
                      (ADVP (RB partly))
                      (VP (VBN buried)
                        (PP (IN in)
                          (NP (DT the) (NN sand)))))))))))))
    (. .)))

dep(rose-3, So-1)
nsubj(rose-3, she-2)
nsubj(went-5, she-2)
root(ROOT-0, rose-3)
conj_and(rose-3, went-5)
conj_and(rose-3, found-7)
conj_and(went-5, found-7)
mark(right-12, that-8)
nsubj(right-12, they-9)
cop(right-12, were-10)
det(right-12, both-11)
ccomp(found-7, right-12)
mark(buried-22, for-14)
nsubjpass(buried-22, it-15)
auxpass(buried-22, was-16)
cop(buried-22, was-16)
det(book-19, a-17)
amod(book-19, little-18)
dep(buried-22, book-19)
advmod(buried-22, partly-21)
advcl(right-12, buried-22)
det(sand-25, the-24)
prep_in(buried-22, sand-25)

(ROOT
  (S (CC But)
    (S
      (NP
        (NP (JJ several))
        (PP (IN of)
          (NP (PRP$ its) (NNS leaves))))
      (VP (VBD were)
        (ADJP (JJ clear)
          (PP (IN of)
            (NP (DT the) (NN sand))))))
    (, ,)
    (CC and)
    (S
      (NP (DT these) (DT the) (NN wind))
      (VP (VBD kept)
        (S
          (VP (VBG blowing)
            (PRT (RP about))
            (PP (IN in)
              (NP (DT a)
                (ADJP (RB very) (JJ flutterful))
                (NN manner)))))))
    (. .)))

nsubj(clear-7, several-2)
poss(leaves-5, its-4)
prep_of(several-2, leaves-5)
cop(clear-7, were-6)
root(ROOT-0, clear-7)
det(sand-10, the-9)
prep_of(clear-7, sand-10)
predet(wind-15, these-13)
det(wind-15, the-14)
nsubj(kept-16, wind-15)
conj_and(clear-7, kept-16)
xcomp(kept-16, blowing-17)
prt(blowing-17, about-18)
det(manner-23, a-20)
advmod(flutterful-22, very-21)
amod(manner-23, flutterful-22)
prep_in(blowing-17, manner-23)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD took)
        (NP (PRP it))
        (PRT (RP up)))
      (CC and)
      (VP (VBD brought)
        (NP (PRP it))
        (PP (TO to)
          (NP (NNP Diamond)))))
    (. .)))

nsubj(took-2, She-1)
nsubj(brought-6, She-1)
root(ROOT-0, took-2)
dobj(took-2, it-3)
prt(took-2, up-4)
conj_and(took-2, brought-6)
dobj(brought-6, it-7)
prep_to(brought-6, Diamond-9)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (, ,)
        (NP (NN mother))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
nsubj(What-2, it-4)
appos(it-4, mother-6)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)

(ROOT
  (S (`` ``)
    (S
      (NP (DT Some) (NN nursery))
      (VP (VBZ rhymes) (, ,)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP think))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

det(nursery-3, Some-2)
nsubj(rhymes-4, nursery-3)
ccomp(answered-11, rhymes-4)
nsubj(think-7, I-6)
ccomp(rhymes-4, think-7)
nsubj(answered-11, she-10)
root(ROOT-0, answered-11)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (RB too) (JJ sleepy))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Diamond))
    (. .)))

nsubj(sleepy-5, I-2)
cop(sleepy-5, 'm-3)
advmod(sleepy-5, too-4)
ccomp(said-8, sleepy-5)
root(ROOT-0, said-8)
nsubj(said-8, Diamond-9)

(ROOT
  (S (`` ``)
    (NP (NNP Do))
    (VP (VBD read)
      (NP
        (NP (DT some))
        (PP (IN of)
          (NP (PRP them))))
      (PP (TO to)
        (NP (PRP me))))
    (. .) ('' '')))

nsubj(read-3, Do-2)
root(ROOT-0, read-3)
dobj(read-3, some-4)
prep_of(some-4, them-6)
prep_to(read-3, me-8)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP I))
      (VP (MD will)))
    (, ,) ('' '')
    (NP (PRP she))
    (VP
      (VP (VBD said))
      (, ,)
      (CC and)
      (VP (VBD began)
        (NP (CD one))))
    (. .)))

discourse(will-5, Yes-2)
nsubj(will-5, I-4)
ccomp(said-9, will-5)
nsubj(said-9, she-8)
nsubj(began-12, she-8)
root(ROOT-0, said-9)
conj_and(said-9, began-12)
dobj(began-12, one-13)

(ROOT
  (S (: --) (`` ``)
    (ADVP (CC But))
    (NP (DT this))
    (VP (VBZ is)
      (NP (JJ such) (NN nonsense)))
    (. !) ('' '')))

advmod(nonsense-7, But-3)
nsubj(nonsense-7, this-4)
cop(nonsense-7, is-5)
amod(nonsense-7, such-6)
root(ROOT-0, nonsense-7)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said)
      (ADVP (RB again)))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
advmod(said-2, again-3)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB try)
        (S
          (VP (TO to)
            (VP (VB find)
              (NP (DT a) (JJR better) (NN one)))))))
    (. .) ('' '')))

nsubj(try-4, I-2)
nsubj(find-6, I-2)
aux(try-4, will-3)
root(ROOT-0, try-4)
aux(find-6, to-5)
xcomp(try-4, find-6)
det(one-9, a-7)
amod(one-9, better-8)
dobj(find-6, one-9)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD turned)
        (NP
          (NP (DT the) (NNS leaves))
          (VP (VBG searching)))))
    (, ,)
    (CC but)
    (S
      (NP (CD three) (NNS times))
      (, ,)
      (PP (IN with)
        (NP (JJ sudden) (NNS puffs)))
      (, ,)
      (NP (DT the) (NN wind))
      (VP (VBD blew)
        (NP (DT the) (NNS leaves) (NN rustling))
        (ADVP (RB back))
        (PP (TO to)
          (NP (DT the) (JJ same) (NNS verses)))))
    (. .)))

nsubj(turned-2, She-1)
root(ROOT-0, turned-2)
det(leaves-4, the-3)
dobj(turned-2, leaves-4)
vmod(leaves-4, searching-5)
num(times-9, three-8)
nsubj(blew-17, times-9)
amod(puffs-13, sudden-12)
prep_with(blew-17, puffs-13)
det(wind-16, the-15)
nsubj(blew-17, wind-16)
conj_but(turned-2, blew-17)
det(rustling-20, the-18)
nn(rustling-20, leaves-19)
dobj(blew-17, rustling-20)
advmod(blew-17, back-21)
det(verses-25, the-23)
amod(verses-25, same-24)
prep_to(blew-17, verses-25)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP Do))
      (VP (VBP read)
        (NP (DT that) (NN one))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Diamond))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD seemed)
            (S
              (VP (TO to)
                (VP (VB be)
                  (PP (IN of)
                    (NP
                      (NP (DT the) (JJ same) (NN mind))
                      (PP (IN as)
                        (NP (DT the) (NN wind))))))))))))
    (. .)))

nsubj(read-3, Do-2)
ccomp(said-8, read-3)
det(one-5, that-4)
dobj(read-3, one-5)
root(ROOT-0, said-8)
nsubj(said-8, Diamond-9)
nsubj(seemed-12, Diamond-9)
nsubj(be-14, Diamond-9)
rcmod(Diamond-9, seemed-12)
aux(be-14, to-13)
xcomp(seemed-12, be-14)
det(mind-18, the-16)
amod(mind-18, same-17)
prep_of(be-14, mind-18)
det(wind-21, the-20)
prep_as(mind-18, wind-21)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBD sounded)
      (ADJP (RB very) (JJ nice)))
    (. .)))

nsubj(sounded-3, It-2)
root(ROOT-0, sounded-3)
advmod(nice-5, very-4)
acomp(sounded-3, nice-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP (DT a) (JJ good) (NN one)))))))
    (. .) ('' '')))

nsubj(sure-3, I-1)
cop(sure-3, am-2)
root(ROOT-0, sure-3)
nsubj(one-8, it-4)
cop(one-8, is-5)
det(one-8, a-6)
amod(one-8, good-7)
ccomp(sure-3, one-8)

(ROOT
  (S (IN So)
    (NP (PRP$ his) (NN mother))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD might)
            (VP (VB amuse)
              (NP (PRP him))
              (, ,)
              (SBAR (IN though)
                (S
                  (NP (PRP she))
                  (VP (MD could) (RB n't)
                    (VP (VB find)
                      (NP
                        (NP (DT any) (NN sense))
                        (PP (IN in)
                          (NP (PRP it)))))))))))))
    (. .)))

dep(thought-4, So-1)
poss(mother-3, his-2)
nsubj(thought-4, mother-3)
root(ROOT-0, thought-4)
nsubj(amuse-7, it-5)
aux(amuse-7, might-6)
ccomp(thought-4, amuse-7)
dobj(amuse-7, him-8)
mark(find-14, though-10)
nsubj(find-14, she-11)
aux(find-14, could-12)
neg(find-14, n't-13)
advcl(amuse-7, find-14)
det(sense-16, any-15)
dobj(find-14, sense-16)
prep_in(sense-16, it-18)

(ROOT
  (S
    (NP (PRP She))
    (ADVP (RB never))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD might)
            (VP (VB understand)
              (NP (PRP it))
              (, ,)
              (SBAR (IN although)
                (S
                  (NP (PRP she))
                  (VP (MD could) (RB not)))))))))
    (. .)))

nsubj(thought-3, She-1)
neg(thought-3, never-2)
root(ROOT-0, thought-3)
nsubj(understand-6, he-4)
aux(understand-6, might-5)
ccomp(thought-3, understand-6)
dobj(understand-6, it-7)
mark(could-11, although-9)
nsubj(could-11, she-10)
advcl(understand-6, could-11)
neg(could-11, not-12)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (ADVP (RB exactly))
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (NN mother))
              (VP (VBD read)))))))
    (, ,)
    (CC but)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNP Diamond))
            (VP
              (VP (VBD heard))
              (, ,)
              (CC or)
              (VP (VBD thought)
                (ADVP (RB afterwards))
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN heard)))))))))))
    (. .)))

advmod(know-6, Now-1)
nsubj(know-6, I-2)
aux(know-6, do-3)
neg(know-6, not-4)
advmod(know-6, exactly-5)
root(ROOT-0, know-6)
dobj(read-10, what-7)
det(mother-9, the-8)
nsubj(read-10, mother-9)
ccomp(know-6, read-10)
nsubj(is-14, this-13)
conj_but(know-6, is-14)
dobj(heard-17, what-15)
nsubj(heard-17, Diamond-16)
nsubj(thought-20, Diamond-16)
ccomp(is-14, heard-17)
ccomp(is-14, thought-20)
conj_or(heard-17, thought-20)
advmod(thought-20, afterwards-21)
mark(heard-25, that-22)
nsubj(heard-25, he-23)
aux(heard-25, had-24)
ccomp(thought-20, heard-25)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (VP (, ,)
          (ADVP (RB however))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP I))
              (VP (VBP have)
                (VP (VBD said))))))))
    (, ,)
    (FRAG
      (ADJP (RB very) (JJ sleepy)))
    (. .)))

nsubj(however-4, He-1)
aux(however-4, was-2)
root(ROOT-0, however-4)
mark(said-9, as-6)
nsubj(said-9, I-7)
aux(said-9, have-8)
advcl(however-4, said-9)
advmod(sleepy-12, very-11)
dep(however-4, sleepy-12)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBD thought)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD understood)
                (NP (DT the) (NNS verses))))))))
    (NP (PRP he))
    (VP (MD may)
      (VP (VB have)
        (VP (VBN been)
          (VP
            (ADVP (RB only))
            (VBG dreaming)
            (NP (JJR better) (NNS ones))))))
    (. .)))

cc(dreaming-14, And-1)
advmod(thought-4, when-2)
nsubj(thought-4, he-3)
advcl(dreaming-14, thought-4)
nsubj(understood-6, he-5)
ccomp(thought-4, understood-6)
det(verses-8, the-7)
dobj(understood-6, verses-8)
nsubj(dreaming-14, he-9)
aux(dreaming-14, may-10)
aux(dreaming-14, have-11)
aux(dreaming-14, been-12)
advmod(dreaming-14, only-13)
root(ROOT-0, dreaming-14)
amod(ones-16, better-15)
dobj(dreaming-14, ones-16)

