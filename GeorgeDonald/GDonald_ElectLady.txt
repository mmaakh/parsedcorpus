(ROOT
  (S
    (NP
      (NP
        (NP (NNP HOME) (NNP AGAIN))
        (CC and)
        (NP (DT THE) (NNP ELECT) (NNP LADY) (NNP _)))
      (PRN (-LRB- -LRB-)
        (NP (DT A) (NNP Duplex) (NNP Edition))
        (-RRB- -RRB-)))
    (VP (VBD _)
      (SBAR
        (S
          (PP (IN By)
            (NP (NNP George) (NNP MacDonald)))
          (NP (DT THE) (NNP ELECT) (NNP LADY) (NNP CHAPTER) (NNP I.) (NNP LANDLORD))
          (VP (VBZ 'S)
            (NP
              (NP (NNP DAUGHTER)
                (CC AND)
                (NNP TENANT) (POS 'S))
              (NN SON))))))
    (. .)))

nn(AGAIN-2, HOME-1)
nsubj(_-13, AGAIN-2)
det(_-7, THE-4)
nn(_-7, ELECT-5)
nn(_-7, LADY-6)
conj_and(AGAIN-2, _-7)
nsubj(_-13, _-7)
det(Edition-11, A-9)
nn(Edition-11, Duplex-10)
appos(AGAIN-2, Edition-11)
root(ROOT-0, _-13)
nn(MacDonald-16, George-15)
prep_by(SON-28, MacDonald-16)
det(LANDLORD-22, THE-17)
nn(LANDLORD-22, ELECT-18)
nn(LANDLORD-22, LADY-19)
nn(LANDLORD-22, CHAPTER-20)
nn(LANDLORD-22, I.-21)
nsubj(SON-28, LANDLORD-22)
cop(SON-28, 'S-23)
poss(SON-28, DAUGHTER-24)
conj_and(DAUGHTER-24, TENANT-26)
poss(SON-28, TENANT-26)
ccomp(_-13, SON-28)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (NN kitchen))
        (PP (IN of)
          (NP (JJ moderate) (NN size)))))
    (, ,)
    (S
      (VP (VBN flagged)
        (PP (IN with)
          (NP
            (NP (NN slate))
            (, ,)
            (ADJP (JJ humble)
              (PP (IN in)
                (NP (PRP$ its) (NNS appointments))))))
        (, ,)
        (S
          (ADVP (RB yet))
          (VP (VBG looking)
            (ADVP (RB scarcely))
            (NP
              (NP (DT that))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN farmhouse))
                  (PRN (: --)
                    (SBAR (IN for)
                      (S
                        (NP (EX there))
                        (VP (VBD were)
                          (ADJP (JJ utensils))
                          (PP (IN about)
                            (S
                              (NP (PRP it))
                              (VP (VBG indicating)
                                (S
                                  (NP (NNS necessities))
                                  (ADJP (RBR more) (JJ artificial)
                                    (PP (IN than)
                                      (ADVP (RB usually))))
                                  (S
                                    (VP (VB grow)
                                      (PP (IN upon)
                                        (NP (DT a) (NN farm))))))))))))
                    (: --)))))
            (PP (IN with)
              (NP
                (NP (DT the) (NN corner))
                (PP (IN of)
                  (NP
                    (NP (DT a) (JJ white) (NN deal) (NN table))
                    (PP (IN between)
                      (NP (PRP them)))))))))))
    (, ,)
    (VP (VBD sat)
      (NP (CD two) (JJ young) (NNS people))
      (UCP
        (ADJP
          (ADVP (RB evidently))
          (JJ different)
          (PP (IN in)
            (NP (NN rank))))
        (, ,)
        (CC and)
        (VP (VBG meeting)
          (PP (IN upon)
            (NP
              (NP (DT no) (NN level))
              (PP (IN of)
                (NP (NN friendship))))))))
    (. .)))

det(kitchen-3, a-2)
prep_in(sat-53, kitchen-3)
amod(size-6, moderate-5)
prep_of(kitchen-3, size-6)
dep(sat-53, flagged-8)
prep_with(flagged-8, slate-10)
amod(slate-10, humble-12)
poss(appointments-15, its-14)
prep_in(humble-12, appointments-15)
advmod(looking-18, yet-17)
xcomp(flagged-8, looking-18)
advmod(looking-18, scarcely-19)
dobj(looking-18, that-20)
det(farmhouse-23, a-22)
prep_of(that-20, farmhouse-23)
mark(were-27, for-25)
expl(were-27, there-26)
dep(farmhouse-23, were-27)
acomp(were-27, utensils-28)
nsubj(indicating-31, it-30)
prepc_about(were-27, indicating-31)
nsubj(grow-37, necessities-32)
advmod(artificial-34, more-33)
dep(grow-37, artificial-34)
prep(artificial-34, than-35)
pcomp(than-35, usually-36)
xcomp(indicating-31, grow-37)
det(farm-40, a-39)
prep_upon(grow-37, farm-40)
det(corner-44, the-43)
prep_with(looking-18, corner-44)
det(table-49, a-46)
amod(table-49, white-47)
nn(table-49, deal-48)
prep_of(corner-44, table-49)
prep_between(table-49, them-51)
root(ROOT-0, sat-53)
num(people-56, two-54)
amod(people-56, young-55)
dobj(sat-53, people-56)
advmod(different-58, evidently-57)
acomp(sat-53, different-58)
prep_in(different-58, rank-60)
acomp(sat-53, meeting-63)
conj_and(different-58, meeting-63)
neg(level-66, no-65)
prep_upon(meeting-63, level-66)
prep_of(level-66, friendship-68)

(ROOT
  (S
    (NP (DT The) (JJ young) (NN woman))
    (VP (VBD held)
      (PP (IN in)
        (NP (PRP$ her) (NN hand)))
      (NP
        (NP (DT a) (NN paper))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD seemed)
              (NP
                (NP (DT the) (NN subject))
                (PP (IN of)
                  (NP (PRP$ their) (NN conversation)))))))))
    (. .)))

det(woman-3, The-1)
amod(woman-3, young-2)
nsubj(held-4, woman-3)
root(ROOT-0, held-4)
poss(hand-7, her-6)
prep_in(held-4, hand-7)
det(paper-9, a-8)
dobj(held-4, paper-9)
nsubj(seemed-12, paper-9)
rcmod(paper-9, seemed-12)
det(subject-14, the-13)
xcomp(seemed-12, subject-14)
poss(conversation-17, their-16)
prep_of(subject-14, conversation-17)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (NP
        (NP
          (QP (RB about) (CD four)))
        (PRN (: -)
          (CC or)
          (NP
            (NP (NN five-and-twenty))
            (, ,)
            (NP
              (NP
                (ADJP
                  (ADJP (RB well) (JJ grown))
                  (CC and)
                  (ADJP
                    (ADJP (RB not) (JJ ungraceful))
                    (PRN (, ,)
                      (PP (IN with)
                        (NP (JJ dark) (NN hair)))
                      (, ,))))
                (JJ dark) (NN hazel) (NNS eyes))
              (, ,)
              (CC and)
              (NP
                (NP (RB rather) (JJ large))
                (, ,)
                (NP (JJ handsome) (NNS features)))
              (, ,)
              (ADJP
                (ADJP (JJ full)
                  (PP (IN of)
                    (NP (NN intelligence))))
                (, ,)
                (CC but)
                (ADJP
                  (NP (DT a) (RB little))
                  (JJ hard)))
              (, ,))
            (CC and)
            (NP (RB not) (DT a) (JJ little) (NN regnant)))
          (: --))
        (SBAR (IN as)
          (S
            (NP (JJ such) (NNS features))
            (VP (MD must)
              (VP (VB be))))))
      (, ,)
      (PP (IN except) (IN after)
        (NP
          (NP (VBN prolonged) (NN influence))
          (PP (IN of)
            (NP
              (NP (DT a) (NN heart))
              (ADJP (JJ potent)
                (PP (IN in)
                  (NP (NN self-subjugation)))))))))
    (. .)))

nsubj(four-4, She-1)
cop(four-4, was-2)
quantmod(four-4, about-3)
root(ROOT-0, four-4)
dep(four-4, five-and-twenty-7)
advmod(grown-10, well-9)
amod(eyes-21, grown-10)
neg(ungraceful-13, not-12)
conj_and(grown-10, ungraceful-13)
amod(eyes-21, ungraceful-13)
dep(ungraceful-13, with-15)
amod(hair-17, dark-16)
pobj(with-15, hair-17)
amod(eyes-21, dark-19)
nn(eyes-21, hazel-20)
dep(four-4, eyes-21)
conj_or(five-and-twenty-7, eyes-21)
advmod(large-25, rather-24)
conj_or(five-and-twenty-7, large-25)
conj_and(eyes-21, large-25)
amod(features-28, handsome-27)
appos(large-25, features-28)
conj_or(five-and-twenty-7, full-30)
amod(eyes-21, full-30)
conj_and(eyes-21, full-30)
prep_of(full-30, intelligence-32)
det(little-36, a-35)
npadvmod(hard-37, little-36)
amod(eyes-21, hard-37)
conj_and(eyes-21, hard-37)
conj_but(full-30, hard-37)
neg(regnant-43, not-40)
det(regnant-43, a-41)
amod(regnant-43, little-42)
dep(four-4, regnant-43)
conj_and(five-and-twenty-7, regnant-43)
mark(be-49, as-45)
amod(features-47, such-46)
nsubj(be-49, features-47)
aux(be-49, must-48)
rcmod(four-4, be-49)
dep(four-4, except-51)
amod(influence-54, prolonged-53)
prep_after(four-4, influence-54)
det(heart-57, a-56)
prep_of(influence-54, heart-57)
amod(heart-57, potent-58)
prep_in(potent-58, self-subjugation-60)

(ROOT
  (S
    (PP (IN As)
      (PP (TO to)
        (NP (PRP$ her) (JJ social) (NN expression))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN mingling))
          (PP (IN of)
            (NP
              (NP (DT the) (NN gentlewoman))
              (PP (IN of)
                (NP (NN education))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN farmer) (POS 's))
        (NN daughter))
      (VP (VBD supreme)
        (PP (IN over)
          (NP
            (NP (DT the) (NN household))
            (CC and)
            (NP (PRP$ its) (NN share))))
        (PP (IN in)
          (NP
            (NP (DT the) (NN labor))
            (PP (IN of)
              (NP (NN production)))))))
    (. .)))

prepc_as_to(mingling-10, to-2)
poss(expression-5, her-3)
amod(expression-5, social-4)
pobj(mingling-10, expression-5)
nsubj(mingling-10, it-7)
cop(mingling-10, was-8)
det(mingling-10, a-9)
root(ROOT-0, mingling-10)
det(gentlewoman-13, the-12)
prep_of(mingling-10, gentlewoman-13)
prep_of(gentlewoman-13, education-15)
det(farmer-19, the-18)
poss(daughter-21, farmer-19)
nsubj(supreme-22, daughter-21)
conj_and(mingling-10, supreme-22)
det(household-25, the-24)
prep_over(supreme-22, household-25)
poss(share-28, its-27)
prep_over(supreme-22, share-28)
conj_and(household-25, share-28)
det(labor-31, the-30)
prep_in(supreme-22, labor-31)
prep_of(labor-31, production-33)

(ROOT
  (S
    (PP (IN As)
      (PP (TO to)
        (NP (DT the) (JJ young) (NN man))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN required)
            (NP
              (NP (DT a) (JJ deeper-seeing) (NN eye))
              (SBAR (IN than)
                (S
                  (VP (VBZ falls)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN lot))
                        (PP (IN of)
                          (NP (JJS most) (NNS observers)))))))))
            (, ,)
            (S (RB not)
              (VP (TO to)
                (VP (VB take)
                  (NP (PRP him))
                  (PP (IN for)
                    (NP
                      (NP (DT a) (JJR weaker) (NN nature))
                      (PP (IN than)
                        (NP (DT the) (JJ young) (NN woman))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (DT the) (NN deference))
      (PRN
        (S
          (NP (PRP he))
          (VP (VBD showed)
            (NP (PRP her))
            (PP (IN as)
              (NP (DT the) (JJ superior)))))
        (, ,))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN enhanced)
            (NP
              (NP (DT the) (NN difficulty))
              (PP (IN of)
                (NP (DT a) (JJ true) (NN judgment))))))))
    (. .)))

prepc_as_to(required-10, to-2)
det(man-5, the-3)
amod(man-5, young-4)
pobj(required-10, man-5)
nsubj(required-10, it-7)
aux(required-10, would-8)
aux(required-10, have-9)
root(ROOT-0, required-10)
det(eye-13, a-11)
amod(eye-13, deeper-seeing-12)
dobj(required-10, eye-13)
nsubj(take-25, eye-13)
mark(falls-15, than-14)
dep(eye-13, falls-15)
det(lot-18, the-17)
prep_to(falls-15, lot-18)
amod(observers-21, most-20)
prep_of(lot-18, observers-21)
neg(take-25, not-23)
aux(take-25, to-24)
xcomp(required-10, take-25)
dobj(take-25, him-26)
det(nature-30, a-28)
amod(nature-30, weaker-29)
prep_for(take-25, nature-30)
det(woman-34, the-32)
amod(woman-34, young-33)
prep_than(nature-30, woman-34)
det(deference-38, the-37)
nsubj(enhanced-48, deference-38)
nsubj(showed-40, he-39)
parataxis(enhanced-48, showed-40)
dobj(showed-40, her-41)
det(superior-44, the-43)
prep_as(showed-40, superior-44)
aux(enhanced-48, would-46)
aux(enhanced-48, have-47)
conj_and(required-10, enhanced-48)
det(difficulty-50, the-49)
dobj(enhanced-48, difficulty-50)
det(judgment-54, a-52)
amod(judgment-54, true-53)
prep_of(difficulty-50, judgment-54)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (ADJP (JJ tall)
          (CC and)
          (JJ thin))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB plainly))
      (PP (IN in)
        (NP (JJ fine) (NN health)))
      (: ;)
      (VP (VBD had)
        (VP
          (NP
            (NP (DT a) (JJ good) (NN forehead))
            (, ,)
            (CC and)
            (NP (DT a) (JJ clear) (NN hazel) (NN eye))
            (, ,))
          (ADJP
            (ADJP (RB not) (JJ overlarge)
              (CC or)
              (JJ prominent))
            (, ,)
            (CC but)
            (ADJP
              (ADJP (JJ full)
                (PP (IN of)
                  (NP
                    (NP (NN light))
                    (: ;)
                    (NP
                      (NP (DT a) (NN firm) (NN mouth))
                      (, ,)
                      (PP (IN with)
                        (NP (DT a) (JJ curious) (NN smile))))
                    (: ;)
                    (NP (DT a) (JJ sun-burned) (NN complexion))
                    (: ;)
                    (CC and)
                    (NP (DT a) (NN habit)))))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (VP (VBN perplexed)
                    (PP (IN of)
                      (S
                        (VP (VBG pinching)
                          (NP
                            (NP (PRP$ his) (JJ upper) (NN lip))
                            (PP (IN between)
                              (NP
                                (NP (PRP$ his) (NN finger)
                                  (CC and)
                                  (NN thumb))
                                (, ,)
                                (SBAR
                                  (WHNP (WDT which))
                                  (S
                                    (PP (IN at)
                                      (NP (DT the) (JJ present) (NN moment)))
                                    (NP (PRP he))
                                    (VP (VBD was)
                                      (ADVP (RB unconsciously))
                                      (VP (VBG indulging)))))))))))))))))))
    (. .)))

nsubj(tall-3, He-1)
nsubj(thin-5, He-1)
nsubj(overlarge-25, He-1)
cop(tall-3, was-2)
root(ROOT-0, tall-3)
conj_and(tall-3, thin-5)
advmod(overlarge-25, plainly-8)
amod(health-11, fine-10)
prep_in(overlarge-25, health-11)
aux(overlarge-25, had-13)
det(forehead-16, a-14)
amod(forehead-16, good-15)
dobj(overlarge-25, forehead-16)
det(eye-22, a-19)
amod(eye-22, clear-20)
nn(eye-22, hazel-21)
conj_and(forehead-16, eye-22)
dobj(overlarge-25, eye-22)
neg(overlarge-25, not-24)
conj_but(tall-3, overlarge-25)
conj_but(tall-3, prominent-27)
conj_or(overlarge-25, prominent-27)
conj_but(tall-3, full-30)
conj_but(overlarge-25, full-30)
prep_of(full-30, light-32)
det(mouth-36, a-34)
nn(mouth-36, firm-35)
prep_of(full-30, mouth-36)
conj_and(light-32, mouth-36)
det(smile-41, a-39)
amod(smile-41, curious-40)
prep_with(mouth-36, smile-41)
det(complexion-45, a-43)
amod(complexion-45, sun-burned-44)
prep_of(full-30, complexion-45)
conj_and(light-32, complexion-45)
det(habit-49, a-48)
prep_of(full-30, habit-49)
conj_and(light-32, habit-49)
advmod(perplexed-51, when-50)
ccomp(full-30, perplexed-51)
prepc_of(perplexed-51, pinching-53)
poss(lip-56, his-54)
amod(lip-56, upper-55)
dobj(pinching-53, lip-56)
poss(finger-59, his-58)
prep_between(lip-56, finger-59)
dobj(indulging-71, finger-59)
prep_between(lip-56, thumb-61)
conj_and(finger-59, thumb-61)
dobj(indulging-71, thumb-61)
det(moment-67, the-65)
amod(moment-67, present-66)
prep_at(indulging-71, moment-67)
nsubj(indulging-71, he-68)
aux(indulging-71, was-69)
advmod(indulging-71, unconsciously-70)
rcmod(finger-59, indulging-71)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (NP
          (NP (DT the) (NN son))
          (PP (IN of)
            (NP (DT a) (JJ small) (NN farmer))))))
    (PRN (: --)
      (PP (IN in)
        (SBAR
          (WHNP (WP what))
          (S
            (NP
              (NP (NN part))
              (PP (IN of)
                (NP (NNP Scotland))))
            (VP (VBZ is)
              (PP (IN of)
                (NP (JJ little) (NN consequence)))))))
      (: --))
    (CC and)
    (S
      (NP
        (NP (PRP$ his) (NN companion))
        (PP (IN for)
          (NP (DT the) (NN moment))))
      (VP (VBD was)
        (NP
          (NP (DT the) (NN daughter))
          (PP (IN of)
            (NP (DT the) (NN laird))))))
    (. .)))

nsubj(son-4, He-1)
cop(son-4, was-2)
det(son-4, the-3)
root(ROOT-0, son-4)
det(farmer-8, a-6)
amod(farmer-8, small-7)
prep_of(son-4, farmer-8)
dep(son-4, in-10)
dobj(is-15, what-11)
nsubj(is-15, part-12)
prep_of(part-12, Scotland-14)
pcomp(in-10, is-15)
amod(consequence-18, little-17)
prep_of(is-15, consequence-18)
poss(companion-22, his-21)
nsubj(daughter-28, companion-22)
det(moment-25, the-24)
prep_for(companion-22, moment-25)
cop(daughter-28, was-26)
det(daughter-28, the-27)
conj_and(son-4, daughter-28)
det(laird-31, the-30)
prep_of(daughter-28, laird-31)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN glanced)
          (PP (IN over)
            (NP (DT the) (NN poem))))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (DT the) (NN lady)))
      (, ,) (`` ``))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ seems)
        (PP (TO to)
          (NP (PRP me)))
        (PP
          (ADVP (RB quite) (RB up))
          (TO to)
          (NP
            (NP (DT the) (NN average))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP you))
                  (VP (VBP see)
                    (PP (IN in)
                      (NP (NN print)))))))))))
    (. .) ('' '')))

nsubj(glanced-4, I-2)
aux(glanced-4, have-3)
root(ROOT-0, glanced-4)
det(poem-7, the-6)
prep_over(glanced-4, poem-7)
dep(glanced-4, said-10)
det(lady-12, the-11)
nsubj(said-10, lady-12)
nsubj(seems-17, it-16)
conj_and(glanced-4, seems-17)
prep_to(seems-17, me-19)
advmod(up-21, quite-20)
advmod(seems-17, up-21)
det(average-24, the-23)
prep_to(seems-17, average-24)
dobj(see-28, what-26)
nsubj(see-28, you-27)
prepc_of(average-24, see-28)
prep_in(see-28, print-30)

(ROOT
  (S (`` ``)
    (S
      (VP (MD Would)
        (ADVP (IN that))
        (VP (VB be)
          (NP
            (NP (NN reason))
            (PP (IN for)
              (S
                (VP (VBG printing)
                  (NP (PRP it)))))))))
    (, ,)
    (VP (VBP ma'am))
    (. ?) ('' '')))

aux(reason-5, Would-2)
advmod(reason-5, that-3)
cop(reason-5, be-4)
ccomp(ma'am-10, reason-5)
prepc_for(reason-5, printing-7)
dobj(printing-7, it-8)
root(ROOT-0, ma'am-10)

(ROOT
  (S
    (S
      (VP (VBN asked)
        (NP (DT the) (NN man))
        (, ,)
        (PP (IN with)
          (ADJP (VBN amused)))))
    (VP (VBP smile))
    (. .)))

csubj(smile-7, asked-1)
det(man-3, the-2)
dobj(asked-1, man-3)
prep_with(asked-1, amused-6)
root(ROOT-0, smile-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (MD would)
        (VP (VB be)
          (PP (IN for)
            (NP (DT the) (NN editor)
              (S
                (VP (TO to)
                  (VP (VB determine)))))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered) (, ,)
      (S (RB not)
        (VP (VBG perceiving)
          (NP (DT the) (JJ hinted) (NN objection)))))
    (. .)))

nsubj(be-4, It-2)
aux(be-4, would-3)
ccomp(answered-13, be-4)
det(editor-7, the-6)
prep_for(be-4, editor-7)
aux(determine-9, to-8)
vmod(editor-7, determine-9)
nsubj(answered-13, she-12)
root(ROOT-0, answered-13)
neg(perceiving-16, not-15)
xcomp(answered-13, perceiving-16)
det(objection-19, the-17)
amod(objection-19, hinted-18)
dobj(perceiving-16, objection-19)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD will)
        (VP (VB remember) (, ,) (VB ma'am) (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (ADVP (RB never))
              (VP (VBD suggested)))))))
    (: --)
    (S
      (ADVP (RB indeed))
      (NP (PRP I))
      (VP
        (ADVP (RB never))
        (VBD thought)
        (PP (IN of)
          (NP (PDT such) (DT a) (NN thing)))))
    (. !) ('' '')))

nsubj(remember-4, You-2)
aux(remember-4, will-3)
root(ROOT-0, remember-4)
dep(remember-4, ma'am-6)
mark(suggested-11, that-8)
nsubj(suggested-11, I-9)
neg(suggested-11, never-10)
ccomp(remember-4, suggested-11)
advmod(thought-16, indeed-13)
nsubj(thought-16, I-14)
neg(thought-16, never-15)
parataxis(remember-4, thought-16)
predet(thing-20, such-18)
det(thing-20, a-19)
prep_of(thought-16, thing-20)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB forget)))
    (. .)))

nsubj(forget-5, I-2)
aux(forget-5, do-3)
neg(forget-5, not-4)
root(ROOT-0, forget-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (PRP$ your) (NN mother))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD drew)
              (NP (PRP$ my) (NN attention))
              (PP (TO to)
                (NP (DT the) (NNS verses))))))))
    (. .) ('' '')))

nsubj(mother-4, It-1)
cop(mother-4, was-2)
poss(mother-4, your-3)
root(ROOT-0, mother-4)
nsubj(drew-6, mother-4)
rcmod(mother-4, drew-6)
poss(attention-8, my-7)
dobj(drew-6, attention-8)
det(verses-11, the-10)
prep_to(drew-6, verses-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD must)
      (VP (VB speak)
        (PP (TO to)
          (NP (PRP$ my) (NN mother)))))
    (. !) ('' '')))

nsubj(speak-4, I-2)
aux(speak-4, must-3)
root(ROOT-0, speak-4)
poss(mother-7, my-6)
prep_to(speak-4, mother-7)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (PP (IN in)
        (NP (DT a) (JJ meditative) (NN way))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
det(way-7, a-5)
amod(way-7, meditative-6)
prep_in(said-2, way-7)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD can) (RB not)
      (VP (VB object)
        (S
          (VP (TO to)
            (VP (VB _)
              (NP (PRP$ my) (NN _))
              (S
                (VP (VBG seeing)
                  (NP (PRP$ your) (NN work)))))))))
    (. !)))

nsubj(object-5, You-2)
nsubj(_-7, You-2)
aux(object-5, can-3)
neg(object-5, not-4)
root(ROOT-0, object-5)
aux(_-7, to-6)
xcomp(object-5, _-7)
poss(_-9, my-8)
dobj(_-7, _-9)
xcomp(_-7, seeing-10)
poss(work-12, your-11)
dobj(seeing-10, work-12)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ does) (RB not)
      (VP (VB show)
        (NP (PRP it))
        (PP (TO to)
          (NP (NN everybody)))))
    (. .)))

nsubj(show-4, She-1)
aux(show-4, does-2)
neg(show-4, not-3)
root(ROOT-0, show-4)
dobj(show-4, it-5)
prep_to(show-4, everybody-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP
        (ADJP (RBS most) (JJ creditable))
        (PP (TO to)
          (NP
            (NP (PRP you))
            (, ,)
            (NP
              (NP (PDT such) (DT an) (NN employment))
              (PP (IN of)
                (NP (PRP$ your) (NN leisure))))))))
    (. .) ('' '')))

nsubj(creditable-4, It-1)
cop(creditable-4, is-2)
advmod(creditable-4, most-3)
root(ROOT-0, creditable-4)
prep_to(creditable-4, you-6)
predet(employment-10, such-8)
det(employment-10, an-9)
appos(you-6, employment-10)
poss(leisure-13, your-12)
prep_of(employment-10, leisure-13)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN poem))
    (VP (VBD was)
      (ADVP (RB never))
      (VP (VBN meant)
        (PP (IN for)
          (NP
            (NP (DT any) (NNS eyes))
            (PP (CC but)
              (NP (PRP$ my) (JJ own)))))
        (: --)
        (SBAR (IN except)
          (S
            (NP (PRP$ my) (NN brother))
            (VP (VBZ 's))))))
    (. .) ('' '')))

det(poem-3, The-2)
nsubjpass(meant-6, poem-3)
auxpass(meant-6, was-4)
neg(meant-6, never-5)
root(ROOT-0, meant-6)
det(eyes-9, any-8)
prep_for(meant-6, eyes-9)
prep(eyes-9, but-10)
poss(own-12, my-11)
pobj(but-10, own-12)
mark('s-17, except-14)
poss(brother-16, my-15)
nsubj('s-17, brother-16)
advcl(meant-6, 's-17)
parataxis(meant-6, 's-17)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBD was)
      (NP
        (NP (DT the) (NN good))
        (PP (IN of)
          (S
            (VP (VBG writing)
              (NP (PRP it))
              (, ,)
              (SBAR (IN if)
                (S
                  (NP (DT no) (NN one))
                  (VP (VBD was)
                    (S
                      (VP (TO to)
                        (VP (VB see)
                          (NP (PRP it)))))))))))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, was-3)
det(good-5, the-4)
nsubj(What-2, good-5)
prepc_of(good-5, writing-7)
dobj(writing-7, it-8)
mark(was-13, if-10)
neg(one-12, no-11)
nsubj(was-13, one-12)
nsubj(see-15, one-12)
advcl(writing-7, was-13)
aux(see-15, to-14)
xcomp(was-13, see-15)
dobj(see-15, it-16)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (VBG writing))
      (PP (IN of)
        (NP (PRP it))))
    (, ,)
    (VP (VBP ma'am))
    (. .) ('' '')))

nsubj(ma'am-7, The-2)
amod(The-2, writing-3)
prep_of(The-2, it-5)
root(ROOT-0, ma'am-7)

(ROOT
  (S (`` ``)
    (PP (IN For)
      (NP (DT the) (NN exercise)))
    (, ,)
    (NP (PRP you))
    (VP (VBP mean))
    (. ?) ('' '')))

det(exercise-4, the-3)
prep_for(mean-7, exercise-4)
nsubj(mean-7, you-6)
root(ROOT-0, mean-7)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (PRP I))
      (ADVP (RB hardly))
      (VP (VBP mean)
        (NP (DT that))))
    (. .) ('' '')))

dep(mean-6, No-2)
nsubj(mean-6, I-4)
advmod(mean-6, hardly-5)
root(ROOT-0, mean-6)
dobj(mean-6, that-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ afraid))))
    (RB then)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB understand)
          (NP (PRP you)))))
    (. .) ('' '')))

nsubj(afraid-4, I-2)
cop(afraid-4, am-3)
root(ROOT-0, afraid-4)
advmod(afraid-4, then-5)
nsubj(understand-9, I-6)
aux(understand-9, do-7)
neg(understand-9, not-8)
parataxis(afraid-4, understand-9)
dobj(understand-9, you-10)

(ROOT
  (S (`` ``)
    (NP (NNP Do))
    (VP (VBZ _)
      (SBAR
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP _)
              (ADVP (RB never))
              (VP (VB write)
                (NP (NN anything))))))
        (CC but)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VB publish))))))
    (. ?) ('' '')))

nsubj(_-3, Do-2)
root(ROOT-0, _-3)
nsubj(_-5, you-4)
dep(_-3, _-5)
neg(_-5, never-6)
dep(_-5, write-7)
dobj(write-7, anything-8)
dobj(publish-12, what-10)
nsubj(publish-12, you-11)
dep(_-3, publish-12)
conj_but(_-5, publish-12)

(ROOT
  (S (`` ``)
    (VP (VBP Publish))
    (. !)))

root(ROOT-0, Publish-2)

(ROOT
  (S
    (ADVP (RB _))
    (NP (PRP I))
    (VP (VBP _)
      (ADVP (RB never))
      (VP (VB publish)))
    (. !)))

advmod(_-3, _-1)
nsubj(_-3, I-2)
root(ROOT-0, _-3)
neg(_-3, never-4)
dep(_-3, publish-5)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBD made)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP think)
              (PP (IN of)
                (NP (PDT such) (DT a) (NN thing))))))))
    (. ?) ('' '')))

nsubj(made-2, What-1)
root(ROOT-0, made-2)
nsubj(think-4, you-3)
ccomp(made-2, think-4)
predet(thing-8, such-6)
det(thing-8, a-7)
prep_of(think-4, thing-8)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (PRN
      (S
        (NP (PRP you))
        (VP (VBP know)
          (ADVP (RB so) (RB much))
          (PP (IN about)
            (NP (PRP it)))))
      (, ,))
    (VP (VBP ma'am))
    (. .) ('' '')))

nsubj(ma'am-10, That-2)
nsubj(know-4, you-3)
parataxis(ma'am-10, know-4)
advmod(much-6, so-5)
advmod(know-4, much-6)
prep_about(know-4, it-8)
root(ROOT-0, ma'am-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP
      (VP (VBP know)
        (NP
          (NP (NNS people))
          (VP (VBN connected)
            (PP (IN with)
              (NP (DT the) (NNS papers))))))
      (, ,)
      (CC and)
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD might)
              (VP (VB encourage)
                (S
                  (NP (PRP you))
                  (VP (TO to)
                    (VP (VB see)
                      (NP (NN something))
                      (PP (IN in)
                        (NP (NN print))))))))))))
    (. .)))

nsubj(know-3, I-2)
nsubj(thought-11, I-2)
root(ROOT-0, know-3)
dobj(know-3, people-4)
vmod(people-4, connected-5)
det(papers-8, the-7)
prep_with(connected-5, papers-8)
conj_and(know-3, thought-11)
nsubj(encourage-14, it-12)
aux(encourage-14, might-13)
ccomp(thought-11, encourage-14)
dobj(encourage-14, you-15)
nsubj(see-17, you-15)
aux(see-17, to-16)
xcomp(encourage-14, see-17)
dobj(see-17, something-18)
prep_in(see-17, print-20)

(ROOT
  (S
    (NP (DT The) (NNS newspapers))
    (VP (VB publish)
      (NP
        (ADJP (RB so) (JJ many))
        (NNS poems))
      (ADVP (RB now)))
    (. !) ('' '')))

det(newspapers-2, The-1)
nsubj(publish-3, newspapers-2)
root(ROOT-0, publish-3)
advmod(many-5, so-4)
amod(poems-6, many-5)
dobj(publish-3, poems-6)
advmod(publish-3, now-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD had) (RB n't)
            (VP (VBN been)
              (SBAR (RB just) (IN that)
                (S
                  (NP (CD one) (JJ my) (NN mother))
                  (VP (VBD gave)
                    (NP (PRP you))))))))))
    (. !) ('' '')))

nsubj(wish-3, I-2)
root(ROOT-0, wish-3)
nsubj(been-7, it-4)
aux(been-7, had-5)
neg(been-7, n't-6)
ccomp(wish-3, been-7)
advmod(gave-13, just-8)
mark(gave-13, that-9)
num(mother-12, one-10)
amod(mother-12, my-11)
nsubj(gave-13, mother-12)
dep(been-7, gave-13)
dobj(gave-13, you-14)

(ROOT
  (INTJ (`` ``) (UH Why) (. ?) ('' '')))

root(ROOT-0, Why-2)

(ROOT
  (S (`` ``)
    (PP (IN For)
      (NP (CD one) (NN thing)))
    (, ,)
    (NP (PRP it))
    (VP
      (VP (VBZ is) (RB not)
        (ADJP (VBN finished)))
      (: --)
      (SBAR (IN as)
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB see)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP (VBP read)
                    (NP (PRP it))
                    (ADVP (RBR more) (RB carefully))))))))))
    (. .) ('' '')))

num(thing-4, one-3)
prep_for(finished-9, thing-4)
nsubjpass(finished-9, it-6)
auxpass(finished-9, is-7)
neg(finished-9, not-8)
root(ROOT-0, finished-9)
mark(see-14, as-11)
nsubj(see-14, you-12)
aux(see-14, will-13)
advcl(finished-9, see-14)
parataxis(finished-9, see-14)
advmod(read-17, when-15)
nsubj(read-17, you-16)
advcl(see-14, read-17)
dobj(read-17, it-18)
advmod(carefully-20, more-19)
advmod(read-17, carefully-20)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD did)
        (VP (VB see)
          (NP
            (NP (DT a) (NN line))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD thought)
                  (ADJP (RB hardly) (JJ rhythmical))
                  (, ,)
                  (ADVP (CC but)))))))))
    (: --) ('' '')
    (S
      (S (`` ``)
        (S
          (VP (VBG Excuse)
            (NP (PRP me))))
        (, ,)
        (VP (VBP ma'am)))
      (: ;)
      (S
        (NP (DT the))
        (VP (VBP want)
          (SBAR
            (S
              (PP (IN of)
                (NP (NN rhythm)))
              (NP (EX there))
              (VP (VBD was)
                (ADJP (JJ intentional))))))))
    (. .) ('' '')))

nsubj(see-4, I-2)
aux(see-4, did-3)
root(ROOT-0, see-4)
det(line-6, a-5)
dobj(see-4, line-6)
nsubj(thought-8, I-7)
rcmod(line-6, thought-8)
advmod(rhythmical-10, hardly-9)
acomp(thought-8, rhythmical-10)
advmod(thought-8, but-12)
dep(ma'am-19, Excuse-16)
dobj(Excuse-16, me-17)
parataxis(see-4, ma'am-19)
nsubj(want-22, the-21)
parataxis(ma'am-19, want-22)
prep_of(was-26, rhythm-24)
expl(was-26, there-25)
ccomp(want-22, was-26)
acomp(was-26, intentional-27)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ sorry)
        (WHPP (IN for)
          (WHNP (WDT that)))))
    (. .)))

nsubj(sorry-4, I-2)
cop(sorry-4, am-3)
root(ROOT-0, sorry-4)
prep_for(sorry-4, that-6)

(ROOT
  (S
    (NP (NNP Intention))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS worst) (JJ possible) (NN excuse))
        (PP (IN for)
          (ADJP (JJ wrong)))))
    (. !)))

nsubj(excuse-6, Intention-1)
cop(excuse-6, is-2)
det(excuse-6, the-3)
amod(excuse-6, worst-4)
amod(excuse-6, possible-5)
root(ROOT-0, excuse-6)
prep_for(excuse-6, wrong-8)

(ROOT
  (S
    (NP (DT The) (NN accent))
    (VP (MD should)
      (ADVP (RB always))
      (VP (VB be)
        (VP (VBN made)
          (S
            (VP (TO to)
              (VP (VB fall)
                (PP (IN in)
                  (NP (DT the) (JJ right) (NN place)))))))))
    (. .) ('' '')))

det(accent-2, The-1)
nsubjpass(made-6, accent-2)
nsubj(fall-8, accent-2)
aux(made-6, should-3)
advmod(made-6, always-4)
auxpass(made-6, be-5)
root(ROOT-0, made-6)
aux(fall-8, to-7)
xcomp(made-6, fall-8)
det(place-12, the-10)
amod(place-12, right-11)
prep_in(fall-8, place-12)

(ROOT
  (S (`` ``)
    (PP (IN Beyond)
      (NP
        (NP (DT a) (NN doubt))
        (: --)
        (SBAR (CC but)
          (S
            (VP (MD might) (RB not))))))
    (NP (DT the) (JJ right) (NN place))
    (VP (VBP alter)
      (PP (IN with)
        (NP (DT the) (NN sense))))
    (. ?) ('' '')))

det(doubt-4, a-3)
prep_beyond(alter-12, doubt-4)
cc(might-7, but-6)
dep(doubt-4, might-7)
neg(might-7, not-8)
det(place-11, the-9)
amod(place-11, right-10)
nsubj(alter-12, place-11)
root(ROOT-0, alter-12)
det(sense-15, the-14)
prep_with(alter-12, sense-15)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Never))
    (. .)))

root(ROOT-0, Never-2)

(ROOT
  (S
    (NP (DT The) (NN rule))
    (VP (VBZ is)
      (ADJP (JJ strict) ('' ''))
      (`` ``)
      (SQ (VBZ Is)
        (NP
          (NP (RB there) (DT no) (NN danger))
          (PP (IN of)
            (S
              (VP (VBG making)
                (NP (DT the) (NN verse) (NNS monotonous))))))))
    (. ?) ('' '')))

det(rule-2, The-1)
nsubj(strict-4, rule-2)
cop(strict-4, is-3)
root(ROOT-0, strict-4)
dep(strict-4, Is-7)
advmod(danger-10, there-8)
neg(danger-10, no-9)
nsubj(Is-7, danger-10)
prepc_of(danger-10, making-12)
det(monotonous-15, the-13)
nn(monotonous-15, verse-14)
dobj(making-12, monotonous-15)

(ROOT
  (S (`` ``)
    (NP (RB Not) (DT that) (PRP I))
    (VP (VBP know))
    (. .) ('' '')))

neg(I-4, Not-2)
det(I-4, that-3)
nsubj(know-5, I-4)
root(ROOT-0, know-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT an) (NN idea))
        (, ,)
        (NP (NN ma'am))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP$ our) (JJ great) (NNS poets))
            (VP (VBP owe)
              (NP
                (NP (RB much))
                (PP (IN of)
                  (NP (PRP$ their) (NN music))))
              (PP (TO to)
                (NP
                  (NP (DT the) (NNS liberties))
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBP take)
                        (PP (IN with)
                          (NP (DT the) (NN rhythm)))))))))))))
    (. .)))

nsubj(have-3, I-2)
root(ROOT-0, have-3)
det(idea-5, an-4)
dobj(have-3, idea-5)
appos(idea-5, ma'am-7)
mark(owe-13, that-9)
poss(poets-12, our-10)
amod(poets-12, great-11)
nsubj(owe-13, poets-12)
dep(idea-5, owe-13)
dobj(owe-13, much-14)
poss(music-17, their-16)
prep_of(much-14, music-17)
det(liberties-20, the-19)
prep_to(owe-13, liberties-20)
nsubj(take-22, they-21)
rcmod(liberties-20, take-22)
det(rhythm-25, the-24)
prep_with(take-22, rhythm-25)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBP treat)
        (NP (DT the) (NN rule))
        (PP (IN as)
          (NP (PRP$ its) (NNS masters))))
      (, ,)
      (CC and)
      (VP (NN break)
        (NP (PRP it)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBP see)
            (ADJP (JJ fit))))))
    (. .) ('' '')))

nsubj(treat-2, They-1)
root(ROOT-0, treat-2)
det(rule-4, the-3)
dobj(treat-2, rule-4)
poss(masters-7, its-6)
prep_as(treat-2, masters-7)
conj_and(treat-2, break-10)
dobj(break-10, it-11)
advmod(see-14, when-12)
nsubj(see-14, they-13)
advcl(treat-2, see-14)
acomp(see-14, fit-15)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ wrong))
        (ADVP (RB there))))
    (. !)))

nsubj(wrong-5, You-2)
aux(wrong-5, must-3)
cop(wrong-5, be-4)
root(ROOT-0, wrong-5)
advmod(wrong-5, there-6)

(ROOT
  (S (CC But)
    (PP (IN in)
      (NP (DT any) (NN case)))
    (NP (PRP you))
    (VP (MD must) (RB not)
      (VP (VB presume)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP
                (NP (DT the) (NNS liberties))
                (PP (IN of)
                  (NP (DT a) (JJ great) (NN poet))))
              ('' '')
              (SBAR (`` ``)
                (S
                  (NP (PRP It))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (JJ poor) (NN reward))
                      (PP (IN for)
                        (S
                          (VP (VBG being)
                            (NP (DT a) (JJ great) (NN poet)
                              (S
                                (VP (TO to)
                                  (VP (VB be)
                                    (VP (VBN allowed)
                                      (S
                                        (VP (TO to)
                                          (VP (VB take)
                                            (NP (NNS liberties))))))))))))))))))))))
    (. .)))

cc(presume-8, But-1)
det(case-4, any-3)
prep_in(presume-8, case-4)
nsubj(presume-8, you-5)
nsubj(take-10, you-5)
aux(presume-8, must-6)
neg(presume-8, not-7)
root(ROOT-0, presume-8)
aux(take-10, to-9)
xcomp(presume-8, take-10)
det(liberties-12, the-11)
dobj(take-10, liberties-12)
det(poet-16, a-14)
amod(poet-16, great-15)
prep_of(liberties-12, poet-16)
nsubj(reward-23, It-19)
cop(reward-23, is-20)
det(reward-23, a-21)
amod(reward-23, poor-22)
dep(take-10, reward-23)
cop(poet-28, being-25)
det(poet-28, a-26)
amod(poet-28, great-27)
prepc_for(reward-23, poet-28)
aux(allowed-31, to-29)
auxpass(allowed-31, be-30)
vmod(poet-28, allowed-31)
aux(take-33, to-32)
xcomp(allowed-31, take-33)
dobj(take-33, liberties-34)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should)
      (VP (VB say)
        (SBAR (IN that)
          (PRN (, ,)
            (S
              (VP (VBG doing)
                (NP (PRP$ their) (NN work))
                (PP (TO to)
                  (NP
                    (NP (DT the) (JJS best))
                    (PP (IN of)
                      (NP (PRP$ their) (NN power)))))))
            (, ,))
          (S
            (NP (PRP they))
            (VP (VBD were)
              (VP (VBN rewarded)
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN discovery))
                    (PP (IN of)
                      (NP
                        (NP (JJR higher) (NNS laws))
                        (PP (IN of)
                          (NP (NN verse)))))))))))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, should-2)
root(ROOT-0, say-3)
mark(rewarded-18, that-4)
dep(rewarded-18, doing-6)
poss(work-8, their-7)
dobj(doing-6, work-8)
det(best-11, the-10)
prep_to(doing-6, best-11)
poss(power-14, their-13)
prep_of(best-11, power-14)
nsubjpass(rewarded-18, they-16)
auxpass(rewarded-18, were-17)
ccomp(say-3, rewarded-18)
det(discovery-21, the-20)
prep_with(rewarded-18, discovery-21)
amod(laws-24, higher-23)
prep_of(discovery-21, laws-24)
prep_of(laws-24, verse-26)

(ROOT
  (S
    (NP (DT Every) (NN one))
    (VP (MD must)
      (VP (VB walk)
        (PP (IN by)
          (NP
            (NP (DT the) (NN light))
            (VP (VBN given)
              (NP (PRP him)))))))
    (. .)))

det(one-2, Every-1)
nsubj(walk-4, one-2)
aux(walk-4, must-3)
root(ROOT-0, walk-4)
det(light-7, the-6)
prep_by(walk-4, light-7)
vmod(light-7, given-8)
dobj(given-8, him-9)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP
          (NP (DT the) (NNS rules))
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (NNS others))
              (VP (VBP have)
                (VP (VBN laid)
                  (PRT (RP down))))))))
      (NP (PRP he))
      (VP (MD may)
        (VP (VB learn)
          (S
            (VP (TO to)
              (VP (VB walk)))))))
    (: ;)
    (S (CC but)
      (SBAR (IN once)
        (S
          (NP (PRP$ his) (NN heart))
          (VP
            (VP (VBZ is)
              (ADJP (RB awake))
              (PP (TO to)
                (NP (NN truth))))
            (, ,)
            (CC and)
            (VP
              (NP (PRP$ his) (NN ear))
              (PP (TO to)
                (NP (NN measure) (, ,) (NN melody)
                  (CC and)
                  (NN harmony)))))))
      (, ,)
      (NP (PRP he))
      (VP (MD must)
        (VP (VB walk)
          (PP (IN by)
            (NP (DT the) (NN light))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN music) (NN God))
      (VP (VBZ gives)
        (NP (PRP him))))
    (. .) ('' '')))

det(rules-3, the-2)
dobj(laid-7, rules-3)
prep_by(learn-11, rules-3)
nsubj(laid-7, others-5)
aux(laid-7, have-6)
rcmod(rules-3, laid-7)
prt(laid-7, down-8)
nsubj(learn-11, he-9)
nsubj(walk-13, he-9)
aux(learn-11, may-10)
root(ROOT-0, learn-11)
aux(walk-13, to-12)
xcomp(learn-11, walk-13)
cc(walk-36, but-15)
mark(awake-20, once-16)
poss(heart-18, his-17)
nsubj(awake-20, heart-18)
cop(awake-20, is-19)
advcl(walk-36, awake-20)
prep_to(awake-20, truth-22)
poss(ear-26, his-25)
conj_and(awake-20, ear-26)
advcl(walk-36, ear-26)
prep_to(ear-26, measure-28)
prep_to(ear-26, melody-30)
conj_and(measure-28, melody-30)
prep_to(ear-26, harmony-32)
conj_and(measure-28, harmony-32)
nsubj(walk-36, he-34)
aux(walk-36, must-35)
conj_and(learn-11, walk-36)
det(light-39, the-38)
prep_by(walk-36, light-39)
det(God-44, the-42)
nn(God-44, music-43)
nsubj(gives-45, God-44)
conj_and(learn-11, gives-45)
dobj(gives-45, him-46)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is)
      (ADJP (JJ dangerous)
        (NP
          (NP (NN doctrine))
          (, ,)
          (NP (NNP Andrew)))))
    (. !) ('' '')))

nsubj(dangerous-4, That-2)
cop(dangerous-4, is-3)
root(ROOT-0, dangerous-4)
dep(dangerous-4, doctrine-5)
appos(doctrine-5, Andrew-7)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN lady))
      (, ,)
      (PP (IN with)
        (NP (DT a) (JJ superior) (NN smile))))
    (. .)))

root(ROOT-0, said-1)
det(lady-3, the-2)
dobj(said-1, lady-3)
det(smile-8, a-6)
amod(smile-8, superior-7)
prep_with(said-1, smile-8)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP she))
        (VP (VBD continued))))
    (, ,) (`` ``)
    (NP (PRP I))
    (VP (MD will)
      (VP
        (VP (VB mark)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD faults)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP see))))))))
        (, ,)
        (CC and)
        (VP (VB point)
          (NP (PRP them))
          (PRT (RP out))
          (PP (TO to)
            (NP (PRP you))))))
    (. .) ('' '')))

nsubj(continued-6, she-5)
parataxis(mark-11, continued-6)
nsubj(mark-11, I-9)
nsubj(point-18, I-9)
aux(mark-11, will-10)
root(ROOT-0, mark-11)
nsubj(faults-13, what-12)
ccomp(mark-11, faults-13)
nsubj(see-15, I-14)
ccomp(faults-13, see-15)
conj_and(mark-11, point-18)
dobj(point-18, them-19)
prt(point-18, out-20)
prep_to(point-18, you-22)

(ROOT
  (S
    (S (`` ``)
      (S
        (VP (VB Thank)
          (NP (PRP you))))
      (, ,)
      (VP (VBP ma'am)))
    (, ,)
    (CC but)
    (S
      (INTJ (VB please))
      (VP (VB do) (RB not)
        (VP (VB send)
          (NP (DT the) (NNS verses))
          (ADVP (RB anywhere)))))
    (. .) ('' '')))

ccomp(ma'am-5, Thank-2)
dobj(Thank-2, you-3)
root(ROOT-0, ma'am-5)
discourse(send-11, please-8)
aux(send-11, do-9)
neg(send-11, not-10)
conj_but(ma'am-5, send-11)
det(verses-13, the-12)
dobj(send-11, verses-13)
advmod(send-11, anywhere-14)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will) (RB not) (, ,)
      (SBAR (IN except)
        (S
          (NP (PRP I))
          (VP (VBP find)
            (S
              (NP (PRP them))
              (ADJP (JJ worthy)))))))
    (. .)))

nsubj(will-3, I-2)
root(ROOT-0, will-3)
neg(will-3, not-4)
mark(find-8, except-6)
nsubj(find-8, I-7)
advcl(will-3, find-8)
nsubj(worthy-10, them-9)
xcomp(find-8, worthy-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP need) (RB not)
      (VP (VB be)
        (ADJP (JJ afraid))))
    (. .)))

nsubj(need-2, You-1)
root(ROOT-0, need-2)
neg(need-2, not-3)
cop(afraid-5, be-4)
dep(need-2, afraid-5)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (PRP$ my) (NN father) (POS 's))
        (NN sake)))
    (NP (PRP I))
    (VP (MD will)
      (VP (VB have)
        (NP
          (NP (DT an) (NN eye))
          (PP (TO to)
            (NP (PRP$ your) (NN reputation))))))
    (. .) ('' '')))

poss(father-3, my-2)
poss(sake-5, father-3)
prep_for(have-8, sake-5)
nsubj(have-8, I-6)
aux(have-8, will-7)
root(ROOT-0, have-8)
det(eye-10, an-9)
dobj(have-8, eye-10)
poss(reputation-13, your-12)
prep_to(eye-10, reputation-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (VBN obliged)
          (PP (TO to)
            (NP
              (NP (PRP you))
              (, ,)
              (NP (NN ma'am)))))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP
        (NP (NNP Andrew))
        (, ,)
        (ADVP (RB but)
          (PP (IN with)
            (NP (PRP$ his) (JJ curious) (NN smile)))))
      (, ,)
      (ADJP (JJ hard)
        (S
          (VP (TO to)
            (VP (VB describe))))))
    (. .)))

nsubjpass(obliged-4, I-2)
auxpass(obliged-4, am-3)
ccomp(returned-11, obliged-4)
prep_to(obliged-4, you-6)
appos(you-6, ma'am-8)
root(ROOT-0, returned-11)
nsubj(returned-11, Andrew-12)
advmod(Andrew-12, but-14)
poss(smile-18, his-16)
amod(smile-18, curious-17)
prep_with(but-14, smile-18)
amod(Andrew-12, hard-20)
aux(describe-22, to-21)
xcomp(hard-20, describe-22)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD had)
      (NP
        (NP
          (PP (IN in)
            (NP (PRP it)))
          (NP (DT a) (JJ wonderful) (VBG mixing))
          (PP (IN of)
            (NP (NN sweetness)
              (CC and)
              (NN humor))))
        (, ,)
        (CC and)
        (NP
          (NP (DT a) (NN something))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD seemed)
                (S
                  (VP (TO to)
                    (VP (VB sit)
                      (NP (NNS miles))
                      (PP (IN above)
                        (NP (PRP$ his) (NN amusement))))))))))))
    (. .)))

nsubj(had-2, It-1)
root(ROOT-0, had-2)
prep_in(wonderful-6, it-4)
det(wonderful-6, a-5)
dobj(had-2, wonderful-6)
amod(wonderful-6, mixing-7)
prep_of(wonderful-6, sweetness-9)
prep_of(wonderful-6, humor-11)
conj_and(sweetness-9, humor-11)
det(something-15, a-14)
dobj(had-2, something-15)
conj_and(wonderful-6, something-15)
nsubj(seemed-17, something-15)
nsubj(sit-19, something-15)
rcmod(something-15, seemed-17)
aux(sit-19, to-18)
xcomp(seemed-17, sit-19)
dobj(sit-19, miles-20)
poss(amusement-23, his-22)
prep_above(sit-19, amusement-23)

(ROOT
  (S
    (NP (DT A) (NN heavenly))
    (VP (VBP smile)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (VP (, ,)
              (S
                (VP (VBG knowing)
                  (ADVP (RB too) (RB much))
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ angry))))))))))))
    (. .)))

det(heavenly-2, A-1)
nsubj(smile-3, heavenly-2)
root(ROOT-0, smile-3)
nsubj(knowing-7, it-4)
nsubj(angry-12, it-4)
aux(knowing-7, was-5)
ccomp(smile-3, knowing-7)
advmod(much-9, too-8)
advmod(knowing-7, much-9)
aux(angry-12, to-10)
cop(angry-12, be-11)
xcomp(knowing-7, angry-12)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (VBD had)
        (PP (IN in)
          (NP
            (NP (PRP it))
            (CC neither)
            (NP (NN offense)))))
      (CC nor)
      (VP (VBP scorn)))
    (. .)))

nsubj(had-2, It-1)
nsubj(scorn-8, It-1)
root(ROOT-0, had-2)
prep_in(had-2, it-4)
dep(it-4, neither-5)
conj(it-4, offense-6)
conj_nor(had-2, scorn-8)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP
          (NP (NN respect))
          (PP (IN of)
            (NP (PRP$ his) (NN poetry)))))
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ shy)
          (PP (IN like)
            (NP (DT a) (NN girl))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD showed)
        (NP
          (NP (DT no) (NN rejection))
          (PP (IN of)
            (NP
              (NP (DT the) (NN patronage))
              (VP (VBN forced)
                (PP (IN upon)
                  (NP (PRP him)))
                (PP (IN by)
                  (NP (DT the) (NN lady)))))))))
    (. .)))

prep_in(shy-8, respect-2)
poss(poetry-5, his-4)
prep_of(respect-2, poetry-5)
nsubj(shy-8, he-6)
cop(shy-8, was-7)
root(ROOT-0, shy-8)
det(girl-11, a-10)
prep_like(shy-8, girl-11)
nsubj(showed-15, he-14)
conj_but(shy-8, showed-15)
neg(rejection-17, no-16)
dobj(showed-15, rejection-17)
det(patronage-20, the-19)
prep_of(rejection-17, patronage-20)
vmod(patronage-20, forced-21)
prep_upon(forced-21, him-23)
det(lady-26, the-25)
agent(forced-21, lady-26)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD rose))
      (CC and)
      (VP (VBD stood)
        (NP (DT a) (NN moment))))
    (. .)))

nsubj(rose-2, He-1)
nsubj(stood-4, He-1)
root(ROOT-0, rose-2)
conj_and(rose-2, stood-4)
det(moment-6, a-5)
dobj(stood-4, moment-6)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Well) (, ,) (NNP Andrew))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ is)
            (NP (PRP it))))))
    (. ?) ('' '')))

nn(Andrew-4, Well-2)
root(ROOT-0, Andrew-4)
nsubj(it-8, Andrew-4)
cop(it-8, is-7)
rcmod(Andrew-4, it-8)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB When))
    (SQ (MD will)
      (NP (PRP you))
      (VP (VB allow)
        (S
          (NP (PRP me))
          (VP (TO to)
            (VP (VB call)
              (PP (IN for)
                (NP (DT the) (NNS verses))))))))
    (. ?) ('' '')))

advmod(allow-5, When-2)
aux(allow-5, will-3)
nsubj(allow-5, you-4)
root(ROOT-0, allow-5)
dobj(allow-5, me-6)
nsubj(call-8, me-6)
aux(call-8, to-7)
xcomp(allow-5, call-8)
det(verses-11, the-10)
prep_for(call-8, verses-11)

(ROOT
  (S
    (VP
      (PP (`` ``) (IN In)
        (UCP
          (NP
            (NP (DT the) (NN course))
            (PP (IN of)
              (NP (DT a) (NN week))))
          (CC or)
          (ADVP (RB so)))))
    (. .)))

root(ROOT-0, In-2)
det(course-4, the-3)
pobj(In-2, course-4)
det(week-7, a-6)
prep_of(course-4, week-7)
pobj(In-2, so-9)
advmod(course-4, so-9)
conj_or(course-4, so-9)

(ROOT
  (S
    (PP (IN By)
      (NP (DT that) (NN time)))
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB have)
        (VP (VBN made)
          (PRT (RP up))
          (NP (PRP$ my) (NN mind)))))
    (. .)))

det(time-3, that-2)
prep_by(made-7, time-3)
nsubj(made-7, I-4)
aux(made-7, shall-5)
aux(made-7, have-6)
root(ROOT-0, made-7)
prt(made-7, up-8)
poss(mind-10, my-9)
dobj(made-7, mind-10)

(ROOT
  (S
    (SBAR (IN If)
      (FRAG
        (PP (IN in)
          (NP (NN doubt)))))
    (, ,)
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB ask)
        (NP (PRP$ my) (NN father))))
    (. .) ('' '')))

mark(in-2, If-1)
advcl(ask-7, in-2)
pobj(in-2, doubt-3)
nsubj(ask-7, I-5)
aux(ask-7, shall-6)
root(ROOT-0, ask-7)
poss(father-9, my-8)
dobj(ask-7, father-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD would) (RB n't)
      (VP (VB like)
        (NP (DT the) (NN laird)
          (S
            (VP (TO to)
              (VP (VB think)
                (S
                  (NP (PRP I))
                  (VP (VB spend)
                    (NP (PRP$ my) (NN time))
                    (PP (IN on)
                      (NP (NN poetry)))))))))))
    (. .) ('' '')))

nsubj(like-5, I-2)
aux(like-5, would-3)
neg(like-5, n't-4)
root(ROOT-0, like-5)
det(laird-7, the-6)
dobj(like-5, laird-7)
aux(think-9, to-8)
vmod(laird-7, think-9)
nsubj(spend-11, I-10)
ccomp(think-9, spend-11)
poss(time-13, my-12)
dobj(spend-11, time-13)
prep_on(spend-11, poetry-15)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP write)
      (NP
        (NP (NN poetry))
        (, ,)
        (NP (NNP Andrew))))
    (. !)))

nsubj(write-3, You-2)
root(ROOT-0, write-3)
dobj(write-3, poetry-4)
appos(poetry-4, Andrew-6)

(ROOT
  (S
    (NP (DT A) (NN man))
    (VP (MD should) (RB not)
      (VP (VB do)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (VP (MD would) (RB not)
              (VP (VB have)
                (VP (VBN known))))))))
    (. .) ('' '')))

det(man-2, A-1)
nsubj(do-5, man-2)
aux(do-5, should-3)
neg(do-5, not-4)
root(ROOT-0, do-5)
dobj(known-11, what-6)
nsubj(known-11, he-7)
aux(known-11, would-8)
neg(known-11, not-9)
aux(known-11, have-10)
ccomp(do-5, known-11)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is)
      (ADJP (JJ true))
      (, ,)
      (NP
        (NP (NN ma'am))
        (: ;)
        (S
          (NP (PRP I))
          (ADVP (RB only))
          (VP (VBD feared)
            (NP (DT an) (JJ erroneous) (NN conclusion))))))
    (. .) ('' '')))

nsubj(true-4, That-2)
cop(true-4, is-3)
root(ROOT-0, true-4)
dep(true-4, ma'am-6)
nsubj(feared-10, I-8)
advmod(feared-10, only-9)
dep(ma'am-6, feared-10)
det(conclusion-13, an-11)
amod(conclusion-13, erroneous-12)
dobj(feared-10, conclusion-13)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB take)
        (NP
          (NP (NN care))
          (PP (IN of)
            (NP (DT that))))))
    (. .)))

nsubj(take-4, I-2)
aux(take-4, will-3)
root(ROOT-0, take-4)
dobj(take-4, care-5)
prep_of(care-5, that-7)

(ROOT
  (S
    (NP (PRP$ My) (NN father))
    (VP (VBZ knows)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (NP (DT a) (JJ hard-working) (JJ young) (NN man))))))
    (. .)))

poss(father-2, My-1)
nsubj(knows-3, father-2)
root(ROOT-0, knows-3)
mark(man-10, that-4)
nsubj(man-10, you-5)
cop(man-10, are-6)
det(man-10, a-7)
amod(man-10, hard-working-8)
amod(man-10, young-9)
ccomp(knows-3, man-10)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is) (RB not)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (PRP$ his) (NNS farms))
            (PP (IN in)
              (NP
                (NP (JJR better) (NN order))
                (PP (IN than)
                  (NP (NNP yours)))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(is-2, not-3)
nsubj(is-2, one-4)
poss(farms-7, his-6)
prep_of(one-4, farms-7)
amod(order-10, better-9)
prep_in(farms-7, order-10)
prep_than(order-10, yours-12)

(ROOT
  (S
    (S
      (VP (VBG Were)
        (NP (PRP it))
        (ADVP (RB otherwise))))
    (, ,)
    (NP (PRP I))
    (VP (MD should) (RB not)
      (VP (VB be)
        (ADJP (RB so) (JJ interested)
          (PP (IN in)
            (NP (PRP$ your) (NN poetry))))))
    (. .) ('' '')))

cop(it-2, Were-1)
vmod(interested-10, it-2)
advmod(it-2, otherwise-3)
nsubj(interested-10, I-5)
aux(interested-10, should-6)
neg(interested-10, not-7)
cop(interested-10, be-8)
advmod(interested-10, so-9)
root(ROOT-0, interested-10)
poss(poetry-13, your-12)
prep_in(interested-10, poetry-13)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD wished)
      (S
        (NP (PRP her))
        (ADJP (RBR less) (JJ interested)
          (PP (IN in)
            (NP (PRP it))))))
    (. .)))

nsubj(wished-2, Andrew-1)
root(ROOT-0, wished-2)
nsubj(interested-5, her-3)
advmod(interested-5, less-4)
xcomp(wished-2, interested-5)
prep_in(interested-5, it-7)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB have)
          (S
            (NP (PRP$ his) (NNS verses))
            (VP (VB read))))))
    (VP (VBD was)
      (PP (IN like)
        (S
          (VP (VBG having)
            (S
              (NP (DT a) (NN finger))
              (VP (VBD poked)
                (PP (IN in)
                  (NP (PRP$ his) (NN eye)))))))))
    (. .)))

aux(have-2, To-1)
csubj(was-6, have-2)
poss(verses-4, his-3)
nsubj(read-5, verses-4)
ccomp(have-2, read-5)
root(ROOT-0, was-6)
prepc_like(was-6, having-8)
det(finger-10, a-9)
nsubj(poked-11, finger-10)
ccomp(having-8, poked-11)
poss(eye-14, his-13)
prep_in(poked-11, eye-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had) (RB not)
      (VP (VBN known)
        (SBAR (IN that)
          (S
            (NP (PRP$ his) (NN mother))
            (VP (VBD looked)
              (PP (IN at)
                (NP (PRP$ his) (NNS papers))))))))
    (. .)))

nsubj(known-4, He-1)
aux(known-4, had-2)
neg(known-4, not-3)
root(ROOT-0, known-4)
mark(looked-8, that-5)
poss(mother-7, his-6)
nsubj(looked-8, mother-7)
ccomp(known-4, looked-8)
poss(papers-11, his-10)
prep_at(looked-8, papers-11)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP
      (VP (VBD showed)
        (NP
          (NP (JJ little) (NN sign))
          (PP (IN of)
            (NP (PRP$ his) (NN annoyance)))))
      (, ,)
      (VP (VBP bade)
        (NP (DT the) (NN lady) (NN good-morning)))
      (, ,)
      (CC and)
      (VP (VBD left)
        (NP (DT the) (NN kitchen))))
    (. .)))

nsubj(showed-3, he-2)
nsubj(bade-10, he-2)
nsubj(left-16, he-2)
root(ROOT-0, showed-3)
amod(sign-5, little-4)
dobj(showed-3, sign-5)
poss(annoyance-8, his-7)
prep_of(sign-5, annoyance-8)
conj_but(showed-3, bade-10)
det(good-morning-13, the-11)
nn(good-morning-13, lady-12)
dobj(bade-10, good-morning-13)
conj_and(showed-3, left-16)
det(kitchen-18, the-17)
dobj(left-16, kitchen-18)

(ROOT
  (S
    (NP (NNP Miss) (NNP Fordyce))
    (VP
      (VP (VBD followed)
        (NP (PRP him))
        (PP (TO to)
          (NP (DT the) (NN door))))
      (, ,)
      (CC and)
      (VP (VBD stood)
        (PP (IN for)
          (NP
            (NP (DT a) (NN moment))
            (VP (VBG looking)
              (PRT (RP out)))))))
    (. .)))

nn(Fordyce-2, Miss-1)
nsubj(followed-3, Fordyce-2)
nsubj(stood-10, Fordyce-2)
root(ROOT-0, followed-3)
dobj(followed-3, him-4)
det(door-7, the-6)
prep_to(followed-3, door-7)
conj_and(followed-3, stood-10)
det(moment-13, a-12)
prep_for(stood-10, moment-13)
vmod(moment-13, looking-14)
prt(looking-14, out-15)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN front))
        (PP (IN of)
          (SBAR
            (S
              (NP (PRP her))
              (VP (VBD was)
                (NP
                  (NP (DT a) (JJ paved) (NN court))
                  (, ,)
                  (VP (VBN surrounded)
                    (PP (IN with)
                      (NP (JJ low) (NNS buildings))))
                  (, ,)
                  (PP (IN between)
                    (SBAR
                      (WHNP (CD two)
                        (WHPP (IN of)
                          (WHNP (WDT which))))
                      (S
                        (VP (VBD was)
                          (ADJP (JJ visible))
                          (, ,)
                          (PP (IN at)
                            (NP
                              (NP (DT the) (NN distance))
                              (PP (IN of)
                                (NP (DT a) (NN mile)
                                  (CC or)
                                  (RB so))))))))))))))))
    (, ,)
    (NP (DT a) (NN railway))
    (VP (VBP line)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP it))
          (VP (VBD approached)
            (NP (DT a) (NN viaduct))))))
    (. .)))

nsubj(court-8, her-4)
cop(court-8, was-5)
det(court-8, a-6)
amod(court-8, paved-7)
prepc_in_front_of(line-33, court-8)
vmod(court-8, surrounded-10)
amod(buildings-13, low-12)
prep_with(surrounded-10, buildings-13)
nsubj(visible-20, two-16)
prep_of(two-16, which-18)
cop(visible-20, was-19)
prepc_between(court-8, visible-20)
det(distance-24, the-23)
prep_at(visible-20, distance-24)
det(mile-27, a-26)
prep_of(distance-24, mile-27)
prep_of(distance-24, so-29)
advmod(mile-27, so-29)
conj_or(mile-27, so-29)
det(railway-32, a-31)
nsubj(line-33, railway-32)
root(ROOT-0, line-33)
advmod(approached-36, where-34)
nsubj(approached-36, it-35)
advcl(line-33, approached-36)
det(viaduct-38, a-37)
dobj(approached-36, viaduct-38)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD heard)
        (NP
          (NP (DT the) (NN sound))
          (PP (IN of)
            (NP (DT a) (VBG coming) (NN train))))))
    (, ,)
    (CC and)
    (S
      (NP
        (SBAR
          (WHNP (WP who))
          (S
            (PP (IN in)
              (NP (DT a) (NN country) (NN place)))
            (VP (MD will) (RB not)
              (VP (VB stand)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (NP (CD one))))))))))
      (VP (VBP pass)))
    (. !)))

nsubj(heard-2, She-1)
root(ROOT-0, heard-2)
det(sound-4, the-3)
dobj(heard-2, sound-4)
det(train-8, a-6)
amod(train-8, coming-7)
prep_of(sound-4, train-8)
nsubj(stand-18, who-11)
nsubj(see-20, who-11)
det(place-15, a-13)
nn(place-15, country-14)
prep_in(stand-18, place-15)
aux(stand-18, will-16)
neg(stand-18, not-17)
nsubj(pass-22, stand-18)
aux(see-20, to-19)
xcomp(stand-18, see-20)
dobj(see-20, one-21)
conj_and(heard-2, pass-22)

(ROOT
  (NP (NNP CHAPTER) (NNP II) (. .)))

nn(II-2, CHAPTER-1)
root(ROOT-0, II-2)

(ROOT
  (NP (DT AN) (NN ACCIDENT) (. .)))

det(ACCIDENT-2, AN-1)
root(ROOT-0, ACCIDENT-2)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (DT the) (CD two))
        (VP (VBD were)
          (VP (VBG talking)))))
    (, ,)
    (NP
      (NP (DT a) (JJ long) (NN train))
      (, ,)
      (NP
        (NP (NN part) (NNS carriages))
        (, ,)
        (NP (NN part) (NNS trucks)))
      (, ,))
    (VP (VBD was)
      (VP (VBN rattling)
        (PP (IN through)
          (NP
            (NP (DT a) (JJ dreary) (NN country))
            (, ,)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP it))
                (VP (MD could)
                  (ADVP (RB never))
                  (VP (VB have)
                    (VP (VBN been)
                      (VP (VBD were)
                        (ADVP (RB there)
                          (NP (RB not) (NNS regions)))
                        (ADJP (RB very) (JJ different)
                          (PP (IN on)
                            (NP
                              (NP (DT both) (NNS sides))
                              (PP (IN of)
                                (NP (PRP it))))))))))))))))
    (. .)))

mark(talking-5, While-1)
det(two-3, the-2)
nsubj(talking-5, two-3)
aux(talking-5, were-4)
advcl(rattling-18, talking-5)
det(train-9, a-7)
amod(train-9, long-8)
nsubjpass(rattling-18, train-9)
nn(carriages-12, part-11)
appos(train-9, carriages-12)
nn(trucks-15, part-14)
appos(carriages-12, trucks-15)
auxpass(rattling-18, was-17)
root(ROOT-0, rattling-18)
det(country-22, a-20)
amod(country-22, dreary-21)
prep_through(rattling-18, country-22)
advmod(different-35, where-24)
nsubjpass(different-35, it-25)
aux(different-35, could-26)
neg(different-35, never-27)
aux(different-35, have-28)
auxpass(different-35, been-29)
cop(different-35, were-30)
advmod(different-35, there-31)
neg(regions-33, not-32)
pobj(there-31, regions-33)
advmod(different-35, very-34)
rcmod(country-22, different-35)
det(sides-38, both-37)
prep_on(different-35, sides-38)
prep_of(sides-38, it-40)

(ROOT
  (S
    (SBAR (IN For)
      (S
        (NP
          (NP (NNS miles))
          (PP (IN in)
            (NP
              (NP (DT any) (NN direction) (, ,) (NN nothing)
                (CC but)
                (NN humpy))
              (VP (VBN moorland)))))
        (VP (VBD was)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN seen))))))))
    (, ,)
    (NP
      (NP
        (NP (DT a) (NN gathering))
        (PP (IN of)
          (NP (JJ low) (NNS hills)))
        (, ,)
        (PP (IN with)
          (NP (RB now))))
      (CC and)
      (ADVP (RB then))
      (NP
        (NP (DT a) (JJR higher) (NN one))
        (, ,)
        (NP (PRP$ its) (NNS sides))))
    (VP (VBN broken)
      (PP (IN by)
        (NP (JJ occasional) (NNS torrents)))
      (, ,)
      (PP (IN in)
        (NP
          (NP (JJ poor) (NN likeness))
          (PP (IN of)
            (NP (DT a) (NN mountain))))))
    (. .)))

mark(was-11, For-1)
nsubj(was-11, miles-2)
nsubjpass(seen-14, miles-2)
det(direction-5, any-4)
prep_in(miles-2, direction-5)
prep_in(miles-2, nothing-7)
conj_but(direction-5, nothing-7)
prep_in(miles-2, humpy-9)
conj_but(direction-5, humpy-9)
vmod(direction-5, moorland-10)
advcl(broken-32, was-11)
aux(seen-14, to-12)
auxpass(seen-14, be-13)
xcomp(was-11, seen-14)
det(gathering-17, a-16)
nsubj(broken-32, gathering-17)
amod(hills-20, low-19)
prep_of(gathering-17, hills-20)
prep(gathering-17, with-22)
pobj(with-22, now-23)
advmod(one-28, then-25)
det(one-28, a-26)
amod(one-28, higher-27)
conj_and(gathering-17, one-28)
nsubj(broken-32, one-28)
poss(sides-31, its-30)
appos(one-28, sides-31)
root(ROOT-0, broken-32)
amod(torrents-35, occasional-34)
prep_by(broken-32, torrents-35)
amod(likeness-39, poor-38)
prep_in(broken-32, likeness-39)
det(mountain-42, a-41)
prep_of(likeness-39, mountain-42)

(ROOT
  (S
    (S
      (NP (DT No) (NN smoke))
      (VP (VBD proclaimed)
        (NP
          (NP (DT the) (NN presence))
          (PP (IN of)
            (NP (JJ human) (NN dwelling))))))
    (: ;)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBD were)
        (NP
          (NP (NNS spots))
          (PP (IN between)
            (NP (DT the) (NNS hills))))
        (SBAR
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP
                (NP (DT the) (NN hand))
                (PP (IN of)
                  (NP (NN man))))
              (VP (VBD had)
                (VP (VBN helped)
                  (NP
                    (NP (DT the) (NN birth))
                    (PP (IN of)
                      (NP (DT a) (JJ feeble) (NN fertility))))))))
          (: ;)
          (CC and)
          (SBAR (IN in)
            (S
              (NP (NN front))
              (VP (VBD was)
                (NP (DT a)
                  (ADJP (JJ small)
                    (CC but)
                    (JJ productive))
                  (NN valley))
                (, ,)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN edge))
                    (PP (IN of)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBD stood)
                            (NP
                              (NP (DT the) (JJ ancient) (NN house))
                              (PP (IN of)
                                (NP (NNP Potlurg))))
                            (, ,)
                            (PP (IN with)
                              (NP
                                (NP (DT the) (NN heath))
                                (PP (IN behind)
                                  (NP (PRP it)))))
                            (: :)
                            (PP (IN over)
                              (NP
                                (NP (DT a) (JJ narrow) (NN branch))
                                (PP (IN of)
                                  (NP
                                    (NP (DT this) (NN valley))
                                    (VP (VBD went)
                                      (NP (DT the) (NN viaduct)))))))))))))))))))
    (. .)))

neg(smoke-2, No-1)
nsubj(proclaimed-3, smoke-2)
root(ROOT-0, proclaimed-3)
det(presence-5, the-4)
dobj(proclaimed-3, presence-5)
amod(dwelling-8, human-7)
prep_of(presence-5, dwelling-8)
expl(were-12, there-11)
conj_but(proclaimed-3, were-12)
nsubj(were-12, spots-13)
det(hills-16, the-15)
prep_between(spots-13, hills-16)
advmod(helped-23, where-17)
det(hand-19, the-18)
nsubj(helped-23, hand-19)
prep_of(hand-19, man-21)
aux(helped-23, had-22)
advcl(were-12, helped-23)
det(birth-25, the-24)
dobj(helped-23, birth-25)
det(fertility-29, a-27)
amod(fertility-29, feeble-28)
prep_of(birth-25, fertility-29)
mark(valley-39, in-32)
nsubj(valley-39, front-33)
cop(valley-39, was-34)
det(valley-39, a-35)
amod(valley-39, small-36)
conj_but(small-36, productive-38)
amod(valley-39, productive-38)
advcl(were-12, valley-39)
conj_and(helped-23, valley-39)
det(edge-43, the-42)
prep_on(valley-39, edge-43)
nsubj(stood-46, which-45)
prepc_of(edge-43, stood-46)
det(house-49, the-47)
amod(house-49, ancient-48)
dobj(stood-46, house-49)
prep_of(house-49, Potlurg-51)
det(heath-55, the-54)
prep_with(stood-46, heath-55)
prep_behind(heath-55, it-57)
det(branch-62, a-60)
amod(branch-62, narrow-61)
prep_over(stood-46, branch-62)
det(valley-65, this-64)
prep_of(branch-62, valley-65)
vmod(valley-65, went-66)
det(viaduct-68, the-67)
dobj(went-66, viaduct-68)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a) (JJ slow) (NN train))
      (, ,)
      (PP (IN with)
        (NP (JJ few) (NNS passengers))))
    (. .)))

nsubj(train-5, It-1)
cop(train-5, was-2)
det(train-5, a-3)
amod(train-5, slow-4)
root(ROOT-0, train-5)
amod(passengers-9, few-8)
prep_with(train-5, passengers-9)

(ROOT
  (S
    (PP (IN Of)
      (NP
        (NP (DT these) (NN one))
        (SBAR
          (S
            (VP (VBD was)
              (VP (VBG looking)
                (PP (IN from)
                  (NP (PRP$ his) (NN window)))
                (PP (IN with)
                  (NP
                    (NP (DT a)
                      (ADJP (JJ vague) (, ,) (JJ foolish))
                      (NN sense))
                    (PP (IN of)
                      (NP (NN superiority)))))
                (, ,)
                (S
                  (VP (VBG thinking)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (DT a)
                          (ADJP (NNP forgotten) (, ,) (JJ scarce)))
                        (VP (VBD created)
                          (NP (NN country)))))))))))))
    (NP (PRP it))
    (VP (VBD seemed))
    (. .)))

det(one-3, these-2)
prep_of(seemed-27, one-3)
aux(looking-5, was-4)
rcmod(one-3, looking-5)
poss(window-8, his-7)
prep_from(looking-5, window-8)
det(sense-14, a-10)
amod(foolish-13, vague-11)
amod(sense-14, foolish-13)
prep_with(looking-5, sense-14)
prep_of(sense-14, superiority-16)
vmod(looking-5, thinking-18)
dobj(created-24, what-19)
det(scarce-23, a-20)
amod(scarce-23, forgotten-21)
nsubj(created-24, scarce-23)
ccomp(thinking-18, created-24)
dobj(created-24, country-25)
nsubj(seemed-27, it-26)
root(ROOT-0, seemed-27)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (NP (DT a)
        (ADJP (JJ well-dressed) (, ,) (JJ good-looking))
        (NN fellow))
      (, ,)
      (PP (IN with)
        (NP
          (NP
            (NP (DT a)
              (ADJP (JJ keen)
                (CC but)
                (JJ pale-gray))
              (NN eye))
            (, ,)
            (CC and)
            (NP (DT a)
              (ADJP (JJ fine))
              (NN forehead)))
          (, ,)
          (CC but)
          (NP
            (NP (DT a) (NN chin))
            (PP (JJ such) (IN as)
              (SQ (VBZ is)
                (VP (VBN held)
                  (S
                    (VP (TO to)
                      (VP (VB indicate)
                        (NP (NN weakness))))))))))))
    (. .)))

nsubj(fellow-7, He-1)
cop(fellow-7, was-2)
det(fellow-7, a-3)
amod(good-looking-6, well-dressed-4)
amod(fellow-7, good-looking-6)
root(ROOT-0, fellow-7)
det(eye-14, a-10)
amod(eye-14, keen-11)
conj_but(keen-11, pale-gray-13)
amod(eye-14, pale-gray-13)
prep_with(fellow-7, eye-14)
det(forehead-19, a-17)
amod(forehead-19, fine-18)
prep_with(fellow-7, forehead-19)
conj_and(eye-14, forehead-19)
det(chin-23, a-22)
prep_with(fellow-7, chin-23)
conj_but(eye-14, chin-23)
mwe(as-25, such-24)
prep(chin-23, as-25)
auxpass(held-27, is-26)
dep(as-25, held-27)
aux(indicate-29, to-28)
xcomp(held-27, indicate-29)
dobj(indicate-29, weakness-30)

(ROOT
  (S
    (NP
      (NP
        (NP
          (QP (JJR More) (IN than) (CD one)))
        (PRN (, ,)
          (ADVP (RB however))
          (, ,)))
      (PP (IN of)
        (NP (DT the) (JJS strongest) (NNS women))))
    (PRN
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN known))))
      (, ,))
    (VP (VBD were)
      (ADJP (JJ defective)
        (PP (IN in)
          (NP (NN chin)))))
    (. .)))

mwe(than-2, More-1)
quantmod(one-3, than-2)
nsubj(defective-16, one-3)
dep(one-3, however-5)
det(women-10, the-8)
amod(women-10, strongest-9)
prep_of(one-3, women-10)
nsubj(known-13, I-11)
aux(known-13, have-12)
parataxis(defective-16, known-13)
cop(defective-16, were-15)
root(ROOT-0, defective-16)
prep_in(defective-16, chin-18)

(ROOT
  (S
    (NP (DT The) (JJ young) (NN man))
    (VP (VBD was)
      (PP
        (PP (IN in)
          (NP
            (NP (DT the) (RB only) (JJ first-class) (NN carriage))
            (PP (IN of)
              (NP (DT the) (NN train)))))
        (, ,)
        (CC and)
        (ADVP (RB alone))
        (PP (IN in)
          (NP (PRP it)))))
    (. .)))

det(man-3, The-1)
amod(man-3, young-2)
nsubj(was-4, man-3)
root(ROOT-0, was-4)
det(carriage-9, the-6)
advmod(carriage-9, only-7)
amod(carriage-9, first-class-8)
prep_in(was-4, carriage-9)
det(train-12, the-11)
prep_of(carriage-9, train-12)
advmod(was-4, alone-15)
prep_in(was-4, it-17)
conj_and(carriage-9, it-17)

(ROOT
  (S
    (S
      (VP (VBN Dressed)
        (PP (IN in)
          (NP (DT a) (JJ gray) (NN suit)))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD was)
        (ADJP
          (NP (DT a) (RB little))
          (RB too) (JJ particular))
        (PP (IN in)
          (NP
            (NP (DT the) (JJR smaller) (NNS points))
            (PP (IN of)
              (NP (PRP$ his) (NN attire))))))
      (, ,)
      (CC and)
      (VP (VBD lacked)
        (PP (IN in)
          (NP
            (NP (NN consequence) (NN something))
            (PP (IN of)
              (NP
                (NP (DT the) (NN look))
                (PP (IN of)
                  (NP (DT a) (NN gentleman)))))))))
    (. .)))

vmod(particular-12, Dressed-1)
det(suit-5, a-3)
amod(suit-5, gray-4)
prep_in(Dressed-1, suit-5)
nsubj(particular-12, he-7)
nsubj(lacked-22, he-7)
cop(particular-12, was-8)
det(little-10, a-9)
dep(particular-12, little-10)
advmod(particular-12, too-11)
root(ROOT-0, particular-12)
det(points-16, the-14)
amod(points-16, smaller-15)
prep_in(particular-12, points-16)
poss(attire-19, his-18)
prep_of(points-16, attire-19)
conj_and(particular-12, lacked-22)
nn(something-25, consequence-24)
prep_in(lacked-22, something-25)
det(look-28, the-27)
prep_of(something-25, look-28)
det(gentleman-31, a-30)
prep_of(look-28, gentleman-31)

(ROOT
  (S
    (S
      (VP (VBG Every)
        (ADVP (RB now))))
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (MD would)
        (VP
          (VP (VB take)
            (PRT (RP off))
            (NP (PRP$ his) (JJ hard) (NN round) (NN hat)))
          (, ,)
          (CC and)
          (VP (VB pass)
            (NP (DT a) (JJ white) (JJ left) (NN hand))
            (PP (IN through)
              (NP (PRP$ his) (JJ short-cut) (JJ mousey) (NN hair)))
            (, ,)
            (SBAR (IN while)
              (S
                (NP (PRP$ his) (NN right))
                (VP (VBD caressed)
                  (NP
                    (NP (DT a)
                      (ADJP (RB far) (JJR longer))
                      (NN mustache))
                    (, ,)
                    (SBAR
                      (WHPP (IN in)
                        (WHNP (WDT which)))
                      (S
                        (NP (PRP he))
                        (VP (VBD seemed)
                          (ADJP (JJ interested)))))))))))))
    (. .)))

root(ROOT-0, Every-1)
advmod(Every-1, now-2)
advmod(take-7, then-4)
nsubj(take-7, he-5)
nsubj(pass-15, he-5)
aux(take-7, would-6)
conj_and(Every-1, take-7)
prt(take-7, off-8)
poss(hat-12, his-9)
amod(hat-12, hard-10)
nn(hat-12, round-11)
dobj(take-7, hat-12)
conj_and(Every-1, pass-15)
conj_and(take-7, pass-15)
det(hand-19, a-16)
amod(hand-19, white-17)
amod(hand-19, left-18)
dobj(pass-15, hand-19)
poss(hair-24, his-21)
amod(hair-24, short-cut-22)
amod(hair-24, mousey-23)
prep_through(pass-15, hair-24)
mark(caressed-29, while-26)
poss(right-28, his-27)
nsubj(caressed-29, right-28)
advcl(pass-15, caressed-29)
det(mustache-33, a-30)
advmod(longer-32, far-31)
amod(mustache-33, longer-32)
dobj(caressed-29, mustache-33)
prep_in(seemed-38, mustache-33)
nsubj(seemed-38, he-37)
rcmod(mustache-33, seemed-38)
acomp(seemed-38, interested-39)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ certain) (NN indescribable) (NN heaviness)
        (CC and)
        (NN lack))
      (PP (IN of)
        (NP (NN light))))
    (VP (VBD characterized)
      (NP (PRP$ his) (JJ pale) (NN face)))
    (. .)))

det(heaviness-4, A-1)
amod(heaviness-4, certain-2)
nn(heaviness-4, indescribable-3)
nsubj(characterized-9, heaviness-4)
conj_and(heaviness-4, lack-6)
nsubj(characterized-9, lack-6)
prep_of(heaviness-4, light-8)
root(ROOT-0, characterized-9)
poss(face-12, his-10)
amod(face-12, pale-11)
dobj(characterized-9, face-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a) (JJ lovely) (NN day))
      (PP (IN in)
        (NP (RB early) (NNP June))))
    (. .)))

nsubj(day-5, It-1)
cop(day-5, was-2)
det(day-5, a-3)
amod(day-5, lovely-4)
root(ROOT-0, day-5)
advmod(June-8, early-7)
prep_in(day-5, June-8)

(ROOT
  (S
    (S
      (NP (DT The) (NN air))
      (VP (VBD was)
        (ADJP (RB rather) (JJ cold))))
    (, ,)
    (CC but)
    (S
      (NP (NN youth)
        (CC and)
        (NN health))
      (VP (VBP care)
        (NP (RB little) (RB about) (NN temperature))
        (PP (IN on)
          (NP (DT a) (NN holiday)))
        (, ,)
        (PP (IN with)
          (NP
            (NP
              (NP (DT the) (NN sun) (NN shining))
              (, ,)
              (CC and)
              (NP (DT that) (JJ sweetest) (NN sense)))
            (PRN (: --)
              (PP
                (PP (TO to)
                  (NP
                    (NP (JJ such))
                    (ADVP (IN at) (JJS least))))
                (SBAR (IN as)
                  (S
                    (VP (VBP are)
                      (ADVP (RB ordinarily))
                      (VP (VBN bound)
                        (PP (IN by)
                          (NP (NN routine))))))))
              (: --))
            (PP (IN of)
              (S
                (VP (VBG having)
                  (S
                    (NP (NN nothing))
                    (VP (TO to)
                      (VP (VB do)))))))))))
    (. .)))

det(air-2, The-1)
nsubj(cold-5, air-2)
cop(cold-5, was-3)
advmod(cold-5, rather-4)
root(ROOT-0, cold-5)
nsubj(care-11, youth-8)
conj_and(youth-8, health-10)
nsubj(care-11, health-10)
conj_but(cold-5, care-11)
advmod(temperature-14, little-12)
advmod(temperature-14, about-13)
dobj(care-11, temperature-14)
det(holiday-17, a-16)
prep_on(care-11, holiday-17)
det(shining-22, the-20)
nn(shining-22, sun-21)
prep_with(care-11, shining-22)
det(sense-27, that-25)
amod(sense-27, sweetest-26)
prep_with(care-11, sense-27)
conj_and(shining-22, sense-27)
prep_to(shining-22, such-30)
advmod(such-30, at-31)
pobj(at-31, least-32)
mark(bound-36, as-33)
auxpass(bound-36, are-34)
advmod(bound-36, ordinarily-35)
prepc_to(shining-22, bound-36)
agent(bound-36, routine-38)
prepc_of(shining-22, having-41)
dobj(having-41, nothing-42)
nsubj(do-44, nothing-42)
aux(do-44, to-43)
ccomp(having-41, do-44)
xcomp(having-41, do-44)

(ROOT
  (S
    (S
      (PP (TO To)
        (NP (JJ many) (NNS men)
          (CC and)
          (NNS women)))
      (NP (DT the) (JJS greatest) (NN trouble))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB choose))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (NN self))
            (VP (VBZ is)
              (NP
                (NP (DT the) (JJS hardest))
                (PP (IN of)
                  (NP (NNS masters)
                    (S
                      (VP (TO to)
                        (VP (VB please))))))))))))
    (: ;)
    (S (CC but)
      (ADVP (RB as) (RB yet))
      (NP (NNP George) (NNP Crawford))
      (VP (VBD had) (RB not)
        (VP (VBN been)
          (VP (VBN troubled)
            (PP (IN with)
              (NP (JJ much) (NN choosing)))))))
    (. .)))

amod(men-3, many-2)
prep_to(is-9, men-3)
conj_and(men-3, women-5)
prep_to(is-9, women-5)
det(trouble-8, the-6)
amod(trouble-8, greatest-7)
nsubj(is-9, trouble-8)
nsubj(choose-11, trouble-8)
root(ROOT-0, is-9)
aux(choose-11, to-10)
xcomp(is-9, choose-11)
mark(hardest-17, for-13)
nsubj(hardest-17, self-14)
cop(hardest-17, is-15)
det(hardest-17, the-16)
advcl(is-9, hardest-17)
prep_of(hardest-17, masters-19)
aux(please-21, to-20)
vmod(masters-19, please-21)
cc(troubled-31, but-23)
advmod(yet-25, as-24)
advmod(troubled-31, yet-25)
nn(Crawford-27, George-26)
nsubjpass(troubled-31, Crawford-27)
aux(troubled-31, had-28)
neg(troubled-31, not-29)
auxpass(troubled-31, been-30)
parataxis(is-9, troubled-31)
amod(choosing-34, much-33)
prep_with(troubled-31, choosing-34)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ crowded) (NN town))
      (PP (IN behind)
        (NP
          (NP (PRP him))
          (, ,)
          (NP
            (NP (DT the) (NNS loneliness))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD looked)
                  (PP (RB upon)))))))))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN pleasure))
        (PP (TO to)
          (NP (PRP him)))))
    (. .)))

det(town-3, A-1)
amod(town-3, crowded-2)
nsubj(pleasure-14, town-3)
prep_behind(town-3, him-5)
det(loneliness-8, the-7)
appos(him-5, loneliness-8)
pobj(upon-11, loneliness-8)
nsubj(looked-10, he-9)
rcmod(loneliness-8, looked-10)
prep(looked-10, upon-11)
cop(pleasure-14, was-12)
det(pleasure-14, a-13)
root(ROOT-0, pleasure-14)
prep_to(pleasure-14, him-16)

(ROOT
  (S
    (S
      (S
        (VP (VBN Compelled)
          (S
            (VP (TO to)
              (VP (VB spend)
                (NP (NN time))
                (PP (IN in)
                  (NP (PRP it))))))
          (, ,)
          (PP (IN without)
            (NP
              (NP (DT the) (NN sense))
              (PP (IN of)
                (S
                  (VP (VBG being)
                    (PP (IN on)
                      (NP
                        (NP (DT the) (NN way))
                        (PP (RB out) (IN of)
                          (NP (PRP it))))))))))))
      (, ,)
      (NP (PRP$ his) (JJ own) (NN company))
      (VP (MD would)
        (ADVP (RB soon))
        (VP (VB have)
          (VP (VBN grown)
            (ADVP (RB irksome))
            (PP (TO to)
              (NP (PRP him)))))))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (ADVP (RB however))
          (NP (JJ much) (NNS men))
          (VP (MD may)
            (VP (VB be)
              (ADJP (JJ interested)
                (PP (IN in)
                  (NP (PRP themselves))))))))
      (, ,)
      (NP (EX there))
      (VP (VBP are)
        (NP
          (NP (JJ few) (RB indeed))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP are)
                (ADJP (JJ interesting)
                  (PP (TO to)
                    (NP (PRP themselves))))))))))
    (. .)))

vmod(grown-26, Compelled-1)
aux(spend-3, to-2)
xcomp(Compelled-1, spend-3)
dobj(spend-3, time-4)
prep_in(spend-3, it-6)
det(sense-10, the-9)
prep_without(Compelled-1, sense-10)
prepc_of(sense-10, being-12)
det(way-15, the-14)
prep_on(being-12, way-15)
prep_out_of(way-15, it-18)
poss(company-22, his-20)
amod(company-22, own-21)
nsubj(grown-26, company-22)
aux(grown-26, would-23)
advmod(grown-26, soon-24)
aux(grown-26, have-25)
root(ROOT-0, grown-26)
advmod(grown-26, irksome-27)
prep_to(grown-26, him-29)
mark(interested-37, for-31)
advmod(interested-37, however-32)
amod(men-34, much-33)
nsubj(interested-37, men-34)
aux(interested-37, may-35)
cop(interested-37, be-36)
advcl(are-42, interested-37)
prep_in(interested-37, themselves-39)
expl(are-42, there-41)
parataxis(grown-26, are-42)
amod(indeed-44, few-43)
nsubj(are-42, indeed-44)
nsubj(interesting-47, indeed-44)
cop(interesting-47, are-46)
rcmod(indeed-44, interesting-47)
prep_to(interesting-47, themselves-49)

(ROOT
  (S
    (NP
      (NP (DT Those) (JJ only))
      (SBAR
        (WHNP (WP$ whose) (NNS self))
        (S
          (VP (VBZ is)
            (ADJP (JJ aware)
              (PP (IN of)
                (NP (DT a) (JJR higher) (NN presence))))))))
    (VP (MD can)
      (VP (VB escape)
        (S
          (VP (VBG becoming)
            (NP (NNS bores)
              (CC and)
              (NNS disgusts))
            (PP (TO to)
              (NP (PRP themselves)))))))
    (. .)))

det(only-2, Those-1)
poss(self-4, only-2)
nsubj(escape-12, only-2)
nsubj(aware-6, self-4)
cop(aware-6, is-5)
rcmod(only-2, aware-6)
det(presence-10, a-8)
amod(presence-10, higher-9)
prep_of(aware-6, presence-10)
aux(escape-12, can-11)
root(ROOT-0, escape-12)
xcomp(escape-12, becoming-13)
xcomp(becoming-13, bores-14)
xcomp(becoming-13, disgusts-16)
conj_and(bores-14, disgusts-16)
prep_to(becoming-13, themselves-18)

(ROOT
  (S
    (S
      (NP (DT That))
      (PRN
        (S
          (NP (DT every) (NN man))
          (VP (VBZ is)
            (ADVP (RB endlessly))
            (ADJP
              (ADJP (JJR greater))
              (PP (IN than)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP he))
                    (VP (VBZ calls)
                      (NP (PRP himself)))))))))
        (, ,))
      (VP (MD must)
        (VP (VB seem)
          (NP (DT a) (NN paradox))
          (PP (TO to)
            (NP (DT the)
              (ADJP (JJ ignorant)
                (CC and)
                (JJ dull)))))))
    (, ,)
    (CC but)
    (S
      (NP (DT a) (NN universe))
      (VP (MD would)
        (VP (VB be)
          (ADJP (JJ impossible)
            (PP (IN without)
              (NP (PRP it)))))))
    (. .)))

nsubj(seem-14, That-1)
det(man-3, every-2)
nsubj(greater-6, man-3)
cop(greater-6, is-4)
advmod(greater-6, endlessly-5)
parataxis(seem-14, greater-6)
dobj(calls-10, what-8)
nsubj(calls-10, he-9)
prepc_than(greater-6, calls-10)
dobj(calls-10, himself-11)
aux(seem-14, must-13)
root(ROOT-0, seem-14)
det(paradox-16, a-15)
xcomp(seem-14, paradox-16)
det(ignorant-19, the-18)
prep_to(seem-14, ignorant-19)
prep_to(seem-14, dull-21)
conj_and(ignorant-19, dull-21)
det(universe-25, a-24)
nsubj(impossible-28, universe-25)
aux(impossible-28, would-26)
cop(impossible-28, be-27)
conj_but(seem-14, impossible-28)
prep_without(impossible-28, it-30)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP (VBD had) (RB not)
        (VP (VBN arrived)
          (PP (IN at)
            (NP
              (NP (DT the) (NN discovery))
              (PP (IN of)
                (NP (DT this) (NN fact))))))))
    (, ,)
    (CC and)
    (S
      (NP (RB yet))
      (VP (VBD was)
        (PP (IN for)
          (NP (DT the) (JJ present) (NN contented)))
        (PP (DT both)
          (PP (IN with)
            (NP (PRP himself)))
          (CC and)
          (PP (IN with)
            (NP (PRP$ his) (NNS circumstances))))))
    (. .)))

nsubj(arrived-4, George-1)
aux(arrived-4, had-2)
neg(arrived-4, not-3)
root(ROOT-0, arrived-4)
det(discovery-7, the-6)
prep_at(arrived-4, discovery-7)
det(fact-10, this-9)
prep_of(discovery-7, fact-10)
nsubj(was-14, yet-13)
conj_and(arrived-4, was-14)
det(contented-18, the-16)
amod(contented-18, present-17)
prep_for(was-14, contented-18)
preconj(was-14, both-19)
prep_with(was-14, himself-21)
poss(circumstances-25, his-24)
prep_with(was-14, circumstances-25)
conj_and(himself-21, circumstances-25)

(ROOT
  (S
    (S
      (NP (DT The) (NN heather))
      (VP (VBD was) (RB not)
        (PP (IN in)
          (NP (NN bloom)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (JJ few) (NNS flowers))
        (PP (IN of)
          (NP (DT the) (JJ heathy) (NN land))))
      (VP (VBD made)
        (NP (DT no) (NN show))))
    (. .)))

det(heather-2, The-1)
nsubj(was-3, heather-2)
root(ROOT-0, was-3)
neg(was-3, not-4)
prep_in(was-3, bloom-6)
det(flowers-11, the-9)
amod(flowers-11, few-10)
nsubj(made-16, flowers-11)
det(land-15, the-13)
amod(land-15, heathy-14)
prep_of(flowers-11, land-15)
conj_and(was-3, made-16)
neg(show-18, no-17)
dobj(made-16, show-18)

(ROOT
  (S
    (S
      (NP (NNP Brown)
        (CC and)
        (JJR darker) (NNS brown))
      (VP (VBD predominated) (, ,)
        (PP (IN with)
          (NP
            (NP
              (ADVP (RB here)
                (CC and)
                (RB there))
              (DT a) (NN shadow))
            (PP (IN of)
              (ADJP (JJ green)))))))
    (: ;)
    (CC and)
    (, ,)
    (S
      (ADJP (JJ weary)
        (PP (IN of)
          (NP (PRP$ his) (NN outlook)))))
    (, ,)
    (S
      (NP (NNP George))
      (VP (VBD was)
        (VP (VBG settling)
          (PRT (RP back))
          (PP (TO to)
            (NP (PRP$ his) (NN book)))
          (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (EX there))
              (VP (VBD came)
                (NP
                  (NP (DT a) (JJ great) (NN bang))
                  (CC and)
                  (NP (DT a) (JJ tearing) (NN sound)))))))))
    (. .)))

nn(brown-4, Brown-1)
conj_and(Brown-1, darker-3)
nn(brown-4, darker-3)
nsubj(predominated-5, brown-4)
nsubj(weary-18, brown-4)
root(ROOT-0, predominated-5)
advmod(shadow-12, here-8)
conj_and(here-8, there-10)
advmod(shadow-12, there-10)
det(shadow-12, a-11)
prep_with(predominated-5, shadow-12)
prep_of(shadow-12, green-14)
conj_and(predominated-5, weary-18)
poss(outlook-21, his-20)
prep_of(weary-18, outlook-21)
nsubj(settling-25, George-23)
aux(settling-25, was-24)
conj_and(predominated-5, settling-25)
parataxis(predominated-5, settling-25)
prt(settling-25, back-26)
poss(book-29, his-28)
prep_to(settling-25, book-29)
advmod(came-33, when-31)
expl(came-33, there-32)
advcl(settling-25, came-33)
det(bang-36, a-34)
amod(bang-36, great-35)
dobj(came-33, bang-36)
nsubj(came-33, bang-36)
det(sound-40, a-38)
amod(sound-40, tearing-39)
dobj(came-33, sound-40)
nsubj(came-33, sound-40)
conj_and(bang-36, sound-40)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD started)
        (PP (TO to)
          (NP (PRP$ his) (NNS feet))))
      (, ,)
      (CC and)
      (VP
        (PP (IN for)
          (NP (NNS hours)))
        (VBD knew)
        (NP (NN nothing) (JJR more))))
    (. .)))

nsubj(started-2, He-1)
nsubj(knew-10, He-1)
root(ROOT-0, started-2)
poss(feet-5, his-4)
prep_to(started-2, feet-5)
prep_for(knew-10, hours-9)
conj_and(started-2, knew-10)
dep(more-12, nothing-11)
dobj(knew-10, more-12)

(ROOT
  (S
    (S
      (NP (DT A) (NN truck))
      (VP (VBD had)
        (VP
          (VP (VBN run)
            (PRT (RP off))
            (NP (DT the) (NN line)))
          (CC and)
          (VP (VBN turned)
            (PRT (RP over))))))
    (: ;)
    (S
      (S
        (NP
          (NP (DT the) (NN carriage))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (PRP he))
              (VP (VBD was)))))
        (VP (VBD had)
          (VP (VBN followed)
            (NP (PRP it)))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ young) (NN man) (POS 's))
              (NNS legs))))
        (VP (VBD was)
          (VP (VBN broken)))))
    (. .)))

det(truck-2, A-1)
nsubj(run-4, truck-2)
nsubj(turned-9, truck-2)
aux(run-4, had-3)
root(ROOT-0, run-4)
prt(run-4, off-5)
det(line-7, the-6)
dobj(run-4, line-7)
conj_and(run-4, turned-9)
prt(turned-9, over-10)
det(carriage-13, the-12)
prep_in(was-17, carriage-13)
nsubj(followed-19, carriage-13)
nsubj(was-17, he-16)
rcmod(carriage-13, was-17)
aux(followed-19, had-18)
parataxis(run-4, followed-19)
dobj(followed-19, it-20)
nsubjpass(broken-31, one-23)
det(man-27, the-25)
amod(man-27, young-26)
poss(legs-29, man-27)
prep_of(one-23, legs-29)
auxpass(broken-31, was-30)
parataxis(run-4, broken-31)
conj_and(followed-19, broken-31)

(ROOT
  (NP (NNP CHAPTER) (NNP III) (. .)))

nn(III-2, CHAPTER-1)
root(ROOT-0, III-2)

(ROOT
  (S
    (VP (VBP HELP))
    (. .)))

root(ROOT-0, HELP-1)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Papa))
    (. !)))

root(ROOT-0, Papa-2)

(ROOT
  (NP (NN papa) (. !)))

root(ROOT-0, papa-1)

(ROOT
  (S
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN accident))
        (PP (IN on)
          (NP (DT the) (NN line)))))
    (. !) ('' '')))

expl(is-2, there-1)
root(ROOT-0, is-2)
det(accident-4, an-3)
nsubj(is-2, accident-4)
det(line-7, the-6)
prep_on(accident-4, line-7)

(ROOT
  (S
    (S
      (VP (VBN cried)
        (NP (NNP Miss) (NNP Fordyce))
        (, ,)
        (S
          (VP (VBG running)
            (PP (IN into)
              (NP
                (NP
                  (NP (PRP$ her) (NN father) (POS 's))
                  (NN study))
                (, ,)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP he))
                    (VP (VBD sat))))))))))
    (VP (VBN surrounded)
      (PP (IN with)
        (NP (NNS books))))
    (. .)))

csubj(surrounded-15, cried-1)
nn(Fordyce-3, Miss-2)
dobj(cried-1, Fordyce-3)
vmod(cried-1, running-5)
poss(father-8, her-7)
poss(study-10, father-8)
prep_into(running-5, study-10)
advmod(sat-14, where-12)
nsubj(sat-14, he-13)
rcmod(study-10, sat-14)
root(ROOT-0, surrounded-15)
prep_with(surrounded-15, books-17)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD saw)
      (NP (PRP it))
      (PP (IN from)
        (NP (DT the) (NN door))))
    (. !) ('' '')))

nsubj(saw-3, I-2)
root(ROOT-0, saw-3)
dobj(saw-3, it-4)
det(door-7, the-6)
prep_from(saw-3, door-7)

(ROOT
  (S (`` ``)
    (VP (VB Hush))
    (. !) ('' '')))

root(ROOT-0, Hush-2)

(ROOT
  (S
    (VP
      (VP (VBD returned)
        (NP (DT the) (JJ old) (NN man)))
      (, ,)
      (CC and)
      (VP (VBD listened)))
    (. .)))

root(ROOT-0, returned-1)
det(man-4, the-2)
amod(man-4, old-3)
dobj(returned-1, man-4)
conj_and(returned-1, listened-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP hear)
        (NP
          (NP (DT the) (NN train))
          (VP (VBG going)
            (PRT (RP on))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (PP (IN after)
        (NP (DT a) (NN moment))))
    (. .)))

nsubj(hear-3, I-2)
ccomp(said-11, hear-3)
det(train-5, the-4)
dobj(hear-3, train-5)
vmod(train-5, going-6)
prt(going-6, on-7)
nsubj(said-11, he-10)
root(ROOT-0, said-11)
det(moment-15, a-14)
prep_after(said-11, moment-15)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP
          (NP (NN Part))
          (PP (IN of)
            (NP (PRP it))))
        (VP (VBZ is)
          (VP (VBN come)
            (PP (TO to)
              (NP (NNP grief))))))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (ADJP (JJ certain)))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (PRP$ his) (NN daughter))
    (. .)))

nsubjpass(come-6, Part-2)
prep_of(Part-2, it-4)
auxpass(come-6, is-5)
ccomp(answered-15, come-6)
prep_to(come-6, grief-8)
nsubj(certain-12, I-10)
cop(certain-12, am-11)
parataxis(come-6, certain-12)
root(ROOT-0, answered-15)
poss(daughter-17, his-16)
nsubj(answered-15, daughter-17)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD saw)
      (NP (NN something))
      (NP (NN fall)))
    (. .) ('' '')))

nsubj(saw-3, I-2)
root(ROOT-0, saw-3)
dobj(saw-3, something-4)
tmod(saw-3, fall-5)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Well))
    (, ,)
    (NP (PRP$ my) (NN dear))
    (. ?) ('' '')))

discourse(dear-5, Well-2)
poss(dear-5, my-4)
root(ROOT-0, dear-5)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP
        (ADVP (RB _))
        (MD shall)
        (VP (VB _)
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP do)))))))
    (. ?) ('' '')))

nsubj(_-5, What-2)
advmod(_-5, _-3)
aux(_-5, shall-4)
root(ROOT-0, _-5)
nsubj(do-7, we-6)
ccomp(_-5, do-7)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB have)
        (S
          (NP (PRP us))
          (VP (VB do)))))
    (. ?) ('' '')))

dobj(have-5, What-2)
aux(have-5, would-3)
nsubj(have-5, you-4)
root(ROOT-0, have-5)
nsubj(do-7, us-6)
ccomp(have-5, do-7)

(ROOT
  (S
    (VP (VBD rejoined)
      (NP (PRP$ her) (NN father))
      (, ,)
      (PP (IN without)
        (NP
          (NP (DT a) (NN movement))
          (PP (IN toward)
            (NP (VBG rising))))))
    (. .)))

root(ROOT-0, rejoined-1)
poss(father-3, her-2)
dobj(rejoined-1, father-3)
det(movement-7, a-6)
prep_without(rejoined-1, movement-7)
prep_toward(movement-7, rising-9)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP
        (ADVP (RB too) (RB far) (RB off))
        (SBAR (IN for)
          (S
            (NP (PRP us))
            (VP (TO to)
              (VP (VB be)
                (PP (IN of)
                  (NP (DT any) (NN use)))))))))
    (. .) ('' '')))

nsubj(is-3, It-2)
root(ROOT-0, is-3)
advmod(off-6, too-4)
advmod(off-6, far-5)
advmod(is-3, off-6)
mark(be-10, for-7)
nsubj(be-10, us-8)
aux(be-10, to-9)
advcl(off-6, be-10)
det(use-13, any-12)
prep_of(be-10, use-13)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB go)
            (CC and)
            (VB see)))))
    (. .) ('' '')))

nsubj(ought-3, We-2)
nsubj(go-5, We-2)
nsubj(see-7, We-2)
root(ROOT-0, ought-3)
aux(go-5, to-4)
xcomp(ought-3, go-5)
xcomp(ought-3, see-7)
conj_and(go-5, see-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP
      (VP (VBP am) (RB not)
        (VP (VBN fond)
          (PP (IN of)
            (NP
              (NP (JJ such) (NNS seeing))
              (, ,)
              (NP (NNP Alexa))
              (, ,)))))
      (CC and)
      (VP (MD will) (RB not)
        (VP (VB go)
          (PRT (RP out))
          (PP (IN of)
            (NP
              (NP (PRP$ my) (NN way))
              (PP (IN for)
                (NP (PRP it))))))))
    (. .)))

nsubjpass(fond-5, I-2)
nsubj(go-15, I-2)
auxpass(fond-5, am-3)
neg(fond-5, not-4)
root(ROOT-0, fond-5)
amod(seeing-8, such-7)
prep_of(fond-5, seeing-8)
appos(seeing-8, Alexa-10)
aux(go-15, will-13)
neg(go-15, not-14)
conj_and(fond-5, go-15)
poss(way-19, my-18)
prep_out_of(go-15, way-19)
prep_for(way-19, it-21)

(ROOT
  (S
    (NP
      (NP (DT The) (NN misery))
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD can) (RB not)
            (VP (VB avoid))))))
    (VP (VBZ is)
      (ADJP (JJ enough)
        (PP (IN for)
          (NP (PRP me)))))
    (. .) ('' '')))

det(misery-2, The-1)
nsubj(enough-8, misery-2)
nsubj(avoid-6, I-3)
aux(avoid-6, can-4)
neg(avoid-6, not-5)
rcmod(misery-2, avoid-6)
cop(enough-8, is-7)
root(ROOT-0, enough-8)
prep_for(enough-8, me-10)

(ROOT
  (S (CC But)
    (NP (NNP Alexa))
    (VP
      (VP (VBD was)
        (ADVP (RB out))
        (PP (IN of)
          (NP (DT the) (NN room))))
      (, ,)
      (CC and)
      (VP
        (PP (IN in)
          (ADVP
            (NP (DT a) (NN moment))
            (RBR more)))
        (VBD was)
        (VP (VBG running)))
      (, ,)
      (PP (IN in)
        (NP
          (NP
            (ADJP (RB as) (JJ straight))
            (DT a) (NN line))
          (SBAR (IN as)
            (S
              (NP (PRP she))
              (VP (MD could)
                (VP (VB keep) (, ,)
                  (PP (IN across)
                    (NP (DT the) (NN heath)))
                  (PP (TO to)
                    (NP (DT the) (JJ low) (NN embankment))))))))))
    (. .)))

nsubj(was-3, Alexa-2)
nsubj(running-15, Alexa-2)
root(ROOT-0, was-3)
det(room-7, the-6)
prep_out_of(was-3, room-7)
det(moment-12, a-11)
npadvmod(more-13, moment-12)
prepc_in(running-15, more-13)
aux(running-15, was-14)
conj_and(was-3, running-15)
conj_and(was-3, in-17)
advmod(straight-19, as-18)
amod(line-21, straight-19)
det(line-21, a-20)
prep_in(was-3, line-21)
mark(keep-25, as-22)
nsubj(keep-25, she-23)
aux(keep-25, could-24)
rcmod(line-21, keep-25)
det(heath-29, the-28)
prep_across(keep-25, heath-29)
det(embankment-33, the-31)
amod(embankment-33, low-32)
prep_to(keep-25, embankment-33)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD caught)
      (NP
        (NP (NN sight))
        (PP (IN of)
          (NP (PRP$ her) (NN running)))))
    (. .)))

nsubj(caught-2, Andrew-1)
root(ROOT-0, caught-2)
dobj(caught-2, sight-3)
poss(running-6, her-5)
prep_of(sight-3, running-6)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (MD could) (RB not)
        (VP (VB see)
          (NP (DT the) (NN line))))
      (, ,)
      (CC but)
      (VP (VBD convinced)
        (SBAR (IN that)
          (S
            (NP (NN something))
            (VP (VBD was)
              (NP (DT the) (NN matter))))))
      (, ,)
      (VP (VBD turned))
      (CC and)
      (VP (VBD ran)
        (PP (IN in)
          (NP (DT the) (JJ same) (NN direction)))))
    (. .)))

nsubj(see-4, He-1)
nsubj(convinced-9, He-1)
nsubj(turned-16, He-1)
nsubj(ran-18, He-1)
aux(see-4, could-2)
neg(see-4, not-3)
root(ROOT-0, see-4)
det(line-6, the-5)
dobj(see-4, line-6)
conj_but(see-4, convinced-9)
mark(matter-14, that-10)
nsubj(matter-14, something-11)
cop(matter-14, was-12)
det(matter-14, the-13)
ccomp(convinced-9, matter-14)
conj_but(see-4, turned-16)
conj_and(see-4, ran-18)
det(direction-22, the-20)
amod(direction-22, same-21)
prep_in(ran-18, direction-22)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a)
          (ADJP (JJ hard)
            (CC and)
            (JJ long))
          (NN run))
        (PP (IN for)
          (NP (NNP Alexa))))
      (, ,)
      (PP (IN over)
        (NP (JJ such) (NN ground))))
    (. .)))

nsubj(run-7, It-1)
cop(run-7, was-2)
det(run-7, a-3)
amod(run-7, hard-4)
conj_and(hard-4, long-6)
amod(run-7, long-6)
root(ROOT-0, run-7)
prep_for(run-7, Alexa-9)
amod(ground-13, such-12)
prep_over(run-7, ground-13)

(ROOT
  (S
    (S
      (VP (VBG Troubled)
        (PP (IN at)
          (NP
            (NP (PRP$ her) (NN father) (POS 's))
            (NN indifference)))))
    (, ,)
    (NP (PRP she))
    (VP (VBD ran)
      (NP
        (NP (DT the) (JJR faster))
        (PRN (: --)
          (ADVP (RB too))
          (UCP
            (ADJP (JJ fast)
              (PP (IN for)
                (NP (NN thinking))))
            (, ,)
            (CC but)
            (RB not)
            (ADVP
              (ADVP (RB too) (JJ fast)
                (PP (IN for)
                  (NP (DT the) (NNS thoughts))))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD came)))))))
        (PP (IN of)
          (NP (PRP themselves)))))
    (. .)))

vmod(ran-9, Troubled-1)
poss(father-4, her-3)
poss(indifference-6, father-4)
prep_at(Troubled-1, indifference-6)
nsubj(ran-9, she-8)
root(ROOT-0, ran-9)
det(faster-11, the-10)
dobj(ran-9, faster-11)
dep(fast-14, too-13)
dep(faster-11, fast-14)
prep_for(fast-14, thinking-16)
dep(faster-11, not-19)
conj_but(fast-14, not-19)
neg(fast-14, not-19)
advmod(fast-21, too-20)
advmod(fast-14, fast-21)
det(thoughts-24, the-23)
prep_for(fast-21, thoughts-24)
nsubj(came-26, that-25)
advcl(fast-21, came-26)
ccomp(fast-21, came-26)
prep_of(faster-11, themselves-28)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBD had)
        (VP (VBN come)
          (PP (TO to)
            (NP (PRP$ her) (NN father))))))
    (. ?)))

nsubj(come-3, What-1)
aux(come-3, had-2)
root(ROOT-0, come-3)
poss(father-6, her-5)
prep_to(come-3, father-6)

(ROOT
  (S
    (NP (PRP$ Their) (NN house))
    (VP (VBD was)
      (NP (DT the) (JJS nearest)))
    (. !)))

poss(house-2, Their-1)
nsubj(nearest-5, house-2)
cop(nearest-5, was-3)
det(nearest-5, the-4)
root(ROOT-0, nearest-5)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD could) (RB not)
      (VP (VB shut)
        (PRT (RP out))
        (NP (DT the) (NN conviction))
        (SBAR (IN that)
          (S (, ,)
            (PP (IN since)
              (S
                (VP (VBG succeeding)
                  (PP (TO to)
                    (NP (DT the) (NN property))))))
            (, ,)
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBG growing)
                  (ADJP
                    (ADJP (JJR less))
                    (CC and)
                    (ADJP (RBR less) (JJ neighborly))))))))))
    (. .)))

nsubj(shut-4, She-1)
aux(shut-4, could-2)
neg(shut-4, not-3)
root(ROOT-0, shut-4)
prt(shut-4, out-5)
det(conviction-7, the-6)
dobj(shut-4, conviction-7)
mark(growing-19, that-8)
prepc_since(growing-19, succeeding-11)
det(property-14, the-13)
prep_to(succeeding-11, property-14)
nsubj(growing-19, he-16)
aux(growing-19, had-17)
aux(growing-19, been-18)
ccomp(shut-4, growing-19)
acomp(growing-19, less-20)
advmod(neighborly-23, less-22)
acomp(growing-19, neighborly-23)
conj_and(less-20, neighborly-23)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (VP (VBN caught)
        (PRT (RP up))
        (NP
          (NP (DT a) (NN bottle))
          (PP (IN of)
            (NP
              (NP (NN brandy))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBN impeded)
                    (NP (PRP$ her) (NN running))))))))))
    (. .)))

nsubj(caught-3, She-1)
aux(caught-3, had-2)
root(ROOT-0, caught-3)
prt(caught-3, up-4)
det(bottle-6, a-5)
dobj(caught-3, bottle-6)
prep_of(bottle-6, brandy-8)
nsubj(impeded-11, brandy-8)
rcmod(brandy-8, impeded-11)
poss(running-13, her-12)
dobj(impeded-11, running-13)

(ROOT
  (S
    (S (CC Yet)
      (NP (PRP she))
      (VP (VBD made)
        (NP (JJ good) (NN speed))))
    (, ,)
    (NP (PRP$ her) (NN dress))
    (VP (VBD gathered)
      (ADJP (JJ high))
      (PP (IN in)
        (NP (DT the) (JJ other) (NN hand))))
    (. .)))

cc(made-3, Yet-1)
nsubj(made-3, she-2)
ccomp(gathered-9, made-3)
amod(speed-5, good-4)
dobj(made-3, speed-5)
poss(dress-8, her-7)
nsubj(gathered-9, dress-8)
root(ROOT-0, gathered-9)
acomp(gathered-9, high-10)
det(hand-14, the-12)
amod(hand-14, other-13)
prep_in(gathered-9, hand-14)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (JJ long) (JJ dark) (NN hair))
      (VP
        (VP (VBN broken)
          (S
            (ADJP (RB loose))))
        (CC and)
        (VP (VBG flying)
          (PP (IN in)
            (NP
              (NP (DT the) (NN wind))
              (, ,)
              (NP
                (NP (PRP$ her) (JJ assumed) (NN dignity))
                (VP (VBN forgotten))))))))
    (, ,)
    (CC and)
    (S
      (NP (RB only) (DT the) (NN woman))
      (ADJP (RB awake)))
    (, ,)
    (S
      (NP (PRP she))
      (VP (VBD ran)
        (PP (IN like)
          (NP (DT a) (NNS deer)))
        (PP (IN over)
          (NP (DT the) (NN heather)))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP
          (NP (RB little)
            (QP (JJR more) (IN than) (DT a) (NN quarter)))
          (PP (IN of)
            (NP (DT an) (NN hour)))))
      (, ,)
      (SBAR (IN though)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP (DT a) (JJ long) (NN moor-mile)))))
      (, ,)
      (VP (VBD reached)
        (NP
          (NP (DT the) (NN embankment))
          (, ,)
          (ADJP (JJ flushed)
            (CC and)
            (JJ panting)))))
    (. .)))

poss(hair-4, Her-1)
amod(hair-4, long-2)
amod(hair-4, dark-3)
nsubj(broken-5, hair-4)
nsubj(flying-8, hair-4)
nsubj(reached-51, hair-4)
root(ROOT-0, broken-5)
dep(broken-5, loose-6)
conj_and(broken-5, flying-8)
det(wind-11, the-10)
prep_in(flying-8, wind-11)
poss(dignity-15, her-13)
amod(dignity-15, assumed-14)
appos(wind-11, dignity-15)
vmod(dignity-15, forgotten-16)
advmod(woman-21, only-19)
det(woman-21, the-20)
dep(awake-22, woman-21)
conj_and(broken-5, awake-22)
nsubj(ran-25, she-24)
ccomp(broken-5, ran-25)
conj_and(broken-5, ran-25)
det(deer-28, a-27)
prep_like(ran-25, deer-28)
det(heather-31, the-30)
prep_over(ran-25, heather-31)
advmod(quarter-39, little-35)
mwe(than-37, more-36)
quantmod(quarter-39, than-37)
quantmod(quarter-39, a-38)
prep_in(reached-51, quarter-39)
det(hour-42, an-41)
prep_of(quarter-39, hour-42)
mark(moor-mile-49, though-44)
nsubj(moor-mile-49, it-45)
cop(moor-mile-49, was-46)
det(moor-mile-49, a-47)
amod(moor-mile-49, long-48)
advcl(reached-51, moor-mile-49)
conj_and(broken-5, reached-51)
det(embankment-53, the-52)
dobj(reached-51, embankment-53)
amod(embankment-53, flushed-55)
amod(embankment-53, panting-57)
conj_and(flushed-55, panting-57)

(ROOT
  (S
    (S
      (NP
        (NP (DT Some))
        (PP (IN of)
          (NP (DT the) (NNS carriages))))
      (VP (VBD had)
        (VP (VBN rolled)
          (PRT (RP down)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS rails))
      (VP (VBD were)
        (NP (DT a) (NN wreck))))
    (. .)))

nsubj(rolled-6, Some-1)
det(carriages-4, the-3)
prep_of(Some-1, carriages-4)
aux(rolled-6, had-5)
root(ROOT-0, rolled-6)
prt(rolled-6, down-7)
det(rails-11, the-10)
nsubj(wreck-14, rails-11)
cop(wreck-14, were-12)
det(wreck-14, a-13)
conj_and(rolled-6, wreck-14)

(ROOT
  (S (CC But)
    (S
      (NP
        (NP (DT the) (NN engine))
        (CC and)
        (NP (PDT half) (DT the) (NN train)))
      (VP (VBD had)
        (VP (VBN kept)
          (PRT (RP on)))))
    (: :)
    (S
      (NP (CC neither)
        (NP (NN driver))
        (CC nor)
        (NP (NN stoker)))
      (VP (VBD was)
        (VP (VBN hurt))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD were)
        (VP (VBG hurrying)
          (S
            (VP (TO to)
              (VP (VB fetch)
                (NP (NN help))
                (PP (IN from)
                  (NP (DT the) (JJ next) (NN station)))))))))
    (. .)))

det(engine-3, the-2)
nsubj(kept-9, engine-3)
predet(train-7, half-5)
det(train-7, the-6)
conj_and(engine-3, train-7)
nsubj(kept-9, train-7)
aux(kept-9, had-8)
root(ROOT-0, kept-9)
prt(kept-9, on-10)
preconj(driver-13, neither-12)
nsubjpass(hurt-17, driver-13)
conj_nor(driver-13, stoker-15)
nsubjpass(hurt-17, stoker-15)
auxpass(hurt-17, was-16)
dep(kept-9, hurt-17)
nsubj(hurrying-22, they-20)
nsubj(fetch-24, they-20)
aux(hurrying-22, were-21)
conj_and(kept-9, hurrying-22)
aux(fetch-24, to-23)
xcomp(hurrying-22, fetch-24)
dobj(fetch-24, help-25)
det(station-29, the-27)
amod(station-29, next-28)
prep_from(fetch-24, station-29)

(ROOT
  (SINV
    (PP (IN At)
      (NP
        (NP (DT the) (NN foot))
        (PP (IN of)
          (NP (DT the) (NN bank)))))
    (VP (VBD lay))
    (NP
      (NP (NNP George) (NNP Crawford))
      (ADJP (JJ insensible)))
    (, ,)
    (PP (IN with)
      (S
        (NP
          (NP (DT the) (NN guard))
          (PP (IN of)
            (NP (DT the) (NN train))))
        (VP (VBG doing)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP he))
              (VP (MD could)
                (S
                  (VP (TO to)
                    (VP (VB bring)
                      (NP (PRP him))
                      (PP (TO to)
                        (NP (NN consciousness))))))))))))
    (. .)))

det(foot-3, the-2)
prep_at(lay-7, foot-3)
det(bank-6, the-5)
prep_of(foot-3, bank-6)
root(ROOT-0, lay-7)
nn(Crawford-9, George-8)
nsubj(lay-7, Crawford-9)
amod(Crawford-9, insensible-10)
det(guard-14, the-13)
nsubj(doing-18, guard-14)
det(train-17, the-16)
prep_of(guard-14, train-17)
prepc_with(lay-7, doing-18)
dobj(could-21, what-19)
nsubj(bring-23, what-19)
nsubj(could-21, he-20)
ccomp(doing-18, could-21)
aux(bring-23, to-22)
xcomp(could-21, bring-23)
dobj(bring-23, him-24)
prep_to(bring-23, consciousness-26)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD was)
        (PP (IN on)
          (NP (PRP$ his) (NN back)))
        (PRN (, ,)
          (S
            (VP (VBP pale)
              (PP (IN as)
                (NP (NN death)))))
          (, ,))
        (PP (IN with)
          (NP (DT no) (NN motion))))
      (CC and)
      (VP (VBP scare)
        (NP
          (NP (DT a) (NN sign))
          (PP (IN of)
            (NP (NN life))))))
    (. .)))

nsubj(was-2, He-1)
nsubj(scare-15, He-1)
root(ROOT-0, was-2)
poss(back-5, his-4)
prep_on(was-2, back-5)
parataxis(was-2, pale-7)
prep_as(pale-7, death-9)
neg(motion-13, no-12)
prep_with(was-2, motion-13)
conj_and(was-2, scare-15)
det(sign-17, a-16)
dobj(scare-15, sign-17)
prep_of(sign-17, life-19)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD tried)
        (S
          (VP (TO to)
            (VP (VB give)
              (NP (PRP him))
              (NP (NN brandy)))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP she))
        (VP (VBD was)
          (VP
            (ADVP (RB so))
            (VBN exhausted))))
      (, ,)
      (CC and)
      (S
        (NP (PRP$ her) (NN hand))
        (VP (VBD shook)
          (ADVP (RB so))
          (, ,)
          (SBAR
            (SBAR (IN that)
              (S
                (NP (PRP she))
                (VP (VBD had)
                  (S
                    (VP (TO to)
                      (VP (VB yield)
                        (NP (DT the) (NN bottle))
                        (PP (TO to)
                          (NP (DT the) (NN guard)))))))))
            (, ,)
            (CC and)
            (SBAR
              (S (, ,)
                (SBAR
                  (ADJP (JJ hale)
                    (CC and)
                    (JJ strong))
                  (IN as)
                  (S
                    (NP (PRP she))
                    (VP (VBD was))))
                (, ,)
                (VP (MD could)
                  (ADVP (CC but))
                  (VP (VB drag)
                    (NP (PRP herself))
                    (ADVP
                      (ADVP
                        (NP (DT a) (RB little))
                        (RB apart))
                      (SBAR (IN before)
                        (S
                          (NP (PRP she))
                          (VP (VBD fainted)))))))))))))
    (. .)))

nsubj(tried-2, Alexa-1)
nsubj(give-4, Alexa-1)
root(ROOT-0, tried-2)
aux(give-4, to-3)
xcomp(tried-2, give-4)
iobj(give-4, him-5)
dobj(give-4, brandy-6)
nsubjpass(exhausted-12, she-9)
auxpass(exhausted-12, was-10)
advmod(exhausted-12, so-11)
conj_but(tried-2, exhausted-12)
poss(hand-16, her-15)
nsubj(shook-17, hand-16)
conj_but(tried-2, shook-17)
conj_and(exhausted-12, shook-17)
advmod(shook-17, so-18)
mark(had-22, that-20)
nsubj(had-22, she-21)
nsubj(yield-24, she-21)
nsubj(drag-42, she-21)
ccomp(shook-17, had-22)
aux(yield-24, to-23)
xcomp(had-22, yield-24)
det(bottle-26, the-25)
dobj(yield-24, bottle-26)
det(guard-29, the-28)
prep_to(yield-24, guard-29)
dep(was-38, hale-33)
conj_and(hale-33, strong-35)
dep(was-38, strong-35)
mark(was-38, as-36)
nsubj(was-38, she-37)
advcl(drag-42, was-38)
aux(drag-42, could-40)
advmod(drag-42, but-41)
ccomp(shook-17, drag-42)
conj_and(had-22, drag-42)
dobj(drag-42, herself-43)
det(little-45, a-44)
npadvmod(apart-46, little-45)
advmod(drag-42, apart-46)
mark(fainted-49, before-47)
nsubj(fainted-49, she-48)
advcl(apart-46, fainted-49)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN meantime)))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (DT the) (NN train))
        (VP (VBD approached)
          (NP (DT the) (NN station)))))
    (, ,)
    (NP
      (NP (DT the) (NN driver))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD belonged)
            (PP (TO to)
              (NP (DT the) (NN neighborhood))))))
      (, ,))
    (VP
      (VP (VBD saw)
        (NP
          (NP (DT the) (NN doctor))
          (, ,)
          (NP (VBN slackened) (NN speed))
          (, ,)))
      (CC and)
      (VP (VBD set)
        (NP (PRP$ his) (JJ whistle) (NN shrieking))
        (ADVP (RB wildly))))
    (. .)))

det(meantime-3, the-2)
prep_in(saw-21, meantime-3)
mark(approached-8, as-5)
det(train-7, the-6)
nsubj(approached-8, train-7)
advcl(saw-21, approached-8)
det(station-10, the-9)
dobj(approached-8, station-10)
det(driver-13, the-12)
nsubj(belonged-16, driver-13)
nsubj(saw-21, driver-13)
nsubj(set-29, driver-13)
rcmod(driver-13, belonged-16)
det(neighborhood-19, the-18)
prep_to(belonged-16, neighborhood-19)
root(ROOT-0, saw-21)
det(doctor-23, the-22)
dobj(saw-21, doctor-23)
amod(speed-26, slackened-25)
appos(doctor-23, speed-26)
conj_and(saw-21, set-29)
poss(shrieking-32, his-30)
amod(shrieking-32, whistle-31)
dobj(set-29, shrieking-32)
advmod(set-29, wildly-33)

(ROOT
  (S
    (NP (DT The) (NN doctor) (NN set))
    (VP
      (VP (VBZ spurs)
        (PP (TO to)
          (NP (PRP$ his) (NN horse))))
      (, ,)
      (CC and)
      (VP (VBD came)
        (PP (RB straight) (IN over)
          (NP (NN everything)))
        (PP (TO to)
          (NP (PRP$ his) (NN side)))))
    (. .)))

det(set-3, The-1)
nn(set-3, doctor-2)
nsubj(spurs-4, set-3)
nsubj(came-10, set-3)
root(ROOT-0, spurs-4)
poss(horse-7, his-6)
prep_to(spurs-4, horse-7)
conj_and(spurs-4, came-10)
advmod(came-10, straight-11)
prep_over(came-10, everything-13)
poss(side-16, his-15)
prep_to(came-10, side-16)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP go)
        (PRT (RP on))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said) (, ,)
          (S
            (VP (VBG having)
              (VP (VBN heard)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBD had)
                      (VP (VBN happened)))))))))))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB be)
          (ADVP
            (ADVP (RB there) (RBR sooner))
            (SBAR (IN than)
              (S
                (NP (PRP you))
                (VP (MD could)
                  (VP (VB take)
                    (NP (PRP me))))))))))
    (. .) ('' '')))

nsubj(go-3, You-2)
root(ROOT-0, go-3)
prt(go-3, on-4)
nsubj(said-8, he-7)
nsubj(heard-11, he-7)
dep(go-3, said-8)
aux(heard-11, having-10)
xcomp(said-8, heard-11)
nsubj(happened-14, what-12)
aux(happened-14, had-13)
ccomp(heard-11, happened-14)
nsubj(be-19, I-17)
aux(be-19, shall-18)
parataxis(go-3, be-19)
advmod(sooner-21, there-20)
advmod(be-19, sooner-21)
mark(take-25, than-22)
nsubj(take-25, you-23)
aux(take-25, could-24)
advcl(sooner-21, take-25)
dobj(take-25, me-26)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD came)
      (ADVP (RB first))
      (PP (IN upon)
        (NP
          (NP (NNP Andrew))
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB make)
                  (S
                    (NP (NNP Miss) (NNP Fordyce))
                    (VP (VB swallow)
                      (NP
                        (NP (DT a) (JJ little))
                        (PP (IN of)
                          (NP (DT the) (NN brandy)))))))))))))
    (. .)))

nsubj(came-2, He-1)
root(ROOT-0, came-2)
advmod(came-2, first-3)
prep_upon(came-2, Andrew-5)
vmod(Andrew-5, trying-6)
aux(make-8, to-7)
xcomp(trying-6, make-8)
nn(Fordyce-10, Miss-9)
nsubj(swallow-11, Fordyce-10)
ccomp(make-8, swallow-11)
det(little-13, a-12)
dobj(swallow-11, little-13)
det(brandy-16, the-15)
prep_of(little-13, brandy-16)

(ROOT
  (SINV (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (CC but)
        (NP
          (NP (CD one) (NN gentleman))
          (VP (VBN hurt) (, ,)
            (ADVP (RB sir))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN guard))
    (. .)))

expl('s-3, There-2)
ccomp(said-12, 's-3)
num(gentleman-6, one-5)
conj_but('s-3, gentleman-6)
nsubj('s-3, gentleman-6)
ccomp(said-12, gentleman-6)
vmod(gentleman-6, hurt-7)
advmod(hurt-7, sir-9)
root(ROOT-0, said-12)
det(guard-14, the-13)
nsubj(said-12, guard-14)

(ROOT
  (S (`` ``)
    (NP (DT The) (JJ other))
    (VP (VBZ 's)
      (NP
        (NP (RB only) (DT a) (JJ young) (NN lady))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (VP (VBN run)
                (SBAR (IN till)
                  (S
                    (NP (PRP she))
                    (VP (VBZ 's)
                      (VP (VBN dropped)))))))))))
    (. .) ('' '')))

det(other-3, The-2)
nsubj(lady-8, other-3)
cop(lady-8, 's-4)
advmod(lady-8, only-5)
det(lady-8, a-6)
amod(lady-8, young-7)
root(ROOT-0, lady-8)
nsubjpass(run-11, lady-8)
auxpass(run-11, 's-10)
rcmod(lady-8, run-11)
mark(dropped-15, till-12)
nsubjpass(dropped-15, she-13)
auxpass(dropped-15, 's-14)
advcl(run-11, dropped-15)

(ROOT
  (SINV (`` ``)
    (S
      (VP (TO To)
        (VP (VB bring)
          (NP (NN brandy)))))
    (, ,) ('' '')
    (VP (VBD supplemented))
    (NP (NNP Andrew))
    (. .)))

aux(bring-3, To-2)
dep(supplemented-7, bring-3)
dobj(bring-3, brandy-4)
root(ROOT-0, supplemented-7)
nsubj(supplemented-7, Andrew-8)

(ROOT
  (S
    (NP (DT The) (NN doctor))
    (VP
      (VP (VBD recognized)
        (NP (NNP Alexa)))
      (, ,)
      (CC and)
      (VP (VBD wondered)
        (NP
          (NP (WP what) (NN reception))
          (SBAR
            (S
              (NP (PRP$ her) (NN lather))
              (VP (MD would)
                (VP (VB give)
                  (NP (PRP$ his) (NN patient))))))))
      (, ,)
      (PP (IN for)
        (PP (TO to)
          (S
            (VP (VBG Potlurg)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (MD must)
                    (VP (VB go))))))))))
    (. !)))

det(doctor-2, The-1)
nsubj(recognized-3, doctor-2)
nsubj(wondered-7, doctor-2)
root(ROOT-0, recognized-3)
dobj(recognized-3, Alexa-4)
conj_and(recognized-3, wondered-7)
det(reception-9, what-8)
dobj(wondered-7, reception-9)
poss(lather-11, her-10)
nsubj(give-13, lather-11)
aux(give-13, would-12)
rcmod(reception-9, give-13)
poss(patient-15, his-14)
dobj(give-13, patient-15)
conj_and(recognized-3, for-17)
prep(recognized-3, for-17)
pcomp(for-17, to-18)
pcomp(to-18, Potlurg-19)
nsubj(go-22, he-20)
aux(go-22, must-21)
ccomp(Potlurg-19, go-22)

(ROOT
  (S
    (ADVP (RB Suddenly))
    (NP (PRP she))
    (VP
      (VP (VBD came)
        (PP (TO to)
          (NP (PRP herself))))
      (, ,)
      (CC and)
      (VP (VBD sat)
        (PRT (RP up)))
      (, ,)
      (S
        (VP (VBG gazing)
          (ADVP (RB wildly))
          (ADVP (RB around)))))
    (. .)))

advmod(came-3, Suddenly-1)
nsubj(came-3, she-2)
nsubj(sat-8, she-2)
nsubj(gazing-11, she-2)
root(ROOT-0, came-3)
prep_to(came-3, herself-5)
conj_and(came-3, sat-8)
prt(sat-8, up-9)
conj_and(came-3, gazing-11)
vmod(came-3, gazing-11)
advmod(gazing-11, wildly-12)
advmod(gazing-11, around-13)

(ROOT
  (FRAG (`` ``)
    (ADJP
      (ADJP (NNP Out))
      (PP (IN of)
        (NP
          (NP
            (NP (NN breath))
            (, ,)
            (NP (NNP Miss) (NNP Fordyce))
            (: ;))
          (ADJP (NN nothing) (JJR worse)))))
    (. !) ('' '')))

root(ROOT-0, Out-2)
prep_of(Out-2, breath-4)
nn(Fordyce-7, Miss-6)
appos(breath-4, Fordyce-7)
amod(breath-4, nothing-9)
dep(nothing-9, worse-10)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (DT the) (NN doctor))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD smiled)))
    (. .)))

root(ROOT-0, said-1)
det(doctor-3, the-2)
dobj(said-1, doctor-3)
nsubj(smiled-7, she-6)
conj_and(said-1, smiled-7)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD turned)
        (PP (TO to)
          (NP (DT the) (JJ young) (NN man))))
      (, ,)
      (CC and)
      (VP (VBD did)
        (PP (IN for)
          (NP (PRP him)))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (VP (MD could)))))
      (PP (IN without)
        (NP
          (NP (NNS splints)
            (CC or)
            (NNS bandages))
          (: ;)
          (ADVP (RB then))
          (, ,)
          (PP (IN with)
            (NP
              (NP (DT the) (NN help))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN guard))
                  (CC and)
                  (NP (NNP Andrew))))
              (, ,)
              (VP (VBN constructed))))
          (, ,)
          (PP (IN from)
            (NP
              (NP (NNS pieces))
              (PP (IN of)
                (NP (DT the) (VBN broken) (NNS carriages)))))
          (, ,)
          (SBAR
            (WHNP
              (NP
                (NP (DT a) (NN sort))
                (PP (IN of)
                  (NP (NN litter))))
              (WHPP (IN on)
                (WHNP (WDT which))))
            (S
              (VP (TO to)
                (VP (VB carry)
                  (NP (PRP him))
                  (PP (TO to)
                    (NP (NNP Potlurg))))))))))
    (. .)))

nsubj(turned-2, He-1)
nsubj(did-9, He-1)
root(ROOT-0, turned-2)
det(man-6, the-4)
amod(man-6, young-5)
prep_to(turned-2, man-6)
conj_and(turned-2, did-9)
prep_for(did-9, him-11)
dobj(could-14, what-12)
nsubj(could-14, he-13)
ccomp(did-9, could-14)
prep_without(turned-2, splints-16)
prep_on(sort-41, splints-16)
prep_without(turned-2, bandages-18)
conj_or(splints-16, bandages-18)
prep_on(sort-41, bandages-18)
advmod(splints-16, then-20)
det(help-24, the-23)
prep_with(splints-16, help-24)
det(guard-27, the-26)
prep_of(help-24, guard-27)
prep_of(help-24, Andrew-29)
conj_and(guard-27, Andrew-29)
vmod(help-24, constructed-31)
prep_from(splints-16, pieces-34)
det(carriages-38, the-36)
amod(carriages-38, broken-37)
prep_of(pieces-34, carriages-38)
det(sort-41, a-40)
nsubj(carry-47, sort-41)
prep_of(sort-41, litter-43)
aux(carry-47, to-46)
rcmod(splints-16, carry-47)
vmod(splints-16, carry-47)
dobj(carry-47, him-48)
prep_to(carry-47, Potlurg-50)

(ROOT
  (S (`` ``)
    (VP (VB Is)
      (S
        (NP (PRP he))
        (ADJP (JJ dead))))
    (. ?) ('' '')))

root(ROOT-0, Is-2)
nsubj(dead-4, he-3)
xcomp(Is-2, dead-4)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Alexa-2)

(ROOT
  (S (`` ``)
    (NP (RB Not) (DT a))
    (VP (VBD bit)
      (PP (IN of)
        (NP (PRP it))))
    (. .)))

neg(a-3, Not-2)
nsubj(bit-4, a-3)
root(ROOT-0, bit-4)
prep_of(bit-4, it-6)

(ROOT
  (S
    (NP (PRP He) (POS 's))
    (VP (VBD had)
      (NP (DT a) (JJ bad) (NN blow))
      (PP (IN on)
        (NP (DT the) (NN head)))
      (, ,)
      (ADVP (RB though)))
    (. .)))

nsubj(had-3, He-1)
possessive(He-1, 's-2)
root(ROOT-0, had-3)
det(blow-6, a-4)
amod(blow-6, bad-5)
dobj(had-3, blow-6)
det(head-9, the-8)
prep_on(had-3, head-9)
advmod(had-3, though-11)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (VP (VB get)
        (NP (PRP him))
        (ADVP
          (ADVP (RB somewhere) (RB as) (RB fast))
          (SBAR (IN as)
            (S
              (NP (PRP we))
              (VP (MD can)))))))
    (. !) ('' '')))

nsubj(get-3, We-1)
aux(get-3, must-2)
root(ROOT-0, get-3)
dobj(get-3, him-4)
advmod(fast-7, somewhere-5)
advmod(fast-7, as-6)
advmod(get-3, fast-7)
mark(can-10, as-8)
nsubj(can-10, we-9)
advcl(fast-7, can-10)
ccomp(fast-7, can-10)
rcmod(fast-7, can-10)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB know)
          (NP (PRP him)))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(know-4, you-3)
ccomp(Do-2, know-4)
dobj(know-4, him-5)

(ROOT
  (S (`` ``)
    (VP (VB Not)
      (NP (PRP I)))
    (. .)))

root(ROOT-0, Not-2)
dobj(Not-2, I-3)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (MD must)
      (VP (VB take)
        (NP (PRP him))
        (PP (TO to)
          (NP (PRP$ your) (NN house)))))
    (. .)))

cc(take-4, But-1)
nsubj(take-4, we-2)
aux(take-4, must-3)
root(ROOT-0, take-4)
dobj(take-4, him-5)
poss(house-8, your-7)
prep_to(take-4, house-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (S
          (NP (WDT what))
          (ADJP (RB else))
          (S
            (VP (TO to)
              (VP (VB do)
                (PP (IN with)
                  (NP (PRP him)))))))))
    (. !) ('' '')))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
nsubj(do-8, what-5)
dep(do-8, else-6)
aux(do-8, to-7)
xcomp(know-4, do-8)
prep_with(do-8, him-10)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What) (RB else))
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (PRP him))))))))
    (. ?) ('' '')))

dep(want-6, What-2)
advmod(What-2, else-3)
aux(want-6, should-4)
nsubj(want-6, you-5)
nsubj(do-8, you-5)
root(ROOT-0, want-6)
aux(do-8, to-7)
xcomp(want-6, do-8)
prep_with(do-8, him-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ afraid)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD might)
              (VP (VB bother)
                (NP (DT the) (NN laird))))))))
    (. .) ('' '')))

nsubj(afraid-4, I-2)
cop(afraid-4, was-3)
root(ROOT-0, afraid-4)
nsubj(bother-7, it-5)
aux(bother-7, might-6)
ccomp(afraid-4, bother-7)
det(laird-9, the-8)
dobj(bother-7, laird-9)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP
      (ADVP (RB scarcely))
      (VBP know)
      (NP
        (NP (PRP$ my) (NN father))
        (, ,)
        (NP (NNP Doctor) (NNP Pratt))))
    (. !) ('' '')))

nsubj(know-4, You-2)
advmod(know-4, scarcely-3)
root(ROOT-0, know-4)
poss(father-6, my-5)
dobj(know-4, father-6)
nn(Pratt-9, Doctor-8)
appos(father-6, Pratt-9)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD would)
      (VP (VB bother)
        (S
          (NP (JJS most) (NNS people))
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT a) (VBN wounded) (NN man))
                (VP (VBN quartered)
                  (PP (IN on)
                    (NP (PRP them)))
                  (PP (IN for)
                    (NP (NNS weeks))))))))))
    (. !) ('' '')))

nsubj(bother-4, It-2)
aux(bother-4, would-3)
root(ROOT-0, bother-4)
amod(people-6, most-5)
dobj(bother-4, people-6)
nsubj(have-8, people-6)
aux(have-8, to-7)
xcomp(bother-4, have-8)
det(man-11, a-9)
amod(man-11, wounded-10)
dobj(have-8, man-11)
vmod(man-11, quartered-12)
prep_on(quartered-12, them-14)
prep_for(quartered-12, weeks-16)

(ROOT
  (S
    (VP (VBN returned)
      (NP (DT the) (NN doctor)))
    (. .)))

root(ROOT-0, returned-1)
det(doctor-3, the-2)
dobj(returned-1, doctor-3)

(ROOT
  (S (`` ``)
    (NP (NNP Poor))
    (VP (VBZ fellow))
    (. !)))

nsubj(fellow-3, Poor-2)
root(ROOT-0, fellow-3)

(ROOT
  (S
    (NP (DT A) (NN good-looking))
    (VP (VBZ fellow)
      (ADVP (RB too)))
    (. !) ('' '')))

det(good-looking-2, A-1)
nsubj(fellow-3, good-looking-2)
root(ROOT-0, fellow-3)
advmod(fellow-3, too-4)

(ROOT
  (S
    (NP
      (NP (DT A) (NN countryman))
      (SBAR
        (WHNP (WP who))
        (S
          (VP
            (VP (VBD had)
              (VP (VBN been)
                (PP (IN in)
                  (NP (DT the) (JJ next) (NN carriage)))))
            (, ,)
            (CC but)
            (VP (VBD had)
              (VP (VBN escaped)
                (S
                  (ADJP (RB almost) (JJ unhurt)))
                (, ,)
                (S
                  (VP (VBG offering)
                    (NP (PRP$ his) (NN service))))))))))
    (, ,)
    (S
      (NP (NNP Andrew)
        (CC and)
        (PRP he))
      (VP (VBD took)
        (PRT (RP up))
        (NP (DT the) (NN litter))
        (ADVP (RB gently))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBN set)
          (PP (IN out)
            (S
              (VP (VBG walking)
                (PP (IN with)
                  (S
                    (NP
                      (NP (NN care))
                      (, ,)
                      (NP
                        (NP (DT the) (NN doctor))
                        (PP (IN on)
                          (NP (CD one) (NN side))))
                      (, ,))
                    (VP (VBG leading)
                      (NP (PRP$ his) (NN horse))))))))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Miss) (NNP Fordyce))
        (PP (IN on)
          (NP (DT the) (JJ other)))))
    (. .)))

det(countryman-2, A-1)
nsubj(been-5, countryman-2)
nsubj(escaped-13, countryman-2)
dep(took-24, countryman-2)
aux(been-5, had-4)
rcmod(countryman-2, been-5)
det(carriage-9, the-7)
amod(carriage-9, next-8)
prep_in(been-5, carriage-9)
aux(escaped-13, had-12)
rcmod(countryman-2, escaped-13)
conj_but(been-5, escaped-13)
advmod(unhurt-15, almost-14)
acomp(escaped-13, unhurt-15)
xcomp(escaped-13, offering-17)
poss(service-19, his-18)
dobj(offering-17, service-19)
nsubj(took-24, Andrew-21)
nsubj(set-31, Andrew-21)
conj_and(Andrew-21, he-23)
nsubj(took-24, he-23)
root(ROOT-0, took-24)
prt(took-24, up-25)
det(litter-27, the-26)
dobj(took-24, litter-27)
advmod(took-24, gently-28)
conj_and(took-24, set-31)
prepc_out(set-31, walking-33)
nsubj(leading-43, care-35)
det(doctor-38, the-37)
appos(care-35, doctor-38)
num(side-41, one-40)
prep_on(doctor-38, side-41)
prepc_with(walking-33, leading-43)
poss(horse-45, his-44)
dobj(leading-43, horse-45)
nn(Fordyce-49, Miss-48)
conj_and(took-24, Fordyce-49)
conj_and(set-31, Fordyce-49)
dep(Fordyce-49, on-50)
det(other-52, the-51)
pobj(on-50, other-52)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (DT a) (JJ strange) (NN building))
          (SBAR
            (WHPP (TO to)
              (WHNP (WDT which)))
            (S (, ,)
              (PP (IN after)
                (NP (DT no) (JJ small) (NN anxiety)))
              (, ,)
              (NP (PRP they))
              (VP
                (VP (VBD drew)
                  (PP (IN near)))
                (: ;)
                (CC nor)
                (VP (VBD did)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBP look)
                        (NP (DT the)
                          (ADJP (RBR less) (JJ strange))
                          (NP (DT the) (NN nearer)))))))))))))
    (NP (PRP they))
    (VP (VBD came))
    (. .)))

nsubj(building-5, It-1)
cop(building-5, was-2)
det(building-5, a-3)
amod(building-5, strange-4)
prep_near(drew-15, building-5)
prep_to(drew-15, building-5)
dep(came-28, building-5)
neg(anxiety-12, no-10)
amod(anxiety-12, small-11)
prep_after(drew-15, anxiety-12)
nsubj(drew-15, they-14)
nsubj(did-19, they-14)
rcmod(building-5, drew-15)
rcmod(building-5, did-19)
conj_nor(drew-15, did-19)
nsubj(look-21, it-20)
ccomp(did-19, look-21)
det(nearer-26, the-22)
advmod(strange-24, less-23)
amod(nearer-26, strange-24)
det(nearer-26, the-25)
dobj(look-21, nearer-26)
nsubj(came-28, they-27)
root(ROOT-0, came-28)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (VP (VBN unsheltered)
          (PP (IN by)
            (NP (DT a) (JJ single) (NN tree))))))
    (: ;)
    (CC and)
    (S (CC but)
      (PP (IN for)
        (NP
          (NP (DT a) (JJ low) (NN wall)
            (CC and)
            (NN iron) (NN rail))
          (PP (IN on)
            (NP (CD one) (NN side)))))
      (, ,)
      (S
        (VP (VBG inclosing)
          (SBAR
            (WHNP (WP what))
            (S
              (VP
                (VP (VBD had)
                  (VP (VBN been)
                    (NP (DT a) (NN garden))))
                (, ,)
                (CC but)
                (VP (VBD was)
                  (ADVP (RB now)
                    (NP (DT a) (NN grass-plot)))))))))
      (, ,)
      (NP (PRP it))
      (VP (VBD rose)
        (PP (RB straight) (RB out) (IN of)
          (NP (DT the) (NN heather)))))
    (. .)))

nsubjpass(unsheltered-3, It-1)
auxpass(unsheltered-3, was-2)
root(ROOT-0, unsheltered-3)
det(tree-7, a-5)
amod(tree-7, single-6)
agent(unsheltered-3, tree-7)
cc(rose-36, but-10)
det(wall-14, a-12)
amod(wall-14, low-13)
prep_for(rose-36, wall-14)
nn(rail-17, iron-16)
conj_and(wall-14, rail-17)
prep_for(rose-36, rail-17)
num(side-20, one-19)
prep_on(wall-14, side-20)
vmod(rose-36, inclosing-22)
nsubj(garden-27, what-23)
nsubj(was-30, what-23)
aux(garden-27, had-24)
cop(garden-27, been-25)
det(garden-27, a-26)
ccomp(inclosing-22, garden-27)
ccomp(inclosing-22, was-30)
conj_but(garden-27, was-30)
advmod(was-30, now-31)
det(grass-plot-33, a-32)
pobj(now-31, grass-plot-33)
nsubj(rose-36, it-35)
conj_and(unsheltered-3, rose-36)
advmod(rose-36, straight-37)
det(heather-41, the-40)
prep_out_of(rose-36, heather-41)

(ROOT
  (S
    (PP (IN From)
      (NP (DT this) (NN plot)))
    (NP (DT the) (NN ground))
    (VP
      (VP (VBD sloped)
        (PP (TO to)
          (NP (DT the) (NN valley))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (PP (IN under)
          (NP (JJ careful) (NN cultivation)))))
    (. .)))

det(plot-3, this-2)
prep_from(sloped-6, plot-3)
det(ground-5, the-4)
nsubj(sloped-6, ground-5)
nsubj(was-12, ground-5)
root(ROOT-0, sloped-6)
det(valley-9, the-8)
prep_to(sloped-6, valley-9)
conj_and(sloped-6, was-12)
amod(cultivation-15, careful-14)
prep_under(was-12, cultivation-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NN entrance))
      (PP (TO to)
        (NP (PRP it))))
    (VP (VBD was)
      (VP
        (VP (VBN closed)
          (PP (IN with)
            (NP
              (NP (DT a) (NN gate))
              (PP (IN of)
                (NP (JJ wrought) (NN iron)))
              (, ,)
              (PP (IN of)
                (NP (JJ good) (NN workmanship))))))
        (, ,)
        (CC but)
        (VP
          (ADVP (RB so))
          (VBN wasted)
          (PP (IN with)
            (NP (NN rust)))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD seemed)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN point))
                    (PP (IN of)
                      (NP (VBG vanishing)))))))))))
    (. .)))

det(entrance-2, The-1)
nsubjpass(closed-6, entrance-2)
nsubjpass(wasted-20, entrance-2)
prep_to(entrance-2, it-4)
auxpass(closed-6, was-5)
root(ROOT-0, closed-6)
det(gate-9, a-8)
prep_with(closed-6, gate-9)
amod(iron-12, wrought-11)
prep_of(gate-9, iron-12)
amod(workmanship-16, good-15)
prep_of(gate-9, workmanship-16)
advmod(wasted-20, so-19)
conj_but(closed-6, wasted-20)
prep_with(wasted-20, rust-22)
mark(seemed-25, that-23)
nsubj(seemed-25, it-24)
ccomp(wasted-20, seemed-25)
det(point-28, the-27)
prep_on(seemed-25, point-28)
prep_of(point-28, vanishing-30)

(ROOT
  (S
    (S
      (NP
        (NP (RB Here))
        (PP (IN at)
          (NP (CD one) (NN time))))
      (VP (VBD had)
        (VP (VBN been)
          (NP (DT the) (NN way))
          (PP (IN into)
            (NP (DT the) (NN house))))))
    (: ;)
    (CC but)
    (S
      (NP
        (NP (DT no) (NN door))
        (, ,)
        (CC and)
        (NP (JJ scarce) (DT a) (NN window))
        (, ,))
      (VP (VBD was)
        (ADVP (RB now))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN seen)
                (PP (IN on)
                  (NP
                    (NP (DT this) (NN side))
                    (PP (IN of)
                      (NP (DT the) (NN building)))))))))))
    (. .)))

nsubj(way-8, Here-1)
num(time-4, one-3)
prep_at(Here-1, time-4)
aux(way-8, had-5)
cop(way-8, been-6)
det(way-8, the-7)
root(ROOT-0, way-8)
det(house-11, the-10)
prep_into(way-8, house-11)
neg(door-15, no-14)
nsubj(was-22, door-15)
nsubjpass(seen-26, door-15)
amod(window-20, scarce-18)
det(window-20, a-19)
conj_and(door-15, window-20)
nsubj(was-22, window-20)
nsubjpass(seen-26, window-20)
conj_but(way-8, was-22)
advmod(was-22, now-23)
aux(seen-26, to-24)
auxpass(seen-26, be-25)
xcomp(was-22, seen-26)
det(side-29, this-28)
prep_on(seen-26, side-29)
det(building-32, the-31)
prep_of(side-29, building-32)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (VBD was)
        (ADJP (RB very) (JJ old)))
      (, ,)
      (CC and)
      (VP (VBD consisted)
        (PP (IN of)
          (NP
            (NP (CD three) (NNS gables))
            (, ,)
            (NP
              (NP (DT a) (JJ great) (NN half-round))
              (PP (IN between)
                (NP (CD two)))
              (PP (IN of)
                (NP (PRP them))))
            (, ,)
            (CC and)
            (NP (DT a) (JJ low) (NN tower))))
        (PP (IN with)
          (NP (DT a) (JJ conical) (NN roof)))))
    (. .)))

nsubj(old-4, It-1)
nsubj(consisted-7, It-1)
cop(old-4, was-2)
advmod(old-4, very-3)
root(ROOT-0, old-4)
conj_and(old-4, consisted-7)
num(gables-10, three-9)
prep_of(consisted-7, gables-10)
det(half-round-14, a-12)
amod(half-round-14, great-13)
prep_of(consisted-7, half-round-14)
conj_and(gables-10, half-round-14)
prep_between(half-round-14, two-16)
prep_of(half-round-14, them-18)
det(tower-23, a-21)
amod(tower-23, low-22)
prep_of(consisted-7, tower-23)
conj_and(gables-10, tower-23)
det(roof-27, a-25)
amod(roof-27, conical-26)
prep_with(consisted-7, roof-27)

(ROOT
  (S
    (S
      (NP (NNP Crawford))
      (VP (VBD had)
        (VP (VBN begun)
          (S
            (VP (TO to)
              (VP (VB recover)
                (NP (NN consciousness))))))))
    (, ,)
    (CC but)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD came)
            (PP (TO to)
              (NP (PRP himself))))))
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBN received)
          (PP (IN by)
            (NP (JJ acute) (NN pain))))))
    (. .)))

nsubj(begun-3, Crawford-1)
nsubj(recover-5, Crawford-1)
aux(begun-3, had-2)
root(ROOT-0, begun-3)
aux(recover-5, to-4)
xcomp(begun-3, recover-5)
dobj(recover-5, consciousness-6)
advmod(came-11, when-9)
nsubj(came-11, he-10)
advcl(received-16, came-11)
prep_to(came-11, himself-13)
nsubjpass(received-16, he-14)
auxpass(received-16, was-15)
conj_but(begun-3, received-16)
amod(pain-19, acute-18)
agent(received-16, pain-19)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJS least) (NN attempt))
        (PP (TO to)
          (NP (NN move))))
      (VP (VBD was)
        (ADJP (JJ torture))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB again))
      (NP (PRP he))
      (VP (VBD fainted)))
    (. .)))

det(attempt-3, The-1)
amod(attempt-3, least-2)
nsubj(torture-7, attempt-3)
prep_to(attempt-3, move-5)
cop(torture-7, was-6)
root(ROOT-0, torture-7)
advmod(fainted-12, again-10)
nsubj(fainted-12, he-11)
conj_and(torture-7, fainted-12)

(ROOT
  (NP (NNP CHAPTER) (NNP IV) (. .)))

nn(IV-2, CHAPTER-1)
root(ROOT-0, IV-2)

(ROOT
  (S
    (NP (NNP THE))
    (VP (VBD LAIRD))
    (. .)))

nsubj(LAIRD-2, THE-1)
root(ROOT-0, LAIRD-2)

(ROOT
  (S
    (S
      (VP (VBN Conducted)
        (PP (IN by)
          (NP (DT the) (NN lady)))))
    (, ,)
    (NP (PRP they))
    (VP (VBD passed)
      (ADVP (RB round)
        (NP (DT the) (NN house))
        (PP
          (PP (TO to)
            (NP (DT the) (NN court)))
          (, ,)
          (CC and)
          (PP (IN across)
            (NP (DT the) (NN court)))))
      (PP (TO to)
        (NP
          (NP (DT a) (NN door))
          (PP (IN in)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (DT the) (NNS gables))))))))
    (. .)))

vmod(passed-7, Conducted-1)
det(lady-4, the-3)
agent(Conducted-1, lady-4)
nsubj(passed-7, they-6)
root(ROOT-0, passed-7)
advmod(passed-7, round-8)
advmod(passed-7, round-8')
conj_and(round-8, round-8')
det(house-10, the-9)
pobj(round-8, house-10)
det(court-13, the-12)
prep_to(round-8, court-13)
det(court-18, the-17)
prep_across(round-8', court-18)
det(door-21, a-20)
prep_to(passed-7, door-21)
prep_in(door-21, one-23)
det(gables-26, the-25)
prep_of(one-23, gables-26)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT a) (JJ low) (, ,) (JJ narrow) (NN door))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (JJ large) (NN enough))
        (PP (IN for)
          (NP
            (NP (DT the) (NN man))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD stood)
                  (ADVP (RB there)))))
            (PRN (: --)
              (NP
                (NP (DT a) (JJ little) (NN man))
                (, ,)
                (PP (IN with)
                  (NP (JJ colorless) (NN face)))
                (, ,)
                (CC and)
                (NP (JJ quiet)))
              (, ,)
              (ADJP (JJ abstracted))))))
      (VP (VBP look)))
    (. .)))

nsubj(door-7, It-1)
cop(door-7, was-2)
det(door-7, a-3)
amod(door-7, low-4)
amod(door-7, narrow-6)
root(ROOT-0, door-7)
amod(enough-11, large-10)
nsubj(look-31, enough-11)
det(man-14, the-13)
prep_for(enough-11, man-14)
nsubj(stood-16, man-14)
rcmod(man-14, stood-16)
advmod(stood-16, there-17)
det(man-21, a-19)
amod(man-21, little-20)
dep(man-14, man-21)
dep(man-14, with-23)
conj_and(man-21, with-23)
amod(face-25, colorless-24)
prep_with(man-21, face-25)
dep(man-14, quiet-28)
conj_and(man-21, quiet-28)
dep(man-21, abstracted-30)
conj_but(door-7, look-31)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NNS eyes))
      (VP (VBD were)
        (ADJP (JJ cold)
          (CC and)
          (JJ keen))))
    (, ,)
    (NP (PRP$ his))
    (VP (VBZ features)
      (ADJP
        (ADJP (JJ small))
        (, ,)
        (ADJP (JJ delicate))
        (, ,)
        (CC and)
        (ADJP (JJ regular))))
    (. .)))

poss(eyes-2, His-1)
nsubj(cold-4, eyes-2)
nsubj(keen-6, eyes-2)
cop(cold-4, were-3)
ccomp(features-9, cold-4)
conj_and(cold-4, keen-6)
ccomp(features-9, keen-6)
nsubj(features-9, his-8)
root(ROOT-0, features-9)
acomp(features-9, small-10)
acomp(features-9, delicate-12)
conj_and(small-10, delicate-12)
acomp(features-9, regular-15)
conj_and(small-10, regular-15)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD had)
        (NP (DT an) (JJ erect) (JJ little) (NN back)))
      (, ,)
      (CC and)
      (VP (VBD was)
        (VP (VBN dressed)
          (PP (IN in)
            (NP (DT a) (JJ long-tailed) (NN coat)))))
      (, ,)
      (S
        (VP (VBG looking)
          (NP
            (NP (RB not) (RB much))
            (PP (IN of)
              (NP
                (NP (DT a) (NN laird))
                (, ,)
                (NP
                  (NP
                    (QP (CC and)
                      (JJR less)))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (NN farmer))
                      (, ,)
                      (SBAR (IN as)
                        (S
                          (NP (PRP he))
                          (VP (VBD stood)
                            (VP (VBN framed)
                              (PP (IN in)
                                (NP
                                  (NP (DT the) (JJ gray) (NN stone) (NN wall))
                                  (, ,)
                                  (SBAR
                                    (WHPP (IN in)
                                      (WHNP (WDT which)))
                                    (S
                                      (NP
                                        (NP (JJ odd) (JJ little) (NNS windows))
                                        (, ,)
                                        (VP (VBD dotted)
                                          (ADVP (RB here)
                                            (CC and)
                                            (RB there))
                                          (PP (IN at)
                                            (NP (DT all) (NNS heights)
                                              (CC and)
                                              (NNS distances))))
                                        (, ,))
                                      (VP (VBD revealed)
                                        (NP
                                          (NP (DT a) (JJ wonderful) (NN arrangement))
                                          (PP (IN of)
                                            (NP (NNS floors)
                                              (CC and)
                                              (NNS rooms))))
                                        (ADVP (RB inside))))))))))))))))))))
    (. .)))

nsubj(had-2, He-1)
nsubjpass(dressed-10, He-1)
nsubj(looking-16, He-1)
root(ROOT-0, had-2)
det(back-6, an-3)
amod(back-6, erect-4)
amod(back-6, little-5)
dobj(had-2, back-6)
auxpass(dressed-10, was-9)
conj_and(had-2, dressed-10)
det(coat-14, a-12)
amod(coat-14, long-tailed-13)
prep_in(dressed-10, coat-14)
conj_and(had-2, looking-16)
vmod(had-2, looking-16)
neg(much-18, not-17)
dobj(looking-16, much-18)
det(laird-21, a-20)
prep_of(much-18, laird-21)
cc(less-24, and-23)
appos(laird-21, less-24)
det(farmer-27, a-26)
prep_of(less-24, farmer-27)
mark(stood-31, as-29)
nsubj(stood-31, he-30)
rcmod(farmer-27, stood-31)
dep(stood-31, framed-32)
det(wall-37, the-34)
amod(wall-37, gray-35)
nn(wall-37, stone-36)
prep_in(framed-32, wall-37)
prep_in(revealed-55, wall-37)
amod(windows-43, odd-41)
amod(windows-43, little-42)
nsubj(revealed-55, windows-43)
vmod(windows-43, dotted-45)
advmod(dotted-45, here-46)
advmod(dotted-45, there-48)
conj_and(here-46, there-48)
det(heights-51, all-50)
prep_at(dotted-45, heights-51)
prep_at(dotted-45, distances-53)
conj_and(heights-51, distances-53)
rcmod(wall-37, revealed-55)
det(arrangement-58, a-56)
amod(arrangement-58, wonderful-57)
dobj(revealed-55, arrangement-58)
prep_of(arrangement-58, floors-60)
prep_of(arrangement-58, rooms-62)
conj_and(floors-60, rooms-62)
advmod(revealed-55, inside-63)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Good-morning))
    (, ,)
    (NP (NNP Mr.) (NNP Fordyce))
    (. !) ('' '')))

root(ROOT-0, Good-morning-2)
nn(Fordyce-5, Mr.-4)
dep(Good-morning-2, Fordyce-5)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN doctor)))
    (. .)))

root(ROOT-0, said-1)
det(doctor-3, the-2)
dobj(said-1, doctor-3)

(ROOT
  (S (`` ``)
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP (DT a) (JJ bad) (NN business))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD might)
        (VP (VB have)
          (VP (VBN been)
            (ADJP (JJR worse))))))
    (. !)))

nsubj(business-6, This-2)
cop(business-6, is-3)
det(business-6, a-4)
amod(business-6, bad-5)
root(ROOT-0, business-6)
nsubj(worse-13, it-9)
aux(worse-13, might-10)
aux(worse-13, have-11)
cop(worse-13, been-12)
conj_but(business-6, worse-13)

(ROOT
  (FRAG
    (NP (RB Not) (DT a) (NN soul))
    (S
      (VP (VBN injured)
        (PP (CC but)
          (NP (CD one)))))
    (. !) ('' '')))

neg(soul-3, Not-1)
det(soul-3, a-2)
root(ROOT-0, soul-3)
dep(soul-3, injured-4)
prep(injured-4, but-5)
pobj(but-5, one-6)

(ROOT
  (S (`` ``)
    (NP (NNS Souls))
    (VP (VBP do) (RB n't)
      (ADVP (RB commonly))
      (VP (VB get)
        (VP (VBN injured)
          (PP (IN by)
            (NP (NN accident))))))
    (. !) ('' '')))

nsubjpass(injured-7, Souls-2)
aux(injured-7, do-3)
neg(injured-7, n't-4)
advmod(injured-7, commonly-5)
auxpass(injured-7, get-6)
root(ROOT-0, injured-7)
agent(injured-7, accident-9)

(ROOT
  (S
    (VP (VBN returned)
      (NP (DT the) (NN laird))
      (, ,)
      (PP (IN with)
        (NP
          (NP (DT a) (JJ cold) (NN smile))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was)
                (ADVP (RB far)
                  (PP (IN from)
                    (NP (NNS discourteous))))))))))
    (. .)))

root(ROOT-0, returned-1)
det(laird-3, the-2)
dobj(returned-1, laird-3)
det(smile-8, a-6)
amod(smile-8, cold-7)
prep_with(returned-1, smile-8)
nsubj(was-10, smile-8)
rcmod(smile-8, was-10)
prep_far_from(was-10, discourteous-13)

(ROOT
  (S (`` ``)
    (VP (VB Stick)
      (PP (TO to)
        (NP
          (NP (DT the) (NN body))
          (, ,)
          (NP (NN doctor)))))
    (. !)))

root(ROOT-0, Stick-2)
det(body-5, the-4)
prep_to(Stick-2, body-5)
appos(body-5, doctor-7)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP you))
    (VP (VBP know)
      (NP (NN something)))
    (. !) ('' '')))

advmod(know-3, There-1)
nsubj(know-3, you-2)
root(ROOT-0, know-3)
dobj(know-3, something-4)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN truth))
        (, ,)
        (VP (VBN laird))))
    (. !) ('' '')))

nsubj(truth-5, It-2)
cop(truth-5, 's-3)
det(truth-5, a-4)
root(ROOT-0, truth-5)
vmod(truth-5, laird-7)

(ROOT
  (VP (VBN answered)
    (NP
      (NP (DT the) (NN doctor))
      (FRAG
        (PRN (: --)
          (CC but)
          (VP (VBN added)
            (PP (TO to)
              (NP (PRP himself))))
          (: --))
        (`` ``)
        (INTJ (UH Well))
        (. !)))))

root(ROOT-0, answered-1)
det(doctor-3, the-2)
dobj(answered-1, doctor-3)
cc(added-6, but-5)
dep(doctor-3, added-6)
prep_to(added-6, himself-8)
discourse(added-6, Well-11)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ awful)
        (S
          (VP (TO to)
            (VP (VB hear)
              (NP (DT the) (NN truth))
              (PP (IN from)
                (NP (DT some) (NNS mouths))))))))
    (. !) ('' '')))

nsubj(awful-3, it-1)
nsubj(hear-5, it-1)
cop(awful-3, 's-2)
root(ROOT-0, awful-3)
aux(hear-5, to-4)
xcomp(awful-3, hear-5)
det(truth-7, the-6)
dobj(hear-5, truth-7)
det(mouths-10, some-9)
prep_from(hear-5, mouths-10)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP (VBD spoke)
      (NP (DT no) (NN word))
      (PP
        (PP (IN of)
          (NP (NN objection)))
        (CC or)
        (PP (IN of)
          (ADJP (JJ welcome)))))
    (. .)))

det(laird-2, The-1)
nsubj(spoke-3, laird-2)
root(ROOT-0, spoke-3)
neg(word-5, no-4)
dobj(spoke-3, word-5)
prep_of(spoke-3, objection-7)
prep_of(spoke-3, welcome-10)
conj_or(objection-7, welcome-10)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD carried)
      (NP (DT the) (JJ poor) (NN fellow))
      (PP (IN into)
        (NP (DT the) (NN house)))
      (, ,)
      (PP (VBG following)
        (NP
          (NP (PRP$ its) (NN mistress))
          (PP (TO to)
            (NP
              (NP (DT a) (NN room))
              (, ,)
              (SBAR
                (WHADVP (WRB where))
                (PRN (, ,)
                  (PP (IN with)
                    (UCP
                      (NP
                        (NP (DT the) (NN help))
                        (PP (IN of)
                          (NP (PRP$ her) (CD one) (NN domestic))))
                      (, ,)
                      (CC and)
                      (VP (VBN instructed)
                        (PP (IN by)
                          (NP (DT the) (NN doctor))))))
                  (, ,))
                (S
                  (NP (PRP she))
                  (ADVP (RB soon))
                  (VP (VBD had)
                    (NP
                      (NP (DT a) (NN bed))
                      (VP (VBN prepared)
                        (PP (IN for)
                          (NP (PRP him)))))))))))))
    (. .)))

nsubj(carried-2, They-1)
root(ROOT-0, carried-2)
det(fellow-5, the-3)
amod(fellow-5, poor-4)
dobj(carried-2, fellow-5)
det(house-8, the-7)
prep_into(carried-2, house-8)
poss(mistress-12, its-11)
prep_following(carried-2, mistress-12)
det(room-15, a-14)
prep_to(mistress-12, room-15)
advmod(had-35, where-17)
dep(had-35, with-19)
det(help-21, the-20)
pobj(with-19, help-21)
poss(domestic-25, her-23)
num(domestic-25, one-24)
prep_of(help-21, domestic-25)
pobj(with-19, instructed-28)
conj_and(help-21, instructed-28)
vmod(help-21, instructed-28)
det(doctor-31, the-30)
agent(instructed-28, doctor-31)
nsubj(had-35, she-33)
advmod(had-35, soon-34)
rcmod(room-15, had-35)
det(bed-37, a-36)
dobj(had-35, bed-37)
vmod(bed-37, prepared-38)
prep_for(prepared-38, him-40)

(ROOT
  (SINV (RB Then)
    (ADVP (RB away))
    (VP (VBD rode))
    (NP
      (NP (DT the) (NN doctor))
      (PP (IN at)
        (NP (JJ full) (NN speed)
          (S
            (VP (TO to)
              (VP (VB fetch)
                (S
                  (NP (DT the) (NNS appliances))
                  (ADJP (JJ necessary)))))))))
    (, ,)
    (S
      (VP (VBG leaving)
        (NP (DT the) (JJ laird) (NN standing))
        (PP (IN by)
          (NP (DT the) (NN bed)))
        (, ,)
        (PP (IN with)
          (NP
            (NP
              (NP (DT a) (NN look))
              (PP (IN of)
                (NP (JJ mild) (NN dissatisfaction))))
            (, ,)
            (CONJP (CC but)
              (RB not))
            (NP
              (NP (DT a) (NN whisper))
              (PP (IN of)
                (NP (NN opposition))))))))
    (. .)))

advmod(rode-3, Then-1)
advmod(rode-3, away-2)
root(ROOT-0, rode-3)
det(doctor-5, the-4)
nsubj(rode-3, doctor-5)
amod(speed-8, full-7)
prep_at(doctor-5, speed-8)
aux(fetch-10, to-9)
vmod(speed-8, fetch-10)
det(appliances-12, the-11)
nsubj(necessary-13, appliances-12)
xcomp(fetch-10, necessary-13)
vmod(rode-3, leaving-15)
det(standing-18, the-16)
amod(standing-18, laird-17)
dobj(leaving-15, standing-18)
det(bed-21, the-20)
agent(leaving-15, bed-21)
det(look-25, a-24)
prep_with(leaving-15, look-25)
amod(dissatisfaction-28, mild-27)
prep_of(look-25, dissatisfaction-28)
det(whisper-33, a-32)
prep_with(leaving-15, whisper-33)
conj_negcc(look-25, whisper-33)
prep_of(whisper-33, opposition-35)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN guest-chamber))
        (SBAR
          (WHPP (TO to)
            (WHNP (WDT which)))
          (S
            (NP (NNP George) (NNP Crawford))
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBN carried) (, ,)
                  (S
                    (NP (DT a) (NN room))
                    (ADJP
                      (ADJP (RB far) (RBR more) (JJ comfortable))
                      (SBAR (IN than)
                        (S
                          (NP (DT a) (NN stranger))
                          (VP (MD might) (, ,)
                            (PP (IN from)
                              (NP
                                (NP (DT the) (NN aspect))
                                (PP (IN of)
                                  (NP (DT the) (NN house)))))
                            (, ,)
                            (VP (VB have)
                              (VP (VBN believed)
                                (S
                                  (ADJP (JJ possible)))))))))))))))))
    (. .)))

nsubj(guest-chamber-4, It-1)
cop(guest-chamber-4, was-2)
det(guest-chamber-4, the-3)
root(ROOT-0, guest-chamber-4)
prep_to(carried-11, guest-chamber-4)
nn(Crawford-8, George-7)
nsubjpass(carried-11, Crawford-8)
aux(carried-11, had-9)
auxpass(carried-11, been-10)
rcmod(guest-chamber-4, carried-11)
det(room-14, a-13)
nsubj(comfortable-17, room-14)
advmod(comfortable-17, far-15)
advmod(comfortable-17, more-16)
xcomp(carried-11, comfortable-17)
mark(believed-31, than-18)
det(stranger-20, a-19)
nsubj(believed-31, stranger-20)
aux(believed-31, might-21)
det(aspect-25, the-24)
prep_from(believed-31, aspect-25)
det(house-28, the-27)
prep_of(aspect-25, house-28)
aux(believed-31, have-30)
ccomp(comfortable-17, believed-31)
acomp(believed-31, possible-32)

(ROOT
  (S
    (S
      (NP
        (NP (NN Everything))
        (PP (IN in)
          (NP (PRP it))))
      (VP (VBD was)
        (ADJP (JJ old-fashioned))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (S
        (VP (VBG having)
          (VP (VBN been)
            (VP (VBN dismantled)))))
      (, ,)
      (NP (PRP it))
      (VP (VBD was) (RB not)
        (PP (IN in)
          (NP (JJ apple-pie) (NN order)))))
    (: ;)
    (S (CC but)
      (NP (PRP it))
      (VP (VBD was)
        (ADVP
          (ADVP (RB rapidly))
          (CC and)
          (ADVP (RB silently)))
        (VP (VBN restored)
          (PP (TO to)
            (NP (PRP$ its) (JJ humble) (NN ideal))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN doctor))
          (, ,)
          (PP (IN after)
            (NP (DT an)
              (ADJP (RB incredibly) (JJ brief))
              (NN absence)))
          (, ,)
          (VP (VBD returned)
            (PP (IN with)
              (NP (PRP$ his) (NN assistant))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD seemed)
        (ADJP (DT both) (JJ surprised)
          (CC and)
          (JJ pleased))
        (PP (IN at)
          (NP (DT the) (NN change)))))
    (. .)))

nsubj(old-fashioned-5, Everything-1)
prep_in(Everything-1, it-3)
cop(old-fashioned-5, was-4)
root(ROOT-0, old-fashioned-5)
aux(dismantled-11, having-9)
auxpass(dismantled-11, been-10)
vmod(was-14, dismantled-11)
nsubj(was-14, it-13)
conj_and(old-fashioned-5, was-14)
neg(was-14, not-15)
amod(order-18, apple-pie-17)
prep_in(was-14, order-18)
cc(restored-26, but-20)
nsubjpass(restored-26, it-21)
auxpass(restored-26, was-22)
advmod(restored-26, rapidly-23)
conj_and(rapidly-23, silently-25)
advmod(restored-26, silently-25)
conj_and(old-fashioned-5, restored-26)
poss(ideal-30, its-28)
amod(ideal-30, humble-29)
prep_to(restored-26, ideal-30)
advmod(returned-43, when-33)
det(doctor-35, the-34)
nsubj(returned-43, doctor-35)
det(absence-41, an-38)
advmod(brief-40, incredibly-39)
amod(absence-41, brief-40)
prep_after(returned-43, absence-41)
advcl(seemed-49, returned-43)
poss(assistant-46, his-45)
prep_with(returned-43, assistant-46)
nsubj(seemed-49, he-48)
conj_and(old-fashioned-5, seemed-49)
preconj(surprised-51, both-50)
acomp(seemed-49, surprised-51)
acomp(seemed-49, pleased-53)
conj_and(surprised-51, pleased-53)
det(change-56, the-55)
prep_at(seemed-49, change-56)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP He))
      (VP (MD must)
        (VP (VB have)
          (NP (DT some) (NN one)
            (S
              (VP (TO to)
                (VP (VB sit)
                  (PRT (RP up))
                  (PP (IN with)
                    (NP
                      (NP (PRP him))
                      (, ,)
                      (NP (NNP Miss) (NNP Fordyce)))))))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT all))
          (VP (VBD was)
            (VP (VBN done))))))
    (. .)))

nsubj(have-4, He-2)
aux(have-4, must-3)
ccomp(said-18, have-4)
det(one-6, some-5)
dobj(have-4, one-6)
aux(sit-8, to-7)
vmod(one-6, sit-8)
prt(sit-8, up-9)
prep_with(sit-8, him-11)
nn(Fordyce-14, Miss-13)
appos(him-11, Fordyce-14)
nsubj(said-18, he-17)
root(ROOT-0, said-18)
advmod(done-23, when-20)
nsubjpass(done-23, all-21)
auxpass(done-23, was-22)
advcl(said-18, done-23)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB myself))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

nsubj(myself-4, I-2)
aux(myself-4, will-3)
ccomp(answered-8, myself-4)
nsubj(answered-8, she-7)
root(ROOT-0, answered-8)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB give)
        (NP (PRP me))
        (NP
          (NP (JJ exact) (NNS directions))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP I))
              (VP (VBP have)
                (VP (VBN done)
                  (NP (DT no) (NN nursing)))))))))
    (. .) ('' '')))

cc(give-5, But-2)
nsubj(give-5, you-3)
aux(give-5, must-4)
root(ROOT-0, give-5)
iobj(give-5, me-6)
amod(directions-8, exact-7)
dobj(give-5, directions-8)
mark(done-13, for-10)
nsubj(done-13, I-11)
aux(done-13, have-12)
dep(directions-8, done-13)
neg(nursing-15, no-14)
dobj(done-13, nursing-15)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD will)
          (VP (VB walk)
            (NP (DT a) (JJ little) (NN way))
            (PP (IN with)
              (NP (PRP me)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB tell)
        (NP (PRP you))
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD need)
                (VP (VB know))))))))
    (. .)))

mark(walk-5, If-2)
nsubj(walk-5, you-3)
aux(walk-5, will-4)
advcl(tell-14, walk-5)
det(way-8, a-6)
amod(way-8, little-7)
dobj(walk-5, way-8)
prep_with(walk-5, me-10)
nsubj(tell-14, I-12)
aux(tell-14, will-13)
root(ROOT-0, tell-14)
iobj(tell-14, you-15)
dobj(tell-14, all-16)
nsubj(know-19, you-17)
aux(know-19, need-18)
rcmod(all-16, know-19)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD will)
        (VP (VB sleep)
          (S
            (ADVP (RB now))
            (, ,)
            (NP (PRP I))
            (VP (VBP think) (: --)
              (SBAR
                (ADVP (IN at) (JJS least))
                (IN till)
                (S
                  (NP (PRP you))
                  (VP (VBP get)
                    (ADVP (RB back))))))))))
    (: :)
    (S
      (NP (PRP I))
      (VP (MD shall) (RB not)
        (VP (VB keep)
          (NP (PRP you))
          (PP (IN beyond)
            (NP (DT a) (JJ few) (NNS minutes))))))
    (. .)))

nsubj(sleep-3, He-1)
aux(sleep-3, will-2)
root(ROOT-0, sleep-3)
advmod(think-7, now-4)
nsubj(think-7, I-6)
ccomp(sleep-3, think-7)
advmod(get-13, at-9)
pobj(at-9, least-10)
mark(get-13, till-11)
nsubj(get-13, you-12)
advcl(think-7, get-13)
parataxis(think-7, get-13)
advmod(get-13, back-14)
nsubj(keep-19, I-16)
aux(keep-19, shall-17)
neg(keep-19, not-18)
parataxis(sleep-3, keep-19)
dobj(keep-19, you-20)
det(minutes-24, a-22)
amod(minutes-24, few-23)
prep_beyond(keep-19, minutes-24)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is) (RB not)
        (NP (DT a) (RB very) (JJ awkward) (NN fracture))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD continued) (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBD went)))))
    (. .)))

nsubj(fracture-7, It-1)
cop(fracture-7, is-2)
neg(fracture-7, not-3)
det(fracture-7, a-4)
advmod(fracture-7, very-5)
amod(fracture-7, awkward-6)
ccomp(continued-11, fracture-7)
nsubj(continued-11, he-10)
root(ROOT-0, continued-11)
mark(went-15, as-13)
nsubj(went-15, they-14)
advcl(continued-11, went-15)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD might)
      (VP (VB have)
        (VP (VBN been)
          (ADJP (RB much) (JJR worse)))))
    (. !)))

nsubj(worse-7, It-2)
aux(worse-7, might-3)
aux(worse-7, have-4)
cop(worse-7, been-5)
advmod(worse-7, much-6)
root(ROOT-0, worse-7)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD shall)
      (VP (VB have)
        (NP (PRP him))
        (PP (IN about)
          (PP (IN in)
            (NP (DT a) (JJ few) (NNS weeks))))))
    (. .)))

nsubj(have-3, We-1)
aux(have-3, shall-2)
root(ROOT-0, have-3)
dobj(have-3, him-4)
prep(have-3, about-5)
pcomp(about-5, in-6)
det(weeks-9, a-7)
amod(weeks-9, few-8)
pobj(in-6, weeks-9)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (MD will)
      (VP (VB want)
        (NP (DT the) (JJS greatest) (NN care))
        (SBAR (IN while)
          (S
            (NP (DT the) (NNS bones))
            (VP (VBP are)
              (VP (VBG uniting)))))))
    (. .) ('' '')))

cc(want-4, But-1)
nsubj(want-4, he-2)
aux(want-4, will-3)
root(ROOT-0, want-4)
det(care-7, the-5)
amod(care-7, greatest-6)
dobj(want-4, care-7)
mark(uniting-12, while-8)
det(bones-10, the-9)
nsubj(uniting-12, bones-10)
aux(uniting-12, are-11)
advcl(want-4, uniting-12)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP
      (VP (VBD turned)
        (PP (IN from)
          (NP (DT the) (NN bed))))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PP (TO to)
          (NP
            (NP (PRP$ his) (NN study))
            (, ,)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP he))
                (VP (VBD walked)
                  (ADVP (RB up)
                    (CC and)
                    (RB down))
                  (, ,)
                  (S
                    (UCP
                      (VP (VBN lost))
                      (CC and)
                      (ADJP (JJ old)
                        (CC and)
                        (JJ pale))))))))))
      (, ,)
      (NP
        (NP (DT the) (JJ very) (NN Bibliad))
        (PP (IN of)
          (NP
            (NP (DT the) (NN room))
            (PP (IN with)
              (NP (PRP$ its) (JJ ancient) (NNS volumes)))
            (ADVP (DT all) (IN around))))))
    (. .)))

det(laird-2, The-1)
nsubj(turned-3, laird-2)
nsubj(went-9, laird-2)
root(ROOT-0, turned-3)
det(bed-6, the-5)
prep_from(turned-3, bed-6)
conj_and(turned-3, went-9)
poss(study-12, his-11)
prep_to(went-9, study-12)
advmod(walked-16, where-14)
nsubj(walked-16, he-15)
rcmod(study-12, walked-16)
advmod(walked-16, up-17)
advmod(walked-16, down-19)
conj_and(up-17, down-19)
dep(walked-16, lost-21)
dep(walked-16, old-23)
conj_and(lost-21, old-23)
conj_and(lost-21, pale-25)
conj_and(old-23, pale-25)
det(Bibliad-29, the-27)
amod(Bibliad-29, very-28)
conj_and(turned-3, Bibliad-29)
dobj(turned-3, Bibliad-29)
det(room-32, the-31)
prep_of(Bibliad-29, room-32)
poss(volumes-36, its-34)
amod(volumes-36, ancient-35)
prep_with(room-32, volumes-36)
dep(around-38, all-37)
advmod(room-32, around-38)

(ROOT
  (S
    (SBAR
      (WHNP (WDT Whatever))
      (S
        (NP (PRP$ his) (NNS eyes))
        (VP (VBD fell)
          (PP (RB upon)))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD turned)
        (PP (IN from))
        (, ,)
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (ADVP (RB no) (RB longer))
              (NP
                (NP (DT any) (NN pleasure))
                (PP (IN in)
                  (NP (PRP it))))))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB presently))
        (VBD stole)
        (PRT (RP back))
        (PP (TO to)
          (NP
            (NP (DT the) (NN room))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT the) (NN sufferer))
                (VP (VBD lay))))))))
    (. .)))

dobj(fell-4, Whatever-1)
poss(eyes-3, his-2)
nsubj(fell-4, eyes-3)
advcl(turned-8, fell-4)
prep(fell-4, upon-5)
nsubj(turned-8, he-7)
nsubj(stole-24, he-7)
root(ROOT-0, turned-8)
prep(turned-8, from-9)
advmod(had-14, as-11)
mark(had-14, if-12)
nsubj(had-14, he-13)
advcl(turned-8, had-14)
neg(longer-16, no-15)
advmod(had-14, longer-16)
det(pleasure-18, any-17)
dobj(had-14, pleasure-18)
prep_in(pleasure-18, it-20)
advmod(stole-24, presently-23)
conj_and(turned-8, stole-24)
prt(stole-24, back-25)
det(room-28, the-27)
prep_to(stole-24, room-28)
advmod(lay-32, where-29)
det(sufferer-31, the-30)
nsubj(lay-32, sufferer-31)
rcmod(room-28, lay-32)

(ROOT
  (S
    (PP (IN On)
      (NP (NNP tiptoe)))
    (, ,)
    (S
      (SBAR (IN with)
        (S
          (NP
            (NP (DT a) (NN caution) (NN suggestive))
            (PP (IN of)
              (NP (DT a) (JJ wild) (NN beast))))
          (ADJP (RB asleep))))
      (, ,)
      (NP (PRP he))
      (VP
        (VP (VBD crept)
          (PP (TO to)
            (NP (DT the) (NN bed))))
        (, ,)
        (VP (VBD looked)
          (PRT (RP down))
          (PP (IN on)
            (NP (PRP$ his) (JJ unwelcome) (NN guest)))
          (PP (IN with)
            (NP
              (NP (DT an) (NN expression))
              (PP (IN of)
                (NP
                  (NP (NN sympathy))
                  (VP (VBN crossed)
                    (PP (IN with)
                      (NP (NN dislike)))))))))
        (, ,)
        (CC and)
        (VP (VBD shook)
          (NP (PRP$ his) (NN head))
          (ADVP (RB slowly)))))
    (CC and)
    (S
      (ADVP (RB solemnly))
      (, ,)
      (NP (JJ like) (NN one))
      (VP
        (VP (VBD injured))
        (CC but)
        (VP (JJ forgiving))))
    (. .)))

prep_on(crept-15, tiptoe-2)
mark(asleep-12, with-4)
det(suggestive-7, a-5)
nn(suggestive-7, caution-6)
dep(asleep-12, suggestive-7)
det(beast-11, a-9)
amod(beast-11, wild-10)
prep_of(suggestive-7, beast-11)
advcl(crept-15, asleep-12)
nsubj(crept-15, he-14)
nsubj(looked-20, he-14)
nsubj(shook-36, he-14)
root(ROOT-0, crept-15)
det(bed-18, the-17)
prep_to(crept-15, bed-18)
conj_and(crept-15, looked-20)
prt(looked-20, down-21)
poss(guest-25, his-23)
amod(guest-25, unwelcome-24)
prep_on(looked-20, guest-25)
det(expression-28, an-27)
prep_with(looked-20, expression-28)
prep_of(expression-28, sympathy-30)
vmod(sympathy-30, crossed-31)
prep_with(crossed-31, dislike-33)
conj_and(crept-15, shook-36)
poss(head-38, his-37)
dobj(shook-36, head-38)
advmod(shook-36, slowly-39)
advmod(injured-45, solemnly-41)
amod(one-44, like-43)
nsubj(injured-45, one-44)
nsubj(forgiving-47, one-44)
conj_and(crept-15, injured-45)
conj_and(crept-15, forgiving-47)
conj_but(injured-45, forgiving-47)

(ROOT
  (S
    (NP (PRP$ His) (NN eye))
    (VP (VBD fell)
      (PP (IN on)
        (NP
          (NP (DT the) (JJ young) (NN man) (POS 's))
          (NN pocket-book))))
    (. .)))

poss(eye-2, His-1)
nsubj(fell-3, eye-2)
root(ROOT-0, fell-3)
det(man-7, the-5)
amod(man-7, young-6)
poss(pocket-book-9, man-7)
prep_on(fell-3, pocket-book-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD had)
      (VP (VBN fallen)
        (PP (IN from)
          (NP (PRP$ his) (NN coat)))
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP
              (VP (VBD undressed)
                (NP (PRP him)))
              (, ,)
              (CC and)
              (VP (VBD was)
                (PP (IN on)
                  (NP
                    (NP (DT a) (NN table))
                    (PP (IN by)
                      (NP (DT the) (NN bedside)))))))))))
    (. .)))

nsubj(fallen-3, It-1)
aux(fallen-3, had-2)
root(ROOT-0, fallen-3)
poss(coat-6, his-5)
prep_from(fallen-3, coat-6)
mark(undressed-9, as-7)
nsubj(undressed-9, they-8)
nsubj(was-13, they-8)
advcl(fallen-3, undressed-9)
dobj(undressed-9, him-10)
advcl(fallen-3, was-13)
conj_and(undressed-9, was-13)
det(table-16, a-15)
prep_on(was-13, table-16)
det(bedside-19, the-18)
prep_by(table-16, bedside-19)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD caught)
      (SBAR
        (S
          (NP (PRP it))
          (ADVP (RB up) (RB just))
          (VP (VBP ere)
            (SBAR
              (S
                (NP (NNP Alexa))
                (VP (VBD reentered))))))))
    (. .)))

nsubj(caught-2, He-1)
root(ROOT-0, caught-2)
nsubj(ere-6, it-3)
advmod(just-5, up-4)
advmod(ere-6, just-5)
ccomp(caught-2, ere-6)
nsubj(reentered-8, Alexa-7)
ccomp(ere-6, reentered-8)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP
        (NP (PRP he))
        (, ,)
        (NP (NN father))))
    (. ?) ('' '')))

advmod(is-3, How-2)
root(ROOT-0, is-3)
nsubj(is-3, he-4)
appos(he-4, father-6)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, she-1)
root(ROOT-0, asked-2)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (ADVP (RB fast))
        (ADJP (RB asleep))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (DT the) (NN laid))
    (. .)))

nsubj(asleep-5, He-2)
cop(asleep-5, is-3)
advmod(asleep-5, fast-4)
ccomp(answered-8, asleep-5)
root(ROOT-0, answered-8)
det(laid-10, the-9)
nsubj(answered-8, laid-10)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How) (RB long))
    (SQ (VBZ does)
      (NP (DT the) (NN doctor))
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD will)
              (VP (VB have)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADVP (RB here)))))))))))
    (. ?) ('' '')))

advmod(long-3, How-2)
advmod(think-7, long-3)
aux(think-7, does-4)
det(doctor-6, the-5)
nsubj(think-7, doctor-6)
root(ROOT-0, think-7)
nsubj(have-10, he-8)
nsubj(be-12, he-8)
aux(have-10, will-9)
ccomp(think-7, have-10)
aux(be-12, to-11)
xcomp(have-10, be-12)
advmod(be-12, here-13)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB not)
        (VP (VB ask)
          (NP (PRP him)))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD replied))
    (. .)))

nsubj(ask-5, I-2)
aux(ask-5, did-3)
neg(ask-5, not-4)
ccomp(replied-10, ask-5)
dobj(ask-5, him-6)
nsubj(replied-10, she-9)
root(ROOT-0, replied-10)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBD was)
        (NP
          (NP (DT an) (NN oversight))
          (, ,)
          (NP (PRP$ my) (NN child)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD returned))
    (. .)))

nsubj(oversight-5, That-2)
cop(oversight-5, was-3)
det(oversight-5, an-4)
ccomp(returned-12, oversight-5)
poss(child-8, my-7)
appos(oversight-5, child-8)
nsubj(returned-12, he-11)
root(ROOT-0, returned-12)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (PP (IN of)
        (NP
          (NP (NN consequence))
          (SBAR
            (S
              (NP (PRP we))
              (VP (MD should)
                (VP (VB know)
                  (NP
                    (NP (DT the) (NN moment))
                    (PP (IN of)
                      (NP (PRP$ his) (NN removal)))))))))))
    (. .) ('' '')))

nsubj(is-3, It-2)
root(ROOT-0, is-3)
prep_of(is-3, consequence-5)
nsubj(know-8, we-6)
aux(know-8, should-7)
rcmod(consequence-5, know-8)
det(moment-10, the-9)
dobj(know-8, moment-10)
poss(removal-13, his-12)
prep_of(moment-10, removal-13)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD shall)
      (VP (VB know)
        (NP (PRP it))
        (PP (IN in)
          (NP (JJ good) (NN time)))))
    (. .)))

nsubj(know-4, We-2)
aux(know-4, shall-3)
root(ROOT-0, know-4)
dobj(know-4, it-5)
amod(time-8, good-7)
prep_in(know-4, time-8)

(ROOT
  (S
    (S
      (NP (DT The) (NN doctor))
      (VP (VBD called)
        (S
          (NP (PRP it))
          (NP
            (NP (DT an) (NN affair))
            (PP (IN of)
              (NP
                (NP (NNS weeks))
                (: --)
                (CC or)
                (NP (NNS months))))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP forget)))
    (. .)))

det(doctor-2, The-1)
nsubj(called-3, doctor-2)
root(ROOT-0, called-3)
nsubj(affair-6, it-4)
det(affair-6, an-5)
xcomp(called-3, affair-6)
prep_of(affair-6, weeks-8)
prep_of(affair-6, months-11)
conj_or(weeks-8, months-11)
nsubj(forget-14, I-13)
parataxis(called-3, forget-14)

(ROOT
  (S (CC But)
    (NP (PRP you))
    (VP (MD shall) (RB not)
      (VP (VB be)
        (VP (VBN troubled) (, ,)
          (NP (NN father)))))
    (. .)))

cc(troubled-6, But-1)
nsubjpass(troubled-6, you-2)
aux(troubled-6, shall-3)
neg(troubled-6, not-4)
auxpass(troubled-6, be-5)
root(ROOT-0, troubled-6)
dobj(troubled-6, father-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB attend)
        (PP (TO to)
          (NP (PRP him)))))
    (. .) ('' '')))

nsubj(attend-3, I-1)
aux(attend-3, will-2)
root(ROOT-0, attend-3)
prep_to(attend-3, him-5)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (ADVP (RB _))
    (VP (VBP am)
      (ADJP (RB _) (JJ troubled))
      (, ,)
      (NP (NNP Alexa)))
    (. !)))

cc(troubled-7, But-2)
nsubj(troubled-7, I-3)
advmod(troubled-7, _-4)
cop(troubled-7, am-5)
advmod(troubled-7, _-6)
root(ROOT-0, troubled-7)
dep(troubled-7, Alexa-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB not)
      (VP (VB know)
        (SBAR
          (WHNP
            (WHADVP (WRB how))
            (JJ little) (NN money))
          (S
            (NP (PRP I))
            (VP (VBP have))))))
    (. !) ('' '')))

nsubj(know-4, You-1)
aux(know-4, do-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
advmod(money-7, how-5)
amod(money-7, little-6)
dobj(have-9, money-7)
nsubj(have-9, I-8)
ccomp(know-4, have-9)

(ROOT
  (S
    (S
      (ADVP (RB Again))
      (NP (PRP he))
      (VP (VBD retired)))
    (: --)
    (S
      (ADVP (RB slowly))
      (, ,)
      (S
        (VP (VB shut)
          (NP (PRP$ his) (NN door))))
      (, ,)
      (VP
        (VP (VBD locked)
          (NP (PRP it)))
        (, ,)
        (CC and)
        (VP (VBD began)
          (S
            (VP (TO to)
              (VP (VB search)
                (NP (DT the) (NN pocket-book))))))))
    (. .)))

advmod(retired-3, Again-1)
nsubj(retired-3, he-2)
root(ROOT-0, retired-3)
advmod(locked-11, slowly-5)
ccomp(locked-11, shut-7)
poss(door-9, his-8)
dobj(shut-7, door-9)
parataxis(retired-3, locked-11)
dobj(locked-11, it-12)
parataxis(retired-3, began-15)
conj_and(locked-11, began-15)
aux(search-17, to-16)
xcomp(began-15, search-17)
det(pocket-book-19, the-18)
dobj(search-17, pocket-book-19)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD found)
        (NP (JJ certain) (NNS banknotes)))
      (, ,)
      (CC and)
      (VP (VBD made)
        (NP
          (NP (DT a) (NN discovery))
          (PP (VBG concerning)
            (NP (PRP$ its) (NN owner))))))
    (. .)))

nsubj(found-2, He-1)
nsubj(made-7, He-1)
root(ROOT-0, found-2)
amod(banknotes-4, certain-3)
dobj(found-2, banknotes-4)
conj_and(found-2, made-7)
det(discovery-9, a-8)
dobj(made-7, discovery-9)
poss(owner-12, its-11)
prep_concerning(discovery-9, owner-12)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (DT the) (NN help))
        (PP (IN of)
          (NP (PRP$ her) (JJ old) (NN woman)))))
    (, ,)
    (CC and)
    (ADVP (RB noiselessly))
    (, ,)
    (SBAR (IN while)
      (S
        (NP (NNP Crawford))
        (VP (VBD lay)
          (PP (IN in)
            (NP (DT a) (NN half) (NN slumber))))))
    (, ,)
    (NP (NNP Alexa))
    (VP (VBD continued)
      (S
        (VP (VBG making)
          (S
            (NP (DT the) (NN chamber))
            (ADJP (RBR more) (JJ comfortable))))))
    (. .)))

det(help-3, the-2)
prep_with(continued-21, help-3)
poss(woman-7, her-5)
amod(woman-7, old-6)
prep_of(help-3, woman-7)
advmod(continued-21, noiselessly-10)
conj_and(continued-21, noiselessly-10)
mark(lay-14, while-12)
nsubj(lay-14, Crawford-13)
advcl(continued-21, lay-14)
det(slumber-18, a-16)
nn(slumber-18, half-17)
prep_in(lay-14, slumber-18)
nsubj(continued-21, Alexa-20)
root(ROOT-0, continued-21)
xcomp(continued-21, making-22)
det(chamber-24, the-23)
nsubj(comfortable-26, chamber-24)
advmod(comfortable-26, more-25)
xcomp(making-22, comfortable-26)

(ROOT
  (S
    (S
      (NP (JJ Chintz) (NNS curtains))
      (VP (VBZ veiled)
        (NP
          (NP (DT the) (NNS windows))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S (, ,)
              (PP (IN for)
                (NP (PDT all) (PRP$ their) (NNS narrowness)))
              (, ,)
              (VP (VBD had)
                (VP (VBN admitted)
                  (ADJP
                    (ADJP (RB too) (RB much) (JJ light))
                    (PRN (: ;)
                      (CC and)
                      (S
                        (NP (DT an) (JJ old) (NN carpet))
                        (VP (VBD deadened)
                          (NP
                            (NP (DT the) (NN sound))
                            (PP (IN of)
                              (NP
                                (NP (NNS footsteps))
                                (PP (IN on)
                                  (NP (DT the) (VBG creaking) (NNS boards))))))))
                      (: --))
                    (SBAR (IN for)
                      (S
                        (NP
                          (NP (DT the) (NNS bones))
                          (PP (IN of)
                            (NP (DT a) (NN house))))
                        (VP (VBP do) (RB not)
                          (VP (VB grow)
                            (ADJP (JJ silent))
                            (PP (IN with)
                              (NP (NN age)))))))))))))))
    (: ;)
    (S
      (NP (DT a) (NN fire))
      (VP
        (VP (VBD burned)
          (PP (IN in)
            (NP (DT the) (JJ antique) (NN grate))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (NP (DT a) (NN soul))
          (PP (TO to)
            (NP
              (NP (DT the) (NN chamber))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (VP (VBN chilly)
                      (PRN (, ,)
                        (S
                          (VP (VBG looking)
                            (PP (TO to)
                              (NP (DT the) (NN north)))))
                        (, ,))
                      (PP (IN with)
                        (NP (NNS walls)))
                      (ADVP
                        (ADVP (RB so) (JJ thick))
                        (SBAR (IN that)
                          (S
                            (NP (PRP it))
                            (VP (VBD took)))))
                      (NP (PDT half) (DT the) (NN summer))
                      (S
                        (VP (TO to)
                          (VP (VB warm)
                            (NP (PRP them))
                            (PRT (RP through))))))))))))))
    (. .)))

amod(curtains-2, Chintz-1)
nsubj(veiled-3, curtains-2)
root(ROOT-0, veiled-3)
det(windows-5, the-4)
dobj(veiled-3, windows-5)
nsubj(admitted-15, windows-5)
predet(narrowness-12, all-10)
poss(narrowness-12, their-11)
prep_for(admitted-15, narrowness-12)
aux(admitted-15, had-14)
rcmod(windows-5, admitted-15)
advmod(light-18, too-16)
advmod(light-18, much-17)
acomp(admitted-15, light-18)
cc(deadened-24, and-20)
det(carpet-23, an-21)
amod(carpet-23, old-22)
nsubj(deadened-24, carpet-23)
dep(light-18, deadened-24)
det(sound-26, the-25)
dobj(deadened-24, sound-26)
prep_of(sound-26, footsteps-28)
det(boards-32, the-30)
amod(boards-32, creaking-31)
prep_on(footsteps-28, boards-32)
mark(grow-42, for-34)
det(bones-36, the-35)
nsubj(grow-42, bones-36)
det(house-39, a-38)
prep_of(bones-36, house-39)
aux(grow-42, do-40)
neg(grow-42, not-41)
ccomp(light-18, grow-42)
acomp(grow-42, silent-43)
prep_with(grow-42, age-45)
det(fire-48, a-47)
nsubj(burned-49, fire-48)
parataxis(veiled-3, burned-49)
det(grate-53, the-51)
amod(grate-53, antique-52)
prep_in(burned-49, grate-53)
cop(soul-58, was-56)
det(soul-58, a-57)
parataxis(veiled-3, soul-58)
conj_and(burned-49, soul-58)
det(chamber-61, the-60)
prep_to(soul-58, chamber-61)
nsubjpass(chilly-65, chamber-61)
auxpass(chilly-65, was-64)
rcmod(chamber-61, chilly-65)
parataxis(chilly-65, looking-67)
det(north-70, the-69)
prep_to(looking-67, north-70)
prep_with(chilly-65, walls-73)
advmod(thick-75, so-74)
advmod(chilly-65, thick-75)
mark(took-78, that-76)
nsubj(took-78, it-77)
advcl(thick-75, took-78)
ccomp(thick-75, took-78)
predet(summer-81, half-79)
det(summer-81, the-80)
tmod(chilly-65, summer-81)
aux(warm-83, to-82)
vmod(chilly-65, warm-83)
dobj(warm-83, them-84)
prt(warm-83, through-85)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Old) (NNP Meg))
        (, ,)
        (VP (VBG moving)
          (ADVP (TO to)
            (CC and)
            (RB fro)))
        (, ,))
      (VP (VBD kept)
        (S
          (VP (VBG shaking)
            (NP (PRP$ her) (NN head))
            (PP (IN like)
              (NP (PRP$ her) (NN master)))))
        (, ,)
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP she))
            (ADVP (RB also))
            (VP (VBD were)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN secret))
                  (PP (IN of)
                    (NP (DT some) (NN house-misery))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (ADVP (RB only))
        (VP (VBG indulging)
          (NP
            (NP (DT the) (JJ funereal) (NN temperament))
            (PP (IN of)
              (NP (DT an) (JJ ancient) (NN woman)))))))
    (. .)))

nn(Meg-2, Old-1)
nsubj(kept-9, Meg-2)
vmod(Meg-2, moving-4)
advmod(moving-4, to-5)
advmod(moving-4, fro-7)
conj_and(to-5, fro-7)
root(ROOT-0, kept-9)
xcomp(kept-9, shaking-10)
poss(head-12, her-11)
dobj(shaking-10, head-12)
poss(master-15, her-14)
prep_like(shaking-10, master-15)
advmod(were-21, as-17)
mark(were-21, if-18)
nsubj(were-21, she-19)
advmod(were-21, also-20)
advcl(kept-9, were-21)
det(secret-24, the-23)
prep_in(were-21, secret-24)
det(house-misery-27, some-26)
prep_of(secret-24, house-misery-27)
nsubj(indulging-33, she-30)
aux(indulging-33, was-31)
advmod(indulging-33, only-32)
conj_but(kept-9, indulging-33)
det(temperament-36, the-34)
amod(temperament-36, funereal-35)
dobj(indulging-33, temperament-36)
det(woman-40, an-38)
amod(woman-40, ancient-39)
prep_of(temperament-36, woman-40)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (NNP Alexa))
          (VP (VBD ran)
            (PP (IN through)
              (NP (DT the) (NN heather)))
            (PP (IN in)
              (NP (DT the) (NN morning))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD looked) (RB not)
        (VP
          (ADVP (RB altogether))
          (PP (IN unlike)
            (NP (DT a) (NN peasant))))))
    (: ;)
    (S
      (NP (PRP$ her) (NNS shoes))
      (VP (VBD were)
        (ADJP (JJ strong))))
    (, ,)
    (S
      (NP (PRP$ her) (NN dress))
      (VP (VBD was)
        (ADJP (JJ short))))
    (: ;)
    (CC but)
    (S
      (ADVP (RB now))
      (NP (PRP she))
      (VP (VBD came)
        (CC and)
        (VBD went)
        (PP (IN in)
          (NP
            (NP (DT a) (JJ soft-colored) (NN gown))
            (, ,)
            (ADJP (CC neither)
              (JJ ill-made)
              (CC nor)
              (JJ unbecoming))))))
    (. .)))

mark(ran-3, As-1)
nsubj(ran-3, Alexa-2)
advcl(looked-12, ran-3)
det(heather-6, the-5)
prep_through(ran-3, heather-6)
det(morning-9, the-8)
prep_in(ran-3, morning-9)
nsubj(looked-12, she-11)
root(ROOT-0, looked-12)
neg(looked-12, not-13)
dep(looked-12, altogether-14)
det(peasant-17, a-16)
prep_unlike(altogether-14, peasant-17)
poss(shoes-20, her-19)
nsubj(strong-22, shoes-20)
cop(strong-22, were-21)
conj_but(looked-12, strong-22)
poss(dress-25, her-24)
nsubj(short-27, dress-25)
cop(short-27, was-26)
conj_but(looked-12, short-27)
advmod(came-32, now-30)
nsubj(came-32, she-31)
nsubj(went-34, she-31)
conj_but(looked-12, came-32)
conj_but(looked-12, went-34)
conj_and(came-32, went-34)
det(gown-38, a-36)
amod(gown-38, soft-colored-37)
prep_in(came-32, gown-38)
preconj(ill-made-41, neither-40)
amod(gown-38, ill-made-41)
amod(gown-38, unbecoming-43)
conj_nor(ill-made-41, unbecoming-43)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD did) (RB not)
        (VP (VB seem)
          (S
            (VP (TO to)
              (VP (VB belong)
                (PP (TO to)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (VP (VBN called)
                          (NP (NN society)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD looked)
        (NP (JJ dignified))
        (, ,)
        (PP (IN at)
          (NP
            (NP (NNS times))
            (ADJP (RB almost) (JJ stately))))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT an) (NN expression))
            (PP (IN of)
              (NP
                (NP (NN superiority))
                (, ,)
                (NP (RB not)
                  (ADJP (JJ strong) (RB enough)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (NP (PRP$ her) (JJ handsome) (NN face))))))
                  (NN unpleasing))))))))
    (. .)))

nsubj(seem-4, She-1)
nsubj(belong-6, She-1)
aux(seem-4, did-2)
neg(seem-4, not-3)
root(ROOT-0, seem-4)
aux(belong-6, to-5)
xcomp(seem-4, belong-6)
nsubjpass(called-10, what-8)
auxpass(called-10, is-9)
prepc_to(belong-6, called-10)
dobj(called-10, society-11)
nsubj(looked-15, she-14)
conj_but(seem-4, looked-15)
dobj(looked-15, dignified-16)
prep_at(looked-15, times-19)
advmod(stately-21, almost-20)
amod(times-19, stately-21)
det(expression-25, an-24)
prep_with(looked-15, expression-25)
prep_of(expression-25, superiority-27)
neg(unpleasing-37, not-29)
amod(unpleasing-37, strong-30)
advmod(strong-30, enough-31)
aux(make-33, to-32)
xcomp(strong-30, make-33)
poss(face-36, her-34)
amod(face-36, handsome-35)
dobj(make-33, face-36)
appos(superiority-27, unpleasing-37)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD resembled)
      (SBAR
        (S
          (NP (PRP$ her) (NN father))
          (VP
            (VP (VBZ 's))
            (, ,)
            (CC but)
            (, ,)
            (VP
              (PP (IN for)
                (NP (DT a) (NN woman) (POS 's)))
              (, ,) (VBD was)
              (VP (VBN cast)
                (PP (IN in)
                  (NP (DT a) (JJR larger) (NN mold)))))))))
    (. .)))

nsubj(resembled-2, It-1)
root(ROOT-0, resembled-2)
poss(father-4, her-3)
nsubj('s-5, father-4)
nsubjpass(cast-15, father-4)
ccomp(resembled-2, 's-5)
det(woman-11, a-10)
prep_for(cast-15, woman-11)
possessive(woman-11, 's-12)
auxpass(cast-15, was-14)
ccomp(resembled-2, cast-15)
conj_but('s-5, cast-15)
det(mold-19, a-17)
amod(mold-19, larger-18)
prep_in(cast-15, mold-19)

(ROOT
  (S
    (NP (DT The) (NN day))
    (VP (VBD crept)
      (PRT (RP on)))
    (. .)))

det(day-2, The-1)
nsubj(crept-3, day-2)
root(ROOT-0, crept-3)
prt(crept-3, on-4)

(ROOT
  (S
    (NP (DT The) (NN invalid))
    (VP (VBD was)
      (ADJP (JJ feverish)))
    (. .)))

det(invalid-2, The-1)
nsubj(feverish-4, invalid-2)
cop(feverish-4, was-3)
root(ROOT-0, feverish-4)

(ROOT
  (S
    (NP (PRP$ His) (NN nurse))
    (VP (VBD obeyed)
      (NP (DT the) (NN doctor))
      (ADVP (RB minutely))
      (, ,)
      (PP (TO to)
        (NP (DT a) (JJ single) (NN drop))))
    (. .)))

poss(nurse-2, His-1)
nsubj(obeyed-3, nurse-2)
root(ROOT-0, obeyed-3)
det(doctor-5, the-4)
dobj(obeyed-3, doctor-5)
advmod(obeyed-3, minutely-6)
det(drop-11, a-9)
amod(drop-11, single-10)
prep_to(obeyed-3, drop-11)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD had)
        (NP
          (NP (PRP$ her) (NN tea))
          (VP (VBN brought)
            (NP (PRP her))))))
    (, ,)
    (CC but)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN supper) (NN hour))
          (VP (VBD arrived))))
      (VP (VBD went)
        (S
          (VP (TO to)
            (VP (VB join)
              (NP (PRP$ her) (NN father))
              (PP (IN in)
                (NP (DT the) (NN kitchen))))))))
    (. .)))

nsubj(had-2, She-1)
root(ROOT-0, had-2)
poss(tea-4, her-3)
dobj(had-2, tea-4)
vmod(tea-4, brought-5)
dobj(brought-5, her-6)
advmod(arrived-13, when-9)
det(hour-12, the-10)
nn(hour-12, supper-11)
nsubj(arrived-13, hour-12)
advcl(went-14, arrived-13)
csubj(went-14, arrived-13)
conj_but(had-2, went-14)
aux(join-16, to-15)
xcomp(went-14, join-16)
poss(father-18, her-17)
dobj(join-16, father-18)
det(kitchen-21, the-20)
prep_in(join-16, kitchen-21)

(ROOT
  (NP (NNP CHAPTER) (NNP V) (. .)))

nn(V-2, CHAPTER-1)
root(ROOT-0, V-2)

(ROOT
  (NP (NNP AFTER) (NNP SUPPER) (. .)))

nn(SUPPER-2, AFTER-1)
root(ROOT-0, SUPPER-2)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB always))
    (VP (VBP eat)
      (PP (IN in)
        (NP (DT the) (NN kitchen))))
    (. .)))

nsubj(eat-3, They-1)
advmod(eat-3, always-2)
root(ROOT-0, eat-3)
det(kitchen-6, the-5)
prep_in(eat-3, kitchen-6)

(ROOT
  (S
    (S
      (ADJP (JJ Strange)
        (S
          (VP (TO to)
            (VP (VB say))))))
    (, ,)
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (DT no) (NN dining-room))
        (PP (IN in)
          (NP (DT the) (NN house))))
      (, ,)
      (SBAR (IN though)
        (S
          (NP (EX there))
          (VP (VBD was)
            (NP (DT a) (JJ sweetly) (JJ old-fashioned) (NN drawing-room))))))
    (. .)))

ccomp(was-6, Strange-1)
aux(say-3, to-2)
xcomp(Strange-1, say-3)
expl(was-6, there-5)
root(ROOT-0, was-6)
neg(dining-room-8, no-7)
nsubj(was-6, dining-room-8)
det(house-11, the-10)
prep_in(dining-room-8, house-11)
mark(was-15, though-13)
expl(was-15, there-14)
advcl(was-6, was-15)
det(drawing-room-19, a-16)
amod(drawing-room-19, sweetly-17)
amod(drawing-room-19, old-fashioned-18)
nsubj(was-15, drawing-room-19)

(ROOT
  (S
    (S
      (NP (DT The) (NN servant))
      (VP (VBD was)
        (PP (IN with)
          (NP (DT the) (NN sufferer)))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Alexa))
      (VP (VBD was)
        (ADJP (RB too) (JJ much))
        (PP (IN in)
          (NP (DT the) (NN sick-room)))
        (, ,)
        (ADVP (RB notwithstanding))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR (IN that)
                (S
                  (NP (PRP she))
                  (VP (VBD was)
                    (VP (VBG eating)
                      (NP (PRP$ her) (NN porridge)
                        (CC and)
                        (NN milk)))))))))))
    (. .)))

det(servant-2, The-1)
nsubj(was-3, servant-2)
root(ROOT-0, was-3)
det(sufferer-6, the-5)
prep_with(was-3, sufferer-6)
nsubj(much-12, Alexa-9)
nsubj(know-20, Alexa-9)
cop(much-12, was-10)
advmod(much-12, too-11)
conj_but(was-3, much-12)
det(sick-room-15, the-14)
prep_in(much-12, sick-room-15)
advmod(much-12, notwithstanding-17)
aux(know-20, to-19)
xcomp(much-12, know-20)
mark(eating-24, that-21)
nsubj(eating-24, she-22)
aux(eating-24, was-23)
ccomp(know-20, eating-24)
poss(porridge-26, her-25)
dobj(eating-24, porridge-26)
dobj(eating-24, milk-28)
conj_and(porridge-26, milk-28)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP (VBP partook)
      (ADVP (CC but))
      (ADVP (RB sparingly))
      (, ,)
      (PP (IN on)
        (NP
          (NP (DT the) (NN ground))
          (SBAR (IN that)
            (S
              (NP (DT the) (NN fare))
              (VP (VBD tended)
                (PP (TO to)
                  (NP
                    (NP (NNS fatness))
                    (, ,)
                    (SBAR
                      (WHNP
                        (WHNP (WDT which) (NN affliction))
                        (PP (IN of)
                          (NP (NN age))))
                      (S
                        (NP (PRP he))
                        (VP (VBD congratulated)
                          (NP (PRP himself))
                          (PP (IN on)
                            (S
                              (VP (VBG having)
                                (NP (NN hitherto))
                                (VP (VBN escaped))))))))))))))))
    (. .)))

det(laird-2, The-1)
nsubj(partook-3, laird-2)
root(ROOT-0, partook-3)
advmod(partook-3, but-4)
advmod(partook-3, sparingly-5)
det(ground-9, the-8)
prep_on(partook-3, ground-9)
mark(tended-13, that-10)
det(fare-12, the-11)
nsubj(tended-13, fare-12)
dep(ground-9, tended-13)
prep_to(tended-13, fatness-15)
det(affliction-18, fatness-15)
dobj(congratulated-22, affliction-18)
prep_of(affliction-18, age-20)
nsubj(congratulated-22, he-21)
rcmod(fatness-15, congratulated-22)
dobj(congratulated-22, himself-23)
aux(escaped-27, having-25)
dobj(escaped-27, hitherto-26)
prepc_on(congratulated-22, escaped-27)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP eat)
        (PP (IN in)
          (NP (NN silence)))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (RB not) (DT a) (NN glance))
        (PP (IN of)
          (NP
            (NP (PRP$ her) (NN father))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD might)
                  (VP (VB indicate)
                    (SBAR
                      (S
                        (NP (SYM a))
                        (VP (VBP want)))))))))))
      (VP (VBD escaped)
        (NP (DT the) (NN daughter))))
    (. .)))

nsubj(eat-2, They-1)
root(ROOT-0, eat-2)
prep_in(eat-2, silence-4)
neg(glance-9, not-7)
det(glance-9, a-8)
nsubj(escaped-18, glance-9)
poss(father-12, her-11)
prep_of(glance-9, father-12)
nsubj(indicate-15, father-12)
aux(indicate-15, might-14)
rcmod(father-12, indicate-15)
nsubj(want-17, a-16)
ccomp(indicate-15, want-17)
conj_but(eat-2, escaped-18)
det(daughter-20, the-19)
dobj(escaped-18, daughter-20)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (S
          (NP (DT the) (NN meal))
          (VP (VBD was)
            (VP (VBN ended))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (JJ old) (NN man))
          (VP (VBD had)
            (VP (VBN given)
              (ADVP (NNS thanks)))))))
    (, ,)
    (NP (NNP Alexa))
    (VP (VBD put)
      (PP (IN on)
        (NP (DT the) (NN table)))
      (NP
        (NP (DT a) (JJ big) (JJ black) (NN Bible))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP$ her) (NN father))
            (VP (VBD took)
              (PP (IN with)
                (NP (JJ solemn) (NN face)
                  (CC and)
                  (NN reverent) (NN gesture))))))))
    (. .)))

advmod(ended-5, When-1)
det(meal-3, the-2)
nsubjpass(ended-5, meal-3)
auxpass(ended-5, was-4)
advcl(put-16, ended-5)
det(man-10, the-8)
amod(man-10, old-9)
nsubj(given-12, man-10)
aux(given-12, had-11)
conj_and(ended-5, given-12)
advcl(put-16, given-12)
advmod(given-12, thanks-13)
nsubj(put-16, Alexa-15)
root(ROOT-0, put-16)
det(table-19, the-18)
prep_on(put-16, table-19)
det(Bible-23, a-20)
amod(Bible-23, big-21)
amod(Bible-23, black-22)
dobj(put-16, Bible-23)
dobj(took-28, Bible-23)
poss(father-27, her-26)
nsubj(took-28, father-27)
rcmod(Bible-23, took-28)
amod(face-31, solemn-30)
prep_with(took-28, face-31)
nn(gesture-34, reverent-33)
prep_with(took-28, gesture-34)
conj_and(face-31, gesture-34)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN course))
        (PP (IN of)
          (NP
            (NP (PRP$ his) (JJ nightly) (NN reading))
            (PP (IN of)
              (NP (DT the) (NNP New) (NN Testament)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN come)
        (PP (TO to)
          (NP
            (NP (DT the) (JJ twelfth) (NN chapter))
            (PP (IN of)
              (NP (NNP St.) (NNP Luke)))))
        (, ,)
        (PP (IN with)
          (NP
            (NP
              (NP (DT the) (NNP Lord) (POS 's))
              (NN parable))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ rich) (NN man))
                (SBAR
                  (WHNP (WP$ whose) (NNS soul))
                  (S
                    (NP (PRP they))
                    (VP (VBN required)
                      (PP (IN of)
                        (NP (PRP him))))))))))
        (: :)
        (S
          (NP (PRP he))
          (VP (VB read)
            (NP (PRP it))
            (ADVP (RB beautifully))
            (, ,)
            (PP (IN with)
              (NP
                (NP (DT an) (NN expression))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD seemed)
                      (S
                        (VP (TO to)
                          (VP (VB indicate)
                            (NP
                              (NP (DT a) (NN sense))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (NNP Lord) (POS 's))
                                  (NN meaning)))
                              (SBAR
                                (WHNP (WP what))
                                (S
                                  (NP (PRP He))
                                  (VP (VBD said)))))))))))))))))
    (. .)))

det(course-3, the-2)
prep_in(come-15, course-3)
poss(reading-7, his-5)
amod(reading-7, nightly-6)
prep_of(course-3, reading-7)
det(Testament-11, the-9)
nn(Testament-11, New-10)
prep_of(reading-7, Testament-11)
nsubj(come-15, he-13)
aux(come-15, had-14)
root(ROOT-0, come-15)
det(chapter-19, the-17)
amod(chapter-19, twelfth-18)
prep_to(come-15, chapter-19)
nn(Luke-22, St.-21)
prep_of(chapter-19, Luke-22)
det(Lord-26, the-25)
poss(parable-28, Lord-26)
prep_with(come-15, parable-28)
det(man-32, the-30)
amod(man-32, rich-31)
prep_of(parable-28, man-32)
poss(soul-34, man-32)
dobj(required-36, soul-34)
nsubj(required-36, they-35)
rcmod(man-32, required-36)
prep_of(required-36, him-38)
nsubj(read-41, he-40)
ccomp(come-15, read-41)
parataxis(come-15, read-41)
dobj(read-41, it-42)
advmod(read-41, beautifully-43)
det(expression-47, an-46)
prep_with(read-41, expression-47)
nsubj(seemed-49, expression-47)
nsubj(indicate-51, expression-47)
rcmod(expression-47, seemed-49)
aux(indicate-51, to-50)
xcomp(seemed-49, indicate-51)
det(sense-53, a-52)
dobj(indicate-51, sense-53)
dobj(said-61, sense-53)
det(Lord-56, the-55)
poss(meaning-58, Lord-56)
prep_of(sense-53, meaning-58)
nsubj(said-61, He-60)
rcmod(sense-53, said-61)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (MD will)
        (VP (VB omit)
          (NP
            (NP
              (NP (DT the) (NN psalm))
              (NP (DT this) (NN evening)))
            (: --)
            (PP (IN for)
              (NP
                (NP (DT the) (NN sake))
                (PP (IN of)
                  (NP (DT the) (NN sufferer)))))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (S
        (VP (VBG having)
          (VP (VBN ended)
            (NP (DT the) (NN chapter))))))
    (. .)))

nsubj(omit-4, We-2)
aux(omit-4, will-3)
ccomp(said-19, omit-4)
det(psalm-6, the-5)
dobj(omit-4, psalm-6)
det(evening-8, this-7)
dep(psalm-6, evening-8)
det(sake-12, the-11)
prep_for(psalm-6, sake-12)
det(sufferer-15, the-14)
prep_of(sake-12, sufferer-15)
nsubj(said-19, he-18)
nsubj(ended-22, he-18)
root(ROOT-0, said-19)
aux(ended-22, having-21)
xcomp(said-19, ended-22)
det(chapter-24, the-23)
dobj(ended-22, chapter-24)

(ROOT
  (S (`` ``)
    (NP (DT The) (NNP Lord))
    (VP (MD will)
      (VP
        (VP (VB have)
          (NP (NN mercy)))
        (CC and)
        (RB not)
        (VP (VB sacrifice))))
    (. .) ('' '')))

det(Lord-3, The-2)
nsubj(have-5, Lord-3)
nsubj(sacrifice-9, Lord-3)
aux(have-5, will-4)
root(ROOT-0, have-5)
dobj(have-5, mercy-6)
neg(sacrifice-9, not-8)
conj_and(have-5, sacrifice-9)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD rose)
      (PP (IN from)
        (NP (PRP$ their) (NNS chairs)
          (CC and)
          (NN knelt)))
      (PP (IN on)
        (NP (DT the) (NN stone) (NN floor))))
    (. .)))

nsubj(rose-2, They-1)
root(ROOT-0, rose-2)
poss(chairs-5, their-4)
prep_from(rose-2, chairs-5)
prep_from(rose-2, knelt-7)
conj_and(chairs-5, knelt-7)
det(floor-11, the-9)
nn(floor-11, stone-10)
prep_on(rose-2, floor-11)

(ROOT
  (SINV
    (S
      (S
        (NP (DT The) (JJ old) (NN man))
        (VP (VBD prayed)
          (PP (IN with)
            (NP (JJ much) (NN tone)
              (CC and)
              (NN expression)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP think))))
    (VP (VBD meant)
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD said)
              (PRN (, ,)
                (SBAR (IN though)
                  (S
                    (NP
                      (NP (NN none))
                      (PP (IN of)
                        (NP (PRP it))))
                    (VP (VBD seemed)
                      (S
                        (VP (TO to)
                          (VP (VB spring)
                            (PP (IN from)
                              (NP
                                (NP (JJ fresh) (NN need))
                                (CC or)
                                (NP (JJ new) (NNS thankfulness))))))))))
                (, ,))
              (SBAR (IN for)
                (S
                  (NP (PRP he))
                  (VP (VBD used)
                    (NP (RB only) (DT the) (JJ old) (NN stock))))))))))
    (NP
      (NP (NNS phrases))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBD flowed)
            (ADVP (RB freely))
            (PP (IN from)
              (NP (PRP$ his) (NNS lips)))))))
    (. .)))

det(man-3, The-1)
amod(man-3, old-2)
nsubj(prayed-4, man-3)
dep(meant-14, prayed-4)
amod(tone-7, much-6)
prep_with(prayed-4, tone-7)
prep_with(prayed-4, expression-9)
conj_and(tone-7, expression-9)
nsubj(think-13, I-12)
conj_and(prayed-4, think-13)
dep(meant-14, think-13)
root(ROOT-0, meant-14)
dobj(meant-14, all-15)
nsubj(said-17, he-16)
rcmod(all-15, said-17)
mark(seemed-23, though-19)
nsubj(seemed-23, none-20)
nsubj(spring-25, none-20)
prep_of(none-20, it-22)
parataxis(said-17, seemed-23)
aux(spring-25, to-24)
xcomp(seemed-23, spring-25)
amod(need-28, fresh-27)
prep_from(spring-25, need-28)
amod(thankfulness-31, new-30)
prep_from(spring-25, thankfulness-31)
conj_or(need-28, thankfulness-31)
mark(used-35, for-33)
nsubj(used-35, he-34)
advcl(said-17, used-35)
advmod(stock-39, only-36)
det(stock-39, the-37)
amod(stock-39, old-38)
dobj(used-35, stock-39)
nsubj(meant-14, phrases-40)
nsubj(flowed-43, phrases-40)
rcmod(phrases-40, flowed-43)
advmod(flowed-43, freely-44)
poss(lips-47, his-46)
prep_from(flowed-43, lips-47)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBP dwelt)
        (ADVP (RB much))
        (PP (IN on)
          (NP
            (NP (DT the) (NNS merits))
            (PP (IN of)
              (NP (DT the) (NNP Saviour)))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBN humbled)
        (NP (PRP himself))
        (PP (IN as)
          (NP
            (NP (DT the) (NN chief))
            (PP (IN of)
              (NP
                (NP (NNS sinners))
                (, ,)
                (SBAR
                  (WHNP (WP whom))
                  (S
                    (NP (PRP it))
                    (VP
                      (VP (MD must)
                        (VP (VB be)
                          (NP
                            (NP (DT a) (NN satisfaction))
                            (PP (TO to)
                              (NP (NNP God)))
                            (S
                              (VP (TO to)
                                (VP (VB cut)
                                  (PRT (RP off))))))))
                      (, ,)
                      (CC but)
                      (VP
                        (NP (DT a) (JJR greater) (NN satisfaction))
                        (S
                          (VP (TO to)
                            (VP (VB spare)
                              (PP (IN for)
                                (NP
                                  (NP (DT the) (NN sake))
                                  (PP (IN of)
                                    (NP (CD one)))))
                              (SBAR
                                (WHNP (WP whom))
                                (S
                                  (NP (PRP he))
                                  (VP (VBD loved)))))))))))))))))
    (. .)))

nsubj(dwelt-2, He-1)
root(ROOT-0, dwelt-2)
advmod(dwelt-2, much-3)
det(merits-6, the-5)
prep_on(dwelt-2, merits-6)
det(Saviour-9, the-8)
prep_of(merits-6, Saviour-9)
nsubj(humbled-12, he-11)
parataxis(dwelt-2, humbled-12)
dobj(humbled-12, himself-13)
det(chief-16, the-15)
prep_as(humbled-12, chief-16)
prep_of(chief-16, sinners-18)
dobj(satisfaction-25, sinners-18)
nsubj(satisfaction-25, it-21)
aux(satisfaction-25, must-22)
cop(satisfaction-25, be-23)
det(satisfaction-25, a-24)
rcmod(sinners-18, satisfaction-25)
prep_to(satisfaction-25, God-27)
aux(cut-29, to-28)
vmod(satisfaction-25, cut-29)
prt(cut-29, off-30)
det(satisfaction-35, a-33)
amod(satisfaction-35, greater-34)
rcmod(sinners-18, satisfaction-35)
conj_but(satisfaction-25, satisfaction-35)
aux(spare-37, to-36)
vmod(satisfaction-35, spare-37)
det(sake-40, the-39)
prep_for(spare-37, sake-40)
prep_of(sake-40, one-42)
dobj(loved-45, whom-43)
nsubj(loved-45, he-44)
ccomp(spare-37, loved-45)

(ROOT
  (S
    (ADVP (RB Plainly))
    (NP (DT the) (NN man))
    (VP (VBD counted)
      (NP (PRP it))
      (S
        (NP (DT a)
          (ADJP (RBS most) (JJ important))
          (NN thing))
        (VP (TO to)
          (VP (VB stand)
            (ADVP (RB well))
            (PP (IN with)
              (NP
                (NP (PRP Him))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD had)
                      (VP (VBN created)
                        (NP (PRP him))))))))))))
    (. .)))

advmod(counted-4, Plainly-1)
det(man-3, the-2)
nsubj(counted-4, man-3)
root(ROOT-0, counted-4)
dobj(counted-4, it-5)
det(thing-9, a-6)
advmod(important-8, most-7)
amod(thing-9, important-8)
dobj(counted-4, thing-9)
aux(stand-11, to-10)
vmod(counted-4, stand-11)
advmod(stand-11, well-12)
prep_with(stand-11, Him-14)
nsubj(created-17, Him-14)
aux(created-17, had-16)
rcmod(Him-14, created-17)
dobj(created-17, him-18)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP they))
          (VP (VBD rose))))
      (, ,)
      (NP (NNP Alexa))
      (VP (VBD looked)
        (ADVP (RB formally))
        (NP (NN solemn))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP
          (NP (DT the) (NN wan) (NN face))
          (PP (IN of)
            (NP (PRP$ her) (NN father) (NN shone))))
        (: :)
        (NP
          (NP (DT the) (NN Psyche))
          (, ,)
          (CONJP (IN if) (RB not))
          (NP (DT the) (NN Ego)))
        (, ,))
      (VP (VBD had)
        (VP
          (VP (VBN prayed))
          (: --)
          (CC and)
          (VP (VBN felt)
            (S
              (ADJP (JJ comfortable)))))))
    (. .)))

advmod(rose-3, When-1)
nsubj(rose-3, they-2)
advcl(looked-6, rose-3)
nsubj(looked-6, Alexa-5)
root(ROOT-0, looked-6)
advmod(looked-6, formally-7)
dobj(looked-6, solemn-8)
det(face-13, the-11)
nn(face-13, wan-12)
nsubj(prayed-28, face-13)
nsubj(felt-31, face-13)
poss(shone-17, her-15)
nn(shone-17, father-16)
prep_of(face-13, shone-17)
det(Psyche-20, the-19)
dep(face-13, Psyche-20)
det(Ego-25, the-24)
dep(face-13, Ego-25)
conj_negcc(Psyche-20, Ego-25)
aux(prayed-28, had-27)
conj_but(looked-6, prayed-28)
conj_but(looked-6, felt-31)
conj_and(prayed-28, felt-31)
acomp(felt-31, comfortable-32)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP
          (VP (VBD sat)
            (PRT (RP down)))
          (, ,)
          (CC and)
          (VP (VBD looked)
            (ADVP (RB fixedly))
            (, ,)
            (ADVP (RB as) (IN if))
            (PP (IN into)
              (NP (NN eternity))))))
      (, ,)
      (CC but)
      (S
        (ADVP (RB perhaps))
        (NP (PRP it))
        (VP (VBD was)
          (PP (IN into)
            (NP (NN vacancy))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (ADVP (RB much)
          (NP (DT the) (JJ same)))
        (PP (TO to)
          (NP (JJS most) (NNS people)))))
    (. .)))

nsubj(sat-2, He-1)
nsubj(looked-6, He-1)
root(ROOT-0, sat-2)
prt(sat-2, down-3)
conj_and(sat-2, looked-6)
advmod(looked-6, fixedly-7)
advmod(if-10, as-9)
advmod(looked-6, if-10)
prep_into(looked-6, eternity-12)
advmod(was-17, perhaps-15)
nsubj(was-17, it-16)
conj_but(sat-2, was-17)
prep_into(was-17, vacancy-19)
nsubj(are-22, they-21)
parataxis(sat-2, are-22)
advmod(are-22, much-23)
det(same-25, the-24)
pobj(much-23, same-25)
amod(people-28, most-27)
prep_to(are-22, people-28)

(ROOT
  (S (`` ``)
    (PP (VBN Come)
      (PP (IN into)
        (NP
          (NP (DT the) (NN study))
          (PP (IN for)
            (NP (DT a) (NN moment))))))
    (, ,)
    (NP (NNP Lexy))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP please))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (S
        (VP (VBG rising)
          (PP (IN at)
            (NP (NN length))))))
    (. .)))

prep(said-18, Come-2)
pcomp(Come-2, into-3)
det(study-5, the-4)
pobj(into-3, study-5)
det(moment-8, a-7)
prep_for(study-5, moment-8)
nsubj(said-18, Lexy-10)
mark(please-14, if-12)
nsubj(please-14, you-13)
advcl(said-18, please-14)
nsubj(said-18, he-17)
root(ROOT-0, said-18)
xcomp(said-18, rising-20)
prep_at(rising-20, length-22)

(ROOT
  (S
    (NP
      (NP (PRP$ His) (NNS politeness))
      (PP
        (PP (TO to)
          (NP (PRP$ his) (NN daughter)))
        (, ,)
        (CC and)
        (PP
          (ADVP (RB indeed))
          (TO to)
          (NP
            (NP (DT all))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD came)
                  (PP (IN near)
                    (NP (PRP him))))))))))
    (, ,)
    (VP (VBD was)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the)
              (ADJP (RBS most) (JJ notable))
              (NNS points))
            (PP (IN in)
              (NP (PRP$ his) (NN behavior)))))))
    (. .)))

poss(politeness-2, His-1)
nsubj(one-17, politeness-2)
poss(daughter-5, his-4)
prep_to(politeness-2, daughter-5)
advmod(politeness-2, indeed-8)
prep_to(politeness-2, all-10)
conj_and(daughter-5, all-10)
nsubj(came-12, all-10)
rcmod(all-10, came-12)
prep_near(came-12, him-14)
cop(one-17, was-16)
root(ROOT-0, one-17)
det(points-22, the-19)
advmod(notable-21, most-20)
amod(points-22, notable-21)
prep_of(one-17, points-22)
poss(behavior-25, his-24)
prep_in(points-22, behavior-25)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD followed)
      (NP (DT the) (JJ black) (, ,) (JJ slender) (, ,) (JJ erect) (JJ little) (NN figure))
      (PP (IN up)
        (NP
          (NP (DT the) (NN stair))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD consisted)
                (PP (IN of)
                  (NP
                    (QP (RB about) (DT a) (NN dozen))
                    (NNS steps)))
                (, ,)
                (S
                  (VP (VBG filling)
                    (NP (DT the) (NN entrance))
                    (PP (IN from)
                      (NP (NN wall)))
                    (PP (TO to)
                      (NP
                        (NP (NN wall))
                        (, ,)
                        (NP
                          (NP (DT a) (NN width))
                          (PP (IN of)
                            (NP (DT some) (CD twelve) (NNS feet))))))))))))))
    (. .)))

nsubj(followed-2, Alexa-1)
root(ROOT-0, followed-2)
det(figure-10, the-3)
amod(figure-10, black-4)
amod(figure-10, slender-6)
amod(figure-10, erect-8)
amod(figure-10, little-9)
dobj(followed-2, figure-10)
det(stair-13, the-12)
prep_up(followed-2, stair-13)
nsubj(consisted-16, stair-13)
rcmod(stair-13, consisted-16)
quantmod(dozen-20, about-18)
quantmod(dozen-20, a-19)
num(steps-21, dozen-20)
prep_of(consisted-16, steps-21)
xcomp(consisted-16, filling-23)
det(entrance-25, the-24)
dobj(filling-23, entrance-25)
prep_from(filling-23, wall-27)
prep_to(filling-23, wall-29)
det(width-32, a-31)
appos(wall-29, width-32)
det(feet-36, some-34)
num(feet-36, twelve-35)
prep_of(width-32, feet-36)

(ROOT
  (S
    (PP (IN Between)
      (NP
        (NP (PRP it))
        (CC and)
        (NP (DT the) (JJ outer) (NN door))))
    (NP (EX there))
    (VP (VBD was)
      (NP (CC but)
        (NP
          (NP (NN room))
          (PP (IN for)
            (NP
              (NP (DT the) (NN door))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN kitchen))
                  (PP (IN on)
                    (NP (DT the) (CD one) (NN hand))))))))
        (, ,)
        (CC and)
        (NP
          (NP (DT that))
          (PP (IN of)
            (NP
              (NP (DT a) (JJ small) (NN closet))
              (PP (IN on)
                (NP (DT the) (JJ other))))))))
    (. .)))

prep_between(was-8, it-2)
det(door-6, the-4)
amod(door-6, outer-5)
conj_and(it-2, door-6)
prep_between(was-8, door-6)
expl(was-8, there-7)
root(ROOT-0, was-8)
nsubj(was-8, room-10)
det(door-13, the-12)
prep_for(room-10, door-13)
det(kitchen-16, the-15)
prep_of(door-13, kitchen-16)
det(hand-20, the-18)
num(hand-20, one-19)
prep_on(kitchen-16, hand-20)
nsubj(was-8, that-23)
conj_and(room-10, that-23)
det(closet-27, a-25)
amod(closet-27, small-26)
prep_of(that-23, closet-27)
det(other-30, the-29)
prep_on(closet-27, other-30)

(ROOT
  (SINV
    (PP (IN At)
      (NP (DT the) (NN top)))
    (VP (VBD was))
    (NP
      (NP (DT a) (JJ wide) (NN space))
      (, ,)
      (NP
        (NP
          (NP (DT a) (NN sort))
          (PP (IN of)
            (NP (NN irregular) (NN hall))))
        (, ,)
        (ADJP (JJR more)
          (PP (IN like)
            (NP (DT an) (JJ out-of-door) (NN court))))
        (, ,)
        (VP (VBN paved)
          (PP (IN with)
            (NP (JJ large) (JJ flat) (NNS stones)))
          (PP (IN into)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD projected)
                  (NP
                    (NP (DT the) (JJ other) (NN side))
                    (PP (IN of)
                      (NP (DT the) (JJ rounded) (NN mass)))))))))
        (, ,)
        (VP (VBN bordered)
          (PP (IN by)
            (NP (DT the) (JJ grassy) (NN inclosure))))))
    (. .)))

det(top-3, the-2)
prep_at(was-4, top-3)
root(ROOT-0, was-4)
det(space-7, a-5)
amod(space-7, wide-6)
nsubj(was-4, space-7)
det(sort-10, a-9)
appos(space-7, sort-10)
nn(hall-13, irregular-12)
prep_of(sort-10, hall-13)
amod(sort-10, more-15)
det(court-19, an-17)
amod(court-19, out-of-door-18)
prep_like(more-15, court-19)
vmod(sort-10, paved-21)
amod(stones-25, large-23)
amod(stones-25, flat-24)
prep_with(paved-21, stones-25)
nsubj(projected-28, which-27)
prepc_into(paved-21, projected-28)
det(side-31, the-29)
amod(side-31, other-30)
dobj(projected-28, side-31)
det(mass-35, the-33)
amod(mass-35, rounded-34)
prep_of(side-31, mass-35)
vmod(sort-10, bordered-37)
det(inclosure-41, the-39)
amod(inclosure-41, grassy-40)
agent(bordered-37, inclosure-41)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP (VBD turned)
      (PP
        (PP (TO to)
          (NP (DT the) (NN right)))
        (, ,)
        (CC and)
        (PP (IN through)
          (NP (DT a) (NN door))))
      (PP (IN into)
        (NP
          (NP (DT a) (NN room))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD had)
                (ADVP (RB but)
                  (NP (CD one) (JJ small) (NN window)))
                (VP (VBN hidden)
                  (PP (IN by)
                    (NP (NNS bookcases))))))))))
    (. .)))

det(laird-2, The-1)
nsubj(turned-3, laird-2)
nsubj(turned-3', laird-2)
root(ROOT-0, turned-3)
conj_and(turned-3, turned-3')
det(right-6, the-5)
prep_to(turned-3, right-6)
det(door-11, a-10)
prep_through(turned-3', door-11)
det(room-14, a-13)
prep_into(turned-3, room-14)
nsubj(hidden-21, room-14)
aux(hidden-21, had-16)
advmod(hidden-21, but-17)
num(window-20, one-18)
amod(window-20, small-19)
pobj(but-17, window-20)
rcmod(room-14, hidden-21)
prep_by(hidden-21, bookcases-23)

(ROOT
  (S
    (ADVP (RB Naturally))
    (NP (PRP it))
    (VP (VBD smelled)
      (ADVP (RB musty))
      (, ,)
      (PP (IN of)
        (NP
          (NP (JJ old) (NNS books))
          (CC and)
          (NP (JJ decayed) (NNS bindings)))
        (, ,)
        (NP
          (NP (DT an) (NN odor))
          (ADJP (RB not) (JJ unpleasant))))
      (PP (TO to)
        (NP (DT some) (NNS nostrils))))
    (. .)))

advmod(smelled-3, Naturally-1)
nsubj(smelled-3, it-2)
root(ROOT-0, smelled-3)
advmod(smelled-3, musty-4)
amod(books-8, old-7)
prep_of(smelled-3, books-8)
amod(bindings-11, decayed-10)
prep_of(smelled-3, bindings-11)
conj_and(books-8, bindings-11)
det(odor-14, an-13)
prep_of(smelled-3, odor-14)
neg(unpleasant-16, not-15)
amod(odor-14, unpleasant-16)
det(nostrils-19, some-18)
prep_to(smelled-3, nostrils-19)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD closed)
        (NP (DT the) (NN door))
        (PP (IN behind)
          (NP (PRP him))))
      (, ,)
      (VP (VBD placed)
        (NP (DT a) (NN chair))
        (PP (IN for)
          (NP (PRP$ his) (NN daughter))))
      (, ,)
      (CC and)
      (VP (VBD set)
        (NP (PRP himself))
        (PP (IN in)
          (NP (DT another)))
        (PP (IN by)
          (NP (DT a) (NN deal) (NN table))))
      (, ,)
      (PP (IN upon)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD were)
              (NP (NNS books)
                (CC and)
                (NNS papers)))))))
    (. .)))

nsubj(closed-2, He-1)
nsubj(placed-8, He-1)
nsubj(set-16, He-1)
root(ROOT-0, closed-2)
det(door-4, the-3)
dobj(closed-2, door-4)
prep_behind(closed-2, him-6)
conj_and(closed-2, placed-8)
det(chair-10, a-9)
dobj(placed-8, chair-10)
poss(daughter-13, his-12)
prep_for(placed-8, daughter-13)
conj_and(closed-2, set-16)
dobj(set-16, himself-17)
prep_in(set-16, another-19)
det(table-23, a-21)
nn(table-23, deal-22)
prep_by(set-16, table-23)
conj_and(closed-2, upon-25)
nsubj(books-28, which-26)
cop(books-28, were-27)
prepc_upon(closed-2, books-28)
prepc_upon(closed-2, papers-30)
conj_and(books-28, papers-30)

(ROOT
  (S (`` ``)
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ sore) (NN trial))
        (, ,)
        (NP (NNP Alexa))))
    (. !) ('' '')))

nsubj(trial-6, This-2)
cop(trial-6, is-3)
det(trial-6, a-4)
amod(trial-6, sore-5)
root(ROOT-0, trial-6)
appos(trial-6, Alexa-8)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said)
      (PP (IN with)
        (NP (DT a) (NN sigh))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
det(sigh-5, a-4)
prep_with(said-2, sigh-5)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB indeed))
      (, ,)
      (FRAG
        (NP (NN father))
        (: --)
        (PP (IN for)
          (NP (DT the) (JJ poor) (JJ young) (NN man)))))
    (. !) ('' '')))

nsubj(is-3, It-2)
root(ROOT-0, is-3)
advmod(is-3, indeed-4)
dep(is-3, father-6)
det(man-12, the-9)
amod(man-12, poor-10)
amod(man-12, young-11)
prep_for(father-6, man-12)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD returned))
    (. .)))

nsubj(returned-2, she-1)
root(ROOT-0, returned-2)

(ROOT
  (S (`` ``)
    (ADVP (JJ True))
    (: ;)
    (S (CC but)
      (NP (PRP it))
      (VP (MD would)
        (VP (VB be)
          (VP (VBN selfish)
            (ADVP (RB indeed))
            (S
              (VP (TO to)
                (VP (VB regard)
                  (NP
                    (NP (DT the) (NN greatness))
                    (PP (IN of)
                      (NP (PRP$ his) (NN suffering))))
                  (PP (IN as)
                    (S
                      (VP (VBG rendering)
                        (NP (PRP$ our) (NN trial))
                        (X (DT the) (JJR less))))))))))))
    (. .)))

advmod(selfish-8, True-2)
cc(selfish-8, but-4)
nsubjpass(selfish-8, it-5)
nsubj(regard-11, it-5)
aux(selfish-8, would-6)
auxpass(selfish-8, be-7)
root(ROOT-0, selfish-8)
advmod(selfish-8, indeed-9)
aux(regard-11, to-10)
xcomp(selfish-8, regard-11)
det(greatness-13, the-12)
dobj(regard-11, greatness-13)
poss(suffering-16, his-15)
prep_of(greatness-13, suffering-16)
prepc_as(regard-11, rendering-18)
poss(trial-20, our-19)
dobj(rendering-18, trial-20)
det(less-22, the-21)
dep(rendering-18, less-22)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (VP
        (PP (TO to)
          (NP (PRP us)))
        (NP
          (NP (DT a)
            (ADJP (RBR more) (JJ serious))
            (NN matter))
          (SBAR (IN than)
            (S
              (NP (PRP you))
              (VP (VBP seem)
                (S
                  (VP (TO to)
                    (VP (VB think))))))))))
    (. .)))

nsubj(matter-8, It-1)
aux(matter-8, is-2)
prep_to(matter-8, us-4)
det(matter-8, a-5)
advmod(serious-7, more-6)
amod(matter-8, serious-7)
root(ROOT-0, matter-8)
mark(seem-11, than-9)
nsubj(seem-11, you-10)
nsubj(think-13, you-10)
advcl(matter-8, seem-11)
aux(think-13, to-12)
xcomp(seem-11, think-13)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD will)
        (VP (VB cost)
          (ADVP (RB much) (RBR more) (IN than))
          (, ,)
          (PP (IN in)
            (NP
              (NP (DT the) (JJ present) (NN state))
              (PP (IN of)
                (NP (PRP$ my) (NNS finances))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB afford)
        (S
          (VP (TO to)
            (VP (VB pay))))))
    (. .)))

nsubj(cost-3, It-1)
aux(cost-3, will-2)
ccomp(afford-18, cost-3)
advmod(than-6, much-4)
advmod(than-6, more-5)
advmod(cost-3, than-6)
det(state-11, the-9)
amod(state-11, present-10)
prep_in(cost-3, state-11)
poss(finances-14, my-13)
prep_of(state-11, finances-14)
nsubj(afford-18, I-16)
nsubj(pay-20, I-16)
aux(afford-18, can-17)
root(ROOT-0, afford-18)
aux(pay-20, to-19)
xcomp(afford-18, pay-20)

(ROOT
  (S
    (S
      (NP (PRP You))
      (ADVP (RB little))
      (VP (VBP think)))
    (: --) ('' '')
    (S (`` ``)
      (ADVP (CC But))
      (, ,)
      (NP
        (NP (NN father))
        (, ,) ('' '')
        (VP (VBN interrupted)))
      (VP (VBZ Alexa) (, ,) (`` ``)
        (SBARQ
          (WHADVP (WRB how))
          (SQ (MD could)
            (NP (PRP we))
            (VP (VB help)
              (NP (PRP it)))))))
    (. ?) ('' '')))

nsubj(think-3, You-1)
advmod(think-3, little-2)
root(ROOT-0, think-3)
advmod(Alexa-13, But-7)
nsubj(Alexa-13, father-9)
vmod(father-9, interrupted-12)
parataxis(think-3, Alexa-13)
advmod(help-19, how-16)
aux(help-19, could-17)
nsubj(help-19, we-18)
ccomp(Alexa-13, help-19)
dobj(help-19, it-20)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (MD might)
      (VP (VB have)
        (VP (VBN been)
          (VP (VBN carried)
            (ADVP (RB elsewhere))))))
    (. !) ('' '')))

nsubjpass(carried-6, He-2)
aux(carried-6, might-3)
aux(carried-6, have-4)
auxpass(carried-6, been-5)
root(ROOT-0, carried-6)
advmod(carried-6, elsewhere-7)

(ROOT
  (S (`` ``)
    (PP (IN With))
    (NP (PRP me))
    (VP (VBZ standing)
      (ADVP (RB there)))
    (. !)))

prep(standing-4, With-2)
nsubj(standing-4, me-3)
root(ROOT-0, standing-4)
advmod(standing-4, there-5)

(ROOT
  (FRAG
    (ADVP
      (ADVP (RB Surely))
      (RB not))
    (, ,)
    (NP (NN father))
    (. !)))

dep(father-4, Surely-1)
dep(Surely-1, not-2)
root(ROOT-0, father-4)

(ROOT
  (S
    (ADVP (RB Even))
    (NP (NNP Andrew) (NNP Ingram))
    (VP (VBD offered)
      (S
        (VP (TO to)
          (VP (VB receive)
            (NP (PRP him))))))
    (. .) ('' '')))

advmod(offered-4, Even-1)
nn(Ingram-3, Andrew-2)
nsubj(offered-4, Ingram-3)
nsubj(receive-6, Ingram-3)
root(ROOT-0, offered-4)
aux(receive-6, to-5)
xcomp(offered-4, receive-6)
dobj(receive-6, him-7)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (VBD did)
      (NP (PRP he))
      (ADVP (RB not))
      (VP (VB take)
        (NP (PRP him))
        (ADVP (RB then))))
    (. ?) ('' '')))

advmod(take-6, Why-2)
aux(take-6, did-3)
nsubj(take-6, he-4)
advmod(take-6, not-5)
root(ROOT-0, take-6)
dobj(take-6, him-7)
advmod(take-6, then-8)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN doctor))
    (VP (MD would) (RB n't)
      (VP (VB hear)
        (PP (IN of)
          (NP (PRP it)))))
    (. .)))

det(doctor-3, The-2)
nsubj(hear-6, doctor-3)
aux(hear-6, would-4)
neg(hear-6, n't-5)
root(ROOT-0, hear-6)
prep_of(hear-6, it-8)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (MD would) (RB n't)
      (VP (VB hear)
        (PP (IN of)
          (NP (PRP it)))
        (ADVP (RB either))))
    (. .) ('' '')))

cc(hear-5, And-1)
nsubj(hear-5, I-2)
aux(hear-5, would-3)
neg(hear-5, n't-4)
root(ROOT-0, hear-5)
prep_of(hear-5, it-7)
advmod(hear-5, either-8)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBD was)
      (VP (VBN ill-considered) (, ,)
        (ADVP (RB Lexy))))
    (. .)))

nsubjpass(ill-considered-4, It-2)
auxpass(ill-considered-4, was-3)
root(ROOT-0, ill-considered-4)
advmod(ill-considered-4, Lexy-6)

(ROOT
  (S
    (S (CC But)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ 's)
            (VP (VBN done)))))
      (VP (VBZ is)
        (VP (VBN done) (: --)
          (ADVP (RB though)))))
    (, ,)
    (FRAG
      (INTJ (UH alas)))
    (. !)))

cc(done-6, But-1)
nsubjpass(done-4, what-2)
auxpass(done-4, 's-3)
csubjpass(done-6, done-4)
auxpass(done-6, is-5)
root(ROOT-0, done-6)
advmod(done-6, though-8)
dep(done-6, alas-10)

(ROOT
  (FRAG
    (S
      (VP (RB not) (VBN paid)
        (PP (IN for))))
    (. .) ('' '')))

neg(paid-2, not-1)
root(ROOT-0, paid-2)
prep(paid-2, for-3)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD must)
      (VP (VB take)
        (NP
          (NP (DT the) (NN luck))
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP (VBZ comes)))))
        (, ,)
        (NP (NN father))))
    (. !) ('' '')))

nsubj(take-4, We-2)
aux(take-4, must-3)
root(ROOT-0, take-4)
det(luck-6, the-5)
dobj(take-4, luck-6)
mark(comes-9, as-7)
nsubj(comes-9, it-8)
rcmod(luck-6, comes-9)
dobj(take-4, father-11)

(ROOT
  (S (`` ``)
    (NP (NNP Alexa))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD rejoined))
        (NP
          (NP (DT the) (NN laird))
          (PP (IN with)
            (NP (NN solemnity)))))
      (, ,))
    (`` ``)
    (NP (PRP you))
    (VP (MD ought)
      (S
        (ADVP (RB never))
        (VP (TO to)
          (VP (VB mention)
            (NP (NN luck))))))
    (. .)))

nsubj(ought-13, Alexa-2)
nsubj(mention-16, Alexa-2)
parataxis(ought-13, rejoined-5)
det(laird-7, the-6)
nsubj(rejoined-5, laird-7)
prep_with(laird-7, solemnity-9)
nsubj(ought-13, you-12)
nsubj(mention-16, you-12)
root(ROOT-0, ought-13)
neg(mention-16, never-14)
aux(mention-16, to-15)
xcomp(ought-13, mention-16)
dobj(mention-16, luck-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (JJ such) (NN thing)))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(thing-5, no-3)
amod(thing-5, such-4)
nsubj(is-2, thing-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (UCP
        (PP
          (ADVP (RB either))
          (IN for)
          (NP
            (NP (DT the) (JJ young) (NN man) (POS 's))
            (NNS sins)))
        (, ,)
        (CC or)
        (S
          (VP (TO to)
            (VP (VB prevent)
              (UCP
                (ADJP (JJR worse))
                (, ,)
                (CC or)
                (PP (IN for)
                  (NP (JJ necessary) (NN discipline))))))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN train))
          (VP (VBD was)
            (VP (VBN overturned))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(for-4, either-3)
dep(was-2, for-4)
det(man-7, the-5)
amod(man-7, young-6)
poss(sins-9, man-7)
pobj(for-4, sins-9)
aux(prevent-13, to-12)
dep(was-2, prevent-13)
conj_or(for-4, prevent-13)
acomp(prevent-13, worse-14)
acomp(prevent-13, for-17)
conj_or(worse-14, for-17)
amod(discipline-19, necessary-18)
pobj(for-17, discipline-19)
mark(overturned-25, that-21)
det(train-23, the-22)
nsubjpass(overturned-25, train-23)
auxpass(overturned-25, was-24)
ccomp(was-2, overturned-25)

(ROOT
  (S
    (NP (DT The) (NN cause))
    (VP (VBZ is)
      (VP (VBN known)
        (S
          (VP (TO to)
            (VP (VB _)
              (S
                (NP (PRP Him))
                (ADJP (JJ _))))))))
    (. .)))

det(cause-2, The-1)
nsubjpass(known-4, cause-2)
nsubj(_-6, cause-2)
auxpass(known-4, is-3)
root(ROOT-0, known-4)
aux(_-6, to-5)
xcomp(known-4, _-6)
nsubj(_-8, Him-7)
xcomp(_-6, _-8)

(ROOT
  (S
    (S
      (NP (DT All))
      (VP (VBP are)
        (PP (IN in)
          (NP (PRP$ His) (NNS hands)))))
    (: --)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD must)
        (VP (VB beware)
          (PP (IN of)
            (S
              (VP (VBG attempting)
                (S
                  (VP (TO to)
                    (VP (VB take)
                      (NP
                        (NP (DT any) (NN out))
                        (PP (IN of)
                          (NP (PRP$ His) (NNS hands))))
                      (, ,)
                      (SBAR (IN for)
                        (S
                          (NP (PRP it))
                          (VP (MD can) (RB not)
                            (VP (VB be)
                              (VP (VBN done)))))))))))))))
    (. .) ('' '')))

nsubj(are-2, All-1)
root(ROOT-0, are-2)
poss(hands-5, His-4)
prep_in(are-2, hands-5)
nsubj(beware-10, we-8)
aux(beware-10, must-9)
conj_and(are-2, beware-10)
prepc_of(beware-10, attempting-12)
aux(take-14, to-13)
xcomp(attempting-12, take-14)
det(out-16, any-15)
dobj(take-14, out-16)
poss(hands-19, His-18)
prep_of(out-16, hands-19)
mark(done-26, for-21)
nsubjpass(done-26, it-22)
aux(done-26, can-23)
neg(done-26, not-24)
auxpass(done-26, be-25)
advcl(take-14, done-26)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (, ,)
    (NP (NN father))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (EX there))
        (VP (VB be)
          (NP (DT no) (NN chance)))))
    (, ,)
    (NP (PRP$ our) (NN part))
    (VP (VBD was)
      (VP (VBN ordered)
        (ADVP (RB too))))
    (. .)))

advmod(ordered-15, Then-2)
nsubjpass(ordered-15, father-4)
mark(be-8, if-6)
expl(be-8, there-7)
advcl(ordered-15, be-8)
neg(chance-10, no-9)
nsubj(be-8, chance-10)
poss(part-13, our-12)
nsubjpass(ordered-15, part-13)
auxpass(ordered-15, was-14)
root(ROOT-0, ordered-15)
advmod(ordered-15, too-16)

(ROOT
  (S
    (S (IN So)
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ young) (NN man))
          (PP (IN in)
            (NP (PRP$ our) (JJ spare) (NN room))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD must)
        (VP (VB receive)
          (NP
            (NP (PRP$ our) (NN share))
            (PP (IN of)
              (NP (DT the) (NN trouble))))
          (PP (IN as) (IN from)
            (NP
              (NP (DT the) (NN hand))
              (PP (IN of)
                (NP (DT the) (NNP Lord))))))))
    (. .) ('' '')))

dep(is-3, So-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
det(man-6, the-4)
amod(man-6, young-5)
nsubj(is-3, man-6)
poss(room-10, our-8)
amod(room-10, spare-9)
prep_in(man-6, room-10)
nsubj(receive-15, we-13)
aux(receive-15, must-14)
conj_and(is-3, receive-15)
poss(share-17, our-16)
dobj(receive-15, share-17)
det(trouble-20, the-19)
prep_of(share-17, trouble-20)
det(hand-24, the-23)
prep_as_from(receive-15, hand-24)
det(Lord-27, the-26)
prep_of(hand-24, Lord-27)

(ROOT
  (S (`` ``)
    (ADVP (RB Certainly))
    (, ,)
    (NP (PRP$ my))
    (VP (VBZ dear))
    (. !)))

advmod(dear-5, Certainly-2)
nsubj(dear-5, my-4)
root(ROOT-0, dear-5)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN expense))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBG thinking)
                (PP (IN of))))))))
    (. .)))

nsubj(expense-4, it-1)
cop(expense-4, was-2)
det(expense-4, the-3)
root(ROOT-0, expense-4)
prep_of(thinking-7, expense-4)
nsubj(thinking-7, I-5)
aux(thinking-7, was-6)
rcmod(expense-4, thinking-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD was)
        (ADVP (RB only))
        (VP (VBG lamenting))))
    (: --)
    (S
      (S
        (VP (VB bear)
          (S
            (NP (PRP me))
            (NP (NN witness)))))
      (, ,)
      (NP (PRP I))
      (VP (VBD was) (RB not)
        (NP
          (NP (VBG opposing))
          (: --)
          (NP
            (NP (DT the) (NN will))
            (PP (IN of)
              (NP (DT the) (NNP Lord)))))))
    (. .)))

nsubj(lamenting-4, I-1)
aux(lamenting-4, was-2)
advmod(lamenting-4, only-3)
root(ROOT-0, lamenting-4)
ccomp(opposing-13, bear-6)
nsubj(witness-8, me-7)
xcomp(bear-6, witness-8)
nsubj(opposing-13, I-10)
cop(opposing-13, was-11)
neg(opposing-13, not-12)
parataxis(lamenting-4, opposing-13)
det(will-16, the-15)
dep(opposing-13, will-16)
det(Lord-19, the-18)
prep_of(will-16, Lord-19)

(ROOT
  (S
    (NP
      (NP (DT A) (NN man) (POS 's))
      (JJ natural) (NNS feelings))
    (VP (VBP remain))
    (. .) ('' '')))

det(man-2, A-1)
poss(feelings-5, man-2)
amod(feelings-5, natural-4)
nsubj(remain-6, feelings-5)
root(ROOT-0, remain-6)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (DT the) (NN thing))
        (VP (VBZ is) (RB not)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN helped))))))))
    (, ,)
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP us))
          (VP (VBP think)
            (ADVP (DT no) (RBR more))
            (PP (IN about)
              (NP (PRP it)))))))
    (. !) ('' '')))

mark(is-5, If-2)
det(thing-4, the-3)
nsubj(is-5, thing-4)
nsubjpass(helped-9, thing-4)
advcl(let-11, is-5)
neg(is-5, not-6)
aux(helped-9, to-7)
auxpass(helped-9, be-8)
xcomp(is-5, helped-9)
root(ROOT-0, let-11)
nsubj(think-13, us-12)
ccomp(let-11, think-13)
neg(more-15, no-14)
advmod(think-13, more-15)
prep_about(think-13, it-17)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN expense))
        (, ,)
        (NP (PRP$ my) (NN dear))))
    (. !)))

nsubj(expense-5, It-2)
cop(expense-5, is-3)
det(expense-5, the-4)
root(ROOT-0, expense-5)
poss(dear-8, my-7)
appos(expense-5, dear-8)

(ROOT
  (SQ (MD Will)
    (NP (PRP you))
    (VP (RB not) (VB let)
      (NP (PRP$ your) (NN mind) (NN rest))
      (PP (IN for)
        (NP
          (NP (DT a) (NN moment))
          (PP (IN upon)
            (NP (DT the) (NN fact))))))
    (. ?)))

aux(let-4, Will-1)
nsubj(let-4, you-2)
neg(let-4, not-3)
root(ROOT-0, let-4)
poss(rest-7, your-5)
nn(rest-7, mind-6)
dobj(let-4, rest-7)
det(moment-10, a-9)
prep_for(let-4, moment-10)
det(fact-13, the-12)
prep_upon(moment-10, fact-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG doing)
        (NP (PRP$ my) (NN utmost)
          (S
            (VP (TO to)
              (VP (VB impress)
                (NP (PRP it))
                (PP (IN upon)
                  (NP (PRP you)))))))))
    (. .)))

nsubj(doing-3, I-1)
aux(doing-3, am-2)
root(ROOT-0, doing-3)
poss(utmost-5, my-4)
dobj(doing-3, utmost-5)
aux(impress-7, to-6)
vmod(utmost-5, impress-7)
dobj(impress-7, it-8)
prep_upon(impress-7, you-10)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (JJ other) (NNS expenses)))
      (NP (EX there))
      (VP (VBZ is)
        (ADVP (RB always))
        (NP (NN something)
          (S
            (VP (TO to)
              (VP (VB show)))))))
    (: ;)
    (S
      (PP (IN for)
        (NP (DT this)))
      (NP (EX there))
      (VP (MD will)
        (VP (VB be)
          (NP
            (NP (NN nothing))
            (, ,)
            (ADVP (RB positively))
            (NP (NN nothing))))))
    (. !) ('' '')))

amod(expenses-3, other-2)
prep_for(is-5, expenses-3)
expl(is-5, there-4)
root(ROOT-0, is-5)
advmod(is-5, always-6)
nsubj(is-5, something-7)
aux(show-9, to-8)
vmod(something-7, show-9)
prep_for(nothing-16, this-12)
expl(nothing-16, there-13)
aux(nothing-16, will-14)
cop(nothing-16, be-15)
parataxis(is-5, nothing-16)
advmod(nothing-19, positively-18)
appos(nothing-16, nothing-19)

(ROOT
  (FRAG (`` ``)
    (NP (RB Not) (DT the) (JJ mended) (NN leg))
    (, ,)
    (NP (NN father))
    (. ?) ('' '')))

neg(leg-5, Not-2)
det(leg-5, the-3)
amod(leg-5, mended-4)
root(ROOT-0, leg-5)
dep(leg-5, father-7)

(ROOT
  (S (`` ``)
    (S
      (NP (DT The) (NN money))
      (VP (MD will)
        (VP (VB vanish))))
    (, ,)
    (NP (PRP I))
    (VP (VBP tell)
      (NP (PRP you))
      (, ,)
      (PP (IN as)
        (NP
          (NP (DT a) (NN tale))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (VP (VBN told))))))))
    (. .) ('' '')))

det(money-3, The-2)
nsubj(vanish-5, money-3)
aux(vanish-5, will-4)
ccomp(tell-8, vanish-5)
nsubj(tell-8, I-7)
root(ROOT-0, tell-8)
dobj(tell-8, you-9)
det(tale-13, a-12)
prep_as(tell-8, tale-13)
nsubjpass(told-16, tale-13)
auxpass(told-16, is-15)
rcmod(tale-13, told-16)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (PRP$ our) (NN life))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ vanishes)
              (NP (DT that) (NN way)))))))
    (. !) ('' '')))

nsubj(life-5, It-2)
cop(life-5, is-3)
poss(life-5, our-4)
root(ROOT-0, life-5)
nsubj(vanishes-7, life-5)
rcmod(life-5, vanishes-7)
det(way-9, that-8)
dobj(vanishes-7, way-9)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN simile))
    (VP (VBZ suits)
      (ADVP (RB either)))
    (. .)))

det(simile-3, The-2)
nsubj(suits-4, simile-3)
root(ROOT-0, suits-4)
advmod(suits-4, either-5)

(ROOT
  (S
    (ADVP (RB So) (RB long)
      (SBAR (IN as)
        (S
          (NP (PRP we))
          (VP (VBP do) (RB not)
            (VP (VB use)
              (NP
                (NP (DT the) (NNS words))
                (PP (IN of)
                  (NP (NNP Scripture))))
              (ADVP (RB irreverently)))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN harm))
        (PP (IN in)
          (S
            (VP (VBG making)
              (NP
                (NP (DT a) (JJ different) (NN application))
                (PP (IN of)
                  (NP (PRP them)))))))))
    (. .)))

advmod(long-2, So-1)
advmod(is-15, long-2)
mark(use-7, as-3)
nsubj(use-7, we-4)
aux(use-7, do-5)
neg(use-7, not-6)
ccomp(long-2, use-7)
det(words-9, the-8)
dobj(use-7, words-9)
prep_of(words-9, Scripture-11)
advmod(use-7, irreverently-12)
expl(is-15, there-14)
root(ROOT-0, is-15)
neg(harm-17, no-16)
nsubj(is-15, harm-17)
prepc_in(harm-17, making-19)
det(application-22, a-20)
amod(application-22, different-21)
dobj(making-19, application-22)
prep_of(application-22, them-24)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP (DT no) (NN irreverence))
        (ADVP (RB here))))
    (: :)
    (S
      (PP (RB next) (TO to)
        (NP
          (NP (DT the) (NN grace))
          (PP (IN of)
            (NP (NNP God)))))
      (, ,)
      (NP (NN money))
      (VP (VBZ is)
        (NP (DT the) (NN thing)
          (S
            (VP
              (VP
                (ADVP (RBS hardest))
                (TO to)
                (VP (VB get)))
              (CC and)
              (ADVP (RBS hardest))
              (VP (TO to)
                (VP (VB keep))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(irreverence-4, no-3)
nsubj(is-2, irreverence-4)
advmod(is-2, here-5)
det(grace-10, the-9)
prep_next_to(thing-17, grace-10)
prep_of(grace-10, God-12)
nsubj(thing-17, money-14)
cop(thing-17, is-15)
det(thing-17, the-16)
parataxis(is-2, thing-17)
advmod(get-20, hardest-18)
aux(get-20, to-19)
dep(thing-17, get-20)
dep(thing-17, hardest-22)
advmod(get-20, hardest-22)
conj_and(get-20, hardest-22)
aux(keep-24, to-23)
dep(thing-17, keep-24)
conj_and(get-20, keep-24)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP are) (RB not)
          (ADJP (JJ wise)
            (PP (IN with)
              (NP (PRP it)))))))
    (, ,)
    (NP
      (NP (DT the) (NN grace))
      (PRN (: --)
        (S
          (NP (PRP I))
          (VP (VBP mean)
            (NP (NN money))))
        (: --)))
    (VP (MD will) (RB not)
      (VP (VB go)
        (ADVP (RB far))))
    (. .) ('' '')))

mark(wise-5, If-1)
nsubj(wise-5, we-2)
cop(wise-5, are-3)
neg(wise-5, not-4)
advcl(go-18, wise-5)
prep_with(wise-5, it-7)
det(grace-10, the-9)
nsubj(go-18, grace-10)
nsubj(mean-13, I-12)
dep(grace-10, mean-13)
dobj(mean-13, money-14)
aux(go-18, will-16)
neg(go-18, not-17)
root(ROOT-0, go-18)
advmod(go-18, far-19)

(ROOT
  (FRAG
    (ADVP (`` ``) (RB Not)
      (ADVP
        (ADVP (RB so) (RB far))
        (PP (IN as)
          (NP (DT the) (JJ next) (NN world)))))
    (, ,)
    (NP (NN anyhow))
    (. !) ('' '')))

dep(far-4, Not-2)
advmod(far-4, so-3)
dep(anyhow-10, far-4)
det(world-8, the-6)
amod(world-8, next-7)
prep_as(far-4, world-8)
root(ROOT-0, anyhow-10)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Alexa))
      (, ,)
      (SBAR (RB as) (IN if)
        (S
          (VP (TO to)
            (NP (PRP herself))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Alexa-2)
nsubj(to-6, Alexa-2)
advmod(to-6, as-4)
mark(to-6, if-5)
advcl(said-1, to-6)
xcomp(said-1, to-6)
dobj(to-6, herself-7)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB How))
      (S
        (VP (VBP dare)
          (NP (PRP you)))))
    (, ,)
    (VP (VBZ child))
    (. !)))

advmod(dare-3, How-2)
dep(child-6, dare-3)
dobj(dare-3, you-4)
root(ROOT-0, child-6)

(ROOT
  (S
    (NP (DT The) (NNP Redeemer))
    (VP (VBZ tells)
      (S
        (NP (PRP us))
        (VP (TO to)
          (VP (VB make)
            (NP
              (NP (NNS friends))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN mammon))
                  (PP (IN of)
                    (NP (NNS unrighteousness))))))
            (, ,)
            (SBAR (IN that)
              (WHADVP (WRB when))
              (S
                (NP (PRP we))
                (VP (VBP die)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (MD may)
                        (VP (VB receive)
                          (NP (PRP us))
                          (PP (IN into)
                            (NP (JJ everlasting) (NNS habitations))))))))))))))
    (. !) ('' '')))

det(Redeemer-2, The-1)
nsubj(tells-3, Redeemer-2)
root(ROOT-0, tells-3)
dobj(tells-3, us-4)
nsubj(make-6, us-4)
aux(make-6, to-5)
xcomp(tells-3, make-6)
dobj(make-6, friends-7)
det(mammon-10, the-9)
prep_of(friends-7, mammon-10)
prep_of(mammon-10, unrighteousness-12)
mark(die-17, that-14)
advmod(die-17, when-15)
nsubj(die-17, we-16)
ccomp(make-6, die-17)
nsubj(receive-20, it-18)
aux(receive-20, may-19)
ccomp(die-17, receive-20)
dobj(receive-20, us-21)
amod(habitations-24, everlasting-23)
prep_into(receive-20, habitations-24)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP
        (VP (VB read)
          (NP (DT the) (NN passage))
          (NP (DT this) (NN morning))
          (, ,)
          (NP
            (NP (NN father))
            (: :)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (VP (VBG _)
                  (S
                    (NP (PRP they))
                    (ADJP (JJ _))))))))
        (, ,) (RB not)
        (VP (VB _)
          (S
            (NP (PRP it))
            (ADJP (JJ _))))))
    (, ,)
    (VP (MD will)
      (VP (VB receive)
        (NP (PRP you))))
    (. .)))

nsubj(read-3, I-2)
ccomp(receive-23, read-3)
det(passage-5, the-4)
dobj(read-3, passage-5)
det(morning-7, this-6)
tmod(read-3, morning-7)
dobj(read-3, father-9)
nsubj(_-13, it-11)
aux(_-13, is-12)
dep(father-9, _-13)
nsubj(_-15, they-14)
xcomp(_-13, _-15)
neg(_-18, not-17)
dep(read-3, _-18)
nsubj(_-20, it-19)
xcomp(_-18, _-20)
aux(receive-23, will-22)
root(ROOT-0, receive-23)
dobj(receive-23, you-24)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN heard)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB be)
                      (VP (VBN translated)))
                    (, ,) (`` `)
                    (VP (VB make)
                      (NP (NNS friends) (NNS _))
                      (PP (IN with)
                        (NP (NNP _))))
                    (, ,)
                    (CC or)
                    (VP (VB _)
                      (PP (IN by)
                        (NP
                          (NP (NNS means))
                          (PP (IN of)
                            (S
                              (VP (VBG _)
                                (NP
                                  (NP (DT the) (NN mammon))
                                  (PP (IN of)
                                    (NP (NNS unrighteousness))))))))))))))))))
    (. .) ('' '')))

cc(heard-4, And-1)
nsubj(heard-4, I-2)
aux(heard-4, have-3)
root(ROOT-0, heard-4)
mark(ought-7, that-5)
nsubj(ought-7, it-6)
nsubjpass(translated-10, it-6)
nsubj(make-13, it-6)
nsubj(_-20, it-6)
ccomp(heard-4, ought-7)
aux(translated-10, to-8)
auxpass(translated-10, be-9)
xcomp(ought-7, translated-10)
xcomp(ought-7, make-13)
conj_or(translated-10, make-13)
nn(_-15, friends-14)
dobj(make-13, _-15)
prep_with(make-13, _-17)
xcomp(ought-7, _-20)
conj_or(translated-10, _-20)
prepc_by_means_of(_-20, _-24)
det(mammon-26, the-25)
dobj(_-24, mammon-26)
prep_of(mammon-26, unrighteousness-28)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB reconsider)
        (NP (DT the) (NN passage))))
    (. .)))

nsubj(reconsider-4, I-2)
aux(reconsider-4, will-3)
root(ROOT-0, reconsider-4)
det(passage-6, the-5)
dobj(reconsider-4, passage-6)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must) (RB not)
      (ADVP (RB lightly))
      (VP (VB change)
        (NP (RB even) (DT the) (JJ translated) (NN word))))
    (. !) ('' '')))

nsubj(change-5, We-1)
aux(change-5, must-2)
neg(change-5, not-3)
advmod(change-5, lightly-4)
root(ROOT-0, change-5)
advmod(word-9, even-6)
det(word-9, the-7)
amod(word-9, translated-8)
dobj(change-5, word-9)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP (VBD had)
      (ADVP (RB never))
      (VP (VBN thought)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD might)
              (VP (VB be)
                (PP (IN of)
                  (NP
                    (NP (NN consequence))
                    (PP (TO to)
                      (NP (PRP him)))
                    (NP (CD one) (NN day))))
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (NP
                        (NP (NNS friends))
                        (PP (IN in)
                          (NP (DT the) (JJ other) (NN world)))))))))))))
    (. .)))

det(laird-2, The-1)
nsubj(thought-5, laird-2)
aux(thought-5, had-3)
neg(thought-5, never-4)
root(ROOT-0, thought-5)
mark(be-9, that-6)
nsubj(be-9, it-7)
nsubj(have-17, it-7)
aux(be-9, might-8)
ccomp(thought-5, be-9)
prep_of(be-9, consequence-11)
prep_to(consequence-11, him-13)
num(day-15, one-14)
dep(consequence-11, day-15)
aux(have-17, to-16)
xcomp(be-9, have-17)
dobj(have-17, friends-18)
det(world-22, the-20)
amod(world-22, other-21)
prep_in(friends-18, world-22)

(ROOT
  (S
    (NP (DT Neither))
    (VP (VBD had)
      (S
        (NP (PRP he))
        (VP (VBD reflected)
          (SBAR (IN that)
            (S
              (NP (DT the) (NNP Lord))
              (VP (VBD did) (RB not)
                (VP (NN regard)
                  (NP
                    (NP (DT the) (NN obligation))
                    (PP (IN of)
                      (NP (NN gratitude))))
                  (PP (IN as)
                    (S
                      (VP (VBG ceasing)
                        (PP (IN with)
                          (NP (DT this) (NN life)))))))))))))
    (. .)))

nsubj(had-2, Neither-1)
root(ROOT-0, had-2)
nsubj(reflected-4, he-3)
ccomp(had-2, reflected-4)
mark(regard-10, that-5)
det(Lord-7, the-6)
nsubj(regard-10, Lord-7)
aux(regard-10, did-8)
neg(regard-10, not-9)
ccomp(reflected-4, regard-10)
det(obligation-12, the-11)
dobj(regard-10, obligation-12)
prep_of(obligation-12, gratitude-14)
prepc_as(regard-10, ceasing-16)
det(life-19, this-18)
prep_with(ceasing-16, life-19)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD had)
        (NP (NN reason)
          (S
            (VP (TO to)
              (VP (VB fear)
                (SBAR (IN that)
                  (S
                    (NP (PRP$ her) (NN father))
                    (VP (VBD made)
                      (NP
                        (NP (DT a) (NN friend) (NN _))
                        (PP (IN of)
                          (NP (NNP _)))))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB never))
      (NP (DT a) (NN friend))
      (VP (VBZ _)
        (PP (IN with)
          (S
            (VP (VBG _)
              (NP
                (NP (DT the) (NN mammon))
                (PP (IN of)
                  (NP (NNS unrighteousness)))))))))
    (. .)))

nsubj(had-2, Alexa-1)
root(ROOT-0, had-2)
dobj(had-2, reason-3)
aux(fear-5, to-4)
vmod(reason-3, fear-5)
mark(made-9, that-6)
poss(father-8, her-7)
nsubj(made-9, father-8)
ccomp(fear-5, made-9)
det(_-12, a-10)
nn(_-12, friend-11)
dobj(made-9, _-12)
prep_of(_-12, _-14)
neg(_-20, never-17)
det(friend-19, a-18)
nsubj(_-20, friend-19)
conj_and(had-2, _-20)
prepc_with(_-20, _-22)
det(mammon-24, the-23)
dobj(_-22, mammon-24)
prep_of(mammon-24, unrighteousness-26)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (DT the) (JJ same) (NN time)))
      (NP
        (NP (DT the) (NN half-penny))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD put)
              (PP (IN in)
                (NP (DT the) (NN plate)))
              (NP (DT every) (NNP Sunday))))))
      (VP (MD must)
        (VP (VB go)
          (NP (DT a) (JJ long) (NN way))
          (SBAR (IN if)
            (S
              (NP (PRP it))
              (VP (VBD was) (RB not)
                (VP (VBN estimated) (, ,)
                  (PP (IN like)
                    (NP
                      (NP (DT that))
                      (PP (IN of)
                        (NP (DT the) (JJ poor) (NN widow)))))
                  (, ,)
                  (PP (VBG according)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN amount))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD possessed))))))))))))))
    (, ,)
    (CC but)
    (S
      (PP (VBG according)
        (PP (TO to)
          (NP (DT the) (NN difficulty))))
      (NP (PRP he))
      (VP (VBD found)
        (PP (IN in)
          (NP (NN parting)))
        (PP (IN with)
          (NP (PRP it)))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(go-15, time-4)
det(half-penny-6, the-5)
nsubj(go-15, half-penny-6)
nsubj(put-8, he-7)
rcmod(half-penny-6, put-8)
det(plate-11, the-10)
prep_in(put-8, plate-11)
det(Sunday-13, every-12)
tmod(put-8, Sunday-13)
aux(go-15, must-14)
root(ROOT-0, go-15)
det(way-18, a-16)
amod(way-18, long-17)
dobj(go-15, way-18)
mark(estimated-23, if-19)
nsubjpass(estimated-23, it-20)
auxpass(estimated-23, was-21)
neg(estimated-23, not-22)
advcl(go-15, estimated-23)
prep_like(estimated-23, that-26)
det(widow-30, the-28)
amod(widow-30, poor-29)
prep_of(that-26, widow-30)
prep(estimated-23, according-32)
pcomp(according-32, to-33)
det(amount-35, the-34)
pobj(to-33, amount-35)
nsubj(possessed-37, he-36)
rcmod(amount-35, possessed-37)
prepc_according_to(found-45, to-41)
det(difficulty-43, the-42)
pobj(found-45, difficulty-43)
nsubj(found-45, he-44)
conj_but(go-15, found-45)
prep_in(found-45, parting-47)
prep_with(found-45, it-49)

(ROOT
  (SINV (`` ``)
    (S
      (PP (IN After)
        (NP (NNS weeks)))
      (, ,)
      (NP
        (NP (RB perhaps) (NNS months))
        (PP (IN of)
          (NP (NN nursing)
            (CC and)
            (NN food)
            (CC and)
            (NN doctor))))
      (VP (VBZ 's)
        (NP (NN stuff))))
    (, ,) ('' '')
    (VP (VBD resumed))
    (NP
      (NP (DT the) (NN laird))
      (, ,) (`` ``)
      (S
        (S
          (NP (PRP he))
          (VP (MD will)
            (VP (VB walk)
              (PRT (RP away)))))
        (, ,)
        (CC and)
        (S
          (NP (PRP we))
          (VP (MD shall)
            (VP (VB see)
              (NP
                (NP (RB not) (DT a) (NN plack))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN money))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBZ carries)
                          (PP (IN with)
                            (NP (PRP him))))))))))))))
    (. .)))

prep_after(stuff-14, weeks-3)
advmod(months-6, perhaps-5)
nsubj(stuff-14, months-6)
prep_of(months-6, nursing-8)
prep_of(months-6, food-10)
conj_and(nursing-8, food-10)
prep_of(months-6, doctor-12)
conj_and(nursing-8, doctor-12)
cop(stuff-14, 's-13)
ccomp(resumed-17, stuff-14)
root(ROOT-0, resumed-17)
det(laird-19, the-18)
nsubj(resumed-17, laird-19)
nsubj(walk-24, he-22)
aux(walk-24, will-23)
dep(laird-19, walk-24)
prt(walk-24, away-25)
nsubj(see-30, we-28)
aux(see-30, shall-29)
dep(laird-19, see-30)
conj_and(walk-24, see-30)
neg(plack-33, not-31)
det(plack-33, a-32)
dobj(see-30, plack-33)
det(money-36, the-35)
prep_of(plack-33, money-36)
nsubj(carries-38, he-37)
rcmod(money-36, carries-38)
prep_with(carries-38, him-40)

(ROOT
  (S
    (NP (DT The) (JJ visible))
    (VP (MD will)
      (VP (VB become)
        (NP
          (NP (DT the) (JJ invisible))
          (, ,)
          (NP
            (NP (DT the) (NN present))
            (NP (DT the) (NN absent))))))
    (. !) ('' '')))

det(visible-2, The-1)
nsubj(become-4, visible-2)
aux(become-4, will-3)
root(ROOT-0, become-4)
det(invisible-6, the-5)
xcomp(become-4, invisible-6)
det(present-9, the-8)
appos(invisible-6, present-9)
det(absent-11, the-10)
dep(present-9, absent-11)

(ROOT
  (S (`` ``)
    (S
      (X (DT The)
        (ADJP (JJ little)))
      (NP (PRP it))
      (VP (MD will)
        (VP (VB cost)
          (NP (PRP you))
          (, ,)
          (NP (NN father)))))
    (: --) ('' '')
    (PRN
      (S
        (VP (`` ``) (VB Hold)
          (ADVP (RB there)))))
    (, ,)
    (S
      (NP (PRP$ my) (NN child)))
    (. !)))

det(little-3, The-2)
dep(cost-6, little-3)
nsubj(cost-6, it-4)
aux(cost-6, will-5)
root(ROOT-0, cost-6)
dobj(cost-6, you-7)
dobj(cost-6, father-9)
dep(cost-6, Hold-13)
advmod(Hold-13, there-14)
poss(child-17, my-16)
parataxis(cost-6, child-17)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP call)
            (NP (DT any) (NN cost))
            (ADVP (RB little)))))
      (, ,)
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB hear)
          (NP (DT a) (NN word))
          (ADVP (RBR more)))))
    (: :)
    (S
      (NP (PRP we))
      (VP (MD should)
        (VP (VB be)
          (VP
            (ADVP (CC but))
            (VBG running)
            (NP (DT a) (NN race))
            (PP (IN from)
              (NP
                (NP (JJ different) (NNS points))
                (PP (TO to)
                  (NP (JJ different) (NNS goals)))))))))
    (. !)))

mark(call-3, If-1)
nsubj(call-3, you-2)
advcl(hear-11, call-3)
det(cost-5, any-4)
dobj(call-3, cost-5)
advmod(call-3, little-6)
nsubj(hear-11, I-8)
aux(hear-11, will-9)
neg(hear-11, not-10)
root(ROOT-0, hear-11)
det(word-13, a-12)
dobj(hear-11, word-13)
advmod(hear-11, more-14)
nsubj(running-20, we-16)
aux(running-20, should-17)
aux(running-20, be-18)
advmod(running-20, but-19)
parataxis(hear-11, running-20)
det(race-22, a-21)
dobj(running-20, race-22)
amod(points-25, different-24)
prep_from(running-20, points-25)
amod(goals-28, different-27)
prep_to(points-25, goals-28)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD will)
        (VP (VB cost))))
    (: --)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (ADJP (JJ enough))))
    (. !)))

nsubj(cost-3, It-1)
aux(cost-3, will-2)
root(ROOT-0, cost-3)
nsubj(enough-7, that-5)
cop(enough-7, is-6)
parataxis(cost-3, enough-7)

(ROOT
  (S
    (SBAR
      (WHADJP (WRB How) (JJ much))
      (S
        (NP (PRP it))
        (VP (MD will)
          (VP (VB cost)
            (S
              (VP (VBG _)
                (S
                  (NP (PRP me))
                  (ADJP (JJ _)))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD can) (RB not)
      (VP (VB calculate) (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP you))
            (VP (VBP do) (RB not)
              (VP (VB know)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (NN money))
                    (VP (VBZ stands)
                      (PP (IN for)
                        (PP (IN in)
                          (NP (PRP$ my) (NNS eyes)))))))))))))
    (. .)))

advmod(much-2, How-1)
dep(cost-5, much-2)
nsubj(cost-5, it-3)
aux(cost-5, will-4)
advcl(calculate-13, cost-5)
xcomp(cost-5, _-6)
nsubj(_-8, me-7)
xcomp(_-6, _-8)
nsubj(calculate-13, you-10)
aux(calculate-13, can-11)
neg(calculate-13, not-12)
root(ROOT-0, calculate-13)
mark(know-19, for-15)
nsubj(know-19, you-16)
aux(know-19, do-17)
neg(know-19, not-18)
advcl(calculate-13, know-19)
dobj(stands-22, what-20)
nsubj(stands-22, money-21)
ccomp(know-19, stands-22)
prep(stands-22, for-23)
pcomp(for-23, in-24)
poss(eyes-26, my-25)
pobj(in-24, eyes-26)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS things))
        (PP (IN before)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (NN money))
              (VP (VBZ is)
                (ADJP (JJ insignificant))))))))
    (. !) ('' '')))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, things-3)
dobj(insignificant-8, which-5)
nsubj(insignificant-8, money-6)
cop(insignificant-8, is-7)
prepc_before(things-3, insignificant-8)

(ROOT
  (S (`` ``)
    (NP (DT Those))
    (VP (VBZ dreary)
      (NP (JJ old) (NNS books)))
    (. !) ('' '')))

nsubj(dreary-3, Those-2)
root(ROOT-0, dreary-3)
amod(books-5, old-4)
dobj(dreary-3, books-5)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Alexa))
      (PP (TO to)
        (NP (PRP herself)))
      (, ,)
      (S
        (VP (VBG casting)
          (NP (DT a) (NN glance))
          (PP (IN on)
            (NP
              (NP (DT the) (NNS shelves))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD filled)
                    (NP (DT the) (NN room))
                    (PP (IN from)
                      (NP
                        (NP (NN floor))
                        (PP
                          (PP (TO to)
                            (NP (NN ceiling)))
                          (, ,)
                          (CC and)
                          (PP (IN from)
                            (NP (NN wall))))))
                    (PP (TO to)
                      (NP (NN wall)))))))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Alexa-2)
prep_to(said-1, herself-4)
vmod(said-1, casting-6)
det(glance-8, a-7)
dobj(casting-6, glance-8)
det(shelves-11, the-10)
prep_on(casting-6, shelves-11)
nsubj(filled-13, shelves-11)
rcmod(shelves-11, filled-13)
det(room-15, the-14)
dobj(filled-13, room-15)
prep_from(filled-13, floor-17)
prep_from(filled-13, floor-17')
conj_and(floor-17, floor-17')
prep_to(floor-17, ceiling-19)
prep_from(floor-17', wall-23)
prep_to(filled-13, wall-25)

(ROOT
  (S (`` ``)
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBD was)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB say))))))))
    (, ,)
    (S
      (NP (NN father))
      (PRN (, ,) ('' '')
        (S
          (NP (PRP she))
          (VP (VBD returned)))
        (, ,) (`` ``))
      (VP
        (VP (VBD was))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP have)
              (NP
                (NP (DT a) (JJ little) (NN money))
                (PP (IN of)
                  (NP (PRP$ my) (JJ own)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT this) (NN affair))
      (VP (MD shall)
        (VP (VB cost)
          (NP (PRP you))
          (NP (NN nothing)))))
    (. .)))

dobj(going-5, What-2)
nsubj(say-7, What-2)
nsubj(going-5, I-3)
aux(going-5, was-4)
dep(was-16, going-5)
aux(say-7, to-6)
xcomp(going-5, say-7)
nsubj(was-16, father-9)
nsubj(returned-13, she-12)
parataxis(was-16, returned-13)
root(ROOT-0, was-16)
mark(have-20, that-18)
nsubj(have-20, I-19)
ccomp(was-16, have-20)
det(money-23, a-21)
amod(money-23, little-22)
dobj(have-20, money-23)
poss(own-26, my-25)
prep_of(money-23, own-26)
det(affair-30, this-29)
nsubj(cost-32, affair-30)
aux(cost-32, shall-31)
conj_and(was-16, cost-32)
iobj(cost-32, you-33)
dobj(cost-32, nothing-34)

(ROOT
  (S
    (VP (VB Leave)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB contrive)))))
    (. .)))

root(ROOT-0, Leave-1)
dobj(Leave-1, me-2)
nsubj(contrive-4, me-2)
aux(contrive-4, to-3)
xcomp(Leave-1, contrive-4)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB tell)
      (NP (PRP him))
      (NP
        (NP (PRP$ his) (NNS friends))
        (SBAR
          (S
            (VP (MD must)
              (VP
                (VP (VB pay)
                  (NP (PRP$ his) (NN board)))
                (, ,)
                (CC or)
                (VP (VB take)
                  (NP (PRP him))
                  (ADVP (RB away)))))))))
    (. ?)))

aux(tell-3, Would-1)
nsubj(tell-3, you-2)
root(ROOT-0, tell-3)
iobj(tell-3, him-4)
poss(friends-6, his-5)
dobj(tell-3, friends-6)
aux(pay-8, must-7)
rcmod(friends-6, pay-8)
poss(board-10, his-9)
dobj(pay-8, board-10)
rcmod(friends-6, take-13)
conj_or(pay-8, take-13)
dobj(take-13, him-14)
advmod(take-13, away-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT a) (JJ nice) (NN anecdote))
          (PP (IN in)
            (NP
              (NP (DT the) (NN annals))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNPS Fordyces))
                  (PP (IN of)
                    (NP (NNP Potlurg))))))))))
    (. !) ('' '')))

nsubj(anecdote-6, It-1)
aux(anecdote-6, would-2)
cop(anecdote-6, be-3)
det(anecdote-6, a-4)
amod(anecdote-6, nice-5)
root(ROOT-0, anecdote-6)
det(annals-9, the-8)
prep_in(anecdote-6, annals-9)
det(Fordyces-12, the-11)
prep_of(annals-9, Fordyces-12)
prep_of(Fordyces-12, Potlurg-14)

(ROOT
  (X (`` ``)
    (X
      (ADVP (IN At))
      (NP (DT the) (JJ same) (NN time)))
    (, ,)
    (X
      (X (WP what))
      (NP (JJR more) (NN natural)))
    (. ?) ('' '')))

dep(time-5, At-2)
det(time-5, the-3)
amod(time-5, same-4)
dep(natural-9, time-5)
dep(natural-9, what-7)
amod(natural-9, more-8)
root(ROOT-0, natural-9)

(ROOT
  (S
    (VP (VBD rejoined)
      (NP (PRP$ her) (NN father)))
    (. .)))

root(ROOT-0, rejoined-1)
poss(father-3, her-2)
dobj(rejoined-1, father-3)

(ROOT
  (S (`` ``)
    (NP (PRP$ His) (NNS friends))
    (VP (MD must)
      (PP (IN in)
        (NP (DT any) (NN case)))
      (VP (VB be)
        (VP (VBN applied)
          (S
            (VP (TO to))))))
    (. !)))

poss(friends-3, His-2)
nsubjpass(applied-9, friends-3)
nsubj(to-10, friends-3)
aux(applied-9, must-4)
det(case-7, any-6)
prep_in(applied-9, case-7)
auxpass(applied-9, be-8)
root(ROOT-0, applied-9)
xcomp(applied-9, to-10)

(ROOT
  (NP
    (NP (PRP I))
    (NP
      (NP
        (NP (NNP learn))
        (PP (IN from)
          (NP (PRP$ his) (NN pocket-book))
          (: --))
        ('' ''))
      (NP (`` ``) (NNP Father) (. !) ('' '')))))

root(ROOT-0, I-1)
dep(I-1, learn-2)
poss(pocket-book-5, his-4)
prep_from(learn-2, pocket-book-5)
dep(learn-2, Father-9)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Content) (NNP yourself))
    (, ,)
    (NP (NNP Alexa))
    (. .)))

nn(yourself-3, Content-2)
root(ROOT-0, yourself-3)
dep(yourself-3, Alexa-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP (DT a) (NN right)
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR
                (WHNP (WP whom))
                (S
                  (NP (PRP I))
                  (VP (VBP receive)
                    (PP (IN under)
                      (NP (PRP$ my) (NN roof)))))))))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(right-4, a-3)
dobj(have-2, right-4)
aux(know-6, to-5)
vmod(right-4, know-6)
dobj(receive-9, whom-7)
nsubj(receive-9, I-8)
ccomp(know-6, receive-9)
poss(roof-12, my-11)
prep_under(receive-9, roof-12)

(ROOT
  (S
    (S
      (ADVP (IN Besides))
      (, ,)
      (VP (VBP have)))
    (S
      (NP (PRP I))
      (RB not)
      (VP (VBD learned)
        (ADVP (RB thereby))
        (SBAR (IN that)
          (S
            (NP (DT the) (NN youth))
            (VP (VBZ is)
              (NP
                (NP (DT a) (NN sort))
                (PP (IN of)
                  (NP (NN connection)))))))))
    (. !) ('' '')))

advmod(have-3, Besides-1)
root(ROOT-0, have-3)
nsubj(learned-6, I-4)
neg(learned-6, not-5)
parataxis(have-3, learned-6)
advmod(learned-6, thereby-7)
mark(sort-13, that-8)
det(youth-10, the-9)
nsubj(sort-13, youth-10)
cop(sort-13, is-11)
det(sort-13, a-12)
ccomp(learned-6, sort-13)
prep_of(sort-13, connection-15)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB mean)
        (NP
          (NP (PRP it))
          (, ,)
          (NP (NN father)))))
    (. ?) ('' '')))

nsubj(mean-5, You-2)
aux(mean-5, do-3)
neg(mean-5, n't-4)
root(ROOT-0, mean-5)
dobj(mean-5, it-6)
appos(it-6, father-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do)
      (VP (VB mean)
        (NP (PRP it))))
    (. .)))

nsubj(mean-4, I-2)
aux(mean-4, do-3)
root(ROOT-0, mean-4)
dobj(mean-4, it-5)

(ROOT
  (S
    (NP (PRP$ His) (NN mother)
      (CC and)
      (NN yours))
    (VP (VBD were)
      (NP (JJ first) (NNS cousins)))
    (. .) ('' '')))

poss(mother-2, His-1)
nsubj(cousins-7, mother-2)
conj_and(mother-2, yours-4)
nsubj(cousins-7, yours-4)
cop(cousins-7, were-5)
amod(cousins-7, first-6)
root(ROOT-0, cousins-7)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ is) (RB not)
        (NP (DT a) (NN connection))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT a) (JJ close) (NN kinship))))
    (. !) ('' '')))

nsubj(connection-6, That-2)
cop(connection-6, is-3)
neg(connection-6, not-4)
det(connection-6, a-5)
root(ROOT-0, connection-6)
nsubj(kinship-12, it-8)
cop(kinship-12, 's-9)
det(kinship-12, a-10)
amod(kinship-12, close-11)
parataxis(connection-6, kinship-12)

(ROOT
  (S (`` ``)
    (VP (VB Is)
      (NP (PRP it)))
    (. ?) ('' '')))

cop(it-3, Is-2)
root(ROOT-0, it-3)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN laird))
      (, ,)
      (ADVP (RB dryly)))
    (. .)))

root(ROOT-0, said-1)
det(laird-3, the-2)
dobj(said-1, laird-3)
advmod(said-1, dryly-5)

(ROOT
  (S (`` ``)
    (NP (NNP Anyhow))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD pursued))
        (NP (NNP Alexa)))
      (, ,))
    (`` ``)
    (NP (PRP I))
    (VP (VBP give)
      (NP (PRP you))
      (NP
        (NP (PRP$ my) (NN word))
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD shall)
              (VP (VB hear)
                (NP (NN nothing) (JJR more))
                (PP (IN of)
                  (NP (DT the) (NN expense)))))))))
    (. .) ('' '')))

nsubj(give-10, Anyhow-2)
parataxis(give-10, pursued-5)
nsubj(pursued-5, Alexa-6)
nsubj(give-10, I-9)
root(ROOT-0, give-10)
iobj(give-10, you-11)
poss(word-13, my-12)
dobj(give-10, word-13)
nsubj(hear-16, you-14)
aux(hear-16, shall-15)
rcmod(word-13, hear-16)
dep(more-18, nothing-17)
dobj(hear-16, more-18)
det(expense-21, the-20)
prep_of(hear-16, expense-21)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBP bade)
        (NP (PRP$ her) (NN father) (NN good-night))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG returning)
          (PP (TO to)
            (NP
              (NP (DT the) (NN bedside))
              (PP (IN of)
                (NP (PRP$ her) (NN patient)))))))
      (, ,)
      (S
        (VP (VBN released)
          (NP (NNP Meg)))))
    (. .)))

nsubj(bade-2, She-1)
nsubj(returning-8, She-1)
root(ROOT-0, bade-2)
poss(good-night-5, her-3)
nn(good-night-5, father-4)
dobj(bade-2, good-night-5)
conj_and(bade-2, returning-8)
det(bedside-11, the-10)
prep_to(returning-8, bedside-11)
poss(patient-14, her-13)
prep_of(bedside-11, patient-14)
parataxis(returning-8, released-16)
dobj(released-16, Meg-17)

(ROOT
  (NP (NNP CHAPTER) (NNP VI) (. .)))

nn(VI-2, CHAPTER-1)
root(ROOT-0, VI-2)

(ROOT
  (S
    (NP (NNP ABOUT) (NNP THE))
    (VP (VBD LAIRD))
    (. .)))

nn(THE-2, ABOUT-1)
nsubj(LAIRD-3, THE-2)
root(ROOT-0, LAIRD-3)

(ROOT
  (S
    (NP (NNP Thomas) (NNP Fordyce))
    (VP
      (VP (VBD was)
        (NP (DT a) (NN sucker))
        (PP (IN from)
          (NP
            (NP (DT the) (NN root))
            (PP (IN of)
              (NP
                (NP (DT a)
                  (ADJP (RB very) (JJ old))
                  (NN family) (NN tree))
                (, ,)
                (VP (VBN born)
                  (PP (IN in)
                    (NP (NN poverty))))
                (, ,))))))
      (CC and)
      (PRN (, ,)
        (PP (IN with)
          (NP
            (NP (JJ great) (NNS pinching))
            (PP (IN of)
              (NP (NN father)
                (CC and)
                (NN mother) (, ,) (NNS brothers)
                (CC and)
                (NNS sisters)))))
        (, ,))
      (VP (VBN educated)
        (PP (IN for)
          (NP (DT the) (NNP Church)))))
    (. .)))

nn(Fordyce-2, Thomas-1)
nsubj(sucker-5, Fordyce-2)
nsubj(educated-34, Fordyce-2)
cop(sucker-5, was-3)
det(sucker-5, a-4)
root(ROOT-0, sucker-5)
det(root-8, the-7)
prep_from(sucker-5, root-8)
det(tree-14, a-10)
advmod(old-12, very-11)
amod(tree-14, old-12)
nn(tree-14, family-13)
prep_of(root-8, tree-14)
vmod(tree-14, born-16)
prep_in(born-16, poverty-18)
dep(sucker-5, with-22)
amod(pinching-24, great-23)
pobj(with-22, pinching-24)
nn(brothers-30, father-26)
conj_and(father-26, mother-28)
nn(brothers-30, mother-28)
prep_of(pinching-24, brothers-30)
prep_of(pinching-24, sisters-32)
conj_and(brothers-30, sisters-32)
conj_and(sucker-5, educated-34)
det(Church-37, the-36)
prep_for(educated-34, Church-37)

(ROOT
  (S (CC But)
    (PP (IN from)
      (NP
        (NP
          (NP (NN pleasure))
          (PP (IN in)
            (NP (NN scholarship)))
          (, ,)
          (PP (IN from)
            (NP (JJ archaeological) (NNS tastes))))
        (, ,)
        (NP
          (NP (DT a) (NN passion))
          (PP (IN for)
            (NP
              (NP (DT the) (NN arcana))
              (PP (IN of)
                (NP (NN history))))))
        (, ,)
        (CC and)
        (NP
          (NP (DT a) (NN love))
          (PP (IN of)
            (NP (NN literature))))))
    (, ,)
    (S
      (ADJP (JJ strong))
      (, ,)
      (SBAR (IN although)
        (FRAG (RB not)
          (PP (IN of)
            (NP (DT the) (JJS highest) (NN kind)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN settled)
          (PRT (RP down))
          (PP (IN as)
            (NP (DT a) (NN school-master))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB in))
      (NP (PRP$ his) (NN calling))
      (VP (VBD had)
        (VP (VBN excelled))))
    (. .)))

prep_from(settled-36, pleasure-3)
prep_in(pleasure-3, scholarship-5)
amod(tastes-9, archaeological-8)
prep_from(pleasure-3, tastes-9)
det(passion-12, a-11)
conj_and(pleasure-3, passion-12)
prep_from(settled-36, passion-12)
det(arcana-15, the-14)
prep_for(passion-12, arcana-15)
prep_of(arcana-15, history-17)
det(love-21, a-20)
conj_and(pleasure-3, love-21)
prep_from(settled-36, love-21)
prep_of(love-21, literature-23)
dep(settled-36, strong-25)
mark(not-28, although-27)
advcl(settled-36, not-28)
det(kind-32, the-30)
amod(kind-32, highest-31)
prep_of(not-28, kind-32)
nsubj(settled-36, he-34)
aux(settled-36, had-35)
root(ROOT-0, settled-36)
prt(settled-36, down-37)
det(school-master-40, a-39)
prep_as(settled-36, school-master-40)
advmod(excelled-47, in-43)
poss(calling-45, his-44)
nsubj(excelled-47, calling-45)
aux(excelled-47, had-46)
conj_and(settled-36, excelled-47)

(ROOT
  (S
    (PP (IN By)
      (NP
        (NP (DT all))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD knew)
              (NP (PRP him)))))))
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBN regarded)
        (PP (IN as)
          (NP (DT an)
            (ADJP (JJS accomplished) (, ,)
              (ADJP (JJ amiable))
              (, ,)
              (CC and)
              (ADJP (JJ worthy)))
            (NN man)))))
    (. .)))

nsubj(knew-4, all-2)
agent(regarded-8, all-2)
rcmod(all-2, knew-4)
dobj(knew-4, him-5)
nsubjpass(regarded-8, he-6)
auxpass(regarded-8, was-7)
root(ROOT-0, regarded-8)
det(man-17, an-10)
dep(amiable-13, accomplished-11)
amod(man-17, amiable-13)
conj_and(amiable-13, worthy-16)
amod(man-17, worthy-16)
prep_as(regarded-8, man-17)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP$ his) (NNS years))
        (VP (VBD were)
          (VP (VBG verging)
            (PP (IN on)
              (NP
                (NP (DT the) (JJ undefined) (NN close))
                (PP (IN of)
                  (NP
                    (NP (JJ middle) (NN age))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBD saw)
                          (NP
                            (NP (DT the) (NNS lives))
                            (PP (IN between)
                              (NP
                                (NP (PRP him))
                                (CC and)
                                (NP (DT the) (NN family) (NN property))))))))))))))))
    (, ,)
    (NP
      (NP (CD one))
      (PP (IN by)
        (NP (CD one))))
    (VP (VBP wither)
      (PP (IN at)
        (NP
          (NP (DT the) (NN touch))
          (PP (IN of)
            (NP (NN death)))))
      (, ,)
      (SBAR (IN until)
        (S
          (PP (IN at)
            (NP (JJ last)))
          (NP (EX there))
          (VP (VBD was)
            (NP
              (NP
                (NP (DT no) (NN one))
                (PP (CC but)
                  (NP (PRP himself))))
              (CC and)
              (NP (PRP$ his) (NN daughter)
                (S
                  (VP (TO to)
                    (VP (VB succeed))))))))))
    (. .)))

advmod(verging-5, When-1)
poss(years-3, his-2)
nsubj(verging-5, years-3)
aux(verging-5, were-4)
advcl(wither-27, verging-5)
det(close-9, the-7)
amod(close-9, undefined-8)
prep_on(verging-5, close-9)
amod(age-12, middle-11)
prep_of(close-9, age-12)
nsubj(saw-14, he-13)
rcmod(age-12, saw-14)
det(lives-16, the-15)
dobj(saw-14, lives-16)
prep_between(lives-16, him-18)
det(property-22, the-20)
nn(property-22, family-21)
prep_between(lives-16, property-22)
conj_and(him-18, property-22)
nsubj(wither-27, one-24)
prep_by(one-24, one-26)
root(ROOT-0, wither-27)
det(touch-30, the-29)
prep_at(wither-27, touch-30)
prep_of(touch-30, death-32)
mark(was-38, until-34)
prep_at(was-38, last-36)
expl(was-38, there-37)
advcl(wither-27, was-38)
neg(one-40, no-39)
nsubj(was-38, one-40)
prep(one-40, but-41)
pobj(but-41, himself-42)
poss(daughter-45, his-44)
nsubj(was-38, daughter-45)
conj_and(one-40, daughter-45)
aux(succeed-47, to-46)
vmod(daughter-45, succeed-47)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (PP (IN at)
          (NP (DT the) (NN time)))
        (NP
          (NP (DT the) (NN head))
          (PP (IN of)
            (NP
              (NP (DT a) (JJ flourishing) (NN school))
              (PP (IN in)
                (NP (DT a) (JJ large) (NN manufacturing) (NN town))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was) (RB not)
        (PP (IN without)
          (NP (DT some) (NN regret)))
        (, ,)
        (ADVP (RB though))
        (PP (IN with)
          (NP (JJR more) (NN pleasure)))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP
              (VP (VBD yielded)
                (NP (PRP$ his) (NN profession)))
              (CC and)
              (VP (VBD retired)
                (PP (TO to)
                  (NP (NNP Potlurg)))))))))
    (. .)))

nsubj(head-7, He-1)
cop(head-7, was-2)
det(time-5, the-4)
prep_at(head-7, time-5)
det(head-7, the-6)
root(ROOT-0, head-7)
det(school-11, a-9)
amod(school-11, flourishing-10)
prep_of(head-7, school-11)
det(town-16, a-13)
amod(town-16, large-14)
nn(town-16, manufacturing-15)
prep_in(school-11, town-16)
nsubj(was-20, it-19)
conj_and(head-7, was-20)
neg(was-20, not-21)
det(regret-24, some-23)
prep_without(was-20, regret-24)
advmod(was-20, though-26)
amod(pleasure-29, more-28)
prep_with(was-20, pleasure-29)
mark(yielded-33, that-31)
nsubj(yielded-33, he-32)
nsubj(retired-37, he-32)
ccomp(was-20, yielded-33)
poss(profession-35, his-34)
dobj(yielded-33, profession-35)
ccomp(was-20, retired-37)
conj_and(yielded-33, retired-37)
prep_to(retired-37, Potlurg-39)

(ROOT
  (S
    (S
      (NP (NNP Greatly))
      (VP (VBD dwindled)
        (SBAR
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBD found)
                (NP (DT the) (NN property)))))
          (, ,)
          (CC and)
          (ADVP (RB much)
            (CC and)
            (RB long))
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP (VBD had)
                (VP (VBN been)
                  (VP (VBN mismanaged)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB yet))
      (PP
        (PP (IN of)
          (NP (JJ considerable) (NN value)))
        (, ,)
        (CC and)
        (PP (IN worth)
          (NP (DT a) (JJ wise) (NN care)))))
    (. .)))

nsubj(dwindled-2, Greatly-1)
ccomp(was-20, dwindled-2)
mark(found-5, as-3)
nsubj(found-5, he-4)
advcl(dwindled-2, found-5)
det(property-7, the-6)
dobj(found-5, property-7)
advcl(dwindled-2, much-10)
advmod(found-5, much-10)
conj_and(found-5, much-10)
advmod(found-5, long-12)
conj_and(found-5, long-12)
conj_and(much-10, long-12)
mark(mismanaged-17, as-13)
nsubjpass(mismanaged-17, it-14)
aux(mismanaged-17, had-15)
auxpass(mismanaged-17, been-16)
advcl(dwindled-2, mismanaged-17)
conj_and(found-5, mismanaged-17)
nsubj(was-20, it-19)
nsubj(was-20', it-19)
root(ROOT-0, was-20)
conj_and(was-20, was-20')
advmod(was-20, yet-21)
amod(value-24, considerable-23)
prep_of(was-20, value-24)
det(care-30, a-28)
amod(care-30, wise-29)
prep_worth(was-20', care-30)

(ROOT
  (S
    (NP
      (NP (DT The) (NN result))
      (PP (IN of)
        (NP
          (NP (DT the) (NN labor))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD spent)
                (SBAR (IN upon)
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (ADJP (JJ such))
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (VBD had)
                            (NP
                              (NP (RB now))
                              (PP (IN for)
                                (NP (NNS years))))))))))))))))
    (VP (VBD yielded)
      (NP (PRP him))
      (, ,)
      (SBAR (IN if)
        (S
          (NP
            (NP (RB not) (DT a) (JJ large) (NN rental))
            (, ,)
            (NP
              (NP (CD one))
              (ADJP (RB far) (JJR larger))
              (ADVP (IN at) (JJS least))
              (PP (IN than)
                (NP (PRP$ his) (NN daughter)))))
          (VP (VBD imagined)))))
    (. .)))

det(result-2, The-1)
nsubj(yielded-18, result-2)
det(labor-5, the-4)
prep_of(result-2, labor-5)
nsubj(spent-7, he-6)
rcmod(labor-5, spent-7)
mark(such-11, upon-8)
nsubj(such-11, it-9)
cop(such-11, was-10)
advcl(spent-7, such-11)
mark(had-14, that-12)
nsubj(had-14, it-13)
ccomp(such-11, had-14)
dobj(had-14, now-15)
prep_for(now-15, years-17)
root(ROOT-0, yielded-18)
dobj(yielded-18, him-19)
mark(imagined-35, if-21)
neg(rental-25, not-22)
det(rental-25, a-23)
amod(rental-25, large-24)
nsubj(imagined-35, rental-25)
appos(rental-25, one-27)
advmod(larger-29, far-28)
amod(one-27, larger-29)
advmod(one-27, at-30)
pobj(at-30, least-31)
poss(daughter-34, his-33)
prep_than(one-27, daughter-34)
advcl(yielded-18, imagined-35)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NN sinking))
      (PP (IN of)
        (NP
          (NP (DT the) (NN school-master))
          (PP (IN in)
            (NP (DT the) (NN laird))))))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB work)
            (ADJP
              (ADJP (JJ ill)
                (PP (IN for)
                  (NP (DT the) (NN man))))
              (, ,)
              (CC and)
              (ADJP (JJ good)))
            (ADVP (RB only))
            (PP (IN for)
              (NP (DT the) (NN land)))))))
    (. .)))

cc(seemed-10, But-1)
det(sinking-3, the-2)
nsubj(seemed-10, sinking-3)
nsubj(work-12, sinking-3)
det(school-master-6, the-5)
prep_of(sinking-3, school-master-6)
det(laird-9, the-8)
prep_in(school-master-6, laird-9)
root(ROOT-0, seemed-10)
aux(work-12, to-11)
xcomp(seemed-10, work-12)
acomp(work-12, ill-13)
det(man-16, the-15)
prep_for(ill-13, man-16)
acomp(work-12, good-19)
conj_and(ill-13, good-19)
advmod(work-12, only-20)
det(land-23, the-22)
prep_for(work-12, land-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP say)
      (SBAR
        (S
          (NP (NNP _))
          (VP (VBD seemed)
            (ADVP (RB _))
            (, ,)
            (SBAR (IN because)
              (S
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP we))
                    (VP (VBP call)
                      (SBAR
                        (S
                          (NP (NN degeneracy))
                          (VP (VBZ is)
                            (ADVP (RB often) (RB but))
                            (NP
                              (NP (DT the) (NN unveiling))
                              (PP (IN of)
                                (SBAR
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (VP (VBD was)
                                        (ADVP (RB there))
                                        (NP (PDT all) (DT the) (NN time)))))
                                  (: ;)
                                  (CC and)
                                  (SBAR
                                    (X (DT the)
                                      (ADJP (JJ evil)))
                                    (S
                                      (NP (PRP we))
                                      (VP (MD could)
                                        (VP (VB become))))))))))))))
                (, ,)
                (NP (PRP we))
                (VP (VBP are))))))))
    (. .)))

nsubj(say-2, I-1)
root(ROOT-0, say-2)
nsubj(seemed-4, _-3)
ccomp(say-2, seemed-4)
advmod(seemed-4, _-5)
mark(are-33, because-7)
dobj(call-10, what-8)
nsubj(call-10, we-9)
advcl(are-33, call-10)
nsubj(unveiling-16, degeneracy-11)
cop(unveiling-16, is-12)
advmod(but-14, often-13)
advmod(unveiling-16, but-14)
det(unveiling-16, the-15)
ccomp(call-10, unveiling-16)
nsubj(time-23, what-18)
cop(time-23, was-19)
advmod(time-23, there-20)
predet(time-23, all-21)
det(time-23, the-22)
prepc_of(unveiling-16, time-23)
det(evil-27, the-26)
dep(become-30, evil-27)
nsubj(become-30, we-28)
aux(become-30, could-29)
prepc_of(unveiling-16, become-30)
conj_and(time-23, become-30)
nsubj(are-33, we-32)
advcl(seemed-4, are-33)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (NP
            (PP (IN in)
              (NP (PRP me)))
            (NP
              (NP (DT the) (NN tyrant))
              (CC or)
              (NP (DT the) (NN miser)))))))
    (, ,)
    (ADVP (RB there))
    (NP (PRP he))
    (VP
      (VP (VBZ is))
      (, ,)
      (CC and)
      (VP
        (PP (JJ such))
        (VBP am)
        (NP (PRP I)))
      (: --)
      (SBAR
        (ADVP (RB as) (RB surely) (RB as))
        (IN if)
        (S
          (NP
            (NP (DT the) (NN tyrant))
            (CC or)
            (NP (DT the) (NN miser)))
          (VP (VBD were)
            (ADVP (RB even) (RB now))
            (ADJP (JJ visible)
              (PP (TO to)
                (NP
                  (NP (DT the) (JJ wondering) (NN dislike))
                  (PP (IN of)
                    (NP (PRP$ my) (NNS neighbors))))))))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, I-2)
advcl(is-14, have-3)
prep_in(tyrant-7, me-5)
det(tyrant-7, the-6)
dobj(have-3, tyrant-7)
det(miser-10, the-9)
dobj(have-3, miser-10)
conj_or(tyrant-7, miser-10)
advmod(he-13, there-12)
nsubj(is-14, he-13)
root(ROOT-0, is-14)
prep(I-19, such-17)
cop(I-19, am-18)
conj_and(is-14, I-19)
advmod(as-23, as-21)
advmod(as-23, surely-22)
advmod(visible-33, as-23)
mark(visible-33, if-24)
det(tyrant-26, the-25)
nsubj(visible-33, tyrant-26)
det(miser-29, the-28)
conj_or(tyrant-26, miser-29)
nsubj(visible-33, miser-29)
cop(visible-33, were-30)
advmod(now-32, even-31)
advmod(visible-33, now-32)
advcl(is-14, visible-33)
conj_and(is-14, visible-33)
det(dislike-37, the-35)
amod(dislike-37, wondering-36)
prep_to(visible-33, dislike-37)
poss(neighbors-40, my-39)
prep_of(dislike-37, neighbors-40)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB say)
          (S
            (S
              (NP (DT the) (NN characteristic))
              (VP
                (VP (VBZ is)
                  (ADJP (RB so) (JJ strong)))
                (, ,)
                (CC or)
                (VP (MD would)
                  (VP (VB be)
                    (ADJP (RB so) (JJ hard)
                      (S
                        (VP (TO to)
                          (VP (VB change)
                            (SBAR (IN as)
                              (S
                                (PP (IN by)
                                  (NP (DT the) (JJ revealing) (NN development)))
                                (NP (PRP it))
                                (VP (MD must)
                                  (VP (VB become)))))))))))))
            (: ;)
            (CC but)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADVP (RB there))
                (, ,)
                (ADVP (RB alive))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (DT an) (NN egg))
                    (VP
                      (VP (VBZ is)
                        (ADJP (JJ alive)))
                      (: ;)
                      (CC and)
                      (VP
                        (ADVP (IN by) (DT no))
                        (VBZ means)
                        (ADJP (JJ inoperative)
                          (PP (IN like)
                            (NP (DT a) (JJ mere) (NN germ))))))))))))))
    (, ,)
    (CC but)
    (S
      (VP (VBG exercising)
        (NP
          (ADJP (RB real) (IN though) (JJ occult))
          (NN influence))
        (PP (IN on)
          (NP
            (NP (DT the) (NN rest))
            (PP (IN of)
              (NP (PRP$ my) (NN character)))))))
    (. .)))

nsubj(say-4, I-1)
nsubj(exercising-51, I-1)
aux(say-4, do-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
det(characteristic-6, the-5)
nsubj(strong-9, characteristic-6)
nsubj(hard-15, characteristic-6)
nsubj(change-17, characteristic-6)
cop(strong-9, is-7)
advmod(strong-9, so-8)
dep(say-4, strong-9)
aux(hard-15, would-12)
cop(hard-15, be-13)
advmod(hard-15, so-14)
dep(say-4, hard-15)
conj_or(strong-9, hard-15)
aux(change-17, to-16)
xcomp(hard-15, change-17)
mark(become-25, as-18)
det(development-22, the-20)
amod(development-22, revealing-21)
prep_by(become-25, development-22)
nsubj(become-25, it-23)
aux(become-25, must-24)
advcl(change-17, become-25)
nsubj(is-29, it-28)
dep(say-4, is-29)
conj_but(strong-9, is-29)
advmod(is-29, there-30)
advmod(is-29, alive-32)
mark(alive-38, as-34)
det(egg-36, an-35)
nsubj(alive-38, egg-36)
nsubj(means-43, egg-36)
cop(alive-38, is-37)
advcl(is-29, alive-38)
advmod(means-43, by-41)
dep(by-41, no-42)
advcl(is-29, means-43)
conj_and(alive-38, means-43)
acomp(means-43, inoperative-44)
det(germ-48, a-46)
amod(germ-48, mere-47)
prep_like(inoperative-44, germ-48)
conj_but(say-4, exercising-51)
advmod(occult-54, real-52)
dep(occult-54, though-53)
amod(influence-55, occult-54)
dobj(exercising-51, influence-55)
det(rest-58, the-57)
prep_on(exercising-51, rest-58)
poss(character-61, my-60)
prep_of(rest-58, character-61)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (PP (IN except)
      (NP (DT the) (VBG growing) (NN vitality)
        (S
          (VP (VB be)
            (VP
              (PP (IN in)
                (NP (NN process)))
              (PP (IN of)
                (S
                  (VP (VBG killing)
                    (NP
                      (NP (DT these) (NN ova))
                      (PP (IN of)
                        (NP (NN death))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (PP (IN for)
        (NP
          (NP (DT the) (NN good))
          (PP (IN of)
            (NP (DT the) (NN man)))))
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (MD should)
            (VP (VB be)
              (VP
                (ADVP (RB so) (RB far))
                (VBN developed)
                (SBAR (IN as)
                  (S
                    (VP (TO to)
                      (VP (VB show)
                        (NP (PRP$ their) (NN existence))))))))))))
    (. .)))

advmod(is-18, Therefore-1)
det(vitality-6, the-4)
amod(vitality-6, growing-5)
prep_except(is-18, vitality-6)
aux(in-8, be-7)
dep(vitality-6, in-8)
pobj(in-8, process-9)
prepc_of(in-8, killing-11)
det(ova-13, these-12)
dobj(killing-11, ova-13)
prep_of(ova-13, death-15)
nsubj(is-18, it-17)
root(ROOT-0, is-18)
det(good-21, the-20)
prep_for(is-18, good-21)
det(man-24, the-23)
prep_of(good-21, man-24)
mark(developed-31, that-25)
nsubjpass(developed-31, they-26)
aux(developed-31, should-27)
auxpass(developed-31, be-28)
advmod(far-30, so-29)
advmod(developed-31, far-30)
ccomp(is-18, developed-31)
mark(show-34, as-32)
aux(show-34, to-33)
advcl(developed-31, show-34)
poss(existence-36, their-35)
dobj(show-34, existence-36)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN man))
        (VP (VBP do) (RB not)
          (ADVP (RB then))
          (VP (VB starve)
            (CC and)
            (VB slay)
            (NP (PRP them))))))
    (NP (PRP they))
    (VP (MD will)
      (VP (VB drag)
        (NP (PRP him))
        (PP (TO to)
          (NP
            (NP (DT the) (NN judgment-seat))
            (PP (IN of)
              (NP (DT a) (JJ fiery) (NN indignation)))))))
    (. .)))

mark(starve-7, If-1)
det(man-3, the-2)
nsubj(starve-7, man-3)
nsubj(slay-9, man-3)
aux(starve-7, do-4)
neg(starve-7, not-5)
advmod(starve-7, then-6)
advcl(drag-13, starve-7)
conj_and(starve-7, slay-9)
advcl(drag-13, slay-9)
dobj(starve-7, them-10)
nsubj(drag-13, they-11)
aux(drag-13, will-12)
root(ROOT-0, drag-13)
dobj(drag-13, him-14)
det(judgment-seat-17, the-16)
prep_to(drag-13, judgment-seat-17)
det(indignation-21, a-19)
amod(indignation-21, fiery-20)
prep_of(judgment-seat-17, indignation-21)

(ROOT
  (S
    (PP (IN For)
      (NP (DT the) (NN laird)))
    (, ,)
    (NP (NN nature))
    (VP (MD could)
      (ADVP (RB ill))
      (VP (VB replace)
        (NP
          (NP (DT the) (JJ human) (NNS influences))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD had)
                (VP (VBN surrounded)
                  (SBAR
                    (S
                      (NP
                        (NP (DT the) (NN school-master))
                        (: ;)
                        (SBAR (IN while)
                          (S
                            (NP
                              (NP (NN enlargement))
                              (PP (DT both) (IN of)
                                (NP
                                  (NP (NNS means))
                                  (CC and)
                                  (NP (NN leisure)))))
                            (VP (VBD enabled)
                              (S
                                (NP (PRP him))
                                (VP (TO to)
                                  (VP (VB develop)
                                    (PP (IN by)
                                      (NP (NN indulgence)))
                                    (NP
                                      (NP (DT a) (NN passion))
                                      (PP (IN for)
                                        (NP
                                          (NP (DT a) (JJ peculiar) (NN kind))
                                          (PP (IN of)
                                            (NP (NN possession))))))))))))
                        (, ,)
                        (SBAR
                          (WHNP (WDT which))
                          (, ,)
                          (S
                            (ADVP (RB however))
                            (VP (VBN refined)
                              (PP (IN in)
                                (NP (PRP$ its) (NNS objects))))))
                        (, ,))
                      (VP (VBD was)
                        (ADVP (RB yet))
                        (PP (CC but)
                          (NP
                            (NP (DT a) (NN branch))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NN worship))
                                (PP (IN of)
                                  (NP (NNP Mammon)))))))))))))))))
    (. .)))

det(laird-3, the-2)
prep_for(replace-8, laird-3)
nsubj(replace-8, nature-5)
aux(replace-8, could-6)
advmod(replace-8, ill-7)
root(ROOT-0, replace-8)
det(influences-11, the-9)
amod(influences-11, human-10)
dobj(replace-8, influences-11)
nsubj(surrounded-14, influences-11)
aux(surrounded-14, had-13)
rcmod(influences-11, surrounded-14)
det(school-master-16, the-15)
nsubj(refined-43, school-master-16)
nsubj(was-48, school-master-16)
mark(enabled-25, while-18)
nsubj(enabled-25, enlargement-19)
dep(enlargement-19, both-20)
prep_of(enlargement-19, means-22)
prep_of(enlargement-19, leisure-24)
conj_and(means-22, leisure-24)
rcmod(school-master-16, enabled-25)
dobj(enabled-25, him-26)
nsubj(develop-28, him-26)
aux(develop-28, to-27)
xcomp(enabled-25, develop-28)
prep_by(develop-28, indulgence-30)
det(passion-32, a-31)
dobj(develop-28, passion-32)
det(kind-36, a-34)
amod(kind-36, peculiar-35)
prep_for(passion-32, kind-36)
prep_of(kind-36, possession-38)
advmod(refined-43, however-42)
rcmod(school-master-16, refined-43)
poss(objects-46, its-45)
prep_in(refined-43, objects-46)
ccomp(surrounded-14, was-48)
advmod(was-48, yet-49)
prep(was-48, but-50)
det(branch-52, a-51)
pobj(but-50, branch-52)
det(worship-55, the-54)
prep_of(branch-52, worship-55)
prep_of(worship-55, Mammon-57)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ suits)
      (NP (DT the) (NN enemy))
      (ADVP (RB just) (RB as) (RB well))
      (, ,)
      (S
        (NP (PRP I))
        (ADJP (JJ presume)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (DT a) (NN man))
          (VP (MD should)
            (VP (VB give)
              (NP (PRP$ his) (NN soul))
              (PP (IN for)
                (NP
                  (NP (NNS coins))
                  (PP (RB as) (IN for)
                    (NP (NN money))))))))))
    (. .)))

nsubj(suits-2, It-1)
root(ROOT-0, suits-2)
det(enemy-4, the-3)
dobj(suits-2, enemy-4)
advmod(well-7, just-5)
advmod(well-7, as-6)
mwe(well-7, as-6)
advmod(suits-2, well-7)
nsubj(presume-10, I-9)
xcomp(suits-2, presume-10)
mark(give-16, that-12)
det(man-14, a-13)
nsubj(give-16, man-14)
aux(give-16, should-15)
ccomp(suits-2, give-16)
poss(soul-18, his-17)
dobj(give-16, soul-18)
prep_for(give-16, coins-20)
prep_as_for(coins-20, money-23)

(ROOT
  (S
    (PP (IN In)
      (NP (NN consequence)))
    (NP (PRP he))
    (VP (VBD was)
      (VP
        (VP (VBG growing)
          (ADJP
            (ADVP (RBR more)
              (CC and)
              (RBR more))
            (VBN withdrawn)))
        (, ,)
        (VP
          (ADVP (RB ever))
          (VBG filling)
          (ADVP (RBR less))
          (NP
            (NP (DT the) (NN part))
            (PP (IN of)
              (NP
                (NP (DT a) (NN man))
                (: --)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (NP
                              (NP (DT a) (NN hiding-place))
                              (PP (IN from)
                                (NP (DT the) (NN wind))))))))))
                (, ,)))))
        (NP (DT a) (JJ covert))
        (PP (IN from)
          (NP (DT the) (NN tempest)))))
    (. .)))

prep_in(growing-5, consequence-2)
nsubj(growing-5, he-3)
aux(growing-5, was-4)
root(ROOT-0, growing-5)
advmod(withdrawn-9, more-6)
conj_and(more-6, more-8)
advmod(withdrawn-9, more-8)
acomp(growing-5, withdrawn-9)
advmod(filling-12, ever-11)
dep(growing-5, filling-12)
advmod(filling-12, less-13)
det(part-15, the-14)
dobj(filling-12, part-15)
det(man-18, a-17)
prep_of(part-15, man-18)
nsubj(is-21, man-18)
nsubj(hiding-place-25, man-18)
rcmod(man-18, is-21)
aux(hiding-place-25, to-22)
cop(hiding-place-25, be-23)
det(hiding-place-25, a-24)
xcomp(is-21, hiding-place-25)
det(wind-28, the-27)
prep_from(hiding-place-25, wind-28)
det(covert-31, a-30)
dobj(growing-5, covert-31)
det(tempest-34, the-33)
prep_from(growing-5, tempest-34)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (UCP
        (ADJP
          (ADJP (JJR more)
            (CC and)
            (JJR more))
          (PP (IN for)
            (NP (PRP himself))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB thereby))
          (VBG losing)
          (NP (PRP$ his) (NN life)))))
    (. .)))

nsubj(more-3, He-1)
nsubj(more-5, He-1)
nsubj(losing-11, He-1)
cop(more-3, was-2)
root(ROOT-0, more-3)
conj_and(more-3, more-5)
prep_for(more-3, himself-7)
advmod(losing-11, thereby-10)
conj_and(more-3, losing-11)
poss(life-13, his-12)
dobj(losing-11, life-13)

(ROOT
  (S
    (SBAR
      (ADVP (RB Dearly))
      (IN as)
      (S
        (NP (PRP he))
        (VP (VBD loved)
          (NP (PRP$ his) (NN daughter)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was) (, ,)
      (PP (IN by)
        (NP
          (NP (JJ slow) (NNS fallings))
          (ADVP (RB away))))
      (, ,)
      (S
        (VP
          (VP (VBG growing)
            (ADVP (RB ever) (RBR less))
            (PP
              (PP (IN of)
                (NP (DT a) (NN companion)))
              (, ,)
              (CC less)
              (PP (IN of)
                (NP (DT a) (NN comfort)))
              (, ,)
              (ADVP (RBR less))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN necessity))
                  (PP (TO to)
                    (NP (PRP her)))))))
          (, ,)
          (CC and)
          (VP (VBG requiring)
            (NP
              (NP (JJR less)
                (CC and)
                (JJR less))
              (PP (IN of)
                (NP (PRP her))))
            (PP (IN for)
              (NP
                (NP (DT the) (NN good)
                  (CC or)
                  (NN ease))
                (PP (IN of)
                  (NP (PRP$ his) (NN existence)))))))))
    (. .)))

advmod(loved-4, Dearly-1)
mark(loved-4, as-2)
nsubj(loved-4, he-3)
advcl(was-9, loved-4)
poss(daughter-6, his-5)
dobj(loved-4, daughter-6)
nsubj(was-9, he-8)
root(ROOT-0, was-9)
amod(fallings-13, slow-12)
prep_by(was-9, fallings-13)
advmod(fallings-13, away-14)
ccomp(was-9, growing-16)
advmod(less-18, ever-17)
advmod(growing-16, less-18)
det(companion-21, a-20)
prep_of(growing-16, companion-21)
det(comfort-26, a-25)
prep_of(growing-16, comfort-26)
conj_less(companion-21, comfort-26)
ccomp(was-9, less-28)
conj_and(growing-16, less-28)
dep(growing-16, of-29)
det(necessity-31, a-30)
pobj(of-29, necessity-31)
prep_to(necessity-31, her-33)
ccomp(was-9, requiring-36)
conj_and(growing-16, requiring-36)
dobj(requiring-36, less-37)
dobj(requiring-36, less-39)
conj_and(less-37, less-39)
prep_of(less-37, her-41)
det(good-44, the-43)
prep_for(requiring-36, good-44)
prep_for(requiring-36, ease-46)
conj_or(good-44, ease-46)
poss(existence-49, his-48)
prep_of(good-44, existence-49)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD wrong)
      (NP
        (NP (DT those))
        (PP (IN near)
          (NP (PRP us))))
      (PP (IN in)
        (S
          (VP (VBG being)
            (ADJP (JJ independent)
              (PP (IN of)
                (NP (PRP them))))))))
    (. .)))

nsubj(wrong-2, We-1)
root(ROOT-0, wrong-2)
dobj(wrong-2, those-3)
prep_near(those-3, us-5)
cop(independent-8, being-7)
prepc_in(wrong-2, independent-8)
prep_of(independent-8, them-10)

(ROOT
  (S
    (NP (NNP God) (PRP himself))
    (VP (MD would) (RB not)
      (VP (VB be)
        (ADJP (JJ happy)
          (PP (IN without)
            (NP (PRP$ His) (NN Son))))))
    (. .)))

nsubj(happy-6, God-1)
npadvmod(God-1, himself-2)
aux(happy-6, would-3)
neg(happy-6, not-4)
cop(happy-6, be-5)
root(ROOT-0, happy-6)
poss(Son-9, His-8)
prep_without(happy-6, Son-9)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB lean)
            (PRT (RP on))
            (NP
              (NP
                (NP (DT each) (JJ other))
                (, ,)
                (VP (VBG giving)
                  (CC and)
                  (VBG receiving)))
              (: --)
              (CONJP (RB not) (IN as))
              (NP
                (NP (NNS weaklings))
                (, ,)
                (CONJP (CC but)
                  (RB as))
                (NP (NNS lovers))))))))
    (. .)))

nsubj(ought-2, We-1)
nsubj(lean-4, We-1)
root(ROOT-0, ought-2)
aux(lean-4, to-3)
xcomp(ought-2, lean-4)
prt(lean-4, on-5)
det(other-7, each-6)
dobj(lean-4, other-7)
vmod(other-7, giving-9)
vmod(other-7, receiving-11)
conj_and(giving-9, receiving-11)
dobj(lean-4, weaklings-15)
conj_negcc(other-7, weaklings-15)
conj_negcc(other-7, lovers-19)
conj_but(weaklings-15, lovers-19)

(ROOT
  (S
    (NP (NN Love))
    (VP (VBZ is)
      (NP
        (NP (NN strength))
        (CONJP (RB as) (RB well) (IN as))
        (NP (NN need))))
    (. .)))

nsubj(strength-3, Love-1)
cop(strength-3, is-2)
root(ROOT-0, strength-3)
conj_and(strength-3, need-7)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD was)
        (ADJP (RBR more) (JJ able)
          (S
            (VP (TO to)
              (VP (VB live)
                (ADVP (RB alone))
                (PP (IN than)
                  (NP (JJS most) (NNS women)))))))))
    (: ;)
    (S
      (ADVP (RB therefore))
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJR worse))
          (PP (IN for)
            (NP (PRP her))))))
    (. .)))

nsubj(able-4, Alexa-1)
nsubj(live-6, Alexa-1)
cop(able-4, was-2)
advmod(able-4, more-3)
root(ROOT-0, able-4)
aux(live-6, to-5)
xcomp(able-4, live-6)
advmod(live-6, alone-7)
amod(women-10, most-9)
prep_than(live-6, women-10)
advmod(worse-16, therefore-12)
nsubj(worse-16, it-13)
cop(worse-16, was-14)
det(worse-16, the-15)
parataxis(able-4, worse-16)
prep_for(worse-16, her-18)

(ROOT
  (FRAG
    (ADJP (RB Too) (JJ satisfied)
      (PP (IN with)
        (NP
          (NP (PRP herself))
          (, ,)
          (ADJP (RB too) (RB little) (JJ uneasy)))))
    (SBAR
      (WHADVP (WRB when))
      (S
        (ADVP (RB alone))
        (, ,)
        (NP (PRP she))
        (VP (VBD did) (RB not)
          (VP (VB know)
            (SBAR (IN that)
              (S
                (ADVP (RB then))
                (NP (PRP she))
                (VP (VBD was) (RB not)
                  (PP (IN in)
                    (NP (JJ good) (JJ enough) (NN company))))))))))
    (. .)))

advmod(satisfied-2, Too-1)
root(ROOT-0, satisfied-2)
prep_with(satisfied-2, herself-4)
advmod(uneasy-8, too-6)
advmod(uneasy-8, little-7)
amod(herself-4, uneasy-8)
advmod(know-15, when-9)
advmod(know-15, alone-10)
nsubj(know-15, she-12)
aux(know-15, did-13)
neg(know-15, not-14)
dep(satisfied-2, know-15)
mark(was-19, that-16)
advmod(was-19, then-17)
nsubj(was-19, she-18)
ccomp(know-15, was-19)
neg(was-19, not-20)
amod(company-24, good-22)
amod(company-24, enough-23)
prep_in(was-19, company-24)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (UCP
        (SBAR
          (WHNP (WP what))
          (S
            (NP (JJS most))
            (VP
              (VP (MD would)
                (VP (VB call)
                  (NP (DT a) (JJ strong) (NN nature))))
              (, ,)
              (CC nor)
              (VP (VBD knew)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (NNS weaknesses))
                    (VP (VBP belong)
                      (PP (TO to)))))))))
        (, ,)
        (CC and)
        (S
          (VP (VB grow)
            (PRT (RP out))
            (PP (IN of)
              (NP
                (NP (, ,) (JJ such) (NN strength))
                (PP (IN as)
                  (NP (NNS hers)))))))))
    (. .)))

nsubj(was-2, She-1)
root(ROOT-0, was-2)
dobj(call-6, what-3)
nsubj(call-6, most-4)
nsubj(knew-12, most-4)
nsubj(grow-19, most-4)
aux(call-6, would-5)
dep(was-2, call-6)
det(nature-9, a-7)
amod(nature-9, strong-8)
dobj(call-6, nature-9)
dep(was-2, knew-12)
conj_nor(call-6, knew-12)
prep_to(belong-15, what-13)
nsubj(belong-15, weaknesses-14)
ccomp(knew-12, belong-15)
dep(was-2, grow-19)
conj_and(call-6, grow-19)
amod(strength-24, such-23)
prep_out_of(grow-19, strength-24)
prep_as(strength-24, hers-26)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN remoter) (NNS scions))
        (PP (IN of)
          (NP (DT a) (NN family) (NN tree))))
      (VP (VBP are)
        (ADVP (RB not) (RB seldom))
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP make)
                (NP
                  (NP (JJS most) (NN account))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NN school-master) (POS 's))
        (NN daughter))
      (VP
        (VP (VBD knew)
          (ADVP (RBR more))
          (PP (IN about)
            (NP
              (NP (DT the) (NNPS Fordyces))
              (PP (IN of)
                (NP (NNP Potlurg))))))
        (, ,)
        (CC and)
        (VP (VBD cared)
          (ADVP (RBR more))
          (PP (IN for)
            (NP (PRP$ their) (NNS traditions))))
        (, ,)
        (PP (IN than)
          (NP
            (NP (DT any))
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP
                    (PP (IN of)
                      (NP (JJ later) (NNS years)))
                    (VBD had)
                    (VP (VBN reaped)
                      (NP (PRP$ its) (NNS advantages))))
                  (CC or)
                  (VP (VBD shared)
                    (NP (PRP$ its) (NNS honors))))))))))
    (. .)))

det(scions-3, The-1)
nn(scions-3, remoter-2)
nsubj(those-11, scions-3)
det(tree-7, a-5)
nn(tree-7, family-6)
prep_of(scions-3, tree-7)
cop(those-11, are-8)
dep(seldom-10, not-9)
advmod(those-11, seldom-10)
root(ROOT-0, those-11)
nsubj(make-13, those-11)
rcmod(those-11, make-13)
amod(account-15, most-14)
dobj(make-13, account-15)
prep_of(account-15, it-17)
det(school-master-20, the-19)
poss(daughter-22, school-master-20)
nsubj(knew-23, daughter-22)
nsubj(cared-32, daughter-22)
parataxis(those-11, knew-23)
advmod(knew-23, more-24)
det(Fordyces-27, the-26)
prep_about(knew-23, Fordyces-27)
prep_of(Fordyces-27, Potlurg-29)
parataxis(those-11, cared-32)
conj_and(knew-23, cared-32)
advmod(cared-32, more-33)
poss(traditions-36, their-35)
prep_for(cared-32, traditions-36)
parataxis(those-11, than-38)
conj_and(knew-23, than-38)
prep_than(knew-23, any-39)
nsubj(reaped-45, any-39)
nsubj(shared-49, any-39)
amod(years-43, later-42)
prep_of(reaped-45, years-43)
aux(reaped-45, had-44)
rcmod(any-39, reaped-45)
poss(advantages-47, its-46)
dobj(reaped-45, advantages-47)
rcmod(any-39, shared-49)
conj_or(reaped-45, shared-49)
poss(honors-51, its-50)
dobj(shared-49, honors-51)

(ROOT
  (S
    (S
      (NP
        (NP (NN Interest))
        (PP (IN in)
          (NP
            (NP (DT the) (NN channel))
            (PP (IN down)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP one))
                  (VP (VBZ has)
                    (VP (VBN slid)
                      (PP (IN into)
                        (NP (DT the) (NN world)))))))))))
      (VP
        (VP (VBZ is)
          (ADJP (JJ reasonable)))
        (, ,)
        (CC and)
        (VP (MD may)
          (VP (VB be)
            (ADJP (JJ elevating))))))
    (: ;)
    (S
      (PP (IN with)
        (NP (NNP Alexa)))
      (NP (PRP it))
      (VP
        (VP (VBD passed)
          (PP (IN beyond)
            (ADJP (JJ good))))
        (, ,)
        (CC and)
        (VP (VBD wrought)
          (PP (IN for)
            (NP (NN evil))))))
    (. .)))

nsubj(reasonable-14, Interest-1)
nsubj(elevating-19, Interest-1)
det(channel-4, the-3)
prep_in(Interest-1, channel-4)
dobj(slid-9, which-6)
nsubj(slid-9, one-7)
aux(slid-9, has-8)
prepc_down(channel-4, slid-9)
det(world-12, the-11)
prep_into(slid-9, world-12)
cop(reasonable-14, is-13)
root(ROOT-0, reasonable-14)
aux(elevating-19, may-17)
cop(elevating-19, be-18)
conj_and(reasonable-14, elevating-19)
prep_with(passed-24, Alexa-22)
nsubj(passed-24, it-23)
nsubj(wrought-29, it-23)
parataxis(reasonable-14, passed-24)
prep_beyond(passed-24, good-26)
parataxis(reasonable-14, wrought-29)
conj_and(passed-24, wrought-29)
prep_for(wrought-29, evil-31)

(ROOT
  (S
    (S
      (VP
        (VP (VBN Proud)
          (PP (IN of)
            (NP
              (NP (DT a) (NN family))
              (PP (IN with)
                (NP (DT a) (NN history))))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB occasionally))
          (VBD noted)
          (PP (IN in)
            (NP
              (NP (DT the) (NN annals))
              (PP (IN of)
                (NP (DT the) (NN country))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD regarded)
      (NP (PRP herself))
      (PP (IN as)
        (NP
          (NP (DT the) (JJ superior))
          (PP (IN of)
            (NP (DT all)))))
      (PP (IN with)
        (SBAR
          (WHNP (WP whom))
          (S
            (NP (PRP she))
            (VP (VBD had)
              (NP
                (NP (NN hitherto))
                (VP (VBN come)
                  (PP (IN into)
                    (NP (NN relation))))))))))
    (. .)))

vmod(regarded-20, Proud-1)
det(family-4, a-3)
prep_of(Proud-1, family-4)
det(history-7, a-6)
prep_with(family-4, history-7)
advmod(noted-11, occasionally-10)
conj_and(Proud-1, noted-11)
vmod(regarded-20, noted-11)
det(annals-14, the-13)
prep_in(noted-11, annals-14)
det(country-17, the-16)
prep_of(annals-14, country-17)
nsubj(regarded-20, she-19)
root(ROOT-0, regarded-20)
dobj(regarded-20, herself-21)
det(superior-24, the-23)
prep_as(regarded-20, superior-24)
prep_of(superior-24, all-26)
dobj(had-30, whom-28)
nsubj(had-30, she-29)
prepc_with(regarded-20, had-30)
dobj(had-30, hitherto-31)
vmod(hitherto-31, come-32)
prep_into(come-32, relation-34)

(ROOT
  (S
    (S
      (PP (TO To)
        (NP
          (NP (DT the) (JJ poor))
          (, ,)
          (SBAR
            (WHPP (TO to)
              (WHNP (WP whom)))
            (S
              (NP (PRP she))
              (VP (VBD was)
                (UCP
                  (ADVP (RB invariably))
                  (CC and)
                  (ADJP (RB essentially) (JJ kind))))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD was)
        (ADJP
          (ADJP (RBR less) (JJ condescending)
            (PP (IN than)))
          (PP (TO to) (JJ such)))
        (SBAR (IN as)
          (S
            (VP (VBD came)
              (S
                (VP (VBG nearer)
                  (NP (PRP$ her) (JJ own) (JJ imagined) (NN standing)))))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (ADVP (RB constantly))
        (ADJP (JJ aware))
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBD belonged)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN elect))
                  (PP (IN of)
                    (NP (DT the) (NN land))))))))))
    (. !)))

det(poor-3, the-2)
prep_to(was-8, poor-3)
prep_to(condescending-17, poor-3)
nsubj(was-8, she-7)
rcmod(poor-3, was-8)
advmod(was-8, invariably-9)
advmod(kind-12, essentially-11)
advmod(was-8, kind-12)
conj_and(invariably-9, kind-12)
nsubj(condescending-17, she-14)
cop(condescending-17, was-15)
advmod(condescending-17, less-16)
root(ROOT-0, condescending-17)
prep(condescending-17, than-18)
prep(condescending-17, to-19)
mwe(to-19, such-20)
mark(came-22, as-21)
advcl(condescending-17, came-22)
xcomp(came-22, nearer-23)
poss(standing-27, her-24)
amod(standing-27, own-25)
amod(standing-27, imagined-26)
dobj(nearer-23, standing-27)
nsubj(aware-32, she-29)
cop(aware-32, was-30)
advmod(aware-32, constantly-31)
parataxis(condescending-17, aware-32)
mark(belonged-35, that-33)
nsubj(belonged-35, she-34)
ccomp(aware-32, belonged-35)
det(elect-38, the-37)
prep_to(belonged-35, elect-38)
det(land-41, the-40)
prep_of(elect-38, land-41)

(ROOT
  (S
    (S
      (NP (NNP Society))
      (VP (VBD took)
        (NP (PRP$ its) (NN revenge))))
    (: ;)
    (S
      (NP (DT the) (JJ rich) (NN trades-people))
      (VP (VBD looked)
        (PRT (RP down))
        (PP (IN upon)
          (NP (PRP her)))
        (PP (IN as)
          (NP
            (NP (DT the) (NN school-master) (POS 's))
            (NN daughter)))))
    (. .)))

nsubj(took-2, Society-1)
root(ROOT-0, took-2)
poss(revenge-4, its-3)
dobj(took-2, revenge-4)
det(trades-people-8, the-6)
amod(trades-people-8, rich-7)
nsubj(looked-9, trades-people-8)
parataxis(took-2, looked-9)
prt(looked-9, down-10)
prep_upon(looked-9, her-12)
det(school-master-15, the-14)
poss(daughter-17, school-master-15)
prep_as(looked-9, daughter-17)

(ROOT
  (S
    (PP (IN Against)
      (NP (PRP$ their) (NN arrogance)))
    (NP (PRP$ her) (NN indignation))
    (VP (VBD buttressed)
      (NP (PRP$ her) (NN lineal))
      (PP (IN with)
        (NP (PRP$ her) (JJ mental) (NN superiority))))
    (. .)))

poss(arrogance-3, their-2)
prep_against(buttressed-6, arrogance-3)
poss(indignation-5, her-4)
nsubj(buttressed-6, indignation-5)
root(ROOT-0, buttressed-6)
poss(lineal-8, her-7)
dobj(buttressed-6, lineal-8)
poss(superiority-12, her-10)
amod(superiority-12, mental-11)
prep_with(buttressed-6, superiority-12)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ last)))
    (NP
      (NP (DT the) (NN pride))
      (PP (IN of)
        (NP (NN family))))
    (VP (VBZ is)
      (NP (DT a) (JJ personal) (NN arrogance)))
    (. .)))

det(last-3, the-2)
prep_at(arrogance-11, last-3)
det(pride-5, the-4)
nsubj(arrogance-11, pride-5)
prep_of(pride-5, family-7)
cop(arrogance-11, is-8)
det(arrogance-11, a-9)
amod(arrogance-11, personal-10)
root(ROOT-0, arrogance-11)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (PP (IN at)
      (NP (NN length)))
    (NP (PRP she))
    (VP (VBD was)
      (PP (IN in)
        (NP
          (NP (PRP$ her) (JJ natural) (NN position))
          (PP (IN as)
            (NP
              (NP (NNS heiress))
              (PP (IN of)
                (NP (NNP Potlurg))))))))
    (. !)))

cc(was-6, And-1)
advmod(was-6, now-2)
prep_at(was-6, length-4)
nsubj(was-6, she-5)
root(ROOT-0, was-6)
poss(position-10, her-8)
amod(position-10, natural-9)
prep_in(was-6, position-10)
prep_as(position-10, heiress-12)
prep_of(heiress-12, Potlurg-14)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (NP
        (NP (JJ religious))
        (PRN (: --)
          (SBAR (IN if)
            (S
              (NP (PRP one))
              (VP (MD may)
                (VP (VB be)
                  (VP (VBN called)
                    (NP (JJ religious))))))))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD felt)
              (NP (DT no) (JJ immediate) (NN relation))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN source))
                  (PP (IN of)
                    (NP (PRP$ her) (NN being))))))))))
    (. .)))

nsubj(religious-3, She-1)
cop(religious-3, was-2)
root(ROOT-0, religious-3)
nsubj(felt-12, religious-3)
mark(called-9, if-5)
nsubjpass(called-9, one-6)
aux(called-9, may-7)
auxpass(called-9, be-8)
dep(religious-3, called-9)
dobj(called-9, religious-10)
rcmod(religious-3, felt-12)
neg(relation-15, no-13)
amod(relation-15, immediate-14)
dobj(felt-12, relation-15)
det(source-18, the-17)
prep_to(felt-12, source-18)
poss(being-21, her-20)
prep_of(source-18, being-21)

(ROOT
  (S
    (S
      (S
        (NP (PRP She))
        (VP (VBD felt)
          (ADJP (VBN bound)
            (S
              (VP (TO to)
                (VP (VB defend)))))))
      (, ,) (IN so)
      (S
        (ADVP (RB far)
          (SBAR (IN as)
            (S
              (NP (PRP she))
              (ADVP (RB honestly))
              (VP (MD could)))))
        (, ,)
        (NP
          (NP (DT the) (NNS doctrines))
          (PP (VBG concerning)
            (NP
              (NP (NNP God))
              (CC and)
              (NP (PRP$ His) (NNS ways)))))
        (VP (VBD transmitted)
          (PP (IN by)
            (NP
              (NP (DT the) (NNS elders))
              (PP (IN of)
                (NP (PRP$ her) (NNS people))))))))
    (: ;)
    (S
      (PP (TO to)
        (NP
          (NP (DT this))
          (ADJP
            (ADJP (JJ much))
            (, ,)
            (CC and)
            (ADJP (RB little) (JJR more)))))
      (, ,)
      (NP
        (NP (PRP$ her) (NN religion))
        (PP (IN toward)
          (NP (NNP God))))
      (VP (VBD amounted)))
    (. .)))

nsubj(felt-2, She-1)
root(ROOT-0, felt-2)
acomp(felt-2, bound-3)
aux(defend-5, to-4)
xcomp(bound-3, defend-5)
dep(felt-2, so-7)
advmod(transmitted-21, far-8)
mark(could-12, as-9)
nsubj(could-12, she-10)
advmod(could-12, honestly-11)
ccomp(far-8, could-12)
det(doctrines-15, the-14)
nsubj(transmitted-21, doctrines-15)
prep_concerning(doctrines-15, God-17)
poss(ways-20, His-19)
prep_concerning(doctrines-15, ways-20)
conj_and(God-17, ways-20)
parataxis(felt-2, transmitted-21)
det(elders-24, the-23)
prep_by(transmitted-21, elders-24)
poss(people-27, her-26)
prep_of(elders-24, people-27)
prep_to(amounted-41, this-30)
amod(this-30, much-31)
advmod(more-35, little-34)
amod(this-30, more-35)
conj_and(much-31, more-35)
poss(religion-38, her-37)
nsubj(amounted-41, religion-38)
prep_toward(religion-38, God-40)
parataxis(felt-2, amounted-41)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (VP (VBD had)
      (NP
        (NP (DT a) (JJ strong) (NN sense))
        (PP (IN of)
          (NP (NN obligation)))
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD was)
                    (ADJP (JJ right))))))))))
    (. .)))

cc(had-3, But-1)
nsubj(had-3, she-2)
root(ROOT-0, had-3)
det(sense-6, a-4)
amod(sense-6, strong-5)
dobj(had-3, sense-6)
prep_of(sense-6, obligation-8)
aux(do-10, to-9)
vmod(sense-6, do-10)
nsubj(right-13, what-11)
cop(right-13, was-12)
ccomp(do-10, right-13)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NN father))
      (VP (VBD gave)
        (NP (PRP$ her)
          (ADJP (RB so) (JJ little))
          (NN money))
        (S
          (VP (TO to)
            (VP (VB spend)
              (SBAR (IN that)
                (S
                  (NP (PRP she))
                  (VP (VBD had)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (RB very) (JJ careful)
                            (PP (IN with)
                              (NP (PRP$ her) (NN housekeeping)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD lived)
        (PP (IN in)
          (NP (DT the) (JJ humblest) (NN way)))))
    (. .)))

poss(father-2, Her-1)
nsubj(gave-3, father-2)
root(ROOT-0, gave-3)
poss(money-7, her-4)
advmod(little-6, so-5)
amod(money-7, little-6)
dobj(gave-3, money-7)
aux(spend-9, to-8)
vmod(gave-3, spend-9)
mark(had-12, that-10)
nsubj(had-12, she-11)
nsubj(careful-16, she-11)
ccomp(spend-9, had-12)
aux(careful-16, to-13)
cop(careful-16, be-14)
advmod(careful-16, very-15)
xcomp(had-12, careful-16)
poss(housekeeping-19, her-18)
prep_with(careful-16, housekeeping-19)
nsubj(lived-23, they-22)
conj_and(gave-3, lived-23)
det(way-27, the-25)
amod(way-27, humblest-26)
prep_in(lived-23, way-27)

(ROOT
  (S
    (PP (IN For)
      (NP (PRP$ her) (NN person)))
    (NP (PRP she))
    (VP (VBD troubled)
      (NP (PRP him))
      (PP (IN as)
        (NP (RB little)))
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (MD could))))
      (, ,)
      (S
        (VP
          (VP (VBG believing)
            (NP (PRP him))
            (, ,)
            (PP (IN from)
              (NP
                (NP
                  (NP (DT the) (JJ half) (NNS statements)
                    (CC and)
                    (NNS hints))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD gave)))))
                (, ,)
                (CC and)
                (NP
                  (NP (PRP$ his) (JJ general) (NN carriage))
                  (PP (IN toward)
                    (NP
                      (NP (NN life))
                      (, ,)
                      (VP
                        (ADVP (RB not)
                          (NP (DT a) (RB little)))
                        (VBN oppressed)
                        (PP (IN by)
                          (NP
                            (NP (NN lack))
                            (PP (IN of)
                              (NP (NN money))))))
                      (, ,)))))))
          (CC nor)
          (VP (VBG suspecting)
            (NP
              (NP
                (NP (PRP$ his) (NNS necessities))
                (VP (VBN created)))
              (CC and)
              (NP
                (NP (PRP$ his) (NNS difficulties))
                (VP (VBN induced)
                  (PP (IN by)
                    (NP (PRP himself))))))))))
    (. .)))

poss(person-3, her-2)
prep_for(troubled-5, person-3)
nsubj(troubled-5, she-4)
root(ROOT-0, troubled-5)
dobj(troubled-5, him-6)
prep(troubled-5, as-7)
pobj(as-7, little-8)
mark(could-11, as-9)
nsubj(could-11, she-10)
advcl(troubled-5, could-11)
dep(troubled-5, believing-13)
dobj(believing-13, him-14)
det(statements-19, the-17)
amod(statements-19, half-18)
prep_from(believing-13, statements-19)
prep_from(believing-13, hints-21)
conj_and(statements-19, hints-21)
nsubj(gave-23, he-22)
rcmod(statements-19, gave-23)
poss(carriage-28, his-26)
amod(carriage-28, general-27)
prep_from(believing-13, carriage-28)
conj_and(statements-19, carriage-28)
prep_toward(carriage-28, life-30)
neg(oppressed-35, not-32)
det(little-34, a-33)
dep(not-32, little-34)
vmod(life-30, oppressed-35)
agent(oppressed-35, lack-37)
prep_of(lack-37, money-39)
dep(troubled-5, suspecting-42)
conj_nor(believing-13, suspecting-42)
poss(necessities-44, his-43)
dobj(suspecting-42, necessities-44)
vmod(necessities-44, created-45)
poss(difficulties-48, his-47)
dobj(suspecting-42, difficulties-48)
conj_and(necessities-44, difficulties-48)
vmod(difficulties-48, induced-49)
agent(induced-49, himself-51)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT this) (NN regard)))
      (NP (PRP it))
      (VP (VBD had)
        (VP (VBN come)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN understood)
                  (PP (IN between)
                    (NP (PRP them)))
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT the) (NN produce))
                        (PP (IN of)
                          (NP (DT the) (NN poultry-yard))))
                      (VP (VBD was)
                        (NP
                          (NP (NNP Alexa) (POS 's))
                          (JJ own))))))))))))
    (: ;)
    (CC and)
    (S
      (PP (TO to)
        (NP (DT some) (JJ little) (NN store)))
      (NP (PRP she))
      (VP (VBD had)
        (ADVP (RB thus))
        (VP (VBN gathered)
          (SBAR
            (S
              (NP (PRP she))
              (ADVP (RB mainly))
              (VP (VBD trusted)
                (PP (IN for)
                  (NP
                    (NP (DT the) (NNS requirements))
                    (PP (IN of)
                      (NP (PRP$ her) (NN invalid)))))))))))
    (. .)))

det(regard-3, this-2)
prep_in(come-6, regard-3)
nsubj(come-6, it-4)
nsubjpass(understood-9, it-4)
aux(come-6, had-5)
root(ROOT-0, come-6)
aux(understood-9, to-7)
auxpass(understood-9, be-8)
xcomp(come-6, understood-9)
prep_between(understood-9, them-11)
mark(Alexa-19, that-12)
det(produce-14, the-13)
nsubj(Alexa-19, produce-14)
det(poultry-yard-17, the-16)
prep_of(produce-14, poultry-yard-17)
cop(Alexa-19, was-18)
ccomp(understood-9, Alexa-19)
possessive(Alexa-19, 's-20)
amod(Alexa-19, own-21)
det(store-27, some-25)
amod(store-27, little-26)
prep_to(gathered-31, store-27)
nsubj(gathered-31, she-28)
aux(gathered-31, had-29)
advmod(gathered-31, thus-30)
conj_and(come-6, gathered-31)
nsubj(trusted-34, she-32)
advmod(trusted-34, mainly-33)
ccomp(gathered-31, trusted-34)
det(requirements-37, the-36)
prep_for(trusted-34, requirements-37)
poss(invalid-40, her-39)
prep_of(requirements-37, invalid-40)

(ROOT
  (S
    (S
      (PP (TO To)
        (NP (DT this)))
      (NP (PRP$ her) (NN father))
      (VP (MD could) (RB not)
        (VP (VB object) (, ,)
          (SBAR (IN though)
            (S
              (NP (PRP he))
              (VP (VBD did) (RB not)
                (VP (VB like)
                  (NP (PRP it)))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD felt)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD was)
              (ADJP (JJ hers)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP (PRP$ his)
                        (ADJP
                          (ADJP (JJR more))
                          (SBAR (IN than)
                            (S
                              (NP (PRP he))
                              (VP (VBD felt)
                                (SBAR
                                  (WHNP (WP what))
                                  (S
                                    (VP (VBD was)
                                      (S
                                        (NP (PRP$ his))
                                        (VP (TO to)
                                          (VP (VB be)))))))))))
                        (NN hers)))))))))))
    (. .)))

prep_to(object-7, this-2)
poss(father-4, her-3)
nsubj(object-7, father-4)
aux(object-7, could-5)
neg(object-7, not-6)
root(ROOT-0, object-7)
mark(like-13, though-9)
nsubj(like-13, he-10)
aux(like-13, did-11)
neg(like-13, not-12)
advcl(object-7, like-13)
dobj(like-13, it-14)
nsubj(felt-17, he-16)
parataxis(object-7, felt-17)
nsubj(hers-20, what-18)
nsubj(hers-33, what-18)
cop(hers-20, was-19)
ccomp(felt-17, hers-20)
aux(hers-33, to-21)
cop(hers-33, be-22)
poss(hers-33, his-23)
amod(hers-33, more-24)
mark(felt-27, than-25)
nsubj(felt-27, he-26)
ccomp(more-24, felt-27)
nsubj(was-29, what-28)
ccomp(felt-27, was-29)
dobj(was-29, his-30)
nsubj(be-32, his-30)
aux(be-32, to-31)
xcomp(was-29, be-32)
xcomp(hers-20, hers-33)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD had) (RB not)
        (VP (VBN learned)
          (S
            (VP (TO to)
              (VP (VB place)
                (NP
                  (NP (NN value))
                  (PP (IN on)
                    (NP (NN money))))
                (PP (IN beyond)
                  (NP (PRP$ its) (NN use)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD was) (RB not)
        (ADVP (RB therefore))
        (ADJP (JJ free)
          (PP (IN from)
            (NP
              (NP (DT the) (NN service))
              (PP (IN of)
                (NP (NNP Mammon))))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD looked)
          (PP (TO to)
            (NP (PRP it)))
          (PP (IN as)
            (PP (TO to)
              (NP (DT a) (NN power) (JJ essential)))))
        (, ,) (RB not)
        (VP (VBD derived))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD did) (RB not)
        (VP (VB see)
          (NP (PRP it))
          (PP
            (PP (IN as)
              (NP
                (NP (NNP God) (POS 's))
                (NN creation)))
            (, ,)
            (CONJP (CC but)
              (RB merely))
            (PP (IN as)
              (NP (DT an) (NN existence)))))))
    (, ,) (RB thus)
    (S
      (VP (VBG making)
        (PP (IN of)
          (NP
            (NP (DT a) (NN creature))
            (PP (IN of)
              (NP (NNP God)))))
        (NP
          (NP (DT the) (NN mammon))
          (PP (IN of)
            (NP (NNS unrighteousness))))))
    (. .)))

nsubj(learned-4, Alexa-1)
nsubj(place-6, Alexa-1)
aux(learned-4, had-2)
neg(learned-4, not-3)
root(ROOT-0, learned-4)
aux(place-6, to-5)
xcomp(learned-4, place-6)
dobj(place-6, value-7)
prep_on(value-7, money-9)
poss(use-12, its-11)
prep_beyond(place-6, use-12)
nsubj(free-19, she-15)
cop(free-19, was-16)
neg(free-19, not-17)
advmod(free-19, therefore-18)
conj_but(learned-4, free-19)
det(service-22, the-21)
prep_from(free-19, service-22)
prep_of(service-22, Mammon-24)
nsubj(looked-27, she-26)
conj_but(learned-4, looked-27)
parataxis(learned-4, looked-27)
prep_to(looked-27, it-29)
prepc_as_to(looked-27, to-31)
det(power-33, a-32)
pobj(looked-27, power-33)
amod(power-33, essential-34)
neg(derived-37, not-36)
dep(looked-27, derived-37)
nsubj(see-42, she-39)
aux(see-42, did-40)
neg(see-42, not-41)
conj_but(learned-4, see-42)
parataxis(learned-4, see-42)
dobj(see-42, it-43)
poss(creation-47, God-45)
prep_as(see-42, creation-47)
det(existence-53, an-52)
prep_as(see-42, existence-53)
conj_but(creation-47, existence-53)
advmod(learned-4, thus-55)
conj_but(learned-4, thus-55)
parataxis(learned-4, making-56)
det(creature-59, a-58)
prep_of(making-56, creature-59)
prep_of(creature-59, God-61)
det(mammon-63, the-62)
dobj(making-56, mammon-63)
prep_of(mammon-63, unrighteousness-65)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD did) (RB not)
      (PRN (, ,)
        (ADVP (RB however))
        (, ,))
      (VP
        (VP (VB cling)
          (PP (TO to)
            (NP (PRP it))))
        (, ,)
        (CC but)
        (VP (VBD was)
          (ADJP (JJ ready)
            (S
              (VP (TO to)
                (VP (VB spend)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(cling-7, She-1)
nsubj(ready-13, She-1)
nsubj(spend-15, She-1)
aux(cling-7, did-2)
neg(cling-7, not-3)
dep(cling-7, however-5)
root(ROOT-0, cling-7)
prep_to(cling-7, it-9)
cop(ready-13, was-12)
conj_but(cling-7, ready-13)
aux(spend-15, to-14)
xcomp(ready-13, spend-15)
dobj(spend-15, it-16)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (PRN (, ,)
      (SINV (VBD had)
        (NP (NNP George) (NNP Crawford))
        (VP (VBN looked)
          (ADJP
            (ADJP (RBR less) (JJ handsome))
            (CC or)
            (ADJP (JJR less)))
          (PP (IN of)
            (NP (DT a) (NN gentleman)))))
      (, ,))
    (NP (PRP she))
    (VP (MD would) (RB not)
      (VP (VB have)
        (VP (VBN been)
          (ADJP (RB so) (JJ ready)
            (S
              (VP (TO to)
                (VP (VB devote)
                  (NP
                    (NP (DT the) (NNS contents))
                    (PP (IN of)
                      (NP (PRP$ her) (JJ little) (JJ secret) (NN drawer)))))))))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(ready-24, time-4)
aux(looked-9, had-6)
nn(Crawford-8, George-7)
nsubj(looked-9, Crawford-8)
parataxis(ready-24, looked-9)
advmod(handsome-11, less-10)
acomp(looked-9, handsome-11)
acomp(looked-9, less-13)
conj_or(handsome-11, less-13)
det(gentleman-16, a-15)
prep_of(looked-9, gentleman-16)
nsubj(ready-24, she-18)
nsubj(devote-26, she-18)
aux(ready-24, would-19)
neg(ready-24, not-20)
aux(ready-24, have-21)
cop(ready-24, been-22)
advmod(ready-24, so-23)
root(ROOT-0, ready-24)
aux(devote-26, to-25)
xcomp(ready-24, devote-26)
det(contents-28, the-27)
dobj(devote-26, contents-28)
poss(drawer-33, her-30)
amod(drawer-33, little-31)
amod(drawer-33, secret-32)
prep_of(contents-28, drawer-33)

(ROOT
  (S
    (NP
      (NP (DT The) (NN discovery))
      (PP (IN of)
        (NP
          (NP (PRP$ her) (NN relationship))
          (PP (TO to)
            (NP (DT the) (JJ young) (NN man))))))
    (VP (VBD waked)
      (NP (DT a) (JJ new) (NN feeling)))
    (. .)))

det(discovery-2, The-1)
nsubj(waked-10, discovery-2)
poss(relationship-5, her-4)
prep_of(discovery-2, relationship-5)
det(man-9, the-7)
amod(man-9, young-8)
prep_to(relationship-5, man-9)
root(ROOT-0, waked-10)
det(feeling-13, a-11)
amod(feeling-13, new-12)
dobj(waked-10, feeling-13)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD had)
        (ADVP (RB never))
        (VP
          (VP (VBN had)
            (NP (DT a) (NN brother)))
          (, ,)
          (VP
            (ADVP (RB never))
            (VBN known)
            (NP (DT a) (NN cousin)))
          (, ,)
          (CC and)
          (VP (VBD had)
            (VP (VBN avoided)
              (NP
                (NP (DT the) (NN approach))
                (PP (IN of)
                  (NP (JJ such) (JJ young) (NNS men))))
              (SBAR (IN as)
                (S (, ,)
                  (PP (IN of)
                    (NP
                      (NP (JJ inferior) (NN position))
                      (PP (IN in)
                        (NP (PRP$ her) (NNS eyes)))))
                  (, ,)
                  (VP (VBD had)
                    (VP (VBN sought)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ friendly)
                              (PP (IN with)
                                (NP (PRP her))))))))))))))))
    (: ;)
    (S
      (NP (RB here))
      (VP (VBD was)
        (NP
          (NP
            (NP (CD one))
            (VP (VBN thrown)
              (S
                (ADJP (JJ helpless)))
              (PP (IN on)
                (NP (PRP$ her) (NN care)))
              (, ,)
              (PP (IN with)
                (NP
                  (NP (NNS necessities))
                  (ADJP (JJ enough)
                    (S
                      (VP (TO to)
                        (VP (VB fill)
                          (NP
                            (NP (DT the) (NN gap))
                            (PP (IN between)
                              (NP (PRP$ his) (JJ real) (NN relation))))
                          (PP (TO to)
                            (NP (PRP her)))))))))))
          (, ,)
          (CC and)
          (NP
            (NP (DT that))
            (PP (IN of)
              (NP
                (NP (DT the) (NN brother))
                (SBAR
                  (WHPP (IN after)
                    (WHNP (WP whom)))
                  (S
                    (NP (PRP she))
                    (VP (VBD had)
                      (VP (VBN sighed)
                        (PP (IN in)
                          (NP (JJ vain)))))))))))))
    (. !)))

nsubj(had-4, She-1)
nsubj(known-9, She-1)
nsubj(avoided-15, She-1)
aux(had-4, had-2)
neg(had-4, never-3)
root(ROOT-0, had-4)
det(brother-6, a-5)
dobj(had-4, brother-6)
neg(known-9, never-8)
conj_and(had-4, known-9)
det(cousin-11, a-10)
dobj(known-9, cousin-11)
aux(avoided-15, had-14)
conj_and(had-4, avoided-15)
det(approach-17, the-16)
dobj(avoided-15, approach-17)
amod(men-21, such-19)
amod(men-21, young-20)
prep_of(approach-17, men-21)
mark(sought-32, as-22)
amod(position-26, inferior-25)
prep_of(sought-32, position-26)
poss(eyes-29, her-28)
prep_in(position-26, eyes-29)
aux(sought-32, had-31)
advcl(avoided-15, sought-32)
aux(friendly-35, to-33)
cop(friendly-35, be-34)
xcomp(sought-32, friendly-35)
prep_with(friendly-35, her-37)
nsubj(one-41, here-39)
cop(one-41, was-40)
parataxis(had-4, one-41)
vmod(one-41, thrown-42)
acomp(thrown-42, helpless-43)
poss(care-46, her-45)
prep_on(thrown-42, care-46)
prep_with(thrown-42, necessities-49)
amod(necessities-49, enough-50)
aux(fill-52, to-51)
xcomp(enough-50, fill-52)
det(gap-54, the-53)
dobj(fill-52, gap-54)
poss(relation-58, his-56)
amod(relation-58, real-57)
prep_between(gap-54, relation-58)
prep_to(fill-52, her-60)
parataxis(had-4, that-63)
conj_and(one-41, that-63)
det(brother-66, the-65)
prep_of(that-63, brother-66)
prep_after(sighed-71, brother-66)
nsubj(sighed-71, she-69)
aux(sighed-71, had-70)
rcmod(brother-66, sighed-71)
prep_in(sighed-71, vain-73)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ new)
          (CC and)
          (JJ delightful) (NN sensation))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP
                    (NP (DT a) (NN family) (NN claim))
                    (PP (IN on)
                      (NP (DT a) (JJ young) (NN man))))
                  (: --)
                  (NP
                    (NP (DT a) (NN claim))
                    (, ,)
                    (NP
                      (NP (DT the) (NN material) (NN advantage))
                      (PP (IN of)
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBD was)
                              (NP
                                (NP (DT all))
                                (PP (IN on)
                                  (NP (PRP$ his) (NN side))))
                              (, ,)
                              (ADVP
                                (NP (DT the) (NN devotion))
                                (RB all)))))))))
                (PP (IN on)
                  (NP (NNS hers)))))))))
    (. .)))

nsubj(sensation-7, It-1)
cop(sensation-7, was-2)
det(sensation-7, a-3)
amod(sensation-7, new-4)
conj_and(new-4, delightful-6)
amod(sensation-7, delightful-6)
root(ROOT-0, sensation-7)
aux(have-9, to-8)
vmod(sensation-7, have-9)
det(claim-12, a-10)
nn(claim-12, family-11)
dobj(have-9, claim-12)
det(man-16, a-14)
amod(man-16, young-15)
prep_on(claim-12, man-16)
det(claim-19, a-18)
dep(claim-12, claim-19)
det(advantage-23, the-21)
nn(advantage-23, material-22)
appos(claim-19, advantage-23)
nsubj(all-27, which-25)
cop(all-27, was-26)
prepc_of(advantage-23, all-27)
poss(side-30, his-29)
prep_on(all-27, side-30)
det(devotion-33, the-32)
npadvmod(all-34, devotion-33)
advmod(all-27, all-34)
prep_on(have-9, hers-36)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (VP (VBN invaded)
        (PP (IN by)
          (NP
            (NP (DT a) (NN flood))
            (PP (IN of)
              (NP (NN tenderness)))))
        (PP (IN toward)
          (NP (DT the) (NN man)))))
    (. .)))

nsubjpass(invaded-3, She-1)
auxpass(invaded-3, was-2)
root(ROOT-0, invaded-3)
det(flood-6, a-5)
agent(invaded-3, flood-6)
prep_of(flood-6, tenderness-8)
det(man-11, the-10)
prep_toward(invaded-3, man-11)

(ROOT
  (SQ
    (SQ (VBD Was)
      (NP (PRP he))
      (NP
        (NP (RB not) (PRP$ her) (NN cousin))
        (, ,)
        (NP (DT a) (NN gentleman))))
    (, ,)
    (CC and)
    (SQ (VBP helpless)
      (PP (IN as)
        (NP (DT any) (JJ new-born) (NN child))))
    (. ?)))

cop(cousin-5, Was-1)
nsubj(cousin-5, he-2)
nsubj(helpless-11, he-2)
neg(cousin-5, not-3)
poss(cousin-5, her-4)
root(ROOT-0, cousin-5)
det(gentleman-8, a-7)
appos(cousin-5, gentleman-8)
conj_and(cousin-5, helpless-11)
det(child-15, any-13)
amod(child-15, new-born-14)
prep_as(helpless-11, child-15)

(ROOT
  (S
    (NP (NN Nothing))
    (VP (MD should)
      (VP (VB be)
        (VP (VBG wanting)
          (SBAR (IN that)
            (S
              (NP (DT a) (JJ strong) (NN woman))
              (VP (MD could)
                (VP (VB do)
                  (PP (IN for)
                    (NP (DT a) (JJ powerless) (NN man))))))))))
    (. .)))

nsubj(wanting-4, Nothing-1)
aux(wanting-4, should-2)
aux(wanting-4, be-3)
root(ROOT-0, wanting-4)
mark(do-10, that-5)
det(woman-8, a-6)
amod(woman-8, strong-7)
nsubj(do-10, woman-8)
aux(do-10, could-9)
ccomp(wanting-4, do-10)
det(man-14, a-12)
amod(man-14, powerless-13)
prep_for(do-10, man-14)

(ROOT
  (S
    (NP (NNP CHAPTER))
    (VP (VBZ VII))
    (. .)))

nsubj(VII-2, CHAPTER-1)
root(ROOT-0, VII-2)

(ROOT
  (NP (DT THE) (NNS COUSINS) (. .)))

det(COUSINS-2, THE-1)
root(ROOT-0, COUSINS-2)

(ROOT
  (S
    (S
      (NP (NNP George) (NNP Crawford))
      (VP (VBD was)
        (PP (IN in)
          (NP (JJ excellent) (NN health)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN accident))
            (VP (VBD occurred))))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD began)
            (S
              (VP (TO to)
                (VP (VB recover)))))))
      (, ,)
      (NP (PRP$ his) (NN restoration))
      (VP (VBD was)
        (ADJP (JJ rapid))))
    (. .)))

nn(Crawford-2, George-1)
nsubj(was-3, Crawford-2)
root(ROOT-0, was-3)
amod(health-6, excellent-5)
prep_in(was-3, health-6)
advmod(occurred-10, when-7)
det(accident-9, the-8)
nsubj(occurred-10, accident-9)
advcl(was-3, occurred-10)
conj_and(was-3, so-13)
advmod(began-16, when-14)
nsubj(began-16, he-15)
nsubj(recover-18, he-15)
advcl(rapid-23, began-16)
aux(recover-18, to-17)
xcomp(began-16, recover-18)
poss(restoration-21, his-20)
nsubj(rapid-23, restoration-21)
cop(rapid-23, was-22)
ccomp(was-3, rapid-23)

(ROOT
  (S
    (NP (DT The) (NN process))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (VBD was)
      (ADVP (RB still))
      (ADJP (JJ long) (RB enough)
        (S
          (VP (TO to)
            (VP (VB compel)
              (S
                (NP (DT the) (NNS cousins))
                (VP (TO to)
                  (VP (VB know)
                    (NP
                      (NP (JJR more))
                      (PP (IN of)
                        (NP (DT each) (JJ other)))))))))))
      (SBAR (IN than)
        (S
          (NP
            (NP (CD twelve) (NNS months))
            (PP (IN of)
              (NP (JJ ordinary) (NN circumstance))))
          (VP (MD would)
            (VP (VB have)
              (VP (VBN made)
                (S
                  (ADJP (JJ possible)))))))))
    (. .)))

det(process-2, The-1)
nsubj(long-8, process-2)
nsubj(compel-11, process-2)
advmod(long-8, however-4)
cop(long-8, was-6)
advmod(long-8, still-7)
root(ROOT-0, long-8)
advmod(long-8, enough-9)
aux(compel-11, to-10)
xcomp(long-8, compel-11)
det(cousins-13, the-12)
dobj(compel-11, cousins-13)
nsubj(know-15, cousins-13)
aux(know-15, to-14)
xcomp(compel-11, know-15)
dobj(know-15, more-16)
det(other-19, each-18)
prep_of(more-16, other-19)
mark(made-28, than-20)
num(months-22, twelve-21)
nsubj(made-28, months-22)
amod(circumstance-25, ordinary-24)
prep_of(months-22, circumstance-25)
aux(made-28, would-26)
aux(made-28, have-27)
advcl(long-8, made-28)
acomp(made-28, possible-29)

(ROOT
  (S
    (S
      (NP
        (NP (NNP George))
        (, ,)
        (VP (VBG feeling)
          (NP (DT neither)
            (NP (DT the) (NN need))
            (, ,)
            (NP
              (NP (NNP nor))
              (, ,)
              (ADVP (RB therefore)))
            (, ,)
            (NP
              (NP (DT the) (NN joy))
              (PP (IN of)
                (NP (DT the) (JJ new) (NN relationship)))))
          (ADVP (RB so) (RB much))
          (PP (IN as)
            (NP (NNP Alexa))))
        (, ,))
      (VP (VBD disappointed)
        (NP (PRP her))
        (PP (IN by)
          (NP
            (NP (DT the) (NNS coolness))
            (PP (IN of)
              (NP (PRP$ his) (NN response)))))
        (PP (TO to)
          (NP
            (NP (PRP$ her) (NN communication))
            (PP (IN of)
              (NP (DT the) (NN fact)))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (NP
              (NP (DT both) (JJ formal))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP
                    (VP (VBZ is))
                    (, ,)
                    (VP
                      (ADJP (RBR less) (JJ careful))
                      (PP (RB as)
                        (PP (TO to)
                          (NP (DT the) (JJ reasonable)))
                        (CONJP (IN than) (RB as))
                        (PP (TO to)
                          (NP (DT the) (JJ conventional))))))))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD were) (RB not)
        (ADJP (RB very) (JJ ready)
          (S
            (VP (TO to)
              (VP (VB fall)
                (PP (IN in)
                  (NP (NN love)))))))))
    (. .)))

nsubj(disappointed-23, George-1)
vmod(George-1, feeling-3)
dep(need-6, neither-4)
det(need-6, the-5)
dobj(feeling-3, need-6)
appos(need-6, nor-8)
advmod(nor-8, therefore-10)
det(joy-13, the-12)
appos(need-6, joy-13)
det(relationship-17, the-15)
amod(relationship-17, new-16)
prep_of(joy-13, relationship-17)
advmod(much-19, so-18)
advmod(feeling-3, much-19)
prep_as(feeling-3, Alexa-21)
root(ROOT-0, disappointed-23)
dobj(disappointed-23, her-24)
det(coolness-27, the-26)
prep_by(disappointed-23, coolness-27)
poss(response-30, his-29)
prep_of(coolness-27, response-30)
poss(communication-33, her-32)
prep_to(disappointed-23, communication-33)
det(fact-36, the-35)
prep_of(communication-33, fact-36)
mark(formal-43, as-39)
nsubj(formal-43, they-40)
cop(formal-43, were-41)
det(formal-43, both-42)
nsubj(is-46, formal-43)
advcl(ready-64, formal-43)
rcmod(formal-43, is-46)
advmod(careful-49, less-48)
dep(is-46, careful-49)
det(reasonable-53, the-52)
prep_as_to(careful-49, reasonable-53)
dep(is-46, to-56)
conj_as(careful-49, to-56)
det(conventional-58, the-57)
pobj(to-56, conventional-58)
nsubj(ready-64, they-60)
nsubj(fall-66, they-60)
cop(ready-64, were-61)
neg(ready-64, not-62)
advmod(ready-64, very-63)
conj_and(disappointed-23, ready-64)
aux(fall-66, to-65)
xcomp(ready-64, fall-66)
prep_in(fall-66, love-68)

(ROOT
  (S
    (NP (JJ Such) (NNS people))
    (VP (MD may)
      (VP
        (VP (VB learn)
          (NP
            (NP (DT all))
            (PP (IN about)
              (NP (DT each) (JJ other)))))
        (, ,)
        (CC and)
        (RB not)
        (VP (VB come)
          (ADVP (RB near) (RB enough))
          (PP (IN for)
            (NP (NN love)))
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ possible)
                  (PP (IN between)
                    (NP (PRP them))))))))))
    (. .)))

amod(people-2, Such-1)
nsubj(learn-4, people-2)
nsubj(come-12, people-2)
nsubj(possible-19, people-2)
aux(learn-4, may-3)
root(ROOT-0, learn-4)
dobj(learn-4, all-5)
det(other-8, each-7)
prep_about(all-5, other-8)
neg(come-12, not-11)
conj_and(learn-4, come-12)
advmod(enough-14, near-13)
advmod(come-12, enough-14)
prep_for(come-12, love-16)
aux(possible-19, to-17)
cop(possible-19, be-18)
xcomp(come-12, possible-19)
prep_between(possible-19, them-21)

(ROOT
  (S
    (NP (DT Some) (NNS people))
    (VP (JJ approximate)
      (PP (IN at)
        (NP
          (UCP
            (ADVP (RB once))
            (, ,)
            (CC and)
            (PP (IN at)
              (NP (RB once))))
          (NN decline)))
      (PP (TO to)
        (NP
          (NP (NN love))
          (, ,)
          (NP
            (NP (JJ remaining) (NNS friends))
            (NP
              (NP (DT the) (NN rest))
              (PP (IN of)
                (NP (PRP$ their) (NNS lives))))))))
    (. .)))

det(people-2, Some-1)
nsubj(approximate-3, people-2)
root(ROOT-0, approximate-3)
advmod(decline-10, once-5)
conj_and(once-5, at-8)
advmod(decline-10, at-8)
pobj(at-8, once-9)
prep_at(approximate-3, decline-10)
prep_to(approximate-3, love-12)
amod(friends-15, remaining-14)
appos(love-12, friends-15)
det(rest-17, the-16)
dep(friends-15, rest-17)
poss(lives-20, their-19)
prep_of(rest-17, lives-20)

(ROOT
  (S
    (S
      (NP (NNS Others))
      (VP (VBP love)
        (ADVP (IN at) (RB once))))
    (: ;)
    (CC and)
    (S
      (NP (DT some))
      (VP (VBP take)
        (NP (DT a) (JJ whole) (JJ married) (NN life))
        (S
          (VP (TO to)
            (VP (VB come)
              (PP
                (PP (IN near)
                  (NP (RB enough)))
                (, ,)
                (CC and)
                (PP (IN at)
                  (NP (JJ last) (NN love)))))))))
    (. .)))

nsubj(love-2, Others-1)
root(ROOT-0, love-2)
advmod(love-2, at-3)
advmod(at-3, once-4)
nsubj(take-8, some-7)
conj_and(love-2, take-8)
det(life-12, a-9)
amod(life-12, whole-10)
amod(life-12, married-11)
dobj(take-8, life-12)
aux(come-14, to-13)
vmod(take-8, come-14)
prep(come-14, near-15)
pobj(near-15, enough-16)
prep(come-14, at-19)
conj_and(near-15, at-19)
amod(love-21, last-20)
pobj(at-19, love-21)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NNS reactions))
      (PP (IN of)
        (NP (NN need)
          (CC and)
          (NN ministration))))
    (VP (MD can)
      (ADVP (RB hardly))
      (VP (VB fail)
        (S
          (VP (TO to)
            (VP
              (VP (VB breed)
                (NP (NN tenderness)))
              (, ,)
              (CC and)
              (VP (VB disclose)
                (NP
                  (NP (DT the) (JJS best) (NNS points))
                  (PP (IN of)
                    (NP (NN character))))))))))
    (. .)))

cc(fail-10, But-1)
det(reactions-3, the-2)
nsubj(fail-10, reactions-3)
nsubj(breed-12, reactions-3)
nsubj(disclose-16, reactions-3)
prep_of(reactions-3, need-5)
prep_of(reactions-3, ministration-7)
conj_and(need-5, ministration-7)
aux(fail-10, can-8)
advmod(fail-10, hardly-9)
root(ROOT-0, fail-10)
aux(breed-12, to-11)
xcomp(fail-10, breed-12)
dobj(breed-12, tenderness-13)
xcomp(fail-10, disclose-16)
conj_and(breed-12, disclose-16)
det(points-19, the-17)
amod(points-19, best-18)
dobj(disclose-16, points-19)
prep_of(points-19, character-21)

(ROOT
  (S
    (NP (DT The) (NNS cousins))
    (VP (VBD were)
      (NP
        (NP (DT both) (JJ handsome))
        (, ,)
        (CC and)
        (PRN (: --)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (PP (IN of)
                  (NP (JJR more) (NN consequence))))))
          (: --))
        (NP
          (NP (DT each) (NN thought))
          (NP (DT the) (JJ other) (NN handsome)))))
    (. .)))

det(cousins-2, The-1)
nsubj(handsome-5, cousins-2)
cop(handsome-5, were-3)
det(handsome-5, both-4)
root(ROOT-0, handsome-5)
nsubj(was-10, which-9)
dep(handsome-5, was-10)
amod(consequence-13, more-12)
prep_of(was-10, consequence-13)
det(thought-16, each-15)
conj_and(handsome-5, thought-16)
det(handsome-19, the-17)
amod(handsome-19, other-18)
dep(thought-16, handsome-19)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD found)
        (S
          (NP (PRP$ their) (JJ religious) (NNS opinions))
          (ADJP (RB closely) (JJ coincident)))))
    (: --)
    (CC nor)
    (S
      (NP
        (NP (DT any) (NN wonder))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP they))
            (VP (VBD had)
              (VP (VBN gone)
                (PP (IN for)
                  (NP
                    (NP (NNS years))
                    (PP (TO to)
                      (NP (DT the) (JJ same) (NN church)))))
                (NP (DT every) (NNP Sunday))))))
        (, ,))
      (VP
        (VP (VBD had)
          (VP (VBN been)
            (VP
              (ADVP (RB regularly))
              (VBN pumped)
              (PP (RP upon)
                (PP (IN from)
                  (NP (DT the) (JJ same) (NN reservoir)))))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (S
            (ADJP (JJ drunk))
            (NP
              (NP (DT the) (JJ same) (NNS arguments))
              (PP (VBG concerning)
                (NP
                  (NP (NNS things))
                  (ADJP (JJ true)
                    (CC and)
                    (JJ untrue)))))))))
    (. .)))

nsubj(found-2, They-1)
root(ROOT-0, found-2)
poss(opinions-5, their-3)
amod(opinions-5, religious-4)
nsubj(coincident-7, opinions-5)
advmod(coincident-7, closely-6)
xcomp(found-2, coincident-7)
det(wonder-11, any-10)
nsubjpass(pumped-29, wonder-11)
nsubjpass(had-37, wonder-11)
mark(gone-16, for-13)
nsubj(gone-16, they-14)
aux(gone-16, had-15)
dep(wonder-11, gone-16)
prep_for(gone-16, years-18)
det(church-22, the-20)
amod(church-22, same-21)
prep_to(years-18, church-22)
det(Sunday-24, every-23)
tmod(gone-16, Sunday-24)
aux(pumped-29, had-26)
auxpass(pumped-29, been-27)
advmod(pumped-29, regularly-28)
conj_nor(found-2, pumped-29)
prep(pumped-29, upon-30)
det(reservoir-34, the-32)
amod(reservoir-34, same-33)
prep_from(upon-30, reservoir-34)
conj_nor(found-2, had-37)
conj_and(pumped-29, had-37)
acomp(had-37, drunk-38)
det(arguments-41, the-39)
amod(arguments-41, same-40)
dep(drunk-38, arguments-41)
prep_concerning(arguments-41, things-43)
amod(things-43, true-44)
amod(things-43, untrue-46)
conj_and(true-44, untrue-46)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD found)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (NNP Alexa))
            (VP (VBD had)
              (NP
                (NP (RB plenty))
                (PP (IN of)
                  (NP
                    (NP
                      (NP (NNS brains))
                      (, ,)
                      (NP (DT a) (VBN cultivated) (NN judgment))
                      (, ,))
                    (CC and)
                    (NP
                      (NP (DT some) (NN knowledge))
                      (PP (IN of)
                        (NP (NN literature))))))))))
        (: ;)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP
                (NP (DT no) (NN branch))
                (PP (IN of)
                  (NP (NN science)))
                (SBAR
                  (WHPP (IN with)
                    (WHNP (WDT which)))
                  (S
                    (NP (PRP she))
                    (VP (VBD had)
                      (NP
                        (NP (RB not) (DT some) (JJ little) (NN acquaintance))
                        (, ,)
                        (SBAR
                          (WHPP (IN in)
                            (WHNP (WDT which)))
                          (S
                            (NP (PRP she))
                            (VP (VBD did) (RB not)
                              (VP (VB take)
                                (NP (DT some) (JJ small) (NN interest))))))))))))))))
    (. .)))

nsubj(found-2, George-1)
root(ROOT-0, found-2)
mark(had-5, that-3)
nsubj(had-5, Alexa-4)
dep(found-2, had-5)
dobj(had-5, plenty-6)
prep_of(plenty-6, brains-8)
det(judgment-12, a-10)
amod(judgment-12, cultivated-11)
appos(brains-8, judgment-12)
det(knowledge-16, some-15)
prep_of(plenty-6, knowledge-16)
conj_and(brains-8, knowledge-16)
prep_of(knowledge-16, literature-18)
mark(was-22, that-20)
expl(was-22, there-21)
dep(had-5, was-22)
neg(branch-24, no-23)
nsubj(was-22, branch-24)
prep_with(had-30, branch-24)
prep_of(branch-24, science-26)
nsubj(had-30, she-29)
rcmod(branch-24, had-30)
neg(acquaintance-34, not-31)
det(acquaintance-34, some-32)
amod(acquaintance-34, little-33)
dobj(had-30, acquaintance-34)
prep_in(take-41, acquaintance-34)
nsubj(take-41, she-38)
aux(take-41, did-39)
neg(take-41, not-40)
rcmod(acquaintance-34, take-41)
det(interest-44, some-42)
amod(interest-44, small-43)
dobj(take-41, interest-44)

(ROOT
  (S
    (NP
      (NP (PRP$ Her) (NN father) (POS 's))
      (NN teaching))
    (VP (VBD was)
      (ADVP (IN beyond) (DT any))
      (SBAR
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could)
              (VP (VB have)
                (VP (VBN procured)
                  (PP (IN for)
                    (NP (PRP her))))))))
        (, ,)
        (CC and)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (VP (VBD taught)
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (VBD had)
                    (VP (VBN learned))))))
            (: ;)
            (SBAR (IN for)
              (S
                (NP (PRP she))
                (VP (VBD had)
                  (NP
                    (NP
                      (NP (DT a) (NN love))
                      (PP (IN of)
                        (S
                          (VP (VBG knowing)))))
                    (, ,)
                    (NP
                      (NP (DT a) (NN tendency))
                      (PP (TO to)
                        (NP
                          (NP (NN growth))
                          (, ,)
                          (NP
                            (NP (DT a) (NN capacity))
                            (PP (IN for)
                              (S
                                (VP (VBG seizing)
                                  (NP (JJ real) (NNS points))))))))))
                  (, ,)
                  (PP
                    (ADVP (RB though))
                    (IN as)
                    (S
                      (VP
                        (ADVP (RB yet))
                        (VBG perceiving)
                        (ADVP (JJ next)
                          (PP (TO to)
                            (NP
                              (NP (NN nothing))
                              (PP (IN of)
                                (NP (PRP$ their) (NN relation))))))
                        (PP (TO to)
                          (NP (JJ human) (NN life)
                            (CC and)
                            (NN hope)))))))))))))
    (. .)))

poss(father-2, Her-1)
poss(teaching-4, father-2)
nsubj(was-5, teaching-4)
root(ROOT-0, was-5)
advmod(was-5, beyond-6)
dep(beyond-6, any-7)
nsubj(procured-11, he-8)
aux(procured-11, could-9)
aux(procured-11, have-10)
dep(was-5, procured-11)
prep_for(procured-11, her-13)
dobj(taught-18, what-16)
nsubj(taught-18, he-17)
dep(was-5, taught-18)
conj_and(procured-11, taught-18)
nsubj(learned-21, she-19)
aux(learned-21, had-20)
ccomp(taught-18, learned-21)
mark(had-25, for-23)
nsubj(had-25, she-24)
parataxis(taught-18, had-25)
det(love-27, a-26)
dobj(had-25, love-27)
prepc_of(love-27, knowing-29)
det(tendency-32, a-31)
appos(love-27, tendency-32)
prep_to(tendency-32, growth-34)
det(capacity-37, a-36)
appos(growth-34, capacity-37)
prepc_for(capacity-37, seizing-39)
amod(points-41, real-40)
dobj(seizing-39, points-41)
advmod(had-25, though-43)
advmod(perceiving-46, yet-45)
prepc_as(had-25, perceiving-46)
prep_next_to(perceiving-46, nothing-49)
poss(relation-52, their-51)
prep_of(nothing-49, relation-52)
amod(life-55, human-54)
prep_to(perceiving-46, life-55)
prep_to(perceiving-46, hope-57)
conj_and(life-55, hope-57)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD believed)
        (S
          (NP (PRP herself))
          (NP
            (NP (DT a) (NN judge))
            (PP (IN of)
              (NP (NN verse)))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (NN truth)))
      (NP
        (NP (PRP$ her) (NN knowledge))
        (PP (IN of)
          (NP (NN poetry))))
      (VP (VBD was)
        (VP (VBN limited)
          (PP (TO to)
            (NP
              (NP (PRP$ its) (JJ outer) (NNS forms))
              (, ,)
              (SBAR
                (WHPP (IN of)
                  (WHNP (WDT which)))
                (S
                  (NP (PRP she))
                  (VP (VBD had)
                    (VP (VBN made)
                      (NP (JJ good) (NNS studies))
                      (PP (IN with)
                        (NP (PRP$ her) (NN father))))))))))))
    (. .)))

nsubj(believed-2, She-1)
root(ROOT-0, believed-2)
nsubj(judge-5, herself-3)
det(judge-5, a-4)
xcomp(believed-2, judge-5)
prep_of(judge-5, verse-7)
prep_in(limited-17, truth-11)
poss(knowledge-13, her-12)
nsubjpass(limited-17, knowledge-13)
prep_of(knowledge-13, poetry-15)
auxpass(limited-17, was-16)
conj_but(believed-2, limited-17)
poss(forms-21, its-19)
amod(forms-21, outer-20)
prep_to(limited-17, forms-21)
prep_of(made-27, forms-21)
nsubj(made-27, she-25)
aux(made-27, had-26)
rcmod(forms-21, made-27)
amod(studies-29, good-28)
dobj(made-27, studies-29)
poss(father-32, her-31)
prep_with(made-27, father-32)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (VP (VBN learned)
        (NP (DT the) (NN _))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (NNP _))
            (VP
              (VP
                (PP (IN before)
                  (NP
                    (NP (DT the) (NN _))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ _))))))
                (, ,) (VBD knew)
                (NP
                  (NP (DT the) (NN body))
                  (PP (IN before)
                    (NP (DT the) (NN soul)))))
              (: --)
              (VP (MD could)
                (VP (VB tell)
                  (NP (JJ good)
                    (ADJP (JJ binding)
                      (CONJP (CC but)
                        (RB not))
                      (JJ bad))
                    (NN leather))))
              (: --)
              (VP
                (PP (IN in)
                  (NP (DT a) (NN word)))
                (, ,) (VBD knew)
                (NP
                  (NP (NN verse))
                  (CONJP (CC but)
                    (RB not))
                  (NP (NN poetry)))))))))
    (. .)))

nsubj(learned-3, She-1)
aux(learned-3, had-2)
root(ROOT-0, learned-3)
det(_-5, the-4)
dobj(learned-3, _-5)
advmod(knew-14, how-6)
nsubj(knew-14, _-7)
det(_-10, the-9)
nsubj(_-12, _-10)
prep_before(knew-14, _-10)
rcmod(_-10, _-12)
dep(learned-3, knew-14)
det(body-16, the-15)
dobj(knew-14, body-16)
det(soul-19, the-18)
prep_before(body-16, soul-19)
aux(tell-22, could-21)
dep(knew-14, tell-22)
amod(leather-28, good-23)
amod(leather-28, binding-24)
conj_negcc(binding-24, bad-27)
amod(leather-28, bad-27)
dobj(tell-22, leather-28)
det(word-32, a-31)
prep_in(knew-34, word-32)
dep(knew-14, knew-34)
dobj(knew-34, verse-35)
dobj(knew-34, poetry-38)
conj_negcc(verse-35, poetry-38)

(ROOT
  (S
    (S
      (S
        (NP (PRP She))
        (VP (VBD understood)
          (NP
            (NP (NN nothing))
            (PP (IN of)
              (NP (NN music))))))
      (, ,)
      (CC but)
      (S
        (NP (NNP George))
        (VP (VBD did) (RB not)
          (VP (VB miss)
            (NP (DT that))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (RBR more) (JJ sorry)
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD did) (RB not)
                (VP (VB know)
                  (ADVP (JJ French))
                  (: --)
                  (PP (RB not)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN sake))
                        (PP (IN of)
                          (NP (PRP$ its) (NN literature)))))
                    (, ,)
                    (CC but)
                    (RB because)
                    (PP (IN of)
                      (S
                        (VP (VBG showing)
                          (NP (PRP herself)))))))))))
        (X
          (NP (DT an) (VBN educated) (NN woman)))))
    (. .)))

nsubj(understood-2, She-1)
root(ROOT-0, understood-2)
dobj(understood-2, nothing-3)
prep_of(nothing-3, music-5)
nsubj(miss-11, George-8)
aux(miss-11, did-9)
neg(miss-11, not-10)
conj_but(understood-2, miss-11)
dobj(miss-11, that-12)
nsubj(sorry-17, he-14)
cop(sorry-17, was-15)
advmod(sorry-17, more-16)
parataxis(understood-2, sorry-17)
nsubj(know-21, she-18)
aux(know-21, did-19)
neg(know-21, not-20)
ccomp(sorry-17, know-21)
advmod(know-21, French-22)
neg(for-25, not-24)
prep(know-21, for-25)
det(sake-27, the-26)
pobj(for-25, sake-27)
poss(literature-30, its-29)
prep_of(sake-27, literature-30)
prep(know-21, because-33)
conj_but(for-25, because-33)
dep(for-25, of-34)
pcomp(of-34, showing-35)
dobj(showing-35, herself-36)
det(woman-39, an-37)
amod(woman-39, educated-38)
dep(sorry-17, woman-39)

(ROOT
  (S
    (NP
      (NP (NNP Diligent))
      (PP (IN in)
        (NP (NN business))))
    (, ,)
    (SBAR (RB not)
      (S
        (ADJP (JJ fervent))
        (PP (IN in)
          (NP (NN spirit)))))
    (, ,)
    (NP (PRP she))
    (VP (VBD was)
      (ADVP (RB never))
      (ADJP (JJ idle)))
    (. .)))

nsubj(idle-13, Diligent-1)
prep_in(Diligent-1, business-3)
dep(fervent-6, not-5)
advcl(idle-13, fervent-6)
dep(fervent-6, in-7)
pobj(in-7, spirit-8)
nsubj(idle-13, she-10)
cop(idle-13, was-11)
neg(idle-13, never-12)
root(ROOT-0, idle-13)

(ROOT
  (S (CC But)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (JJ other) (NNS ways))
        (PP (IN than)
          (NP
            (NP (NNS idleness))
            (PP (IN of)
              (NP (NN wasting) (NN time)))))))
    (. .)))

cc(are-3, But-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
amod(ways-5, other-4)
nsubj(are-3, ways-5)
prep_than(ways-5, idleness-7)
nn(time-10, wasting-9)
prep_of(idleness-7, time-10)

(ROOT
  (S
    (S
      (S
        (NP (NNP Alexa))
        (VP (VBD was)
          (ADVP (RB continually))
          (VP (`` ``) (VBG improving)
            (NP (PRP herself)))))
      (, ,) ('' '')
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP
            (NP (DT a) (JJ big) (NN phrase))
            (PP (IN for)
              (NP (DT a) (JJ small) (NN matter)))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD had) (RB not)
        (VP (VBN learned)
          (SBAR (IN that)
            (S
              (S
                (VP (TO to)
                  (VP (VB do)
                    (NP
                      (NP (DT the) (NN will))
                      (PP (IN of)
                        (NP (NNP God)))))))
              (VP (VBZ is)
                (NP
                  (NP (DT the) (JJ _) (JJ only) (NN _) (NN way))
                  (SBAR
                    (S
                      (VP (TO to)
                        (VP (VB improve)
                          (NP
                            (NP (CD one) (POS 's))
                            (NN self)))))))))))))
    (. .)))

nsubj(improving-5, Alexa-1)
aux(improving-5, was-2)
advmod(improving-5, continually-3)
root(ROOT-0, improving-5)
dobj(improving-5, herself-6)
nsubj(phrase-14, it-10)
cop(phrase-14, was-11)
det(phrase-14, a-12)
amod(phrase-14, big-13)
conj_but(improving-5, phrase-14)
det(matter-18, a-16)
amod(matter-18, small-17)
prep_for(phrase-14, matter-18)
nsubj(learned-23, she-20)
aux(learned-23, had-21)
neg(learned-23, not-22)
parataxis(improving-5, learned-23)
mark(way-36, that-24)
aux(do-26, to-25)
csubj(way-36, do-26)
det(will-28, the-27)
dobj(do-26, will-28)
prep_of(will-28, God-30)
cop(way-36, is-31)
det(way-36, the-32)
amod(way-36, _-33)
amod(way-36, only-34)
nn(way-36, _-35)
ccomp(learned-23, way-36)
aux(improve-38, to-37)
vmod(way-36, improve-38)
poss(self-41, one-39)
dobj(improve-38, self-41)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN scorned)
          (NP
            (NP (DT the) (NNS narrowness))
            (PP (IN of)
              (NP
                (NP (DT any) (NN one))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD told)
                      (NP (PRP her))
                      (ADVP (RB so))
                      (, ,)
                      (S (RB not)
                        (VP (VBG understanding)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP
                                (NP (DT the) (NN will))
                                (PP (IN of)
                                  (NP (NNP God))))
                              (VP (VBZ means)))))))))))))))
    (. .)))

nsubj(scorned-4, She-1)
aux(scorned-4, would-2)
aux(scorned-4, have-3)
root(ROOT-0, scorned-4)
det(narrowness-6, the-5)
dobj(scorned-4, narrowness-6)
det(one-9, any-8)
prep_of(narrowness-6, one-9)
nsubj(told-11, one-9)
rcmod(one-9, told-11)
dobj(told-11, her-12)
advmod(told-11, so-13)
neg(understanding-16, not-15)
vmod(told-11, understanding-16)
dobj(means-22, what-17)
det(will-19, the-18)
nsubj(means-22, will-19)
prep_of(will-19, God-21)
ccomp(understanding-16, means-22)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD found)
        (SBAR (IN that)
          (S
            (NP (PRP$ her) (NN guest)
              (CC and)
              (NN cousin))
            (VP (VBD was)
              (NP
                (NP (DT a) (NN man))
                (PP (IN of)
                  (NP (DT some) (NN position))))))))
      (, ,)
      (CC and)
      (VP (VBD wondered)
        (SBAR (IN that)
          (S
            (NP (PRP$ her) (NN father))
            (VP (MD should)
              (ADVP (RB never))
              (VP (VB have)
                (VP (VBN mentioned)
                  (NP (DT the) (NN relationship)))))))))
    (. .)))

nsubj(found-2, She-1)
nsubj(wondered-16, She-1)
root(ROOT-0, found-2)
mark(man-10, that-3)
poss(guest-5, her-4)
nsubj(man-10, guest-5)
conj_and(guest-5, cousin-7)
nsubj(man-10, cousin-7)
cop(man-10, was-8)
det(man-10, a-9)
ccomp(found-2, man-10)
det(position-13, some-12)
prep_of(man-10, position-13)
conj_and(found-2, wondered-16)
mark(mentioned-23, that-17)
poss(father-19, her-18)
nsubj(mentioned-23, father-19)
aux(mentioned-23, should-20)
neg(mentioned-23, never-21)
aux(mentioned-23, have-22)
ccomp(wondered-16, mentioned-23)
det(relationship-25, the-24)
dobj(mentioned-23, relationship-25)

(ROOT
  (S
    (S
      (NP (DT The) (NN fact))
      (VP (VBD was)
        (SBAR (IN that)
          (S (, ,)
            (PP (IN in)
              (NP
                (NP (DT a) (NN time))
                (PP (IN of)
                  (NP (NN poverty)))))
            (, ,)
            (NP (DT the) (NN school-master))
            (VP (VBD had)
              (VP (VBN made)
                (PP (TO to)
                  (NP
                    (NP
                      (NP (NNP George) (POS 's))
                      (NN father))
                    (NP
                      (NP (DT the) (JJ absurd) (NN request))
                      (PP (IN of)
                        (NP (DT a) (JJ small) (NN loan))))))
                (PP (IN without)
                  (NP (NN security)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN banker))
      (VP (VBD had)
        (VP (VBD behaved)
          (SBAR (IN as)
            (S
              (NP
                (NP (DT a) (JJ rich) (NN relation))
                (CC and)
                (NP (DT a) (NN banker)))
              (VP (VBD was)
                (ADJP (RB pretty) (JJ sure)
                  (S
                    (VP (TO to)
                      (VP (VB behave)))))))))))
    (. .)))

det(fact-2, The-1)
nsubj(was-3, fact-2)
root(ROOT-0, was-3)
mark(made-15, that-4)
det(time-8, a-7)
prep_in(made-15, time-8)
prep_of(time-8, poverty-10)
det(school-master-13, the-12)
nsubj(made-15, school-master-13)
aux(made-15, had-14)
ccomp(was-3, made-15)
poss(father-19, George-17)
prep_to(made-15, father-19)
det(request-22, the-20)
amod(request-22, absurd-21)
dep(father-19, request-22)
det(loan-26, a-24)
amod(loan-26, small-25)
prep_of(request-22, loan-26)
prep_without(made-15, security-28)
det(banker-32, the-31)
nsubj(behaved-34, banker-32)
aux(behaved-34, had-33)
conj_and(was-3, behaved-34)
mark(sure-44, as-35)
det(relation-38, a-36)
amod(relation-38, rich-37)
nsubj(sure-44, relation-38)
nsubj(behave-46, relation-38)
det(banker-41, a-40)
conj_and(relation-38, banker-41)
nsubj(sure-44, banker-41)
nsubj(behave-46, banker-41)
cop(sure-44, was-42)
advmod(sure-44, pretty-43)
advcl(behaved-34, sure-44)
aux(behave-46, to-45)
xcomp(sure-44, behave-46)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD occupied)
        (NP (DT a) (NN place))
        (PP (IN of)
          (NP (NN trust)))
        (PP (IN in)
          (NP (DT the) (NN bank)))
        (, ,))
      (CC and)
      (PRN (, ,)
        (ADVP (RB though))
        (RB not)
        (VP
          (ADVP (RB yet))
          (VBN admitted)
          (PP (TO to)
            (NP
              (NP (DT a) (JJ full) (NN knowledge))
              (PP (IN of)
                (NP (PRP$ its)
                  (ADJP (RBR more) (JJ important))
                  (NNS transactions))))))
        (, ,))
      (VP (VBN hoped)
        (ADVP (RB soon))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN made)
                (NP (DT a) (NN partner))))))))
    (. .)))

nsubj(occupied-2, George-1)
nsubj(hoped-27, George-1)
nsubjpass(made-31, George-1)
root(ROOT-0, occupied-2)
det(place-4, a-3)
dobj(occupied-2, place-4)
prep_of(occupied-2, trust-6)
det(bank-9, the-8)
prep_in(occupied-2, bank-9)
dep(admitted-16, though-13)
dep(admitted-16, not-14)
advmod(admitted-16, yet-15)
dep(occupied-2, admitted-16)
det(knowledge-20, a-18)
amod(knowledge-20, full-19)
prep_to(admitted-16, knowledge-20)
poss(transactions-25, its-22)
advmod(important-24, more-23)
amod(transactions-25, important-24)
prep_of(knowledge-20, transactions-25)
conj_and(occupied-2, hoped-27)
advmod(hoped-27, soon-28)
aux(made-31, to-29)
auxpass(made-31, be-30)
xcomp(hoped-27, made-31)
det(partner-33, a-32)
dobj(made-31, partner-33)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP$ his) (NN father))
          (VP (VBD came)
            (PP (TO to)
              (NP (NNP Potlurg)))
            (S
              (VP (TO to)
                (VP (VB see)
                  (NP (PRP him))))))))
      (NP (DT the) (NN laird))
      (VP (VBD declined)
        (S
          (VP (TO to)
            (VP (VB appear))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN banker))
      (VP (VBD contented)
        (NP (PRP himself))
        (ADVP (RB thereafter))
        (PP (IN with)
          (NP
            (NP (NNP Alexa) (POS 's))
            (NNS bulletins)))))
    (. .)))

advmod(came-4, When-1)
poss(father-3, his-2)
nsubj(came-4, father-3)
nsubj(see-8, father-3)
advcl(declined-12, came-4)
prep_to(came-4, Potlurg-6)
aux(see-8, to-7)
xcomp(came-4, see-8)
dobj(see-8, him-9)
det(laird-11, the-10)
nsubj(declined-12, laird-11)
nsubj(appear-14, laird-11)
root(ROOT-0, declined-12)
aux(appear-14, to-13)
xcomp(declined-12, appear-14)
det(banker-18, the-17)
nsubj(contented-19, banker-18)
conj_and(declined-12, contented-19)
dobj(contented-19, himself-20)
advmod(contented-19, thereafter-21)
poss(bulletins-25, Alexa-23)
prep_with(contented-19, bulletins-25)

(ROOT
  (NP (NNP CHAPTER) (NNP VIII) (. .)))

nn(VIII-2, CHAPTER-1)
root(ROOT-0, VIII-2)

(ROOT
  (NP (NNP GEORGE)
    (CC AND)
    (NNP THE) (NNP LAIRD) (. .)))

nn(LAIRD-4, GEORGE-1)
conj_and(GEORGE-1, THE-3)
nn(LAIRD-4, THE-3)
root(ROOT-0, LAIRD-4)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Alexa) (POS 's))
        (NN money))
      (VP (VBD was)
        (VP
          (ADVP (RB nearly))
          (VBN exhausted))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (JJS most))
        (PP (IN of)
          (NP (PRP$ her) (NNS chickens))))
      (VP (VBD had)
        (VP (VBN been)
          (VP
            (VP (VBN devoured)
              (PP (IN by)
                (NP (DT the) (JJ flourishing) (NN convalescent))))
            (, ,)
            (CC but)
            (VP
              (ADVP
                (ADVP (RB not) (RB yet))
                (S (MD would)
                  (NP (DT the) (NN doctor))
                  (VP (VB allow)
                    (S
                      (NP (PRP him))
                      (VP (TO to)
                        (VP (VB return)
                          (PP (TO to)
                            (NP (NN business))))))))))))))
    (. .)))

poss(money-3, Alexa-1)
nsubjpass(exhausted-6, money-3)
auxpass(exhausted-6, was-4)
advmod(exhausted-6, nearly-5)
root(ROOT-0, exhausted-6)
nsubjpass(devoured-15, most-9)
poss(chickens-12, her-11)
prep_of(most-9, chickens-12)
aux(devoured-15, had-13)
auxpass(devoured-15, been-14)
conj_and(exhausted-6, devoured-15)
det(convalescent-19, the-17)
amod(convalescent-19, flourishing-18)
agent(devoured-15, convalescent-19)
dep(yet-23, not-22)
conj_and(exhausted-6, yet-23)
conj_but(devoured-15, yet-23)
dep(allow-27, would-24)
det(doctor-26, the-25)
nsubj(allow-27, doctor-26)
dep(yet-23, allow-27)
dobj(allow-27, him-28)
nsubj(return-30, him-28)
aux(return-30, to-29)
xcomp(allow-27, return-30)
prep_to(return-30, business-32)

(ROOT
  (S
    (S
      (NP (CD One) (NN night))
      (NP
        (NP (DT the) (JJ electric) (NN condition))
        (PP (IN of)
          (NP (DT the) (NN atmosphere))))
      (VP (VBD made)
        (S
          (NP (PRP it))
          (ADJP (JJ heavy) (, ,) (JJ sultry)
            (CC and)
            (JJ unrefreshing)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP George))
      (VP (MD could) (RB not)
        (VP (VB sleep))))
    (. .)))

num(night-2, One-1)
tmod(made-9, night-2)
det(condition-5, the-3)
amod(condition-5, electric-4)
nsubj(made-9, condition-5)
det(atmosphere-8, the-7)
prep_of(condition-5, atmosphere-8)
root(ROOT-0, made-9)
nsubj(heavy-11, it-10)
nsubj(sultry-13, it-10)
nsubj(unrefreshing-15, it-10)
xcomp(made-9, heavy-11)
xcomp(made-9, sultry-13)
conj_and(heavy-11, sultry-13)
xcomp(made-9, unrefreshing-15)
conj_and(heavy-11, unrefreshing-15)
nsubj(sleep-21, George-18)
aux(sleep-21, could-19)
neg(sleep-21, not-20)
conj_and(made-9, sleep-21)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBD came)
          (NP
            (NP (DT a) (JJ terrible) (NN burst))
            (PP (IN of)
              (NP (NN thunder))))))
      (: ;) (RB then)
      (S
        (NP
          (NP (DT a) (JJ bannered) (NN spear))
          (PP (IN of)
            (NP (JJ vividest) (NN lightning))))
        (VP (VBD seemed)
          (S
            (VP (TO to)
              (VP (VB lap)
                (NP
                  (NP (DT the) (NN house))
                  (PP (IN in)
                    (NP (PRP$ its) (JJ flashing) (NNS folds))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJ simultaneous) (NN thunder))
      (VP (VBD was)
        (VP (VBN mingled)
          (PP (IN with)
            (NP
              (NP
                (NP (DT the) (NN sound))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBD seemed))))
                (, ,))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN fall))
                  (PP (IN of)
                    (NP
                      (NP (DT some) (NN part))
                      (PP (IN of)
                        (NP (DT the) (NN building))))))))))))
    (. .)))

expl(came-2, There-1)
root(ROOT-0, came-2)
det(burst-5, a-3)
amod(burst-5, terrible-4)
dobj(came-2, burst-5)
nsubj(came-2, burst-5)
prep_of(burst-5, thunder-7)
advmod(came-2, then-9)
det(spear-12, a-10)
amod(spear-12, bannered-11)
nsubj(seemed-16, spear-12)
nsubj(lap-18, spear-12)
amod(lightning-15, vividest-14)
prep_of(spear-12, lightning-15)
parataxis(came-2, seemed-16)
aux(lap-18, to-17)
xcomp(seemed-16, lap-18)
det(house-20, the-19)
dobj(lap-18, house-20)
poss(folds-24, its-22)
amod(folds-24, flashing-23)
prep_in(house-20, folds-24)
det(thunder-29, the-27)
amod(thunder-29, simultaneous-28)
nsubjpass(mingled-31, thunder-29)
auxpass(mingled-31, was-30)
conj_and(came-2, mingled-31)
det(sound-34, the-33)
prep_with(mingled-31, sound-34)
mark(seemed-38, as-36)
nsubj(seemed-38, it-37)
rcmod(sound-34, seemed-38)
det(fall-42, the-41)
prep_of(sound-34, fall-42)
det(part-45, some-44)
prep_of(fall-42, part-45)
det(building-48, the-47)
prep_of(part-45, building-48)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD sat)
        (PRT (RP up))
        (PP (IN in)
          (NP (NN bed))))
      (CC and)
      (VP (VBD listened)))
    (. .)))

nsubj(sat-2, George-1)
nsubj(listened-7, George-1)
root(ROOT-0, sat-2)
prt(sat-2, up-3)
prep_in(sat-2, bed-5)
conj_and(sat-2, listened-7)

(ROOT
  (S
    (NP (DT All))
    (VP (VBD was)
      (ADVP (RB still)))
    (. .)))

nsubj(was-2, All-1)
root(ROOT-0, was-2)
advmod(was-2, still-3)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must)
      (VP (VB rise)
        (CC and)
        (VB see)
        (SBAR
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD had)
                (VP (VBN happened)))))
          (, ,)
          (CC and)
          (SBAR (IN whether)
            (S
              (NP (DT any) (NN one))
              (VP (VBD was)
                (VP (VBN hurt))))))))
    (. .)))

nsubj(rise-3, He-1)
nsubj(see-5, He-1)
aux(rise-3, must-2)
root(ROOT-0, rise-3)
conj_and(rise-3, see-5)
nsubj(happened-8, what-6)
aux(happened-8, had-7)
ccomp(rise-3, happened-8)
mark(hurt-15, whether-11)
det(one-13, any-12)
nsubjpass(hurt-15, one-13)
auxpass(hurt-15, was-14)
ccomp(rise-3, hurt-15)
conj_and(happened-8, hurt-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD might)
        (VP (VB meet)
          (NP (NNP Alexa)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT a) (NN talk))
        (PP (IN with)
          (NP (PRP her))))
      (VP (MD would)
        (VP (VB be)
          (NP (DT a) (JJ pleasant) (NN episode))
          (PP (IN in)
            (NP (PRP$ his) (NNS sleepless)))
          (NP (NN night)))))
    (. .)))

nsubj(meet-3, He-1)
aux(meet-3, might-2)
root(ROOT-0, meet-3)
dobj(meet-3, Alexa-4)
det(talk-8, a-7)
nsubj(episode-15, talk-8)
prep_with(talk-8, her-10)
aux(episode-15, would-11)
cop(episode-15, be-12)
det(episode-15, a-13)
amod(episode-15, pleasant-14)
conj_and(meet-3, episode-15)
poss(sleepless-18, his-17)
prep_in(episode-15, sleepless-18)
tmod(episode-15, night-19)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD got)
        (PP (IN into)
          (NP (PRP$ his) (NN dressing-gown))))
      (, ,)
      (CC and)
      (VP
        (S
          (VP (VBG taking)
            (NP (PRP$ his) (NN stick))))
        (, ,)
        (VP (VBD walked)
          (ADVP (RB softly))
          (PP (IN from)
            (NP (DT the) (NN room))))))
    (. .)))

nsubj(got-2, He-1)
nsubj(walked-12, He-1)
root(ROOT-0, got-2)
poss(dressing-gown-5, his-4)
prep_into(got-2, dressing-gown-5)
xcomp(walked-12, taking-8)
poss(stick-10, his-9)
dobj(taking-8, stick-10)
conj_and(got-2, walked-12)
advmod(walked-12, softly-13)
det(room-16, the-15)
prep_from(walked-12, room-16)

(ROOT
  (S
    (NP (PRP$ His) (NN door))
    (VP (VBD opened)
      (ADVP (RB immediately))
      (PP (IN on)
        (NP
          (NP (DT the) (NN top))
          (PP (IN of)
            (NP (DT the) (NN stair))))))
    (. .)))

poss(door-2, His-1)
nsubj(opened-3, door-2)
root(ROOT-0, opened-3)
advmod(opened-3, immediately-4)
det(top-7, the-6)
prep_on(opened-3, top-7)
det(stair-10, the-9)
prep_of(top-7, stair-10)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD stood))
      (CC and)
      (VP (VBD listened))
      (, ,)
      (CC but)
      (VP (VBD was)
        (ADJP (JJ aware)
          (PP (IN of)
            (NP (DT no) (NN sequel))))
        (PP (TO to)
          (NP (DT the) (NN noise)))))
    (. .)))

nsubj(stood-2, He-1)
nsubj(listened-4, He-1)
nsubj(aware-8, He-1)
root(ROOT-0, stood-2)
conj_and(stood-2, listened-4)
cop(aware-8, was-7)
conj_but(stood-2, aware-8)
neg(sequel-11, no-10)
prep_of(aware-8, sequel-11)
det(noise-14, the-13)
prep_to(aware-8, noise-14)

(ROOT
  (S
    (NP (DT Another) (NN flash))
    (VP
      (VP (VBD came))
      (, ,)
      (CC and)
      (VP (VBD lighted)
        (PRT (RP up))
        (NP (DT the) (NN space))
        (PP (IN around)
          (NP (PRP him)))
        (, ,)
        (PP (IN with)
          (NP
            (NP (PRP$ its) (NNS walls))
            (PP (IN of)
              (NP (JJ many) (NNS angles)))))))
    (. .)))

det(flash-2, Another-1)
nsubj(came-3, flash-2)
nsubj(lighted-6, flash-2)
root(ROOT-0, came-3)
conj_and(came-3, lighted-6)
prt(lighted-6, up-7)
det(space-9, the-8)
dobj(lighted-6, space-9)
prep_around(lighted-6, him-11)
poss(walls-15, its-14)
prep_with(lighted-6, walls-15)
amod(angles-18, many-17)
prep_of(walls-15, angles-18)

(ROOT
  (S
    (SBAR
      (SBAR
        (WHADVP (WRB When))
        (S
          (S
            (NP (DT the) (NNS darkness))
            (VP (VBD was)
              (VP (VBN returned))))
          (CC and)
          (S
            (NP (DT the) (NN dazzling))
            (VP (VBN gone)))))
      (, ,)
      (CC and)
      (SBAR (IN while)
        (S
          (NP (DT the) (NN thunder))
          (ADVP (RB yet))
          (VP (VBD bellowed)))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD caught)
        (NP
          (NP (DT the) (NN glimmer))
          (PP (IN of)
            (NP (DT a) (NN light))))
        (PP (IN under)
          (NP
            (NP (DT the) (NN door))
            (PP (IN of)
              (NP (DT the) (NN study))))))
      (, ,)
      (CC and)
      (VP (VBD made)
        (NP (PRP$ his) (NN way))
        (PP (IN toward)
          (NP (PRP it)))
        (PP (IN over)
          (NP (DT the)
            (ADJP (JJ worn))
            (NNS slabs)))))
    (. .)))

advmod(returned-5, When-1)
det(darkness-3, the-2)
nsubjpass(returned-5, darkness-3)
auxpass(returned-5, was-4)
advcl(caught-19, returned-5)
det(dazzling-8, the-7)
nsubj(gone-9, dazzling-8)
conj_and(returned-5, gone-9)
advcl(caught-19, gone-9)
mark(bellowed-16, while-12)
det(thunder-14, the-13)
nsubj(bellowed-16, thunder-14)
advmod(bellowed-16, yet-15)
conj_and(returned-5, bellowed-16)
advcl(caught-19, bellowed-16)
nsubj(caught-19, he-18)
nsubj(made-33, he-18)
root(ROOT-0, caught-19)
det(glimmer-21, the-20)
dobj(caught-19, glimmer-21)
det(light-24, a-23)
prep_of(glimmer-21, light-24)
det(door-27, the-26)
prep_under(caught-19, door-27)
det(study-30, the-29)
prep_of(door-27, study-30)
conj_and(caught-19, made-33)
poss(way-35, his-34)
dobj(made-33, way-35)
prep_toward(made-33, it-37)
det(slabs-41, the-39)
amod(slabs-41, worn-40)
prep_over(made-33, slabs-41)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD knocked)))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP (DT no) (NN answer))))
    (. .)))

nsubj(knocked-2, He-1)
root(ROOT-0, knocked-2)
expl(was-6, there-5)
conj_but(knocked-2, was-6)
neg(answer-8, no-7)
nsubj(was-6, answer-8)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD pushed)
        (NP (DT the) (NN door)))
      (, ,)
      (CC and)
      (VP (VBD saw)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN light))
            (VP (VBD came)
              (PP (IN from)
                (PP (IN behind)
                  (NP (DT a) (JJ projecting) (NN book-case)))))))))
    (. .)))

nsubj(pushed-2, He-1)
nsubj(saw-7, He-1)
root(ROOT-0, pushed-2)
det(door-4, the-3)
dobj(pushed-2, door-4)
conj_and(pushed-2, saw-7)
mark(came-11, that-8)
det(light-10, the-9)
nsubj(came-11, light-10)
ccomp(saw-7, came-11)
prep(came-11, from-12)
pcomp(from-12, behind-13)
det(book-case-16, a-14)
amod(book-case-16, projecting-15)
pobj(behind-13, book-case-16)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD hesitated)
        (NP (DT a) (NN moment)))
      (, ,)
      (CC and)
      (VP (VBD glanced)
        (PP (IN about)
          (NP (PRP him)))))
    (. .)))

nsubj(hesitated-2, He-1)
nsubj(glanced-7, He-1)
root(ROOT-0, hesitated-2)
det(moment-4, a-3)
dobj(hesitated-2, moment-4)
conj_and(hesitated-2, glanced-7)
prep_about(glanced-7, him-9)

(ROOT
  (S
    (NP (DT A) (JJ little) (NN clinking) (NN sound))
    (VP (VBD came)
      (PP (IN from)
        (NP (RB somewhere))))
    (. .)))

det(sound-4, A-1)
amod(sound-4, little-2)
nn(sound-4, clinking-3)
nsubj(came-5, sound-4)
root(ROOT-0, came-5)
prep(came-5, from-6)
pobj(from-6, somewhere-7)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD stole)
        (S
          (VP (VBG nearer)
            (NP
              (NP (DT the) (NN source))
              (PP (IN of)
                (NP (DT the) (NN light))))))))
    (: ;)
    (S
      (NP (DT a) (NN thief))
      (VP (MD might)
        (VP (VB be)
          (ADVP (RB there)))))
    (. .)))

nsubj(stole-2, He-1)
root(ROOT-0, stole-2)
xcomp(stole-2, nearer-3)
det(source-5, the-4)
dobj(nearer-3, source-5)
det(light-8, the-7)
prep_of(source-5, light-8)
det(thief-11, a-10)
nsubj(be-13, thief-11)
aux(be-13, might-12)
parataxis(stole-2, be-13)
advmod(be-13, there-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD peeped)
      (VP (VB round)
        (NP
          (NP (DT the) (NN end))
          (PP (IN of)
            (NP (DT the) (NN book-case))))))
    (. .)))

nsubj(peeped-2, He-1)
root(ROOT-0, peeped-2)
xcomp(peeped-2, round-3)
det(end-5, the-4)
dobj(round-3, end-5)
det(book-case-8, the-7)
prep_of(end-5, book-case-8)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (PRP$ his) (NN back))
        (PP (TO to)
          (NP (PRP him)))))
    (NP (DT the) (NN laird))
    (VP (VBD was)
      (VP (VBG kneeling)
        (PP (IN before)
          (NP (DT an) (JJ open) (NN chest)))))
    (. .)))

poss(back-3, his-2)
prep_with(kneeling-9, back-3)
prep_to(back-3, him-5)
det(laird-7, the-6)
nsubj(kneeling-9, laird-7)
aux(kneeling-9, was-8)
root(ROOT-0, kneeling-9)
det(chest-13, an-11)
amod(chest-13, open-12)
prep_before(kneeling-9, chest-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (ADVP (RB just))
      (VP
        (VP (VBN counted)
          (NP
            (NP (DT a) (JJ few) (NNS pieces))
            (PP (IN of)
              (NP (NN gold)))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (VP (VBG putting)
            (NP (PRP them))
            (PRT (RP away))))))
    (. .)))

nsubj(counted-4, He-1)
nsubj(putting-13, He-1)
aux(counted-4, had-2)
advmod(counted-4, just-3)
root(ROOT-0, counted-4)
det(pieces-7, a-5)
amod(pieces-7, few-6)
dobj(counted-4, pieces-7)
prep_of(pieces-7, gold-9)
aux(putting-13, was-12)
conj_and(counted-4, putting-13)
dobj(putting-13, them-14)
prt(putting-13, away-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD turned)
        (PP (IN over)
          (NP (PRP$ his) (NN shoulder)))
        (NP
          (NP (DT a) (NN face))
          (ADJP (RB deathly) (JJ pale)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (PRP$ his) (NNS eyes))
        (PP (IN for)
          (NP (DT a) (NN moment))))
      (VP (VBD stared)
        (ADJP (JJ blank))))
    (. .)))

nsubj(turned-2, He-1)
root(ROOT-0, turned-2)
poss(shoulder-5, his-4)
prep_over(turned-2, shoulder-5)
det(face-7, a-6)
dobj(turned-2, face-7)
advmod(pale-9, deathly-8)
amod(face-7, pale-9)
poss(eyes-13, his-12)
nsubj(stared-17, eyes-13)
det(moment-16, a-15)
prep_for(eyes-13, moment-16)
conj_and(turned-2, stared-17)
acomp(stared-17, blank-18)

(ROOT
  (S (RB Then)
    (PP (IN with)
      (NP (DT a) (JJ shivering) (NN smile)))
    (NP (PRP he))
    (VP (VBD rose))
    (. .)))

advmod(rose-7, Then-1)
det(smile-5, a-3)
amod(smile-5, shivering-4)
prep_with(rose-7, smile-5)
nsubj(rose-7, he-6)
root(ROOT-0, rose-7)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD had)
        (NP
          (NP (DT a) (JJ thin-worn) (NN dressing-gown))
          (PP (IN over)
            (NP (PRP$ his) (NN night-shirt)))))
      (, ,)
      (CC and)
      (VP (VBD looked)
        (NP
          (NP (DT a) (NN thread))
          (PP (IN of)
            (NP (DT a) (NN man))))))
    (. .)))

nsubj(had-2, He-1)
nsubj(looked-11, He-1)
root(ROOT-0, had-2)
det(dressing-gown-5, a-3)
amod(dressing-gown-5, thin-worn-4)
dobj(had-2, dressing-gown-5)
poss(night-shirt-8, his-7)
prep_over(dressing-gown-5, night-shirt-8)
conj_and(had-2, looked-11)
det(thread-13, a-12)
dobj(looked-11, thread-13)
det(man-16, a-15)
prep_of(thread-13, man-16)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP take)
      (NP (PRP me))
      (PP (IN for)
        (NP (DT a) (NN miser))))
    (. ?) ('' '')))

nsubj(take-3, You-2)
root(ROOT-0, take-3)
dobj(take-3, me-4)
det(miser-7, a-6)
prep_for(take-3, miser-7)

(ROOT
  (S
    (NP (PRP he))
    (VP
      (VP (VBD said))
      (, ,)
      (VP (VBZ trembling))
      (, ,)
      (CC and)
      (VP (VBD stood)
        (S
          (VP (VBG expecting)
            (NP (DT an) (NN answer))))))
    (. .)))

nsubj(said-2, he-1)
nsubj(trembling-4, he-1)
nsubj(stood-7, he-1)
root(ROOT-0, said-2)
conj_and(said-2, trembling-4)
conj_and(said-2, stood-7)
xcomp(stood-7, expecting-8)
det(answer-10, an-9)
dobj(expecting-8, answer-10)

(ROOT
  (UCP
    (S
      (NP (NNP Crawford))
      (VP (VBD was)
        (ADJP (VBN bewildered))))
    (: :)
    (SBAR
      (WHNP (WP what))
      (S
        (NP (NN business))
        (VP (VBD had)
          (NP (PRP he))
          (ADVP (RB there)))))
    (. ?)))

nsubjpass(bewildered-3, Crawford-1)
auxpass(bewildered-3, was-2)
root(ROOT-0, bewildered-3)
dobj(had-7, what-5)
nsubj(had-7, business-6)
dep(bewildered-3, had-7)
dobj(had-7, he-8)
advmod(had-7, there-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ _)
        (S (RB not)
          (VP (VBG _)
            (NP (DT a) (NN miser))))))
    (. !) ('' '')))

nsubj(_-4, I-2)
cop(_-4, am-3)
root(ROOT-0, _-4)
neg(_-6, not-5)
dep(_-4, _-6)
det(miser-8, a-7)
dobj(_-6, miser-8)

(ROOT
  (S
    (VP (VBD resumed)
      (NP (DT the) (NN laird)))
    (. .)))

root(ROOT-0, resumed-1)
det(laird-3, the-2)
dobj(resumed-1, laird-3)

(ROOT
  (S (`` ``)
    (NP (DT A) (NN man))
    (VP (MD may)
      (VP (VB count)
        (NP (PRP$ his) (NN money))
        (PP (IN without)
          (S
            (VP (VBG being)
              (NP (DT a) (NN miser)))))))
    (. !) ('' '')))

det(man-3, A-2)
nsubj(count-5, man-3)
aux(count-5, may-4)
root(ROOT-0, count-5)
poss(money-7, his-6)
dobj(count-5, money-7)
cop(miser-11, being-9)
det(miser-11, a-10)
prepc_without(count-5, miser-11)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD stood)
      (CC and)
      (VBD stared) (, ,)
      (ADJP
        (ADJP
          (ADJP
            (ADJP (RB still) (JJ trembling))
            (PRN (, ,)
              (PP (IN at)
                (NP (PRP$ his) (NN guest)))
              (, ,)))
          (CC either)
          (ADJP (RB too) (RB much) (JJ startled)))
        (CC or)
        (ADJP (RB too) (JJ gentle)
          (S
            (VP (TO to)
              (VP (VB find)
                (NP (NN fault))
                (PP (IN with)
                  (NP (PRP$ his) (NN intrusion)))))))))
    (. .)))

nsubj(stood-2, He-1)
nsubj(stared-4, He-1)
root(ROOT-0, stood-2)
conj_and(stood-2, stared-4)
advmod(trembling-7, still-6)
acomp(stood-2, trembling-7)
dep(trembling-7, at-9)
poss(guest-11, his-10)
pobj(at-9, guest-11)
dep(trembling-7, either-13)
advmod(startled-16, too-14)
advmod(startled-16, much-15)
acomp(stood-2, startled-16)
conj_or(trembling-7, startled-16)
advmod(gentle-19, too-18)
acomp(stood-2, gentle-19)
conj_or(trembling-7, gentle-19)
aux(find-21, to-20)
xcomp(gentle-19, find-21)
dobj(find-21, fault-22)
poss(intrusion-25, his-24)
prep_with(find-21, intrusion-25)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VB beg)
        (NP
          (NP (PRP$ your) (NN pardon))
          (, ,)
          (VP (VBN laird)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP George))
    (. .)))

nsubj(beg-3, I-2)
ccomp(said-10, beg-3)
poss(pardon-5, your-4)
dobj(beg-3, pardon-5)
vmod(pardon-5, laird-7)
root(ROOT-0, said-10)
nsubj(said-10, George-11)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD knocked)))
    (, ,)
    (CC but)
    (S
      (S
        (VP (VBG receiving)
          (NP (DT no) (NN answer))))
      (, ,)
      (NP (JJ feared) (NN something))
      (VP (VBD was)
        (ADJP (JJ wrong))))
    (. .) ('' '')))

nsubj(knocked-3, I-2)
root(ROOT-0, knocked-3)
vmod(wrong-13, receiving-6)
neg(answer-8, no-7)
dobj(receiving-6, answer-8)
amod(something-11, feared-10)
nsubj(wrong-13, something-11)
cop(wrong-13, was-12)
conj_but(knocked-3, wrong-13)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB why))
    (SQ (VBP are)
      (NP (PRP you))
      (PP (RB out) (IN of)
        (NP
          (NP (NN bed))
          (: --)
          (CC and)
          (NP
            (NP (PRP you))
            (NP (DT an) (NN invalid))))))
    (. ?) ('' '')))

cc(are-4, But-2)
advmod(are-4, why-3)
root(ROOT-0, are-4)
nsubj(are-4, you-5)
prep_out_of(are-4, bed-8)
prep_out_of(are-4, you-11)
conj_and(bed-8, you-11)
det(invalid-13, an-12)
dep(you-11, invalid-13)

(ROOT
  (S
    (VP (VBN returned)
      (NP (NNP Mr.) (NNP Fordyce)))
    (. .)))

root(ROOT-0, returned-1)
nn(Fordyce-3, Mr.-2)
dobj(returned-1, Fordyce-3)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP
      (VP (VBD heard)
        (NP (DT a) (JJ heavy) (NN fall)))
      (, ,)
      (CC and)
      (VP (VBD feared)
        (SBAR
          (S
            (NP (DT the) (NN lightning))
            (VP (VBD had)
              (VP (VBN done)
                (NP (DT some) (NN damage))))))))
    (. .) ('' '')))

nsubj(heard-3, I-2)
nsubj(feared-9, I-2)
root(ROOT-0, heard-3)
det(fall-6, a-4)
amod(fall-6, heavy-5)
tmod(heard-3, fall-6)
conj_and(heard-3, feared-9)
det(lightning-11, the-10)
nsubj(done-13, lightning-11)
aux(done-13, had-12)
ccomp(feared-9, done-13)
det(damage-15, some-14)
dobj(done-13, damage-15)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP We))
        (VP (MD shall)
          (VP (VB see)
            (PP (IN about)
              (NP
                (NP (DT that))
                (PP (IN in)
                  (NP (DT the) (NN morning))))))))
      (, ,)
      (CC and)
      (S
        (PP (IN in)
          (NP (DT the) (NN meantime)))
        (NP (PRP you))
        (VP (VBD had)
          (ADVP (RBR better))
          (VP (VB go)
            (PP (TO to)
              (NP (NN bed)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN laird))
    (. .)))

nsubj(see-4, We-2)
aux(see-4, shall-3)
ccomp(said-23, see-4)
prep_about(see-4, that-6)
det(morning-9, the-8)
prep_in(that-6, morning-9)
det(meantime-14, the-13)
prep_in(go-18, meantime-14)
nsubj(go-18, you-15)
aux(go-18, had-16)
advmod(go-18, better-17)
conj_and(see-4, go-18)
ccomp(said-23, go-18)
prep_to(go-18, bed-20)
root(ROOT-0, said-23)
det(laird-25, the-24)
nsubj(said-23, laird-25)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD turned)
      (ADVP (RB together))
      (PP (IN toward)
        (NP (DT the) (NN door))))
    (. .)))

nsubj(turned-2, They-1)
root(ROOT-0, turned-2)
advmod(turned-2, together-3)
det(door-6, the-5)
prep_toward(turned-2, door-6)

(ROOT
  (S (`` ``)
    (S
      (SBAR
        (WHNP (WP What))
        (S
          (NP
            (NP (DT a) (NN multitude))
            (PP (IN of)
              (NP (NNS books))))))
      (, ,)
      (NP (PRP you))
      (VP (VBP have)))
    (, ,)
    (S
      (NP (NNP Mr.) (NNP Fordyce)))
    (. !) ('' '')))

dep(multitude-4, What-2)
det(multitude-4, a-3)
advcl(have-9, multitude-4)
prep_of(multitude-4, books-6)
nsubj(have-9, you-8)
root(ROOT-0, have-9)
nn(Fordyce-12, Mr.-11)
parataxis(have-9, Fordyce-12)

(ROOT
  (NP (NNP remarked) (NNP George) (. .)))

nn(George-2, remarked-1)
root(ROOT-0, George-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD had)
      (NP
        (NP (RB not) (DT a) (NN notion))
        (PP (IN of)
          (NP
            (NP (PDT such) (DT a) (NN library))
            (PP (IN in)
              (NP (DT the) (NN county)))))))
    (. !) ('' '')))

nsubj(had-3, I-2)
root(ROOT-0, had-3)
neg(notion-6, not-4)
det(notion-6, a-5)
dobj(had-3, notion-6)
predet(library-10, such-8)
det(library-10, a-9)
prep_of(notion-6, library-10)
det(county-13, the-12)
prep_in(library-10, county-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN been)
          (NP
            (NP (DT a) (NN lover))
            (PP (IN of)
              (NP (NNS books))))
          (NP (PDT all) (PRP$ my) (NN life)))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (DT the) (NN laird))
    (. .)))

nsubj(lover-6, I-2)
aux(lover-6, have-3)
cop(lover-6, been-4)
det(lover-6, a-5)
ccomp(returned-14, lover-6)
prep_of(lover-6, books-8)
predet(life-11, all-9)
poss(life-11, my-10)
dep(lover-6, life-11)
root(ROOT-0, returned-14)
det(laird-16, the-15)
nsubj(returned-14, laird-16)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP they))
    (VP (VBP gather) (, ,)
      (S
        (NP (PRP they))
        (VP (VB gather))))
    (. !) ('' '')))

cc(gather-4, And-2)
nsubj(gather-4, they-3)
root(ROOT-0, gather-4)
nsubj(gather-7, they-6)
ccomp(gather-4, gather-7)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD added))
    (. .)))

nsubj(added-2, he-1)
root(ROOT-0, added-2)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP$ Your) (NN love))
      (VP (VBZ draws)
        (NP (PRP them))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP George))
    (. .)))

poss(love-3, Your-2)
nsubj(draws-4, love-3)
ccomp(said-8, draws-4)
dobj(draws-4, them-5)
root(ROOT-0, said-8)
nsubj(said-8, George-9)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (DT The) (NN storm))
        (VP (VBZ is)
          (ADJP (RP over))))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VBP think))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN laird))
    (. .)))

det(storm-3, The-2)
nsubj(over-5, storm-3)
cop(over-5, is-4)
ccomp(said-11, over-5)
nsubj(think-8, I-7)
parataxis(over-5, think-8)
root(ROOT-0, said-11)
det(laird-13, the-12)
nsubj(said-11, laird-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD did) (RB not)
      (VP (VB tell)
        (NP (PRP$ his) (NN guest))
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD was)
              (ADVP (RB scarcely))
              (NP
                (NP (DT a) (NN book))
                (PP (IN on)
                  (NP
                    (NP (DT those) (NNS shelves))
                    (VP (RB not) (VBN sought)
                      (PP (IN after) (IN by)
                        (NP
                          (NP (NNS book-buyers))
                          (PRN (: --) (RB not)
                            (NP (CD one)))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD was) (RB not)
                                (ADJP (IN worth)
                                  (NP
                                    (NP (NN money))
                                    (PP (IN in)
                                      (NP (DT the) (NN book-market)))))))))))))))))))
    (. .)))

nsubj(tell-4, He-1)
aux(tell-4, did-2)
neg(tell-4, not-3)
root(ROOT-0, tell-4)
poss(guest-6, his-5)
dobj(tell-4, guest-6)
mark(was-9, that-7)
expl(was-9, there-8)
ccomp(tell-4, was-9)
advmod(was-9, scarcely-10)
det(book-12, a-11)
nsubj(was-9, book-12)
det(shelves-15, those-14)
prep_on(book-12, shelves-15)
neg(sought-17, not-16)
vmod(shelves-15, sought-17)
dep(sought-17, after-18)
agent(sought-17, book-buyers-20)
nsubj(worth-27, book-buyers-20)
dep(one-23, not-22)
dep(book-buyers-20, one-23)
cop(worth-27, was-25)
neg(worth-27, not-26)
rcmod(book-buyers-20, worth-27)
dep(worth-27, money-28)
det(book-market-31, the-30)
prep_in(money-28, book-market-31)

(ROOT
  (S
    (S
      (ADVP (RB Here)
        (CC and)
        (RB there))
      (NP
        (NP (DT the) (JJ dulled) (NN gold))
        (PP (IN of)
          (NP (DT a) (NN fine) (NN antique) (VBG binding))))
      (VP (VBD returned)
        (NP
          (NP (DT the) (NN gleam))
          (PP (IN of)
            (NP (DT the) (NN candle))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT any) (NN gathering))
        (PP (IN of)
          (NP
            (NP (JJ old) (NN law))
            (CC or)
            (NP (JJ worthless) (NN divinity)))))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN looked)
            (ADVP (RB much)
              (NP (DT the) (JJ same)))))))
    (. .)))

advmod(returned-12, Here-1)
conj_and(Here-1, there-3)
advmod(returned-12, there-3)
det(gold-6, the-4)
amod(gold-6, dulled-5)
nsubj(returned-12, gold-6)
det(antique-10, a-8)
nn(antique-10, fine-9)
prep_of(gold-6, antique-10)
amod(antique-10, binding-11)
root(ROOT-0, returned-12)
det(gleam-14, the-13)
dobj(returned-12, gleam-14)
det(candle-17, the-16)
prep_of(gleam-14, candle-17)
det(gathering-21, any-20)
nsubj(looked-30, gathering-21)
amod(law-24, old-23)
prep_of(gathering-21, law-24)
amod(divinity-27, worthless-26)
prep_of(gathering-21, divinity-27)
conj_or(law-24, divinity-27)
aux(looked-30, would-28)
aux(looked-30, have-29)
conj_but(returned-12, looked-30)
advmod(looked-30, much-31)
det(same-33, the-32)
pobj(much-31, same-33)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB like)
          (PP (TO to)
            (NP
              (NP (NN glance))
              (PP (IN over)
                (NP (PRP them))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP George))
    (. .)))

nsubj(like-4, I-2)
aux(like-4, should-3)
ccomp(said-11, like-4)
prep_to(like-4, glance-6)
prep_over(glance-6, them-8)
root(ROOT-0, said-11)
nsubj(said-11, George-12)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (MD must)
      (VP (VB be)
        (NP
          (NP (DT some) (JJ valuable) (NNS volumes))
          (PP (IN among)
            (NP
              (QP (RB so) (JJ many)))))))
    (. !) ('' '')))

expl(volumes-7, There-2)
aux(volumes-7, must-3)
cop(volumes-7, be-4)
det(volumes-7, some-5)
amod(volumes-7, valuable-6)
root(ROOT-0, volumes-7)
quantmod(many-10, so-9)
prep_among(volumes-7, many-10)

(ROOT
  (S (`` ``)
    (VP (VBP Rubbish))
    (. !)))

root(ROOT-0, Rubbish-2)

(ROOT
  (ADVP (RB rubbish) (. !) ('' '')))

root(ROOT-0, rubbish-1)

(ROOT
  (S
    (VP (VBD rejoined)
      (NP (DT the) (JJ old) (NN man))
      (, ,)
      (ADVP (RB testily))
      (, ,)
      (S
        (ADVP (RB almost))
        (VP (VBG hustling)
          (NP (PRP him))
          (PP (IN from)
            (NP (DT the) (NN room))))))
    (. .)))

root(ROOT-0, rejoined-1)
det(man-4, the-2)
amod(man-4, old-3)
dobj(rejoined-1, man-4)
advmod(rejoined-1, testily-6)
advmod(hustling-9, almost-8)
vmod(rejoined-1, hustling-9)
dobj(hustling-9, him-10)
det(room-13, the-12)
prep_from(hustling-9, room-13)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ ashamed)
        (S
          (VP (TO to)
            (VP (VB hear)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD called)
                    (NP (DT a) (NN library))))))))))
    (. .) ('' '')))

nsubj(ashamed-4, I-2)
nsubj(hear-6, I-2)
cop(ashamed-4, am-3)
root(ROOT-0, ashamed-4)
aux(hear-6, to-5)
xcomp(ashamed-4, hear-6)
nsubj(called-8, it-7)
ccomp(hear-6, called-8)
det(library-10, a-9)
dobj(called-8, library-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD seemed)
      (PP (TO to)
        (NP (NNP Crawford)))
      (, ,)
      (SBAR (IN as)
        (S
          (ADVP (RB again))
          (NP (PRP he))
          (VP (VBD lay)
            (S
              (S
                (ADJP (RB awake))
                (PP (IN in)
                  (NP (PRP$ his) (NN bed))))
              (, ,)
              (S
                (ADVP (RB altogether))
                (NP (DT a) (JJ strange) (NN incident))))))))
    (. .)))

nsubj(seemed-2, It-1)
root(ROOT-0, seemed-2)
prep_to(seemed-2, Crawford-4)
mark(lay-9, as-6)
advmod(lay-9, again-7)
nsubj(lay-9, he-8)
advcl(seemed-2, lay-9)
dep(lay-9, awake-10)
dep(awake-10, in-11)
poss(bed-13, his-12)
pobj(in-11, bed-13)
advmod(incident-18, altogether-15)
det(incident-18, a-16)
amod(incident-18, strange-17)
parataxis(awake-10, incident-18)

(ROOT
  (S
    (S
      (NP (DT A) (NN man))
      (VP (MD may)
        (VP (VB count)
          (NP (PRP$ his) (NN money))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBZ pleases)))))))
    (, ,)
    (CC but)
    (S
      (SBAR (RB not)
        (S
          (NP (DT the) (JJR less))
          (VP (MD must))))
      (NP (PRP it))
      (VP (VBP seem)
        (ADJP (JJ odd)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (MD should)
                (VP (VB do)
                  (ADVP (RB so)
                    (PP
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN middle))
                          (PP (IN of)
                            (NP (DT the) (NN night)))))
                      (, ,)
                      (CC and)
                      (PP (IN with)
                        (NP (PDT such) (DT a) (NN storm)))))
                  (S
                    (VP (VBG flashing)
                      (CC and)
                      (VBG roaring)
                      (PP (IN around)
                        (NP (PRP him)))))
                  (, ,)
                  (S
                    (ADVP (RB apparently))
                    (VP (VBN unheeded))))))))))
    (. .)))

det(man-2, A-1)
nsubj(count-4, man-2)
aux(count-4, may-3)
root(ROOT-0, count-4)
poss(money-6, his-5)
dobj(count-4, money-6)
advmod(pleases-9, when-7)
nsubj(pleases-9, he-8)
advcl(count-4, pleases-9)
dep(must-15, not-12)
det(less-14, the-13)
nsubj(must-15, less-14)
advcl(seem-17, must-15)
nsubj(seem-17, it-16)
conj_but(count-4, seem-17)
acomp(seem-17, odd-18)
mark(do-22, that-19)
nsubj(do-22, he-20)
aux(do-22, should-21)
ccomp(odd-18, do-22)
advmod(do-22, so-23)
advmod(do-22, so-23')
conj_and(so-23, so-23')
det(middle-26, the-25)
prep_in(so-23, middle-26)
det(night-29, the-28)
prep_of(middle-26, night-29)
predet(storm-35, such-33)
det(storm-35, a-34)
prep_with(so-23', storm-35)
xcomp(do-22, flashing-36)
xcomp(do-22, roaring-38)
conj_and(flashing-36, roaring-38)
prep_around(flashing-36, him-40)
advmod(unheeded-43, apparently-42)
dep(do-22, unheeded-43)

(ROOT
  (S
    (NP (DT The) (JJ next) (NN morning))
    (NP (PRP he))
    (VP
      (VP (VBD got)
        (NP (PRP$ his) (NN cousin))
        (S
          (VP (TO to)
            (VP (VB talk)
              (PP (IN about)
                (NP (PRP$ her) (NN father)))))))
      (, ,)
      (CC but)
      (VP (VBD drew)
        (PP (IN from)
          (NP (PRP$ her) (NN nothing)
            (S
              (VP (TO to)
                (VP (VB cast)
                  (NP (NN light))
                  (PP (IN on)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN seen)))))))))))))
    (. .)))

det(morning-3, The-1)
amod(morning-3, next-2)
tmod(got-5, morning-3)
nsubj(got-5, he-4)
nsubj(drew-15, he-4)
root(ROOT-0, got-5)
poss(cousin-7, his-6)
dobj(got-5, cousin-7)
aux(talk-9, to-8)
vmod(got-5, talk-9)
poss(father-12, her-11)
prep_about(talk-9, father-12)
conj_but(got-5, drew-15)
poss(nothing-18, her-17)
prep_from(drew-15, nothing-18)
aux(cast-20, to-19)
vmod(nothing-18, cast-20)
dobj(cast-20, light-21)
dobj(seen-26, what-23)
nsubj(seen-26, he-24)
aux(seen-26, had-25)
prepc_on(cast-20, seen-26)

(ROOT
  (NP (NNP CHAPTER) (NNP IX) (. .)))

nn(IX-2, CHAPTER-1)
root(ROOT-0, IX-2)

(ROOT
  (FRAG
    (PP (IN IN)
      (NP (DT THE) (NNP GARDEN)))
    (. .)))

root(ROOT-0, IN-1)
det(GARDEN-3, THE-2)
pobj(IN-1, GARDEN-3)

(ROOT
  (S
    (PP (IN Of)
      (NP
        (NP (DT the) (NN garden))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD had)
              (VP (VBN been)
                (NP
                  (NP (DT the) (NN pride))
                  (PP (IN of)
                    (NP
                      (NP (JJ many) (NNS owners))
                      (PP (IN of)
                        (NP (DT the) (NN place))))))))))))
    (, ,)
    (NP (RB only) (DT a) (JJ small) (NN portion))
    (VP (VBD remained))
    (. .)))

det(garden-3, the-2)
nsubj(pride-8, garden-3)
prep_of(remained-20, garden-3)
aux(pride-8, had-5)
cop(pride-8, been-6)
det(pride-8, the-7)
rcmod(garden-3, pride-8)
amod(owners-11, many-10)
prep_of(pride-8, owners-11)
det(place-14, the-13)
prep_of(owners-11, place-14)
advmod(portion-19, only-16)
det(portion-19, a-17)
amod(portion-19, small-18)
nsubj(remained-20, portion-19)
root(ROOT-0, remained-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (JJ strangely) (NN antique))
        (, ,)
        (VP (VBN haunted)
          (PP (IN with)
            (NP
              (NP (DT a) (NN beauty))
              (ADJP (DT both) (JJ old)
                (CC and)
                (JJ wild)))))
        (, ,)
        (SBAR
          (S
            (NP
              (NP (DT the) (NN sort))
              (PP (IN of)
                (NP
                  (NP (NN garden))
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NNS children))
                      (PP (IN of)
                        (NP (NN heaven))))))))
            (VP (TO to)
              (VP (VB play)
                (PP (IN in)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (NNS men))
                      (VP (VBP sleep)))))))))))
    (. .)))

nsubj(antique-4, It-1)
cop(antique-4, was-2)
amod(antique-4, strangely-3)
root(ROOT-0, antique-4)
vmod(antique-4, haunted-6)
det(beauty-9, a-8)
prep_with(haunted-6, beauty-9)
preconj(old-11, both-10)
amod(beauty-9, old-11)
amod(beauty-9, wild-13)
conj_and(old-11, wild-13)
det(sort-16, the-15)
nsubj(play-25, sort-16)
prep_of(sort-16, garden-18)
det(children-21, the-20)
prep_for(garden-18, children-21)
prep_of(children-21, heaven-23)
aux(play-25, to-24)
rcmod(antique-4, play-25)
vmod(antique-4, play-25)
advmod(sleep-29, when-27)
nsubj(sleep-29, men-28)
prepc_in(play-25, sleep-29)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (JJ little) (NN arbor))
        (VP (VBN constructed)
          (PP (IN by)
            (NP
              (NP (DT an) (JJ old) (NN man))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD had)
                    (VP (VBN seen)
                      (S
                        (NP (DT the) (NN garden))
                        (VP (VB grow)
                          (ADJP
                            (ADJP (JJR less)
                              (CC and)
                              (JJR less))
                            (PP (IN through)
                              (NP (JJ successive) (NNS generations)))))))))))))))
    (, ,)
    (NP
      (NP (DT a) (NN tent))
      (PP (IN of)
        (NP
          (NP (NN honeysuckle))
          (PP (IN in)
            (NP
              (NP (DT a) (NN cloak))
              (PP (IN of)
                (NP (JJ sweet) (NN pease))))))))
    (, ,)
    (VP (VBD sat)
      (NP
        (NP
          (NP (NNP George)
            (CC and)
            (NNP Alexa))
          (, ,)
          (NP
            (NP (CD two))
            (NP
              (ADJP (RB highly) (JJ respectable))
              (JJ young) (NNS people)))
          (, ,)
          (NP
            (NP (NNP Scots))
            (PP (IN of)
              (NP (NNP Scotland))))
          (, ,))
        (PP (IN like)
          (NP
            (NP (NNPS Jews))
            (PP (IN of)
              (NP (NNP Judaea)))))
        (, ,)
        (ADJP (RB well) (VBN satisfied)))
      (PP (IN of)
        (NP (PRP$ their) (JJ own) (NN worthiness))))
    (. .)))

det(arbor-4, a-2)
amod(arbor-4, little-3)
prep_in(sat-34, arbor-4)
vmod(arbor-4, constructed-5)
det(man-9, an-7)
amod(man-9, old-8)
agent(constructed-5, man-9)
nsubj(seen-12, man-9)
aux(seen-12, had-11)
rcmod(man-9, seen-12)
det(garden-14, the-13)
nsubj(grow-15, garden-14)
ccomp(seen-12, grow-15)
acomp(grow-15, less-16)
acomp(grow-15, less-18)
conj_and(less-16, less-18)
amod(generations-21, successive-20)
prep_through(less-16, generations-21)
det(tent-24, a-23)
nsubj(sat-34, tent-24)
prep_of(tent-24, honeysuckle-26)
det(cloak-29, a-28)
prep_in(honeysuckle-26, cloak-29)
amod(pease-32, sweet-31)
prep_of(cloak-29, pease-32)
root(ROOT-0, sat-34)
dobj(sat-34, George-35)
dobj(sat-34, Alexa-37)
conj_and(George-35, Alexa-37)
appos(George-35, two-39)
advmod(respectable-41, highly-40)
amod(people-43, respectable-41)
amod(people-43, young-42)
dep(two-39, people-43)
appos(George-35, Scots-45)
prep_of(Scots-45, Scotland-47)
prep_like(George-35, Jews-50)
prep_of(Jews-50, Judaea-52)
advmod(satisfied-55, well-54)
amod(George-35, satisfied-55)
poss(worthiness-59, their-57)
amod(worthiness-59, own-58)
prep_of(sat-34, worthiness-59)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB How))
      (S
        (NP (PRP they))
        (VP (VBD found)
          (S
            (NP (PRP$ their) (NN talk))
            (ADJP (JJ interesting))))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB scarce))
      (VP (VB think)))
    (. .)))

advmod(found-3, How-1)
nsubj(found-3, they-2)
advcl(think-11, found-3)
poss(talk-5, their-4)
nsubj(interesting-6, talk-5)
xcomp(found-3, interesting-6)
nsubj(think-11, I-8)
aux(think-11, can-9)
advmod(think-11, scarce-10)
root(ROOT-0, think-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB have)
          (VP (VBN expected)
            (S
              (NP (PRP them))
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN driven)
                    (PP (IN by)
                      (NP (JJ very) (NN dullness)))
                    (PP (TO to)
                      (NP (NN love-making)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (DT the) (NN one))
      (VP (VBD was)
        (ADJP (RB too) (JJ prudent)
          (S
            (VP (TO to)
              (VP (VB initiate)
                (NP (PRP it))))))
        (, ,)
        (S
          (NP
            (NP (DT the) (JJ other))
            (ADJP (RB too) (VBN staid)))
          (VP (TO to)
            (VP (VB entice)
              (NP (PRP it)))))))
    (. .)))

nsubj(expected-4, I-1)
aux(expected-4, should-2)
aux(expected-4, have-3)
root(ROOT-0, expected-4)
dobj(expected-4, them-5)
nsubjpass(driven-8, them-5)
aux(driven-8, to-6)
auxpass(driven-8, be-7)
xcomp(expected-4, driven-8)
amod(dullness-11, very-10)
agent(driven-8, dullness-11)
prep_to(driven-8, love-making-13)
det(one-17, the-16)
nsubj(prudent-20, one-17)
cop(prudent-20, was-18)
advmod(prudent-20, too-19)
conj_but(expected-4, prudent-20)
aux(initiate-22, to-21)
xcomp(prudent-20, initiate-22)
dobj(initiate-22, it-23)
det(other-26, the-25)
dobj(prudent-20, other-26)
nsubj(initiate-22, other-26)
nsubj(entice-30, other-26)
advmod(staid-28, too-27)
amod(other-26, staid-28)
aux(entice-30, to-29)
xcomp(prudent-20, entice-30)
dobj(entice-30, it-31)

(ROOT
  (S
    (ADVP (RB Yet))
    (, ,)
    (S
      (NP
        (NP (NNS people))
        (PP (IN on)
          (NP
            (NP (DT the) (NNS borders))
            (PP (IN of)
              (NP (NN love))))))
      (VP (VBG being)
        (PP (IN on)
          (NP
            (NP (DT the) (NNS borders))
            (PP (IN of)
              (NP (NN poetry)))))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBD had)
        (VP (VBN got)
          (S
            (VP (VBG talking)
              (PP (IN about)
                (NP (DT a) (JJ certain) (JJ new) (NN poem))))))))
    (, ,)
    (PP (VBG concerning)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (NNP George))
          (, ,)
          (S
            (VP (VBG having)
              (VP (VBN read)
                (NP
                  (NP (JJ several) (NNS notices))
                  (PP (IN of)
                    (NP (PRP it)))))))
          (, ,)
          (VP (VBD had)
            (NP (DT an) (NN opinion)
              (S
                (VP (TO to)
                  (VP (VB give)))))))))
    (. .)))

advmod(being-9, Yet-1)
nsubj(being-9, people-3)
det(borders-6, the-5)
prep_on(people-3, borders-6)
prep_of(borders-6, love-8)
root(ROOT-0, being-9)
det(borders-12, the-11)
prep_on(being-9, borders-12)
prep_of(borders-12, poetry-14)
nsubj(got-18, they-16)
aux(got-18, had-17)
parataxis(being-9, got-18)
xcomp(got-18, talking-19)
det(poem-24, a-21)
amod(poem-24, certain-22)
amod(poem-24, new-23)
prep_about(talking-19, poem-24)
dep(being-9, concerning-26)
dobj(had-37, which-27)
nsubj(had-37, George-28)
aux(read-31, having-30)
vmod(had-37, read-31)
amod(notices-33, several-32)
dobj(read-31, notices-33)
prep_of(notices-33, it-35)
pcomp(concerning-26, had-37)
det(opinion-39, an-38)
dobj(had-37, opinion-39)
aux(give-41, to-40)
vmod(opinion-39, give-41)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD should)
        (VP (VB tell)
          (NP (PRP$ my) (NN father))
          (PP (IN about)
            (NP
              (NP (PRP it))
              (, ,)
              (NP (NNP George))
              (, ,) ('' '')
              (SBAR
                (S
                  (VP (VBD said)
                    (NP (NNP Alexa))))))))))
    (: ;) (`` ``)
    (S
      (NP (PRP he))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJS best) (NN judge))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP know)))))))
    (. .) ('' '')))

nsubj(tell-4, You-2)
aux(tell-4, should-3)
root(ROOT-0, tell-4)
poss(father-6, my-5)
dobj(tell-4, father-6)
prep_about(tell-4, it-8)
appos(it-8, George-10)
rcmod(it-8, said-13)
dobj(said-13, Alexa-14)
nsubj(judge-21, he-17)
cop(judge-21, is-18)
det(judge-21, the-19)
amod(judge-21, best-20)
parataxis(tell-4, judge-21)
nsubj(know-23, I-22)
rcmod(judge-21, know-23)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD did) (RB not)
        (VP (VB understand)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADJP
                  (NP (DT a) (RB little))
                  (JJR more)
                  (PP (IN than)
                    (NP
                      (NP (DT the) (NN grammar))
                      (PP (IN of)
                        (NP (NN poetry))))))))))))
    (NP (DT the) (NN school-master))
    (VP (VBD had)
      (ADVP (RB ever))
      (VP (VBN given)
        (S
          (NP (PRP himself))
          (VP (TO to)
            (VP (VB understand))))))
    (. .)))

nsubj(understand-4, She-1)
aux(understand-4, did-2)
neg(understand-4, not-3)
dep(given-20, understand-4)
mark(more-10, that-5)
nsubj(more-10, it-6)
cop(more-10, was-7)
det(little-9, a-8)
npadvmod(more-10, little-9)
ccomp(understand-4, more-10)
det(grammar-13, the-12)
prep_than(more-10, grammar-13)
prep_of(grammar-13, poetry-15)
det(school-master-17, the-16)
nsubj(given-20, school-master-17)
aux(given-20, had-18)
advmod(given-20, ever-19)
root(ROOT-0, given-20)
dobj(given-20, himself-21)
nsubj(understand-23, himself-21)
aux(understand-23, to-22)
xcomp(given-20, understand-23)

(ROOT
  (S
    (NP (PRP$ His) (JJS best) (NN criticism))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP (VB show)
            (NP
              (NP (NN phrase))
              (VP (VBG calling)
                (PP (TO to)
                  (NP (NN phrase)))
                (PP (IN across)
                  (NP
                    (NP (NNS gulfs))
                    (PP (IN of)
                      (NP (NN speech)))))))))))
    (. .)))

poss(criticism-3, His-1)
amod(criticism-3, best-2)
nsubj(was-4, criticism-3)
nsubj(show-6, criticism-3)
root(ROOT-0, was-4)
aux(show-6, to-5)
xcomp(was-4, show-6)
dobj(show-6, phrase-7)
vmod(phrase-7, calling-8)
prep_to(calling-8, phrase-10)
prep_across(calling-8, gulfs-12)
prep_of(gulfs-12, speech-14)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ little) (NN iron) (NN gate))
      (, ,)
      (SBAR (WP$ whose)
        (S
          (NP (NNS hinges))
          (VP (VBD were)
            (ADVP (RB almost))
            (VP (VBN gone)
              (PP (IN with)
                (NP (NN rust)))))))
      (, ,))
    (VP
      (VP (VBD creaked))
      (CC and)
      (VP (VBD gnarred)
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (ADVP (RB slowly))
            (VP (VBD opened)
              (S
                (VP (TO to)
                  (VP (VB admit)
                    (NP
                      (NP (DT the) (NN approach))
                      (PP (IN of)
                        (NP (DT a) (JJ young) (NN countryman))))))))))))
    (. .)))

det(gate-4, The-1)
amod(gate-4, little-2)
nn(gate-4, iron-3)
nsubj(creaked-14, gate-4)
nsubj(gnarred-16, gate-4)
dep(gone-10, whose-6)
nsubjpass(gone-10, hinges-7)
auxpass(gone-10, were-8)
advmod(gone-10, almost-9)
dep(gate-4, gone-10)
prep_with(gone-10, rust-12)
root(ROOT-0, creaked-14)
conj_and(creaked-14, gnarred-16)
mark(opened-20, as-17)
nsubj(opened-20, it-18)
nsubj(admit-22, it-18)
advmod(opened-20, slowly-19)
advcl(gnarred-16, opened-20)
aux(admit-22, to-21)
xcomp(opened-20, admit-22)
det(approach-24, the-23)
dobj(admit-22, approach-24)
det(countryman-28, a-26)
amod(countryman-28, young-27)
prep_of(approach-24, countryman-28)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD advanced)
        (PP (IN with)
          (NP
            (NP (DT the) (JJ long) (, ,) (JJ slow) (, ,) (JJ heavy) (NN step) (NN suggestive))
            (PP (IN of)
              (NP (JJ nailed) (NNS shoes)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP$ his) (NN hazel) (NN eye))
      (VP
        (VP (VBD had)
          (NP
            (NP (DT an) (NN outlook))
            (PP (IN like)
              (NP
                (NP (DT that))
                (PP (IN of)
                  (NP (DT an) (NN eagle))))))
          (PP (IN from)
            (NP (PRP$ its) (NN eyrie))))
        (, ,)
        (CC and)
        (VP (VBD seemed)
          (S
            (VP (TO to)
              (VP (VB dominate)
                (NP (PRP$ his) (NN being))))))
        (, ,)
        (S
          (VP
            (VP (VBG originating))
            (CONJP (RB rather) (IN than))
            (VP (VBG directing)
              (NP (PRP$ its) (NNS motions)))))))
    (. .)))

nsubj(advanced-2, He-1)
root(ROOT-0, advanced-2)
det(suggestive-11, the-4)
amod(suggestive-11, long-5)
amod(suggestive-11, slow-7)
amod(suggestive-11, heavy-9)
nn(suggestive-11, step-10)
prep_with(advanced-2, suggestive-11)
amod(shoes-14, nailed-13)
prep_of(suggestive-11, shoes-14)
poss(eye-19, his-17)
nn(eye-19, hazel-18)
nsubj(had-20, eye-19)
nsubj(seemed-33, eye-19)
nsubj(dominate-35, eye-19)
nsubj(originating-39, eye-19)
conj_but(advanced-2, had-20)
det(outlook-22, an-21)
dobj(had-20, outlook-22)
prep_like(outlook-22, that-24)
det(eagle-27, an-26)
prep_of(that-24, eagle-27)
poss(eyrie-30, its-29)
prep_from(had-20, eyrie-30)
conj_but(advanced-2, seemed-33)
conj_and(had-20, seemed-33)
aux(dominate-35, to-34)
xcomp(seemed-33, dominate-35)
poss(being-37, his-36)
dobj(dominate-35, being-37)
conj_but(advanced-2, originating-39)
ccomp(had-20, originating-39)
conj_and(had-20, originating-39)
ccomp(had-20, directing-42)
conj_and(had-20, directing-42)
conj_negcc(originating-39, directing-42)
poss(motions-44, its-43)
dobj(directing-42, motions-44)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (NP
        (NP
          (NP (DT a) (JJ russet-colored) (NN face))
          (, ,)
          (ADJP (RB much) (JJ freckled)))
        (: ;)
        (NP
          (NP
            (NP (NN hair))
            (ADJP (RB so) (JJ dark)))
          (ADJP (JJ red) (RB as)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (RB almost) (JJ brown)))))))
        (: ;)
        (NP
          (NP (DT a) (JJ large) (, ,) (JJ well-shaped) (NN nose))
          (: ;)
          (NP (DT a) (JJ strong) (NN chin)))
        (: ;)
        (CC and)
        (NP
          (NP (DT a) (NN mouth))
          (PP (IN of)
            (NP
              (NP (NN sweetness))
              (SBAR
                (WHNP (WP$ whose) (NNS smile))
                (S
                  (VP (VBD was)
                    (ADVP (RB peculiarly))
                    (NP (PRP$ its) (JJ own)))))))
          (, ,)
          (VP (VBG having)
            (NP
              (NP
                (PP (IN in)
                  (NP (PRP it)))
                (PP (IN at)
                  (NP (RB once) (DT the) (NN mystery))))
              (CC and)
              (NP
                (NP (DT the) (NN revelation))
                (PP (IN of)
                  (NP (NNP Andrew) (NNP Ingram)))))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
det(face-5, a-3)
amod(face-5, russet-colored-4)
dobj(had-2, face-5)
advmod(freckled-8, much-7)
amod(face-5, freckled-8)
dobj(had-2, hair-10)
conj_and(face-5, hair-10)
advmod(dark-12, so-11)
amod(hair-10, dark-12)
amod(hair-10, red-13)
advmod(red-13, as-14)
aux(brown-18, to-15)
cop(brown-18, be-16)
advmod(brown-18, almost-17)
xcomp(red-13, brown-18)
det(nose-24, a-20)
amod(nose-24, large-21)
amod(nose-24, well-shaped-23)
dobj(had-2, nose-24)
conj_and(face-5, nose-24)
det(chin-28, a-26)
amod(chin-28, strong-27)
dep(nose-24, chin-28)
det(mouth-32, a-31)
dobj(had-2, mouth-32)
conj_and(face-5, mouth-32)
prep_of(mouth-32, sweetness-34)
poss(smile-36, sweetness-34)
nsubj(own-40, smile-36)
cop(own-40, was-37)
advmod(own-40, peculiarly-38)
poss(own-40, its-39)
rcmod(sweetness-34, own-40)
vmod(mouth-32, having-42)
dobj(having-42, in-43)
pobj(in-43, it-44)
advmod(mystery-48, once-46)
det(mystery-48, the-47)
prep_at(in-43, mystery-48)
det(revelation-51, the-50)
dobj(having-42, revelation-51)
conj_and(in-43, revelation-51)
nn(Ingram-54, Andrew-53)
prep_of(revelation-51, Ingram-54)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD took)
      (PRT (RP off))
      (NP (PRP$ his) (NN bonnet))
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP
            (VP (VBD drew)
              (PP (IN near)))
            (, ,)
            (CC and)
            (VP (VBD held)
              (S
                (NP (PRP it))
                (ADJP (RB as) (JJ low)
                  (PP (IN as)
                    (NP
                      (NP (PRP$ his) (NN knee))
                      (, ,)
                      (SBAR (IN while)
                        (S
                          (PP (IN with)
                            (NP
                              (NP (NN something))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (NN air))
                                  (PP (IN of)
                                    (NP (DT an) (JJ old-fashioned) (NN courtier)))))))
                          (, ,)
                          (NP (PRP he))
                          (VP (VBD stood)
                            (S
                              (VP (VBG waiting)))))))))))))))
    (. .)))

nsubj(took-2, He-1)
root(ROOT-0, took-2)
prt(took-2, off-3)
poss(bonnet-5, his-4)
dobj(took-2, bonnet-5)
mark(drew-8, as-6)
nsubj(drew-8, he-7)
nsubj(held-12, he-7)
advcl(took-2, drew-8)
prep(drew-8, near-9)
advcl(took-2, held-12)
conj_and(drew-8, held-12)
nsubj(low-15, it-13)
advmod(low-15, as-14)
xcomp(held-12, low-15)
poss(knee-18, his-17)
prep_as(low-15, knee-18)
mark(stood-32, while-20)
prep_with(stood-32, something-22)
det(air-25, the-24)
prep_of(something-22, air-25)
det(courtier-29, an-27)
amod(courtier-29, old-fashioned-28)
prep_of(air-25, courtier-29)
nsubj(stood-32, he-31)
rcmod(knee-18, stood-32)
xcomp(stood-32, waiting-33)

(ROOT
  (S
    (NP
      (NP (PRP$ His) (NNS clothes))
      (, ,)
      (NP
        (NP (DT all))
        (PP (CC but)
          (NP
            (NP (PRP$ his) (NN coat))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD was)
                  (PP (IN of)
                    (NP
                      (NP (DT some) (JJ blue) (NN stuff))
                      (, ,)
                      (CC and)
                      (NP (PRP$ his))))
                  (NP (NNP Sunday) (CD one))))))))
      (, ,))
    (VP (VBD were)
      (PP (IN of)
        (NP (DT a) (JJ large-ribbed) (NN corduroy))))
    (. .)))

poss(clothes-2, His-1)
nsubj(were-21, clothes-2)
appos(clothes-2, all-4)
prep(all-4, but-5)
poss(coat-7, his-6)
pobj(but-5, coat-7)
nsubj(Sunday-18, coat-7)
cop(Sunday-18, was-10)
det(stuff-14, some-12)
amod(stuff-14, blue-13)
prep_of(Sunday-18, stuff-14)
conj_and(stuff-14, his-17)
prep_of(Sunday-18, his-17)
rcmod(coat-7, Sunday-18)
num(Sunday-18, one-19)
root(ROOT-0, were-21)
det(corduroy-25, a-23)
amod(corduroy-25, large-ribbed-24)
prep_of(were-21, corduroy-25)

(ROOT
  (S
    (PP (IN For)
      (NP (DT a) (NN moment)))
    (NP (DT no) (NN one))
    (VP (VBD spoke))
    (. .)))

det(moment-3, a-2)
prep_for(spoke-6, moment-3)
neg(one-5, no-4)
nsubj(spoke-6, one-5)
root(ROOT-0, spoke-6)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBN colored)
        (NP (DT a) (JJ little)))
      (, ,)
      (CC but)
      (VP (VBN kept)
        (S
          (ADJP (JJ silent)))
        (, ,)
        (S
          (NP
            (NP (PRP$ his) (NNS eyes))
            (PP (IN on)
              (NP (DT the) (NN lady)))))))
    (. .)))

nsubj(colored-2, He-1)
nsubj(kept-7, He-1)
root(ROOT-0, colored-2)
det(little-4, a-3)
dobj(colored-2, little-4)
conj_but(colored-2, kept-7)
acomp(kept-7, silent-8)
poss(eyes-11, his-10)
xcomp(kept-7, eyes-11)
det(lady-14, the-13)
prep_on(eyes-11, lady-14)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Good-morning))
    (, ,)
    (NP (NNP Andrew))
    (. !) ('' '')))

root(ROOT-0, Good-morning-2)
dep(Good-morning-2, Andrew-4)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said)
      (PP (IN at)
        (NP (NN length))))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
prep_at(said-2, length-4)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP (NN something))))
    (, ,)
    (NP (PRP I))
    (VP (VBP forget)
      (SBAR
        (WHNP (WP what))
        (, ,)
        (S
          (NP (PRP you))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB call)
                  (PRT (RP about)))))))))
    (. !)))

expl(was-3, There-2)
ccomp(forget-7, was-3)
nsubj(was-3, something-4)
nsubj(forget-7, I-6)
root(ROOT-0, forget-7)
dobj(were-11, what-8)
nsubj(call-13, what-8)
nsubj(were-11, you-10)
ccomp(forget-7, were-11)
aux(call-13, to-12)
xcomp(were-11, call-13)
prt(call-13, about-14)

(ROOT
  (S
    (VP (VB Remind)
      (NP (PRP me) (: --)
        (SBAR
          (S
            (VP (MD will)
              (VP
                (NP (PRP you))))))))
    (. ?) ('' '')))

root(ROOT-0, Remind-1)
dobj(Remind-1, me-2)
aux(you-5, will-4)
dep(me-2, you-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD did) (RB not)
      (VP (VB come)
        (ADVP (RB before))
        (, ,)
        (ADVP (RB ma'am))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (VBD knew)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBD were)
                    (ADJP (VBN occupied))))))))))
    (. .)))

nsubj(come-5, I-2)
aux(come-5, did-3)
neg(come-5, not-4)
root(ROOT-0, come-5)
advmod(come-5, before-6)
advmod(come-5, ma'am-8)
mark(knew-12, because-10)
nsubj(knew-12, I-11)
advcl(come-5, knew-12)
nsubjpass(occupied-15, you-13)
auxpass(occupied-15, were-14)
ccomp(knew-12, occupied-15)

(ROOT
  (S (CC And)
    (ADVP (RB even) (RB now))
    (NP (PRP it))
    (VP (VBZ does) (RB not)
      (ADVP (RB greatly))
      (VP (VB matter)))
    (. .) ('' '')))

cc(matter-8, And-1)
advmod(now-3, even-2)
advmod(matter-8, now-3)
nsubj(matter-8, it-4)
aux(matter-8, does-5)
neg(matter-8, not-6)
advmod(matter-8, greatly-7)
root(ROOT-0, matter-8)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP I))
    (VP (VBP remember))
    (. !)))

discourse(remember-5, Oh-2)
nsubj(remember-5, I-4)
root(ROOT-0, remember-5)

(ROOT
  (NP (: --) (JJ the) (NN poem) (. !)))

amod(poem-3, the-2)
root(ROOT-0, poem-3)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (RB very) (JJ sorry))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (ADVP (RB so) (RB much))
        (S
          (VP (TO to)
            (VP (VB think)
              (SBAR
                (WHPP (IN of)
                  (WHNP (WDT that)))
                (S
                  (NP (PRP it))
                  (VP (VBD went)
                    (ADVP (RB quite) (RB out))
                    (PP (IN of)
                      (NP (PRP$ my) (NN mind)))))))))))
    (. .) ('' '')))

nsubj(sorry-4, I-1)
cop(sorry-4, am-2)
advmod(sorry-4, very-3)
root(ROOT-0, sorry-4)
nsubj(had-8, I-7)
nsubj(think-12, I-7)
conj_but(sorry-4, had-8)
advmod(much-10, so-9)
advmod(had-8, much-10)
aux(think-12, to-11)
xcomp(had-8, think-12)
prep_of(went-16, that-14)
nsubj(went-16, it-15)
ccomp(think-12, went-16)
advmod(went-16, quite-17)
poss(mind-21, my-20)
prep_out_of(went-16, mind-21)

(ROOT
  (S
    (NP
      (NP (DT An) (NN expression))
      (ADJP (RB half) (VBN amused)))
    (, ,)
    (ADVP (RB half))
    (VP (VB shy) (, ,)
      (PP (IN without)
        (NP
          (NP (NNP trace))
          (PP (IN of)
            (NP (NN mortification)))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (DT an) (NN instant))
          (VP (VBD shadowed)
            (NP
              (NP (DT the) (JJ young) (NN man) (POS 's))
              (NN face))))))
    (. .)))

det(expression-2, An-1)
nsubj(shy-7, expression-2)
advmod(amused-4, half-3)
amod(expression-2, amused-4)
advmod(shy-7, half-6)
root(ROOT-0, shy-7)
prep_without(shy-7, trace-10)
prep_of(trace-10, mortification-12)
mark(shadowed-17, for-14)
det(instant-16, an-15)
nsubj(shadowed-17, instant-16)
advcl(shy-7, shadowed-17)
det(man-20, the-18)
amod(man-20, young-19)
poss(face-22, man-20)
dobj(shadowed-17, face-22)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD would)
            (VP (VB let)
              (S
                (NP (PRP me))
                (VP
                  (VP (VB have)
                    (NP (DT the) (NNS lines))
                    (ADVP (RB again)))
                  (, ,)
                  (VP (VB ma'am)))))))))
    (. !)))

nsubj(wish-3, I-2)
root(ROOT-0, wish-3)
nsubj(let-6, you-4)
aux(let-6, would-5)
ccomp(wish-3, let-6)
nsubj(have-8, me-7)
ccomp(let-6, have-8)
det(lines-10, the-9)
dobj(have-8, lines-10)
advmod(have-8, again-11)
dep(have-8, ma'am-13)

(ROOT
  (S
    (ADVP (RB Indeed))
    (NP (PRP I))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN obliged)
          (PP (TO to)
            (NP (PRP you))))))
    (. !) ('' '')))

advmod(obliged-5, Indeed-1)
nsubjpass(obliged-5, I-2)
aux(obliged-5, should-3)
auxpass(obliged-5, be-4)
root(ROOT-0, obliged-5)
prep_to(obliged-5, you-7)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBZ confess)
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD might)
            (ADVP (RB first))
            (VP (VB be)
              (VP (VBN improved)))))))
    (. !)))

discourse(confess-5, Well-2)
nsubj(confess-5, I-4)
root(ROOT-0, confess-5)
nsubjpass(improved-10, they-6)
aux(improved-10, might-7)
advmod(improved-10, first-8)
auxpass(improved-10, be-9)
ccomp(confess-5, improved-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD read)
        (NP (PRP them))
        (NP (CD one) (NN evening))
        (PP (TO to)
          (NP (PRP$ my) (NN father)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD agreed)
        (PP (IN with)
          (NP (PRP me)))
        (SBAR (IN that)
          (S
            (NP
              (NP (CD two)
                (CC or)
                (CD three))
              (PP (IN of)
                (NP (PRP them))))
            (VP (VBD were) (RB not)
              (ADJP (RB quite) (JJ rhythmical)))))))
    (. .)))

nsubj(read-2, I-1)
root(ROOT-0, read-2)
dobj(read-2, them-3)
num(evening-5, one-4)
tmod(read-2, evening-5)
poss(father-8, my-7)
prep_to(read-2, father-8)
nsubj(agreed-12, he-11)
conj_and(read-2, agreed-12)
prep_with(agreed-12, me-14)
mark(rhythmical-24, that-15)
nsubj(rhythmical-24, two-16)
conj_or(two-16, three-18)
nsubj(rhythmical-24, three-18)
prep_of(two-16, them-20)
cop(rhythmical-24, were-21)
neg(rhythmical-24, not-22)
advmod(rhythmical-24, quite-23)
ccomp(agreed-12, rhythmical-24)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (UCP
              (NP (DT a) (JJ fair) (NN attempt))
              (, ,)
              (CC and)
              (ADVP (IN for)
                (NP (DT a) (NN working-man)))
              (ADJP (RB very) (JJ creditable)))))))
    (. .) ('' '')))

cc(said-3, But-1)
nsubj(said-3, he-2)
root(ROOT-0, said-3)
nsubj(attempt-8, it-4)
nsubj(creditable-15, it-4)
cop(attempt-8, was-5)
det(attempt-8, a-6)
amod(attempt-8, fair-7)
ccomp(said-3, attempt-8)
advmod(creditable-15, for-11)
det(working-man-13, a-12)
pobj(for-11, working-man-13)
advmod(creditable-15, very-14)
ccomp(said-3, creditable-15)
conj_and(attempt-8, creditable-15)

(ROOT
  (S
    (S
      (SBAR
        (WHNP (WP What))
        (S
          (NP (NNP Andrew))
          (VP (VBD was)
            (VP (VBG thinking)))))
      (, ,)
      (NP (PRP it))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (ADJP (JJ hard)
              (S
                (VP (TO to)
                  (VP (VB gather)
                    (PP (IN from)
                      (NP (PRP$ his) (NN smile)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP believe)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (SBAR (IN that) (, ,)
                (S
                  (SBAR (IN if)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (NP (PRP himself))
                        (VP (VBN read)
                          (NP (DT the) (NNS verses))
                          (ADVP (RB aloud))))))
                  (, ,)
                  (NP (DT the) (NN laird))
                  (VP (MD would)
                    (VP (VB have)
                      (VP (VBN found)
                        (NP (DT no) (NN fault))
                        (PP (IN with)
                          (NP (PRP$ their) (NN rhythm)))))))))))))
    (. .)))

dobj(thinking-4, What-1)
nsubj(thinking-4, Andrew-2)
aux(thinking-4, was-3)
advcl(hard-10, thinking-4)
nsubj(hard-10, it-6)
nsubj(gather-12, it-6)
aux(hard-10, would-7)
aux(hard-10, have-8)
cop(hard-10, been-9)
root(ROOT-0, hard-10)
aux(gather-12, to-11)
xcomp(hard-10, gather-12)
poss(smile-15, his-14)
prep_from(gather-12, smile-15)
nsubj(believe-19, I-18)
conj_but(hard-10, believe-19)
nsubj(was-21, it-20)
ccomp(believe-19, was-21)
mark(found-37, that-22)
mark(read-28, if-24)
nsubj(read-28, he-25)
aux(read-28, had-26)
dobj(read-28, himself-27)
advcl(found-37, read-28)
det(verses-30, the-29)
dobj(read-28, verses-30)
advmod(read-28, aloud-31)
det(laird-34, the-33)
nsubj(found-37, laird-34)
aux(found-37, would-35)
aux(found-37, have-36)
ccomp(was-21, found-37)
neg(fault-39, no-38)
dobj(found-37, fault-39)
poss(rhythm-42, their-41)
prep_with(found-37, rhythm-42)

(ROOT
  (S
    (NP (PRP$ His) (NN carriage))
    (VP (VBD seemed)
      (ADVP (RBR more) (IN that))
      (PP (IN of)
        (NP
          (NP (DT a)
            (ADJP (JJ patient) (, ,) (JJ respectful))
            (NN amusement))
          (PP (IN than)
            (NP (NN anything) (RB else))))))
    (. .)))

poss(carriage-2, His-1)
nsubj(seemed-3, carriage-2)
root(ROOT-0, seemed-3)
advmod(that-5, more-4)
advmod(seemed-3, that-5)
det(amusement-11, a-7)
amod(respectful-10, patient-8)
amod(amusement-11, respectful-10)
prep_of(seemed-3, amusement-11)
prep_than(amusement-11, anything-13)
advmod(anything-13, else-14)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP
      (VP (VBD rose))
      (, ,)
      (CC but)
      (VP (VBD resumed)
        (NP (PRP$ her) (NN seat))
        (, ,)
        (S
          (VP (VBG saying) (: :) (`` ``)
            (S
              (SBAR (IN As)
                (S
                  (NP (DT the) (NN poem))
                  (VP (VBZ is)
                    (NP (DT a) (JJ religious) (NN one)))))
              (, ,)
              (NP (EX there))
              (VP (MD can)
                (VP (VB be)
                  (NP
                    (NP (DT no) (NN harm))
                    (PP (IN in)
                      (S
                        (VP (VBG handing)
                          (S
                            (NP (PRP it))
                            (NP (PRP you)))
                          (PP (IN on)
                            (NP (NNP Sunday)))
                          (PP (IN after)
                            (NP (NN church))))))))))))))
    (. !)))

nsubj(rose-2, Alexa-1)
nsubj(resumed-5, Alexa-1)
root(ROOT-0, rose-2)
conj_but(rose-2, resumed-5)
poss(seat-7, her-6)
dobj(resumed-5, seat-7)
vmod(resumed-5, saying-9)
mark(one-18, As-12)
det(poem-14, the-13)
nsubj(one-18, poem-14)
cop(one-18, is-15)
det(one-18, a-16)
amod(one-18, religious-17)
advcl(harm-24, one-18)
expl(harm-24, there-20)
aux(harm-24, can-21)
cop(harm-24, be-22)
neg(harm-24, no-23)
ccomp(saying-9, harm-24)
prepc_in(harm-24, handing-26)
nsubj(you-28, it-27)
xcomp(handing-26, you-28)
prep_on(handing-26, Sunday-30)
prep_after(handing-26, church-32)

(ROOT
  (PRN (: --)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (PRN (, ,) ('' '')
          (S
            (NP (PRP she))
            (VP (VBD added) (, ,)
              (ADVP (RB meaningly))))
          (, ,))
        (`` ``)
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (MD will)
              (VP (VB be)
                (ADVP (RB there))))
            (. !) ('' '')))))))

nsubj(is-3, that-2)
root(ROOT-0, is-3)
nsubj(added-7, she-6)
parataxis(is-3, added-7)
advmod(added-7, meaningly-9)
mark(be-15, if-12)
nsubj(be-15, you-13)
aux(be-15, will-14)
advcl(is-3, be-15)
advmod(be-15, there-16)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Give)
        (S
          (NP (PRP it))
          (VP (TO to)
            (VP (VB Dawtie)
              (PRN (, ,)
                (SBAR (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VBP please))))
                (, ,))
              (NP (NN ma'am)))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Andrew))
    (. .)))

ccomp(replied-14, Give-2)
dobj(Give-2, it-3)
nsubj(Dawtie-5, it-3)
aux(Dawtie-5, to-4)
xcomp(Give-2, Dawtie-5)
mark(please-9, if-7)
nsubj(please-9, you-8)
parataxis(Dawtie-5, please-9)
dobj(Dawtie-5, ma'am-11)
root(ROOT-0, replied-14)
nsubj(replied-14, Andrew-15)

(ROOT
  (INTJ (`` ``) (UH Ah) (. !) ('' '')))

root(ROOT-0, Ah-2)

(ROOT
  (S
    (VP (VBN rebuked)
      (NP (NNP Miss) (NNP Fordyce))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT a) (NN tone) (RB almost))
          (PP (IN of)
            (NP (NN rebuke))))))
    (. .)))

root(ROOT-0, rebuked-1)
nn(Fordyce-3, Miss-2)
dobj(rebuked-1, Fordyce-3)
det(tone-7, a-6)
prep_in(rebuked-1, tone-7)
advmod(tone-7, almost-8)
prep_of(tone-7, rebuke-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB seldom))
      (VP (VBP go)
        (PP (TO to)
          (NP
            (NP (NN church))
            (, ,)
            (NP (NN ma'am))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Andrew))
    (, ,)
    (S
      (VP
        (VP (VBG reddening)
          (NP (DT a) (JJ little)))
        (, ,)
        (CC but)
        (VP (VBG losing)
          (NP (DT no) (NN sweetness))
          (PP (IN from)
            (NP (PRP$ his) (NN smile))))))
    (. .)))

nsubj(go-4, I-2)
advmod(go-4, seldom-3)
ccomp(said-11, go-4)
prep_to(go-4, church-6)
appos(church-6, ma'am-8)
root(ROOT-0, said-11)
nsubj(said-11, Andrew-12)
vmod(said-11, reddening-14)
det(little-16, a-15)
dobj(reddening-14, little-16)
vmod(said-11, losing-19)
conj_but(reddening-14, losing-19)
neg(sweetness-21, no-20)
dobj(losing-19, sweetness-21)
poss(smile-24, his-23)
prep_from(losing-19, smile-24)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP understand)
      (ADVP (RB as) (RB much)))
    (. !)))

nsubj(understand-3, I-2)
root(ROOT-0, understand-3)
advmod(much-5, as-4)
advmod(understand-3, much-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB very) (JJ wrong)))
    (. !)))

nsubj(wrong-4, It-1)
cop(wrong-4, is-2)
advmod(wrong-4, very-3)
root(ROOT-0, wrong-4)

(ROOT
  (SINV
    (ADVP (RB _))
    (ADJP
      (WHADVP (WRB Why))
      (JJ _))
    (VP (VBP do) (RB n't))
    (NP (PRP you))
    (. ?) ('' '')))

advmod(do-4, _-1)
advmod(_-3, Why-2)
dep(do-4, _-3)
root(ROOT-0, do-4)
neg(do-4, n't-5)
nsubj(do-4, you-6)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD was)
      (ADJP (JJ silent)))
    (. .)))

nsubj(silent-3, Andrew-1)
cop(silent-3, was-2)
root(ROOT-0, silent-3)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP wish)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB tell)
              (NP (PRP me)))))))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP
      (NP (NNP Alexa))
      (PRN (, ,)
        (PP (IN with)
          (NP (DT a) (NNS peremptoriness))))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBD came)
            (PP (IN of)
              (NP (DT the) (NN school-master)))))))
    (. .)))

nsubj(wish-3, I-2)
ccomp(persisted-10, wish-3)
dobj(wish-3, you-4)
nsubj(tell-6, you-4)
aux(tell-6, to-5)
xcomp(wish-3, tell-6)
dobj(tell-6, me-7)
root(ROOT-0, persisted-10)
nsubj(persisted-10, Alexa-11)
nsubj(came-17, Alexa-11)
det(peremptoriness-15, a-14)
prep_with(Alexa-11, peremptoriness-15)
rcmod(Alexa-11, came-17)
det(school-master-20, the-19)
prep_of(came-17, school-master-20)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (VP (VBN known)
        (NP (PRP him))
        (ADVP (RB too))
        (SBAR (IN as)
          (S
            (NP
              (NP (DT a) (NN pupil))
              (PP (IN of)
                (NP (PRP$ her) (NN father))))
            (VP (VBZ 's))))))
    (. !)))

nsubj(known-3, She-1)
aux(known-3, had-2)
root(ROOT-0, known-3)
dobj(known-3, him-4)
advmod(known-3, too-5)
mark('s-12, as-6)
det(pupil-8, a-7)
nsubj('s-12, pupil-8)
poss(father-11, her-10)
prep_of(pupil-8, father-11)
advcl(known-3, 's-12)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB have)
              (S
                (NP (PRP it))
                (, ,)
                (NP (NN ma'am))
                (, ,)
                (NP (PRP I))
                (ADVP (RB not) (RB only))
                (VP (VB learn)
                  (NP (NN nothing))
                  (PP (IN from)
                    (NP (NNP Mr.) (NNP Smith))))))))
        (, ,)
        (CC but)
        (S
          (NP (PRP I))
          (VP (VBP think)
            (SBAR (RB much) (IN that)
              (S
                (NP (PRP he))
                (VP (VBZ says))))))))
    (VP (VBZ is) (RB not)
      (ADJP (JJ true)))
    (. .) ('' '')))

mark(have-5, If-2)
nsubj(have-5, you-3)
aux(have-5, will-4)
csubj(true-28, have-5)
nsubj(learn-13, it-6)
nsubj(learn-13, ma'am-8)
nsubj(learn-13, I-10)
dep(only-12, not-11)
advmod(learn-13, only-12)
ccomp(have-5, learn-13)
dobj(learn-13, nothing-14)
nn(Smith-17, Mr.-16)
prep_from(learn-13, Smith-17)
nsubj(think-21, I-20)
conj_but(have-5, think-21)
csubj(true-28, think-21)
advmod(says-25, much-22)
mark(says-25, that-23)
nsubj(says-25, he-24)
dep(think-21, says-25)
cop(true-28, is-26)
neg(true-28, not-27)
root(ROOT-0, true-28)

(ROOT
  (S (`` ``)
    (ADVP (RB Still))
    (NP (PRP you))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB go)
            (PP (IN for)
              (NP
                (NP (DT the) (NN sake))
                (PP (IN of)
                  (NP (NN example)))))))))
    (. .) ('' '')))

advmod(ought-4, Still-2)
nsubj(ought-4, you-3)
nsubj(go-6, you-3)
root(ROOT-0, ought-4)
aux(go-6, to-5)
xcomp(ought-4, go-6)
det(sake-9, the-8)
prep_for(go-6, sake-9)
prep_of(sake-9, example-11)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (ADJP (JJ wrong)
        (S
          (VP (TO to)
            (VP (VB make)
              (S
                (NP (JJ other) (NNS people))
                (VP (VB follow)
                  (NP (PRP$ my) (NN example)))))))))
    (. ?)))

dep(wrong-3, Do-2)
root(ROOT-0, wrong-3)
aux(make-5, to-4)
xcomp(wrong-3, make-5)
amod(people-7, other-6)
nsubj(follow-8, people-7)
ccomp(make-5, follow-8)
poss(example-10, my-9)
dobj(follow-8, example-10)

(ROOT
  (SBARQ
    (WHNP (WP Can))
    (SQ
      (NP (DT that))
      (VP (VB be)
        (S
          (VP (TO to)
            (VP (VB do)
              (ADVP (RB right)))))))
    (. ?) ('' '') ('' '')))

dep(be-3, Can-1)
nsubj(be-3, that-2)
nsubj(do-5, that-2)
root(ROOT-0, be-3)
aux(do-5, to-4)
xcomp(be-3, do-5)
advmod(do-5, right-6)

(ROOT
  (S
    (NP (NNP _) (NNP Wrong))
    (VP (VBZ _)
      (S
        (VP (TO to)
          (VP (VB go)
            (PP (TO to)
              (NP (NN church)))))))
    (. !)))

nn(Wrong-2, _-1)
nsubj(_-3, Wrong-2)
nsubj(go-5, Wrong-2)
root(ROOT-0, _-3)
aux(go-5, to-4)
xcomp(_-3, go-5)
prep_to(go-5, church-7)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP
        (ADVP (RB _))
        (VBP do)
        (S
          (VP (VBG _)
            (S
              (NP (PRP you))
              (VP (VB mean)))))))
    (. ?)))

dobj(do-3, What-1)
nsubj(do-3, What-1)
advmod(do-3, _-2)
root(ROOT-0, do-3)
xcomp(do-3, _-4)
nsubj(mean-6, you-5)
ccomp(_-4, mean-6)

(ROOT
  (FRAG
    (NP (NNP Wrong))
    (S
      (VP (TO to)
        (VP (VB pray)
          (PP (IN with)
            (NP (PRP$ your) (NN fellow-men))))))
    (. ?) ('' '')))

root(ROOT-0, Wrong-1)
aux(pray-3, to-2)
dep(Wrong-1, pray-3)
poss(fellow-men-6, your-5)
prep_with(pray-3, fellow-men-6)

(ROOT
  (S (`` ``)
    (ADVP (RB Perhaps))
    (NP (DT the) (NN hour))
    (VP (MD may)
      (VP (VB come) (, ,) (VB ma'am) (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (MD shall)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB pray)
                        (PP (IN with)
                          (NP (PRP$ my) (NN fellow-men)))))))
                (, ,)
                (SBAR (RB even) (IN though)
                  (S
                    (NP
                      (NP (DT the) (NNS words))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBP use)))))
                    (VP (VBP seem)
                      (VP (VBN addressed)
                        (PP
                          (PP (TO to)
                            (NP (DT a) (NN tyrant)))
                          (, ,) (RB not)
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NN Father))
                              (PP (IN of)
                                (NP (NNP Jesus) (NNP Christ))))))))))))))))
    (. .)))

advmod(come-6, Perhaps-2)
det(hour-4, the-3)
nsubj(come-6, hour-4)
aux(come-6, may-5)
root(ROOT-0, come-6)
dep(come-6, ma'am-8)
advmod(able-14, when-10)
nsubj(able-14, I-11)
nsubj(pray-16, I-11)
aux(able-14, shall-12)
cop(able-14, be-13)
advcl(come-6, able-14)
aux(pray-16, to-15)
xcomp(able-14, pray-16)
poss(fellow-men-19, my-18)
prep_with(pray-16, fellow-men-19)
advmod(seem-27, even-21)
mark(seem-27, though-22)
det(words-24, the-23)
nsubjpass(seem-27, words-24)
nsubj(use-26, they-25)
rcmod(words-24, use-26)
advcl(able-14, seem-27)
acomp(seem-27, addressed-28)
det(tyrant-31, a-30)
prep_to(addressed-28, tyrant-31)
neg(addressed-28, not-33)
det(Father-36, the-35)
prep_to(addressed-28, Father-36)
nn(Christ-39, Jesus-38)
prep_of(Father-36, Christ-39)

(ROOT
  (S (CC But)
    (PP (IN at)
      (ADJP (JJ present)))
    (NP (PRP I))
    (VP (MD can) (RB not))
    (. .)))

cc(can-5, But-1)
prep_at(can-5, present-3)
nsubj(can-5, I-4)
root(ROOT-0, can-5)
neg(can-5, not-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD might)
        (VP (VB endure)
          (S
            (VP (TO to)
              (VP (VB hear)
                (SBAR
                  (S
                    (NP (NNP Mr.) (NNP Smith))
                    (VP (VBP say)
                      (NP
                        (NP (JJ evil) (NNS things))
                        (PP (VBG concerning)
                          (NP (NNP God)))))))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP
          (NP (DT the) (JJ evil) (NNS things))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBZ says)
                (PP (TO to)
                  (NP (NNP God)))))))
        (VP (VBP make)
          (S
            (NP (PRP me))
            (ADJP (RB quite) (JJ unable)
              (PP (TO to)
                (NP (NN pray)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP feel)
          (PP (IN like)
            (NP (DT a) (NN hypocrite))))))
    (. !) ('' '')))

nsubj(endure-3, I-1)
nsubj(hear-5, I-1)
aux(endure-3, might-2)
root(ROOT-0, endure-3)
aux(hear-5, to-4)
xcomp(endure-3, hear-5)
nn(Smith-7, Mr.-6)
nsubj(say-8, Smith-7)
ccomp(hear-5, say-8)
amod(things-10, evil-9)
dobj(say-8, things-10)
prep_concerning(things-10, God-12)
det(things-17, the-15)
amod(things-17, evil-16)
nsubj(make-22, things-17)
nsubj(says-19, he-18)
rcmod(things-17, says-19)
prep_to(says-19, God-21)
conj_but(endure-3, make-22)
nsubj(unable-25, me-23)
advmod(unable-25, quite-24)
xcomp(make-22, unable-25)
prep_to(unable-25, pray-27)
nsubj(feel-31, I-30)
conj_but(endure-3, feel-31)
conj_and(make-22, feel-31)
det(hypocrite-34, a-33)
prep_like(feel-31, hypocrite-34)

(ROOT
  (S (`` ``)
    (SBAR
      (WHNP (WDT Whatever))
      (S
        (NP (PRP you))
        (VP (MD may)
          (VP (VB think)
            (PP (IN of)
              (NP
                (NP (NNP Mr.) (NNP Smith) (POS 's))
                (NNS doctrines)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ presumptuous)
        (S
          (VP (TO to)
            (VP (VB set)
              (NP (PRP yourself))
              (ADVP (RB up))
              (SBAR (IN as)
                (FRAG
                  (ADJP (RB too) (JJ good))))
              (S
                (VP (TO to)
                  (VP (VB go)
                    (PP (TO to)
                      (NP (NN church)))))))))))
    (. .) ('' '')))

dobj(think-5, Whatever-2)
nsubj(think-5, you-3)
aux(think-5, may-4)
advcl(presumptuous-14, think-5)
nn(Smith-8, Mr.-7)
poss(doctrines-10, Smith-8)
prep_of(think-5, doctrines-10)
nsubj(presumptuous-14, it-12)
nsubj(set-16, it-12)
cop(presumptuous-14, is-13)
root(ROOT-0, presumptuous-14)
aux(set-16, to-15)
xcomp(presumptuous-14, set-16)
dobj(set-16, yourself-17)
advmod(set-16, up-18)
mark(good-21, as-19)
advmod(good-21, too-20)
advcl(set-16, good-21)
aux(go-23, to-22)
vmod(set-16, go-23)
prep_to(go-23, church-25)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP
      (ADVP (RBS most))
      (VBP bear)
      (NP
        (NP (DT the) (NN reproach))
        (, ,)
        (NP (NN ma'am))))
    (. .)))

nsubj(bear-4, I-2)
advmod(bear-4, most-3)
root(ROOT-0, bear-4)
det(reproach-6, the-5)
dobj(bear-4, reproach-6)
appos(reproach-6, ma'am-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB consent)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (DT a) (NN hypocrite))
              (SBAR (IN in) (NN order)
                (S
                  (VP (TO to)
                    (VP (VB avoid)
                      (S
                        (VP (VBG being)
                          (VP (VBN called)
                            (NP (CD one))))))))))))))
    (. !) ('' '')))

nsubj(consent-4, I-1)
nsubj(hypocrite-8, I-1)
aux(consent-4, can-2)
neg(consent-4, not-3)
root(ROOT-0, consent-4)
aux(hypocrite-8, to-5)
cop(hypocrite-8, be-6)
det(hypocrite-8, a-7)
xcomp(consent-4, hypocrite-8)
mark(avoid-12, in-9)
dep(avoid-12, order-10)
aux(avoid-12, to-11)
advcl(hypocrite-8, avoid-12)
auxpass(called-14, being-13)
xcomp(avoid-12, called-14)
dobj(called-14, one-15)

(ROOT
  (S (CC Either)
    (NP (NNP Miss) (NNP Fordyce))
    (VP
      (VP (VBD had)
        (NP
          (NP (DT no) (NN answer))
          (PP (TO to)
            (NP (DT this)))))
      (, ,)
      (CC or)
      (VP (VBD did) (RB not)
        (VP (VB choose)
          (S
            (VP (TO to)
              (VP (VB give)
                (NP (DT any))))))))
    (. .)))

dep(had-4, Either-1)
nn(Fordyce-3, Miss-2)
nsubj(had-4, Fordyce-3)
nsubj(choose-13, Fordyce-3)
nsubj(give-15, Fordyce-3)
root(ROOT-0, had-4)
neg(answer-6, no-5)
dobj(had-4, answer-6)
prep_to(answer-6, this-8)
aux(choose-13, did-11)
neg(choose-13, not-12)
conj_or(had-4, choose-13)
aux(give-15, to-14)
xcomp(choose-13, give-15)
dobj(give-15, any-16)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD was) (RB not)
        (ADJP (JJ troubled))
        (SBAR (IN that)
          (S
            (NP (NNP Andrew))
            (VP (MD would) (RB not)
              (VP (VB go)
                (PP (TO to)
                  (NP (NN church))))))))
      (, ,)
      (CC but)
      (VP (VBD offended)
        (PP (IN at)
          (NP
            (NP (DT the) (VBG unhesitating) (NN decision))
            (SBAR
              (WHPP (IN with)
                (WHNP (WDT which)))
              (S
                (NP (PRP he))
                (VP (VBD set)
                  (NP (PRP$ her) (NN counsel))
                  (ADVP (RB aside)))))))))
    (. .)))

nsubj(troubled-4, She-1)
nsubj(offended-14, She-1)
cop(troubled-4, was-2)
neg(troubled-4, not-3)
root(ROOT-0, troubled-4)
mark(go-9, that-5)
nsubj(go-9, Andrew-6)
aux(go-9, would-7)
neg(go-9, not-8)
ccomp(troubled-4, go-9)
prep_to(go-9, church-11)
conj_but(troubled-4, offended-14)
det(decision-18, the-16)
amod(decision-18, unhesitating-17)
prep_at(offended-14, decision-18)
prep_with(set-22, decision-18)
nsubj(set-22, he-21)
rcmod(decision-18, set-22)
poss(counsel-24, her-23)
dobj(set-22, counsel-24)
advmod(set-22, aside-25)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD made)
      (NP (PRP her))
      (NP
        (NP (DT a) (JJ respectful) (NN bow))
        (, ,)
        (VP
          (VP (VBN turned)
            (PRT (RP away)))
          (, ,)
          (VP (VBN put)
            (PP (IN on)
              (NP
                (NP (PRP$ his) (NN bonnet))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN held)
                        (PP (IN in)
                          (NP (PRP$ his) (NN hand)))
                        (NP (PDT all) (DT the) (NN time))))))
                (, ,))))
          (CC and)
          (VP (VBN passed)
            (PP (IN through)
              (NP (DT the) (NN garden) (NN gate)))))))
    (. .)))

nsubj(made-2, Andrew-1)
root(ROOT-0, made-2)
iobj(made-2, her-3)
det(bow-6, a-4)
amod(bow-6, respectful-5)
dobj(made-2, bow-6)
dep(bow-6, turned-8)
prt(turned-8, away-9)
dep(bow-6, put-11)
conj_and(turned-8, put-11)
poss(bonnet-14, his-13)
prep_on(put-11, bonnet-14)
dobj(held-19, bonnet-14)
nsubj(held-19, he-17)
aux(held-19, had-18)
rcmod(bonnet-14, held-19)
poss(hand-22, his-21)
prep_in(held-19, hand-22)
predet(time-25, all-23)
det(time-25, the-24)
dobj(held-19, time-25)
dep(bow-6, passed-28)
conj_and(turned-8, passed-28)
det(gate-32, the-30)
nn(gate-32, garden-31)
prep_through(passed-28, gate-32)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ (VBZ is)
      (NP (DT the) (NN fellow)))
    (. ?) ('' '')))

root(ROOT-0, Who-2)
cop(Who-2, is-3)
det(fellow-5, the-4)
nsubj(Who-2, fellow-5)

(ROOT
  (NP
    (NP (JJ asked) (NNP George))
    (, ,)
    (NP
      (NP (VBG partaking) (NN sympathetically))
      (PP (IN of)
        (NP
          (NP (PRP$ his) (NN companion) (POS 's))
          (NN annoyance))))
    (. .)))

amod(George-2, asked-1)
root(ROOT-0, George-2)
amod(sympathetically-5, partaking-4)
appos(George-2, sympathetically-5)
poss(companion-8, his-7)
poss(annoyance-10, companion-8)
prep_of(sympathetically-5, annoyance-10)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBZ is)
      (NP
        (NP (NNP Andrew) (NNP Ingram))
        (, ,)
        (NP
          (NP (DT the) (NN son))
          (PP (IN of)
            (NP
              (NP (DT a) (JJ small) (NN farmer))
              (, ,)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP (PRP$ my) (NN father) (POS 's))
                    (NNS tenants)))))))))
    (. .)))

nsubj(Ingram-5, He-2)
cop(Ingram-5, is-3)
nn(Ingram-5, Andrew-4)
root(ROOT-0, Ingram-5)
det(son-8, the-7)
appos(Ingram-5, son-8)
det(farmer-12, a-10)
amod(farmer-12, small-11)
prep_of(son-8, farmer-12)
appos(farmer-12, one-14)
poss(father-17, my-16)
poss(tenants-19, father-17)
prep_of(one-14, tenants-19)

(ROOT
  (S
    (NP
      (NP (PRP He))
      (CC and)
      (NP (PRP$ his) (NN brother)))
    (VP (VBP work)
      (PP (IN with)
        (NP
          (NP (PRP$ their) (NN father))
          (PP (IN on)
            (NP (DT the) (NN farm))))))
    (. .)))

nsubj(work-5, He-1)
poss(brother-4, his-3)
conj_and(He-1, brother-4)
nsubj(work-5, brother-4)
root(ROOT-0, work-5)
poss(father-8, their-7)
prep_with(work-5, father-8)
det(farm-11, the-10)
prep_on(father-8, farm-11)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (NP
        (ADJP (RB quite) (JJ respectable))
        (NNS people)))
    (. .)))

nsubj(people-5, They-1)
cop(people-5, are-2)
advmod(respectable-4, quite-3)
amod(people-5, respectable-4)
root(ROOT-0, people-5)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP
      (VP (VBZ is)
        (VP (VBN conceited)))
      (, ,)
      (CC but)
      (VP (VBZ has)
        (NP (PRP$ his) (JJ good) (NNS points))))
    (. .)))

nsubjpass(conceited-3, Andrew-1)
nsubj(has-6, Andrew-1)
auxpass(conceited-3, is-2)
root(ROOT-0, conceited-3)
conj_but(conceited-3, has-6)
poss(points-9, his-7)
amod(points-9, good-8)
dobj(has-6, points-9)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ imagines)
        (S
          (NP (PRP himself))
          (NP (DT a) (NN poet)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB indeed))
      (NP (PRP$ his) (NN work))
      (VP (VBZ has)
        (NP (NN merit))))
    (. .)))

nsubj(imagines-2, He-1)
root(ROOT-0, imagines-2)
nsubj(poet-5, himself-3)
det(poet-5, a-4)
xcomp(imagines-2, poet-5)
advmod(has-11, indeed-8)
poss(work-10, his-9)
nsubj(has-11, work-10)
conj_and(imagines-2, has-11)
dobj(has-11, merit-12)

(ROOT
  (S
    (NP
      (NP (DT The) (JJS worst))
      (PP (IN of)
        (NP (PRP him))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBZ sets)
            (PRT (RP up))
            (PP (IN for)
              (S
                (VP (VBG being)
                  (ADJP (JJR better))
                  (PP (IN than)
                    (NP (JJ other) (NNS people))))))))))
    (. .) ('' '')))

det(worst-2, The-1)
nsubj(is-5, worst-2)
prep_of(worst-2, him-4)
root(ROOT-0, is-5)
mark(sets-8, that-6)
nsubj(sets-8, he-7)
ccomp(is-5, sets-8)
prt(sets-8, up-9)
cop(better-12, being-11)
prepc_for(sets-8, better-12)
amod(people-15, other-14)
prep_than(better-12, people-15)

(ROOT
  (S (`` ``) (RB Not)
    (NP (DT an) (JJ unusual))
    (VP (VBP fault)
      (PP (IN with)
        (NP (DT the) (NN self-educated))))
    (. !) ('' '')))

neg(fault-5, Not-2)
det(unusual-4, an-3)
nsubj(fault-5, unusual-4)
root(ROOT-0, fault-5)
det(self-educated-8, the-7)
prep_with(fault-5, self-educated-8)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP He))
      (VP (VBZ does)
        (VP (VB go)
          (PP (IN on)
            (S
              (VP (VBG educating)
                (NP (PRP himself))))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP believe)))
      (, ,))
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (NP (DT a) (JJ good) (NN start)
          (S
            (VP (TO to)
              (VP (VB begin)
                (PP (IN with))))))))
    (. .)))

nsubj(go-4, He-2)
aux(go-4, does-3)
root(ROOT-0, go-4)
prepc_on(go-4, educating-6)
dobj(educating-6, himself-7)
nsubj(believe-10, I-9)
dep(go-4, believe-10)
nsubj(had-14, he-13)
conj_but(go-4, had-14)
det(start-17, a-15)
amod(start-17, good-16)
dobj(had-14, start-17)
aux(begin-19, to-18)
vmod(start-17, begin-19)
prep(begin-19, with-20)

(ROOT
  (S
    (NP (PRP$ My) (NN father))
    (VP (VBD took)
      (NP (JJ much) (NNS pains))
      (PP (IN with)
        (NP (PRP him)))
      (PP (IN at)
        (NP (NN school))))
    (. .)))

poss(father-2, My-1)
nsubj(took-3, father-2)
root(ROOT-0, took-3)
amod(pains-5, much-4)
dobj(took-3, pains-5)
prep_with(took-3, him-7)
prep_at(took-3, school-9)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD helped)
        (S
          (VP (TO to)
            (VP (VB carry)
              (NP (PRP you))
              (ADVP (RB here))
              (PP (IN after)
                (NP (DT the) (NN accident)))))))
      (: --)
      (CC and)
      (VP (MD would)
        (VP (VB have)
          (VP (VBN taken)
            (NP (PRP you))
            (PP (TO to)
              (NP
                (NP (PRP$ his) (NN father))
                (SBAR
                  (S
                    (VP (VBZ 's)
                      (SBAR (IN if)
                        (S
                          (NP (PRP I))
                          (VP (MD would)
                            (VP (VB have)
                              (S
                                (VP (VB let)
                                  (NP (PRP him)))))))))))))))))
    (. .) ('' '')))

nsubj(helped-2, He-1)
nsubj(carry-4, He-1)
nsubj(taken-14, He-1)
root(ROOT-0, helped-2)
aux(carry-4, to-3)
xcomp(helped-2, carry-4)
dobj(carry-4, you-5)
advmod(carry-4, here-6)
det(accident-9, the-8)
prep_after(carry-4, accident-9)
aux(taken-14, would-12)
aux(taken-14, have-13)
conj_and(helped-2, taken-14)
dobj(taken-14, you-15)
poss(father-18, his-17)
prep_to(taken-14, father-18)
rcmod(father-18, 's-19)
mark(have-23, if-20)
nsubj(have-23, I-21)
aux(have-23, would-22)
advcl('s-19, have-23)
ccomp(have-23, let-24)
dobj(let-24, him-25)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD cast)
      (PP (IN on)
        (NP (PRP$ her)
          (NP
            (NP (DT a) (NN look))
            (PP (IN of)
              (NP (NN gratitude)))))))
    (. .)))

nsubj(cast-2, George-1)
root(ROOT-0, cast-2)
poss(look-6, her-4)
det(look-6, a-5)
prep_on(cast-2, look-6)
prep_of(look-6, gratitude-8)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Thank)
        (NP (PRP you))
        (PP (IN for)
          (S
            (VP (VBG keeping)
              (NP (PRP me)))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

ccomp(said-10, Thank-2)
dobj(Thank-2, you-3)
prepc_for(Thank-2, keeping-5)
dobj(keeping-5, me-6)
nsubj(said-10, he-9)
root(ROOT-0, said-10)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD had)
            (VP (VBN taken)
              (NP
                (NP (DT some) (NN notice))
                (PP (IN of)
                  (NP (PRP$ his) (NN kindness)))))))))
    (. !) ('' '')))

cc(wish-4, But-2)
nsubj(wish-4, I-3)
root(ROOT-0, wish-4)
nsubj(taken-7, I-5)
aux(taken-7, had-6)
ccomp(wish-4, taken-7)
det(notice-9, some-8)
dobj(taken-7, notice-9)
poss(kindness-12, his-11)
prep_of(notice-9, kindness-12)

(ROOT
  (NP (NNP CHAPTER) (NNP X.) (NNP ANDREW) (NNP INGRAM) (. .)))

nn(INGRAM-4, CHAPTER-1)
nn(INGRAM-4, X.-2)
nn(INGRAM-4, ANDREW-3)
root(ROOT-0, INGRAM-4)

(ROOT
  (S
    (PP (IN Of)
      (NP
        (NP (DT the) (NNS persons))
        (PP (IN in)
          (NP (PRP$ my) (NN narrative)))))
    (, ,)
    (NP (NNP Andrew) (NNP Ingram))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS simplest))
        (, ,)
        (NP
          (ADVP (RB therefore))
          (DT the) (JJS hardest)))
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN understood)
              (PP (IN by)
                (NP (DT an) (JJ ordinary) (NN reader))))))))
    (. .)))

det(persons-3, the-2)
prep_of(simplest-12, persons-3)
poss(narrative-6, my-5)
prep_in(persons-3, narrative-6)
nn(Ingram-9, Andrew-8)
nsubj(simplest-12, Ingram-9)
cop(simplest-12, is-10)
det(simplest-12, the-11)
root(ROOT-0, simplest-12)
advmod(hardest-16, therefore-14)
det(hardest-16, the-15)
appos(simplest-12, hardest-16)
aux(understood-19, to-17)
auxpass(understood-19, be-18)
vmod(simplest-12, understood-19)
det(reader-23, an-21)
amod(reader-23, ordinary-22)
agent(understood-19, reader-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (VP (VB take)
        (PRT (RP up))
        (NP (PRP$ his) (NN history))
        (PP (IN from)
          (NP
            (NP (DT a) (JJ certain) (NN point))
            (PP (IN in)
              (NP (PRP$ his) (NN childhood)))))))
    (. .)))

nsubj(take-3, I-1)
aux(take-3, must-2)
root(ROOT-0, take-3)
prt(take-3, up-4)
poss(history-6, his-5)
dobj(take-3, history-6)
det(point-10, a-8)
amod(point-10, certain-9)
prep_from(take-3, point-10)
poss(childhood-13, his-12)
prep_in(point-10, childhood-13)

(ROOT
  (S
    (NP
      (NP (CD One) (NN summer) (NN evening))
      (, ,)
      (NP (PRP he))
      (CC and)
      (NP (PRP$ his) (NN brother) (NNP Sandy)))
    (VP (VBD were)
      (VP (VBG playing)
        (ADVP (RB together))
        (PP (IN on)
          (NP
            (NP (DT a) (NN knoll))
            (PP (IN in)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP (PRP$ their) (NN father) (POS 's))
                    (NNS fields)))))))))
    (. .)))

num(evening-3, One-1)
nn(evening-3, summer-2)
nsubj(playing-11, evening-3)
conj_and(evening-3, he-5)
nsubj(playing-11, he-5)
poss(Sandy-9, his-7)
nn(Sandy-9, brother-8)
conj_and(evening-3, Sandy-9)
nsubj(playing-11, Sandy-9)
aux(playing-11, were-10)
root(ROOT-0, playing-11)
advmod(playing-11, together-12)
det(knoll-15, a-14)
prep_on(playing-11, knoll-15)
prep_in(knoll-15, one-17)
poss(father-20, their-19)
poss(fields-22, father-20)
prep_of(one-17, fields-22)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD was)
      (UCP
        (ADJP
          (NP (CD ten) (NNS years))
          (JJ old))
        (, ,)
        (CC and)
        (VP (VBG Sandy)
          (NP
            (NP (DT a) (NN year))
            (JJR younger)))))
    (. .)))

nsubj(old-5, Andrew-1)
nsubj(Sandy-8, Andrew-1)
cop(old-5, was-2)
num(years-4, ten-3)
npadvmod(old-5, years-4)
root(ROOT-0, old-5)
conj_and(old-5, Sandy-8)
det(year-10, a-9)
dep(younger-11, year-10)
dobj(Sandy-8, younger-11)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (CD two))
        (VP (VBD quarreled)))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (DT the) (NN spirit))
          (PP (IN of)
            (ADJP (JJ ancestral))))
        (VP (VBZ borderers)
          (S
            (VP (VBG waking)
              (PP (IN in)
                (NP (PRP them))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD fell)
      (PP (TO to)
        (NP (NNS blows))))
    (. .)))

det(two-2, The-1)
nsubj(quarreled-3, two-2)
ccomp(fell-16, quarreled-3)
det(spirit-7, the-6)
nsubj(borderers-10, spirit-7)
prep_of(spirit-7, ancestral-9)
conj_and(quarreled-3, borderers-10)
ccomp(fell-16, borderers-10)
xcomp(borderers-10, waking-11)
prep_in(waking-11, them-13)
nsubj(fell-16, they-15)
root(ROOT-0, fell-16)
prep_to(fell-16, blows-18)

(ROOT
  (SINV
    (S
      (S
        (NP (DT The) (JJR younger))
        (VP (VBD was)
          (NP
            (NP (DT the) (JJR stronger))
            (PP (IN for)
              (NP (PRP$ his) (NNS years))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP they))
        (VP (VBD were)
          (VP
            (VP (VBG punching)
              (NP (DT each) (JJ other))
              (PP (IN with)
                (NP
                  (NP (JJ relentless) (NN vigor))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (ADVP (RB suddenly))
                      (NP (PRP they))
                      (VP (VBD heard)
                        (NP (DT a) (NN voice)))))
                  (, ,))))
            (CC and)
            (VP (VBG stopping)
              (NP (PRP$ their) (NN fight)))))))
    (, ,)
    (VP (VBD saw)
      (PP (IN before)
        (NP (PRP them))))
    (NP
      (NP (DT an) (JJ humble-looking) (NN man))
      (PP (IN with)
        (NP
          (NP (DT a) (NN pack))
          (PP (IN on)
            (NP (PRP$ his) (NN back))))))
    (. .)))

det(younger-2, The-1)
nsubj(stronger-5, younger-2)
cop(stronger-5, was-3)
det(stronger-5, the-4)
ccomp(saw-32, stronger-5)
poss(years-8, his-7)
prep_for(stronger-5, years-8)
nsubj(punching-13, they-11)
nsubj(stopping-28, they-11)
aux(punching-13, were-12)
conj_and(stronger-5, punching-13)
ccomp(saw-32, punching-13)
det(other-15, each-14)
dobj(punching-13, other-15)
amod(vigor-18, relentless-17)
prep_with(punching-13, vigor-18)
tmod(heard-23, vigor-18)
advmod(heard-23, when-20)
advmod(heard-23, suddenly-21)
nsubj(heard-23, they-22)
rcmod(vigor-18, heard-23)
det(voice-25, a-24)
dobj(heard-23, voice-25)
conj_and(stronger-5, stopping-28)
conj_and(punching-13, stopping-28)
poss(fight-30, their-29)
dobj(stopping-28, fight-30)
root(ROOT-0, saw-32)
prep_before(saw-32, them-34)
det(man-37, an-35)
amod(man-37, humble-looking-36)
nsubj(saw-32, man-37)
det(pack-40, a-39)
prep_with(man-37, pack-40)
poss(back-43, his-42)
prep_on(pack-40, back-43)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN peddler))
          (VP
            (VP (VBN known)
              (PP (IN in)
                (NP (DT the) (NN neighborhood))))
            (, ,)
            (CC and)
            (VP (VBN noted)
              (PP (IN for)
                (NP
                  (NP (PRP$ his) (NN honesty))
                  (CC and)
                  (NP (PRP$ his) (NN silence)))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NNS boys))
      (VP (VBD had)
        (ADVP (RB never))
        (VP (VBN seen)
          (NP (PRP him)))))
    (. .)))

nsubj(peddler-4, He-1)
cop(peddler-4, was-2)
det(peddler-4, a-3)
root(ROOT-0, peddler-4)
dep(peddler-4, known-5)
det(neighborhood-8, the-7)
prep_in(known-5, neighborhood-8)
dep(peddler-4, noted-11)
conj_and(known-5, noted-11)
poss(honesty-14, his-13)
prep_for(noted-11, honesty-14)
poss(silence-17, his-16)
prep_for(noted-11, silence-17)
conj_and(honesty-14, silence-17)
det(boys-21, the-20)
nsubj(seen-24, boys-21)
aux(seen-24, had-22)
neg(seen-24, never-23)
conj_but(peddler-4, seen-24)
dobj(seen-24, him-25)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD stood)
      (ADJP (JJ abashed))
      (PP (IN before)
        (NP
          (NP (PRP him))
          (, ,)
          (VP (VBN dazed)
            (PP (IN with)
              (NP
                (NP
                  (NP (DT the) (NNS blows))
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBD had)
                        (VP
                          (VP (VBN received))
                          (, ,)
                          (CC and)
                          (VP (RB not)
                            (ADJP
                              (NP (DT a) (RB little))
                              (JJ ashamed)))))
                      (: ;)
                      (SBAR (IN for)
                        (S
                          (NP (PRP they))
                          (VP (VBD were)
                            (ADVP (RB well))
                            (VP (VBN brought)
                              (PRT (RP up)))))))))
                (, ,)
                (NP (PRP$ their) (NN mother)
                  (S
                    (VP (VBG being)
                      (NP (DT an) (JJ honest) (NN disciplinarian)))))
                (, ,)
                (CC and)
                (NP
                  (NP (PRP$ their) (NN father))
                  (VP
                    (ADVP (RB never))
                    (VBG interfering)
                    (PP (IN with)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP she))
                          (VP (VBN judged)
                            (ADVP (RB right))))))))))))))
    (. .)))

nsubj(stood-2, They-1)
root(ROOT-0, stood-2)
acomp(stood-2, abashed-3)
prep_before(stood-2, him-5)
vmod(him-5, dazed-7)
det(blows-10, the-9)
prep_with(dazed-7, blows-10)
nsubj(received-13, they-11)
nsubj(ashamed-19, they-11)
aux(received-13, had-12)
rcmod(blows-10, received-13)
neg(ashamed-19, not-16)
det(little-18, a-17)
npadvmod(ashamed-19, little-18)
rcmod(blows-10, ashamed-19)
conj_and(received-13, ashamed-19)
mark(brought-25, for-21)
nsubjpass(brought-25, they-22)
auxpass(brought-25, were-23)
advmod(brought-25, well-24)
parataxis(received-13, brought-25)
prt(brought-25, up-26)
poss(mother-29, their-28)
prep_with(dazed-7, mother-29)
conj_and(blows-10, mother-29)
cop(disciplinarian-33, being-30)
det(disciplinarian-33, an-31)
amod(disciplinarian-33, honest-32)
dep(mother-29, disciplinarian-33)
poss(father-37, their-36)
prep_with(dazed-7, father-37)
conj_and(blows-10, father-37)
neg(interfering-39, never-38)
vmod(father-37, interfering-39)
dobj(judged-43, what-41)
nsubj(judged-43, she-42)
prepc_with(interfering-39, judged-43)
advmod(judged-43, right-44)

(ROOT
  (S
    (S
      (NP (DT The) (NN sun))
      (VP (VBD was)
        (PP (IN near)
          (NP
            (NP (DT the) (NN setting) (, ,)
              (CC and)
              (NN shone))
            (PP (IN with)
              (NP (NN level) (NNS rays)))))
        (ADJP (JJ full)
          (PP (IN on)
            (NP (DT the) (NN peddler))))))
    (: ;)
    (S (CC but)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBD thought)
            (PP (IN of)
              (NP (PRP him)))
            (ADVP (RB afterward)))))
      (, ,)
      (NP (PRP they))
      (VP (VBD seemed)
        (S
          (VP (TO to)
            (VP (VB remember)
              (NP (JJR more) (NN light))
              (PP (IN in)
                (NP (PRP$ his) (NN face)))
              (PP (IN than)
                (NP
                  (NP (DT that))
                  (PP (IN of)
                    (NP (DT the) (NN sun))))))))))
    (. .)))

det(sun-2, The-1)
nsubj(full-13, sun-2)
cop(full-13, was-3)
det(setting-6, the-5)
prep_near(full-13, setting-6)
conj_and(setting-6, shone-9)
prep_near(full-13, shone-9)
nn(rays-12, level-11)
prep_with(setting-6, rays-12)
root(ROOT-0, full-13)
det(peddler-16, the-15)
prep_on(full-13, peddler-16)
cc(seemed-27, but-18)
advmod(thought-21, when-19)
nsubj(thought-21, they-20)
advcl(seemed-27, thought-21)
prep_of(thought-21, him-23)
advmod(thought-21, afterward-24)
nsubj(seemed-27, they-26)
nsubj(remember-29, they-26)
parataxis(full-13, seemed-27)
aux(remember-29, to-28)
xcomp(seemed-27, remember-29)
amod(light-31, more-30)
dobj(remember-29, light-31)
poss(face-34, his-33)
prep_in(remember-29, face-34)
prep_than(remember-29, that-36)
det(sun-39, the-38)
prep_of(that-36, sun-39)

(ROOT
  (S
    (S
      (NP (PRP$ Their) (NN conscience))
      (VP (VBD bore)
        (S
          (NP (PRP him))
          (NP (NN witness)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NN look))
      (VP (VBZ awed)
        (NP (PRP them))))
    (. .)))

poss(conscience-2, Their-1)
nsubj(bore-3, conscience-2)
root(ROOT-0, bore-3)
nsubj(witness-5, him-4)
xcomp(bore-3, witness-5)
poss(look-9, his-8)
nsubj(awed-10, look-9)
conj_and(bore-3, awed-10)
dobj(awed-10, them-11)

(ROOT
  (S
    (S
      (ADVP (RB Involuntarily))
      (NP (PRP they))
      (VP (VBD turned)
        (PP (IN from)
          (NP (PRP him)))
        (, ,)
        (S
          (VP (VBG seeking)
            (NP (NN refuge))
            (PP (IN with)
              (NP (DT each) (JJ other)))))))
    (: :)
    (S
      (NP (PRP$ his) (NNS eyes))
      (VP (VBP shone)
        (ADVP (RB so))))
    (. !)))

advmod(turned-3, Involuntarily-1)
nsubj(turned-3, they-2)
root(ROOT-0, turned-3)
prep_from(turned-3, him-5)
xcomp(turned-3, seeking-7)
dobj(seeking-7, refuge-8)
det(other-11, each-10)
prep_with(seeking-7, other-11)
poss(eyes-14, his-13)
nsubj(shone-15, eyes-14)
parataxis(turned-3, shone-15)
advmod(shone-15, so-16)

(ROOT
  (S
    (S
      (NP (PRP they))
      (VP (VBD said)))
    (: ;)
    (S (CC but)
      (ADVP (RB immediately))
      (NP (PRP they))
      (VP (VBD turned)
        (PP (TO to)
          (NP (PRP him)))
        (ADVP (RB again))))
    (. .)))

nsubj(said-2, they-1)
root(ROOT-0, said-2)
cc(turned-7, but-4)
advmod(turned-7, immediately-5)
nsubj(turned-7, they-6)
parataxis(said-2, turned-7)
prep_to(turned-7, him-9)
advmod(turned-7, again-10)

(ROOT
  (S
    (S
      (S
        (NP (NNP Sandy))
        (VP (VBD knew)
          (NP (DT the) (NNS pictures))
          (PP (IN in)
            (NP (DT the) (`` ``) (NNP Pilgrim) (POS 's) (NNP Progress)))))
      (, ,) ('' '')
      (CC and)
      (S
        (NP (NNP Andrew))
        (VP (VBD had)
          (VP (VBN read)
            (NP (PRP it))
            (PP (IN through)
              (NP
                (QP (JJR more) (IN than) (RB once))))))))
    (: :)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBD saw)
            (SBAR
              (S
                (NP (DT the) (NN man))
                (VP (VBD had)
                  (NP
                    (NP (DT a) (NN book))
                    (PP (IN in)
                      (NP (PRP$ his) (NN hand))))
                  (, ,)
                  (ADVP (RB open))
                  (, ,)
                  (CC and)
                  (VP (VBD heard)
                    (SBAR
                      (S
                        (NP (PRP him))
                        (, ,)
                        (S
                          (VP (VBG standing)
                            (ADVP (RB there))
                            (PP (IN in)
                              (NP (DT the) (NN sun)))))
                        (, ,)
                        (VP (VBP begin)
                          (S
                            (VP (TO to)
                              (VP (VB read)
                                (PP (IN from)
                                  (NP (PRP it))))))))))))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD must)
              (VP (VB be)
                (NP
                  (NP (NNP Christian))
                  (, ,)
                  (VP (VBG waiting)
                    (PP (IN for)
                      (NP (NNP Evangelist)))
                    (S
                      (VP (TO to)
                        (VP (VB come)
                          (PP (TO to)
                            (NP (PRP him))))))))))))))
    (. .)))

nsubj(knew-2, Sandy-1)
root(ROOT-0, knew-2)
det(pictures-4, the-3)
dobj(knew-2, pictures-4)
det(Progress-10, the-6)
poss(Progress-10, Pilgrim-8)
possessive(Progress-10, 's-9)
prep_in(knew-2, Progress-10)
nsubj(read-16, Andrew-14)
aux(read-16, had-15)
conj_and(knew-2, read-16)
dobj(read-16, it-17)
prep(read-16, through-18)
quantmod(than-20, more-19)
pobj(through-18, than-20)
quantmod(than-20, once-21)
advmod(saw-25, when-23)
nsubj(saw-25, they-24)
advcl(thought-54, saw-25)
det(man-27, the-26)
nsubj(book-30, man-27)
nsubj(heard-38, man-27)
aux(book-30, had-28)
det(book-30, a-29)
ccomp(saw-25, book-30)
poss(hand-33, his-32)
prep_in(book-30, hand-33)
ccomp(saw-25, open-35)
advmod(book-30, open-35)
conj_and(book-30, open-35)
ccomp(saw-25, heard-38)
conj_and(book-30, heard-38)
nsubj(begin-47, him-39)
nsubj(read-49, him-39)
vmod(begin-47, standing-41)
advmod(standing-41, there-42)
det(sun-45, the-44)
prep_in(standing-41, sun-45)
ccomp(heard-38, begin-47)
aux(read-49, to-48)
xcomp(begin-47, read-49)
prep_from(read-49, it-51)
nsubj(thought-54, they-53)
parataxis(knew-2, thought-54)
nsubj(Christian-58, it-55)
aux(Christian-58, must-56)
cop(Christian-58, be-57)
ccomp(thought-54, Christian-58)
vmod(Christian-58, waiting-60)
prep_for(waiting-60, Evangelist-62)
aux(come-64, to-63)
xcomp(waiting-60, come-64)
prep_to(come-64, him-66)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (JJ impossible)
          (S
            (VP (TO to)
              (VP (VB say)
                (NP
                  (SBAR
                    (WHNP (WRB how) (JJ much))
                    (S
                      (VP (VBZ is)
                        (NP (NN fact)))))
                  (CC and)
                  (SBAR
                    (WHNP
                      (WHNP
                        (WHADJP (WRB how) (JJ much))
                        (NNS imagination))
                      (WHPP (IN in)
                        (WHNP (WP what) (NNS children))))
                    (S
                      (VP (VBP recollect)))))))))))
    (: ;)
    (S
      (NP (DT the) (NN one))
      (VP (MD must)
        (ADVP (RB almost) (RB always))
        (VP (VB supplement)
          (NP (DT the) (JJ other)))))
    (: ;)
    (S (CC but)
      (NP (PRP they))
      (VP (VBD were)
        (ADJP (RB quite) (JJ sure))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NNS words))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD read)))))
            (VP (VBD were)
              (NP (DT these)))))))
    (: :) (`` ``)
    (CC And)
    (S
      (ADVP (RB lo))
      (, ,)
      (NP (PRP I))
      (VP (VBP am)
        (PP
          (PP (IN with)
            (NP (PRP you)))
          (ADVP (RB always))
          (, ,) (RB even)
          (PP (TO to)
            (NP
              (NP (DT the) (NN end))
              (PP (IN of)
                (NP (DT the) (NN world))))))))
    (. !) ('' '')))

nsubj(impossible-3, It-1)
nsubj(say-5, It-1)
cop(impossible-3, is-2)
root(ROOT-0, impossible-3)
aux(say-5, to-4)
xcomp(impossible-3, say-5)
advmod(much-7, how-6)
advmod(fact-9, much-7)
nsubj(fact-9, much-7)
cop(fact-9, is-8)
dobj(say-5, fact-9)
advmod(much-12, how-11)
amod(imagination-13, much-12)
nsubj(recollect-17, imagination-13)
det(children-16, what-15)
prep_in(imagination-13, children-16)
dobj(say-5, recollect-17)
conj_and(fact-9, recollect-17)
det(one-20, the-19)
nsubj(supplement-24, one-20)
aux(supplement-24, must-21)
advmod(always-23, almost-22)
advmod(supplement-24, always-23)
conj_and(impossible-3, supplement-24)
det(other-26, the-25)
dobj(supplement-24, other-26)
cc(sure-32, but-28)
nsubj(sure-32, they-29)
cop(sure-32, were-30)
advmod(sure-32, quite-31)
conj_and(impossible-3, sure-32)
mark(these-39, that-33)
det(words-35, the-34)
nsubj(these-39, words-35)
nsubj(read-37, he-36)
rcmod(words-35, read-37)
cop(these-39, were-38)
ccomp(sure-32, these-39)
advmod(am-46, lo-43)
nsubj(am-46, I-45)
conj_and(impossible-3, am-46)
prep_with(am-46, you-48)
dep(am-46, always-49)
dep(am-46, even-51)
det(end-54, the-53)
prep_to(am-46, end-54)
det(world-57, the-56)
prep_of(end-54, world-57)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ next) (NN thing))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD remembered)))))
      (VP (VBD was)
        (NP (PRP$ their) (NN walking))
        (ADVP (RB slowly) (RB down))
        (NP
          (NP (DT the) (NN hill))
          (PP (IN in)
            (NP (DT the) (JJ red) (NN light))))))
    (, ,)
    (CC and)
    (RB all)
    (S
      (PP (IN at)
        (S
          (ADVP (RB once))
          (VP (VBG waking)
            (PRT (RP up))
            (PP (TO to)
              (NP (DT the) (NN fact)))
            (SBAR (IN that)
              (S
                (NP (DT the) (NN man))
                (VP (VBD was)
                  (VP (VBN gone))))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD did) (RB not)
        (VP (VB know)
          (SBARQ
            (WHADVP (WRB when)
              (CC or)
              (WRB where))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, next-2)
nsubj(walking-8, thing-3)
nsubj(remembered-5, they-4)
rcmod(thing-3, remembered-5)
cop(walking-8, was-6)
poss(walking-8, their-7)
root(ROOT-0, walking-8)
advmod(down-10, slowly-9)
advmod(walking-8, down-10)
det(hill-12, the-11)
dep(walking-8, hill-12)
det(light-16, the-14)
amod(light-16, red-15)
prep_in(hill-12, light-16)
advmod(walking-8, all-19)
conj_and(walking-8, all-19)
advmod(waking-22, once-21)
prepc_at(know-36, waking-22)
prt(waking-22, up-23)
det(fact-26, the-25)
prep_to(waking-22, fact-26)
mark(gone-31, that-27)
det(man-29, the-28)
nsubjpass(gone-31, man-29)
auxpass(gone-31, was-30)
ccomp(waking-22, gone-31)
nsubj(know-36, they-33)
aux(know-36, did-34)
neg(know-36, not-35)
ccomp(walking-8, know-36)
ccomp(know-36, when-37)
cc(when-37, or-38)
dep(when-37, where-39)

(ROOT
  (S (CC But)
    (S
      (NP (PRP$ their) (NNS arms))
      (VP (VBD were)
        (VP (VBG round)
          (NP
            (NP (DT each) (JJ other) (POS 's))
            (NNS necks)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD were)
        (ADJP (JJ full)
          (PP (IN of)
            (NP (DT a) (JJ strange) (NN awe))))))
    (. .)))

poss(arms-3, their-2)
nsubj(round-5, arms-3)
aux(round-5, were-4)
root(ROOT-0, round-5)
det(other-7, each-6)
poss(necks-9, other-7)
dobj(round-5, necks-9)
nsubj(full-14, they-12)
cop(full-14, were-13)
conj_and(round-5, full-14)
det(awe-18, a-16)
amod(awe-18, strange-17)
prep_of(full-14, awe-18)

(ROOT
  (S (RB Then)
    (NP (NNP Andrew))
    (VP (VBD saw)
      (NP (NN something) (NN red))
      (PP (IN on)
        (NP
          (NP (NNP Sandy) (POS 's))
          (NN face))))
    (. .)))

advmod(saw-3, Then-1)
nsubj(saw-3, Andrew-2)
root(ROOT-0, saw-3)
nn(red-5, something-4)
dobj(saw-3, red-5)
poss(face-9, Sandy-7)
prep_on(saw-3, face-9)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Eh))
    (, ,)
    (NP (NNP Sandy))
    (. !) ('' '')))

root(ROOT-0, Eh-2)
dep(Eh-2, Sandy-4)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD cried) (, ,) (`` ``)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (VP (VBN bluid)))))
    (. !) ('' '')))

nsubj(cried-2, he-1)
root(ROOT-0, cried-2)
nsubjpass(bluid-7, it-5)
auxpass(bluid-7, 's-6)
ccomp(cried-2, bluid-7)

(ROOT
  (S
    (NP (NNP and))
    (VP (VBP burst)
      (PP (IN into)
        (NP (NNS tears))))
    (. .)))

nsubj(burst-2, and-1)
root(ROOT-0, burst-2)
prep_into(burst-2, tears-4)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (PRP$ his) (JJ own) (NN blood))
        (, ,) (RB not)
        (NP (NNP Sandy) (POS 's))))
    (. !)))

nsubj(blood-5, It-1)
cop(blood-5, was-2)
poss(blood-5, his-3)
amod(blood-5, own-4)
root(ROOT-0, blood-5)
neg(Sandy-8, not-7)
appos(blood-5, Sandy-8)
poss(blood-5, Sandy-8)

(ROOT
  (NP (: --)
    (NP (DT the) (NN discovery))
    (SBAR
      (WHPP (IN of)
        (WHNP (WDT which)))
      (S
        (NP
          (NP (NN fact))
          (VP
            (VP (VBN relieved)
              (NP (NNP Andrew)))
            (, ,)
            (CC and)
            (VP (VBD did))))
        (RB not)
        (ADVP (RB so))
        (VP
          (ADVP (RB greatly))
          (VB discompose)
          (NP
            (NP (NNP Sandy))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD was)
                  (ADJP (RBR less) (JJ sensitive)))))))))
    (. .)))

det(discovery-3, the-2)
root(ROOT-0, discovery-3)
prep_of(discompose-15, discovery-3)
nsubj(discompose-15, fact-6)
dep(fact-6, relieved-7)
dobj(relieved-7, Andrew-8)
dep(fact-6, did-11)
conj_and(relieved-7, did-11)
neg(discompose-15, not-12)
advmod(discompose-15, so-13)
advmod(discompose-15, greatly-14)
rcmod(discovery-3, discompose-15)
dobj(discompose-15, Sandy-16)
nsubj(sensitive-21, Sandy-16)
cop(sensitive-21, was-19)
advmod(sensitive-21, less-20)
rcmod(Sandy-16, sensitive-21)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD began)
      (PP (IN at)
        (NP (NN length)))
      (S
        (VP (TO to)
          (VP (VB speculate)
            (PP (IN on)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD had)
                    (VP (VBN happened))))))))))
    (. .)))

nsubj(began-2, They-1)
nsubj(speculate-6, They-1)
root(ROOT-0, began-2)
prep_at(began-2, length-4)
aux(speculate-6, to-5)
xcomp(began-2, speculate-6)
nsubj(happened-10, what-8)
aux(happened-10, had-9)
prepc_on(speculate-6, happened-10)

(ROOT
  (S
    (S
      (NP (CD One) (NN thing))
      (VP (VBD was)
        (ADJP (JJ clear))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (SBAR (IN because)
          (S
            (NP (PRP they))
            (VP (VBD were)
              (VP (VBG fighting)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN man))
                    (VP (VBD had)
                      (VP (VBN come)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was) (RB not)
        (ADJP (RB so) (JJ clear))
        (SBAR
          (WHNP (WP who))
          (S
            (NP (DT the) (NN man))
            (VP (VBD was))))))
    (. .)))

num(thing-2, One-1)
nsubj(clear-4, thing-2)
cop(clear-4, was-3)
root(ROOT-0, clear-4)
nsubj(was-7, it-6)
conj_but(clear-4, was-7)
mark(fighting-11, because-8)
nsubj(fighting-11, they-9)
aux(fighting-11, were-10)
advcl(was-7, fighting-11)
mark(come-16, that-12)
det(man-14, the-13)
nsubj(come-16, man-14)
aux(come-16, had-15)
ccomp(fighting-11, come-16)
nsubj(clear-23, it-19)
cop(clear-23, was-20)
neg(clear-23, not-21)
advmod(clear-23, so-22)
conj_but(clear-4, clear-23)
dobj(was-27, who-24)
det(man-26, the-25)
nsubj(was-27, man-26)
ccomp(clear-23, was-27)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD could) (RB not)
      (VP (VB be)
        (NP (NNP Christian))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (NNP Christian))
            (VP (VBD went)
              (PP (IN over)
                (NP (DT the) (NN river))))))))
    (. !)))

nsubj(Christian-5, He-1)
aux(Christian-5, could-2)
neg(Christian-5, not-3)
cop(Christian-5, be-4)
root(ROOT-0, Christian-5)
mark(went-9, because-7)
nsubj(went-9, Christian-8)
advcl(Christian-5, went-9)
det(river-12, the-11)
prep_over(went-9, river-12)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD suggested)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD might)
            (VP (VB have)
              (VP (VBN been)
                (NP
                  (NP (NNP Evangelist))
                  (, ,)
                  (SBAR (IN for)
                    (S
                      (NP (PRP he))
                      (VP (VBD seemed)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (ADVP (RB always))
                              (PP (IN about)))))))))))))))
    (. .)))

nsubj(suggested-2, Andrew-1)
root(ROOT-0, suggested-2)
nsubj(Evangelist-7, it-3)
aux(Evangelist-7, might-4)
aux(Evangelist-7, have-5)
cop(Evangelist-7, been-6)
ccomp(suggested-2, Evangelist-7)
prep_about(be-13, Evangelist-7)
mark(seemed-11, for-9)
nsubj(seemed-11, he-10)
nsubj(be-13, he-10)
rcmod(Evangelist-7, seemed-11)
aux(be-13, to-12)
xcomp(seemed-11, be-13)
advmod(be-13, always-14)

(ROOT
  (S
    (NP (NNP Sandy))
    (VP (VBD added) (, ,)
      (PP (IN as)
        (NP (PRP$ his) (NN contribution)))
      (PP (TO to)
        (NP (DT the) (NN idea)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD might)
            (VP (VB have)
              (VP
                (VP (VBN picked)
                  (PRT (RP up))
                  (NP
                    (NP (NNP Christian) (POS 's))
                    (NN bundle)))
                (CC and)
                (VP (VBN been)
                  (VP (VBG carrying)
                    (NP (PRP it))
                    (ADVP (RB home))
                    (PP (TO to)
                      (NP (PRP$ his) (NN wife)))))))))))
    (. .)))

nsubj(added-2, Sandy-1)
root(ROOT-0, added-2)
poss(contribution-6, his-5)
prep_as(added-2, contribution-6)
det(idea-9, the-8)
prep_to(added-2, idea-9)
mark(picked-15, that-11)
nsubj(picked-15, he-12)
nsubj(carrying-22, he-12)
aux(picked-15, might-13)
aux(picked-15, have-14)
ccomp(added-2, picked-15)
prt(picked-15, up-16)
poss(bundle-19, Christian-17)
dobj(picked-15, bundle-19)
aux(carrying-22, been-21)
ccomp(added-2, carrying-22)
conj_and(picked-15, carrying-22)
dobj(carrying-22, it-23)
advmod(carrying-22, home-24)
poss(wife-27, his-26)
prep_to(carrying-22, wife-27)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD came) (, ,)
      (ADVP (RB however))
      (, ,)
      (PP (TO to)
        (NP (DT the) (NN conclusion)))
      (, ,)
      (PP
        (PP (IN by)
          (NP (DT no) (NN ratiocination)))
        (PRN (, ,)
          (S
            (NP (PRP I))
            (VP (VBP think)))
          (, ,))
        (CC but)
        (PP (IN by)
          (NP
            (NP (DT a) (NN conviction))
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (DT the) (NN idea))
                (ADVP (PRP itself))
                (VP (VBD brought)
                  (PP (IN with)
                    (NP (PRP it)))
                  (, ,)
                  (SBAR
                    (SBAR (IN that)
                      (S
                        (NP (DT the) (NN stranger))
                        (VP (VBD was)
                          (S
                            (NP (DT the) (NNP Lord))
                            (NP (PRP himself))))))
                    (, ,)
                    (CC and)
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (DT the) (NN pack))
                          (PP (IN on)
                            (NP (PRP$ His) (NN back))))
                        (VP (VBD was)
                          (NP (PRP$ their) (NNS sins)))))))))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP He))
            (VP (VBD was)
              (VP (VBG carrying)
                (PRT (RP away))
                (S
                  (VP (TO to)
                    (VP (VB throw)
                      (PRT (RP out))
                      (PP (IN of)
                        (NP (DT the) (NN world))))))))))))
    (. .)))

nsubj(came-2, They-1)
root(ROOT-0, came-2)
advmod(came-2, however-4)
det(conclusion-8, the-7)
prep_to(came-2, conclusion-8)
neg(ratiocination-12, no-11)
prep_by(came-2, ratiocination-12)
nsubj(think-15, I-14)
dep(came-2, think-15)
det(conviction-20, a-19)
prep_by(came-2, conviction-20)
conj_but(ratiocination-12, conviction-20)
dobj(brought-25, conviction-20)
det(idea-23, the-22)
nsubj(brought-25, idea-23)
advmod(brought-25, itself-24)
rcmod(conviction-20, brought-25)
prep_with(brought-25, it-27)
mark(was-32, that-29)
det(stranger-31, the-30)
nsubj(was-32, stranger-31)
ccomp(brought-25, was-32)
det(Lord-34, the-33)
nsubj(himself-35, Lord-34)
xcomp(was-32, himself-35)
mark(sins-46, that-38)
det(pack-40, the-39)
nsubj(sins-46, pack-40)
poss(back-43, His-42)
prep_on(pack-40, back-43)
cop(sins-46, was-44)
poss(sins-46, their-45)
ccomp(brought-25, sins-46)
conj_and(was-32, sins-46)
dobj(carrying-51, which-48)
nsubj(throw-54, which-48)
nsubj(carrying-51, He-49)
aux(carrying-51, was-50)
conj(came-2, carrying-51)
prt(carrying-51, away-52)
aux(throw-54, to-53)
xcomp(carrying-51, throw-54)
det(world-58, the-57)
prep_out_of(throw-54, world-58)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Eh))
      (, ,)
      (NP
        (NP (NN wasna))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ fearfu) (`` ')
              (SBAR
                (S
                  (NP (PRP He))
                  (VP (MD should)
                    (VP (VB come)
                      (PP (IN by)
                        (NP (NN jist)))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP we))
                          (VP (VBD was)
                            (VP (VBN fechtin)))))))))
              ('' '))))))
    (. !) ('' '')))

root(ROOT-0, Eh-2)
appos(Eh-2, wasna-4)
nsubj(fearfu-6, it-5)
rcmod(wasna-4, fearfu-6)
nsubj(come-10, He-8)
aux(come-10, should-9)
ccomp(fearfu-6, come-10)
prep_by(come-10, jist-12)
advmod(fechtin-16, when-13)
nsubjpass(fechtin-16, we-14)
auxpass(fechtin-16, was-15)
advcl(come-10, fechtin-16)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Sandy)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Sandy-2)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Eh))
    (, ,)
    (NP (NNP na))
    (. !)))

root(ROOT-0, Eh-2)
dep(Eh-2, na-4)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ fine) (NN thing))
        (SBAR
          (WHNP (WDT that)))))
    (. !)))

nsubj(thing-5, it-1)
cop(thing-5, was-2)
det(thing-5, a-3)
amod(thing-5, fine-4)
root(ROOT-0, thing-5)
rcmod(thing-5, that-6)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP micht)
      (S
        (NP (NN hae))
        (VP (VBN been)
          (PP (IN at)
            (NP (PRP it)))
          (ADVP (RB yet)))))
    (. !)))

nsubj(micht-2, We-1)
root(ROOT-0, micht-2)
nsubj(been-4, hae-3)
dep(micht-2, been-4)
prep_at(been-4, it-6)
advmod(been-4, yet-7)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBZ winna)
      (NP (NN noo)))
    (. !)))

cc(winna-3, But-1)
nsubj(winna-3, we-2)
root(ROOT-0, winna-3)
dobj(winna-3, noo-4)

(ROOT
  (S (: --)
    (S
      (VP (MD will)
        (VP
          (NP (PRP we))
          (ADVP (RB ever)))))
    (, ,)
    (VP (VBZ Sandy))
    (. ?) ('' '')))

aux(we-3, will-2)
parataxis(Sandy-6, we-3)
advmod(we-3, ever-4)
root(ROOT-0, Sandy-6)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Na))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBZ winna)))))
    (. !) ('' '')))

root(ROOT-0, Na-2)
mark(winna-6, that-4)
nsubj(winna-6, we-5)
dep(Na-2, winna-6)

(ROOT
  (SINV (`` ``)
    (FRAG
      (PP (IN For)))
    (, ,) ('' '')
    (VP (VBD continued))
    (NP (NNP Andrew))
    (, ,) (`` ``)
    (S
      (NP (PRP He))
      (VP (VBD said)
        (NP (`` `)
          (NP (NNP Lo))
          (, ,)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP am)
                (PP (IN with)
                  (NP (PRP you)))
                (ADVP (RB always))))))))
    (. !) ('' ')))

dep(continued-5, For-2)
root(ROOT-0, continued-5)
nsubj(continued-5, Andrew-6)
nsubj(said-10, He-9)
ccomp(continued-5, said-10)
dobj(said-10, Lo-12)
nsubj(am-15, I-14)
rcmod(Lo-12, am-15)
prep_with(am-15, you-17)
advmod(am-15, always-18)

(ROOT
  (S
    (S (CC And)
      (VP (VB suppose)
        (S
          (NP (PRP He))
          (VP (VB werena) (, ,)
            (S
              (NP (PRP we))
              (ADJP (JJ daurna))
              (S
                (VP (VB be)
                  (ADJP (RB that) (JJ ahint))
                  (NP (PRP$ His) (NN back)))))))))
    (S
      (NP (PRP we))
      (VP (MD would)
        (S
          (VP (TO na)
            (VP (VB be)
              (VP (VBN afore)
                (NP (PRP$ His) (NN face))))))))
    (. !) ('' '')))

cc(suppose-2, And-1)
root(ROOT-0, suppose-2)
nsubj(werena-4, He-3)
ccomp(suppose-2, werena-4)
nsubj(ahint-10, we-6)
dep(ahint-10, daurna-7)
cop(ahint-10, be-8)
advmod(ahint-10, that-9)
xcomp(werena-4, ahint-10)
poss(back-12, His-11)
dep(ahint-10, back-12)
nsubj(would-14, we-13)
nsubjpass(afore-17, we-13)
parataxis(suppose-2, would-14)
aux(afore-17, na-15)
auxpass(afore-17, be-16)
xcomp(would-14, afore-17)
poss(face-19, His-18)
dobj(afore-17, face-19)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (ADVP (RB railly))
          (VP (VBP think)
            (SBAR
              (S
                (NP (PRP it))
                (ADVP (RB _))
                (VP (VBD was)
                  (VP (VBN _)
                    (S
                      (NP (PRP Him)))
                    (, ,)
                    (S
                      (NP (NNP Andrew)))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(think-5, you-3)
advmod(think-5, railly-4)
ccomp(Do-2, think-5)
nsubjpass(_-9, it-6)
advmod(_-9, _-7)
auxpass(_-9, was-8)
ccomp(think-5, _-9)
xcomp(_-9, Him-10)
xcomp(_-9, Andrew-12)

(ROOT
  (S (`` ``)
    (NP (NNP Weel))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD replied))
        (NP (NNP Andrew)))
      (, ,) (`` ``))
    (VP (VBP gien)
      (S
        (NP (DT the) (NN deevil))
        (VP (VB be)
          (NP
            (NP
              (NP (NN goin) (POS '))
              (NN aboot))
            (PP (IN like)
              (NP
                (NP
                  (NP (DT a) (NN roarin) (POS '))
                  (NN lion))
                (, ,)
                (NP (NN seekin))))
            ('' ')
            (SBAR
              (WHNP (WP whom))
              (S
                (NP (PRP he))
                (VP (MD may)
                  (VP (VB devoor))))))))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (NN father))
          (VP (VBZ says) (, ,)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (ADJP (DT no) (JJ likely) (JJ _))
                  (SBAR
                    (S
                      (NP (PRP He))
                      (ADVP (RB _))
                      (VP (MD would)
                        (S
                          (VP (TO na)
                            (VP (VB be)
                              (VP
                                (NP
                                  (NP (NN goin) (POS '))
                                  (NN aboot))
                                (ADJP (RB as) (JJ weel) (, ,) (JJ seekin) ('' ')
                                  (S
                                    (VP (TO to)
                                      (VP (VB haud)
                                        (S
                                          (NP (PRP him))
                                          (VP (VB aff)
                                            (NP
                                              (NP (NNP o) (POS '))
                                              (NNS 's))))))))))))))))))))))
    (. !) ('' '')))

nsubj(gien-9, Weel-2)
parataxis(gien-9, replied-5)
nsubj(replied-5, Andrew-6)
root(ROOT-0, gien-9)
det(deevil-11, the-10)
nsubj(aboot-15, deevil-11)
cop(aboot-15, be-12)
poss(aboot-15, goin-13)
ccomp(gien-9, aboot-15)
dobj(devoor-27, aboot-15)
det(roarin-18, a-17)
poss(lion-20, roarin-18)
prep_like(aboot-15, lion-20)
appos(lion-20, seekin-22)
nsubj(devoor-27, he-25)
aux(devoor-27, may-26)
rcmod(aboot-15, devoor-27)
mark(says-31, as-29)
nsubj(says-31, father-30)
advcl(gien-9, says-31)
nsubj(_-37, it-33)
cop(_-37, 's-34)
neg(_-37, no-35)
amod(_-37, likely-36)
ccomp(says-31, _-37)
nsubj(would-40, He-38)
nsubj(seekin-49, He-38)
advmod(would-40, _-39)
ccomp(_-37, would-40)
aux(seekin-49, na-41)
aux(seekin-49, be-42)
poss(aboot-45, goin-43)
dobj(seekin-49, aboot-45)
nsubj(haud-52, aboot-45)
advmod(seekin-49, as-46)
amod(seekin-49, weel-47)
xcomp(would-40, seekin-49)
aux(haud-52, to-51)
xcomp(seekin-49, haud-52)
nsubj(aff-54, him-53)
ccomp(haud-52, aff-54)
poss('s-57, o-55)
dobj(aff-54, 's-57)

(ROOT
  (S (`` ``)
    (VP (VB Ay))
    (. !) ('' '')))

root(ROOT-0, Ay-2)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Sandy)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Sandy-2)

(ROOT
  (SINV (`` ``)
    (S (CC And)
      (VP (VB noo)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (DT the) (JJR elder))
      (, ,)
      (SBAR (`` ``)
        (WHNP (WP what))
        (S
          (VP (VBP are)
            (S
              (NP (PRP we))
              (VP (TO to)
                (VP (VB do))))))))
    (. ?) ('' '')))

cc(noo-3, And-2)
ccomp(said-6, noo-3)
root(ROOT-0, said-6)
det(elder-8, the-7)
nsubj(said-6, elder-8)
nsubj(are-12, elder-8)
rcmod(elder-8, are-12)
dobj(are-12, we-13)
nsubj(do-15, we-13)
aux(do-15, to-14)
xcomp(are-12, do-15)

(ROOT
  (S
    (PP (IN For)
      (NP (NNP Andrew)))
    (, ,)
    (SBAR
      (WHNP (WP whom))
      (S
        (NP (DT both) (NN father)
          (CC and)
          (NN mother))
        (VP (VBN judged)
          (NP
            (NP (DT the) (NN dreamiest))
            (PP (IN of)
              (NP (NNS mortals)))))))
    (, ,)
    (VP (VBD was)
      (PP (IN in)
        (NP (NN reality)))
      (NP
        (NP (DT the)
          (ADJP (RBS most) (JJ practical))
          (NN being))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ whole) (NN parish))
            (: --)
            (ADJP
              (ADJP (RB so) (JJ practical))
              (SBAR (IN that)
                (S
                  (PP
                    (PP (IN by))
                    (CC and)
                    (PP (IN by)
                      (NP
                        (NP (NNS people))
                        (VP (VBN mocked)
                          (NP (PRP him))
                          (PP (IN for)
                            (NP
                              (NP (DT a) (NN poet))
                              (CC and)
                              (NP (DT a) (NN heretic))))
                          (, ,)
                          (SBAR (IN because)
                            (S
                              (NP (PRP he))
                              (VP (VBD did)
                                (NP
                                  (NP (DT the) (NNS things))
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (NP (PRP they))
                                      (VP (VBD said))))))))))))
                  (NP (PRP they))
                  (VP (VBD believed)))))))))
    (. .)))

prep_for(being-21, Andrew-2)
dobj(judged-9, whom-4)
preconj(father-6, both-5)
nsubj(judged-9, father-6)
conj_and(father-6, mother-8)
nsubj(judged-9, mother-8)
dep(being-21, judged-9)
det(dreamiest-11, the-10)
dobj(judged-9, dreamiest-11)
prep_of(dreamiest-11, mortals-13)
cop(being-21, was-15)
prep_in(being-21, reality-17)
det(being-21, the-18)
advmod(practical-20, most-19)
amod(being-21, practical-20)
root(ROOT-0, being-21)
det(parish-25, the-23)
amod(parish-25, whole-24)
prep_in(being-21, parish-25)
advmod(practical-28, so-27)
amod(parish-25, practical-28)
mark(believed-52, that-29)
prep(believed-52, by-30)
conj_and(by-30, by-32)
prep(believed-52, by-32)
pobj(by-32, people-33)
vmod(people-33, mocked-34)
dobj(mocked-34, him-35)
det(poet-38, a-37)
prep_for(mocked-34, poet-38)
det(heretic-41, a-40)
prep_for(mocked-34, heretic-41)
conj_and(poet-38, heretic-41)
mark(did-45, because-43)
nsubj(did-45, he-44)
advcl(mocked-34, did-45)
det(things-47, the-46)
dobj(did-45, things-47)
dobj(said-50, things-47)
nsubj(said-50, they-49)
rcmod(things-47, said-50)
nsubj(believed-52, they-51)
ccomp(practical-28, believed-52)

(ROOT
  (SINV
    (ADJP (RBS Most) (JJ unpractical))
    (VP (MD must))
    (NP
      (NP (DT every) (NN man))
      (SBAR
        (S
          (VP (VBP appear)
            (SBAR
              (WHNP (WP who))
              (S
                (NP (NNP genuinely))
                (VP (VBZ believes)))))))
      (PP (IN in)
        (NP
          (NP (DT the) (NNS things))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP are)
                (ADJP (JJ unseen))))))))
    (. .)))

advmod(unpractical-2, Most-1)
dep(must-3, unpractical-2)
root(ROOT-0, must-3)
det(man-5, every-4)
nsubj(must-3, man-5)
dobj(believes-9, man-5)
rcmod(man-5, appear-6)
nsubj(believes-9, genuinely-8)
ccomp(appear-6, believes-9)
det(things-12, the-11)
prep_in(man-5, things-12)
nsubj(unseen-15, things-12)
cop(unseen-15, are-14)
rcmod(things-12, unseen-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NN man))
      (VP (VBN called)
        (ADJP (JJ practical))
        (PP (IN by)
          (NP
            (NP (DT the) (NNS men))
            (PP (IN of)
              (NP (DT this) (NN world)))))))
    (VP (VBZ is)
      (NP
        (NP (PRP he))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ busies)
              (S
                (NP (PRP himself))
                (VP (VBG building)
                  (NP (PRP$ his) (NN house))
                  (PP (IN on)
                    (NP (DT the) (NN sand)))))))))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (PRP he))
          (VP (VBZ does) (RB not)
            (ADVP (RB even))
            (VP (VB bespeak)
              (NP
                (NP (DT a) (NN lodging))
                (PP (IN in)
                  (NP (DT the) (JJ inevitable) (NN beyond)))))))))
    (. .)))

det(man-2, The-1)
nsubj(he-12, man-2)
vmod(man-2, called-3)
acomp(called-3, practical-4)
det(men-7, the-6)
agent(called-3, men-7)
det(world-10, this-9)
prep_of(men-7, world-10)
cop(he-12, is-11)
root(ROOT-0, he-12)
nsubj(busies-14, he-12)
rcmod(he-12, busies-14)
nsubj(building-16, himself-15)
dep(busies-14, building-16)
poss(house-18, his-17)
dobj(building-16, house-18)
det(sand-21, the-20)
prep_on(building-16, sand-21)
mark(bespeak-28, while-23)
nsubj(bespeak-28, he-24)
aux(bespeak-28, does-25)
neg(bespeak-28, not-26)
advmod(bespeak-28, even-27)
advcl(he-12, bespeak-28)
det(lodging-30, a-29)
dobj(bespeak-28, lodging-30)
det(beyond-34, the-32)
amod(beyond-34, inevitable-33)
prep_in(lodging-30, beyond-34)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP are)
      (NP (PRP we))
      (S
        (VP (TO to)
          (VP (VB do)))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, are-3)
nsubj(What-2, we-4)
aux(do-6, to-5)
vmod(What-2, do-6)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (DT the) (NNP Lord))
        (VP (VBZ is)
          (VP (VBG going)
            (PRT (RP about))
            (PP (IN like)
              (NP (DT that)))
            (, ,)
            (S
              (VP (VBG looking)
                (PP (IN after)
                  (NP (PRP us)))))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP 've)
      (ADVP (RB surely))
      (VP (VBN got)
        (NP (NN something))
        (S
          (VP (TO to)
            (VP (VB do)
              (S
                (VP (VBG looking)
                  (PP (IN after)
                    (S
                      (VP (VBG _)
                        (NP (PRP Him))))))))))))
    (. !)))

mark(going-6, If-2)
det(Lord-4, the-3)
nsubj(going-6, Lord-4)
aux(going-6, is-5)
advcl(got-18, going-6)
prt(going-6, about-7)
prep_like(going-6, that-9)
vmod(going-6, looking-11)
prep_after(looking-11, us-13)
nsubj(got-18, we-15)
aux(got-18, 've-16)
advmod(got-18, surely-17)
root(ROOT-0, got-18)
dobj(got-18, something-19)
aux(do-21, to-20)
vmod(got-18, do-21)
xcomp(do-21, looking-22)
prepc_after(looking-22, _-24)
dobj(_-24, Him-25)

(ROOT
  (S
    (S
      (S
        (S
          (VP (VBG _) ('' '')))
        (NP (EX There))
        (VP (VBD was)
          (NP
            (NP (DT no) (NN help))
            (PP (IN in)
              (NP (NNP Sandy))))))
      (: ;)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (UCP (RB well)
            (ADJP (IN that))
            (, ,)
            (X
              (PP (IN with)
                (NP
                  (NP (DT the) (NN reticence))
                  (PP (IN of)
                    (NP (NNS children))))))
            (, ,)
            (CC neither)
            (VP (VBN thought)
              (PP (IN of)
                (S
                  (VP (VBG laying)
                    (NP (DT the) (NN case))
                    (PP (IN before)
                      (NP (PRP$ their) (NNS parents)))))))))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NNS traditions))
        (PP (IN of)
          (NP (DT the) (NNS elders))))
      (VP (MD would)
        (VP (VB have)
          (VP
            (ADVP (RB ill))
            (VBN agreed)
            (PP (IN with)
              (NP
                (NP (DT the) (NN doctrine))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBD were)
                      (ADVP (RB now))
                      (PP (IN under)))))))))))
    (. !)))

dep(was-4, _-1)
expl(was-4, There-3)
root(ROOT-0, was-4)
neg(help-6, no-5)
nsubj(was-4, help-6)
prep_in(help-6, Sandy-8)
nsubj(was-12, it-11)
conj_and(was-4, was-12)
dep(was-12, well-13)
dep(well-13, that-14)
dep(well-13, with-16)
det(reticence-18, the-17)
pobj(with-16, reticence-18)
prep_of(reticence-18, children-20)
dep(well-13, neither-22)
conj(well-13, thought-23)
prepc_of(thought-23, laying-25)
det(case-27, the-26)
dobj(laying-25, case-27)
poss(parents-30, their-29)
prep_before(laying-25, parents-30)
det(traditions-33, the-32)
nsubj(agreed-40, traditions-33)
det(elders-36, the-35)
prep_of(traditions-33, elders-36)
aux(agreed-40, would-37)
aux(agreed-40, have-38)
advmod(agreed-40, ill-39)
parataxis(was-4, agreed-40)
det(doctrine-43, the-42)
prep_with(agreed-40, doctrine-43)
prep_under(were-45, doctrine-43)
nsubj(were-45, they-44)
rcmod(doctrine-43, were-45)
advmod(were-45, now-46)

(ROOT
  (S
    (ADVP (RB Suddenly))
    (NP (PRP it))
    (VP (VBD came)
      (PP (IN into)
        (NP
          (NP (NNP Andrew) (POS 's))
          (NN mind)))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN book))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP read)
                  (PP (IN at)
                    (NP
                      (NP (JJ _) (NN worship) (NNS _))
                      (SBAR
                        (WHPP (TO to)
                          (WHNP (WDT which)))
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (ADVP (RB never))
                            (VP (VBN listened)))))))))))
          (, ,)
          (VP (VBD told)
            (NP
              (NP (DT all))
              (PP (IN about)
                (NP (NNP Jesus))))))))
    (. .)))

advmod(came-3, Suddenly-1)
nsubj(came-3, it-2)
root(ROOT-0, came-3)
poss(mind-7, Andrew-5)
prep_into(came-3, mind-7)
mark(told-24, that-8)
det(book-10, the-9)
nsubj(told-24, book-10)
nsubj(read-12, they-11)
rcmod(book-10, read-12)
amod(_-16, _-14)
nn(_-16, worship-15)
prep_at(read-12, _-16)
prep_to(listened-22, _-16)
nsubj(listened-22, he-19)
aux(listened-22, had-20)
neg(listened-22, never-21)
rcmod(_-16, listened-22)
ccomp(came-3, told-24)
dobj(told-24, all-25)
prep_about(all-25, Jesus-27)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD began)
        (PP (IN at)
          (NP (DT the) (NN beginning))))
      (, ,)
      (CC and)
      (VP (VBD grew)
        (ADJP (RB so) (VBN interested)
          (PP (IN in)
            (NP (DT the) (NNS stories)))
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD forgot)
                (SBAR
                  (WHADVP (WRB why))
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN begun)
                        (S
                          (VP (TO to)
                            (VP (VB read)
                              (NP (PRP it))
                              (NP (CD One) (NN day))
                              (, ,)
                              (ADVP (RB however)))))
                        (, ,)
                        (SBAR (IN as)
                          (S
                            (NP (PRP he))
                            (VP (VBD was)
                              (VP (VBG telling)
                                (NP
                                  (NP (NNP Sandy))
                                  (PP (IN about)
                                    (NP (NNP Jacob))))))))))))
                (: --) (`` ``)
                (FRAG
                  (X (WP What))
                  (NP (DT a) (NN shame)))))))))
    (. !) ('' '')))

nsubj(began-2, He-1)
nsubj(grew-8, He-1)
root(ROOT-0, began-2)
det(beginning-5, the-4)
prep_at(began-2, beginning-5)
conj_and(began-2, grew-8)
advmod(interested-10, so-9)
acomp(grew-8, interested-10)
det(stories-13, the-12)
prep_in(interested-10, stories-13)
mark(forgot-16, that-14)
nsubj(forgot-16, he-15)
ccomp(interested-10, forgot-16)
advmod(begun-20, why-17)
nsubj(begun-20, he-18)
nsubj(read-22, he-18)
aux(begun-20, had-19)
advcl(forgot-16, begun-20)
aux(read-22, to-21)
xcomp(begun-20, read-22)
dobj(read-22, it-23)
num(day-25, One-24)
tmod(read-22, day-25)
advmod(read-22, however-27)
mark(telling-32, as-29)
nsubj(telling-32, he-30)
aux(telling-32, was-31)
advcl(begun-20, telling-32)
dobj(telling-32, Sandy-33)
prep_about(Sandy-33, Jacob-35)
dep(shame-40, What-38)
det(shame-40, a-39)
dep(forgot-16, shame-40)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (NNP Sandy))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (NNP Andrew) (POS 's))
        (NN mind))
      (ADVP (RB suddenly))
      (VP (VBD opened)
        (PP (TO to)
          (NP (DT the) (NN fact)))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN got)
                (ADVP
                  (ADVP (NN nothing) (RB yet) (RB out))
                  (PP (IN of)
                    (NP (DT the) (NN book))))))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Sandy-2)
poss(mind-7, Andrew-5)
nsubj(opened-9, mind-7)
advmod(opened-9, suddenly-8)
conj_and(said-1, opened-9)
det(fact-12, the-11)
prep_to(opened-9, fact-12)
mark(got-16, that-13)
nsubj(got-16, he-14)
aux(got-16, had-15)
ccomp(opened-9, got-16)
dep(got-16, nothing-17)
advmod(got-16, yet-18)
det(book-22, the-21)
prep_out_of(got-16, book-22)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD threw)
      (NP (PRP it))
      (PP (IN from)
        (NP (PRP him)))
      (, ,)
      (S
        (VP (VBG echoing)
          (NP
            (NP (NNP Sandy) (POS 's))
            (NNS words))))
      (, ,)
      (SBAR (`` ``)
        (WHNP (WP What))
        (S
          (VP (VBZ 's)
            (NP (DT a) (NN shame))))))
    (. !) ('' '')))

nsubj(threw-2, He-1)
root(ROOT-0, threw-2)
dobj(threw-2, it-3)
prep_from(threw-2, him-5)
vmod(threw-2, echoing-7)
poss(words-10, Sandy-8)
dobj(echoing-7, words-10)
nsubj(shame-16, What-13)
cop(shame-16, 's-14)
det(shame-16, a-15)
dep(threw-2, shame-16)

(ROOT
  (S (: --)
    (ADJP (RB not)
      (PP (IN of)
        (NP
          (NP (NNP Jacob) (POS 's))
          (NN behavior))))
    (, ,)
    (NP
      (NP (IN but))
      (PP (IN of)
        (NP
          (NP (DT the) (NNP Bible) (POS 's))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD had)
                (NP (PDT all) (DT this) (NN time))))))))
    (VP (VBD told)
      (NP (PRP them))
      (ADVP (NN nothing))
      (PP (IN about)
        (NP
          (NP (DT the) (NN man))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was)
                (VP
                  (VP (VBG going)
                    (PRT (RP up)
                      (CC and)
                      (RP down))
                    (NP (DT the) (NN world)))
                  (, ,)
                  (VP (VBG gathering)
                    (PRT (RP up))
                    (NP (PRP$ their) (NNS sins)))
                  (, ,)
                  (CC and)
                  (VP (VBG carrying)
                    (NP (PRP them))
                    (ADVP (RB away))
                    (PP (IN in)
                      (NP (PRP$ His) (NN pack)))))))))))
    (. !)))

dep(told-19, not-2)
poss(behavior-6, Jacob-4)
prep_of(not-2, behavior-6)
nsubj(told-19, but-8)
det(Bible-11, the-10)
prep_of(but-8, Bible-11)
nsubj(had-15, Bible-11)
possessive(Bible-11, 's-12)
rcmod(Bible-11, had-15)
predet(time-18, all-16)
det(time-18, this-17)
dobj(had-15, time-18)
root(ROOT-0, told-19)
dobj(told-19, them-20)
advmod(told-19, nothing-21)
det(man-24, the-23)
prep_about(told-19, man-24)
nsubj(going-27, man-24)
nsubj(gathering-34, man-24)
nsubj(carrying-40, man-24)
aux(going-27, was-26)
rcmod(man-24, going-27)
prt(going-27, up-28)
cc(up-28, and-29)
dep(up-28, down-30)
det(world-32, the-31)
dobj(going-27, world-32)
rcmod(man-24, gathering-34)
conj_and(going-27, gathering-34)
prt(gathering-34, up-35)
poss(sins-37, their-36)
dobj(gathering-34, sins-37)
rcmod(man-24, carrying-40)
conj_and(going-27, carrying-40)
dobj(carrying-40, them-41)
advmod(carrying-40, away-42)
poss(pack-45, His-44)
prep_in(carrying-40, pack-45)

(ROOT
  (S (CC But)
    (S
      (NP (PRP it))
      (VP (VBD dawned)
        (PP (IN upon)
          (NP (PRP him)))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP
                (NP (DT the) (NNP New) (NN Testament))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD told)
                      (PP (IN about)
                        (NP (NNP Jesus) (NNP Christ))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD turned)
        (PP (TO to)
          (NP (DT that)))))
    (. .)))

nsubj(dawned-3, it-2)
root(ROOT-0, dawned-3)
prep_upon(dawned-3, him-5)
mark(Testament-11, that-6)
nsubj(Testament-11, it-7)
cop(Testament-11, was-8)
det(Testament-11, the-9)
nn(Testament-11, New-10)
ccomp(dawned-3, Testament-11)
nsubj(told-13, Testament-11)
rcmod(Testament-11, told-13)
nn(Christ-16, Jesus-15)
prep_about(told-13, Christ-16)
nsubj(turned-20, they-19)
conj_and(dawned-3, turned-20)
prep_to(turned-20, that-22)

(ROOT
  (S
    (S
      (ADVP (RB Here))
      (ADVP (RB also))
      (NP (PRP I))
      (VP (VBP say)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADVP (RB well)))))))
    (NP (PRP they))
    (VP (VBD asked)
      (NP (DT no) (NN advice))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP they))
          (VP (MD would)
            (ADVP (RB probably))
            (VP (VB have)
              (VP (VBN been)
                (VP (VBN directed)
                  (PP (TO to)
                    (NP (DT the) (NNP Epistle)))
                  (PP (TO to)
                    (NP (DT the) (NNPS Romans)))
                  (, ,)
                  (PP (IN with)
                    (NP
                      (NP (NNS explanations))
                      (ADJP
                        (ADJP (RB yet) (RBR more) (JJ foreign)
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NN heart))
                              (PP (IN of)
                                (NP (NNP Paul))))))
                        (IN than)
                        (ADJP (JJ false)
                          (PP (TO to)
                            (NP (PRP$ his) (JJ Greek))))))))))))))
    (. .)))

advmod(say-4, Here-1)
advmod(say-4, also-2)
nsubj(say-4, I-3)
dep(asked-9, say-4)
nsubj(was-6, it-5)
ccomp(say-4, was-6)
advmod(was-6, well-7)
nsubj(asked-9, they-8)
root(ROOT-0, asked-9)
neg(advice-11, no-10)
dobj(asked-9, advice-11)
mark(directed-19, for-13)
nsubjpass(directed-19, they-14)
aux(directed-19, would-15)
advmod(directed-19, probably-16)
aux(directed-19, have-17)
auxpass(directed-19, been-18)
advcl(asked-9, directed-19)
det(Epistle-22, the-21)
prep_to(directed-19, Epistle-22)
det(Romans-25, the-24)
prep_to(directed-19, Romans-25)
prep_with(directed-19, explanations-28)
advmod(foreign-31, yet-29)
advmod(foreign-31, more-30)
amod(explanations-28, foreign-31)
det(heart-34, the-33)
prep_to(foreign-31, heart-34)
prep_of(heart-34, Paul-36)
dep(foreign-31, than-37)
dep(foreign-31, false-38)
poss(Greek-41, his-40)
prep_to(false-38, Greek-41)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB read)
              (NP
                (NP (DT the) (NN story))
                (PP (IN of)
                  (NP (NNP Jesus))))
              (SBAR
                (SBAR (IN as)
                  (S
                    (VP (VBD told)
                      (PP (IN by)
                        (NP (PRP$ his) (NN friend) (NN Matthew))))))
                (, ,)
                (CC and)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP they))
                    (VP (VBD had)
                      (VP (VBN ended)
                        (NP (PRP it)))))))))))
      (, ,)
      (VP (VBD went)
        (PRT (RP on))
        (PP (TO to)
          (NP (DT the) (NN gospel)))
        (PP (VBG according)
          (PP (TO to)
            (NP (NNP Mark))))))
    (. .)))

nsubj(began-2, They-1)
nsubj(read-4, They-1)
root(ROOT-0, began-2)
aux(read-4, to-3)
xcomp(began-2, read-4)
det(story-6, the-5)
dobj(read-4, story-6)
prep_of(story-6, Jesus-8)
mark(told-10, as-9)
advcl(read-4, told-10)
poss(Matthew-14, his-12)
nn(Matthew-14, friend-13)
prep_by(told-10, Matthew-14)
advmod(ended-20, when-17)
nsubj(ended-20, they-18)
aux(ended-20, had-19)
advcl(read-4, ended-20)
conj_and(told-10, ended-20)
dobj(ended-20, it-21)
dep(began-2, went-23)
prt(went-23, on-24)
det(gospel-27, the-26)
prep_to(went-23, gospel-27)
prepc_according_to(went-23, to-29)
pobj(went-23, Mark-30)

(ROOT
  (S (CC But)
    (NP (PRP they))
    (VP (VBD had) (RB not)
      (VP (VBN read)
        (SBAR
          (WHADVP (RB far) (WRB when))
          (S
            (NP (NNP Sandy))
            (VP (VBD cried)
              (PRT (RP out)))))
        (: :)
        (S (`` ``)
          (NP (NNP Eh))
          (, ,)
          (NP (NNP Andrew))
          (, ,)
          (NP (PRP it))
          (VP (VBZ 's)
            (NP
              (NP (SYM a))
              ('' ')
              (SBAR
                (S
                  (NP (DT the) (JJ same) (NN thing))
                  (VP (VBP ower)
                    (ADVP (RB again))))))))))
    (. !) ('' '')))

cc(read-5, But-1)
nsubj(read-5, they-2)
aux(read-5, had-3)
neg(read-5, not-4)
root(ROOT-0, read-5)
advmod(when-7, far-6)
advmod(cried-9, when-7)
nsubj(cried-9, Sandy-8)
advcl(read-5, cried-9)
prt(cried-9, out-10)
nsubj(a-19, Eh-13)
nsubj(a-19, Andrew-15)
nsubj(a-19, it-17)
cop(a-19, 's-18)
ccomp(read-5, a-19)
parataxis(read-5, a-19)
det(thing-23, the-21)
amod(thing-23, same-22)
nsubj(ower-24, thing-23)
rcmod(a-19, ower-24)
advmod(ower-24, again-25)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT No) (DT a))
      (`` `)
      (VP (VBP thegither)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Andrew))
    (. .)))

dep(a-3, No-2)
nsubj(thegither-5, a-3)
ccomp(answered-8, thegither-5)
root(ROOT-0, answered-8)
nsubj(answered-8, Andrew-9)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD 'll)
      (VP (VB gang)
        (PRT (RP on))
        (, ,)
        (CC and)
        (VB see)))
    (. !) ('' '')))

nsubj(gang-4, We-2)
nsubj(see-8, We-2)
aux(gang-4, 'll-3)
root(ROOT-0, gang-4)
prt(gang-4, on-5)
conj_and(gang-4, see-8)

(ROOT
  (S
    (S
      (NP (NNP Andrew))
      (VP (VBD came)
        (PP (TO to)
          (NP (DT the) (NN conclusion)))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (SBAR
                (ADVP
                  (ADVP (RB so) (RB far))
                  (NP (DT the) (JJ same)))
                (IN that)
                (S
                  (NP (PRP he))
                  (VP (MD would) (RB rather)
                    (VP
                      (VP (VB go)
                        (ADVP (RB back)))
                      (CC and)
                      (VP (VB read)
                        (NP (DT the) (JJ other))
                        (ADVP (RB again))))))))))
        (, ,)
        (PP (IN for)
          (NP
            (NP (DT the) (NN sake))
            (PP (IN of)
              (NP
                (NP (DT some) (JJ particular) (NNS things))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD wanted)
                      (S
                        (VP (TO to)
                          (VP (VB make)
                            (ADJP (JJ sure))
                            (PP (IN about)
                              (NP
                                (NP (RB So) (DT the) (JJ second) (NN time))
                                (SBAR
                                  (S
                                    (NP (PRP they))
                                    (VP
                                      (VP (VBD read)
                                        (NP (NNP St.) (NNP Matthew)))
                                      (, ,)
                                      (CC and)
                                      (VP (VBD came)
                                        (PP (TO to)
                                          (NP (DT these) (NNS words)))))))))))))))))))))
    (: :) (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP
            (NP (CD two))
            (PP (IN of)
              (NP (PRP you))))
          (VP (MD shall)
            (VP (VB agree)
              (PP (IN on)
                (NP
                  (NP (NN earth))
                  (PP (IN as)
                    (NP (JJ touching) (NN anything)))))
              (SBAR (IN that)
                (S
                  (NP (PRP they))
                  (VP (MD shall)
                    (VP (VB ask)))))))))
      (, ,)
      (NP (PRP it))
      (VP (MD shall)
        (VP (VB be)
          (VP (VBN done)
            (PP (IN for)
              (NP
                (NP (PRP them))
                (PP (IN of)
                  (NP (PRP$ My) (NN Father)))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (PP (IN in)
                        (NP (NN heaven))))))))))))
    (. .) ('' '')))

nsubj(came-2, Andrew-1)
root(ROOT-0, came-2)
det(conclusion-5, the-4)
prep_to(came-2, conclusion-5)
mark(was-8, that-6)
nsubj(was-8, it-7)
ccomp(came-2, was-8)
advmod(far-10, so-9)
advmod(go-17, far-10)
det(same-12, the-11)
dep(far-10, same-12)
mark(go-17, that-13)
nsubj(go-17, he-14)
nsubj(read-20, he-14)
aux(go-17, would-15)
advmod(go-17, rather-16)
dep(was-8, go-17)
advmod(go-17, back-18)
dep(was-8, read-20)
conj_and(go-17, read-20)
det(other-22, the-21)
dobj(read-20, other-22)
advmod(read-20, again-23)
det(sake-27, the-26)
prep_for(came-2, sake-27)
det(things-31, some-29)
amod(things-31, particular-30)
prep_of(sake-27, things-31)
nsubj(wanted-33, he-32)
nsubj(make-35, he-32)
rcmod(things-31, wanted-33)
aux(make-35, to-34)
xcomp(wanted-33, make-35)
acomp(make-35, sure-36)
advmod(time-41, So-38)
det(time-41, the-39)
amod(time-41, second-40)
prep_about(make-35, time-41)
nsubj(read-43, they-42)
nsubj(came-48, they-42)
rcmod(time-41, read-43)
nn(Matthew-45, St.-44)
dobj(read-43, Matthew-45)
rcmod(time-41, came-48)
conj_and(read-43, came-48)
det(words-51, these-50)
prep_to(came-48, words-51)
mark(agree-59, If-54)
nsubj(agree-59, two-55)
prep_of(two-55, you-57)
aux(agree-59, shall-58)
advcl(done-73, agree-59)
prep_on(agree-59, earth-61)
amod(anything-64, touching-63)
prep_as(earth-61, anything-64)
mark(ask-68, that-65)
nsubj(ask-68, they-66)
aux(ask-68, shall-67)
ccomp(agree-59, ask-68)
nsubjpass(done-73, it-70)
aux(done-73, shall-71)
auxpass(done-73, be-72)
parataxis(came-2, done-73)
prep_for(done-73, them-75)
nsubj(is-80, them-75)
poss(Father-78, My-77)
prep_of(them-75, Father-78)
rcmod(them-75, is-80)
prep_in(is-80, heaven-82)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (NN twa) (NN o))
        ('' ')
        (SBAR
          (S
            (VP (VBZ 's)
              (ADVP (RB here)))))))
    (. !) ('' '')))

expl('s-3, There-2)
root(ROOT-0, 's-3)
nn(o-5, twa-4)
nsubj('s-3, o-5)
rcmod(o-5, 's-7)
advmod('s-7, here-8)

(ROOT
  (S
    (VP (VBN cried)
      (NP (NNP Andrew))
      (, ,)
      (S
        (VP (VBG laying)
          (PRT (RP down))
          (NP (DT the) (NN book)))))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Andrew-2)
vmod(cried-1, laying-4)
prt(laying-4, down-5)
det(book-7, the-6)
dobj(laying-4, book-7)

(ROOT
  (S (`` ``)
    (NP (NNP Lat))
    (VP (VBZ 's)
      (VP (VB try) (`` `)
        (NP (NN t))))
    (. !) ('' '')))

nsubj(try-4, Lat-2)
aux(try-4, 's-3)
root(ROOT-0, try-4)
dobj(try-4, t-6)

(ROOT
  (S (`` ``)
    (VP (VB Try)
      (NP (WP what)))
    (. ?) ('' '')))

root(ROOT-0, Try-2)
dobj(Try-2, what-3)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Sandy)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Sandy-2)

(ROOT
  (S
    (NP (PRP$ His) (NN brother))
    (VP (VBP read)
      (NP (DT the) (NN passage))
      (ADVP (RB again)))
    (. .)))

poss(brother-2, His-1)
nsubj(read-3, brother-2)
root(ROOT-0, read-3)
det(passage-5, the-4)
dobj(read-3, passage-5)
advmod(read-3, again-6)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Lat))
      (SBAR
        (S
          (NP (DT the) (NN twa) (NN o) ('' '))
          (VP (VBZ 's)
            (NP
              (NP (NN speir) (NNS Him))
              (PP (IN for)
                (NP (NN something))))))))
    (. !) ('' '')))

root(ROOT-0, Lat-2)
det(o-5, the-3)
nn(o-5, twa-4)
nsubj(Him-9, o-5)
cop(Him-9, 's-7)
nn(Him-9, speir-8)
rcmod(Lat-2, Him-9)
prep_for(Him-9, something-11)

(ROOT
  (S
    (VP (VBD concluded)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, concluded-1)
dobj(concluded-1, Andrew-2)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VB wull)
        (S
          (NP (POS '))
          (VP (VB t)
            (VP (VB be))))))
    (. ?) ('' '')))

dobj(wull-3, What-2)
nsubj(wull-3, What-2)
root(ROOT-0, wull-3)
ccomp(wull-3, t-5)
xcomp(t-5, be-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP
      (VP (VBD won) (`` `)
        (ADVP (RB er))
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBZ means)
              (ADJP (RB only) (JJ ance))))))
      (, ,)
      (CC or)
      (VP (MD may)
        (VP (VB be)
          (ADJP
            (QP (CD three) (NNS times)))
          (, ,)
          (PP (IN like) (`` `)
            (NP (DT The) (CD Three) (NNS Wishes))))))
    (. !) ('' ') ('' '')))

nsubj(won-3, I-2)
root(ROOT-0, won-3)
advmod(won-3, er-5)
mark(means-8, if-6)
nsubj(means-8, it-7)
advcl(won-3, means-8)
advmod(ance-10, only-9)
acomp(means-8, ance-10)
aux(times-16, may-13)
cop(times-16, be-14)
number(times-16, three-15)
conj_or(won-3, times-16)
det(Wishes-22, The-20)
num(Wishes-22, Three-21)
prep_like(times-16, Wishes-22)

(ROOT
  (S
    (NP
      (NP (NNP suggested) (NNP Sandy))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S (, ,)
          (PP (IN like)
            (NP (JJS most) (NNS Christians)))
          (, ,)
          (VP (MD would) (RB rather)
            (VP (VB have)
              (NP
                (NP (DT a) (NN talk))
                (PP (IN about)
                  (NP (PRP it))))
              (ADVP (IN than)))))))
    (VP (VBP do)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (VBD was)
            (VP (VBN told))))))
    (. .)))

nn(Sandy-2, suggested-1)
nsubj(have-12, Sandy-2)
nsubj(do-18, Sandy-2)
amod(Christians-8, most-7)
prep_like(have-12, Christians-8)
aux(have-12, would-10)
advmod(have-12, rather-11)
rcmod(Sandy-2, have-12)
det(talk-14, a-13)
dobj(have-12, talk-14)
prep_about(talk-14, it-16)
advmod(have-12, than-17)
root(ROOT-0, do-18)
dobj(told-22, what-19)
nsubjpass(told-22, he-20)
auxpass(told-22, was-21)
ccomp(do-18, told-22)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (ADVP (RB _))
    (VP (MD might)
      (ADVP (RB _))
      (VP (VB ask)
        (PP (IN for)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (MD would) (RB not)
                (VP (VB be)
                  (ADJP (JJ good)
                    (PP (IN for)
                      (NP (PRP us)))))))))))
    (. !) ('' '')))

nsubj(ask-6, We-2)
advmod(ask-6, _-3)
aux(ask-6, might-4)
advmod(ask-6, _-5)
root(ROOT-0, ask-6)
nsubj(good-12, what-8)
aux(good-12, would-9)
neg(good-12, not-10)
cop(good-12, be-11)
prepc_for(ask-6, good-12)
prep_for(good-12, us-14)

(ROOT
  (S
    (VP (VBN returned)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, returned-1)
dobj(returned-1, Andrew-2)

(ROOT
  (S (`` ``)
    (CC And)
    (VP (VBP make)
      (NP
        (NP (NNS fools))
        (PP (IN of)
          (NP (PRP ourselves)))))
    (. !) ('' '')))

cc(make-3, And-2)
root(ROOT-0, make-3)
dobj(make-3, fools-4)
prep_of(fools-4, ourselves-6)

(ROOT
  (S
    (VP (VBD assented)
      (NP (NNP Sandy))
      (, ,)
      (PP (IN with) (`` ``)
        (NP (DT The) (CD Three) (NNS Wishes))
        ('' ''))
      (PP (IN in)
        (NP (PRP$ his) (NN mind))))
    (. .)))

root(ROOT-0, assented-1)
dobj(assented-1, Sandy-2)
det(Wishes-8, The-6)
num(Wishes-8, Three-7)
prep_with(assented-1, Wishes-8)
poss(mind-12, his-11)
prep_in(assented-1, mind-12)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (PRP He))
                (VP (MD would)
                  (VP (VB give)
                    (NP (PRP it))
                    (NP (PRP us))
                    (NP (RB then))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(think-4, you-3)
ccomp(Do-2, think-4)
nsubj(give-7, He-5)
aux(give-7, would-6)
ccomp(think-4, give-7)
iobj(give-7, it-8)
iobj(give-7, us-9)
dobj(give-7, then-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD pursued))
        (NP (NNP Andrew))))
    (, ,) (`` ``)
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (VP (VBD were)
          (ADJP (RB so) (JJ foolish))
          (PP (IN as)
            (NP
              (NP (DT that) (JJ old) (NN man))
              (CC and)
              (NP (NN woman)))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJR better))
        (S
          (VP (TO to)
            (VP
              (VP (VB find)
                (NP (PRP it))
                (PRT (RP out)))
              (, ,)
              (CC and)
              (VP (VB begin)
                (S
                  (VP (TO to)
                    (VP (VB grow)
                      (ADJP (JJ wise)))))))))))
    (. !)))

cc(better-24, But-2)
parataxis(better-24, pursued-5)
nsubj(pursued-5, Andrew-6)
mark(foolish-13, if-9)
nsubj(foolish-13, we-10)
cop(foolish-13, were-11)
advmod(foolish-13, so-12)
advcl(better-24, foolish-13)
det(man-17, that-15)
amod(man-17, old-16)
prep_as(foolish-13, man-17)
prep_as(foolish-13, woman-19)
conj_and(man-17, woman-19)
nsubj(better-24, it-21)
nsubj(find-26, it-21)
nsubj(begin-31, it-21)
nsubj(grow-33, it-21)
aux(better-24, would-22)
cop(better-24, be-23)
root(ROOT-0, better-24)
aux(find-26, to-25)
xcomp(better-24, find-26)
dobj(find-26, it-27)
prt(find-26, out-28)
xcomp(better-24, begin-31)
conj_and(find-26, begin-31)
aux(grow-33, to-32)
xcomp(begin-31, grow-33)
acomp(grow-33, wise-34)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB tell)
          (NP (PRP you))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP we))
              (VP (MD 'll)
                (VP (VB do))))))))
    (: :)
    (S
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB make)
          (S
            (NP (PRP it))
            (NP (PRP$ our) (JJ first) (NN wish)
              (S
                (VP (TO to)
                  (VP (VB know)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ 's)
                          (ADJP (JJS best))
                          (S
                            (VP (TO to)
                              (VP (VB ask)
                                (PP (IN for))))))))))))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP we))
      (VP (MD can)
        (VP (VB go)
          (PP (IN on)
            (S
              (VP (VBG asking)))))))
    (. !) ('' '')))

nsubj(tell-4, I-2)
aux(tell-4, 'll-3)
root(ROOT-0, tell-4)
dobj(tell-4, you-5)
dobj(do-9, what-6)
nsubj(do-9, we-7)
aux(do-9, 'll-8)
dep(tell-4, do-9)
nsubj(make-13, we-11)
aux(make-13, 'll-12)
conj_and(tell-4, make-13)
nsubj(wish-17, it-14)
poss(wish-17, our-15)
amod(wish-17, first-16)
xcomp(make-13, wish-17)
aux(know-19, to-18)
vmod(wish-17, know-19)
nsubj(best-22, what-20)
nsubj(ask-24, what-20)
cop(best-22, 's-21)
ccomp(know-19, best-22)
aux(ask-24, to-23)
xcomp(best-22, ask-24)
prep(ask-24, for-25)
advmod(go-31, then-28)
nsubj(go-31, we-29)
aux(go-31, can-30)
conj_and(tell-4, go-31)
prepc_on(go-31, asking-33)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (S
        (VP (VBG yes)))
      (: ;)
      (VP (VBP let)
        (NP (PRP us))))
    (. !) ('' '')))

discourse(let-6, Yes-2)
csubj(let-6, yes-4)
root(ROOT-0, let-6)
dobj(let-6, us-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD fancy)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD 'll)
            (VP (VB have)
              (NP
                (QP (RB as) (JJ many))
                (NNS wishes))
              (SBAR (IN as)
                (S
                  (NP (PRP we))
                  (VP (VBP like)))))))))
    (. !)))

nsubj(fancy-3, I-2)
root(ROOT-0, fancy-3)
nsubj(have-6, we-4)
aux(have-6, 'll-5)
ccomp(fancy-3, have-6)
quantmod(many-8, as-7)
num(wishes-9, many-8)
dobj(have-6, wishes-9)
mark(like-12, as-10)
nsubj(like-12, we-11)
advcl(have-6, like-12)

(ROOT
  (S
    (NP
      (NP (NNP Doon) (NNP upo) (POS '))
      (NN yer) (NNS knees))
    (, ,)
    (VP (VBZ Sandy))
    (. !) ('' '')))

nn(upo-2, Doon-1)
poss(knees-5, upo-2)
nn(knees-5, yer-4)
nsubj(Sandy-7, knees-5)
root(ROOT-0, Sandy-7)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP knelt)
      (ADVP (RB together)))
    (. .)))

nsubj(knelt-2, They-1)
root(ROOT-0, knelt-2)
advmod(knelt-2, together-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP fear)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBP are) (RB not)
            (NP (DT a) (JJ few))
            (S
              (VP (TO to)
                (VP (VB say) (, ,) (`` ``)
                  (S
                    (ADJP (WRB How) (JJ ill-instructed))
                    (NP
                      (NP (DT the) (JJ poor) (NNS children))
                      (VP (VBD were)))))))))))
    (. !)))

nsubj(fear-2, I-1)
root(ROOT-0, fear-2)
expl(are-4, there-3)
ccomp(fear-2, are-4)
neg(are-4, not-5)
det(few-7, a-6)
nsubj(are-4, few-7)
aux(say-9, to-8)
vmod(are-4, say-9)
advmod(ill-instructed-13, How-12)
dep(say-9, ill-instructed-13)
det(children-16, the-14)
amod(children-16, poor-15)
dep(ill-instructed-13, children-16)
vmod(children-16, were-17)

(ROOT
  (PRN (: --)
    (S
      (VP
        (ADVP (RB actually))
        (VBG mingling)
        (NP
          (NP (DT the) (NN gospel))
          (CC and)
          (NP (DT the) (NN fairy) (NNS tales))
          (. !) ('' ''))))))

advmod(mingling-3, actually-2)
root(ROOT-0, mingling-3)
det(gospel-5, the-4)
dobj(mingling-3, gospel-5)
det(tales-9, the-7)
nn(tales-9, fairy-8)
dobj(mingling-3, tales-9)
conj_and(gospel-5, tales-9)

(ROOT
  (S
    (S
      (NP (`` ``)
        (NP (JJ Happy) (NNS children))
        (, ,) ('' ''))
      (VP (VBP say)
        (NP (PRP I))
        (, ,) (`` ``)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD could)
              (VP (VB blunder)
                (PP (IN into)
                  (S
                    (NP
                      (NP (DT the) (JJ very) (NN heart))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN will))
                          (PP (IN of)
                            (NP (NNP God))))))
                    (VP (VBG concerning)
                      (NP (PRP them)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP _))
      (VP (VBP do)
        (S
          (VP (VBG _)
            (ADVP
              (NP (DT the) (NN thing))
              (IN at))
            (SBAR (RB once) (IN that)
              (S
                (NP (DT the) (NNP Lord))
                (VP (VBD taught)
                  (NP (PRP them))
                  (, ,)
                  (S
                    (VP (VBG using)
                      (NP
                        (NP (DT the) (JJ common) (NN sense))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (S
                              (NP (NNP God))
                              (VP (VBD had)
                                (VP (VBN given))))
                            (CC and)
                            (S
                              (NP (DT the) (NN fairy) (NN tale))
                              (VP (VBD nourished)))))))))))))))
    (. !) ('' '')))

amod(children-3, Happy-2)
nsubj(say-6, children-3)
root(ROOT-0, say-6)
dobj(say-6, I-7)
nsubj(blunder-12, who-10)
aux(blunder-12, could-11)
dep(say-6, blunder-12)
det(heart-16, the-14)
amod(heart-16, very-15)
nsubj(concerning-22, heart-16)
det(will-19, the-18)
prep_of(heart-16, will-19)
prep_of(will-19, God-21)
prepc_into(blunder-12, concerning-22)
dobj(concerning-22, them-23)
nsubj(do-27, _-26)
conj_and(say-6, do-27)
xcomp(do-27, _-28)
det(thing-30, the-29)
npadvmod(at-31, thing-30)
advmod(_-28, at-31)
advmod(taught-36, once-32)
mark(taught-36, that-33)
det(Lord-35, the-34)
nsubj(taught-36, Lord-35)
dep(_-28, taught-36)
dobj(taught-36, them-37)
vmod(taught-36, using-39)
det(sense-42, the-40)
amod(sense-42, common-41)
dobj(using-39, sense-42)
dep(given-46, sense-42)
nsubj(given-46, God-44)
aux(given-46, had-45)
rcmod(sense-42, given-46)
det(tale-50, the-48)
nn(tale-50, fairy-49)
nsubj(nourished-51, tale-50)
rcmod(sense-42, nourished-51)
conj_and(given-46, nourished-51)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Lord))
      (PP (IN of)
        (NP (DT the) (NN promise))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN Lord))
        (PP (IN of)
          (NP (PDT all)
            (NP (JJ true) (NNS parables))
            (CC and)
            (NP (DT all) (JJ good) (NN fairy) (NNS tales))))))
    (. .)))

det(Lord-2, The-1)
nsubj(Lord-8, Lord-2)
det(promise-5, the-4)
prep_of(Lord-2, promise-5)
cop(Lord-8, is-6)
det(Lord-8, the-7)
root(ROOT-0, Lord-8)
dep(parables-12, all-10)
amod(parables-12, true-11)
prep_of(Lord-8, parables-12)
det(tales-17, all-14)
amod(tales-17, good-15)
nn(tales-17, fairy-16)
prep_of(Lord-8, tales-17)
conj_and(parables-12, tales-17)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD prayed) (: :) (`` ``)
      (S
        (INTJ (UH Oh) (, ,) (UH Lord))
        (, ,)
        (VP (VB tell)
          (NP
            (NP (NNP Sandy))
            (CC and)
            (NP
              (NP (PRP me))
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (TO to)
                    (VP (VB ask)
                      (PP (IN for)))))))))))
    (. .)))

nsubj(prayed-2, Andrew-1)
root(ROOT-0, prayed-2)
discourse(tell-9, Oh-5)
dep(Oh-5, Lord-7)
ccomp(prayed-2, tell-9)
dobj(tell-9, Sandy-10)
dobj(tell-9, me-12)
conj_and(Sandy-10, me-12)
nsubj(ask-15, me-12)
prep_for(ask-15, me-12)
aux(ask-15, to-14)
rcmod(me-12, ask-15)
vmod(me-12, ask-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (ADJP (JJ unanimous)))
    (. .) ('' '')))

nsubj(unanimous-3, We-1)
cop(unanimous-3, 're-2)
root(ROOT-0, unanimous-3)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD got)
      (PRT (RP up))
      (PP (IN from)
        (NP (PRP$ their) (NNS knees))))
    (. .)))

nsubj(got-2, They-1)
root(ROOT-0, got-2)
prt(got-2, up-3)
poss(knees-6, their-5)
prep_from(got-2, knees-6)

(ROOT
  (FRAG
    (S
      (NP (PRP They))
      (VP (VBD had)
        (VP (VBN said)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (VBD had)
                (S
                  (VP (TO to)
                    (VP (VB say))))))))))
    (: :)
    (FRAG
      (WHADVP (WRB why))
      (VP (VB say)
        (NP (JJR more))))
    (. !)))

nsubj(said-3, They-1)
aux(said-3, had-2)
dep(say-11, said-3)
dobj(had-6, what-4)
nsubj(say-8, what-4)
nsubj(had-6, they-5)
ccomp(said-3, had-6)
aux(say-8, to-7)
xcomp(had-6, say-8)
dep(say-11, why-10)
root(ROOT-0, say-11)
dobj(say-11, more-12)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD felt)
      (ADJP (RB rather) (JJ dull)))
    (. .)))

nsubj(felt-2, They-1)
root(ROOT-0, felt-2)
advmod(dull-4, rather-3)
acomp(felt-2, dull-4)

(ROOT
  (S
    (NP (NN Nothing))
    (VP (VBD came)
      (PP (TO to)
        (NP (PRP them))))
    (. .)))

nsubj(came-2, Nothing-1)
root(ROOT-0, came-2)
prep_to(came-2, them-4)

(ROOT
  (S
    (S
      (NP (DT The) (NN prayer))
      (VP (VBD was)
        (VP (VBN prayed))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD could) (RB not)
        (VP (VB make)
          (NP (DT the) (NN answer)))))
    (. !)))

det(prayer-2, The-1)
nsubjpass(prayed-4, prayer-2)
auxpass(prayed-4, was-3)
root(ROOT-0, prayed-4)
nsubj(make-10, they-7)
aux(make-10, could-8)
neg(make-10, not-9)
conj_and(prayed-4, make-10)
det(answer-12, the-11)
dobj(make-10, answer-12)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP (DT no) (NN use))
        (PP (IN in)
          (S
            (VP (VBG reading)
              (NP (JJR more)))))))
    (. !)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(use-4, no-3)
nsubj(was-2, use-4)
prepc_in(use-4, reading-6)
dobj(reading-6, more-7)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD put)
      (NP (DT the) (NNP Bible))
      (ADVP (RB away))
      (PP (IN in)
        (NP (DT a) (JJ rough) (NN box)))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP they))
          (VP (VBD kept)
            (NP (PRP it))
            (PP
              (PP (IN among)
                (NP
                  (NP (NNS rose-leaves))
                  (PRN (: --)
                    (NP
                      (NP (JJ ignorant) (NNS priests))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (JJ lovely) (NN mystery))
                          (PP (IN of)
                            (NP (PRP Him)))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBD was)
                                (PP (IN with)
                                  (NP (PRP them)))
                                (ADVP (RB always))))))))
                    (: --))))
              (CC and)
              (PP (IN without)
                (NP
                  (NP (DT a) (NN word))
                  (SBAR
                    (S
                      (VP (VBD went)
                        (NP
                          (NP (DT each))
                          (NP (PRP$ his) (JJ own) (NN way)))
                        (, ,)
                        (FRAG (RB not)
                          (ADJP (JJ happy)))
                        (, ,)
                        (SBAR (IN for)
                          (S
                            (VP (VBD were)
                              (NP (PRP they))
                              (PP (RB not)
                                (S
                                  (VP (VBG leaving)
                                    (NP (PRP Him))
                                    (PP (IN under)
                                      (NP (DT the) (NN elder-tree))))))))))))
                  (, ,)
                  (ADJP (JJ lonely)
                    (CC and)
                    (JJ shadowy))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (NP (PRP$ their) (NN custom)
                          (S
                            (VP (TO to)
                              (VP (VB meet)))))))))))))))
    (. !)))

nsubj(put-2, They-1)
root(ROOT-0, put-2)
det(Bible-4, the-3)
dobj(put-2, Bible-4)
advmod(put-2, away-5)
det(box-9, a-7)
amod(box-9, rough-8)
prep_in(put-2, box-9)
advmod(kept-12, where-10)
nsubj(kept-12, they-11)
nsubj(kept-12', they-11)
advcl(put-2, kept-12)
advcl(put-2, kept-12')
conj_and(kept-12, kept-12')
dobj(kept-12, it-13)
prep_among(kept-12, rose-leaves-15)
amod(priests-18, ignorant-17)
dep(rose-leaves-15, priests-18)
det(mystery-22, the-20)
amod(mystery-22, lovely-21)
prep_of(priests-18, mystery-22)
nsubj(was-26, mystery-22)
prep_of(mystery-22, Him-24)
rcmod(mystery-22, was-26)
prep_with(was-26, them-28)
advmod(was-26, always-29)
det(word-34, a-33)
prep_without(kept-12', word-34)
rcmod(word-34, went-35)
dobj(went-35, each-36)
iobj(went-35, each-36)
poss(way-39, his-37)
amod(way-39, own-38)
dep(each-36, way-39)
dep(went-35, not-41)
dep(not-41, happy-42)
mark(they-46, for-44)
cop(they-46, were-45)
advcl(went-35, they-46)
prep(they-46, not-47)
pcomp(not-47, leaving-48)
dobj(leaving-48, Him-49)
det(elder-tree-52, the-51)
prep_under(leaving-48, elder-tree-52)
amod(word-34, lonely-54)
amod(word-34, shadowy-56)
conj_and(lonely-54, shadowy-56)
advmod(custom-62, where-58)
nsubj(custom-62, it-59)
cop(custom-62, was-60)
poss(custom-62, their-61)
rcmod(word-34, custom-62)
aux(meet-64, to-63)
vmod(custom-62, meet-64)

(ROOT
  (NP
    (NP (NNS Alas))
    (PP (IN for)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD must)
              (VP (VB go)
                (PP (TO to)
                  (NP (NN church)))
                (SBAR
                  (SBAR
                    (S
                      (VP (TO to)
                        (VP (VB find)
                          (NP (PRP Him))))))
                  (, ,)
                  (CC or)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (MD can) (RB not)
                        (VP (VB pray)
                          (SBAR (IN unless)
                            (FRAG
                              (PP (IN in)
                                (NP (PRP$ their) (NN closet))))))))))))))))
    (. !)))

root(ROOT-0, Alas-1)
prep_for(Alas-1, those-3)
nsubj(go-6, those-3)
aux(go-6, must-5)
rcmod(those-3, go-6)
prep_to(go-6, church-8)
aux(find-10, to-9)
dep(go-6, find-10)
dobj(find-10, Him-11)
nsubj(pray-17, who-14)
aux(pray-17, can-15)
neg(pray-17, not-16)
dep(go-6, pray-17)
conj_or(find-10, pray-17)
mark(in-19, unless-18)
advcl(pray-17, in-19)
poss(closet-21, their-20)
pobj(in-19, closet-21)

(ROOT
  (S
    (S
      (S
        (NP (PRP They))
        (VP (VBD wandered)
          (PP (IN about)
            (NP (NN disconsolate)))
          (, ,)
          (PP (IN at)
            (NP (NN school)))))
      (CC and)
      (S
        (PP (IN at)
          (NP (NN home)))
        (, ,)
        (NP
          (NP (DT the) (NN rest))
          (PP (IN of)
            (NP
              (NP (DT the) (NN day))
              (: --)
              (ADVP (IN at) (JJS least))
              (NP (NNP Andrew)))))
        (VP (VBD did))))
    (: ;)
    (S
      (NP (NNP Sandy))
      (VP (VBD had)
        (S
          (NP (NNP Andrew))
          (VP (TO to)
            (VP (VB lean)
              (PP (RB upon)))))))
    (. !)))

nsubj(wandered-2, They-1)
root(ROOT-0, wandered-2)
prep_about(wandered-2, disconsolate-4)
prep_at(wandered-2, school-7)
prep_at(did-21, home-10)
det(rest-13, the-12)
nsubj(did-21, rest-13)
det(day-16, the-15)
prep_of(rest-13, day-16)
advmod(day-16, at-18)
pobj(at-18, least-19)
dep(day-16, Andrew-20)
conj_and(wandered-2, did-21)
nsubj(had-24, Sandy-23)
parataxis(wandered-2, had-24)
dobj(had-24, Andrew-25)
nsubj(lean-27, Andrew-25)
aux(lean-27, to-26)
ccomp(had-24, lean-27)
xcomp(had-24, lean-27)
prep(lean-27, upon-28)

(ROOT
  (S
    (S
      (NP (NNP Andrew))
      (VP (VBD had)
        (NP
          (NP (PRP Him))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD was)
                (PP (IN with)
                  (NP (PRP them)))
                (ADVP (RB always))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP He))
      (VP (VBD seemed)
        (PP (IN at)
          (NP
            (NP (DT the) (JJ other) (NN end))
            (PP (IN of)
              (NP (DT the) (NN world)))))))
    (. .)))

nsubj(had-2, Andrew-1)
root(ROOT-0, had-2)
dobj(had-2, Him-3)
nsubj(was-5, Him-3)
rcmod(Him-3, was-5)
prep_with(was-5, them-7)
advmod(was-5, always-8)
nsubj(seemed-12, He-11)
conj_but(had-2, seemed-12)
det(end-16, the-14)
amod(end-16, other-15)
prep_at(seemed-12, end-16)
det(world-19, the-18)
prep_of(end-16, world-19)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD had)
        (VP (VBN prayed))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD was)
        (ADVP (DT no) (RBR more))
        (PP (IN of)
          (NP (PRP it)))))
    (. !)))

nsubj(prayed-3, They-1)
nsubj(was-7, They-1)
aux(prayed-3, had-2)
root(ROOT-0, prayed-3)
expl(was-7, there-6)
conj_and(prayed-3, was-7)
neg(more-9, no-8)
advmod(was-7, more-9)
prep_of(was-7, it-11)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN evening)))
    (, ,)
    (SBAR (IN while)
      (S
        (ADVP (RB yet))
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (JJ light)))))
    (, ,)
    (NP (NNP Andrew))
    (VP
      (VP (VBD went)
        (ADVP (RB alone))
        (PP (TO to)
          (NP (DT the) (NN elder-tree))))
      (, ,)
      (VP (VBD took)
        (NP (DT the) (NNP Bible))
        (PP (IN from)
          (NP (PRP$ its) (JJ humble) (NN shrine))))
      (, ,)
      (CC and)
      (VP (VBD began)
        (S
          (VP (VBG turning)
            (PRT (RP over))
            (NP (PRP$ its) (NNS leaves))))))
    (. .)))

det(evening-3, the-2)
prep_in(went-12, evening-3)
mark(light-9, while-5)
advmod(light-9, yet-6)
nsubj(light-9, it-7)
cop(light-9, was-8)
advcl(went-12, light-9)
nsubj(went-12, Andrew-11)
nsubj(took-18, Andrew-11)
nsubj(began-27, Andrew-11)
root(ROOT-0, went-12)
advmod(went-12, alone-13)
det(elder-tree-16, the-15)
prep_to(went-12, elder-tree-16)
conj_and(went-12, took-18)
det(Bible-20, the-19)
dobj(took-18, Bible-20)
poss(shrine-24, its-22)
amod(shrine-24, humble-23)
prep_from(took-18, shrine-24)
conj_and(went-12, began-27)
xcomp(began-27, turning-28)
prt(turning-28, over-29)
poss(leaves-31, its-30)
dobj(turning-28, leaves-31)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHADVP (WRB why))
    (SQ
      (VP (VBP call))
      (NP
        (NP (NNP ye) (PRP me) (, ,) (NNP Lord) (, ,))
        (SBAR
          (S
            (VP
              (VP (VBZ Lord))
              (, ,)
              (CC and)
              (VP (VBP do) (RB not))))))
      (NP
        (NP (DT the) (NNS things))
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP I))
            (VP (VBP say))))))
    (. ?) ('' '')))

cc(call-4, And-2)
advmod(call-4, why-3)
root(ROOT-0, call-4)
nn(Lord-8, ye-5)
dep(Lord-8, me-6)
dep(call-4, Lord-8)
rcmod(Lord-8, Lord-10)
rcmod(Lord-8, do-13)
conj_and(Lord-10, do-13)
neg(do-13, not-14)
det(things-16, the-15)
dep(call-4, things-16)
dobj(say-19, things-16)
nsubj(say-19, I-18)
rcmod(things-16, say-19)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD read))
      (, ,)
      (CC and)
      (VP (VBN sunk)
        (ADVP (RB deep))
        (PP (IN in)
          (NP (NN thought)))))
    (. .)))

nsubj(read-2, He-1)
nsubj(sunk-5, He-1)
root(ROOT-0, read-2)
conj_and(read-2, sunk-5)
advmod(sunk-5, deep-6)
prep_in(sunk-5, thought-8)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN way))
        (PRN
          (S
            (NP (PRP$ his) (NNS thoughts))
            (VP (VBD went))))
        (: :) (`` ``)
        (NP
          (NP (WP What))
          (NP (NNS things)))))
    (. ?)))

nsubj(way-4, This-1)
cop(way-4, is-2)
det(way-4, the-3)
root(ROOT-0, way-4)
poss(thoughts-6, his-5)
nsubj(went-7, thoughts-6)
dep(way-4, went-7)
dep(way-4, What-10)
dep(What-10, things-11)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBD had)
      (NP (PRP He))
      (VP (VBN been)
        (VP (VBG saying))))
    (. ?)))

dobj(saying-5, What-1)
aux(saying-5, had-2)
nsubj(saying-5, He-3)
aux(saying-5, been-4)
root(ROOT-0, saying-5)

(ROOT
  (S
    (VP (VB Let)
      (NP (PRP me))
      (VP (VB look)
        (CC and)
        (VB see)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP He))
            (VP (VBZ says))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (MD may)
              (VP (VB begin)
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (NP (PRP it)))))))))))
    (. !) ('' '')))

root(ROOT-0, Let-1)
dobj(Let-1, me-2)
dep(Let-1, look-3)
dep(Let-1, see-5)
conj_and(look-3, see-5)
dobj(says-8, what-6)
nsubj(says-8, He-7)
ccomp(look-3, says-8)
mark(begin-13, that-10)
nsubj(begin-13, I-11)
nsubj(do-15, I-11)
aux(begin-13, may-12)
ccomp(look-3, begin-13)
aux(do-15, to-14)
xcomp(begin-13, do-15)
dobj(do-15, it-16)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD read)
        (NP (PDT all) (DT the) (NN chapter)))
      (, ,)
      (CC and)
      (VP (VBD found)
        (S
          (NP (PRP it))
          (ADJP (JJ full)
            (PP (IN of)
              (NP (JJ _) (NNS tellings) (NNS _)))))))
    (. .)))

nsubj(read-2, He-1)
nsubj(found-8, He-1)
root(ROOT-0, read-2)
predet(chapter-5, all-3)
det(chapter-5, the-4)
dobj(read-2, chapter-5)
conj_and(read-2, found-8)
nsubj(full-10, it-9)
xcomp(found-8, full-10)
amod(_-14, _-12)
nn(_-14, tellings-13)
prep_of(full-10, _-14)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD read)
          (NP (PRP it))
          (SBAR (IN before)
            (S
              (NP (PRP he))
              (VP (VBD had) (RB not)
                (VP (VBN thought)
                  (PP (IN of)
                    (S
                      (VP (VBG doing)
                        (NP
                          (NP (CD one))
                          (PP (IN of)
                            (NP (DT the) (NNS things))))))))))))))
    (NP (PRP He))
    (VP (VBD said) (, ,)
      (PP (IN for)
        (ADJP
          (ADJP (RB as) (RB plainly))
          (SBAR (IN as)
            (S
              (NP (PRP He))
              (VP (VBD told)
                (NP (PRP him))))))))
    (. !)))

advmod(read-3, When-1)
nsubj(read-3, he-2)
advcl(said-17, read-3)
dobj(read-3, it-4)
mark(thought-9, before-5)
nsubj(thought-9, he-6)
aux(thought-9, had-7)
neg(thought-9, not-8)
advcl(read-3, thought-9)
prepc_of(thought-9, doing-11)
dobj(doing-11, one-12)
det(things-15, the-14)
prep_of(one-12, things-15)
nsubj(said-17, He-16)
root(ROOT-0, said-17)
prep(said-17, for-19)
advmod(plainly-21, as-20)
pobj(for-19, plainly-21)
mark(told-24, as-22)
nsubj(told-24, He-23)
dep(plainly-21, told-24)
dobj(told-24, him-25)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had) (RB not)
      (ADVP (RB once))
      (VP (VBN thought)
        (SBAR
          (S
            (NP (PRP He))
            (VP (VBD had)
              (NP
                (NP (DT any) (NN concern))
                (PP (IN in)
                  (NP (DT the) (NN matter)))))))))
    (. !)))

nsubj(thought-5, He-1)
aux(thought-5, had-2)
neg(thought-5, not-3)
advmod(thought-5, once-4)
root(ROOT-0, thought-5)
nsubj(had-7, He-6)
ccomp(thought-5, had-7)
det(concern-9, any-8)
dobj(had-7, concern-9)
det(matter-12, the-11)
prep_in(concern-9, matter-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP see))
    (. !) ('' '')))

nsubj(see-3, I-2)
root(ROOT-0, see-3)

(ROOT
  (S
    (S
      (NP (PRP he))
      (VP (VBD said)))
    (: ;) (`` ``)
    (S
      (NP (PRP we))
      (VP (MD must)
        (VP (VB begin)
          (ADVP (IN at) (RB once))
          (S
            (VP (TO to)
              (VP (VB do)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP He))
                    (VP (VBZ tells)
                      (NP (PRP us)))))))))))
    (. !) ('' '')))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
nsubj(begin-7, we-5)
nsubj(do-11, we-5)
aux(begin-7, must-6)
parataxis(said-2, begin-7)
advmod(begin-7, at-8)
advmod(at-8, once-9)
aux(do-11, to-10)
xcomp(begin-7, do-11)
dobj(tells-14, what-12)
nsubj(tells-14, He-13)
ccomp(do-11, tells-14)
dobj(tells-14, us-15)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD ran)
      (S
        (VP (TO to)
          (VP (VB find)
            (NP (PRP$ his) (NN brother))))))
    (. .)))

nsubj(ran-2, He-1)
nsubj(find-4, He-1)
root(ROOT-0, ran-2)
aux(find-4, to-3)
xcomp(ran-2, find-4)
poss(brother-6, his-5)
dobj(find-4, brother-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN got)
        (NP (PRP it))))
    (. !) ('' '')))

nsubj(got-4, I-2)
aux(got-4, 've-3)
root(ROOT-0, got-4)
dobj(got-4, it-5)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD cried) (: :) (`` ``)
      (S
        (NP (PRP I))
        (VP (VBP 've)
          (VP (VBN got)
            (NP (PRP it))))))
    (. !) ('' '')))

nsubj(cried-2, he-1)
root(ROOT-0, cried-2)
nsubj(got-7, I-5)
aux(got-7, 've-6)
ccomp(cried-2, got-7)
dobj(got-7, it-8)

(ROOT
  (INTJ (`` ``) (UH What) (. ?) ('' '')))

root(ROOT-0, What-2)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (NP (PRP we))
      (VP (VBP 've)
        (VP (VBN got)
          (S
            (S
              (VP (TO to)
                (VP (VB do) ('' ''))))
            (SBARQ (`` ``)
              (CC And)
              (WHNP (WP what))
              (SQ (VBZ is)
                (NP (PRP it)))
              (. ?) ('' ''))))))))

dobj(got-5, What-2)
nsubj(got-5, we-3)
aux(got-5, 've-4)
root(ROOT-0, got-5)
aux(do-7, to-6)
dep(got-5, do-7)
cc(what-11, And-10)
parataxis(do-7, what-11)
cop(what-11, is-12)
nsubj(what-11, it-13)

(ROOT
  (S (`` ``)
    (X
      (ADVP (RB Just))
      (NP (WP what)))
    (NP (PRP He))
    (VP (VBZ tells)
      (NP (PRP us)))
    (. .) ('' '')))

dep(what-3, Just-2)
dep(tells-5, what-3)
nsubj(tells-5, He-4)
root(ROOT-0, tells-5)
dobj(tells-5, us-6)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (VBD were)
      (VP (VBG doing)
        (NP (DT that))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (NNP Sandy)))
      (, ,) (`` ``))
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP we))
        (VP (VBD prayed)
          (S
            (NP (PRP Him))
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP us))
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (TO to)
                      (VP (VB pray)
                        (PP (IN for))))))))))))
    (. !) ('' '')))

nsubj(doing-4, We-2)
aux(doing-4, were-3)
root(ROOT-0, doing-4)
dobj(doing-4, that-5)
parataxis(doing-4, said-8)
nsubj(said-8, Sandy-9)
advmod(prayed-14, when-12)
nsubj(prayed-14, we-13)
advcl(doing-4, prayed-14)
dobj(prayed-14, Him-15)
nsubj(tell-17, Him-15)
aux(tell-17, to-16)
xcomp(prayed-14, tell-17)
dobj(tell-17, us-18)
nsubj(pray-21, what-19)
aux(pray-21, to-20)
xcomp(tell-17, pray-21)
prep(pray-21, for-22)

(ROOT
  (S (`` ``)
    (CC So)
    (NP (PRP we))
    (VP (VBD were))
    (. !)))

cc(were-4, So-2)
nsubj(were-4, we-3)
root(ROOT-0, were-4)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (JJ grand)))
    (. !) ('' '')))

nsubj(grand-3, That-1)
cop(grand-3, 's-2)
root(ROOT-0, grand-3)

(ROOT
  (S (`` ``) (RB Then)
    (VP (VBP have) (RB n't)
      (VP
        (NP (PRP we))
        (VBN got)
        (PP (TO to)
          (NP
            (ADJP (JJ pray)
              (PP (IN for)
                (NP (NN anything))))
            (JJR more)))))
    (. ?) ('' '')))

advmod(got-6, Then-2)
aux(got-6, have-3)
neg(got-6, n't-4)
dobj(got-6, we-5)
root(ROOT-0, got-6)
amod(more-11, pray-8)
prep_for(pray-8, anything-10)
prep_to(got-6, more-11)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (MD 'll)
        (ADVP (RB soon))
        (VP (VB find)
          (PRT (RP out)))))
    (: ;)
    (S (CC but)
      (ADVP (RB first))
      (NP (PRP we))
      (VP (MD must)
        (VP (VB look)
          (PP (IN for)
            (NP (NN something)))
          (S
            (VP (TO to)
              (VP (VB do)))))))
    (. !) ('' '')))

nsubj(find-5, We-2)
aux(find-5, 'll-3)
advmod(find-5, soon-4)
root(ROOT-0, find-5)
prt(find-5, out-6)
cc(look-12, but-8)
advmod(look-12, first-9)
nsubj(look-12, we-10)
nsubj(do-16, we-10)
aux(look-12, must-11)
parataxis(find-5, look-12)
prep_for(look-12, something-14)
aux(do-16, to-15)
xcomp(look-12, do-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD began)
      (ADVP (IN at) (RB once))
      (PP (TO to)
        (NP (NN search)))
      (PP (IN for)
        (NP
          (NP (NNS things))
          (SBAR
            (S
              (NP (DT the) (NNP Lord))
              (VP (VBD told)
                (S
                  (NP (PRP them))
                  (VP (TO to)
                    (VP (VB do))))))))))
    (. .)))

nsubj(began-2, They-1)
root(ROOT-0, began-2)
advmod(began-2, at-3)
advmod(at-3, once-4)
prep_to(began-2, search-6)
prep_for(began-2, things-8)
det(Lord-10, the-9)
nsubj(told-11, Lord-10)
rcmod(things-8, told-11)
dobj(told-11, them-12)
nsubj(do-14, them-12)
aux(do-14, to-13)
xcomp(told-11, do-14)

(ROOT
  (S (CC And)
    (PP (IN of)
      (NP (DT all)))
    (PRN
      (S
        (NP (PRP they))
        (VP (VBD found)))
      (, ,))
    (NP
      (NP (DT the) (NN plainest))
      (CC and)
      (NP (JJS easiest)))
    (VP (VBD was) (: :)
      (S (`` ``)
        (NP (NNP Whosoever))
        (VP (MD shall)
          (VP (VB smite)
            (NP (PRP thee))
            (PP (IN on)
              (NP (PRP$ thy) (JJ right) (NN cheek))))
          (, ,)
          (VP (VB turn)
            (PP (TO to)
              (NP (PRP him)))
            (NP (DT the) (JJ other))
            (ADVP (RB also))))))
    (. .) ('' '')))

cc(was-11, And-1)
prep_of(was-11, all-3)
nsubj(found-5, they-4)
parataxis(was-11, found-5)
det(plainest-8, the-7)
nsubj(was-11, plainest-8)
conj_and(plainest-8, easiest-10)
nsubj(was-11, easiest-10)
root(ROOT-0, was-11)
nsubj(smite-16, Whosoever-14)
aux(smite-16, shall-15)
ccomp(was-11, smite-16)
parataxis(was-11, smite-16)
dobj(smite-16, thee-17)
poss(cheek-21, thy-19)
amod(cheek-21, right-20)
prep_on(smite-16, cheek-21)
dep(smite-16, turn-23)
prep_to(turn-23, him-25)
det(other-27, the-26)
dobj(turn-23, other-27)
advmod(turn-23, also-28)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD needed)
      (NP (DT no) (NN explanation)))
    (. !)))

nsubj(needed-2, This-1)
root(ROOT-0, needed-2)
neg(explanation-4, no-3)
dobj(needed-2, explanation-4)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (ADJP (RB as) (JJ clear)
        (PP (IN as)
          (NP (DT the) (NN day))))
      (PP (TO to)
        (NP
          (NP (DT both))
          (PP (IN of)
            (NP (PRP them))))))
    (. !)))

nsubj(clear-4, it-1)
cop(clear-4, was-2)
advmod(clear-4, as-3)
root(ROOT-0, clear-4)
det(day-7, the-6)
prep_as(clear-4, day-7)
prep_to(clear-4, both-9)
prep_of(both-9, them-11)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The)
          (ADJP (RB very) (JJ next))
          (NN morning))
        (NP (DT the) (NN school-master)))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (PRN (, ,)
            (SBAR (IN though)
              (FRAG
                (PP (IN of)
                  (NP (DT a) (JJ gentle) (NN disposition)))))
            (, ,))
          (VP (VBD was)
            (ADJP (JJ irritable))
            (, ,)
            (S
              (VP (VBG taking)
                (NP
                  (NP (NNP Andrew))
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN offender))
                      (PP (IN in)
                        (NP
                          (NP (DT a) (JJ certain) (NN breach))
                          (PP (IN of)
                            (NP (NN discipline)))))))))))))
      (, ,))
    (VP (VBD gave)
      (NP (PRP him))
      (NP
        (NP (DT a) (JJ smart) (NN box))
        (PP (IN on)
          (NP (DT the) (NN ear)))))
    (. .)))

det(morning-4, The-1)
advmod(next-3, very-2)
amod(morning-4, next-3)
nsubj(irritable-17, morning-4)
nsubj(gave-31, morning-4)
det(school-master-6, the-5)
dep(morning-4, school-master-6)
mark(of-11, though-10)
parataxis(irritable-17, of-11)
det(disposition-14, a-12)
amod(disposition-14, gentle-13)
pobj(of-11, disposition-14)
cop(irritable-17, was-16)
rcmod(morning-4, irritable-17)
xcomp(irritable-17, taking-19)
dobj(taking-19, Andrew-20)
det(offender-23, the-22)
prep_for(Andrew-20, offender-23)
det(breach-27, a-25)
amod(breach-27, certain-26)
prep_in(offender-23, breach-27)
prep_of(breach-27, discipline-29)
root(ROOT-0, gave-31)
iobj(gave-31, him-32)
det(box-35, a-33)
amod(box-35, smart-34)
dobj(gave-31, box-35)
det(ear-38, the-37)
prep_on(box-35, ear-38)

(ROOT
  (S
    (NP (NNP Andrew))
    (, ,)
    (ADVP
      (ADVP (RB as) (RB readily) (RB as))
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBD had)
            (VP (VBN been)
              (ADJP (JJ instinctively)))))))
    (, ,)
    (VP (VBD turned)
      (PP (TO to)
        (NP (PRP him)))
      (NP (DT the) (JJ other) (NN cheek)))
    (. .)))

nsubj(turned-12, Andrew-1)
advmod(as-5, as-3)
advmod(as-5, readily-4)
advmod(turned-12, as-5)
mark(instinctively-10, if-6)
nsubj(instinctively-10, it-7)
aux(instinctively-10, had-8)
cop(instinctively-10, been-9)
advcl(as-5, instinctively-10)
root(ROOT-0, turned-12)
prep_to(turned-12, him-14)
det(cheek-17, the-15)
amod(cheek-17, other-16)
dobj(turned-12, cheek-17)

(ROOT
  (S
    (S
      (S
        (NP (DT An) (JJ angry) (NN man))
        (VP (VBZ is)
          (NP
            (NP (DT an) (JJ evil) (NN interpreter))
            (PP (IN of)
              (NP (JJ holy) (NNS things))))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Mr.) (NNP Fordyce))
        (VP
          (VP (VBD took)
            (NP (DT the) (NN action))
            (PP (IN for)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP (JJ rudest) (NN mockery))))))
          (, ,)
          (CC nor)
          (VP (VBD thought)
            (PP (IN of)
              (NP
                (NP (DT the) (JJR higher) (NN master))
                (VP
                  (ADVP (RB therein))
                  (VBN mocked)
                  (SBAR (IN if)
                    (S
                      (NP (PRP it))
                      (VP (VBD were)
                        (NP (NN mockery))))))))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD struck)
        (SBAR
          (S
            (NP (DT the) (NN offender))
            (ADVP
              (NP (DT a) (RB yet))
              (RBR smarter))
            (VP (VB blow))))))
    (. .)))

det(man-3, An-1)
amod(man-3, angry-2)
nsubj(interpreter-7, man-3)
cop(interpreter-7, is-4)
det(interpreter-7, an-5)
amod(interpreter-7, evil-6)
root(ROOT-0, interpreter-7)
amod(things-10, holy-9)
prep_of(interpreter-7, things-10)
nn(Fordyce-14, Mr.-13)
nsubj(took-15, Fordyce-14)
nsubj(thought-25, Fordyce-14)
conj_and(interpreter-7, took-15)
det(action-17, the-16)
dobj(took-15, action-17)
prep_for(took-15, one-19)
amod(mockery-22, rudest-21)
prep_of(one-19, mockery-22)
conj_and(interpreter-7, thought-25)
conj_nor(took-15, thought-25)
det(master-29, the-27)
amod(master-29, higher-28)
prep_of(thought-25, master-29)
advmod(mocked-31, therein-30)
vmod(master-29, mocked-31)
mark(mockery-35, if-32)
nsubj(mockery-35, it-33)
cop(mockery-35, were-34)
advcl(mocked-31, mockery-35)
nsubj(struck-38, he-37)
parataxis(interpreter-7, struck-38)
det(offender-40, the-39)
nsubj(blow-44, offender-40)
det(yet-42, a-41)
npadvmod(smarter-43, yet-42)
advmod(blow-44, smarter-43)
ccomp(struck-38, blow-44)

(ROOT
  (S
    (S
      (S
        (NP (NNP Andrew))
        (VP (VBD stood)
          (PP (IN for)
            (NP (DT a) (NN minute)))
          (PP (IN like)
            (NP (CD one) (NN dazed)))))
      (: ;)
      (CC but)
      (S
        (NP
          (NP (DT the) (NN red))
          (PP (IN on)
            (NP (PRP$ his) (NN face))))
        (VP (VBD was) (RB not)
          (NP
            (NP (DT that))
            (PP (IN of)
              (NP (NN anger)))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBN perplexed)
          (PP (IN as)
            (PP (TO to)
              (SBAR (IN whether)
                (S
                  (NP (PRP he))
                  (VP (MD ought)
                    (S
                      (ADVP (RB now))
                      (VP (TO to)
                        (VP (VB turn)
                          (NP (DT the) (JJ former) (NN cheek))
                          (ADVP (RB again))
                          (PP (TO to)
                            (NP (DT the) (NN striker))))))))))))))
    (. .)))

nsubj(stood-2, Andrew-1)
root(ROOT-0, stood-2)
det(minute-5, a-4)
prep_for(stood-2, minute-5)
num(dazed-8, one-7)
prep_like(stood-2, dazed-8)
det(red-12, the-11)
nsubj(that-18, red-12)
poss(face-15, his-14)
prep_on(red-12, face-15)
cop(that-18, was-16)
neg(that-18, not-17)
conj_but(stood-2, that-18)
prep_of(that-18, anger-20)
nsubjpass(perplexed-24, he-22)
auxpass(perplexed-24, was-23)
parataxis(stood-2, perplexed-24)
prepc_as_to(perplexed-24, to-26)
mark(ought-29, whether-27)
nsubj(ought-29, he-28)
nsubj(turn-32, he-28)
pcomp(perplexed-24, ought-29)
advmod(turn-32, now-30)
aux(turn-32, to-31)
xcomp(ought-29, turn-32)
det(cheek-35, the-33)
amod(cheek-35, former-34)
dobj(turn-32, cheek-35)
advmod(turn-32, again-36)
det(striker-39, the-38)
prep_to(turn-32, striker-39)

(ROOT
  (S
    (ADVP (RB Uncertain))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD turned)
        (PRT (RP away)))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PP (TO to)
          (NP (PRP$ his) (NN work)))))
    (. .)))

advmod(turned-4, Uncertain-1)
nsubj(turned-4, he-3)
nsubj(went-8, he-3)
root(ROOT-0, turned-4)
prt(turned-4, away-5)
conj_and(turned-4, went-8)
poss(work-11, his-10)
prep_to(went-8, work-11)

(ROOT
  (S
    (VP (VBG Stops)
      (NP
        (NP (DT a) (NN reader))
        (S
          (ADVP (RB here))
          (VP (TO to)
            (VP (VB say)))))
      (: :) (`` ``)
      (SBARQ (CC But)
        (SQ (VBP do)
          (NP (PRP you))
          (ADVP (RB really))
          (VP (VB mean)
            (S
              (VP (TO to)
                (VP (VB tell)
                  (NP (PRP us))))))
          (S
            (NP (PRP we))
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP (VB take)
                    (NP (DT the) (NNS words))
                    (ADVP (RB literally))
                    (SBAR (IN as)
                      (S
                        (NP (NNP Andrew))
                        (VP (VBD did))))))))))
        (. ?))
      ('' ''))))

root(ROOT-0, Stops-1)
det(reader-3, a-2)
dobj(Stops-1, reader-3)
advmod(say-6, here-4)
aux(say-6, to-5)
vmod(reader-3, say-6)
cc(mean-13, But-9)
aux(mean-13, do-10)
nsubj(mean-13, you-11)
nsubj(tell-15, you-11)
advmod(mean-13, really-12)
ccomp(Stops-1, mean-13)
aux(tell-15, to-14)
xcomp(mean-13, tell-15)
dobj(tell-15, us-16)
nsubj(ought-18, we-17)
nsubj(take-20, we-17)
dep(mean-13, ought-18)
aux(take-20, to-19)
xcomp(ought-18, take-20)
det(words-22, the-21)
dobj(take-20, words-22)
advmod(take-20, literally-23)
mark(did-26, as-24)
nsubj(did-26, Andrew-25)
advcl(take-20, did-26)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP answer)))
    (: :) (`` ``)
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN earned)
              (NP (DT the) (NN right)
                (S
                  (VP (TO to)
                    (VP (VB understand)))))))))
      (, ,)
      (NP (PRP you))
      (VP (MD will) (RB not)
        (VP (VB need)
          (S
            (VP (TO to)
              (VP (VB ask)
                (NP (PRP me))))))))
    (. .)))

nsubj(answer-2, I-1)
root(ROOT-0, answer-2)
advmod(earned-8, When-5)
nsubj(earned-8, you-6)
aux(earned-8, have-7)
advcl(need-17, earned-8)
det(right-10, the-9)
dobj(earned-8, right-10)
aux(understand-12, to-11)
vmod(right-10, understand-12)
nsubj(need-17, you-14)
nsubj(ask-19, you-14)
aux(need-17, will-15)
neg(need-17, not-16)
parataxis(answer-2, need-17)
aux(ask-19, to-18)
xcomp(need-17, ask-19)
dobj(ask-19, me-20)

(ROOT
  (SINV
    (S
      (VP (TO To)
        (VP (VB explain)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (NNP Lord))
              (VP (VBZ means)
                (PP (TO to)
                  (NP
                    (NP (CD one))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ is) (RB not)
                          (ADJP (JJ obedient)))))))))))))
    (, ,)
    (VP (VBZ is))
    (NP
      (NP (DT the) (NN work))
      (PP (IN of)
        (NP
          (NP (DT no) (NN man))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ knows)
                (NP (PRP$ his) (NN work))))))))
    (. .) ('' '')))

aux(explain-2, To-1)
dep(is-14, explain-2)
dobj(means-6, what-3)
det(Lord-5, the-4)
nsubj(means-6, Lord-5)
ccomp(explain-2, means-6)
prep_to(means-6, one-8)
nsubj(obedient-12, one-8)
cop(obedient-12, is-10)
neg(obedient-12, not-11)
rcmod(one-8, obedient-12)
root(ROOT-0, is-14)
det(work-16, the-15)
nsubj(is-14, work-16)
neg(man-19, no-18)
prep_of(work-16, man-19)
nsubj(knows-21, man-19)
rcmod(man-19, knows-21)
poss(work-23, his-22)
dobj(knows-21, work-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (CC but))
      (ADJP (JJ fair)
        (S
          (VP (TO to)
            (VP (VB say)
              (PP (IN for)
                (NP (DT the) (NN school-master)))
              (SBAR (IN that) (, ,)
                (S
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP he))
                      (VP (VBD found)
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD had)
                              (VP (VBN mistaken))))))))
                  (, ,)
                  (NP (PRP he))
                  (VP (VBD tried)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (PRT (RP up))
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NN boy))
                              (PP (IN for)
                                (NP
                                  (NP (PRP it))
                                  (PRN (: --)
                                    (PP (RB not) (IN by)
                                      (S
                                        (VP (VBG confessing)
                                          (S
                                            (NP (PRP himself))
                                            (ADJP (JJ wrong))))))
                                    (: --))
                                  (SBAR
                                    (WHNP (WP who))
                                    (S
                                      (VP (MD could)
                                        (VP (VB expect)
                                          (NP
                                            (NP (DT that))
                                            (PP (IN of)
                                              (NP (RB only) (DT a) (NN school-master)))))))))))))))))))))))
    (. ?)))

nsubj(fair-4, It-1)
nsubj(say-6, It-1)
cop(fair-4, is-2)
advmod(fair-4, but-3)
root(ROOT-0, fair-4)
aux(say-6, to-5)
xcomp(fair-4, say-6)
det(school-master-9, the-8)
prep_for(say-6, school-master-9)
mark(tried-20, that-10)
advmod(found-14, when-12)
nsubj(found-14, he-13)
advcl(tried-20, found-14)
nsubj(mistaken-17, he-15)
aux(mistaken-17, had-16)
ccomp(found-14, mistaken-17)
nsubj(tried-20, he-19)
nsubj(make-22, he-19)
ccomp(say-6, tried-20)
aux(make-22, to-21)
xcomp(tried-20, make-22)
prt(make-22, up-23)
det(boy-26, the-25)
prep_to(make-22, boy-26)
prep_for(boy-26, it-28)
nsubj(expect-38, it-28)
neg(it-28, not-30)
prepc_by(it-28, confessing-32)
nsubj(wrong-34, himself-33)
xcomp(confessing-32, wrong-34)
aux(expect-38, could-37)
rcmod(it-28, expect-38)
dobj(expect-38, that-39)
advmod(school-master-43, only-41)
det(school-master-43, a-42)
prep_of(that-39, school-master-43)

(ROOT
  (NP (: --)
    (NP (IN but))
    (PP (IN by)
      (S
        (VP (VBG being)
          (ADJP
            (ADJP (JJR kinder)
              (PP (TO to)
                (NP (PRP him))))
            (PP (IN than)
              (ADVP (RB before)))))))
    (. .)))

root(ROOT-0, but-2)
cop(kinder-5, being-4)
prepc_by(but-2, kinder-5)
prep_to(kinder-5, him-7)
prep(kinder-5, than-8)
pcomp(than-8, before-9)

(ROOT
  (S
    (PP (IN Through)
      (NP (DT this)))
    (NP (PRP he))
    (VP
      (VP (VBD came)
        (S
          (VP (TO to)
            (VP (VB like)
              (NP (PRP him))))))
      (, ,)
      (CC and)
      (VP (MD would)
        (VP (VB teach)
          (NP (PRP him))
          (NP
            (NP (NNS things))
            (PP (RB out) (IN of)
              (NP (DT the) (JJ usual) (NN way))))))
      (: --)
      (PP (JJ such) (IN as)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB make)
                (NP
                  (NP (JJ different) (NNS kinds))
                  (PP (IN of)
                    (NP (NN verse))))))))))
    (. .)))

prep_through(came-4, this-2)
nsubj(came-4, he-3)
nsubj(like-6, he-3)
nsubj(teach-11, he-3)
root(ROOT-0, came-4)
aux(like-6, to-5)
xcomp(came-4, like-6)
dobj(like-6, him-7)
aux(teach-11, would-10)
conj_and(came-4, teach-11)
iobj(teach-11, him-12)
dobj(teach-11, things-13)
det(way-18, the-16)
amod(way-18, usual-17)
prep_out_of(things-13, way-18)
conj_and(came-4, as-21)
advmod(make-24, how-22)
aux(make-24, to-23)
prepc_such_as(came-4, make-24)
amod(kinds-26, different-25)
dobj(make-24, kinds-26)
prep_of(kinds-26, verse-28)

(ROOT
  (SINV
    (PP (IN By)
      (CC and)
      (IN by)
      (NP
        (NP (NNP Andrew))
        (CC and)
        (NP (NNP Sandy))))
    (VP (VBD had))
    (NP (DT a) (NN quarrel))
    (. .)))

prep_by(had-7, Andrew-4)
prep_by(had-7', Andrew-4)
conj_and(Andrew-4, Sandy-6)
prep_by(had-7, Sandy-6)
root(ROOT-0, had-7)
conj_and(had-7, had-7')
det(quarrel-9, a-8)
nsubj(had-7, quarrel-9)
nsubj(had-7', quarrel-9)

(ROOT
  (S
    (ADVP (RB Suddenly))
    (NP (NNP Andrew))
    (VP
      (VP (VBD came)
        (PP (TO to)
          (NP (PRP himself))))
      (, ,)
      (CC and)
      (VP (VBD cried))
      (: :) (`` ``)
      (VP (VBZ Sandy)))
    (. !)))

advmod(came-3, Suddenly-1)
nsubj(came-3, Andrew-2)
nsubj(cried-8, Andrew-2)
nsubj(Sandy-11, Andrew-2)
root(ROOT-0, came-3)
prep_to(came-3, himself-5)
conj_and(came-3, cried-8)
conj_and(came-3, Sandy-11)

(ROOT
  (INTJ (UH Sandy) (. !)))

root(ROOT-0, Sandy-1)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ says)
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP 're)
            (S
              (VP (TO to)
                (VP (VB agree))))))))
    (. !) ('' '')))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
nsubj('re-4, we-3)
nsubj(agree-6, we-3)
ccomp(says-2, 're-4)
aux(agree-6, to-5)
xcomp('re-4, agree-6)

(ROOT
  (S (`` ``)
    (VP (VB Does)
      (NP (PRP He)))
    (. ?) ('' '')))

root(ROOT-0, Does-2)
dobj(Does-2, He-3)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP He))
      (VP (VBZ says)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP 're)
              (S
                (VP (TO to)
                  (VP (VB love)
                    (NP (CD one) (DT another))))))))))
    (, ,)
    (CC and)
    (S
      (NP (VBP we) (NN canna))
      (VP (VBP do)
        (SBAR (IN that) (IN if)
          (S
            (NP (VBP we) (NN dinna))
            (VP (VBP agree))))))
    (. !) ('' '')))

nsubj(says-3, He-2)
root(ROOT-0, says-3)
nsubj('re-5, we-4)
nsubj(love-7, we-4)
ccomp(says-3, 're-5)
aux(love-7, to-6)
xcomp('re-5, love-7)
dobj(love-7, one-8)
dep(one-8, another-9)
dep(canna-13, we-12)
nsubj(do-14, canna-13)
conj_and(says-3, do-14)
mark(agree-19, that-15)
mark(agree-19, if-16)
dep(dinna-18, we-17)
nsubj(agree-19, dinna-18)
advcl(do-14, agree-19)
ccomp(do-14, agree-19)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD came)
      (NP (DT a) (NN pause)))
    (. .)))

expl(came-2, There-1)
root(ROOT-0, came-2)
det(pause-4, a-3)
dobj(came-2, pause-4)
nsubj(came-2, pause-4)

(ROOT
  (S (`` ``)
    (ADVP (RB Perhaps))
    (PP (IN after)
      (NP (DT all)))
    (NP (PRP you))
    (VP (VBD were)
      (PP (IN in)
        (NP
          (NP (DT the) (NN right))
          (, ,)
          (NP (NNP Sandy)))))
    (. !) ('' '')))

advmod(were-6, Perhaps-2)
prep_after(were-6, all-4)
nsubj(were-6, you-5)
root(ROOT-0, were-6)
det(right-9, the-8)
prep_in(were-6, right-9)
appos(right-9, Sandy-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (ADVP (RB just))
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB say)
                (NP (DT that))))))))
    (: ;)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBP think)
            (PP (IN about)
              (NP (PRP it))))))
      (, ,)
      (ADVP (RB perhaps))
      (NP (PRP I))
      (VP (VBD was) (RB n't)
        (ADJP (RB so) (JJ much)
          (PP (IN in)
            (NP (DT the) (NN right))))
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBD thought)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD was)))))))))
    (. !) ('' '')))

nsubj(going-5, I-2)
nsubj(say-7, I-2)
aux(going-5, was-3)
advmod(going-5, just-4)
root(ROOT-0, going-5)
aux(say-7, to-6)
xcomp(going-5, say-7)
dobj(say-7, that-8)
advmod(think-12, when-10)
nsubj(think-12, I-11)
advcl(much-21, think-12)
prep_about(think-12, it-14)
advmod(I-17, perhaps-16)
nsubj(much-21, I-17)
cop(much-21, was-18)
neg(much-21, n't-19)
advmod(much-21, so-20)
parataxis(going-5, much-21)
det(right-24, the-23)
prep_in(much-21, right-24)
mark(thought-27, as-25)
nsubj(thought-27, I-26)
advcl(much-21, thought-27)
nsubj(was-29, I-28)
ccomp(thought-27, was-29)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD ca) (RB n't)
      (VP (VB matter)
        (NP
          (NP (RB much))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN right))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP we))
                        (VP (VBD were)
                          (PP (DT both) (IN in)
                            (NP (DT the) (JJ wrong))))))))))))))
    (. !) ('' '')))

nsubj(matter-5, It-2)
aux(matter-5, ca-3)
neg(matter-5, n't-4)
root(ROOT-0, matter-5)
dobj(matter-5, much-6)
nsubj(was-8, much-6)
rcmod(much-6, was-8)
det(right-11, the-10)
prep_in(was-8, right-11)
advmod(were-15, when-13)
nsubj(were-15, we-14)
rcmod(right-11, were-15)
dep(were-15, both-16)
det(wrong-19, the-18)
prep_in(were-15, wrong-19)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Let) (POS 's))
      (VP (VBP ask)
        (S
          (NP (PRP Him))
          (VP (TO to)
            (VP (VB keep)
              (NP (PRP us))
              (PP (IN from)
                (NP
                  (NP (NN caring))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (PP (IN in)
                          (NP (DT the) (NN right)))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VB make)
          (S
            (NP (PRP us))
            (DT both)
            (VP (VB try)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (PP (IN in)
                      (NP (DT the) (NN right))))))))))
      (NP (PRP We))
      (VP (VBP do) (RB n't)
        (ADVP (RB often))
        (VP (VB differ)
          (PP (IN about)
            (NP
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP we))
                  (VP (VBP are)
                    (S
                      (VP (TO to)
                        (VP (VB ask)
                          (PP (IN for))))))))
              (, ,)
              (NP (NNP Sandy)))))))
    (. !) ('' '')))

nsubj(ask-4, Let-2)
possessive(Let-2, 's-3)
root(ROOT-0, ask-4)
dobj(ask-4, Him-5)
nsubj(keep-7, Him-5)
aux(keep-7, to-6)
xcomp(ask-4, keep-7)
dobj(keep-7, us-8)
prep_from(keep-7, caring-10)
nsubj(is-12, caring-10)
rcmod(caring-10, is-12)
det(right-15, the-14)
prep_in(is-12, right-15)
dep(differ-31, make-18)
nsubj(try-21, us-19)
nsubj(be-23, us-19)
dep(try-21, both-20)
ccomp(make-18, try-21)
aux(be-23, to-22)
xcomp(try-21, be-23)
det(right-26, the-25)
prep_in(be-23, right-26)
nsubj(differ-31, We-27)
aux(differ-31, do-28)
neg(differ-31, n't-29)
advmod(differ-31, often-30)
conj_and(ask-4, differ-31)
dobj(are-35, what-33)
nsubj(ask-37, what-33)
nsubj(are-35, we-34)
dep(Sandy-40, are-35)
aux(ask-37, to-36)
xcomp(are-35, ask-37)
prep(ask-37, for-38)
prep_about(differ-31, Sandy-40)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (PRP we))
    (VP (VBP do) (RB n't))
    (. .) ('' '')))

discourse(do-5, No-2)
nsubj(do-5, we-4)
root(ROOT-0, do-5)
neg(do-5, n't-6)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB take)
            (NP
              (NP (NN care))
              (PP (IN of)
                (NP
                  (NP (PRP you))
                  (, ,)
                  (NP (NNP Sandy)))))))))
    (. !) ('' '')))

nsubj('s-3, It-2)
root(ROOT-0, 's-3)
dobj('s-3, me-4)
nsubj(take-6, me-4)
aux(take-6, to-5)
xcomp('s-3, take-6)
dobj(take-6, care-7)
prep_of(care-7, you-9)
appos(you-9, Sandy-11)

(ROOT
  (S (`` ``)
    (CC And)
    (S
      (NP (PRP me))
      (VP (TO to)
        (VP (VB take)
          (NP
            (NP (NN care))
            (PP (IN of)
              (NP
                (NP (PRP you))
                (, ,)
                (NP (NNP Andrew))))))))
    (. !) ('' '')))

cc(take-5, And-2)
nsubj(take-5, me-3)
aux(take-5, to-4)
root(ROOT-0, take-5)
dobj(take-5, care-6)
prep_of(care-6, you-8)
appos(you-8, Andrew-10)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN nucleus))
        (PP (IN of)
          (NP (DT a) (NN church)))))
    (. !)))

nsubj(nucleus-4, Here-1)
cop(nucleus-4, was-2)
det(nucleus-4, the-3)
root(ROOT-0, nucleus-4)
det(church-7, a-6)
prep_of(nucleus-4, church-7)

(ROOT
  (NP (: --)
    (NP
      (NP (CD two) (NNS stones))
      (VP (VBN laid)
        (PP (IN on)
          (NP (DT the) (NN foundation-stone)))))
    (. .)))

num(stones-3, two-2)
root(ROOT-0, stones-3)
vmod(stones-3, laid-4)
det(foundation-stone-7, the-6)
prep_on(laid-4, foundation-stone-7)

(ROOT
  (FRAG (`` ``)
    (NP (NN Luik) (RB here))
    (, ,)
    (NP (NNP Sandy))
    (. !) ('' '')))

root(ROOT-0, Luik-2)
advmod(Luik-2, here-3)
dep(Luik-2, Sandy-5)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (NNP Andrew))))
    (: ;) (`` ``)
    (S
      (S
        (NP (PRP we))
        (VP (VBP maun)
          (NP (NN hae) (NN anither))))
      (, ,)
      (NP (DT an))
      ('' ')
      (VP (VBP syne)
        (SBAR
          (S
            (NP (EX there))
            (VP (MD 'll)
              (VP (VB be)
                (NP
                  (NP (CD four) (NN o) (POS '))
                  (NNS 's))))))))
    (. !) ('' '')))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)
nsubj(maun-6, we-5)
ccomp(syne-12, maun-6)
nn(anither-8, hae-7)
dobj(maun-6, anither-8)
nsubj(syne-12, an-10)
parataxis(said-1, syne-12)
expl('s-19, there-13)
aux('s-19, 'll-14)
cop('s-19, be-15)
num(o-17, four-16)
poss('s-19, o-17)
ccomp(syne-12, 's-19)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBZ 's)
      (NP (DT that)))
    (. ?) ('' '')))

advmod('s-3, How-2)
root(ROOT-0, 's-3)
nsubj('s-3, that-4)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Sandy)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Sandy-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD won)
      (ADJP (`` `) (JJ er) (`` `)
        (SBAR
          (X (IN at))
          (S
            (NP (PRP we))
            (ADVP (RB never))
            (VP (VBD noticed)
              (S
                (NP (PRP it))
                (ADJP (JJ afore))))))))
    (. !)))

nsubj(won-3, I-2)
root(ROOT-0, won-3)
acomp(won-3, er-5)
dep(noticed-10, at-7)
nsubj(noticed-10, we-8)
neg(noticed-10, never-9)
ccomp(er-5, noticed-10)
nsubj(afore-12, it-11)
xcomp(noticed-10, afore-12)

(ROOT
  (S
    (S
      (NP (RB Here))
      (VP (VBZ 's)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP He))
            (VP (VBZ says))))))
    (: :) (`` `)
    (S
      (PP (IN For)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (CD two)
              (CC or)
              (CD three))
            (VP (VBP are)
              (VP (VBN gathered)
                (ADVP (RB together))
                (PP (IN in)
                  (NP (PRP$ My) (NN name))))))))
      (, ,)
      (NP (EX there))
      (VP (VBP am)
        (NP (PRP I))
        (PP (IN in)
          (NP
            (NP (DT the) (NN midst))
            (PP (IN of)
              (NP (PRP them)))))))
    (. .) ('' ')))

nsubj('s-2, Here-1)
root(ROOT-0, 's-2)
dobj(says-5, what-3)
nsubj(says-5, He-4)
ccomp('s-2, says-5)
dep(am-21, For-8)
advmod(gathered-14, where-9)
nsubjpass(gathered-14, two-10)
conj_or(two-10, three-12)
nsubjpass(gathered-14, three-12)
auxpass(gathered-14, are-13)
pcomp(For-8, gathered-14)
advmod(gathered-14, together-15)
poss(name-18, My-17)
prep_in(gathered-14, name-18)
expl(am-21, there-20)
parataxis('s-2, am-21)
nsubj(am-21, I-22)
det(midst-25, the-24)
prep_in(am-21, midst-25)
prep_of(midst-25, them-27)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT that) (NN way))
        (, ,)
        (NP
          (NP (NN wharever))
          (SBAR
            (S
              (NP (PRP He))
              (VP (VBP micht)
                (VP (VB be)
                  (NP
                    (NP (NN walkin) (POS '))
                    (NN aboot)))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD could)
      (ADVP (RB aye))
      (VP (VB get)
        (NP (PRP Him))))
    (. !)))

det(way-3, that-2)
prep_in(get-16, way-3)
appos(way-3, wharever-5)
nsubj(micht-7, He-6)
rcmod(wharever-5, micht-7)
cop(aboot-11, be-8)
poss(aboot-11, walkin-9)
xcomp(micht-7, aboot-11)
nsubj(get-16, we-13)
aux(get-16, could-14)
advmod(get-16, aye-15)
root(ROOT-0, get-16)
dobj(get-16, Him-17)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBZ likes)
          (NP (NN twa)))
        (, ,)
        (NP
          (NP (DT an))
          ('' ')
          (SBAR
            (S
              (NP (PRP$ His) (NN Father))
              (`` `)
              (ADVP (RB ill))
              (VP (VBP hear)
                (NP (DT the) (`` `) (NN greed) (NN prayer))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP He))
      (VP (VBZ likes)
        (NP
          (NP (CD three) (JJR better))
          (: --)
          (NP (DT an))
          ('' ')
          (NP
            (NP (DT that) (NN stan) (POS 's))
            (PP (TO to)
              (NP (NN rizzon))))
          (, ,))
        (PP (IN for)
          (NP (CD three) (NN maun)))
        (VP (VB be)
          (NP (JJR better) (NN 'n) (NN twa)))))
    (. !)))

nsubj(likes-2, He-1)
root(ROOT-0, likes-2)
dobj(likes-2, twa-3)
dobj(likes-2, an-5)
poss(Father-8, His-7)
nsubj(hear-11, Father-8)
advmod(hear-11, ill-10)
rcmod(an-5, hear-11)
det(prayer-15, the-12)
nn(prayer-15, greed-14)
dobj(hear-11, prayer-15)
nsubj(likes-19, He-18)
conj_but(likes-2, likes-19)
num(better-21, three-20)
dobj(likes-19, better-21)
dep(better-21, an-23)
det(stan-26, that-25)
dep(better-21, stan-26)
possessive(stan-26, 's-27)
prep_to(stan-26, rizzon-29)
num(maun-33, three-32)
prep_for(likes-19, maun-33)
cop(twa-37, be-34)
amod(twa-37, better-35)
nn(twa-37, 'n-36)
dep(likes-19, twa-37)

(ROOT
  (S
    (S
      (NP (NNP First) (NN ane) (NN maun))
      (VP (VBP lo'e)
        (NP (PRP Him))))
    (: ;)
    (S
      (NP
        (NP (DT an))
        ('' ') (NN syne) (NN twa))
      (VP (MD can)
        (VP (VB lo'e)
          (NP (PRP Him))
          (ADVP (RBR better))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (NN ilk) (NN ane))
              (VP (VBZ is)
                (ADJP (JJ helpit))
                (PP (IN by)
                  (NP (DT the) (NN ither)))
                (, ,)
                (NP (DT an)
                  (S
                    (NP (POS '))
                    (VP (VBZ lo'es)
                      (S
                        (NP (PRP Him))
                        (NP (DT the) (NN mair)))
                      (SBAR (IN that)
                        (S
                          (NP (PRP He))
                          (VP (VBZ lo'es)
                            (NP (DT the) (NN ither) (NN ane))))))))))))))
    (. !)))

nn(maun-3, First-1)
nn(maun-3, ane-2)
nsubj(lo'e-4, maun-3)
root(ROOT-0, lo'e-4)
dobj(lo'e-4, Him-5)
nn(twa-10, an-7)
nn(twa-10, syne-9)
nsubj(lo'e-12, twa-10)
aux(lo'e-12, can-11)
parataxis(lo'e-4, lo'e-12)
dobj(lo'e-12, Him-13)
advmod(lo'e-12, better-14)
mark(helpit-20, because-16)
nn(ane-18, ilk-17)
nsubj(helpit-20, ane-18)
cop(helpit-20, is-19)
advcl(lo'e-12, helpit-20)
det(ither-23, the-22)
prep_by(helpit-20, ither-23)
dep(helpit-20, an-25)
dep(an-25, lo'es-27)
nsubj(mair-30, Him-28)
det(mair-30, the-29)
xcomp(lo'es-27, mair-30)
mark(lo'es-33, that-31)
nsubj(lo'es-33, He-32)
ccomp(lo'es-27, lo'es-33)
det(ane-36, the-34)
nn(ane-36, ither-35)
dobj(lo'es-33, ane-36)

(ROOT
  (S
    (S
      (NP
        (NP (NNP An) (POS '))
        (NN syne))
      (VP (VBZ comes)
        (NP (DT the) (JJ third))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP
            (NP (NN mair))
            (, an) ('' ')
            (NP
              (NP (NN mair))
              (NP
                (NP (NN throwin) (POS '))
                (NN o) ('' ') (NNS lichts))))))
      (, ,)
      (CC and)
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP
            (NP (DT the) (NNP Lord) (NN himsel))
            ('' ')
            (VP (VBG i) ('' ')
              (NP (DT the) (NNS mids) (POS ') (NN o))
              ('' ')
              (NP (PRP them)))))))
    (. !)))

poss(syne-3, An-1)
nsubj(comes-4, syne-3)
root(ROOT-0, comes-4)
det(third-6, the-5)
dobj(comes-4, third-6)
expl('s-10, there-9)
conj_and(comes-4, 's-10)
nsubj('s-10, mair-11)
punct(mair-11, an-12)
dep(mair-11, mair-14)
poss(lichts-19, throwin-15)
nn(lichts-19, o-17)
dep(mair-14, lichts-19)
expl('s-23, there-22)
conj_and(comes-4, 's-23)
conj_and('s-10, 's-23)
det(himsel-26, the-24)
nn(himsel-26, Lord-25)
nsubj('s-23, himsel-26)
vmod(himsel-26, i-28)
det(o-33, the-30)
poss(o-33, mids-31)
dobj(i-28, o-33)
dobj(i-28, them-35)

(ROOT
  (S
    (NP (NNP Three))
    (VP (VBZ maks)
      (NP (DT a) (JJR better) (NNS mids) ('' '))
      (PP (IN than)
        (NP (NN twa))))
    (. !) ('' '')))

nsubj(maks-2, Three-1)
root(ROOT-0, maks-2)
det(mids-5, a-3)
amod(mids-5, better-4)
dobj(maks-2, mids-5)
prep_than(maks-2, twa-8)

(ROOT
  (S
    (S
      (NP (NNP Sandy))
      (VP (MD could) (RB not)
        (VP (VB follow)
          (ADVP
            (NP (DT the) (NN reasoning))
            (RB quite)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (NP
          (NP (PRP$ his) (JJ own) (NN way))
          (PP (IN of)
            (NP (NN understanding))))))
    (. .)))

nsubj(follow-4, Sandy-1)
aux(follow-4, could-2)
neg(follow-4, not-3)
root(ROOT-0, follow-4)
det(reasoning-6, the-5)
npadvmod(quite-7, reasoning-6)
advmod(follow-4, quite-7)
nsubj(had-11, he-10)
conj_but(follow-4, had-11)
poss(way-14, his-12)
amod(way-14, own-13)
dobj(had-11, way-14)
prep_of(way-14, understanding-16)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ jist)
        (PP (IN like)
          (NP
            (NP (DT the) (NN story))
            (VP (VBN o) ('' ')
              (NP (NNP Shadrach) (, ,) (NNP Meshach) (, ,)
                (CC and)
                (NNP Abednego)))))))
    (. !) ('' '')))

nsubj(jist-4, It-2)
cop(jist-4, 's-3)
root(ROOT-0, jist-4)
det(story-7, the-6)
prep_like(jist-4, story-7)
vmod(story-7, o-8)
dobj(o-8, Shadrach-10)
dobj(o-8, Meshach-12)
conj_and(Shadrach-10, Meshach-12)
dobj(o-8, Abednego-15)
conj_and(Shadrach-10, Abednego-15)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP
          (NP (CD three))
          (VP (VBN o) ('' ')
            (NP (PRP them))
            (, ,)))
        (, an) ('' ')
        (NP
          (NP (NN sae))
          (SBAR
            (S
              (NP (PRP He))
              (VP (VBD made)
                (NP (CD four))))))))
    (. !)))

expl(was-3, There-2)
root(ROOT-0, was-3)
nsubj(was-3, three-4)
vmod(three-4, o-5)
dobj(o-5, them-7)
punct(three-4, an-9)
dep(three-4, sae-11)
nsubj(made-13, He-12)
rcmod(sae-11, made-13)
dobj(made-13, four-14)

(ROOT
  (S
    (ADVP (RB Eh))
    (, ,)
    (NP (NN jist))
    (VP (VBP think)
      (NP
        (NP
          (NP (NNP o) (POS '))
          (JJ Him)
          (NP (NN bein) (POS '))
          (NN wi) ('' '))
        (SBAR
          (S
            (VP (VBZ 's)
              (NP (PRP$ His) (NN verra) (NN sel) ('' ')))))))
    (. !) ('' '')))

advmod(think-4, Eh-1)
nsubj(think-4, jist-3)
root(ROOT-0, think-4)
poss(wi-10, o-5)
amod(wi-10, Him-7)
poss(wi-10, bein-8)
dobj(think-4, wi-10)
cop(sel-15, 's-12)
poss(sel-15, His-13)
nn(sel-15, verra-14)
rcmod(wi-10, sel-15)

(ROOT
  (S
    (S
      (NP (RB Here))
      (ADVP (RB now))
      (VP (VBD was)
        (NP (DT a) (NN church))
        (ADVP (RB indeed))))
    (: :)
    (S
      (NP
        (NP (DT the) (NN idea))
        (PP (IN of)
          (NP (DT a) (JJ third))))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJ very) (NN principle))
          (PP (IN of)
            (NP (NN growth))))))
    (. !)))

nsubj(church-5, Here-1)
advmod(church-5, now-2)
cop(church-5, was-3)
det(church-5, a-4)
root(ROOT-0, church-5)
advmod(church-5, indeed-6)
det(idea-9, the-8)
nsubj(principle-16, idea-9)
det(third-12, a-11)
prep_of(idea-9, third-12)
cop(principle-16, was-13)
det(principle-16, the-14)
amod(principle-16, very-15)
parataxis(church-5, principle-16)
prep_of(principle-16, growth-18)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD would)
        (VP
          (VP (VB meet)
            (ADVP (RB together)))
          (CC and)
          (VP (VB say) (: :) (`` ``)
            (INTJ (UH Oh)))
          (, ,)
          (NP
            (NP (NNP Father))
            (PP (IN of)
              (NP (NNP Jesus) (NNP Christ)))))
        (, ,)
        (VP (VB help)
          (S
            (NP (PRP us))
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ good)
                  (PP (IN like)
                    (NP (NNP Jesus))))))))))
    (: ;) ('' '')
    (S
      (FRAG (CC and)
        (RB then)
        (NP (NNP Jesus)))
      (NP (PRP himself))
      (VP (MD would)
        (VP
          (VP (VB make)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (PRP them)))))
          (, ,)
          (CC and)
          (VP (VB worship)
            (NP (DT the) (NN Father))
            (PP (IN with)
              (NP (PRP them)))))))
    (. !)))

nsubj(meet-3, They-1)
nsubj(say-6, They-1)
aux(meet-3, would-2)
root(ROOT-0, meet-3)
advmod(meet-3, together-4)
conj_and(meet-3, say-6)
discourse(say-6, Oh-9)
dobj(meet-3, Father-11)
nn(Christ-14, Jesus-13)
prep_of(Father-11, Christ-14)
dep(meet-3, help-16)
dobj(help-16, us-17)
nsubj(good-20, us-17)
aux(good-20, to-18)
cop(good-20, be-19)
xcomp(help-16, good-20)
prep_like(good-20, Jesus-22)
cc(then-26, and-25)
dep(make-30, then-26)
dep(then-26, Jesus-27)
nsubj(make-30, himself-28)
nsubj(worship-36, himself-28)
aux(make-30, would-29)
parataxis(meet-3, make-30)
dobj(make-30, one-31)
prep_of(one-31, them-33)
parataxis(meet-3, worship-36)
conj_and(make-30, worship-36)
det(Father-38, the-37)
dobj(worship-36, Father-38)
prep_with(worship-36, them-40)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ next) (NN thing))
      (, ,)
      (PP (IN as)
        (NP
          (NP (DT a) (NN matter))
          (PP (IN of)
            (NP (NN course)))))
      (, ,))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP (VB look)
            (PRT (RP about))
            (PP (IN for)
              (NP (DT a) (JJ third)))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, next-2)
nsubj(was-11, thing-3)
nsubj(look-13, thing-3)
det(matter-7, a-6)
prep_as(thing-3, matter-7)
prep_of(matter-7, course-9)
root(ROOT-0, was-11)
aux(look-13, to-12)
xcomp(was-11, look-13)
prt(look-13, about-14)
det(third-17, a-16)
prep_for(look-13, third-17)

(ROOT
  (S (`` ``)
    (VP (VB Dawtie))
    (. !) ('' '')))

root(ROOT-0, Dawtie-2)

(ROOT
  (S
    (VP (VBN cried)
      (PP (DT both) (IN at)
        (NP (RB once))))
    (. .)))

root(ROOT-0, cried-1)
dep(at-3, both-2)
prep(cried-1, at-3)
pobj(at-3, once-4)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN child))
        (PP (IN of)
          (NP
            (NP (DT a) (NN cotter) (NN pair))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (VBD had)
                    (NP
                      (NP (DT an) (NN acre))
                      (CC or)
                      (NP
                        (NP (CD two))
                        (PP (IN of)
                          (NP
                            (NP (PRP$ their) (NN father) (POS 's))
                            (NN farm))))))
                  (, ,)
                  (CC and)
                  (VP (VBD helped)
                    (NP (PRP him))
                    (PP (IN with)
                      (NP (PRP it)))))))))))
    (. .)))

nsubj(child-4, Dawtie-1)
cop(child-4, was-2)
det(child-4, the-3)
root(ROOT-0, child-4)
det(pair-8, a-6)
nn(pair-8, cotter-7)
prep_of(child-4, pair-8)
nsubj(had-11, pair-8)
nsubj(helped-23, pair-8)
rcmod(pair-8, had-11)
det(acre-13, an-12)
dobj(had-11, acre-13)
dobj(had-11, two-15)
conj_or(acre-13, two-15)
poss(father-18, their-17)
poss(farm-20, father-18)
prep_of(two-15, farm-20)
rcmod(pair-8, helped-23)
conj_and(had-11, helped-23)
dobj(helped-23, him-24)
prep_with(helped-23, it-26)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (JJ real) (NN name))
      (VP (VBZ has) (RB not)
        (VP (VBN reached)
          (NP (PRP me)))))
    (: ;)
    (S
      (NP (NNP _) (NNP Dawtie) (NNP _))
      (VP
        (VP (VBZ means)
          (NP (JJ _) (NN darling) (NNS _)))
        (, ,)
        (CC and)
        (VP (VBZ is)
          (NP
            (NP (DT a) (JJ common) (NN term))
            (PP (IN of)
              (NP (NN endearment)))))
        (: --)
        (VP (VBN derived)
          (PRN (, ,)
            (S
              (NP (NNP Jamieson))
              (VP (VBZ suggests)))
            (, ,))
          (PP (IN from)
            (NP (DT the) (JJ Gaelic) (JJ _) (NN dalt) (NN _)))
          (, ,)
          (S
            (VP (VBG signifying))))
        (S
          (VP (VBG _)
            (NP (DT a) (JJ foster-child) (NN _))))))
    (. .)))

poss(name-3, Her-1)
amod(name-3, real-2)
nsubj(reached-6, name-3)
aux(reached-6, has-4)
neg(reached-6, not-5)
root(ROOT-0, reached-6)
dobj(reached-6, me-7)
nn(_-11, _-9)
nn(_-11, Dawtie-10)
nsubj(means-12, _-11)
nsubj(derived-25, _-11)
parataxis(reached-6, means-12)
amod(_-15, _-13)
nn(_-15, darling-14)
dobj(means-12, _-15)
cop(term-21, is-18)
det(term-21, a-19)
amod(term-21, common-20)
parataxis(reached-6, term-21)
conj_and(means-12, term-21)
prep_of(term-21, endearment-23)
parataxis(reached-6, derived-25)
conj_and(means-12, derived-25)
nsubj(suggests-28, Jamieson-27)
parataxis(derived-25, suggests-28)
det(_-35, the-31)
amod(_-35, Gaelic-32)
amod(_-35, _-33)
nn(_-35, dalt-34)
prep_from(derived-25, _-35)
xcomp(derived-25, signifying-37)
dep(means-12, _-38)
det(_-41, a-39)
amod(_-41, foster-child-40)
dobj(_-38, _-41)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD was)
      (UCP
        (NP (DT a) (JJ dark-haired) (, ,) (JJ laughing) (JJ little) (NN darling))
        (, ,)
        (X
          (PP (IN with)
            (NP
              (NP
                (ADJP (JJ shy) (, ,) (JJ merry))
                (NNS manners))
              (, ,)
              (CC and)
              (NP
                (NP (DT the) (JJ whitest) (NNS teeth))
                (, ,)
                (NP
                  (NP (JJ full))
                  (PP (IN of)
                    (NP (NN fun))))))))
        (, ,)
        (CC but)
        (VP (VBN solemn)
          (PP (IN in)
            (NP (DT an) (NN instant))))))
    (. .)))

nsubj(darling-8, Dawtie-1)
nsubj(solemn-26, Dawtie-1)
cop(darling-8, was-2)
det(darling-8, a-3)
amod(darling-8, dark-haired-4)
amod(darling-8, laughing-6)
amod(darling-8, little-7)
root(ROOT-0, darling-8)
dep(darling-8, with-10)
amod(merry-13, shy-11)
amod(manners-14, merry-13)
pobj(with-10, manners-14)
det(teeth-19, the-17)
amod(teeth-19, whitest-18)
pobj(with-10, teeth-19)
conj_and(manners-14, teeth-19)
appos(teeth-19, full-21)
prep_of(full-21, fun-23)
conj_but(darling-8, solemn-26)
vmod(darling-8, solemn-26)
det(instant-29, an-28)
prep_in(solemn-26, instant-29)

(ROOT
  (S
    (NP (PRP$ Her) (JJ small) (NNS feet))
    (VP (VBD were)
      (ADJP
        (ADJP
          (ADJP (JJ bare)
            (CC and)
            (JJ black))
          (PRN (: --)
            (PP (IN except)
              (PP (IN on)
                (NP (NNP Saturday) (NNP nights)
                  (CC and)
                  (NNP Sunday) (NNS mornings))))
            (: --)))
        (CC but)
        (ADJP (JJ full)
          (PP (IN of)
            (NP (NN expression))))
        (, ,)
        (CC and)
        (ADJP
          (ADVP (RB perhaps))
          (RB really) (JJR cleaner)))
      (, ,)
      (PP (IN from)
        (NP
          (NP (PRP$ their) (NN familiarity))
          (PP (IN with)
            (NP (DT the) (JJ sweet) (JJ all-cleansing) (NN air)))
          (, ,)
          (ADVP (IN than))
          (PP (JJ such) (IN as)
            (NP
              (VP (VB hide)
                (NP (DT the) (JJ day-long))
                (PP (IN in)
                  (NP (NNS socks)
                    (CC and)
                    (NNS shoes)))))))))
    (. .)))

poss(feet-3, Her-1)
amod(feet-3, small-2)
nsubj(bare-5, feet-3)
nsubj(black-7, feet-3)
nsubj(full-18, feet-3)
nsubj(cleaner-25, feet-3)
cop(bare-5, were-4)
root(ROOT-0, bare-5)
conj_and(bare-5, black-7)
dep(bare-5, except-9)
pcomp(except-9, on-10)
nn(nights-12, Saturday-11)
pobj(on-10, nights-12)
nn(mornings-15, Sunday-14)
pobj(on-10, mornings-15)
conj_and(nights-12, mornings-15)
conj_but(bare-5, full-18)
prep_of(full-18, expression-20)
advmod(cleaner-25, perhaps-23)
advmod(cleaner-25, really-24)
conj_and(bare-5, cleaner-25)
poss(familiarity-29, their-28)
prep_from(bare-5, familiarity-29)
det(air-34, the-31)
amod(air-34, sweet-32)
amod(air-34, all-cleansing-33)
prep_with(familiarity-29, air-34)
advmod(familiarity-29, than-36)
prep_such_as(familiarity-29, hide-39)
det(day-long-41, the-40)
dobj(hide-39, day-long-41)
prep_in(hide-39, socks-43)
prep_in(hide-39, shoes-45)
conj_and(socks-43, shoes-45)

(ROOT
  (S
    (NP
      (NP (NNP Dawtie) (POS 's))
      (NN specialty))
    (VP (VBD was)
      (NP
        (NP (NN love))
        (PP (IN of)
          (NP (DT the) (NNS creatures)))))
    (. .)))

poss(specialty-3, Dawtie-1)
nsubj(love-5, specialty-3)
cop(love-5, was-4)
root(ROOT-0, love-5)
det(creatures-8, the-7)
prep_of(love-5, creatures-8)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (NP (DT an) (JJ undoubting) (NN conviction))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT every) (NN one))
            (PP (IN of)
              (NP (PRP them)))
            (SBAR
              (WHPP (IN with)
                (WHNP (WDT which)))
              (S
                (NP (PRP she))
                (VP (VBD came)
                  (PP (IN in)
                    (NP (NN contact)))))))
          (VP
            (VP (VBD understood))
            (CC and)
            (VP (VBD loved)
              (NP (PRP her)))))))
    (. .)))

nsubj(had-2, She-1)
root(ROOT-0, had-2)
det(conviction-5, an-3)
amod(conviction-5, undoubting-4)
dobj(had-2, conviction-5)
mark(understood-17, that-6)
det(one-8, every-7)
prep_with(came-14, one-8)
nsubj(understood-17, one-8)
nsubj(loved-19, one-8)
prep_of(one-8, them-10)
nsubj(came-14, she-13)
rcmod(one-8, came-14)
prep_in(came-14, contact-16)
ccomp(had-2, understood-17)
ccomp(had-2, loved-19)
conj_and(understood-17, loved-19)
dobj(loved-19, her-20)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN champion))
        (PP (IN of)
          (NP (DT the) (NN oppressed))))
      (, ,)
      (PP (IN without)
        (S
          (VP (VBG knowing)
            (NP (PRP it))))))
    (. .)))

nsubj(champion-4, She-1)
cop(champion-4, was-2)
det(champion-4, the-3)
root(ROOT-0, champion-4)
det(oppressed-7, the-6)
prep_of(champion-4, oppressed-7)
prepc_without(champion-4, knowing-10)
dobj(knowing-10, it-11)

(ROOT
  (S
    (NP (DT Every) (JJ individual) (NN necessity))
    (VP
      (VP (VBD stood)
        (PP (IN on)
          (NP (PRP$ its) (JJ own) (NNS merits))))
      (, ,)
      (CC and)
      (VP (VBD came)
        (PP (TO to)
          (NP
            (NP (PRP$ her) (JJ fresh))
            (CC and)
            (NP (JJ sole)))))
      (, ,)
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN forgotten)
              (NP
                (NP (DT all))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD went)
                      (PP (IN before)
                        (NP (PRP it))))))))))))
    (. .)))

det(necessity-3, Every-1)
amod(necessity-3, individual-2)
nsubj(stood-4, necessity-3)
nsubj(came-11, necessity-3)
root(ROOT-0, stood-4)
poss(merits-8, its-6)
amod(merits-8, own-7)
prep_on(stood-4, merits-8)
conj_and(stood-4, came-11)
poss(fresh-14, her-13)
prep_to(came-11, fresh-14)
prep_to(came-11, sole-16)
conj_and(fresh-14, sole-16)
advmod(forgotten-22, as-18)
mark(forgotten-22, if-19)
nsubj(forgotten-22, she-20)
aux(forgotten-22, had-21)
advcl(stood-4, forgotten-22)
conj_and(stood-4, forgotten-22)
dobj(forgotten-22, all-23)
nsubj(went-25, all-23)
rcmod(all-23, went-25)
prep_before(went-25, it-27)

(ROOT
  (S
    (S
      (S
        (PP (IN Like)
          (NP (DT some) (NNS boys)))
        (NP (PRP she))
        (VP (VBD had)
          (NP
            (NP (PRP$ her) (NNS pockets))
            (CONJP (RB as) (RB well) (IN as))
            (NP (PRP$ her) (NNS hands)))
          (PP (IN at)
            (NP
              (NP (DT the) (NN service))
              (PP (IN of)
                (NP (JJ live) (NNS things)))))))
      (: ;)
      (CC but)
      (S
        (PP (IN unlike)
          (NP (DT any) (NN boy)))
        (, ,)
        (NP (PRP she))
        (VP (VBD had)
          (NP
            (PP (IN in)
              (NP (PRP$ her) (NN love)))
            (NP
              (NP (DT no) (NN admixture))
              (PP (IN of)
                (NP (JJ natural) (NN history))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD was) (RB not)
        (NP
          (NP
            (NP (NN interest))
            (PP (IN in)
              (NP
                (NP (NNS animals))
                (PP (IN with)
                  (NP (PRP her))))))
          (, ,)
          (CC but)
          (NP
            (NP (DT an) (JJ individual) (NN love))
            (PP (TO to)
              (NP
                (NP (DT the) (JJ individual) (NN animal))
                (, ,)
                (SBAR
                  (WHNP (WDT whatever))
                  (S
                    (NP (PRP it))
                    (VP (MD might)
                      (VP (VB be))))))))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD presented)
                (NP (PRP itself))
                (PP (TO to)
                  (NP (DT the) (NN love-power)))
                (PP (IN in)
                  (NP (PRP her)))))))))
    (. .)))

det(boys-3, some-2)
prep_like(had-5, boys-3)
nsubj(had-5, she-4)
root(ROOT-0, had-5)
poss(pockets-7, her-6)
dobj(had-5, pockets-7)
poss(hands-12, her-11)
dobj(had-5, hands-12)
conj_and(pockets-7, hands-12)
det(service-15, the-14)
prep_at(had-5, service-15)
amod(things-18, live-17)
prep_of(service-15, things-18)
det(boy-23, any-22)
prep_unlike(had-26, boy-23)
nsubj(had-26, she-25)
conj_but(had-5, had-26)
poss(love-29, her-28)
prep_in(admixture-31, love-29)
neg(admixture-31, no-30)
dobj(had-26, admixture-31)
amod(history-34, natural-33)
prep_of(admixture-31, history-34)
nsubj(interest-39, it-36)
cop(interest-39, was-37)
neg(interest-39, not-38)
parataxis(had-5, interest-39)
prep_in(interest-39, animals-41)
prep_with(animals-41, her-43)
det(love-48, an-46)
amod(love-48, individual-47)
parataxis(had-5, love-48)
conj_but(interest-39, love-48)
det(animal-52, the-50)
amod(animal-52, individual-51)
prep_to(love-48, animal-52)
dobj(be-57, whatever-54)
nsubj(be-57, it-55)
aux(be-57, might-56)
rcmod(animal-52, be-57)
nsubj(presented-60, that-59)
parataxis(had-5, presented-60)
conj_but(interest-39, presented-60)
dobj(presented-60, itself-61)
det(love-power-64, the-63)
prep_to(presented-60, love-power-64)
prep_in(presented-60, her-66)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD may)
      (VP (VB seem)
        (ADJP (JJ strange))
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (MD should)
              (VP (VB be)
                (NP (CD three) (JJ such) (NNS children))
                (ADVP (RB together))))))))
    (. .)))

nsubj(seem-3, It-1)
aux(seem-3, may-2)
root(ROOT-0, seem-3)
acomp(seem-3, strange-4)
mark(children-11, that-5)
expl(children-11, there-6)
aux(children-11, should-7)
cop(children-11, be-8)
num(children-11, three-9)
amod(children-11, such-10)
ccomp(seem-3, children-11)
advmod(children-11, together-12)

(ROOT
  (S (CC But)
    (NP (PRP$ their) (NNS fathers)
      (CC and)
      (NNS mothers))
    (VP (VBD had)
      (PP (IN for)
        (NP (NNS generations)))
      (VP (VBN been)
        (NP
          (NP (JJ poor))
          (: --)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (NP (DT a) (JJ great) (NN advantage))
                (, ,)
                (SBAR (IN as)
                  (S
                    (VP (MD may)
                      (VP (VB be)
                        (VP
                          (VP (VBN seen)
                            (PP (IN in)
                              (NP (DT the) (NN world)))
                            (PP (IN by)
                              (NP
                                (NP (PRP him))
                                (SBAR
                                  (WHNP (WP who))
                                  (S
                                    (VP (VBZ has)
                                      (NP (NNS eyes)
                                        (S
                                          (VP (TO to)
                                            (VP (VB see)))))))))))
                          (, ,)
                          (CC and)
                          (VP (VBN heard)
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NN parable))
                                (PP (IN of)
                                  (NP (DT the) (JJ rich) (NN man)))))
                            (PP (IN by)
                              (NP
                                (NP (PRP him))
                                (SBAR
                                  (WHNP (WP who))
                                  (S
                                    (VP (VBZ has)
                                      (NP (NNS ears)
                                        (S
                                          (VP (TO to)
                                            (VP (VB hear))))))))))))))))))))))
    (. .)))

cc(poor-10, But-1)
poss(fathers-3, their-2)
nsubj(poor-10, fathers-3)
conj_and(fathers-3, mothers-5)
nsubj(poor-10, mothers-5)
aux(poor-10, had-6)
prep_for(poor-10, generations-8)
cop(poor-10, been-9)
root(ROOT-0, poor-10)
nsubj(advantage-16, poor-10)
nsubjpass(seen-21, poor-10)
nsubjpass(heard-34, poor-10)
cop(advantage-16, was-13)
det(advantage-16, a-14)
amod(advantage-16, great-15)
rcmod(poor-10, advantage-16)
mark(seen-21, as-18)
aux(seen-21, may-19)
auxpass(seen-21, be-20)
advcl(advantage-16, seen-21)
det(world-24, the-23)
prep_in(seen-21, world-24)
agent(seen-21, him-26)
nsubj(has-28, him-26)
rcmod(him-26, has-28)
dobj(has-28, eyes-29)
aux(see-31, to-30)
vmod(eyes-29, see-31)
advcl(advantage-16, heard-34)
conj_and(seen-21, heard-34)
det(parable-37, the-36)
prep_in(heard-34, parable-37)
det(man-41, the-39)
amod(man-41, rich-40)
prep_of(parable-37, man-41)
prep_by(heard-34, him-43)
nsubj(has-45, him-43)
rcmod(him-43, has-45)
dobj(has-45, ears-46)
aux(hear-48, to-47)
vmod(ears-46, hear-48)

(ROOT
  (S
    (ADVP (RB Also))
    (NP (PRP they))
    (VP
      (VP (VBD were)
        (NP
          (NP (NNP God-fearing))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (NP (DT a)
                  (ADJP (RB far) (JJR greater))
                  (NN advantage)))))))
      (, ,)
      (CC and)
      (VP (VBD made)
        (S
          (NP (PRP them))
          (ADJP (JJ honorable))))
      (: ;)
      (SBAR (IN for)
        (S
          (NP (PRP they))
          (VP (MD would)
            (VP (VB have)
              (VP (VBN scorned)
                (NP (NNS things))
                (SBAR (IN that)
                  (S
                    (NP (JJS most) (NNS Christians))
                    (VP (MD will)
                      (VP (VB do)))))))))))
    (. .)))

advmod(God-fearing-4, Also-1)
nsubj(God-fearing-4, they-2)
nsubj(made-14, they-2)
cop(God-fearing-4, were-3)
root(ROOT-0, God-fearing-4)
nsubj(advantage-11, God-fearing-4)
cop(advantage-11, was-7)
det(advantage-11, a-8)
advmod(greater-10, far-9)
amod(advantage-11, greater-10)
rcmod(God-fearing-4, advantage-11)
conj_and(God-fearing-4, made-14)
nsubj(advantage-11, made-14)
nsubj(honorable-16, them-15)
xcomp(made-14, honorable-16)
mark(scorned-22, for-18)
nsubj(scorned-22, they-19)
aux(scorned-22, would-20)
aux(scorned-22, have-21)
advcl(God-fearing-4, scorned-22)
conj_and(God-fearing-4, scorned-22)
nsubj(advantage-11, scorned-22)
dobj(scorned-22, things-23)
mark(do-28, that-24)
amod(Christians-26, most-25)
nsubj(do-28, Christians-26)
aux(do-28, will-27)
ccomp(scorned-22, do-28)

(ROOT
  (S
    (NP
      (NP (NNP Dawtie) (POS 's))
      (NN father))
    (VP (VBD had)
      (NP
        (NP
          (NP (DT a)
            (ADJP (RB rarely) (JJ keen))
            (NN instinct))
          (PP (IN for)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ is)
                  (VP (VB mean)))))))
        (, ,)
        (CC and)
        (NP (DT that)))
      (PP (RB not)
        (PP (IN in)
          (NP
            (NP (DT the) (NN way))
            (PP (IN of)
              (NP
                (NP (NN abhorrence))
                (PP (IN in)
                  (NP (NNS others)))))))
        (, ,)
        (CC but)
        (PP (IN of)
          (NP
            (NP (NN avoidance))
            (PP (IN in)
              (NP (PRP himself)))))))
    (. .)))

poss(father-3, Dawtie-1)
nsubj(had-4, father-3)
nsubj(had-4', father-3)
root(ROOT-0, had-4)
conj_but(had-4, had-4')
det(instinct-8, a-5)
advmod(keen-7, rarely-6)
amod(instinct-8, keen-7)
dobj(had-4, instinct-8)
nsubj(mean-12, what-10)
aux(mean-12, is-11)
prepc_for(instinct-8, mean-12)
dobj(had-4, that-15)
conj_and(instinct-8, that-15)
neg(had-4, not-16)
det(way-19, the-18)
prep_in(had-4, way-19)
prep_of(way-19, abhorrence-21)
prep_in(abhorrence-21, others-23)
prep_of(had-4', avoidance-27)
prep_in(avoidance-27, himself-29)

(ROOT
  (S
    (PP (TO To)
      (NP
        (NP (NNS shades))
        (CC and)
        (NP
          (NP (NNP _) (NNP nuances) (NNP _))
          (PP (IN of)
            (NP
              (NP (NNS selfishness))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP
                    (NP (NNS men))
                    (PP (IN of)
                      (NP (JJ high)
                        (ADJP (JJ repute)
                          (CC and)
                          (JJ comfortable))
                        (NN conscience))))
                  (VP
                    (VP (MD would) (RB neither)
                      (VP (VB be)
                        (ADJP (JJ surprised)
                          (S
                            (VP (TO to)
                              (VP (VB find)
                                (PP (IN in)
                                  (NP (PRP$ their) (NNS neighbors)))))))))
                    (CC nor)
                    (VP (VBD annoyed)
                      (S
                        (VP (TO to)
                          (VP (VB find)
                            (PP (IN in)
                              (NP (PRP themselves)))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB give)
        (NP (DT no) (NN quarter))))
    (. .)))

prep_to(give-36, shades-2)
nn(_-6, _-4)
nn(_-6, nuances-5)
conj_and(shades-2, _-6)
prep_to(give-36, _-6)
prep_of(_-6, selfishness-8)
dobj(surprised-21, selfishness-8)
nsubj(find-23, selfishness-8)
nsubj(surprised-21, men-11)
nsubj(annoyed-28, men-11)
nsubj(find-30, men-11)
amod(conscience-17, high-13)
amod(conscience-17, repute-14)
conj_and(repute-14, comfortable-16)
amod(conscience-17, comfortable-16)
prep_of(men-11, conscience-17)
aux(surprised-21, would-18)
advmod(surprised-21, neither-19)
cop(surprised-21, be-20)
rcmod(selfishness-8, surprised-21)
aux(find-23, to-22)
xcomp(surprised-21, find-23)
poss(neighbors-26, their-25)
prep_in(find-23, neighbors-26)
rcmod(selfishness-8, annoyed-28)
conj_nor(surprised-21, annoyed-28)
aux(find-30, to-29)
xcomp(annoyed-28, find-30)
prep_in(find-30, themselves-32)
nsubj(give-36, he-34)
aux(give-36, would-35)
root(ROOT-0, give-36)
neg(quarter-38, no-37)
dobj(give-36, quarter-38)

(ROOT
  (S
    (ADVP (IN Along)
      (PP (IN with)
        (NP
          (NP (NNP Andrew) (POS 's))
          (NN father))))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (VBD had)))
      (, ,))
    (PP (IN in)
      (NP
        (NP (NN childhood)
          (CC and)
          (NN youth))
        (, ,)
        (VP (VBN been)
          (PP (IN under)
            (NP
              (NP (DT the) (NN influence))
              (PP (IN of)
                (NP
                  (NP (DT a) (JJ simple-hearted) (NN pastor))
                  (, ,)
                  (SBAR
                    (WHNP (WP whom))
                    (S
                      (NP (DT the)
                        (ADJP (JJ wise)
                          (CC and)
                          (JJ prudent)))
                      (VP (VBD laughed)
                        (PP (IN at) (IN as)
                          (NP
                            (NP (CD one))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (MD could) (RB not)
                                  (VP (VB take)
                                    (NP
                                      (NP (VB care))
                                      (PP (IN of)
                                        (NP (PRP himself)))
                                      (, ,)
                                      (ADJP (JJ incapable)
                                        (PP (IN of)
                                          (S
                                            (VP (VBG seeing)
                                              (NP (DT that))))))
                                      (, ,)))))))))))))))
          (PP (IN like)
            (NP (PRP$ his) (NN master))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD laid)
      (PRT (RP down))
      (NP (PRP$ his) (NN life))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD might)
            (VP (VB take)
              (NP (PRP it))
              (ADVP (RB again)))))))
    (. .)))

poss(father-5, Andrew-3)
prep_along_with(laid-51, father-5)
nsubj(had-8, he-7)
parataxis(laid-51, had-8)
prep_in(laid-51, childhood-11)
conj_and(childhood-11, youth-13)
prep_in(laid-51, youth-13)
vmod(childhood-11, been-15)
det(influence-18, the-17)
prep_under(been-15, influence-18)
det(pastor-22, a-20)
amod(pastor-22, simple-hearted-21)
prep_of(influence-18, pastor-22)
dobj(laughed-29, pastor-22)
det(wise-26, the-25)
nsubj(laughed-29, wise-26)
conj_and(wise-26, prudent-28)
nsubj(laughed-29, prudent-28)
rcmod(pastor-22, laughed-29)
dep(laughed-29, at-30)
prep_as(laughed-29, one-32)
nsubj(take-36, one-32)
aux(take-36, could-34)
neg(take-36, not-35)
rcmod(one-32, take-36)
dobj(take-36, care-37)
prep_of(care-37, himself-39)
amod(care-37, incapable-41)
prepc_of(incapable-41, seeing-43)
dobj(seeing-43, that-44)
poss(master-48, his-47)
prep_like(been-15, master-48)
nsubj(laid-51, he-50)
root(ROOT-0, laid-51)
prt(laid-51, down-52)
poss(life-54, his-53)
dobj(laid-51, life-54)
mark(take-58, that-55)
nsubj(take-58, he-56)
aux(take-58, might-57)
ccomp(laid-51, take-58)
dobj(take-58, it-59)
advmod(take-58, again-60)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD left)
      (S
        (NP (NNP God))
        (VP (TO to)
          (VP (VB look)
            (PP (IN after)
              (NP (PRP him)))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (MD might)
                  (VP (VB be)
                    (ADJP (JJ free)
                      (S
                        (VP (TO to)
                          (VP (VB look)
                            (PP (IN after)
                              (NP (NNP God)))))))))))))))
    (. .)))

nsubj(left-2, He-1)
root(ROOT-0, left-2)
dobj(left-2, God-3)
nsubj(look-5, God-3)
aux(look-5, to-4)
xcomp(left-2, look-5)
prep_after(look-5, him-7)
mark(free-13, that-9)
nsubj(free-13, he-10)
nsubj(look-15, he-10)
aux(free-13, might-11)
cop(free-13, be-12)
ccomp(look-5, free-13)
aux(look-15, to-14)
xcomp(free-13, look-15)
prep_after(look-15, God-17)

(ROOT
  (S
    (NP (NNP Little) (NNP Dawtie))
    (VP
      (VP (VBD had)
        (VP (VBN learned)
          (NP (PRP$ her) (NN catechism))))
      (, ,)
      (CC but)
      (, ,)
      (VP (VBP thank)
        (NP (NNP God)))
      (, ,)
      (VP (VBD had)
        (VP
          (ADVP (RB never))
          (VBN thought)
          (PP (IN about)
            (NP (PRP it)))))
      (CC or)
      (VP (VBD attempted)
        (S
          (VP (TO to)
            (VP (VB understand)
              (NP (PRP it))))))
      (: --)
      (NP
        (NP (JJ good) (JJ negative) (NN preparation))
        (PP (IN for)
          (S
            (VP (VBG becoming) (, ,)
              (PP (IN in)
                (ADVP
                  (NP (DT a) (JJ few) (NNS years))
                  (RBR more)))
              (, ,)
              (S
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB understand)
                        (NP (DT the) (NNP New) (NN Testament))
                        (PP (IN with)
                          (NP
                            (NP (DT the) (NN heart))
                            (PP (IN of)
                              (NP (DT a) (NN babe)))))))))))))))
    (. .)))

nn(Dawtie-2, Little-1)
nsubj(learned-4, Dawtie-2)
nsubj(thank-10, Dawtie-2)
nsubj(thought-15, Dawtie-2)
nsubj(attempted-19, Dawtie-2)
nsubj(understand-21, Dawtie-2)
aux(learned-4, had-3)
root(ROOT-0, learned-4)
poss(catechism-6, her-5)
dobj(learned-4, catechism-6)
conj_but(learned-4, thank-10)
dobj(thank-10, God-11)
aux(thought-15, had-13)
neg(thought-15, never-14)
conj_but(learned-4, thought-15)
prep_about(thought-15, it-17)
conj_or(learned-4, attempted-19)
aux(understand-21, to-20)
xcomp(attempted-19, understand-21)
dobj(understand-21, it-22)
amod(preparation-26, good-24)
amod(preparation-26, negative-25)
conj_or(learned-4, preparation-26)
dobj(learned-4, preparation-26)
prepc_for(preparation-26, becoming-28)
det(years-33, a-31)
amod(years-33, few-32)
npadvmod(more-34, years-33)
prepc_in(becoming-28, more-34)
dep(becoming-28, able-36)
aux(understand-38, to-37)
xcomp(able-36, understand-38)
det(Testament-41, the-39)
nn(Testament-41, New-40)
dobj(understand-38, Testament-41)
det(heart-44, the-43)
prep_with(understand-38, heart-44)
det(babe-47, a-46)
prep_of(heart-44, babe-47)

(ROOT
  (S
    (NP (DT The) (NNS brothers))
    (VP (VBD had)
      (ADVP (RB not) (RB long))
      (S
        (VP (TO to)
          (VP (VB search)
            (SBAR (IN before)
              (S
                (NP (PRP they))
                (VP (VBD came)
                  (PP (IN upon)
                    (NP (PRP her)))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (PRP she))
                      (VP (VBD sat)
                        (PP (IN on)
                          (NP (DT the) (NN ground)))
                        (PP (IN at)
                          (NP
                            (NP (DT the) (NN door))
                            (PP (IN of)
                              (NP (DT the) (JJ turf-built) (NN cottage)))))
                        (, ,)
                        (S
                          (VP (VBG feeding)
                            (NP (DT a) (NN chicken))
                            (PP (IN with)
                              (NP (JJ oatmeal) (NNS paste)))))))))))))))
    (. .)))

det(brothers-2, The-1)
nsubj(had-3, brothers-2)
nsubj(search-7, brothers-2)
root(ROOT-0, had-3)
dep(long-5, not-4)
advmod(had-3, long-5)
aux(search-7, to-6)
xcomp(had-3, search-7)
mark(came-10, before-8)
nsubj(came-10, they-9)
advcl(search-7, came-10)
prep_upon(came-10, her-12)
advmod(sat-16, where-14)
nsubj(sat-16, she-15)
advcl(came-10, sat-16)
det(ground-19, the-18)
prep_on(sat-16, ground-19)
det(door-22, the-21)
prep_at(sat-16, door-22)
det(cottage-26, the-24)
amod(cottage-26, turf-built-25)
prep_of(door-22, cottage-26)
xcomp(sat-16, feeding-28)
det(chicken-30, a-29)
dobj(feeding-28, chicken-30)
amod(paste-33, oatmeal-32)
prep_with(feeding-28, paste-33)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP are)
      (NP (PRP you))
      (NP
        (NP (NN doin) ('' '))
        (, ,)
        (NP (NNP Dawtie))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, are-3)
nsubj(What-2, you-4)
nsubj(What-2, doin-5)
appos(doin-5, Dawtie-8)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, they-1)
root(ROOT-0, asked-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ tryin) ('' '))
      (PRN (, ,) ('' '')
        (S
          (NP (PRP she))
          (VP (VBD answered) (, ,)
            (PP (IN without)
              (S
                (VP (VBG looking)
                  (PRT (RP up)))))))
        (, ,) (`` ``))
      (S
        (VP (TO to)
          (VP (VB haud)
            (NP (DT the) (NN life))
            (S
              (VP (VBG i) ('' ')
                (NP (DT the) (NN chuckie))))))))
    (. .) ('' '')))

nsubj(tryin-4, I-2)
nsubj(haud-17, I-2)
cop(tryin-4, 'm-3)
root(ROOT-0, tryin-4)
nsubj(answered-9, she-8)
parataxis(tryin-4, answered-9)
prepc_without(answered-9, looking-12)
prt(looking-12, up-13)
aux(haud-17, to-16)
xcomp(tryin-4, haud-17)
det(life-19, the-18)
dobj(haud-17, life-19)
xcomp(haud-17, i-20)
det(chuckie-23, the-22)
dobj(i-20, chuckie-23)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN matter) (NN wi) (POS '))
          (`` `) (NN t))))
    (. ?) ('' '')))

nsubj(t-9, What-2)
cop(t-9, 's-3)
det(wi-6, the-4)
nn(wi-6, matter-5)
poss(t-9, wi-6)
root(ROOT-0, t-9)

(ROOT
  (S (`` ``)
    (NP (NNP Naething)
      (CC but)
      (NNP the))
    (VP (VBP want)
      (VP (VB o) ('' ')
        (NP (DT a) (NN mither))))
    (. .) ('' '')))

nsubj(want-5, Naething-2)
conj_but(Naething-2, the-4)
nsubj(want-5, the-4)
root(ROOT-0, want-5)
xcomp(want-5, o-6)
det(mither-9, a-8)
dobj(o-6, mither-9)

(ROOT
  (S (`` ``)
    (SQ (VBZ Is)
      (NP (DT the) (NN mither) (NN o) ('' ')))
    ('' ')
    (NP (NN t))
    (VP (VBD deid))
    (. ?) ('' '')))

dep(deid-9, Is-2)
det(o-5, the-3)
nn(o-5, mither-4)
nsubj(Is-2, o-5)
nsubj(deid-9, t-8)
root(ROOT-0, deid-9)

(ROOT
  (S
    (S (`` ``)
      (S
        (S
          (ADJP (JJ Na)))
        (, ,)
        (NP (PRP she))
        (VP (VBZ 's)
          (ADVP (RB alive))
          (ADJP (JJ eneuch))))
      (, ,)
      (CC but)
      (S
        (NP (PRP she))
        (VP (VBZ has)
          (S
            (NP (NN ower) (NN mony) (NNS bairns))
            (VP (TO to)
              (VP (VB hap)
                (NP (PRP them) (DT a)))))))
      ('' '))
    (: ;)
    (S
      (NP (PRP$ her) (NNS wings) (NN winna))
      (VP (VBP cower)
        (NP (PRP them))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP she))
        (VP (VBZ drives)
          (NP (DT this) (NN ane) (NN awa) ('' '))))
      (, ,)
      (CC and)
      (S
        (NP (NN winna))
        (VP (VBP lat)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBP come)
                (PP (IN near)
                  (NP (PRP her)))))))))
    (. .) ('' '')))

ccomp(eneuch-7, Na-2)
nsubj(eneuch-7, she-4)
cop(eneuch-7, 's-5)
advmod(eneuch-7, alive-6)
root(ROOT-0, eneuch-7)
nsubj(has-11, she-10)
conj_but(eneuch-7, has-11)
nn(bairns-14, ower-12)
nn(bairns-14, mony-13)
dobj(has-11, bairns-14)
nsubj(hap-16, bairns-14)
aux(hap-16, to-15)
ccomp(has-11, hap-16)
xcomp(has-11, hap-16)
dobj(hap-16, them-17)
dep(them-17, a-18)
poss(winna-23, her-21)
nn(winna-23, wings-22)
nsubj(cower-24, winna-23)
conj_but(eneuch-7, cower-24)
dobj(cower-24, them-25)
nsubj(drives-29, she-28)
conj_and(eneuch-7, drives-29)
det(awa-32, this-30)
nn(awa-32, ane-31)
dobj(drives-29, awa-32)
nsubj(lat-37, winna-36)
conj_and(eneuch-7, lat-37)
conj_and(drives-29, lat-37)
nsubj(come-39, it-38)
ccomp(lat-37, come-39)
prep_near(come-39, her-41)

(ROOT
  (S (`` ``)
    (VP (VB Sic)
      (NP (DT a) (JJ cruel) (NN mither)))
    (. !) ('' '')))

root(ROOT-0, Sic-2)
det(mither-5, a-3)
amod(mither-5, cruel-4)
dobj(Sic-2, mither-5)

(ROOT
  (S
    (S
      (ADJP (`` ``) (JJ Na)))
    (, ,)
    (NP (PRP she))
    (VP (VBZ 's)
      (NP
        (NP (RB no))
        (POS ') (NN cruel)))
    (. .)))

ccomp(cruel-8, Na-2)
nsubj(cruel-8, she-4)
cop(cruel-8, 's-5)
poss(cruel-8, no-6)
root(ROOT-0, cruel-8)

(ROOT
  (S
    (NP (PRP She))
    (ADVP (RB only))
    (VP (VBZ wants)
      (PP (TO to)
        (NP
          (NP
            (NP (NNP gar) (POS '))
            (NN t))
          (VP (VBN come)
            (PP (TO to)
              (NP (PRP me)))))))
    (. !)))

nsubj(wants-3, She-1)
advmod(wants-3, only-2)
root(ROOT-0, wants-3)
poss(t-7, gar-5)
prep_to(wants-3, t-7)
vmod(t-7, come-8)
prep_to(come-8, me-10)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD kenned)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD would)
            (VP (VB tak)
              (NP (PRP it)))))))
    (. .)))

nsubj(kenned-2, She-1)
root(ROOT-0, kenned-2)
nsubj(tak-5, I-3)
aux(tak-5, would-4)
ccomp(kenned-2, tak-5)
dobj(tak-5, it-6)

(ROOT
  (NP
    (NP (NNP Na) (, ,) (NNP na))
    (: ;)
    (NP
      (NP (NNP Flappy) (POS 's))
      (NP (DT a) (JJ guid) (NN mither)))
    (. !)))

nn(na-3, Na-1)
root(ROOT-0, na-3)
dep(na-3, Flappy-5)
possessive(Flappy-5, 's-6)
det(mither-9, a-7)
amod(mither-9, guid-8)
dep(Flappy-5, mither-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP ken)
        (NP (PRP$ her) (NN weel))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBZ 's)
        (VP
          (ADVP (RB ane))
          (VBN o) ('' ')
          (NP (PRP$ our) (NN ain)))))
    (. !)))

nsubj(ken-2, I-1)
root(ROOT-0, ken-2)
poss(weel-4, her-3)
dobj(ken-2, weel-4)
nsubjpass(o-9, she-6)
auxpass(o-9, 's-7)
advmod(o-9, ane-8)
parataxis(ken-2, o-9)
poss(ain-12, our-11)
dobj(o-9, ain-12)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ kens)
        (NP (PRP me))))
    (, ,)
    (CC or)
    (S
      (NP (PRP she))
      (VP
        (VP (MD would)
          (ADVP (RB hae))
          (VP (VB keepit)
            (NP (DT the) (NN puir) (NN thing))))
        (, ,)
        (CC and)
        (VP (VBN done)
          (NP (PRP$ her) (JJS best) (NN wi))
          (`` ')
          (NP (PRP her)))))
    (. .) ('' '')))

nsubj(kens-2, She-1)
root(ROOT-0, kens-2)
dobj(kens-2, me-3)
nsubj(keepit-9, she-6)
nsubj(done-15, she-6)
aux(keepit-9, would-7)
advmod(keepit-9, hae-8)
conj_or(kens-2, keepit-9)
det(thing-12, the-10)
nn(thing-12, puir-11)
dobj(keepit-9, thing-12)
conj_or(kens-2, done-15)
conj_and(keepit-9, done-15)
poss(wi-18, her-16)
amod(wi-18, best-17)
dobj(done-15, wi-18)
dobj(done-15, her-20)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP ken)
        (NP (NN somebody))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Andrew))
    (, ,) (`` ``)
    (S
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (MD would)
            (VP (VB fain)
              (NP (NN spread) (NN oot) (NNS wings))))))
      (, ,)
      (PP (IN like)
        (NP (DT a) (JJ great) (JJ big) (NN hen)))
      (, ,)
      (VP (VBP ower)
        (NP
          (NP
            (NP (NNP a) (POS '))
            (NP
              (NP
                (NP (DT the) (NNS bairns))
                (, ,)
                (NP (PRP you))
                (, an) ('' '))
              (NP (PRP me))))
          (, an) ('' ')
          (NP
            (NP (NNP a) (POS '))
            (, ,)
            (VP (VBN Dawtie))))))
    (. !) ('' '')))

nsubj(ken-3, I-2)
ccomp(said-7, ken-3)
dobj(ken-3, somebody-4)
root(ROOT-0, said-7)
nsubj(said-7, Andrew-8)
nsubj(fain-13, that-11)
aux(fain-13, would-12)
dep(ower-24, fain-13)
nn(wings-16, spread-14)
nn(wings-16, oot-15)
dobj(fain-13, wings-16)
det(hen-22, a-19)
amod(hen-22, great-20)
amod(hen-22, big-21)
prep_like(ower-24, hen-22)
dep(said-7, ower-24)
dobj(ower-24, a-25)
det(bairns-28, the-27)
dep(a-25, bairns-28)
appos(bairns-28, you-30)
punct(bairns-28, an-31)
dep(bairns-28, me-33)
punct(a-25, an-34)
dep(a-25, a-36)
vmod(a-36, Dawtie-39)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (NP (PRP$ my) (NN mither)))
    (. !) ('' '')))

nsubj(mither-5, That-2)
cop(mither-5, 's-3)
poss(mither-5, my-4)
root(ROOT-0, mither-5)

(ROOT
  (FRAG
    (ADJP (JJ cried) (JJ Dawtie))
    (, ,)
    (VP
      (VP (VBG looking)
        (PRT (RP up)))
      (, ,)
      (CC and)
      (VP (VBG showing)
        (NP (PRP$ her) (JJ white) (NNS teeth))))
    (. .)))

amod(Dawtie-2, cried-1)
root(ROOT-0, Dawtie-2)
dep(Dawtie-2, looking-4)
prt(looking-4, up-5)
dep(Dawtie-2, showing-8)
conj_and(looking-4, showing-8)
poss(teeth-11, her-9)
amod(teeth-11, white-10)
dobj(showing-8, teeth-11)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Na))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT a) (NN man))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Sandy))
    (. .)))

advmod(man-7, Na-2)
nsubj(man-7, it-4)
cop(man-7, 's-5)
det(man-7, a-6)
ccomp(said-10, man-7)
root(ROOT-0, said-10)
nsubj(said-10, Sandy-11)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (PRP$ my) (NN father))
      (, ,)
      (ADVP (IN than)))
    (. !) ('' '')))

nsubj(father-5, It-2)
cop(father-5, 's-3)
poss(father-5, my-4)
root(ROOT-0, father-5)
advmod(father-5, than-7)

(ROOT
  (S
    (S
      (ADJP (`` ``) (JJ Na)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (RB no)))
    (. .)))

ccomp(no-6, Na-2)
nsubj(no-6, it-4)
cop(no-6, 's-5)
root(ROOT-0, no-6)

(ROOT
  (SQ (MD Would)
    (NP (PRP ye))
    (VP (VBP like)
      (S
        (VP (TO to)
          (VP (VB see)
            (NP (PRP Him))))))
    (. ?) ('' '')))

aux(like-3, Would-1)
nsubj(like-3, ye-2)
nsubj(see-5, ye-2)
root(ROOT-0, like-3)
aux(see-5, to-4)
xcomp(like-3, see-5)
dobj(see-5, Him-6)

(ROOT
  (S
    (S
      (ADJP (`` ``) (JJ Na)))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (NP (DT no) (NN carin) ('' ')))
    (. .) ('' '')))

ccomp(carin-7, Na-2)
nsubj(carin-7, I-4)
cop(carin-7, 'm-5)
neg(carin-7, no-6)
root(ROOT-0, carin-7)

(ROOT
  (S (`` ``)
    (NP (NNP Sandy)
      (CC and)
      (PRP me))
    (VP (VBZ 's)
      (ADJP (JJ gaein))
      ('' ')
      (S
        (VP (TO to)
          (VP (VB see)
            (NP (PRP Him))
            (NP (DT some) (NN day))))))
    (. .) ('' '')))

nsubj(gaein-6, Sandy-2)
nsubj(see-9, Sandy-2)
conj_and(Sandy-2, me-4)
nsubj(gaein-6, me-4)
nsubj(see-9, me-4)
cop(gaein-6, 's-5)
root(ROOT-0, gaein-6)
aux(see-9, to-8)
xcomp(gaein-6, see-9)
dobj(see-9, Him-10)
det(day-12, some-11)
tmod(see-9, day-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB gang)
        (NP
          (NP (NNP wi) (POS '))
          (NN ye))))
    (. .)))

nsubj(gang-4, I-2)
aux(gang-4, 'll-3)
root(ROOT-0, gang-4)
poss(ye-7, wi-5)
dobj(gang-4, ye-7)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP maun)
      (NP
        (NP (NNP tak) (POS '))
        (JJ my) (NN chuckie)))
    (. !) ('' '')))

cc(maun-3, But-1)
nsubj(maun-3, I-2)
root(ROOT-0, maun-3)
poss(chuckie-7, tak-4)
amod(chuckie-7, my-6)
dobj(maun-3, chuckie-7)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD looked)
        (PRT (RP down))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP she))
            (VP (VBD had)
              (VP (VBN set)
                (NP (DT the) (JJ little) (NN bird))
                (PP (IN on)
                  (NP (DT the) (NN ground)))))))))
    (: ;)
    (S
      (S
        (NP (PRP it))
        (VP (VBD had)
          (VP (VBN hobbled)
            (PRT (RP away)))))
      (CC and)
      (S
        (NP (PRP she))
        (VP (MD could) (RB not)
          (VP (VB see)
            (NP (PRP it))))))
    (. !)))

nsubj(looked-2, She-1)
root(ROOT-0, looked-2)
prt(looked-2, down-3)
advmod(set-7, where-4)
nsubj(set-7, she-5)
aux(set-7, had-6)
advcl(looked-2, set-7)
det(bird-10, the-8)
amod(bird-10, little-9)
dobj(set-7, bird-10)
det(ground-13, the-12)
prep_on(set-7, ground-13)
nsubj(hobbled-17, it-15)
aux(hobbled-17, had-16)
parataxis(looked-2, hobbled-17)
prt(hobbled-17, away-18)
nsubj(see-23, she-20)
aux(see-23, could-21)
neg(see-23, not-22)
parataxis(looked-2, see-23)
conj_and(hobbled-17, see-23)
dobj(see-23, it-24)

(ROOT
  (S (`` ``)
    (NP (NNP Eh))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP she))
        (VP (VBD cried) (, ,)
          (S
            (VP (VBG starting)
              (PRT (RP up))))))
      (, ,))
    (`` ``)
    (NP (PRP ye))
    (VP (VBD made)
      (S
        (NP (PRP me))
        (VP (VB forget)
          (NP
            (NP (PRP$ my) (JJ chuckie) (NN wi) (POS '))
            (NN yer) (NNS questions)))))
    (. !)))

nsubj(made-13, Eh-2)
nsubj(cried-6, she-5)
parataxis(made-13, cried-6)
xcomp(cried-6, starting-8)
prt(starting-8, up-9)
nsubj(made-13, ye-12)
root(ROOT-0, made-13)
nsubj(forget-15, me-14)
ccomp(made-13, forget-15)
poss(wi-18, my-16)
amod(wi-18, chuckie-17)
poss(questions-21, wi-18)
nn(questions-21, yer-20)
dobj(forget-15, questions-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB mither))
      (`` `)
      (S
        (ADVP (RB ill))
        (VP (VBG peck)
          (NP (PRP it)))))
    (. !) ('' '')))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod('s-2, mither-3)
advmod(peck-6, ill-5)
xcomp('s-2, peck-6)
dobj(peck-6, it-7)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD darted)
        (PRT (RP off)))
      (, ,)
      (CC and)
      (VP (VBP forsook)
        (NP
          (NP (DT the) (NN tale))
          (PP (IN of)
            (NP
              (NP (DT the) (NNP Son))
              (PP (IN of)
                (NP (NN Man))))))
        (S
          (VP (TO to)
            (VP (VB look)
              (PP (IN after)
                (NP (PRP$ her) (NN chicken))))))))
    (. .)))

nsubj(darted-2, She-1)
nsubj(forsook-6, She-1)
root(ROOT-0, darted-2)
prt(darted-2, off-3)
conj_and(darted-2, forsook-6)
det(tale-8, the-7)
dobj(forsook-6, tale-8)
det(Son-11, the-10)
prep_of(tale-8, Son-11)
prep_of(Son-11, Man-13)
aux(look-15, to-14)
vmod(forsook-6, look-15)
poss(chicken-18, her-17)
prep_after(look-15, chicken-18)

(ROOT
  (S (CC But)
    (ADVP (RB presently))
    (NP (PRP she))
    (VP (VBD returned)
      (PP (IN with)
        (NP (PRP it)))
      (PP (IN in)
        (NP (PRP$ her) (NNS hands))))
    (. .)))

cc(returned-4, But-1)
advmod(returned-4, presently-2)
nsubj(returned-4, she-3)
root(ROOT-0, returned-4)
prep_with(returned-4, it-6)
poss(hands-9, her-8)
prep_in(returned-4, hands-9)

(ROOT
  (VP (`` ``) (VB Tell)
    (NP (NNP awa) (POS '))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP she))
        (VP (VBD said))))
    (, ,)
    (S
      (VP (VBG resuming)
        (NP (PRP$ her) (NN seat))
        (`` ``)
        (SBARQ
          (WHNP (WP What))
          (SQ (VBP do)
            (NP (PRP they))
            (VP (MD ca) (`` ')
              (VP (VB Him))))
          (. ?))
        ('' '')))))

root(ROOT-0, Tell-2)
dobj(Tell-2, awa-3)
nsubj(said-8, she-7)
parataxis(Tell-2, said-8)
xcomp(Tell-2, resuming-10)
poss(seat-12, her-11)
dobj(resuming-10, seat-12)
dobj(Him-19, What-14)
aux(Him-19, do-15)
nsubj(Him-19, they-16)
aux(Him-19, ca-17)
ccomp(resuming-10, Him-19)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (MD ca) (`` ')
      (VP (VB Him)
        (NP
          (NP (DT the) (NNP Father) (NN o) (POS '))
          (NNP Jesus) (NNP Christ))))
    (. .) ('' '')))

nsubj(Him-5, They-2)
aux(Him-5, ca-3)
root(ROOT-0, Him-5)
det(o-8, the-6)
nn(o-8, Father-7)
poss(Christ-11, o-8)
nn(Christ-11, Jesus-10)
dobj(Him-5, Christ-11)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB gang)
          (NP
            (NP (NNP wi) (POS '))
            (NN ye)))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

nsubj(gang-4, I-2)
aux(gang-4, 'll-3)
ccomp(answered-11, gang-4)
poss(ye-7, wi-5)
dobj(gang-4, ye-7)
nsubj(answered-11, she-10)
root(ROOT-0, answered-11)

(ROOT
  (S (IN So)
    (NP (DT the) (NN church))
    (VP (VBD was)
      (VP (VBN increased)
        (PP (IN by)
          (NP
            (NP (DT a) (JJ whole) (NN half))
            (, ,)
            (CC and)
            (NP
              (NP
                (NP (DT the) (NN fraction))
                (PP (IN of)
                  (NP (DT a) (NN chicken))))
              (: --)
              (NP
                (NP (NN type))
                (PP (IN of)
                  (NP (DT the) (JJ groaning) (NN creation)))))
            (, ,)))
        (S
          (VP (VBG waiting)
            (PP (IN for)
              (NP (DT the) (NN sonship)))))))
    (. .)))

dep(increased-5, So-1)
det(church-3, the-2)
nsubjpass(increased-5, church-3)
auxpass(increased-5, was-4)
root(ROOT-0, increased-5)
det(half-9, a-7)
amod(half-9, whole-8)
agent(increased-5, half-9)
det(fraction-13, the-12)
agent(increased-5, fraction-13)
conj_and(half-9, fraction-13)
det(chicken-16, a-15)
prep_of(fraction-13, chicken-16)
dep(fraction-13, type-18)
det(creation-22, the-20)
amod(creation-22, groaning-21)
prep_of(type-18, creation-22)
xcomp(increased-5, waiting-24)
det(sonship-27, the-26)
prep_for(waiting-24, sonship-27)

(ROOT
  (S
    (NP (DT The) (CD three))
    (VP (VBD gathered)
      (S
        (VP (TO to)
          (VP (VB read)
            (CC and)
            (VB pray)))))
    (. .)))

det(three-2, The-1)
nsubj(gathered-3, three-2)
nsubj(read-5, three-2)
nsubj(pray-7, three-2)
root(ROOT-0, gathered-3)
aux(read-5, to-4)
xcomp(gathered-3, read-5)
xcomp(gathered-3, pray-7)
conj_and(read-5, pray-7)

(ROOT
  (S (CC And)
    (ADVP (RB almost) (RB always))
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (DT some) (NN creature))
        (PP (IN with)
          (NP (PRP them))))
      (PP (IN in)
        (NP
          (NP (DT the) (NNS arms)
            (CC or)
            (NNS hands))
          (PP (IN of)
            (NP (NNP Dawtie))))))
    (. .)))

cc(was-5, And-1)
advmod(always-3, almost-2)
advmod(was-5, always-3)
expl(was-5, there-4)
root(ROOT-0, was-5)
det(creature-7, some-6)
nsubj(was-5, creature-7)
prep_with(creature-7, them-9)
det(arms-12, the-11)
prep_in(was-5, arms-12)
prep_in(was-5, hands-14)
conj_or(arms-12, hands-14)
prep_of(arms-12, Dawtie-16)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (DT the) (NNP Lord))
        (VP (VBD was) (RB not)
          (ADVP (RB there)))))
    (, ,)
    (S
      (ADVP (RB too))
      (, ,)
      (NP (RB then))
      (VP (VBP are)
        (NP
          (NP (PRP we) (NNS Christians))
          (ADJP (RBS most) (JJ miserable)))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP we))
            (VP (VBP see)
              (NP (DT a) (NN glory))
              (ADVP (IN beyond) (DT all))
              (SBAR (IN that)
                (S
                  (NP (NN man))
                  (VP (MD could)
                    (VP (VB dream))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (PP (CC but)
          (NP (DT a) (NN dream)))))
    (. !)))

mark(was-5, if-2)
det(Lord-4, the-3)
nsubj(was-5, Lord-4)
advcl(Christians-14, was-5)
neg(was-5, not-6)
advmod(was-5, there-7)
advmod(Christians-14, too-9)
nsubj(Christians-14, then-11)
cop(Christians-14, are-12)
dep(Christians-14, we-13)
root(ROOT-0, Christians-14)
advmod(miserable-16, most-15)
amod(Christians-14, miserable-16)
mark(see-20, for-18)
nsubj(see-20, we-19)
advcl(Christians-14, see-20)
det(glory-22, a-21)
dobj(see-20, glory-22)
advmod(see-20, beyond-23)
dep(beyond-23, all-24)
mark(dream-28, that-25)
nsubj(dream-28, man-26)
aux(dream-28, could-27)
ccomp(see-20, dream-28)
nsubj(is-32, it-31)
conj_and(Christians-14, is-32)
prep(is-32, but-33)
det(dream-35, a-34)
pobj(but-33, dream-35)

(ROOT
  (FRAG
    (WHNP (WP$ Whose) (NNS dream))
    (. ?)))

poss(dream-2, Whose-1)
root(ROOT-0, dream-2)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD went)
      (PRT (RP on))
      (PP (IN at)
        (NP (JJ other) (NNS times)))
      (PP (IN with)
        (NP
          (NP (DT the) (JJ usual) (NNS employments)
            (CC and)
            (NNS games))
          (PP (IN of)
            (NP (NNS children))))))
    (. .)))

nsubj(went-2, They-1)
root(ROOT-0, went-2)
prt(went-2, on-3)
amod(times-6, other-5)
prep_at(went-2, times-6)
det(employments-10, the-8)
amod(employments-10, usual-9)
prep_with(went-2, employments-10)
prep_with(went-2, games-12)
conj_and(employments-10, games-12)
prep_of(employments-10, children-14)

(ROOT
  (S (CC But)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (DT this) (NN difference))
          (PP (IN between)
            (NP (PRP them))))))
    (CC and)
    (S
      (NP
        (NP (RBS most) (JJ grown) (NNS Christians))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (UCP
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (NN anything) (NN roused))
                  (VP
                    (VP (VBD thought))
                    (CC or)
                    (VP (VBP question)
                      (SBAR
                        (S
                          (NP (PRP they))
                          (ADVP (IN at) (RB once))
                          (VP (VBD referred)
                            (NP (PRP it))
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN word))
                                (PP (IN of)
                                  (NP (NNP Jesus))))))))))))
              (, ,)
              (CC and)
              (S
                (VP (VBG having)
                  (VP (VBN discovered)
                    (NP (PRP$ His) (NN will))))))))
        (, ,))
      (VP (VBD made)
        (NP (NN haste))
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (PRP it)))))))
    (. .)))

expl(was-3, there-2)
root(ROOT-0, was-3)
det(difference-5, this-4)
nsubj(was-3, difference-5)
prep_between(difference-5, them-7)
advmod(Christians-11, most-9)
amod(Christians-11, grown-10)
dep(thought-17, Christians-11)
nsubj(made-37, Christians-11)
advmod(thought-17, when-14)
nn(roused-16, anything-15)
nsubj(thought-17, roused-16)
nsubj(question-19, roused-16)
nsubj(discovered-33, roused-16)
rcmod(Christians-11, thought-17)
rcmod(Christians-11, question-19)
conj_or(thought-17, question-19)
nsubj(referred-23, they-20)
advmod(referred-23, at-21)
advmod(at-21, once-22)
ccomp(question-19, referred-23)
dobj(referred-23, it-24)
det(word-27, the-26)
prep_to(referred-23, word-27)
prep_of(word-27, Jesus-29)
aux(discovered-33, having-32)
rcmod(Christians-11, discovered-33)
conj_and(thought-17, discovered-33)
poss(will-35, His-34)
dobj(discovered-33, will-35)
conj_and(was-3, made-37)
dobj(made-37, haste-38)
aux(do-40, to-39)
vmod(made-37, do-40)
dobj(do-40, it-41)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB naturally))
    (VP (VBD followed)
      (SBAR (IN that) (, ,)
        (S
          (S
            (VP (VBG seeing)
              (NP (PRP He))))
          (VP (VBZ gives)
            (NP
              (NP (DT the) (NN spirit))
              (PP (TO to)
                (NP (PRP them)))
              (SBAR
                (WHNP (WDT that))
                (S
                  (S
                    (VP (VB obey)
                      (NP (PRP Him))))
                  (PRN (, ,)
                    (S
                      (NP (PRP they))
                      (VP (VBD grew)
                        (ADVP (RB rapidly))
                        (PP (IN in)
                          (NP
                            (NP (DT the) (NNS modes))
                            (PP (IN of)
                              (NP (PRP$ their) (NN Master)))))
                        (, ,)
                        (S
                          (VP (VBG learning)
                            (S
                              (VP (TO to)
                                (VP (VB look)
                                  (PP (IN at)
                                    (NP (NNS things)))
                                  (SBAR (IN as)
                                    (S
                                      (NP (PRP He))
                                      (VP (VBD looked)
                                        (PP (IN at)
                                          (NP (PRP them)))
                                        (, ,)
                                        (S
                                          (VP (TO to)
                                            (VP
                                              (VP (VB think)
                                                (PP (IN of)
                                                  (NP (PRP them)))
                                                (SBAR (IN as)
                                                  (S
                                                    (NP (PRP He))
                                                    (VP (VBD thought)
                                                      (PP (IN of)
                                                        (NP (PRP them)))
                                                      (, ,)
                                                      (PP (TO to)
                                                        (NP
                                                          (NP (NN value))
                                                          (SBAR
                                                            (WHNP (WP what))
                                                            (S
                                                              (NP (PRP He))
                                                              (VP (VBD valued))))))))))
                                              (, ,)
                                              (CC and)
                                              (VP (VB despise)
                                                (SBAR
                                                  (WHNP (WP what))
                                                  (S
                                                    (NP (PRP He))
                                                    (VP (VBN despised)
                                                      (PRN (: --)
                                                        (ADVP (DT all))
                                                        (PP (IN in)
                                                          (NP
                                                            (NP (JJ simplest) (NN order))
                                                            (PP (IN of)
                                                              (NP (JJ divine) (NN development)))))
                                                        (, ,))
                                                      (PP (IN in)
                                                        (NP
                                                          (NP (JJ uttermost) (NN accord))
                                                          (PP (IN with)
                                                            (NP (JJS highest) (NN reason))))))))))))))))))))))
                    (, ,)))))
            (NP
              (NP (DT the) (NN whole))
              (VP (VBG turning)
                (PP (IN on)
                  (NP
                    (NP (DT the)
                      (ADJP (JJ primary)
                        (CC and)
                        (JJ continuous))
                      (NN effort))
                    (PP (TO to)
                      (NP (NN obey)))))))))))
    (. .)))

nsubj(followed-3, It-1)
advmod(followed-3, naturally-2)
root(ROOT-0, followed-3)
mark(gives-8, that-4)
csubj(gives-8, seeing-6)
dobj(seeing-6, He-7)
ccomp(followed-3, gives-8)
det(spirit-10, the-9)
iobj(gives-8, spirit-10)
dep(obey-14, spirit-10)
prep_to(spirit-10, them-12)
rcmod(spirit-10, obey-14)
dobj(obey-14, Him-15)
nsubj(grew-18, they-17)
dep(obey-14, grew-18)
advmod(grew-18, rapidly-19)
det(modes-22, the-21)
prep_in(grew-18, modes-22)
poss(Master-25, their-24)
prep_of(modes-22, Master-25)
xcomp(grew-18, learning-27)
aux(look-29, to-28)
xcomp(learning-27, look-29)
prep_at(look-29, things-31)
mark(looked-34, as-32)
nsubj(looked-34, He-33)
nsubj(think-39, He-33)
nsubj(despise-55, He-33)
advcl(look-29, looked-34)
prep_at(looked-34, them-36)
aux(think-39, to-38)
xcomp(looked-34, think-39)
prep_of(think-39, them-41)
mark(thought-44, as-42)
nsubj(thought-44, He-43)
advcl(think-39, thought-44)
prep_of(thought-44, them-46)
prep_to(thought-44, value-49)
dobj(valued-52, value-49)
nsubj(valued-52, He-51)
rcmod(value-49, valued-52)
xcomp(looked-34, despise-55)
conj_and(think-39, despise-55)
dobj(despised-58, what-56)
nsubj(despised-58, He-57)
ccomp(despise-55, despised-58)
dep(in-61, all-60)
dep(despised-58, in-61)
amod(order-63, simplest-62)
pobj(in-61, order-63)
amod(development-66, divine-65)
prep_of(order-63, development-66)
amod(accord-70, uttermost-69)
prep_in(despised-58, accord-70)
amod(reason-73, highest-72)
prep_with(accord-70, reason-73)
det(whole-76, the-75)
dobj(gives-8, whole-76)
vmod(whole-76, turning-77)
det(effort-83, the-79)
amod(effort-83, primary-80)
conj_and(primary-80, continuous-82)
amod(effort-83, continuous-82)
prep_on(turning-77, effort-83)
prep_to(effort-83, obey-85)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ long))
      (SBAR (IN before)
        (S
          (NP (PRP they))
          (VP (VBD came)
            (S
              (VP (TO to)
                (VP (VB have)
                  (NP
                    (NP (DT any) (JJ regular) (NN time))
                    (PP (IN of)
                      (NP (NN meeting)))))))))))
    (. .)))

nsubj(long-3, It-1)
cop(long-3, was-2)
root(ROOT-0, long-3)
mark(came-6, before-4)
nsubj(came-6, they-5)
nsubj(have-8, they-5)
advcl(long-3, came-6)
aux(have-8, to-7)
xcomp(came-6, have-8)
det(time-11, any-9)
amod(time-11, regular-10)
dobj(have-8, time-11)
prep_of(time-11, meeting-13)

(ROOT
  (S
    (NP (NNP Andrew))
    (ADVP (RB always))
    (VP (VBD took)
      (NP (DT the) (NN initiative))
      (PP (IN in)
        (S
          (VP (VBG assembling)
            (NP (DT the) (NN church))))))
    (. .)))

nsubj(took-3, Andrew-1)
advmod(took-3, always-2)
root(ROOT-0, took-3)
det(initiative-5, the-4)
dobj(took-3, initiative-5)
prepc_in(took-3, assembling-7)
det(church-9, the-8)
dobj(assembling-7, church-9)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD called))))
    (NP (PRP they))
    (VP (VBD came)
      (ADVP (RB together)))
    (. .)))

advmod(called-3, When-1)
nsubj(called-3, he-2)
advcl(came-5, called-3)
nsubj(came-5, they-4)
root(ROOT-0, came-5)
advmod(came-5, together-6)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (MD would)
      (VP
        (VP (VB read)
          (PP (IN from)
            (NP (DT the) (NN story))))
        (, ,)
        (CC and)
        (VP (VB communicate)
          (NP
            (NP (DT any) (NN discovery))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN made)
                    (S
                      (VP (VBG concerning)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (NNP Jesus))
                            (VP (MD would)
                              (VP (VB have)
                                (S
                                  (NP (PRP them))
                                  (VP (VB do)))))))))))))))))
    (. .)))

advmod(read-4, Then-1)
nsubj(read-4, he-2)
nsubj(communicate-10, he-2)
aux(read-4, would-3)
root(ROOT-0, read-4)
det(story-7, the-6)
prep_from(read-4, story-7)
conj_and(read-4, communicate-10)
det(discovery-12, any-11)
dobj(communicate-10, discovery-12)
nsubj(made-15, he-13)
aux(made-15, had-14)
rcmod(discovery-12, made-15)
xcomp(made-15, concerning-16)
dobj(have-20, what-17)
nsubj(have-20, Jesus-18)
aux(have-20, would-19)
ccomp(concerning-16, have-20)
nsubj(do-22, them-21)
ccomp(have-20, do-22)

(ROOT
  (S
    (ADVP (RB Next))
    (, ,)
    (S
      (NP (PRP they))
      (VP (MD would)
        (VP (VB consult)
          (CC and)
          (VB settle)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (MD should)
                (VP (VB ask)
                  (PP (IN for)))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (PRP them)))
        (, ,)
        (ADJP
          (ADJP (RB generally) (JJ Andrew))
          (, ,)
          (CC but)
          (ADJP (RB sometimes) (JJ Sandy)))
        (, ,))
      (VP (MD would)
        (VP (VB pray))))
    (. .)))

advmod(consult-5, Next-1)
nsubj(consult-5, they-3)
nsubj(settle-7, they-3)
aux(consult-5, would-4)
root(ROOT-0, consult-5)
conj_and(consult-5, settle-7)
prep_for(ask-11, what-8)
nsubj(ask-11, they-9)
aux(ask-11, should-10)
ccomp(consult-5, ask-11)
nsubj(pray-27, one-15)
prep_of(one-15, them-17)
advmod(Andrew-20, generally-19)
amod(one-15, Andrew-20)
advmod(Sandy-24, sometimes-23)
amod(one-15, Sandy-24)
conj_but(Andrew-20, Sandy-24)
aux(pray-27, would-26)
conj_and(consult-5, pray-27)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD made)
        (NP (DT no) (JJ formal) (NN utterance)))
      (, ,)
      (CC but)
      (VP
        (ADVP (RB simply))
        (VBD asked)
        (PP (IN for)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (VBD needed)))))))
    (. .)))

nsubj(made-2, They-1)
nsubj(asked-9, They-1)
root(ROOT-0, made-2)
neg(utterance-5, no-3)
amod(utterance-5, formal-4)
dobj(made-2, utterance-5)
advmod(asked-9, simply-8)
conj_but(made-2, asked-9)
dobj(needed-13, what-11)
nsubj(needed-13, they-12)
prepc_for(asked-9, needed-13)

(ROOT
  (S
    (S
      (NP (RB Here))
      (VP (VBP are)
        (NP
          (NP (DT some) (NNS specimens))
          (PP (IN of)
            (NP (PRP$ their) (NNS petitions))))))
    (: :) (`` ``)
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (NNP Lord))
      (, ,)
      (S
        (VP (VBG Sandy)
          (NP (NN canna))
          (PP (IN for)
            (NP (DT the) (NN life) (NN o) ('' ') (`` `) (NN im) (NN un) (`` `) (JJ erstan) ('' '))
            (NP
              (NP (DT the) (NN rule) (NN o) (POS '))
              (CD three)))))
      (: ;)
      (VP (VBP please) (, ,)
        (S
          (NP (NNP Lord))
          (, ,)
          (VP (VB help)
            (NP (PRP him))))))
    (. .) ('' '')))

nsubj(specimens-4, Here-1)
cop(specimens-4, are-2)
det(specimens-4, some-3)
root(ROOT-0, specimens-4)
poss(petitions-7, their-6)
prep_of(specimens-4, petitions-7)
discourse(please-33, Oh-10)
nsubj(please-33, Lord-12)
vmod(please-33, Sandy-14)
dobj(Sandy-14, canna-15)
det(un-23, the-17)
nn(un-23, life-18)
nn(un-23, o-19)
nn(un-23, im-22)
prep_for(Sandy-14, un-23)
amod(un-23, erstan-25)
det(o-29, the-27)
nn(o-29, rule-28)
dep(Sandy-14, o-29)
num(o-29, three-31)
parataxis(specimens-4, please-33)
nsubj(help-37, Lord-35)
ccomp(please-33, help-37)
dobj(help-37, him-38)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh) (, ,) (UH Lord))
      (, ,)
      (NP (PRP I))
      (ADVP (RB dinna))
      (VP (VBP ken)
        (S
          (VP (VBG onything)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP want)
                  (NP (DT the) (NN day)))))))))
    (: ;)
    (S
      (INTJ (VB please))
      (VP (VB gi'e)
        (NP (PRP us))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP we))
            (VP (VBP need) (, ,)
              (NP
                (NP (DT an))
                ('' ')
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP ye))
                    (VP (VBP want)
                      (S
                        (NP (PRP us))
                        (VP (TO to)
                          (VP
                            (ADVP (RB hae))
                            (, ,) (VB wi'oot)
                            (NP
                              (NP (PRP$ our) (NN askin) (POS '))
                              (NP (PRP it)))))))))))))))
    (. .) ('' '')))

discourse(ken-8, Oh-2)
dep(Oh-2, Lord-4)
nsubj(ken-8, I-6)
advmod(ken-8, dinna-7)
root(ROOT-0, ken-8)
xcomp(ken-8, onything-9)
nsubj(want-11, I-10)
ccomp(onything-9, want-11)
det(day-13, the-12)
tmod(want-11, day-13)
discourse(gi'e-16, please-15)
parataxis(ken-8, gi'e-16)
dobj(gi'e-16, us-17)
dobj(need-20, what-18)
nsubj(need-20, we-19)
dep(gi'e-16, need-20)
dobj(need-20, an-22)
dobj(want-26, an-22)
nsubj(wi'oot-31, an-22)
nsubj(want-26, ye-25)
rcmod(an-22, want-26)
dobj(want-26, us-27)
nsubj(wi'oot-31, us-27)
aux(wi'oot-31, to-28)
advmod(wi'oot-31, hae-29)
xcomp(want-26, wi'oot-31)
poss(askin-33, our-32)
dobj(wi'oot-31, askin-33)
dep(askin-33, it-35)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NNP Lord))
        (, ,)
        (S
          (VP (VB help)
            (NP
              (NP (PRP us))
              (: ;)
              (S
                (S
                  (NP (PRP we))
                  (VP (VBP 're)
                    (NP
                      (NP (NNP ill-natnr) (NNP 'd))
                      (PRN (-LRB- -LRB-)
                        (NP (JJ _) (JJ bad-tempered) (NNS _))
                        (-RRB- -RRB-))
                      (NP (DT the) (NN day)))))
                (: ;)
                (S
                  (NP
                    (NP (DT an))
                    ('' ') (NN ye) (NN wadna))
                  (VP (VBP hae)
                    (S
                      (NP (PRP us))
                      (NP (DT that)))))))))
        ('' ''))
      (`` ``)
      (NP
        (NP (NNP Lord))
        (, ,)
        (NP
          (NP (NNP Dawtie) (POS 's))
          (NN mither)))
      (VP (VBZ has)
        (NP
          (NP (DT a) (NN sair) (NN heid))
          (PRN (-LRB- -LRB-)
            (NP (CD _) (NN headache) (NN _))
            (-RRB- -RRB-)))))
    (: ;)
    (S
      (S
        (VP (VB mak)
          (NP (PRP$ her) (JJR better) (, ,) (JJ gien) (NN ye))))
      (VP (VBP please)))
    (. .) ('' '')))

nsubj(has-33, Lord-2)
dep(Lord-2, help-4)
dobj(help-4, us-5)
nsubj('d-10, we-7)
cop('d-10, 're-8)
nn('d-10, ill-natnr-9)
dep(us-5, 'd-10)
amod(_-14, _-12)
amod(_-14, bad-tempered-13)
appos('d-10, _-14)
det(day-17, the-16)
dep('d-10, day-17)
nn(wadna-22, an-19)
nn(wadna-22, ye-21)
nsubj(hae-23, wadna-22)
parataxis('d-10, hae-23)
nsubj(that-25, us-24)
xcomp(hae-23, that-25)
nsubj(has-33, Lord-28)
poss(mither-32, Dawtie-30)
appos(Lord-28, mither-32)
root(ROOT-0, has-33)
det(heid-36, a-34)
nn(heid-36, sair-35)
dobj(has-33, heid-36)
num(_-40, _-38)
nn(_-40, headache-39)
appos(heid-36, _-40)
csubj(please-49, mak-43)
poss(ye-48, her-44)
amod(ye-48, better-45)
amod(ye-48, gien-47)
dobj(mak-43, ye-48)
parataxis(has-33, please-49)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP$ their) (NNS prayers))
        (VP (VBD were)
          (VP (VBN ended)
            (SBAR
              (S
                (NP (NNP Andrew))
                (VP (MD would)
                  (VP (VB say)))))))))
    (: :) (`` ``)
    (S
      (INTJ (UH Sandy))
      (, ,)
      (VP (VB have)
        (NP (PRP you))))
    (VP (VBD found)
      (NP
        (NP (NN anything))
        (SBAR
          (S
            (NP (PRP He))
            (VP (VBZ says))))))
    (. ?) ('' '')))

advmod(ended-5, When-1)
poss(prayers-3, their-2)
nsubjpass(ended-5, prayers-3)
auxpass(ended-5, were-4)
advcl(found-15, ended-5)
csubj(found-15, ended-5)
nsubj(say-8, Andrew-6)
aux(say-8, would-7)
ccomp(ended-5, say-8)
discourse(have-13, Sandy-11)
csubj(found-15, have-13)
dobj(have-13, you-14)
root(ROOT-0, found-15)
dobj(found-15, anything-16)
nsubj(says-18, He-17)
rcmod(anything-16, says-18)

(ROOT
  (S (CC and)
    (NP (NN there-upon))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP he))
        (VP (VBD had))))
    (, ,)
    (NP (NNP Sandy))
    (VP (MD would)
      (VP (VB speak)))
    (. .)))

cc(speak-10, and-1)
nsubj(speak-10, there-upon-2)
mark(had-6, if-4)
nsubj(had-6, he-5)
advcl(speak-10, had-6)
nsubj(speak-10, Sandy-8)
aux(speak-10, would-9)
root(ROOT-0, speak-10)

(ROOT
  (S
    (NP (NNP Dawtie))
    (ADVP (RB never))
    (VP
      (VP (VBD said)
        (NP (DT a) (NN word)))
      (, ,)
      (CC but)
      (VP (VBD sat)
        (CC and)
        (VBD listened)
        (PP (IN with)
          (NP (PRP$ her) (JJ big) (NNS eyes)))
        (, ,)
        (VP
          (ADVP (RB generally))
          (VBG stroking)
          (NP
            (NP (DT some) (NN creature))
            (PP (IN in)
              (NP (PRP$ her) (NN lap)))))))
    (. .)))

nsubj(said-3, Dawtie-1)
nsubj(sat-8, Dawtie-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
det(word-5, a-4)
dobj(said-3, word-5)
conj_but(said-3, sat-8)
conj_but(said-3, listened-10)
aux(sat-8, listened-10)
conj_and(sat-8, listened-10)
poss(eyes-14, her-12)
amod(eyes-14, big-13)
prep_with(sat-8, eyes-14)
advmod(stroking-17, generally-16)
dep(sat-8, stroking-17)
det(creature-19, some-18)
dobj(stroking-17, creature-19)
poss(lap-22, her-21)
prep_in(creature-19, lap-22)

(ROOT
  (S
    (ADVP (RB Surely))
    (NP
      (NP (DT the) (NN part))
      (PP (IN of)
        (NP (DT every) (JJ superior))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB help)
            (NP
              (NP (DT the) (NN life))
              (PP (IN in)
                (NP (DT the) (JJR lower))))))))
    (. !)))

advmod(is-7, Surely-1)
det(part-3, the-2)
nsubj(is-7, part-3)
nsubj(help-9, part-3)
det(superior-6, every-5)
prep_of(part-3, superior-6)
root(ROOT-0, is-7)
aux(help-9, to-8)
xcomp(is-7, help-9)
det(life-11, the-10)
dobj(help-9, life-11)
det(lower-14, the-13)
prep_in(life-11, lower-14)

(ROOT
  (S
    (SBAR (IN Once)
      (S
        (NP (DT the) (NN question))
        (VP (VBD arose) (, ,)
          (PP (IN in)
            (NP
              (NP (PRP$ their) (NN assembly))
              (PP (IN of)
                (NP
                  (NP (CD three))
                  (CC and)
                  (NP (DT a) (NN bird))))))
          (, ,)
          (SBAR
            (WHNP (WP$ whose) (NN leg))
            (S
              (NP (NNP Dawtie))
              (VP (VBD had)
                (VP (VBN put)
                  (PP (IN in)
                    (NP (NNS splints))))))))))
    (, ,)
    (NP (WDT what))
    (VP (VBD became)
      (PP (IN of)
        (NP (DT the) (NNS creatures)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBD died)))))
    (. .)))

mark(arose-4, Once-1)
det(question-3, the-2)
nsubj(arose-4, question-3)
advcl(became-24, arose-4)
poss(assembly-8, their-7)
prep_in(arose-4, assembly-8)
prep_of(assembly-8, three-10)
det(bird-13, a-12)
prep_of(assembly-8, bird-13)
conj_and(three-10, bird-13)
poss(leg-16, whose-15)
dobj(put-19, leg-16)
nsubj(put-19, Dawtie-17)
aux(put-19, had-18)
ccomp(arose-4, put-19)
prep_in(put-19, splints-21)
nsubj(became-24, what-23)
root(ROOT-0, became-24)
det(creatures-27, the-26)
prep_of(became-24, creatures-27)
advmod(died-30, when-28)
nsubj(died-30, they-29)
advcl(became-24, died-30)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD concluded)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN sparrow))
              (SBAR (IN that)
                (S
                  (NP (NNP God))
                  (VP (VBD cared)
                    (PP (IN for))))))
            (VP (MD must)
              (VP (VB be)
                (ADJP (JJ worth))
                (S
                  (VP (VBG caring)
                    (PP (IN for))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD could) (RB not)
        (VP (VB believe)
          (SBAR
            (S
              (NP (PRP He))
              (VP (VBD had)
                (VP (VBN made)
                  (S
                    (NP (PRP it))
                    (VP (TO to)
                      (VP (VB last)
                        (ADVP (RB only))
                        (NP (PDT such) (DT a) (JJ little) (NN while))
                        (PP (IN as)
                          (NP
                            (NP (PRP$ its) (NN life))
                            (PP (IN in)
                              (NP (DT this) (NN world)))))))))))))))
    (. .)))

nsubj(concluded-2, They-1)
root(ROOT-0, concluded-2)
mark(worth-12, that-3)
det(sparrow-5, the-4)
nsubj(worth-12, sparrow-5)
mark(cared-8, that-6)
nsubj(cared-8, God-7)
dep(sparrow-5, cared-8)
prep(cared-8, for-9)
aux(worth-12, must-10)
cop(worth-12, be-11)
ccomp(concluded-2, worth-12)
xcomp(worth-12, caring-13)
prep(caring-13, for-14)
nsubj(believe-20, they-17)
aux(believe-20, could-18)
neg(believe-20, not-19)
conj_and(concluded-2, believe-20)
nsubj(made-23, He-21)
aux(made-23, had-22)
ccomp(believe-20, made-23)
dobj(made-23, it-24)
nsubj(last-26, it-24)
aux(last-26, to-25)
xcomp(made-23, last-26)
advmod(last-26, only-27)
predet(while-31, such-28)
det(while-31, a-29)
amod(while-31, little-30)
dobj(last-26, while-31)
poss(life-34, its-33)
prep_as(last-26, life-34)
det(world-37, this-36)
prep_in(life-34, world-37)

(ROOT
  (S
    (NP (NNP Thereupon) (PRP they))
    (VP (VBD agreed)
      (S
        (VP (TO to)
          (VP (VB ask)
            (NP (DT the) (NN Lord))
            (SBAR (IN that) (, ,)
              (S
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP they))
                    (VP (VBD died))))
                (, ,)
                (NP (PRP they))
                (VP (MD might)
                  (VP (VB have)
                    (NP
                      (NP (RB again) (DT a) (JJ certain) (NN dog))
                      (, ,)
                      (NP (DT an) (JJ ugly) (JJ little) (JJ white) (NN mongrel))
                      (, ,)
                      (SBAR
                        (WHPP (IN of)
                          (WHNP (WDT which)))
                        (S
                          (NP (PRP they))
                          (VP (VBD had)
                            (VP (VBN been)
                              (ADJP (RB very) (JJ fond)))))))))))))))
    (. .)))

nsubj(agreed-3, Thereupon-1)
nsubj(ask-5, Thereupon-1)
dep(Thereupon-1, they-2)
root(ROOT-0, agreed-3)
aux(ask-5, to-4)
xcomp(agreed-3, ask-5)
det(Lord-7, the-6)
dobj(ask-5, Lord-7)
mark(have-16, that-8)
advmod(died-12, when-10)
nsubj(died-12, they-11)
advcl(have-16, died-12)
nsubj(have-16, they-14)
aux(have-16, might-15)
ccomp(ask-5, have-16)
advmod(dog-20, again-17)
det(dog-20, a-18)
amod(dog-20, certain-19)
dobj(have-16, dog-20)
prep_of(fond-34, dog-20)
det(mongrel-26, an-22)
amod(mongrel-26, ugly-23)
amod(mongrel-26, little-24)
amod(mongrel-26, white-25)
appos(dog-20, mongrel-26)
nsubj(fond-34, they-30)
aux(fond-34, had-31)
cop(fond-34, been-32)
advmod(fond-34, very-33)
rcmod(dog-20, fond-34)

(ROOT
  (S
    (NP (PDT All) (PRP$ their) (NNS days))
    (VP (VBD thereafter)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBD were)
            (PRN (, ,)
              (S
                (NP (PRP I))
                (VP (VBP believe)))
              (, ,))
            (NP
              (NP
                (ADJP (JJR more)
                  (CC or)
                  (JJR less))
                (NN consciously))
              (, ,)
              (VP (VBG looking)
                (ADVP (RB forward))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN fulfillment))
                    (PP (IN of)
                      (NP (DT this) (NN petition)))))))))))
    (. .)))

predet(days-3, All-1)
poss(days-3, their-2)
nsubj(thereafter-4, days-3)
root(ROOT-0, thereafter-4)
nsubj(consciously-14, they-5)
cop(consciously-14, were-6)
nsubj(believe-9, I-8)
parataxis(consciously-14, believe-9)
amod(consciously-14, more-11)
conj_or(more-11, less-13)
amod(consciously-14, less-13)
ccomp(thereafter-4, consciously-14)
vmod(consciously-14, looking-16)
advmod(looking-16, forward-17)
det(fulfillment-20, the-19)
prep_to(looking-16, fulfillment-20)
det(petition-23, this-22)
prep_of(fulfillment-20, petition-23)

(ROOT
  (S
    (S (IN For)
      (NP (PRP$ their) (NN hope))
      (VP (VBD strengthened)
        (PP (IN with)
          (NP
            (NP (DT the) (NN growth))
            (PP (IN of)
              (NP (PRP$ their) (NN ideal)))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBD had)
            (S
              (VP (TO to)
                (VP (VB give)
                  (PRT (RP up))
                  (NP (DT any) (NN belief))))))))
      (NP (PRP it))
      (VP (VBD was)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (DT a) (JJR better))
              (PP (IN in)
                (NP (PRP$ its) (NN place))))))))
    (. .)))

dep(strengthened-4, For-1)
poss(hope-3, their-2)
nsubj(strengthened-4, hope-3)
root(ROOT-0, strengthened-4)
det(growth-7, the-6)
prep_with(strengthened-4, growth-7)
poss(ideal-10, their-9)
prep_of(growth-7, ideal-10)
advmod(had-15, when-13)
nsubj(had-15, they-14)
nsubj(give-17, they-14)
advcl(was-22, had-15)
aux(give-17, to-16)
xcomp(had-15, give-17)
prt(give-17, up-18)
det(belief-20, any-19)
dobj(give-17, belief-20)
nsubj(was-22, it-21)
nsubj(take-24, it-21)
conj_and(strengthened-4, was-22)
aux(take-24, to-23)
xcomp(was-22, take-24)
det(better-26, a-25)
dobj(take-24, better-26)
poss(place-29, its-28)
prep_in(take-24, place-29)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD yielded)
        (PP (IN at)
          (NP (NN length)))
        (NP
          (NP (DT the) (NN notion))
          (SBAR (IN that)
            (S
              (NP (DT the) (NN peddler))
              (VP (VBD was)
                (NP (NNP Jesus) (NNP Christ))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (ADVP (RB never))
      (VP (VBD ceased)
        (S
          (VP (TO to)
            (VP (VB believe)
              (SBAR
                (SBAR (IN that)
                  (S
                    (NP (PRP He))
                    (VP (VBD was)
                      (NP
                        (NP (NNP God) (POS 's))
                        (NN messenger)))))
                (, ,)
                (CC or)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NNP Lord))
                    (VP (VBD was)
                      (PP (IN with)
                        (NP (PRP them))))))))))
        (ADVP (RB always))))
    (. .)))

nsubj(yielded-2, They-1)
root(ROOT-0, yielded-2)
prep_at(yielded-2, length-4)
det(notion-6, the-5)
dobj(yielded-2, notion-6)
mark(Christ-12, that-7)
det(peddler-9, the-8)
nsubj(Christ-12, peddler-9)
cop(Christ-12, was-10)
nn(Christ-12, Jesus-11)
dep(notion-6, Christ-12)
nsubj(ceased-17, they-15)
nsubj(believe-19, they-15)
neg(ceased-17, never-16)
conj_but(yielded-2, ceased-17)
aux(believe-19, to-18)
xcomp(ceased-17, believe-19)
mark(messenger-25, that-20)
nsubj(messenger-25, He-21)
cop(messenger-25, was-22)
poss(messenger-25, God-23)
ccomp(believe-19, messenger-25)
mark(was-31, that-28)
det(Lord-30, the-29)
nsubj(was-31, Lord-30)
ccomp(believe-19, was-31)
conj_or(messenger-25, was-31)
prep_with(was-31, them-33)
advmod(ceased-17, always-34)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD would) (RB not)
        (VP (VB insist)
          (SBAR (IN that)
            (S
              (NP (PRP He))
              (VP (VBD was)
                (VP (VBG walking) (IN about)
                  (PP (IN on)
                    (NP (DT the) (NN earth))))))))))
    (, ,)
    (CC but)
    (S
      (PP (TO to)
        (NP
          (NP (DT the) (NN end))
          (PP (IN of)
            (NP (PRP$ their) (NNS days)))))
      (NP (PRP they))
      (VP (VBD cherished)
        (NP (DT the) (JJ uncertain) (NN hope))
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (MD might)
                (PRN (, ,)
                  (PP (RB even) (IN without)
                    (S
                      (VP (VBG knowing)
                        (NP (PRP it)))))
                  (, ,))
                (VP (VB look)
                  (PP (IN upon)
                    (NP
                      (NP (DT the) (NN face))
                      (PP (IN of)
                        (NP (DT the) (NNP Lord)))))
                  (PP (IN in)
                    (S
                      (NP
                        (NP (DT that))
                        (PP (IN of)
                          (NP (DT some) (NN stranger))))
                      (VP
                        (VP (VBG passing)
                          (PP (IN in)
                            (NP (DT the) (NN street))))
                        (, ,)
                        (CC or)
                        (VP (VBG mingling)
                          (PP (IN in)
                            (NP (DT a) (NN crowd))))
                        (, ,)
                        (CC or)
                        (VP (VBG seated)
                          (PP (IN in)
                            (NP (DT a) (NN church)))))))))))
          (: ;)
          (SBAR (IN for)
            (S
              (NP (PRP they))
              (VP (VBD knew)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (PDT all) (DT the) (NNS shapes))
                      (PP (IN of)
                        (NP (NN man))))
                    (VP (VBP belong)
                      (PP (TO to)
                        (NP (PRP Him)))))))))
          (, ,)
          (CC and)
          (SBAR (IN that) (, ,)
            (S
              (SBAR (IN after)
                (S
                  (NP (PRP He))
                  (VP (VBD rose)
                    (PP (IN from)
                      (NP (DT the) (NN dead))))))
              (NP (EX there))
              (VP (VBD were)
                (NP
                  (NP (JJ several) (NNS occasions))
                  (SBAR
                    (WHPP (IN on)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP He))
                      (VP (VBD did)
                        (PP (RB not) (IN at)
                          (NP
                            (NP (JJ first) (NN look))
                            (PP (IN like)
                              (NP (PRP Himself)))))
                        (PP (TO to)
                          (NP
                            (NP (DT those))
                            (SBAR
                              (WHPP (TO to)
                                (WHNP (WP whom)))
                              (S
                                (NP (PRP He))
                                (VP (VBD appeared))))))))))))))))
    (. .)))

nsubj(insist-4, They-1)
aux(insist-4, would-2)
neg(insist-4, not-3)
root(ROOT-0, insist-4)
mark(walking-8, that-5)
nsubj(walking-8, He-6)
aux(walking-8, was-7)
ccomp(insist-4, walking-8)
dep(walking-8, about-9)
det(earth-12, the-11)
prep_on(walking-8, earth-12)
det(end-17, the-16)
prep_to(cherished-22, end-17)
poss(days-20, their-19)
prep_of(end-17, days-20)
nsubj(cherished-22, they-21)
conj_but(insist-4, cherished-22)
det(hope-25, the-23)
amod(hope-25, uncertain-24)
dobj(cherished-22, hope-25)
mark(look-35, that-26)
nsubj(look-35, they-27)
aux(look-35, might-28)
advmod(without-31, even-30)
dep(look-35, without-31)
pcomp(without-31, knowing-32)
dobj(knowing-32, it-33)
advcl(cherished-22, look-35)
ccomp(cherished-22, look-35)
det(face-38, the-37)
prep_upon(look-35, face-38)
det(Lord-41, the-40)
prep_of(face-38, Lord-41)
nsubj(passing-47, that-43)
nsubj(mingling-53, that-43)
nsubj(seated-59, that-43)
det(stranger-46, some-45)
prep_of(that-43, stranger-46)
prepc_in(look-35, passing-47)
det(street-50, the-49)
prep_in(passing-47, street-50)
prepc_in(look-35, mingling-53)
conj_or(passing-47, mingling-53)
det(crowd-56, a-55)
prep_in(mingling-53, crowd-56)
prepc_in(look-35, seated-59)
conj_or(passing-47, seated-59)
det(church-62, a-61)
prep_in(seated-59, church-62)
mark(knew-66, for-64)
nsubj(knew-66, they-65)
advcl(cherished-22, knew-66)
ccomp(cherished-22, knew-66)
conj_and(look-35, knew-66)
mark(belong-73, that-67)
predet(shapes-70, all-68)
det(shapes-70, the-69)
nsubj(belong-73, shapes-70)
prep_of(shapes-70, man-72)
ccomp(knew-66, belong-73)
prep_to(belong-73, Him-75)
mark(were-87, that-78)
mark(rose-82, after-80)
nsubj(rose-82, He-81)
advcl(were-87, rose-82)
det(dead-85, the-84)
prep_from(rose-82, dead-85)
expl(were-87, there-86)
advcl(cherished-22, were-87)
ccomp(cherished-22, were-87)
conj_and(look-35, were-87)
amod(occasions-89, several-88)
nsubj(were-87, occasions-89)
prep_on(did-93, occasions-89)
nsubj(did-93, He-92)
rcmod(occasions-89, did-93)
neg(did-93, not-94)
amod(look-97, first-96)
prep_at(did-93, look-97)
prep_like(look-97, Himself-99)
prep_to(did-93, those-101)
prep_to(appeared-105, those-101)
nsubj(appeared-105, He-104)
rcmod(those-101, appeared-105)

(ROOT
  (S
    (NP
      (NP (DT The) (NN child-like))
      (, ,)
      (NP (DT the) (JJ essential))
      (, ,)
      (NP
        (NP
          (NP (DT the) (JJ divine) (NN notion))
          (PP (IN of)
            (S
              (VP
                (VP (VBG serving) (, ,)
                  (PP (IN with)
                    (NP (PRP$ their) (JJ every-day) (NN will))))
                (CC and)
                (VP (VBG being))))))
        (, ,)
        (NP
          (NP (DT the) (NN will))
          (PP (IN of)
            (NP
              (NP (DT the) (VBG living) (NN One))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD lived)
                    (PP (IN for)
                      (NP (PRP them)))
                    (SBAR (IN that)
                      (S
                        (NP (PRP they))
                        (VP (MD might)
                          (VP (VB live)))))
                    (, ,)
                    (SBAR (RB as) (IN once)
                      (S
                        (NP (PRP He))
                        (VP (VBD had)
                          (VP (VBN died)
                            (PP (IN for)
                              (NP (PRP them)))
                            (SBAR (IN that)
                              (S
                                (NP (PRP they))
                                (VP (MD might)
                                  (VP (VB die)))))))))))))))
        (, ,)
        (VP (VBN ripened)
          (PP (IN in)
            (NP (PRP them)))
          (PP (TO to)
            (NP
              (NP (DT a) (NNP Christianity))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD saw)
                    (NP (NNP God))
                    (ADVP (RB everywhere)))))))))
      (, ,))
    (VP (VBD saw)
      (SBAR (IN that)
        (S
          (NP (NN everything))
          (VP (VBD had)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN done)
                    (SBAR
                      (SBAR (IN as)
                        (S
                          (NP (NNP God))
                          (VP (MD would)
                            (VP (VB have)
                              (S
                                (NP (PRP it))
                                (VP (VBN done)))))))
                      (, ,)
                      (CC and)
                      (SBAR (IN that)
                        (S
                          (NP
                            (NP (NN nothing))
                            (PP (CC but)
                              (NP (NN injustice))))
                          (VP (VBD had)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (VP (VBN forsaken)
                                    (S
                                      (VP (TO to)
                                        (VP (VB please)
                                          (NP (PRP Him)))))))))))))))))))))
    (. .)))

det(child-like-2, The-1)
nsubj(saw-59, child-like-2)
det(essential-5, the-4)
appos(child-like-2, essential-5)
det(notion-9, the-7)
amod(notion-9, divine-8)
appos(child-like-2, notion-9)
prepc_of(notion-9, serving-11)
poss(will-16, their-14)
amod(will-16, every-day-15)
prep_with(serving-11, will-16)
prepc_of(notion-9, being-18)
conj_and(serving-11, being-18)
det(will-21, the-20)
appos(notion-9, will-21)
det(One-25, the-23)
amod(One-25, living-24)
prep_of(will-21, One-25)
nsubj(lived-28, One-25)
rcmod(One-25, lived-28)
prep_for(lived-28, them-30)
mark(live-34, that-31)
nsubj(live-34, they-32)
aux(live-34, might-33)
ccomp(lived-28, live-34)
advmod(died-40, as-36)
mark(died-40, once-37)
nsubj(died-40, He-38)
aux(died-40, had-39)
advcl(lived-28, died-40)
prep_for(died-40, them-42)
mark(die-46, that-43)
nsubj(die-46, they-44)
aux(die-46, might-45)
ccomp(died-40, die-46)
vmod(notion-9, ripened-48)
prep_in(ripened-48, them-50)
det(Christianity-53, a-52)
prep_to(ripened-48, Christianity-53)
nsubj(saw-55, Christianity-53)
rcmod(Christianity-53, saw-55)
dobj(saw-55, God-56)
advmod(saw-55, everywhere-57)
root(ROOT-0, saw-59)
mark(had-62, that-60)
nsubj(had-62, everything-61)
nsubjpass(done-65, everything-61)
ccomp(saw-59, had-62)
aux(done-65, to-63)
auxpass(done-65, be-64)
xcomp(had-62, done-65)
mark(have-69, as-66)
nsubj(have-69, God-67)
aux(have-69, would-68)
advcl(done-65, have-69)
ccomp(done-65, have-69)
nsubj(done-71, it-70)
ccomp(have-69, done-71)
mark(had-78, that-74)
nsubj(had-78, nothing-75)
nsubjpass(forsaken-81, nothing-75)
nsubj(please-83, nothing-75)
prep(nothing-75, but-76)
pobj(but-76, injustice-77)
advcl(done-65, had-78)
ccomp(done-65, had-78)
conj_and(have-69, had-78)
aux(forsaken-81, to-79)
auxpass(forsaken-81, be-80)
xcomp(had-78, forsaken-81)
aux(please-83, to-82)
xcomp(forsaken-81, please-83)
dobj(please-83, Him-84)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (PP (IN under)
        (NP
          (NP (DT no) (NN influence))
          (PP (IN of)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ has)
                  (VP (VBN been)
                    (ADVP (RB so) (RB well))
                    (VP (VBN called)
                      (SBAR
                        (S
                          (NP
                            (NP (JJ _) (JJ other-worldliness) (NNS _))
                            (, ,)
                            (SBAR (IN for)
                              (S
                                (NP (PRP they))
                                (VP (VBD saw)
                                  (NP (DT this) (NN world))
                                  (PP (IN as)
                                    (NP (JJ much)
                                      (NP (NNP God) (POS 's))))
                                  (PP (IN as)
                                    (NP (DT that))))))
                            (, ,))
                          (VP (VBD saw)
                            (SBAR (IN that)
                              (S
                                (NP (PRP$ its) (NN work))
                                (VP (VBZ has)
                                  (S
                                    (VP (TO to)
                                      (VP (VB be)
                                        (VP (VBN done)
                                          (ADVP (RB divinely))
                                          (, ,)
                                          (SBAR (IN that)
                                            (S
                                              (NP (PRP it))
                                              (VP (VBZ is)
                                                (NP
                                                  (NP (DT the) (NN beginning))
                                                  (PP (IN of)
                                                    (NP (DT the) (NN world)
                                                      (S
                                                        (VP (TO to)
                                                          (VP (VB come)))))))))))))))))))))))))))))
    (. .)))

nsubj(were-2, They-1)
root(ROOT-0, were-2)
neg(influence-5, no-4)
prep_under(were-2, influence-5)
nsubjpass(called-12, what-7)
aux(called-12, has-8)
auxpass(called-12, been-9)
advmod(well-11, so-10)
advmod(called-12, well-11)
prepc_of(influence-5, called-12)
amod(_-15, _-13)
amod(_-15, other-worldliness-14)
nsubj(saw-29, _-15)
mark(saw-19, for-17)
nsubj(saw-19, they-18)
dep(_-15, saw-19)
det(world-21, this-20)
dobj(saw-19, world-21)
amod(God-24, much-23)
prep_as(saw-19, God-24)
possessive(God-24, 's-25)
prep_as(saw-19, that-27)
ccomp(called-12, saw-29)
mark(has-33, that-30)
poss(work-32, its-31)
nsubj(has-33, work-32)
nsubjpass(done-36, work-32)
ccomp(saw-29, has-33)
aux(done-36, to-34)
auxpass(done-36, be-35)
xcomp(has-33, done-36)
advmod(done-36, divinely-37)
mark(beginning-43, that-39)
nsubj(beginning-43, it-40)
cop(beginning-43, is-41)
det(beginning-43, the-42)
ccomp(done-36, beginning-43)
det(world-46, the-45)
prep_of(beginning-43, world-46)
aux(come-48, to-47)
vmod(world-46, come-48)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (PP (TO to)
          (NP
            (NP (PRP them))
            (ADVP (RB all)
              (NP (CD one) (NN world)))))
        (, ,)
        (PP (IN with)
          (NP
            (NP (NNP God))
            (PP (IN in)
              (NP (PRP it)))))
        (, ,)
        (ADVP (DT all) (IN in) (RB all))))
    (: ;)
    (S
      (ADVP (RB therefore))
      (NP
        (NP (DT the) (JJS best) (NN work))
        (PP (IN for)
          (NP (DT the) (JJ other) (NN world))))
      (VP (VBD was)
        (NP
          (NP (DT the) (NN work))
          (PP (IN of)
            (NP (DT this) (NN world))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
prep_to(was-2, them-4)
advmod(them-4, all-5)
num(world-7, one-6)
pobj(all-5, world-7)
prep_with(was-2, God-10)
prep_in(God-10, it-12)
dep(in-15, all-14)
advmod(was-2, in-15)
advmod(in-15, all-16)
advmod(work-28, therefore-18)
det(work-21, the-19)
amod(work-21, best-20)
nsubj(work-28, work-21)
det(world-25, the-23)
amod(world-25, other-24)
prep_for(work-21, world-25)
cop(work-28, was-26)
det(work-28, the-27)
parataxis(was-2, work-28)
det(world-31, this-30)
prep_of(work-28, world-31)

(ROOT
  (S
    (NP (JJ Such))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN boyhood))
        (PP (IN of)
          (NP (DT that) (NNP Andrew) (NNP Ingram)))
        (SBAR
          (WHNP (WP whom))
          (S
            (NP (NNP Miss) (NNP Fordyce))
            (ADVP (RB now))
            (VP (VBD reproved)
              (PP (IN for)
                (S (RB not)
                  (VP (VBG setting)
                    (NP
                      (NP (DT the) (JJ good) (NN example))
                      (PP (IN of)
                        (S
                          (VP (VBG going)
                            (PP (TO to)
                              (NP (NN church)))))))))))))))
    (. .)))

nsubj(boyhood-4, Such-1)
cop(boyhood-4, was-2)
det(boyhood-4, the-3)
root(ROOT-0, boyhood-4)
dobj(reproved-13, boyhood-4)
det(Ingram-8, that-6)
nn(Ingram-8, Andrew-7)
prep_of(boyhood-4, Ingram-8)
nn(Fordyce-11, Miss-10)
nsubj(reproved-13, Fordyce-11)
advmod(reproved-13, now-12)
rcmod(boyhood-4, reproved-13)
neg(setting-16, not-15)
prepc_for(reproved-13, setting-16)
det(example-19, the-17)
amod(example-19, good-18)
dobj(setting-16, example-19)
prepc_of(example-19, going-21)
prep_to(going-21, church-23)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ common) (NN sense))
      (PP (IN of)
        (NP (DT the) (NNS children))))
    (ADVP (RB rapidly))
    (VP (VBD developed) (, ,)
      (SBAR (IN for)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP
                (NP (DT no) (NN teacher))
                (PP (IN like)
                  (NP (NN obedience))))
              (, ,)
              (CC and)
              (NP
                (NP (DT no) (NN obstruction))
                (PP (IN like)
                  (NP (PRP$ its) (NN postponement)))))))))
    (. .)))

det(sense-3, The-1)
amod(sense-3, common-2)
nsubj(developed-8, sense-3)
det(children-6, the-5)
prep_of(sense-3, children-6)
advmod(developed-8, rapidly-7)
root(ROOT-0, developed-8)
mark(is-12, for-10)
expl(is-12, there-11)
advcl(developed-8, is-12)
neg(teacher-14, no-13)
nsubj(is-12, teacher-14)
prep_like(teacher-14, obedience-16)
neg(obstruction-20, no-19)
nsubj(is-12, obstruction-20)
conj_and(teacher-14, obstruction-20)
poss(postponement-23, its-22)
prep_like(obstruction-20, postponement-23)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (PP (IN in)
          (PP (IN after)
            (NP (NNS years))))
        (NP (PRP$ their) (NNS mothers))
        (VP (VBD came)
          (PP (IN at)
            (NP (NN length)))
          (S
            (VP (TO to)
              (VP (VB understand)
                (SBAR (IN that)
                  (S
                    (NP (NN obedience))
                    (VP (VBD had)
                      (VP (VBN been)
                        (NP
                          (NP
                            (ADJP (RB so) (JJ long))
                            (DT the) (NN foundation))
                          (PP (IN of)
                            (NP (PRP$ their) (NN life))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD explained)
      (PP (TO to)
        (NP (PRP them)))
      (NP
        (NP (JJ many) (NNS things))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBD had)
                (VP (VBN seemed)
                  (S
                    (ADJP (JJ strange)))))
              (, ,)
              (CC and)
              (VP (VBD brought)
                (S
                  (NP (PRP them))
                  (VP (TO to)
                    (VP (VB reproach)
                      (NP (PRP themselves))
                      (SBAR (IN that)
                        (S
                          (NP (PRP they))
                          (VP (MD should)
                            (VP (VB have)
                              (VP (VBN seemed)
                                (S
                                  (ADJP (JJ strange)))))))))))))))))
    (. .)))

advmod(came-7, When-1)
prep(came-7, in-2)
pcomp(in-2, after-3)
pobj(after-3, years-4)
poss(mothers-6, their-5)
nsubj(came-7, mothers-6)
nsubj(understand-11, mothers-6)
advcl(explained-25, came-7)
prep_at(came-7, length-9)
aux(understand-11, to-10)
xcomp(came-7, understand-11)
mark(foundation-19, that-12)
nsubj(foundation-19, obedience-13)
aux(foundation-19, had-14)
cop(foundation-19, been-15)
advmod(long-17, so-16)
amod(foundation-19, long-17)
det(foundation-19, the-18)
ccomp(understand-11, foundation-19)
poss(life-22, their-21)
prep_of(foundation-19, life-22)
nsubj(explained-25, it-24)
root(ROOT-0, explained-25)
prep_to(explained-25, them-27)
amod(things-29, many-28)
dobj(explained-25, things-29)
nsubj(seemed-32, things-29)
nsubj(brought-36, things-29)
aux(seemed-32, had-31)
rcmod(things-29, seemed-32)
acomp(seemed-32, strange-33)
rcmod(things-29, brought-36)
conj_and(seemed-32, brought-36)
dobj(brought-36, them-37)
nsubj(reproach-39, them-37)
aux(reproach-39, to-38)
xcomp(brought-36, reproach-39)
dobj(reproach-39, themselves-40)
mark(seemed-45, that-41)
nsubj(seemed-45, they-42)
aux(seemed-45, should-43)
aux(seemed-45, have-44)
ccomp(reproach-39, seemed-45)
acomp(seemed-45, strange-46)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD ought)
      (S (RB not)
        (VP (TO to)
          (VP (VB be)
            (VP (VBN overlooked)
              (SBAR (IN that)
                (S
                  (NP (DT the) (JJ whole) (NN thing))
                  (VP (VBD was)
                    (VP (VBN wrought)
                      (PP (IN in)
                        (NP (DT the) (NNS children)))
                      (PP (IN without)
                        (NP
                          (NP (JJ directed) (NN influence))
                          (PP (IN of)
                            (NP
                              (NP (NN kindred))
                              (CC or)
                              (NP (DT any) (NN neighbor)))))))))))))))
    (. .)))

nsubj(ought-2, It-1)
nsubjpass(overlooked-6, It-1)
root(ROOT-0, ought-2)
neg(overlooked-6, not-3)
aux(overlooked-6, to-4)
auxpass(overlooked-6, be-5)
xcomp(ought-2, overlooked-6)
mark(wrought-12, that-7)
det(thing-10, the-8)
amod(thing-10, whole-9)
nsubjpass(wrought-12, thing-10)
auxpass(wrought-12, was-11)
ccomp(overlooked-6, wrought-12)
det(children-15, the-14)
prep_in(wrought-12, children-15)
amod(influence-18, directed-17)
prep_without(wrought-12, influence-18)
prep_of(influence-18, kindred-20)
det(neighbor-23, any-22)
prep_of(influence-18, neighbor-23)
conj_or(kindred-20, neighbor-23)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBN imitated)
      (NP (NN none)))
    (. .)))

nsubj(imitated-2, They-1)
root(ROOT-0, imitated-2)
dobj(imitated-2, none-3)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN galvanism))
        (PP (IN of)
          (NP (NN imitation))))
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT the) (NN life))
          (PP (IN of)
            (NP (DT the) (NN spirit))))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NN use))
        (PP (IN of)
          (NP
            (NP (NN form))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (NN love))
                (VP (VBZ is) (RB not)))))))
      (VP (VBZ is)
        (VP (VBG killing))))
    (. .)))

det(galvanism-2, The-1)
nsubj(life-8, galvanism-2)
prep_of(galvanism-2, imitation-4)
cop(life-8, is-5)
neg(life-8, not-6)
det(life-8, the-7)
root(ROOT-0, life-8)
det(spirit-11, the-10)
prep_of(life-8, spirit-11)
det(use-14, the-13)
nsubj(killing-22, use-14)
prep_of(use-14, form-16)
advmod(is-19, where-17)
nsubj(is-19, love-18)
rcmod(form-16, is-19)
neg(is-19, not-20)
aux(killing-22, is-21)
parataxis(life-8, killing-22)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (DT any) (NN one))
        (VP (VBZ is)
          (NP
            (NP (NNS desirous))
            (PP (IN of)
              (S
                (VP (VBG spreading)
                  (NP
                    (NP (DT the) (NN truth))
                    (SBAR
                      (S
                        (VP (VBD let)
                          (S
                            (NP (PRP him))
                            (VP (VB apply)
                              (NP (PRP himself))))
                          (, ,)
                          (PP (IN like)
                            (NP (DT these) (NNS children)))
                          (, ,)
                          (PP (TO to)
                            (NP
                              (NP (DT the))
                              (VP (VBG doing)
                                (PP (IN of)
                                  (NP (PRP it))))))))))
                  (: ;)
                  (S (RB not)
                    (VP (VBG obeying)
                      (NP (DT the) (NN truth)))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBZ is)
      (VP (VBG doubly)
        (NP
          (NP
            (NP (DT a) (NN liar))
            (VP (VBG pretending)
              (S
                (VP (TO to)
                  (VP (VB teach)
                    (NP (PRP it)))))))
          (: ;)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP he))
                (VP (VBZ obeys)
                  (NP (PRP it))
                  (ADVP (RB already)))))
            (, ,)
            (VP (VB let)
              (S
                (NP (PRP him))
                (VP (VB obey)
                  (S
                    (NP (PRP it))
                    (ADJP (JJR more))))))))))
    (. .)))

cc(doubly-33, And-1)
mark(desirous-6, if-2)
det(one-4, any-3)
nsubj(desirous-6, one-4)
cop(desirous-6, is-5)
advcl(doubly-33, desirous-6)
prepc_of(desirous-6, spreading-8)
det(truth-10, the-9)
dobj(spreading-8, truth-10)
rcmod(truth-10, let-11)
nsubj(apply-13, him-12)
ccomp(let-11, apply-13)
dobj(apply-13, himself-14)
det(children-18, these-17)
prep_like(let-11, children-18)
prep_to(let-11, the-21)
vmod(the-21, doing-22)
prep_of(doing-22, it-24)
neg(obeying-27, not-26)
parataxis(spreading-8, obeying-27)
det(truth-29, the-28)
dobj(obeying-27, truth-29)
nsubj(doubly-33, he-31)
aux(doubly-33, is-32)
root(ROOT-0, doubly-33)
det(liar-35, a-34)
dobj(doubly-33, liar-35)
vmod(liar-35, pretending-36)
aux(teach-38, to-37)
xcomp(pretending-36, teach-38)
dobj(teach-38, it-39)
mark(obeys-43, if-41)
nsubj(obeys-43, he-42)
advcl(let-47, obeys-43)
dobj(obeys-43, it-44)
advmod(obeys-43, already-45)
dep(liar-35, let-47)
nsubj(obey-49, him-48)
ccomp(let-47, obey-49)
nsubj(more-51, it-50)
xcomp(obey-49, more-51)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (NN life))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ awakes)
              (NP (NN life)))))))
    (. .)))

nsubj(life-3, It-1)
cop(life-3, is-2)
root(ROOT-0, life-3)
nsubj(awakes-5, life-3)
rcmod(life-3, awakes-5)
dobj(awakes-5, life-6)

(ROOT
  (S
    (NP
      (NP (DT All) (NN form))
      (PP (IN of)
        (NP (NN persuasion))))
    (VP (VBZ is)
      (ADJP (JJ empty)
        (PP (IN except)
          (PP (IN in)
            (NP
              (NP (JJ vital) (NN association))
              (PP (IN with)
                (NP (JJ regnant) (NN obedience))))))))
    (. .)))

det(form-2, All-1)
nsubj(empty-6, form-2)
prep_of(form-2, persuasion-4)
cop(empty-6, is-5)
root(ROOT-0, empty-6)
prep(empty-6, except-7)
pcomp(except-7, in-8)
amod(association-10, vital-9)
pobj(in-8, association-10)
amod(obedience-13, regnant-12)
prep_with(association-10, obedience-13)

(ROOT
  (S
    (S
      (VP
        (VP (VBG Talking))
        (CC and)
        (RB not)
        (VP (VBG doing))))
    (VP (VBZ is)
      (NP (JJ dry) (NN rot)))
    (. .)))

csubj(rot-7, Talking-1)
neg(doing-4, not-3)
conj_and(Talking-1, doing-4)
csubj(rot-7, doing-4)
cop(rot-7, is-5)
amod(rot-7, dry-6)
root(ROOT-0, rot-7)

(ROOT
  (S
    (S
      (NP (JJ Cottage) (NNS children))
      (VP (VBP are)
        (ADJP
          (ADJP (RB sometimes) (RBR more) (JJ fastidious)
            (PP (IN about)
              (NP (PRP$ their) (NN food))))
          (PP (IN than)
            (NP
              (NP (NNS children))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP have)
                    (NP (DT a) (JJR greater) (NN variety))))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (NP
          (NP (DT a)
            (ADJP (RBR more) (JJ delicate))
            (NN perception))
          (CC and)
          (NP
            (NP
              (NP (NN discrimination))
              (PP (IN in)
                (NP (DT the) (JJ simple) (NNS dishes)))
              (SBAR
                (WHPP (IN on)
                  (WHNP (WDT which)))
                (S
                  (NP (PRP they))
                  (VP (VBP thrive)))))
            (: ;)
            (NP
              (NP (JJ much) (NN choice))
              (, ,)
              (NP (IN though) (JJ little) (NN refusal)))))))
    (. .)))

amod(children-2, Cottage-1)
nsubj(fastidious-6, children-2)
cop(fastidious-6, are-3)
advmod(fastidious-6, sometimes-4)
advmod(fastidious-6, more-5)
root(ROOT-0, fastidious-6)
poss(food-9, their-8)
prep_about(fastidious-6, food-9)
prep_than(fastidious-6, children-11)
nsubj(have-13, children-11)
rcmod(children-11, have-13)
det(variety-16, a-14)
amod(variety-16, greater-15)
dobj(have-13, variety-16)
nsubj(have-19, they-18)
parataxis(fastidious-6, have-19)
det(perception-23, a-20)
advmod(delicate-22, more-21)
amod(perception-23, delicate-22)
dobj(have-19, perception-23)
dobj(have-19, discrimination-25)
conj_and(perception-23, discrimination-25)
prep_on(thrive-33, discrimination-25)
det(dishes-29, the-27)
amod(dishes-29, simple-28)
prep_in(discrimination-25, dishes-29)
nsubj(thrive-33, they-32)
rcmod(discrimination-25, thrive-33)
amod(choice-36, much-35)
dep(discrimination-25, choice-36)
amod(refusal-40, though-38)
amod(refusal-40, little-39)
appos(choice-36, refusal-40)

(ROOT
  (S
    (S
      (S
        (NP (NNP Andrew))
        (VP (VBD had)
          (NP (DT a) (JJ great) (NN dislike)
            (S
              (VP (TO to)
                (VP (VB lumps)
                  (PP (IN in)
                    (NP (PRP$ his) (NN porridge)))))))))
      (: ;)
      (CC and)
      (S
        (NP
          (NP (CD one) (NN day))
          (NP (DT the) (NN mother)))
        (VP (VBG having)
          (VP (VBN been)
            (ADJP
              (ADJP (RBR less) (JJ careful)
                (PP (IN than)
                  (ADJP (JJ usual))))
              (PP (IN in)
                (S
                  (VP (VBG cooking)
                    (NP (PRP it))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD made)
      (NP (DT a) (NN wry) (NN face))
      (PP (IN at)
        (NP (DT the) (JJ first) (NN spoonful))))
    (. .)))

nsubj(had-2, Andrew-1)
ccomp(made-28, had-2)
det(dislike-5, a-3)
amod(dislike-5, great-4)
dobj(had-2, dislike-5)
aux(lumps-7, to-6)
vmod(dislike-5, lumps-7)
poss(porridge-10, his-9)
prep_in(lumps-7, porridge-10)
num(day-14, one-13)
nsubj(careful-20, day-14)
det(mother-16, the-15)
dep(day-14, mother-16)
aux(careful-20, having-17)
cop(careful-20, been-18)
advmod(careful-20, less-19)
conj_and(had-2, careful-20)
ccomp(made-28, careful-20)
prep_than(careful-20, usual-22)
prepc_in(careful-20, cooking-24)
dobj(cooking-24, it-25)
nsubj(made-28, he-27)
root(ROOT-0, made-28)
det(face-31, a-29)
nn(face-31, wry-30)
dobj(made-28, face-31)
det(spoonful-35, the-33)
amod(spoonful-35, first-34)
prep_at(made-28, spoonful-35)

(ROOT
  (S (`` ``)
    (NP (NNP Andrew))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (NNP Sandy)))
      (, ,) (`` ``))
    (VP (VBP take)
      (NP
        (NP (DT no) (NN thought))
        (PP (IN for)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP ye))
              (VP (VBP eat)))))))
    (. .) ('' '')))

nsubj(take-9, Andrew-2)
parataxis(take-9, said-5)
nsubj(said-5, Sandy-6)
root(ROOT-0, take-9)
neg(thought-11, no-10)
dobj(take-9, thought-11)
dobj(eat-15, what-13)
nsubj(eat-15, ye-14)
prepc_for(thought-11, eat-15)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT a) (JJ wrong) (NN interpretation))))
    (, ,)
    (CC but)
    (S
      (NP (DT a) (NNS righteous))
      (VP (VBP use)
        (PP (IN of)
          (NP (DT the) (NN word)))))
    (. .)))

nsubj(interpretation-5, It-1)
cop(interpretation-5, was-2)
det(interpretation-5, a-3)
amod(interpretation-5, wrong-4)
root(ROOT-0, interpretation-5)
det(righteous-9, a-8)
nsubj(use-10, righteous-9)
conj_but(interpretation-5, use-10)
det(word-13, the-12)
prep_of(use-10, word-13)

(ROOT
  (S
    (VP (VB Happy)
      (NP (DT the) (NN soul))
      (SBAR (IN that)
        (S
          (NP (NNS mistakes))
          (ADVP
            (NP (DT the) (NN letter))
            (RB only))
          (VP (TO to)
            (VP (VB get)
              (PP (IN at)
                (NP (DT the) (NN spirit))))))))
    (. !)))

root(ROOT-0, Happy-1)
det(soul-3, the-2)
dobj(Happy-1, soul-3)
mark(get-10, that-4)
nsubj(get-10, mistakes-5)
det(letter-7, the-6)
npadvmod(only-8, letter-7)
advmod(get-10, only-8)
aux(get-10, to-9)
ccomp(Happy-1, get-10)
xcomp(Happy-1, get-10)
det(spirit-13, the-12)
prep_at(get-10, spirit-13)

(ROOT
  (S
    (NP
      (NP (NNP Andrew) (POS 's))
      (NN face))
    (VP
      (VP (VBZ smoothed)
        (NP (PRP itself)))
      (, ,)
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB clear)
              (PRT (RP up))))))
      (, ,)
      (CC and)
      (VP (VBD broke)
        (PP (IN at)
          (NP (JJ last)))
        (PP (IN into)
          (NP (DT a) (JJ sunny) (NN smile)))))
    (. .)))

poss(face-3, Andrew-1)
nsubj(smoothed-4, face-3)
nsubj(began-7, face-3)
nsubj(clear-9, face-3)
nsubj(broke-13, face-3)
root(ROOT-0, smoothed-4)
dobj(smoothed-4, itself-5)
conj_and(smoothed-4, began-7)
aux(clear-9, to-8)
xcomp(began-7, clear-9)
prt(clear-9, up-10)
conj_and(smoothed-4, broke-13)
prep_at(broke-13, last-15)
det(smile-19, a-17)
amod(smile-19, sunny-18)
prep_into(broke-13, smile-19)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD said)
        (NP (NN nothing)))
      (, ,)
      (CC but)
      (VP (VBP eat)
        (NP
          (NP (PRP$ his) (JJ full) (NN share))
          (PP (IN of)
            (NP (DT the) (NN porridge))))
        (PP (IN without)
          (NP (DT a) (NN frown)))))
    (. .)))

nsubj(said-2, He-1)
nsubj(eat-6, He-1)
root(ROOT-0, said-2)
dobj(said-2, nothing-3)
conj_but(said-2, eat-6)
poss(share-9, his-7)
amod(share-9, full-8)
dobj(eat-6, share-9)
det(porridge-12, the-11)
prep_of(share-9, porridge-12)
det(frown-15, a-14)
prep_without(eat-6, frown-15)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBD was)
        (NP (JJ practical) (NN religion))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (DT any) (NN one))
          (VP (VBP judge)
            (S
              (NP (PRP it))
              (ADJP (RB not) (JJ worth))
              (S
                (VP (VBG telling)))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP count)
        (S
          (NP (PRP$ his) (NN philosophy))
          (ADJP (JJ worthless)
            (PP (IN beside)
              (NP (PRP it)))))))
    (. .)))

nsubj(religion-4, This-1)
cop(religion-4, was-2)
amod(religion-4, practical-3)
root(ROOT-0, religion-4)
mark(judge-10, if-7)
det(one-9, any-8)
nsubj(judge-10, one-9)
advcl(count-17, judge-10)
nsubj(telling-14, it-11)
neg(worth-13, not-12)
dep(telling-14, worth-13)
xcomp(judge-10, telling-14)
nsubj(count-17, I-16)
conj_and(religion-4, count-17)
poss(philosophy-19, his-18)
nsubj(worthless-20, philosophy-19)
xcomp(count-17, worthless-20)
prep_beside(worthless-20, it-22)

(ROOT
  (S
    (NP (PDT Such) (DT a) (NN doer))
    (VP (VBZ knows)
      (ADJP
        (ADJP (JJR more))
        (SBAR (IN than)
          (S
            (NP (PDT such) (DT a) (NN reader))
            (VP (MD will)
              (ADVP (RB ever))
              (VP (VB know))))))
      (, ,)
      (SBAR (IN except)
        (S
          (NP (PRP he))
          (VP (VBP take)
            (S
              (NP (RB precisely) (DT the) (JJ same) (NN way))
              (VP (TO to)
                (VP (VB learn))))))))
    (. .)))

predet(doer-3, Such-1)
det(doer-3, a-2)
nsubj(knows-4, doer-3)
root(ROOT-0, knows-4)
acomp(knows-4, more-5)
mark(know-12, than-6)
predet(reader-9, such-7)
det(reader-9, a-8)
nsubj(know-12, reader-9)
aux(know-12, will-10)
advmod(know-12, ever-11)
ccomp(more-5, know-12)
mark(take-16, except-14)
nsubj(take-16, he-15)
advcl(knows-4, take-16)
advmod(way-20, precisely-17)
det(way-20, the-18)
amod(way-20, same-19)
dobj(take-16, way-20)
nsubj(learn-22, way-20)
aux(learn-22, to-21)
xcomp(take-16, learn-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS children))
      (PP (IN of)
        (NP (NNP God))))
    (VP (VBP do)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP He))
          (VP (MD would)
            (VP (VB have)
              (S
                (NP (PRP them))
                (VP
                  (VP (VBP do))
                  (, ,)
                  (CC and)
                  (VP (VBP are)
                    (VP (VBN taught)
                      (PP (IN of)
                        (NP (PRP Him))))))))))))
    (. .)))

det(children-2, The-1)
nsubj(do-5, children-2)
prep_of(children-2, God-4)
root(ROOT-0, do-5)
dobj(have-9, what-6)
nsubj(have-9, He-7)
aux(have-9, would-8)
ccomp(do-5, have-9)
nsubj(do-11, them-10)
nsubjpass(taught-15, them-10)
ccomp(have-9, do-11)
auxpass(taught-15, are-14)
ccomp(have-9, taught-15)
conj_and(do-11, taught-15)
prep_of(taught-15, Him-17)

(ROOT
  (S
    (NP
      (NP (DT A) (NN report))
      (PP (IN at)
        (NP (NN length))))
    (VP (VBD reached)
      (NP
        (NP
          (NP (DT the) (NN pastor))
          (, ,)
          (NP (RB now) (DT an) (JJ old) (NN man))
          (, ,))
        (PP (IN of)
          (NP
            (ADJP (JJ ripe))
            (NN heart)
            (CC and)
            (JJ true) (NN insight))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP
            (NP (JJ certain) (NNS children))
            (PP (IN in)
              (NP (PRP$ his) (NN parish))))
          (`` ``)
          (VP (VBD played)
            (PP (IN at)
              (NP
                (NP (DT the) (NNP Lord) (POS 's))
                (NN Supper)))))))
    (. .) ('' '')))

det(report-2, A-1)
nsubj(reached-5, report-2)
prep_at(report-2, length-4)
root(ROOT-0, reached-5)
det(pastor-7, the-6)
dobj(reached-5, pastor-7)
advmod(man-12, now-9)
det(man-12, an-10)
amod(man-12, old-11)
appos(pastor-7, man-12)
amod(heart-16, ripe-15)
prep_of(pastor-7, heart-16)
amod(insight-19, true-18)
prep_of(pastor-7, insight-19)
conj_and(heart-16, insight-19)
mark(played-28, that-21)
amod(children-23, certain-22)
nsubj(played-28, children-23)
poss(parish-26, his-25)
prep_in(children-23, parish-26)
ccomp(reached-5, played-28)
det(Lord-31, the-30)
poss(Supper-33, Lord-31)
prep_at(played-28, Supper-33)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD was)
        (ADJP (JJ shocked)))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PP (TO to)
          (NP (PRP$ their) (NNS parents)))))
    (. .)))

nsubj(shocked-3, He-1)
nsubj(went-6, He-1)
cop(shocked-3, was-2)
root(ROOT-0, shocked-3)
conj_and(shocked-3, went-6)
poss(parents-9, their-8)
prep_to(went-6, parents-9)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD knew)
      (NP
        (NP (NN nothing))
        (PP (IN of)
          (NP (DT the) (NN matter)))))
    (. .)))

nsubj(knew-2, They-1)
root(ROOT-0, knew-2)
dobj(knew-2, nothing-3)
det(matter-6, the-5)
prep_of(nothing-3, matter-6)

(ROOT
  (S
    (S
      (NP (DT The) (CD three) (NNS children))
      (VP (VBD were)
        (VP (VBN sought))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN pastor))
      (VP (VBD had)
        (NP
          (NP (DT a) (JJ private) (NN interview))
          (PP (IN with)
            (NP (PRP them))))))
    (. .)))

det(children-3, The-1)
num(children-3, three-2)
nsubjpass(sought-5, children-3)
auxpass(sought-5, were-4)
root(ROOT-0, sought-5)
det(pastor-9, the-8)
nsubj(had-10, pastor-9)
conj_and(sought-5, had-10)
det(interview-13, a-11)
amod(interview-13, private-12)
dobj(had-10, interview-13)
prep_with(interview-13, them-15)

(ROOT
  (S
    (PP (IN From)
      (NP (PRP it)))
    (NP (PRP he))
    (VP (VBD reappeared)
      (PP (IN with)
        (NP
          (NP (DT a) (NN solemn))
          (, ,)
          (NP (JJ pale) (NN face))
          (, ,)
          (CC and)
          (NP (JJ silent) (NN tongue)))))
    (. .)))

prep_from(reappeared-4, it-2)
nsubj(reappeared-4, he-3)
root(ROOT-0, reappeared-4)
det(solemn-7, a-6)
prep_with(reappeared-4, solemn-7)
amod(face-10, pale-9)
prep_with(reappeared-4, face-10)
conj_and(solemn-7, face-10)
amod(tongue-14, silent-13)
prep_with(reappeared-4, tongue-14)
conj_and(solemn-7, tongue-14)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD asked)
      (S
        (NP (PRP him))
        (NP
          (NP (DT the) (NN result))
          (PP (IN of)
            (NP (PRP$ his) (NN inquiry))))))
    (. .)))

nsubj(asked-2, They-1)
root(ROOT-0, asked-2)
nsubj(result-5, him-3)
det(result-5, the-4)
xcomp(asked-2, result-5)
poss(inquiry-8, his-7)
prep_of(result-5, inquiry-8)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD answered)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD was) (RB not)
              (ADJP (JJ prepared))
              (S
                (VP (TO to)
                  (VP (VB interfere))))
              (: :)
              (SBAR (IN as)
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (VP (VBG talking)
                      (PP (IN with)
                        (NP (PRP them))))))))))))
    (, ,)
    (NP (DT the) (NN warning))
    (VP (VBD came)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBD were)
            (NP (NNS necks)
              (CC and)
              (NNS mill-stones))))))
    (. .)))

nsubj(answered-2, He-1)
ccomp(came-20, answered-2)
mark(prepared-7, that-3)
nsubj(prepared-7, he-4)
nsubj(interfere-9, he-4)
cop(prepared-7, was-5)
neg(prepared-7, not-6)
ccomp(answered-2, prepared-7)
aux(interfere-9, to-8)
xcomp(prepared-7, interfere-9)
mark(talking-14, as-11)
nsubj(talking-14, he-12)
aux(talking-14, was-13)
advcl(prepared-7, talking-14)
parataxis(prepared-7, talking-14)
prep_with(talking-14, them-16)
det(warning-19, the-18)
nsubj(came-20, warning-19)
root(ROOT-0, came-20)
mark(were-23, that-21)
expl(were-23, there-22)
ccomp(came-20, were-23)
nsubj(were-23, necks-24)
nsubj(were-23, mill-stones-26)
conj_and(necks-24, mill-stones-26)

(ROOT
  (S
    (NP (DT The) (JJ next) (NNP Sunday))
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD preached)
          (NP (DT a) (NN sermon))
          (PP (IN from)
            (NP (DT the) (NN text)))))
      (, ,))
    (`` ``)
    (ADVP (RB Out)
      (PP (IN of)
        (NP
          (NP (DT the) (NN month))
          (PP (IN of)
            (NP (NNS babes)
              (CC and)
              (NNS sucklings))))))
    (NP (PRP Thou))
    (VP (VBP hast)
      (NP (JJ perfected) (NN praise)))
    (. .) ('' '')))

det(Sunday-3, The-1)
amod(Sunday-3, next-2)
tmod(hast-22, Sunday-3)
nsubj(preached-5, he-4)
parataxis(hast-22, preached-5)
det(sermon-7, a-6)
dobj(preached-5, sermon-7)
det(text-10, the-9)
prep_from(preached-5, text-10)
det(month-16, the-15)
prep_out_of(hast-22, month-16)
prep_of(month-16, babes-18)
prep_of(month-16, sucklings-20)
conj_and(babes-18, sucklings-20)
nsubj(hast-22, Thou-21)
root(ROOT-0, hast-22)
amod(praise-24, perfected-23)
dobj(hast-22, praise-24)

(ROOT
  (S
    (NP (DT The) (NNS fathers)
      (CC and)
      (NNS mothers))
    (VP
      (VP (VBD made)
        (NP (NN inquisition)))
      (, ,)
      (CC and)
      (VP (VBD found)
        (NP (DT no) (NN desire))
        (S
          (VP (TO to)
            (VP (VB conceal))))))
    (. .)))

det(fathers-2, The-1)
nsubj(made-5, fathers-2)
nsubj(found-9, fathers-2)
conj_and(fathers-2, mothers-4)
nsubj(made-5, mothers-4)
root(ROOT-0, made-5)
dobj(made-5, inquisition-6)
conj_and(made-5, found-9)
neg(desire-11, no-10)
dobj(found-9, desire-11)
aux(conceal-13, to-12)
vmod(found-9, conceal-13)

(ROOT
  (S
    (ADVP (RB Wisely)
      (CC or)
      (RB not))
    (, ,)
    (NP (PRP they))
    (VP (VBD forbade)
      (NP (DT the) (NN observance)))
    (. .)))

advmod(forbade-6, Wisely-1)
conj_or(Wisely-1, not-3)
advmod(forbade-6, not-3)
nsubj(forbade-6, they-5)
root(ROOT-0, forbade-6)
det(observance-8, the-7)
dobj(forbade-6, observance-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD cost)
        (SBAR
          (S
            (NP (NNP Andrew))
            (ADVP (RB much))
            (VP (VBD thought)
              (SBAR (IN whether)
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (VP (VBN justified)
                      (PP (IN in)
                        (S
                          (VP (VBG obeying)
                            (NP (PRP them))))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD saw)
        (ADJP (DT that) (JJ right)
          (CC and)
          (JJ wrong))
        (SBAR
          (SBAR (IN in)
            (S
              (NP (PRP itself))
              (VP (VBD was) (RB not)
                (ADJP (JJ concerned)))))
          (, ,)
          (CC and)
          (SBAR (IN that)
            (S
              (NP (DT the) (NNP Lord))
              (VP (MD would)
                (VP (VB have)
                  (S
                    (NP (PRP them))
                    (VP (VB obey)
                      (NP (PRP$ their) (NNS parents)))))))))))
    (. .)))

nsubj(cost-2, It-1)
root(ROOT-0, cost-2)
nsubj(thought-5, Andrew-3)
advmod(thought-5, much-4)
ccomp(cost-2, thought-5)
mark(justified-9, whether-6)
nsubjpass(justified-9, he-7)
auxpass(justified-9, was-8)
ccomp(thought-5, justified-9)
prepc_in(justified-9, obeying-11)
dobj(obeying-11, them-12)
nsubj(saw-16, he-15)
conj_but(cost-2, saw-16)
dep(right-18, that-17)
acomp(saw-16, right-18)
acomp(saw-16, wrong-20)
conj_and(right-18, wrong-20)
mark(concerned-25, in-21)
nsubj(concerned-25, itself-22)
cop(concerned-25, was-23)
neg(concerned-25, not-24)
advcl(saw-16, concerned-25)
ccomp(saw-16, concerned-25)
mark(have-32, that-28)
det(Lord-30, the-29)
nsubj(have-32, Lord-30)
aux(have-32, would-31)
advcl(saw-16, have-32)
ccomp(saw-16, have-32)
conj_and(concerned-25, have-32)
nsubj(obey-34, them-33)
ccomp(have-32, obey-34)
poss(parents-36, their-35)
dobj(obey-34, parents-36)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ necessary)
        (S
          (VP (TO to)
            (VP (VB tell)
              (ADVP (RB so) (RB much))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ previous) (NN history))
                  (PP (IN of)
                    (NP (NNP Andrew)))))
              (, ,)
              (SBAR (IN lest)
                (S
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ remains)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN told))))))))
                  (VP (MD should)
                    (ADVP (RB perhaps))
                    (VP
                      (VP (VB be)
                        (ADJP (JJ unintelligible)))
                      (CC or)
                      (VP (VB seem)
                        (ADJP (JJ incredible))
                        (PP (IN without)
                          (NP (PRP it)))))))))))))
    (. .)))

nsubj(necessary-3, It-1)
nsubj(tell-5, It-1)
cop(necessary-3, was-2)
root(ROOT-0, necessary-3)
aux(tell-5, to-4)
xcomp(necessary-3, tell-5)
advmod(much-7, so-6)
advmod(tell-5, much-7)
det(history-11, the-9)
amod(history-11, previous-10)
prep_of(tell-5, history-11)
prep_of(history-11, Andrew-13)
mark(unintelligible-24, lest-15)
nsubj(remains-17, what-16)
nsubjpass(told-20, what-16)
csubj(unintelligible-24, remains-17)
csubj(seem-26, remains-17)
aux(told-20, to-18)
auxpass(told-20, be-19)
xcomp(remains-17, told-20)
aux(unintelligible-24, should-21)
advmod(unintelligible-24, perhaps-22)
cop(unintelligible-24, be-23)
advcl(tell-5, unintelligible-24)
advcl(tell-5, seem-26)
conj_or(unintelligible-24, seem-26)
acomp(seem-26, incredible-27)
prep_without(seem-26, it-29)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN character))
        (PP (IN like)
          (NP (PRP$ his))))
      (VP (MD can) (RB not)
        (VP (VB be)
          (VP (VBN formed)
            (PP (IN in)
              (NP (DT a) (NN day)))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (MD must)
        (ADVP (RB early))
        (VP (VB begin)
          (S
            (VP (TO to)
              (VP (VB grow)))))))
    (. .)))

det(character-2, A-1)
nsubjpass(formed-8, character-2)
prep_like(character-2, his-4)
aux(formed-8, can-5)
neg(formed-8, not-6)
auxpass(formed-8, be-7)
root(ROOT-0, formed-8)
det(day-11, a-10)
prep_in(formed-8, day-11)
nsubj(begin-16, it-13)
nsubj(grow-18, it-13)
aux(begin-16, must-14)
advmod(begin-16, early-15)
parataxis(formed-8, begin-16)
aux(grow-18, to-17)
xcomp(begin-16, grow-18)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN bond))
        (VP
          (ADVP (RB thus))
          (VBN bound)
          (PP (IN between)
            (NP (DT the) (NNS children))))
        (, ,)
        (VP (VBG altering)
          (PP (IN in)
            (NP (NN form)))
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (VBD grew)))))
        (, ,))
      (VP (VBD was)
        (VP
          (ADVP (RB never))
          (VBN severed))))
    (: ;)
    (S
      (NP (CC nor))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJR lower) (NN creation))
          (VP
            (ADVP (RB ever))
            (VBN cut)
            (PRT (RP off))
            (PP (IN from)
              (NP (PRP$ its) (NN share)))
            (PP (IN in)
              (NP
                (NP (DT the) (NNS petitions))
                (PP (IN of)
                  (NP
                    (NP (DT any) (NN one))
                    (PP (IN of)
                      (NP (PRP them)))))))))))
    (. .)))

det(bond-2, The-1)
nsubjpass(severed-18, bond-2)
advmod(bound-4, thus-3)
vmod(bond-2, bound-4)
det(children-7, the-6)
prep_between(bound-4, children-7)
vmod(bond-2, altering-9)
prep_in(altering-9, form-11)
mark(grew-14, as-12)
nsubj(grew-14, they-13)
advcl(altering-9, grew-14)
auxpass(severed-18, was-16)
neg(severed-18, never-17)
root(ROOT-0, severed-18)
nsubj(creation-24, nor-20)
cop(creation-24, was-21)
det(creation-24, the-22)
amod(creation-24, lower-23)
parataxis(severed-18, creation-24)
advmod(cut-26, ever-25)
vmod(creation-24, cut-26)
prt(cut-26, off-27)
poss(share-30, its-29)
prep_from(cut-26, share-30)
det(petitions-33, the-32)
prep_in(cut-26, petitions-33)
det(one-36, any-35)
prep_of(petitions-33, one-36)
prep_of(one-36, them-38)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBD ceased)
          (S
            (VP (TO to)
              (VP (VB assemble)
                (PP (IN as)
                  (NP (DT a) (NN community)))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD continued)
      (S
        (VP (TO to)
          (VP (VB act)
            (PP (IN on)
              (NP (DT the) (JJ same) (JJ live) (NNS principles)))))))
    (. .)))

advmod(ceased-3, When-1)
nsubj(ceased-3, they-2)
nsubj(assemble-5, they-2)
advcl(continued-11, ceased-3)
aux(assemble-5, to-4)
xcomp(ceased-3, assemble-5)
det(community-8, a-7)
prep_as(assemble-5, community-8)
nsubj(continued-11, they-10)
nsubj(act-13, they-10)
root(ROOT-0, continued-11)
aux(act-13, to-12)
xcomp(continued-11, act-13)
det(principles-18, the-15)
amod(principles-18, same-16)
amod(principles-18, live-17)
prep_on(act-13, principles-18)

(ROOT
  (S
    (SBAR
      (ADVP (RB Gladly))
      (IN as)
      (S
        (NP (PRP$ their) (NNS parents))
        (VP (MD would)
          (VP (VB have)
            (VP (VBN sent)
              (NP (PRP them))
              (PP (TO to)
                (NP (NN college))))))))
    (, ,)
    (NP (NNP Andrew)
      (CC and)
      (NNP Sandy))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB leave)
            (NP (NN school)))))
      (S
        (ADVP (RB only))
        (VP (TO to)
          (VP (VB work)
            (PP (IN on)
              (NP (DT the) (NN farm)))))))
    (. .)))

advmod(sent-7, Gladly-1)
mark(sent-7, as-2)
poss(parents-4, their-3)
nsubj(sent-7, parents-4)
aux(sent-7, would-5)
aux(sent-7, have-6)
advcl(had-15, sent-7)
dobj(sent-7, them-8)
prep_to(sent-7, college-10)
nsubj(had-15, Andrew-12)
nsubj(leave-17, Andrew-12)
nsubj(work-21, Andrew-12)
conj_and(Andrew-12, Sandy-14)
nsubj(had-15, Sandy-14)
nsubj(leave-17, Sandy-14)
nsubj(work-21, Sandy-14)
root(ROOT-0, had-15)
aux(leave-17, to-16)
xcomp(had-15, leave-17)
dobj(leave-17, school-18)
advmod(work-21, only-19)
aux(work-21, to-20)
xcomp(had-15, work-21)
det(farm-24, the-23)
prep_on(work-21, farm-24)

(ROOT
  (S (CC But)
    (NP (PRP they))
    (VP (VBD carried)
      (NP (PRP$ their) (NNS studies))
      (PP (IN on) (IN from)
        (NP
          (NP (DT the) (NN point))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBD had)
                (VP (VBN reached))))))))
    (. .)))

cc(carried-3, But-1)
nsubj(carried-3, they-2)
root(ROOT-0, carried-3)
poss(studies-5, their-4)
dobj(carried-3, studies-5)
dep(carried-3, on-6)
det(point-9, the-8)
prep_from(carried-3, point-9)
nsubj(reached-12, they-10)
aux(reached-12, had-11)
rcmod(point-9, reached-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (MD could) (RB not)
          (VP (VB get)
            (ADVP (RBR further))
            (PP (IN without)
              (NP (NN help)))))))
    (, ,)
    (NP (PRP they))
    (VP
      (VP (VBD sought))
      (CC and)
      (VP (VBD found)
        (NP (PRP it))))
    (. .)))

advmod(get-5, When-1)
nsubj(get-5, they-2)
aux(get-5, could-3)
neg(get-5, not-4)
advcl(sought-11, get-5)
advmod(get-5, further-6)
prep_without(get-5, help-8)
nsubj(sought-11, they-10)
nsubj(found-13, they-10)
root(ROOT-0, sought-11)
conj_and(sought-11, found-13)
dobj(found-13, it-14)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP
          (NP (DT a) (NN year))
          (CC or)
          (NP (CD two))))
      (NP (PRP they))
      (VP (VBD went)
        (PP (IN in)
          (NP (DT the) (NN winter)))
        (PP (TO to)
          (NP (DT an) (NN evening) (NN school)))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD took)
        (ADVP (RB so) (RB much))
        (NP (NN time))
        (S
          (VP (TO to)
            (VP (VB go)
              (CC and)
              (VB come)
              (SBAR (IN that)
                (S
                  (NP (PRP they))
                  (VP (VBD found)
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (MD could)
                          (VP (VB make)
                            (NP (JJR more) (NN progress))
                            (PP (IN by)
                              (S
                                (VP (VBG working)
                                  (PP (IN at)
                                    (NP (NN home))))))))))))))))))
    (. .)))

det(year-3, a-2)
prep_for(went-7, year-3)
conj_or(year-3, two-5)
prep_for(went-7, two-5)
nsubj(went-7, they-6)
root(ROOT-0, went-7)
det(winter-10, the-9)
prep_in(went-7, winter-10)
det(school-14, an-12)
nn(school-14, evening-13)
prep_to(went-7, school-14)
nsubj(took-18, it-17)
conj_but(went-7, took-18)
advmod(much-20, so-19)
advmod(took-18, much-20)
dobj(took-18, time-21)
aux(go-23, to-22)
vmod(took-18, go-23)
vmod(took-18, come-25)
conj_and(go-23, come-25)
mark(found-28, that-26)
nsubj(found-28, they-27)
ccomp(go-23, found-28)
nsubj(make-31, they-29)
aux(make-31, could-30)
ccomp(found-28, make-31)
amod(progress-33, more-32)
dobj(make-31, progress-33)
prepc_by(make-31, working-35)
prep_at(working-35, home-37)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBP help)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBD sought)
                (SBAR
                  (SBAR
                    (S
                      (VP (VBD went)
                        (NP (DT a) (JJ long) (NN way)))))
                  (, ,)
                  (CC and)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP they))
                      (VP (VBD learned)))))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD knew))
    (. .)))

nsubj(help-2, What-1)
advcl(knew-16, help-2)
nsubj(sought-4, they-3)
ccomp(help-2, sought-4)
dep(sought-4, went-5)
det(way-8, a-6)
amod(way-8, long-7)
dobj(went-5, way-8)
dobj(learned-13, what-11)
nsubj(learned-13, they-12)
dep(sought-4, learned-13)
conj_and(went-5, learned-13)
nsubj(knew-16, they-15)
root(ROOT-0, knew-16)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP
            (NP (DT the) (NN day) (POS 's))
            (NN work))
          (VP (VBD was)
            (UCP
              (ADJP (IN over))
              (, ,)
              (CC and)
              (NP (DT the) (NN evening) (NN meal))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD went)
        (PP (TO to)
          (NP
            (NP
              (NP (DT the) (NN room))
              (SBAR
                (S
                  (NP (PRP$ their) (JJ own) (NNS hands))
                  (VP (VBD had)
                    (VP (VBN made)
                      (ADJP (JJ convenient))
                      (PP (IN for)
                        (NP (NN study))))))))
            (CONJP (RB as) (RB well) (IN as))
            (NP (NN sleep))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD resumed)
        (NP
          (NP (DT the) (NN labor))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBD had)
                (VP (VBN dropped)
                  (NP (DT the) (NN night))
                  (PP (IN before)))))))))
    (. .)))

advmod(over-7, When-1)
det(day-3, the-2)
poss(work-5, day-3)
nsubj(over-7, work-5)
cop(over-7, was-6)
advcl(went-15, over-7)
det(meal-12, the-10)
nn(meal-12, evening-11)
conj_and(over-7, meal-12)
advcl(went-15, meal-12)
nsubj(went-15, they-14)
root(ROOT-0, went-15)
det(room-18, the-17)
prep_to(went-15, room-18)
poss(hands-21, their-19)
amod(hands-21, own-20)
nsubj(made-23, hands-21)
aux(made-23, had-22)
rcmod(room-18, made-23)
acomp(made-23, convenient-24)
prep_for(made-23, study-26)
prep_to(went-15, sleep-30)
conj_and(room-18, sleep-30)
expl(resumed-34, there-33)
conj_and(went-15, resumed-34)
det(labor-36, the-35)
dobj(resumed-34, labor-36)
nsubj(resumed-34, labor-36)
prep_before(dropped-39, labor-36)
nsubj(dropped-39, they-37)
aux(dropped-39, had-38)
rcmod(labor-36, dropped-39)
det(night-41, the-40)
tmod(dropped-39, night-41)

(ROOT
  (S
    (S
      (ADVP (RB Together))
      (NP (PRP they))
      (VP (VBP read)
        (NP
          (NP (JJ Greek))
          (CC and)
          (NP (NNS mathematics)))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Andrew))
      (VP (VBD worked)
        (ADVP (RB mainly))
        (PP (IN in)
          (NP
            (NP (NN literature))
            (, ,)
            (NP
              (NP (NNP Sandy))
              (PP (IN in)
                (NP (NNS mechanics))))))))
    (. .)))

advmod(read-3, Together-1)
nsubj(read-3, they-2)
root(ROOT-0, read-3)
dobj(read-3, Greek-4)
dobj(read-3, mathematics-6)
conj_and(Greek-4, mathematics-6)
nsubj(worked-10, Andrew-9)
conj_but(read-3, worked-10)
advmod(worked-10, mainly-11)
prep_in(worked-10, literature-13)
appos(literature-13, Sandy-15)
prep_in(Sandy-15, mechanics-17)

(ROOT
  (S
    (PP (IN On)
      (NP (NNP Saturdays)))
    (, ,)
    (NP (NNP Sandy))
    (ADVP (RB generally))
    (VP (VBD wrought)
      (PP (IN at)
        (NP (DT some) (NN model)))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (NNP Andrew))
          (VP (VBP read)
            (PP (TO to)
              (NP (PRP him)))))))
    (. .)))

prep_on(wrought-6, Saturdays-2)
nsubj(wrought-6, Sandy-4)
advmod(wrought-6, generally-5)
root(ROOT-0, wrought-6)
det(model-9, some-8)
prep_at(wrought-6, model-9)
mark(read-13, while-11)
nsubj(read-13, Andrew-12)
advcl(wrought-6, read-13)
prep_to(read-13, him-15)

(ROOT
  (S
    (PP (IN On)
      (NP (NNP Sundays)))
    (, ,)
    (NP (PRP they))
    (VP
      (ADVP
        (ADVP (RB always))
        (PRN (, ,)
          (PP (IN for)
            (NP
              (NP (DT an) (NN hour))
              (CC or)
              (NP (CD two))))
          (, ,)))
      (VBP read)
      (NP (DT the) (NNP Bible))
      (ADVP (RB together)))
    (. .)))

prep_on(read-13, Sundays-2)
nsubj(read-13, they-4)
advmod(read-13, always-5)
dep(always-5, for-7)
det(hour-9, an-8)
pobj(for-7, hour-9)
pobj(for-7, two-11)
conj_or(hour-9, two-11)
root(ROOT-0, read-13)
det(Bible-15, the-14)
dobj(read-13, Bible-15)
advmod(read-13, together-16)

(ROOT
  (S
    (S
      (NP (DT The) (NNS brothers))
      (VP (VBD were) (RB not)
        (ADJP
          (NP (DT a) (RB little))
          (VBN amused)
          (PP (IN with)
            (NP
              (NP
                (NP (NNP Miss) (NNP Fordyce) (POS 's))
                (NN patronage))
              (PP (IN of)
                (NP (NNP Andrew))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBD had)
        (ADVP (RB now))
        (VP (VBN been)
          (ADVP (RB too) (RB long))
          (VP (VBG endeavoring)
            (S
              (VP (TO to)
                (VP (VB bring)
                  (PP (IN into)
                    (NP (NN subjection)))
                  (NP
                    (NP (DT the) (NN sense))
                    (PP (IN of)
                      (NP (JJ personal) (NN importance)))))))
            (, ,)
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP (NN offense))
                  (PP (IN at)
                    (NP (PRP it))))))))))
    (. .)))

det(brothers-2, The-1)
nsubjpass(amused-7, brothers-2)
auxpass(amused-7, were-3)
neg(amused-7, not-4)
det(little-6, a-5)
dep(amused-7, little-6)
root(ROOT-0, amused-7)
nn(Fordyce-10, Miss-9)
poss(patronage-12, Fordyce-10)
prep_with(amused-7, patronage-12)
prep_of(patronage-12, Andrew-14)
nsubj(endeavoring-23, they-17)
nsubj(bring-25, they-17)
nsubj(take-35, they-17)
aux(endeavoring-23, had-18)
advmod(endeavoring-23, now-19)
aux(endeavoring-23, been-20)
advmod(long-22, too-21)
advmod(endeavoring-23, long-22)
conj_but(amused-7, endeavoring-23)
aux(bring-25, to-24)
xcomp(endeavoring-23, bring-25)
prep_into(bring-25, subjection-27)
det(sense-29, the-28)
dobj(bring-25, sense-29)
amod(importance-32, personal-31)
prep_of(sense-29, importance-32)
aux(take-35, to-34)
xcomp(endeavoring-23, take-35)
dobj(take-35, offense-36)
prep_at(take-35, it-38)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD had)
        (VP (VBN gone)
          (PP (IN into)
            (NP (NN service))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (ADVP (RB seldom))
      (VP (VBD saw)
        (NP (PRP her))
        (PP (IN except)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP she))
              (VP (VBD came)
                (NP (NN home))
                (PP (IN for)
                  (NP (DT a) (NN day)))
                (PP (IN at)
                  (NP (DT the) (NN term)))))))))
    (. .)))

nsubj(gone-3, Dawtie-1)
aux(gone-3, had-2)
root(ROOT-0, gone-3)
prep_into(gone-3, service-5)
nsubj(saw-10, they-8)
advmod(saw-10, seldom-9)
conj_and(gone-3, saw-10)
dobj(saw-10, her-11)
advmod(came-15, when-13)
nsubj(came-15, she-14)
prepc_except(saw-10, came-15)
dobj(came-15, home-16)
det(day-19, a-18)
prep_for(came-15, day-19)
det(term-22, the-21)
prep_at(came-15, term-22)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (NP (DT a) (JJ grown) (NN woman))
        (ADVP (RB now))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (JJ same) (VBG loving) (NN child))
      (PP (IN as)
        (ADVP (RB before))))
    (. .)))

nsubj(woman-5, She-1)
cop(woman-5, was-2)
det(woman-5, a-3)
amod(woman-5, grown-4)
root(ROOT-0, woman-5)
advmod(woman-5, now-6)
det(child-12, the-9)
amod(child-12, same-10)
amod(child-12, loving-11)
conj_but(woman-5, child-12)
dep(child-12, as-13)
pcomp(as-13, before-14)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD counted)
      (S
        (NP (DT the) (NNS brothers))
        (NP (PRP$ her) (NNS superiors)))
      (, ,)
      (SBAR (RB just) (IN as)
        (S
          (NP (PRP they))
          (VP (VBD counted)
            (NP
              (NP (DT the) (NN laird))
              (CC and)
              (NP
                (NP (PRP$ his) (NN daughter))
                (NP (PRP$ their) (NNS superiors))))))))
    (. .)))

nsubj(counted-2, She-1)
root(ROOT-0, counted-2)
det(brothers-4, the-3)
nsubj(superiors-6, brothers-4)
poss(superiors-6, her-5)
xcomp(counted-2, superiors-6)
advmod(counted-11, just-8)
mark(counted-11, as-9)
nsubj(counted-11, they-10)
advcl(counted-2, counted-11)
det(laird-13, the-12)
dobj(counted-11, laird-13)
poss(daughter-16, his-15)
dobj(counted-11, daughter-16)
conj_and(laird-13, daughter-16)
poss(superiors-18, their-17)
dep(daughter-16, superiors-18)

(ROOT
  (S
    (S (CC But)
      (NP (NNP whereas) (NNP Alexa))
      (VP (VBD claimed)
        (NP (DT the) (NN homage))))
    (, ,)
    (NP (NNP Dawtie))
    (VP (VBD yielded)
      (SBAR
        (WHADVP (WRB where))
        (S
          (VP (VBD was)
            (NP
              (NP (DT no) (NN thought))
              (PP (IN of)
                (S
                  (VP (VBG claiming)
                    (NP (PRP it))))))))))
    (. .)))

cc(claimed-4, But-1)
nn(Alexa-3, whereas-2)
nsubj(claimed-4, Alexa-3)
ccomp(yielded-9, claimed-4)
det(homage-6, the-5)
dobj(claimed-4, homage-6)
nsubj(yielded-9, Dawtie-8)
root(ROOT-0, yielded-9)
advmod(thought-13, where-10)
cop(thought-13, was-11)
neg(thought-13, no-12)
advcl(yielded-9, thought-13)
prepc_of(thought-13, claiming-15)
dobj(claiming-15, it-16)

(ROOT
  (S
    (NP (DT The) (NNS brothers))
    (VP (VBD regarded)
      (NP (PRP her))
      (PP (IN as)
        (NP (PRP$ their) (NN sister))))
    (. .)))

det(brothers-2, The-1)
nsubj(regarded-3, brothers-2)
root(ROOT-0, regarded-3)
dobj(regarded-3, her-4)
poss(sister-7, their-6)
prep_as(regarded-3, sister-7)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP (PRP she))
        (VP (VBD was)
          (ADJP (JJR poorer))
          (PP (IN than)
            (NP (PRP they))))))
    (, ,)
    (ADVP (RB only))
    (VP (VBD made)
      (NP (PRP them))
      (NP (DT the)
        (ADJP
          (ADJP (RBR more) (JJ watchful)
            (PP (IN over)
              (NP (PRP her))))
          (, ,)
          (CC and)
          (ADJP (IN if) (JJ possible))))
      (NP (DT the)
        (ADJP (RBR more) (JJ respectful)))
      (PP (TO to)
        (NP (PRP her))))
    (. .)))

mark(poorer-4, That-1)
nsubj(poorer-4, she-2)
cop(poorer-4, was-3)
ccomp(made-9, poorer-4)
prep_than(poorer-4, they-6)
advmod(made-9, only-8)
root(ROOT-0, made-9)
iobj(made-9, them-10)
det(watchful-13, the-11)
advmod(watchful-13, more-12)
iobj(made-9, watchful-13)
prep_over(watchful-13, her-15)
dep(possible-19, if-18)
iobj(made-9, possible-19)
conj_and(watchful-13, possible-19)
det(respectful-22, the-20)
advmod(respectful-22, more-21)
dobj(made-9, respectful-22)
prep_to(made-9, her-24)

(ROOT
  (S (IN So)
    (NP (PRP she))
    (VP (VBD had)
      (NP
        (NP (DT a) (JJ rich) (NN return))
        (PP (IN for)
          (NP
            (NP (PRP$ her) (NN care))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS chickens)
                  (CC and)
                  (NNS kittens))
                (CC and)
                (NP (NNS puppies))))))))
    (. .)))

dep(had-3, So-1)
nsubj(had-3, she-2)
root(ROOT-0, had-3)
det(return-6, a-4)
amod(return-6, rich-5)
dobj(had-3, return-6)
poss(care-9, her-8)
prep_for(return-6, care-9)
det(chickens-12, the-11)
prep_of(care-9, chickens-12)
prep_of(care-9, kittens-14)
conj_and(chickens-12, kittens-14)
prep_of(care-9, puppies-16)
conj_and(chickens-12, puppies-16)

(ROOT
  (NP (NNP CHAPTER) (NNP XI) (. .)))

nn(XI-2, CHAPTER-1)
root(ROOT-0, XI-2)

(ROOT
  (NP (NNP GEORGE)
    (CC AND)
    (NNP ANDREW) (. .)))

root(ROOT-0, GEORGE-1)
conj_and(GEORGE-1, ANDREW-3)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP (VBD went)
        (NP (NN home))
        (NP (DT the) (JJ next) (NN day))))
    (: ;)
    (CC and)
    (S
      (NP (DT the) (JJ following) (NN week))
      (VP (VBD sent)
        (NP (NNP Andrew))
        (NP (DT a) (NN note))
        (, ,)
        (S
          (VP
            (VP (VBG explaining)
              (SBAR (IN that)
                (S
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP he))
                      (VP (VBD saw)
                        (NP (PRP him)))))
                  (NP (PRP he))
                  (VP (VBD did) (RB not)
                    (VP (VB know)
                      (NP (PRP$ his) (NN obligation))
                      (PP (TO to)
                        (NP (PRP him))))))))
            (, ,)
            (CC and)
            (VP (VBG expressing)
              (NP (DT the) (NN hope))
              (SBAR (IN that)
                (S (, ,)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (ADJP (JJ next)
                        (PP (IN in)
                          (NP (NN town))))))
                  (, ,)
                  (NP (PRP he))
                  (VP (MD would)
                    (VP (VB call)
                      (PP (IN upon)
                        (NP (PRP him))))))))))))
    (. .)))

nsubj(went-2, George-1)
root(ROOT-0, went-2)
dobj(went-2, home-3)
det(day-6, the-4)
amod(day-6, next-5)
tmod(went-2, day-6)
det(week-11, the-9)
amod(week-11, following-10)
nsubj(sent-12, week-11)
conj_and(went-2, sent-12)
iobj(sent-12, Andrew-13)
det(note-15, a-14)
dobj(sent-12, note-15)
dep(sent-12, explaining-17)
mark(know-26, that-18)
advmod(saw-21, when-19)
nsubj(saw-21, he-20)
advcl(know-26, saw-21)
dobj(saw-21, him-22)
nsubj(know-26, he-23)
aux(know-26, did-24)
neg(know-26, not-25)
ccomp(explaining-17, know-26)
poss(obligation-28, his-27)
dobj(know-26, obligation-28)
prep_to(know-26, him-30)
dep(sent-12, expressing-33)
conj_and(explaining-17, expressing-33)
det(hope-35, the-34)
dobj(expressing-33, hope-35)
mark(call-45, that-36)
advmod(next-39, when-38)
advcl(call-45, next-39)
prep_in(next-39, town-41)
nsubj(call-45, he-43)
aux(call-45, would-44)
ccomp(expressing-33, call-45)
prep_upon(call-45, him-47)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (ADVP (RB hardly))
      (ADVP (RB well))
      (, ,)
      (S
        (VP (VBG being)
          (VP (VBN condescension)
            (PP (TO to)
              (NP (DT a) (JJ superior)))))))
    (. .)))

nsubj(was-2, This-1)
root(ROOT-0, was-2)
advmod(was-2, hardly-3)
advmod(was-2, well-4)
auxpass(condescension-7, being-6)
xcomp(was-2, condescension-7)
det(superior-10, a-9)
prep_to(condescension-7, superior-10)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP
      (NP (DT the) (JJS worst) (NN evil))
      (PP (IN in)
        (NP
          (NP (DT the) (NN sense))
          (PP (IN of)
            (NP (JJ social) (NN superiority))))))
    (VP (VBZ is)
      (NP (DT the) (JJ vile) (NN fancy))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ alters)
            (NP (JJ human) (NN relation))))))
    (. .)))

advmod(fancy-14, Perhaps-1)
det(evil-4, the-2)
amod(evil-4, worst-3)
nsubj(fancy-14, evil-4)
det(sense-7, the-6)
prep_in(evil-4, sense-7)
amod(superiority-10, social-9)
prep_of(sense-7, superiority-10)
cop(fancy-14, is-11)
det(fancy-14, the-12)
amod(fancy-14, vile-13)
root(ROOT-0, fancy-14)
mark(alters-17, that-15)
nsubj(alters-17, it-16)
ccomp(fancy-14, alters-17)
amod(relation-19, human-18)
dobj(alters-17, relation-19)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD did) (RB not)
      (VP (VB feel)
        (ADJP (VBN bound)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP
                  (NP (DT the) (JJ same) (NN acknowledgment))
                  (PP (IN of)
                    (NP (NN obligation))))
                (PP (TO to)
                  (NP (CD one)))
                (PP (IN in)
                  (NP (JJ humble) (NN position)))))))
        (PP (IN as)
          (PP (TO to)
            (NP (CD one))))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ same) (JJ golden) (NN rank))
            (PP (IN with)
              (NP (PRP himself)))))))
    (. !)))

nsubj(feel-4, George-1)
aux(feel-4, did-2)
neg(feel-4, not-3)
root(ROOT-0, feel-4)
acomp(feel-4, bound-5)
aux(make-7, to-6)
xcomp(bound-5, make-7)
det(acknowledgment-10, the-8)
amod(acknowledgment-10, same-9)
dobj(make-7, acknowledgment-10)
prep_of(acknowledgment-10, obligation-12)
prep_to(make-7, one-14)
amod(position-17, humble-16)
prep_in(make-7, position-17)
prepc_as_to(feel-4, to-19)
pobj(feel-4, one-20)
det(rank-25, the-22)
amod(rank-25, same-23)
amod(rank-25, golden-24)
prep_in(feel-4, rank-25)
prep_with(rank-25, himself-27)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ says)
      (ADJP (JJ ill)
        (PP (IN for)
          (NP (JJ social) (NN distinction))))
      (, ,)
      (SBAR (IN if)
        (S (, ,)
          (PP (IN for)
            (NP (PRP$ its) (NN preservation)))
          (, ,)
          (NP (PDT such) (DT an) (JJ immoral) (NN difference))
          (VP (VBP be)
            (ADJP (JJ essential))))))
    (. .)))

nsubj(says-2, It-1)
root(ROOT-0, says-2)
acomp(says-2, ill-3)
amod(distinction-6, social-5)
prep_for(ill-3, distinction-6)
mark(essential-19, if-8)
poss(preservation-12, its-11)
prep_for(essential-19, preservation-12)
predet(difference-17, such-14)
det(difference-17, an-15)
amod(difference-17, immoral-16)
nsubj(essential-19, difference-17)
cop(essential-19, be-18)
advcl(says-2, essential-19)

(ROOT
  (S (CC But)
    (NP (NNP Andrew))
    (VP (VBD was) (RB not)
      (VP
        (NP (CD one))
        (S
          (VP (TO to)
            (VP (VB dwell)
              (PP (IN upon)
                (NP (PRP$ his) (NNS rights))))))))
    (. .)))

cc(one-5, But-1)
nsubj(one-5, Andrew-2)
aux(one-5, was-3)
neg(one-5, not-4)
root(ROOT-0, one-5)
aux(dwell-7, to-6)
vmod(one-5, dwell-7)
poss(rights-10, his-9)
prep_upon(dwell-7, rights-10)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD thought)
        (S
          (NP (PRP it))
          (ADJP (JJ friendly)
            (PP (IN of)
              (NP (NNP Mr.) (NNP Crawford))))
          (S
            (VP (TO to)
              (VP (VB ask)
                (S
                  (NP (PRP him))
                  (VP (TO to)
                    (VP (VB call))))))))))
    (: ;)
    (S
      (ADVP (RB therefore))
      (, ,)
      (SBAR (IN although)
        (S
          (NP (PRP he))
          (VP
            (VP (VBD had)
              (NP (JJ little) (NN desire)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP (PRP$ his) (NN acquaintance)))))))
            (, ,)
            (CC and)
            (VP (VBD grudged)
              (NP
                (NP (DT the) (NN loss))
                (PP (IN of)
                  (NP (NN time))))
              (, ,)
              (PP (TO to)
                (NP (DT no) (NN man)))
              (ADVP
                (ADVP (RB so) (RB precious) (RB as))
                (PP (TO to)
                  (NP
                    (NP (PRP him))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ has)
                          (NP
                            (NP (DT a) (NN pursuit))
                            (PP (IN in)
                              (NP (NN addition))))
                          (PP (TO to)
                            (NP (DT a) (NN calling)))))))))))))
      (, ,)
      (NP
        (NP (NNP Andrew))
        (, ,)
        (ADJP
          (ADJP (RB far) (JJR stronger)
            (PP (IN in)
              (NP (NN courtesy))))
          (PP (IN than)
            (NP
              (NP (DT the) (NN man))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD invited)
                    (NP (PRP him))))))))
        (, ,))
      (VP (VBD took)
        (NP (DT the) (JJ first) (NNP Saturday) (NN afternoon))
        (S
          (VP (TO to)
            (VP (VB go)
              (CC and)
              (VB see)
              (NP (PRP him)))))))
    (. .)))

nsubj(thought-2, He-1)
root(ROOT-0, thought-2)
nsubj(ask-9, it-3)
dep(ask-9, friendly-4)
nn(Crawford-7, Mr.-6)
prep_of(friendly-4, Crawford-7)
aux(ask-9, to-8)
xcomp(thought-2, ask-9)
dobj(ask-9, him-10)
nsubj(call-12, him-10)
aux(call-12, to-11)
xcomp(ask-9, call-12)
advmod(took-64, therefore-14)
mark(had-18, although-16)
nsubj(had-18, he-17)
nsubj(grudged-27, he-17)
advcl(took-64, had-18)
amod(desire-20, little-19)
dobj(had-18, desire-20)
aux(make-22, to-21)
vmod(desire-20, make-22)
poss(acquaintance-24, his-23)
dobj(make-22, acquaintance-24)
conj_and(had-18, grudged-27)
advcl(took-64, grudged-27)
det(loss-29, the-28)
dobj(grudged-27, loss-29)
prep_of(loss-29, time-31)
neg(man-35, no-34)
prep_to(grudged-27, man-35)
advmod(grudged-27, so-36)
advmod(grudged-27, precious-37)
prep_as_to(grudged-27, him-40)
nsubj(has-42, him-40)
rcmod(him-40, has-42)
det(pursuit-44, a-43)
dobj(has-42, pursuit-44)
prep_in(pursuit-44, addition-46)
det(calling-49, a-48)
prep_to(has-42, calling-49)
nsubj(took-64, Andrew-51)
advmod(stronger-54, far-53)
amod(Andrew-51, stronger-54)
prep_in(stronger-54, courtesy-56)
det(man-59, the-58)
prep_than(stronger-54, man-59)
nsubj(invited-61, man-59)
rcmod(man-59, invited-61)
dobj(invited-61, him-62)
parataxis(thought-2, took-64)
det(afternoon-68, the-65)
amod(afternoon-68, first-66)
nn(afternoon-68, Saturday-67)
dobj(took-64, afternoon-68)
aux(go-70, to-69)
vmod(took-64, go-70)
vmod(took-64, see-72)
conj_and(go-70, see-72)
dobj(go-70, him-73)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Mr.) (NNP Crawford))
        (NP (DT the) (JJR elder)))
      (VP (VBD lived)
        (PP (IN in)
          (NP (DT some) (NN style)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NN door))
      (VP (VBD was)
        (VP (VBN opened)
          (PP (IN by)
            (NP
              (NP (DT a) (NN servant))
              (SBAR (WP$ whose)
                (S
                  (S
                    (NP (JJ blatant) (NN adornment))
                    (VP (VBD filled)
                      (NP (NNP Andrew))
                      (PP (IN with)
                        (NP (JJ friendly) (NN pity)))))
                  (: :)
                  (S
                    (NP (DT no) (NN man))
                    (VP (MD would)
                      (VP (VB submit)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN dressed)
                                (PP (IN like)
                                  (NP (DT that))))))))))
                  (, ,)
                  (S
                    (NP (PRP he))
                    (VP (VBN judged)))
                  (, ,)
                  (PP (IN except)
                    (PP (IN from)
                      (NP (NN necessity)))))))))))
    (. .)))

nn(Crawford-2, Mr.-1)
nsubj(lived-5, Crawford-2)
det(elder-4, the-3)
dep(Crawford-2, elder-4)
root(ROOT-0, lived-5)
det(style-8, some-7)
prep_in(lived-5, style-8)
poss(door-12, his-11)
nsubjpass(opened-14, door-12)
auxpass(opened-14, was-13)
conj_and(lived-5, opened-14)
det(servant-17, a-16)
agent(opened-14, servant-17)
dep(filled-21, whose-18)
amod(adornment-20, blatant-19)
nsubj(filled-21, adornment-20)
dep(servant-17, filled-21)
dobj(filled-21, Andrew-22)
amod(pity-25, friendly-24)
prep_with(filled-21, pity-25)
neg(man-28, no-27)
nsubj(submit-30, man-28)
nsubjpass(dressed-33, man-28)
aux(submit-30, would-29)
parataxis(filled-21, submit-30)
aux(dressed-33, to-31)
auxpass(dressed-33, be-32)
xcomp(submit-30, dressed-33)
prep_like(dressed-33, that-35)
nsubj(judged-38, he-37)
parataxis(filled-21, judged-38)
prep(filled-21, except-40)
pcomp(except-40, from-41)
pobj(from-41, necessity-42)

(ROOT
  (S
    (NP (DT The) (NN reflection))
    (VP (VBN sprung)
      (PP (IN from)
        (NP
          (NP (DT no)
            (ADJP (JJ foolish)
              (CC and)
              (JJ degrading))
            (NN contempt))
          (PP (IN for)
            (NP (NN household) (NN service))))))
    (. .)))

det(reflection-2, The-1)
nsubj(sprung-3, reflection-2)
root(ROOT-0, sprung-3)
neg(contempt-9, no-5)
amod(contempt-9, foolish-6)
conj_and(foolish-6, degrading-8)
amod(contempt-9, degrading-8)
prep_from(sprung-3, contempt-9)
nn(service-12, household-11)
prep_for(contempt-9, service-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ true)
        (SBAR
          (S
            (NP (NNP Andrew))
            (VP (VBD thought)
              (UCP
                (PP
                  (ADVP
                    (NP (DT no) (NN labor))
                    (RB so))
                  (PP
                    (ADVP (RB manly))
                    (IN as)
                    (NP
                      (NP (DT that))
                      (PP (IN in)
                        (NP (DT the) (NN earth)))))
                  (, ,)
                  (ADVP (RB out))
                  (PP (IN of)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ grows)
                          (S
                            (NP
                              (NP (NN everything))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBZ makes)
                                    (NP
                                      (NP
                                        (NP
                                          (NP (DT the) (NN loveliness)
                                            (CC or)
                                            (NN use))
                                          (PP (IN of)
                                            (NP (NNP Nature))))
                                        (PRN (: ;)
                                          (S
                                            (S
                                              (PP (IN for)
                                                (PP (IN by)
                                                  (NP (PRP it))))
                                              (NP (PRP he))
                                              (VP (VBD came)
                                                (PP (IN in)
                                                  (NP (NN contact)))
                                                (PP (IN with)
                                                  (NP
                                                    (NP (DT the) (NNS primaries))
                                                    (PP (IN of)
                                                      (NP (JJ human) (NN life)))))))
                                            (, ,)
                                            (CC and)
                                            (SQ (VBD was)
                                              (NP
                                                (NP (NNP God) (POS 's))
                                                (JJ fellow) (NN laborer))))
                                          (, ,)
                                          (NP
                                            (NP (DT a) (NN helper))
                                            (PP (IN in)
                                              (NP
                                                (NP (DT the) (NN work))
                                                (PP (IN of)
                                                  (NP (DT the) (NN universe)))))))
                                        (, ,)
                                        (VP
                                          (VP (VBG knowing)
                                            (NP
                                              (NP (DT the) (NNS ways))
                                              (PP (IN of)
                                                (NP (PRP it)))))
                                          (CC and)
                                          (VP (VBG living)
                                            (PP (IN in)
                                              (NP (PRP them))))))
                                      (: ;)
                                      (CONJP (CC but)
                                        (RB not))
                                      (NP
                                        (NP (DT the) (JJR less))
                                        (SBAR
                                          (S
                                            (VP (MD would))))))))))
                            (NP (PRP he))
                            (VP (VBP have)
                              (VP (VBN done)
                                (NP (DT any) (NN service))))))))))
                (, ,)
                (CC and)
                (SBAR (IN that)
                  (FRAG
                    (ADVP (RB cheerfully)))))))))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP
            (NP (PRP$ his) (JJ own) (NN need))
            (CC or)
            (NP
              (NP (DT that))
              (PP (IN of)
                (NP (NNS others)))))
          (VP (MD might)
            (VP (VB have)
              (VP (VBN required)
                (PP (IN of)
                  (NP (PRP him)))))))))
    (. .)))

nsubj(true-3, It-1)
cop(true-3, is-2)
root(ROOT-0, true-3)
nsubj(thought-5, Andrew-4)
ccomp(true-3, thought-5)
neg(labor-7, no-6)
npadvmod(so-8, labor-7)
advmod(as-10, so-8)
advmod(as-10, manly-9)
dep(thought-5, as-10)
pobj(as-10, that-11)
det(earth-14, the-13)
prep_in(that-11, earth-14)
nsubj(grows-19, which-18)
prepc_out_of(as-10, grows-19)
nsubj(makes-22, everything-20)
nsubj(done-77, everything-20)
rcmod(everything-20, makes-22)
det(loveliness-24, the-23)
dobj(makes-22, loveliness-24)
dobj(makes-22, use-26)
conj_or(loveliness-24, use-26)
prep_of(loveliness-24, Nature-28)
prep(came-34, for-30)
pcomp(for-30, by-31)
pobj(by-31, it-32)
nsubj(came-34, he-33)
dep(loveliness-24, came-34)
parataxis(knowing-60, came-34)
prep_in(came-34, contact-36)
det(primaries-39, the-38)
prep_with(came-34, primaries-39)
amod(life-42, human-41)
prep_of(primaries-39, life-42)
dep(loveliness-24, was-45)
conj_and(came-34, was-45)
parataxis(knowing-60, was-45)
poss(laborer-49, God-46)
amod(laborer-49, fellow-48)
nsubj(was-45, laborer-49)
det(helper-52, a-51)
dep(came-34, helper-52)
det(work-55, the-54)
prep_in(helper-52, work-55)
det(universe-58, the-57)
prep_of(work-55, universe-58)
det(ways-62, the-61)
dobj(knowing-60, ways-62)
prep_of(ways-62, it-64)
conj_and(knowing-60, living-66)
prep_in(living-66, them-68)
det(less-73, the-72)
dobj(makes-22, less-73)
conj_negcc(loveliness-24, less-73)
rcmod(less-73, would-74)
nsubj(done-77, he-75)
aux(done-77, have-76)
ccomp(grows-19, done-77)
xcomp(grows-19, done-77)
det(service-79, any-78)
dobj(done-77, service-79)
mark(cheerfully-83, that-82)
dep(thought-5, cheerfully-83)
conj_and(as-10, cheerfully-83)
dobj(required-95, which-85)
poss(need-88, his-86)
amod(need-88, own-87)
nsubj(required-95, need-88)
conj_or(need-88, that-90)
nsubj(required-95, that-90)
prep_of(that-90, others-92)
aux(required-95, might-93)
aux(required-95, have-94)
ccomp(true-3, required-95)
prep_of(required-95, him-97)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS colors))
      (PP (IN of)
        (NP (DT a) (NN parrot))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (VBD were) (RB not)
      (VP (VBN fit)
        (PP (IN for)
          (NP
            (NP
              (NP (DT a) (NN son))
              (PP (IN of)
                (NP (NN man))))
            (, ,)
            (CC and)
            (RB hence)
            (NP
              (NP (PRP$ his) (NN look))
              (PP (IN of)
                (NP (NN sympathy))))))))
    (. .)))

det(colors-2, The-1)
nsubjpass(fit-11, colors-2)
det(parrot-5, a-4)
prep_of(colors-2, parrot-5)
advmod(fit-11, however-7)
auxpass(fit-11, were-9)
neg(fit-11, not-10)
root(ROOT-0, fit-11)
det(son-14, a-13)
prep_for(fit-11, son-14)
prep_of(son-14, man-16)
prep_for(fit-11, hence-19)
advmod(son-14, hence-19)
conj_and(son-14, hence-19)
poss(look-21, his-20)
dep(son-14, look-21)
prep_of(look-21, sympathy-23)

(ROOT
  (S
    (NP (PRP$ His) (NN regard))
    (VP (VBD was)
      (VP (VBN met)
        (ADVP (RB only))
        (PP (IN by)
          (NP
            (NP (DT a) (NN glance))
            (PP (IN of)
              (NP (JJ plain) (NN contempt)))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP
              (NP (DT the) (NN lackey))
              (, ,)
              (VP (VBN moved)
                (PP (IN by)
                  (NP
                    (NP (DT the) (JJ same) (NN spirit))
                    (PP (IN as)
                      (NP (PRP$ his) (NN master))))))
              (, ,))
            (VP (VBD left)
              (S
                (NP (PRP him))
                (VP (VBG standing)
                  (PP (IN in)
                    (NP (DT the) (NN hall)))
                  (: --)
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB return)
                          (ADVP (RB presently)))
                        (, ,)
                        (CC and)
                        (VP (VB show)
                          (NP (PRP him))
                          (PP (IN into)
                            (NP (DT the) (NN library))))
                        (: --)
                        (NP
                          (NP
                            (NP (DT a) (NN room))
                            (PP (IN of)
                              (NP (NN mahogany))))
                          (, ,)
                          (NP (JJ red) (NN morocco))
                          (, ,)
                          (CC and)
                          (NP
                            (NP (JJ yellow) (NN calf))
                            (, ,)
                            (SBAR
                              (WHADVP (WRB where))
                              (S
                                (NP (NNP George))
                                (VP (VBD sat))))))))))))))))
    (. .)))

poss(regard-2, His-1)
nsubjpass(met-4, regard-2)
auxpass(met-4, was-3)
root(ROOT-0, met-4)
advmod(met-4, only-5)
det(glance-8, a-7)
agent(met-4, glance-8)
amod(contempt-11, plain-10)
prep_of(glance-8, contempt-11)
mark(left-26, as-13)
det(lackey-15, the-14)
nsubj(left-26, lackey-15)
vmod(lackey-15, moved-17)
det(spirit-21, the-19)
amod(spirit-21, same-20)
agent(moved-17, spirit-21)
poss(master-24, his-23)
prep_as(spirit-21, master-24)
advcl(met-4, left-26)
nsubj(standing-28, him-27)
nsubj(return-34, him-27)
dep(left-26, standing-28)
det(hall-31, the-30)
prep_in(standing-28, hall-31)
aux(return-34, to-33)
parataxis(standing-28, return-34)
xcomp(standing-28, return-34)
advmod(return-34, presently-35)
parataxis(standing-28, show-38)
xcomp(standing-28, show-38)
conj_and(return-34, show-38)
dobj(show-38, him-39)
det(library-42, the-41)
prep_into(show-38, library-42)
det(room-45, a-44)
parataxis(standing-28, room-45)
xcomp(standing-28, room-45)
conj_and(return-34, room-45)
dobj(return-34, room-45)
prep_of(room-45, mahogany-47)
amod(morocco-50, red-49)
conj_and(return-34, morocco-50)
dobj(return-34, morocco-50)
conj_and(room-45, morocco-50)
amod(calf-54, yellow-53)
conj_and(return-34, calf-54)
dobj(return-34, calf-54)
conj_and(room-45, calf-54)
advmod(sat-58, where-56)
nsubj(sat-58, George-57)
rcmod(calf-54, sat-58)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD rose))
      (, ,)
      (CC and)
      (VP (VBD shook)
        (NP (NNS hands))
        (PP (IN with)
          (NP (PRP him)))))
    (. .)))

nsubj(rose-2, He-1)
nsubj(shook-5, He-1)
root(ROOT-0, rose-2)
conj_and(rose-2, shook-5)
dobj(shook-5, hands-6)
prep_with(shook-5, him-8)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ glad)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP
                  (NP (PRP you))
                  (, ,)
                  (NP (NNP Mr.) (NNP Ingram)))))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(glad-4, I-2)
nsubj(see-6, I-2)
cop(glad-4, am-3)
ccomp(said-14, glad-4)
aux(see-6, to-5)
xcomp(glad-4, see-6)
dobj(see-6, you-7)
nn(Ingram-10, Mr.-9)
appos(you-7, Ingram-10)
nsubj(said-14, he-13)
root(ROOT-0, said-14)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBD wrote))))
    (NP (PRP I))
    (VP (VBD had)
      (ADVP (RB but) (RB just))
      (VP (VBN learned)
        (SBAR
          (WHADJP (WRB how) (JJ much))
          (S
            (NP (PRP I))
            (VP (VBD was)
              (ADJP (JJ indebted)
                (PP (TO to)
                  (NP (PRP you)))))))))
    (. .) ('' '')))

advmod(wrote-4, When-2)
nsubj(wrote-4, I-3)
advcl(learned-9, wrote-4)
nsubj(learned-9, I-5)
aux(learned-9, had-6)
advmod(just-8, but-7)
advmod(learned-9, just-8)
root(ROOT-0, learned-9)
advmod(much-11, how-10)
dep(indebted-14, much-11)
nsubj(indebted-14, I-12)
cop(indebted-14, was-13)
ccomp(learned-9, indebted-14)
prep_to(indebted-14, you-16)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP understand)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (MD must)
              (VP (VB mean)))))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Andrew))
    (, ,) (`` ``)
    (S (CC but)
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ scarce)
          (PP (IN worth)
            (S
              (VP (VBG alluding)
                (PP (TO to))))))))
    (. .)))

nsubj(understand-3, I-2)
ccomp(returned-10, understand-3)
dobj(mean-7, what-4)
nsubj(mean-7, you-5)
aux(mean-7, must-6)
ccomp(understand-3, mean-7)
root(ROOT-0, returned-10)
nsubj(returned-10, Andrew-11)
cc(scarce-17, but-14)
nsubj(scarce-17, it-15)
cop(scarce-17, was-16)
dep(returned-10, scarce-17)
prepc_worth(scarce-17, alluding-19)
prep(alluding-19, to-20)

(ROOT
  (S
    (NP (NNP Miss) (NNP Fordyce))
    (VP (VBD had)
      (NP (DT the) (JJR better) (NN claim)
        (S
          (VP (TO to)
            (VP (VB serve)
              (NP (PRP you)))))))
    (. !) ('' '')))

nn(Fordyce-2, Miss-1)
nsubj(had-3, Fordyce-2)
root(ROOT-0, had-3)
det(claim-6, the-4)
amod(claim-6, better-5)
dobj(had-3, claim-6)
aux(serve-8, to-7)
vmod(claim-6, serve-8)
dobj(serve-8, you-9)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP call)
      (S
        (NP (PRP it))
        (ADJP (NN nothing)
          (S
            (VP (TO to)
              (VP (VB carry)
                (NP
                  (NP (DT a) (NN man))
                  (PP (IN of)
                    (NP (PRP$ my) (NN size))))
                (PP (IN over)
                  (NP
                    (NP (DT a) (NN mile))
                    (PP (IN of)
                      (NP (NN heather)))))))))))
    (. !) ('' '')))

nsubj(call-3, You-2)
root(ROOT-0, call-3)
nsubj(nothing-5, it-4)
nsubj(carry-7, it-4)
xcomp(call-3, nothing-5)
aux(carry-7, to-6)
xcomp(nothing-5, carry-7)
det(man-9, a-8)
dobj(carry-7, man-9)
poss(size-12, my-11)
prep_of(man-9, size-12)
det(mile-15, a-14)
prep_over(carry-7, mile-15)
prep_of(mile-15, heather-17)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (NP
          (NP (VB help))
          (, ,) ('' '')
          (VP (VBN answered)
            (NP
              (NP (NNP Andrew))
              (: ;) (`` ``)
              (CC and)
              (NP
                (NP (IN but))
                (PP (IN for)
                  (NP (DT the) (VBN broken) (NN leg)))))))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD added) (, ,)
          (PP (IN with)
            (NP (DT a) (NN laugh))))))
    (, ,) (`` ``)
    (NP (PRP I))
    (VP (MD could)
      (VP (VB have)
        (VP (VBN carried)
          (NP (PRP you))
          (ADVP (RB well) (RB enough) (JJ alone)))))
    (. .) ('' '')))

nsubj(had-3, I-2)
ccomp(carried-30, had-3)
dobj(had-3, help-4)
vmod(help-4, answered-7)
dobj(answered-7, Andrew-8)
dobj(answered-7, but-12)
conj_and(Andrew-8, but-12)
det(leg-16, the-14)
amod(leg-16, broken-15)
prep_for(but-12, leg-16)
nsubj(added-20, he-19)
parataxis(carried-30, added-20)
det(laugh-24, a-23)
prep_with(added-20, laugh-24)
nsubj(carried-30, I-27)
aux(carried-30, could-28)
aux(carried-30, have-29)
root(ROOT-0, carried-30)
dobj(carried-30, you-31)
advmod(alone-34, well-32)
advmod(alone-34, enough-33)
advmod(carried-30, alone-34)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD came)
      (NP (DT a) (NN pause))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (NNP George))
          (VP (VBD did) (RB not)
            (VP (VB know)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (JJ next))
                  (VP (TO to)
                    (VP (VB do)
                      (PP (IN with)
                        (NP (DT the) (NN farmer) (NN fellow))))))))))))
    (. .)))

expl(came-2, There-1)
root(ROOT-0, came-2)
det(pause-4, a-3)
dobj(came-2, pause-4)
nsubj(came-2, pause-4)
mark(know-10, for-6)
nsubj(know-10, George-7)
aux(know-10, did-8)
neg(know-10, not-9)
advcl(came-2, know-10)
dobj(do-14, what-11)
nsubj(do-14, next-12)
aux(do-14, to-13)
ccomp(know-10, do-14)
xcomp(know-10, do-14)
det(fellow-18, the-16)
nn(fellow-18, farmer-17)
prep_with(do-14, fellow-18)

(ROOT
  (S (IN So)
    (NP (DT the) (NN latter))
    (VP (VBD spoke)
      (ADVP (RB again))
      (, ,)
      (S
        (VP (VBG being)
          (VP (VBN unembarrassed)))))
    (. .)))

dep(spoke-4, So-1)
det(latter-3, the-2)
nsubj(spoke-4, latter-3)
root(ROOT-0, spoke-4)
advmod(spoke-4, again-5)
auxpass(unembarrassed-8, being-7)
xcomp(spoke-4, unembarrassed-8)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP have)
      (NP
        (NP (DT a) (JJ grand) (NN library))
        (, ,)
        (NP (NNP Mr.) (NNP Crawford))))
    (. !)))

nsubj(have-3, You-2)
root(ROOT-0, have-3)
det(library-6, a-4)
amod(library-6, grand-5)
dobj(have-3, library-6)
nn(Crawford-9, Mr.-8)
appos(library-6, Crawford-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ fine)
          (S
            (VP (TO to)
              (VP (VB sit)
                (PP (IN among)
                  (NP
                    (ADJP (RB so) (JJ many))
                    (NNS books)))))))))
    (. !)))

nsubj(fine-4, It-1)
nsubj(sit-6, It-1)
aux(fine-4, must-2)
cop(fine-4, be-3)
root(ROOT-0, fine-4)
aux(sit-6, to-5)
xcomp(fine-4, sit-6)
advmod(many-9, so-8)
amod(books-10, many-9)
prep_among(sit-6, books-10)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADVP (RB just))
        (PP (IN like)
          (NP
            (NP (DT a) (NN wine-merchant) (POS 's))
            (NNS cellars)))))
    (: --)
    (S
      (ADVP (RB only))
      (ADVP (RB here))
      (NP (PRP you))
      (VP (MD can)
        (VP
          (VP (VB open)
            (CC and)
            (VB drink))
          (, ,)
          (CC and)
          (VP (VB leave)
            (S
              (NP (DT the) (NNS bottles))
              (ADJP (RB as) (JJ full)
                (PP (IN as)
                  (ADVP (RB before)))))))))
    (. !) ('' '')))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod('s-2, just-3)
det(wine-merchant-6, a-5)
poss(cellars-8, wine-merchant-6)
prep_like('s-2, cellars-8)
advmod(open-14, only-10)
advmod(open-14, here-11)
nsubj(open-14, you-12)
nsubj(drink-16, you-12)
nsubj(leave-19, you-12)
aux(open-14, can-13)
parataxis('s-2, open-14)
parataxis('s-2, drink-16)
conj_and(open-14, drink-16)
parataxis('s-2, leave-19)
conj_and(open-14, leave-19)
det(bottles-21, the-20)
nsubj(full-23, bottles-21)
advmod(full-23, as-22)
xcomp(leave-19, full-23)
prep(full-23, as-24)
pcomp(as-24, before-25)

(ROOT
  (FRAG (`` ``)
    (NP (DT A) (JJ good) (NN simile))
    (, ,)
    (NP (NNP Mr.) (NNP Ingram))
    (. !) ('' '')))

det(simile-4, A-2)
amod(simile-4, good-3)
root(ROOT-0, simile-4)
nn(Ingram-7, Mr.-6)
dep(simile-4, Ingram-7)

(ROOT
  (NP (NNP replied) (NNP George) (. .)))

nn(George-2, replied-1)
root(ROOT-0, George-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD must)
        (VP (VB come)
          (CC and)
          (VB dine)
          (PP (IN with)
            (NP (PRP me))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB open)
          (NP
            (NP (DT another) (NN sort))
            (PP (IN of)
              (NP (NN bottle)))))))
    (. !) ('' '')))

nsubj(come-4, You-2)
nsubj(dine-6, You-2)
aux(come-4, must-3)
root(ROOT-0, come-4)
conj_and(come-4, dine-6)
prep_with(come-4, me-8)
nsubj(open-13, we-11)
aux(open-13, 'll-12)
conj_and(come-4, open-13)
det(sort-15, another-14)
dobj(open-13, sort-15)
prep_of(sort-15, bottle-17)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD must)
      (VP (VB excuse)
        (NP (PRP me))
        (ADVP (RB there))
        (, ,)
        (ADVP (RB sir))))
    (. !)))

nsubj(excuse-4, You-2)
aux(excuse-4, must-3)
root(ROOT-0, excuse-4)
dobj(excuse-4, me-5)
advmod(excuse-4, there-6)
advmod(excuse-4, sir-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT no) (NN time))
        (PP (IN for)
          (NP
            (NP (DT that) (NN sort))
            (PP (IN of)
              (NP (NN bottle)))))))
    (. .) ('' '')))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
neg(time-4, no-3)
dobj(have-2, time-4)
det(sort-7, that-6)
prep_for(time-4, sort-7)
prep_of(sort-7, bottle-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP understand)
      (S
        (NP (PRP you))
        (VP (VB read)
          (NP (DT a) (JJ great) (NN deal)))))
    (. ?) ('' '')))

nsubj(understand-3, I-2)
root(ROOT-0, understand-3)
nsubj(read-5, you-4)
ccomp(understand-3, read-5)
det(deal-8, a-6)
amod(deal-8, great-7)
dobj(read-5, deal-8)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP Weather))
      (VP (VBG permitting)))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Andrew))
    (. .)))

nsubj(permitting-3, Weather-2)
dep(returned-6, permitting-3)
root(ROOT-0, returned-6)
nsubj(returned-6, Andrew-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB have)
          (VP (VBN thought)
            (SBAR (IN if)
              (S
                (NP (NN anything))
                (VP (VBD was)
                  (ADJP (JJ independent)
                    (PP (IN of)
                      (NP (DT the) (NN weather)))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD must)
      (VP (VB be)
        (VP (VBG reading))))
    (. !) ('' '')))

nsubj(thought-5, I-2)
aux(thought-5, should-3)
aux(thought-5, have-4)
ccomp(reading-17, thought-5)
mark(independent-9, if-6)
nsubj(independent-9, anything-7)
cop(independent-9, was-8)
advcl(thought-5, independent-9)
det(weather-12, the-11)
prep_of(independent-9, weather-12)
nsubj(reading-17, it-14)
aux(reading-17, must-15)
aux(reading-17, be-16)
root(ROOT-0, reading-17)

(ROOT
  (S (`` ``)
    (SBAR (RB Not)
      (S
        (NP (DT a) (NN farmer))
        (VP (VBZ 's)
          (VP (VBG reading)))))
    (, ,)
    (VP (VBP sir))
    (. .)))

dep(reading-6, Not-2)
det(farmer-4, a-3)
nsubj(reading-6, farmer-4)
aux(reading-6, 's-5)
dep(sir-8, reading-6)
root(ROOT-0, sir-8)

(ROOT
  (S
    (PP (TO To)
      (NP (PRP him)))
    (NP (DT the) (NN weather))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NNP Word))
        (PP (IN of)
          (NP (NNP God)))
        (, ,)
        (VP (VBG telling)
          (NP (PRP him))
          (SBAR (IN whether)
            (S
              (VP (TO to)
                (VP (VB work)
                  (CC or)
                  (VB read))))))))
    (. .) ('' '')))

prep_to(Word-7, him-2)
det(weather-4, the-3)
nsubj(Word-7, weather-4)
cop(Word-7, is-5)
det(Word-7, the-6)
root(ROOT-0, Word-7)
prep_of(Word-7, God-9)
vmod(Word-7, telling-11)
dobj(telling-11, him-12)
nsubj(work-15, him-12)
mark(work-15, whether-13)
aux(work-15, to-14)
ccomp(telling-11, work-15)
xcomp(telling-11, work-15)
ccomp(telling-11, read-17)
xcomp(telling-11, read-17)
conj_or(work-15, read-17)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD was)
      (ADJP (JJ silent)))
    (. .)))

nsubj(silent-3, George-1)
cop(silent-3, was-2)
root(ROOT-0, silent-3)

(ROOT
  (S
    (PP (TO To)
      (NP (PRP him)))
    (NP
      (NP (DT the) (NNP Word))
      (PP (IN of)
        (NP (NNP God))))
    (VP (VBD was)
      (NP (DT the) (NNP Bible)))
    (. !)))

prep_to(Bible-9, him-2)
det(Word-4, the-3)
nsubj(Bible-9, Word-4)
prep_of(Word-4, God-6)
cop(Bible-9, was-7)
det(Bible-9, the-8)
root(ROOT-0, Bible-9)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB read)
        (NP (DT a) (JJ great) (NN deal))
        (NP
          (NP (PRP yourself))
          (, ,)
          (NP (NN sir)))))
    (. !) ('' '')))

cc(read-5, But-2)
nsubj(read-5, you-3)
aux(read-5, must-4)
root(ROOT-0, read-5)
det(deal-8, a-6)
amod(deal-8, great-7)
iobj(read-5, deal-8)
dobj(read-5, yourself-9)
appos(yourself-9, sir-11)

(ROOT
  (S
    (NP (NNP resumed) (NNP Andrew))
    (, ,)
    (S
      (VP (VBG casting)
        (NP (DT a) (NN glance))))
    (VP (VBP round)
      (NP (DT the) (NN room)))
    (. .)))

nn(Andrew-2, resumed-1)
nsubj(round-7, Andrew-2)
vmod(round-7, casting-4)
det(glance-6, a-5)
dobj(casting-4, glance-6)
root(ROOT-0, round-7)
det(room-9, the-8)
dobj(round-7, room-9)

(ROOT
  (S (`` ``)
    (NP (DT The) (NNS books))
    (VP (VBP are)
      (NP
        (NP (PRP$ my) (NN father))
        (VP (VBZ 's))))
    (. !) ('' '')))

det(books-3, The-2)
nsubj(father-6, books-3)
cop(father-6, are-4)
poss(father-6, my-5)
root(ROOT-0, father-6)
dep(father-6, 's-7)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP George)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, George-2)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD did) (RB not)
      (VP (VB mention)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP$ his) (JJ own) (NN reading))
              (VP (VBD came)
                (NP
                  (NP (DT all))
                  (PP (IN in)
                    (NP (DT the) (NN library-cart))))
                (, ,)
                (PP (IN except)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP he))
                      (VP (VBD wanted)
                        (NP (DT some) (JJ special) (NN information)))))))))
          (: ;)
          (SBAR (IN for)
            (S
              (NP (NNP George))
              (VP (VBD was) (`` ``)
                (NP (DT a) (JJ practical) (NN man))))))))
    (. !) ('' '')))

nsubj(mention-4, He-1)
aux(mention-4, did-2)
neg(mention-4, not-3)
root(ROOT-0, mention-4)
mark(came-9, that-5)
poss(reading-8, his-6)
amod(reading-8, own-7)
nsubj(came-9, reading-8)
advcl(mention-4, came-9)
dobj(came-9, all-10)
det(library-cart-13, the-12)
prep_in(all-10, library-cart-13)
advmod(wanted-18, when-16)
nsubj(wanted-18, he-17)
prepc_except(came-9, wanted-18)
det(information-21, some-19)
amod(information-21, special-20)
dobj(wanted-18, information-21)
mark(man-29, for-23)
nsubj(man-29, George-24)
cop(man-29, was-25)
det(man-29, a-27)
amod(man-29, practical-28)
dep(came-9, man-29)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD read)
        (NP (PRP$ his) (NN Bible)
          (S
            (VP (TO to)
              (VP (VB prepare)
                (PP (IN for)
                  (NP
                    (NP (PRP$ his) (NN class))
                    (PP (IN in)
                      (NP (DT the) (NN Sunday-school)))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (PRP$ his) (NN Shakespeare))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (NP
                        (NP (CD one))
                        (PP (IN of)
                          (NP (PRP$ his) (NNS plays))))))))))))
      (VP (VBD acted)))
    (. .)))

nsubj(read-2, He-1)
root(ROOT-0, read-2)
poss(Bible-4, his-3)
dobj(read-2, Bible-4)
aux(prepare-6, to-5)
vmod(Bible-4, prepare-6)
poss(class-9, his-8)
prep_for(prepare-6, class-9)
det(Sunday-school-12, the-11)
prep_in(class-9, Sunday-school-12)
poss(Shakespeare-16, his-15)
tmod(going-20, Shakespeare-16)
nsubj(acted-27, Shakespeare-16)
advmod(going-20, when-17)
nsubj(going-20, he-18)
nsubj(see-22, he-18)
aux(going-20, was-19)
rcmod(Shakespeare-16, going-20)
aux(see-22, to-21)
xcomp(going-20, see-22)
dobj(see-22, one-23)
poss(plays-26, his-25)
prep_of(one-23, plays-26)
conj_and(read-2, acted-27)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP (VB make)
        (NP
          (NP (DT the) (JJS best))
          (PP (IN of)
            (NP (DT both) (NNS worlds))))
        (PP (IN by)
          (S
            (VP (VBG paying)
              (NP (JJ due) (NN attention))
              (PP (TO to)
                (NP (DT both))))))))
    (. !)))

nsubj(make-3, He-1)
aux(make-3, would-2)
root(ROOT-0, make-3)
det(best-5, the-4)
dobj(make-3, best-5)
det(worlds-8, both-7)
prep_of(best-5, worlds-8)
prepc_by(make-3, paying-10)
amod(attention-12, due-11)
dobj(paying-10, attention-12)
prep_to(paying-10, both-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (JJ religious) (, ,)
        (CC but)
        (JJ liberal)))
    (. .)))

nsubj(religious-3, He-1)
nsubj(liberal-6, He-1)
cop(religious-3, was-2)
root(ROOT-0, religious-3)
conj_but(religious-3, liberal-6)

(ROOT
  (S
    (NP (PRP$ His) (NN father))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT a) (NN banker))
          (, ,)
          (NP
            (NP (DT an) (JJR elder))
            (PP (IN of)
              (NP (DT the) (NN kirk))))
          (, ,))
        (VP
          (ADVP (RB well))
          (VBN reputed)
          (PP (IN in)
            (CC and)
            (IN beyond)
            (NP (PRP$ his) (NN circle))))))
    (. .)))

poss(father-2, His-1)
nsubj(banker-5, father-2)
cop(banker-5, was-3)
det(banker-5, a-4)
root(ROOT-0, banker-5)
det(elder-8, an-7)
appos(banker-5, elder-8)
det(kirk-11, the-10)
prep_of(elder-8, kirk-11)
advmod(reputed-14, well-13)
vmod(banker-5, reputed-14)
vmod(banker-5, reputed-14')
conj_and(reputed-14, reputed-14')
poss(circle-19, his-18)
prep_beyond(reputed-14', circle-19)
prep_in(reputed-14, circle-19)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD gave)
      (PP
        (PP (TO to)
          (NP (JJ many) (NNS charities)))
        (, ,)
        (CC and)
        (RB largely)
        (PP (TO to)
          (NP (JJ educational) (NNS schemes)))))
    (. .)))

nsubj(gave-2, He-1)
root(ROOT-0, gave-2)
prep(gave-2, to-3)
amod(charities-5, many-4)
pobj(to-3, charities-5)
prep(gave-2, largely-8)
conj_and(to-3, largely-8)
dep(to-3, to-9)
amod(schemes-11, educational-10)
pobj(to-9, schemes-11)

(ROOT
  (S
    (NP (PRP$ His) (NN religion))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP
            (VP (VB hold)
              (PP (IN by)
                (NP
                  (NP (DT the) (NNS traditions))
                  (PP (IN of)
                    (NP (DT the) (NNS elders))))))
            (, ,)
            (CC and)
            (VP (VB keep)
              (S
                (NP (PRP himself))
                (ADJP (JJ respectable)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NNS eyes))
                      (PP (IN of)
                        (NP (NNS money-dealers))))))))))))
    (. .)))

poss(religion-2, His-1)
nsubj(was-3, religion-2)
nsubj(hold-5, religion-2)
nsubj(keep-14, religion-2)
root(ROOT-0, was-3)
aux(hold-5, to-4)
xcomp(was-3, hold-5)
det(traditions-8, the-7)
prep_by(hold-5, traditions-8)
det(elders-11, the-10)
prep_of(traditions-8, elders-11)
xcomp(was-3, keep-14)
conj_and(hold-5, keep-14)
nsubj(respectable-16, himself-15)
xcomp(keep-14, respectable-16)
det(eyes-19, the-18)
prep_in(respectable-16, eyes-19)
prep_of(eyes-19, money-dealers-21)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD went)
        (PP (TO to)
          (NP (NN church)))
        (ADVP (RB regularly)))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB always))
        (VBD asked)
        (NP
          (NP
            (NP (NNP God) (POS 's))
            (NN blessing))
          (PP (IN on)
            (NP (PRP$ his) (NN food))))
        (, ,)
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP it))
            (VP (VBD were)
              (NP
                (NP (DT a) (NN kind))
                (PP (IN of)
                  (NP (JJ general) (NN sauce)))))))))
    (. .)))

nsubj(went-2, He-1)
nsubj(asked-9, He-1)
root(ROOT-0, went-2)
prep_to(went-2, church-4)
advmod(went-2, regularly-5)
advmod(asked-9, always-8)
conj_and(went-2, asked-9)
poss(blessing-12, God-10)
dobj(asked-9, blessing-12)
poss(food-15, his-14)
prep_on(blessing-12, food-15)
advmod(kind-22, as-17)
mark(kind-22, if-18)
nsubj(kind-22, it-19)
cop(kind-22, were-20)
det(kind-22, a-21)
advcl(asked-9, kind-22)
amod(sauce-25, general-24)
prep_of(kind-22, sauce-25)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB never))
    (VP (VBD prayed)
      (S
        (NP (NNP God))
        (VP (TO to)
          (VP (VB make)
            (S
              (NP (PRP him))
              (VP
                (VP (VB love)
                  (NP (PRP$ his) (NN neighbor)))
                (, ,)
                (CC or)
                (VP (VB help)
                  (S
                    (NP (PRP him))
                    (VP (TO to)
                      (VP (VB be)
                        (NP (DT an) (JJ honest) (NN man))))))))))))
    (. .)))

nsubj(prayed-3, He-1)
neg(prayed-3, never-2)
root(ROOT-0, prayed-3)
dobj(prayed-3, God-4)
nsubj(make-6, God-4)
aux(make-6, to-5)
xcomp(prayed-3, make-6)
nsubj(love-8, him-7)
nsubj(help-13, him-7)
ccomp(make-6, love-8)
poss(neighbor-10, his-9)
dobj(love-8, neighbor-10)
ccomp(make-6, help-13)
conj_or(love-8, help-13)
dobj(help-13, him-14)
nsubj(man-19, him-14)
aux(man-19, to-15)
cop(man-19, be-16)
det(man-19, an-17)
amod(man-19, honest-18)
xcomp(help-13, man-19)

(ROOT
  (S
    (S
      (NP (PRP He))
      (`` ``)
      (VP (VBD had)
        (NP (NN worship) ('' ''))
        (NP (DT every) (NN morning))
        (, ,)
        (ADVP (DT no) (NN doubt))))
    (: ;)
    (CC but)
    (S
      (NP
        (NP (RB only) (DT a) (NNP Nonentity))
        (PP (IN like)
          (NP (PRP$ his) (NN God))))
      (VP (MD could)
        (VP (VB care)
          (PP (IN for)
            (NP (JJ such) (NNS prayers)))
          (PP (IN as)
            (NP (PRP$ his))))))
    (. .)))

nsubj(had-3, He-1)
root(ROOT-0, had-3)
dobj(had-3, worship-4)
det(morning-7, every-6)
tmod(had-3, morning-7)
neg(doubt-10, no-9)
advmod(had-3, doubt-10)
advmod(Nonentity-15, only-13)
det(Nonentity-15, a-14)
nsubj(care-20, Nonentity-15)
poss(God-18, his-17)
prep_like(Nonentity-15, God-18)
aux(care-20, could-19)
conj_but(had-3, care-20)
amod(prayers-23, such-22)
prep_for(care-20, prayers-23)
prep_as(care-20, his-25)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP (VBD rejected)
        (NP
          (NP
            (NP (PRP$ his) (NN father) (POS 's))
            (NN theology))
          (ADJP
            (ADJP (RB as) (JJ false)
              (PP (IN in)
                (NP (NN logic))))
            (CC and)
            (ADJP (JJ cruel))))
        (PP (IN in)
          (NP (NN character)))))
    (: :)
    (S
      (NP (NNP George))
      (VP (VBD knew)
        (NP
          (NP (RB just) (RB enough))
          (PP (IN of)
            (NP (NNP God))))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ guilty)
                (PP (IN of)
                  (S
                    (VP (VBG neglecting)
                      (NP (PRP Him)))))))))))
    (. .)))

nsubj(rejected-2, George-1)
root(ROOT-0, rejected-2)
poss(father-4, his-3)
poss(theology-6, father-4)
dobj(rejected-2, theology-6)
advmod(false-8, as-7)
amod(theology-6, false-8)
prep_in(false-8, logic-10)
amod(theology-6, cruel-12)
conj_and(false-8, cruel-12)
prep_in(rejected-2, character-14)
nsubj(knew-17, George-16)
parataxis(rejected-2, knew-17)
advmod(enough-19, just-18)
dobj(knew-17, enough-19)
prep_of(enough-19, God-21)
aux(guilty-24, to-22)
cop(guilty-24, be-23)
vmod(knew-17, guilty-24)
prepc_of(guilty-24, neglecting-26)
dobj(neglecting-26, Him-27)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP I))
            (VP (VBP am)
              (ADVP (IN out) (DT all))
              (NP (NN day)))))
        (, ,)
        (NP (PRP I))
        (VP (MD can)
          (VP (VB do)
            (PP (IN with)
              (NP (JJR less) (NN reading))))))
      (: ;)
      (S
        (PP (IN for)
          (NP (RB then)))
        (NP (PRP I))
        (VP (VBP have)
          (NP
            (NP (DT the) (`` `) (NN book))
            (PP (IN of)
              (NP (NN knowledge) (NN fair)))))))
    (, ,) ('' ') ('' '')
    (VP (VBD said))
    (NP (NNP Andrew))
    (, ,)
    (S
      (VP (VBG quoting)
        (NP (NNP Milton))))
    (. .)))

advmod(day-7, When-2)
nsubj(day-7, I-3)
cop(day-7, am-4)
advmod(day-7, out-5)
dep(out-5, all-6)
advcl(do-11, day-7)
nsubj(do-11, I-9)
aux(do-11, can-10)
ccomp(said-29, do-11)
amod(reading-14, less-13)
prep_with(do-11, reading-14)
prep(have-19, for-16)
pobj(for-16, then-17)
nsubj(have-19, I-18)
parataxis(do-11, have-19)
det(book-22, the-20)
dobj(have-19, book-22)
nn(fair-25, knowledge-24)
prep_of(book-22, fair-25)
root(ROOT-0, said-29)
nsubj(said-29, Andrew-30)
vmod(said-29, quoting-32)
dobj(quoting-32, Milton-33)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ does) (RB not)
      (VP (VB take)
        (S
          (VP (VBG _)
            (NP
              (NP (DT all) (JJ _) (NN one) (POS 's))
              (NN attention)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB drive)
                      (NP (DT a) (JJ straight) (NN furrow)))
                    (CC or)
                    (VP (VB keep)
                      (NP (DT the) (NN harrow))
                      (PP (IN on)
                        (NP
                          (NP (DT the) (NN edge))
                          (PP (IN of)
                            (NP (DT the) (JJ last) (NN bout))))))))))))))
    (. !) ('' '')))

nsubj(take-5, It-2)
aux(take-5, does-3)
neg(take-5, not-4)
root(ROOT-0, take-5)
xcomp(take-5, _-6)
det(one-9, all-7)
amod(one-9, _-8)
poss(attention-11, one-9)
dobj(_-6, attention-11)
aux(drive-13, to-12)
vmod(attention-11, drive-13)
det(furrow-16, a-14)
amod(furrow-16, straight-15)
dobj(drive-13, furrow-16)
vmod(attention-11, keep-18)
conj_or(drive-13, keep-18)
det(harrow-20, the-19)
dobj(keep-18, harrow-20)
det(edge-23, the-22)
prep_on(keep-18, edge-23)
det(bout-27, the-25)
amod(bout-27, last-26)
prep_of(edge-23, bout-27)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB read)
                (NP (PRP$ your) (NN Bible))
                (SBAR (IN as)
                  (S
                    (NP (PRP you))
                    (VP (VBP hold)
                      (NP (DT the) (NN plow)))))))))))
    (. !) ('' '')))

nsubj(mean-5, You-2)
aux(mean-5, do-3)
neg(mean-5, n't-4)
root(ROOT-0, mean-5)
nsubj(read-8, you-6)
aux(read-8, can-7)
ccomp(mean-5, read-8)
poss(Bible-10, your-9)
dobj(read-8, Bible-10)
mark(hold-13, as-11)
nsubj(hold-13, you-12)
advcl(read-8, hold-13)
det(plow-15, the-14)
dobj(hold-13, plow-15)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP George)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, George-2)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH No))
      (, ,)
      (NP (NN sir)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP
      (NP (NNP Andrew))
      (, ,)
      (ADJP (VBN amused)))
    (. .)))

discourse(sir-4, No-2)
dep(answered-7, sir-4)
root(ROOT-0, answered-7)
dep(answered-7, Andrew-8)
amod(Andrew-8, amused-10)

(ROOT
  (S (`` ``)
    (NP (DT A) (NN body))
    (VP (MD could) (RB not)
      (ADVP (RB well))
      (VP (VB manage)
        (NP
          (NP (DT a) (NN book))
          (PP (IN between)
            (NP
              (NP (DT the) (NNS stilts))
              (PP (IN of)
                (NP (DT the) (NN plow))))))))
    (. .)))

det(body-3, A-2)
nsubj(manage-7, body-3)
aux(manage-7, could-4)
neg(manage-7, not-5)
advmod(manage-7, well-6)
root(ROOT-0, manage-7)
det(book-9, a-8)
dobj(manage-7, book-9)
det(stilts-12, the-11)
prep_between(book-9, stilts-12)
det(plow-15, the-14)
prep_of(stilts-12, plow-15)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Bible))
      (VP (MD will)
        (VP (VB keep)
          (SBAR (IN till)
            (S
              (NP (PRP you))
              (VP (VBP get)
                (NP (NN home))))))))
    (: ;)
    (S
      (NP
        (NP (DT a) (JJ little))
        (PP (IN of)
          (NP (PRP it))))
      (VP (VBZ goes)
        (NP (DT a) (JJ long) (NN way))))
    (. .)))

det(Bible-2, The-1)
nsubj(keep-4, Bible-2)
aux(keep-4, will-3)
root(ROOT-0, keep-4)
mark(get-7, till-5)
nsubj(get-7, you-6)
advcl(keep-4, get-7)
dobj(get-7, home-8)
det(little-11, a-10)
nsubj(goes-14, little-11)
prep_of(little-11, it-13)
parataxis(keep-4, goes-14)
det(way-17, a-15)
amod(way-17, long-16)
dobj(goes-14, way-17)

(ROOT
  (S (CC But)
    (NP (NNP Paul))
    (VP (VBD counted)
      (NP
        (NP (DT the) (NN book))
        (PP (IN of)
          (NP (NN creation))))
      (ADVP (RB enough)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (DT the) (NN heathen)
                (S
                  (VP (TO to)
                    (VP (VB blame)
                      (PP (IN for)
                        (S (RB not)
                          (VP (VBG minding)
                            (NP (PRP it))))))))))))))
    (. .)))

cc(counted-3, But-1)
nsubj(counted-3, Paul-2)
root(ROOT-0, counted-3)
det(book-5, the-4)
dobj(counted-3, book-5)
prep_of(book-5, creation-7)
advmod(counted-3, enough-8)
aux(make-10, to-9)
dep(enough-8, make-10)
det(heathen-12, the-11)
dobj(make-10, heathen-12)
aux(blame-14, to-13)
vmod(heathen-12, blame-14)
neg(minding-17, not-16)
prepc_for(blame-14, minding-17)
dobj(minding-17, it-18)

(ROOT
  (S
    (S
      (ADVP (RB Never))
      (NP (DT a) (NN wind))
      (VP (VBZ wakes)
        (PP (IN of)
          (NP (DT a) (JJ sudden)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ talks)
        (PP (TO to)
          (NP (PRP me)))
        (PP (IN about)
          (NP (NNP God)))))
    (. .)))

neg(wakes-4, Never-1)
det(wind-3, a-2)
nsubj(wakes-4, wind-3)
root(ROOT-0, wakes-4)
det(sudden-7, a-6)
prep_of(wakes-4, sudden-7)
nsubj(talks-11, it-10)
conj_but(wakes-4, talks-11)
prep_to(talks-11, me-13)
prep_about(talks-11, God-15)

(ROOT
  (FRAG (CC And)
    (S
      (VP (VBZ is) (RB not)
        (ADJP
          (ADJP
            (NP (DT the) (NN sunlight))
            (NP (DT the) (JJ same)))
          (SBAR
            (S
              (NP (DT that))
              (VP (VBD came)
                (PRT (RP out))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN body))
                    (PP (IN of)
                      (NP (NNP Jesus)))))
                (PP (IN at)
                  (NP (PRP$ His) (NN transfiguration)))))
            (. ?) ('' '')))))))

cc(sunlight-5, And-1)
cop(sunlight-5, is-2)
neg(sunlight-5, not-3)
det(sunlight-5, the-4)
root(ROOT-0, sunlight-5)
det(same-7, the-6)
dep(sunlight-5, same-7)
nsubj(came-9, that-8)
ccomp(sunlight-5, came-9)
det(body-13, the-12)
prep_out_of(came-9, body-13)
prep_of(body-13, Jesus-15)
poss(transfiguration-18, His-17)
prep_at(came-9, transfiguration-18)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP
              (NP (DT some)
                (ADJP (RB rather) (JJ peculiar))
                (NNS ideas))
              (PP (IN of)
                (NP (PRP$ your) (JJ own) (, ,) (NNP Mr.) (NNP Ingram))))))))
    (. !) ('' '')))

nsubj(seem-3, You-2)
nsubj(have-5, You-2)
root(ROOT-0, seem-3)
aux(have-5, to-4)
xcomp(seem-3, have-5)
det(ideas-9, some-6)
advmod(peculiar-8, rather-7)
amod(ideas-9, peculiar-8)
dobj(have-5, ideas-9)
poss(Ingram-15, your-11)
amod(Ingram-15, own-12)
dep(Ingram-15, Mr.-14)
prep_of(ideas-9, Ingram-15)

(ROOT
  (S (`` ``)
    (ADVP (RB Perhaps))
    (, ,)
    (VP (VBP sir))
    (. !)))

advmod(sir-4, Perhaps-2)
root(ROOT-0, sir-4)

(ROOT
  (S
    (PP (IN For)
      (NP (DT a) (NN man)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (DT no) (NNS ideas)))))))
    (PP (IN of)
      (NP (PRP$ his) (JJ own)))
    (, ,)
    (VP (VBZ is)
      (ADVP (RB much)
        (NP (DT the) (JJ same)))
      (SBAR (IN as)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (DT no) (NNS ideas))
              (ADVP (IN at) (DT all)))))))
    (. .)))

det(man-3, a-2)
prep_for(is-12, man-3)
aux(have-5, to-4)
vmod(man-3, have-5)
neg(ideas-7, no-6)
dobj(have-5, ideas-7)
poss(own-10, his-9)
prep_of(is-12, own-10)
root(ROOT-0, is-12)
advmod(is-12, much-13)
det(same-15, the-14)
pobj(much-13, same-15)
mark(have-18, as-16)
aux(have-18, to-17)
advcl(is-12, have-18)
xcomp(is-12, have-18)
neg(ideas-20, no-19)
dobj(have-18, ideas-20)
advmod(have-18, at-21)
pobj(at-21, all-22)

(ROOT
  (S
    (NP (DT A) (NN man))
    (VP (MD can) (RB not)
      (VP (VB have)
        (NP
          (NP (DT the) (NNS ideas))
          (PP (IN of)
            (NP (DT another) (NN man)))
          (, ,)
          (ADVP
            (ADVP (DT any) (RBR more))
            (SBAR (IN than)
              (S
                (NP (PRP he))
                (VP (MD can)
                  (VP (VB have)
                    (NP
                      (NP
                        (NP (DT another) (NN man) (POS 's))
                        (NN soul))
                      (, ,)
                      (CC or)
                      (NP
                        (NP (DT another) (NN man) (POS 's))
                        (NN body)))))))))))
    (. !) ('' '')))

det(man-2, A-1)
nsubj(have-5, man-2)
aux(have-5, can-3)
neg(have-5, not-4)
root(ROOT-0, have-5)
det(ideas-7, the-6)
dobj(have-5, ideas-7)
det(man-10, another-9)
prep_of(ideas-7, man-10)
dep(more-13, any-12)
advmod(ideas-7, more-13)
mark(have-17, than-14)
nsubj(have-17, he-15)
aux(have-17, can-16)
advcl(more-13, have-17)
det(man-19, another-18)
poss(soul-21, man-19)
dobj(have-17, soul-21)
det(man-25, another-24)
poss(body-27, man-25)
dobj(have-17, body-27)
conj_or(soul-21, body-27)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is)
      (NP (JJ dangerous) (NN doctrine)))
    (. .) ('' '')))

nsubj(doctrine-5, That-2)
cop(doctrine-5, is-3)
amod(doctrine-5, dangerous-4)
root(ROOT-0, doctrine-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Perhaps))
    (NP (PRP we))
    (VP (VBP are) (RB not)
      (VP (VBG talking)
        (PP (IN about)
          (NP (DT the) (JJ same) (NN thing)))))
    (. !)))

advmod(talking-6, Perhaps-2)
nsubj(talking-6, we-3)
aux(talking-6, are-4)
neg(talking-6, not-5)
root(ROOT-0, talking-6)
det(thing-10, the-8)
amod(thing-10, same-9)
prep_about(talking-6, thing-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean)
      (PP (IN by)
        (NP
          (NP (JJ _) (NNS ideas) (NNS _))
          (, ,)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT a) (NN man) (NNS orders))
              (NP (PRP$ his) (NN life))))))
      (PP (IN by)))
    (. .) ('' '')))

nsubj(mean-2, I-1)
root(ROOT-0, mean-2)
amod(_-6, _-4)
nn(_-6, ideas-5)
prep_by(mean-2, _-6)
dep(life-13, _-6)
det(orders-11, a-9)
nn(orders-11, man-10)
dep(life-13, orders-11)
poss(life-13, his-12)
rcmod(_-6, life-13)
prep(mean-2, by-14)

(ROOT
  (S (`` ``)
    (NP (PRP$ Your) (NNS ideas))
    (VP (MD may)
      (VP (VB be)
        (ADJP (JJ wrong))))
    (. !) ('' '')))

poss(ideas-3, Your-2)
nsubj(wrong-6, ideas-3)
aux(wrong-6, may-4)
cop(wrong-6, be-5)
root(ROOT-0, wrong-6)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN All-wise))
    (VP (VBZ is)
      (NP (PRP$ my) (NN judge)))
    (. .) ('' '')))

det(All-wise-3, The-2)
nsubj(judge-6, All-wise-3)
cop(judge-6, is-4)
poss(judge-6, my-5)
root(ROOT-0, judge-6)

(ROOT
  (S (`` ``)
    (CC So)
    (NP (RB much) (DT the))
    (VP (VBZ worse) (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (PP (IN in)
              (NP (DT the) (JJ wrong)))))))
    (. !) ('' '')))

cc(worse-5, So-2)
advmod(the-4, much-3)
nsubj(worse-5, the-4)
root(ROOT-0, worse-5)
mark(are-9, if-7)
nsubj(are-9, you-8)
advcl(worse-5, are-9)
det(wrong-12, the-11)
prep_in(are-9, wrong-12)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP
        (NP (DT the) (RB only))
        (JJ good))
      (, ,)
      (SBAR (IN whether)
        (S
          (NP (PRP I))
          (VP (VBP be)
            (PP (IN in)
              (NP
                (NP (DT the) (NN right))
                (CC or)
                (NP (DT the) (JJ wrong))))))))
    (. .)))

nsubj(good-6, It-2)
cop(good-6, is-3)
det(only-5, the-4)
npadvmod(good-6, only-5)
root(ROOT-0, good-6)
mark(be-10, whether-8)
nsubj(be-10, I-9)
ccomp(good-6, be-10)
det(right-13, the-12)
prep_in(be-10, right-13)
det(wrong-16, the-15)
prep_in(be-10, wrong-16)
conj_or(right-13, wrong-16)

(ROOT
  (SQ (MD Would)
    (NP (PRP I))
    (VP (VB have)
      (NP
        (NP (PRP$ my) (NNS mistakes))
        (VP (VBN overlooked))))
    (. ?)))

aux(have-3, Would-1)
nsubj(have-3, I-2)
root(ROOT-0, have-3)
poss(mistakes-5, my-4)
dobj(have-3, mistakes-5)
vmod(mistakes-5, overlooked-6)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN judge))
    (SQ (MD would)
      (NP (PRP I))
      (VP (VB desire)
        (FRAG (CC but)
          (NP
            (NP (DT the) (NNP Judge))
            (PP (IN of)
              (NP (PDT all) (DT the) (NN earth))))
          (. !))))))

det(judge-2, What-1)
dobj(desire-5, judge-2)
aux(desire-5, would-3)
nsubj(desire-5, I-4)
root(ROOT-0, desire-5)
cc(Judge-8, but-6)
det(Judge-8, the-7)
dep(desire-5, Judge-8)
predet(earth-12, all-10)
det(earth-12, the-11)
prep_of(Judge-8, earth-12)

(ROOT
  (SQ
    (VP (VB Shall)
      (S
        (NP (PRP He))
        (RB not)
        (VP (VB do)
          (ADVP (RB right)))))
    (. ?)))

root(ROOT-0, Shall-1)
nsubj(do-4, He-2)
neg(do-4, not-3)
ccomp(Shall-1, do-4)
advmod(do-4, right-5)

(ROOT
  (SQ (CC And)
    (MD will)
    (NP (PRP He))
    (ADVP (RB not))
    (VP (VB set)
      (S
        (NP (PRP me))
        (ADJP (RB right))))
    (. ?) ('' '')))

cc(set-5, And-1)
aux(set-5, will-2)
nsubj(set-5, He-3)
advmod(set-5, not-4)
root(ROOT-0, set-5)
nsubj(right-7, me-6)
xcomp(set-5, right-7)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (RBS most) (JJ dangerous))
        (NN confidence)))
    (. !) ('' '')))

nsubj(confidence-7, That-2)
cop(confidence-7, is-3)
det(confidence-7, a-4)
advmod(dangerous-6, most-5)
amod(confidence-7, dangerous-6)
root(ROOT-0, confidence-7)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (SBAR (IN if)
          (S
            (NP (EX there))
            (VP (VBD were)
              (NP (DT any) (JJ other) (NN judge)))))))
    (. .)))

nsubj(be-4, It-2)
aux(be-4, would-3)
root(ROOT-0, be-4)
mark(were-7, if-5)
expl(were-7, there-6)
advcl(be-4, were-7)
det(judge-10, any-8)
amod(judge-10, other-9)
nsubj(were-7, judge-10)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB be)
        (NP (DT neither)
          (NP (DT the) (NN Church))
          (CC nor)
          (NP
            (NP (DT the) (NN world))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD will)
                  (VP (VB sit)
                    (PP (IN on)
                      (NP (DT the) (JJ great) (JJ white) (NN throne)))))))))))
    (. .)))

nsubj(Church-7, it-2)
aux(Church-7, will-3)
cop(Church-7, be-4)
preconj(Church-7, neither-5)
det(Church-7, the-6)
root(ROOT-0, Church-7)
det(world-10, the-9)
conj_nor(Church-7, world-10)
nsubj(sit-13, world-10)
aux(sit-13, will-12)
rcmod(world-10, sit-13)
det(throne-18, the-15)
amod(throne-18, great-16)
amod(throne-18, white-17)
prep_on(sit-13, throne-18)

(ROOT
  (FRAG
    (NP (PRP He))
    (SBAR
      (WHNP (WP who))
      (S
        (VP (VBZ sits)
          (SBAR
            (S
              (NP (EX there))
              (VP (MD will) (RB not)
                (VP (VB ask) (: :) (`` `)
                  (SQ (VBD Did)
                    (NP (PRP you))
                    (VP (VB go)
                      (FRAG
                        (PP (TO to)
                          (NP (NN church)))
                        (. ?))))
                  ('' '))))))))))

root(ROOT-0, He-1)
nsubj(sits-3, who-2)
dep(He-1, sits-3)
expl(ask-7, there-4)
aux(ask-7, will-5)
neg(ask-7, not-6)
ccomp(sits-3, ask-7)
aux(go-12, Did-10)
nsubj(go-12, you-11)
dep(ask-7, go-12)
dep(go-12, to-13)
pobj(to-13, church-14)

(ROOT
  (S (CC or)
    (`` `)
    (ADVP (RB Did))
    (NP (PRP you))
    (VP (VBP believe)
      (PP (IN in)
        (NP
          (NP (DT this))
          (CC or)
          (NP (DT that)))))
    (. ?) ('' ')))

cc(believe-5, or-1)
advmod(believe-5, Did-3)
nsubj(believe-5, you-4)
root(ROOT-0, believe-5)
prep_in(believe-5, this-7)
prep_in(believe-5, that-9)
conj_or(this-7, that-9)

(ROOT
  (S
    (SBAR (IN but)
      (S
        (NP (POS '))
        (VP (VBD Did))))
    (NP (PRP you))
    (VP (VBP do)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBD told)
            (NP (PRP you))))))
    (. ?) ('' ') ('' '')))

mark(Did-3, but-1)
advcl(do-5, Did-3)
nsubj(do-5, you-4)
root(ROOT-0, do-5)
dobj(told-8, what-6)
nsubj(told-8, I-7)
ccomp(do-5, told-8)
dobj(told-8, you-9)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHNP (WP what))
    (SQ (MD will)
      (NP (PRP you))
      (VP (VB say)
        (PP (TO to)
          (NP
            (NP (DT that))
            (, ,)
            (NP (NNP Mr.) (NNP Ingram))))))
    (. ?) ('' '')))

cc(say-6, And-2)
dobj(say-6, what-3)
aux(say-6, will-4)
nsubj(say-6, you-5)
root(ROOT-0, say-6)
prep_to(say-6, that-8)
nn(Ingram-11, Mr.-10)
appos(that-8, Ingram-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB say) (: :) (`` `)
        (ADVP (RB Lord))
        (, ,)
        (S
          (NP (PRP Thou))
          (ADJP (JJ knowest)))))
    (. !) ('' '')))

nsubj(say-4, I-2)
aux(say-4, will-3)
root(ROOT-0, say-4)
advmod(say-4, Lord-7)
nsubj(knowest-10, Thou-9)
xcomp(say-4, knowest-10)

(ROOT
  (S
    (NP (DT The) (NN answer))
    (VP (VBD checked)
      (NP
        (NP (NNP George))
        (NP (DT a) (JJ little))))
    (. .)))

det(answer-2, The-1)
nsubj(checked-3, answer-2)
root(ROOT-0, checked-3)
dobj(checked-3, George-4)
iobj(checked-3, George-4)
det(little-6, a-5)
dep(George-4, little-6)

(ROOT
  (S (`` ``)
    (VP (VB Suppose)
      (SBAR
        (S
          (NP (PRP He))
          (VP (MD should)
            (VP (VB say)
              (SBAR
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBD did) (RB not))))
                (, ,)
                (SBAR
                  (WHNP (WP what))
                  (SINV (MD would)
                    (NP (PRP you))
                    (VP (VB answer))))))))))
    (. ?) ('' '')))

root(ROOT-0, Suppose-2)
nsubj(say-5, He-3)
aux(say-5, should-4)
ccomp(Suppose-2, say-5)
nsubj(did-7, you-6)
dep(say-5, did-7)
neg(did-7, not-8)
dep(answer-13, what-10)
aux(answer-13, would-11)
nsubj(answer-13, you-12)
dep(did-7, answer-13)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB say) (: :) (`` `)
        (S
          (NP (NNP Lord))
          (, ,)
          (VP (VB send)
            (NP (PRP me))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP I))
                (VP (MD may)
                  (VP (VB learn)))))))))
    (. .) ('' ') ('' '')))

nsubj(say-4, I-2)
aux(say-4, would-3)
root(ROOT-0, say-4)
nsubj(send-9, Lord-7)
ccomp(say-4, send-9)
dobj(send-9, me-10)
advmod(learn-14, where-11)
nsubj(learn-14, I-12)
aux(learn-14, may-13)
advcl(send-9, learn-14)

(ROOT
  (S (`` ``)
    (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP He))
        (VP (MD should)
          (VP (VB say)))))
    (: :) (`` `)
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (S
            (NP (PRP I))
            (VP (VBD sent)
              (NP (PRP you))
              (PP (IN into)
                (NP (DT the) (NN world)))
              (PP (IN for))))
          (, ,)
          (CC and)
          (S
            (NP (PRP you))
            (VP (VBP have) (RB not)
              (VP (VBN done)
                (NP (PRP it))))))))
    (. !) ('' ')))

cc(is-10, And-2)
mark(say-6, if-3)
nsubj(say-6, He-4)
aux(say-6, should-5)
advcl(is-10, say-6)
nsubj(is-10, That-9)
root(ROOT-0, is-10)
dep(sent-13, what-11)
nsubj(sent-13, I-12)
dep(is-10, sent-13)
dobj(sent-13, you-14)
det(world-17, the-16)
prep_into(sent-13, world-17)
prep(sent-13, for-18)
nsubj(done-24, you-21)
aux(done-24, have-22)
neg(done-24, not-23)
dep(is-10, done-24)
conj_and(sent-13, done-24)
dobj(done-24, it-25)

(ROOT
  (SBARQ
    (WHNP (WP what))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB say)
        (ADVP (RB then))))
    (. ?) ('' '')))

dobj(say-4, what-1)
aux(say-4, would-2)
nsubj(say-4, you-3)
root(ROOT-0, say-4)
advmod(say-4, then-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB hold)
        (NP (PRP$ my) (NN peace))))
    (. .) ('' '')))

nsubj(hold-4, I-2)
aux(hold-4, should-3)
root(ROOT-0, hold-4)
poss(peace-6, my-5)
dobj(hold-4, peace-6)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP do)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP He))
          (VP (VBZ tells)
            (NP (PRP you))
            (ADVP (RB then))))))
    (. ?) ('' '')))

nsubj(do-3, You-2)
root(ROOT-0, do-3)
dobj(tells-6, what-4)
nsubj(tells-6, He-5)
ccomp(do-3, tells-6)
dobj(tells-6, you-7)
advmod(tells-6, then-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP try))
    (. .) ('' '')))

nsubj(try-3, I-2)
root(ROOT-0, try-3)

(ROOT
  (S (`` ``)
    (ADVP (RB Does))
    (NP (PRP He))
    (VP (RB not)
      (VP (VBP say))
      (: :) (`` `)
      (VP (VBZ Forsake)
        (NP
          (NP (RB not) (DT the) (NN assembling))
          (PP (IN of)
            (NP (NNS yourselves))))
        (ADVP (RB together))))
    (. ?) ('' ') ('' '')))

advmod(say-5, Does-2)
nsubj(say-5, He-3)
neg(say-5, not-4)
root(ROOT-0, say-5)
dep(say-5, Forsake-8)
neg(assembling-11, not-9)
det(assembling-11, the-10)
dobj(Forsake-8, assembling-11)
prep_of(assembling-11, yourselves-13)
advmod(Forsake-8, together-14)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH No))
    (, ,)
    (NP (NN sir))
    (. .) ('' '')))

discourse(sir-4, No-2)
root(ROOT-0, sir-4)

(ROOT
  (INTJ (`` ``) (UH No) (. ?) ('' '')))

root(ROOT-0, No-2)

(ROOT
  (S (`` ``)
    (NP (NN Somebody))
    (VP (VBZ says)
      (NP
        (NP (NN something))
        (PP (IN like)
          (NP (PRP it)))
        (PP (IN in)
          (NP (DT the) (NNP Epistle))))
      (PP (TO to)
        (NP (DT the) (NNPS Hebrews))))
    (. .) ('' '')))

nsubj(says-3, Somebody-2)
root(ROOT-0, says-3)
dobj(says-3, something-4)
prep_like(something-4, it-6)
det(Epistle-9, the-8)
prep_in(something-4, Epistle-9)
det(Hebrews-12, the-11)
prep_to(says-3, Hebrews-12)

(ROOT
  (S (`` ``)
    (CC And)
    (VP (VBZ is) (RB n't)
      (NP (RB that) (DT the) (JJ same)))
    (. ?) ('' '')))

cc(same-7, And-2)
cop(same-7, is-3)
neg(same-7, n't-4)
advmod(same-7, that-5)
det(same-7, the-6)
root(ROOT-0, same-7)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN Man))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD wrote)
            (NP (PRP it))))))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ indignant)
          (PP (IN at)
            (NP (PRP$ your) (NN saying))))
        (ADVP (RB so))))
    (. !)))

det(Man-3, The-2)
nsubj(wrote-5, Man-3)
nsubj(indignant-9, Man-3)
rcmod(Man-3, wrote-5)
dobj(wrote-5, it-6)
aux(indignant-9, would-7)
cop(indignant-9, be-8)
root(ROOT-0, indignant-9)
poss(saying-12, your-11)
prep_at(indignant-9, saying-12)
advmod(indignant-9, so-13)

(ROOT
  (S
    (VP (VB Tell)
      (NP
        (NP (PRP me))
        (, ,)
        (NP (NNP Mr.) (NNP Crawford))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ makes)
              (S
                (NP (DT a) (NN gathering))
                (NP (DT a) (NNP Church))))))))
    (. ?) ('' '')))

root(ROOT-0, Tell-1)
dobj(Tell-1, me-2)
nsubj(makes-8, me-2)
nn(Crawford-5, Mr.-4)
appos(me-2, Crawford-5)
rcmod(me-2, makes-8)
det(gathering-10, a-9)
nsubj(Church-12, gathering-10)
det(Church-12, a-11)
xcomp(makes-8, Church-12)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD would)
      (VP (VB take)
        (NP (PRP me))
        (NP (DT some) (NN time))
        (S
          (VP (TO to)
            (VP (VB arrange)
              (NP (PRP$ my) (NNS ideas))
              (SBAR (IN before)
                (S
                  (NP (PRP I))
                  (VP (MD could)
                    (VP (VB answer)
                      (NP (PRP you)))))))))))
    (. .) ('' '')))

nsubj(take-4, It-2)
aux(take-4, would-3)
root(ROOT-0, take-4)
iobj(take-4, me-5)
det(time-7, some-6)
dobj(take-4, time-7)
aux(arrange-9, to-8)
vmod(take-4, arrange-9)
poss(ideas-11, my-10)
dobj(arrange-9, ideas-11)
mark(answer-15, before-12)
nsubj(answer-15, I-13)
aux(answer-15, could-14)
advcl(arrange-9, answer-15)
dobj(answer-15, you-16)

(ROOT
  (S (`` ``)
    (VP (VB Is)
      (S
        (NP (PRP it))
        (NP
          (NP (RB not) (DT the) (NN presence))
          (PP (IN of)
            (NP
              (NP (NNP Christ))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ makes)
                    (S
                      (NP (DT an) (NN assembly))
                      (NP (DT a) (NNP Church)))))))))))
    (. ?) ('' '')))

root(ROOT-0, Is-2)
nsubj(presence-6, it-3)
neg(presence-6, not-4)
det(presence-6, the-5)
xcomp(Is-2, presence-6)
prep_of(presence-6, Christ-8)
nsubj(makes-10, Christ-8)
rcmod(Christ-8, makes-10)
det(assembly-12, an-11)
nsubj(Church-14, assembly-12)
det(Church-14, a-13)
xcomp(makes-10, Church-14)

(ROOT
  (INTJ (`` ``) (UH Well) (. ?) ('' '')))

root(ROOT-0, Well-2)

(ROOT
  (FRAG (`` ``)
    (ADJP (RB Does)
      (SBAR
        (S
          (NP (PRP He))
          (RB not)
          (VP (VBP say)
            (SBAR (IN that)
              (S
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (CD two)
                      (CC or)
                      (CD three))
                    (VP (VBP are)
                      (VP (VBN met)
                        (PP (IN in)
                          (NP (PRP$ His) (NN name)))))))
                (, ,)
                (NP (EX there))
                (VP (VBZ is)
                  (NP (PRP He))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN midst))
                      (PP (IN of)
                        (NP (PRP them))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Does-2)
nsubj(say-5, He-3)
neg(say-5, not-4)
ccomp(Does-2, say-5)
mark(is-18, that-6)
advmod(met-12, where-7)
nsubjpass(met-12, two-8)
conj_or(two-8, three-10)
nsubjpass(met-12, three-10)
auxpass(met-12, are-11)
advcl(is-18, met-12)
poss(name-15, His-14)
prep_in(met-12, name-15)
expl(is-18, there-17)
ccomp(say-5, is-18)
nsubj(is-18, He-19)
det(midst-22, the-21)
prep_in(is-18, midst-22)
prep_of(midst-22, them-24)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Then))
      (ADVP (RB thus) (RB far))
      (NP (PRP I))
      (VP (MD will)
        (VP (VB justify)
          (NP (PRP myself))
          (PP (TO to)
            (NP (PRP you))))))
    (, ,)
    (S
      (NP (DT that))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBP do) (RB not)
            (VP (VB go)
              (PP (TO to)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP you))
                    (VP (VBP call)
                      (NP (JJ _) (NN church) (NNS _))))))))))
      (, ,)
      (NP (PRP I))
      (ADVP (RB yet))
      (ADVP (RB often))
      (VP (VBP make)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (NP (DT a) (NN company))
              (VP (VBN met)
                (PP (IN in)
                  (NP (PRP$ His) (NN name)))))))))
    (. .) ('' '')))

advmod(justify-7, Then-2)
advmod(far-4, thus-3)
advmod(justify-7, far-4)
nsubj(justify-7, I-5)
aux(justify-7, will-6)
root(ROOT-0, justify-7)
dobj(justify-7, myself-8)
prep_to(justify-7, you-10)
nsubj(make-30, that-12)
mark(go-18, if-14)
nsubj(go-18, I-15)
aux(go-18, do-16)
neg(go-18, not-17)
advcl(make-30, go-18)
dobj(call-22, what-20)
nsubj(call-22, you-21)
prepc_to(go-18, call-22)
amod(_-25, _-23)
nn(_-25, church-24)
dobj(call-22, _-25)
nsubj(make-30, I-27)
advmod(make-30, yet-28)
advmod(make-30, often-29)
parataxis(justify-7, make-30)
dobj(make-30, one-31)
det(company-34, a-33)
prep_of(one-31, company-34)
vmod(company-34, met-35)
poss(name-38, His-37)
prep_in(met-35, name-38)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBZ does) (RB not)
      (VP (VB limit)
        (NP (DT the) (NN company))
        (PP (TO to)
          (NP (CD two)
            (CC or)
            (CD three)))))
    (. .) ('' '')))

nsubj(limit-5, He-2)
aux(limit-5, does-3)
neg(limit-5, not-4)
root(ROOT-0, limit-5)
det(company-7, the-6)
dobj(limit-5, company-7)
prep_to(limit-5, two-9)
prep_to(limit-5, three-11)
conj_or(two-9, three-11)

(ROOT
  (S (`` ``)
    (VP (VB Assuredly) (RB not))
    (. .)))

root(ROOT-0, Assuredly-2)
neg(Assuredly-2, not-3)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBP find)
          (S
            (NP (PRP I))
            (VP (VB get)
              (NP
                (NP (JJR more) (NN help)
                  (CC and)
                  (NN strength))
                (PP (IN with)
                  (NP (DT a) (JJ certain) (JJ few))))))
          (, ,)
          (SBAR
            (WHADVP (WRB why))
            (S
              (VP (MD should)))))))
    (NP (PRP I))
    (VP (VBP go)
      (PP (IN with)
        (NP (DT a) (NN multitude)
          (S
            (VP (TO to)
              (VP (VB get)
                (NP (JJR less))))))))
    (. ?)))

cc(go-19, But-1)
mark(find-4, if-2)
nsubj(find-4, I-3)
advcl(go-19, find-4)
nsubj(get-6, I-5)
ccomp(find-4, get-6)
amod(help-8, more-7)
dobj(get-6, help-8)
dobj(get-6, strength-10)
conj_and(help-8, strength-10)
det(few-14, a-12)
amod(few-14, certain-13)
prep_with(help-8, few-14)
advmod(should-17, why-16)
advcl(find-4, should-17)
nsubj(go-19, I-18)
root(ROOT-0, go-19)
det(multitude-22, a-21)
prep_with(go-19, multitude-22)
aux(get-24, to-23)
vmod(multitude-22, get-24)
dobj(get-24, less-25)

(ROOT
  (SQ (MD Will)
    (NP (PRP you))
    (VP (VB draw)
      (NP (DT another) (NN line))
      (PP (IN than)
        (NP (DT the) (NNP Master) (POS 's))))
    (. ?)))

aux(draw-3, Will-1)
nsubj(draw-3, you-2)
root(ROOT-0, draw-3)
det(line-5, another-4)
dobj(draw-3, line-5)
det(Master-8, the-7)
prep_than(draw-3, Master-8)
possessive(Master-8, 's-9)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP it))
      (VP (VB be)
        (ADJP (RBR more) (JJ sacred)
          (PP (TO to)
            (NP (NN worship))))
        (PP (IN with)
          (NP
            (QP (CD five) (CD hundred)
              (CC or)
              (CD five) (CD thousand))))
        (SBAR (IN than)
          (FRAG
            (PP (IN with)
              (NP (CD three)))))))
    (. ?)))

advmod(sacred-6, Why-1)
aux(sacred-6, should-2)
nsubj(sacred-6, it-3)
cop(sacred-6, be-4)
advmod(sacred-6, more-5)
root(ROOT-0, sacred-6)
prep_to(sacred-6, worship-8)
num(hundred-11, five-10)
prep_with(sacred-6, hundred-11)
num(thousand-14, five-13)
prep_with(sacred-6, thousand-14)
conj_or(hundred-11, thousand-14)
mark(with-16, than-15)
advcl(sacred-6, with-16)
pobj(with-16, three-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP He))
        (VP (VBZ is)
          (PP (IN in)
            (NP
              (NP (DT the) (NN midst))
              (PP (IN of)
                (NP (PRP them))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP
          (ADVP (RB wrong))
          (VBN gathered))))
    (. !) ('' '')))

mark(is-3, If-1)
nsubj(is-3, He-2)
advcl(gathered-15, is-3)
det(midst-6, the-5)
prep_in(is-3, midst-6)
prep_of(midst-6, them-8)
nsubjpass(gathered-15, they-10)
aux(gathered-15, can-11)
neg(gathered-15, not-12)
auxpass(gathered-15, be-13)
advmod(gathered-15, wrong-14)
root(ROOT-0, gathered-15)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ _)
      (S
        (NP (NNS looks))
        (ADJP (JJ _))
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP you))
            (VP (VBD thought)
              (NP (NNS yourselves))
              (ADVP (RBR better))
              (PP (IN than)
                (NP (NN everybody) (RB else))))))))
    (. !) ('' '')))

nsubj(_-3, It-2)
root(ROOT-0, _-3)
nsubj(thought-9, looks-4)
dep(thought-9, _-5)
advmod(thought-9, as-6)
mark(thought-9, if-7)
nsubj(thought-9, you-8)
xcomp(_-3, thought-9)
dobj(thought-9, yourselves-10)
advmod(thought-9, better-11)
prep_than(thought-9, everybody-13)
advmod(everybody-13, else-14)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD were)
          (ADVP (RB so))
          (, ,)
          (ADVP (RB then)))))
    (ADVP (RB certainly))
    (NP (PRP He))
    (VP (MD would) (RB not)
      (VP (VB be)
        (VP (VBN _)
          (NP
            (NP (CD one) (NNS _))
            (PP (IN of)
              (NP (DT the) (NN gathering)))))))
    (. !) ('' '')))

mark(were-4, If-2)
nsubj(were-4, it-3)
advcl(_-13, were-4)
advmod(were-4, so-5)
advmod(were-4, then-7)
advmod(_-13, certainly-8)
nsubjpass(_-13, He-9)
aux(_-13, would-10)
neg(_-13, not-11)
auxpass(_-13, be-12)
root(ROOT-0, _-13)
num(_-15, one-14)
dobj(_-13, _-15)
det(gathering-18, the-17)
prep_of(_-15, gathering-18)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP are)
      (NP (PRP you))
      (S
        (VP (TO to)
          (VP (VB know)
            (SBAR (IN that)
              (S
                (NP (PRP He))
                (VP (VBZ is)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN midst))
                      (PP (IN of)
                        (NP (PRP you))))))))))))
    (. ?) ('' '')))

advmod(are-3, How-2)
root(ROOT-0, are-3)
nsubj(are-3, you-4)
aux(know-6, to-5)
dep(are-3, know-6)
mark(is-9, that-7)
nsubj(is-9, He-8)
ccomp(know-6, is-9)
det(midst-12, the-11)
prep_in(is-9, midst-12)
prep_of(midst-12, you-14)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP are) (RB not)
          (VP (VBG keeping)
            (NP (PRP$ His) (NNS commandments))))))
    (, ,)
    (NP (PRP He))
    (VP (VBZ is) (RB not))
    (. .)))

mark(keeping-6, If-2)
nsubj(keeping-6, we-3)
aux(keeping-6, are-4)
neg(keeping-6, not-5)
advcl(is-11, keeping-6)
poss(commandments-8, His-7)
dobj(keeping-6, commandments-8)
nsubj(is-11, He-10)
root(ROOT-0, is-11)
neg(is-11, not-12)

(ROOT
  (S
    (S (CC But)
      (NP (PRP$ His) (NN presence))
      (VP (MD can) (RB not)
        (VP (VB be)
          (VP
            (ADVP (RB _))
            (VBN proved)
            (S
              (ADJP (JJ _)))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (MD can)
        (ADVP (RB only))
        (VP (VB be)
          (VP (VBN known)))))
    (. .)))

cc(proved-8, But-1)
poss(presence-3, His-2)
nsubjpass(proved-8, presence-3)
aux(proved-8, can-4)
neg(proved-8, not-5)
auxpass(proved-8, be-6)
advmod(proved-8, _-7)
root(ROOT-0, proved-8)
xcomp(proved-8, _-9)
nsubjpass(known-15, it-11)
aux(known-15, can-12)
advmod(known-15, only-13)
auxpass(known-15, be-14)
parataxis(proved-8, known-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP He))
        (VP (VBZ meets)
          (NP (PRP us)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (ADJP (JJ necessary)
        (PP (TO to)
          (NP
            (NP (DT the) (NN joy))
            (PP (IN of)
              (NP (PRP$ His) (NN presence))))))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (MD should)
            (VP (VB be)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB prove)
                      (SBAR (IN that)
                        (S
                          (NP (PRP He))
                          (VP (VBZ does)
                            (VP (VB meet)
                              (NP (PRP us)))))))))))))))
    (. !)))

mark(meets-3, If-1)
nsubj(meets-3, He-2)
advcl(necessary-9, meets-3)
dobj(meets-3, us-4)
nsubj(necessary-9, it-6)
cop(necessary-9, is-7)
neg(necessary-9, not-8)
root(ROOT-0, necessary-9)
det(joy-12, the-11)
prep_to(necessary-9, joy-12)
poss(presence-15, His-14)
prep_of(joy-12, presence-15)
mark(able-20, that-16)
nsubj(able-20, we-17)
nsubj(prove-22, we-17)
aux(able-20, should-18)
cop(able-20, be-19)
ccomp(necessary-9, able-20)
aux(prove-22, to-21)
xcomp(able-20, prove-22)
mark(meet-26, that-23)
nsubj(meet-26, He-24)
aux(meet-26, does-25)
ccomp(prove-22, meet-26)
dobj(meet-26, us-27)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN man))
        (VP (VBZ has)
          (NP
            (NP (DT the) (NN company))
            (PP (IN of)
              (NP (DT the) (NNP Lord)))))))
    (, ,)
    (NP (PRP he))
    (VP (MD will)
      (VP (VB care)
        (ADVP (RB little))
        (SBAR (IN whether)
          (S
            (NP (DT another))
            (VP
              (VP (VBZ does))
              (CC or)
              (VP (VBZ does) (RB not)
                (VP (VB believe)
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (VBZ has)))))))))))
    (. .) ('' '')))

mark(has-4, If-1)
det(man-3, a-2)
nsubj(has-4, man-3)
advcl(care-13, has-4)
det(company-6, the-5)
dobj(has-4, company-6)
det(Lord-9, the-8)
prep_of(company-6, Lord-9)
nsubj(care-13, he-11)
aux(care-13, will-12)
root(ROOT-0, care-13)
advmod(care-13, little-14)
mark(does-17, whether-15)
nsubj(does-17, another-16)
nsubj(believe-21, another-16)
ccomp(care-13, does-17)
aux(believe-21, does-19)
neg(believe-21, not-20)
ccomp(care-13, believe-21)
conj_or(does-17, believe-21)
mark(has-24, that-22)
nsubj(has-24, he-23)
ccomp(believe-21, has-24)

(ROOT
  (S (`` ``)
    (NP (PRP$ Your) (NN way))
    (VP (VBZ is)
      (PP (IN against)
        (NP
          (NP (DT the) (NN peace))
          (PP (IN of)
            (NP (DT the) (NNP Church))))))
    (. !)))

poss(way-3, Your-2)
nsubj(is-4, way-3)
root(ROOT-0, is-4)
det(peace-7, the-6)
prep_against(is-4, peace-7)
det(Church-10, the-9)
prep_of(peace-7, Church-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ fosters)
      (NP (NN division)))
    (. .) ('' '')))

nsubj(fosters-2, It-1)
root(ROOT-0, fosters-2)
dobj(fosters-2, division-3)

(ROOT
  (S (`` ``)
    (VP (VBD Did)
      (SBAR
        (S
          (NP (DT the) (NNP Lord))
          (VP (VBP come)
            (S
              (VP (TO to)
                (VP (VB send)
                  (NP (NN peace))
                  (PP (IN on)
                    (NP (DT the) (NN earth))))))))))
    (. ?)))

root(ROOT-0, Did-2)
det(Lord-4, the-3)
nsubj(come-5, Lord-4)
nsubj(send-7, Lord-4)
ccomp(Did-2, come-5)
aux(send-7, to-6)
xcomp(come-5, send-7)
dobj(send-7, peace-8)
det(earth-11, the-10)
prep_on(send-7, earth-11)

(ROOT
  (S
    (NP
      (NP (PRP$ My) (NN way))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP you))
          (VP (VBP call)
            (NP (PRP it)))))
      (, ,))
    (VP (MD would)
      (VP (VB make)
        (NP
          (NP (NN division))
          (, ,)
          (CC but)
          (NP
            (NP (NN division))
            (PP (IN between)
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP call)
                      (S
                        (NP (PRP themselves))
                        (NP (PRP$ His)))))))))
          (CC and)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP are)
                  (NP (PRP$ His)))))))))
    (. .)))

poss(way-2, My-1)
nsubj(make-10, way-2)
mark(call-6, as-4)
nsubj(call-6, you-5)
dep(way-2, call-6)
dobj(call-6, it-7)
aux(make-10, would-9)
root(ROOT-0, make-10)
dobj(make-10, division-11)
dobj(make-10, division-14)
conj_but(division-11, division-14)
prep_between(division-14, those-16)
nsubj(call-18, those-16)
rcmod(those-16, call-18)
nsubj(His-20, themselves-19)
xcomp(call-18, His-20)
dobj(make-10, those-22)
conj_and(division-11, those-22)
nsubj(His-25, those-22)
cop(His-25, are-24)
rcmod(those-22, His-25)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB bring)
        (PRT (RP together))
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP love)
                (NP (PRP Him))))))))
    (. .)))

nsubj(bring-3, It-1)
aux(bring-3, would-2)
root(ROOT-0, bring-3)
prt(bring-3, together-4)
dobj(bring-3, those-5)
nsubj(love-7, those-5)
rcmod(those-5, love-7)
dobj(love-7, Him-8)

(ROOT
  (S
    (NP (NNP Company))
    (VP (MD would)
      (VP (VB merge)
        (PP (IN with)
          (NP (NN company)))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (MD might)
              (VP (VB look)
                (PP (IN on)
                  (NP (DT the) (NNP Lord)))
                (ADVP (RB together))))))))
    (. .)))

nsubj(merge-3, Company-1)
aux(merge-3, would-2)
root(ROOT-0, merge-3)
prep_with(merge-3, company-5)
mark(look-9, that-6)
nsubj(look-9, they-7)
aux(look-9, might-8)
ccomp(merge-3, look-9)
det(Lord-12, the-11)
prep_on(look-9, Lord-12)
advmod(look-9, together-13)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB believe)
          (SBAR
            (S
              (NP (NNP Jesus))
              (VP (VBZ cares)
                (ADVP (RB much)
                  (PP (IN for)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ is)
                          (VP (VBN called)
                            (NP (DT the) (JJ visible) (NN Church))))))))))))))
    (: ;)
    (S (CC but)
      (NP (PRP He))
      (VP (VBZ cares)
        (PP (IN with)
          (NP
            (NP (PRP$ His) (JJ very) (NN Godhead))
            (PP (IN for)
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP do)
                      (SBAR (IN as)
                        (S
                          (NP (PRP He))
                          (VP (VBZ tells)
                            (NP (PRP them))))))))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (NP
          (NP (PRP$ His) (NN Father) (POS 's))
          (NNS friends))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (NP
          (NP (PRP$ His) (NN elect))
          (SBAR
            (WHPP (IN by)
              (WHNP (WP whom)))
            (S
              (NP (PRP He))
              (VP (MD will)
                (VP (VB save)
                  (NP (DT the) (NN world)))))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
nsubj(cares-6, Jesus-5)
ccomp(believe-4, cares-6)
advmod(cares-6, much-7)
nsubjpass(called-11, what-9)
auxpass(called-11, is-10)
prepc_for(much-7, called-11)
det(Church-14, the-12)
amod(Church-14, visible-13)
dobj(called-11, Church-14)
cc(cares-18, but-16)
nsubj(cares-18, He-17)
parataxis(believe-4, cares-18)
poss(Godhead-22, His-20)
amod(Godhead-22, very-21)
prep_with(cares-18, Godhead-22)
prep_for(Godhead-22, those-24)
nsubj(do-26, those-24)
rcmod(those-24, do-26)
mark(tells-29, as-27)
nsubj(tells-29, He-28)
advcl(do-26, tells-29)
dobj(tells-29, them-30)
nsubj(friends-37, they-32)
cop(friends-37, are-33)
poss(Father-35, His-34)
poss(friends-37, Father-35)
parataxis(believe-4, friends-37)
nsubj(elect-42, they-39)
cop(elect-42, are-40)
poss(elect-42, His-41)
parataxis(believe-4, elect-42)
prep_by(save-47, elect-42)
nsubj(save-47, He-45)
aux(save-47, will-46)
rcmod(elect-42, save-47)
det(world-49, the-48)
dobj(save-47, world-49)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (PP (IN by)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP obey))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN by)
        (NP
          (NP (PRP$ their) (NN obedience))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP He))
              (VP (MD will)
                (VP (VB save)
                  (NP
                    (NP (DT those))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBP do) (RB not)
                          (VP (VB obey))))))))))))
      (, ,)
      (ADVP (DT that) (VBZ is))
      (, ,)
      (VP (MD will)
        (VP (VB bring)
          (S
            (NP (PRP them))
            (VP (TO to)
              (VP (VB obey)))))))
    (. .)))

nsubj(is-2, It-1)
nsubj(bring-27, It-1)
root(ROOT-0, is-2)
prep_by(is-2, those-4)
nsubj(obey-6, those-4)
rcmod(those-4, obey-6)
poss(obedience-11, their-10)
prep_by(bring-27, obedience-11)
mark(save-16, that-13)
nsubj(save-16, He-14)
aux(save-16, will-15)
dep(obedience-11, save-16)
dobj(save-16, those-17)
nsubj(obey-21, those-17)
aux(obey-21, do-19)
neg(obey-21, not-20)
rcmod(those-17, obey-21)
advmod(bring-27, that-23)
dep(that-23, is-24)
aux(bring-27, will-26)
conj_and(is-2, bring-27)
dobj(bring-27, them-28)
nsubj(obey-30, them-28)
aux(obey-30, to-29)
xcomp(bring-27, obey-30)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN by)
          (NP (CD one)))
        (SBAR
          (S
            (NP (DT the) (NN world))
            (VP (MD will)
              (VP (VB pass)
                (PP (TO to)
                  (NP (PRP$ His) (NN side)))))))))
    (. .)))

nsubj(one-3, It-1)
cop(one-3, is-2)
root(ROOT-0, one-3)
prep_by(one-3, one-5)
det(world-7, the-6)
nsubj(pass-9, world-7)
aux(pass-9, will-8)
rcmod(one-3, pass-9)
poss(side-12, His-11)
prep_to(pass-9, side-12)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN saving))
        (PP (IN in)
          (NP (DT the) (NN lump)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(saving-4, no-3)
nsubj(is-2, saving-4)
det(lump-7, the-6)
prep_in(saving-4, lump-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (CD thousand))
        (VP (VB be)
          (VP (VBN converted)
            (PP (IN at)
              (NP (RB once)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT every) (JJ single) (JJ lonely) (NN man))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN converted)))))))
    (. .) ('' '')))

mark(converted-5, If-1)
det(thousand-3, a-2)
nsubjpass(converted-5, thousand-3)
auxpass(converted-5, be-4)
advcl(man-14, converted-5)
prep(converted-5, at-6)
pobj(at-6, once-7)
nsubj(man-14, it-9)
cop(man-14, is-10)
det(man-14, every-11)
amod(man-14, single-12)
amod(man-14, lonely-13)
root(ROOT-0, man-14)
nsubjpass(converted-17, man-14)
auxpass(converted-17, is-16)
rcmod(man-14, converted-17)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD would)
      (VP (VB make)
        (NP
          (NP (DT a) (JJ slow) (NN process))
          (PP (IN of)
            (NP (PRP it))))))
    (. !) ('' '')))

nsubj(make-4, You-2)
aux(make-4, would-3)
root(ROOT-0, make-4)
det(process-7, a-5)
amod(process-7, slow-6)
dobj(make-4, process-7)
prep_of(process-7, it-9)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (VP (VB slow))))
    (, ,)
    (ADVP (RB yet))
    (VP (VB faster)
      (PP (IN than)
        (NP (DT any) (JJ other))))
    (. .)))

mark(slow-3, If-2)
advcl(faster-6, slow-3)
advmod(faster-6, yet-5)
root(ROOT-0, faster-6)
det(other-9, any-8)
prep_than(faster-6, other-9)

(ROOT
  (S
    (NP (PDT All)
      (NP (NNP God) (POS 's))
      (NNS processes))
    (VP (VBP are)
      (ADJP (JJ slow)))
    (. .)))

dep(processes-4, All-1)
poss(processes-4, God-2)
nsubj(slow-6, processes-4)
cop(slow-6, are-5)
root(ROOT-0, slow-6)

(ROOT
  (SBARQ
    (WHNP
      (WHADJP (WRB How) (JJ many))
      (NNS years))
    (SQ
      (VP (VBZ has)
        (NP
          (NP (DT the) (NN world))
          (SBAR
            (S
              (VP (VBD existed) (, ,)
                (SQ (VBP do)
                  (NP (PRP you))
                  (VP (VB imagine) (, ,)
                    (ADVP (RB sir))))))))))
    (. ?) ('' '')))

advmod(many-2, How-1)
amod(years-3, many-2)
nsubj(has-4, years-3)
root(ROOT-0, has-4)
det(world-6, the-5)
dobj(has-4, world-6)
rcmod(world-6, existed-7)
aux(imagine-11, do-9)
nsubj(imagine-11, you-10)
dep(existed-7, imagine-11)
advmod(imagine-11, sir-13)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)

(ROOT
  (S
    (NP (NNS Geologists))
    (VP (VBP say)
      (NP
        (NP (NNS hundreds)
          (CC and)
          (NNS hundreds))
        (PP (IN of)
          (NP (NNS thousands)))))
    (. .) ('' '')))

nsubj(say-2, Geologists-1)
root(ROOT-0, say-2)
dobj(say-2, hundreds-3)
dobj(say-2, hundreds-5)
conj_and(hundreds-3, hundreds-5)
prep_of(hundreds-3, thousands-7)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHNP (WRB how) (JJ many))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (SBAR (IN since)
          (S
            (NP (NNP Christ))
            (VP (VBD came))))))
    (. ?) ('' '')))

cc(is-5, And-2)
advmod(many-4, how-3)
dep(is-5, many-4)
root(ROOT-0, is-5)
nsubj(is-5, it-6)
nsubj(came-9, Christ-8)
prepc_since(it-6, came-9)

(ROOT
  (S (`` ``)
    (VP (VB Toward)
      (NP (CD two) (CD thousand)))
    (. .) ('' '')))

root(ROOT-0, Toward-2)
num(thousand-4, two-3)
dobj(Toward-2, thousand-4)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP we))
    (VP (VBP are)
      (PP (CC but)
        (IN in)
        (NP
          (NP (DT the) (NN morning))
          (PP (IN of)
            (NP (NNP Christianity))))))
    (. !)))

advmod(are-4, Then-2)
nsubj(are-4, we-3)
root(ROOT-0, are-4)
cc(are-4, but-5)
det(morning-8, the-7)
prep_in(are-4, morning-8)
prep_of(morning-8, Christianity-10)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (RB plenty))
        (PP (IN of)
          (NP (NN time)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nsubj(is-2, plenty-3)
prep_of(plenty-3, time-5)

(ROOT
  (S
    (NP (DT The) (NN day))
    (VP (VBZ is)
      (PP (IN before)
        (NP (PRP us))))
    (. .) ('' '')))

det(day-2, The-1)
nsubj(is-3, day-2)
root(ROOT-0, is-3)
prep_before(is-3, us-5)

(ROOT
  (FRAG
    (NP
      (NP (`` ``) (JJ Dangerous) (NN doctrine))
      (PP (IN for)
        (NP (DT the) (NN sinner))))
    (. !) ('' '')))

amod(doctrine-3, Dangerous-2)
root(ROOT-0, doctrine-3)
det(sinner-6, the-5)
prep_for(doctrine-3, sinner-6)

(ROOT
  (FRAG (`` ``)
    (INTJ (WRB Why))
    (. ?)))

root(ROOT-0, Why-2)

(ROOT
  (S
    (S
      (NP (NNP Time))
      (VP (VBZ is)
        (ADJP (JJ plentiful)
          (PP (IN for)
            (NP (PRP$ his) (NN misery))))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (MD will) (RB not)
              (VP (VB repent)))))))
    (: ;)
    (S
      (ADJP (JJ plentiful)
        (PP (IN for)
          (NP
            (NP (DT the) (NN mercy))
            (PP (IN of)
              (NP (NNP God)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD would)
                  (VP (VB lead)
                    (S
                      (NP (PRP him))
                      (VP (TO to)
                        (VP (VB repentance))))))))))))
    (. .)))

nsubj(plentiful-3, Time-1)
cop(plentiful-3, is-2)
root(ROOT-0, plentiful-3)
poss(misery-6, his-5)
prep_for(plentiful-3, misery-6)
mark(repent-12, if-8)
nsubj(repent-12, he-9)
aux(repent-12, will-10)
neg(repent-12, not-11)
advcl(plentiful-3, repent-12)
parataxis(plentiful-3, plentiful-14)
det(mercy-17, the-16)
prep_for(plentiful-14, mercy-17)
nsubj(lead-22, mercy-17)
prep_of(mercy-17, God-19)
aux(lead-22, would-21)
rcmod(mercy-17, lead-22)
dobj(lead-22, him-23)
nsubj(repentance-25, him-23)
aux(repentance-25, to-24)
xcomp(lead-22, repentance-25)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP
          (NP (RB plenty))
          (PP (IN of)
            (NP
              (NP (NN time))
              (PP (IN for)
                (NP (NN labor)
                  (CC and)
                  (NN hope))))))
        (: ;)
        (NP
          (NP (NN none))
          (PP (IN for)
            (NP (NN indifference)
              (CC and)
              (NN delay))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nsubj(is-2, plenty-3)
prep_of(plenty-3, time-5)
prep_for(time-5, labor-7)
prep_for(time-5, hope-9)
conj_and(labor-7, hope-9)
dep(plenty-3, none-11)
prep_for(none-11, indifference-13)
prep_for(none-11, delay-15)
conj_and(indifference-13, delay-15)

(ROOT
  (S
    (NP (NNP God) (NNP _))
    (VP (MD will)
      (ADVP (RB _))
      (VP (VB have)
        (S
          (NP (PRP$ his) (NNS creatures))
          (ADJP (JJ good)))))
    (. .)))

nn(_-2, God-1)
nsubj(have-5, _-2)
aux(have-5, will-3)
advmod(have-5, _-4)
root(ROOT-0, have-5)
poss(creatures-7, his-6)
nsubj(good-8, creatures-7)
xcomp(have-5, good-8)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD can) (RB not)
      (VP (VB escape)
        (NP (PRP Him))))
    (. .) ('' '')))

nsubj(escape-4, They-1)
aux(escape-4, can-2)
neg(escape-4, not-3)
root(ROOT-0, escape-4)
dobj(escape-4, Him-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (DT a) (NN man))
    (VP (MD may)
      (VP (VB put)
        (PRT (RP off))
        (NP (NN repentance))
        (ADVP
          (ADVP (RB as) (RB long))
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBZ pleases)))))))
    (. !) ('' '')))

advmod(put-6, Then-2)
det(man-4, a-3)
nsubj(put-6, man-4)
aux(put-6, may-5)
root(ROOT-0, put-6)
prt(put-6, off-7)
dobj(put-6, repentance-8)
advmod(long-10, as-9)
advmod(put-6, long-10)
mark(pleases-13, as-11)
nsubj(pleases-13, he-12)
advcl(long-10, pleases-13)
ccomp(long-10, pleases-13)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Certainly))
      (NP (PRP he))
      (VP (MD may)))
    (PRN (: --)
      (SBAR
        (ADVP
          (ADVP (IN at) (JJS least) (RB as))
          (RB long))
        (IN as)
        (S
          (NP (PRP he))
          (VP (MD can))))
      (: --))
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT a) (JJ fearful) (NN thing)
          (S
            (VP (TO to)
              (VP (VB try)
                (NP (NNS issues))
                (PP (IN with)
                  (NP (NNP God)))))))))
    (. .) ('' '')))

advmod(may-4, Certainly-2)
nsubj(may-4, he-3)
root(ROOT-0, may-4)
advmod(can-12, at-6)
pobj(at-6, least-7)
advmod(at-6, as-8)
advmod(at-6, long-9)
mark(can-12, as-10)
nsubj(can-12, he-11)
dep(may-4, can-12)
nsubj(thing-19, it-15)
cop(thing-19, is-16)
det(thing-19, a-17)
amod(thing-19, fearful-18)
conj_but(may-4, thing-19)
aux(try-21, to-20)
vmod(thing-19, try-21)
dobj(try-21, issues-22)
prep_with(try-21, God-24)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB hardly))
      (VP (VB say)
        (S
          (NP (PRP I))
          (VP (VB understand)
            (NP (PRP you))))))
    (. .) ('' '')))

nsubj(say-5, I-2)
aux(say-5, can-3)
advmod(say-5, hardly-4)
root(ROOT-0, say-5)
nsubj(understand-7, I-6)
ccomp(say-5, understand-7)
dobj(understand-7, you-8)

(ROOT
  (S (`` ``)
    (NP (NNP Mr.) (NNP Crawford))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (VP (VBN questioned)
        (NP (PRP me))
        (PP (IN in)
          (NP
            (NP
              (NP (DT the) (NN way))
              (PP (IN of)
                (NP (JJ kindly) (NN anxiety)
                  (CC and)
                  (NN reproof))))
            (: ;)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ has)
                  (VP (VBN given)
                    (NP (PRP me))
                    (NP (DT the) (NN right)
                      (S
                        (VP (TO to)
                          (VP (VB question)
                            (NP (PRP you))))))))))))))
    (. .)))

nn(Crawford-3, Mr.-2)
nsubj(questioned-7, Crawford-3)
nsubj(questioned-7, you-5)
aux(questioned-7, have-6)
root(ROOT-0, questioned-7)
dobj(questioned-7, me-8)
det(way-11, the-10)
prep_in(questioned-7, way-11)
nsubj(given-20, way-11)
amod(anxiety-14, kindly-13)
prep_of(way-11, anxiety-14)
prep_of(way-11, reproof-16)
conj_and(anxiety-14, reproof-16)
aux(given-20, has-19)
rcmod(way-11, given-20)
iobj(given-20, me-21)
det(right-23, the-22)
dobj(given-20, right-23)
aux(question-25, to-24)
vmod(right-23, question-25)
dobj(question-25, you-26)

(ROOT
  (S
    (VP (VB Tell)
      (S
        (NP (PRP me))
        (, ,)
        (VP (VB do)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP admit)
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBP are)
                      (ADJP (VBN bound)
                        (S
                          (VP (TO to)
                            (VP (VB do)
                              (SBAR
                                (WHNP (WP what))
                                (S
                                  (NP (PRP$ our) (NN Lord))
                                  (VP (VBZ requires)))))))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Tell-1)
nsubj(do-4, me-2)
ccomp(Tell-1, do-4)
nsubj(admit-6, you-5)
ccomp(do-4, admit-6)
nsubjpass(bound-9, we-7)
nsubj(do-11, we-7)
auxpass(bound-9, are-8)
ccomp(admit-6, bound-9)
aux(do-11, to-10)
xcomp(bound-9, do-11)
dobj(requires-15, what-12)
poss(Lord-14, our-13)
nsubj(requires-15, Lord-14)
ccomp(do-11, requires-15)

(ROOT
  (PP (`` ``) (IN Of)
    (NP (NN course))
    (. .)))

root(ROOT-0, Of-2)
pobj(Of-2, course-3)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (DT any) (JJ Christian) (NN man))
      (VP (VB do)
        (ADVP (RB otherwise))))
    (. ?) ('' '')))

advmod(do-6, How-1)
aux(do-6, could-2)
det(man-5, any-3)
amod(man-5, Christian-4)
nsubj(do-6, man-5)
root(ROOT-0, do-6)
advmod(do-6, otherwise-7)

(ROOT
  (S (`` ``)
    (CC Yet)
    (NP (DT a) (NN man))
    (VP (MD may)
      (VP
        (VP (VB say) (: :) (`` `)
          (INTJ (NN Lord) (, ,) (NN Lord)))
        (, ,) ('' ')
        (CC and)
        (VP (VB be)
          (VP (VBN cast)
            (PRT (RP out))))))
    (. !)))

det(man-4, a-3)
nsubj(say-6, man-4)
nsubjpass(cast-16, man-4)
aux(say-6, may-5)
root(ROOT-0, say-6)
discourse(say-6, Lord-9)
dep(Lord-9, Lord-11)
auxpass(cast-16, be-15)
conj_and(say-6, cast-16)
prt(cast-16, out-17)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP
          (NP (CD one) (NN thing))
          (SBAR
            (S
              (VP (TO to)
                (VP (VB say)
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (VBP are)
                        (ADJP (VBN bound)
                          (S
                            (VP (TO to)
                              (VP (VB do)
                                (SBAR
                                  (WHNP (WP what))
                                  (S
                                    (NP (DT the) (NNP Lord))
                                    (VP (VBZ tells)
                                      (NP (PRP us)))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT another))
      (VP (TO to)
        (VP (VB do)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP He))
              (VP (VBZ tells)
                (NP (PRP us))))))))
    (. !)))

nsubj(thing-4, It-1)
cop(thing-4, is-2)
num(thing-4, one-3)
root(ROOT-0, thing-4)
aux(say-6, to-5)
vmod(thing-4, say-6)
nsubjpass(bound-9, we-7)
nsubj(do-11, we-7)
auxpass(bound-9, are-8)
ccomp(say-6, bound-9)
aux(do-11, to-10)
xcomp(bound-9, do-11)
dobj(tells-15, what-12)
det(Lord-14, the-13)
nsubj(tells-15, Lord-14)
ccomp(do-11, tells-15)
dobj(tells-15, us-16)
nsubj(do-21, another-19)
aux(do-21, to-20)
conj_and(thing-4, do-21)
dobj(tells-24, what-22)
nsubj(tells-24, He-23)
ccomp(do-21, tells-24)
dobj(tells-24, us-25)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ says) (: :) (`` `)
        (S
          (VP (VB Seek)
            (S
              (NP (PRP ye))
              (VP (VBG _)
                (NP (JJ first) (NNS _)))))
          (NP
            (NP (DT the) (NN kingdom))
            (PP (IN of)
              (NP
                (NP (NNP God))
                (CC and)
                (NP (PRP$ His) (NNS righteousness))))))))
    (: :) ('' ')
    (S
      (NP (NNP Mr.))
      (VP (VBD Crawford) (, ,)
        (SQ
          (SQ (VBP are)
            (NP (PRP you))
            (VP (VBG seeking)
              (NP
                (NP (DT the) (NN kingdom))
                (PP (IN of)
                  (NP (NNP God) (NNP _) (JJ first) (NN _))))))
          (, ,)
          (CC or)
          (SQ (VBP are)
            (NP (PRP you))
            (VP (VBG seeking)
              (NP (NN money))
              (ADVP (RB first)))))))
    (. ?) ('' '')))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
ccomp(says-2, Seek-5)
nsubj(_-7, ye-6)
dep(Seek-5, _-7)
amod(_-9, first-8)
dobj(_-7, _-9)
det(kingdom-11, the-10)
dep(Seek-5, kingdom-11)
prep_of(kingdom-11, God-13)
poss(righteousness-16, His-15)
prep_of(kingdom-11, righteousness-16)
conj_and(God-13, righteousness-16)
nsubj(Crawford-20, Mr.-19)
parataxis(says-2, Crawford-20)
aux(seeking-24, are-22)
nsubj(seeking-24, you-23)
dep(Crawford-20, seeking-24)
det(kingdom-26, the-25)
dobj(seeking-24, kingdom-26)
nn(_-31, God-28)
nn(_-31, _-29)
amod(_-31, first-30)
prep_of(kingdom-26, _-31)
aux(seeking-36, are-34)
nsubj(seeking-36, you-35)
dep(Crawford-20, seeking-36)
conj_or(seeking-24, seeking-36)
dobj(seeking-36, money-37)
advmod(seeking-36, first-38)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (VBP are)
      (VP (VBN sent)
        (PP (IN into)
          (NP (DT the) (NN world)))
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (PRP$ our) (NN living)))))))
    (. .) ('' '')))

nsubjpass(sent-4, We-2)
nsubj(make-9, We-2)
auxpass(sent-4, are-3)
root(ROOT-0, sent-4)
det(world-7, the-6)
prep_into(sent-4, world-7)
aux(make-9, to-8)
xcomp(sent-4, make-9)
poss(living-11, our-10)
dobj(make-9, living-11)

(ROOT
  (S (`` ``)
    (S
      (S
        (VP (VB Sent)
          (PP (IN into)
            (NP (DT the) (NN world)))))
      (, ,)
      (NP (PRP we))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB seek)
              (NP (PRP$ our) (NN living)))))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBP are) (RB not)
        (VP (VBN sent)
          (PP (IN into)
            (NP (DT the) (NN world)))
          (S
            (VP
              (VP (TO to)
                (VP (VB seek)
                  (NP (PRP$ our) (NN living))))
              (, ,)
              (CC but)
              (VP (TO to)
                (VP (VB seek)
                  (NP
                    (NP (DT the) (NN kingdom)
                      (CC and)
                      (NNS righteousness))
                    (PP (IN of)
                      (NP (NNP God)))))))))))
    (. .)))

ccomp(have-8, Sent-2)
det(world-5, the-4)
prep_into(Sent-2, world-5)
nsubj(have-8, we-7)
nsubj(seek-10, we-7)
root(ROOT-0, have-8)
aux(seek-10, to-9)
xcomp(have-8, seek-10)
poss(living-12, our-11)
dobj(seek-10, living-12)
nsubjpass(sent-17, we-14)
auxpass(sent-17, are-15)
neg(sent-17, not-16)
parataxis(have-8, sent-17)
det(world-20, the-19)
prep_into(sent-17, world-20)
aux(seek-22, to-21)
ccomp(sent-17, seek-22)
poss(living-24, our-23)
dobj(seek-22, living-24)
aux(seek-28, to-27)
ccomp(sent-17, seek-28)
conj_but(seek-22, seek-28)
det(kingdom-30, the-29)
dobj(seek-28, kingdom-30)
dobj(seek-28, righteousness-32)
conj_and(kingdom-30, righteousness-32)
prep_of(kingdom-30, God-34)

(ROOT
  (S (CC And)
    (S
      (VP (TO to)
        (VP (VB seek)
          (NP (DT a) (NN living)))))
    (VP (VBZ is)
      (ADJP (RB very) (JJ different)
        (PP (IN from)
          (S
            (VP (VBG seeking)
              (NP (DT a) (NN fortune)))))))
    (. !) ('' '')))

cc(different-8, And-1)
aux(seek-3, to-2)
csubj(different-8, seek-3)
det(living-5, a-4)
dobj(seek-3, living-5)
cop(different-8, is-6)
advmod(different-8, very-7)
root(ROOT-0, different-8)
prepc_from(different-8, seeking-10)
det(fortune-12, a-11)
dobj(seeking-10, fortune-12)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP
          (NP (PRP you))
          (, ,)
          (NP (NNP Mr.) (NNP Ingram))
          (, ,))
        (VP (VBD had)
          (NP (DT a)
            (ADJP (RB little) (JJ wholesome))
            (NN ambition)))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJR less))
        (PP (VBN given)
          (PP (TO to)
            (S
              (VP (VBG judging)
                (NP (PRP$ your) (NNS neighbors))))))))
    (. .) ('' '')))

mark(had-8, If-2)
nsubj(had-8, you-3)
nn(Ingram-6, Mr.-5)
appos(you-3, Ingram-6)
advcl(less-17, had-8)
det(ambition-12, a-9)
advmod(wholesome-11, little-10)
amod(ambition-12, wholesome-11)
dobj(had-8, ambition-12)
nsubj(less-17, you-14)
aux(less-17, would-15)
cop(less-17, be-16)
root(ROOT-0, less-17)
prep(less-17, given-18)
pcomp(given-18, to-19)
pcomp(to-19, judging-20)
poss(neighbors-22, your-21)
dobj(judging-20, neighbors-22)

(ROOT
  (S
    (S
      (NP (NNP Andrew))
      (VP (VBD held)
        (NP (PRP$ his) (NN peace))))
    (, ,)
    (CC and)
    (S
      (NP (NNP George))
      (VP (VBD concluded)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN had)
                (NP
                  (NP (DT the) (JJS best))
                  (PP (IN of)
                    (NP (DT the) (NN argument))))
                (: --)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD was)
                      (NP
                        (NP (DT all))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD wanted))))))))))))))
    (: ;)
    (S
      (PP (IN of)
        (NP
          (NP (DT the) (NN truth))
          (VP (VBN concerned)
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD did) (RB not)
                  (VP (VB see)
                    (ADJP (JJ enough)
                      (S
                        (VP (TO to)
                          (VP (VB care)
                            (PP (IN about)
                              (NP (PRP it)))))))
                    (NP (NNP Andrew)))))))))
      (, ,)
      (S
        (VP (VBG perceiving)
          (SBAR
            (S
              (NP (DT no) (NN good))
              (VP (VBD was)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN done))))))))))
      (, ,)
      (VP (VBD was)
        (ADJP (JJ willing)
          (S
            (VP (TO to)
              (VP (VB appear)
                (VP (VBN defeated))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD did) (RB not)
        (VP (VB value)
          (NP
            (NP (DT any) (NN victory))
            (PP (CC but)
              (NP
                (NP (DT the) (NN victory))
                (PP (IN of)
                  (NP (DT the) (NN truth)))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP George))
      (VP (VBD was) (RB not)
        (ADJP (RB yet) (JJ capable)
          (PP (IN of)
            (S
              (VP (VBG being)
                (VP (VBN conquered)
                  (PP (IN by)
                    (NP (DT the) (NN truth))))))))))
    (. .)))

nsubj(held-2, Andrew-1)
nsubj(willing-48, Andrew-1)
nsubj(appear-50, Andrew-1)
root(ROOT-0, held-2)
poss(peace-4, his-3)
dobj(held-2, peace-4)
nsubj(concluded-8, George-7)
conj_and(held-2, concluded-8)
nsubj(had-11, he-9)
aux(had-11, had-10)
ccomp(concluded-8, had-11)
det(best-13, the-12)
dobj(had-11, best-13)
det(argument-16, the-15)
prep_of(best-13, argument-16)
nsubj(all-20, which-18)
cop(all-20, was-19)
parataxis(had-11, all-20)
nsubj(wanted-22, he-21)
rcmod(all-20, wanted-22)
det(truth-26, the-25)
prep_of(willing-48, truth-26)
vmod(truth-26, concerned-27)
nsubj(see-31, he-28)
aux(see-31, did-29)
neg(see-31, not-30)
ccomp(concerned-27, see-31)
acomp(see-31, enough-32)
aux(care-34, to-33)
xcomp(enough-32, care-34)
prep_about(care-34, it-36)
dobj(see-31, Andrew-37)
dep(willing-48, perceiving-39)
neg(good-41, no-40)
nsubj(was-42, good-41)
nsubjpass(done-45, good-41)
ccomp(perceiving-39, was-42)
aux(done-45, to-43)
auxpass(done-45, be-44)
xcomp(was-42, done-45)
cop(willing-48, was-47)
conj_and(held-2, willing-48)
aux(appear-50, to-49)
xcomp(willing-48, appear-50)
dep(appear-50, defeated-51)
nsubj(value-56, he-53)
aux(value-56, did-54)
neg(value-56, not-55)
conj_and(held-2, value-56)
det(victory-58, any-57)
dobj(value-56, victory-58)
prep(victory-58, but-59)
det(victory-61, the-60)
pobj(but-59, victory-61)
det(truth-64, the-63)
prep_of(victory-61, truth-64)
nsubj(capable-71, George-67)
cop(capable-71, was-68)
neg(capable-71, not-69)
advmod(capable-71, yet-70)
conj_and(held-2, capable-71)
auxpass(conquered-74, being-73)
prepc_of(capable-71, conquered-74)
det(truth-77, the-76)
agent(conquered-74, truth-77)

(ROOT
  (INTJ (`` ``) (UH No) (. !) ('' '')))

root(ROOT-0, No-2)

(ROOT
  (SINV
    (VP (VBD resumed))
    (NP (PRP he))
    (, ,) (`` ``)
    (S
      (NP (PRP we))
      (VP (MD must)
        (VP (VB avoid)
          (NP (NNS personalities)))))
    (. .)))

root(ROOT-0, resumed-1)
nsubj(resumed-1, he-2)
nsubj(avoid-7, we-5)
aux(avoid-7, must-6)
ccomp(resumed-1, avoid-7)
dobj(avoid-7, personalities-8)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (JJ certain) (NNS things))
          (SBAR
            (S
              (NP (DT all) (JJ respectable) (NNS people))
              (VP (VBP have)
                (VP (VBN agreed)
                  (S
                    (VP (TO to)
                      (VP (VB regard)
                        (ADVP (RB as) (RB right))))))))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ presumptuous) (NN man))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ refuses)
                (S
                  (VP (TO to)
                    (VP (VB regard)
                      (NP (PRP them)))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(things-4, certain-3)
nsubj(are-2, things-4)
det(people-7, all-5)
amod(people-7, respectable-6)
nsubj(agreed-9, people-7)
nsubj(regard-11, people-7)
aux(agreed-9, have-8)
rcmod(things-4, agreed-9)
aux(regard-11, to-10)
xcomp(agreed-9, regard-11)
advmod(right-13, as-12)
advmod(regard-11, right-13)
nsubj(man-19, he-15)
cop(man-19, is-16)
det(man-19, a-17)
amod(man-19, presumptuous-18)
parataxis(are-2, man-19)
nsubj(refuses-21, man-19)
nsubj(regard-23, man-19)
rcmod(man-19, refuses-21)
aux(regard-23, to-22)
xcomp(refuses-21, regard-23)
dobj(regard-23, them-24)

(ROOT
  (S
    (VP (VB Reflect)
      (PP (IN on)
        (NP
          (NP (PRP it))
          (, ,)
          (NP (NNP Mr.) (NNP Ingram)))))
    (. .) ('' '')))

root(ROOT-0, Reflect-1)
prep_on(Reflect-1, it-3)
nn(Ingram-6, Mr.-5)
appos(it-3, Ingram-6)

(ROOT
  (S
    (S
      (NP (DT The) (JJ curious) (NN smile))
      (VP (VBD hovered)
        (PP (IN about)
          (NP
            (NP (DT the) (NN lip))
            (PP (IN of)
              (NP (DT the) (NN plow-man)))))))
    (: ;)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NNS things)
            (S
              (VP (TO to)
                (VP (VB say)))))
          (VP (VBD did) (RB not)
            (VP (VB come)
              (PP (TO to)
                (NP (PRP him)))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD went)
        (ADVP (RB nowhere))
        (S
          (VP (TO to)
            (VP (VB fetch)
              (NP (PRP them)))))))
    (. .)))

det(smile-3, The-1)
amod(smile-3, curious-2)
nsubj(hovered-4, smile-3)
root(ROOT-0, hovered-4)
det(lip-7, the-6)
prep_about(hovered-4, lip-7)
det(plow-man-10, the-9)
prep_of(lip-7, plow-man-10)
advmod(come-18, when-12)
nsubj(come-18, things-13)
aux(say-15, to-14)
vmod(things-13, say-15)
aux(come-18, did-16)
neg(come-18, not-17)
advcl(went-23, come-18)
prep_to(come-18, him-20)
nsubj(went-23, he-22)
nsubj(fetch-26, he-22)
parataxis(hovered-4, went-23)
advmod(went-23, nowhere-24)
aux(fetch-26, to-25)
xcomp(went-23, fetch-26)
dobj(fetch-26, them-27)

(ROOT
  (S
    (S
      (ADVP (RB Almost)
        (PP (IN in)
          (NP (NN childhood))))
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN learned)
          (SBAR (IN that) (, ,)
            (S
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP one))
                  (VP (VBZ is)
                    (VP (VBN required)
                      (S
                        (VP (TO to)
                          (VP (VB meet)
                            (NP (DT the) (NN lie)))))))))
              (, ,)
              (NP (NNS words))
              (VP (VBP are)
                (VP (VBN given)
                  (NP (PRP him)))))))))
    (: ;)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBP are) (RB not))))
      (, ,)
      (NP (NN silence))
      (VP (VBZ is)
        (ADJP (JJR better))))
    (. .)))

advmod(learned-6, Almost-1)
prep_in(Almost-1, childhood-3)
nsubj(learned-6, he-4)
aux(learned-6, had-5)
root(ROOT-0, learned-6)
mark(given-20, that-7)
advmod(required-12, when-9)
nsubjpass(required-12, one-10)
nsubj(meet-14, one-10)
auxpass(required-12, is-11)
advcl(given-20, required-12)
aux(meet-14, to-13)
xcomp(required-12, meet-14)
det(lie-16, the-15)
dobj(meet-14, lie-16)
nsubjpass(given-20, words-18)
auxpass(given-20, are-19)
ccomp(learned-6, given-20)
dobj(given-20, him-21)
advmod(are-25, when-23)
nsubj(are-25, they-24)
advcl(better-30, are-25)
neg(are-25, not-26)
nsubj(better-30, silence-28)
cop(better-30, is-29)
parataxis(learned-6, better-30)

(ROOT
  (S
    (NP
      (NP (DT A) (NN man))
      (SBAR
        (WHNP (WP who))
        (S
          (VP
            (VP (VBZ does) (RB not)
              (VP (VB love)
                (NP (DT the) (NN truth))))
            (, ,)
            (CC but)
            (VP (VBZ disputes)
              (PP (IN for)
                (NP (NN victory))))))))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT the) (NNS swine))
        (PP (IN before)
          (SBAR
            (WHNP (WP whom))
            (S
              (NP (NNS pearls))
              (VP (MD must) (RB not)
                (VP (VB be)
                  (VP (VBN cast)))))))))
    (. .)))

det(man-2, A-1)
nsubj(love-6, man-2)
nsubj(disputes-11, man-2)
nsubj(swine-17, man-2)
aux(love-6, does-4)
neg(love-6, not-5)
rcmod(man-2, love-6)
det(truth-8, the-7)
dobj(love-6, truth-8)
rcmod(man-2, disputes-11)
conj_but(love-6, disputes-11)
prep_for(disputes-11, victory-13)
cop(swine-17, is-15)
det(swine-17, the-16)
root(ROOT-0, swine-17)
dobj(cast-24, whom-19)
nsubjpass(cast-24, pearls-20)
aux(cast-24, must-21)
neg(cast-24, not-22)
auxpass(cast-24, be-23)
prepc_before(swine-17, cast-24)

(ROOT
  (S
    (NP
      (NP (NNP Andrew) (POS 's))
      (NN smile))
    (VP (VBD meant)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD had)
            (VP (VBN been)
              (NP
                (NP (DT a) (NN waste))
                (PP (IN of)
                  (NP (PRP$ his) (NN time)
                    (S
                      (VP (TO to)
                        (VP (VB call)
                          (PP (IN upon)
                            (NP (NNP Mr.) (NNP Crawford))))))))))))))
    (. .)))

poss(smile-3, Andrew-1)
nsubj(meant-4, smile-3)
root(ROOT-0, meant-4)
mark(waste-10, that-5)
nsubj(waste-10, it-6)
aux(waste-10, had-7)
cop(waste-10, been-8)
det(waste-10, a-9)
ccomp(meant-4, waste-10)
poss(time-13, his-12)
prep_of(waste-10, time-13)
aux(call-15, to-14)
vmod(time-13, call-15)
nn(Crawford-18, Mr.-17)
prep_upon(call-15, Crawford-18)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD did) (RB not)
      (VP (VB blame)
        (NP (PRP himself))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN come)
                (PRT (RP out))
                (PP (IN of)
                  (NP (JJ pure) (NN friendliness)))))))))
    (. .)))

cc(blame-5, But-1)
nsubj(blame-5, he-2)
aux(blame-5, did-3)
neg(blame-5, not-4)
root(ROOT-0, blame-5)
dobj(blame-5, himself-6)
mark(come-11, for-8)
nsubj(come-11, he-9)
aux(come-11, had-10)
advcl(blame-5, come-11)
amod(friendliness-15, pure-14)
prep_out_of(come-11, friendliness-15)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (MD would)
        (VP (VB have)
          (VP (VBN risen)
            (PP (IN at)
              (NP (RB once))))))
      (, ,)
      (CC but)
      (VP (VBD feared)
        (S
          (VP (TO to)
            (VP (VB seem)
              (ADJP (JJ offended)))))))
    (. .)))

nsubj(risen-4, He-1)
nsubj(feared-9, He-1)
nsubj(seem-11, He-1)
aux(risen-4, would-2)
aux(risen-4, have-3)
root(ROOT-0, risen-4)
prep(risen-4, at-5)
pobj(at-5, once-6)
conj_but(risen-4, feared-9)
aux(seem-11, to-10)
xcomp(feared-9, seem-11)
acomp(seem-11, offended-12)

(ROOT
  (S
    (S
      (NP (NNP Crawford))
      (, ,)
      (ADVP (RB therefore))
      (, ,)
      (PP (IN with)
        (NP
          (NP (DT the) (NNS rudeness))
          (PP (IN of)
            (NP (DT a) (JJ superior)))))
      (, ,)
      (NP (PRP himself))
      (VP (VBD rose) (, ,)
        (S
          (VP (VBG saying)))))
    (: :) (`` ``)
    (SQ (VBZ Is)
      (NP (EX there))
      (ADJP (NN anything))
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD can)
            (VP (VB do)
              (PP (IN for)
                (NP
                  (NP (PRP you))
                  (, ,)
                  (NP (NNP Mr.) (NNP Ingram)))))))
        (. ?) ('' '')))))

nsubj(rose-13, Crawford-1)
advmod(rose-13, therefore-3)
det(rudeness-7, the-6)
prep_with(rose-13, rudeness-7)
det(superior-10, a-9)
prep_of(rudeness-7, superior-10)
nsubj(rose-13, himself-12)
root(ROOT-0, rose-13)
xcomp(rose-13, saying-15)
cop(anything-20, Is-18)
expl(anything-20, there-19)
dep(rose-13, anything-20)
nsubj(do-23, I-21)
aux(do-23, can-22)
dep(anything-20, do-23)
prep_for(do-23, you-25)
nn(Ingram-28, Mr.-27)
appos(you-25, Ingram-28)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT The) (JJ only) (NN thing) (NN one) (NN man))
      (VP (MD can)
        (VP (VB do)
          (SBAR (IN for)
            (S
              (NP (DT another))
              (VP (VBZ is)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (PP (IN at)
                        (NP (CD one)))
                      (PP (IN with)
                        (NP (PRP him))))))))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP
      (NP (NNP Andrew))
      (, ,)
      (NP (VBG rising)))
    (. .)))

det(man-6, The-2)
amod(man-6, only-3)
nn(man-6, thing-4)
nn(man-6, one-5)
nsubj(do-8, man-6)
aux(do-8, can-7)
ccomp(answered-20, do-8)
mark(is-11, for-9)
nsubj(is-11, another-10)
nsubj(be-13, another-10)
advcl(do-8, is-11)
aux(be-13, to-12)
xcomp(is-11, be-13)
prep_at(be-13, one-15)
prep_with(be-13, him-17)
root(ROOT-0, answered-20)
nsubj(answered-20, Andrew-21)
appos(Andrew-21, rising-23)

(ROOT
  (S (`` ``)
    (INTJ (UH Ah))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (NP (DT a) (NN socialist)))
    (. !)))

discourse(socialist-7, Ah-2)
nsubj(socialist-7, you-4)
cop(socialist-7, are-5)
det(socialist-7, a-6)
root(ROOT-0, socialist-7)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ accounts)
      (PP (IN for)
        (NP (RB much))))
    (. !) ('' '')))

nsubj(accounts-2, That-1)
root(ROOT-0, accounts-2)
prep(accounts-2, for-3)
pobj(for-3, much-4)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP George)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, George-2)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Tell)
        (NP (PRP me))
        (NP (DT this))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP (NNP Andrew))
      (, ,)
      (VP (VBG looking)
        (NP (PRP him))
        (PP (IN in)
          (NP (DT the) (NNS eyes)))))
    (: :) (`` ``)
    (S
      (NP (NNP Did) (NNP Jesus))
      (ADVP (RB ever))
      (VP (VBP ask)
        (SBAR
          (S
            (PP (IN of)
              (NP (PRP$ His) (NNP Father) (NN anything)))
            (NP (PRP$ His) (NN Father))
            (VP (MD would) (RB not)
              (VP (VB give)
                (NP (PRP Him))))))))
    (. ?) ('' '')))

ccomp(returned-7, Tell-2)
iobj(Tell-2, me-3)
dobj(Tell-2, this-4)
root(ROOT-0, returned-7)
nsubj(returned-7, Andrew-8)
vmod(Andrew-8, looking-10)
dobj(looking-10, him-11)
det(eyes-14, the-13)
prep_in(looking-10, eyes-14)
nn(Jesus-18, Did-17)
nsubj(ask-20, Jesus-18)
advmod(ask-20, ever-19)
dep(returned-7, ask-20)
poss(anything-24, His-22)
nn(anything-24, Father-23)
prep_of(give-29, anything-24)
poss(Father-26, His-25)
nsubj(give-29, Father-26)
aux(give-29, would-27)
neg(give-29, not-28)
ccomp(ask-20, give-29)
dobj(give-29, Him-30)

(ROOT
  (SINV (`` ``)
    (S
      (NP (RB Not) (DT that) (PRP I))
      (VP (VBP remember)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP George))
    (, ,)
    (S
      (VP (VBG fearing)
        (NP (DT a) (JJ theological) (NN trap))))
    (. .)))

neg(I-4, Not-2)
det(I-4, that-3)
nsubj(remember-5, I-4)
ccomp(answered-8, remember-5)
root(ROOT-0, answered-8)
nsubj(answered-8, George-9)
vmod(answered-8, fearing-11)
det(trap-14, a-12)
amod(trap-14, theological-13)
dobj(fearing-11, trap-14)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBD said)
      (ADVP (RB once))
      (: :) (`` ')
      (S
        (NP (PRP I))
        (ADJP (JJ pray)
          (PP (IN for)
            (NP
              (NP (PRP them))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (MD shall)
                    (VP (VB believe)
                      (PP (IN in)
                        (NP (PRP Me)))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP (PRP they))
                          (ADVP (DT all))
                          (VP (MD may)
                            (VP (VB be)
                              (NP (CD one))
                              (PRN (, ,)
                                (SBAR (IN as)
                                  (S
                                    (S
                                      (NP (NNP Thou) (NNP Father))
                                      (VP (VBP art)
                                        (PP (IN in)
                                          (NP (PRP Me)))))
                                    (, ,)
                                    (CC and)
                                    (S
                                      (NP (PRP I))
                                      (PP (IN in)
                                        (NP (NNP Thee))))))
                                (, ,))
                              (SBAR (IN that)
                                (S
                                  (NP (PRP they))
                                  (ADJP (RB also) (JJ many))
                                  (S
                                    (VP (VB be)
                                      (NP
                                        (NP (CD one))
                                        (PP (IN in)
                                          (NP (PRP us)))))))))))))))))))))
    (. !) ('' ')))

nsubj(said-3, He-2)
root(ROOT-0, said-3)
advmod(said-3, once-4)
nsubj(pray-8, I-7)
xcomp(said-3, pray-8)
prep_for(pray-8, them-10)
nsubj(believe-13, them-10)
aux(believe-13, shall-12)
rcmod(them-10, believe-13)
prep_in(believe-13, Me-15)
mark(one-22, that-17)
nsubj(one-22, they-18)
advmod(one-22, all-19)
aux(one-22, may-20)
cop(one-22, be-21)
ccomp(believe-13, one-22)
mark(art-27, as-24)
nn(Father-26, Thou-25)
nsubj(art-27, Father-26)
parataxis(one-22, art-27)
prep_in(art-27, Me-29)
parataxis(one-22, I-32)
conj_and(art-27, I-32)
dep(I-32, in-33)
pobj(in-33, Thee-34)
mark(one-41, that-36)
dep(one-41, they-37)
advmod(many-39, also-38)
dep(one-41, many-39)
cop(one-41, be-40)
ccomp(one-22, one-41)
prep_in(one-41, us-43)

(ROOT
  (S
    (NP (DT No) (NN man))
    (VP (MD can)
      (VP (VB be)
        (NP
          (NP (CD one))
          (PP (IN with)
            (NP
              (NP (DT another))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ is) (RB not)
                    (NP
                      (NP (CD one))
                      (PP (IN with)
                        (NP
                          (NP (NNP Christ))
                          ('' '')
                          (SBAR
                            (S
                              (SBAR (IN As)
                                (S
                                  (NP (PRP he))
                                  (VP (VBD left)
                                    (NP (DT the) (NN house)))))
                              (, ,)
                              (NP (DT a) (NN carriage))
                              (VP (VBD drove)
                                (PRT (RP up)))))
                          (, ,)
                          (PP (IN in)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBD was)
                                  (NP
                                    (NP
                                      (NP (NNP Mr.) (NNP Crawford))
                                      (NP (DT the) (JJR elder))
                                      (, ,)
                                      (ADVP (NN home)
                                        (PP (IN from)
                                          (NP
                                            (NP (DT a) (NN meeting))
                                            (PP (IN of)
                                              (NP (NNS directors)))))))
                                    (, ,)
                                    (SBAR
                                      (WHPP (IN at)
                                        (WHNP (WDT which)))
                                      (S
                                        (NP (DT a) (NN dividend))
                                        (VP (VBD had)
                                          (VP (VBN been)
                                            (VP (VBN agreed)
                                              (PP (RB upon))))))))))))
                          (: --)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (VP (VBN paid)
                                  (PP (IN from)
                                    (NP (DT the) (NN capital)))
                                  (, ,)
                                  (PP (IN in)
                                    (NP
                                      (NP (NN preparation))
                                      (PP (IN for)
                                        (NP
                                          (NP (DT another) (NN issue))
                                          (PP (IN of)
                                            (NP (NNS shares))))))))))))))))))))))
    (. .)))

neg(man-2, No-1)
nsubj(one-5, man-2)
aux(one-5, can-3)
cop(one-5, be-4)
root(ROOT-0, one-5)
prep_with(one-5, another-7)
nsubj(one-12, another-7)
cop(one-12, is-10)
neg(one-12, not-11)
rcmod(another-7, one-12)
prep_with(one-12, Christ-14)
mark(left-18, As-16)
nsubj(left-18, he-17)
advcl(drove-24, left-18)
det(house-20, the-19)
dobj(left-18, house-20)
det(carriage-23, a-22)
nsubj(drove-24, carriage-23)
rcmod(Christ-14, drove-24)
prt(drove-24, up-25)
nsubj(Crawford-31, which-28)
cop(Crawford-31, was-29)
nn(Crawford-31, Mr.-30)
prepc_in(Christ-14, Crawford-31)
prep_at(agreed-48, Crawford-31)
pobj(upon-49, Crawford-31)
det(elder-33, the-32)
dep(Crawford-31, elder-33)
advmod(Crawford-31, home-35)
det(meeting-38, a-37)
prep_from(home-35, meeting-38)
prep_of(meeting-38, directors-40)
det(dividend-45, a-44)
nsubjpass(agreed-48, dividend-45)
aux(agreed-48, had-46)
auxpass(agreed-48, been-47)
rcmod(Crawford-31, agreed-48)
prep(agreed-48, upon-49)
aux(paid-53, to-51)
auxpass(paid-53, be-52)
vmod(Christ-14, paid-53)
det(capital-56, the-55)
prep_from(paid-53, capital-56)
prep_in(paid-53, preparation-59)
det(issue-62, another-61)
prep_for(preparation-59, issue-62)
prep_of(issue-62, shares-64)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD walked)
      (NP
        (NP (NN home) (DT a))
        (ADJP (RB little) (VBN bewildered))))
    (. .)))

nsubj(walked-2, Andrew-1)
root(ROOT-0, walked-2)
dobj(walked-2, home-3)
dep(home-3, a-4)
advmod(bewildered-6, little-5)
amod(home-3, bewildered-6)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ
      (VP (VBZ is))
      (NP (PRP it))
      (PRN (, ,) ('' '')
        (S
          (NP (PRP he))
          (VP (VBD said)
            (PP (TO to)
              (NP (PRP himself)))))
        (, ,))
      (`` ``)
      (SBAR (IN that)
        (S
          (NP
            (NP (RB so) (JJ many))
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (MD would)
                    (VP (VB be)
                      (VP (VBN terrified)
                        (PP (IN at)
                          (NP
                            (NP (DT the) (NN idea))
                            (PP (IN of)
                              (S (RB not)
                                (VP (VBG being)
                                  (NP (NNS Christians))))))))))
                  (, ,)
                  (CC and)
                  (VP (VBP are)
                    (VP (VBN horrified)
                      (PP (IN at)
                        (NP
                          (NP (DT any) (NN man))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBZ does) (RB not)
                                (VP (VB believe)
                                  (SBAR
                                    (S
                                      (NP (EX there))
                                      (VP (VBZ is)
                                        (NP (DT a) (NNP God)))))))))))))))))
          (, ,)
          (VP (VBP are)
            (ADVP (RB yet))
            (ADJP (RB absolutely) (JJ indifferent)
              (PP (TO to)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP$ their) (NN Lord))
                    (VP (VBZ tells)
                      (S
                        (NP (PRP them))
                        (VP (TO to)
                          (VP (VB do)
                            (SBAR (IN if)
                              (S
                                (NP (PRP they))
                                (VP (MD would)
                                  (VP (VB be)
                                    (NP (PRP$ His) (NNS disciples))))))))))))))))))
    (. ?)))

advmod(is-3, How-2)
root(ROOT-0, is-3)
dep(is-3, it-4)
nsubj(said-8, he-7)
parataxis(is-3, said-8)
prep_to(said-8, himself-10)
mark(are-43, that-13)
advmod(many-15, so-14)
nsubjpass(terrified-19, many-15)
nsubjpass(horrified-30, many-15)
nsubj(are-43, many-15)
aux(terrified-19, would-17)
auxpass(terrified-19, be-18)
rcmod(many-15, terrified-19)
det(idea-22, the-21)
prep_at(terrified-19, idea-22)
neg(Christians-26, not-24)
cop(Christians-26, being-25)
prepc_of(idea-22, Christians-26)
auxpass(horrified-30, are-29)
rcmod(many-15, horrified-30)
conj_and(terrified-19, horrified-30)
det(man-33, any-32)
prep_at(horrified-30, man-33)
nsubj(believe-37, man-33)
aux(believe-37, does-35)
neg(believe-37, not-36)
rcmod(man-33, believe-37)
expl(is-39, there-38)
ccomp(believe-37, is-39)
det(God-41, a-40)
nsubj(is-39, God-41)
dep(is-3, are-43)
advmod(are-43, yet-44)
advmod(indifferent-46, absolutely-45)
acomp(are-43, indifferent-46)
dobj(tells-51, what-48)
nsubj(do-54, what-48)
poss(Lord-50, their-49)
nsubj(tells-51, Lord-50)
prepc_to(indifferent-46, tells-51)
dobj(tells-51, them-52)
nsubj(do-54, them-52)
aux(do-54, to-53)
xcomp(tells-51, do-54)
mark(disciples-60, if-55)
nsubj(disciples-60, they-56)
aux(disciples-60, would-57)
cop(disciples-60, be-58)
poss(disciples-60, His-59)
advcl(do-54, disciples-60)

(ROOT
  (SQ (CC But)
    (MD may) (RB not)
    (NP (PRP I))
    (VP (VB be)
      (PP (IN in)
        (NP (JJ like) (NN case)))
      (PP (IN without)
        (S
          (VP (VBG knowing)
            (NP (PRP it))))))
    (. ?)))

cc(be-5, But-1)
aux(be-5, may-2)
neg(be-5, not-3)
nsubj(be-5, I-4)
root(ROOT-0, be-5)
amod(case-8, like-7)
prep_in(be-5, case-8)
prepc_without(be-5, knowing-10)
dobj(knowing-10, it-11)

(ROOT
  (SQ (VBP Do)
    (NP (PRP I))
    (VP (VB meet)
      (NP
        (NP (NNP God))
        (PP (IN in)
          (NP (PRP$ my) (NN geometry)))))
    (. ?)))

aux(meet-3, Do-1)
nsubj(meet-3, I-2)
root(ROOT-0, meet-3)
dobj(meet-3, God-4)
poss(geometry-7, my-6)
prep_in(God-4, geometry-7)

(ROOT
  (SBARQ
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP
          (ADVP (RB so) (RB much))
          (VBP enjoy)
          (NP (PRP$ my) (NN Euclid)))))
    (, ,)
    (SQ (VBZ is)
      (NP (PRP it))
      (ADVP (RB always))
      (NP
        (NP (NNP God) (NN geometrizing))
        (PP (TO to)
          (NP (PRP me)))))
    (. ?)))

advmod(enjoy-5, When-1)
nsubj(enjoy-5, I-2)
advmod(much-4, so-3)
advmod(enjoy-5, much-4)
dep(geometrizing-13, enjoy-5)
poss(Euclid-7, my-6)
dobj(enjoy-5, Euclid-7)
cop(geometrizing-13, is-9)
nsubj(geometrizing-13, it-10)
advmod(geometrizing-13, always-11)
nn(geometrizing-13, God-12)
root(ROOT-0, geometrizing-13)
prep_to(geometrizing-13, me-15)

(ROOT
  (SQ (VBP Do)
    (NP (PRP I))
    (VP (VB feel)
      (S
        (VP (VBG talking)
          (PP (IN with)
            (NP (NNP God)))
          (NP
            (NP (DT every) (NN time))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP dwell)
                  (PP (IN upon)
                    (NP
                      (NP (DT any) (NN fact))
                      (PP (IN of)
                        (NP
                          (NP (PRP$ his) (NN world))
                          (PP (IN of)
                            (NP
                              (NP (NNS lines))
                              (CC and)
                              (NP (NNS circles)
                                (CC and)
                                (NNS angles)))))))))))))))
    (. ?)))

aux(feel-3, Do-1)
nsubj(feel-3, I-2)
root(ROOT-0, feel-3)
xcomp(feel-3, talking-4)
prep_with(talking-4, God-6)
det(time-8, every-7)
dobj(talking-4, time-8)
nsubj(dwell-10, I-9)
rcmod(time-8, dwell-10)
det(fact-13, any-12)
prep_upon(dwell-10, fact-13)
poss(world-16, his-15)
prep_of(fact-13, world-16)
prep_of(world-16, lines-18)
prep_of(world-16, circles-20)
conj_and(lines-18, circles-20)
conj_and(lines-18, angles-22)
conj_and(circles-20, angles-22)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (NP
      (NP (NNP God))
      (PP (IN with)
        (NP
          (NP (PRP me))
          (, ,)
          (NP
            (NP (DT every) (NN time))
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NN joy))
                  (PP (IN of)
                    (NP (NN life)))
                  (, ,)
                  (PP (IN of)
                    (NP
                      (NP (DT a) (NN wind))
                      (CC or)
                      (NP
                        (NP (DT a) (NN sky))
                        (CC or)
                        (NP (DT a) (JJ lovely) (NN phrase)))))
                  (, ,))
                (VP (VBZ flashes)
                  (PP (IN through)
                    (NP (PRP me))))))))))
    (. ?)))

cop(God-3, Is-1)
nsubj(God-3, it-2)
root(ROOT-0, God-3)
prep_with(God-3, me-5)
det(time-8, every-7)
appos(me-5, time-8)
mark(flashes-26, that-9)
det(joy-11, the-10)
nsubj(flashes-26, joy-11)
prep_of(joy-11, life-13)
det(wind-17, a-16)
prep_of(joy-11, wind-17)
det(sky-20, a-19)
prep_of(joy-11, sky-20)
conj_or(wind-17, sky-20)
det(phrase-24, a-22)
amod(phrase-24, lovely-23)
conj_or(wind-17, phrase-24)
conj_or(sky-20, phrase-24)
dep(time-8, flashes-26)
prep_through(flashes-26, me-28)

(ROOT
  (S
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP$ my) (NN God))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD broke)
      (PRT (RP out))
      (PP (IN in)
        (NP (JJ speechless) (NN prayer)))
      (SBAR (IN as)
        (S
          (S
            (NP (PRP he))
            (VP (VBD walked)))
          (: --)
          (CC and)
          (S
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD passed)))))
            (VP (VBD said)
              (PP (TO to)
                (NP (PRP themselves)))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (ADJP (JJ mad)))))))
          (: ;)
          (S
            (ADVP (WRB how))
            (, ,)
            (PP (IN in)
              (NP (PDT such) (DT a) (NN world)))
            (, ,)
            (VP (MD could)
              (ADVP (RB any)
                (PP (IN but)
                  (NP (DT a) (NN madman))))
              (VP (VB wear)
                (NP
                  (NP (DT a) (NN face))
                  (PP (IN of)
                    (NP (NN joy))))))))))
    (. !)))

discourse(broke-8, Oh-1)
poss(God-4, my-3)
nsubj(broke-8, God-4)
nsubj(broke-8, he-7)
root(ROOT-0, broke-8)
prt(broke-8, out-9)
amod(prayer-12, speechless-11)
prep_in(broke-8, prayer-12)
mark(walked-15, as-13)
nsubj(walked-15, he-14)
nsubj(wear-40, he-14)
advcl(broke-8, walked-15)
nsubj(passed-20, those-18)
nsubj(said-21, those-18)
rcmod(those-18, passed-20)
advcl(broke-8, said-21)
conj_and(walked-15, said-21)
prep_to(said-21, themselves-23)
nsubj(mad-26, he-24)
cop(mad-26, was-25)
ccomp(said-21, mad-26)
advmod(wear-40, how-28)
predet(world-33, such-31)
det(world-33, a-32)
prep_in(wear-40, world-33)
aux(wear-40, could-35)
advmod(wear-40, any-36)
det(madman-39, a-38)
prep_but(any-36, madman-39)
advcl(broke-8, wear-40)
conj_and(walked-15, wear-40)
parataxis(walked-15, wear-40)
det(face-42, a-41)
dobj(wear-40, face-42)
prep_of(face-42, joy-44)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (PRP$ my) (NNP God) (, ,) (NN Thou))
      (VP (VBP art)
        (NP
          (NP (DT all))
          (PP (IN in)
            (NP (DT all))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (NN everything))))
    (. !)))

discourse(all-9, Oh-2)
poss(Thou-7, my-4)
nn(Thou-7, God-5)
nsubj(all-9, Thou-7)
cop(all-9, art-8)
root(ROOT-0, all-9)
prep_in(all-9, all-11)
nsubj(have-15, I-14)
conj_and(all-9, have-15)
dobj(have-15, everything-16)

(ROOT
  (S
    (NP (DT The) (NN world))
    (VP (VBZ is)
      (NP (NN mine))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ Thine))))))
    (. !)))

det(world-2, The-1)
nsubj(mine-4, world-2)
cop(mine-4, is-3)
root(ROOT-0, mine-4)
mark(Thine-8, because-5)
nsubj(Thine-8, it-6)
cop(Thine-8, is-7)
advcl(mine-4, Thine-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP thank)
      (NP
        (NP (NNP Thee))
        (, ,)
        (NP (PRP$ my) (NN God))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (JJ Thou) (NN hast))
            (VP (VBD lifted)
              (NP (PRP me))
              (PRT (RP up))
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP
                      (NP (NN whence))
                      (SBAR
                        (S
                          (NP (PRP I))
                          (VP (VBD came) (, ,)
                            (S
                              (VP (TO to)
                                (VP (VB know)
                                  (PP (TO to)
                                    (SBAR
                                      (WHNP (WP whom))
                                      (S
                                        (NP (PRP I))
                                        (VP (VBP belong)))))))))))))))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB know)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP
                          (VP (VBZ is)
                            (NP (PRP$ my) (NN Father)))
                          (, ,)
                          (CC and)
                          (VP (VBZ makes)
                            (S
                              (NP (PRP me))
                              (NP (PRP$ His) (NN heir)))))))))))))))
    (. !)))

nsubj(thank-2, I-1)
root(ROOT-0, thank-2)
dobj(thank-2, Thee-3)
poss(God-6, my-5)
appos(Thee-3, God-6)
mark(lifted-11, that-8)
amod(hast-10, Thou-9)
nsubj(lifted-11, hast-10)
dep(Thee-3, lifted-11)
dobj(lifted-11, me-12)
prt(lifted-11, up-13)
aux(see-15, to-14)
vmod(lifted-11, see-15)
dobj(see-15, whence-16)
nsubj(came-18, I-17)
nsubj(know-21, I-17)
rcmod(whence-16, came-18)
aux(know-21, to-20)
xcomp(came-18, know-21)
dobj(belong-25, whom-23)
nsubj(belong-25, I-24)
prepc_to(know-21, belong-25)
aux(know-28, to-27)
vmod(lifted-11, know-28)
nsubj(Father-32, who-29)
nsubj(makes-35, who-29)
cop(Father-32, is-30)
poss(Father-32, my-31)
ccomp(know-28, Father-32)
ccomp(know-28, makes-35)
conj_and(Father-32, makes-35)
nsubj(heir-38, me-36)
poss(heir-38, His-37)
xcomp(makes-35, heir-38)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ Thine))
        (, ,)
        (ADJP
          (ADJP (RB infinitely) (JJR more))
          (PP (IN than)
            (NP (PRP$ mine) (JJ own))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP Thou))
      (VP (VBP art)
        (NP (NN mine))
        (SBAR (IN as)
          (S
            (NP (PRP Thou))
            (VP (VBP art)
              (NP (NNP Christ) (POS 's)))))))
    (. !) ('' '')))

nsubj(Thine-3, I-1)
cop(Thine-3, am-2)
root(ROOT-0, Thine-3)
advmod(more-6, infinitely-5)
acomp(Thine-3, more-6)
poss(own-9, mine-8)
prep_than(more-6, own-9)
nsubj(mine-14, Thou-12)
cop(mine-14, art-13)
conj_and(Thine-3, mine-14)
mark(Christ-18, as-15)
nsubj(Christ-18, Thou-16)
cop(Christ-18, art-17)
advcl(mine-14, Christ-18)
possessive(Christ-18, 's-19)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD knew)
      (NP (PRP$ his) (NN Father))
      (PP (IN in)
        (NP (DT the) (JJ same) (NN way)))
      (SBAR (IN that)
        (S
          (NP (NNP Jesus) (NNP Christ))
          (VP (VBZ knows)
            (NP (PRP$ His) (NN Father))))))
    (. .)))

nsubj(knew-2, He-1)
root(ROOT-0, knew-2)
poss(Father-4, his-3)
dobj(knew-2, Father-4)
det(way-8, the-6)
amod(way-8, same-7)
prep_in(knew-2, way-8)
mark(knows-12, that-9)
nn(Christ-11, Jesus-10)
nsubj(knows-12, Christ-11)
ccomp(knew-2, knows-12)
poss(Father-14, His-13)
dobj(knows-12, Father-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADVP (IN at) (NN home)
        (PP (IN in)
          (NP
            (NP (DT the) (NN universe))
            (, ,)
            (NP (DT neither)))))
      (ADJP
        (ADJP (JJ lonely))
        (, ,)
        (CC nor)
        (ADJP (JJ out-of-doors))
        (, ,)
        (CC nor)
        (ADJP (JJ afraid))))
    (. .)))

nsubj(lonely-10, He-1)
nsubj(out-of-doors-13, He-1)
nsubj(afraid-16, He-1)
cop(lonely-10, was-2)
advmod(lonely-10, at-3)
dep(at-3, home-4)
det(universe-7, the-6)
prep_in(at-3, universe-7)
appos(universe-7, neither-9)
root(ROOT-0, lonely-10)
conj_nor(lonely-10, out-of-doors-13)
conj_nor(lonely-10, afraid-16)

(ROOT
  (NP (NNP CHAPTER) (NNP XII) (. .)))

nn(XII-2, CHAPTER-1)
root(ROOT-0, XII-2)

(ROOT
  (NP (DT THE) (NNS CRAWFORDS) (. .)))

det(CRAWFORDS-2, THE-1)
root(ROOT-0, CRAWFORDS-2)

(ROOT
  (S
    (PP (IN Through)
      (NP
        (NP (JJ strong))
        (VP (VBG striving)
          (S
            (VP (TO to)
              (VP (VB secure)
                (NP (PRP$ his) (NN life))))))))
    (, ,)
    (NP (NNP Mr.) (NNP Crawford))
    (VP (VBD lost)
      (NP (PRP it))
      (: --)
      (NP
        (NP (DT both))
        (PP (IN in)
          (NP
            (NP
              (NP (NNP God) (POS 's))
              (NN sense))
            (PP (IN of)
              (NP
                (NP (NN loss))
                (CC and)
                (NP (PRP$ his) (JJ own))))))))
    (. .)))

prep_through(lost-11, strong-2)
vmod(strong-2, striving-3)
aux(secure-5, to-4)
xcomp(striving-3, secure-5)
poss(life-7, his-6)
dobj(secure-5, life-7)
nn(Crawford-10, Mr.-9)
nsubj(lost-11, Crawford-10)
root(ROOT-0, lost-11)
dobj(lost-11, it-12)
parataxis(lost-11, both-14)
poss(sense-18, God-16)
prep_in(both-14, sense-18)
prep_of(sense-18, loss-20)
poss(own-23, his-22)
prep_of(sense-18, own-23)
conj_and(loss-20, own-23)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB narrowly))
    (VP
      (VP (VBD escaped)
        (S
          (VP (VBG being)
            (VP (VBN put)
              (PP (IN in)
                (NP (NN prison)))))))
      (, ,)
      (VP (VBD died)
        (ADVP (RB instead)))
      (, ,)
      (CC and)
      (VP (VBD was)
        (VP (VBN put)
          (PP (IN into)
            (NP
              (NP (NNP God) (POS 's))
              (NN prison)
              (S
                (VP (TO to)
                  (VP (VB pay)
                    (NP (DT the) (JJ uttermost) (NN farthing))))))))))
    (. .)))

nsubj(escaped-3, He-1)
nsubj(died-9, He-1)
nsubjpass(put-14, He-1)
advmod(escaped-3, narrowly-2)
root(ROOT-0, escaped-3)
auxpass(put-5, being-4)
xcomp(escaped-3, put-5)
prep_in(put-5, prison-7)
conj_and(escaped-3, died-9)
advmod(died-9, instead-10)
auxpass(put-14, was-13)
conj_and(escaped-3, put-14)
poss(prison-18, God-16)
prep_into(put-14, prison-18)
aux(pay-20, to-19)
vmod(prison-18, pay-20)
det(farthing-23, the-21)
amod(farthing-23, uttermost-22)
dobj(pay-20, farthing-23)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN been)
        (PP (JJ such)
          (NP (DT a) (JJ good) (NNP Christian)))
        (SBAR (IN that)
          (S
            (NP (PRP$ his) (NNS fellow-Christians))
            (VP (VBD mourned)
              (PP (IN over)
                (NP
                  (NP (PRP$ his) (NN failure))
                  (CC and)
                  (NP (PRP$ his) (NN death))))
              (, ,)
              (ADVP (RB not)
                (PP (IN over)
                  (NP (PRP$ his) (NN dishonesty)))))))))
    (. !)))

cc(been-4, But-1)
nsubj(been-4, he-2)
aux(been-4, had-3)
root(ROOT-0, been-4)
prep(been-4, such-5)
det(Christian-8, a-6)
amod(Christian-8, good-7)
dep(such-5, Christian-8)
mark(mourned-12, that-9)
poss(fellow-Christians-11, his-10)
nsubj(mourned-12, fellow-Christians-11)
ccomp(been-4, mourned-12)
poss(failure-15, his-14)
prep_over(mourned-12, failure-15)
poss(death-18, his-17)
prep_over(mourned-12, death-18)
conj_and(failure-15, death-18)
neg(mourned-12, not-20)
poss(dishonesty-23, his-22)
prep_over(not-20, dishonesty-23)

(ROOT
  (SBARQ
    (WHADVP (IN For))
    (SQ (VBD did)
      (NP (PRP they))
      (VP
        (ADVP (RB not))
        (VB know)
        (SBAR (IN that)
          (S
            (SBAR (IN if) (, ,)
              (PP (IN by)
                (NP (JJR more) (NN dishonesty)))
              (, ,)
              (S
                (NP (PRP he))
                (VP (MD could)
                  (VP (VB have)
                    (VP (VBN managed)
                      (S
                        (VP (TO to)
                          (VP (VB recover)
                            (NP (PRP$ his) (NN footing))))))))))
            (, ,)
            (NP (PRP he))
            (VP (MD would)
              (VP (VB have)
                (VP (VBN paid)
                  (NP (NN everything)))))))))
    (. ?)))

advmod(know-5, For-1)
aux(know-5, did-2)
nsubj(know-5, they-3)
neg(know-5, not-4)
root(ROOT-0, know-5)
mark(paid-25, that-6)
mark(managed-16, if-7)
amod(dishonesty-11, more-10)
prep_by(managed-16, dishonesty-11)
nsubj(managed-16, he-13)
nsubj(recover-18, he-13)
aux(managed-16, could-14)
aux(managed-16, have-15)
advcl(paid-25, managed-16)
aux(recover-18, to-17)
xcomp(managed-16, recover-18)
poss(footing-20, his-19)
dobj(recover-18, footing-20)
nsubj(paid-25, he-22)
aux(paid-25, would-23)
aux(paid-25, have-24)
ccomp(know-5, paid-25)
dobj(paid-25, everything-26)

(ROOT
  (S
    (S
      (ADVP
        (NP (CD One) (NN injunction))
        (RB only))
      (NP (PRP he))
      (VP (VBD obeyed)))
    (: --)
    (S
      (NP (PRP he))
      (VP (VBD provided)
        (PP (IN for)
          (NP (PRP$ his) (JJ own)))))
    (: ;)
    (S
      (PP (IN of)
        (NP
          (NP (PDT all) (DT the) (NNS widows))
          (VP (VBN concerned)
            (PP (IN in)
              (NP (PRP$ his) (NN bank))))))
      (, ,)
      (NP (PRP$ his) (NN widow))
      (ADVP (RB alone))
      (VP (VBD was)
        (VP (VBN secured)
          (PP (IN from)
            (S
              (VP (VB want)))))))
    (: ;)
    (CC and)
    (S
      (S
        (NP (PRP she))
        (, ,)
        (PP (IN like)
          (NP (DT a) (JJ dutiful) (NN wife)))
        (, ,)
        (VP (VBD took)
          (NP (NN care))
          (SBAR (IN that)
            (S
              (NP (PRP$ his) (JJ righteous) (NN intention))
              (VP (MD should)
                (VP (VB be)
                  (ADJP (RB righteously) (VBN carried)
                    (PRT (RP out)))))))))
      (: ;) (RB not)
      (S
        (NP (DT a) (NN penny))
        (VP (MD would)
          (NP (PRP she))
          (S
            (VP (VB give)
              (PRT (RP up))
              (PP (TO to)
                (NP (DT the) (NNS paupers)))
              (SBAR
                (S
                  (NP (PRP$ her) (NN husband))
                  (VP (VBD had)
                    (VP (VBN made))))))))))
    (. .)))

num(injunction-2, One-1)
npadvmod(only-3, injunction-2)
advmod(obeyed-5, only-3)
nsubj(obeyed-5, he-4)
root(ROOT-0, obeyed-5)
nsubj(provided-8, he-7)
conj_and(obeyed-5, provided-8)
poss(own-11, his-10)
prep_for(provided-8, own-11)
predet(widows-16, all-14)
det(widows-16, the-15)
prep_of(secured-26, widows-16)
vmod(widows-16, concerned-17)
poss(bank-20, his-19)
prep_in(concerned-17, bank-20)
poss(widow-23, his-22)
nsubjpass(secured-26, widow-23)
advmod(secured-26, alone-24)
auxpass(secured-26, was-25)
conj_and(obeyed-5, secured-26)
prepc_from(secured-26, want-28)
nsubj(took-38, she-31)
det(wife-36, a-34)
amod(wife-36, dutiful-35)
prep_like(took-38, wife-36)
conj_and(obeyed-5, took-38)
dobj(took-38, care-39)
mark(carried-47, that-40)
poss(intention-43, his-41)
amod(intention-43, righteous-42)
nsubjpass(carried-47, intention-43)
aux(carried-47, should-44)
auxpass(carried-47, be-45)
advmod(carried-47, righteously-46)
ccomp(took-38, carried-47)
dep(carried-47, out-48)
neg(took-38, not-50)
det(penny-52, a-51)
nsubj(would-53, penny-52)
parataxis(took-38, would-53)
dobj(would-53, she-54)
dep(would-53, give-55)
prt(give-55, up-56)
det(paupers-59, the-58)
prep_to(give-55, paupers-59)
poss(husband-61, her-60)
nsubj(made-63, husband-61)
aux(made-63, had-62)
ccomp(give-55, made-63)

(ROOT
  (S
    (NP
      (NP (DT The) (NN downfall))
      (PP (IN of)
        (NP
          (NP (DT the) (NN house))
          (PP (IN of)
            (NP (NNS cards))))))
    (VP (VBD took)
      (NP (NN place))
      (PP
        (NP (DT a) (JJ few) (NNS months))
        (IN after)
        (NP
          (NP (NNP George) (POS 's))
          (NN return)))
      (PP (TO to)
        (NP (PRP$ its) (NN business))))
    (. .)))

det(downfall-2, The-1)
nsubj(took-8, downfall-2)
det(house-5, the-4)
prep_of(downfall-2, house-5)
prep_of(house-5, cards-7)
root(ROOT-0, took-8)
dobj(took-8, place-9)
det(months-12, a-10)
amod(months-12, few-11)
npadvmod(took-8, months-12)
poss(return-16, George-14)
prep_after(took-8, return-16)
poss(business-19, its-18)
prep_to(took-8, business-19)

(ROOT
  (S
    (SBAR (RB Not)
      (S
        (VP
          (VP (VBN initiated)
            (PP (TO to)
              (NP
                (NP (DT the) (NNS mysteries))
                (PP (IN of)
                  (NP
                    (NP (PRP$ his) (NN father) (POS 's))
                    (NNS transactions))))))
          (, ,)
          (NP
            (NP (NN ignorant))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD had)
                    (ADVP (RB long))
                    (VP (VBN been)
                      (VP (VBG threatening)))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ terrible) (NN blow))
        (PP (TO to)
          (NP (PRP him)))))
    (. .)))

dep(initiated-2, Not-1)
advcl(blow-24, initiated-2)
det(mysteries-5, the-4)
prep_to(initiated-2, mysteries-5)
poss(father-8, his-7)
poss(transactions-10, father-8)
prep_of(mysteries-5, transactions-10)
dobj(initiated-2, ignorant-12)
nsubj(threatening-18, what-14)
aux(threatening-18, had-15)
advmod(threatening-18, long-16)
aux(threatening-18, been-17)
prepc_of(ignorant-12, threatening-18)
nsubj(blow-24, it-20)
cop(blow-24, was-21)
det(blow-24, a-22)
amod(blow-24, terrible-23)
root(ROOT-0, blow-24)
prep_to(blow-24, him-26)

(ROOT
  (S
    (S (CC But)
      (NP (PRP he))
      (VP
        (VP (VBD was)
          (NP
            (NP (DT a) (NN man))
            (PP (IN of)
              (NP (NN action)))))
        (, ,)
        (CC and)
        (VP
          (ADVP (IN at) (RB once))
          (VBD looked)
          (PP (TO to)
            (NP (NNP America))))))
    (: ;)
    (S
      (PP (IN at)
        (NP (NN home)))
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP (VB hold)
          (PRT (RP up))
          (NP (PRP$ his) (NN head)))))
    (. .)))

nsubj(man-5, he-2)
nsubj(looked-12, he-2)
cop(man-5, was-3)
det(man-5, a-4)
root(ROOT-0, man-5)
prep_of(man-5, action-7)
advmod(looked-12, at-10)
advmod(at-10, once-11)
conj_and(man-5, looked-12)
prep_to(looked-12, America-14)
prep_at(hold-21, home-17)
nsubj(hold-21, he-18)
aux(hold-21, could-19)
neg(hold-21, not-20)
parataxis(man-5, hold-21)
prt(hold-21, up-22)
poss(head-24, his-23)
dobj(hold-21, head-24)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (ADVP (RB often))
        (VP
          (VP (VBN been)
            (PP (TO to)
              (NP (NNP Potlurg))))
          (, ,)
          (CC and)
          (VP (VBD had)
            (VP (VBN been)
              (VP (VBG advancing)
                (PP (IN in)
                  (NP (NN intimacy)))
                (PP (IN with)
                  (NP (NNP Alexa)))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD would) (RB not)
        (VP (VB show)
          (NP (PRP himself))
          (ADVP (RB there))
          (SBAR (IN until)
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB appear)
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN man))
                      (PP (IN of)
                        (NP (NN decision)))))))))
          (: --)
          (SBAR (IN until)
            (S
              (NP (PRP he))
              (VP (VBD was)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN point))
                    (PP (IN of)
                      (NP (NN departure)))))))))))
    (. .)))

nsubj(been-4, He-1)
nsubj(advancing-11, He-1)
aux(been-4, had-2)
advmod(been-4, often-3)
root(ROOT-0, been-4)
prep_to(been-4, Potlurg-6)
aux(advancing-11, had-9)
aux(advancing-11, been-10)
conj_and(been-4, advancing-11)
prep_in(advancing-11, intimacy-13)
prep_with(advancing-11, Alexa-15)
nsubj(show-21, he-18)
aux(show-21, would-19)
neg(show-21, not-20)
conj_but(been-4, show-21)
dobj(show-21, himself-22)
advmod(show-21, there-23)
mark(appear-27, until-24)
nsubj(appear-27, he-25)
aux(appear-27, could-26)
advcl(show-21, appear-27)
det(man-30, a-29)
prep_as(appear-27, man-30)
prep_of(man-30, decision-32)
mark(was-36, until-34)
nsubj(was-36, he-35)
advcl(show-21, was-36)
parataxis(show-21, was-36)
det(point-39, the-38)
prep_on(was-36, point-39)
prep_of(point-39, departure-41)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD would)
      (VP (VB be)
        (ADJP
          (ADJP (DT the) (RBR more) (JJ willing))
          (S
            (VP (TO to)
              (VP (VB believe)
                (NP
                  (NP (PRP$ his) (NN innocence))
                  (PP (IN of)
                    (NP (NN complicity))))
                (PP (IN in)
                  (NP (DT the) (NNS deceptions))))))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD had)
                (VP (VBN led)
                  (PP (TO to)
                    (NP (PRP$ his) (NN ruin))))))))))
    (. !)))

nsubj(willing-6, She-1)
nsubj(believe-8, She-1)
aux(willing-6, would-2)
cop(willing-6, be-3)
det(willing-6, the-4)
advmod(willing-6, more-5)
root(ROOT-0, willing-6)
aux(believe-8, to-7)
xcomp(willing-6, believe-8)
poss(innocence-10, his-9)
dobj(believe-8, innocence-10)
prep_of(innocence-10, complicity-12)
det(deceptions-15, the-14)
prep_in(believe-8, deceptions-15)
nsubj(led-18, that-16)
aux(led-18, had-17)
ccomp(willing-6, led-18)
poss(ruin-21, his-20)
prep_to(led-18, ruin-21)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would) (RB thus)
      (ADVP (RB also))
      (VP
        (VP (VB manifest)
          (NP (NN self-denial)))
        (CC and)
        (VP (VB avoid)
          (NP
            (NP (DT the) (NN charge))
            (PP (IN of)
              (NP (JJ interested) (NNS motives)))))))
    (. !)))

nsubj(manifest-5, He-1)
nsubj(avoid-8, He-1)
aux(manifest-5, would-2)
advmod(manifest-5, thus-3)
advmod(manifest-5, also-4)
root(ROOT-0, manifest-5)
dobj(manifest-5, self-denial-6)
conj_and(manifest-5, avoid-8)
det(charge-10, the-9)
dobj(avoid-8, charge-10)
amod(motives-13, interested-12)
prep_of(charge-10, motives-13)

(ROOT
  (S
    (NP (PRP he))
    (VP (MD could) (RB not)
      (VP (VB face)
        (NP
          (NP (DT the) (NN suspicion))
          (PP (IN of)
            (S
              (VP (VBG being)
                (NP
                  (NP (DT a) (NN suitor))
                  (PP (IN with)
                    (NP (NN nothing))))
                (PP (TO to)
                  (NP (NN offer)))))))))
    (. !)))

nsubj(face-4, he-1)
aux(face-4, could-2)
neg(face-4, not-3)
root(ROOT-0, face-4)
det(suspicion-6, the-5)
dobj(face-4, suspicion-6)
cop(suitor-10, being-8)
det(suitor-10, a-9)
prepc_of(suspicion-6, suitor-10)
prep_with(suitor-10, nothing-12)
prep_to(suitor-10, offer-14)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD had)
      (ADVP (RB always))
      (VP (VBN taken)
        (NP
          (NP (DT the) (JJ grand) (NN rôle))
          (: --)
          (NP
            (NP (DT that))
            (PP (IN of)
              (NP
                (NAC (NNP superior) (, ,) (NNP benefactor) (, ,))
                (NN bestower)))))))
    (. .)))

nsubj(taken-4, George-1)
aux(taken-4, had-2)
advmod(taken-4, always-3)
root(ROOT-0, taken-4)
det(rôle-7, the-5)
amod(rôle-7, grand-6)
dobj(taken-4, rôle-7)
dep(rôle-7, that-9)
dep(bestower-15, superior-11)
dep(superior-11, benefactor-13)
prep_of(that-9, bestower-15)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (JJ powerful)
        (PP (IN in)
          (NP (NN condescension)))))
    (. !)))

nsubj(powerful-3, He-1)
cop(powerful-3, was-2)
root(ROOT-0, powerful-3)
prep_in(powerful-3, condescension-5)

(ROOT
  (S
    (S
      (VP (VBG Not) (, ,)
        (ADVP (RB therefore))
        (, ,)
        (PP (IN until)
          (NP
            (NP (DT the) (NN night))
            (SBAR (IN before)
              (S
                (NP (PRP he))
                (VP (VBD sailed))))))))
    (VP (VBD did)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBP go)
            (PP (TO to)
              (NP (NNP Potlurg)))))))
    (. .)))

csubj(did-11, Not-1)
advmod(Not-1, therefore-3)
det(night-7, the-6)
prep_until(Not-1, night-7)
nsubj(sailed-10, he-9)
prepc_before(night-7, sailed-10)
root(ROOT-0, did-11)
nsubj(go-13, he-12)
ccomp(did-11, go-13)
prep_to(go-13, Potlurg-15)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD received)
      (NP (PRP him))
      (PP (IN with)
        (NP
          (NP (DT a) (NN shade))
          (PP (IN of)
            (NP (NN displeasure))))))
    (. .)))

nsubj(received-2, Alexa-1)
root(ROOT-0, received-2)
dobj(received-2, him-3)
det(shade-6, a-5)
prep_with(received-2, shade-6)
prep_of(shade-6, displeasure-8)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG going)
          (PRT (RP away)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (ADVP (RB abruptly))
      (, ,)
      (NP
        (NP (DT the) (NN moment))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD were)
              (VP (VBN seated)))))))
    (. .)))

nsubj(going-4, I-2)
aux(going-4, am-3)
ccomp(said-9, going-4)
prt(going-4, away-5)
nsubj(said-9, he-8)
root(ROOT-0, said-9)
advmod(said-9, abruptly-11)
det(moment-14, the-13)
dobj(said-9, moment-14)
nsubjpass(seated-17, they-15)
auxpass(seated-17, were-16)
rcmod(moment-14, seated-17)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NN heart))
      (VP (VBD gave)
        (NP (DT a) (JJ painful) (NN throb))
        (PP (IN in)
          (NP (PRP$ her) (NN throat)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD did) (RB not)
        (VP (VB lose)
          (NP (PRP$ her) (NN self-possession)))))
    (. .)))

poss(heart-2, Her-1)
nsubj(gave-3, heart-2)
root(ROOT-0, gave-3)
det(throb-6, a-4)
amod(throb-6, painful-5)
dobj(gave-3, throb-6)
poss(throat-9, her-8)
prep_in(gave-3, throat-9)
nsubj(lose-15, she-12)
aux(lose-15, did-13)
neg(lose-15, not-14)
conj_but(gave-3, lose-15)
poss(self-possession-17, her-16)
dobj(lose-15, self-possession-17)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG going)))
    (. ?) ('' '')))

advmod(going-5, Where-2)
aux(going-5, are-3)
nsubj(going-5, you-4)
root(ROOT-0, going-5)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, she-1)
root(ROOT-0, asked-2)

(ROOT
  (S (`` ``)
    (FRAG
      (PP (TO To)
        (NP (NNP New) (NNP York))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD replied))
    (. .)))

dep(replied-8, To-2)
nn(York-4, New-3)
pobj(To-2, York-4)
nsubj(replied-8, he-7)
root(ROOT-0, replied-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN got)
        (ADVP
          (NP (DT a) (NN situation))
          (RB there))
        (: --)
        (PP (IN in)
          (NP (DT a)
            (ADJP (RB not) (JJ unimportant))
            (NN house)))))
    (. .)))

nsubj(got-4, I-2)
aux(got-4, have-3)
root(ROOT-0, got-4)
det(situation-6, a-5)
npadvmod(there-7, situation-6)
advmod(got-4, there-7)
det(house-13, a-10)
neg(unimportant-12, not-11)
amod(house-13, unimportant-12)
prep_in(got-4, house-13)

(ROOT
  (S
    (ADVP (RB _))
    (NP (EX There))
    (VP (VBD _)
      (ADVP (IN at) (JJS least))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP am)
            (VP (VBN taken)
              (PP (IN for)
                (NP (DT an) (JJ honest) (NN man))))))))
    (. .)))

advmod(_-3, _-1)
expl(_-3, There-2)
root(ROOT-0, _-3)
advmod(_-3, at-4)
pobj(at-4, least-5)
nsubjpass(taken-8, I-6)
auxpass(taken-8, am-7)
ccomp(_-3, taken-8)
det(man-12, an-10)
amod(man-12, honest-11)
prep_for(taken-8, man-12)

(ROOT
  (S
    (PP (IN From)
      (NP (PRP$ your) (NN heaven)))
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN fallen)))
    (. .) ('' '')))

poss(heaven-3, your-2)
prep_from(fallen-6, heaven-3)
nsubj(fallen-6, I-4)
aux(fallen-6, have-5)
root(ROOT-0, fallen-6)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT No) (NN one))
      (VP
        (VP (VBZ falls)
          (PP (IN from)
            (NP (DT any) (NN heaven))))
        (CC but)
        (VP (VBZ has)
          (S
            (NP (PRP himself))
            (VP (TO to)
              (VP (VB blame)))))))
    (, ,) ('' '')
    (VP (VBD rejoined))
    (NP (NNP Alexa))
    (. .)))

neg(one-3, No-2)
nsubj(falls-4, one-3)
nsubj(has-9, one-3)
ccomp(rejoined-15, falls-4)
det(heaven-7, any-6)
prep_from(falls-4, heaven-7)
conj_but(falls-4, has-9)
ccomp(rejoined-15, has-9)
dobj(has-9, himself-10)
nsubj(blame-12, himself-10)
aux(blame-12, to-11)
ccomp(has-9, blame-12)
xcomp(has-9, blame-12)
root(ROOT-0, rejoined-15)
nsubj(rejoined-15, Alexa-16)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBP have)
      (NP (PRP I))
      (VP (VBN been)
        (S
          (VP (TO to)
            (VP (VB blame))))))
    (. ?)))

advmod(been-5, Where-2)
aux(been-5, have-3)
nsubj(been-5, I-4)
nsubj(blame-7, I-4)
root(ROOT-0, been-5)
aux(blame-7, to-6)
xcomp(been-5, blame-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was) (RB not)
      (PP (IN in)
        (NP
          (NP (PRP$ my) (NN father) (POS 's))
          (NN confidence))))
    (. .)))

nsubj(was-2, I-1)
root(ROOT-0, was-2)
neg(was-2, not-3)
poss(father-6, my-5)
poss(confidence-8, father-6)
prep_in(was-2, confidence-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD knew)
      (NP
        (NP (NN nothing))
        (, ,)
        (RRC
          (ADVP (RB positively))
          (NP (NN nothing)))
        (, ,)
        (PP (IN of)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD was)
                (VP (VBG going)
                  (PRT (RP on)))))))))
    (. .) ('' '')))

nsubj(knew-2, I-1)
root(ROOT-0, knew-2)
dobj(knew-2, nothing-3)
advmod(nothing-6, positively-5)
rcmod(nothing-3, nothing-6)
nsubj(going-11, what-9)
aux(going-11, was-10)
prepc_of(nothing-3, going-11)
prt(going-11, on-12)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ
      (ADVP (RB then))
      (VP (VBD did)
        (S
          (NP (PRP you))
          (RB not)
          (VP (VB come)
            (S
              (VP (TO to)
                (VP (VB see)
                  (NP (PRP me)))))))))
    (. ?) ('' '')))

advmod(did-4, Why-2)
advmod(did-4, then-3)
root(ROOT-0, did-4)
nsubj(come-7, you-5)
nsubj(see-9, you-5)
neg(come-7, not-6)
ccomp(did-4, come-7)
aux(see-9, to-8)
xcomp(come-7, see-9)
dobj(see-9, me-10)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT A) (NN man))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ is)
            (ADJP (DT neither) (JJ beggar)
              (CC nor)
              (JJ thief))))))
    (VP (VBZ is) (RB not)
      (ADJP (JJ willing)
        (S
          (VP (TO to)
            (VP (VB look)
              (ADVP (RB either)))))))
    (. .) ('' '')))

det(man-3, A-2)
nsubj(beggar-7, man-3)
nsubj(thief-9, man-3)
nsubj(willing-12, man-3)
nsubj(look-14, man-3)
cop(beggar-7, is-5)
preconj(beggar-7, neither-6)
rcmod(man-3, beggar-7)
rcmod(man-3, thief-9)
conj_nor(beggar-7, thief-9)
cop(willing-12, is-10)
neg(willing-12, not-11)
root(ROOT-0, willing-12)
aux(look-14, to-13)
xcomp(willing-12, look-14)
advmod(look-14, either-15)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN come)
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBD had)
                  (VP (VBN trusted)
                    (NP (PRP me))))))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(come-5, You-2)
aux(come-5, would-3)
aux(come-5, have-4)
ccomp(said-14, come-5)
mark(trusted-9, if-6)
nsubj(trusted-9, you-7)
aux(trusted-9, had-8)
advcl(come-5, trusted-9)
dobj(trusted-9, me-10)
nsubj(said-14, she-13)
root(ROOT-0, said-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD must)
        (VP (VB pardon)
          (NP (NN pride))
          (PP (IN in)
            (NP (DT a) (JJ ruined) (NN man))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD answered))
    (. .)))

nsubj(pardon-4, You-2)
aux(pardon-4, must-3)
ccomp(answered-13, pardon-4)
dobj(pardon-4, pride-5)
det(man-9, a-7)
amod(man-9, ruined-8)
prep_in(pardon-4, man-9)
nsubj(answered-13, he-12)
root(ROOT-0, answered-13)

(ROOT
  (S (`` ``)
    (SBAR (RB Now) (IN that)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (VP (VBG starting)
            (NP (NN to-morrow))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB feel)
        (NP
          (NP (DT the) (JJ same) (NN dread))
          (PP (IN of)
            (S
              (VP (VBG being)
                (ADJP (VBN misunderstood))))))))
    (. !) ('' '')))

advmod(starting-6, Now-2)
mark(starting-6, that-3)
nsubj(starting-6, I-4)
aux(starting-6, am-5)
advcl(feel-12, starting-6)
dobj(starting-6, to-morrow-7)
nsubj(feel-12, I-9)
aux(feel-12, do-10)
neg(feel-12, not-11)
root(ROOT-0, feel-12)
det(dread-15, the-13)
amod(dread-15, same-14)
dobj(feel-12, dread-15)
auxpass(misunderstood-18, being-17)
prepc_of(dread-15, misunderstood-18)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBD was) (RB not)
      (NP
        (NP (NN kind))
        (PP (IN of)
          (NP
            (NP (PRP you))
            (, ,)
            (NP (NNP George))))))
    (. .)))

nsubj(kind-5, It-2)
cop(kind-5, was-3)
neg(kind-5, not-4)
root(ROOT-0, kind-5)
prep_of(kind-5, you-7)
appos(you-7, George-9)

(ROOT
  (S
    (VP (VBG Knowing)
      (SBAR
        (S
          (NP (PRP yourself))
          (VP (VBP fit)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBD trusted) (, ,)
                    (SBARQ
                      (WHADVP (WRB why))
                      (SQ (VBD did)
                        (NP (PRP you))
                        (VP (RB not) (VB think)
                          (S
                            (NP (PRP me))
                            (ADJP (JJ capable)
                              (PP (IN of)
                                (S
                                  (VP (VBG trusting))))))))
                      (. ?) ('' ''))))))))))))

root(ROOT-0, Knowing-1)
nsubj(fit-3, yourself-2)
nsubjpass(trusted-6, yourself-2)
ccomp(Knowing-1, fit-3)
aux(trusted-6, to-4)
auxpass(trusted-6, be-5)
xcomp(fit-3, trusted-6)
advmod(think-12, why-8)
aux(think-12, did-9)
nsubj(think-12, you-10)
neg(think-12, not-11)
ccomp(trusted-6, think-12)
nsubj(capable-14, me-13)
xcomp(think-12, capable-14)
prepc_of(capable-14, trusting-16)

(ROOT
  (S (`` ``)
    (ADVP (CC But))
    (, ,)
    (VP (VBZ Alexa))
    (. !)))

advmod(Alexa-4, But-2)
root(ROOT-0, Alexa-4)

(ROOT
  (PRN (: --)
    (S
      (NP (DT a) (NN man))
      (VP (VBZ 's)
        (FRAG
          (NP (JJ own) (NN father) (. !) ('' '')))))))

det(man-3, a-2)
nsubj('s-4, man-3)
root(ROOT-0, 's-4)
amod(father-6, own-5)
dep('s-4, father-6)

(ROOT
  (S
    (PP (IN For)
      (NP (DT a) (NN moment)))
    (NP (PRP he))
    (VP (VBD showed)
      (NP
        (NP (NNS signs))
        (PP (IN of)
          (NP
            (NP (DT an) (NN emotion))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (ADVP (RB seldom))
                  (VP (VBN had)
                    (PP (TO to)
                      (NP (NNS repress)))))))))))
    (. .)))

det(moment-3, a-2)
prep_for(showed-5, moment-3)
nsubj(showed-5, he-4)
root(ROOT-0, showed-5)
dobj(showed-5, signs-6)
det(emotion-9, an-8)
prep_of(signs-6, emotion-9)
nsubj(had-13, he-10)
aux(had-13, had-11)
advmod(had-13, seldom-12)
rcmod(emotion-9, had-13)
prep_to(had-13, repress-15)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VB beg)
      (NP
        (NP (PRP$ your) (NN pardon))
        (, ,)
        (NP (NNP George))))
    (. !) ('' '')))

nsubj(beg-3, I-2)
root(ROOT-0, beg-3)
poss(pardon-5, your-4)
dobj(beg-3, pardon-5)
appos(pardon-5, George-7)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Alexa-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (DT both) (JJ stupid)
        (CC and)
        (JJ selfish)))
    (. !)))

nsubj(stupid-5, I-2)
nsubj(selfish-7, I-2)
cop(stupid-5, am-3)
preconj(stupid-5, both-4)
root(ROOT-0, stupid-5)
conj_and(stupid-5, selfish-7)

(ROOT
  (FRAG
    (S
      (VP (VBG Are)
        (S
          (NP (PRP you))
          (ADVP (RB really))
          (VP (VBG going)
            (ADVP (RB so) (RB far))))))
    (. ?) ('' '')))

root(ROOT-0, Are-1)
nsubj(going-4, you-2)
advmod(going-4, really-3)
vmod(Are-1, going-4)
advmod(far-6, so-5)
advmod(going-4, far-6)

(ROOT
  (S
    (NP (PRP$ Her) (NN voice))
    (VP (VBD trembled))
    (. .)))

poss(voice-2, Her-1)
nsubj(trembled-3, voice-2)
root(ROOT-0, trembled-3)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)))
    (: --)
    (CC but)
    (S
      (S
        (VP (TO to)
          (VP (VB return))))
      (, ,)
      (NP (PRP I))
      (VP (VBP hope) (, ,)
        (PP (IN in)
          (NP (DT a)
            (ADJP (RB very) (JJ different))
            (NN position)))))
    (. !) ('' '')))

nsubj(am-3, I-2)
root(ROOT-0, am-3)
aux(return-7, to-6)
advcl(hope-10, return-7)
nsubj(hope-10, I-9)
conj_but(am-3, hope-10)
det(position-16, a-13)
advmod(different-15, very-14)
amod(position-16, different-15)
prep_in(hope-10, position-16)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD would)
        (VP (VB have)
          (S
            (NP (PRP me))
            (VP (VB understand))))))
    (: --) ('' '')
    (S (`` ``)
      (NP (DT That) (NN I))
      (VP (MD shall) (RB then)
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB hold)
                  (PRT (RP up))
                  (NP (PRP$ my) (NN head)))))))))
    (. .) ('' '')))

nsubj(have-4, You-2)
aux(have-4, would-3)
root(ROOT-0, have-4)
nsubj(understand-6, me-5)
ccomp(have-4, understand-6)
det(I-11, That-10)
nsubj(able-15, I-11)
nsubj(hold-17, I-11)
aux(able-15, shall-12)
advmod(able-15, then-13)
cop(able-15, be-14)
parataxis(have-4, able-15)
aux(hold-17, to-16)
xcomp(able-15, hold-17)
prt(hold-17, up-18)
poss(head-20, my-19)
dobj(hold-17, head-20)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (DT an) (JJ innocent) (NN man))
      (ADVP (RB ever))
      (VP (VB do)
        (ADVP (RB otherwise))))
    (. ?) ('' '')))

advmod(do-8, Why-2)
aux(do-8, should-3)
det(man-6, an-4)
amod(man-6, innocent-5)
nsubj(do-8, man-6)
advmod(do-8, ever-7)
root(ROOT-0, do-8)
advmod(do-8, otherwise-9)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (MD can) (RB not)
      (VP (VB help)
        (S
          (VP (VBG seeing)
            (NP (PRP himself))
            (PP (IN in)
              (NP
                (NP (JJ other) (NNS people) (POS 's))
                (NNS thoughts)))))))
    (. !) ('' '')))

nsubj(help-5, He-2)
aux(help-5, can-3)
neg(help-5, not-4)
root(ROOT-0, help-5)
xcomp(help-5, seeing-6)
dobj(seeing-6, himself-7)
amod(people-10, other-9)
poss(thoughts-12, people-10)
prep_in(seeing-6, thoughts-12)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP are)
          (PP (IN in)
            (NP (DT the) (NN right))))))
    (VP (MD ought)
      (NP (PRP we))
      (S
        (VP (TO to)
          (VP (VB mind)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (NNS people))
                (VP (VBP think)
                  (PP (IN of)
                    (NP (PRP us))))))))))
    (. ?) ('' '')))

mark(are-4, If-2)
nsubj(are-4, we-3)
csubj(ought-8, are-4)
det(right-7, the-6)
prep_in(are-4, right-7)
root(ROOT-0, ought-8)
dobj(ought-8, we-9)
aux(mind-11, to-10)
vmod(ought-8, mind-11)
dobj(think-14, what-12)
nsubj(think-14, people-13)
ccomp(mind-11, think-14)
prep_of(think-14, us-16)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Alexa-2)

(ROOT
  (S (`` ``)
    (VP (VB Perhaps) (RB not))
    (. .)))

root(ROOT-0, Perhaps-2)
neg(Perhaps-2, not-3)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB make)
        (S
          (NP (PRP them))
          (VP (VB think)
            (PP (IN of)
              (NP (PRP me)))
            (SBAR (IN as)
              (S
                (NP (PRP I))
                (VP (VBP choose))))))))
    (. .) ('' '')))

cc(make-4, But-1)
nsubj(make-4, I-2)
aux(make-4, will-3)
root(ROOT-0, make-4)
nsubj(think-6, them-5)
ccomp(make-4, think-6)
prep_of(think-6, me-8)
mark(choose-11, as-9)
nsubj(choose-11, I-10)
advcl(think-6, choose-11)

(ROOT
  (INTJ (`` ``) (UH How) (. ?) ('' '')))

root(ROOT-0, How-2)

(ROOT
  (S (`` ``)
    (PP (IN By)
      (ADJP (JJ compelling)))
    (NP (PRP$ their))
    (VP (VBZ respect))
    (. .) ('' '')))

prep_by(respect-5, compelling-3)
nsubj(respect-5, their-4)
root(ROOT-0, respect-5)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP mean)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (DT a) (NN fortune))))))
    (. ?) ('' '')))

nsubj(mean-3, You-2)
nsubj(make-5, You-2)
root(ROOT-0, mean-3)
aux(make-5, to-4)
xcomp(mean-3, make-5)
det(fortune-7, a-6)
dobj(make-5, fortune-7)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP it))
    (VP (MD will)
      (VP (VB be)
        (NP
          (NP (DT the) (NN fortune))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VB respect)))))))
    (. !)))

advmod(fortune-7, Then-2)
nsubj(fortune-7, it-3)
aux(fortune-7, will-4)
cop(fortune-7, be-5)
det(fortune-7, the-6)
root(ROOT-0, fortune-7)
nsubj(respect-9, they-8)
rcmod(fortune-7, respect-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will) (RB not)
      (VP (VB be)
        (ADJP (RBR more) (JJ worthy))))
    (. !) ('' '')))

nsubj(worthy-6, You-1)
aux(worthy-6, will-2)
neg(worthy-6, not-3)
cop(worthy-6, be-4)
advmod(worthy-6, more-5)
root(ROOT-0, worthy-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD shall) (RB not))
    (. .) ('' '')))

nsubj(shall-3, I-2)
root(ROOT-0, shall-3)
neg(shall-3, not-4)

(ROOT
  (S (`` ``)
    (NP (CD Is) (JJ such) (NN respect) (NN worth))
    (VP (VBZ having))
    (. ?) ('' '')))

num(worth-5, Is-2)
amod(worth-5, such-3)
nn(worth-5, respect-4)
nsubj(having-6, worth-5)
root(ROOT-0, having-6)

(ROOT
  (S (`` ``)
    (VP (VB Not)
      (PP (IN in)
        (NP (PRP itself))))
    (. .) ('' '')))

root(ROOT-0, Not-2)
prep_in(Not-2, itself-4)

(ROOT
  (FRAG
    (PP
      (PP (`` ``) (IN In)
        (NP (WP what)))
      (ADVP (RB then)))
    (. ?)))

root(ROOT-0, In-2)
pobj(In-2, what-3)
dep(In-2, then-4)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP lay)
      (NP (PRP yourself))
      (PP (RB out) (IN for)
        (NP (PRP it))))
    (. ?) ('' '')))

advmod(lay-2, Why-1)
root(ROOT-0, lay-2)
nsubj(lay-2, yourself-3)
advmod(lay-2, out-4)
prep_for(lay-2, it-6)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Believe) (PRP me) (, ,) (NNP Alexa) (, ,))
      (PP (RB even)
        (NP
          (NP (DT the) (JJ real) (NN respect))
          (PP (IN of)
            (NP (JJ such) (NNS people))))))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ worthless)
          (PP (TO to)
            (NP (PRP me))))))
    (. .)))

nn(Alexa-5, Believe-2)
dep(Alexa-5, me-3)
nsubj(worthless-16, Alexa-5)
prep(Alexa-5, even-7)
det(respect-10, the-8)
amod(respect-10, real-9)
pobj(even-7, respect-10)
amod(people-13, such-12)
prep_of(respect-10, people-13)
aux(worthless-16, would-14)
cop(worthless-16, be-15)
root(ROOT-0, worthless-16)
prep_to(worthless-16, me-18)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB only))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB bring)
            (NP (PRP them))
            (PP (TO to)
              (NP (PRP$ their) (NNS marrow-bones)))))))
    (. !) ('' '')))

nsubj(want-3, I-1)
nsubj(bring-5, I-1)
advmod(want-3, only-2)
root(ROOT-0, want-3)
aux(bring-5, to-4)
xcomp(want-3, bring-5)
dobj(bring-5, them-6)
poss(marrow-bones-9, their-8)
prep_to(bring-5, marrow-bones-9)

(ROOT
  (S
    (NP (DT The) (NN truth))
    (VP
      (VP (VBD was))
      (, ,)
      (NP
        (NP (NNP Alexa))
        (VP (VBN prized)
          (NP (JJ social) (NN position))
          (ADVP
            (ADVP (RB so) (RB dearly))
            (SBAR (IN that)
              (S
                (NP (PRP she))
                (VP (VBD did) (RB not)
                  (VP (VB relish)
                    (NP (PRP$ his))
                    (S
                      (VP (VBG regarding)
                        (NP (PRP it))
                        (PP (IN as)
                          (NP
                            (NP (DT a) (NN thing))
                            (PP (IN at)
                              (NP
                                (NP (DT the) (NN command))
                                (PP (IN of)
                                  (NP (NN money)))))))))))))))))
    (. .)))

det(truth-2, The-1)
nsubj(was-3, truth-2)
root(ROOT-0, was-3)
dobj(was-3, Alexa-5)
vmod(Alexa-5, prized-6)
amod(position-8, social-7)
dobj(prized-6, position-8)
advmod(dearly-10, so-9)
advmod(prized-6, dearly-10)
mark(relish-15, that-11)
nsubj(relish-15, she-12)
aux(relish-15, did-13)
neg(relish-15, not-14)
advcl(dearly-10, relish-15)
ccomp(dearly-10, relish-15)
dobj(relish-15, his-16)
xcomp(relish-15, regarding-17)
dobj(regarding-17, it-18)
det(thing-21, a-20)
prep_as(regarding-17, thing-21)
det(command-24, the-23)
prep_at(thing-21, command-24)
prep_of(command-24, money-26)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (NNP George))
          (VP (VB be)
            (ADJP (RB as) (JJ rich))
            (PP (IN as)
              (NP
                (NP (DT a) (NN Jew))
                (CC or)
                (NP (DT an) (NNP American))))))))
    (, ,)
    (NP (NNP Alexa))
    (VP (MD would)
      (ADVP (RB never))
      (VP (VB regard)
        (NP (PRP him))
        (PP (IN as)
          (NP (PRP$ her) (JJ equal)))))
    (. !)))

ccomp(regard-16, Let-1)
nsubj(rich-5, George-2)
cop(rich-5, be-3)
advmod(rich-5, as-4)
ccomp(Let-1, rich-5)
det(Jew-8, a-7)
prep_as(rich-5, Jew-8)
det(American-11, an-10)
prep_as(rich-5, American-11)
conj_or(Jew-8, American-11)
nsubj(regard-16, Alexa-13)
aux(regard-16, would-14)
neg(regard-16, never-15)
root(ROOT-0, regard-16)
dobj(regard-16, him-17)
poss(equal-20, her-19)
prep_as(regard-16, equal-20)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP (VBD worshiped)
        (NP (NN money))))
    (: ;)
    (S
      (NP (NNP Alexa))
      (VP (VBD worshiped)
        (NP (NN birth)
          (CC and)
          (NN land))))
    (. .)))

nsubj(worshiped-2, George-1)
root(ROOT-0, worshiped-2)
dobj(worshiped-2, money-3)
nsubj(worshiped-6, Alexa-5)
parataxis(worshiped-2, worshiped-6)
dobj(worshiped-6, birth-7)
dobj(worshiped-6, land-9)
conj_and(birth-7, land-9)

(ROOT
  (S
    (S
      (NP
        (NP (PRP$ Our) (JJ own) (NN way))
        (PP (IN of)
          (S
            (VP (VBG being)
              (ADJP (JJ wrong))))))
      (VP (VBZ is)
        (NP
          (NP (DT all) (NN right))
          (PP (IN in)
            (NP (PRP$ our) (JJ own) (NNS eyes))))))
    (: ;)
    (S
      (NP
        (NP
          (NP (PRP$ our) (NN neighbor) (POS 's))
          (NN way))
        (PP (IN of)
          (S
            (VP (VBG being)
              (ADJP (JJ wrong))))))
      (VP (VBZ is)
        (ADJP (JJ offensive)
          (PP (TO to)
            (NP
              (NP (DT all))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ good)
                      (PP (IN in)
                        (NP (PRP us))))))))))))
    (. .)))

poss(way-3, Our-1)
amod(way-3, own-2)
nsubj(right-9, way-3)
cop(wrong-6, being-5)
prepc_of(way-3, wrong-6)
cop(right-9, is-7)
det(right-9, all-8)
root(ROOT-0, right-9)
poss(eyes-13, our-11)
amod(eyes-13, own-12)
prep_in(right-9, eyes-13)
poss(neighbor-16, our-15)
poss(way-18, neighbor-16)
nsubj(offensive-23, way-18)
cop(wrong-21, being-20)
prepc_of(way-18, wrong-21)
cop(offensive-23, is-22)
parataxis(right-9, offensive-23)
prep_to(offensive-23, all-25)
nsubj(good-28, all-25)
cop(good-28, is-27)
rcmod(all-25, good-28)
prep_in(good-28, us-30)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (ADJP
        (ADJP (JJ anxious))
        (ADVP (RB therefore))
        (, ,)
        (ADJP
          (ADVP (RB kindly))
          (JJ anxious)))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB pull)
            (NP (DT the) (NN mote))
            (PRT (RP out))
            (PP (IN of)
              (NP (PRP$ his) (NN eye)))
            (, ,)
            (S
              (ADVP (RB never))
              (VP (VBG thinking)
                (PP (IN of)
                  (NP
                    (NP (DT the) (JJ big) (NN beam))
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN way))
                        (PP (IN of)
                          (NP (DT the) (NN operation)))))))))))))
    (. .)))

nsubj(anxious-3, We-1)
nsubj(pull-10, We-1)
cop(anxious-3, are-2)
root(ROOT-0, anxious-3)
advmod(anxious-3, therefore-4)
advmod(anxious-7, kindly-6)
dep(anxious-3, anxious-7)
aux(pull-10, to-9)
xcomp(anxious-3, pull-10)
det(mote-12, the-11)
dobj(pull-10, mote-12)
poss(eye-16, his-15)
prep_out_of(pull-10, eye-16)
neg(thinking-19, never-18)
vmod(pull-10, thinking-19)
det(beam-23, the-21)
amod(beam-23, big-22)
prep_of(thinking-19, beam-23)
det(way-26, the-25)
prep_in(beam-23, way-26)
det(operation-29, the-28)
prep_of(way-26, operation-29)

(ROOT
  (S
    (NP (NNP Jesus))
    (VP (VBD labored)
      (S
        (VP (TO to)
          (VP (VB show)
            (NP (PRP us))
            (SBAR (IN that)
              (S
                (NP (PRP$ our) (JJ immediate) (NN business))
                (VP (VBZ is)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADVP (RB right))
                        (NP (PRP ourselves))))))))))))
    (. .)))

nsubj(labored-2, Jesus-1)
nsubj(show-4, Jesus-1)
root(ROOT-0, labored-2)
aux(show-4, to-3)
xcomp(labored-2, show-4)
dobj(show-4, us-5)
mark(is-10, that-6)
poss(business-9, our-7)
amod(business-9, immediate-8)
nsubj(is-10, business-9)
nsubj(ourselves-14, business-9)
ccomp(show-4, is-10)
aux(ourselves-14, to-11)
cop(ourselves-14, be-12)
advmod(ourselves-14, right-13)
xcomp(is-10, ourselves-14)

(ROOT
  (S
    (SBAR (IN Until)
      (S
        (NP (PRP we))
        (VP (VBP are))))
    (, ,)
    (ADVP (RB even))
    (NP (PRP$ our) (JJ righteous) (NN indignation))
    (VP (VBZ is)
      (NP (NN waste)))
    (. .)))

mark(are-3, Until-1)
nsubj(are-3, we-2)
advcl(waste-10, are-3)
advmod(indignation-8, even-5)
poss(indignation-8, our-6)
amod(indignation-8, righteous-7)
nsubj(waste-10, indignation-8)
cop(waste-10, is-9)
root(ROOT-0, waste-10)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (PRP he))
        (VP (VBD spoke))))
    (, ,)
    (NP
      (NP (NNP George) (POS 's))
      (NNS eyes))
    (VP (VBD were)
      (PP (IN on)
        (NP (DT the) (NN ground))))
    (. .)))

mark(spoke-3, While-1)
nsubj(spoke-3, he-2)
advcl(were-8, spoke-3)
poss(eyes-7, George-5)
nsubj(were-8, eyes-7)
root(ROOT-0, were-8)
det(ground-11, the-10)
prep_on(were-8, ground-11)

(ROOT
  (S
    (S
      (NP (PRP$ His) (JJ grand) (NN resolve))
      (VP (VBD did) (RB not)
        (VP (VB give)
          (NP (PRP$ his) (NN innocence) (NN strength))
          (S
            (VP (TO to)
              (VP (VB look)
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN face))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN woman))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD loved))))))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD felt) (, ,)
        (PP (IN without)
          (S
            (VP (VBG knowing)
              (NP (NNS why)))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBD was) (RB not)
              (ADJP (VBN satisfied)
                (PP (IN with)
                  (NP (PRP him)))))))))
    (. .)))

poss(resolve-3, His-1)
amod(resolve-3, grand-2)
nsubj(give-6, resolve-3)
aux(give-6, did-4)
neg(give-6, not-5)
root(ROOT-0, give-6)
poss(strength-9, his-7)
nn(strength-9, innocence-8)
dobj(give-6, strength-9)
aux(look-11, to-10)
vmod(give-6, look-11)
det(face-14, the-13)
prep_in(look-11, face-14)
det(woman-17, the-16)
prep_of(face-14, woman-17)
nsubj(loved-19, he-18)
rcmod(woman-17, loved-19)
nsubj(felt-22, he-21)
parataxis(give-6, felt-22)
prepc_without(felt-22, knowing-25)
dobj(knowing-25, why-26)
mark(satisfied-32, that-28)
nsubjpass(satisfied-32, she-29)
auxpass(satisfied-32, was-30)
neg(satisfied-32, not-31)
ccomp(felt-22, satisfied-32)
prep_with(satisfied-32, him-34)

(ROOT
  (S
    (PP (IN Of)
      (NP
        (NP (DT the) (NNS paltriness))
        (PP (IN of)
          (NP (PRP$ his) (NN ambition)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD had)
      (NP (DT no) (JJ inward) (NN hint)))
    (. .)))

det(paltriness-3, the-2)
prep_of(had-9, paltriness-3)
poss(ambition-6, his-5)
prep_of(paltriness-3, ambition-6)
nsubj(had-9, he-8)
root(ROOT-0, had-9)
neg(hint-12, no-10)
amod(hint-12, inward-11)
dobj(had-9, hint-12)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ high) (NNS resolves))
      (PP (IN of)
        (NP (DT a) (JJ puny) (NN nature))))
    (VP (MD must)
      (VP (VB be)
        (NP
          (NP
            (NP (DT a) (NN laughter))
            (PP (TO to)
              (NP (DT the) (NNS angels))))
          (: --)
          (NP (DT the) (JJ bad) (NNS ones)))))
    (. .)))

det(resolves-3, The-1)
amod(resolves-3, high-2)
nsubj(laughter-11, resolves-3)
det(nature-7, a-5)
amod(nature-7, puny-6)
prep_of(resolves-3, nature-7)
aux(laughter-11, must-8)
cop(laughter-11, be-9)
det(laughter-11, a-10)
root(ROOT-0, laughter-11)
det(angels-14, the-13)
prep_to(laughter-11, angels-14)
det(ones-18, the-16)
amod(ones-18, bad-17)
dep(laughter-11, ones-18)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (DT a) (NN man))
        (VP (VBZ has)
          (NP (DT no) (NN ambition)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD resumed) (, ,)
      (S
        (VP (VBG feeling)
          (PP (IN after)
            (NP
              (NP (PRP$ her) (NN objection))
              (, ,) (`` ``)
              (SBARQ
                (WHADVP (WRB how))
                (SQ (VBZ is)
                  (NP (PRP he))
                  (VP (TO to)
                    (VP (VB fulfill)
                      (NP
                        (NP (DT the) (NN end))
                        (PP (IN of)
                          (NP (PRP$ his) (NN being)))))))))))))
    (. !)))

mark(has-5, If-2)
det(man-4, a-3)
nsubj(has-5, man-4)
advcl(resumed-11, has-5)
neg(ambition-7, no-6)
dobj(has-5, ambition-7)
nsubj(resumed-11, he-10)
root(ROOT-0, resumed-11)
xcomp(resumed-11, feeling-13)
poss(objection-16, her-15)
prep_after(feeling-13, objection-16)
advmod(fulfill-23, how-19)
aux(fulfill-23, is-20)
nsubj(fulfill-23, he-21)
aux(fulfill-23, to-22)
dep(objection-16, fulfill-23)
det(end-25, the-24)
dobj(fulfill-23, end-25)
poss(being-28, his-27)
prep_of(end-25, being-28)

(ROOT
  (S
    (NP (DT No) (NN sluggard))
    (ADVP (RB ever))
    (VP (VBD made)
      (NP (PRP$ his) (NN mark)))
    (. !)))

neg(sluggard-2, No-1)
nsubj(made-4, sluggard-2)
advmod(made-4, ever-3)
root(ROOT-0, made-4)
poss(mark-6, his-5)
dobj(made-4, mark-6)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD would)
      (NP (DT the) (NN world))
      (VP (VB advance)
        (PP (CC but)
          (PP (IN for)
            (NP
              (NP (DT the) (NNS men))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP have)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (NP (PRP$ their) (NNS fortunes))))))))))))
      (. !))))

advmod(advance-5, How-1)
aux(advance-5, would-2)
det(world-4, the-3)
nsubj(advance-5, world-4)
root(ROOT-0, advance-5)
cc(advance-5, but-6)
det(men-9, the-8)
prep_for(advance-5, men-9)
nsubj(have-11, men-9)
nsubj(make-13, men-9)
rcmod(men-9, have-11)
aux(make-13, to-12)
xcomp(have-11, make-13)
poss(fortunes-15, their-14)
dobj(make-13, fortunes-15)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (DT a) (NN man))
        (VP (VBP find)
          (SBAR
            (S
              (NP (PRP$ his) (NN father))
              (VP (VBZ has) (RB not)
                (VP (VBN made)
                  (NP
                    (NP (NN money))
                    (PP (IN for)
                      (NP (PRP him)))))))))))
    (, ,)
    (WHNP (WP what))
    (SQ (VBZ is)
      (NP (PRP he))
      (VP (TO to)
        (VP (VB do)
          (CC but)
          (VB make)
          (NP (PRP it))
          (PP (IN for)
            (NP (PRP himself))))))
    (. ?)))

mark(find-4, If-1)
det(man-3, a-2)
nsubj(find-4, man-3)
dep(what-14, find-4)
poss(father-6, his-5)
nsubj(made-9, father-6)
aux(made-9, has-7)
neg(made-9, not-8)
ccomp(find-4, made-9)
dobj(made-9, money-10)
prep_for(money-10, him-12)
root(ROOT-0, what-14)
cop(what-14, is-15)
nsubj(what-14, he-16)
aux(do-18, to-17)
dep(what-14, do-18)
dep(what-14, make-20)
conj_but(do-18, make-20)
dobj(do-18, it-21)
prep_for(do-18, himself-23)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD would) (RB not)
      (VP (VB have)
        (NP (PRP me)
          (NP
            (NP (PDT all) (PRP$ my) (NN life))
            (NP (DT a) (NN clerk))))))
    (. !)))

nsubj(have-4, You-1)
aux(have-4, would-2)
neg(have-4, not-3)
root(ROOT-0, have-4)
dep(life-8, me-5)
predet(life-8, all-6)
poss(life-8, my-7)
dobj(have-4, life-8)
det(clerk-10, a-9)
dep(life-8, clerk-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (ADVP (CC but))
          (VP (VBN known)))))
    (, ,)
    (NP (PRP I))
    (VP (MD should)
      (PP (IN by)
        (NP (DT this) (NN time)))
      (VP (VB have)
        (VP (VBN been)
          (ADVP (RB well) (RB ahead)))))
    (. !) ('' '')))

mark(known-5, If-1)
nsubj(known-5, I-2)
aux(known-5, had-3)
advmod(known-5, but-4)
advcl(been-13, known-5)
nsubj(been-13, I-7)
aux(been-13, should-8)
det(time-11, this-10)
prep_by(been-13, time-11)
aux(been-13, have-12)
root(ROOT-0, been-13)
advmod(ahead-15, well-14)
advmod(been-13, ahead-15)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD had)
        (NP (NN nothing)
          (S
            (VP (TO to)
              (VP (VB answer)))))))
    (: ;)
    (S
      (NP (PRP it))
      (ADVP (DT all))
      (VP (VBD sounded)
        (ADJP (RB very) (JJ reasonable))))
    (. !)))

nsubj(had-2, Alexa-1)
root(ROOT-0, had-2)
dobj(had-2, nothing-3)
aux(answer-5, to-4)
vmod(nothing-3, answer-5)
nsubj(sounded-9, it-7)
advmod(sounded-9, all-8)
parataxis(had-2, sounded-9)
advmod(reasonable-11, very-10)
acomp(sounded-9, reasonable-11)

(ROOT
  (SQ (VBD Were) (RB not)
    (NP
      (NP (NNP Scots))
      (SBAR
        (S
          (NP (NNS boys))
          (ADVP (RB everywhere))
          (VP (VBD taught)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (NP
                    (NP (DT the) (NN business))
                    (PP (IN of)
                      (NP (NN life))))
                  (PP (TO to)))))))))
    (NP (NN rise))
    (. ?)))

cop(rise-14, Were-1)
neg(rise-14, not-2)
nsubj(rise-14, Scots-3)
nsubj(taught-6, boys-4)
advmod(taught-6, everywhere-5)
rcmod(Scots-3, taught-6)
nsubj(business-10, it-7)
cop(business-10, was-8)
det(business-10, the-9)
ccomp(taught-6, business-10)
prep_of(business-10, life-12)
prep(business-10, to-13)
root(ROOT-0, rise-14)

(ROOT
  (SBARQ
    (SBAR
      (WHPP (IN In)
        (WHNP (WDT whatever) (NN position)))
      (S
        (NP (PRP they))
        (VP (VBD were))))
    (, ,)
    (SQ (VBD was)
      (NP (PRP it))
      (NP
        (NP (RB not) (PRP$ their) (NN part))
        (S
          (VP (TO to)
            (VP (VB get)
              (PRT (RP out))
              (PP (IN of)
                (NP (PRP it))))))))
    (. ?)))

det(position-3, whatever-2)
prep_in(were-5, position-3)
nsubj(were-5, they-4)
dep(part-11, were-5)
cop(part-11, was-7)
nsubj(part-11, it-8)
neg(part-11, not-9)
poss(part-11, their-10)
root(ROOT-0, part-11)
aux(get-13, to-12)
vmod(part-11, get-13)
prep_out_of(get-13, it-16)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD did) (RB not)
      (VP (VB see)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN kingdom))
                  (PP (IN of)
                    (NP (NN heaven)))))
              (SBAR (RB only)
                (S
                  (NP (PRP we))
                  (VP (VBP are)
                    (ADJP (VBN bound)
                      (S
                        (VP (TO to)
                          (VP (VB rise)))))))))))))
    (. .)))

nsubj(see-4, She-1)
aux(see-4, did-2)
neg(see-4, not-3)
root(ROOT-0, see-4)
mark(is-7, that-5)
nsubj(is-7, it-6)
ccomp(see-4, is-7)
det(kingdom-10, the-9)
prep_in(is-7, kingdom-10)
prep_of(kingdom-10, heaven-12)
advmod(bound-16, only-13)
nsubjpass(bound-16, we-14)
nsubj(rise-18, we-14)
auxpass(bound-16, are-15)
ccomp(is-7, bound-16)
aux(rise-18, to-17)
xcomp(bound-16, rise-18)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP are)
        (VP (VBN born)
          (PP (IN into)
            (NP (DT the) (NN world)))
          (S (RB not)
            (VP (TO to)
              (VP (VB rise)
                (PP
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN kingdom))
                      (PP (IN of)
                        (NP (NNP Satan)))))
                  (, ,)
                  (CC but)
                  (RB out)
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (CC And)
    (S
      (NP (DT the) (JJ only) (NN way)
        (S
          (VP (TO to)
            (VP (VB rise)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN kingdom))
                  (PP (IN of)
                    (NP (NN heaven)))))))))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP
                (NP (DT the) (NN work))
                (VP (VBN given)
                  (S
                    (NP (PRP us))
                    (VP (TO to)
                      (VP (VB do)))))))))))
    (. .)))

nsubjpass(born-3, We-1)
nsubj(rise-9, We-1)
auxpass(born-3, are-2)
root(ROOT-0, born-3)
det(world-6, the-5)
prep_into(born-3, world-6)
neg(rise-9, not-7)
aux(rise-9, to-8)
xcomp(born-3, rise-9)
prep(rise-9, in-10)
det(kingdom-12, the-11)
pobj(in-10, kingdom-12)
prep_of(kingdom-12, Satan-14)
prep(rise-9, out-17)
conj_but(in-10, out-17)
dep(in-10, of-18)
pobj(of-18, it-19)
det(way-23, the-21)
amod(way-23, only-22)
nsubj(is-31, way-23)
nsubj(do-33, way-23)
aux(rise-25, to-24)
vmod(way-23, rise-25)
det(kingdom-28, the-27)
prep_in(rise-25, kingdom-28)
prep_of(kingdom-28, heaven-30)
conj_and(born-3, is-31)
aux(do-33, to-32)
xcomp(is-31, do-33)
det(work-35, the-34)
dobj(do-33, work-35)
vmod(work-35, given-36)
dobj(given-36, us-37)
nsubj(do-39, us-37)
aux(do-39, to-38)
xcomp(given-36, do-39)

(ROOT
  (S
    (SBAR
      (WHNP (WDT Whatever))
      (S
        (VP (VB be)
          (VP (VBN intended)
            (PP (IN for)
              (NP (PRP us)))))))
    (, ,)
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ only) (NN way))
        (PP (TO to)
          (NP (PRP it)))
        (SBAR
          (S
            (NP (PRP We))
            (VP (VBP have)
              (S
                (VP
                  (VP (RB not) (TO to)
                    (VP (VB promote)
                      (NP (PRP ourselves))))
                  (, ,)
                  (CC but)
                  (VP (TO to)
                    (VP (VB do)
                      (NP (PRP$ our) (NN work)))))))))))
    (. .)))

nsubjpass(intended-3, Whatever-1)
auxpass(intended-3, be-2)
advcl(way-11, intended-3)
prep_for(intended-3, us-5)
nsubj(way-11, this-7)
cop(way-11, is-8)
det(way-11, the-9)
amod(way-11, only-10)
root(ROOT-0, way-11)
prep_to(way-11, it-13)
nsubj(have-15, We-14)
rcmod(way-11, have-15)
neg(promote-18, not-16)
aux(promote-18, to-17)
ccomp(have-15, promote-18)
dobj(promote-18, ourselves-19)
aux(do-23, to-22)
ccomp(have-15, do-23)
conj_but(promote-18, do-23)
poss(work-25, our-24)
dobj(do-23, work-25)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN master))
        (PP (IN of)
          (NP
            (NP (DT the) (NN feast))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ says) (: :) (`` ``)
                  (S
                    (VP (VB Go)
                      (PRT (RP up)))))))))))
    (. .) ('' '')))

nsubj(master-4, It-1)
cop(master-4, is-2)
det(master-4, the-3)
root(ROOT-0, master-4)
det(feast-7, the-6)
prep_of(master-4, feast-7)
nsubj(says-9, feast-7)
rcmod(feast-7, says-9)
ccomp(says-9, Go-12)
prt(Go-12, up-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN man))
        (VP (VBP go)
          (PRT (RP up))
          (PP (IN of)
            (NP (PRP himself))))))
    (, ,)
    (NP (PRP he))
    (VP (MD will)
      (VP (VB find)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBZ has)
              (VP (VBN mistaken)
                (NP
                  (NP (DT the) (NN head))
                  (PP (IN of)
                    (NP (DT the) (NN table))))))))))
    (. .)))

mark(go-4, If-1)
det(man-3, a-2)
nsubj(go-4, man-3)
advcl(find-11, go-4)
prt(go-4, up-5)
prep_of(go-4, himself-7)
nsubj(find-11, he-9)
aux(find-11, will-10)
root(ROOT-0, find-11)
nsubj(mistaken-14, he-12)
aux(mistaken-14, has-13)
ccomp(find-11, mistaken-14)
det(head-16, the-15)
dobj(mistaken-14, head-16)
det(table-19, the-18)
prep_of(head-16, table-19)

(ROOT
  (S
    (S
      (NP (JJR More) (NN talk))
      (VP
        (VP (VBD followed))
        (, ,)
        (CC but)
        (RB neither)
        (VP (VBD cast)
          (NP (DT any) (NN light)))))
    (: ;)
    (S
      (NP (DT neither))
      (VP (VBD saw)
        (NP (DT the) (JJ true) (NN question))))
    (. .)))

amod(talk-2, More-1)
nsubj(followed-3, talk-2)
root(ROOT-0, followed-3)
advmod(followed-3, neither-6)
conj_but(followed-3, neither-6)
dep(followed-3, cast-7)
det(light-9, any-8)
dobj(cast-7, light-9)
nsubj(saw-12, neither-11)
parataxis(followed-3, saw-12)
det(question-15, the-13)
amod(question-15, true-14)
dobj(saw-12, question-15)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD took)
      (NP (PRP$ his) (NN leave)))
    (. .)))

nsubj(took-2, George-1)
root(ROOT-0, took-2)
poss(leave-4, his-3)
dobj(took-2, leave-4)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP she))
          (VP (MD would)
            (VP (VB be)
              (ADJP (JJ glad)
                (S
                  (VP (TO to)
                    (VP (VB hear)
                      (PP (IN from)
                        (NP (PRP him))))))))))))
    (. .)))

nsubj(said-2, Alexa-1)
root(ROOT-0, said-2)
nsubj(glad-6, she-3)
nsubj(hear-8, she-3)
aux(glad-6, would-4)
cop(glad-6, be-5)
ccomp(said-2, glad-6)
aux(hear-8, to-7)
xcomp(glad-6, hear-8)
prep_from(hear-8, him-10)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD did) (RB not)
      (VP (VB like)
        (NP
          (NP
            (NP (DT the) (NN form))
            (PP (IN of)
              (NP
                (NP (NNP George) (POS 's))
                (NN ambition))))
          (: --)
          (S
            (S
              (VP (TO to)
                (VP (VB gain)
                  (NP (NN money)))))
            (, ,)
            (CC and)
            (ADVP (RB so))
            (S
              (VP (VB compel)
                (NP
                  (NP (DT the) (NN respect))
                  (PP (IN of)
                    (NP
                      (NP (NNS persons))
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (VBD did)
                            (SBAR (RB not)
                              (S
                                (NP (PRP himself))
                                (VP (VB respect)
                                  (SBAR
                                    (SBARQ (CC But)
                                      (SQ (VBD was)
                                        (NP (PRP she))
                                        (ADJP (JJ clear)
                                          (PP (IN of)
                                            (NP (DT the) (NN money) (NN disease) (NN herself)))))
                                      (. ?))))))))))))))))))))

nsubj(like-4, Alexa-1)
aux(like-4, did-2)
neg(like-4, not-3)
root(ROOT-0, like-4)
det(form-6, the-5)
dobj(like-4, form-6)
poss(ambition-10, George-8)
prep_of(form-6, ambition-10)
aux(gain-13, to-12)
dep(form-6, gain-13)
dobj(gain-13, money-14)
dep(form-6, compel-18)
conj_and(gain-13, compel-18)
det(respect-20, the-19)
dobj(compel-18, respect-20)
prep_of(respect-20, persons-22)
nsubj(did-24, he-23)
rcmod(persons-22, did-24)
dep(respect-27, not-25)
nsubj(respect-27, himself-26)
ccomp(did-24, respect-27)
cc(clear-31, But-28)
cop(clear-31, was-29)
nsubj(clear-31, she-30)
dep(respect-27, clear-31)
det(herself-36, the-33)
nn(herself-36, money-34)
nn(herself-36, disease-35)
prep_of(clear-31, herself-36)

(ROOT
  (SQ (MD Would)
    (NP (PRP she))
    (VP (VB have)
      (VP (VBN married)
        (NP (DT a) (JJ poor) (NN man))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB go)
              (PRT (RP on))
              (PP (IN as)
                (NP (NN hitherto))))))))
    (. ?)))

aux(married-4, Would-1)
nsubj(married-4, she-2)
aux(married-4, have-3)
root(ROOT-0, married-4)
det(man-7, a-5)
amod(man-7, poor-6)
dobj(married-4, man-7)
aux(go-10, to-9)
vmod(married-4, go-10)
prt(go-10, on-11)
prep_as(go-10, hitherto-13)

(ROOT
  (SQ (MD Would)
    (NP (PRP she))
    (VP (RB not) (VB have)
      (VP (VBN been)
        (ADJP (JJ ashamed)
          (S
            (VP (TO to)
              (VP (VB have)
                (S
                  (NP (NNP George))
                  (VP (VB know)
                    (S
                      (SBAR
                        (WHADVP (WRB how))
                        (S
                          (NP (PRP she))
                          (VP (VBD had)
                            (VP (VBN supplied)
                              (NP (PRP$ his) (NNS needs))
                              (SBAR (IN while)
                                (S
                                  (NP (PRP he))
                                  (VP (VBD lay)
                                    (PP (IN in)
                                      (NP (DT the) (NN house))))))
                              (: --)
                              (SBAR (IN that)
                                (S
                                  (NP (PRP it))
                                  (VP (VBD was)
                                    (PP (IN with)
                                      (NP
                                        (NP (DT the) (JJ poor) (NNS gains))
                                        (PP (IN of)
                                          (NP (PRP$ her) (JJ poultry-yard))))))))))))
                      (NP (PRP she))
                      (VP (VBD fed)
                        (NP (PRP him))))))))))))
    (. ?)))

aux(ashamed-6, Would-1)
nsubj(ashamed-6, she-2)
nsubj(have-8, she-2)
neg(ashamed-6, not-3)
aux(ashamed-6, have-4)
cop(ashamed-6, been-5)
root(ROOT-0, ashamed-6)
aux(have-8, to-7)
xcomp(ashamed-6, have-8)
nsubj(know-10, George-9)
ccomp(have-8, know-10)
advmod(supplied-14, how-11)
nsubj(supplied-14, she-12)
aux(supplied-14, had-13)
advcl(fed-35, supplied-14)
poss(needs-16, his-15)
dobj(supplied-14, needs-16)
mark(lay-19, while-17)
nsubj(lay-19, he-18)
advcl(supplied-14, lay-19)
det(house-22, the-21)
prep_in(lay-19, house-22)
mark(was-26, that-24)
nsubj(was-26, it-25)
ccomp(supplied-14, was-26)
parataxis(supplied-14, was-26)
det(gains-30, the-28)
amod(gains-30, poor-29)
prep_with(was-26, gains-30)
poss(poultry-yard-33, her-32)
prep_of(gains-30, poultry-yard-33)
nsubj(fed-35, she-34)
ccomp(know-10, fed-35)
dobj(fed-35, him-36)

(ROOT
  (SQ (VBD Did)
    (NP (PRP it))
    (VP
      (VP (VB improve)
        (NP (PRP$ her) (JJ moral) (NN position))
        (PP (IN toward)
          (NP (NN money)))
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBD regarded)
              (NP (NN commerce))
              (PP (IN with)
                (NP (NN contempt)))))))
      (PRN (: --)
        (NP
          (NP (DT a) (NN rudiment))
          (PP (IN of)
            (NP
              (NP (DT the) (NN time))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (NNS nobles))
                  (VP (VBD treated)
                    (NP (NNS merchants))
                    (PP (IN as)
                      (NP (DT a) (NN cottager))))))))))
      (NP (PRP$ his) (NNS bees)))
    (. ?)))

aux(improve-3, Did-1)
nsubj(improve-3, it-2)
root(ROOT-0, improve-3)
poss(position-6, her-4)
amod(position-6, moral-5)
dobj(improve-3, position-6)
prep_toward(improve-3, money-8)
mark(regarded-11, that-9)
nsubj(regarded-11, she-10)
ccomp(improve-3, regarded-11)
dobj(regarded-11, commerce-12)
prep_with(regarded-11, contempt-14)
det(rudiment-17, a-16)
dep(improve-3, rudiment-17)
det(time-20, the-19)
prep_of(rudiment-17, time-20)
tmod(treated-23, time-20)
advmod(treated-23, when-21)
nsubj(treated-23, nobles-22)
rcmod(time-20, treated-23)
dobj(treated-23, merchants-24)
det(cottager-27, a-26)
prep_as(treated-23, cottager-27)
poss(bees-29, his-28)
dobj(improve-3, bees-29)

(ROOT
  (S
    (NP
      (NP (NNP George) (POS 's))
      (NN situation))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ subordinate) (NN one))
        (PP (IN in)
          (NP
            (NP (DT a) (NN house))
            (PP (IN of)
              (NP
                (NP (JJ large) (NNS dealings))
                (PP (IN in)
                  (NP (NNP Wall) (NNP Street)))))))))
    (. .)))

poss(situation-3, George-1)
nsubj(one-7, situation-3)
cop(one-7, was-4)
det(one-7, a-5)
amod(one-7, subordinate-6)
root(ROOT-0, one-7)
det(house-10, a-9)
prep_in(one-7, house-10)
amod(dealings-13, large-12)
prep_of(house-10, dealings-13)
nn(Street-16, Wall-15)
prep_in(dealings-13, Street-16)

(ROOT
  (NP (NNP CHAPTER) (NNP XIII) (. .)))

nn(XIII-2, CHAPTER-1)
root(ROOT-0, XIII-2)

(ROOT
  (S
    (VP (VB DAWTIE))
    (. .)))

root(ROOT-0, DAWTIE-1)

(ROOT
  (SQ (VBZ Is) (RB not)
    (NP (DT the) (NNP Church))
    (ADJP (JJ supposed))
    (S
      (VP (TO to)
        (VP (VB be)
          (VP (VBN made)
            (PRT (RP up))
            (PP (IN of)
              (NP
                (NP (NNP God) (POS 's))
                (NN elect)))))))
    (. ?)))

cop(supposed-5, Is-1)
neg(supposed-5, not-2)
det(Church-4, the-3)
nsubj(supposed-5, Church-4)
root(ROOT-0, supposed-5)
aux(made-8, to-6)
auxpass(made-8, be-7)
dep(supposed-5, made-8)
prt(made-8, up-9)
poss(elect-13, God-11)
prep_of(made-8, elect-13)

(ROOT
  (S (CC and)
    (ADVP (RB yet))
    (NP
      (NP (JJS most))
      (PP (IN of)
        (NP (PRP$ my) (NNS readers))))
    (VP (VBP find)
      (S
        (NP (PRP it))
        (ADJP (JJ hard)
          (S
            (VP (TO to)
              (VP (VB believe)
                (SBAR
                  (SBAR
                    (S
                      (NP (EX there))
                      (VP (MD should)
                        (VP (VB be)
                          (NP
                            (NP (CD three) (NNS persons))
                            (, ,)
                            (ADJP (RB so) (VBN related))
                            (, ,)
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP
                                  (VP (VBD agreed)
                                    (S
                                      (VP
                                        (VP (TO to)
                                          (VP (VB ask)
                                            (PP (IN of)
                                              (NP (NNP God)))))
                                        (, ,)
                                        (CC and)
                                        (VP (TO to)
                                          (VP (VB ask)
                                            (NP (DT neither) (NNS riches)))))))
                                  (CC nor)
                                  (VP (VBP love))))))))))
                  (, ,)
                  (CC but)
                  (SBAR (IN that)
                    (S
                      (NP (NNP God))
                      (VP (MD should)
                        (VP (VB take)
                          (NP (PRP$ His) (JJ own) (NN way))
                          (PP (IN with)
                            (NP (PRP them)))))))))))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (DT the) (NNP Father))
          (VP (MD should)
            (VP (VB work)
              (NP (PRP$ His) (NN will))
              (PP (IN in)
                (NP (PRP them)))
              (, ,)
              (SBAR (IN that)
                (S
                  (NP (PRP He))
                  (VP (MD would)
                    (VP
                      (VP (VB teach)
                        (NP (PRP them))
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP He))
                            (VP (VBD wanted)
                              (PP (IN of)
                                (NP (PRP them)))))))
                      (, ,)
                      (CC and)
                      (VP (VB help)
                        (S
                          (NP (PRP them))
                          (VP (TO to)
                            (VP (VB do)
                              (NP (PRP it)))))))))))))))
    (. !)))

cc(find-7, and-1)
advmod(find-7, yet-2)
nsubj(find-7, most-3)
poss(readers-6, my-5)
prep_of(most-3, readers-6)
root(ROOT-0, find-7)
nsubj(hard-9, it-8)
nsubj(believe-11, it-8)
xcomp(find-7, hard-9)
aux(believe-11, to-10)
xcomp(hard-9, believe-11)
expl(persons-16, there-12)
aux(persons-16, should-13)
cop(persons-16, be-14)
num(persons-16, three-15)
ccomp(believe-11, persons-16)
nsubj(agreed-22, persons-16)
nsubj(love-34, persons-16)
advmod(related-19, so-18)
amod(persons-16, related-19)
rcmod(persons-16, agreed-22)
aux(ask-24, to-23)
ccomp(agreed-22, ask-24)
prep_of(ask-24, God-26)
aux(ask-30, to-29)
ccomp(agreed-22, ask-30)
conj_and(ask-24, ask-30)
det(riches-32, neither-31)
dobj(ask-30, riches-32)
rcmod(persons-16, love-34)
conj_nor(agreed-22, love-34)
mark(take-40, that-37)
nsubj(take-40, God-38)
aux(take-40, should-39)
ccomp(believe-11, take-40)
conj_but(persons-16, take-40)
nsubj(agreed-22, take-40)
poss(way-43, His-41)
amod(way-43, own-42)
dobj(take-40, way-43)
prep_with(take-40, them-45)
mark(work-51, that-47)
det(Father-49, the-48)
nsubj(work-51, Father-49)
aux(work-51, should-50)
ccomp(find-7, work-51)
poss(will-53, His-52)
dobj(work-51, will-53)
prep_in(work-51, them-55)
mark(teach-60, that-57)
nsubj(teach-60, He-58)
nsubj(help-69, He-58)
aux(teach-60, would-59)
ccomp(work-51, teach-60)
dobj(teach-60, them-61)
dobj(wanted-64, what-62)
nsubj(wanted-64, He-63)
dep(teach-60, wanted-64)
prep_of(wanted-64, them-66)
ccomp(work-51, help-69)
conj_and(teach-60, help-69)
dobj(help-69, them-70)
nsubj(do-72, them-70)
aux(do-72, to-71)
xcomp(help-69, do-72)
dobj(do-72, it-73)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Church))
      (VP (VBZ is)
        (NP
          (NP (NNP God) (POS 's))
          (NN elect))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB yet))
      (NP (PRP you))
      (VP (MD can) (RB not)
        (VP (VB believe)
          (PP (IN in)
            (NP (CD three) (JJ holy) (NNS children))))))
    (. !)))

det(Church-2, The-1)
nsubj(elect-6, Church-2)
cop(elect-6, is-3)
poss(elect-6, God-4)
root(ROOT-0, elect-6)
advmod(believe-13, yet-9)
nsubj(believe-13, you-10)
aux(believe-13, can-11)
neg(believe-13, not-12)
conj_and(elect-6, believe-13)
num(children-17, three-15)
amod(children-17, holy-16)
prep_in(believe-13, children-17)

(ROOT
  (FRAG
    (NP (NNP Do))
    (SBAR
      (S
        (NP (PRP you))
        (VP (VBP say))))
    (: :) (`` ``)
    (S
      (PP (IN Because))
      (NP (PRP they))
      (VP (VBP are)
        (VP (VBN represented)
          (PP (IN as)
            (S
              (VP (VBG beginning)
                (S
                  (VP (TO to)
                    (VP (VB obey)
                      (ADJP (RB so) (JJ young)))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-1)
nsubj(say-3, you-2)
dep(Do-1, say-3)
prep(represented-9, Because-6)
nsubjpass(represented-9, they-7)
auxpass(represented-9, are-8)
dep(Do-1, represented-9)
prepc_as(represented-9, beginning-11)
aux(obey-13, to-12)
xcomp(beginning-11, obey-13)
advmod(young-15, so-14)
acomp(obey-13, young-15)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP I))
        (VP (VBP answer)))
      (, ,))
    (`` ``)
    (NP (EX there))
    (VP (MD can)
      (VP (VB be)
        (NP
          (NP
            (NP (DT no) (NN principle))
            (, ,)
            (NP
              (NP (RB only) (DT an)
                (ADJP (JJ occasional)
                  (CC and)
                  (JJ arbitrary))
                (NN exercise))
              (PP (IN of)
                (NP (JJ spiritual) (NN power))))
            (, ,))
          (PP
            (PP (IN in)
              (NP
                (NP (DT the) (NN perfecting))
                (PP (IN of)
                  (NP
                    (NP (NN praise))
                    (PP (RB out) (IN of)
                      (NP
                        (NP (DT the) (NN mouth))
                        (PP (IN of)
                          (NP (NNS babes)
                            (CC and)
                            (NNS sucklings)))))))))
            (, ,)
            (CC or)
            (PP (IN in)
              (NP
                (NP (DT the) (NN preference))
                (PP (IN of)
                  (NP (PRP them)))))))
        (PP (TO to)
          (NP
            (NP (DT the)
              (ADJP (JJ wise)
                (CC and)
                (JJ prudent)))
            (PP (IN as)
              (NP
                (NP (DT the) (NNS recipients))
                (PP (IN of)
                  (NP (JJ divine) (NN revelation)))))))))
    (. .) ('' '')))

advmod(principle-13, Then-2)
nsubj(answer-6, I-5)
parataxis(principle-13, answer-6)
expl(principle-13, there-9)
aux(principle-13, can-10)
cop(principle-13, be-11)
neg(principle-13, no-12)
root(ROOT-0, principle-13)
advmod(exercise-20, only-15)
det(exercise-20, an-16)
amod(exercise-20, occasional-17)
conj_and(occasional-17, arbitrary-19)
amod(exercise-20, arbitrary-19)
appos(principle-13, exercise-20)
amod(power-23, spiritual-22)
prep_of(exercise-20, power-23)
det(perfecting-27, the-26)
prep_in(principle-13, perfecting-27)
prep_of(perfecting-27, praise-29)
det(mouth-33, the-32)
prep_out_of(praise-29, mouth-33)
prep_of(mouth-33, babes-35)
prep_of(mouth-33, sucklings-37)
conj_and(babes-35, sucklings-37)
det(preference-42, the-41)
prep_in(principle-13, preference-42)
conj_or(perfecting-27, preference-42)
prep_of(preference-42, them-44)
det(wise-47, the-46)
prep_to(principle-13, wise-47)
prep_to(principle-13, prudent-49)
conj_and(wise-47, prudent-49)
det(recipients-52, the-51)
prep_as(wise-47, recipients-52)
amod(revelation-55, divine-54)
prep_of(recipients-52, revelation-55)

(ROOT
  (S
    (NP (NNP Dawtie))
    (ADVP (RB never))
    (VP
      (VP (VBD said)
        (NP (RB much)))
      (, ,)
      (CC but)
      (VP (VBD tried)
        (NP (DT the) (JJR more))))
    (. .)))

nsubj(said-3, Dawtie-1)
nsubj(tried-7, Dawtie-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
dobj(said-3, much-4)
conj_but(said-3, tried-7)
det(more-9, the-8)
dobj(tried-7, more-9)

(ROOT
  (S
    (PP (IN With)
      (NP (NNS heartiness)))
    (NP (PRP she))
    (VP (VBD accepted)
      (SBAR
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD conclusions)
              (SBAR
                (S
                  (NP (DT the) (NNS brothers))
                  (VP (VBD came)
                    (PP (TO to))
                    (, ,)
                    (SBAR
                      (ADVP (RB so) (RB far))
                      (IN as)
                      (S
                        (NP (PRP she))
                        (VP (VBD understood)
                          (NP (PRP them)))))))))))
        (: --)
        (CC and)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD was)
              (ADJP (JJ practical)
                (SBAR
                  (S
                    (NP (PRP she))
                    (VP (VBD understood)
                      (SBAR
                        (FRAG
                          (CONJP (RB as) (RB well) (IN as))
                          (NP (PRP they)))))
                    (: ;)
                    (SBAR (IN for)
                      (S
                        (NP (PRP she))
                        (VP (VBD had)
                          (NP
                            (NP
                              (PP (IN in)
                                (NP (PRP$ her) (NN heart)))
                              (NP (DT the) (NN spirit))
                              (PP (IN of)
                                (NP
                                  (NP (DT that) (NNP Son))
                                  (PP (IN of)
                                    (NP (NN Man)))
                                  (SBAR
                                    (WHNP (WP who))
                                    (S
                                      (VP (VBD chose)
                                        (NP (DT a) (NN child)
                                          (S
                                            (VP (TO to)
                                              (VP (VB represent)
                                                (NP (PRP Him))))))))))))
                            (CC and)
                            (NP (PRP$ His) (NN Father))))))))))))))
    (. .)))

prep_with(accepted-4, heartiness-2)
nsubj(accepted-4, she-3)
root(ROOT-0, accepted-4)
nsubj(conclusions-6, what-5)
dep(accepted-4, conclusions-6)
det(brothers-8, the-7)
nsubj(came-9, brothers-8)
ccomp(conclusions-6, came-9)
prep(came-9, to-10)
advmod(far-13, so-12)
advmod(understood-16, far-13)
mark(understood-16, as-14)
nsubj(understood-16, she-15)
advcl(came-9, understood-16)
dobj(understood-16, them-17)
nsubj(practical-22, what-20)
cop(practical-22, was-21)
dep(accepted-4, practical-22)
conj_and(conclusions-6, practical-22)
nsubj(understood-24, she-23)
ccomp(practical-22, understood-24)
cc(they-28, well-26)
dep(understood-24, they-28)
mark(had-32, for-30)
nsubj(had-32, she-31)
parataxis(understood-24, had-32)
poss(heart-35, her-34)
prep_in(spirit-37, heart-35)
det(spirit-37, the-36)
dobj(had-32, spirit-37)
det(Son-40, that-39)
prep_of(spirit-37, Son-40)
nsubj(chose-44, Son-40)
prep_of(Son-40, Man-42)
rcmod(Son-40, chose-44)
det(child-46, a-45)
dobj(chose-44, child-46)
aux(represent-48, to-47)
vmod(child-46, represent-48)
dobj(represent-48, Him-49)
poss(Father-52, His-51)
dobj(had-32, Father-52)
conj_and(spirit-37, Father-52)

(ROOT
  (S
    (PP (IN As)
      (PP (TO to)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP they))
            (VP (VBD heard)
              (PP (IN at)
                (NP (NN church))))))))
    (, ,)
    (NP (PRP$ their) (NNS minds))
    (VP (VBD were)
      (ADVP (RB so))
      (VP
        (VP (VBN set)
          (PP (IN on)
            (S
              (VP (VBG doing)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP they))
                    (VP (VBD found)
                      (PP (IN in)
                        (NP (DT the) (NNP Gospel)))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (VBD passed)
                            (PRT (RP over))
                            (NP (PRP them))
                            (PP (IN without)
                              (S
                                (ADVP (RB even))
                                (VP (VBG rousing)
                                  (NP (PRP$ their) (NN intellect)))))))))))))))
        (, ,)
        (CC and)
        (ADVP (RB so))
        (VP (VBN vanished)
          (PP (IN without)
            (S
              (VP (VBG doing)
                (NP (DT any) (NN hurt))))))))
    (. .)))

prepc_as_to(set-13, to-2)
dobj(heard-5, what-3)
nsubj(heard-5, they-4)
pcomp(set-13, heard-5)
prep_at(heard-5, church-7)
poss(minds-10, their-9)
nsubj(set-13, minds-10)
nsubj(vanished-36, minds-10)
aux(set-13, were-11)
advmod(set-13, so-12)
root(ROOT-0, set-13)
prepc_on(set-13, doing-15)
dobj(found-18, what-16)
nsubj(found-18, they-17)
ccomp(doing-15, found-18)
det(Gospel-21, the-20)
prep_in(found-18, Gospel-21)
mark(passed-25, that-23)
nsubj(passed-25, it-24)
ccomp(found-18, passed-25)
prt(passed-25, over-26)
dobj(passed-25, them-27)
advmod(rousing-30, even-29)
prepc_without(passed-25, rousing-30)
poss(intellect-32, their-31)
dobj(rousing-30, intellect-32)
conj_and(set-13, vanished-36)
prepc_without(vanished-36, doing-38)
det(hurt-40, any-39)
dobj(doing-38, hurt-40)

(ROOT
  (S
    (S
      (VP (VBN Tuned)
        (PP (TO to)
          (NP (DT the) (NN truth)))
        (PP (IN by)
          (NP (NN obedience)))))
    (, ,)
    (NP
      (NP (DT no) (NN falsehood))
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBD heard)
            (PP (IN from)
              (NP
                (NP (DT the) (NN pulpit) (NNS partisans))
                (PP (IN of)
                  (NP (NNP God)))))))))
    (VP (MD could)
      (VP (VB make)
        (NP (DT a) (NN chord) (NN vibrate))
        (PP (IN in)
          (NP (NN response)))))
    (. .)))

vmod(make-19, Tuned-1)
det(truth-4, the-3)
prep_to(Tuned-1, truth-4)
agent(Tuned-1, obedience-6)
neg(falsehood-9, no-8)
nsubj(make-19, falsehood-9)
nsubj(heard-11, they-10)
rcmod(falsehood-9, heard-11)
det(partisans-15, the-13)
nn(partisans-15, pulpit-14)
prep_from(heard-11, partisans-15)
prep_of(partisans-15, God-17)
aux(make-19, could-18)
root(ROOT-0, make-19)
det(vibrate-22, a-20)
nn(vibrate-22, chord-21)
dobj(make-19, vibrate-22)
prep_in(make-19, response-24)

(ROOT
  (S
    (NP (NNP Dawtie))
    (ADVP (RB indeed))
    (VP (VBD heard)
      (NP
        (NP (NN nothing))
        (PP (CC but)
          (NP
            (NP (DT the) (NN good))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD was)
                  (VP
                    (VP (VBN mingled)
                      (PP (IN with)
                        (NP (DT the) (NN falsehood))))
                    (, ,)
                    (CC and)
                    (VP
                      (ADJP (JJ shone)
                        (PP (IN like)
                          (NP (DT a) (NN lantern))))
                      (PP (IN through)
                        (NP (DT a) (JJ thick) (NN fog))))))))))))
    (. .)))

nsubj(heard-3, Dawtie-1)
advmod(heard-3, indeed-2)
root(ROOT-0, heard-3)
dobj(heard-3, nothing-4)
prep(nothing-4, but-5)
det(good-7, the-6)
pobj(but-5, good-7)
nsubjpass(mingled-10, good-7)
nsubj(shone-16, good-7)
auxpass(mingled-10, was-9)
rcmod(good-7, mingled-10)
det(falsehood-13, the-12)
prep_with(mingled-10, falsehood-13)
rcmod(good-7, shone-16)
conj_and(mingled-10, shone-16)
det(lantern-19, a-18)
prep_like(shone-16, lantern-19)
det(fog-23, a-21)
amod(fog-23, thick-22)
prep_through(shone-16, fog-23)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADJP
        (ADJP (RB little) (JJR more))
        (PP (IN than)
          (NP (DT a) (NN child))))
      (SBAR
        (WHADVP (WRB when))
        (S (, ,)
          (PP (TO to)
            (NP
              (NP (DT the) (NN trouble))
              (PP (IN of)
                (NP (PRP$ her) (NNS parents)))))
          (, ,)
          (NP (PRP she))
          (VP (VBD had)
            (S
              (VP (TO to)
                (VP (VB go)
                  (PRT (RP out))
                  (PP (TO to)
                    (NP (NN service))))))))))
    (. .)))

nsubj(more-4, She-1)
cop(more-4, was-2)
advmod(more-4, little-3)
root(ROOT-0, more-4)
det(child-7, a-6)
prep_than(more-4, child-7)
advmod(had-18, when-8)
det(trouble-12, the-11)
prep_to(had-18, trouble-12)
poss(parents-15, her-14)
prep_of(trouble-12, parents-15)
nsubj(had-18, she-17)
nsubj(go-20, she-17)
advcl(more-4, had-18)
aux(go-20, to-19)
xcomp(had-18, go-20)
prt(go-20, out-21)
prep_to(go-20, service-23)

(ROOT
  (S
    (S
      (NP (DT Every) (JJ half) (NN year))
      (NP (PRP she))
      (VP (VBD came)
        (NP (NN home))
        (PP (IN for)
          (NP (DT a) (NN day)
            (CC or)
            (RB so)))))
    (, ,)
    (CC and)
    (S
      (NP (DT neither))
      (VP
        (VP (VBD feared))
        (CC nor)
        (VP (VBD found)
          (SBAR
            (S
              (NP (DT any) (NN relation))
              (VP (VBD altered)))))))
    (. .)))

det(year-3, Every-1)
amod(year-3, half-2)
tmod(came-5, year-3)
nsubj(came-5, she-4)
root(ROOT-0, came-5)
dobj(came-5, home-6)
det(day-9, a-8)
prep_for(came-5, day-9)
prep_for(came-5, so-11)
advmod(day-9, so-11)
conj_or(day-9, so-11)
nsubj(feared-15, neither-14)
nsubj(found-17, neither-14)
conj_and(came-5, feared-15)
conj_and(came-5, found-17)
conj_nor(feared-15, found-17)
det(relation-19, any-18)
nsubj(altered-20, relation-19)
ccomp(found-17, altered-20)

(ROOT
  (S
    (PP (IN At)
      (NP
        (NP (NN length))
        (PP (IN after)
          (NP
            (NP (JJ several)
              (ADJP (RB closely) (JJ following))
              (NNS changes))
            (, ,)
            (VP (VBN occasioned)
              (PP (IN by)
                (NP
                  (NP (DT no) (NN fault))
                  (PP (IN of)
                    (NP (NNS hers))))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD was)
      (PP (IN without)
        (NP (DT a) (NN place))))
    (. .)))

prep_at(was-17, length-2)
amod(changes-7, several-4)
advmod(following-6, closely-5)
amod(changes-7, following-6)
prep_after(length-2, changes-7)
vmod(changes-7, occasioned-9)
neg(fault-12, no-11)
agent(occasioned-9, fault-12)
prep_of(fault-12, hers-14)
nsubj(was-17, she-16)
root(ROOT-0, was-17)
det(place-20, a-19)
prep_without(was-17, place-20)

(ROOT
  (S
    (S
      (NP (NNP Miss) (NNP Fordyce))
      (VP
        (VP (VBD heard)
          (PP (IN of)
            (NP (PRP it))))
        (, ,)
        (CC and)
        (VP (VBD proposed)
          (PP (TO to)
            (NP (PRP$ her) (NNS parents)))
          (SBAR (IN that)
            (PRN (, ,)
              (SBAR (IN until)
                (S
                  (NP (PRP she))
                  (VP (VBD found)
                    (NP (DT another)))))
              (, ,))
            (S
              (NP (PRP she))
              (VP (MD should)
                (VP (VB help)
                  (NP
                    (NP (NNP Meg))
                    (, ,)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBD was)
                          (VP (VBG growing)
                            (ADJP
                              (ADJP (JJ old))
                              (CC and)
                              (ADJP (RB rather) (JJ blind)))))))))))))))
    (: :)
    (S
      (NP (PRP she))
      (VP (MD would)
        (ADVP
          (ADVP (RB thus))
          (PRN (, ,)
            (S
              (NP (PRP she))
              (VP (VBD said)))
            (, ,)))
        (VP
          (VP (VB go)
            (PP (IN on)
              (S
                (VP (VBG learning)))))
          (, ,)
          (CC and)
          (RB not)
          (VP (VB be)
            (VP (VBG idling)
              (PP (IN at)
                (NP (NN home))))))))
    (. .)))

nn(Fordyce-2, Miss-1)
nsubj(heard-3, Fordyce-2)
nsubj(proposed-8, Fordyce-2)
root(ROOT-0, heard-3)
prep_of(heard-3, it-5)
conj_and(heard-3, proposed-8)
poss(parents-11, her-10)
prep_to(proposed-8, parents-11)
mark(help-21, that-12)
mark(found-16, until-14)
nsubj(found-16, she-15)
dep(help-21, found-16)
dobj(found-16, another-17)
nsubj(help-21, she-19)
aux(help-21, should-20)
ccomp(proposed-8, help-21)
dobj(help-21, Meg-22)
nsubj(growing-26, Meg-22)
aux(growing-26, was-25)
rcmod(Meg-22, growing-26)
acomp(growing-26, old-27)
advmod(blind-30, rather-29)
acomp(growing-26, blind-30)
conj_and(old-27, blind-30)
nsubj(go-39, she-32)
nsubj(idling-46, she-32)
aux(go-39, would-33)
advmod(go-39, thus-34)
nsubj(said-37, she-36)
dep(thus-34, said-37)
parataxis(heard-3, go-39)
prepc_on(go-39, learning-41)
neg(idling-46, not-44)
aux(idling-46, be-45)
parataxis(heard-3, idling-46)
conj_and(go-39, idling-46)
prep_at(idling-46, home-48)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Dawtie) (POS 's))
        (NN mother))
      (VP
        (VP (VBD was) (RB not)
          (ADJP
            (NP (DT a) (RB little))
            (VBN amused)
            (PP (IN at)
              (NP
                (NP (DT the) (NN idea))
                (PP (IN of)
                  (NP
                    (NP (DT any) (CD one) (NNS idling))
                    (PP (IN in)
                      (NP (PRP$ her) (NN house)))))))))
        (, ,)
        (S (RB not)
          (VP (TO to)
            (VP (VB say)
              (NP
                (NP (NNP Dawtie))
                (, ,)
                (SBAR
                  (WHNP (WP whom))
                  (S
                    (NP (NNS idleness))
                    (VP (MD would)
                      (VP (VB have)
                        (VP (VBN tried)
                          (ADVP (RBR harder))
                          (PP (IN than)
                            (NP
                              (NP (DT any) (NN amount))
                              (PP (IN of)
                                (NP (NN work))))))))))))))))
    (: ;)
    (CC but)
    (, ,)
    (SBAR (IN if)
      (S
        (SBAR (RB only) (IN that)
          (S
            (NP (NNP Miss) (NNP Fordyce))
            (VP (MD might)
              (VP (VB see)
                (NP
                  (NP (WP what) (NN sort))
                  (PP (IN of)
                    (NP (NN girl))))))))
        (NP (NNP Dawtie))
        (VP (VBD was) (, ,)
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBN judged)
                (S
                  (NP (PRP it))
                  (ADJP (JJ right)
                    (S
                      (VP (TO to)
                        (VP (VB accept)
                          (NP (PRP$ her) (NN offer)))))))))))))
    (. .)))

poss(mother-3, Dawtie-1)
nsubjpass(amused-8, mother-3)
nsubj(say-22, mother-3)
auxpass(amused-8, was-4)
neg(amused-8, not-5)
det(little-7, a-6)
dep(amused-8, little-7)
root(ROOT-0, amused-8)
det(idea-11, the-10)
prep_at(amused-8, idea-11)
det(idling-15, any-13)
num(idling-15, one-14)
prep_of(idea-11, idling-15)
poss(house-18, her-17)
prep_in(idling-15, house-18)
neg(say-22, not-20)
aux(say-22, to-21)
xcomp(amused-8, say-22)
dobj(say-22, Dawtie-23)
dobj(tried-29, Dawtie-23)
nsubj(tried-29, idleness-26)
aux(tried-29, would-27)
aux(tried-29, have-28)
rcmod(Dawtie-23, tried-29)
advmod(tried-29, harder-30)
det(amount-33, any-32)
prep_than(tried-29, amount-33)
prep_of(amount-33, work-35)
mark(was-51, if-39)
advmod(see-45, only-40)
mark(see-45, that-41)
nn(Fordyce-43, Miss-42)
nsubj(see-45, Fordyce-43)
aux(see-45, might-44)
advcl(was-51, see-45)
det(sort-47, what-46)
dobj(see-45, sort-47)
prep_of(sort-47, girl-49)
nsubj(was-51, Dawtie-50)
conj_but(amused-8, was-51)
nsubj(judged-54, she-53)
ccomp(was-51, judged-54)
nsubj(right-56, it-55)
nsubj(accept-58, it-55)
xcomp(judged-54, right-56)
aux(accept-58, to-57)
xcomp(right-56, accept-58)
poss(offer-60, her-59)
dobj(accept-58, offer-60)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had) (RB not)
      (VP (VBN been)
        (PP (IN at)
          (NP (NNP Potlurg)))
        (NP (DT a) (NN week))
        (SBAR (IN before)
          (S
            (NP (NNP Meg))
            (VP (VBD began)
              (S
                (VP (TO to)
                  (VP (VB complain)
                    (SBAR (IN that)
                      (S
                        (NP (PRP she))
                        (VP (VBD did) (RB not)
                          (VP (VB leave)
                            (NP (NN work))
                            (ADVP (RB enough)
                              (S
                                (VP (TO to)
                                  (VP (VB keep)
                                    (S
                                      (NP (PRP her))
                                      (ADJP (JJ warm)))))))))))))))))))
    (. .)))

nsubj(week-8, She-1)
aux(week-8, had-2)
neg(week-8, not-3)
cop(week-8, been-4)
prep_at(week-8, Potlurg-6)
det(week-8, a-7)
root(ROOT-0, week-8)
mark(began-11, before-9)
nsubj(began-11, Meg-10)
nsubj(complain-13, Meg-10)
advcl(week-8, began-11)
aux(complain-13, to-12)
xcomp(began-11, complain-13)
mark(leave-18, that-14)
nsubj(leave-18, she-15)
aux(leave-18, did-16)
neg(leave-18, not-17)
ccomp(complain-13, leave-18)
dobj(leave-18, work-19)
advmod(leave-18, enough-20)
aux(keep-22, to-21)
dep(enough-20, keep-22)
nsubj(warm-24, her-23)
xcomp(keep-22, warm-24)

(ROOT
  (S
    (S
      (ADVP (DT No) (NN doubt))
      (NP (PRP it))
      (VP (VBD gave)
        (NP (PRP$ her) (NN time))
        (PP (IN for)
          (NP (PRP$ her) (NN book)))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP$ her) (NNS eyes))
        (VP (VBD were) (RB not)
          (ADJP (RB so) (JJ good))
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (VBD used)
                (S
                  (VP (TO to)
                    (VP (VB be)))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (VBD was)
          (ADJP (JJ apt)
            (S
              (VP (TO to)
                (VP
                  (VP (VB fall)
                    (ADJP (RB asleep))
                    (PP (IN over)
                      (NP (PRP it))))
                  (, ,)
                  (CC and)
                  (VP (VB catch)
                    (ADJP (JJ cold))))))))))
    (. !)))

neg(doubt-2, No-1)
advmod(gave-4, doubt-2)
nsubj(gave-4, it-3)
root(ROOT-0, gave-4)
poss(time-6, her-5)
dobj(gave-4, time-6)
poss(book-9, her-8)
prep_for(gave-4, book-9)
poss(eyes-13, her-12)
nsubj(good-17, eyes-13)
cop(good-17, were-14)
neg(good-17, not-15)
advmod(good-17, so-16)
conj_but(gave-4, good-17)
mark(used-20, as-18)
nsubj(used-20, they-19)
nsubj(be-22, they-19)
advcl(good-17, used-20)
aux(be-22, to-21)
xcomp(used-20, be-22)
nsubj(apt-27, she-25)
nsubj(fall-29, she-25)
nsubj(catch-35, she-25)
cop(apt-27, was-26)
conj_but(gave-4, apt-27)
conj_and(good-17, apt-27)
aux(fall-29, to-28)
xcomp(apt-27, fall-29)
acomp(fall-29, asleep-30)
prep_over(fall-29, it-32)
xcomp(apt-27, catch-35)
conj_and(fall-29, catch-35)
acomp(catch-35, cold-36)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP$ her) (NN mistress))
        (VP (VBD proposed)
          (S
            (VP (TO to)
              (VP (VB send)
                (NP (PRP her))
                (ADVP (RB away))))))))
    (, ,)
    (S
      (NP (PRP she))
      (VP (MD would) (RB not)
        (VP (VB hear)
          (PP (IN of)
            (NP (PRP it))))))
    (IN So)
    (S
      (NP
        (NP (NNP Alexa))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD had)
              (VP (VBN begun)
                (S
                  (VP (TO to)
                    (VP (VB take)
                      (NP
                        (NP (DT an) (NN interest))
                        (PP (IN in)
                          (NP (PRP her)))))))))))
        (, ,))
      (VP (VBD set)
        (S
          (NP (PRP her))
          (VP (TO to)
            (VP (VB do)
              (NP
                (NP (NNS things))
                (SBAR
                  (S
                    (NP (PRP she))
                    (VP
                      (VP (VBD had)
                        (NP
                          (NP (NN hitherto))
                          (VP (VBN done)
                            (NP (PRP herself)))))
                      (, ,)
                      (CC and)
                      (VP (VBD began)
                        (S
                          (VP (TO to)
                            (VP (VB teach)
                              (NP (PRP$ her) (JJ other) (NNS things)))))))))))))))
    (. .)))

cc(hear-14, But-1)
advmod(proposed-5, when-2)
poss(mistress-4, her-3)
nsubj(proposed-5, mistress-4)
nsubj(send-7, mistress-4)
advcl(hear-14, proposed-5)
aux(send-7, to-6)
xcomp(proposed-5, send-7)
dobj(send-7, her-8)
advmod(send-7, away-9)
nsubj(hear-14, she-11)
aux(hear-14, would-12)
neg(hear-14, not-13)
root(ROOT-0, hear-14)
prep_of(hear-14, it-16)
dep(hear-14, So-17)
nsubj(begun-22, Alexa-18)
nsubj(take-24, Alexa-18)
nsubj(set-30, Alexa-18)
aux(begun-22, had-21)
rcmod(Alexa-18, begun-22)
aux(take-24, to-23)
xcomp(begun-22, take-24)
det(interest-26, an-25)
dobj(take-24, interest-26)
prep_in(interest-26, her-28)
parataxis(hear-14, set-30)
dobj(set-30, her-31)
nsubj(do-33, her-31)
aux(do-33, to-32)
xcomp(set-30, do-33)
dobj(do-33, things-34)
nsubj(had-36, she-35)
nsubj(began-42, she-35)
nsubj(teach-44, she-35)
rcmod(things-34, had-36)
dobj(had-36, hitherto-37)
vmod(hitherto-37, done-38)
dobj(done-38, herself-39)
rcmod(things-34, began-42)
conj_and(had-36, began-42)
aux(teach-44, to-43)
xcomp(began-42, teach-44)
poss(things-47, her-45)
amod(things-47, other-46)
dobj(teach-44, things-47)

(ROOT
  (S
    (S
      (SBAR (IN Before)
        (S
          (NP (CD three) (NNS months))
          (VP (VBD were)
            (ADJP (RP over)))))
      (, ,)
      (NP (PRP she))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN necessity))
          (PP (IN in)
            (NP (DT the) (NN house))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (TO to)
          (VP (VB part)
            (PP (IN with)
              (NP (NNP Dawtie))))))
      (VP (VBD seemed)
        (ADJP (JJ impossible))))
    (. .)))

mark(over-5, Before-1)
num(months-3, three-2)
nsubj(over-5, months-3)
cop(over-5, were-4)
advcl(necessity-10, over-5)
nsubj(necessity-10, she-7)
cop(necessity-10, was-8)
det(necessity-10, a-9)
root(ROOT-0, necessity-10)
det(house-13, the-12)
prep_in(necessity-10, house-13)
aux(part-17, to-16)
csubj(seemed-20, part-17)
prep_with(part-17, Dawtie-19)
conj_and(necessity-10, seemed-20)
acomp(seemed-20, impossible-21)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN place))
        (PP (IN about)
          (NP (DT that) (NN time))))
      (VP (VBG turning)
        (PRT (RP up))))
    (PRN (, ,)
      (NP (NNP Alexa))
      (VP
        (ADVP (IN at) (RB once))
        (VBD offered)
        (NP (PRP$ her) (NNS wages)))
      (, ,))
    (CC and)
    (S (IN so)
      (NP (NNP Dawtie))
      (VP (VBD became)
        (NP
          (NP (DT an) (JJ integral) (NN portion))
          (PP (IN of)
            (NP
              (NP (DT the) (NN laird) (POS 's))
              (JJ modest) (NN household))))))
    (. .)))

det(place-2, A-1)
nsubj(turning-6, place-2)
det(time-5, that-4)
prep_about(place-2, time-5)
root(ROOT-0, turning-6)
prt(turning-6, up-7)
nsubj(offered-12, Alexa-9)
advmod(offered-12, at-10)
advmod(at-10, once-11)
dep(turning-6, offered-12)
poss(wages-14, her-13)
dobj(offered-12, wages-14)
dep(became-19, so-17)
nsubj(became-19, Dawtie-18)
conj_and(turning-6, became-19)
det(portion-22, an-20)
amod(portion-22, integral-21)
xcomp(became-19, portion-22)
det(laird-25, the-24)
poss(household-28, laird-25)
amod(household-28, modest-27)
prep_of(portion-22, household-28)

(ROOT
  (SINV
    (S
      (NP (NNP The))
      (VP (VBD laird)
        (NP (PRP himself))
        (PP (IN at)
          (NP (NN length)))))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB trust)
            (NP (PRP her))
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (ADVP (RB never))
                  (VP (VBN trusted)
                    (NP (NN servant))
                    (, ,)
                    (SBAR (IN for)
                      (S
                        (NP (PRP he))
                        (VP (VBD taught)
                          (NP (PRP her))
                          (PP (TO to)
                            (NP (NN dust))))))))))))))
    (NP
      (NP (PRP$ his) (JJ precious) (NNS books))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (VP
            (VP (VBD hitherto)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN done)
                      (NP (PRP himself)))))))
            (, ,)
            (CC but)
            (VP
              (ADVP (IN of) (RB late))
              (VBD had)
              (VP (VBN shrunk)
                (PP (IN from))
                (, ,)
                (S
                  (VP (VBG finding)
                    (NP
                      (ADJP
                        (ADJP
                          (NP
                            (NP
                              (QP (RB not) (DT a) (JJ few)))
                            (PP (IN of)
                              (NP (PRP them))))
                          (JJR worse))
                        (PP (IN than)
                          (NP (NNP Pandora-boxes))))
                      (, ,)
                      (ADJP (JJ liberating))
                      (NN asthma))
                    (PP (IN at)
                      (NP (DT the) (JJ merest) (NN unclosing)))))))))))
    (. .)))

nsubj(laird-2, The-1)
dep(began-6, laird-2)
dobj(laird-2, himself-3)
prep_at(laird-2, length-5)
root(ROOT-0, began-6)
aux(trust-8, to-7)
xcomp(began-6, trust-8)
dobj(trust-8, her-9)
mark(trusted-14, as-10)
nsubj(trusted-14, he-11)
aux(trusted-14, had-12)
neg(trusted-14, never-13)
advcl(trust-8, trusted-14)
dobj(trusted-14, servant-15)
mark(taught-19, for-17)
nsubj(taught-19, he-18)
advcl(trusted-14, taught-19)
dobj(taught-19, her-20)
prep_to(taught-19, dust-22)
poss(books-25, his-23)
amod(books-25, precious-24)
nsubj(began-6, books-25)
nsubj(trust-8, books-25)
nsubj(hitherto-28, books-25)
nsubj(shrunk-38, books-25)
prep_from(shrunk-38, books-25)
rcmod(books-25, hitherto-28)
nsubj(done-31, he-29)
aux(done-31, had-30)
ccomp(hitherto-28, done-31)
dobj(done-31, himself-32)
advmod(shrunk-38, of-35)
advmod(of-35, late-36)
aux(shrunk-38, had-37)
rcmod(books-25, shrunk-38)
conj_but(hitherto-28, shrunk-38)
xcomp(shrunk-38, finding-41)
quantmod(few-44, not-42)
quantmod(few-44, a-43)
npadvmod(worse-47, few-44)
prep_of(few-44, them-46)
amod(asthma-52, worse-47)
prep_than(worse-47, Pandora-boxes-49)
amod(asthma-52, liberating-51)
dobj(finding-41, asthma-52)
det(unclosing-56, the-54)
amod(unclosing-56, merest-55)
prep_at(finding-41, unclosing-56)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD was)
      (ADVP (RB now))
      (NP
        (NP (DT a) (JJ grown) (NN woman))
        (, ,)
        (ADJP (JJ bright) (, ,) (JJ gentle) (, ,) (JJ playful))
        (, ,)
        (PP (IN with)
          (NP (VBG loving) (NNS eyes)))
        (, ,)
        (CC and)
        (NP
          (NP (DT a) (JJ constant) (NN overflow))
          (PP (IN of)
            (NP
              (NP (NN tenderness))
              (PP (IN upon)
                (NP
                  (NP (DT any) (NN creature))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD could)
                        (VP (VB receive)
                          (NP (PRP it)))))))))))))
    (. .)))

nsubj(woman-6, Dawtie-1)
nsubj(playful-12, Dawtie-1)
cop(woman-6, was-2)
advmod(woman-6, now-3)
det(woman-6, a-4)
amod(woman-6, grown-5)
root(ROOT-0, woman-6)
amod(playful-12, bright-8)
amod(playful-12, gentle-10)
amod(woman-6, playful-12)
conj_and(woman-6, playful-12)
conj_and(woman-6, with-14)
amod(eyes-16, loving-15)
prep_with(woman-6, eyes-16)
det(overflow-21, a-19)
amod(overflow-21, constant-20)
conj_and(woman-6, overflow-21)
prep_of(overflow-21, tenderness-23)
det(creature-26, any-25)
prep_upon(tenderness-23, creature-26)
nsubj(receive-29, creature-26)
aux(receive-29, could-28)
rcmod(creature-26, receive-29)
dobj(receive-29, it-30)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (NP
        (NP (JJ small)
          (ADJP (CC but)
            (JJ decided)
            (CC and)
            (JJ regular))
          (NNS features))
        (, ,)
        (SBAR
          (WHNP (WP$ whose) (JJ prevailing) (NN expression))
          (S
            (VP (VBD was)
              (NP
                (NP (NN confidence))
                (PRN (: --)
                  (PP (RB not) (IN in)
                    (NP (PRP herself)))
                  (, ,)
                  (SBAR (IN for)
                    (S
                      (NP (PRP she))
                      (VP (VBD was)
                        (ADJP
                          (ADJP (JJ scarce) (JJ conscious))
                          (PP (IN of)
                            (NP (PRP herself))))
                        (PP (RB even) (IN in)
                          (NP
                            (NP (DT the) (NN act))
                            (PP (IN of)
                              (S
                                (VP (VBG denying)
                                  (NP (PRP herself))))))))))
                  (: --))
                (CC but)
                (RB in)
                (NP
                  (NP (DT the) (NN person))
                  (PP (IN upon)
                    (SBAR
                      (WHNP (WP whom))
                      (S
                        (NP (PRP$ her) (JJ trusting) (NNS eyes))
                        (VP (VBD were)
                          (VP (VBN turned)))))))))))))
    (. .)))

nsubj(had-2, She-1)
root(ROOT-0, had-2)
amod(features-8, small-3)
amod(features-8, decided-5)
conj_and(decided-5, regular-7)
amod(features-8, regular-7)
dobj(had-2, features-8)
poss(expression-12, features-8)
amod(expression-12, prevailing-11)
nsubj(confidence-14, expression-12)
cop(confidence-14, was-13)
rcmod(features-8, confidence-14)
neg(conscious-24, not-16)
prep_in(conscious-24, herself-18)
mark(conscious-24, for-20)
nsubj(conscious-24, she-21)
cop(conscious-24, was-22)
amod(conscious-24, scarce-23)
dep(confidence-14, conscious-24)
prep_of(conscious-24, herself-26)
advmod(conscious-24, even-27)
det(act-30, the-29)
prep_in(conscious-24, act-30)
prepc_of(act-30, denying-32)
dobj(denying-32, herself-33)
rcmod(features-8, in-36)
advmod(confidence-14, in-36)
conj_but(confidence-14, in-36)
det(person-38, the-37)
dep(confidence-14, person-38)
dobj(turned-45, whom-40)
poss(eyes-43, her-41)
amod(eyes-43, trusting-42)
nsubjpass(turned-45, eyes-43)
auxpass(turned-45, were-44)
prepc_upon(person-38, turned-45)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (PP (IN in)
        (NP (DT the) (NN world)
          (S
            (VP (TO to)
              (VP
                (VP (VB help))
                (: --)
                (VP
                  (PP (IN with)
                    (NP (DT no) (JJ political) (NN economy)))
                  (PP (IN beyond)
                    (NP
                      (NP (DT the) (NN idea))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (PP (IN for)
                            (NP (NN help)
                              (CC and)
                              (NN nothing)))
                          (ADVP (RB else))
                          (VP (VBD did)
                            (SBAR
                              (S
                                (NP (DT any) (NN one))
                                (VP (VBP exist))))))))))))))))
    (. .)))

nsubj(was-2, She-1)
root(ROOT-0, was-2)
det(world-5, the-4)
prep_in(was-2, world-5)
aux(help-7, to-6)
vmod(world-5, help-7)
dep(help-7, with-9)
neg(economy-12, no-10)
amod(economy-12, political-11)
pobj(with-9, economy-12)
det(idea-15, the-14)
prep_beyond(with-9, idea-15)
nsubj(did-22, idea-15)
prep_for(did-22, help-18)
conj_and(help-18, nothing-20)
prep_for(did-22, nothing-20)
advmod(did-22, else-21)
rcmod(idea-15, did-22)
det(one-24, any-23)
nsubj(exist-25, one-24)
ccomp(did-22, exist-25)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB be)
          (PP (IN as)
            (NP
              (NP (DT the) (NN sun))
              (CC and)
              (NP
                (NP (DT the) (NN rain))
                (CC and)
                (NP (DT the) (NN wind)))))
          (, ,)
          (PP (IN as)
            (NP
              (NP (DT the) (NNS flowers))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD lived)
                    (PP
                      (PP (IN for)
                        (NP (PRP her)))
                      (CC and)
                      (RB not)
                      (PP (IN for)
                        (NP (PRP themselves))))
                    (, ,)
                    (PP (IN as)
                      (NP
                        (NP
                          (NP (DT the) (NN river))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD flowed)))))
                        (, ,)
                        (CC and)
                        (NP
                          (NP (DT the) (NN heather))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD bloomed)
                                (ADJP (JJ lovely))
                                (PP (IN on)
                                  (NP
                                    (NP (DT the) (JJ bare) (NN moor))
                                    (PP (IN in)
                                      (NP (DT the) (NN autumn)))))))))))))))))))
    (, ,)
    (NP (JJ such))
    (VP (VBD was)
      (NP
        (NP (PRP$ her) (NN notion))
        (PP (IN of)
          (NP (VBG being)))))
    (. .)))

aux(be-2, To-1)
advcl(notion-48, be-2)
det(sun-5, the-4)
prep_as(be-2, sun-5)
det(rain-8, the-7)
prep_as(be-2, rain-8)
conj_and(sun-5, rain-8)
det(wind-11, the-10)
conj_and(sun-5, wind-11)
conj_and(rain-8, wind-11)
det(flowers-15, the-14)
prep_as(be-2, flowers-15)
nsubj(lived-17, flowers-15)
rcmod(flowers-15, lived-17)
prep_for(lived-17, her-19)
neg(lived-17, not-21)
prep_for(lived-17, themselves-23)
conj_and(her-19, themselves-23)
det(river-27, the-26)
prep_as(lived-17, river-27)
nsubj(flowed-29, river-27)
rcmod(river-27, flowed-29)
det(heather-33, the-32)
prep_as(lived-17, heather-33)
conj_and(river-27, heather-33)
nsubj(bloomed-35, heather-33)
rcmod(heather-33, bloomed-35)
acomp(bloomed-35, lovely-36)
det(moor-40, the-38)
amod(moor-40, bare-39)
prep_on(bloomed-35, moor-40)
det(autumn-43, the-42)
prep_in(moor-40, autumn-43)
nsubj(notion-48, such-45)
cop(notion-48, was-46)
poss(notion-48, her-47)
root(ROOT-0, notion-48)
prep_of(notion-48, being-50)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP (PRP she))
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP
                  (NP (NN care))
                  (PP (IN of)
                    (NP (PRP herself))))))))))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN falsehood))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB never))
            (VP (VBD entered)
              (NP (PRP$ her) (NN brain)))))))
    (. .)))

mark(had-3, That-1)
nsubj(had-3, she-2)
nsubj(take-5, she-2)
csubj(falsehood-11, had-3)
aux(take-5, to-4)
xcomp(had-3, take-5)
dobj(take-5, care-6)
prep_of(care-6, herself-8)
cop(falsehood-11, was-9)
det(falsehood-11, a-10)
root(ROOT-0, falsehood-11)
nsubj(entered-14, falsehood-11)
neg(entered-14, never-13)
rcmod(falsehood-11, entered-14)
poss(brain-16, her-15)
dobj(entered-14, brain-16)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB do)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP she))
              (VP
                (VP (MD ought))
                (, ,)
                (CC and)
                (RB not)
                (VP (VBP do)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP she))
                      (VP (MD ought) (RB not) (, ,)
                        (VP (VBD was)
                          (ADJP (JJ enough))
                          (PP (IN on)
                            (NP (PRP$ her) (NN part))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP God))
      (VP (MD would)
        (VP (VB do)
          (NP (DT the) (NN rest)))))
    (. !)))

aux(do-2, To-1)
root(ROOT-0, do-2)
dobj(ought-5, what-3)
nsubj(ought-5, she-4)
nsubj(do-9, she-4)
ccomp(do-2, ought-5)
neg(do-9, not-8)
ccomp(do-2, do-9)
conj_and(ought-5, do-9)
dobj(enough-16, what-10)
nsubj(enough-16, she-11)
aux(enough-16, ought-12)
neg(enough-16, not-13)
cop(enough-16, was-15)
ccomp(do-9, enough-16)
poss(part-19, her-18)
prep_on(enough-16, part-19)
nsubj(do-24, God-22)
aux(do-24, would-23)
conj_and(do-2, do-24)
det(rest-26, the-25)
dobj(do-24, rest-26)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD reasoned)
                (ADVP (RB thus))))))))
    (: ;)
    (S
      (PP (TO to)
        (NP (PRP herself)))
      (NP (PRP she))
      (VP (VBD was)
        (ADJP (JJ scarce)
          (NP
            (NP (DT a) (JJ conscious) (NN object))
            (ADVP (IN at) (DT all))))))
    (. .)))

nsubj(say-4, I-1)
aux(say-4, will-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
nsubj(reasoned-6, she-5)
ccomp(say-4, reasoned-6)
advmod(reasoned-6, thus-7)
prep_to(scarce-13, herself-10)
nsubj(scarce-13, she-11)
cop(scarce-13, was-12)
parataxis(say-4, scarce-13)
det(object-16, a-14)
amod(object-16, conscious-15)
dep(scarce-13, object-16)
advmod(object-16, at-17)
pobj(at-17, all-18)

(ROOT
  (S
    (NP
      (NP (DT Both) (NN bodily))
      (CC and)
      (NP (NNP spiritually)))
    (NP (PRP she))
    (VP (VBD was)
      (PP (IN in)
        (NP (DT the) (JJS finest) (NN health))))
    (. .)))

det(bodily-2, Both-1)
nsubj(was-6, bodily-2)
conj_and(bodily-2, spiritually-4)
nsubj(was-6, spiritually-4)
nsubj(was-6, she-5)
root(ROOT-0, was-6)
det(health-10, the-8)
amod(health-10, finest-9)
prep_in(was-6, health-10)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (NN illness))
          (VP (VBD came))))
      (, ,)
      (NP (PRP she))
      (VP (MD would)
        (ADVP (RB perhaps))
        (VP
          (ADVP (RB then))
          (VB discover)
          (NP
            (NP (DT a) (NN self))
            (SBAR
              (WHPP (IN with)
                (WHNP (WDT which)))
              (S
                (NP (PRP she))
                (VP (VBD had)
                  (S
                    (VP (TO to)
                      (VP (VB fight)))))))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB tell))))
    (: ;)
    (CC but)
    (S
      (NP (PRP$ my) (NN impression))
      (VP (VBZ is) (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBD had)
              (ADVP (RB so) (RB long))
              (VP (VBN done)
                (NP (DT the) (JJ true) (NN thing))))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (NN illness))
            (VP (MD would)
              (ADVP (RB only))
              (VP (VB develop)
                (NP
                  (ADJP (JJ unconscious))
                  (NN victory))
                (, ,)
                (S
                  (VP (VBG perfecting)
                    (NP
                      (NP (DT the) (NN devotion))
                      (PP (IN of)
                        (NP (PRP$ her) (JJ simple) (NNS righteousness))))))))))))
    (. .)))

mark(came-3, If-1)
nsubj(came-3, illness-2)
advcl(discover-9, came-3)
nsubj(discover-9, she-5)
aux(discover-9, would-6)
advmod(discover-9, perhaps-7)
advmod(discover-9, then-8)
root(ROOT-0, discover-9)
det(self-11, a-10)
dobj(discover-9, self-11)
prep_with(had-15, self-11)
nsubj(had-15, she-14)
nsubj(fight-17, she-14)
rcmod(self-11, had-15)
aux(fight-17, to-16)
xcomp(had-15, fight-17)
nsubj(tell-22, I-19)
aux(tell-22, can-20)
neg(tell-22, not-21)
conj_but(discover-9, tell-22)
poss(impression-26, my-25)
nsubj(is-27, impression-26)
conj_but(discover-9, is-27)
mark(done-34, that-29)
nsubj(done-34, she-30)
aux(done-34, had-31)
advmod(long-33, so-32)
advmod(done-34, long-33)
ccomp(is-27, done-34)
det(thing-37, the-35)
amod(thing-37, true-36)
dobj(done-34, thing-37)
mark(develop-43, that-39)
nsubj(develop-43, illness-40)
aux(develop-43, would-41)
advmod(develop-43, only-42)
ccomp(is-27, develop-43)
amod(victory-45, unconscious-44)
dobj(develop-43, victory-45)
vmod(develop-43, perfecting-47)
det(devotion-49, the-48)
dobj(perfecting-47, devotion-49)
poss(righteousness-53, her-51)
amod(righteousness-53, simple-52)
prep_of(devotion-49, righteousness-53)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (SBAR (IN because)
        (S
          (NP (PRP we))
          (VP (VBP are)
            (ADJP (JJ selfish))
            (, ,)
            (PP (IN with)
              (NP
                (NP (DT that) (JJS worst) (NNS selfishness))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ incapable)
                        (PP (IN of)
                          (S
                            (VP (VBG recognizing)
                              (NP (PRP itself))
                              (, ,)
                              (S (RB not)
                                (VP (TO to)
                                  (VP (VB say)
                                    (NP (PRP$ its) (JJ own) (NNS loathsomeness)))))))))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP (PRP we))
                          (VP (VBP have)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (VP (VBN made)
                                    (S
                                      (ADJP (RB ill)))))))))))))))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
mark(selfish-6, because-3)
nsubj(selfish-6, we-4)
cop(selfish-6, are-5)
advcl(is-2, selfish-6)
det(selfishness-11, that-9)
amod(selfishness-11, worst-10)
prep_with(selfish-6, selfishness-11)
nsubj(incapable-14, selfishness-11)
cop(incapable-14, is-13)
rcmod(selfishness-11, incapable-14)
prepc_of(incapable-14, recognizing-16)
dobj(recognizing-16, itself-17)
neg(say-21, not-19)
aux(say-21, to-20)
vmod(recognizing-16, say-21)
poss(loathsomeness-24, its-22)
amod(loathsomeness-24, own-23)
dobj(say-21, loathsomeness-24)
mark(have-28, that-26)
nsubj(have-28, we-27)
nsubjpass(made-31, we-27)
ccomp(incapable-14, have-28)
aux(made-31, to-29)
auxpass(made-31, be-30)
xcomp(have-28, made-31)
dep(made-31, ill-32)

(ROOT
  (S
    (NP (DT That))
    (PRN
      (S
        (NP (PRP they))
        (VP (MD may)
          (VP (VB leave)
            (NP
              (NP (DT the) (JJ last) (NNS remnants))
              (PP (IN of)
                (NP (PRP$ their) (NNS selfishness)))))))
      (, ,))
    (VP (VBP are)
      (ADJP
        (NP
          (NP (DT the) (NNS saints))
          (ADVP (PRP themselves)))
        (JJ over-taken))
      (PP (IN by)
        (NP (NN age)
          (CC and)
          (NN death))))
    (. .)))

nsubj(over-taken-16, That-1)
nsubj(leave-4, they-2)
aux(leave-4, may-3)
parataxis(over-taken-16, leave-4)
det(remnants-7, the-5)
amod(remnants-7, last-6)
dobj(leave-4, remnants-7)
poss(selfishness-10, their-9)
prep_of(remnants-7, selfishness-10)
cop(over-taken-16, are-12)
det(saints-14, the-13)
npadvmod(over-taken-16, saints-14)
advmod(saints-14, themselves-15)
root(ROOT-0, over-taken-16)
prep_by(over-taken-16, age-18)
prep_by(over-taken-16, death-20)
conj_and(age-18, death-20)

(ROOT
  (S
    (S
      (NP (NNP Suffering))
      (VP (VBZ does) (RB not)
        (VP (VB cause)
          (NP (DT the) (JJ vile) (NN thing))
          (PP (IN in)
            (NP (PRP us))))))
    (: --)
    (S
      (NP (DT that))
      (VP (VBD was)
        (ADVP (RB there))
        (NP (PDT all) (DT the) (NN time))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ comes)
        (S
          (VP (TO to)
            (VP (VB develop)
              (PP (IN in)
                (NP (PRP us)))
              (NP
                (NP (DT the) (NN knowledge))
                (PP (IN of)
                  (NP (PRP$ its) (NN presence)))))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD may)
              (VP (VB be)
                (NP (NN war))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN knife))
                    (PP (IN between)
                      (NP
                        (NP (PRP us))
                        (CC and)
                        (NP (PRP it))))))))))))
    (. .)))

nsubj(cause-4, Suffering-1)
aux(cause-4, does-2)
neg(cause-4, not-3)
root(ROOT-0, cause-4)
det(thing-7, the-5)
amod(thing-7, vile-6)
dobj(cause-4, thing-7)
prep_in(cause-4, us-9)
nsubj(time-16, that-11)
cop(time-16, was-12)
advmod(time-16, there-13)
predet(time-16, all-14)
det(time-16, the-15)
parataxis(cause-4, time-16)
nsubj(comes-19, it-18)
nsubj(develop-21, it-18)
parataxis(cause-4, comes-19)
aux(develop-21, to-20)
xcomp(comes-19, develop-21)
prep_in(develop-21, us-23)
det(knowledge-25, the-24)
dobj(develop-21, knowledge-25)
poss(presence-28, its-27)
prep_of(knowledge-25, presence-28)
mark(war-34, that-30)
nsubj(war-34, it-31)
aux(war-34, may-32)
cop(war-34, be-33)
ccomp(comes-19, war-34)
det(knife-37, the-36)
prep_to(war-34, knife-37)
prep_between(knife-37, us-39)
prep_between(knife-37, it-41)
conj_and(us-39, it-41)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT no) (NN wonder))
      (SBAR (IN that)
        (S
          (NP (NNP Dawtie))
          (VP (VBD grew)
            (NP
              (NP (JJR more)
                (CC and)
                (JJR more))
              (PP (IN of)
                (NP (DT a) (NN favorite))))
            (PP (IN at)
              (NP (NNP Potlurg)))))))
    (. .)))

nsubj(wonder-4, It-1)
cop(wonder-4, was-2)
neg(wonder-4, no-3)
root(ROOT-0, wonder-4)
mark(grew-7, that-5)
nsubj(grew-7, Dawtie-6)
ccomp(wonder-4, grew-7)
dobj(grew-7, more-8)
dobj(grew-7, more-10)
conj_and(more-8, more-10)
det(favorite-13, a-12)
prep_of(more-8, favorite-13)
prep_at(grew-7, Potlurg-15)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD did) (RB not)
        (VP (VB read)
          (NP (RB much))))
      (, ,)
      (CC but)
      (VP (MD would)
        (VP
          (VP (VB learn)
            (PP (IN by)
              (NP
                (NP (NN heart) (NN anything))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD pleased)
                      (NP (PRP her))))))))
          (, ,)
          (CC and)
          (ADVP (RB then))
          (VP (VB go)
            (S
              (VP (VBG saying)
                (CC or)
                (VBG singing)
                (NP (PRP it))
                (PP (TO to)
                  (NP (PRP herself)))))))))
    (. .)))

nsubj(read-4, She-1)
nsubj(learn-9, She-1)
aux(read-4, did-2)
neg(read-4, not-3)
root(ROOT-0, read-4)
dobj(read-4, much-5)
aux(learn-9, would-8)
conj_but(read-4, learn-9)
nn(anything-12, heart-11)
prep_by(learn-9, anything-12)
nsubj(pleased-14, anything-12)
rcmod(anything-12, pleased-14)
dobj(pleased-14, her-15)
advmod(go-19, then-18)
conj_but(read-4, go-19)
conj_and(learn-9, go-19)
xcomp(go-19, saying-20)
xcomp(go-19, singing-22)
conj_or(saying-20, singing-22)
dobj(saying-20, it-23)
prep_to(saying-20, herself-25)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD had)
        (NP
          (NP (DT the) (NN voice))
          (PP (IN of)
            (NP (DT a) (NN lark))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ her) (NN song))
      (VP (VBD prevented)
        (NP (JJ many) (DT a) (NN search))
        (PP (IN for)
          (NP (PRP her)))))
    (. .)))

nsubj(had-2, She-1)
root(ROOT-0, had-2)
det(voice-4, the-3)
dobj(had-2, voice-4)
det(lark-7, a-6)
prep_of(voice-4, lark-7)
poss(song-11, her-10)
nsubj(prevented-12, song-11)
conj_and(had-2, prevented-12)
amod(search-15, many-13)
det(search-15, a-14)
dobj(prevented-12, search-15)
prep_for(prevented-12, her-17)

(ROOT
  (S
    (PP (IN Against)
      (NP
        (NP (DT that) (`` ``) (NN rain))
        (PP (IN of)
          (NP (NN melody)))))
    (, ,) ('' '')
    (NP
      (NP (RB not) (DT the) (NN pride))
      (PP (IN of)
        (NP
          (NP (DT the) (NN laird))
          (, ,)
          (CC or)
          (NP
            (NP (DT the) (NNS orderliness))
            (PP (IN of)
              (NP (DT the) (NN ex-school-master)))))))
    (VP
      (ADVP (RB ever))
      (VBD put)
      (PRT (RP up))
      (NP
        (NP (DT the) (NN umbrella))
        (PP (IN of)
          (NP (NN rebuke)))))
    (. .)))

det(rain-4, that-2)
prep_against(put-23, rain-4)
prep_of(rain-4, melody-6)
neg(pride-11, not-9)
det(pride-11, the-10)
nsubj(put-23, pride-11)
det(laird-14, the-13)
prep_of(pride-11, laird-14)
det(orderliness-18, the-17)
prep_of(pride-11, orderliness-18)
conj_or(laird-14, orderliness-18)
det(ex-school-master-21, the-20)
prep_of(orderliness-18, ex-school-master-21)
advmod(put-23, ever-22)
root(ROOT-0, put-23)
prt(put-23, up-24)
det(umbrella-26, the-25)
dobj(put-23, umbrella-26)
prep_of(umbrella-26, rebuke-28)

(ROOT
  (S
    (NP (PRP$ Her) (NN singing))
    (VP (VBD was)
      (ADJP
        (ADJP (RB so) (JJ true))
        (PRN (, ,)
          (S
            (VP (VBD came)
              (ADJP (RB so) (JJ clear))
              (PP (IN from)
                (NP
                  (NP (DT the) (NN fountain))
                  (PP (IN of)
                    (NP (NN joy)))))))
          (, ,))
        (CC and)
        (ADJP (RB so) (RB plainly)
          (PP (IN from)
            (NP (DT no) (NN desire)))
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN heard))))))
        (PRN (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD gave)
                (NP (DT no) (NN annoyance)))
              (: ;)
              (SBAR (IN while)
                (S
                  (NP (JJ such))
                  (VP (VBD was)
                    (NP (PRP$ her) (NN sympathy)))))))
          (, ,)))
      (SBAR (IN that) (, ,)
        (S
          (SBAR (IN although)
            (S
              (NP (PRP she))
              (VP (VBD had)
                (ADVP (RB never))
                (VP (VB get)
                  (VP (VBN suffered))))))
          (, ,)
          (NP (PRP you))
          (VP (MD would)
            (PRN (, ,)
              (S
                (VP (TO to)
                  (VP (VB hear)
                    (NP (PRP her))))))
            (VP (VB sing) (`` ``)
              (NP
                (NP (PRP$ My) (NN Nannie) (POS 's))
                (NN awa))
              ('' '))))))
    (. !) ('' '')))

poss(singing-2, Her-1)
nsubj(true-5, singing-2)
cop(true-5, was-3)
advmod(true-5, so-4)
root(ROOT-0, true-5)
dep(true-5, came-7)
advmod(clear-9, so-8)
acomp(came-7, clear-9)
det(fountain-12, the-11)
prep_from(came-7, fountain-12)
prep_of(fountain-12, joy-14)
advmod(plainly-18, so-17)
conj_and(true-5, plainly-18)
neg(desire-21, no-20)
prep_from(plainly-18, desire-21)
aux(heard-24, to-22)
auxpass(heard-24, be-23)
xcomp(plainly-18, heard-24)
mark(gave-28, that-26)
nsubj(gave-28, it-27)
dep(true-5, gave-28)
neg(annoyance-30, no-29)
dobj(gave-28, annoyance-30)
mark(sympathy-36, while-32)
nsubj(sympathy-36, such-33)
cop(sympathy-36, was-34)
poss(sympathy-36, her-35)
parataxis(gave-28, sympathy-36)
mark(sing-53, that-38)
mark(suffered-45, although-40)
nsubjpass(suffered-45, she-41)
aux(suffered-45, had-42)
neg(suffered-45, never-43)
auxpass(suffered-45, get-44)
advcl(sing-53, suffered-45)
nsubj(sing-53, you-47)
aux(sing-53, would-48)
aux(hear-51, to-50)
parataxis(sing-53, hear-51)
dobj(hear-51, her-52)
ccomp(true-5, sing-53)
poss(Nannie-56, My-55)
poss(awa-58, Nannie-56)
dobj(sing-53, awa-58)

(ROOT
  (S
    (VP (VB have)
      (VP
        (VP (VBN thought)
          (NP (PRP her))
          (PP (IN in)
            (NP
              (NP (NN truth))
              (PP (NN mourning)
                (NP (DT an) (JJ absent) (NN lover))))))
        (, ,)
        (CC and)
        (VP
          (ADJP (JJ familiar))
          (PP (IN with)
            (NP
              (NP (DT every) (NN pang))
              (PP (IN of)
                (NP (NN heart-privation))))))))
    (. .)))

aux(thought-2, have-1)
root(ROOT-0, thought-2)
dobj(thought-2, her-3)
prep_in(thought-2, truth-5)
prep(truth-5, mourning-6)
det(lover-9, an-7)
amod(lover-9, absent-8)
dep(mourning-6, lover-9)
conj_and(thought-2, familiar-12)
det(pang-15, every-14)
prep_with(familiar-12, pang-15)
prep_of(pang-15, heart-privation-17)

(ROOT
  (S
    (NP
      (NP (PRP$ Her) (NN cleanliness))
      (, ,)
      (NP
        (NP (JJ clean) (RB even))
        (PP (IN of)
          (NP (PRP$ its) (JJ own) (NN show))))
      (, ,))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ heavenly) (NN purity))
        (: ;)
        (SBAR (IN while)
          (S
            (ADVP (RB so) (RB gently))
            (VP (VBD was)
              (NP
                (NP (PDT all) (PRP$ her) (NN spiriting))
                (VP (VBN done) (, ,)
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT the) (JJ very) (NN idea))
                        (PP (IN of)
                          (NP (NNS fuss))))
                      (VP (VBD died)
                        (PP (IN in)
                          (NP
                            (NP (DT the) (NN presence))
                            (PP (IN of)
                              (NP (PRP$ her) (NN labor)))))))))))))))
    (. .)))

poss(cleanliness-2, Her-1)
nsubj(purity-14, cleanliness-2)
amod(even-5, clean-4)
appos(cleanliness-2, even-5)
poss(show-9, its-7)
amod(show-9, own-8)
prep_of(even-5, show-9)
cop(purity-14, was-11)
det(purity-14, a-12)
amod(purity-14, heavenly-13)
root(ROOT-0, purity-14)
mark(spiriting-22, while-16)
advmod(gently-18, so-17)
advmod(spiriting-22, gently-18)
cop(spiriting-22, was-19)
predet(spiriting-22, all-20)
poss(spiriting-22, her-21)
dep(purity-14, spiriting-22)
vmod(spiriting-22, done-23)
mark(died-31, that-25)
det(idea-28, the-26)
amod(idea-28, very-27)
nsubj(died-31, idea-28)
prep_of(idea-28, fuss-30)
ccomp(done-23, died-31)
det(presence-34, the-33)
prep_in(died-31, presence-34)
poss(labor-37, her-36)
prep_of(presence-34, labor-37)

(ROOT
  (S
    (S
      (PP (TO To)
        (NP (DT the) (NN self-centered)))
      (NP (PDT such) (DT a) (NN person))
      (VP
        (ADVP (RB soon))
        (VBZ becomes)
        (NP (DT a) (NN nobody))))
    (: ;)
    (S
      (SBAR
        (X (DT the)
          (ADJP (RBR more) (JJ dependent)))
        (S
          (NP (PRP they))
          (VP (VBP are)
            (PP (IN upon)
              (NP (PRP$ her) (JJ unfailing) (NN ministration))))))
      (, ,)
      (X (DT the) (JJR less))
      (NP (PRP they))
      (VP (VBP think)
        (PP (IN of)
          (NP (PRP her)))))
    (: ;)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (NP
          (NP (DT another) (NN way))
          (PP (IN of)
            (S
              (VP (VBG regarding)
                (PP (JJ such)
                  (PP (IN in) (`` ``)
                    (NP (DT the) (JJ high) (NNS countries))))))))))
    (. .) ('' '')))

det(self-centered-3, the-2)
prep_to(becomes-8, self-centered-3)
predet(person-6, such-4)
det(person-6, a-5)
nsubj(becomes-8, person-6)
advmod(becomes-8, soon-7)
root(ROOT-0, becomes-8)
det(nobody-10, a-9)
xcomp(becomes-8, nobody-10)
det(dependent-14, the-12)
advmod(dependent-14, more-13)
dep(are-16, dependent-14)
nsubj(are-16, they-15)
advcl(think-25, are-16)
poss(ministration-20, her-18)
amod(ministration-20, unfailing-19)
prep_upon(are-16, ministration-20)
det(less-23, the-22)
dep(think-25, less-23)
nsubj(think-25, they-24)
conj_but(becomes-8, think-25)
prep_of(think-25, her-27)
nsubj(have-31, they-30)
conj_but(becomes-8, have-31)
det(way-33, another-32)
dobj(have-31, way-33)
prepc_of(way-33, regarding-35)
prep(regarding-35, such-36)
det(countries-41, the-39)
amod(countries-41, high-40)
prep_in(such-36, countries-41)

(ROOT
  (S
    (S
      (NP (RB Hardly) (DT any))
      (VP (VBD knew)
        (NP (PRP$ her) (JJ real) (NN name))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (VP (VBN known)
          (PP (CC but)
            (PP (IN by)
              (NP (PRP$ her) (JJ pet) (NN name) (NNP _) (NNP Dawtie) (NNP _)))))))
    (. .)))

advmod(any-2, Hardly-1)
nsubj(knew-3, any-2)
root(ROOT-0, knew-3)
poss(name-6, her-4)
amod(name-6, real-5)
dobj(knew-3, name-6)
nsubjpass(known-10, she-8)
auxpass(known-10, was-9)
parataxis(knew-3, known-10)
cc(known-10, but-11)
poss(_-18, her-13)
amod(_-18, pet-14)
nn(_-18, name-15)
nn(_-18, _-16)
nn(_-18, Dawtie-17)
agent(known-10, _-18)

(ROOT
  (S
    (NP
      (NP (NNP Alexa))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD wondered)
            (PP (IN at)
              (NP (NNS times)))
            (SBAR (IN that)
              (S
                (NP (PRP she))
                (VP (MD could) (RB not)
                  (VP (VB interest)
                    (NP (PRP her))
                    (PP (IN in)
                      (NP
                        (NP (NNS things))
                        (SBAR
                          (S
                            (NP (PRP she))
                            (VP (VBD made)
                              (SBAR
                                (S
                                  (NP (PRP her))
                                  (VP (VBD read))))))))))))))))
      (, ,))
    (ADVP (RB little))
    (VP (VBD knew)
      (SBAR
        (WHADVP (WRB how)
          (ADJP (JJ superior)))
        (S
          (NP
            (NP (DT the) (NN girl) (POS 's))
            (NN choice))
          (VP (VBD was)
            (PP (TO to)
              (NP (PRP$ her) (JJ own)))))))
    (. !)))

nsubj(wondered-4, Alexa-1)
nsubj(knew-21, Alexa-1)
rcmod(Alexa-1, wondered-4)
prep_at(wondered-4, times-6)
mark(interest-11, that-7)
nsubj(interest-11, she-8)
aux(interest-11, could-9)
neg(interest-11, not-10)
ccomp(wondered-4, interest-11)
dobj(interest-11, her-12)
prep_in(interest-11, things-14)
nsubj(made-16, she-15)
rcmod(things-14, made-16)
nsubj(read-18, her-17)
ccomp(made-16, read-18)
advmod(knew-21, little-20)
root(ROOT-0, knew-21)
advmod(was-28, how-22)
dep(how-22, superior-23)
det(girl-25, the-24)
poss(choice-27, girl-25)
nsubj(was-28, choice-27)
ccomp(knew-21, was-28)
poss(own-31, her-30)
prep_to(was-28, own-31)

(ROOT
  (S
    (S
      (S (RB Not)
        (VP (VBG knowing)
          (NP
            (NP (RB much))
            (PP (IN of)
              (NP
                (NP (NN literature))
                (, ,)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP she))
                    (VP (VBD liked)))))))))
      (VP (VBD was)
        (ADVP (RB always))
        (PP (IN of)
          (NP
            (NP (DT the) (JJS best))
            (PP (IN in)
              (NP (PRP$ its) (NN kind)))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NN nothing))
        (PP (IN without)
          (NP (DT some) (JJS best) (NN element))))
      (VP (MD could)
        (VP (VB interest)
          (NP (PRP her))
          (ADVP (IN at) (DT all)))))
    (. .)))

neg(knowing-2, Not-1)
csubj(was-10, knowing-2)
dobj(knowing-2, much-3)
prep_of(much-3, literature-5)
dobj(liked-9, literature-5)
nsubj(liked-9, she-8)
rcmod(literature-5, liked-9)
root(ROOT-0, was-10)
advmod(was-10, always-11)
det(best-14, the-13)
prep_of(was-10, best-14)
poss(kind-17, its-16)
prep_in(best-14, kind-17)
nsubj(interest-26, nothing-20)
det(element-24, some-22)
amod(element-24, best-23)
prep_without(nothing-20, element-24)
aux(interest-26, could-25)
conj_and(was-10, interest-26)
dobj(interest-26, her-27)
advmod(interest-26, at-28)
pobj(at-28, all-29)

(ROOT
  (S
    (S (CC But)
      (NP (PRP she))
      (VP (VBD was) (RB not)
        (VP (VBN left)
          (PP (CC either)
            (PP (TO to)
              (NP (PRP$ her) (`` ``) (JJ own) (JJ sweet) (NN will) ('' '')))
            (CC or)
            (PP (TO to)
              (NP
                (NP (DT the) (NNS prejudices))
                (PP (IN of)
                  (NP
                    (NP (PRP$ her)
                      (ADJP (JJ well-meaning))
                      (NN mistress))
                    (: ;)
                    (ADJP (RB however) (JJ long)))))))
          (NP
            (NP (DT the) (NNS intervals))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD parted)
                  (NP (PRP them)))))))))
    (, ,)
    (NP (NNP Andrew))
    (VP (VBD continued)
      (S
        (VP (TO to)
          (VP (VB influence)
            (NP (PRP$ her) (NN reading))
            (PP (IN as)
              (PP (IN from)
                (NP (DT the) (JJ first))))))))
    (. .)))

cc(left-5, But-1)
nsubjpass(left-5, she-2)
auxpass(left-5, was-3)
neg(left-5, not-4)
ccomp(continued-32, left-5)
preconj(left-5, either-6)
poss(will-12, her-8)
amod(will-12, own-10)
amod(will-12, sweet-11)
prep_to(left-5, will-12)
det(prejudices-17, the-16)
prep_to(left-5, prejudices-17)
conj_or(will-12, prejudices-17)
poss(mistress-21, her-19)
amod(mistress-21, well-meaning-20)
prep_of(prejudices-17, mistress-21)
advmod(long-24, however-23)
amod(mistress-21, long-24)
det(intervals-26, the-25)
dobj(left-5, intervals-26)
nsubj(parted-28, intervals-26)
rcmod(intervals-26, parted-28)
dobj(parted-28, them-29)
nsubj(continued-32, Andrew-31)
nsubj(influence-34, Andrew-31)
root(ROOT-0, continued-32)
aux(influence-34, to-33)
xcomp(continued-32, influence-34)
poss(reading-36, her-35)
dobj(influence-34, reading-36)
prepc_as_from(influence-34, from-38)
det(first-40, the-39)
pobj(influence-34, first-40)

(ROOT
  (S
    (ADVP
      (ADVP
        (NP (DT A) (NN word))
        (RB now))
      (CC and)
      (ADVP
        (NP (DT a) (NN word))
        (RB then)))
    (, ,)
    (PP (IN with)
      (NP
        (NP (DT the) (NNS books))
        (SBAR
          (S
            (NP (PRP he))
            (VP
              (VP (VBD lent))
              (CC or)
              (VP (VBD gave)
                (NP (PRP her))))))))
    (, ,)
    (VP (VBD was)
      (ADJP (JJ sufficient)))
    (. .)))

det(word-2, A-1)
npadvmod(now-3, word-2)
advmod(sufficient-19, now-3)
det(word-6, a-5)
npadvmod(then-7, word-6)
conj_and(now-3, then-7)
advmod(sufficient-19, then-7)
det(books-11, the-10)
prep_with(sufficient-19, books-11)
nsubj(lent-13, he-12)
nsubj(gave-15, he-12)
rcmod(books-11, lent-13)
rcmod(books-11, gave-15)
conj_or(lent-13, gave-15)
dobj(gave-15, her-16)
cop(sufficient-19, was-18)
root(ROOT-0, sufficient-19)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP (NNP Andrew))
        (VP (VBD liked)
          (SBAR
            (S
              (S
                (NP
                  (NP (DT this))
                  (CC or)
                  (NP (DT that))
                  (, ,))
                (VP (VBD was)
                  (ADJP (JJ enough)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (S
                            (NP (NNP Dawtie))
                            (VP (VB set)
                              (S
                                (NP (PRP herself))
                                (VP (TO to)
                                  (VP (VB find)
                                    (PP (IN in)
                                      (NP (PRP it)))
                                    (SBAR
                                      (WHNP (WP what))
                                      (S
                                        (NP (NNP Andrew))
                                        (VP (VBD liked)))))))))))))))
              (, ,)
              (CC and)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (ADVP (RB thus)))))))))
    (NP (PRP she))
    (VP (VBD became)
      (ADJP (VBN acquainted)
        (PP (IN with)
          (NP
            (NP (JJS most))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP she))
                  (VP (VBD learned)
                    (PP (IN by)
                      (NP (NN heart)))))))))))
    (. .)))

mark(liked-3, That-1)
nsubj(liked-3, Andrew-2)
advcl(became-28, liked-3)
ccomp(became-28, liked-3)
nsubj(enough-9, this-4)
nsubj(make-11, this-4)
conj_or(this-4, that-6)
nsubj(enough-9, that-6)
nsubj(make-11, that-6)
cop(enough-9, was-8)
dep(liked-3, enough-9)
aux(make-11, to-10)
xcomp(enough-9, make-11)
nsubj(set-13, Dawtie-12)
ccomp(make-11, set-13)
dobj(set-13, herself-14)
nsubj(find-16, herself-14)
aux(find-16, to-15)
xcomp(set-13, find-16)
prep_in(find-16, it-18)
dobj(liked-21, what-19)
nsubj(liked-21, Andrew-20)
ccomp(find-16, liked-21)
nsubj(was-25, it-24)
dep(liked-3, was-25)
conj_and(enough-9, was-25)
advmod(was-25, thus-26)
nsubj(became-28, she-27)
root(ROOT-0, became-28)
acomp(became-28, acquainted-29)
prep_with(acquainted-29, most-31)
dobj(learned-35, what-33)
nsubj(learned-35, she-34)
prepc_of(most-31, learned-35)
prep_by(learned-35, heart-37)

(ROOT
  (S
    (PP (IN Above)
      (NP
        (NP (CD two) (NNS years))
        (PP (IN before)
          (NP
            (NP (DT the) (NN time))
            (SBAR
              (WHPP (TO to)
                (WHNP (WDT which)))
              (S
                (NP (PRP I))
                (VP (VBP have)
                  (ADVP (RB now))
                  (VP (VBN brought)
                    (NP (PRP$ my) (NN narrative))))))))))
    (, ,)
    (NP (NNP Sandy))
    (VP (VBD had)
      (VP (VBN given)
        (PRT (RP up))
        (NP (NN farming))
        (, ,)
        (S
          (VP (TO to)
            (VP
              (VP (VB pursue)
                (NP
                  (NP (DT the) (NN development))
                  (PP (IN of)
                    (NP
                      (NP (JJ certain) (NNS inventions))
                      (PP (IN of)
                        (NP (PRP$ his)))))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD had)
                        (VP (VBN met)
                          (NP
                            (NP (DT the) (NN approval))
                            (PP (IN of)
                              (NP
                                (NP (DT a) (NN man))
                                (PP (IN of)
                                  (NP
                                    (NP (NNS means))
                                    (SBAR
                                      (WHNP (WP who))
                                      (, ,)
                                      (S
                                        (ADJP (JJ unable)
                                          (SBAR
                                            (S
                                              (NP (PRP himself))
                                              (VP
                                                (VP
                                                  (S
                                                    (VP (TO to)
                                                      (VP (VB devise))))
                                                  (, ,) (MD could)
                                                  (VP
                                                    (ADVP (RB yet))
                                                    (VB understand)
                                                    (NP
                                                      (NP (DT a) (NN device))
                                                      (: :)
                                                      (S
                                                        (NP (PRP he))
                                                        (VP (VBD saw)
                                                          (SBAR (IN that)
                                                            (S
                                                              (NP (EX there))
                                                              (VP (VBD was)
                                                                (NP (NN use))))))))))
                                                (, ,)
                                                (CC and)
                                                (VP
                                                  (ADVP (RB consequently))
                                                  (NP (NN money)))))))
                                        (PP (IN in)
                                          (NP (PRP them))))))))))))))))
              (, ,)
              (CC and)
              (ADVP (RB wisely))
              (VP (VB put)
                (NP (PRP it))
                (PP (IN in)
                  (NP
                    (NP (NNP Sandy) (POS 's))
                    (NN power)
                    (S
                      (VP (TO to)
                        (VP (VB perfect)
                          (NP (PRP them)))))))))))))
    (. .)))

num(years-3, two-2)
prep_above(given-18, years-3)
det(time-6, the-5)
prep_before(years-3, time-6)
prep_to(brought-12, time-6)
nsubj(brought-12, I-9)
aux(brought-12, have-10)
advmod(brought-12, now-11)
rcmod(time-6, brought-12)
poss(narrative-14, my-13)
dobj(brought-12, narrative-14)
nsubj(given-18, Sandy-16)
aux(given-18, had-17)
root(ROOT-0, given-18)
prt(given-18, up-19)
dobj(given-18, farming-20)
aux(pursue-23, to-22)
vmod(given-18, pursue-23)
det(development-25, the-24)
dobj(pursue-23, development-25)
nsubj(met-33, development-25)
amod(inventions-28, certain-27)
prep_of(development-25, inventions-28)
prep_of(inventions-28, his-30)
aux(met-33, had-32)
rcmod(development-25, met-33)
det(approval-35, the-34)
dobj(met-33, approval-35)
det(man-38, a-37)
prep_of(approval-35, man-38)
prep_of(man-38, means-40)
dep(unable-43, means-40)
rcmod(means-40, unable-43)
nsubj(understand-50, himself-44)
aux(devise-46, to-45)
xcomp(understand-50, devise-46)
aux(understand-50, could-48)
advmod(understand-50, yet-49)
ccomp(unable-43, understand-50)
det(device-52, a-51)
nsubj(devise-46, device-52)
dobj(understand-50, device-52)
nsubj(saw-55, he-54)
dep(device-52, saw-55)
mark(was-58, that-56)
expl(was-58, there-57)
ccomp(saw-55, was-58)
nsubj(was-58, use-59)
advmod(money-63, consequently-62)
ccomp(unable-43, money-63)
conj_and(understand-50, money-63)
dep(unable-43, in-64)
pobj(in-64, them-65)
advmod(put-69, wisely-68)
vmod(given-18, put-69)
conj_and(pursue-23, put-69)
dobj(put-69, it-70)
poss(power-74, Sandy-72)
prep_in(put-69, power-74)
aux(perfect-76, to-75)
vmod(power-74, perfect-76)
dobj(perfect-76, them-77)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (PP
          (PP (IN in)
            (NP (NN consequence)))
          (CC but)
          (ADVP (RB little))
          (PP (IN at)
            (NP (NN home))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NNP Dawtie))
          (VP (VBD went)
            (S
              (VP (TO to)
                (VP (VB see)
                  (NP (PRP$ her) (NNS parents)))))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP she))
                (VP (MD could)
                  (ADVP (RB much))
                  (VP (VB oftener)
                    (ADVP (RB now)))))))))
      (, ,)
      (NP (NNP Andrew)
        (CC and)
        (PRP she))
      (ADVP (RB generally))
      (VP (VBD met)
        (PP (IN without)
          (NP (DT a) (JJ third)))))
    (. .)))

nsubj(was-2, He-1)
nsubj(was-2', He-1)
root(ROOT-0, was-2)
conj_but(was-2, was-2')
prep_in(was-2, consequence-4)
advmod(was-2, little-6)
prep_at(was-2', home-8)
advmod(went-13, when-11)
nsubj(went-13, Dawtie-12)
nsubj(see-15, Dawtie-12)
advcl(met-30, went-13)
aux(see-15, to-14)
xcomp(went-13, see-15)
poss(parents-17, her-16)
dobj(see-15, parents-17)
mark(oftener-23, as-19)
nsubj(oftener-23, she-20)
aux(oftener-23, could-21)
advmod(oftener-23, much-22)
advcl(went-13, oftener-23)
advmod(oftener-23, now-24)
nsubj(met-30, Andrew-26)
conj_and(Andrew-26, she-28)
nsubj(met-30, she-28)
advmod(met-30, generally-29)
conj_and(was-2, met-30)
det(third-33, a-32)
prep_without(met-30, third-33)

(ROOT
  (S
    (SBAR
      (WHADJP (WRB However) (JJ many))
      (S
        (NP (NNS weeks))
        (VP (MD might)
          (VP (VB have)
            (VP (VBN passed))))))
    (, ,)
    (NP (PRP they))
    (ADVP (RB always))
    (VP (VBD met)
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP they))
          (VP (VBD had)
            (VP (VBN parted)
              (NP (RB only) (DT the) (NN night))
              (PP (IN before)))))))
    (. .)))

advmod(many-2, However-1)
dep(passed-6, many-2)
nsubj(passed-6, weeks-3)
aux(passed-6, might-4)
aux(passed-6, have-5)
advcl(met-10, passed-6)
nsubj(met-10, they-8)
advmod(met-10, always-9)
root(ROOT-0, met-10)
advmod(parted-15, as-11)
mark(parted-15, if-12)
nsubj(parted-15, they-13)
aux(parted-15, had-14)
advcl(met-10, parted-15)
advmod(night-18, only-16)
det(night-18, the-17)
tmod(parted-15, night-18)
prep(parted-15, before-19)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (ADJP (DT neither) (JJ shyness)
        (CC nor)
        (JJ forwardness)
        (PP (IN in)
          (NP (NNP Dawtie)))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
preconj(shyness-4, neither-3)
acomp(was-2, shyness-4)
acomp(was-2, forwardness-6)
conj_nor(shyness-4, forwardness-6)
prep_in(shyness-4, Dawtie-8)

(ROOT
  (S
    (S
      (ADVP (RB Perhaps))
      (NP (DT a) (NN livelier))
      (VP (VBD rose)
        (SBAR
          (S
            (VP (MD might)
              (VP (VB tinge)
                (NP (PRP$ her) (JJ sweet) (NN round) (NN cheek))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP she))
                    (VP (VBD saw)
                      (NP (NNP Andrew)))))))))))
    (: ;)
    (S
      (NP (RB perhaps) (DT a) (NN brighter))
      (VP (VB spark)
        (NP (NN shone))
        (PP (IN in)
          (NP
            (NP (DT the) (NN pupil))
            (PP (IN of)
              (NP
                (NP (NNP Andrew) (POS 's))
                (NN eye)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBN met)
        (PP (IN as)
          (NP (NN calmly)))
        (PP (IN as)
          (NP
            (NP (CD two) (NNS prophets))
            (PP (IN in)
              (NP
                (NP (DT the) (NN secret))
                (PP (IN of)
                  (NP (DT the) (NN universe)))))))
        (, ,)
        (FRAG
          (ADJP (DT neither) (JJ anxious)
            (CC nor)
            (JJ eager)))))
    (. .)))

advmod(rose-4, Perhaps-1)
det(livelier-3, a-2)
nsubj(rose-4, livelier-3)
root(ROOT-0, rose-4)
aux(tinge-6, might-5)
ccomp(rose-4, tinge-6)
poss(cheek-10, her-7)
amod(cheek-10, sweet-8)
nn(cheek-10, round-9)
dobj(tinge-6, cheek-10)
advmod(saw-13, when-11)
nsubj(saw-13, she-12)
advcl(tinge-6, saw-13)
dobj(saw-13, Andrew-14)
advmod(brighter-18, perhaps-16)
det(brighter-18, a-17)
nsubj(spark-19, brighter-18)
conj_but(rose-4, spark-19)
dobj(spark-19, shone-20)
det(pupil-23, the-22)
prep_in(spark-19, pupil-23)
poss(eye-27, Andrew-25)
prep_of(pupil-23, eye-27)
nsubj(met-31, they-30)
conj_but(rose-4, met-31)
prep_as(met-31, calmly-33)
num(prophets-36, two-35)
prep_as(met-31, prophets-36)
det(secret-39, the-38)
prep_in(prophets-36, secret-39)
det(universe-42, the-41)
prep_of(secret-39, universe-42)
preconj(anxious-45, neither-44)
dep(met-31, anxious-45)
dep(met-31, eager-47)
conj_nor(anxious-45, eager-47)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ old) (NN relation))
      (PP (IN between)
        (NP (PRP them))))
    (VP (VBD was)
      (NP (DT the)
        (ADJP
          (ADJP (RBR more) (JJ potent))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD made)
                (ADJP (RB so) (RB little) (JJ outward))))))
        (NN show)))
    (. .)))

det(relation-3, The-1)
amod(relation-3, old-2)
nsubj(show-16, relation-3)
prep_between(relation-3, them-5)
cop(show-16, was-6)
det(show-16, the-7)
advmod(potent-9, more-8)
amod(show-16, potent-9)
mark(made-12, that-10)
nsubj(made-12, it-11)
ccomp(potent-9, made-12)
advmod(outward-15, so-13)
advmod(outward-15, little-14)
acomp(made-12, outward-15)
root(ROOT-0, show-16)

(ROOT
  (S (`` ``)
    (VP (VB Have)
      (NP
        (NP (PRP you) (NN anything))
        (PP (IN for)
          (NP
            (NP (PRP me))
            (, ,)
            (NP (NNP Andrew))))))
    (. ?) ('' '')))

root(ROOT-0, Have-2)
dep(anything-4, you-3)
dobj(Have-2, anything-4)
prep_for(anything-4, me-6)
appos(me-6, Andrew-8)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (MD would)
        (VP (VB say) (, ,)
          (PP (IN in)
            (NP (DT the) (JJ strong) (NN dialect)))
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP$ her) (JJ sweet) (NN voice))
              (VP (VBD made)
                (NP (RB so) (JJ pleasant))
                (PP (TO to)
                  (NP
                    (NP (DT those))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD loved)
                          (NP (PRP her)))))))))))))
    (: ;)
    (S
      (NP
        (NP (NNP whereupon) (NNP Andrew))
        (, ,)
        (ADVP (RB perhaps)
          (PP (IN without)
            (NP (JJ immediate) (NN answer))))
        (NP
          (QP (JJR more) (IN than) (DT a))
          (NN smile))
        (, ,))
      (VP (MD would)
        (VP
          (VP (VB turn)
            (PP (IN into)
              (NP (PRP$ his) (NN room))))
          (, ,)
          (CC and)
          (VP (VB reappear)
            (PP (IN with)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN got)
                      (S
                        (ADJP (JJ ready)))
                      (PP (IN for)
                        (NP (PRP her)))
                      (VP (TO to) (`` ``)
                        (VP (VB chew)
                          (PP (RB upon)))
                        ('' ''))))))))
          (SBAR (IN till)
            (S
              (NP (PRP they))
              (VP (MD should)
                (VP (VB meet)
                  (ADVP (RB again)))))))))
    (. .)))

nsubj(say-3, Dawtie-1)
aux(say-3, would-2)
root(ROOT-0, say-3)
det(dialect-8, the-6)
amod(dialect-8, strong-7)
prep_in(say-3, dialect-8)
dobj(made-13, which-9)
poss(voice-12, her-10)
amod(voice-12, sweet-11)
nsubj(made-13, voice-12)
ccomp(say-3, made-13)
advmod(pleasant-15, so-14)
dobj(made-13, pleasant-15)
prep_to(made-13, those-17)
nsubj(loved-19, those-17)
rcmod(those-17, loved-19)
dobj(loved-19, her-20)
nn(Andrew-23, whereupon-22)
nsubj(turn-35, Andrew-23)
nsubj(reappear-41, Andrew-23)
advmod(Andrew-23, perhaps-25)
amod(answer-28, immediate-27)
prep_without(perhaps-25, answer-28)
mwe(than-30, more-29)
quantmod(a-31, than-30)
num(smile-32, a-31)
dep(Andrew-23, smile-32)
aux(turn-35, would-34)
parataxis(say-3, turn-35)
poss(room-38, his-37)
prep_into(turn-35, room-38)
parataxis(say-3, reappear-41)
conj_and(turn-35, reappear-41)
dobj(chew-52, what-43)
nsubj(chew-52, he-44)
aux(chew-52, had-45)
aux(chew-52, got-46)
acomp(chew-52, ready-47)
prep_for(chew-52, her-49)
aux(chew-52, to-50)
prepc_with(reappear-41, chew-52)
prep(chew-52, upon-53)
mark(meet-58, till-55)
nsubj(meet-58, they-56)
aux(meet-58, should-57)
advcl(turn-35, meet-58)
advmod(meet-58, again-59)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP
            (NP (NNP Milton) (POS 's))
            (NN sonnet))
          (PRN (, ,)
            (PP (IN for)
              (NP (NN instance)))
            (, ,)))
        (PP (TO to)
          (NP
            (NP (DT the) (`` ``) (JJ virgin) (NN wise))
            (CC and)
            (NP (JJ pure))))
        (, ,) ('' ''))
      (VP (VBD had)
        (ADVP (RB long))
        (VP (VBN served)
          (NP (PRP$ her) (NN aspiration)))))
    (: ;)
    (S
      (UCP
        (ADJP (RB equally) (JJ wise))
        (CC and)
        (NP (JJ pure)))
      (, ,)
      (NP (NNP Dawtie))
      (VP (MD could)
        (VP (VB understand)
          (NP
            (NP (PRP it))
            (CONJP (RB as) (RB well) (IN as))
            (NP (PRP she)))
          (PP (IN for)
            (SBAR
              (WHNP (WP whom))
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (VP (VBN written)))))))))
    (. .)))

poss(sonnet-3, Milton-1)
nsubj(served-19, sonnet-3)
prep_for(sonnet-3, instance-6)
det(wise-12, the-9)
amod(wise-12, virgin-11)
prep_to(sonnet-3, wise-12)
prep_to(sonnet-3, pure-14)
conj_and(wise-12, pure-14)
aux(served-19, had-17)
advmod(served-19, long-18)
root(ROOT-0, served-19)
poss(aspiration-21, her-20)
dobj(served-19, aspiration-21)
advmod(wise-24, equally-23)
dep(understand-30, wise-24)
conj_and(wise-24, pure-26)
dep(understand-30, pure-26)
nsubj(understand-30, Dawtie-28)
aux(understand-30, could-29)
parataxis(served-19, understand-30)
dobj(understand-30, it-31)
dobj(understand-30, she-35)
conj_and(it-31, she-35)
dobj(written-40, whom-37)
nsubjpass(written-40, it-38)
auxpass(written-40, was-39)
prepc_for(understand-30, written-40)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB see)
          (NP (DT the) (NN delight)))))
    (PRN
      (S
        (NP (PRP she))
        (VP (VBD took)
          (PP (IN in)
            (NP (PRP it)))))
      (, ,))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN been)
          (NP
            (NP (DT a) (NN joy))
            (PP (TO to)
              (NP
                (NP (DT any) (VBG loving) (NN student))
                (PP (IN of)
                  (NP (NN humanity)))))))))
    (. .)))

aux(see-2, To-1)
csubj(joy-14, see-2)
det(delight-4, the-3)
dobj(see-2, delight-4)
nsubj(took-6, she-5)
parataxis(joy-14, took-6)
prep_in(took-6, it-8)
aux(joy-14, would-10)
aux(joy-14, have-11)
cop(joy-14, been-12)
det(joy-14, a-13)
root(ROOT-0, joy-14)
det(student-18, any-16)
amod(student-18, loving-17)
prep_to(joy-14, student-18)
prep_of(student-18, humanity-20)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD had)
        (VP (VBN cost)
          (NP (PRP her))
          (NP (JJR more) (NN effort)
            (S
              (VP (TO to)
                (VP (VB learn)
                  (PP (IN than)
                    (NP (RB almost) (DT any) (NN song))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB perhaps))
      (ADVP (RB therefore))
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT the) (JJR more) (NN precious))))
    (. .)))

nsubj(cost-3, It-1)
aux(cost-3, had-2)
root(ROOT-0, cost-3)
iobj(cost-3, her-4)
amod(effort-6, more-5)
dobj(cost-3, effort-6)
aux(learn-8, to-7)
vmod(effort-6, learn-8)
advmod(song-12, almost-10)
det(song-12, any-11)
prep_than(learn-8, song-12)
advmod(precious-21, perhaps-15)
advmod(precious-21, therefore-16)
nsubj(precious-21, it-17)
cop(precious-21, was-18)
det(precious-21, the-19)
amod(precious-21, more-20)
conj_and(cost-3, precious-21)

(ROOT
  (S
    (S
      (NP (NNP Andrew))
      (ADVP (RB seldom))
      (VP (VBD gave)
        (NP (PRP her))
        (NP (DT a) (NN book)
          (S
            (VP (TO to)
              (VP (VB learn)
                (PP (IN from))))))))
    (: ;)
    (S
      (PP (IN in)
        (NP (NN general)))
      (NP (PRP he))
      (VP (VBD copied) (, ,)
        (PP (IN in)
          (NP (PRP$ his) (JJ clearest) (NN handwriting)))
        (, ,)
        (SBAR
          (WHNP (WDT whatever) (NN poem)
            (CC or)
            (NNS paragraph))
          (S
            (NP (PRP he))
            (VP (VBD thought)
              (NP (NN fit))
              (PP (IN for)
                (NP (NNP Dawtie))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBD met))))
      (, ,)
      (NP (PRP she))
      (VP (MD would) (RB not)
        (VP
          (VP (VB unfrequently) (, ,)
            (SBAR (IN if)
              (S
                (NP (EX there))
                (VP (VBD was)
                  (NP (NN time))))))
          (, ,)
          (VP (VB repeat)
            (NP
              (NP (JJ unasked))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP she))
                  (VP (VBD had)
                    (VP (VBN learned)))))))
          (, ,)
          (CC and)
          (VP (VB be)
            (VP (VBN rewarded)
              (PP (IN with)
                (NP
                  (NP (PRP$ his) (VBG unfailing) (NN look))
                  (PP (IN of)
                    (NP (NN satisfaction))))))))))
    (. .)))

nsubj(gave-3, Andrew-1)
advmod(gave-3, seldom-2)
root(ROOT-0, gave-3)
iobj(gave-3, her-4)
det(book-6, a-5)
dobj(gave-3, book-6)
aux(learn-8, to-7)
vmod(book-6, learn-8)
prep(learn-8, from-9)
prep_in(copied-14, general-12)
nsubj(copied-14, he-13)
conj_and(gave-3, copied-14)
poss(handwriting-19, his-17)
amod(handwriting-19, clearest-18)
prep_in(copied-14, handwriting-19)
det(poem-22, whatever-21)
dobj(thought-26, poem-22)
conj_or(poem-22, paragraph-24)
dobj(thought-26, paragraph-24)
nsubj(thought-26, he-25)
ccomp(copied-14, thought-26)
dobj(thought-26, fit-27)
prep_for(thought-26, Dawtie-29)
advmod(met-34, when-32)
nsubj(met-34, they-33)
advcl(unfrequently-39, met-34)
nsubj(unfrequently-39, she-36)
nsubj(repeat-46, she-36)
nsubjpass(rewarded-55, she-36)
aux(unfrequently-39, would-37)
neg(unfrequently-39, not-38)
conj_and(gave-3, unfrequently-39)
mark(was-43, if-41)
expl(was-43, there-42)
advcl(unfrequently-39, was-43)
nsubj(was-43, time-44)
conj_and(gave-3, repeat-46)
conj_and(unfrequently-39, repeat-46)
dobj(repeat-46, unasked-47)
dobj(learned-51, unasked-47)
nsubj(learned-51, she-49)
aux(learned-51, had-50)
rcmod(unasked-47, learned-51)
auxpass(rewarded-55, be-54)
conj_and(gave-3, rewarded-55)
conj_and(unfrequently-39, rewarded-55)
poss(look-59, his-57)
amod(look-59, unfailing-58)
prep_with(rewarded-55, look-59)
prep_of(look-59, satisfaction-61)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN secret))
          (PP (IN between)
            (NP (PRP them))))))
    (: --)
    (S
      (NP (DT a) (NN secret))
      (VP (VBD proclaimed)
        (PP (IN on)
          (NP
            (NP (DT the) (NNS house-tops))
            (, ,)
            (NP
              (NP (DT a) (JJ secret) (NN hidden))
              (, ,)
              (NP
                (NP (DT the) (RBS most) (JJ precious))
                (PP (IN of)
                  (NP (NNS pearls))))
              (, ,))))
        (PP (IN in)
          (NP (PRP$ their) (NNS hearts)))
        (PRN (: --)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN earth))
              (VP (VBZ is)
                (NP
                  (NP (DT the)
                    (NP (NNP Lord) (POS 's)))
                  (CC and)
                  (NP (DT the) (NNS fullness)))
                (ADVP (RB thereof)))))
          (: ;))
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP$ its) (NN work))
              (VP (VBZ is)
                (NP
                  (NP
                    (NP (DT the) (NN work))
                    (PP (IN of)
                      (NP (DT the) (NNP Lord))))
                  (, ,)
                  (NP
                    (NP (IN whether) (DT the) (NN sowing))
                    (PP (IN of)
                      (NP (DT the) (NN field))))
                  (, ,)
                  (NP
                    (NP (DT the) (NN milking))
                    (PP (IN of)
                      (NP (DT the) (NN cow))))
                  (, ,)
                  (NP
                    (NP (DT the) (NN giving))
                    (PP (TO to)
                      (NP (DT the) (JJ poor))))
                  (, ,)
                  (NP
                    (NP (DT the) (NN spending))
                    (PP (IN of)
                      (NP (NNS wages))))
                  (, ,)
                  (NP
                    (NP (DT the) (NN reading))
                    (PP (IN of)
                      (NP (DT the) (NNP Bible))))))))
          (: ;)
          (SBAR (IN that)
            (S
              (NP (NNP God))
              (VP (VBZ is)
                (ADVP (RB all)
                  (PP (IN in)
                    (NP
                      (NP (DT all))
                      (, ,)
                      (CC and)
                      (NP
                        (NP (DT every) (NN throb))
                        (PP (IN of)
                          (NP (NNS gladness)))))))
                (NP (PRP$ His) (NN gift)))))
          (: ;)
          (SBAR (IN that)
            (S
              (NP (PRP$ their) (NN life))
              (VP (VBD came)
                (NP (JJ fresh) (DT every) (NN moment))
                (PP (IN from)
                  (NP (PRP$ His) (NN heart)))))))))
    (: ;)
    (S
      (NP
        (NP (DT that))
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD was)
              (VP (VBG lacking)
                (PP (TO to)
                  (NP (PRP them))))))))
      (VP (MD would)
        (VP (VB arrive)
          (NP
            (NP (DT the) (JJ very) (NN moment))
            (SBAR
              (S
                (NP (PRP He))
                (VP (VBD had)
                  (VP (VBN got)
                    (S
                      (NP (PRP them))
                      (ADJP (JJ ready)
                        (PP (IN for)
                          (NP (PRP it)))))))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(secret-4, a-3)
nsubj(was-2, secret-4)
prep_between(secret-4, them-6)
det(secret-9, a-8)
nsubj(proclaimed-10, secret-9)
parataxis(was-2, proclaimed-10)
det(house-tops-13, the-12)
prep_on(proclaimed-10, house-tops-13)
det(hidden-17, a-15)
amod(hidden-17, secret-16)
appos(house-tops-13, hidden-17)
det(precious-21, the-19)
advmod(precious-21, most-20)
appos(hidden-17, precious-21)
prep_of(precious-21, pearls-23)
poss(hearts-27, their-26)
prep_in(proclaimed-10, hearts-27)
mark(Lord-34, that-29)
det(earth-31, the-30)
nsubj(Lord-34, earth-31)
cop(Lord-34, is-32)
det(Lord-34, the-33)
parataxis(proclaimed-10, Lord-34)
possessive(Lord-34, 's-35)
det(fullness-38, the-37)
parataxis(proclaimed-10, fullness-38)
conj_and(Lord-34, fullness-38)
advmod(Lord-34, thereof-39)
mark(work-46, that-41)
poss(work-43, its-42)
nsubj(work-46, work-43)
cop(work-46, is-44)
det(work-46, the-45)
dep(proclaimed-10, work-46)
det(Lord-49, the-48)
prep_of(work-46, Lord-49)
amod(sowing-53, whether-51)
det(sowing-53, the-52)
appos(work-46, sowing-53)
det(field-56, the-55)
prep_of(sowing-53, field-56)
det(milking-59, the-58)
appos(work-46, milking-59)
det(cow-62, the-61)
prep_of(milking-59, cow-62)
det(giving-65, the-64)
appos(work-46, giving-65)
det(poor-68, the-67)
prep_to(giving-65, poor-68)
det(spending-71, the-70)
appos(work-46, spending-71)
prep_of(spending-71, wages-73)
det(reading-76, the-75)
appos(work-46, reading-76)
det(Bible-79, the-78)
prep_of(reading-76, Bible-79)
mark(gift-94, that-81)
nsubj(gift-94, God-82)
cop(gift-94, is-83)
advmod(gift-94, all-84)
prep_in(all-84, all-86)
det(throb-90, every-89)
prep_in(all-84, throb-90)
conj_and(all-86, throb-90)
prep_of(throb-90, gladness-92)
poss(gift-94, His-93)
dep(work-46, gift-94)
mark(came-99, that-96)
poss(life-98, their-97)
nsubj(came-99, life-98)
dep(work-46, came-99)
amod(moment-102, fresh-100)
det(moment-102, every-101)
dobj(came-99, moment-102)
poss(heart-105, His-104)
prep_from(came-99, heart-105)
nsubj(lacking-110, that-107)
nsubj(arrive-114, that-107)
aux(lacking-110, was-109)
rcmod(that-107, lacking-110)
prep_to(lacking-110, them-112)
aux(arrive-114, would-113)
parataxis(was-2, arrive-114)
det(moment-117, the-115)
amod(moment-117, very-116)
dobj(arrive-114, moment-117)
nsubj(got-120, He-118)
aux(got-120, had-119)
rcmod(moment-117, got-120)
nsubj(ready-122, them-121)
xcomp(got-120, ready-122)
prep_for(ready-122, it-124)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (NP
        (NP (NNP God) (POS 's))
        (JJ little) (NNS ones))
      (PP (IN in)
        (NP
          (NP
            (NP (NNP God) (POS 's))
            (NN world))
          (: --)
          (NP
            (NP (NN none) (DT the))
            (PP (CC less)
              (NP (PRP$ their) (JJ own))))))
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP
            (VP (VBD did)
              (NP (RB not) (NN desire)
                (S
                  (VP (TO to)
                    (VP (VB swallow)
                      (NP (PRP it)))))))
            (, ,)
            (CC or)
            (VP (VBD thrust)
              (NP (PRP it))
              (PP (IN in)
                (NP (PRP$ their) (NNS pockets))))))))
    (. .)))

nsubj(ones-6, They-1)
cop(ones-6, were-2)
poss(ones-6, God-3)
amod(ones-6, little-5)
root(ROOT-0, ones-6)
poss(world-10, God-8)
prep_in(ones-6, world-10)
dep(world-10, none-12)
dep(none-12, the-13)
prep(none-12, less-14)
poss(own-16, their-15)
pobj(less-14, own-16)
mark(did-19, that-17)
nsubj(did-19, they-18)
nsubj(thrust-27, they-18)
ccomp(ones-6, did-19)
neg(desire-21, not-20)
dobj(did-19, desire-21)
aux(swallow-23, to-22)
vmod(desire-21, swallow-23)
dobj(swallow-23, it-24)
ccomp(ones-6, thrust-27)
conj_or(did-19, thrust-27)
dobj(thrust-27, it-28)
poss(pockets-31, their-30)
prep_in(thrust-27, pockets-31)

(ROOT
  (S
    (PP (IN Among)
      (NP
        (NP (JJ poverty-stricken) (NNS Christians))
        (, ,)
        (VP (VBN consumed)
          (PP (IN with)
            (NP (NN care)))
          (S
            (VP (TO to)
              (VP
                (VP (VB keep)
                  (NP
                    (NP (DT a) (NN hold))
                    (PP (IN of)
                      (NP (DT the) (NN world)))))
                (CC and)
                (VP (VB save)
                  (NP (PRP$ their) (NNS souls)))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD were)
      (PP (IN as)
        (NP
          (NP (CD two) (NNS children))
          (PP (IN of)
            (NP (DT the) (NN house))))))
    (. .)))

amod(Christians-3, poverty-stricken-2)
prep_among(were-21, Christians-3)
vmod(Christians-3, consumed-5)
prep_with(consumed-5, care-7)
aux(keep-9, to-8)
xcomp(consumed-5, keep-9)
det(hold-11, a-10)
dobj(keep-9, hold-11)
det(world-14, the-13)
prep_of(hold-11, world-14)
xcomp(consumed-5, save-16)
conj_and(keep-9, save-16)
poss(souls-18, their-17)
dobj(save-16, souls-18)
nsubj(were-21, they-20)
root(ROOT-0, were-21)
num(children-24, two-23)
prep_as(were-21, children-24)
det(house-27, the-26)
prep_of(children-24, house-27)

(ROOT
  (S
    (PP (IN By)
      (S
        (VP (VBG living)
          (PP (IN in)
            (NP
              (NP (DT the) (NN presence))
              (PP (IN of)
                (NP (DT the) (NN living) (CD One))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD had)
      (VP (VBN become)
        (NP (PRP themselves))
        (NP
          (NP (PRP$ His) (NN presence))
          (: --)
          (NP
            (NP (NN dim) (NNS lanterns))
            (SBAR
              (WHPP (IN through)
                (WHNP (WDT which)))
              (S
                (NP (PRP$ His) (NN light))
                (VP (VBP shone)
                  (ADJP (JJ steady)))))))))
    (. .)))

prepc_by(become-13, living-2)
det(presence-5, the-4)
prep_in(living-2, presence-5)
det(living-8, the-7)
prep_of(presence-5, living-8)
num(living-8, One-9)
nsubj(become-13, they-11)
aux(become-13, had-12)
root(ROOT-0, become-13)
iobj(become-13, themselves-14)
poss(presence-16, His-15)
xcomp(become-13, presence-16)
nn(lanterns-19, dim-18)
dep(presence-16, lanterns-19)
prep_through(shone-24, lanterns-19)
poss(light-23, His-22)
nsubj(shone-24, light-23)
rcmod(lanterns-19, shone-24)
acomp(shone-24, steady-25)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WP Who))
      (S
        (VP (VBZ obeys))))
    (, ,)
    (ADVP (RB shines))
    (. .)))

nsubj(obeys-2, Who-1)
dep(shines-4, obeys-2)
root(ROOT-0, shines-4)

(ROOT
  (NP (NNP CHAPTER) (NNP XIV) (. .)))

nn(XIV-2, CHAPTER-1)
root(ROOT-0, XIV-2)

(ROOT
  (NP (NNP SANDY)
    (CC AND)
    (NNP GEORGE) (. .)))

root(ROOT-0, SANDY-1)
conj_and(SANDY-1, GEORGE-3)

(ROOT
  (S
    (S
      (NP (NNP Sandy))
      (VP (VBD had)
        (VP (VBN found)
          (S
            (NP (PRP it))
            (ADJP (JJ expedient)
              (S
                (VP (TO to)
                  (VP (VB go)
                    (PP (TO to)
                      (NP (NNP America)))))))))))
    (, ,)
    (CC and)
    (SINV (VBD had)
      (NP (RB now))
      (VP (VBN been)
        (ADVP (RB there))
        (NP (DT a) (NN twelvemonth))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN devised)
          (NP
            (NP (DT a) (NN machine))
            (PP (IN of)
              (NP
                (NP (DT the) (NN value))
                (SBAR
                  (WHPP (IN of)
                    (WHNP (WDT which)))
                  (S
                    (NP (RB not) (RB even) (PRP$ his) (NNS patron))
                    (VP (MD could)
                      (VP (VB be)
                        (ADJP (JJ convinced))))))))))))
    (: --)
    (S
      (ADVP (DT that) (VBZ is))
      (, ,)
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP (VB see)
          (NP
            (NP (DT the) (NN prospect))
            (PP (IN of)
              (NP (PRP$ its) (NN making) (NN money))))
          (ADVP (RB fast) (RB enough)
            (S
              (VP (TO to)
                (VP (VB constitute)
                  (S
                    (NP (PRP it))
                    (NP (DT a) (JJ _) (JJ good) (NN thing) (NN _))))))))))
    (. .)))

nsubj(found-3, Sandy-1)
aux(found-3, had-2)
root(ROOT-0, found-3)
nsubj(expedient-5, it-4)
nsubj(go-7, it-4)
xcomp(found-3, expedient-5)
aux(go-7, to-6)
xcomp(expedient-5, go-7)
prep_to(go-7, America-9)
aux(twelvemonth-17, had-12)
nsubj(twelvemonth-17, now-13)
cop(twelvemonth-17, been-14)
advmod(twelvemonth-17, there-15)
det(twelvemonth-17, a-16)
conj_and(found-3, twelvemonth-17)
nsubj(devised-21, he-19)
aux(devised-21, had-20)
conj_and(found-3, devised-21)
det(machine-23, a-22)
dobj(devised-21, machine-23)
det(value-26, the-25)
prep_of(machine-23, value-26)
prep_of(convinced-35, value-26)
neg(patron-32, not-29)
advmod(patron-32, even-30)
poss(patron-32, his-31)
nsubj(convinced-35, patron-32)
aux(convinced-35, could-33)
cop(convinced-35, be-34)
rcmod(value-26, convinced-35)
advmod(see-43, that-37)
dep(that-37, is-38)
nsubj(see-43, he-40)
aux(see-43, could-41)
neg(see-43, not-42)
conj_and(found-3, see-43)
parataxis(found-3, see-43)
det(prospect-45, the-44)
dobj(see-43, prospect-45)
poss(money-49, its-47)
nn(money-49, making-48)
prep_of(prospect-45, money-49)
advmod(enough-51, fast-50)
advmod(see-43, enough-51)
aux(constitute-53, to-52)
dep(enough-51, constitute-53)
nsubj(_-59, it-54)
det(_-59, a-55)
amod(_-59, _-56)
amod(_-59, good-57)
nn(_-59, thing-58)
xcomp(constitute-53, _-59)

(ROOT
  (S
    (S
      (NP (NNP Sandy))
      (VP (VBD regarded)
        (NP (PRP it))
        (PP (IN as)
          (NP
            (NP (DT a) (NN discovery))
            (, ,)
            (NP (DT a) (NN revelation))))
        (PP (IN for)
          (NP
            (NP (DT the) (NN uplifting))
            (PP (IN of)
              (NP
                (NP (DT a) (JJ certain) (JJ down-trodden) (NN portion))
                (PP (IN of)
                  (NP (DT the) (NN community)))))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB therefore))
      (, ,)
      (S
        (VP (VBG having)
          (VP (VBN saved)
            (NP (DT a) (JJ little) (NN money)))))
      (, ,)
      (VP (VBD had)
        (VP (VBN resolved)
          (S
            (VP (TO to)
              (VP (VB make)
                (S
                  (NP (PRP it))
                  (VP (VBN known)
                    (PP (IN in)
                      (NP (DT the) (NNPS States))))))))
          (, ,)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP
                (NP (NN insight))
                (PP (IN into)
                  (NP (NNS probabilities))))
              (VP (VBZ is)
                (ADJP (JJ fresher))))))))
    (. .)))

nsubj(regarded-2, Sandy-1)
nsubj(resolved-32, Sandy-1)
nsubj(make-34, Sandy-1)
root(ROOT-0, regarded-2)
dobj(regarded-2, it-3)
det(discovery-6, a-5)
prep_as(regarded-2, discovery-6)
det(revelation-9, a-8)
appos(discovery-6, revelation-9)
det(uplifting-12, the-11)
prep_for(regarded-2, uplifting-12)
det(portion-17, a-14)
amod(portion-17, certain-15)
amod(portion-17, down-trodden-16)
prep_of(uplifting-12, portion-17)
det(community-20, the-19)
prep_of(portion-17, community-20)
advmod(resolved-32, therefore-23)
aux(saved-26, having-25)
dep(resolved-32, saved-26)
det(money-29, a-27)
amod(money-29, little-28)
dobj(saved-26, money-29)
aux(resolved-32, had-31)
conj_and(regarded-2, resolved-32)
aux(make-34, to-33)
xcomp(resolved-32, make-34)
nsubj(known-36, it-35)
dep(make-34, known-36)
det(States-39, the-38)
prep_in(known-36, States-39)
advmod(fresher-46, where-41)
nsubj(fresher-46, insight-42)
prep_into(insight-42, probabilities-44)
cop(fresher-46, is-45)
advcl(resolved-32, fresher-46)

(ROOT
  (S
    (S (CC And)
      (S
        (ADVP (RB now))
        (NP (NNP Andrew))
        (VP (VBD had)
          (NP
            (NP (DT a) (NN letter))
            (PP (IN from)
              (NP (PRP him)))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (PRP he))
                (VP (VBD mentioned)
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (VP (VBN come)
                          (PP (IN across)
                            (NP (NNP Mr.) (NNP Crawford)))))))))))
          (, ,)
          (PP
            (ADVP (RB already))
            (IN of)
            (NP
              (NP (JJ high) (NN repute))
              (PP (IN in)
                (NP
                  (NP (NNP Wall) (NNP Street))
                  (: ;)
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (VP (VBN been)
                          (ADJP (JJ kind)
                            (PP (TO to)
                              (NP (PRP him))))))))
                  (, ,)))))))
      (CC and)
      (S
        (VP (VBG having)
          (VP (VBN learned)
            (NP (PRP$ his) (NN object))
            (PP (IN in)
              (S
                (VP (VBG visiting)
                  (NP (DT the) (NN country)))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (JJ approximate) (NN risk))
        (PP (IN in)
          (S
            (VP (VBG bringing)
              (PRT (RP out))
              (NP (PRP$ his) (NN invention)))))
        (, ,))
      (VP (VBD had)
        (VP (VBN taken)
          (NP (DT the) (NN thing))
          (PP (IN into)
            (NP (NN consideration))))))
    (. .)))

advmod(had-4, now-2)
nsubj(had-4, Andrew-3)
nsubj(learned-39, Andrew-3)
root(ROOT-0, had-4)
det(letter-6, a-5)
dobj(had-4, letter-6)
prep_in(mentioned-12, letter-6)
prep_from(letter-6, him-8)
nsubj(mentioned-12, he-11)
rcmod(letter-6, mentioned-12)
mark(come-16, that-13)
nsubj(come-16, he-14)
aux(come-16, had-15)
ccomp(mentioned-12, come-16)
nn(Crawford-19, Mr.-18)
prep_across(come-16, Crawford-19)
advmod(had-4, already-21)
amod(repute-24, high-23)
prep_of(had-4, repute-24)
nn(Street-27, Wall-26)
prep_in(repute-24, Street-27)
mark(kind-33, that-29)
nsubj(kind-33, he-30)
aux(kind-33, had-31)
cop(kind-33, been-32)
dep(Street-27, kind-33)
prep_to(kind-33, him-35)
aux(learned-39, having-38)
conj_and(had-4, learned-39)
poss(object-41, his-40)
dobj(learned-39, object-41)
prepc_in(learned-39, visiting-43)
det(country-45, the-44)
dobj(visiting-43, country-45)
det(risk-50, the-48)
amod(risk-50, approximate-49)
nsubj(taken-58, risk-50)
prepc_in(risk-50, bringing-52)
prt(bringing-52, out-53)
poss(invention-55, his-54)
dobj(bringing-52, invention-55)
aux(taken-58, had-57)
conj_and(had-4, taken-58)
det(thing-60, the-59)
dobj(taken-58, thing-60)
prep_into(taken-58, consideration-62)

(ROOT
  (S
    (S (CC But)
      (NP (DT the) (JJ next) (NN mail))
      (VP (VBD brought)
        (NP (DT another) (NN letter))
        (PP (TO to)
          (NP (DT the) (NN effect)))
        (SBAR
          (SBAR (IN that) (, ,)
            (S
              (S
                (VP (VBG having)
                  (VP (VBN learned)
                    (NP
                      (NP (DT the) (NN nature))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN business))
                          (VP (VBN done)
                            (PP (IN by)
                              (NP (NNP Mr.) (NNP Crawford))))))))))
              (, ,)
              (NP (PRP he))
              (VP (VBD found)
                (S
                  (NP (PRP himself))
                  (ADJP (JJ unable)
                    (S
                      (VP (TO to)
                        (VP (VB distinguish)
                          (PP (IN between)
                            (NP
                              (NP (PRP it))
                              (CC and)
                              (NP (NN gambling))))))))))))
          (, ,)
          (CC or)
          (FRAG
            (ADJP (JJR worse))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD seemed)
        (PP (TO to)
          (NP (PRP him)))
        (NP
          (NP (DT a) (NN vortex))
          (SBAR (WP$ whose)
            (S
              (NP (JJ very) (NNS emptiness))
              (VP (VBD drew)
                (NP (NN money))
                (PP (IN into)
                  (NP (PRP it)))))))))
    (. .)))

cc(brought-5, But-1)
det(mail-4, the-2)
amod(mail-4, next-3)
nsubj(brought-5, mail-4)
root(ROOT-0, brought-5)
det(letter-7, another-6)
dobj(brought-5, letter-7)
det(effect-10, the-9)
prep_to(brought-5, effect-10)
mark(found-26, that-11)
aux(learned-14, having-13)
vmod(found-26, learned-14)
det(nature-16, the-15)
dobj(learned-14, nature-16)
det(business-19, the-18)
prep_of(nature-16, business-19)
vmod(business-19, done-20)
nn(Crawford-23, Mr.-22)
agent(done-20, Crawford-23)
nsubj(found-26, he-25)
nsubj(worse-37, he-25)
ccomp(brought-5, found-26)
nsubj(unable-28, himself-27)
nsubj(distinguish-30, himself-27)
xcomp(found-26, unable-28)
aux(distinguish-30, to-29)
xcomp(unable-28, distinguish-30)
prep_between(distinguish-30, it-32)
prep_between(distinguish-30, gambling-34)
conj_and(it-32, gambling-34)
ccomp(brought-5, worse-37)
conj_or(found-26, worse-37)
nsubj(seemed-40, it-39)
parataxis(brought-5, seemed-40)
prep_to(seemed-40, him-42)
det(vortex-44, a-43)
xcomp(seemed-40, vortex-44)
dep(drew-48, whose-45)
amod(emptiness-47, very-46)
nsubj(drew-48, emptiness-47)
dep(vortex-44, drew-48)
dobj(drew-48, money-49)
prep_into(drew-48, it-51)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (ADVP (RB therefore))
      (VP
        (VP (VBN drawn)
          (ADVP (RB back)))
        (, ,)
        (CC and)
        (VP (VBD declined)
          (S
            (VP (TO to)
              (VP (VB put)
                (NP
                  (NP (DT the) (NN thing))
                  (PP (IN in)
                    (NP
                      (NP (NNP Crawford) (POS 's))
                      (NNS hands))))))))))
    (. .)))

nsubj(drawn-4, He-1)
nsubj(declined-8, He-1)
nsubj(put-10, He-1)
aux(drawn-4, had-2)
advmod(drawn-4, therefore-3)
root(ROOT-0, drawn-4)
advmod(drawn-4, back-5)
conj_and(drawn-4, declined-8)
aux(put-10, to-9)
xcomp(declined-8, put-10)
det(thing-12, the-11)
dobj(put-10, thing-12)
poss(hands-16, Crawford-14)
prep_in(thing-12, hands-16)

(ROOT
  (S
    (NP (DT This) (NN letter) (NNP Andrew))
    (VP (VBD gave)
      (NP (NNP Dawtie))
      (S
        (VP (TO to)
          (VP (VB read))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (MD might)
            (VP (VB see)
              (SBAR (IN that)
                (S
                  (NP (NNP Sandy))
                  (VP (VBD remained)
                    (NP (DT a) (JJ true) (NN man))))))))))
    (. .)))

det(Andrew-3, This-1)
nn(Andrew-3, letter-2)
nsubj(gave-4, Andrew-3)
root(ROOT-0, gave-4)
dobj(gave-4, Dawtie-5)
aux(read-7, to-6)
vmod(gave-4, read-7)
mark(see-12, that-9)
nsubj(see-12, she-10)
aux(see-12, might-11)
ccomp(gave-4, see-12)
mark(remained-15, that-13)
nsubj(remained-15, Sandy-14)
ccomp(see-12, remained-15)
det(man-18, a-16)
amod(man-18, true-17)
xcomp(remained-15, man-18)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD had)
        (ADVP (RB never))
        (VP (VBN been)
          (ADJP (JJ anxious))
          (PP (IN on)
            (NP (DT the) (NN point)))))
      (, ,)
      (CC but)
      (VP (VBD was)
        (ADJP (RB very) (JJ glad)
          (SBAR (IN that)
            (S
              (NP (NN ignorance))
              (VP (VBD had) (RB not)
                (VP (VBN drawn)
                  (NP (PRP him))
                  (PP (IN into)
                    (NP (DT an) (JJ evil) (NN connection))))))))))
    (. .)))

nsubj(anxious-5, He-1)
nsubj(glad-13, He-1)
aux(anxious-5, had-2)
neg(anxious-5, never-3)
cop(anxious-5, been-4)
root(ROOT-0, anxious-5)
det(point-8, the-7)
prep_on(anxious-5, point-8)
cop(glad-13, was-11)
advmod(glad-13, very-12)
conj_but(anxious-5, glad-13)
mark(drawn-18, that-14)
nsubj(drawn-18, ignorance-15)
aux(drawn-18, had-16)
neg(drawn-18, not-17)
ccomp(glad-13, drawn-18)
dobj(drawn-18, him-19)
det(connection-23, an-21)
amod(connection-23, evil-22)
prep_into(drawn-18, connection-23)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD took)
      (NP (DT the) (NN letter))
      (PP (IN with)
        (NP (PRP her)))
      (S
        (VP (TO to)
          (VP (VB read)
            (PP (IN at)
              (NP (PRP$ her) (NN leisure)))))))
    (. .)))

nsubj(took-2, Dawtie-1)
root(ROOT-0, took-2)
det(letter-4, the-3)
dobj(took-2, letter-4)
prep_with(took-2, her-6)
aux(read-8, to-7)
vmod(took-2, read-8)
poss(leisure-11, her-10)
prep_at(read-8, leisure-11)

(ROOT
  (S
    (NP (NNP Unable))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB understand)
          (NP
            (NP (NN something))
            (SBAR
              (S
                (NP (NNP Sandy))
                (VP (VBD said)
                  (S
                    (VP (VBG concerning)
                      (NP
                        (NP (NNP Mr.) (NNP Crawford) (POS 's))
                        (NN business)))))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD asked)
      (NP
        (NP (DT a) (NN question))
        (CC or)
        (NP
          (NP (CD two))
          (PP (IN of)
            (NP
              (NP (PRP$ her) (NN mistress))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBN led)
                    (PP (TO to)
                      (NP
                        (NP (NNS questions))
                        (PP (IN on)
                          (NP
                            (NP (NNP Alexa) (POS 's))
                            (NN part)))))))))))))
    (. .)))

nsubj(asked-17, Unable-1)
advmod(asked-17, however-3)
aux(understand-6, to-5)
advcl(asked-17, understand-6)
dobj(understand-6, something-7)
nsubj(said-9, Sandy-8)
rcmod(something-7, said-9)
xcomp(said-9, concerning-10)
nn(Crawford-12, Mr.-11)
poss(business-14, Crawford-12)
dobj(concerning-10, business-14)
nsubj(asked-17, she-16)
root(ROOT-0, asked-17)
det(question-19, a-18)
dobj(asked-17, question-19)
dobj(asked-17, two-21)
conj_or(question-19, two-21)
poss(mistress-24, her-23)
prep_of(two-21, mistress-24)
nsubj(led-27, mistress-24)
rcmod(mistress-24, led-27)
prep_to(led-27, questions-29)
poss(part-33, Alexa-31)
prep_on(questions-29, part-33)

(ROOT
  (S
    (S
      (VP (VBG Finding)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD was)
              (NP
                (NP (DT the) (NN subject))
                (PP (IN of)
                  (NP
                    (NP (NNP Sandy) (POS 's))
                    (NN letter)))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD wished)
      (S
        (VP (TO to)
          (VP (VB see)
            (NP (PRP it))))))
    (. .)))

vmod(wished-12, Finding-1)
nsubj(subject-5, what-2)
cop(subject-5, was-3)
det(subject-5, the-4)
ccomp(Finding-1, subject-5)
poss(letter-9, Sandy-7)
prep_of(subject-5, letter-9)
nsubj(wished-12, she-11)
nsubj(see-14, she-11)
root(ROOT-0, wished-12)
aux(see-14, to-13)
xcomp(wished-12, see-14)
dobj(see-14, it-15)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP
      (VP (VBD asked)
        (NP
          (NP (NN leave))
          (PP (IN of)
            (NP (NNP Andrew)))))
      (, ,)
      (CC and)
      (VP (VBD gave)
        (NP (PRP it))
        (NP (PRP her))))
    (. .)))

nsubj(asked-2, Dawtie-1)
nsubj(gave-8, Dawtie-1)
root(ROOT-0, asked-2)
dobj(asked-2, leave-3)
prep_of(leave-3, Andrew-5)
conj_and(asked-2, gave-8)
iobj(gave-8, it-9)
dobj(gave-8, her-10)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD was)
      (ADJP (DT both) (JJ distressed)
        (CC and)
        (JJ indignant))
      (S
        (VP (VBG becoming)
          (PP (IN at)
            (SBAR (IN once)
              (S
                (NP (NNP George))
                (VP (VBZ 's)
                  (ADJP (JJ partisan)))))))))
    (. .)))

nsubj(distressed-4, Alexa-1)
nsubj(indignant-6, Alexa-1)
cop(distressed-4, was-2)
preconj(distressed-4, both-3)
root(ROOT-0, distressed-4)
conj_and(distressed-4, indignant-6)
xcomp(distressed-4, becoming-7)
mark(partisan-12, once-9)
nsubj(partisan-12, George-10)
cop(partisan-12, 's-11)
prepc_at(becoming-7, partisan-12)

(ROOT
  (S
    (S
      (NP
        (NP (PRP$ Her) (NN distress) (JJ diminished))
        (CC and)
        (NP (PRP$ her) (NN indignation)))
      (VP (VBD increased)
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP (VBD reflected)
              (PP (IN on)
                (NP (DT the) (JJ _) (NN airt) (NN _) (NN whence)))
              (NP
                (NP (DT the) (JJ unfavorable) (NN report))
                (VP (VBN reached)
                  (NP (PRP her)))))))))
    (: ;)
    (S
      (NP (DT the) (NNS brothers))
      (VP (VBD were)
        (NP (JJ such) (JJ peculiar) (NNS men))))
    (. !)))

poss(distress-2, Her-1)
nsubj(increased-7, distress-2)
amod(distress-2, diminished-3)
poss(indignation-6, her-5)
conj_and(distress-2, indignation-6)
nsubj(increased-7, indignation-6)
root(ROOT-0, increased-7)
mark(reflected-10, as-8)
nsubj(reflected-10, she-9)
advcl(increased-7, reflected-10)
det(whence-16, the-12)
amod(whence-16, _-13)
nn(whence-16, airt-14)
nn(whence-16, _-15)
prep_on(reflected-10, whence-16)
det(report-19, the-17)
amod(report-19, unfavorable-18)
dobj(reflected-10, report-19)
vmod(report-19, reached-20)
dobj(reached-20, her-21)
det(brothers-24, the-23)
nsubj(men-28, brothers-24)
cop(men-28, were-25)
amod(men-28, such-26)
amod(men-28, peculiar-27)
parataxis(increased-7, men-28)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD recalled)
        (NP
          (NP (DT the) (JJ strange) (NNS things))
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN heard)
                  (PP (IN of)
                    (NP (PRP$ their) (NN childhood))))))))))
    (: ;)
    (S
      (ADVP (RB doubtless))
      (NP (DT the) (NN judgment))
      (VP (VBD was)
        (VP (VBN formed)
          (PP (IN on)
            (NP
              (NP (DT an)
                (ADJP (JJ overstrained)
                  (CC and)
                  (JJ quixotic))
                (NN idea))
              (PP (IN of)
                (NP (NN honesty))))))))
    (. !)))

nsubj(recalled-2, She-1)
root(ROOT-0, recalled-2)
det(things-5, the-3)
amod(things-5, strange-4)
dobj(recalled-2, things-5)
nsubj(heard-8, she-6)
aux(heard-8, had-7)
rcmod(things-5, heard-8)
poss(childhood-11, their-10)
prep_of(heard-8, childhood-11)
advmod(formed-17, doubtless-13)
det(judgment-15, the-14)
nsubjpass(formed-17, judgment-15)
auxpass(formed-17, was-16)
parataxis(recalled-2, formed-17)
det(idea-23, an-19)
amod(idea-23, overstrained-20)
conj_and(overstrained-20, quixotic-22)
amod(idea-23, quixotic-22)
prep_on(formed-17, idea-23)
prep_of(idea-23, honesty-25)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (NP (EX there))
    (VP (VBD had)
      (ADVP (RB always))
      (VP (VBN been)
        (NP
          (NP (DT a) (JJ strong) (JJ socialistic) (NN tendency))
          (PP (IN in)
            (NP (PRP them)))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD explained)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (NNP Sandy))
                    (VP (MD could)
                      (VP (VB malign)
                        (NP (PRP$ his) (NN benefactor))))))))))))
    (. !)))

advmod(tendency-10, Besides-1)
expl(tendency-10, there-3)
aux(tendency-10, had-4)
advmod(tendency-10, always-5)
cop(tendency-10, been-6)
det(tendency-10, a-7)
amod(tendency-10, strong-8)
amod(tendency-10, socialistic-9)
root(ROOT-0, tendency-10)
nsubj(explained-15, tendency-10)
prep_in(tendency-10, them-12)
rcmod(tendency-10, explained-15)
advmod(malign-19, how-16)
nsubj(malign-19, Sandy-17)
aux(malign-19, could-18)
ccomp(explained-15, malign-19)
poss(benefactor-21, his-20)
dobj(malign-19, benefactor-21)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD was)
      (ADJP (JJ incapable)
        (PP (IN of)
          (S
            (VP (VBG doing)
              (NP (NN anything) (NN dishonorable)))))))
    (. !)))

nsubj(incapable-3, George-1)
cop(incapable-3, was-2)
root(ROOT-0, incapable-3)
prepc_of(incapable-3, doing-5)
nn(dishonorable-7, anything-6)
dobj(doing-5, dishonorable-7)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD would) (RB not)
      (VP (VB trouble)
        (NP (PRP herself))
        (PP (IN about)
          (NP (PRP it)))))
    (. .)))

nsubj(trouble-4, She-1)
aux(trouble-4, would-2)
neg(trouble-4, not-3)
root(ROOT-0, trouble-4)
dobj(trouble-4, herself-5)
prep_about(trouble-4, it-7)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (VP (MD would)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (NNP Andrew))
                  (VP (VBD regarded)
                    (NP (DT the) (NN matter))))))))))
    (. .)))

cc(like-4, But-1)
nsubj(like-4, she-2)
nsubj(know-6, she-2)
aux(like-4, would-3)
root(ROOT-0, like-4)
aux(know-6, to-5)
xcomp(like-4, know-6)
advmod(regarded-9, how-7)
nsubj(regarded-9, Andrew-8)
ccomp(know-6, regarded-9)
det(matter-11, the-10)
dobj(regarded-9, matter-11)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD asked)
      (NP (PRP him))
      (ADVP (RB therefore))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (VBD thought)
            (PP (IN of)
              (NP
                (NP (NNP Sandy) (POS 's))
                (NN procedure)))))))
    (. .)))

nsubj(asked-2, She-1)
root(ROOT-0, asked-2)
dobj(asked-2, him-3)
advmod(asked-2, therefore-4)
dobj(thought-7, what-5)
nsubj(thought-7, he-6)
dep(asked-2, thought-7)
poss(procedure-11, Sandy-9)
prep_of(thought-7, procedure-11)

(ROOT
  (S
    (S
      (NP (NNP Andrew))
      (VP (VBD replied)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD did) (RB not)
              (VP (VB know)
                (NP (RB much) (RB about) (NN business))))))))
    (: ;)
    (CC but)
    (S
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ only) (NN safety))
          (VP (MD must)
            (VP (VB lie)
              (PP (IN in)
                (S
                  (VP (VBG having)
                    (S
                      (NP (NN nothing))
                      (VP (TO to)
                        (VP (VB do)
                          (PP (IN with)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (VP (VBD was)
                                  (ADJP (JJ doubtful))))))))))))))))
      (: ;)
      (ADVP (RB therefore))
      (NP (NNP Sandy))
      (VP (VBD had)
        (VP (VBN done)
          (ADVP (RB right)))))
    (. .)))

nsubj(replied-2, Andrew-1)
root(ROOT-0, replied-2)
mark(know-7, that-3)
nsubj(know-7, he-4)
aux(know-7, did-5)
neg(know-7, not-6)
ccomp(replied-2, know-7)
advmod(business-10, much-8)
advmod(business-10, about-9)
dobj(know-7, business-10)
mark(lie-18, that-13)
det(safety-16, the-14)
amod(safety-16, only-15)
nsubj(lie-18, safety-16)
aux(lie-18, must-17)
advcl(done-32, lie-18)
ccomp(done-32, lie-18)
prepc_in(lie-18, having-20)
dobj(having-20, nothing-21)
nsubj(do-23, nothing-21)
aux(do-23, to-22)
ccomp(having-20, do-23)
xcomp(having-20, do-23)
nsubj(doubtful-27, what-25)
cop(doubtful-27, was-26)
prepc_with(do-23, doubtful-27)
advmod(done-32, therefore-29)
nsubj(done-32, Sandy-30)
aux(done-32, had-31)
conj_but(replied-2, done-32)
advmod(done-32, right-33)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (RB too) (JJ bad)
              (PP (IN of)
                (NP (PRP him))))
            (S
              (VP (TO to)
                (VP (VB condemn)
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (PRP he))
                      (VP (VBD confessed)
                        (NP (NN ignorance))))))))))))
    (. .)))

nsubj(said-2, Alexa-1)
root(ROOT-0, said-2)
nsubj(bad-6, it-3)
nsubj(condemn-10, it-3)
cop(bad-6, was-4)
advmod(bad-6, too-5)
ccomp(said-2, bad-6)
prep_of(bad-6, him-8)
aux(condemn-10, to-9)
xcomp(bad-6, condemn-10)
advmod(confessed-13, where-11)
nsubj(confessed-13, he-12)
advcl(condemn-10, confessed-13)
dobj(confessed-13, ignorance-14)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD replied) (: :) (`` ``)
      (S
        (S
          (NP (NNP Ma'am))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (NNP Mr.) (NNP Crawford))
              (VP (VBZ is)
                (ADJP (JJ wrong)))))
          (NP (PRP he))
          (VP (VBZ is)
            (VP (VBN condemned))))
        (: ;)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBZ is)
                (ADJP (JJ right)))))
          (NP (PRP$ my) (JJ private) (NN doubt))
          (VP (MD can) (RB not)
            (VP (VB hurt)
              (NP (PRP him)))))))
    (. .)))

nsubj(replied-2, Andrew-1)
root(ROOT-0, replied-2)
nsubjpass(condemned-14, Ma'am-5)
mark(wrong-11, if-7)
nn(Crawford-9, Mr.-8)
nsubj(wrong-11, Crawford-9)
cop(wrong-11, is-10)
advcl(condemned-14, wrong-11)
nsubjpass(condemned-14, he-12)
auxpass(condemned-14, is-13)
dep(replied-2, condemned-14)
mark(right-19, if-16)
nsubj(right-19, he-17)
cop(right-19, is-18)
advcl(hurt-25, right-19)
poss(doubt-22, my-20)
amod(doubt-22, private-21)
nsubj(hurt-25, doubt-22)
aux(hurt-25, can-23)
neg(hurt-25, not-24)
parataxis(condemned-14, hurt-25)
dobj(hurt-25, him-26)

(ROOT
  (S
    (NP (NNP Sandy))
    (VP (MD must)
      (VP (VB act)
        (PP
          (PP (IN by)
            (NP (PRP$ his) (JJ own) (NN doubt)))
          (, ,) (RB not)
          (PP (IN by)
            (NP
              (NP (NNP Mr.) (NNP Crawford) (POS 's))
              (NN confidence))))))
    (. .) ('' '')))

nsubj(act-3, Sandy-1)
aux(act-3, must-2)
root(ROOT-0, act-3)
poss(doubt-7, his-5)
amod(doubt-7, own-6)
prep_by(act-3, doubt-7)
neg(act-3, not-9)
nn(Crawford-12, Mr.-11)
poss(confidence-14, Crawford-12)
prep_by(act-3, confidence-14)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD grew)
      (ADJP (RBR more) (JJ distressed))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP she))
          (VP (VBD began)
            (S
              (VP (TO to)
                (VP (VB recall)
                  (NP (NNS things))
                  (SBAR
                    (SBAR
                      (S
                        (NP (NNP George))
                        (VP (VBD had)
                          (VP (VBN said)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (PP (IN at)
                                  (NP (DT the) (NN time)))
                                (NP (PRP she))
                                (VP (VBD had) (RB not)
                                  (VP (VBN liked)))))))))
                    (, ,)
                    (CC but)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (PRP she))
                        (VP (VBD had)
                          (VP (VBN succeeded)
                            (PP (IN in)
                              (S
                                (VP (VBG forgetting))))))))))))))))
    (. .)))

nsubj(grew-2, Alexa-1)
root(ROOT-0, grew-2)
advmod(distressed-4, more-3)
acomp(grew-2, distressed-4)
mark(began-8, for-6)
nsubj(began-8, she-7)
nsubj(recall-10, she-7)
advcl(grew-2, began-8)
aux(recall-10, to-9)
xcomp(began-8, recall-10)
dobj(recall-10, things-11)
nsubj(said-14, George-12)
aux(said-14, had-13)
dep(recall-10, said-14)
dobj(liked-22, which-15)
det(time-18, the-17)
prep_at(liked-22, time-18)
nsubj(liked-22, she-19)
aux(liked-22, had-20)
neg(liked-22, not-21)
ccomp(said-14, liked-22)
dobj(succeeded-28, which-25)
nsubj(succeeded-28, she-26)
aux(succeeded-28, had-27)
dep(recall-10, succeeded-28)
conj_but(said-14, succeeded-28)
prepc_in(succeeded-28, forgetting-30)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (ADVP (RB indeed))
            (VP (VBN gone)
              (ADVP (RB astray))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD hoped)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB forget)
                (NP (PRP her))))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (MD could)
        (VP (VB do)
          (PP (IN without)
            (NP (PRP him))))))
    (. !)))

mark(gone-5, If-1)
nsubj(gone-5, he-2)
aux(gone-5, had-3)
advmod(gone-5, indeed-4)
advcl(hoped-9, gone-5)
advmod(gone-5, astray-6)
nsubj(hoped-9, she-8)
root(ROOT-0, hoped-9)
nsubj(forget-12, he-10)
aux(forget-12, would-11)
ccomp(hoped-9, forget-12)
dobj(forget-12, her-13)
nsubj(do-17, she-15)
aux(do-17, could-16)
parataxis(hoped-9, do-17)
prep_without(do-17, him-19)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NN judgment))
      (PP (IN of)
        (NP
          (NP (PDT such) (DT a) (NN man))
          (PP (IN as)
            (NP (NNP Sandy))))))
    (VP (MD could)
      (VP (VB settle)
        (NP (NN nothing))))
    (. .)))

cc(settle-11, But-1)
det(judgment-3, the-2)
nsubj(settle-11, judgment-3)
predet(man-7, such-5)
det(man-7, a-6)
prep_of(judgment-3, man-7)
prep_as(man-7, Sandy-9)
aux(settle-11, could-10)
root(ROOT-0, settle-11)
dobj(settle-11, nothing-12)

(ROOT
  (S
    (PP (IN Of)
      (NP (JJ humble) (NN origin)
        (CC and)
        (NN childish) (NN simplicity)))
    (, ,)
    (NP (PRP he))
    (VP (MD could) (RB not)
      (VP (VB see)
        (NP (DT the) (NN thing))
        (SBAR (IN as)
          (S
            (NP
              (NP (DT a) (NN man))
              (PP (IN of)
                (NP (NN experience))))
            (VP (MD must))))))
    (. .)))

amod(origin-3, humble-2)
prep_of(see-11, origin-3)
nn(simplicity-6, childish-5)
conj_and(origin-3, simplicity-6)
prep_of(see-11, simplicity-6)
nsubj(see-11, he-8)
aux(see-11, could-9)
neg(see-11, not-10)
root(ROOT-0, see-11)
det(thing-13, the-12)
dobj(see-11, thing-13)
mark(must-19, as-14)
det(man-16, a-15)
nsubj(must-19, man-16)
prep_of(man-16, experience-18)
advcl(see-11, must-19)

(ROOT
  (S
    (NP (NNP George))
    (VP (MD might)
      (VP (VB be)
        (ADJP (RB all) (JJ right))
        (ADVP (RB notwithstanding))))
    (. .)))

nsubj(right-5, George-1)
aux(right-5, might-2)
cop(right-5, be-3)
advmod(right-5, all-4)
root(ROOT-0, right-5)
advmod(right-5, notwithstanding-6)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (PRP$ his) (NN father))
        (: --)
        (SBAR
          (WHNP (WP$ whose) (NNS reputation))
          (S
            (VP (VBD remained)
              (PP (IN under)
                (NP
                  (NP (DT a) (JJ thick) (NN cloud))
                  (, ,)
                  (SBAR
                    (WHNP
                      (WHNP (WP$ whose) (JJ failed) (NN character))
                      (PP (RB rather) (IN than)
                        (NP (PRP$ his) (NNS ill-success))))
                    (S
                      (VP (VBD had)
                        (VP (VBN driven)
                          (NP (NNP George))
                          (PP (TO to)
                            (NP (DT the) (JJ other) (NN continent))))))))))))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(was-6, time-4)
expl(was-6, there-5)
root(ROOT-0, was-6)
poss(father-8, his-7)
nsubj(was-6, father-8)
poss(reputation-11, father-8)
nsubj(remained-12, reputation-11)
rcmod(father-8, remained-12)
det(cloud-16, a-14)
amod(cloud-16, thick-15)
prep_under(remained-12, cloud-16)
poss(character-20, cloud-16)
amod(character-20, failed-19)
nsubj(driven-26, character-20)
advmod(character-20, rather-21)
poss(ill-success-24, his-23)
prep_than(character-20, ill-success-24)
aux(driven-26, had-25)
rcmod(cloud-16, driven-26)
dobj(driven-26, George-27)
det(continent-31, the-29)
amod(continent-31, other-30)
prep_to(driven-26, continent-31)

(ROOT
  (S
    (NP (NNP Breed))
    (VP (MD must)
      (VP (VB go)
        (PP (IN for)
          (NP (NN something)))
        (PP (IN in)
          (NP
            (NP (DT a) (NN question))
            (PP (IN of)
              (NP (NNS probabilities)))))))
    (. .)))

nsubj(go-3, Breed-1)
aux(go-3, must-2)
root(ROOT-0, go-3)
prep_for(go-3, something-5)
det(question-8, a-7)
prep_in(go-3, question-8)
prep_of(question-8, probabilities-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ first) (NN time))
        (SBAR
          (S
            (NP
              (NP (NNP Alexa) (POS 's))
              (NNS thoughts))
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBN turned)
                  (PP (IN into)
                    (NP (PDT such) (DT a) (NN channel))))))))))
    (. .)))

nsubj(time-5, It-1)
cop(time-5, was-2)
det(time-5, the-3)
amod(time-5, first-4)
root(ROOT-0, time-5)
poss(thoughts-8, Alexa-6)
nsubjpass(turned-11, thoughts-8)
aux(turned-11, had-9)
auxpass(turned-11, been-10)
rcmod(time-5, turned-11)
predet(channel-15, such-13)
det(channel-15, a-14)
prep_into(turned-11, channel-15)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD clung)
      (PP (TO to)
        (NP (DT the) (JJ poor) (NN comfort)))
      (SBAR (IN that)
        (S
          (NP (NN something))
          (VP (MD must)
            (VP (VB have)
              (VP (VBN passed)
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN interview))
                    (VP
                      (ADVP (RB so) (RB kindly))
                      (VBN sought)
                      (PP (IN by)
                        (NP (NNP George)))
                      (S
                        (VP (TO to)
                          (VP (VB set)
                            (NP (DT the) (JJ quixotical) (JJ young) (NN farmer))
                            (PP (IN against)
                              (NP (PRP him)))))))))))))))
    (. .)))

nsubj(clung-2, She-1)
root(ROOT-0, clung-2)
det(comfort-6, the-4)
amod(comfort-6, poor-5)
prep_to(clung-2, comfort-6)
mark(passed-11, that-7)
nsubj(passed-11, something-8)
aux(passed-11, must-9)
aux(passed-11, have-10)
ccomp(clung-2, passed-11)
det(interview-14, the-13)
prep_at(passed-11, interview-14)
advmod(kindly-16, so-15)
advmod(sought-17, kindly-16)
vmod(interview-14, sought-17)
agent(sought-17, George-19)
aux(set-21, to-20)
xcomp(sought-17, set-21)
det(farmer-25, the-22)
amod(farmer-25, quixotical-23)
amod(farmer-25, young-24)
dobj(set-21, farmer-25)
prep_against(set-21, him-27)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD would) (RB not)
      (VP (VB utter)
        (NP (PRP$ his) (NN name))
        (PP (TO to)
          (NP (NNP Andrew)))
        (ADVP (RB ever) (RB again))))
    (. !)))

nsubj(utter-4, She-1)
aux(utter-4, would-2)
neg(utter-4, not-3)
root(ROOT-0, utter-4)
poss(name-6, his-5)
dobj(utter-4, name-6)
prep_to(utter-4, Andrew-8)
advmod(again-10, ever-9)
advmod(utter-4, again-10)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADJP (JJ right)
        (PP (IN in)
          (S
            (VP (VBG thinking)
              (SBAR (IN that)
                (S
                  (NP (NNP George))
                  (VP (VBZ cherished)
                    (NP
                      (NP (DT a)
                        (ADJP (JJ sincere))
                        (NN affection))
                      (PP (IN for)
                        (NP (PRP her))))))))))))
    (. .)))

nsubj(right-3, She-1)
cop(right-3, was-2)
root(ROOT-0, right-3)
prepc_in(right-3, thinking-5)
mark(cherished-8, that-6)
nsubj(cherished-8, George-7)
ccomp(thinking-5, cherished-8)
det(affection-11, a-9)
amod(affection-11, sincere-10)
dobj(cherished-8, affection-11)
prep_for(affection-11, her-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (NN spurs))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD drove)
                  (NP (PRP him))
                  (ADVP (RB too) (RB eagerly))
                  (PP (IN after)
                    (NP (NN money))))))))))
    (. .)))

nsubj(one-3, It-1)
cop(one-3, was-2)
root(ROOT-0, one-3)
det(spurs-6, the-5)
prep_of(one-3, spurs-6)
nsubj(drove-8, spurs-6)
rcmod(spurs-6, drove-8)
dobj(drove-8, him-9)
advmod(eagerly-11, too-10)
advmod(drove-8, eagerly-11)
prep_after(drove-8, money-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP doubt)
      (SBAR (IN if)
        (S
          (NP (DT any) (NN man))
          (VP (VBZ starts)
            (PP (IN with)
              (NP
                (NP
                  (NP (DT a) (VBN developed) (NN love))
                  (PP (IN of)
                    (NP (NN money)))
                  (PP (IN for)
                    (NP (PRP$ its) (JJ own) (NN sake)))
                  (PRN (: --)
                    (SBAR (IN except)
                      (S
                        (NP (RB indeed) (PRP he))
                        (VP (VB be)
                          (VP (VBN born)))))))
                (PP (IN of)
                  (NP
                    (NP (NNS generations))
                    (PP (IN of)
                      (NP (NN mammon) (NNS worshipers)))))))))))
    (. .)))

nsubj(doubt-2, I-1)
root(ROOT-0, doubt-2)
mark(starts-6, if-3)
det(man-5, any-4)
nsubj(starts-6, man-5)
advcl(doubt-2, starts-6)
det(love-10, a-8)
amod(love-10, developed-9)
prep_with(starts-6, love-10)
prep_of(love-10, money-12)
poss(sake-16, its-14)
amod(sake-16, own-15)
prep_for(love-10, sake-16)
mark(born-22, except-18)
advmod(he-20, indeed-19)
nsubjpass(born-22, he-20)
auxpass(born-22, be-21)
dep(love-10, born-22)
prep_of(love-10, generations-24)
nn(worshipers-27, mammon-26)
prep_of(generations-24, worshipers-27)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD had)
      (VP (VBN gone)
        (PP (IN into)
          (NP (NN speculation)))
        (PP
          (PP (IN with)
            (NP
              (NP (DT the) (NN object))
              (PP (IN of)
                (S
                  (VP (VBG retrieving)
                    (NP
                      (NP (DT the) (NN position))
                      (SBAR
                        (WHPP (IN in)
                          (WHNP (WDT which)))
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (VP (VBN supposed)
                              (S
                                (NP (PRP himself))
                                (VP (VBN born)))))))))))))
          (, ,)
          (CC and)
          (PP (IN in)
            (NP
              (NP (DT the) (NN hope))
              (PP (IN of)
                (S
                  (VP
                    (VP (VBG winning)
                      (NP
                        (NP (DT the) (NN hand))
                        (PP (IN of)
                          (NP (PRP$ his) (NN cousin)))))
                    (: --)
                    (VP (VBG thinking)
                      (ADVP
                        (ADVP (RB too) (RB much))
                        (PP (IN of)
                          (NP (PRP himself))))
                      (S
                        (VP (TO to)
                          (VP (VB offer)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (VP (MD would)
                                  (ADVP (RB not)
                                    (PP (IN in)
                                      (NP
                                        (NP (DT the) (NNS eyes))
                                        (PP (IN of)
                                          (NP (DT the) (NN world))))))
                                  (VP (VB be)
                                    (ADJP (JJ worth))))))))))
                    (NP (PRP$ her) (NN acceptance))))))))))
    (. .)))

nsubj(gone-3, George-1)
nsubj(gone-3', George-1)
aux(gone-3, had-2)
root(ROOT-0, gone-3)
conj_and(gone-3, gone-3')
prep_into(gone-3, speculation-5)
det(object-8, the-7)
prep_with(gone-3, object-8)
prepc_of(object-8, retrieving-10)
det(position-12, the-11)
dobj(retrieving-10, position-12)
prep_in(supposed-17, position-12)
nsubj(supposed-17, he-15)
aux(supposed-17, had-16)
rcmod(position-12, supposed-17)
nsubj(born-19, himself-18)
dep(supposed-17, born-19)
det(hope-24, the-23)
prep_in(gone-3', hope-24)
prepc_of(hope-24, winning-26)
det(hand-28, the-27)
dobj(winning-26, hand-28)
poss(cousin-31, his-30)
prep_of(hand-28, cousin-31)
dep(winning-26, thinking-33)
advmod(much-35, too-34)
advmod(thinking-33, much-35)
prep_of(much-35, himself-37)
aux(offer-39, to-38)
xcomp(thinking-33, offer-39)
nsubj(worth-50, what-40)
aux(worth-50, would-41)
neg(worth-50, not-42)
det(eyes-45, the-44)
prep_in(not-42, eyes-45)
det(world-48, the-47)
prep_of(eyes-45, world-48)
cop(worth-50, be-49)
ccomp(offer-39, worth-50)
poss(acceptance-52, her-51)
dobj(winning-26, acceptance-52)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP he))
          (VP (VBD stepped)
            (PP (IN on)
              (NP
                (NP (DT the)
                  (ADJP (JJ inclined))
                  (NN plane))
                (PP (IN of)
                  (NP (NN dishonesty))))))))
      (NP (PRP he))
      (VP (VBD believed)
        (S
          (NP (PRP himself))
          (VP
            (ADVP (RB only))
            (JJ engaging)
            (PP (IN in) (`` ``)
              (NP (JJ legitimate) (NN speculation)))))))
    (: ;) ('' '')
    (S (CC but)
      (NP (PRP he))
      (VP (VBD was)
        (ADVP (IN at) (RB once))
        (VP (VBN affected)
          (PP (IN by)
            (NP
              (NP (DT the) (NN atmosphere))
              (PP (IN about)
                (NP (PRP him))))))))
    (. .)))

advmod(stepped-3, When-1)
nsubj(stepped-3, he-2)
advcl(believed-11, stepped-3)
det(plane-7, the-5)
amod(plane-7, inclined-6)
prep_on(stepped-3, plane-7)
prep_of(plane-7, dishonesty-9)
nsubj(believed-11, he-10)
root(ROOT-0, believed-11)
nsubj(engaging-14, himself-12)
advmod(engaging-14, only-13)
ccomp(believed-11, engaging-14)
amod(speculation-18, legitimate-17)
prep_in(engaging-14, speculation-18)
cc(affected-26, but-21)
nsubjpass(affected-26, he-22)
auxpass(affected-26, was-23)
advmod(affected-26, at-24)
advmod(at-24, once-25)
parataxis(believed-11, affected-26)
det(atmosphere-29, the-28)
agent(affected-26, atmosphere-29)
prep_about(atmosphere-29, him-31)

(ROOT
  (S
    (S
      (VP (VBN Wrapped)
        (PP (IN in)
          (S
            (NP
              (NP (DT the) (NN breath))
              (PP (IN of)
                (NP (NN admiration)
                  (CC and)
                  (NN adulation))))
            (VP (VBG surrounding)
              (NP
                (NP (NNS men))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD cared)
                      (PP (IN for)
                        (NP
                          (NP (JJ _) (NN nothing) (NNP _)
                            (CC but)
                            (NNP money-making))
                          (, ,)
                          (NP
                            (NP (NNS men))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBD were) (RB not)
                                  (ADJP
                                    (ADJP (RB merely) (JJ dishonest))
                                    (, ,)
                                    (CC but)
                                    (ADJP
                                      (NP (DT the) (RB very))
                                      (JJ serpents)))
                                  (PP (IN of)
                                    (NP (NN dishonesty)))
                                  (, ,)
                                  (PP (IN against)
                                    (SBAR
                                      (WHNP (WP whom))
                                      (S
                                        (NP (NNS pickpockets))
                                        (VP (MD will)
                                          (VP (`` ``) (VB stick)
                                            (PRT (RP off))
                                            ('' '')
                                            (PP (IN as)
                                              (NP
                                                (NP (NNS angels))
                                                (PP (IN of)
                                                  (NP (NN light)))))))))))))))))))))))))
    (: ;)
    (S
      (PP
        (ADVP (RB constantly))
        (IN under)
        (NP
          (NP
            (NP (DT the)
              (ADJP
                (ADVP (RB softly))
                (JJ persuasive))
              (NN influence))
            (PP (IN of)
              (NP (JJ low) (NNS morals))))
          (CC and)
          (NP
            (NP (JJ extravagant) (NN appreciation))
            (PP (IN of)
              (NP (NNP cunning))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD came)
        (PP (IN by)
          (NP (JJ rapid) (NNS degrees)))
        (S
          (VP (TO to)
            (VP (VB think)
              (NP
                (NP (JJR less)
                  (CC and)
                  (JJR less))
                (PP (IN of)
                  (ADJP (JJ right)
                    (CC and)
                    (JJ wrong)))))))))
    (. .)))

root(ROOT-0, Wrapped-1)
det(breath-4, the-3)
nsubj(surrounding-9, breath-4)
prep_of(breath-4, admiration-6)
prep_of(breath-4, adulation-8)
conj_and(admiration-6, adulation-8)
prepc_in(Wrapped-1, surrounding-9)
dobj(surrounding-9, men-10)
nsubj(cared-12, men-10)
rcmod(men-10, cared-12)
amod(_-16, _-14)
nn(_-16, nothing-15)
prep_for(cared-12, _-16)
prep_for(cared-12, money-making-18)
conj_but(_-16, money-making-18)
appos(_-16, men-20)
nsubj(dishonest-25, men-20)
nsubj(serpents-30, men-20)
cop(dishonest-25, were-22)
neg(dishonest-25, not-23)
advmod(dishonest-25, merely-24)
rcmod(men-20, dishonest-25)
det(very-29, the-28)
npadvmod(serpents-30, very-29)
rcmod(men-20, serpents-30)
conj_but(dishonest-25, serpents-30)
prep_of(dishonest-25, dishonesty-32)
dobj(stick-39, whom-35)
nsubj(stick-39, pickpockets-36)
aux(stick-39, will-37)
prepc_against(dishonest-25, stick-39)
prt(stick-39, off-40)
prep_as(stick-39, angels-43)
prep_of(angels-43, light-45)
advmod(came-63, constantly-47)
det(influence-52, the-49)
advmod(persuasive-51, softly-50)
amod(influence-52, persuasive-51)
prep_under(came-63, influence-52)
amod(morals-55, low-54)
prep_of(influence-52, morals-55)
amod(appreciation-58, extravagant-57)
conj_and(influence-52, appreciation-58)
prep_under(came-63, appreciation-58)
prep_of(appreciation-58, cunning-60)
nsubj(came-63, he-62)
nsubj(think-68, he-62)
parataxis(Wrapped-1, came-63)
amod(degrees-66, rapid-65)
prep_by(came-63, degrees-66)
aux(think-68, to-67)
xcomp(came-63, think-68)
dobj(think-68, less-69)
dobj(think-68, less-71)
conj_and(less-69, less-71)
prep_of(less-69, right-73)
prep_of(less-69, wrong-75)
conj_and(right-73, wrong-75)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (JJ first)))
      (NP (PRP he))
      (VP (VBD called)
        (NP
          (NP (DT the) (NNS doings))
          (PP (IN of)
            (NP (DT the) (NN place) (NN dishonest))))))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (VBD called)
        (NP (PRP them) (JJ sharp) (NN practice))))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (VBD called)
        (S
          (NP (PRP them))
          (ADJP (DT a) (RB little) (JJ shady)))))
    (: ;)
    (S
      (ADVP (RB then))
      (, ,)
      (NP (NN close))
      (VP (VBZ sailing)))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (VBD said)
        (SBAR
          (S
            (NP
              (NP (DT this))
              (CC or)
              (NP (DT that) (NN transaction)))
            (VP (VBD was)
              (VP (VBN deuced)
                (S
                  (ADJP (JJ clever)))))))))
    (: ;)
    (S
      (ADVP (RB then))
      (, ,)
      (NP (DT the) (NN man))
      (VP (VBD was)
        (ADJP (RBR more) (JJ rogue))
        (PP (IN than)
          (NP (NN fool)))))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (VBD laughed)
        (PP (IN at)
          (NP
            (NP (DT the) (NN success))
            (PP (IN of)
              (NP (DT a) (JJ vile) (NN trick)))))))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (VBD touched)
        (NP (DT the) (NN pitch))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG thinking)
          (NP
            (NP (PDT all) (DT the) (NN time))
            (SBAR
              (S
                (NP (PRP it))
                (VP
                  (VP (VBD was)
                    (CC but)
                    (PP (IN with)
                      (NP (CD one) (NN finger))))
                  (, ,)
                  (VP (VBD was)
                    (ADVP (RB presently))
                    (VP (VBN besmeared)
                      (ADVP (DT all) (RP over))
                      (: --)
                      (SBAR (IN as)
                        (S
                          (VP (VBD was)
                            (ADJP (JJ natural)))))))
                  (, ,)
                  (PP (IN for)
                    (NP
                      (NP (PRP he))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (MD will)
                            (VP (VB touch)))))))))))))
      (VP (VBZ is)
        (ADJP (RB already) (JJ smeared))))
    (. .)))

prep_at(called-4, first-2)
nsubj(called-4, he-3)
root(ROOT-0, called-4)
det(doings-6, the-5)
dobj(called-4, doings-6)
det(dishonest-10, the-8)
nn(dishonest-10, place-9)
prep_of(doings-6, dishonest-10)
advmod(called-14, then-12)
nsubj(called-14, he-13)
conj_and(called-4, called-14)
dep(practice-17, them-15)
amod(practice-17, sharp-16)
dobj(called-14, practice-17)
advmod(called-21, then-19)
nsubj(called-21, he-20)
conj_and(called-4, called-21)
nsubj(shady-25, them-22)
det(shady-25, a-23)
advmod(shady-25, little-24)
xcomp(called-21, shady-25)
advmod(sailing-30, then-27)
nsubj(sailing-30, close-29)
conj_and(called-4, sailing-30)
advmod(said-34, then-32)
nsubj(said-34, he-33)
conj_and(called-4, said-34)
nsubjpass(deuced-40, this-35)
det(transaction-38, that-37)
conj_or(this-35, transaction-38)
nsubjpass(deuced-40, transaction-38)
auxpass(deuced-40, was-39)
ccomp(said-34, deuced-40)
xcomp(deuced-40, clever-41)
advmod(rogue-49, then-43)
det(man-46, the-45)
nsubj(rogue-49, man-46)
cop(rogue-49, was-47)
advmod(rogue-49, more-48)
conj_and(called-4, rogue-49)
prep_than(rogue-49, fool-51)
advmod(laughed-55, then-53)
nsubj(laughed-55, he-54)
conj_and(called-4, laughed-55)
det(success-58, the-57)
prep_at(laughed-55, success-58)
det(trick-62, a-60)
amod(trick-62, vile-61)
prep_of(success-58, trick-62)
advmod(touched-66, then-64)
nsubj(touched-66, he-65)
conj_and(called-4, touched-66)
det(pitch-68, the-67)
dobj(touched-66, pitch-68)
csubj(smeared-99, thinking-71)
predet(time-74, all-72)
det(time-74, the-73)
dobj(thinking-71, time-74)
nsubj(was-76, it-75)
rcmod(time-74, was-76)
rcmod(time-74, with-78)
conj_but(was-76, with-78)
num(finger-80, one-79)
pobj(with-78, finger-80)
auxpass(besmeared-84, was-82)
advmod(besmeared-84, presently-83)
dep(was-76, besmeared-84)
dep(over-86, all-85)
advmod(besmeared-84, over-86)
mark(natural-90, as-88)
cop(natural-90, was-89)
advcl(besmeared-84, natural-90)
parataxis(besmeared-84, natural-90)
prep_for(was-76, he-93)
nsubj(touch-96, he-93)
aux(touch-96, will-95)
rcmod(he-93, touch-96)
cop(smeared-99, is-97)
advmod(smeared-99, already-98)
conj_and(called-4, smeared-99)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (NNP Alexa))
        (VP (VBD was)
          (VP (VBG fighting)
            (NP (PRP$ his) (NNS battles))
            (PP (IN with)
              (NP (PRP herself)))))))
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN thrown)
        (PRT (RP down))
        (NP (PRP$ his) (NNS arms))
        (PP (IN in)
          (NP (DT the) (JJ only) (NN battle) (NN worth) (NN fighting)))))
    (. .)))

mark(fighting-4, While-1)
nsubj(fighting-4, Alexa-2)
aux(fighting-4, was-3)
advcl(thrown-11, fighting-4)
poss(battles-6, his-5)
dobj(fighting-4, battles-6)
prep_with(fighting-4, herself-8)
nsubj(thrown-11, he-9)
aux(thrown-11, had-10)
root(ROOT-0, thrown-11)
prt(thrown-11, down-12)
poss(arms-14, his-13)
dobj(thrown-11, arms-14)
det(fighting-20, the-16)
amod(fighting-20, only-17)
nn(fighting-20, battle-18)
nn(fighting-20, worth-19)
prep_in(thrown-11, fighting-20)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD wrote)
          (PP (TO to)
            (NP (PRP her)))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP he))
              (VP (VBD did)
                (ADVP (RB regularly))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD said)
      (ADVP (DT no) (RBR more))
      (PP (IN about)
        (NP (NN business)))
      (SBAR (IN than)
        (S
          (SBAR
            (SBAR (IN that)
              (S
                (NP (PRP$ his) (NNS prospects))
                (VP (VBD were)
                  (ADJP (VBG encouraging)))))
            (: ;)
            (SBAR
              (WHADJP (WRB how) (JJ much))
              (S
                (NP (PRP$ his) (NN reticence))
                (VP (MD may)
                  (VP (VB have)
                    (VP (VBN had)
                      (S
                        (VP (TO to)
                          (VP (VB do)
                            (PP (IN with)
                              (NP
                                (NP (DT a) (NN sense))
                                (PP (IN of)
                                  (NP (PRP$ her) (NN disapproval))))))))))))))
          (NP (PRP I))
          (VP (MD can) (RB not)
            (VP (VB tell))))))
    (. .)))

advmod(wrote-3, When-1)
nsubj(wrote-3, he-2)
advcl(said-13, wrote-3)
prep_to(wrote-3, her-5)
dobj(did-9, which-7)
nsubj(did-9, he-8)
ccomp(wrote-3, did-9)
advmod(did-9, regularly-10)
nsubj(said-13, he-12)
root(ROOT-0, said-13)
neg(more-15, no-14)
advmod(said-13, more-15)
prep_about(said-13, business-17)
mark(tell-43, than-18)
mark(encouraging-23, that-19)
poss(prospects-21, his-20)
nsubj(encouraging-23, prospects-21)
cop(encouraging-23, were-22)
advcl(tell-43, encouraging-23)
advmod(much-26, how-25)
dep(had-31, much-26)
poss(reticence-28, his-27)
nsubj(had-31, reticence-28)
nsubj(do-33, reticence-28)
aux(had-31, may-29)
aux(had-31, have-30)
dep(encouraging-23, had-31)
aux(do-33, to-32)
xcomp(had-31, do-33)
det(sense-36, a-35)
prep_with(do-33, sense-36)
poss(disapproval-39, her-38)
prep_of(sense-36, disapproval-39)
nsubj(tell-43, I-40)
aux(tell-43, can-41)
neg(tell-43, not-42)
advcl(said-13, tell-43)

(ROOT
  (NP (NNP CHAPTER) (NNP XV) (. .)))

nn(XV-2, CHAPTER-1)
root(ROOT-0, XV-2)

(ROOT
  (NP (NNP MOTHER)
    (CC AND)
    (NNP DAUGHTER) (. .)))

root(ROOT-0, MOTHER-1)
conj_and(MOTHER-1, DAUGHTER-3)

(ROOT
  (S
    (NP (CD One) (JJ lovely) (NN summer))
    (NP
      (NP (NN evening) (NN Dawtie))
      (, ,)
      (PP (IN with)
        (NP
          (NP (DT a) (NN bundle))
          (PP (IN in)
            (NP (PRP$ her) (NN hand)))))
      (, ,))
    (VP (VBN looked)
      (PP (IN from)
        (NP
          (NP (DT the) (NN top))
          (PP (IN of)
            (NP
              (NP (DT a) (JJ grassy) (NN knoll))
              (ADVP (RB down)
                (PP (IN on)
                  (NP
                    (NP (PRP$ her) (NNS parents) (POS '))
                    (NN turf) (NN cottage)))))))))
    (. .)))

num(summer-3, One-1)
amod(summer-3, lovely-2)
tmod(looked-14, summer-3)
nn(Dawtie-5, evening-4)
nsubj(looked-14, Dawtie-5)
det(bundle-9, a-8)
prep_with(Dawtie-5, bundle-9)
poss(hand-12, her-11)
prep_in(bundle-9, hand-12)
root(ROOT-0, looked-14)
det(top-17, the-16)
prep_from(looked-14, top-17)
det(knoll-21, a-19)
amod(knoll-21, grassy-20)
prep_of(top-17, knoll-21)
advmod(knoll-21, down-22)
poss(parents-25, her-24)
poss(cottage-28, parents-25)
nn(cottage-28, turf-27)
prep_on(down-22, cottage-28)

(ROOT
  (S
    (S
      (NP (DT The) (NN sun))
      (VP (VBD was)
        (VP (VBG setting)
          (PP (IN behind)
            (NP (PRP her))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD looked)
          (SBAR (RB as) (IN if)
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN stepped)
                  (PP (IN from)
                    (NP (PRP it)))
                  (SBAR (IN as)
                    (S
                      (NP (PRP it))
                      (VP (VBD touched)
                        (NP
                          (NP
                            (NP (DT the) (NN ground))
                            (SBAR
                              (WHPP (IN on)
                                (WHNP (WDT which)))
                              (S
                                (NP (PRP she))
                                (VP (VBD stood)))))
                          (, ,)
                          (ADJP (JJ rosy)
                            (PP (IN with)
                              (NP
                                (NP (DT the) (NNS rosiness))
                                (PP (IN of)
                                  (NP (DT the) (NN sun)))))))))))))))
        (, ,)
        (CC but)
        (PP (IN with)
          (NP (DT a) (NN light)))
        (PP (IN in)
          (NP
            (NP (PRP$ her) (NN countenance))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD came)
                  (PP (IN from)
                    (NP (DT a) (JJR higher) (NN source)))
                  (, ,)
                  (PP (IN from)
                    (NP
                      (NP (DT the) (JJ same) (NN nest))
                      (PP (IN as)
                        (NP (DT the) (NN sun) (PRP himself))))))))))))
    (. .)))

det(sun-2, The-1)
nsubj(setting-4, sun-2)
aux(setting-4, was-3)
root(ROOT-0, setting-4)
prep_behind(setting-4, her-6)
nsubj(looked-10, she-9)
conj_and(setting-4, looked-10)
advmod(stepped-15, as-11)
mark(stepped-15, if-12)
nsubj(stepped-15, she-13)
aux(stepped-15, had-14)
advcl(looked-10, stepped-15)
prep_from(stepped-15, it-17)
mark(touched-20, as-18)
nsubj(touched-20, it-19)
advcl(stepped-15, touched-20)
det(ground-22, the-21)
dobj(touched-20, ground-22)
prep_on(stood-26, ground-22)
nsubj(stood-26, she-25)
rcmod(ground-22, stood-26)
amod(ground-22, rosy-28)
det(rosiness-31, the-30)
prep_with(rosy-28, rosiness-31)
det(sun-34, the-33)
prep_of(rosiness-31, sun-34)
conj_and(setting-4, with-37)
conj_but(looked-10, with-37)
det(light-39, a-38)
pobj(with-37, light-39)
poss(countenance-42, her-41)
prep_in(looked-10, countenance-42)
nsubj(came-44, countenance-42)
rcmod(countenance-42, came-44)
det(source-48, a-46)
amod(source-48, higher-47)
prep_from(came-44, source-48)
det(nest-53, the-51)
amod(nest-53, same-52)
prep_from(came-44, nest-53)
det(sun-56, the-55)
prep_as(nest-53, sun-56)
npadvmod(sun-56, himself-57)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD paused)
        (PP (CC but)
          (NP (DT a) (NN moment))))
      (, ,)
      (VP (VBD ran)
        (PRT (RP down))
        (NP (DT the) (NN hill)))
      (, ,)
      (CC and)
      (VP (VBD found)
        (NP (PRP$ her) (NN mother))
        (S
          (VP (VBG making)
            (NP (DT the) (NN porridge))))))
    (. .)))

nsubj(paused-2, She-1)
nsubj(ran-7, She-1)
nsubj(found-13, She-1)
root(ROOT-0, paused-2)
prep(paused-2, but-3)
det(moment-5, a-4)
pobj(but-3, moment-5)
conj_and(paused-2, ran-7)
prt(ran-7, down-8)
det(hill-10, the-9)
dobj(ran-7, hill-10)
conj_and(paused-2, found-13)
poss(mother-15, her-14)
dobj(found-13, mother-15)
xcomp(found-13, making-16)
det(porridge-18, the-17)
dobj(making-16, porridge-18)

(ROOT
  (S
    (S
      (NP (NN Mother)
        (CC and)
        (NN daughter))
      (ADVP (RB neither))
      (VP
        (VP (VBD embraced))
        (, ,)
        (CC nor)
        (VP (VBD kissed))
        (, ,)
        (CC nor)
        (ADVP (RB even))
        (VP (VBD shook)
          (NP (NNS hands)))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP$ their) (NNS faces))
        (VP (VBD glowed)
          (PP (IN with)
            (NP (NN delight)))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (NNS words))
          (PP (IN of)
            (NP (NN joy)
              (CC and)
              (NN warmest) (NNS welcome))))
        (VP (VBD flowed)
          (PP (IN between)
            (NP (PRP them))))))
    (. .)))

nsubj(embraced-5, Mother-1)
nsubj(kissed-8, Mother-1)
nsubj(shook-12, Mother-1)
conj_and(Mother-1, daughter-3)
nsubj(embraced-5, daughter-3)
advmod(embraced-5, neither-4)
root(ROOT-0, embraced-5)
conj_nor(embraced-5, kissed-8)
advmod(shook-12, even-11)
conj_nor(embraced-5, shook-12)
dobj(shook-12, hands-13)
poss(faces-17, their-16)
nsubj(glowed-18, faces-17)
conj_but(embraced-5, glowed-18)
prep_with(glowed-18, delight-20)
nsubj(flowed-29, words-23)
nn(welcome-28, joy-25)
conj_and(joy-25, warmest-27)
nn(welcome-28, warmest-27)
prep_of(words-23, welcome-28)
conj_but(embraced-5, flowed-29)
conj_and(glowed-18, flowed-29)
prep_between(flowed-29, them-31)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (NNP ye) (NNP haena))
    (VP (VBD lost)
      (NP
        (NP (NN yer) (NN place))
        (, ,)
        (NP (NN hae) (NNS ye))
        (, ,))
      (ADVP (RB hinny)))
    (. ?) ('' '')))

cc(lost-5, But-2)
nn(haena-4, ye-3)
nsubj(lost-5, haena-4)
root(ROOT-0, lost-5)
nn(place-7, yer-6)
dobj(lost-5, place-7)
nn(ye-10, hae-9)
appos(place-7, ye-10)
advmod(lost-5, hinny-12)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN mother)))
    (. .)))

root(ROOT-0, said-1)
det(mother-3, the-2)
dobj(said-1, mother-3)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No))
      (, ,)
      (NP (NN mother)))
    (: ;)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (NP (DT no) (NN fear) (NN o))
        ('' ')
        (SBAR (IN that) (, ,)
          (S
            (NP (RB as) (NN lang))
            (VP (VBZ 's)
              (NP
                (NP (DT the) (NN laird))
                (CC or)
                (NP
                  (NP (NNP Miss) (NNP Lexy) (POS 's))
                  (PP (TO to)
                    (NP (DT the) (NN fore))))))))))
    (. .)))

discourse(mother-4, No-2)
dep('s-7, mother-4)
expl('s-7, there-6)
root(ROOT-0, 's-7)
neg(o-10, no-8)
nn(o-10, fear-9)
nsubj('s-7, o-10)
mark(laird-18, that-12)
advmod(lang-15, as-14)
nsubj(laird-18, lang-15)
cop(laird-18, 's-16)
det(laird-18, the-17)
ccomp('s-7, laird-18)
nn(Lexy-21, Miss-20)
ccomp('s-7, Lexy-21)
conj_or(laird-18, Lexy-21)
det(fore-25, the-24)
prep_to(Lexy-21, fore-25)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP tret)
        (NP (PRP me))))
    (: --)
    (S
      (NP (PRP I))
      (ADVP (RB winna))
      (VP (VBP say)
        (SBAR
          (SBAR (IN like)
            (S
              (NP
                (NP (JJ ane) (NN o) (POS '))
                (NN themsel))
              (VP (VBZ 's))))
          (, ,)
          (CC but)
          (SBAR (IN as)
            (S
              (SBAR (IN if)
                (S
                  (NP (PRP they))
                  (VP (MD would)
                    (ADVP (RB hae))
                    (VP (VB likit)
                      (NP (PRP me))
                      (PP (IN for)
                        (NP
                          (NP (JJ ane) (NN o) (POS '))
                          (JJ themsel) (NNS 's)))))))
              (, ,)
              (VP (VB gien)
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBD had)
                      (VP (VBN pleased)
                        (NP
                          (NP (DT the)
                            (NAC (NNP Lord)
                              (PP (TO to)
                                (NP
                                  (NP
                                    (NP (NNP sen) (POS '))
                                    (NX (FW me)))
                                  (NP
                                    (NP (PRP$ their) (NN way))
                                    (ADVP (RB instead))))))
                            (NN o) (POS '))
                          (NN yours))))))))))))
    (. .)))

nsubj(tret-2, They-1)
root(ROOT-0, tret-2)
dobj(tret-2, me-3)
nsubj(say-7, I-5)
advmod(say-7, winna-6)
parataxis(tret-2, say-7)
mark('s-13, like-8)
amod(o-10, ane-9)
poss(themsel-12, o-10)
nsubj('s-13, themsel-12)
nsubj(gien-30, themsel-12)
advcl(say-7, 's-13)
mark(gien-30, as-16)
mark(likit-21, if-17)
nsubj(likit-21, they-18)
aux(likit-21, would-19)
advmod(likit-21, hae-20)
advcl(gien-30, likit-21)
dobj(likit-21, me-22)
amod(o-25, ane-24)
poss('s-28, o-25)
amod('s-28, themsel-27)
prep_for(likit-21, 's-28)
advcl(say-7, gien-30)
conj_but('s-13, gien-30)
nsubj(pleased-33, it-31)
aux(pleased-33, had-32)
ccomp(gien-30, pleased-33)
det(o-43, the-34)
dep(o-43, Lord-35)
poss(me-39, sen-37)
prep_to(Lord-35, me-39)
poss(way-41, their-40)
dep(me-39, way-41)
advmod(way-41, instead-42)
poss(yours-45, o-43)
dobj(pleased-33, yours-45)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 're)
      (SBAR (IN that)
        (S
          (NP
            (ADJP (JJ guid)
              (PP (TO to)
                (NP (PRP me))))
            (NNP ye) (NNP canna))
          (VP (VBP think)))))
    (. !) ('' '')))

nsubj('re-2, They-1)
root(ROOT-0, 're-2)
mark(think-9, that-3)
amod(canna-8, guid-4)
prep_to(guid-4, me-6)
nn(canna-8, ye-7)
nsubj(think-9, canna-8)
ccomp('re-2, think-9)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (WDT what))
    (VP (VBZ 's)
      (NP
        (NP (JJ broucht) (NNS ye))
        (NP (DT the) (NN day))))
    (. ?) ('' '')))

advmod(ye-6, Then-2)
nsubj(ye-6, what-3)
cop(ye-6, 's-4)
amod(ye-6, broucht-5)
root(ROOT-0, ye-6)
det(day-8, the-7)
dep(ye-6, day-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP beggit)
      (PP (IN for)
        (NP (DT a) (NN play-day))))
    (. .)))

nsubj(beggit-3, I-2)
root(ROOT-0, beggit-3)
det(play-day-6, a-5)
prep_for(beggit-3, play-day-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP wantit)
      (S
        (VP (TO to)
          (VP (VB see)
            (NP (DT An) (`` `) (NN rew))))))
    (. .) ('' '')))

nsubj(wantit-2, I-1)
nsubj(see-4, I-1)
root(ROOT-0, wantit-2)
aux(see-4, to-3)
xcomp(wantit-2, see-4)
det(rew-7, An-5)
dobj(see-4, rew-7)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Eh))
    (, ,)
    (NP (NNS lass))
    (. !)))

root(ROOT-0, Eh-2)
dep(Eh-2, lass-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ feart)
        (PP (IN for)
          (NP (PRP ye)))))
    (. !)))

nsubj(feart-3, I-1)
cop(feart-3, 'm-2)
root(ROOT-0, feart-3)
prep_for(feart-3, ye-5)

(ROOT
  (S
    (NP (NNP Ye) (NNP maunna))
    (VP (VBD set)
      (NP (NN yer) (NN hert) (NN sae) (NN hie)))
    (. !)))

nn(maunna-2, Ye-1)
nsubj(set-3, maunna-2)
root(ROOT-0, set-3)
nn(hie-7, yer-4)
nn(hie-7, hert-5)
nn(hie-7, sae-6)
dobj(set-3, hie-7)

(ROOT
  (S
    (S
      (NP (DT An) (`` `) (NN rew))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (JJS best) (NN o) (POS '))
          (NNS men))))
    (, ,)
    (CC but)
    (S
      (NP (DT a) (NNS lass) (NN canna))
      (VP (VBP hae)
        (SBAR
          (S
            (NP
              (NP (DT a) (NN man) (NN til) (NN hersel) (POS '))
              (NN jist))
            (VP (VBP 'cause)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBZ 's)
                    (NP
                      (NP (DT the) (JJS best) (NN man))
                      (VP (VBG i) ('' ')
                        (NP (DT the) (NN warl))
                        ('' ')))))))))))
    (. !) ('' '')))

det(rew-3, An-1)
nsubj(men-9, rew-3)
cop(men-9, 's-4)
det(o-7, the-5)
amod(o-7, best-6)
poss(men-9, o-7)
root(ROOT-0, men-9)
det(canna-14, a-12)
nn(canna-14, lass-13)
nsubj(hae-15, canna-14)
conj_but(men-9, hae-15)
det(hersel-19, a-16)
nn(hersel-19, man-17)
nn(hersel-19, til-18)
poss(jist-21, hersel-19)
nsubj('cause-22, jist-21)
ccomp(hae-15, 'cause-22)
nsubj(man-27, he-23)
cop(man-27, 's-24)
det(man-27, the-25)
amod(man-27, best-26)
ccomp('cause-22, man-27)
vmod(man-27, i-28)
det(warl-31, the-30)
dobj(i-28, warl-31)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBP mean)
        (NP (PRP ye))
        (PP (IN by)
          (NP
            (NP (DT that))
            (, ,)
            (NP (NN mother))))))
    (. ?) ('' '')))

nsubj(mean-3, What-2)
root(ROOT-0, mean-3)
dobj(mean-3, ye-4)
prep_by(mean-3, that-6)
appos(that-6, mother-8)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Dawtie))
      (, ,)
      (S
        (VP (VBG looking)
          (ADJP
            (NP (DT a) (RB little))
            (JJ scared)))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Dawtie-2)
vmod(said-1, looking-4)
det(little-6, a-5)
npadvmod(scared-7, little-6)
acomp(looking-4, scared-7)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VBG Am)
        (NP (PRP I) (DT no))
        ('' ')
        (S
          (VP (TO to)
            (VP (VB lo'e)
              (NP (DT An) (`` `) (NN rew)))))))
    (, ,)
    (VP (VBD 'cause)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBZ 's) (`` `)
            (ADJP (JJ maist)
              (PP (IN as)
                (NP
                  (NP (NN guid) (POS 's))
                  (NAC (DT the) (NNP Lord))
                  (NN wad) (NN hae))))))))
    (NP (PRP him))
    (. ?)))

cop(I-3, Am-2)
dep('cause-12, I-3)
dep(I-3, no-4)
aux(lo'e-7, to-6)
vmod(I-3, lo'e-7)
det(rew-10, An-8)
dobj(lo'e-7, rew-10)
root(ROOT-0, 'cause-12)
nsubj(maist-16, he-13)
cop(maist-16, 's-14)
ccomp('cause-12, maist-16)
poss(hae-23, guid-18)
det(Lord-21, the-20)
dep(hae-23, Lord-21)
nn(hae-23, wad-22)
prep_as(maist-16, hae-23)
nsubj('cause-12, him-24)

(ROOT
  (S
    (NP (NNP Wad) (NNP ye))
    (VP (VBP hae)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP hate)
            (NP (PRP him))
            (PP (IN for) (`` `)
              (NP (NN t)))))))
    (. ?)))

nn(ye-2, Wad-1)
nsubj(hae-3, ye-2)
root(ROOT-0, hae-3)
nsubj(hate-5, me-4)
ccomp(hae-3, hate-5)
dobj(hate-5, him-6)
prep_for(hate-5, t-9)

(ROOT
  (SQ (VBZ Has)
    (NP (JJ na)
      (NP (PRP he)))
    (VP (VBN taught)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB lo'e)
            (NP
              (NP (NNP God))
              (: --)
              (S
                (VP (TO to)
                  (VP (VB lo'e)
                    (S
                      (ADJP
                        (NP (PRP Him))
                        (JJR better))
                      (NP (CC nor)
                        (NP (NN father))
                        (, ,)
                        (NP (NN mither))
                        (, ,)
                        (NP (DT An) (`` `) (NN rew))
                        (, ,)
                        (CC or)
                        (NP (NN onybody))))))))))))
    (. ?)))

aux(taught-4, Has-1)
amod(he-3, na-2)
nsubj(taught-4, he-3)
root(ROOT-0, taught-4)
dobj(taught-4, me-5)
nsubj(lo'e-7, me-5)
aux(lo'e-7, to-6)
xcomp(taught-4, lo'e-7)
dobj(lo'e-7, God-8)
aux(lo'e-11, to-10)
vmod(God-8, lo'e-11)
npadvmod(better-13, Him-12)
acomp(lo'e-11, better-13)
dep(better-13, father-15)
dep(better-13, mither-17)
conj_nor(father-15, mither-17)
det(rew-21, An-19)
dep(better-13, rew-21)
conj_nor(father-15, rew-21)
dep(better-13, onybody-24)
conj_or(father-15, onybody-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD _)
      (SBAR
        (S
          (NP (JJ wull) (NNS _))
          (VP (VBP lo'e)
            (NP (DT An) (`` `) (NN rew))))))
    (. !)))

nsubj(_-2, I-1)
root(ROOT-0, _-2)
amod(_-4, wull-3)
nsubj(lo'e-5, _-4)
ccomp(_-2, lo'e-5)
det(rew-8, An-6)
dobj(lo'e-5, rew-8)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD can)
      (NP (PRP ye))
      (VP (VB mean)
        (FRAG (, ,)
          (NP (NN mother)))))
    (. ?) ('' '')))

dobj(mean-4, What-1)
aux(mean-4, can-2)
nsubj(mean-4, ye-3)
root(ROOT-0, mean-4)
dep(mean-4, mother-6)

(ROOT
  (S (`` ``)
    (S
      (SBAR
        (WHNP (WP What))
        (S
          (NP (PRP I))
          (VP (VBP mean))))
      (, ,)
      (NP (NNP Dawtie) (, ,))
      (VP (VBZ is) (, ,)
        (SBAR (IN that)
          (S
            (NP (NNP ye) (NNP mamma))
            (VP (VBP think)
              (SBAR (IN because)
                (S
                  (NP (PRP ye))
                  (VP (VBP lo'e)
                    (SBAR
                      (S
                        (NP (PRP him))
                        (VP (VBD ye)
                          (SBAR
                            (S
                              (NP (NN maun))
                              (VP (VBP hae)
                                (NP (PRP him))))))))))))))))
    (: ;)
    (S
      (NP (NNP ye) (NNP maunna))
      (VP (VBP think)
        (NP
          (NP (NNP ye) (NNP canna) (NNP du) (NN wantin) (POS '))
          (NP (DT An) (`` `) (NN rew)))))
    (. !) ('' '')))

dobj(mean-4, What-2)
nsubj(mean-4, I-3)
advcl(is-8, mean-4)
nsubj(is-8, Dawtie-6)
root(ROOT-0, is-8)
mark(think-13, that-10)
nn(mamma-12, ye-11)
nsubj(think-13, mamma-12)
ccomp(is-8, think-13)
mark(lo'e-16, because-14)
nsubj(lo'e-16, ye-15)
advcl(think-13, lo'e-16)
nsubj(ye-18, him-17)
ccomp(lo'e-16, ye-18)
nsubj(hae-20, maun-19)
ccomp(ye-18, hae-20)
dobj(hae-20, him-21)
nn(maunna-24, ye-23)
nsubj(think-25, maunna-24)
parataxis(is-8, think-25)
nn(wantin-29, ye-26)
nn(wantin-29, canna-27)
nn(wantin-29, du-28)
dobj(think-25, wantin-29)
iobj(think-25, wantin-29)
det(rew-33, An-31)
dep(wantin-29, rew-33)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADJP (JJ true))
        (, ,)
        (INTJ (UH mother))))
    (, ,)
    (NP (PRP I))
    (VP (VBZ kenna)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (MD should)
            (VP (VB do)
              (NP
                (NP (NN wantin) (POS '))
                (NP (DT An) (`` `) (NN rew))))))))
    (. !)))

nsubj(true-4, It-2)
cop(true-4, 's-3)
ccomp(kenna-9, true-4)
discourse(true-4, mother-6)
nsubj(kenna-9, I-8)
root(ROOT-0, kenna-9)
dobj(do-13, what-10)
nsubj(do-13, I-11)
aux(do-13, should-12)
ccomp(kenna-9, do-13)
dobj(do-13, wantin-14)
iobj(do-13, wantin-14)
det(rew-18, An-16)
dep(wantin-14, rew-18)

(ROOT
  (SQ (VBZ Is)
    (NP (NNP na))
    (NP (PRP he))
    (NP
      (NP (JJ aye) (NN shovin) (POS '))
      (NP
        (NP
          (NP (DT the) (NN door) (NN o) (POS '))
          (NP
            (NP (DT the) (NN kingdom))
            (NP (DT a) (NN wee))))
        (ADJP
          (ADJP (JJR wider)
            (S
              (VP (TO to)
                (VP (VB lat)
                  (S
                    (NP (PRP me))
                    (VP (VB see)))))))
          (PP (IN in)
            (NP (DT the) (JJR better))))))
    (. ?)))

cop(shovin-5, Is-1)
nsubj(shovin-5, na-2)
dep(shovin-5, he-3)
amod(shovin-5, aye-4)
root(ROOT-0, shovin-5)
det(o-9, the-7)
nn(o-9, door-8)
dep(shovin-5, o-9)
det(kingdom-12, the-11)
dep(o-9, kingdom-12)
det(wee-14, a-13)
dep(kingdom-12, wee-14)
amod(o-9, wider-15)
aux(lat-17, to-16)
xcomp(wider-15, lat-17)
nsubj(see-19, me-18)
ccomp(lat-17, see-19)
det(better-22, the-21)
prep_in(wider-15, better-22)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (RB little) (JJ ferly)
        (PRN (-LRB- -LRB-)
          (S
            (NP (NNP _) (NNP marvel))
            (VP (VBZ _)))
          (-RRB- -RRB-))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP lo'e)
              (NP (PRP him)))))))
    (. !)))

nsubj(ferly-4, It-1)
cop(ferly-4, 's-2)
advmod(ferly-4, little-3)
root(ROOT-0, ferly-4)
nn(marvel-7, _-6)
nsubj(_-8, marvel-7)
dep(ferly-4, _-8)
nsubj(lo'e-11, I-10)
ccomp(ferly-4, lo'e-11)
dobj(lo'e-11, him-12)

(ROOT
  (FRAG (CC But)
    (SBAR (IN as)
      (S
        (VP (TO to)
          (VP (VB wantin) (`` `)
            (NP (PRP him))
            (PP (IN for)
              (NP
                (NP (PRP$ my) (NN ain) (NN man))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP ye))
                    (VP (VBP hae)
                      (NP (PRP$ my) (NN father)))))))))))
    (. !)))

cc(wantin-4, But-1)
mark(wantin-4, as-2)
aux(wantin-4, to-3)
root(ROOT-0, wantin-4)
dobj(wantin-4, him-6)
poss(man-10, my-8)
nn(man-10, ain-9)
prep_for(wantin-4, man-10)
mark(hae-14, as-12)
nsubj(hae-14, ye-13)
dep(man-10, hae-14)
poss(father-16, my-15)
dobj(hae-14, father-16)

(ROOT
  (S (: --)
    (ADJP (JJ mother))
    (, ,)
    (NP (PRP I))
    (VP (MD wad)
      (VP (VB be)
        (NP
          (NP (JJ ashamet) (NN o) (POS '))
          (NN mysel) ('' ')
          (S
            (VP (TO to)
              (VP (VB think)
                (NP
                  (NP
                    (NP (NNP o) (POS '))
                    (NN ony) (NN sic))
                  (NP (DT a) (NN thing)))))))))
    (. !)))

dep(mysel-10, mother-2)
nsubj(mysel-10, I-4)
aux(mysel-10, wad-5)
cop(mysel-10, be-6)
amod(o-8, ashamet-7)
poss(mysel-10, o-8)
root(ROOT-0, mysel-10)
aux(think-13, to-12)
vmod(mysel-10, think-13)
poss(sic-17, o-14)
nn(sic-17, ony-16)
dobj(think-13, sic-17)
iobj(think-13, sic-17)
det(thing-19, a-18)
dep(sic-17, thing-19)

(ROOT
  (S (: --)
    (PP (IN clean)
      (NP
        (NP (JJ affrontit) (NN wi) (POS '))
        (JJ mysel) ('' ') (NN I)))
    (NP (NN wad))
    (VP (VBP be))
    (. !) ('' '')))

amod(wi-4, affrontit-3)
poss(I-8, wi-4)
amod(I-8, mysel-6)
prep_clean(be-10, I-8)
nsubj(be-10, wad-9)
root(ROOT-0, be-10)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Weel))
    (, ,)
    (ADVP (RB weel))
    (, ,)
    (NP (NN bairn))
    (. !)))

root(ROOT-0, Weel-2)
dep(Weel-2, weel-4)
dep(Weel-2, bairn-6)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (VBD was)
      (VP (VBN aye)
        (NP (DT a)
          (ADJP (JJ wise)
            (PP (IN like)
              (NP
                (NP (NNS lass))
                (, ,)
                (NP (DT an)))))
          ('' ') (NN I))
        (NP
          (NP (NN maun) (NN lippen) (NN til))
          (ADVP (RB ye)))))
    (. !)))

nsubjpass(aye-3, Ye-1)
auxpass(aye-3, was-2)
root(ROOT-0, aye-3)
det(I-11, a-4)
amod(I-11, wise-5)
prep_like(wise-5, lass-7)
appos(lass-7, an-9)
iobj(aye-3, I-11)
nn(til-14, maun-12)
nn(til-14, lippen-13)
dobj(aye-3, til-14)
advmod(til-14, ye-15)

(ROOT
  (FRAG
    (NP (RB Only) (JJ luik))
    (S
      (VP (TO to)
        (VP (VB yer)
          (NP (NN hert)))))
    (. .) ('' '')))

advmod(luik-2, Only-1)
root(ROOT-0, luik-2)
aux(yer-4, to-3)
dep(luik-2, yer-4)
dobj(yer-4, hert-5)

(ROOT
  (S (`` ``)
    (SBAR (IN As)
      (S
        (NP (IN for) (DT no))
        (VP
          (VP (`` ') (VB lo'ein) ('' ')
            (NP (PRP him)))
          (, ,)
          (VP (VB mither) (: --)
            (NP (PRP me)))
          (NP (DT that) (NN canna) (NN luik))
          (PP (IN at)
            (NP
              (NP
                (NP (DT a) (NN blin) (POS '))
                (NN kittlin) (POS '))
              (NN ohn))))))
    (VP (VBD lo'ed)
      (NP (PRP it)))
    (. !)))

mark(lo'ein-6, As-2)
amod(no-4, for-3)
nsubj(lo'ein-6, no-4)
csubj(lo'ed-23, lo'ein-6)
dobj(lo'ein-6, him-8)
dep(lo'ein-6, mither-10)
dobj(mither-10, me-12)
parataxis(mither-10, me-12)
det(luik-15, that-13)
nn(luik-15, canna-14)
dobj(lo'ein-6, luik-15)
det(blin-18, a-17)
poss(kittlin-20, blin-18)
poss(ohn-22, kittlin-20)
prep_at(lo'ein-6, ohn-22)
root(ROOT-0, lo'ed-23)
dobj(lo'ed-23, it-24)

(ROOT
  (NP (: --)
    (NP (NN lo))
    (, ,)
    (NP (NN mither))
    (. !)))

root(ROOT-0, lo-2)
appos(lo-2, mither-4)

(ROOT
  (S
    (S
      (NP (NNP God))
      (VP (VBD made)
        (SBAR
          (S
            (NP (PRP me))
            (VP (VBP sae))))))
    (, ,)
    (NP (DT an) (NN didna))
    (VP (VBP mean)
      (S
        (NP (PRP me) (DT no))
        ('' ')
        (VP (TO to)
          (VP (VB lo'e)
            (NP (DT An) (`` `) (NN rew))))))
    (. !) ('' '')))

nsubj(made-2, God-1)
ccomp(mean-8, made-2)
nsubj(sae-4, me-3)
ccomp(made-2, sae-4)
det(didna-7, an-6)
nsubj(mean-8, didna-7)
root(ROOT-0, mean-8)
dobj(mean-8, me-9)
nsubj(lo'e-13, me-9)
dep(me-9, no-10)
aux(lo'e-13, to-12)
xcomp(mean-8, lo'e-13)
det(rew-16, An-14)
dobj(lo'e-13, rew-16)

(ROOT
  (INTJ (`` ``) (UH Andrew) (. !) ('' '')))

root(ROOT-0, Andrew-2)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD repeated) (, ,)
      (SBAR (RB as) (IN if)
        (S
          (NP (DT the) (NN word))
          (VP (VBD meant)
            (NP
              (NP (DT the) (NN perfection))
              (PP (IN of)
                (NP
                  (NP (NN earth) (POS 's))
                  (NN worthiest)
                  (S
                    (VP (VBG rendering)
                      (S
                        (NP
                          (NP (DT the) (NN idea))
                          (PP (IN of)
                            (NP (NN appropriation))))
                        (ADJP (RB too) (JJ absurd))))))))))))
    (. .)))

nsubj(repeated-2, she-1)
root(ROOT-0, repeated-2)
advmod(meant-8, as-4)
mark(meant-8, if-5)
det(word-7, the-6)
nsubj(meant-8, word-7)
advcl(repeated-2, meant-8)
det(perfection-10, the-9)
dobj(meant-8, perfection-10)
poss(worthiest-14, earth-12)
prep_of(perfection-10, worthiest-14)
dep(worthiest-14, rendering-15)
det(idea-17, the-16)
nsubj(absurd-21, idea-17)
prep_of(idea-17, appropriation-19)
advmod(absurd-21, too-20)
xcomp(rendering-15, absurd-21)

(ROOT
  (S
    (S
      (NP (NN Silence))
      (VP (VBD followed)))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN mother))
      (VP (VBD was)
        (VP (VBG brooding))))
    (. .)))

nsubj(followed-2, Silence-1)
root(ROOT-0, followed-2)
det(mother-6, the-5)
nsubj(brooding-8, mother-6)
aux(brooding-8, was-7)
conj_but(followed-2, brooding-8)

(ROOT
  (S
    (NP
      (NP (`` ``) (JJ Ye) (NN maun) (NN bethink) (NNS ye))
      (, ,)
      (NP (NNS lass))
      (, ,))
    (VP (VBP hoo)
      (ADVP (RB far))
      (NP
        (NP (PRP he) (POS 's))
        (JJ abune) (NN ye)))
    (. !) ('' '')))

amod(ye-5, Ye-2)
nn(ye-5, maun-3)
nn(ye-5, bethink-4)
nsubj(hoo-9, ye-5)
appos(ye-5, lass-7)
root(ROOT-0, hoo-9)
advmod(hoo-9, far-10)
poss(ye-14, he-11)
amod(ye-14, abune-13)
dobj(hoo-9, ye-14)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said)
      (PP (IN at)
        (NP (NN length))))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
prep_at(said-2, length-4)

(ROOT
  (S
    (PP (IN As)
      (NP
        (NP (DT the) (NN son))
        (PP (IN of)
          (NP
            (NP (DT the) (NN farmer))
            (SBAR
              (WHPP (IN on)
                (WHNP (WP$ whose) (NNS land)))
              (S
                (NP (PRP$ her) (NN husband))
                (VP (VBD was)
                  (NP (DT a) (NN cotter)))))))))
    (, ,)
    (NP (NNP Andrew))
    (VP (VBD seemed)
      (PP (TO to)
        (NP (PRP her)))
      (SBAR
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT the) (NN laird))
            (VP (VBD seemed)
              (PP (TO to)
                (NP (JJ old) (NNP John) (NNP Ingram))))))
        (, ,)
        (CC and)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT the) (NN earl))
            (VP (VBD seemed)
              (PP (TO to)
                (NP (DT the) (NN laird)))
              (, ,)
              (SBAR (IN though)
                (S
                  (NP
                    (NP (DT the) (NN laird) (POS 's))
                    (NN family))
                  (VP (VBD was)
                    (VP (VBN ancient)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (DT the) (NN earl) (POS 's))
                          (VP (VBD had) (RB not)
                            (VP (VBN been)
                              (VP (VBN heard)
                                (PP (IN of))))))))))))))))
    (. .)))

det(son-3, the-2)
prep_as(seemed-17, son-3)
det(farmer-6, the-5)
prep_of(son-3, farmer-6)
poss(land-9, farmer-6)
prep_on(cotter-14, land-9)
poss(husband-11, her-10)
nsubj(cotter-14, husband-11)
cop(cotter-14, was-12)
det(cotter-14, a-13)
rcmod(farmer-6, cotter-14)
nsubj(seemed-17, Andrew-16)
root(ROOT-0, seemed-17)
prep_to(seemed-17, her-19)
dobj(seemed-23, what-20)
det(laird-22, the-21)
nsubj(seemed-23, laird-22)
dep(seemed-17, seemed-23)
amod(Ingram-27, old-25)
nn(Ingram-27, John-26)
prep_to(seemed-23, Ingram-27)
dobj(seemed-33, what-30)
det(earl-32, the-31)
nsubj(seemed-33, earl-32)
dep(seemed-17, seemed-33)
conj_and(seemed-23, seemed-33)
det(laird-36, the-35)
prep_to(seemed-33, laird-36)
mark(ancient-44, though-38)
det(laird-40, the-39)
poss(family-42, laird-40)
nsubjpass(ancient-44, family-42)
auxpass(ancient-44, was-43)
advcl(seemed-33, ancient-44)
advmod(heard-52, when-45)
det(earl-47, the-46)
nsubjpass(heard-52, earl-47)
possessive(earl-47, 's-48)
aux(heard-52, had-49)
neg(heard-52, not-50)
auxpass(heard-52, been-51)
advcl(ancient-44, heard-52)
prep(heard-52, of-53)

(ROOT
  (S (CC But)
    (NP (NNP Dawtie))
    (VP (VBD understood)
      (SBAR
        (S
          (NP (NNP Andrew))
          (VP
            (ADVP (RBR better) (IN than))
            (VBD did)
            (NP (PRP$ her) (NN mother))))))
    (. .)))

cc(understood-3, But-1)
nsubj(understood-3, Dawtie-2)
root(ROOT-0, understood-3)
nsubj(did-7, Andrew-4)
advmod(than-6, better-5)
advmod(did-7, than-6)
ccomp(understood-3, did-7)
poss(mother-9, her-8)
dobj(did-7, mother-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You)
        (CC and)
        (PRP me))
      (VP (VBZ sees)
        (NP (PRP him))
        (ADVP (RB far))
        (NP
          (NP (NN abune))
          (, ,)
          (NP (NN mother)))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Andrew) (NNP himsel) (POS '))
      (ADVP (RB never))
      (VP (VBZ thinks)
        (NP
          (NP (NNP o) (POS '))
          (NN nae) (NN sic) (NNS things))))
    (. .)))

nsubj(sees-5, You-2)
conj_and(You-2, me-4)
nsubj(sees-5, me-4)
root(ROOT-0, sees-5)
dobj(sees-5, him-6)
advmod(sees-5, far-7)
dobj(sees-5, abune-8)
appos(abune-8, mother-10)
nn(himsel-14, Andrew-13)
nsubj(thinks-17, himsel-14)
neg(thinks-17, never-16)
conj_but(sees-5, thinks-17)
poss(things-22, o-18)
nn(things-22, nae-20)
nn(things-22, sic-21)
dobj(thinks-17, things-22)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ 's)
        (ADVP (RB sae))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB luikin) ('' ')
                (PP (RP up))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBZ 's)
      (VP (VBN forgotten)
        (S
          (VP (TO to)
            (VP (VB luik)
              (NP (NN doon)))))))
    (. .)))

nsubjpass(used-4, He-1)
nsubj(luikin-6, He-1)
auxpass(used-4, 's-2)
advmod(used-4, sae-3)
ccomp(forgotten-12, used-4)
aux(luikin-6, to-5)
xcomp(used-4, luikin-6)
prep(luikin-6, up-8)
nsubjpass(forgotten-12, he-10)
nsubj(luik-14, he-10)
auxpass(forgotten-12, 's-11)
root(ROOT-0, forgotten-12)
aux(luik-14, to-13)
xcomp(forgotten-12, luik-14)
dobj(luik-14, doon-15)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ bauds)
      (NP
        (NP
          (NP (PRP$ his) (NN lan) (POS '))
          (NN frae))
        (ADJP (DT a) (JJR higher)))
      (PP (IN than)
        (NP
          (NP (DT the) (NN laird))
          (, ,)
          (CC or)
          (NP (DT the) (JJ yerl) (NN himsel))))
      ('' '))
    (. !) ('' '')))

nsubj(bauds-2, He-1)
root(ROOT-0, bauds-2)
poss(lan-4, his-3)
poss(frae-6, lan-4)
dobj(bauds-2, frae-6)
det(higher-8, a-7)
amod(frae-6, higher-8)
det(laird-11, the-10)
prep_than(bauds-2, laird-11)
det(himsel-16, the-14)
amod(himsel-16, yerl-15)
prep_than(bauds-2, himsel-16)
conj_or(laird-11, himsel-16)

(ROOT
  (S
    (NP (DT The) (NN mother))
    (VP (VBD was)
      (ADJP (JJ silent)))
    (. .)))

det(mother-2, The-1)
nsubj(silent-4, mother-2)
cop(silent-4, was-3)
root(ROOT-0, silent-4)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (ADJP
          (ADJP (NN faithful))
          (CC and)
          (ADJP (JJ true)))))
    (, ,)
    (CC but)
    (, ,)
    (S
      (S
        (VP (VBN fed)
          (PP (IN on)
            (NP
              (NP (DT the) (JJ dried) (NN fish))
              (PP (IN of)
                (NP
                  (NP (NN logic)
                    (CC and)
                    (NN system))
                  (CC and)
                  (NP (NNP Roman) (NNP legalism))))))))
      (, ,)
      (NP (PRP she))
      (VP (MD could) (RB not)
        (VP (VB follow)
          (NP
            (NP (DT the) (NNS simplicities))
            (PP (IN of)
              (NP
                (NP
                  (NP (PRP$ her) (NN daughter) (POS 's))
                  (NN religion))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP
                      (VP (VBD trusted)
                        (NP (DT neither))
                        (PP (IN in)
                          (NP
                            (NP (NNS notions))
                            (PP (IN about)
                              (NP (PRP him))))))
                      (, ,)
                      (CC nor)
                      (VP
                        (ADVP (RB even))
                        (PP (IN in)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP he))
                              (VP (VBD had)
                                (VP (VBN done))))))))))))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (DT the) (JJ live) (NN Christ)))
      (NP (PRP himself))
      (VP (VBD whom)
        (SBAR
          (S
            (NP (PRP she))
            (VP
              (VP (VBD loved))
              (CC and)
              (VP (VBD obeyed)))))))
    (. .)))

nsubj(faithful-3, She-1)
nsubj(true-5, She-1)
cop(faithful-3, was-2)
root(ROOT-0, faithful-3)
conj_and(faithful-3, true-5)
vmod(follow-25, fed-9)
det(fish-13, the-11)
amod(fish-13, dried-12)
prep_on(fed-9, fish-13)
prep_of(fish-13, logic-15)
prep_of(fish-13, system-17)
conj_and(logic-15, system-17)
nn(legalism-20, Roman-19)
prep_of(fish-13, legalism-20)
conj_and(logic-15, legalism-20)
nsubj(follow-25, she-22)
aux(follow-25, could-23)
neg(follow-25, not-24)
conj_but(faithful-3, follow-25)
det(simplicities-27, the-26)
dobj(follow-25, simplicities-27)
poss(daughter-30, her-29)
poss(religion-32, daughter-30)
prep_of(simplicities-27, religion-32)
nsubj(trusted-35, religion-32)
rcmod(religion-32, trusted-35)
dobj(trusted-35, neither-36)
prep_in(trusted-35, notions-38)
prep_about(notions-38, him-40)
rcmod(religion-32, even-43)
conj_nor(trusted-35, even-43)
dobj(done-48, what-45)
nsubj(done-48, he-46)
aux(done-48, had-47)
prepc_in(even-43, done-48)
det(Christ-54, the-52)
amod(Christ-54, live-53)
prep_in(whom-56, Christ-54)
nsubj(whom-56, himself-55)
conj_but(faithful-3, whom-56)
nsubj(loved-58, she-57)
nsubj(obeyed-60, she-57)
ccomp(whom-56, loved-58)
ccomp(whom-56, obeyed-60)
conj_and(loved-58, obeyed-60)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (NNP Andrew))
        (VP (VBD wanted)
          (S
            (VP (TO to)
              (VP (VB marry)
                (NP (PRP me))
                (PRN (, ,) ('' '')
                  (S
                    (NP (NNP Dawtie))
                    (VP (VBD went)
                      (PRT (RP on))
                      (, ,)
                      (S
                        (VP (VBG jealous)
                          (PP (IN for)
                            (NP
                              (NP (DT the) (JJ divine) (NN liberty))
                              (PP (IN of)
                                (NP (PRP$ her) (NN teacher)))))))))
                  (, ,) (`` ``))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (ADVP (RB never))
                    (VP (VBP cam)
                      (NP
                        (NP
                          (NP (NNP intil) (POS 's))
                          (NN heid))
                        (PRN (: --)
                          (NP
                            (NP (NNP na))
                            (, ,)
                            (NP (DT no) (NN ance)))
                          (: --)))
                      (PP
                        (NP
                          (NP (DT the) (JJ same) (NN bein) (POS '))
                          (NN ta'en))
                        (IN up)
                        (NP
                          (NP (NNP wi) (POS '))
                          (ADJP (RB far) (JJ ither))
                          (NNS things))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ wouldna)
      (VP (VB be)
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (VBD was)
              (SBAR (CC but)
                (S
                  (NP (DT a) (NN cotter))
                  (VP (VBZ lass)
                    (SBAR (IN that)
                      (S
                        (NP (PRP he))
                        (ADVP (RB wouldna))
                        (VP (VBP tak)
                          (NP (PRP$ his) (NN ain) (NN gait)))))))))))))
    (. !)))

mark(wanted-4, If-2)
nsubj(wanted-4, Andrew-3)
nsubj(marry-6, Andrew-3)
advcl(wouldna-49, wanted-4)
aux(marry-6, to-5)
xcomp(wanted-4, marry-6)
dobj(marry-6, me-7)
nsubj(went-11, Dawtie-10)
parataxis(marry-6, went-11)
prt(went-11, on-12)
xcomp(went-11, jealous-14)
det(liberty-18, the-16)
amod(liberty-18, divine-17)
prep_for(jealous-14, liberty-18)
poss(teacher-21, her-20)
prep_of(liberty-18, teacher-21)
nsubj(cam-26, which-24)
neg(cam-26, never-25)
dep(marry-6, cam-26)
poss(heid-29, intil-27)
dobj(cam-26, heid-29)
dep(heid-29, na-31)
neg(ance-34, no-33)
appos(na-31, ance-34)
det(bein-38, the-36)
amod(bein-38, same-37)
poss(ta'en-40, bein-38)
npadvmod(cam-26, ta'en-40)
poss(things-46, wi-42)
advmod(ither-45, far-44)
amod(things-46, ither-45)
prep_up(cam-26, things-46)
nsubj(wouldna-49, it-48)
root(ROOT-0, wouldna-49)
xcomp(wouldna-49, be-50)
mark(was-53, because-51)
nsubj(was-53, I-52)
advcl(be-50, was-53)
cc(lass-57, but-54)
det(cotter-56, a-55)
nsubj(lass-57, cotter-56)
ccomp(was-53, lass-57)
mark(tak-61, that-58)
nsubj(tak-61, he-59)
advmod(tak-61, wouldna-60)
ccomp(lass-57, tak-61)
poss(gait-64, his-62)
nn(gait-64, ain-63)
dobj(tak-61, gait-64)

(ROOT
  (S
    (S (CC But)
      (NP (DT the) (NN morn))
      (VP (VBZ 's)
        (NP (DT the) (NNP Sabbath) (NN day))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB hae)
          (NP (DT a) (NN walk) (NN thegither)))))
    (. .) ('' '')))

det(morn-3, the-2)
nsubj(day-7, morn-3)
cop(day-7, 's-4)
det(day-7, the-5)
nn(day-7, Sabbath-6)
root(ROOT-0, day-7)
nsubj(hae-12, we-10)
aux(hae-12, 'll-11)
conj_and(day-7, hae-12)
det(thegither-15, a-13)
nn(thegither-15, walk-14)
dobj(hae-12, thegither-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD dinna)
        (SBAR
          (S
            (NP
              (NP (DT a) (`` `) (NN thegither))
              (PP (IN like)
                (NP (NN thae))))
            (VP (VBZ walks)
              (NP (NN upo))
              ('' ')
              (NP (DT the) (JJ Sabbath) (NN day)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN mother))
    (. .)))

nsubj(dinna-3, I-2)
ccomp(said-17, dinna-3)
det(thegither-6, a-4)
nsubj(walks-9, thegither-6)
prep_like(thegither-6, thae-8)
ccomp(dinna-3, walks-9)
dobj(walks-9, upo-10)
det(day-14, the-12)
amod(day-14, Sabbath-13)
tmod(walks-9, day-14)
root(ROOT-0, said-17)
det(mother-19, the-18)
nsubj(said-17, mother-19)

(ROOT
  (S (`` ``)
    (NP (NNP Jesus))
    (VP (VBD walkit)
      (PP (IN on)
        (NP (DT the) (NNP Sabbath)))
      (PP
        (NP (DT the) (JJ same))
        (IN as)
        (NP
          (NP (NN ony) (NN ither) (NN day))
          (, ,)
          (NP (NN mother)))))
    (. !) ('' '')))

nsubj(walkit-3, Jesus-2)
root(ROOT-0, walkit-3)
det(Sabbath-6, the-5)
prep_on(walkit-3, Sabbath-6)
det(same-8, the-7)
npadvmod(walkit-3, same-8)
nn(day-12, ony-10)
nn(day-12, ither-11)
prep_as(walkit-3, day-12)
appos(day-12, mother-14)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Weel))
      (, ,)
      (CC but)
      (NP (PRP He))
      (VP (VBD kenned)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP He))
            (VP (VBD was)
              (ADJP (JJ aboot)))))))
    (. !) ('' '')))

nsubj(kenned-6, Weel-2)
conj_but(kenned-6, He-5)
nsubj(kenned-6, He-5)
root(ROOT-0, kenned-6)
dobj(aboot-10, what-7)
nsubj(aboot-10, He-8)
cop(aboot-10, was-9)
ccomp(kenned-6, aboot-10)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (NN sae))
    (VP (VBP do)
      (NP
        (NP (PRP I))
        (, ,)
        (NP (NN mother))))
    (. !)))

cc(do-4, And-2)
nsubj(do-4, sae-3)
root(ROOT-0, do-4)
dobj(do-4, I-5)
appos(I-5, mother-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP ken)
      (NP (PRP$ His) (NN wull)))
    (. !) ('' '')))

nsubj(ken-2, I-1)
root(ROOT-0, ken-2)
poss(wull-4, His-3)
dobj(ken-2, wull-4)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBD had)
      (NP
        (NP (NN aye) (NN something))
        (PP (IN on)
          (NP
            (NP (NNP han) (POS '))
            (NN fit)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN dune)
                    (S
                      (NP (NNP o) (POS ') (DT the) (NNP Sabbath)))))))))))
    (. !) ('' '')))

nsubj(had-3, He-2)
root(ROOT-0, had-3)
nn(something-5, aye-4)
dobj(had-3, something-5)
poss(fit-9, han-7)
prep_on(something-5, fit-9)
aux(dune-12, to-10)
auxpass(dune-12, be-11)
vmod(fit-9, dune-12)
poss(Sabbath-16, o-13)
det(Sabbath-16, the-15)
xcomp(dune-12, Sabbath-16)

(ROOT
  (S (`` ``)
    (CC And)
    (SBAR (RB so)
      (S
        (VP (VBP hae)
          (NP (PRP I))
          (NP (DT the) (NN day)))))
    (, ,)
    (VP (VBZ mother))
    (. .)))

cc(mother-9, And-2)
advmod(hae-4, so-3)
dep(mother-9, hae-4)
dobj(hae-4, I-5)
det(day-7, the-6)
tmod(hae-4, day-7)
root(ROOT-0, mother-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD was)
          (PP (TO to)
            (NP
              (NP (NNP du))
              (VP (VBG onything)
                (NP
                  (NP
                    (NP (DT no) (NN fit) (NN i) (POS '))
                    (NP (DT this)
                      (NP (PRP$ His) (NN warl) (POS '))))
                  (, ,)
                  (NP
                    (NP (NN luikin) (POS '))
                    (NN oot) (NN o))
                  ('' '))))))))
    (PRN
      (S
        (NP (DT the) (NN e))
        (VP (`` `) (VBZ en)
          (SBAR
            (S
              (NP (PRP He))
              (VP (VBP gae)
                (NP (PRP me)))))
          (, ,)
          (ADVP (RB wi))
          ('' ')
          (NP
            (NP (DT the)
              (NP (NNP han) (POS 's)))
            (, an) ('' ')
            (NP
              (NP (NNS feet))
              (SBAR
                (S
                  (NP (PRP He))
                  (VP (VBP gae)
                    (NP (PRP me)))))))))
      (, ,))
    (NP (PRP I))
    (PRN
      (S
        (NP (NN wad) (NN jist))
        (VP (VBP deserve)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ nippit))))))))
    (VP
      (VP (VBP oot)
        (PP (IN at)
          (NP (NN ance))))
      (, ,)
      (CC or)
      (VP (VBD sent)
        (NP (NN intil))
        (NP
          (NP (DT the) (NN ooter) (NN mirk))
          (PRN (-LRB- -LRB-)
            (ADJP
              (NP (CD _) (NNS darkness))
              (JJ _))
            (-RRB- -RRB-)))))
    (. !) ('' '')))

mark(was-3, If-1)
nsubj(was-3, I-2)
advcl(oot-48, was-3)
prep_to(was-3, du-5)
vmod(du-5, onything-6)
neg(i-9, no-7)
nn(i-9, fit-8)
dobj(onything-6, i-9)
det(warl-13, this-11)
poss(warl-13, His-12)
dep(i-9, warl-13)
poss(o-19, luikin-16)
nn(o-19, oot-18)
appos(i-9, o-19)
det(e-22, the-21)
nsubj(en-24, e-22)
parataxis(oot-48, en-24)
nsubj(gae-26, He-25)
ccomp(en-24, gae-26)
dobj(gae-26, me-27)
advmod(en-24, wi-29)
det(han-32, the-31)
dobj(en-24, han-32)
possessive(han-32, 's-33)
punct(han-32, an-34)
dep(han-32, feet-36)
nsubj(gae-38, He-37)
rcmod(feet-36, gae-38)
dobj(gae-38, me-39)
nsubj(oot-48, I-41)
nsubj(sent-53, I-41)
nn(jist-43, wad-42)
nsubj(deserve-44, jist-43)
nsubj(nippit-47, jist-43)
parataxis(oot-48, deserve-44)
aux(nippit-47, to-45)
cop(nippit-47, be-46)
xcomp(deserve-44, nippit-47)
root(ROOT-0, oot-48)
prep_at(oot-48, ance-50)
conj_or(oot-48, sent-53)
iobj(sent-53, intil-54)
det(mirk-57, the-55)
nn(mirk-57, ooter-56)
dobj(sent-53, mirk-57)
num(darkness-60, _-59)
npadvmod(_-61, darkness-60)
dep(mirk-57, _-61)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ mony) (NN maun) (NN fare))
        (ADJP (RB ill)))
      (ADVP (RB then))
      (, ,)
      (ADJP (JJ lass)))
    (. !) ('' '')))

expl('s-3, There-2)
root(ROOT-0, 's-3)
det(fare-7, a-4)
amod(fare-7, mony-5)
nn(fare-7, maun-6)
nsubj('s-3, fare-7)
amod(fare-7, ill-8)
advmod('s-3, then-9)
acomp('s-3, lass-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sayin) ('' ')
        (PP (RB only) (IN for)
          (ADJP (JJ mysel)))))
    ('' ') (. .)))

nsubj(sayin-4, I-2)
cop(sayin-4, 'm-3)
root(ROOT-0, sayin-4)
advmod(sayin-4, only-6)
prep_for(sayin-4, mysel-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP ken)
      (NP (JJ nane) (NN sae))
      (S
        (VP (TO to)
          (VP (VB blame)
            (SBAR (IN as)
              (S
                (NP (PRP I))
                (VP (MD would)
                  (VP (VB be)
                    (ADJP (JJ mysel) ('' '))))))))))
    (. .) ('' '')))

nsubj(ken-2, I-1)
root(ROOT-0, ken-2)
amod(sae-4, nane-3)
dobj(ken-2, sae-4)
aux(blame-6, to-5)
vmod(ken-2, blame-6)
mark(mysel-11, as-7)
nsubj(mysel-11, I-8)
aux(mysel-11, would-9)
cop(mysel-11, be-10)
advcl(blame-6, mysel-11)

(ROOT
  (S (`` ``)
    (S
      (VP (VBZ Is)
        (ADJP (JJ na))
        (SBAR (IN that)
          (S
            (NP
              (NP
                (NP (NN makin) (POS '))
                (JJ yersel) ('' ') (NN oot))
              (ADJP
                (ADJP (JJR better))
                (CC nor)
                (ADJP (JJ ither))))
            (VP (VBP fowk))))))
    (, ,)
    (VP (VBZ lass))
    (. ?) ('' '')))

cop(na-3, Is-2)
ccomp(lass-15, na-3)
mark(fowk-13, that-4)
poss(oot-9, makin-5)
amod(oot-9, yersel-7)
nsubj(fowk-13, oot-9)
amod(oot-9, better-10)
amod(oot-9, ither-12)
conj_nor(better-10, ither-12)
ccomp(na-3, fowk-13)
root(ROOT-0, lass-15)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Gien) (NNP I))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP thoucht)
              (S
                (VP (VBG onything)
                  (NP
                    (NP (NN worth) (NN doin))
                    ('' ')
                    (PP (CC but)
                      (NP
                        (NP
                          (NP
                            (NP (DT the) (JJ wull) (NN o) (POS '))
                            (NNP God))
                          (, ,)
                          (S
                            (NP (PRP I))
                            (VP (VB wad)
                              (VP (VB be)
                                (NP (DT a) (NN leear))))))
                        (: ;)
                        (NP
                          (NP (NN gien))
                          (SBAR
                            (S
                              (NP (PRP I))
                              (VP (VBP say)
                                (SBAR
                                  (S
                                    (NP (NN man)
                                      (CC or)
                                      (NN woman))
                                    (VP (VBZ has)
                                      (NP (VBG naething) (NN ither)
                                        (S
                                          (VP (TO to)
                                            (VP (VB do)
                                              (S
                                                (VP (VBG i) ('' ')
                                                  (NP (DT this) (NN warl))
                                                  ('' '))))))))))))))
                        (CC or)
                        (NP (DT the) (NN neist))))
                    (, ,)
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBP say)
                          (S
                            (NP (PRP it))
                            (NP
                              (NP (NN believin) (POS '))
                              (JJ ilkane) (NN o))))))))))))))
    ('' ')
    (NP (PRP them))
    (VP (VBP maun)
      (VP (VB come)
        (NP
          (NP (NNP til) (POS '))
          (NN t))
        (PP (IN at)
          (NP (DT the) (NN lang) (JJ last)))))
    (. .)))

nn(I-3, Gien-2)
nsubj(said-4, I-3)
ccomp(maun-53, said-4)
nsubj(thoucht-6, I-5)
ccomp(said-4, thoucht-6)
xcomp(thoucht-6, onything-7)
nn(doin-9, worth-8)
dobj(onything-7, doin-9)
prep(doin-9, but-11)
det(o-14, the-12)
amod(o-14, wull-13)
poss(God-16, o-14)
pobj(but-11, God-16)
nsubj(wad-19, I-18)
dep(God-16, wad-19)
cop(leear-22, be-20)
det(leear-22, a-21)
xcomp(wad-19, leear-22)
pobj(but-11, gien-24)
conj_or(God-16, gien-24)
nsubj(say-26, I-25)
rcmod(gien-24, say-26)
nsubj(has-30, man-27)
conj_or(man-27, woman-29)
nsubj(has-30, woman-29)
ccomp(say-26, has-30)
amod(ither-32, naething-31)
dobj(has-30, ither-32)
aux(do-34, to-33)
vmod(ither-32, do-34)
xcomp(do-34, i-35)
det(warl-38, this-37)
dobj(i-35, warl-38)
det(neist-42, the-41)
pobj(but-11, neist-42)
conj_or(God-16, neist-42)
nsubj(say-45, I-44)
rcmod(doin-9, say-45)
nsubj(o-50, it-46)
poss(o-50, believin-47)
amod(o-50, ilkane-49)
xcomp(say-45, o-50)
nsubj(maun-53, them-52)
root(ROOT-0, maun-53)
xcomp(maun-53, come-54)
poss(t-57, til-55)
dobj(come-54, t-57)
det(lang-60, the-59)
prep_at(come-54, lang-60)
amod(lang-60, last-61)

(ROOT
  (S
    (NP (NNP Feow))
    (VP (VBZ sees) (`` ')
      (NP
        (NP (NN t) (RB yet))
        (, ,)
        (CC but)
        (NP
          (NP (DT the) (NN time) (POS 's))
          (NN comin)))
      ('' ')
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NN ilkabody))
          (VP (MD will)
            (VP (VB be)
              (PP (IN as)
                (NP
                  (NP
                    (NP (JJ sure) (NN o) (POS '))
                    ('' ') (NN t))
                  (SBAR (IN as)
                    (S
                      (NP (PRP I))
                      (VP (VBP am)))))))))))
    (. .)))

nsubj(sees-2, Feow-1)
root(ROOT-0, sees-2)
dobj(sees-2, t-4)
advmod(t-4, yet-5)
det(time-9, the-8)
poss(comin-11, time-9)
dobj(sees-2, comin-11)
conj_but(t-4, comin-11)
advmod(be-16, when-13)
nsubj(be-16, ilkabody-14)
aux(be-16, will-15)
advcl(sees-2, be-16)
amod(o-19, sure-18)
poss(t-22, o-19)
prep_as(be-16, t-22)
mark(am-25, as-23)
nsubj(am-25, I-24)
dep(t-22, am-25)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBD won) (`` `)
        (SBAR
          (S
            (NP (NN er))
            (VP (VBZ is) (`` ')
              (ADJP (JJ t))
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (VBP say)
                    (NP (`` `) (NN t) (, ,) (NN wi) ('' ') (NNP Jesus) (NNS tellin))))))))
        ('' '))
      (NP (PRP me))
      (NP
        (NP (DT the) (JJ same) (JJ frae) (NN mornin) ('' '))
        (SBAR
          (FRAG
            (S
              (VP (TO to)
                (VP (VB nicht))))
            (. !) ('' '')))))))

nsubj(won-2, What-1)
root(ROOT-0, won-2)
nsubj(t-7, er-4)
cop(t-7, is-5)
ccomp(won-2, t-7)
mark(say-10, that-8)
nsubj(say-10, I-9)
ccomp(t-7, say-10)
nn(tellin-17, t-12)
dep(tellin-17, wi-14)
nn(tellin-17, Jesus-16)
dobj(say-10, tellin-17)
dep(won-2, me-19)
det(mornin-23, the-20)
amod(mornin-23, same-21)
amod(mornin-23, frae-22)
dep(won-2, mornin-23)
aux(nicht-26, to-25)
dep(mornin-23, nicht-26)

(ROOT
  (S (`` ``)
    (NP (NNP Lass))
    (, ,)
    (ADVP (RB lass))
    (, ,)
    (NP (PRP I))
    (VP (VBP fear)
      (S
        (NP (PRP me))
        (, ,)
        (NP (PRP ye))
        (VP (MD 'll)
          (VP (VB gang)
            (NP
              (NP (JJ oot) (NN o) (POS '))
              (NN yer) (NN min))))
        ('' ')))
    (. !) ('' '')))

nsubj(fear-7, Lass-2)
advmod(fear-7, lass-4)
nsubj(fear-7, I-6)
root(ROOT-0, fear-7)
nsubj(gang-12, me-8)
nsubj(gang-12, ye-10)
aux(gang-12, 'll-11)
ccomp(fear-7, gang-12)
amod(o-14, oot-13)
poss(min-17, o-14)
nn(min-17, yer-16)
dobj(gang-12, min-17)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD 'll)
      (VP (VB be)
        (ADJP (JJ intil))))
    (NP
      (NP (DT the) (NN mind) (NN o) (POS '))
      (NN Christ)
      (PRN (, ,)
        (ADVP (RB then))
        (, ,))
      (NN mother))
    (. !)))

nsubj(intil-5, It-2)
aux(intil-5, 'll-3)
cop(intil-5, be-4)
root(ROOT-0, intil-5)
det(o-8, the-6)
nn(o-8, mind-7)
poss(mother-14, o-8)
nn(mother-14, Christ-10)
dep(mother-14, then-12)
dep(intil-5, mother-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ dinna)
      (NP
        (NP (NN care))
        (PP (IN for)
          (NP (PRP$ my) (NN ain) (NN min) ('' ')))))
    (. .)))

nsubj(dinna-2, I-1)
root(ROOT-0, dinna-2)
dobj(dinna-2, care-3)
poss(min-7, my-5)
nn(min-7, ain-6)
prep_for(care-3, min-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hae)
      (SBAR
        (S
          (NP
            (NP (NN nane))
            (VP (VBN o) ('' ')
              (NP (PRP$ my) (NN ain))
              (, ,))
            (, an) ('' '))
          (VP (MD will)
            (VP (VB stick)
              (PP (TO to)
                (NP (PRP$ His))))))))
    (. .)))

nsubj(hae-2, I-1)
root(ROOT-0, hae-2)
nsubj(stick-12, nane-3)
vmod(nane-3, o-4)
poss(ain-7, my-6)
dobj(o-4, ain-7)
punct(nane-3, an-9)
aux(stick-12, will-11)
ccomp(hae-2, stick-12)
prep_to(stick-12, His-14)

(ROOT
  (S
    (S
      (NP (NNP Gien) (NNP I) (NNP dinna))
      (VP
        (VP (VBP mak)
          (NP (PRP$ His) (NN mine)))
        (, ,)
        (CC and)
        (VP (VBP stick)
          (S
            (NP (NN til))
            (`` `)
            (ADJP (JJ t))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBN lost)))
    (. !)))

nn(dinna-3, Gien-1)
nn(dinna-3, I-2)
nsubj(mak-4, dinna-3)
nsubj(stick-9, dinna-3)
ccomp(lost-16, mak-4)
poss(mine-6, His-5)
dobj(mak-4, mine-6)
conj_and(mak-4, stick-9)
ccomp(lost-16, stick-9)
dep(t-12, til-10)
dep(stick-9, t-12)
nsubjpass(lost-16, I-14)
auxpass(lost-16, 'm-15)
root(ROOT-0, lost-16)

(ROOT
  (S
    (NP
      (NP (NNP Noo))
      (, ,)
      (NP (NN mother))
      (, ,))
    (PRN
      (S
        (NP (PRP I))
        (VP (MD 'll)
          (VP
            (VP (VB set)
              (NP (DT the) (NNS things)))
            (, ,)
            (CC and)
            (VP (VB run)
              (NP (NN ower))
              (PP (TO to)
                (NP (DT the) (NN hoose))))
            (, ,)
            (CC and)
            (VP (VB lat)
              (NP (DT An) (`` `) (NN rew) (NN ken)))))))
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB here)))
    (. !) ('' '')))

nsubj('m-25, Noo-1)
appos(Noo-1, mother-3)
nsubj(set-7, I-5)
nsubj(run-12, I-5)
nsubj(lat-19, I-5)
aux(set-7, 'll-6)
parataxis('m-25, set-7)
det(things-9, the-8)
dobj(set-7, things-9)
conj_and(set-7, run-12)
parataxis('m-25, run-12)
dobj(run-12, ower-13)
det(hoose-16, the-15)
prep_to(run-12, hoose-16)
conj_and(set-7, lat-19)
parataxis('m-25, lat-19)
det(ken-23, An-20)
nn(ken-23, rew-22)
dobj(lat-19, ken-23)
nsubj('m-25, I-24)
root(ROOT-0, 'm-25)
advmod('m-25, here-26)

(ROOT
  (S (`` ``)
    (SBAR (IN As)
      (S
        (NP (PRP ye))
        (VP (VBP wull))))
    (, ,)
    (VP (VBZ lass))
    (. !)))

mark(wull-4, As-2)
nsubj(wull-4, ye-3)
advcl(lass-6, wull-4)
root(ROOT-0, lass-6)

(ROOT
  (S
    (NP
      (NP (NNP ye) (POS '))
      (NN r))
    (VP (VBP ayont)
      (NP (PRP me)))
    (. !)))

poss(r-3, ye-1)
nsubj(ayont-4, r-3)
root(ROOT-0, ayont-4)
dobj(ayont-4, me-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ s) (`` ')
      (VP (VB say)
        (S
          (VP (VBG naething)
            (NP (JJ anent)
              (NP (DT a) (NN willfu) (POS '))
              (NN woman))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP ye))
            (VP (VBP 've)
              (VP (VBN been)
                (VP (VBN aye)
                  (NP (DT a) (JJ guid) (NN dochter)))))))))
    (. .)))

nsubj(say-4, I-1)
aux(say-4, s-2)
root(ROOT-0, say-4)
xcomp(say-4, naething-5)
amod(woman-10, anent-6)
det(willfu-8, a-7)
poss(woman-10, willfu-8)
dobj(naething-5, woman-10)
mark(aye-16, for-12)
nsubjpass(aye-16, ye-13)
aux(aye-16, 've-14)
auxpass(aye-16, been-15)
advcl(say-4, aye-16)
det(dochter-19, a-17)
amod(dochter-19, guid-18)
dobj(aye-16, dochter-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP trust)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP hae)
            (VP (VBN risen)
              (S
                (VP (TO to)
                  (VP (VB houp)
                    (S
                      (NP (DT the) (NNP Lord) (NN winna))
                      (VP (VB be)
                        (VP (VBN disappointit)
                          (PP (IN in)
                            (NP (PRP ye))))))))))))))
    (. .) ('' '')))

nsubj(trust-2, I-1)
root(ROOT-0, trust-2)
nsubj(hae-4, I-3)
ccomp(trust-2, hae-4)
dep(hae-4, risen-5)
aux(houp-7, to-6)
xcomp(risen-5, houp-7)
det(winna-10, the-8)
nn(winna-10, Lord-9)
nsubjpass(disappointit-12, winna-10)
auxpass(disappointit-12, be-11)
ccomp(houp-7, disappointit-12)
prep_in(disappointit-12, ye-14)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD found)
      (SBAR
        (S
          (NP
            (NP (NNP Andrew))
            (PP (IN in)
              (NP (DT the) (NN stable))))
          (, ,)
          (S
            (VP (VBG suppering)
              (NP (PRP$ his) (NNS horses))))
          (, ,)
          (VP (VBD told)
            (NP (PRP him))
            (SBAR
              (S
                (NP (PRP she))
                (VP
                  (VP (VBD had)
                    (NP (NN something)
                      (S
                        (VP (TO to)
                          (VP (VB talk)
                            (PP (TO to)
                              (NP (PRP him)))
                            (PP (IN about)))))))
                  (, ,)
                  (CC and)
                  (VP (VBD asked)
                    (SBAR (IN if)
                      (S
                        (NP (PRP he))
                        (VP (MD would)
                          (VP (VB let)
                            (S
                              (NP (PRP her))
                              (VP (VB go)
                                (PP (IN with)
                                  (NP (PRP him)))
                                (PP (IN in)
                                  (NP
                                    (NP (PRP$ his) (NN walk))
                                    (NP (DT the) (JJ next) (NN day))))))))))))))))))
    (. .)))

nsubj(found-2, Dawtie-1)
root(ROOT-0, found-2)
nsubj(told-12, Andrew-3)
det(stable-6, the-5)
prep_in(Andrew-3, stable-6)
vmod(told-12, suppering-8)
poss(horses-10, his-9)
dobj(suppering-8, horses-10)
ccomp(found-2, told-12)
dobj(told-12, him-13)
nsubj(had-15, she-14)
nsubj(asked-24, she-14)
dep(told-12, had-15)
dobj(had-15, something-16)
aux(talk-18, to-17)
vmod(something-16, talk-18)
prep_to(talk-18, him-20)
prep(talk-18, about-21)
dep(told-12, asked-24)
conj_and(had-15, asked-24)
mark(let-28, if-25)
nsubj(let-28, he-26)
aux(let-28, would-27)
advcl(asked-24, let-28)
nsubj(go-30, her-29)
ccomp(let-28, go-30)
prep_with(go-30, him-32)
poss(walk-35, his-34)
prep_in(go-30, walk-35)
det(day-38, the-36)
amod(day-38, next-37)
dep(walk-35, day-38)

(ROOT
  (S
    (S
      (NP (NNP Andrew))
      (VP (VBD was)
        (ADJP (JJ delighted)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (PRP her))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD did) (RB not)
        (VP (VB say)
          (ADVP (RB so)))))
    (: ;)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (ADVP (RB back))
        (SBAR (IN before)
          (S
            (NP (PRP$ her) (NN mother))
            (VP (VBD had)
              (VP (VBN taken)
                (NP (DT the) (NN milk))
                (PP (IN from)
                  (NP (DT the) (NN press)))))))))
    (. .)))

nsubj(delighted-3, Andrew-1)
nsubj(see-5, Andrew-1)
cop(delighted-3, was-2)
root(ROOT-0, delighted-3)
aux(see-5, to-4)
xcomp(delighted-3, see-5)
dobj(see-5, her-6)
nsubj(say-12, he-9)
aux(say-12, did-10)
neg(say-12, not-11)
conj_but(delighted-3, say-12)
advmod(say-12, so-13)
nsubj(was-17, she-16)
conj_and(delighted-3, was-17)
advmod(was-17, back-18)
mark(taken-23, before-19)
poss(mother-21, her-20)
nsubj(taken-23, mother-21)
aux(taken-23, had-22)
advcl(was-17, taken-23)
det(milk-25, the-24)
dobj(taken-23, milk-25)
det(press-28, the-27)
prep_from(taken-23, press-28)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ few) (NNS minutes)))
    (NP (PRP$ her) (NN father))
    (VP
      (VP (VBD appeared))
      (, ,)
      (CC and)
      (VP (VBD welcomed)
        (NP (PRP her))
        (PP (IN with)
          (NP (DT a) (JJ sober) (NN joy)))))
    (. .)))

det(minutes-4, a-2)
amod(minutes-4, few-3)
prep_in(appeared-7, minutes-4)
poss(father-6, her-5)
nsubj(appeared-7, father-6)
nsubj(welcomed-10, father-6)
root(ROOT-0, appeared-7)
conj_and(appeared-7, welcomed-10)
dobj(welcomed-10, her-11)
det(joy-15, a-13)
amod(joy-15, sober-14)
prep_with(welcomed-10, joy-15)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (PRP they))
          (VP (VBP eat)
            (NP (PRP$ their) (NN supper)))))
      (, ,)
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP (VB keep)
          (NP (PRP$ his) (NNS eyes))
          (PP (IN off)
            (NP (PRP her))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD sat)
      (S
        (VP (VBG looking)
          (UCP
            (ADVP (RB so) (RB well))
            (CC and)
            (ADJP (JJ nice)
              (CC and)
              (JJ trim))))))
    (. .)))

mark(eat-3, As-1)
nsubj(eat-3, they-2)
advcl(keep-10, eat-3)
poss(supper-5, their-4)
dobj(eat-3, supper-5)
nsubj(keep-10, he-7)
aux(keep-10, could-8)
neg(keep-10, not-9)
ccomp(sat-17, keep-10)
poss(eyes-12, his-11)
dobj(keep-10, eyes-12)
prep_off(keep-10, her-14)
nsubj(sat-17, she-16)
root(ROOT-0, sat-17)
xcomp(sat-17, looking-18)
advmod(well-20, so-19)
advmod(looking-18, well-20)
advmod(looking-18, nice-22)
conj_and(well-20, nice-22)
conj_and(well-20, trim-24)
conj_and(nice-22, trim-24)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (NP (DT a)
          (ADJP (JJ good-looking) (, ,) (JJ work-worn))
          (NN man))))
    (, ,)
    (S
      (NP (PRP$ his) (NNS hands))
      (ADJP (RB absolutely) (JJ horny)
        (PP (IN with)
          (NP (NN labor)))))
    (. .)))

nsubj(man-7, He-1)
cop(man-7, was-2)
det(man-7, a-3)
amod(work-worn-6, good-looking-4)
amod(man-7, work-worn-6)
root(ROOT-0, man-7)
poss(hands-10, his-9)
dep(horny-12, hands-10)
advmod(horny-12, absolutely-11)
parataxis(man-7, horny-12)
prep_with(horny-12, labor-14)

(ROOT
  (S (CC But)
    (ADVP (RB inside))
    (NP (JJ many) (JJ such) (NN horny) (NNS husks))
    (VP (VBP are)
      (VP (VBG ripening)
        (NP (JJ beautiful) (NN kingdom) (NNS hands))
        (, ,)
        (PP (IN for)
          (NP
            (NP (DT the) (NN time))
            (SBAR
              (WHADVP (WRB when))
              (S (`` ``)
                (NP (JJ dear) (JJ welcome) (NN Death))
                ('' '')
                (VP (MD will)
                  (VP (VB loose)
                    (CC and)
                    (VB let)
                    (S
                      (NP (PRP us))
                      (VP (VB go)
                        (PP (IN from)
                          (NP
                            (NP (DT the) (NNS grave-clothes))
                            (PP (IN of)
                              (NP (DT the) (NN body)))))))
                    (SBAR (IN that)
                      (S
                        (VP (VBG bind)
                          (NP
                            (NP (DT some))
                            (PP (IN of)
                              (NP (PRP us)))))
                        (NP
                          (NP (RB even) (NN hand))
                          (CC and)
                          (NP (NN foot)))))))))))))
    (. .)))

cc(ripening-8, But-1)
advmod(ripening-8, inside-2)
amod(husks-6, many-3)
amod(husks-6, such-4)
nn(husks-6, horny-5)
nsubj(ripening-8, husks-6)
aux(ripening-8, are-7)
root(ROOT-0, ripening-8)
amod(hands-11, beautiful-9)
nn(hands-11, kingdom-10)
dobj(ripening-8, hands-11)
det(time-15, the-14)
prep_for(ripening-8, time-15)
mark(bind-35, time-15)
advmod(loose-23, when-16)
amod(Death-20, dear-18)
amod(Death-20, welcome-19)
nsubj(loose-23, Death-20)
nsubj(let-25, Death-20)
aux(loose-23, will-22)
rcmod(time-15, loose-23)
rcmod(time-15, let-25)
conj_and(loose-23, let-25)
nsubj(go-27, us-26)
ccomp(loose-23, go-27)
det(grave-clothes-30, the-29)
prep_from(go-27, grave-clothes-30)
det(body-33, the-32)
prep_of(grave-clothes-30, body-33)
ccomp(loose-23, bind-35)
dobj(bind-35, some-36)
prep_of(some-36, us-38)
advmod(hand-40, even-39)
dep(bind-35, hand-40)
dep(bind-35, foot-42)
conj_and(hand-40, foot-42)

(ROOT
  (S
    (S
      (NP
        (NP (JJ Rugged) (NN father))
        (CC and)
        (NP (JJ withered) (NN mother)))
      (VP (VBD were)
        (ADJP (JJ beautiful)
          (PP (IN in)
            (NP
              (NP (DT the) (NNS eyes))
              (PP (IN of)
                (NP (NNP Dawtie))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she)
        (CC and)
        (NNP God))
      (VP (VBD saw)
        (NP (PRP them))
        (ADVP (RBR better))
        (PP (IN than)
          (NP (DT any) (JJ other)))))
    (. .)))

amod(father-2, Rugged-1)
nsubj(beautiful-7, father-2)
amod(mother-5, withered-4)
conj_and(father-2, mother-5)
nsubj(beautiful-7, mother-5)
cop(beautiful-7, were-6)
root(ROOT-0, beautiful-7)
det(eyes-10, the-9)
prep_in(beautiful-7, eyes-10)
prep_of(eyes-10, Dawtie-12)
nsubj(saw-18, she-15)
conj_and(she-15, God-17)
nsubj(saw-18, God-17)
conj_and(beautiful-7, saw-18)
dobj(saw-18, them-19)
advmod(saw-18, better-20)
det(other-23, any-22)
prep_than(saw-18, other-23)

(ROOT
  (SINV
    (ADJP (JJ Good) (, ,) (JJ endless) (JJ good))
    (VP (VBD was)
      (PP (IN on)
        (NP
          (NP (DT the) (NN way))
          (PP (TO to)
            (NP (PRP them))))))
    (NP (DT all))
    (. !)))

amod(good-4, Good-1)
amod(good-4, endless-3)
dep(was-5, good-4)
root(ROOT-0, was-5)
det(way-8, the-7)
prep_on(was-5, way-8)
prep_to(way-8, them-10)
nsubj(was-5, all-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (RB so) (JJ pleasant)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBG waiting)
                (PP (IN for)
                  (NP
                    (NP (DT the) (JJS best))
                    (PP (IN of)
                      (NP (DT all) (JJ good) (NNS things)))))))))))
    (. .)))

nsubj(pleasant-4, It-1)
nsubj(waiting-7, It-1)
cop(pleasant-4, was-2)
advmod(pleasant-4, so-3)
root(ROOT-0, pleasant-4)
aux(waiting-7, to-5)
aux(waiting-7, be-6)
xcomp(pleasant-4, waiting-7)
det(best-10, the-9)
prep_for(waiting-7, best-10)
det(things-14, all-12)
amod(things-14, good-13)
prep_of(best-10, things-14)

(ROOT
  (NP (NNP CHAPTER) (NNP XVI) (. .)))

nn(XVI-2, CHAPTER-1)
root(ROOT-0, XVI-2)

(ROOT
  (NP (NNP ANDREW)
    (CC AND)
    (NNP DAWTIE) (. .)))

root(ROOT-0, ANDREW-1)
conj_and(ANDREW-1, DAWTIE-3)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD slept)
      (PP (IN in)
        (NP (NN peace)
          (CC and)
          (JJ happy) (NNS dreams)))
      (PP (IN till)
        (NP (DT the) (JJ next) (NN morning)))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP she))
          (VP (VBD was)
            (ADVP (RB up) (RB almost))
            (PP
              (PP (IN with)
                (NP (DT the) (NN sun)))
              (, ,)
              (CC and)
              (RB out)
              (PP (IN in)
                (NP (PRP$ his) (JJ low) (JJ clear) (NN light))))))))
    (. .)))

nsubj(slept-2, Dawtie-1)
root(ROOT-0, slept-2)
nn(dreams-7, peace-4)
conj_and(peace-4, happy-6)
nn(dreams-7, happy-6)
prep_in(slept-2, dreams-7)
det(morning-11, the-9)
amod(morning-11, next-10)
prep_till(slept-2, morning-11)
advmod(was-15, when-13)
nsubj(was-15, she-14)
advcl(slept-2, was-15)
advmod(almost-17, up-16)
advmod(was-15, almost-17)
prep(was-15, with-18)
det(sun-20, the-19)
pobj(with-18, sun-20)
prep(was-15, out-23)
conj_and(with-18, out-23)
dep(with-18, in-24)
poss(light-28, his-25)
amod(light-28, low-26)
amod(light-28, clear-27)
pobj(in-24, light-28)

(ROOT
  (S
    (S (IN For)
      (NP (DT the) (NN sun))
      (VP (VBD was)
        (ADJP (JJ strong))
        (ADVP (RB again))))
    (: ;)
    (S
      (NP
        (NP (DT the) (JJ red) (NN labor))
        (CC and)
        (NP (NN weariness)))
      (VP (VBD were)
        (VP (VBN gone)
          (PP (IN from)
            (NP (PRP$ his) (VBG shining) (NN face))))))
    (. .)))

dep(strong-5, For-1)
det(sun-3, the-2)
nsubj(strong-5, sun-3)
cop(strong-5, was-4)
root(ROOT-0, strong-5)
advmod(strong-5, again-6)
det(labor-10, the-8)
amod(labor-10, red-9)
nsubjpass(gone-14, labor-10)
conj_and(labor-10, weariness-12)
nsubjpass(gone-14, weariness-12)
auxpass(gone-14, were-13)
parataxis(strong-5, gone-14)
poss(face-18, his-16)
amod(face-18, shining-17)
prep_from(gone-14, face-18)

(ROOT
  (S
    (NP
      (NP (NN Everything))
      (PP (IN about)
        (NP (PRP her))))
    (VP (VBD seemed)
      (S
        (VP
          (VP (TO to)
            (VP (VB know)
              (NP (NNP God))))
          (, ,)
          (CC or)
          (ADVP (IN at) (JJS least))
          (VP (TO to)
            (VP (VB have)
              (VP (VBN had)
                (NP
                  (NP
                    (NP (DT a) (NN moment) (POS 's))
                    (NN gaze))
                  (PP (IN upon)
                    (NP (PRP Him))))))))))
    (. .)))

nsubj(seemed-4, Everything-1)
prep_about(Everything-1, her-3)
root(ROOT-0, seemed-4)
aux(know-6, to-5)
ccomp(seemed-4, know-6)
dobj(know-6, God-7)
ccomp(seemed-4, at-10)
advmod(know-6, at-10)
conj_or(know-6, at-10)
pobj(at-10, least-11)
aux(had-14, to-12)
aux(had-14, have-13)
ccomp(seemed-4, had-14)
conj_or(know-6, had-14)
det(moment-16, a-15)
poss(gaze-18, moment-16)
dobj(had-14, gaze-18)
prep_upon(gaze-18, Him-20)

(ROOT
  (SBARQ
    (WHNP (WRB How) (RB else))
    (SQ (MD could)
      (NP (NN everything))
      (VP (VB look)
        (ADJP
          (ADJP (RB so) (JJ content))
          (, ,)
          (ADJP (JJ hopeful))
          (CC and)
          (ADJP (JJ happy)))))
    (. .)))

advmod(else-2, How-1)
dep(look-5, else-2)
aux(look-5, could-3)
nsubj(look-5, everything-4)
root(ROOT-0, look-5)
advmod(content-7, so-6)
acomp(look-5, content-7)
acomp(look-5, hopeful-9)
conj_and(content-7, hopeful-9)
acomp(look-5, happy-11)
conj_and(content-7, happy-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN man))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD will) (RB not)
              (VP (VB fall)
                (PP (IN in) (IN with)
                  (NP
                    (NP (DT the) (NNP Father) (POS 's))
                    (NNS bliss)
                    (SBAR
                      (WHPP (TO to)
                        (WHNP (WP whom)))
                      (S
                        (NP (DT the) (NN world))
                        (VP (VBZ seems)
                          (ADJP (JJ soulless)
                            (CC and)
                            (JJ dull)))))))))))))
    (. .)))

nsubj(man-4, It-1)
cop(man-4, is-2)
det(man-4, the-3)
root(ROOT-0, man-4)
nsubj(fall-8, man-4)
aux(fall-8, will-6)
neg(fall-8, not-7)
rcmod(man-4, fall-8)
dep(fall-8, in-9)
det(Father-12, the-11)
poss(bliss-14, Father-12)
prep_to(seems-19, Father-12)
prep_with(fall-8, bliss-14)
det(world-18, the-17)
nsubj(seems-19, world-18)
rcmod(Father-12, seems-19)
ccomp(bliss-14, seems-19)
acomp(seems-19, soulless-20)
acomp(seems-19, dull-22)
conj_and(soulless-20, dull-22)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD was)
      (PP (IN at)
        (NP (NN peace)))
      (SBAR
        (SBAR (IN because)
          (S
            (NP (PRP she))
            (VP (VBD desired)
              (NP (NN nothing)))))
        (CC but)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP she))
            (VP (VBD knew)
              (SBAR
                (S
                  (NP (PRP He))
                  (VP (VBD was)
                    (ADJP (RB best) (JJ pleased)
                      (S
                        (VP (TO to)
                          (VP (VB give)
                            (NP (PRP her))))))))))))))
    (. .)))

nsubj(was-2, Dawtie-1)
root(ROOT-0, was-2)
prep_at(was-2, peace-4)
mark(desired-7, because-5)
nsubj(desired-7, she-6)
advcl(was-2, desired-7)
dobj(desired-7, nothing-8)
dobj(knew-12, what-10)
nsubj(knew-12, she-11)
advcl(was-2, knew-12)
conj_but(desired-7, knew-12)
nsubj(pleased-16, He-13)
nsubj(give-18, He-13)
cop(pleased-16, was-14)
advmod(pleased-16, best-15)
ccomp(knew-12, pleased-16)
aux(give-18, to-17)
xcomp(pleased-16, give-18)
dobj(give-18, her-19)

(ROOT
  (S
    (SBAR (RB Even)
      (S
        (VP (VBD had)
          (S
            (NP (PRP she))
            (VP (VBG cherished)
              (PP (IN for)
                (NP (NNP Andrew)))
              (NP
                (NP (DT the) (NN kind))
                (PP (IN of)
                  (NP (NN love)))
                (SBAR
                  (S
                    (NP (PRP$ her) (NN mother))
                    (VP (VBD feared))))))))))
    (, ,)
    (NP
      (NP (PRP$ her) (NN Lord) (POS 's))
      (NN will))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN been)
          (NP (PRP$ her) (NN comfort)
            (CC and)
            (NN strength)))))
    (. .)))

advmod(had-2, Even-1)
advcl(comfort-23, had-2)
nsubj(cherished-4, she-3)
ccomp(had-2, cherished-4)
prep_for(cherished-4, Andrew-6)
det(kind-8, the-7)
dobj(cherished-4, kind-8)
prep_of(kind-8, love-10)
poss(mother-12, her-11)
nsubj(feared-13, mother-12)
rcmod(kind-8, feared-13)
poss(Lord-16, her-15)
poss(will-18, Lord-16)
nsubj(comfort-23, will-18)
aux(comfort-23, would-19)
aux(comfort-23, have-20)
cop(comfort-23, been-21)
poss(comfort-23, her-22)
root(ROOT-0, comfort-23)
conj_and(comfort-23, strength-25)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT any) (NN one))
        (VP (VBP say))))
    (: :) (`` ``)
    (ADVP (RB Then))
    (NP (PRP she))
    (VP (MD could) (RB not)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NN love))
            (VP (VBZ is))))))
    (. !) ('' '')))

mark(say-4, If-1)
det(one-3, any-2)
nsubj(say-4, one-3)
advcl(know-11, say-4)
advmod(know-11, Then-7)
nsubj(know-11, she-8)
aux(know-11, could-9)
neg(know-11, not-10)
root(ROOT-0, know-11)
dobj(is-14, what-12)
nsubj(is-14, love-13)
ccomp(know-11, is-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP answer)))
    (: :) (`` ``)
    (S
      (NP (DT That) (NN person))
      (VP (VBZ does) (RB not)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (JJR better) (NN love))
              (VP (VBZ is)
                (SBAR (IN that)
                  (S
                    (VP (VBZ lifts)
                      (NP (DT the) (NN being))
                      (PP (IN into)
                        (NP (PDT such) (DT a) (JJ serene) (NN air)))
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (MD can)
                            (ADVP
                              (ADVP (RB fast)
                                (PP (IN from)
                                  (NP (JJ many) (NNS things))))
                              (CC and)
                              (ADVP (RB yet)))
                            (VP (VB be)
                              (ADJP (VBN blessed)
                                (PP (IN beyond)
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (NP (DT any) (JJ other) (NN granted) (NN desire))
                                      (VP (MD could)
                                        (VP (VB make)
                                          (NP (PRP it)))))))))))))))))))))
    (. .) ('' '')))

nsubj(answer-2, I-1)
root(ROOT-0, answer-2)
det(person-6, That-5)
nsubj(know-9, person-6)
aux(know-9, does-7)
neg(know-9, not-8)
parataxis(answer-2, know-9)
dobj(is-14, what-10)
nsubj(lifts-16, what-10)
det(love-13, the-11)
amod(love-13, better-12)
nsubj(is-14, love-13)
ccomp(know-9, is-14)
mark(lifts-16, that-15)
ccomp(is-14, lifts-16)
det(being-18, the-17)
dobj(lifts-16, being-18)
predet(air-23, such-20)
det(air-23, a-21)
amod(air-23, serene-22)
prep_into(lifts-16, air-23)
mark(blessed-34, that-24)
nsubjpass(blessed-34, it-25)
aux(blessed-34, can-26)
advmod(blessed-34, fast-27)
amod(things-30, many-29)
prep_from(fast-27, things-30)
conj_and(fast-27, yet-32)
advmod(blessed-34, yet-32)
auxpass(blessed-34, be-33)
ccomp(lifts-16, blessed-34)
dobj(make-42, what-36)
det(desire-40, any-37)
amod(desire-40, other-38)
nn(desire-40, granted-39)
nsubj(make-42, desire-40)
aux(make-42, could-41)
prepc_beyond(blessed-34, make-42)
dobj(make-42, it-43)

(ROOT
  (S
    (NP
      (NP (DT The) (NN scent))
      (PP (IN of)
        (NP (DT the) (JJ sweet-pease)
          (NAC
            (S
              (VP (VBG growing)
                (PP (IN against)
                  (NP (DT the) (NN turf)))))
            (NN wall)))))
    (VP (VBD entered)
      (NP
        (NP (NNP Dawtie) (POS 's))
        (NN soul))
      (PP (IN like)
        (NP (DT a) (NN breath)))
      (PP (IN from)
        (NP
          (NP (DT the) (NNS fields))
          (PP (IN of)
            (NP (NN heaven)))))
      (, ,)
      (SBAR
        (SBAR
          (WHADVP (WRB where))
          (S
            (S
              (NP (DT the) (NNS children))
              (VP (VBD made)
                (ADVP (RB merry))
                (PP (IN with)
                  (NP
                    (NP (DT the) (NNS angels))
                    (, ,)
                    (NP
                      (NP (DT the) (NN merriest))
                      (PP (IN of)
                        (NP (NNS playfellows))))
                    (, ,)
                    (CC and)
                    (NP (DT the) (NNS winds)
                      (CC and)
                      (NNS waters))))))
            (, ,)
            (CC and)
            (S
              (NP
                (NP (PDT all) (DT the) (NN living) (NNS things))
                (, ,)
                (CC and)
                (NP
                  (NP (PDT all) (DT the) (NNS things))
                  (ADJP (RB half) (JJ alive)))
                (, ,)
                (NP
                  (NP (PDT all) (DT the) (NNS flowers))
                  (CC and)
                  (NP (PDT all) (DT the) (NNS creatures)))
                (, ,))
              (VP (VBD were)
                (PP (IN at)
                  (NP (PRP$ their) (JJ sportive) (NN call)))))
            (: ;)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT the) (JJ little) (NNS ones))
                (VP
                  (VP (VBD had)
                    (NP (NNS babies)
                      (S
                        (VP (TO to)
                          (VP (VB play)
                            (PP (IN with)))))))
                  (, ,)
                  (CC and)
                  (VP (VBD did) (RB not)
                    (VP (VB hurt)
                      (NP (PRP them)))))))))
        (, ,)
        (CC and)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NNS dolls))
            (VP (VBD were) (RB neither)
              (VP (VBN loved)
                (CC nor)
                (VBN missed) (, ,)
                (S
                  (VP (VBG being)
                    (VP
                      (ADVP (RB never))
                      (VBN thought)
                      (PP (IN of)))))))))))
    (. .)))

det(scent-2, The-1)
nsubj(entered-11, scent-2)
det(sweet-pease-5, the-4)
prep_of(scent-2, sweet-pease-5)
dep(wall-10, growing-6)
det(turf-9, the-8)
prep_against(growing-6, turf-9)
dep(sweet-pease-5, wall-10)
root(ROOT-0, entered-11)
poss(soul-14, Dawtie-12)
dobj(entered-11, soul-14)
det(breath-17, a-16)
prep_like(entered-11, breath-17)
det(fields-20, the-19)
prep_from(entered-11, fields-20)
prep_of(fields-20, heaven-22)
advmod(made-27, where-24)
det(children-26, the-25)
nsubj(made-27, children-26)
advcl(entered-11, made-27)
advmod(made-27, merry-28)
det(angels-31, the-30)
prep_with(made-27, angels-31)
det(merriest-34, the-33)
prep_with(made-27, merriest-34)
conj_and(angels-31, merriest-34)
prep_of(merriest-34, playfellows-36)
det(winds-40, the-39)
prep_with(made-27, winds-40)
conj_and(angels-31, winds-40)
conj_and(angels-31, waters-42)
conj_and(winds-40, waters-42)
predet(things-48, all-45)
det(things-48, the-46)
nn(things-48, living-47)
nsubj(were-65, things-48)
predet(things-53, all-51)
det(things-53, the-52)
conj_and(things-48, things-53)
nsubj(were-65, things-53)
advmod(alive-55, half-54)
amod(things-53, alive-55)
predet(flowers-59, all-57)
det(flowers-59, the-58)
conj_and(things-48, flowers-59)
nsubj(were-65, flowers-59)
predet(creatures-63, all-61)
det(creatures-63, the-62)
conj_and(things-48, creatures-63)
conj_and(flowers-59, creatures-63)
advcl(entered-11, were-65)
conj_and(made-27, were-65)
poss(call-69, their-67)
amod(call-69, sportive-68)
prep_at(were-65, call-69)
advmod(had-75, where-71)
det(ones-74, the-72)
amod(ones-74, little-73)
nsubj(had-75, ones-74)
nsubj(hurt-84, ones-74)
advcl(entered-11, had-75)
conj_and(made-27, had-75)
dobj(had-75, babies-76)
aux(play-78, to-77)
vmod(babies-76, play-78)
prep(play-78, with-79)
aux(hurt-84, did-82)
neg(hurt-84, not-83)
conj_and(made-27, hurt-84)
conj_and(had-75, hurt-84)
dobj(hurt-84, them-85)
advmod(loved-92, where-88)
nsubjpass(loved-92, dolls-89)
nsubjpass(missed-94, dolls-89)
auxpass(loved-92, were-90)
advmod(loved-92, neither-91)
advcl(entered-11, loved-92)
conj_and(made-27, loved-92)
conj_and(made-27, missed-94)
conj_nor(loved-92, missed-94)
auxpass(thought-98, being-96)
neg(thought-98, never-97)
xcomp(loved-92, thought-98)
prep(thought-98, of-99)

(ROOT
  (S
    (NP (NNP Suchlike))
    (VP (VBD were)
      (NP
        (NP (DT the) (NN girl) (POS 's))
        (NNS imaginings)
        (SBAR (IN as)
          (S
            (NP (PRP$ her) (NNS thoughts))
            (VP (VBD went)
              (VP
                (VP (VBG straying))
                (, ,)
                (VP (VBG inventing))
                (, ,)
                (VP (VBG discovering))))))))
    (. .)))

nsubj(imaginings-6, Suchlike-1)
cop(imaginings-6, were-2)
det(girl-4, the-3)
poss(imaginings-6, girl-4)
root(ROOT-0, imaginings-6)
mark(went-10, as-7)
poss(thoughts-9, her-8)
nsubj(went-10, thoughts-9)
ccomp(imaginings-6, went-10)
rcmod(imaginings-6, went-10)
dep(went-10, straying-11)
dep(straying-11, inventing-13)
dep(straying-11, discovering-15)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD did) (RB not)
        (VP (VB fear)
          (SBAR
            (S
              (NP (DT the) (NNP Father))
              (VP (MD would)
                (VP (VB be)
                  (ADJP (JJ angry)
                    (PP (IN with)
                      (NP (PRP her))))
                  (PP (IN for)
                    (S
                      (VP (VBG being)
                        (NP (PRP$ His) (NN child))))))))))))
    (, ,)
    (CC and)
    (S
      (VP (VBG playing)
        (PP (IN at)
          (NP (NN creation)))))
    (. .)))

nsubj(fear-4, She-1)
nsubj(playing-18, She-1)
aux(fear-4, did-2)
neg(fear-4, not-3)
root(ROOT-0, fear-4)
det(Father-6, the-5)
nsubj(angry-9, Father-6)
aux(angry-9, would-7)
cop(angry-9, be-8)
ccomp(fear-4, angry-9)
prep_with(angry-9, her-11)
cop(child-15, being-13)
poss(child-15, His-14)
prepc_for(angry-9, child-15)
conj_and(fear-4, playing-18)
prep_at(playing-18, creation-20)

(ROOT
  (UCP
    (NP
      (WHNP (WP Who))
      (, ,)
      (ADJP (JJ indeed))
      (, ,))
    (CC but)
    (ADVP
      (ADVP (CD one))
      (SBAR
        (WHNP (WDT that))
        (S
          (PP (IN in)
            (S
              (VP (VBG loving)
                (SBAR
                  (S
                    (NP (NN heart))
                    (VP (MD can)
                      (ADVP (RB _))
                      (VP (VB make)
                        (NP (NNS _)))))))))
          (, ,)
          (VP (MD can)
            (ADVP (RB rightly))
            (VP (VB love)
              (NP
                (NP (DT the) (NN making))
                (PP (IN of)
                  (NP (DT the) (NNP Maker))))))))
      (. !))))

dep(indeed-3, Who-1)
root(ROOT-0, indeed-3)
advmod(indeed-3, one-6)
conj_but(indeed-3, one-6)
nsubj(love-18, that-7)
prepc_in(love-18, loving-9)
nsubj(make-13, heart-10)
aux(make-13, can-11)
advmod(make-13, _-12)
ccomp(loving-9, make-13)
dobj(make-13, _-14)
aux(love-18, can-16)
advmod(love-18, rightly-17)
advcl(one-6, love-18)
ccomp(one-6, love-18)
det(making-20, the-19)
dobj(love-18, making-20)
det(Maker-23, the-22)
prep_of(making-20, Maker-23)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (S
          (NP (PRP they))
          (VP (VBD had)
            (VP (VBN had)
              (NP (PRP$ their) (NN breakfast)))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (JJ old) (NNS people))
          (VP (VBD were)
            (ADJP (JJ ready)
              (PP (IN for)
                (NP (NN church))))))
        (: --)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP they))
            (VP (MD would)
              (VP
                (VP (VB listen)
                  (NP (DT a) (JJ little)))
                (, ,)
                (VP (VB sleep)
                  (NP (DT a) (JJ little)))
                (, ,)
                (VP (VB sing)
                  (ADVP (RB heartily)))
                (, ,)
                (CC and)
                (VP (VB hear)
                  (NP (NN nothing))
                  (PP (TO to)
                    (NP
                      (NP (NN wake) (NN hunger))
                      (, ,)
                      (NP (NN joy))
                      (CC or)
                      (NP (NN aspiration)))))))))))
    (, ,)
    (NP (NNP Dawtie))
    (VP
      (VP (VBD put)
        (NP
          (NP (DT a) (NN piece))
          (PP (IN of)
            (NP (NN oat-cake))))
        (PP (IN in)
          (NP (PRP$ her) (NN pocket))))
      (, ,)
      (CC and)
      (VP (VBD went)
        (S
          (VP (TO to)
            (VP (VB join)
              (NP (NNP Andrew))
              (SBAR
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP they))
                    (VP (VBD had)
                      (VP (VBN made)
                        (NP (PRP$ their) (NN tryst))))))
                (CC and)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP she))
                    (VP (VBD found)
                      (S
                        (NP (PRP him))
                        (VP (VBG waiting) (: --)
                          (PP (IN at)
                            (NP
                              (NP (PRP$ his) (NN length))
                              (PP (IN in)
                                (NP
                                  (NP (DT a) (NN bush))
                                  (PP (IN of)
                                    (NP (NN heather)))
                                  (, ,)
                                  (PP (IN with)
                                    (NP
                                      (NP (NNP Henry) (NNP Vaughan) (POS 's))
                                      (`` ``) (NNP Silex) (NNP Scintillans)))))
                              (, ,) ('' '')
                              (VP (VBG drawing)
                                (PP (IN from)
                                  (NP
                                    (NP (PRP it))
                                    (`` ``)
                                    (NP
                                      (NP (JJ bright) (NNS shoots))
                                      (PP (IN of)
                                        (NP (NNS everlastingness))))
                                    ('' ''))))
                              (PP (IN for)
                                (NP
                                  (NP (PRP$ his) (NNP Sabbath) (NN day) (POS 's))
                                  (NN delight))))))))))))))))
    (. .)))

advmod(had-4, When-1)
nsubj(had-4, they-2)
aux(had-4, had-3)
advcl(put-43, had-4)
poss(breakfast-6, their-5)
dobj(had-4, breakfast-6)
det(people-11, the-9)
amod(people-11, old-10)
nsubj(ready-13, people-11)
cop(ready-13, were-12)
conj_and(had-4, ready-13)
advcl(put-43, ready-13)
prep_for(ready-13, church-15)
advmod(listen-20, where-17)
nsubj(listen-20, they-18)
nsubj(sleep-24, they-18)
nsubj(sing-28, they-18)
nsubj(hear-32, they-18)
aux(listen-20, would-19)
conj_and(had-4, listen-20)
advcl(put-43, listen-20)
det(little-22, a-21)
dobj(listen-20, little-22)
conj_and(had-4, sleep-24)
conj_and(listen-20, sleep-24)
det(little-26, a-25)
dobj(sleep-24, little-26)
conj_and(had-4, sing-28)
conj_and(listen-20, sing-28)
advmod(sing-28, heartily-29)
conj_and(had-4, hear-32)
conj_and(listen-20, hear-32)
dobj(hear-32, nothing-33)
nn(hunger-36, wake-35)
prep_to(hear-32, hunger-36)
prep_to(hear-32, joy-38)
conj_or(hunger-36, joy-38)
prep_to(hear-32, aspiration-40)
conj_or(hunger-36, aspiration-40)
nsubj(put-43, Dawtie-42)
nsubj(went-53, Dawtie-42)
nsubj(join-55, Dawtie-42)
root(ROOT-0, put-43)
det(piece-45, a-44)
dobj(put-43, piece-45)
prep_of(piece-45, oat-cake-47)
poss(pocket-50, her-49)
prep_in(put-43, pocket-50)
conj_and(put-43, went-53)
aux(join-55, to-54)
xcomp(went-53, join-55)
dobj(join-55, Andrew-56)
advmod(made-60, where-57)
nsubj(made-60, they-58)
aux(made-60, had-59)
advcl(join-55, made-60)
poss(tryst-62, their-61)
dobj(made-60, tryst-62)
advmod(found-66, where-64)
nsubj(found-66, she-65)
advcl(join-55, found-66)
conj_and(made-60, found-66)
nsubj(waiting-68, him-67)
dep(found-66, waiting-68)
poss(length-72, his-71)
prep_at(waiting-68, length-72)
det(bush-75, a-74)
prep_in(length-72, bush-75)
prep_of(bush-75, heather-77)
nn(Vaughan-81, Henry-80)
poss(Scintillans-85, Vaughan-81)
nn(Scintillans-85, Silex-84)
prep_with(bush-75, Scintillans-85)
vmod(length-72, drawing-88)
prep_from(drawing-88, it-90)
amod(shoots-93, bright-92)
dep(it-90, shoots-93)
prep_of(shoots-93, everlastingness-95)
poss(day-100, his-98)
nn(day-100, Sabbath-99)
poss(delight-102, day-100)
prep_for(length-72, delight-102)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD read)
        (NP
          (NP (CD one)
            (CC or)
            (CD two))
          (PP (IN of)
            (NP (DT the) (NNS poems))))
        (PP (TO to)
          (NP
            (NP (NNP Dawtie))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD was)
                  (ADJP (JJ pleased)
                    (CC but)
                    (RB not) (JJ astonished)))))))))
    (: --)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (ADVP (RB never))
        (VP (VBN astonished)
          (PP (IN at)
            (NP (NN anything))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD had)
        (NP
          (NP (NN nothing))
          (PP (IN in)
            (NP (PRP her)))
          (S
            (VP (TO to)
              (VP (VB make)
                (ADJP (NN anything) (JJ beautiful))
                (PP (IN by)
                  (NP (NN contrast)))))))))
    (: ;)
    (S
      (NP (PRP$ her) (NN mind))
      (VP (VBD was)
        (PP (IN of)
          (NP
            (NP (NN beauty))
            (ADVP (PRP itself))))))
    (, ,)
    (CC and)
    (S
      (NP (NN anything) (JJ beautiful))
      (VP (VBD was)
        (PP (TO to)
          (NP (PRP her)))
        (PP (CC but)
          (PP (IN in)
            (NP
              (NP (DT the) (NN order)
                (CC and)
                (NN law))
              (PP (IN of)
                (NP
                  (NP (NNS things))
                  (: --)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBD was)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN expected)))))))))))))))
    (. .)))

nsubj(read-2, He-1)
root(ROOT-0, read-2)
dobj(read-2, one-3)
dobj(read-2, two-5)
conj_or(one-3, two-5)
det(poems-8, the-7)
prep_of(one-3, poems-8)
prep_to(read-2, Dawtie-10)
nsubj(astonished-17, Dawtie-10)
cop(astonished-17, was-13)
dep(astonished-17, pleased-14)
rcmod(Dawtie-10, not-16)
conj_but(astonished-17, not-16)
neg(astonished-17, not-16)
rcmod(Dawtie-10, astonished-17)
nsubjpass(astonished-22, she-19)
auxpass(astonished-22, was-20)
neg(astonished-22, never-21)
conj_and(read-2, astonished-22)
prep_at(astonished-22, anything-24)
nsubj(had-27, she-26)
conj_and(read-2, had-27)
dobj(had-27, nothing-28)
prep_in(nothing-28, her-30)
aux(make-32, to-31)
vmod(nothing-28, make-32)
npadvmod(beautiful-34, anything-33)
acomp(make-32, beautiful-34)
prep_by(make-32, contrast-36)
poss(mind-39, her-38)
nsubj(was-40, mind-39)
conj_and(read-2, was-40)
prep_of(was-40, beauty-42)
advmod(beauty-42, itself-43)
nsubj(was-48, anything-46)
amod(anything-46, beautiful-47)
conj_and(read-2, was-48)
prep_to(was-48, her-50)
cc(was-48, but-51)
det(order-54, the-53)
prep_in(was-48, order-54)
prep_in(was-48, law-56)
conj_and(order-54, law-56)
prep_of(order-54, things-58)
nsubj(was-61, things-58)
nsubjpass(expected-64, things-58)
rcmod(things-58, was-61)
aux(expected-64, to-62)
auxpass(expected-64, be-63)
xcomp(was-61, expected-64)

(ROOT
  (S
    (S
      (NP (NN Nothing))
      (VP (VBD struck)
        (NP (PRP her))
        (PP (RB because) (IN of)
          (NP (PRP$ its) (NN rarity)))))
    (: ;)
    (S
      (S
        (NP (DT the) (JJ rare))
        (VP (VBD was)
          (ADVP (IN at) (NN home))
          (PP (IN in)
            (NP (PRP$ her) (NN country)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (VBD was)
          (ADVP (IN at) (NN home))
          (PP (IN with)
            (NP (PRP it))))))
    (. .)))

nsubj(struck-2, Nothing-1)
root(ROOT-0, struck-2)
dobj(struck-2, her-3)
poss(rarity-7, its-6)
prep_because_of(struck-2, rarity-7)
det(rare-10, the-9)
nsubj(was-11, rare-10)
parataxis(struck-2, was-11)
advmod(was-11, at-12)
dep(at-12, home-13)
poss(country-16, her-15)
prep_in(was-11, country-16)
nsubj(was-20, she-19)
parataxis(struck-2, was-20)
conj_and(was-11, was-20)
advmod(was-20, at-21)
dep(at-21, home-22)
prep_with(was-20, it-24)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S (, ,)
        (PP (IN for)
          (NP (NN instance)))
        (, ,)
        (NP (PRP he))
        (VP (VBD read))))
    (: :) (`` ``)
    (NP
      (NP (NNP Father))
      (PP (IN of)
        (NP (NNS lights)))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (JJ sunny) (NNS seeds))
          (, ,) ('' '')
          (NP (PRP she))
          (VP
            (VP (VBD took)
              (NP (PRP it))
              (PRT (RP up))
              (PP (IN at)
                (NP (RB once))))
            (CC and)
            (VP (VBD understood)
              (NP (PRP it))))))
      (, ,))
    (VP
      (VP (VBD felt)
        (SBAR (IN that)
          (S
            (NP (DT the) (JJ good) (NN man))
            (VP (VBD had)
              (VP (VBN said)
                (NP
                  (NP (DT the) (NN thing))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD was)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN said))))))))))))))
      (, ,)
      (CC and)
      (VP (VBD loved)
        (NP (PRP him))
        (PP (IN for)
          (NP (PRP it)))))
    (. .)))

advmod(read-7, When-1)
prep_for(read-7, instance-4)
nsubj(read-7, he-6)
advcl(felt-29, read-7)
dobj(took-20, Father-10)
nsubj(felt-29, Father-10)
nsubj(loved-45, Father-10)
prep_of(Father-10, lights-12)
amod(seeds-16, sunny-15)
nsubj(took-20, seeds-16)
nsubj(understood-26, seeds-16)
nsubj(took-20, she-19)
rcmod(Father-10, took-20)
dobj(took-20, it-21)
prt(took-20, up-22)
prep(took-20, at-23)
pobj(at-23, once-24)
rcmod(Father-10, understood-26)
conj_and(took-20, understood-26)
dobj(understood-26, it-27)
root(ROOT-0, felt-29)
mark(said-35, that-30)
det(man-33, the-31)
amod(man-33, good-32)
nsubj(said-35, man-33)
aux(said-35, had-34)
ccomp(felt-29, said-35)
det(thing-37, the-36)
dobj(said-35, thing-37)
nsubj(was-39, thing-37)
nsubjpass(said-42, thing-37)
rcmod(thing-37, was-39)
aux(said-42, to-40)
auxpass(said-42, be-41)
xcomp(was-39, said-42)
conj_and(felt-29, loved-45)
dobj(loved-45, him-46)
prep_for(loved-45, it-48)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was) (RB not)
        (ADJP (JJ surprised)
          (S
            (VP (TO to)
              (VP (VB hear)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN prayer))
                    (VP (VBD was)
                      (ADJP
                        (NP
                          (QP (JJR more) (IN than) (CD two) (CD hundred))
                          (NNS years))
                        (JJ old)))))))))))
    (: ;)
    (SINV
      (VP (VBD were)
        (ADVP (RB there) (RB not)))
      (NP
        (NP (NNS millions))
        (PP (IN of)
          (NP
            (NP (NNS years))
            (PP (IN in)
              (NP (NN front)))))))
    (. ?)))

nsubj(surprised-4, She-1)
nsubj(hear-6, She-1)
cop(surprised-4, was-2)
neg(surprised-4, not-3)
root(ROOT-0, surprised-4)
aux(hear-6, to-5)
xcomp(surprised-4, hear-6)
mark(old-16, that-7)
det(prayer-9, the-8)
nsubj(old-16, prayer-9)
cop(old-16, was-10)
mwe(than-12, more-11)
quantmod(hundred-14, than-12)
number(hundred-14, two-13)
num(years-15, hundred-14)
npadvmod(old-16, years-15)
ccomp(hear-6, old-16)
parataxis(surprised-4, were-18)
advmod(not-20, there-19)
neg(were-18, not-20)
nsubj(were-18, millions-21)
prep_of(millions-21, years-23)
prep_in(years-23, front-25)

(ROOT
  (SBARQ
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (PRP it))
      (VP (VB be)
        (ADJP (JJ wonderful))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (JJ few) (NNS years))
              (PP (IN behind)
                (NP (NNS men))))
            (VP (MD should)
              (VP (VB have)
                (VP
                  (VP (VBN thought))
                  (CC and)
                  (VP (VBN felt)
                    (SBAR (IN as)
                      (S
                        (NP (PRP she))
                        (VP (VBD did)))))
                  (, ,)
                  (CC and)
                  (VP (VBN been)
                    (ADJP (JJ able)
                      (S
                        (VP (TO to)
                          (VP (VB say)
                            (NP (PRP it))))))
                    (SBAR (IN as)
                      (S
                        (NP (PRP she))
                        (ADVP (RB never))
                        (VP (MD could)))))))))))
      (. !))))

advmod(wonderful-5, why-1)
aux(wonderful-5, should-2)
nsubj(wonderful-5, it-3)
cop(wonderful-5, be-4)
root(ROOT-0, wonderful-5)
mark(thought-14, that-6)
det(years-9, a-7)
amod(years-9, few-8)
nsubj(thought-14, years-9)
nsubj(felt-16, years-9)
nsubj(able-23, years-9)
nsubj(say-25, years-9)
prep_behind(years-9, men-11)
aux(thought-14, should-12)
aux(thought-14, have-13)
ccomp(wonderful-5, thought-14)
ccomp(wonderful-5, felt-16)
conj_and(thought-14, felt-16)
mark(did-19, as-17)
nsubj(did-19, she-18)
advcl(felt-16, did-19)
cop(able-23, been-22)
ccomp(wonderful-5, able-23)
conj_and(thought-14, able-23)
aux(say-25, to-24)
xcomp(able-23, say-25)
dobj(say-25, it-26)
mark(could-30, as-27)
nsubj(could-30, she-28)
neg(could-30, never-29)
advcl(able-23, could-30)

(ROOT
  (SINV (VBD Had)
    (NP (PRP she))
    (RB not)
    (VP
      (ADVP (RB always))
      (VP (VBD loved)
        (NP (DT the) (JJ little) (NNS cocks)))
      (, ,)
      (CC and)
      (VP (VBD watched)
        (S
          (NP (PRP them))
          (VP (VBG learning)
            (PP (TO to)
              (NP
                (INTJ (UH crow) (. ?))))))))))

aux(loved-5, Had-1)
nsubj(loved-5, she-2)
nsubj(watched-11, she-2)
dep(loved-5, not-3)
advmod(loved-5, always-4)
root(ROOT-0, loved-5)
det(cocks-8, the-6)
amod(cocks-8, little-7)
dobj(loved-5, cocks-8)
conj_and(loved-5, watched-11)
nsubj(learning-13, them-12)
dep(watched-11, learning-13)
prep_to(learning-13, crow-15)

(ROOT
  (S (`` ``)
    (S
      (ADVP (CC But))
      (PRN (, ,)
        (S
          (NP (DT An) (`` `) (NN rew))
          (, ,) ('' '')
          (NP (PRP she))
          (VP (VBD said)
            (PP (IN at)
              (NP (NN length)))))
        (, ,))
      (`` ``)
      (NP (PRP I))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP (PRP ye))
              (NP
                (NP (NN something))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ 's)
                      (VP (VBN troublin) ('' ')
                        (NP (PRP me))))))))))))
    (: ;) (RB then)
    (S
      (NP (PRP ye))
      (VP (MD can)
        (VP (VB learn)
          (NP (PRP me))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP ye))
              (VP (VBP like)))))))
    (. .) ('' '')))

advmod(want-16, But-2)
det(rew-6, An-4)
nsubj(said-10, rew-6)
nsubj(said-10, she-9)
parataxis(want-16, said-10)
prep_at(said-10, length-12)
nsubj(want-16, I-15)
nsubj(tell-18, I-15)
root(ROOT-0, want-16)
aux(tell-18, to-17)
xcomp(want-16, tell-18)
iobj(tell-18, ye-19)
dobj(tell-18, something-20)
nsubjpass(troublin-23, something-20)
auxpass(troublin-23, 's-22)
rcmod(something-20, troublin-23)
dobj(troublin-23, me-25)
advmod(want-16, then-27)
nsubj(learn-30, ye-28)
aux(learn-30, can-29)
parataxis(want-16, learn-30)
dobj(learn-30, me-31)
dobj(like-34, what-32)
nsubj(like-34, ye-33)
dep(learn-30, like-34)

(ROOT
  (S
    (S
      (S (`` ``)
        (VP (VB Tell)
          (ADVP (RB on))
          (, ,) (VB Dawtie))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (NNP Andrew))))
    (: ;)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD began)))
    (. .)))

csubj(said-8, Tell-2)
advmod(Tell-2, on-3)
dep(Tell-2, Dawtie-5)
root(ROOT-0, said-8)
dobj(said-8, Andrew-9)
nsubj(began-13, she-12)
conj_and(said-8, began-13)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Ae) (NNP nicht))
      (VP (VBP aboot)
        (ADVP
          (NP (DT a) (NN fornight))
          (RB ago))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB couldna))
    (VP (VBP sleep))
    (. .)))

nn(nicht-3, Ae-2)
nsubj(aboot-4, nicht-3)
ccomp(sleep-11, aboot-4)
det(fornight-6, a-5)
npadvmod(ago-7, fornight-6)
advmod(aboot-4, ago-7)
nsubj(sleep-11, I-9)
advmod(sleep-11, couldna-10)
root(ROOT-0, sleep-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP drave)
        (NP
          (NP (SYM a))
          ('' ')
          (NP
            (NP (DT the) (NN sheep))
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD could)
                  (VP (VB gether)
                    (NP
                      (NP (FW i) (POS '))
                      (JJ my) (NN brain)))))))
          (, ,)
          (NP (NN ower) (NN ae) (NN stile) (NN efter) (NN anither)))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP
          (NP (DT the) (NN sleep))
          (VP (VBN stack)
            (PP (TO to)
              (NP
                (NP (DT the) (NN woo) (POS '))
                (NN o)))
            (`` ')
            (NP (PRP them))
            (, ,)))
        (, an) ('' ')
        (NP (NN ilk) (NN ane)))
      (VP (VBD took)
        (NP
          (NP
            (NP (NNP o) (POS '))
            ('' ') (NN t))
          (VP (VBG awa) ('' ')
            (NP (NN wi))
            ('' ')
            (NP (PRP him))))))
    (. .)))

nsubj(drave-2, I-1)
root(ROOT-0, drave-2)
dobj(drave-2, a-3)
det(sheep-6, the-5)
dep(a-3, sheep-6)
nsubj(gether-9, I-7)
aux(gether-9, could-8)
rcmod(sheep-6, gether-9)
poss(brain-13, i-10)
amod(brain-13, my-12)
dobj(gether-9, brain-13)
nn(anither-19, ower-15)
nn(anither-19, ae-16)
nn(anither-19, stile-17)
nn(anither-19, efter-18)
appos(a-3, anither-19)
det(sleep-23, the-22)
nsubj(took-37, sleep-23)
vmod(sleep-23, stack-24)
det(woo-27, the-26)
poss(o-29, woo-27)
prep_to(stack-24, o-29)
dobj(stack-24, them-31)
punct(sleep-23, an-33)
nn(ane-36, ilk-35)
dep(sleep-23, ane-36)
conj_but(drave-2, took-37)
poss(t-41, o-38)
dobj(took-37, t-41)
vmod(t-41, awa-42)
dobj(awa-42, wi-44)
dobj(awa-42, him-46)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBZ wadna)
        (SBAR
          (SBAR
            (S
              (NP (NN hae))
              (VP (VBD tried))))
          (, ,)
          (CC but)
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBD had)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (PP (IN up)
                        (NP (NN ear) (POS '))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBN feared)
          (S
            (NP (PRP I))
            (VP (VB wad)
              (NP (NN sleep))
              (PP (IN in)))))))
    (. .) ('' '')))

nsubj(wadna-2, I-1)
root(ROOT-0, wadna-2)
nsubj(tried-4, hae-3)
ccomp(wadna-2, tried-4)
mark(had-9, that-7)
nsubj(had-9, I-8)
nsubj(be-11, I-8)
ccomp(wadna-2, had-9)
conj_but(tried-4, had-9)
aux(be-11, to-10)
xcomp(had-9, be-11)
prep_up(be-11, ear-13)
nsubjpass(feared-19, I-17)
auxpass(feared-19, was-18)
conj_and(wadna-2, feared-19)
nsubj(wad-21, I-20)
ccomp(feared-19, wad-21)
dobj(wad-21, sleep-22)
prep(wad-21, in-23)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (DT the) (NN sake))
        (PP (IN of)
          (NP (PRP$ my)
            (ADJP (RBR more) (JJ polished))
            (NNS readers)))))
    (PRN (: --)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB not)
          (VP (VB say)
            (NP
              (ADJP (RBR more) (JJ _))
              (JJ refined) (NNS _))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (NN polish)
                  (CC and)
                  (NN refinement))
                (VP (MD may)
                  (VP (VB be)
                    (NP (NNS worlds))
                    (ADVP (RB apart)))))))))
      (: --))
    (NP (PRP I))
    (VP (MD will)
      (VP (VB give)
        (NP
          (NP (DT the) (NN rest))
          (PP (IN in)
            (NP (JJ modern) (NNP English))))))
    (. .)))

det(sake-3, the-2)
prep_for(give-30, sake-3)
poss(readers-8, my-5)
advmod(polished-7, more-6)
amod(readers-8, polished-7)
prep_of(sake-3, readers-8)
nsubj(say-13, I-10)
aux(say-13, do-11)
neg(say-13, not-12)
parataxis(give-30, say-13)
advmod(_-15, more-14)
amod(_-17, _-15)
amod(_-17, refined-16)
dobj(say-13, _-17)
mark(worlds-25, for-19)
nsubj(worlds-25, polish-20)
conj_and(polish-20, refinement-22)
nsubj(worlds-25, refinement-22)
aux(worlds-25, may-23)
cop(worlds-25, be-24)
advcl(say-13, worlds-25)
advmod(worlds-25, apart-26)
nsubj(give-30, I-28)
aux(give-30, will-29)
root(ROOT-0, give-30)
det(rest-32, the-31)
dobj(give-30, rest-32)
amod(English-35, modern-34)
prep_in(rest-32, English-35)

(ROOT
  (S
    (S (`` ``) (IN So)
      (NP (PRP I))
      (VP
        (VP (VBD got)
          (PRT (RP up)))
        (, ,)
        (CC and)
        (VP (VBD thought)
          (PP (TO to)
            (NP (NN sweep)
              (CC and)
              (NN dust)))
          (NP
            (NP (DT the) (NN hall))
            (CC and)
            (NP (DT the) (NNS stairs))))))
    (: ;)
    (S (RB then)
      (SBAR (IN if) (, ,)
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP I))
              (VP (VBD lay)
                (PRT (RP down))
                (ADVP (RB again)))))
          (, ,)
          (NP (PRP I))
          (VP (MD should)
            (VP (VB sleep)
              (ADJP (RB too) (JJ long))))))
      (, ,)
      (NP (EX there))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (DT a) (NN part))
            (PP (IN of)
              (NP
                (NP
                  (NP (DT the) (NN day) (POS 's))
                  (NN work))
                (VP (VBN done))))))))
    (. !)))

dep(got-4, So-2)
nsubj(got-4, I-3)
nsubj(thought-8, I-3)
root(ROOT-0, got-4)
prt(got-4, up-5)
conj_and(got-4, thought-8)
prep_to(thought-8, sweep-10)
prep_to(thought-8, dust-12)
conj_and(sweep-10, dust-12)
det(hall-14, the-13)
dobj(thought-8, hall-14)
det(stairs-17, the-16)
dobj(thought-8, stairs-17)
conj_and(hall-14, stairs-17)
advmod(part-38, then-19)
mark(sleep-30, if-20)
advmod(lay-24, when-22)
nsubj(lay-24, I-23)
advcl(sleep-30, lay-24)
prt(lay-24, down-25)
advmod(lay-24, again-26)
nsubj(sleep-30, I-28)
aux(sleep-30, should-29)
advcl(part-38, sleep-30)
advmod(long-32, too-31)
acomp(sleep-30, long-32)
expl(part-38, there-34)
aux(part-38, would-35)
cop(part-38, be-36)
det(part-38, a-37)
parataxis(got-4, part-38)
det(day-41, the-40)
poss(work-43, day-41)
prep_of(part-38, work-43)
vmod(work-43, done-44)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP know) (, ,)
        (NP
          (NP (NNP Andrew))
          (, ,)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (NN house))
              (VP (VBZ is)
                (ADJP (JJ like))))))))
    (: ;)
    (S
      (PP (IN at)
        (NP
          (NP (DT the) (NN top))
          (PP (IN of)
            (NP
              (NP (DT the) (NN stair))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ begins)
                    (S
                      (ADVP (RB directly))
                      (NP (PRP you))
                      (VP (VBP enter)
                        (NP (DT the) (NN house)))))))))))
      (, ,)
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ big) (NN irregular) (NN place))
          (, ,)
          (ADJP (JJR bigger)
            (PP (IN than)
              (NP
                (NP (DT the) (NN floor))
                (PP (IN of)
                  (NP (PRP$ your) (NN barn))))))
          (, ,)
          (VP (VBN laid)
            (PP (IN with)
              (NP (NNS flags)))))))
    (. .)))

nsubj(know-2, You-1)
root(ROOT-0, know-2)
dobj(know-2, Andrew-4)
dobj(like-10, Andrew-4)
det(house-8, the-7)
nsubj(like-10, house-8)
cop(like-10, is-9)
rcmod(Andrew-4, like-10)
det(top-14, the-13)
prep_at(is-27, top-14)
det(stair-17, the-16)
prep_of(top-14, stair-17)
nsubj(begins-19, stair-17)
rcmod(stair-17, begins-19)
advmod(enter-22, directly-20)
nsubj(enter-22, you-21)
ccomp(begins-19, enter-22)
det(house-24, the-23)
dobj(enter-22, house-24)
expl(is-27, there-26)
parataxis(know-2, is-27)
det(place-31, a-28)
amod(place-31, big-29)
nn(place-31, irregular-30)
nsubj(is-27, place-31)
amod(place-31, bigger-33)
det(floor-36, the-35)
prep_than(bigger-33, floor-36)
poss(barn-39, your-38)
prep_of(floor-36, barn-39)
vmod(place-31, laid-41)
prep_with(laid-41, flags-43)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (SBAR (RB just) (RB as) (IN if)
          (S
            (NP
              (NP (PDT all) (DT the) (JJ different) (NNS parts))
              (PP (IN of)
                (NP (DT the) (NN house))))
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBN built)
                  (PP (IN at)
                    (NP
                      (NP (JJ different) (NNS times) (NN round))
                      (PP (IN about)
                        (NP (PRP it))))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP it))
      (VP (VBD was)
        (VP
          (NP (PRP itself))
          (VBN roofed)
          (PP (IN in)
            (PP (IN by)
              (NP (DT an) (NN after-thought)))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
advmod(built-15, just-3)
advmod(built-15, as-4)
mark(built-15, if-5)
predet(parts-9, all-6)
det(parts-9, the-7)
amod(parts-9, different-8)
nsubjpass(built-15, parts-9)
det(house-12, the-11)
prep_of(parts-9, house-12)
aux(built-15, had-13)
auxpass(built-15, been-14)
advcl(is-2, built-15)
ccomp(is-2, built-15)
amod(round-19, different-17)
nn(round-19, times-18)
prep_at(built-15, round-19)
prep_about(round-19, it-21)
advmod(roofed-28, then-24)
nsubjpass(roofed-28, it-25)
auxpass(roofed-28, was-26)
dobj(roofed-28, itself-27)
conj_and(is-2, roofed-28)
prep(roofed-28, in-29)
pcomp(in-29, by-30)
det(after-thought-32, an-31)
pobj(by-30, after-thought-32)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP we))
          (VP (VBP call)
            (S
              (VP (VBG _)
                (NP (DT the) (NN hall) (NN _))))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
dobj(call-5, what-3)
nsubj(call-5, we-4)
ccomp('s-2, call-5)
xcomp(call-5, _-6)
det(_-9, the-7)
nn(_-9, hall-8)
dobj(_-6, _-9)

(ROOT
  (SINV
    (S
      (NP (DT The) (JJ spare) (NN room))
      (VP (VBZ opens)
        (PP
          (PP (IN on)
            (NP
              (NP (DT the) (NN left))
              (PP (IN at)
                (NP
                  (NP (DT the) (NN top))
                  (PP (IN of)
                    (NP (DT the) (NN stair)))))))
          (, ,)
          (CC and)
          (PP (TO to)
            (NP (DT the) (NN right)))
          (, ,)
          (PP (IN across)
            (NP (DT the) (NN hall)))
          (, ,)
          (PP (IN beyond)
            (NP
              (NP (DT the) (NN swell))
              (PP (IN of)
                (NP (DT the) (JJ short) (JJ thick) (NN tower)))))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP see)
                (NP
                  (NP (DT the) (NN half))
                  (PP (IN of) (NN outside)))))))))
    (, ,)
    (VP (VBZ is))
    (NP
      (NP (DT the) (NN door))
      (PP (IN of)
        (NP (DT the) (NN study))))
    (. .)))

det(room-3, The-1)
amod(room-3, spare-2)
nsubj(opens-4, room-3)
nsubj(opens-4', room-3)
nsubj(opens-4'', room-3)
nsubj(opens-4''', room-3)
conj_and(opens-4, opens-4')
conj_and(opens-4, opens-4'')
conj_and(opens-4, opens-4''')
ccomp(is-39, opens-4)
ccomp(is-39, opens-4')
ccomp(is-39, opens-4'')
ccomp(is-39, opens-4''')
det(left-7, the-6)
prep_on(opens-4, left-7)
det(top-10, the-9)
prep_at(left-7, top-10)
det(stair-13, the-12)
prep_of(top-10, stair-13)
det(right-18, the-17)
prep_to(opens-4', right-18)
det(hall-22, the-21)
prep_across(opens-4'', hall-22)
det(swell-26, the-25)
prep_beyond(opens-4''', swell-26)
det(tower-31, the-28)
amod(tower-31, short-29)
amod(tower-31, thick-30)
prep_of(swell-26, tower-31)
nsubj(see-33, you-32)
dep(opens-4, see-33)
det(half-35, the-34)
dobj(see-33, half-35)
prep(half-35, of-36)
dep(of-36, outside-37)
root(ROOT-0, is-39)
det(door-41, the-40)
nsubj(is-39, door-41)
det(study-44, the-43)
prep_of(door-41, study-44)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP (DT all) (NN round))
        (PP (IN with)
          (NP (NNS books)))
        (: --)
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP (PRP them)))
          (PRN (, ,)
            (S
              (NP (NN mistress))
              (VP (VBZ says)))
            (, ,))
          (ADJP (IN worth)
            (NP
              (NP (PRP$ their) (NN weight))
              (PP (IN in)
                (NP (NN gold))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (ADJP (RB so) (JJ scarce)))
    (. .)))

nsubj(round-4, It-1)
cop(round-4, is-2)
det(round-4, all-3)
ccomp(scarce-24, round-4)
prep_with(round-4, books-6)
parataxis(round-4, some-8)
prep_of(some-8, them-10)
nsubj(says-13, mistress-12)
dep(some-8, says-13)
amod(some-8, worth-15)
poss(weight-17, their-16)
dep(worth-15, weight-17)
prep_in(weight-17, gold-19)
nsubj(scarce-24, they-21)
cop(scarce-24, are-22)
advmod(scarce-24, so-23)
root(ROOT-0, scarce-24)

(ROOT
  (S (CC But)
    (NP (DT the) (NN master))
    (VP (VBZ trusts)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB dust)
            (NP (PRP them))))))
    (. .)))

cc(trusts-4, But-1)
det(master-3, the-2)
nsubj(trusts-4, master-3)
root(ROOT-0, trusts-4)
dobj(trusts-4, me-5)
nsubj(dust-7, me-5)
aux(dust-7, to-6)
xcomp(trusts-4, dust-7)
dobj(dust-7, them-8)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD used)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (PRP it))
              (NP (PRP himself)))))))
    (: ;)
    (S
      (S (CC but)
        (SBAR (RB now) (IN that)
          (S
            (NP (PRP he))
            (VP (VBZ is)
              (VP (VBG getting)
                (ADJP (JJ old))))))
        (, ,)
        (NP (PRP he))
        (VP (VBZ does) (RB not)
          (VP (VB like)
            (NP (DT the) (NN trouble)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBZ makes)
          (S
            (NP (PRP him))
            (ADJP (JJ asthmatic))))))
    (. .)))

nsubj(used-2, He-1)
nsubj(do-4, He-1)
root(ROOT-0, used-2)
aux(do-4, to-3)
xcomp(used-2, do-4)
iobj(do-4, it-5)
dobj(do-4, himself-6)
advmod(old-14, now-9)
mark(old-14, that-10)
nsubj(old-14, he-11)
aux(old-14, is-12)
dep(old-14, getting-13)
advcl(like-19, old-14)
nsubj(like-19, he-16)
aux(like-19, does-17)
neg(like-19, not-18)
parataxis(used-2, like-19)
det(trouble-21, the-20)
dobj(like-19, trouble-21)
nsubj(makes-25, it-24)
parataxis(used-2, makes-25)
conj_and(like-19, makes-25)
nsubj(asthmatic-27, him-26)
xcomp(makes-25, asthmatic-27)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ says)
        (SBAR
          (S
            (NP (NNS books))
            (VP
              (VP
                (ADVP (RBR more))
                (VBP need)
                (S
                  (VP (VBG dusting)
                    (PP (IN than)
                      (NP (NN anything) (RB else))))))
              (, ,)
              (CC but)
              (VP (VBP are)
                (PP (IN in)
                  (NP
                    (NP (JJR more) (NN danger))
                    (PP (IN of)
                      (S
                        (VP (VBG being)
                          (VP (VBN hurt)
                            (PP (IN by)
                              (NP (PRP it)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ makes)
        (S
          (NP (PRP him))
          (ADJP (JJ nervous)
            (S
              (VP (TO to)
                (VP (VB see)
                  (S
                    (NP (PRP me))
                    (VP (VB touch)
                      (NP (PRP them)))))))))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
nsubj(need-5, books-3)
nsubj(are-12, books-3)
advmod(need-5, more-4)
ccomp(says-2, need-5)
xcomp(need-5, dusting-6)
prep_than(dusting-6, anything-8)
advmod(anything-8, else-9)
ccomp(says-2, are-12)
conj_but(need-5, are-12)
amod(danger-15, more-14)
prep_in(are-12, danger-15)
auxpass(hurt-18, being-17)
prepc_of(danger-15, hurt-18)
agent(hurt-18, it-20)
nsubj(makes-24, it-23)
conj_and(says-2, makes-24)
nsubj(nervous-26, him-25)
nsubj(see-28, him-25)
xcomp(makes-24, nervous-26)
aux(see-28, to-27)
xcomp(nervous-26, see-28)
nsubj(touch-30, me-29)
ccomp(see-28, touch-30)
dobj(touch-30, them-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN known)
        (S
          (NP (PRP him))
          (VP (VB stand)
            (NP
              (NP (DT an) (NN hour))
              (VP (VBG watching)
                (NP (PRP me))
                (SBAR (IN while)
                  (S
                    (NP (PRP I))
                    (VP (VBD dusted) (, ,)
                      (S
                        (VP (VBG looking)
                          (NP (PDT all) (DT the) (NN time))
                          (SBAR (RB as) (IN if)
                            (S
                              (NP (PRP he))
                              (VP (VBD had)
                                (ADVP (RB just))
                                (VP (VBN taken)
                                  (NP
                                    (NP (DT a) (NN dose))
                                    (PP (IN of)
                                      (NP (NN medicine)))))))))))))))))))
    (. .)))

nsubj(known-3, I-1)
aux(known-3, have-2)
root(ROOT-0, known-3)
nsubj(stand-5, him-4)
ccomp(known-3, stand-5)
det(hour-7, an-6)
dobj(stand-5, hour-7)
vmod(hour-7, watching-8)
dobj(watching-8, me-9)
mark(dusted-12, while-10)
nsubj(dusted-12, I-11)
advcl(watching-8, dusted-12)
xcomp(dusted-12, looking-14)
predet(time-17, all-15)
det(time-17, the-16)
dobj(looking-14, time-17)
advmod(taken-23, as-18)
mark(taken-23, if-19)
nsubj(taken-23, he-20)
aux(taken-23, had-21)
advmod(taken-23, just-22)
advcl(looking-14, taken-23)
det(dose-25, a-24)
dobj(taken-23, dose-25)
prep_of(dose-25, medicine-27)

(ROOT
  (S (CC So)
    (NP (PRP I))
    (ADVP (RB often))
    (VP (VBP do)
      (NP (DT a) (JJ few) (NNS books))
      (PP (IN at)
        (NP
          (NP (DT a) (NN time))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP I))
              (VP (MD can))))))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBZ is) (RB not)
            (PP (IN in)
              (NP (DT the) (NN way)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN worried)
                        (PP (IN with)
                          (NP (PRP it)))))))))))))
    (. .)))

cc(do-4, So-1)
nsubj(do-4, I-2)
advmod(do-4, often-3)
root(ROOT-0, do-4)
det(books-7, a-5)
amod(books-7, few-6)
dobj(do-4, books-7)
det(time-10, a-9)
prep_at(do-4, time-10)
mark(can-14, as-12)
nsubj(can-14, I-13)
rcmod(time-10, can-14)
advmod(is-18, when-16)
nsubj(is-18, he-17)
advcl(do-4, is-18)
neg(is-18, not-19)
det(way-22, the-21)
prep_in(is-18, way-22)
aux(worried-25, to-23)
auxpass(worried-25, be-24)
vmod(way-22, worried-25)
prep_with(worried-25, it-27)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (ADVP (RB always))
    (VP (VBZ knows)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBN been)
              (PP (IN with)
                (NP
                  (NP (PRP$ my) (NN duster))
                  (CC and)
                  (NP (JJ long-haired) (NN brush)))))))))
    (. .)))

cc(knows-4, But-1)
nsubj(knows-4, he-2)
advmod(knows-4, always-3)
root(ROOT-0, knows-4)
advmod(been-8, where-5)
nsubj(been-8, I-6)
aux(been-8, have-7)
ccomp(knows-4, been-8)
poss(duster-11, my-10)
prep_with(been-8, duster-11)
amod(brush-14, long-haired-13)
prep_with(been-8, brush-14)
conj_and(duster-11, brush-14)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (NP (PRP it))
    (VP (VBD came)
      (PP (IN across)
        (NP (PRP me)))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBD had)
            (NP
              (NP
                (NP (JJR better) (NN dust))
                (NP (DT some) (NNS books))
                (ADVP (RB first)))
              (PP (IN of)
                (NP (DT all))))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (NP
                    (NP (DT a) (JJ good) (NN chance))
                    (, ,)
                    (NP
                      (NP (PRP he))
                      (VP (VBG being)
                        (VP (VB sound)
                          (ADJP (RB asleep)))))))))))))
    (. .)))

cc(came-4, And-1)
advmod(came-4, now-2)
nsubj(came-4, it-3)
root(ROOT-0, came-4)
prep_across(came-4, me-6)
mark(had-9, that-7)
nsubj(had-9, I-8)
ccomp(came-4, had-9)
amod(dust-11, better-10)
dobj(had-9, dust-11)
det(books-13, some-12)
dep(dust-11, books-13)
advmod(dust-11, first-14)
prep_of(dust-11, all-16)
mark(chance-23, as-18)
nsubj(chance-23, it-19)
cop(chance-23, was-20)
det(chance-23, a-21)
amod(chance-23, good-22)
advcl(had-9, chance-23)
appos(chance-23, he-25)
aux(sound-27, being-26)
vmod(he-25, sound-27)
acomp(sound-27, asleep-28)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP
      (VP (VBZ lighted)
        (NP (PRP$ my) (NN lamp)))
      (, ,)
      (VP (VBD went)
        (ADVP (RB straight))
        (PP (TO to)
          (NP (DT the) (NN study))))
      (, ,)
      (CC and)
      (VP (VBD began)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP I))
            (ADVP (RB last))
            (VP (VBD left)
              (PRT (RP off)))))))
    (. .)))

dep(lighted-3, So-1)
nsubj(lighted-3, I-2)
nsubj(went-7, I-2)
nsubj(began-14, I-2)
root(ROOT-0, lighted-3)
poss(lamp-5, my-4)
dobj(lighted-3, lamp-5)
conj_and(lighted-3, went-7)
advmod(went-7, straight-8)
det(study-11, the-10)
prep_to(went-7, study-11)
conj_and(lighted-3, began-14)
advmod(left-18, where-15)
nsubj(left-18, I-16)
advmod(left-18, last-17)
advcl(began-14, left-18)
prt(left-18, off-19)

(ROOT
  (S (`` ``)
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBD was)
          (VP (VBG dusting)))))
    (, ,)
    (NP
      (NP (CD one))
      (PP (IN of)
        (NP
          (NP (DT the) (NNS books))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD came)
                (PP (TO to))))))))
    (VP (VBD looked)
      (ADJP (RB so) (JJ new)
        (CC and)
        (JJ different))
      (PP (IN from)
        (NP (DT the) (NN rest)))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBD opened)
            (S
              (NP (PRP it))
              (VP (TO to)
                (VP (VB see)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (PP (IN like)
                          (NP (NN inside)))))))))))))
    (. .)))

mark(dusting-5, As-2)
nsubj(dusting-5, I-3)
aux(dusting-5, was-4)
advcl(looked-14, dusting-5)
nsubj(looked-14, one-7)
det(books-10, the-9)
prep_of(one-7, books-10)
prep_to(came-12, books-10)
nsubj(came-12, I-11)
rcmod(books-10, came-12)
root(ROOT-0, looked-14)
advmod(new-16, so-15)
acomp(looked-14, new-16)
acomp(looked-14, different-18)
conj_and(new-16, different-18)
det(rest-21, the-20)
prep_from(looked-14, rest-21)
mark(opened-24, that-22)
nsubj(opened-24, I-23)
ccomp(looked-14, opened-24)
dobj(opened-24, it-25)
nsubj(see-27, it-25)
aux(see-27, to-26)
xcomp(opened-24, see-27)
dobj(was-30, what-28)
nsubj(was-30, it-29)
ccomp(see-27, was-30)
prep_like(was-30, inside-32)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD was)
          (ADJP (JJ full)
            (PP (IN of)
              (NP
                (NP
                  (NP (NNS pictures))
                  (PP (IN of)
                    (NP (NNS mugs))))
                (, ,)
                (CC and)
                (NP
                  (NP (NN gold)
                    (CC and)
                    (NN silver) (NNS jugs))
                  (CC and)
                  (NP (NNS cups))))))))
      (: --)
      (S
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP (PRP them))))
        (ADJP (JJ plain)))
      (CC and)
      (S
        (NP (DT some))
        (VP (VBN colored))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (VBN colored) (NNS ones))))
      (VP (VBD was)
        (ADJP (RB so) (JJ beautiful))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBD stood)
              (CC and)
              (VBD looked)
              (PP (IN at)
                (NP (PRP it))))))))
    (. .)))

nsubj(full-3, It-1)
nsubj(plain-20, It-1)
cop(full-3, was-2)
root(ROOT-0, full-3)
prep_of(full-3, pictures-5)
prep_of(pictures-5, mugs-7)
nn(jugs-13, gold-10)
conj_and(gold-10, silver-12)
nn(jugs-13, silver-12)
prep_of(full-3, jugs-13)
conj_and(pictures-5, jugs-13)
conj_and(pictures-5, cups-15)
conj_and(jugs-13, cups-15)
dep(plain-20, some-17)
prep_of(some-17, them-19)
conj_and(full-3, plain-20)
nsubj(colored-23, some-22)
conj_and(full-3, colored-23)
nsubj(beautiful-33, one-26)
det(ones-30, the-28)
amod(ones-30, colored-29)
prep_of(one-26, ones-30)
cop(beautiful-33, was-31)
advmod(beautiful-33, so-32)
conj_and(full-3, beautiful-33)
mark(stood-36, that-34)
nsubj(stood-36, I-35)
nsubj(looked-38, I-35)
ccomp(beautiful-33, stood-36)
ccomp(beautiful-33, looked-38)
conj_and(stood-36, looked-38)
prep_at(stood-36, it-40)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT a) (JJ gold) (NN cup))))
    (, ,)
    (NP (PRP I))
    (VP (VBP suppose)
      (PRN (, ,)
        (SBAR (IN for)
          (S
            (S
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (ADJP (JJ yellow))))
              (: ;)
              (CC and)
              (S
                (NP (DT all) (NN round))
                (NP (DT the) (NN edge))))
            (, ,)
            (CC and)
            (S
              (PP (IN on)
                (NP (DT the) (NNS sides)))
              (, ,)
              (NP (PRP it))
              (VP (VBD was)
                (VP (VBN set)
                  (PP (IN with)
                    (NP (NNS stones))))))))
        (, ,))
      (PP (IN like)
        (NP
          (NP (DT the) (NNS stones))
          (PP (IN in)
            (NP
              (NP (NN mistress) (POS 's))
              (NNS rings)))))
      (, ,)
      (ADJP (RB only) (RB much) (JJR bigger)))
    (. .)))

nsubj(cup-5, It-1)
cop(cup-5, was-2)
det(cup-5, a-3)
amod(cup-5, gold-4)
ccomp(suppose-8, cup-5)
nsubj(suppose-8, I-7)
root(ROOT-0, suppose-8)
mark(yellow-13, for-10)
nsubj(yellow-13, it-11)
cop(yellow-13, was-12)
parataxis(suppose-8, yellow-13)
det(round-17, all-16)
dep(edge-19, round-17)
det(edge-19, the-18)
parataxis(suppose-8, edge-19)
conj_and(yellow-13, edge-19)
det(sides-24, the-23)
prep_on(set-28, sides-24)
nsubjpass(set-28, it-26)
auxpass(set-28, was-27)
parataxis(suppose-8, set-28)
conj_and(yellow-13, set-28)
prep_with(set-28, stones-30)
det(stones-34, the-33)
prep_like(suppose-8, stones-34)
poss(rings-38, mistress-36)
prep_in(stones-34, rings-38)
advmod(bigger-42, only-40)
advmod(bigger-42, much-41)
acomp(suppose-8, bigger-42)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (ADJP
        (ADJP (JJ blue))
        (CC and)
        (ADJP (JJ red)
          (CC and)
          (JJ green)
          (CC and)
          (JJ yellow))
        (, ,)
        (CC and)
        (ADJP (RBR more) (JJ colors)))
      (SBAR (IN than)
        (S
          (NP (PRP I))
          (VP (MD can)
            (VP (VB remember))))))
    (. .)))

nsubj(blue-3, They-1)
nsubj(green-7, They-1)
nsubj(colors-13, They-1)
cop(blue-3, were-2)
root(ROOT-0, blue-3)
dep(green-7, red-5)
conj_and(blue-3, green-7)
conj_and(blue-3, yellow-9)
conj_and(green-7, yellow-9)
advmod(colors-13, more-12)
conj_and(blue-3, colors-13)
mark(remember-17, than-14)
nsubj(remember-17, I-15)
aux(remember-17, can-16)
advcl(blue-3, remember-17)

(ROOT
  (S
    (S
      (NP (DT The) (NN book))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (VP (VBN made)
                (PP (IN by)
                  (NP (NN somebody)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP forget)
        (NP (PRP$ his) (NN name))))
    (. .)))

det(book-2, The-1)
nsubj(said-3, book-2)
root(ROOT-0, said-3)
nsubjpass(made-6, it-4)
auxpass(made-6, was-5)
ccomp(said-3, made-6)
agent(made-6, somebody-8)
nsubj(forget-12, I-11)
conj_but(said-3, forget-12)
poss(name-14, his-13)
dobj(forget-12, name-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a) (JJ long) (NN name)))
    (. .)))

nsubj(name-5, It-1)
cop(name-5, was-2)
det(name-5, a-3)
amod(name-5, long-4)
root(ROOT-0, name-5)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ first) (NN part))
        (PP (IN of)
          (NP (PRP it))))
      (VP (VBD began)
        (PP (IN with)
          (NP
            (NP (DT a) (NNP _) (NNP B) (NNP _))
            (, ,)
            (CC and)
            (NP (DT the) (NN second))))
        (PP (IN with)
          (NP (DT a) (NNP _) (NNP C) (NNP _)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP remember)
      (ADVP (RB that) (RB much)))
    (. .)))

det(part-3, The-1)
amod(part-3, first-2)
nsubj(began-6, part-3)
prep_of(part-3, it-5)
ccomp(remember-23, began-6)
det(_-11, a-8)
nn(_-11, _-9)
nn(_-11, B-10)
prep_with(began-6, _-11)
det(second-15, the-14)
prep_with(began-6, second-15)
conj_and(_-11, second-15)
det(_-20, a-17)
nn(_-20, _-18)
nn(_-20, C-19)
prep_with(began-6, _-20)
nsubj(remember-23, I-22)
root(ROOT-0, remember-23)
advmod(much-25, that-24)
advmod(remember-23, much-25)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (PP (IN like)
          (NP (NNP _) (NNP Benjamin) (NNP _)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was) (RB n't)
        (NP (NNP _) (NNP Benjamin) (NNP _))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
nn(_-6, _-4)
nn(_-6, Benjamin-5)
prep_like(was-2, _-6)
nsubj(_-14, it-9)
cop(_-14, was-10)
neg(_-14, n't-11)
nn(_-14, _-12)
nn(_-14, Benjamin-13)
conj_but(was-2, _-14)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP put)
        (NP (PRP it))
        (PRT (RP back))
        (PP (IN in)
          (NP (PRP$ its) (NN place)))
        (, ,)
        (S
          (VP (VBG thinking)
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD would)
                  (VP (VB ask)
                    (NP (DT the) (NN master))
                    (SBAR (IN whether)
                      (S
                        (NP (EX there))
                        (ADVP (RB really))
                        (VP (VBD were)
                          (NP (JJ such) (JJ beautiful) (NNS things))))))))))))
      (, ,)
      (CC and)
      (VP (VBD took)
        (PRT (RP down))
        (NP (DT the) (JJ next))))
    (. .)))

nsubj(put-2, I-1)
nsubj(took-24, I-1)
root(ROOT-0, put-2)
dobj(put-2, it-3)
prt(put-2, back-4)
poss(place-7, its-6)
prep_in(put-2, place-7)
vmod(put-2, thinking-9)
nsubj(ask-12, I-10)
aux(ask-12, would-11)
ccomp(thinking-9, ask-12)
det(master-14, the-13)
dobj(ask-12, master-14)
mark(were-18, whether-15)
expl(were-18, there-16)
advmod(were-18, really-17)
ccomp(ask-12, were-18)
amod(things-21, such-19)
amod(things-21, beautiful-20)
nsubj(were-18, things-21)
conj_and(put-2, took-24)
prt(took-24, down-25)
det(next-27, the-26)
dobj(took-24, next-27)

(ROOT
  (S
    (S
      (SBAR (RB Now) (IN whether)
        (S
          (NP (DT that))
          (VP (VBD had)
            (VP (VBN been)
              (VP (VBN passed)
                (PRT (RP over))
                (PP (IN between)
                  (NP (CD two) (NNS batches))))))))
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (RB so) (JJ dusty))
          (SBAR (IN that)
            (S
              (SBAR (IN before)
                (S
                  (NP (PRP I))
                  (VP (MD would)
                    (VP (VB touch)
                      (NP (DT another))))))
              (NP (PRP I))
              (VP (VBD gave)
                (NP (DT the) (NN duster))
                (NP (DT a) (NN shake)))))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (DT the) (NN wind))
          (PP (IN of)
            (NP (PRP it))))
        (VP (VBD blew)
          (ADVP
            (NP (DT the) (NN lamp))
            (IN out))
          (SBAR
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD took)
                  (NP (PRP it))
                  (PRT (RP up))
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB take)
                          (NP (PRP it))
                          (PP (TO to)
                            (NP (DT the) (NN kitchen))))
                        (CC and)
                        (VP (VB kindle)
                          (NP (PRP it))
                          (ADVP (RB again))))))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB when))
                    (S (, ,)
                      (PP (TO to)
                        (NP (PRP$ my) (NN astonishment)))
                      (, ,)
                      (NP (PRP I))
                      (VP (VBD saw)
                        (NP (DT a) (NN light))
                        (PP (IN under)
                          (NP
                            (NP (DT the) (NN door))
                            (PP (IN of)
                              (NP
                                (NP (DT a) (NN press))
                                (SBAR
                                  (WHNP (WDT which))
                                  (S
                                    (VP (VBD was)
                                      (VP
                                        (ADVP (RB always))
                                        (VBN locked)))))))))))))))
            (, ,)
            (CC and)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (NN master))
                (VP (VBD said)
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD kept)
                        (NP (PRP$ his) (JJS most) (JJ precious) (NNS books))))))))))))
    (. .)))

advmod(passed-6, Now-1)
mark(passed-6, whether-2)
nsubjpass(passed-6, that-3)
aux(passed-6, had-4)
auxpass(passed-6, been-5)
advcl(know-14, passed-6)
prt(passed-6, over-7)
num(batches-10, two-9)
prep_between(passed-6, batches-10)
nsubj(know-14, I-11)
aux(know-14, do-12)
neg(know-14, n't-13)
root(ROOT-0, know-14)
nsubj(dusty-20, it-17)
cop(dusty-20, was-18)
advmod(dusty-20, so-19)
conj_but(know-14, dusty-20)
mark(gave-28, that-21)
mark(touch-25, before-22)
nsubj(touch-25, I-23)
aux(touch-25, would-24)
advcl(gave-28, touch-25)
dobj(touch-25, another-26)
nsubj(gave-28, I-27)
ccomp(dusty-20, gave-28)
det(duster-30, the-29)
iobj(gave-28, duster-30)
det(shake-32, a-31)
dobj(gave-28, shake-32)
det(wind-36, the-35)
nsubj(blew-39, wind-36)
prep_of(wind-36, it-38)
conj_but(know-14, blew-39)
conj_and(dusty-20, blew-39)
det(lamp-41, the-40)
npadvmod(out-42, lamp-41)
advmod(blew-39, out-42)
nsubj(took-44, I-43)
dep(blew-39, took-44)
dobj(took-44, it-45)
prt(took-44, up-46)
aux(take-48, to-47)
vmod(took-44, take-48)
dobj(take-48, it-49)
det(kitchen-52, the-51)
prep_to(take-48, kitchen-52)
vmod(took-44, kindle-54)
conj_and(take-48, kindle-54)
dobj(kindle-54, it-55)
advmod(kindle-54, again-56)
advmod(saw-65, when-58)
poss(astonishment-62, my-61)
prep_to(saw-65, astonishment-62)
nsubj(saw-65, I-64)
advcl(took-44, saw-65)
det(light-67, a-66)
dobj(saw-65, light-67)
det(door-70, the-69)
prep_under(saw-65, door-70)
det(press-73, a-72)
prep_of(door-70, press-73)
nsubjpass(locked-77, press-73)
auxpass(locked-77, was-75)
advmod(locked-77, always-76)
rcmod(press-73, locked-77)
advmod(said-82, where-80)
nsubj(said-82, master-81)
dep(blew-39, said-82)
conj_and(took-44, said-82)
nsubj(kept-84, he-83)
ccomp(said-82, kept-84)
poss(books-88, his-85)
amod(books-88, most-86)
amod(books-88, precious-87)
dobj(kept-84, books-88)

(ROOT
  (SBARQ (`` `)
    (WHNP (WRB How) (JJ strange))
    (SQ
      (VP (VBN !) ('' ')))))

advmod(strange-3, How-2)
nsubj(!-4, strange-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought) (: ;) (`` ')
      (S
        (NP (DT a) (NN light))
        (PP (IN inside)
          (NP (DT a)
            (ADJP (VBN locked))
            (NN cupboard)))))
    (. !) ('' ')))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
det(light-6, a-5)
dep(thought-2, light-6)
dep(light-6, inside-7)
det(cupboard-10, a-8)
amod(cupboard-10, locked-9)
pobj(inside-7, cupboard-10)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP I))
      (VP (VBD remembered)
        (SBAR
          (WHADVP (WRB how))
          (S
            (PP (IN in)
              (NP
                (NP (CD one) (NN place))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP I))
                    (VP (VBD had)
                      (VP (VBN been)))))))
            (NP (EX there))
            (VP (VBD was) (, ,)
              (PP (IN in)
                (NP (DT a) (NN room)))
              (PP (IN over)
                (NP
                  (NP (DT the) (NN stable))
                  (, ,)
                  (NP
                    (NP (DT a) (NN press))
                    (SBAR
                      (WHNP (WP$ whose) (NN door))
                      (S
                        (VP (VBD had)
                          (NP
                            (NP (DT no) (NN fastening))
                            (PP (IN except)
                              (NP (DT a) (NN bolt))))
                          (PP (IN on)
                            (NP
                              (NP (DT the) (NN inside))
                              (, ,)
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (VP (VBD set)
                                    (S
                                      (NP (PRP me))
                                      (VP (VBG thinking)))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT some) (JJ terrible) (NNS things))
      (VP (VBD came)
        (PP (TO to)
          (NP (PRP me)))
        (SBAR (IN that)
          (S
            (VP (VBD made)
              (SBAR
                (S
                  (NP (PRP me))
                  (VP (VBP remember)
                    (NP (PRP it))))))))))
    (. .)))

advmod(remembered-3, Then-1)
nsubj(remembered-3, I-2)
root(ROOT-0, remembered-3)
advmod(was-13, how-4)
num(place-7, one-6)
prep_in(was-13, place-7)
advmod(been-11, where-8)
nsubj(been-11, I-9)
aux(been-11, had-10)
rcmod(place-7, been-11)
expl(was-13, there-12)
ccomp(remembered-3, was-13)
det(room-17, a-16)
prep_in(was-13, room-17)
det(stable-20, the-19)
prep_over(was-13, stable-20)
det(press-23, a-22)
appos(stable-20, press-23)
poss(door-25, press-23)
nsubj(had-26, door-25)
rcmod(press-23, had-26)
neg(fastening-28, no-27)
dobj(had-26, fastening-28)
det(bolt-31, a-30)
prep_except(fastening-28, bolt-31)
det(inside-34, the-33)
prep_on(had-26, inside-34)
nsubj(set-37, inside-34)
rcmod(inside-34, set-37)
nsubj(thinking-39, me-38)
dep(set-37, thinking-39)
det(things-44, some-42)
amod(things-44, terrible-43)
nsubj(came-45, things-44)
conj_and(remembered-3, came-45)
prep_to(came-45, me-47)
mark(made-49, that-48)
ccomp(came-45, made-49)
nsubj(remember-51, me-50)
ccomp(made-49, remember-51)
dobj(remember-51, it-52)

(ROOT
  (S (IN So)
    (ADVP (RB now))
    (NP (PRP I))
    (VP (VBD said)
      (PP (TO to)
        (NP (PRP myself)))
      (: :) (`` `)
      (S
        (NP (EX There))
        (VP (VBZ 's)
          (NP
            (NP (DT some) (NN one))
            (PP (IN in)
              (NP (RB there))))
          (, ,)
          (PP (IN after)
            (NP
              (NP (NN master) (POS 's))
              (NNS books))))))
    (. !) ('' ')))

dep(said-4, So-1)
advmod(said-4, now-2)
nsubj(said-4, I-3)
root(ROOT-0, said-4)
prep_to(said-4, myself-6)
expl('s-10, There-9)
ccomp(said-4, 's-10)
det(one-12, some-11)
nsubj('s-10, one-12)
prep(one-12, in-13)
pobj(in-13, there-14)
poss(books-19, master-17)
prep_after('s-10, books-19)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was) (RB not)
        (NP (DT a)
          (ADJP (JJ likely))
          (NN thing))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (DT the) (NN night))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN time))
            (PP (IN for)
              (NP (NNP fancies))))))
      (, ,)
      (CC and)
      (S
        (PP (IN in)
          (NP (DT the) (NN night)))
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB know)
            (NP
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ likely)))))
              (CC and)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ is) (RB not)))))))))
    (. .)))

nsubj(thing-6, It-1)
cop(thing-6, was-2)
neg(thing-6, not-3)
det(thing-6, a-4)
amod(thing-6, likely-5)
root(ROOT-0, thing-6)
det(night-10, the-9)
nsubj(time-13, night-10)
cop(time-13, is-11)
det(time-13, the-12)
conj_but(thing-6, time-13)
prep_for(time-13, fancies-15)
det(night-20, the-19)
prep_in(know-24, night-20)
nsubj(know-24, you-21)
aux(know-24, do-22)
neg(know-24, n't-23)
conj_but(thing-6, know-24)
conj_and(time-13, know-24)
nsubj(likely-27, what-25)
cop(likely-27, is-26)
dobj(know-24, likely-27)
nsubj(is-30, what-29)
dobj(know-24, is-30)
conj_and(likely-27, is-30)
neg(is-30, not-31)

(ROOT
  (S
    (S
      (NP (CD One) (NN thing))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (VP (VBD was)
        (ADJP (JJ clear))))
    (: --)
    (S
      (NP (PRP I))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB find)
              (PRT (RP out))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT the) (NN light))
                  (VP (VBD meant)))))))))
    (. .)))

num(thing-2, One-1)
nsubj(clear-7, thing-2)
advmod(clear-7, however-4)
cop(clear-7, was-6)
root(ROOT-0, clear-7)
nsubj(ought-10, I-9)
nsubj(find-12, I-9)
parataxis(clear-7, ought-10)
aux(find-12, to-11)
xcomp(ought-10, find-12)
prt(find-12, out-13)
dobj(meant-17, what-14)
det(light-16, the-15)
nsubj(meant-17, light-16)
ccomp(find-12, meant-17)

(ROOT
  (S
    (S
      (NP (JJ Fearful) (NNS things))
      (VP (VBD darted)
        (NP (CD one))
        (PP (IN after)
          (NP (DT the) (JJ other)))
        (PP (IN through)
          (NP (PRP$ my) (NN head)))
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBD went)
              (PP (TO to)
                (NP (DT the) (NN door))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (CD one) (NN thing))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD dared) (RB not)
                  (VP (VB do))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT that))
        (VP (VBD was)
          (S
            (VP (TO to)
              (VP (VB leave)
                (S
                  (NP (PRP it))
                  (ADJP (JJ unopened)))))))))
    (. .)))

amod(things-2, Fearful-1)
nsubj(darted-3, things-2)
root(ROOT-0, darted-3)
dobj(darted-3, one-4)
det(other-7, the-6)
prep_after(darted-3, other-7)
poss(head-10, my-9)
prep_through(darted-3, head-10)
mark(went-13, as-11)
nsubj(went-13, I-12)
advcl(darted-3, went-13)
det(door-16, the-15)
prep_to(went-13, door-16)
expl(was-20, there-19)
conj_but(darted-3, was-20)
num(thing-22, one-21)
nsubj(was-20, thing-22)
nsubj(dared-24, I-23)
rcmod(thing-22, dared-24)
neg(dared-24, not-25)
dep(dared-24, do-26)
nsubj(was-30, that-29)
nsubj(leave-32, that-29)
conj_but(darted-3, was-30)
conj_and(was-20, was-30)
aux(leave-32, to-31)
xcomp(was-30, leave-32)
nsubj(unopened-34, it-33)
xcomp(leave-32, unopened-34)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBD opened)
      (NP (PRP it))
      (PP (IN as)
        (ADVP (RB softly)))
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (MD could))))
      (, ,)
      (PP (IN in)
        (NP
          (NP (NN terror))
          (SBAR (IN lest)
            (S
              (NP (DT the) (NN thief))
              (VP (MD should)
                (VP (VB hear)
                  (NP (PRP$ my) (NN heart) (NN beating)))))))))
    (. .)))

dep(opened-3, So-1)
nsubj(opened-3, I-2)
root(ROOT-0, opened-3)
dobj(opened-3, it-4)
prep(opened-3, as-5)
pcomp(as-5, softly-6)
mark(could-9, as-7)
nsubj(could-9, I-8)
advcl(opened-3, could-9)
prep_in(opened-3, terror-12)
mark(hear-17, lest-13)
det(thief-15, the-14)
nsubj(hear-17, thief-15)
aux(hear-17, should-16)
dep(terror-12, hear-17)
poss(beating-20, my-18)
nn(beating-20, heart-19)
dobj(hear-17, beating-20)

(ROOT
  (SBAR
    (WHADVP (WRB When))
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB peep)
          (PRT (RP in))
          (SBARQ
            (WHNP (WP what))
            (SQ (VBP do)
              (NP (PRP you))
              (VP (VB think)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBD saw))))))
            (. ?)))))))

advmod(peep-4, When-1)
nsubj(peep-4, I-2)
aux(peep-4, could-3)
root(ROOT-0, peep-4)
prt(peep-4, in-5)
dobj(think-9, what-6)
aux(think-9, do-7)
nsubj(think-9, you-8)
ccomp(peep-4, think-9)
nsubj(saw-11, I-10)
ccomp(think-9, saw-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could) (RB not)
      (VP (VB believe)
        (NP (PRP$ my) (NNS eyes))))
    (. !)))

nsubj(believe-4, I-1)
aux(believe-4, could-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
poss(eyes-6, my-5)
dobj(believe-4, eyes-6)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP (DT a) (JJ great) (JJ big) (NN room)))
    (. !)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(room-6, a-3)
amod(room-6, great-4)
amod(room-6, big-5)
nsubj(was-2, room-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP
        (VP (VBD rubbed)
          (NP (PRP$ my) (NNS eyes)))
        (, ,)
        (CC and)
        (VP (VBD stared))
        (: ;)
        (CC and)
        (VP
          (VP (VBD rubbed)
            (NP (PRP them))
            (ADVP (RB again)))
          (CC and)
          (VP (VBD stared)))
        (: --)
        (S
          (VP (VBG thinking)
            (S
              (VP (TO to)
                (VP (VB rub)
                  (NP (PRP it))
                  (ADVP (RB away)))))))))
    (: ;)
    (S (CC but)
      (ADVP (RB there))
      (NP (PRP it))
      (VP
        (VP (VBD was))
        (, ,)
        (NP
          (NP (DT a) (JJ big) (JJ odd-shaped) (NN room))
          (, ,)
          (NP
            (NP (NN part))
            (PP (IN of)
              (NP (PRP it)))))
        (PP
          (PP (IN with)
            (NP (NN round) (NNS sides)))
          (, ,)
          (CC and)
          (PP (IN in)
            (NP
              (NP (DT the) (NN middle))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN room))
                  (NP (DT a) (NN table))))))
          (, ,)
          (CC and)
          (PP (IN on)
            (NP
              (NP
                (NP (DT the) (NN table))
                (NP (DT a) (NN lamp)))
              (, ,)
              (VP (VBG burning)
                (SBAR (IN as)
                  (S
                    (NP (PRP I))
                    (VP (VBD had)
                      (ADVP (RB never))
                      (VP (VBN seen)
                        (NP
                          (NP
                            (QP (CD lamp) (CD burn)))
                          (, ,)
                          (CC and)
                          (NP
                            (NP (NN master))
                            (PP (IN at)
                              (NP (DT the) (NN table)))))
                        (PP (IN with)
                          (NP (PRP$ his) (NN back)))
                        (PP (TO to)
                          (NP (PRP me)))))))))))))
    (. .)))

nsubj(rubbed-2, I-1)
nsubj(stared-7, I-1)
nsubj(rubbed-10, I-1)
nsubj(thinking-16, I-1)
nsubj(rub-18, I-1)
root(ROOT-0, rubbed-2)
poss(eyes-4, my-3)
dobj(rubbed-2, eyes-4)
conj_and(rubbed-2, stared-7)
conj_and(rubbed-2, rubbed-10)
dobj(rubbed-10, them-11)
advmod(rubbed-10, again-12)
conj_and(rubbed-2, stared-14)
conj_and(rubbed-10, stared-14)
conj_and(rubbed-2, thinking-16)
aux(rub-18, to-17)
xcomp(thinking-16, rub-18)
dobj(rub-18, it-19)
advmod(rub-18, away-20)
cc(was-25, but-22)
advmod(was-25, there-23)
nsubj(was-25, it-24)
nsubj(was-25', it-24)
nsubj(was-25'', it-24)
parataxis(rubbed-2, was-25)
parataxis(rubbed-2, was-25')
parataxis(rubbed-2, was-25'')
conj_and(was-25, was-25')
conj_and(was-25, was-25'')
det(room-30, a-27)
amod(room-30, big-28)
amod(room-30, odd-shaped-29)
dobj(was-25, room-30)
appos(room-30, part-32)
prep_of(part-32, it-34)
nn(sides-37, round-36)
prep_with(was-25, sides-37)
cc(was-25, and-39)
det(middle-42, the-41)
prep_in(was-25', middle-42)
det(room-45, the-44)
prep_of(middle-42, room-45)
det(table-47, a-46)
dep(room-45, table-47)
det(table-52, the-51)
prep_on(was-25'', table-52)
det(lamp-54, a-53)
dep(table-52, lamp-54)
vmod(table-52, burning-56)
mark(seen-61, as-57)
nsubj(seen-61, I-58)
aux(seen-61, had-59)
neg(seen-61, never-60)
advcl(burning-56, seen-61)
number(burn-63, lamp-62)
dobj(seen-61, burn-63)
dobj(seen-61, master-66)
conj_and(burn-63, master-66)
det(table-69, the-68)
prep_at(master-66, table-69)
poss(back-72, his-71)
prep_with(seen-61, back-72)
prep_to(seen-61, me-74)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (RB so) (JJ astonished)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD forgot)
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP
                    (VP (VBD had)
                      (NP (DT no) (NN business))
                      (ADVP (RB there)))
                    (, ,)
                    (CC and)
                    (VP (MD ought)
                      (S (TO to)
                        (VP (VB go)
                          (PRT (RP away)))))))))))))
    (. .)))

nsubj(astonished-4, I-1)
cop(astonished-4, was-2)
advmod(astonished-4, so-3)
root(ROOT-0, astonished-4)
nsubj(forgot-6, I-5)
ccomp(astonished-4, forgot-6)
mark(had-9, that-7)
nsubj(had-9, I-8)
ccomp(forgot-6, had-9)
neg(business-11, no-10)
dobj(had-9, business-11)
advmod(had-9, there-12)
ccomp(forgot-6, ought-15)
conj_and(had-9, ought-15)
dep(go-17, to-16)
ccomp(ought-15, go-17)
prt(go-17, away-18)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD stood)
        (PP (IN like)
          (NP (DT an) (NN idiot))))
      (, ,)
      (VP (VBD mazed))
      (CC and)
      (VP (VBD lost)))
    (. .)))

nsubj(stood-2, I-1)
nsubj(mazed-7, I-1)
nsubj(lost-9, I-1)
root(ROOT-0, stood-2)
det(idiot-5, an-4)
prep_like(stood-2, idiot-5)
conj_and(stood-2, mazed-7)
conj_and(stood-2, lost-9)

(ROOT
  (S (CC And)
    (NP (PRP you))
    (VP (MD will) (RB not)
      (VP (VB wonder)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBP tell)
              (NP (PRP you))
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN laird))
                  (VP (VBD was)
                    (VP (VBG holding)
                      (PRT (RP up))
                      (PP (TO to)
                        (NP (DT the) (NN light)))
                      (, ,)
                      (PP (IN between)
                        (NP
                          (NP (PRP$ his) (CD two) (NNS hands))
                          (, ,)
                          (NP
                            (NP (DT the) (JJ very) (NN cup))
                            (SBAR
                              (S
                                (NP (PRP I))
                                (VP (VBD had)
                                  (VP (VBN been)
                                    (VP (VBG looking)
                                      (PP (IN at) (IN in)
                                        (NP
                                          (NP (DT the) (NN book))
                                          (, ,)
                                          (NP
                                            (NP (DT the) (NNS stones))
                                            (PP (IN of)
                                              (S
                                                (NP (PRP it))
                                                (VP (VBG flashing)
                                                  (NP
                                                    (NP (PDT all) (DT the) (NNS colors))
                                                    (PP (IN of)
                                                      (NP (DT the) (NN rainbow)))))))))))))))))))))))))))
    (. .)))

cc(wonder-5, And-1)
nsubj(wonder-5, you-2)
aux(wonder-5, will-3)
neg(wonder-5, not-4)
root(ROOT-0, wonder-5)
advmod(tell-8, when-6)
nsubj(tell-8, I-7)
ccomp(wonder-5, tell-8)
dobj(tell-8, you-9)
mark(holding-14, that-10)
det(laird-12, the-11)
nsubj(holding-14, laird-12)
aux(holding-14, was-13)
ccomp(tell-8, holding-14)
prt(holding-14, up-15)
det(light-18, the-17)
prep_to(holding-14, light-18)
poss(hands-23, his-21)
num(hands-23, two-22)
prep_between(holding-14, hands-23)
det(cup-27, the-25)
amod(cup-27, very-26)
appos(hands-23, cup-27)
nsubj(looking-31, I-28)
aux(looking-31, had-29)
aux(looking-31, been-30)
rcmod(cup-27, looking-31)
dep(looking-31, at-32)
det(book-35, the-34)
prep_in(looking-31, book-35)
det(stones-38, the-37)
appos(book-35, stones-38)
nsubj(flashing-41, it-40)
prepc_of(stones-38, flashing-41)
predet(colors-44, all-42)
det(colors-44, the-43)
dobj(flashing-41, colors-44)
det(rainbow-47, the-46)
prep_of(colors-44, rainbow-47)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should)
      (VP (VB think)
        (NP (PRP it))
        (NP
          (NP (DT a) (NN dream))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD did) (RB not)
                (ADVP (RB _))
                (VP (VB know)
                  (NP
                    (NP (NNP _))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBD was) (RB not))))))))))))
    (. .)))

nsubj(think-3, I-1)
aux(think-3, should-2)
root(ROOT-0, think-3)
iobj(think-3, it-4)
det(dream-6, a-5)
dobj(think-3, dream-6)
mark(know-13, if-8)
nsubj(know-13, I-9)
aux(know-13, did-10)
neg(know-13, not-11)
advmod(know-13, _-12)
dep(dream-6, know-13)
dobj(know-13, _-14)
nsubj(was-16, it-15)
rcmod(_-14, was-16)
neg(was-16, not-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB believe)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD made)
                (NP (DT any) (NN noise))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP I))
                    (VP (MD could) (RB not)
                      (VP (VB move)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD started)
          (PRT (RP up))
          (PP (IN with)
            (NP
              (NP (DT a) (NN cry))
              (PP (TO to)
                (NP (NNP God)))))
          (S
            (VP (TO to)
              (VP (VB preserve)
                (NP (PRP him))))))
        (, ,)
        (VP (VBD set)
          (NP (DT the) (NN cup))
          (PP (IN on)
            (NP (DT the) (NN table))))
        (, ,)
        (VP (VBD threw)
          (NP (NN something))
          (PP (IN over)
            (NP (PRP it))))
        (, ,)
        (VP (VBD caught)
          (PRT (RP up))
          (NP (DT a) (JJ wicked-looking) (NN knife)))
        (, ,)
        (CC and)
        (VP (VBD turned)
          (NP (NN round)))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
nsubj(made-6, I-5)
ccomp(believe-4, made-6)
det(noise-8, any-7)
dobj(made-6, noise-8)
mark(move-14, for-10)
nsubj(move-14, I-11)
aux(move-14, could-12)
neg(move-14, not-13)
advcl(made-6, move-14)
nsubj(started-18, he-17)
nsubj(preserve-26, he-17)
nsubj(set-29, he-17)
nsubj(threw-36, he-17)
nsubj(caught-41, he-17)
nsubj(turned-48, he-17)
conj_but(believe-4, started-18)
prt(started-18, up-19)
det(cry-22, a-21)
prep_with(started-18, cry-22)
prep_to(cry-22, God-24)
aux(preserve-26, to-25)
xcomp(started-18, preserve-26)
dobj(preserve-26, him-27)
conj_but(believe-4, set-29)
conj_and(started-18, set-29)
det(cup-31, the-30)
dobj(set-29, cup-31)
det(table-34, the-33)
prep_on(set-29, table-34)
conj_but(believe-4, threw-36)
conj_and(started-18, threw-36)
dobj(threw-36, something-37)
prep_over(threw-36, it-39)
conj_but(believe-4, caught-41)
conj_and(started-18, caught-41)
prt(caught-41, up-42)
det(knife-45, a-43)
amod(knife-45, wicked-looking-44)
dobj(caught-41, knife-45)
conj_but(believe-4, turned-48)
conj_and(started-18, turned-48)
dobj(turned-48, round-49)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN face))
      (VP (VBD was)
        (PP (IN like)
          (NP
            (NP (DT that))
            (PP (IN of)
              (NP (DT a) (NN corpse)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB see)
          (S
            (NP (PRP him))
            (ADJP (JJ tremble))))))
    (. .)))

poss(face-2, His-1)
nsubj(was-3, face-2)
root(ROOT-0, was-3)
prep_like(was-3, that-5)
det(corpse-8, a-7)
prep_of(that-5, corpse-8)
nsubj(see-13, I-11)
aux(see-13, could-12)
conj_and(was-3, see-13)
nsubj(tremble-15, him-14)
xcomp(see-13, tremble-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD stood)
        (ADJP (JJ steady))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT no) (NN time)
          (S (RB then)
            (VP (TO to)
              (VP (VB turn)
                (PRT (RP away))))))))
    (. .)))

nsubj(stood-2, I-1)
root(ROOT-0, stood-2)
acomp(stood-2, steady-3)
nsubj(time-8, it-5)
cop(time-8, was-6)
neg(time-8, no-7)
parataxis(stood-2, time-8)
advmod(turn-11, then-9)
aux(turn-11, to-10)
vmod(time-8, turn-11)
prt(turn-11, away-12)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD supposed)
        (SBAR
          (S
            (NP (PRP he))
            (VP
              (VP (VBD expected)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (NP (DT a) (NN robber))))))
              (, ,)
              (CC and)
              (VP (MD would)
                (VP (VB be)
                  (ADJP (JJ glad))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP he))
                      (VP (VBD discovered)
                        (SBAR
                          (S
                            (NP (PRP it))
                            (VP (VBD was)
                              (ADVP (RB only))
                              (NP (PRP me)))))))))))))))
    (: ;)
    (S
      (S (CC but)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD did)
              (NP (PRP$ his) (NN fear)))))
        (VP (VBD changed)
          (PP (TO to)
            (NP (NN anger)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD came)
          (PP (IN at)
            (NP (PRP me))))))
    (. .)))

nsubj(supposed-2, I-1)
root(ROOT-0, supposed-2)
nsubj(expected-4, he-3)
nsubj(see-6, he-3)
nsubj(glad-13, he-3)
ccomp(supposed-2, expected-4)
aux(see-6, to-5)
xcomp(expected-4, see-6)
det(robber-8, a-7)
dobj(see-6, robber-8)
aux(glad-13, would-11)
cop(glad-13, be-12)
ccomp(supposed-2, glad-13)
conj_and(expected-4, glad-13)
advmod(discovered-16, when-14)
nsubj(discovered-16, he-15)
advcl(glad-13, discovered-16)
nsubj(me-20, it-17)
cop(me-20, was-18)
advmod(me-20, only-19)
ccomp(discovered-16, me-20)
advmod(did-25, when-23)
nsubj(did-25, he-24)
advcl(changed-28, did-25)
csubj(changed-28, did-25)
poss(fear-27, his-26)
dobj(did-25, fear-27)
parataxis(supposed-2, changed-28)
prep_to(changed-28, anger-30)
nsubj(came-34, he-33)
parataxis(supposed-2, came-34)
conj_and(changed-28, came-34)
prep_at(came-34, me-36)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NNS eyes))
      (VP (VBD were)
        (VP (VBG flaming))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD looked)
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB kill)
                (NP (PRP me))))))))
    (. .)))

poss(eyes-2, His-1)
nsubj(flaming-4, eyes-2)
aux(flaming-4, were-3)
root(ROOT-0, flaming-4)
nsubj(looked-8, he-7)
conj_and(flaming-4, looked-8)
advmod(kill-13, as-9)
mark(kill-13, if-10)
nsubj(kill-13, he-11)
aux(kill-13, would-12)
advcl(looked-8, kill-13)
dobj(kill-13, me-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD was) (RB not)
        (ADJP (VBN frightened))))
    (: --)
    (S
      (NP (JJ poor) (JJ old) (NN man))
      (, ,)
      (NP (PRP I))
      (VP (VBD was)
        (ADJP (JJ able)
          (PP (IN for)
            (NP (PRP him))))
        (NP (DT any) (NN day))))
    (. !)))

nsubjpass(frightened-4, I-1)
auxpass(frightened-4, was-2)
neg(frightened-4, not-3)
root(ROOT-0, frightened-4)
amod(man-8, poor-6)
amod(man-8, old-7)
nsubj(able-12, man-8)
nsubj(able-12, I-10)
cop(able-12, was-11)
parataxis(frightened-4, able-12)
prep_for(able-12, him-14)
det(day-16, any-15)
tmod(able-12, day-16)

(ROOT
  (S (: --)
    (CC but)
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ afraid)
        (PP (IN of)
          (S
            (VP (VBG hurting)
              (NP (PRP him)))))))
    (. .)))

conj_but(afraid-5, I-3)
nsubj(afraid-5, I-3)
cop(afraid-5, was-4)
root(ROOT-0, afraid-5)
prepc_of(afraid-5, hurting-7)
dobj(hurting-7, him-8)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP
      (VP (VBD closed)
        (NP (DT the) (NN door))
        (ADVP (RB quickly)))
      (, ,)
      (CC and)
      (VP (VBD went)
        (ADVP (RB softly))
        (PP (TO to)
          (NP (PRP$ my) (JJ own) (NN room))))
      (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP I))
          (VP
            (VP (VBD stood)
              (NP (DT a) (JJ long) (NN time))
              (PP (IN in)
                (NP (DT the) (NN dark)))
              (, ,)
              (VP (VBG listening)))
            (, ,)
            (CC but)
            (VP (VBD heard)
              (NP (NN nothing))
              (ADVP (RBR more)))))))
    (. .)))

dep(closed-3, So-1)
nsubj(closed-3, I-2)
nsubj(went-9, I-2)
root(ROOT-0, closed-3)
det(door-5, the-4)
dobj(closed-3, door-5)
advmod(closed-3, quickly-6)
conj_and(closed-3, went-9)
advmod(went-9, softly-10)
poss(room-14, my-12)
amod(room-14, own-13)
prep_to(went-9, room-14)
advmod(stood-18, where-16)
nsubj(stood-18, I-17)
nsubj(heard-29, I-17)
advcl(closed-3, stood-18)
conj_and(closed-3, stood-18)
det(time-21, a-19)
amod(time-21, long-20)
dobj(stood-18, time-21)
det(dark-24, the-23)
prep_in(stood-18, dark-24)
dep(stood-18, listening-26)
advcl(closed-3, heard-29)
conj_and(closed-3, heard-29)
conj_but(stood-18, heard-29)
dobj(heard-29, nothing-30)
advmod(heard-29, more-31)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP am)
      (NP (PRP I))
      (S
        (VP (TO to)
          (VP (VB do) (, ,)
            (ADVP (RB Andrew))))))
    (. ?) ('' '')))

root(ROOT-0, What-1)
cop(What-1, am-2)
nsubj(What-1, I-3)
aux(do-5, to-4)
vmod(What-1, do-5)
advmod(do-5, Andrew-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP have)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (NP (NN anything))))))))))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
mark(have-8, that-6)
nsubj(have-8, you-7)
nsubj(do-10, you-7)
ccomp(know-5, have-8)
aux(do-10, to-9)
xcomp(have-8, do-10)
dobj(do-10, anything-11)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (NP
          (NP (CD one) (NN thing))
          (S (RB not)
            (VP (TO to)
              (VP (VB do)))))))
    (, ,)
    (NP (DT that))
    (VP (VBZ is) (: --)
      (S
        (VP (VB tell)
          (NP
            (NP (NN anybody))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP have)
                  (VP (VBN seen)))))))))
    (. .) ('' '')))

nsubj(have-2, You-1)
ccomp(is-10, have-2)
num(thing-4, one-3)
dobj(have-2, thing-4)
neg(do-7, not-5)
aux(do-7, to-6)
vmod(thing-4, do-7)
nsubj(is-10, that-9)
root(ROOT-0, is-10)
ccomp(is-10, tell-12)
parataxis(is-10, tell-12)
dobj(tell-12, anybody-13)
dobj(seen-17, anybody-13)
nsubj(seen-17, you-15)
aux(seen-17, have-16)
rcmod(anybody-13, seen-17)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBN forced)
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP
                (NP (NNP _))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBZ _)
                      (SBAR (IN because)
                        (S
                          (NP (PRP I))
                          (VP (VBD did) (RB not)
                            (VP (VB know)
                              (SBAR
                                (WHNP (WP what))
                                (S
                                  (VP (TO to)
                                    (VP (VB do))))))))))))))))))
    (. .)))

nsubjpass(forced-4, I-2)
nsubj(tell-6, I-2)
auxpass(forced-4, was-3)
root(ROOT-0, forced-4)
aux(tell-6, to-5)
xcomp(forced-4, tell-6)
dobj(tell-6, _-7)
nsubj(_-9, you-8)
rcmod(_-7, _-9)
mark(know-14, because-10)
nsubj(know-14, I-11)
aux(know-14, did-12)
neg(know-14, not-13)
advcl(_-9, know-14)
nsubj(do-17, what-15)
aux(do-17, to-16)
ccomp(know-14, do-17)
xcomp(know-14, do-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ makes)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBZ _)
            (ADJP (RB so) (RB _) (JJ sorry))))))
    (. !) ('' '')))

nsubj(makes-2, It-1)
root(ROOT-0, makes-2)
nsubj(_-4, me-3)
ccomp(makes-2, _-4)
advmod(sorry-7, so-5)
advmod(sorry-7, _-6)
acomp(_-4, sorry-7)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT no) (NN fault))
        (PP (IN of)
          (NP (NNP yours)))))
    (. .)))

nsubj(fault-5, It-2)
cop(fault-5, was-3)
neg(fault-5, no-4)
root(ROOT-0, fault-5)
prep_of(fault-5, yours-7)

(ROOT
  (S
    (NP (PRP You))
    (VP
      (VP (VBD acted)
        (PP (TO to)
          (NP
            (NP (DT the) (JJS best))
            (PP (IN of)
              (NP (PRP$ your) (NN knowledge))))))
      (, ,)
      (CC and)
      (VP (MD could) (RB not)
        (VP (VB help)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD came)
                (PP (IN of)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(acted-2, You-1)
nsubj(help-13, You-1)
root(ROOT-0, acted-2)
det(best-5, the-4)
prep_to(acted-2, best-5)
poss(knowledge-8, your-7)
prep_of(best-5, knowledge-8)
aux(help-13, could-11)
neg(help-13, not-12)
conj_and(acted-2, help-13)
nsubj(came-15, what-14)
ccomp(help-13, came-15)
prep_of(came-15, it-17)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (NN nothing) (RBR more))
    (VP (MD will)
      (VP (VB come)))
    (. .)))

advmod(come-5, Perhaps-1)
nsubj(come-5, nothing-2)
advmod(nothing-2, more-3)
aux(come-5, will-4)
root(ROOT-0, come-5)

(ROOT
  (S
    (S
      (VP (VB Leave)
        (NP (DT the) (NN thing))
        (ADVP (RB alone))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP he))
          (VP (VBP say)
            (NP (NN anything)))))
      (VP (VBP tell)
        (NP (PRP him))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP it))
            (VP (VBD happened))))))
    (. .) ('' '')))

root(ROOT-0, Leave-1)
det(thing-3, the-2)
dobj(Leave-1, thing-3)
advmod(Leave-1, alone-4)
mark(say-9, if-7)
nsubj(say-9, he-8)
csubj(tell-11, say-9)
dobj(say-9, anything-10)
conj_and(Leave-1, tell-11)
dobj(tell-11, him-12)
advmod(happened-15, how-13)
nsubj(happened-15, it-14)
dep(tell-11, happened-15)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (, ,)
      (INTJ (UH Andrew))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (NP (PRP you)))))
    (VP (VBP see)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (NP (DT that) (NNS troubles))))))
    (NP (PRP me))
    (. .)))

cc(think-9, But-2)
discourse(think-9, Andrew-4)
nsubj(think-9, I-6)
aux(think-9, do-7)
neg(think-9, n't-8)
dep(see-11, think-9)
dobj(think-9, you-10)
root(ROOT-0, see-11)
dobj(troubles-16, what-12)
nsubj(troubles-16, it-13)
cop(troubles-16, is-14)
det(troubles-16, that-15)
ccomp(see-11, troubles-16)
nsubj(see-11, me-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ afraid)
        (SBAR
          (S
            (NP (PRP$ my) (NN master))
            (VP (VBZ is)
              (NP (DT a) (NN miser)))))))
    (. .)))

nsubj(afraid-3, I-1)
cop(afraid-3, am-2)
root(ROOT-0, afraid-3)
poss(master-5, my-4)
nsubj(miser-8, master-5)
cop(miser-8, is-6)
det(miser-8, a-7)
ccomp(afraid-3, miser-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN mistress))
      (CC and)
      (NP (PRP he)))
    (VP (VBP take)
      (NP (PRP$ their) (NNS meals))
      (, ,)
      (PP (IN like)
        (NP (JJ poor) (NNS people)))
      (, ,)
      (PP (IN in)
        (NP (DT the) (NN kitchen))))
    (. .)))

det(mistress-2, The-1)
nsubj(take-5, mistress-2)
conj_and(mistress-2, he-4)
nsubj(take-5, he-4)
root(ROOT-0, take-5)
poss(meals-7, their-6)
dobj(take-5, meals-7)
amod(people-11, poor-10)
prep_like(take-5, people-11)
det(kitchen-15, the-14)
prep_in(take-5, kitchen-15)

(ROOT
  (S
    (NP (DT That))
    (VP (MD must)
      (VP (VB be)
        (NP
          (NP (DT the) (NN dining-room))
          (PP (IN of)
            (NP (DT the) (NN house))))))
    (. !)))

nsubj(dining-room-5, That-1)
aux(dining-room-5, must-2)
cop(dining-room-5, be-3)
det(dining-room-5, the-4)
root(ROOT-0, dining-room-5)
det(house-8, the-7)
prep_of(dining-room-5, house-8)

(ROOT
  (S
    (SBAR
      (PRN (: --)
        (CC and)
        (ADVP (RB though)))
      (S
        (NP (PRP$ my) (NNS eyes))
        (VP (VBD were)
          (ADJP (JJ tethered)
            (PP (TO to)
              (NP (DT the)
                (ADJP (VBG flashing))
                (NN cup)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD could) (RB not)
      (VP (VB help)
        (S
          (VP (VBG seeing)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (ADJP (JJ full)
                    (PP (IN of)
                      (NP (JJ strange)
                        (CC and)
                        (JJ beautiful) (NNS things)))))))))))
    (. .)))

cc(though-3, and-2)
dep(tethered-7, though-3)
poss(eyes-5, my-4)
nsubj(tethered-7, eyes-5)
cop(tethered-7, were-6)
advcl(help-16, tethered-7)
det(cup-11, the-9)
amod(cup-11, flashing-10)
prep_to(tethered-7, cup-11)
nsubj(help-16, I-13)
aux(help-16, could-14)
neg(help-16, not-15)
root(ROOT-0, help-16)
xcomp(help-16, seeing-17)
nsubj(full-20, it-18)
cop(full-20, was-19)
ccomp(seeing-17, full-20)
amod(things-25, strange-22)
conj_and(strange-22, beautiful-24)
amod(things-25, beautiful-24)
prep_of(full-20, things-25)

(ROOT
  (S
    (PP (IN Among)
      (NP (PRP them)))
    (, ,)
    (NP (PRP I))
    (VP (VBD knew) (, ,)
      (PP (IN by)
        (NP
          (NP (NNS pictures))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD had)
                (VP (VBN seen) (, ,)
                  (NP
                    (NP (DT the) (NN armor))
                    (PP (IN of)
                      (NP
                        (NP (NNS knights))
                        (, ,)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP they))
                            (VP (VBD fought)
                              (PP (IN on)
                                (NP
                                  (NP (PRP$ their) (NNS horses) (POS '))
                                  (NNS backs))))))))))))))))
    (. .)))

prep_among(knew-5, them-2)
nsubj(knew-5, I-4)
root(ROOT-0, knew-5)
prep_by(knew-5, pictures-8)
nsubj(seen-11, I-9)
aux(seen-11, had-10)
rcmod(pictures-8, seen-11)
det(armor-14, the-13)
dobj(seen-11, armor-14)
prep_of(armor-14, knights-16)
tmod(fought-20, knights-16)
advmod(fought-20, when-18)
nsubj(fought-20, they-19)
rcmod(knights-16, fought-20)
poss(horses-23, their-22)
poss(backs-25, horses-23)
prep_on(fought-20, backs-25)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (NNS people))
        (VP (VBD had)
          (NP (NN money)))))
    (NP (PRP they))
    (VP (MD must)
      (VP (VB have)
        (VP (VBN misered)
          (NP (JJ other) (NNS things)))))
    (. .)))

mark(had-3, Before-1)
nsubj(had-3, people-2)
advcl(misered-8, had-3)
dobj(had-3, money-4)
nsubj(misered-8, they-5)
aux(misered-8, must-6)
aux(misered-8, have-7)
root(ROOT-0, misered-8)
amod(things-10, other-9)
dobj(misered-8, things-10)

(ROOT
  (S
    (NP (DT Some) (NNS girls))
    (VP
      (VP (VBP miser)
        (NP (PRP$ their) (NNS clothes)))
      (, ,)
      (CC and)
      (ADVP (RB never))
      (VP (VBP go)
        (ADJP (JJ decent))))
    (. !) ('' '')))

det(girls-2, Some-1)
nsubj(miser-3, girls-2)
nsubj(go-9, girls-2)
root(ROOT-0, miser-3)
poss(clothes-5, their-4)
dobj(miser-3, clothes-5)
neg(go-9, never-8)
conj_and(miser-3, go-9)
acomp(go-9, decent-10)

(ROOT
  (S
    (VP (`` ``) (VB Suppose)
      (S
        (NP (PRP him) (DT a))
        (VP (VBP miser)
          (PRN (, ,) ('' '')
            (SINV
              (VP (VBD said))
              (NP (NNP Andrew)))
            (, ,))
          (`` ``)
          (SBARQ
            (WHNP (WP what))
            (SQ (MD could)
              (NP (PRP you))
              (VP (VB do)))
            (. ?)))))))

root(ROOT-0, Suppose-2)
nsubj(miser-5, him-3)
dep(him-3, a-4)
ccomp(Suppose-2, miser-5)
parataxis(miser-5, said-8)
nsubj(said-8, Andrew-9)
dobj(do-15, what-12)
aux(do-15, could-13)
nsubj(do-15, you-14)
ccomp(miser-5, do-15)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP are)
      (NP (PRP you))
      (S
        (VP (TO to)
          (VP (VB help)
            (NP (PRP it))))))
    (. ?) ('' '')))

advmod(are-2, How-1)
root(ROOT-0, are-2)
nsubj(are-2, you-3)
aux(help-5, to-4)
dep(are-2, help-5)
dobj(help-5, it-6)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB know))))))))
    (. .)))

nsubj('s-3, That-2)
root(ROOT-0, 's-3)
dobj(want-6, what-4)
nsubj(know-8, what-4)
nsubj(want-6, I-5)
ccomp('s-3, want-6)
aux(know-8, to-7)
xcomp(want-6, know-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP love)
        (NP (PRP$ my) (NN master))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (MD must)
        (VP (VB be)
          (NP (DT a) (NN way)
            (S
              (VP (TO to)
                (VP (VB help)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(love-2, I-1)
root(ROOT-0, love-2)
poss(master-4, my-3)
dobj(love-2, master-4)
expl(way-11, there-7)
aux(way-11, must-8)
cop(way-11, be-9)
det(way-11, a-10)
conj_and(love-2, way-11)
aux(help-13, to-12)
vmod(way-11, help-13)
dobj(help-13, it-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ terrible)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP him))))))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT the) (NN middle))
          (PP (IN of)
            (NP (DT the) (NN night)))))
      (, ,)
      (VP (VBG gazing)
        (PP (IN at)
          (NP (DT that) (NN cup)))
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN found)
                (NP
                  (NP (DT the) (RBS most) (JJ precious) (NN thing))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD can)
                        (ADVP (RB ever))
                        (VP (VB have)
                          (VP (VBN existed)
                            (PP (IN on)
                              (NP (DT the) (NN earth)))))))))))))))
    (. .) ('' '')))

nsubj(gazing-15, It-1)
cop(gazing-15, was-2)
acomp(gazing-15, terrible-3)
aux(see-5, to-4)
xcomp(terrible-3, see-5)
dobj(see-5, him-6)
det(middle-10, the-9)
prep_in(gazing-15, middle-10)
det(night-13, the-12)
prep_of(middle-10, night-13)
root(ROOT-0, gazing-15)
det(cup-18, that-17)
prep_at(gazing-15, cup-18)
advmod(found-23, as-19)
mark(found-23, if-20)
nsubj(found-23, he-21)
aux(found-23, had-22)
advcl(gazing-15, found-23)
det(thing-27, the-24)
advmod(thing-27, most-25)
amod(thing-27, precious-26)
dobj(found-23, thing-27)
nsubj(existed-32, thing-27)
aux(existed-32, can-29)
advmod(existed-32, ever-30)
aux(existed-32, have-31)
rcmod(thing-27, existed-32)
det(earth-35, the-34)
prep_on(existed-32, earth-35)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBD was)
      (NP (DT that)))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, was-3)
nsubj(What-2, that-4)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Andrew-2)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD delighted)
      (PP (IN in)
        (NP
          (NP (NNP Dawtie) (POS 's))
          (NN talk))))
    (. .)))

nsubj(delighted-2, He-1)
root(ROOT-0, delighted-2)
poss(talk-6, Dawtie-4)
prep_in(delighted-2, talk-6)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (PP (IN like)
          (NP (DT an) (NN angel) (POS 's)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (PP (DT both) (IN in)
        (NP
          (NP (PRP$ its) (NN ignorance))
          (CC and)
          (NP (PRP$ its) (NN wisdom)))))
    (. .)))

nsubj(was-2, It-1)
ccomp(said-9, was-2)
det(angel-5, an-4)
prep_like(was-2, angel-5)
possessive(angel-5, 's-6)
nsubj(said-9, he-8)
root(ROOT-0, said-9)
dep(said-9, both-11)
poss(ignorance-14, its-13)
prep_in(said-9, ignorance-14)
poss(wisdom-17, its-16)
prep_in(said-9, wisdom-17)
conj_and(ignorance-14, wisdom-17)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB have)
        (VP (VBN forgotten) (, ,)
          (NP (NNP Andrew)))))
    (. .)))

nsubj(forgotten-6, You-2)
aux(forgotten-6, ca-3)
neg(forgotten-6, n't-4)
aux(forgotten-6, have-5)
root(ROOT-0, forgotten-6)
dobj(forgotten-6, Andrew-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ impossible)))
    (. !) ('' '')))

nsubj(impossible-3, It-1)
cop(impossible-3, 's-2)
root(ROOT-0, impossible-3)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

nsubj(answered-2, she-1)
root(ROOT-0, answered-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD heard)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP say)
            (NP (PRP yourself))))))
    (. !) ('' '')))

nsubj(heard-3, I-2)
root(ROOT-0, heard-3)
nsubj(say-5, you-4)
ccomp(heard-3, say-5)
dobj(say-5, yourself-6)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD smiled))
    (. .)))

nsubj(smiled-2, Andrew-1)
root(ROOT-0, smiled-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP know)))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(know-3, I-2)
ccomp(said-7, know-3)
nsubj(said-7, he-6)
root(ROOT-0, said-7)

(ROOT
  (S (`` ``)
    (NP (NNP Poor))
    (VP (VB man))
    (. !) ('' '')))

nsubj(man-3, Poor-2)
root(ROOT-0, man-3)

(ROOT
  (NP
    (NP (NNP resumed) (NNP Dawtie))
    (: ;)
    (S (`` ``)
      (NP (PRP he))
      (VP (VBD looked)
        (PP (IN at)
          (NP (DT the) (NN cup)))
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (MD might)
              (PP (IN at)
                (NP (DT that) (NN manuscript))))))))
    (. !)))

nn(Dawtie-2, resumed-1)
root(ROOT-0, Dawtie-2)
nsubj(looked-6, he-5)
dep(Dawtie-2, looked-6)
det(cup-9, the-8)
prep_at(looked-6, cup-9)
mark(might-12, as-10)
nsubj(might-12, you-11)
advcl(looked-6, might-12)
det(manuscript-15, that-14)
prep_at(might-12, manuscript-15)

(ROOT
  (S
    (NP (PRP$ His) (NN soul))
    (VP (VBD was)
      (PP (IN at)
        (NP (PRP it)))
      (, ,)
      (S
        (VP (VBG feasting)
          (PP (IN upon)
            (NP (PRP it))))))
    (. !)))

poss(soul-2, His-1)
nsubj(was-3, soul-2)
root(ROOT-0, was-3)
prep_at(was-3, it-5)
xcomp(was-3, feasting-7)
prep_upon(feasting-7, it-9)

(ROOT
  (S
    (NP (RB Now))
    (VP (VBD was) (RB n't)
      (NP (DT that) (JJ miserly)))
    (. ?) ('' '')))

nsubj(miserly-5, Now-1)
cop(miserly-5, was-2)
neg(miserly-5, n't-3)
det(miserly-5, that-4)
root(ROOT-0, miserly-5)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBD was)
      (PP (IN like)
        (NP (PRP it))))
    (. .) ('' '')))

nsubj(was-3, It-2)
root(ROOT-0, was-3)
prep_like(was-3, it-5)

(ROOT
  (SINV (`` ``)
    (S (CC And)
      (NP (PRP I))
      (VP (VBP love)
        (NP (PRP$ my) (NN master))))
    (, ,) ('' '')
    (VP (VBD repeated)
      (NP (NNP Dawtie))
      (, ,)
      (ADVP (RB thus))
      (S
        (VP (VBG putting)
          (NP (NN afresh)))))
    (NP (DT the) (NN question)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP she))
          (VP (VBD was)
            (S
              (VP (TO to)
                (VP (VB do))))))))
    (. .)))

cc(love-4, And-2)
nsubj(love-4, I-3)
ccomp(repeated-9, love-4)
poss(master-6, my-5)
dobj(love-4, master-6)
root(ROOT-0, repeated-9)
dobj(repeated-9, Dawtie-10)
advmod(putting-13, thus-12)
vmod(repeated-9, putting-13)
dobj(putting-13, afresh-14)
det(question-16, the-15)
nsubj(repeated-9, question-16)
dobj(was-19, what-17)
nsubj(do-21, what-17)
nsubj(was-19, she-18)
ccomp(question-16, was-19)
aux(do-21, to-20)
xcomp(was-19, do-21)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB love)
        (NP
          (NP (PRP him))
          (, ,)
          (NP (NNP Dawtie)))))
    (. ?) ('' '')))

advmod(love-5, Why-2)
aux(love-5, do-3)
nsubj(love-5, you-4)
root(ROOT-0, love-5)
dobj(love-5, him-6)
appos(him-6, Dawtie-8)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Andrew-2)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP I))
        (VP (VBP 'm))))
    (VP (VBD set)
      (S
        (VP (TO to)
          (VP (VB love)
            (NP (PRP him))))))
    (. .)))

mark('m-4, Because-2)
nsubj('m-4, I-3)
csubj(set-5, 'm-4)
root(ROOT-0, set-5)
aux(love-7, to-6)
xcomp(set-5, love-7)
dobj(love-7, him-8)

(ROOT
  (S
    (S
      (ADVP (IN Besides))
      (, ,)
      (NP (PRP we))
      (VP (VBP 're)
        (VP (VBN told)
          (S
            (VP (TO to)
              (VP (VB love)
                (NP (PRP$ our) (NNS enemies))))))))
    (: --)
    (S
      (ADVP (RB then))
      (ADVP (RB surely))
      (NP (PRP we))
      (VP (VBP 're)
        (S
          (VP (TO to)
            (VP (VB love)
              (NP (PRP$ our) (NNS friends)))))))
    (. .)))

advmod(told-5, Besides-1)
nsubjpass(told-5, we-3)
nsubj(love-7, we-3)
auxpass(told-5, 're-4)
root(ROOT-0, told-5)
aux(love-7, to-6)
xcomp(told-5, love-7)
poss(enemies-9, our-8)
dobj(love-7, enemies-9)
advmod('re-14, then-11)
advmod('re-14, surely-12)
nsubj('re-14, we-13)
nsubj(love-16, we-13)
parataxis(told-5, 're-14)
aux(love-16, to-15)
xcomp('re-14, love-16)
poss(friends-18, our-17)
dobj(love-16, friends-18)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ has)
      (ADVP (RB always))
      (VP (VBN been)
        (NP
          (NP (DT a) (NN friend))
          (PP (TO to)
            (NP (PRP me))))))
    (. .)))

nsubj(friend-6, He-1)
aux(friend-6, has-2)
advmod(friend-6, always-3)
cop(friend-6, been-4)
det(friend-6, a-5)
root(ROOT-0, friend-6)
prep_to(friend-6, me-8)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB never))
    (VP (VBD said)
      (NP (DT a) (JJ hard) (NN word))
      (PP (TO to)
        (NP (PRP me)))
      (, ,)
      (SBAR (RB even)
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD was)
            (VP (VBG handling)
              (NP (PRP$ his) (NNS books)))))))
    (. .)))

nsubj(said-3, He-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
det(word-6, a-4)
amod(word-6, hard-5)
dobj(said-3, word-6)
prep_to(said-3, me-8)
advmod(handling-14, even-10)
advmod(handling-14, when-11)
nsubj(handling-14, I-12)
aux(handling-14, was-13)
advcl(said-3, handling-14)
poss(books-16, his-15)
dobj(handling-14, books-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ trusts)
      (NP (PRP me))
      (PP (IN with)
        (NP (PRP them))))
    (. !)))

nsubj(trusts-2, He-1)
root(ROOT-0, trusts-2)
dobj(trusts-2, me-3)
prep_with(trusts-2, them-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB help)
        (S
          (VP (VBG loving)
            (NP
              (NP (PRP him))
              (: --)
              (NP
                (NP (DT a) (JJ good) (NN deal))
                (, ,)
                (NP (NNP Andrew))))))))
    (. !)))

nsubj(help-4, I-1)
aux(help-4, ca-2)
neg(help-4, n't-3)
root(ROOT-0, help-4)
xcomp(help-4, loving-5)
dobj(loving-5, him-6)
det(deal-10, a-8)
amod(deal-10, good-9)
dep(him-6, deal-10)
appos(deal-10, Andrew-12)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP 've)
            (VP (VBN got)
              (S
                (VP (TO to)
                  (VP (VB do)))))))))
    (. !) ('' '')))

cc('s-3, And-1)
nsubj('s-3, it-2)
root(ROOT-0, 's-3)
dobj(got-7, what-4)
nsubj(do-9, what-4)
nsubj(got-7, I-5)
aux(got-7, 've-6)
ccomp('s-3, got-7)
aux(do-9, to-8)
xcomp(got-7, do-9)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (DT a) (NN doubt))
        (PP (IN about)
          (NP
            (NP (PRP it))
            (, ,)
            (NP (NNP Dawtie))))))
    (. .)))

expl('s-3, There-2)
root(ROOT-0, 's-3)
neg('s-3, not-4)
det(doubt-6, a-5)
nsubj('s-3, doubt-6)
prep_about(doubt-6, it-8)
appos(it-8, Dawtie-10)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 've)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB love)
                (NP (PRP him))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP do)
        (VP (VB love)
          (NP (PRP him)))))
    (. !) ('' '')))

nsubj(got-3, You-1)
nsubj(love-5, You-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
aux(love-5, to-4)
xcomp(got-3, love-5)
dobj(love-5, him-6)
nsubj(love-11, you-9)
aux(love-11, do-10)
conj_and(got-3, love-11)
dobj(love-11, him-12)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (EX there))
    (VP (VBZ 's)
      (ADJP
        (ADJP (JJR more))
        (PP (IN than)
          (NP
            (NP (DT that))
            (, ,)
            (NP (NNP Andrew))))))
    (. .)))

cc('s-4, But-2)
expl('s-4, there-3)
root(ROOT-0, 's-4)
acomp('s-4, more-5)
prep_than(more-5, that-7)
appos(that-7, Andrew-9)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB hear)
          (NP (DT the) (JJ laird) (NN talk)))))
    (NP (PRP you))
    (VP (MD would)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD cared)
              (NP
                (NP (JJR more))
                (PP (IN for)
                  (NP (DT the) (NNP Bible))))
              (PP (IN than)
                (PP (IN for)
                  (NP (DT the) (JJ whole) (NN world))))
              (: --)
              (S (RB not)
                (VP (TO to)
                  (VP (VB say)
                    (NP (JJ gold) (NNS cups))))))))))
    (. .)))

aux(hear-2, To-1)
dep(think-8, hear-2)
det(talk-5, the-3)
amod(talk-5, laird-4)
dobj(hear-2, talk-5)
nsubj(think-8, you-6)
aux(think-8, would-7)
root(ROOT-0, think-8)
nsubj(cared-10, he-9)
ccomp(think-8, cared-10)
dobj(cared-10, more-11)
det(Bible-14, the-13)
prep_for(more-11, Bible-14)
prep(cared-10, than-15)
pcomp(than-15, for-16)
det(world-19, the-17)
amod(world-19, whole-18)
pobj(for-16, world-19)
neg(say-23, not-21)
aux(say-23, to-22)
parataxis(cared-10, say-23)
vmod(cared-10, say-23)
amod(cups-25, gold-24)
dobj(say-23, cups-25)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ talks)
      (PP (IN of)
        (NP
          (NP (DT the) (NNS merits))
          (PP (IN of)
            (NP (DT the) (NNP Saviour)))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD would)
            (VP (VB think)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD loved)
                    (NP (PRP Him))
                    (PP (IN with)
                      (NP (PDT all) (PRP$ his) (NN heart)))))))))))
    (. .)))

nsubj(talks-2, He-1)
root(ROOT-0, talks-2)
det(merits-5, the-4)
prep_of(talks-2, merits-5)
det(Saviour-8, the-7)
prep_of(merits-5, Saviour-8)
mark(think-13, that-10)
nsubj(think-13, you-11)
aux(think-13, would-12)
ccomp(talks-2, think-13)
nsubj(loved-15, he-14)
ccomp(think-13, loved-15)
dobj(loved-15, Him-16)
predet(heart-20, all-18)
poss(heart-20, his-19)
prep_with(loved-15, heart-20)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP
        (VP (VB get)
          (NP (PRP it))
          (PRT (RP out))
          (PP (IN of)
            (NP (PRP$ my) (NN mind)))
          (, ,)
          (ADVP (RB ever))
          (SBAR (IN since)
            (S
              (NP (PRP I))
              (VP (VBD saw)
                (NP (DT that) (NN look))
                (PP (IN on)
                  (NP (PRP$ his) (NN face))))))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBZ loves)
                (NP (DT that) (NN cup))))))
        (PRN (: --)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (NP (PRP$ his) (NN graven) (NN image)))))
          (: --))
        (NP (PRP$ his) (NN idol))))
    (. !)))

cc(get-5, But-1)
nsubj(get-5, I-2)
aux(get-5, can-3)
neg(get-5, not-4)
root(ROOT-0, get-5)
dobj(get-5, it-6)
poss(mind-10, my-9)
prep_out_of(get-5, mind-10)
advmod(saw-15, ever-12)
mark(saw-15, since-13)
nsubj(saw-15, I-14)
advcl(get-5, saw-15)
det(look-17, that-16)
dobj(saw-15, look-17)
poss(face-20, his-19)
prep_on(saw-15, face-20)
mark(loves-24, that-22)
nsubj(loves-24, he-23)
ccomp(get-5, loves-24)
det(cup-26, that-25)
dobj(loves-24, cup-26)
mark(image-33, that-28)
nsubj(image-33, it-29)
cop(image-33, 's-30)
poss(image-33, his-31)
nn(image-33, graven-32)
parataxis(get-5, image-33)
poss(idol-36, his-35)
dobj(get-5, idol-36)

(ROOT
  (SBARQ
    (WHNP (WRB How) (RB else))
    (SQ (MD should)
      (NP (PRP he))
      (VP (VB get)
        (PRT (RP up))
        (PP (IN in)
          (NP
            (NP (DT the) (NN middle))
            (PP (IN of)
              (NP
                (NP
                  (NP
                    (NP
                      (NP (DT the) (NN night))
                      (SBAR
                        (S
                          (VP (TO to)))))
                    (: --)
                    (S
                      (VP (TO to))))
                  (: --)
                  (S
                    (VP (TO to))))
                (: --)
                (S
                  (ADVP (RB well))
                  (, ,)
                  (NP (PRP it))
                  (VP (VBD was)
                    (ADVP (RB just))
                    (PP (IN like)
                      (S
                        (VP (VBG worshiping)
                          (NP (PRP it)))))))))))))
    (. .) ('' '')))

advmod(else-2, How-1)
dep(get-5, else-2)
aux(get-5, should-3)
nsubj(get-5, he-4)
root(ROOT-0, get-5)
prt(get-5, up-6)
det(middle-9, the-8)
prep_in(get-5, middle-9)
det(night-12, the-11)
prep_of(middle-9, night-12)
vmod(night-12, to-13)
vmod(night-12, to-15)
vmod(night-12, to-17)
advmod(was-22, well-19)
nsubj(was-22, it-21)
dep(night-12, was-22)
advmod(was-22, just-23)
prepc_like(was-22, worshiping-25)
dobj(worshiping-25, it-26)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP 're)
      (ADJP (JJ afraid))
      (SBAR
        (ADVP (RB then))
        (IN that)
        (S
          (NP (PRP he))
          (VP (VBZ 's)
            (NP
              (NP (DT a) (NN hypocrite))
              (, ,)
              (NP (NNP Dawtie)))))))
    (. !) ('' '')))

nsubj(afraid-4, You-2)
cop(afraid-4, 're-3)
root(ROOT-0, afraid-4)
advmod(hypocrite-10, then-5)
mark(hypocrite-10, that-6)
nsubj(hypocrite-10, he-7)
cop(hypocrite-10, 's-8)
det(hypocrite-10, a-9)
dep(afraid-4, hypocrite-10)
appos(hypocrite-10, Dawtie-12)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD dare) (RB n't)
        (VP (VB think)
          (NP
            (NP (DT that))
            (PRN (: --)
              (SBAR (IN if)
                (S
                  (NP (PRP it))
                  (VP (VBD were)
                    (ADVP (RB only))
                    (PP (IN for)
                      (NP
                        (NP (NN fear))
                        (SBAR
                          (S
                            (NP (PRP I))
                            (VP (MD should)
                              (VP (VB stop)
                                (S
                                  (VP (VBG loving)
                                    (NP (PRP him)))))))))))))
              (: --))
            (CC and)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD would)
                  (VP (VB be)
                    (ADJP (RB as) (JJ bad))))))))))
    (. !) ('' '')))

dep(think-7, No-2)
nsubj(think-7, I-4)
aux(think-7, dare-5)
neg(think-7, n't-6)
root(ROOT-0, think-7)
dobj(think-7, that-8)
mark(were-12, if-10)
nsubj(were-12, it-11)
dep(that-8, were-12)
advmod(were-12, only-13)
prep_for(were-12, fear-15)
nsubj(stop-18, I-16)
aux(stop-18, should-17)
rcmod(fear-15, stop-18)
xcomp(stop-18, loving-19)
dobj(loving-19, him-20)
nsubj(bad-27, that-23)
aux(bad-27, would-24)
cop(bad-27, be-25)
advmod(bad-27, as-26)
dobj(think-7, bad-27)
conj_and(that-8, bad-27)

(ROOT
  (FRAG
    (ADVP (`` ``) (RB As)
      (ADVP (RB bad)
        (PP (IN as)
          (NP (WP what)))))
    (, ,)
    (NP (NNP Dawtie))
    (. ?) ('' '')))

advmod(bad-3, As-2)
dep(Dawtie-7, bad-3)
prep_as(bad-3, what-5)
root(ROOT-0, Dawtie-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (ADVP (RB always))
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (VP (VBG going)
                  (S
                    (VP (TO to)
                      (VP (VB say)))))))))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD answered))
        (NP
          (NP (NNP Dawtie))
          (, ,)
          (ADJP
            (NP (DT a) (RB little))
            (JJ embarrassed))))
      (, ,) (`` ``))
    (CC and)
    (ADVP (RB then))
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBP 've)
            (VP (VBD said)
              (NP (PRP it))))))
      (NP (PRP I))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB look)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP it))
                  (VP (VBZ means)))))))))
    (. .)))

nsubj(know-6, I-2)
aux(know-6, do-3)
neg(know-6, n't-4)
advmod(know-6, always-5)
root(ROOT-0, know-6)
dobj(going-10, what-7)
nsubj(say-12, what-7)
nsubj(going-10, I-8)
aux(going-10, 'm-9)
ccomp(know-6, going-10)
aux(say-12, to-11)
xcomp(going-10, say-12)
dep(know-6, answered-15)
nsubj(answered-15, Dawtie-16)
det(little-19, a-18)
npadvmod(embarrassed-20, little-19)
amod(Dawtie-16, embarrassed-20)
advmod(have-31, then-24)
advmod(said-28, when-25)
nsubj(said-28, I-26)
aux(said-28, 've-27)
advcl(have-31, said-28)
dobj(said-28, it-29)
nsubj(have-31, I-30)
nsubj(look-33, I-30)
conj_and(know-6, have-31)
aux(look-33, to-32)
xcomp(have-31, look-33)
dobj(means-36, what-34)
nsubj(means-36, it-35)
ccomp(look-33, means-36)

(ROOT
  (S (CC But)
    (S
      (VP (VBZ is) (RB n't)
        (NP (PRP it))
        (ADVP (RB as) (RB bad))
        (S (RB not)
          (VP (TO to)
            (VP (VB love)
              (NP (DT a) (JJ human) (NN being))
              (PP (IN as)
                (NP (PRP it))))))))
    (VP (MD would)
      (VP (VB be)
        (S
          (VP (TO to)
            (VP (VB love)
              (NP (DT a) (NN thing)))))))
    (. ?) ('' '')))

cc(be-16, But-1)
cop(it-4, is-2)
neg(it-4, n't-3)
csubj(be-16, it-4)
advmod(bad-6, as-5)
advmod(it-4, bad-6)
neg(love-9, not-7)
aux(love-9, to-8)
vmod(it-4, love-9)
det(being-12, a-10)
amod(being-12, human-11)
dobj(love-9, being-12)
prep_as(love-9, it-14)
aux(be-16, would-15)
root(ROOT-0, be-16)
aux(love-18, to-17)
xcomp(be-16, love-18)
det(thing-20, a-19)
dobj(love-18, thing-20)

(ROOT
  (SINV (`` ``)
    (FRAG
      (ADJP (RB Perhaps) (JJR worse)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Andrew))
    (. .)))

advmod(worse-3, Perhaps-2)
dep(said-6, worse-3)
root(ROOT-0, said-6)
nsubj(said-6, Andrew-7)

(ROOT
  (S (`` ``)
    (NP (NN Something))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN done))))
    (. !) ('' '')))

nsubjpass(done-5, Something-2)
aux(done-5, must-3)
auxpass(done-5, be-4)
root(ROOT-0, done-5)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD went)
      (PRT (RP on)))
    (. .)))

nsubj(went-2, she-1)
root(ROOT-0, went-2)
prt(went-2, on-3)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (VP (VBN left)
          (PP (IN like)
            (NP (DT that))))))
    (. !)))

nsubjpass(left-6, He-2)
aux(left-6, ca-3)
neg(left-6, n't-4)
auxpass(left-6, be-5)
root(ROOT-0, left-6)
prep_like(left-6, that-8)

(ROOT
  (FRAG (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP he))
        (VP (VBZ has)
          (NP (DT any) (NN love))
          (PP (TO to)
            (NP (PRP$ his) (NN Master)))
          (, ,)
          (SBAR
            (WHADVP (WRB how))
            (S
              (VP (VBZ is)
                (NP (PRP it))
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT the) (NN love))
                      (PP (IN of)
                        (NP (DT that) (NN Master))))
                    (VP (VBZ does) (RB not)
                      (VP (VB cast)
                        (PRT (RP out))
                        (NP
                          (NP (DT the) (NN love))
                          (PP (IN of)
                            (NP (NNP Mammon))))))))))))))
    (. ?)))

cc(has-4, But-1)
mark(has-4, if-2)
nsubj(has-4, he-3)
root(ROOT-0, has-4)
det(love-6, any-5)
dobj(has-4, love-6)
poss(Master-9, his-8)
prep_to(has-4, Master-9)
advmod(it-13, how-11)
cop(it-13, is-12)
dep(has-4, it-13)
mark(cast-22, that-14)
det(love-16, the-15)
nsubj(cast-22, love-16)
det(Master-19, that-18)
prep_of(love-16, Master-19)
aux(cast-22, does-20)
neg(cast-22, not-21)
ccomp(it-13, cast-22)
prt(cast-22, out-23)
det(love-25, the-24)
dobj(cast-22, love-25)
prep_of(love-25, Mammon-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB understand)
        (NP (PRP it))))
    (. .) ('' '')))

nsubj(understand-4, I-1)
aux(understand-4, ca-2)
neg(understand-4, n't-3)
root(ROOT-0, understand-4)
dobj(understand-4, it-5)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP have)
      (VP (VBN asked)
        (NP
          (NP (DT a) (JJ hard) (NN question))
          (, ,)
          (NP (NNP Dawtie)))))
    (. .)))

nsubj(asked-4, You-2)
aux(asked-4, have-3)
root(ROOT-0, asked-4)
det(question-7, a-5)
amod(question-7, hard-6)
dobj(asked-4, question-7)
appos(question-7, Dawtie-9)

(ROOT
  (S (CC But)
    (NP (DT a) (NN cure))
    (VP (MD may)
      (VP
        (VP (VB be)
          (VP (VBG going)
            (PRT (RP on))))
        (, ,)
        (CC and)
        (VP (VB take)
          (S
            (NP
              (NP (DT a) (CD thousand) (NNS years))
              (CC or)
              (NP (NNS ages)))
            (VP (TO to)
              (VP (VB work)
                (NP (PRP it))
                (PRT (RP out))))))))
    (. .) ('' '')))

det(cure-3, a-2)
nsubj(going-6, cure-3)
nsubj(take-10, cure-3)
aux(going-6, may-4)
aux(going-6, be-5)
root(ROOT-0, going-6)
prt(going-6, on-7)
conj_and(going-6, take-10)
det(years-13, a-11)
num(years-13, thousand-12)
dobj(take-10, years-13)
nsubj(work-17, years-13)
dobj(take-10, ages-15)
conj_or(years-13, ages-15)
nsubj(work-17, ages-15)
aux(work-17, to-16)
xcomp(take-10, work-17)
dobj(work-17, it-18)
prt(work-17, out-19)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (WP What))
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (MD should) (RB n't)
            (VP (VB be)
              (VP (VBN begun)
                (ADVP (RB yet))))))))
    (. .) ('' '')))

root(ROOT-0, What-2)
mark(begun-8, if-3)
nsubjpass(begun-8, it-4)
aux(begun-8, should-5)
neg(begun-8, n't-6)
auxpass(begun-8, be-7)
dep(What-2, begun-8)
advmod(begun-8, yet-9)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ terrible))))
    (. .) ('' '')))

nsubj(terrible-5, That-2)
aux(terrible-5, would-3)
cop(terrible-5, be-4)
root(ROOT-0, terrible-5)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP
        (ADVP (RB then))
        (VBD am)
        (S
          (NP (PRP I))
          (VP (TO to)
            (VP (VB do) (, ,)
              (ADVP (RB Andrew)))))))
    (. ?)))

nsubj(am-4, What-2)
advmod(am-4, then-3)
root(ROOT-0, am-4)
dobj(am-4, I-5)
nsubj(do-7, I-5)
aux(do-7, to-6)
xcomp(am-4, do-7)
advmod(do-7, Andrew-9)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB always))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD must)
            (ADVP (RB _))
            (VP (VB do)
              (NP (JJ _) (NN something)))))))
    (. !)))

nsubj(say-3, You-1)
advmod(say-3, always-2)
root(ROOT-0, say-3)
nsubj(do-7, we-4)
aux(do-7, must-5)
advmod(do-7, _-6)
ccomp(say-3, do-7)
amod(something-9, _-8)
dobj(do-7, something-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT no) (NN faith)))))
        (CC but)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNP _))
            (VP (VBZ does)
              (NP (JJ _) (NN something)))))))
    (. !) ('' '')))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
expl(is-4, there-3)
dep(say-2, is-4)
neg(faith-6, no-5)
nsubj(is-4, faith-6)
dobj(does-10, what-8)
nsubj(does-10, _-9)
dep(say-2, does-10)
conj_but(is-4, does-10)
amod(something-12, _-11)
dobj(does-10, something-12)

(ROOT
  (S (`` ``)
    (NP (DT The) (JJ apostle) (NNP James))
    (VP (VBD said)
      (ADVP (RB so))
      (, ,)
      (SBAR
        (NP (DT a) (JJ few) (NNS years))
        (IN before)
        (S
          (NP (PRP I))
          (VP (VBD was)
            (VP (VBN born) (, ,)
              (NP (NNP Dawtie)))))))
    (. !) ('' '')))

det(James-4, The-2)
amod(James-4, apostle-3)
nsubj(said-5, James-4)
root(ROOT-0, said-5)
advmod(said-5, so-6)
det(years-10, a-8)
amod(years-10, few-9)
dep(born-14, years-10)
mark(born-14, before-11)
nsubjpass(born-14, I-12)
auxpass(born-14, was-13)
advcl(said-5, born-14)
ccomp(said-5, born-14)
dobj(born-14, Dawtie-16)

(ROOT
  (S (`` ``)
    (VP (VB Do) (RB n't)
      (VP (VB make)
        (NP
          (NP
            (NP (NN fun))
            (PP (IN of)
              (NP (PRP me))))
          (: --)
          (NP (NNP please) (, ,) (NNP Andrew)))))
    (. !)))

aux(make-4, Do-2)
neg(make-4, n't-3)
root(ROOT-0, make-4)
dobj(make-4, fun-5)
prep_of(fun-5, me-7)
nn(Andrew-11, please-9)
dep(fun-5, Andrew-11)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBP like)
          (NP (PRP it))))
      (, ,)
      (CC but)
      (S
        (NP (PRP I))
        (VP (MD ca) (RB n't)
          (VP (VB bear)
            (S
              (NP (PRP it))
              (ADJP (JJ to-day)))))))
    (, ,)
    (NP (PRP$ my) (NN head))
    (VP (VBZ is)
      (ADJP (RB so) (JJ full)
        (PP (IN of)
          (NP (DT the) (JJ poor) (JJ old) (NN laird)))))
    (. !) ('' '')))

nsubj(like-2, I-1)
ccomp(full-17, like-2)
dobj(like-2, it-3)
nsubj(bear-9, I-6)
aux(bear-9, ca-7)
neg(bear-9, n't-8)
conj_but(like-2, bear-9)
ccomp(full-17, bear-9)
nsubj(to-day-11, it-10)
xcomp(bear-9, to-day-11)
poss(head-14, my-13)
nsubj(full-17, head-14)
cop(full-17, is-15)
advmod(full-17, so-16)
root(ROOT-0, full-17)
det(laird-22, the-19)
amod(laird-22, poor-20)
amod(laird-22, old-21)
prep_of(full-17, laird-22)

(ROOT
  (S (`` ``)
    (VP (VB Make)
      (NP
        (NP (NN fun))
        (PP (IN of)
          (NP (PRP you))))
      (, ,) (VB Dawtie))
    (. !)))

root(ROOT-0, Make-2)
dobj(Make-2, fun-3)
prep_of(fun-3, you-5)
dep(Make-2, Dawtie-7)

(ROOT
  (FRAG
    (ADVP (RB Never))
    (. !)))

root(ROOT-0, Never-1)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (ADVP (RB yet))
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB answer)
                (NP (PRP you))))))))
    (. .) ('' '')))

cc(know-5, But-1)
nsubj(know-5, I-2)
nsubj(answer-9, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
advmod(know-5, yet-6)
advmod(answer-9, how-7)
aux(answer-9, to-8)
ccomp(know-5, answer-9)
xcomp(know-5, answer-9)
dobj(answer-9, you-10)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (X (WP what))
    (NP (NNP _))
    (VP (VBP am)
      (VP (VBG _)
        (S
          (NP (PRP I))
          (VP (TO to)
            (VP (VB do))))))
    (. ?) ('' '')))

discourse(_-9, Well-2)
advmod(_-9, then-4)
dep(_-9, what-6)
nsubj(_-9, _-7)
aux(_-9, am-8)
root(ROOT-0, _-9)
dobj(_-9, I-10)
nsubj(do-12, I-10)
aux(do-12, to-11)
xcomp(_-9, do-12)

(ROOT
  (NP (NNP persisted) (NNP Dawtie) (. .)))

nn(Dawtie-2, persisted-1)
root(ROOT-0, Dawtie-2)

(ROOT
  (S (`` ``)
    (VP (VB Wait)
      (PRN (, ,)
        (PP (IN of)
          (NP (NN course)))
        (, ,))
      (SBAR (IN till)
        (S
          (NP (PRP you))
          (VP (VBP know)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (TO to)
                  (VP (VB do)))))))))
    (. .)))

root(ROOT-0, Wait-2)
dep(Wait-2, of-4)
pobj(of-4, course-5)
mark(know-9, till-7)
nsubj(know-9, you-8)
advcl(Wait-2, know-9)
nsubj(do-12, what-10)
aux(do-12, to-11)
ccomp(know-9, do-12)
xcomp(know-9, do-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (TO to)
                  (VP (VB do)))))))))
    (, ,)
    (VP (VB do) (RB n't)
      (VP
        (VP (VB do)
          (NP (NN anything)))
        (: --)
        (VP
          (ADVP (RB only))
          (VB keep)
          (S
            (VP (VBG asking)
              (NP
                (NP (DT the) (NN Thinker))
                (PP (IN for)
                  (NP (NN wisdom)))))))))
    (. .)))

advmod(know-5, When-1)
nsubj(know-5, you-2)
aux(know-5, do-3)
neg(know-5, n't-4)
advcl(do-12, know-5)
nsubj(do-8, what-6)
aux(do-8, to-7)
ccomp(know-5, do-8)
xcomp(know-5, do-8)
aux(do-12, do-10)
neg(do-12, n't-11)
root(ROOT-0, do-12)
dobj(do-12, anything-13)
advmod(keep-16, only-15)
dep(do-12, keep-16)
xcomp(keep-16, asking-17)
det(Thinker-19, the-18)
dobj(asking-17, Thinker-19)
prep_for(Thinker-19, wisdom-21)

(ROOT
  (S (CC And)
    (SBAR (IN until)
      (S
        (NP (PRP you))
        (VP (VBP know))))
    (, ,)
    (VP (VBP do) (RB n't)
      (VP (VB let)
        (S
          (NP (DT the) (NN laird))
          (VP (VB see)
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (VP (VBP know)
                  (NP (NN anything)))))))))
    (. .) ('' '')))

cc(let-8, And-1)
mark(know-4, until-2)
nsubj(know-4, you-3)
advcl(let-8, know-4)
aux(let-8, do-6)
neg(let-8, n't-7)
root(ROOT-0, let-8)
det(laird-10, the-9)
nsubj(see-11, laird-10)
ccomp(let-8, see-11)
mark(know-14, that-12)
nsubj(know-14, you-13)
ccomp(see-11, know-14)
dobj(know-14, anything-15)

(ROOT
  (S
    (PP (IN With)
      (NP (DT this) (NN answer)))
    (NP (NNP Dawtie))
    (VP (VBD was)
      (ADJP (JJ content)))
    (. .)))

det(answer-3, this-2)
prep_with(content-6, answer-3)
nsubj(content-6, Dawtie-4)
cop(content-6, was-5)
root(ROOT-0, content-6)

(ROOT
  (S
    (S
      (NP (NNP Business))
      (VP (VBD was)
        (ADJP (RP over))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD turned)
        (S
          (VP (TO to)
            (VP (VB go)
              (NP (NN home)))))))
    (. .)))

nsubj(over-3, Business-1)
cop(over-3, was-2)
root(ROOT-0, over-3)
nsubj(turned-7, they-6)
nsubj(go-9, they-6)
conj_and(over-3, turned-7)
aux(go-9, to-8)
xcomp(turned-7, go-9)
dobj(go-9, home-10)

(ROOT
  (NP (NNP CHAPTER) (NNP XVII) (. .)))

nn(XVII-2, CHAPTER-1)
root(ROOT-0, XVII-2)

(ROOT
  (NP (NNP DAWTIE)
    (CC AND)
    (NNP THE) (NNP CUP) (. .)))

nn(CUP-4, DAWTIE-1)
conj_and(DAWTIE-1, THE-3)
nn(CUP-4, THE-3)
root(ROOT-0, CUP-4)

(ROOT
  (S
    (NP (DT The) (JJ old) (NN man))
    (VP (VBD had)
      (NP (DT a) (JJ noteworthy) (JJ mental) (NN fabric)))
    (. .)))

det(man-3, The-1)
amod(man-3, old-2)
nsubj(had-4, man-3)
root(ROOT-0, had-4)
det(fabric-8, a-5)
amod(fabric-8, noteworthy-6)
amod(fabric-8, mental-7)
dobj(had-4, fabric-8)

(ROOT
  (S
    (S
      (VP (VBG Believing)
        (S
          (NP (PRP himself))
          (UCP
            (NP
              (NP (DT a) (JJ true) (NN lover))
              (PP (IN of)
                (NP (NN literature))))
            (, ,)
            (CC and)
            (ADVP (RB especially))
            (PP (IN of)
              (NP (NN poetry)))))))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (MD would)
          (VP (VB lecture)
            (PP
              (PP (IN for)
                (NP
                  (NP (CD ten) (NNS minutes))
                  (PP (IN on)
                    (NP
                      (NP (DT the) (JJ right) (NN mode))
                      (PP (IN of)
                        (S
                          (VP (VBG reading)
                            (NP (DT a) (NN verse))
                            (PP (IN in)
                              (NP (NNP Hilton)
                                (CC or)
                                (NNP Dante))))))))))
              (: ;)
              (CONJP (CC but)
                (RB as))
              (PP (TO to)
                (NP (NNP Satan)
                  (CC or)
                  (NNP Beatrice)))))))
      (, ,))
    (VP (MD would)
      (VP (VB pin)
        (NP (PRP$ his) (NN faith))
        (PP (TO to)
          (NP
            (NP
              (NP (DT the) (NN majority))
              (PP (IN of)
                (NP (DT the) (NNS commentators))))
            (: :)
            (S
              (S
                (NP
                  (NP (NNP Milton) (POS 's))
                  (NNP Satan))
                (VP (VBD was)
                  (ADJP (RB too) (JJ noble))))
              (, ,)
              (CC and)
              (S
                (NP (NNP Beatrice))
                (VP (VBD was)
                  (NP
                    (NP (DT no) (NN woman))
                    (, ,)
                    (CC but)
                    (NP (NNP Theology))))))))))
    (. .)))

csubj(pin-41, Believing-1)
nsubj(lover-5, himself-2)
det(lover-5, a-3)
amod(lover-5, true-4)
xcomp(Believing-1, lover-5)
prep_of(lover-5, literature-7)
xcomp(Believing-1, especially-10)
conj_and(lover-5, especially-10)
prep_of(especially-10, poetry-12)
nsubj(lecture-16, he-14)
nsubj(lecture-16', he-14)
aux(lecture-16, would-15)
conj_but(lecture-16, lecture-16')
parataxis(pin-41, lecture-16)
parataxis(pin-41, lecture-16')
num(minutes-19, ten-18)
prep_for(lecture-16, minutes-19)
det(mode-23, the-21)
amod(mode-23, right-22)
prep_on(minutes-19, mode-23)
prepc_of(mode-23, reading-25)
det(verse-27, a-26)
dobj(reading-25, verse-27)
prep_in(reading-25, Hilton-29)
prep_in(reading-25, Dante-31)
conj_or(Hilton-29, Dante-31)
prep_to(lecture-16', Satan-36)
prep_to(lecture-16', Beatrice-38)
conj_or(Satan-36, Beatrice-38)
aux(pin-41, would-40)
root(ROOT-0, pin-41)
poss(faith-43, his-42)
dobj(pin-41, faith-43)
det(majority-46, the-45)
prep_to(pin-41, majority-46)
det(commentators-49, the-48)
prep_of(majority-46, commentators-49)
poss(Satan-53, Milton-51)
nsubj(noble-56, Satan-53)
cop(noble-56, was-54)
advmod(noble-56, too-55)
dep(majority-46, noble-56)
nsubj(woman-62, Beatrice-59)
cop(woman-62, was-60)
neg(woman-62, no-61)
dep(majority-46, woman-62)
conj_and(noble-56, woman-62)
conj_and(noble-56, Theology-65)
conj_but(woman-62, Theology-65)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD was)
        (ADJP (JJ discriminative)
          (PP (TO to)
            (NP
              (NP (DT a) (NN degree))
              (ADJP (RB altogether) (JJ admirable)
                (PP (IN as)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NNS brightness)
                        (CC or)
                        (NNS wrongness))
                      (PP (IN of)
                        (NP
                          (NP (DT a) (NN proposition))
                          (PP (IN with)
                            (NP (NN regard))))))))))))
        (S
          (VP (TO to)
            (VP (VB conduct)))))
      (, ,)
      (CC but)
      (VP (VBD owed)
        (NP (PRP$ his) (NN respectability))
        (PP (TO to)
          (NP (JJ good) (NNS impulses)))
        (PP (IN without)
          (NP
            (NP (DT any) (NN effort))
            (PP (IN of)
              (NP (DT the) (NN will)))))))
    (. .)))

nsubj(discriminative-3, He-1)
nsubj(conduct-21, He-1)
nsubj(owed-24, He-1)
cop(discriminative-3, was-2)
root(ROOT-0, discriminative-3)
det(degree-6, a-5)
prep_to(discriminative-3, degree-6)
advmod(admirable-8, altogether-7)
amod(degree-6, admirable-8)
prepc_as_to(admirable-8, to-10)
det(brightness-12, the-11)
pobj(admirable-8, brightness-12)
pobj(admirable-8, wrongness-14)
conj_or(brightness-12, wrongness-14)
det(proposition-17, a-16)
prep_of(brightness-12, proposition-17)
prep_with(proposition-17, regard-19)
aux(conduct-21, to-20)
xcomp(discriminative-3, conduct-21)
conj_but(discriminative-3, owed-24)
poss(respectability-26, his-25)
dobj(owed-24, respectability-26)
amod(impulses-29, good-28)
prep_to(owed-24, impulses-29)
det(effort-32, any-31)
prep_without(owed-24, effort-32)
det(will-35, the-34)
prep_of(effort-32, will-35)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (RB almost) (RB as) (NN orthodox)
        (PP (IN as)
          (NP (NNP Paul))))
      (PP (IN before)
        (NP (PRP$ his) (NN conversion)))
      (, ,)
      (S
        (VP (VBG lacking)
          (S
            (NP (RB only)
              (NP (DT the) (NN heart))
              (CC and)
              (NP (DT the) (NN courage)))
            (VP (TO to)
              (VP (VB persecute)))))))
    (. .)))

nsubj(orthodox-5, He-1)
cop(orthodox-5, was-2)
advmod(orthodox-5, almost-3)
advmod(orthodox-5, as-4)
root(ROOT-0, orthodox-5)
prep_as(orthodox-5, Paul-7)
poss(conversion-10, his-9)
prep_before(orthodox-5, conversion-10)
xcomp(orthodox-5, lacking-12)
advmod(heart-15, only-13)
det(heart-15, the-14)
dobj(lacking-12, heart-15)
nsubj(persecute-20, heart-15)
det(courage-18, the-17)
dobj(lacking-12, courage-18)
conj_and(heart-15, courage-18)
nsubj(persecute-20, courage-18)
aux(persecute-20, to-19)
xcomp(lacking-12, persecute-20)

(ROOT
  (S
    (SBAR
      (WHNP (WDT Whatever))
      (S
        (NP (DT the) (JJ eternal) (NN wisdom))
        (VP (VBD saw)
          (PP (IN in)
            (NP (PRP him))))))
    (, ,)
    (NP
      (NP (DT the) (NN thing))
      (ADJP (RBS most) (JJ present)
        (PP (TO to)
          (NP (PRP$ his) (JJ own) (NN consciousness)))))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN love))
        (PP (IN of)
          (NP (JJ rare) (JJ historic) (NNS relics)))))
    (. .)))

dobj(saw-5, Whatever-1)
det(wisdom-4, the-2)
amod(wisdom-4, eternal-3)
nsubj(saw-5, wisdom-4)
advcl(love-19, saw-5)
prep_in(saw-5, him-7)
det(thing-10, the-9)
nsubj(love-19, thing-10)
advmod(present-12, most-11)
amod(thing-10, present-12)
poss(consciousness-16, his-14)
amod(consciousness-16, own-15)
prep_to(present-12, consciousness-16)
cop(love-19, was-17)
det(love-19, the-18)
root(ROOT-0, love-19)
amod(relics-23, rare-21)
amod(relics-23, historic-22)
prep_of(love-19, relics-23)

(ROOT
  (S (CC And)
    (NP (DT this) (NN love))
    (VP (VBD was)
      (ADJP (RB so) (JJ mingled))
      (PP (IN in)
        (NP (NN warp)
          (CC and)
          (NN woof)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD did) (RB not)
            (VP (VB know)
              (SBAR (IN whether)
                (S
                  (NP (DT a) (NN thing))
                  (VP (VBD was)
                    (ADJP (RBR more) (JJ precious)
                      (S
                        (VP (TO to)
                          (VP
                            (NP (PRP him))
                            (PP (IN for)
                              (NP
                                (NP (PRP$ its) (NN rarity))
                                (, ,)
                                (NP (PRP$ its) (NN money) (NN value))
                                (, ,)
                                (CC or)
                                (NP (PRP$ its) (JJ historico-reliquary) (NN interest))))))))))))))))
    (. .)))

cc(mingled-6, And-1)
det(love-3, this-2)
nsubj(mingled-6, love-3)
cop(mingled-6, was-4)
advmod(mingled-6, so-5)
root(ROOT-0, mingled-6)
prep_in(mingled-6, warp-8)
prep_in(mingled-6, woof-10)
conj_and(warp-8, woof-10)
mark(know-16, that-12)
nsubj(know-16, he-13)
aux(know-16, did-14)
neg(know-16, not-15)
ccomp(mingled-6, know-16)
mark(precious-22, whether-17)
det(thing-19, a-18)
nsubj(precious-22, thing-19)
nsubj(him-24, thing-19)
cop(precious-22, was-20)
advmod(precious-22, more-21)
ccomp(know-16, precious-22)
aux(him-24, to-23)
xcomp(precious-22, him-24)
poss(rarity-27, its-26)
prep_for(him-24, rarity-27)
poss(value-31, its-29)
nn(value-31, money-30)
prep_for(him-24, value-31)
conj_or(rarity-27, value-31)
poss(interest-36, its-34)
amod(interest-36, historico-reliquary-35)
prep_for(him-24, interest-36)
conj_or(rarity-27, interest-36)

(ROOT
  (S
    (S
      (NP (PDT All) (DT the) (NN time))
      (NP (PRP he))
      (VP (VBD was)
        (NP (DT a) (NN school-master))))
    (, ,)
    (NP (PRP he))
    (VP (VBD saved)
      (NP (DT every) (JJ possible) (NN half-penny))
      (S
        (VP (TO to)
          (VP (VB buy)
            (NP
              (NP (NNS books))
              (, ,)
              (ADJP (RB not)
                (PP
                  (PP (RB because) (IN of)
                    (NP (PRP$ their)
                      (ADJP (JJ worth)
                        (CC or)
                        (JJ human))
                      (NN interest)))
                  (, ,)
                  (CC but)
                  (RB because)
                  (PP (IN of)
                    (NP (PRP$ their) (JJ literary) (NN interest)))))
              (, ,)
              (CC or)
              (NP
                (NP (DT the) (NN scarcity))
                (PP (IN of)
                  (NP (DT the) (NN book)
                    (CC or)
                    (NN edition)))))))))
    (. .)))

predet(time-3, All-1)
det(time-3, the-2)
nsubj(school-master-7, time-3)
nsubj(school-master-7, he-4)
cop(school-master-7, was-5)
det(school-master-7, a-6)
ccomp(saved-10, school-master-7)
nsubj(saved-10, he-9)
root(ROOT-0, saved-10)
det(half-penny-13, every-11)
amod(half-penny-13, possible-12)
dobj(saved-10, half-penny-13)
aux(buy-15, to-14)
vmod(saved-10, buy-15)
dobj(buy-15, books-16)
dobj(buy-15, not-18)
amod(books-16, not-18)
conj_or(books-16, not-18)
poss(interest-25, their-21)
amod(interest-25, worth-22)
conj_or(worth-22, human-24)
amod(interest-25, human-24)
prep_because_of(not-18, interest-25)
amod(books-16, because-28)
conj_or(books-16, because-28)
conj_but(not-18, because-28)
dep(not-18, of-29)
poss(interest-32, their-30)
amod(interest-32, literary-31)
pobj(of-29, interest-32)
det(scarcity-36, the-35)
dobj(buy-15, scarcity-36)
conj_or(books-16, scarcity-36)
det(book-39, the-38)
prep_of(scarcity-36, book-39)
prep_of(scarcity-36, edition-41)
conj_or(book-39, edition-41)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NNS holidays)))
    (NP (PRP he))
    (VP (MD would)
      (VP (VB go)
        (PP (IN about)
          (S
            (VP (VBG questing)
              (PP (IN for)
                (NP (DT the) (NN prey)))
              (SBAR (IN that)
                (S
                  (NP (PRP$ his) (NN soul))
                  (VP (VBD loved) (, ,)
                    (S
                      (VP (VBG hunting)
                        (PP (IN after)
                          (NP (JJ precious) (NNS things)))))))))))))
    (: ;)
    (CC but)
    (ADVP (RB not) (RB even))
    (S
      (NP
        (NP (DT the) (JJ precious) (NNS things))
        (PP (IN of)
          (NP (DT the) (JJ everlasting) (NNS hills))))
      (VP (MD would)
        (VP (VB be)
          (ADJP (JJ precious)
            (PP (TO to)
              (NP (PRP him))))
          (SBAR (IN until)
            (S
              (NP (PRP they))
              (VP (VBD had)
                (VP (VBN received)
                  (NP
                    (NP (DT the) (NN stamp))
                    (PP (IN of)
                      (NP (NN curiosity)))))))))))
    (. .)))

det(holidays-3, the-2)
prep_in(go-6, holidays-3)
nsubj(go-6, he-4)
aux(go-6, would-5)
root(ROOT-0, go-6)
prepc_about(go-6, questing-8)
det(prey-11, the-10)
prep_for(questing-8, prey-11)
mark(loved-15, that-12)
poss(soul-14, his-13)
nsubj(loved-15, soul-14)
ccomp(questing-8, loved-15)
xcomp(loved-15, hunting-17)
amod(things-20, precious-19)
prep_after(hunting-17, things-20)
dep(even-24, not-23)
advmod(go-6, even-24)
conj_but(go-6, even-24)
det(things-27, the-25)
amod(things-27, precious-26)
nsubj(precious-34, things-27)
det(hills-31, the-29)
amod(hills-31, everlasting-30)
prep_of(things-27, hills-31)
aux(precious-34, would-32)
cop(precious-34, be-33)
ccomp(go-6, precious-34)
conj_but(go-6, precious-34)
prep_to(precious-34, him-36)
mark(received-40, until-37)
nsubj(received-40, they-38)
aux(received-40, had-39)
advcl(precious-34, received-40)
det(stamp-42, the-41)
dobj(received-40, stamp-42)
prep_of(stamp-42, curiosity-44)

(ROOT
  (S
    (NP (PRP$ His) (NN life))
    (VP (VBD consisted)
      (PP (IN in)
        (NP (DT a) (JJ continual) (NN search)))
      (PP (IN for)
        (NP
          (NP (NN something) (JJ new))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was)
                (VP (VBN known)
                  (ADJP (RB as) (VBN known)
                    (PP (IN of)
                      (ADJP (JJ old)))))))))))
    (. .)))

poss(life-2, His-1)
nsubj(consisted-3, life-2)
root(ROOT-0, consisted-3)
det(search-7, a-5)
amod(search-7, continual-6)
prep_in(consisted-3, search-7)
prep_for(consisted-3, something-9)
nsubjpass(known-13, something-9)
amod(something-9, new-10)
auxpass(known-13, was-12)
rcmod(something-9, known-13)
advmod(known-15, as-14)
acomp(known-13, known-15)
prep_of(known-15, old-17)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD had)
        (ADVP (RB hardly))
        (VP
          (ADVP (RB yet))
          (VBN occurred)
          (PP (TO to)
            (NP (PRP him)))
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (MD must)
                (NP (CD one) (NN day))
                (VP
                  (VP (VB leave)
                    (NP (PRP$ his) (NNS things)))
                  (CC and)
                  (VP (VB exist)
                    (PP (IN without)
                      (NP (PRP them)))
                    (, ,)
                    (ADVP (RB no) (RB longer)
                      (S
                        (VP (TO to)
                          (VP (VB brood)
                            (PRT (RP over))
                            (NP (PRP them)))))))
                  (, ,)
                  (VP (VB take)
                    (NP (PRP them))
                    (PP (IN in)
                      (NP
                        (NP (PRP$ his) (NNS hands))
                        (, ,)
                        (NP (NN turn))
                        (, ,)
                        (CC and)
                        (NP (NN stroke)))))
                  (, ,)
                  (CC and)
                  (VP (VB admire)
                    (NP (PRP them))))))))))
    (: ;)
    (S
      (ADVP (RB yet))
      (, ,)
      (S
        (ADJP (JJ strange)
          (S
            (VP (TO to)
              (VP (VB say))))))
      (, ,)
      (NP (PRP he))
      (VP (MD would)
        (ADVP (IN at)
          (NP (NNS times)))
        (ADVP (RB anxiously))
        (VP (VB seek)
          (S
            (VP (TO to)
              (VP (VB satisfy)
                (NP (PRP himself))
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (ADJP (JJ safe))
                      (PP (IN for)
                        (NP (DT a) (JJR better) (NN world)))
                      (, ,)
                      (SBAR (IN as)
                        (S
                          (NP (PRP he))
                          (ADVP (RB _))
                          (VP (VBD called)
                            (S
                              (VP (VBG _)
                                (NP (PRP it)))))))))))))
          (PRN (: --)
            (S
              (VP (TO to)
                (VP (VB feel)
                  (ADJP (JJ certain))
                  (, ,)
                  (INTJ (DT that) (VBZ is))
                  (, ,)
                  (SBAR (IN that)
                    (S
                      (NP (PRP$ his) (NN faith))
                      (VP (VBD was)
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NN sort))
                            (SBAR
                              (S
                                (NP (PRP he))
                                (VP (VBD supposed)
                                  (VP (VBN intended)
                                    (PP (IN by)
                                      (NP (NNP Paul)))))))))))))))
            (: --))
          (SBAR (RB not) (IN that)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (NP (PRP himself))
                (VP (VBN gathered)
                  (NP (NN anything))
                  (PP
                    (PP (IN from)
                      (NP (DT the) (NN apostle)))
                    (, ,)
                    (CC but)
                    (RB all)
                    (PP (IN from)
                      (NP
                        (NP (DT the) (NNS traditions))
                        (PP (IN of)
                          (NP
                            (NP (PRP$ his) (NN church))
                            (PP (VBG concerning)
                              (NP
                                (NP (DT the) (NN teaching))
                                (PP (IN of)
                                  (NP (DT the) (NN apostle)))))))))))))))))
    (. .)))

nsubj(occurred-5, It-1)
aux(occurred-5, had-2)
advmod(occurred-5, hardly-3)
advmod(occurred-5, yet-4)
root(ROOT-0, occurred-5)
prep_to(occurred-5, him-7)
mark(leave-13, that-8)
nsubj(leave-13, he-9)
nsubj(exist-17, he-9)
nsubj(admire-40, he-9)
aux(leave-13, must-10)
num(day-12, one-11)
tmod(leave-13, day-12)
ccomp(occurred-5, leave-13)
poss(things-15, his-14)
dobj(leave-13, things-15)
ccomp(occurred-5, exist-17)
conj_and(leave-13, exist-17)
prep_without(exist-17, them-19)
neg(longer-22, no-21)
advmod(exist-17, longer-22)
aux(brood-24, to-23)
dep(longer-22, brood-24)
prt(brood-24, over-25)
dobj(brood-24, them-26)
dep(leave-13, take-28)
dobj(take-28, them-29)
poss(hands-32, his-31)
prep_in(take-28, hands-32)
prep_in(take-28, turn-34)
conj_and(hands-32, turn-34)
prep_in(take-28, stroke-37)
conj_and(hands-32, stroke-37)
ccomp(occurred-5, admire-40)
conj_and(leave-13, admire-40)
dobj(admire-40, them-41)
advmod(seek-54, yet-43)
ccomp(seek-54, strange-45)
aux(say-47, to-46)
xcomp(strange-45, say-47)
nsubj(seek-54, he-49)
nsubj(satisfy-56, he-49)
aux(seek-54, would-50)
advmod(seek-54, at-51)
pobj(at-51, times-52)
advmod(seek-54, anxiously-53)
parataxis(occurred-5, seek-54)
aux(satisfy-56, to-55)
xcomp(seek-54, satisfy-56)
dobj(satisfy-56, himself-57)
mark(safe-61, that-58)
nsubj(safe-61, he-59)
cop(safe-61, was-60)
ccomp(satisfy-56, safe-61)
det(world-65, a-63)
amod(world-65, better-64)
prep_for(safe-61, world-65)
mark(called-70, as-67)
nsubj(called-70, he-68)
advmod(called-70, _-69)
advcl(safe-61, called-70)
xcomp(called-70, _-71)
dobj(_-71, it-72)
aux(feel-75, to-74)
parataxis(seek-54, feel-75)
acomp(feel-75, certain-76)
discourse(feel-75, that-78)
dep(that-78, is-79)
mark(was-84, that-81)
poss(faith-83, his-82)
nsubj(was-84, faith-83)
ccomp(feel-75, was-84)
det(sort-87, the-86)
prep_of(was-84, sort-87)
nsubj(supposed-89, he-88)
rcmod(sort-87, supposed-89)
dep(supposed-89, intended-90)
prep_by(intended-90, Paul-92)
dep(gathered-99, not-94)
mark(gathered-99, that-95)
nsubj(gathered-99, he-96)
aux(gathered-99, had-97)
dobj(gathered-99, himself-98)
dep(seek-54, gathered-99)
dobj(gathered-99, anything-100)
prep(gathered-99, from-101)
det(apostle-103, the-102)
pobj(from-101, apostle-103)
prep(gathered-99, all-106)
conj_but(from-101, all-106)
dep(from-101, from-107)
det(traditions-109, the-108)
pobj(from-107, traditions-109)
poss(church-112, his-111)
prep_of(traditions-109, church-112)
det(teaching-115, the-114)
prep_concerning(church-112, teaching-115)
det(apostle-118, the-117)
prep_of(teaching-115, apostle-118)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (ADJP (JJ anxious))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP say) (, ,)
        (ADVP (RB as)
          (PP (TO to)
            (NP (PRP$ his) (NN safety))))
        (PP (IN for)
          (NP (DT the) (NN world)
            (S
              (VP (TO to)
                (VP (VB come))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB yet))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (PRP$ his) (NN dearest) (NN joy))
          (VP (VBD lay)
            (NP
              (NP (JJ treasured))
              (PP (IN in)
                (NP (DT that) (VBN hidden) (NN room)))))))
      (, ,)
      (NP (PRP he))
      (ADVP (RB never))
      (VP (VBD thought)
        (PP (IN of)
          (NP (DT the) (NN hour)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP
              (VP (MD must)
                (VP
                  (VP (VB leave)
                    (S
                      (NP (PRP it))
                      (NP (DT all))))
                  (, ,)
                  (CC and)
                  (VP (VB go)
                    (NP
                      (NP (NNS houseless)
                        (CC and)
                        (NNS pocketless))
                      (, ,)
                      (ADJP (JJ empty-handed)
                        (CONJP (IN if) (RB not))
                        (JJ armless))
                      (, ,)
                      (PP (IN in)
                        (NP (DT the) (JJ wide) (, ,) (JJ closetless) (NN space)))
                      (, ,)
                      (VP (VBG hearing)
                        (ADVP (RB ever))
                        (PP (IN in)
                          (NP
                            (NP
                              (NP (DT the) (NNS winds))
                              (CC and)
                              (NP (DT the) (NN rain)))
                            (CC and)
                            (NP
                              (NP (DT the) (NN sound))
                              (PP (IN of)
                                (NP (DT the) (NNS sea-waves)))))))))))
              (, ,)
              (NP
                (NP (DT the) (CD one) (NN question))
                (: --) (`` ``)
                (SBARQ
                  (WHNP (WP$ Whose) (NN shall))
                  (SQ
                    (NP (DT those) (NNS things))
                    (VP (VB be)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (PRP thou))
                          (VP (VBP hast)
                            (S
                              (VP (VBN provided))))))))
                  (. ?))
                ('' '')))))))))

nsubj(anxious-3, He-1)
cop(anxious-3, was-2)
root(ROOT-0, anxious-3)
nsubj(say-6, I-5)
ccomp(anxious-3, say-6)
conj_and(anxious-3, say-6)
poss(safety-11, his-10)
prep_as_to(say-6, safety-11)
det(world-14, the-13)
prep_for(say-6, world-14)
aux(come-16, to-15)
vmod(world-14, come-16)
advmod(thought-34, yet-19)
mark(lay-25, while-21)
poss(joy-24, his-22)
nn(joy-24, dearest-23)
nsubj(lay-25, joy-24)
advcl(thought-34, lay-25)
dobj(lay-25, treasured-26)
det(room-30, that-28)
amod(room-30, hidden-29)
prep_in(treasured-26, room-30)
nsubj(thought-34, he-32)
neg(thought-34, never-33)
conj_and(anxious-3, thought-34)
det(hour-37, the-36)
prep_of(thought-34, hour-37)
advmod(leave-41, when-38)
nsubj(leave-41, he-39)
nsubj(go-46, he-39)
aux(leave-41, must-40)
advcl(thought-34, leave-41)
nsubj(all-43, it-42)
xcomp(leave-41, all-43)
advcl(thought-34, go-46)
conj_and(leave-41, go-46)
dobj(go-46, houseless-47)
dobj(go-46, pocketless-49)
conj_and(houseless-47, pocketless-49)
amod(houseless-47, empty-handed-51)
amod(houseless-47, armless-54)
conj_negcc(empty-handed-51, armless-54)
det(space-61, the-57)
amod(space-61, wide-58)
amod(space-61, closetless-60)
prep_in(houseless-47, space-61)
vmod(houseless-47, hearing-63)
advmod(hearing-63, ever-64)
det(winds-67, the-66)
prep_in(hearing-63, winds-67)
det(rain-70, the-69)
prep_in(hearing-63, rain-70)
conj_and(winds-67, rain-70)
det(sound-73, the-72)
prep_in(hearing-63, sound-73)
conj_and(winds-67, sound-73)
det(sea-waves-76, the-75)
prep_of(sound-73, sea-waves-76)
det(question-80, the-78)
num(question-80, one-79)
dobj(leave-41, question-80)
poss(shall-84, Whose-83)
dobj(be-87, shall-84)
det(things-86, those-85)
nsubj(be-87, things-86)
dep(question-80, be-87)
dobj(hast-90, which-88)
nsubj(hast-90, thou-89)
ccomp(be-87, hast-90)
dep(hast-90, provided-91)

(ROOT
  (S
    (PP (IN Like)
      (NP
        (NP (DT the) (JJ rich) (NN man))
        (SBAR
          (WHPP (TO to)
            (WHNP (WP whom)))
          (S
            (NP (NNP God))
            (VP (VBD said)
              (NP (DT the) (NNS words)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN gathered)
        (NP
          (NP
            (NP (JJ much) (NNS goods))
            (PP (IN for)
              (NP (JJ many) (NNS years))))
          (: --)
          (NP
            (NP (NNS hundreds)
              (CC and)
              (NNS hundreds))
            (PP (IN of)
              (NP
                (NP (NNS things))
                (, ,)
                (NP
                  (NP (DT every) (NN one))
                  (SBAR
                    (WHPP (IN of)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP he))
                      (VP (VBD knew))))))))
          (, ,)
          (CC and)
          (NP
            (NP (DT every) (NN one))
            (SBAR
              (WHPP (IN of)
                (WHNP (WDT which)))
              (S
                (NP (PRP he))
                (VP (VBD loved))))))))
    (. .)))

det(man-4, the-2)
amod(man-4, rich-3)
prep_to(said-8, man-4)
prep_like(gathered-14, man-4)
nsubj(said-8, God-7)
rcmod(man-4, said-8)
det(words-10, the-9)
dobj(said-8, words-10)
nsubj(gathered-14, he-12)
aux(gathered-14, had-13)
root(ROOT-0, gathered-14)
amod(goods-16, much-15)
dobj(gathered-14, goods-16)
amod(years-19, many-18)
prep_for(goods-16, years-19)
dobj(gathered-14, hundreds-21)
conj_and(goods-16, hundreds-21)
conj_and(goods-16, hundreds-23)
conj_and(hundreds-21, hundreds-23)
prep_of(hundreds-21, things-25)
det(one-28, every-27)
appos(things-25, one-28)
prep_of(knew-32, one-28)
nsubj(knew-32, he-31)
rcmod(one-28, knew-32)
det(one-36, every-35)
dobj(gathered-14, one-36)
conj_and(goods-16, one-36)
prep_of(loved-40, one-36)
nsubj(loved-40, he-39)
rcmod(one-36, loved-40)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (JJ new) (NN scratch))
        (PP (IN on)
          (NP
            (NP (DT the) (JJ bright) (NN steel))
            (PP (IN of)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP (PRP$ his) (NNS suits))
                    (PP (IN of)
                      (NP (NN armor))))))))))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN scratch))
          (PP (IN on)
            (NP (PRP$ his) (NN heart))))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NN moth))
        (CC and)
        (NP (DT the) (NN rust)))
      (VP (VBD troubled)
        (S
          (NP (PRP him))
          (ADJP (JJ sore)))
        (, ,)
        (SBAR
          (SBAR (IN for)
            (S
              (NP (PRP he))
              (VP (MD could) (RB not)
                (VP (VB keep)
                  (NP (PRP them))
                  (ADVP (RB away))))))
          (: ;)
          (CC and)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP$ his) (NN treasure))
              (VP (VBD was)
                (PRN (, ,)
                  (S
                    (NP (EX there))
                    (VP (VBD was)
                      (NP (PRP$ his) (NN heart))))
                  (, ,))
                (VP (VBN devoured)
                  (PP (IN by)
                    (NP
                      (NP (DT the) (JJ same) (NN moth))
                      (, ,)
                      (VP (VBN consumed)
                        (PP (IN by)
                          (NP (DT the) (JJ same) (NN rust)))))))))))))
    (. .)))

det(scratch-3, A-1)
amod(scratch-3, new-2)
nsubj(scratch-17, scratch-3)
det(steel-7, the-5)
amod(steel-7, bright-6)
prep_on(scratch-3, steel-7)
prep_of(steel-7, one-9)
poss(suits-12, his-11)
prep_of(one-9, suits-12)
prep_of(suits-12, armor-14)
cop(scratch-17, was-15)
det(scratch-17, a-16)
root(ROOT-0, scratch-17)
poss(heart-20, his-19)
prep_on(scratch-17, heart-20)
det(moth-23, the-22)
nsubj(troubled-27, moth-23)
det(rust-26, the-25)
conj_and(moth-23, rust-26)
nsubj(troubled-27, rust-26)
parataxis(scratch-17, troubled-27)
nsubj(sore-29, him-28)
xcomp(troubled-27, sore-29)
mark(keep-35, for-31)
nsubj(keep-35, he-32)
aux(keep-35, could-33)
neg(keep-35, not-34)
advcl(troubled-27, keep-35)
dobj(keep-35, them-36)
advmod(keep-35, away-37)
advmod(devoured-50, where-40)
poss(treasure-42, his-41)
nsubjpass(devoured-50, treasure-42)
auxpass(devoured-50, was-43)
expl(was-46, there-45)
parataxis(devoured-50, was-46)
poss(heart-48, his-47)
nsubj(was-46, heart-48)
advcl(troubled-27, devoured-50)
conj_and(keep-35, devoured-50)
det(moth-54, the-52)
amod(moth-54, same-53)
agent(devoured-50, moth-54)
vmod(moth-54, consumed-56)
det(rust-60, the-58)
amod(rust-60, same-59)
agent(consumed-56, rust-60)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD had)
          (NP
            (NP (JJ much) (NN suffering))
            (PP (IN from)
              (NP (PRP$ his) (NNS possessions)))))
        (: --)
        (VP (VBD was)
          (ADJP (RBR more) (JJ exposed)
            (S
              (VP (TO to)
                (VP (VB misery)
                  (PP (IN than)
                    (NP
                      (NP (DT the) (NN miser))
                      (PP (IN of)
                        (NP (NN gold))))))))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP
              (NP (DT the) (JJ hoarded) (NN coin))
              (PP (IN of)
                (NP (DT the) (NN latter))))
            (VP (MD may)
              (ADVP (RB indeed))
              (VP (VB be)
                (VP (VBN stolen))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBZ fears) (RB neither)
        (VP (VB moth)
          (UCP (CC nor)
            (ADJP (JJ rust))
            (CC nor)
            (ADJP (JJ scratch))
            (CC nor)
            (NP (NN decay))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
amod(suffering-4, much-3)
dobj(had-2, suffering-4)
poss(possessions-7, his-6)
prep_from(suffering-4, possessions-7)
cop(exposed-11, was-9)
advmod(exposed-11, more-10)
dep(had-2, exposed-11)
aux(misery-13, to-12)
xcomp(exposed-11, misery-13)
det(miser-16, the-15)
prep_than(misery-13, miser-16)
prep_of(miser-16, gold-18)
mark(stolen-30, for-20)
det(coin-23, the-21)
amod(coin-23, hoarded-22)
nsubjpass(stolen-30, coin-23)
det(latter-26, the-25)
prep_of(coin-23, latter-26)
aux(stolen-30, may-27)
advmod(stolen-30, indeed-28)
auxpass(stolen-30, be-29)
advcl(had-2, stolen-30)
nsubj(fears-34, he-33)
conj_but(had-2, fears-34)
advmod(fears-34, neither-35)
dep(fears-34, moth-36)
dep(moth-36, nor-37)
dep(nor-37, rust-38)
dep(moth-36, scratch-40)
conj_nor(nor-37, scratch-40)
dep(moth-36, decay-42)
conj_nor(nor-37, decay-42)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP (VBD cherished)
      (NP (PRP$ his) (NNS things))
      (PP (IN as)
        (NP
          (NP (DT no) (NN mother))
          (NP (PRP$ her) (JJ little) (NNS ones)))))
    (. .)))

det(laird-2, The-1)
nsubj(cherished-3, laird-2)
root(ROOT-0, cherished-3)
poss(things-5, his-4)
dobj(cherished-3, things-5)
neg(mother-8, no-7)
prep_as(cherished-3, mother-8)
poss(ones-11, her-9)
amod(ones-11, little-10)
dep(mother-8, ones-11)

(ROOT
  (S
    (S
      (S
        (NP
          (QP (RB Nearly) (CD sixty))
          (NNS years))
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN been)
            (VP (VBG gathering)
              (NP (PRP them))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP$ their) (NN money-worth))
        (VP (VBD was)
          (ADJP (JJ great)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (NP
          (NP (DT no) (NN idea))
          (PP (IN of)
            (NP (PRP$ its) (NN amount))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (MD could) (RB not)
              (VP (VB have)
                (VP (VBN endured)
                  (NP
                    (NP (DT the) (NN exposure)
                      (CC and)
                      (NN handling))
                    (PP (IN of)
                      (NP (PRP them)))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (DT a) (NN valuation))
                        (VP (MD must)
                          (VP (VB involve)))))))))))))
    (. .)))

quantmod(sixty-2, Nearly-1)
num(years-3, sixty-2)
tmod(gathering-7, years-3)
nsubj(gathering-7, he-4)
aux(gathering-7, had-5)
aux(gathering-7, been-6)
root(ROOT-0, gathering-7)
dobj(gathering-7, them-8)
poss(money-worth-12, their-11)
nsubj(great-14, money-worth-12)
cop(great-14, was-13)
conj_and(gathering-7, great-14)
nsubj(had-18, he-17)
conj_but(gathering-7, had-18)
neg(idea-20, no-19)
dobj(had-18, idea-20)
poss(amount-23, its-22)
prep_of(idea-20, amount-23)
mark(endured-30, for-25)
nsubj(endured-30, he-26)
aux(endured-30, could-27)
neg(endured-30, not-28)
aux(endured-30, have-29)
advcl(had-18, endured-30)
det(exposure-32, the-31)
dobj(endured-30, exposure-32)
dobj(involve-41, exposure-32)
dobj(endured-30, handling-34)
conj_and(exposure-32, handling-34)
dobj(involve-41, handling-34)
prep_of(exposure-32, them-36)
det(valuation-39, a-38)
nsubj(involve-41, valuation-39)
aux(involve-41, must-40)
rcmod(exposure-32, involve-41)

(ROOT
  (S
    (S
      (NP
        (NP (PRP$ His) (NN love))
        (PP (IN for)
          (NP (PRP$ his) (NNS books))))
      (VP (VBD had)
        (ADVP (RB somewhat))
        (VP (VBN declined)
          (PP (IN in)
            (NP
              (NP (DT the) (NN growth))
              (PP (IN of)
                (NP
                  (NP (PRP$ his) (NN love))
                  (PP (IN for)
                    (NP (NNS things))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (ADVP (RB now))
        (, ,)
        (PP (IN by)
          (NP
            (NP (NNS degrees))
            (ADJP (RB not) (RB very) (JJ slow)))))
      (, ,)
      (NP
        (NP (PRP$ his) (NN love))
        (PP (IN for)
          (NP (PRP$ his) (NNS things))))
      (VP (VBD was)
        (VP (VBG graduating)
          (NP (PRP itself))
          (PP (IN after)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP he))
                (VP (VBD supposed)
                  (NP (PRP$ their) (NN money-value)))))))))
    (. .)))

poss(love-2, His-1)
nsubj(declined-8, love-2)
poss(books-5, his-4)
prep_for(love-2, books-5)
aux(declined-8, had-6)
advmod(declined-8, somewhat-7)
root(ROOT-0, declined-8)
det(growth-11, the-10)
prep_in(declined-8, growth-11)
poss(love-14, his-13)
prep_of(growth-11, love-14)
prep_for(love-14, things-16)
advmod(by-21, now-19)
ccomp(graduating-33, by-21)
pobj(by-21, degrees-22)
neg(slow-25, not-23)
advmod(slow-25, very-24)
amod(degrees-22, slow-25)
poss(love-28, his-27)
nsubj(graduating-33, love-28)
poss(things-31, his-30)
prep_for(love-28, things-31)
aux(graduating-33, was-32)
conj_and(declined-8, graduating-33)
dobj(graduating-33, itself-34)
dobj(supposed-38, what-36)
nsubj(supposed-38, he-37)
prepc_after(graduating-33, supposed-38)
poss(money-value-40, their-39)
dobj(supposed-38, money-value-40)

(ROOT
  (S
    (NP (PRP$ His) (NN soul))
    (VP
      (CONJP (RB not) (JJ only))
      (VP (VBP clave)
        (PP (TO to)
          (NP (DT the) (NN dust))))
      (CC but)
      (VP (VBD was)
        (VP (VBG going)
          (PP
            (ADVP (JJR deeper)
              (CC and)
              (JJR deeper))
            (IN in)
            (NP (DT the) (NN dust)))
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP (VBD wallowed)))))))
    (. .)))

poss(soul-2, His-1)
nsubj(clave-5, soul-2)
nsubj(going-11, soul-2)
neg(only-4, not-3)
preconj(clave-5, only-4)
root(ROOT-0, clave-5)
det(dust-8, the-7)
prep_to(clave-5, dust-8)
aux(going-11, was-10)
conj_but(clave-5, going-11)
advmod(going-11, deeper-12)
advmod(going-11, deeper-14)
conj_and(deeper-12, deeper-14)
det(dust-17, the-16)
prep_in(going-11, dust-17)
mark(wallowed-20, as-18)
nsubj(wallowed-20, it-19)
advcl(going-11, wallowed-20)

(ROOT
  (S
    (S
      (ADVP
        (NP (DT All) (NN day))
        (RB long))
      (NP (PRP he))
      (VP (VBD was)
        (VP
          (VP (VBG living)
            (PP (IN in)
              (NP (DT the) (NN past))))
          (CC and)
          (VP (VBG growing)
            (ADJP (JJ old)
              (PP (IN in)
                (NP (PRP it))))))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (CD one) (NN thing))
          (SBAR
            (S
              (VP (TO to)
                (VP (VB grow)
                  (ADJP (JJ old)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN past))
                        (, ,)
                        (CC and)
                        (NP (DT another)))))
                  (S
                    (VP (TO to)
                      (VP (VB grow)
                        (ADJP (JJ old))
                        (PP (IN in)
                          (NP (DT the) (NN present)))))))))))))
    (. !)))

det(day-2, All-1)
npadvmod(long-3, day-2)
advmod(living-6, long-3)
nsubj(living-6, he-4)
nsubj(growing-11, he-4)
aux(living-6, was-5)
root(ROOT-0, living-6)
det(past-9, the-8)
prep_in(living-6, past-9)
conj_and(living-6, growing-11)
acomp(growing-11, old-12)
prep_in(old-12, it-14)
nsubj(thing-19, it-16)
cop(thing-19, is-17)
num(thing-19, one-18)
parataxis(living-6, thing-19)
aux(grow-21, to-20)
vmod(thing-19, grow-21)
acomp(grow-21, old-22)
det(past-25, the-24)
prep_in(old-22, past-25)
prep_in(old-22, another-28)
conj_and(past-25, another-28)
aux(grow-30, to-29)
xcomp(grow-21, grow-30)
acomp(grow-30, old-31)
det(present-34, the-33)
prep_in(grow-30, present-34)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD took)
            (NP (PRP$ his) (NN walk))
            (PP (IN about)
              (NP (PRP$ his) (NNS farms))))
          (, ,)
          (CC or)
          (VP (VBD sat)
            (PP (IN at)
              (NP (PRP$ his) (NNS meals))))
          (, ,)
          (CC or)
          (VP (VBD held)
            (NP (DT a) (JJ mild) (, ,) (JJ soulless) (NN conversation))
            (PP (IN with)
              (NP (PRP$ his) (NN daughter)))))))
    (, ,)
    (NP (PRP$ his) (NN heart))
    (VP (VBD was)
      (VP (VBG growing)
        (ADJP (JJ old) (, ,) (RB not) (JJ healthily))
        (PP (IN in)
          (NP
            (NP (DT the) (NN present))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (S
                    (VP (TO to)
                      (VP (VB ripen)
                        (PRN (, ,)
                          (CC but)
                          (ADVP (RB unwholesomely))
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NN past))
                              (, ,)
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (VP (VBZ is)
                                    (S
                                      (VP (TO to)
                                        (VP (VB consume)
                                          (PP (IN with)
                                            (NP (DT a) (JJ dry) (NN rot))))))))))))))))))))))
    (. .)))

mark(took-3, As-1)
nsubj(took-3, he-2)
nsubj(sat-11, he-2)
nsubj(held-17, he-2)
advcl(growing-30, took-3)
poss(walk-5, his-4)
dobj(took-3, walk-5)
poss(farms-8, his-7)
prep_about(took-3, farms-8)
conj_or(took-3, sat-11)
advcl(growing-30, sat-11)
poss(meals-14, his-13)
prep_at(sat-11, meals-14)
conj_or(took-3, held-17)
advcl(growing-30, held-17)
det(conversation-22, a-18)
amod(conversation-22, mild-19)
amod(conversation-22, soulless-21)
dobj(held-17, conversation-22)
poss(daughter-25, his-24)
prep_with(held-17, daughter-25)
poss(heart-28, his-27)
nsubj(growing-30, heart-28)
aux(growing-30, was-29)
root(ROOT-0, growing-30)
amod(healthily-34, old-31)
neg(healthily-34, not-33)
acomp(growing-30, healthily-34)
det(present-37, the-36)
prep_in(growing-30, present-37)
nsubj(is-40, present-37)
nsubj(ripen-42, present-37)
rcmod(present-37, is-40)
aux(ripen-42, to-41)
xcomp(is-40, ripen-42)
cc(in-46, but-44)
dep(in-46, unwholesomely-45)
dep(ripen-42, in-46)
det(past-48, the-47)
pobj(in-46, past-48)
nsubj(is-51, past-48)
nsubj(consume-53, past-48)
rcmod(past-48, is-51)
aux(consume-53, to-52)
xcomp(is-51, consume-53)
det(rot-57, a-55)
amod(rot-57, dry-56)
prep_with(consume-53, rot-57)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (PRP he))
        (VP (VBD read)
          (NP (DT the) (NNP Bible))
          (PP (IN at)
            (NP (NNS prayers)))
          (, ,)
          (S
            (VP (VBG trying)
              (ADJP (JJ hard)
                (S
                  (VP (TO to)
                    (VP (VB banish)
                      (NP (JJ worldly) (NNS things))
                      (PP (IN from)
                        (NP (PRP$ his) (NN mind))))))))))))
    (, ,)
    (NP (PRP$ his) (NNS thoughts))
    (VP (VBD were) (RB not)
      (PP (IN in)
        (NP
          (NP (DT the) (NN story))
          (CC or)
          (NP (DT the) (NN argument))))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD read)))
        (, ,)
        (CC but)
        (S
          (FRAG
            (INTJ (UH hovering))
            (, ,)
            (PP (IN like)
              (NP
                (NP (DT a) (NN bird))
                (PP (IN over)
                  (NP (PRP$ its) (NN nest))))))
          (, ,)
          (FRAG (IN about)
            (NP
              (NP (DT the) (NNS darlings))
              (PP (IN of)
                (NP (PRP$ his) (NN heart))))))))
    (. .)))

mark(read-3, While-1)
nsubj(read-3, he-2)
advcl(were-21, read-3)
det(Bible-5, the-4)
dobj(read-3, Bible-5)
prep_at(read-3, prayers-7)
vmod(read-3, trying-9)
acomp(trying-9, hard-10)
aux(banish-12, to-11)
xcomp(hard-10, banish-12)
amod(things-14, worldly-13)
dobj(banish-12, things-14)
poss(mind-17, his-16)
prep_from(banish-12, mind-17)
poss(thoughts-20, his-19)
nsubj(were-21, thoughts-20)
root(ROOT-0, were-21)
neg(were-21, not-22)
det(story-25, the-24)
prep_in(were-21, story-25)
det(argument-28, the-27)
prep_in(were-21, argument-28)
conj_or(story-25, argument-28)
nsubj(read-30, he-29)
ccomp(were-21, read-30)
ccomp(were-21, hovering-33)
conj_but(read-30, hovering-33)
det(bird-37, a-36)
prep_like(hovering-33, bird-37)
poss(nest-40, its-39)
prep_over(bird-37, nest-40)
dep(hovering-33, about-42)
det(darlings-44, the-43)
dep(about-42, darlings-44)
poss(heart-47, his-46)
prep_of(darlings-44, heart-47)

(ROOT
  (S
    (NP (NNP Yea))
    (, ,)
    (SBAR (RB even) (IN while)
      (S
        (NP (PRP he))
        (VP (VBD prayed))))
    (, ,)
    (NP (PRP$ his) (NN soul))
    (, ,)
    (PP (RB instead) (IN of)
      (S
        (VP (VBG casting)
          (PRT (RP off))
          (NP
            (NP (DT the) (NN clay))
            (PP (IN of)
              (NP (DT the) (NN world)))))))
    (, ,)
    (VP (VBD was)
      (VP
        (VP (VBN loaded))
        (CC and)
        (VP
          (VP (VBN dragged)
            (PRT (RP down))
            (PP (IN with)
              (NP
                (NP (PDT all) (DT the) (NN still-moldering))
                (, ,)
                (NP
                  (NP (JJ slow-changing) (NNS things))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD lined)
                        (NP (DT the) (NNS walls)))))))))
          (CC and)
          (VP (VBN filled)
            (NP
              (NP (DT the) (NNS drawers)
                (CC and)
                (NNS cabinets))
              (PP (IN of)
                (NP (PRP$ his) (NN treasure-chamber))))))))
    (. .)))

nsubjpass(loaded-22, Yea-1)
nsubjpass(dragged-24, Yea-1)
advmod(prayed-6, even-3)
mark(prayed-6, while-4)
nsubj(prayed-6, he-5)
advcl(loaded-22, prayed-6)
poss(soul-9, his-8)
nsubjpass(loaded-22, soul-9)
prepc_instead_of(loaded-22, casting-13)
prt(casting-13, off-14)
det(clay-16, the-15)
dobj(casting-13, clay-16)
det(world-19, the-18)
prep_of(clay-16, world-19)
auxpass(loaded-22, was-21)
root(ROOT-0, loaded-22)
conj_and(loaded-22, dragged-24)
prt(dragged-24, down-25)
predet(still-moldering-29, all-27)
det(still-moldering-29, the-28)
prep_with(dragged-24, still-moldering-29)
amod(things-32, slow-changing-31)
appos(still-moldering-29, things-32)
nsubj(lined-34, things-32)
rcmod(things-32, lined-34)
det(walls-36, the-35)
dobj(lined-34, walls-36)
conj_and(loaded-22, filled-38)
conj_and(dragged-24, filled-38)
det(drawers-40, the-39)
dobj(filled-38, drawers-40)
dobj(filled-38, cabinets-42)
conj_and(drawers-40, cabinets-42)
poss(treasure-chamber-45, his-44)
prep_of(drawers-40, treasure-chamber-45)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN place))
          (PP (IN of)
            (SBAR
              (WHNP
                (WHNP (WP$ whose) (NN existence))
                (ADVP (RB not) (RB even)))
              (S
                (NP (PRP$ his) (NN daughter))
                (VP (VBD knew))))))))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (PP (IN before)
            (ADVP (RB ever)))
          (NP (PRP she))
          (VP (VBD entered)
            (NP (DT the) (NN house)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD had)
        (VP
          (VP (VBN taken)
            (PP (IN with)
              (NP (PRP him)))
            (NP
              (NP (DT a) (NN mason))
              (PP (IN from)
                (NP (DT the) (NN town)))))
          (, ,)
          (CC and)
          (VP (VBN built)
            (ADVP (RB up)
              (NP (DT the) (NN entrance))
              (PP (TO to)
                (NP (PRP it))))
            (PP (IN from)
              (NP (DT the) (NN hall))))
          (, ,)
          (S
            (ADVP (RB ever) (RB afterward))
            (VP
              (VP (VBG keeping)
                (NP
                  (NP (DT the) (JJ other) (NN door))
                  (PP (IN of)
                    (NP (PRP it)))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD opened)
                        (PP (IN from)
                          (NP
                            (NP (PRP$ his) (NN study))
                            (ADJP (RB carefully) (VBN locked)))))))))
              (, ,)
              (CC and)
              (VP (VBG leaving)
                (S
                  (NP (PRP it))
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN regarded)
                        (PP (IN as)
                          (NP
                            (NP (DT the) (NN door))
                            (PP (IN of)
                              (NP (DT a) (NN closet)))))))))))))))
    (. .)))

nsubj(place-4, It-1)
cop(place-4, was-2)
det(place-4, a-3)
root(ROOT-0, place-4)
poss(existence-7, whose-6)
dobj(knew-12, existence-7)
dep(even-9, not-8)
advmod(existence-7, even-9)
poss(daughter-11, his-10)
nsubj(knew-12, daughter-11)
prepc_of(place-4, knew-12)
mark(entered-18, for-14)
prep(entered-18, before-15)
pcomp(before-15, ever-16)
nsubj(entered-18, she-17)
advcl(taken-24, entered-18)
det(house-20, the-19)
dobj(entered-18, house-20)
nsubj(taken-24, he-22)
nsubj(built-34, he-22)
nsubj(keeping-46, he-22)
aux(taken-24, had-23)
parataxis(place-4, taken-24)
prep_with(taken-24, him-26)
det(mason-28, a-27)
dobj(taken-24, mason-28)
det(town-31, the-30)
prep_from(mason-28, town-31)
parataxis(place-4, built-34)
conj_and(taken-24, built-34)
advmod(built-34, up-35)
det(entrance-37, the-36)
pobj(up-35, entrance-37)
prep_to(up-35, it-39)
det(hall-42, the-41)
prep_from(built-34, hall-42)
advmod(afterward-45, ever-44)
advmod(keeping-46, afterward-45)
parataxis(place-4, keeping-46)
ccomp(taken-24, keeping-46)
conj_and(taken-24, keeping-46)
det(door-49, the-47)
amod(door-49, other-48)
dobj(keeping-46, door-49)
nsubj(opened-53, door-49)
prep_of(door-49, it-51)
rcmod(door-49, opened-53)
poss(study-56, his-55)
prep_from(opened-53, study-56)
advmod(locked-58, carefully-57)
amod(study-56, locked-58)
ccomp(taken-24, leaving-61)
conj_and(taken-24, leaving-61)
conj_and(keeping-46, leaving-61)
dobj(leaving-61, it-62)
nsubjpass(regarded-65, it-62)
aux(regarded-65, to-63)
auxpass(regarded-65, be-64)
xcomp(leaving-61, regarded-65)
det(door-68, the-67)
prep_as(regarded-65, door-68)
det(closet-71, a-70)
prep_of(door-68, closet-71)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (RB as) (JJ terrible))
      (SBAR (IN as)
        (S
          (NP (NNP Dawtie))
          (VP (VBD felt)
            (NP (PRP it))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (DT a) (JJ live) (JJ human) (NN soul))
                (VP (MD should)
                  (ADVP (RB thus))
                  (VP
                    (VP (VB haunt)
                      (NP
                        (NP (DT the) (NN sepulcher))
                        (PP (IN of)
                          (NP (DT the) (NN past)))))
                    (, ,)
                    (CC and)
                    (VP (VB love)
                      (NP (DT the) (NN lifeless))
                      (, ,)
                      (S
                        (VP (VBG turning)
                          (NP
                            (NP (DT a) (NN room) (NN hitherto))
                            (VP (VBN devoted)
                              (PP (TO to)
                                (NP (NN hospitality)
                                  (CC and)
                                  (NN mirthful) (NN intercourse)))
                              (PP (IN into)
                                (NP
                                  (NP (DT the) (NN temple))
                                  (PP (IN of)
                                    (NP (PRP$ his) (JJ selfish) (NN idolatry))))))))))))))))))
    (. .)))

nsubj(terrible-4, It-1)
cop(terrible-4, was-2)
advmod(terrible-4, as-3)
root(ROOT-0, terrible-4)
mark(felt-7, as-5)
nsubj(felt-7, Dawtie-6)
advcl(terrible-4, felt-7)
dobj(felt-7, it-8)
mark(haunt-17, that-10)
det(soul-14, a-11)
amod(soul-14, live-12)
amod(soul-14, human-13)
nsubj(haunt-17, soul-14)
nsubj(love-25, soul-14)
aux(haunt-17, should-15)
advmod(haunt-17, thus-16)
ccomp(felt-7, haunt-17)
det(sepulcher-19, the-18)
dobj(haunt-17, sepulcher-19)
det(past-22, the-21)
prep_of(sepulcher-19, past-22)
ccomp(felt-7, love-25)
conj_and(haunt-17, love-25)
det(lifeless-27, the-26)
dobj(love-25, lifeless-27)
vmod(love-25, turning-29)
det(hitherto-32, a-30)
nn(hitherto-32, room-31)
dobj(turning-29, hitherto-32)
vmod(hitherto-32, devoted-33)
nn(intercourse-38, hospitality-35)
conj_and(hospitality-35, mirthful-37)
nn(intercourse-38, mirthful-37)
prep_to(devoted-33, intercourse-38)
det(temple-41, the-40)
prep_into(devoted-33, temple-41)
poss(idolatry-45, his-43)
amod(idolatry-45, selfish-44)
prep_of(temple-41, idolatry-45)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB as)
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (NNS rooms))))
      (VP (VBN carved)
        (PP (IN for)
          (NP
            (NP (DT the) (NN dead))
            (PP (IN in)
              (NP (DT the) (NNP Beban) (NNP El) (NNP Malook)))))))
    (. .)))

nsubjpass(carved-8, It-1)
auxpass(carved-8, was-2)
advmod(carved-8, as-3)
pobj(as-3, one-4)
det(rooms-7, the-6)
prep_of(as-3, rooms-7)
root(ROOT-0, carved-8)
det(dead-11, the-10)
prep_for(carved-8, dead-11)
det(Malook-16, the-13)
nn(Malook-16, Beban-14)
nn(Malook-16, El-15)
prep_in(dead-11, Malook-16)

(ROOT
  (S
    (NP (NNP Sure))
    (, ,)
    (SBAR (IN if)
      (S
        (VP (VBN left)
          (PP (TO to)
            (NP (PRP himself))))))
    (, ,)
    (NP
      (NP (DT the) (NN ghost))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD loved)
            (NP (PRP it))))))
    (VP (MD would)
      (VP (VB haunt)
        (NP (DT the) (NN place))))
    (. !)))

nsubj(haunt-14, Sure-1)
mark(left-4, if-3)
advcl(haunt-14, left-4)
prep_to(left-4, himself-6)
det(ghost-9, the-8)
nsubj(loved-11, ghost-9)
nsubj(haunt-14, ghost-9)
rcmod(ghost-9, loved-11)
dobj(loved-11, it-12)
aux(haunt-14, would-13)
root(ROOT-0, haunt-14)
det(place-16, the-15)
dobj(haunt-14, place-16)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (MD could) (RB not)
      (ADVP (RB surely))
      (VP (VB be)
        (VP (VBN permitted))))
    (. !)))

cc(permitted-7, But-1)
nsubjpass(permitted-7, he-2)
aux(permitted-7, could-3)
neg(permitted-7, not-4)
advmod(permitted-7, surely-5)
auxpass(permitted-7, be-6)
root(ROOT-0, permitted-7)

(ROOT
  (S (IN for)
    (NP (PRP it))
    (VP (MD might)
      (VP (VB postpone)
        (S
          (NP (DT a) (CD thousand) (NNS years))
          (NP
            (NP (PRP$ his) (NN discovery))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS emptiness))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN universe))
                    (PP (IN of)
                      (NP (JJ such) (NNS treasures)))))))))))
    (. .)))

dep(postpone-4, for-1)
nsubj(postpone-4, it-2)
aux(postpone-4, might-3)
root(ROOT-0, postpone-4)
det(years-7, a-5)
num(years-7, thousand-6)
nsubj(discovery-9, years-7)
poss(discovery-9, his-8)
xcomp(postpone-4, discovery-9)
det(emptiness-12, the-11)
prep_of(discovery-9, emptiness-12)
det(universe-15, a-14)
prep_of(emptiness-12, universe-15)
amod(treasures-18, such-17)
prep_of(universe-15, treasures-18)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBG moldering)
          (PP (IN into)
            (NP
              (NP (DT the) (NN world))
              (PP (IN of)
                (NP
                  (NP (NNS spirits))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN heart))
                      (PP (IN of)
                        (NP
                          (NP (DT an) (NN avalanche))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN dust))
                              (PP (IN of)
                                (NP
                                  (NP (NNS ages))
                                  (, ,)
                                  (NP
                                    (NP (NN dust) (NN material))
                                    (PP (IN from)
                                      (NP (PRP$ his) (NNS hoards)))))))))))))))))))
    (, ,)
    (S
      (NP (NN dust))
      (ADJP (JJ moral)))
    (CC and)
    (S
      (NP
        (NP (JJ spiritual))
        (PP (IN from)
          (NP (PRP$ his) (JJ withering) (NN soul))))
      (NP (PRP itself)))
    (. .)))

advmod(moldering-4, Now-1)
nsubj(moldering-4, he-2)
nsubj(moral-29, he-2)
aux(moldering-4, was-3)
root(ROOT-0, moldering-4)
det(world-7, the-6)
prep_into(moldering-4, world-7)
prep_of(world-7, spirits-9)
det(heart-12, the-11)
prep_in(spirits-9, heart-12)
det(avalanche-15, an-14)
prep_of(heart-12, avalanche-15)
det(dust-18, the-17)
prep_of(avalanche-15, dust-18)
prep_of(dust-18, ages-20)
nn(material-23, dust-22)
appos(ages-20, material-23)
poss(hoards-26, his-25)
prep_from(material-23, hoards-26)
dep(moral-29, dust-28)
conj_and(moldering-4, moral-29)
dep(itself-36, spiritual-31)
poss(soul-35, his-33)
amod(soul-35, withering-34)
prep_from(spiritual-31, soul-35)
conj_and(moldering-4, itself-36)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ next) (NN day))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (JJ ill)))))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (, ,)
        (S
          (ADJP (JJ common)
            (PP (IN as)))
          (VP (VBZ is)
            (NP
              (NP (NN illness))
              (PP (TO to)
                (NP (NN humanity)))))))
      (, ,))
    (VP (VBD was)
      (ADJP (JJ strange))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP it))
          (VP (VBD had)
            (ADVP (RB never))
            (VP (VBN befallen)
              (S
                (NP (PRP him))
                (ADVP (RB before))))))))
    (. .)))

det(day-3, The-1)
amod(day-3, next-2)
nsubj(illness-13, day-3)
nsubj(strange-18, day-3)
nsubj(ill-6, he-4)
cop(ill-6, was-5)
rcmod(day-3, ill-6)
dep(illness-13, common-10)
prep(common-10, as-11)
cop(illness-13, is-12)
rcmod(day-3, illness-13)
prep_to(illness-13, humanity-15)
cop(strange-18, was-17)
root(ROOT-0, strange-18)
mark(befallen-24, for-20)
nsubj(befallen-24, it-21)
aux(befallen-24, had-22)
neg(befallen-24, never-23)
advcl(strange-18, befallen-24)
dep(befallen-24, him-25)
advmod(him-25, before-26)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (JJ unable)
        (S
          (VP (TO to)
            (VP (VB leave)
              (NP (PRP$ his) (NN bed)))))))
    (. .)))

nsubj(unable-3, He-1)
nsubj(leave-5, He-1)
cop(unable-3, was-2)
root(ROOT-0, unable-3)
aux(leave-5, to-4)
xcomp(unable-3, leave-5)
poss(bed-7, his-6)
dobj(leave-5, bed-7)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (ADVP (RB never))
    (VP (VBD said)
      (NP (DT a) (NN word))
      (PP
        (PP (TO to)
          (NP
            (NP (PRP$ his) (NN daughter))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (ADVP (RB alone))
                (VP (VBN waited)
                  (PP (IN on)
                    (NP (PRP him))))))))
        (, ,) (RB as)
        (PP (TO to)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD had)
                (VP (VBN happened)
                  (PP (IN in)
                    (NP (DT the) (NN night))))))))))
    (. .)))

cc(said-4, But-1)
nsubj(said-4, he-2)
neg(said-4, never-3)
root(ROOT-0, said-4)
det(word-6, a-5)
dobj(said-4, word-6)
poss(daughter-9, his-8)
prep_to(said-4, daughter-9)
nsubj(waited-13, daughter-9)
advmod(waited-13, alone-12)
rcmod(daughter-9, waited-13)
prep_on(waited-13, him-15)
nsubj(happened-21, what-19)
aux(happened-21, had-20)
prepc_as_to(said-4, happened-21)
det(night-24, the-23)
prep_in(happened-21, night-24)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (VP (VBN passed)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ sleepless)))))))
    (, ,)
    (CC and)
    (S
      (PP (IN without)
        (NP
          (NP (DT the) (NN possibility))
          (PP (IN of)
            (NP
              (NP (DT a) (NN dream))
              (PP (IN on)
                (NP
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (TO to)
                        (VP (VB fall)
                          (ADVP (RB back))
                          (: ;)
                          (ADVP (RB yet))
                          (, ,)
                          (SBAR
                            (SBAR
                              (S
                                (SBAR
                                  (WHADVP (WRB when))
                                  (S
                                    (NP (NN morning))
                                    (VP (VBD came))))
                                (, ,)
                                (NP (PRP he))
                                (VP (VBD was)
                                  (PP (IN in)
                                    (NP (JJ much) (NN doubt))))))
                            (CC whether)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (PRP he))
                                (VP (VBD had)
                                  (VP (VBN seen))))))))))
                  (: --)
                  (NP
                    (NP (DT the) (NN face))
                    (, ,) (RB namely) (, ,)
                    (PP (IN of)
                      (NP (NNP Dawtie))))))))))
      (, ,)
      (S
        (VP (VBG peeping)
          (PRT (RP in))
          (PP (IN at)
            (NP (DT the) (NN door)))))
      (: --)
      (VP (VBD was)
        (NP
          (NP (DT a) (NN reality))
          (, ,)
          (CC or)
          (ADVP (CC but))
          (NP
            (NP (DT a) (NN vision))
            (PP (IN of)
              (NP (DT the) (NN night)))))))
    (. .)))

nsubj(passed-3, He-1)
aux(passed-3, had-2)
root(ROOT-0, passed-3)
nsubj(sleepless-5, it-4)
ccomp(passed-3, sleepless-5)
det(possibility-10, the-9)
prep_without(reality-53, possibility-10)
det(dream-13, a-12)
prep_of(possibility-10, dream-13)
nsubj(fall-17, which-15)
aux(fall-17, to-16)
dep(face-38, fall-17)
advmod(fall-17, back-18)
advmod(fall-17, yet-20)
advmod(came-24, when-22)
nsubj(came-24, morning-23)
advcl(was-27, came-24)
nsubj(was-27, he-26)
dep(fall-17, was-27)
amod(doubt-30, much-29)
prep_in(was-27, doubt-30)
dobj(seen-35, what-32)
nsubj(seen-35, he-33)
aux(seen-35, had-34)
dep(fall-17, seen-35)
conj_whether(was-27, seen-35)
det(face-38, the-37)
prep_on(dream-13, face-38)
advmod(face-38, namely-40)
prep_of(face-38, Dawtie-43)
csubj(reality-53, peeping-45)
prt(peeping-45, in-46)
det(door-49, the-48)
prep_at(peeping-45, door-49)
cop(reality-53, was-51)
det(reality-53, a-52)
conj_and(passed-3, reality-53)
conj_and(passed-3, but-56)
advmod(reality-53, but-56)
conj_or(reality-53, but-56)
det(vision-58, a-57)
conj_and(passed-3, vision-58)
conj_or(reality-53, vision-58)
det(night-61, the-60)
prep_of(vision-58, night-61)

(ROOT
  (S (IN For)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBD opened)
          (NP
            (NP (DT the) (NN door))
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP she))
                (VP (VBD had)
                  (VP (VBN closed)))))))))
    (, ,)
    (S
      (NP (DT all))
      (VP (VBD was)
        (ADJP (JJ dark))))
    (, ,)
    (CC and)
    (RB not)
    (S
      (NP (DT the) (JJS slightest) (NN sound))
      (VP (VBD reached)
        (NP (PRP$ his) (JJ quick) (NN ear))
        (PP (IN from)
          (NP
            (NP (DT the) (JJ swift) (NN foot))
            (PP (IN of)
              (NP (PRP$ her) (NN retreat)))))))
    (. .)))

dep(dark-14, For-1)
advmod(opened-4, when-2)
nsubj(opened-4, he-3)
advcl(dark-14, opened-4)
det(door-6, the-5)
dobj(opened-4, door-6)
dobj(closed-10, door-6)
nsubj(closed-10, she-8)
aux(closed-10, had-9)
rcmod(door-6, closed-10)
nsubj(dark-14, all-12)
cop(dark-14, was-13)
root(ROOT-0, dark-14)
neg(reached-21, not-17)
det(sound-20, the-18)
amod(sound-20, slightest-19)
nsubj(reached-21, sound-20)
conj_and(dark-14, reached-21)
poss(ear-24, his-22)
amod(ear-24, quick-23)
dobj(reached-21, ear-24)
det(foot-28, the-26)
amod(foot-28, swift-27)
prep_from(reached-21, foot-28)
poss(retreat-31, her-30)
prep_of(foot-28, retreat-31)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD turned)
          (NP (DT the) (NN key))
          (ADVP (RB twice)))
        (, ,)
        (CC and)
        (VP (VBD pushed)
          (NP
            (NP (CD two) (NNS bolts))
            (, ,)
            (ADJP (JJ eager)
              (S
                (VP (TO to)
                  (VP (VB regard)
                    (NP (DT the) (NN vision))
                    (PP (IN as)
                      (NP
                        (NP (DT a) (JJ providential) (NN rebuke))
                        (PP (IN of)
                          (NP (PRP$ his) (NNS carelessness)))))
                    (PP (IN in)
                      (S
                        (VP (VBG leaving)
                          (NP (DT the) (NN door))
                          (PP (IN on)
                            (NP (DT the) (NN latch))))))))))))))
    (: --)
    (S
      (PP (IN for)
        (NP (DT the) (JJ first) (NN time)))
      (, ,)
      (NP (PRP he))
      (VP (VBD imagined)))
    (. .)))

nsubj(turned-2, He-1)
nsubj(pushed-8, He-1)
root(ROOT-0, turned-2)
det(key-4, the-3)
dobj(turned-2, key-4)
advmod(turned-2, twice-5)
conj_and(turned-2, pushed-8)
num(bolts-10, two-9)
dobj(pushed-8, bolts-10)
amod(bolts-10, eager-12)
aux(regard-14, to-13)
xcomp(eager-12, regard-14)
det(vision-16, the-15)
dobj(regard-14, vision-16)
det(rebuke-20, a-18)
amod(rebuke-20, providential-19)
prep_as(regard-14, rebuke-20)
poss(carelessness-23, his-22)
prep_of(rebuke-20, carelessness-23)
prepc_in(regard-14, leaving-25)
det(door-27, the-26)
dobj(leaving-25, door-27)
det(latch-30, the-29)
prep_on(leaving-25, latch-30)
det(time-35, the-33)
amod(time-35, first-34)
prep_for(imagined-38, time-35)
nsubj(imagined-38, he-37)
parataxis(turned-2, imagined-38)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD tottered)
        (PRT (RP back))
        (PP (TO to)
          (NP (PRP$ his) (NN chair))))
      (, ,)
      (CC and)
      (VP (VBN sunk)
        (PP (IN on)
          (NP (PRP it)))
        (PP (IN in)
          (NP (DT a) (JJ cold) (NN sweat)))))
    (. .)))

advmod(tottered-3, Then-1)
nsubj(tottered-3, he-2)
nsubj(sunk-10, he-2)
root(ROOT-0, tottered-3)
prt(tottered-3, back-4)
poss(chair-7, his-6)
prep_to(tottered-3, chair-7)
conj_and(tottered-3, sunk-10)
prep_on(sunk-10, it-12)
det(sweat-16, a-14)
amod(sweat-16, cold-15)
prep_in(sunk-10, sweat-16)

(ROOT
  (S (IN For) (, ,)
    (SBAR (IN although)
      (S
        (NP (DT the) (NN confidence))
        (VP (VBD grew) (, ,)
          (SBAR (IN that)
            (S
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN seen)))))
              (VP
                (VP (VBD was))
                (CC but)
                (VP
                  (NP (DT a) (JJ false) (NN creation) (NN Proceeding))
                  (PP (IN from)
                    (NP (DT the) (JJ heat-oppressed) (NN brain))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB far)
        (PP (IN from)
          (ADJP (JJ comfortable))))
      (S
        (VP (TO to)
          (VP (VB feel)
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (MD could)
                  (ADVP (RB no) (RB longer))
                  (VP (VB depend)
                    (PP (IN upon)
                      (NP (PRP$ his) (NN brain)
                        (S
                          (VP (TO to)
                            (VP (VB tell)
                              (NP (PRP him))
                              (NP
                                (NP (RB only) (DT the) (NN thing))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBD was)
                                      (ADJP (JJ true)))))))))))))))))))
    (. .)))

dep(was-25, For-1)
mark(grew-6, although-3)
det(confidence-5, the-4)
nsubj(grew-6, confidence-5)
advcl(was-25, grew-6)
mark(was-13, that-8)
dobj(seen-12, what-9)
nsubj(seen-12, he-10)
aux(seen-12, had-11)
csubj(was-13, seen-12)
ccomp(grew-6, was-13)
det(Proceeding-18, a-15)
amod(Proceeding-18, false-16)
nn(Proceeding-18, creation-17)
ccomp(grew-6, Proceeding-18)
conj_but(was-13, Proceeding-18)
det(brain-22, the-20)
amod(brain-22, heat-oppressed-21)
prep_from(Proceeding-18, brain-22)
nsubj(was-25, it-24)
nsubj(feel-30, it-24)
root(ROOT-0, was-25)
prep_far_from(was-25, comfortable-28)
aux(feel-30, to-29)
xcomp(was-25, feel-30)
mark(depend-36, that-31)
nsubj(depend-36, he-32)
aux(depend-36, could-33)
neg(longer-35, no-34)
advmod(depend-36, longer-35)
ccomp(feel-30, depend-36)
poss(brain-39, his-38)
prep_upon(depend-36, brain-39)
aux(tell-41, to-40)
vmod(brain-39, tell-41)
iobj(tell-41, him-42)
advmod(thing-45, only-43)
det(thing-45, the-44)
dobj(tell-41, thing-45)
nsubj(true-48, thing-45)
cop(true-48, was-47)
rcmod(thing-45, true-48)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD were)
            (VP (VBG going)
              (PRT (RP out))
              (PP (IN of)
                (NP (PRP$ his) (NN mind)))
              (, ,)
              (PP (IN on)
                (NP (DT the) (NN way)
                  (S
                    (VP (TO to)
                      (VP (VB encounter)
                        (NP
                          (NP (DT a) (NN succession))
                          (PP (IN of)
                            (NP (NNS visions))))
                        (: --)
                        (PP (IN without)
                          (NP (NN reality))))))))))
          (, ,)
          (CC but)
          (VP (VBD possessed)
            (PP (IN of)
              (NP (PRP$ its) (NN power)))))))
    (. !)))

dep(going-5, What-1)
mark(going-5, if-2)
nsubj(going-5, he-3)
nsubj(possessed-25, he-3)
aux(going-5, were-4)
root(ROOT-0, going-5)
poss(mind-9, his-8)
prep_out_of(going-5, mind-9)
det(way-13, the-12)
prep_on(going-5, way-13)
aux(encounter-15, to-14)
vmod(way-13, encounter-15)
det(succession-17, a-16)
dobj(encounter-15, succession-17)
prep_of(succession-17, visions-19)
prep_without(encounter-15, reality-22)
conj_but(going-5, possessed-25)
poss(power-28, its-27)
prep_of(possessed-25, power-28)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (PRP they))
        (VP (MD should)
          (VP (VB be)
            (ADJP (JJ such)
              (SBAR
                (WHNP (WP$ whose) (NNS terror))
                (S
                  (VP (MD would)
                    (VP (VB compel)
                      (S
                        (NP (PRP him))
                        (VP (TO to)
                          (VP (VB disclose)
                            (SBAR
                              (WHNP
                                (WHNP (WP what))
                                (NP (JJS most)))
                              (S
                                (NP (PRP he))
                                (VP (VBD desired)
                                  (S
                                    (VP (TO to)
                                      (VP (VB keep)
                                        (ADJP (JJ covered))))))))))))))))))))
    (. ?)))

dep(such-6, What-1)
mark(such-6, if-2)
nsubj(such-6, they-3)
aux(such-6, should-4)
cop(such-6, be-5)
root(ROOT-0, such-6)
poss(terror-8, whose-7)
nsubj(compel-10, terror-8)
aux(compel-10, would-9)
ccomp(such-6, compel-10)
dobj(compel-10, him-11)
nsubj(disclose-13, him-11)
aux(disclose-13, to-12)
xcomp(compel-10, disclose-13)
dobj(desired-17, what-14)
nsubj(keep-19, what-14)
dep(what-14, most-15)
nsubj(desired-17, he-16)
ccomp(disclose-13, desired-17)
aux(keep-19, to-18)
xcomp(desired-17, keep-19)
acomp(keep-19, covered-20)

(ROOT
  (FRAG
    (FRAG
      (ADJP
        (WHADVP (WRB How))
        (JJ fearful))
      (S
        (VP (TO to)
          (VP (VB be)
            (ADVP (DT no) (RBR more))
            (NP (PRP$ his) (JJ own) (NN master))))))
    (, ,)
    (CC but)
    (S
      (PP (IN at)
        (NP
          (NP (DT the) (NN beck)
            (CC and)
            (NN call))
          (PP (IN of)
            (NP (DT a) (JJ disordered) (NN brain)))))
      (, ,)
      (NP
        (NP (DT a) (NN maniac) (NN king))
        (PP (IN in)
          (NP (DT a) (JJ _) (NNS cosmos))))
      (VP (VBZ acosmos)
        (ADJP (JJ _))))
    (. !)))

advmod(fearful-2, How-1)
root(ROOT-0, fearful-2)
aux(master-9, to-3)
cop(master-9, be-4)
neg(more-6, no-5)
advmod(master-9, more-6)
poss(master-9, his-7)
amod(master-9, own-8)
dep(fearful-2, master-9)
cc(fearful-2, but-11)
det(beck-14, the-13)
prep_at(acosmos-29, beck-14)
conj_and(beck-14, call-16)
prep_at(acosmos-29, call-16)
det(brain-20, a-18)
amod(brain-20, disordered-19)
prep_of(beck-14, brain-20)
det(king-24, a-22)
nn(king-24, maniac-23)
nsubj(acosmos-29, king-24)
det(cosmos-28, a-26)
amod(cosmos-28, _-27)
prep_in(king-24, cosmos-28)
dep(fearful-2, acosmos-29)
acomp(acosmos-29, _-30)

(ROOT
  (FRAG
    (ADJP (RBR Better))
    (S
      (S
        (NP (PRP it))
        (VP (VBD had)
          (VP (VBN been)
            (ADJP (JJ Dawtie)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (VBD had)
          (VP (VBN seen)
            (PP (IN in)
              (NP (PRP$ his) (NNS hands)))
            (NP
              (NP
                (NP (NNP Benvenuto) (NNP Cellini) (POS 's))
                (NN chalice))
              (VP (VBN made)
                (PP (IN for)
                  (NP (NNP Pope) (NNP Clement) (DT the) (NNP Seventh)))
                (S
                  (VP (TO to)
                    (VP (VB drink)
                      (NP
                        (NP
                          (NP (NN therefrom))
                          (NP (DT the) (JJ holy) (NN wine)))
                        (: --)
                        (NP
                          (NP (NN worth) (NNS thousands))
                          (PP (IN of)
                            (NP (NNS pounds))))))))))))))
    (. !)))

root(ROOT-0, Better-1)
nsubj(Dawtie-5, it-2)
aux(Dawtie-5, had-3)
cop(Dawtie-5, been-4)
dep(Better-1, Dawtie-5)
nsubj(seen-10, she-8)
aux(seen-10, had-9)
dep(Better-1, seen-10)
conj_and(Dawtie-5, seen-10)
poss(hands-13, his-12)
prep_in(seen-10, hands-13)
nn(Cellini-15, Benvenuto-14)
poss(chalice-17, Cellini-15)
dobj(seen-10, chalice-17)
vmod(chalice-17, made-18)
nn(Seventh-23, Pope-20)
nn(Seventh-23, Clement-21)
det(Seventh-23, the-22)
prep_for(made-18, Seventh-23)
aux(drink-25, to-24)
xcomp(made-18, drink-25)
dobj(drink-25, therefrom-26)
det(wine-29, the-27)
amod(wine-29, holy-28)
dep(therefrom-26, wine-29)
nn(thousands-32, worth-31)
dep(therefrom-26, thousands-32)
prep_of(thousands-32, pounds-34)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP she))
    (VP (VBD had)
      (VP (VBN seen)
        (NP (PRP it))))
    (. !)))

advmod(seen-4, Perhaps-1)
nsubj(seen-4, she-2)
aux(seen-4, had-3)
root(ROOT-0, seen-4)
dobj(seen-4, it-5)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (ADVP (RB surely))
    (NP (PRP she))
    (VP (VBD had) (RB not))
    (. !)))

discourse(had-5, No-1)
advmod(had-5, surely-3)
nsubj(had-5, she-4)
root(ROOT-0, had-5)
neg(had-5, not-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ careful)
          (S (RB not)
            (VP (TO to)
              (VP (VB make)
                (NP (PRP$ her) (NN suspect))))))))
    (. !)))

nsubj(careful-4, He-1)
aux(careful-4, must-2)
cop(careful-4, be-3)
root(ROOT-0, careful-4)
neg(make-7, not-5)
aux(make-7, to-6)
dep(careful-4, make-7)
poss(suspect-9, her-8)
dobj(make-7, suspect-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP
        (VP (VB watch)
          (NP (PRP her)))
        (CC and)
        (VP (VB say)
          (NP (NN nothing)))))
    (. !)))

nsubj(watch-3, He-1)
nsubj(say-6, He-1)
aux(watch-3, would-2)
root(ROOT-0, watch-3)
dobj(watch-3, her-4)
conj_and(watch-3, say-6)
dobj(say-6, nothing-7)

(ROOT
  (S (CC But)
    (NP
      (NP (NNP Dawtie))
      (, ,)
      (ADJP (JJ conscious)
        (PP (IN of)
          (NP
            (NP (DT no)
              (ADJP (JJ wrong) (, ,)
                (CC and)
                (JJ full)))
            (PP (IN of)
              (NP (NN love)))))
        (PP (TO to)
          (NP (DT the) (JJ old) (NN man))))
      (, ,))
    (VP (VBD showed)
      (NP (DT an) (JJ untroubled) (NN face))
      (SBAR
        (WHADVP (WRB when))
        (S
          (S
            (ADVP (RB next))
            (NP (PRP she))
            (VP (VBD met)
              (NP (PRP him))))
          (: ;)
          (CC and)
          (S
            (NP (PRP he))
            (VP (VBD made)
              (PRT (RP up))
              (NP (PRP$ his) (NN mind))
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (MD would) (RB rather)
                    (VP (VB have)
                      (NP (PRP$ her) (NN ignorant)))))))))))
    (. .)))

cc(showed-18, But-1)
nsubj(showed-18, Dawtie-2)
amod(Dawtie-2, conscious-4)
neg(wrong-7, no-6)
prep_of(conscious-4, wrong-7)
prep_of(conscious-4, full-10)
conj_and(wrong-7, full-10)
prep_of(wrong-7, love-12)
det(man-16, the-14)
amod(man-16, old-15)
prep_to(conscious-4, man-16)
root(ROOT-0, showed-18)
det(face-21, an-19)
amod(face-21, untroubled-20)
dobj(showed-18, face-21)
advmod(met-25, when-22)
advmod(met-25, next-23)
nsubj(met-25, she-24)
advcl(showed-18, met-25)
dobj(met-25, him-26)
nsubj(made-30, he-29)
advcl(showed-18, made-30)
conj_and(met-25, made-30)
prt(made-30, up-31)
poss(mind-33, his-32)
dobj(made-30, mind-33)
mark(have-38, that-34)
nsubj(have-38, he-35)
aux(have-38, would-36)
advmod(have-38, rather-37)
ccomp(made-30, have-38)
poss(ignorant-40, her-39)
dobj(have-38, ignorant-40)

(ROOT
  (FRAG
    (ADJP (JJ Thenceforward))
    (, ,)
    (SBAR
      (ADVP (RB naturally))
      (IN though)
      (S
        (S
          (ADVP (RB childishly))
          (, ,)
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (RB even) (JJ friendlier)
              (PP (TO to)
                (NP (PRP her))))
            (PP (IN than)
              (ADVP (RB before)))))
        (: :)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (RB so) (JJ great)
              (SBAR
                (S
                  (NP (DT a) (NN relief))
                  (VP (TO to)
                    (VP (VB find)
                      (SBAR (IN that)
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (VP (RB not)
                              (S
                                (VP (TO to)
                                  (VP (VB fear)
                                    (NP (PRP her))))))))))))))))))
    (. !)))

root(ROOT-0, Thenceforward-1)
advmod(friendlier-10, naturally-3)
mark(friendlier-10, though-4)
advmod(friendlier-10, childishly-5)
nsubj(friendlier-10, he-7)
cop(friendlier-10, was-8)
advmod(friendlier-10, even-9)
dep(Thenceforward-1, friendlier-10)
prep_to(friendlier-10, her-12)
prep(friendlier-10, than-13)
pcomp(than-13, before-14)
nsubj(great-19, it-16)
cop(great-19, was-17)
advmod(great-19, so-18)
parataxis(friendlier-10, great-19)
det(relief-21, a-20)
nsubj(find-23, relief-21)
aux(find-23, to-22)
ccomp(great-19, find-23)
mark(not-27, that-24)
nsubj(not-27, he-25)
nsubj(fear-29, he-25)
aux(not-27, had-26)
ccomp(find-23, not-27)
aux(fear-29, to-28)
xcomp(not-27, fear-29)
dobj(fear-29, her-30)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (JJ next) (NN time) (NN Dawtie))
        (VP (VBD was)
          (VP (VBG dusting)
            (NP (DT the) (NNS books)))))
      (, ,)
      (NP (PRP she))
      (VP (VBD felt)
        (VP
          (ADVP (RB strongly))
          (VBN drawn)
          (S
            (VP (TO to)
              (VP (VB look)
                (ADVP (RB again))
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN picture))
                    (PP (IN of)
                      (NP (DT the) (NN cup)))))))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBD seemed)
        (ADVP (RB now))
        (S
          (VP (TO to)
            (VP (VB hold)
              (PP (IN in)
                (NP (PRP it)))
              (NP (DT a) (JJ human) (NN life)))))))
    (. !)))

det(Dawtie-4, The-1)
amod(Dawtie-4, next-2)
nn(Dawtie-4, time-3)
nsubj(dusting-6, Dawtie-4)
aux(dusting-6, was-5)
ccomp(felt-11, dusting-6)
det(books-8, the-7)
dobj(dusting-6, books-8)
nsubj(felt-11, she-10)
root(ROOT-0, felt-11)
advmod(drawn-13, strongly-12)
dep(felt-11, drawn-13)
aux(look-15, to-14)
xcomp(drawn-13, look-15)
advmod(look-15, again-16)
det(picture-19, the-18)
prep_at(look-15, picture-19)
det(cup-22, the-21)
prep_of(picture-19, cup-22)
nsubj(seemed-25, it-24)
nsubj(hold-28, it-24)
parataxis(felt-11, seemed-25)
advmod(seemed-25, now-26)
aux(hold-28, to-27)
xcomp(seemed-25, hold-28)
prep_in(hold-28, it-30)
det(life-33, a-31)
amod(life-33, human-32)
dobj(hold-28, life-33)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD took)
        (PRT (RP down))
        (NP (DT the) (NN book)))
      (, ,)
      (CC and)
      (VP (VBD began)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP she))
            (VP (VBD stood)
              (S
                (VP (TO to)
                  (VP (VB read)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP it))
                        (VP (VBD said)
                          (PP (IN about)
                            (NP (DT the) (NN chalice)))
                          (, ,)
                          (S
                            (VP (VBG referring)
                              (SBAR (IN as)
                                (S
                                  (NP (PRP she))
                                  (VP (VBD read)
                                    (PP (IN from)
                                      (NP (NNS letterpress)))
                                    (PP (TO to)
                                      (NP (NN drawing)))))))))))))))))))
    (. .)))

nsubj(took-2, She-1)
nsubj(began-8, She-1)
root(ROOT-0, took-2)
prt(took-2, down-3)
det(book-5, the-4)
dobj(took-2, book-5)
conj_and(took-2, began-8)
advmod(stood-11, where-9)
nsubj(stood-11, she-10)
nsubj(read-13, she-10)
advcl(began-8, stood-11)
aux(read-13, to-12)
xcomp(stood-11, read-13)
dobj(said-16, what-14)
nsubj(said-16, it-15)
ccomp(read-13, said-16)
det(chalice-19, the-18)
prep_about(said-16, chalice-19)
xcomp(said-16, referring-21)
mark(read-24, as-22)
nsubj(read-24, she-23)
advcl(referring-21, read-24)
prep_from(read-24, letterpress-26)
prep_to(read-24, drawing-28)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (VP (VBN taken)
          (PP (IN from)
            (NP
              (NP (DT an) (NN illumination))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN missal))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (DT the) (NN cup))
                      (VP (VBD was)
                        (VP (VBN known)
                          (S
                            (VP (TO to)
                              (VP (VB have)
                                (VP (VBN been)
                                  (VP (VBN copied)))))))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD rendered)
        (NP (DT the) (NN description))
        (PP (IN in)
          (NP (DT the) (JJ letterpress)
            (ADJP (JJ unnecessary)
              (PP (IN except)
                (PP (IN in)
                  (NP (NN regard))))
              (PP (TO to)
                (NP (DT the) (NNS stones)
                  (CC and)
                  (NN _) (NNS dessins) (NNS repoussés))))
            (NN _)))
        (PP (IN on)
          (NP (DT the) (JJ hidden) (NN side)))))
    (. .)))

nsubjpass(taken-3, It-1)
auxpass(taken-3, was-2)
root(ROOT-0, taken-3)
det(illumination-6, an-5)
prep_from(taken-3, illumination-6)
det(missal-9, a-8)
prep_in(illumination-6, missal-9)
advmod(known-15, where-11)
det(cup-13, the-12)
nsubjpass(known-15, cup-13)
nsubjpass(copied-19, cup-13)
auxpass(known-15, was-14)
rcmod(missal-9, known-15)
aux(copied-19, to-16)
aux(copied-19, have-17)
auxpass(copied-19, been-18)
xcomp(known-15, copied-19)
nsubj(rendered-23, it-22)
conj_and(taken-3, rendered-23)
det(description-25, the-24)
dobj(rendered-23, description-25)
det(_-40, the-27)
amod(_-40, letterpress-28)
amod(_-40, unnecessary-29)
prep(unnecessary-29, except-30)
pcomp(except-30, in-31)
pobj(in-31, regard-32)
det(stones-35, the-34)
prep_to(unnecessary-29, stones-35)
nn(repoussés-39, _-37)
nn(repoussés-39, dessins-38)
prep_to(unnecessary-29, repoussés-39)
conj_and(stones-35, repoussés-39)
prep_in(rendered-23, _-40)
det(side-44, the-42)
amod(side-44, hidden-43)
prep_on(rendered-23, side-44)

(ROOT
  (S
    (NP (PRP She))
    (ADVP (RB quickly))
    (VP (VBD learned)
      (SBAR
        (S
          (NP
            (NP (DT the) (NNS names))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS gems))
                (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP she))
                    (VP (MD might)
                      (VP (VB see)
                        (SBAR
                          (WHNP (WRB how) (JJ many))
                          (S
                            (VP (VBD were)
                              (PP (IN in)
                                (NP
                                  (NP
                                    (NP (DT the) (NN high-priest) (POS 's))
                                    (NN breast-plate))
                                  (CC and)
                                  (NP
                                    (NP (DT the) (NNS gates))
                                    (PP (IN of)
                                      (NP (DT the) (JJ new) (NNP Jerusalem))))))
                              (, ,)
                              (ADVP (RB then))))))))))))
          (VP (VBD proceeded)
            (PP (TO to)
              (NP
                (NP (DT the) (NN history))
                (PP (IN of)
                  (NP (DT the) (NN chalice)))))))))
    (. .)))

nsubj(learned-3, She-1)
advmod(learned-3, quickly-2)
root(ROOT-0, learned-3)
det(names-5, the-4)
nsubj(proceeded-31, names-5)
det(gems-8, the-7)
prep_of(names-5, gems-8)
mark(see-13, that-10)
nsubj(see-13, she-11)
aux(see-13, might-12)
dep(gems-8, see-13)
advmod(many-15, how-14)
advmod(were-16, many-15)
nsubj(were-16, many-15)
ccomp(see-13, were-16)
det(high-priest-19, the-18)
poss(breast-plate-21, high-priest-19)
prep_in(were-16, breast-plate-21)
det(gates-24, the-23)
prep_in(were-16, gates-24)
conj_and(breast-plate-21, gates-24)
det(Jerusalem-28, the-26)
amod(Jerusalem-28, new-27)
prep_of(gates-24, Jerusalem-28)
advmod(were-16, then-30)
ccomp(learned-3, proceeded-31)
det(history-34, the-33)
prep_to(proceeded-31, history-34)
det(chalice-37, the-36)
prep_of(history-34, chalice-37)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP
        (VP (VBD read)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD had)
                (VP (VBN come)
                  (PP (IN into)
                    (NP
                      (NP (DT the) (NN possession))
                      (PP (IN of)
                        (NP
                          (NP (NNP Cardinal) (NNP York))
                          (, ,)
                          (NP
                            (NP (DT the) (NN brother))
                            (PP (IN of)
                              (NP (NNP Charles) (NNP Edward) (NNP Stuart))))
                          (, ,))))))))))
        (CC and)
        (VP (VBD had)
          (VP (VBN been)
            (PP (IN by)
              (NP
                (NP (PRP him))
                (VP (VBN intrusted)
                  (PP (TO to)
                    (NP
                      (NP (PRP$ his) (NN sister-in-law))
                      (, ,)
                      (NP
                        (NP (DT the) (NNPS Duchess))
                        (PP (IN of)
                          (NP (NNP Albany))))
                      (, ,)))
                  (PP (IN from)
                    (SBAR
                      (WHNP (WP$ whose)
                        (NP (NN house)))
                      (S
                        (NP (PRP it))
                        (VP (VBD disappeared))))))))))))
    (, ,)
    (NP (DT some))
    (VP (VBD said)
      (SBAR
        (S
          (S
            (VP (VBN stolen)))
          (, ,)
          (NP (NNS others))
          (VP (VBD said)
            (VP (VBN sold))))))
    (. .)))

nsubj(read-2, She-1)
nsubj(been-23, She-1)
ccomp(said-43, read-2)
mark(come-6, that-3)
nsubj(come-6, it-4)
aux(come-6, had-5)
ccomp(read-2, come-6)
det(possession-9, the-8)
prep_into(come-6, possession-9)
nn(York-12, Cardinal-11)
prep_of(possession-9, York-12)
det(brother-15, the-14)
appos(York-12, brother-15)
nn(Stuart-19, Charles-17)
nn(Stuart-19, Edward-18)
prep_of(brother-15, Stuart-19)
aux(been-23, had-22)
conj_and(read-2, been-23)
ccomp(said-43, been-23)
prep_by(been-23, him-25)
vmod(him-25, intrusted-26)
poss(sister-in-law-29, his-28)
prep_to(intrusted-26, sister-in-law-29)
det(Duchess-32, the-31)
appos(sister-in-law-29, Duchess-32)
prep_of(Duchess-32, Albany-34)
poss(house-38, whose-37)
dobj(disappeared-40, house-38)
nsubj(disappeared-40, it-39)
prepc_from(intrusted-26, disappeared-40)
nsubj(said-43, some-42)
root(ROOT-0, said-43)
vmod(said-47, stolen-44)
nsubj(said-47, others-46)
ccomp(said-43, said-47)
dep(said-47, sold-48)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD came)
      (ADVP (JJ next))
      (PP (TO to)
        (NP (DT the) (JJ historic) (NN surface)))
      (PP (IN in)
        (NP
          (NP (DT the) (NN possession))
          (PP (IN of)
            (NP
              (NP
                (NP (DT a) (JJ certain) (NN earl))
                (SBAR
                  (WHNP
                    (NP (WP$ whose) (NN love))
                    (PP (IN of)
                      (NP (NNS curiosities))))
                  (S
                    (VP (VBD was)
                      (VP
                        (ADVP (RB well))
                        (VBN known))))))
              (: ;)
              (NP
                (ADVP (RB but)
                  (PP (IN from)
                    (NP (PRP$ his) (NN collection))
                    (ADVP (RB again))))
                (NP
                  (NP (PRP it))
                  (VP (VBN vanished)))
                (, ,)
                (NP
                  (NP (DT this) (NN time))
                  (PP (IN beyond)
                    (NP
                      (NP (DT a) (NN doubt))
                      (VP (VBN stolen))))))
              (, ,)
              (CC and)
              (ADVP (RB probably))
              (NP (NNS years))))))
      (SBAR (IN before)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (VP (VBN missed))))))
    (. .)))

nsubj(came-2, It-1)
root(ROOT-0, came-2)
det(surface-7, the-5)
amod(surface-7, historic-6)
prep_next_to(came-2, surface-7)
det(possession-10, the-9)
prep_in(came-2, possession-10)
det(earl-14, a-12)
amod(earl-14, certain-13)
prep_of(possession-10, earl-14)
poss(love-16, earl-14)
nsubjpass(known-21, love-16)
prep_of(love-16, curiosities-18)
auxpass(known-21, was-19)
advmod(known-21, well-20)
rcmod(earl-14, known-21)
advmod(it-28, but-23)
poss(collection-26, his-25)
prep_from(but-23, collection-26)
advmod(but-23, again-27)
prep_of(possession-10, it-28)
conj_and(earl-14, it-28)
poss(love-16, it-28)
vmod(it-28, vanished-29)
det(time-32, this-31)
appos(it-28, time-32)
det(doubt-35, a-34)
prep_beyond(time-32, doubt-35)
vmod(doubt-35, stolen-36)
advmod(years-40, probably-39)
prep_of(possession-10, years-40)
conj_and(earl-14, years-40)
poss(love-16, years-40)
mark(missed-44, before-41)
nsubjpass(missed-44, it-42)
auxpass(missed-44, was-43)
advcl(came-2, missed-44)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (JJ new) (NN train))
        (PP (IN of)
          (NP (NN thought))))
      (VP (VBD was)
        (ADVP (RB presently))
        (PP (IN in)
          (NP (NN motion)))
        (PP (IN in)
          (NP
            (NP (DT the) (NN mind))
            (PP (IN of)
              (NP (DT the) (NN girl)))))))
    (: :)
    (S
      (ADVP (RB _))
      (NP (DT The) (JJ beautiful) (NN cup))
      (VP (VBD was)
        (VP (VBN stolen))))
    (. !)))

det(train-3, A-1)
amod(train-3, new-2)
nsubj(was-6, train-3)
prep_of(train-3, thought-5)
root(ROOT-0, was-6)
advmod(was-6, presently-7)
prep_in(was-6, motion-9)
det(mind-12, the-11)
prep_in(was-6, mind-12)
det(girl-15, the-14)
prep_of(mind-12, girl-15)
advmod(stolen-22, _-17)
det(cup-20, The-18)
amod(cup-20, beautiful-19)
nsubjpass(stolen-22, cup-20)
auxpass(stolen-22, was-21)
parataxis(was-6, stolen-22)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (SBAR
        (WHADVP (RB not) (WRB where))
        (S
          (NP (PRP it))
          (VP (MD ought)
            (S
              (VP (TO to)
                (VP (VB be))))))))
    (. !)))

nsubj(was-2, it-1)
root(ROOT-0, was-2)
dep(where-4, not-3)
advmod(ought-6, where-4)
nsubj(ought-6, it-5)
nsubj(be-8, it-5)
advcl(was-2, ought-6)
aux(be-8, to-7)
xcomp(ought-6, be-8)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was) (RB not)
      (PP (IN at)
        (NP (NN home))))
    (. !)))

nsubj(was-2, it-1)
root(ROOT-0, was-2)
neg(was-2, not-3)
prep_at(was-2, home-5)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (NP (DT a) (JJ captive) (, ,)
        (NP (DT a) (NN slave))
        (NN _)))
    (. !)))

nsubj(_-8, it-1)
cop(_-8, was-2)
det(_-8, a-3)
amod(_-8, captive-4)
det(slave-7, a-6)
dep(_-8, slave-7)
root(ROOT-0, _-8)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD lowered)
        (NP
          (NP (DT the) (NN book))
          (, ,)
          (ADJP (RB half) (JJ closed))
          (, ,))
        (PP (IN with)
          (NP
            (NP (DT a) (NN finger))
            (PP (IN between)
              (NP (DT the) (NNS leaves))))))
      (, ,)
      (CC and)
      (VP (VBD stood)
        (NP (NN thinking))))
    (. .)))

nsubj(lowered-2, She-1)
nsubj(stood-17, She-1)
root(ROOT-0, lowered-2)
det(book-4, the-3)
dobj(lowered-2, book-4)
advmod(closed-7, half-6)
amod(book-4, closed-7)
det(finger-11, a-10)
prep_with(lowered-2, finger-11)
det(leaves-14, the-13)
prep_between(finger-11, leaves-14)
conj_and(lowered-2, stood-17)
dobj(stood-17, thinking-18)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD did)
      (SBAR (RB not) (IN for)
        (S
          (NP (DT a) (NN moment))
          (VP (VBP believe)
            (SBAR
              (S
                (NP (PRP$ her) (NN master))
                (VP (VBD had)
                  (VP (VBN stolen)
                    (NP (PRP it))
                    (, ,)
                    (SBAR (IN though)
                      (S
                        (NP (DT the) (NN fear))
                        (VP (VBD did)
                          (NP (NN flash))
                          (PP (IN through)
                            (NP (PRP$ her) (NN mind))))))))))))))
    (. .)))

nsubj(did-2, She-1)
root(ROOT-0, did-2)
dep(believe-7, not-3)
mark(believe-7, for-4)
det(moment-6, a-5)
nsubj(believe-7, moment-6)
advcl(did-2, believe-7)
poss(master-9, her-8)
nsubj(stolen-11, master-9)
aux(stolen-11, had-10)
ccomp(believe-7, stolen-11)
dobj(stolen-11, it-12)
mark(did-17, though-14)
det(fear-16, the-15)
nsubj(did-17, fear-16)
advcl(stolen-11, did-17)
dobj(did-17, flash-18)
poss(mind-21, her-20)
prep_through(did-17, mind-21)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD had)
        (VP (VBN been)
          (VP (VBN stolen)
            (CC and)
            (VBN sold)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN bought)
          (NP (PRP it))
          (PP (IN at)
            (NP
              (NP (NN length))
              (PP (IN of)
                (NP
                  (NP (DT some) (NN one))
                  (SBAR
                    (WHNP
                      (NP (WP$ whose) (NN possession))
                      (WHPP (IN of)
                        (WHNP (PRP it))))
                    (S
                      (VP (VBD was)
                        (ADVP (RB nowise))
                        (ADJP (JJ suspicious))))))))))))
    (. !)))

nsubjpass(stolen-4, It-1)
nsubjpass(sold-6, It-1)
aux(stolen-4, had-2)
auxpass(stolen-4, been-3)
root(ROOT-0, stolen-4)
conj_and(stolen-4, sold-6)
nsubj(bought-11, he-9)
aux(bought-11, had-10)
conj_and(stolen-4, bought-11)
dobj(bought-11, it-12)
prep_at(bought-11, length-14)
det(one-17, some-16)
prep_of(length-14, one-17)
poss(possession-19, one-17)
nsubj(suspicious-24, possession-19)
prep_of(possession-19, it-21)
cop(suspicious-24, was-22)
advmod(suspicious-24, nowise-23)
rcmod(one-17, suspicious-24)

(ROOT
  (SQ
    (S (CC But)
      (NP (PRP he))
      (VP (MD must)
        (VP (VB know)
          (ADVP (RB now))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD had)
                (VP (VBN been)
                  (VP (VBN stolen) (, ,)
                    (PP (IN for)
                      (NP (RB here)))
                    (, ,)
                    (PP (IN with)
                      (NP (DT the) (NN cup)))))))))))
    (, ,)
    (SQ (VBD was)
      (NP
        (NP (DT the) (NN book))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD said)
              (ADVP (RB so)))))))
    (. !)))

cc(know-4, But-1)
nsubj(know-4, he-2)
aux(know-4, must-3)
dep(was-19, know-4)
advmod(know-4, now-5)
mark(stolen-10, that-6)
nsubjpass(stolen-10, it-7)
aux(stolen-10, had-8)
auxpass(stolen-10, been-9)
ccomp(know-4, stolen-10)
prep(stolen-10, for-12)
pobj(for-12, here-13)
det(cup-17, the-16)
prep_with(stolen-10, cup-17)
root(ROOT-0, was-19)
det(book-21, the-20)
nsubj(was-19, book-21)
nsubj(said-23, book-21)
rcmod(book-21, said-23)
advmod(said-23, so-24)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (MD would)
        (VP (VB be)
          (NP (NN nothing))
          (SBAR (IN if)
            (S
              (NP (DT the) (JJ rightful) (NN owner))
              (VP (VBD were) (RB not)
                (VP (VBN known))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP he))
        (VP (VBD was)
          (VP (VBN known))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN thing))
        (VP (MD ought)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP (PRP$ his))))))))
    (. !)))

nsubj(nothing-4, That-1)
aux(nothing-4, would-2)
cop(nothing-4, be-3)
root(ROOT-0, nothing-4)
mark(known-11, if-5)
det(owner-8, the-6)
amod(owner-8, rightful-7)
nsubjpass(known-11, owner-8)
auxpass(known-11, were-9)
neg(known-11, not-10)
advcl(nothing-4, known-11)
nsubjpass(known-16, he-14)
auxpass(known-16, was-15)
conj_but(nothing-4, known-16)
det(thing-20, the-19)
nsubj(ought-21, thing-20)
nsubj(his-24, thing-20)
conj_but(nothing-4, ought-21)
conj_and(known-16, ought-21)
aux(his-24, to-22)
cop(his-24, be-23)
xcomp(ought-21, his-24)

(ROOT
  (S
    (S
      (NP (DT The) (NN laird))
      (VP (MD might) (RB not)
        (VP (VB be)
          (VP (VBN bound)
            (PRN (, ,)
              (S
                (NP (PRP she))
                (VP (VBD was) (RB not)
                  (ADJP (JJ sure))
                  (, ,)
                  (S
                    (VP (TO to)
                      (VP (VB restore)
                        (NP (PRP it))
                        (PP (IN at)
                          (NP (PRP$ his) (JJ own) (NN loss))))))))
              (, ,))
            (SBAR (IN for)
              (S
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP he))
                    (VP (VBD bought)
                      (NP (PRP it)))))
                (NP (PRP he))
                (VP (VBD was) (RB not)
                  (ADJP (JJ aware))
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (VP (VBN stolen))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBN bound)
          (S
            (VP (TO to)
              (VP (VB restore)
                (NP (PRP it))
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN price))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN paid)
                            (PP (IN for)
                              (NP (PRP it))))))))))))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (DT the) (JJ former) (NN owner))
              (VP (MD would)
                (VP (VB give)
                  (NP (PRP it)))))))))
    (. !)))

det(laird-2, The-1)
nsubjpass(bound-6, laird-2)
aux(bound-6, might-3)
neg(bound-6, not-4)
auxpass(bound-6, be-5)
root(ROOT-0, bound-6)
nsubj(sure-11, she-8)
nsubj(restore-14, she-8)
cop(sure-11, was-9)
neg(sure-11, not-10)
parataxis(bound-6, sure-11)
aux(restore-14, to-13)
xcomp(sure-11, restore-14)
dobj(restore-14, it-15)
poss(loss-19, his-17)
amod(loss-19, own-18)
prep_at(restore-14, loss-19)
mark(aware-29, for-21)
advmod(bought-24, when-22)
nsubj(bought-24, he-23)
advcl(aware-29, bought-24)
dobj(bought-24, it-25)
nsubj(aware-29, he-26)
cop(aware-29, was-27)
neg(aware-29, not-28)
advcl(bound-6, aware-29)
mark(stolen-33, that-30)
nsubjpass(stolen-33, it-31)
auxpass(stolen-33, was-32)
ccomp(aware-29, stolen-33)
nsubjpass(bound-38, he-36)
nsubj(restore-40, he-36)
auxpass(bound-38, was-37)
conj_but(bound-6, bound-38)
aux(restore-40, to-39)
xcomp(bound-38, restore-40)
dobj(restore-40, it-41)
det(price-44, the-43)
prep_at(restore-40, price-44)
nsubj(paid-47, he-45)
aux(paid-47, had-46)
rcmod(price-44, paid-47)
prep_for(paid-47, it-49)
mark(give-56, if-51)
det(owner-54, the-52)
amod(owner-54, former-53)
nsubj(give-56, owner-54)
aux(give-56, would-55)
advcl(bound-38, give-56)
dobj(give-56, it-57)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (NP (JJ bare) (NN justice)))
    (. !)))

nsubj(justice-4, This-1)
cop(justice-4, was-2)
amod(justice-4, bare-3)
root(ROOT-0, justice-4)

(ROOT
  (FRAG
    (NP (JJ mere) (NNS righteousness))
    (. !)))

amod(righteousness-2, mere-1)
root(ROOT-0, righteousness-2)

(ROOT
  (S
    (NP (DT No) (NN theft))
    (VP (MD could)
      (VP (VB make)
        (NP (DT the) (NN owner))
        (PP (RB not)
          (NP (DT the) (JJ rightful) (NN owner)))
        (, ,)
        (SBAR (IN though)
          (S
            (NP
              (NP (JJ other) (NNS claims))
              (PP (IN upon)
                (NP (DT the) (NN thing))))
            (VP (MD might)
              (VP (VB come)
                (PRT (RP in))))))))
    (. !)))

neg(theft-2, No-1)
nsubj(make-4, theft-2)
aux(make-4, could-3)
root(ROOT-0, make-4)
det(owner-6, the-5)
dobj(make-4, owner-6)
prep(make-4, not-7)
det(owner-10, the-8)
amod(owner-10, rightful-9)
dep(not-7, owner-10)
mark(come-19, though-12)
amod(claims-14, other-13)
nsubj(come-19, claims-14)
det(thing-17, the-16)
prep_upon(claims-14, thing-17)
aux(come-19, might-18)
advcl(make-4, come-19)
prt(come-19, in-20)

(ROOT
  (S
    (NP (PRP One))
    (VP (MD ought)
      (S (RB not)
        (VP (TO to)
          (VP (VB be)
            (VP (VBN enriched)
              (PP (IN by)
                (NP (DT another) (NNP 's) (NN misfortune))))))))
    (. !)))

nsubj(ought-2, One-1)
nsubjpass(enriched-6, One-1)
root(ROOT-0, ought-2)
neg(enriched-6, not-3)
aux(enriched-6, to-4)
auxpass(enriched-6, be-5)
xcomp(ought-2, enriched-6)
det(misfortune-10, another-8)
nn(misfortune-10, 's-9)
agent(enriched-6, misfortune-10)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD was)
      (ADJP (JJ sure)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (JJ noble))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN kingdom))
                  (PP (IN of)
                    (NP (NN heaven))))))
            (VP
              (VP (MD would) (RB not)
                (VP (VB wait)
                  (PP (IN for)
                    (NP (DT the) (NN money)))))
              (, ,)
              (CC but)
              (VP (MD would)
                (VP
                  (PP (IN with)
                    (NP (NN delight)))
                  (VB send)
                  (NP (DT the) (NN cup))))))))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP it))
          (VP (MD ought)
            (S
              (VP (TO to)
                (VP (VB have)
                  (VP (VBN been)
                    (NP (PDT all) (DT the) (NN time))))))))))
    (. !)))

nsubj(sure-3, Dawtie-1)
cop(sure-3, was-2)
root(ROOT-0, sure-3)
mark(wait-14, that-4)
det(noble-6, a-5)
nsubj(wait-14, noble-6)
nsubj(send-23, noble-6)
det(kingdom-9, the-8)
prep_of(noble-6, kingdom-9)
prep_of(kingdom-9, heaven-11)
aux(wait-14, would-12)
neg(wait-14, not-13)
ccomp(sure-3, wait-14)
det(money-17, the-16)
prep_for(wait-14, money-17)
aux(send-23, would-20)
prep_with(send-23, delight-22)
ccomp(sure-3, send-23)
conj_but(wait-14, send-23)
det(cup-25, the-24)
dobj(send-23, cup-25)
advmod(ought-28, where-26)
nsubj(ought-28, it-27)
nsubj(time-34, it-27)
advcl(sure-3, ought-28)
aux(time-34, to-29)
aux(time-34, have-30)
cop(time-34, been-31)
predet(time-34, all-32)
det(time-34, the-33)
xcomp(ought-28, time-34)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD knew)
        (ADVP (RBR better))
        (, ,)
        (ADVP (RB however))
        (, ,)
        (SBAR
          (SBAR (IN than)
            (S
              (VP (VBP require)
                (NP
                  (NP
                    (NP (NN magnificence))
                    (PP (IN in)
                      (NP
                        (NP (DT any) (NN shape))
                        (PP (IN from)
                          (NP
                            (NP (DT the) (JJ poor) (JJ wizened) (NN soul))
                            (PP (IN of)
                              (NP (PRP$ her) (NN master))))))))
                  (: --)
                  (NP
                    (NP (DT a) (NN man))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBD knew)
                          (NP
                            (NP (DT all))
                            (PP (IN about)
                              (NP (NN everything))))))))))))
          (, ,)
          (CC and)
          (SBAR
            (WHNP (WP whom))
            (S
              (ADVP (RB yet))
              (NP (PRP she))
              (VP
                (VP (MD could) (RB not))
                (CC but)
                (VP (VBP fear)
                  (S
                    (VP (TO to)
                      (ADVP (RB _))
                      (VP (VB be)
                        (NP (JJ _) (NN nothing))))))))))))
    (: :)
    (S
      (SBAR (IN as)
        (S
          (NP (NNP Dawtie))
          (VP (VBD had)
            (VP (VBN learned)
              (S
                (VP (TO to)
                  (VP (VB understand)
                    (NP (NN life)))))))))
      (, ,)
      (NP (DT the) (NN laird))
      (VP (VBD did) (RB not)
        (ADVP (RB yet))
        (VP (VB exist))))
    (. .)))

nsubj(knew-2, She-1)
root(ROOT-0, knew-2)
advmod(knew-2, better-3)
advmod(knew-2, however-5)
mark(require-8, than-7)
advcl(knew-2, require-8)
dobj(require-8, magnificence-9)
det(shape-12, any-11)
prep_in(magnificence-9, shape-12)
det(soul-17, the-14)
amod(soul-17, poor-15)
amod(soul-17, wizened-16)
prep_from(shape-12, soul-17)
poss(master-20, her-19)
prep_of(soul-17, master-20)
det(man-23, a-22)
dep(magnificence-9, man-23)
nsubj(knew-25, man-23)
rcmod(man-23, knew-25)
dobj(knew-25, all-26)
prep_about(all-26, everything-28)
dobj(could-34, whom-31)
advmod(could-34, yet-32)
nsubj(could-34, she-33)
nsubj(fear-37, she-33)
nsubj(nothing-42, she-33)
advcl(knew-2, could-34)
conj_and(require-8, could-34)
neg(could-34, not-35)
conj_and(require-8, fear-37)
conj_but(could-34, fear-37)
aux(nothing-42, to-38)
advmod(nothing-42, _-39)
cop(nothing-42, be-40)
amod(nothing-42, _-41)
xcomp(fear-37, nothing-42)
mark(learned-47, as-44)
nsubj(learned-47, Dawtie-45)
nsubj(understand-49, Dawtie-45)
aux(learned-47, had-46)
advcl(exist-57, learned-47)
aux(understand-49, to-48)
xcomp(learned-47, understand-49)
dobj(understand-49, life-50)
det(laird-53, the-52)
nsubj(exist-57, laird-53)
aux(exist-57, did-54)
neg(exist-57, not-55)
advmod(exist-57, yet-56)
parataxis(knew-2, exist-57)

(ROOT
  (S (CC But)
    (S
      (NP (PRP he))
      (ADVP (RB well))
      (VP (VBD knew)
        (ADVP (RB right)
          (PP (IN from)
            (ADJP (JJ wrong))))))
    (, ,)
    (ADVP (RB therefore))
    (S
      (NP
        (NP (DT the) (NN discovery))
        (SBAR
          (S
            (NP (PRP she))
            (ADVP (RB just))
            (VP (VBD made)))))
      (VP (VBD affected)
        (NP (PRP$ her) (NN duty))
        (PP (IN toward)
          (NP (PRP him)))))
    (. !)))

cc(knew-4, But-1)
nsubj(knew-4, he-2)
advmod(knew-4, well-3)
root(ROOT-0, knew-4)
advmod(knew-4, right-5)
prep_from(right-5, wrong-7)
advmod(affected-15, therefore-9)
det(discovery-11, the-10)
nsubj(affected-15, discovery-11)
nsubj(made-14, she-12)
advmod(made-14, just-13)
rcmod(discovery-11, made-14)
parataxis(knew-4, affected-15)
poss(duty-17, her-16)
dobj(affected-15, duty-17)
prep_toward(affected-15, him-19)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD might)
        (VP (VB be)
          (ADJP (JJ impossible)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP (NN impression))
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NNS miserliness))
                      (PP (IN of)
                        (NP (DT a) (NN miser))))))))))))
    (, ,)
    (CC but)
    (S
      (PP
        (PP (IN upon)
          (NP (DT the) (NN honesty)))
        (PP (IN in)
          (NP (DT a) (NN miser))))
      (NP (PRP it))
      (VP (MD might)
        (VP (VB be)
          (ADJP (JJ possible)))))
    (. !)))

nsubj(impossible-4, It-1)
nsubj(make-6, It-1)
aux(impossible-4, might-2)
cop(impossible-4, be-3)
root(ROOT-0, impossible-4)
aux(make-6, to-5)
xcomp(impossible-4, make-6)
dobj(make-6, impression-7)
det(miserliness-10, the-9)
prep_on(make-6, miserliness-10)
det(miser-13, a-12)
prep_of(miserliness-10, miser-13)
det(honesty-18, the-17)
prep_upon(possible-25, honesty-18)
det(miser-21, a-20)
prep_in(possible-25, miser-21)
nsubj(possible-25, it-22)
aux(possible-25, might-23)
cop(possible-25, be-24)
conj_but(impossible-4, possible-25)

(ROOT
  (S
    (NP (DT The) (NN goblet))
    (VP (VBD was) (RB not)
      (NP (PRP$ his)))
    (. !)))

det(goblet-2, The-1)
nsubj(his-5, goblet-2)
cop(his-5, was-3)
neg(his-5, not-4)
root(ROOT-0, his-5)

(ROOT
  (S (CC But)
    (S
      (NP
        (NP (DT the) (NN love))
        (PP (IN of)
          (NP (NNS things))))
      (VP (VBZ dulls)
        (NP (DT the) (NN conscience))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD might) (RB not)
        (VP (VB be)
          (ADJP (JJ able))
          (, ,)
          (S
            (VP (VBG having)
              (VP (VBN bought)
                (CC and)
                (VBN paid)
                (PP (IN for)
                  (NP (PRP it)))
                (, ,)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (SBAR (IN that)
                        (S
                          (NP (DT the) (NN thing))
                          (VP (VBD was) (RB not)
                            (VP
                              (ADVP (RB therefore))
                              (VBG _)
                              (NP (PRP$ his) (NN _)))))))))))))))
    (. !)))

det(love-3, the-2)
nsubj(dulls-6, love-3)
prep_of(love-3, things-5)
root(ROOT-0, dulls-6)
det(conscience-8, the-7)
dobj(dulls-6, conscience-8)
nsubj(able-15, he-11)
nsubj(bought-18, he-11)
nsubj(paid-20, he-11)
nsubj(see-25, he-11)
aux(able-15, might-12)
neg(able-15, not-13)
cop(able-15, be-14)
conj_and(dulls-6, able-15)
aux(bought-18, having-17)
xcomp(able-15, bought-18)
xcomp(able-15, paid-20)
conj_and(bought-18, paid-20)
prep_for(bought-18, it-22)
aux(see-25, to-24)
xcomp(bought-18, see-25)
mark(_-32, that-26)
det(thing-28, the-27)
nsubj(_-32, thing-28)
aux(_-32, was-29)
neg(_-32, not-30)
advmod(_-32, therefore-31)
ccomp(see-25, _-32)
poss(_-34, his-33)
dobj(_-32, _-34)

(ROOT
  (S
    (NP (PRP he))
    (VP (MD might)
      (VP (VB defend)
        (NP (PRP himself))
        (PP (IN from)
          (S
            (VP (VBG seeing)
              (NP (PRP it)))))))
    (. !)))

nsubj(defend-3, he-1)
aux(defend-3, might-2)
root(ROOT-0, defend-3)
dobj(defend-3, himself-4)
prepc_from(defend-3, seeing-6)
dobj(seeing-6, it-7)

(ROOT
  (S
    (PP (TO To)
      (NP (NNP Dawtie)))
    (, ,)
    (NP (DT this))
    (VP (VBD made)
      (NP
        (NP (DT the) (NN horror))
        (PP (IN of)
          (NP
            (NP (PRP$ his) (NN condition))
            (NP (DT the) (JJR darker))))))
    (. .)))

prep_to(made-5, Dawtie-2)
nsubj(made-5, this-4)
root(ROOT-0, made-5)
det(horror-7, the-6)
dobj(made-5, horror-7)
poss(condition-10, his-9)
prep_of(horror-7, condition-10)
det(darker-12, the-11)
dep(condition-10, darker-12)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP
              (NP (NNP God) (POS 's))
              (NNS babes))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (MD can) (RB not)
                  (VP (VB help)
                    (S
                      (VP (VBG seeing)
                        (NP
                          (NP (DT the) (JJ true) (NN state))
                          (PP (IN of)
                            (NP (NNS things))))))))))))))
    (. .)))

nsubj(one-3, She-1)
cop(one-3, was-2)
root(ROOT-0, one-3)
poss(babes-7, God-5)
prep_of(one-3, babes-7)
nsubj(help-12, babes-7)
aux(help-12, can-10)
neg(help-12, not-11)
rcmod(babes-7, help-12)
xcomp(help-12, seeing-13)
det(state-16, the-14)
amod(state-16, true-15)
dobj(seeing-13, state-16)
prep_of(state-16, things-18)

(ROOT
  (S
    (S
      (NP (NNP Logic))
      (VP (VBD was)
        (PP (TO to)
          (NP (PRP her)))
        (PP (CC but)
          (NP
            (NP (DT the) (NN smoke))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD rose)
                  (PP (IN from)
                    (NP (DT the) (VBG burning) (NN truth))))))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD saw)
        (NP
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (ADVP (RB altogether))
                (PP (IN above)
                  (CC and)
                  (IN beyond)
                  (NP (NN logic))))))
          (: --)
          (NP
            (NP (DT the) (JJ right) (NN thing))
            (, ,)
            (SBAR
              (WHNP (WP$ whose) (NNS meanest))
              (S
                (NP
                  (NP (NN servant))
                  (, ,)
                  (NP
                    (NP (DT the) (NN hewer))
                    (PP (IN of)
                      (NP (PRP$ its) (NN wood))))
                  (, ,)
                  (NP
                    (NP (RB not) (DT the) (NN drawer))
                    (PP (IN of)
                      (NP (PRP$ its) (NN water))))
                  (, ,)
                  (NP
                    (NP (DT the) (JJ merest) (NN scullion)
                      (CC and)
                      (NN sweeper))
                    (PP (RB away) (IN of)
                      (NP
                        (NP (NNS lies))
                        (PP (IN from)
                          (NP
                            (NP (DT the) (NN pavement))
                            (PP (IN of)
                              (NP (PRP$ its) (NNS courts))))))))
                  (, ,))
                (VP (VBZ is)
                  (NP (NN logic)))))))))
    (. .)))

nsubj(was-2, Logic-1)
root(ROOT-0, was-2)
prep_to(was-2, her-4)
prep(was-2, but-5)
det(smoke-7, the-6)
pobj(but-5, smoke-7)
nsubj(rose-9, smoke-7)
rcmod(smoke-7, rose-9)
det(truth-13, the-11)
amod(truth-13, burning-12)
prep_from(rose-9, truth-13)
nsubj(saw-16, she-15)
parataxis(was-2, saw-16)
nsubj(is-18, what-17)
nsubj(is-18', what-17)
conj_and(is-18, is-18')
dep(thing-27, is-18)
dep(thing-27, is-18')
advmod(is-18, altogether-19)
prep_above(is-18, logic-23)
prep_beyond(is-18', logic-23)
det(thing-27, the-25)
amod(thing-27, right-26)
dobj(saw-16, thing-27)
poss(meanest-30, thing-27)
dobj(logic-62, meanest-30)
nsubj(logic-62, servant-31)
det(hewer-34, the-33)
appos(servant-31, hewer-34)
poss(wood-37, its-36)
prep_of(hewer-34, wood-37)
neg(drawer-41, not-39)
det(drawer-41, the-40)
appos(servant-31, drawer-41)
poss(water-44, its-43)
prep_of(drawer-41, water-44)
det(scullion-48, the-46)
amod(scullion-48, merest-47)
appos(servant-31, scullion-48)
appos(servant-31, sweeper-50)
conj_and(scullion-48, sweeper-50)
advmod(scullion-48, away-51)
prep_of(scullion-48, lies-53)
det(pavement-56, the-55)
prep_from(lies-53, pavement-56)
poss(courts-59, its-58)
prep_of(pavement-56, courts-59)
cop(logic-62, is-61)
rcmod(thing-27, logic-62)

(ROOT
  (SINV
    (S
      (PP (IN With)
        (NP (DT a) (NN sigh)))
      (NP (PRP she))
      (VP (VBD woke)
        (PP (TO to)
          (NP (DT the) (NN knowledge)))
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBD was) (RB not)
              (VP
                (VP (VBG doing)
                  (NP (PRP$ her) (NN work)))
                (, ,)
                (CC and)
                (VP (VBG rousing)
                  (NP (PRP herself)))))))))
    (, ,)
    (VP (VBD was)
      (VP (IN about)
        (S
          (VP (TO to)
            (VP (VB put))))))
    (NP
      (NP (DT the) (NN book))
      (PP (IN on)
        (NP (PRP$ its) (NN shelf))))
    (. .)))

det(sigh-3, a-2)
prep_with(woke-5, sigh-3)
nsubj(woke-5, she-4)
ccomp(about-22, woke-5)
det(knowledge-8, the-7)
prep_to(woke-5, knowledge-8)
mark(doing-13, that-9)
nsubj(doing-13, she-10)
nsubj(rousing-18, she-10)
aux(doing-13, was-11)
neg(doing-13, not-12)
ccomp(woke-5, doing-13)
poss(work-15, her-14)
dobj(doing-13, work-15)
ccomp(woke-5, rousing-18)
conj_and(doing-13, rousing-18)
dobj(rousing-18, herself-19)
aux(about-22, was-21)
root(ROOT-0, about-22)
aux(put-24, to-23)
xcomp(about-22, put-24)
det(book-26, the-25)
nsubj(about-22, book-26)
nsubj(put-24, book-26)
poss(shelf-29, its-28)
prep_on(book-26, shelf-29)

(ROOT
  (S (CC But)
    (PRN (, ,)
      (S
        (NP (PRP$ her) (NN finger))
        (VP (VBG being)
          (PP
            (ADVP (RB still))
            (IN in)
            (NP (DT the) (NN place)))))
      (, ,))
    (NP (PRP she))
    (VP (MD would)
      (VP (VB have)
        (NP (CD one) (JJR more) (NN glance))
        (PP (IN at)
          (NP (DT the) (NN picture)))))
    (. !)))

cc(have-13, But-1)
poss(finger-4, her-3)
nsubj(being-5, finger-4)
parataxis(have-13, being-5)
advmod(being-5, still-6)
det(place-9, the-8)
prep_in(being-5, place-9)
nsubj(have-13, she-11)
aux(have-13, would-12)
root(ROOT-0, have-13)
num(glance-16, one-14)
amod(glance-16, more-15)
dobj(have-13, glance-16)
det(picture-19, the-18)
prep_at(have-13, picture-19)

(ROOT
  (S
    (PP
      (PP (TO To)
        (NP
          (NP (PRP$ her) (NN dismay))
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD saw)
                (SBAR (IN that)
                  (S
                    (NP (PRP she))
                    (VP (VBD had)
                      (VP (VBN made)
                        (NP
                          (NP (DT a) (NN mark))
                          (PP (IN on)
                            (NP (DT the) (NN plate)))))))))))))
      (, ,)
      (CC and)
      (PP (IN of)
        (NP
          (NP (DT the) (NN enormity))
          (PP (IN of)
            (S
              (VP (VBG making)
                (NP (DT a) (JJ dirty) (NN mark))
                (PP (IN on)
                  (NP (DT a) (NN book)))))))))
    (NP (PRP$ her) (NN master))
    (VP (VBD had)
      (VP (VBN made)
        (S
          (NP (PRP her))
          (ADJP (RB well) (JJ aware)))))
    (. .)))

poss(dismay-3, her-2)
mark(made-9, dismay-3)
prep_to(made-31, dismay-3)
nsubj(saw-5, she-4)
rcmod(dismay-3, saw-5)
nsubj(made-9, she-7)
aux(made-9, had-8)
ccomp(saw-5, made-9)
det(mark-11, a-10)
dobj(made-9, mark-11)
det(plate-14, the-13)
prep_on(mark-11, plate-14)
det(enormity-19, the-18)
prep_of(made-31', enormity-19)
prepc_of(enormity-19, making-21)
det(mark-24, a-22)
amod(mark-24, dirty-23)
dobj(making-21, mark-24)
det(book-27, a-26)
prep_on(making-21, book-27)
poss(master-29, her-28)
nsubj(made-31, master-29)
nsubj(made-31', master-29)
aux(made-31, had-30)
root(ROOT-0, made-31)
conj_and(made-31, made-31')
nsubj(aware-34, her-32)
advmod(aware-34, well-33)
xcomp(made-31, aware-34)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (PP (IN in)
        (NP (JJ great) (NN distress))))
    (. .)))

nsubj(was-2, She-1)
root(ROOT-0, was-2)
amod(distress-5, great-4)
prep_in(was-2, distress-5)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBD was)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN done)))))))
    (. ?)))

nsubj(was-2, What-1)
nsubjpass(done-5, What-1)
root(ROOT-0, was-2)
aux(done-5, to-3)
auxpass(done-5, be-4)
xcomp(was-2, done-5)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD did) (RB not)
      (ADVP (RB once))
      (VP (VB think)
        (PP (IN of)
          (S
            (VP
              (VP (VBG putting)
                (NP (PRP it))
                (PRT (RP away)))
              (CC and)
              (VP (VBG saying)
                (NP (NN nothing))))))))
    (. .)))

nsubj(think-5, She-1)
aux(think-5, did-2)
neg(think-5, not-3)
advmod(think-5, once-4)
root(ROOT-0, think-5)
prepc_of(think-5, putting-7)
dobj(putting-7, it-8)
prt(putting-7, away-9)
prepc_of(think-5, saying-11)
conj_and(putting-7, saying-11)
dobj(saying-11, nothing-12)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB have)
          (VP (VBD reasoned)
            (SBAR (IN that)
              (S
                (NP (PRP$ her) (NN master))
                (VP (MD would)
                  (ADVP (RB never))
                  (VP (VB know)))))))))
    (, ,)
    (VP (MD would)
      (VP (VB have)
        (VP (VBN been)
          (NP
            (NP (DT an) (NN argument))
            (, ,)
            (ADJP (JJ pressing)
              (CC and)
              (JJ imperative))
            (, ,)
            (PP (IN for)
              (S
                (VP (VBG informing)
                  (NP (PRP him))
                  (PP (IN at)
                    (NP (RB once))))))))))
    (. .)))

aux(reasoned-3, To-1)
aux(reasoned-3, have-2)
dep(argument-15, reasoned-3)
mark(know-9, that-4)
poss(master-6, her-5)
nsubj(know-9, master-6)
aux(know-9, would-7)
neg(know-9, never-8)
ccomp(reasoned-3, know-9)
aux(argument-15, would-11)
aux(argument-15, have-12)
cop(argument-15, been-13)
det(argument-15, an-14)
root(ROOT-0, argument-15)
amod(argument-15, pressing-17)
amod(argument-15, imperative-19)
conj_and(pressing-17, imperative-19)
prepc_for(argument-15, informing-22)
dobj(informing-22, him-23)
prep(informing-22, at-24)
pobj(at-24, once-25)

(ROOT
  (S
    (S
      (S
        (NP (PRP She))
        (VP (VBD had)
          (VP (VBN done)
            (S
              (NP (PRP him))
              (NP (DT an) (NN injury))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN injury))
        (VP
          (VP (MD must)
            (VP (VB be)
              (ADJP (JJ confessed))))
          (CC and)
          (VP (VBD lamented)))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT all))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was)
                (VP (VBN left)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN done))))))))))))
    (. !)))

nsubj(done-3, She-1)
aux(done-3, had-2)
root(ROOT-0, done-3)
nsubj(injury-6, him-4)
det(injury-6, an-5)
xcomp(done-3, injury-6)
det(injury-10, the-9)
nsubj(confessed-13, injury-10)
nsubj(lamented-15, injury-10)
aux(confessed-13, must-11)
cop(confessed-13, be-12)
conj_and(done-3, confessed-13)
conj_and(done-3, lamented-15)
conj_and(confessed-13, lamented-15)
nsubj(all-19, it-17)
cop(all-19, was-18)
parataxis(done-3, all-19)
nsubjpass(left-22, all-19)
nsubjpass(done-25, all-19)
auxpass(left-22, was-21)
rcmod(all-19, left-22)
aux(done-25, to-23)
auxpass(done-25, be-24)
xcomp(left-22, done-25)

(ROOT
  (S (`` ``)
    (VP (VB Sic)
      (NP (DT a) (NN mischance)))
    (. !) ('' '')))

root(ROOT-0, Sic-2)
det(mischance-4, a-3)
dobj(Sic-2, mischance-4)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said) (, ,)
      (S (RB then)
        (VP (VB bethought)
          (NP (PRP herself))
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBD was)
                (NP
                  (NP (DT no) (JJ such) (NN thing))
                  (PP (IN as)
                    (NP (NN mischance))))
                (, ,)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (ADVP (RB immediately))
                    (NP (PRP it))
                    (VP (VBD flashed)
                      (PP (IN upon)
                        (NP (PRP her)))
                      (SBAR (IN that)
                        (S
                          (NP (RB here))
                          (VP (VBD was)
                            (NP
                              (NP (DT the) (NN door))
                              (ADJP (JJ open)
                                (PP (IN for)
                                  (NP
                                    (NP (DT the))
                                    (VP (VBG doing)
                                      (PP (IN of)
                                        (SBAR
                                          (WHNP (WP what))
                                          (S
                                            (VP (VBD was)
                                              (VP (VBN required)
                                                (PP (IN of)
                                                  (NP (PRP her)))))))))))))))))))))))))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
advmod(bethought-5, then-4)
ccomp(said-2, bethought-5)
dobj(bethought-5, herself-6)
mark(was-9, that-7)
expl(was-9, there-8)
ccomp(bethought-5, was-9)
neg(thing-12, no-10)
amod(thing-12, such-11)
nsubj(was-9, thing-12)
prep_as(thing-12, mischance-14)
advmod(flashed-19, when-16)
advmod(flashed-19, immediately-17)
nsubj(flashed-19, it-18)
advcl(was-9, flashed-19)
prep_upon(flashed-19, her-21)
mark(door-26, that-22)
nsubj(door-26, here-23)
cop(door-26, was-24)
det(door-26, the-25)
ccomp(flashed-19, door-26)
amod(door-26, open-27)
prep_for(open-27, the-29)
vmod(the-29, doing-30)
nsubjpass(required-34, what-32)
auxpass(required-34, was-33)
prepc_of(doing-30, required-34)
prep_of(required-34, her-36)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (VP (VBN bound)
          (S
            (VP (TO to)
              (VP (VB confess)
                (NP (DT the) (JJ wrong))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (MD would)
        (VP (VB lead)
          (PP (IN in)
            (NP
              (NP (DT the) (NN disclosure))
              (PP (IN of)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP she))
                    (VP (VBD knew) (, ,)
                      (S
                        (VP (VBG rendering)
                          (S
                            (NP (PRP it))
                            (ADJP (RB comparatively) (JJ easy))
                            (S
                              (VP (TO to)
                                (VP (VB use)
                                  (NP (DT some) (NN remonstrance))
                                  (PP (IN with)
                                    (NP
                                      (NP (DT the) (NN laird))
                                      (, ,)
                                      (SBAR
                                        (WHNP (WP whom))
                                        (S
                                          (PP (IN in)
                                            (NP
                                              (NP (PRP$ her) (NN mind) (POS 's))
                                              (NN eye)))
                                          (NP (PRP she))
                                          (VP (VBD saw)
                                            (PP (IN like)
                                              (NP (DT a) (NN beggar) (NN man)))
                                            (S
                                              (VP (VBG tottering)
                                                (PRT (RP down))
                                                (NP (DT a) (JJ steep) (NN road))
                                                (PP (TO to)
                                                  (NP (DT a) (JJ sudden) (NN precipice)))))))))))))))))))))))))
    (. .)))

nsubjpass(bound-3, She-1)
nsubj(confess-5, She-1)
auxpass(bound-3, was-2)
root(ROOT-0, bound-3)
aux(confess-5, to-4)
xcomp(bound-3, confess-5)
det(wrong-7, the-6)
dobj(confess-5, wrong-7)
nsubj(lead-12, that-10)
aux(lead-12, would-11)
conj_and(bound-3, lead-12)
det(disclosure-15, the-14)
prep_in(lead-12, disclosure-15)
dobj(knew-19, what-17)
nsubj(knew-19, she-18)
prepc_of(disclosure-15, knew-19)
xcomp(knew-19, rendering-21)
nsubj(use-26, it-22)
advmod(easy-24, comparatively-23)
dep(use-26, easy-24)
aux(use-26, to-25)
xcomp(rendering-21, use-26)
det(remonstrance-28, some-27)
dobj(use-26, remonstrance-28)
det(laird-31, the-30)
prep_with(use-26, laird-31)
dobj(saw-40, laird-31)
poss(mind-36, her-35)
poss(eye-38, mind-36)
prep_in(saw-40, eye-38)
nsubj(saw-40, she-39)
rcmod(laird-31, saw-40)
det(man-44, a-42)
nn(man-44, beggar-43)
prep_like(saw-40, man-44)
xcomp(saw-40, tottering-45)
prt(tottering-45, down-46)
det(road-49, a-47)
amod(road-49, steep-48)
dobj(tottering-45, road-49)
det(precipice-53, a-51)
amod(precipice-53, sudden-52)
prep_to(tottering-45, precipice-53)

(ROOT
  (S
    (NP (PRP$ Her) (NN duty))
    (VP (VBD was)
      (ADVP (RB now))
      (ADJP (RB so) (JJ plain))
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (VBD felt)
            (NP (DT no) (NN desire)
              (S
                (VP (TO to)
                  (VP (VB consult)
                    (NP (NNP Andrew))))))))))
    (. .)))

poss(duty-2, Her-1)
nsubj(plain-6, duty-2)
cop(plain-6, was-3)
advmod(plain-6, now-4)
advmod(plain-6, so-5)
root(ROOT-0, plain-6)
mark(felt-9, that-7)
nsubj(felt-9, she-8)
ccomp(plain-6, felt-9)
neg(desire-11, no-10)
dobj(felt-9, desire-11)
aux(consult-13, to-12)
vmod(desire-11, consult-13)
dobj(consult-13, Andrew-14)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was) (RB not)
        (VP
          (NP (CD one))
          (S
            (VP (TO to)
              (VP (VB ask)
                (NP (DT an) (NN opinion))
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN sake))
                    (PP (IN of)
                      (S
                        (VP (VBG talking)
                          (NP (NN opinion)))))))))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD went)
        (PP (TO to)
          (NP (NNP Andrew)))
        (ADVP (RB only))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP she))
            (VP (VBD wanted)
              (ADJP (JJ light)
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (NP (DT the) (JJ right) (NN thing)))))))))))
    (: ;)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN light))
          (VP (VBD was)
            (PP (IN around)
              (NP (PRP her))))))
      (, ,)
      (NP (PRP she))
      (VP
        (VP (VBD knew)
          (SBAR
            (WHADVP (WRB how))
            (S
              (VP (TO to)
                (VP (VB walk))))))
        (, ,)
        (CC and)
        (VP (JJ troubled)
          (NP (DT no) (NN one)))))
    (. .)))

nsubj(one-4, She-1)
aux(one-4, was-2)
neg(one-4, not-3)
root(ROOT-0, one-4)
aux(ask-6, to-5)
vmod(one-4, ask-6)
det(opinion-8, an-7)
dobj(ask-6, opinion-8)
det(sake-11, the-10)
prep_for(ask-6, sake-11)
prepc_of(sake-11, talking-13)
dobj(talking-13, opinion-14)
nsubj(went-17, she-16)
parataxis(one-4, went-17)
prep_to(went-17, Andrew-19)
advmod(went-17, only-20)
advmod(wanted-23, when-21)
nsubj(wanted-23, she-22)
advcl(went-17, wanted-23)
acomp(wanted-23, light-24)
aux(do-26, to-25)
xcomp(light-24, do-26)
det(thing-29, the-27)
amod(thing-29, right-28)
dobj(do-26, thing-29)
advmod(was-34, when-31)
det(light-33, the-32)
nsubj(was-34, light-33)
advcl(knew-39, was-34)
prep_around(was-34, her-36)
nsubj(knew-39, she-38)
nsubj(walk-42, she-38)
nsubj(troubled-45, she-38)
parataxis(one-4, knew-39)
advmod(walk-42, how-40)
aux(walk-42, to-41)
ccomp(knew-39, walk-42)
xcomp(knew-39, walk-42)
parataxis(one-4, troubled-45)
conj_and(knew-39, troubled-45)
neg(one-47, no-46)
dobj(troubled-45, one-47)

(ROOT
  (S
    (ADVP (IN At) (RB once))
    (NP (PRP she))
    (VP
      (VP (VBD laid)
        (PRT (RP down))
        (NP (NN book)
          (CC and)
          (NN duster)))
      (, ,)
      (CC and)
      (VP (VBD went)
        (S
          (VP (TO to)
            (VP (VB find)
              (NP (DT the) (NN laird)))))))
    (. .)))

advmod(laid-4, At-1)
advmod(At-1, once-2)
nsubj(laid-4, she-3)
nsubj(went-11, she-3)
nsubj(find-13, she-3)
root(ROOT-0, laid-4)
prt(laid-4, down-5)
dobj(laid-4, book-6)
dobj(laid-4, duster-8)
conj_and(book-6, duster-8)
conj_and(laid-4, went-11)
aux(find-13, to-12)
xcomp(went-11, find-13)
det(laird-15, the-14)
dobj(find-13, laird-15)

(ROOT
  (S
    (S (CC But)
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN slipped)
          (PRT (RP away))
          (PP (TO to)
            (NP (DT the) (NN town)))
          (, ,)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (DT a) (NN rummage))
                  (PP (IN in)
                    (NP
                      (NP (DT a) (JJ certain) (JJ little) (NN shop))
                      (PP (IN in)
                        (NP
                          (NP (DT a) (JJ back) (NN street))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (NP (PRP he))
                              (VP (VBD had) (RB not)
                                (VP (VBN rummaged)
                                  (PP (IN for)
                                    (NP (DT a) (JJ long) (NN time) (NN enough))))))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD thought) (, ,)
      (S
        (VP (TO to)
          (VP (VB have)
            (S
              (VP (VB let)
                (NP
                  (NP (NN something))
                  (VP (VBN come)
                    (PP (IN in))))))))))
    (. .)))

cc(slipped-4, But-1)
nsubj(slipped-4, he-2)
nsubj(have-11, he-2)
aux(slipped-4, had-3)
ccomp(thought-36, slipped-4)
prt(slipped-4, away-5)
det(town-8, the-7)
prep_to(slipped-4, town-8)
aux(have-11, to-10)
xcomp(slipped-4, have-11)
det(rummage-13, a-12)
dobj(have-11, rummage-13)
det(shop-18, a-15)
amod(shop-18, certain-16)
amod(shop-18, little-17)
prep_in(rummage-13, shop-18)
det(street-22, a-20)
amod(street-22, back-21)
prep_in(shop-18, street-22)
dobj(rummaged-28, street-22)
nsubj(rummaged-28, he-25)
aux(rummaged-28, had-26)
neg(rummaged-28, not-27)
rcmod(street-22, rummaged-28)
det(enough-33, a-30)
amod(enough-33, long-31)
nn(enough-33, time-32)
prep_for(rummaged-28, enough-33)
nsubj(thought-36, he-35)
nsubj(have-39, he-35)
root(ROOT-0, thought-36)
aux(have-39, to-38)
xcomp(thought-36, have-39)
ccomp(have-39, let-40)
dobj(let-40, something-41)
vmod(something-41, come-42)
prep(come-42, in-43)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (DT no) (NN relief))
          (PP (TO to)
            (NP (NNP Dawtie))))))
    (: :)
    (S
      (NP (DT the) (NN thing))
      (VP (MD would)
        (VP (VB be)
          (NP (PDT all) (DT the) (NN day))
          (PP
            (PP (IN before)
              (NP (PRP her)))
            (CONJP (RB instead) (IN of))
            (PP (IN behind)
              (NP (PRP her)))))))
    (. !)))

nsubj(relief-4, It-1)
cop(relief-4, was-2)
neg(relief-4, no-3)
root(ROOT-0, relief-4)
prep_to(relief-4, Dawtie-6)
det(thing-9, the-8)
nsubj(day-14, thing-9)
aux(day-14, would-10)
cop(day-14, be-11)
predet(day-14, all-12)
det(day-14, the-13)
parataxis(relief-4, day-14)
parataxis(relief-4, day-14')
conj_negcc(day-14, day-14')
prep_before(day-14, her-16)
prep_behind(day-14', her-20)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD burned)
        (PP (IN within)
          (NP (PRP her)))
        (, ,)
        (PP (RB not)
          (PP (IN like)
            (NP (DT a) (NN sin)))
          (, ,)
          (CC but)
          (PP (IN like)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP it))
                (VP (VBD was))))))))
    (, ,)
    (NP (DT a) (NN confession))
    (VP (VBD unconfessed))
    (. .)))

nsubj(burned-2, It-1)
ccomp(unconfessed-19, burned-2)
prep_within(burned-2, her-4)
neg(burned-2, not-6)
det(sin-9, a-8)
prep_like(burned-2, sin-9)
dobj(was-15, what-13)
nsubj(was-15, it-14)
prep_like(burned-2, was-15)
conj_but(sin-9, was-15)
det(confession-18, a-17)
nsubj(unconfessed-19, confession-18)
root(ROOT-0, unconfessed-19)

(ROOT
  (S
    (S
      (ADJP
        (ADJP (RB Little) (JJ wrong))
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP (VBD had)
              (VP (VBN done)))))))
    (, ,)
    (NP (NNP Dawtie))
    (VP (VBD was)
      (ADVP (RB yet))
      (ADJP (JJ familiar)
        (PP (IN with)
          (NP
            (NP (DT the) (JJ lovely) (NN potency))
            (PP (IN of)
              (NP (NN confession))))))
      (S
        (VP (TO to)
          (VP (VB annihilate)
            (NP (PRP it))))))
    (. .)))

advmod(wrong-2, Little-1)
ccomp(familiar-11, wrong-2)
mark(done-6, as-3)
nsubj(done-6, she-4)
aux(done-6, had-5)
dep(wrong-2, done-6)
nsubj(familiar-11, Dawtie-8)
nsubj(annihilate-19, Dawtie-8)
cop(familiar-11, was-9)
advmod(familiar-11, yet-10)
root(ROOT-0, familiar-11)
det(potency-15, the-13)
amod(potency-15, lovely-14)
prep_with(familiar-11, potency-15)
prep_of(potency-15, confession-17)
aux(annihilate-19, to-18)
xcomp(familiar-11, annihilate-19)
dobj(annihilate-19, it-20)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD knew)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP
              (NP (DT the) (NN turning))
              (PP (IN from)
                (ADJP (JJ wrong)))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD killed)
                    (NP (PRP it))
                    (, ,)
                    (SBAR (IN that)
                      (S
                        (NP (NN confession))
                        (VP (VBD gave)
                          (NP (DT the) (NN _))
                          (NP
                            (NP (FW coup) (FW de) (NN grâce) (NN _))
                            (PP (TO to)
                              (NP (NN offense)))))))))))))))
    (. .)))

nsubj(knew-2, She-1)
root(ROOT-0, knew-2)
nsubj(turning-6, it-3)
cop(turning-6, was-4)
det(turning-6, the-5)
ccomp(knew-2, turning-6)
nsubj(killed-10, turning-6)
prep_from(turning-6, wrong-8)
rcmod(turning-6, killed-10)
dobj(killed-10, it-11)
mark(gave-15, that-13)
nsubj(gave-15, confession-14)
ccomp(killed-10, gave-15)
det(_-17, the-16)
iobj(gave-15, _-17)
nn(_-21, coup-18)
nn(_-21, de-19)
nn(_-21, grâce-20)
dobj(gave-15, _-21)
prep_to(_-21, offense-23)

(ROOT
  (S
    (S
      (ADVP (RB Still))
      (NP (PRP she))
      (VP (VBZ dreaded)
        (ADVP (RB not)
          (NP (DT a) (RB little)))
        (NP
          (NP (DT the) (NN displeasure))
          (PP (IN of)
            (NP (PRP$ her) (NN master))))))
    (, ,)
    (CC and)
    (ADVP (RB yet))
    (S
      (NP (PRP she))
      (ADJP (VBN dreaded)
        (PP (RBR more)
          (NP (PRP$ his) (NN distress)))))
    (. .)))

advmod(dreaded-3, Still-1)
nsubj(dreaded-3, she-2)
nsubj(dreaded-16, she-2)
root(ROOT-0, dreaded-3)
neg(dreaded-3, not-4)
det(little-6, a-5)
dep(not-4, little-6)
det(displeasure-8, the-7)
dobj(dreaded-3, displeasure-8)
poss(master-11, her-10)
prep_of(displeasure-8, master-11)
advmod(dreaded-16, yet-14)
dep(dreaded-16, she-15)
conj_and(dreaded-3, dreaded-16)
prep(dreaded-16, more-17)
poss(distress-19, his-18)
pobj(more-17, distress-19)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD prepared)
        (NP
          (NP (DT the) (NN laird) (POS 's))
          (NN supper))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ strange) (NN mingling))
            (PP (IN of)
              (NP (NN hope)
                (CC and)
                (NN anxiety)))))))
    (: :)
    (S
      (NP (PRP she))
      (VP (VBD feared)
        (S
          (VP (VBG having)
            (S
              (VP (TO to)
                (VP (VB go)
                  (PP (TO to)
                    (NP (NN bed)))
                  (PP (IN without)
                    (S
                      (VP (VBG telling)
                        (NP (PRP him))))))))))))
    (. .)))

nsubj(prepared-2, She-1)
root(ROOT-0, prepared-2)
det(laird-4, the-3)
poss(supper-6, laird-4)
dobj(prepared-2, supper-6)
det(mingling-10, a-8)
amod(mingling-10, strange-9)
prep_with(prepared-2, mingling-10)
prep_of(mingling-10, hope-12)
prep_of(mingling-10, anxiety-14)
conj_and(hope-12, anxiety-14)
nsubj(feared-17, she-16)
parataxis(prepared-2, feared-17)
xcomp(feared-17, having-18)
aux(go-20, to-19)
xcomp(having-18, go-20)
prep_to(go-20, bed-22)
prepc_without(go-20, telling-24)
dobj(telling-24, him-25)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD came)
      (PP (IN at)
        (NP (JJ last) (, ,) (RB almost) (NN merry) (, ,)))
      (PP (IN with)
        (NP (DT a) (JJ brown) (NN paper) (NN parcel)))
      (PP (IN under)
        (NP
          (NP (PRP$ his) (NN arm))
          (, ,)
          (SBAR
            (WHPP (IN over)
              (WHNP (WDT which)))
            (S
              (NP (PRP he))
              (VP (VBD was)
                (ADJP (RB very) (JJ careful))))))))
    (. .)))

cc(came-3, But-1)
nsubj(came-3, he-2)
root(ROOT-0, came-3)
amod(merry-8, last-5)
advmod(merry-8, almost-7)
prep_at(came-3, merry-8)
det(parcel-14, a-11)
amod(parcel-14, brown-12)
nn(parcel-14, paper-13)
prep_with(came-3, parcel-14)
poss(arm-17, his-16)
prep_under(came-3, arm-17)
prep_over(careful-24, arm-17)
nsubj(careful-24, he-21)
cop(careful-24, was-22)
advmod(careful-24, very-23)
rcmod(arm-17, careful-24)

(ROOT
  (S
    (S
      (INTJ (UH Poor) (UH man))
      (, ,)
      (NP (PRP he))
      (ADVP (RB little))
      (VP (VBD knew)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBD waited)
              (S
                (NP (PRP him)))
              (PP (IN at)
                (NP (DT the) (NN moment)))
              (NP
                (NP (DT a) (NN demand))
                (PP (IN from)
                  (NP (DT the) (JJ eternal) (NN justice))))
              (ADVP (RB almost)
                (PP (IN as)
                  (ADVP (VBD terrible) (RB as)))))))))
    (: :) (`` ``)
    (S
      (NP (DT This) (NN night))
      (NP (PRP they))
      (VP (VBP require)
        (NP
          (NP (PRP$ thy) (NN soul))
          (PP (IN of)
            (NP (PRP thee))))))
    (. !) ('' '')))

discourse(knew-6, Poor-1)
dep(Poor-1, man-2)
nsubj(knew-6, he-4)
advmod(knew-6, little-5)
root(ROOT-0, knew-6)
expl(waited-8, there-7)
ccomp(knew-6, waited-8)
dep(waited-8, him-9)
det(moment-12, the-11)
prep_at(waited-8, moment-12)
det(demand-14, a-13)
dobj(waited-8, demand-14)
nsubj(waited-8, demand-14)
det(justice-18, the-16)
amod(justice-18, eternal-17)
prep_from(demand-14, justice-18)
advmod(waited-8, almost-19)
prep(almost-19, as-20)
dep(as-22, terrible-21)
pcomp(as-20, as-22)
det(night-26, This-25)
tmod(require-28, night-26)
nsubj(require-28, they-27)
parataxis(knew-6, require-28)
poss(soul-30, thy-29)
dobj(require-28, soul-30)
prep_of(soul-30, thee-32)

(ROOT
  (S (: --)
    (S (-LRB- -LRB-)
      (NP (WP What))
      (NP (DT a))
      (VP (VBD _)
        (SBAR
          (S
            (NP (PRP they))
            (ADVP (RB _))
            (VP (VBZ is)
              (NP (DT that)))))))
    (. !)))

nsubj(_-5, What-3)
nsubj(_-5, a-4)
root(ROOT-0, _-5)
nsubj(that-9, they-6)
advmod(that-9, _-7)
cop(that-9, is-8)
ccomp(_-5, that-9)

(ROOT
  (SBAR
    (WHNP (WP Who))
    (S
      (VP (VBP are)
        (ADJP (JJ _))
        (PRN
          (NP
            (NP (PRP they))
            (NP (NNP _) (. ?)))
          (-RRB- -RRB-))))))

nsubj(_-3, Who-1)
cop(_-3, are-2)
root(ROOT-0, _-3)
dep(_-3, they-4)
dep(they-4, _-5)

(ROOT
  (S (: --)
    (NP
      (NP (DT The) (NN torture))
      (PP (IN of)
        (NP (DT the) (JJ moral) (NN rack))))
    (VP (VBD was)
      (ADJP (JJ ready)
        (PP (IN for)
          (NP (PRP him))))
      (PP (IN at)
        (NP
          (NP (DT the) (NNS hands))
          (PP (IN of)
            (NP (PRP$ his) (JJ innocent) (NN house-maid))))))
    (. !)))

det(torture-3, The-2)
nsubj(ready-9, torture-3)
det(rack-7, the-5)
amod(rack-7, moral-6)
prep_of(torture-3, rack-7)
cop(ready-9, was-8)
root(ROOT-0, ready-9)
prep_for(ready-9, him-11)
det(hands-14, the-13)
prep_at(ready-9, hands-14)
poss(house-maid-18, his-16)
amod(house-maid-18, innocent-17)
prep_of(hands-14, house-maid-18)

(ROOT
  (S
    (PP (IN In)
      (NP (DT no) (NN way) (NN can)))
    (NP (PRP one))
    (VP (VBP torture)
      (NP (DT another))
      (ADVP (RBR more) (IN than))
      (PP (IN by)
        (S
          (VP (VBG waking)
            (NP (NN conscience))
            (PP (IN against)
              (NP
                (NP (NN love))
                (, ,)
                (NP (NN passion))
                (, ,)
                (CC or)
                (NP (NN pride))))))))
    (. .)))

neg(can-4, no-2)
nn(can-4, way-3)
prep_in(torture-6, can-4)
nsubj(torture-6, one-5)
root(ROOT-0, torture-6)
dobj(torture-6, another-7)
advmod(than-9, more-8)
advmod(torture-6, than-9)
prepc_by(torture-6, waking-11)
dobj(waking-11, conscience-12)
prep_against(waking-11, love-14)
prep_against(waking-11, passion-16)
conj_or(love-14, passion-16)
prep_against(waking-11, pride-19)
conj_or(love-14, pride-19)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD laid)
        (NP (PRP$ his) (JJ little) (NN parcel))
        (PP
          (ADVP (RB carefully))
          (IN on)
          (NP (DT the) (NN supper-table))))
      (, ,)
      (VP (VBD said)
        (PP (RB rather)
          (NP (DT a) (JJR shorter) (NN grace)))
        (PP (IN than)
          (ADJP (JJ usual))))
      (, ,)
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB eat)
              (NP (PRP$ his) (NN porridge))))))
      (, ,)
      (VP (VBD praised)
        (NP (PRP it))
        (SBAR
          (SBAR (IN as)
            (S
              (S
                (ADJP (RB very) (JJ good)))
              (, ,)
              (VP (VBD spoke)
                (PP (IN of)
                  (NP (PRP$ his) (NN journey))))))
          (CC and)
          (SBAR
            (WHNP (WP whom))
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN seen)))))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADJP (RBR more) (JJ talkative)
          (PP (IN than)
            (NP
              (NP
                (NP (PRP$ his) (NN wont))
                (SBAR
                  (S
                    (NP (PRP He))
                    (VP (VBD informed)
                      (NP (NNP Alexa))
                      (, ,)
                      (ADVP (RB almost)
                        (PP (IN with)
                          (NP (NN jubilation))))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (PP (IN at)
                              (NP (NN length)))
                            (VP (VBN found)
                              (NP
                                (NP (DT an) (JJ old) (NN book))
                                (SBAR
                                  (S
                                    (NP (PRP he))
                                    (VP (VBD had)
                                      (VP (VBN been)
                                        (ADJP (JJ long)
                                          (PP (IN on)
                                            (NP (DT the) (NN watch))))
                                        (PP (IN for)))))))))))))))
              (: --)
              (NP
                (NP (DT a) (NN book))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBN treated)))))
              (, ,)
              (PP (IN in)
                (NP (JJ ancient) (JJ broad) (NNS Scots)))
              (, ,)
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS laws))
                  (PP (IN of)
                    (NP (NN verse)))))
              (, ,)
              (PP (IN in)
                (NP
                  (NP (JJ full))
                  (, ,) (RB even)
                  (NP (JJ exhaustive) (NN manner)))))))))
    (. .)))

nsubj(laid-2, He-1)
nsubj(said-11, He-1)
nsubj(began-19, He-1)
nsubj(eat-21, He-1)
nsubj(praised-25, He-1)
nsubj(talkative-44, He-1)
root(ROOT-0, laid-2)
poss(parcel-5, his-3)
amod(parcel-5, little-4)
dobj(laid-2, parcel-5)
advmod(laid-2, carefully-6)
det(supper-table-9, the-8)
prep_on(laid-2, supper-table-9)
conj_and(laid-2, said-11)
prep(said-11, rather-12)
det(grace-15, a-13)
amod(grace-15, shorter-14)
pobj(rather-12, grace-15)
prep_than(said-11, usual-17)
conj_and(laid-2, began-19)
aux(eat-21, to-20)
xcomp(began-19, eat-21)
poss(porridge-23, his-22)
dobj(eat-21, porridge-23)
conj_and(laid-2, praised-25)
dobj(praised-25, it-26)
mark(spoke-31, as-27)
advmod(good-29, very-28)
ccomp(spoke-31, good-29)
advcl(praised-25, spoke-31)
poss(journey-34, his-33)
prep_of(spoke-31, journey-34)
dobj(seen-39, whom-36)
nsubj(seen-39, he-37)
aux(seen-39, had-38)
advcl(praised-25, seen-39)
conj_and(spoke-31, seen-39)
cop(talkative-44, was-42)
advmod(talkative-44, more-43)
conj_and(laid-2, talkative-44)
poss(wont-47, his-46)
prep_than(talkative-44, wont-47)
mark(found-61, wont-47)
nsubj(informed-49, He-48)
rcmod(wont-47, informed-49)
dobj(informed-49, Alexa-50)
advmod(informed-49, almost-52)
prep_with(almost-52, jubilation-54)
nsubj(found-61, he-57)
aux(found-61, had-58)
prep_at(found-61, length-60)
ccomp(informed-49, found-61)
det(book-64, an-62)
amod(book-64, old-63)
dobj(found-61, book-64)
prep_for(long-68, book-64)
nsubj(long-68, he-65)
aux(long-68, had-66)
cop(long-68, been-67)
rcmod(book-64, long-68)
det(watch-71, the-70)
prep_on(long-68, watch-71)
det(book-75, a-74)
dep(wont-47, book-75)
nsubj(treated-77, book-75)
rcmod(book-75, treated-77)
amod(Scots-82, ancient-80)
amod(Scots-82, broad-81)
prep_in(wont-47, Scots-82)
det(laws-86, the-85)
prep_of(wont-47, laws-86)
prep_of(laws-86, verse-88)
prep_in(wont-47, full-91)
advmod(full-91, even-93)
amod(manner-95, exhaustive-94)
dep(full-91, manner-95)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD pulled)
      (NP (PRP it))
      (PP (IN from)
        (NP (PRP$ his) (NN pocket))))
    (. .)))

nsubj(pulled-2, He-1)
root(ROOT-0, pulled-2)
dobj(pulled-2, it-3)
poss(pocket-6, his-5)
prep_from(pulled-2, pocket-6)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ worth))
      (SBAR
        (QP (IN at) (JJS least) (CD ten) (NNS times))
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBD gave)
            (PP (IN for)
              (NP (PRP it)))))))
    (. !) ('' '')))

nsubj(worth-4, It-2)
cop(worth-4, is-3)
root(ROOT-0, worth-4)
quantmod(times-8, at-5)
mwe(at-5, least-6)
pobj(at-5, least-6)
number(times-8, ten-7)
dep(gave-11, times-8)
dobj(gave-11, what-9)
nsubj(gave-11, I-10)
ccomp(worth-4, gave-11)
prep_for(gave-11, it-13)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD wondered)
        (SBAR (IN whether)
          (S
            (NP (EX there))
            (VP (MD ought)
              (S (RB not)
                (VP (TO to)
                  (VP (VB have)
                    (VP (VBN been)
                      (NP
                        (NP (DT some) (NN division))
                        (PP (IN of)
                          (NP (DT the) (NN difference)))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (ADJP (JJ aware)
          (PP (IN of)
            (NP (DT no) (NN call)
              (S
                (VP (TO to)
                  (VP (VB speak)))))))))
    (. .)))

nsubj(wondered-2, Dawtie-1)
root(ROOT-0, wondered-2)
mark(ought-5, whether-3)
expl(ought-5, there-4)
ccomp(wondered-2, ought-5)
neg(division-11, not-6)
aux(division-11, to-7)
aux(division-11, have-8)
cop(division-11, been-9)
det(division-11, some-10)
xcomp(ought-5, division-11)
det(difference-14, the-13)
prep_of(division-11, difference-14)
nsubj(aware-19, she-17)
cop(aware-19, was-18)
conj_but(wondered-2, aware-19)
neg(call-22, no-21)
prep_of(aware-19, call-22)
aux(speak-24, to-23)
vmod(call-22, speak-24)

(ROOT
  (S
    (NP (CD One) (NN thing))
    (VP (VBD was)
      (ADJP (JJ enough)
        (PP (IN for)
          (NP (CD one))))
      (NP (NN night)))
    (. !)))

num(thing-2, One-1)
nsubj(enough-4, thing-2)
cop(enough-4, was-3)
root(ROOT-0, enough-4)
prep_for(enough-4, one-6)
tmod(enough-4, night-7)

(ROOT
  (SINV
    (ADVP (RB Then))
    (VP (VBD came))
    (NP (NNS prayers))
    (. .)))

advmod(came-2, Then-1)
root(ROOT-0, came-2)
nsubj(came-2, prayers-3)

(ROOT
  (S
    (NP (DT The) (JJ old) (NN man))
    (VP (VBP read)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (NNP David))
          (VP (VBD deceived)
            (NP (DT the) (NNPS Philistines))
            (, ,)
            (S
              (VP (VBG telling)
                (NP (PRP them))
                (PP
                  (ADVP
                    (NP (DT a) (NN falsehood))
                    (RB as))
                  (TO to)
                  (NP (PRP$ his) (NNS raids)))))))))
    (. .)))

det(man-3, The-1)
amod(man-3, old-2)
nsubj(read-4, man-3)
root(ROOT-0, read-4)
advmod(deceived-7, how-5)
nsubj(deceived-7, David-6)
ccomp(read-4, deceived-7)
det(Philistines-9, the-8)
dobj(deceived-7, Philistines-9)
vmod(deceived-7, telling-11)
dobj(telling-11, them-12)
det(falsehood-14, a-13)
npadvmod(telling-11, falsehood-14)
poss(raids-18, his-17)
prep_as_to(telling-11, raids-18)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD read)
      (NP (DT the) (NN narrative))
      (PP (IN with)
        (NP
          (NP (DT a) (NN solemnity))
          (PP (IN of)
            (NP (NN tone)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD would)
                (VP (VB have)
                  (VP (VBD graced)
                    (NP
                      (NP (DT the) (JJS most) (NNS righteous) (NN action))
                      (: :)
                      (SQ (VBD was)
                        (NP (PRP it))
                        (NP
                          (NP (RB not) (DT the) (NN deed))
                          (PP (IN of)
                            (NP (DT a) (NN man))))))
                    (PP (VBG according)
                      (PP (TO to)
                        (NP
                          (NP (NNP God) (POS 's))
                          (JJ own) (NN heart))))))))))))
    (. ?)))

nsubj(read-2, He-1)
root(ROOT-0, read-2)
det(narrative-4, the-3)
dobj(read-2, narrative-4)
det(solemnity-7, a-6)
prep_with(read-2, solemnity-7)
nsubj(graced-13, solemnity-7)
prep_of(solemnity-7, tone-9)
aux(graced-13, would-11)
aux(graced-13, have-12)
rcmod(solemnity-7, graced-13)
det(action-17, the-14)
amod(action-17, most-15)
nn(action-17, righteous-16)
dobj(graced-13, action-17)
cop(deed-23, was-19)
nsubj(deed-23, it-20)
neg(deed-23, not-21)
det(deed-23, the-22)
dep(action-17, deed-23)
det(man-26, a-25)
prep_of(deed-23, man-26)
prepc_according_to(graced-13, to-28)
poss(heart-32, God-29)
amod(heart-32, own-31)
pobj(graced-13, heart-32)

(ROOT
  (S (: --)
    (S
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (MD could))))
      (NP (PRP it))
      (VP (VBP be)
        (ADJP (JJ other)
          (PP (IN than)
            (NP (NN right))))))
    (. !)))

advmod(could-3, how-2)
advcl(other-6, could-3)
nsubj(other-6, it-4)
cop(other-6, be-5)
root(ROOT-0, other-6)
prep_than(other-6, right-8)

(ROOT
  (S
    (S
      (VP (VB Casuist)
        (NP
          (NP
            (QP (CD ten) (NNS times)))
          (NP (DT a) (NN week)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD made)
      (NP
        (NP (DT no) (NN question))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS righteousness))
            (PP (IN of)
              (NP
                (NP (NNP David) (POS 's))
                (NNS wickedness)))))))
    (. !)))

ccomp(made-8, Casuist-1)
number(times-3, ten-2)
dobj(Casuist-1, times-3)
det(week-5, a-4)
dep(times-3, week-5)
nsubj(made-8, he-7)
root(ROOT-0, made-8)
neg(question-10, no-9)
dobj(made-8, question-10)
det(righteousness-13, the-12)
prep_of(question-10, righteousness-13)
poss(wickedness-17, David-15)
prep_of(righteousness-13, wickedness-17)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD prayed) (, ,)
      (S
        (VP (VBG giving)
          (NP
            (NP (NNS thanks))
            (PP (IN for)
              (NP
                (NP (DT the) (NN mercy))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD had)
                      (VP (VBN surrounded)
                        (NP (PRP them))
                        (NP (PDT all) (DT the) (NN day))
                        (, ,)
                        (S
                          (VP (VBG shielding)
                            (NP (PRP them))
                            (PP (IN from)
                              (NP
                                (NP (DT the) (NN danger)
                                  (CC and)
                                  (NN death))
                                (SBAR
                                  (WHNP (WDT which))
                                  (S
                                    (VP (VBD lurked)
                                      (PP (IN for)
                                        (NP (PRP them)))
                                      (PP (IN in)
                                        (NP (DT every) (NN corner))))))))))))))))))))
    (. .)))

advmod(prayed-3, Then-1)
nsubj(prayed-3, he-2)
root(ROOT-0, prayed-3)
xcomp(prayed-3, giving-5)
dobj(giving-5, thanks-6)
det(mercy-9, the-8)
prep_for(thanks-6, mercy-9)
nsubj(surrounded-12, mercy-9)
aux(surrounded-12, had-11)
rcmod(mercy-9, surrounded-12)
dobj(surrounded-12, them-13)
predet(day-16, all-14)
det(day-16, the-15)
tmod(surrounded-12, day-16)
vmod(surrounded-12, shielding-18)
dobj(shielding-18, them-19)
det(danger-22, the-21)
prep_from(shielding-18, danger-22)
nsubj(lurked-26, danger-22)
prep_from(shielding-18, death-24)
conj_and(danger-22, death-24)
nsubj(lurked-26, death-24)
rcmod(danger-22, lurked-26)
prep_for(lurked-26, them-28)
det(corner-31, every-30)
prep_in(lurked-26, corner-31)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD would)
      (NP (PRP he))
      (VP (VB say)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NN death))
            (VP (VBD did)
              (VP (VB get)
                (NP (PRP him))))))))
    (. ?)))

dobj(say-4, What-1)
aux(say-4, would-2)
nsubj(say-4, he-3)
root(ROOT-0, say-4)
advmod(get-8, when-5)
nsubj(get-8, death-6)
aux(get-8, did-7)
advcl(say-4, get-8)
dobj(get-8, him-9)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD thought))
    (. .)))

nsubj(thought-2, Dawtie-1)
root(ROOT-0, thought-2)

(ROOT
  (SQ (MD Would)
    (NP (PRP he))
    (VP (VB thank)
      (NP (NNP God))
      (ADVP (RB then)))
    (. ?)))

aux(thank-3, Would-1)
nsubj(thank-3, he-2)
root(ROOT-0, thank-3)
dobj(thank-3, God-4)
advmod(thank-3, then-5)

(ROOT
  (SQ (CC And)
    (MD would)
    (NP (PRP he))
    (VP (VB see) (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP she))
          (VP (VBD spoke)
            (PP (TO to)
              (NP (PRP him))))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (NNP God))
          (VP (VBD wanted)
            (S
              (VP (TO to)
                (VP (VB deliver)
                  (NP (PRP him))
                  (PP (IN from)
                    (NP
                      (NP (DT a) (JJR worse) (NN danger))
                      (PP (IN than)
                        (NP (DT any) (NNS out-of-doors))))))))))))
    (. ?)))

cc(see-4, And-1)
aux(see-4, would-2)
nsubj(see-4, he-3)
root(ROOT-0, see-4)
advmod(spoke-8, when-6)
nsubj(spoke-8, she-7)
advcl(see-4, spoke-8)
prep_to(spoke-8, him-10)
mark(wanted-14, that-12)
nsubj(wanted-14, God-13)
nsubj(deliver-16, God-13)
ccomp(see-4, wanted-14)
aux(deliver-16, to-15)
xcomp(wanted-14, deliver-16)
dobj(deliver-16, him-17)
det(danger-21, a-19)
amod(danger-21, worse-20)
prep_from(deliver-16, danger-21)
det(out-of-doors-24, any-23)
prep_than(danger-21, out-of-doors-24)

(ROOT
  (SQ (MD Would)
    (NP (PRP he))
    (VP (VB see)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (PP (IN from)
              (NP
                (NP (JJ much) (NN mercy))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (VP (VBN made)
                        (S
                          (ADJP (RBR more) (JJ uncomfortable)
                            (PP (IN than)
                              (NP
                                (NP (RB perhaps) (RB ever))
                                (PP (IN in)
                                  (NP (PRP$ his) (NN life)))))))
                        (ADVP (RB before))))))))))))
    (. ?)))

aux(see-3, Would-1)
nsubj(see-3, he-2)
root(ROOT-0, see-3)
mark(was-6, that-4)
nsubj(was-6, it-5)
ccomp(see-3, was-6)
amod(mercy-9, much-8)
prep_from(was-6, mercy-9)
nsubjpass(made-12, he-10)
auxpass(made-12, was-11)
rcmod(mercy-9, made-12)
advmod(uncomfortable-14, more-13)
xcomp(made-12, uncomfortable-14)
prep(uncomfortable-14, than-15)
advmod(ever-17, perhaps-16)
pobj(than-15, ever-17)
poss(life-20, his-19)
prep_in(ever-17, life-20)
advmod(made-12, before-21)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (NP (PRP$ his) (NN offering))
    (VP
      (VP (VBD was)
        (VP (VBN completed)))
      (: --)
      (SBAR
        (WHADVP (WRB how) (RB far))
        (S
          (VP (VBD accepted)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (MD can)
                  (VP (VB tell)))))))))
    (. !)))

prep_at(completed-6, length-2)
poss(offering-4, his-3)
nsubjpass(completed-6, offering-4)
auxpass(completed-6, was-5)
root(ROOT-0, completed-6)
advmod(far-9, how-8)
advmod(accepted-10, far-9)
ccomp(completed-6, accepted-10)
parataxis(completed-6, accepted-10)
nsubj(tell-13, who-11)
aux(tell-13, can-12)
ccomp(accepted-10, tell-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (NP
        (NP
          (NP (NNP God))
          (VP (VBZ 's)))
        (, ,)
        (CC and)
        (NP
          (NP (PRP He))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD gave)
                (S
                  (NP (PRP him))
                  (VP (VBG being)
                    (VP (MD would)
                      (VP (VB be)
                        (NP (PRP$ his) (NN Father))
                        (PP (TO to)
                          (NP
                            (NP (DT the) (JJ full) (NN possibility))
                            (PP (IN of)
                              (NP (NNP God)))))))))))))))
    (. .)))

nsubj(God-3, He-1)
cop(God-3, was-2)
root(ROOT-0, God-3)
dep(God-3, 's-4)
conj_and(God-3, He-7)
nsubj(gave-9, He-7)
rcmod(He-7, gave-9)
nsubj(Father-15, him-10)
aux(Father-15, being-11)
aux(Father-15, would-12)
cop(Father-15, be-13)
poss(Father-15, his-14)
dep(gave-9, Father-15)
det(possibility-19, the-17)
amod(possibility-19, full-18)
prep_to(Father-15, possibility-19)
prep_of(possibility-19, God-21)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD rose)
        (PP (IN from)
          (NP (PRP$ their) (NNS knees)))))
    (: ;)
    (S
      (NP (DT the) (NN laird))
      (VP (VBD took)
        (PRT (RP up))
        (NP (PRP$ his) (NN parcel)
          (CC and)
          (NN book))))
    (: ;)
    (S
      (NP (PRP$ his) (NN daughter))
      (VP (VBD went)
        (PP (IN with)
          (NP (PRP him)))))
    (. .)))

nsubj(rose-2, They-1)
root(ROOT-0, rose-2)
poss(knees-5, their-4)
prep_from(rose-2, knees-5)
det(laird-8, the-7)
nsubj(took-9, laird-8)
parataxis(rose-2, took-9)
prt(took-9, up-10)
poss(parcel-12, his-11)
dobj(took-9, parcel-12)
dobj(took-9, book-14)
conj_and(parcel-12, book-14)
poss(daughter-17, his-16)
nsubj(went-18, daughter-17)
parataxis(rose-2, went-18)
prep_with(went-18, him-20)

(ROOT
  (NP (NNP CHAPTER) (NNP XVIII) (. .)))

nn(XVIII-2, CHAPTER-1)
root(ROOT-0, XVIII-2)

(ROOT
  (NP (NNP DAWTIE)
    (CC AND)
    (NNP THE) (NNP LAIRD) (. .)))

nn(LAIRD-4, DAWTIE-1)
conj_and(DAWTIE-1, THE-3)
nn(LAIRD-4, THE-3)
root(ROOT-0, LAIRD-4)

(ROOT
  (S
    (ADVP (RB As) (RB soon)
      (SBAR (IN as)
        (S
          (NP (NNP Dawtie))
          (VP (VBD heard)
            (NP
              (NP (PRP$ her) (NN mistress) (POS 's))
              (NN door) (NN close))))))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (VBD followed)
        (NP (PRP$ her) (NN master))
        (PP (TO to)
          (NP (DT the) (NN study))))
      (, ,)
      (CC and)
      (VP (VBD arrived)
        (SBAR (RB just) (IN as)
          (S
            (NP
              (NP (DT the) (NN door))
              (PP (IN of)
                (NP (DT the) (JJ hidden) (NN room))))
            (VP (VBD was)
              (VP (VBN shut)
                (PP (IN behind)
                  (NP (PRP him)))))))))
    (. .)))

advmod(soon-2, As-1)
advmod(followed-13, soon-2)
mark(heard-5, as-3)
nsubj(heard-5, Dawtie-4)
ccomp(soon-2, heard-5)
poss(mistress-7, her-6)
poss(close-10, mistress-7)
nn(close-10, door-9)
dobj(heard-5, close-10)
nsubj(followed-13, she-12)
nsubj(arrived-21, she-12)
root(ROOT-0, followed-13)
poss(master-15, her-14)
dobj(followed-13, master-15)
det(study-18, the-17)
prep_to(followed-13, study-18)
conj_and(followed-13, arrived-21)
advmod(shut-31, just-22)
mark(shut-31, as-23)
det(door-25, the-24)
nsubjpass(shut-31, door-25)
det(room-29, the-27)
amod(room-29, hidden-28)
prep_of(door-25, room-29)
auxpass(shut-31, was-30)
advcl(arrived-21, shut-31)
prep_behind(shut-31, him-33)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was) (RB not)
      (NP (DT a) (NN moment)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN lost)))))))
    (. !)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(was-2, not-3)
det(moment-5, a-4)
nsubj(was-2, moment-5)
aux(lost-8, to-6)
auxpass(lost-8, be-7)
vmod(moment-5, lost-8)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD went)
        (ADVP (RB straight))
        (PP (TO to)
          (NP (PRP it))))
      (, ,)
      (CC and)
      (VP (VBD knocked)
        (PP (RB rather)
          (ADJP (JJ loud)))))
    (. .)))

nsubj(went-2, She-1)
nsubj(knocked-8, She-1)
root(ROOT-0, went-2)
advmod(went-2, straight-3)
prep_to(went-2, it-5)
conj_and(went-2, knocked-8)
prep(knocked-8, rather-9)
pobj(rather-9, loud-10)

(ROOT
  (S
    (NP (DT No) (NN answer))
    (VP (VBD came))
    (. .)))

neg(answer-2, No-1)
nsubj(came-3, answer-2)
root(ROOT-0, came-3)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD knocked)
      (ADVP (RB again)))
    (. .)))

nsubj(knocked-2, She-1)
root(ROOT-0, knocked-2)
advmod(knocked-2, again-3)

(ROOT
  (S
    (ADVP (RB Still))
    (NP (EX there))
    (VP (VBD was)
      (NP (DT no) (NN answer)))
    (. .)))

advmod(was-3, Still-1)
expl(was-3, there-2)
root(ROOT-0, was-3)
neg(answer-5, no-4)
nsubj(was-3, answer-5)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD knocked)
        (NP (DT a) (JJ third) (NN time))))
    (, ,)
    (CC and)
    (S
      (S
        (PP (IN after)
          (NP
            (NP (DT a) (JJ little) (NN fumbling))
            (PP (IN with)
              (NP (DT the) (NN lock)))))
        (, ,)
        (NP (DT the) (NN door))
        (VP (VBD opened)
          (NP (DT a) (NN chink))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (DT a)
            (ADJP (JJ ghastly))
            (NN face))
          (, ,)
          (VP (VBN bedewed)
            (PP (IN with)
              (NP
                (NP (NNS drops))
                (PP (IN of)
                  (NP (NN terror))))))
          (, ,))
        (VP (VBD peeped)
          (PRT (RP through)))))
    (. .)))

nsubj(knocked-2, She-1)
root(ROOT-0, knocked-2)
det(time-5, a-3)
amod(time-5, third-4)
dobj(knocked-2, time-5)
det(fumbling-11, a-9)
amod(fumbling-11, little-10)
prep_after(opened-18, fumbling-11)
det(lock-14, the-13)
prep_with(fumbling-11, lock-14)
det(door-17, the-16)
nsubj(opened-18, door-17)
conj_and(knocked-2, opened-18)
det(chink-20, a-19)
dobj(opened-18, chink-20)
det(face-25, a-23)
amod(face-25, ghastly-24)
nsubj(peeped-33, face-25)
vmod(face-25, bedewed-27)
prep_with(bedewed-27, drops-29)
prep_of(drops-29, terror-31)
conj_and(knocked-2, peeped-33)
conj_and(opened-18, peeped-33)
prt(peeped-33, through-34)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (VP (VBG standing)
          (NP (DT a) (JJ little) (NN back)))))
    (, ,)
    (CC and)
    (S
      (S
        (S
          (NP (DT the) (NNS eyes))
          (VP (VBD did) (RB not)
            (ADVP (IN at) (RB once))
            (VP (VB find)
              (NP
                (NP (DT the) (NN object))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBD sought))))))))
        (: ;) (RB then)
        (S
          (ADVP (RB suddenly))
          (ADJP
            (ADJP
              (NP (PRP they))
              (JJ lighted))
            (PP (IN on)
              (NP (PRP her))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN laird))
        (VP (VBD shook)
          (PP (IN from)
            (NP (NN head)))
          (PP (TO to)
            (NP (NN foot))))))
    (. .)))

nsubj(standing-3, She-1)
aux(standing-3, was-2)
root(ROOT-0, standing-3)
det(back-6, a-4)
amod(back-6, little-5)
dobj(standing-3, back-6)
det(eyes-10, the-9)
nsubj(find-15, eyes-10)
aux(find-15, did-11)
neg(find-15, not-12)
advmod(find-15, at-13)
advmod(at-13, once-14)
conj_and(standing-3, find-15)
det(object-17, the-16)
dobj(find-15, object-17)
nsubj(sought-19, they-18)
rcmod(object-17, sought-19)
advmod(find-15, then-21)
advmod(lighted-24, suddenly-22)
npadvmod(lighted-24, they-23)
parataxis(find-15, lighted-24)
prep_on(lighted-24, her-26)
det(laird-30, the-29)
nsubj(shook-31, laird-30)
conj_and(standing-3, shook-31)
conj_and(find-15, shook-31)
prep_from(shook-31, head-33)
prep_to(shook-31, foot-35)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (, ,)
        (NP (NNP Dawtie))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
nsubj(What-2, it-4)
appos(it-4, Dawtie-6)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD faltered)
      (PRT (RP out))
      (PP (IN in)
        (NP (DT a) (JJ broken) (NN voice))))
    (. .)))

nsubj(faltered-2, he-1)
root(ROOT-0, faltered-2)
prt(faltered-2, out-3)
det(voice-7, a-5)
amod(voice-7, broken-6)
prep_in(faltered-2, voice-7)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Please))
      (, ,)
      (NP (NN sir)))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD answered))
        (NP (NNP Dawtie))))
    (, ,) (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (NN something))
        (PP (TO to)
          (NP
            (NP (NNS confess))
            (: :)
            (SQ (MD would)
              (NP (PRP ye))
              (VP (VB hearken)
                (PP (TO to)
                  (NP (PRP me)))))))))
    (. ?) ('' '')))

discourse(sir-4, Please-2)
dep(have-12, sir-4)
parataxis(have-12, answered-7)
nsubj(answered-7, Dawtie-8)
nsubj(have-12, I-11)
root(ROOT-0, have-12)
dobj(have-12, something-13)
prep_to(something-13, confess-15)
aux(hearken-19, would-17)
nsubj(hearken-19, ye-18)
dep(confess-15, hearken-19)
prep_to(hearken-19, me-21)

(ROOT
  (FRAG
    (INTJ
      (INTJ (`` ``) (UH No))
      (, ,)
      (INTJ (UH no)))
    (, ,)
    (NP (NNP Dawtie))
    (. !)))

discourse(Dawtie-6, No-2)
discourse(No-2, no-4)
root(ROOT-0, Dawtie-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP have)
              (NP (NN nothing))
              (PP (TO to)
                (NP (NNS confess))))))))
    (. !) ('' '')))

nsubj(sure-3, I-1)
cop(sure-3, am-2)
root(ROOT-0, sure-3)
nsubj(have-5, you-4)
ccomp(sure-3, have-5)
dobj(have-5, nothing-6)
prep_to(have-5, confess-8)

(ROOT
  (S
    (VP (VBN returned)
      (NP
        (NP (DT the) (JJ old) (NN man))
        (, ,)
        (ADJP (JJ eager)
          (S
            (VP
              (VP (TO to)
                (VP (VB send)
                  (NP (PRP her))
                  (ADVP (RB away))))
              (, ,)
              (CC and)
              (VP (TO to)
                (VP (VB prevent)
                  (NP (PRP her))
                  (PP (IN from)
                    (S
                      (VP (VBG seeing)
                        (NP
                          (NP (DT the) (NN importance))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN room))
                              (SBAR
                                (WHNP (WP$ whose) (NNS entrance))
                                (S
                                  (NP (PRP she))
                                  (VP (VBD had)
                                    (VP (VBN discovered))))))))))))))))))
    (. .)))

root(ROOT-0, returned-1)
det(man-4, the-2)
amod(man-4, old-3)
dobj(returned-1, man-4)
amod(man-4, eager-6)
aux(send-8, to-7)
dep(eager-6, send-8)
dobj(send-8, her-9)
advmod(send-8, away-10)
aux(prevent-14, to-13)
dep(eager-6, prevent-14)
conj_and(send-8, prevent-14)
dobj(prevent-14, her-15)
prepc_from(prevent-14, seeing-17)
det(importance-19, the-18)
dobj(seeing-17, importance-19)
det(room-22, the-21)
prep_of(importance-19, room-22)
poss(entrance-24, room-22)
dobj(discovered-27, entrance-24)
nsubj(discovered-27, she-25)
aux(discovered-27, had-26)
rcmod(room-22, discovered-27)

(ROOT
  (S (`` ``)
    (CC Or)
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD went)
          (PRT (RP on))
          (, ,)
          (S
            (VP (VBG finding)
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (VBD did) (RB not)
                    (VP (VB move))))))))))
    (, ,) (`` ``)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (VP (VBN done)
            (NP (NN anything))))))
    (, ,)
    (NP
      (NP (NNP Dawtie))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD ought)
            (S (RB not)
              (VP (TO to)
                (VP (VB have)
                  (VP (VBN done))))))))
      (, ,))
    (VP (VBZ confess)
      (NP (PRP it))
      (PP (TO to)
        (NP (NNP God))))
    (. .)))

cc(confess-32, Or-2)
nsubj(went-6, he-5)
parataxis(confess-32, went-6)
prt(went-6, on-7)
xcomp(went-6, finding-9)
nsubj(move-13, she-10)
aux(move-13, did-11)
neg(move-13, not-12)
ccomp(finding-9, move-13)
mark(done-19, if-16)
nsubj(done-19, you-17)
aux(done-19, have-18)
advcl(confess-32, done-19)
dobj(done-19, anything-20)
nsubj(confess-32, Dawtie-22)
mark(ought-26, that-24)
nsubj(ought-26, you-25)
nsubj(done-30, you-25)
dep(Dawtie-22, ought-26)
neg(done-30, not-27)
aux(done-30, to-28)
aux(done-30, have-29)
xcomp(ought-26, done-30)
root(ROOT-0, confess-32)
dobj(confess-32, it-33)
prep_to(confess-32, God-35)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB Him)
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD must)
                  (VP (VB confess) (, ,)
                    (ADVP (RB not)
                      (PP (TO to)
                        (NP (DT a) (JJ poor) (NN mortal))))
                    (PP (IN like)
                      (NP (PRP me)))))))))))
    (. !)))

nsubj(is-2, It-1)
nsubj(Him-4, It-1)
root(ROOT-0, is-2)
aux(Him-4, to-3)
xcomp(is-2, Him-4)
nsubj(confess-7, you-5)
aux(confess-7, must-6)
ccomp(Him-4, confess-7)
neg(confess-7, not-9)
det(mortal-13, a-11)
amod(mortal-13, poor-12)
prep_to(not-9, mortal-13)
prep_like(confess-7, me-15)

(ROOT
  (S
    (PP (IN For)
      (NP (PRP$ my) (NN part)))
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBZ lies)
            (PP (TO to)
              (NP (PRP me))))))
      (, ,)
      (NP (PRP I))
      (VP (VB forgive)
        (NP (PRP you))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT an) (NN end))))
    (. !)))

poss(part-3, my-2)
prep_for(forgive-12, part-3)
mark(lies-7, if-5)
nsubj(lies-7, it-6)
advcl(forgive-12, lies-7)
prep_to(lies-7, me-9)
nsubj(forgive-12, I-11)
root(ROOT-0, forgive-12)
dobj(forgive-12, you-13)
expl(is-17, there-16)
conj_and(forgive-12, is-17)
det(end-19, an-18)
nsubj(is-17, end-19)

(ROOT
  (S
    (VP (VB Go)
      (PP (TO to)
        (NP
          (NP (PRP$ your) (NN bed))
          (, ,)
          (NP (NNP Dawtie)))))
    (. .) ('' '')))

root(ROOT-0, Go-1)
poss(bed-4, your-3)
prep_to(Go-1, bed-4)
appos(bed-4, Dawtie-6)

(ROOT
  (S
    (INTJ (`` ``) (UH Please))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (PRP I))
    (VP (VBZ canna))
    (. .)))

discourse(canna-7, Please-2)
advmod(canna-7, sir-4)
nsubj(canna-7, I-6)
root(ROOT-0, canna-7)

(ROOT
  (S
    (S
      (NP (NNP Gien) (NNP ye) (NNP winna))
      (VP (VBP hear)
        (VP (VB til)
          (NP (PRP me)))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB sit)
        (NP
          (NP (NN doon))
          (PP (IN at)
            (NP (DT the) (NN door) (NN o)))
          ('' ')
          (NP
            (NP (DT this) (NN room))
            (, ,)
            (CC and)
            (NP (NNP sit) (NNP till)))
          (: --))
        ('' '')
        (NP (`` ``)
          (NP (WP What) (NN room))
          (, ,)
          (NP (NNP Dawtie)))))
    (. ?)))

nn(winna-3, Gien-1)
nn(winna-3, ye-2)
nsubj(hear-4, winna-3)
ccomp(sit-10, hear-4)
xcomp(hear-4, til-5)
dobj(til-5, me-6)
nsubj(sit-10, I-8)
aux(sit-10, 'll-9)
root(ROOT-0, sit-10)
dobj(sit-10, doon-11)
det(o-15, the-13)
nn(o-15, door-14)
prep_at(doon-11, o-15)
det(room-18, this-17)
dep(doon-11, room-18)
nn(till-22, sit-21)
dep(doon-11, till-22)
conj_and(room-18, till-22)
det(room-27, What-26)
dobj(sit-10, room-27)
appos(room-27, Dawtie-29)

(ROOT
  (SQ
    (VP (VB Call)
      (S
        (NP (PRP you))
        (NP
          (NP (DT this))
          (NP (DT a) (NN room)))))
    (. ?)))

root(ROOT-0, Call-1)
nsubj(this-3, you-2)
xcomp(Call-1, this-3)
det(room-5, a-4)
dep(this-3, room-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN wee) (NN bit) (NN closet))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP I))
            (VP (VBP say)
              (NP (PRP$ my) (NNS prayers))
              (SBAR (IN before)
                (S
                  (NP (PRP I))
                  (VP (VBP go)
                    (PP (TO to)
                      (NP (NN bed)))))))))))
    (. .) ('' '')))

nsubj(closet-6, It-1)
cop(closet-6, 's-2)
det(closet-6, a-3)
nn(closet-6, wee-4)
nn(closet-6, bit-5)
root(ROOT-0, closet-6)
advmod(say-9, where-7)
nsubj(say-9, I-8)
rcmod(closet-6, say-9)
poss(prayers-11, my-10)
dobj(say-9, prayers-11)
mark(go-14, before-12)
nsubj(go-14, I-13)
advcl(say-9, go-14)
prep_to(go-14, bed-16)

(ROOT
  (S (CC But)
    (SBAR (IN as)
      (S
        (NP (PRP he))
        (VP (VBD spoke)
          (SBAR
            (S
              (NP (PRP$ his) (NN blood))
              (VP (VBD ran)
                (ADVP (NN cold))
                (PP (IN within)
                  (NP (PRP him)))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBD uttered)
                        (NP
                          (NP (DT a)
                            (ADJP (JJ deliberate))
                            (NN lie))
                          (: --)
                          (NP
                            (NP (CD two) (NNS lies))
                            (PP (IN in)
                              (NP (CD one) (NN breath))))
                          (: :))))))))))))
    (S
      (NP (DT the) (NN bit) (NN closet))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJS largest) (NN room))
          (PP (IN in)
            (NP (DT the) (NN house))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RB never))
        (VP (VBN prayed)
          (NP
            (NP (DT a) (NN prayer))
            (PP (IN in)
              (NP (PRP it))))
          (SBAR (IN since)
            (S
              (ADVP (RB first))
              (NP (PRP he))
              (VP (VBD entered)
                (NP (PRP it))))))))
    (. !)))

mark(spoke-4, as-2)
nsubj(spoke-4, he-3)
advcl(room-32, spoke-4)
poss(blood-6, his-5)
nsubj(ran-7, blood-6)
ccomp(spoke-4, ran-7)
advmod(ran-7, cold-8)
prep_within(ran-7, him-10)
mark(uttered-15, for-12)
nsubj(uttered-15, he-13)
aux(uttered-15, had-14)
advcl(ran-7, uttered-15)
det(lie-18, a-16)
amod(lie-18, deliberate-17)
dobj(uttered-15, lie-18)
num(lies-21, two-20)
dep(lie-18, lies-21)
num(breath-24, one-23)
prep_in(lies-21, breath-24)
det(closet-28, the-26)
nn(closet-28, bit-27)
nsubj(room-32, closet-28)
cop(room-32, was-29)
det(room-32, the-30)
amod(room-32, largest-31)
root(ROOT-0, room-32)
det(house-35, the-34)
prep_in(room-32, house-35)
nsubj(prayed-41, he-38)
aux(prayed-41, had-39)
neg(prayed-41, never-40)
conj_and(room-32, prayed-41)
det(prayer-43, a-42)
dobj(prayed-41, prayer-43)
prep_in(prayer-43, it-45)
mark(entered-49, since-46)
advmod(entered-49, first-47)
nsubj(entered-49, he-48)
advcl(prayed-41, entered-49)
dobj(entered-49, it-50)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (RB unspeakably) (JJ distressed)
        (PP (IN at)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN done) (, ,)
                  (SBAR (IN for)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (ADVP (RB always))
                        (VP (VBN cherished)
                          (NP (DT the) (NN idea))
                          (SBAR (IN that)
                            (S
                              (NP (PRP he))
                              (VP (VBD was)
                                (NP
                                  (NP (CD one))
                                  (SBAR
                                    (WHNP (WP who))
                                    (S
                                      (VP (MD would) (RB not)
                                        (VP (VB lie)
                                          (S
                                            (VP (TO to)
                                              (VP (VB save)
                                                (NP (PRP$ his) (NN life))))))))))))))))))))))))
    (. .)))

nsubj(distressed-4, He-1)
cop(distressed-4, was-2)
advmod(distressed-4, unspeakably-3)
root(ROOT-0, distressed-4)
dobj(done-9, what-6)
nsubj(done-9, he-7)
aux(done-9, had-8)
prepc_at(distressed-4, done-9)
mark(cherished-15, for-11)
nsubj(cherished-15, he-12)
aux(cherished-15, had-13)
advmod(cherished-15, always-14)
advcl(done-9, cherished-15)
det(idea-17, the-16)
dobj(cherished-15, idea-17)
mark(one-21, that-18)
nsubj(one-21, he-19)
cop(one-21, was-20)
ccomp(cherished-15, one-21)
nsubj(lie-25, one-21)
nsubj(save-27, one-21)
aux(lie-25, would-23)
neg(lie-25, not-24)
rcmod(one-21, lie-25)
aux(save-27, to-26)
xcomp(lie-25, save-27)
poss(life-29, his-28)
dobj(save-27, life-29)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (PP (IN in)
      (NP (PRP$ his) (JJ old) (NN age)))
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBD lied)
        (SBAR
          (WHNP (WP who))
          (S
            (PRN
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (DT a) (NN boy))
                  (VP (VBD had)))))
            (VP (VB honor)
              (ADJP (JJ enough)
                (S
                  (VP (TO to)
                    (VP (VB keep)
                      (NP (PRP him))
                      (PP (IN from)
                        (S
                          (VP (VBG lying)))))))))))))
    (. !)))

cc(lied-9, And-1)
advmod(lied-9, now-2)
poss(age-6, his-4)
amod(age-6, old-5)
prep_in(lied-9, age-6)
nsubj(lied-9, he-7)
aux(lied-9, had-8)
root(ROOT-0, lied-9)
nsubj(honor-15, who-10)
advmod(had-14, when-11)
det(boy-13, a-12)
nsubj(had-14, boy-13)
parataxis(honor-15, had-14)
ccomp(lied-9, honor-15)
acomp(honor-15, enough-16)
aux(keep-18, to-17)
xcomp(enough-16, keep-18)
dobj(keep-18, him-19)
prepc_from(keep-18, lying-21)

(ROOT
  (S
    (NP
      (NP (JJS Worst))
      (PP (IN of)
        (NP (DT all))))
    (, ,)
    (ADVP (RB now)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBD lied))))))
    (, ,)
    (NP (PRP he))
    (VP (MD must)
      (VP (VB hold)
        (PP (TO to)
          (NP (DT the) (NN lie)))))
    (. !)))

nsubj(hold-13, Worst-1)
prep_of(Worst-1, all-3)
advmod(lied-9, now-5)
mark(lied-9, that-6)
nsubj(lied-9, he-7)
aux(lied-9, had-8)
advcl(hold-13, lied-9)
nsubj(hold-13, he-11)
aux(hold-13, must-12)
root(ROOT-0, hold-13)
det(lie-16, the-15)
prep_to(hold-13, lie-16)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB _))
    (VP (VBD dared)
      (SBAR
        (S
          (NP (NNP _))
          (RB not)
          (VP (VBZ confess)
            (NP (PRP it))))))
    (. !)))

nsubj(dared-3, He-1)
advmod(dared-3, _-2)
root(ROOT-0, dared-3)
nsubj(confess-6, _-4)
neg(confess-6, not-5)
ccomp(dared-3, confess-6)
dobj(confess-6, it-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD stood)
      (ADJP (JJ sick)
        (CC and)
        (JJ trembling)))
    (. .)))

nsubj(stood-2, He-1)
root(ROOT-0, stood-2)
acomp(stood-2, sick-3)
acomp(stood-2, trembling-5)
conj_and(sick-3, trembling-5)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB wait) (, ,)
          (ADVP (RB sir)))))
    (, ,) ('' '')
    (VP (VBD said)
      (ADJP
        (ADJP (JJ Dawtie))
        (, ,)
        (ADJP (JJ distressed)
          (PP (IN at)
            (NP (PRP$ his) (NN suffering))))
        (, ,)
        (CC and)
        (ADJP (RBR more) (JJ distressed)))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB lie)
              (SBAR
                (WHNP (WP who))
                (S
                  (ADVP (RB never))
                  (VP (VBD forgot)))))))))
    (NP (PRP$ his) (NNS prayers))
    (. !)))

nsubj(wait-4, I-2)
aux(wait-4, 'll-3)
ccomp(said-9, wait-4)
advmod(wait-4, sir-6)
root(ROOT-0, said-9)
acomp(said-9, Dawtie-10)
acomp(said-9, distressed-12)
conj_and(Dawtie-10, distressed-12)
poss(suffering-15, his-14)
prep_at(distressed-12, suffering-15)
advmod(distressed-19, more-18)
acomp(said-9, distressed-19)
conj_and(Dawtie-10, distressed-19)
mark(lie-23, that-20)
nsubj(lie-23, he-21)
aux(lie-23, could-22)
ccomp(said-9, lie-23)
nsubj(forgot-26, who-24)
neg(forgot-26, never-25)
ccomp(lie-23, forgot-26)
poss(prayers-28, his-27)
dep(said-9, prayers-28)

(ROOT
  (S
    (ADVP (RB Alas))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (ADVP (RBR further) (RB down))
      (NP (DT the) (JJ wrong) (NN road))
      (SBAR (IN than)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN supposed))))))
    (. !)))

advmod(road-9, Alas-1)
nsubj(road-9, he-3)
cop(road-9, was-4)
advmod(down-6, further-5)
advmod(road-9, down-6)
det(road-9, the-7)
amod(road-9, wrong-8)
root(ROOT-0, road-9)
mark(supposed-13, than-10)
nsubj(supposed-13, she-11)
aux(supposed-13, had-12)
advcl(road-9, supposed-13)

(ROOT
  (S
    (S
      (VP (VBN Ashamed)
        (PP
          (PP (IN for)
            (NP (PRP$ his) (NN sake)))
          (, ,)
          (CC and)
          (ADVP (RB also))
          (PP (IN for)
            (NP (PRP$ her) (JJ own))))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB look)
              (NP (PRP him))
              (PP (IN in)
                (NP (DT the) (NN face)))))
          (: --)
          (SBAR (IN for)
            (S
              (VP (VBD did)
                (S
                  (NP (PRP he))
                  (RB not)
                  (VP (VB imagine)
                    (NP (PRP she))))))))))
    (VP (VBD believed)
      (NP (PRP him))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (PRP she))
          (VP (VBD knew)
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (VBD lied))))))))
    (. ?)))

csubj(believed-25, Ashamed-1)
poss(sake-4, his-3)
prep_for(Ashamed-1, sake-4)
advmod(Ashamed-1, also-7)
poss(own-10, her-9)
prep_for(Ashamed-1, own-10)
conj_and(sake-4, own-10)
aux(look-13, to-12)
xcomp(Ashamed-1, look-13)
dobj(look-13, him-14)
det(face-17, the-16)
prep_in(look-13, face-17)
mark(did-20, for-19)
parataxis(look-13, did-20)
nsubj(imagine-23, he-21)
neg(imagine-23, not-22)
ccomp(did-20, imagine-23)
dobj(imagine-23, she-24)
root(ROOT-0, believed-25)
dobj(believed-25, him-26)
mark(knew-30, while-28)
nsubj(knew-30, she-29)
advcl(believed-25, knew-30)
mark(lied-33, that-31)
nsubj(lied-33, he-32)
ccomp(knew-30, lied-33)

(ROOT
  (S (: --)
    (NP (PRP she))
    (VP (VBD turned)
      (NP (PRP$ her) (NN back))
      (PP (IN on)
        (NP (PRP him))))
    (. .)))

nsubj(turned-3, she-2)
root(ROOT-0, turned-3)
poss(back-5, her-4)
dobj(turned-3, back-5)
prep_on(turned-3, him-7)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD caught)
        (PP (IN at)
          (NP (PRP$ his) (NN advantage))))
      (, ,)
      (VP (VBD glided)
        (PRT (RP out)))
      (, ,)
      (CC and)
      (VP (VBD closed)
        (NP (DT the) (NN door))
        (PP (IN behind)
          (NP (PRP him)))))
    (. .)))

nsubj(caught-2, He-1)
nsubj(glided-7, He-1)
nsubj(closed-11, He-1)
root(ROOT-0, caught-2)
poss(advantage-5, his-4)
prep_at(caught-2, advantage-5)
conj_and(caught-2, glided-7)
prt(glided-7, out-8)
conj_and(caught-2, closed-11)
det(door-13, the-12)
dobj(closed-11, door-13)
prep_behind(closed-11, him-15)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP Dawtie))
        (ADVP (RB again))
        (VP (VBD turned))))
    (, ,)
    (NP (PRP she))
    (VP (VBD saw)
      (NP (PRP him))
      (PP (IN in)
        (NP (PRP$ her) (NN power))))
    (. .)))

advmod(turned-4, When-1)
nsubj(turned-4, Dawtie-2)
advmod(turned-4, again-3)
advcl(saw-7, turned-4)
nsubj(saw-7, she-6)
root(ROOT-0, saw-7)
dobj(saw-7, him-8)
poss(power-11, her-10)
prep_in(saw-7, power-11)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NN trial))
      (VP (VBD was)
        (VP (VBN come))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB speak)
              (PP (IN for)
                (NP (NN life)
                  (CC or)
                  (NN death))))))))
    (. !)))

poss(trial-2, Her-1)
nsubjpass(come-4, trial-2)
auxpass(come-4, was-3)
root(ROOT-0, come-4)
nsubj(had-7, she-6)
nsubj(speak-9, she-6)
parataxis(come-4, had-7)
aux(speak-9, to-8)
xcomp(had-7, speak-9)
prep_for(speak-9, life-11)
prep_for(speak-9, death-13)
conj_or(life-11, death-13)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (VP (VBD remembered)
      (SBAR (IN that)
        (S
          (NP (DT the) (NNP Lord))
          (VP (VBD told)
            (NP (PRP$ His) (NNS disciples))
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP
                    (NP (DT no) (NN care))
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (PRP they))
                        (VP (MD should)
                          (VP (VB speak)))))
                    (: ;)
                    (PP (IN for)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (DT the) (NN time))
                          (VP (VBD came)
                            (SBAR
                              (S
                                (NP (PRP it))
                                (VP (MD would)
                                  (VP (VB be)
                                    (VP (VBN given)
                                      (S
                                        (NP (PRP them))
                                        (VP (TO to)
                                          (VP (VB speak)))))))))))))))))))))
    (. .)))

cc(remembered-3, But-1)
nsubj(remembered-3, she-2)
root(ROOT-0, remembered-3)
mark(told-7, that-4)
det(Lord-6, the-5)
nsubj(told-7, Lord-6)
ccomp(remembered-3, told-7)
poss(disciples-9, His-8)
dobj(told-7, disciples-9)
nsubj(take-11, disciples-9)
aux(take-11, to-10)
xcomp(told-7, take-11)
neg(care-13, no-12)
dobj(take-11, care-13)
advmod(speak-17, how-14)
nsubj(speak-17, they-15)
aux(speak-17, should-16)
dep(care-13, speak-17)
advmod(came-23, when-20)
det(time-22, the-21)
nsubj(came-23, time-22)
prepc_for(care-13, came-23)
nsubjpass(given-27, it-24)
aux(given-27, would-25)
auxpass(given-27, be-26)
ccomp(came-23, given-27)
dobj(given-27, them-28)
nsubj(speak-30, them-28)
aux(speak-30, to-29)
xcomp(given-27, speak-30)

(ROOT
  (S (IN So)
    (NP (PRP she))
    (VP (VBD began)
      (PP (IN by)
        (S
          (ADVP (RB simply))
          (VP (VBG laying)
            (PRT (RP down))
            (NP
              (NP (DT the) (NN thing))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD was)
                    (PP (IN in)
                      (NP (PRP$ her) (NN hand)))))))))))
    (. .)))

dep(began-3, So-1)
nsubj(began-3, she-2)
root(ROOT-0, began-3)
advmod(laying-6, simply-5)
prepc_by(began-3, laying-6)
prt(laying-6, down-7)
det(thing-9, the-8)
dobj(laying-6, thing-9)
nsubj(was-11, thing-9)
rcmod(thing-9, was-11)
poss(hand-14, her-13)
prep_in(was-11, hand-14)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Sir))
      (PRN (, ,) ('' '')
        (S
          (NP (PRP she))
          (VP (VBD said)))
        (, ,) (`` ``))
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (RB very) (JJ sorry))))
    (, ,)
    (CC but)
    (S
      (NP (DT this) (NN morning))
      (NP (PRP I))
      (VP (VBD made)
        (NP (DT a) (JJ dirty) (NN mark))
        (PP (IN in)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (PRP$ your) (NNS books)))))))
    (. !) ('' '')))

nsubj(sorry-12, Sir-2)
nsubj(said-6, she-5)
parataxis(sorry-12, said-6)
nsubj(sorry-12, I-9)
cop(sorry-12, am-10)
advmod(sorry-12, very-11)
root(ROOT-0, sorry-12)
det(morning-16, this-15)
tmod(made-18, morning-16)
nsubj(made-18, I-17)
conj_but(sorry-12, made-18)
det(mark-21, a-19)
amod(mark-21, dirty-20)
dobj(made-18, mark-21)
prep_in(made-18, one-23)
poss(books-26, your-25)
prep_of(one-23, books-26)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NNS words))
      (VP (VBZ alarmed)
        (NP (PRP him))
        (NP (DT a) (JJ little))))
    (, ,)
    (CC and)
    (S
      (VP (VBN made)
        (S
          (NP (PRP him))
          (VP (VB forget)
            (PP (IN for)
              (NP (DT the) (NN instant))
              (NP (PRP$ his)
                (ADJP (RBR more) (JJ important))
                (NNS fears)))))))
    (. .)))

poss(words-2, Her-1)
nsubj(alarmed-3, words-2)
nsubj(made-9, words-2)
root(ROOT-0, alarmed-3)
iobj(alarmed-3, him-4)
det(little-6, a-5)
dobj(alarmed-3, little-6)
conj_and(alarmed-3, made-9)
nsubj(forget-11, him-10)
ccomp(made-9, forget-11)
det(instant-14, the-13)
prep_for(forget-11, instant-14)
poss(fears-18, his-15)
advmod(important-17, more-16)
amod(fears-18, important-17)
dep(forget-11, fears-18)

(ROOT
  (S
    (S (CC But)
      (NP (PRP he))
      (VP (VBD took)
        (NP (NN care))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ gentle)
                (PP (IN with)
                  (NP (PRP her)))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (MD would) (RB not)
        (VP (VB do)
          (S
            (VP (TO to)
              (VP (VB offend)
                (NP (PRP her))))))))
    (. !)))

cc(took-3, But-1)
nsubj(took-3, he-2)
root(ROOT-0, took-3)
dobj(took-3, care-4)
aux(gentle-7, to-5)
cop(gentle-7, be-6)
vmod(took-3, gentle-7)
prep_with(gentle-7, her-9)
nsubj(do-14, it-11)
nsubj(offend-16, it-11)
aux(do-14, would-12)
neg(do-14, not-13)
parataxis(took-3, do-14)
aux(offend-16, to-15)
xcomp(do-14, offend-16)
dobj(offend-16, her-17)

(ROOT
  (FRAG
    (SBAR (IN for)
      (SINV (VBD was)
        (NP (PRP she))
        (ADJP
          (ADJP (RB not) (JJ aware))
          (SBAR (IN that)
            (S
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP they))
                  (VP (VBD stood))))
              (VP (VBD was)
                (NP
                  (NP (DT a) (NN door))
                  (SBAR
                    (WHPP (IN by)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP he))
                      (VP (VBD went)
                        (PRT (RP in)
                          (CC and)
                          (RP out))))))))))))
    (. ?)))

dep(aware-5, for-1)
cop(aware-5, was-2)
nsubj(aware-5, she-3)
neg(aware-5, not-4)
root(ROOT-0, aware-5)
mark(door-12, that-6)
advmod(stood-9, where-7)
nsubj(stood-9, they-8)
advcl(door-12, stood-9)
csubj(door-12, stood-9)
cop(door-12, was-10)
det(door-12, a-11)
ccomp(aware-5, door-12)
prep_by(went-16, door-12)
nsubj(went-16, he-15)
rcmod(door-12, went-16)
prt(went-16, in-17)
cc(in-17, and-18)
dep(in-17, out-19)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP make)
      (S
        (NP (PRP me))
        (ADJP (JJ uneasy)))
      (, ,)
      (S
        (NP (NNP Dawtie))))
    (. !) ('' '')))

nsubj(make-3, You-2)
root(ROOT-0, make-3)
nsubj(uneasy-5, me-4)
xcomp(make-3, uneasy-5)
dep(make-3, Dawtie-7)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WDT What) (NN book))
    (SQ (VBD was)
      (NP (PRP it)))
    (. ?)))

det(book-3, What-2)
dep(was-4, book-3)
root(ROOT-0, was-4)
nsubj(was-4, it-5)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP me))
        (VP (VB see)
          (NP (PRP it)))))
    (. .) ('' '')))

root(ROOT-0, Let-1)
nsubj(see-3, me-2)
ccomp(Let-1, see-3)
dobj(see-3, it-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD will)))
    (, ,)
    (ADVP (RB sir))
    (. .) ('' '')))

nsubj(will-3, I-2)
root(ROOT-0, will-3)
advmod(will-3, sir-5)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD turned)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (PRP it))
              (PRT (RP down)))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN laird))
      (VP (VBD followed)
        (NP (PRP her))
        (, ,)
        (S
          (VP (VBG saying) (: :) (`` ``)
            (S
              (VP (VBG Point)
                (NP (PRP it))
                (PRT (RP out))
                (PP (TO to)
                  (NP
                    (NP (PRP me))
                    (, ,)
                    (NP (NNP Dawtie))))))))))
    (. .)))

nsubj(turned-2, She-1)
nsubj(take-4, She-1)
root(ROOT-0, turned-2)
aux(take-4, to-3)
xcomp(turned-2, take-4)
dobj(take-4, it-5)
prt(take-4, down-6)
det(laird-10, the-9)
nsubj(followed-11, laird-10)
conj_but(turned-2, followed-11)
dobj(followed-11, her-12)
vmod(followed-11, saying-14)
dep(saying-14, Point-17)
dobj(Point-17, it-18)
prt(Point-17, out-19)
prep_to(Point-17, me-21)
appos(me-21, Dawtie-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB get)
        (NP (PRP it))))
    (. .) ('' '')))

nsubj(get-3, I-1)
aux(get-3, will-2)
root(ROOT-0, get-3)
dobj(get-3, it-4)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD did)
      (ADVP (RB so)))
    (. .)))

nsubj(did-2, She-1)
root(ROOT-0, did-2)
advmod(did-2, so-3)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD opened)
      (PP (IN at)
        (NP (DT the) (NN plate))))
    (. .)))

nsubj(opened-2, It-1)
root(ROOT-0, opened-2)
det(plate-5, the-4)
prep_at(opened-2, plate-5)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT the) (NN mark)))
    (. !) ('' '')))

expl(is-3, There-2)
root(ROOT-0, is-3)
det(mark-5, the-4)
nsubj(is-3, mark-5)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (RB right) (JJ sorry)))
    (. .) ('' '')))

nsubj(sorry-5, I-2)
cop(sorry-5, am-3)
advmod(sorry-5, right-4)
root(ROOT-0, sorry-5)

(ROOT
  (S (`` ``) (RB So)
    (VP (VBP am)
      (NP (PRP I)))
    (. !) ('' '')))

advmod(I-4, So-2)
cop(I-4, am-3)
root(ROOT-0, I-4)

(ROOT
  (S
    (VP (VBN returned)
      (NP (DT the) (NN laird)))
    (. .)))

root(ROOT-0, returned-1)
det(laird-3, the-2)
dobj(returned-1, laird-3)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD added) (, ,)
      (S
        (ADJP (JJ willing))
        (SBAR
          (S
            (S
              (NP (PRP she))
              (VP (MD should)
                (VP (VB feel)
                  (NP (PRP$ his) (NN clemency)))))
            (, ,)
            (CC and)
            (S
              (S
                (S
                  (VP (VBG knowing)
                    (SBAR
                      (S
                        (NP (DT the) (NN book))
                        (VP (VBD was) (RB not)
                          (NP (DT a) (JJ rare) (NN one)))))))
                (, ,) (`` ``)
                (NP (PRP it))
                (VP (VBZ is)
                  (NP (DT a) (NN book))
                  (ADVP (RB still))))
              (, ,)
              (CC and)
              (S
                (NP (PRP you))
                (VP (MD will)
                  (VP (VB be)
                    (ADJP (RBR more) (JJ careful))
                    (NP (DT another) (NN time))))))))))
    (. !)))

cc(added-6, But-2)
nsubj(added-6, he-5)
root(ROOT-0, added-6)
dep(feel-11, willing-8)
nsubj(feel-11, she-9)
aux(feel-11, should-10)
dep(added-6, feel-11)
poss(clemency-13, his-12)
dobj(feel-11, clemency-13)
dep(book-29, knowing-16)
det(book-18, the-17)
nsubj(one-23, book-18)
cop(one-23, was-19)
neg(one-23, not-20)
det(one-23, a-21)
amod(one-23, rare-22)
ccomp(knowing-16, one-23)
nsubj(book-29, it-26)
cop(book-29, is-27)
det(book-29, a-28)
dep(added-6, book-29)
conj_and(feel-11, book-29)
advmod(book-29, still-30)
nsubj(careful-37, you-33)
aux(careful-37, will-34)
cop(careful-37, be-35)
advmod(careful-37, more-36)
conj_and(feel-11, careful-37)
conj_and(book-29, careful-37)
det(time-39, another-38)
dep(careful-37, time-39)

(ROOT
  (S (IN For)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB remember) (, ,) (VB Dawtie) (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB come)
                (PP (IN into)
                  (NP (DT this) (NN room)
                    (S
                      (VP
                        (VP (TO to)
                          (VP (VB read)
                            (NP (DT the) (NNS books))))
                        (, ,)
                        (CC but)
                        (VP (TO to)
                          (VP (VB dust)
                            (NP (PRP them))))))))))))))
    (. .)))

dep(remember-4, For-1)
nsubj(remember-4, you-2)
aux(remember-4, must-3)
root(ROOT-0, remember-4)
dep(remember-4, Dawtie-6)
mark(come-12, that-8)
nsubj(come-12, you-9)
aux(come-12, do-10)
neg(come-12, n't-11)
ccomp(remember-4, come-12)
det(room-15, this-14)
prep_into(come-12, room-15)
aux(read-17, to-16)
dep(room-15, read-17)
det(books-19, the-18)
dobj(read-17, books-19)
aux(dust-23, to-22)
dep(room-15, dust-23)
conj_but(read-17, dust-23)
dobj(dust-23, them-24)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB go)
          (PP (TO to)
            (NP (NN bed)))
          (PP
            (ADVP (RB now))
            (IN with)
            (NP (DT an) (JJ easy) (NN mind))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP hope))
    (. !) ('' '')))

nsubj(go-3, You-1)
aux(go-3, can-2)
ccomp(hope-13, go-3)
prep_to(go-3, bed-5)
advmod(go-3, now-6)
det(mind-10, an-8)
amod(mind-10, easy-9)
prep_with(go-3, mind-10)
nsubj(hope-13, I-12)
root(ROOT-0, hope-13)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD was)
        (ADVP (RB so))
        (VP (VBN touched)
          (PP (IN by)
            (NP
              (NP (DT the) (NN kindness)
                (CC and)
                (NN forbearance))
              (PP (IN of)
                (NP (PRP$ her) (NN master)))))
          (SBAR (IN that)
            (S
              (NP (DT the) (NNS tears))
              (VP (VBD rose)
                (PP (IN in)
                  (NP (PRP$ her) (NNS eyes)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD felt)
        (VP (VBN strengthened)
          (PP (IN for)
            (NP (PRP$ her) (NN task))))))
    (. .)))

nsubjpass(touched-4, Dawtie-1)
auxpass(touched-4, was-2)
advmod(touched-4, so-3)
root(ROOT-0, touched-4)
det(kindness-7, the-6)
agent(touched-4, kindness-7)
agent(touched-4, forbearance-9)
conj_and(kindness-7, forbearance-9)
poss(master-12, her-11)
prep_of(kindness-7, master-12)
mark(rose-16, that-13)
det(tears-15, the-14)
nsubj(rose-16, tears-15)
ccomp(touched-4, rose-16)
poss(eyes-19, her-18)
prep_in(rose-16, eyes-19)
nsubj(felt-23, she-22)
conj_and(touched-4, felt-23)
dep(felt-23, strengthened-24)
poss(task-27, her-26)
prep_for(strengthened-24, task-27)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD would)
      (NP (PRP she))
      (VP (RB not) (VB have)
        (VP (VBN encountered)
          (PP (IN for)
            (NP (PRP$ his) (NN deliverance)))))
      (. !))))

dobj(encountered-6, What-1)
aux(encountered-6, would-2)
nsubj(encountered-6, she-3)
neg(encountered-6, not-4)
aux(encountered-6, have-5)
root(ROOT-0, encountered-6)
poss(deliverance-9, his-8)
prep_for(encountered-6, deliverance-9)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Please))
      (, ,)
      (NP (NN sir)))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP she))
        (VP (VBD said))))
    (, ,) (`` ``)
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP show)
            (NP (PRP you))
            (NP
              (NP (DT a) (NN thing))
              (SBAR
                (S
                  (NP (PRP you))
                  (ADVP (RB never))
                  (VP
                    (ADVP (RB perhaps))
                    (VBD happened)
                    (S
                      (VP (TO to)
                        (VP (VB read))))))))))))
    (. !) ('' '')))

discourse(sir-4, Please-2)
dep(let-11, sir-4)
nsubj(said-8, she-7)
parataxis(let-11, said-8)
root(ROOT-0, let-11)
nsubj(show-13, me-12)
ccomp(let-11, show-13)
iobj(show-13, you-14)
det(thing-16, a-15)
dobj(show-13, thing-16)
nsubj(happened-20, you-17)
nsubj(read-22, you-17)
neg(happened-20, never-18)
advmod(happened-20, perhaps-19)
rcmod(thing-16, happened-20)
aux(read-22, to-21)
xcomp(happened-20, read-22)

(ROOT
  (S (CC And)
    (S
      (VP (VBG taking)
        (NP (DT the) (NN book))
        (PP (IN from)
          (NP (PRP$ his) (NN hand)))))
    (PRN (: --)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (ADVP (RB too) (RB much))
          (VP (VBN astonished)
            (S
              (VP (TO to)
                (VP (VB retain)
                  (NP (PRP it))))))))
      (: --))
    (NP (PRP she))
    (VP
      (VP (VBD turned)
        (PRT (RP over))
        (NP (DT the) (NN engraving)))
      (, ,)
      (CC and)
      (VP (VBD showed)
        (S
          (NP (PRP him))
          (NP
            (NP (DT the) (NN passage))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD stated)
                  (SBAR (IN that)
                    (S
                      (NP (DT the) (NN cup))
                      (VP (VBD had)
                        (VP (VBN disappeared)
                          (PP (IN from)
                            (NP
                              (NP (DT the) (NN possession))
                              (PP (IN of)
                                (NP (PRP$ its) (NN owner)))))))))))))))
      (, ,)
      (CC and)
      (VP (VBD had)
        (ADVP (RB certainly))
        (VP (VBN been)
          (VP (VBN stolen)))))
    (. .)))

dep(turned-19, taking-2)
det(book-4, the-3)
dobj(taking-2, book-4)
poss(hand-7, his-6)
prep_from(taking-2, hand-7)
nsubjpass(astonished-13, he-9)
nsubj(retain-15, he-9)
auxpass(astonished-13, was-10)
advmod(much-12, too-11)
advmod(astonished-13, much-12)
parataxis(turned-19, astonished-13)
aux(retain-15, to-14)
xcomp(astonished-13, retain-15)
dobj(retain-15, it-16)
nsubj(turned-19, she-18)
nsubj(showed-25, she-18)
nsubjpass(stolen-47, she-18)
root(ROOT-0, turned-19)
prt(turned-19, over-20)
det(engraving-22, the-21)
dobj(turned-19, engraving-22)
conj_and(turned-19, showed-25)
nsubj(passage-28, him-26)
det(passage-28, the-27)
xcomp(showed-25, passage-28)
nsubj(stated-30, passage-28)
rcmod(passage-28, stated-30)
mark(disappeared-35, that-31)
det(cup-33, the-32)
nsubj(disappeared-35, cup-33)
aux(disappeared-35, had-34)
ccomp(stated-30, disappeared-35)
det(possession-38, the-37)
prep_from(disappeared-35, possession-38)
poss(owner-41, its-40)
prep_of(possession-38, owner-41)
aux(stolen-47, had-44)
advmod(stolen-47, certainly-45)
auxpass(stolen-47, been-46)
conj_and(turned-19, stolen-47)

(ROOT
  (S
    (S
      (VP (VBG Finding)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD said) (RB not)
              (NP (DT a) (NN word)))))))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (VBD ventured)
        (S
          (VP (TO to)
            (VP (VB lift)
              (NP (PRP$ her) (NNS eyes))
              (PP (TO to)
                (NP (PRP$ his)))))))
      (, ,)
      (CC and)
      (VP (VBD saw)
        (ADVP (RB again))
        (NP
          (NP (DT the) (JJ corpse-like) (NN face))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD had)
                (VP (VBN looked)
                  (PP (IN through)
                    (NP
                      (NP (DT the) (NN chink))
                      (PP (IN of)
                        (NP (DT the) (NN door))))))))))))
    (. .)))

vmod(ventured-9, Finding-1)
nsubj(said-3, he-2)
ccomp(Finding-1, said-3)
neg(said-3, not-4)
det(word-6, a-5)
dobj(said-3, word-6)
nsubj(ventured-9, she-8)
nsubj(lift-11, she-8)
nsubj(saw-18, she-8)
root(ROOT-0, ventured-9)
aux(lift-11, to-10)
xcomp(ventured-9, lift-11)
poss(eyes-13, her-12)
dobj(lift-11, eyes-13)
prep_to(lift-11, his-15)
conj_and(ventured-9, saw-18)
advmod(saw-18, again-19)
det(face-22, the-20)
amod(face-22, corpse-like-21)
dobj(saw-18, face-22)
nsubj(looked-25, face-22)
aux(looked-25, had-24)
rcmod(face-22, looked-25)
det(chink-28, the-27)
prep_through(looked-25, chink-28)
det(door-31, the-30)
prep_of(chink-28, door-31)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB mean)))
    (. ?) ('' '')))

dobj(mean-5, What-2)
aux(mean-5, do-3)
nsubj(mean-5, you-4)
root(ROOT-0, mean-5)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD stammered))
    (. .)))

nsubj(stammered-2, he-1)
root(ROOT-0, stammered-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB understand)))
    (. !) ('' '')))

nsubj(understand-5, I-2)
aux(understand-5, do-3)
neg(understand-5, not-4)
root(ROOT-0, understand-5)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NNS lips))
      (VP (VBD trembled) (: :)
        (SQ (VBD was)
          (NP (PRP it))
          (ADJP (JJ possible)))))
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN had)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP
                  (NP (DT the) (NN stealing))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (. ?)))

poss(lips-2, His-1)
nsubj(trembled-3, lips-2)
dep(had-10, trembled-3)
cop(possible-7, was-5)
nsubj(possible-7, it-6)
parataxis(trembled-3, possible-7)
nsubj(had-10, he-8)
nsubj(do-12, he-8)
aux(had-10, had-9)
root(ROOT-0, had-10)
aux(do-12, to-11)
xcomp(had-10, do-12)
det(stealing-15, the-14)
prep_with(do-12, stealing-15)
prep_of(stealing-15, it-17)

(ROOT
  (S
    (S
      (NP (DT The) (NN truth))
      (VP (VBD was)
        (NP (DT this))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN learned)
          (NP
            (NP (DT the) (NN existence))
            (PP (IN of)
              (NP (DT the) (NN cup))))
          (PP (IN from)
            (NP (DT this) (JJ very) (NN book))))))
    (: ;)
    (CC and)
    (S
      (S
        (VP (VBN had)
          (ADVP (RB never))
          (VP (VBN rested)
            (PP (IN until)
              (PRN (, ,)
                (PP (IN after)
                  (NP
                    (NP (DT a) (NN search))
                    (PP (IN of)
                      (NP
                        (QP (JJR more) (IN than) (CD ten))
                        (NNS years)))))
                (, ,))
              (NP
                (NP (PRP he))
                (PP (IN at)
                  (NP (NN length))))))))
      (VP (VBD found)
        (NP (PRP it))
        (PP (IN in)
          (NP
            (NP (DT the) (NNS hands))
            (PP (IN of)
              (NP
                (NP (DT a) (JJ poor) (NN man))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD dared) (RB not)
                      (VP (VB offer)
                        (NP (PRP it))
                        (PP (IN for)
                          (NP (NN sale)))))))))))))
    (. .)))

det(truth-2, The-1)
nsubj(this-4, truth-2)
cop(this-4, was-3)
root(ROOT-0, this-4)
nsubj(learned-8, he-6)
aux(learned-8, had-7)
conj_and(this-4, learned-8)
det(existence-10, the-9)
dobj(learned-8, existence-10)
det(cup-13, the-12)
prep_of(existence-10, cup-13)
det(book-17, this-15)
amod(book-17, very-16)
prep_from(learned-8, book-17)
aux(rested-22, had-20)
neg(rested-22, never-21)
csubj(found-37, rested-22)
dep(rested-22, after-25)
det(search-27, a-26)
pobj(after-25, search-27)
mwe(than-30, more-29)
quantmod(ten-31, than-30)
num(years-32, ten-31)
prep_of(search-27, years-32)
prep_until(rested-22, he-34)
prep_at(he-34, length-36)
conj_and(this-4, found-37)
dobj(found-37, it-38)
det(hands-41, the-40)
prep_in(found-37, hands-41)
det(man-45, a-43)
amod(man-45, poor-44)
prep_of(hands-41, man-45)
nsubj(dared-47, man-45)
rcmod(man-45, dared-47)
neg(dared-47, not-48)
dep(dared-47, offer-49)
dobj(offer-49, it-50)
prep_for(offer-49, sale-52)

(ROOT
  (S
    (ADVP (RB Once))
    (PP
      (PP (IN in)
        (NP
          (NP (PRP$ his) (NN possession))
          (, ,)
          (NP
            (NP (DT the) (NN thought))
            (PP (IN of)
              (S
                (VP (VBG giving)
                  (NP (PRP it))
                  (PRT (RP up))))))))
      (, ,)
      (CC or)
      (PP (IN of)
        (S
          (VP (VBG letting)
            (S
              (NP (DT the) (NN owner))
              (VP (VB redeem)
                (NP (PRP it)))))))
      (, ,))
    (VP (VBD had)
      (ADVP (RB never))
      (VP
        (ADVP (RB even))
        (VBN occurred)
        (PP (TO to)
          (NP (PRP him)))))
    (. .)))

advmod(occurred-24, Once-1)
poss(possession-4, his-3)
prep_in(occurred-24, possession-4)
det(thought-7, the-6)
appos(possession-4, thought-7)
prepc_of(thought-7, giving-9)
dobj(giving-9, it-10)
prt(giving-9, up-11)
prepc_of(occurred-24', letting-15)
det(owner-17, the-16)
nsubj(redeem-18, owner-17)
ccomp(letting-15, redeem-18)
dobj(redeem-18, it-19)
aux(occurred-24, had-21)
neg(occurred-24, never-22)
advmod(occurred-24, even-23)
root(ROOT-0, occurred-24)
conj_or(occurred-24, occurred-24')
prep_to(occurred-24, him-26)

(ROOT
  (S (CC Yet)
    (NP (DT the) (NN treasure))
    (VP (VBD made)
      (NP (PRP him))
      (S
        (ADJP (JJ rejoice)
          (PP (IN with)
            (NP
              (NP (DT a) (NN trembling))
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PDT all) (PRP$ his) (NN casuistry))
                  (VP (MD would)
                    (VP (VB have)
                      (VP (VBN found)
                        (S
                          (NP (PRP it))
                          (ADJP (JJ hard)
                            (S
                              (VP (TO to)
                                (VP (VB explain)))))))))
                  (: ;)
                  (SBAR (IN for)
                    (S
                      (NP (PRP he))
                      (VP (MD would) (RB not)
                        (VP (VB confess)
                          (PP (TO to)
                            (NP (PRP himself)))))))))))))
      (NP
        (NP (PRP$ its) (JJ real) (NN cause))
        (: --)
        (ADVP
          (ADVP (RB namely))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP$ his) (JJ God-born) (NN essence))
              (VP (VBD was)
                (ADJP (JJ uneasy)
                  (PP (IN with)
                    (NP (DT a) (JJ vague) (NN knowledge))))
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (VP (VBD lay)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN bosom))
                          (PP (IN of)
                            (NP (DT a) (NN thief))))))))))))))
    (. .)))

cc(made-4, Yet-1)
det(treasure-3, the-2)
nsubj(made-4, treasure-3)
root(ROOT-0, made-4)
dobj(made-4, him-5)
dep(made-4, rejoice-6)
det(trembling-9, a-8)
prep_with(rejoice-6, trembling-9)
dobj(found-16, trembling-9)
predet(casuistry-13, all-11)
poss(casuistry-13, his-12)
nsubj(found-16, casuistry-13)
aux(found-16, would-14)
aux(found-16, have-15)
rcmod(trembling-9, found-16)
nsubj(hard-18, it-17)
nsubj(explain-20, it-17)
xcomp(found-16, hard-18)
aux(explain-20, to-19)
xcomp(hard-18, explain-20)
mark(confess-26, for-22)
nsubj(confess-26, he-23)
aux(confess-26, would-24)
neg(confess-26, not-25)
parataxis(found-16, confess-26)
prep_to(confess-26, himself-28)
poss(cause-31, its-29)
amod(cause-31, real-30)
dobj(made-4, cause-31)
advmod(cause-31, namely-33)
mark(uneasy-40, that-35)
poss(essence-38, his-36)
amod(essence-38, God-born-37)
nsubj(uneasy-40, essence-38)
cop(uneasy-40, was-39)
advcl(namely-33, uneasy-40)
ccomp(namely-33, uneasy-40)
det(knowledge-44, a-42)
amod(knowledge-44, vague-43)
prep_with(uneasy-40, knowledge-44)
mark(lay-47, that-45)
nsubj(lay-47, it-46)
ccomp(uneasy-40, lay-47)
det(bosom-50, the-49)
prep_in(lay-47, bosom-50)
det(thief-53, a-52)
prep_of(bosom-50, thief-53)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (VP (VB Do) (RB n't)))
      (NP (PRP you))
      (VP (VBP think) (, ,)
        (S
          (VP (VB sir)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Dawtie))
    (, ,) (`` ``)
    (S
      (NP
        (NP (DT that))
        (SBAR
          (WHNP (WP whoever))
          (S
            (VP (VBZ has)
              (NP (DT that) (NN cup))))))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB send)
              (NP (PRP it))
              (ADVP (RB back)
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN place))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBD was)
                          (VP (VBN stolen)
                            (PP (IN from))))))))))))))
    (. ?) ('' '')))

dep(think-5, Do-2)
neg(Do-2, n't-3)
nsubj(think-5, you-4)
ccomp(said-10, think-5)
ccomp(think-5, sir-7)
root(ROOT-0, said-10)
nsubj(said-10, Dawtie-11)
det(cup-18, that-14)
nsubj(ought-19, that-14)
nsubj(send-21, that-14)
nsubj(has-16, whoever-15)
rcmod(that-14, has-16)
dobj(has-16, cup-18)
dep(said-10, ought-19)
aux(send-21, to-20)
xcomp(ought-19, send-21)
dobj(send-21, it-22)
advmod(send-21, back-23)
det(place-26, the-25)
prep_to(back-23, place-26)
prep_from(stolen-29, place-26)
nsubjpass(stolen-29, it-27)
auxpass(stolen-29, was-28)
rcmod(place-26, stolen-29)

(ROOT
  (SINV (VBD Had)
    (NP (DT the) (JJ old) (NN man))
    (VP (VBN been)
      (NP (DT a) (JJ developed) (NN hypocrite))
      (, ,)
      (FRAG
        (NP (PRP he))
        (SBAR
          (S
            (VP (MD would)
              (VP (VB have)
                (VP (VBN replied)
                  (PP (IN at)
                    (NP (RB once))))))))
        (: :) (`` ``)
        (S
          (NP (PRP He))
          (ADVP (RB certainly))
          (VP (MD ought)))
        (. .) ('' '')))))

aux(hypocrite-8, Had-1)
det(man-4, the-2)
amod(man-4, old-3)
nsubj(hypocrite-8, man-4)
cop(hypocrite-8, been-5)
det(hypocrite-8, a-6)
amod(hypocrite-8, developed-7)
root(ROOT-0, hypocrite-8)
dep(hypocrite-8, he-10)
aux(replied-13, would-11)
aux(replied-13, have-12)
dep(he-10, replied-13)
prep(replied-13, at-14)
pobj(at-14, once-15)
nsubj(ought-20, He-18)
advmod(ought-20, certainly-19)
dep(he-10, ought-20)

(ROOT
  (S (CC But)
    (PP (IN by)
      (NP
        (NP (NN word))
        (PP (IN of)
          (NP (NN mouth)))
        (S
          (VP (TO to)
            (VP (VB condemn)
              (SBAR
                (S
                  (NP (PRP himself))
                  (VP (MD would)
                    (VP (VB have)
                      (VP (VBN been)
                        (S
                          (VP (TO to)
                            (VP (VB acknowledge)
                              (PP (TO to)
                                (NP (PRP himself)))
                              (SBAR (IN that)
                                (S
                                  (NP (PRP he))
                                  (VP (MD ought)
                                    (S
                                      (VP (TO to)
                                        (VP (VB send)
                                          (NP
                                            (NP (DT the) (NN cup) (NN home))
                                            (, ,)
                                            (CC and)
                                            (NP (DT this))))))))))))))))))))))
    (NP (PRP he))
    (VP (VBD dared) (RB not)
      (VP (VB do)))
    (. .)))

cc(dared-28, But-1)
prep_by(dared-28, word-3)
prep_of(word-3, mouth-5)
aux(condemn-7, to-6)
vmod(word-3, condemn-7)
nsubj(been-11, himself-8)
nsubj(acknowledge-13, himself-8)
aux(been-11, would-9)
aux(been-11, have-10)
ccomp(condemn-7, been-11)
aux(acknowledge-13, to-12)
xcomp(been-11, acknowledge-13)
prep_to(acknowledge-13, himself-15)
mark(ought-18, that-16)
nsubj(ought-18, he-17)
nsubj(send-20, he-17)
ccomp(acknowledge-13, ought-18)
aux(send-20, to-19)
xcomp(ought-18, send-20)
det(home-23, the-21)
nn(home-23, cup-22)
dobj(send-20, home-23)
dobj(send-20, this-26)
conj_and(home-23, this-26)
nsubj(dared-28, he-27)
root(ROOT-0, dared-28)
neg(dared-28, not-29)
dep(dared-28, do-30)

(ROOT
  (S
    (NP
      (NP (NNS Men))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (MD will) (RB not)
            (VP (VB do)
              (SBAR (IN as)
                (S
                  (NP (PRP they))
                  (VP (VBP know)))))))))
    (, ,)
    (VP (VB make)
      (NP (JJ strange) (NN confusion))
      (PP (IN in)
        (NP (PRP themselves))))
    (. .)))

nsubj(do-5, Men-1)
nsubj(make-10, Men-1)
aux(do-5, will-3)
neg(do-5, not-4)
rcmod(Men-1, do-5)
mark(know-8, as-6)
nsubj(know-8, they-7)
advcl(do-5, know-8)
root(ROOT-0, make-10)
amod(confusion-12, strange-11)
dobj(make-10, confusion-12)
prep_in(make-10, themselves-14)

(ROOT
  (S
    (NP
      (NP (DT The) (JJS worst) (NN rancor))
      (PP (IN in)
        (NP
          (NP (DT the) (NN vessel))
          (PP (IN of)
            (NP (NN peace))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN consciousness))
        (PP (IN of)
          (ADJP (JJ wrong)))
        (PP (IN in)
          (NP (DT a) (RB not) (JJ all-unrighteous) (NN soul)))))
    (. .)))

det(rancor-3, The-1)
amod(rancor-3, worst-2)
nsubj(consciousness-11, rancor-3)
det(vessel-6, the-5)
prep_in(rancor-3, vessel-6)
prep_of(vessel-6, peace-8)
cop(consciousness-11, is-9)
det(consciousness-11, the-10)
root(ROOT-0, consciousness-11)
prep_of(consciousness-11, wrong-13)
det(soul-18, a-15)
neg(soul-18, not-16)
amod(soul-18, all-unrighteous-17)
prep_in(consciousness-11, soul-18)

(ROOT
  (S
    (S
      (NP (DT The) (NN laird))
      (VP (VBD was)
        (ADJP (JJ false)
          (PP (TO to)
            (NP (PRP$ his) (JJ own) (NN self))))))
    (, ,)
    (CC but)
    (S
      (S
        (VP (TO to)
          (VP (VB confess)
            (S
              (NP (PRP himself))
              (ADJP (JJ false))))))
      (VP (MD would)
        (VP (VB be)
          (S
            (VP (TO to)
              (VP (VB initiate)
                (NP
                  (NP (DT a) (NN change))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD would)
                        (VP (VB render)
                          (S
                            (NP (NN life))
                            (ADJP (JJ worthless)
                              (PP (TO to)
                                (NP (PRP him))))))))))))))))
    (. !)))

det(laird-2, The-1)
nsubj(false-4, laird-2)
cop(false-4, was-3)
root(ROOT-0, false-4)
poss(self-8, his-6)
amod(self-8, own-7)
prep_to(false-4, self-8)
aux(confess-12, to-11)
csubj(be-16, confess-12)
nsubj(false-14, himself-13)
xcomp(confess-12, false-14)
aux(be-16, would-15)
conj_but(false-4, be-16)
aux(initiate-18, to-17)
xcomp(be-16, initiate-18)
det(change-20, a-19)
dobj(initiate-18, change-20)
nsubj(render-23, change-20)
aux(render-23, would-22)
rcmod(change-20, render-23)
nsubj(worthless-25, life-24)
xcomp(render-23, worthless-25)
prep_to(worthless-25, him-27)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD would)
      (NP
        (NP (DT all))
        (NP (PRP$ his) (JJ fine) (NNS things)))
      (VP (VB be)
        (PP (IN without)
          (NP
            (NP (PRP$ their) (NN heart))
            (PP (IN of)
              (NP
                (NP (NNS preciousness))
                (, ,)
                (NP
                  (NP (DT the) (CD one) (NN jewel))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (ADVP (RB now))
                      (VP (VBD was)
                        (UCP
                          (ADVP (RB nowhere)
                            (PP (IN in)
                              (NP (DT the) (NN world))))
                          (CC but)
                          (PP (IN in)
                            (NP
                              (NP (PRP$ his) (NN house))
                              (, ,)
                              (PP (IN in)
                                (NP
                                  (NP (DT the) (JJ secret) (NN chamber))
                                  (PP (IN of)
                                    (NP (PRP$ his) (NNS treasures)))
                                  (, ,)
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (VP (MD would)
                                        (VP (VB be)
                                          (NP (DT a) (JJ rifled) (NN case))
                                          (PP (IN without)
                                            (NP (PRP it))))))))))
                            (. !)))))))))))))))

dobj(be-7, What-1)
aux(be-7, would-2)
nsubj(be-7, all-3)
poss(things-6, his-4)
amod(things-6, fine-5)
dep(all-3, things-6)
root(ROOT-0, be-7)
poss(heart-10, their-9)
prep_without(be-7, heart-10)
prep_of(heart-10, preciousness-12)
det(jewel-16, the-14)
num(jewel-16, one-15)
appos(preciousness-12, jewel-16)
nsubj(was-19, jewel-16)
advmod(was-19, now-18)
rcmod(jewel-16, was-19)
advmod(was-19, nowhere-20)
det(world-23, the-22)
prep_in(nowhere-20, world-23)
advmod(was-19, in-25)
conj_but(nowhere-20, in-25)
poss(house-27, his-26)
pobj(in-25, house-27)
det(chamber-32, the-30)
amod(chamber-32, secret-31)
prep_in(house-27, chamber-32)
nsubj(case-42, chamber-32)
poss(treasures-35, his-34)
prep_of(chamber-32, treasures-35)
aux(case-42, would-38)
cop(case-42, be-39)
det(case-42, a-40)
amod(case-42, rifled-41)
rcmod(chamber-32, case-42)
prep_without(case-42, it-44)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (VP (VBZ is)
          (ADJP (JJ natural)
            (PP (TO to)
              (NP
                (NP (CD one))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (MD will) (RB not)
                      (VP (VB do)
                        (ADVP (RB right))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB argue)
            (NP (DT the) (JJ moral) (NN question)))))
      (, ,)
      (S
        (VP (VBG treating)
          (NP (PRP it))
          (PP (IN as)
            (NP
              (NP (DT a) (NN point))
              (PP (IN of)
                (NP (NN casuistry)))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD troubled)
                    (NP
                      (NP (DT the) (NN mind))
                      (PP (IN of)
                        (NP (DT the) (NN girl))))))))))))
    (. .)))

mark(natural-3, As-1)
cop(natural-3, is-2)
advcl(began-13, natural-3)
prep_to(natural-3, one-5)
nsubj(do-9, one-5)
aux(do-9, will-7)
neg(do-9, not-8)
rcmod(one-5, do-9)
advmod(do-9, right-10)
nsubj(began-13, he-12)
nsubj(argue-15, he-12)
root(ROOT-0, began-13)
aux(argue-15, to-14)
xcomp(began-13, argue-15)
det(question-18, the-16)
amod(question-18, moral-17)
dobj(argue-15, question-18)
xcomp(began-13, treating-20)
dobj(treating-20, it-21)
det(point-24, a-23)
prep_as(treating-20, point-24)
nsubj(troubled-28, point-24)
prep_of(point-24, casuistry-26)
rcmod(point-24, troubled-28)
det(mind-30, the-29)
dobj(troubled-28, mind-30)
det(girl-33, the-32)
prep_of(mind-30, girl-33)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP
          (NP (DT that))
          (, ,)
          (NP (NNP Dawtie)))))
    (. !) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
dobj(know-5, that-6)
appos(that-6, Dawtie-8)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ is) (RB not)
        (ADJP (JJ likely))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN person))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ has)
                    (NP
                      (NP (DT the) (NN cup))
                      (, ,)
                      (SBAR
                        (WHNP (WP whoever))
                        (S
                          (NP (PRP he))
                          (VP (MD may)
                            (VP (VB be)))))))))
              (: --)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is) (, ,)
                    (SBAR (IN if)
                      (S
                        (NP (DT the) (NN cup))
                        (VP (VBP be)
                          (ADVP (RB still))
                          (PP (IN in)
                            (NP (NN existence)))))))))
              (: --))
            (VP (VBZ is)
              (NP
                (NP (DT the) (JJ same))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD stole)
                      (NP (PRP it)))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD would)
        (ADVP (RB hardly))
        (VP (VB be)
          (ADJP (JJ justice)
            (S
              (VP (TO to)
                (VP (VB punish)
                  (NP (DT the) (JJ innocent))
                  (PP (IN for)
                    (NP (DT the) (JJ guilty))))))))))
    (. ?)))

nsubj(likely-5, It-2)
cop(likely-5, is-3)
neg(likely-5, not-4)
root(ROOT-0, likely-5)
mark(same-32, that-6)
det(person-8, the-7)
nsubj(has-10, person-8)
nsubj(is-20, person-8)
nsubj(same-32, person-8)
rcmod(person-8, has-10)
det(cup-12, the-11)
dobj(has-10, cup-12)
dobj(be-17, whoever-14)
nsubj(be-17, he-15)
aux(be-17, may-16)
rcmod(cup-12, be-17)
rcmod(person-8, is-20)
mark(be-25, if-22)
det(cup-24, the-23)
nsubj(be-25, cup-24)
advcl(is-20, be-25)
advmod(be-25, still-26)
prep_in(be-25, existence-28)
cop(same-32, is-30)
det(same-32, the-31)
ccomp(likely-5, same-32)
nsubj(stole-34, same-32)
rcmod(same-32, stole-34)
dobj(stole-34, it-35)
nsubj(justice-42, it-38)
nsubj(punish-44, it-38)
aux(justice-42, would-39)
advmod(justice-42, hardly-40)
cop(justice-42, be-41)
conj_and(likely-5, justice-42)
aux(punish-44, to-43)
xcomp(justice-42, punish-44)
det(innocent-46, the-45)
dobj(punish-44, innocent-46)
det(guilty-49, the-48)
prep_for(punish-44, guilty-49)

(ROOT
  (S (: --)
    (SBAR (IN as)
      (S
        (VP (MD would)
          (VP (VB be)
            (NP (DT the) (NN case))
            (, ,)
            (SBAR (IN if) (, ,)
              (S
                (S
                  (VP (VBG supposing)
                    (NP (PRP I))))
                (VP (VBD had)
                  (VP (VBN bought)
                    (NP (DT the) (NN cup))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB lose)
            (NP
              (NP (DT the) (NN money))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD paid)
                    (PP (IN for)
                      (NP (PRP it)))))))))))
    (. .)))

mark(case-6, as-2)
aux(case-6, would-3)
cop(case-6, be-4)
det(case-6, the-5)
advcl(had-18, case-6)
parataxis(had-18, case-6)
mark(bought-13, if-8)
csubj(bought-13, supposing-10)
dobj(supposing-10, I-11)
aux(bought-13, had-12)
advcl(case-6, bought-13)
det(cup-15, the-14)
dobj(bought-13, cup-15)
nsubj(had-18, I-17)
nsubj(lose-20, I-17)
root(ROOT-0, had-18)
aux(lose-20, to-19)
xcomp(had-18, lose-20)
det(money-22, the-21)
dobj(lose-20, money-22)
nsubj(paid-24, I-23)
rcmod(money-22, paid-24)
prep_for(paid-24, it-26)

(ROOT
  (SINV (MD Should)
    (NP (DT the) (NN man)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD had) (RB not)
            (VP (VBN taken)
              (NP
                (NP (NN care))
                (PP (IN of)
                  (NP (PRP$ his) (NN cup)))))))))
    (VP (VB have)
      (S
        (NP (PRP$ his) (NN fault))
        (VP (VB condoned)
          (PP (IN at)
            (NP (PRP$ my) (NN expense)))
          (. ?))))))

aux(have-12, Should-1)
det(man-3, the-2)
nsubj(have-12, man-3)
nsubj(taken-7, who-4)
aux(taken-7, had-5)
neg(taken-7, not-6)
ccomp(man-3, taken-7)
dobj(taken-7, care-8)
poss(cup-11, his-10)
prep_of(care-8, cup-11)
root(ROOT-0, have-12)
poss(fault-14, his-13)
nsubj(condoned-15, fault-14)
ccomp(have-12, condoned-15)
poss(expense-18, my-17)
prep_at(condoned-15, expense-18)

(ROOT
  (S
    (S
      (VP (VBD Did)
        (S
          (NP (PRP he))
          (RB not)
          (VP (VB deserve)))))
    (, ,)
    (NP (DT the) (JJ many))
    (VP (MD might)
      (VP (VB say) (, ,)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP
                (ADVP (RB so))
                (VBN punished) (, ,)
                (S
                  (VP
                    (VP (VBG placing)
                      (NP (JJ huge) (NN temptation))
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN path))
                          (PP (IN of)
                            (NP (DT the) (JJ needy))))))
                    (, ,)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN loss))
                        (PP (IN of)
                          (NP (PRP$ their) (JJ precious) (NNS souls)))))
                    (, ,)
                    (CC and)
                    (VP (VBG letting)
                      (S
                        (NP (DT a) (JJ priceless) (NN thing))
                        (VP (VB go)
                          (ADJP (JJ loose))
                          (PP (IN in)
                            (NP (DT the) (NN world)))
                          (, ,)
                          (S
                            (VP (TO to)
                              (VP (VB work)
                                (VP (VB ruin)
                                  (PP (TO to)
                                    (SBAR
                                      (WHNP (WP whoever))
                                      (S
                                        (VP (MD might)
                                          (ADVP (RB innocently))
                                          (VP (VB buy)
                                            (NP (PRP it))))))))))))))))))))))
    (. ?) ('' '')))

ccomp(say-9, Did-1)
nsubj(deserve-4, he-2)
neg(deserve-4, not-3)
ccomp(Did-1, deserve-4)
det(many-7, the-6)
nsubj(say-9, many-7)
nsubjpass(punished-14, many-7)
aux(say-9, might-8)
root(ROOT-0, say-9)
aux(punished-14, to-11)
auxpass(punished-14, be-12)
advmod(punished-14, so-13)
xcomp(say-9, punished-14)
ccomp(punished-14, placing-16)
amod(temptation-18, huge-17)
dobj(placing-16, temptation-18)
det(path-21, the-20)
prep_in(placing-16, path-21)
det(needy-24, the-23)
prep_of(path-21, needy-24)
ccomp(punished-14, to-26)
conj_and(placing-16, to-26)
det(loss-28, the-27)
prep_to(placing-16, loss-28)
poss(souls-32, their-30)
amod(souls-32, precious-31)
prep_of(loss-28, souls-32)
ccomp(punished-14, letting-35)
conj_and(placing-16, letting-35)
det(thing-38, a-36)
amod(thing-38, priceless-37)
nsubj(go-39, thing-38)
nsubj(work-46, thing-38)
ccomp(letting-35, go-39)
acomp(go-39, loose-40)
det(world-43, the-42)
prep_in(go-39, world-43)
aux(work-46, to-45)
xcomp(go-39, work-46)
xcomp(work-46, ruin-47)
nsubj(buy-52, whoever-49)
aux(buy-52, might-50)
advmod(buy-52, innocently-51)
prepc_to(ruin-47, buy-52)
dobj(buy-52, it-53)

(ROOT
  (S
    (NP (PRP$ His) (NN logic))
    (VP (VBD did) (RB not)
      (VP (VB serve)
        (S
          (VP (TO to)
            (VP (VB show)
              (S
                (NP (PRP him))
                (NP
                  (NP (DT the) (NN falsehood))
                  (PP (IN of)
                    (NP (PRP$ his) (NN reasoning))))))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP$ his) (NN heart))
            (VP (VBD was)
              (PP (IN in)
                (NP (DT the) (NN lie))))))))
    (. .)))

poss(logic-2, His-1)
nsubj(serve-5, logic-2)
nsubj(show-7, logic-2)
aux(serve-5, did-3)
neg(serve-5, not-4)
root(ROOT-0, serve-5)
aux(show-7, to-6)
xcomp(serve-5, show-7)
nsubj(falsehood-10, him-8)
det(falsehood-10, the-9)
xcomp(show-7, falsehood-10)
poss(reasoning-13, his-12)
prep_of(falsehood-10, reasoning-13)
mark(was-18, for-15)
poss(heart-17, his-16)
nsubj(was-18, heart-17)
advcl(serve-5, was-18)
det(lie-21, the-20)
prep_in(was-18, lie-21)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Ought) (NNP I))
      (CC or)
      (NP (PRP he)))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD went)
      (PRT (RP on))
      (, ,) (`` ``)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN punished)
              (SBAR (IN because)
                (S
                  (NP (PRP he))
                  (VP (VBD kept)
                    (S
                      (NP (DT the) (NN thing))
                      (ADJP (RB ill)))))))))))
    (. ?)))

nn(I-3, Ought-2)
nsubj(went-9, I-3)
nsubjpass(punished-15, I-3)
conj_or(I-3, he-5)
nsubj(went-9, he-5)
nsubjpass(punished-15, he-5)
nsubj(went-9, he-8)
nsubjpass(punished-15, he-8)
root(ROOT-0, went-9)
prt(went-9, on-10)
aux(punished-15, to-13)
auxpass(punished-15, be-14)
xcomp(went-9, punished-15)
mark(kept-18, because-16)
nsubj(kept-18, he-17)
advcl(punished-15, kept-18)
det(thing-20, the-19)
nsubj(ill-21, thing-20)
xcomp(kept-18, ill-21)

(ROOT
  (SBARQ (CC And)
    (WHADVP (WRB how) (RB far))
    (SQ (MD would)
      (NP (DT the) (JJ quixotic) (NN obligation))
      (VP (VBD descend)))
    (. ?)))

cc(descend-8, And-1)
advmod(far-3, how-2)
advmod(descend-8, far-3)
aux(descend-8, would-4)
det(obligation-7, the-5)
amod(obligation-7, quixotic-6)
nsubj(descend-8, obligation-7)
root(ROOT-0, descend-8)

(ROOT
  (S
    (NP
      (NP (DT A) (NN score))
      (PP (IN of)
        (NP (JJ righteous) (NNS men))))
    (VP (MD may)
      (PP (IN by)
        (NP (DT this) (NN time)))
      (VP (VB have)
        (VP (VBN bought)
          (CC and)
          (VBN sold)
          (NP (DT the) (NN cup)))))
    (. !)))

det(score-2, A-1)
nsubj(bought-11, score-2)
nsubj(sold-13, score-2)
amod(men-5, righteous-4)
prep_of(score-2, men-5)
aux(bought-11, may-6)
det(time-9, this-8)
prep_by(bought-11, time-9)
aux(bought-11, have-10)
root(ROOT-0, bought-11)
conj_and(bought-11, sold-13)
det(cup-15, the-14)
dobj(bought-11, cup-15)

(ROOT
  (FRAG (: --)
    (VP (VBZ is)
      (NP (PRP it))
      (S
        (NP
          (NP (DT some) (NN demon-talisman))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (DT the) (JJ last))
              (VP (MD must)
                (VP (VB meet)
                  (NP
                    (NP (DT the) (NN penalty))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP
                          (NP (DT the) (JJ original) (NN owner))
                          (, ,)
                          (CC or)
                          (NP
                            (NP (DT some) (NN descendant))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NN man))
                                (SBAR
                                  (WHNP (WP who))
                                  (S
                                    (VP (VBD lost)
                                      (NP (PRP it))))))))
                          (, ,))
                        (VP (VBZ chooses)
                          (S
                            (VP (TO to)
                              (VP (VB claim)
                                (NP (PRP it))))))))))))))))
    (. ?)))

cop(it-3, is-2)
root(ROOT-0, it-3)
det(demon-talisman-5, some-4)
dep(it-3, demon-talisman-5)
mark(meet-11, that-7)
det(last-9, the-8)
nsubj(meet-11, last-9)
aux(meet-11, must-10)
dep(demon-talisman-5, meet-11)
det(penalty-13, the-12)
dobj(meet-11, penalty-13)
tmod(chooses-30, penalty-13)
advmod(chooses-30, when-15)
det(owner-18, the-16)
amod(owner-18, original-17)
nsubj(chooses-30, owner-18)
nsubj(claim-32, owner-18)
det(descendant-22, some-21)
conj_or(owner-18, descendant-22)
nsubj(chooses-30, descendant-22)
nsubj(claim-32, descendant-22)
det(man-25, the-24)
prep_of(descendant-22, man-25)
nsubj(lost-27, man-25)
rcmod(man-25, lost-27)
dobj(lost-27, it-28)
rcmod(penalty-13, chooses-30)
aux(claim-32, to-31)
xcomp(chooses-30, claim-32)
dobj(claim-32, it-33)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP
          (NP (NN anything))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP know))))))
      (, ,)
      (NP (PRP he))
      (VP (MD may)))
    (NP (PRP himself))
    (VP (VBP have)
      (VP (VBN pocketed)
        (NP
          (NP (DT the) (NN price))
          (PP (IN of)
            (NP (DT the) (VBN rumored) (NN theft))))))
    (. !)))

prep_for(may-7, anything-2)
nsubj(know-4, we-3)
rcmod(anything-2, know-4)
nsubj(may-7, he-6)
dep(pocketed-10, may-7)
nsubj(pocketed-10, himself-8)
aux(pocketed-10, have-9)
root(ROOT-0, pocketed-10)
det(price-12, the-11)
dobj(pocketed-10, price-12)
det(theft-16, the-14)
amod(theft-16, rumored-15)
prep_of(price-12, theft-16)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (RB not) (VB see)
      (S
        (NP (PRP it))
        (VP (MD would)
          (VP (VB be)
            (NP (DT a)
              (ADJP (JJ flagrant))
              (NN injustice))))))
    (. ?)))

aux(see-4, Can-1)
nsubj(see-4, you-2)
neg(see-4, not-3)
root(ROOT-0, see-4)
nsubj(injustice-10, it-5)
aux(injustice-10, would-6)
cop(injustice-10, be-7)
det(injustice-10, a-8)
amod(injustice-10, flagrant-9)
ccomp(see-4, injustice-10)

(ROOT
  (S
    (LST (: --))
    (VP (VB fit)
      (ADVP (RB indeed))
      (S
        (VP (TO to)
          (VP (VB put)
            (NP (DT an) (NN end))
            (PP (TO to)
              (NP (DT all) (NN buying)
                (CC and)
                (NN selling)))))))
    (. !)))

root(ROOT-0, fit-2)
advmod(fit-2, indeed-3)
aux(put-5, to-4)
xcomp(fit-2, put-5)
det(end-7, an-6)
dobj(put-5, end-7)
det(buying-10, all-9)
prep_to(put-5, buying-10)
prep_to(put-5, selling-12)
conj_and(buying-10, selling-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB annihilate)
        (NP
          (NP (NN transfer))
          (PP (IN of)
            (NP (NN property))))))
    (. !)))

nsubj(annihilate-3, It-1)
aux(annihilate-3, would-2)
root(ROOT-0, annihilate-3)
dobj(annihilate-3, transfer-4)
prep_of(transfer-4, property-6)

(ROOT
  (S
    (S
      (NP (NNP Possession))
      (VP (MD would)
        (VP (VB mean)
          (NP (RB only) (NN strength)
            (S
              (VP (TO to)
                (VP (VB keep))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN world))
      (VP (MD would)
        (VP (VB fall)
          (PP (IN into)
            (NP (NN confusion))))))
    (. .) ('' '')))

nsubj(mean-3, Possession-1)
aux(mean-3, would-2)
root(ROOT-0, mean-3)
advmod(strength-5, only-4)
dobj(mean-3, strength-5)
aux(keep-7, to-6)
vmod(strength-5, keep-7)
det(world-11, the-10)
nsubj(fall-13, world-11)
aux(fall-13, would-12)
conj_and(mean-3, fall-13)
prep_into(fall-13, confusion-15)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (MD would)
        (VP (VB be)
          (ADJP (JJ hard)))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP grant)))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD confessed))
        (NP (NNP Dawtie))))
    (: ;) (`` ``)
    (CC but)
    (S
      (NP
        (NP (DT the) (NN man))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ has)
              (NP (PRP it))))))
      (VP (MD ought)
        (S
          (ADVP (IN at) (JJS least))
          (VP (TO to)
            (VP (VB give)
              (NP
                (NP (DT the) (NN head))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN family))
                    (SBAR
                      (WHPP (IN in)
                        (WHNP (WDT which)))
                      (S
                        (NP (PRP it))
                        (VP (VBD had)
                          (VP (VBN been)
                            (NP
                              (NP (DT the) (NN chance))
                              (PP (IN of)
                                (S
                                  (VP (VBG buying)
                                    (NP (PRP it))
                                    (PRT (RP back))
                                    (PP (IN at)
                                      (NP
                                        (NP (DT the) (NN price))
                                        (SBAR
                                          (S
                                            (NP (PRP it))
                                            (VP (VBD cost)
                                              (NP (PRP him)))))))))))))))))))))))
    (. .)))

nsubj(hard-5, It-2)
aux(hard-5, would-3)
cop(hard-5, be-4)
root(ROOT-0, hard-5)
nsubj(grant-8, I-7)
ccomp(hard-5, grant-8)
conj_but(hard-5, grant-8)
dep(hard-5, confessed-11)
nsubj(confessed-11, Dawtie-12)
det(man-17, the-16)
nsubj(has-19, man-17)
nsubj(ought-21, man-17)
nsubj(give-25, man-17)
rcmod(man-17, has-19)
dobj(has-19, it-20)
conj_but(hard-5, ought-21)
advmod(give-25, at-22)
pobj(at-22, least-23)
aux(give-25, to-24)
xcomp(ought-21, give-25)
det(head-27, the-26)
dobj(give-25, head-27)
det(family-30, the-29)
prep_of(head-27, family-30)
prep_in(chance-37, family-30)
nsubj(chance-37, it-33)
aux(chance-37, had-34)
cop(chance-37, been-35)
det(chance-37, the-36)
rcmod(family-30, chance-37)
prepc_of(chance-37, buying-39)
dobj(buying-39, it-40)
prt(buying-39, back-41)
det(price-44, the-43)
prep_at(buying-39, price-44)
nsubj(cost-46, it-45)
rcmod(price-44, cost-46)
dobj(cost-46, him-47)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (MD could) (RB not)
          (VP (VB buy)
            (NP (PRP it))
            (ADVP (RB back))
            (: --)
            (ADVP (RB then))))))
    (NP (DT the) (NN thing))
    (VP (MD would)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN thought)
                (PRT (RP over))))))))
    (. .) ('' '')))

mark(buy-5, If-1)
nsubj(buy-5, he-2)
aux(buy-5, could-3)
neg(buy-5, not-4)
advcl(have-13, buy-5)
dobj(buy-5, it-6)
advmod(buy-5, back-7)
advmod(buy-5, then-9)
det(thing-11, the-10)
nsubj(have-13, thing-11)
nsubjpass(thought-16, thing-11)
aux(have-13, would-12)
root(ROOT-0, have-13)
aux(thought-16, to-14)
auxpass(thought-16, be-15)
xcomp(have-13, thought-16)
prt(thought-16, over-17)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBZ confess)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP (VB see)
                (NP (DT the) (NN thing))))))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (DT the) (NN laird))
    (. .)))

nsubj(confess-3, I-2)
ccomp(returned-12, confess-3)
nsubj(see-7, I-4)
aux(see-7, do-5)
neg(see-7, n't-6)
ccomp(confess-3, see-7)
det(thing-9, the-8)
dobj(see-7, thing-9)
root(ROOT-0, returned-12)
det(laird-14, the-13)
nsubj(returned-12, laird-14)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (DT the) (NN question))
    (VP (VBZ needs) (RB not)
      (VP (VB keep)
        (NP (PRP you))
        (PRT (RP out))
        (PP (IN of)
          (NP
            (NP (NN bed))
            (, ,)
            (NP (NNP Dawtie))))))
    (. !)))

cc(needs-5, But-2)
det(question-4, the-3)
nsubj(needs-5, question-4)
root(ROOT-0, needs-5)
neg(needs-5, not-6)
dep(needs-5, keep-7)
dobj(keep-7, you-8)
prep_out_of(keep-7, bed-11)
appos(bed-11, Dawtie-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (ADVP (RB often))
      (SBAR
        (S
          (NP
            (NP (DT a) (NN girl))
            (PP (IN in)
              (NP (PRP$ your) (NN position))))
          (VP (VBZ takes)
            (NP
              (NP (DT an) (NN interest))
              (PP (IN in)
                (NP (DT the) (JJ abstract))))))))
    (. !)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
neg(is-2, not-3)
advmod(is-2, often-4)
det(girl-6, a-5)
nsubj(takes-10, girl-6)
poss(position-9, your-8)
prep_in(girl-6, position-9)
ccomp(is-2, takes-10)
det(interest-12, an-11)
dobj(takes-10, interest-12)
det(abstract-15, the-14)
prep_in(interest-12, abstract-15)

(ROOT
  (S
    (ADVP (IN Besides))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD resumed) (, ,)
          (S
            (NP (DT another) (NN argument))
            (VP (VBG occurring)
              (PP (TO to)
                (NP (PRP him)))))))
      (, ,) (`` ``))
    (NP
      (NP (DT a) (NN thing))
      (PP (IN of)
        (NP
          (NP (JJ such) (JJ historical) (NN value))
          (CC and)
          (NP (NN interest)))))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB be)
            (SBAR
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (VP (VBN cared)
                      (PP (IN for))))))
              (, ,) (RB not)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (PP (IN in)
                      (NP (NN danger)))
                    (NP (DT every) (NN moment))))))))))
    (. .) ('' '')))

advmod(ought-22, Besides-1)
nsubj(resumed-5, he-4)
parataxis(ought-22, resumed-5)
det(argument-8, another-7)
nsubj(occurring-9, argument-8)
dep(resumed-5, occurring-9)
prep_to(occurring-9, him-11)
det(thing-15, a-14)
nsubj(ought-22, thing-15)
nsubj(be-24, thing-15)
amod(value-19, such-17)
amod(value-19, historical-18)
prep_of(thing-15, value-19)
prep_of(thing-15, interest-21)
conj_and(value-19, interest-21)
root(ROOT-0, ought-22)
aux(be-24, to-23)
xcomp(ought-22, be-24)
advmod(cared-28, where-25)
nsubjpass(cared-28, it-26)
auxpass(cared-28, was-27)
advcl(be-24, cared-28)
prep(cared-28, for-29)
dep(moment-38, not-31)
advmod(moment-38, where-32)
nsubj(moment-38, it-33)
cop(moment-38, was-34)
prep_in(moment-38, danger-36)
det(moment-38, every-37)
dep(cared-28, moment-38)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (MD might)
      (VP (VB be)
        (NP
          (NP (NN something))
          (PP (IN in)
            (NP (DT that))))
        (PRN (, ,) ('' '')
          (SINV
            (VP (VBD allowed))
            (NP (NNP Dawtie)))
          (, ,) (`` ``))
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBD were)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (NN everybody))
                  (VP (MD could)
                    (VP (VB see)
                      (NP (PRP it)))))))))))
    (. .)))

expl(something-5, There-2)
aux(something-5, might-3)
cop(something-5, be-4)
root(ROOT-0, something-5)
prep_in(something-5, that-7)
parataxis(something-5, allowed-10)
nsubj(allowed-10, Dawtie-11)
mark(were-16, if-14)
nsubj(were-16, it-15)
advcl(something-5, were-16)
advmod(see-20, where-17)
nsubj(see-20, everybody-18)
aux(see-20, could-19)
advcl(were-16, see-20)
dobj(see-20, it-21)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB where))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN good))
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBP be)
              (PP (CC but)
                (IN for)
                (NP
                  (NP (DT the) (NNS eyes))
                  (PP (IN of)
                    (NP (CD one) (NN man))))))))))
    (. ?) ('' '')))

cc(is-3, But-1)
advmod(is-3, where-2)
root(ROOT-0, is-3)
det(good-5, the-4)
nsubj(is-3, good-5)
mark(be-8, if-6)
nsubj(be-8, it-7)
dep(good-5, be-8)
cc(be-8, but-9)
det(eyes-12, the-11)
prep_for(be-8, eyes-12)
num(man-15, one-14)
prep_of(eyes-12, man-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS eyes))
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD meant)))))
    (VP (VBD fixed)
      (NP (PRP themselves))
      (PP (IN upon)
        (NP (PRP her)))
      (SBAR (IN till)
        (S
          (NP (PRP$ their) (NN gaze))
          (VP (VBD grew)
            (PP (TO to)
              (NP (DT a) (JJ stony) (NN stare)))))))
    (. .)))

det(eyes-2, The-1)
nsubj(fixed-5, eyes-2)
nsubj(meant-4, she-3)
rcmod(eyes-2, meant-4)
root(ROOT-0, fixed-5)
dobj(fixed-5, themselves-6)
prep_upon(fixed-5, her-8)
mark(grew-12, till-9)
poss(gaze-11, their-10)
nsubj(grew-12, gaze-11)
advcl(fixed-5, grew-12)
det(stare-16, a-14)
amod(stare-16, stony-15)
prep_to(grew-12, stare-16)

(ROOT
  (S
    (NP (PRP She))
    (ADVP (RB _))
    (VP (MD must)
      (ADVP (RB _))
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (NP (PRP it)))))))
    (. !)))

nsubj(know-5, She-1)
advmod(know-5, _-2)
aux(know-5, must-3)
advmod(know-5, _-4)
root(ROOT-0, know-5)
mark(had-8, that-6)
nsubj(had-8, he-7)
ccomp(know-5, had-8)
dobj(had-8, it-9)

(ROOT
  (SQ (CC Or)
    (VBD did)
    (NP (PRP she))
    (VP
      (ADVP (RB only))
      (VB suspect))
    (. ?)))

cc(suspect-5, Or-1)
aux(suspect-5, did-2)
nsubj(suspect-5, she-3)
advmod(suspect-5, only-4)
root(ROOT-0, suspect-5)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must) (RB not)
      (VP (VB commit)
        (NP (PRP himself))))
    (. !)))

nsubj(commit-4, He-1)
aux(commit-4, must-2)
neg(commit-4, not-3)
root(ROOT-0, commit-4)
dobj(commit-4, himself-5)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must)
      (VP (VB set)
        (NP (DT a) (NN watch))
        (PP (IN on)
          (NP
            (NP (DT the) (NN door))
            (PP (IN of)
              (NP (PRP$ his) (NNS lips)))))))
    (. !)))

nsubj(set-3, He-1)
aux(set-3, must-2)
root(ROOT-0, set-3)
det(watch-5, a-4)
dobj(set-3, watch-5)
det(door-8, the-7)
prep_on(set-3, door-8)
poss(lips-11, his-10)
prep_of(door-8, lips-11)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WP What) (DT an) (JJ uncomfortable) (NN girl))
      (S
        (VP (TO to)
          (VP (VB have)
            (PP (IN in)
              (NP (DT the) (NN house)))))))
    (. !)))

det(girl-4, What-1)
det(girl-4, an-2)
amod(girl-4, uncomfortable-3)
nsubj(have-6, girl-4)
aux(have-6, to-5)
root(ROOT-0, have-6)
det(house-9, the-8)
prep_in(have-6, house-9)

(ROOT
  (FRAG
    (INTJ (UH Oh))
    (, ,)
    (NP (DT those) (JJ self-righteous) (NNS Ingrams))
    (. !)))

discourse(Ingrams-5, Oh-1)
det(Ingrams-5, those-3)
amod(Ingrams-5, self-righteous-4)
root(ROOT-0, Ingrams-5)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBD mischief)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBD did)))))))
    (. !)))

nsubj(mischief-2, What-1)
root(ROOT-0, mischief-2)
nsubj(did-4, they-3)
ccomp(mischief-2, did-4)

(ROOT
  (S
    (NP (PRP$ His) (NN impulse))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP
            (VP (VB dart)
              (PP (IN into)
                (NP (PRP$ his) (NN treasure-cave))))
            (, ,)
            (VP (VB lock)
              (NP (PRP himself))
              (PP (IN in)))
            (, ,)
            (CC and)
            (VP (VB hug)
              (NP (DT the)
                (ADJP (JJ radiant))
                (NN chalice)))))))
    (. .)))

poss(impulse-2, His-1)
nsubj(was-3, impulse-2)
nsubj(dart-5, impulse-2)
nsubj(lock-10, impulse-2)
nsubj(hug-15, impulse-2)
root(ROOT-0, was-3)
aux(dart-5, to-4)
xcomp(was-3, dart-5)
poss(treasure-cave-8, his-7)
prep_into(dart-5, treasure-cave-8)
xcomp(was-3, lock-10)
conj_and(dart-5, lock-10)
dobj(lock-10, himself-11)
prep(lock-10, in-12)
xcomp(was-3, hug-15)
conj_and(dart-5, hug-15)
det(chalice-18, the-16)
amod(chalice-18, radiant-17)
dobj(hug-15, chalice-18)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD dared) (RB not))
    (. .)))

nsubj(dared-2, He-1)
root(ROOT-0, dared-2)
neg(dared-2, not-3)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must)
      (VP (VB endure)
        (ADVP (RB instead))
        (NP
          (NP (DT the) (JJ fastidious) (NN conscience)
            (CC and)
            (VBG probing) (NN tongue))
          (PP (IN of)
            (NP (DT an)
              (ADJP (JJ intrusive))
              (NN maid-servant))))))
    (. !)))

nsubj(endure-3, He-1)
aux(endure-3, must-2)
root(ROOT-0, endure-3)
advmod(endure-3, instead-4)
det(conscience-7, the-5)
amod(conscience-7, fastidious-6)
dobj(endure-3, conscience-7)
amod(tongue-10, probing-9)
dobj(endure-3, tongue-10)
conj_and(conscience-7, tongue-10)
det(maid-servant-14, an-12)
amod(maid-servant-14, intrusive-13)
prep_of(conscience-7, maid-servant-14)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD rejoined) (, ,)
          (PP (IN with)
            (NP (DT an) (NN attempt)))
          (PP (IN at)
            (NP (DT a) (NN smile))))))
    (, ,) (`` ``)
    (SBAR (IN if)
      (S
        (NP
          (NP (DT the) (NN pleasure))
          (NP (DT the) (CD one) (NN man)))
        (VP (VBD took)
          (PP (IN in)
            (NP (PRP it))))))
    (VP (MD should) (, ,)
      (SBAR (IN as)
        (S
          (VP (VBZ is)
            (ADJP (JJ easy)
              (S
                (VP (TO to)
                  (VP (VB imagine))))))))
      (, ,)
      (VP (VB exceed)
        (ADVP (RB immeasurably))
        (NP
          (NP (DT the) (JJ aggergate) (NN pleasure))
          (PP (IN of)
            (NP
              (NP (DT the) (NNS thousands))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD would)
                    (VP
                      (VP (VB look)
                        (PP (IN upon)
                          (NP (PRP it))))
                      (CC and)
                      (VP (VB pass)
                        (NP (PRP it))
                        (PP (IN by)))))))
              (PRN (: --)
                (FRAG (WP what) (RB then))))))))
    (. ?) ('' '')))

cc(exceed-33, But-2)
nsubj(rejoined-6, he-5)
parataxis(exceed-33, rejoined-6)
det(attempt-10, an-9)
prep_with(rejoined-6, attempt-10)
det(smile-13, a-12)
prep_at(rejoined-6, smile-13)
mark(took-22, if-16)
det(pleasure-18, the-17)
nsubj(took-22, pleasure-18)
det(man-21, the-19)
num(man-21, one-20)
dep(pleasure-18, man-21)
csubj(exceed-33, took-22)
prep_in(took-22, it-24)
aux(exceed-33, should-25)
mark(easy-29, as-27)
cop(easy-29, is-28)
advcl(exceed-33, easy-29)
aux(imagine-31, to-30)
xcomp(easy-29, imagine-31)
root(ROOT-0, exceed-33)
advmod(exceed-33, immeasurably-34)
det(pleasure-37, the-35)
amod(pleasure-37, aggergate-36)
dobj(exceed-33, pleasure-37)
det(thousands-40, the-39)
prep_of(pleasure-37, thousands-40)
nsubj(look-43, thousands-40)
nsubj(pass-47, thousands-40)
prep_by(pass-47, thousands-40)
aux(look-43, would-42)
rcmod(thousands-40, look-43)
prep_upon(look-43, it-45)
rcmod(thousands-40, pass-47)
conj_and(look-43, pass-47)
dobj(pass-47, it-48)
dep(then-52, what-51)
dep(thousands-40, then-52)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN man))
    (VP (MD would)
      (VP (VB enjoy)
        (NP (PRP it))
        (ADVP (DT the) (RBR more))
        (SBAR (IN that)
          (S
            (NP (DT many))
            (VP (VBD saw)
              (NP (PRP it)))))
        (: --)
        (SBAR (IN except)
          (S
            (NP (PRP he))
            (VP (VBD loved)
              (NP (PRP it))
              (PP (IN for)
                (NP (NN greed)))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP he))
                  (VP (MD would)
                    (VP (VB be)
                      (VP (VBG rejoicing)
                        (PP (IN in)
                          (NP (NN iniquity)))
                        (, ,)
                        (SBAR (IN for)
                          (S
                            (NP (DT the) (NN cup))
                            (VP (MD would) (RB not)
                              (VP (VB be)
                                (NP (PRP$ his))))))))))))))))
    (. .)))

det(man-3, The-2)
nsubj(enjoy-5, man-3)
aux(enjoy-5, would-4)
root(ROOT-0, enjoy-5)
dobj(enjoy-5, it-6)
dep(more-8, the-7)
advmod(enjoy-5, more-8)
mark(saw-11, that-9)
nsubj(saw-11, many-10)
ccomp(enjoy-5, saw-11)
dobj(saw-11, it-12)
mark(loved-16, except-14)
nsubj(loved-16, he-15)
advcl(enjoy-5, loved-16)
parataxis(enjoy-5, loved-16)
dobj(loved-16, it-17)
prep_for(loved-16, greed-19)
advmod(rejoicing-25, when-21)
nsubj(rejoicing-25, he-22)
aux(rejoicing-25, would-23)
aux(rejoicing-25, be-24)
advcl(loved-16, rejoicing-25)
prep_in(rejoicing-25, iniquity-27)
mark(his-35, for-29)
det(cup-31, the-30)
nsubj(his-35, cup-31)
aux(his-35, would-32)
neg(his-35, not-33)
cop(his-35, be-34)
advcl(rejoicing-25, his-35)

(ROOT
  (S (CC And)
    (ADJP (JJ anyhow))
    (, ,)
    (NP (PRP he))
    (VP (MD could) (RB not)
      (VP (VB take)
        (NP (PRP it))
        (PP (IN with)
          (NP (PRP him)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD died))))))
    (. !) ('' '')))

cc(take-7, And-1)
dep(take-7, anyhow-2)
nsubj(take-7, he-4)
aux(take-7, could-5)
neg(take-7, not-6)
root(ROOT-0, take-7)
dobj(take-7, it-8)
prep_with(take-7, him-10)
advmod(died-13, when-11)
nsubj(died-13, he-12)
advcl(take-7, died-13)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN face))
        (PP (IN of)
          (NP (DT the) (NN miser))))
      (VP (VBD grew)
        (NP (NN grayer))))
    (: ;)
    (S
      (NP (PRP$ his) (NN lip))
      (VP (VBD trembled)))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD said)
        (NP (NN nothing))))
    (. .)))

det(face-2, The-1)
nsubj(grew-6, face-2)
det(miser-5, the-4)
prep_of(face-2, miser-5)
root(ROOT-0, grew-6)
dobj(grew-6, grayer-7)
poss(lip-10, his-9)
nsubj(trembled-11, lip-10)
conj_but(grew-6, trembled-11)
nsubj(said-15, he-14)
conj_but(grew-6, said-15)
dobj(said-15, nothing-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (VP (VBG beginning)
        (S
          (VP (TO to)
            (VP (VB hate)
              (NP (NNP Dawtie)))))))
    (. .)))

nsubj(beginning-3, He-1)
nsubj(hate-5, He-1)
aux(beginning-3, was-2)
root(ROOT-0, beginning-3)
aux(hate-5, to-4)
xcomp(beginning-3, hate-5)
dobj(hate-5, Dawtie-6)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (NP (DT an) (NN enemy)))
    (. !)))

nsubj(enemy-4, She-1)
cop(enemy-4, was-2)
det(enemy-4, an-3)
root(ROOT-0, enemy-4)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD sought)
      (NP
        (NP (PRP$ his) (NN discomfiture))
        (, ,)
        (NP (PRP$ his) (NN misery))))
    (. !)))

nsubj(sought-2, She-1)
root(ROOT-0, sought-2)
poss(discomfiture-4, his-3)
dobj(sought-2, discomfiture-4)
poss(misery-7, his-6)
appos(discomfiture-4, misery-7)

(ROOT
  (FRAG
    (S
      (S
        (NP (PRP He))
        (VP (VBD had)
          (VP (VBN read)
            (NP (JJ strange) (NNS things))
            (PP (IN in)
              (NP (JJ certain) (JJ old) (NNS books))))))
      (, ,)
      (CC and)
      (S
        (NP (DT half))
        (VP (VBD believed)
          (NP
            (NP (DT some))
            (PP (IN of)
              (NP (PRP them)))))))
    (: :)
    (FRAG
      (WHNP (WP what))
      (SBAR (IN if)
        (S
          (NP (NNP Dawtie))
          (VP (VBD was)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP
                  (NP (DT those) (JJ evil) (NNS powers))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP
                        (VP (VB haunt)
                          (NP
                            (NP (DT a) (NN man))
                            (PP (IN in)
                              (NP (JJ pleasant) (NN shape)))))
                        (, ,)
                        (VP (VB learn)
                          (NP
                            (NP (DT the) (NNS secrets))
                            (PP (IN of)
                              (NP (PRP$ his) (NN heart)))))
                        (, ,)
                        (CC and)
                        (VP (VB gain)
                          (NP (NN influence))
                          (PP (IN over)
                            (NP (PRP him)))
                          (SBAR (IN that)
                            (S
                              (NP (PRP they))
                              (VP (MD may)
                                (VP (VB tempt)
                                  (S
                                    (NP (PRP him))
                                    (VP (TO to)
                                      (VP (VB yield)
                                        (NP (PRP$ his) (NN soul))
                                        (PP (TO to)
                                          (NP (DT the) (NN enemy)))))))))))))))))))))
    (. !)))

nsubj(read-3, He-1)
aux(read-3, had-2)
dep(one-22, read-3)
amod(things-5, strange-4)
dobj(read-3, things-5)
amod(books-9, certain-7)
amod(books-9, old-8)
prep_in(read-3, books-9)
nsubj(believed-13, half-12)
conj_and(read-3, believed-13)
dep(one-22, believed-13)
dobj(believed-13, some-14)
prep_of(some-14, them-16)
dep(one-22, what-18)
mark(one-22, if-19)
nsubj(one-22, Dawtie-20)
cop(one-22, was-21)
root(ROOT-0, one-22)
det(powers-26, those-24)
amod(powers-26, evil-25)
prep_of(one-22, powers-26)
nsubj(haunt-28, powers-26)
nsubj(learn-35, powers-26)
nsubj(gain-43, powers-26)
rcmod(powers-26, haunt-28)
det(man-30, a-29)
dobj(haunt-28, man-30)
amod(shape-33, pleasant-32)
prep_in(man-30, shape-33)
rcmod(powers-26, learn-35)
conj_and(haunt-28, learn-35)
det(secrets-37, the-36)
dobj(learn-35, secrets-37)
poss(heart-40, his-39)
prep_of(secrets-37, heart-40)
rcmod(powers-26, gain-43)
conj_and(haunt-28, gain-43)
dobj(gain-43, influence-44)
prep_over(gain-43, him-46)
mark(tempt-50, that-47)
nsubj(tempt-50, they-48)
aux(tempt-50, may-49)
ccomp(gain-43, tempt-50)
dobj(tempt-50, him-51)
nsubj(yield-53, him-51)
aux(yield-53, to-52)
xcomp(tempt-50, yield-53)
poss(soul-55, his-54)
dobj(yield-53, soul-55)
det(enemy-58, the-57)
prep_to(yield-53, enemy-58)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (VP (VBN set)
        (PP (IN on)
          (S
            (VP (VBG ruining)
              (NP (PRP him)))))))
    (. !)))

nsubjpass(set-3, She-1)
auxpass(set-3, was-2)
root(ROOT-0, set-3)
prepc_on(set-3, ruining-5)
dobj(ruining-5, him-6)

(ROOT
  (S
    (ADVP (RB Certainly))
    (NP (PRP she))
    (VP (VBD knew)
      (SBAR (IN that)
        (S
          (NP (NN cup))
          (VP (VBD was)
            (PP (IN in)
              (NP (PRP$ his) (NN possession)))))))
    (. !)))

advmod(knew-3, Certainly-1)
nsubj(knew-3, she-2)
root(ROOT-0, knew-3)
mark(was-6, that-4)
nsubj(was-6, cup-5)
ccomp(knew-3, was-6)
poss(possession-9, his-8)
prep_in(was-6, possession-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must)
      (VP (VB temporize)))
    (. !)))

nsubj(temporize-3, He-1)
aux(temporize-3, must-2)
root(ROOT-0, temporize-3)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must)
      (ADVP (RB _))
      (VP (VB seem)
        (S
          (NP (NNP _))
          (VP (TO to)
            (VP (VB listen))))))
    (. !)))

nsubj(seem-4, He-1)
aux(seem-4, must-2)
advmod(seem-4, _-3)
root(ROOT-0, seem-4)
dobj(seem-4, _-5)
nsubj(listen-7, _-5)
aux(listen-7, to-6)
xcomp(seem-4, listen-7)

(ROOT
  (S (CC But)
    (ADVP (RB as) (RB soon)
      (SBAR (IN as)
        (S
          (NP (NN fit) (NN reason))
          (VP (MD could)
            (VP (VB be)
              (VP (VBN found) (, ,)
                (PP (JJ such) (IN as)
                  (S
                    (VP
                      (VP (MD would) (RB neither)
                        (VP (VB compromise)
                          (NP (PRP him))))
                      (CC nor)
                      (VP (VB offend)
                        (NP (PRP her))))))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN sent)
          (PRT (RP away)))))
    (. !)))

cc(sent-24, But-1)
advmod(soon-3, as-2)
advmod(sent-24, soon-3)
mark(found-9, as-4)
nn(reason-6, fit-5)
nsubjpass(found-9, reason-6)
aux(found-9, could-7)
auxpass(found-9, be-8)
ccomp(soon-3, found-9)
aux(compromise-15, would-13)
advmod(compromise-15, neither-14)
prepc_such_as(found-9, compromise-15)
dobj(compromise-15, him-16)
prepc_such_as(found-9, offend-18)
conj_nor(compromise-15, offend-18)
dobj(offend-18, her-19)
nsubjpass(sent-24, she-21)
aux(sent-24, must-22)
auxpass(sent-24, be-23)
root(ROOT-0, sent-24)
prt(sent-24, away-25)

(ROOT
  (S (CC And)
    (PP (IN of)
      (NP (DT all) (NNS things)))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (MD must) (RB not)
        (VP (VB gain)
          (NP
            (NP (DT the) (NN means))
            (PP (IN of)
              (S
                (VP (VBG proving)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP she))
                      (ADVP (RB now))
                      (ADVP (RB perhaps))
                      (VP
                        (ADVP (RB only))
                        (VBN suspected))))))))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (VP (VBG seeking)
          (NP
            (NP (NN assurance))
            (PP (IN of))))))
    (. !)))

det(things-4, all-3)
prep_of(gain-9, things-4)
nsubj(gain-9, she-6)
nsubj(seeking-23, she-6)
aux(gain-9, must-7)
neg(gain-9, not-8)
root(ROOT-0, gain-9)
det(means-11, the-10)
dobj(gain-9, means-11)
prepc_of(means-11, proving-13)
dobj(suspected-19, what-14)
nsubj(suspected-19, she-15)
advmod(suspected-19, now-16)
advmod(suspected-19, perhaps-17)
advmod(suspected-19, only-18)
ccomp(proving-13, suspected-19)
aux(seeking-23, was-22)
conj_and(gain-9, seeking-23)
dobj(seeking-23, assurance-24)
prep(assurance-24, of-25)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD stood)
      (S
        (VP (VBG thinking))))
    (. .)))

nsubj(stood-2, He-1)
root(ROOT-0, stood-2)
xcomp(stood-2, thinking-3)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (VBD was))
      (CC but)
      (VP
        (PP (IN for)
          (NP
            (NP (DT a) (NN moment))
            (: ;)
            (PP (IN for)
              (NP (DT the) (JJ very) (JJ next) (NNS words)))
            (PP (IN from)
              (NP
                (NP (DT the) (NNS lips))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN girl))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD was)
                          (PP (TO to)
                            (NP (PRP him)))
                          (ADJP
                            (ADJP (RB little) (JJR more))
                            (PP (IN than)
                              (NP (DT a) (NN house-broom)))))))))))))
        (, ,) (VBD set)
        (S
          (NP (PRP him))
          (VP (VB face)
            (S
              (VP (TO to)
                (VP (VB face)
                  (PP (IN with)
                    (NP
                      (NP (NN reality))
                      (: --)
                      (NP
                        (NP (DT the) (CD one) (NN terror))
                        (PP (IN of)
                          (NP (DT the) (NN unreal)))))))))))))
    (. .)))

nsubj(was-2, It-1)
nsubj(set-29, It-1)
root(ROOT-0, was-2)
det(moment-6, a-5)
prep_for(set-29, moment-6)
det(words-12, the-9)
amod(words-12, very-10)
amod(words-12, next-11)
prep_for(moment-6, words-12)
det(lips-15, the-14)
prep_from(moment-6, lips-15)
det(girl-18, the-17)
prep_of(lips-15, girl-18)
nsubj(more-24, girl-18)
cop(more-24, was-20)
prep_to(more-24, him-22)
advmod(more-24, little-23)
rcmod(girl-18, more-24)
det(house-broom-27, a-26)
prep_than(more-24, house-broom-27)
conj_but(was-2, set-29)
nsubj(face-31, him-30)
nsubj(face-33, him-30)
ccomp(set-29, face-31)
aux(face-33, to-32)
xcomp(face-31, face-33)
prep_with(face-33, reality-35)
det(terror-39, the-37)
num(terror-39, one-38)
dep(reality-35, terror-39)
det(unreal-42, the-41)
prep_of(terror-39, unreal-42)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NNP Eh))
        (, ,)
        (NP (NN maister))
        (, ,)
        (NP (NN sir))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (NNP Dawtie))
        (, ,)
        (PP
          (PP (IN with)
            (NP
              (NP (DT the) (NNS tears))
              (PP (IN in)
                (NP (PRP$ her) (NNS eyes)))))
          (, ,)
          (CC and)
          (ADVP (RB now))
          (PP (IN at)
            (NP (JJ last) (NN breaking) (RP down))))
        (PP (IN in)
          (NP (PRP$ her) (JJ English)))))
    (, ,) (`` ``)
    (NP (NNP dinna) (NNP ye))
    (VP (VBZ _)
      (NP (NN ken) (NNS _))
      (`` `)
      (PP (IN at)
        (NP (NNP ye) (NNP _) (NNP hae) (NNP _)))
      (S
        (VP (TO to)
          (VP (VB gie)
            (NP (DT the) (NN man))
            (`` `)
            (PP (IN at)
              (NP (NN aucht)))
            (SBAR (IN that)
              (S
                (NP
                  (NP (NN gowden) (NN bicker))
                  (, ,)
                  (NP
                    (NP (DT the) (NN chance) (NN o) (POS '))
                    (NN buyin) (POS ')))
                ('' ')
                (VP (VBP t)
                  (ADVP (RB back)))))))))
    (. ?) ('' '')))

nsubj(said-9, Eh-2)
nsubj(said-9', Eh-2)
appos(Eh-2, maister-4)
appos(Eh-2, sir-6)
conj_and(said-9, said-9')
ccomp(_-32, said-9)
ccomp(_-32, said-9')
dobj(said-9, Dawtie-10)
det(tears-14, the-13)
prep_with(said-9, tears-14)
poss(eyes-17, her-16)
prep_in(tears-14, eyes-17)
advmod(said-9, now-20)
amod(breaking-23, last-22)
prep_at(said-9', breaking-23)
dep(breaking-23, down-24)
poss(English-27, her-26)
prep_in(said-9, English-27)
nn(ye-31, dinna-30)
nsubj(_-32, ye-31)
root(ROOT-0, _-32)
nn(_-34, ken-33)
dobj(_-32, _-34)
nn(_-40, ye-37)
nn(_-40, _-38)
nn(_-40, hae-39)
prep_at(_-32, _-40)
aux(gie-42, to-41)
vmod(_-32, gie-42)
det(man-44, the-43)
dobj(gie-42, man-44)
prep_at(gie-42, aucht-47)
mark(t-59, that-48)
nn(bicker-50, gowden-49)
nsubj(t-59, bicker-50)
det(o-54, the-52)
nn(o-54, chance-53)
poss(buyin-56, o-54)
appos(bicker-50, buyin-56)
poss(bicker-50, buyin-56)
ccomp(gie-42, t-59)
advmod(t-59, back-60)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP (VBD shivered))
    (. .)))

det(laird-2, The-1)
nsubj(shivered-3, laird-2)
root(ROOT-0, shivered-3)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD dared) (RB not)
      (VP (VB say) (: :)
        (SBARQ (`` ``)
          (WHADVP (WRB How))
          (SQ (VBP do)
            (NP (PRP you))
            (VP (VB know)))
          (. ?) ('' ''))))))

nsubj(dared-2, He-1)
root(ROOT-0, dared-2)
neg(dared-2, not-3)
dep(dared-2, say-4)
advmod(know-10, How-7)
aux(know-10, do-8)
nsubj(know-10, you-9)
ccomp(say-4, know-10)
parataxis(say-4, know-10)

(ROOT
  (S (IN for)
    (NP (PRP he))
    (VP (VBD dared) (RB not)
      (VP (VB hear)
        (NP
          (NP (DT the) (NN thing))
          (VP (VBN proved)
            (PP (TO to)
              (NP (PRP him)))))))
    (. .)))

dep(dared-3, for-1)
nsubj(dared-3, he-2)
root(ROOT-0, dared-3)
neg(dared-3, not-4)
dep(dared-3, hear-5)
det(thing-7, the-6)
dobj(hear-5, thing-7)
vmod(thing-7, proved-8)
prep_to(proved-8, him-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP she))
        (VP (VBD did)
          (VP (VB know)))))
    (, ,)
    (NP (PRP he))
    (VP (MD would) (RB not)
      (VP (VB front)
        (NP (PRP$ her) (NN proof))))
    (. !)))

mark(know-4, If-1)
nsubj(know-4, she-2)
aux(know-4, did-3)
advcl(front-9, know-4)
nsubj(front-9, he-6)
aux(front-9, would-7)
neg(front-9, not-8)
root(ROOT-0, front-9)
poss(proof-11, her-10)
dobj(front-9, proof-11)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would) (RB not)
      (VP (VB have)
        (S
          (NP (PRP her))
          (ADVP (RB even))
          (VP (VB suppose)
            (S
              (NP (PRP it))
              (NP (DT an) (JJ acknowledged) (NN fact)))))))
    (. !)))

nsubj(have-4, He-1)
aux(have-4, would-2)
neg(have-4, not-3)
root(ROOT-0, have-4)
nsubj(suppose-7, her-5)
advmod(suppose-7, even-6)
ccomp(have-4, suppose-7)
nsubj(fact-11, it-8)
det(fact-11, an-9)
amod(fact-11, acknowledged-10)
xcomp(suppose-7, fact-11)

(ROOT
  (S
    (S
      (S (`` ``)
        (SBAR (IN If)
          (S
            (NP (PRP I))
            (VP (VBD had)
              (NP (DT the) (NN cup)))))
        (, ,) ('' '')
        (NP (PRP he))
        (VP (VBD began)))
      (: --)
      (CC but)
      (S
        (NP (PRP she))
        (VP (VBN interrupted)
          (NP (PRP him)))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (NN time))
          (SBAR
            (S
              (NP (PRP they))
              (VP (MD should)
                (VP (VB have)
                  (VP (VBN done)
                    (PP (IN with)
                      (S
                        (VP (VBG lying))))))))))))
    (. !)))

mark(had-4, If-2)
nsubj(had-4, I-3)
advcl(began-10, had-4)
det(cup-6, the-5)
dobj(had-4, cup-6)
nsubj(began-10, he-9)
root(ROOT-0, began-10)
nsubj(interrupted-14, she-13)
conj_but(began-10, interrupted-14)
dobj(interrupted-14, him-15)
nsubj(time-19, it-17)
cop(time-19, was-18)
parataxis(began-10, time-19)
nsubj(done-23, they-20)
aux(done-23, should-21)
aux(done-23, have-22)
rcmod(time-19, done-23)
prepc_with(done-23, lying-25)

(ROOT
  (S (`` ``)
    (NP (PRP Ye))
    (VP (VBP ken)
      (SBAR
        (S
          (NP (PRP ye))
          (VP (VBP hae)
            (NP (DT the) (NN cup))
            (, ,)
            (ADVP (RB sir))))))
    (. !) ('' '')))

nsubj(ken-3, Ye-2)
root(ROOT-0, ken-3)
nsubj(hae-5, ye-4)
ccomp(ken-3, hae-5)
det(cup-7, the-6)
dobj(hae-5, cup-7)
advmod(hae-5, sir-9)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP I))
    (VP (VBP ken)
      (ADJP (JJ tu))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP I))
          (VP (VBD saw)
            (SBAR
              (S
                (NP (POS '))
                (VP (VBP t)
                  (SBAR
                    (S
                      (NP
                        (NP (FW i) (POS '))
                        (NN yer) (NN han))
                      (VP (VBZ 's)))))))))))
    (. !) ('' '')))

cc(ken-4, And-2)
nsubj(ken-4, I-3)
root(ROOT-0, ken-4)
acomp(ken-4, tu-5)
mark(saw-9, for-7)
nsubj(saw-9, I-8)
advcl(ken-4, saw-9)
ccomp(saw-9, t-11)
poss(han-15, i-12)
nn(han-15, yer-14)
nsubj('s-16, han-15)
ccomp(t-11, 's-16)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBZ shameless) (, ,)
      (S
        (VP (VBG prying)
          (ADVP (RB hussy)))))
    (. !) ('' '')))

nsubj(shameless-3, You-2)
root(ROOT-0, shameless-3)
xcomp(shameless-3, prying-5)
advmod(prying-5, hussy-6)

(ROOT
  (S
    (S
      (S
        (NP (PRP he))
        (VP (VBD began) (, ,)
          (PP (IN in)
            (NP (DT a) (NN rage)))
          (PP (IN at)
            (NP (JJ last)))))
      (: --)
      (CC but)
      (S
        (NP
          (NP (DT the)
            (ADJP (JJ eager) (, ,) (JJ tearful))
            (NNS earnestness))
          (PP (IN of)
            (NP (PRP$ her) (NN face))))
        (VP (VBD made)
          (SBAR
            (S
              (NP (PRP him))
              (VP (VBP bethink)
                (NP (PRP himself))))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (MD would) (RB not)
        (VP (VB do)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP
                  (NP (DT an) (NN enemy))
                  (PP (IN of)
                    (NP (PRP her))))))))))
    (. !)))

nsubj(began-2, he-1)
root(ROOT-0, began-2)
det(rage-6, a-5)
prep_in(began-2, rage-6)
prep_at(began-2, last-8)
det(earnestness-15, the-11)
amod(tearful-14, eager-12)
amod(earnestness-15, tearful-14)
nsubj(made-19, earnestness-15)
poss(face-18, her-17)
prep_of(earnestness-15, face-18)
conj_but(began-2, made-19)
nsubj(bethink-21, him-20)
ccomp(made-19, bethink-21)
dobj(bethink-21, himself-22)
nsubj(do-27, it-24)
nsubj(make-29, it-24)
aux(do-27, would-25)
neg(do-27, not-26)
parataxis(began-2, do-27)
aux(make-29, to-28)
xcomp(do-27, make-29)
det(enemy-31, an-30)
dobj(make-29, enemy-31)
prep_of(enemy-31, her-33)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Tell)
        (NP (PRP me))
        (, ,)
        (NP (NNP Dawtie))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD said) (, ,)
          (PP (IN with)
            (NP
              (NP (JJ sudden) (NN change))
              (PP (IN of)
                (NP (NN tone)))))))
      (, ,))
    (`` ``)
    (SBAR
      (WHADVP (WRB how))
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP (PRP you)))))
    (VP (VBD came)
      (S
        (VP (TO to)
          (VP (VB see)
            (NP (PRP it))))))
    (. .) ('' '')))

csubj(came-22, Tell-2)
dobj(Tell-2, me-3)
dobj(Tell-2, Dawtie-5)
nsubj(said-9, he-8)
parataxis(came-22, said-9)
amod(change-13, sudden-12)
prep_with(said-9, change-13)
prep_of(change-13, tone-15)
advmod(you-21, how-18)
nsubj(you-21, it-19)
cop(you-21, was-20)
csubj(came-22, you-21)
root(ROOT-0, came-22)
aux(see-24, to-23)
xcomp(came-22, see-24)
dobj(see-24, it-25)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD told)
      (NP
        (NP
          (NP (PRP him))
          (NP (DT all)))
        (: --)
        (SBAR
          (WHADVP (WRB how)
            (CC and)
            (WRB when))
          (PRN (: ;)
            (S (CC and)
              (NP (PRP he))
              (VP (VBD knew)
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN seen))))))))
          (S
            (NP (PRP her))
            (VP (VBP see)
              (NP (PRP him)))))))
    (. .)))

nsubj(told-2, She-1)
root(ROOT-0, told-2)
dobj(told-2, him-3)
tmod(see-18, him-3)
det(him-3, all-4)
advmod(see-18, how-6)
cc(how-6, and-7)
dep(how-6, when-8)
cc(knew-12, and-10)
nsubj(knew-12, he-11)
dep(see-18, knew-12)
mark(seen-16, that-13)
nsubj(seen-16, he-14)
aux(seen-16, had-15)
ccomp(knew-12, seen-16)
nsubj(see-18, her-17)
rcmod(him-3, see-18)
dobj(see-18, him-19)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD managed)
      (S
        (VP (TO to)
          (VP (VB give)
            (NP (DT a) (JJ poor) (JJ little) (NN laugh))))))
    (. .)))

nsubj(managed-2, He-1)
nsubj(give-4, He-1)
root(ROOT-0, managed-2)
aux(give-4, to-3)
xcomp(managed-2, give-4)
det(laugh-8, a-5)
amod(laugh-8, poor-6)
amod(laugh-8, little-7)
dobj(give-4, laugh-8)

(ROOT
  (S (`` ``)
    (NP (DT All))
    (VP (VBZ is) (RB not)
      (NP
        (NP (NN gold))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ glitters))))
        (, ,)
        (NP (NNP Dawtie))))
    (. !) ('' '')))

nsubj(gold-5, All-2)
cop(gold-5, is-3)
neg(gold-5, not-4)
root(ROOT-0, gold-5)
nsubj(glitters-7, gold-5)
rcmod(gold-5, glitters-7)
appos(gold-5, Dawtie-9)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (DT The) (NN cup))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD saw)))))
      (VP (VBD was) (RB not)
        (NP
          (NP (DT the) (NN one))
          (PP (IN in)
            (NP (DT the) (NN book))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT an) (NN imitation))
        (PP (IN of)
          (NP (PRP it)))
        (: --)
        (NP
          (NP (JJ mere) (JJ gilded) (NN tin))
          (CC and)
          (NP (VBN colored) (NN glass)))
        (: --))
      (VP (VBN copied)
        (PP (IN from)
          (NP (DT the) (NN picture)))
        (, ,)
        (ADVP
          (ADVP (RB as) (RB near))
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (MD could)
                (VP (VB make)
                  (NP (PRP it))
                  (: --)
                  (S
                    (ADVP (RB just))
                    (VP (TO to)
                      (VP (VB see)
                        (ADVP
                          (ADVP (RBR better))
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP it))
                              (VP (MD must)
                                (VP (VB have)
                                  (VP (VBN been)
                                    (ADJP (JJ like))))))))))))))))))
    (. .)))

det(cup-3, The-2)
nsubj(one-9, cup-3)
nsubj(saw-5, you-4)
rcmod(cup-3, saw-5)
cop(one-9, was-6)
neg(one-9, not-7)
det(one-9, the-8)
root(ROOT-0, one-9)
det(book-12, the-11)
prep_in(one-9, book-12)
det(imitation-16, an-15)
nsubj(copied-27, imitation-16)
prep_of(imitation-16, it-18)
amod(tin-22, mere-20)
amod(tin-22, gilded-21)
dep(imitation-16, tin-22)
amod(glass-25, colored-24)
dep(imitation-16, glass-25)
conj_and(tin-22, glass-25)
conj_but(one-9, copied-27)
det(picture-30, the-29)
prep_from(copied-27, picture-30)
advmod(near-33, as-32)
advmod(copied-27, near-33)
mark(make-37, as-34)
nsubj(make-37, they-35)
aux(make-37, could-36)
advcl(near-33, make-37)
ccomp(near-33, make-37)
dobj(make-37, it-38)
advmod(see-42, just-40)
aux(see-42, to-41)
parataxis(make-37, see-42)
vmod(make-37, see-42)
advmod(see-42, better-43)
dobj(like-49, what-44)
nsubj(like-49, it-45)
aux(like-49, must-46)
aux(like-49, have-47)
cop(like-49, been-48)
advcl(better-43, like-49)
ccomp(better-43, like-49)

(ROOT
  (S
    (FRAG
      (INTJ (WRB Why))
      (, ,)
      (NP (PRP$ my) (JJ good) (NN girl)))
    (, ,)
    (NP (DT that) (NN cup))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (NN worth) (NNS thousands))
          (PP (IN of)
            (NP (NNS pounds))))))
    (. !)))

discourse(girl-5, Why-1)
poss(girl-5, my-3)
amod(girl-5, good-4)
dep(thousands-12, girl-5)
det(cup-8, that-7)
nsubj(thousands-12, cup-8)
aux(thousands-12, would-9)
cop(thousands-12, be-10)
nn(thousands-12, worth-11)
root(ROOT-0, thousands-12)
prep_of(thousands-12, pounds-14)

(ROOT
  (S (RB So)
    (VP
      (VP (VB go)
        (PP (TO to)
          (NP (NN bed))))
      (, ,)
      (CC and)
      (VP (VBP do) (RB n't)
        (VP (VB trouble)
          (NP (PRP yourself))
          (PP (IN about)
            (NP (JJ gold) (NNS cups))))))
    (. .)))

advmod(go-2, So-1)
root(ROOT-0, go-2)
prep_to(go-2, bed-4)
aux(trouble-9, do-7)
neg(trouble-9, n't-8)
conj_and(go-2, trouble-9)
dobj(trouble-9, yourself-10)
amod(cups-13, gold-12)
prep_about(trouble-9, cups-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (ADJP (JJ likely)
        (SBAR
          (S
            (NP
              (NP (DT any))
              (PP (IN of)
                (NP (PRP them))))
            (VP (MD will)
              (VP (VB come)
                (NP (PRP$ our) (NN way))))))))
    (. !) ('' '')))

nsubj(likely-4, It-1)
cop(likely-4, is-2)
neg(likely-4, not-3)
root(ROOT-0, likely-4)
nsubj(come-9, any-5)
prep_of(any-5, them-7)
aux(come-9, will-8)
ccomp(likely-4, come-9)
poss(way-11, our-10)
dobj(come-9, way-11)

(ROOT
  (S
    (NP
      (NP (NN Simple))
      (PP (IN as)
        (NP (NNP Dawtie))))
    (VP (VBD was) (, ,)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD did) (RB not)
            (VP (VB believe)
              (NP (PRP him)))))))
    (. .)))

nsubj(was-4, Simple-1)
prep_as(Simple-1, Dawtie-3)
root(ROOT-0, was-4)
nsubj(believe-9, she-6)
aux(believe-9, did-7)
neg(believe-9, not-8)
ccomp(was-4, believe-9)
dobj(believe-9, him-10)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (VP (VBD saw)
      (ADJP (RB no) (JJ good)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN done)
                (PP (IN by)
                  (S
                    (VP (VBG disputing)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP he))
                          (VP (MD ought)
                            (S
                              (VP (TO to)
                                (VP (VB know))))))))))))))))
    (. .)))

cc(saw-3, But-1)
nsubj(saw-3, she-2)
root(ROOT-0, saw-3)
neg(good-5, no-4)
acomp(saw-3, good-5)
aux(done-8, to-6)
auxpass(done-8, be-7)
xcomp(good-5, done-8)
agent(done-8, disputing-10)
dobj(ought-13, what-11)
nsubj(know-15, what-11)
nsubj(ought-13, he-12)
ccomp(disputing-10, ought-13)
aux(know-15, to-14)
xcomp(ought-13, know-15)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (ADVP (RB wasna))
    (VP (VB aboot)
      (NP (DT the) (JJ gold) (NN cup))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD was)
            (VP (VBN troublin) (`` ')
              (NP (NN mysel))
              ('' '))))))
    (. !) ('' '')))

nsubj(aboot-4, It-2)
advmod(aboot-4, wasna-3)
root(ROOT-0, aboot-4)
det(cup-7, the-5)
amod(cup-7, gold-6)
dobj(aboot-4, cup-7)
nsubjpass(troublin-10, I-8)
auxpass(troublin-10, was-9)
dep(aboot-4, troublin-10)
dobj(troublin-10, mysel-12)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said) (, ,)
      (ADVP (RB hesitatingly)))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
advmod(said-2, hesitatingly-4)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP are)
      (ADVP (RB right) (RB there)))
    (. !) ('' '')))

nsubj(are-3, You-2)
root(ROOT-0, are-3)
advmod(there-5, right-4)
advmod(are-3, there-5)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD replied) (, ,)
      (PP (IN with)
        (NP (DT another) (JJ deathly) (NN laugh)))
      (, ,)
      (SBAR (`` ``)
        (S
          (NP (PRP it))
          (VP (VBD was) (RB not)))))
    (. !)))

nsubj(replied-2, he-1)
root(ROOT-0, replied-2)
det(laugh-7, another-5)
amod(laugh-7, deathly-6)
prep_with(replied-2, laugh-7)
nsubj(was-11, it-10)
ccomp(replied-2, was-11)
neg(was-11, not-12)

(ROOT
  (S (CC But)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (VP (VBN been)
          (ADJP (JJ troubling)
            (NP (PRP me)))
          (PP (IN about)
            (NP (NN nothing)))
          (NP (PDT half) (DT the) (NN night)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG shivering)
          (PP (IN with)
            (NP (NN cold))))))
    (. !)))

nsubj(troubling-5, you-2)
aux(troubling-5, have-3)
cop(troubling-5, been-4)
root(ROOT-0, troubling-5)
dep(troubling-5, me-6)
prep_about(troubling-5, nothing-8)
predet(night-11, half-9)
det(night-11, the-10)
tmod(troubling-5, night-11)
nsubj(shivering-16, I-14)
aux(shivering-16, am-15)
conj_and(troubling-5, shivering-16)
prep_with(shivering-16, cold-18)

(ROOT
  (S
    (NP (PRP We))
    (ADVP (RB really))
    (VP (MD must) (, ,)
      (PP (DT both) (IN of)
        (NP (PRP us)))
      (, ,)
      (VP (VB go)
        (PP (TO to)
          (NP (NN bed)))))
    (. !)))

nsubj(go-9, We-1)
advmod(go-9, really-2)
aux(go-9, must-3)
dep(go-9, both-5)
prep_of(go-9, us-7)
root(ROOT-0, go-9)
prep_to(go-9, bed-11)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (MD would))))
    (NP (PRP$ your) (NN mistress))
    (VP (VBP say))
    (. !) ('' '')))

nsubj(would-2, What-1)
advcl(say-5, would-2)
poss(mistress-4, your-3)
nsubj(say-5, mistress-4)
root(ROOT-0, say-5)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No)))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP
      (NP (NNP Dawtie))
      (, ,) (`` ``)
      (S
        (S
          (NP (PRP it))
          (ADVP (RB wasna))
          (VP (VBP aboot)
            (NP
              (NP (DT the) (NN cup))
              (, ,)
              (NP (NN gowd))
              (CC or)
              (NP (DT no) (NN gowd)))))
        (: ;)
        (S
          (NP (PRP it))
          (VP
            (VP (VBD was))
            (CC and)
            (VP (VBZ is)
              (VP (VBN aboot)
                (NP
                  (NP (PRP$ my) (NN maister))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBP 'm)
                        (ADJP (JJ troubled))))))))))))
    (. !)))

dep(persisted-5, No-2)
root(ROOT-0, persisted-5)
nsubj(persisted-5, Dawtie-6)
nsubj(aboot-11, it-9)
advmod(aboot-11, wasna-10)
dep(Dawtie-6, aboot-11)
det(cup-13, the-12)
dobj(aboot-11, cup-13)
dobj(aboot-11, gowd-15)
conj_or(cup-13, gowd-15)
neg(gowd-18, no-17)
dobj(aboot-11, gowd-18)
conj_or(cup-13, gowd-18)
nsubj(was-21, it-20)
nsubjpass(aboot-24, it-20)
parataxis(aboot-11, was-21)
auxpass(aboot-24, is-23)
parataxis(aboot-11, aboot-24)
conj_and(was-21, aboot-24)
poss(maister-26, my-25)
dobj(aboot-24, maister-26)
nsubj(troubled-29, I-27)
cop(troubled-29, 'm-28)
rcmod(maister-26, troubled-29)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (NP
        (NP (JJ terrible) (NN feart))
        (PP (IN for)
          (NP (PRP ye))))
      (, ,)
      (ADVP (RB sir)))
    (. !)))

nsubj(feart-4, I-1)
cop(feart-4, 'm-2)
amod(feart-4, terrible-3)
root(ROOT-0, feart-4)
prep_for(feart-4, ye-6)
advmod(feart-4, sir-8)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (VBP 're)
      (NP
        (NP
          (NP (DT a) (NN worshiper) (NN o) (POS '))
          (NNP Mammon))
        (, ,)
        (NP (NN sir))))
    (. !) ('' '')))

nsubj(Mammon-7, Ye-1)
cop(Mammon-7, 're-2)
det(o-5, a-3)
nn(o-5, worshiper-4)
poss(Mammon-7, o-5)
root(ROOT-0, Mammon-7)
appos(Mammon-7, sir-9)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP (VBD laughed) (, ,)
      (SBAR (IN for)
        (S
          (NP (DT the) (NN danger))
          (VP (VBD was)
            (ADJP (RP over))))))
    (. !)))

det(laird-2, The-1)
nsubj(laughed-3, laird-2)
root(ROOT-0, laughed-3)
mark(over-9, for-5)
det(danger-7, the-6)
nsubj(over-9, danger-7)
cop(over-9, was-8)
advcl(laughed-3, over-9)

(ROOT
  (S (: --)
    (PP (IN to)
      (NP
        (NP (NNP Dawtie) (POS 's))
        (JJ deep) (NN dismay)))
    (NP (PRP he))
    (VP (VBD laughed))
    (. !)))

poss(dismay-6, Dawtie-3)
amod(dismay-6, deep-5)
prep_to(laughed-8, dismay-6)
nsubj(laughed-8, he-7)
root(ROOT-0, laughed-8)

(ROOT
  (S (`` ``)
    (FRAG
      (NP (PRP$ My) (JJ poor) (NN girl)))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (NP (PRP you))
        (VP (VB take)
          (NP
            (NP (DT an) (JJ innocent) (NN love))
            (PP (IN of)
              (NP
                (NP (JJ curious) (NNS things))
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN worship))
                    (PP (IN of)
                      (NP (NNP Mammon)))))))))))
    (. !)))

poss(girl-4, My-2)
amod(girl-4, poor-3)
dep(said-8, girl-4)
nsubj(said-8, he-7)
root(ROOT-0, said-8)
nsubj(take-12, you-11)
ccomp(said-8, take-12)
det(love-15, an-13)
amod(love-15, innocent-14)
dobj(take-12, love-15)
amod(things-18, curious-17)
prep_of(love-15, things-18)
det(worship-21, the-20)
prep_for(things-18, worship-21)
prep_of(worship-21, Mammon-23)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP (VB imagine)
        (S
          (NP (PRP me))
          (ADJP (JJ jesting)))))
    (. .)))

aux(imagine-3, Do-1)
neg(imagine-3, n't-2)
root(ROOT-0, imagine-3)
nsubj(jesting-5, me-4)
xcomp(imagine-3, jesting-5)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (PRP you))
      (VP (VB believe)
        (NP
          (NP
            (NP (DT an) (JJ old) (NN man))
            (PP (IN like)
              (NP (PRP me))))
          (, ,)
          (NP
            (NP (DT an) (JJR elder))
            (PP (IN of)
              (NP (DT the) (NN kirk))))
          (, ,)
          (NP
            (NP (DT a) (NN dispenser))
            (PP (IN of)
              (NP (PRP$ her) (JJ sacred) (NNS things))))
          (, ,)
          (NP
            (NP (JJ guilty))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ awful) (NN crime))
                (PP (IN of)
                  (NP (NNP Mammon) (NNP worship)))))))))
    (. ?) ('' '')))

advmod(believe-4, How-1)
aux(believe-4, could-2)
nsubj(believe-4, you-3)
root(ROOT-0, believe-4)
det(man-7, an-5)
amod(man-7, old-6)
dobj(believe-4, man-7)
prep_like(man-7, me-9)
det(elder-12, an-11)
appos(man-7, elder-12)
det(kirk-15, the-14)
prep_of(elder-12, kirk-15)
det(dispenser-18, a-17)
appos(man-7, dispenser-18)
poss(things-22, her-20)
amod(things-22, sacred-21)
prep_of(dispenser-18, things-22)
appos(man-7, guilty-24)
det(crime-28, the-26)
amod(crime-28, awful-27)
prep_of(guilty-24, crime-28)
nn(worship-31, Mammon-30)
prep_of(crime-28, worship-31)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD imagined)
      (NP (PRP$ her) (NN ignorantly))
      (S
        (VP (VBG associating)
          (NP
            (NP (DT the) (NN idea))
            (PP (IN of)
              (NP
                (NP
                  (NP (DT some) (JJ idolatrous) (NN ritual))
                  (SBAR
                    (WHPP (IN with)
                      (WHNP
                        (WHNP (WP what))
                        (PP (TO to))))
                    (S
                      (NP (PRP him))
                      (VP (VBD was)
                        (PP (CC but)
                          (NP (DT a) (NN phrase)))))))
                (: --)
                (NP
                  (NP (DT the) (NN worship))
                  (PP (IN of)
                    (NP (NNP Mammon))))))))))
    (. .)))

nsubj(imagined-2, He-1)
root(ROOT-0, imagined-2)
poss(ignorantly-4, her-3)
dobj(imagined-2, ignorantly-4)
xcomp(imagined-2, associating-5)
det(idea-7, the-6)
dobj(associating-5, idea-7)
det(ritual-11, some-9)
amod(ritual-11, idolatrous-10)
prep_of(idea-7, ritual-11)
prep_with(was-16, ritual-11)
prep(what-13, to-14)
nsubj(was-16, him-15)
rcmod(ritual-11, was-16)
prep(was-16, but-17)
det(phrase-19, a-18)
pobj(but-17, phrase-19)
det(worship-22, the-21)
dep(ritual-11, worship-22)
prep_of(worship-22, Mammon-24)

(ROOT
  (SQ (`` ``) (VBP Do)
    (NP (PRP you))
    (VP
      (ADVP (RB not))
      (VB remember)
      (PRN (, ,) ('' '')
        (S
          (NP (PRP he))
          (VP (VBD continued)))
        (, ,) (`` ``))
      (NP
        (NP (DT the) (NNS words))
        (PP (IN of)
          (NP
            (NP (NNP Christ))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (DT a) (NN man) (NN _))
                (VP (MD can) (RB not)
                  (ADVP (RB _))
                  (VP (VB serve)
                    (NP (NNP God)
                      (CC and)
                      (NNP Mammon))))))))))
    (. ?)))

aux(remember-5, Do-2)
nsubj(remember-5, you-3)
neg(remember-5, not-4)
root(ROOT-0, remember-5)
nsubj(continued-9, he-8)
parataxis(remember-5, continued-9)
det(words-13, the-12)
dobj(remember-5, words-13)
prep_of(words-13, Christ-15)
mark(serve-24, that-17)
det(_-20, a-18)
nn(_-20, man-19)
nsubj(serve-24, _-20)
aux(serve-24, can-21)
neg(serve-24, not-22)
advmod(serve-24, _-23)
dep(Christ-15, serve-24)
dobj(serve-24, God-25)
dobj(serve-24, Mammon-27)
conj_and(God-25, Mammon-27)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VB be)
          (NP
            (NP (DT a) (NNP Christian))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (MD will)
                  (ADVP (RB hardly))
                  (VP (VB doubt)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ follows)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP am) (RB not)
            (NP
              (NP (DT a) (NN worshiper))
              (PP (IN of)
                (NP (NNP Mammon))))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (DT the) (CD two))
                (VP (MD can) (RB not)
                  (VP (VB go)
                    (ADVP (RB together))))))))))
    (. .) ('' '')))

mark(Christian-5, If-1)
nsubj(Christian-5, I-2)
cop(Christian-5, be-3)
det(Christian-5, a-4)
advcl(follows-14, Christian-5)
mark(doubt-11, as-7)
nsubj(doubt-11, you-8)
aux(doubt-11, will-9)
advmod(doubt-11, hardly-10)
rcmod(Christian-5, doubt-11)
nsubj(follows-14, it-13)
root(ROOT-0, follows-14)
mark(worshiper-20, that-15)
nsubj(worshiper-20, I-16)
cop(worshiper-20, am-17)
neg(worshiper-20, not-18)
det(worshiper-20, a-19)
ccomp(follows-14, worshiper-20)
prep_of(worshiper-20, Mammon-22)
mark(go-29, for-24)
det(two-26, the-25)
nsubj(go-29, two-26)
aux(go-29, can-27)
neg(go-29, not-28)
advcl(worshiper-20, go-29)
advmod(go-29, together-30)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (DT that))
    (VP (VBZ 's)
      (ADVP (RB just))
      (NP
        (NP (DT the) (NN question))
        (, ,)
        (NP (NN sir))))
    (. !)))

cc(question-7, But-2)
nsubj(question-7, that-3)
cop(question-7, 's-4)
advmod(question-7, just-5)
det(question-7, the-6)
root(ROOT-0, question-7)
appos(question-7, sir-9)

(ROOT
  (S
    (NP
      (NP (DT A) (NN man))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ worships)
            (NP (NNP God))))))
    (, ,)
    (VP (VBZ worships)
      (NP (PRP Him))
      (PP (IN with)
        (NP
          (NP (PRP$ his) (JJ whole) (NN heart)
            (CC and)
            (NN soul))
          (CC and)
          (NP (NN strength)
            (CC and)
            (NN mind)))))
    (. .)))

det(man-2, A-1)
nsubj(worships-4, man-2)
nsubj(worships-7, man-2)
rcmod(man-2, worships-4)
dobj(worships-4, God-5)
root(ROOT-0, worships-7)
dobj(worships-7, Him-8)
poss(heart-12, his-10)
amod(heart-12, whole-11)
prep_with(worships-7, heart-12)
prep_with(worships-7, soul-14)
conj_and(heart-12, soul-14)
prep_with(worships-7, strength-16)
conj_and(heart-12, strength-16)
conj_and(heart-12, mind-18)
conj_and(strength-16, mind-18)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP he))
          (VP (VBZ wakes)
            (PP (IN at)
              (NP (NN night))))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is)
        (PP (TO to)
          (NP (NNP worship) (NNP God)))))
    (: ;)
    (S
      (S
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (VBZ is)
              (ADJP (JJ glad)
                (PP (IN in)
                  (NP (PRP$ his) (NN heart)))))))
        (, ,)
        (NP (PRP it))
        (VP (VBZ is)
          (SBAR (IN because)
            (S
              (NP (NNP God))
              (VP (VBZ is))))))
      (, ,)
      (CC and)
      (S
        (NP (CD one) (NN day))
        (NP (PRP he))
        (VP (MD shall)
          (VP (VB behold)
            (NP (PRP$ His) (NN face))
            (PP (IN in)
              (NP (NNS brightness)))))))
    (. .)))

mark(wakes-3, If-1)
nsubj(wakes-3, he-2)
advcl(is-8, wakes-3)
prep_at(wakes-3, night-5)
nsubj(is-8, it-7)
root(ROOT-0, is-8)
nn(God-11, worship-10)
prep_to(is-8, God-11)
mark(glad-16, if-13)
nsubj(glad-16, he-14)
cop(glad-16, is-15)
advcl(is-22, glad-16)
poss(heart-19, his-18)
prep_in(glad-16, heart-19)
nsubj(is-22, it-21)
parataxis(is-8, is-22)
mark(is-25, because-23)
nsubj(is-25, God-24)
advcl(is-22, is-25)
num(day-29, one-28)
tmod(behold-32, day-29)
nsubj(behold-32, he-30)
aux(behold-32, shall-31)
parataxis(is-8, behold-32)
conj_and(is-22, behold-32)
poss(face-34, His-33)
dobj(behold-32, face-34)
prep_in(behold-32, brightness-36)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (DT a) (NN man))
          (VP (VBZ worships)
            (NP (NNP God)))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ loves)
        (NP (PRP Him))
        (SBAR (RB so) (IN that)
          (S
            (NP (DT no) (NN love))
            (VP (MD can)
              (VP (VB come)
                (PP (IN between)
                  (NP
                    (NP (PRP him))
                    (CC and)
                    (NP (NNP God))))))))))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (S
            (NP (DT the) (NN earth))
            (VP (VBD were)
              (VP (VBN removed))))
          (, ,)
          (CC and)
          (S
            (NP (DT the) (NNS mountains))
            (VP (VBD cast)
              (PP (IN into)
                (NP
                  (NP (DT the) (NN midst))
                  (PP (IN of)
                    (NP (DT the) (NN sea)))))))))
      (, ,)
      (NP (PRP it))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (DT all) (NN one))
            (PP (TO to)
              (NP (PRP him))))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (NNP God))
              (VP (MD would)
                (VP (VB be)
                  (ADVP (PDT all) (DT the) (JJ same)))))))))
    (. .)))

mark(worships-4, If-1)
det(man-3, a-2)
nsubj(worships-4, man-3)
advcl(loves-8, worships-4)
dobj(worships-4, God-5)
nsubj(loves-8, he-7)
root(ROOT-0, loves-8)
dobj(loves-8, Him-9)
advmod(come-15, so-10)
mark(come-15, that-11)
neg(love-13, no-12)
nsubj(come-15, love-13)
aux(come-15, can-14)
advcl(loves-8, come-15)
prep_between(come-15, him-17)
prep_between(come-15, God-19)
conj_and(him-17, God-19)
mark(removed-25, if-21)
det(earth-23, the-22)
nsubjpass(removed-25, earth-23)
auxpass(removed-25, were-24)
advcl(one-42, removed-25)
det(mountains-29, the-28)
nsubj(cast-30, mountains-29)
conj_and(removed-25, cast-30)
advcl(one-42, cast-30)
det(midst-33, the-32)
prep_into(cast-30, midst-33)
det(sea-36, the-35)
prep_of(midst-33, sea-36)
nsubj(one-42, it-38)
aux(one-42, would-39)
cop(one-42, be-40)
det(one-42, all-41)
parataxis(loves-8, one-42)
prep_to(one-42, him-44)
mark(be-49, for-46)
nsubj(be-49, God-47)
aux(be-49, would-48)
advcl(one-42, be-49)
dep(same-52, all-50)
det(same-52, the-51)
advmod(be-49, same-52)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (ADJP (RB not)
      (SBAR
        (S
          (S
            (ADVP (RB so)))
          (, ,)
          (VP (VBP sir)))))
    (. ?) ('' '')))

cop(not-3, Is-1)
nsubj(not-3, it-2)
root(ROOT-0, not-3)
ccomp(sir-6, so-4)
ccomp(not-3, sir-6)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP are)
        (NP
          (NP (DT a) (JJ good) (NN girl))
          (, ,)
          (NP (NNP Dawtie)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP approve)
        (PP (IN of)
          (NP
            (NP (DT every) (NN word))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP say))))))))
    (. .)))

nsubj(girl-6, You-2)
cop(girl-6, are-3)
det(girl-6, a-4)
amod(girl-6, good-5)
root(ROOT-0, girl-6)
appos(girl-6, Dawtie-8)
nsubj(approve-12, I-11)
conj_and(girl-6, approve-12)
det(word-15, every-14)
prep_of(approve-12, word-15)
nsubj(say-17, you-16)
rcmod(word-15, say-17)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD would)
        (ADVP (RBR more) (IN than))
        (VP (VB savor)
          (PP (IN of)
            (NP (NN presumption)))
          (S
            (VP (TO to)
              (VP (VB profess)
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (VBD loved)
                      (NP
                        (NP (NNP God))
                        (ADVP (RB up)
                          (PP (TO to)
                            (NP (DT the) (NN point))))
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBP speak)
                              (PP (IN of)))))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP deserve)
        (S
          (VP (TO to)
            (VP (VB love)
              (NP (PRP Him)))))))
    (. .)))

nsubj(savor-5, It-1)
nsubj(profess-9, It-1)
aux(savor-5, would-2)
advmod(than-4, more-3)
advmod(savor-5, than-4)
root(ROOT-0, savor-5)
prep_of(savor-5, presumption-7)
aux(profess-9, to-8)
xcomp(savor-5, profess-9)
mark(loved-12, that-10)
nsubj(loved-12, I-11)
ccomp(profess-9, loved-12)
dobj(loved-12, God-13)
prep_of(speak-19, God-13)
advmod(God-13, up-14)
det(point-17, the-16)
prep_to(up-14, point-17)
nsubj(speak-19, you-18)
rcmod(God-13, speak-19)
nsubj(deserve-24, I-23)
nsubj(love-26, I-23)
conj_but(savor-5, deserve-24)
aux(love-26, to-25)
xcomp(deserve-24, love-26)
dobj(love-26, Him-27)

(ROOT
  (S
    (S
      (ADVP (RB Doubtless))
      (NP (DT a) (NN man))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB love)
              (NP (NNP God))
              (ADVP (RB so)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP are) (RB all)
        (ADJP (JJ sinners))
        (SBAR (RB just) (IN because)
          (S
            (NP (PRP we))
            (VP (VBP do) (RB not)
              (VP (VB love)
                (NP (NNP God))
                (ADVP (RB so))))))))
    (. .)))

advmod(ought-4, Doubtless-1)
det(man-3, a-2)
nsubj(ought-4, man-3)
nsubj(love-6, man-3)
root(ROOT-0, ought-4)
aux(love-6, to-5)
xcomp(ought-4, love-6)
dobj(love-6, God-7)
advmod(love-6, so-8)
nsubj(sinners-14, we-11)
cop(sinners-14, are-12)
advmod(sinners-14, all-13)
conj_and(ought-4, sinners-14)
advmod(love-20, just-15)
mark(love-20, because-16)
nsubj(love-20, we-17)
aux(love-20, do-18)
neg(love-20, not-19)
advcl(sinners-14, love-20)
dobj(love-20, God-21)
advmod(love-20, so-22)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP have)
      (NP (DT the) (NN atonement)))
    (. !) ('' '')))

cc(have-3, But-1)
nsubj(have-3, we-2)
root(ROOT-0, have-3)
det(atonement-5, the-4)
dobj(have-3, atonement-5)

(ROOT
  (S (`` ``)
    (S (CC But)
      (, ,)
      (NP
        (NP (NN sir))
        (, ,) ('' '')
        (VP (VBN answered)))
      (VP (VBP Dawtie) (, ,)
        (S
          (NP (DT the) (JJ silent) (NNS tears))
          (VP (VBG running)
            (PRT (RP down))
            (NP (PRP$ her) (NN face))))))
    (, ,) (`` ``)
    (NP (PRP I))
    (VP (VBP love)
      (NP
        (NP (NNP God))
        (NP (DT that) (NN way))))
    (. !)))

cc(Dawtie-8, But-2)
nsubj(Dawtie-8, sir-4)
vmod(sir-4, answered-7)
ccomp(love-20, Dawtie-8)
det(tears-12, the-10)
amod(tears-12, silent-11)
nsubj(running-13, tears-12)
dep(Dawtie-8, running-13)
prt(running-13, down-14)
poss(face-16, her-15)
dobj(running-13, face-16)
nsubj(love-20, I-19)
root(ROOT-0, love-20)
dobj(love-20, God-21)
iobj(love-20, God-21)
det(way-23, that-22)
dep(God-21, way-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB care)
        (NP
          (NP (DT a) (NN dust))
          (PP (IN for)
            (NP (NN anything))))
        (PP (IN without)
          (NP (PRP Him)))))
    (. !)))

nsubj(care-4, I-1)
aux(care-4, do-2)
neg(care-4, n't-3)
root(ROOT-0, care-4)
det(dust-6, a-5)
dobj(care-4, dust-6)
prep_for(dust-6, anything-8)
prep_without(care-4, Him-10)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP I))
          (VP (VBP go)
            (PP (TO to)
              (NP (NN bed))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB care)
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (ADVP (RB never))
              (VP (VBP wake)
                (ADVP (RB again))
                (PP (IN in)
                  (NP (DT this) (NN world)))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB be)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP He))
              (VP (MD would)
                (VP (VB have)
                  (NP (PRP me)))))))))
    (. !) ('' '')))

advmod(go-3, When-1)
nsubj(go-3, I-2)
advcl(care-10, go-3)
prep_to(go-3, bed-5)
nsubj(care-10, I-7)
aux(care-10, do-8)
neg(care-10, n't-9)
root(ROOT-0, care-10)
mark(wake-14, if-11)
nsubj(wake-14, I-12)
neg(wake-14, never-13)
advcl(care-10, wake-14)
advmod(wake-14, again-15)
det(world-18, this-17)
prep_in(wake-14, world-18)
nsubj(be-22, I-20)
aux(be-22, shall-21)
parataxis(care-10, be-22)
advmod(have-26, where-23)
nsubj(have-26, He-24)
aux(have-26, would-25)
advcl(be-22, have-26)
dobj(have-26, me-27)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP presume)))
    (, ,)
    (VP (VBP Dawtie))
    (. !)))

nsubj(presume-3, You-2)
ccomp(Dawtie-5, presume-3)
root(ROOT-0, Dawtie-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP fear)
      (S
        (NP (PRP me))
        (ADJP (JJ much))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP presume))))))
    (. !)))

nsubj(fear-2, I-1)
root(ROOT-0, fear-2)
nsubj(presume-6, me-3)
dep(presume-6, much-4)
nsubj(presume-6, you-5)
xcomp(fear-2, presume-6)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (DT that))
        (VP (MD should)
          (VP (VB be)
            (PP (IN in)
              (NP (NN hell))))))
      (. ?) ('' ''))))

dep(be-5, What-1)
mark(be-5, if-2)
nsubj(be-5, that-3)
aux(be-5, should-4)
root(ROOT-0, be-5)
prep_in(be-5, hell-7)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VB be))))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB be)
        (NP (DT the) (JJS best))))
    (. .)))

mark(be-4, If-2)
nsubj(be-4, it-3)
advcl(best-10, be-4)
nsubj(best-10, it-6)
aux(best-10, will-7)
cop(best-10, be-8)
det(best-10, the-9)
root(ROOT-0, best-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB be)
        (S
          (VP (TO to)
            (VP (VB set)
              (S
                (NP (PRP me))
                (ADJP (RB right))))))))
    (. .)))

nsubj(be-3, It-1)
nsubj(set-5, It-1)
aux(be-3, will-2)
root(ROOT-0, be-3)
aux(set-5, to-4)
xcomp(be-3, set-5)
nsubj(right-7, me-6)
xcomp(set-5, right-7)

(ROOT
  (S
    (INTJ (UH Oh))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (PRP He))
    (VP (VBZ is)
      (ADJP (RB so) (JJ good)))
    (. !)))

discourse(good-8, Oh-1)
advmod(good-8, sir-3)
nsubj(good-8, He-5)
cop(good-8, is-6)
advmod(good-8, so-7)
root(ROOT-0, good-8)

(ROOT
  (S
    (S
      (S
        (VP (VB Tell)
          (NP (PRP me))
          (NP (CD one) (NN thing))
          (, ,)))
      (VP (VBP sir) (: :)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBP die))))))
    (: --) ('' '')
    (S (`` ``)
      (NP
        (NP (NNP Tut))
        (, ,)
        (NP (NN tut))
        (, ,))
      (VP (VBZ lass)))
    (. !)))

csubj(sir-6, Tell-1)
iobj(Tell-1, me-2)
num(thing-4, one-3)
dobj(Tell-1, thing-4)
root(ROOT-0, sir-6)
advmod(die-10, when-8)
nsubj(die-10, you-9)
parataxis(sir-6, die-10)
nsubj(lass-18, Tut-14)
appos(Tut-14, tut-16)
parataxis(sir-6, lass-18)

(ROOT
  (S
    (NP (PRP we))
    (VP (VBP 're) (RB not)
      (VP (VBN come)
        (PP (TO to)
          (NP (DT that)))
        (ADVP (RB yet))))
    (. !)))

nsubjpass(come-4, we-1)
auxpass(come-4, 're-2)
neg(come-4, not-3)
root(ROOT-0, come-4)
prep_to(come-4, that-6)
advmod(come-4, yet-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT no) (NN occasion)
        (S
          (VP (TO to)
            (VP (VB think)
              (PP (IN about)
                (NP (DT that)))
              (ADVP (RB yet) (RB awhile)))))))
    (. !)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
neg(occasion-4, no-3)
nsubj('s-2, occasion-4)
aux(think-6, to-5)
vmod(occasion-4, think-6)
prep_about(think-6, that-8)
advmod(awhile-10, yet-9)
advmod(think-6, awhile-10)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (PP (IN in)
        (NP
          (NP (DT the) (NNS hands))
          (PP (IN of)
            (NP (DT a) (JJ reconciled) (NN God))))))
    (. .) ('' '')))

nsubj('re-2, We-1)
root(ROOT-0, 're-2)
det(hands-5, the-4)
prep_in('re-2, hands-5)
det(God-9, a-7)
amod(God-9, reconciled-8)
prep_of(hands-5, God-9)

(ROOT
  (S (`` ``)
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB know)))))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD pursued))
        (NP (NNP Dawtie)))
      (, ,))
    (`` ``)
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB feel)))))
      (, ,)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB get)
              (PP (IN on)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP you))
                    (VP (VBP have) (RB n't)
                      (VP (VBN got)
                        (NP (NN anything))))))))))))
    (. !) ('' '')))

dobj(want-4, What-2)
nsubj(know-6, What-2)
nsubj(want-4, I-3)
csubj(is-13, want-4)
aux(know-6, to-5)
xcomp(want-4, know-6)
parataxis(is-13, pursued-9)
nsubj(pursued-9, Dawtie-10)
root(ROOT-0, is-13)
advmod(feel-17, how-14)
nsubj(feel-17, you-15)
aux(feel-17, will-16)
ccomp(is-13, feel-17)
advmod(get-22, how-19)
nsubj(get-22, you-20)
aux(get-22, will-21)
ccomp(is-13, get-22)
advmod(got-28, when-24)
nsubj(got-28, you-25)
aux(got-28, have-26)
neg(got-28, n't-27)
prepc_on(get-22, got-28)
dobj(got-28, anything-29)

(ROOT
  (S (`` ``) (RB Not)
    (VP (VBD got)
      (NP
        (NP (NN anything))
        (, ,)
        (NP (NN girl))))
    (. !)))

neg(got-3, Not-2)
root(ROOT-0, got-3)
dobj(got-3, anything-4)
appos(anything-4, girl-6)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (VP (VBG losing)
      (NP (PRP$ your) (NNS senses)))
    (. ?)))

aux(losing-3, Are-1)
nsubj(losing-3, you-2)
root(ROOT-0, losing-3)
poss(senses-5, your-4)
dobj(losing-3, senses-5)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP we))
    (VP (MD shall)
      (VP (VB want)
        (NP (NN nothing))
        (ADVP (RB then))))
    (. !)))

prep_of(want-5, course-2)
nsubj(want-5, we-3)
aux(want-5, shall-4)
root(ROOT-0, want-5)
dobj(want-5, nothing-6)
advmod(want-5, then-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB talk)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN doctor))
                  (PP (IN about)
                    (NP (PRP you))))))))))
    (. !)))

nsubj(have-3, I-1)
nsubj(talk-5, I-1)
aux(have-3, shall-2)
root(ROOT-0, have-3)
aux(talk-5, to-4)
xcomp(have-3, talk-5)
det(doctor-8, the-7)
prep_to(talk-5, doctor-8)
prep_about(doctor-8, you-10)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD shall)
      (VP (VB have)
        (S
          (NP (PRP you))
          (VP (VBG killing)
            (NP (PRP us))
            (PP (IN in)
              (NP (PRP$ our) (NNS beds)
                (S
                  (VP (TO to)
                    (VP (VB know)
                      (SBAR
                        (WHADVP (WRB how))
                        (S
                          (NP (PRP we))
                          (VP (VBP like)
                            (NP (PRP it))))))))))))))
    (. !) ('' '')))

nsubj(have-3, We-1)
aux(have-3, shall-2)
root(ROOT-0, have-3)
nsubj(killing-5, you-4)
ccomp(have-3, killing-5)
dobj(killing-5, us-6)
poss(beds-9, our-8)
prep_in(killing-5, beds-9)
aux(know-11, to-10)
vmod(beds-9, know-11)
advmod(like-14, how-12)
nsubj(like-14, we-13)
ccomp(know-11, like-14)
dobj(like-14, it-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD laughed)))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT a)
          (ADJP (RB rather) (VBN scared))
          (NN laugh))))
    (. .)))

nsubj(laughed-2, He-1)
root(ROOT-0, laughed-2)
nsubj(laugh-10, it-5)
cop(laugh-10, was-6)
det(laugh-10, a-7)
advmod(scared-9, rather-8)
amod(laugh-10, scared-9)
conj_but(laughed-2, laugh-10)

(ROOT
  (S (`` ``)
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBP mean))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP she))
        (VP (VBD persisted)))
      (, ,))
    (`` ``)
    (VP (VBZ is) (: --)
      (SBARQ
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBP have)
              (NP
                (NP (DT no) (NN body))
                (, ,)
                (CC and)
                (NP (DT no) (NNS hands)
                  (S
                    (VP (TO to)
                      (VP (VB take)
                        (NP
                          (NP (NN hold))
                          (PP (IN of)
                            (NP (PRP$ your) (NN cap))))))))))))
        (, ,)
        (WHNP (WP what))
        (SQ (MD will)
          (NP (PRP you))
          (VP (VB do)
            (PP (IN without)
              (NP (PRP it)))))
        (. ?)))
    ('' '')))

dobj(mean-4, What-2)
nsubj(mean-4, I-3)
csubj(is-11, mean-4)
nsubj(persisted-8, she-7)
parataxis(is-11, persisted-8)
root(ROOT-0, is-11)
advmod(have-15, when-13)
nsubj(have-15, you-14)
dep(do-32, have-15)
neg(body-17, no-16)
dobj(have-15, body-17)
neg(hands-21, no-20)
dobj(have-15, hands-21)
conj_and(body-17, hands-21)
aux(take-23, to-22)
vmod(hands-21, take-23)
dobj(take-23, hold-24)
poss(cap-27, your-26)
prep_of(hold-24, cap-27)
dobj(do-32, what-29)
aux(do-32, will-30)
nsubj(do-32, you-31)
ccomp(is-11, do-32)
parataxis(is-11, do-32)
prep_without(do-32, it-34)

(ROOT
  (S (`` ``)
    (SBAR
      (NP (WP What))
      (IN if)
      (S
        (NP (PRP I))
        (VP (VBP leave)
          (NP (PRP it))
          (PP (TO to)
            (NP (PRP you))))))
    (, ,)
    (VP (VB Dawtie))
    (. !) ('' '')))

dep(leave-5, What-2)
mark(leave-5, if-3)
nsubj(leave-5, I-4)
advcl(Dawtie-10, leave-5)
dobj(leave-5, it-6)
prep_to(leave-5, you-8)
root(ROOT-0, Dawtie-10)

(ROOT
  (S
    (VP (VBD returned)
      (NP (DT the) (NN laird))
      (, ,)
      (PP (IN with)
        (NP
          (NP (DT a) (JJ stupid) (NN mixture))
          (PP (IN of)
            (NP (NN joke)
              (CC and)
              (NN avarice)))))
      (PP (IN in)
        (NP (PRP$ his) (JJ cold) (NN eye))))
    (. .)))

root(ROOT-0, returned-1)
det(laird-3, the-2)
dobj(returned-1, laird-3)
det(mixture-8, a-6)
amod(mixture-8, stupid-7)
prep_with(returned-1, mixture-8)
prep_of(mixture-8, joke-10)
prep_of(mixture-8, avarice-12)
conj_and(joke-10, avarice-12)
poss(eye-16, his-14)
amod(eye-16, cold-15)
prep_in(returned-1, eye-16)

(ROOT
  (S
    (INTJ (`` ``) (UH Please))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB say)
        (SBAR
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (MD would)
                (VP (VB do)
                  (PP (IN with)
                    (NP (PRP it)))))))
          (, ,)
          (CC but)
          (SBAR
            (WHNP (WP what))
            (SINV (MD would)
              (NP (PRP you))
              (VP (VB do)
                (PP (IN without)
                  (NP (PRP it)))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP it))
                    (VP (MD will) (RB neither)
                      (VP (VB come)
                        (UCP
                          (ADVP (IN out)
                            (PP (IN of)
                              (NP (PRP$ your) (NN heart))))
                          (CC nor)
                          (PP (IN into)
                            (NP (PRP$ your) (NNS hands))))))))))))))
    (. !)))

discourse(say-9, Please-2)
advmod(say-9, sir-4)
nsubj(say-9, I-6)
aux(say-9, did-7)
neg(say-9, n't-8)
root(ROOT-0, say-9)
dobj(do-13, what-10)
nsubj(do-13, you-11)
aux(do-13, would-12)
dep(say-9, do-13)
prep_with(do-13, it-15)
dep(do-21, what-18)
aux(do-21, would-19)
nsubj(do-21, you-20)
dep(say-9, do-21)
conj_but(do-13, do-21)
prep_without(do-21, it-23)
advmod(come-28, when-24)
nsubj(come-28, it-25)
aux(come-28, will-26)
advmod(come-28, neither-27)
advcl(do-21, come-28)
poss(heart-32, your-31)
prep_out_of(come-28, heart-32)
advcl(do-21, into-34)
conj_nor(come-28, into-34)
poss(hands-36, your-35)
pobj(into-34, hands-36)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ misery)
          (PP (TO to)
            (NP (DT a) (NN miser)
              (S
                (VP (TO to)
                  (VP
                    (ADVP (RB _))
                    (VB have)
                    (NP (JJ _) (NN nothing))))))))))
    (. !) ('' '')))

nsubj(misery-4, It-1)
aux(misery-4, must-2)
cop(misery-4, be-3)
root(ROOT-0, misery-4)
det(miser-7, a-6)
prep_to(misery-4, miser-7)
aux(have-10, to-8)
advmod(have-10, _-9)
vmod(miser-7, have-10)
amod(nothing-12, _-11)
dobj(have-10, nothing-12)

(ROOT
  (FRAG (`` ``)
    (NP (DT A) (NN miser))
    (, ,)
    (NP (NN hussy))
    (. !) ('' '')))

det(miser-3, A-2)
root(ROOT-0, miser-3)
dep(miser-3, hussy-5)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP
        (NP (DT A) (NN lover))
        (PP (IN of)
          (NP (NNS things))))
      (, ,)
      (NP
        (NP
          (QP (JJR more) (IN than) (DT a)))
        (VP (VBN lover)
          (PP (IN of)
            (NP (NNP God))))))
    (. !) ('' '')))

det(lover-3, A-2)
root(ROOT-0, lover-3)
prep_of(lover-3, things-5)
mwe(than-8, more-7)
quantmod(a-9, than-8)
appos(lover-3, a-9)
vmod(a-9, lover-10)
prep_of(lover-10, God-12)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (ADVP (RB perhaps))
    (NP (PRP you))
    (VP (VBP have)
      (NP
        (NP (DT the) (JJR better))
        (PP (IN of)
          (NP (PRP me)))))
    (. !) ('' '')))

discourse(have-6, Well-2)
advmod(have-6, perhaps-4)
nsubj(have-6, you-5)
root(ROOT-0, have-6)
det(better-8, the-7)
dobj(have-6, better-8)
prep_of(better-8, me-10)

(ROOT
  (S
    (S
      (NP (PRP he))
      (VP (VBD said) (, ,)
        (PP (IN after)
          (NP (DT a) (JJ cowed) (NN pause)))))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD perceived))))
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (DT no) (NN compromise))
          (ADJP (JJ possible)
            (PP (IN with)
              (NP (NNP Dawtie)))))))
    (: :)
    (S
      (NP (PRP she))
      (VP (VBD knew)
        (ADVP (RB perfectly))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP she))
            (VP (VBD meant))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD could)
        (VP (CC neither)
          (VP (VB escape)
            (NP (PRP$ her) (NN logic)))
          (, ,)
          (CC nor)
          (VP (VB change)
            (NP
              (NP (PRP$ her) (NN determination))
              (, ,)
              (SBAR
                (WHNP (WDT whatever))
                (S
                  (NP (DT that))
                  (VP (MD might)
                    (VP (VB be))))))))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
det(pause-7, a-5)
amod(pause-7, cowed-6)
prep_after(said-2, pause-7)
mark(perceived-11, for-9)
nsubj(perceived-11, he-10)
advcl(was-13, perceived-11)
expl(was-13, there-12)
conj_and(said-2, was-13)
neg(compromise-15, no-14)
nsubj(was-13, compromise-15)
amod(compromise-15, possible-16)
prep_with(possible-16, Dawtie-18)
nsubj(knew-21, she-20)
conj_and(said-2, knew-21)
advmod(knew-21, perfectly-22)
dobj(meant-25, what-23)
nsubj(meant-25, she-24)
ccomp(knew-21, meant-25)
nsubj(escape-31, he-28)
nsubj(change-36, he-28)
aux(escape-31, could-29)
preconj(escape-31, neither-30)
conj_and(said-2, escape-31)
poss(logic-33, her-32)
dobj(escape-31, logic-33)
conj_and(said-2, change-36)
conj_nor(escape-31, change-36)
poss(determination-38, her-37)
dobj(change-36, determination-38)
nsubj(be-43, determination-38)
dobj(be-43, whatever-40)
aux(be-43, might-42)
rcmod(determination-38, be-43)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD dare)
      (VP (VB say)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ right)))))))
    (. !)))

nsubj(say-4, I-2)
aux(say-4, dare-3)
root(ROOT-0, say-4)
nsubj(right-7, you-5)
cop(right-7, are-6)
ccomp(say-4, right-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB think)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN done)
                      (PP (IN about)
                        (NP (DT that) (NN cup))))))))))))
    (. !) ('' '')))

nsubj(think-3, I-1)
aux(think-3, will-2)
root(ROOT-0, think-3)
nsubj(ought-5, what-4)
nsubjpass(done-8, what-4)
ccomp(think-3, ought-5)
aux(done-8, to-6)
auxpass(done-8, be-7)
xcomp(ought-5, done-8)
det(cup-11, that-10)
prep_about(done-8, cup-11)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD stopped) (, ,)
        (S
          (NP (NN self))
          (VP (VBN amazed)))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN committed)
          (NP (PRP himself)))))
    (. !)))

nsubj(stopped-2, He-1)
root(ROOT-0, stopped-2)
nsubj(amazed-5, self-4)
dep(stopped-2, amazed-5)
nsubj(committed-9, he-7)
aux(committed-9, had-8)
parataxis(stopped-2, committed-9)
dobj(committed-9, himself-10)

(ROOT
  (PRN (: --)
    (ADVP
      (ADVP (RB as) (RB much))
      (SBAR (IN as)
        (S
          (VP (VBD confessed)
            (S
              (NP (DT the) (NN cup))
              (ADJP (JJ genuine))))))
      (. !))))

advmod(much-3, as-2)
root(ROOT-0, much-3)
mark(confessed-5, as-4)
advcl(much-3, confessed-5)
ccomp(much-3, confessed-5)
det(cup-7, the-6)
nsubj(genuine-8, cup-7)
xcomp(confessed-5, genuine-8)

(ROOT
  (S (CC But)
    (NP (NNP Dawtie))
    (VP
      (VP (VBD had) (RB not)
        (VP (VBN been)
          (ADJP (VBN deceived))))
      (, ,)
      (CC and)
      (VP (VBD had) (RB not)
        (VP (VBN been)
          (VP (VBG thinking)
            (PP (IN about)
              (NP (DT the) (NN cup)))))))
    (. .)))

nsubjpass(deceived-6, Dawtie-2)
nsubjpass(thinking-12, Dawtie-2)
aux(deceived-6, had-3)
neg(deceived-6, not-4)
auxpass(deceived-6, been-5)
root(ROOT-0, deceived-6)
aux(thinking-12, had-9)
neg(thinking-12, not-10)
aux(thinking-12, been-11)
conj_and(deceived-6, thinking-12)
det(cup-15, the-14)
prep_about(thinking-12, cup-15)

(ROOT
  (S (RB Only)
    (NP (PRP it))
    (VP (VBD was)
      (ADJP (JJ plain))
      (SBAR (IN that) (, ,)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (MD would)
                (VP (VB consent)
                  (PP (TO to)
                    (NP
                      (NP (NN part))
                      (PP (IN with)
                        (NP (PRP it)))))
                  (PP (IN for)
                    (NP (PRP$ its) (NN money-worth)))))))
          (, ,)
          (NP (DT that))
          (VP (MD would)
            (VP (VB be)
              (NP
                (NP
                  (NP
                    (NP (DT a) (JJ grand) (NN beginning))
                    (PP (IN toward)
                      (NP
                        (NP (DT the) (NN renouncing))
                        (PP (IN of)
                          (NP
                            (NP (JJ dead) (JJ _) (NNS things))
                            (VP (VBN _)
                              (ADVP (RB altogether))
                              (, ,)
                              (PP (IN toward)
                                (NP
                                  (NP (DT the) (NN turning))
                                  (PP (TO to)
                                    (NP (DT the) (VBG living) (NN One)))))))))))
                  (NP
                    (NP (DT the) (NN love))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (ADVP (RB now))
                        (VP (VBD gathered) (, ,)
                          (S
                            (VP (VBG clinging)
                              (CC and)
                              (VBG haunting))))))))
                (, ,) (RB about)
                (NP
                  (NP (JJ gold) (NNS cups))
                  (CC and)
                  (NP (JJ graved) (NN armor)))
                (, ,)
                (CC and)
                (NP
                  (NP (JJ suchlike) (NNS vapors)
                    (CC and)
                    (NNS vanishings))
                  (, ,)
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP pass)
                        (PP (IN with)
                          (NP
                            (NP (DT the) (NNS sunsets))
                            (CC and)
                            (NP (DT the) (NNS snows))))))))))))))
    (. .)))

advmod(plain-4, Only-1)
nsubj(plain-4, it-2)
cop(plain-4, was-3)
root(ROOT-0, plain-4)
mark(beginning-24, that-5)
mark(consent-10, if-7)
nsubj(consent-10, he-8)
aux(consent-10, would-9)
advcl(beginning-24, consent-10)
prep_to(consent-10, part-12)
prep_with(part-12, it-14)
poss(money-worth-17, its-16)
prep_for(consent-10, money-worth-17)
nsubj(beginning-24, that-19)
aux(beginning-24, would-20)
cop(beginning-24, be-21)
det(beginning-24, a-22)
amod(beginning-24, grand-23)
ccomp(plain-4, beginning-24)
det(renouncing-27, the-26)
prep_toward(beginning-24, renouncing-27)
amod(things-31, dead-29)
amod(things-31, _-30)
prep_of(renouncing-27, things-31)
vmod(things-31, _-32)
advmod(_-32, altogether-33)
det(turning-37, the-36)
prep_toward(_-32, turning-37)
det(One-41, the-39)
amod(One-41, living-40)
prep_to(turning-37, One-41)
det(love-43, the-42)
dep(beginning-24, love-43)
nsubj(gathered-46, love-43)
advmod(gathered-46, now-45)
rcmod(love-43, gathered-46)
xcomp(gathered-46, clinging-48)
xcomp(gathered-46, haunting-50)
conj_and(clinging-48, haunting-50)
ccomp(plain-4, about-52)
advmod(beginning-24, about-52)
conj_and(beginning-24, about-52)
amod(cups-54, gold-53)
dep(beginning-24, cups-54)
amod(armor-57, graved-56)
dep(beginning-24, armor-57)
conj_and(cups-54, armor-57)
amod(vapors-61, suchlike-60)
ccomp(plain-4, vapors-61)
conj_and(beginning-24, vapors-61)
nsubj(pass-66, vapors-61)
conj_and(beginning-24, vanishings-63)
conj_and(vapors-61, vanishings-63)
nsubj(pass-66, vanishings-63)
rcmod(vapors-61, pass-66)
det(sunsets-69, the-68)
prep_with(pass-66, sunsets-69)
det(snows-72, the-71)
prep_with(pass-66, snows-72)
conj_and(sunsets-69, snows-72)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD fell)
        (PP (IN on)
          (NP (PRP$ her) (NNS knees)))))
    (, ,)
    (CC and)
    (PRN (, ,)
      (PP
        (PP (IN in)
          (NP
            (NP (DT the) (NN spirit))
            (PP (IN of)
              (NP (DT a) (NN child)))))
        (CC and)
        (PP (IN of)
          (NP
            (NP (DT the) (NN apostle))
            (PP (IN of)
              (NP (DT the) (NNPS Gentiles))))))
      (, ,))
    (S
      (S
        (VP (VBN cried)))
      (, ,)
      (S
        (VP
          (VP (VBG laying)
            (NP (PRP$ her) (JJ little) (JJ red) (NNS hands))
            (ADVP (RB together)))
          (CC and)
          (VP (VBG uplifting)
            (NP (PRP them))
            (PP (TO to)
              (NP
                (NP (PRP$ her) (NN master))
                (PP (IN in)
                  (NP (JJ purest) (NN entreaty)))))))))
    (. .)))

nsubj(fell-2, She-1)
nsubj(cried-23, She-1)
root(ROOT-0, fell-2)
poss(knees-5, her-4)
prep_on(fell-2, knees-5)
dep(fell-2, in-9)
det(spirit-11, the-10)
pobj(in-9, spirit-11)
det(child-14, a-13)
prep_of(spirit-11, child-14)
dep(fell-2, of-16)
conj_and(in-9, of-16)
det(apostle-18, the-17)
pobj(of-16, apostle-18)
det(Gentiles-21, the-20)
prep_of(apostle-18, Gentiles-21)
ccomp(fell-2, cried-23)
conj_and(fell-2, cried-23)
parataxis(cried-23, laying-25)
poss(hands-29, her-26)
amod(hands-29, little-27)
amod(hands-29, red-28)
dobj(laying-25, hands-29)
advmod(laying-25, together-30)
parataxis(cried-23, uplifting-32)
conj_and(laying-25, uplifting-32)
dobj(uplifting-32, them-33)
poss(master-36, her-35)
prep_to(uplifting-32, master-36)
amod(entreaty-39, purest-38)
prep_in(master-36, entreaty-39)

(ROOT
  (S (`` ``)
    (S
      (S
        (INTJ (UH Oh))
        (, ,)
        (S
          (VP (VBN laird)))
        (, ,)
        (VP (VBD laird)))
      (, ,)
      (S
        (NP (PRP ye))
        (VP (VBP 've)
          (VP (VBN been)
            (ADJP (JJ gude)
              (CC and)
              (JJ kin))
            ('' ')
            (PP (TO to)
              (NP (PRP me))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP lo'e)
          (NP (PRP ye)))))
    (, ,)
    (NP (DT the) (NNP Lord))
    (VP (VBZ kens))
    (. !)))

discourse(laird-6, Oh-2)
dep(laird-6, laird-4)
ccomp(kens-25, laird-6)
nsubj(gude-11, ye-8)
nsubj(kin-13, ye-8)
aux(gude-11, 've-9)
cop(gude-11, been-10)
ccomp(laird-6, gude-11)
conj_and(laird-6, gude-11)
ccomp(kens-25, gude-11)
ccomp(laird-6, kin-13)
conj_and(laird-6, kin-13)
conj_and(gude-11, kin-13)
prep_to(gude-11, me-16)
nsubj(lo'e-20, I-19)
conj_and(laird-6, lo'e-20)
ccomp(kens-25, lo'e-20)
dobj(lo'e-20, ye-21)
det(Lord-24, the-23)
nsubj(kens-25, Lord-24)
root(ROOT-0, kens-25)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (ADVP (RB pray))
        (VP (VBD ye)
          (PP (IN for)
            (NP
              (NP (NNP Christ) (POS 's))
              (NN sake)
              (S
                (VP (VB be)
                  (VP (VBN reconciled)
                    (PP (TO to)
                      (NP (NNP God))))))))
          (, ,)
          (PP (IN for)
            (NP
              (NP (JJ ye) (NN hae))
              (VP (VBN been)
                (NP
                  (NP
                    (NP (NN servin) (POS '))
                    (NNP Mammon))
                  (CC and)
                  (NP (DT no) (NN Him))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP ye))
        (VP (VBP hae)
          (SBAR
            (SBAR
              (S
                (NP (NN jist))
                (VP (VBD said)
                  (S
                    (NP (PRP we))
                    (ADJP (JJ canna))
                    (S
                      (VP (VB serve)
                        (NP (DT the) (NN twa))))))))
            (, ,)
            (CC and)
            (SBAR
              (WHNP (WP what))
              (S (`` `)
                (S
                  (VP
                    (ADVP (RB ill))
                    (VB come)
                    (NP (NN o) ('' '))))
                ('' ')
                (NP (NNP t) (NNP God))
                (ADVP (RB only))
                (VP (MD can)
                  (VP (VB tell)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ _)
        (S
          (NP (NN maun) (NNS _))
          (VP (VB be)
            (ADJP (JJ misery))))))
    (. !) ('' '')))

nsubj(ye-3, I-1)
advmod(ye-3, pray-2)
root(ROOT-0, ye-3)
poss(sake-7, Christ-5)
prep_for(ye-3, sake-7)
auxpass(reconciled-9, be-8)
dep(sake-7, reconciled-9)
prep_to(reconciled-9, God-11)
amod(hae-15, ye-14)
prep_for(ye-3, hae-15)
cop(Mammon-19, been-16)
poss(Mammon-19, servin-17)
vmod(hae-15, Mammon-19)
neg(Him-22, no-21)
vmod(hae-15, Him-22)
conj_and(Mammon-19, Him-22)
nsubj(hae-26, ye-25)
conj_and(ye-3, hae-26)
nsubj(said-28, jist-27)
dep(hae-26, said-28)
nsubj(serve-31, we-29)
dep(serve-31, canna-30)
xcomp(said-28, serve-31)
det(twa-33, the-32)
dobj(serve-31, twa-33)
dobj(tell-47, what-36)
advmod(come-39, ill-38)
ccomp(tell-47, come-39)
dobj(come-39, o-40)
nn(God-44, t-43)
nsubj(tell-47, God-44)
advmod(tell-47, only-45)
aux(tell-47, can-46)
dep(hae-26, tell-47)
conj_and(said-28, tell-47)
nsubj(_-51, it-50)
conj_but(ye-3, _-51)
nn(_-53, maun-52)
nsubj(misery-55, _-53)
cop(misery-55, be-54)
ccomp(_-51, misery-55)

(ROOT
  (S
    (NP (NNS Words))
    (VP (VBD failed)
      (NP (PRP her)))
    (. .)))

nsubj(failed-2, Words-1)
root(ROOT-0, failed-2)
dobj(failed-2, her-3)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD rose))
      (, ,)
      (CC and)
      (VP (VBD left)
        (NP (DT the) (NN room))
        (, ,)
        (PP (IN with)
          (NP (PRP$ her) (NN apron)))
        (PP (TO to)
          (NP (PRP$ her) (NNS eyes)))))
    (. .)))

nsubj(rose-2, She-1)
nsubj(left-5, She-1)
root(ROOT-0, rose-2)
conj_and(rose-2, left-5)
det(room-7, the-6)
dobj(left-5, room-7)
poss(apron-11, her-10)
prep_with(left-5, apron-11)
poss(eyes-14, her-13)
prep_to(left-5, eyes-14)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP (VBD stood)
      (SBAR
        (S
          (NP
            (NP (DT a) (NN moment))
            (CC or)
            (NP
              (NP (CD two))
              (PP (IN like)
                (NP (CD one)))))
          (VP
            (VP (VBD lost))
            (, ,)
            (VP
              (ADVP (RB then))
              (VBD went)
              (ADVP (RB hurriedly))
              (PP (IN into)
                (NP (PRP$ his) (`` ``)
                  (NX (NNP closet)))))
            (, ,) ('' '')
            (CC and)
            (VP (VBD shut)
              (NP (DT the) (NN door)))))))
    (. .)))

det(laird-2, The-1)
nsubj(stood-3, laird-2)
root(ROOT-0, stood-3)
det(moment-5, a-4)
nsubj(lost-10, moment-5)
nsubj(went-13, moment-5)
nsubj(shut-22, moment-5)
conj_or(moment-5, two-7)
nsubj(lost-10, two-7)
prep_like(two-7, one-9)
ccomp(stood-3, lost-10)
advmod(went-13, then-12)
ccomp(stood-3, went-13)
conj_and(lost-10, went-13)
advmod(went-13, hurriedly-14)
poss(closet-18, his-16)
prep_into(went-13, closet-18)
ccomp(stood-3, shut-22)
conj_and(lost-10, shut-22)
det(door-24, the-23)
dobj(shut-22, door-24)

(ROOT
  (S
    (SBAR (IN Whether)
      (S
        (NP (PRP he))
        (VP (VBD went)
          (PP (IN on)
            (NP (PRP$ his) (NNS knees)))
          (PP (TO to)
            (NP (NNP God)))
          (SBAR (IN as)
            (S
              (VP
                (VP (VBD did)
                  (NP (NNP Dawtie))
                  (PP (TO to)
                    (NP (PRP Him))))
                (, ,)
                (CC or)
                (VP (VBD began)
                  (ADVP (RB again))
                  (S
                    (VP (TO to)
                      (VP (VB gloat)
                        (PRT (RP over))
                        (NP (PRP$ his) (NNP Cellini) (NN goblet))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB know)))
    (. .)))

mark(went-3, Whether-1)
nsubj(went-3, he-2)
advcl(know-28, went-3)
ccomp(know-28, went-3)
poss(knees-6, his-5)
prep_on(went-3, knees-6)
prep_to(went-3, God-8)
mark(did-10, as-9)
advcl(went-3, did-10)
dobj(did-10, Dawtie-11)
prep_to(did-10, Him-13)
advcl(went-3, began-16)
conj_or(did-10, began-16)
advmod(began-16, again-17)
aux(gloat-19, to-18)
xcomp(began-16, gloat-19)
prt(gloat-19, over-20)
poss(goblet-23, his-21)
nn(goblet-23, Cellini-22)
dobj(gloat-19, goblet-23)
nsubj(know-28, I-25)
aux(know-28, do-26)
neg(know-28, not-27)
root(ROOT-0, know-28)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP
      (VP (VBD cried)
        (S
          (NP (PRP herself))
          (VP (TO to)
            (VP (VB sleep)))))
      (, ,)
      (CC and)
      (VP (VBD came)
        (PRT (RP down))
        (PP (IN in)
          (NP
            (NP (DT the) (NN morning))
            (ADJP (RB very) (JJ pale))))))
    (. .)))

nsubj(cried-2, Dawtie-1)
nsubj(came-8, Dawtie-1)
root(ROOT-0, cried-2)
dobj(cried-2, herself-3)
nsubj(sleep-5, herself-3)
aux(sleep-5, to-4)
xcomp(cried-2, sleep-5)
conj_and(cried-2, came-8)
prt(came-8, down-9)
det(morning-12, the-11)
prep_in(came-8, morning-12)
advmod(pale-14, very-13)
amod(morning-12, pale-14)

(ROOT
  (S
    (NP (PRP$ Her) (NN duty))
    (VP (VBD had)
      (VP (VBN left)
        (S
          (NP (PRP her))
          (VP (VBN exhausted)
            (PRN (, ,)
              (CC and)
              (PP (IN with)
                (NP
                  (NP (DT a) (NN kind))
                  (PP (IN of)
                    (NP (NN nausea))))))
            (PP (IN toward)
              (NP
                (NP (PDT all) (DT the) (NNS ornaments)
                  (CC and)
                  (NNS books))
                (PP (IN in)
                  (NP (DT the) (NN house)))))))))
    (. .)))

poss(duty-2, Her-1)
nsubj(left-4, duty-2)
aux(left-4, had-3)
root(ROOT-0, left-4)
nsubj(exhausted-6, her-5)
dep(left-4, exhausted-6)
cc(with-9, and-8)
dep(exhausted-6, with-9)
det(kind-11, a-10)
pobj(with-9, kind-11)
prep_of(kind-11, nausea-13)
dep(ornaments-17, all-15)
det(ornaments-17, the-16)
prep_toward(exhausted-6, ornaments-17)
prep_toward(exhausted-6, books-19)
conj_and(ornaments-17, books-19)
det(house-22, the-21)
prep_in(ornaments-17, house-22)

(ROOT
  (S
    (NP (DT A) (NN cock) (NN crew))
    (VP (VBZ loud)
      (PP (IN under)
        (NP
          (NP (DT the) (NN window))
          (PP (IN of)
            (NP (DT the) (NN kitchen))))))
    (. .)))

det(crew-3, A-1)
nn(crew-3, cock-2)
nsubj(loud-4, crew-3)
root(ROOT-0, loud-4)
det(window-7, the-6)
prep_under(loud-4, window-7)
det(kitchen-10, the-9)
prep_of(window-7, kitchen-10)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD dropped)
      (PP (IN on)
        (NP
          (NP (PRP$ her) (NNS knees))
          (, ,)
          (VP (VBN said)
            (S (`` ``)
              (NP
                (NP (NNP Father))
                (PP (IN of)
                  (NP (NNS lights)))))))))
    (. !) ('' '')))

nsubj(dropped-2, She-1)
root(ROOT-0, dropped-2)
poss(knees-5, her-4)
prep_on(dropped-2, knees-5)
vmod(knees-5, said-7)
dep(said-7, Father-9)
prep_of(Father-9, lights-11)

(ROOT
  (S (RB not)
    (NP (DT a) (NN word))
    (VP
      (VP (VBZ beside))
      (, ,)
      (VP (VBD rose))
      (CC and)
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB rouse)
              (NP (DT the) (NN fire)))))))
    (. .)))

neg(beside-4, not-1)
det(word-3, a-2)
nsubj(beside-4, word-3)
nsubj(rose-6, word-3)
nsubj(began-8, word-3)
nsubj(rouse-10, word-3)
root(ROOT-0, beside-4)
conj_and(beside-4, rose-6)
conj_and(beside-4, began-8)
aux(rouse-10, to-9)
xcomp(began-8, rouse-10)
det(fire-12, the-11)
dobj(rouse-10, fire-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (S
          (NP (NN breakfast-time))
          (VP (VBD came)))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN laird))
          (VP (VBD appeared)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD looked)
      (ADJP (RB much)
        (ADJP (RB as) (JJ usual))
        (, ,) (RB only)
        (ADJP
          (NP (DT a) (RB little))
          (JJ weary))
        (, ,))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP$ his) (NN daughter))
          (VP (VBN set)
            (PRT (RP down))
            (PP (TO to)
              (NP
                (NP (PRP$ his) (NN journey))
                (NP (DT the) (NN day))))
            (ADVP (RB before))))))
    (. .)))

advmod(came-3, When-1)
nsubj(came-3, breakfast-time-2)
advcl(looked-11, came-3)
det(laird-7, the-6)
nsubj(appeared-8, laird-7)
conj_and(came-3, appeared-8)
advcl(looked-11, appeared-8)
nsubj(looked-11, he-10)
root(ROOT-0, looked-11)
advmod(usual-14, much-12)
advmod(usual-14, as-13)
acomp(looked-11, usual-14)
advmod(usual-14, only-16)
det(little-18, a-17)
npadvmod(weary-19, little-18)
dep(usual-14, weary-19)
dobj(set-24, which-21)
poss(daughter-23, his-22)
nsubj(set-24, daughter-23)
ccomp(looked-11, set-24)
prt(set-24, down-25)
poss(journey-28, his-27)
prep_to(set-24, journey-28)
det(day-30, the-29)
dep(journey-28, day-30)
advmod(set-24, before-31)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD revived) (, ,)
      (ADVP (RB however))
      (, ,)
      (SBAR
        (ADVP (RB as) (RB soon))
        (IN as)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN succeeded)
              (PP (IN in)
                (S
                  (VP (VBG satisfying)
                    (NP (PRP himself))
                    (SBAR (IN that)
                      (S
                        (NP (NNP Alexa))
                        (VP (VBD knew)
                          (NP
                            (NP (NN nothing))
                            (PP (IN of)
                              (SBAR
                                (WHNP (WP what))
                                (S
                                  (VP (VBD had)
                                    (VP (VBN passed))))))))))))))))))
    (. .)))

nsubj(revived-2, He-1)
root(ROOT-0, revived-2)
advmod(revived-2, however-4)
advmod(soon-7, as-6)
advmod(succeeded-11, soon-7)
mark(succeeded-11, as-8)
nsubj(succeeded-11, he-9)
aux(succeeded-11, had-10)
advcl(revived-2, succeeded-11)
prepc_in(succeeded-11, satisfying-13)
dobj(satisfying-13, himself-14)
mark(knew-17, that-15)
nsubj(knew-17, Alexa-16)
ccomp(satisfying-13, knew-17)
dobj(knew-17, nothing-18)
nsubj(passed-22, what-20)
aux(passed-22, had-21)
prepc_of(nothing-18, passed-22)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB How))
      (S
        (NP
          (NP (CD staid) (, ,) (NN discreet) (, ,)
            (CC and)
            (NN compact))
          (PP (IN of)
            (NP (JJ common) (NN sense) (NN Alexa))))
        (VP (VBD seemed)
          (PP (TO to)
            (NP (PRP him)))
          (PP (IN beside)
            (NP
              (NP (NNP Dawtie))
              (, ,)
              (SBAR (WP$ whose)
                (S
                  (S
                    (VP (VB want)
                      (PP (IN of)
                        (NP (NN education)))))
                  (VP (VBD left)
                    (NP (PRP$ her) (NN mind))))))))))
    (NP
      (NP (DT a) (NN waste) (NN swamp))
      (PP (IN for)
        (NP
          (NP
            (NP (DT the) (NNS vagaries))
            (PP (IN of)
              (NP (NNP whatever) (NNP will-o) (POS '))))
          (: -) (JJ the-wisp)
          (NP (DT an) (JJ overstrained) (JJ religious) (NN fantasy)))))
    (VP (MD might)
      (VP (VB generate)))
    (. !)))

advmod(seemed-12, How-1)
nsubj(seemed-12, staid-2)
conj_and(staid-2, discreet-4)
nsubj(seemed-12, discreet-4)
conj_and(staid-2, compact-7)
nsubj(seemed-12, compact-7)
amod(Alexa-11, common-9)
nn(Alexa-11, sense-10)
prep_of(staid-2, Alexa-11)
advcl(generate-42, seemed-12)
prep_to(seemed-12, him-14)
prep_beside(seemed-12, Dawtie-16)
dep(left-22, whose-18)
csubj(left-22, want-19)
prep_of(want-19, education-21)
dep(Dawtie-16, left-22)
poss(mind-24, her-23)
dobj(left-22, mind-24)
det(swamp-27, a-25)
nn(swamp-27, waste-26)
nsubj(generate-42, swamp-27)
det(vagaries-30, the-29)
prep_for(swamp-27, vagaries-30)
nn(will-o-33, whatever-32)
prep_of(vagaries-30, will-o-33)
amod(vagaries-30, the-wisp-36)
det(fantasy-40, an-37)
amod(fantasy-40, overstrained-38)
amod(fantasy-40, religious-39)
dep(vagaries-30, fantasy-40)
aux(generate-42, might-41)
root(ROOT-0, generate-42)

(ROOT
  (S
    (S (CC But)
      (ADVP (RB however))
      (NP (RB much) (DT the) (NN laird))
      (VP (MD might)
        (VP (VB look)
          (NP (DT the) (JJ same))
          (ADVP (RB as) (RB before)))))
    (, ,)
    (NP (PRP he))
    (VP (MD could)
      (ADVP
        (ADVP (RB never))
        (PRN (, ,)
          (S
            (VP (VBG knowing)
              (SBAR (IN that)
                (S
                  (NP (NNP Dawtie))
                  (VP (VBD knew)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP she))
                        (VP (VBD knew)))))))))
          (, ,)))
      (VP (VB be)
        (ADVP (RB again))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN been)))))))
    (. .)))

cc(look-7, But-1)
advmod(look-7, however-2)
advmod(laird-5, much-3)
det(laird-5, the-4)
nsubj(look-7, laird-5)
aux(look-7, might-6)
ccomp(be-25, look-7)
det(same-9, the-8)
dobj(look-7, same-9)
advmod(before-11, as-10)
advmod(look-7, before-11)
nsubj(be-25, he-13)
aux(be-25, could-14)
advmod(be-25, never-15)
dep(never-15, knowing-17)
mark(knew-20, that-18)
nsubj(knew-20, Dawtie-19)
ccomp(knowing-17, knew-20)
dobj(knew-23, what-21)
nsubj(knew-23, she-22)
ccomp(knew-20, knew-23)
root(ROOT-0, be-25)
advmod(be-25, again-26)
mark(been-30, as-27)
nsubj(been-30, he-28)
aux(been-30, had-29)
advcl(be-25, been-30)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (MD 'll)
        (VP (VB do)
          (NP
            (NP (DT a) (JJ few))
            (PP (IN of)
              (NP (DT the) (NNS books) (NN to-day)))))))
    (, ,)
    (VP (MD wo) (RB n't))
    (NP (PRP you))
    (, ,)
    (S
      (VP (VBG Dawtie)
        (PRN (, ,) ('' '')
          (S
            (NP (PRP he))
            (VP (VBD said)))
          (, ,) (`` ``))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBP have)
              (NP (NN time)))))))
    (. ?)))

nsubj(do-4, You-2)
aux(do-4, 'll-3)
ccomp(wo-12, do-4)
det(few-6, a-5)
dobj(do-4, few-6)
det(to-day-10, the-8)
nn(to-day-10, books-9)
prep_of(few-6, to-day-10)
root(ROOT-0, wo-12)
neg(wo-12, n't-13)
nsubj(wo-12, you-14)
vmod(wo-12, Dawtie-16)
nsubj(said-20, he-19)
parataxis(Dawtie-16, said-20)
advmod(have-25, when-23)
nsubj(have-25, you-24)
advcl(Dawtie-16, have-25)
dobj(have-25, time-26)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD should)
            (VP (VB trust)
              (NP (DT any) (NN one)))))))
    (. !)))

nsubj(thought-3, I-1)
neg(thought-3, never-2)
root(ROOT-0, thought-3)
nsubj(trust-6, I-4)
aux(trust-6, should-5)
ccomp(thought-3, trust-6)
det(one-8, any-7)
dobj(trust-6, one-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RBR sooner))
      (VP
        (VP (VB have)
          (S
            (NP (JJ old) (NNS Meg))
            (VP (VB shave)
              (NP (PRP me)))))
        (IN than)
        (VP (VB let)
          (NP (PRP$ her) (NN dust)))
        (NP (DT an) (NN Elzevir))))
    (. !)))

nsubj(have-4, I-1)
aux(have-4, would-2)
advmod(have-4, sooner-3)
root(ROOT-0, have-4)
amod(Meg-6, old-5)
nsubj(shave-7, Meg-6)
ccomp(have-4, shave-7)
dobj(shave-7, me-8)
dep(have-4, than-9)
dep(have-4, let-10)
poss(dust-12, her-11)
dobj(let-10, dust-12)
det(Elzevir-14, an-13)
dobj(have-4, Elzevir-14)

(ROOT
  (S
    (VP (VB Ha))
    (. !)))

root(ROOT-0, Ha-1)

(ROOT
  (NP (NN ha) (. !)))

root(ROOT-0, ha-1)

(ROOT
  (S
    (VP (VB ha))
    (. !) ('' '')))

root(ROOT-0, ha-1)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD was)
      (ADJP (JJ glad))
      (SBAR (IN that)
        (S
          (ADVP (IN at) (JJS least))
          (NP (PRP he))
          (VP (VBD left)
            (SBAR
              (S
                (NP (DT the) (NN door))
                (VP (VBP open)
                  (PP (IN between)
                    (NP (PRP them))))))))))
    (. .)))

nsubj(glad-3, Dawtie-1)
cop(glad-3, was-2)
root(ROOT-0, glad-3)
mark(left-8, that-4)
advmod(left-8, at-5)
pobj(at-5, least-6)
nsubj(left-8, he-7)
ccomp(glad-3, left-8)
det(door-10, the-9)
nsubj(open-11, door-10)
ccomp(left-8, open-11)
prep_between(open-11, them-13)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP she))
            (VP (MD would)
              (VP (VB do)
                (NP (DT a) (JJ little) (NN dusting))
                (PP (IN in)
                  (NP (DT the) (NN afternoon))))))))
      (, ,)
      (CC and)
      (VP (MD would)
        (VP (VB be)
          (ADJP (RB very) (JJ careful)))))
    (. .)))

nsubj(said-2, She-1)
nsubj(careful-17, She-1)
root(ROOT-0, said-2)
nsubj(do-5, she-3)
aux(do-5, would-4)
ccomp(said-2, do-5)
det(dusting-8, a-6)
amod(dusting-8, little-7)
dobj(do-5, dusting-8)
det(afternoon-11, the-10)
prep_in(do-5, afternoon-11)
aux(careful-17, would-14)
cop(careful-17, be-15)
advmod(careful-17, very-16)
conj_and(said-2, careful-17)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (DT the) (NN laird))
      (VP
        (VP (VBD rose))
        (CC and)
        (VP (VBD went)
          (PRT (RP out)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Dawtie))
      (VP (VBD perceived) (, ,)
        (PP (IN with)
          (NP
            (NP (DT a) (NN shoot))
            (PP (IN of)
              (NP (NN compassion) (NN mingled)))))
        (PP (IN with)
          (NP (JJ mild) (NN remorse)))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN left)
                (S
                  (NP (PRP$ his) (NN breakfast))
                  (ADJP (RB almost) (JJ untasted)))))))))
    (. .)))

advmod(rose-4, Then-1)
det(laird-3, the-2)
nsubj(rose-4, laird-3)
nsubj(went-6, laird-3)
root(ROOT-0, rose-4)
conj_and(rose-4, went-6)
prt(went-6, out-7)
nsubj(perceived-11, Dawtie-10)
conj_and(rose-4, perceived-11)
det(shoot-15, a-14)
prep_with(perceived-11, shoot-15)
nn(mingled-18, compassion-17)
prep_of(shoot-15, mingled-18)
amod(remorse-21, mild-20)
prep_with(perceived-11, remorse-21)
mark(left-26, that-23)
nsubj(left-26, he-24)
aux(left-26, had-25)
ccomp(perceived-11, left-26)
poss(breakfast-28, his-27)
nsubj(untasted-30, breakfast-28)
advmod(untasted-30, almost-29)
xcomp(left-26, untasted-30)

(ROOT
  (S (CC But)
    (PP (IN after)
      (S
        (NP
          (NP (DT that))
          (, ,)
          (ADVP (RB so) (RB far)
            (PP (IN from)
              (ADVP (RB ever)))))
        (VP (VBG beginning)
          (NP
            (NP (DT any) (NN sort))
            (PP (IN of)
              (NP (NN conversation))))
          (PP (IN with)
            (NP (PRP her))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD seemed)
      (ADJP (JJ uncomfortable))
      (NP
        (NP (DT the) (NN moment))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD happened)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (RB alone))
                    (ADVP (RB together))))))))))
    (. .)))

cc(seemed-18, But-1)
nsubj(beginning-9, that-3)
advmod(that-3, so-5)
prepc_far_from(that-3, ever-8)
prepc_after(seemed-18, beginning-9)
det(sort-11, any-10)
dobj(beginning-9, sort-11)
prep_of(sort-11, conversation-13)
prep_with(beginning-9, her-15)
nsubj(seemed-18, he-17)
root(ROOT-0, seemed-18)
acomp(seemed-18, uncomfortable-19)
det(moment-21, the-20)
xcomp(seemed-18, moment-21)
nsubj(happened-23, they-22)
nsubj(alone-26, they-22)
rcmod(moment-21, happened-23)
aux(alone-26, to-24)
cop(alone-26, be-25)
xcomp(happened-23, alone-26)
advmod(alone-26, together-27)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBD caught)
          (NP (PRP$ her) (NN eye)))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP
        (VP
          (VP (VB say)
            (PRN (: --)
              (ADVP
                (ADVP (RB hurriedly))
                (, ,)
                (CC and)
                (RB as)
                (ADVP (IN if)))
              (VP
                (S
                  (VP (VBG acknowledging)
                    (NP
                      (NP (DT a) (NN secret))
                      (PP (IN between)
                        (NP (PRP them))))
                    (, ,) (`` ``)
                    (PP
                      (PP (IN By))
                      (CC and)
                      (PP (IN by)))))
                (, ,)
                (VP (VBZ Dawtie)))
              (: ;)))
          ('' '')
          (CC or)
          (, ,)
          (SBAR (`` ``)
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (VP (VBG thinking)
                  (PP (IN about)
                    (NP
                      (NP (DT the) (NN business))
                      (, ,)
                      (NP (NNP Dawtie))
                      (, ;))))))))
        ('' '')
        (CC or)
        (, ,)
        (SBAR (`` ``)
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (VP (VBG making)
                (PRT (RP up))
                (NP
                  (NP (PRP$ my) (NN mind))
                  (, ,)
                  (NP (NNP Dawtie)))))))))
    (. !) ('' '')))

mark(caught-3, If-1)
nsubj(caught-3, he-2)
advcl(say-9, caught-3)
poss(eye-5, her-4)
dobj(caught-3, eye-5)
nsubj(say-9, he-7)
aux(say-9, would-8)
root(ROOT-0, say-9)
dep(Dawtie-27, hurriedly-11)
conj_and(hurriedly-11, as-14)
dep(Dawtie-27, as-14)
dep(hurriedly-11, if-15)
xcomp(Dawtie-27, acknowledging-16)
det(secret-18, a-17)
dobj(acknowledging-16, secret-18)
prep_between(secret-18, them-20)
prep(acknowledging-16, By-23)
prep(acknowledging-16, by-25)
conj_and(By-23, by-25)
dep(say-9, Dawtie-27)
cc(say-9, or-30)
nsubj(thinking-35, I-33)
aux(thinking-35, 'm-34)
ccomp(say-9, thinking-35)
det(business-38, the-37)
prep_about(thinking-35, business-38)
appos(business-38, Dawtie-40)
cc(say-9, or-43)
nsubj(making-48, I-46)
aux(making-48, 'm-47)
ccomp(say-9, making-48)
prt(making-48, up-49)
poss(mind-51, my-50)
dobj(making-48, mind-51)
appos(mind-51, Dawtie-53)

(ROOT
  (S (CC and)
    (RB so)
    (VP (VBP leave)
      (NP (PRP her)))
    (. .)))

cc(leave-3, and-1)
advmod(leave-3, so-2)
root(ROOT-0, leave-3)
dobj(leave-3, her-4)

(ROOT
  (S
    (PP (IN On)
      (NP (CD one) (NN occasion)))
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said)))
      (, ,))
    (`` ``)
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJ surprised)
          (NP
            (NP (DT some) (NN day))
            (, ,)
            (NP (NNP Dawtie))))))
    (. !) ('' '')))

num(occasion-3, one-2)
prep_on(surprised-12, occasion-3)
nsubj(said-5, he-4)
parataxis(surprised-12, said-5)
advmod(surprised-12, Perhaps-8)
nsubj(surprised-12, you-9)
aux(surprised-12, will-10)
cop(surprised-12, be-11)
root(ROOT-0, surprised-12)
det(day-14, some-13)
dep(surprised-12, day-14)
appos(day-14, Dawtie-16)

(ROOT
  (S
    (PP (IN On)
      (NP (PRP$ her) (NN part)))
    (NP (NNP Dawtie))
    (ADVP (RB never))
    (VP (VBD felt)
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (NP (NN anything))
            (ADVP (RBR more))
            (S
              (VP (TO to)
                (VP (VB say)
                  (PP (TO to)
                    (NP (PRP him))))))))))
    (. .)))

poss(part-3, her-2)
prep_on(felt-6, part-3)
nsubj(felt-6, Dawtie-4)
neg(felt-6, never-5)
root(ROOT-0, felt-6)
mark(had-9, that-7)
nsubj(had-9, she-8)
ccomp(felt-6, had-9)
dobj(had-9, anything-10)
advmod(had-9, more-11)
aux(say-13, to-12)
vmod(had-9, say-13)
prep_to(say-13, him-15)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD feared)
      (PP (IN at)
        (NP (NNS times)))
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN done)
              (S
                (NP (PRP him))
                (ADJP (JJ evil)
                  (PP (RB rather) (IN than)
                    (ADJP (JJ good)
                      (PP (IN by)
                        (S
                          (VP (VBG pressing)
                            (PP (IN upon)
                              (NP (PRP him)))
                            (NP
                              (NP (DT a) (NN duty))
                              (SBAR
                                (S
                                  (NP (PRP she))
                                  (VP (VBD had) (RB not)
                                    (VP (VBN persuaded)
                                      (S
                                        (NP (PRP him))
                                        (VP (TO to)
                                          (VP (VB perform)))))))))))))))))))))
    (. .)))

nsubj(feared-2, She-1)
root(ROOT-0, feared-2)
prep_at(feared-2, times-4)
mark(done-8, that-5)
nsubj(done-8, she-6)
aux(done-8, had-7)
ccomp(feared-2, done-8)
nsubj(evil-10, him-9)
xcomp(done-8, evil-10)
advmod(evil-10, rather-11)
prep_than(evil-10, good-13)
prepc_by(good-13, pressing-15)
prep_upon(pressing-15, him-17)
det(duty-19, a-18)
dobj(pressing-15, duty-19)
nsubj(persuaded-23, she-20)
aux(persuaded-23, had-21)
neg(persuaded-23, not-22)
rcmod(duty-19, persuaded-23)
dobj(persuaded-23, him-24)
nsubj(perform-26, him-24)
aux(perform-26, to-25)
xcomp(persuaded-23, perform-26)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD spoke)
        (PP (IN of)
          (NP (DT this) (NN fear)))
        (PP (TO to)
          (NP (NNP Andrew)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD answered)
        (ADVP (RB decisively))
        (: :) (`` ``)
        (S
          (SBAR (IN If)
            (S
              (NP (PRP you))
              (VP (VBD believed)
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD ought)
                      (S
                        (VP (TO to)
                          (VP
                            (VP (VB speak)
                              (PP (TO to)
                                (NP (PRP him))))
                            (, ,)
                            (CC and)
                            (VP (VB have)
                              (VP (VBN discovered)
                                (PP (IN in)
                                  (S
                                    (VP (VBG yourself)
                                      (NP (DT no) (JJ wrong) (NN motive))))))))))))))))
          (, ,)
          (NP (PRP you))
          (VP (MD must) (RB not)
            (VP (VB trouble)
              (NP (PRP yourself))
              (PP (IN about)
                (NP (DT the) (NN result))))))))
    (. .)))

nsubj(spoke-2, She-1)
root(ROOT-0, spoke-2)
det(fear-5, this-4)
prep_of(spoke-2, fear-5)
prep_to(spoke-2, Andrew-7)
nsubj(answered-11, he-10)
conj_but(spoke-2, answered-11)
advmod(answered-11, decisively-12)
mark(believed-17, If-15)
nsubj(believed-17, you-16)
advcl(trouble-37, believed-17)
nsubj(ought-19, you-18)
nsubj(speak-21, you-18)
nsubj(discovered-27, you-18)
ccomp(believed-17, ought-19)
aux(speak-21, to-20)
xcomp(ought-19, speak-21)
prep_to(speak-21, him-23)
aux(discovered-27, have-26)
xcomp(ought-19, discovered-27)
conj_and(speak-21, discovered-27)
prepc_in(discovered-27, yourself-29)
neg(motive-32, no-30)
amod(motive-32, wrong-31)
dobj(yourself-29, motive-32)
nsubj(trouble-37, you-34)
aux(trouble-37, must-35)
neg(trouble-37, not-36)
ccomp(answered-11, trouble-37)
dobj(trouble-37, yourself-38)
det(result-41, the-40)
prep_about(trouble-37, result-41)

(ROOT
  (S
    (NP (DT That))
    (VP (MD may)
      (VP (VB be)
        (NP (DT a) (CD thousand) (NNS years))
        (ADVP (RB off) (RB yet))))
    (. .)))

nsubj(years-6, That-1)
aux(years-6, may-2)
cop(years-6, be-3)
det(years-6, a-4)
num(years-6, thousand-5)
root(ROOT-0, years-6)
advmod(yet-8, off-7)
advmod(years-6, yet-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD may)
      (VP (VB have)
        (VP (VBN sent)
          (NP (PRP him))
          (PP
            (PP (IN into)
              (NP (DT a) (NN hotter) (NN purgatory)))
            (, ,)
            (CC and)
            (PP (IN at)
              (NP
                (NP (DT the) (JJ same) (NN time))
                (VP (VBN made)
                  (S
                    (NP (PRP it))
                    (ADJP
                      (ADJP (JJR shorter))
                      (PP (IN for)
                        (NP (PRP him))))))))))))
    (. .)))

nsubj(sent-4, You-1)
nsubj(sent-4', You-1)
aux(sent-4, may-2)
aux(sent-4, have-3)
root(ROOT-0, sent-4)
conj_and(sent-4, sent-4')
dobj(sent-4, him-5)
det(purgatory-9, a-7)
nn(purgatory-9, hotter-8)
prep_into(sent-4, purgatory-9)
det(time-15, the-13)
amod(time-15, same-14)
prep_at(sent-4', time-15)
vmod(time-15, made-16)
nsubj(shorter-18, it-17)
xcomp(made-16, shorter-18)
prep_for(shorter-18, him-20)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP know)
      (SBAR
        (ADVP (NN nothing) (RB but))
        (IN that)
        (S
          (NP (NNP God))
          (VP (VBZ is)
            (ADJP (JJ righteous))))))
    (. .) ('' '')))

nsubj(know-2, We-1)
root(ROOT-0, know-2)
dep(but-4, nothing-3)
advmod(righteous-8, but-4)
mark(righteous-8, that-5)
nsubj(righteous-8, God-6)
cop(righteous-8, is-7)
dep(know-2, righteous-8)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD was)
        (VP (VBN comforted))))
    (, ,)
    (CC and)
    (S
      (NP (NNS things))
      (VP (VBD went)
        (PRT (RP on))
        (ADVP (RB as) (RB before))))
    (. .)))

nsubjpass(comforted-3, Dawtie-1)
auxpass(comforted-3, was-2)
root(ROOT-0, comforted-3)
nsubj(went-7, things-6)
conj_and(comforted-3, went-7)
prt(went-7, on-8)
advmod(before-10, as-9)
advmod(went-7, before-10)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB Where))
        (S
          (NP (NNS people))
          (VP
            (VP (VBP know)
              (NP (PRP$ their) (NN work)))
            (CC and)
            (VP (VBP do)
              (NP (PRP it))))))
      (, ,)
      (NP (NN life))
      (VP (VBZ has)
        (NP
          (NP (JJ few) (JJ blank) (NNS spaces))
          (PP (IN for)
            (NP (NN ennui))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (ADVP (RB seldom))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN pitied)))))))
    (. .)))

advmod(know-3, Where-1)
nsubj(know-3, people-2)
nsubj(do-7, people-2)
advcl(has-11, know-3)
poss(work-5, their-4)
dobj(know-3, work-5)
conj_and(know-3, do-7)
advcl(has-11, do-7)
dobj(do-7, it-8)
nsubj(has-11, life-10)
root(ROOT-0, has-11)
amod(spaces-14, few-12)
amod(spaces-14, blank-13)
dobj(has-11, spaces-14)
prep_for(spaces-14, ennui-16)
nsubj(are-20, they-19)
nsubjpass(pitied-24, they-19)
conj_and(has-11, are-20)
advmod(are-20, seldom-21)
aux(pitied-24, to-22)
auxpass(pitied-24, be-23)
xcomp(are-20, pitied-24)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB Where))
      (S
        (NP (NNS people))
        (VP (VBP have) (RB not)
          (ADVP (RB yet))
          (VP (VBN found)
            (NP (PRP$ their) (NN work))))))
    (, ,)
    (NP (PRP they))
    (VP (MD may)
      (VP (VB be)
        (ADJP (RBR more)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN pitied)
                  (PP (IN than)
                    (NP
                      (NP (DT those))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VB beg)
                            (NP (PRP$ their) (NN bread))))))))))))))
    (. .)))

advmod(found-6, Where-1)
nsubj(found-6, people-2)
aux(found-6, have-3)
neg(found-6, not-4)
advmod(found-6, yet-5)
advcl(more-13, found-6)
poss(work-8, their-7)
dobj(found-6, work-8)
nsubj(more-13, they-10)
nsubjpass(pitied-16, they-10)
aux(more-13, may-11)
cop(more-13, be-12)
root(ROOT-0, more-13)
aux(pitied-16, to-14)
auxpass(pitied-16, be-15)
xcomp(more-13, pitied-16)
prep_than(pitied-16, those-18)
nsubj(beg-20, those-18)
rcmod(those-18, beg-20)
poss(bread-22, their-21)
dobj(beg-20, bread-22)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT a) (NN man))
        (VP
          (VP (VBZ knows)
            (NP (PRP$ his) (NN work)))
          (CC and)
          (VP (MD will) (RB not)
            (VP (VB do)
              (NP (PRP it)))))))
    (, ,)
    (VP (VB pity)
      (NP (PRP him))
      (SBAR
        (WHNP
          (QP (JJR more) (IN than) (CD one))
          (WP who))
        (S
          (VP (VBZ is)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN hanged)
                    (NP (NN to-morrow))))))))))
    (. .)))

advmod(knows-4, When-1)
det(man-3, a-2)
nsubj(knows-4, man-3)
nsubj(do-10, man-3)
advcl(pity-13, knows-4)
poss(work-6, his-5)
dobj(knows-4, work-6)
aux(do-10, will-8)
neg(do-10, not-9)
conj_and(knows-4, do-10)
advcl(pity-13, do-10)
dobj(do-10, it-11)
root(ROOT-0, pity-13)
dobj(pity-13, him-14)
mwe(than-16, more-15)
quantmod(one-17, than-16)
num(who-18, one-17)
nsubj(is-19, who-18)
nsubjpass(hanged-22, who-18)
dep(pity-13, is-19)
aux(hanged-22, to-20)
auxpass(hanged-22, be-21)
xcomp(is-19, hanged-22)
dobj(hanged-22, to-morrow-23)

(ROOT
  (NP (NNP CHAPTER) (NNP XIX) (. .)))

nn(XIX-2, CHAPTER-1)
root(ROOT-0, XIX-2)

(ROOT
  (NP (NNP ANDREW)
    (CC AND)
    (NNP ALEXA) (. .)))

root(ROOT-0, ANDREW-1)
conj_and(ANDREW-1, ALEXA-3)

(ROOT
  (S
    (S
      (NP (NNP Andrew))
      (VP (VBD had)
        (VP (VBN occasion)
          (S
            (VP (TO to)
              (VP (VB call)
                (PP (IN on)
                  (NP (DT the) (NN laird)
                    (S
                      (VP (TO to)
                        (VP (VB pay)
                          (NP
                            (NP (PRP$ his) (NN father) (POS 's))
                            (NN rent)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNP Alexa))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD had) (RB not)
              (VP (VBN seen)
                (NP (PRP him))
                (PP (IN for)
                  (NP (DT some) (NN time)))))))
        (, ,))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP him))
            (VP
              (VP (VBD improved)
                (PP (DT both) (IN in)
                  (NP (NN carriage)
                    (CC and)
                    (NN speech))))
              (, ,)
              (CC and)
              (VP (VBD wondered)))))))
    (. .)))

nsubj(occasion-3, Andrew-1)
nsubj(call-5, Andrew-1)
aux(occasion-3, had-2)
root(ROOT-0, occasion-3)
aux(call-5, to-4)
xcomp(occasion-3, call-5)
det(laird-8, the-7)
prep_on(call-5, laird-8)
aux(pay-10, to-9)
vmod(laird-8, pay-10)
poss(father-12, his-11)
poss(rent-14, father-12)
dobj(pay-10, rent-14)
nsubj(seen-22, Alexa-17)
nsubj(thought-28, Alexa-17)
aux(seen-22, had-20)
neg(seen-22, not-21)
rcmod(Alexa-17, seen-22)
dobj(seen-22, him-23)
det(time-26, some-25)
prep_for(seen-22, time-26)
conj_and(occasion-3, thought-28)
nsubj(improved-30, him-29)
nsubj(wondered-38, him-29)
ccomp(thought-28, improved-30)
dep(improved-30, both-31)
prep_in(improved-30, carriage-33)
prep_in(improved-30, speech-35)
conj_and(carriage-33, speech-35)
ccomp(thought-28, wondered-38)
conj_and(improved-30, wondered-38)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD did) (RB not)
      (VP
        (VP (VB take)
          (PP (IN into)
            (NP (NN account) (PRP$ his) (NN intercourse)))
          (PP
            (PP (IN with)
              (NP (NNP God)))
            (, ,) (RB as)
            (PP (IN with)
              (NP (JJS highest) (JJ human) (NNS minds)))))
        (, ,)
        (CC and)
        (VP
          (NP (PRP$ his) (JJ constant) (NNS wakefulness))
          (S
            (VP (TO to)
              (VP (VB carry)
                (PP (IN into)
                  (NP (NN action)))
                (SBAR
                  (WHNP (WP what) (NNS things))
                  (S
                    (NP (PRP he))
                    (VP (VBD learned))))))))))
    (. .)))

nsubj(take-4, She-1)
aux(take-4, did-2)
neg(take-4, not-3)
root(ROOT-0, take-4)
nn(intercourse-8, account-6)
poss(intercourse-8, his-7)
prep_into(take-4, intercourse-8)
prep_with(take-4, God-10)
dep(take-4, as-12)
amod(minds-16, highest-14)
amod(minds-16, human-15)
prep_with(take-4, minds-16)
poss(wakefulness-21, his-19)
amod(wakefulness-21, constant-20)
conj_and(take-4, wakefulness-21)
aux(carry-23, to-22)
vmod(wakefulness-21, carry-23)
prep_into(carry-23, action-25)
det(things-27, what-26)
dobj(learned-29, things-27)
nsubj(learned-29, he-28)
ccomp(carry-23, learned-29)

(ROOT
  (S
    (S
      (VP
        (ADVP (RB Thus))
        (JJ trained)
        (PP (IN in)
          (NP
            (NP (JJ noblest) (NNS fashions))
            (PP (IN of)
              (NP (NN freedom)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADJP (JJ small)
        (SBAR
          (S
            (VP (VBP wonder)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (PRP$ his) (NN bearing)
                      (CC and)
                      (NNS manners))
                    (, ,)
                    (NP
                      (NP (DT the) (JJ natural) (NN outcome)
                        (CC and)
                        (NN expression))
                      (PP (IN of)
                        (NP
                          (NP (PRP$ his) (NNS habits))
                          (PP (IN of)
                            (NP (VBG being))))))
                    (, ,))
                  (VP (MD should)
                    (VP (VB grow)
                      (PP (IN in)
                        (NP (NN liberty))))))))))))
    (. .)))

advmod(trained-2, Thus-1)
ccomp(small-11, trained-2)
amod(fashions-5, noblest-4)
prep_in(trained-2, fashions-5)
prep_of(fashions-5, freedom-7)
nsubj(small-11, it-9)
cop(small-11, was-10)
root(ROOT-0, small-11)
ccomp(small-11, wonder-12)
mark(grow-31, that-13)
poss(bearing-15, his-14)
nsubj(grow-31, bearing-15)
conj_and(bearing-15, manners-17)
nsubj(grow-31, manners-17)
det(outcome-21, the-19)
amod(outcome-21, natural-20)
appos(bearing-15, outcome-21)
appos(bearing-15, expression-23)
conj_and(outcome-21, expression-23)
poss(habits-26, his-25)
prep_of(outcome-21, habits-26)
prep_of(habits-26, being-28)
aux(grow-31, should-30)
ccomp(wonder-12, grow-31)
prep_in(grow-31, liberty-33)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (PP (IN in)
        (NP (PRP them)))
      (NP
        (NP (DT the) (NN change))
        (PP (RB only) (IN of)
          (NP (NN development)))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
prep_in(was-2, them-4)
det(change-6, the-5)
nsubj(was-2, change-6)
advmod(change-6, only-7)
prep_of(change-6, development-9)

(ROOT
  (FRAG
    (PP (IN By)
      (NP
        (NP (DT the) (NN side))
        (PP (IN of)
          (NP (JJ such) (NN education)))
        (PP (IN as)
          (NP (DT this)))
        (, ,)
        (VP (VBG dealing)
          (PP (IN with)
            (NP (NN reality)
              (CC and)
              (NN inborn) (NN dignity))))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBN mattered)
              (NP
                (NP (DT any) (NN amount))
                (PP (IN of)
                  (NP (NN ignorance))))
              (PP (IN as)
                (PP (TO to)
                  (NP (JJ social) (NN custom)))))))))
    (. !)))

root(ROOT-0, By-1)
det(side-3, the-2)
pobj(By-1, side-3)
nsubj(mattered-18, side-3)
amod(education-6, such-5)
prep_of(side-3, education-6)
prep_as(side-3, this-8)
vmod(side-3, dealing-10)
nn(dignity-15, reality-12)
conj_and(reality-12, inborn-14)
nn(dignity-15, inborn-14)
prep_with(dealing-10, dignity-15)
rcmod(side-3, mattered-18)
det(amount-20, any-19)
dobj(mattered-18, amount-20)
prep_of(amount-20, ignorance-22)
prepc_as_to(mattered-18, to-24)
amod(custom-26, social-25)
pobj(mattered-18, custom-26)

(ROOT
  (S
    (S
      (NP (NNP Society))
      (VP (MD may)
        (VP (VB judge)
          (NP (PRP$ its) (JJ own)))))
    (: ;)
    (S
      (NP (DT this) (NN man))
      (VP (VBD was)
        (UCP (RB not)
          (PP (IN of)
            (NP (PRP it)))
          (, ,)
          (CC and)
          (SBAR (IN as)
            (S
              (NP (RB much))
              (VP (VBD surpassed)
                (NP (PRP$ its) (JJS most) (JJ accomplished) (NNS pupils))
                (PP (IN in)
                  (NP
                    (NP (PDT all) (DT the) (NNS essentials))
                    (PP (IN of)
                      (NP (NN breeding)))))))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (DT the) (JJ apostle) (NNP Paul))
            (VP (VBD was)
              (NP
                (NP (DT a) (JJR better) (NN gentleman))
                (PP (IN than)
                  (NP
                    (NP (NNP Mr.) (NNP Nash))
                    (CC or)
                    (NP (NNP Mr.) (NNP Brummel))))))))))
    (. .)))

nsubj(judge-3, Society-1)
aux(judge-3, may-2)
root(ROOT-0, judge-3)
poss(own-5, its-4)
dobj(judge-3, own-5)
det(man-8, this-7)
nsubj(was-9, man-8)
parataxis(judge-3, was-9)
dep(was-9, not-10)
dep(not-10, of-11)
pobj(of-11, it-12)
mark(surpassed-17, as-15)
nsubj(surpassed-17, much-16)
dep(was-9, surpassed-17)
conj_and(not-10, surpassed-17)
poss(pupils-21, its-18)
amod(pupils-21, most-19)
amod(pupils-21, accomplished-20)
dobj(surpassed-17, pupils-21)
predet(essentials-25, all-23)
det(essentials-25, the-24)
prep_in(surpassed-17, essentials-25)
prep_of(essentials-25, breeding-27)
mark(gentleman-36, as-29)
det(Paul-32, the-30)
amod(Paul-32, apostle-31)
nsubj(gentleman-36, Paul-32)
cop(gentleman-36, was-33)
det(gentleman-36, a-34)
amod(gentleman-36, better-35)
advcl(was-9, gentleman-36)
nn(Nash-39, Mr.-38)
prep_than(gentleman-36, Nash-39)
nn(Brummel-42, Mr.-41)
prep_than(gentleman-36, Brummel-42)
conj_or(Nash-39, Brummel-42)

(ROOT
  (S
    (S
      (NP (DT The) (NN training))
      (VP (MD may)
        (VP (VB be)
          (ADJP (JJ slow)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ perfect))))
    (. .)))

det(training-2, The-1)
nsubj(slow-5, training-2)
aux(slow-5, may-3)
cop(slow-5, be-4)
root(ROOT-0, slow-5)
nsubj(perfect-10, it-8)
cop(perfect-10, is-9)
conj_but(slow-5, perfect-10)

(ROOT
  (S
    (PP (TO To)
      (NP
        (NP (PRP him))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ has)
              (VP (VBN yielded)
                (NP (NN self))))))))
    (, ,)
    (NP (DT all) (NNS things))
    (VP (VBP are)
      (ADJP (JJ possible)))
    (. .)))

nsubj(yielded-5, him-2)
prep_to(possible-11, him-2)
aux(yielded-5, has-4)
rcmod(him-2, yielded-5)
dobj(yielded-5, self-6)
det(things-9, all-8)
nsubj(possible-11, things-9)
cop(possible-11, are-10)
root(ROOT-0, possible-11)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD was)
      (ADJP (JJ aware)
        (PP (IN of)
          (NP (DT no) (NN difference)))))
    (. .)))

nsubj(aware-3, Andrew-1)
cop(aware-3, was-2)
root(ROOT-0, aware-3)
neg(difference-6, no-5)
prep_of(aware-3, difference-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD seemed)
      (PP (TO to)
        (NP
          (ADJP
            (ADJP
              (NP (PRP himself))
              (NP (DT the) (JJ same)))
            (PP (IN as)
              (FRAG
                (WHADVP (WRB when)))))
          (DT a) (NN boy))))
    (. .)))

nsubj(seemed-2, He-1)
root(ROOT-0, seemed-2)
amod(boy-10, himself-4)
det(same-6, the-5)
dep(himself-4, same-6)
prep(himself-4, as-7)
dep(as-7, when-8)
det(boy-10, a-9)
prep_to(seemed-2, boy-10)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD had) (RB not)
      (ADVP (RB again))
      (VP (VBN alluded)
        (PP (TO to)
          (NP
            (NP (PRP$ his) (NN brother) (POS 's))
            (NN letter)))
        (PP (VBG concerning)
          (NP
            (NP (NNP George) (NNP Crawford))
            (, ,)
            (VP (VBG fearing)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (MD might)
                    (VP (VB say)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP she))
                          (VP (MD would)
                            (VP (VB find)
                              (ADJP (JJ unpleasant)))))))))))))))
    (. .)))

nsubj(alluded-5, Alexa-1)
aux(alluded-5, had-2)
neg(alluded-5, not-3)
advmod(alluded-5, again-4)
root(ROOT-0, alluded-5)
poss(brother-8, his-7)
poss(letter-10, brother-8)
prep_to(alluded-5, letter-10)
nn(Crawford-13, George-12)
prep_concerning(alluded-5, Crawford-13)
vmod(Crawford-13, fearing-15)
nsubj(say-18, he-16)
aux(say-18, might-17)
ccomp(fearing-15, say-18)
dobj(find-22, what-19)
nsubj(find-22, she-20)
aux(find-22, would-21)
ccomp(say-18, find-22)
acomp(find-22, unpleasant-23)

(ROOT
  (S (CC But)
    (ADVP (RB now))
    (NP (PRP she))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB get)
            (NP (DT a) (JJ definite) (NN opinion))
            (PP (IN from)
              (NP
                (NP (PRP him))
                (PP (IN in)
                  (NP (NN regard)))))
            (PP (TO to)
              (NP
                (NP (JJ certain) (NNS modes))
                (PP (IN of)
                  (NP
                    (NP (JJ money-making))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBD had)
                          (PP
                            (ADVP (RB naturally))
                            (IN of)
                            (NP
                              (NP (RB late) (JJ occupied) (DT a) (JJ good) (NN deal))
                              (PP (IN of)
                                (NP (PRP$ her) (NN thought))))))))))))))))
    (. .)))

cc(wanted-4, But-1)
advmod(wanted-4, now-2)
nsubj(wanted-4, she-3)
nsubj(get-6, she-3)
root(ROOT-0, wanted-4)
aux(get-6, to-5)
xcomp(wanted-4, get-6)
det(opinion-9, a-7)
amod(opinion-9, definite-8)
dobj(get-6, opinion-9)
prep_from(get-6, him-11)
prep_in(him-11, regard-13)
amod(modes-16, certain-15)
prep_to(get-6, modes-16)
prep_of(modes-16, money-making-18)
nsubj(had-21, money-making-18)
rcmod(money-making-18, had-21)
advmod(had-21, naturally-22)
advmod(deal-28, late-24)
amod(deal-28, occupied-25)
det(deal-28, a-26)
amod(deal-28, good-27)
prep_of(had-21, deal-28)
poss(thought-31, her-30)
prep_of(deal-28, thought-31)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (PRP$ your) (NN notion))
        (PP (VBG concerning)
          (S
            (VP (VBG money-lending) (: --)
              (S
                (NP (PRP I))
                (VP (VB mean)
                  (PP (IN at)
                    (NP
                      (NP (NN interest))
                      (, ,)
                      (NP (NNP Mr.) (NNP Ingram)))))))))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
poss(notion-5, your-4)
nsubj(What-2, notion-5)
prepc_concerning(notion-5, money-lending-7)
nsubj(mean-10, I-9)
ccomp(money-lending-7, mean-10)
parataxis(money-lending-7, mean-10)
prep_at(mean-10, interest-12)
nn(Ingram-15, Mr.-14)
appos(interest-12, Ingram-15)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP hear)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ objected)
              (S
                (VP (TO to)
                  (VP (VB nowadays)
                    (PP (IN by)
                      (NP
                        (NP (DT some))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBN set)
                              (PRT (RP up))
                              (PP (IN for)
                                (NP (NNS teachers))))))))))))))))
    (. !) ('' '')))

nsubj(hear-3, I-2)
root(ROOT-0, hear-3)
nsubj(objected-6, it-4)
nsubj(nowadays-8, it-4)
cop(objected-6, is-5)
ccomp(hear-3, objected-6)
aux(nowadays-8, to-7)
xcomp(objected-6, nowadays-8)
prep_by(nowadays-8, some-10)
nsubj(set-12, some-10)
rcmod(some-10, set-12)
prt(set-12, up-13)
prep_for(set-12, teachers-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (PP (IN by)
          (NP (DT no) (NNS means)))
        (NP
          (NP (DT the) (JJ first) (NN time))
          (PP (IN in)
            (NP
              (NP (DT the) (NN world) (POS 's))
              (NN history))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Andrew))
    (. .)))

nsubj(time-9, It-2)
cop(time-9, is-3)
neg(means-6, no-5)
prep_by(time-9, means-6)
det(time-9, the-7)
amod(time-9, first-8)
ccomp(answered-17, time-9)
det(world-12, the-11)
poss(history-14, world-12)
prep_in(time-9, history-14)
root(ROOT-0, answered-17)
nsubj(answered-17, Andrew-18)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP think)
                  (PP (IN of)
                    (NP
                      (NP (PRP it))
                      (, ,)
                      (NP (NNP Mr.) (NNP Ingram)))))))))))
    (. ?) ('' '')))

nsubj(want-3, I-2)
nsubj(know-5, I-2)
root(ROOT-0, want-3)
aux(know-5, to-4)
xcomp(want-3, know-5)
dobj(think-8, what-6)
nsubj(think-8, you-7)
ccomp(know-5, think-8)
prep_of(think-8, it-10)
nn(Ingram-13, Mr.-12)
appos(it-10, Ingram-13)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (ADVP (RB little))))
    (, ,) ('' '')
    (VP (VBD replied)
      (NP (NNP Andrew))
      (, ,) (`` ``)
      (PP (IN of)
        (NP (DT any) (NN matter)))
      (PP (IN with)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP I))
            (VP (VBP have) (RB not)
              (VP (VBN had)
                (S
                  (VP (TO to)
                    (VP (VB deal)
                      (ADVP (RB practically)))))))))))
    (. .) ('' '')))

nsubj(know-3, I-2)
ccomp(replied-7, know-3)
advmod(know-3, little-4)
root(ROOT-0, replied-7)
dobj(replied-7, Andrew-8)
det(matter-13, any-12)
prep_of(replied-7, matter-13)
dobj(had-19, which-15)
nsubj(deal-21, which-15)
nsubj(had-19, I-16)
aux(had-19, have-17)
neg(had-19, not-18)
prepc_with(replied-7, had-19)
aux(deal-21, to-20)
xcomp(had-19, deal-21)
advmod(deal-21, practically-22)

(ROOT
  (S (`` ``)
    (CC But)
    (VP (MD ought)
      (ADVP (RB not)
        (NP (CD one)))
      (S
        (VP (TO to)
          (VP (VB have)
            (S
              (NP (PRP$ his) (NNS ideas))
              (ADJP (JJ ready)))
            (PP (IN for)
              (NP (DT the) (NN time))))))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (MD will)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB deal)
                    (ADVP (RB practically))))))))))
    (. ?) ('' '')))

cc(ought-3, But-2)
root(ROOT-0, ought-3)
neg(ought-3, not-4)
dep(not-4, one-5)
aux(have-7, to-6)
xcomp(ought-3, have-7)
poss(ideas-9, his-8)
nsubj(ready-10, ideas-9)
xcomp(have-7, ready-10)
det(time-13, the-12)
prep_for(have-7, time-13)
advmod(have-17, when-14)
nsubj(have-17, we-15)
nsubj(deal-19, we-15)
aux(have-17, will-16)
advcl(ought-3, have-17)
aux(deal-19, to-18)
xcomp(have-17, deal-19)
advmod(deal-19, practically-20)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Alexa-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP Mine))
      (VP (MD would)
        (VP (VB be)
          (ADJP (RB pretty) (JJ sure)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ wrong)))))))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD answered))
        (NP (NNP Andrew))))
    (: ;) (`` ``)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT no) (NN time)
          (S
            (VP (TO to)
              (VP (VB spend)
                (PP (IN in)
                  (S
                    (VP
                      (VP (VBG gathering)
                        (NP (JJ wrong) (NNS ideas)))
                      (CC and)
                      (VP
                        (ADVP (RB then))
                        (VBG changing)
                        (NP (PRP them))))))))))))
    (. !) ('' '')))

nsubj(sure-6, Mine-2)
nsubj(wrong-9, Mine-2)
aux(sure-6, would-3)
cop(sure-6, be-4)
advmod(sure-6, pretty-5)
root(ROOT-0, sure-6)
aux(wrong-9, to-7)
cop(wrong-9, be-8)
xcomp(sure-6, wrong-9)
dep(sure-6, answered-12)
nsubj(answered-12, Andrew-13)
expl(is-18, there-17)
conj_and(sure-6, is-18)
neg(time-20, no-19)
nsubj(is-18, time-20)
aux(spend-22, to-21)
vmod(time-20, spend-22)
prepc_in(spend-22, gathering-24)
amod(ideas-26, wrong-25)
dobj(gathering-24, ideas-26)
advmod(changing-29, then-28)
prepc_in(spend-22, changing-29)
conj_and(gathering-24, changing-29)
dobj(changing-29, them-30)

(ROOT
  (S (`` ``)
    (PP (IN On)
      (NP (DT the) (NN contrary)))
    (, ,)
    (NP (PRP they))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RBR less) (JJ warped)
          (PP (IN by)
            (NP (JJ personal) (NN interest))))))
    (. .) ('' '')))

det(contrary-4, the-3)
prep_on(warped-10, contrary-4)
nsubj(warped-10, they-6)
aux(warped-10, would-7)
cop(warped-10, be-8)
advmod(warped-10, less-9)
root(ROOT-0, warped-10)
amod(interest-13, personal-12)
prep_by(warped-10, interest-13)

(ROOT
  (S (`` ``)
    (NP (JJ Could) (NNS circumstances))
    (VP (VBP arise)
      (SBAR
        (WHPP (IN in)
          (WHNP (WDT which)))
        (S
          (NP (PRP it))
          (VP (MD would) (RB not)
            (VP (VB be)
              (NP (PRP$ my) (JJ first) (NN interest)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ honest)))))))))))
    (. ?) ('' '')))

amod(circumstances-3, Could-2)
nsubj(arise-4, circumstances-3)
root(ROOT-0, arise-4)
prep_in(interest-13, which-6)
nsubj(interest-13, it-7)
aux(interest-13, would-8)
neg(interest-13, not-9)
cop(interest-13, be-10)
poss(interest-13, my-11)
amod(interest-13, first-12)
ccomp(arise-4, interest-13)
aux(honest-16, to-14)
cop(honest-16, be-15)
vmod(interest-13, honest-16)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Would) (RB not))
    (SQ
      (NP (PRP$ my) (NN judgment))
      (VP (VB be)
        (VP (VBN quickened)
          (PP (IN by)
            (NP
              (NP (DT the) (NN compulsion))
              (CC and)
              (NP (DT the) (NN danger)))))))
    (. ?)))

advmod(not-3, Would-2)
advmod(quickened-7, not-3)
poss(judgment-5, my-4)
nsubjpass(quickened-7, judgment-5)
auxpass(quickened-7, be-6)
root(ROOT-0, quickened-7)
det(compulsion-10, the-9)
agent(quickened-7, compulsion-10)
det(danger-13, the-12)
agent(quickened-7, danger-13)
conj_and(compulsion-10, danger-13)

(ROOT
  (SQ
    (PP (IN In)
      (NP (DT no) (NN danger) (PRP myself)))
    (, ,) (MD might)
    (NP (PRP I))
    (ADVP (RB not))
    (VP (VB judge)
      (ADJP (RB too) (JJ leniently))
      (PP (IN of)
        (NP
          (NP (NNS things))
          (SBAR
            (WHPP (IN from)
              (WHNP (WDT which)))
            (S
              (NP (PRP I))
              (VP (MD should)
                (VP (VB myself)
                  (ADJP (JJ recoil)))))))))
    (. ?)))

neg(danger-3, no-2)
prep_in(judge-9, danger-3)
npadvmod(danger-3, myself-4)
aux(judge-9, might-6)
nsubj(judge-9, I-7)
advmod(judge-9, not-8)
root(ROOT-0, judge-9)
advmod(leniently-11, too-10)
acomp(judge-9, leniently-11)
prep_of(judge-9, things-13)
prep_from(myself-18, things-13)
nsubj(myself-18, I-16)
aux(myself-18, should-17)
rcmod(things-13, myself-18)
acomp(myself-18, recoil-19)

(ROOT
  (FRAG
    (ADJP
      (ADJP (RB Selfishly) (JJR smoother)
        (PP (IN with)
          (NP (NN regard))))
      (PP (TO to)
        (NP
          (NP (NNS others))
          (PRN (, ,)
            (SBAR (IN because)
              (FRAG
                (ADJP (RBR less) (JJ anxious)
                  (PP (IN about)
                    (NP
                      (NP (PRP$ their) (NN honesty))
                      (PP (IN than)
                        (NP (PRP$ my) (JJ own))))))))
            (, ,)))))
    (S (MD might)
      (NP (PRP I))
      (VP (RB not)
        (VP (VB yield)
          (NP (PRP them))
          (SBAR
            (WHNP (WP what))
            (, ,)
            (S
              (VP (VBD were)
                (NP (PRP I))
                (PP (IN in)
                  (NP (DT the) (NN case))))
              (PRN (, ,)
                (S
                  (NP (PRP I))
                  (VP (MD should)
                    (VP (VB see)
                      (PP (IN at)
                        (SBAR (IN once)
                          (S
                            (NP (PRP I))
                            (VP (VBD dared) (RB not)
                              (VP (VB allow)
                                (PP (TO to)
                                  (NP (PRP myself)))))))))))))))))
    (. ?)))

advmod(smoother-2, Selfishly-1)
root(ROOT-0, smoother-2)
prep_with(smoother-2, regard-4)
prep_to(smoother-2, others-6)
mark(anxious-10, because-8)
advmod(anxious-10, less-9)
dep(others-6, anxious-10)
poss(honesty-13, their-12)
prep_about(anxious-10, honesty-13)
poss(own-16, my-15)
prep_than(honesty-13, own-16)
dep(yield-21, might-18)
nsubj(yield-21, I-19)
neg(yield-21, not-20)
dep(smoother-2, yield-21)
dobj(yield-21, them-22)
nsubj(I-26, what-23)
cop(I-26, were-25)
dep(yield-21, I-26)
det(case-29, the-28)
prep_in(I-26, case-29)
nsubj(see-33, I-31)
aux(see-33, should-32)
parataxis(I-26, see-33)
mark(dared-37, once-35)
nsubj(dared-37, I-36)
prepc_at(see-33, dared-37)
neg(dared-37, not-38)
dep(dared-37, allow-39)
prep_to(allow-39, myself-41)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP (VB perceive)
        (NP (DT no) (NN use))
        (PP (IN in)
          (S
            (VP (VBG making)
              (PRT (RP up))
              (NP (PRP$ my) (NN mind)))))
        (SBAR
          (WHADVP (WRB how))
          (S
            (S
              (VP (TO to)
                (VP (VB act)
                  (PP (IN in)
                    (NP (NNS circumstances)))
                  (SBAR
                    (WHPP (IN in)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP I))
                      (VP (VBP am) (RB not))))
                  (: --)
                  (ADVP (RB probably)))))
            (VP (MD will)
              (ADVP (RB never))
              (VP (VB be)))))))
    (. .)))

nsubj(perceive-3, I-1)
aux(perceive-3, can-2)
root(ROOT-0, perceive-3)
neg(use-5, no-4)
dobj(perceive-3, use-5)
prepc_in(perceive-3, making-7)
prt(making-7, up-8)
poss(mind-10, my-9)
dobj(making-7, mind-10)
advmod(be-25, how-11)
aux(act-13, to-12)
csubj(be-25, act-13)
prep_in(act-13, circumstances-15)
prep_in(am-19, which-17)
nsubj(am-19, I-18)
ccomp(act-13, am-19)
neg(am-19, not-20)
advmod(act-13, probably-22)
aux(be-25, will-23)
neg(be-25, never-24)
dep(perceive-3, be-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB enough))
      (S
        (VP (TO to)
          (VP (VB occupy)
            (NP (PRP me))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP I))
                (VP
                  (VP (VBP find)
                    (NP (PRP myself)))
                  (, ,)
                  (CC and)
                  (VP (MD should)
                    (ADVP (RB certainly))
                    (VP (VB be)
                      (ADJP (JJ oftener)
                        (PP (IN in)
                          (NP (NN doubt))))
                      (SBAR
                        (WHADVP (WRB how))
                        (S
                          (VP (TO to)
                            (VP (VB act)))))
                      (, ,)
                      (SBAR (IN if)
                        (S
                          (NP (PRP I))
                          (VP (VBD had)
                            (VP (VBN bothered)
                              (NP (PRP$ my) (NNS brains))
                              (SBAR
                                (WHADVP (WRB how))
                                (S
                                  (VP (TO to)
                                    (VP (VB think)
                                      (PP (IN in)
                                        (NP
                                          (NP (NNS circumstances))
                                          (ADJP (JJ foreign)
                                            (PP (TO to)
                                              (NP (PRP me)))))))))))))))))))))))
    (. .)))

nsubj(have-2, I-1)
nsubj(occupy-5, I-1)
root(ROOT-0, have-2)
advmod(have-2, enough-3)
aux(occupy-5, to-4)
xcomp(have-2, occupy-5)
dobj(occupy-5, me-6)
advmod(find-9, where-7)
nsubj(find-9, I-8)
nsubj(oftener-16, I-8)
nsubj(act-21, I-8)
advcl(occupy-5, find-9)
dobj(find-9, myself-10)
aux(oftener-16, should-13)
advmod(oftener-16, certainly-14)
cop(oftener-16, be-15)
advcl(occupy-5, oftener-16)
conj_and(find-9, oftener-16)
prep_in(oftener-16, doubt-18)
advmod(act-21, how-19)
aux(act-21, to-20)
ccomp(oftener-16, act-21)
xcomp(oftener-16, act-21)
mark(bothered-26, if-23)
nsubj(bothered-26, I-24)
aux(bothered-26, had-25)
advcl(oftener-16, bothered-26)
poss(brains-28, my-27)
dobj(bothered-26, brains-28)
nsubj(think-31, brains-28)
advmod(think-31, how-29)
aux(think-31, to-30)
xcomp(bothered-26, think-31)
prep_in(think-31, circumstances-33)
amod(circumstances-33, foreign-34)
prep_to(foreign-34, me-36)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NN thinking)))
    (, ,)
    (S
      (NP (NN duty))
      (VP (VBZ is)
        (PP (IN of)
          (NP
            (NP
              (NP (NN necessity))
              (NP (DT a)
                (ADJP (RB comparatively) (JJ feeble))
                (NN factor)))
            (, ,)
            (VP (VBG being)
              (ADJP
                (ADJP (RB only) (NN duty) (JJ imagined))
                (, ,)
                (ADJP (RB not) (JJ live) (NN duty))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN result))
      (VP (VBZ is)
        (NP (DT the)
          (ADJP (RBR more) (JJ questionable)))))
    (. .)))

amod(thinking-3, such-2)
prep_in(is-6, thinking-3)
nsubj(is-6, duty-5)
root(ROOT-0, is-6)
prep_of(is-6, necessity-8)
det(factor-12, a-9)
advmod(feeble-11, comparatively-10)
amod(factor-12, feeble-11)
dep(necessity-8, factor-12)
cop(imagined-17, being-14)
advmod(imagined-17, only-15)
npadvmod(imagined-17, duty-16)
vmod(necessity-8, imagined-17)
neg(duty-21, not-19)
dep(duty-21, live-20)
dep(imagined-17, duty-21)
det(result-25, the-24)
nsubj(questionable-29, result-25)
cop(questionable-29, is-26)
det(questionable-29, the-27)
advmod(questionable-29, more-28)
conj_and(is-6, questionable-29)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Lord))
      (VP (VBD instructed)
        (NP (PRP$ His) (NNS apostles))
        (S (RB not)
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ anxious))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP they))
                  (VP (MD should)
                    (VP (VB say)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP they))
                          (VP (VBD were)
                            (VP (VBN brought)
                              (PP (IN before)
                                (NP (NNS rulers)
                                  (CC and)
                                  (NNS kings))))))))))))))))
    (: :)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB leave)
          (NP
            (NP (DT the) (NN question))
            (PP (IN of)
              (NP (NN duty))))
          (SBAR
            (ADVP (RB alone))
            (IN until)
            (S
              (NP (NN action))
              (VP (VBZ is)
                (VP (VBN demanded)
                  (PP (IN of)
                    (NP (PRP me))))))))))
    (. .)))

det(Lord-2, The-1)
nsubj(instructed-3, Lord-2)
root(ROOT-0, instructed-3)
poss(apostles-5, His-4)
dobj(instructed-3, apostles-5)
neg(anxious-9, not-6)
aux(anxious-9, to-7)
cop(anxious-9, be-8)
vmod(instructed-3, anxious-9)
dobj(say-13, what-10)
nsubj(say-13, they-11)
aux(say-13, should-12)
ccomp(anxious-9, say-13)
advmod(brought-17, when-14)
nsubjpass(brought-17, they-15)
auxpass(brought-17, were-16)
advcl(say-13, brought-17)
prep_before(brought-17, rulers-19)
prep_before(brought-17, kings-21)
conj_and(rulers-19, kings-21)
nsubj(leave-25, I-23)
aux(leave-25, will-24)
parataxis(instructed-3, leave-25)
det(question-27, the-26)
dobj(leave-25, question-27)
prep_of(question-27, duty-29)
advmod(demanded-34, alone-30)
mark(demanded-34, until-31)
nsubjpass(demanded-34, action-32)
auxpass(demanded-34, is-33)
advcl(leave-25, demanded-34)
prep_of(demanded-34, me-36)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN meantime)))
    (NP (PRP I))
    (VP (MD will)
      (VP (VB do)
        (NP
          (NP (DT the) (NN duty))
          (VP
            (ADVP (RB now))
            (VBN required)
            (PP (IN of)
              (NP
                (NP (PRP me))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (NP
                        (NP (DT the) (JJ only) (NN preparation))
                        (PP (IN for)
                          (NP
                            (NP (DT the) (NN duty))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBZ is)
                                  (S
                                    (VP (TO to)
                                      (VP (VB come)))))))))))))))))))
    (. .) ('' '')))

det(meantime-3, the-2)
prep_in(do-6, meantime-3)
nsubj(do-6, I-4)
aux(do-6, will-5)
root(ROOT-0, do-6)
det(duty-8, the-7)
dobj(do-6, duty-8)
advmod(required-10, now-9)
vmod(duty-8, required-10)
prep_of(required-10, me-12)
nsubj(preparation-18, me-12)
cop(preparation-18, is-15)
det(preparation-18, the-16)
amod(preparation-18, only-17)
rcmod(me-12, preparation-18)
det(duty-21, the-20)
prep_for(preparation-18, duty-21)
nsubj(is-23, duty-21)
nsubj(come-25, duty-21)
rcmod(duty-21, is-23)
aux(come-25, to-24)
xcomp(is-23, come-25)

(ROOT
  (S
    (S
      (SBAR (IN Although)
        (S
          (NP (NNP Alexa))
          (VP (VBD had) (RB not)
            (VP (VBN begun)
              (S
                (VP (TO to)
                  (VP (VB understand)
                    (NP (NNP Andrew)))))))))
      (, ,)
      (NP (PRP she))
      (VP
        (VP (VBD had)
          (NP (NN sense))
          (ADVP (RB enough)))
        (CC and)
        (VP (VBZ righteousness)
          (ADJP (JJ enough)
            (S
              (VP (TO to)
                (VP (VB feel)
                  (SBAR
                    (SBAR (IN that)
                      (S
                        (NP (PRP he))
                        (VP (VBD was)
                          (ADVP (RB somehow))
                          (ADVP (RB ahead)
                            (PP (IN of)
                              (NP (PRP her)))))))
                    (, ,)
                    (CC and)
                    (SBAR (IN that)
                      (S
                        (S
                          (NP (PRP it))
                          (VP (VBD was) (RB not)
                            (ADVP (RB likely))
                            (NP (PRP he))))
                        (CC and)
                        (S
                          (NP (NNP George) (NNP Crawford))
                          (VP (MD would)
                            (VP (VB be)
                              (PP (IN of)
                                (NP (CD one) (NN mind)))
                              (PP (IN in)
                                (NP
                                  (NP (DT the) (NN matter))
                                  (SBAR
                                    (WHNP (WDT that))
                                    (S
                                      (VP (VBD occupied)
                                        (NP (PRP her))))))))))))))))))))
    (, ,) (IN so)
    (S
      (NP (JJ different))
      (VP (VBD were)
        (NP
          (NP (PRP$ their) (NNS ways))
          (PP (IN of)
            (S
              (VP (VBG looking)
                (PP (IN at)
                  (NP
                    (NP (NNS things))
                    (: --)
                    (ADJP (RB so) (JJ different)))
                  (ADVP (RB indeed)))
                (NP
                  (NP (DT the) (NNS things))
                  (ADVP (PRP themselves))
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBD thought)
                        (PP (IN worth)
                          (S
                            (VP (VBG looking)
                              (PP (IN at)))))))))))))))
    (. .)))

mark(begun-5, Although-1)
nsubj(begun-5, Alexa-2)
nsubj(understand-7, Alexa-2)
aux(begun-5, had-3)
neg(begun-5, not-4)
advcl(had-11, begun-5)
aux(understand-7, to-6)
xcomp(begun-5, understand-7)
dobj(understand-7, Andrew-8)
nsubj(had-11, she-10)
nsubj(righteousness-15, she-10)
root(ROOT-0, had-11)
dobj(had-11, sense-12)
advmod(had-11, enough-13)
conj_and(had-11, righteousness-15)
acomp(righteousness-15, enough-16)
aux(feel-18, to-17)
xcomp(enough-16, feel-18)
mark(was-21, that-19)
nsubj(was-21, he-20)
ccomp(feel-18, was-21)
advmod(was-21, somehow-22)
prep_ahead_of(was-21, her-25)
mark(he-33, that-28)
nsubj(he-33, it-29)
cop(he-33, was-30)
neg(he-33, not-31)
advmod(he-33, likely-32)
ccomp(feel-18, he-33)
conj_and(was-21, he-33)
nn(Crawford-36, George-35)
nsubj(be-38, Crawford-36)
aux(be-38, would-37)
conj_and(was-21, be-38)
conj_and(he-33, be-38)
num(mind-41, one-40)
prep_of(be-38, mind-41)
det(matter-44, the-43)
prep_in(be-38, matter-44)
nsubj(occupied-46, matter-44)
rcmod(matter-44, occupied-46)
dobj(occupied-46, her-47)
dep(had-11, so-49)
nsubj(ways-53, different-50)
cop(ways-53, were-51)
poss(ways-53, their-52)
parataxis(had-11, ways-53)
prepc_of(ways-53, looking-55)
prep_at(looking-55, things-57)
advmod(different-60, so-59)
amod(things-57, different-60)
advmod(looking-55, indeed-61)
det(things-63, the-62)
dobj(looking-55, things-63)
advmod(things-63, themselves-64)
nsubj(thought-66, they-65)
rcmod(things-63, thought-66)
prepc_worth(thought-66, looking-68)
prep(looking-68, at-69)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (ADJP (JJ silent)
          (PP (IN for)
            (NP (DT a) (NN moment))))))
    (, ,)
    (NP (RB then))
    (VP (VBD said) (: :) (`` ``)
      (S
        (NP (PRP You))
        (VP (MD can)
          (ADVP (IN at) (JJS least))
          (VP (VB tell)
            (NP (PRP me))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP think)
                  (PP (IN of)
                    (NP (NN gambling))))))))))
    (. !) ('' '')))

nsubj(silent-3, She-1)
cop(silent-3, was-2)
ccomp(said-9, silent-3)
det(moment-6, a-5)
prep_for(silent-3, moment-6)
nsubj(said-9, then-8)
root(ROOT-0, said-9)
nsubj(tell-16, You-12)
aux(tell-16, can-13)
advmod(tell-16, at-14)
pobj(at-14, least-15)
ccomp(said-9, tell-16)
dobj(tell-16, me-17)
dobj(think-20, what-18)
nsubj(think-20, you-19)
dep(tell-16, think-20)
prep_of(think-20, gambling-22)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (NP
              (NP (DT the) (JJ meanest) (NN mode))
              (PP (IN of)
                (S
                  (VP (VBG gaining)
                    (CC or)
                    (VBG losing)
                    (NP
                      (NP (NN money))
                      (SBAR
                        (S
                          (NP (DT a) (NN man))
                          (VP (MD could)
                            (VP (VB find))))))))))))))
    (. .) ('' '')))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(mode-8, it-4)
cop(mode-8, is-5)
det(mode-8, the-6)
amod(mode-8, meanest-7)
ccomp(think-3, mode-8)
prepc_of(mode-8, gaining-10)
prepc_of(mode-8, losing-12)
conj_or(gaining-10, losing-12)
dobj(gaining-10, money-13)
det(man-15, a-14)
nsubj(find-17, man-15)
aux(find-17, could-16)
rcmod(money-13, find-17)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (ADVP (RB so))))
    (. ?) ('' '')))

advmod(think-5, Why-2)
aux(think-5, do-3)
nsubj(think-5, you-4)
root(ROOT-0, think-5)
advmod(think-5, so-6)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD desires)
            (ADVP (RB only))
            (PP (TO to)
              (NP (NN gain))))
          (, ,)
          (CC and)
          (VP (MD can)
            (VP (VB gain)
              (ADVP (RB only))
              (PP (IN by)
                (NP (PRP$ his) (NN neighbor))))))))
    (VP (VBZ 's)
      (NP (NN loss)))
    (. .)))

mark(desires-4, Because-2)
nsubj(desires-4, he-3)
nsubj(gain-11, he-3)
csubj(loss-17, desires-4)
advmod(desires-4, only-5)
prep_to(desires-4, gain-7)
aux(gain-11, can-10)
conj_and(desires-4, gain-11)
csubj(loss-17, gain-11)
advmod(gain-11, only-12)
poss(neighbor-15, his-14)
prep_by(gain-11, neighbor-15)
cop(loss-17, 's-16)
root(ROOT-0, loss-17)

(ROOT
  (S
    (NP
      (NP (CD One))
      (PP (IN of)
        (NP (DT the) (CD two))))
    (VP (MD must)
      (VP (VB be)
        (NP
          (NP (DT the) (JJR worse))
          (PP (IN for)
            (NP
              (NP (PRP$ his) (NN transaction))
              (PP (IN with)
                (NP (DT the) (JJ other))))))))
    (. .)))

nsubj(worse-8, One-1)
det(two-4, the-3)
prep_of(One-1, two-4)
aux(worse-8, must-5)
cop(worse-8, be-6)
det(worse-8, the-7)
root(ROOT-0, worse-8)
poss(transaction-11, his-10)
prep_for(worse-8, transaction-11)
det(other-14, the-13)
prep_with(transaction-11, other-14)

(ROOT
  (S
    (NP (DT Each) (NN _))
    (VP (MD must)
      (ADVP (RB _))
      (VP (VB wish)
        (ADJP (JJ ill)
          (PP (TO to)
            (NP (PRP$ his) (NN neighbor))))))
    (. !) ('' '')))

det(_-2, Each-1)
nsubj(wish-5, _-2)
aux(wish-5, must-3)
advmod(wish-5, _-4)
root(ROOT-0, wish-5)
acomp(wish-5, ill-6)
poss(neighbor-9, his-8)
prep_to(ill-6, neighbor-9)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (DT the) (NN risk))
    (VP (VBD was)
      (VP (VBN agreed)
        (PP (RP upon)
          (PP (IN between)
            (NP (PRP them))))))
    (. .) ('' '')))

cc(agreed-6, But-2)
det(risk-4, the-3)
nsubjpass(agreed-6, risk-4)
auxpass(agreed-6, was-5)
root(ROOT-0, agreed-6)
prep(agreed-6, upon-7)
prep_between(upon-7, them-9)

(ROOT
  (S (`` ``)
    (ADVP (JJ True))
    (: --)
    (S (CC but)
      (ADVP (RB in))
      (NP (WDT what))
      (VP (VBP hope)))
    (. ?)))

advmod(hope-7, True-2)
cc(hope-7, but-4)
advmod(hope-7, in-5)
nsubj(hope-7, what-6)
root(ROOT-0, hope-7)

(ROOT
  (SQ (VBD Was)
    (NP (PRP it))
    (SBAR (RB not)
      (S (, ,)
        (PP (IN on)
          (NP
            (NP (DT the) (NN part))
            (PP (IN of)
              (NP (DT each)))))
        (, ,)
        (X (IN that))
        (NP (PRP he))
        (VP (MD would)
          (VP (VB be)
            (NP
              (NP (DT the) (NN gainer))
              (CC and)
              (NP
                (NP (DT the) (JJ other))
                (NP (DT the) (NN loser))))))))
    (. ?)))

root(ROOT-0, Was-1)
nsubj(Was-1, it-2)
dep(gainer-16, not-3)
det(part-7, the-6)
prep_on(gainer-16, part-7)
prep_of(part-7, each-9)
dep(gainer-16, that-11)
nsubj(gainer-16, he-12)
nsubj(other-19, he-12)
aux(gainer-16, would-13)
cop(gainer-16, be-14)
det(gainer-16, the-15)
dep(Was-1, gainer-16)
det(other-19, the-18)
dep(Was-1, other-19)
conj_and(gainer-16, other-19)
det(loser-21, the-20)
dep(other-19, loser-21)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT no) (JJ common) (NN cause))
          (, ,)
          (NP (NN nothing)))
        (CC but)
        (NP
          (NP (JJ pure) (NN opposition))
          (PP (IN of)
            (NP (NN interest))))))
    (. .) ('' '')))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(cause-5, no-3)
amod(cause-5, common-4)
nsubj(is-2, cause-5)
appos(cause-5, nothing-7)
amod(opposition-10, pure-9)
nsubj(is-2, opposition-10)
conj_but(cause-5, opposition-10)
prep_of(opposition-10, interest-12)

(ROOT
  (S (`` ``)
    (S
      (VP (VBP Are)
        (ADVP (RB there) (RB not))
        (NP
          (NP (JJ many) (NNS things))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (PRP one))
              (VP (MD must)
                (VP (VB gain))))))))
    (CC and)
    (S
      (NP (DT the) (JJ other))
      (VP (VBP lose)))
    (. ?) ('' '')))

cop(things-6, Are-2)
advmod(not-4, there-3)
neg(things-6, not-4)
amod(things-6, many-5)
root(ROOT-0, things-6)
prep_in(gain-11, things-6)
nsubj(gain-11, one-9)
aux(gain-11, must-10)
rcmod(things-6, gain-11)
det(other-14, the-13)
nsubj(lose-15, other-14)
conj_and(things-6, lose-15)
prep_in(gain-11, lose-15)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (JJ many) (NNS things))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP
                (NP (CD one) (NNS gains))
                (CC and)
                (NP (DT the) (JJ other)))
              (VP (VBZ loses)))))))
    (: ;)
    (S (CC but)
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ essential)
              (PP (TO to)
                (NP (DT any) (NN transaction))))
            (SBAR (IN that)
              (S
                (NP (RB only) (CD one) (NN side))
                (VP (MD shall)
                  (VP (VB gain))))))))
      (, ,)
      (NP (DT the) (NN thing))
      (VP (VBZ is) (RB not)
        (PP (IN of)
          (NP (NNP God)))))
    (. .) ('' '')))

expl(are-3, There-2)
root(ROOT-0, are-3)
amod(things-5, many-4)
nsubj(are-3, things-5)
prep_in(loses-13, things-5)
num(gains-9, one-8)
nsubj(loses-13, gains-9)
det(other-12, the-11)
conj_and(gains-9, other-12)
nsubj(loses-13, other-12)
rcmod(things-5, loses-13)
cc(is-32, but-15)
mark(essential-19, if-16)
nsubj(essential-19, it-17)
cop(essential-19, is-18)
advcl(is-32, essential-19)
det(transaction-22, any-21)
prep_to(essential-19, transaction-22)
mark(gain-28, that-23)
advmod(side-26, only-24)
num(side-26, one-25)
nsubj(gain-28, side-26)
aux(gain-28, shall-27)
ccomp(essential-19, gain-28)
det(thing-31, the-30)
nsubj(is-32, thing-31)
parataxis(are-3, is-32)
neg(is-32, not-33)
prep_of(is-32, God-35)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (PP (IN of)
          (NP
            (NP (NN trading))
            (PP (IN in)
              (NP (NNS stocks)))))))
    (. ?) ('' '')))

dobj(think-5, What-2)
aux(think-5, do-3)
nsubj(think-5, you-4)
root(ROOT-0, think-5)
prep_of(think-5, trading-7)
prep_in(trading-7, stocks-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB know)
        (ADVP (RB enough)
          (PP (IN about)
            (NP (PRP it))))
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (DT a) (NN right)
                (S
                  (VP (TO to)
                    (VP (VB speak))))))))))
    (. .) ('' '')))

nsubj(know-5, I-2)
nsubj(have-10, I-2)
aux(know-5, do-3)
neg(know-5, not-4)
root(ROOT-0, know-5)
advmod(know-5, enough-6)
prep_about(enough-6, it-8)
aux(have-10, to-9)
xcomp(know-5, have-10)
det(right-12, a-11)
dobj(have-10, right-12)
aux(speak-14, to-13)
vmod(right-12, speak-14)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD can)
      (VP (VB give)
        (NP (PRP$ your) (NN impression))))
    (. !) ('' '')))

nsubj(give-4, You-2)
aux(give-4, can-3)
root(ROOT-0, give-4)
poss(impression-6, your-5)
dobj(give-4, impression-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will) (RB not)
      (VP (VB give)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP do) (RB not)
              (VP (VB value)))))))
    (. .) ('' '')))

nsubj(give-5, I-2)
aux(give-5, will-3)
neg(give-5, not-4)
root(ROOT-0, give-5)
dobj(value-10, what-6)
nsubj(value-10, I-7)
aux(value-10, do-8)
neg(value-10, not-9)
ccomp(give-5, value-10)

(ROOT
  (SBARQ (`` ``)
    (SBAR
      (WHADVP (WRB Suppose))
      (S (, ,)
        (ADVP (RB then))
        (, ,)
        (NP (PRP you))
        (VP (VBD heard)
          (PP (IN of)
            (NP
              (NP (DT a) (NN man))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD had)
                    (VP (VBN made)
                      (NP (PRP$ his) (NN money))
                      (ADVP (RB so)))))))))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB behave)
        (PP (TO to)
          (NP (PRP him)))))
    (. ?) ('' '')))

advmod(heard-7, Suppose-2)
advmod(heard-7, then-4)
nsubj(heard-7, you-6)
dep(behave-21, heard-7)
det(man-10, a-9)
prep_of(heard-7, man-10)
nsubj(made-13, man-10)
aux(made-13, had-12)
rcmod(man-10, made-13)
poss(money-15, his-14)
dobj(made-13, money-15)
advmod(made-13, so-16)
advmod(behave-21, how-18)
aux(behave-21, would-19)
nsubj(behave-21, you-20)
root(ROOT-0, behave-21)
prep_to(behave-21, him-23)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD would) (RB not)
      (VP (VB seek)
        (NP (PRP$ his) (NN acquaintance))))
    (. .) ('' '')))

nsubj(seek-5, I-2)
aux(seek-5, would-3)
neg(seek-5, not-4)
root(ROOT-0, seek-5)
poss(acquaintance-7, his-6)
dobj(seek-5, acquaintance-7)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBD sought))))
    (VP (VBZ yours))
    (. ?) ('' '')))

mark(sought-4, If-2)
nsubj(sought-4, he-3)
csubj(yours-5, sought-4)
root(ROOT-0, yours-5)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (NP (NN time)
          (S
            (VP (TO to)
              (VP (VB ask)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN made)
                        (NP (PRP$ his) (NN money))))))))))))
    (. .)))

nsubj(time-5, It-2)
aux(time-5, would-3)
cop(time-5, be-4)
root(ROOT-0, time-5)
aux(ask-7, to-6)
vmod(time-5, ask-7)
advmod(made-11, how-8)
nsubj(made-11, he-9)
aux(made-11, had-10)
ccomp(ask-7, made-11)
poss(money-13, his-12)
dobj(made-11, money-13)

(ROOT
  (S (RB Then)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (NP (PRP$ my) (NN business))))
    (. .) ('' '')))

advmod(business-6, Then-1)
nsubj(business-6, it-2)
aux(business-6, would-3)
cop(business-6, be-4)
poss(business-6, my-5)
root(ROOT-0, business-6)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (MD would)
        (VP (VB make)
          (S
            (NP (PRP it))
            (NP (PRP$ your) (NN business))))))
    (. ?) ('' '')))

nsubj(make-4, What-2)
aux(make-4, would-3)
root(ROOT-0, make-4)
nsubj(business-7, it-5)
poss(business-7, your-6)
xcomp(make-4, business-7)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (NP (PRP he))
    (VP (VBD sought)
      (NP (PRP$ my) (NN acquaintance)))
    (. .)))

nsubj(sought-4, That-2)
nsubj(sought-4, he-3)
root(ROOT-0, sought-4)
poss(acquaintance-6, my-5)
dobj(sought-4, acquaintance-6)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD would) (RB then)
        (VP (VB be)
          (ADJP (JJ necessary)
            (S
              (VP (TO to)
                (VP (VB know)
                  (NP (NN something))
                  (PP (IN about)
                    (NP (PRP him))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN readiest) (NN question))
      (VP (MD would)
        (VP
          (VP (VB be))
          (: --)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN made)
                  (NP (PRP$ his) (NN money)))))))))
    (. !) ('' '')))

nsubj(necessary-5, It-1)
nsubj(know-7, It-1)
aux(necessary-5, would-2)
advmod(necessary-5, then-3)
cop(necessary-5, be-4)
root(ROOT-0, necessary-5)
aux(know-7, to-6)
xcomp(necessary-5, know-7)
dobj(know-7, something-8)
prep_about(know-7, him-10)
det(question-15, the-13)
nn(question-15, readiest-14)
nsubj(be-17, question-15)
aux(be-17, would-16)
conj_and(necessary-5, be-17)
advmod(made-22, how-19)
nsubj(made-22, he-20)
aux(made-22, had-21)
ccomp(be-17, made-22)
parataxis(be-17, made-22)
poss(money-24, his-23)
dobj(made-22, money-24)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD was)
      (ADJP (JJ silent)
        (PP (IN for)
          (NP (DT some) (NN time)))))
    (. .)))

nsubj(silent-3, Alexa-1)
cop(silent-3, was-2)
root(ROOT-0, silent-3)
det(time-6, some-5)
prep_for(silent-3, time-6)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (NNP God))
                (VP (VBZ cares)
                  (PP (IN about)
                    (NP (NN everything))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(think-4, you-3)
ccomp(Do-2, think-4)
nsubj(cares-6, God-5)
ccomp(think-4, cares-6)
prep_about(cares-6, everything-8)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said)
      (PP (IN at)
        (NP (NN length))))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
prep_at(said-2, length-4)

(ROOT
  (S
    (S
      (NP (`` ``)
        (NP (NN Everything))
        (, ,) ('' ''))
      (VP (VBD answered)
        (NP (NNP Andrew))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD said)
        (ADVP (DT no) (RBR more))))
    (. .)))

nsubj(answered-5, Everything-2)
root(ROOT-0, answered-5)
dobj(answered-5, Andrew-6)
nsubj(said-10, she-9)
conj_and(answered-5, said-10)
neg(more-12, no-11)
advmod(said-10, more-12)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD avoided)
      (NP
        (NP (DT the) (NN discussion))
        (PP (IN of)
          (NP (JJ moral) (NNS questions)))))
    (. .)))

nsubj(avoided-2, Andrew-1)
root(ROOT-0, avoided-2)
det(discussion-4, the-3)
dobj(avoided-2, discussion-4)
amod(questions-7, moral-6)
prep_of(discussion-4, questions-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD regarded)
      (NP
        (NP
          (NP (DT the) (NN thing))
          (PP (IN as)
            (NP (JJ _) (NN vermiculate) (NNS _))))
        (, ,)
        (CC and)
        (NP
          (ADJP (JJ ready) (TO to) (JJ corrupt))
          (DT the) (NN obedience))))
    (. .)))

nsubj(regarded-2, He-1)
root(ROOT-0, regarded-2)
det(thing-4, the-3)
dobj(regarded-2, thing-4)
amod(_-8, _-6)
nn(_-8, vermiculate-7)
prep_as(thing-4, _-8)
amod(corrupt-13, ready-11)
dep(corrupt-13, to-12)
amod(obedience-15, corrupt-13)
det(obedience-15, the-14)
dobj(regarded-2, obedience-15)
conj_and(thing-4, obedience-15)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP (DT a) (NN thing)
            (S
              (VP (TO to)
                (VP (VB do))))))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (MD would)
          (VP (VB say))))
      (, ,) (`` ``))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB do)
        (NP (PRP it))
        (ADVP (RB right)
          (PP (IN in)
            (NP (NN proportion))))
        (PP (TO to)
          (NP
            (NP (PRP$ your) (NN love))
            (PP (IN of)
              (NP (NN right)))))))
    (. .)))

advmod(have-4, When-2)
nsubj(have-4, you-3)
advcl(do-18, have-4)
det(thing-6, a-5)
dobj(have-4, thing-6)
aux(do-8, to-7)
vmod(thing-6, do-8)
nsubj(say-13, he-11)
aux(say-13, would-12)
parataxis(do-18, say-13)
nsubj(do-18, you-16)
aux(do-18, will-17)
root(ROOT-0, do-18)
dobj(do-18, it-19)
advmod(do-18, right-20)
prep_in(right-20, proportion-22)
poss(love-25, your-24)
prep_to(do-18, love-25)
prep_of(love-25, right-27)

(ROOT
  (S (CC But)
    (S
      (VP (VB do)
        (NP (DT the) (NN right))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB love)
          (NP (DT the) (NN right)))))
    (: ;)
    (S
      (PP (IN for)
        (PP (IN by)
          (S
            (VP (VBG doing)
              (NP (PRP it))))))
      (NP (PRP you))
      (VP (MD will)
        (VP (VB see)
          (NP (PRP it))
          (PP (IN in)
            (NP (DT a) (NN measure)))
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP (VBZ is)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT no) (NN one))
      (VP (MD can)
        (VP (VB see)
          (NP (DT the) (NN truth))
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (PP (IN without)
                  (S
                    (VP (VBG loving)
                      (NP (PRP it)))))))))))
    (. .)))

root(ROOT-0, do-2)
det(right-4, the-3)
dobj(do-2, right-4)
nsubj(love-9, you-7)
aux(love-9, will-8)
conj_and(do-2, love-9)
det(right-11, the-10)
dobj(love-9, right-11)
prep(see-19, for-13)
pcomp(for-13, by-14)
pcomp(by-14, doing-15)
dobj(doing-15, it-16)
nsubj(see-19, you-17)
aux(see-19, will-18)
dep(do-2, see-19)
dobj(see-19, it-20)
det(measure-23, a-22)
prep_in(see-19, measure-23)
mark(is-26, as-24)
nsubj(is-26, it-25)
advcl(see-19, is-26)
neg(one-30, no-29)
nsubj(see-32, one-30)
aux(see-32, can-31)
conj_and(do-2, see-32)
det(truth-34, the-33)
dobj(see-32, truth-34)
mark(is-37, as-35)
nsubj(is-37, it-36)
advcl(see-32, is-37)
prepc_without(is-37, loving-39)
dobj(loving-39, it-40)

(ROOT
  (S
    (SBAR
      (X (DT The) (JJR more))
      (S
        (NP (PRP you))
        (VP (VBZ _)
          (NP (NN talk) (NNS _))
          (PP (IN about)
            (NP
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ right)))))
              (, ,)
              (CC or)
              (ADVP (RB even))
              (NP
                (NP (RB about) (DT the))
                (VP (VBG doing)
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (, ,)
    (X (DT the) (JJR more))
    (NP (PRP you))
    (VP (VBP are)
      (PP (IN in)
        (NP
          (NP (NN danger))
          (PP (IN of)
            (S
              (VP (VBG exemplifying)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (JJ loosely) (NN theory))
                    (VP (MD may)
                      (VP (VB be)
                        (ADJP (JJ allied)
                          (S
                            (VP (TO to)
                              (VP (VB practice)))))))))))))))
    (. .)))

det(more-2, The-1)
dep(_-4, more-2)
nsubj(_-4, you-3)
advcl(are-23, _-4)
nn(_-6, talk-5)
dobj(_-4, _-6)
nsubj(right-10, what-8)
cop(right-10, is-9)
prep_about(_-4, right-10)
advmod(the-15, even-13)
advmod(the-15, about-14)
prep_about(_-4, the-15)
conj_or(right-10, the-15)
vmod(the-15, doing-16)
prep_of(doing-16, it-18)
det(more-21, the-20)
dep(are-23, more-21)
nsubj(are-23, you-22)
root(ROOT-0, are-23)
prep_in(are-23, danger-25)
prepc_of(danger-25, exemplifying-27)
advmod(allied-33, how-28)
amod(theory-30, loosely-29)
nsubj(allied-33, theory-30)
nsubj(practice-35, theory-30)
aux(allied-33, may-31)
cop(allied-33, be-32)
ccomp(exemplifying-27, allied-33)
aux(practice-35, to-34)
xcomp(allied-33, practice-35)

(ROOT
  (S
    (NP
      (NP (NN Talk))
      (PP (IN without)
        (NP (NN action))))
    (VP (VBZ saps)
      (NP (DT the) (JJ very) (NN will)))
    (. .)))

nsubj(saps-4, Talk-1)
prep_without(Talk-1, action-3)
root(ROOT-0, saps-4)
det(will-7, the-5)
amod(will-7, very-6)
dobj(saps-4, will-7)

(ROOT
  (S
    (NP
      (NP (NN Something))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP have)
            (S
              (VP (TO to)
                (VP (VB do))))))))
    (VP (VBZ is)
      (VP
        (VP (VBG waiting)
          (VP (VBN undone)
            (NP (PDT all) (DT the) (NN time))))
        (, ,)
        (CC and)
        (VP (VBG getting)
          (NP
            (NP (JJR more)
              (CC and)
              (JJR more))
            (VP (VBN undone))))))
    (. .)))

nsubj(waiting-7, Something-1)
nsubj(getting-14, Something-1)
nsubj(have-3, you-2)
nsubj(do-5, you-2)
rcmod(Something-1, have-3)
aux(do-5, to-4)
xcomp(have-3, do-5)
aux(waiting-7, is-6)
root(ROOT-0, waiting-7)
dep(waiting-7, undone-8)
predet(time-11, all-9)
det(time-11, the-10)
dobj(undone-8, time-11)
conj_and(waiting-7, getting-14)
dobj(getting-14, more-15)
dobj(getting-14, more-17)
conj_and(more-15, more-17)
vmod(more-15, undone-18)

(ROOT
  (S
    (NP (DT The) (JJ only) (NN refuge))
    (VP (VBZ is)
      (ADJP (JJ _)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (NNS _)))))))
    (. .) ('' '')))

det(refuge-3, The-1)
amod(refuge-3, only-2)
nsubj(_-5, refuge-3)
nsubj(do-7, refuge-3)
cop(_-5, is-4)
root(ROOT-0, _-5)
aux(do-7, to-6)
xcomp(_-5, do-7)
dobj(do-7, _-8)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB know)
          (NP
            (NP (DT the) (NN thing))
            (SBAR
              (S
                (NP (PRP he))
                (VP (MD ought)
                  (S
                    (VP (TO to)
                      (VP (VB do)))))))))))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN matter))
        (PP (IN of)
          (NP (NN import))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB do)
            (NP
              (NP (DT the) (NN thing))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD knew)
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (MD ought)
                          (S
                            (VP (TO to)
                              (VP (VB do)
                                (SBAR
                                  (S
                                    (VP (VBD was)
                                      (NP
                                        (NP (DT a) (NN matter))
                                        (PP (IN of)
                                          (NP (NN life)
                                            (CC and)
                                            (NN death))))
                                      (PP (TO to)
                                        (NP (NNP Andrew))))))))))))))))))))
    (. .)))

aux(know-2, To-1)
csubj(matter-11, know-2)
det(thing-4, the-3)
dobj(know-2, thing-4)
nsubj(ought-6, he-5)
nsubj(do-8, he-5)
rcmod(thing-4, ought-6)
aux(do-8, to-7)
xcomp(ought-6, do-8)
cop(matter-11, was-9)
det(matter-11, a-10)
root(ROOT-0, matter-11)
prep_of(matter-11, import-13)
aux(do-16, to-15)
vmod(matter-11, do-16)
det(thing-18, the-17)
dobj(do-16, thing-18)
nsubj(knew-20, he-19)
rcmod(thing-18, knew-20)
nsubj(ought-22, he-21)
nsubj(do-24, he-21)
ccomp(knew-20, ought-22)
aux(do-24, to-23)
xcomp(ought-22, do-24)
cop(matter-27, was-25)
det(matter-27, a-26)
ccomp(do-24, matter-27)
prep_of(matter-27, life-29)
prep_of(matter-27, death-31)
conj_and(life-29, death-31)
prep_to(matter-27, Andrew-33)

(ROOT
  (S
    (S
      (NP (PRP He))
      (ADVP (RB never))
      (VP (VBD allowed)
        (NP (RB even) (DT a) (JJ cognate) (NN question))
        (S
          (VP (TO to)
            (VP (VB force)
              (NP (PRP itself))
              (PP (IN upon)
                (NP (PRP him)))
              (SBAR (IN until)
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN attended)
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN thing))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD demanded)
                                (S
                                  (VP (VBG doing)))))))))))))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP (JJ merest) (JJ common) (NN sense))))
    (. !)))

nsubj(allowed-3, He-1)
neg(allowed-3, never-2)
root(ROOT-0, allowed-3)
advmod(question-7, even-4)
det(question-7, a-5)
amod(question-7, cognate-6)
dobj(allowed-3, question-7)
nsubj(force-9, question-7)
aux(force-9, to-8)
xcomp(allowed-3, force-9)
dobj(force-9, itself-10)
prep_upon(force-9, him-12)
mark(attended-16, until-13)
nsubj(attended-16, he-14)
aux(attended-16, had-15)
advcl(force-9, attended-16)
det(thing-19, the-18)
prep_to(attended-16, thing-19)
nsubj(demanded-21, thing-19)
rcmod(thing-19, demanded-21)
xcomp(demanded-21, doing-22)
nsubj(sense-28, it-24)
cop(sense-28, was-25)
amod(sense-28, merest-26)
amod(sense-28, common-27)
parataxis(allowed-3, sense-28)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD had)
        (PP (IN in)
          (NP (DT a) (NN manner)))
        (VP (VBN got)
          (PP (IN over)
            (NP (PRP$ her) (NN uneasiness)))
          (PP (IN at)
            (NP
              (NP (DT the) (NN report))
              (PP (IN of)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (NNP George))
                    (VP (VBD was)
                      (VP (VBG making)
                        (NP (PRP$ his) (NN money))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ their) (NN correspondence))
      (VP (VBD was) (RB not)
        (VP (VBN interrupted))))
    (. .)))

nsubj(got-6, Alexa-1)
aux(got-6, had-2)
det(manner-5, a-4)
prep_in(got-6, manner-5)
root(ROOT-0, got-6)
poss(uneasiness-9, her-8)
prep_over(got-6, uneasiness-9)
det(report-12, the-11)
prep_at(got-6, report-12)
advmod(making-17, how-14)
nsubj(making-17, George-15)
aux(making-17, was-16)
prepc_of(report-12, making-17)
poss(money-19, his-18)
dobj(making-17, money-19)
poss(correspondence-23, their-22)
nsubjpass(interrupted-26, correspondence-23)
auxpass(interrupted-26, was-24)
neg(interrupted-26, not-25)
conj_and(got-6, interrupted-26)

(ROOT
  (S (CC But)
    (NP
      (NP (NN something))
      (, ,)
      (NP
        (NP (RB perhaps) (DT a) (NN movement))
        (PP (IN from)
          (NP
            (NP (DT the) (NN world))
            (PP (IN of)
              (NP
                (NP (NN spirit))
                (VP (VBG coming)
                  (PP (IN like)
                    (NP (DT the) (NN wind)))))))))
      (, ,))
    (VP (VBD had)
      (VP (VBN given)
        (NP
          (NP (PRP$ her) (NN one))
          (PP (IN of)
            (NP (DT those) (NNS motions))))
        (PP (TO to)
          (NP
            (NP (NN betterment))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (, ,)
              (S
                (ADVP (RB however))
                (VP (VBD occasioned) (, ,)
                  (SQ (VBP are)
                    (NP
                      (NP (DT the) (NN throb))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (JJ divine) (NN pulse))
                          (PP (IN in)
                            (NP (PRP$ our) (NN life))))))))))))
        (, ,)
        (NP
          (NP
            (NP (DT the) (NN call))
            (PP (IN of)
              (NP (DT the) (NNP Father))))
          (, ,)
          (NP
            (NP (DT the) (NN pull))
            (PP (IN of)
              (NP (NN home))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NN guide) (NN thither))
            (PP (TO to)
              (NP
                (NP (JJ such))
                (SBAR (IN as)
                  (S
                    (VP (MD will)
                      (VP (VB obey)
                        (NP (PRP them))))))))))))
    (. .)))

cc(given-18, But-1)
nsubj(given-18, something-2)
advmod(movement-6, perhaps-4)
det(movement-6, a-5)
appos(something-2, movement-6)
det(world-9, the-8)
prep_from(movement-6, world-9)
prep_of(world-9, spirit-11)
vmod(spirit-11, coming-12)
det(wind-15, the-14)
prep_like(coming-12, wind-15)
aux(given-18, had-17)
root(ROOT-0, given-18)
poss(one-20, her-19)
dobj(given-18, one-20)
det(motions-23, those-22)
prep_of(one-20, motions-23)
prep_to(given-18, betterment-25)
nsubj(occasioned-30, betterment-25)
advmod(occasioned-30, however-29)
rcmod(betterment-25, occasioned-30)
dep(occasioned-30, are-32)
det(throb-34, the-33)
nsubj(are-32, throb-34)
det(pulse-38, the-36)
amod(pulse-38, divine-37)
prep_of(throb-34, pulse-38)
poss(life-41, our-40)
prep_in(pulse-38, life-41)
det(call-44, the-43)
dobj(given-18, call-44)
det(Father-47, the-46)
prep_of(call-44, Father-47)
det(pull-50, the-49)
dobj(given-18, pull-50)
conj_and(call-44, pull-50)
prep_of(pull-50, home-52)
det(thither-57, the-55)
nn(thither-57, guide-56)
dobj(given-18, thither-57)
conj_and(call-44, thither-57)
prep_to(thither-57, such-59)
mark(obey-62, as-60)
aux(obey-62, will-61)
dep(such-59, obey-62)
dobj(obey-62, them-63)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (PP (IN in)
        (NP (NN consequence)))
      (VP
        (ADVP (RB again))
        (VBN become)
        (UCP
          (ADJP (JJ doubtful)
            (PP (IN about)
              (NP (NNP Crawford))))
          (, ,)
          (CC and)
          (PP (IN as)
            (PP (TO to)
              (SBAR (IN whether)
                (S
                  (NP (PRP she))
                  (VP (VBD was)
                    (ADJP (JJ right)
                      (PP (IN in)
                        (NP
                          (NP (JJ corresponding))
                          (PP (IN with)
                            (NP (PRP him))))))))))))))
    (. .)))

nsubj(become-6, She-1)
aux(become-6, had-2)
prep_in(become-6, consequence-4)
advmod(become-6, again-5)
root(ROOT-0, become-6)
acomp(become-6, doubtful-7)
prep_about(doubtful-7, Crawford-9)
acomp(become-6, as-12)
conj_and(doubtful-7, as-12)
pcomp(as-12, to-13)
mark(right-17, whether-14)
nsubj(right-17, she-15)
cop(right-17, was-16)
pcomp(to-13, right-17)
prep_in(right-17, corresponding-19)
prep_with(corresponding-19, him-21)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD led)
      (PP (TO to)
        (NP (PRP$ her) (NN talk)))
      (PP (IN with)
        (NP (NNP Andrew)))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S (, ,)
          (SBAR (IN while)
            (S
              (NP (PRP it))
              (VP (VBD made)
                (SBAR
                  (S
                    (NP (PRP her))
                    (VP (VBP think)
                      (NP
                        (NP (JJR less))
                        (PP (IN of)
                          (NP (PRP$ his) (NN intellect))))))))))
          (, ,)
          (VP (VBD influenced)
            (NP (PRP her))
            (PP (IN in)
              (NP
                (NP (DT a) (NN way))
                (SBAR
                  (S
                    (NP (PRP she))
                    (ADVP (RB neither))
                    (VP
                      (VP (VBD understood))
                      (CC nor)
                      (ADVP (RB even))
                      (VP (VBD recognized)))))))))))
    (. .)))

nsubj(led-2, This-1)
root(ROOT-0, led-2)
poss(talk-5, her-4)
prep_to(led-2, talk-5)
prep_with(led-2, Andrew-7)
dep(influenced-21, which-9)
mark(made-13, while-11)
nsubj(made-13, it-12)
advcl(influenced-21, made-13)
nsubj(think-15, her-14)
ccomp(made-13, think-15)
dobj(think-15, less-16)
poss(intellect-19, his-18)
prep_of(less-16, intellect-19)
ccomp(led-2, influenced-21)
dobj(influenced-21, her-22)
det(way-25, a-24)
prep_in(influenced-21, way-25)
nsubj(understood-28, she-26)
nsubj(recognized-31, she-26)
advmod(understood-28, neither-27)
rcmod(way-25, understood-28)
advmod(recognized-31, even-30)
rcmod(way-25, recognized-31)
conj_nor(understood-28, recognized-31)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP
          (NP (CD two) (NNS ways))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (CD one) (NN nature))
              (VP (MD may)
                (VP (VB influence)
                  (NP
                    (NP (DT another))
                    (PP (IN for)
                      (NP (NN betterment)))))))))
        (: --)
        (NP
          (NP (DT the) (NN one))
          (PP (IN by)
            (S
              (VP (VBG strengthening)
                (NP
                  (NP (DT the) (NN will))
                  (, ,)
                  (NP (DT the) (JJ other)))
                (PP (IN by)
                  (S
                    (VP (VBG heightening)
                      (NP (DT the) (NN ideal)))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
num(ways-4, two-3)
nsubj(are-2, ways-4)
prep_in(influence-10, ways-4)
num(nature-8, one-7)
nsubj(influence-10, nature-8)
aux(influence-10, may-9)
rcmod(ways-4, influence-10)
dobj(influence-10, another-11)
prep_for(another-11, betterment-13)
det(one-16, the-15)
dep(ways-4, one-16)
prepc_by(one-16, strengthening-18)
det(will-20, the-19)
dobj(strengthening-18, will-20)
det(other-23, the-22)
appos(will-20, other-23)
prepc_by(strengthening-18, heightening-25)
det(ideal-27, the-26)
dobj(heightening-25, ideal-27)

(ROOT
  (S
    (NP (NNP Andrew))
    (, ,)
    (PP (IN without)
      (NP
        (NP (RB even) (PRP$ her) (NN suspicion))
        (PP (IN of)
          (NP (DT the) (NN fact)))))
    (, ,)
    (VP (VBD wrought)
      (PP (IN in)
        (NP (DT the) (JJ latter) (NN way)))
      (PP (IN upon)
        (NP (NNP Alexa))))
    (. .)))

nsubj(wrought-11, Andrew-1)
advmod(suspicion-6, even-4)
poss(suspicion-6, her-5)
prep_without(wrought-11, suspicion-6)
det(fact-9, the-8)
prep_of(suspicion-6, fact-9)
root(ROOT-0, wrought-11)
det(way-15, the-13)
amod(way-15, latter-14)
prep_in(wrought-11, way-15)
prep_upon(wrought-11, Alexa-17)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD grew)
      (ADJP (RBR more) (JJ uneasy)))
    (. .)))

nsubj(grew-2, She-1)
root(ROOT-0, grew-2)
advmod(uneasy-4, more-3)
acomp(grew-2, uneasy-4)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD was)
      (VP (VBG coming)
        (NP
          (NP (NN home))
          (: :)
          (SBARQ
            (WHADVP (WRB how))
            (SQ (VBD was)
              (NP
                (NP (PRP she))
                (S
                  (VP (TO to)
                    (VP (VB receive)
                      (NP (PRP him)))))))
            (. ?)))))))

nsubj(coming-3, George-1)
aux(coming-3, was-2)
root(ROOT-0, coming-3)
dobj(coming-3, home-4)
advmod(was-7, how-6)
dep(home-4, was-7)
nsubj(was-7, she-8)
aux(receive-10, to-9)
vmod(she-8, receive-10)
dobj(receive-10, him-11)

(ROOT
  (UCP
    (S
      (S
        (VP
          (ADVP (RB Nowise))
          (VBN bound)))
      (, ,)
      (NP (PRP they))
      (VP (VBD were)
        (PP (IN on)
          (NP
            (NP (NNS terms))
            (PP (IN of)
              (NP (NN intimacy)))))))
    (: :)
    (NP
      (SQ (VBD was)
        (NP
          (NP (PRP she))
          (S
            (VP
              (VP (TO to)
                (VP (VB encourage)
                  (NP
                    (NP (DT the) (NN procession))
                    (PP (IN of)
                      (NP (DT that) (NN intimacy))))))
              (, ,)
              (CC or)
              (VP (TO to)
                (VP (VB ward)))))))
      (VP (VB attempt)
        (PP (IN at)
          (NP (JJ nearer) (NN approach)))))
    (. ?)))

advmod(bound-2, Nowise-1)
vmod(were-5, bound-2)
nsubj(were-5, they-4)
root(ROOT-0, were-5)
prep_on(were-5, terms-7)
prep_of(terms-7, intimacy-9)
dep(attempt-24, was-11)
nsubj(was-11, she-12)
aux(encourage-14, to-13)
dep(she-12, encourage-14)
det(procession-16, the-15)
dobj(encourage-14, procession-16)
det(intimacy-19, that-18)
prep_of(procession-16, intimacy-19)
aux(ward-23, to-22)
dep(she-12, ward-23)
conj_or(encourage-14, ward-23)
dep(were-5, attempt-24)
amod(approach-27, nearer-26)
prep_at(attempt-24, approach-27)

(ROOT
  (NP (NNP CHAPTER) (NNP XX) (. .)))

nn(XX-2, CHAPTER-1)
root(ROOT-0, XX-2)

(ROOT
  (NP (NNP GEORGE)
    (CC AND)
    (NNP ANDREW) (. .)))

root(ROOT-0, GEORGE-1)
conj_and(GEORGE-1, ANDREW-3)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD returned))
      (, ,)
      (CC and)
      (VP (VBD made)
        (NP (DT an) (JJ early) (NN appearance))
        (PP (IN at)
          (NP (NNP Potlurg)))))
    (. .)))

nsubj(returned-2, George-1)
nsubj(made-5, George-1)
root(ROOT-0, returned-2)
conj_and(returned-2, made-5)
det(appearance-8, an-6)
amod(appearance-8, early-7)
dobj(made-5, appearance-8)
prep_at(made-5, Potlurg-10)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD met)
      (NP (PRP him))
      (PP (IN in)
        (NP (DT the) (NN court))))
    (. .)))

nsubj(met-2, Dawtie-1)
root(ROOT-0, met-2)
dobj(met-2, him-3)
det(court-6, the-5)
prep_in(met-2, court-6)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD did) (RB not)
        (VP (VB know)
          (NP (PRP him)))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB involuntarily))
      (VP (VBN shrunk)
        (PP (IN from)
          (NP (PRP him)))))
    (. .)))

nsubj(know-4, She-1)
nsubj(shrunk-9, She-1)
aux(know-4, did-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
dobj(know-4, him-5)
advmod(shrunk-9, involuntarily-8)
conj_but(know-4, shrunk-9)
prep_from(shrunk-9, him-11)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD frowned))
    (. .)))

nsubj(frowned-2, He-1)
root(ROOT-0, frowned-2)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (DT a) (JJ natural) (NN repugnance))
          (PP (IN between)
            (NP (PRP them))))))
    (: ;)
    (S
      (NP (DT the) (NN one))
      (VP (VBD was)
        (ADJP (JJ simple)))
      (, ,)
      (ADVP
        (NP (DT the) (JJ other))
        (RB double)))
    (: ;)
    (S
      (NP (DT the) (NN one))
      (VP (VBD was)
        (NP
          (NP (JJ pure))
          (, ,)
          (NP (DT the) (JJ other) (NN selfish)))))
    (: ;)
    (S
      (NP (DT the) (NN one))
      (VP (VBD loved)
        (NP
          (NP (PRP$ her) (NN neighbor))
          (, ,)
          (NP (DT the) (JJ other) (NN preyed)))
        (PP (IN upon)
          (NP (PRP$ his)))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(repugnance-5, a-3)
amod(repugnance-5, natural-4)
nsubj(was-2, repugnance-5)
prep_between(repugnance-5, them-7)
det(one-10, the-9)
nsubj(simple-12, one-10)
cop(simple-12, was-11)
parataxis(was-2, simple-12)
det(other-15, the-14)
npadvmod(double-16, other-15)
advmod(simple-12, double-16)
det(one-19, the-18)
nsubj(pure-21, one-19)
cop(pure-21, was-20)
parataxis(was-2, pure-21)
det(selfish-25, the-23)
amod(selfish-25, other-24)
appos(pure-21, selfish-25)
det(one-28, the-27)
nsubj(loved-29, one-28)
parataxis(was-2, loved-29)
poss(neighbor-31, her-30)
dobj(loved-29, neighbor-31)
det(preyed-35, the-33)
amod(preyed-35, other-34)
appos(neighbor-31, preyed-35)
prep_upon(loved-29, his-37)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP (VBD was)
        (ADJP
          (NP (DT a) (RB little))
          (JJR louder))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NNS manners))
      (VP (VBD were)
        (VP
          (ADVP (RBR more))
          (VBN studied))))
    (. .)))

nsubj(louder-5, George-1)
cop(louder-5, was-2)
det(little-4, a-3)
npadvmod(louder-5, little-4)
root(ROOT-0, louder-5)
poss(manners-9, his-8)
nsubjpass(studied-12, manners-9)
auxpass(studied-12, were-10)
advmod(studied-12, more-11)
conj_and(louder-5, studied-12)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD felt)
      (SBAR
        (S
          (NP (PRP him))
          (VP (VBZ overblown)))))
    (. .)))

nsubj(felt-2, Alexa-1)
root(ROOT-0, felt-2)
nsubj(overblown-4, him-3)
ccomp(felt-2, overblown-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADVP (RB floridly))
      (PP (IN at)
        (NP (PRP$ his) (NN ease))))
    (. .)))

nsubj(was-2, He-1)
root(ROOT-0, was-2)
advmod(was-2, floridly-3)
poss(ease-6, his-5)
prep_at(was-2, ease-6)

(ROOT
  (S
    (S
      (SBAR
        (WHNP (WP What))
        (S
          (NP (JJ little) (`` ``) (NNS atmosphere) ('' ''))
          (ADVP (RB there))
          (VP (VBD had)
            (VP (VBN been)
              (ADJP (IN about))))))
      (NP (PRP him))
      (VP (VBD was)
        (VP (VBN gone))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ its) (NN place))
      (VP (VBN taken)
        (PP (IN by)
          (NP (DT a) (VBN colored) (NN fog)))))
    (. .)))

dobj(about-9, What-1)
amod(atmosphere-4, little-2)
nsubj(about-9, atmosphere-4)
advmod(about-9, there-6)
aux(about-9, had-7)
cop(about-9, been-8)
advcl(gone-12, about-9)
nsubjpass(gone-12, him-10)
auxpass(gone-12, was-11)
root(ROOT-0, gone-12)
poss(place-16, its-15)
nsubj(taken-17, place-16)
conj_and(gone-12, taken-17)
det(fog-21, a-19)
amod(fog-21, colored-20)
prep_by(taken-17, fog-21)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN dress))
      (VP
        (VP (VBD was)
          (ADJP (JJ unobjectionable)))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB yet))
          (VBD attracted)
          (NP (NN notice)))))
    (: ;)
    (S
      (ADVP (RB perhaps))
      (NP (PRP it))
      (VP (VBD was)
        (VP
          (ADVP (RB only) (RB too))
          (VBN considered))))
    (. .)))

poss(dress-2, His-1)
nsubj(unobjectionable-4, dress-2)
nsubj(attracted-8, dress-2)
cop(unobjectionable-4, was-3)
root(ROOT-0, unobjectionable-4)
advmod(attracted-8, yet-7)
conj_and(unobjectionable-4, attracted-8)
dobj(attracted-8, notice-9)
advmod(considered-16, perhaps-11)
nsubjpass(considered-16, it-12)
auxpass(considered-16, was-13)
advmod(too-15, only-14)
advmod(considered-16, too-15)
parataxis(unobjectionable-4, considered-16)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD was)
      (ADJP
        (ADJP (JJ disappointed))
        (, ,)
        (CC and)
        (ADJP
          (NP (DT a) (RB little))
          (JJ relieved))))
    (. .)))

nsubj(disappointed-3, Alexa-1)
nsubj(relieved-8, Alexa-1)
cop(disappointed-3, was-2)
root(ROOT-0, disappointed-3)
det(little-7, a-6)
npadvmod(relieved-8, little-7)
conj_and(disappointed-3, relieved-8)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD looked)
      (NP
        (NP (JJR older))
        (, ,)
        (ADJP
          (ADJP (CC yet)
            (RB not) (RBR more) (JJ manly))
          (: --)
          (CC and)
          (ADJP (RB rather) (JJ fat)))))
    (. .)))

nsubj(looked-2, He-1)
root(ROOT-0, looked-2)
dobj(looked-2, older-3)
neg(manly-8, not-6)
advmod(manly-8, more-7)
amod(older-3, manly-8)
advmod(fat-12, rather-11)
amod(older-3, fat-12)
conj_and(manly-8, fat-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (NP
        (NP (JJR more))
        (PP (IN of)
          (NP (DT the) (NN confidence) (NNS women) (NN dislike)))
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (DT a) (NN man))
              (PP (IN without))
              (, ,)
              (SBAR (IN than)
                (S
                  (VP (VBD was)
                    (ADJP (RB quite) (JJ pleasant))
                    (PP (RB even)
                      (PP (TO to)
                        (NP (DT the) (JJ confident) (NN Alexa))))))))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
dobj(had-2, more-3)
det(dislike-8, the-5)
nn(dislike-8, confidence-6)
nn(dislike-8, women-7)
prep_of(more-3, dislike-8)
aux(see-10, to-9)
vmod(more-3, see-10)
det(man-12, a-11)
dobj(see-10, man-12)
prep(see-10, without-13)
mark(pleasant-18, than-15)
cop(pleasant-18, was-16)
advmod(pleasant-18, quite-17)
advcl(see-10, pleasant-18)
advmod(pleasant-18, even-19)
det(Alexa-23, the-21)
amod(Alexa-23, confident-22)
prep_to(pleasant-18, Alexa-23)

(ROOT
  (S
    (NP (PRP$ His) (NN speech))
    (VP (VBD was) (RB not)
      (VP
        (NP (DT a) (JJ little))
        (VBN infected)
        (PP (IN with)
          (NP
            (NP (DT the) (NN nasality))
            (PRN (: --)
              (ADJP (RB as) (JJ easy)
                (S
                  (VP (TO to)
                    (VP (VB catch)
                      (ADJP (RB as) (JJ hard)
                        (S
                          (VP (TO to)
                            (VP (VB get)
                              (ADJP (JJ rid)
                                (PP (IN of)))))))))))
              (: --))
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP I))
                (VP (VBP presume)
                  (SBAR
                    (S
                      (NP (DT the) (NNPS Puritans))
                      (VP (VBD carried)
                        (PP (IN from)
                          (NP (NNP England)))
                        (PP (TO to)
                          (NP (NNP America)))))))))))))
    (. .)))

poss(speech-2, His-1)
nsubjpass(infected-7, speech-2)
auxpass(infected-7, was-3)
neg(infected-7, not-4)
det(little-6, a-5)
dobj(infected-7, little-6)
root(ROOT-0, infected-7)
det(nasality-10, the-9)
prep_with(infected-7, nasality-10)
dobj(presume-25, nasality-10)
advmod(easy-13, as-12)
dep(nasality-10, easy-13)
aux(catch-15, to-14)
xcomp(easy-13, catch-15)
advmod(hard-17, as-16)
acomp(catch-15, hard-17)
aux(rid-20, to-18)
dep(rid-20, get-19)
xcomp(hard-17, rid-20)
prep(rid-20, of-21)
nsubj(presume-25, I-24)
rcmod(nasality-10, presume-25)
det(Puritans-27, the-26)
nsubj(carried-28, Puritans-27)
ccomp(presume-25, carried-28)
prep_from(carried-28, England-30)
prep_to(carried-28, America-32)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (NN whole)))
    (, ,)
    (NP (NNP George))
    (VP (VBD was)
      (ADJP
        (ADJP (RBR less) (JJ interesting))
        (SBAR (IN than)
          (S
            (NP (NNP Alexa))
            (VP (VBD had)
              (VP (VBN expected)))))))
    (. .)))

det(whole-3, the-2)
prep_on(interesting-8, whole-3)
nsubj(interesting-8, George-5)
cop(interesting-8, was-6)
advmod(interesting-8, less-7)
root(ROOT-0, interesting-8)
mark(expected-12, than-9)
nsubj(expected-12, Alexa-10)
aux(expected-12, had-11)
ccomp(interesting-8, expected-12)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD came)
        (PP (TO to)
          (NP (PRP her)))
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB embrace)
                (NP (PRP her))))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT an) (JJ instinctive) (NN movement))
        (PP (IN on)
          (NP (PRP$ her) (NN part))))
      (VP (VBD sufficed)
        (S
          (VP (TO to)
            (VP (VB check)
              (NP (PRP him)))))))
    (. .)))

nsubj(came-2, He-1)
root(ROOT-0, came-2)
prep_to(came-2, her-4)
advmod(embrace-9, as-5)
mark(embrace-9, if-6)
nsubj(embrace-9, he-7)
aux(embrace-9, would-8)
advcl(came-2, embrace-9)
dobj(embrace-9, her-10)
det(movement-15, an-13)
amod(movement-15, instinctive-14)
nsubj(sufficed-19, movement-15)
nsubj(check-21, movement-15)
poss(part-18, her-17)
prep_on(movement-15, part-18)
conj_but(came-2, sufficed-19)
aux(check-21, to-20)
xcomp(sufficed-19, check-21)
dobj(check-21, him-22)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD threw)
        (NP (DT an) (JJ additional) (NNS heartiness))
        (PP (IN into)
          (NP (PRP$ her) (JJ welcome))))
      (, ,)
      (CC and)
      (VP (VBD kept)
        (NP (PRP him))
        (PP (IN at)
          (NP
            (NP (NN arm) (POS 's))
            (JJ -) (NN length)))))
    (. .)))

nsubj(threw-2, She-1)
nsubj(kept-11, She-1)
root(ROOT-0, threw-2)
det(heartiness-5, an-3)
amod(heartiness-5, additional-4)
dobj(threw-2, heartiness-5)
poss(welcome-8, her-7)
prep_into(threw-2, welcome-8)
conj_and(threw-2, kept-11)
dobj(kept-11, him-12)
poss(length-17, arm-14)
prep_at(kept-11, length-17)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD felt)
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP she))
            (VP (VBD had)
              (VP (VBN lost)
                (NP (DT an) (JJ old) (NN friend)))))))
      (, ,)
      (CC and)
      (RB not)
      (VP (VBD gained)
        (NP (DT a) (JJ new) (NN one))))
    (. .)))

nsubj(felt-2, She-1)
nsubj(gained-14, She-1)
root(ROOT-0, felt-2)
advmod(lost-7, as-3)
mark(lost-7, if-4)
nsubj(lost-7, she-5)
aux(lost-7, had-6)
advcl(felt-2, lost-7)
det(friend-10, an-8)
amod(friend-10, old-9)
dobj(lost-7, friend-10)
neg(gained-14, not-13)
conj_and(felt-2, gained-14)
det(one-17, a-15)
amod(one-17, new-16)
dobj(gained-14, one-17)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD made)
      (S
        (NP (PRP himself))
        (ADJP (RB very) (JJ agreeable)))
      (, ,)
      (PRN (CC but)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD made)
              (NP (PRP himself))
              (ADVP (RB so))
              (, ,)
              (S
                (VP (VBN made)
                  (S
                    (NP (PRP him))
                    (ADJP (RBR less) (RB so))))))))))
    (. .)))

nsubj(made-2, He-1)
root(ROOT-0, made-2)
nsubj(agreeable-5, himself-3)
advmod(agreeable-5, very-4)
xcomp(made-2, agreeable-5)
cc(made-10, but-7)
mark(made-10, that-8)
nsubj(made-10, he-9)
parataxis(made-2, made-10)
dobj(made-10, himself-11)
advmod(made-10, so-12)
vmod(made-10, made-14)
nsubj(so-17, him-15)
advmod(so-17, less-16)
xcomp(made-14, so-17)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (ADJP
          (ADJP (JJR more))
          (PP (IN than)
            (NP (DT these) (NNS changes))))
        (PP (IN at)
          (NP
            (NP (NN work))
            (PP (IN in)
              (NP (PRP her)))))))
    (: ;)
    (S
      (NP (EX there))
      (VP (VBD was)
        (ADVP (RB still))
        (NP
          (NP (DT the) (VBG underlying) (NN doubt))
          (VP (VBG concerning)
            (NP (PRP him))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
acomp(was-2, more-3)
det(changes-6, these-5)
prep_than(more-3, changes-6)
prep_at(was-2, work-8)
prep_in(work-8, her-10)
expl(was-13, there-12)
parataxis(was-2, was-13)
advmod(was-13, still-14)
det(doubt-17, the-15)
amod(doubt-17, underlying-16)
nsubj(was-13, doubt-17)
vmod(doubt-17, concerning-18)
dobj(concerning-18, him-19)

(ROOT
  (S
    (S
      (SBAR (IN Although)
        (FRAG (RB not)
          (NP (RB yet) (DT a) (JJ live) (NN soul))))
      (, ,)
      (NP (PRP she))
      (VP (VBD had)
        (NP (JJ strong)
          (ADJP (IN if) (JJ vague))
          (NNS ideas))
        (PP (IN about)
          (ADJP (JJ right)
            (CC and)
            (JJ wrong)))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN although)
        (S
          (NP (PRP she))
          (VP (VBD sought)
            (NP (JJ many) (NNS things))
            (PP
              (ADVP
                (NP (DT a) (JJ good) (NN deal))
                (RBR more))
              (IN than)
              (NP (NNS righteousness))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB see)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (NN temptation))
              (VP (MD would)
                (ADVP (IN at) (RB once))
                (VP (VB have)
                  (VP (VBN turned)
                    (NP (PRP her))
                    (PP (IN from)
                      (NP (PRP$ its) (VBN known) (NNS paths)))))))))))
    (. .)))

mark(not-2, Although-1)
advcl(had-9, not-2)
advmod(soul-6, yet-3)
det(soul-6, a-4)
amod(soul-6, live-5)
dep(not-2, soul-6)
nsubj(had-9, she-8)
root(ROOT-0, had-9)
amod(ideas-13, strong-10)
dep(vague-12, if-11)
amod(ideas-13, vague-12)
dobj(had-9, ideas-13)
prep_about(had-9, right-15)
prep_about(had-9, wrong-17)
conj_and(right-15, wrong-17)
mark(sought-22, although-20)
nsubj(sought-22, she-21)
advcl(see-35, sought-22)
amod(things-24, many-23)
dobj(sought-22, things-24)
det(deal-27, a-25)
amod(deal-27, good-26)
npadvmod(more-28, deal-27)
advmod(sought-22, more-28)
prep_than(sought-22, righteousness-30)
nsubj(see-35, I-32)
aux(see-35, do-33)
neg(see-35, not-34)
conj_and(had-9, see-35)
dobj(turned-42, what-36)
nsubj(turned-42, temptation-37)
aux(turned-42, would-38)
advmod(turned-42, at-39)
advmod(at-39, once-40)
aux(turned-42, have-41)
ccomp(see-35, turned-42)
dobj(turned-42, her-43)
poss(paths-47, its-45)
amod(paths-47, known-46)
prep_from(turned-42, paths-47)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB see)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP she))
            (VP (VBD had)
              (S
                (NP
                  (NP (RB yet))
                  (, ,)
                  (NP
                    (NP
                      (QP (JJR more) (IN than) (NNS hundreds)))
                    (PP (IN of)
                      (NP
                        (NP (NNS thousands))
                        (PP (IN of)
                          (NP (JJ well-meaning) (NNS women))))))
                  (, ,))
                (VP (TO to)
                  (VP (VB secure)
                    (NP (PRP her))
                    (PP (IN from)
                      (NP
                        (NP (JJ slow) (NN decay))
                        (CC and)
                        (NP (JJ final) (NNS ruin))))))))))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(see-8, time-4)
nsubj(see-8, I-5)
aux(see-8, do-6)
neg(see-8, not-7)
root(ROOT-0, see-8)
dobj(had-11, what-9)
nsubj(secure-24, what-9)
nsubj(had-11, she-10)
ccomp(see-8, had-11)
dobj(had-11, yet-12)
nsubj(secure-24, yet-12)
quantmod(hundreds-16, more-14)
quantmod(hundreds-16, than-15)
appos(yet-12, hundreds-16)
prep_of(hundreds-16, thousands-18)
amod(women-21, well-meaning-20)
prep_of(thousands-18, women-21)
aux(secure-24, to-23)
ccomp(had-11, secure-24)
xcomp(had-11, secure-24)
dobj(secure-24, her-25)
amod(decay-28, slow-27)
prep_from(secure-24, decay-28)
amod(ruin-31, final-30)
prep_from(secure-24, ruin-31)
conj_and(decay-28, ruin-31)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VBD laughed))
        (CC and)
        (VP (VBD talked)
          (PRT (RP together))
          (S
            (ADJP (RB very) (JJ _)
              (PP (IN like)
                (S
                  (VP (VBG _)
                    (NP
                      (NP (DT the) (NN way))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBD used)))))))))))))
    (, ,)
    (CC but)
    (S
      (S (`` ``)
        (NP (DT every) (JJ like))
        (VP (VBZ is) (RB not)
          (NP (DT the) (JJ same)))
        (, ,) ('' ''))
      (CC and)
      (S
        (NP (PRP they))
        (VP (VBD knew)
          (SBAR
            (S
              (NP (EX there))
              (VP (VBD was)
                (NP (DT a) (NN difference))))))))
    (. .)))

nsubj(laughed-2, They-1)
nsubj(talked-4, They-1)
root(ROOT-0, laughed-2)
conj_and(laughed-2, talked-4)
prt(talked-4, together-5)
advmod(_-7, very-6)
dep(talked-4, _-7)
prepc_like(_-7, _-9)
det(way-11, the-10)
dobj(_-9, way-11)
nsubj(used-13, they-12)
rcmod(way-11, used-13)
det(like-18, every-17)
nsubj(same-22, like-18)
cop(same-22, is-19)
neg(same-22, not-20)
det(same-22, the-21)
conj_but(laughed-2, same-22)
nsubj(knew-27, they-26)
conj_but(laughed-2, knew-27)
conj_and(same-22, knew-27)
expl(was-29, there-28)
ccomp(knew-27, was-29)
det(difference-31, a-30)
nsubj(was-29, difference-31)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD was)
      (VP (VBN stung)
        (PP (IN by)
          (NP
            (NP (DT the) (NN sense))
            (PP (IN of)
              (NP (PRP it)))
            (PRN (: --)
              (ADJP (RB too) (RB much)
                (S
                  (VP (TO to)
                    (VP (VB show)
                      (SBAR (IN that)
                        (S
                          (NP (PRP he))
                          (VP (VBD was)
                            (VP (VBN vexed))))))))))))))
    (. .)))

nsubjpass(stung-3, George-1)
auxpass(stung-3, was-2)
root(ROOT-0, stung-3)
det(sense-6, the-5)
agent(stung-3, sense-6)
prep_of(sense-6, it-8)
advmod(much-11, too-10)
dep(sense-6, much-11)
aux(show-13, to-12)
xcomp(much-11, show-13)
mark(vexed-17, that-14)
nsubjpass(vexed-17, he-15)
auxpass(vexed-17, was-16)
ccomp(show-13, vexed-17)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD laid)
      (NP (PRP himself))
      (PRT (RP out))
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP
              (ADVP (DT the) (JJR more))
              (NN pleasing)))))
      (, ,)
      (SBAR (RB as) (IN if)
        (S
          (S
            (VP (VBN determined)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (S
                      (NP (PRP her))
                      (VP (VB feel)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP he))
                            (VP (VBD was)
                              (ADJP (JJ worth)))))
                        (: --)
                        (PP (IN as)
                          (NP
                            (NP
                              (NP (DT the) (NN man))
                              (, ,)
                              (ADVP (RB namely)))
                            (, ,)
                            (SBAR
                              (WHNP (WP whom))
                              (S
                                (NP (PRP he))
                                (VP (VBD imagined)
                                  (NP (PRP himself))))))))))))))
          (, ,)
          (CC and)
          (S
            (VP (VBN valued)
              (NP (PRP himself))
              (PP (IN on)
                (NP (VBG being))))))))
    (. .)))

nsubj(laid-2, He-1)
root(ROOT-0, laid-2)
dobj(laid-2, himself-3)
prt(laid-2, out-4)
aux(pleasing-9, to-5)
cop(pleasing-9, be-6)
det(more-8, the-7)
advmod(pleasing-9, more-8)
vmod(laid-2, pleasing-9)
advmod(determined-13, as-11)
mark(determined-13, if-12)
advcl(laid-2, determined-13)
aux(make-15, to-14)
xcomp(determined-13, make-15)
nsubj(feel-17, her-16)
ccomp(make-15, feel-17)
dobj(worth-21, what-18)
nsubj(worth-21, he-19)
cop(worth-21, was-20)
ccomp(feel-17, worth-21)
det(man-25, the-24)
prep_as(feel-17, man-25)
dobj(imagined-31, man-25)
advmod(man-25, namely-27)
nsubj(imagined-31, he-30)
rcmod(man-25, imagined-31)
dobj(imagined-31, himself-32)
advcl(laid-2, valued-35)
conj_and(determined-13, valued-35)
dobj(valued-35, himself-36)
prep_on(valued-35, being-38)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN argument))
        (PP (IN for)
          (NP (NNP God))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB see)
            (NP
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD fools)
                    (SBAR
                      (S
                        (NP (DT those))
                        (VP (VBP make)
                          (PP (IN of)
                            (NP
                              (NP (PRP themselves))
                              (SBAR
                                (WHNP (WP who))
                                (S
                                  (PRN (, ,)
                                    (S
                                      (VP (VBG believing)
                                        (SBAR
                                          (S
                                            (NP (EX there))
                                            (VP (VBZ is)
                                              (NP (DT a) (NNP God)))))))
                                    (, ,))
                                  (VP (VBP do) (RB not)
                                    (VP (VB believe)
                                      (NP (NNS _))
                                      (PP (IN in)
                                        (S
                                          (VP (VBG _)
                                            (NP (PRP Him)))))))))))))))))
              (: --)
              (NP
                (NP (NNS children))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP do) (RB not)
                      (VP (VB know)
                        (NP (DT the) (NN Father))))))))))))
    (. .)))

nsubj(argument-4, It-1)
cop(argument-4, is-2)
det(argument-4, an-3)
root(ROOT-0, argument-4)
prep_for(argument-4, God-6)
aux(see-9, to-8)
vmod(argument-4, see-9)
nsubj(fools-11, what-10)
dep(children-32, fools-11)
nsubj(make-13, those-12)
ccomp(fools-11, make-13)
prep_of(make-13, themselves-15)
nsubj(believe-26, themselves-15)
parataxis(believe-26, believing-18)
expl(is-20, there-19)
ccomp(believing-18, is-20)
det(God-22, a-21)
nsubj(is-20, God-22)
aux(believe-26, do-24)
neg(believe-26, not-25)
rcmod(themselves-15, believe-26)
dobj(believe-26, _-27)
prepc_in(believe-26, _-29)
dobj(_-29, Him-30)
dobj(see-9, children-32)
nsubj(know-36, children-32)
aux(know-36, do-34)
neg(know-36, not-35)
rcmod(children-32, know-36)
det(Father-38, the-37)
dobj(know-36, Father-38)

(ROOT
  (S
    (NP (JJ Such))
    (VP (VBP make)
      (PRT (RP up))
      (NP
        (NP (DT the) (NN mass))
        (PP (IN of)
          (NP (NN church)
            (CC and)
            (NN chapel) (NNS goers)))))
    (. .)))

nsubj(make-2, Such-1)
root(ROOT-0, make-2)
prt(make-2, up-3)
det(mass-5, the-4)
dobj(make-2, mass-5)
nn(goers-10, church-7)
conj_and(church-7, chapel-9)
nn(goers-10, chapel-9)
prep_of(mass-5, goers-10)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP
            (NP (DT an) (NN earthquake))
            (CC or)
            (NP (DT the) (JJ small-pox) (NN break)))
          (ADJP (VB loose)
            (PP (IN among)
              (NP (PRP them)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD will)
        (VP (VB show)
          (NP
            (NP (WP what) (NN sort))
            (SBAR
              (S
                (NP (PRP$ their) (NN religion))
                (VP (VBZ is))))))))
    (. .)))

root(ROOT-0, Let-1)
det(earthquake-3, an-2)
nsubj(loose-8, earthquake-3)
det(break-7, the-5)
amod(break-7, small-pox-6)
conj_or(earthquake-3, break-7)
nsubj(loose-8, break-7)
xcomp(Let-1, loose-8)
prep_among(loose-8, them-10)
nsubj(show-15, they-13)
aux(show-15, will-14)
conj_and(Let-1, show-15)
det(sort-17, what-16)
dobj(show-15, sort-17)
poss(religion-19, their-18)
nsubj(is-20, religion-19)
rcmod(sort-17, is-20)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP
        (VP (VBD had)
          (VP (VBN got)
            (ADJP
              (ADJP (JJ rid)
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN folly))
                    (PP (IN of)
                      (S
                        (VP (VBG believing)
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NN existence))
                              (PP (IN of)
                                (NP (DT a) (NNP God)))))))))))
              (, ,)
              (CC either)
              (ADJP
                (ADJP (VBN interested)
                  (PP (IN in)
                    (NP (JJ human) (NNS affairs))))
                (CC or)
                (ADJP (JJ careless)
                  (PP (IN of)
                    (NP (PRP them))))))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB naturally))
          (VBD found)
          (S
            (NP (PRP himself))
            (ADJP (RBR more) (JJ comfortable)
              (PP (IN in)
                (NP (NN consequence))))))
        (: ;)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (ADVP (RB never))
            (VP (VBD had)
              (VP (VBN believed)
                (ADVP (RB _))
                (PP (IN in)
                  (NP (NNP _) (NNP God)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ awkward)
          (S
            (VP (TO to)
              (VP
                (VP (VB believe))
                (CC and)
                (RB not)
                (VP (VB believe)
                  (PP (IN at)
                    (NP (DT the) (JJ same) (NN moment))))))))))
    (. .)))

nsubj(rid-4, George-1)
nsubj(interested-18, George-1)
nsubj(found-29, George-1)
aux(rid-4, had-2)
dep(rid-4, got-3)
root(ROOT-0, rid-4)
det(folly-7, the-6)
prep_of(rid-4, folly-7)
prepc_of(folly-7, believing-9)
det(existence-12, the-11)
prep_in(believing-9, existence-12)
det(God-15, a-14)
prep_of(existence-12, God-15)
dep(rid-4, either-17)
conj_and(rid-4, interested-18)
amod(affairs-21, human-20)
prep_in(interested-18, affairs-21)
conj_and(rid-4, careless-23)
conj_or(interested-18, careless-23)
prep_of(careless-23, them-25)
advmod(found-29, naturally-28)
conj_and(rid-4, found-29)
nsubj(comfortable-32, himself-30)
advmod(comfortable-32, more-31)
xcomp(found-29, comfortable-32)
prep_in(comfortable-32, consequence-34)
mark(believed-40, for-36)
nsubj(believed-40, he-37)
neg(believed-40, never-38)
aux(believed-40, had-39)
advcl(rid-4, believed-40)
conj_and(rid-4, believed-40)
advmod(believed-40, _-41)
nn(God-44, _-43)
prep_in(believed-40, God-44)
nsubj(awkward-49, it-47)
nsubj(believe-51, it-47)
nsubj(believe-54, it-47)
cop(awkward-49, is-48)
conj_and(rid-4, awkward-49)
aux(believe-51, to-50)
xcomp(awkward-49, believe-51)
neg(believe-54, not-53)
xcomp(awkward-49, believe-54)
conj_and(believe-51, believe-54)
det(moment-58, the-56)
amod(moment-58, same-57)
prep_at(believe-54, moment-58)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN called)
            (NP (PRP$ his) (JJ _) (NNS beliefs))
            (SBAR
              (SBAR
                (S
                  (NP (NNP _))
                  (VP (VBD were)
                    (ADJP (RB as) (JJ worthy)
                      (PP (IN of)
                        (NP (DT the) (NN name))))
                    (PP (IN as)
                      (NP
                        (NP (DT those))
                        (PP (IN of)
                          (NP (JJS most) (NNS people))))))))
              (, ,)
              (CC but)
              (SBAR (IN whether)
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (ADJP
                      (ADJP (JJR better)
                        (CC or)
                        (JJR worse))
                      (PP (IN without)
                        (NP (PRP them) (RB hardly) (NNS interests))))))))))))
    (NP
      (NP (PRP me))
      (, ,)
      (CC and)
      (NP (PRP$ my) (NN philanthropy)))
    (VP (MD will)
      (VP
        (ADJP (JJ scarce))
        (VB serve)
        (S
          (VP (TO to)
            (VP (VB make)
              (S
                (NP (PRP me))
                (ADJP (JJ glad)))
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (ADJP (RBR more) (JJ comfortable))))))))))
    (. .)))

dobj(called-4, What-1)
nsubj(called-4, he-2)
aux(called-4, had-3)
advcl(serve-39, called-4)
poss(beliefs-7, his-5)
amod(beliefs-7, _-6)
dobj(called-4, beliefs-7)
nsubj(worthy-11, _-8)
cop(worthy-11, were-9)
advmod(worthy-11, as-10)
ccomp(called-4, worthy-11)
det(name-14, the-13)
prep_of(worthy-11, name-14)
prep_as(worthy-11, those-16)
amod(people-19, most-18)
prep_of(those-16, people-19)
mark(better-25, whether-22)
nsubj(better-25, he-23)
nsubj(worse-27, he-23)
cop(better-25, was-24)
ccomp(called-4, better-25)
conj_but(worthy-11, better-25)
conj_but(worthy-11, worse-27)
conj_or(better-25, worse-27)
dep(interests-31, them-29)
advmod(interests-31, hardly-30)
prep_without(better-25, interests-31)
nsubj(serve-39, me-32)
nsubj(make-41, me-32)
poss(philanthropy-36, my-35)
conj_and(me-32, philanthropy-36)
nsubj(serve-39, philanthropy-36)
nsubj(make-41, philanthropy-36)
aux(serve-39, will-37)
acomp(serve-39, scarce-38)
root(ROOT-0, serve-39)
aux(make-41, to-40)
xcomp(serve-39, make-41)
nsubj(glad-43, me-42)
xcomp(make-41, glad-43)
mark(comfortable-48, that-44)
nsubj(comfortable-48, he-45)
cop(comfortable-48, was-46)
advmod(comfortable-48, more-47)
ccomp(make-41, comfortable-48)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (PRP they))
          (VP (VBD talked))))
      (, ,)
      (NP (JJ old) (NNS times))
      (VP (VBD came)
        (PRT (RP up))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD drew)
        (NP (DT a) (JJ little) (NN nearer))
        (, ,)
        (SBAR (IN until)
          (S
            (PP (IN at)
              (NP (JJ last)))
            (NP
              (NP (DT a) (JJ gentle) (NN spring))
              (PP (IN of)
                (NP (JJ rose-colored) (NN interest))))
            (VP (VBD began)
              (NP (DT a) (JJ feeble) (NN flow))
              (PP (IN in)
                (NP
                  (NP (NNP Alexa) (POS 's))
                  (NN mind))))))))
    (. .)))

mark(talked-3, As-1)
nsubj(talked-3, they-2)
advcl(came-7, talked-3)
amod(times-6, old-5)
nsubj(came-7, times-6)
root(ROOT-0, came-7)
prt(came-7, up-8)
nsubj(drew-12, they-11)
conj_and(came-7, drew-12)
det(nearer-15, a-13)
amod(nearer-15, little-14)
dobj(drew-12, nearer-15)
mark(began-26, until-17)
prep_at(began-26, last-19)
det(spring-22, a-20)
amod(spring-22, gentle-21)
nsubj(began-26, spring-22)
amod(interest-25, rose-colored-24)
prep_of(spring-22, interest-25)
advcl(drew-12, began-26)
det(flow-29, a-27)
amod(flow-29, feeble-28)
dobj(began-26, flow-29)
poss(mind-33, Alexa-31)
prep_in(began-26, mind-33)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP George))
        (VP (VBD took)
          (NP
            (NP (PRP$ his) (NN leave))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP he))
                (VP (VBD did)
                  (ADVP (RB soon))
                  (, ,)
                  (PP (IN with)
                    (NP
                      (NP (DT the) (NN wisdom))
                      (PP (IN of)
                        (NP (CD one)))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBD feared)
                            (S
                              (VP (TO to)
                                (VP (VB bore))))))))))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD went)
      (PP (IN with)
        (NP (PRP him)))
      (PP (TO to)
        (NP (DT the) (NN court)))
      (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (NN gardener))
          (VP (VBD was)
            (VP (VBG holding)
              (NP (PRP$ his) (NN horse)))))))
    (. .)))

advmod(took-3, When-1)
nsubj(took-3, George-2)
advcl(went-23, took-3)
poss(leave-5, his-4)
dobj(took-3, leave-5)
dobj(did-9, leave-5)
nsubj(did-9, he-8)
rcmod(leave-5, did-9)
advmod(did-9, soon-10)
det(wisdom-14, the-13)
prep_with(did-9, wisdom-14)
nsubj(feared-18, wisdom-14)
nsubj(bore-20, wisdom-14)
prep_of(wisdom-14, one-16)
rcmod(wisdom-14, feared-18)
aux(bore-20, to-19)
xcomp(feared-18, bore-20)
nsubj(went-23, she-22)
root(ROOT-0, went-23)
prep_with(went-23, him-25)
det(court-28, the-27)
prep_to(went-23, court-28)
advmod(holding-34, where-30)
det(gardener-32, the-31)
nsubj(holding-34, gardener-32)
aux(holding-34, was-33)
advcl(went-23, holding-34)
poss(horse-36, his-35)
dobj(holding-34, horse-36)

(ROOT
  (S
    (ADVP (RB Beside))
    (NP (PRP them))
    (VP (VBD stood)
      (NP (NNP Andrew))
      (, ,)
      (S
        (VP
          (VP (VBG talking)
            (PP (TO to)
              (NP (DT the) (JJ old) (NN man))))
          (, ,)
          (CC and)
          (VP (VBG admiring)
            (NP
              (NP (DT the) (JJ beautiful) (NN animal))
              (PP (IN in)
                (NP (PRP$ his) (NN charge))))))))
    (. .)))

advmod(stood-3, Beside-1)
nsubj(stood-3, them-2)
root(ROOT-0, stood-3)
dobj(stood-3, Andrew-4)
dep(stood-3, talking-6)
det(man-10, the-8)
amod(man-10, old-9)
prep_to(talking-6, man-10)
dep(stood-3, admiring-13)
conj_and(talking-6, admiring-13)
det(animal-16, the-14)
amod(animal-16, beautiful-15)
dobj(admiring-13, animal-16)
poss(charge-19, his-18)
prep_in(animal-16, charge-19)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN life))
      (PP (IN of)
        (NP (DT the) (NNP Creator))))
    (VP (VBZ has)
      (VP (VBN run)
        (ADVP (JJ free)
          (PP (IN through)
            (ADVP
              (NP (DT every) (NN channel))
              (RB up))))
        (PP (TO to)
          (NP (DT this) (NN creature)))))
    (. !) ('' '')))

det(life-3, The-2)
nsubj(run-8, life-3)
det(Creator-6, the-5)
prep_of(life-3, Creator-6)
aux(run-8, has-7)
root(ROOT-0, run-8)
advmod(run-8, free-9)
prep(free-9, through-10)
det(channel-12, every-11)
npadvmod(up-13, channel-12)
pcomp(through-10, up-13)
det(creature-16, this-15)
prep_to(run-8, creature-16)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG saying)
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP (VBD came)
              (ADJP (JJ near)))))))
    (. .)))

nsubj(saying-3, he-1)
aux(saying-3, was-2)
root(ROOT-0, saying-3)
mark(came-6, as-4)
nsubj(came-6, they-5)
advcl(saying-3, came-6)
acomp(came-6, near-7)

(ROOT
  (S (`` ``)
    (NP (WP What))
    (VP (VBZ rot))
    (. !) ('' '')))

nsubj(rot-3, What-2)
root(ROOT-0, rot-3)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (NNP George))
        (PP
          (PP (TO to)
            (NP (PRP himself)))
          (, ,)
          (CC but)
          (PP (TO to)
            (NP
              (NP (NNP Alexa))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD said) (: :) (`` ``)
                    (S
                      (NP (RB Here))
                      (VP (VBZ 's)
                        (NP
                          (NP (PRP$ my) (JJ old) (NN friend))
                          (, ,)
                          (NP (DT the) (NN farmer)))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP declare))
    (. !) ('' '')))

ccomp(declare-23, said-1)
dobj(said-1, George-2)
prep_to(said-1, himself-4)
prep_to(said-1, Alexa-8)
conj_but(himself-4, Alexa-8)
nsubj(said-10, he-9)
rcmod(Alexa-8, said-10)
nsubj(friend-17, Here-13)
cop(friend-17, 's-14)
poss(friend-17, my-15)
amod(friend-17, old-16)
ccomp(said-10, friend-17)
det(farmer-20, the-19)
appos(friend-17, farmer-20)
nsubj(declare-23, I-22)
root(ROOT-0, declare-23)

(ROOT
  (FRAG (RB then)
    (PP (TO to)
      (NP
        (NP (NNP Andrew))
        (: :)
        (SBARQ (`` ``)
          (WHADVP (WRB How))
          (SQ (VBP do)
            (NP (PRP you))
            (VP (VB do)
              (FRAG (, ,)
                (NP (NNP Mr.) (NNP Ingram)))))
          (. ?) ('' ''))))))

root(ROOT-0, then-1)
prep_to(then-1, Andrew-3)
advmod(do-9, How-6)
aux(do-9, do-7)
nsubj(do-9, you-8)
dep(Andrew-3, do-9)
nn(Ingram-12, Mr.-11)
dep(do-9, Ingram-12)

(ROOT
  (S
    (NP (NNP George))
    (ADVP (RB never))
    (VP
      (VP (VBD forgot)
        (NP
          (NP (DT a) (NN man) (POS 's))
          (NN name)))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PP (IN in)
          (NP
            (NP (NN consequence))
            (PP (IN for)
              (NP (DT a) (JJR better) (NN fellow)))))
        (SBAR (IN than)
          (S
            (NP (PRP he))
            (VP (VBD was))))))
    (. .)))

nsubj(forgot-3, George-1)
nsubj(went-10, George-1)
neg(forgot-3, never-2)
root(ROOT-0, forgot-3)
det(man-5, a-4)
poss(name-7, man-5)
dobj(forgot-3, name-7)
conj_and(forgot-3, went-10)
prep_in(went-10, consequence-12)
det(fellow-16, a-14)
amod(fellow-16, better-15)
prep_for(consequence-12, fellow-16)
mark(was-19, than-17)
nsubj(was-19, he-18)
advcl(went-10, was-19)

(ROOT
  (S
    (NP (PRP One))
    (VP (MD may)
      (VP (VB remember)
        (PP (IN for)
          (NP
            (NP (NNS reasons))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP have)
                  (ADVP (RB little))
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (PP (IN with)
                          (NP (NN good-fellowship)))))))))))))
    (. .)))

nsubj(remember-3, One-1)
aux(remember-3, may-2)
root(ROOT-0, remember-3)
prep_for(remember-3, reasons-5)
nsubj(have-7, reasons-5)
nsubj(do-10, reasons-5)
rcmod(reasons-5, have-7)
advmod(have-7, little-8)
aux(do-10, to-9)
xcomp(have-7, do-10)
prep_with(do-10, good-fellowship-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD spoke)
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (NP (JJ old) (NNS friends))))))
    (. .)))

nsubj(spoke-2, He-1)
root(ROOT-0, spoke-2)
advmod(friends-8, as-3)
mark(friends-8, if-4)
nsubj(friends-8, they-5)
cop(friends-8, were-6)
amod(friends-8, old-7)
advcl(spoke-2, friends-8)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB like)
            (NP
              (NP (DT the) (NN look))
              (PP (IN of)
                (NP (DT the) (NN beast))))))))
    (. !) ('' '')))

nsubj(seem-3, You-2)
nsubj(like-5, You-2)
root(ROOT-0, seem-3)
aux(like-5, to-4)
xcomp(seem-3, like-5)
det(look-7, the-6)
dobj(like-5, look-7)
det(beast-10, the-9)
prep_of(look-7, beast-10)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said) (: :) (`` ``)
      (S
        (NP (PRP you))
        (VP (MD ought)
          (S
            (VP (TO to)
              (VP (VB know)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ 's)
                      (NP
                        (NP (WP what))
                        (PP (IN in)
                          (NP (NNS horses)))))))))))))
    (. !) ('' '')))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
nsubj(ought-6, you-5)
nsubj(know-8, you-5)
ccomp(said-2, ought-6)
aux(know-8, to-7)
xcomp(ought-6, know-8)
nsubj(what-11, what-9)
cop(what-11, 's-10)
ccomp(know-8, what-11)
prep_in(what-11, horses-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (NP (DT the) (JJS finest) (NNS horses))
              (SBAR
                (S
                  (NP (PRP I))
                  (ADVP (RB ever))
                  (VP (VBD saw)))))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Andrew))
    (. .)))

nsubj(one-4, He-2)
cop(one-4, is-3)
ccomp(answered-14, one-4)
det(horses-8, the-6)
amod(horses-8, finest-7)
prep_of(one-4, horses-8)
nsubj(saw-11, I-9)
advmod(saw-11, ever-10)
rcmod(horses-8, saw-11)
root(ROOT-0, answered-14)
nsubj(answered-14, Andrew-15)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN man))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ owns)
            (NP (PRP him))))))
    (VP (VBZ is)
      (ADJP (JJ fortunate)))
    (. .) ('' '')))

det(man-3, The-2)
nsubj(owns-5, man-3)
nsubj(fortunate-8, man-3)
rcmod(man-3, owns-5)
dobj(owns-5, him-6)
cop(fortunate-8, is-7)
root(ROOT-0, fortunate-8)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (DT a) (JJ good) (NN one))))))
    (. !) ('' '')))

nsubj(ought-3, He-2)
nsubj(one-8, He-2)
root(ROOT-0, ought-3)
aux(one-8, to-4)
cop(one-8, be-5)
det(one-8, a-6)
amod(one-8, good-7)
xcomp(ought-3, one-8)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP George)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, George-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD gave)
      (NP
        (UCP
          (NP (DT a) (CD hundred))
          (CC and)
          (ADVP (RB fifty)))
        (NNS guineas))
      (PP (IN for)
        (NP (PRP him)))
      (NP (NN yesterday)))
    (. .) ('' '')))

nsubj(gave-3, I-2)
root(ROOT-0, gave-3)
det(hundred-5, a-4)
nn(guineas-8, hundred-5)
advmod(hundred-5, fifty-7)
conj_and(hundred-5, fifty-7)
nn(guineas-8, fifty-7)
dobj(gave-3, guineas-8)
prep_for(gave-3, him-10)
tmod(gave-3, yesterday-11)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (MD could) (RB not)
      (VP (VB help)
        (ADVP (RB vaguely)
          (S
            (VP (VBG reflecting)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP
                    (NP (NN kind))
                    (PP (IN of)
                      (NP (NN money))))
                  (VP (VBD had)
                    (VP (VBN bought)
                      (NP (PRP him))
                      (, ,)
                      (SBAR (IN if)
                        (S
                          (NP (NNP Sandy))
                          (VP (VBD was)
                            (ADJP (JJ right))))))))))))))
    (. .)))

nsubj(help-4, Andrew-1)
aux(help-4, could-2)
neg(help-4, not-3)
root(ROOT-0, help-4)
advmod(help-4, vaguely-5)
dep(vaguely-5, reflecting-6)
dobj(bought-12, what-7)
nsubj(bought-12, kind-8)
prep_of(kind-8, money-10)
aux(bought-12, had-11)
ccomp(reflecting-6, bought-12)
dobj(bought-12, him-13)
mark(right-18, if-15)
nsubj(right-18, Sandy-16)
cop(right-18, was-17)
advcl(bought-12, right-18)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD was)
      (ADJP (JJ pleased)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (NNP Andrew)))))))
    (. .)))

nsubj(pleased-3, Alexa-1)
nsubj(see-5, Alexa-1)
cop(pleased-3, was-2)
root(ROOT-0, pleased-3)
aux(see-5, to-4)
xcomp(pleased-3, see-5)
dobj(see-5, Andrew-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD made)
      (SBAR
        (S
          (NP (PRP her))
          (VP (VBP feel)
            (ADJP (RBR more) (JJ comfortable))))))
    (. .)))

nsubj(made-2, He-1)
root(ROOT-0, made-2)
nsubj(feel-4, her-3)
ccomp(made-2, feel-4)
advmod(comfortable-6, more-5)
acomp(feel-4, comfortable-6)

(ROOT
  (S
    (NP (PRP$ His) (NN presence))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB protect)
            (NP
              (NP (PRP her))
              (NP (DT a) (JJ little)))))))
    (. .)))

poss(presence-2, His-1)
nsubj(seemed-3, presence-2)
nsubj(protect-5, presence-2)
root(ROOT-0, seemed-3)
aux(protect-5, to-4)
xcomp(seemed-3, protect-5)
dobj(protect-5, her-6)
iobj(protect-5, her-6)
det(little-8, a-7)
dep(her-6, little-8)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP May))
      (NP (PRP I))
      (VP (VBP ask)
        (NP
          (NP (PRP you))
          (, ,)
          (NP (NNP Mr.) (NNP Ingram)))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (VP (TO to)
          (VP (VB repeat)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBD were)
                  (VP (VBG saying)
                    (PP (IN about)
                      (NP (DT the) (NN horse)))
                    (SBAR (IN as)
                      (S
                        (NP (PRP we))
                        (VP (VBD came)
                          (PRT (RP up)))))))))))))
    (. ?) ('' '')))

tmod(ask-4, May-2)
nsubj(ask-4, I-3)
ccomp(said-12, ask-4)
dobj(ask-4, you-5)
nn(Ingram-8, Mr.-7)
appos(you-5, Ingram-8)
nsubj(said-12, she-11)
nsubj(repeat-16, she-11)
root(ROOT-0, said-12)
aux(repeat-16, to-15)
xcomp(said-12, repeat-16)
dobj(saying-20, what-17)
nsubj(saying-20, you-18)
aux(saying-20, were-19)
ccomp(repeat-16, saying-20)
det(horse-23, the-22)
prep_about(saying-20, horse-23)
mark(came-26, as-24)
nsubj(came-26, we-25)
advcl(saying-20, came-26)
prt(came-26, up-27)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBG saying))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Andrew))
    (, ,) (`` ``)
    (S
      (NP
        (NP (DT that))
        (, ,)
        (PP (TO to)
          (NP
            (NP (DT any) (NN one))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ understands)
                  (NP
                    (NP (DT a) (NN horse))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (ADJP (JJ clear))
                          (SBAR (IN that)
                            (S
                              (NP
                                (NP (DT the) (NN power))
                                (PP (IN of)
                                  (NP (NNP God))))
                              (VP (MD must)
                                (VP (VB have)
                                  (VP (VBD flowed))))))))))))))))
      (VP (VBD unobstructed)
        (PP (IN through)
          (NP (JJ many) (NNS generations)))
        (S
          (VP (TO to)
            (VP (VB fashion)
              (NP (PDT such) (DT a) (NN perfection)))))))
    (. .) ('' '')))

nsubj(saying-4, I-2)
aux(saying-4, was-3)
ccomp(answered-7, saying-4)
root(ROOT-0, answered-7)
nsubj(answered-7, Andrew-8)
nsubj(unobstructed-31, that-11)
nsubj(fashion-36, that-11)
det(one-15, any-14)
prep_to(that-11, one-15)
nsubj(understands-17, one-15)
rcmod(one-15, understands-17)
det(horse-19, a-18)
dobj(understands-17, horse-19)
mark(flowed-30, horse-19)
nsubj(clear-22, it-20)
cop(clear-22, is-21)
rcmod(horse-19, clear-22)
det(power-25, the-24)
nsubj(flowed-30, power-25)
prep_of(power-25, God-27)
aux(flowed-30, must-28)
aux(flowed-30, have-29)
ccomp(clear-22, flowed-30)
dep(answered-7, unobstructed-31)
amod(generations-34, many-33)
prep_through(unobstructed-31, generations-34)
aux(fashion-36, to-35)
xcomp(unobstructed-31, fashion-36)
predet(perfection-39, such-37)
det(perfection-39, a-38)
dobj(fashion-36, perfection-39)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBP indorse)
      (NP
        (NP (DT the) (NN development) (NN theory))
        (: --)
        (VP (VB do)
          (NP (PRP you)))))
    (. ?) ('' '')))

nsubj(indorse-2, you-1)
root(ROOT-0, indorse-2)
det(theory-5, the-3)
nn(theory-5, development-4)
dobj(indorse-2, theory-5)
dep(theory-5, do-7)
dobj(do-7, you-8)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP George)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, George-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD should)
      (ADVP (RB hardly))
      (VP (VB have)
        (VP (VBN expected)
          (NP
            (NP (DT that))
            (PP (IN of)
              (NP (PRP you)))))))
    (. .) ('' '')))

nsubj(expected-6, I-2)
aux(expected-6, should-3)
advmod(expected-6, hardly-4)
aux(expected-6, have-5)
root(ROOT-0, expected-6)
dobj(expected-6, that-7)
prep_of(that-7, you-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB think)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ has)
                (NP (NN anything)
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (PP (IN with)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP I))
                              (VP (VBD said)))))))))))))))
    (: ;)
    (S
      (NP (DT no) (NN one))
      (VP (VBZ disputes)
        (SBAR (IN that)
          (S
            (NP (DT this) (NN horse))
            (VP (VBZ comes)
              (PP (IN of)
                (NP
                  (NP (JJ many) (NNS generations))
                  (PP (IN of)
                    (NP (NNS horses))))))))))
    (. .)))

nsubj(think-5, I-2)
aux(think-5, do-3)
neg(think-5, not-4)
root(ROOT-0, think-5)
nsubj(has-7, it-6)
ccomp(think-5, has-7)
dobj(has-7, anything-8)
aux(do-10, to-9)
vmod(anything-8, do-10)
dobj(said-14, what-12)
nsubj(said-14, I-13)
prepc_with(do-10, said-14)
neg(one-17, no-16)
nsubj(disputes-18, one-17)
parataxis(think-5, disputes-18)
mark(comes-22, that-19)
det(horse-21, this-20)
nsubj(comes-22, horse-21)
ccomp(disputes-18, comes-22)
amod(generations-25, many-24)
prep_of(comes-22, generations-25)
prep_of(generations-25, horses-27)

(ROOT
  (S
    (NP
      (NP (DT The) (NN development) (NN theory))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBP understand)
            (NP (NN aright)))))
      (, ,))
    (VP (VBZ concerns)
      (NP (PRP itself))
      (PP (IN with)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP
              (NP (PRP$ his) (JJ first) (NN ancestor))
              (PP (IN in)
                (NP (PRP$ his) (JJ own) (NN kind))))
            (VP (VBD came)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP (DT a) (NN horse))))))))))
    (. .) ('' '')))

det(theory-3, The-1)
nn(theory-3, development-2)
nsubj(concerns-10, theory-3)
mark(understand-7, if-5)
nsubj(understand-7, I-6)
dep(theory-3, understand-7)
dobj(understand-7, aright-8)
root(ROOT-0, concerns-10)
dobj(concerns-10, itself-11)
advmod(came-21, how-13)
poss(ancestor-16, his-14)
amod(ancestor-16, first-15)
nsubj(came-21, ancestor-16)
nsubj(horse-25, ancestor-16)
poss(kind-20, his-18)
amod(kind-20, own-19)
prep_in(ancestor-16, kind-20)
prepc_with(concerns-10, came-21)
aux(horse-25, to-22)
cop(horse-25, be-23)
det(horse-25, a-24)
xcomp(came-21, horse-25)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (RB about) (WDT that))
    (ADVP (RB there))
    (VP (MD can)
      (VP (VB be)
        (NP
          (NP (DT no) (NN doubt))
          (PP (IN in)
            (NP
              (NP (DT the) (NN mind))
              (PP (IN of)
                (NP
                  (NP (DT any) (NN one))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBZ believes)
                        (PP (IN in)
                          (NP (DT the) (NNP Bible)))))))))))))
    (. !) ('' '')))

cc(doubt-9, And-2)
advmod(that-4, about-3)
nsubj(doubt-9, that-4)
advmod(doubt-9, there-5)
aux(doubt-9, can-6)
cop(doubt-9, be-7)
neg(doubt-9, no-8)
root(ROOT-0, doubt-9)
det(mind-12, the-11)
prep_in(doubt-9, mind-12)
det(one-15, any-14)
prep_of(mind-12, one-15)
nsubj(believes-17, one-15)
rcmod(one-15, believes-17)
det(Bible-20, the-19)
prep_in(believes-17, Bible-20)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP George)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, George-2)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP God))
      (VP (VBZ makes)
        (NP
          (NP (JJ beautiful) (NNS horses))
          (, ,) ('' '')
          (VP (VBN returned)
            (NP (NNP Andrew))))))
    (: ;) (`` ``)
    (S
      (SBAR (IN whether)
        (S
          (NP (PRP He))
          (VP (VBZ takes)
            (S
              (NP
                (NP (DT the) (CD one) (NN way))
                (CC or)
                (NP (DT the) (JJ other)))
              (VP (TO to)
                (VP (VB make)
                  (NP (PRP them))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP He))
              (VP (VBZ takes)
                (NP (DT the) (JJ right) (NN way))))))))
    (. .) ('' '')))

nsubj(makes-3, God-2)
root(ROOT-0, makes-3)
amod(horses-5, beautiful-4)
dobj(makes-3, horses-5)
vmod(horses-5, returned-8)
dobj(returned-8, Andrew-9)
mark(takes-14, whether-12)
nsubj(takes-14, He-13)
advcl(sure-27, takes-14)
ccomp(sure-27, takes-14)
det(way-17, the-15)
num(way-17, one-16)
dobj(takes-14, way-17)
nsubj(make-22, way-17)
det(other-20, the-19)
dobj(takes-14, other-20)
conj_or(way-17, other-20)
nsubj(make-22, other-20)
aux(make-22, to-21)
xcomp(takes-14, make-22)
dobj(make-22, them-23)
nsubj(sure-27, I-25)
cop(sure-27, am-26)
parataxis(makes-3, sure-27)
nsubj(takes-29, He-28)
ccomp(sure-27, takes-29)
det(way-32, the-30)
amod(way-32, right-31)
dobj(takes-29, way-32)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP imply)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (PP (IN of)
              (NP
                (NP (JJ little) (NN consequence))
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP you))
                    (VP (VBP believe)
                      (PP (IN about)
                        (NP (PRP it))))))))))))
    (. .) ('' '')))

nsubj(imply-3, You-2)
root(ROOT-0, imply-3)
nsubj(is-5, it-4)
ccomp(imply-3, is-5)
amod(consequence-8, little-7)
prep_of(is-5, consequence-8)
dobj(believe-11, consequence-8)
nsubj(believe-11, you-10)
rcmod(consequence-8, believe-11)
prep_about(believe-11, it-13)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (PRP them))))))))
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (PP (IN of)
          (NP (NN consequence)))))
    (. .)))

mark(had-4, If-2)
nsubj(had-4, I-3)
nsubj(make-6, I-3)
advcl(be-10, had-4)
aux(make-6, to-5)
xcomp(had-4, make-6)
dobj(make-6, them-7)
nsubj(be-10, it-8)
aux(be-10, would-9)
root(ROOT-0, be-10)
prep_of(be-10, consequence-12)

(ROOT
  (S (CC But)
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP I))
        (VP (VBP think)
          (PP (IN of)
            (NP (NN consequence)))
          (PP (TO to)
            (NP (PRP us))))))
    (VP
      (VP (VBZ is))
      (: --)
      (SBAR (IN that)
        (S
          (NP (PRP He))
          (VP (VBZ makes)
            (NP (PRP them))
            (, ,)
            (PP
              (PP (RB not) (IN out)
                (PP (IN of)
                  (NP (NN nothing))))
              (, ,)
              (CC but)
              (RB out)
              (PP (IN of)
                (NP (PRP Himself))))))))
    (. .)))

cc(is-9, But-1)
dobj(think-4, what-2)
nsubj(think-4, I-3)
csubj(is-9, think-4)
prep_of(think-4, consequence-6)
prep_to(think-4, us-8)
root(ROOT-0, is-9)
mark(makes-13, that-11)
nsubj(makes-13, He-12)
ccomp(is-9, makes-13)
parataxis(is-9, makes-13)
dobj(makes-13, them-14)
neg(makes-13, not-16)
prepc_out_of(makes-13, of-18)
pobj(makes-13, nothing-19)
ccomp(is-9, out-22)
parataxis(is-9, out-22)
conj_but(makes-13, out-22)
dep(makes-13, of-23)
pobj(of-23, Himself-24)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP
        (NP (PRP$ my) (JJ poor) (NN notion))
        (PP (IN of)
          (NP (NNP God) (POS 's))))
      (VP (VB _)
        (SBAR
          (WHADVP (WRB how))
          (S
            (S
              (NP (NNP _))
              (VP (VBP be)
                (PP (IN of)
                  (NP (NN importance)))))
            (, ,) (IN so)
            (S
              (ADVP (RB long) (RB as))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP I))
                  (VP (VBP see)
                    (NP
                      (NP (DT a) (NN horse))
                      (PP (IN like)
                        (NP (NNP yours) (, ,) (NNP Mr.) (NNP Crawford)))))))
              (, ,)
              (NP (PRP I))
              (VP (VBP say) (, ,)
                (S
                  (NP (NNP God))
                  (VP (VB be)
                    (VP (VBN praised))))))))))
    (. ?)))

advmod(_-9, Why-1)
aux(_-9, should-2)
poss(notion-5, my-3)
amod(notion-5, poor-4)
nsubj(_-9, notion-5)
prep_of(notion-5, God-7)
possessive(God-7, 's-8)
root(ROOT-0, _-9)
advmod(be-12, how-10)
nsubj(be-12, _-11)
dep(_-9, be-12)
prep_of(be-12, importance-14)
dep(be-12, so-16)
advmod(as-18, long-17)
advmod(say-32, as-18)
advmod(see-22, when-20)
nsubj(see-22, I-21)
advcl(say-32, see-22)
det(horse-24, a-23)
dobj(see-22, horse-24)
nn(Crawford-29, yours-26)
appos(Crawford-29, Mr.-28)
prep_like(horse-24, Crawford-29)
nsubj(say-32, I-31)
parataxis(be-12, say-32)
nsubjpass(praised-36, God-34)
auxpass(praised-36, be-35)
ccomp(say-32, praised-36)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (PP (IN of)
          (NP (JJ eternal) (NN importance)))
        (S
          (VP (TO to)
            (VP
              (VP (VB love)
                (NP (DT the) (NN animal)))
              (, ,)
              (CC and)
              (VP (VB see)
                (PP (IN in)
                  (NP (PRP him)))
                (NP
                  (NP (DT the) (NN beauty))
                  (PP (IN of)
                    (NP (DT the) (NNP Lord))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (PP (IN of)
          (NP (NN none)))
        (S
          (VP (TO to)
            (VP (VB fancy)
              (S
                (NP (PRP I))
                (VP (VB know)
                  (SBAR
                    (WHADVP (WDT which) (NN way))
                    (S
                      (NP (NNP God))
                      (VP (VBD took)
                        (S
                          (VP (TO to)
                            (VP (VB make)
                              (NP (PRP him)))))))))))))))
    (. .)))

nsubj(is-2, It-1)
nsubj(love-7, It-1)
nsubj(see-12, It-1)
root(ROOT-0, is-2)
amod(importance-5, eternal-4)
prep_of(is-2, importance-5)
aux(love-7, to-6)
xcomp(is-2, love-7)
det(animal-9, the-8)
dobj(love-7, animal-9)
xcomp(is-2, see-12)
conj_and(love-7, see-12)
prep_in(see-12, him-14)
det(beauty-16, the-15)
dobj(see-12, beauty-16)
det(Lord-19, the-18)
prep_of(beauty-16, Lord-19)
nsubj(is-22, it-21)
nsubj(fancy-26, it-21)
parataxis(is-2, is-22)
prep_of(is-22, none-24)
aux(fancy-26, to-25)
xcomp(is-22, fancy-26)
nsubj(know-28, I-27)
ccomp(fancy-26, know-28)
dep(way-30, which-29)
advmod(took-32, way-30)
nsubj(took-32, God-31)
nsubj(make-34, God-31)
dep(know-28, took-32)
aux(make-34, to-33)
xcomp(took-32, make-34)
dobj(make-34, him-35)

(ROOT
  (S
    (S (RB Not)
      (VP (VBG having)
        (S
          (PP (IN in)
            (NP (PRP me)))
          (NP
            (NP (DT the) (NN power))
            (CC or)
            (NP (DT the) (NN stuff)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP (DT a) (NN horse))))))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (MD can) (RB not)
          (VP (VB know)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (NNP God))
                (VP (VBD made)
                  (NP (DT the) (NN horse)))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD can)
        (VP (VB know)
          (S
            (NP (PRP him))
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ beautiful) ('' ''))
                (S (`` ``)
                  (S
                    (ADVP (CC But))
                    (PRN (, ,) ('' '')
                      (SINV
                        (VP (VBD said))
                        (NP (NNP George)))
                      (, ,) (`` ``))
                    (NP (DT the) (JJ first) (NN horse))
                    (VP (VBD was)
                      (NP
                        (NP
                          (NP (DT a)
                            (ADJP (RB very) (JJ common-looking))
                            (JJ domestic) (NN animal))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (NP (PRP they))
                              (VP (VBD kept)
                                (S
                                  (VP (TO to)
                                    (VP (VB eat))))))))
                        (: --)
                        (NP
                          (NP (NN nothing))
                          (PP (IN like)
                            (NP (DT this) (NN one))))))))))))))
    (. .) ('' '')))

neg(having-2, Not-1)
root(ROOT-0, having-2)
dep(power-6, in-3)
pobj(in-3, me-4)
det(power-6, the-5)
dep(having-2, power-6)
det(stuff-9, the-8)
dep(having-2, stuff-9)
conj_or(power-6, stuff-9)
aux(make-11, to-10)
vmod(stuff-9, make-11)
det(horse-13, a-12)
dobj(make-11, horse-13)
nsubj(know-18, I-15)
aux(know-18, can-16)
neg(know-18, not-17)
dep(having-2, know-18)
advmod(made-21, how-19)
nsubj(made-21, God-20)
ccomp(know-18, made-21)
det(horse-23, the-22)
dobj(made-21, horse-23)
nsubj(know-27, I-25)
aux(know-27, can-26)
parataxis(having-2, know-27)
dobj(know-27, him-28)
nsubj(beautiful-31, him-28)
aux(beautiful-31, to-29)
cop(beautiful-31, be-30)
xcomp(know-27, beautiful-31)
advmod(animal-49, But-34)
parataxis(animal-49, said-37)
nsubj(said-37, George-38)
det(horse-43, the-41)
amod(horse-43, first-42)
nsubj(animal-49, horse-43)
cop(animal-49, was-44)
det(animal-49, a-45)
advmod(common-looking-47, very-46)
amod(animal-49, common-looking-47)
amod(animal-49, domestic-48)
dep(beautiful-31, animal-49)
dobj(kept-53, animal-49)
nsubj(eat-55, animal-49)
nsubj(kept-53, they-52)
rcmod(animal-49, kept-53)
aux(eat-55, to-54)
xcomp(kept-53, eat-55)
dep(animal-49, nothing-57)
det(one-60, this-59)
prep_like(nothing-57, one-60)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP you))
      (VP (VBP think)
        (SBAR
          (SBAR
            (S
              (NP (NNP God))
              (VP (VBD made)
                (NP (DT the) (JJ first) (NN horse)))))
          (, ,)
          (CC and)
          (SBAR (RB after) (IN that)
            (S
              (NP (DT the) (NNS horses))
              (VP (VBD made)
                (NP (PRP themselves))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Andrew))
    (. .)))

advmod(think-4, Then-2)
nsubj(think-4, you-3)
ccomp(said-20, think-4)
nsubj(made-6, God-5)
dep(think-4, made-6)
det(horse-9, the-7)
amod(horse-9, first-8)
dobj(made-6, horse-9)
advmod(made-16, after-12)
mark(made-16, that-13)
det(horses-15, the-14)
nsubj(made-16, horses-15)
dep(think-4, made-16)
conj_and(made-6, made-16)
dobj(made-16, themselves-17)
root(ROOT-0, said-20)
nsubj(said-20, Andrew-21)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD laughed)))
    (: ;)
    (S
      (NP (NNP George))
      (VP (VBD said)
        (NP (NN nothing))))
    (: ;)
    (S
      (NP (NNP Andrew))
      (VP (VBD went)
        (PRT (RP on))))
    (. .)))

nsubj(laughed-2, Alexa-1)
root(ROOT-0, laughed-2)
nsubj(said-5, George-4)
parataxis(laughed-2, said-5)
dobj(said-5, nothing-6)
nsubj(went-9, Andrew-8)
parataxis(laughed-2, went-9)
prt(went-9, on-10)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said))))
    (, ,) (`` ``)
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (VP (VBP have)
          (VP (VBN come)
            (PRT (RP up))
            (PP (IN from)
              (NP (DT the) (JJR lower) (NNS animals)))
            (, ,)
            (PP (IN through)
              (NP
                (NP
                  (NP
                    (QP (DT a) (CD million)))
                  (PP (IN of)
                    (NP (NNS kinds)))
                  (, ,)
                  (ADVP (RB perhaps)))
                (PRN (: --)
                  (PP (IN against)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (NN theory) (NN I))
                        (VP (VBP have)
                          (ADVP (NN nothing))
                          (S
                            (VP (TO to)
                              (VP (VB urge))))))))
                  (: --))))))))
    (ADVP (RB then))
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RBR more) (IN than))
      (VP (VBN prepared)
        (S
          (VP (TO to)
            (VP (VB believe)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT the) (NN man))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ does) (RB not)
                          (VP (VB do)
                            (NP
                              (NP (DT the) (NN part))
                              (PP (IN of)
                                (NP (DT a) (NN man)))))))))
                  (VP (MD will)
                    (VP (VB have)
                      (S
                        (VP (TO to)
                          (VP (VB go)
                            (ADVP (RB down) (RB again))
                            (, ,)
                            (PP (IN through)
                              (NP
                                (NP (PDT all) (DT the) (NNS stages))
                                (PP (IN of)
                                  (NP (PRP$ his) (NN being)))))))))))))))
        (, ,)
        (PP (TO to)
          (NP
            (NP (DT a) (NN position))
            (PP (IN beyond)
              (NP
                (NP (DT the) (JJS lowest) (NNS forms))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNS powers)
                      (S
                        (S
                          (NP (PRP he))
                          (VP (VBZ has)
                            (VP (VBD misused))))
                        (, ,)
                        (CC and)
                        (S
                          (NP (EX there))
                          (VP (VBP begin)
                            (S
                              (VP (TO to)
                                (VP (VB rise)
                                  (ADVP (RB once) (RBR more)))))))))
                    (, ,)
                    (VP (VBN haunted)
                      (ADVP (RB perhaps))
                      (PP (IN with)
                        (NP
                          (NP (NN dim) (NNS hints))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN world))
                              (PP (IN of)
                                (NP
                                  (NP (NN humanity))
                                  (VP (VBN left)
                                    (ADVP (RB so) (RB far))
                                    (PP (IN above)
                                      (NP (PRP him)))))))))))))))))))
    (. .) ('' '')))

cc(prepared-41, But-2)
nsubj(said-6, he-5)
parataxis(prepared-41, said-6)
mark(come-12, if-9)
nsubj(come-12, we-10)
aux(come-12, have-11)
advcl(prepared-41, come-12)
prt(come-12, up-13)
det(animals-17, the-15)
amod(animals-17, lower-16)
prep_from(come-12, animals-17)
quantmod(million-21, a-20)
prep_through(come-12, million-21)
prep_of(million-21, kinds-23)
advmod(million-21, perhaps-25)
dobj(have-31, which-28)
nsubj(urge-34, which-28)
nn(I-30, theory-29)
nsubj(have-31, I-30)
prepc_against(million-21, have-31)
advmod(have-31, nothing-32)
aux(urge-34, to-33)
xcomp(have-31, urge-34)
advmod(prepared-41, then-36)
nsubjpass(prepared-41, I-37)
nsubj(believe-43, I-37)
auxpass(prepared-41, am-38)
advmod(than-40, more-39)
advmod(prepared-41, than-40)
root(ROOT-0, prepared-41)
aux(believe-43, to-42)
xcomp(prepared-41, believe-43)
mark(have-57, that-44)
det(man-46, the-45)
nsubj(do-50, man-46)
nsubj(have-57, man-46)
nsubj(go-59, man-46)
aux(do-50, does-48)
neg(do-50, not-49)
rcmod(man-46, do-50)
det(part-52, the-51)
dobj(do-50, part-52)
det(man-55, a-54)
prep_of(part-52, man-55)
aux(have-57, will-56)
ccomp(believe-43, have-57)
aux(go-59, to-58)
xcomp(have-57, go-59)
advmod(again-61, down-60)
advmod(go-59, again-61)
predet(stages-66, all-64)
det(stages-66, the-65)
prep_through(go-59, stages-66)
poss(being-69, his-68)
prep_of(stages-66, being-69)
det(position-73, a-72)
prep_to(prepared-41, position-73)
det(forms-77, the-75)
amod(forms-77, lowest-76)
prep_beyond(position-73, forms-77)
det(powers-80, the-79)
prep_of(forms-77, powers-80)
nsubj(misused-83, he-81)
nsubj(begin-87, he-81)
nsubj(rise-89, he-81)
aux(misused-83, has-82)
dep(powers-80, misused-83)
expl(begin-87, there-86)
dep(powers-80, begin-87)
conj_and(misused-83, begin-87)
aux(rise-89, to-88)
xcomp(begin-87, rise-89)
advmod(more-91, once-90)
advmod(rise-89, more-91)
vmod(powers-80, haunted-93)
advmod(haunted-93, perhaps-94)
nn(hints-97, dim-96)
prep_with(haunted-93, hints-97)
det(world-100, the-99)
prep_of(hints-97, world-100)
prep_of(world-100, humanity-102)
vmod(humanity-102, left-103)
advmod(far-105, so-104)
advmod(left-103, far-105)
prep_above(left-103, him-107)

(ROOT
  (S (`` ``)
    (VP (VB Bah))
    (. !)))

root(ROOT-0, Bah-2)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ 's)
          (NP
            (NP (DT the) (NN use))
            (PP (IN of)
              (S
                (VP (VBG bothering))))))))
    (. !)))

nsubj(use-4, What-1)
cop(use-4, 's-2)
det(use-4, the-3)
root(ROOT-0, use-4)
prepc_of(use-4, bothering-6)

(ROOT
  (S
    (VP (VB Rubbish))
    (. !) ('' '')))

root(ROOT-0, Rubbish-1)

(ROOT
  (S
    (VP (VBN cried)
      (NP (NNP George))
      (, ,)
      (PP (IN with)
        (NP (JJ rude) (NN jollity))))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, George-2)
amod(jollity-6, rude-5)
prep_with(cried-1, jollity-6)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP know)
        (ADVP
          (ADVP (RB as) (RB well))
          (SBAR (IN as)
            (S
              (NP (PRP I))
              (VP (VBP do)))))
        (, ,)
        (S
          (NP (NNP Mr.) (NNP Ingram)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (DT all) (NN bosh)))
    (. !)))

nsubj(know-3, You-2)
ccomp(bosh-16, know-3)
advmod(well-5, as-4)
mwe(well-5, as-4)
advmod(know-3, well-5)
mark(do-8, as-6)
nsubj(do-8, I-7)
advcl(well-5, do-8)
ccomp(well-5, do-8)
nn(Ingram-11, Mr.-10)
dep(know-3, Ingram-11)
nsubj(bosh-16, it-13)
cop(bosh-16, 's-14)
det(bosh-16, all-15)
root(ROOT-0, bosh-16)

(ROOT
  (S
    (S
      (NP (NNS Things))
      (VP (MD will)
        (VP (VB go)
          (PRT (RP on))
          (SBAR
            (SBAR (IN as)
              (S
                (NP (PRP they))
                (VP (VBP 're)
                  (VP (VBG doing)))))
            (, ,)
            (CC and)
            (SBAR (IN as)
              (S
                (NP (PRP they))
                (VP (VBP have)
                  (VP (VBN been)
                    (VP (VBG doing) (, ,)
                      (SBAR (IN till) (RB now)
                        (FRAG
                          (PP (IN from)
                            (NP (DT all) (NN eternity)))))))))))
          (: --)
          (SBAR
            (ADVP (RB so) (RB far))
            (IN as)
            (S
              (NP (PRP we))
              (VP (VBP know)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (ADJP (JJ enough)
          (PP (IN for)
            (NP (PRP us))))))
    (. .) ('' '')))

nsubj(go-3, Things-1)
aux(go-3, will-2)
root(ROOT-0, go-3)
prt(go-3, on-4)
mark(doing-8, as-5)
nsubj(doing-8, they-6)
aux(doing-8, 're-7)
advcl(go-3, doing-8)
mark(doing-15, as-11)
nsubj(doing-15, they-12)
aux(doing-15, have-13)
aux(doing-15, been-14)
advcl(go-3, doing-15)
conj_and(doing-8, doing-15)
mark(from-19, till-17)
advmod(from-19, now-18)
advcl(doing-15, from-19)
det(eternity-21, all-20)
pobj(from-19, eternity-21)
advmod(far-24, so-23)
advmod(know-27, far-24)
mark(know-27, as-25)
nsubj(know-27, we-26)
advcl(go-3, know-27)
parataxis(go-3, know-27)
nsubj(enough-32, that-30)
cop(enough-32, 's-31)
conj_and(go-3, enough-32)
prep_for(enough-32, us-34)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (MD will) (RB not)
      (VP (VB go)
        (PRT (RP on))
        (ADVP (RB so)
          (PP (IN for)
            (ADVP (RB long))))
        (PP (IN in)
          (NP
            (NP (PRP$ our) (NN sight))
            (, ,)
            (NP (NNP Mr.) (NNP Crawford))))))
    (. .)))

nsubj(go-5, They-2)
aux(go-5, will-3)
neg(go-5, not-4)
root(ROOT-0, go-5)
prt(go-5, on-6)
advmod(go-5, so-7)
prep(so-7, for-8)
pcomp(for-8, long-9)
poss(sight-12, our-11)
prep_in(go-5, sight-12)
nn(Crawford-15, Mr.-14)
appos(sight-12, Crawford-15)

(ROOT
  (S
    (NP (DT The) (NNS worms))
    (VP (MD will)
      (VP (VB have)
        (NP (DT a) (NN word)
          (S
            (VP (TO to)
              (VP (VB say)
                (PP (IN with)
                  (NP (PRP us)))))))))
    (. .) ('' '')))

det(worms-2, The-1)
nsubj(have-4, worms-2)
aux(have-4, will-3)
root(ROOT-0, have-4)
det(word-6, a-5)
dobj(have-4, word-6)
aux(say-8, to-7)
vmod(word-6, say-8)
prep_with(say-8, us-10)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD turned)
      (PRT (RP away)))
    (. .)))

nsubj(turned-2, Alexa-1)
root(ROOT-0, turned-2)
prt(turned-2, away-3)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP You))
        (VP (VBP 've) (RB not)
          (VP
            (VP (VBN given)
              (PRT (RP up))
              (NP (NN preaching)))
            (CC and)
            (VP (VBN taken)
              (PP (TO to)
                (NP
                  (NP (DT the) (JJ practical) (RB yet))
                  (, ,)
                  (NP (NNP Mr.) (NNP Ingram))))))))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VBP see))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP George))
    (. .)))

nsubj(given-5, You-2)
nsubj(taken-9, You-2)
aux(given-5, 've-3)
neg(given-5, not-4)
ccomp(said-22, given-5)
prt(given-5, up-6)
dobj(given-5, preaching-7)
conj_and(given-5, taken-9)
ccomp(said-22, taken-9)
prep(taken-9, to-10)
det(yet-13, the-11)
amod(yet-13, practical-12)
pobj(to-10, yet-13)
nn(Ingram-16, Mr.-15)
appos(yet-13, Ingram-16)
nsubj(see-19, I-18)
parataxis(given-5, see-19)
root(ROOT-0, said-22)
nsubj(said-22, George-23)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD laughed))
    (. .)))

nsubj(laughed-2, Andrew-1)
root(ROOT-0, laughed-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP flatter)
      (NP
        (NP (PRP myself))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP have) (RB not)
              (VP (VBN ceased)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ practical))))))))))
      (, ,)
      (S
        (NP (NNP Mr.) (NNP Crawford))))
    (. .)))

nsubj(flatter-3, I-2)
root(ROOT-0, flatter-3)
dobj(flatter-3, myself-4)
nsubj(ceased-8, I-5)
nsubj(practical-11, I-5)
aux(ceased-8, have-6)
neg(ceased-8, not-7)
rcmod(myself-4, ceased-8)
aux(practical-11, to-9)
cop(practical-11, be-10)
xcomp(ceased-8, practical-11)
nn(Crawford-14, Mr.-13)
dep(flatter-3, Crawford-14)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP are)
        (ADJP (JJ busy)
          (PP (IN with)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP see))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ busy)
          (ADVP (RB as) (RB well))
          (PP (IN with)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (VP (VB see)))))))))
    (: ;)
    (CC but)
    (S
      (NP (PDT all) (DT the) (NN time))
      (NP (PRP I))
      (VP (VBP believe)
        (SBAR
          (S
            (NP (PRP$ my) (NN farm))
            (VP (VBZ is)
              (PP (IN in)
                (NP
                  (NP
                    (ADJP (RB as) (JJ good))
                    (DT a) (NN state))
                  (PP (IN as)
                    (NP (PRP$ your) (NNS books))))))))))
    (. .) ('' '')))

nsubj(busy-3, You-1)
cop(busy-3, are-2)
root(ROOT-0, busy-3)
dobj(see-7, what-5)
nsubj(see-7, you-6)
prepc_with(busy-3, see-7)
nsubj(busy-12, I-10)
cop(busy-12, am-11)
conj_and(busy-3, busy-12)
advmod(well-14, as-13)
mwe(well-14, as-13)
advmod(busy-12, well-14)
dobj(see-20, what-16)
nsubj(see-20, I-17)
aux(see-20, do-18)
neg(see-20, n't-19)
prepc_with(busy-12, see-20)
predet(time-25, all-23)
det(time-25, the-24)
nsubj(believe-27, time-25)
nsubj(believe-27, I-26)
conj_but(busy-3, believe-27)
poss(farm-29, my-28)
nsubj(is-30, farm-29)
ccomp(believe-27, is-30)
advmod(good-33, as-32)
amod(state-35, good-33)
det(state-35, a-34)
prep_in(is-30, state-35)
poss(books-38, your-37)
prep_as(state-35, books-38)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD gave)
        (NP (DT a) (NN start)))
      (, ,)
      (CC and)
      (VP (VBD stole)
        (NP (DT a) (NN look))
        (PP (IN at)
          (NP (DT the) (JJ young) (NN farmer))))
      (, ,)
      (CC but)
      (VP (VBD was)
        (ADJP (VBN satisfied)
          (SBAR
            (S
              (NP (PRP he))
              (`` ``)
              (VP (VBD meant)
                (NP (NN nothing))))))))
    (. .) ('' '')))

nsubj(gave-2, George-1)
nsubj(stole-7, George-1)
nsubjpass(satisfied-17, George-1)
root(ROOT-0, gave-2)
det(start-4, a-3)
dobj(gave-2, start-4)
conj_and(gave-2, stole-7)
det(look-9, a-8)
dobj(stole-7, look-9)
det(farmer-13, the-11)
amod(farmer-13, young-12)
prep_at(stole-7, farmer-13)
auxpass(satisfied-17, was-16)
conj_but(gave-2, satisfied-17)
nsubj(meant-20, he-18)
ccomp(satisfied-17, meant-20)
dobj(meant-20, nothing-21)

(ROOT
  (S
    (NP (DT The) (NN self-seeker))
    (VP (MD will)
      (VP (VB walk)
        (PP (IN into)
          (S
            (NP (DT the) (JJ very) (NNS abyss))
            (VP
              (VP (VBG protesting)
                (S
                  (NP (PRP himself))
                  (NP (DT a) (JJ practical) (NN man))))
              (, ,)
              (CC and)
              (VP (VBG counting)
                (S
                  (NP (PRP him))
                  (ADJP (JJ unpractical))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (MD will) (RB not)))))))))
        (SBAR (IN with)
          (S
            (NP (PRP him))
            (`` ``)
            (VP (VBP jump)
              (S
                (NP (DT the) (NN life))
                (VP (TO to)
                  (VP (VB come)))))))))
    (. .) ('' '')))

det(self-seeker-2, The-1)
nsubj(walk-4, self-seeker-2)
aux(walk-4, will-3)
root(ROOT-0, walk-4)
det(abyss-8, the-6)
amod(abyss-8, very-7)
nsubj(protesting-9, abyss-8)
nsubj(counting-16, abyss-8)
prepc_into(walk-4, protesting-9)
nsubj(man-13, himself-10)
det(man-13, a-11)
amod(man-13, practical-12)
xcomp(protesting-9, man-13)
prepc_into(walk-4, counting-16)
conj_and(protesting-9, counting-16)
nsubj(will-20, him-17)
dep(will-20, unpractical-18)
nsubj(will-20, who-19)
xcomp(counting-16, will-20)
neg(will-20, not-21)
mark(jump-25, with-22)
nsubj(jump-25, him-23)
advcl(walk-4, jump-25)
det(life-27, the-26)
dobj(jump-25, life-27)
nsubj(come-29, life-27)
aux(come-29, to-28)
xcomp(jump-25, come-29)

(ROOT
  (S
    (ADVP (RB Himself))
    (, ,)
    (NP (PRP he))
    (VP
      (VP
        (ADVP (RB neither))
        (VBZ measures)
        (NP (DT the) (NN width)))
      (CC nor)
      (VP (VBZ questions)
        (NP (PRP$ his) (NN muscle))))
    (. .)))

advmod(measures-5, Himself-1)
nsubj(measures-5, he-3)
nsubj(questions-9, he-3)
advmod(measures-5, neither-4)
root(ROOT-0, measures-5)
det(width-7, the-6)
dobj(measures-5, width-7)
conj_nor(measures-5, questions-9)
poss(muscle-11, his-10)
dobj(questions-9, muscle-11)

(ROOT
  (NP (NNP CHAPTER) (NNP XXI) (. .)))

nn(XXI-2, CHAPTER-1)
root(ROOT-0, XXI-2)

(ROOT
  (SBARQ
    (WHNP (WDT WHAT) (NN IS))
    (SQ
      (NP (PRP IT))
      (VP (VB WORTH)))
    (. ?)))

det(IS-2, WHAT-1)
dobj(WORTH-4, IS-2)
nsubj(WORTH-4, IT-3)
root(ROOT-0, WORTH-4)

(ROOT
  (S
    (NP (NNP Andrew))
    (, ,)
    (PP (IN with)
      (NP (PDT all) (PRP$ his) (JJ hard) (NN work)))
    (, ,)
    (ADVP
      (ADVP (RBR harder))
      (SBAR (IN since)
        (S
          (NP (NNP Sandy))
          (VP (VBD went)))))
    (, ,)
    (VP (VBD continued)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB write)))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP
            (VP
              (ADVP (RB neither))
              (VBD sought)
              (NP (NN company)))
            (CC nor)
            (VP (VBD drank)
              (NP (JJ strong) (NN drink)))
            (, ,)
            (CC and)
            (VP (VBD was)
              (NP
                (NP (DT the) (NN sport))
                (PP (IN of)
                  (NP (DT no) (NN passion)))))))))
    (. .)))

nsubj(continued-14, Andrew-1)
predet(work-7, all-4)
poss(work-7, his-5)
amod(work-7, hard-6)
prep_with(continued-14, work-7)
advmod(continued-14, harder-9)
mark(went-12, since-10)
nsubj(went-12, Sandy-11)
advcl(harder-9, went-12)
root(ROOT-0, continued-14)
acomp(continued-14, able-15)
aux(write-17, to-16)
xcomp(able-15, write-17)
mark(sought-22, for-19)
nsubj(sought-22, he-20)
nsubj(drank-25, he-20)
advmod(sought-22, neither-21)
advcl(continued-14, sought-22)
dobj(sought-22, company-23)
advcl(continued-14, drank-25)
conj_nor(sought-22, drank-25)
amod(drink-27, strong-26)
dobj(drank-25, drink-27)
cop(sport-32, was-30)
det(sport-32, the-31)
advcl(continued-14, sport-32)
conj_and(sought-22, sport-32)
neg(passion-35, no-34)
prep_of(sport-32, passion-35)

(ROOT
  (S
    (PP (IN From)
      (ADJP (JJ threatened)))
    (VP (VBD inroad)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD appealed)
            (PP (TO to)
              (NP
                (NP (PRP Him))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD created)
                      (S
                        (VP (TO to)
                          (VP
                            (VP (VB lift)
                              (NP (PRP$ His) (NN child))
                              (PP (IN above)
                                (NP (DT the) (NN torrent))))
                            (, ,)
                            (CC and)
                            (VP (VB make)
                              (NP (NN impulse)))))))))))))))
    (NP
      (NP (DT the) (NN slave))
      (PP (IN of)
        (NP (NN conscience)
          (CC and)
          (NN manhood))))
    (. .)))

prep_from(inroad-3, threatened-2)
root(ROOT-0, inroad-3)
nsubj(appealed-5, he-4)
ccomp(inroad-3, appealed-5)
prep_to(appealed-5, Him-7)
nsubj(created-9, Him-7)
nsubj(lift-11, Him-7)
nsubj(make-19, Him-7)
rcmod(Him-7, created-9)
aux(lift-11, to-10)
xcomp(created-9, lift-11)
poss(child-13, His-12)
dobj(lift-11, child-13)
det(torrent-16, the-15)
prep_above(lift-11, torrent-16)
xcomp(created-9, make-19)
conj_and(lift-11, make-19)
dobj(make-19, impulse-20)
det(slave-22, the-21)
dep(inroad-3, slave-22)
prep_of(slave-22, conscience-24)
prep_of(slave-22, manhood-26)
conj_and(conscience-24, manhood-26)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP
        (NP (DT no) (NNS demons))
        (VP (VBG riding)
          (NP
            (NP (DT the) (NNS whirlwinds))
            (PP (IN of)
              (NP (PRP$ his) (NN soul)))))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
neg(demons-4, no-3)
nsubj(were-2, demons-4)
vmod(demons-4, riding-5)
det(whirlwinds-7, the-6)
dobj(riding-5, whirlwinds-7)
poss(soul-10, his-9)
prep_of(whirlwinds-7, soul-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (ADJP (JJ wonderful))
      (SBAR
        (SBAR
          (ADVP (RB then))
          (IN that)
          (S
            (NP (PRP he))
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB write)
                        (NP (DT a) (NN book))))))))))
        (, ,)
        (CC or)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN book))
            (VP (MD should)
              (VP (VB be)
                (PP (IN of)
                  (NP (JJ genuine)
                    (CC and)
                    (JJ original) (NN worth)))))))))
    (. .)))

nsubj(wonderful-4, It-1)
cop(wonderful-4, is-2)
neg(wonderful-4, not-3)
root(ROOT-0, wonderful-4)
advmod(able-10, then-5)
mark(able-10, that-6)
nsubj(able-10, he-7)
nsubj(write-12, he-7)
aux(able-10, should-8)
cop(able-10, be-9)
ccomp(wonderful-4, able-10)
aux(write-12, to-11)
xcomp(able-10, write-12)
det(book-14, a-13)
dobj(write-12, book-14)
mark(be-21, that-17)
det(book-19, the-18)
nsubj(be-21, book-19)
aux(be-21, should-20)
ccomp(wonderful-4, be-21)
conj_or(able-10, be-21)
amod(worth-26, genuine-23)
conj_and(genuine-23, original-25)
amod(worth-26, original-25)
prep_of(be-21, worth-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD had)
      (NP (DT the) (NN fortune)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP
                (ADJP (`` ``) (RB favorably) ('' '') (JJR reviewed))
                (, ,)
                (ADJP (JJ scarce))
                (NP (CD one)))
              (PP (IN of)
                (NP
                  (NP (DT those))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBN reviewed)
                        (S
                          (NP (PRP it))
                          (VP (VBG understanding)
                            (NP (PRP it)))))))))))))
      (, ,)
      (SBAR (IN while)
        (S
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (PRP them))))
          (VP (VBD seemed)
            (PP (TO to)
              (NP (PRP themselves)))
            (S
              (VP (TO to)
                (VP (VB understand)
                  (NP (PRP it))
                  (ADVP (RB perfectly)))))))))
    (. .)))

nsubj(had-2, It-1)
root(ROOT-0, had-2)
det(fortune-4, the-3)
dobj(had-2, fortune-4)
aux(reviewed-10, to-5)
cop(reviewed-10, be-6)
advmod(reviewed-10, favorably-8)
vmod(fortune-4, reviewed-10)
dep(reviewed-10, scarce-12)
dep(reviewed-10, one-13)
prep_of(reviewed-10, those-15)
nsubj(reviewed-17, those-15)
rcmod(those-15, reviewed-17)
nsubj(understanding-19, it-18)
dep(reviewed-17, understanding-19)
dobj(understanding-19, it-20)
mark(seemed-26, while-22)
nsubj(seemed-26, all-23)
nsubj(understand-30, all-23)
prep_of(all-23, them-25)
advcl(had-2, seemed-26)
prep_to(seemed-26, themselves-28)
aux(understand-30, to-29)
xcomp(seemed-26, understand-30)
dobj(understand-30, it-31)
advmod(understand-30, perfectly-32)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mention)
      (NP (DT the) (NN thing))
      (SBAR (IN because)
        (PRN (, ,)
          (SINV (VBD had)
            (NP (DT the) (NN book))
            (RB not)
            (VP (VBN been)
              (VP
                (ADVP (RB thus))
                (VBN reviewed))))
          (, ,))
        (S
          (NP (NNP Alexa))
          (VP (MD would) (RB not)
            (VP (VB have)
              (VP
                (VP (VBN bought)
                  (NP (DT a) (NN copy)))
                (, ,)
                (CC or)
                (VP (VBN been)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB admire)
                          (NP (PRP it)))))))))))))
    (. .)))

nsubj(mention-2, I-1)
root(ROOT-0, mention-2)
det(thing-4, the-3)
dobj(mention-2, thing-4)
mark(bought-19, because-5)
aux(reviewed-13, had-7)
det(book-9, the-8)
nsubjpass(reviewed-13, book-9)
dep(reviewed-13, not-10)
auxpass(reviewed-13, been-11)
advmod(reviewed-13, thus-12)
dep(bought-19, reviewed-13)
nsubj(bought-19, Alexa-15)
nsubj(able-25, Alexa-15)
nsubj(admire-27, Alexa-15)
aux(bought-19, would-16)
neg(bought-19, not-17)
aux(bought-19, have-18)
advcl(mention-2, bought-19)
det(copy-21, a-20)
dobj(bought-19, copy-21)
cop(able-25, been-24)
advcl(mention-2, able-25)
conj_or(bought-19, able-25)
aux(admire-27, to-26)
xcomp(able-25, admire-27)
dobj(admire-27, it-28)

(ROOT
  (S
    (NP
      (NP (DT The) (NN review))
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD read)))))
    (VP (VBD was)
      (PP (IN in)
        (NP
          (NP (DT a) (NN paper))
          (SBAR
            (WHNP (WP$ whose) (NNS editor))
            (S
              (VP (MD would) (RB not)
                (VP (VB have)
                  (VP (VBN admitted)
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBD had)
                          (S
                            (S
                              (NP (PRP he))
                              (VP (VBD suspected)
                                (NP
                                  (NP (DT the) (NN drift))
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (NP (DT the) (NN reviewer))
                                      (VP (VBD had)
                                        (VP (VBN failed)
                                          (S
                                            (VP (TO to)
                                              (VP (VB see)))))))))))
                            (: ;)
                            (CC and)
                            (S
                              (NP
                                (NP (DT the) (NNS passages))
                                (VP (VBN quoted)))
                              (VP (VBD appealed)
                                (PP (TO to)
                                  (NP
                                    (NP (NNP Alexa))
                                    (PP (IN in)
                                      (NP (NN virtue)))))
                                (, ,)
                                (ADVP (RB partly)))))))))))))
          (, ,)
          (PP (IN of)
            (NP
              (NP
                (NP (PRP$ her) (RB not) (JJ seeing) (NN half))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBD involved)))))
              (, ,)
              (CC or)
              (NP
                (NP (NN anything) (NNS whatever))
                (PP (IN of)
                  (NP (DT the) (VBN said) (NN drift)))))))))
    (. .)))

det(review-2, The-1)
nsubj(was-5, review-2)
nsubj(read-4, she-3)
rcmod(review-2, read-4)
root(ROOT-0, was-5)
det(paper-8, a-7)
prep_in(was-5, paper-8)
poss(editor-10, paper-8)
nsubj(admitted-14, editor-10)
aux(admitted-14, would-11)
neg(admitted-14, not-12)
aux(admitted-14, have-13)
rcmod(paper-8, admitted-14)
nsubj(had-16, it-15)
ccomp(admitted-14, had-16)
nsubj(suspected-18, he-17)
dep(had-16, suspected-18)
det(drift-20, the-19)
dobj(suspected-18, drift-20)
dobj(failed-25, drift-20)
nsubj(see-27, drift-20)
det(reviewer-23, the-22)
nsubj(failed-25, reviewer-23)
aux(failed-25, had-24)
rcmod(drift-20, failed-25)
aux(see-27, to-26)
xcomp(failed-25, see-27)
det(passages-31, the-30)
nsubj(appealed-33, passages-31)
vmod(passages-31, quoted-32)
dep(had-16, appealed-33)
conj_and(suspected-18, appealed-33)
prep_to(appealed-33, Alexa-35)
prep_in(Alexa-35, virtue-37)
advmod(appealed-33, partly-39)
poss(half-45, her-42)
neg(half-45, not-43)
amod(half-45, seeing-44)
prep_of(paper-8, half-45)
nsubj(involved-47, they-46)
rcmod(half-45, involved-47)
nn(whatever-51, anything-50)
prep_of(paper-8, whatever-51)
conj_or(half-45, whatever-51)
det(drift-55, the-53)
amod(drift-55, said-54)
prep_of(whatever-51, drift-55)

(ROOT
  (S (CC But)
    (SBAR
      (SBAR (IN because)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN got)
              (NP
                (NP (DT a) (NN book))
                (VP (VBN published)))))))
      (, ,)
      (CC and)
      (SBAR (IN because)
        (S
          (NP (PRP she))
          (VP (VBD approved)
            (PP (IN of)
              (NP (JJ certain) (NNS lines) (, ,) (NNS phrases)
                (CC and)
                (NNS passages)))
            (PP (IN in)
              (NP (PRP it))))))
      (: ;)
      (CC but)
      (SBAR
        (ADVP (RB chiefly))
        (IN because)
        (S
          (NP (PRP it))
          (VP (VBD had)
            (VP (VBN been)
              (VP (VBN praised)
                (PP (IN by)
                  (NP
                    (QP (JJR more) (IN than) (CD one))
                    (JJ influential) (NN paper)))))))))
    (, ,)
    (NP (NNP Andrew))
    (VP (VBD rose)
      (ADJP (RB immensely)
        (PP (IN in)
          (NP
            (NP (NNP Alexa) (POS 's))
            (NN opinion)))))
    (. .)))

cc(rose-39, But-1)
mark(got-5, because-2)
nsubj(got-5, he-3)
aux(got-5, had-4)
advcl(rose-39, got-5)
det(book-7, a-6)
dobj(got-5, book-7)
vmod(book-7, published-8)
mark(approved-13, because-11)
nsubj(approved-13, she-12)
conj_and(got-5, approved-13)
advcl(rose-39, approved-13)
amod(lines-16, certain-15)
prep_of(approved-13, lines-16)
prep_of(approved-13, phrases-18)
conj_and(lines-16, phrases-18)
prep_of(approved-13, passages-20)
conj_and(lines-16, passages-20)
prep_in(approved-13, it-22)
advmod(praised-30, chiefly-25)
mark(praised-30, because-26)
nsubjpass(praised-30, it-27)
aux(praised-30, had-28)
auxpass(praised-30, been-29)
conj_but(got-5, praised-30)
advcl(rose-39, praised-30)
mwe(than-33, more-32)
quantmod(one-34, than-33)
num(paper-36, one-34)
amod(paper-36, influential-35)
agent(praised-30, paper-36)
nsubj(rose-39, Andrew-38)
root(ROOT-0, rose-39)
acomp(rose-39, immensely-40)
poss(opinion-44, Alexa-42)
prep_in(immensely-40, opinion-44)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD was)
            (NP
              (NP (DT the) (NN son))
              (PP (IN of)
                (NP (DT a) (NN tenant)))))
          (, ,)
          (VP (VBD was)
            (ADVP (RB even)
              (NP (DT a) (NN laborer)))
            (PP (IN on)
              (NP (PRP$ his) (NN farm))))
          (, ,)
          (CC and)
          (VP (VBD had)
            (VP (VBN covered)
              (NP (DT a) (NN birth))
              (ADVP (DT no) (JJR higher))
              (PP (IN than)
                (NP
                  (NP (DT that))
                  (PP (IN of)
                    (NP
                      (NP (NNP Jesus) (NNP Christ))
                      (PP (IN with)
                        (NP
                          (NP (DT the) (NN gown))
                          (PP (IN of)
                            (NP (DT no) (NN university))))))))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD began) (, ,)
      (PP (IN against)
        (NP
          (NP (PRP$ her) (JJ own) (NN sense))
          (PP (IN of)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD was)
                  (ADJP (JJ fit))
                  (, ,)
                  (S
                    (VP (TO to)
                      (VP (VB look)
                        (PRT (RP up))
                        (PP (TO to)
                          (NP (DT the) (NN plow-man)))))))))))))
    (. .)))

mark(son-5, Although-1)
nsubj(son-5, he-2)
nsubj(was-10, he-2)
nsubj(covered-20, he-2)
cop(son-5, was-3)
det(son-5, the-4)
advcl(began-38, son-5)
det(tenant-8, a-7)
prep_of(son-5, tenant-8)
conj_and(son-5, was-10)
advcl(began-38, was-10)
advmod(was-10, even-11)
det(laborer-13, a-12)
pobj(even-11, laborer-13)
poss(farm-16, his-15)
prep_on(was-10, farm-16)
aux(covered-20, had-19)
conj_and(son-5, covered-20)
advcl(began-38, covered-20)
det(birth-22, a-21)
dobj(covered-20, birth-22)
neg(higher-24, no-23)
advmod(covered-20, higher-24)
prep_than(covered-20, that-26)
nn(Christ-29, Jesus-28)
prep_of(that-26, Christ-29)
det(gown-32, the-31)
prep_with(Christ-29, gown-32)
neg(university-35, no-34)
prep_of(gown-32, university-35)
nsubj(began-38, she-37)
root(ROOT-0, began-38)
poss(sense-43, her-41)
amod(sense-43, own-42)
prep_against(began-38, sense-43)
nsubj(fit-47, what-45)
nsubj(look-50, what-45)
cop(fit-47, was-46)
prepc_of(sense-43, fit-47)
aux(look-50, to-49)
xcomp(fit-47, look-50)
prt(look-50, up-51)
det(plow-man-54, the-53)
prep_to(look-50, plow-man-54)

(ROOT
  (S
    (NP (DT The) (NN plow-man))
    (VP
      (VP (VBD was)
        (ADJP (RB not) (JJ aware))
        (PP (IN of)
          (NP (DT this))))
      (, ,)
      (CC and)
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (ADJP (JJ careless)
              (SBAR
                (SINV (VBD had)
                  (NP (PRP he))
                  (VP (VBN been)))))))))
    (. .)))

det(plow-man-2, The-1)
nsubj(aware-5, plow-man-2)
nsubj(careless-13, plow-man-2)
cop(aware-5, was-3)
neg(aware-5, not-4)
root(ROOT-0, aware-5)
prep_of(aware-5, this-7)
aux(careless-13, would-10)
aux(careless-13, have-11)
cop(careless-13, been-12)
conj_and(aware-5, careless-13)
aux(been-16, had-14)
nsubj(been-16, he-15)
dep(careless-13, been-16)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD respected)
          (NP
            (NP (PRP$ his) (NN landlord) (POS 's))
            (NN daughter)))
        (, ,) (RB not)
        (VP
          (ADVP (RB ever))
          (VBD questioned)
          (NP (PRP$ her) (NN superiority))
          (PP (IN as)
            (NP
              (NP (DT a) (NN lady))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP he))
                  (VP (VBD made)
                    (NP (DT no) (NN claim))
                    (PP (TO to)
                      (S
                        (VP (VBG being)
                          (NP (DT a) (NN gentleman)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD recognized)
        (PP (IN in)
          (NP (PRP her)))
        (NP (DT no) (NN power)
          (S
            (VP (DT either)
              (VP (TO to)
                (VP (VB help)))
              (CC or)
              (VP (TO to)
                (VP (VB hurt))))))))
    (. .)))

nsubj(respected-2, He-1)
root(ROOT-0, respected-2)
poss(landlord-4, his-3)
poss(daughter-6, landlord-4)
dobj(respected-2, daughter-6)
neg(questioned-10, not-8)
advmod(questioned-10, ever-9)
dep(respected-2, questioned-10)
poss(superiority-12, her-11)
dobj(questioned-10, superiority-12)
det(lady-15, a-14)
prep_as(questioned-10, lady-15)
advmod(made-18, where-16)
nsubj(made-18, he-17)
rcmod(lady-15, made-18)
neg(claim-20, no-19)
dobj(made-18, claim-20)
cop(gentleman-24, being-22)
det(gentleman-24, a-23)
prepc_to(made-18, gentleman-24)
nsubj(recognized-28, he-27)
conj_but(respected-2, recognized-28)
prep_in(recognized-28, her-30)
neg(power-32, no-31)
dobj(recognized-28, power-32)
preconj(help-35, either-33)
aux(help-35, to-34)
dep(power-32, help-35)
aux(hurt-38, to-37)
dep(power-32, hurt-38)
conj_or(help-35, hurt-38)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (ADVP (RB next))
        (VP (VBD met))))
    (, ,)
    (NP (NNP Alexa))
    (VP
      (VP (VBD was)
        (ADJP
          (ADVP (RB no) (RBR longer))
          (JJ indifferent))
        (PP (TO to)
          (NP (PRP$ his) (NN presence))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB even))
        (VBD made)
        (NP
          (NP (DT a) (NN movement))
          (PP (IN in)
            (NP
              (NP (DT the) (NN direction))
              (PP (IN of)
                (S
                  (VP (VBG being)
                    (ADJP (JJ agreeable)
                      (PP (TO to)
                        (NP (PRP him))))))))))))
    (. .)))

advmod(met-4, When-1)
nsubj(met-4, they-2)
advmod(met-4, next-3)
advcl(indifferent-10, met-4)
nsubj(indifferent-10, Alexa-6)
nsubj(made-17, Alexa-6)
cop(indifferent-10, was-7)
neg(longer-9, no-8)
advmod(indifferent-10, longer-9)
root(ROOT-0, indifferent-10)
poss(presence-13, his-12)
prep_to(indifferent-10, presence-13)
advmod(made-17, even-16)
conj_and(indifferent-10, made-17)
det(movement-19, a-18)
dobj(made-17, movement-19)
det(direction-22, the-21)
prep_in(movement-19, direction-22)
cop(agreeable-25, being-24)
prepc_of(direction-22, agreeable-25)
prep_to(agreeable-25, him-27)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD dropped)
        (PP (IN in)
          (NP (DT a) (NN measure)))
        (, ,)
        (PP (IN without)
          (S
            (VP (VBG knowing)
              (SBAR
                (S
                  (NP (PRP she))
                  (VP
                    (VP (VBD had)
                      (VP
                        (ADVP (RB ever))
                        (VBN used)
                        (NP
                          (NP (PRP it))
                          (, ,)
                          (NP (PRP$ her)
                            (ADJP (VBG patronizing))
                            (NN carriage)))))
                    (, ,)
                    (CC but)
                    (VP (VBD had)
                      (NP (DT the) (NN assurance)
                        (S
                          (VP (TO to)
                            (VP (VB compliment)
                              (NP (PRP him))
                              (PP
                                (CONJP (RB not) (RB merely))
                                (PP (IN on)
                                  (NP
                                    (NP (DT the) (NN poem))
                                    (SBAR
                                      (S
                                        (NP (PRP he))
                                        (VP (VBD had)
                                          (VP (VBN written)))))))
                                (, ,)
                                (CC but)
                                (PP (IN on)
                                  (NP
                                    (NP (DT the) (NN way))
                                    (SBAR
                                      (S
                                        (NP (PRP it))
                                        (VP (VBD had)
                                          (VP (VBN been)
                                            (VP (VBN received))))))))))))))))))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (MD could) (RB not)
        (VP (VB have)
          (VP (VBN credited) (, ,)
            (SBAR
              (SBAR (VBD had)
                (S
                  (NP (PRP he))
                  (VP (VBD told)
                    (NP (PRP her))
                    (, ,)
                    (SBAR (IN that)
                      (S
                        (NP (PRP he))
                        (VP (VBD was)
                          (ADJP (RB as) (JJ indifferent)
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN praise)
                                  (CC or)
                                  (NN blame))
                                (PP (IN of)
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (VP (VBZ is)
                                        (VP (VBN called)
                                          (NP (DT the) (NN public))))))))))))))))
              (, ,)
              (CONJP (RB as) (IN if))
              (SBAR (IN that)
                (S
                  (NP (NN public))
                  (VP (VBD were)
                    (ADVP (RB indeed))))))
            (: --)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (ADVP (RBS most))
                  (PP (IN like) (: --)
                    (S
                      (NP (DT a) (NN boy))
                      (ADVP (RB just))
                      (VP (VBG learning)
                        (S
                          (VP (TO to)
                            (VP (VB read))))))))))))))
    (. .)))

nsubj(dropped-2, She-1)
root(ROOT-0, dropped-2)
det(measure-5, a-4)
prep_in(dropped-2, measure-5)
prepc_without(dropped-2, knowing-8)
nsubj(used-12, she-9)
nsubj(had-20, she-9)
aux(used-12, had-10)
advmod(used-12, ever-11)
ccomp(knowing-8, used-12)
dobj(used-12, it-13)
poss(carriage-17, her-15)
amod(carriage-17, patronizing-16)
appos(it-13, carriage-17)
ccomp(knowing-8, had-20)
conj_but(used-12, had-20)
det(assurance-22, the-21)
dobj(had-20, assurance-22)
aux(compliment-24, to-23)
vmod(assurance-22, compliment-24)
dobj(compliment-24, him-25)
neg(merely-27, not-26)
preconj(compliment-24, merely-27)
det(poem-30, the-29)
prep_on(compliment-24, poem-30)
nsubj(written-33, he-31)
aux(written-33, had-32)
rcmod(poem-30, written-33)
det(way-38, the-37)
prep_on(compliment-24, way-38)
conj_but(poem-30, way-38)
nsubjpass(received-42, it-39)
aux(received-42, had-40)
auxpass(received-42, been-41)
rcmod(way-38, received-42)
nsubj(credited-48, she-44)
aux(credited-48, could-45)
neg(credited-48, not-46)
aux(credited-48, have-47)
parataxis(dropped-2, credited-48)
dep(told-52, had-50)
nsubj(told-52, he-51)
ccomp(credited-48, told-52)
dobj(told-52, her-53)
mark(indifferent-59, that-55)
nsubj(indifferent-59, he-56)
cop(indifferent-59, was-57)
advmod(indifferent-59, as-58)
ccomp(told-52, indifferent-59)
det(praise-62, the-61)
prep_to(indifferent-59, praise-62)
prep_to(indifferent-59, blame-64)
conj_or(praise-62, blame-64)
nsubjpass(called-68, what-66)
auxpass(called-68, is-67)
prepc_of(praise-62, called-68)
det(public-70, the-69)
dobj(called-68, public-70)
mark(were-76, that-74)
nsubj(were-76, public-75)
ccomp(credited-48, were-76)
conj_as(told-52, were-76)
advmod(were-76, indeed-77)
dobj(is-81, what-79)
nsubj(is-81, it-80)
ccomp(credited-48, is-81)
parataxis(credited-48, is-81)
advmod(is-81, most-82)
prep(is-81, like-83)
det(boy-86, a-85)
nsubj(learning-88, boy-86)
nsubj(read-90, boy-86)
advmod(learning-88, just-87)
dep(like-83, learning-88)
aux(read-90, to-89)
xcomp(learning-88, read-90)

(ROOT
  (S (CC Yet)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN consent))
        (PP (IN of)
          (NP
            (NP (PDT such) (DT a) (NN public))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ makes)
                  (NP
                    (NP (DT the) (JJ very) (NN essence))
                    (PP (IN of)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (VP (VBZ is)
                            (VP (VBN called)
                              (NP (NN fame)))))))))))))))
    (. .)))

cc(consent-5, Yet-1)
nsubj(consent-5, it-2)
cop(consent-5, is-3)
det(consent-5, the-4)
root(ROOT-0, consent-5)
predet(public-9, such-7)
det(public-9, a-8)
prep_of(consent-5, public-9)
nsubj(makes-11, public-9)
rcmod(public-9, makes-11)
det(essence-14, the-12)
amod(essence-14, very-13)
dobj(makes-11, essence-14)
nsubjpass(called-18, what-16)
auxpass(called-18, is-17)
prepc_of(essence-14, called-18)
dobj(called-18, fame-19)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD should)
      (NP (DT a) (NN man))
      (VP (VB care)
        (PP (IN for)
          (NP
            (NP (PRP it))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ knows)
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (VBZ is)
                        (PP (IN on)
                          (NP (PRP$ his) (NN way)
                            (S
                              (VP (TO to)
                                (VP (VB join)
                                  (NP (PRP$ his) (NNS peers)))))))))))))))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT a) (NN child))
                (PP (IN with)
                  (NP
                    (NP (DT the) (JJ great) (NNS ones))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN earth))
                        (, ,)
                        (NP
                          (NP (DT the) (NNS lovers))
                          (PP (IN of)
                            (NP (DT the) (NN truth))))
                        (, ,)
                        (NP
                          (NP (DT the) (NNPS Doers))
                          (PP (IN of)
                            (NP (DT the) (NNP Will))))))))))))))
    (. .)))

advmod(care-5, How-1)
aux(care-5, should-2)
det(man-4, a-3)
nsubj(care-5, man-4)
nsubj(child-24, man-4)
root(ROOT-0, care-5)
prep_for(care-5, it-7)
nsubj(knows-9, it-7)
rcmod(it-7, knows-9)
mark(is-12, that-10)
nsubj(is-12, he-11)
ccomp(knows-9, is-12)
poss(way-15, his-14)
prep_on(is-12, way-15)
aux(join-17, to-16)
vmod(way-15, join-17)
poss(peers-19, his-18)
dobj(join-17, peers-19)
aux(child-24, to-21)
cop(child-24, be-22)
det(child-24, a-23)
xcomp(care-5, child-24)
det(ones-28, the-26)
amod(ones-28, great-27)
prep_with(child-24, ones-28)
det(earth-31, the-30)
prep_of(ones-28, earth-31)
det(lovers-34, the-33)
appos(earth-31, lovers-34)
det(truth-37, the-36)
prep_of(lovers-34, truth-37)
det(Doers-40, the-39)
appos(earth-31, Doers-40)
det(Will-43, the-42)
prep_of(Doers-40, Will-43)

(ROOT
  (S
    (S
      (X (WP What))
      (X (TO to))
      (NP (PRP him))
      (VP (MD will)
        (VP (VB be)
          (NP
            (NP (DT the) (NN wind))
            (PP (IN of)
              (NP (DT the) (NN world)))))))
    (NP (PRP he))
    (VP (VBZ has)
      (VP (VBN left)
        (ADVP (RB behind))
        (, ,)
        (NP
          (NP (DT a) (NN wind))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can) (RB not)
                (VP (VB arouse)
                  (NP
                    (NP (DT the) (NN dead))
                    (, ,)
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (MD can)
                          (ADVP (RB only))
                          (VP (VB blow)
                            (PP (IN about)
                              (NP
                                (NP (DT the) (NNS grave-clothes))
                                (PP (IN of)
                                  (NP (DT the) (NN dead)))))
                            (SBAR (IN as)
                              (S
                                (NP (PRP they))
                                (VP (VBP bury)
                                  (NP (PRP$ their) (NN dead)))))))))))))))))
    (. .)))

dep(wind-7, What-1)
dep(wind-7, to-2)
nsubj(wind-7, him-3)
aux(wind-7, will-4)
cop(wind-7, be-5)
det(wind-7, the-6)
dep(left-13, wind-7)
det(world-10, the-9)
prep_of(wind-7, world-10)
nsubj(left-13, he-11)
aux(left-13, has-12)
root(ROOT-0, left-13)
advmod(left-13, behind-14)
det(wind-17, a-16)
dobj(left-13, wind-17)
nsubj(arouse-21, wind-17)
aux(arouse-21, can-19)
neg(arouse-21, not-20)
rcmod(wind-17, arouse-21)
det(dead-23, the-22)
dobj(arouse-21, dead-23)
nsubj(blow-28, dead-23)
aux(blow-28, can-26)
advmod(blow-28, only-27)
rcmod(dead-23, blow-28)
det(grave-clothes-31, the-30)
prep_about(blow-28, grave-clothes-31)
det(dead-34, the-33)
prep_of(grave-clothes-31, dead-34)
mark(bury-37, as-35)
nsubj(bury-37, they-36)
advcl(blow-28, bury-37)
poss(dead-39, their-38)
dobj(bury-37, dead-39)

(ROOT
  (S
    (S
      (NP (`` ``)
        (NP (NNP Live) (, ,) (NNP Dawtie))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (NNP Andrew))
        (PP (TO to)
          (NP (DT the) (NN girl)))))
    (, ,) (`` ``)
    (CC and)
    (S
      (NP (JJ ane) (NN day))
      (NP (PRP ye))
      (VP (MD 'll)
        (VP (VB hae)
          (NP
            (NP
              (NP (JJ yer) (NN hert) (POS 's))
              (NN desire))
            (: ;)
            (SBAR (IN for)
              (S (`` `)
                (NP (NNP Blessed))
                (VP (VBP are)
                  (NP (PRP they)
                    (NP
                      (NP (DT that) (NN hunger)
                        (CC and)
                        (NN thirst))
                      (PP (IN after)
                        (NP (NNS righteousness))))))))))))
    (. .) ('' ') ('' '')))

nn(Dawtie-4, Live-2)
nsubj(said-7, Dawtie-4)
root(ROOT-0, said-7)
dobj(said-7, Andrew-8)
det(girl-11, the-10)
prep_to(said-7, girl-11)
amod(day-16, ane-15)
tmod(hae-19, day-16)
nsubj(hae-19, ye-17)
aux(hae-19, 'll-18)
conj_and(said-7, hae-19)
amod(hert-21, yer-20)
poss(desire-23, hert-21)
dobj(hae-19, desire-23)
mark(hunger-31, for-25)
nsubj(hunger-31, Blessed-27)
cop(hunger-31, are-28)
dep(hunger-31, they-29)
det(hunger-31, that-30)
dep(desire-23, hunger-31)
dep(desire-23, thirst-33)
conj_and(hunger-31, thirst-33)
prep_after(hunger-31, righteousness-35)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD was)
      (ADJP (DT neither) (JJ annoyed)
        (CC nor)
        (JJ gratified))
      (PP (IN with)
        (NP
          (NP (DT the) (NNP compliments) (NNP Alexa))
          (VP (VBN paid)
            (NP (PRP him)))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP she))
          (VP (VBD did) (RB not)
            (VP (VB know)
              (NP
                (NP (DT the) (JJ informing) (NN power))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN book))
                    (PRN (: --)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP he))
                          (VP (VBD cared)
                            (PP (IN for)
                              (PP (IN in)
                                (NP (PRP it)))))))
                      (: --))
                    (NP
                      (NP (DT the) (NN thing))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD made)
                            (S
                              (NP (PRP him))
                              (VP (VB write)
                                (NP (PRP it))))))))))))))))
    (. .)))

nsubj(annoyed-4, Andrew-1)
nsubj(gratified-6, Andrew-1)
cop(annoyed-4, was-2)
preconj(annoyed-4, neither-3)
root(ROOT-0, annoyed-4)
conj_nor(annoyed-4, gratified-6)
det(Alexa-10, the-8)
nn(Alexa-10, compliments-9)
prep_with(annoyed-4, Alexa-10)
vmod(Alexa-10, paid-11)
dobj(paid-11, him-12)
mark(know-18, for-14)
nsubj(know-18, she-15)
aux(know-18, did-16)
neg(know-18, not-17)
advcl(annoyed-4, know-18)
det(power-21, the-19)
amod(power-21, informing-20)
dobj(know-18, power-21)
det(book-24, the-23)
prep_of(power-21, book-24)
dobj(cared-28, what-26)
nsubj(cared-28, he-27)
dep(book-24, cared-28)
prep(cared-28, for-29)
pcomp(for-29, in-30)
pobj(in-30, it-31)
det(thing-34, the-33)
dep(book-24, thing-34)
nsubj(made-36, thing-34)
rcmod(thing-34, made-36)
nsubj(write-38, him-37)
ccomp(made-36, write-38)
dobj(write-38, it-39)

(ROOT
  (S
    (S (CC But)
      (NP (PRP$ her) (NN gentleness)
        (CC and)
        (NN kindness))
      (VP (VBD did)
        (VP (VB please)
          (NP (PRP him)))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ glad)
          (S
            (VP (TO to)
              (VP
                (VP (VB feel)
                  (NP (DT a) (JJ little))
                  (PP (IN at)
                    (NP (NN home)))
                  (PP (IN with)
                    (NP (PRP her))))
                (, ,)
                (ADJP (JJ glad)
                  (S
                    (VP (TO to)
                      (VP (VB draw)
                        (NP
                          (NP (DT a) (JJ little)
                            (QP (IN nearer) (TO to) (CD one)))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBD had)
                                (ADVP (RB never))
                                (VP (VBN been)
                                  (ADJP (JJ other)
                                    (PP (IN than)
                                      (ADJP (JJ good))))
                                  (PP (TO to)
                                    (NP (PRP him))))))))))))))))))
    (. .)))

cc(please-7, But-1)
poss(gentleness-3, her-2)
nsubj(please-7, gentleness-3)
conj_and(gentleness-3, kindness-5)
nsubj(please-7, kindness-5)
aux(please-7, did-6)
root(ROOT-0, please-7)
dobj(please-7, him-8)
nsubj(glad-12, he-10)
nsubj(feel-14, he-10)
cop(glad-12, was-11)
parataxis(please-7, glad-12)
aux(feel-14, to-13)
xcomp(glad-12, feel-14)
det(little-16, a-15)
dobj(feel-14, little-16)
prep_at(feel-14, home-18)
prep_with(feel-14, her-20)
acomp(feel-14, glad-22)
aux(draw-24, to-23)
xcomp(glad-22, draw-24)
det(one-29, a-25)
amod(one-29, little-26)
quantmod(one-29, nearer-27)
dep(one-29, to-28)
dobj(draw-24, one-29)
nsubj(other-34, one-29)
aux(other-34, had-31)
neg(other-34, never-32)
cop(other-34, been-33)
rcmod(one-29, other-34)
prep_than(other-34, good-36)
prep_to(other-34, him-38)

(ROOT
  (S (CC And)
    (ADVP (RB then))
    (VP (VBD was)
      (NP (PRP she)))
    (NP
      (NP (RB not) (JJR more))
      (PP (IN than)
        (NP (NN kind))))
    (, ,)
    (S
      (VP
        (ADVP (RB even))
        (VBG loving)
        (PP (TO to)
          (NP (NNP Dawtie)))))
    (. ?)))

cc(she-4, And-1)
advmod(she-4, then-2)
cop(she-4, was-3)
root(ROOT-0, she-4)
neg(more-6, not-5)
dep(she-4, more-6)
prep_than(more-6, kind-8)
advmod(loving-11, even-10)
vmod(she-4, loving-11)
prep_to(loving-11, Dawtie-13)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB So))
      (, ,)
      (ADVP (RB Andrew))
      (, ,)
      (NP (PRP you))
      (VP (VBP are)
        (NP
          (NP (DT a) (NN poet))
          (PP (IN at)
            (NP (JJ last))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said) (, ,)
      (S
        (VP (VBG holding)
          (PRT (RP out))
          (NP (PRP$ her) (NN hand))
          (PP (TO to)
            (NP
              (NP (PRP him))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (NNP Andrew))
                  (VP (VBD received)
                    (PP (IN in)
                      (NP
                        (NP (DT a) (NN palm))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBD wrote)
                              (NP (DT the) (JJR better) (NN verse))
                              (SBAR (IN that)
                                (S
                                  (NP (PRP it))
                                  (VP (VBD was)
                                    (ADVP (RB horny))))))))))))))))))
    (. .)))

advmod(poet-9, So-2)
advmod(poet-9, Andrew-4)
nsubj(poet-9, you-6)
cop(poet-9, are-7)
det(poet-9, a-8)
ccomp(said-15, poet-9)
prep_at(poet-9, last-11)
nsubj(said-15, she-14)
root(ROOT-0, said-15)
xcomp(said-15, holding-17)
prt(holding-17, out-18)
poss(hand-20, her-19)
dobj(holding-17, hand-20)
prep_to(holding-17, him-22)
dobj(received-26, him-22)
nsubj(received-26, Andrew-25)
rcmod(him-22, received-26)
det(palm-29, a-28)
prep_in(received-26, palm-29)
nsubj(wrote-31, palm-29)
rcmod(palm-29, wrote-31)
det(verse-34, the-32)
amod(verse-34, better-33)
dobj(wrote-31, verse-34)
mark(was-37, that-35)
nsubj(was-37, it-36)
ccomp(wrote-31, was-37)
advmod(was-37, horny-38)

(ROOT
  (S (`` ``)
    (VP (VB Please)
      (S
        (VP (TO to)
          (VP (VB remember)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD was)
                  (NP
                    (NP (DT the) (JJ first))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD found)
                          (NP (PRP you))
                          (PRT (RP out)))))))))))))
    (. !) ('' '')))

root(ROOT-0, Please-2)
aux(remember-4, to-3)
xcomp(Please-2, remember-4)
nsubj(first-8, I-5)
cop(first-8, was-6)
det(first-8, the-7)
ccomp(remember-4, first-8)
nsubj(found-10, first-8)
rcmod(first-8, found-10)
dobj(found-10, you-11)
prt(found-10, out-12)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD added))
    (. .)))

nsubj(added-2, she-1)
root(ROOT-0, added-2)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP (PRP$ my) (NN mother)))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Andrew))
    (. .)))

nsubj(think-3, I-2)
ccomp(answered-10, think-3)
nsubj(mother-7, it-4)
cop(mother-7, was-5)
poss(mother-7, my-6)
ccomp(think-3, mother-7)
root(ROOT-0, answered-10)
nsubj(answered-10, Andrew-11)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN helped)
          (NP (PRP you))
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (MD would)
                (VP (VB have)
                  (S
                    (VP (VB let)
                      (NP (PRP me)))))))))))
    (. .) ('' '')))

cc(helped-6, And-2)
nsubj(helped-6, I-3)
aux(helped-6, would-4)
aux(helped-6, have-5)
root(ROOT-0, helped-6)
dobj(helped-6, you-7)
mark(have-11, if-8)
nsubj(have-11, you-9)
aux(have-11, would-10)
advcl(helped-6, have-11)
ccomp(have-11, let-12)
dobj(let-12, me-13)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (ADJP (JJ well)
        (PRN (, ,)
          (S
            (VP (VB ma'am)))
          (, ,))
        (S
          (VP (TO to)
            (VP (VB push)
              (NP (DT the) (NN bird))
              (PRT (RP off))))))
      (SBAR (IN because)
        (S
          (NP (PRP he))
          (VP (MD ca) (RB n't)
            (VP (VB sit)
              (ADJP (JJ safe))
              (PP (IN on)
                (NP
                  (NP (DT the) (NN edge))
                  (PP (IN of)
                    (NP (DT the) (NN nest))))))))))
    (. .) ('' '')))

nsubj(well-5, It-2)
nsubj(push-10, It-2)
cop(well-5, is-3)
neg(well-5, not-4)
root(ROOT-0, well-5)
dep(well-5, ma'am-7)
aux(push-10, to-9)
xcomp(well-5, push-10)
det(bird-12, the-11)
dobj(push-10, bird-12)
prt(push-10, off-13)
mark(sit-18, because-14)
nsubj(sit-18, he-15)
aux(sit-18, ca-16)
neg(sit-18, n't-17)
advcl(well-5, sit-18)
acomp(sit-18, safe-19)
det(edge-22, the-21)
prep_on(sit-18, edge-22)
det(nest-25, the-24)
prep_of(edge-22, nest-25)

(ROOT
  (S (`` ``)
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (JJ right)
        (SBAR
          (S
            (NP (DT A) (NN failure))
            (ADVP (RB then))
            (VP (MD would)
              (VP (VB have)
                (VP (VBN stood)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN way))
                      (PP (IN of)
                        (NP (PRP$ your) (JJ coming) (NN fame))))))))))))
    (. .) ('' '')))

advmod(right-5, Perhaps-2)
nsubj(right-5, you-3)
cop(right-5, are-4)
root(ROOT-0, right-5)
det(failure-7, A-6)
nsubj(stood-11, failure-7)
advmod(stood-11, then-8)
aux(stood-11, would-9)
aux(stood-11, have-10)
ccomp(right-5, stood-11)
det(way-14, the-13)
prep_in(stood-11, way-14)
poss(fame-18, your-16)
amod(fame-18, coming-17)
prep_of(way-14, fame-18)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (PP (IN for)
      (NP (DT that)))
    (, ,)
    (NP (NN ma'am))
    (, ,)
    (S
      (VP (VB believe)
        (NP (PRP me))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB care)
        (NP (DT a) (JJ short) (NN straw))))
    (. .) ('' '')))

discourse(care-15, Oh-2)
prep_for(care-15, that-5)
nsubj(care-15, ma'am-7)
ccomp(care-15, believe-9)
dobj(believe-9, me-10)
nsubj(care-15, I-12)
aux(care-15, do-13)
neg(care-15, not-14)
root(ROOT-0, care-15)
det(straw-18, a-16)
amod(straw-18, short-17)
dobj(care-15, straw-18)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (RB not) (VB care)
        (PRT (RP for))))
    (. ?) ('' '')))

dobj(care-6, What-2)
aux(care-6, do-3)
nsubj(care-6, you-4)
neg(care-6, not-5)
root(ROOT-0, care-6)
prt(care-6, for-7)

(ROOT
  (FRAG (`` ``)
    (ADJP
      (ADVP (IN For))
      (VBN fame))
    (. .) ('' '')))

advmod(fame-3, For-2)
root(ROOT-0, fame-3)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is)
      (ADJP (JJ wrong))
      (, ,)
      (INTJ (UH Andrew)))
    (. .)))

nsubj(wrong-4, That-2)
cop(wrong-4, is-3)
root(ROOT-0, wrong-4)
discourse(wrong-4, Andrew-6)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB care)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP$ our) (NNS neighbors))
                (VP (VBP think)
                  (PP (IN of)
                    (NP (PRP us))))))))))
    (. .) ('' '')))

nsubj(ought-2, We-1)
nsubj(care-4, We-1)
root(ROOT-0, ought-2)
aux(care-4, to-3)
xcomp(ought-2, care-4)
dobj(think-8, what-5)
poss(neighbors-7, our-6)
nsubj(think-8, neighbors-7)
ccomp(care-4, think-8)
prep_of(think-8, us-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ My) (NNS neighbors))
      (VP (VBD did) (RB not)
        (VP (VB set)
          (S
            (NP (PRP me))
            (VP (TO to)
              (VP (VB do)
                (NP (DT the) (NN work))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB not)
        (VP (VB seek)
          (NP (PRP$ their) (NN praise))
          (PP (IN in)
            (S
              (VP (VBG doing)
                (NP (PRP it))))))))
    (. .)))

poss(neighbors-3, My-2)
nsubj(set-6, neighbors-3)
aux(set-6, did-4)
neg(set-6, not-5)
root(ROOT-0, set-6)
dobj(set-6, me-7)
nsubj(do-9, me-7)
aux(do-9, to-8)
xcomp(set-6, do-9)
det(work-11, the-10)
dobj(do-9, work-11)
nsubj(seek-17, I-14)
aux(seek-17, did-15)
neg(seek-17, not-16)
conj_and(set-6, seek-17)
poss(praise-19, their-18)
dobj(seek-17, praise-19)
prepc_in(seek-17, doing-21)
dobj(doing-21, it-22)

(ROOT
  (S
    (NP
      (NP (PRP$ Their) (NN friendship) (NN I) (NN prize))
      (RRC
        (ADVP (RB dearly) (: --))
        (NP
          (QP (JJR more) (IN than) (CD tongue)))))
    (VP (MD can)
      (VP (VB tell)))
    (. .) ('' '')))

poss(prize-4, Their-1)
nn(prize-4, friendship-2)
nn(prize-4, I-3)
nsubj(tell-11, prize-4)
advmod(tongue-9, dearly-5)
mwe(than-8, more-7)
quantmod(tongue-9, than-8)
rcmod(prize-4, tongue-9)
aux(tell-11, can-10)
root(ROOT-0, tell-11)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD can) (RB not)
      (ADVP (RB surely))
      (VP (VB be)
        (ADJP
          (ADJP
            (ADJP (RB so) (JJ conceited))
            (PRN (, ,)
              (NP (NNP Andrew))
              (, ,)))
          (SBAR (IN as)
            (S
              (VP (TO to)
                (VP (VB think)
                  (S
                    (NP (NN nobody))
                    (ADJP (JJ capable)
                      (PP (IN of)
                        (S
                          (VP (VBG judging)
                            (NP (PRP$ your) (NN work))))))))))))))
    (. .) ('' '')))

nsubj(conceited-8, You-2)
aux(conceited-8, can-3)
neg(conceited-8, not-4)
advmod(conceited-8, surely-5)
cop(conceited-8, be-6)
advmod(conceited-8, so-7)
root(ROOT-0, conceited-8)
dep(conceited-8, Andrew-10)
mark(think-14, as-12)
aux(think-14, to-13)
dep(conceited-8, think-14)
nsubj(capable-16, nobody-15)
xcomp(think-14, capable-16)
prepc_of(capable-16, judging-18)
poss(work-20, your-19)
dobj(judging-18, work-20)

(ROOT
  (S (`` ``)
    (ADVP (RB Far)
      (PP (IN from)
        (NP (PRP it))))
    (, ,)
    (VP (VBP ma'am))
    (. .)))

prep_far_from(ma'am-6, it-4)
root(ROOT-0, ma'am-6)

(ROOT
  (S
    (S (CC But)
      (NP (PRP you))
      (VP (VBD were)
        (VP (VBG speaking)
          (PP (IN of)
            (NP (NN fame))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ does) (RB not)
        (VP (VB come)
          (PP (IN from)
            (NP (DT any) (JJ wise) (NN judgment))))))
    (. .) ('' '')))

nsubj(speaking-4, you-2)
aux(speaking-4, were-3)
root(ROOT-0, speaking-4)
prep_of(speaking-4, fame-6)
nsubj(come-12, that-9)
aux(come-12, does-10)
neg(come-12, not-11)
conj_and(speaking-4, come-12)
det(judgment-16, any-14)
amod(judgment-16, wise-15)
prep_from(come-12, judgment-16)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (WDT what))
    (VP (VBP do)
      (S
        (NP (PRP you))
        (VP (VB write)
          (PP (IN for))))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP care)
            (NP
              (NP (NN nothing))
              (PP (IN for)
                (NP (NN fame))))))))
    (. ?)))

advmod(do-4, Then-2)
nsubj(do-4, what-3)
root(ROOT-0, do-4)
nsubj(write-6, you-5)
ccomp(do-4, write-6)
prep(write-6, for-7)
mark(care-11, if-9)
nsubj(care-11, you-10)
advcl(do-4, care-11)
dobj(care-11, nothing-12)
prep_for(nothing-12, fame-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR (IN that)
        (S
          (VP (VBD was)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (DT all) (NNS poets))
                (VP (VBD wrote)
                  (PP (IN for)))))))))
    (. .) ('' '')))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
mark(was-4, that-3)
ccomp(thought-2, was-4)
prep_for(wrote-8, what-5)
det(poets-7, all-6)
nsubj(wrote-8, poets-7)
ccomp(was-4, wrote-8)

(ROOT
  (S (`` ``)
    (CC So)
    (S
      (NP (DT the) (NN world))
      (VP (VBZ thinks)))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP do)
              (ADVP (RB sometimes))))))
      (VP (VBP have)
        (NP (PRP$ their) (NN reward))))
    (. .) ('' '')))

det(world-4, the-3)
nsubj(thinks-5, world-4)
root(ROOT-0, thinks-5)
nsubj(do-10, those-8)
nsubj(have-12, those-8)
rcmod(those-8, do-10)
advmod(do-10, sometimes-11)
conj_and(thinks-5, have-12)
poss(reward-14, their-13)
dobj(have-12, reward-14)

(ROOT
  (S (`` ``)
    (VP (VB Tell)
      (NP (PRP me))
      (ADVP (RB then))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBP write)
            (PP (IN for))))))
    (. ?) ('' '')))

root(ROOT-0, Tell-2)
dobj(Tell-2, me-3)
advmod(Tell-2, then-4)
prep_for(write-7, what-5)
nsubj(write-7, you-6)
dep(Tell-2, write-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP write)
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB tell)
                  (NP
                    (NP (NN something))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ makes)
                          (S
                            (NP (PRP me))
                            (ADJP (JJ glad)
                              (CC and)
                              (JJ strong))))))))))))))
    (. .)))

nsubj(write-3, I-2)
root(ROOT-0, write-3)
mark(want-6, because-4)
nsubj(want-6, I-5)
nsubj(tell-8, I-5)
advcl(write-3, want-6)
aux(tell-8, to-7)
xcomp(want-6, tell-8)
dobj(tell-8, something-9)
nsubj(makes-11, something-9)
rcmod(something-9, makes-11)
nsubj(glad-13, me-12)
nsubj(strong-15, me-12)
xcomp(makes-11, glad-13)
xcomp(makes-11, strong-15)
conj_and(glad-13, strong-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP
            (VP (VB say)
              (NP (PRP it)))
            (, ,)
            (CC and)
            (ADVP (RB so))
            (VP (VB try)
              (S
                (VP (TO to)
                  (VP (VB say)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(want-2, I-1)
nsubj(say-4, I-1)
nsubj(try-9, I-1)
nsubj(say-11, I-1)
root(ROOT-0, want-2)
aux(say-4, to-3)
xcomp(want-2, say-4)
dobj(say-4, it-5)
xcomp(want-2, try-9)
conj_and(say-4, try-9)
aux(say-11, to-10)
xcomp(try-9, say-11)
dobj(say-11, it-12)

(ROOT
  (S
    (S
      (NP (NNS Things))
      (VP (VBP come)
        (PP
          (PP (TO to)
            (NP
              (NP (PRP me))
              (PP (IN in)
                (NP (NNS gleams)
                  (CC and)
                  (NNS flashes)))))
          (, ,)
          (ADVP (RB sometimes))
          (PP (IN in)
            (NP (NNS words))))
        (NP (PRP themselves))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB weave)
              (NP (PRP them))
              (PP (IN into)
                (NP (DT a) (JJ melodious) (, ,) (JJ harmonious) (NN whole))))))))
    (. .)))

nsubj(come-2, Things-1)
root(ROOT-0, come-2)
prep_to(come-2, me-4)
prep_in(me-4, gleams-6)
prep_in(me-4, flashes-8)
conj_and(gleams-6, flashes-8)
advmod(come-2, sometimes-10)
prep_in(come-2, words-12)
dobj(come-2, themselves-13)
nsubj(want-17, I-16)
nsubj(weave-19, I-16)
conj_and(come-2, want-17)
aux(weave-19, to-18)
xcomp(want-17, weave-19)
dobj(weave-19, them-20)
det(whole-26, a-22)
amod(whole-26, melodious-23)
amod(whole-26, harmonious-25)
prep_into(weave-19, whole-26)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD was)
        (ADVP (RB once))
        (PP (IN at)
          (NP (DT an) (NN oratorio)))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD taught)
        (S
          (NP (PRP me))
          (NP
            (NP (DT the) (NN shape))
            (PP (IN of)
              (NP (DT a) (NN poem)))))))
    (. .)))

nsubj(was-2, I-1)
root(ROOT-0, was-2)
advmod(was-2, once-3)
det(oratorio-6, an-5)
prep_at(was-2, oratorio-6)
nsubj(taught-10, that-9)
conj_and(was-2, taught-10)
nsubj(shape-13, me-11)
det(shape-13, the-12)
xcomp(taught-10, shape-13)
det(poem-16, a-15)
prep_of(shape-13, poem-16)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (NN pause))
        (PP (IN of)
          (NP (DT the) (NN music)))))
    (, ,)
    (NP (PRP I))
    (VP (VBD seemed)
      (ADVP (DT all) (IN at) (RB once))
      (S
        (VP (TO to)
          (VP (VB see)
            (NP
              (NP (NNP Handel) (POS 's))
              (JJ heavy) (NN countenance))
            (S
              (VP (VBG looking)
                (PRT (RP out))
                (PP (IN of)
                  (NP (PRP$ his) (JJ great) (NN wig)))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP he))
                    (VP
                      (VP (VBD sat)
                        (S
                          (VP
                            (VP (VBG putting)
                              (PRT (RP together))
                              (NP (PRP$ his) (NNS notes)))
                            (, ,)
                            (VP (VBG ordering) (IN about)
                              (PP (IN in)
                                (NP (PRP$ his) (NN mind))))
                            (, ,)
                            (CC and)
                            (VP (VBG fixing)
                              (PP (IN in)
                                (NP
                                  (NP
                                    (NP (PRP$ their) (NNS places))
                                    (PP (IN with)
                                      (NP
                                        (NP (PRP$ his) (NN pen))
                                        (, ,)
                                        (NP (PRP$ his) (NNS drums))
                                        (, ,)
                                        (CC and)
                                        (NP (NNS pipes))
                                        (, ,)
                                        (CC and)
                                        (NP (NNS fiddles)))))
                                  (, ,)
                                  (CC and)
                                  (NP (VBG roaring) (NN bass))
                                  (, ,)))))))
                      (CC and)
                      (VP (VBZ flageolets))
                      (, ,)
                      (CC and)
                      (VP (VBZ hautboys)))))
                (: --)
                (S (RB all)
                  (VP (TO to)
                    (VP (VB open)
                      (NP (DT the) (NN door))
                      (PP (IN for)
                        (NP
                          (NP (DT the) (NN thing))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD was)
                                (VP (VBG plaguing)
                                  (NP (PRP him))
                                  (PP (IN with)
                                    (NP
                                      (NP (DT the) (NN confusion))
                                      (PP (IN of)
                                        (NP (PRP$ its) (NN beauty))))))))))))))))))))
    (. .)))

det(pause-3, a-2)
prep_in(seemed-9, pause-3)
det(music-6, the-5)
prep_of(pause-3, music-6)
nsubj(seemed-9, I-8)
nsubj(see-14, I-8)
root(ROOT-0, seemed-9)
pobj(at-11, all-10)
advmod(seemed-9, at-11)
advmod(at-11, once-12)
aux(see-14, to-13)
xcomp(seemed-9, see-14)
poss(countenance-18, Handel-15)
amod(countenance-18, heavy-17)
dobj(see-14, countenance-18)
xcomp(see-14, looking-19)
poss(wig-24, his-22)
amod(wig-24, great-23)
prep_out_of(looking-19, wig-24)
mark(sat-28, as-26)
nsubj(sat-28, he-27)
nsubj(flageolets-63, he-27)
nsubj(hautboys-66, he-27)
advcl(looking-19, sat-28)
ccomp(sat-28, putting-29)
prt(putting-29, together-30)
poss(notes-32, his-31)
dobj(putting-29, notes-32)
ccomp(sat-28, ordering-34)
conj_and(putting-29, ordering-34)
dep(ordering-34, about-35)
poss(mind-38, his-37)
prep_in(ordering-34, mind-38)
ccomp(sat-28, fixing-41)
conj_and(putting-29, fixing-41)
poss(places-44, their-43)
prep_in(fixing-41, places-44)
poss(pen-47, his-46)
prep_with(places-44, pen-47)
poss(drums-50, his-49)
prep_with(places-44, drums-50)
conj_and(pen-47, drums-50)
prep_with(places-44, pipes-53)
conj_and(pen-47, pipes-53)
prep_with(places-44, fiddles-56)
conj_and(pen-47, fiddles-56)
amod(bass-60, roaring-59)
prep_in(fixing-41, bass-60)
conj_and(places-44, bass-60)
advcl(looking-19, flageolets-63)
conj_and(sat-28, flageolets-63)
advcl(looking-19, hautboys-66)
conj_and(sat-28, hautboys-66)
advmod(open-70, all-68)
aux(open-70, to-69)
parataxis(looking-19, open-70)
xcomp(looking-19, open-70)
det(door-72, the-71)
dobj(open-70, door-72)
det(thing-75, the-74)
prep_for(open-70, thing-75)
nsubj(plaguing-78, thing-75)
aux(plaguing-78, was-77)
rcmod(thing-75, plaguing-78)
dobj(plaguing-78, him-79)
det(confusion-82, the-81)
prep_with(plaguing-78, confusion-82)
poss(beauty-85, its-84)
prep_of(confusion-82, beauty-85)

(ROOT
  (S (IN For)
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR (RB even)
        (S
          (NP (NNP Handel))
          (VP
            (VP (VBD did) (RB not)
              (VP (VB hear)
                (S
                  (NP (PRP it))
                  (ADJP
                    (ADJP (RB all) (JJ clear)
                      (CC and)
                      (JJ plain))
                    (PP (IN at)
                      (ADVP (RB first)))))))
            (, ,)
            (CC but)
            (VP (VBD had)
              (S
                (VP (TO to)
                  (VP (VB build)
                    (NP (PRP$ his) (NN orchestra))
                    (PP (IN into)
                      (NP
                        (NP (DT a) (JJ mental) (NN organ))
                        (PP (IN for)
                          (NP (PRP$ his) (NN mind)
                            (S
                              (VP (TO to)
                                (VP (VB let)
                                  (NP (PRP itself))
                                  (PRT (RP out))
                                  (PP (IN by))
                                  (, ,)
                                  (PP (IN through)
                                    (NP (DT the) (JJ many) (NN music) (NNS holes)))
                                  (, ,)
                                  (SBAR (IN lest)
                                    (S
                                      (NP (PRP it))
                                      (VP (MD should)
                                        (VP (VB burst)
                                          (PP (IN with)
                                            (NP (PRP$ its)
                                              (ADJP (JJ repressed) (JJ harmonic))
                                              (NNS delights))))))))))))))))))))))
    (. .)))

dep(suppose-3, For-1)
nsubj(suppose-3, I-2)
root(ROOT-0, suppose-3)
advmod(hear-8, even-4)
nsubj(hear-8, Handel-5)
nsubj(had-18, Handel-5)
nsubj(build-20, Handel-5)
aux(hear-8, did-6)
neg(hear-8, not-7)
ccomp(suppose-3, hear-8)
nsubj(clear-11, it-9)
nsubj(plain-13, it-9)
advmod(clear-11, all-10)
xcomp(hear-8, clear-11)
xcomp(hear-8, plain-13)
conj_and(clear-11, plain-13)
prep(clear-11, at-14)
pcomp(at-14, first-15)
ccomp(suppose-3, had-18)
conj_but(hear-8, had-18)
aux(build-20, to-19)
xcomp(had-18, build-20)
poss(orchestra-22, his-21)
dobj(build-20, orchestra-22)
det(organ-26, a-24)
amod(organ-26, mental-25)
prep_into(build-20, organ-26)
poss(mind-29, his-28)
prep_for(organ-26, mind-29)
aux(let-31, to-30)
vmod(mind-29, let-31)
dobj(let-31, itself-32)
prt(let-31, out-33)
prep(let-31, by-34)
det(holes-40, the-37)
amod(holes-40, many-38)
nn(holes-40, music-39)
prep_through(let-31, holes-40)
mark(burst-45, lest-42)
nsubj(burst-45, it-43)
aux(burst-45, should-44)
advcl(let-31, burst-45)
poss(delights-50, its-47)
amod(harmonic-49, repressed-48)
amod(delights-50, harmonic-49)
prep_with(burst-45, delights-50)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must)
      (VP (VB have)
        (VP (VBN felt)
          (NP (DT an) (JJ agonized) (NN need))
          (S
            (VP (TO to)
              (VP (VB set)
                (NP
                  (NP (DT the) (NN haunting) (NNS angels))
                  (PP (IN of)
                    (NP (NN sound))))
                (PP (IN in)
                  (NP (NN obedient) (NN order)
                    (CC and)
                    (NN range)))
                (, ,)
                (ADJP (JJ responsive)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN soul))
                      (PP (IN of)
                        (NP (DT the) (NN thing))))))
                (, ,)
                (NP (PRP$ its) (CD one) (NN ruling) (NN idea))))))))
    (. !)))

nsubj(felt-4, He-1)
aux(felt-4, must-2)
aux(felt-4, have-3)
root(ROOT-0, felt-4)
det(need-7, an-5)
amod(need-7, agonized-6)
dobj(felt-4, need-7)
aux(set-9, to-8)
vmod(felt-4, set-9)
det(angels-12, the-10)
nn(angels-12, haunting-11)
dobj(set-9, angels-12)
prep_of(angels-12, sound-14)
nn(order-17, obedient-16)
prep_in(set-9, order-17)
prep_in(set-9, range-19)
conj_and(order-17, range-19)
acomp(set-9, responsive-21)
det(soul-24, the-23)
prep_to(responsive-21, soul-24)
det(thing-27, the-26)
prep_of(soul-24, thing-27)
poss(idea-32, its-29)
num(idea-32, one-30)
nn(idea-32, ruling-31)
dobj(set-9, idea-32)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD saw)
      (NP (PRP him))
      (PP (IN with)
        (NP (PRP$ his) (JJ white) (NN rapt) (NN face)))
      (, ,)
      (S
        (VP (VBG looking)
          (PP (IN like)
            (NP
              (NP (DT a) (NN prophet))
              (PP (IN of)
                (NP
                  (NP (DT the) (VBG living) (NN God))
                  (VP (VBN sent)
                    (S
                      (VP (TO to)
                        (VP (VB speak)
                          (PRT (RP out))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN heart))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (NN mystery))
                                  (PP (IN of)
                                    (NP (NN truth))))))))))))))))))
    (. !)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
dobj(saw-2, him-3)
poss(face-8, his-5)
amod(face-8, white-6)
nn(face-8, rapt-7)
prep_with(saw-2, face-8)
vmod(saw-2, looking-10)
det(prophet-13, a-12)
prep_like(looking-10, prophet-13)
det(God-17, the-15)
amod(God-17, living-16)
prep_of(prophet-13, God-17)
vmod(God-17, sent-18)
aux(speak-20, to-19)
xcomp(sent-18, speak-20)
det(heart-24, the-23)
prep_out_of(speak-20, heart-24)
det(mystery-27, the-26)
prep_of(heart-24, mystery-27)
prep_of(mystery-27, truth-29)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD saw)
        (NP (PRP him))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD sat)
              (PP (VBG staring)
                (PP (IN at)
                  (NP (DT the) (NN paper))))
              (PP (IN before)
                (NP (PRP him)))
              (, ,)
              (S
                (ADJP (JJ scratched)
                  (ADVP (DT all) (IN over) (RB as))
                  (PP (IN with)
                    (NP
                      (NP (DT the) (NN fury))
                      (PP (IN of)
                        (NP (DT a) (JJ holy) (NN anger)))))
                  (PP (IN at)
                    (NP (PRP$ his) (JJ own) (NN impotence))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NN soul))
      (VP (VBD communed)
        (PP (IN with)
          (NP (JJ heavenliest) (NNS harmonies)))))
    (. !)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
dobj(saw-2, him-3)
mark(sat-6, as-4)
nsubj(sat-6, he-5)
advcl(saw-2, sat-6)
prep(sat-6, staring-7)
pcomp(staring-7, at-8)
det(paper-10, the-9)
pobj(at-8, paper-10)
prep_before(sat-6, him-12)
dep(sat-6, scratched-14)
dep(over-16, all-15)
advmod(scratched-14, over-16)
advmod(over-16, as-17)
det(fury-20, the-19)
prep_with(scratched-14, fury-20)
det(anger-24, a-22)
amod(anger-24, holy-23)
prep_of(fury-20, anger-24)
poss(impotence-28, his-26)
amod(impotence-28, own-27)
prep_at(scratched-14, impotence-28)
poss(soul-32, his-31)
nsubj(communed-33, soul-32)
conj_and(saw-2, communed-33)
amod(harmonies-36, heavenliest-35)
prep_with(communed-33, harmonies-36)

(ROOT
  (SQ
    (S
      (VP (VB Ma'am)))
    (, ,) (MD will)
    (NP (DT any) (NN man))
    (VP (VB persuade)
      (NP (PRP me))
      (SBAR (IN that)
        (S
          (NP
            (NP (NNP Handel))
            (PP (IN at)
              (NP (PDT such) (DT a) (NN moment))))
          (VP (VBD was)
            (VP (VBN athirst)
              (PP (IN for)
                (NP (NN fame))))))))
    (. ?)))

dep(persuade-6, Ma'am-1)
aux(persuade-6, will-3)
det(man-5, any-4)
nsubj(persuade-6, man-5)
root(ROOT-0, persuade-6)
dobj(persuade-6, me-7)
mark(athirst-15, that-8)
nsubjpass(athirst-15, Handel-9)
predet(moment-13, such-11)
det(moment-13, a-12)
prep_at(Handel-9, moment-13)
auxpass(athirst-15, was-14)
ccomp(persuade-6, athirst-15)
prep_for(athirst-15, fame-17)

(ROOT
  (FRAG (CC or)
    (SBAR (IN that)
      (S
        (NP (DT the) (NN desire)
          (S
            (VP (TO to)
              (VP (VB please)
                (NP
                  (NP (DT a) (NN house))
                  (ADJP (JJ full)
                    (CC or)
                    (NN world) (JJ full))
                  (PP (IN of)
                    (NP (JJ such))))
                (SBAR (IN as)
                  (S
                    (VP (VBD heard)
                      (NP (PRP$ his) (NNS oratorios)))))))))
        (, ,)
        (VP (VBD gave)
          (NP (PRP him))
          (NP (DT the) (NN power)
            (S
              (VP (TO to)
                (VP (VB write)
                  (NP (PRP$ his) (NN music)))))))))
    (. ?)))

cc(gave-20, or-1)
mark(gave-20, that-2)
det(desire-4, the-3)
nsubj(gave-20, desire-4)
aux(please-6, to-5)
vmod(desire-4, please-6)
det(house-8, a-7)
dobj(please-6, house-8)
dep(full-12, full-9)
amod(house-8, world-11)
conj_or(full-12, world-11)
amod(house-8, full-12)
prep_of(house-8, such-14)
mark(heard-16, as-15)
advcl(please-6, heard-16)
poss(oratorios-18, his-17)
dobj(heard-16, oratorios-18)
root(ROOT-0, gave-20)
iobj(gave-20, him-21)
det(power-23, the-22)
dobj(gave-20, power-23)
aux(write-25, to-24)
vmod(power-23, write-25)
poss(music-27, his-26)
dobj(write-25, music-27)

(ROOT
  (FRAG
    (INTJ (UH No))
    (, ,)
    (NP (NN ma'am))
    (. !)))

discourse(ma'am-3, No-1)
root(ROOT-0, ma'am-3)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBN filled) (, ,)
        (PP (RB not) (IN with)
          (NP
            (NP
              (NP (DT the) (NN longing))
              (PP (IN for)
                (NP (NN sympathy))))
            (, ,)
            (CC and)
            (NP
              (NP (RB not) (RB even))
              (PP
                (PP (IN with)
                  (NP (DT the) (JJ good) (NN desire)
                    (S
                      (VP (TO to)
                        (VP (VB give)
                          (NP (NN delight)))))))
                (, ,)
                (CC but)
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN music))
                    (ADVP (PRP itself))))))))))
    (. .)))

nsubjpass(filled-3, he-1)
auxpass(filled-3, was-2)
root(ROOT-0, filled-3)
neg(filled-3, not-5)
det(longing-8, the-7)
prep_with(filled-3, longing-8)
prep_for(longing-8, sympathy-10)
neg(even-14, not-13)
prep_with(filled-3, even-14)
conj_and(longing-8, even-14)
det(desire-18, the-16)
amod(desire-18, good-17)
prep_with(even-14, desire-18)
aux(give-20, to-19)
vmod(desire-18, give-20)
dobj(give-20, delight-21)
det(music-26, the-25)
prep_with(even-14, music-26)
conj_but(desire-18, music-26)
advmod(music-26, itself-27)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (VP (VBG crying)
          (PP (IN in)
            (NP (PRP him)))
          (S
            (VP (TO to)
              (VP (VB get)
                (PRT (RP out))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD heard)
        (SBAR
          (S
            (NP (PRP it))
            (VP
              (VP (VBZ crying))
              (, ,)
              (CC and)
              (VP (MD could) (RB not)
                (VP (VB rest)
                  (SBAR (IN till)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (VP (VBN let)
                          (NP (PRP it))
                          (PRT (RP out)))))))))))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (DT every) (NN note))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD dropped)
              (PP (IN from)
                (NP (PRP$ his) (NN pen)))))))
      (VP (VBD was)
        (NP
          (NP
            (NP (DT a) (NN chip))
            (VP (VBN struck)
              (PP (IN from)
                (NP
                  (NP (DT the) (NN granite) (NN wall))
                  (PP (IN between)
                    (NP
                      (NP (DT the) (NNS song-birds))
                      (PP (IN in)
                        (NP (PRP$ their) (NN prison-nest)))))))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NN air))
            (PP (IN of)
              (NP (PRP$ their) (NN liberty)))))))
    (. .)))

nsubj(crying-3, It-1)
nsubj(get-7, It-1)
aux(crying-3, was-2)
root(ROOT-0, crying-3)
prep_in(crying-3, him-5)
aux(get-7, to-6)
xcomp(crying-3, get-7)
prt(get-7, out-8)
nsubj(heard-12, he-11)
conj_and(crying-3, heard-12)
nsubj(crying-14, it-13)
nsubj(rest-19, it-13)
ccomp(heard-12, crying-14)
aux(rest-19, could-17)
neg(rest-19, not-18)
ccomp(heard-12, rest-19)
conj_and(crying-14, rest-19)
mark(let-23, till-20)
nsubj(let-23, he-21)
aux(let-23, had-22)
advcl(rest-19, let-23)
dobj(let-23, it-24)
prt(let-23, out-25)
det(note-29, every-28)
nsubj(dropped-31, note-29)
nsubj(chip-37, note-29)
rcmod(note-29, dropped-31)
poss(pen-34, his-33)
prep_from(dropped-31, pen-34)
cop(chip-37, was-35)
det(chip-37, a-36)
conj_and(crying-3, chip-37)
vmod(chip-37, struck-38)
det(wall-42, the-40)
nn(wall-42, granite-41)
prep_from(struck-38, wall-42)
det(song-birds-45, the-44)
prep_between(wall-42, song-birds-45)
poss(prison-nest-48, their-47)
prep_in(song-birds-45, prison-nest-48)
det(air-52, the-51)
conj_and(crying-3, air-52)
conj_and(chip-37, air-52)
poss(liberty-55, their-54)
prep_of(air-52, liberty-55)

(ROOT
  (S
    (NP (NN Creation))
    (VP (VBZ is)
      (NP
        (NP (NNP God) (POS 's))
        (JJ self-wrought) (NN freedom)))
    (. .)))

nsubj(freedom-6, Creation-1)
cop(freedom-6, is-2)
poss(freedom-6, God-3)
amod(freedom-6, self-wrought-5)
root(ROOT-0, freedom-6)

(ROOT
  (S
    (S
      (S
        (INTJ (UH No))
        (, ,)
        (VP (VB ma'am)))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB despise)
          (NP (PRP$ my) (NNS fellows)))))
    (, ,)
    (CC but)
    (S
      (NP (DT neither))
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBZ prize)
              (NP
                (NP (DT the) (NN judgment))
                (PP (IN of)
                  (NP
                    (NP
                      (QP (JJR more) (IN than) (DT a) (JJ few)))
                    (PP (IN of)
                      (NP (PRP them)))))))))))
    (. .)))

discourse(ma'am-3, No-1)
ccomp(despise-8, ma'am-3)
nsubj(despise-8, I-5)
aux(despise-8, do-6)
neg(despise-8, not-7)
root(ROOT-0, despise-8)
poss(fellows-10, my-9)
dobj(despise-8, fellows-10)
nsubj(do-14, neither-13)
conj_but(despise-8, do-14)
nsubj(prize-16, I-15)
ccomp(do-14, prize-16)
det(judgment-18, the-17)
dobj(prize-16, judgment-18)
mwe(than-21, more-20)
quantmod(few-23, than-21)
quantmod(few-23, a-22)
prep_of(judgment-18, few-23)
prep_of(few-23, them-25)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBZ prize))
      (CC and)
      (VP (VBP love)
        (NP
          (NP (PRP themselves))
          (, ,)
          (CONJP (CC but)
            (RB not))
          (NP (PRP$ their) (NN opinion)))))
    (. .) ('' '')))

nsubj(prize-2, I-1)
nsubj(love-4, I-1)
root(ROOT-0, prize-2)
conj_and(prize-2, love-4)
dobj(love-4, themselves-5)
poss(opinion-10, their-9)
dobj(love-4, opinion-10)
conj_negcc(themselves-5, opinion-10)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD was)
        (ADJP (JJ silent))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Andrew))
      (VP (VBD took)
        (NP (PRP$ his) (NN leave))))
    (. .)))

nsubj(silent-3, Alexa-1)
cop(silent-3, was-2)
root(ROOT-0, silent-3)
nsubj(took-7, Andrew-6)
conj_and(silent-3, took-7)
poss(leave-9, his-8)
dobj(took-7, leave-9)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD sat)
      (ADVP (RB still))
      (PP (IN for)
        (S
          (ADVP (RB awhile))
          (VP (VBG thinking)))))
    (. .)))

nsubj(sat-2, She-1)
root(ROOT-0, sat-2)
advmod(sat-2, still-3)
advmod(thinking-6, awhile-5)
prepc_for(sat-2, thinking-6)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP she))
        (VP (VBD did) (RB not)
          (VP (VB understand)))))
    (, ,)
    (ADVP (IN at) (JJS least))
    (NP (PRP she))
    (VP (VBD remembered)
      (NP
        (NP (NNP Andrew) (POS 's))
        (NN face))
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD talked) (: :)
            (SQ (MD could)
              (NP (NN presumption))
              (VP (VB make)
                (NP (PRP$ his) (NN face) (NN shine))
                (ADVP (RB so))))))))
    (. ?)))

mark(understand-5, If-1)
nsubj(understand-5, she-2)
aux(understand-5, did-3)
neg(understand-5, not-4)
advcl(remembered-10, understand-5)
advmod(remembered-10, at-7)
pobj(at-7, least-8)
nsubj(remembered-10, she-9)
root(ROOT-0, remembered-10)
poss(face-13, Andrew-11)
dobj(remembered-10, face-13)
mark(talked-16, as-14)
nsubj(talked-16, he-15)
advcl(remembered-10, talked-16)
aux(make-20, could-18)
nsubj(make-20, presumption-19)
parataxis(talked-16, make-20)
poss(shine-23, his-21)
nn(shine-23, face-22)
dobj(make-20, shine-23)
advmod(make-20, so-24)

(ROOT
  (SQ (MD could)
    (NP (NN presumption))
    (VP (VB make)
      (S
        (NP (PRP him))
        (RB so)
        (VP (VB forget)
          (NP (PRP himself)))))
    (. ?)))

aux(make-3, could-1)
nsubj(make-3, presumption-2)
root(ROOT-0, make-3)
nsubj(forget-6, him-4)
advmod(forget-6, so-5)
ccomp(make-3, forget-6)
dobj(forget-6, himself-7)

(ROOT
  (NP (NNP CHAPTER) (NNP XXII) (. .)))

nn(XXII-2, CHAPTER-1)
root(ROOT-0, XXII-2)

(ROOT
  (S
    (NP (DT THE) (NN GAMBLER))
    (VP (VBZ AND)
      (NP (DT THE) (NN COLLECTOR)))
    (. .)))

det(GAMBLER-2, THE-1)
nsubj(AND-3, GAMBLER-2)
root(ROOT-0, AND-3)
det(COLLECTOR-5, THE-4)
dobj(AND-3, COLLECTOR-5)

(ROOT
  (S
    (NP (NNS Things))
    (VP (VBD went)
      (ADVP (RB swimmingly))
      (PP (IN with)
        (NP (NNP George))))
    (. .)))

nsubj(went-2, Things-1)
root(ROOT-0, went-2)
advmod(went-2, swimmingly-3)
prep_with(went-2, George-5)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD had)
        (VP (VBN weathered)
          (NP (DT a) (NN crisis))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADVP (RB now))
        (ADJP (JJ full)
          (PP (IN of)
            (NP
              (NP (NN confidence))
              (, ,)
              (CONJP (RB as) (RB well) (IN as))
              (NP
                (NP (DT the) (NN show))
                (PP (IN of)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(weathered-3, He-1)
nsubj(full-10, He-1)
aux(weathered-3, had-2)
root(ROOT-0, weathered-3)
det(crisis-5, a-4)
dobj(weathered-3, crisis-5)
cop(full-10, was-8)
advmod(full-10, now-9)
conj_and(weathered-3, full-10)
prep_of(full-10, confidence-12)
det(show-18, the-17)
prep_of(full-10, show-18)
conj_and(confidence-12, show-18)
prep_of(show-18, it-20)

(ROOT
  (S
    (NP (DT That))
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD held)
          (S
            (NP (PRP himself))
            (NP
              (NP (DT a) (NN man))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (MD could)
                    (VP (VB do)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP he))
                          (VP (VBD pleased))))))))))))
      (, ,))
    (VP (VBD was)
      (ADJP (JJ plain)
        (PP (TO to)
          (NP (DT every) (NN one)))))
    (. .)))

nsubj(plain-15, That-1)
nsubj(held-3, he-2)
parataxis(plain-15, held-3)
nsubj(man-6, himself-4)
det(man-6, a-5)
xcomp(held-3, man-6)
nsubj(do-9, man-6)
aux(do-9, could-8)
rcmod(man-6, do-9)
dobj(pleased-12, what-10)
nsubj(pleased-12, he-11)
ccomp(do-9, pleased-12)
cop(plain-15, was-14)
root(ROOT-0, plain-15)
det(one-18, every-17)
prep_to(plain-15, one-18)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN prosperity))
      (VP (VBD leaned)
        (PP (IN upon)
          (NP
            (NP (DT that))
            (PP (IN of)
              (NP
                (NP (JJ certain) (NNS princes))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN power))
                    (PP (IN of)
                      (NP (NN money)))))))))
        (PP (IN in)
          (NP (NNP America)))))
    (: :)
    (S
      (S
        (VP (VBG gleaning)
          (PP (IN after)
            (NP (PRP them)))))
      (NP (PRP he))
      (VP (VBD found)
        (NP (PRP$ his) (NN fortune))))
    (. .)))

poss(prosperity-2, His-1)
nsubj(leaned-3, prosperity-2)
root(ROOT-0, leaned-3)
prep_upon(leaned-3, that-5)
amod(princes-8, certain-7)
prep_of(that-5, princes-8)
det(power-11, the-10)
prep_of(princes-8, power-11)
prep_of(power-11, money-13)
prep_in(leaned-3, America-15)
dep(found-21, gleaning-17)
prep_after(gleaning-17, them-19)
nsubj(found-21, he-20)
parataxis(leaned-3, found-21)
poss(fortune-23, his-22)
dobj(found-21, fortune-23)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD did) (RB not)
      (VP (VB find)
        (NP
          (NP (JJ much) (NN increase))
          (PP (IN of)
            (NP (NN favor))))
        (PP (IN with)
          (NP (NNP Alexa)))))
    (. .)))

cc(find-5, But-1)
nsubj(find-5, he-2)
aux(find-5, did-3)
neg(find-5, not-4)
root(ROOT-0, find-5)
amod(increase-7, much-6)
dobj(find-5, increase-7)
prep_of(increase-7, favor-9)
prep_with(find-5, Alexa-11)

(ROOT
  (S
    (NP (PRP$ Her) (JJ spiritual) (NNS tastes))
    (VP (VBD were)
      (VP (VBG growing)
        (ADJP (RBR more) (JJ refined))))
    (. .)))

poss(tastes-3, Her-1)
amod(tastes-3, spiritual-2)
nsubj(growing-5, tastes-3)
aux(growing-5, were-4)
root(ROOT-0, growing-5)
advmod(refined-7, more-6)
acomp(growing-5, refined-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP (NN something))
        (PP (IN about)
          (NP
            (NP (DT the) (NN man))
            (, ,)
            (CC and)
            (NP (DT that) (RB not) (JJ new))
            (, ,)))
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP she))
            (VP (MD could)
              (ADVP (RB no) (RB longer))
              (VP (VB contemplate)
                (PP (IN without)
                  (NP (NN dissatisfaction)))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nsubj(was-2, something-3)
dobj(contemplate-18, something-3)
det(man-6, the-5)
prep_about(something-3, man-6)
det(new-11, that-9)
neg(new-11, not-10)
prep_about(something-3, new-11)
conj_and(man-6, new-11)
nsubj(contemplate-18, she-14)
aux(contemplate-18, could-15)
neg(longer-17, no-16)
advmod(contemplate-18, longer-17)
rcmod(something-3, contemplate-18)
prep_without(contemplate-18, dissatisfaction-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD cost)
      (NP (PRP$ her) (NNS tears))
      (PP (IN at)
        (NP (NN night)))
      (S
        (VP (TO to)
          (VP (VB think)
            (SBAR (IN that) (, ,)
              (S
                (SBAR (IN although)
                  (S
                    (NP (PRP$ her) (NN lover))
                    (VP (VBD had)
                      (VP (VBN degenerated)))))
                (, ,)
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN remained)
                    (S
                      (ADJP (JJ true)
                        (PP (TO to)
                          (NP (PRP her))))))))))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP she))
          (VP (VBD saw)
            (ADVP (RB plainly))
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (NP
                    (NP (JJ only) (NN lack))
                    (PP (IN of)
                      (NP (NN encouragement)))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD prevented)
                          (NP (PRP him))
                          (PP (IN from)
                            (S
                              (VP (VBG asking)
                                (S
                                  (NP (PRP her))
                                  (VP (TO to)
                                    (VP (VB be)
                                      (NP (PRP$ his) (NN wife)))))))))))))))))))
    (. .)))

nsubj(cost-2, It-1)
root(ROOT-0, cost-2)
poss(tears-4, her-3)
dobj(cost-2, tears-4)
prep_at(cost-2, night-6)
aux(think-8, to-7)
vmod(cost-2, think-8)
mark(remained-19, that-9)
mark(degenerated-15, although-11)
poss(lover-13, her-12)
nsubj(degenerated-15, lover-13)
aux(degenerated-15, had-14)
advcl(remained-19, degenerated-15)
nsubj(remained-19, he-17)
aux(remained-19, had-18)
ccomp(think-8, remained-19)
acomp(remained-19, true-20)
prep_to(true-20, her-22)
mark(saw-26, for-24)
nsubj(saw-26, she-25)
advcl(cost-2, saw-26)
advmod(saw-26, plainly-27)
mark(lack-32, that-28)
nsubj(lack-32, it-29)
cop(lack-32, was-30)
amod(lack-32, only-31)
ccomp(saw-26, lack-32)
nsubj(prevented-36, lack-32)
prep_of(lack-32, encouragement-34)
rcmod(lack-32, prevented-36)
dobj(prevented-36, him-37)
prepc_from(prevented-36, asking-39)
dobj(asking-39, her-40)
nsubj(wife-44, her-40)
aux(wife-44, to-41)
cop(wife-44, be-42)
poss(wife-44, his-43)
xcomp(asking-39, wife-44)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (MD must)
        (ADVP (RB _))
        (VP (VB appear)
          (NP (JJ _) (NN changeable)))))
    (, ,)
    (CC but)
    (S
      (NP (DT this))
      (VP (VBD was) (RB not)
        (NP
          (NP (DT the) (NN man))
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN been)
                  (ADJP (JJ ready)
                    (S
                      (VP (TO to)
                        (VP (VB love))))))))))))
    (. !)))

nsubj(appear-4, She-1)
aux(appear-4, must-2)
advmod(appear-4, _-3)
root(ROOT-0, appear-4)
amod(changeable-6, _-5)
dobj(appear-4, changeable-6)
nsubj(man-13, this-9)
cop(man-13, was-10)
neg(man-13, not-11)
det(man-13, the-12)
conj_but(appear-4, man-13)
nsubj(ready-17, she-14)
nsubj(love-19, she-14)
aux(ready-17, had-15)
cop(ready-17, been-16)
rcmod(man-13, ready-17)
aux(love-19, to-18)
xcomp(ready-17, love-19)

(ROOT
  (S
    (NP (DT the) (NN plant))
    (VP (VBD had)
      (VP (VBN put)
        (PRT (RP forth))
        (NP
          (NP (DT a) (NN flower))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was) (RB not)
                (PP (IN in)
                  (NP
                    (NP (NN sequence))
                    (PP (IN with)
                      (NP (DT the) (NN leaf)))))))))))
    (. .)))

det(plant-2, the-1)
nsubj(put-4, plant-2)
aux(put-4, had-3)
root(ROOT-0, put-4)
prt(put-4, forth-5)
det(flower-7, a-6)
dobj(put-4, flower-7)
nsubj(was-9, flower-7)
rcmod(flower-7, was-9)
neg(was-9, not-10)
prep_in(was-9, sequence-12)
det(leaf-15, the-14)
prep_with(sequence-12, leaf-15)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN cause))
        (PP (IN of)
          (NP (PRP$ his) (VBG appearing) (JJ different))))
      (VP (MD might)
        (VP (VB lie)
          (PP (IN in)
            (NP (PRP herself))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (DT any) (NN case)))
      (NP (PRP he))
      (VP (VBD was) (RB not)
        (NP
          (NP (DT the) (NN gentleman))
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN thought))))))))
    (. !)))

det(cause-2, The-1)
nsubj(lie-8, cause-2)
poss(different-6, his-4)
amod(different-6, appearing-5)
prep_of(cause-2, different-6)
aux(lie-8, might-7)
root(ROOT-0, lie-8)
prep_in(lie-8, herself-10)
det(case-15, any-14)
prep_in(gentleman-20, case-15)
nsubj(gentleman-20, he-16)
cop(gentleman-20, was-17)
neg(gentleman-20, not-18)
det(gentleman-20, the-19)
conj_but(lie-8, gentleman-20)
nsubj(thought-23, she-21)
aux(thought-23, had-22)
rcmod(gentleman-20, thought-23)

(ROOT
  (S
    (S
      (SBAR
        (SINV (VBD Had)
          (NP (PRP she))
          (VP (VBN loved)
            (NP (PRP him)))))
      (, ,)
      (NP (PRP she))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN stood)
            (PP (IN by)
              (NP (PRP him)))
            (ADVP (RB bravely))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB now))
      (NP (PRP she))
      (VP (MD could) (RB not)
        (VP (VB help)
          (S
            (S
              (VP (VBG recalling)
                (NP
                  (NP (DT the) (NN disgrace))
                  (PP (IN of)
                    (NP (DT the) (NN father))))))
            (, ,)
            (CC and)
            (S
              (VP (VBN shrunk)
                (PP (IN from)
                  (S
                    (VP (VBG sharing)
                      (NP (PRP it))
                      (PP (IN with)
                        (NP (DT the) (NN son))))))))))))
    (. .)))

aux(loved-3, Had-1)
nsubj(loved-3, she-2)
advcl(stood-9, loved-3)
dobj(loved-3, him-4)
nsubj(stood-9, she-6)
aux(stood-9, would-7)
aux(stood-9, have-8)
root(ROOT-0, stood-9)
prep_by(stood-9, him-11)
advmod(stood-9, bravely-12)
advmod(help-19, now-15)
nsubj(help-19, she-16)
aux(help-19, could-17)
neg(help-19, not-18)
conj_but(stood-9, help-19)
dep(help-19, recalling-20)
det(disgrace-22, the-21)
dobj(recalling-20, disgrace-22)
det(father-25, the-24)
prep_of(disgrace-22, father-25)
dep(help-19, shrunk-28)
conj_and(recalling-20, shrunk-28)
prepc_from(shrunk-28, sharing-30)
dobj(sharing-30, it-31)
det(son-34, the-33)
prep_with(sharing-30, son-34)

(ROOT
  (SQ (MD Would)
    (NP (PRP it))
    (VP (VB be)
      (NP (DT any) (NN wonder))
      (SBAR (IN if)
        (S
          (NP
            (NP (DT the) (NN son))
            (NP (PRP himself)))
          (VP (VBD proved)
            (NP
              (QP (JJR less) (IN than) (CD honorable)))))))
    (. ?)))

aux(wonder-5, Would-1)
nsubj(wonder-5, it-2)
cop(wonder-5, be-3)
det(wonder-5, any-4)
root(ROOT-0, wonder-5)
mark(proved-10, if-6)
det(son-8, the-7)
nsubj(proved-10, son-8)
npadvmod(son-8, himself-9)
advcl(wonder-5, proved-10)
mwe(than-12, less-11)
quantmod(honorable-13, than-12)
dobj(proved-10, honorable-13)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN broken)
            (PP (IN with)
              (NP (PRP him)))
            (ADVP
              (ADVP (RB quite) (RB but))
              (PP (IN for)
                (NP (CD one) (NN thing))))))))
    (: :)
    (S
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN become)
            (ADJP (JJ intimate))
            (PP (IN with)
              (NP (PRP$ her) (NN father))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN laird))
        (VP (VBD enjoyed)
          (NP (PRP$ his) (NN company)))))
    (. .)))

nsubj(broken-4, She-1)
aux(broken-4, would-2)
aux(broken-4, have-3)
root(ROOT-0, broken-4)
prep_with(broken-4, him-6)
advmod(but-8, quite-7)
advmod(broken-4, but-8)
num(thing-11, one-10)
prep_for(but-8, thing-11)
nsubj(become-15, he-13)
aux(become-15, had-14)
parataxis(broken-4, become-15)
acomp(become-15, intimate-16)
poss(father-19, her-18)
prep_with(become-15, father-19)
det(laird-23, the-22)
nsubj(enjoyed-24, laird-23)
parataxis(broken-4, enjoyed-24)
conj_and(become-15, enjoyed-24)
poss(company-26, his-25)
dobj(enjoyed-24, company-26)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD had)
        (NP
          (NP (DT a) (JJ large) (NN straggling) (NN acquaintance))
          (PP (IN with)
            (NP (NNS things)))))
      (, ,)
      (CC and)
      (VP (MD could)
        (ADVP (RB readily))
        (VP (VB appear)
          (S
            (VP (TO to)
              (VP (VB know)
                (ADVP
                  (ADVP (RBR more))
                  (SBAR (IN than)
                    (S
                      (NP (PRP he))
                      (VP (VBD did)))))))))))
    (. .)))

nsubj(had-2, George-1)
nsubj(appear-13, George-1)
nsubj(know-15, George-1)
root(ROOT-0, had-2)
det(acquaintance-6, a-3)
amod(acquaintance-6, large-4)
nn(acquaintance-6, straggling-5)
dobj(had-2, acquaintance-6)
prep_with(acquaintance-6, things-8)
aux(appear-13, could-11)
advmod(appear-13, readily-12)
conj_and(had-2, appear-13)
aux(know-15, to-14)
xcomp(appear-13, know-15)
advmod(know-15, more-16)
mark(did-19, than-17)
nsubj(did-19, he-18)
advcl(more-16, did-19)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was) (, ,)
      (PP (IN besides))
      (, ,)
      (NP
        (NP (DT that)
          (ADJP (RBS most) (JJ agreeable))
          (NN person))
        (PP (TO to)
          (NP
            (NP
              (NP (DT a) (NN man))
              (PP (IN with)
                (NP
                  (NP (DT a) (NN hobby))
                  (, ,)
                  (NP (DT a) (JJ good) (NN listener)))))
            (: --)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP he))
                (VP (VBD saw)
                  (NP (NN reason)))))))))
    (. .)))

nsubj(person-9, He-1)
cop(person-9, was-2)
prep(person-9, besides-4)
det(person-9, that-6)
advmod(agreeable-8, most-7)
amod(person-9, agreeable-8)
root(ROOT-0, person-9)
det(man-12, a-11)
prep_to(person-9, man-12)
tmod(saw-23, man-12)
det(hobby-15, a-14)
prep_with(man-12, hobby-15)
det(listener-19, a-17)
amod(listener-19, good-18)
appos(hobby-15, listener-19)
advmod(saw-23, when-21)
nsubj(saw-23, he-22)
rcmod(man-12, saw-23)
dobj(saw-23, reason-24)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD made)
          (S
            (NP (PRP himself))
            (ADJP
              (ADJP (RB so) (JJ pleasant))
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN laird))
                  (VP (VBD was) (RB not)
                    (ADJP
                      (ADVP (RB only) (RB always))
                      (JJ glad)
                      (S
                        (VP (TO to)
                          (VP (VB see)
                            (NP (PRP him))))))))))))
        (, ,)
        (CC but)
        (VP (MD would)
          (ADVP (RB often))
          (VP (VB ask)
            (S
              (NP (PRP him))
              (VP (TO to)
                (VP (VB stay)
                  (PP (TO to)
                    (NP (NN supper))))))))))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (MD would)
            (VP (VB fish)
              (PRT (RP up))
              (PP (IN from)
                (NP (DT the) (NN wine-cellar)))))))
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN inherited)
          (NP (DT a) (NN bottle))
          (PP (IN with)
            (NP
              (NP (DT a) (NN history))
              (CC and)
              (NP (DT a) (NN character)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (CD two))
      (VP (MD would)
        (VP (VB pass)
          (NP (DT the) (NN evening))
          (ADVP (RB together))
          (PRN (, ,)
            (S
              (NP (NNP Alexa))
              (VP (VBG trying)
                (S (RB not)
                  (VP (TO to)
                    (VP (VB wish)
                      (NP (PRP him))
                      (ADVP (RB away)))))))
            (, ,))
          (SBAR (IN for)
            (S
              (VP (VBD was) (RB not)
                (NP
                  (NP (PRP$ her)
                    (ADJP (JJ poor) (JJ old))
                    (NN father))
                  (ADJP (JJ happy)
                    (PP (IN with)
                      (NP (PRP him)))))))))))
    (. !)))

nsubj(made-2, He-1)
nsubj(ask-21, He-1)
root(ROOT-0, made-2)
nsubj(pleasant-5, himself-3)
advmod(pleasant-5, so-4)
xcomp(made-2, pleasant-5)
mark(glad-13, that-6)
det(laird-8, the-7)
nsubj(glad-13, laird-8)
nsubj(see-15, laird-8)
cop(glad-13, was-9)
neg(glad-13, not-10)
advmod(always-12, only-11)
advmod(glad-13, always-12)
ccomp(pleasant-5, glad-13)
aux(see-15, to-14)
xcomp(glad-13, see-15)
dobj(see-15, him-16)
aux(ask-21, would-19)
advmod(ask-21, often-20)
conj_but(made-2, ask-21)
dobj(ask-21, him-22)
nsubj(stay-24, him-22)
aux(stay-24, to-23)
xcomp(ask-21, stay-24)
prep_to(stay-24, supper-26)
advmod(fish-31, when-28)
nsubj(fish-31, he-29)
aux(fish-31, would-30)
advcl(inherited-38, fish-31)
prt(fish-31, up-32)
det(wine-cellar-35, the-34)
prep_from(fish-31, wine-cellar-35)
nsubj(inherited-38, he-36)
aux(inherited-38, had-37)
ccomp(made-2, inherited-38)
conj_but(made-2, inherited-38)
det(bottle-40, a-39)
dobj(inherited-38, bottle-40)
det(history-43, a-42)
prep_with(inherited-38, history-43)
det(character-46, a-45)
prep_with(inherited-38, character-46)
conj_and(history-43, character-46)
det(two-50, the-49)
nsubj(pass-52, two-50)
aux(pass-52, would-51)
conj_and(made-2, pass-52)
det(evening-54, the-53)
tmod(pass-52, evening-54)
advmod(pass-52, together-55)
nsubj(trying-58, Alexa-57)
nsubj(wish-61, Alexa-57)
parataxis(pass-52, trying-58)
neg(wish-61, not-59)
aux(wish-61, to-60)
xcomp(trying-58, wish-61)
dobj(wish-61, him-62)
advmod(wish-61, away-63)
mark(father-71, for-65)
cop(father-71, was-66)
neg(father-71, not-67)
poss(father-71, her-68)
amod(old-70, poor-69)
amod(father-71, old-70)
advcl(pass-52, father-71)
amod(father-71, happy-72)
prep_with(happy-72, him-74)

(ROOT
  (SINV
    (S
      (SBAR (IN Though)
        (S
          (PP (IN without)
            (NP
              (NP (JJ much) (NN pleasure))
              (PP (IN of)
                (NP (PRP$ his) (JJ own)))
              (PP (IN in)
                (NP (JJ such) (NNS things)))))
          (, ,)
          (S
            (NP
              (NP (NNP George))
              (, ,)
              (VP (VBN moved)
                (PP (IN by)
                  (NP
                    (NP (DT the) (NN reflection))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN laird) (POS 's))
                        (NN interest))))))
              (, ,))
            (ADVP (RB even))
            (VP (VBD began)
              (S
                (VP (TO to)
                  (VP
                    (ADVP (RB _))
                    (VB collect)
                    (S
                      (VP (VBG _)
                        (NP (DT a) (JJ little))
                        (, ,)
                        (PP
                          (ADVP (RB mainly))
                          (IN in)
                          (NP
                            (NP (DT the) (NN hope))
                            (PP (IN of)
                              (S
                                (VP (VBG picking)
                                  (PRT (RP up))
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (VP (MD might)
                                        (VP (VB gratify)
                                          (NP (DT the) (NN laird))))))))))))))))))
          (: ;)
          (S (CC nor)
            (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP he))
                (VP (VBD came)
                  (PP (IN upon)
                    (NP (DT a) (NN thing))))))
            (NP (PRP he))
            (VP (VBZ _)))))
      (VP (MD must)
        (VP (VB _)
          (NP (NN covet)))))
    (, ,)
    (VP (MD would)
      (VP (VB hesitate)
        (S
          (VP (TO to)
            (VP (VB spend)
              (PP (IN on)
                (NP (PRP it))))))))
    (NP (DT a) (JJ good) (NN sum))
    (. .)))

mark(began-25, Though-1)
amod(pleasure-4, much-3)
prep_without(began-25, pleasure-4)
poss(own-7, his-6)
prep_of(pleasure-4, own-7)
amod(things-10, such-9)
prep_in(pleasure-4, things-10)
nsubj(began-25, George-12)
nsubj(collect-28, George-12)
vmod(George-12, moved-14)
det(reflection-17, the-16)
agent(moved-14, reflection-17)
det(laird-20, the-19)
poss(interest-22, laird-20)
prep_of(reflection-17, interest-22)
advmod(began-25, even-24)
csubj(_-57, began-25)
aux(collect-28, to-26)
advmod(collect-28, _-27)
xcomp(began-25, collect-28)
xcomp(collect-28, _-29)
det(little-31, a-30)
dobj(_-29, little-31)
advmod(_-29, mainly-33)
det(hope-36, the-35)
prep_in(_-29, hope-36)
prepc_of(hope-36, picking-38)
prt(picking-38, up-39)
nsubj(gratify-42, what-40)
aux(gratify-42, might-41)
ccomp(picking-38, gratify-42)
det(laird-44, the-43)
dobj(gratify-42, laird-44)
cc(_-55, nor-46)
mark(came-50, if-48)
nsubj(came-50, he-49)
advcl(_-55, came-50)
det(thing-53, a-52)
prep_upon(came-50, thing-53)
nsubj(_-55, he-54)
parataxis(began-25, _-55)
aux(_-57, must-56)
ccomp(hesitate-61, _-57)
dobj(_-57, covet-58)
aux(hesitate-61, would-60)
root(ROOT-0, hesitate-61)
aux(spend-63, to-62)
xcomp(hesitate-61, spend-63)
prep_on(spend-63, it-65)
det(sum-68, a-66)
amod(sum-68, good-67)
nsubj(hesitate-61, sum-68)
nsubj(spend-63, sum-68)

(ROOT
  (S
    (ADVP (RB Naturally))
    (NP (DT the) (JJ old) (NN man))
    (VP (VBD grew)
      (S
        (VP (TO to)
          (VP (VB regard)
            (NP (PRP him))
            (PP (IN as)
              (NP
                (NP (DT a) (NN son))
                (PP (IN of)
                  (NP
                    (NP (DT the) (JJS best) (NN sort))
                    (, ,)
                    (NP
                      (NP (CD one))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (MD would)
                            (VP (VB do)
                              (NP (NN anything))
                              (S
                                (VP (TO to)
                                  (VP
                                    (VP (VB please)
                                      (NP (PRP$ his) (NN father)))
                                    (CC and)
                                    (VP (VB indulge)
                                      (NP (PRP$ his) (NNS tastes)))))))))))))))))))
    (. .)))

advmod(grew-5, Naturally-1)
det(man-4, the-2)
amod(man-4, old-3)
nsubj(grew-5, man-4)
nsubj(regard-7, man-4)
root(ROOT-0, grew-5)
aux(regard-7, to-6)
xcomp(grew-5, regard-7)
dobj(regard-7, him-8)
det(son-11, a-10)
prep_as(regard-7, son-11)
det(sort-15, the-13)
amod(sort-15, best-14)
prep_of(son-11, sort-15)
appos(sort-15, one-17)
nsubj(do-20, one-17)
aux(do-20, would-19)
rcmod(one-17, do-20)
dobj(do-20, anything-21)
aux(please-23, to-22)
vmod(do-20, please-23)
poss(father-25, his-24)
dobj(please-23, father-25)
vmod(do-20, indulge-27)
conj_and(please-23, indulge-27)
poss(tastes-29, his-28)
dobj(indulge-27, tastes-29)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD may)
        (VP (VB seem)
          (ADJP (JJ surprising))
          (SBAR (IN that)
            (S
              (NP
                (NP (PDT such) (DT a) (NN man))
                (PP (IN as)
                  (NP (NNP George))))
              (VP (MD should)
                (VP (VB have)
                  (VP (VBN remained)
                    (S
                      (ADJP (RB so) (JJ true)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (NP
          (NP (DT a) (JJ bull-dog) (NN tenacity))
          (PP (IN of)
            (NP (NN purpose))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (RB indeed) (PRP$ his) (NNS money-making))
            (VP (VBD indicated))))))
    (. .)))

nsubj(seem-3, It-1)
aux(seem-3, may-2)
root(ROOT-0, seem-3)
acomp(seem-3, surprising-4)
mark(remained-13, that-5)
predet(man-8, such-6)
det(man-8, a-7)
nsubj(remained-13, man-8)
prep_as(man-8, George-10)
aux(remained-13, should-11)
aux(remained-13, have-12)
ccomp(seem-3, remained-13)
advmod(true-15, so-14)
acomp(remained-13, true-15)
nsubj(had-19, he-18)
conj_but(seem-3, had-19)
det(tenacity-22, a-20)
amod(tenacity-22, bull-dog-21)
dobj(had-19, tenacity-22)
prep_of(tenacity-22, purpose-24)
mark(indicated-30, as-26)
advmod(money-making-29, indeed-27)
poss(money-making-29, his-28)
nsubj(indicated-30, money-making-29)
advcl(had-19, indicated-30)

(ROOT
  (S (RB Then)
    (NP (EX there))
    (VP (VBD was)
      (ADJP (JJ good)
        (PP (IN in)
          (NP (PRP him))))
      (PP (TO to)
        (NP
          (NP (DT the) (NN measure))
          (PP (IN of)
            (S
              (VP
                (VP (VBG admiring)
                  (NP (DT a) (NN woman))
                  (PP (IN like)
                    (NP (NNP Alexa)))
                  (, ,)
                  (ADVP (RB though)))
                (CONJP (RB not) (IN of))
                (VP (VBG admiring)
                  (NP (DT a)
                    (ADJP (RB far) (JJR better))))))))))
    (. .)))

advmod(was-3, Then-1)
expl(was-3, there-2)
root(ROOT-0, was-3)
acomp(was-3, good-4)
prep_in(good-4, him-6)
det(measure-9, the-8)
prep_to(was-3, measure-9)
prepc_of(measure-9, admiring-11)
det(woman-13, a-12)
dobj(admiring-11, woman-13)
prep_like(admiring-11, Alexa-15)
advmod(admiring-11, though-17)
prepc_of(measure-9, admiring-20)
conj_negcc(admiring-11, admiring-20)
det(better-23, a-21)
advmod(better-23, far-22)
dobj(admiring-20, better-23)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD saw)
        (NP (PRP himself))
        (PP (IN in)
          (NP
            (NP (NN danger))
            (PP (IN of)
              (S
                (VP (VBG losing)
                  (NP (PRP her)))))))))
    (: ;)
    (SINV
      (VP (VBD concluded)
        (SBAR
          (S
            (NP
              (NP (NNS influences))
              (PP (IN at)
                (NP
                  (NP (NN work))
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN frustration))
                      (PP (IN of)
                        (NP (PRP$ his) (JJ own)))))))
              (: ;)
              (VP (VBN surmised)
                (SBAR (IN that)
                  (S
                    (NP (PRP she))
                    (VP (VBD doubted)
                      (NP
                        (NP (DT the) (NN character))
                        (PP (IN of)
                          (NP (PRP$ his) (NN business))))))))
              (: ;))
            (VP (VBD feared)
              (SBAR
                (S
                  (NP (DT the) (JJ clownish) (NN farmer-poet))
                  (VP (MD might)
                    (VP (VB have)
                      (VP (VBN dazzled)
                        (PP (IN with)
                          (NP (PRP$ his) (JJ new) (NN reputation))))))))))))
      (NP (PRP$ her) (JJ womanly) (NN judgment)))
    (: ;)
    (CC and)
    (S
      (S
        (VP (VBD felt)
          (SBAR
            (S
              (NP (PRP himself))
              (VP (VBD called)
                (PRT (RP upon))
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (S
                        (ADJP (JJ good))
                        (NP
                          (NP (PRP$ his) (NN position))
                          (PP (IN against)
                            (NP
                              (ADJP (DT any)
                                (CC and)
                                (DT every))
                              (NN prejudice)))))))))))))
      (NP (PRP she))
      (VP (MD might)
        (VP (VB have)
          (VP (VBN conceived)
            (PP (IN against)
              (NP (PRP him)))))))
    (. !)))

nsubj(saw-2, He-1)
root(ROOT-0, saw-2)
dobj(saw-2, himself-3)
prep_in(saw-2, danger-5)
prepc_of(danger-5, losing-7)
dobj(losing-7, her-8)
conj_and(saw-2, concluded-10)
nsubj(feared-31, influences-11)
prep_at(influences-11, work-13)
det(frustration-16, the-15)
prep_to(work-13, frustration-16)
poss(own-19, his-18)
prep_of(frustration-16, own-19)
vmod(influences-11, surmised-21)
mark(doubted-24, that-22)
nsubj(doubted-24, she-23)
ccomp(surmised-21, doubted-24)
det(character-26, the-25)
dobj(doubted-24, character-26)
poss(business-29, his-28)
prep_of(character-26, business-29)
ccomp(concluded-10, feared-31)
det(farmer-poet-34, the-32)
amod(farmer-poet-34, clownish-33)
nsubj(dazzled-37, farmer-poet-34)
aux(dazzled-37, might-35)
aux(dazzled-37, have-36)
ccomp(feared-31, dazzled-37)
poss(reputation-41, his-39)
amod(reputation-41, new-40)
prep_with(dazzled-37, reputation-41)
poss(judgment-44, her-42)
amod(judgment-44, womanly-43)
nsubj(concluded-10, judgment-44)
dep(conceived-64, felt-47)
nsubj(called-49, himself-48)
nsubj(make-52, himself-48)
ccomp(felt-47, called-49)
prt(called-49, upon-50)
aux(make-52, to-51)
xcomp(called-49, make-52)
acomp(make-52, good-53)
poss(position-55, his-54)
dep(good-53, position-55)
amod(prejudice-60, any-57)
conj_and(any-57, every-59)
amod(prejudice-60, every-59)
prep_against(position-55, prejudice-60)
nsubj(conceived-64, she-61)
aux(conceived-64, might-62)
aux(conceived-64, have-63)
conj_and(saw-2, conceived-64)
prep_against(conceived-64, him-66)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP (VB yield)
        (NP (NN nothing))))
    (. !)))

nsubj(yield-3, He-1)
aux(yield-3, would-2)
root(ROOT-0, yield-3)
dobj(yield-3, nothing-4)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP he))
          (VP (VBD was)
            (VP (JJ foiled)))))
      (NP (PRP he))
      (VP (VBD was)
        (VP (JJ foiled))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD should) (RB not)
        (VP (VB be)
          (NP (PRP$ his) (NN fault)))))
    (. !)))

mark(foiled-4, If-1)
nsubj(foiled-4, he-2)
aux(foiled-4, was-3)
advcl(foiled-7, foiled-4)
nsubj(foiled-7, he-5)
aux(foiled-7, was-6)
root(ROOT-0, foiled-7)
nsubj(fault-15, it-10)
aux(fault-15, should-11)
neg(fault-15, not-12)
cop(fault-15, be-13)
poss(fault-15, his-14)
conj_but(foiled-7, fault-15)

(ROOT
  (S
    (NP (PRP$ His) (JJ own) (NN phrase))
    (VP
      (VP (VBD was))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD would) (RB not)
            (VP (VB throw)
              (PRT (RP up))
              (NP (DT the) (NN sponge))
              (ADVP
                (ADVP (RB so) (RB long))
                (SBAR (IN as)
                  (S
                    (NP (PRP he))
                    (VP (MD could)
                      (VP (VB come)
                        (PRT (RP up))
                        (NP (NN grinning))))))))))))
    (. .)))

poss(phrase-3, His-1)
amod(phrase-3, own-2)
nsubj(was-4, phrase-3)
root(ROOT-0, was-4)
mark(throw-10, that-6)
nsubj(throw-10, he-7)
aux(throw-10, would-8)
neg(throw-10, not-9)
ccomp(was-4, throw-10)
prt(throw-10, up-11)
det(sponge-13, the-12)
dobj(throw-10, sponge-13)
advmod(long-15, so-14)
advmod(throw-10, long-15)
mark(come-19, as-16)
nsubj(come-19, he-17)
aux(come-19, could-18)
advcl(long-15, come-19)
ccomp(long-15, come-19)
prt(come-19, up-20)
dobj(come-19, grinning-21)

(ROOT
  (SINV
    (S
      (NP (PRP He))
      (VP (VBD had)
        (NP
          (NP (JJ occasional) (NNS twinges))
          (PP (IN of)
            (NP (NN discomfort))))
        (, ,)
        (PP (IN for)
          (NP (PRP$ his) (NN conscience)))
        (, ,)
        (SBAR (IN although)
          (S
            (VP (VBD seared)
              (ADVP (RB indeed)))))))
    (, ,)
    (VP (VBD was) (RB not)
      (VP (VBN seared)
        (PP (IN as)
          (PP (IN with)
            (NP (DT the) (JJS hottest) (NN iron))))
        (, ,)
        (S
          (VP (VBG seeing)
            (S
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (ADVP (RB never))
                  (VP (VBN looked)
                    (PP (RB straight) (IN at)
                      (NP (DT any) (NN truth))))))
              (: :)
              (S
                (NP (PRP it))
                (VP (MD would)
                  (VP (VB ease)
                    (NP (DT those) (NNS twinges)))))
              (, ,)
              (S
                (NP (PRP he))
                (ADVP (RB vaguely))
                (VP (VBD imagined))))))
        (, ,)
        (S (RB so)
          (VP (TO to)
            (VP (VB satisfy)
              (NP (DT a) (JJ good) (NN woman))
              (PP (IN like)
                (NP (NNP Alexa)))
              (, ,)
              (SBAR (IN that)
                (S
                  (NP (PRP she))
                  (VP (VBD made)
                    (NP (JJ common) (NN cause))
                    (PP (IN with)
                      (NP (PRP him)))
                    (, ,)
                    (S
                      (VP (VBG accepting)
                        (NP
                          (CONJP (RB not) (RB merely))
                          (NP (PRP himself))
                          (, ,)
                          (CC but)
                          (NP
                            (NP (DT the) (NN money))
                            (SBAR
                              (WHPP (IN of)
                                (WHNP (WDT which)))
                              (S
                                (NP (PRP he))
                                (VP (VBD had)
                                  (PP (IN at)
                                    (NP (JJ such) (NNS times))))))))))))))))))
    (NP (DT a) (JJ slight) (NN loathing))
    (. .)))

nsubj(had-2, He-1)
ccomp(seared-18, had-2)
amod(twinges-4, occasional-3)
dobj(had-2, twinges-4)
prep_of(twinges-4, discomfort-6)
poss(conscience-10, his-9)
prep_for(had-2, conscience-10)
mark(seared-13, although-12)
advcl(had-2, seared-13)
advmod(seared-13, indeed-14)
auxpass(seared-18, was-16)
neg(seared-18, not-17)
root(ROOT-0, seared-18)
prep(seared-18, as-19)
pcomp(as-19, with-20)
det(iron-23, the-21)
amod(iron-23, hottest-22)
pobj(with-20, iron-23)
xcomp(seared-18, seeing-25)
nsubj(looked-29, he-26)
aux(looked-29, had-27)
neg(looked-29, never-28)
dep(seeing-25, looked-29)
advmod(looked-29, straight-30)
det(truth-33, any-32)
prep_at(looked-29, truth-33)
nsubj(ease-37, it-35)
aux(ease-37, would-36)
parataxis(looked-29, ease-37)
det(twinges-39, those-38)
dobj(ease-37, twinges-39)
nsubj(imagined-43, he-41)
advmod(imagined-43, vaguely-42)
parataxis(looked-29, imagined-43)
advmod(satisfy-47, so-45)
aux(satisfy-47, to-46)
xcomp(seared-18, satisfy-47)
det(woman-50, a-48)
amod(woman-50, good-49)
dobj(satisfy-47, woman-50)
prep_like(satisfy-47, Alexa-52)
mark(made-56, that-54)
nsubj(made-56, she-55)
ccomp(satisfy-47, made-56)
amod(cause-58, common-57)
dobj(made-56, cause-58)
prep_with(made-56, him-60)
vmod(made-56, accepting-62)
neg(merely-64, not-63)
preconj(himself-65, merely-64)
dobj(accepting-62, himself-65)
det(money-69, the-68)
dobj(accepting-62, money-69)
conj_but(himself-65, money-69)
prep_of(had-73, money-69)
nsubj(had-73, he-72)
rcmod(money-69, had-73)
amod(times-76, such-75)
prep_at(had-73, times-76)
det(loathing-79, a-77)
amod(loathing-79, slight-78)
nsubjpass(seared-18, loathing-79)
nsubj(satisfy-47, loathing-79)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (NNP Alexa))
      (VP (VBD was)
        (NP
          (NP (JJ handsome))
          (: --)
          (S
            (NP (PRP he))
            (VP (VBD thought)
              (NP (PRP$ her) (JJ _)
                (ADJP (RB very) (JJ _))
                (NNS handsome)))))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (ADJP (JJ true)
        (PP (TO to)
          (NP (NNP Mammon)))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (MD would)
        (ADVP (RB gladly))
        (VP (VB be)
          (ADJP (JJ true)
            (ADVP (RB also))
            (PP (TO to)
              (NP (NN something))))
          (ADVP (RBR better)))))
    (. .)))

advmod(handsome-4, Then-1)
nsubj(handsome-4, Alexa-2)
nsubj(true-16, Alexa-2)
cop(handsome-4, was-3)
root(ROOT-0, handsome-4)
nsubj(thought-7, he-6)
dep(handsome-4, thought-7)
poss(handsome-12, her-8)
amod(handsome-12, _-9)
advmod(_-11, very-10)
amod(handsome-12, _-11)
dobj(thought-7, handsome-12)
conj_and(handsome-4, true-16)
prep_to(true-16, Mammon-18)
nsubj(true-24, he-20)
aux(true-24, would-21)
advmod(true-24, gladly-22)
cop(true-24, be-23)
conj_and(handsome-4, true-24)
parataxis(handsome-4, true-24)
advmod(true-24, also-25)
prep_to(true-24, something-27)
advmod(true-24, better-28)

(ROOT
  (S
    (S
      (NP (EX There))
      (ADVP (RB _))
      (VP (MD might)
        (VP (VB be)
          (VP (VBG _)
            (NP (DT another) (NN camp))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD would)
        (VP (VB be)
          (ADVP (RB well))
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (NNS friends))
                  (PP (IN in)
                    (NP (DT that))))
                (ADVP (RB too))))))))
    (. !)))

expl(_-5, There-1)
advmod(_-5, _-2)
aux(_-5, might-3)
aux(_-5, be-4)
root(ROOT-0, _-5)
det(camp-7, another-6)
dobj(_-5, camp-7)
nsubj(_-5, camp-7)
nsubj(be-12, it-10)
nsubj(have-15, it-10)
aux(be-12, would-11)
conj_and(_-5, be-12)
advmod(be-12, well-13)
aux(have-15, to-14)
xcomp(be-12, have-15)
dobj(have-15, friends-16)
prep_in(friends-16, that-18)
advmod(have-15, too-19)

(ROOT
  (S (CC So)
    (PP (IN unlike)
      (NP (NNP Andrew)))
    (, ,)
    (SBAR
      (WHADVP (WRB how))
      (S
        (VP (MD could))))
    (NP (PRP he))
    (ADVP (CC but))
    (VP (VBP dislike)
      (NP (PRP him)))
    (. !)))

cc(dislike-9, So-1)
prep_unlike(dislike-9, Andrew-3)
advmod(could-6, how-5)
advcl(dislike-9, could-6)
nsubj(dislike-9, he-7)
advmod(dislike-9, but-8)
root(ROOT-0, dislike-9)
dobj(dislike-9, him-10)

(ROOT
  (S (CC and)
    (NP (PRP$ his) (NN dislike) (NN jealousy))
    (VP (VBD fostered)
      (PP (IN into)
        (NP (NN hatred))))
    (. .)))

cc(fostered-5, and-1)
poss(jealousy-4, his-2)
nn(jealousy-4, dislike-3)
nsubj(fostered-5, jealousy-4)
root(ROOT-0, fostered-5)
prep_into(fostered-5, hatred-7)

(ROOT
  (FRAG
    (ADJP (JJ Cowed)
      (PP (IN before)
        (NP (PRP him))))
    (, ,)
    (PP (IN like)
      (NP
        (NP (NNP Macbeth))
        (PP (IN before)
          (NP (NNP Banquo)))))
    (, ,)
    (SBAR (IN because)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD was)
            (NP
              (NP (DT an) (JJ honest) (NN man))
              (, ,)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (VP (MD could))
                  (NP (PRP he))))))
          (CC but)
          (VP (VBP hate)
            (NP (PRP him))))))
    (. !)))

root(ROOT-0, Cowed-1)
prep_before(Cowed-1, him-3)
prep_like(Cowed-1, Macbeth-6)
prep_before(Macbeth-6, Banquo-8)
mark(man-15, because-10)
nsubj(man-15, he-11)
nsubj(hate-21, he-11)
cop(man-15, was-12)
det(man-15, an-13)
amod(man-15, honest-14)
dep(Cowed-1, man-15)
advmod(could-18, how-17)
dep(man-15, could-18)
dep(could-18, he-19)
dep(Cowed-1, hate-21)
conj_but(man-15, hate-21)
dobj(hate-21, him-22)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD called)
        (NP (PRP him)))
      (, ,)
      (CC and)
      (VP (VBD thought)
        (S
          (NP (PRP him))
          (NP (DT a) (NN canting))))
      (, ,)
      (S
        (VP
          (VP (VBG sneaking)
            (NP
              (NP (NN fellow))
              (PRN (: --)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP he))
                    (VP
                      (VP (VBD was))
                      (, ,)
                      (SBAR (IN if)
                        (S
                          (NP (NN canting))
                          (VP (VBP consist)
                            (PP (IN in)
                              (S
                                (VP
                                  (VP (VBG giving)
                                    (NP (NNP God))
                                    (NP (PRP$ His) (JJ own)))
                                  (, ,)
                                  (CC and)
                                  (VP (VBG sneaking)
                                    (S
                                      (VP (VB consist)
                                        (PP (IN in)
                                          (S
                                            (VP (VBG fearing)
                                              (NP (DT no) (NN man)))))))))))))))))
                (: --))
              (PP (IN in)
                (S
                  (VP (VBG fearing)
                    (NP (NN nothing))))))
            (, ,)
            (ADVP (RB indeed)))
          (, ,)
          (CC but)
          (VP (VBG doing)
            (ADJP (JJ wrong))))))
    (. .)))

nsubj(called-2, He-1)
nsubj(thought-6, He-1)
nsubj(sneaking-11, He-1)
root(ROOT-0, called-2)
dobj(called-2, him-3)
conj_and(called-2, thought-6)
nsubj(canting-9, him-7)
det(canting-9, a-8)
xcomp(thought-6, canting-9)
ccomp(called-2, sneaking-11)
conj_and(called-2, sneaking-11)
dobj(sneaking-11, fellow-12)
dobj(was-16, which-14)
nsubj(was-16, he-15)
dep(fellow-12, was-16)
mark(consist-20, if-18)
nsubj(consist-20, canting-19)
advcl(was-16, consist-20)
prepc_in(consist-20, giving-22)
iobj(giving-22, God-23)
poss(own-25, His-24)
dobj(giving-22, own-25)
prepc_in(consist-20, sneaking-28)
conj_and(giving-22, sneaking-28)
ccomp(sneaking-28, consist-29)
prepc_in(consist-29, fearing-31)
neg(man-33, no-32)
dobj(fearing-31, man-33)
prepc_in(fellow-12, fearing-36)
dobj(fearing-36, nothing-37)
advmod(sneaking-11, indeed-39)
ccomp(called-2, doing-42)
conj_and(called-2, doing-42)
conj_but(sneaking-11, doing-42)
acomp(doing-42, wrong-43)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (NNP George))
      (VP (VB consent)
        (ADVP (RB even))
        (PP (TO to)
          (NP
            (NP (DT the) (JJ far-off) (NN existence))
            (PP (IN of)
              (NP (PDT such) (DT a) (NN man))))))
      (. !))))

advmod(consent-4, How-1)
aux(consent-4, could-2)
nsubj(consent-4, George-3)
root(ROOT-0, consent-4)
advmod(consent-4, even-5)
det(existence-9, the-7)
amod(existence-9, far-off-8)
prep_to(consent-4, existence-9)
predet(man-13, such-11)
det(man-13, a-12)
prep_of(existence-9, man-13)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (ADVP (RB also))
    (VP (VBD had)
      (VP (VBN taken)
        (NP (DT a) (NN dislike))
        (PP (TO to)
          (NP (PRP him)))))
    (. .)))

det(laird-2, The-1)
nsubj(taken-5, laird-2)
advmod(taken-5, also-3)
aux(taken-5, had-4)
root(ROOT-0, taken-5)
det(dislike-7, a-6)
dobj(taken-5, dislike-7)
prep_to(taken-5, him-9)

(ROOT
  (S
    (PP (IN From)
      (NP
        (NP (DT the) (NN night))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NNP Dawtie))
            (VP (VBD made)
              (NP (PRP$ her) (NN appeal)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD had) (RB not)
      (VP (VBN known)
        (NP
          (NP (DT an) (NN hour) (POS 's))
          (NN peace))))
    (. .)))

det(night-3, the-2)
tmod(made-6, night-3)
prep_from(known-13, night-3)
advmod(made-6, when-4)
nsubj(made-6, Dawtie-5)
rcmod(night-3, made-6)
poss(appeal-8, her-7)
dobj(made-6, appeal-8)
nsubj(known-13, he-10)
aux(known-13, had-11)
neg(known-13, not-12)
root(ROOT-0, known-13)
det(hour-15, an-14)
poss(peace-17, hour-15)
dobj(known-13, peace-17)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (SBAR (RB not) (IN that)
          (S
            (NP (PRP it))
            (VP (VBD had)
              (VP (VBN waked)
                (NP (PRP$ his) (NN conscience))
                (, ,)
                (SBAR (IN though)
                  (S
                    (NP (PRP it))
                    (VP (VBD had)
                      (VP (VBN made)
                        (S
                          (NP (PRP it))
                          (VP (VB sleep)
                            (NP (DT a)
                              (ADJP (RB little) (JJR less))
                              (NN soundly))))))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (SBAR (RB only) (IN that)
          (S
            (NP (PRP he))
            (VP (VBD feared)
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (MD might)
                    (VP (VB take)
                      (NP
                        (NP (JJ further) (NN action))
                        (PP (IN in)
                          (NP (NN regard))))
                      (PP (TO to)
                        (NP (DT the) (NN cup))))))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
dep(waked-7, not-3)
mark(waked-7, that-4)
nsubj(waked-7, it-5)
aux(waked-7, had-6)
dep(was-2, waked-7)
poss(conscience-9, his-8)
dobj(waked-7, conscience-9)
mark(made-14, though-11)
nsubj(made-14, it-12)
aux(made-14, had-13)
advcl(waked-7, made-14)
nsubj(sleep-16, it-15)
ccomp(made-14, sleep-16)
det(soundly-20, a-17)
advmod(less-19, little-18)
amod(soundly-20, less-19)
dobj(sleep-16, soundly-20)
nsubj(was-23, it-22)
parataxis(was-2, was-23)
advmod(feared-27, only-24)
mark(feared-27, that-25)
nsubj(feared-27, he-26)
dep(was-23, feared-27)
nsubj(take-30, she-28)
aux(take-30, might-29)
ccomp(feared-27, take-30)
amod(action-32, further-31)
dobj(take-30, action-32)
prep_in(action-32, regard-34)
det(cup-37, the-36)
prep_to(take-30, cup-37)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD seemed)
        (PP (TO to)
          (NP (PRP him)))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBG taking)
                (NP (NN part))
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN owner))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN cup))
                        (PP (IN against)
                          (NP (PRP him)))))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP
          (VP (VB see)
            (SBAR
              (SBAR (IN that)
                (S
                  (NP (PRP she))
                  (VP (VBD was)
                    (VP (VBG taking)
                      (NP (NN part))
                      (PP (IN with)
                        (NP
                          (NP (PRP himself))
                          (PP (IN against)
                            (NP (DT the) (NNP devil)))))))))
              (: ;)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBD was) (RB not)
                    (NP
                      (NP (DT the) (NN cup))
                      (SBAR
                        (S
                          (NP (PRP she))
                          (VP (VBD was)
                            (ADJP (JJ anxious) (IN about)))))))))))
          (, ,)
          (CC but)
          (VP
            (NP
              (NP (DT the) (NN life))
              (PP (IN of)
                (NP (PRP$ her) (NN master))))))))
    (. .)))

nsubj(seemed-2, She-1)
nsubj(taking-7, She-1)
root(ROOT-0, seemed-2)
prep_to(seemed-2, him-4)
aux(taking-7, to-5)
aux(taking-7, be-6)
xcomp(seemed-2, taking-7)
dobj(taking-7, part-8)
det(owner-11, the-10)
prep_with(taking-7, owner-11)
det(cup-14, the-13)
prep_of(owner-11, cup-14)
prep_against(cup-14, him-16)
nsubj(see-21, he-18)
aux(see-21, could-19)
neg(see-21, not-20)
parataxis(seemed-2, see-21)
mark(taking-25, that-22)
nsubj(taking-25, she-23)
aux(taking-25, was-24)
dep(see-21, taking-25)
dobj(taking-25, part-26)
prep_with(taking-25, himself-28)
det(devil-31, the-30)
prep_against(himself-28, devil-31)
mark(cup-38, that-33)
nsubj(cup-38, it-34)
cop(cup-38, was-35)
neg(cup-38, not-36)
det(cup-38, the-37)
dep(taking-25, cup-38)
nsubj(anxious-41, she-39)
cop(anxious-41, was-40)
rcmod(cup-38, anxious-41)
dep(anxious-41, about-42)
det(life-46, the-45)
parataxis(seemed-2, life-46)
conj_but(see-21, life-46)
poss(master-49, her-48)
prep_of(life-46, master-49)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (PRP she))
        (VP (MD should)
          (VP (VB acquaint)
            (NP
              (NP (DT the) (NN earl) (POS 's))
              (NN lawyer))
            (PP (IN with)
              (NP
                (NP (DT all))
                (SBAR
                  (S
                    (NP (PRP she))
                    (VP (VBD knew))))))))))
    (. !)))

dep(acquaint-5, What-1)
mark(acquaint-5, if-2)
nsubj(acquaint-5, she-3)
aux(acquaint-5, should-4)
root(ROOT-0, acquaint-5)
det(earl-7, the-6)
poss(lawyer-9, earl-7)
dobj(acquaint-5, lawyer-9)
prep_with(acquaint-5, all-11)
nsubj(knew-13, she-12)
rcmod(all-11, knew-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN dragged)
          (PP (IN into)
            (NP (JJ public) (NN daylight))))))
    (. !)))

nsubjpass(dragged-4, He-1)
aux(dragged-4, would-2)
auxpass(dragged-4, be-3)
root(ROOT-0, dragged-4)
amod(daylight-7, public-6)
prep_into(dragged-4, daylight-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD could) (RB not)
      (VP (VB pretend)
        (NP
          (NP (NN ignorance))
          (PP (VBG concerning)
            (NP
              (NP (DT the) (NN identity))
              (PP (IN of)
                (NP (DT the) (NN chalice))))))))
    (. !)))

nsubj(pretend-4, He-1)
aux(pretend-4, could-2)
neg(pretend-4, not-3)
root(ROOT-0, pretend-4)
dobj(pretend-4, ignorance-5)
det(identity-8, the-7)
prep_concerning(ignorance-5, identity-8)
det(chalice-11, the-10)
prep_of(identity-8, chalice-11)

(ROOT
  (S
    (NP (DT that))
    (VP (MD would)
      (VP (VB be)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (DT no) (NN antiquarian))
              (, ,)
              (SBAR (IN while)
                (S
                  (NP (NNP Dawtie))
                  (VP (MD would)
                    (VP (VB bear)
                      (NP (NN witness))
                      (SBAR (IN that)
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (PP (IN in)
                              (NP (PRP$ his) (NN possession)))
                            (S
                              (NP
                                (NP (DT a) (NN book))
                                (VP (VBG telling)
                                  (NP
                                    (NP (DT all))
                                    (PP (IN about)
                                      (NP (PRP it)))))))))))))))))))
    (. !)))

nsubj(be-3, that-1)
nsubj(antiquarian-7, that-1)
aux(be-3, would-2)
root(ROOT-0, be-3)
aux(antiquarian-7, to-4)
cop(antiquarian-7, be-5)
neg(antiquarian-7, no-6)
xcomp(be-3, antiquarian-7)
mark(bear-12, while-9)
nsubj(bear-12, Dawtie-10)
aux(bear-12, would-11)
advcl(antiquarian-7, bear-12)
dobj(bear-12, witness-13)
mark(had-16, that-14)
nsubj(had-16, he-15)
ccomp(bear-12, had-16)
poss(possession-19, his-18)
prep_in(had-16, possession-19)
det(book-21, a-20)
dep(had-16, book-21)
vmod(book-21, telling-22)
dobj(telling-22, all-23)
prep_about(all-23, it-25)

(ROOT
  (S (CC But)
    (NP (DT the) (NN girl))
    (VP (MD would)
      (ADVP (RB never)
        (PP (IN of)
          (NP (PRP herself))))
      (VP (VB have)
        (VP (VBN turned)
          (PP (IN against)
            (NP (PRP him))))))
    (. !)))

cc(turned-9, But-1)
det(girl-3, the-2)
nsubj(turned-9, girl-3)
aux(turned-9, would-4)
neg(turned-9, never-5)
prep_of(never-5, herself-7)
aux(turned-9, have-8)
root(ROOT-0, turned-9)
prep_against(turned-9, him-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (PDT all) (DT that) (JJ fellow) (NN Ingram))
      (, ,)
      (PP (IN with)
        (NP
          (NP (PRP$ his)
            (ADJP (JJ overstrained)
              (CC and)
              (JJ absurd))
            (NNS notions))
          (PP (IN as) (TO to)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (NNP God))
                (VP (VBN required)
                  (PP (IN of)
                    (NP (PRP$ His)
                      (ADJP (JJ poor) (JJ sinful))
                      (NNS creatures))))))))))
    (. !)))

nsubj(Ingram-6, It-1)
cop(Ingram-6, was-2)
predet(Ingram-6, all-3)
det(Ingram-6, that-4)
amod(Ingram-6, fellow-5)
root(ROOT-0, Ingram-6)
poss(notions-13, his-9)
amod(notions-13, overstrained-10)
conj_and(overstrained-10, absurd-12)
amod(notions-13, absurd-12)
prep_with(Ingram-6, notions-13)
dobj(required-18, what-16)
nsubj(required-18, God-17)
prepc_as_to(notions-13, required-18)
poss(creatures-23, His-20)
amod(sinful-22, poor-21)
amod(creatures-23, sinful-22)
prep_of(required-18, creatures-23)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD did) (RB not)
      (VP (VB believe)
        (PP (IN in)
          (NP (DT the) (NN atonement)))))
    (. !)))

nsubj(believe-4, He-1)
aux(believe-4, did-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
det(atonement-7, the-6)
prep_in(believe-4, atonement-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD did) (RB not)
      (VP (VB believe)
        (SBAR (IN that)
          (S
            (NP (NNP Christ))
            (VP (VBD had)
              (VP (VBN given)
                (NP (NN satisfaction))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN Father))
                    (PP (IN for)
                      (NP (PRP$ our) (NNS sins)))))))))))
    (. !)))

nsubj(believe-4, He-1)
aux(believe-4, did-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
mark(given-8, that-5)
nsubj(given-8, Christ-6)
aux(given-8, had-7)
ccomp(believe-4, given-8)
dobj(given-8, satisfaction-9)
det(Father-12, the-11)
prep_to(given-8, Father-12)
poss(sins-15, our-14)
prep_for(Father-12, sins-15)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD demanded)
      (PP (IN in)
        (NP
          (NP (DT the) (NN name))
          (PP (IN of)
            (NP (NN religion)))))
      (ADVP (RBR more))
      (SBAR (IN than)
        (S
          (NP (DT any)
            (ADJP (RB properly) (VBN educated)
              (CC and)
              (VBN authorized))
            (NN minister))
          (VP (MD would)))))
    (. !)))

nsubj(demanded-2, He-1)
root(ROOT-0, demanded-2)
det(name-5, the-4)
prep_in(demanded-2, name-5)
prep_of(name-5, religion-7)
advmod(demanded-2, more-8)
mark(would-16, than-9)
det(minister-15, any-10)
advmod(educated-12, properly-11)
amod(minister-15, educated-12)
conj_and(educated-12, authorized-14)
amod(minister-15, authorized-14)
nsubj(would-16, minister-15)
advcl(demanded-2, would-16)

(ROOT
  (S
    (NP
      (NP (NNP and))
      (PP (IN in)
        (NP (PRP$ his) (NNS meddlesomeness))))
    (VP (VBD had)
      (VP (VBN worried)
        (NP (NNP Dawtie))
        (PP (IN into)
          (S
            (VP (VBG doing)
              (SBAR (IN as)
                (S
                  (NP (PRP she))
                  (VP (VBD did)))))))))
    (. !)))

nsubj(worried-6, and-1)
poss(meddlesomeness-4, his-3)
prep_in(and-1, meddlesomeness-4)
aux(worried-6, had-5)
root(ROOT-0, worried-6)
dobj(worried-6, Dawtie-7)
prepc_into(worried-6, doing-9)
mark(did-12, as-10)
nsubj(did-12, she-11)
advcl(doing-9, did-12)

(ROOT
  (S
    (NP (DT The) (NN girl))
    (VP (VBD was)
      (NP (DT a)
        (ADJP (JJ good)
          (CC and)
          (JJ modest))
        (NN girl)))
    (, ,)
    (CC and)
    (VP (MD would)
      (ADVP (RB never)
        (PP (IN of)
          (NP (PRP herself))))
      (VP (VB have)
        (VP
          (ADVP (RB so))
          (VBN acted))))
    (. !)))

det(girl-2, The-1)
nsubj(girl-8, girl-2)
nsubj(acted-17, girl-2)
cop(girl-8, was-3)
det(girl-8, a-4)
amod(girl-8, good-5)
conj_and(good-5, modest-7)
amod(girl-8, modest-7)
root(ROOT-0, girl-8)
aux(acted-17, would-11)
neg(acted-17, never-12)
prep_of(never-12, herself-14)
aux(acted-17, have-15)
advmod(acted-17, so-16)
conj_and(girl-8, acted-17)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD was)
      (ADVP (RB righteous))
      (ADJP (JJ overmuch))
      (, ,)
      (ADVP (RB therefore))
      (VP (VBN eaten)
        (PRT (RP up))
        (PP (IN with)
          (NP
            (NP (NN self-conceit))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (NN notion))
              (PP (IN of)
                (NP (NNP pleasing) (NNP God)
                  (ADJP (RBR more) (IN than) (JJ other))
                  (NNS men))))))))
    (. !)))

nsubjpass(eaten-7, Andrew-1)
auxpass(eaten-7, was-2)
cop(eaten-7, was-2)
advmod(eaten-7, righteous-3)
acomp(eaten-7, overmuch-4)
advmod(eaten-7, therefore-6)
root(ROOT-0, eaten-7)
prt(eaten-7, up-8)
prep_with(eaten-7, self-conceit-10)
det(notion-14, the-13)
prep_with(eaten-7, notion-14)
conj_and(self-conceit-10, notion-14)
nn(men-21, pleasing-16)
nn(men-21, God-17)
advmod(other-20, more-18)
dep(other-20, than-19)
amod(men-21, other-20)
prep_of(notion-14, men-21)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD cherished)
        (NP (JJ old) (NNS grudges))
        (PP (IN against)
          (NP (PRP him))))
      (, ,)
      (CC and)
      (VP (MD would)
        (VP (VB be)
          (ADJP (JJ delighted)
            (S
              (VP (TO to)
                (VP (VB bring)
                  (NP (PRP$ his) (JJ old) (NN school-master))
                  (PP (TO to)
                    (NP (NN shame))))))))))
    (. !)))

nsubj(cherished-2, He-1)
nsubj(delighted-11, He-1)
nsubj(bring-13, He-1)
root(ROOT-0, cherished-2)
amod(grudges-4, old-3)
dobj(cherished-2, grudges-4)
prep_against(cherished-2, him-6)
aux(delighted-11, would-9)
cop(delighted-11, be-10)
conj_and(cherished-2, delighted-11)
aux(bring-13, to-12)
xcomp(delighted-11, bring-13)
poss(school-master-16, his-14)
amod(school-master-16, old-15)
dobj(bring-13, school-master-16)
prep_to(bring-13, shame-18)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was) (RB not)
        (NP (DT a) (JJ bad) (NN boy))
        (PP (IN at)
          (NP (NN school)))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RB always))
        (VP (VBN liked)
          (NP (PRP him)))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NN change))
        (PP (IN in)
          (NP (PRP him))))
      (VP (VBN witnessed)
        (PP (TO to)
          (NP
            (NP (DT the) (NN peril))
            (PP (IN of)
              (NP (NNS extremes)))))))
    (. !)))

nsubj(boy-6, He-1)
cop(boy-6, was-2)
neg(boy-6, not-3)
det(boy-6, a-4)
amod(boy-6, bad-5)
root(ROOT-0, boy-6)
prep_at(boy-6, school-8)
nsubj(liked-13, he-10)
aux(liked-13, had-11)
advmod(liked-13, always-12)
parataxis(boy-6, liked-13)
dobj(liked-13, him-14)
det(change-17, the-16)
nsubj(witnessed-20, change-17)
prep_in(change-17, him-19)
parataxis(boy-6, witnessed-20)
det(peril-23, the-22)
prep_to(witnessed-20, peril-23)
prep_of(peril-23, extremes-25)

(ROOT
  (S
    (ADVP (RB Here))
    (NP (PRP they))
    (VP (VBD had)
      (VP (VBN led)
        (PP (TO to)
          (NP
            (NP (JJ spiritual) (NN pride))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD was)
                  (NP
                    (NP (DT the) (JJS worst))
                    (PP (IN of)
                      (NP (PDT all) (DT the) (NNS sins)))))))))))
    (. !)))

advmod(led-4, Here-1)
nsubj(led-4, they-2)
aux(led-4, had-3)
root(ROOT-0, led-4)
amod(pride-7, spiritual-6)
prep_to(led-4, pride-7)
nsubj(worst-12, pride-7)
cop(worst-12, was-10)
det(worst-12, the-11)
rcmod(pride-7, worst-12)
predet(sins-16, all-14)
det(sins-16, the-15)
prep_of(worst-12, sins-16)

(ROOT
  (S
    (NP
      (NP (DT The) (NN favorite))
      (PP (IN of)
        (NP (NN heaven))))
    (VP (MD could)
      (VP (VB have)
        (NP
          (NP (DT no) (NN respect))
          (PP (IN for)
            (NP
              (NP (DT the) (NN opinion))
              (PP (IN of)
                (NP (PRP$ his) (NNS betters))))))))
    (. !)))

det(favorite-2, The-1)
nsubj(have-6, favorite-2)
prep_of(favorite-2, heaven-4)
aux(have-6, could-5)
root(ROOT-0, have-6)
neg(respect-8, no-7)
dobj(have-6, respect-8)
det(opinion-11, the-10)
prep_for(respect-8, opinion-11)
poss(betters-14, his-13)
prep_of(opinion-11, betters-14)

(ROOT
  (S
    (NP (DT The) (NN man))
    (VP (VBD was)
      (ADJP (JJ bent)
        (PP (IN on)
          (S
            (VP (VBG returning)
              (ADJP (JJ evil)
                (PP (IN for)
                  (NP
                    (NP (PDT all) (DT the) (NN good))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN done)
                            (NP (DT the) (NN boy))))))))))))))
    (. !)))

det(man-2, The-1)
nsubj(bent-4, man-2)
cop(bent-4, was-3)
root(ROOT-0, bent-4)
prepc_on(bent-4, returning-6)
acomp(returning-6, evil-7)
predet(good-11, all-9)
det(good-11, the-10)
prep_for(evil-7, good-11)
nsubj(done-14, he-12)
aux(done-14, had-13)
rcmod(good-11, done-14)
det(boy-16, the-15)
dobj(done-14, boy-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ happy) (NN thing))
        (SBAR
          (S
            (NP (JJ young) (NNP Crawford))
            (VP (VBD understood)
              (NP (PRP him)))))))
    (. !)))

nsubj(thing-5, It-1)
cop(thing-5, was-2)
det(thing-5, a-3)
amod(thing-5, happy-4)
root(ROOT-0, thing-5)
amod(Crawford-7, young-6)
nsubj(understood-8, Crawford-7)
rcmod(thing-5, understood-8)
dobj(understood-8, him-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP
        (VP (VB be)
          (NP (PRP$ his) (NN friend)))
        (, ,)
        (CC and)
        (VP (VB defeat)
          (NP
            (NP (DT the) (NNS machinations))
            (PP (IN of)
              (NP (PRP$ his) (NN enemy)))))))
    (. !)))

nsubj(friend-5, He-1)
nsubj(defeat-8, He-1)
aux(friend-5, would-2)
cop(friend-5, be-3)
poss(friend-5, his-4)
root(ROOT-0, friend-5)
conj_and(friend-5, defeat-8)
det(machinations-10, the-9)
dobj(defeat-8, machinations-10)
poss(enemy-13, his-12)
prep_of(machinations-10, enemy-13)

(ROOT
  (FRAG (IN If)
    (SBAR (RB only)
      (S
        (NP
          (NP (DT the) (NN fellow) (POS 's))
          (NN lease))
        (VP (VBD were)
          (ADVP (RB out))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (MD might)
                (VP (VB get)
                  (ADJP (JJ rid))
                  (PP (IN of)
                    (NP (PRP him))))))))))
    (. !)))

root(ROOT-0, If-1)
advmod(were-7, only-2)
det(fellow-4, the-3)
poss(lease-6, fellow-4)
nsubj(were-7, lease-6)
dep(If-1, were-7)
advmod(were-7, out-8)
mark(rid-14, that-10)
nsubj(rid-14, he-11)
aux(rid-14, might-12)
dep(rid-14, get-13)
ccomp(were-7, rid-14)
prep_of(rid-14, him-16)

(ROOT
  (S
    (S
      (VP (VBN Moved)
        (PP (IN by)
          (NP
            (NP
              (NP (NNP George) (POS 's))
              (NN sympathy))
            (PP (IN with)
              (NP (PRP$ his) (NNS tastes)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD drew)
      (NP (NNS nearer)
        (CC and)
        (NNS nearer))
      (PP (TO to)
        (S
          (VP (VBG disclosing)
            (NP
              (NP (DT the) (NN possession))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (NP
                      (NP (DT the) (NN pride))
                      (PP (IN of)
                        (NP (PRP$ his) (NN life))))))))))))
    (. .)))

vmod(drew-11, Moved-1)
poss(sympathy-5, George-3)
agent(Moved-1, sympathy-5)
poss(tastes-8, his-7)
prep_with(sympathy-5, tastes-8)
nsubj(drew-11, he-10)
root(ROOT-0, drew-11)
dobj(drew-11, nearer-12)
dobj(drew-11, nearer-14)
conj_and(nearer-12, nearer-14)
prepc_to(drew-11, disclosing-16)
det(possession-18, the-17)
dobj(disclosing-16, possession-18)
nsubj(pride-22, possession-18)
cop(pride-22, was-20)
det(pride-22, the-21)
rcmod(possession-18, pride-22)
poss(life-25, his-24)
prep_of(pride-22, life-25)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN enjoyment))
        (, ,)
        (PP (IN of)
          (NP (NN connoisseur)
            (CC or)
            (NN collector))))
      (VP (VBZ rests)
        (ADVP (RB much)
          (PP (IN on)
            (NP
              (NP (DT the) (NN glory))
              (PP (IN of)
                (NP (NN possession))))))
        (: --)
        (PP (IN of)
          (S
            (VP (VBG having)
              (NP (WP what)))))))
    (NP (DT another))
    (VP
      (VP (VBZ has)
        (NP (RB not)))
      (, ,)
      (CC or)
      (VP (, ,)
        (ADVP (RBR better) (RB still))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT no) (JJ other))
            (VP (MD can)
              (ADVP (RB possibly))
              (VP (VB have)))))))
    (. .)))

det(enjoyment-2, The-1)
nsubj(rests-8, enjoyment-2)
prep_of(enjoyment-2, connoisseur-5)
prep_of(enjoyment-2, collector-7)
conj_or(connoisseur-5, collector-7)
dep(has-20, rests-8)
advmod(rests-8, much-9)
det(glory-12, the-11)
prep_on(much-9, glory-12)
prep_of(glory-12, possession-14)
prepc_of(rests-8, having-17)
dobj(having-17, what-18)
nsubj(has-20, another-19)
root(ROOT-0, has-20)
dobj(has-20, not-21)
advmod(still-26, better-25)
conj_or(has-20, still-26)
dobj(have-33, what-28)
neg(other-30, no-29)
nsubj(have-33, other-30)
aux(have-33, can-31)
advmod(have-33, possibly-32)
ccomp(still-26, have-33)

(ROOT
  (S
    (PP (IN From)
      (NP
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (VP (VBD had)
              (ADVP (RB long) (RB ago))
              (VP (VBN seen)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN night))
                    (PP (IN of)
                      (NP (DT the) (NN storm)))))))))
        (, ,)
        (CC and)
        (ADVP (RB now)
          (PP (IN from)
            (NP (DT the) (NN way))))
        (NP
          (NP (DT the) (JJ old) (NN man))
          (SBAR
            (S
              (VP
                (VP (VBD hinted))
                (, ,)
                (CC and)
                (VP (VBD talked))
                (, ,)
                (CC and)
                (VP (VBD broke)
                  (PRT (RP off)))))))))
    (: ;)
    (ADVP (RB also))
    (PP (IN from)
      (NP (DT the) (NN uneasiness)))
    (S
      (NP (PRP he))
      (ADVP (RB sometimes))
      (VP (VBD manifested)))
    (PRN (, ,)
      (S
        (NP (NNP George))
        (VP (VBD had)
          (VP (VBD guessed)
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBD was)
                  (NP
                    (NP (NN something))
                    (PP (IN over)
                      (SBAR
                        (WHNP (WP$ whose) (NNS possession))
                        (S
                          (NP (PRP he))
                          (VP (VBD gloated))))))))))))
      (, ,))
    (CC but)
    (S
      (PP (IN for)
        (SBAR
          (WHNP
            (NP (WP$ whose) (NN presence))
            (PP (IN among)
              (NP (PRP$ his) (NNS treasures))))
          (S
            (NP (PRP he))
            (VP (MD could) (RB not)
              (ADVP (RB comfortably))
              (VP (VB account))))))
      (NP (PRP He))
      (ADVP (RB therefore))
      (VP (VBD set)
        (NP (PRP himself))
        (, ,)
        (PP (IN without)
          (S
            (VP (VBG asking)
              (NP (DT a) (JJ single) (NN question)))))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (DT the) (JJ laird) (NN unbosom)))))))
    (. .)))

dobj(seen-7, what-2)
nsubj(seen-7, he-3)
aux(seen-7, had-4)
advmod(ago-6, long-5)
advmod(seen-7, ago-6)
dep(man-22, seen-7)
det(night-10, the-9)
prep_on(seen-7, night-10)
det(storm-13, the-12)
prep_of(night-10, storm-13)
advmod(man-22, now-16)
conj_and(man-22, now-16)
prep_from(manifested-38, now-16)
det(way-19, the-18)
prep_from(now-16, way-19)
det(man-22, the-20)
amod(man-22, old-21)
prep_from(manifested-38, man-22)
rcmod(man-22, hinted-23)
rcmod(man-22, talked-26)
conj_and(hinted-23, talked-26)
rcmod(man-22, broke-29)
conj_and(hinted-23, broke-29)
prt(broke-29, off-30)
advmod(manifested-38, also-32)
det(uneasiness-35, the-34)
prep_from(manifested-38, uneasiness-35)
nsubj(manifested-38, he-36)
advmod(manifested-38, sometimes-37)
root(ROOT-0, manifested-38)
nsubj(guessed-42, George-40)
aux(guessed-42, had-41)
dep(manifested-38, guessed-42)
mark(was-45, that-43)
expl(was-45, there-44)
ccomp(guessed-42, was-45)
nsubj(was-45, something-46)
poss(possession-49, whose-48)
dobj(gloated-51, possession-49)
nsubj(gloated-51, he-50)
prepc_over(something-46, gloated-51)
dep(set-67, for-54)
poss(presence-56, whose-55)
dobj(account-64, presence-56)
poss(treasures-59, his-58)
prep_among(presence-56, treasures-59)
nsubj(account-64, he-60)
aux(account-64, could-61)
neg(account-64, not-62)
advmod(account-64, comfortably-63)
pcomp(for-54, account-64)
nsubj(set-67, He-65)
advmod(set-67, therefore-66)
conj_but(manifested-38, set-67)
dobj(set-67, himself-68)
prepc_without(set-67, asking-71)
det(question-74, a-72)
amod(question-74, single-73)
dobj(asking-71, question-74)
aux(make-77, to-76)
vmod(set-67, make-77)
det(unbosom-80, the-78)
amod(unbosom-80, laird-79)
dobj(make-77, unbosom-80)

(ROOT
  (S
    (NP
      (NP (DT A) (NN hold))
      (PP (IN on)
        (NP (DT the) (NN father))))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT a) (NN hold))
          (PP (IN on)
            (NP (DT the) (NN daughter))))))
    (. !)))

det(hold-2, A-1)
nsubj(hold-9, hold-2)
det(father-5, the-4)
prep_on(hold-2, father-5)
aux(hold-9, would-6)
cop(hold-9, be-7)
det(hold-9, a-8)
root(ROOT-0, hold-9)
det(daughter-12, the-11)
prep_on(hold-9, daughter-12)

(ROOT
  (S
    (NP (CD One) (NN day))
    (, ,)
    (PP (IN in)
      (NP
        (NP (DT a) (NN pawnbroker) (POS 's))
        (NN shop)))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD lighted)
        (PP (IN upon)
          (NP (DT a) (NN rarity)))
        (ADVP (RB indeed))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (MD might)
              (CC or)
              (MD might) (RB not)
              (VP (VB have)
                (NP
                  (NP (DT a) (NN history))
                  (VP (VBN attributed)
                    (PP (TO to)
                      (NP (PRP it))))))))))
      (, ,)
      (CC but)
      (VP (VBD was)
        (PP (IN in)
          (NP
            (NP (PRP itself))
            (ADJP (RBR more) (IN than) (JJ interesting))
            (PP (IN for)
              (NP
                (NP (DT the) (NN beauty))
                (PP (IN of)
                  (NP (DT both) (NN material)
                    (CC and)
                    (NN workmanship)))))))))
    (. .)))

num(day-2, One-1)
tmod(lighted-11, day-2)
det(pawnbroker-6, a-5)
poss(shop-8, pawnbroker-6)
prep_in(lighted-11, shop-8)
nsubj(lighted-11, he-10)
nsubj(was-30, he-10)
root(ROOT-0, lighted-11)
det(rarity-14, a-13)
prep_upon(lighted-11, rarity-14)
advmod(lighted-11, indeed-15)
nsubj(have-22, which-17)
aux(have-22, might-18)
ccomp(lighted-11, might-20)
aux(have-22, might-20)
conj_or(have-22, might-20)
neg(have-22, not-21)
ccomp(lighted-11, have-22)
det(history-24, a-23)
dobj(have-22, history-24)
vmod(history-24, attributed-25)
prep_to(attributed-25, it-27)
conj_but(lighted-11, was-30)
prep_in(was-30, itself-32)
advmod(interesting-35, more-33)
dep(interesting-35, than-34)
amod(itself-32, interesting-35)
det(beauty-38, the-37)
prep_for(itself-32, beauty-38)
preconj(material-41, both-40)
prep_of(beauty-38, material-41)
prep_of(beauty-38, workmanship-43)
conj_and(material-41, workmanship-43)

(ROOT
  (S
    (S
      (NP (DT The) (NN sum))
      (VP (VBD asked)
        (SBAR (IN for)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADJP (JJ large)))))))
    (, ,)
    (CC but)
    (S
      (PP (IN with)
        (NP
          (NP (DT the) (NN chance))
          (PP (IN of)
            (S
              (VP (VBG pleasing)
                (NP (DT the) (NN laird)))))))
      (, ,)
      (NP (PRP it))
      (VP (VBD seemed)
        (PP (TO to)
          (NP (NNP George)))
        (ADVP (RB but)
          (NP (DT a) (RB trifle)))))
    (. .)))

det(sum-2, The-1)
nsubj(asked-3, sum-2)
root(ROOT-0, asked-3)
mark(large-7, for-4)
nsubj(large-7, it-5)
cop(large-7, was-6)
advcl(asked-3, large-7)
det(chance-12, the-11)
prep_with(seemed-19, chance-12)
prepc_of(chance-12, pleasing-14)
det(laird-16, the-15)
dobj(pleasing-14, laird-16)
nsubj(seemed-19, it-18)
conj_but(asked-3, seemed-19)
prep_to(seemed-19, George-21)
advmod(seemed-19, but-22)
det(trifle-24, a-23)
pobj(but-22, trifle-24)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADVP (RB also))))
    (, ,)
    (NP (PRP he))
    (VP (VBZ judged) (, ,)
      (PP (IN of)
        (NP (JJ intrinsic) (NN value)))
      (PP (TO to)
        (NP
          (NP (DT a) (JJ great) (NN part))
          (PP (IN of)
            (NP (DT the) (NN price))))))
    (. .)))

nsubj(was-2, It-1)
ccomp(judged-6, was-2)
advmod(was-2, also-3)
nsubj(judged-6, he-5)
root(ROOT-0, judged-6)
amod(value-10, intrinsic-9)
prep_of(judged-6, value-10)
det(part-14, a-12)
amod(part-14, great-13)
prep_to(judged-6, part-14)
det(price-17, the-16)
prep_of(part-14, price-17)

(ROOT
  (S
    (SINV (VBD Had)
      (NP (PRP he))
      (VP (VBN been)
        (ADJP (RB then) (JJ aware))
        (PP (IN of)
          (NP
            (NP (DT the) (NN passion))
            (PP (IN of)
              (NP (DT the) (JJ old) (NN man)))))
        (PP (IN for)
          (NP
            (NP (NNS jewels))
            (PP (IN in)
              (NP (NN especial)))))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN been)
          (ADJP (RB yet) (RBR more) (JJ eager)
            (S
              (VP (TO to)
                (VP (VB secure)
                  (NP (PRP it))
                  (PP (IN for)
                    (NP (PRP him))))))))))
    (. .)))

aux(aware-5, Had-1)
nsubj(aware-5, he-2)
cop(aware-5, been-3)
advmod(aware-5, then-4)
dep(eager-24, aware-5)
det(passion-8, the-7)
prep_of(aware-5, passion-8)
det(man-12, the-10)
amod(man-12, old-11)
prep_of(passion-8, man-12)
prep_for(aware-5, jewels-14)
prep_in(jewels-14, especial-16)
nsubj(eager-24, he-18)
nsubj(secure-26, he-18)
aux(eager-24, would-19)
aux(eager-24, have-20)
cop(eager-24, been-21)
advmod(eager-24, yet-22)
advmod(eager-24, more-23)
root(ROOT-0, eager-24)
aux(secure-26, to-25)
xcomp(eager-24, secure-26)
dobj(secure-26, it-27)
prep_for(secure-26, him-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN watch))
        (, ,)
        (UCP (RB not)
          (ADJP (RB very) (JJ small))
          (, ,)
          (CC and)
          (PP (IN by)
            (NP
              (NP (DT no) (NNS means) (JJ thin))
              (: --)
              (NP
                (NP (DT a) (NN repeater))
                (, ,)
                (SBAR
                  (WHNP (WP$ whose) (NNS bell))
                  (S
                    (VP (VBD was)
                      (VP (VBN dulled)
                        (PP (IN by)
                          (NP
                            (NP (DT the) (NNS stones))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NN mine))
                                (SBAR
                                  (WHPP (IN in)
                                    (WHNP (WDT which)))
                                  (S
                                    (NP (PRP it))
                                    (VP (VBD lay)
                                      (VP (VBN buried)))))))))))))))))))
    (. .)))

nsubj(watch-4, It-1)
cop(watch-4, was-2)
det(watch-4, a-3)
root(ROOT-0, watch-4)
dep(watch-4, not-6)
advmod(small-8, very-7)
dep(not-6, small-8)
dep(watch-4, by-11)
conj_and(not-6, by-11)
neg(means-13, no-12)
pobj(by-11, means-13)
amod(means-13, thin-14)
det(repeater-17, a-16)
dep(means-13, repeater-17)
poss(bell-20, repeater-17)
nsubjpass(dulled-22, bell-20)
auxpass(dulled-22, was-21)
rcmod(repeater-17, dulled-22)
det(stones-25, the-24)
agent(dulled-22, stones-25)
det(mine-28, the-27)
prep_of(stones-25, mine-28)
prep_in(lay-32, mine-28)
nsubj(lay-32, it-31)
rcmod(mine-28, lay-32)
dep(lay-32, buried-33)

(ROOT
  (S
    (NP (DT The) (NN case))
    (VP (VBD was)
      (UCP
        (NP
          (NP (CD one) (NN mass))
          (PP (IN of)
            (NP
              (NP (NNS gems))
              (PP (IN of)
                (NP (JJ considerable) (NN size))))))
        (, ,)
        (CC and)
        (PP (IN of)
          (NP (DT every) (NN color)))))
    (. .)))

det(case-2, The-1)
nsubj(mass-5, case-2)
cop(mass-5, was-3)
num(mass-5, one-4)
root(ROOT-0, mass-5)
prep_of(mass-5, gems-7)
amod(size-10, considerable-9)
prep_of(gems-7, size-10)
conj_and(mass-5, of-13)
det(color-15, every-14)
pobj(of-13, color-15)

(ROOT
  (S
    (NP (NNP Ruby) (, ,) (NNP sapphire) (, ,)
      (CC and)
      (NNP emerald))
    (VP (VBD were)
      (ADJP (RB judiciously) (JJ parted))
      (PP (IN by)
        (NP
          (NP (NNS diamonds))
          (PP (IN of)
            (NP (JJ utmost) (NN purity)))))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (JJ yellow) (NNS diamonds))
          (VP (VBD took)
            (NP
              (NP (DT the) (JJ golden) (NN place))
              (SBAR
                (WHPP (IN for)
                  (WHNP (WDT which)))
                (S
                  (NP (DT the) (NN topaz))
                  (VP (VBD had) (RB not)
                    (VP (VBN been)
                      (VP (VBN counted)
                        (PP (IN of)
                          (NP (JJ sufficient) (NN value)))))))))))))
    (. .)))

nsubj(parted-9, Ruby-1)
conj_and(Ruby-1, sapphire-3)
nsubj(parted-9, sapphire-3)
conj_and(Ruby-1, emerald-6)
nsubj(parted-9, emerald-6)
cop(parted-9, were-7)
advmod(parted-9, judiciously-8)
root(ROOT-0, parted-9)
prep_by(parted-9, diamonds-11)
amod(purity-14, utmost-13)
prep_of(diamonds-11, purity-14)
mark(took-19, while-16)
amod(diamonds-18, yellow-17)
nsubj(took-19, diamonds-18)
advcl(parted-9, took-19)
det(place-22, the-20)
amod(place-22, golden-21)
dobj(took-19, place-22)
prep_for(counted-30, place-22)
det(topaz-26, the-25)
nsubjpass(counted-30, topaz-26)
aux(counted-30, had-27)
neg(counted-30, not-28)
auxpass(counted-30, been-29)
rcmod(place-22, counted-30)
amod(value-33, sufficient-32)
prep_of(counted-30, value-33)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were) (RB all)
      (VP (VBN crusted)
        (PRT (RP together))
        (ADVP
          (ADVP (RB as) (RB close))
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (MD could)
                (VP
                  (VP (VB lie))
                  (, ,)
                  (NP
                    (NP (DT the) (NN setting))
                    (PP (IN of)
                      (S
                        (NP (PRP them))
                        (ADVP (RB hardly))
                        (VP (VBG showing))))))))))))
    (. .)))

nsubjpass(crusted-4, They-1)
auxpass(crusted-4, were-2)
advmod(crusted-4, all-3)
root(ROOT-0, crusted-4)
prt(crusted-4, together-5)
advmod(close-7, as-6)
advmod(crusted-4, close-7)
mark(lie-11, as-8)
nsubj(lie-11, they-9)
aux(lie-11, could-10)
advcl(close-7, lie-11)
ccomp(close-7, lie-11)
det(setting-14, the-13)
dobj(lie-11, setting-14)
nsubj(showing-18, them-16)
advmod(showing-18, hardly-17)
prepc_of(setting-14, showing-18)

(ROOT
  (S
    (NP (DT The) (NN face))
    (VP (VBD was)
      (PP (IN of)
        (NP (JJ fine) (NNS opals)))
      (, ,)
      (PP (IN across)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD moved)
              (NP
                (NP (DT the) (CD two) (JJR larger) (NNS hands))
                (ADJP (JJ radiant)
                  (PP (IN with)
                    (NP
                      (NP (NNS rubies))
                      (, ,)
                      (SBAR (IN while)
                        (S
                          (NP (DT the) (NN second-hand))
                          (VP (VBD flitted)
                            (S
                              (VP (VBG flashing)
                                (PRT (RP around))))))))))
                (, ,)
                (VP (VBN covered)
                  (PP (IN with)
                    (NP (JJ tiny) (NNS diamonds))))))))))
    (. .)))

det(face-2, The-1)
nsubj(was-3, face-2)
root(ROOT-0, was-3)
amod(opals-6, fine-5)
prep_of(was-3, opals-6)
nsubj(moved-10, which-9)
prepc_across(was-3, moved-10)
det(hands-14, the-11)
num(hands-14, two-12)
amod(hands-14, larger-13)
dobj(moved-10, hands-14)
amod(hands-14, radiant-15)
prep_with(radiant-15, rubies-17)
mark(flitted-22, while-19)
det(second-hand-21, the-20)
nsubj(flitted-22, second-hand-21)
rcmod(rubies-17, flitted-22)
xcomp(flitted-22, flashing-23)
prt(flashing-23, around-24)
vmod(hands-14, covered-26)
amod(diamonds-29, tiny-28)
prep_with(covered-26, diamonds-29)

(ROOT
  (S
    (NP (DT The) (NNS numerals))
    (VP (VBD were)
      (PP (IN in)
        (NP (NNS sapphires)))
      (, ,)
      (PP (IN within)
        (NP
          (NP (DT a) (VBG bordering) (NN ring))
          (PP (IN of)
            (NP
              (NP (NNS emeralds))
              (CC and)
              (NP (JJ black) (NNS pearls)))))))
    (. .)))

det(numerals-2, The-1)
nsubj(were-3, numerals-2)
root(ROOT-0, were-3)
prep_in(were-3, sapphires-5)
det(ring-10, a-8)
amod(ring-10, bordering-9)
prep_within(were-3, ring-10)
prep_of(ring-10, emeralds-12)
amod(pearls-15, black-14)
prep_of(ring-10, pearls-15)
conj_and(emeralds-12, pearls-15)

(ROOT
  (S
    (NP (DT The) (NN jewel))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN splendor))
        (PP (IN of)
          (NP (NN color)
            (CC and)
            (NN light)))))
    (. .)))

det(jewel-2, The-1)
nsubj(splendor-5, jewel-2)
cop(splendor-5, was-3)
det(splendor-5, a-4)
root(ROOT-0, splendor-5)
prep_of(splendor-5, color-7)
prep_of(splendor-5, light-9)
conj_and(color-7, light-9)

(ROOT
  (S
    (NP (NNP George))
    (, ,)
    (PP (IN without)
      (NP (NN preface)))
    (, ,)
    (VP
      (VP (VBD took)
        (NP (PRP it))
        (PP (IN from)
          (NP (PRP$ his) (NN pocket))))
      (, ,)
      (VP (VBD held)
        (S
          (NP (PRP it))
          (NP
            (NP (DT a) (NN moment))
            (PP (IN in)
              (NP (DT the) (NN sunlight))))))
      (, ,)
      (CC and)
      (VP (VBD handed)
        (NP (PRP it))
        (PP (TO to)
          (NP (DT the) (NN laird)))))
    (. .)))

nsubj(took-6, George-1)
nsubj(held-12, George-1)
nsubj(handed-21, George-1)
prep_without(took-6, preface-4)
root(ROOT-0, took-6)
dobj(took-6, it-7)
poss(pocket-10, his-9)
prep_from(took-6, pocket-10)
conj_and(took-6, held-12)
nsubj(moment-15, it-13)
det(moment-15, a-14)
xcomp(held-12, moment-15)
det(sunlight-18, the-17)
prep_in(moment-15, sunlight-18)
conj_and(took-6, handed-21)
dobj(handed-21, it-22)
det(laird-25, the-24)
prep_to(handed-21, laird-25)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD glowered)
      (PP (IN at)
        (NP (PRP it))))
    (. .)))

nsubj(glowered-2, He-1)
root(ROOT-0, glowered-2)
prep_at(glowered-2, it-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD saw)
      (NP (DT an) (NN angel))
      (PP (IN from)
        (NP (NN heaven)))
      (PP (IN in)
        (NP
          (NP (DT a) (NN thing) (NN compact))
          (PP (IN of)
            (NP (NNS earth-chips))))))
    (. !)))

nsubj(saw-2, He-1)
root(ROOT-0, saw-2)
det(angel-4, an-3)
dobj(saw-2, angel-4)
prep_from(saw-2, heaven-6)
det(compact-10, a-8)
nn(compact-10, thing-9)
prep_in(saw-2, compact-10)
prep_of(compact-10, earth-chips-12)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP
            (ADJP (IN near)
              (PP (IN as)
                (NP (DT any) (JJ _) (NN thing))))
            (NNS _))
          (VP (MD can)
            (VP (VB be)
              (VP (VBN loved)
                (PP (IN of)
                  (NP (DT a) (JJ live) (NN soul))))))))
      (, ,)
      (NP (DT the) (NN laird))
      (VP (VBD loved)
        (NP (DT a) (JJ fine) (NN stone))))
    (: ;)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (PP (IN in)
            (NP (PRP it)))
          (NP (PRP he))
          (VP (VBD loved)
            (NP
              (NP (JJS most))
              (, ,)
              (NP (DT the) (NN color))
              (, ,)
              (NP (DT the) (NN light))
              (, ,)
              (NP (DT the) (NN shape))
              (, ,)
              (NP (DT the) (NN value))
              (, ,)
              (NP (DT the) (NN mystery))))))
      (, ,)
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP (VB have)
          (VP (VBN told)))))
    (. !)))

mark(loved-10, As-1)
amod(_-7, near-2)
det(thing-6, any-4)
amod(thing-6, _-5)
prep_as(near-2, thing-6)
nsubjpass(loved-10, _-7)
aux(loved-10, can-8)
auxpass(loved-10, be-9)
advcl(loved-18, loved-10)
det(soul-14, a-12)
amod(soul-14, live-13)
prep_of(loved-10, soul-14)
det(laird-17, the-16)
nsubj(loved-18, laird-17)
root(ROOT-0, loved-18)
det(stone-21, a-19)
amod(stone-21, fine-20)
dobj(loved-18, stone-21)
dobj(loved-27, what-23)
prep_in(loved-27, it-25)
nsubj(loved-27, he-26)
advcl(told-49, loved-27)
dobj(loved-27, most-28)
det(color-31, the-30)
appos(most-28, color-31)
det(light-34, the-33)
appos(most-28, light-34)
det(shape-37, the-36)
appos(most-28, shape-37)
det(value-40, the-39)
appos(most-28, value-40)
det(mystery-43, the-42)
appos(most-28, mystery-43)
nsubj(told-49, he-45)
aux(told-49, could-46)
neg(told-49, not-47)
aux(told-49, have-48)
parataxis(loved-18, told-49)

(ROOT
  (S (: --)
    (CC and)
    (NP (RB here))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN jewel))
        (PP (IN of)
          (NP (JJ many) (NN fine) (NNS stones)))))
    (. !)))

conj_and(jewel-6, here-3)
nsubj(jewel-6, here-3)
cop(jewel-6, was-4)
det(jewel-6, a-5)
root(ROOT-0, jewel-6)
amod(stones-10, many-8)
nn(stones-10, fine-9)
prep_of(jewel-6, stones-10)

(ROOT
  (S
    (PP (IN With)
      (NP (DT both) (NNS hands)))
    (NP (PRP he))
    (VP (VBD pressed)
      (NP (PRP it))
      (PP (TO to)
        (NP (PRP$ his) (NN bosom))))
    (. .)))

det(hands-3, both-2)
prep_with(pressed-5, hands-3)
nsubj(pressed-5, he-4)
root(ROOT-0, pressed-5)
dobj(pressed-5, it-6)
poss(bosom-9, his-8)
prep_to(pressed-5, bosom-9)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD looked)
        (PP (IN at)
          (NP (PRP it)))
        (PP (IN in)
          (NP (DT the) (NN sun))))
      (, ,)
      (VP
        (ADVP (RB then))
        (VBD went)
        (PP (IN into)
          (NP
            (NP (DT the) (NN shadow))
            (PP (IN of)
              (NP (DT the) (NN house)))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP they))
            (VP (VBD were)
              (PP (IN in)
                (NP (DT the) (JJ open) (NN air)))))))
      (, ,)
      (CC and)
      (VP (VBD looked)
        (PP (IN at)
          (NP (PRP it)))
        (ADVP (RB again))))
    (. .)))

advmod(looked-3, Then-1)
nsubj(looked-3, he-2)
nsubj(went-11, he-2)
nsubj(looked-28, he-2)
root(ROOT-0, looked-3)
prep_at(looked-3, it-5)
det(sun-8, the-7)
prep_in(looked-3, sun-8)
advmod(went-11, then-10)
conj_and(looked-3, went-11)
det(shadow-14, the-13)
prep_into(went-11, shadow-14)
det(house-17, the-16)
prep_of(shadow-14, house-17)
mark(were-21, for-19)
nsubj(were-21, they-20)
advcl(went-11, were-21)
det(air-25, the-23)
amod(air-25, open-24)
prep_in(were-21, air-25)
conj_and(looked-3, looked-28)
prep_at(looked-28, it-30)
advmod(looked-28, again-31)

(ROOT
  (S
    (S
      (ADVP (RB Suddenly))
      (NP (PRP he))
      (VP (VBD thrust)
        (NP (PRP it))
        (PP (IN into)
          (NP (PRP$ his) (NN pocket)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBN hurried)))
      (, ,)
      (S
        (VP (VBN followed)
          (PP (IN by)
            (NP (NNP George)))
          (, ,)
          (PP (TO to)
            (NP (PRP$ his) (NN study))))))
    (. .)))

advmod(thrust-3, Suddenly-1)
nsubj(thrust-3, he-2)
nsubj(hurried-10, he-2)
root(ROOT-0, thrust-3)
dobj(thrust-3, it-4)
poss(pocket-7, his-6)
prep_into(thrust-3, pocket-7)
conj_and(thrust-3, hurried-10)
parataxis(hurried-10, followed-12)
prep_by(followed-12, George-14)
poss(study-18, his-17)
prep_to(followed-12, study-18)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP he))
    (VP (VBD closed)
      (NP
        (NP (DT the) (NNS shutters))
        (, ,)
        (VP
          (VP (VBN lighted)
            (NP (DT a) (NN lamp)))
          (, ,)
          (CC and)
          (VP (VBN gazed)
            (PP (IN at)
              (NP (DT the) (NN marvel)))))
        (, ,)
        (VP (VBG turning)
          (NP (PRP it))
          (PP (IN in)
            (NP (DT all) (NNS directions))))))
    (. .)))

advmod(closed-3, There-1)
nsubj(closed-3, he-2)
root(ROOT-0, closed-3)
det(shutters-5, the-4)
dobj(closed-3, shutters-5)
dep(shutters-5, lighted-7)
det(lamp-9, a-8)
dobj(lighted-7, lamp-9)
dep(shutters-5, gazed-12)
conj_and(lighted-7, gazed-12)
det(marvel-15, the-14)
prep_at(gazed-12, marvel-15)
vmod(shutters-5, turning-17)
dobj(turning-17, it-18)
det(directions-21, all-20)
prep_in(turning-17, directions-21)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (NP (PRP he))
    (VP
      (VP (VBD laid)
        (NP (PRP it))
        (PP (IN on)
          (NP (DT the) (NN table))))
      (, ,)
      (CC and)
      (VP (VBN sunk)
        (PP (IN with)
          (NP (DT a) (NN sigh)))
        (PP (IN into)
          (NP (DT a) (NN chair)))))
    (. .)))

prep_at(laid-4, length-2)
nsubj(laid-4, he-3)
nsubj(sunk-11, he-3)
root(ROOT-0, laid-4)
dobj(laid-4, it-5)
det(table-8, the-7)
prep_on(laid-4, table-8)
conj_and(laid-4, sunk-11)
det(sigh-14, a-13)
prep_with(sunk-11, sigh-14)
det(chair-17, a-16)
prep_into(sunk-11, chair-17)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD understood)
        (NP (DT the) (NN sigh)))
      (, ,)
      (CC and)
      (VP (VBD dug)
        (NP (PRP$ its) (NN source))
        (ADVP (RBR deeper))
        (PP (IN by)
          (S
            (VP (VBG telling)
              (NP (PRP him))))))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN heard)
              (S
                (NP (PRP it)))
              (, ,)
              (S
                (NP
                  (NP (DT the) (NN story))
                  (PP (IN of)
                    (NP (DT the) (NN jewel))))))))))
    (. .)))

nsubj(understood-2, George-1)
nsubj(dug-7, George-1)
root(ROOT-0, understood-2)
det(sigh-4, the-3)
dobj(understood-2, sigh-4)
conj_and(understood-2, dug-7)
poss(source-9, its-8)
dobj(dug-7, source-9)
advmod(dug-7, deeper-10)
prepc_by(dug-7, telling-12)
dobj(telling-12, him-13)
mark(heard-18, as-15)
nsubj(heard-18, he-16)
aux(heard-18, had-17)
advcl(understood-2, heard-18)
conj_and(understood-2, heard-18)
xcomp(heard-18, it-19)
det(story-22, the-21)
xcomp(heard-18, story-22)
det(jewel-25, the-24)
prep_of(story-22, jewel-25)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (MD may)
        (VP (VB be)
          (ADJP (JJ true)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD ended)))))
    (. .)))

nsubj(true-5, It-2)
aux(true-5, may-3)
cop(true-5, be-4)
ccomp(said-9, true-5)
nsubj(said-9, he-8)
root(ROOT-0, said-9)
mark(ended-12, as-10)
nsubj(ended-12, he-11)
advcl(said-9, ended-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP remember)
      (S
        (VP (VBG seeing)
          (NP
            (NP (DT some) (NN time))
            (ADVP (RB ago)
              (NP (DT a) (NN description)))
            (PP (IN of)
              (NP (DT the) (NN toy)))))))
    (. .)))

nsubj(remember-3, I-2)
root(ROOT-0, remember-3)
xcomp(remember-3, seeing-4)
det(time-6, some-5)
dobj(seeing-4, time-6)
advmod(time-6, ago-7)
det(description-9, a-8)
pobj(ago-7, description-9)
det(toy-12, the-11)
prep_of(time-6, toy-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD could)
            (VP (VB lay)
              (NP (PRP$ my) (NN hand))
              (PP (IN on)
                (NP (PRP it))))))))
    (. !) ('' '')))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(lay-5, I-3)
aux(lay-5, could-4)
ccomp(think-2, lay-5)
poss(hand-7, my-6)
dobj(lay-5, hand-7)
prep_on(lay-5, it-9)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Would))
    (SQ
      (NP (PRP you))
      (VP (VB mind)
        (S
          (VP (VBG leaving)
            (NP (PRP it))
            (PP (IN with)
              (NP (PRP me)))))
        (SBAR (IN till)
          (S
            (NP (PRP you))
            (VP (VBP come)
              (ADVP (RB again)))))))
    (. ?) ('' '')))

advmod(mind-4, Would-2)
nsubj(mind-4, you-3)
root(ROOT-0, mind-4)
xcomp(mind-4, leaving-5)
dobj(leaving-5, it-6)
prep_with(leaving-5, me-8)
mark(come-11, till-9)
nsubj(come-11, you-10)
advcl(mind-4, come-11)
advmod(come-11, again-12)

(ROOT
  (S
    (VP (VBD faltered)
      (NP (DT the) (NN laird)))
    (. .)))

root(ROOT-0, faltered-1)
det(laird-3, the-2)
dobj(faltered-1, laird-3)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD knew)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could) (RB not)
              (VP (VB buy)
                (NP (PRP it))))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (NP (RB not) (DT the) (NN money))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD would)
        (VP (VB gladly)
          (ADVP (RB dally))
          (PP (IN with)
            (NP
              (NP (DT the) (NN notion))
              (PP (IN of)
                (S
                  (VP (VBG being)
                    (NP (PRP$ its) (NN possessor))))))))))
    (. .)))

nsubj(knew-2, He-1)
root(ROOT-0, knew-2)
nsubj(buy-6, he-3)
aux(buy-6, could-4)
neg(buy-6, not-5)
ccomp(knew-2, buy-6)
dobj(buy-6, it-7)
nsubj(had-10, he-9)
conj_but(knew-2, had-10)
neg(money-13, not-11)
det(money-13, the-12)
dobj(had-10, money-13)
nsubj(gladly-18, he-16)
aux(gladly-18, would-17)
conj_but(knew-2, gladly-18)
advmod(gladly-18, dally-19)
det(notion-22, the-21)
prep_with(gladly-18, notion-22)
cop(possessor-26, being-24)
poss(possessor-26, its-25)
prepc_of(notion-22, possessor-26)

(ROOT
  (S
    (NP
      (S
        (VP (TO To)
          (VP (VB part)
            (PP (IN with)
              (NP (PRP it))))))
      (, ,)
      (NP
        (NP (DT the) (NN moment))
        (PP (IN after)
          (S
            (VP (VBG having)
              (VP
                (VP (VBN held)
                  (NP (PRP it))
                  (PP (IN in)
                    (NP (PRP$ his) (NN hand))))
                (CC and)
                (VP (VBD gloated)
                  (PRT (RP over))
                  (NP (PRP it))
                  (PP (IN for)
                    (NP (DT the) (JJ first) (NN time)))))))))
      (, ,))
    (VP (MD would)
      (VP (VB be)
        (NP
          (ADJP (RB too) (JJ keen))
          (DT a) (NN pain))))
    (. !)))

aux(part-2, To-1)
dep(moment-7, part-2)
prep_with(part-2, it-4)
det(moment-7, the-6)
nsubj(pain-29, moment-7)
aux(held-10, having-9)
prepc_after(moment-7, held-10)
dobj(held-10, it-11)
poss(hand-14, his-13)
prep_in(held-10, hand-14)
prepc_after(moment-7, gloated-16)
conj_and(held-10, gloated-16)
prt(gloated-16, over-17)
dobj(gloated-16, it-18)
det(time-22, the-20)
amod(time-22, first-21)
prep_for(gloated-16, time-22)
aux(pain-29, would-24)
cop(pain-29, be-25)
advmod(keen-27, too-26)
amod(pain-29, keen-27)
det(pain-29, a-28)
root(ROOT-0, pain-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ unreasonable)
        (S
          (VP (TO to)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB part)
                    (PP (IN with)
                      (NP (PRP it)))
                    (ADVP (IN at) (DT all))))))))))
    (. !)))

nsubj(unreasonable-3, It-1)
nsubj(have-5, It-1)
nsubj(part-7, It-1)
cop(unreasonable-3, was-2)
root(ROOT-0, unreasonable-3)
aux(have-5, to-4)
xcomp(unreasonable-3, have-5)
aux(part-7, to-6)
xcomp(have-5, part-7)
prep_with(part-7, it-9)
advmod(part-7, at-10)
pobj(at-10, all-11)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB _))
    (VP (MD ought)
      (VP (VB _)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (PRP$ its) (NN owner)))))))
    (. !)))

nsubj(_-4, He-1)
nsubj(owner-8, He-1)
advmod(_-4, _-2)
aux(_-4, ought-3)
root(ROOT-0, _-4)
aux(owner-8, to-5)
cop(owner-8, be-6)
poss(owner-8, its-7)
xcomp(_-4, owner-8)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WP Who))
      (S
        (VP (MD could)
          (VP (VB be)
            (NP (PDT such) (DT an) (NN owner))
            (PP (TO to)
              (NP
                (NP (DT a) (NN thing))
                (PP (IN like)
                  (NP
                    (NP (DT that))
                    (PP (IN as)
                      (NP (PRP he)))))))))))
    (. !)))

nsubj(owner-6, Who-1)
aux(owner-6, could-2)
cop(owner-6, be-3)
predet(owner-6, such-4)
det(owner-6, an-5)
root(ROOT-0, owner-6)
det(thing-9, a-8)
prep_to(owner-6, thing-9)
prep_like(thing-9, that-11)
prep_as(that-11, he-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (DT a) (JJ wrong)
        (PP (TO to)
          (NP (PRP him))))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was) (RB not)
            (NP (PRP$ his))))))
    (. !)))

nsubj(wrong-4, It-1)
cop(wrong-4, was-2)
det(wrong-4, a-3)
root(ROOT-0, wrong-4)
prep_to(wrong-4, him-6)
mark(his-11, that-7)
nsubj(his-11, it-8)
cop(his-11, was-9)
neg(his-11, not-10)
ccomp(wrong-4, his-11)

(ROOT
  (S
    (ADVP (JJ Next)
      (PP (TO to)
        (NP (PRP$ his) (NN cup))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT the) (RBS most) (JJ precious) (NN thing))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had)
              (ADVP (RB ever))
              (VP (VBN wished)
                (S
                  (VP (TO to)
                    (VP (VB possess))))))))))
    (. !)))

poss(cup-4, his-3)
prep_next_to(thing-11, cup-4)
nsubj(thing-11, it-6)
cop(thing-11, was-7)
det(thing-11, the-8)
advmod(thing-11, most-9)
amod(thing-11, precious-10)
root(ROOT-0, thing-11)
nsubj(wished-15, he-12)
nsubj(possess-17, he-12)
aux(wished-15, had-13)
advmod(wished-15, ever-14)
rcmod(thing-11, wished-15)
aux(possess-17, to-16)
xcomp(wished-15, possess-17)

(ROOT
  (NP (: --)
    (NP (DT a) (NN thing))
    (PP (IN for)
      (NP (DT a) (NN man)
        (S
          (VP (TO to)
            (VP (VB take)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN grave))
                  (PP (IN with)
                    (NP (PRP him))))))))))
    (. !)))

det(thing-3, a-2)
root(ROOT-0, thing-3)
det(man-6, a-5)
prep_for(thing-3, man-6)
aux(take-8, to-7)
vmod(man-6, take-8)
det(grave-11, the-10)
prep_to(take-8, grave-11)
prep_with(grave-11, him-13)

(ROOT
  (SQ (VBD Was)
    (NP
      (NP
        (NP (RB there))
        (NP (DT no) (NN way)))
      (PP (IN of)
        (NP (VBG carrying))))
    (VP (VBG _)
      (NP (DT any) (JJ _) (NN treasure))
      (PP (TO to)
        (NP (DT the) (JJ other) (NN world))))
    (. ?)))

aux(_-7, Was-1)
nsubj(_-7, there-2)
neg(way-4, no-3)
dep(there-2, way-4)
prep_of(there-2, carrying-6)
root(ROOT-0, _-7)
det(treasure-10, any-8)
amod(treasure-10, _-9)
dobj(_-7, treasure-10)
det(world-14, the-12)
amod(world-14, other-13)
prep_to(_-7, world-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN sold)
            (PP (IN of)
              (NP (PRP$ his) (NN land)
                (S
                  (VP (TO to)
                    (VP (VB secure)
                      (NP (DT the) (NN miracle)))))))))))
    (, ,)
    (CC but)
    (, ,)
    (S
      (INTJ (UH alas))
      (, ,)
      (NP (PRP it))
      (VP (VBD was) (RB all)
        (VP (VBN entailed))))
    (. !)))

nsubj(sold-4, He-1)
aux(sold-4, would-2)
aux(sold-4, have-3)
root(ROOT-0, sold-4)
poss(land-7, his-6)
prep_of(sold-4, land-7)
aux(secure-9, to-8)
vmod(land-7, secure-9)
det(miracle-11, the-10)
dobj(secure-9, miracle-11)
discourse(entailed-20, alas-15)
nsubjpass(entailed-20, it-17)
auxpass(entailed-20, was-18)
advmod(entailed-20, all-19)
conj_but(sold-4, entailed-20)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (DT a) (NN moment)))
      (NP (DT the) (NNP Cellini) (NN chalice))
      (VP (VBD seemed)
        (PP (IN of)
          (NP (JJR less) (NN account)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD felt)
          (ADJP (JJ ready)
            (S
              (VP (TO to)
                (VP (VB throw)
                  (PRT (RP open))
                  (NP
                    (NP (DT the) (NN window))
                    (PP (IN of)
                      (NP (PRP$ his) (NN treasure-room)))))))))
        (CC and)
        (VP (VBP pitch)
          (NP (NN everything))
          (PRT (RP out)))))
    (. .)))

det(moment-3, a-2)
prep_for(seemed-7, moment-3)
det(chalice-6, the-4)
nn(chalice-6, Cellini-5)
nsubj(seemed-7, chalice-6)
root(ROOT-0, seemed-7)
amod(account-10, less-9)
prep_of(seemed-7, account-10)
nsubj(felt-14, he-13)
nsubj(pitch-25, he-13)
conj_and(seemed-7, felt-14)
acomp(felt-14, ready-15)
aux(throw-17, to-16)
xcomp(ready-15, throw-17)
prt(throw-17, open-18)
det(window-20, the-19)
dobj(throw-17, window-20)
poss(treasure-room-23, his-22)
prep_of(window-20, treasure-room-23)
conj_and(seemed-7, pitch-25)
conj_and(felt-14, pitch-25)
dobj(pitch-25, everything-26)
prt(pitch-25, out-27)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN demon))
        (PP (IN of)
          (S
            (VP
              (ADVP (RB _))
              (VBG having)
              (VP (VBN _))))))
      (VP (VBZ is)
        (ADJP
          (ADJP (RB as) (JJ imperious))
          (CC and)
          (ADJP (RB as) (JJ capricious)))
        (PP (IN as)
          (NP
            (NP (DT that))
            (PP (IN of)
              (NP (NN drink)))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN refuge))
          (PP
            (PP (IN from)
              (NP (PRP it)))
            (CC but)
            (PP (IN with)
              (NP (DT the) (NNP Father)))))))
    (. .)))

det(demon-2, The-1)
nsubj(imperious-9, demon-2)
nsubj(capricious-12, demon-2)
advmod(_-6, _-4)
aux(_-6, having-5)
prepc_of(demon-2, _-6)
cop(imperious-9, is-7)
advmod(imperious-9, as-8)
root(ROOT-0, imperious-9)
advmod(capricious-12, as-11)
conj_and(imperious-9, capricious-12)
prep_as(imperious-9, that-14)
prep_of(that-14, drink-16)
expl(is-20, there-19)
conj_and(imperious-9, is-20)
neg(refuge-22, no-21)
nsubj(is-20, refuge-22)
nsubj(is-20, refuge-22')
conj_but(refuge-22, refuge-22')
prep_from(refuge-22, it-24)
det(Father-28, the-27)
prep_with(refuge-22', Father-28)

(ROOT
  (S (`` ``)
    (NP (DT This) (NN kind))
    (VP (VBP goeth)
      (ADVP (RB not) (RB out))
      (PP (IN by)
        (NP (NN prayer))))
    (. .) ('' '')))

det(kind-3, This-2)
nsubj(goeth-4, kind-3)
root(ROOT-0, goeth-4)
dep(out-6, not-5)
advmod(goeth-4, out-6)
prep_by(goeth-4, prayer-8)

(ROOT
  (S
    (NP (DT The) (JJ poor) (NN slave))
    (VP (VBD uttered) (, ,)
      (ADVP
        (NP (RB not) (DT a) (NN sigh))
        (RB now))
      (, ,)
      (PP (CC but)
        (NP (DT a) (NN groan))))
    (. .)))

det(slave-3, The-1)
amod(slave-3, poor-2)
nsubj(uttered-4, slave-3)
root(ROOT-0, uttered-4)
neg(sigh-8, not-6)
det(sigh-8, a-7)
npadvmod(now-9, sigh-8)
advmod(uttered-4, now-9)
prep(uttered-4, but-11)
det(groan-13, a-12)
pobj(but-11, groan-13)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD 'll)
        (VP (VB tell)
          (NP (DT the) (NN man))
          (PRN (, ,) ('' '')
            (S
              (NP (PRP he))
              (VP (VBD said) (, ,)
                (S
                  (VP (VBG thinking)
                    (SBAR
                      (S
                        (NP (NNP George))
                        (VP (VBD had)
                          (VP (VBN borrowed)
                            (NP (DT the) (NN thing)
                              (S
                                (VP (TO to)
                                  (VP (VB show)
                                    (NP (PRP him))))))))))))))
            (, ,) (`` ``))
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBD did) (RB not)
                (ADVP (RB even))
                (VP (VB ask)
                  (NP (DT the) (NN price)))))))))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD can) (RB not)
              (VP (VB buy)
                (NP (PRP it))))))))
    (. !) ('' '')))

nsubj(tell-4, You-2)
aux(tell-4, 'll-3)
root(ROOT-0, tell-4)
det(man-6, the-5)
dobj(tell-4, man-6)
nsubj(said-10, he-9)
parataxis(tell-4, said-10)
xcomp(said-10, thinking-12)
nsubj(borrowed-15, George-13)
aux(borrowed-15, had-14)
ccomp(thinking-12, borrowed-15)
det(thing-17, the-16)
dobj(borrowed-15, thing-17)
aux(show-19, to-18)
vmod(thing-17, show-19)
dobj(show-19, him-20)
mark(ask-28, that-23)
nsubj(ask-28, I-24)
aux(ask-28, did-25)
neg(ask-28, not-26)
advmod(ask-28, even-27)
ccomp(tell-4, ask-28)
det(price-30, the-29)
dobj(ask-28, price-30)
nsubj(know-33, I-32)
parataxis(tell-4, know-33)
nsubj(buy-37, I-34)
aux(buy-37, can-35)
neg(buy-37, not-36)
ccomp(know-33, buy-37)
dobj(buy-37, it-38)

(ROOT
  (S (`` ``)
    (ADVP (RB Perhaps))
    (NP (PRP he))
    (VP (MD would)
      (VP (VB give)
        (NP (PRP you))
        (NP (NN credit))))
    (. !) ('' '')))

advmod(give-5, Perhaps-2)
nsubj(give-5, he-3)
aux(give-5, would-4)
root(ROOT-0, give-5)
iobj(give-5, you-6)
dobj(give-5, credit-7)

(ROOT
  (S
    (VP (VBD suggested)
      (NP (NNP George))
      (, ,)
      (PP (IN with)
        (NP (DT a) (NN smile))))
    (. .)))

root(ROOT-0, suggested-1)
dobj(suggested-1, George-2)
det(smile-6, a-5)
prep_with(suggested-1, smile-6)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. !)))

root(ROOT-0, No-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB have)
        (NP (NN nothing))
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (NN credit))))))))
    (. !)))

nsubj(have-3, I-1)
aux(have-3, will-2)
root(ROOT-0, have-3)
dobj(have-3, nothing-4)
aux(do-6, to-5)
vmod(have-3, do-6)
prep_with(do-6, credit-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should) (RB not)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB call)
                (NP (PRP it))
                (NP (PRP$ my) (JJ own))))))))
    (. !) ('' '')))

nsubj(able-5, I-1)
nsubj(call-7, I-1)
aux(able-5, should-2)
neg(able-5, not-3)
cop(able-5, be-4)
root(ROOT-0, able-5)
aux(call-7, to-6)
xcomp(able-5, call-7)
iobj(call-7, it-8)
poss(own-10, my-9)
dobj(call-7, own-10)

(ROOT
  (S (: --)
    (NP (NNP Money-honesty))
    (VP (VBD was)
      (ADJP (JJ strong)
        (PP (IN in)
          (NP (DT the) (NN laird)))))
    (. .)))

nsubj(strong-4, Money-honesty-2)
cop(strong-4, was-3)
root(ROOT-0, strong-4)
det(laird-7, the-6)
prep_in(strong-4, laird-7)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD continued))))
    (, ,) (`` ``)
    (VP (VBP do)
      (S
        (VP
          (VP (VB try))
          (CC and)
          (VP (VB persuade)
            (S
              (NP (PRP him))
              (VP (TO to)
                (VP (VB let)
                  (SBAR
                    (S
                      (NP (PRP me))
                      (VP (VBP have)
                        (NP
                          (NP (PRP it))
                          (PP (IN for)
                            (NP
                              (NP (DT a) (NN day))
                              (CC or)
                              (NP (CD two)))))
                        (: --)
                        (SBAR (IN that)
                          (S
                            (NP (PRP I))
                            (VP (MD may)
                              (VP (VB get)
                                (NP (PRP$ its) (NN beauty))
                                (PP (IN by)
                                  (NP (NN heart))))))))))))))
          (, ,)
          (CC and)
          (VP (VB think)
            (PP (IN of)
              (NP (PRP it)))
            (NP
              (NP (PDT all) (DT the) (NNS days))
              (, ,)
              (CC and)
              (NP
                (NP (NN dream))
                (PP (IN of)
                  (NP (PRP it)))))))
        (NP
          (NP (PDT all) (DT the) (NNS nights))
          (PP (IN of)
            (NP (PRP$ my) (NN life)))))
      (PP (IN after)))
    (. !) ('' '')))

cc(do-9, But-2)
nsubj(continued-6, he-5)
parataxis(do-9, continued-6)
root(ROOT-0, do-9)
ccomp(do-9, try-10)
ccomp(do-9, persuade-12)
conj_and(try-10, persuade-12)
dobj(persuade-12, him-13)
nsubj(let-15, him-13)
aux(let-15, to-14)
xcomp(persuade-12, let-15)
nsubj(have-17, me-16)
ccomp(let-15, have-17)
dobj(have-17, it-18)
det(day-21, a-20)
prep_for(it-18, day-21)
prep_for(it-18, two-23)
conj_or(day-21, two-23)
mark(get-28, that-25)
nsubj(get-28, I-26)
aux(get-28, may-27)
ccomp(have-17, get-28)
parataxis(have-17, get-28)
poss(beauty-30, its-29)
dobj(get-28, beauty-30)
prep_by(get-28, heart-32)
ccomp(do-9, think-35)
conj_and(try-10, think-35)
prep_of(think-35, it-37)
predet(days-40, all-38)
det(days-40, the-39)
dobj(think-35, days-40)
dobj(think-35, dream-43)
conj_and(days-40, dream-43)
prep_of(dream-43, it-45)
predet(nights-48, all-46)
det(nights-48, the-47)
dep(try-10, nights-48)
poss(life-51, my-50)
prep_of(nights-48, life-51)
prep(do-9, after-52)

(ROOT
  (SINV (`` ``)
    (S
      (NP (EX There))
      (VP (MD will)
        (VP (VB be)
          (NP
            (NP (DT no) (NN difficulty))
            (PP (IN about)
              (NP (DT that)))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP George))
    (. .)))

expl(difficulty-6, There-2)
aux(difficulty-6, will-3)
cop(difficulty-6, be-4)
neg(difficulty-6, no-5)
ccomp(answered-11, difficulty-6)
prep_about(difficulty-6, that-8)
root(ROOT-0, answered-11)
nsubj(answered-11, George-12)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN owner))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJ delighted)
          (S
            (VP (TO to)
              (VP (VB let)
                (S
                  (NP (PRP you))
                  (VP (VB keep)
                    (NP (PRP it))
                    (ADVP
                      (ADVP (RB as) (RB long))
                      (SBAR (IN as)
                        (S
                          (NP (PRP you))
                          (VP (VBP wish)))))))))))))
    (. !) ('' '')))

det(owner-3, The-2)
nsubj(delighted-6, owner-3)
nsubj(let-8, owner-3)
aux(delighted-6, will-4)
cop(delighted-6, be-5)
root(ROOT-0, delighted-6)
aux(let-8, to-7)
xcomp(delighted-6, let-8)
nsubj(keep-10, you-9)
ccomp(let-8, keep-10)
dobj(keep-10, it-11)
advmod(long-13, as-12)
advmod(keep-10, long-13)
mark(wish-16, as-14)
nsubj(wish-16, you-15)
advcl(long-13, wish-16)
ccomp(long-13, wish-16)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD would)
      (NP (PRP it))
      (S
        (VP (VBD were)
          (ADVP (RB so)))))
    (. !) ('' '')))

nsubj(would-3, I-2)
root(ROOT-0, would-3)
dobj(would-3, it-4)
dep(would-3, were-5)
advmod(were-5, so-6)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB so)))
    (. !) ('' '')))

nsubj(is-3, It-2)
root(ROOT-0, is-3)
advmod(is-3, so-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP do) (RB n't)
        (VP (VB mean)
          (S
            (VP (TO to)
              (VP (VB say)
                (PRN (, ,)
                  (NP (NNP George))
                  (, ,)))))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT that) (NN queen))
                (PP (IN of)
                  (NP (NNS jewels))))
              (VP (VBZ is)
                (ADJP (JJ yours))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB lend)
          (NP (PRP it))
          (NP (PRP me)))))
    (. ?) ('' '')))

nsubj(mean-5, You-2)
nsubj(say-7, You-2)
aux(mean-5, do-3)
neg(mean-5, n't-4)
root(ROOT-0, mean-5)
aux(say-7, to-6)
xcomp(mean-5, say-7)
dep(say-7, George-9)
mark(yours-17, that-11)
det(queen-13, that-12)
nsubj(yours-17, queen-13)
prep_of(queen-13, jewels-15)
cop(yours-17, is-16)
ccomp(mean-5, yours-17)
nsubj(lend-22, you-20)
aux(lend-22, will-21)
conj_and(mean-5, lend-22)
iobj(lend-22, it-23)
dobj(lend-22, me-24)

(ROOT
  (S (`` ``)
    (S
      (NP (DT The) (NN thing))
      (VP (VBZ is)
        (NP (NN mine))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB lend)
          (NP (PRP it))
          (: --)
          (ADVP
            (ADVP (RB not) (RB even))
            (PP (TO to)
              (NP (PRP you))))
          (, ,)
          (ADVP (RB sir)))))
    (. !) ('' '')))

det(thing-3, The-2)
nsubj(mine-5, thing-3)
cop(mine-5, is-4)
root(ROOT-0, mine-5)
nsubj(lend-11, I-8)
aux(lend-11, will-9)
neg(lend-11, not-10)
conj_but(mine-5, lend-11)
dobj(lend-11, it-12)
dep(even-15, not-14)
advmod(lend-11, even-15)
prep_to(even-15, you-17)
advmod(lend-11, sir-19)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB wonder)))
    (. !)))

nsubj(wonder-5, I-2)
aux(wonder-5, do-3)
neg(wonder-5, n't-4)
root(ROOT-0, wonder-5)

(ROOT
  (S (: --)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB wonder)))
    (. !)))

nsubj(wonder-5, I-2)
aux(wonder-5, do-3)
neg(wonder-5, n't-4)
root(ROOT-0, wonder-5)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ is)
      (NP (DT a) (JJ great) (NN disappointment)))
    (. !)))

cc(disappointment-6, But-1)
nsubj(disappointment-6, it-2)
cop(disappointment-6, is-3)
det(disappointment-6, a-4)
amod(disappointment-6, great-5)
root(ROOT-0, disappointment-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG beginning)
        (S
          (VP (TO to)
            (VP (VB hope)
              (SBAR
                (S
                  (NP (PRP I)
                    (PRN (: --)
                      (NP (PRP I))
                      (: --)))
                  (VP (MD might)
                    (VP (VB have)
                      (NP
                        (NP (DT the) (NN loan))
                        (PP (IN of)
                          (NP (PRP it))))
                      (PP (IN for)
                        (NP
                          (NP (DT a) (NN week))
                          (CC or)
                          (NP (CD two) (RB even)))))))))))))
    (. !) ('' '')))

nsubj(beginning-3, I-1)
nsubj(hope-5, I-1)
aux(beginning-3, was-2)
root(ROOT-0, beginning-3)
aux(hope-5, to-4)
xcomp(beginning-3, hope-5)
nsubj(have-11, I-6)
dep(I-6, I-8)
aux(have-11, might-10)
ccomp(hope-5, have-11)
det(loan-13, the-12)
dobj(have-11, loan-13)
prep_of(loan-13, it-15)
det(week-18, a-17)
prep_for(have-11, week-18)
prep_for(have-11, two-20)
conj_or(week-18, two-20)
advmod(two-20, even-21)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD should)
      (VP (VB indeed)
        (SBAR (IN if)
          (S
            (NP (DT the) (NN thing))
            (VP (VBD were)
              (NP (NN mine)))))))
    (. !) ('' '')))

nsubj(indeed-4, You-2)
aux(indeed-4, should-3)
root(ROOT-0, indeed-4)
mark(mine-9, if-5)
det(thing-7, the-6)
nsubj(mine-9, thing-7)
cop(mine-9, were-8)
advcl(indeed-4, mine-9)

(ROOT
  (S
    (S
      (S
        (VP (VBD said)
          (NP (NNP George))))
      (, ,)
      (S
        (VP (VBG playing)
          (NP (PRP him))
          (: ;) (`` ``)
          (PP (IN but)))))
    (: --) ('' '')
    (S
      (INTJ (`` ``) (UH Oh))
      (, ,)
      (NP (PRP I))
      (VP (VBZ beg)
        (NP (PRP$ your) (NN pardon))))
    (. !)))

root(ROOT-0, said-1)
dobj(said-1, George-2)
parataxis(said-1, playing-4)
dobj(playing-4, him-5)
prep(playing-4, but-8)
discourse(beg-15, Oh-12)
nsubj(beg-15, I-14)
parataxis(said-1, beg-15)
poss(pardon-17, your-16)
dobj(beg-15, pardon-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD said)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (ADJP (JJ yours)))))))))
    (. !) ('' '')))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(said-4, you-3)
ccomp(thought-2, said-4)
nsubj(yours-7, it-5)
cop(yours-7, was-6)
ccomp(said-4, yours-7)

(ROOT
  (S
    (S (`` ``) (IN So)
      (NP (PRP it))
      (VP (VBD was)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBD brought)
              (NP (PRP it)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (NN mine))
        (ADVP (RB no) (RB longer))))
    (. .)))

dep(was-4, So-2)
nsubj(was-4, it-3)
root(ROOT-0, was-4)
advmod(brought-7, when-5)
nsubj(brought-7, I-6)
advcl(was-4, brought-7)
dobj(brought-7, it-8)
nsubj(mine-13, it-11)
cop(mine-13, is-12)
conj_but(was-4, mine-13)
neg(longer-15, no-14)
advmod(mine-13, longer-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ yours)))
    (. .)))

nsubj(yours-3, It-1)
cop(yours-3, is-2)
root(ROOT-0, yours-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD purchased)
      (NP (PRP it))
      (PP (IN for)
        (NP (PRP you)))
      (NP (DT this) (NN morning)))
    (. .) ('' '')))

nsubj(purchased-2, I-1)
root(ROOT-0, purchased-2)
dobj(purchased-2, it-3)
prep_for(purchased-2, you-5)
det(morning-7, this-6)
tmod(purchased-2, morning-7)

(ROOT
  (S
    (NP (DT The) (JJ old) (NN man))
    (VP (VBD was)
      (ADJP (JJ speechless)))
    (. .)))

det(man-3, The-1)
amod(man-3, old-2)
nsubj(speechless-5, man-3)
cop(speechless-5, was-4)
root(ROOT-0, speechless-5)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD rose))
      (, ,)
      (CC and)
      (VP
        (S
          (VP (VBG seizing)
            (NP (NNP George))
            (PP (IN by)
              (NP (DT both) (NNS hands)))))
        (, ,)
        (VP (VBD stood)
          (PP (VBG staring)
            (PP (IN at)
              (NP (PRP him)))))))
    (. .)))

nsubj(rose-2, He-1)
nsubj(stood-11, He-1)
root(ROOT-0, rose-2)
xcomp(stood-11, seizing-5)
dobj(seizing-5, George-6)
det(hands-9, both-8)
prep_by(seizing-5, hands-9)
conj_and(rose-2, stood-11)
prep(stood-11, staring-12)
pcomp(staring-12, at-13)
pobj(at-13, him-14)

(ROOT
  (S
    (NP
      (NP (NN Something) (RB very))
      (PP (IN like)
        (NP (NNS tears))))
    (VP (VBD gathered)
      (PP (IN within)
        (NP
          (NP (DT the) (JJ reddened) (NNS rims))
          (PP (IN of)
            (NP (PRP$ his) (NNS eyes))))))
    (. .)))

nsubj(gathered-5, Something-1)
advmod(Something-1, very-2)
prep_like(Something-1, tears-4)
root(ROOT-0, gathered-5)
det(rims-9, the-7)
amod(rims-9, reddened-8)
prep_within(gathered-5, rims-9)
poss(eyes-12, his-11)
prep_of(rims-9, eyes-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (VP (VBN grown)
        (NP
          (NP (NN paler)
            (CC and)
            (NN feebler))
          (PP (IN of)
            (NP (JJ late))))
        (, ,)
        (S
          (ADVP (RB ever)
            (PP (IN in)
              (NP (JJ vain) (NN devising))))
          (VP (TO to)
            (VP (VB secure)
              (NP
                (NP
                  (NP (NN possession))
                  (PP (IN of)
                    (NP (DT the) (NN cup))))
                (: --)
                (NP
                  (NP (NN possession))
                  (ADJP (JJ moral)
                    (CONJP (RB as) (RB well) (IN as))
                    (JJ legal)))))))))
    (. .)))

nsubj(grown-3, He-1)
aux(grown-3, had-2)
root(ROOT-0, grown-3)
dobj(grown-3, paler-4)
dobj(grown-3, feebler-6)
conj_and(paler-4, feebler-6)
prep_of(paler-4, late-8)
advmod(secure-15, ever-10)
amod(devising-13, vain-12)
prep_in(ever-10, devising-13)
aux(secure-15, to-14)
vmod(grown-3, secure-15)
dobj(secure-15, possession-16)
det(cup-19, the-18)
prep_of(possession-16, cup-19)
dep(possession-16, possession-21)
amod(possession-21, moral-22)
amod(possession-21, legal-26)
conj_and(moral-22, legal-26)

(ROOT
  (S (CC But)
    (NP (DT this) (JJ entrancing) (NN gift))
    (VP (VBD brought)
      (PP (IN with)
        (NP (PRP it)))
      (NP (NN strength)
        (CC and)
        (NN hope))
      (PP (IN in)
        (NP (NN regard)))
      (PP (TO to)
        (NP (DT the) (NN chalice))))
    (. !)))

cc(brought-5, But-1)
det(gift-4, this-2)
amod(gift-4, entrancing-3)
nsubj(brought-5, gift-4)
root(ROOT-0, brought-5)
prep_with(brought-5, it-7)
dobj(brought-5, strength-8)
dobj(brought-5, hope-10)
conj_and(strength-8, hope-10)
prep_in(brought-5, regard-12)
det(chalice-15, the-14)
prep_to(brought-5, chalice-15)

(ROOT
  (S (`` ``)
    (PP (TO To)
      (NP (PRP him)))
    (NP (DT that) (NN hath))
    (VP (MD shall)
      (VP (VB be)
        (VP (VBN given))))
    (. !) ('' '')))

prep_to(given-8, him-3)
det(hath-5, that-4)
nsubjpass(given-8, hath-5)
aux(given-8, shall-6)
auxpass(given-8, be-7)
root(ROOT-0, given-8)

(ROOT
  (S
    (VP (VBN quoted)
      (NP
        (NP (DT the) (NNP Mammon))
        (PP (IN within)
          (NP (PRP him)))))
    (. .)))

root(ROOT-0, quoted-1)
det(Mammon-3, the-2)
dobj(quoted-1, Mammon-3)
prep_within(Mammon-3, him-5)

(ROOT
  (S (`` ``)
    (NP (NNP George))
    (VP (VBZ !))
    ('' '')))

nsubj(!-3, George-2)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (PP (IN with)
        (NP
          (NP (DT a) (NN moan))
          (PP (IN of)
            (NP (NN ecstasy)))))
      (, ,)
      (SBAR (`` ``)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (NP (PRP$ my) (JJ good) (NN angel))))))
    (. !) ('' '')))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
det(moan-6, a-5)
prep_with(said-2, moan-6)
prep_of(moan-6, ecstasy-8)
nsubj(angel-15, you-11)
cop(angel-15, are-12)
poss(angel-15, my-13)
amod(angel-15, good-14)
ccomp(said-2, angel-15)

(ROOT
  (S (CC and)
    (S
      (VP (VBN sat)
        (PRT (RP down))))
    (VP (VBD exhausted))
    (. .)))

cc(exhausted-4, and-1)
csubj(exhausted-4, sat-2)
prt(sat-2, down-3)
root(ROOT-0, exhausted-4)

(ROOT
  (S
    (NP (DT The) (NN watch))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN key))
        (PP (TO to)
          (NP
            (NP (PRP$ his) (`` ``) (NN closet))
            (, ,) ('' '')
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (VBD persisted)
                  (PP (IN in)
                    (S
                      (VP (VBG calling)
                        (NP (PRP$ his) (NN treasury))))))))))))
    (. .)))

det(watch-2, The-1)
nsubj(key-5, watch-2)
cop(key-5, was-3)
det(key-5, the-4)
root(ROOT-0, key-5)
poss(closet-9, his-7)
prep_to(key-5, closet-9)
mark(persisted-14, as-12)
nsubj(persisted-14, he-13)
rcmod(closet-9, persisted-14)
prepc_in(persisted-14, calling-16)
poss(treasury-18, his-17)
dobj(calling-16, treasury-18)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (JJ old) (NNS times)))
      (NP
        (NP (RB not) (DT a) (JJ few) (NNS houses))
        (PP (IN in)
          (NP (NNP Scotland))))
      (VP (VBD held)
        (NP
          (NP (DT a) (JJ certain) (JJ tiny) (NN room))
          (, ,)
          (VP (VBN built)
            (PP (IN for)
              (NP
                (NP (DT the) (NN head))
                (PP (IN of)
                  (NP (DT the) (NN family))))))
          (, ,)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (PRP$ his) (NN closet))
                  (PP (IN for)
                    (NP (NN prayer))))))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (PRN (, ,)
          (S
            (NP (PRP I))
            (VP (VBP believe) (, ,)
              (PP (IN with)
                (NP
                  (NP (DT the) (NN notion))
                  (PP (IN of)
                    (NP
                      (NP (PDT such) (DT a) (NN room))
                      (PP (IN in)
                        (NP (PRP$ his) (NN head)))))))
              (, ,)
              (SBAR (IN that)
                (S
                  (S
                    (NP (DT the) (NN laird))
                    (VP (VBD had)
                      (VP (VBN called)
                        (S
                          (NP (PRP$ his) (NN museum))
                          (NP (PRP$ his) (NN closet))))))
                  (: ;)
                  (CC and)
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (ADJP
                        (ADJP (RBR more) (JJ right))
                        (SBAR (IN than)
                          (S
                            (NP (PRP he))
                            (VP (VBD meant)
                              (S
                                (VP (TO to)
                                  (VP (VB be)
                                    (PRN (: ;)
                                      (PP (IN for) (IN in)
                                        (NP
                                          (NP (DT that) (NN chamber))
                                          (SBAR
                                            (S
                                              (NP (PRP he))
                                              (VP (VBD did)
                                                (NP (PRP$ his) (NN truest) (NN worship)))))))
                                      (: --))
                                    (NP
                                      (NP (NN truest))
                                      (ADVP (RB as)
                                        (PP (TO to)
                                          (NP (DT the) (NN love))))
                                      (PP (IN in)
                                        (NP (PRP it)))
                                      (, ,)
                                      (ADJP (JJ falsest)
                                        (PP (IN as)
                                          (PP (TO to)
                                            (NP (PRP$ its) (NN object)))))))))))))))
                  (: ;)
                  (S
                    (PP (IN for)
                      (NP (RB there)))
                    (NP (PRP he))
                    (VP (VBD worshiped)
                      (SBAR
                        (S
                          (NP (DT the) (NN god) (NN vilest))
                          (VP (VBD bred)
                            (PP (IN of)
                              (NP (PDT all) (DT the) (NNS gods))))))))))))
          (, ,))
        (VP (VBN bred)
          (ADVP (RB namely))
          (PP (IN of)
            (NP
              (NP
                (NP (NN man) (POS 's))
                (NN distrust))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN Life))
                  (PP (IN of)
                    (NP (DT the) (NN universe))))))))))
    (. .)))

amod(times-3, old-2)
prep_in(held-10, times-3)
neg(houses-7, not-4)
det(houses-7, a-5)
amod(houses-7, few-6)
nsubj(held-10, houses-7)
prep_in(houses-7, Scotland-9)
root(ROOT-0, held-10)
det(room-14, a-11)
amod(room-14, certain-12)
amod(room-14, tiny-13)
dobj(held-10, room-14)
vmod(room-14, built-16)
det(head-19, the-18)
prep_for(built-16, head-19)
det(family-22, the-21)
prep_of(head-19, family-22)
aux(closet-27, to-24)
cop(closet-27, be-25)
poss(closet-27, his-26)
vmod(room-14, closet-27)
prep_for(closet-27, prayer-29)
nsubjpass(bred-106, it-31)
auxpass(bred-106, was-32)
nsubj(believe-35, I-34)
parataxis(bred-106, believe-35)
det(notion-39, the-38)
prep_with(believe-35, notion-39)
predet(room-43, such-41)
det(room-43, a-42)
prep_of(notion-39, room-43)
poss(head-46, his-45)
prep_in(room-43, head-46)
mark(called-52, that-48)
det(laird-50, the-49)
nsubj(called-52, laird-50)
aux(called-52, had-51)
ccomp(believe-35, called-52)
poss(museum-54, his-53)
nsubj(closet-56, museum-54)
poss(closet-56, his-55)
xcomp(called-52, closet-56)
nsubj(right-62, he-59)
cop(right-62, was-60)
advmod(right-62, more-61)
ccomp(believe-35, right-62)
conj_and(called-52, right-62)
mark(meant-65, than-63)
nsubj(meant-65, he-64)
nsubj(truest-79, he-64)
ccomp(right-62, meant-65)
aux(truest-79, to-66)
cop(truest-79, be-67)
dep(in-70, for-69)
dep(truest-79, in-70)
det(chamber-72, that-71)
pobj(in-70, chamber-72)
nsubj(did-74, he-73)
rcmod(chamber-72, did-74)
poss(worship-77, his-75)
nn(worship-77, truest-76)
dobj(did-74, worship-77)
xcomp(meant-65, truest-79)
advmod(truest-79, as-80)
det(love-83, the-82)
prep_to(as-80, love-83)
prep_in(truest-79, it-85)
amod(truest-79, falsest-87)
prepc_as_to(falsest-87, to-89)
poss(object-91, its-90)
pobj(falsest-87, object-91)
prep(worshiped-96, for-93)
pobj(for-93, there-94)
nsubj(worshiped-96, he-95)
ccomp(believe-35, worshiped-96)
conj_and(called-52, worshiped-96)
parataxis(called-52, worshiped-96)
det(vilest-99, the-97)
nn(vilest-99, god-98)
nsubj(bred-100, vilest-99)
ccomp(worshiped-96, bred-100)
predet(gods-104, all-102)
det(gods-104, the-103)
prep_of(bred-100, gods-104)
parataxis(held-10, bred-106)
advmod(bred-106, namely-107)
poss(distrust-111, man-109)
prep_of(bred-106, distrust-111)
det(Life-114, the-113)
prep_in(distrust-111, Life-114)
det(universe-117, the-116)
prep_of(Life-114, universe-117)

(ROOT
  (S
    (S (CC And)
      (NP (RB now))
      (ADVP (RB here))
      (ADVP (RB also))
      (VP (VBD were)
        (NP
          (NP (CD two))
          (VP (VBN met)
            (ADVP (RB together))
            (PP (TO to)
              (NP (NN worship)))))))
    (: ;)
    (S
      (PP (IN for)
        (PP (IN from)
          (NP (DT this) (NN time))))
      (NP
        (NP (DT the) (NN laird))
        (, ,)
        (VP (VBG disclosing)
          (NP (PRP$ his) (NN secret)))
        (, ,))
      (VP (VBD made)
        (S
          (NP (NNP George))
          (ADJP (JJ free)
            (PP (IN of)
              (NP (PRP$ his) (NN sanctuary)))))))
    (. .)))

cc(two-6, And-1)
nsubj(two-6, now-2)
advmod(two-6, here-3)
advmod(two-6, also-4)
cop(two-6, were-5)
root(ROOT-0, two-6)
vmod(two-6, met-7)
advmod(met-7, together-8)
prep_to(met-7, worship-10)
prep(made-23, for-12)
pcomp(for-12, from-13)
det(time-15, this-14)
pobj(from-13, time-15)
det(laird-17, the-16)
nsubj(made-23, laird-17)
vmod(laird-17, disclosing-19)
poss(secret-21, his-20)
dobj(disclosing-19, secret-21)
parataxis(two-6, made-23)
nsubj(free-25, George-24)
xcomp(made-23, free-25)
poss(sanctuary-28, his-27)
prep_of(free-25, sanctuary-28)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD was)
      (PP (IN by)
        (NP
          (NP (DT this) (NN time))
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP (DT a) (JJ genuine) (NN interest))
                  (PP (IN in)
                    (NP (DT the) (NN collection))))))))))
    (. .)))

nsubj(was-2, George-1)
root(ROOT-0, was-2)
det(time-5, this-4)
prep_by(was-2, time-5)
amod(time-5, able-6)
aux(take-8, to-7)
xcomp(able-6, take-8)
det(interest-11, a-9)
amod(interest-11, genuine-10)
dobj(take-8, interest-11)
det(collection-14, the-13)
prep_in(take-8, collection-14)

(ROOT
  (S
    (S (CC But)
      (NP (PRP he))
      (VP (VBD was)
        (ADJP
          (ADJP (RB much) (JJ amused))
          (, ,)
          (ADJP (RB sometimes) (JJ annoyed)))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT the) (NN behavior))
            (PP (IN of)
              (NP
                (NP (DT the) (NN laird))
                (PP (IN in)
                  (NP (PRP$ his) (NN closet)))))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (RBR more) (JJ nervous)
          (CC and)
          (JJ touchy))
        (PP (IN over)
          (NP (PRP$ his) (NNS things)))
        (PP (IN than)
          (NP
            (NP (DT a) (NN she-bear))
            (PP (IN over)
              (NP (PRP$ her) (NNS cubs)))))))
    (. .)))

cc(amused-5, But-1)
nsubj(amused-5, he-2)
cop(amused-5, was-3)
advmod(amused-5, much-4)
root(ROOT-0, amused-5)
advmod(annoyed-8, sometimes-7)
dep(amused-5, annoyed-8)
det(behavior-12, the-11)
prep_with(amused-5, behavior-12)
det(laird-15, the-14)
prep_of(behavior-12, laird-15)
poss(closet-18, his-17)
prep_in(laird-15, closet-18)
nsubj(nervous-23, he-20)
nsubj(touchy-25, he-20)
cop(nervous-23, was-21)
advmod(nervous-23, more-22)
parataxis(amused-5, nervous-23)
parataxis(amused-5, touchy-25)
conj_and(nervous-23, touchy-25)
poss(things-28, his-27)
prep_over(nervous-23, things-28)
det(she-bear-31, a-30)
prep_than(nervous-23, she-bear-31)
poss(cubs-34, her-33)
prep_over(she-bear-31, cubs-34)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP
          (NP (DT all) (NNS dangers))
          (PP (TO to)
            (NP (PRP$ his) (NNS darlings)))))
      (NP (PRP he))
      (VP (VBD thought)
        (NP
          (NP (DT a) (NN woman))
          (NP (DT the) (JJS worst)))))
    (, ,)
    (CC and)
    (SINV
      (VP (VBD had)
        (VP
          (ADVP (RB therefore))
          (VBN seized)
          (PP (IN with)
            (NP
              (NP
                (ADVP (RB avidity))
                (DT the) (NN chance))
              (PP (IN of)
                (S
                  (VP (VBG making)
                    (NP (DT that) (NN room)))))))))
      (NP
        (NP (DT a) (JJ hidden) (NN one))
        (, ,)
        (NP
          (NP (DT the) (NN possibility))
          (SBAR
            (WHPP (IN of)
              (WHNP (WDT which)))
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN spied)
                  (NP
                    (NP (RB almost) (DT the) (NN moment))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (ADVP (RB first))
                        (VP (VBD entered)
                          (NP (PRP it)))))))))))))
    (. .)))

det(dangers-3, all-2)
prep_of(thought-8, dangers-3)
poss(darlings-6, his-5)
prep_to(dangers-3, darlings-6)
nsubj(thought-8, he-7)
root(ROOT-0, thought-8)
det(woman-10, a-9)
dobj(thought-8, woman-10)
iobj(thought-8, woman-10)
det(worst-12, the-11)
dep(woman-10, worst-12)
aux(seized-17, had-15)
advmod(seized-17, therefore-16)
conj_and(thought-8, seized-17)
advmod(chance-21, avidity-19)
det(chance-21, the-20)
prep_with(seized-17, chance-21)
prepc_of(chance-21, making-23)
det(room-25, that-24)
dobj(making-23, room-25)
det(one-28, a-26)
amod(one-28, hidden-27)
nsubj(seized-17, one-28)
det(possibility-31, the-30)
appos(one-28, possibility-31)
prep_of(spied-36, possibility-31)
nsubj(spied-36, he-34)
aux(spied-36, had-35)
rcmod(possibility-31, spied-36)
advmod(moment-39, almost-37)
det(moment-39, the-38)
dobj(spied-36, moment-39)
nsubj(entered-42, he-40)
advmod(entered-42, first-41)
rcmod(moment-39, entered-42)
dobj(entered-42, it-43)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD became)
        (SBAR
          (S (, ,)
            (SBAR (IN if)
              (FRAG (JJ possible)))
            (, ,)
            (VP
              (VP (VBP fonder)
                (PP (IN of)
                  (NP (PRP$ his) (NNS things)))
                (ADVP (IN than) (RB ever)))
              (, ,)
              (CC and)
              (VP (VBD flattered)
                (NP (PRP himself))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN found)
                        (PP (IN in)
                          (NP (NNP George) (DT a) (JJ fellow-worshiper)))))))))))))
    (: :)
    (S
      (NP
        (NP (NNP George) (POS 's))
        (ADJP (JJ exaggerated)
          (CC or)
          (JJ pretended))
        (NN appreciation))
      (VP (VBD enhanced)
        (NP
          (NP (PRP$ his) (NN sense))
          (PP (IN of)
            (NP (PRP$ their) (NN value))))))
    (. .)))

nsubj(became-2, He-1)
root(ROOT-0, became-2)
mark(possible-5, if-4)
advcl(fonder-7, possible-5)
ccomp(became-2, fonder-7)
poss(things-10, his-9)
prep_of(fonder-7, things-10)
advmod(fonder-7, than-11)
advmod(than-11, ever-12)
ccomp(became-2, flattered-15)
conj_and(fonder-7, flattered-15)
dobj(flattered-15, himself-16)
nsubj(found-19, he-17)
aux(found-19, had-18)
dep(flattered-15, found-19)
prep_in(found-19, George-21)
det(George-21, a-22)
amod(George-21, fellow-worshiper-23)
poss(appreciation-30, George-25)
amod(appreciation-30, exaggerated-27)
conj_or(exaggerated-27, pretended-29)
amod(appreciation-30, pretended-29)
nsubj(enhanced-31, appreciation-30)
parataxis(became-2, enhanced-31)
poss(sense-33, his-32)
dobj(enhanced-31, sense-33)
poss(value-36, their-35)
prep_of(sense-33, value-36)

(ROOT
  (NP
    (NP (NNP CHAPTER) (NNP XXIII))
    (PP (IN ON)
      (NP (DT THE) (NN MOOR)))
    (. .)))

nn(XXIII-2, CHAPTER-1)
root(ROOT-0, XXIII-2)
det(MOOR-5, THE-4)
prep_on(XXIII-2, MOOR-5)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD had)
        (NP
          (NP (DT a) (JJ strong) (JJ shaggy) (NN pony))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP she))
              (VP (VBD rode)
                (NP (DT the) (NN oftener))
                (SBAR (IN that)
                  (S
                    (NP (NNP George))
                    (VP (VBD came)
                      (ADVP (RB so) (RB often)))))))))))
    (: ;)
    (S
      (VP (VBG taking)
        (NP (NN care))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP
                (ADVP (RB well))
                (VBN gone)
                (SBAR (IN before)
                  (S
                    (NP (PRP he))
                    (VP (VBD arrived)
                      (PP (IN on)
                        (NP (PRP$ his) (JJ beautiful) (NN horse))))))))))))
    (. .)))

nsubj(had-2, Alexa-1)
root(ROOT-0, had-2)
det(pony-6, a-3)
amod(pony-6, strong-4)
amod(pony-6, shaggy-5)
dobj(had-2, pony-6)
dobj(rode-10, pony-6)
nsubj(rode-10, she-9)
rcmod(pony-6, rode-10)
det(oftener-12, the-11)
dobj(rode-10, oftener-12)
mark(came-15, that-13)
nsubj(came-15, George-14)
ccomp(rode-10, came-15)
advmod(often-17, so-16)
advmod(came-15, often-17)
parataxis(had-2, taking-19)
dobj(taking-19, care-20)
aux(gone-24, to-21)
auxpass(gone-24, be-22)
advmod(gone-24, well-23)
vmod(taking-19, gone-24)
mark(arrived-27, before-25)
nsubj(arrived-27, he-26)
advcl(gone-24, arrived-27)
poss(horse-31, his-29)
amod(horse-31, beautiful-30)
prep_on(arrived-27, horse-31)

(ROOT
  (S
    (NP (CD One) (JJ lovely) (NNP summer) (NN evening))
    (NP (PRP she))
    (VP
      (VP (VBD had)
        (VP (VBN been)
          (PP (IN across)
            (NP
              (NP (DT the) (NN moor))
              (NP (DT a) (JJ long) (NN way))))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (VP (VBG returning)
          (SBAR (IN as)
            (S
              (NP (DT the) (NN sun))
              (VP (VBD went)
                (PRT (RP down))))))))
    (. .)))

num(evening-4, One-1)
amod(evening-4, lovely-2)
nn(evening-4, summer-3)
tmod(been-7, evening-4)
nsubj(been-7, she-5)
nsubj(returning-17, she-5)
aux(been-7, had-6)
root(ROOT-0, been-7)
det(moor-10, the-9)
prep_across(been-7, moor-10)
det(way-13, a-11)
amod(way-13, long-12)
dep(moor-10, way-13)
aux(returning-17, was-16)
conj_and(been-7, returning-17)
mark(went-21, as-18)
det(sun-20, the-19)
nsubj(went-21, sun-20)
advcl(returning-17, went-21)
prt(went-21, down-22)

(ROOT
  (S
    (NP
      (NP (DT A) (NN glory))
      (PP (IN of)
        (NP (JJ red) (NN molten) (NN gold))))
    (VP (VBD was)
      (VP (VBG shining)
        (PP (IN in)
          (NP (PRP$ her) (NN face)))
        (, ,)
        (SBAR (RB so) (IN that)
          (S
            (NP (PRP she))
            (VP
              (VP (MD could)
                (VP (VB see)
                  (NP (NN nothing))
                  (PP (IN in)
                    (NP
                      (NP (NN front))
                      (PP (IN of)
                        (NP (PRP her)))))))
              (, ,)
              (CC and)
              (VP (VBD was)
                (VP
                  (NP (DT a) (JJ little))
                  (VBN startled)
                  (PP (IN by)
                    (NP
                      (NP (DT a) (NN voice))
                      (VP (VBG greeting)
                        (NP (PRP her))
                        (PP (IN with)
                          (NP (DT a) (JJ respectful) (NN good-evening)))))))))))))
    (. .)))

det(glory-2, A-1)
nsubj(shining-8, glory-2)
amod(gold-6, red-4)
nn(gold-6, molten-5)
prep_of(glory-2, gold-6)
aux(shining-8, was-7)
root(ROOT-0, shining-8)
poss(face-11, her-10)
prep_in(shining-8, face-11)
advmod(see-17, so-13)
mark(see-17, that-14)
nsubj(see-17, she-15)
nsubjpass(startled-28, she-15)
aux(see-17, could-16)
advcl(shining-8, see-17)
dobj(see-17, nothing-18)
prep_in_front_of(see-17, her-22)
auxpass(startled-28, was-25)
det(little-27, a-26)
dobj(startled-28, little-27)
advcl(shining-8, startled-28)
conj_and(see-17, startled-28)
det(voice-31, a-30)
agent(startled-28, voice-31)
vmod(voice-31, greeting-32)
dobj(greeting-32, her-33)
det(good-evening-37, a-35)
amod(good-evening-37, respectful-36)
prep_with(greeting-32, good-evening-37)

(ROOT
  (S
    (NP (DT The) (JJ same) (NN moment))
    (NP (PRP she))
    (VP (VBD was)
      (PP (IN alongside) (IN of)
        (NP
          (NP (DT the) (NN speaker))
          (PP (IN in)
            (NP
              (NP (DT the) (VBG blinding) (NN veil))
              (PP (IN of)
                (NP (DT the) (NN sun))))))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, same-2)
nsubj(was-5, moment-3)
nsubj(was-5, she-4)
root(ROOT-0, was-5)
det(speaker-9, the-8)
prep_alongside_of(was-5, speaker-9)
det(veil-13, the-11)
amod(veil-13, blinding-12)
prep_in(speaker-9, veil-13)
det(sun-16, the-15)
prep_of(veil-13, sun-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (NNP Andrew))
        (VP (VBG walking)
          (NP (NN home))
          (PP (IN from)
            (NP
              (NP (DT a) (NN village))
              (PP (IN on)
                (NP
                  (NP (DT the) (JJ other) (NN side))
                  (PP (IN of)
                    (NP (DT the) (NN moor))))))))))
    (. .)))

nsubj(Andrew-3, It-1)
cop(Andrew-3, was-2)
root(ROOT-0, Andrew-3)
vmod(Andrew-3, walking-4)
dobj(walking-4, home-5)
det(village-8, a-7)
prep_from(walking-4, village-8)
det(side-12, the-10)
amod(side-12, other-11)
prep_on(village-8, side-12)
det(moor-15, the-14)
prep_of(side-12, moor-15)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD drew)
        (NP (NN rein))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD went)
        (ADVP (RB together))))
    (. .)))

nsubj(drew-2, She-1)
root(ROOT-0, drew-2)
dobj(drew-2, rein-3)
nsubj(went-7, they-6)
conj_and(drew-2, went-7)
advmod(went-7, together-8)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ has)
        (VP (VBN come)
          (PP (TO to)
            (NP
              (NP (PRP you))
              (, ,)
              (NP (NNP Mr.) (NNP Ingram)))))))
    (. ?) ('' '')))

nsubj(come-4, What-2)
aux(come-4, has-3)
root(ROOT-0, come-4)
prep_to(come-4, you-6)
nn(Ingram-9, Mr.-8)
appos(you-6, Ingram-9)

(ROOT
  (S
    (S
      (NP (PRP she))
      (VP (VBD said)))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP hear)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD were)
              (PP (IN at)
                (NP (NN church))
                (NP (JJ last) (NNP Sunday)))
              (NP (NN evening)))))))
    (. !) ('' '')))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
nsubj(hear-6, I-5)
parataxis(said-2, hear-6)
nsubj(evening-13, you-7)
cop(evening-13, were-8)
prep_at(evening-13, church-10)
amod(Sunday-12, last-11)
tmod(evening-13, Sunday-12)
ccomp(hear-6, evening-13)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP I))
      (VP
        (VP (RB not) (VB be))
        (, ,)
        (VP (VB ma'am))))
    (. ?) ('' '')))

advmod(be-6, Why-2)
aux(be-6, should-3)
nsubj(be-6, I-4)
neg(be-6, not-5)
root(ROOT-0, be-6)
dep(be-6, ma'am-8)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Andrew-2)

(ROOT
  (S (`` ``)
    (PP (IN For)
      (ADVP
        (NP (DT the) (NN reason))
        (IN that)))
    (NP (PRP you))
    (VP (VBP are) (RB not)
      (PP (IN in)
        (NP
          (NP (DT the) (NN way))
          (PP (IN of)
            (S
              (VP (VBG going)))))))
    (. .) ('' '')))

prep(are-7, For-2)
det(reason-4, the-3)
npadvmod(that-5, reason-4)
pcomp(For-2, that-5)
nsubj(are-7, you-6)
root(ROOT-0, are-7)
neg(are-7, not-8)
det(way-11, the-10)
prep_in(are-7, way-11)
prepc_of(way-11, going-13)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (MD might)
      (VP
        (VP (VB be)
          (NP (JJ good) (NN reason))
          (PP
            (PP (IN for)
              (S
                (VP (VBG going)
                  (ADVP (RB once)))))
            (, ,)
            (CC or)
            (PP (IN for)
              (S
                (VP (VBG going)
                  (NP (JJ many) (NNS times)))))))
        (, ,)
        (CC and)
        (ADVP (RB yet))
        (VP (RB not)
          (PP (IN for)
            (S
              (VP (VBG going)
                (ADVP (RB always))))))))
    (. !) ('' '')))

expl(reason-6, There-2)
aux(reason-6, might-3)
cop(reason-6, be-4)
amod(reason-6, good-5)
root(ROOT-0, reason-6)
prepc_for(reason-6, going-8)
advmod(going-8, once-9)
prepc_for(reason-6, going-13)
conj_or(going-8, going-13)
amod(times-15, many-14)
dobj(going-13, times-15)
conj_and(reason-6, yet-18)
neg(yet-18, not-19)
prepc_for(yet-18, going-21)
advmod(going-21, always-22)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD wo) (RB n't)
      (VP (VB begin)
        (PP (IN with)
          (S
            (VP (VBG quarreling))))))
    (. !)))

nsubj(begin-5, We-2)
aux(begin-5, wo-3)
neg(begin-5, n't-4)
root(ROOT-0, begin-5)
prepc_with(begin-5, quarreling-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS things))
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD shall) (RB not)
              (VP (VB agree)
                (PRT (RP about))))))))
    (. !) ('' '')))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, things-3)
nsubj(agree-7, we-4)
aux(agree-7, shall-5)
neg(agree-7, not-6)
rcmod(things-3, agree-7)
prt(agree-7, about-8)

(ROOT
  (S
    (S
      (NP (`` ``)
        (NP (NNP Yes))
        (: ;)
        (NP (CD one)
          (CC or)
          (CD two))
        (: --)
        (PP (IN for)
          (NP (DT a) (NN time)))
        (, ,)))
    (NP (PRP I))
    (VP (VBP believe))
    (. !) ('' '')))

dep(believe-13, Yes-2)
dep(Yes-2, one-4)
dep(Yes-2, two-6)
conj_or(one-4, two-6)
det(time-10, a-9)
prep_for(Yes-2, time-10)
nsubj(believe-13, I-12)
root(ROOT-0, believe-13)

(ROOT
  (S
    (VP (VBN returned)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, returned-1)
dobj(returned-1, Andrew-2)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB think)
        (PP (IN of)
          (NP
            (NP (NNP Mr.) (NNP Rackstraw) (POS 's))
            (NN sermon)))))
    (. ?)))

dobj(think-5, What-2)
aux(think-5, did-3)
nsubj(think-5, you-4)
root(ROOT-0, think-5)
nn(Rackstraw-8, Mr.-7)
poss(sermon-10, Rackstraw-8)
prep_of(think-5, sermon-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD went)
            (S
              (VP (TO to)
                (VP (VB hear)
                  (S
                    (VP (VBG _)
                      (S
                        (NP (PRP him))
                        (ADJP (JJ _))))))))))))
    (. .) ('' ') ('' '')))

nsubj(suppose-2, I-1)
root(ROOT-0, suppose-2)
nsubj(went-4, you-3)
nsubj(hear-6, you-3)
ccomp(suppose-2, went-4)
aux(hear-6, to-5)
xcomp(went-4, hear-6)
xcomp(hear-6, _-7)
nsubj(_-9, him-8)
xcomp(_-7, _-9)

(ROOT
  (FRAG
    (FRAG
      (INTJ (`` ``) (UH Yes))
      (, ,)
      (NP (NN ma'am)))
    (: --)
    (FRAG
      (ADVP (IN at) (JJS least))
      (ADVP (RB partly) (. .) ('' '')))))

discourse(ma'am-4, Yes-2)
root(ROOT-0, ma'am-4)
dep(ma'am-4, at-6)
pobj(at-6, least-7)
dep(at-6, partly-8)

(ROOT
  (INTJ (`` ``) (UH Well) (. ?) ('' '')))

root(ROOT-0, Well-2)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Will))
    (SQ
      (NP (PRP you))
      (VP (VB tell)
        (NP (PRP me))
        (ADVP (RB first))
        (SBAR (IN whether)
          (S
            (NP (PRP you))
            (VP (VBD were)
              (VP (VBN satisfied)
                (PP (IN with)
                  (NP
                    (NP (NNP Mr.) (NNP Rackstraw) (POS 's))
                    (NN teaching)))))))))
    (. ?)))

advmod(tell-4, Will-2)
nsubj(tell-4, you-3)
root(ROOT-0, tell-4)
dobj(tell-4, me-5)
advmod(tell-4, first-6)
mark(satisfied-10, whether-7)
nsubjpass(satisfied-10, you-8)
auxpass(satisfied-10, were-9)
ccomp(tell-4, satisfied-10)
nn(Rackstraw-13, Mr.-12)
poss(teaching-15, Rackstraw-13)
prep_with(satisfied-10, teaching-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD were)
            (ADVP (RB there))))))
    (. .) ('' '')))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubj(were-4, you-3)
ccomp(know-2, were-4)
advmod(were-4, there-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (RB quite) (VBN satisfied)))
    (. .) ('' '')))

nsubjpass(satisfied-5, I-2)
auxpass(satisfied-5, was-3)
advmod(satisfied-5, quite-4)
root(ROOT-0, satisfied-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (NP (NN reason))
        (PP (IN for)
          (S
            (VP (VBG saying)
              (NP (NN anything))
              (PP (IN about)
                (NP (PRP it))))))))
    (. .) ('' '')))

advmod(see-6, Then-2)
nsubj(see-6, I-3)
aux(see-6, do-4)
neg(see-6, n't-5)
root(ROOT-0, see-6)
dobj(see-6, reason-7)
prepc_for(see-6, saying-9)
dobj(saying-9, anything-10)
prep_about(saying-9, it-12)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (ADJP (JJ wrong)))))
    (, ,)
    (NP (PRP you))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB try)
            (S
              (VP (TO to)
                (VP (VB set)
                  (S
                    (NP (PRP me))
                    (ADJP (RB right))))))))))
    (. !) ('' '')))

mark(wrong-5, If-2)
nsubj(wrong-5, I-3)
cop(wrong-5, am-4)
advcl(ought-8, wrong-5)
nsubj(ought-8, you-7)
nsubj(try-10, you-7)
nsubj(set-12, you-7)
root(ROOT-0, ought-8)
aux(try-10, to-9)
xcomp(ought-8, try-10)
aux(set-12, to-11)
xcomp(try-10, set-12)
nsubj(right-14, me-13)
xcomp(set-12, right-14)

(ROOT
  (S (`` ``)
    (NP (DT The) (NNP prophet) (NNP Elisha))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN done)
          (ADJP (RB no) (JJ good))
          (PP (IN by)
            (S
              (VP (VBG throwing)
                (NP (PRP$ his) (NN salt))
                (PP (IN into)
                  (NP (DT the) (JJ running) (NN stream)))))))))
    (. .)))

det(Elisha-4, The-2)
nn(Elisha-4, prophet-3)
nsubj(done-7, Elisha-4)
aux(done-7, would-5)
aux(done-7, have-6)
root(ROOT-0, done-7)
neg(good-9, no-8)
acomp(done-7, good-9)
prepc_by(done-7, throwing-11)
poss(salt-13, his-12)
dobj(throwing-11, salt-13)
det(stream-17, the-15)
amod(stream-17, running-16)
prep_into(throwing-11, stream-17)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD cast)
        (NP (PRP it))))
    (, ,)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB remember) (, ,)
        (PP (IN into)
          (NP (DT the) (NN spring)))))
    (. !) ('' '')))

nsubj(cast-2, He-1)
ccomp(remember-7, cast-2)
dobj(cast-2, it-3)
nsubj(remember-7, you-5)
aux(remember-7, will-6)
root(ROOT-0, remember-7)
det(spring-11, the-10)
prep_into(remember-7, spring-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB understand)
        (NP (PRP you))))
    (. .) ('' '')))

nsubj(understand-5, I-2)
aux(understand-5, do-3)
neg(understand-5, not-4)
root(ROOT-0, understand-5)
dobj(understand-5, you-6)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN use))
        (PP (IN in)
          (S
            (VP (VBG persuading)
              (NP (DT a) (NN person)
                (S
                  (VP (TO to)
                    (VP (VB change)
                      (NP (DT an) (NN opinion)))))))))))
    (. .) ('' '')))

expl(is-3, There-2)
root(ROOT-0, is-3)
neg(use-5, no-4)
nsubj(is-3, use-5)
prepc_in(use-5, persuading-7)
det(person-9, a-8)
dobj(persuading-7, person-9)
aux(change-11, to-10)
vmod(person-9, change-11)
det(opinion-13, an-12)
dobj(change-11, opinion-13)

(ROOT
  (S (`` ``)
    (VP (VB Why) (RB not))
    (. ?) ('' '')))

root(ROOT-0, Why-2)
neg(Why-2, not-3)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (DT the) (NN man))
        (VP (VBZ is) (RB neither)
          (NP (DT the) (JJR better)))))
    (VP (VBZ nor)
      (NP
        (NP (DT the) (JJR worse))
        (PP (IN for)
          (NP (PRP it)))))
    (. .)))

mark(better-8, Because-2)
det(man-4, the-3)
nsubj(better-8, man-4)
cop(better-8, is-5)
advmod(better-8, neither-6)
det(better-8, the-7)
csubj(nor-9, better-8)
root(ROOT-0, nor-9)
det(worse-11, the-10)
dobj(nor-9, worse-11)
prep_for(worse-11, it-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD had)
          (VP (VBN told)
            (NP (PRP me))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBD were)
                  (ADJP (JJ distressed)
                    (S
                      (VP (TO to)
                        (VP (VB hear)
                          (S
                            (NP
                              (NP (DT a) (NN man))
                              (PP (IN in)
                                (NP (NN authority))))
                            (VP (VB speak)
                              (SBAR (IN as)
                                (S
                                  (NP (NNP Mr.) (NNP Rackstraw))
                                  (VP (VBD spoke)
                                    (S
                                      (VP (VBG concerning)
                                        (NP
                                          (NP (DT a) (NN being))
                                          (SBAR
                                            (S
                                              (NP (PRP you))
                                              (VP (VBD loved)))))))))))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN tried)
          (S
            (VP (TO to)
              (VP (VB comfort)
                (NP (PRP you))
                (PP (IN by)
                  (S
                    (VP (VBG pointing)
                      (PRT (RP out))
                      (SBAR
                        (WHADVP (WRB how)
                          (ADJP (JJ false)))
                        (S
                          (NP (PRP it))
                          (VP (VBD was)))))))))))))
    (. .)))

mark(told-4, If-1)
nsubj(told-4, you-2)
aux(told-4, had-3)
advcl(tried-29, told-4)
dobj(told-4, me-5)
nsubj(distressed-8, you-6)
nsubj(hear-10, you-6)
cop(distressed-8, were-7)
dep(told-4, distressed-8)
aux(hear-10, to-9)
xcomp(distressed-8, hear-10)
det(man-12, a-11)
nsubj(speak-15, man-12)
prep_in(man-12, authority-14)
ccomp(hear-10, speak-15)
mark(spoke-19, as-16)
nn(Rackstraw-18, Mr.-17)
nsubj(spoke-19, Rackstraw-18)
advcl(speak-15, spoke-19)
xcomp(spoke-19, concerning-20)
det(being-22, a-21)
dobj(concerning-20, being-22)
nsubj(loved-24, you-23)
rcmod(being-22, loved-24)
nsubj(tried-29, I-26)
nsubj(comfort-31, I-26)
aux(tried-29, would-27)
aux(tried-29, have-28)
root(ROOT-0, tried-29)
aux(comfort-31, to-30)
xcomp(tried-29, comfort-31)
dobj(comfort-31, you-32)
prepc_by(comfort-31, pointing-34)
prt(pointing-34, out-35)
advmod(was-39, how-36)
dep(how-36, false-37)
nsubj(was-39, it-38)
ccomp(pointing-34, was-39)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (JJ content)
            (S
              (VP (TO to)
                (VP (VB hear)
                  (NP
                    (NP (NNP God))
                    (ADJP (RB so) (VBN represented)))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (VP (MD should)))))))))))
    (NP (PRP I))
    (VP (VBP seek)
      (S
        (VP (TO to)
          (VP (VB convince)
            (NP (PRP you))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ valueless)
                      (PP (TO to)
                        (NP (PRP you))))))))))))
    (. ?)))

cc(seek-15, But-1)
mark(content-5, if-2)
nsubj(content-5, you-3)
nsubj(hear-7, you-3)
cop(content-5, are-4)
advcl(seek-15, content-5)
aux(hear-7, to-6)
xcomp(content-5, hear-7)
dobj(hear-7, God-8)
advmod(represented-10, so-9)
amod(God-8, represented-10)
advmod(should-13, why-12)
advcl(hear-7, should-13)
nsubj(seek-15, I-14)
nsubj(convince-17, I-14)
root(ROOT-0, seek-15)
aux(convince-17, to-16)
xcomp(seek-15, convince-17)
dobj(convince-17, you-18)
nsubj(valueless-22, what-20)
cop(valueless-22, is-21)
prepc_of(convince-17, valueless-22)
prep_to(valueless-22, you-24)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ
      (VP (VBP offer)
        (NP (PRP you))
        (S
          (VP (TO to)
            (VP (VB drink)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP$ your) (NN heart))
                  (VP (VBZ is) (RB not)
                    (VP (VBG thirsting)
                      (PP (IN after)))))))))))
    (. ?)))

advmod(offer-2, Why-1)
root(ROOT-0, offer-2)
dobj(offer-2, you-3)
aux(drink-5, to-4)
vmod(offer-2, drink-5)
prep_after(thirsting-11, what-6)
poss(heart-8, your-7)
nsubj(thirsting-11, heart-8)
aux(thirsting-11, is-9)
neg(thirsting-11, not-10)
ccomp(drink-5, thirsting-11)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VBP love)
      (S
        (NP (NNP God))
        (ADJP (JJR more)
          (SBAR (IN because)
            (S
              (NP (PRP you))
              (VP (VBD found)
                (SBAR
                  (S
                    (NP (PRP He))
                    (VP (VBD was)
                      (ADJP (RB not)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP you))
                            (VP (VBD were)
                              (ADJP (RB quite) (JJ satisfied)
                                (SBAR
                                  (S
                                    (NP (PRP He))
                                    (VP (MD should)
                                      (VP (VB be)))))))))))))))))))
    (. ?) ('' '')))

aux(love-3, Would-1)
nsubj(love-3, you-2)
root(ROOT-0, love-3)
nsubj(more-5, God-4)
xcomp(love-3, more-5)
mark(found-8, because-6)
nsubj(found-8, you-7)
ccomp(more-5, found-8)
nsubj(not-11, He-9)
cop(not-11, was-10)
ccomp(found-8, not-11)
dobj(satisfied-16, what-12)
nsubj(satisfied-16, you-13)
cop(satisfied-16, were-14)
advmod(satisfied-16, quite-15)
ccomp(not-11, satisfied-16)
nsubj(be-19, He-17)
aux(be-19, should-18)
ccomp(satisfied-16, be-19)

(ROOT
  (S (`` ``)
    (NP (NNP Do))
    (VP (VBP tell)
      (S
        (NP (PRP me))
        (ADJP (RBR more) (RB plainly))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP mean))))))
    (. ?) ('' '')))

nsubj(tell-3, Do-2)
root(ROOT-0, tell-3)
nsubj(mean-9, me-4)
advmod(plainly-6, more-5)
dep(mean-9, plainly-6)
dobj(mean-9, what-7)
nsubj(mean-9, you-8)
xcomp(tell-3, mean-9)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD must)
      (VP (VB excuse)
        (NP (PRP me))))
    (. .)))

nsubj(excuse-4, You-2)
aux(excuse-4, must-3)
root(ROOT-0, excuse-4)
dobj(excuse-4, me-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN said)
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD will)))))))
    (. .)))

nsubj(said-3, I-1)
aux(said-3, have-2)
root(ROOT-0, said-3)
dobj(said-3, all-4)
nsubj(will-6, I-5)
rcmod(all-4, will-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB reason)
        (PP (IN in)
          (NP
            (NP (NN defense))
            (PP (IN of)
              (NP (NNP God)))))))
    (. .)))

nsubj(reason-4, I-1)
aux(reason-4, can-2)
neg(reason-4, not-3)
root(ROOT-0, reason-4)
prep_in(reason-4, defense-6)
prep_of(defense-6, God-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (ADJP (JJ blasphemy)
        (S
          (VP (TO to)
            (VP (VB argue)
              (SBAR (IN that)
                (S
                  (NP (PRP$ His) (NN nature))
                  (VP (VBZ is) (RB not)
                    (ADJP (JJ such))
                    (SBAR (IN as)
                      (S
                        (NP (DT no) (JJ honorable) (NN man))
                        (VP (MD could)
                          (VP (VB love)
                            (PP (IN in)
                              (NP (DT another) (NN man)))))))))))))))
    (. .) ('' '')))

nsubj(seems-2, It-1)
root(ROOT-0, seems-2)
acomp(seems-2, blasphemy-3)
aux(argue-5, to-4)
xcomp(blasphemy-3, argue-5)
mark(such-11, that-6)
poss(nature-8, His-7)
nsubj(such-11, nature-8)
cop(such-11, is-9)
neg(such-11, not-10)
ccomp(argue-5, such-11)
mark(love-17, as-12)
neg(man-15, no-13)
amod(man-15, honorable-14)
nsubj(love-17, man-15)
aux(love-17, could-16)
advcl(such-11, love-17)
det(man-20, another-19)
prep_in(love-17, man-20)

(ROOT
  (S (`` ``)
    (CC But)
    (SBAR (IN if)
      (S
        (NP (DT the))
        (VP (VBZ Bible))))
    (VP (VBZ says)
      (ADVP (RB so)))
    (. ?) ('' '')))

cc(says-6, But-2)
mark(Bible-5, if-3)
nsubj(Bible-5, the-4)
csubj(says-6, Bible-5)
root(ROOT-0, says-6)
advmod(says-6, so-7)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (DT the) (NNP Bible))
        (VP (VBD said)
          (ADVP (RB so)))))
    (, ,)
    (NP (DT the) (NNP Bible))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ false))))
    (. .)))

mark(said-5, If-2)
det(Bible-4, the-3)
nsubj(said-5, Bible-4)
advcl(false-12, said-5)
advmod(said-5, so-6)
det(Bible-9, the-8)
nsubj(false-12, Bible-9)
aux(false-12, would-10)
cop(false-12, be-11)
root(ROOT-0, false-12)

(ROOT
  (S (CC But)
    (NP (DT the) (NNP Bible))
    (VP (VBZ does) (RB not)
      (VP (VB say)
        (ADVP (RB so))))
    (. .) ('' '')))

cc(say-6, But-1)
det(Bible-3, the-2)
nsubj(say-6, Bible-3)
aux(say-6, does-4)
neg(say-6, not-5)
root(ROOT-0, say-6)
advmod(say-6, so-7)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (NNS is)
      (NP (PRP it))
      (NP
        (NP (RB then))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ seems)
              (S
                (VP (TO to)
                  (VP (VB say)
                    (ADVP (RB so))))))))))
    (. ?) ('' '')))

advmod(is-3, How-2)
root(ROOT-0, is-3)
dep(is-3, it-4)
dep(is-3, then-5)
mark(seems-8, that-6)
nsubj(seems-8, it-7)
nsubj(say-10, it-7)
dep(then-5, seems-8)
aux(say-10, to-9)
xcomp(seems-8, say-10)
advmod(say-10, so-11)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (VP (VBN taught)
            (ADVP (RB falsely))
            (PP (IN about)
              (NP (PRP Him)))))))
    (ADVP (RB before))
    (NP (PRP you))
    (VP (VBD desired)
      (S
        (VP (TO to)
          (VP (VB know)
            (NP (PRP Him))))))
    (. .) ('' '')))

mark(taught-5, Because-2)
nsubjpass(taught-5, you-3)
auxpass(taught-5, were-4)
advcl(desired-11, taught-5)
advmod(taught-5, falsely-6)
prep_about(taught-5, Him-8)
advmod(desired-11, before-9)
nsubj(desired-11, you-10)
nsubj(know-13, you-10)
root(ROOT-0, desired-11)
aux(know-13, to-12)
xcomp(desired-11, know-13)
dobj(know-13, Him-14)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ capable)
        (PP (IN of)
          (S
            (VP (VBG judging)
              (ADVP (RB now)))))))
    (. !) ('' '')))

cc(capable-5, But-2)
nsubj(capable-5, I-3)
cop(capable-5, am-4)
root(ROOT-0, capable-5)
prepc_of(capable-5, judging-7)
advmod(judging-7, now-8)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD was)
      (ADJP (JJ silent)))
    (. .)))

nsubj(silent-3, Andrew-1)
cop(silent-3, was-2)
root(ROOT-0, silent-3)

(ROOT
  (S (`` ``)
    (VP (VB Am)
      (NP (PRP I))
      (ADVP (RB not)))
    (. ?) ('' '')))

cop(I-3, Am-2)
root(ROOT-0, I-3)
neg(I-3, not-4)

(ROOT
  (NP (NNP insisted) (NNP Alexa) (. .)))

nn(Alexa-2, insisted-1)
root(ROOT-0, Alexa-2)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP desire)
            (S
              (VP (TO to)
                (VP (VB know)
                  (NP (NNP God)))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(desire-4, you-3)
nsubj(know-6, you-3)
ccomp(Do-2, desire-4)
aux(know-6, to-5)
xcomp(desire-4, know-6)
dobj(know-6, God-7)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP do)
            (VP (VB know)
              (NP (PRP Him)))))))
    (. .) ('' '')))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(know-6, I-4)
aux(know-6, do-5)
ccomp(think-3, know-6)
dobj(know-6, Him-7)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP you))
    (VP (VBP think)
      (S
        (NP (DT those) (NNS things))
        (ADJP (JJ true))))
    (. ?) ('' '')))

cc(think-4, And-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
det(things-6, those-5)
nsubj(true-7, things-6)
xcomp(think-4, true-7)

(ROOT
  (INTJ (`` ``) (UH Yes) (. .) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP we))
      (VP (VBP are)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP we))
            (VP (VBD were))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP say)
        (ADVP (DT no) (RBR more))))
    (. .) ('' '')))

advmod(are-4, Then-2)
nsubj(are-4, we-3)
root(ROOT-0, are-4)
advmod(were-7, where-5)
nsubj(were-7, we-6)
advcl(are-4, were-7)
nsubj(say-11, I-10)
conj_and(are-4, say-11)
neg(more-13, no-12)
advmod(say-11, more-13)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP are) (RB not)
      (ADJP (JJ polite)))
    (. .) ('' '')))

nsubj(polite-5, You-2)
cop(polite-5, are-3)
neg(polite-5, not-4)
root(ROOT-0, polite-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB help)
        (NP (PRP it))))
    (. .)))

nsubj(help-5, I-2)
aux(help-5, can-3)
neg(help-5, not-4)
root(ROOT-0, help-5)
dobj(help-5, it-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (VP (VB let)
        (S
          (NP (PRP you))
          (ADVP (RB alone))
          (VP (TO to)
            (VP (VB believe)
              (PP (IN about)
                (NP (NNP God)))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP you))
                  (VP (MD can)))))))))
    (. .)))

nsubj(let-3, I-1)
aux(let-3, must-2)
root(ROOT-0, let-3)
dobj(let-3, you-4)
nsubj(believe-7, you-4)
advmod(believe-7, alone-5)
aux(believe-7, to-6)
xcomp(let-3, believe-7)
prep_about(believe-7, God-9)
dobj(can-12, what-10)
nsubj(can-12, you-11)
ccomp(believe-7, can-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will) (RB not)
      (VP (VB be)
        (VP (VBN blamed)
          (PP (IN for)
            (S
              (VP (RB not) (VBG believing)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP you))
                    (VP (MD can) (RB not))))))))))
    (. .) ('' '')))

nsubjpass(blamed-5, You-1)
aux(blamed-5, will-2)
neg(blamed-5, not-3)
auxpass(blamed-5, be-4)
root(ROOT-0, blamed-5)
neg(believing-8, not-7)
prepc_for(blamed-5, believing-8)
dobj(can-11, what-9)
nsubj(can-11, you-10)
ccomp(believing-8, can-11)
neg(can-11, not-12)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB mean)
          (SBAR (IN that)
            (S
              (NP (NNP God))
              (ADVP (RB never))
              (VP (VBZ punishes)
                (NP
                  (NP (DT any) (NN one))
                  (PP (IN for)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP He))
                        (VP (MD can) (RB not)
                          (VP (VB help)))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(mean-4, you-3)
ccomp(Do-2, mean-4)
mark(punishes-8, that-5)
nsubj(punishes-8, God-6)
neg(punishes-8, never-7)
ccomp(mean-4, punishes-8)
det(one-10, any-9)
dobj(punishes-8, one-10)
dobj(help-16, what-12)
nsubj(help-16, He-13)
aux(help-16, can-14)
neg(help-16, not-15)
prepc_for(one-10, help-16)

(ROOT
  (S (`` ``)
    (VP (VB Assuredly))
    (. .) ('' '')))

root(ROOT-0, Assuredly-2)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB prove)
        (NP (DT that))))
    (. ?) ('' '')))

advmod(prove-5, How-2)
aux(prove-5, do-3)
nsubj(prove-5, you-4)
root(ROOT-0, prove-5)
dobj(prove-5, that-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will) (RB not)
      (VP (VB attempt)
        (S
          (VP (TO to)
            (VP (VB prove)
              (NP (PRP it)))))))
    (. .)))

nsubj(attempt-5, I-2)
nsubj(prove-7, I-2)
aux(attempt-5, will-3)
neg(attempt-5, not-4)
root(ROOT-0, attempt-5)
aux(prove-7, to-6)
xcomp(attempt-5, prove-7)
dobj(prove-7, it-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (JJ content)
            (S
              (VP (TO to)
                (VP (VB think)
                  (SBAR
                    (S
                      (NP (PRP He))
                      (VP (VBZ does)))))))))))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP it))
        (VP (VBP do) (RB not)
          (VP (VB trouble)
            (NP (PRP you))
            (SBAR (IN that)
              (S
                (NP (PRP$ your) (NN God))
                (VP (MD should)
                  (VP (VB be)
                    (ADJP (JJ unjust))))))))))
    (, ,)
    (VP (VB go)
      (PP (IN on)
        (S
          (VP (VBG thinking)
            (SBAR (RB so) (IN until)
              (S
                (S
                  (NP (PRP you))
                  (VP (VBP are)
                    (VP (VBN made)
                      (ADJP (JJ miserable))
                      (PP (IN by)
                        (NP (PRP it))))))
                (, ,) (RB then)
                (S
                  (NP (PRP I))
                  (VP (MD will)
                    (VP (VB pour)
                      (PRT (RP out))
                      (NP (PRP$ my) (NN heart)
                        (S
                          (VP (TO to)
                            (VP (VB deliver)
                              (NP (PRP you)))))))))))))))
    (. .) ('' '')))

mark(content-4, If-1)
nsubj(content-4, you-2)
nsubj(think-6, you-2)
cop(content-4, are-3)
advcl(go-23, content-4)
aux(think-6, to-5)
xcomp(content-4, think-6)
nsubj(does-8, He-7)
ccomp(think-6, does-8)
mark(trouble-14, if-10)
nsubj(trouble-14, it-11)
aux(trouble-14, do-12)
neg(trouble-14, not-13)
dep(go-23, trouble-14)
dobj(trouble-14, you-15)
mark(unjust-21, that-16)
poss(God-18, your-17)
nsubj(unjust-21, God-18)
aux(unjust-21, should-19)
cop(unjust-21, be-20)
ccomp(trouble-14, unjust-21)
root(ROOT-0, go-23)
prepc_on(go-23, thinking-25)
advmod(made-30, so-26)
mark(made-30, until-27)
nsubjpass(made-30, you-28)
auxpass(made-30, are-29)
advcl(thinking-25, made-30)
acomp(made-30, miserable-31)
agent(made-30, it-33)
advmod(pour-38, then-35)
nsubj(pour-38, I-36)
aux(pour-38, will-37)
parataxis(made-30, pour-38)
prt(pour-38, out-39)
poss(heart-41, my-40)
dobj(pour-38, heart-41)
aux(deliver-43, to-42)
vmod(heart-41, deliver-43)
dobj(deliver-43, you-44)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (VP (VBN struck) (, ,)
        (PP (RB not) (IN with)
          (NP
            (NP (DT any) (NN truth))
            (SBAR
              (WHPP (IN in)
                (WHNP (WP what)))
              (S
                (NP (PRP he))
                (VP (VBD said) (, ,)
                  (CC but)
                  (PP (IN with)
                    (NP
                      (NP (DT the)
                        (ADJP (JJ evident))
                        (NNS truthfulness))
                      (PP (IN of)
                        (NP (DT the) (NN man) (PRP himself))))))))))))
    (. .)))

nsubjpass(struck-3, She-1)
auxpass(struck-3, was-2)
root(ROOT-0, struck-3)
neg(struck-3, not-5)
det(truth-8, any-7)
prep_with(struck-3, truth-8)
prep_in(said-12, truth-8)
nsubj(said-12, he-11)
rcmod(truth-8, said-12)
rcmod(truth-8, with-15)
conj_but(said-12, with-15)
det(truthfulness-18, the-16)
amod(truthfulness-18, evident-17)
pobj(with-15, truthfulness-18)
det(man-21, the-20)
prep_of(truthfulness-18, man-21)
npadvmod(man-21, himself-22)

(ROOT
  (S
    (ADVP (JJ Right)
      (CC or)
      (JJ wrong))
    (, ,)
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT that))
          (PP (IN about)
            (NP (PRP him))))
        (PRN (: --)
          (NP
            (NP (DT a) (JJ certain) (NN radiance))
            (PP (IN of)
              (NP (NN conviction))))
          (: --))
        (SBAR
          (WHNP (WDT which))
          (S
            (ADVP (RB certainly))
            (VP (VBD was) (RB not)
              (PP (IN about)
                (NP (NNP Mr.) (NNP Rackstraw))))))))
    (. .)))

advmod(was-6, Right-1)
conj_or(Right-1, wrong-3)
advmod(was-6, wrong-3)
expl(was-6, there-5)
root(ROOT-0, was-6)
nsubj(was-6, that-7)
nsubj(was-19, that-7)
prep_about(that-7, him-9)
det(radiance-13, a-11)
amod(radiance-13, certain-12)
dep(that-7, radiance-13)
prep_of(radiance-13, conviction-15)
advmod(was-19, certainly-18)
rcmod(that-7, was-19)
neg(was-19, not-20)
nn(Rackstraw-23, Mr.-22)
prep_about(was-19, Rackstraw-23)

(ROOT
  (S
    (S
      (NP (`` ``)
        (NP (DT The) (NNS things))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB be)
                (VP (VBN shaken))))))
        (, ,) ('' ''))
      (VP (VBD said)
        (SBAR
          (S
            (NP
              (NP (NNP Andrew))
              (, ,)
              (CONJP (RB as) (IN if))
              (NP
                (NP (VBG thinking))
                (PP (IN with)
                  (NP (PRP himself))))
              (, ,))
            (`` ``)
            (VP (MD may)
              (VP (VB last)
                (PP (IN for)
                  (NP (DT a) (NN time)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (MD will)
        (PP (IN at)
          (NP (NN length)))
        (VP (VB be)
          (VP (VBN shaken)
            (PP (TO to)
              (NP (NNS pieces)))
            (, ,)
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NNS things))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD can) (RB not)
                        (VP (VB be)
                          (VP (VBN shaken)))))))
                (VP (MD may)
                  (VP (VB show)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP they))
                        (VP (VBP are))))))))))))
    (. .)))

det(things-3, The-2)
nsubjpass(shaken-7, things-3)
nsubj(said-10, things-3)
aux(shaken-7, can-5)
auxpass(shaken-7, be-6)
rcmod(things-3, shaken-7)
root(ROOT-0, said-10)
nsubj(last-21, Andrew-11)
conj_as(Andrew-11, thinking-15)
nsubj(last-21, thinking-15)
prep_with(thinking-15, himself-17)
aux(last-21, may-20)
ccomp(said-10, last-21)
det(time-24, a-23)
prep_for(last-21, time-24)
nsubjpass(shaken-32, they-27)
aux(shaken-32, will-28)
prep_at(shaken-32, length-30)
auxpass(shaken-32, be-31)
conj_but(said-10, shaken-32)
prep_to(shaken-32, pieces-34)
mark(show-45, that-36)
det(things-38, the-37)
nsubjpass(shaken-43, things-38)
nsubj(show-45, things-38)
aux(shaken-43, can-40)
neg(shaken-43, not-41)
auxpass(shaken-43, be-42)
rcmod(things-38, shaken-43)
aux(show-45, may-44)
ccomp(shaken-32, show-45)
dobj(are-48, what-46)
nsubj(are-48, they-47)
ccomp(show-45, are-48)

(ROOT
  (S
    (SBAR
      (WHNP (WDT Whatever))
      (S
        (NP (PRP we))
        (VP (VBP call)
          (NP (NN religion)))))
    (VP (MD will)
      (VP (VB vanish)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP we))
            (VP (VBP see)
              (SBAR
                (S
                  (NP (NNP God))
                  (VP (VBP face)
                    (S
                      (VP (TO to)
                        (VP (VB face))))))))))))
    (. .) ('' '')))

dobj(call-3, Whatever-1)
nsubj(call-3, we-2)
csubj(vanish-6, call-3)
dobj(call-3, religion-4)
aux(vanish-6, will-5)
root(ROOT-0, vanish-6)
advmod(see-9, when-7)
nsubj(see-9, we-8)
advcl(vanish-6, see-9)
nsubj(face-11, God-10)
nsubj(face-13, God-10)
ccomp(see-9, face-11)
aux(face-13, to-12)
xcomp(face-11, face-13)

(ROOT
  (S (IN For)
    (ADVP (RB awhile))
    (NP (PRP they))
    (VP (VBD went)
      (S
        (VP (VBG brushing)
          (PP (IN through)
            (NP
              (NP (DT the) (NN heather))
              (PP (IN in)
                (NP (NN silence))))))))
    (. .)))

dep(went-4, For-1)
advmod(went-4, awhile-2)
nsubj(went-4, they-3)
root(ROOT-0, went-4)
xcomp(went-4, brushing-5)
det(heather-8, the-7)
prep_through(brushing-5, heather-8)
prep_in(heather-8, silence-10)

(ROOT
  (S (`` ``)
    (NP (NNP May) (NNP I))
    (VP (VBP ask)
      (S
        (NP (PRP you))
        (NP
          (NP (CD one) (NN question))
          (, ,)
          (NP (NNP Mr.) (NNP Ingram)))))
    (. ?) ('' '')))

nn(I-3, May-2)
nsubj(ask-4, I-3)
root(ROOT-0, ask-4)
nsubj(question-7, you-5)
num(question-7, one-6)
xcomp(ask-4, question-7)
nn(Ingram-10, Mr.-9)
appos(question-7, Ingram-10)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Alexa-2)

(ROOT
  (S (`` ``)
    (ADVP (RB Surely))
    (, ,)
    (VP (VBP ma'am))
    (. !)))

advmod(ma'am-4, Surely-2)
root(ROOT-0, ma'am-4)

(ROOT
  (S
    (VP (VB Ask)
      (S
        (NP (PRP me))
        (ADJP (NN anything))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP like))))))
    (. .) ('' '')))

root(ROOT-0, Ask-1)
nsubj(like-5, me-2)
dep(like-5, anything-3)
nsubj(like-5, you-4)
xcomp(Ask-1, like-5)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB answer)
        (NP (PRP me))))
    (. ?) ('' '')))

cc(answer-5, And-2)
nsubj(answer-5, you-3)
aux(answer-5, will-4)
root(ROOT-0, answer-5)
dobj(answer-5, me-6)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (PP (IN at)
            (NP (NN liberty)))
          (S
            (VP (TO to)
              (VP (VB answer)
                (NP (PRP you))))))))
    (NP (PRP I))
    (VP (MD will))
    (. .) ('' '')))

mark(am-4, If-2)
nsubj(am-4, I-3)
nsubj(answer-8, I-3)
advcl(will-11, am-4)
prep_at(am-4, liberty-6)
aux(answer-8, to-7)
xcomp(am-4, answer-8)
dobj(answer-8, you-9)
nsubj(will-11, I-10)
root(ROOT-0, will-11)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB mean)
        (PP (IN by)
          (S
            (VP (VBG being)
              (PP (IN at)
                (NP (NN liberty))))))))
    (. ?)))

dobj(mean-5, What-2)
aux(mean-5, do-3)
nsubj(mean-5, you-4)
root(ROOT-0, mean-5)
prepc_by(mean-5, being-7)
prep_at(being-7, liberty-9)

(ROOT
  (SINV
    (VP (VBP Are))
    (NP (PRP you))
    (PP (IN under)
      (NP (DT any) (NN vow))
      (. ?) ('' ''))))

root(ROOT-0, Are-1)
nsubj(Are-1, you-2)
det(vow-5, any-4)
prep_under(Are-1, vow-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (PP (IN under)
        (NP
          (NP (DT the) (NN law))
          (PP (IN of)
            (NP (NN love))))))
    (. .)))

nsubj(am-3, I-2)
root(ROOT-0, am-3)
det(law-6, the-5)
prep_under(am-3, law-6)
prep_of(law-6, love-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (VBN bound)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (NN nothing))
              (S
                (VP (TO to)
                  (VP (VB hurt)))))))))
    (. .)))

nsubjpass(bound-3, I-1)
nsubj(do-5, I-1)
auxpass(bound-3, am-2)
root(ROOT-0, bound-3)
aux(do-5, to-4)
xcomp(bound-3, do-5)
dobj(do-5, nothing-6)
aux(hurt-8, to-7)
vmod(do-5, hurt-8)

(ROOT
  (NP
    (NP (DT An) (NN answer))
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (MD would)
          (VP (VB do)
            (S
              (NP (PRP you))
              (ADJP (RB no) (JJ good)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (MD will) (RB not)
                      (VP (VB give)))))))))))
    (. .) ('' '')))

det(answer-2, An-1)
root(ROOT-0, answer-2)
nsubj(do-5, answer-2)
aux(do-5, would-4)
rcmod(answer-2, do-5)
nsubj(good-8, you-6)
neg(good-8, no-7)
xcomp(do-5, good-8)
nsubj(give-12, I-9)
aux(give-12, will-10)
neg(give-12, not-11)
ccomp(good-8, give-12)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (MD will)
              (CC or)
              (MD will) (RB not)
              (VP (VB do)
                (S
                  (NP (PRP me))
                  (ADJP (JJ good)))))))))
    (. ?) ('' '')))

advmod(know-5, How-2)
aux(know-5, do-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
nsubj(do-11, what-6)
aux(do-11, will-7)
ccomp(know-5, will-9)
aux(do-11, will-9)
conj_or(do-11, will-9)
neg(do-11, not-10)
ccomp(know-5, do-11)
nsubj(good-13, me-12)
xcomp(do-11, good-13)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD must)
      (VP (VB use)
        (NP
          (NP (WP what) (NN judgment))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP have)))))))
    (. .) ('' '')))

nsubj(use-4, I-2)
aux(use-4, must-3)
root(ROOT-0, use-4)
det(judgment-6, what-5)
dobj(use-4, judgment-6)
nsubj(have-8, I-7)
rcmod(judgment-6, have-8)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Is)
        (S
          (NP (PRP it))
          (ADJP (JJ true)))
        (, ,)
        (ADVP (RB then))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP believe)
              (NP (NNP God)))))))
    (VP (VBZ gives)
      (NP (PRP you))
      (SBAR
        (WHNP (WDT whatever))
        (S
          (NP (PRP you))
          (VP (VBP ask)))))
    (. ?) ('' '')))

csubj(gives-12, Is-2)
nsubj(true-4, it-3)
xcomp(Is-2, true-4)
advmod(Is-2, then-6)
mark(believe-10, that-8)
nsubj(believe-10, you-9)
ccomp(Is-2, believe-10)
dobj(believe-10, God-11)
root(ROOT-0, gives-12)
dobj(gives-12, you-13)
dobj(ask-16, whatever-14)
nsubj(ask-16, you-15)
dep(gives-12, ask-16)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB never))
      (VP (VBN asked)
        (NP
          (NP (NN anything))
          (PP (IN of)
            (NP (PRP Him))))
        (SBAR (IN that)
          (S
            (NP (PRP He))
            (VP (VBD did) (RB not)
              (VP (VB give)
                (NP (PRP me))))))))
    (. .) ('' '')))

nsubj(asked-5, I-2)
aux(asked-5, have-3)
neg(asked-5, never-4)
root(ROOT-0, asked-5)
dobj(asked-5, anything-6)
prep_of(anything-6, Him-8)
mark(give-13, that-9)
nsubj(give-13, He-10)
aux(give-13, did-11)
neg(give-13, not-12)
ccomp(asked-5, give-13)
dobj(give-13, me-14)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Would))
    (SQ
      (NP (PRP you))
      (VP (VB mind)
        (S
          (VP (VBG telling)
            (NP (PRP me))
            (NP
              (NP (NN anything))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP have)
                    (VP (VBN asked)
                      (PP (IN of)
                        (NP (PRP Him))))))))))))
    (. ?) ('' '')))

advmod(mind-4, Would-2)
nsubj(mind-4, you-3)
root(ROOT-0, mind-4)
xcomp(mind-4, telling-5)
iobj(telling-5, me-6)
dobj(telling-5, anything-7)
nsubj(asked-10, you-8)
aux(asked-10, have-9)
rcmod(anything-7, asked-10)
prep_of(asked-10, Him-12)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (RB never))
        (VP
          (ADVP (RB yet))
          (VBN required)
          (S
            (VP (TO to)
              (VP (VB ask)
                (NP
                  (NP (NN anything) (RB not))
                  (VP (VBN included)
                    (PP (IN in)
                      (NP (DT the) (NN prayer)))))))))))
    (, ,) (`` `)
    (NP (NNP Thy))
    (VP (MD will)
      (VP (VB be)
        (VP (VBN done))))
    (. .) ('' ') ('' '')))

nsubj(required-6, I-2)
nsubj(ask-8, I-2)
aux(required-6, have-3)
neg(required-6, never-4)
advmod(required-6, yet-5)
ccomp(done-20, required-6)
aux(ask-8, to-7)
xcomp(required-6, ask-8)
dobj(ask-8, anything-9)
neg(anything-9, not-10)
vmod(anything-9, included-11)
det(prayer-14, the-13)
prep_in(included-11, prayer-14)
nsubjpass(done-20, Thy-17)
aux(done-20, will-18)
auxpass(done-20, be-19)
root(ROOT-0, done-20)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (MD will)
      (VP (VB be)
        (VP (VBN done)
          (PP (IN without)
            (NP
              (NP (PRP$ your) (NN praying))
              (PP (IN for)
                (NP (PRP it))))))))
    (. .) ('' '')))

nsubjpass(done-5, That-2)
aux(done-5, will-3)
auxpass(done-5, be-4)
root(ROOT-0, done-5)
poss(praying-8, your-7)
prep_without(done-5, praying-8)
prep_for(praying-8, it-10)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Pardon)
        (NP (PRP me))))
    (: ;)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB believe)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD will)
              (VP (VB be)
                (VP (VBN done) (, ,)
                  (PP (TO to)
                    (NP (DT all) (NN eternity)))
                  (, ,)
                  (PP (IN without)
                    (NP
                      (NP (PRP$ my) (NN praying))
                      (PP (IN for)
                        (NP (PRP it))))))))))))
    (. .)))

dep(believe-8, Pardon-2)
dobj(Pardon-2, me-3)
nsubj(believe-8, I-5)
aux(believe-8, do-6)
neg(believe-8, not-7)
root(ROOT-0, believe-8)
nsubjpass(done-12, it-9)
aux(done-12, will-10)
auxpass(done-12, be-11)
ccomp(believe-8, done-12)
det(eternity-16, all-15)
prep_to(done-12, eternity-16)
poss(praying-20, my-19)
prep_without(done-12, praying-20)
prep_for(praying-20, it-22)

(ROOT
  (SBARQ
    (WHNP (WRB Where) (JJ first))
    (SQ (VBP am)
      (NP (PRP I))
      (ADJP (JJ accountable))
      (SBAR (IN that)
        (S
          (NP (PRP$ His) (NN will))
          (VP (MD should)
            (VP (VB be)
              (VP (VBN done)))))))
    (. ?)))

advmod(first-2, Where-1)
dep(accountable-5, first-2)
cop(accountable-5, am-3)
nsubj(accountable-5, I-4)
root(ROOT-0, accountable-5)
mark(done-11, that-6)
poss(will-8, His-7)
nsubjpass(done-11, will-8)
aux(done-11, should-9)
auxpass(done-11, be-10)
dep(accountable-5, done-11)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (ADVP (RB not) (IN in))
    (NP (PRP myself))
    (. ?)))

cop(myself-5, Is-1)
nsubj(myself-5, it-2)
dep(in-4, not-3)
advmod(myself-5, in-4)
root(ROOT-0, myself-5)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP
        (NP (PRP$ His) (NN will))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN done)
                (PP (IN in)
                  (NP (PRP me)))
                (PP (IN without)
                  (S
                    (NP (PRP$ my))
                    (VP (VBG willing)
                      (NP (PRP it)))))))))))
    (. ?)))

advmod(is-2, How-1)
root(ROOT-0, is-2)
poss(will-4, His-3)
nsubj(is-2, will-4)
aux(done-7, to-5)
auxpass(done-7, be-6)
vmod(will-4, done-7)
prep_in(done-7, me-9)
nsubj(willing-12, my-11)
prepc_without(done-7, willing-12)
dobj(willing-12, it-13)

(ROOT
  (SQ (NNP Does)
    (NP (PRP He))
    (VP (RB not) (VB want)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB love)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP He))
                (VP (VBZ loves))))))))
    (. ?)))

dep(want-4, Does-1)
nsubj(want-4, He-2)
neg(want-4, not-3)
root(ROOT-0, want-4)
dobj(want-4, me-5)
nsubj(love-7, me-5)
aux(love-7, to-6)
xcomp(want-4, love-7)
dobj(loves-10, what-8)
nsubj(loves-10, He-9)
ccomp(love-7, loves-10)

(ROOT
  (PRN (: --)
    (S
      (VP (TO to)
        (VP (VB be)
          (SBAR (IN like)
            (FRAG
              (ADJP (FW Himself) (. ?)))))))))

aux(be-3, to-2)
root(ROOT-0, be-3)
mark(Himself-5, like-4)
advcl(be-3, Himself-5)

(ROOT
  (S (: --)
    (NP (TO to))
    (VP (VBP do)
      (NP (PRP$ His) (NN will))
      (PP (IN with)
        (NP
          (NP (DT the)
            (ADJP (JJ glad))
            (NN effort))
          (PP (IN of)
            (NP (PRP$ my) (NN will))))))
    (. ?)))

nsubj(do-3, to-2)
root(ROOT-0, do-3)
poss(will-5, His-4)
dobj(do-3, will-5)
det(effort-9, the-7)
amod(effort-9, glad-8)
prep_with(do-3, effort-9)
poss(will-12, my-11)
prep_of(effort-9, will-12)

(ROOT
  (S (: --)
    (PP (IN in)
      (NP (DT a) (NN word)))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB will)
          (NP (WP what))
          (NP (PRP He)))))
    (VP (VBZ wills))
    (. ?)))

det(word-4, a-3)
prep_in(wills-10, word-4)
aux(will-7, to-6)
csubj(wills-10, will-7)
iobj(will-7, what-8)
dobj(will-7, He-9)
root(ROOT-0, wills-10)

(ROOT
  (FRAG (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP I))
        (VP (VBP find)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD can) (RB not) (, ,)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBP am)
                      (S
                        (NP (PRP I))
                        (VP (TO to)
                          (VP (VB do)
                            (PRN (CC but)
                              (ADVP (RB pray))
                              (PP (IN for)
                                (NP (NN help))))))))))))))))
    (. ?)))

cc(find-4, And-1)
advmod(find-4, when-2)
nsubj(find-4, I-3)
root(ROOT-0, find-4)
nsubj(can-6, I-5)
ccomp(find-4, can-6)
neg(can-6, not-7)
nsubj(am-10, what-9)
ccomp(can-6, am-10)
dobj(am-10, I-11)
nsubj(do-13, I-11)
aux(do-13, to-12)
xcomp(am-10, do-13)
cc(for-16, but-14)
dep(for-16, pray-15)
dep(do-13, for-16)
pobj(for-16, help-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP pray)))
    (, ,)
    (CC and)
    (S
      (NP (PRP He))
      (VP (VBZ helps)
        (NP (PRP me))))
    (. .) ('' '')))

nsubj(pray-2, I-1)
root(ROOT-0, pray-2)
nsubj(helps-6, He-5)
conj_and(pray-2, helps-6)
dobj(helps-6, me-7)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ is)
      (ADJP (NN nothing) (JJ strange)
        (PP (IN in)
          (NP (DT that)))))
    (. !) ('' '')))

expl(is-3, There-2)
root(ROOT-0, is-3)
npadvmod(strange-5, nothing-4)
acomp(is-3, strange-5)
prep_in(strange-5, that-7)

(ROOT
  (S (`` ``)
    (ADVP (RB Surely))
    (NP (RB not) (PRP It))
    (VP (VBZ seems)
      (PP (TO to)
        (NP
          (NP (PRP me))
          (NP (DT the) (JJS simplest) (JJ common) (NN sense)))))
    (. .)))

advmod(seems-5, Surely-2)
neg(It-4, not-3)
nsubj(seems-5, It-4)
root(ROOT-0, seems-5)
prep_to(seems-5, me-7)
det(sense-11, the-8)
amod(sense-11, simplest-9)
amod(sense-11, common-10)
dep(me-7, sense-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (PRP$ my) (NN business))
        (, ,)
        (NP
          (NP (DT the) (NN business))
          (PP (IN of)
            (NP (DT every) (NN man)))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (NNP God) (POS 's))
          (VP (MD will)
            (VP (VB be)
              (VP (VBN done)
                (PP (IN by)
                  (NP (PRP$ his) (NN obedience)))
                (PP (TO to)
                  (NP
                    (NP (DT that) (NN will))
                    (, ,)
                    (NP
                      (NP (DT the) (NN moment))
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (VBZ knows)
                            (NP (PRP it))))))))))))))
    (. .) ('' '')))

nsubj(business-4, It-1)
cop(business-4, is-2)
poss(business-4, my-3)
root(ROOT-0, business-4)
det(business-7, the-6)
appos(business-4, business-7)
det(man-10, every-9)
prep_of(business-7, man-10)
mark(done-17, that-12)
nsubjpass(done-17, God-13)
possessive(God-13, 's-14)
aux(done-17, will-15)
auxpass(done-17, be-16)
ccomp(business-4, done-17)
poss(obedience-20, his-19)
agent(done-17, obedience-20)
det(will-23, that-22)
prep_to(done-17, will-23)
det(moment-26, the-25)
appos(will-23, moment-26)
nsubj(knows-28, he-27)
rcmod(moment-26, knows-28)
dobj(knows-28, it-29)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD fancy)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are) (RB not)
            (ADJP (RB so) (JJ different)
              (PP (IN from)
                (NP (JJ other) (NNS people))))
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (VBP think)
                  (NP (PRP yourself)))))))))
    (. .)))

nsubj(fancy-3, I-2)
root(ROOT-0, fancy-3)
nsubj(different-8, you-4)
cop(different-8, are-5)
neg(different-8, not-6)
advmod(different-8, so-7)
ccomp(fancy-3, different-8)
amod(people-11, other-10)
prep_from(different-8, people-11)
mark(think-14, as-12)
nsubj(think-14, you-13)
advcl(different-8, think-14)
dobj(think-14, yourself-15)

(ROOT
  (S (CC But)
    (NP (PRP they))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB die))))))))
    (. .) ('' '')))

cc(say-3, But-1)
nsubj(say-3, they-2)
root(ROOT-0, say-3)
nsubj(want-5, you-4)
nsubj(die-7, you-4)
ccomp(say-3, want-5)
aux(die-7, to-6)
xcomp(want-5, die-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP want)
      (SBAR
        (ADVP (NN nothing) (RB but))
        (WHNP (WP what))
        (S
          (NP (NNP God))
          (VP (VBZ wants)))))
    (. .)))

nsubj(want-3, I-2)
root(ROOT-0, want-3)
dep(but-5, nothing-4)
advmod(wants-8, but-5)
dobj(wants-8, what-6)
nsubj(wants-8, God-7)
ccomp(want-3, wants-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP desire)
      (NP (NNS righteousness)))
    (. .) ('' '')))

nsubj(desire-2, I-1)
root(ROOT-0, desire-2)
dobj(desire-2, righteousness-3)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (VBP accept)
      (NP
        (NP (DT the) (NNS righteousness))
        (PP (IN of)
          (NP (NNP Christ)))))
    (. ?) ('' '')))

advmod(accept-4, Then-2)
nsubj(accept-4, you-3)
root(ROOT-0, accept-4)
det(righteousness-6, the-5)
dobj(accept-4, righteousness-6)
prep_of(righteousness-6, Christ-8)

(ROOT
  (S (`` ``)
    (VP (VB Accept)
      (NP (PRP it)))
    (. !)))

root(ROOT-0, Accept-2)
dobj(Accept-2, it-3)

(ROOT
  (NP
    (NP
      (NP (PRP I))
      (ADVP (RB long)))
    (PP (IN for)
      (NP (PRP it)))
    (. .) ('' '')))

root(ROOT-0, I-1)
advmod(I-1, long-2)
prep_for(I-1, it-4)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is) (RB not)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP I))
                (VP (VBP mean))))))))
    (. !) ('' '')))

nsubj(know-3, You-2)
root(ROOT-0, know-3)
mark(is-6, that-4)
nsubj(is-6, it-5)
ccomp(know-3, is-6)
neg(is-6, not-7)
dobj(mean-10, what-8)
nsubj(mean-10, I-9)
ccomp(is-6, mean-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP seek)
      (NP
        (NP (RB first) (DT the) (NN kingdom))
        (PP (IN of)
          (NP
            (NP (NNP God)
              (CC and)
              (NNP God) (POS 's))
            (NNS righteousness)))))
    (. .) ('' '')))

nsubj(seek-3, I-2)
root(ROOT-0, seek-3)
advmod(kingdom-6, first-4)
det(kingdom-6, the-5)
dobj(seek-3, kingdom-6)
poss(righteousness-12, God-8)
conj_and(God-8, God-10)
poss(righteousness-12, God-10)
prep_of(kingdom-6, righteousness-12)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP avoid)
      (NP (PRP$ my) (NN question)))
    (. .)))

nsubj(avoid-3, You-2)
root(ROOT-0, avoid-3)
poss(question-5, my-4)
dobj(avoid-3, question-5)

(ROOT
  (S
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB accept)
          (NP
            (NP (DT the) (NNS righteousness))
            (PP (IN of)
              (NP
                (NP (NNP Christ))
                (PP (RB instead) (IN of)
                  (NP (PRP$ your) (JJ own)))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-1)
nsubj(accept-3, you-2)
ccomp(Do-1, accept-3)
det(righteousness-5, the-4)
dobj(accept-3, righteousness-5)
prep_of(righteousness-5, Christ-7)
poss(own-11, your-10)
prep_instead_of(Christ-7, own-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT no) (NNS righteousness))
        (PP (IN of)
          (NP (PRP$ my) (JJ own))))
      (S
        (VP (TO to)
          (VP (VB put)
            (NP (PRP it))
            (PP (RB instead)
              (PP (IN of)))))))
    (. .)))

nsubj(have-3, I-2)
root(ROOT-0, have-3)
neg(righteousness-5, no-4)
dobj(have-3, righteousness-5)
poss(own-8, my-7)
prep_of(righteousness-5, own-8)
aux(put-10, to-9)
vmod(have-3, put-10)
dobj(put-10, it-11)
advmod(of-13, instead-12)
prep(put-10, of-13)

(ROOT
  (S
    (S
      (NP (DT The) (JJ only) (NNS righteousness))
      (ADVP (RB there))
      (VP (VBZ is)
        (SQ (VBZ is)
          (NP (NNP God) (NNP 's)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP He))
      (VP (MD will)
        (VP (VB make)
          (SBAR
            (S
              (NP (PRP me))
              (VP (VBZ righteous)
                (PP (IN like)
                  (NP (PRP Himself)))))))))
    (. .)))

det(righteousness-3, The-1)
amod(righteousness-3, only-2)
nsubj(is-5, righteousness-3)
advmod(is-5, there-4)
root(ROOT-0, is-5)
dep(is-5, is-6)
nn('s-8, God-7)
nsubj(is-6, 's-8)
nsubj(make-13, He-11)
aux(make-13, will-12)
conj_and(is-5, make-13)
nsubj(righteous-15, me-14)
ccomp(make-13, righteous-15)
prep_like(righteous-15, Himself-17)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ is) (RB not)
        (ADJP (JJ content))
        (SBAR (IN that)
          (S
            (NP (PRP$ His) (CD one) (NNS Son) (RB only))
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ righteous))))))))
    (: ;)
    (S
      (NP (PRP He))
      (VP (VBZ wants)
        (NP (PDT all) (PRP$ His) (NNS children))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ righteous))
              (SBAR (IN as)
                (S
                  (NP (PRP He))
                  (VP (VBZ is)
                    (ADJP (JJ righteous))))))))))
    (. .)))

nsubj(content-4, He-1)
cop(content-4, is-2)
neg(content-4, not-3)
root(ROOT-0, content-4)
mark(righteous-12, that-5)
poss(Son-8, His-6)
num(Son-8, one-7)
nsubj(righteous-12, Son-8)
advmod(Son-8, only-9)
aux(righteous-12, should-10)
cop(righteous-12, be-11)
ccomp(content-4, righteous-12)
nsubj(wants-15, He-14)
parataxis(content-4, wants-15)
predet(children-18, all-16)
poss(children-18, His-17)
dobj(wants-15, children-18)
aux(righteous-21, to-19)
cop(righteous-21, be-20)
vmod(wants-15, righteous-21)
mark(righteous-25, as-22)
nsubj(righteous-25, He-23)
cop(righteous-25, is-24)
advcl(righteous-21, righteous-25)

(ROOT
  (S
    (S
      (NP (DT The) (NN thing))
      (VP (VBZ is)
        (ADJP (JJ plain))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB argue)
          (PP (IN about)
            (NP (PRP it))))))
    (. .) ('' '')))

det(thing-2, The-1)
nsubj(plain-4, thing-2)
cop(plain-4, is-3)
root(ROOT-0, plain-4)
nsubj(argue-9, I-6)
aux(argue-9, will-7)
neg(argue-9, not-8)
parataxis(plain-4, argue-9)
prep_about(argue-9, it-11)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP do) (RB not)
      (VP (VB believe)
        (PP (IN in)
          (NP (DT the) (NN atonement)))))
    (. .) ('' '')))

nsubj(believe-5, You-2)
aux(believe-5, do-3)
neg(believe-5, not-4)
root(ROOT-0, believe-5)
det(atonement-8, the-7)
prep_in(believe-5, atonement-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP believe)
      (PP (IN in)
        (NP (NNP Jesus) (NNP Christ))))
    (. .)))

nsubj(believe-3, I-2)
root(ROOT-0, believe-3)
nn(Christ-6, Jesus-5)
prep_in(believe-3, Christ-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ is)
      (NP (DT the) (NN atonement)))
    (. .)))

nsubj(atonement-4, He-1)
cop(atonement-4, is-2)
det(atonement-4, the-3)
root(ROOT-0, atonement-4)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (NN strength) (NN God))
        (VP (VBZ has)
          (VP (VBN given)
            (NP (PRP me))))))
    (NP (PRP I))
    (VP (MD will)
      (VP (VB spend)
        (PP (IN in)
          (S
            (VP
              (VP (VBG knowing)
                (NP (PRP Him)))
              (CC and)
              (VP (VBG doing)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP He))
                    (VP (VBZ tells)
                      (NP (PRP me)))))))))))
    (. .)))

dobj(given-5, What-1)
nn(God-3, strength-2)
nsubj(given-5, God-3)
aux(given-5, has-4)
advcl(spend-9, given-5)
dobj(given-5, me-6)
nsubj(spend-9, I-7)
aux(spend-9, will-8)
root(ROOT-0, spend-9)
prepc_in(spend-9, knowing-11)
dobj(knowing-11, Him-12)
prepc_in(spend-9, doing-14)
conj_and(knowing-11, doing-14)
dobj(tells-17, what-15)
nsubj(tells-17, He-16)
ccomp(doing-14, tells-17)
dobj(tells-17, me-18)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB interpret)
          (NP (PRP$ His) (NNS plans))
          (SBAR (IN before)
            (S
              (NP (PRP we))
              (VP (VBP know)
                (NP (PRP Himself))))))))
    (VP (VBZ is)
      (PP (TO to)
        (NP (NN mistake)))
      (NP
        (NP (DT both) (NN Him))
        (CC and)
        (NP (PRP$ His) (NNS plans))))
    (. .)))

aux(interpret-2, To-1)
csubj(Him-13, interpret-2)
poss(plans-4, His-3)
dobj(interpret-2, plans-4)
mark(know-7, before-5)
nsubj(know-7, we-6)
advcl(interpret-2, know-7)
dobj(know-7, Himself-8)
cop(Him-13, is-9)
prep_to(Him-13, mistake-11)
det(Him-13, both-12)
root(ROOT-0, Him-13)
poss(plans-16, His-15)
conj_and(Him-13, plans-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (NP
        (NP (DT this))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBZ has)
              (VP (VBN given)
                (NP (PRP$ His) (NN life))
                (PP (IN for)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP
                        (NP (NNS multitudes))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBP call)
                              (NP (PRP themselves))
                              (PP (IN by)
                                (NP (PRP$ His) (NN name)))))))
                      (VP (MD would) (RB not)
                        (VP (VB rise)
                          (PP (IN from)
                            (NP (PRP$ their) (NNS seats)
                              (S
                                (VP (TO to)
                                  (VP (VB share)
                                    (PRT (RP in))))))))))))))))))
    (. .) ('' '')))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
dobj(know-2, this-3)
mark(given-8, that-5)
nsubj(given-8, he-6)
aux(given-8, has-7)
dep(this-3, given-8)
poss(life-10, His-9)
dobj(given-8, life-10)
dobj(rise-22, what-12)
nsubj(call-15, multitudes-13)
nsubj(rise-22, multitudes-13)
rcmod(multitudes-13, call-15)
dobj(call-15, themselves-16)
poss(name-19, His-18)
prep_by(call-15, name-19)
aux(rise-22, would-20)
neg(rise-22, not-21)
prepc_for(given-8, rise-22)
poss(seats-25, their-24)
prep_from(rise-22, seats-25)
aux(share-27, to-26)
vmod(seats-25, share-27)
prt(share-27, in-28)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP think)
      (S
        (NP (PRP me))
        (ADJP (JJ incapable)
          (PP (IN of)
            (S
              (VP (VBG understanding)
                (NP (DT the) (NN gospel))))))))
    (. ?) ('' '')))

nsubj(think-3, You-2)
root(ROOT-0, think-3)
nsubj(incapable-5, me-4)
xcomp(think-3, incapable-5)
prepc_of(incapable-5, understanding-7)
det(gospel-9, the-8)
dobj(understanding-7, gospel-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBD did)
              (VP (VB understand)
                (NP
                  (NP (DT the) (NN gospel))
                  (PP (IN of)
                    (NP (NNP Christ))))))))))
    (NP (PRP you))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ incapable)
          (PP (IN of)
            (S
              (VP (VBG believing)
                (NP (DT the) (NNS things))
                (PP (IN about)
                  (NP (PRP$ His) (NN Father)))))))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP say)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP do)
                    (VP (VB believe))))))))))
    (. .)))

nsubj(think-3, I-2)
dep(incapable-15, think-3)
mark(understand-7, if-4)
nsubj(understand-7, you-5)
aux(understand-7, did-6)
advcl(think-3, understand-7)
det(gospel-9, the-8)
dobj(understand-7, gospel-9)
prep_of(gospel-9, Christ-11)
nsubj(incapable-15, you-12)
aux(incapable-15, would-13)
cop(incapable-15, be-14)
root(ROOT-0, incapable-15)
prepc_of(incapable-15, believing-17)
det(things-19, the-18)
dobj(believing-17, things-19)
poss(Father-22, His-21)
prep_about(believing-17, Father-22)
mark(say-25, that-23)
nsubj(say-25, you-24)
ccomp(incapable-15, say-25)
nsubj(believe-28, you-26)
aux(believe-28, do-27)
ccomp(say-25, believe-28)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (MD will) (RB not)
      (VP (VB say)
        (NP (DT a) (NN word))
        (ADVP (RBR more))))
    (. .)))

cc(say-5, But-1)
nsubj(say-5, I-2)
aux(say-5, will-3)
neg(say-5, not-4)
root(ROOT-0, say-5)
det(word-7, a-6)
dobj(say-5, word-7)
advmod(say-5, more-8)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP (DT the) (NN truth)))))))))
      (, ,)
      (NP (PRP you))
      (VP (MD will)
        (VP (VB see)
          (NP (PRP it)))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP desire)
            (NP (DT the) (NN truth)))))
      (NP (PRP you))
      (VP (MD will)
        (VP (VB be)
          (ADJP (JJ able)))))
    (. .) ('' '')))

advmod(able-4, When-1)
nsubj(able-4, you-2)
nsubj(see-6, you-2)
cop(able-4, are-3)
advcl(see-12, able-4)
aux(see-6, to-5)
xcomp(able-4, see-6)
det(truth-8, the-7)
dobj(see-6, truth-8)
nsubj(see-12, you-10)
aux(see-12, will-11)
root(ROOT-0, see-12)
dobj(see-12, it-13)
advmod(desire-18, when-16)
nsubj(desire-18, you-17)
advcl(able-24, desire-18)
det(truth-20, the-19)
dobj(desire-18, truth-20)
nsubj(able-24, you-21)
aux(able-24, will-22)
cop(able-24, be-23)
conj_and(see-12, able-24)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD touched)
      (NP (PRP$ her) (NN pony))
      (PP (IN with)
        (NP (PRP$ her) (NN whip))))
    (. .)))

nsubj(touched-2, Alexa-1)
root(ROOT-0, touched-2)
poss(pony-4, her-3)
dobj(touched-2, pony-4)
poss(whip-7, her-6)
prep_with(touched-2, whip-7)

(ROOT
  (S (CC But)
    (PP
      (PP (IN by))
      (CC and)
      (PP (IN by)
        (S
          (NP (PRP she))
          (VP
            (VP (VBD pulled)
              (NP (PRP him))
              (PRT (RP up)))
            (, ,)
            (CC and)
            (VP (VBD made))))))
    (NP (PRP him))
    (VP (VBP walk)
      (SBAR (IN till)
        (S
          (NP (NNP Andrew))
          (VP (VBP overtook)
            (NP (PRP her))))))
    (. .)))

cc(walk-13, But-1)
prep(walk-13, by-2)
conj_and(by-2, by-4)
prep(walk-13, by-4)
nsubj(pulled-6, she-5)
nsubj(made-11, she-5)
pcomp(by-4, pulled-6)
dobj(pulled-6, him-7)
prt(pulled-6, up-8)
pcomp(by-4, made-11)
conj_and(pulled-6, made-11)
nsubj(walk-13, him-12)
root(ROOT-0, walk-13)
mark(overtook-16, till-14)
nsubj(overtook-16, Andrew-15)
advcl(walk-13, overtook-16)
dobj(overtook-16, her-17)

(ROOT
  (S
    (S
      (NP (DT The) (NN sun))
      (VP (VBD was)
        (PP (IN by)
          (NP
            (NP (DT this) (NN time))
            (PP (RB far) (RB out) (IN of)
              (NP (NN sight)))))))
    (, ,)
    (S
      (NP
        (NP (DT the) (NN glow))
        (PP (IN of)
          (NP (DT the) (NN west))))
      (VP (VBD was)
        (ADJP (RP over))))
    (, ,)
    (CC and)
    (S
      (NP (NN twilight))
      (VP (VBD lay)
        (PP (IN upon)
          (NP (DT the) (NN world)))))
    (. .)))

det(sun-2, The-1)
nsubj(was-3, sun-2)
root(ROOT-0, was-3)
det(time-6, this-5)
prep_by(was-3, time-6)
advmod(time-6, far-7)
prep_out_of(time-6, sight-10)
det(glow-13, the-12)
nsubj(over-18, glow-13)
det(west-16, the-15)
prep_of(glow-13, west-16)
cop(over-18, was-17)
ccomp(was-3, over-18)
conj_and(was-3, over-18)
nsubj(lay-22, twilight-21)
conj_and(was-3, lay-22)
det(world-25, the-24)
prep_upon(lay-22, world-25)

(ROOT
  (S
    (NP (PRP$ Its) (JJ ethereal) (NNS dimness))
    (VP (VBD had)
      (VP (VBN sunk)
        (PP (IN into)
          (NP (PRP$ her) (NN soul)))))
    (. .)))

poss(dimness-3, Its-1)
amod(dimness-3, ethereal-2)
nsubj(sunk-5, dimness-3)
aux(sunk-5, had-4)
root(ROOT-0, sunk-5)
poss(soul-8, her-7)
prep_into(sunk-5, soul-8)

(ROOT
  (X (`` ``)
    (NP
      (SQ (VBZ Does)
        (NP (DT the) (NN gloaming)))
      (VP (VB make)
        (S
          (NP (PRP you))
          (ADJP (JJ sad)))))
    (, ,)
    (NP
      (NP (NNP Mr.))
      (VP (VBN Ingram)))
    (. ?) ('' '')))

dep(make-5, Does-2)
det(gloaming-4, the-3)
nsubj(Does-2, gloaming-4)
dep(Mr.-9, make-5)
nsubj(sad-7, you-6)
xcomp(make-5, sad-7)
root(ROOT-0, Mr.-9)
vmod(Mr.-9, Ingram-10)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, she-1)
root(ROOT-0, asked-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ makes)
        (S
          (NP (PRP me))
          (ADJP (RB very) (JJ quiet)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD answered) (: --) (`` ``)
      (S
        (S
          (ADJP (RB as)
            (SBAR (IN if)
              (S
                (NP (PDT all) (PRP$ my) (NNS people))
                (VP (VBD were)
                  (ADJP (RB asleep)))))))
        (, ,)
        (CC and)
        (S
          (VP (VBG waiting)
            (PP (IN for)
              (NP (PRP me)))))))
    (. .) ('' '')))

nsubj(makes-3, It-2)
ccomp(answered-10, makes-3)
nsubj(quiet-6, me-4)
advmod(quiet-6, very-5)
xcomp(makes-3, quiet-6)
nsubj(answered-10, he-9)
root(ROOT-0, answered-10)
dep(answered-10, as-13)
mark(asleep-19, if-14)
predet(people-17, all-15)
poss(people-17, my-16)
nsubj(asleep-19, people-17)
cop(asleep-19, were-18)
ccomp(as-13, asleep-19)
dep(answered-10, waiting-22)
conj_and(as-13, waiting-22)
prep_for(waiting-22, me-24)

(ROOT
  (SQ (`` ``) (VBP Do)
    (NP (PRP you))
    (VP (VB mean)
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP they))
          (VP (VBD were) (RB all)
            (ADJP (JJ dead))))))
    (. ?)))

aux(mean-4, Do-2)
nsubj(mean-4, you-3)
root(ROOT-0, mean-4)
advmod(dead-10, as-5)
mark(dead-10, if-6)
nsubj(dead-10, they-7)
cop(dead-10, were-8)
advmod(dead-10, all-9)
advcl(mean-4, dead-10)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB talk)
        (PP (IN of)
          (NP (PRP it)))
        (ADVP (RB so) (RB quietly))))
    (. ?) ('' '')))

advmod(talk-4, How-1)
aux(talk-4, can-2)
nsubj(talk-4, you-3)
root(ROOT-0, talk-4)
prep_of(talk-4, it-6)
advmod(quietly-8, so-7)
advmod(talk-4, quietly-8)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB not))))
    (VP (VBP believe)
      (PP (IN in)
        (NP (NN death))))
    (. .) ('' '')))

mark(do-4, Because-2)
nsubj(do-4, I-3)
csubj(believe-6, do-4)
neg(do-4, not-5)
root(ROOT-0, believe-6)
prep_in(believe-6, death-8)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP
        (ADVP (RB _))
        (VBP do)
        (S
          (VP (VBG _)
            (S
              (NP (PRP you))
              (VP (VB mean)))))))
    (. ?) ('' '')))

dobj(do-4, What-2)
nsubj(do-4, What-2)
advmod(do-4, _-3)
root(ROOT-0, do-4)
xcomp(do-4, _-5)
nsubj(mean-7, you-6)
ccomp(_-5, mean-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (NP (DT a) (NNP Christian)))
    (. !) ('' '')))

nsubj(Christian-5, I-2)
cop(Christian-5, am-3)
det(Christian-5, a-4)
root(ROOT-0, Christian-5)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP hope)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are))))))
    (, ,)
    (NP (NNP Mr.) (NNP Ingram))
    (, ,)
    (SBAR (IN though)
      (PRN (, ,)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ honest)
                (PP (IN with)
                  (NP (PRP you)))))))
        (, ,))
      (S
        (NP (DT some) (NNS things))
        (VP (VBP make)
          (SBAR
            (S
              (NP (PRP me))
              (VP (VBP doubt)
                (NP (PRP it))))))))
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (MD would)
      (VP (VB say)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP am) (RB not)
              (NP (DT a) (NNP Christian)))))))
    (. .) ('' '')))

nsubj(hope-3, I-2)
ccomp(say-27, hope-3)
nsubj(are-5, you-4)
ccomp(hope-3, are-5)
nn(Ingram-8, Mr.-7)
nsubj(say-27, Ingram-8)
mark(make-20, though-10)
aux(honest-14, to-12)
cop(honest-14, be-13)
dep(make-20, honest-14)
prep_with(honest-14, you-16)
det(things-19, some-18)
nsubj(make-20, things-19)
advcl(say-27, make-20)
nsubj(doubt-22, me-21)
ccomp(make-20, doubt-22)
dobj(doubt-22, it-23)
advmod(say-27, Perhaps-24)
nsubj(say-27, you-25)
aux(say-27, would-26)
root(ROOT-0, say-27)
nsubj(Christian-32, I-28)
cop(Christian-32, am-29)
neg(Christian-32, not-30)
det(Christian-32, a-31)
ccomp(say-27, Christian-32)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ enough))
      (SBAR (IN that)
        (S
          (NP (NNP God))
          (VP (VBZ knows)
            (SBAR (IN whether)
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (NP (DT a) (NNP Christian))))
              (CC or)
              (RB not))))))
    (. .)))

nsubj(enough-4, It-2)
cop(enough-4, is-3)
root(ROOT-0, enough-4)
mark(knows-7, that-5)
nsubj(knows-7, God-6)
ccomp(enough-4, knows-7)
mark(Christian-12, whether-8)
nsubj(Christian-12, you-9)
cop(Christian-12, are-10)
det(Christian-12, a-11)
ccomp(knows-7, Christian-12)
ccomp(knows-7, not-14)
conj_or(Christian-12, not-14)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB say)
        (S
          (S
            (NP (PRP you))
            (VP (VBP are)))
          (CC or)
          (S
            (NP (PRP you))
            (VP (VBP are) (RB not))))))
    (. ?) ('' '')))

advmod(say-4, Why-1)
aux(say-4, should-2)
nsubj(say-4, I-3)
root(ROOT-0, say-4)
nsubj(are-6, you-5)
dep(say-4, are-6)
nsubj(are-9, you-8)
dep(say-4, are-9)
conj_or(are-6, are-9)
neg(are-9, not-10)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBD meant)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP you))
                      (VP (VBD said)
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBD were)
                              (NP (DT a) (NNP Christian)))))))))))))))
    (. .)))

cc(want-4, But-2)
nsubj(want-4, I-3)
nsubj(know-6, I-3)
root(ROOT-0, want-4)
aux(know-6, to-5)
xcomp(want-4, know-6)
dobj(meant-9, what-7)
nsubj(meant-9, you-8)
ccomp(know-6, meant-9)
advmod(said-12, when-10)
nsubj(said-12, you-11)
advcl(meant-9, said-12)
nsubj(Christian-16, you-13)
cop(Christian-16, were-14)
det(Christian-16, a-15)
ccomp(said-12, Christian-16)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD should)
      (NP (DT that))
      (VP (VB make)
        (S
          (NP (PRP you))
          (ADJP (JJ indifferent)
            (PP (TO to)
              (NP
                (NP (DT the) (NN death))
                (PP (IN of)
                  (NP (PRP$ your) (NNS friends)))))))))
    (. ?)))

advmod(make-4, How-1)
aux(make-4, should-2)
nsubj(make-4, that-3)
root(ROOT-0, make-4)
nsubj(indifferent-6, you-5)
xcomp(make-4, indifferent-6)
det(death-9, the-8)
prep_to(indifferent-6, death-9)
poss(friends-12, your-11)
prep_of(death-9, friends-12)

(ROOT
  (S
    (NP (NNP Death))
    (VP (VBZ is)
      (NP (DT a) (JJ dreadful) (NN thing))
      (, ,)
      (S
        (VP (VB look)
          (PP (IN at)
            (NP (PRP it)))
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP you))
              (VP (VBP like)))))))
    (. .) ('' '')))

nsubj(thing-5, Death-1)
cop(thing-5, is-2)
det(thing-5, a-3)
amod(thing-5, dreadful-4)
root(ROOT-0, thing-5)
dep(thing-5, look-7)
prep_at(look-7, it-9)
advmod(like-12, how-10)
nsubj(like-12, you-11)
ccomp(look-7, like-12)

(ROOT
  (S (`` ``)
    (NP (DT The) (NNP Lord))
    (VP (VBZ says) (, ,) (`` `)
      (S
        (NP (PRP He))
        (ADJP (RB that) (JJ liveth)
          (CC and)
          (JJ believeth))
        (SBAR (IN in)
          (S
            (NP (PRP Me))
            (VP (MD shall)
              (ADVP (RB never))
              (VP (VB die)))))))
    (. .) ('' ')))

det(Lord-3, The-2)
nsubj(says-4, Lord-3)
root(ROOT-0, says-4)
nsubj(die-16, He-7)
advmod(liveth-9, that-8)
dep(die-16, liveth-9)
conj_and(liveth-9, believeth-11)
dep(die-16, believeth-11)
mark(die-16, in-12)
nsubj(die-16, Me-13)
aux(die-16, shall-14)
neg(die-16, never-15)
xcomp(says-4, die-16)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP$ my) (NNS friends))
        (VP (VBP are) (RB not)
          (ADJP (JJ dead))
          (, ,)
          (S
            (VP (CC but)
              (VP (VBG living))
              (CC and)
              (VP (VBG waiting)
                (PP (IN for)
                  (NP (PRP me)))))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB wait)
        (PP (IN for)
          (NP
            (NP
              (NP
                (NP (PRP them))
                (PP (IN in)
                  (NP (DT a) (JJ fierce) (, ,) (JJ stormy) (NN night))))
              (, ,)
              (CC or)
              (NP (DT a) (JJ black) (NN frost)))
            (, ,)
            (CONJP (RB instead) (IN of))
            (NP
              (NP
                (NP (DT the) (NN calm))
                (PP (IN of)
                  (NP
                    (NP (PDT such) (DT a) (VBG sleeping) (NN day))
                    (PP (IN as)
                      (NP (DT this))))))
              (: --)
              (S
                (S
                  (NP
                    (NP (DT a) (NN day))
                    (PP (IN with)
                      (NP (DT the) (NN son))))
                  (VP (VBP hid)))
                (, ,)
                (NP (NNP Shakespeare))
                (VP (VBZ calls)
                  (NP (PRP it)))
                ('' '')))))
        (`` ``)
        (SBAR
          (WHADVP (WRB How))
          (S
            (NP (PRP you))
            (VP (VBP do)
              (VP (VB mix)
                (PRT (RP up))
                (NP (NNS things)))))))
      (. !))))

mark(dead-6, If-1)
poss(friends-3, my-2)
nsubj(dead-6, friends-3)
cop(dead-6, are-4)
neg(dead-6, not-5)
advcl(wait-18, dead-6)
ccomp(dead-6, living-9)
ccomp(dead-6, waiting-11)
conj_and(living-9, waiting-11)
prep_for(waiting-11, me-13)
advmod(wait-18, why-15)
aux(wait-18, should-16)
nsubj(wait-18, I-17)
root(ROOT-0, wait-18)
prep_for(wait-18, them-20)
det(night-26, a-22)
amod(night-26, fierce-23)
amod(night-26, stormy-25)
prep_in(them-20, night-26)
det(frost-31, a-29)
amod(frost-31, black-30)
prep_for(wait-18, frost-31)
conj_or(them-20, frost-31)
det(calm-36, the-35)
prep_for(wait-18, calm-36)
conj_negcc(them-20, calm-36)
predet(day-41, such-38)
det(day-41, a-39)
amod(day-41, sleeping-40)
prep_of(calm-36, day-41)
prep_as(day-41, this-43)
det(day-46, a-45)
nsubj(hid-50, day-46)
det(son-49, the-48)
prep_with(day-46, son-49)
ccomp(calls-53, hid-50)
nsubj(calls-53, Shakespeare-52)
dep(calm-36, calls-53)
dobj(calls-53, it-54)
advmod(mix-60, How-57)
nsubj(mix-60, you-58)
aux(mix-60, do-59)
ccomp(wait-18, mix-60)
prt(mix-60, up-61)
dobj(mix-60, things-62)

(ROOT
  (FRAG
    (NP
      (NP (NNP Shakespeare))
      (CC and)
      (NP (NNP Jesus) (NNP Christ)))
    (. !) ('' '')))

root(ROOT-0, Shakespeare-1)
nn(Christ-4, Jesus-3)
conj_and(Shakespeare-1, Christ-4)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP God))
      (VP
        (VP (VBD mixed)
          (NP (PRP them))
          (ADVP (RB first)))
        (, ,)
        (CC and)
        (VP (MD will)
          (VP (VB mix)
            (S
              (NP (PRP them))
              (ADJP
                (NP (DT a) (JJ good) (NN deal))
                (JJR more))
              (ADVP (RB yet)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Andrew))
    (. .)))

nsubj(mixed-3, God-2)
nsubj(mix-9, God-2)
ccomp(said-18, mixed-3)
dobj(mixed-3, them-4)
advmod(mixed-3, first-5)
aux(mix-9, will-8)
conj_and(mixed-3, mix-9)
ccomp(said-18, mix-9)
nsubj(more-14, them-10)
det(deal-13, a-11)
amod(deal-13, good-12)
npadvmod(more-14, deal-13)
xcomp(mix-9, more-14)
advmod(more-14, yet-15)
root(ROOT-0, said-18)
nsubj(said-18, Andrew-19)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP
        (NP (DT the) (NN smile))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (MD would)
              (VP (VB hover)
                (PP (IN like)
                  (NP
                    (NP (DT a) (JJ heavenly) (NN Psyche))
                    (PP (IN about)
                      (NP (PRP$ his) (NN mouth)))))))))))
    (, ,)
    (NP
      (NP (PRP$ his) (NN way))
      (PP (IN of)
        (NP (NN answering))))
    (VP (MD would)
      (ADVP (RB sometimes))
      (VP (VB have)
        (VP (VBN seemed)
          (NP (NN curt))
          (PP (TO to)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD did) (RB not)
                    (VP (VB understand)
                      (NP (PRP him)))))))))))
    (. .)))

cc(seemed-23, But-1)
det(smile-4, the-3)
nsubj(hover-7, smile-4)
prep_for(seemed-23, smile-4)
aux(hover-7, would-6)
rcmod(smile-4, hover-7)
det(Psyche-11, a-9)
amod(Psyche-11, heavenly-10)
prep_like(hover-7, Psyche-11)
poss(mouth-14, his-13)
prep_about(Psyche-11, mouth-14)
poss(way-17, his-16)
nsubj(seemed-23, way-17)
prep_of(way-17, answering-19)
aux(seemed-23, would-20)
advmod(seemed-23, sometimes-21)
aux(seemed-23, have-22)
root(ROOT-0, seemed-23)
xcomp(seemed-23, curt-24)
prep_to(seemed-23, those-26)
nsubj(understand-30, those-26)
aux(understand-30, did-28)
neg(understand-30, not-29)
rcmod(those-26, understand-30)
dobj(understand-30, him-31)

(ROOT
  (S
    (PP (RB Instead) (IN of)
      (S
        (VP (VBG holding)
          (NP
            (NP (NN aloof))
            (PP (IN in)
              (NP (PRP$ his) (NN superiority))))
          (, ,)
          (ADVP (RB however))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (DT some))
              (VP (VBD thought)
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP
                      (VP (VBD did)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP he))
                            (VP (MD would) (RB not)
                              (VP (VB answer))))))
                      (, ,)
                      (CC or)
                      (VP (VBD answered)
                        (ADVP (RB abruptly))))))))))))
    (, ,)
    (NP
      (NP (NNP Andrew) (POS 's))
      (NN soul))
    (VP (MD would)
      (VP (VB be)
        (VP
          (VP (VBG hovering))
          (, ,)
          (VP (VBG watching)
            (CC and)
            (VBG hoping)
            (PP (IN for)
              (NP
                (NP (DT a) (NN chance))
                (PP (IN of)
                  (NP (NN lighting))))))
          (, ,)
          (CC and)
          (VP (VBG giving)
            (PP (IN of)
              (NP
                (NP (DT the) (JJS best))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD had))))))))))
    (. .)))

prepc_instead_of(hovering-31, holding-3)
dobj(holding-3, aloof-4)
poss(superiority-7, his-6)
prep_in(aloof-4, superiority-7)
advmod(holding-3, however-9)
mark(thought-13, as-11)
nsubj(thought-13, some-12)
advcl(holding-3, thought-13)
nsubj(did-15, he-14)
nsubj(answered-23, he-14)
ccomp(thought-13, did-15)
advmod(answer-20, when-16)
nsubj(answer-20, he-17)
aux(answer-20, would-18)
neg(answer-20, not-19)
advcl(did-15, answer-20)
ccomp(thought-13, answered-23)
conj_or(did-15, answered-23)
advmod(answered-23, abruptly-24)
poss(soul-28, Andrew-26)
nsubj(hovering-31, soul-28)
nsubj(watching-33, soul-28)
nsubj(giving-43, soul-28)
aux(hovering-31, would-29)
aux(hovering-31, be-30)
root(ROOT-0, hovering-31)
conj_and(hovering-31, watching-33)
conj_and(hovering-31, hoping-35)
conj_and(watching-33, hoping-35)
det(chance-38, a-37)
prep_for(watching-33, chance-38)
prep_of(chance-38, lighting-40)
conj_and(hovering-31, giving-43)
det(best-46, the-45)
prep_of(giving-43, best-46)
nsubj(had-48, he-47)
rcmod(best-46, had-48)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (NP
        (NP
          (PP (IN like)
            (NP (DT a) (JJ great) (NN bird)))
          (NP (VBG changing) (NNS parts))
          (PP (IN with)
            (NP (DT a) (NN child))))
        (: --)
        (NP
          (NP (DT the) (NN child))
          (ADJP (JJ afraid)
            (PP (IN of)
              (NP (DT the) (NN bird)))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (NN bird))
          (VP (VBG enticing)
            (NP (DT the) (NN child)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP (NNS friends))))))))))
    (. .)))

nsubj(parts-8, He-1)
cop(parts-8, was-2)
det(bird-6, a-4)
amod(bird-6, great-5)
prep_like(parts-8, bird-6)
amod(parts-8, changing-7)
root(ROOT-0, parts-8)
det(child-11, a-10)
prep_with(parts-8, child-11)
det(child-14, the-13)
conj_and(parts-8, child-14)
amod(child-14, afraid-15)
det(bird-18, the-17)
prep_of(afraid-15, bird-18)
det(bird-22, the-21)
conj_and(parts-8, bird-22)
vmod(bird-22, enticing-23)
det(child-25, the-24)
dobj(enticing-23, child-25)
aux(friends-28, to-26)
cop(friends-28, be-27)
vmod(child-25, friends-28)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (VP (VBN learned)
        (SBAR (IN that)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP he))
                (VP (VBD poured)
                  (PRT (RP out))
                  (NP (PRP$ his) (NN treasure))
                  (ADVP (RB recklessly)))))
            (NP (PRP it))
            (VP (MD might)
              (VP
                (VP (VB be)
                  (VP (VBN received)
                    (PP (IN with)
                      (NP (NN dishonor)))))
                (, ,)
                (CC and)
                (ADVP (CC but))
                (VP (VB choke)
                  (NP
                    (NP (DT the) (NN way))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN chariot))
                        (PP (IN of)
                          (S
                            (VP (VBG approaching)
                              (NP (NN truth)))))))))))))))
    (. .)))

nsubj(learned-3, He-1)
aux(learned-3, had-2)
root(ROOT-0, learned-3)
mark(received-15, that-4)
mark(poured-7, if-5)
nsubj(poured-7, he-6)
advcl(received-15, poured-7)
prt(poured-7, out-8)
poss(treasure-10, his-9)
dobj(poured-7, treasure-10)
advmod(poured-7, recklessly-11)
nsubjpass(received-15, it-12)
nsubj(choke-21, it-12)
aux(received-15, might-13)
auxpass(received-15, be-14)
ccomp(learned-3, received-15)
prep_with(received-15, dishonor-17)
ccomp(learned-3, but-20)
advmod(received-15, but-20)
conj_and(received-15, but-20)
ccomp(learned-3, choke-21)
conj_and(received-15, choke-21)
det(way-23, the-22)
dobj(choke-21, way-23)
det(chariot-26, the-25)
prep_of(way-23, chariot-26)
prepc_of(chariot-26, approaching-28)
dobj(approaching-28, truth-29)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Perhaps))
      (NP (PRP you))
      (VP (MD will)
        (VP (VB say)
          (NP
            (NP (JJ next))
            (SBAR
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP
                    (NP (DT no) (JJ such) (NN thing))
                    (PP (IN as)
                      (NP (NN suffering)))))))))))
    (, ,) ('' '')
    (VP (VBD resumed))
    (NP (NNP Alexa))
    (. .)))

advmod(say-5, Perhaps-2)
nsubj(say-5, you-3)
aux(say-5, will-4)
ccomp(resumed-16, say-5)
dobj(say-5, next-6)
expl(is-8, there-7)
rcmod(next-6, is-8)
neg(thing-11, no-9)
amod(thing-11, such-10)
nsubj(is-8, thing-11)
prep_as(thing-11, suffering-13)
root(ROOT-0, resumed-16)
nsubj(resumed-16, Alexa-17)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (DT the) (NNP Lord))
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (PP (IN in)
              (NP (DT the) (NN world)))
            (NP (PRP$ His) (NNS friends))
            (VP (MD should)
              (VP (VB have)
                (VP (VBN tribulation))))))))
    (. .) ('' '')))

dep(said-6, No-2)
det(Lord-5, the-4)
nsubj(said-6, Lord-5)
root(ROOT-0, said-6)
mark(tribulation-15, that-7)
det(world-10, the-9)
prep_in(tribulation-15, world-10)
poss(friends-12, His-11)
nsubj(tribulation-15, friends-12)
aux(tribulation-15, should-13)
aux(tribulation-15, have-14)
ccomp(said-6, tribulation-15)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (NP (NN tribulation))
      (VP (VB have)
        (NP
          (NP (PRP you))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP are)
                (ADVP (RB so))
                (VP (VBG specially)
                  (NP (PRP$ His) (NN friend)))))))))
    (. ?) ('' '')))

dep(have-4, What-2)
nsubj(have-4, tribulation-3)
root(ROOT-0, have-4)
dobj(have-4, you-5)
nsubj(specially-10, you-5)
aux(specially-10, are-8)
advmod(specially-10, so-9)
rcmod(you-5, specially-10)
poss(friend-12, His-11)
dobj(specially-10, friend-12)

(ROOT
  (S (`` ``)
    (ADVP (RB Not) (RB much)
      (SBAR (RB yet)
        (S
          (S
            (NP (PRP It))
            (VP (VBZ is)
              (NP
                (NP
                  (QP (DT a) (JJ little)))
                (, ,)
                (ADVP (RB however)))
              (, ,)
              (ADVP (RB sometimes))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB know)
                    (NP (JJ such)
                      (ADJP
                        (ADJP (JJ strong))
                        (, ,)
                        (CC and)
                        (ADJP (JJ beautiful))
                        (, ,)
                        (CC and)
                        (ADJP (JJ happy-making)))
                      (NNS things)))))))
          (, ,)
          (CC and)
          (S
            (NP (PDT all) (DT the) (NN time))
            (NP (PRP$ my) (NNS people)))
          (, ,)
          (S
            (NP
              (NP (PRP$ my) (JJ beloved) (NNS humans))
              (, ,)
              (VP (VBN born)
                (PP (IN of)
                  (NP (PRP$ my) (NN Father)))
                (PP (IN in)
                  (NP (NN heaven)))
                (, ,)
                (PP (IN with)
                  (NP
                    (NP (DT the) (JJ same) (NN heart))
                    (PP (IN for)
                      (NP (NN joy)
                        (CC and)
                        (NN sorrow))))))
              (, ,))
            (VP (MD will) (RB not)
              (VP
                (VP (VB listen))
                (CC and)
                (VP (VB be)
                  (VP (VBN comforted)))))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP think)
          (SBAR (IN that)
            (S
              (VP (VBD was)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBD made)
                      (NP
                        (NP (PRP$ our) (NNP Lord) (NN sorriest))
                        (PP (IN of)
                          (NP (DT all)))
                        ('' '')))))))))))
    (`` ``)
    (NP (NNP Mr.) (NNP Ingram))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT no) (NN patience))
        (PP (IN with)
          (NP (PRP you)))))
    (. .)))

dep(much-3, Not-2)
advmod(have-77, much-3)
advmod(little-8, yet-4)
nsubj(little-8, It-5)
cop(little-8, is-6)
quantmod(little-8, a-7)
dep(much-3, little-8)
advmod(little-8, however-10)
advmod(little-8, sometimes-12)
aux(know-15, to-14)
vmod(little-8, know-15)
amod(things-24, such-16)
amod(things-24, strong-17)
conj_and(strong-17, beautiful-20)
amod(things-24, beautiful-20)
conj_and(strong-17, happy-making-23)
amod(things-24, happy-making-23)
dobj(know-15, things-24)
predet(time-29, all-27)
det(time-29, the-28)
dep(people-31, time-29)
poss(people-31, my-30)
dep(much-3, people-31)
conj_and(little-8, people-31)
poss(humans-35, my-33)
amod(humans-35, beloved-34)
nsubj(listen-55, humans-35)
nsubjpass(comforted-58, humans-35)
vmod(humans-35, born-37)
poss(Father-40, my-39)
prep_of(born-37, Father-40)
prep_in(born-37, heaven-42)
det(heart-47, the-45)
amod(heart-47, same-46)
prep_with(born-37, heart-47)
prep_for(heart-47, joy-49)
prep_for(heart-47, sorrow-51)
conj_and(joy-49, sorrow-51)
aux(listen-55, will-53)
neg(listen-55, not-54)
dep(much-3, listen-55)
conj_and(little-8, listen-55)
parataxis(little-8, listen-55)
auxpass(comforted-58, be-57)
conj_and(little-8, comforted-58)
parataxis(little-8, comforted-58)
conj_and(listen-55, comforted-58)
nsubj(think-61, I-60)
parataxis(have-77, think-61)
mark(was-63, that-62)
ccomp(think-61, was-63)
nsubj(made-65, what-64)
ccomp(was-63, made-65)
poss(sorriest-68, our-66)
nn(sorriest-68, Lord-67)
dobj(made-65, sorriest-68)
prep_of(sorriest-68, all-70)
nn(Ingram-74, Mr.-73)
nsubj(have-77, Ingram-74)
nsubj(have-77, I-76)
root(ROOT-0, have-77)
neg(patience-79, no-78)
dobj(have-77, patience-79)
prep_with(patience-79, you-81)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB How))
      (S
        (VP (VBP dare))))
    (NP (PRP you))
    (VP (VBP liken)
      (NP (PRP$ your) (NN trouble))
      (PP (TO to)
        (NP
          (NP (DT that))
          (PP (IN of)
            (NP (PRP$ our) (NN Lord)))))
      (: --)
      (S
        (VP (VBG making)
          (S
            (NP (PRP yourself))
            (ADJP (JJ equal)
              (PP (IN with)
                (NP (PRP Him))))))))
    (. !) ('' '')))

advmod(dare-2, How-1)
advcl(liken-4, dare-2)
nsubj(liken-4, you-3)
root(ROOT-0, liken-4)
poss(trouble-6, your-5)
dobj(liken-4, trouble-6)
prep_to(liken-4, that-8)
poss(Lord-11, our-10)
prep_of(that-8, Lord-11)
parataxis(liken-4, making-13)
nsubj(equal-15, yourself-14)
xcomp(making-13, equal-15)
prep_with(equal-15, Him-17)

(ROOT
  (S (`` ``)
    (VP (VBZ Is)
      (S
        (NP (PRP it))
        (VP (VBG making)
          (S
            (NP (PRP myself))
            (ADJP (JJ equal)
              (PP (IN with)
                (NP (PRP Him))))
            (S
              (VP (TO to)
                (VP (VB say)
                  (SBAR (IN that)
                    (S
                      (NP (PRP I))
                      (VP (VBP understand)
                        (NP (DT a) (JJ little))
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (NP (PRP He))
                            (VP (VBD felt)
                              (PP (IN toward)
                                (NP (PRP$ His) (NN fellow-men))))))))))))))))
    (. ?)))

root(ROOT-0, Is-2)
nsubj(making-4, it-3)
dep(Is-2, making-4)
nsubj(say-10, myself-5)
dep(say-10, equal-6)
prep_with(equal-6, Him-8)
aux(say-10, to-9)
xcomp(making-4, say-10)
mark(understand-13, that-11)
nsubj(understand-13, I-12)
ccomp(say-10, understand-13)
det(little-15, a-14)
dobj(understand-13, little-15)
advmod(felt-18, how-16)
nsubj(felt-18, He-17)
dep(understand-13, felt-18)
poss(fellow-men-21, His-20)
prep_toward(felt-18, fellow-men-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADVP (RB always))
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB understand)
                (NP (PRP Him))))))))
    (: ;)
    (SQ (MD would)
      (NP (PRP it))
      (VP (VB be)
        (NP (DT a) (NN wonder))
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBD did)
              (ADVP (RB sometimes)
                (NP (DT a) (RB little))))))))
    (. ?)))

nsubj(trying-4, I-1)
nsubj(understand-6, I-1)
aux(trying-4, am-2)
advmod(trying-4, always-3)
root(ROOT-0, trying-4)
aux(understand-6, to-5)
xcomp(trying-4, understand-6)
dobj(understand-6, Him-7)
aux(wonder-13, would-9)
nsubj(wonder-13, it-10)
cop(wonder-13, be-11)
det(wonder-13, a-12)
parataxis(trying-4, wonder-13)
mark(did-16, if-14)
nsubj(did-16, I-15)
advcl(wonder-13, did-16)
advmod(did-16, sometimes-17)
det(little-19, a-18)
pobj(sometimes-17, little-19)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP
        (NP (DT a) (NN man))
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR (IN as)
                (S
                  (NP (PRP He))
                  (VP (VBD did) (, ,)
                    (PP (IN without)
                      (S
                        (VP (VBG understanding)
                          (NP (PRP Him)))))))))))))
    (. ?) ('' '')))

advmod(is-2, How-1)
root(ROOT-0, is-2)
det(man-4, a-3)
nsubj(is-2, man-4)
aux(do-6, to-5)
vmod(man-4, do-6)
mark(did-9, as-7)
nsubj(did-9, He-8)
advcl(do-6, did-9)
prepc_without(did-9, understanding-12)
dobj(understanding-12, Him-13)

(ROOT
  (S (`` ``)
    (VP (VB Are)
      (S
        (NP (PRP you))
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB work)
                (NP (NNS miracles))
                (ADVP (JJ next))))))))
    (. ?) ('' '')))

root(ROOT-0, Are-2)
nsubj(going-4, you-3)
nsubj(work-6, you-3)
dep(Are-2, going-4)
aux(work-6, to-5)
xcomp(going-4, work-6)
dobj(work-6, miracles-7)
advmod(work-6, next-8)

(ROOT
  (S (`` ``)
    (NP (NNP Jesus))
    (VP (VBD was)
      (ADVP (RB always))
      (VP (VBG doing)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNP God))
            (VP (VBD wanted)
              (S
                (NP (PRP Him))
                (VP (TO to)
                  (VP (VB do)))))))))
    (. .)))

nsubj(doing-5, Jesus-2)
aux(doing-5, was-3)
advmod(doing-5, always-4)
root(ROOT-0, doing-5)
dobj(wanted-8, what-6)
nsubj(do-11, what-6)
nsubj(wanted-8, God-7)
ccomp(doing-5, wanted-8)
dobj(wanted-8, Him-9)
nsubj(do-11, Him-9)
aux(do-11, to-10)
xcomp(wanted-8, do-11)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP He))
          (VP (VBD came)
            (PRT (RP for))
            (, ,)
            (S (RB not)
              (VP (TO to)
                (VP (VB work)
                  (NP (NNS miracles)))))))))
    (. .)))

nsubj(was-2, That-1)
root(ROOT-0, was-2)
dobj(came-5, what-3)
nsubj(work-10, what-3)
nsubj(came-5, He-4)
ccomp(was-2, came-5)
prt(came-5, for-6)
neg(work-10, not-8)
aux(work-10, to-9)
xcomp(came-5, work-10)
dobj(work-10, miracles-11)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD could)
        (VP (VB have)
          (VP (VBN worked)
            (NP (DT a) (JJ great) (JJ many))
            (ADVP
              (ADVP (RBR more))
              (SBAR (IN if)
                (S
                  (NP (PRP He))
                  (VP (VBD had)
                    (VP (VBN pleased))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP He))
      (VP (VBD did)
        (ADVP (DT no) (RBR more))
        (SBAR (IN than)
          (S
            (NP (NNP God))
            (VP (VBD wanted)
              (PP (IN of)
                (NP (PRP Him))))))))
    (. .)))

nsubj(worked-4, He-1)
aux(worked-4, could-2)
aux(worked-4, have-3)
root(ROOT-0, worked-4)
det(many-7, a-5)
amod(many-7, great-6)
dobj(worked-4, many-7)
advmod(worked-4, more-8)
mark(pleased-12, if-9)
nsubj(pleased-12, He-10)
aux(pleased-12, had-11)
advcl(more-8, pleased-12)
nsubj(did-16, He-15)
conj_but(worked-4, did-16)
neg(more-18, no-17)
advmod(did-16, more-18)
mark(wanted-21, than-19)
nsubj(wanted-21, God-20)
advcl(did-16, wanted-21)
prep_of(wanted-21, Him-23)

(ROOT
  (S
    (S
      (VP (VBG Am)
        (S
          (NP (PRP I))
          (RB not)
          (VP (TO to)
            (VP (VB try)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (NP
                      (NP (DT the) (NN will))
                      (PP (IN of)
                        (NP (NNP God)))))))
              (, ,)
              (PP (IN because)
                (NP
                  (NP (PRP He))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBD died)
                        (SBAR (IN that)
                          (S
                            (NP (PRP I))
                            (VP (MD might)))))))))
              (, ,)
              (S
                (ADVP (RB always))
                (VP (VBN succeeded)
                  (ADVP (RB however))
                  (ADVP (RB hard)))))))))
    (S
      (NP (PRP it))
      (VP (VBD was)))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADVP (RB always))
        (VP
          (VP (VBG failing))
          (CC and)
          (VP (VBG having)
            (S
              (VP (TO to)
                (VP (VB try)
                  (ADVP (RB again)))))))))
    (. ?) ('' '')))

root(ROOT-0, Am-1)
dobj(Am-1, I-2)
nsubj(try-5, I-2)
nsubj(do-7, I-2)
neg(try-5, not-3)
aux(try-5, to-4)
xcomp(Am-1, try-5)
aux(do-7, to-6)
xcomp(try-5, do-7)
det(will-9, the-8)
dobj(do-7, will-9)
prep_of(will-9, God-11)
prep_because(try-5, He-14)
nsubj(died-16, He-14)
rcmod(He-14, died-16)
mark(might-19, that-17)
nsubj(might-19, I-18)
ccomp(died-16, might-19)
advmod(succeeded-22, always-21)
dep(try-5, succeeded-22)
advmod(succeeded-22, however-23)
advmod(succeeded-22, hard-24)
nsubj(was-26, it-25)
ccomp(Am-1, was-26)
nsubj(failing-32, I-29)
nsubj(having-34, I-29)
nsubj(try-36, I-29)
aux(failing-32, am-30)
advmod(failing-32, always-31)
conj_and(Am-1, failing-32)
conj_and(Am-1, having-34)
conj_and(failing-32, having-34)
aux(try-36, to-35)
xcomp(having-34, try-36)
advmod(try-36, again-37)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP you))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB come)
              (PP (TO to)
                (NP (PRP it)))
              (PP (IN in)
                (NP (DT this) (NN life))))))))
    (. ?) ('' '')))

cc(think-4, And-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj(come-7, you-5)
aux(come-7, will-6)
ccomp(think-4, come-7)
prep_to(come-7, it-9)
det(life-12, this-11)
prep_in(come-7, life-12)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBP think)
        (PP (IN about)
          (NP (DT that)))))
    (: ;)
    (S
      (NP (PRP I))
      (ADVP (RB only))
      (VP
        (VP (VBP think)
          (PP (IN about)
            (S
              (VP (VBG doing)
                (NP (PRP$ His) (NN will))
                (ADVP (RB now))))))
        (PRN (: --)
          (PP (RB not) (IN about)
            (S
              (VP (VBG doing)
                (NP (PRP it))
                (ADVP (RB then)))))
          (: --))
        (SBAR (IN that)
          (S
            (VP (VBZ is) (, ,)
              (NP
                (NP (NN to-morrow)
                  (CC or)
                  (JJ next) (NN day))
                (CC or)
                (NP (JJ next) (NN world))))))))
    (. .)))

nsubj(think-4, I-2)
neg(think-4, never-3)
root(ROOT-0, think-4)
prep_about(think-4, that-6)
nsubj(think-10, I-8)
advmod(think-10, only-9)
parataxis(think-4, think-10)
prepc_about(think-10, doing-12)
poss(will-14, His-13)
dobj(doing-12, will-14)
advmod(doing-12, now-15)
neg(about-18, not-17)
dep(think-10, about-18)
pcomp(about-18, doing-19)
dobj(doing-19, it-20)
advmod(doing-19, then-21)
mark(day-29, that-23)
cop(day-29, is-24)
nn(day-29, to-morrow-26)
conj_or(to-morrow-26, next-28)
nn(day-29, next-28)
ccomp(think-10, day-29)
amod(world-32, next-31)
ccomp(think-10, world-32)
conj_or(day-29, world-32)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP
          (NP (RB only) (CD one) (NN life))
          (: --)
          (NP
            (NP (DT the) (NN life))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (VP (VBN hid)
                    (PP (IN with)
                      (NP (NNP Christ)))
                    (PP (IN in)
                      (NP (NNP God)))))))))))
    (: ;)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN life))
          (SBAR
            (WHPP (IN by)
              (WHNP (WDT which)))
            (S
              (NP (PRP I))
              (VP (VBP live)
                (ADVP (RB here)
                  (CC and)
                  (RB now))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
advmod(life-5, only-3)
num(life-5, one-4)
dobj(know-2, life-5)
det(life-8, the-7)
dep(life-5, life-8)
nsubjpass(hid-11, life-8)
auxpass(hid-11, is-10)
rcmod(life-8, hid-11)
prep_with(hid-11, Christ-13)
prep_in(hid-11, God-15)
nsubj(life-21, that-18)
cop(life-21, is-19)
det(life-21, the-20)
conj_and(know-2, life-21)
prep_by(live-25, life-21)
nsubj(live-25, I-24)
rcmod(life-21, live-25)
advmod(live-25, here-26)
advmod(live-25, now-28)
conj_and(here-26, now-28)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB make)
          (NP
            (NP (NNS schemes))
            (PP (IN of)
              (NP (NN life)))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP live)))
    (. .)))

nsubj(make-4, I-1)
aux(make-4, do-2)
neg(make-4, not-3)
root(ROOT-0, make-4)
dobj(make-4, schemes-5)
prep_of(schemes-5, life-7)
nsubj(live-10, I-9)
parataxis(make-4, live-10)

(ROOT
  (S
    (S
      (NP (NNP Life))
      (VP (MD will)
        (VP (VB teach)
          (NP (PRP me))
          (NP
            (NP (NNP God) (POS 's))
            (NNS plans)))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB take)
          (NP (DT no) (NN trouble))
          (PP (IN about)
            (NP (PRP them))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD will)
        (ADVP (RB only))
        (VP
          (VP (VB obey))
          (, ,)
          (CC and)
          (VP (VB receive)
            (NP
              (NP (DT the) (NNS bliss))
              (SBAR
                (S
                  (NP (PRP He))
                  (VP (VBZ sends)
                    (NP (PRP me))))))))))
    (. .)))

nsubj(teach-3, Life-1)
aux(teach-3, will-2)
root(ROOT-0, teach-3)
iobj(teach-3, me-4)
poss(plans-7, God-5)
dobj(teach-3, plans-7)
nsubj(take-11, I-9)
aux(take-11, will-10)
parataxis(teach-3, take-11)
neg(trouble-13, no-12)
dobj(take-11, trouble-13)
prep_about(take-11, them-15)
nsubj(obey-20, I-17)
nsubj(receive-23, I-17)
aux(obey-20, will-18)
advmod(obey-20, only-19)
parataxis(teach-3, obey-20)
parataxis(teach-3, receive-23)
conj_and(obey-20, receive-23)
det(bliss-25, the-24)
dobj(receive-23, bliss-25)
nsubj(sends-27, He-26)
rcmod(bliss-25, sends-27)
dobj(sends-27, me-28)

(ROOT
  (S (CC And)
    (PP (IN of)
      (NP (DT all) (NNS things)))
    (NP (PRP I))
    (VP (MD will) (RB not)
      (VP (VB make)
        (NP
          (NP (NNS theories))
          (PP (IN of)
            (NP
              (NP (NNP God) (POS 's))
              (NNS plans))))
        (PP (IN for)
          (NP (JJ other) (NNS people)))
        (S
          (VP (TO to)
            (VP (VB accept))))))
    (. .)))

cc(make-8, And-1)
det(things-4, all-3)
prep_of(make-8, things-4)
nsubj(make-8, I-5)
aux(make-8, will-6)
neg(make-8, not-7)
root(ROOT-0, make-8)
dobj(make-8, theories-9)
poss(plans-13, God-11)
prep_of(theories-9, plans-13)
amod(people-16, other-15)
prep_for(make-8, people-16)
aux(accept-18, to-17)
vmod(make-8, accept-18)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will)
        (ADVP (RB only))
        (VP (VB do)
          (NP (PRP$ my) (JJS best))
          (S
            (VP (TO to)
              (VP (VB destroy)
                (NP (JJ such) (NNS theories))
                (SBAR (IN as)
                  (S
                    (NP (PRP I))
                    (VP (VBP find)
                      (S
                        (VP (VBG coming)
                          (PP (IN between)
                            (NP (DT some) (JJ poor) (NN glooming) (NN heart))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN sun))
      (VP (VBG shining)
        (PP (IN in)
          (NP (PRP$ his) (NN strength)))))
    (. .)))

nsubj(do-4, I-1)
aux(do-4, will-2)
advmod(do-4, only-3)
root(ROOT-0, do-4)
poss(best-6, my-5)
dobj(do-4, best-6)
aux(destroy-8, to-7)
vmod(do-4, destroy-8)
amod(theories-10, such-9)
dobj(destroy-8, theories-10)
mark(find-13, as-11)
nsubj(find-13, I-12)
advcl(destroy-8, find-13)
xcomp(find-13, coming-14)
det(heart-19, some-16)
amod(heart-19, poor-17)
nn(heart-19, glooming-18)
prep_between(coming-14, heart-19)
det(sun-23, the-22)
nsubj(shining-24, sun-23)
conj_and(do-4, shining-24)
poss(strength-27, his-26)
prep_in(shining-24, strength-27)

(ROOT
  (S
    (NP
      (NP (DT Those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP love)
            (NP
              (NP (DT the) (NN shade))
              (PP (IN of)
                (NP (NNS lies))))))))
    (, ,)
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP them))
          (VP (VBP walk)
            (PP (IN in)
              (NP (PRP it)))
            (SBAR (IN until)
              (S
                (NP
                  (NP (DT the) (NN shiver))
                  (PP (IN of)
                    (NP (DT the) (JJ eternal) (NN cold))))
                (VP (VBP drive)
                  (S
                    (NP (PRP them))
                    (VP (TO to)
                      (VP (VB seek)
                        (NP
                          (NP (DT the) (NN face))
                          (PP (IN of)
                            (NP (NNP Jesus) (NNP Christ))))))))))))))
    (. .)))

nsubj(love-3, Those-1)
nsubj(let-9, Those-1)
rcmod(Those-1, love-3)
det(shade-5, the-4)
dobj(love-3, shade-5)
prep_of(shade-5, lies-7)
root(ROOT-0, let-9)
nsubj(walk-11, them-10)
ccomp(let-9, walk-11)
prep_in(walk-11, it-13)
mark(drive-21, until-14)
det(shiver-16, the-15)
nsubj(drive-21, shiver-16)
det(cold-20, the-18)
amod(cold-20, eternal-19)
prep_of(shiver-16, cold-20)
advcl(walk-11, drive-21)
dobj(drive-21, them-22)
nsubj(seek-24, them-22)
aux(seek-24, to-23)
xcomp(drive-21, seek-24)
det(face-26, the-25)
dobj(seek-24, face-26)
nn(Christ-29, Jesus-28)
prep_of(face-26, Christ-29)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB appeal)
          (PP (TO to)
            (NP (PRP$ their) (NN intellect))))))
    (VP (MD would)
      (VP (VB be)
        (ADVP (CC but))
        (S
          (VP (TO to)
            (VP (VB drive)
              (NP (PRP them) (DT the))
              (ADVP (RBR deeper)))))
        (PP (IN into)
          (NP (DT the) (NN shade)
            (S
              (VP (TO to)
                (VP (VB justify)
                  (NP (PRP$ their) (NN being))
                  (PP (IN in)
                    (NP (PRP it))))))))))
    (. .)))

aux(appeal-2, To-1)
csubj(be-7, appeal-2)
poss(intellect-5, their-4)
prep_to(appeal-2, intellect-5)
aux(be-7, would-6)
root(ROOT-0, be-7)
advmod(be-7, but-8)
aux(drive-10, to-9)
xcomp(be-7, drive-10)
dobj(drive-10, them-11)
dep(them-11, the-12)
advmod(drive-10, deeper-13)
det(shade-16, the-15)
prep_into(be-7, shade-16)
aux(justify-18, to-17)
vmod(shade-16, justify-18)
poss(being-20, their-19)
dobj(justify-18, being-20)
prep_in(justify-18, it-22)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (PP (IN by)
          (NP (NN argument)))
        (NP (PRP you))
        (VP (VBD did)
          (VP (VB persuade)
            (NP (PRP them))
            (PRT (RP out))
            (PP (IN of)
              (NP (PRP it)))))))
    (, ,)
    (NP (PRP they))
    (VP (MD would)
      (ADVP (CC but))
      (VP (VB run)
        (PP (IN into)
          (NP (DT a)
            (ADJP (JJR deeper)
              (CC and)
              (JJR worse))
            (NNS darkness)))))
    (. .) ('' '')))

cc(run-16, And-1)
mark(persuade-7, if-2)
prep_by(persuade-7, argument-4)
nsubj(persuade-7, you-5)
aux(persuade-7, did-6)
advcl(run-16, persuade-7)
dobj(persuade-7, them-8)
prep_out_of(persuade-7, it-11)
nsubj(run-16, they-13)
aux(run-16, would-14)
advmod(run-16, but-15)
root(ROOT-0, run-16)
det(darkness-22, a-18)
amod(darkness-22, deeper-19)
conj_and(deeper-19, worse-21)
amod(darkness-22, worse-21)
prep_into(run-16, darkness-22)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (DT that))
      (VP (VB be)))
    (. ?) ('' '')))

advmod(be-5, How-2)
aux(be-5, could-3)
nsubj(be-5, that-4)
root(ROOT-0, be-5)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (MD would)
      (ADVP (IN at) (RB once))
      (VP (VB think)
        (SBAR (IN that) (, ,)
          (S
            (PP (IN by)
              (NP (DT an) (JJ intellectual) (NN stride)))
            (NP (PRP they))
            (VP (VBD had)
              (VP (VBN advanced)
                (PP (IN in)
                  (NP (DT the) (JJ spiritual) (NN life)))
                (, ,)
                (SBAR (IN whereas)
                  (S
                    (NP (PRP they))
                    (VP (MD would)
                      (VP (VB be)
                        (ADJP (DT neither)
                          (ADJP
                            (NP (DT the))
                            (JJR better))
                          (CC nor)
                          (ADJP
                            (NP (DT the))
                            (JJR worse)))))))))))))
    (. .)))

nsubj(think-6, They-2)
aux(think-6, would-3)
advmod(think-6, at-4)
advmod(at-4, once-5)
root(ROOT-0, think-6)
mark(advanced-15, that-7)
det(stride-12, an-10)
amod(stride-12, intellectual-11)
prep_by(advanced-15, stride-12)
nsubj(advanced-15, they-13)
aux(advanced-15, had-14)
ccomp(think-6, advanced-15)
det(life-19, the-17)
amod(life-19, spiritual-18)
prep_in(advanced-15, life-19)
mark(better-27, whereas-21)
nsubj(better-27, they-22)
nsubj(worse-30, they-22)
aux(better-27, would-23)
cop(better-27, be-24)
preconj(better-27, neither-25)
npadvmod(better-27, the-26)
advcl(advanced-15, better-27)
npadvmod(worse-30, the-29)
advcl(advanced-15, worse-30)
conj_nor(better-27, worse-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (NP (DT a) (NN man))
      (, ,)
      (ADVP (RB once))
      (PP (IN among)
        (NP
          (NP (DT the) (NN foremost))
          (PP (IN in)
            (S
              (VP (VBG denouncing)
                (NP
                  (NP (DT the) (JJ old) (NN theology))
                  (, ,)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBZ is)
                        (ADVP (RB now))
                        (ADJP
                          (ADJP (RB no) (JJR better))
                          (PP (IN than)
                            (NP (DT a) (NN swindler))))))))))))))
    (. .) ('' '')))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
det(man-4, a-3)
dobj(know-2, man-4)
advmod(know-2, once-6)
det(foremost-9, the-8)
prep_among(know-2, foremost-9)
prepc_in(foremost-9, denouncing-11)
det(theology-14, the-12)
amod(theology-14, old-13)
dobj(denouncing-11, theology-14)
nsubj(better-20, theology-14)
cop(better-20, is-17)
advmod(better-20, now-18)
neg(better-20, no-19)
rcmod(theology-14, better-20)
det(swindler-23, a-22)
prep_than(better-20, swindler-23)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP mean)))
    (: --) ('' '')
    (S
      (NP (`` ``)
        (NP (DT No) (NN one))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP know))))
        (, ,))
      (VP (VBP ma'am)))
    (. .)))

nsubj(mean-3, You-2)
root(ROOT-0, mean-3)
neg(one-8, No-7)
nsubj(ma'am-12, one-8)
nsubj(know-10, you-9)
rcmod(one-8, know-10)
parataxis(mean-3, ma'am-12)

(ROOT
  (S
    (NP (PRP$ His) (JJ intellectual) (NN freedom))
    (VP (VBZ seems)
      (ADVP (RB only))
      (S
        (VP (TO to)
          (VP (VB have)
            (VP (VBN served)
              (NP (PRP$ his) (JJ spiritual) (NN subjugation)))))))
    (. .)))

poss(freedom-3, His-1)
amod(freedom-3, intellectual-2)
nsubj(seems-4, freedom-3)
nsubj(served-8, freedom-3)
root(ROOT-0, seems-4)
advmod(seems-4, only-5)
aux(served-8, to-6)
aux(served-8, have-7)
xcomp(seems-4, served-8)
poss(subjugation-11, his-9)
amod(subjugation-11, spiritual-10)
dobj(served-8, subjugation-11)

(ROOT
  (S
    (NP
      (NP (NNP Right) (NN opinion))
      (, ,)
      (SBAR (IN except)
        (S
          (NP (PRP it))
          (VP (VB spring)
            (PP (IN from)
              (NP (NN obedience)))
            (PP (TO to)
              (NP (DT the) (NN truth))))))
      (, ,))
    (VP (VBZ is)
      (ADVP (RB but) (RB so))
      (ADJP (RB much) (JJ rubbish)
        (PP (IN on)
          (NP
            (NP (DT the) (JJ golden) (NN floor))
            (PP (IN of)
              (NP (DT the) (NN temple)))))))
    (. .) ('' '')))

nn(opinion-2, Right-1)
nsubj(rubbish-17, opinion-2)
mark(spring-6, except-4)
nsubj(spring-6, it-5)
rcmod(opinion-2, spring-6)
prep_from(spring-6, obedience-8)
det(truth-11, the-10)
prep_to(spring-6, truth-11)
cop(rubbish-17, is-13)
advmod(so-15, but-14)
advmod(rubbish-17, so-15)
advmod(rubbish-17, much-16)
root(ROOT-0, rubbish-17)
det(floor-21, the-19)
amod(floor-21, golden-20)
prep_on(rubbish-17, floor-21)
det(temple-24, the-23)
prep_of(floor-21, temple-24)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN peace))
        (PP (IN of)
          (NP
            (NP (DT the) (NN night))
            (CC and)
            (NP (PRP$ its) (NNS luminous) (NNS earnestness)))))
      (VP (VBD were)
        (VP (VBN gleaming)
          (PP (IN on)
            (NP
              (NP (NNP Andrew) (POS 's))
              (NN face))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNP Alexa))
        (, ,)
        (VP (VBG glancing)
          (PRT (RP up))
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBD ceased)))))
        (, ,))
      (VP (VBD felt)
        (ADVP (RB again))
        (NP
          (NP (DT the) (NN inroad))
          (PP (IN of)
            (NP
              (NP (DT a) (NN sense))
              (PP (IN of)
                (NP
                  (NP (NN something))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN man))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD was) (RB not)
                            (PP (IN in)
                              (NP
                                (NP
                                  (NP (DT the) (JJ other) (NNS men))
                                  (SBAR
                                    (S
                                      (NP (PRP she))
                                      (VP (VBD knew)))))
                                (: --)
                                (NP
                                  (NP (DT the) (JJ spiritual) (NN shadow))
                                  (PP (IN of)
                                    (NP
                                      (NP (DT a) (NN dweller))
                                      (PP (IN in)
                                        (NP
                                          (NP (NNS regions))
                                          (PP (IN beyond)
                                            (NP (PRP$ her) (NN ken))))))))))))))))))))))
    (. .)))

det(peace-2, The-1)
nsubjpass(gleaming-11, peace-2)
det(night-5, the-4)
prep_of(peace-2, night-5)
poss(earnestness-9, its-7)
nn(earnestness-9, luminous-8)
prep_of(peace-2, earnestness-9)
conj_and(night-5, earnestness-9)
auxpass(gleaming-11, were-10)
root(ROOT-0, gleaming-11)
poss(face-15, Andrew-13)
prep_on(gleaming-11, face-15)
nsubj(felt-26, Alexa-18)
vmod(Alexa-18, glancing-20)
prt(glancing-20, up-21)
mark(ceased-24, as-22)
nsubj(ceased-24, he-23)
advcl(glancing-20, ceased-24)
conj_and(gleaming-11, felt-26)
advmod(felt-26, again-27)
det(inroad-29, the-28)
dobj(felt-26, inroad-29)
det(sense-32, a-31)
prep_of(inroad-29, sense-32)
prep_of(sense-32, something-34)
det(man-37, the-36)
prep_in(something-34, man-37)
nsubj(was-39, man-37)
rcmod(man-37, was-39)
neg(was-39, not-40)
det(men-44, the-42)
amod(men-44, other-43)
prep_in(was-39, men-44)
nsubj(knew-46, she-45)
rcmod(men-44, knew-46)
det(shadow-50, the-48)
amod(shadow-50, spiritual-49)
dep(men-44, shadow-50)
det(dweller-53, a-52)
prep_of(shadow-50, dweller-53)
prep_in(dweller-53, regions-55)
poss(ken-58, her-57)
prep_beyond(regions-55, ken-58)

(ROOT
  (S
    (NP (DT The) (NN man))
    (VP (VBD was)
      (PP (IN before)
        (NP (PRP her)))
      (, ,)
      (ADVP
        (ADVP (RB yet) (RB out))
        (PP (IN of)
          (NP (PRP$ her) (NN sight)))))
    (. !)))

det(man-2, The-1)
nsubj(was-3, man-2)
root(ROOT-0, was-3)
prep_before(was-3, her-5)
advmod(was-3, yet-7)
poss(sight-11, her-10)
prep_out_of(was-3, sight-11)

(ROOT
  (S
    (NP (DT The) (JJ whole) (NN thing))
    (VP (VBD was)
      (ADJP (RB too) (JJ simple))
      (PP (IN for)
        (NP (PRP her)))
      (, ,)
      (SBAR (RB only)
        (S
          (NP (DT a) (NN child))
          (VP (MD could)
            (VP (VB understand)
              (NP (PRP it))
              (PP (RB Instead)
                (PP (IN of)
                  (S
                    (VP (VBG listening)
                      (PP (TO to)
                        (NP (DT the) (NNS elders)
                          (CC and)
                          (NNS priests)))
                      (S
                        (VP (TO to)
                          (VP (VB learn)
                            (SBAR
                              (WHADVP (WRB how))
                              (S
                                (VP (TO to)
                                  (VP (VB save)
                                    (NP (PRP$ his) (NN soul))
                                    (PRN (, ,)
                                      (S
                                        (NP (PRP he))
                                        (VP
                                          (VP (VBD cast)
                                            (PRT (RP away))
                                            (NP
                                              (NP (DT all) (NN care))
                                              (PP (IN of)
                                                (NP (PRP himself)))))
                                          (, ,)
                                          (VP (VBD left)
                                            (NP (DT that))
                                            (PP (TO to)
                                              (NP (NNP God))))
                                          (, ,)
                                          (CC and)
                                          (VP (VBD gave)
                                            (NP (PRP himself))
                                            (S
                                              (VP (TO to)
                                                (VP (VB do)
                                                  (NP
                                                    (NP (DT the) (NN will))
                                                    (PP (IN of)
                                                      (NP (PRP Him))))
                                                  (PP (IN from)
                                                    (SBAR
                                                      (WHNP (WP$ whose) (NNS heart))
                                                      (S
                                                        (NP (PRP he))
                                                        (VP (VBD came)))))))))))
                                      (, ,))
                                    (SBAR (RB even) (IN as)
                                      (S
                                        (NP
                                          (NP (DT the) (JJ eternal) (NN Life))
                                          (, ,)
                                          (NP
                                            (NP (DT the) (NNP Son))
                                            (PP (IN of)
                                              (NP (NNP God))))
                                          (, ,))
                                        (VP (VBN required)
                                          (PP (IN of)
                                            (NP (PRP him))))))))))))))))
                (: ;)
                (PP (IN in)
                  (NP
                    (NP (DT the) (JJ mighty) (NN hope))
                    (PP (IN of)
                      (S
                        (VP (VBG becoming)
                          (NP
                            (NP (CD one) (NN mind))
                            (, ,)
                            (NP
                              (NP
                                (NP (NN heart))
                                (, ,)
                                (NP (NN soul)))
                              (, ,)
                              (NP (CD one) (JJ eternal) (NN being))
                              (, ,)
                              (PP (IN with)
                                (NP (PRP Him)))
                              (, ,)
                              (PP (IN with)
                                (NP (DT the) (NNP Father)))
                              (, ,)
                              (PP (IN with)
                                (NP (DT every) (JJ good) (NN man)))
                              (, ,)
                              (PP (IN with)
                                (NP
                                  (NP (DT the) (NN universe))
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (VP (VBD was)
                                        (NP
                                          (NP (PRP$ his) (NN inheritance))
                                          (: --)
                                          (S
                                            (VP (VBG walking)
                                              (PP (IN in)
                                                (NP (DT the) (NN world)))
                                              (SBAR (IN as)
                                                (S
                                                  (NP (NNP Enoch))
                                                  (VP (VBD walked)
                                                    (PP (IN with)
                                                      (NP (NNP God))))))))))))))
                              (, ,)
                              (VP (VBN held)
                                (PP (IN by)
                                  (NP (PRP$ his) (NN hand)))))))))))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, whole-2)
nsubj(simple-6, thing-3)
cop(simple-6, was-4)
advmod(simple-6, too-5)
root(ROOT-0, simple-6)
prep_for(simple-6, her-8)
advmod(understand-14, only-10)
det(child-12, a-11)
nsubj(understand-14, child-12)
aux(understand-14, could-13)
ccomp(simple-6, understand-14)
dobj(understand-14, it-15)
prepc_instead_of(understand-14, listening-18)
det(elders-21, the-20)
prep_to(listening-18, elders-21)
prep_to(listening-18, priests-23)
conj_and(elders-21, priests-23)
aux(learn-25, to-24)
xcomp(listening-18, learn-25)
advmod(save-28, how-26)
aux(save-28, to-27)
ccomp(learn-25, save-28)
xcomp(learn-25, save-28)
poss(soul-30, his-29)
dobj(save-28, soul-30)
nsubj(cast-33, he-32)
nsubj(left-40, he-32)
nsubj(gave-46, he-32)
parataxis(save-28, cast-33)
prt(cast-33, away-34)
det(care-36, all-35)
dobj(cast-33, care-36)
prep_of(care-36, himself-38)
parataxis(save-28, left-40)
conj_and(cast-33, left-40)
dobj(left-40, that-41)
prep_to(left-40, God-43)
parataxis(save-28, gave-46)
conj_and(cast-33, gave-46)
dobj(gave-46, himself-47)
aux(do-49, to-48)
vmod(gave-46, do-49)
det(will-51, the-50)
dobj(do-49, will-51)
prep_of(will-51, Him-53)
poss(heart-56, whose-55)
dobj(came-58, heart-56)
nsubj(came-58, he-57)
prepc_from(do-49, came-58)
advmod(required-71, even-60)
mark(required-71, as-61)
det(Life-64, the-62)
amod(Life-64, eternal-63)
nsubj(required-71, Life-64)
det(Son-67, the-66)
appos(Life-64, Son-67)
prep_of(Son-67, God-69)
advcl(save-28, required-71)
prep_of(required-71, him-73)
det(hope-78, the-76)
amod(hope-78, mighty-77)
prep_in(understand-14, hope-78)
prepc_of(hope-78, becoming-80)
num(mind-82, one-81)
xcomp(becoming-80, mind-82)
appos(mind-82, heart-84)
appos(heart-84, soul-86)
num(being-90, one-88)
amod(being-90, eternal-89)
appos(heart-84, being-90)
prep_with(heart-84, Him-93)
det(Father-97, the-96)
prep_with(heart-84, Father-97)
det(man-102, every-100)
amod(man-102, good-101)
prep_with(heart-84, man-102)
det(universe-106, the-105)
prep_with(heart-84, universe-106)
nsubj(inheritance-110, universe-106)
cop(inheritance-110, was-108)
poss(inheritance-110, his-109)
rcmod(universe-106, inheritance-110)
dep(inheritance-110, walking-112)
det(world-115, the-114)
prep_in(walking-112, world-115)
mark(walked-118, as-116)
nsubj(walked-118, Enoch-117)
advcl(walking-112, walked-118)
prep_with(walked-118, God-120)
vmod(heart-84, held-122)
poss(hand-125, his-124)
agent(held-122, hand-125)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NN man))
            (VP
              (VP (VBD was))
              (CC and)
              (VP (VBZ is)
                (VP (VBN meant)
                  (S
                    (VP (TO to)
                      (VP (VB be))))
                  (, ,)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (NN man))
                      (VP (MD must)
                        (VP (VB become))))))))))))
    (: ;)
    (S
      (ADVP (RB thither))
      (NP
        (NP (DT the) (NNS wheels))
        (PP (IN of)
          (NP (NN time))))
      (VP (VBP are)
        (NP (VBG roaring))))
    (: ;)
    (S
      (NP (NN thither))
      (VP (VBP work)
        (NP
          (NP (PDT all) (DT the) (JJ silent) (NNS potencies))
          (PP (IN of)
            (NP (DT the) (JJ eternal) (NN world))))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (PRP they))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD will) (RB not)
              (VP (VB awake)
                (CC and)
                (VB arise)
                (PP (IN from)
                  (NP (DT the) (NN dead))))))))
      (VP (MD must)
        (VP (VB be)
          (VP (VBG flung)
            (PP (IN from)
              (NP (PRP$ their) (NNS graves)))
            (PP (IN by)
              (NP
                (NP (DT the) (NNS throes))
                (PP (IN of)
                  (NP (DT a) (JJ shivering) (NN world)))))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
dobj(was-5, what-3)
nsubj(was-5, man-4)
nsubjpass(meant-8, man-4)
nsubj(be-10, man-4)
ccomp(is-2, was-5)
auxpass(meant-8, is-7)
ccomp(is-2, meant-8)
conj_and(was-5, meant-8)
aux(be-10, to-9)
xcomp(meant-8, be-10)
dobj(become-15, what-12)
nsubj(become-15, man-13)
aux(become-15, must-14)
ccomp(meant-8, become-15)
advmod(roaring-23, thither-17)
det(wheels-19, the-18)
nsubj(roaring-23, wheels-19)
prep_of(wheels-19, time-21)
cop(roaring-23, are-22)
conj_and(is-2, roaring-23)
nsubj(work-26, thither-25)
conj_and(is-2, work-26)
predet(potencies-30, all-27)
det(potencies-30, the-28)
amod(potencies-30, silent-29)
dobj(work-26, potencies-30)
det(world-34, the-32)
amod(world-34, eternal-33)
prep_of(potencies-30, world-34)
nsubj(awake-41, they-37)
nsubj(arise-43, they-37)
nsubj(flung-49, they-37)
aux(awake-41, will-39)
neg(awake-41, not-40)
rcmod(they-37, awake-41)
rcmod(they-37, arise-43)
conj_and(awake-41, arise-43)
det(dead-46, the-45)
prep_from(awake-41, dead-46)
aux(flung-49, must-47)
aux(flung-49, be-48)
conj_and(is-2, flung-49)
poss(graves-52, their-51)
prep_from(flung-49, graves-52)
det(throes-55, the-54)
prep_by(flung-49, throes-55)
det(world-59, a-57)
amod(world-59, shivering-58)
prep_of(throes-55, world-59)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN done)
            (S
              (VP (VBG speaking)
                (NP (NNP Andrew))))))))
    (VP
      (VP (VBD stood))
      (CC and)
      (VP (VBD looked)
        (PRT (RP up))))
    (. .)))

advmod(done-4, When-1)
nsubj(done-4, he-2)
aux(done-4, had-3)
advcl(stood-7, done-4)
csubj(stood-7, done-4)
csubj(looked-9, done-4)
xcomp(done-4, speaking-5)
dobj(speaking-5, Andrew-6)
root(ROOT-0, stood-7)
conj_and(stood-7, looked-9)
prt(looked-9, up-10)

(ROOT
  (S
    (NP (DT A) (JJ few) (NNS stars))
    (VP (VBD were)
      (VP (VBG looking)
        (PRT (RP down))
        (PP (IN through)
          (NP (DT the) (JJ limpid) (NN air)))))
    (. .)))

det(stars-3, A-1)
amod(stars-3, few-2)
nsubj(looking-5, stars-3)
aux(looking-5, were-4)
root(ROOT-0, looking-5)
prt(looking-5, down-6)
det(air-10, the-8)
amod(air-10, limpid-9)
prep_through(looking-5, air-10)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD rode)
      (PRT (RP on)))
    (. .)))

nsubj(rode-2, Alexa-1)
root(ROOT-0, rode-2)
prt(rode-2, on-3)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP her))
          (VP
            (VP (VBP go))
            (, ,)
            (CC and)
            (VP (VBD walked)
              (PP (IN after)
                (NP (PRP her)))
              (ADVP (RB alone))
              (, ,)
              (ADVP (RB sure))
              (SBAR (IN that)
                (S
                  (NP (PRP$ her) (NN mind))
                  (VP (MD must)
                    (NP (CD one) (NN day))
                    (VP (VB open)
                      (PP (TO to)
                        (NP (DT the) (JJ eternal) (NN fact)))
                      (SBAR (IN that)
                        (S
                          (NP (NNP God))
                          (VP (VBZ is)
                            (NP
                              (NP (DT all))
                              (PP (IN in)
                                (NP
                                  (NP (DT all))
                                  (, ,)
                                  (NP
                                    (NP
                                      (NP (DT the) (JJ perfect) (NN friend))
                                      (PP (IN of)
                                        (NP (PRP$ His) (NNS children))))
                                    (: ;)
                                    (NP
                                      (NP (NN yea))
                                      (, ,)
                                      (SBAR (IN that)
                                        (S
                                          (NP (PRP He))
                                          (VP (MD would)
                                            (VP (VB cease)
                                              (S
                                                (VP (TO to)
                                                  (VP (VB be)
                                                    (NP
                                                      (NP (NNP God))
                                                      (SBAR
                                                        (S
                                                          (VP
                                                            (ADVP (RBR sooner) (IN than))
                                                            (VBP fail)
                                                            (NP (PRP$ His) (NN child))
                                                            (PP (IN in)
                                                              (NP
                                                                (NP (PRP$ his) (NN battle))
                                                                (PP (IN with)
                                                                  (NP (NN death)))))))))))))))))))))))))))))))))
    (. .)))

nsubj(let-2, Andrew-1)
root(ROOT-0, let-2)
nsubj(go-4, her-3)
nsubj(walked-7, her-3)
ccomp(let-2, go-4)
ccomp(let-2, walked-7)
conj_and(go-4, walked-7)
prep_after(walked-7, her-9)
advmod(walked-7, alone-10)
advmod(open-19, sure-12)
mark(open-19, that-13)
poss(mind-15, her-14)
nsubj(open-19, mind-15)
aux(open-19, must-16)
num(day-18, one-17)
tmod(open-19, day-18)
dep(walked-7, open-19)
det(fact-23, the-21)
amod(fact-23, eternal-22)
prep_to(open-19, fact-23)
mark(all-27, that-24)
nsubj(all-27, God-25)
cop(all-27, is-26)
ccomp(open-19, all-27)
prep_in(all-27, all-29)
det(friend-33, the-31)
amod(friend-33, perfect-32)
appos(all-29, friend-33)
poss(children-36, His-35)
prep_of(friend-33, children-36)
dep(friend-33, yea-38)
mark(cease-43, that-40)
nsubj(cease-43, He-41)
nsubj(God-46, He-41)
aux(cease-43, would-42)
dep(yea-38, cease-43)
aux(God-46, to-44)
cop(God-46, be-45)
xcomp(cease-43, God-46)
advmod(than-48, sooner-47)
advmod(fail-49, than-48)
rcmod(God-46, fail-49)
poss(child-51, His-50)
dobj(fail-49, child-51)
poss(battle-54, his-53)
prep_in(fail-49, battle-54)
prep_with(battle-54, death-56)

(ROOT
  (NP (NNP CHAPTER) (NNP XXIV) (. .)))

nn(XXIV-2, CHAPTER-1)
root(ROOT-0, XXIV-2)

(ROOT
  (NP (DT THE) (NN WOOER) (. .)))

det(WOOER-2, THE-1)
root(ROOT-0, WOOER-2)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD kept)
      (S
        (VP (VBG hoping)
          (SBAR (IN that)
            (S
              (NP (NNP George))
              (VP (MD would)
                (VP (VB be)
                  (ADJP (VBN satisfied)
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP (VBD was) (RB not)
                          (VP (VBN inclined)
                            (PP (IN toward)
                              (NP (PRP him))))))))
                  (SBAR
                    (SBAR (IN as)
                      (S
                        (NP (PRP she))
                        (VP (VBD had)
                          (VP (VBN been)))))
                    (: ;)
                    (CC and)
                    (SBAR (IN that)
                      (S (, ,)
                        (PP (RB instead) (IN of)
                          (S
                            (VP (VBG bringing)
                              (NP (DT the) (NN matter)
                                (S
                                  (VP (TO to)
                                    (VP (VB open)
                                      (NP (NN issue)))))))))
                        (, ,)
                        (NP (PRP he))
                        (VP (MD would)
                          (VP (VB continue)
                            (S
                              (VP (TO to)
                                (VP (VB come)
                                  (CC and)
                                  (VB go)
                                  (PP (IN as)
                                    (NP
                                      (NP (DT the) (NN friend))
                                      (PP (IN of)
                                        (NP (PRP$ her) (NN father))))))))))))))))))))
    (. .)))

nsubj(kept-2, Alexa-1)
root(ROOT-0, kept-2)
xcomp(kept-2, hoping-3)
mark(satisfied-8, that-4)
nsubjpass(satisfied-8, George-5)
aux(satisfied-8, would-6)
auxpass(satisfied-8, be-7)
ccomp(hoping-3, satisfied-8)
nsubjpass(inclined-12, she-9)
auxpass(inclined-12, was-10)
neg(inclined-12, not-11)
ccomp(satisfied-8, inclined-12)
prep_toward(inclined-12, him-14)
mark(been-18, as-15)
nsubj(been-18, she-16)
aux(been-18, had-17)
advcl(satisfied-8, been-18)
ccomp(satisfied-8, been-18)
mark(continue-34, that-21)
prepc_instead_of(continue-34, bringing-25)
det(matter-27, the-26)
dobj(bringing-25, matter-27)
aux(open-29, to-28)
vmod(matter-27, open-29)
dobj(open-29, issue-30)
nsubj(continue-34, he-32)
nsubj(come-36, he-32)
nsubj(go-38, he-32)
aux(continue-34, would-33)
advcl(satisfied-8, continue-34)
ccomp(satisfied-8, continue-34)
conj_and(been-18, continue-34)
aux(come-36, to-35)
xcomp(continue-34, come-36)
xcomp(continue-34, go-38)
conj_and(come-36, go-38)
det(friend-41, the-40)
prep_as(come-36, friend-41)
poss(father-44, her-43)
prep_of(friend-41, father-44)

(ROOT
  (S (CC But)
    (S
      (NP (NNP George))
      (VP (VBD came)
        (PP (TO to)
          (NP (DT the) (NN conclusion)))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP (VB remain)
                    (PP (IN in)
                      (NP (NN doubt)))
                    (ADVP (RB no) (RB longer))))))))))
    (, ,)
    (CC and)
    (S
      (NP (CD one) (NN afternoon))
      (VP (VBD followed)
        (NP (PRP her))
        (PP (IN into)
          (NP (DT the) (NN garden)))))
    (. .)))

nsubj(came-3, George-2)
root(ROOT-0, came-3)
det(conclusion-6, the-5)
prep_to(came-3, conclusion-6)
mark(ought-9, that-7)
nsubj(ought-9, he-8)
nsubj(remain-11, he-8)
ccomp(came-3, ought-9)
aux(remain-11, to-10)
xcomp(ought-9, remain-11)
prep_in(remain-11, doubt-13)
neg(longer-15, no-14)
advmod(remain-11, longer-15)
num(afternoon-19, one-18)
nsubj(followed-20, afternoon-19)
conj_and(came-3, followed-20)
dobj(followed-20, her-21)
det(garden-24, the-23)
prep_into(followed-20, garden-24)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (VP (VBN gone)
        (ADVP (RB there))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ certain) (JJ half-scientific) (, ,) (JJ half-religious) (NN book))
            (PP (IN in)
              (NP (PRP$ her) (NN hand)))))
        (, ,)
        (PP (IN from)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP she))
              (VP (VBD was)
                (VP (VBG storing)
                  (NP (PRP$ her) (NN mind))
                  (PP (IN with)
                    (NP
                      (NP (NNS arguments))
                      (PP (IN against)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP she))
                            (VP (VBD supposed)
                              (NP
                                (NP (DT the) (NNS opinions))
                                (PP (IN of)
                                  (NP (NNP Andrew)))))))))))))))))
    (. .)))

nsubj(gone-3, She-1)
aux(gone-3, had-2)
root(ROOT-0, gone-3)
advmod(gone-3, there-4)
det(book-11, a-6)
amod(book-11, certain-7)
amod(book-11, half-scientific-8)
amod(book-11, half-religious-10)
prep_with(gone-3, book-11)
poss(hand-14, her-13)
prep_in(book-11, hand-14)
dobj(storing-20, which-17)
nsubj(storing-20, she-18)
aux(storing-20, was-19)
prepc_from(gone-3, storing-20)
poss(mind-22, her-21)
dobj(storing-20, mind-22)
prep_with(storing-20, arguments-24)
dobj(supposed-28, what-26)
nsubj(supposed-28, she-27)
prepc_against(arguments-24, supposed-28)
det(opinions-30, the-29)
dobj(supposed-28, opinions-30)
prep_of(opinions-30, Andrew-32)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (PRN (, ,)
        (ADVP (RB however))
        (, ,))
      (NP
        (NP (JJ little) (NN hope))
        (PP (IN of)
          (NP (PRP$ his) (NN condescending)
            (S
              (VP (TO to)
                (VP (VB front)
                  (NP (PRP them))
                  (PP (IN with)
                    (NP (NN counter-argument))))))))))
    (. .)))

nsubj(had-2, She-1)
root(ROOT-0, had-2)
dep(had-2, however-4)
amod(hope-7, little-6)
dobj(had-2, hope-7)
poss(condescending-10, his-9)
prep_of(hope-7, condescending-10)
aux(front-12, to-11)
vmod(condescending-10, front-12)
dobj(front-12, them-13)
prep_with(front-12, counter-argument-15)

(ROOT
  (S
    (NP (PRP$ His) (NN voice))
    (VP (VBD returned)
      (ADVP (RB ever))
      (PP (TO to)
        (NP
          (NP (DT the) (NN ear))
          (PP (IN of)
            (NP
              (NP (PRP$ her) (NN mind))
              (PP (IN in)
                (NP
                  (NP (NNS words))
                  (PP (IN like)
                    (NP (DT these)))))))))
      (: :) (`` ``)
      (S
        (SBAR (IN If)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ content)
                (S
                  (VP (TO to)
                    (VP (VB think)
                      (ADVP (RB so)))))))))
        (, ,)
        (NP (PRP you))
        (VP (VBP are)
          (PP (IN in)
            (NP (DT no) (NN condition)
              (S
                (VP (TO to)
                  (VP (VB receive)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP I))
                        (VP (VBP have)
                          (S
                            (VP (TO to)
                              (VP (VB communicate)))))))))))))))
    (. .)))

poss(voice-2, His-1)
nsubj(returned-3, voice-2)
root(ROOT-0, returned-3)
advmod(returned-3, ever-4)
det(ear-7, the-6)
prep_to(returned-3, ear-7)
poss(mind-10, her-9)
prep_of(ear-7, mind-10)
prep_in(mind-10, words-12)
prep_like(words-12, these-14)
mark(content-20, If-17)
nsubj(content-20, you-18)
nsubj(think-22, you-18)
cop(content-20, are-19)
advcl(are-26, content-20)
aux(think-22, to-21)
xcomp(content-20, think-22)
advmod(think-22, so-23)
nsubj(are-26, you-25)
ccomp(returned-3, are-26)
neg(condition-29, no-28)
prep_in(are-26, condition-29)
aux(receive-31, to-30)
vmod(condition-29, receive-31)
dobj(have-34, what-32)
nsubj(communicate-36, what-32)
nsubj(have-34, I-33)
ccomp(receive-31, have-34)
aux(communicate-36, to-35)
xcomp(have-34, communicate-36)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB press)
        (NP (NN water))
        (PP (IN on)
          (NP
            (NP (DT a) (NN soul))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is) (RB not)
                  (ADJP (JJ thirsty)))))))))
    (. ?)))

advmod(press-4, Why-1)
aux(press-4, should-2)
nsubj(press-4, I-3)
root(ROOT-0, press-4)
dobj(press-4, water-5)
det(soul-8, a-7)
prep_on(press-4, soul-8)
nsubj(thirsty-12, soul-8)
cop(thirsty-12, is-10)
neg(thirsty-12, not-11)
rcmod(soul-8, thirsty-12)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (PRP us))
          (VP (VB wait)
            (PP (IN for)
              (NP
                (NP (DT the) (NN drought))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN desert))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (S
                          (NP (NN life))
                          (VP (VBZ is)
                            (NP (DT a) (JJ low) (NN fever))))
                        (, ,)
                        (CC and)
                        (S
                          (NP (DT the) (NN heart))
                          (VP (VBZ is)
                            (ADJP (JJ dry))))
                        (: ;)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (DT the) (NN earth))
                            (VP (VBZ is)
                              (PP (IN like)
                                (NP (NN iron))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NNS heavens))
        (PP (IN above)
          (NP (PRP it))))
      (VP (VBP are)
        (PP (IN as)
          (NP (NN brass)))))
    (. .) ('' '')))

root(ROOT-0, Let-1)
nsubj(wait-3, us-2)
ccomp(Let-1, wait-3)
det(drought-6, the-5)
prep_for(wait-3, drought-6)
det(desert-9, the-8)
prep_of(drought-6, desert-9)
advmod(fever-16, when-11)
nsubj(fever-16, life-12)
cop(fever-16, is-13)
det(fever-16, a-14)
amod(fever-16, low-15)
rcmod(desert-9, fever-16)
det(heart-20, the-19)
nsubj(dry-22, heart-20)
cop(dry-22, is-21)
rcmod(desert-9, dry-22)
conj_and(fever-16, dry-22)
advmod(is-27, when-24)
det(earth-26, the-25)
nsubj(is-27, earth-26)
rcmod(desert-9, is-27)
conj_and(fever-16, is-27)
prep_like(is-27, iron-29)
det(heavens-33, the-32)
nsubj(are-36, heavens-33)
prep_above(heavens-33, it-35)
conj_and(Let-1, are-36)
prep_as(are-36, brass-38)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD started)
      (PP (IN at)
        (NP
          (NP (DT the) (NN sound))
          (PP (IN of)
            (NP
              (NP (NNP George) (POS 's))
              (NN voice))))))
    (. .)))

nsubj(started-2, She-1)
root(ROOT-0, started-2)
det(sound-5, the-4)
prep_at(started-2, sound-5)
poss(voice-9, George-7)
prep_of(sound-5, voice-9)

(ROOT
  (S (`` ``)
    (X (WP What))
    (NP (JJ lovely))
    (VP (VBP weather))
    (. !) ('' '')))

dep(weather-4, What-2)
nsubj(weather-4, lovely-3)
root(ROOT-0, weather-4)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S
    (NP (RB Even) (NNS lovers))
    (VP (VBP betake)
      (NP (PRP themselves))
      (PP (TO to)
        (NP
          (NP (DT the) (NN weather))
          (PP (IN as)
            (NP
              (NP (DT a) (NN medium))
              (: --)
              (NP
                (NP (DT the) (NN side))
                (PP (IN of)
                  (NP (NN nature)))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (DT all))
                    (VP (VBP understand))))))))))
    (. .)))

advmod(lovers-2, Even-1)
nsubj(betake-3, lovers-2)
root(ROOT-0, betake-3)
dobj(betake-3, themselves-4)
det(weather-7, the-6)
prep_to(betake-3, weather-7)
det(medium-10, a-9)
prep_as(weather-7, medium-10)
det(side-13, the-12)
dep(medium-10, side-13)
dobj(understand-18, side-13)
prep_of(side-13, nature-15)
nsubj(understand-18, all-17)
rcmod(side-13, understand-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ good) (, ,) (JJ old-fashioned) (, ,) (JJ hot) (, ,) (JJ heavy) (NN summer) (NN afternoon))
        (, ,)
        (NP
          (NP (CD one) (NN ill-chosen))
          (PP (IN for)
            (NP (NN love-making))))))
    (. .)))

nsubj(afternoon-12, It-1)
cop(afternoon-12, was-2)
det(afternoon-12, a-3)
amod(afternoon-12, good-4)
amod(afternoon-12, old-fashioned-6)
amod(afternoon-12, hot-8)
amod(afternoon-12, heavy-10)
nn(afternoon-12, summer-11)
root(ROOT-0, afternoon-12)
num(ill-chosen-15, one-14)
appos(afternoon-12, ill-chosen-15)
prep_for(ill-chosen-15, love-making-17)

(ROOT
  (INTJ (`` ``) (UH Yes) (. ?) ('' '')))

root(ROOT-0, Yes-2)

(ROOT
  (S
    (S
      (VP (VBN answered)
        (UCP
          (NP (NNP Alexa))
          (, ,)
          (X
            (PP (IN with)
              (NP
                (NP (DT a) (NN point))
                (PP (IN of)
                  (NP (NN interrogation) (NN subaudible))))))
          (, ,)
          (CC and)
          (VP (VBN held)
            (NP (PRP$ her) (NN book))
            (ADVP (RB so))
            (SBAR (IN that)
              (FRAG
                (VP (VB be))))))))
    (VP (MD might)
      (VP (VB feel)
        (NP (PRP it))
        (PP (IN on)
          (NP
            (NP (DT the) (NN point))
            (PP (IN of)
              (S
                (VP (VBG being)
                  (VP (VBN lifted)
                    (ADVP (RB again))
                    (PP (TO to)
                      (NP (JJ eager) (NNS eyes)))))))))))
    (. .)))

csubj(feel-19, answered-1)
dobj(answered-1, Alexa-2)
dep(Alexa-2, with-4)
det(point-6, a-5)
pobj(with-4, point-6)
nn(subaudible-9, interrogation-8)
prep_of(point-6, subaudible-9)
dobj(answered-1, held-12)
conj_and(Alexa-2, held-12)
vmod(Alexa-2, held-12)
poss(book-14, her-13)
dobj(held-12, book-14)
advmod(held-12, so-15)
mark(be-17, that-16)
dep(held-12, be-17)
aux(feel-19, might-18)
root(ROOT-0, feel-19)
dobj(feel-19, it-20)
det(point-23, the-22)
prep_on(feel-19, point-23)
auxpass(lifted-26, being-25)
prepc_of(point-23, lifted-26)
advmod(lifted-26, again-27)
amod(eyes-30, eager-29)
prep_to(lifted-26, eyes-30)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD was) (RB not)
      (ADJP (RBR more) (JJ sensitive)
        (PP (IN than)
          (ADJP (JJ sentimental)))))
    (. .)))

cc(sensitive-6, But-1)
nsubj(sensitive-6, he-2)
cop(sensitive-6, was-3)
neg(sensitive-6, not-4)
advmod(sensitive-6, more-5)
root(ROOT-0, sensitive-6)
prep_than(sensitive-6, sentimental-8)

(ROOT
  (S
    (INTJ (`` ``) (UH Please))
    (VP (VB put)
      (NP (PRP$ your) (NN book))
      (ADVP (RB down)
        (PP (IN for)
          (NP (DT a) (NN moment)))))
    (. .)))

discourse(put-3, Please-2)
root(ROOT-0, put-3)
poss(book-5, your-4)
dobj(put-3, book-5)
advmod(put-3, down-6)
det(moment-9, a-8)
prep_for(down-6, moment-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have) (RB not)
      (ADVP (IN of) (RB late))
      (VP (VBN asked)
        (ADVP (RB too) (RB much))
        (PP (IN of)
          (NP
            (NP (PRP$ your) (NN attention))
            (, ,)
            (NP (NNP Alexa))))))
    (. !) ('' '')))

nsubj(asked-6, I-1)
aux(asked-6, have-2)
neg(asked-6, not-3)
advmod(asked-6, of-4)
advmod(of-4, late-5)
root(ROOT-0, asked-6)
advmod(much-8, too-7)
advmod(asked-6, much-8)
poss(attention-11, your-10)
prep_of(asked-6, attention-11)
appos(attention-11, Alexa-13)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP have)
      (VP (VBN been)
        (NP
          (NP (JJ very) (NN kind))
          (, ,)
          (NP (NNP George)))))
    (. !) ('' '')))

nsubj(kind-6, You-2)
aux(kind-6, have-3)
cop(kind-6, been-4)
amod(kind-6, very-5)
root(ROOT-0, kind-6)
appos(kind-6, George-8)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

nsubj(answered-2, she-1)
root(ROOT-0, answered-2)

(ROOT
  (S (`` ``)
    (NP (NNP Kind))
    (VP (VBZ is) (RB not)
      (VP (VBG asking)
        (NP
          (NP (RB much))
          (PP (IN of)
            (NP (PRP$ your) (NN attention))))))
    (. ?) ('' '')))

nsubj(asking-5, Kind-2)
aux(asking-5, is-3)
neg(asking-5, not-4)
root(ROOT-0, asking-5)
dobj(asking-5, much-6)
poss(attention-9, your-8)
prep_of(much-6, attention-9)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Yea) (: --)
        (ADVP (IN that))))
    (, ,)
    (CC and)
    (S
      (VP (VBG giving)
        (NP (PRP$ my) (NN father))
        (NP
          (NP
            (QP (RB so) (JJ much)))
          (PP (IN of)
            (NP
              (NP (NNP yours))
              (, ,) ('' '')
              (SBAR (`` ``)
                (S
                  (NP (PRP I))
                  (ADVP (RB certainly))
                  (VP (VBP have)
                    (VP (VBN seen)
                      (NP
                        (NP (JJR more))
                        (PP (IN of)
                          (NP (PRP him))))
                      (PP (IN than)
                        (PP (IN of)
                          (NP (PRP you)))))))))))))
    (. !) ('' '')))

root(ROOT-0, Yea-2)
advmod(Yea-2, that-4)
conj_and(Yea-2, giving-7)
poss(father-9, my-8)
dep(giving-7, father-9)
quantmod(much-11, so-10)
dobj(giving-7, much-11)
prep_of(much-11, yours-13)
nsubj(seen-20, I-17)
advmod(seen-20, certainly-18)
aux(seen-20, have-19)
dep(yours-13, seen-20)
dobj(seen-20, more-21)
prep_of(more-21, him-23)
prep(seen-20, than-24)
pcomp(than-24, of-25)
pobj(of-25, you-26)

(ROOT
  (S
    (NP (NNP returned) (NNP George))
    (, ,)
    (S
      (VP (VBG hoping)
        (NP (PRP$ her) (NNS words))))
    (VP (VBD meant)
      (NP (NN reproach)))
    (. .)))

nn(George-2, returned-1)
nsubj(meant-7, George-2)
vmod(meant-7, hoping-4)
poss(words-6, her-5)
dobj(hoping-4, words-6)
root(ROOT-0, meant-7)
dobj(meant-7, reproach-8)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP he))
    (VP
      (VP (VBZ has)
        (ADVP (RB always))
        (VP (VBN been)
          (ADJP (JJ kind)
            (PP (TO to)
              (NP (PRP me))))))
      (, ,)
      (CC and)
      (VP (JJ pleased)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP me)))))))
    (. !)))

nsubj(kind-7, he-3)
nsubj(pleased-12, he-3)
nsubj(see-14, he-3)
aux(kind-7, has-4)
advmod(kind-7, always-5)
cop(kind-7, been-6)
root(ROOT-0, kind-7)
prep_to(kind-7, me-9)
conj_and(kind-7, pleased-12)
aux(see-14, to-13)
xcomp(pleased-12, see-14)
dobj(see-14, me-15)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have) (RB not)
      (VP (VBN given)
        (NP (PRP me))
        (NP (JJ much) (NN encouragement))))
    (. !) ('' '')))

nsubj(given-4, You-1)
aux(given-4, have-2)
neg(given-4, not-3)
root(ROOT-0, given-4)
iobj(given-4, me-5)
amod(encouragement-7, much-6)
dobj(given-4, encouragement-7)

(ROOT
  (S
    (S
      (S
        (VP (TO To)
          (VP (VB begin)
            (NP (NN love-making))
            (PP (IN with)
              (NP (NN complaint))))))
      (VP (VBZ is) (RB not)
        (ADJP (JJ wise))))
    (, ,)
    (CC and)
    (S
      (NP (NNP George))
      (VP (VBD felt)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN got)
                (PP (IN into)
                  (NP (DT the) (JJ wrong) (NN track)))))))))
    (: ;)
    (CC but)
    (S
      (NP (NNP Alexa))
      (VP (VBD took)
        (NP (NN care))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD should) (RB not)
              (VP (VB get)
                (PRT (RP out))
                (PP (IN of)
                  (NP (PRP it)))
                (ADVP (RB easily))))))))
    (. .)))

aux(begin-2, To-1)
csubj(wise-8, begin-2)
dobj(begin-2, love-making-3)
prep_with(begin-2, complaint-5)
cop(wise-8, is-6)
neg(wise-8, not-7)
root(ROOT-0, wise-8)
nsubj(felt-12, George-11)
conj_and(wise-8, felt-12)
mark(got-16, that-13)
nsubj(got-16, he-14)
aux(got-16, had-15)
ccomp(felt-12, got-16)
det(track-20, the-18)
amod(track-20, wrong-19)
prep_into(got-16, track-20)
nsubj(took-24, Alexa-23)
conj_but(wise-8, took-24)
dobj(took-24, care-25)
mark(get-30, that-26)
nsubj(get-30, he-27)
aux(get-30, should-28)
neg(get-30, not-29)
ccomp(took-24, get-30)
prep_out_of(get-30, it-33)
advmod(get-30, easily-34)

(ROOT
  (S
    (S (RB Not)
      (VP (VBG being)
        (ADJP (JJ simple))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP
        (ADVP (RB always))
        (VBD settled)
        (NP (DT the) (JJS best) (NN course))
        (S
          (VP (TO to)
            (VP (VB pursue)))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB often))
        (VBD went)
        (ADJP (JJ wrong))))
    (. .)))

neg(simple-3, Not-1)
cop(simple-3, being-2)
vmod(settled-7, simple-3)
nsubj(settled-7, he-5)
nsubj(went-16, he-5)
advmod(settled-7, always-6)
root(ROOT-0, settled-7)
det(course-10, the-8)
amod(course-10, best-9)
dobj(settled-7, course-10)
aux(pursue-12, to-11)
vmod(settled-7, pursue-12)
advmod(went-16, often-15)
conj_and(settled-7, went-16)
acomp(went-16, wrong-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NN man))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ cares)
            (ADVP (RB only))
            (PP (IN for)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ true)
                      (CC and)
                      (JJ right))))))))))
    (VP (VBZ is)
      (VP (VBN saved)
        (ADVP (RB much))
        (S
          (VP (VBG thinking)
            (CC and)
            (VBG planning)))))
    (. .)))

det(man-2, The-1)
nsubj(cares-4, man-2)
nsubjpass(saved-13, man-2)
rcmod(man-2, cares-4)
advmod(cares-4, only-5)
nsubj(true-9, what-7)
nsubj(right-11, what-7)
cop(true-9, is-8)
prepc_for(cares-4, true-9)
prepc_for(cares-4, right-11)
conj_and(true-9, right-11)
auxpass(saved-13, is-12)
root(ROOT-0, saved-13)
advmod(saved-13, much-14)
xcomp(saved-13, thinking-15)
xcomp(saved-13, planning-17)
conj_and(thinking-15, planning-17)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB generally))
    (VP (VBZ sees)
      (PP (CC but)
        (NP
          (NP (CD one) (NN way))
          (PP (IN of)
            (S
              (VP (VBG doing)
                (NP (DT a) (NN thing))))))))
    (. !)))

nsubj(sees-3, He-1)
advmod(sees-3, generally-2)
root(ROOT-0, sees-3)
prep(sees-3, but-4)
num(way-6, one-5)
pobj(but-4, way-6)
prepc_of(way-6, doing-8)
det(thing-10, a-9)
dobj(doing-8, thing-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ glad)
        (S
          (VP (TO to)
            (VP (VB hear)
              (S
                (NP (PRP you))
                (VP (VB say)
                  (ADVP (RB so))
                  (, ,)
                  (NP (NNP George)))))))))
    (. !)))

nsubj(glad-4, I-2)
nsubj(hear-6, I-2)
cop(glad-4, am-3)
root(ROOT-0, glad-4)
aux(hear-6, to-5)
xcomp(glad-4, hear-6)
nsubj(say-8, you-7)
ccomp(hear-6, say-8)
advmod(say-8, so-9)
dobj(say-8, George-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have) (RB not)
      (VP (VBN mistaken)
        (NP (PRP me))))
    (. !) ('' '')))

nsubj(mistaken-4, You-1)
aux(mistaken-4, have-2)
neg(mistaken-4, not-3)
root(ROOT-0, mistaken-4)
dobj(mistaken-4, me-5)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBD were) (RB not)
      (ADJP (RB so) (JJ sharp)
        (PP (IN with)
          (NP (PRP me))))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD went)
            (ADVP (RB away))
            (, ,)
            (S
              (NP (NNP Alexa)))))))
    (. !) ('' '')))

nsubj(sharp-6, You-2)
cop(sharp-6, were-3)
neg(sharp-6, not-4)
advmod(sharp-6, so-5)
root(ROOT-0, sharp-6)
prep_with(sharp-6, me-8)
advmod(went-11, when-9)
nsubj(went-11, I-10)
advcl(sharp-6, went-11)
advmod(went-11, away-12)
dep(went-11, Alexa-14)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBD were)
        (VP (VBG going)
          (PRT (RP away)))))
    (. !) ('' '')))

dep(going-7, No-2)
advmod(going-7, then-4)
nsubj(going-7, you-5)
aux(going-7, were-6)
root(ROOT-0, going-7)
prt(going-7, away-8)

(ROOT
  (S (`` ``)
    (VP (VB Should)
      (NP (PRP you))
      (RB not)
      (VP (VB show)
        (NP (DT a) (NN fellow))
        (NP
          (NP (DT some) (NN kindness))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBZ is)
                (VP (VBN come)
                  (ADVP (RB back)))))))))
    (. ?) ('' '')))

aux(show-5, Should-2)
dobj(show-5, you-3)
neg(show-5, not-4)
root(ROOT-0, show-5)
det(fellow-7, a-6)
iobj(show-5, fellow-7)
det(kindness-9, some-8)
dobj(show-5, kindness-9)
tmod(come-13, kindness-9)
advmod(come-13, when-10)
nsubjpass(come-13, he-11)
auxpass(come-13, is-12)
rcmod(kindness-9, come-13)
advmod(come-13, back-14)

(ROOT
  (S (`` ``)
    (SBAR (RB Not)
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBZ does) (RB not))))
    (VP (VBP seem)
      (ADJP (JJ content)
        (PP (IN with)
          (S
            (VP (VBG having)
              (VP (VBN come)
                (ADVP (RB back))))))))
    (. !) ('' '')))

dep(does-5, Not-2)
advmod(does-5, when-3)
nsubj(does-5, he-4)
advcl(seem-7, does-5)
csubj(seem-7, does-5)
neg(does-5, not-6)
root(ROOT-0, seem-7)
acomp(seem-7, content-8)
aux(come-11, having-10)
prepc_with(content-8, come-11)
advmod(come-11, back-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB understand)))
    (. !) ('' '')))

nsubj(understand-5, I-2)
aux(understand-5, do-3)
neg(understand-5, not-4)
root(ROOT-0, understand-5)

(ROOT
  (S (CC But)
    (NP (NNP Alexa))
    (VP (VBD gave)
      (NP (DT no) (NN explanation)))
    (. .)))

cc(gave-3, But-1)
nsubj(gave-3, Alexa-2)
root(ROOT-0, gave-3)
neg(explanation-5, no-4)
dobj(gave-3, explanation-5)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ kind)
          (PP (TO to)
            (NP (PRP me))))
        (ADVP (RB again))
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBD were)
              (VP (VBG going)
                (PRT (RP away))
                (ADVP (RB again))))))))
    (. ?) ('' '')))

nsubj(kind-5, You-2)
aux(kind-5, would-3)
cop(kind-5, be-4)
root(ROOT-0, kind-5)
prep_to(kind-5, me-7)
advmod(kind-5, again-8)
mark(going-12, if-9)
nsubj(going-12, I-10)
aux(going-12, were-11)
advcl(kind-5, going-12)
prt(going-12, away-13)
advmod(going-12, again-14)

(ROOT
  (INTJ (`` ``) (UH Perhaps) (. .) ('' '')))

root(ROOT-0, Perhaps-2)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is) (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBD were)
            (ADJP (JJ sure)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD was) (RB not)
                    (VP (VBG coming)
                      (ADVP (RB back)))))))))))
    (. .) ('' '')))

nsubj(is-3, That-2)
root(ROOT-0, is-3)
mark(sure-8, if-5)
nsubj(sure-8, you-6)
cop(sure-8, were-7)
advcl(is-3, sure-8)
nsubj(coming-12, I-9)
aux(coming-12, was-10)
neg(coming-12, not-11)
ccomp(sure-8, coming-12)
advmod(coming-12, back-13)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD did) (RB not)
      (ADVP (RB _))
      (VP (VB say)
        (NP (NNS _))
        (ADVP (RB so))))
    (. .) ('' '')))

nsubj(say-6, I-2)
aux(say-6, did-3)
neg(say-6, not-4)
advmod(say-6, _-5)
root(ROOT-0, say-6)
dobj(say-6, _-7)
advmod(say-6, so-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB make)
        (NP (PRP it))
        (PRT (RP out))
        (, ,)
        (NP (NNP Alexa))))
    (. !)))

nsubj(make-5, I-2)
aux(make-5, ca-3)
neg(make-5, n't-4)
root(ROOT-0, make-5)
dobj(make-5, it-6)
prt(make-5, out-7)
dobj(make-5, Alexa-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD used)
      (S
        (VP (TO to)
          (VP (VB think)
            (SBAR
              (S
                (NP (EX there))
                (VP (MD could)
                  (ADVP (RB never))
                  (VP (VB be)
                    (NP
                      (NP (DT any) (NN misunderstanding))
                      (PP (IN between)
                        (NP
                          (NP (PRP you))
                          (CC and)
                          (NP (PRP me)))))))))))))
    (. !)))

nsubj(used-2, I-1)
nsubj(think-4, I-1)
root(ROOT-0, used-2)
aux(think-4, to-3)
xcomp(used-2, think-4)
expl(misunderstanding-10, there-5)
aux(misunderstanding-10, could-6)
neg(misunderstanding-10, never-7)
cop(misunderstanding-10, be-8)
det(misunderstanding-10, any-9)
ccomp(think-4, misunderstanding-10)
prep_between(misunderstanding-10, you-12)
prep_between(misunderstanding-10, me-14)
conj_and(you-12, me-14)

(ROOT
  (S
    (S (CC But)
      (NP (NN something))
      (VP (VBZ has)
        (VP (VBN crept)
          (PP (IN in)
            (PP (IN between)
              (NP (PRP us)))))))
    (, ,)
    (CC and)
    (S
      (PP (IN for)
        (NP
          (NP (DT the) (NN life))
          (PP (IN of)
            (NP (PRP me)))))
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBZ is)))))))
    (. !) ('' '')))

nsubj(crept-4, something-2)
aux(crept-4, has-3)
root(ROOT-0, crept-4)
prep(crept-4, in-5)
pcomp(in-5, between-6)
pobj(between-6, us-7)
det(life-12, the-11)
prep_for(know-18, life-12)
prep_of(life-12, me-14)
nsubj(know-18, I-15)
aux(know-18, do-16)
neg(know-18, not-17)
conj_and(crept-4, know-18)
dobj(is-21, what-19)
nsubj(is-21, it-20)
ccomp(know-18, is-21)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (CD one) (NN thing))
        (PP (IN for)
          (NP
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP I))
                (VP (VBP am)
                  (ADJP
                    (ADJP (RBR more) (VBN obliged)
                      (PP (TO to)
                        (NP (PRP you))))
                    (SBAR (IN than)
                      (S
                        (NP (PRP I))
                        (VP (MD can)
                          (VP (VB tell)))))))))
            (, ,)
            (NP (NNP George)))))
      (: --)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBD did) (RB not)
            (VP (VB say)
              (NP (NN anything))
              (SBAR (IN before)
                (S
                  (NP (PRP you))
                  (VP (VBD went)))))))))
    (. .) ('' '')))

expl(is-3, There-2)
root(ROOT-0, is-3)
num(thing-5, one-4)
nsubj(is-3, thing-5)
dobj(obliged-11, which-7)
nsubj(obliged-11, I-8)
cop(obliged-11, am-9)
advmod(obliged-11, more-10)
dep(George-19, obliged-11)
prep_to(obliged-11, you-13)
mark(tell-17, than-14)
nsubj(tell-17, I-15)
aux(tell-17, can-16)
ccomp(obliged-11, tell-17)
prep_for(thing-5, George-19)
mark(say-25, that-21)
nsubj(say-25, you-22)
aux(say-25, did-23)
neg(say-25, not-24)
ccomp(is-3, say-25)
parataxis(is-3, say-25)
dobj(say-25, anything-26)
mark(went-29, before-27)
nsubj(went-29, you-28)
advcl(say-25, went-29)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (RB awfully) (JJ sorry)
          (PP (IN for)
            (NP (PRP it))))
        (ADVP (RB now))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD understood))))))
    (. !) ('' '')))

nsubj(sorry-5, I-2)
cop(sorry-5, am-3)
advmod(sorry-5, awfully-4)
root(ROOT-0, sorry-5)
prep_for(sorry-5, it-7)
advmod(sorry-5, now-8)
nsubj(thought-12, I-11)
conj_but(sorry-5, thought-12)
nsubj(understood-14, you-13)
ccomp(thought-12, understood-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD did)))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (RB very) (JJ glad))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB have)
                (VP (VBN repented)
                  (NP (PRP it))
                  (ADVP (RB long) (RB ago)))))))))
    (. !) ('' '')))

nsubj(did-3, I-2)
root(ROOT-0, did-3)
nsubj(glad-9, I-6)
cop(glad-9, am-7)
advmod(glad-9, very-8)
conj_and(did-3, glad-9)
mark(repented-15, for-11)
nsubj(repented-15, I-12)
aux(repented-15, should-13)
aux(repented-15, have-14)
advcl(glad-9, repented-15)
dobj(repented-15, it-16)
advmod(ago-18, long-17)
advmod(repented-15, ago-18)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBD was)
        (ADJP (RB hardly) (JJ logical))))
    (, ,)
    (CC but)
    (S
      (NP (NNP George))
      (VP (VBD seemed)
        (S
          (VP (TO to)
            (VP (VB understand))))))
    (. .)))

nsubj(logical-4, This-1)
cop(logical-4, was-2)
advmod(logical-4, hardly-3)
root(ROOT-0, logical-4)
nsubj(seemed-8, George-7)
nsubj(understand-10, George-7)
conj_but(logical-4, seemed-8)
aux(understand-10, to-9)
xcomp(seemed-8, understand-10)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (JJ cruel)))
    (. !) ('' '')))

nsubj(cruel-4, You-2)
cop(cruel-4, are-3)
root(ROOT-0, cruel-4)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB have)
        (VP (VBN made)
          (S
            (NP (PRP it))
            (NP
              (NP (DT the) (NN business))
              (PP (IN of)
                (NP (PRP$ my) (NN life)))))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (ADVP (RB never))
              (VP (VBD did)))))))
    (. !) ('' '')))

nsubj(made-5, I-2)
aux(made-5, should-3)
aux(made-5, have-4)
root(ROOT-0, made-5)
nsubj(business-8, it-6)
det(business-8, the-7)
xcomp(made-5, business-8)
poss(life-11, my-10)
prep_of(business-8, life-11)
mark(did-15, that-12)
nsubj(did-15, you-13)
neg(did-15, never-14)
ccomp(made-5, did-15)

(ROOT
  (S (CC Yet)
    (NP (NNP George))
    (VP (VBD knew)
      (SBAR
        (S
          (PP (IN of)
            (NP (NNS things)))
          (NP (PRP he))
          (VP (VBD dared) (RB not)
            (VP (VB tell)
              (SBAR (IN that)
                (S
                  (VP (VBD had)
                    (VP (VBN taken)
                      (NP (NN place))
                      (ADVP
                        (ADVP (RB almost) (RB as) (RB soon))
                        (SBAR (IN as)
                          (S
                            (NP (PRP he))
                            (VP (VBD was)
                              (VP (VBN relieved)
                                (PP (IN from)
                                  (NP
                                    (NP (DT the)
                                      (ADJP (JJ sustaining)
                                        (CC and)
                                        (JJ restraining))
                                      (JJ human) (NN pressure))
                                    (SBAR
                                      (WHPP (IN in)
                                        (WHNP (WDT which)))
                                      (S
                                        (NP (PRP he))
                                        (VP (VBD had)
                                          (VP (VBN grown)
                                            (PRT (RP up))))))))))))))))))))))
    (. !)))

cc(knew-3, Yet-1)
nsubj(knew-3, George-2)
root(ROOT-0, knew-3)
prep_of(dared-7, things-5)
nsubj(dared-7, he-6)
ccomp(knew-3, dared-7)
neg(dared-7, not-8)
dep(dared-7, tell-9)
mark(taken-12, that-10)
aux(taken-12, had-11)
ccomp(tell-9, taken-12)
dobj(taken-12, place-13)
advmod(soon-16, almost-14)
advmod(soon-16, as-15)
advmod(taken-12, soon-16)
mark(relieved-20, as-17)
nsubjpass(relieved-20, he-18)
auxpass(relieved-20, was-19)
advcl(soon-16, relieved-20)
ccomp(soon-16, relieved-20)
det(pressure-27, the-22)
amod(pressure-27, sustaining-23)
conj_and(sustaining-23, restraining-25)
amod(pressure-27, restraining-25)
amod(pressure-27, human-26)
prep_from(relieved-20, pressure-27)
prep_in(grown-32, pressure-27)
nsubj(grown-32, he-30)
aux(grown-32, had-31)
rcmod(pressure-27, grown-32)
prt(grown-32, up-33)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ certain)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD should)))))))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP (NNP Alexa))
    (. .)))

nsubj(certain-4, I-2)
cop(certain-4, am-3)
ccomp(persisted-9, certain-4)
nsubj(should-6, I-5)
ccomp(certain-4, should-6)
root(ROOT-0, persisted-9)
nsubj(persisted-9, Alexa-10)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (VBP are)
      (NP (PRP you))
      (ADJP (RB so) (JJ certain)))
    (. ?) ('' '')))

advmod(certain-6, Why-2)
cop(certain-6, are-3)
nsubj(certain-6, you-4)
advmod(certain-6, so-5)
root(ROOT-0, certain-6)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (ADJP (RB so) (JJ glad)
            (S
              (VP
                (ADVP (RB now))
                (TO to)
                (VP (VB think)
                  (NP (PRP I)))))))))
    (VP (VBP am)
      (ADJP (JJ free)))
    (. .) ('' '')))

mark(glad-6, Because-2)
nsubj(glad-6, I-3)
cop(glad-6, am-4)
advmod(glad-6, so-5)
csubj(free-12, glad-6)
advmod(think-9, now-7)
aux(think-9, to-8)
dep(glad-6, think-9)
dobj(think-9, I-10)
cop(free-12, am-11)
root(ROOT-0, free-12)

(ROOT
  (S (`` ``)
    (NP (DT Some) (NN one))
    (VP (VBZ has)
      (VP (VBN been)
        (VP (VBG maligning)
          (NP
            (NP (PRP me))
            (, ,)
            (NP (NNP Alexa))))))
    (. !)))

det(one-3, Some-2)
nsubj(maligning-6, one-3)
aux(maligning-6, has-4)
aux(maligning-6, been-5)
root(ROOT-0, maligning-6)
dobj(maligning-6, me-7)
appos(me-7, Alexa-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB very) (JJ hard))
      (S (RB not)
        (VP (TO to)
          (VP (VB know)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT the) (NN stab))
                (VP (VBZ comes)
                  (PP (IN from)))))))))
    (. !) ('' '')))

nsubj(hard-4, It-1)
nsubj(know-7, It-1)
cop(hard-4, is-2)
advmod(hard-4, very-3)
root(ROOT-0, hard-4)
neg(know-7, not-5)
aux(know-7, to-6)
xcomp(hard-4, know-7)
advmod(comes-11, where-8)
det(stab-10, the-9)
nsubj(comes-11, stab-10)
ccomp(know-7, comes-11)
prep(comes-11, from-12)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN testimony))
      (PP (IN against)
        (NP (PRP you))))
    (VP (VBZ is)
      (PP (IN from)
        (NP
          (NP (PRP$ your) (JJ own) (NNS lips))
          (, ,)
          (NP (NNP George)))))
    (. .)))

det(testimony-3, The-2)
nsubj(is-6, testimony-3)
prep_against(testimony-3, you-5)
root(ROOT-0, is-6)
poss(lips-10, your-8)
amod(lips-10, own-9)
prep_from(is-6, lips-10)
appos(lips-10, George-12)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD heard)
        (S
          (NP (PRP you))
          (VP (VBG talking)
            (PP (TO to)
              (NP (PRP$ my) (NN father))))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADJP (JJ aware)
          (PP (IN of)
            (NP
              (NP (DT a) (NN tone))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD did) (RB not)
                    (VP (VB like))))))))))
    (. .)))

nsubj(heard-2, I-1)
nsubj(aware-11, I-1)
root(ROOT-0, heard-2)
nsubj(talking-4, you-3)
dep(heard-2, talking-4)
poss(father-7, my-6)
prep_to(talking-4, father-7)
cop(aware-11, was-10)
conj_and(heard-2, aware-11)
det(tone-14, a-13)
prep_of(aware-11, tone-14)
nsubj(like-18, I-15)
aux(like-18, did-16)
neg(like-18, not-17)
rcmod(tone-14, like-18)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD listened)
        (S
          (ADJP (RBR more) (JJ attentively))))
      (, ,)
      (CC and)
      (VP (VBD became)
        (ADJP (VBN convinced)
          (SBAR (IN that)
            (S
              (NP
                (NP (PRP$ your) (NNS ways))
                (PP (IN of)
                  (NP (NN thinking))))
              (VP (VBD had)
                (VP (VBN deteriorated))))))))
    (. .)))

nsubj(listened-2, I-1)
nsubj(became-7, I-1)
root(ROOT-0, listened-2)
advmod(attentively-4, more-3)
acomp(listened-2, attentively-4)
conj_and(listened-2, became-7)
acomp(became-7, convinced-8)
mark(deteriorated-15, that-9)
poss(ways-11, your-10)
nsubj(deteriorated-15, ways-11)
prep_of(ways-11, thinking-13)
aux(deteriorated-15, had-14)
ccomp(convinced-8, deteriorated-15)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD seemed)
      (SBAR
        (S
          (NP
            (NP (RB not) (DT a) (JJ remnant) (NN left))
            (PP (IN of)
              (NP
                (NP (DT the) (NN honor))
                (SBAR
                  (S
                    (NP (PRP I))
                    (ADVP (RB then))
                    (VP (VBD thought)))))))
          (VP (VBD characterized)
            (NP (PRP you))))))
    (. !) ('' '')))

expl(seemed-2, There-1)
root(ROOT-0, seemed-2)
neg(left-6, not-3)
det(left-6, a-4)
amod(left-6, remnant-5)
nsubj(characterized-13, left-6)
det(honor-9, the-8)
prep_of(left-6, honor-9)
nsubj(thought-12, I-10)
advmod(thought-12, then-11)
rcmod(honor-9, thought-12)
ccomp(seemed-2, characterized-13)
dobj(characterized-13, you-14)

(ROOT
  (S (`` ``)
    (ADVP (WRB Why))
    (, ,)
    (ADVP (RB certainly))
    (, ,)
    (PP (IN as)
      (NP (DT an) (JJ honest) (NN man)))
    (, ,)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB talk)
        (NP (NN religion))
        (PP (IN like)
          (NP
            (NP (PRP$ your) (NN friend))
            (NP (DT the) (NN farmer))))))
    (. !) ('' '')))

advmod(talk-14, Why-2)
advmod(talk-14, certainly-4)
det(man-9, an-7)
amod(man-9, honest-8)
prep_as(talk-14, man-9)
nsubj(talk-14, I-11)
aux(talk-14, can-12)
neg(talk-14, not-13)
root(ROOT-0, talk-14)
dobj(talk-14, religion-15)
poss(friend-18, your-17)
prep_like(talk-14, friend-18)
det(farmer-20, the-19)
dep(friend-18, farmer-20)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB mean)
          (SBAR (IN that)
            (S
              (NP (NNP Andrew) (NNP Ingram))
              (VP (VBZ is) (RB not)
                (NP (DT an) (JJ honest) (NN man))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(mean-4, you-3)
ccomp(Do-2, mean-4)
mark(man-12, that-5)
nn(Ingram-7, Andrew-6)
nsubj(man-12, Ingram-7)
cop(man-12, is-8)
neg(man-12, not-9)
det(man-12, an-10)
amod(man-12, honest-11)
ccomp(mean-4, man-12)

(ROOT
  (FRAG
    (NP (NNP rejoined) (NNP Alexa))
    (, ,)
    (PP (IN with)
      (NP (DT some) (NN heat)))
    (. .)))

nn(Alexa-2, rejoined-1)
root(ROOT-0, Alexa-2)
det(heat-6, some-5)
prep_with(Alexa-2, heat-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP mean)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (NP (DT an) (JJ honest) (NN man))))))
    (. .) ('' '')))

nsubj(mean-3, I-2)
root(ROOT-0, mean-3)
mark(man-9, that-4)
nsubj(man-9, I-5)
cop(man-9, am-6)
det(man-9, an-7)
amod(man-9, honest-8)
ccomp(mean-3, man-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ doubtful)
        (PP (IN of)
          (NP (PRP you)))))
    (. .) ('' '')))

nsubj(doubtful-4, I-2)
cop(doubtful-4, am-3)
root(ROOT-0, doubtful-4)
prep_of(doubtful-4, you-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB tell)
        (NP (DT the) (NN quarter) (NN whence))
        (SBAR (IN that)
          (S
            (NP (NN doubt))
            (VP (VBD was)
              (VP (VBN blown)))))))
    (. !) ('' '')))

nsubj(tell-4, I-2)
aux(tell-4, can-3)
root(ROOT-0, tell-4)
det(whence-7, the-5)
nn(whence-7, quarter-6)
dobj(tell-4, whence-7)
mark(blown-11, that-8)
nsubjpass(blown-11, doubt-9)
auxpass(blown-11, was-10)
ccomp(tell-4, blown-11)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (PP (IN of)
          (NP (JJR greater) (NN consequence)))
        (S
          (VP (TO to)
            (VP (VB blow)
              (NP (PRP it))
              (ADVP (RB away)))))))
    (. !)))

nsubj(be-4, It-2)
nsubj(blow-9, It-2)
aux(be-4, would-3)
root(ROOT-0, be-4)
amod(consequence-7, greater-6)
prep_of(be-4, consequence-7)
aux(blow-9, to-8)
xcomp(be-4, blow-9)
dobj(blow-9, it-10)
advmod(blow-9, away-11)

(ROOT
  (S
    (NP (NNP George) (NNP Crawford))
    (PRN (, ,)
      (SINV (VBP do)
        (NP (PRP you))))
    (VP (VBP believe)
      (S
        (NP (PRP yourself))
        (NP (DT an) (JJ honest) (NN man))))
    (. ?) ('' '')))

nn(Crawford-2, George-1)
nsubj(believe-6, Crawford-2)
parataxis(believe-6, do-4)
nsubj(do-4, you-5)
root(ROOT-0, believe-6)
nsubj(man-10, yourself-7)
det(man-10, an-8)
amod(man-10, honest-9)
xcomp(believe-6, man-10)

(ROOT
  (S (`` ``)
    (SBAR (IN As)
      (S
        (NP (NNS men))
        (VP (VBP go))))
    (, ,)
    (VP (VBZ yes))
    (. .) ('' '')))

mark(go-4, As-2)
nsubj(go-4, men-3)
advcl(yes-6, go-4)
root(ROOT-0, yes-6)

(ROOT
  (S (`` ``)
    (S (CC But)
      (ADVP (RB not) (RB as))
      (NP (NNS men))
      (VP (VBP go)))
    (, ,)
    (S
      (NP (NNP George)))
    (. ?)))

cc(go-6, But-2)
dep(as-4, not-3)
advmod(go-6, as-4)
nsubj(go-6, men-5)
root(ROOT-0, go-6)
parataxis(go-6, George-8)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP you))
        (VP (MD would)
          (VP (VB like)
            (S
              (VP (TO to)
                (VP (VB appear)
                  (PP (TO to)
                    (NP (DT the) (NN world)))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (NNS hearts))
                      (VP (VBP are)
                        (ADJP (RB as) (JJ open) (RB as))))))))))))
    (VP (VBZ faces))
    (. ?) ('' '')))

mark(like-4, As-1)
nsubj(like-4, you-2)
nsubj(appear-6, you-2)
aux(like-4, would-3)
csubj(faces-16, like-4)
aux(appear-6, to-5)
xcomp(like-4, appear-6)
det(world-9, the-8)
prep_to(appear-6, world-9)
advmod(open-14, when-10)
nsubj(open-14, hearts-11)
cop(open-14, are-12)
advmod(open-14, as-13)
advcl(appear-6, open-14)
advmod(open-14, as-15)
root(ROOT-0, faces-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (JJ silent)))
    (. .)))

nsubj(silent-3, He-1)
cop(silent-3, was-2)
root(ROOT-0, silent-3)

(ROOT
  (S (`` ``)
    (S
      (PP (IN Would)
        (NP (DT the) (NN way)))
      (NP (PRP you))
      (VP (VBP have)
        (VP (VBN made)
          (SBAR
            (S
              (NP (PRP$ your) (NN money))
              (VP (VBP stand)
                (NP
                  (NP (DT the) (NN scrutiny))
                  (PP (IN of)))))))))
    (: --) ('' '')
    (S
      (NP (PRP She))
      (VP
        (VP
          (VP (VBD had)
            (NP
              (NP (NNP Andrew))
              (PP (IN in)
                (NP (PRP$ her) (NN mind)))))
          (, ,)
          (CC and)
          (VP (VBD was)
            (PP (IN on)
              (NP
                (NP (DT the) (NN point))
                (PP (IN of)
                  (S
                    (VP (VBG saying) ('' '')
                      (NP (NNP _) (NNP Jesus) (NNP Christ) (NNP _)))))))))
        (, ,) ('' '')
        (CC but)
        (VP (VBD felt)
          (SBAR
            (S
              (NP (PRP she))
              (VP
                (VP (VBD had)
                  (NP (DT no) (NN right)))
                (, ,)
                (CC and)
                (VP (VBD hesitated))))))))
    (. .) ('' '')))

det(way-4, the-3)
prep_would(made-7, way-4)
nsubj(made-7, you-5)
aux(made-7, have-6)
root(ROOT-0, made-7)
poss(money-9, your-8)
nsubj(stand-10, money-9)
ccomp(made-7, stand-10)
det(scrutiny-12, the-11)
dobj(stand-10, scrutiny-12)
prep(scrutiny-12, of-13)
nsubj(had-17, She-16)
nsubj(was-24, She-16)
nsubj(felt-38, She-16)
parataxis(made-7, had-17)
dobj(had-17, Andrew-18)
poss(mind-21, her-20)
prep_in(Andrew-18, mind-21)
parataxis(made-7, was-24)
conj_and(had-17, was-24)
det(point-27, the-26)
prep_on(was-24, point-27)
prepc_of(point-27, saying-29)
nn(_-34, _-31)
nn(_-34, Jesus-32)
nn(_-34, Christ-33)
dobj(saying-29, _-34)
parataxis(made-7, felt-38)
conj_but(had-17, felt-38)
nsubj(had-40, she-39)
nsubj(hesitated-45, she-39)
ccomp(felt-38, had-40)
neg(right-42, no-41)
dobj(had-40, right-42)
ccomp(felt-38, hesitated-45)
conj_and(had-40, hesitated-45)

(ROOT
  (S (: --)
    (PP (IN Of))
    (NP (PRP$ our) (NN friend))
    (VP (VBZ Andrew))
    (. ?) ('' '')))

prep(Andrew-5, Of-2)
poss(friend-4, our-3)
nsubj(Andrew-5, friend-4)
root(ROOT-0, Andrew-5)

(ROOT
  (S
    (VP (VBN supplemented)
      (NP (NNP George))
      (, ,)
      (PP (IN with)
        (NP (DT a) (JJ spiteful) (NN laugh))))
    (. .)))

root(ROOT-0, supplemented-1)
dobj(supplemented-1, George-2)
det(laugh-7, a-5)
amod(laugh-7, spiteful-6)
prep_with(supplemented-1, laugh-7)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (RB only) (JJ honest) (NN mode))
      (PP (IN of)
        (S
          (VP (VBG making)
            (NP
              (NP (NN money))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBZ knows)))))))))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (NN strain))
          (PP (IN of)
            (NP (PRP$ his) (NNS muscles))))
        (: --)
        (NP (DT the) (NN farmer-way))))
    (. !)))

det(mode-5, The-2)
advmod(mode-5, only-3)
amod(mode-5, honest-4)
nsubj(strain-13, mode-5)
prepc_of(mode-5, making-7)
dobj(making-7, money-8)
nsubj(knows-10, he-9)
rcmod(money-8, knows-10)
cop(strain-13, is-11)
det(strain-13, the-12)
root(ROOT-0, strain-13)
poss(muscles-16, his-15)
prep_of(strain-13, muscles-16)
det(farmer-way-19, the-18)
dep(strain-13, farmer-way-19)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would) (RB n't)
      (VP (VB keep)
        (PRT (RP up))
        (NP (PRP$ his) (NN corn))
        (PP (IN for)
          (NP
            (NP (DT a) (JJR better) (NN market))
            (PRN (: --) (RB not)
              (NP (PRP he)))))))
    (. !) ('' '')))

nsubj(keep-4, He-1)
aux(keep-4, would-2)
neg(keep-4, n't-3)
root(ROOT-0, keep-4)
prt(keep-4, up-5)
poss(corn-7, his-6)
dobj(keep-4, corn-7)
det(market-11, a-9)
amod(market-11, better-10)
prep_for(keep-4, market-11)
dep(he-14, not-13)
dep(market-11, he-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (ADVP (RB so))
      (VP (VBZ happens)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBP know)
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (MD would) (RB not)))))))
          (: ;)
          (SBAR (IN for)
            (S
              (NP
                (NP (PRP he))
                (CC and)
                (NP (PRP$ my) (NN father)))
              (VP (VBD had)
                (NP
                  (NP (DT a) (NN dispute))
                  (PP (IN on)
                    (NP (DT that) (JJ very) (NN point))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD heard)
        (NP (PRP them))))
    (. .)))

nsubj(happens-4, It-2)
advmod(happens-4, so-3)
root(ROOT-0, happens-4)
mark(know-7, that-5)
nsubj(know-7, I-6)
advcl(happens-4, know-7)
nsubj(would-9, he-8)
ccomp(know-7, would-9)
neg(would-9, not-10)
mark(had-17, for-12)
nsubj(had-17, he-13)
poss(father-16, my-15)
conj_and(he-13, father-16)
nsubj(had-17, father-16)
dep(know-7, had-17)
det(dispute-19, a-18)
dobj(had-17, dispute-19)
det(point-23, that-21)
amod(point-23, very-22)
prep_on(dispute-19, point-23)
nsubj(heard-27, I-26)
conj_and(happens-4, heard-27)
dobj(heard-27, them-28)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD said)
      (SBAR
        (S
          (NP (JJ poor) (NNS people))
          (VP (VBD were) (RB not)
            (S
              (VP (TO to)
                (VP (VB go)
                  (ADJP (JJ hungry))
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (MD might)
                        (VP (VB get)
                          (ADJP (JJ rich)))))))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
amod(people-4, poor-3)
nsubj(were-5, people-4)
nsubj(go-8, people-4)
ccomp(said-2, were-5)
neg(were-5, not-6)
aux(go-8, to-7)
xcomp(were-5, go-8)
acomp(go-8, hungry-9)
mark(rich-14, that-10)
nsubj(rich-14, he-11)
aux(rich-14, might-12)
dep(rich-14, get-13)
ccomp(go-8, rich-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was) (RB not)
        (VP (VBN sent)
          (PP (IN into)
            (NP (DT the) (NN world)))
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (NN money))))))))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (VBD said)))
      (, ,))
    (CC but)
    (S
      (VP (TO to)
        (VP (VB grow)
          (NP (NN corn)))))
    (. .)))

nsubjpass(sent-4, He-1)
nsubj(make-9, He-1)
nsubj(grow-17, He-1)
auxpass(sent-4, was-2)
neg(sent-4, not-3)
root(ROOT-0, sent-4)
det(world-7, the-6)
prep_into(sent-4, world-7)
aux(make-9, to-8)
xcomp(sent-4, make-9)
dobj(make-9, money-10)
nsubj(said-13, he-12)
dep(sent-4, said-13)
aux(grow-17, to-16)
conj_but(sent-4, grow-17)
dobj(grow-17, corn-18)

(ROOT
  (S
    (S
      (NP (DT The) (NN corn))
      (VP (VBD was)
        (VP (VBN grown))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP
        (VP (MD could)
          (VP (VB get)
            (ADVP (RB enough)
              (PP (IN for)
                (NP (PRP it))
                (ADVP (RB now))))
            (S
              (VP (TO to)
                (VP (VB live)
                  (PP (IN by)))))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (NP
            (NP (DT no) (NN right))
            (, ,)
            (CC and)
            (NP (DT no) (NN desire)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (NP (JJR more))))))))
        (: --)
        (CC and)
        (VP (MD would) (RB not)
          (VP (VB keep)
            (NP (PRP it))
            (PRT (RP up))))))
    (. !)))

det(corn-2, The-1)
nsubjpass(grown-4, corn-2)
auxpass(grown-4, was-3)
root(ROOT-0, grown-4)
nsubj(get-9, he-7)
nsubj(live-15, he-7)
nsubj(had-19, he-7)
nsubj(keep-33, he-7)
aux(get-9, could-8)
conj_and(grown-4, get-9)
advmod(get-9, enough-10)
prep_for(enough-10, it-12)
advmod(enough-10, now-13)
aux(live-15, to-14)
xcomp(get-9, live-15)
prep(live-15, by-16)
conj_and(grown-4, had-19)
conj_and(get-9, had-19)
neg(right-21, no-20)
dobj(had-19, right-21)
neg(desire-25, no-24)
dobj(had-19, desire-25)
conj_and(right-21, desire-25)
aux(get-27, to-26)
vmod(desire-25, get-27)
dobj(get-27, more-28)
aux(keep-33, would-31)
neg(keep-33, not-32)
conj_and(grown-4, keep-33)
conj_and(get-9, keep-33)
dobj(keep-33, it-34)
prt(keep-33, up-35)

(ROOT
  (S
    (NP (DT The) (NN land))
    (VP
      (VP (VBD was)
        (SBAR
          (S
            (S
              (NP (NNP God))
              (VP
                (VP (VBZ 's))
                (, ,)
                (VP (RB not)
                  (NP (PRP$ his)))))
            (, ,)
            (CC and)
            (S
              (NP (DT the) (JJ poor))
              (VP (VBD were)
                (NP
                  (NP (NNP God) (POS 's))
                  (NNS children)))))))
      (, ,)
      (CC and)
      (VP (VBD had)
        (NP (PRP$ their) (NNS rights))
        (PP (IN from)
          (NP (PRP him)))))
    (. !)))

det(land-2, The-1)
nsubj(was-3, land-2)
nsubj(had-19, land-2)
root(ROOT-0, was-3)
nsubj('s-5, God-4)
dep(was-3, 's-5)
neg(his-8, not-7)
dep('s-5, his-8)
det(poor-12, the-11)
nsubj(children-16, poor-12)
cop(children-16, were-13)
poss(children-16, God-14)
dep(was-3, children-16)
conj_and('s-5, children-16)
conj_and(was-3, had-19)
poss(rights-21, their-20)
dobj(had-19, rights-21)
prep_from(had-19, him-23)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (VP (VBN sent)
        (S
          (VP (TO to)
            (VP (VB grow)
              (NP (NN corn))
              (PP (IN for)
                (NP (PRP them))))))))
    (. !) ('' '')))

nsubjpass(sent-3, He-1)
nsubj(grow-5, He-1)
auxpass(sent-3, was-2)
root(ROOT-0, sent-3)
aux(grow-5, to-4)
xcomp(sent-3, grow-5)
dobj(grow-5, corn-6)
prep_for(grow-5, them-8)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHNP (WP what))
    (SQ (VBD did)
      (NP (PRP$ your) (NN father))
      (VP (VB say)
        (PP (TO to)
          (NP (DT that) (NN wisdom)))))
    (. ?) ('' '')))

cc(say-7, And-2)
dobj(say-7, what-3)
aux(say-7, did-4)
poss(father-6, your-5)
nsubj(say-7, father-6)
root(ROOT-0, say-7)
det(wisdom-10, that-9)
prep_to(say-7, wisdom-10)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is)
      (NP (DT no) (NN matter)))
    (. .)))

nsubj(matter-5, That-2)
cop(matter-5, is-3)
neg(matter-5, no-4)
root(ROOT-0, matter-5)

(ROOT
  (SINV (CC Nor)
    (VBP do)
    (NP (PRP I))
    (VP (VB profess)
      (S
        (VP (TO to)
          (VP (VB understand)
            (NP (NNP Mr.) (NNP Ingram))))))
    (. .)))

cc(profess-4, Nor-1)
aux(profess-4, do-2)
nsubj(profess-4, I-3)
nsubj(understand-6, I-3)
root(ROOT-0, profess-4)
aux(understand-6, to-5)
xcomp(profess-4, understand-6)
nn(Ingram-8, Mr.-7)
dobj(understand-6, Ingram-8)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB only))
    (VP (VBP know)
      (PRN (, ,) ('' '')
        (SINV
          (VP (VBD added))
          (NP
            (NP (NNP Alexa))
            (, ,)
            (PP (IN with)
              (NP (DT a) (JJ little) (NN laugh)))))
        (, ,) (`` ``))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBZ is)
            (ADJP (JJ consistent))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP he))
                (VP (VBZ has)
                  (VP (VBN puzzled)
                    (NP (PRP me))
                    (NP (PDT all) (PRP$ my) (NN life))))))))))
    (. .)))

nsubj(know-3, I-1)
advmod(know-3, only-2)
root(ROOT-0, know-3)
parataxis(know-3, added-6)
nsubj(added-6, Alexa-7)
det(laugh-12, a-10)
amod(laugh-12, little-11)
prep_with(Alexa-7, laugh-12)
mark(consistent-18, that-15)
nsubj(consistent-18, he-16)
cop(consistent-18, is-17)
ccomp(know-3, consistent-18)
mark(puzzled-23, for-20)
nsubj(puzzled-23, he-21)
aux(puzzled-23, has-22)
advcl(consistent-18, puzzled-23)
iobj(puzzled-23, me-24)
predet(life-27, all-25)
poss(life-27, my-26)
dobj(puzzled-23, life-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can) (, ,)
      (ADVP (RB however))
      (, ,)
      (VP (VB see)
        (NP
          (NP (DT a) (JJ certain) (NN nobility))
          (PP (IN in)
            (NP (PRP him)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ sets)
                (NP (PRP him))
                (PRT (RP apart))
                (PP (IN from)
                  (NP (JJ other) (NNS men)))))))))
    (. !) ('' '')))

nsubj(see-6, I-1)
aux(see-6, can-2)
advmod(see-6, however-4)
root(ROOT-0, see-6)
det(nobility-9, a-7)
amod(nobility-9, certain-8)
dobj(see-6, nobility-9)
nsubj(sets-13, nobility-9)
prep_in(nobility-9, him-11)
rcmod(nobility-9, sets-13)
dobj(sets-13, him-14)
amod(men-18, other-17)
prep_apart_from(sets-13, men-18)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB see)
        (SBAR (IN that)
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBD left)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD was)
                    (ADVP (RB needlessly))
                    (ADJP (JJ modest))))))))))
    (. !)))

cc(see-5, And-2)
nsubj(see-5, I-3)
aux(see-5, can-4)
root(ROOT-0, see-5)
mark(left-9, that-6)
advmod(left-9, when-7)
nsubj(left-9, I-8)
ccomp(see-5, left-9)
nsubj(modest-13, I-10)
cop(modest-13, was-11)
advmod(modest-13, needlessly-12)
ccomp(left-9, modest-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (S
        (VP (VBG _)
          (S
            (NP (PRP$ my) (JJ _) (NN position))
            (ADJP (RB too) (JJ humble))))))
    (. !) ('' '')))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
xcomp(thought-2, _-3)
poss(position-6, my-4)
amod(position-6, _-5)
nsubj(humble-8, position-6)
advmod(humble-8, too-7)
xcomp(_-3, humble-8)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP am)
      (NP (PRP I))
      (S
        (VP (TO to)
          (VP (VB understand)
            (PP (IN by)
              (NP (DT that)))))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, am-3)
nsubj(What-2, I-4)
aux(understand-6, to-5)
vmod(What-2, understand-6)
prep_by(understand-6, that-8)

(ROOT
  (S (`` ``)
    (X (WP What))
    (NP (PRP you))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP mean)))))
    (. .) ('' '')))

dep(think-4, What-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj(mean-6, I-5)
ccomp(think-4, mean-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wish)
      (NP (PRP you))
      (NP
        (NP (DT a) (NN good-afternoon))
        (, ,)
        (NP (NNP Mr.) (NNP Crawford))))
    (. !) ('' '')))

nsubj(wish-3, I-2)
root(ROOT-0, wish-3)
iobj(wish-3, you-4)
det(good-afternoon-6, a-5)
dobj(wish-3, good-afternoon-6)
nn(Crawford-9, Mr.-8)
appos(good-afternoon-6, Crawford-9)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP
      (VP (VBD rose))
      (CC and)
      (VP (VBD left)
        (NP (PRP him))))
    (. .)))

nsubj(rose-2, Alexa-1)
nsubj(left-4, Alexa-1)
root(ROOT-0, rose-2)
conj_and(rose-2, left-4)
dobj(left-4, him-5)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD had)
      (ADVP (RB indeed))
      (VP (VBN grown)
        (NP (NN coarser))))
    (. !)))

nsubj(grown-4, George-1)
aux(grown-4, had-2)
advmod(grown-4, indeed-3)
root(ROOT-0, grown-4)
dobj(grown-4, coarser-5)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD turned)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP he))
            (VP
              (VP (VBD stood)
                (PP (IN with)
                  (NP (PRP$ his) (NNS hands)))
                (PP (IN in)
                  (NP (PRP$ his) (NNS pockets))))
              (, ,)
              (CC and)
              (VP (VBD looked)
                (SBAR (IN after)
                  (S
                    (NP (PRP her))
                    (: ;)
                    (VP
                      (VP
                        (ADVP (RB then))
                        (VBD smiled)
                        (PP (TO to)
                          (NP
                            (NP (PRP himself))
                            (NP (DT a) (JJ nasty) (NN smile)))))
                      (, ,)
                      (CC and)
                      (VP (VBD said)))))))))))
    (: :) (`` ``)
    (S
      (ADVP (IN At) (JJS least))
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN made)
          (S
            (NP (PRP her))
            (ADJP (JJ angry))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (NP (NN something))))
    (. !)))

nsubj(turned-2, He-1)
root(ROOT-0, turned-2)
advmod(stood-5, where-3)
nsubj(stood-5, he-4)
nsubj(looked-14, he-4)
advcl(turned-2, stood-5)
poss(hands-8, his-7)
prep_with(stood-5, hands-8)
poss(pockets-11, his-10)
prep_in(stood-5, pockets-11)
advcl(turned-2, looked-14)
conj_and(stood-5, looked-14)
mark(smiled-19, after-15)
nsubj(smiled-19, her-16)
nsubj(said-27, her-16)
advmod(smiled-19, then-18)
advcl(looked-14, smiled-19)
prep_to(smiled-19, himself-21)
det(smile-24, a-22)
amod(smile-24, nasty-23)
dep(himself-21, smile-24)
advcl(looked-14, said-27)
conj_and(smiled-19, said-27)
advmod(made-34, At-30)
pobj(At-30, least-31)
nsubj(made-34, I-32)
aux(made-34, have-33)
ccomp(turned-2, made-34)
conj_and(turned-2, made-34)
nsubj(angry-36, her-35)
xcomp(made-34, angry-36)
nsubj(something-41, that-39)
cop(something-41, 's-40)
conj_and(turned-2, something-41)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ has)
        (NP
          (NP (DT a) (NN fellow))
          (PP (IN like)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (TO to)
                  (VP (VB give)
                    (NP (PRP her))))))))))
    (. ?)))

nsubj(has-2, What-1)
root(ROOT-0, has-2)
det(fellow-4, a-3)
dobj(has-2, fellow-4)
nsubj(give-8, that-6)
aux(give-8, to-7)
prepc_like(fellow-4, give-8)
dobj(give-8, her-9)

(ROOT
  (FRAG
    (INTJ (UH Poet))
    (, ,)
    (ADVP (RB indeed))
    (. !)))

discourse(indeed-3, Poet-1)
root(ROOT-0, indeed-3)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ 's)
          (NP (DT that)))))
    (. !)))

nsubj(that-3, What-1)
cop(that-3, 's-2)
root(ROOT-0, that-3)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ 's) (RB not)
      (ADVP (RB even))
      (NP (DT the) (JJ rustic) (NN gentleman)))
    (. !)))

nsubj(gentleman-7, He-1)
cop(gentleman-7, 's-2)
neg(gentleman-7, not-3)
advmod(gentleman-7, even-4)
det(gentleman-7, the-5)
amod(gentleman-7, rustic-6)
root(ROOT-0, gentleman-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ 's)
      (ADJP (RB downright) (JJ vulgar)))
    (. !)))

nsubj(vulgar-4, He-1)
cop(vulgar-4, 's-2)
advmod(vulgar-4, downright-3)
root(ROOT-0, vulgar-4)

(ROOT
  (NP (: --)
    (NP
      (NP (DT a) (NN clod-hopper))
      (VP (VBN born)
        (CC and)
        (VBN bred)))
    (. !)))

det(clod-hopper-3, a-2)
root(ROOT-0, clod-hopper-3)
vmod(clod-hopper-3, born-4)
vmod(clod-hopper-3, bred-6)
conj_and(born-4, bred-6)

(ROOT
  (S (CC But)
    (S
      (NP (DT the) (NN lease))
      (PRN (, ,)
        (S
          (NP (PRP I))
          (VP (VBP understand)))
        (, ,))
      (VP (MD will)
        (ADVP (RB soon))
        (VP (VB be)
          (ADJP (RP out)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Potlurg))
      (VP (MD will)
        (ADVP (RB never))
        (VP (VB let)
          (NP
            (NP (NNP _))
            (SBAR
              (S
                (NP (PRP him))
                (ADVP (RB _))
                (VP (VBP have)
                  (NP (PRP it)))))))))
    (. !)))

det(lease-3, the-2)
nsubj(out-11, lease-3)
nsubj(understand-6, I-5)
parataxis(out-11, understand-6)
aux(out-11, will-8)
advmod(out-11, soon-9)
cop(out-11, be-10)
root(ROOT-0, out-11)
nsubj(let-17, Potlurg-14)
aux(let-17, will-15)
neg(let-17, never-16)
conj_and(out-11, let-17)
dobj(let-17, _-18)
nsubj(have-21, him-19)
advmod(have-21, _-20)
rcmod(_-18, have-21)
dobj(have-21, it-22)

(ROOT
  (S
    (NP (NNP _) (NNP I) (NNP _))
    (VP (MD will)
      (VP (VB see)
        (PP (TO to)
          (NP (DT that)))))
    (. !)))

nn(_-3, _-1)
nn(_-3, I-2)
nsubj(see-5, _-3)
aux(see-5, will-4)
root(ROOT-0, see-5)
prep_to(see-5, that-7)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP (VBZ hates)
      (NP (DT the) (VBG canting) (NN scoundrel)))
    (. !)))

det(laird-2, The-1)
nsubj(hates-3, laird-2)
root(ROOT-0, hates-3)
det(scoundrel-6, the-4)
amod(scoundrel-6, canting-5)
dobj(hates-3, scoundrel-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would) (RB rather)
      (VP (VB pay)
        (S
          (NP (PRP him))
          (VP (JJ double)
            (NP (DT the) (NN rent))
            (NP (PRP myself))))))
    (. !) ('' '')))

nsubj(pay-4, I-1)
aux(pay-4, would-2)
advmod(pay-4, rather-3)
root(ROOT-0, pay-4)
nsubj(double-6, him-5)
ccomp(pay-4, double-6)
det(rent-8, the-7)
iobj(double-6, rent-8)
dobj(double-6, myself-9)

(ROOT
  (S
    (NP (PRP$ His) (NN behavior))
    (ADVP (RB now))
    (VP (VBD did) (RB not)
      (VP (VB put)
        (NP
          (NP (NNP Andrew) (POS 's))
          (NNS manners))
        (PP (IN in)
          (NP (DT the) (NN shade)))))
    (. !)))

poss(behavior-2, His-1)
nsubj(put-6, behavior-2)
advmod(put-6, now-3)
aux(put-6, did-4)
neg(put-6, not-5)
root(ROOT-0, put-6)
poss(manners-9, Andrew-7)
dobj(put-6, manners-9)
det(shade-12, the-11)
prep_in(put-6, shade-12)

(ROOT
  (S
    (SBAR (IN Though)
      (S
        (NP (PRP he))
        (VP
          (VP
            (ADVP (RB never))
            (VBD said)
            (NP (DT a) (NN word)
              (S
                (VP (TO to)
                  (VP (VB flatter)
                    (NP (NNP Alexa)))))))
          (, ,)
          (VP (VBD spoke)
            (ADVP (RB often))
            (PP (IN in)
              (NP
                (NP (DT a) (NN way))
                (SBAR
                  (S
                    (NP (PRP she))
                    (VP (VBD did) (RB not)
                      (ADVP (IN at) (DT all))
                      (VP (VB like))))))))
          (, ,)
          (ADVP (RB persistently))
          (VP (VBD refused)
            (S
              (VP (TO to)
                (VP (VB enter)
                  (PP (IN into)
                    (NP
                      (NP (NN argument))
                      (PP (IN with)
                        (NP (PRP her)))))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (S
                        (NP
                          (NP (JJS most))
                          (SBAR
                            (S
                              (NP (PRP she))
                              (VP (VBD desired)
                                (NP
                                  (NP (PRP it))
                                  (, ,) (RB yet)
                                  (NP (PRP$ his)
                                    (NP
                                      (NP (DT every) (NN tone))
                                      (, ,)
                                      (NP (DT every) (NN movement)))))
                                (PP (IN toward)
                                  (NP (PRP her)))))))
                        (VP (VBD was)
                          (ADJP (JJ full)
                            (PP (IN of)
                              (NP (NN respect))))))
                      (CC And)
                      (S
                        (ADVP (RB however))
                        (NP (PRP she))
                        (VP (VBD strove)
                          (PP (IN against)
                            (NP (DT the) (NN idea))))))))))))))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (VBD felt)
        (S
          (NP (PRP him))
          (ADJP
            (NP (PRP her))
            (JJ superior))))
      (, ,)
      (CC and)
      (VP (VBD had) (RB indeed)
        (VP (VBN begun)
          (S
            (VP (TO to)
              (VP (VB wish)
                (SBAR (IN that)
                  (S
                    (NP (PRP she))
                    (VP (VBD had)
                      (ADVP (RB never))
                      (VP (VBN shown)
                        (NP (PRP herself))
                        (PP (IN at)
                          (NP (DT a) (NN disadvantage)))
                        (PP (IN by)
                          (NP
                            (NP (DT the) (NN assumption))
                            (PP (IN of)
                              (NP (NN superiority)))))))))))))))
    (. .)))

mark(said-4, Though-1)
nsubj(said-4, he-2)
neg(said-4, never-3)
advcl(felt-59, said-4)
det(word-6, a-5)
dobj(said-4, word-6)
aux(flatter-8, to-7)
vmod(word-6, flatter-8)
dobj(flatter-8, Alexa-9)
dep(said-4, spoke-11)
advmod(spoke-11, often-12)
det(way-15, a-14)
prep_in(spoke-11, way-15)
nsubj(like-21, she-16)
aux(like-21, did-17)
neg(like-21, not-18)
advmod(like-21, at-19)
pobj(at-19, all-20)
rcmod(way-15, like-21)
advmod(refused-24, persistently-23)
dep(said-4, refused-24)
aux(enter-26, to-25)
xcomp(refused-24, enter-26)
prep_into(enter-26, argument-28)
prep_with(argument-28, her-30)
advmod(full-47, when-31)
nsubj(full-47, most-32)
nsubj(desired-34, she-33)
rcmod(most-32, desired-34)
dobj(desired-34, it-35)
advmod(it-35, yet-37)
poss(tone-40, his-38)
det(tone-40, every-39)
dep(it-35, tone-40)
det(movement-43, every-42)
appos(tone-40, movement-43)
prep_toward(desired-34, her-45)
cop(full-47, was-46)
advcl(enter-26, full-47)
prep_of(full-47, respect-49)
advmod(strove-53, however-51)
nsubj(strove-53, she-52)
advcl(enter-26, strove-53)
conj_and(full-47, strove-53)
det(idea-56, the-55)
prep_against(strove-53, idea-56)
nsubj(felt-59, she-58)
nsubj(begun-67, she-58)
nsubj(wish-69, she-58)
root(ROOT-0, felt-59)
nsubj(superior-62, him-60)
npadvmod(superior-62, her-61)
xcomp(felt-59, superior-62)
aux(begun-67, had-65)
advmod(begun-67, indeed-66)
conj_and(felt-59, begun-67)
aux(wish-69, to-68)
xcomp(begun-67, wish-69)
mark(shown-74, that-70)
nsubj(shown-74, she-71)
aux(shown-74, had-72)
neg(shown-74, never-73)
ccomp(wish-69, shown-74)
dobj(shown-74, herself-75)
det(disadvantage-78, a-77)
prep_at(shown-74, disadvantage-78)
det(assumption-81, the-80)
prep_by(shown-74, assumption-81)
prep_of(assumption-81, superiority-83)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ pleasant)
          (S
            (VP (TO to)
              (VP (VB know)
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (VP (VBZ pained)
                      (S
                        (NP (PRP him))
                        (VP (TO to)
                          (VP (VB disapprove)
                            (PP (IN of)
                              (NP (PRP her)))))))))))))))
    (. !)))

nsubj(pleasant-4, It-1)
nsubj(know-6, It-1)
aux(pleasant-4, would-2)
cop(pleasant-4, be-3)
root(ROOT-0, pleasant-4)
aux(know-6, to-5)
xcomp(pleasant-4, know-6)
mark(pained-9, that-7)
nsubj(pained-9, it-8)
ccomp(know-6, pained-9)
dobj(pained-9, him-10)
nsubj(disapprove-12, him-10)
aux(disapprove-12, to-11)
xcomp(pained-9, disapprove-12)
prep_of(disapprove-12, her-14)

(ROOT
  (S (IN For)
    (NP (PRP she))
    (VP
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB feel)
              (NP (DT that))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (PRP she))
                  (VP (VBN disapproved)
                    (PP (IN of)
                      (NP (NNP George))))))))))
      (, ,)
      (CC and)
      (VP (MD could) (RB not)
        (VP (VB like)
          (NP (PRP him))
          (, ,)
          (SBAR (IN so)
            (S
              (NP (DT the) (JJ young) (NN farmer))
              (VP (VBN disapproved)
                (PP (IN of)
                  (NP (PRP her))))))))
      (, ,)
      (CC and)
      (VP (MD could) (RB not)
        (VP (VB like)
          (NP (PRP her)))))
    (. .)))

dep(began-3, For-1)
nsubj(began-3, she-2)
nsubj(feel-5, she-2)
nsubj(like-17, she-2)
nsubj(like-31, she-2)
root(ROOT-0, began-3)
aux(feel-5, to-4)
xcomp(began-3, feel-5)
dobj(feel-5, that-6)
mark(disapproved-10, as-8)
nsubj(disapproved-10, she-9)
advcl(feel-5, disapproved-10)
prep_of(disapproved-10, George-12)
aux(like-17, could-15)
neg(like-17, not-16)
conj_and(began-3, like-17)
dobj(like-17, him-18)
mark(disapproved-24, so-20)
det(farmer-23, the-21)
amod(farmer-23, young-22)
nsubj(disapproved-24, farmer-23)
advcl(like-17, disapproved-24)
prep_of(disapproved-24, her-26)
aux(like-31, could-29)
neg(like-31, not-30)
conj_and(began-3, like-31)
dobj(like-31, her-32)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a)
        (UCP
          (ADJP (JJ new))
          (CC and)
          (PP (IN by)
            (NP (DT no) (NNS means))))
        (NN agreeable) (NN thought)))
    (. .)))

nsubj(thought-10, It-1)
cop(thought-10, was-2)
det(thought-10, a-3)
amod(thought-10, new-4)
conj_and(new-4, by-6)
amod(thought-10, by-6)
neg(means-8, no-7)
pobj(by-6, means-8)
nn(thought-10, agreeable-9)
root(ROOT-0, thought-10)

(ROOT
  (S
    (S
      (NP (NNP Andrew))
      (VP (VBD delighted)
        (PP (IN in)
          (NP (JJ beautiful) (NNS things)))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD did) (RB not)
        (VP (VB see)
          (ADJP (NN anything) (JJ beautiful))
          (PP (IN in)
            (NP (PRP her))))))
    (. !)))

nsubj(delighted-2, Andrew-1)
root(ROOT-0, delighted-2)
amod(things-5, beautiful-4)
prep_in(delighted-2, things-5)
nsubj(see-10, he-7)
aux(see-10, did-8)
neg(see-10, not-9)
parataxis(delighted-2, see-10)
npadvmod(beautiful-12, anything-11)
acomp(see-10, beautiful-12)
prep_in(see-10, her-14)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD was) (RB not)
        (VP (VBN conceited))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD knew)
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD was)
                (ADJP (JJ handsome))))))
        (, ,)
        (CC and)
        (VP (VBD knew)
          (ADVP (RB also))
          (SBAR (IN that)
            (S
              (NP (NNP Andrew))
              (VP (MD would)
                (ADVP (RB never))
                (VP (VB feel)
                  (PP
                    (ADVP
                      (NP (CD one) (NNS heart-throb))
                      (RBR more))
                    (IN because) (IN of)
                    (NP
                      (NP (DT any) (JJ such) (NN beauty))
                      (PP (IN as)
                        (NP (NNS hers))))))))))))
    (. .)))

nsubjpass(conceited-4, Alexa-1)
auxpass(conceited-4, was-2)
neg(conceited-4, not-3)
root(ROOT-0, conceited-4)
nsubj(knew-8, she-7)
nsubj(knew-14, she-7)
conj_but(conceited-4, knew-8)
nsubj(handsome-11, she-9)
cop(handsome-11, was-10)
ccomp(knew-8, handsome-11)
conj_but(conceited-4, knew-14)
conj_and(knew-8, knew-14)
advmod(knew-14, also-15)
mark(feel-20, that-16)
nsubj(feel-20, Andrew-17)
aux(feel-20, would-18)
neg(feel-20, never-19)
ccomp(knew-14, feel-20)
num(heart-throb-22, one-21)
npadvmod(more-23, heart-throb-22)
advmod(feel-20, more-23)
det(beauty-28, any-26)
amod(beauty-28, such-27)
prep_because_of(feel-20, beauty-28)
prep_as(beauty-28, hers-30)

(ROOT
  (SINV (VBD Had)
    (NP (PRP he))
    (RB not)
    (VP
      (ADVP (RB as) (RB good) (RB as))
      (VBD told)
      (NP
        (NP (PRP her))
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBD was)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN dead))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (MD would) (RB not)
                          (VP (VB come)
                            (FRAG
                              (ADJP (JJ alive) (. !)))))))))))))))))

aux(told-7, Had-1)
nsubj(told-7, he-2)
dep(told-7, not-3)
advmod(as-6, as-4)
advmod(as-6, good-5)
advmod(told-7, as-6)
root(ROOT-0, told-7)
dobj(told-7, her-8)
nsubj(one-11, she-9)
cop(one-11, was-10)
rcmod(her-8, one-11)
det(dead-14, the-13)
prep_of(one-11, dead-14)
nsubj(come-18, dead-14)
aux(come-18, would-16)
neg(come-18, not-17)
rcmod(dead-14, come-18)
dep(come-18, alive-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (NP (NN something)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN loved)
                  (PP (IN by)
                    (NP
                      (NP (DT a) (NN man))
                      (PP (IN like)
                        (NP (DT that))))))))))))
    (. !)))

nsubj(something-4, It-1)
aux(something-4, would-2)
cop(something-4, be-3)
root(ROOT-0, something-4)
aux(loved-7, to-5)
auxpass(loved-7, be-6)
vmod(something-4, loved-7)
det(man-10, a-9)
agent(loved-7, man-10)
prep_like(man-10, that-12)

(ROOT
  (S (CC But)
    (NP (NNP Alexa))
    (VP (VBD was)
      (ADJP (RB too) (JJ maidenly)
        (S
          (VP (TO to)
            (VP (VB think)
              (PP (IN of)
                (S
                  (VP (VBG making)
                    (S
                      (S
                        (NP (DT any) (NN man))
                        (VP (VBP love)
                          (NP (PRP her))))
                      (: --)
                      (CC and)
                      (S
                        (SBAR (RB even) (IN if)
                          (S
                            (NP (PRP he))
                            (VP (VBD loved)
                              (NP (PRP her)))))
                        (NP (PRP she))
                        (VP (MD could) (RB not)
                          (VP (VB marry)
                            (NP
                              (NP (DT a) (NN man))
                              (PP (IN in)
                                (NP
                                  (NP (NNP Andrew) (POS 's))
                                  (NN position))))))))))))))))
    (. !)))

cc(maidenly-5, But-1)
nsubj(maidenly-5, Alexa-2)
nsubj(think-7, Alexa-2)
cop(maidenly-5, was-3)
advmod(maidenly-5, too-4)
root(ROOT-0, maidenly-5)
aux(think-7, to-6)
xcomp(maidenly-5, think-7)
prepc_of(think-7, making-9)
det(man-11, any-10)
nsubj(love-12, man-11)
dep(making-9, love-12)
dobj(love-12, her-13)
advmod(loved-19, even-16)
mark(loved-19, if-17)
nsubj(loved-19, he-18)
advcl(marry-24, loved-19)
dobj(loved-19, her-20)
nsubj(marry-24, she-21)
aux(marry-24, could-22)
neg(marry-24, not-23)
dep(making-9, marry-24)
conj_and(love-12, marry-24)
det(man-26, a-25)
dobj(marry-24, man-26)
poss(position-30, Andrew-28)
prep_in(man-26, position-30)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (MD might)
        (VP (VB stretch)
          (SBAR
            (S
              (NP
                (NP (DT a) (NN point))
                (CC or)
                (NP (CD two)))
              (VP (VBD were)
                (NP
                  (NP (DT the) (NN lack))
                  (PP (CC but)
                    (NP
                      (NP (DT a) (NN point))
                      (CC or)
                      (NP (CD two)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBD was)
        (ADVP (RB no)
          (NP (CD stretching) (NNS points)))
        (PP (TO to)
          (NP
            (NP (DT the) (NN marrying))
            (PP (IN of)
              (NP (DT a) (NN peasant)))))
        (, ,)
        (PP (IN without)
          (NP
            (NP (NN education))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD worked)
                  (PP (IN on)
                    (NP
                      (NP (PRP$ his) (NN father) (POS 's))
                      (NN farm))))))))))
    (. !)))

nsubj(stretch-3, She-1)
nsubj(was-19, She-1)
aux(stretch-3, might-2)
root(ROOT-0, stretch-3)
det(point-5, a-4)
nsubj(lack-10, point-5)
conj_or(point-5, two-7)
nsubj(lack-10, two-7)
cop(lack-10, were-8)
det(lack-10, the-9)
ccomp(stretch-3, lack-10)
prep(lack-10, but-11)
det(point-13, a-12)
pobj(but-11, point-13)
pobj(but-11, two-15)
conj_or(point-13, two-15)
expl(was-19, there-18)
conj_but(stretch-3, was-19)
advmod(was-19, no-20)
num(points-22, stretching-21)
pobj(no-20, points-22)
det(marrying-25, the-24)
prep_to(was-19, marrying-25)
det(peasant-28, a-27)
prep_of(marrying-25, peasant-28)
prep_without(was-19, education-31)
nsubj(worked-34, education-31)
rcmod(education-31, worked-34)
poss(father-37, his-36)
poss(farm-39, father-37)
prep_on(worked-34, farm-39)

(ROOT
  (S
    (NP (DT The) (NN thing))
    (VP (VBD was)
      (ADJP (JJ ridiculous)))
    (. !)))

det(thing-2, The-1)
nsubj(ridiculous-4, thing-2)
cop(ridiculous-4, was-3)
root(ROOT-0, ridiculous-4)

(ROOT
  (S (: --)
    (PP (IN of)
      (NP (NN course)))
    (NP (PRP she))
    (VP (VBD knew)
      (NP (DT that)))
    (. !)))

prep_of(knew-5, course-3)
nsubj(knew-5, she-4)
root(ROOT-0, knew-5)
dobj(knew-5, that-6)

(ROOT
  (NP (: --)
    (NP
      (NP (DT the) (JJ very) (NN idea))
      (ADJP (RB too) (JJ absurd)
        (S
          (VP (TO to)
            (VP (VB pass)
              (PP (IN through)
                (NP (PRP$ her) (JJ idlest) (NNS thoughts))))))))
    (. !)))

det(idea-4, the-2)
amod(idea-4, very-3)
root(ROOT-0, idea-4)
advmod(absurd-6, too-5)
amod(idea-4, absurd-6)
aux(pass-8, to-7)
xcomp(absurd-6, pass-8)
poss(thoughts-12, her-10)
amod(thoughts-12, idlest-11)
prep_through(pass-8, thoughts-12)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (VP (VBD was) (RB not)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB marry)
              (NP (NNP George)))))))
    (. !)))

cc(going-5, But-1)
nsubj(going-5, she-2)
nsubj(marry-7, she-2)
aux(going-5, was-3)
neg(going-5, not-4)
root(ROOT-0, going-5)
aux(marry-7, to-6)
xcomp(going-5, marry-7)
dobj(marry-7, George-8)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (VP
        (ADVP (RB well))
        (VBN settled)))
    (. !)))

nsubjpass(settled-4, That-1)
auxpass(settled-4, was-2)
advmod(settled-4, well-3)
root(ROOT-0, settled-4)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (NN year))
        (CC or)
        (NP (CD two))))
    (NP (PRP he))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB quite) (JJ fat))))
    (. !)))

det(year-3, a-2)
prep_in(fat-10, year-3)
conj_or(year-3, two-5)
prep_in(fat-10, two-5)
nsubj(fat-10, he-6)
aux(fat-10, would-7)
cop(fat-10, be-8)
advmod(fat-10, quite-9)
root(ROOT-0, fat-10)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (ADVP (RB always))
    (VP (VBD had)
      (NP
        (NP (PRP$ his) (NNS hands))
        (PP (IN in)
          (NP (PRP$ his) (NNS pockets)))))
    (. !)))

cc(had-4, And-1)
nsubj(had-4, he-2)
advmod(had-4, always-3)
root(ROOT-0, had-4)
poss(hands-6, his-5)
dobj(had-4, hands-6)
poss(pockets-9, his-8)
prep_in(hands-6, pockets-9)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP (NN something))
      (SBAR (IN about)
        (S
          (NP (PRP him))
          (VP (VBZ _) (RB not)
            (VP (VB _)
              (PP (IN like)
                (NP (DT a) (NN gentleman))))))))
    (. !)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nsubj(was-2, something-3)
mark(_-6, about-4)
nsubj(_-6, him-5)
advcl(was-2, _-6)
neg(_-6, not-7)
dep(_-6, _-8)
det(gentleman-11, a-10)
prep_like(_-8, gentleman-11)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD suggested)
      (NP
        (NP (DT an) (NN auctioneer))
        (CC or)
        (NP (DT a) (NN cheap-jack))))
    (. !)))

nsubj(suggested-2, He-1)
root(ROOT-0, suggested-2)
det(auctioneer-4, an-3)
dobj(suggested-2, auctioneer-4)
det(cheap-jack-7, a-6)
dobj(suggested-2, cheap-jack-7)
conj_or(auctioneer-4, cheap-jack-7)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD took)
        (NP (PRP$ her) (NN pony)))
      (CC and)
      (VP (VBD went)
        (PP (IN for)
          (NP (DT a) (NN ride)))))
    (. .)))

nsubj(took-2, She-1)
nsubj(went-6, She-1)
root(ROOT-0, took-2)
poss(pony-4, her-3)
dobj(took-2, pony-4)
conj_and(took-2, went-6)
det(ride-9, a-8)
prep_for(went-6, ride-9)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP she))
        (VP (VBD came)
          (ADVP (RB back)))))
    (, ,)
    (NP (DT the) (NN pony))
    (VP (VBD looked)
      (ADJP (JJ elf-ridden)))
    (. .)))

advmod(came-3, When-1)
nsubj(came-3, she-2)
advcl(looked-8, came-3)
advmod(came-3, back-4)
det(pony-7, the-6)
nsubj(looked-8, pony-7)
root(ROOT-0, looked-8)
acomp(looked-8, elf-ridden-9)

(ROOT
  (S (CC But)
    (NP (NNP George))
    (VP (VBD had)
      (NP
        (NP (DT no) (NN intention))
        (PP (IN of)
          (S
            (VP (VBG forsaking)
              (NP
                (NP (DT the) (NN house))
                (: --)
                (ADVP (RB yet)))))))
      (, ,)
      (ADVP (IN at) (JJS least)))
    (. .)))

cc(had-3, But-1)
nsubj(had-3, George-2)
root(ROOT-0, had-3)
neg(intention-5, no-4)
dobj(had-3, intention-5)
prepc_of(intention-5, forsaking-7)
det(house-9, the-8)
dobj(forsaking-7, house-9)
advmod(house-9, yet-11)
advmod(had-3, at-13)
pobj(at-13, least-14)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD was)
        (ADJP (JJ bent)
          (PP (IN on)
            (S
              (VP (VBG humbling)
                (NP (PRP$ his) (NN cousin)))))))
      (, ,)
      (VP
        (ADVP (RB therefore))
        (VBD continued)
        (NP (PRP$ his) (NNS relations))
        (PP (IN with)
          (NP (PRP$ her) (NN father))))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (PRP he))
          (VP (VBN hurried)
            (PP (IN on))
            (, ,)
            (ADVP
              (ADVP (RB as) (RB fast))
              (SBAR (IN as)
                (S
                  (VP (VBD consisted)
                    (PP (IN with)
                      (NP
                        (NP (JJ good) (NN masonry))
                        (, ,)
                        (NP
                          (NP (DT the) (NN building))
                          (PP (IN of)
                            (NP
                              (NP (DT a) (NN house))
                              (PP (IN on)
                                (NP
                                  (NP (DT a) (JJ small) (NN estate))
                                  (SBAR
                                    (S
                                      (NP (PRP he))
                                      (VP (VBD had)
                                        (VP (VBN bought)
                                          (PP (IN in)
                                            (NP (DT the) (NN neighborhood))))))))))))))
                    (, ,)
                    (S
                      (VP (VBG intending)
                        (S
                          (NP (PRP it))
                          (VP (TO to)
                            (VP (VB be)
                              (ADJP (JJ such))
                              (SBAR (IN as)
                                (S
                                  (VP (MD must)
                                    (VP (VB be)
                                      (NP
                                        (NP (DT an) (NN enticement))
                                        (PP (TO to)
                                          (NP (DT any) (NN lady)))))))))))))))))))))
    (. .)))

nsubj(bent-3, He-1)
cop(bent-3, was-2)
root(ROOT-0, bent-3)
prepc_on(bent-3, humbling-5)
poss(cousin-7, his-6)
dobj(humbling-5, cousin-7)
advmod(continued-10, therefore-9)
dep(bent-3, continued-10)
poss(relations-12, his-11)
dobj(continued-10, relations-12)
poss(father-15, her-14)
prep_with(continued-10, father-15)
mark(hurried-19, while-17)
nsubj(hurried-19, he-18)
advcl(bent-3, hurried-19)
prep(hurried-19, on-20)
advmod(fast-23, as-22)
advmod(hurried-19, fast-23)
mark(consisted-25, as-24)
advcl(fast-23, consisted-25)
ccomp(fast-23, consisted-25)
amod(masonry-28, good-27)
prep_with(consisted-25, masonry-28)
det(building-31, the-30)
appos(masonry-28, building-31)
det(house-34, a-33)
prep_of(building-31, house-34)
det(estate-38, a-36)
amod(estate-38, small-37)
prep_on(house-34, estate-38)
nsubj(bought-41, he-39)
aux(bought-41, had-40)
rcmod(estate-38, bought-41)
det(neighborhood-44, the-43)
prep_in(bought-41, neighborhood-44)
xcomp(consisted-25, intending-46)
dobj(intending-46, it-47)
nsubj(such-50, it-47)
aux(such-50, to-48)
cop(such-50, be-49)
xcomp(intending-46, such-50)
mark(enticement-55, as-51)
aux(enticement-55, must-52)
cop(enticement-55, be-53)
det(enticement-55, an-54)
advcl(such-50, enticement-55)
det(lady-58, any-57)
prep_to(enticement-55, lady-58)

(ROOT
  (FRAG
    (ADJP (RB So) (JJ long))
    (S (VBD had)
      (NP (PRP he))
      (VP (VBN regarded)
        (NP (NN everything))
        (PP (IN through)
          (NP
            (NP (DT the) (NN veil))
            (PP (IN of)
              (NP (NN money)))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD could) (RB not)
              (VP (VB think)
                (PP (IN of)
                  (NP (NNP Alexa)))
                (PP (RB even) (IN without)
                  (S
                    (VP (VBG thinking)
                      (PP (IN of)
                        (NP (NNP Mammon)))
                      (ADVP (RB as) (RB well)))))))))))
    (. .)))

advmod(long-2, So-1)
root(ROOT-0, long-2)
dep(regarded-5, had-3)
nsubj(regarded-5, he-4)
dep(long-2, regarded-5)
dobj(regarded-5, everything-6)
det(veil-9, the-8)
prep_through(regarded-5, veil-9)
prep_of(veil-9, money-11)
mark(think-17, that-13)
nsubj(think-17, he-14)
aux(think-17, could-15)
neg(think-17, not-16)
ccomp(regarded-5, think-17)
prep_of(think-17, Alexa-19)
advmod(think-17, even-20)
prepc_without(think-17, thinking-22)
prep_of(thinking-22, Mammon-24)
advmod(well-26, as-25)
mwe(well-26, as-25)
advmod(thinking-22, well-26)

(ROOT
  (S
    (PP (IN By)
      (NP
        (NP (DT this) (NN time))
        (ADVP (RB also))))
    (NP (PRP he))
    (VP (VBD was)
      (VP
        (ADVP (RB so) (RB much))
        (VBN infected)
        (PP (IN with)
          (NP
            (NP
              (NP (DT the) (JJ old) (NN man) (POS 's))
              (NN passion))
            (PP (IN for)
              (NP
                (NP (NNS things))
                (ADJP (JJ curious)
                  (CC and)
                  (JJ valuable))))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN idea))
              (PP (IN of)
                (NP
                  (NP (CD one) (NN day))
                  (VP (VBG calling)
                    (NP
                      (NP (DT the) (NN laird) (POS 's))
                      (JJ wonderful) (NN collection))
                    (NP (PRP$ his) (JJ own))))))
            (, ,)
            (VP (VBD had)
              (NP
                (NP (DT a) (JJ real) (NN part))
                (PP (IN in)
                  (NP (PRP$ his) (NN desire)
                    (S
                      (VP (TO to)
                        (VP (VB become)
                          (NP
                            (NP (PRP$ his) (NN daughter) (POS 's))
                            (NN husband)))))))))))))
    (. .)))

det(time-3, this-2)
agent(infected-9, time-3)
advmod(time-3, also-4)
nsubjpass(infected-9, he-5)
auxpass(infected-9, was-6)
advmod(much-8, so-7)
advmod(infected-9, much-8)
root(ROOT-0, infected-9)
det(man-13, the-11)
amod(man-13, old-12)
poss(passion-15, man-13)
prep_with(infected-9, passion-15)
prep_for(passion-15, things-17)
amod(things-17, curious-18)
amod(things-17, valuable-20)
conj_and(curious-18, valuable-20)
mark(had-37, that-22)
det(idea-24, the-23)
nsubj(had-37, idea-24)
num(day-27, one-26)
prep_of(idea-24, day-27)
vmod(day-27, calling-28)
det(laird-30, the-29)
poss(collection-33, laird-30)
amod(collection-33, wonderful-32)
iobj(calling-28, collection-33)
poss(own-35, his-34)
dobj(calling-28, own-35)
ccomp(infected-9, had-37)
det(part-40, a-38)
amod(part-40, real-39)
dobj(had-37, part-40)
poss(desire-43, his-42)
prep_in(part-40, desire-43)
aux(become-45, to-44)
vmod(desire-43, become-45)
poss(daughter-47, his-46)
poss(husband-49, daughter-47)
xcomp(become-45, husband-49)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB _))
    (VP (MD would) (RB not)
      (ADVP (RB _))
      (VP (VB accept)
        (NP (PRP$ her) (NN dismissal))
        (PP (IN as)
          (NP (JJ final)))))
    (. !)))

nsubj(accept-6, He-1)
advmod(accept-6, _-2)
aux(accept-6, would-3)
neg(accept-6, not-4)
advmod(accept-6, _-5)
root(ROOT-0, accept-6)
poss(dismissal-8, her-7)
dobj(accept-6, dismissal-8)
prep_as(accept-6, final-10)

(ROOT
  (NP (NNP CHAPTER) (NNP XXV) (. .)))

nn(XXV-2, CHAPTER-1)
root(ROOT-0, XXV-2)

(ROOT
  (NP
    (NP (DT THE) (NN HEART))
    (PP (IN OF)
      (NP (DT THE) (NN HEART)))
    (. .)))

det(HEART-2, THE-1)
root(ROOT-0, HEART-2)
det(HEART-5, THE-4)
prep_of(HEART-2, HEART-5)

(ROOT
  (S
    (S
      (NP (DT The) (NN laird))
      (VP (VBD had)
        (VP (VBN been)
          (ADVP (RB poorly))
          (PP (IN for)
            (NP (DT some) (NNS weeks))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Alexa))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB fear)
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (VP (VBG failing))))))))))
    (. .)))

det(laird-2, The-1)
nsubj(been-4, laird-2)
aux(been-4, had-3)
root(ROOT-0, been-4)
advmod(been-4, poorly-5)
det(weeks-8, some-7)
prep_for(been-4, weeks-8)
nsubj(began-12, Alexa-11)
nsubj(fear-14, Alexa-11)
conj_and(been-4, began-12)
aux(fear-14, to-13)
xcomp(began-12, fear-14)
mark(failing-18, that-15)
nsubj(failing-18, he-16)
aux(failing-18, was-17)
ccomp(fear-14, failing-18)

(ROOT
  (S
    (S
      (NP (NN Nothing) (RBR more))
      (VP (VBD had)
        (VP (VBN passed)
          (PP (IN between)
            (NP
              (NP (PRP him))
              (CC and)
              (NP (NNP Dawtie)))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP he))
        (VP (VBD knew)
          (SBAR (IN that)
            (S
              (NP (JJ anxious) (NNS eyes))
              (VP (VBD were)
                (ADVP (RB often))
                (VP (VBG watching)
                  (NP (PRP him))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN thought))
        (VP (VBD worried)
          (NP (PRP him))
          (ADVP (RB not)
            (NP (DT a) (RB little))))))
    (. .)))

nsubj(passed-4, Nothing-1)
advmod(Nothing-1, more-2)
aux(passed-4, had-3)
root(ROOT-0, passed-4)
prep_between(passed-4, him-6)
prep_between(passed-4, Dawtie-8)
conj_and(him-6, Dawtie-8)
nsubj(knew-12, he-11)
conj_but(passed-4, knew-12)
mark(watching-18, that-13)
amod(eyes-15, anxious-14)
nsubj(watching-18, eyes-15)
aux(watching-18, were-16)
advmod(watching-18, often-17)
ccomp(knew-12, watching-18)
dobj(watching-18, him-19)
det(thought-23, the-22)
nsubj(worried-24, thought-23)
conj_but(passed-4, worried-24)
conj_and(knew-12, worried-24)
dobj(worried-24, him-25)
neg(worried-24, not-26)
det(little-28, a-27)
dep(not-26, little-28)

(ROOT
  (FRAG
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (MD would)
          (VP (CC but)
            (VP (VB take)
              (NP
                (NP (DT a) (NN start))
                (, ,)
                (VP (VBN thought)
                  (NP (NNP Dawtie)))
                (, ,)))
            (CC and)
            (RB not)
            (VP (VB lose)
              (NP
                (NP (PDT all) (DT the) (NN good))
                (PP (IN of)
                  (NP (DT this) (NN life)))))))))
    (. !)))

mark(take-5, If-1)
nsubj(take-5, he-2)
nsubj(lose-14, he-2)
aux(take-5, would-3)
root(ROOT-0, take-5)
det(start-7, a-6)
dobj(take-5, start-7)
vmod(start-7, thought-9)
dobj(thought-9, Dawtie-10)
neg(lose-14, not-13)
conj_and(take-5, lose-14)
predet(good-17, all-15)
det(good-17, the-16)
dobj(lose-14, good-17)
det(life-20, this-19)
prep_of(good-17, life-20)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP (RB too) (JJ late))
        (SBAR (IN for)
          (S
            (NP (PRP him))
            (VP (TO to)
              (VP (VB rise)
                (ADJP (RB very) (JJ high))))))))
    (: ;)
    (S
      (S
        (NP (PRP he))
        (VP (MD could) (RB not)
          (ADVP (RB now))
          (VP (VB be)
            (NP (DT a) (NN saint)))))
      (, ,)
      (CC but)
      (S
        (NP (PRP he))
        (VP (MD might)
          (ADVP (IN at) (JJS least))
          (VP (VB set)
            (NP (DT a) (NN foot))
            (PP (IN on)
              (NP
                (NP (DT the) (JJ eternal) (NN stair))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ leads)
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NNS fullness))
                          (PP (IN of)
                            (NP (NNS bliss))))))))))))))
    (. !)))

nsubj(late-4, It-1)
cop(late-4, was-2)
advmod(late-4, too-3)
root(ROOT-0, late-4)
mark(rise-8, for-5)
nsubj(rise-8, him-6)
aux(rise-8, to-7)
advcl(late-4, rise-8)
xcomp(late-4, rise-8)
advmod(high-10, very-9)
acomp(rise-8, high-10)
nsubj(saint-18, he-12)
aux(saint-18, could-13)
neg(saint-18, not-14)
advmod(saint-18, now-15)
cop(saint-18, be-16)
det(saint-18, a-17)
parataxis(late-4, saint-18)
nsubj(set-25, he-21)
aux(set-25, might-22)
advmod(set-25, at-23)
pobj(at-23, least-24)
parataxis(late-4, set-25)
conj_but(saint-18, set-25)
det(foot-27, a-26)
dobj(set-25, foot-27)
det(stair-31, the-29)
amod(stair-31, eternal-30)
prep_on(set-25, stair-31)
nsubj(leads-33, stair-31)
rcmod(stair-31, leads-33)
det(fullness-36, the-35)
prep_to(leads-33, fullness-36)
prep_of(fullness-36, bliss-38)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP (VB have)
        (NP (DT a) (JJ sore) (NN fight))
        (PP (IN with)
          (NP
            (NP (PDT all) (DT those) (NNS imps))
            (PP (IN of)
              (NP (NNS things)))))
        (, ,)
        (SBAR (IN before)
          (S
            (NP (PRP he))
            (VP (VBD ceased)
              (S
                (VP
                  (VP (TO to)
                    (VP (VB love)
                      (NP
                        (NP (DT that))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBD was) (RB not)
                              (ADJP (JJ lovely))))))))
                  (, ,)
                  (CC and)
                  (VP (TO to)
                    (VP (VB covet)
                      (NP
                        (NP (DT that))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBD was) (RB not)
                              (ADJP (JJ good)))))))))))))))
    (. !)))

nsubj(have-3, He-1)
aux(have-3, would-2)
root(ROOT-0, have-3)
det(fight-6, a-4)
amod(fight-6, sore-5)
dobj(have-3, fight-6)
predet(imps-10, all-8)
det(imps-10, those-9)
prep_with(have-3, imps-10)
prep_of(imps-10, things-12)
mark(ceased-16, before-14)
nsubj(ceased-16, he-15)
advcl(have-3, ceased-16)
aux(love-18, to-17)
ccomp(ceased-16, love-18)
dobj(love-18, that-19)
nsubj(lovely-23, that-19)
cop(lovely-23, was-21)
neg(lovely-23, not-22)
rcmod(that-19, lovely-23)
aux(covet-27, to-26)
ccomp(ceased-16, covet-27)
conj_and(love-18, covet-27)
dobj(covet-27, that-28)
nsubj(good-32, that-28)
cop(good-32, was-30)
neg(good-32, not-31)
rcmod(that-28, good-32)

(ROOT
  (S (CC But)
    (NP (DT the) (NN man))
    (VP (VBD gained)
      (NP (DT a) (JJ precious) (NN benefit))
      (PP (IN from)
        (NP
          (NP (DT this) (NN world))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (CC but)
                (VP (VBD began)
                  (S
                    (VP (TO to)
                      (VP (VB repent)
                        (SBAR (IN before)
                          (S
                            (NP (PRP he))
                            (VP (VBD left)
                              (NP (PRP it)))))))))))))))
    (. !)))

cc(gained-4, But-1)
det(man-3, the-2)
nsubj(gained-4, man-3)
root(ROOT-0, gained-4)
det(benefit-7, a-5)
amod(benefit-7, precious-6)
dobj(gained-4, benefit-7)
det(world-10, this-9)
prep_from(gained-4, world-10)
nsubj(began-14, world-10)
nsubj(repent-16, world-10)
cc(began-14, but-13)
rcmod(world-10, began-14)
aux(repent-16, to-15)
xcomp(began-14, repent-16)
mark(left-19, before-17)
nsubj(left-19, he-18)
advcl(repent-16, left-19)
dobj(left-19, it-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (RB only) (DT the) (NN laird))
        (VP (MD would)
          (VP (VB start)
            (PRT (RP up))
            (NP (DT the) (NN hill))
            (PP (IN before)
              (NP (PRP$ his) (NN body)))))))
    (VP (VBD got)
      (ADVP (RB quite)
        (PP (TO to)
          (NP (DT the) (NN bottom)))))
    (. !)))

mark(start-6, If-1)
advmod(laird-4, only-2)
det(laird-4, the-3)
nsubj(start-6, laird-4)
aux(start-6, would-5)
csubj(got-13, start-6)
prt(start-6, up-7)
det(hill-9, the-8)
dobj(start-6, hill-9)
poss(body-12, his-11)
prep_before(start-6, body-12)
root(ROOT-0, got-13)
advmod(got-13, quite-14)
det(bottom-17, the-16)
prep_to(quite-14, bottom-17)

(ROOT
  (SQ (VBD Was)
    (NP (EX there))
    (NP (DT any) (NN way))
    (SBAR (IN to)
      (S
        (VP (VBP approach)
          (NP (PRP him))
          (PP
            (ADVP (RB again))
            (IN with)
            (NP (PRP$ her) (NN petition)))
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (MD would)
                (VP (VB be)
                  (UCP
                    (ADJP (JJ good)
                      (PP (TO to)
                        (NP (PRP himself))))
                    (, ,)
                    (ADJP (JJ good)
                      (PP (TO to)
                        (NP (NNP God))))
                    (, ,)
                    (ADJP (JJ good)
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN universe))
                          (, ,)
                          (SBAR (IN that)
                            (S
                              (NP (PRP he))
                              (VP (MD would)
                                (VP (VB love)
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (VP (VBD was)
                                        (ADJP (IN worth) (JJ loving))))))))))))
                    (, ,)
                    (CC and)
                    (VP (VBD cast)
                      (ADVP (RB away))
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (VP (VBD was) (RB not)))))))))))))
    (. ?)))

root(ROOT-0, Was-1)
expl(Was-1, there-2)
det(way-4, any-3)
nsubj(Was-1, way-4)
mark(approach-6, to-5)
dep(Was-1, approach-6)
dobj(approach-6, him-7)
advmod(approach-6, again-8)
poss(petition-11, her-10)
prep_with(approach-6, petition-11)
mark(good-16, that-12)
nsubjpass(good-16, he-13)
nsubj(good-20, he-13)
nsubj(good-24, he-13)
nsubjpass(cast-39, he-13)
aux(good-16, would-14)
auxpass(good-16, be-15)
cop(good-16, be-15)
ccomp(approach-6, good-16)
prep_to(good-16, himself-18)
ccomp(approach-6, good-20)
conj_and(good-16, good-20)
prep_to(good-20, God-22)
ccomp(approach-6, good-24)
conj_and(good-16, good-24)
det(universe-27, the-26)
prep_to(good-24, universe-27)
mark(love-32, that-29)
nsubj(love-32, he-30)
aux(love-32, would-31)
dep(universe-27, love-32)
nsubj(loving-36, what-33)
cop(loving-36, was-34)
dep(loving-36, worth-35)
ccomp(love-32, loving-36)
ccomp(approach-6, cast-39)
conj_and(good-16, cast-39)
advmod(cast-39, away-40)
nsubj(was-42, what-41)
ccomp(cast-39, was-42)
neg(was-42, not-43)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD had)
        (NP (DT no) (NN light)))
      (, ,)
      (CC and)
      (VP (MD could)
        (VP (VB do)
          (NP (NN nothing)))))
    (. !)))

nsubj(had-2, She-1)
nsubj(do-8, She-1)
root(ROOT-0, had-2)
neg(light-4, no-3)
dobj(had-2, light-4)
aux(do-8, could-7)
conj_and(had-2, do-8)
dobj(do-8, nothing-9)

(ROOT
  (S
    (ADVP (RB Suddenly))
    (NP (DT the) (JJ old) (NN man))
    (VP (VBD failed)
      (ADVP (RB quite))
      (: --)
      (PP
        (ADVP (RB apparently))
        (IN from)
        (NP (DT no) (NN cause)))
      (PP (CC but)
        (NP (NN weakness))))
    (. .)))

advmod(failed-5, Suddenly-1)
det(man-4, the-2)
amod(man-4, old-3)
nsubj(failed-5, man-4)
root(ROOT-0, failed-5)
advmod(failed-5, quite-6)
advmod(failed-5, apparently-8)
neg(cause-11, no-10)
prep_from(failed-5, cause-11)
prep(failed-5, but-12)
pobj(but-12, weakness-13)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN unease))
        (PP (IN of)
          (NP (PRP$ his) (NN mind))))
      (, ,)
      (NP
        (NP (DT the) (NN haunting))
        (PP (IN of)
          (NP
            (NP (DT the) (NN dread) (NN thought))
            (PP (IN of)
              (S
                (VP (VBG having)
                  (S
                    (VP (TO to)
                      (VP (VB part)
                        (PP (IN with)
                          (NP (DT the) (NN chalice))))))))))))
      (, ,))
    (VP (VBD had)
      (VP (VBN induced)
        (NP (PRP it))))
    (. .)))

det(unease-2, The-1)
nsubj(induced-22, unease-2)
poss(mind-5, his-4)
prep_of(unease-2, mind-5)
det(haunting-8, the-7)
appos(unease-2, haunting-8)
det(thought-12, the-10)
nn(thought-12, dread-11)
prep_of(haunting-8, thought-12)
prepc_of(thought-12, having-14)
aux(part-16, to-15)
xcomp(having-14, part-16)
det(chalice-19, the-18)
prep_with(part-16, chalice-19)
aux(induced-22, had-21)
root(ROOT-0, induced-22)
dobj(induced-22, it-23)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP (VBD was)
          (PP (IN in)
            (NP (PRP$ his) (NN closet)))
          (NP (CD one) (NN night))
          (PP
            (ADVP (RB late))
            (IN into)
            (NP (DT the) (NN morning)))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (JJ next) (NN day))
        (VP (VBD did) (RB not)
          (VP (VB get)
            (PRT (RP up))
            (PP (TO to)
              (NP
                (NP (NN breakfast))
                (SBAR
                  (S
                    (NP (PRP He))
                    (VP (VBD wanted)
                      (NP (DT a) (JJ little) (NN rest)))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(night-7, He-1)
cop(night-7, was-2)
poss(closet-5, his-4)
prep_in(night-7, closet-5)
num(night-7, one-6)
ccomp(said-30, night-7)
advmod(night-7, late-8)
det(morning-11, the-10)
prep_into(night-7, morning-11)
det(day-16, the-14)
amod(day-16, next-15)
nsubj(get-19, day-16)
aux(get-19, did-17)
neg(get-19, not-18)
conj_and(night-7, get-19)
ccomp(said-30, get-19)
prt(get-19, up-20)
prep_to(get-19, breakfast-22)
nsubj(wanted-24, He-23)
rcmod(breakfast-22, wanted-24)
det(rest-27, a-25)
amod(rest-27, little-26)
dobj(wanted-24, rest-27)
nsubj(said-30, he-29)
root(ROOT-0, said-30)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (NN day)))
    (NP (PRP he))
    (VP (MD would)
      (VP (VB be)
        (ADVP (RB well))))
    (. !)))

det(day-3, a-2)
prep_in(be-6, day-3)
nsubj(be-6, he-4)
aux(be-6, would-5)
root(ROOT-0, be-6)
advmod(be-6, well-7)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NN hour))
      (SBAR
        (S
          (VP (TO to)
            (VP (VB rise)
              (ADVP (RB again))))))
      (, ,)
      (ADJP (RB much) (VBN anticipated))
      (, ,))
    (ADVP (RB never))
    (VP (VBD came))
    (. .)))

cc(came-12, But-1)
det(hour-3, the-2)
nsubj(came-12, hour-3)
aux(rise-5, to-4)
vmod(hour-3, rise-5)
advmod(rise-5, again-6)
advmod(anticipated-9, much-8)
amod(hour-3, anticipated-9)
neg(came-12, never-11)
root(ROOT-0, came-12)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD seemed)
        (S
          (ADJP
            (ADJP (RB very) (VBN troubled)
              (PP (IN at)
                (NP (NNS times))))
            (, ,)
            (CC and)
            (ADJP (RB very) (JJ desirous)
              (PP (IN of)
                (S
                  (VP (VBG getting)
                    (PRT (RP up)))))))))
      (, ,)
      (CC but)
      (ADVP (RB never))
      (VP (VBD was)
        (ADJP (JJ able))))
    (. .)))

nsubj(seemed-2, He-1)
nsubj(able-18, He-1)
root(ROOT-0, seemed-2)
advmod(troubled-4, very-3)
dep(seemed-2, troubled-4)
prep_at(troubled-4, times-6)
advmod(desirous-10, very-9)
dep(seemed-2, desirous-10)
conj_and(troubled-4, desirous-10)
prepc_of(desirous-10, getting-12)
prt(getting-12, up-13)
neg(able-18, never-16)
cop(able-18, was-17)
conj_but(seemed-2, able-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD became)
      (ADJP (JJ necessary)
        (S
          (VP (TO to)
            (VP (VB sit)
              (PP (IN with)
                (NP (PRP him)))
              (PP (IN at)
                (NP (NN night))))))))
    (. .)))

nsubj(became-2, It-1)
root(ROOT-0, became-2)
acomp(became-2, necessary-3)
aux(sit-5, to-4)
xcomp(necessary-3, sit-5)
prep_with(sit-5, him-7)
prep_at(sit-5, night-9)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS fits))
        (PP (IN of)
          (NP (NN delirium)))))
    (NP (PRP he))
    (VP (MD would)
      (VP (VB make)
        (NP (JJ fierce) (NN endeavor))
        (S
          (VP (TO to)
            (VP (VB rise))))
        (, ,)
        (S
          (VP (VBG insisting)
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (MD must)
                  (VP (VB go)
                    (PP (TO to)
                      (NP (PRP$ his) (NN study)))))))))))
    (. .)))

prep_in(make-7, fits-2)
prep_of(fits-2, delirium-4)
nsubj(make-7, he-5)
aux(make-7, would-6)
root(ROOT-0, make-7)
amod(endeavor-9, fierce-8)
dobj(make-7, endeavor-9)
aux(rise-11, to-10)
vmod(make-7, rise-11)
xcomp(make-7, insisting-13)
mark(go-17, that-14)
nsubj(go-17, he-15)
aux(go-17, must-16)
ccomp(insisting-13, go-17)
poss(study-20, his-19)
prep_to(go-17, study-20)

(ROOT
  (S
    (NP
      (NP (PRP$ His) (NN closet))
      (SBAR
        (S
          (NP (PRP he))
          (VP
            (ADVP (RB never))
            (VP (VBD mentioned))
            (: :)
            (VP
              (ADVP (RB even))
              (PP (IN in)
                (NP (NNS dreams))))))))
    (VP (VBD was)
      (NP (PRP$ his) (NN secrecy) (NN dominant)))
    (. .)))

poss(closet-2, His-1)
nsubj(dominant-13, closet-2)
nsubj(mentioned-5, he-3)
neg(mentioned-5, never-4)
rcmod(closet-2, mentioned-5)
dep(mentioned-5, even-7)
prep_in(even-7, dreams-9)
cop(dominant-13, was-10)
poss(dominant-13, his-11)
nn(dominant-13, secrecy-12)
root(ROOT-0, dominant-13)

(ROOT
  (S
    (NP
      (NP (NNP Dawtie))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD had)
            (NP (PRP$ her) (NN share))
            (PP (IN in)
              (S
                (VP (VBG nursing)
                  (NP (PRP him))))))))
      (, ,))
    (VP (VBD kept)
      (SBAR
        (S
          (S
            (VP (VBG hoping)
              (NP (PRP$ her) (NN opportunity))))
          (VP (MD would)
            (VP (VB come))))))
    (. .)))

nsubj(had-4, Dawtie-1)
nsubj(kept-11, Dawtie-1)
rcmod(Dawtie-1, had-4)
poss(share-6, her-5)
dobj(had-4, share-6)
prepc_in(had-4, nursing-8)
dobj(nursing-8, him-9)
root(ROOT-0, kept-11)
csubj(come-16, hoping-12)
poss(opportunity-14, her-13)
dobj(hoping-12, opportunity-14)
aux(come-16, would-15)
ccomp(kept-11, come-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD did) (RB not)
      (VP (VB seem)
        (S
          (VP (TO to)
            (VP (VB cherish)
              (NP
                (NP (DT any) (NN resentment))
                (PP (IN against)
                  (NP (PRP her)))))))))
    (. .)))

nsubj(seem-4, He-1)
nsubj(cherish-6, He-1)
aux(seem-4, did-2)
neg(seem-4, not-3)
root(ROOT-0, seem-4)
aux(cherish-6, to-5)
xcomp(seem-4, cherish-6)
det(resentment-8, any-7)
dobj(cherish-6, resentment-8)
prep_against(resentment-8, her-10)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN illness))
      (VP (MD would)
        (VP (VB protect)
          (NP (PRP him)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD thought) (, ,)
      (PP (IN from)
        (NP
          (NP (JJ further) (NN intrusion))
          (PP (IN of)
            (NP (PRP$ her) (NN conscience)))))
      (PP (IN upon)
        (NP (PRP$ his))))
    (. !)))

poss(illness-2, His-1)
nsubj(protect-4, illness-2)
aux(protect-4, would-3)
ccomp(thought-8, protect-4)
dobj(protect-4, him-5)
nsubj(thought-8, he-7)
root(ROOT-0, thought-8)
amod(intrusion-12, further-11)
prep_from(thought-8, intrusion-12)
poss(conscience-15, her-14)
prep_of(intrusion-12, conscience-15)
prep_upon(thought-8, his-17)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD must)
      (VP (VB know)
        (NP
          (NP
            (ADJP (JJR better) (IN than) (JJ irritate))
            (DT a) (JJ sick) (NN man))
          (PP (IN with)
            (NP (NNS overofficiousness))))))
    (. !)))

nsubj(know-3, She-1)
aux(know-3, must-2)
root(ROOT-0, know-3)
dep(irritate-6, better-4)
dep(irritate-6, than-5)
amod(man-9, irritate-6)
det(man-9, a-7)
amod(man-9, sick-8)
dobj(know-3, man-9)
prep_with(man-9, overofficiousness-11)

(ROOT
  (S
    (NP (NN Everybody))
    (VP (MD could) (RB not)
      (VP (VB be)
        (NP (DT a) (NN saint))))
    (. !)))

nsubj(saint-6, Everybody-1)
aux(saint-6, could-2)
neg(saint-6, not-3)
cop(saint-6, be-4)
det(saint-6, a-5)
root(ROOT-0, saint-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ enough)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT a) (NNP Christian))
                (PP (IN like)
                  (NP (JJ other)
                    (ADJP (JJ good)
                      (CC and)
                      (JJ salvable))
                    (NNS Christians)))))))))
    (. !)))

nsubj(enough-3, It-1)
nsubj(Christian-7, It-1)
cop(enough-3, was-2)
root(ROOT-0, enough-3)
aux(Christian-7, to-4)
cop(Christian-7, be-5)
det(Christian-7, a-6)
xcomp(enough-3, Christian-7)
amod(Christians-13, other-9)
amod(Christians-13, good-10)
conj_and(good-10, salvable-12)
amod(Christians-13, salvable-12)
prep_like(Christian-7, Christians-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ enough)
        (PP (IN for)
          (NP (PRP him))))
      (SBAR (IN if)
        (S
          (PP (IN through)
            (NP
              (NP (DT the) (NNS merits))
              (PP (IN of)
                (NP (PRP$ his) (NN Saviour)))))
          (NP (PRP he))
          (VP (VBD gained)
            (NP (NN admission))
            (PP (TO to)
              (NP (DT the) (JJ heavenly) (NN kingdom)))
            (PP (IN at)
              (NP (JJ last)))))))
    (. !)))

nsubj(enough-3, It-1)
cop(enough-3, was-2)
root(ROOT-0, enough-3)
prep_for(enough-3, him-5)
mark(gained-14, if-6)
det(merits-9, the-8)
prep_through(gained-14, merits-9)
poss(Saviour-12, his-11)
prep_of(merits-9, Saviour-12)
nsubj(gained-14, he-13)
advcl(enough-3, gained-14)
dobj(gained-14, admission-15)
det(kingdom-19, the-17)
amod(kingdom-19, heavenly-18)
prep_to(gained-14, kingdom-19)
prep_at(gained-14, last-21)

(ROOT
  (S
    (S
      (NP (PRP He))
      (ADVP (RB never))
      (VP (VBD thought)
        (ADVP (RB now))
        (, ,)
        (SBAR (IN once)
          (S
            (ADVP (RB in))
            (, ,)
            (NP (PRP he))
            (VP (MD could)
              (VP (VB bear)
                (S
                  (VP (TO to)
                    (VP (VB stay)
                      (PRT (RP in)))))))))))
    (: ;)
    (SINV
      (ADVP (RB never))
      (VP (VBD thought)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (NN heaven))
            (VP (MD could)
              (VP (VB be)
                (PP (TO to)
                  (NP
                    (NP (PRP him))
                    (PP (JJ other) (IN than)
                      (NP
                        (NP (DT the) (JJS dullest) (NN place))
                        (PP (IN in)
                          (NP
                            (NP (DT the) (NN universe))
                            (PP (IN of)
                              (NP (NNP God)))
                            (, ,)
                            (ADJP (RBR more) (JJ wearisome))))))))
                (PP (IN than)
                  (NP
                    (NP (DT the) (NN kingdom))
                    (PP (IN of)
                      (NP (NNS darkness))))))))))
      (NP (PRP itself)))
    (. !)))

nsubj(thought-3, He-1)
neg(thought-3, never-2)
root(ROOT-0, thought-3)
advmod(thought-3, now-4)
mark(bear-11, once-6)
advmod(bear-11, in-7)
nsubj(bear-11, he-9)
nsubj(stay-13, he-9)
aux(bear-11, could-10)
advcl(thought-3, bear-11)
aux(stay-13, to-12)
xcomp(bear-11, stay-13)
prt(stay-13, in-14)
neg(thought-17, never-16)
parataxis(thought-3, thought-17)
advmod(be-21, how-18)
nsubj(be-21, heaven-19)
aux(be-21, could-20)
ccomp(thought-17, be-21)
prep_to(be-21, him-23)
dep(him-23, other-24)
det(place-28, the-26)
amod(place-28, dullest-27)
prep_than(him-23, place-28)
det(universe-31, the-30)
prep_in(place-28, universe-31)
prep_of(universe-31, God-33)
advmod(wearisome-36, more-35)
amod(universe-31, wearisome-36)
det(kingdom-39, the-38)
prep_than(be-21, kingdom-39)
prep_of(kingdom-39, darkness-41)
nsubj(thought-17, itself-42)

(ROOT
  (S (CC And)
    (NP (PDT all) (DT the) (NN time))
    (NP
      (NP (DT the) (JJ young) (NN woman))
      (PP (IN with)
        (NP (DT the) (NN savior-heart))))
    (VP (VBD was)
      (VP (VBG watching)
        (PP (IN by)
          (NP (PRP$ his) (NN bedside)))
        (, ,)
        (S
          (ADJP (JJ ready)
            (S
              (VP (TO to)
                (VP (VB speak))))))))
    (: ;)
    (CC but)
    (S
      (S
        (NP (DT the) (NN Spirit))
        (VP (VBD gave)
          (NP (PRP her))
          (NP (DT no) (NN utterance))))
      (, ,)
      (CC and)
      (S
        (NP (PRP$ her) (NN silence))
        (VP (VBD soothed)
          (NP
            (NP (PRP$ his) (NN fear))
            (PP (IN of)
              (NP (PRP her)))))))
    (. .)))

predet(time-4, all-2)
det(time-4, the-3)
nsubj(watching-12, time-4)
det(woman-7, the-5)
amod(woman-7, young-6)
nsubj(watching-12, woman-7)
det(savior-heart-10, the-9)
prep_with(woman-7, savior-heart-10)
aux(watching-12, was-11)
root(ROOT-0, watching-12)
poss(bedside-15, his-14)
prep_by(watching-12, bedside-15)
dep(watching-12, ready-17)
aux(speak-19, to-18)
xcomp(ready-17, speak-19)
det(Spirit-23, the-22)
nsubj(gave-24, Spirit-23)
conj_but(watching-12, gave-24)
iobj(gave-24, her-25)
neg(utterance-27, no-26)
dobj(gave-24, utterance-27)
poss(silence-31, her-30)
nsubj(soothed-32, silence-31)
conj_but(watching-12, soothed-32)
conj_and(gave-24, soothed-32)
poss(fear-34, his-33)
dobj(soothed-32, fear-34)
prep_of(fear-34, her-36)

(ROOT
  (S
    (NP (CD One) (NN night))
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (RBR more) (JJ restless)
        (PP (IN than)
          (ADJP (JJ usual)))))
    (. .)))

num(night-2, One-1)
tmod(restless-6, night-2)
nsubj(restless-6, he-3)
cop(restless-6, was-4)
advmod(restless-6, more-5)
root(ROOT-0, restless-6)
prep_than(restless-6, usual-8)

(ROOT
  (S
    (S
      (VP (VBG Waking)
        (PP (IN from)
          (NP (PRP$ his) (JJ troubled) (NN slumber)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD called)
      (NP (PRP her))
      (: --)
      (PP (IN in)
        (NP
          (NP (DT the) (NN tone))
          (PP (IN of)
            (NP (CD one)))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD had)
                (NP
                  (NP (NN something))
                  (ADJP (JJ important)
                    (S
                      (VP (TO to)
                        (VP (VB communicate))))))))))))
    (. .)))

vmod(called-8, Waking-1)
poss(slumber-5, his-3)
amod(slumber-5, troubled-4)
prep_from(Waking-1, slumber-5)
nsubj(called-8, he-7)
root(ROOT-0, called-8)
dobj(called-8, her-9)
det(tone-13, the-12)
prep_in(called-8, tone-13)
nsubj(had-17, tone-13)
prep_of(tone-13, one-15)
rcmod(tone-13, had-17)
dobj(had-17, something-18)
amod(something-18, important-19)
aux(communicate-21, to-20)
xcomp(important-19, communicate-21)

(ROOT
  (S (`` ``)
    (NP (NNP Dawtie))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD said) (, ,)
          (PP (IN with)
            (NP
              (NP (JJ feeble) (NN voice))
              (PP (CC but)
                (NP (VBG glittering) (NN eye)))))))
      (, ,))
    (`` ``)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN one))
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD can)
              (VP (VB trust)
                (PP (IN like)
                  (NP (PRP you)))))))))
    (. .)))

nsubj(is-17, Dawtie-2)
nsubj(said-6, he-5)
parataxis(is-17, said-6)
amod(voice-10, feeble-9)
prep_with(said-6, voice-10)
prep(voice-10, but-11)
amod(eye-13, glittering-12)
pobj(but-11, eye-13)
expl(is-17, there-16)
root(ROOT-0, is-17)
neg(one-19, no-18)
nsubj(is-17, one-19)
nsubj(trust-22, I-20)
aux(trust-22, can-21)
rcmod(one-19, trust-22)
prep_like(trust-22, you-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBG thinking)
          (PP (IN of)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBD said)
                  (NP (DT that) (NN night))
                  (ADVP (RB ever))
                  (PP (IN since)))))))))
    (. .)))

nsubj(thinking-4, I-1)
aux(thinking-4, have-2)
aux(thinking-4, been-3)
root(ROOT-0, thinking-4)
prep_since(said-8, what-6)
nsubj(said-8, you-7)
prepc_of(thinking-4, said-8)
det(night-10, that-9)
tmod(said-8, night-10)
advmod(said-8, ever-11)

(ROOT
  (S
    (VP
      (VP (VB Go)
        (PP (TO to)
          (NP (PRP$ my) (NN closet))))
      (CC and)
      (VP (VB bring)
        (NP (PRP me))
        (NP (DT the) (NN cup))))
    (. .) ('' '')))

root(ROOT-0, Go-1)
poss(closet-4, my-3)
prep_to(Go-1, closet-4)
conj_and(Go-1, bring-6)
iobj(bring-6, me-7)
det(cup-9, the-8)
dobj(bring-6, cup-9)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD held)
        (NP
          (NP (DT a) (NN moment) (POS 's))
          (NN debate))
        (SBAR (IN whether)
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (ADJP (JJ right))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD reflected)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBD made)
              (NP (JJ little) (NN difference))
              (SBAR (IN whether)
                (S
                  (NP
                    (NP (DT the) (NN object))
                    (PP (IN of)
                      (NP (PRP$ his) (NN passion))))
                  (VP (VBD was)
                    (PP
                      (PP (IN in)
                        (NP (PRP$ his) (NN hand)))
                      (CC or)
                      (PP (IN in)
                        (NP
                          (NP (PRP$ his) (NN chest))
                          (, ,)
                          (SBAR (IN while)
                            (S
                              (NP (PRP it))
                              (VP (VBD was) (RB all)
                                (ADJP
                                  (NP (DT the) (JJ same))
                                  (JJ deep)
                                  (PP (IN in)
                                    (NP (PRP$ his) (NN heart))))))))))))))))))
    (. .)))

nsubj(held-2, Dawtie-1)
root(ROOT-0, held-2)
det(moment-4, a-3)
poss(debate-6, moment-4)
dobj(held-2, debate-6)
mark(right-11, whether-7)
nsubj(right-11, it-8)
aux(right-11, would-9)
cop(right-11, be-10)
ccomp(held-2, right-11)
nsubj(reflected-15, she-14)
conj_but(held-2, reflected-15)
mark(made-18, that-16)
nsubj(made-18, it-17)
ccomp(reflected-15, made-18)
amod(difference-20, little-19)
dobj(made-18, difference-20)
mark(was-27, whether-21)
det(object-23, the-22)
nsubj(was-27, object-23)
poss(passion-26, his-25)
prep_of(object-23, passion-26)
ccomp(made-18, was-27)
poss(hand-30, his-29)
prep_in(was-27, hand-30)
poss(chest-34, his-33)
prep_in(was-27, chest-34)
conj_or(hand-30, chest-34)
mark(deep-42, while-36)
nsubj(deep-42, it-37)
cop(deep-42, was-38)
advmod(deep-42, all-39)
det(same-41, the-40)
npadvmod(deep-42, same-41)
dep(chest-34, deep-42)
poss(heart-45, his-44)
prep_in(deep-42, heart-45)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP$ his) (NNS words))
      (VP (VBD seemed)
        (S
          (VP (TO to)
            (VP (VB imply)
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBD wanted)
                    (S
                      (VP (TO to)
                        (VP (VB take)
                          (NP
                            (NP (PRP$ his) (NN farewell))
                            (PP (IN of)
                              (NP (PRP it)))))))))))))))
    (: ;)
    (CC and)
    (S
      (S
        (VP (TO to)
          (VP (VB refuse)
            (NP (PRP$ his) (NN request)))))
      (VP (MD might)
        (ADVP (RB only))
        (VP
          (VP (VB fan)
            (NP (DT the) (JJ evil) (NN love)))
          (, ,)
          (CC and)
          (VP (VB turn)
            (NP (PRP him))
            (PP (IN from)
              (NP
                (NP (DT the) (JJ good) (NN motion))
                (PP (IN in)
                  (NP (PRP$ his) (NN mind)))))))))
    (. .)))

advmod(seemed-4, Then-1)
poss(words-3, his-2)
nsubj(seemed-4, words-3)
nsubj(imply-6, words-3)
root(ROOT-0, seemed-4)
aux(imply-6, to-5)
xcomp(seemed-4, imply-6)
mark(wanted-9, that-7)
nsubj(wanted-9, he-8)
nsubj(take-11, he-8)
ccomp(imply-6, wanted-9)
aux(take-11, to-10)
xcomp(wanted-9, take-11)
poss(farewell-13, his-12)
dobj(take-11, farewell-13)
prep_of(farewell-13, it-15)
aux(refuse-19, to-18)
csubj(fan-24, refuse-19)
csubj(turn-30, refuse-19)
poss(request-21, his-20)
dobj(refuse-19, request-21)
aux(fan-24, might-22)
advmod(fan-24, only-23)
conj_and(seemed-4, fan-24)
det(love-27, the-25)
amod(love-27, evil-26)
dobj(fan-24, love-27)
conj_and(seemed-4, turn-30)
conj_and(fan-24, turn-30)
dobj(turn-30, him-31)
det(motion-35, the-33)
amod(motion-35, good-34)
prep_from(turn-30, motion-35)
poss(mind-38, his-37)
prep_in(motion-35, mind-38)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD said) (: :) (`` ``)
        (S
          (INTJ (UH Yes))
          (, ,)
          (VP (VB sir)))))
    (, ,) ('' '')
    (CC and)
    (S
      (NP (NNP stood))
      (VP (VBG waiting)))
    (. .)))

nsubj(said-2, She-1)
root(ROOT-0, said-2)
discourse(sir-7, Yes-5)
ccomp(said-2, sir-7)
nsubj(waiting-12, stood-11)
conj_and(said-2, waiting-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD did) (RB not)
      (VP (VB speak)))
    (. .)))

nsubj(speak-4, He-1)
aux(speak-4, did-2)
neg(speak-4, not-3)
root(ROOT-0, speak-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB where))
            (S
              (VP (TO to)
                (VP (VB find)
                  (NP (PRP it)))))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(know-5, I-2)
nsubj(find-8, I-2)
aux(know-5, do-3)
neg(know-5, not-4)
ccomp(said-13, know-5)
advmod(find-8, where-6)
aux(find-8, to-7)
xcomp(know-5, find-8)
dobj(find-8, it-9)
nsubj(said-13, she-12)
root(ROOT-0, said-13)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP you))))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP
      (VP (VBD replied))
      (, ,)
      (CC but)
      (VP (VBD seemed)
        (S
          (VP (TO to)
            (VP (VB hesitate))))))
    (. .)))

nsubj(going-4, I-2)
nsubj(tell-6, I-2)
aux(going-4, am-3)
ccomp(replied-11, going-4)
aux(tell-6, to-5)
xcomp(going-4, tell-6)
dobj(tell-6, you-7)
nsubj(replied-11, he-10)
nsubj(seemed-14, he-10)
nsubj(hesitate-16, he-10)
root(ROOT-0, replied-11)
conj_but(replied-11, seemed-14)
aux(hesitate-16, to-15)
xcomp(seemed-14, hesitate-16)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB touch)
          (NP (DT a) (JJ single) (NN thing))
          (PP (IN beside)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Dawtie))
    (. .)))

nsubj(touch-5, I-2)
aux(touch-5, will-3)
neg(touch-5, not-4)
ccomp(said-12, touch-5)
det(thing-8, a-6)
amod(thing-8, single-7)
dobj(touch-5, thing-8)
prep(touch-5, beside-9)
root(ROOT-0, said-12)
nsubj(said-12, Dawtie-13)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD believed)
        (NP (PRP her)))
      (, ,)
      (CC and)
      (VP
        (ADVP (IN at) (RB once))
        (VBD proceeded) (: :) (`` ``)
        (S
          (VP (VB Take)
            (NP
              (NP (PRP$ my) (NN bunch))
              (PP (IN of)
                (NP
                  (NP (NNS keys))
                  (PP (IN from)
                    (NP
                      (NP (DT the) (NN hook))
                      (PP (IN behind)
                        (NP (PRP me))))))))))))
    (. .)))

nsubj(believed-2, He-1)
nsubj(proceeded-8, He-1)
root(ROOT-0, believed-2)
dobj(believed-2, her-3)
advmod(proceeded-8, at-6)
advmod(at-6, once-7)
conj_and(believed-2, proceeded-8)
ccomp(proceeded-8, Take-11)
poss(bunch-13, my-12)
dobj(Take-11, bunch-13)
prep_of(bunch-13, keys-15)
det(hook-18, the-17)
prep_from(keys-15, hook-18)
prep_behind(hook-18, me-20)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN key))
        (PP (IN of)
          (NP (DT the) (NN closet) (NN door)))))
    (. !)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(key-4, the-3)
nsubj(is-2, key-4)
det(door-8, the-6)
nn(door-8, closet-7)
prep_of(key-4, door-8)

(ROOT
  (S (: --)
    (S
      (VP (VB and)
        (NP
          (NP (RB there))
          (, ,)
          (NP
            (NP
              (NP (DT the) (NN key))
              (PP (IN of)
                (NP
                  (NP (PDT all) (DT the) (NN bunch))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP
                        (VP (VBZ looks)
                          (NP (DT the) (NN commonest)))
                        (, ,)
                        (CC but)
                        (VP (VBZ is)
                          (PP (IN in)
                            (NP (NN reality))))))))))
            (NP
              (NP (DT the) (JJS most) (NN cunningly))
              (VP (VBN devised)))))))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN key))
        (PP (IN of)
          (NP
            (NP (DT the) (NN cabinet))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (PRP I))
                (VP (VBP keep)
                  (NP (PRP it)))))))))
    (. !) ('' '')))

parataxis(key-27, and-2)
dobj(and-2, there-3)
det(key-6, the-5)
appos(there-3, key-6)
predet(bunch-10, all-8)
det(bunch-10, the-9)
prep_of(key-6, bunch-10)
nsubj(looks-12, bunch-10)
nsubj(is-17, bunch-10)
rcmod(bunch-10, looks-12)
det(commonest-14, the-13)
dobj(looks-12, commonest-14)
rcmod(bunch-10, is-17)
conj_but(looks-12, is-17)
prep_in(is-17, reality-19)
det(cunningly-22, the-20)
amod(cunningly-22, most-21)
dep(key-6, cunningly-22)
vmod(cunningly-22, devised-23)
cop(key-27, is-25)
det(key-27, the-26)
root(ROOT-0, key-27)
det(cabinet-30, the-29)
prep_of(key-27, cabinet-30)
prep_in(keep-34, cabinet-30)
nsubj(keep-34, I-33)
rcmod(cabinet-30, keep-34)
dobj(keep-34, it-35)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD told)
      (NP (PRP her))
      (SBAR
        (SBAR
          (WHADVP (WRB where))
          (S (, ,)
            (PP (IN behind)
              (NP
                (NP (DT a) (JJ little) (NN book-case))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD moved)
                      (PP (IN from)
                        (NP (DT the) (NN wall)))
                      (PP (IN on)
                        (NP (NNS hinges))))))))
            (, ,)
            (NP (PRP she))
            (VP (MD would)
              (VP (VB find)
                (NP (DT the) (NN cabinet))))))
        (, ,)
        (CC and)
        (SBAR
          (WHPP (IN in)
            (WHNP
              (WHNP (WP what) (NN part))
              (PP (IN of)
                (NP (PRP it)))))
          (S
            (NP
              (NP (DT the) (NN cup))
              (, ,)
              (VP (VBN wrapped)
                (PP (IN in)
                  (NP
                    (NP (DT a) (NN piece))
                    (PP (IN of)
                      (NP (NN silk)))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD had)
                          (ADVP (RB once))
                          (VP (VBN been)
                            (NP (DT a) (NN sleeve)))))))))
              (, ,))
            (VP (VBN worn)
              (PP (IN by)
                (NP
                  (NP (NNP _) (NNP Mme.) (IN de) (NNP Genlis) (NNP _))
                  (: --)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD did) (RB not)
                        (VP (VB make)
                          (S
                            (NP (NNP Dawtie))
                            (ADJP (RB much) (JJR wiser))))))))))))))
    (. .)))

advmod(told-3, Then-1)
nsubj(told-3, he-2)
root(ROOT-0, told-3)
dobj(told-3, her-4)
advmod(find-22, where-5)
det(book-case-10, a-8)
amod(book-case-10, little-9)
nsubj(moved-13, book-case-10)
prep_behind(find-22, book-case-10)
rcmod(book-case-10, moved-13)
det(wall-16, the-15)
prep_from(moved-13, wall-16)
prep_on(moved-13, hinges-18)
nsubj(find-22, she-20)
aux(find-22, would-21)
ccomp(told-3, find-22)
det(cabinet-24, the-23)
dobj(find-22, cabinet-24)
det(part-29, what-28)
prep_in(worn-48, part-29)
prep_of(part-29, it-31)
det(cup-33, the-32)
nsubj(worn-48, cup-33)
vmod(cup-33, wrapped-35)
det(piece-38, a-37)
prep_in(wrapped-35, piece-38)
nsubj(sleeve-46, piece-38)
prep_of(piece-38, silk-40)
aux(sleeve-46, had-42)
advmod(sleeve-46, once-43)
cop(sleeve-46, been-44)
det(sleeve-46, a-45)
rcmod(piece-38, sleeve-46)
ccomp(told-3, worn-48)
conj_and(find-22, worn-48)
nn(_-54, _-50)
nn(_-54, Mme.-51)
amod(_-54, de-52)
nn(_-54, Genlis-53)
prep_by(worn-48, _-54)
nsubj(make-59, _-54)
aux(make-59, did-57)
neg(make-59, not-58)
rcmod(_-54, make-59)
nsubj(wiser-62, Dawtie-60)
advmod(wiser-62, much-61)
xcomp(make-59, wiser-62)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD went))
      (, ,)
      (VP (VBD found)
        (NP (DT the) (NN chalice)))
      (, ,)
      (CC and)
      (VP (VBD brought)
        (NP (PRP it))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (NN laird))
            (VP (VBD lay)
              (S
                (VP
                  (VP (VBG straining)
                    (NP (PRP$ his) (NNS ears)))
                  (, ,)
                  (CC and)
                  (VP (VBG waiting)
                    (PP (IN for)
                      (NP (PRP it)))
                    (SBAR (IN as)
                      (S
                        (NP
                          (NP (DT a) (NN man))
                          (PP (IN at)
                            (NP
                              (NP (DT the) (NN point))
                              (PP (IN of)
                                (NP (NN death))))))
                        (VP (MD might)
                          (VP (VB await)
                            (NP (DT the) (JJ sacramental) (NN cup))
                            (PP (IN from)
                              (S
                                (VP (VBG absolving)
                                  (NP (NN priest)))))))))))))))))
    (. .)))

nsubj(went-2, She-1)
nsubj(found-4, She-1)
nsubj(brought-9, She-1)
root(ROOT-0, went-2)
conj_and(went-2, found-4)
det(chalice-6, the-5)
dobj(found-4, chalice-6)
conj_and(went-2, brought-9)
dobj(brought-9, it-10)
advmod(lay-14, where-11)
det(laird-13, the-12)
nsubj(lay-14, laird-13)
advcl(brought-9, lay-14)
ccomp(lay-14, straining-15)
poss(ears-17, his-16)
dobj(straining-15, ears-17)
ccomp(lay-14, waiting-20)
conj_and(straining-15, waiting-20)
prep_for(waiting-20, it-22)
mark(await-32, as-23)
det(man-25, a-24)
nsubj(await-32, man-25)
det(point-28, the-27)
prep_at(man-25, point-28)
prep_of(point-28, death-30)
aux(await-32, might-31)
advcl(waiting-20, await-32)
det(cup-35, the-33)
amod(cup-35, sacramental-34)
dobj(await-32, cup-35)
prepc_from(await-32, absolving-37)
dobj(absolving-37, priest-38)

(ROOT
  (S
    (NP (PRP$ His) (NNS hands))
    (VP (VBD trembled)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD took)
            (SBAR
              (S
                (NP (PRP it))
                (: ;)
                (SBAR (IN for)
                  (S
                    (NP (PRP they))
                    (VP (VBD were)
                      (NP
                        (NP (DT the) (NNS hands))
                        (PP (IN of)
                          (NP
                            (NP (DT a) (NN lover))
                            (: --)
                            (ADJP (JJ strange)
                              (PP (IN as)
                                (NP
                                  (NP (DT that) (NN love))
                                  (VP (VBD was))
                                  (, ,)
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (VP
                                        (CONJP (RB not) (RB merely))
                                        (VP (VBD looked)
                                          (PP (IN for)
                                            (NP (DT no) (NN return))))
                                        (, ,)
                                        (CC but)
                                        (VP (VBD desired)
                                          (S
                                            (VP (TO to)
                                              (VP (VB give)
                                                (ADJP (DT neither) (JJ pleasure)
                                                  (CC nor)
                                                  (JJ good)
                                                  (PP (TO to)
                                                    (NP (DT the) (NN thing))))))))))))))))))))
                (VP (VBD loved))))))))
    (. !)))

poss(hands-2, His-1)
nsubj(trembled-3, hands-2)
root(ROOT-0, trembled-3)
mark(took-6, as-4)
nsubj(took-6, he-5)
advcl(trembled-3, took-6)
nsubj(loved-43, it-7)
mark(hands-13, for-9)
nsubj(hands-13, they-10)
cop(hands-13, were-11)
det(hands-13, the-12)
parataxis(loved-43, hands-13)
det(lover-16, a-15)
prep_of(hands-13, lover-16)
amod(lover-16, strange-18)
det(love-21, that-20)
prep_as(strange-18, love-21)
nsubj(looked-27, love-21)
nsubj(desired-33, love-21)
nsubj(give-35, love-21)
vmod(love-21, was-22)
neg(merely-26, not-25)
preconj(looked-27, merely-26)
rcmod(love-21, looked-27)
neg(return-30, no-29)
prep_for(looked-27, return-30)
rcmod(love-21, desired-33)
conj_but(looked-27, desired-33)
aux(give-35, to-34)
xcomp(desired-33, give-35)
preconj(pleasure-37, neither-36)
acomp(give-35, pleasure-37)
acomp(give-35, good-39)
conj_nor(pleasure-37, good-39)
det(thing-42, the-41)
prep_to(pleasure-37, thing-42)
ccomp(took-6, loved-43)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT no) (NN love))
          (PP (IN of)
            (NP (DT the)
              (ADJP (RB merely) (JJ dead)))))
        (, ,)
        (CC but)
        (NP
          (NP (DT a) (NN love))
          (PP (IN of)
            (NP (DT the) (NN unliving))))))
    (. !)))

nsubj(love-4, It-1)
cop(love-4, was-2)
neg(love-4, no-3)
root(ROOT-0, love-4)
det(dead-8, the-6)
advmod(dead-8, merely-7)
prep_of(love-4, dead-8)
det(love-12, a-11)
conj_but(love-4, love-12)
det(unliving-15, the-14)
prep_of(love-12, unliving-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD pressed)
        (NP (DT the) (NN thing))
        (PP (TO to)
          (NP (PRP$ his) (NN bosom)))))
    (: ;)
    (S
      (ADVP (RB then))
      (, ,)
      (SBAR (RB as) (IN if)
        (S
          (VP
            (VP (VBD rebuked)
              (PP (IN by)
                (NP
                  (NP (DT the) (NN presence))
                  (PP (IN of)
                    (NP (NNP Dawtie))))))
            (, ,)
            (VP (VBD put)
              (NP (PRP it))
              (NP (DT a) (JJ little))
              (PP (IN from)
                (NP (PRP him))))
            (, ,)
            (CC and)
            (VP (VBD began)
              (S
                (VP (TO to)
                  (VP (VB pore)
                    (PRT (RP over))
                    (NP
                      (NP (DT every) (NN stone))
                      (, ,)
                      (NP
                        (NP (DT every) (NNP _) (NNP repoussé) (NNP _) (NN figure))
                        (PP (IN between)))
                      (, ,)
                      (CC and)
                      (NP
                        (NP (DT every) (JJ engraved) (NN ornament))
                        (PP (IN around)
                          (NP
                            (NP (DT the) (NNS gems))
                            (, ,)
                            (SBAR
                              (WHNP
                                (NP (DT each))
                                (WHPP (IN of)
                                  (WHNP (WDT which))))
                              (S
                                (NP (PRP he))
                                (VP (VBD knew))))
                            (, ,))))))))
              (PP (IN by)
                (NP (NN shape)))))))
      (, ,)
      (NP
        (NP (NN order))
        (, ,)
        (NP
          (NP (NN quality))
          (PP (IN of)
            (NP (NN color))))
        (, ,))
      (ADVP (RBR better) (IN than) (RB ever))
      (VP (VBP face)
        (PP (IN of)
          (NP (NN wife)
            (CC or)
            (NN child)))))
    (. .)))

nsubj(pressed-2, He-1)
root(ROOT-0, pressed-2)
det(thing-4, the-3)
dobj(pressed-2, thing-4)
poss(bosom-7, his-6)
prep_to(pressed-2, bosom-7)
advmod(face-68, then-9)
advmod(rebuked-13, as-11)
mark(rebuked-13, if-12)
advcl(face-68, rebuked-13)
det(presence-16, the-15)
prep_by(rebuked-13, presence-16)
prep_of(presence-16, Dawtie-18)
conj_and(rebuked-13, put-20)
advcl(face-68, put-20)
iobj(put-20, it-21)
det(little-23, a-22)
dobj(put-20, little-23)
prep_from(put-20, him-25)
conj_and(rebuked-13, began-28)
advcl(face-68, began-28)
aux(pore-30, to-29)
xcomp(began-28, pore-30)
prt(pore-30, over-31)
det(stone-33, every-32)
dobj(pore-30, stone-33)
det(figure-39, every-35)
nn(figure-39, _-36)
nn(figure-39, repoussé-37)
nn(figure-39, _-38)
dobj(pore-30, figure-39)
conj_and(stone-33, figure-39)
prep(figure-39, between-40)
det(ornament-45, every-43)
amod(ornament-45, engraved-44)
dobj(pore-30, ornament-45)
conj_and(stone-33, ornament-45)
det(gems-48, the-47)
prep_around(ornament-45, gems-48)
prep_of(each-50, gems-48)
dobj(knew-54, each-50)
nsubj(knew-54, he-53)
rcmod(gems-48, knew-54)
prep_by(began-28, shape-57)
nsubj(face-68, order-59)
appos(order-59, quality-61)
prep_of(quality-61, color-63)
advmod(than-66, better-65)
advmod(face-68, than-66)
advmod(than-66, ever-67)
parataxis(pressed-2, face-68)
prep_of(face-68, wife-70)
prep_of(face-68, child-72)
conj_or(wife-70, child-72)

(ROOT
  (S (CC But)
    (ADVP (RB soon))
    (S
      (S
        (NP (PRP$ his) (NNS hands))
        (VP (VBN sunk)
          (PP (IN on)
            (NP
              (NP (DT the) (NN counterpane))
              (PP (IN of)
                (NP (NN silk) (NN patchwork)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD lay)
          (ADVP (RB still))
          (, ,)
          (S
            (VP (VBG grasping)
              (ADVP (RB tight))
              (NP (DT the) (JJ precious) (NN thing)))))))
    (. .)))

advmod(sunk-5, soon-2)
poss(hands-4, his-3)
nsubj(sunk-5, hands-4)
root(ROOT-0, sunk-5)
det(counterpane-8, the-7)
prep_on(sunk-5, counterpane-8)
nn(patchwork-11, silk-10)
prep_of(counterpane-8, patchwork-11)
nsubj(lay-15, he-14)
conj_and(sunk-5, lay-15)
advmod(lay-15, still-16)
xcomp(lay-15, grasping-18)
advmod(grasping-18, tight-19)
det(thing-22, the-20)
amod(thing-22, precious-21)
dobj(grasping-18, thing-22)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD woke)
      (PP (IN with)
        (NP
          (NP (DT a) (NN start))
          (CC and)
          (NP (DT a) (NN cry))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB find)
            (S
              (NP (PRP it))
              (ADJP (JJ safe)
                (PP (IN in)
                  (NP (PDT both) (PRP$ his) (NNS hands)))))))))
    (. .)))

nsubj(woke-2, He-1)
nsubj(find-11, He-1)
root(ROOT-0, woke-2)
det(start-5, a-4)
prep_with(woke-2, start-5)
det(cry-8, a-7)
prep_with(woke-2, cry-8)
conj_and(start-5, cry-8)
aux(find-11, to-10)
xcomp(woke-2, find-11)
nsubj(safe-13, it-12)
xcomp(find-11, safe-13)
predet(hands-17, both-15)
poss(hands-17, his-16)
prep_in(safe-13, hands-17)

(ROOT
  (S (`` ``)
    (VP (VB Ugh))
    (. !) ('' '')))

root(ROOT-0, Ugh-2)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said) (: ;) (`` ``)
      (S
        (NP (PRP I))
        (VP (VBD thought)
          (SBAR
            (S
              (NP (DT some) (NN one))
              (VP (VBD had)
                (NP (PRP me))
                (PP (IN by)
                  (NP (DT the) (NN throat)))))))))
    (. !)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
nsubj(thought-6, I-5)
ccomp(said-2, thought-6)
det(one-8, some-7)
nsubj(had-9, one-8)
ccomp(thought-6, had-9)
dobj(had-9, me-10)
det(throat-13, the-12)
prep_by(had-9, throat-13)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD did) (RB n't)
        (VP (VB try)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (DT the) (NN cup))
                (PP (IN from)
                  (NP (PRP me)))))))))
    (: --)
    (SINV (VBD did)
      (NP
        (NP (PRP you))
        (, ,)
        (NP (NNP Dawtie))))
    (. ?) ('' '')))

nsubj(try-4, You-1)
nsubj(take-6, You-1)
aux(try-4, did-2)
neg(try-4, n't-3)
root(ROOT-0, try-4)
aux(take-6, to-5)
xcomp(try-4, take-6)
det(cup-8, the-7)
dobj(take-6, cup-8)
prep_from(take-6, me-10)
parataxis(try-4, did-12)
nsubj(did-12, you-13)
appos(you-13, Dawtie-15)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH No))
      (, ,)
      (NP (NN sir)))
    (, ,) ('' '')
    (VP (VBD answered)
      (NP
        (NP (NNP Dawtie))
        (: ;) (`` ``)
        (S
          (S
            (NP (PRP I))
            (VP (MD would) (RB not)
              (VP (VB care)
                (S
                  (VP (TO to)
                    (VP (VB take)
                      (NP (PRP it))
                      (PRT (RP out))
                      (PP (IN of)
                        (NP (PRP$ your) (NN hand)))))))))
          (, ,)
          (CC but)
          (S
            (NP (PRP I))
            (ADVP (RB _))
            (VP (MD should)
              (ADVP (RB _))
              (VP (VB be)
                (ADJP (JJ glad)
                  (S
                    (VP (TO to)
                      (VP (VB take)
                        (NP (PRP it))
                        (PRT (RP out))
                        (PP (IN of)
                          (NP (PRP$ your) (NN heart)))))))))))))
    (. !) ('' '')))

discourse(sir-4, No-2)
dep(answered-7, sir-4)
root(ROOT-0, answered-7)
dobj(answered-7, Dawtie-8)
nsubj(care-14, I-11)
nsubj(take-16, I-11)
aux(care-14, would-12)
neg(care-14, not-13)
dep(Dawtie-8, care-14)
aux(take-16, to-15)
xcomp(care-14, take-16)
dobj(take-16, it-17)
prt(take-16, out-18)
poss(hand-21, your-20)
prep_of(take-16, hand-21)
nsubj(glad-29, I-24)
nsubj(take-31, I-24)
advmod(glad-29, _-25)
aux(glad-29, should-26)
advmod(glad-29, _-27)
cop(glad-29, be-28)
dep(Dawtie-8, glad-29)
conj_but(care-14, glad-29)
aux(take-31, to-30)
xcomp(glad-29, take-31)
dobj(take-31, it-32)
poss(heart-36, your-35)
prep_out_of(take-31, heart-36)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (MD would))))
    (VP
      (ADVP (RB only))
      (VBP bury)
      (NP (PRP it))
      (PP (IN with)
        (NP (PRP me))))
    (. !) ('' '')))

mark(would-4, If-2)
nsubj(would-4, they-3)
csubj(bury-6, would-4)
advmod(bury-6, only-5)
root(ROOT-0, bury-6)
dobj(bury-6, it-7)
prep_with(bury-6, me-9)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD murmured) (, ,)
      (NP
        (NP (NNS heedless))
        (PP (IN of)
          (NP (PRP$ her) (NNS words)))))
    (. .)))

nsubj(murmured-2, he-1)
root(ROOT-0, murmured-2)
dobj(murmured-2, heedless-4)
poss(words-7, her-6)
prep_of(heedless-4, words-7)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (ADVP (RB sir))
    (. !)))

discourse(sir-4, Oh-2)
root(ROOT-0, sir-4)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB have)
      (S
        (NP (PRP it))
        (VP (VBG burning)
          (NP (PRP$ your) (NN heart))
          (PP (TO to)
            (NP (DT all) (NN eternity))))))
    (. ?)))

aux(have-3, Would-1)
nsubj(have-3, you-2)
root(ROOT-0, have-3)
nsubj(burning-5, it-4)
ccomp(have-3, burning-5)
poss(heart-7, your-6)
dobj(burning-5, heart-7)
det(eternity-10, all-9)
prep_to(burning-5, eternity-10)

(ROOT
  (S
    (S
      (VP
        (VP (VB Give)
          (NP (PRP it))
          (PRT (RP up))
          (, ,)
          (NP (NN sir)))
        (, ,)
        (CC and)
        (VP (VB take)
          (NP (DT the) (NN treasure) (NN thief))
          (ADVP (RB never)))))
    (VP (VBD stole))
    (. .) ('' '')))

csubj(stole-13, Give-1)
dobj(Give-1, it-2)
prt(Give-1, up-3)
dobj(Give-1, sir-5)
conj_and(Give-1, take-8)
csubj(stole-13, take-8)
det(thief-11, the-9)
nn(thief-11, treasure-10)
dobj(take-8, thief-11)
neg(take-8, never-12)
root(ROOT-0, stole-13)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Yes))
    (, ,)
    (ADVP (RB Dawtie))
    (, ,)
    (NP (RB yes))
    (. !)))

discourse(yes-6, Yes-2)
dep(yes-6, Dawtie-4)
root(ROOT-0, yes-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP (DT the) (JJ true) (NN treasure)))
    (. !) ('' '')))

nsubj(treasure-5, That-1)
cop(treasure-5, is-2)
det(treasure-5, the-3)
amod(treasure-5, true-4)
root(ROOT-0, treasure-5)

(ROOT
  (S (`` ``)
    (CC And)
    (S
      (S
        (VP (TO to)
          (VP (VB get)
            (NP (PRP it)))))
      (NP (PRP we))
      (VP (MD must)
        (VP (VB sell)
          (NP (DT all))
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (VP (VBP have)))))))
    (. !) ('' '')))

cc(sell-8, And-2)
aux(get-4, to-3)
dep(sell-8, get-4)
dobj(get-4, it-5)
nsubj(sell-8, we-6)
aux(sell-8, must-7)
root(ROOT-0, sell-8)
dobj(sell-8, all-9)
mark(have-12, that-10)
nsubj(have-12, we-11)
ccomp(sell-8, have-12)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP
      (VP (VBZ gives))
      (CC and)
      (VP (VBZ withholds)
        (SBAR (IN as)
          (S
            (NP (PRP He))
            (VP (VBZ sees)
              (ADJP (JJ fit)))))))
    (. .) ('' '')))

nsubj(gives-3, He-2)
nsubj(withholds-5, He-2)
root(ROOT-0, gives-3)
conj_and(gives-3, withholds-5)
mark(sees-8, as-6)
nsubj(sees-8, He-7)
advcl(withholds-5, sees-8)
acomp(sees-8, fit-9)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Then))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VB go)
            (PRT (RP down))
            (PP (IN into)
              (NP (DT the) (NNS blackness)))
            (, ,)
            (NP
              (NP (NN longing))
              (PP (IN for)
                (NP (DT the) (NN cup)))))))
      (NP (PRP you))
      (VP (MD will)
        (ADVP (RB never))
        (VP (VB see)
          (NP (JJR more)))))
    (, ,)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB complain)
        (PP (IN of)
          (NP (NNP God)))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD would) (RB not)
              (VP (VB give)
                (NP (PRP you))
                (NP (NN strength)
                  (S
                    (VP (TO to)
                      (VP (VB fling)
                        (NP (PRP it))
                        (PP (IN from)
                          (NP (PRP you)))))))))))))
    (. ?) ('' '')))

advmod(see-19, Then-2)
advmod(go-6, when-4)
nsubj(go-6, you-5)
advcl(see-19, go-6)
prt(go-6, down-7)
det(blackness-10, the-9)
prep_into(go-6, blackness-10)
dobj(go-6, longing-12)
det(cup-15, the-14)
prep_for(longing-12, cup-15)
nsubj(see-19, you-16)
aux(see-19, will-17)
neg(see-19, never-18)
ccomp(complain-24, see-19)
dobj(see-19, more-20)
nsubj(complain-24, you-22)
aux(complain-24, will-23)
root(ROOT-0, complain-24)
prep_of(complain-24, God-26)
mark(give-31, that-27)
nsubj(give-31, he-28)
aux(give-31, would-29)
neg(give-31, not-30)
ccomp(complain-24, give-31)
iobj(give-31, you-32)
dobj(give-31, strength-33)
aux(fling-35, to-34)
vmod(strength-33, fling-35)
dobj(fling-35, it-36)
prep_from(fling-35, you-38)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD hugged)
      (NP (DT the) (NN chalice)))
    (. .)))

nsubj(hugged-2, He-1)
root(ROOT-0, hugged-2)
det(chalice-4, the-3)
dobj(hugged-2, chalice-4)

(ROOT
  (S (`` ``)
    (VP (VB Fling)
      (NP (PRP it))
      (PP (IN from)
        (NP (PRP me))))
    (. !) ('' '')))

root(ROOT-0, Fling-2)
dobj(Fling-2, it-3)
prep_from(Fling-2, me-5)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD cried) (, ,)
      (ADVP (RB fiercely)))
    (. .)))

nsubj(cried-2, he-1)
root(ROOT-0, cried-2)
advmod(cried-2, fiercely-4)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Girl))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP are)
            (S
              (NP (PRP you))
              (VP (TO to)
                (VP (VB torment)
                  (NP (PRP me))
                  (PP (IN before)
                    (NP (PRP$ my) (NN time))))))))))
    (. !) ('' '')))

root(ROOT-0, Girl-2)
nsubj(are-5, Girl-2)
rcmod(Girl-2, are-5)
dobj(are-5, you-6)
nsubj(torment-8, you-6)
aux(torment-8, to-7)
xcomp(are-5, torment-8)
dobj(torment-8, me-9)
poss(time-12, my-11)
prep_before(torment-8, time-12)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Tell)
        (NP (PRP me))
        (, ,)
        (NP (NN sir))))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP (NNP Dawtie))
    (, ,) (`` ``)
    (S
      (SBAR
        (WHADVP (WRB why))
        (S
          (VP (VBZ does)
            (NP (DT the) (JJ apostle) (NN cry)))))
      (, ,) (`` `)
      (NP (NNP Awake))
      (VP (VBZ thou)
        (NP (DT that) (NN sleepest))))
    (. !) ('' ')))

ccomp(persisted-8, Tell-2)
dobj(Tell-2, me-3)
dobj(Tell-2, sir-5)
root(ROOT-0, persisted-8)
nsubj(persisted-8, Dawtie-9)
advmod(does-13, why-12)
advcl(thou-20, does-13)
det(cry-16, the-14)
amod(cry-16, apostle-15)
dobj(does-13, cry-16)
nsubj(thou-20, Awake-19)
dep(persisted-8, thou-20)
det(sleepest-22, that-21)
dobj(thou-20, sleepest-22)

(ROOT
  (SBAR (IN if)
    (S
      (NP (PRP they))
      (VP (MD could) (RB n't)
        (VP (VB move))))
    (. ?) ('' '')))

mark(move-5, if-1)
nsubj(move-5, they-2)
aux(move-5, could-3)
neg(move-5, n't-4)
root(ROOT-0, move-5)

(ROOT
  (S (`` ``)
    (NP (DT No) (CD one) (NNS _))
    (VP (MD can)
      (ADVP (RB _))
      (VP (VB move)
        (PP (IN without)
          (NP (NNP God)))))
    (. .) ('' '')))

neg(_-4, No-2)
num(_-4, one-3)
nsubj(move-7, _-4)
aux(move-7, can-5)
advmod(move-7, _-6)
root(ROOT-0, move-7)
prep_without(move-7, God-9)

(ROOT
  (S (`` ``)
    (ADVP (RB Therefore))
    (, ,)
    (S
      (S
        (VP (VBG seeing)
          (SBAR
            (S
              (NP (DT every) (NN one))
              (VP (MD can)
                (VP (VB move)))))))
      (, ,)
      (NP (PRP it))
      (VP (MD must)
        (VP (VB be)
          (NP
            (NP (NNP God))
            (VP (VBG giving)
              (NP (PRP him))
              (NP (DT the) (NN power)
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP he))
                          (VP (VBZ requires)
                            (PP (IN of)
                              (NP (PRP him)))))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP are)
        (ADJP (JJ fearfully)
          (S
            (VP (TO to)
              (VP (VB blame)
                (S (RB not)
                  (VP (VBG using)
                    (NP
                      (NP (DT the) (NN strength))
                      (SBAR
                        (S
                          (NP (NNP God))
                          (VP (VBZ gives)
                            (NP (PRP us))))))))))))))
    (. !) ('' '')))

advmod(God-13, Therefore-2)
vmod(God-13, seeing-4)
det(one-6, every-5)
nsubj(move-8, one-6)
aux(move-8, can-7)
ccomp(seeing-4, move-8)
nsubj(God-13, it-10)
aux(God-13, must-11)
cop(God-13, be-12)
root(ROOT-0, God-13)
vmod(God-13, giving-14)
iobj(giving-14, him-15)
det(power-17, the-16)
dobj(giving-14, power-17)
aux(do-19, to-18)
vmod(power-17, do-19)
dobj(requires-22, what-20)
nsubj(requires-22, he-21)
ccomp(do-19, requires-22)
prep_of(requires-22, him-24)
nsubj(fearfully-29, we-27)
nsubj(blame-31, we-27)
cop(fearfully-29, are-28)
conj_and(God-13, fearfully-29)
aux(blame-31, to-30)
xcomp(fearfully-29, blame-31)
neg(using-33, not-32)
xcomp(blame-31, using-33)
det(strength-35, the-34)
dobj(using-33, strength-35)
nsubj(gives-37, God-36)
rcmod(strength-35, gives-37)
dobj(gives-37, us-38)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB bear)
        (NP
          (NP (DT the) (NN strain))
          (PP (IN of)
            (NP (NN thinking))))))
    (. !) ('' '')))

nsubj(bear-5, I-2)
aux(bear-5, can-3)
neg(bear-5, not-4)
root(ROOT-0, bear-5)
det(strain-7, the-6)
dobj(bear-5, strain-7)
prep_of(strain-7, thinking-9)

(ROOT
  (S
    (VP (VBD gasped)
      (NP (DT the) (NN laird)))
    (. .)))

root(ROOT-0, gasped-1)
det(laird-3, the-2)
dobj(gasped-1, laird-3)

(ROOT
  (S (`` ``) (RB Then)
    (VP
      (VP (VBP give)
        (PRT (RP up))
        (NP (NN thinking)))
      (, ,)
      (CC and)
      (VP (VBP do)
        (NP (DT the) (NN thing))))
    (. !)))

advmod(give-3, Then-2)
root(ROOT-0, give-3)
prt(give-3, up-4)
dobj(give-3, thinking-5)
conj_and(give-3, do-8)
det(thing-10, the-9)
dobj(do-8, thing-10)

(ROOT
  (S
    (VP (VB Shall)
      (S
        (NP (PRP I))
        (VP (VB take)
          (NP (PRP it))
          (PP (IN for)
            (NP (PRP you))))))
    (. ?) ('' '')))

root(ROOT-0, Shall-1)
nsubj(take-3, I-2)
ccomp(Shall-1, take-3)
dobj(take-3, it-4)
prep_for(take-3, you-6)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD put)
      (PRT (RP out))
      (NP (PRP$ her) (NN hand))
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD spoke)))))
    (. .)))

nsubj(put-2, She-1)
root(ROOT-0, put-2)
prt(put-2, out-3)
poss(hand-5, her-4)
dobj(put-2, hand-5)
mark(spoke-8, as-6)
nsubj(spoke-8, she-7)
advcl(put-2, spoke-8)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. !)))

root(ROOT-0, No-2)

(ROOT
  (ADVP (RB no) (. !) ('' '')))

root(ROOT-0, no-1)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD cried) (, ,)
      (S
        (VP (VBG grasping)
          (NP (DT the) (NN cup) (JJR tighter)))))
    (. .)))

nsubj(cried-2, he-1)
root(ROOT-0, cried-2)
xcomp(cried-2, grasping-4)
det(tighter-7, the-5)
dep(tighter-7, cup-6)
dobj(grasping-4, tighter-7)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD shall) (RB not)
      (VP (VB touch)
        (NP (PRP it))))
    (. !)))

nsubj(touch-5, You-2)
aux(touch-5, shall-3)
neg(touch-5, not-4)
root(ROOT-0, touch-5)
dobj(touch-5, it-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD would)
      (VP (VB give)
        (NP (PRP it))
        (PP (TO to)
          (NP (DT the) (NN earl)))))
    (. !)))

nsubj(give-3, You-1)
aux(give-3, would-2)
root(ROOT-0, give-3)
dobj(give-3, it-4)
det(earl-7, the-6)
prep_to(give-3, earl-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (NP (PRP you)))
    (. !)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
dobj(know-2, you-3)

(ROOT
  (S
    (NP (NNP Saints))
    (VP (VBP hate)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ is)
            (ADJP (JJ beautiful))))))
    (. !) ('' '')))

nsubj(hate-2, Saints-1)
root(ROOT-0, hate-2)
nsubj(beautiful-5, what-3)
cop(beautiful-5, is-4)
ccomp(hate-2, beautiful-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP like)
      (ADVP (RBR better))
      (S
        (VP (TO to)
          (VP (VB look)
            (PP (IN at)
              (NP
                (NP (NNS things))
                (PP (IN in)
                  (NP
                    (NP (PRP$ my) (NN Father) (POS 's))
                    (NN hand)))))
            (PP (IN than)
              (PP (IN in)
                (NP (PRP$ my) (JJ own))))))))
    (. !) ('' '')))

nsubj(like-3, I-2)
nsubj(look-6, I-2)
root(ROOT-0, like-3)
advmod(like-3, better-4)
aux(look-6, to-5)
xcomp(like-3, look-6)
prep_at(look-6, things-8)
poss(Father-11, my-10)
poss(hand-13, Father-11)
prep_in(things-8, hand-13)
prep(look-6, than-14)
pcomp(than-14, in-15)
poss(own-17, my-16)
pobj(in-15, own-17)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP$ my) (NN cup)))))))
    (: --)
    (S
      (NP (PRP it))
      (ADVP (RB _))
      (VP (VBZ is)
        (VP (VBG _)
          (NP (PRP$ my) (NN cup)))))
    (. !)))

nsubj(want-3, You-2)
nsubj(see-5, You-2)
root(ROOT-0, want-3)
aux(see-5, to-4)
xcomp(want-3, see-5)
poss(cup-7, my-6)
dobj(see-5, cup-7)
nsubj(_-12, it-9)
advmod(_-12, _-10)
aux(_-12, is-11)
parataxis(want-3, _-12)
poss(cup-14, my-13)
dobj(_-12, cup-14)

(ROOT
  (S
    (LST (: --))
    (PP (IN in)
      (NP
        (NP (DT the) (NNS hands))
        (PP (IN of)
          (NP (DT that) (JJ spendthrift) (NN fool)))))
    (, ,)
    (NP (NNP Lord))
    (VP (VBD Borland))
    (. !) ('' '')))

det(hands-4, the-3)
prep_in(Borland-11, hands-4)
det(fool-8, that-6)
amod(fool-8, spendthrift-7)
prep_of(hands-4, fool-8)
nsubj(Borland-11, Lord-10)
root(ROOT-0, Borland-11)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (PP (IN in)
        (NP
          (NP
            (NP (DT the) (NNP Father) (POS 's))
            (NN hand))
          (, ,)
          (SBAR
            (WHNP (WP whoever))
            (S
              (VP (VBZ has)
                (NP (PRP it))))))))
    (. !) ('' '')))

nsubj(is-3, It-2)
root(ROOT-0, is-3)
det(Father-6, the-5)
poss(hand-8, Father-6)
prep_in(is-3, hand-8)
nsubj(has-11, whoever-10)
rcmod(hand-8, has-11)
dobj(has-11, it-12)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Hold)
        (NP (PRP$ your) (NN tongue))
        (, ,)
        (NP (NNP Dawtie))))
    (, ,)
    (CC or)
    (S
      (NP (PRP I))
      (VP
        (VP (MD will)
          (VP (VB cry)
            (PRT (RP out))))
        (CC and)
        (VP (VBP wake)
          (NP (DT the) (NN house)))))
    (. !) ('' '')))

root(ROOT-0, Hold-2)
poss(tongue-4, your-3)
dobj(Hold-2, tongue-4)
dobj(Hold-2, Dawtie-6)
nsubj(cry-11, I-9)
nsubj(wake-14, I-9)
aux(cry-11, will-10)
conj_or(Hold-2, cry-11)
prt(cry-11, out-12)
conj_or(Hold-2, wake-14)
conj_and(cry-11, wake-14)
det(house-16, the-15)
dobj(wake-14, house-16)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (MD will)
      (VP
        (VP (VB think)
          (NP (PRP you))
          (PRT (RP out))
          (PP (IN of)
            (NP (PRP$ your) (NN mind))))
        (, ,)
        (CC and)
        (VP (VB come)
          (CC and)
          (VB take)
          (NP (DT the) (NN cup))
          (PP (IN from)
            (NP (PRP you))))))
    (. !)))

nsubj(think-4, They-2)
nsubj(come-12, They-2)
aux(think-4, will-3)
root(ROOT-0, think-4)
dobj(think-4, you-5)
poss(mind-9, your-8)
prep_out_of(think-4, mind-9)
conj_and(think-4, come-12)
conj_and(think-4, take-14)
conj_and(come-12, take-14)
det(cup-16, the-15)
dobj(come-12, cup-16)
prep_from(come-12, you-18)

(ROOT
  (S
    (S
      (NP (NNP Do))
      (VP (VBD let)
        (SBAR
          (S
            (NP (PRP me))
            (VP (VBD put)
              (NP (PRP it))
              (ADVP (RB away)))))))
    (: ;) (RB then)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB go)
          (S
            (VP (TO to)
              (VP (VB sleep)))))))
    (. .) ('' '')))

nsubj(let-2, Do-1)
root(ROOT-0, let-2)
nsubj(put-4, me-3)
ccomp(let-2, put-4)
dobj(put-4, it-5)
advmod(put-4, away-6)
advmod(let-2, then-8)
nsubj(go-11, you-9)
nsubj(sleep-13, you-9)
aux(go-11, will-10)
parataxis(let-2, go-11)
aux(sleep-13, to-12)
xcomp(go-11, sleep-13)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB trust)
          (NP (PRP you))
          (PP (IN with)
            (NP (PRP it))))))
    (. !)))

nsubj(will-3, I-2)
root(ROOT-0, will-3)
neg(will-3, not-4)
nsubj(trust-9, I-6)
aux(trust-9, can-7)
neg(trust-9, not-8)
parataxis(will-3, trust-9)
dobj(trust-9, you-10)
prep_with(trust-9, it-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (VP (VBN destroyed)
        (NP (PRP$ my) (NN confidence))
        (PP (IN in)
          (NP (PRP you)))))
    (. !)))

nsubj(destroyed-3, You-1)
aux(destroyed-3, have-2)
root(ROOT-0, destroyed-3)
poss(confidence-5, my-4)
dobj(destroyed-3, confidence-5)
prep_in(destroyed-3, you-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB _))
      (VP (MD may)
        (ADVP (RB _))
        (VP (VB fall)
          (ADJP (RB asleep)))))
    (, ,)
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP$ your) (NN hand))
          (VP (VBP come)
            (PP (IN within)
              (NP
                (NP (DT a) (NN foot))
                (PP (IN of)
                  (NP (DT the) (NN cup))))))))
      (, ,)
      (NP (PRP it))
      (VP (MD will)
        (VP (VB wake)
          (NP (PRP me)))))
    (. !)))

nsubj(fall-5, I-1)
advmod(fall-5, _-2)
aux(fall-5, may-3)
advmod(fall-5, _-4)
root(ROOT-0, fall-5)
acomp(fall-5, asleep-6)
mark(come-12, if-9)
poss(hand-11, your-10)
nsubj(come-12, hand-11)
advcl(wake-22, come-12)
det(foot-15, a-14)
prep_within(come-12, foot-15)
det(cup-18, the-17)
prep_of(foot-15, cup-18)
nsubj(wake-22, it-20)
aux(wake-22, will-21)
conj_but(fall-5, wake-22)
dobj(wake-22, me-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD will)))))
    (. !)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubj(will-4, it-3)
ccomp(know-2, will-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB sleep)
          (PP (IN with)
            (NP
              (NP (PRP$ my) (NN heart))
              (PP (IN in)
                (NP (DT the) (NN cup))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJS least) (NN touch))
      (VP (MD will)
        (VP (VB wake)
          (NP (PRP me)))))
    (. !) ('' '')))

nsubj(sleep-3, I-1)
aux(sleep-3, shall-2)
root(ROOT-0, sleep-3)
poss(heart-6, my-5)
prep_with(sleep-3, heart-6)
det(cup-9, the-8)
prep_in(heart-6, cup-9)
det(touch-14, the-12)
amod(touch-14, least-13)
nsubj(wake-16, touch-14)
aux(wake-16, will-15)
conj_and(sleep-3, wake-16)
dobj(wake-16, me-17)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD would)
            (VP (VB let)
              (S
                (NP (NNP Andrew) (NNP Ingram))
                (VP (VB come)
                  (CC and)
                  (VB see)
                  (NP (PRP you))))))))
      (, ,)
      (ADVP (RB sir)))
    (. !) ('' '')))

nsubj(wish-3, I-2)
root(ROOT-0, wish-3)
nsubj(let-6, you-4)
aux(let-6, would-5)
ccomp(wish-3, let-6)
nn(Ingram-8, Andrew-7)
nsubj(come-9, Ingram-8)
nsubj(see-11, Ingram-8)
ccomp(let-6, come-9)
ccomp(let-6, see-11)
conj_and(come-9, see-11)
dobj(come-9, you-12)
advmod(wish-3, sir-14)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (DT the) (NN matter))
        (PP (IN with)
          (S
            (VP (VBG _)
              (NP (PRP him)))))))
    (. ?)))

root(ROOT-0, What-2)
cop(What-2, 's-3)
det(matter-5, the-4)
nsubj(What-2, matter-5)
prepc_with(matter-5, _-7)
dobj(_-7, him-8)

(ROOT
  (S
    (S
      (VP (VBG _) ('' '')
        (NP
          (NP (`` ``) (NN Nothing))
          (SBAR
            (S
              (VP (VBZ 's)
                (NP (DT the) (NN matter))))))
        (PP (IN with)
          (NP (PRP him)))
        (, ,)
        (ADVP (RB sir))))
    (: ;)
    (S (CC but)
      (NP (PRP he))
      (VP (VBZ helps)
        (NP (NN everybody))
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ right))))))))))
    (. .) ('' '')))

root(ROOT-0, _-1)
dobj(_-1, Nothing-4)
cop(matter-7, 's-5)
det(matter-7, the-6)
rcmod(Nothing-4, matter-7)
prep_with(_-1, him-9)
advmod(_-1, sir-11)
cc(helps-15, but-13)
nsubj(helps-15, he-14)
parataxis(_-1, helps-15)
dobj(helps-15, everybody-16)
aux(do-18, to-17)
vmod(helps-15, do-18)
nsubj(right-21, what-19)
cop(right-21, is-20)
ccomp(do-18, right-21)

(ROOT
  (S (`` ``)
    (NP (NNP Conceited))
    (VP (VBP rascal))
    (. !)))

nsubj(rascal-3, Conceited-2)
root(ROOT-0, rascal-3)

(ROOT
  (S
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB take)
          (NP (PRP me))
          (PP (IN for)
            (NP (DT a) (NN maniac)))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP talk)
                (NP (JJ such) (NN foolery))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-1)
nsubj(take-3, you-2)
ccomp(Do-1, take-3)
dobj(take-3, me-4)
det(maniac-7, a-6)
prep_for(take-3, maniac-7)
mark(talk-10, that-8)
nsubj(talk-10, you-9)
ccomp(take-3, talk-10)
amod(foolery-12, such-11)
dobj(talk-10, foolery-12)

(ROOT
  (S
    (NP (PRP$ His) (NN look))
    (VP (VBD was)
      (ADJP (RB so) (JJ wild)
        (PRN (, ,)
          (S
            (NP (PRP$ his) (JJ old) (NN blue))
            (VP (VBD faded)
              (NP
                (NP (NNS eyes))
                (VP (VBN gleamed)
                  (PP (IN with)
                    (NP
                      (NP (PDT such) (DT a) (NN light))
                      (PP (IN of)
                        (NP (JJ mingled) (NN fear)
                          (CC and)
                          (NN determination)))))))))
          (, ,))
        (SBAR (IN that)
          (S
            (NP (NNP Dawtie))
            (VP (VBD was)
              (ADJP (RB almost) (JJ sorry)
                (SBAR
                  (S
                    (NP (PRP she))
                    (VP (VBD had)
                      (VP (VBN spoken)))))))))))
    (. .)))

poss(look-2, His-1)
nsubj(wild-5, look-2)
cop(wild-5, was-3)
advmod(wild-5, so-4)
root(ROOT-0, wild-5)
poss(blue-9, his-7)
amod(blue-9, old-8)
nsubj(faded-10, blue-9)
dep(wild-5, faded-10)
dobj(faded-10, eyes-11)
vmod(eyes-11, gleamed-12)
predet(light-16, such-14)
det(light-16, a-15)
prep_with(gleamed-12, light-16)
amod(fear-19, mingled-18)
prep_of(light-16, fear-19)
prep_of(light-16, determination-21)
conj_and(fear-19, determination-21)
mark(sorry-27, that-23)
nsubj(sorry-27, Dawtie-24)
cop(sorry-27, was-25)
advmod(sorry-27, almost-26)
ccomp(wild-5, sorry-27)
nsubj(spoken-30, she-28)
aux(spoken-30, had-29)
ccomp(sorry-27, spoken-30)

(ROOT
  (S
    (PP (IN With)
      (S
        (VP (VBG trembling)
          (NP (NNS hands)))))
    (NP (PRP he))
    (VP
      (VP (VBD drew)
        (NP (DT the) (NN cup))
        (PP (IN within)
          (NP (DT the) (NNS bed-clothes))))
      (, ,)
      (CC and)
      (VP (VBD lay)
        (ADVP (RB still))))
    (. .)))

prepc_with(drew-5, trembling-2)
dobj(trembling-2, hands-3)
nsubj(drew-5, he-4)
nsubj(lay-13, he-4)
root(ROOT-0, drew-5)
det(cup-7, the-6)
dobj(drew-5, cup-7)
det(bed-clothes-10, the-9)
prep_within(drew-5, bed-clothes-10)
conj_and(drew-5, lay-13)
advmod(lay-13, still-14)

(ROOT
  (FRAG
    (SBAR (IN If)
      (S
        (NP (DT the) (NN morning))
        (VP (MD would)
          (ADVP (CC but))
          (VP
            (VP (VB come))
            (, ,)
            (CC and)
            (VP (VB bring)
              (NP (NNP George) (NNP Crawford)))))))
    (. !)))

mark(come-6, If-1)
det(morning-3, the-2)
nsubj(come-6, morning-3)
nsubj(bring-9, morning-3)
aux(come-6, would-4)
advmod(come-6, but-5)
root(ROOT-0, come-6)
conj_and(come-6, bring-9)
nn(Crawford-11, George-10)
dobj(bring-9, Crawford-11)

(ROOT
  (S
    (S
      (VP (VBG _)
        (S
          (NP (PRP He))
          (ADJP (JJ _)))))
    (VP (MD would)
      (VP
        (VP (VB restore)
          (NP (DT the) (NN cup))
          (PP (TO to)
            (NP (PRP$ its) (NN place))))
        (, ,)
        (CC or)
        (VP (VB hide)
          (NP (PRP it))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP he))
              (VP (MD should)
                (VP (VB know)
                  (NP (PRP it))
                  (UCP
                    (ADJP (JJ safe))
                    (CC and)
                    (RB not)
                    (ADJP (RB far)
                      (PP (IN from)
                        (NP (PRP him))))))))))))
    (. !)))

csubj(restore-5, _-1)
csubj(hide-13, _-1)
nsubj(_-3, He-2)
xcomp(_-1, _-3)
aux(restore-5, would-4)
root(ROOT-0, restore-5)
det(cup-7, the-6)
dobj(restore-5, cup-7)
poss(place-10, its-9)
prep_to(restore-5, place-10)
conj_or(restore-5, hide-13)
dobj(hide-13, it-14)
advmod(know-18, where-15)
nsubj(know-18, he-16)
aux(know-18, should-17)
advcl(hide-13, know-18)
dobj(know-18, it-19)
acomp(know-18, safe-20)
acomp(know-18, not-22)
conj_and(safe-20, not-22)
neg(safe-20, not-22)
prep_far_from(safe-20, him-25)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD sat)
        (NP (NNS motionless))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJ old) (NN man))
      (VP (VBD fell)
        (PP (IN into)
          (NP (DT another) (JJ feverish) (NN doze)))))
    (. .)))

nsubj(sat-2, Dawtie-1)
root(ROOT-0, sat-2)
dobj(sat-2, motionless-3)
det(man-8, the-6)
amod(man-8, old-7)
nsubj(fell-9, man-8)
conj_and(sat-2, fell-9)
det(doze-13, another-11)
amod(doze-13, feverish-12)
prep_into(fell-9, doze-13)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD dared) (RB not)
      (VP (VB stir)
        (SBAR (IN lest)
          (S
            (NP (PRP he))
            (VP (MD should)
              (VP (VB start)
                (PRT (RP away))
                (S
                  (VP (TO to)
                    (VP (VB defend)
                      (NP (PRP$ his) (NN idol)))))))))))
    (. .)))

nsubj(dared-2, She-1)
root(ROOT-0, dared-2)
neg(dared-2, not-3)
dep(dared-2, stir-4)
mark(start-8, lest-5)
nsubj(start-8, he-6)
nsubj(defend-11, he-6)
aux(start-8, should-7)
advcl(stir-4, start-8)
prt(start-8, away-9)
aux(defend-11, to-10)
xcomp(start-8, defend-11)
poss(idol-13, his-12)
dobj(defend-11, idol-13)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD sat)
      (PP (IN like)
        (NP (DT an) (NN image)))
      (, ,)
      (S
        (VP (VBG moving)
          (ADVP (RB only))
          (NP (PRP$ her) (NNS eyes)))))
    (. .)))

nsubj(sat-2, She-1)
root(ROOT-0, sat-2)
det(image-5, an-4)
prep_like(sat-2, image-5)
xcomp(sat-2, moving-7)
advmod(moving-7, only-8)
poss(eyes-10, her-9)
dobj(moving-7, eyes-10)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP are)
      (NP
        (NP (NN you) (RB about))
        (, ,)
        (NP (NNP Dawtie))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, are-3)
nsubj(What-2, you-4)
advmod(you-4, about-5)
appos(you-4, Dawtie-7)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said)
      (PP (IN at)
        (NP (NN length))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
prep_at(said-2, length-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP are)
        (PP (IN after)
          (NP (DT some) (NN mischief)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (RB so) (JJ quiet)))
    (. !) ('' '')))

nsubj(are-3, You-2)
ccomp(quiet-11, are-3)
det(mischief-6, some-5)
prep_after(are-3, mischief-6)
nsubj(quiet-11, you-8)
cop(quiet-11, are-9)
advmod(quiet-11, so-10)
root(ROOT-0, quiet-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG telling)
        (NP
          (NP (NNP God))
          (SBAR
            (WHNP (WRB how) (JJ good))
            (S
              (NP (PRP you))
              (VP (MD would)
                (VP
                  (VP (VB be)
                    (SBAR (IN if)
                      (S
                        (NP (PRP he))
                        (VP
                          (VP (MD could)
                            (VP (VB get)
                              (S
                                (NP (PRP you))
                                (VP (TO to)
                                  (VP (VB give)
                                    (PRT (RP up))
                                    (NP (PRP$ your) (NNS odds)))))))
                          (CC and)
                          (VP (VBZ ends))))))
                  (, ,)
                  (CC and)
                  (VP (VB take)
                    (NP (PRP Him))
                    (ADVP (RB instead))))))))))
    (. .) ('' '')))

nsubj(telling-4, I-2)
aux(telling-4, was-3)
root(ROOT-0, telling-4)
dobj(telling-4, God-5)
advmod(good-7, how-6)
advmod(be-10, good-7)
nsubj(be-10, you-8)
nsubj(take-25, you-8)
aux(be-10, would-9)
rcmod(God-5, be-10)
mark(get-14, if-11)
nsubj(get-14, he-12)
nsubj(ends-22, he-12)
aux(get-14, could-13)
advcl(be-10, get-14)
dobj(get-14, you-15)
nsubj(give-17, you-15)
aux(give-17, to-16)
xcomp(get-14, give-17)
prt(give-17, up-18)
poss(odds-20, your-19)
dobj(give-17, odds-20)
advcl(be-10, ends-22)
conj_and(get-14, ends-22)
rcmod(God-5, take-25)
conj_and(be-10, take-25)
dobj(take-25, Him-26)
advmod(take-25, instead-27)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB How))
      (S
        (VP (VBD dared))))
    (NP (PRP you))
    (VP (VBP say)
      (NP (PDT such) (DT a) (NN thing))
      (, ,)
      (S
        (VP (VBG sitting)
          (ADVP (RB there))
          (PP (IN by)
            (NP (PRP$ my) (NN side))))))
    (. !)))

advmod(dared-3, How-2)
advcl(say-5, dared-3)
nsubj(say-5, you-4)
root(ROOT-0, say-5)
predet(thing-8, such-6)
det(thing-8, a-7)
dobj(say-5, thing-8)
vmod(say-5, sitting-10)
advmod(sitting-10, there-11)
poss(side-14, my-13)
agent(sitting-10, side-14)

(ROOT
  (S
    (NP
      (NP (NNP Are) (NNP _))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBZ _)
            (S
              (VP (TO to)
                (VP (VB say)
                  (S
                    (VP (TO to)
                      (VP (VB _)
                        (NP (PRP Him))))))))))))
    (VP (VBZ _)
      (SBAR (IN that)
        (S
          (NP (DT any) (NN sinner))
          (VP (MD would)
            (VP (VB be)
              (ADJP (JJ good))
              (, ,)
              (SBAR (IN if)
                (S
                  (NP (PRP He))
                  (VP (MD would)
                    (ADVP (RB only))
                    (VP (VB do)
                      (ADVP (RB so)
                        (CC and)
                        (RB so))
                      (PP (IN with)
                        (NP (PRP him))))))))))))
    (. !)))

nn(_-2, Are-1)
nsubj(_-10, _-2)
nsubj(_-4, you-3)
nsubj(say-6, you-3)
nsubj(_-8, you-3)
rcmod(_-2, _-4)
aux(say-6, to-5)
xcomp(_-4, say-6)
aux(_-8, to-7)
xcomp(say-6, _-8)
dobj(_-8, Him-9)
root(ROOT-0, _-10)
mark(good-16, that-11)
det(sinner-13, any-12)
nsubj(good-16, sinner-13)
aux(good-16, would-14)
cop(good-16, be-15)
ccomp(_-10, good-16)
mark(do-22, if-18)
nsubj(do-22, He-19)
aux(do-22, would-20)
advmod(do-22, only-21)
advcl(good-16, do-22)
advmod(do-22, so-23)
advmod(do-22, so-25)
conj_and(so-23, so-25)
prep_with(do-22, him-27)

(ROOT
  (NP
    (NP
      (NP (NNP Tremble))
      (, ,)
      (NP (NN girl))
      (, ,))
    (PP (IN at)
      (NP
        (NP (DT the) (NN vengeance))
        (PP (IN of)
          (NP (DT the) (NNP Almighty)))))
    (. !) ('' '')))

root(ROOT-0, Tremble-1)
appos(Tremble-1, girl-3)
det(vengeance-7, the-6)
prep_at(Tremble-1, vengeance-7)
det(Almighty-10, the-9)
prep_of(vengeance-7, Almighty-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (VBP are)
        (VP (VBN told)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (NNS prayers)
                  (CC and)
                  (NNS intercessions))
                (PP (IN for)
                  (NP (DT all) (NNS men)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBG saying)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (MD could)
                (PP (IN for)
                  (NP (PRP you)))))))))
    (. .) ('' '')))

nsubjpass(told-4, We-2)
nsubj(make-6, We-2)
auxpass(told-4, are-3)
root(ROOT-0, told-4)
aux(make-6, to-5)
xcomp(told-4, make-6)
dobj(make-6, prayers-7)
dobj(make-6, intercessions-9)
conj_and(prayers-7, intercessions-9)
det(men-12, all-11)
prep_for(make-6, men-12)
nsubj(saying-17, I-15)
aux(saying-17, was-16)
conj_and(told-4, saying-17)
dobj(could-20, what-18)
nsubj(could-20, I-19)
ccomp(saying-17, could-20)
prep_for(could-20, you-22)

(ROOT
  (S
    (S
      (NP (DT The) (NN laird))
      (VP (VBD was)
        (ADJP (JJ silent))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN rest))
        (PP (IN of)
          (NP (DT the) (NN night))))
      (VP (VBD passed)
        (ADVP (RB quietly))))
    (. .)))

det(laird-2, The-1)
nsubj(silent-4, laird-2)
cop(silent-4, was-3)
root(ROOT-0, silent-4)
det(rest-8, the-7)
nsubj(passed-12, rest-8)
det(night-11, the-10)
prep_of(rest-8, night-11)
conj_and(silent-4, passed-12)
advmod(passed-12, quietly-13)

(ROOT
  (S
    (S
      (NP
        (NP (PRP$ His) (JJ first) (NNS words))
        (PP (IN in)
          (NP (DT the) (NN morning))))
      (VP (VBD were)))
    (: :) (`` ``)
    (S
      (S
        (VP (VB Go)
          (CC and)
          (VB tell)
          (NP (PRP$ your) (NN mistress))))
      (NP (PRP I))
      (VP (VBP want)
        (NP (PRP her))))
    (. .) ('' '')))

poss(words-3, His-1)
amod(words-3, first-2)
nsubj(were-7, words-3)
det(morning-6, the-5)
prep_in(words-3, morning-6)
root(ROOT-0, were-7)
dep(want-16, Go-10)
conj_and(Go-10, tell-12)
dep(want-16, tell-12)
poss(mistress-14, your-13)
dobj(Go-10, mistress-14)
nsubj(want-16, I-15)
parataxis(were-7, want-16)
dobj(want-16, her-17)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP$ his) (NN daughter))
        (VP (VBD came))))
    (, ,)
    (NP (PRP he))
    (VP (VBD told)
      (S
        (NP (PRP her))
        (VP (TO to)
          (VP (VB send)
            (PP (IN for)
              (NP (NNP George) (NNP Crawford)))))))
    (. .)))

advmod(came-4, When-1)
poss(daughter-3, his-2)
nsubj(came-4, daughter-3)
advcl(told-7, came-4)
nsubj(told-7, he-6)
root(ROOT-0, told-7)
dobj(told-7, her-8)
nsubj(send-10, her-8)
aux(send-10, to-9)
xcomp(told-7, send-10)
nn(Crawford-13, George-12)
prep_for(send-10, Crawford-13)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (ADJP (JJR worse))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD said))
      (, ,)
      (CC and)
      (VP (VBD wanted)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP him)))))))
    (. .)))

nsubj(worse-3, He-1)
cop(worse-3, was-2)
ccomp(said-6, worse-3)
nsubj(said-6, he-5)
nsubj(wanted-9, he-5)
nsubj(see-11, he-5)
root(ROOT-0, said-6)
conj_and(said-6, wanted-9)
aux(see-11, to-10)
xcomp(wanted-9, see-11)
dobj(see-11, him-12)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD thought)
      (NP (PRP it))
      (PRT (RBS best))
      (S
        (VP (TO to)
          (VP (VB send)
            (NP
              (NP (NNP Dawtie))
              (PP (IN with)
                (NP (DT the) (NN message)))))))
      (PP (IN by)
        (NP (DT the) (JJ next) (NN train))))
    (. .)))

nsubj(thought-2, Alexa-1)
root(ROOT-0, thought-2)
dobj(thought-2, it-3)
prt(thought-2, best-4)
aux(send-6, to-5)
vmod(thought-2, send-6)
dobj(send-6, Dawtie-7)
det(message-10, the-9)
prep_with(Dawtie-7, message-10)
det(train-14, the-12)
amod(train-14, next-13)
prep_by(thought-2, train-14)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD did) (RB not)
      (VP (VB relish)
        (NP (DT the) (NN mission))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP she))
            (VP
              (VP (VBD had)
                (NP
                  (NP (DT no) (NN faith))
                  (PP (IN in)
                    (NP (NNP Crawford)))))
              (, ,)
              (CC and)
              (VP (VBD did) (RB not)
                (VP (VB like)
                  (NP (PRP$ his) (NN influence))
                  (PP (IN on)
                    (NP (PRP$ her) (NN master))))))))))
    (. .)))

nsubj(relish-4, Dawtie-1)
aux(relish-4, did-2)
neg(relish-4, not-3)
root(ROOT-0, relish-4)
det(mission-6, the-5)
dobj(relish-4, mission-6)
mark(had-10, for-8)
nsubj(had-10, she-9)
nsubj(like-19, she-9)
advcl(relish-4, had-10)
neg(faith-12, no-11)
dobj(had-10, faith-12)
prep_in(faith-12, Crawford-14)
aux(like-19, did-17)
neg(like-19, not-18)
advcl(relish-4, like-19)
conj_and(had-10, like-19)
poss(influence-21, his-20)
dobj(like-19, influence-21)
poss(master-24, her-23)
prep_on(like-19, master-24)

(ROOT
  (S
    (S (RB Not)
      (SBAR
        (X (DT the) (JJR less))
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP she))
              (VP (VBD reached)
                (NP (PRP$ his) (NN hotel)))))
          (, ,)
          (NP (PRP she))
          (VP (VBD insisted)
            (PP (IN on)
              (S
                (VP
                  (VP (VBG seeing)
                    (NP (PRP him)))
                  (CC and)
                  (VP (VBG giving)
                    (NP (PRP$ her) (NN message))
                    (PP (IN in)
                      (NP
                        (NP (NN person))
                        (: ;)
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBN done)))))))))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD made)
        (NP (NN haste))
        (PP (IN for)
          (NP (DT the) (JJ first) (NN train)))
        (ADVP (RB back))))
    (: :)
    (S
      (NP (PRP they))
      (VP (MD could) (RB not)
        (VP (VB do)
          (ADVP (RB well))
          (PP (IN without)
            (NP (PRP her))))))
    (. !)))

neg(made-26, Not-1)
det(less-3, the-2)
dep(insisted-11, less-3)
advmod(reached-6, when-4)
nsubj(reached-6, she-5)
advcl(insisted-11, reached-6)
poss(hotel-8, his-7)
dobj(reached-6, hotel-8)
nsubj(insisted-11, she-10)
advcl(made-26, insisted-11)
prepc_on(insisted-11, seeing-13)
dobj(seeing-13, him-14)
prepc_on(insisted-11, giving-16)
conj_and(seeing-13, giving-16)
poss(message-18, her-17)
dobj(giving-16, message-18)
prep_in(giving-16, person-20)
nsubj(done-23, person-20)
rcmod(person-20, done-23)
nsubj(made-26, she-25)
root(ROOT-0, made-26)
dobj(made-26, haste-27)
det(train-31, the-29)
amod(train-31, first-30)
prep_for(made-26, train-31)
advmod(made-26, back-32)
nsubj(do-37, they-34)
aux(do-37, could-35)
neg(do-37, not-36)
parataxis(made-26, do-37)
advmod(do-37, well-38)
prep_without(do-37, her-40)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP she))
        (VP (VBD arrived))))
    (, ,)
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (NNP Mr.) (NNP Crawford))
        (PP
          (ADVP (RB already))
          (IN on)
          (NP (DT the) (NN platform)))))
    (. !)))

advmod(arrived-3, When-1)
nsubj(arrived-3, she-2)
advcl(was-6, arrived-3)
expl(was-6, there-5)
root(ROOT-0, was-6)
nn(Crawford-8, Mr.-7)
nsubj(was-6, Crawford-8)
advmod(Crawford-8, already-9)
det(platform-12, the-11)
prep_on(Crawford-8, platform-12)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD set)
        (PRT (RP out))
        (ADVP (RB as) (RB fast))
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP (MD could))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD had) (RB not)
        (VP (VBN got)
          (ADVP (RBR further))
          (PP (IN than)
            (NP (NNP half-way)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP
                (VP (VBP overtook)
                  (NP (PRP her))
                  (PP (IN in)
                    (NP (DT a) (NN fly))))
                (, ,)
                (CC and)
                (VP (VBD insisted)
                  (SBAR
                    (S
                      (NP (PRP she))
                      (VP (MD should)
                        (VP (VB get)
                          (PRT (RP in)))))))))))))
    (. .)))

nsubj(set-2, She-1)
root(ROOT-0, set-2)
prt(set-2, out-3)
advmod(fast-5, as-4)
advmod(set-2, fast-5)
mark(could-8, as-6)
nsubj(could-8, she-7)
advcl(set-2, could-8)
nsubj(got-14, she-11)
aux(got-14, had-12)
neg(got-14, not-13)
conj_but(set-2, got-14)
advmod(got-14, further-15)
prep_than(got-14, half-way-17)
advmod(overtook-20, when-18)
nsubj(overtook-20, he-19)
nsubj(insisted-27, he-19)
advcl(got-14, overtook-20)
dobj(overtook-20, her-21)
det(fly-24, a-23)
prep_in(overtook-20, fly-24)
advcl(got-14, insisted-27)
conj_and(overtook-20, insisted-27)
nsubj(get-30, she-28)
aux(get-30, should-29)
ccomp(insisted-27, get-30)
prt(get-30, in-31)

(ROOT
  (NP (NNP CHAPTER) (NNP XXVI) (. .)))

nn(XXVI-2, CHAPTER-1)
root(ROOT-0, XXVI-2)

(ROOT
  (NP (NNP GEORGE) (NNP CRAWFORD)
    (CC AND)
    (NNP DAWTIE) (. .)))

nn(CRAWFORD-2, GEORGE-1)
root(ROOT-0, CRAWFORD-2)
conj_and(CRAWFORD-2, DAWTIE-4)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN matter))
        (PP (IN with)
          (NP (PRP$ your) (NN master)))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
det(matter-5, the-4)
nsubj(What-2, matter-5)
poss(master-8, your-7)
prep_with(matter-5, master-8)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)

(ROOT
  (S (`` ``)
    (NP (NNP God))
    (VP (VBZ knows) (, ,)
      (ADVP (RB sir)))
    (. .) ('' '')))

nsubj(knows-3, God-2)
root(ROOT-0, knows-3)
advmod(knows-3, sir-5)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN use))
        (PP (IN of)
          (S
            (VP (VBG telling)
              (S
                (NP (PRP me))
                (NP (DT that))))))))
    (. ?)))

root(ROOT-0, What-2)
cop(What-2, is-3)
det(use-5, the-4)
nsubj(What-2, use-5)
prepc_of(use-5, telling-7)
nsubj(that-9, me-8)
xcomp(telling-7, that-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP (VB tell)
            (NP (PRP me))
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD _)
                  (SBAR
                    (S
                      (NP (PRP you))
                      (ADVP (RB _))
                      (VP (VBP know)))))))))))
    (. .) ('' '')))

nsubj(want-2, I-1)
root(ROOT-0, want-2)
dobj(want-2, you-3)
nsubj(tell-5, you-3)
aux(tell-5, to-4)
xcomp(want-2, tell-5)
dobj(tell-5, me-6)
nsubj(_-8, what-7)
dep(tell-5, _-8)
nsubj(know-11, you-9)
advmod(know-11, _-10)
ccomp(_-8, know-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP (NN anything))
        (, ,)
        (ADVP (RB sir))))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
dobj(know-5, anything-6)
advmod(know-5, sir-8)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (ADVP (RB then))))
    (. ?) ('' '')))

dobj(think-5, What-2)
aux(think-5, do-3)
nsubj(think-5, you-4)
root(ROOT-0, think-5)
advmod(think-5, then-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB think)
        (NP
          (NP (JJ old) (NN age))
          (VP (VBN had)
            (NP (NN something))
            (S
              (VP (TO to)
                (VP (VB do)
                  (PP (IN with)
                    (NP (PRP it)))
                  (, ,)
                  (ADVP (RB sir)))))))))
    (. .) ('' '')))

nsubj(think-4, I-2)
aux(think-4, should-3)
root(ROOT-0, think-4)
amod(age-6, old-5)
dobj(think-4, age-6)
vmod(age-6, had-7)
dobj(had-7, something-8)
aux(do-10, to-9)
vmod(had-7, do-10)
prep_with(do-10, it-12)
advmod(do-10, sir-14)

(ROOT
  (S (`` ``)
    (S
      (ADJP (RB Likely) (JJ enough))
      (, ,)
      (CC but)
      (NP (PRP you))
      (VP (VBP know)
        (ADVP (RBR more) (IN than) (RB that))))
    (. !) ('' '')))

advmod(enough-3, Likely-2)
dep(know-7, enough-3)
conj_but(know-7, you-6)
nsubj(know-7, you-6)
root(ROOT-0, know-7)
advmod(than-9, more-8)
advmod(know-7, than-9)
advmod(than-9, that-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD should) (RB n't)
      (VP (VB wonder) (, ,) (VB sir) (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (VBD were)
              (VP (VBN troubled)
                (PP (IN in)
                  (NP (PRP$ his) (NN mind)))))))))
    (. .) ('' '')))

nsubj(wonder-5, I-2)
aux(wonder-5, should-3)
neg(wonder-5, n't-4)
root(ROOT-0, wonder-5)
dep(wonder-5, sir-7)
mark(troubled-12, if-9)
nsubjpass(troubled-12, he-10)
auxpass(troubled-12, were-11)
advcl(wonder-5, troubled-12)
poss(mind-15, his-14)
prep_in(troubled-12, mind-15)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP think)
              (ADVP (RB so)))))))
    (. ?) ('' '')))

nsubj(makes-3, What-2)
root(ROOT-0, makes-3)
nsubj(think-5, you-4)
ccomp(makes-3, think-5)
advmod(think-5, so-6)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ reasonable)
        (S
          (VP (TO to)
            (VP (VB think)
              (ADVP (RB so))))))
      (, ,)
      (ADVP (RB sir)))
    (. .)))

nsubj(reasonable-4, It-2)
nsubj(think-6, It-2)
cop(reasonable-4, is-3)
root(ROOT-0, reasonable-4)
aux(think-6, to-5)
xcomp(reasonable-4, think-6)
advmod(think-6, so-7)
advmod(reasonable-4, sir-9)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ knows)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD must)
              (VP (VB die)
                (ADVP (RB before) (RB long))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ dreadful)
          (S
            (VP (TO to)
              (VP
                (VP (VB leave)
                  (NP
                    (NP (NN everything))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP care)
                          (PP (IN for)))))))
                (, ,)
                (CC and)
                (VP (VB go)
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (EX there))
                      (VP (VBZ is)
                        (NP
                          (NP (NN nothing))
                          (SBAR
                            (S
                              (NP (PRP you))
                              (VP (VBP care)
                                (PP (IN for))))))))))))))))
    (. !) ('' '')))

nsubj(knows-2, He-1)
root(ROOT-0, knows-2)
nsubj(die-5, he-3)
aux(die-5, must-4)
ccomp(knows-2, die-5)
advmod(long-7, before-6)
advmod(die-5, long-7)
nsubj(dreadful-12, it-10)
nsubj(leave-14, it-10)
nsubj(go-21, it-10)
cop(dreadful-12, is-11)
conj_and(knows-2, dreadful-12)
aux(leave-14, to-13)
xcomp(dreadful-12, leave-14)
dobj(leave-14, everything-15)
prep_for(care-17, everything-15)
nsubj(care-17, you-16)
rcmod(everything-15, care-17)
xcomp(dreadful-12, go-21)
conj_and(leave-14, go-21)
advmod(is-24, where-22)
expl(is-24, there-23)
advcl(go-21, is-24)
nsubj(is-24, nothing-25)
prep_for(care-27, nothing-25)
nsubj(care-27, you-26)
rcmod(nothing-25, care-27)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (NN nothing))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (MD would)
                      (VP (VB care)
                        (PP (IN for))))))))))))
    (. ?) ('' '')))

advmod(know-5, How-2)
aux(know-5, do-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
expl(is-7, there-6)
ccomp(know-5, is-7)
nsubj(is-7, nothing-8)
prep_for(care-11, nothing-8)
nsubj(care-11, he-9)
aux(care-11, would-10)
rcmod(nothing-8, care-11)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (RB there))
        (SBAR
          (S (, ,)
            (ADVP (RB sir))
            (, ,)
            (NP (PRP he))
            (VP (MD would)
              (VP (VB be)
                (ADJP (JJ likely)
                  (S
                    (VP (TO to)
                      (VP (VB care)
                        (PP (IN for))))))))))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
nsubj(What-2, there-4)
pobj(for-14, there-4)
advmod(likely-11, sir-6)
nsubj(likely-11, he-8)
nsubj(care-13, he-8)
aux(likely-11, would-9)
cop(likely-11, be-10)
rcmod(there-4, likely-11)
aux(care-13, to-12)
xcomp(likely-11, care-13)
prep(care-13, for-14)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ is)
      (NP (PRP$ his) (NN wife)))
    (. .)))

expl(is-3, There-2)
root(ROOT-0, is-3)
poss(wife-5, his-4)
nsubj(is-3, wife-5)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (VP (VBN fond)
          (PP (IN of)
            (NP (PRP her))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP suppose)))
      (, ,))
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBZ pious)
        (S
          (NP (NNS people))
          (ADJP (JJ fancy))
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD will)
                (VP (VB see)
                  (NP (DT each) (JJ other))
                  (ADVP (RB again)))))))))
    (. .) ('' '')))

nsubjpass(fond-3, He-1)
auxpass(fond-3, was-2)
root(ROOT-0, fond-3)
prep_of(fond-3, her-5)
nsubj(suppose-8, I-7)
dep(fond-3, suppose-8)
nsubj(pious-12, you-11)
conj_and(fond-3, pious-12)
nsubj(see-17, people-13)
dep(see-17, fancy-14)
nsubj(see-17, you-15)
aux(see-17, will-16)
xcomp(pious-12, see-17)
det(other-19, each-18)
dobj(see-17, other-19)
advmod(see-17, again-20)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (DT The) (NN thought))
        (PP (IN of)
          (S
            (VP (VBG seeing)
              (NP (PRP her))))))
      (VP (MD would)
        (VP (VB give)
          (NP (PRP him))
          (NP (JJ little) (NN comfort)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ afraid))
      (, ,)
      (PP (IN in)
        (NP
          (NP (NN parting))
          (PP (IN with)
            (NP
              (NP (DT the) (NNS things))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBZ has)
                    (NP (RB here))))))))))
    (. .)))

det(thought-3, The-2)
nsubj(give-8, thought-3)
prepc_of(thought-3, seeing-5)
dobj(seeing-5, her-6)
aux(give-8, would-7)
ccomp(afraid-15, give-8)
iobj(give-8, him-9)
amod(comfort-11, little-10)
dobj(give-8, comfort-11)
nsubj(afraid-15, I-13)
cop(afraid-15, am-14)
root(ROOT-0, afraid-15)
prep_in(afraid-15, parting-18)
det(things-21, the-20)
prep_with(parting-18, things-21)
nsubj(has-23, he-22)
rcmod(things-21, has-23)
dobj(has-23, here-24)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ believes)
        (NP (DT a) (JJ little))
        (ADVP (RB somehow))))
    (: --)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB understand)
          (NP (WRB how)))))
    (. .) ('' '')))

nsubj(believes-2, He-1)
root(ROOT-0, believes-2)
det(little-4, a-3)
dobj(believes-2, little-4)
advmod(believes-2, somehow-5)
nsubj(understand-10, I-7)
aux(understand-10, ca-8)
neg(understand-10, n't-9)
parataxis(believes-2, understand-10)
dobj(understand-10, how-11)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ does)
      (NP (PRP he))
      (VP (VB believe)))
    (. ?) ('' '')))

dobj(believe-5, What-2)
aux(believe-5, does-3)
nsubj(believe-5, he-4)
root(ROOT-0, believe-5)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP
      (VP (VBZ believes)
        (NP (DT a) (JJ little)))
      (PRN (: --)
        (S
          (NP (PRP he))
          (VP (VBZ is) (RB not)
            (ADJP (JJ sure))))
        (: --))
      (NP
        (NP (DT that))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT a) (NN man))
            (VP (VBP soweth)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (MD shall)
                    (ADVP (RB also))
                    (VP (VB reap))))))))))
    (. .) ('' '')))

nsubj(believes-3, He-2)
root(ROOT-0, believes-3)
det(little-5, a-4)
dobj(believes-3, little-5)
nsubj(sure-10, he-7)
cop(sure-10, is-8)
neg(sure-10, not-9)
parataxis(believes-3, sure-10)
dobj(believes-3, that-12)
dobj(soweth-16, that-12)
det(man-15, a-14)
nsubj(soweth-16, man-15)
rcmod(that-12, soweth-16)
nsubj(reap-20, he-17)
aux(reap-20, shall-18)
advmod(reap-20, also-19)
ccomp(soweth-16, reap-20)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (VP
              (VP (VBZ is))
              (CC or)
              (VP (VBZ is) (RB not)
                (ADJP (JJ sure) (IN off))))))))
    (. ?)))

advmod(know-5, How-2)
aux(know-5, do-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
dobj(is-8, what-6)
nsubj(is-8, he-7)
nsubj(sure-12, he-7)
ccomp(know-5, is-8)
cop(sure-12, is-10)
neg(sure-12, not-11)
ccomp(know-5, sure-12)
conj_or(is-8, sure-12)
dep(sure-12, off-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (NP
          (NP (DT a) (NN matter))
          (PP (IN of)
            (NP (NN interest))))
        (PP (TO to)
          (NP (PRP you)))))
    (. ?) ('' '')))

nsubj(matter-6, It-1)
aux(matter-6, ca-2)
neg(matter-6, n't-3)
cop(matter-6, be-4)
det(matter-6, a-5)
root(ROOT-0, matter-6)
prep_of(matter-6, interest-8)
prep_to(matter-6, you-10)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT Those))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBN come)
            (PP (IN of)
              (NP (CD one) (NN Father)))))))
    (VP (MD must)
      (VP (VB have)
        (NP
          (NP (NN interest))
          (PP (IN in)
            (NP (CD one) (DT another))))))
    (. .) ('' '')))

nsubj(come-4, Those-2)
nsubj(have-9, Those-2)
rcmod(Those-2, come-4)
num(Father-7, one-6)
prep_of(come-4, Father-7)
aux(have-9, must-8)
root(ROOT-0, have-9)
dobj(have-9, interest-10)
prep_in(interest-10, one-12)
dep(one-12, another-13)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP am)
      (NP (PRP I))
      (S
        (VP (TO to)
          (VP (VB tell)
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP come)
                  (PP (IN of)
                    (NP (CD one) (NN Father)))
                  (: --)
                  (SBAR (IN as)
                    (S
                      (NP (PRP you))
                      (VP (VBP call)
                        (NP (PRP Him))))))))))))
    (. ?)))

advmod(am-3, How-2)
root(ROOT-0, am-3)
nsubj(am-3, I-4)
aux(tell-6, to-5)
dep(am-3, tell-6)
nsubj(come-8, we-7)
ccomp(tell-6, come-8)
num(Father-11, one-10)
prep_of(come-8, Father-11)
mark(call-15, as-13)
nsubj(call-15, you-14)
advcl(come-8, call-15)
parataxis(come-8, call-15)
dobj(call-15, Him-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP like)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP
              (NP (DT a) (NN thing))
              (VP (VBN proved)
                (SBAR (IN before)
                  (S
                    (NP (PRP I))
                    (VP (VBP believe)
                      (NP (PRP it)))))))))))
    (. .)))

nsubj(like-2, I-1)
nsubj(have-4, I-1)
root(ROOT-0, like-2)
aux(have-4, to-3)
xcomp(like-2, have-4)
det(thing-6, a-5)
dobj(have-4, thing-6)
vmod(thing-6, proved-7)
mark(believe-10, before-8)
nsubj(believe-10, I-9)
advcl(proved-7, believe-10)
dobj(believe-10, it-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP
          (NP (DT neither))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP I))
              (VP (VBD came)
                (PP (IN from))))))))
    (, ,)
    (CC nor)
    (S
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP I))
          (VP (VBP am)
            (VP (VBG going)))
          (: ;)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (RB then))
              (VP (MD can))))))
      (NP (PRP I))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP come)
              (PP (IN from)
                (NP (DT the) (JJ same) (NN father))))))))
    (. ?) ('' '')))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
dobj(know-2, neither-3)
prep_from(came-6, neither-3)
advmod(came-6, where-4)
nsubj(came-6, I-5)
rcmod(neither-3, came-6)
advmod(going-13, where-10)
nsubj(going-13, I-11)
aux(going-13, am-12)
advcl(know-19, going-13)
advmod(can-17, how-15)
nsubj(can-17, then-16)
parataxis(going-13, can-17)
nsubj(know-19, I-18)
conj_nor(know-2, know-19)
mark(come-22, that-20)
nsubj(come-22, we-21)
ccomp(know-19, come-22)
det(father-26, the-24)
amod(father-26, same-25)
prep_from(come-22, father-26)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (S
                (VP (TO to)
                  (VP (VB know)
                    (NP (PRP it))
                    (, ,)
                    (ADVP (RB sir))))))))))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
advmod('re-8, how-6)
nsubj('re-8, you-7)
nsubj(know-10, you-7)
ccomp(know-5, 're-8)
aux(know-10, to-9)
xcomp('re-8, know-10)
dobj(know-10, it-11)
advmod(know-10, sir-13)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP take)
        (NP (PRP it))
        (SBAR (IN for)
          (S
            (VP (JJ granted)))))
      (, ,)
      (CC and)
      (VP (VBP find)
        (S
          (NP (PRP it))
          (ADJP (JJ good)))))
    (. .)))

nsubj(take-2, I-1)
nsubj(find-8, I-1)
root(ROOT-0, take-2)
dobj(take-2, it-3)
mark(granted-5, for-4)
advcl(take-2, granted-5)
conj_and(take-2, find-8)
nsubj(good-10, it-9)
xcomp(find-8, good-10)

(ROOT
  (S (CC But)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (CD one) (NN thing))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP am)
              (ADJP (JJ sure)
                (PP (IN of))))))))
    (. .) ('' '')))

cc(is-3, But-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
num(thing-5, one-4)
nsubj(is-3, thing-5)
prep_of(sure-8, thing-5)
nsubj(sure-8, I-6)
cop(sure-8, am-7)
rcmod(thing-5, sure-8)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP (DT that)))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
nsubj(What-2, that-4)

(ROOT
  (S (`` ``)
    (SBAR (IN That) (IN if)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (NP
            (NP (PRP$ my) (NN master) (POS 's))
            (NN friend)))))
    (NP (PRP you))
    (VP (MD would) (RB not)
      (VP (VB rest)
        (SBAR (IN till)
          (S
            (NP (PRP you))
            (VP (VBD got)
              (S
                (NP (PRP him))
                (VP (TO to)
                  (VP (VB do)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBD was)
                          (ADJP (JJ right))
                          (SBAR (IN before)
                            (S
                              (NP (PRP he))
                              (VP (VBD died)))))))))))))))
    (. .) ('' '')))

mark(friend-9, That-2)
mark(friend-9, if-3)
nsubj(friend-9, you-4)
cop(friend-9, were-5)
poss(master-7, my-6)
poss(friend-9, master-7)
advcl(rest-13, friend-9)
nsubj(rest-13, you-10)
aux(rest-13, would-11)
neg(rest-13, not-12)
root(ROOT-0, rest-13)
mark(got-16, till-14)
nsubj(got-16, you-15)
advcl(rest-13, got-16)
dobj(got-16, him-17)
nsubj(do-19, him-17)
aux(do-19, to-18)
xcomp(got-16, do-19)
nsubj(right-22, what-20)
cop(right-22, was-21)
ccomp(do-19, right-22)
mark(died-25, before-23)
nsubj(died-25, he-24)
advcl(right-22, died-25)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will) (RB not)
      (VP (VB be)
        (ADJP (JJ father-confessor)
          (PP (TO to)
            (NP (DT any) (NN man))))))
    (. .)))

nsubj(father-confessor-6, I-2)
aux(father-confessor-6, will-3)
neg(father-confessor-6, not-4)
cop(father-confessor-6, be-5)
root(ROOT-0, father-confessor-6)
det(man-9, any-8)
prep_to(father-confessor-6, man-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB enough))
      (S
        (VP (TO to)
          (VP (VB do)
            (PP (IN with)
              (NP (PRP myself)))))))
    (. .)))

nsubj(have-2, I-1)
nsubj(do-5, I-1)
root(ROOT-0, have-2)
advmod(have-2, enough-3)
aux(do-5, to-4)
xcomp(have-2, do-5)
prep_with(do-5, myself-7)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ good)
        (ADJP (JJ worthy) (JJ old))
        (NN man))
      (PP (IN like)
        (NP (DT the) (NN laird))))
    (VP (MD must)
      (VP (VB know)
        (ADVP (RBR better))
        (PP (IN than)
          (NP
            (NP (DT any) (JJ other))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP he))
                (VP (MD ought)
                  (S
                    (VP (TO to)
                      (VP (VB do)))))))))))
    (. .) ('' '')))

det(man-5, A-1)
amod(man-5, good-2)
amod(old-4, worthy-3)
amod(man-5, old-4)
nsubj(know-10, man-5)
det(laird-8, the-7)
prep_like(man-5, laird-8)
aux(know-10, must-9)
root(ROOT-0, know-10)
advmod(know-10, better-11)
det(other-14, any-13)
prep_than(know-10, other-14)
dobj(ought-17, other-14)
nsubj(do-19, other-14)
nsubj(ought-17, he-16)
rcmod(other-14, ought-17)
aux(do-19, to-18)
xcomp(ought-17, do-19)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN doubt))
        (PP (IN of)
          (NP
            (NP (DT that))
            (, ,)
            (NP (NN sir))))))
    (. .) ('' '')))

expl(is-3, There-2)
root(ROOT-0, is-3)
neg(doubt-5, no-4)
nsubj(is-3, doubt-5)
prep_of(doubt-5, that-7)
appos(that-7, sir-9)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB want)
        (ADVP (RB then))))
    (. ?) ('' '')))

dobj(want-5, What-2)
aux(want-5, do-3)
nsubj(want-5, you-4)
root(ROOT-0, want-5)
advmod(want-5, then-6)

(ROOT
  (S (`` ``)
    (NP (TO To))
    (VP (VBP get)
      (S
        (NP (PRP him))
        (VP (TO to)
          (VP (VB do)
            (NP (PRP it))))))
    (. .)))

nsubj(get-3, To-2)
root(ROOT-0, get-3)
dobj(get-3, him-4)
nsubj(do-6, him-4)
aux(do-6, to-5)
xcomp(get-3, do-6)
dobj(do-6, it-7)

(ROOT
  (S
    (NP (DT That))
    (PRN
      (S
        (NP (PRP he))
        (VP (VBZ knows)))
      (, ,))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ makes)
            (S
              (NP (PRP it))
              (ADJP (RB so) (JJ miserable)))))))
    (. .)))

nsubj(is-5, That-1)
nsubj(knows-3, he-2)
parataxis(is-5, knows-3)
root(ROOT-0, is-5)
nsubj(makes-7, what-6)
ccomp(is-5, makes-7)
nsubj(miserable-10, it-8)
advmod(miserable-10, so-9)
xcomp(makes-7, miserable-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBD did) (RB not)
          (VP (VB know)))))
    (NP (PRP he))
    (VP (MD would) (RB not)
      (VP (VB be)
        (S
          (VP (TO to)
            (VP (VB blame))))))
    (. .)))

mark(know-5, If-1)
nsubj(know-5, he-2)
aux(know-5, did-3)
neg(know-5, not-4)
advcl(be-9, know-5)
nsubj(be-9, he-6)
nsubj(blame-11, he-6)
aux(be-9, would-7)
neg(be-9, not-8)
root(ROOT-0, be-9)
aux(blame-11, to-10)
xcomp(be-9, blame-11)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ knows)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP it))
            (VP
              (VP (VBZ is))
              (CC and)
              (VP (MD wo) (RB n't)
                (VP (VB do)
                  (NP (PRP it)))))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ makes)
              (SBAR
                (S
                  (NP (PRP him))
                  (VP (VBD wretched)))))))
        (: --)
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (MD ought)))))
      (, ,)
      (VP (VB thank)
        (NP (NNP God))))
    (. !) ('' '')))

nsubj(knows-2, He-1)
nsubj(thank-22, He-1)
root(ROOT-0, knows-2)
dobj(is-5, what-3)
nsubj(is-5, it-4)
nsubj(do-9, it-4)
ccomp(knows-2, is-5)
aux(do-9, wo-7)
neg(do-9, n't-8)
ccomp(knows-2, do-9)
conj_and(is-5, do-9)
dobj(do-9, it-10)
nsubj(makes-14, that-13)
dep(thank-22, makes-14)
nsubj(wretched-16, him-15)
ccomp(makes-14, wretched-16)
mark(ought-20, as-18)
nsubj(ought-20, it-19)
dep(makes-14, ought-20)
conj_and(knows-2, thank-22)
dobj(thank-22, God-23)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP 're)
      (NP (DT a) (JJ nice) (NNP Christian)))
    (. .)))

nsubj(Christian-6, You-2)
cop(Christian-6, 're-3)
det(Christian-6, a-4)
amod(Christian-6, nice-5)
root(ROOT-0, Christian-6)

(ROOT
  (NP
    (NP (NNP Thanking) (NNP God))
    (PP (IN for)
      (S
        (VP (VBG making)
          (S
            (NP (DT a) (NN man))
            (ADJP (JJ miserable))))))
    (. .)))

nn(God-2, Thanking-1)
root(ROOT-0, God-2)
prepc_for(God-2, making-4)
det(man-6, a-5)
nsubj(miserable-7, man-6)
xcomp(making-4, miserable-7)

(ROOT
  (S
    (VP (VB Well))
    (. .) ('' '')))

root(ROOT-0, Well-1)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Dawtie))
    (. .)))

dep(answered-5, Yes-2)
root(ROOT-0, answered-5)
nsubj(answered-5, Dawtie-6)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD thought)
      (NP (DT a) (JJ little)))
    (. .)))

nsubj(thought-2, George-1)
root(ROOT-0, thought-2)
det(little-4, a-3)
dobj(thought-2, little-4)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB have)
        (S
          (NP (PRP me))
          (VP (VB persuade)
            (S
              (NP (PRP him))
              (VP (TO to)))))))
    (. ?) ('' '')))

dobj(have-5, What-2)
aux(have-5, would-3)
nsubj(have-5, you-4)
root(ROOT-0, have-5)
nsubj(persuade-7, me-6)
ccomp(have-5, persuade-7)
dobj(persuade-7, him-8)
nsubj(to-9, him-8)
xcomp(persuade-7, to-9)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked) (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (MD might)
            (VP (VB hear)
              (NP
                (NP (NN something))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (MD would)
                      (VP (VB be)
                        (ADJP (JJ useful)
                          (S
                            (VP (TO to)
                              (VP (VB know)))))))))))))))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)
mark(hear-7, for-4)
nsubj(hear-7, he-5)
aux(hear-7, might-6)
advcl(asked-2, hear-7)
dobj(hear-7, something-8)
nsubj(useful-12, it-9)
nsubj(know-14, it-9)
aux(useful-12, would-10)
cop(useful-12, be-11)
rcmod(something-8, useful-12)
aux(know-14, to-13)
xcomp(useful-12, know-14)

(ROOT
  (S (CC But)
    (NP (NNP Dawtie))
    (VP (VBD had)
      (ADVP (DT no) (RB right)
        (CC and)
        (RB no))
      (VP (VBN inclination)
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP (PRP him))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP she))
                  (VP (VBD knew)))))))))
    (. .)))

cc(inclination-8, But-1)
nsubj(inclination-8, Dawtie-2)
nsubj(tell-10, Dawtie-2)
aux(inclination-8, had-3)
neg(right-5, no-4)
advmod(inclination-8, right-5)
conj_and(right-5, no-7)
advmod(inclination-8, no-7)
root(ROOT-0, inclination-8)
aux(tell-10, to-9)
xcomp(inclination-8, tell-10)
dobj(tell-10, him-11)
dobj(knew-14, what-12)
nsubj(knew-14, she-13)
dep(tell-10, knew-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB only))
      (VP (VBP wish)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD would)
              (VP (VB persuade)
                (S
                  (NP (PRP him))
                  (VP (TO to)
                    (VP (VB do)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP he))
                          (VP (VBZ knows)
                            (SBAR
                              (S
                                (NP (PRP he))
                                (VP (MD ought)
                                  (S
                                    (VP (TO to)
                                      (VP (VB do)))))))))))))))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD replied))
    (. .)))

nsubj(wish-4, I-2)
advmod(wish-4, only-3)
ccomp(replied-21, wish-4)
nsubj(persuade-7, you-5)
aux(persuade-7, would-6)
ccomp(wish-4, persuade-7)
dobj(persuade-7, him-8)
nsubj(do-10, him-8)
aux(do-10, to-9)
xcomp(persuade-7, do-10)
dobj(knows-13, what-11)
nsubj(knows-13, he-12)
ccomp(do-10, knows-13)
nsubj(ought-15, he-14)
nsubj(do-17, he-14)
ccomp(knows-13, ought-15)
aux(do-17, to-16)
xcomp(ought-15, do-17)
nsubj(replied-21, she-20)
root(ROOT-0, replied-21)

(ROOT
  (NP (NNP CHAPTER) (NNP XXVII) (. .)))

nn(XXVII-2, CHAPTER-1)
root(ROOT-0, XXVII-2)

(ROOT
  (NP (DT THE) (NN WATCH) (. .)))

det(WATCH-2, THE-1)
root(ROOT-0, WATCH-2)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD stayed)
        (PP (IN with)
          (NP (DT the) (NN laird)))
        (NP (DT a) (JJ good) (NN while)))
      (, ,)
      (CC and)
      (VP (VBD held)
        (NP (DT a) (JJ long) (, ,) (JJ broken) (NN talk))
        (PP (IN with)
          (NP (PRP him)))))
    (. .)))

nsubj(stayed-2, George-1)
nsubj(held-11, George-1)
root(ROOT-0, stayed-2)
det(laird-5, the-4)
prep_with(stayed-2, laird-5)
det(while-8, a-6)
amod(while-8, good-7)
dobj(stayed-2, while-8)
conj_and(stayed-2, held-11)
det(talk-16, a-12)
amod(talk-16, long-13)
amod(talk-16, broken-15)
dobj(held-11, talk-16)
prep_with(held-11, him-18)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD went))))
    (NP (NNP Alexa))
    (VP (VBD came))
    (. .)))

advmod(went-3, When-1)
nsubj(went-3, he-2)
advcl(came-5, went-3)
nsubj(came-5, Alexa-4)
root(ROOT-0, came-5)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP$ her) (NN father))
          (VP (VBD seemed)
            (ADJP (JJR happier))))))
    (. .)))

nsubj(thought-2, She-1)
root(ROOT-0, thought-2)
poss(father-4, her-3)
nsubj(seemed-5, father-4)
ccomp(thought-2, seemed-5)
acomp(seemed-5, happier-6)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD had)
      (VP (VBN put)
        (PP
          (ADVP
            (NP (DT the) (NN cup))
            (RB away))
          (IN for)
          (NP (PRP him)))))
    (. .)))

nsubj(put-3, George-1)
aux(put-3, had-2)
root(ROOT-0, put-3)
det(cup-5, the-4)
npadvmod(away-6, cup-5)
advmod(put-3, away-6)
prep_for(put-3, him-8)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD sat)
      (PP (IN with)
        (NP (PRP him)))
      (NP (DT that) (NN night)))
    (. .)))

nsubj(sat-2, Alexa-1)
root(ROOT-0, sat-2)
prep_with(sat-2, him-4)
det(night-6, that-5)
tmod(sat-2, night-6)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD knew)
      (NP
        (NP (NN nothing))
        (PP (IN of)
          (NP
            (NP (PDT such) (DT a) (JJ precious) (NN thing))
            (VP (VBG being)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN house))
                  (: --)))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN room))
                  (PP (IN with)
                    (NP (PRP them))))))))))
    (. .)))

nsubj(knew-2, She-1)
root(ROOT-0, knew-2)
dobj(knew-2, nothing-3)
predet(thing-8, such-5)
det(thing-8, a-6)
amod(thing-8, precious-7)
prep_of(nothing-3, thing-8)
vmod(thing-8, being-9)
det(house-12, the-11)
prep_in(being-9, house-12)
det(room-16, the-15)
prep_in(being-9, room-16)
prep_with(room-16, them-18)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN middle))
        (PP (IN of)
          (NP (DT the) (NN night)))))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP she))
        (VP (VBD was)
          (VP (VBG arranging)
            (NP (PRP$ his) (NNS pillows))))))
    (, ,)
    (NP (DT the) (NN laird))
    (VP
      (VP (VBD drew)
        (PP (IN from)
          (PP (IN under)
            (NP (DT the) (NNS bed-clothes)))))
      (, ,)
      (CC and)
      (VP (VBD held)
        (PRT (RP up))
        (PP (TO to)
          (NP (PRP her)))
        (, ,)
        (VP (VBG flashing)
          (PP (IN in)
            (NP
              (NP (DT the) (NN light))
              (PP (IN of)
                (NP
                  (NP (DT the) (CD one) (NN candle))
                  (, ,)
                  (NP (DT the) (JJ jeweled) (NN watch)))))))))
    (. .)))

det(middle-3, the-2)
prep_in(drew-17, middle-3)
det(night-6, the-5)
prep_of(middle-3, night-6)
mark(arranging-11, as-8)
nsubj(arranging-11, she-9)
aux(arranging-11, was-10)
advcl(drew-17, arranging-11)
poss(pillows-13, his-12)
dobj(arranging-11, pillows-13)
det(laird-16, the-15)
nsubj(drew-17, laird-16)
nsubj(held-24, laird-16)
root(ROOT-0, drew-17)
prep(drew-17, from-18)
pcomp(from-18, under-19)
det(bed-clothes-21, the-20)
pobj(under-19, bed-clothes-21)
conj_and(drew-17, held-24)
prt(held-24, up-25)
prep_to(held-24, her-27)
dep(held-24, flashing-29)
det(light-32, the-31)
prep_in(flashing-29, light-32)
det(candle-36, the-34)
num(candle-36, one-35)
prep_of(light-32, candle-36)
det(watch-40, the-38)
amod(watch-40, jeweled-39)
appos(candle-36, watch-40)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD stared))
    (. .)))

nsubj(stared-2, She-1)
root(ROOT-0, stared-2)

(ROOT
  (S
    (NP (DT The) (JJ old) (NN man))
    (VP (VBD was)
      (UCP
        (VP (VBN pleased)
          (PP (IN at)
            (NP (PRP$ her) (NN surprise))))
        (CC and)
        (ADJP (JJ evident) (JJ admiration))))
    (. .)))

det(man-3, The-1)
amod(man-3, old-2)
nsubj(was-4, man-3)
root(ROOT-0, was-4)
dep(was-4, pleased-5)
poss(surprise-8, her-7)
prep_at(pleased-5, surprise-8)
amod(admiration-11, evident-10)
dep(was-4, admiration-11)
conj_and(pleased-5, admiration-11)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD held)
      (PRT (RP out))
      (NP (PRP$ her) (NN hand))
      (PP (IN for)
        (NP (PRP it))))
    (. .)))

nsubj(held-2, She-1)
root(ROOT-0, held-2)
prt(held-2, out-3)
poss(hand-5, her-4)
dobj(held-2, hand-5)
prep_for(held-2, it-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD gave)
      (NP (PRP it))
      (NP (PRP her)))
    (. .)))

nsubj(gave-2, He-1)
root(ROOT-0, gave-2)
iobj(gave-2, it-3)
dobj(gave-2, her-4)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBP watch)))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,) (`` ``)
      (SQ (VBZ is)
        (VP (VBN believed)
          (S
            (VP (TO to)
              (VP (VB have)
                (VP (VBN belonged)
                  (PP (TO to)
                    (NP (NNP Ninon) (NNP de) (NNS l'Enclos))))))))))
    (. .)))

nsubj(watch-3, That-2)
ccomp(said-7, watch-3)
nsubj(said-7, he-6)
root(ROOT-0, said-7)
auxpass(believed-11, is-10)
dep(said-7, believed-11)
aux(belonged-14, to-12)
aux(belonged-14, have-13)
xcomp(believed-11, belonged-14)
nn(l'Enclos-18, Ninon-16)
nn(l'Enclos-18, de-17)
prep_to(belonged-14, l'Enclos-18)

(ROOT
  (S
    (S
      (NP (PRP It))
      (ADVP (RB _))
      (VP (MD may)
        (VP (VB _))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP doubt)
        (S
          (NP (PRP it))
          (NP (PRP myself)))))
    (. .)))

nsubj(_-4, It-1)
advmod(_-4, _-2)
aux(_-4, may-3)
root(ROOT-0, _-4)
nsubj(doubt-8, I-7)
conj_but(_-4, doubt-8)
nsubj(myself-10, it-9)
xcomp(doubt-8, myself-10)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADVP (RB well))
        (VP (VBN known)
          (SBAR
            (S
              (NP (PRP she))
              (ADVP (RB never))
              (VP (VBD took)
                (NP (NNS presents))
                (PP (IN from)
                  (NP (PRP$ her) (NNS admirers)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (ADJP (RB too) (JJ poor)
          (S
            (VP (TO to)
              (VP (VB have)
                (VP (VBN bought)
                  (NP (PDT such) (DT a) (NN thing)))))))))
    (. .)))

nsubjpass(known-4, It-1)
auxpass(known-4, is-2)
advmod(known-4, well-3)
root(ROOT-0, known-4)
nsubj(took-7, she-5)
neg(took-7, never-6)
ccomp(known-4, took-7)
dobj(took-7, presents-8)
poss(admirers-11, her-10)
prep_from(took-7, admirers-11)
nsubj(poor-17, she-14)
nsubj(bought-20, she-14)
cop(poor-17, was-15)
advmod(poor-17, too-16)
conj_and(known-4, poor-17)
aux(bought-20, to-18)
aux(bought-20, have-19)
xcomp(poor-17, bought-20)
predet(thing-23, such-21)
det(thing-23, a-22)
dobj(bought-20, thing-23)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Mme.) (IN de) (NNP Maintenon))
        (, ,)
        (ADVP (RB however)))
      (, ,)
      (CC or)
      (NP
        (NP (DT some) (NN one))
        (PP (IN of)
          (NP (PRP$ her) (NNS lady-friends))))
      (, ,))
    (VP (MD might)
      (VP (VB have)
        (VP (VBN given)
          (NP (PRP it))
          (NP (PRP her)))))
    (. .)))

nn(Maintenon-3, Mme.-1)
amod(Maintenon-3, de-2)
nsubj(given-16, Maintenon-3)
advmod(Maintenon-3, however-5)
det(one-9, some-8)
conj_or(Maintenon-3, one-9)
nsubj(given-16, one-9)
poss(lady-friends-12, her-11)
prep_of(one-9, lady-friends-12)
aux(given-16, might-14)
aux(given-16, have-15)
root(ROOT-0, given-16)
iobj(given-16, it-17)
dobj(given-16, her-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB be)
        (NP (PRP$ yours) (CD one) (NN day))
        (: --)
        (SBAR (IN that)
          (S
            (VP (VBZ is) (, ,)
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VB marry)
                    (NP
                      (NP (DT the) (NN man))
                      (SBAR
                        (S
                          (NP (PRP I))
                          (VP (MD should)
                            (VP (VB like)
                              (S
                                (NP (PRP you))
                                (VP (TO to)
                                  (VP (VB marry)))))))))))))))))
    (. .) ('' '')))

nsubj(day-6, It-1)
aux(day-6, will-2)
cop(day-6, be-3)
poss(day-6, yours-4)
num(day-6, one-5)
root(ROOT-0, day-6)
mark(is-9, that-8)
ccomp(day-6, is-9)
parataxis(day-6, is-9)
mark(marry-13, if-11)
nsubj(marry-13, you-12)
advcl(is-9, marry-13)
det(man-15, the-14)
dobj(marry-13, man-15)
nsubj(like-18, I-16)
aux(like-18, should-17)
rcmod(man-15, like-18)
dobj(like-18, you-19)
nsubj(marry-21, you-19)
aux(marry-21, to-20)
xcomp(like-18, marry-21)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Dear)
        (NP (NN father))))
    (, ,)
    (VP (VBP do) (RB not)
      (VP (VB talk)
        (PP (IN of)
          (S
            (VP (VBG marrying))))))
    (. .)))

dep(talk-7, Dear-2)
dobj(Dear-2, father-3)
aux(talk-7, do-5)
neg(talk-7, not-6)
root(ROOT-0, talk-7)
prepc_of(talk-7, marrying-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (RB enough))
        (PP (IN with)
          (NP (PRP you)))))
    (, ,) ('' '')
    (VP
      (VP (VBD cried)
        (NP (NNP Alexa)))
      (, ,)
      (CC and)
      (VP (VBD felt)
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP she))
            (ADJP (VBN hated))))))
    (NP (NNP George))
    (. .)))

nsubj(have-2, I-1)
ccomp(cried-8, have-2)
dobj(have-2, enough-3)
prep_with(have-2, you-5)
root(ROOT-0, cried-8)
dobj(cried-8, Alexa-9)
conj_and(cried-8, felt-12)
advmod(hated-16, as-13)
mark(hated-16, if-14)
dep(hated-16, she-15)
advcl(felt-12, hated-16)
dep(cried-8, George-17)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Unfortunately))
      (, ,)
      (NP (PRP you))
      (VP (MD can) (RB not)
        (VP (VB have)
          (NP (PRP me))
          (ADVP (RB always)))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (PRP$ her) (NN father))
    (. .)))

advmod(have-7, Unfortunately-2)
nsubj(have-7, you-4)
aux(have-7, can-5)
neg(have-7, not-6)
ccomp(returned-12, have-7)
dobj(have-7, me-8)
advmod(have-7, always-9)
root(ROOT-0, returned-12)
poss(father-14, her-13)
nsubj(returned-12, father-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB say)
          (NP (NN nothing))
          (ADVP (RBR more) (RB now)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP desire)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB consider)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP I))
                  (VP (VBP have)
                    (VP (VBD said))))))))))
    (. .) ('' '')))

nsubj(say-4, I-2)
aux(say-4, will-3)
root(ROOT-0, say-4)
dobj(say-4, nothing-5)
advmod(now-7, more-6)
advmod(say-4, now-7)
nsubj(desire-11, I-10)
conj_but(say-4, desire-11)
dobj(desire-11, you-12)
nsubj(consider-14, you-12)
aux(consider-14, to-13)
xcomp(desire-11, consider-14)
dobj(said-18, what-15)
nsubj(said-18, I-16)
aux(said-18, have-17)
ccomp(consider-14, said-18)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD put)
      (NP (DT the) (NN watch))
      (PP (IN in)
        (NP (PRP$ his) (NN hand))))
    (. .)))

nsubj(put-2, Alexa-1)
root(ROOT-0, put-2)
det(watch-4, the-3)
dobj(put-2, watch-4)
poss(hand-7, his-6)
prep_in(put-2, hand-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP trust)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP do) (RB not)
            (VP (VB suppose)
              (PRN (, ,) ('' '')
                (S
                  (NP (PRP she))
                  (VP (VBD said)))
                (, ,) (`` ``))
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT a) (NN house))
                    (PP (JJ full) (IN of)
                      (NP
                        (NP (NNS things))
                        (PP (IN like)
                          (NP (DT that))))))
                  (VP (MD would)
                    (VP (VB make)
                      (NP (DT any) (NN difference)))))))))))
    (. .) ('' '')))

nsubj(trust-3, I-2)
root(ROOT-0, trust-3)
nsubj(suppose-7, you-4)
aux(suppose-7, do-5)
neg(suppose-7, not-6)
ccomp(trust-3, suppose-7)
nsubj(said-11, she-10)
parataxis(suppose-7, said-11)
mark(make-23, that-14)
det(house-16, a-15)
nsubj(make-23, house-16)
dep(house-16, full-17)
prep_of(house-16, things-19)
prep_like(things-19, that-21)
aux(make-23, would-22)
ccomp(suppose-7, make-23)
det(difference-25, any-24)
dobj(make-23, difference-25)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD looked)
      (ADVP (RB up)
        (PP (IN at)
          (NP (PRP her))))
      (ADVP (RB sharply)))
    (. .)))

nsubj(looked-2, He-1)
root(ROOT-0, looked-2)
advmod(looked-2, up-3)
prep_at(up-3, her-5)
advmod(looked-2, sharply-6)

(ROOT
  (NP
    (NP
      (NP (DT A) (NN house))
      (ADJP (JJ full)))
    (: --)
    (SBAR
      (WHNP (WP what))
      (S
        (VP (VBD did)
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBP know)))))))
    (. ?)))

det(house-2, A-1)
root(ROOT-0, house-2)
nsubj(did-6, house-2)
amod(house-2, full-3)
rcmod(house-2, did-6)
nsubj(know-8, she-7)
ccomp(did-6, know-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBN silenced)
        (NP (PRP him))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD lay)
        (S
          (VP (VBG thinking)))))
    (. .)))

nsubj(silenced-2, It-1)
root(ROOT-0, silenced-2)
dobj(silenced-2, him-3)
nsubj(lay-7, he-6)
conj_and(silenced-2, lay-7)
xcomp(lay-7, thinking-8)

(ROOT
  (S
    (ADVP (RB Surely))
    (NP
      (NP (DT the) (NN delight))
      (PP (IN of)
        (NP (JJ lovely) (NNS things))))
    (VP (MD must)
      (VP (VB be)
        (PP (IN in)
          (NP
            (NP (DT every) (NN woman) (POS 's))
            (NN heart)))))
    (. .)))

advmod(be-8, Surely-1)
det(delight-3, the-2)
nsubj(be-8, delight-3)
amod(things-6, lovely-5)
prep_of(delight-3, things-6)
aux(be-8, must-7)
root(ROOT-0, be-8)
det(woman-11, every-10)
poss(heart-13, woman-11)
prep_in(be-8, heart-13)

(ROOT
  (SQ (VBD Was) (RB not)
    (NP
      (NP (DT the) (NN passion))
      (, ,)
      (NP (VBG developed)
        (CC or)
        (NN undeveloped))
      (, ,))
    (NP (JJ universal))
    (. ?)))

cop(universal-10, Was-1)
neg(universal-10, not-2)
det(passion-4, the-3)
nsubj(universal-10, passion-4)
appos(passion-4, developed-6)
appos(passion-4, undeveloped-8)
conj_or(developed-6, undeveloped-8)
root(ROOT-0, universal-10)

(ROOT
  (SQ (MD Could)
    (NP
      (NP (DT a) (NN child))
      (PP (IN of)
        (NP (PRP$ his) (NN _))))
    (VP (RB not) (VB _)
      (NP (NN care))
      (PP (IN for)
        (NP (JJ such) (NNS things))))
    (. ?)))

aux(_-8, Could-1)
det(child-3, a-2)
nsubj(_-8, child-3)
poss(_-6, his-5)
prep_of(child-3, _-6)
neg(_-8, not-7)
root(ROOT-0, _-8)
dobj(_-8, care-9)
amod(things-12, such-11)
prep_for(_-8, things-12)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Ah)))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said)
          (PP (TO to)
            (NP (PRP himself))))))
    (, ,) (`` ``)
    (NP (PRP she))
    (VP (VBZ takes)
      (PP (IN after)
        (NP (PRP$ her) (NN mother))))
    (. .) ('' '')))

dep(takes-12, Ah-2)
nsubj(said-6, he-5)
parataxis(takes-12, said-6)
prep_to(said-6, himself-8)
nsubj(takes-12, she-11)
root(ROOT-0, takes-12)
poss(mother-15, her-14)
prep_after(takes-12, mother-15)

(ROOT
  (S
    (NP (DT A) (NN wall))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB rise)
            (PP (IN between)
              (NP
                (NP (PRP him))
                (CC and)
                (NP (PRP$ his) (NN daughter))))))))
    (. .)))

det(wall-2, A-1)
nsubj(seemed-3, wall-2)
nsubj(rise-5, wall-2)
root(ROOT-0, seemed-3)
aux(rise-5, to-4)
xcomp(seemed-3, rise-5)
prep_between(rise-5, him-7)
poss(daughter-10, his-9)
prep_between(rise-5, daughter-10)
conj_and(him-7, daughter-10)

(ROOT
  (NP (NNS Alas) (. !)))

root(ROOT-0, Alas-1)

(ROOT
  (INTJ (UH alas) (. !)))

root(ROOT-0, alas-1)

(ROOT
  (S
    (NP (DT the) (NNS things))
    (PRN
      (S
        (NP (PRP he))
        (VP
          (VP (VBD loved))
          (CC and)
          (VP (MD must)))))
    (NP (CD one) (NN day) (NN yield))
    (VP (MD would) (RB not)
      (VP (VB be)
        (VP (VBN cherished)
          (PP (IN by)
            (NP (PRP her))))))
    (. .)))

det(things-2, the-1)
nsubjpass(cherished-13, things-2)
nsubj(loved-4, he-3)
parataxis(cherished-13, loved-4)
conj_and(loved-4, must-6)
parataxis(cherished-13, must-6)
num(yield-9, one-7)
nn(yield-9, day-8)
nsubjpass(cherished-13, yield-9)
aux(cherished-13, would-10)
neg(cherished-13, not-11)
auxpass(cherished-13, be-12)
root(ROOT-0, cherished-13)
agent(cherished-13, her-15)

(ROOT
  (S
    (NP (DT No) (NN tender) (NN regard))
    (VP (MD would)
      (VP (VB hover)
        (PRT (RP around))
        (NP (PRP them))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBN gone)))))))
    (. .)))

neg(regard-3, No-1)
nn(regard-3, tender-2)
nsubj(hover-5, regard-3)
aux(hover-5, would-4)
root(ROOT-0, hover-5)
prt(hover-5, around-6)
dobj(hover-5, them-7)
advmod(gone-11, when-8)
nsubjpass(gone-11, he-9)
auxpass(gone-11, was-10)
advcl(hover-5, gone-11)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD would)
      (VP (VB be)
        (ADVP (RB no)
          (VP (VBG protecting)
            (ADVP (RB divinity))
            (PP (TO to)
              (NP (PRP them)))))))
    (. .)))

nsubj(be-3, She-1)
aux(be-3, would-2)
root(ROOT-0, be-3)
advmod(be-3, no-4)
dep(no-4, protecting-5)
advmod(protecting-5, divinity-6)
prep_to(protecting-5, them-8)

(ROOT
  (NP
    (NP (NNP God))
    (PP (IN in)
      (NP (NN heaven)))
    (. !)))

root(ROOT-0, God-1)
prep_in(God-1, heaven-3)

(ROOT
  (S
    (S
      (NP (PRP she))
      (VP (MD might)))
    (: --)
    (S
      (NP (PRP she))
      (VP (MD would)))
    (: --)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP she))
              (VP (MD would)
                (VP (VB sell)
                  (NP (PRP them)))))))))
    (. .)))

nsubj(might-2, she-1)
root(ROOT-0, might-2)
nsubj(would-5, she-4)
parataxis(might-2, would-5)
nsubj(sure-9, he-7)
cop(sure-9, was-8)
parataxis(might-2, sure-9)
nsubj(sell-12, she-10)
aux(sell-12, would-11)
ccomp(sure-9, sell-12)
dobj(sell-12, them-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (NP
        (NP (DT the) (JJ sole) (JJ possible) (NN comfort))
        (PP (IN of)
          (NP (NN avarice))))
      (, ,)
      (SBAR
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (VBZ passes)
              (ADJP (JJ empty)
                (CC and)
                (JJ hungry))
              (PP (IN into)
                (NP (DT the) (JJ empty) (NNS regions))))))
        (: --)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NNS things))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (MD can)
                    (ADVP (DT no) (RBR more))
                    (VP
                      (VP (VB see)
                        (PP (IN with)
                          (NP (NNS eyes))))
                      (CC or)
                      (VP (VB handle)
                        (PP (IN with)
                          (NP (NNS hands)))))))))
            (VP (MD will)
              (ADVP (RB yet))
              (VP (VB be)
                (ADVP (RB together) (RB somewhere))))))))
    (. .)))

nsubj(seems-2, It-1)
root(ROOT-0, seems-2)
det(comfort-6, the-3)
amod(comfort-6, sole-4)
amod(comfort-6, possible-5)
xcomp(seems-2, comfort-6)
prep_of(comfort-6, avarice-8)
mark(passes-12, as-10)
nsubj(passes-12, it-11)
advcl(seems-2, passes-12)
acomp(passes-12, empty-13)
acomp(passes-12, hungry-15)
conj_and(empty-13, hungry-15)
det(regions-19, the-17)
amod(regions-19, empty-18)
prep_into(passes-12, regions-19)
mark(be-37, that-21)
det(things-23, the-22)
nsubj(be-37, things-23)
nsubj(see-28, it-24)
nsubj(handle-32, it-24)
aux(see-28, can-25)
neg(more-27, no-26)
advmod(see-28, more-27)
rcmod(things-23, see-28)
prep_with(see-28, eyes-30)
rcmod(things-23, handle-32)
conj_or(see-28, handle-32)
prep_with(handle-32, hands-34)
aux(be-37, will-35)
advmod(be-37, yet-36)
dep(passes-12, be-37)
advmod(somewhere-39, together-38)
advmod(be-37, somewhere-39)

(ROOT
  (S
    (ADVP (RB Hence))
    (NP (DT the) (JJ rich))
    (VP (VBP leave)
      (PP (TO to)
        (NP (DT the) (JJ rich)))
      (, ,)
      (S
        (VP (VBG avoiding)
          (NP
            (NP (DT the) (NN man))
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (ADVP (RBS most))
                  (VP (VBZ needs))
                  (, ,)
                  (CC or)
                  (VP (MD would)
                    (ADVP (RBS best))
                    (VP (VB use)
                      (NP (PRP$ their) (NN money)))))))))))
    (. .)))

advmod(leave-4, Hence-1)
det(rich-3, the-2)
nsubj(leave-4, rich-3)
root(ROOT-0, leave-4)
det(rich-7, the-6)
prep_to(leave-4, rich-7)
xcomp(leave-4, avoiding-9)
det(man-11, the-10)
dobj(avoiding-9, man-11)
nsubj(needs-14, man-11)
nsubj(use-19, man-11)
advmod(needs-14, most-13)
rcmod(man-11, needs-14)
aux(use-19, would-17)
advmod(use-19, best-18)
rcmod(man-11, use-19)
conj_or(needs-14, use-19)
poss(money-21, their-20)
dobj(use-19, money-21)

(ROOT
  (SQ (VBZ Is)
    (NP (EX there))
    (NP
      (NP (DT a) (VBG lurking) (NN notion))
      (PP (IN in)
        (NP
          (NP (DT the) (NN man))
          (PP (IN of)
            (NP
              (NP (JJ much) (NNS goods))
              (PRN (, ,)
                (S
                  (NP (PRP I))
                  (VP (VBP wonder)))
                (, ,))
              (SBAR (IN that)
                (S (, ,)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (JJ still) (NNS watches))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN night))
                          (, ,)
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (NNS men))
                              (VP (VBP sleep))))))))
                  (, ,)
                  (NP (PRP he))
                  (VP (MD will)
                    (VP (VB return)
                      (S
                        (VP (TO to)
                          (VP (VB look)
                            (PP (IN on)
                              (SBAR
                                (WHNP (WP what))
                                (S
                                  (NP (PRP he))
                                  (VP (VBZ leaves)
                                    (PP (IN behind)
                                      (NP (PRP him)))))))))))))))))))
    (. ?)))

root(ROOT-0, Is-1)
expl(Is-1, there-2)
det(notion-5, a-3)
amod(notion-5, lurking-4)
nsubj(Is-1, notion-5)
det(man-8, the-7)
prep_in(notion-5, man-8)
amod(goods-11, much-10)
prep_of(man-8, goods-11)
nsubj(wonder-14, I-13)
dep(goods-11, wonder-14)
mark(return-32, that-16)
det(watches-21, the-19)
amod(watches-21, still-20)
prep_in(return-32, watches-21)
det(night-24, the-23)
prep_of(watches-21, night-24)
tmod(sleep-28, night-24)
advmod(sleep-28, when-26)
nsubj(sleep-28, men-27)
rcmod(night-24, sleep-28)
nsubj(return-32, he-30)
nsubj(look-34, he-30)
aux(return-32, will-31)
dep(goods-11, return-32)
aux(look-34, to-33)
xcomp(return-32, look-34)
dobj(leaves-38, what-36)
nsubj(leaves-38, he-37)
prepc_on(look-34, leaves-38)
prep_behind(leaves-38, him-40)

(ROOT
  (SQ (NNP Does)
    (NP (PRP he))
    (VP (VB forget)
      (NP
        (NP (DT the) (NN torture))
        (PP (IN of)
          (S
            (VP (VBG seeing)
              (NP (PRP it))
              (PP (IN at)
                (NP (DT the) (NN command)))
              (, ,)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN enjoyment))
                  (PP (IN of)
                    (NP
                      (NP (DT another))
                      (: --)
                      (NP
                        (NP (PRP$ his) (NN will))
                        (PP (VBG concerning)
                          (NP
                            (NP (DT this) (NN thing))
                            (CC or)
                            (NP
                              (NP (DT that))
                              (PP (CC but)
                                (NP (DT a) (NN mockery))))))))))))))))
    (. ?)))

dep(forget-3, Does-1)
nsubj(forget-3, he-2)
root(ROOT-0, forget-3)
det(torture-5, the-4)
dobj(forget-3, torture-5)
prepc_of(torture-5, seeing-7)
dobj(seeing-7, it-8)
det(command-11, the-10)
prep_at(seeing-7, command-11)
det(enjoyment-15, the-14)
prep_in(seeing-7, enjoyment-15)
prep_of(enjoyment-15, another-17)
poss(will-20, his-19)
dep(another-17, will-20)
det(thing-23, this-22)
prep_concerning(will-20, thing-23)
prep_concerning(will-20, that-25)
conj_or(thing-23, that-25)
prep(that-25, but-26)
det(mockery-28, a-27)
pobj(but-26, mockery-28)

(ROOT
  (SQ (NNP Does)
    (NP (PRP he))
    (VP (VB know)
      (SBAR (IN that)
        (S
          (NP
            (NP (PRP he))
            (SBAR
              (WHNP (WP who))
              (S
                (ADVP (RB then))
                (VP (VBZ holds)
                  (SBAR
                    (S
                      (S
                        (NP (PRP them))
                        (VP (MD will) (RB not)
                          (VP (VB be)
                            (ADJP (JJ able)
                              (S
                                (VP (TO to)
                                  (VP (VB conceive)
                                    (PP (IN of)
                                      (S
                                        (NP (PRP$ their))
                                        (VP (VBG having)
                                          (VP (VBN been))))))))))))
                      (CC or)
                      (ADVP (RB ever))
                      (S
                        (VP (VBG being)
                          (NP (DT another))))))))))
          (VP (VBZ 's)
            (SBAR (IN as)
              (S
                (ADVP (RB now))
                (NP (PRP they))
                (VP (VBP are)
                  (NP (PRP$ his)))))))))
    (. ?)))

dep(know-3, Does-1)
nsubj(know-3, he-2)
root(ROOT-0, know-3)
mark('s-24, that-4)
nsubj(holds-8, he-5)
nsubj(able-13, he-5)
nsubj('s-24, he-5)
advmod(holds-8, then-7)
rcmod(he-5, holds-8)
nsubj(able-13, them-9)
nsubj(conceive-15, them-9)
aux(able-13, will-10)
neg(able-13, not-11)
cop(able-13, be-12)
dep(holds-8, able-13)
aux(conceive-15, to-14)
xcomp(able-13, conceive-15)
nsubj(been-19, their-17)
aux(been-19, having-18)
prepc_of(conceive-15, been-19)
advmod(another-23, ever-21)
cop(another-23, being-22)
dep(holds-8, another-23)
conj_or(able-13, another-23)
ccomp(know-3, 's-24)
mark(his-29, as-25)
advmod(his-29, now-26)
nsubj(his-29, they-27)
cop(his-29, are-28)
advcl('s-24, his-29)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP (NNP Alexa))
          (VP (VBD sat)
            (PP (IN in)
              (NP (DT the) (NN dim) (NN light)))
            (PP (IN by)
              (NP (PRP$ her) (JJ brooding) (NN father))))))
      (NP (PRP she))
      (VP (VBD loathed)
        (NP
          (NP (DT the) (VBG shining) (NN thing))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD had)
                (ADVP (RB again))
                (VP (VBN drawn)
                  (PP (IN under)
                    (NP (DT the) (NNS bed-clothes))))))))))
    (: --)
    (S
      (S
        (VP (VBN shrunk)
          (PP (IN from)
            (NP (PRP it)))
          (PP (IN as)
            (PP (IN from)
              (NP (DT a) (NN manacle))))))
      (NP (DT the) (NNP devil))
      (VP (VBD had)
        (VP (VBN tried)
          (S
            (VP (TO to)
              (VP (VB slip)
                (PP (IN on)
                  (NP (PRP$ her) (NN wrist)))))))))
    (. .)))

mark(sat-3, As-1)
nsubj(sat-3, Alexa-2)
advcl(loathed-13, sat-3)
det(light-7, the-5)
nn(light-7, dim-6)
prep_in(sat-3, light-7)
poss(father-11, her-9)
amod(father-11, brooding-10)
prep_by(sat-3, father-11)
nsubj(loathed-13, she-12)
root(ROOT-0, loathed-13)
det(thing-16, the-14)
amod(thing-16, shining-15)
dobj(loathed-13, thing-16)
nsubj(drawn-20, he-17)
aux(drawn-20, had-18)
advmod(drawn-20, again-19)
rcmod(thing-16, drawn-20)
det(bed-clothes-23, the-22)
prep_under(drawn-20, bed-clothes-23)
dep(tried-35, shrunk-25)
prep_from(shrunk-25, it-27)
prepc_as_from(shrunk-25, from-29)
det(manacle-31, a-30)
pobj(shrunk-25, manacle-31)
det(devil-33, the-32)
nsubj(tried-35, devil-33)
nsubj(slip-37, devil-33)
aux(tried-35, had-34)
parataxis(loathed-13, tried-35)
aux(slip-37, to-36)
xcomp(tried-35, slip-37)
poss(wrist-40, her-39)
prep_on(slip-37, wrist-40)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ judicial) (NN assumption))
      (PP (IN of)
        (NP (NN society))))
    (ADVP (RB suddenly))
    (VP (VBD appeared)
      (PP (IN in)
        (NP
          (NP (DT the) (NNS emptiness))
          (PP (IN of)
            (NP (PRP$ its) (NN arrogance))))))
    (. .)))

det(assumption-3, The-1)
amod(assumption-3, judicial-2)
nsubj(appeared-7, assumption-3)
prep_of(assumption-3, society-5)
advmod(appeared-7, suddenly-6)
root(ROOT-0, appeared-7)
det(emptiness-10, the-9)
prep_in(appeared-7, emptiness-10)
poss(arrogance-13, its-12)
prep_of(emptiness-10, arrogance-13)

(ROOT
  (S
    (NP
      (NP (NNP Marriage))
      (PP (IN for)
        (NP
          (NP (DT the) (NN sake))
          (PP (IN of)
            (NP (JJ _) (NNS things))))))
    (VP (VBZ _))
    (. .)))

nsubj(_-8, Marriage-1)
det(sake-4, the-3)
prep_for(Marriage-1, sake-4)
amod(things-7, _-6)
prep_of(sake-4, things-7)
root(ROOT-0, _-8)

(ROOT
  (S
    (S
      (VP (VBG Was)
        (S
          (NP (PRP she))
          (NP
            (NP (RB not) (DT a) (JJ live) (NN soul))
            (, ,)
            (VP (VBN made)
              (PP (IN for)
                (NP
                  (NP (JJR better))
                  (PP (IN than)
                    (SBAR (IN that)
                      (S
                        (NP (PRP She))
                        (VP (VBD was)
                          (ADJP (JJ ashamed)
                            (PP (IN of)
                              (NP (DT the) (JJ innocent) (NN pleasure)))))))))))))))
    (NP (DT the) (JJ glittering) (NN toy))
    (VP (VBD had)
      (VP (VBN given)
        (NP (PRP her))))
    (. .)))

dep(given-24, Was-1)
nsubj(soul-6, she-2)
neg(soul-6, not-3)
det(soul-6, a-4)
amod(soul-6, live-5)
xcomp(Was-1, soul-6)
vmod(soul-6, made-8)
prep_for(made-8, better-10)
mark(ashamed-15, that-12)
nsubj(ashamed-15, She-13)
cop(ashamed-15, was-14)
prepc_than(better-10, ashamed-15)
det(pleasure-19, the-17)
amod(pleasure-19, innocent-18)
prep_of(ashamed-15, pleasure-19)
det(toy-22, the-20)
amod(toy-22, glittering-21)
nsubj(given-24, toy-22)
aux(given-24, had-23)
root(ROOT-0, given-24)
dobj(given-24, her-25)

(ROOT
  (S
    (NP (DT The) (NN laird))
    (VP
      (VP (VBD cast)
        (ADVP (RB now)))
      (CC and)
      (VP
        (ADVP (RB then))
        (NP (DT a) (NN glance))
        (PP (IN at)
          (NP (PRP$ her) (NN face))))
      (, ,)
      (CC and)
      (VP (VBD sighed)))
    (. .)))

det(laird-2, The-1)
nsubj(cast-3, laird-2)
nsubj(sighed-14, laird-2)
root(ROOT-0, cast-3)
advmod(cast-3, now-4)
advmod(glance-8, then-6)
det(glance-8, a-7)
conj_and(cast-3, glance-8)
poss(face-11, her-10)
prep_at(glance-8, face-11)
conj_and(cast-3, sighed-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD gathered)
        (PP (IN from)
          (NP (PRP it)))
        (NP
          (NP (DT the) (NN conviction))
          (SBAR (IN that)
            (S
              (NP (PRP she))
              (VP (MD would)
                (VP (VB be)
                  (NP
                    (NP (DT a) (JJ cruel) (NN step-mother))
                    (PP (TO to)
                      (NP (PRP$ his) (NNS children)))))))))))
    (, ,)
    (NP (PRP her))
    (VP (VBZ mercy)
      (NP
        (NP (DT that))
        (PP (IN of)
          (NP (DT a) (JJ loveless) (NN non-collector)))))
    (. .)))

nsubj(gathered-2, He-1)
ccomp(mercy-19, gathered-2)
prep_from(gathered-2, it-4)
det(conviction-6, the-5)
dobj(gathered-2, conviction-6)
mark(step-mother-13, that-7)
nsubj(step-mother-13, she-8)
aux(step-mother-13, would-9)
cop(step-mother-13, be-10)
det(step-mother-13, a-11)
amod(step-mother-13, cruel-12)
dep(conviction-6, step-mother-13)
poss(children-16, his-15)
prep_to(step-mother-13, children-16)
nsubj(mercy-19, her-18)
root(ROOT-0, mercy-19)
dobj(mercy-19, that-20)
det(non-collector-24, a-22)
amod(non-collector-24, loveless-23)
prep_of(that-20, non-collector-24)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD should) (RB not)
      (VP (VB be)))
    (. .)))

nsubj(be-4, It-1)
aux(be-4, should-2)
neg(be-4, not-3)
root(ROOT-0, be-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP (VB do)
        (ADVP (RBR better))
        (PP (IN for)
          (NP (PRP them)))
        (PP (IN than)
          (NP (DT that)))))
    (. .)))

nsubj(do-3, He-1)
aux(do-3, would-2)
root(ROOT-0, do-3)
advmod(do-3, better-4)
prep_for(do-3, them-6)
prep_than(do-3, that-8)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD loved)
        (NP (PRP$ his) (NN daughter)))
      (, ,)
      (CC but)
      (VP (VBD needed) (RB not)
        (VP
          (ADVP (RB therefore))
          (VB sacrifice)
          (NP (PRP$ his) (JJ last) (NNS hopes))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT the) (NN sacrifice))
              (VP (MD would)
                (VP (VB meet)
                  (PP (IN with)
                    (NP (DT no) (NN acceptance))))))))))
    (. .)))

nsubj(loved-2, He-1)
nsubj(needed-7, He-1)
root(ROOT-0, loved-2)
poss(daughter-4, his-3)
dobj(loved-2, daughter-4)
conj_but(loved-2, needed-7)
neg(needed-7, not-8)
advmod(sacrifice-10, therefore-9)
dep(needed-7, sacrifice-10)
poss(hopes-13, his-11)
amod(hopes-13, last-12)
dobj(sacrifice-10, hopes-13)
advmod(meet-18, where-14)
det(sacrifice-16, the-15)
nsubj(meet-18, sacrifice-16)
aux(meet-18, would-17)
advcl(sacrifice-10, meet-18)
neg(acceptance-21, no-20)
prep_with(meet-18, acceptance-21)

(ROOT
  (S
    (NP
      (NP (NNP House))
      (CC and)
      (NP (NN land)))
    (VP (MD should)
      (VP (VB be)
        (NP
          (NP (NNS hers))
          (, ,)
          (CONJP (CC but)
            (RB not))
          (NP (PRP$ his) (NNS jewels))
          (: ;)
          (NP
            (NP (RB not) (DT the) (NNS contents))
            (PP (IN of)
              (NP (PRP$ his) (NN closet)))))))
    (. .)))

nsubj(hers-6, House-1)
conj_and(House-1, land-3)
nsubj(hers-6, land-3)
aux(hers-6, should-4)
cop(hers-6, be-5)
root(ROOT-0, hers-6)
poss(jewels-11, his-10)
conj_negcc(hers-6, jewels-11)
neg(contents-15, not-13)
det(contents-15, the-14)
conj_negcc(hers-6, contents-15)
poss(closet-18, his-17)
prep_of(contents-15, closet-18)

(ROOT
  (NP (NNP CHAPTER) (NNP XXVIII) (. .)))

nn(XXVIII-2, CHAPTER-1)
root(ROOT-0, XXVIII-2)

(ROOT
  (S
    (NP (NNP THE))
    (VP (MD WILL))
    (. .)))

nsubj(WILL-2, THE-1)
root(ROOT-0, WILL-2)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD came)
        (ADVP (RB again))
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP him))
              (NP (DT the) (JJ next) (NN day))))))
      (, ,)
      (CC and)
      (VP (VBD had)
        (NP
          (NP
            (ADVP (RB again))
            (DT a) (JJ long) (NN conference))
          (PP (IN with)
            (NP (PRP him))))))
    (. .)))

nsubj(came-2, George-1)
nsubj(see-5, George-1)
nsubj(had-12, George-1)
root(ROOT-0, came-2)
advmod(came-2, again-3)
aux(see-5, to-4)
xcomp(came-2, see-5)
dobj(see-5, him-6)
det(day-9, the-7)
amod(day-9, next-8)
tmod(see-5, day-9)
conj_and(came-2, had-12)
advmod(conference-16, again-13)
det(conference-16, a-14)
amod(conference-16, long-15)
dobj(had-12, conference-16)
prep_with(conference-16, him-18)

(ROOT
  (S
    (S
      (NP (DT The) (NN laird))
      (VP (VBD told)
        (NP (PRP him))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (ADVP (RB fully))
              (VP (VBN resolved)
                (S
                  (VP (TO to)
                    (VP (VB leave)
                      (NP
                        (NP
                          (NP (NN everything))
                          (PP (TO to)
                            (NP (PRP$ his) (NN daughter))))
                        (, ,)
                        (ADJP (JJ personal)
                          (CONJP (RB as) (RB well) (IN as))
                          (JJ real))
                        (, ,))
                      (PP (IN on)
                        (NP (DT the) (CD one) (NN condition)))
                      (SBAR (IN that)
                        (S
                          (NP (PRP she))
                          (VP (MD should)
                            (VP (VB marry)
                              (NP (PRP$ her) (NN cousin))))))
                      (: ;)
                      (SBAR (IN if)
                        (S
                          (NP (PRP she))
                          (VP (MD would) (RB not)))))))))))))
    (, ,) (RB then)
    (S
      (NP
        (NP
          (NP (DT the) (NNS contents))
          (PP (IN of)
            (NP (PRP$ his) (NN closet)))
          (, ,)
          (PP (IN with)
            (NP (PRP$ his) (NN library))))
        (, ,)
        (CC and)
        (NP
          (NP (JJ certain) (NNS articles))
          (VP (VBN specified)))
        (, ,))
      (VP (MD should)
        (VP (VB pass)
          (PP (TO to)
            (NP (NNP Crawford))))))
    (. .)))

det(laird-2, The-1)
nsubj(told-3, laird-2)
root(ROOT-0, told-3)
dobj(told-3, him-4)
mark(resolved-9, that-5)
nsubj(resolved-9, he-6)
nsubj(leave-11, he-6)
aux(resolved-9, had-7)
advmod(resolved-9, fully-8)
ccomp(told-3, resolved-9)
aux(leave-11, to-10)
xcomp(resolved-9, leave-11)
dobj(leave-11, everything-12)
poss(daughter-15, his-14)
prep_to(everything-12, daughter-15)
amod(everything-12, personal-17)
amod(everything-12, real-21)
conj_and(personal-17, real-21)
det(condition-26, the-24)
num(condition-26, one-25)
prep_on(leave-11, condition-26)
mark(marry-30, that-27)
nsubj(marry-30, she-28)
aux(marry-30, should-29)
ccomp(leave-11, marry-30)
poss(cousin-32, her-31)
dobj(marry-30, cousin-32)
mark(would-36, if-34)
nsubj(would-36, she-35)
advcl(leave-11, would-36)
parataxis(leave-11, would-36)
neg(would-36, not-37)
advmod(pass-56, then-39)
det(contents-41, the-40)
nsubj(pass-56, contents-41)
poss(closet-44, his-43)
prep_of(contents-41, closet-44)
poss(library-48, his-47)
prep_with(contents-41, library-48)
amod(articles-52, certain-51)
conj_and(contents-41, articles-52)
nsubj(pass-56, articles-52)
vmod(articles-52, specified-53)
aux(pass-56, should-55)
parataxis(told-3, pass-56)
prep_to(pass-56, Crawford-58)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB take)
        (NP (NN care))
        (PRN (, ,) ('' '')
          (S
            (NP (PRP he))
            (VP (VBD said)))
          (, ,) (`` ``))
        (SBAR (IN if)
          (S
            (NP (PRP$ my) (NN death))
            (VP (MD should)
              (VP (VB come)
                (ADVP (RB suddenly))
                (, ,)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (NN anything))
                      (ADJP (JJ valuable)
                        (PP (IN in)
                          (NP (DT this) (NN room)))))
                    (VP (VB be)
                      (VP (VBN carried)
                        (PP (IN into)
                          (NP (DT the) (NN closet)))
                        (SBAR (IN before)
                          (S
                            (NP (PRP it))
                            (VP (VBZ is)
                              (VP (VBN sealed)
                                (PRT (RP up))))))))))))))))
    (. .) ('' '')))

cc(take-5, And-2)
nsubj(take-5, you-3)
aux(take-5, must-4)
root(ROOT-0, take-5)
dobj(take-5, care-6)
nsubj(said-10, he-9)
parataxis(take-5, said-10)
mark(come-17, if-13)
poss(death-15, my-14)
nsubj(come-17, death-15)
aux(come-17, should-16)
advcl(take-5, come-17)
advmod(come-17, suddenly-18)
mark(carried-27, that-20)
nsubjpass(carried-27, anything-21)
amod(anything-21, valuable-22)
det(room-25, this-24)
prep_in(valuable-22, room-25)
auxpass(carried-27, be-26)
ccomp(come-17, carried-27)
det(closet-30, the-29)
prep_into(carried-27, closet-30)
mark(sealed-34, before-31)
nsubjpass(sealed-34, it-32)
auxpass(sealed-34, is-33)
advcl(carried-27, sealed-34)
prt(sealed-34, up-35)

(ROOT
  (S
    (S
      (VP (VBG Shrinking)
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD did)
              (PP (IN from)
                (NP
                  (NP (DT the) (NN idea))
                  (PP (IN of)
                    (NP (NN death))))))))))
    (, ,)
    (NP (DT the) (JJ old) (NN man))
    (VP (VBD was)
      (ADVP (RB yet))
      (ADJP (JJ able)
        (PRN (, ,)
          (PP (IN in)
            (NP
              (NP (DT the) (NN interest))
              (PP (IN of)
                (NP (PRP$ his) (NNS possessions)))))
          (, ,))
        (S
          (VP (TO to)
            (VP (VB talk)
              (PP (IN of)
                (NP (PRP it))))))))
    (. !)))

vmod(able-16, Shrinking-1)
mark(did-4, as-2)
nsubj(did-4, he-3)
advcl(Shrinking-1, did-4)
det(idea-7, the-6)
prep_from(did-4, idea-7)
prep_of(idea-7, death-9)
det(man-13, the-11)
amod(man-13, old-12)
nsubj(able-16, man-13)
nsubj(talk-26, man-13)
cop(able-16, was-14)
advmod(able-16, yet-15)
root(ROOT-0, able-16)
dep(able-16, in-18)
det(interest-20, the-19)
pobj(in-18, interest-20)
poss(possessions-23, his-22)
prep_of(interest-20, possessions-23)
aux(talk-26, to-25)
xcomp(able-16, talk-26)
prep_of(talk-26, it-28)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (SBAR (IN as)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBD thought)
                (NP (DT the) (JJ sole) (NN consolation))
                (SBAR (IN that)
                  (S (, ,)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN loss))
                        (PP (IN of)
                          (NP (PRP$ their) (NN owner)))))
                    (, ,)
                    (NP (PRP$ his) (NNS things))
                    (VP (MD could)
                      (VP (VB have))))))))
          (, ,)
          (VP (VBD was)
            (NP
              (NP (DT the) (NN continuance))
              (PP (IN of)
                (NP (PRP$ their) (NN intercourse))))
            (PP (IN with)
              (NP
                (NP (DT each) (JJ other))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN heaven))
                    (PP (IN of)
                      (NP (PRP$ his) (JJ Mammon-besotted) (NN imagination)))))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
mark(continuance-26, as-3)
mark(thought-6, if-4)
nsubj(thought-6, he-5)
advcl(continuance-26, thought-6)
det(consolation-9, the-7)
amod(consolation-9, sole-8)
dobj(thought-6, consolation-9)
mark(have-22, that-10)
det(loss-14, the-13)
prep_in(have-22, loss-14)
poss(owner-17, their-16)
prep_of(loss-14, owner-17)
poss(things-20, his-19)
nsubj(have-22, things-20)
aux(have-22, could-21)
ccomp(thought-6, have-22)
cop(continuance-26, was-24)
det(continuance-26, the-25)
advcl(was-2, continuance-26)
poss(intercourse-29, their-28)
prep_of(continuance-26, intercourse-29)
det(other-32, each-31)
prep_with(continuance-26, other-32)
det(heaven-35, the-34)
prep_in(other-32, heaven-35)
poss(imagination-39, his-37)
amod(imagination-39, Mammon-besotted-38)
prep_of(heaven-35, imagination-39)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP (VBD responded)
        (ADVP (RB heartily))
        (, ,)
        (S
          (VP (VBG showing)
            (S
              (NP (DT a) (NN gratitude))
              (ADJP (RBR more) (JJ genuine)
                (PP (IN than)
                  (ADJP (JJ fine)))))))))
    (: :)
    (S
      (NP (DT every) (NN virtue))
      (VP (VBZ partakes)
        (PP (IN of)
          (NP
            (NP (DT the) (NN ground))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (VP (VBN grown)))))))))
    (. .)))

nsubj(responded-2, George-1)
root(ROOT-0, responded-2)
advmod(responded-2, heartily-3)
xcomp(responded-2, showing-5)
det(gratitude-7, a-6)
nsubj(genuine-9, gratitude-7)
advmod(genuine-9, more-8)
xcomp(showing-5, genuine-9)
prep_than(genuine-9, fine-11)
det(virtue-14, every-13)
nsubj(partakes-15, virtue-14)
parataxis(responded-2, partakes-15)
det(ground-18, the-17)
prep_of(partakes-15, ground-18)
prep_in(grown-23, ground-18)
nsubjpass(grown-23, it-21)
auxpass(grown-23, is-22)
rcmod(ground-18, grown-23)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD assured)
        (NP
          (NP (DT the) (NN laird))
          (SBAR
            (WHNP (WDT that))
            (, ,)
            (S
              (ADVP (RB valuable) (RB as))
              (VP (VBD was)
                (PP (IN in)
                  (NP (PRP itself)))
                (NP
                  (NP (PRP$ his) (JJ contingent) (NN gift))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP (DT no) (NN man))
                      (VP (MD could)
                        (VP (VB appreciate)
                          (NP (JJR more))
                          (PP (IN than)
                            (NP (PRP he))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP
          (ADJP (RB far) (RBR more) (JJ valuable))
          (PP (TO to)
            (NP (PRP him))))
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBD sealed)
              (NP (PRP$ his) (NN adoption))
              (PP (IN as)
                (NP (PRP$ his) (NN son-in-law))))))))
    (. .)))

nsubj(assured-2, He-1)
ccomp(valuable-30, assured-2)
det(laird-4, the-3)
dobj(assured-2, laird-4)
nsubj(gift-14, laird-4)
advmod(as-8, valuable-7)
advmod(gift-14, as-8)
cop(gift-14, was-9)
prep_in(gift-14, itself-11)
poss(gift-14, his-12)
amod(gift-14, contingent-13)
rcmod(laird-4, gift-14)
dobj(appreciate-20, gift-14)
neg(man-18, no-17)
nsubj(appreciate-20, man-18)
aux(appreciate-20, could-19)
rcmod(gift-14, appreciate-20)
dobj(appreciate-20, more-21)
prep_than(appreciate-20, he-23)
nsubj(valuable-30, it-25)
aux(valuable-30, would-26)
cop(valuable-30, be-27)
advmod(valuable-30, far-28)
advmod(valuable-30, more-29)
root(ROOT-0, valuable-30)
prep_to(valuable-30, him-32)
mark(sealed-35, if-33)
nsubj(sealed-35, it-34)
advcl(valuable-30, sealed-35)
poss(adoption-37, his-36)
dobj(sealed-35, adoption-37)
poss(son-in-law-40, his-39)
prep_as(sealed-35, son-in-law-40)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would) (RB rather)
      (VP (VB owe)
        (NP
          (NP (DT the) (NN possession))
          (PP (IN of)
            (NP (DT the) (JJ wonderful) (NN collection))))
        (PP (TO to)
          (NP (DT the) (NN daughter)))
        (PP (IN than)
          (PP (TO to)
            (NP (DT the) (NN father))))))
    (. !)))

nsubj(owe-4, He-1)
aux(owe-4, would-2)
advmod(owe-4, rather-3)
root(ROOT-0, owe-4)
det(possession-6, the-5)
dobj(owe-4, possession-6)
det(collection-10, the-8)
amod(collection-10, wonderful-9)
prep_of(possession-6, collection-10)
det(daughter-13, the-12)
prep_to(owe-4, daughter-13)
prep(owe-4, than-14)
pcomp(than-14, to-15)
det(father-17, the-16)
pobj(to-15, father-17)

(ROOT
  (S
    (PP (IN In)
      (NP (DT either) (NN case)))
    (NP (DT the) (JJ precious) (NN property))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN held)
          (SBAR (IN as)
            (S
              (PP (IN for)
                (NP (PRP him)))
              (, ,)
              (NP (DT each) (NN thing))
              (ADVP (RB as) (RB carefully))
              (VP (VBD tended)
                (PP (IN as) (IN by)
                  (NP
                    (NP
                      (NP (DT the) (NN laird) (POS 's))
                      (JJ own) (NN eye))
                    (CC and)
                    (NP (NN hand))))))))))
    (. !)))

det(case-3, either-2)
prep_in(held-9, case-3)
det(property-6, the-4)
amod(property-6, precious-5)
nsubjpass(held-9, property-6)
aux(held-9, would-7)
auxpass(held-9, be-8)
root(ROOT-0, held-9)
mark(tended-18, as-10)
prep_for(tended-18, him-12)
det(thing-15, each-14)
nsubj(tended-18, thing-15)
advmod(carefully-17, as-16)
advmod(tended-18, carefully-17)
advcl(held-9, tended-18)
dep(tended-18, as-19)
det(laird-22, the-21)
poss(eye-25, laird-22)
amod(eye-25, own-24)
prep_by(tended-18, eye-25)
prep_by(tended-18, hand-27)
conj_and(eye-25, hand-27)

(ROOT
  (S
    (SBAR (IN Whether)
      (S
        (S
          (NP (PRP it))
          (VP (MD would)
            (ADVP (IN at)
              (NP (DT the) (NN moment)))
            (VP (VB have)
              (VP (VBN comforted)
                (NP (DT the) (VBG dying) (NN man)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN assured) (, ,)
                          (SBAR (IN as)
                            (S
                              (NP (NNP George))
                              (VP (MD might)
                                (VP (VB have)
                                  (NP (PRP him))
                                  (, ,)
                                  (SBAR (IN that)
                                    (S
                                      (NP (EX there))
                                      (VP (MD would)
                                        (VP (VB be)
                                          (VP
                                            (ADVP (NN nothing))
                                            (VBN left)
                                            (PP (IN of)
                                              (NP (PRP him)))
                                            (S
                                              (VP (TO to)
                                                (VP (VB grieve)
                                                  (PP (IN at)
                                                    (NP
                                                      (NP (DT the) (NN loss))
                                                      (PP (IN of)
                                                        (NP (PRP$ his) (NNS idols)))))))))))))))))
                          (: --)
                          (NP
                            (NP (NN nothing))
                            (VP (VBN left)
                              (PP (IN of)
                                (NP
                                  (NP (PRP him))
                                  (PP (CC but)
                                    (NP (DT a) (NN memory))))))))))))
                (, ,)
                (S
                  (VP (TO to)
                    (VP (VB last)
                      (ADVP (RB so) (RB long))
                      (PP (IN as)
                        (NP (NNP George)
                          (CC and)
                          (NNP Alexa))))))))))
        (CC and)
        (S
          (NP
            (QP (CD one)
              (CC or)
              (CD two) (JJR more)))
          (VP (MD should)
            (VP (VB remain)
              (ADJP (JJ unburied)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB tell)))
    (. .)))

mark(comforted-8, Whether-1)
nsubj(comforted-8, it-2)
aux(comforted-8, would-3)
advmod(comforted-8, at-4)
det(moment-6, the-5)
pobj(at-4, moment-6)
aux(comforted-8, have-7)
advcl(tell-67, comforted-8)
ccomp(tell-67, comforted-8)
det(man-11, the-9)
amod(man-11, dying-10)
dobj(comforted-8, man-11)
aux(assured-14, to-12)
auxpass(assured-14, be-13)
vmod(man-11, assured-14)
mark(have-19, as-16)
nsubj(have-19, George-17)
aux(have-19, might-18)
advcl(assured-14, have-19)
dobj(have-19, him-20)
mark(left-27, that-22)
expl(left-27, there-23)
aux(left-27, would-24)
auxpass(left-27, be-25)
advmod(left-27, nothing-26)
ccomp(have-19, left-27)
prep_of(left-27, him-29)
aux(grieve-31, to-30)
xcomp(left-27, grieve-31)
det(loss-34, the-33)
prep_at(grieve-31, loss-34)
poss(idols-37, his-36)
prep_of(loss-34, idols-37)
dobj(assured-14, nothing-39)
parataxis(assured-14, nothing-39)
vmod(nothing-39, left-40)
prep_of(left-40, him-42)
prep(him-42, but-43)
det(memory-45, a-44)
pobj(but-43, memory-45)
aux(last-48, to-47)
vmod(comforted-8, last-48)
advmod(long-50, so-49)
advmod(last-48, long-50)
prep_as(last-48, George-52)
prep_as(last-48, Alexa-54)
conj_and(George-52, Alexa-54)
nsubj(remain-61, one-56)
num(more-59, two-58)
conj_or(one-56, more-59)
nsubj(remain-61, more-59)
aux(remain-61, should-60)
conj_and(comforted-8, remain-61)
advcl(tell-67, remain-61)
ccomp(tell-67, remain-61)
acomp(remain-61, unburied-62)
nsubj(tell-67, I-64)
aux(tell-67, can-65)
neg(tell-67, not-66)
root(ROOT-0, tell-67)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (PP (IN in)
        (NP (DT any) (NN case)))
      (NP
        (NP (DT a) (JJ dreary) (NN outlook))
        (PP (IN for)
          (NP (PRP him)))))
    (. .)))

nsubj(outlook-8, It-1)
cop(outlook-8, was-2)
det(case-5, any-4)
prep_in(outlook-8, case-5)
det(outlook-8, a-6)
amod(outlook-8, dreary-7)
root(ROOT-0, outlook-8)
prep_for(outlook-8, him-10)

(ROOT
  (S
    (NP
      (NP (NN Hope)
        (CC and)
        (NN faith))
      (CC and)
      (NP (RB almost) (NN love)))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBN sucked)
          (PP (IN from)
            (NP (PRP$ his) (NN life)))
          (PP (IN by)
            (NP (`` ``)
              (NP (DT the) (JJ hindering) (NNS knot-grass))
              ('' '')
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD had)
                    (VP (VBN spread)
                      (NP (PRP$ its) (JJ white) (NN bloodless) (NNS roots))
                      (PP (IN in)
                        (NP (DT all) (NNS directions)))
                      (PP (IN through)
                        (NP (NN soul)
                          (CC and)
                          (NN heart)
                          (CC and)
                          (NN mind)))
                      (, ,)
                      (S
                        (VP (VBG exhausting)
                          (CC and)
                          (VBG choking)
                          (PP (IN in)
                            (NP
                              (NP (PRP them) (NN everything))
                              (PP (IN of)
                                (NP (JJ divinest) (NN origin))))))))))))))))
    (. .)))

nsubjpass(sucked-9, Hope-1)
conj_and(Hope-1, faith-3)
nsubjpass(sucked-9, faith-3)
advmod(love-6, almost-5)
conj_and(Hope-1, love-6)
nsubjpass(sucked-9, love-6)
aux(sucked-9, had-7)
auxpass(sucked-9, been-8)
root(ROOT-0, sucked-9)
poss(life-12, his-11)
prep_from(sucked-9, life-12)
det(knot-grass-17, the-15)
amod(knot-grass-17, hindering-16)
agent(sucked-9, knot-grass-17)
nsubj(spread-21, knot-grass-17)
aux(spread-21, had-20)
rcmod(knot-grass-17, spread-21)
poss(roots-25, its-22)
amod(roots-25, white-23)
nn(roots-25, bloodless-24)
dobj(spread-21, roots-25)
det(directions-28, all-27)
prep_in(spread-21, directions-28)
prep_through(spread-21, soul-30)
prep_through(spread-21, heart-32)
conj_and(soul-30, heart-32)
prep_through(spread-21, mind-34)
conj_and(soul-30, mind-34)
vmod(spread-21, exhausting-36)
vmod(spread-21, choking-38)
conj_and(exhausting-36, choking-38)
dep(everything-41, them-40)
prep_in(exhausting-36, everything-41)
amod(origin-44, divinest-43)
prep_of(everything-41, origin-44)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS weeds))
        (PP (IN in)
          (NP
            (NP (NNP George) (POS 's))
            (NN heart))))
      (VP
        (VP (VBD were)
          (PP (IN of)
            (NP (DT another) (NN kind))))
        (, ,)
        (CC and)
        (VP
          (ADJP
            (ADJP (JJR better))
            (CC nor)
            (ADJP (JJR worse)))
          (PP (IN in)
            (NP (PRP themselves))))))
    (: ;)
    (S
      (NP (DT the) (NN misery))
      (VP (VBD was)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT neither))
              (PP (IN of)
                (NP (PRP them))))
            (VP (VBD was)
              (VP (VBG endeavoring)
                (S
                  (VP (TO to)
                    (VP (VB root)
                      (NP (PRP them))
                      (PRT (RP out)))))))))))
    (. .)))

det(weeds-2, The-1)
nsubj(were-7, weeds-2)
nsubj(better-13, weeds-2)
poss(heart-6, George-4)
prep_in(weeds-2, heart-6)
root(ROOT-0, were-7)
det(kind-10, another-9)
prep_of(were-7, kind-10)
conj_and(were-7, better-13)
conj_and(were-7, worse-15)
conj_nor(better-13, worse-15)
prep_in(better-13, themselves-17)
det(misery-20, the-19)
nsubj(was-21, misery-20)
parataxis(were-7, was-21)
mark(endeavoring-27, that-22)
nsubj(endeavoring-27, neither-23)
nsubj(root-29, neither-23)
prep_of(neither-23, them-25)
aux(endeavoring-27, was-26)
ccomp(was-21, endeavoring-27)
aux(root-29, to-28)
xcomp(endeavoring-27, root-29)
dobj(root-29, them-30)
prt(root-29, out-31)

(ROOT
  (S
    (NP
      (NP (DT The) (NN thief))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ is)
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJR better))))))))))
    (VP (VBZ is)
      (NP
        (NP (NNS ages))
        (PP (RB ahead) (IN of)
          (NP
            (NP (DT the) (RBS most) (JJ honorable) (NN man))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ is)
                  (VP (VBG making)
                    (NP (DT no) (JJ such) (NN effort))))))))))
    (. .)))

det(thief-2, The-1)
nsubj(trying-5, thief-2)
nsubj(better-8, thief-2)
nsubj(ages-10, thief-2)
aux(trying-5, is-4)
rcmod(thief-2, trying-5)
aux(better-8, to-6)
cop(better-8, be-7)
xcomp(trying-5, better-8)
cop(ages-10, is-9)
root(ROOT-0, ages-10)
det(man-16, the-13)
advmod(man-16, most-14)
amod(man-16, honorable-15)
prep_ahead_of(ages-10, man-16)
nsubj(making-19, man-16)
aux(making-19, is-18)
rcmod(man-16, making-19)
neg(effort-22, no-20)
amod(effort-22, such-21)
dobj(making-19, effort-22)

(ROOT
  (S
    (S
      (NP (DT The) (NN one))
      (VP (VBZ is)
        (ADJP (JJ alive))))
    (: ;)
    (S
      (NP (DT the) (JJ other))
      (VP (VBZ is)
        (UCP
          (ADJP (JJ dead))
          (CC and)
          (PP (IN on)
            (NP
              (NP (DT the) (NN way))
              (PP (TO to)
                (NP (NN corruption))))))))
    (. .)))

det(one-2, The-1)
nsubj(alive-4, one-2)
cop(alive-4, is-3)
root(ROOT-0, alive-4)
det(other-7, the-6)
nsubj(dead-9, other-7)
cop(dead-9, is-8)
parataxis(alive-4, dead-9)
parataxis(alive-4, on-11)
conj_and(dead-9, on-11)
det(way-13, the-12)
pobj(on-11, way-13)
prep_to(way-13, corruption-15)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD treated)
        (NP (PRP themselves))
        (PP (TO to)
          (NP (DT a) (NN gaze)))
        (PP
          (ADVP (RB together))
          (IN on)
          (NP
            (NP (DT the) (NN cup))
            (CC and)
            (NP (DT the) (NN watch))))))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (NNP George))
      (VP (VBD went)
        (S
          (VP (TO to)
            (VP (VB give)
              (NP (NNS directions))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN laird) (POS 's))
                  (NN lawyer)))
              (PP (IN for)
                (NP
                  (NP (DT the) (VBG drawing) (RP up))
                  (PP (IN of)
                    (NP (PRP$ his) (JJ new) (NN will))))))))))
    (. .)))

nsubj(treated-2, They-1)
root(ROOT-0, treated-2)
dobj(treated-2, themselves-3)
det(gaze-6, a-5)
prep_to(treated-2, gaze-6)
advmod(treated-2, together-7)
det(cup-10, the-9)
prep_on(treated-2, cup-10)
det(watch-13, the-12)
prep_on(treated-2, watch-13)
conj_and(cup-10, watch-13)
advmod(went-17, then-15)
nsubj(went-17, George-16)
nsubj(give-19, George-16)
parataxis(treated-2, went-17)
aux(give-19, to-18)
xcomp(went-17, give-19)
dobj(give-19, directions-20)
det(laird-23, the-22)
poss(lawyer-25, laird-23)
prep_to(give-19, lawyer-25)
prep_for(give-19, the-27)
amod(the-27, drawing-28)
dep(the-27, up-29)
poss(will-33, his-31)
amod(will-33, new-32)
prep_of(the-27, will-33)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ next) (NN day))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (VP (VBN brought) (, ,) (VBN read) (, ,))))))
      (VP (VBD signed)
        (PP (IN by)
          (NP (DT the) (NN laird)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NN signature))
      (VP
        (ADVP (RB duly))
        (VBN witnessed)))
    (. .)))

det(day-3, The-1)
amod(day-3, next-2)
nsubj(signed-10, day-3)
nsubjpass(brought-6, it-4)
auxpass(brought-6, was-5)
rcmod(day-3, brought-6)
dep(brought-6, read-8)
root(ROOT-0, signed-10)
det(laird-13, the-12)
prep_by(signed-10, laird-13)
poss(signature-17, his-16)
nsubj(witnessed-19, signature-17)
advmod(witnessed-19, duly-18)
conj_and(signed-10, witnessed-19)

(ROOT
  (S
    (NP
      (NP (JJ Dawtie) (NN being))
      (PP (IN on)
        (NP (DT the) (NN spot))))
    (VP (VBD was)
      (VP (VBN made)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (NNS witnesses))))))
    (. .)))

amod(being-2, Dawtie-1)
nsubjpass(made-7, being-2)
det(spot-5, the-4)
prep_on(being-2, spot-5)
auxpass(made-7, was-6)
root(ROOT-0, made-7)
dobj(made-7, one-8)
det(witnesses-11, the-10)
prep_of(one-8, witnesses-11)

(ROOT
  (S
    (S
      (NP (DT The) (NN laird))
      (VP (VBD trembled)
        (SBAR (IN lest)
          (S
            (NP (PRP$ her) (NN fanaticism))
            (VP (MD should)
              (VP (VB break)
                (PRT (RP out))
                (PP (IN in)
                  (NP (NN appeal)))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN lawyer))
                    (PP (VBG concerning)
                      (NP (DT the) (NN cup)))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP (VB understand)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN cup))
              (VP (VBD was)
                (NP
                  (NP
                    (NP (NN nothing))
                    (PP (TO to)
                      (NP (PRP her))))
                  (: ;)
                  (NP
                    (SBAR (IN that)
                      (S
                        (NP (PRP she))
                        (VP
                          (VP (VBD did) (RB not)
                            (VP (VB imagine)
                              (S
                                (NP (PRP herself))
                                (NP
                                  (NP (DT a) (NN setter) (NN right))
                                  (PP (IN of)
                                    (NP (NNS wrongs)))))))
                          (, ,)
                          (CC but)
                          (VP (VBD knew)
                            (S
                              (NP (PRP herself))
                              (NP
                                (NP (PRP$ her) (NN neighbor) (POS 's))
                                (NN keeper)))))))
                    (, ,)
                    (NP
                      (NP (CD one))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD had)
                            (S
                              (VP (TO to)
                                (VP (VB deliver)
                                  (NP (PRP$ his) (NN soul))
                                  (PP (IN from)
                                    (NP (NN death))))))))))))))))))
    (. !)))

det(laird-2, The-1)
nsubj(trembled-3, laird-2)
root(ROOT-0, trembled-3)
mark(break-8, lest-4)
poss(fanaticism-6, her-5)
nsubj(break-8, fanaticism-6)
aux(break-8, should-7)
advcl(trembled-3, break-8)
prt(break-8, out-9)
prep_in(break-8, appeal-11)
det(lawyer-14, the-13)
prep_to(break-8, lawyer-14)
det(cup-17, the-16)
prep_concerning(lawyer-14, cup-17)
nsubj(understand-22, he-19)
aux(understand-22, could-20)
neg(understand-22, not-21)
parataxis(trembled-3, understand-22)
mark(nothing-27, that-23)
det(cup-25, the-24)
nsubj(nothing-27, cup-25)
cop(nothing-27, was-26)
ccomp(understand-22, nothing-27)
prep_to(nothing-27, her-29)
mark(imagine-35, that-31)
nsubj(imagine-35, she-32)
nsubj(knew-44, she-32)
aux(imagine-35, did-33)
neg(imagine-35, not-34)
dep(one-51, imagine-35)
nsubj(right-39, herself-36)
det(right-39, a-37)
nn(right-39, setter-38)
xcomp(imagine-35, right-39)
prep_of(right-39, wrongs-41)
conj_but(imagine-35, knew-44)
dep(one-51, knew-44)
nsubj(keeper-49, herself-45)
poss(neighbor-47, her-46)
poss(keeper-49, neighbor-47)
xcomp(knew-44, keeper-49)
dep(nothing-27, one-51)
nsubj(had-53, one-51)
nsubj(deliver-55, one-51)
rcmod(one-51, had-53)
aux(deliver-55, to-54)
xcomp(had-53, deliver-55)
poss(soul-57, his-56)
dobj(deliver-55, soul-57)
prep_from(deliver-55, death-59)

(ROOT
  (S
    (S
      (SBAR
        (SINV (VBD Had)
          (NP (DT the) (NN cup))
          (VP (VBN come)
            (PP (IN into)
              (NP (PRP$ her) (NN possession))))))
      (, ,)
      (NP (PRP she))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN sent)
            (NP (PRP it))
            (PRT (RP back))
            (PP (TO to)
              (NP (DT the) (NN owner)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was) (RB not)
        (ADJP (JJ worth)
          (SBAR
            (S
              (NP (PRP her))
              (VP (VBP care)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT the) (NNP Earl))
                      (PP (IN of)
                        (NP (NNP Borland))))
                    (VP (MD should)
                      (VP (VB cast)
                        (NP (PRP$ his) (NNS eyes))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP he))
                            (VP (MD would)
                              (PP (IN upon)
                                (NP
                                  (NP (DT a) (NN jewel))
                                  (PP (IN in)
                                    (NP (DT a) (NN cabinet))))))))))))))))))
    (. !)))

aux(come-4, Had-1)
det(cup-3, the-2)
nsubj(come-4, cup-3)
advcl(sent-12, come-4)
poss(possession-7, her-6)
prep_into(come-4, possession-7)
nsubj(sent-12, she-9)
aux(sent-12, would-10)
aux(sent-12, have-11)
root(ROOT-0, sent-12)
dobj(sent-12, it-13)
prt(sent-12, back-14)
det(owner-17, the-16)
prep_to(sent-12, owner-17)
nsubj(worth-23, it-20)
cop(worth-23, was-21)
neg(worth-23, not-22)
conj_but(sent-12, worth-23)
nsubj(care-25, her-24)
ccomp(worth-23, care-25)
mark(cast-32, that-26)
det(Earl-28, the-27)
nsubj(cast-32, Earl-28)
prep_of(Earl-28, Borland-30)
aux(cast-32, should-31)
ccomp(care-25, cast-32)
poss(eyes-34, his-33)
dobj(cast-32, eyes-34)
advmod(would-37, when-35)
nsubj(would-37, he-36)
advcl(cast-32, would-37)
det(jewel-40, a-39)
prep_upon(would-37, jewel-40)
det(cabinet-43, a-42)
prep_in(jewel-40, cabinet-43)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD was)
      (ADJP (RB very) (JJ white))
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD signed)
            (NP (PRP$ his) (NN name))))))
    (. .)))

nsubj(white-4, Dawtie-1)
cop(white-4, was-2)
advmod(white-4, very-3)
root(ROOT-0, white-4)
mark(signed-7, as-5)
nsubj(signed-7, he-6)
advcl(white-4, signed-7)
poss(name-9, his-8)
dobj(signed-7, name-9)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB Where))
      (S
        (NP (DT the) (NNS others))
        (VP (VBD saw)
          (PP (CC but)
            (NP (DT a) (JJ legal) (NN ceremony))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD feared)
      (SBAR
        (S
          (NP (PRP her))
          (VP (VBD loved)
            (SBAR
              (S
                (NP (NN master))
                (VP (VBD was)
                  (VP (VBG assigning)
                    (NP (PRP$ his) (NN soul))
                    (PP (TO to)
                      (NP (DT the) (NNP devil)))
                    (, ,)
                    (SBAR (IN as)
                      (S
                        (NP (PRP she))
                        (VP (VBD had)
                          (VP (VBN read)
                            (PP (IN of)
                              (NP
                                (NP (NNP Dr.) (NNP Faustus))
                                (PP (IN in)
                                  (NP (DT the) (JJ old) (NN ballad)))))))))))))))))
    (. .)))

advmod(saw-4, Where-1)
det(others-3, the-2)
nsubj(saw-4, others-3)
advcl(feared-11, saw-4)
prep(saw-4, but-5)
det(ceremony-8, a-6)
amod(ceremony-8, legal-7)
pobj(but-5, ceremony-8)
nsubj(feared-11, she-10)
root(ROOT-0, feared-11)
nsubj(loved-13, her-12)
ccomp(feared-11, loved-13)
nsubj(assigning-16, master-14)
aux(assigning-16, was-15)
ccomp(loved-13, assigning-16)
poss(soul-18, his-17)
dobj(assigning-16, soul-18)
det(devil-21, the-20)
prep_to(assigning-16, devil-21)
mark(read-26, as-23)
nsubj(read-26, she-24)
aux(read-26, had-25)
advcl(assigning-16, read-26)
nn(Faustus-29, Dr.-28)
prep_of(read-26, Faustus-29)
det(ballad-33, the-31)
amod(ballad-33, old-32)
prep_in(Faustus-29, ballad-33)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (VP (VBG gliding)
          (PRT (RP away))
          (PP (IN into)
            (NP (DT the) (NN dark))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT no) (NN one))
        (PP (TO to)
          (SBAR
            (WHNP (WP whom))
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN done)
                  (NP (DT a) (JJ good) (NN turn))
                  (PP (IN with)
                    (NP
                      (NP (DT the) (NNP Mammon))
                      (PP (IN of)
                        (NP (NNS unrighteousness))))))))))
        (, ,))
      (VP (VBD was)
        (VP (VBG waiting)
          (S
            (VP (TO to)
              (VP (VB receive)
                (NP (PRP him))
                (PP (IN into)
                  (NP (DT an) (JJ everlasting) (NN habitation)))))))))
    (. !)))

nsubj(gliding-3, He-1)
aux(gliding-3, was-2)
root(ROOT-0, gliding-3)
prt(gliding-3, away-4)
det(dark-7, the-6)
prep_into(gliding-3, dark-7)
neg(one-11, no-10)
nsubj(waiting-27, one-11)
nsubj(receive-29, one-11)
dobj(done-16, whom-13)
nsubj(done-16, he-14)
aux(done-16, had-15)
prepc_to(one-11, done-16)
det(turn-19, a-17)
amod(turn-19, good-18)
dobj(done-16, turn-19)
det(Mammon-22, the-21)
prep_with(done-16, Mammon-22)
prep_of(Mammon-22, unrighteousness-24)
aux(waiting-27, was-26)
conj_and(gliding-3, waiting-27)
aux(receive-29, to-28)
xcomp(waiting-27, receive-29)
dobj(receive-29, him-30)
det(habitation-34, an-32)
amod(habitation-34, everlasting-33)
prep_into(receive-29, habitation-34)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD had)))
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD needed)
        (NP (DT no) (JJ special) (NN cause))
        (S
          (VP (TO to)
            (VP (VB love)
              (NP (PRP$ her) (NN master)))))
        (, ,)
        (ADVP
          (ADVP (DT any) (RBR more))
          (SBAR (IN than)
            (S
              (VP (TO to)
                (VP (VB love)
                  (NP
                    (NP (DT the) (NNS chickens))
                    (CC and)
                    (NP (DT the) (NNS calves))))))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD loved)
        (SBAR (IN because)
          (S
            (NP
              (NP (NN something))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD could)
                    (VP (VB be)
                      (VP (VBN loved)))))))
            (VP (VBD was)
              (ADVP (RB there))
              (ADJP (JJ present)
                (PP (TO to)
                  (NP (PRP her)))))))))
    (: ;)
    (S (CC but)
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RB always))
        (VP
          (VP (VBN spoken)
            (ADVP (RB kindly))
            (PP (TO to)
              (NP (PRP her))))
          (, ,)
          (CC and)
          (VP (VBN been)
            (VP (VBN pleased)
              (PP (IN with)
                (NP (PRP$ her) (NN endeavor)
                  (S
                    (VP (TO to)
                      (VP (VB serve)
                        (NP (PRP him))))))))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB now))
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBG going)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP she))
              (VP (MD could)
                (VP (VB do)
                  (NP (NN nothing))
                  (PP (IN for)
                    (NP (PRP him))))))))))
    (. !)))

nsubj(had-2, She-1)
root(ROOT-0, had-2)
nsubj(needed-5, she-4)
conj_and(had-2, needed-5)
neg(cause-8, no-6)
amod(cause-8, special-7)
dobj(needed-5, cause-8)
aux(love-10, to-9)
vmod(needed-5, love-10)
poss(master-12, her-11)
dobj(love-10, master-12)
dep(more-15, any-14)
advmod(needed-5, more-15)
mark(love-18, than-16)
aux(love-18, to-17)
advcl(more-15, love-18)
det(chickens-20, the-19)
dobj(love-18, chickens-20)
det(calves-23, the-22)
dobj(love-18, calves-23)
conj_and(chickens-20, calves-23)
nsubj(loved-26, she-25)
dep(had-2, loved-26)
mark(present-35, because-27)
nsubjpass(loved-32, something-28)
nsubj(present-35, something-28)
aux(loved-32, could-30)
auxpass(loved-32, be-31)
rcmod(something-28, loved-32)
cop(present-35, was-33)
advmod(present-35, there-34)
advcl(loved-26, present-35)
prep_to(present-35, her-37)
nsubj(spoken-43, he-40)
nsubjpass(pleased-50, he-40)
aux(spoken-43, had-41)
advmod(spoken-43, always-42)
dep(had-2, spoken-43)
advmod(spoken-43, kindly-44)
prep_to(spoken-43, her-46)
auxpass(pleased-50, been-49)
dep(had-2, pleased-50)
conj_and(spoken-43, pleased-50)
poss(endeavor-53, her-52)
prep_with(pleased-50, endeavor-53)
aux(serve-55, to-54)
vmod(endeavor-53, serve-55)
dobj(serve-55, him-56)
advmod(going-62, now-59)
nsubj(going-62, he-60)
aux(going-62, was-61)
conj_and(had-2, going-62)
advmod(do-66, where-63)
nsubj(do-66, she-64)
aux(do-66, could-65)
advcl(going-62, do-66)
dobj(do-66, nothing-67)
prep_for(do-66, him-69)

(ROOT
  (S
    (LST (: --))
    (PP (IN except)
      (NP (NN pray)))
    (, ,)
    (NP (RB as)
      (NP (PRP$ her) (NN heart))
      (CC and)
      (NP (NNP Andrew)))
    (VP (VBD had)
      (VP (VBN taught)
        (S
          (NP (PRP her)))
        (, ,)
        (S
          (VP (VBG knowing)
            (SBAR (IN that) (`` ``)
              (S
                (NP (DT all) (JJ live) (NN unto))
                (VP (VBZ _)
                  (NP (PRP Him)))))))))
    (. !)))

prep_except(taught-11, pray-3)
advmod(heart-7, as-5)
poss(heart-7, her-6)
nsubj(taught-11, heart-7)
conj_and(heart-7, Andrew-9)
nsubj(taught-11, Andrew-9)
aux(taught-11, had-10)
root(ROOT-0, taught-11)
xcomp(taught-11, her-12)
xcomp(taught-11, knowing-14)
mark(_-20, that-15)
det(unto-19, all-17)
amod(unto-19, live-18)
nsubj(_-20, unto-19)
ccomp(knowing-14, _-20)
dobj(_-20, Him-21)

(ROOT
  (FRAG
    (NP
      (NP (NN _) ('' ''))
      (ADVP (CC But)))
    (ADJP (FW alas) (. !))))

root(ROOT-0, _-1)
advmod(_-1, But-3)
dep(_-1, alas-4)

(ROOT
  (S
    (NP (WDT what))
    (VP (VBD were)
      (NP
        (NP (NNS prayers))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (NN man))
            (VP (MD would) (RB not)
              (VP (VB take)
                (NP
                  (NP (DT the) (NNS things))
                  (VP (VBN prayed)
                    (PP (IN for))))))))))
    (. !)))

nsubj(prayers-3, what-1)
cop(prayers-3, were-2)
root(ROOT-0, prayers-3)
advmod(take-9, where-4)
det(man-6, the-5)
nsubj(take-9, man-6)
aux(take-9, would-7)
neg(take-9, not-8)
rcmod(prayers-3, take-9)
det(things-11, the-10)
dobj(take-9, things-11)
vmod(things-11, prayed-12)
prep(prayed-12, for-13)

(ROOT
  (S
    (S
      (ADVP (RB Nevertheless))
      (NP (DT all) (NNS things) (NN _))
      (VP (VBD were)
        (ADJP (RB _) (JJ possible))
        (PP (IN with)
          (NP (NNP God)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (ADVP (RB _))
      (VP (MD would)
        (VP (VB _)
          (ADVP (RB pray))
          (PP (IN for)
            (NP (PRP him))))))
    (. !)))

advmod(possible-7, Nevertheless-1)
det(_-4, all-2)
nn(_-4, things-3)
nsubj(possible-7, _-4)
cop(possible-7, were-5)
advmod(possible-7, _-6)
root(ROOT-0, possible-7)
prep_with(possible-7, God-9)
nsubj(_-15, she-12)
advmod(_-15, _-13)
aux(_-15, would-14)
conj_and(possible-7, _-15)
advmod(_-15, pray-16)
prep_for(_-15, him-18)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADVP (RB also))
        (PP (IN with)
          (NP (JJ white) (NN face)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (PP (IN with)
          (S
            (VP
              (VP (VBG trembling)
                (NP (NN hand))
                (SBAR (IN that)
                  (S
                    (NP (PRP she))
                    (VP (VBD signed)
                      (NP (PRP$ her) (JJ own) (NN name))
                      (, ,)
                      (SBAR (IN for)
                        (S
                          (NP (PRP she))
                          (VP (VBD felt))))))))
              (CONJP (RB as) (IN if))
              (VP (VBG giving)
                (NP (PRP him))
                (NP
                  (NP (DT a) (NN push))
                  (PP (IN down)
                    (NP (DT the) (NN icy) (NN slope))))
                (PP (IN into)
                  (NP (DT the) (NNS abyss)))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(was-2, also-3)
amod(face-6, white-5)
prep_with(was-2, face-6)
nsubj(was-10, it-9)
conj_and(was-2, was-10)
prepc_with(was-10, trembling-12)
dobj(trembling-12, hand-13)
mark(signed-16, that-14)
nsubj(signed-16, she-15)
ccomp(trembling-12, signed-16)
poss(name-19, her-17)
amod(name-19, own-18)
dobj(signed-16, name-19)
mark(felt-23, for-21)
nsubj(felt-23, she-22)
advcl(signed-16, felt-23)
prepc_with(was-10, giving-26)
conj_as(trembling-12, giving-26)
iobj(giving-26, him-27)
det(push-29, a-28)
dobj(giving-26, push-29)
det(slope-33, the-31)
nn(slope-33, icy-32)
prep_down(push-29, slope-33)
det(abyss-36, the-35)
prep_into(giving-26, abyss-36)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (DT the) (NN thing))
        (VP (VBD was)
          (VP (VBN done)))))
    (, ,)
    (NP (DT the) (JJ old) (NN man))
    (VP
      (VP (VBD went)
        (ADVP (RB quietly))
        (S
          (VP (TO to)
            (VP (VB sleep)))))
      (, ,)
      (CC and)
      (VP (VBD dreamed)
        (PP (IN of)
          (NP
            (NP (DT a) (JJ radiant) (NN jewel))
            (, ,)
            (NP (JJ glorious))))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (ADVP (RB never))
              (VP (VBN seen)
                (NP (NN jewel))
                (, ,)
                (ADVP (RB ever))
                (PP (IN within)
                  (S
                    (ADVP (RB yet))
                    (VP
                      (ADVP (RB ever))
                      (VBG eluding)
                      (NP (PRP$ his) (NN grasp)))))))))))
    (. .)))

advmod(done-6, when-2)
det(thing-4, the-3)
nsubjpass(done-6, thing-4)
auxpass(done-6, was-5)
advcl(went-11, done-6)
det(man-10, the-8)
amod(man-10, old-9)
nsubj(went-11, man-10)
nsubj(sleep-14, man-10)
nsubj(dreamed-17, man-10)
root(ROOT-0, went-11)
advmod(went-11, quietly-12)
aux(sleep-14, to-13)
xcomp(went-11, sleep-14)
conj_and(went-11, dreamed-17)
det(jewel-21, a-19)
amod(jewel-21, radiant-20)
prep_of(dreamed-17, jewel-21)
appos(jewel-21, glorious-23)
mark(seen-28, as-24)
nsubj(seen-28, he-25)
aux(seen-28, had-26)
neg(seen-28, never-27)
advcl(dreamed-17, seen-28)
dobj(seen-28, jewel-29)
advmod(seen-28, ever-31)
advmod(eluding-35, yet-33)
advmod(eluding-35, ever-34)
prepc_within(seen-28, eluding-35)
poss(grasp-37, his-36)
dobj(eluding-35, grasp-37)

(ROOT
  (NP (NNP CHAPTER) (NNP XXIX) (. .)))

nn(XXIX-2, CHAPTER-1)
root(ROOT-0, XXIX-2)

(ROOT
  (NP (NNP THE) (NNP SANGREAL) (. .)))

nn(SANGREAL-2, THE-1)
root(ROOT-0, SANGREAL-2)

(ROOT
  (S
    (S
      (NP (DT The) (JJ next) (NN day))
      (NP (PRP he))
      (VP (VBD seemed)
        (ADVP (RBR better))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Alexa))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB hope)
              (ADVP (RB again)))))))
    (. .)))

det(day-3, The-1)
amod(day-3, next-2)
tmod(seemed-5, day-3)
nsubj(seemed-5, he-4)
root(ROOT-0, seemed-5)
advmod(seemed-5, better-6)
nsubj(began-10, Alexa-9)
nsubj(hope-12, Alexa-9)
conj_and(seemed-5, began-10)
aux(hope-12, to-11)
xcomp(began-10, hope-12)
advmod(hope-12, again-13)

(ROOT
  (S (CC But)
    (PP (IN in)
      (NP (DT the) (NN afternoon)))
    (NP (PRP$ his) (NN pulse))
    (VP (VBD began)
      (SBAR
        (SBAR
          (S
            (VP (TO to)
              (VP (VB sink)))))
        (, ,)
        (CC and)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NNP Crawford))
            (VP (VBD came)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (MD could)
                    (VP (VB welcome)
                      (NP (PRP him))
                      (PP (RB only) (IN with)
                        (NP
                          (NP (DT a) (NN smile))
                          (CC and)
                          (NP (DT a) (JJ vain) (NN effort))))
                      (S
                        (VP (TO to)
                          (VP (VB put)
                            (PRT (RP out))
                            (NP (PRP$ his) (NN hand))))))))))))))
    (. .)))

cc(began-7, But-1)
det(afternoon-4, the-3)
prep_in(began-7, afternoon-4)
poss(pulse-6, his-5)
nsubj(began-7, pulse-6)
root(ROOT-0, began-7)
aux(sink-9, to-8)
dep(began-7, sink-9)
advmod(came-14, when-12)
nsubj(came-14, Crawford-13)
dep(began-7, came-14)
conj_and(sink-9, came-14)
nsubj(welcome-17, he-15)
aux(welcome-17, could-16)
ccomp(came-14, welcome-17)
dobj(welcome-17, him-18)
advmod(welcome-17, only-19)
det(smile-22, a-21)
prep_with(welcome-17, smile-22)
det(effort-26, a-24)
amod(effort-26, vain-25)
prep_with(welcome-17, effort-26)
conj_and(smile-22, effort-26)
aux(put-28, to-27)
vmod(welcome-17, put-28)
prt(put-28, out-29)
poss(hand-31, his-30)
dobj(put-28, hand-31)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBZ bent)
      (PRT (RP down))
      (PP (TO to)
        (NP (PRP him))))
    (. .)))

nsubj(bent-2, George-1)
root(ROOT-0, bent-2)
prt(bent-2, down-3)
prep_to(bent-2, him-5)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS others))
      (, ,)
      (PP (IN at)
        (NP
          (NP (DT a) (NN sign))
          (PP (IN from)
            (NP (PRP$ his) (NNS eyes)))))
      (, ,))
    (VP (VBD left)
      (NP (DT the) (NN room)))
    (. .)))

det(others-2, The-1)
nsubj(left-11, others-2)
det(sign-6, a-5)
prep_at(others-2, sign-6)
poss(eyes-9, his-8)
prep_from(sign-6, eyes-9)
root(ROOT-0, left-11)
det(room-13, the-12)
dobj(left-11, room-13)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB find)
        (NP
          (NP (PRP it))
          (, ,)
          (NP (NNP George)))))
    (. !) ('' '')))

nsubj(find-5, I-2)
aux(find-5, ca-3)
neg(find-5, n't-4)
root(ROOT-0, find-5)
dobj(find-5, it-6)
appos(it-6, George-8)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBN whispered))
    (. .)))

nsubj(whispered-2, he-1)
root(ROOT-0, whispered-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD put)
        (NP (PRP it))
        (ADVP (RB away))
        (PP (IN for)
          (NP (PRP you)))
        (NP (JJ last) (NN night))))
    (, ,)
    (NP (PRP you))
    (VP (VBP remember))
    (. !) ('' '')))

nsubj(put-3, I-2)
ccomp(remember-12, put-3)
dobj(put-3, it-4)
advmod(put-3, away-5)
prep_for(put-3, you-7)
amod(night-9, last-8)
tmod(put-3, night-9)
nsubj(remember-12, you-11)
root(ROOT-0, remember-12)

(ROOT
  (NP (NNP answered) (NNP George) (. .)))

nn(George-2, answered-1)
root(ROOT-0, George-2)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh) (, ,) (UH no))
    (, ,)
    (NP (PRP you))
    (VP (VBD did) (RB n't))
    (. !)))

discourse(did-7, Oh-2)
dep(Oh-2, no-4)
nsubj(did-7, you-6)
root(ROOT-0, did-7)
neg(did-7, n't-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD had)
      (NP (PRP it))
      (PP (IN in)
        (NP (PRP$ my) (NN hand)))
      (ADVP
        (NP (DT a) (NN minute))
        (RB ago)))
    (. !)))

nsubj(had-2, I-1)
root(ROOT-0, had-2)
dobj(had-2, it-3)
poss(hand-6, my-5)
prep_in(had-2, hand-6)
det(minute-8, a-7)
npadvmod(ago-9, minute-8)
advmod(had-2, ago-9)

(ROOT
  (S (CC But)
    (S
      (NP (PRP I))
      (VP (VBD fell)
        (PP (IN into)
          (NP (DT a) (NN doze)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (VP (VBN gone))))
    (. !)))

nsubj(fell-3, I-2)
root(ROOT-0, fell-3)
det(doze-6, a-5)
prep_into(fell-3, doze-6)
nsubjpass(gone-11, it-9)
auxpass(gone-11, is-10)
conj_and(fell-3, gone-11)

(ROOT
  (S
    (NP (NNP George))
    (, ,)
    (VP (VB get)
      (NP (PRP it)))
    (. !)))

nsubj(get-3, George-1)
root(ROOT-0, get-3)
dobj(get-3, it-4)

(ROOT
  (S (: --)
    (S
      (VP (VB get)
        (NP (PRP it))
        (PP (IN for)
          (NP (PRP me)))))
    (, ,)
    (ADVP (CC or))
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB go)
        (ADJP (JJ mad))))
    (. !) ('' '')))

parataxis(go-10, get-2)
dobj(get-2, it-3)
prep_for(get-2, me-5)
advmod(go-10, or-7)
nsubj(go-10, I-8)
aux(go-10, shall-9)
root(ROOT-0, go-10)
acomp(go-10, mad-11)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD went))
      (CC and)
      (VP (VBD brought)
        (S
          (NP (PRP it))
          (NP (PRP him)))))
    (. .)))

nsubj(went-2, George-1)
nsubj(brought-4, George-1)
root(ROOT-0, went-2)
conj_and(went-2, brought-4)
nsubj(him-6, it-5)
xcomp(brought-4, him-6)

(ROOT
  (S (`` ``)
    (VP (VB Thank)
      (NP (PRP you)))
    (. !)))

root(ROOT-0, Thank-2)
dobj(Thank-2, you-3)

(ROOT
  (S
    (VP (VB thank)
      (NP (PRP you)))
    (. !)))

root(ROOT-0, thank-1)
dobj(thank-1, you-2)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP I))
    (VP (VBP remember))
    (. !)))

advmod(remember-3, Now-1)
nsubj(remember-3, I-2)
root(ROOT-0, remember-3)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD was)
              (PP (IN in)
                (NP (NN hell))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD took)
        (NP (PRP it))
        (PP (IN from)
          (NP (PRP me)))))
    (. !) ('' '')))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(was-4, I-3)
ccomp(thought-2, was-4)
prep_in(was-4, hell-6)
nsubj(took-10, they-9)
conj_and(thought-2, took-10)
dobj(took-10, it-11)
prep_from(took-10, me-13)

(ROOT
  (S (`` ``)
    (VP (VBP Do) (RB n't)
      (VP
        (NP (PRP you))
        (S
          (VP (VB be)
            (ADJP (JJ afraid))
            (, ,)
            (NP (NN sir))))))
    (. !)))

aux(you-4, Do-2)
neg(you-4, n't-3)
root(ROOT-0, you-4)
cop(afraid-6, be-5)
dep(you-4, afraid-6)
dep(afraid-6, sir-8)

(ROOT
  (S
    (NP (NN Fall))
    (VP (VBZ asleep)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP feel)
            (ADJP (JJ inclined))))))
    (. .)))

nsubj(asleep-2, Fall-1)
root(ROOT-0, asleep-2)
advmod(feel-5, when-3)
nsubj(feel-5, you-4)
advcl(asleep-2, feel-5)
acomp(feel-5, inclined-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB keep)
        (NP (PRP$ my) (NN eye))
        (PP (IN on)
          (NP (DT the) (NN cup)))))
    (. .) ('' '')))

nsubj(keep-3, I-1)
aux(keep-3, will-2)
root(ROOT-0, keep-3)
poss(eye-5, my-4)
dobj(keep-3, eye-5)
det(cup-8, the-7)
prep_on(keep-3, cup-8)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD will) (RB not)
      (VP (VB go)
        (PRT (RP away))))
    (. ?) ('' '')))

nsubj(go-5, You-2)
aux(go-5, will-3)
neg(go-5, not-4)
root(ROOT-0, go-5)
prt(go-5, away-6)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (S
        (NP (PRP I))
        (VP (MD will)
          (VP (VB stay)
            (ADVP
              (ADVP (RB as) (RB long))
              (SBAR (IN as)
                (S
                  (NP (PRP you))
                  (VP (VBP like))))))))
      (: ;)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP (NN nothing)
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP (PRP me))
                  (ADVP (RB away)))))))))
    (. .)))

dep(stay-6, No-2)
nsubj(stay-6, I-4)
aux(stay-6, will-5)
root(ROOT-0, stay-6)
advmod(long-8, as-7)
advmod(stay-6, long-8)
mark(like-11, as-9)
nsubj(like-11, you-10)
advcl(long-8, like-11)
ccomp(long-8, like-11)
expl(is-14, there-13)
parataxis(stay-6, is-14)
nsubj(is-14, nothing-15)
aux(take-17, to-16)
vmod(nothing-15, take-17)
dobj(take-17, me-18)
advmod(take-17, away-19)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (VP (VBN thought)
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD would)
                  (VP (VB be)
                    (ADJP (JJR worse))))))))))
    (PRN (, ,)
      (NP (PRP I))
      (VP (MD would) (RB not)
        (VP (VB have)
          (VP (VBN gone)
            (NP (JJ last) (NN night))))
        ('' '')))
    (`` ``)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJR worse)))
    (. !)))

mark(thought-4, If-1)
nsubj(thought-4, I-2)
aux(thought-4, had-3)
advcl(worse-22, thought-4)
nsubj(worse-8, you-5)
aux(worse-8, would-6)
cop(worse-8, be-7)
ccomp(thought-4, worse-8)
nsubj(gone-14, I-10)
aux(gone-14, would-11)
neg(gone-14, not-12)
aux(gone-14, have-13)
parataxis(worse-22, gone-14)
amod(night-16, last-15)
tmod(gone-14, night-16)
nsubj(worse-22, I-19)
cop(worse-22, 'm-20)
neg(worse-22, not-21)
root(ROOT-0, worse-22)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBD put)
        (NP
          (NP (DT that))
          (PP (IN in)
            (NP (PRP$ your) (NN head))))))
    (. ?)))

nsubj(put-2, What-1)
root(ROOT-0, put-2)
dobj(put-2, that-3)
poss(head-6, your-5)
prep_in(that-3, head-6)

(ROOT
  (SQ (MD Do) (RB n't)
    (NP (PRP you))
    (VP (VB hear)
      (S
        (NP (PRP me))
        (VP (VBG speaking)
          (ADVP (RBR better)))))
    (. ?)))

aux(hear-4, Do-1)
neg(hear-4, n't-2)
nsubj(hear-4, you-3)
root(ROOT-0, hear-4)
nsubj(speaking-6, me-5)
dep(hear-4, speaking-6)
advmod(speaking-6, better-7)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP 've)
        (VP (VBN thought)
          (PP (IN about)
            (NP
              (NP (PRP it))
              (, ,)
              (NP (NNP George))
              (, ,)))))
      (CC and)
      (VP (VBP am)
        (ADJP (VBN convinced)
          (SBAR
            (S
              (NP (DT the) (NN cup))
              (VP (VBZ is)
                (NP (DT a) (NN talisman))))))))
    (. !)))

nsubj(thought-3, I-1)
nsubjpass(convinced-11, I-1)
aux(thought-3, 've-2)
root(ROOT-0, thought-3)
prep_about(thought-3, it-5)
appos(it-5, George-7)
auxpass(convinced-11, am-10)
conj_and(thought-3, convinced-11)
det(cup-13, the-12)
nsubj(talisman-16, cup-13)
cop(talisman-16, is-14)
det(talisman-16, a-15)
ccomp(convinced-11, talisman-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RBR better))
      (NP
        (NP (PDT all) (DT the) (NN time))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP hold)
              (NP (PRP it)))))))
    (. !)))

nsubj(time-6, I-1)
cop(time-6, am-2)
advmod(time-6, better-3)
predet(time-6, all-4)
det(time-6, the-5)
root(ROOT-0, time-6)
nsubj(hold-8, I-7)
rcmod(time-6, hold-8)
dobj(hold-8, it-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VB let)
            (NP (PRP you))
            (S
              (VP (VB put)
                (NP (PRP it))
                (PRT (RP away))
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (VBD was)
                      (ADJP (JJR worse))
                      (NP (JJ last) (NN night)))))))
            (: --)
            (PP (IN for)
              (NP (DT no) (JJ other) (NN reason)))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
mark(let-5, because-3)
nsubj(let-5, I-4)
advcl(was-2, let-5)
dobj(let-5, you-6)
dep(let-5, put-7)
dobj(put-7, it-8)
prt(put-7, away-9)
mark(worse-13, that-10)
nsubj(worse-13, I-11)
cop(worse-13, was-12)
ccomp(put-7, worse-13)
amod(night-15, last-14)
tmod(worse-13, night-15)
neg(reason-20, no-18)
amod(reason-20, other-19)
prep_for(let-5, reason-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD were) (RB not)
          (NP
            (NP (DT a) (NN talisman))
            (, ,)
            (SBAR
              (WHNP (WRB how) (RB else))
              (S
                (VP (MD could))))))))
    (NP (PRP it))
    (VP (VBP have)
      (ADVP (RB so))
      (VP (VBN nestled)
        (NP (PRP itself))
        (PP (IN into)
          (NP (PRP$ my) (NN heart)))))
    (. !)))

mark(talisman-6, If-1)
nsubj(talisman-6, it-2)
cop(talisman-6, were-3)
neg(talisman-6, not-4)
det(talisman-6, a-5)
advcl(nestled-14, talisman-6)
advmod(else-9, how-8)
advmod(could-10, else-9)
nsubj(could-10, else-9)
rcmod(talisman-6, could-10)
nsubj(nestled-14, it-11)
aux(nestled-14, have-12)
advmod(nestled-14, so-13)
root(ROOT-0, nestled-14)
dobj(nestled-14, itself-15)
poss(heart-18, my-17)
prep_into(nestled-14, heart-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP feel)
      (ADVP
        (ADVP (RBR better))
        (PRN (, ,)
          (ADVP (RB always))
          (, ,)))
      (NP
        (NP (DT the) (NN moment))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP take)
              (NP (PRP it))
              (PP (IN in)
                (NP (PRP$ my) (NN hand))))))))
    (. !)))

nsubj(feel-2, I-1)
root(ROOT-0, feel-2)
advmod(feel-2, better-3)
dep(better-3, always-5)
det(moment-8, the-7)
dobj(feel-2, moment-8)
nsubj(take-10, I-9)
rcmod(moment-8, take-10)
dobj(take-10, it-11)
poss(hand-14, my-13)
prep_in(take-10, hand-14)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (NN something))
        (SBAR
          (WHNP
            (WHNP
              (QP (RBR more) (IN than) (JJ common)))
            (WHPP (IN about)
              (WHNP (WDT that))))
          (S
            (VP (VBP chalice))))))
    (. !)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nsubj(is-2, something-3)
prep_about(common-6, something-3)
quantmod(common-6, more-4)
quantmod(common-6, than-5)
nsubj(chalice-9, common-6)
rcmod(something-3, chalice-9)

(ROOT
  (FRAG
    (NP
      (NP (NNP George))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (IN if)
        (S
          (NP (PRP it))
          (VP (MD should)
            (VP (VB be)
              (NP (DT the) (NNP Holy) (NNP Grail)))))))
    (. !) ('' '')))

root(ROOT-0, George-1)
dobj(Grail-10, George-1)
mark(Grail-10, if-4)
nsubj(Grail-10, it-5)
aux(Grail-10, should-6)
cop(Grail-10, be-7)
det(Grail-10, the-8)
nn(Grail-10, Holy-9)
rcmod(George-1, Grail-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD said)
      (NP (PRP it))
      (PP (IN with)
        (NP
          (NP (JJ bated) (NN breath))
          (, ,)
          (CC and)
          (NP (DT a) (JJ great) (JJ white) (NN awe))))
      (PP (IN upon)
        (NP (PRP$ his) (NN countenance))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
dobj(said-2, it-3)
amod(breath-6, bated-5)
prep_with(said-2, breath-6)
det(awe-12, a-9)
amod(awe-12, great-10)
amod(awe-12, white-11)
prep_with(said-2, awe-12)
conj_and(breath-6, awe-12)
poss(countenance-15, his-14)
prep_upon(said-2, countenance-15)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NNS eyes))
      (VP (VBD were)
        (VP (VBG shining))))
    (: ;)
    (S
      (NP (PRP$ his) (NN breath))
      (VP
        (VP (VBD came))
        (CC and)
        (VP (VBD went)
          (ADVP (RB fast)))))
    (. .)))

poss(eyes-2, His-1)
nsubj(shining-4, eyes-2)
aux(shining-4, were-3)
root(ROOT-0, shining-4)
poss(breath-7, his-6)
nsubj(came-8, breath-7)
nsubj(went-10, breath-7)
parataxis(shining-4, came-8)
parataxis(shining-4, went-10)
conj_and(came-8, went-10)
advmod(went-10, fast-11)

(ROOT
  (S
    (ADVP (RB Slowly))
    (NP (PRP$ his) (JJ aged) (NNS cheeks))
    (VP (VBD flushed)
      (PP (IN with)
        (NP (CD two) (JJ bright) (NNS spots))))
    (. .)))

advmod(flushed-5, Slowly-1)
poss(cheeks-4, his-2)
amod(cheeks-4, aged-3)
nsubj(flushed-5, cheeks-4)
root(ROOT-0, flushed-5)
num(spots-9, two-7)
amod(spots-9, bright-8)
prep_with(flushed-5, spots-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD looked)
      (SBAR (RB as) (IN if)
        (S
          (NP
            (NP (DT the) (NN joy))
            (PP (IN of)
              (NP (PRP$ his) (NN life))))
          (VP (VBD was)
            (VP (VBN come))))))
    (. .)))

nsubj(looked-2, He-1)
root(ROOT-0, looked-2)
advmod(come-11, as-3)
mark(come-11, if-4)
det(joy-6, the-5)
nsubjpass(come-11, joy-6)
poss(life-9, his-8)
prep_of(joy-6, life-9)
auxpass(come-11, was-10)
advcl(looked-2, come-11)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (WP What))
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (MD should)
            (VP (VB be)
              (NP (DT the) (NNP Holy) (NNP Grail)))))))
    (. !) ('' '')))

root(ROOT-0, What-2)
mark(Grail-9, if-3)
nsubj(Grail-9, it-4)
aux(Grail-9, should-5)
cop(Grail-9, be-6)
det(Grail-9, the-7)
nn(Grail-9, Holy-8)
dep(What-2, Grail-9)

(ROOT
  (S
    (NP (PRP he))
    (VP
      (VP (VBD repeated))
      (, ,)
      (CC and)
      (VP (VBD fell)
        (S
          (ADJP (RB asleep)))
        (PP (IN with)
          (NP
            (NP (DT the) (NNS words))
            (PP (IN on)
              (NP (PRP$ his) (NNS lips)))))))
    (. .)))

nsubj(repeated-2, he-1)
nsubj(fell-5, he-1)
root(ROOT-0, repeated-2)
conj_and(repeated-2, fell-5)
dep(fell-5, asleep-6)
det(words-9, the-8)
prep_with(fell-5, words-9)
poss(lips-12, his-11)
prep_on(words-9, lips-12)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (DT the) (NN evening))
        (VP (VBD deepened)
          (PP (IN into)
            (NP (NN night))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD woke))
    (. .)))

mark(deepened-4, As-1)
det(evening-3, the-2)
nsubj(deepened-4, evening-3)
advcl(woke-9, deepened-4)
prep_into(deepened-4, night-6)
nsubj(woke-9, he-8)
root(ROOT-0, woke-9)

(ROOT
  (S
    (NP (NNP Crawford))
    (VP (VBD was)
      (VP (VBG sitting)
        (PP (IN beside)
          (NP (PRP him)))))
    (. .)))

nsubj(sitting-3, Crawford-1)
aux(sitting-3, was-2)
root(ROOT-0, sitting-3)
prep_beside(sitting-3, him-5)

(ROOT
  (S
    (NP (DT A) (NN change))
    (VP (VBD had)
      (VP (VBN come)
        (PP (IN over)
          (NP (PRP him)))))
    (. .)))

det(change-2, A-1)
nsubj(come-4, change-2)
aux(come-4, had-3)
root(ROOT-0, come-4)
prep_over(come-4, him-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD stared)
      (PP (IN at)
        (NP (NNP George)))
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP he))
          (VP
            (VP (MD could) (RB not)
              (VP (VB make)
                (NP (PRP him))
                (PRT (RP out))))
            (, ,)
            (VP (VBD closed)
              (NP (PRP$ his) (NNS eyes)))
            (, ,)
            (VP (VBD opened)
              (NP (PRP them)))
            (, ,)
            (VP (VBD stared))
            (, ,)
            (CC and)
            (ADVP (RB again))
            (VP (VBD closed)
              (NP (PRP them)))))))
    (. .)))

nsubj(stared-2, He-1)
root(ROOT-0, stared-2)
prep_at(stared-2, George-4)
advmod(make-10, as-5)
mark(make-10, if-6)
nsubj(make-10, he-7)
nsubj(closed-14, he-7)
nsubj(opened-18, he-7)
nsubj(stared-21, he-7)
nsubj(closed-25, he-7)
aux(make-10, could-8)
neg(make-10, not-9)
advcl(stared-2, make-10)
dobj(make-10, him-11)
prt(make-10, out-12)
advcl(stared-2, closed-14)
conj_and(make-10, closed-14)
poss(eyes-16, his-15)
dobj(closed-14, eyes-16)
advcl(stared-2, opened-18)
conj_and(make-10, opened-18)
dobj(opened-18, them-19)
advcl(stared-2, stared-21)
conj_and(make-10, stared-21)
advmod(closed-25, again-24)
advcl(stared-2, closed-25)
conj_and(make-10, closed-25)
dobj(closed-25, them-26)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB think)
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (ADVP (RB there))
                  (PP (IN for)
                    (NP (DT no) (JJ good))))))))))
    (. .)))

nsubj(seemed-2, He-1)
nsubj(think-4, He-1)
root(ROOT-0, seemed-2)
aux(think-4, to-3)
xcomp(seemed-2, think-4)
nsubj(was-6, he-5)
ccomp(think-4, was-6)
advmod(was-6, there-7)
neg(good-10, no-9)
prep_for(was-6, good-10)

(ROOT
  (S (`` ``)
    (ADVP (RB Would))
    (NP (PRP you))
    (VP (VBP like)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB call)
            (NP (NNP Alexa))))))
    (. ?) ('' '')))

advmod(like-4, Would-2)
nsubj(like-4, you-3)
root(ROOT-0, like-4)
dobj(like-4, me-5)
nsubj(call-7, me-5)
aux(call-7, to-6)
xcomp(like-4, call-7)
dobj(call-7, Alexa-8)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP George)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, George-2)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Call)
        (NP (NNP Dawtie)))
      (: ;))
    (VP (VBP call)
      (NP (NNP Dawtie)))
    (. !) ('' '')))

csubj(call-5, Call-2)
dobj(Call-2, Dawtie-3)
root(ROOT-0, call-5)
dobj(call-5, Dawtie-6)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD replied))
    (. .)))

nsubj(replied-2, he-1)
root(ROOT-0, replied-2)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD rose)
      (S
        (VP (TO to)
          (VP (VB go)
            (CC and)
            (VB call)
            (NP (PRP her))))))
    (. .)))

nsubj(rose-2, George-1)
nsubj(go-4, George-1)
nsubj(call-6, George-1)
root(ROOT-0, rose-2)
aux(go-4, to-3)
xcomp(rose-2, go-4)
xcomp(rose-2, call-6)
conj_and(go-4, call-6)
dobj(go-4, her-7)

(ROOT
  (S (`` ``)
    (VP (VB Beware)
      (PP (IN of)
        (NP (PRP her))))
    (. !) ('' '')))

root(ROOT-0, Beware-2)
prep_of(Beware-2, her-4)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN laird))
      (, ,)
      (PP (IN with)
        (NP (JJ glazy) (NNS eyes)))
      (, ,)
      (S (`` ``)
        (VP (VB Beware)
          (PP (IN of)
            (NP (NNP Dawtie))))))
    (. !) ('' '')))

root(ROOT-0, said-1)
det(laird-3, the-2)
dobj(said-1, laird-3)
amod(eyes-7, glazy-6)
prep_with(said-1, eyes-7)
dep(said-1, Beware-10)
prep_of(Beware-10, Dawtie-12)

(ROOT
  (INTJ (`` ``) (UH How) (. ?) ('' '')))

root(ROOT-0, How-2)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP George)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, George-2)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Beware))
      (PP (IN of)
        (NP (PRP her))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD repeated))
    (. .)))

nsubj(repeated-8, Beware-2)
prep_of(Beware-2, her-4)
nsubj(repeated-8, he-7)
root(ROOT-0, repeated-8)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP she))
        (VP (MD can)
          (VP (VB get)
            (NP (DT the) (NN cup))))))
    (, ,)
    (NP (PRP she))
    (VP (MD will))
    (. !)))

mark(get-5, If-2)
nsubj(get-5, she-3)
aux(get-5, can-4)
advcl(will-10, get-5)
det(cup-7, the-6)
dobj(get-5, cup-7)
nsubj(will-10, she-9)
root(ROOT-0, will-10)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD would)
      (VP (VB take)
        (NP (PRP it))
        (UCP
          (PP (IN from)
            (NP (PRP me))))
        (ADVP (RB now))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP she))
            (VP (VBD dared))))))
    (. !)))

nsubj(take-3, She-1)
aux(take-3, would-2)
root(ROOT-0, take-3)
dobj(take-3, it-4)
dep(take-3, from-5)
pobj(from-5, me-6)
advmod(take-3, now-7)
mark(dared-11, if-9)
nsubj(dared-11, she-10)
advcl(take-3, dared-11)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD will)
      (VP (VB steal)
        (NP (PRP it))
        (ADVP (RB yet))))
    (. !)))

nsubj(steal-3, She-1)
aux(steal-3, will-2)
root(ROOT-0, steal-3)
dobj(steal-3, it-4)
advmod(steal-3, yet-5)

(ROOT
  (NP
    (NP (NNP Call) (NNP Dawtie))
    (: ;)
    (NP (NN call) (NN Dawtie))
    (. !) ('' '')))

nn(Dawtie-2, Call-1)
root(ROOT-0, Dawtie-2)
nn(Dawtie-5, call-4)
dep(Dawtie-2, Dawtie-5)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD was)
      (PP (IN in)
        (NP (DT the) (NN drawing-room)))
      (, ,)
      (PP (IN on)
        (NP
          (NP (DT the) (JJ other) (NN side))
          (PP (IN of)
            (NP (DT the) (NN hall))))))
    (. .)))

nsubj(was-2, Alexa-1)
root(ROOT-0, was-2)
det(drawing-room-5, the-4)
prep_in(was-2, drawing-room-5)
det(side-10, the-8)
amod(side-10, other-9)
prep_on(was-2, side-10)
det(hall-13, the-12)
prep_of(side-10, hall-13)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD went))
      (CC and)
      (VP (VBD told)
        (NP (PRP her))
        (SBAR (IN that)
          (S
            (NP (PRP$ her) (NN father))
            (VP (VBD wanted)
              (NP (NNP Dawtie)))))))
    (. .)))

nsubj(went-2, George-1)
nsubj(told-4, George-1)
root(ROOT-0, went-2)
conj_and(went-2, told-4)
dobj(told-4, her-5)
mark(wanted-9, that-6)
poss(father-8, her-7)
nsubj(wanted-9, father-8)
ccomp(told-4, wanted-9)
dobj(wanted-9, Dawtie-10)

(ROOT
  (S
    (S (`` ``)
      (S
        (NP (PRP I))
        (VP (MD will)
          (VP (VB find)
            (NP (PRP her)))))
      (, ,) ('' '')
      (NP (PRP she))
      (VP
        (VP (VBD said))
        (, ,)
        (CC and)
        (VP (VBD rose))
        (, ,)
        (CC but)
        (VP (VBD turned))
        (CC and)
        (VP (VBD asked))))
    (: :) (`` ``)
    (SBARQ
      (WHADVP (WRB How))
      (SQ (VBZ does)
        (NP (PRP he))
        (VP (VB seem)
          (ADVP (RB now)))))
    (. ?) ('' '')))

nsubj(find-4, I-2)
aux(find-4, will-3)
ccomp(said-9, find-4)
dobj(find-4, her-5)
nsubj(said-9, she-8)
nsubj(rose-12, she-8)
nsubj(turned-15, she-8)
nsubj(asked-17, she-8)
root(ROOT-0, said-9)
conj_and(said-9, rose-12)
conj_but(said-9, turned-15)
conj_and(said-9, asked-17)
advmod(seem-23, How-20)
aux(seem-23, does-21)
nsubj(seem-23, he-22)
parataxis(said-9, seem-23)
advmod(seem-23, now-24)

(ROOT
  (S (`` ``)
    (FRAG
      (ADVP (RB Rather))
      (ADVP (RBR worse)))
    (, ,) ('' '')
    (NP (NNP George))
    (VP (VBD answered))
    (. .)))

dep(answered-7, Rather-2)
dep(Rather-2, worse-3)
nsubj(answered-7, George-6)
root(ROOT-0, answered-7)

(ROOT
  (S (`` ``)
    (VP (VB Are)
      (S
        (NP (PRP you))
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB be)
                (PP (IN with)
                  (NP (PRP him)))
                (PP (IN through)
                  (NP (DT the) (NN night)))))))))
    (. ?) ('' '')))

root(ROOT-0, Are-2)
nsubj(going-4, you-3)
nsubj(be-6, you-3)
dep(Are-2, going-4)
aux(be-6, to-5)
xcomp(going-4, be-6)
prep_with(be-6, him-8)
det(night-11, the-10)
prep_through(be-6, night-11)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (VBP am)))
      (: ;)
      (S
        (NP (PRP he))
        (VP (VBZ insists)
          (PP (IN on)
            (NP (PRP$ my) (NN staying)))
          (PP (IN with)
            (NP (PRP him))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP
      (NP (NNP George))
      (, ,)
      (ADJP (RB almost) (VBN apologetically)))
    (. .)))

nsubj(am-3, I-2)
ccomp(replied-14, am-3)
nsubj(insists-6, he-5)
parataxis(am-3, insists-6)
poss(staying-9, my-8)
prep_on(insists-6, staying-9)
prep_with(insists-6, him-11)
root(ROOT-0, replied-14)
nsubj(replied-14, George-15)
advmod(apologetically-18, almost-17)
amod(George-15, apologetically-18)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP she))
        (VP (VBD returned)))
      (, ,) (`` ``))
    (NP (PRP you))
    (VP (MD must)
      (VP (VB have)
        (NP (DT some) (NN supper))))
    (. .)))

advmod(have-11, Then-2)
nsubj(returned-6, she-5)
parataxis(have-11, returned-6)
nsubj(have-11, you-9)
aux(have-11, must-10)
root(ROOT-0, have-11)
det(supper-13, some-12)
dobj(have-11, supper-13)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD will)
      (VP
        (VP (VB go)
          (PRT (RP down)))
        (, ,)
        (CC and)
        (VP (VB send)
          (PRT (RP up))
          (NP (NNP Dawtie)))))
    (. .) ('' '')))

nsubj(go-3, We-1)
nsubj(send-7, We-1)
aux(go-3, will-2)
root(ROOT-0, go-3)
prt(go-3, down-4)
conj_and(go-3, send-7)
prt(send-7, up-8)
dobj(send-7, Dawtie-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD followed)
      (NP (PRP her))
      (PP (TO to)
        (NP (DT the) (NN kitchen))))
    (. .)))

nsubj(followed-2, He-1)
root(ROOT-0, followed-2)
dobj(followed-2, her-3)
det(kitchen-6, the-5)
prep_to(followed-2, kitchen-6)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD was) (RB not)
        (ADVP (RB there))))
    (, ,)
    (CC but)
    (S
      (NP (PRP$ her) (NN mistress))
      (VP (VBD found)
        (NP (PRP her))))
    (. .)))

nsubj(was-2, Dawtie-1)
root(ROOT-0, was-2)
neg(was-2, not-3)
advmod(was-2, there-4)
poss(mistress-8, her-7)
nsubj(found-9, mistress-8)
conj_but(was-2, found-9)
dobj(found-9, her-10)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP she))
        (VP (VBD entered)
          (NP
            (NP (PRP$ her) (NN master) (POS 's))
            (NN room)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD lay)
      (NP
        (NP (NNS motionless))
        (, ,) (`` ``)
        (CC and)
        (NP
          (NP (JJ white))
          (PP (IN with)
            (NP
              (NP (DT the) (NNS whiteness))
              (PP (IN of)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ dead)))))))))))
    (. .) ('' '')))

advmod(entered-3, When-1)
nsubj(entered-3, she-2)
advcl(lay-10, entered-3)
poss(master-5, her-4)
poss(room-7, master-5)
dobj(entered-3, room-7)
nsubj(lay-10, he-9)
root(ROOT-0, lay-10)
dobj(lay-10, motionless-11)
dobj(lay-10, white-15)
conj_and(motionless-11, white-15)
det(whiteness-18, the-17)
prep_with(white-15, whiteness-18)
nsubj(dead-22, what-20)
cop(dead-22, is-21)
prepc_of(whiteness-18, dead-22)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD got)
        (NP (NN brandy)))
      (, ,)
      (CC and)
      (VP (VBD made)
        (S
          (NP (PRP him))
          (VP (VB swallow)
            (NP (DT some))))))
    (. .)))

nsubj(got-2, She-1)
nsubj(made-6, She-1)
root(ROOT-0, got-2)
dobj(got-2, brandy-3)
conj_and(got-2, made-6)
nsubj(swallow-8, him-7)
ccomp(made-6, swallow-8)
dobj(swallow-8, some-9)

(ROOT
  (S
    (ADVP (RB As) (RB soon)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD recovered)
            (NP (DT a) (JJ little))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB talk)
            (ADVP (RB wildly))))))
    (. .)))

advmod(soon-2, As-1)
advmod(began-10, soon-2)
mark(recovered-5, as-3)
nsubj(recovered-5, he-4)
ccomp(soon-2, recovered-5)
det(little-7, a-6)
dobj(recovered-5, little-7)
nsubj(began-10, he-9)
nsubj(talk-12, he-9)
root(ROOT-0, began-10)
aux(talk-12, to-11)
xcomp(began-10, talk-12)
advmod(talk-12, wildly-13)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (NP (NNP Agnes))
    (. !) ('' '')))

discourse(Agnes-4, Oh-2)
root(ROOT-0, Agnes-4)

(ROOT
  (S
    (NP (PRP he))
    (VP
      (VP (VBD cried))
      (, ,)
      (VP (`` ``) (VBP do) (RB not)
        (VP (VB leave)
          (NP (PRP me)))))
    (. .)))

nsubj(cried-2, he-1)
root(ROOT-0, cried-2)
aux(leave-7, do-5)
neg(leave-7, not-6)
dep(cried-2, leave-7)
dobj(leave-7, me-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (NP (DT a) (JJ bad) (NN man)))
    (. !)))

nsubj(man-6, I-1)
cop(man-6, 'm-2)
neg(man-6, not-3)
det(man-6, a-4)
amod(man-6, bad-5)
root(ROOT-0, man-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB not)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNP Dawtie))
            (VP (VBZ calls)
              (NP (PRP me)))))))
    (. .)))

nsubj(not-3, I-1)
cop(not-3, 'm-2)
root(ROOT-0, not-3)
dobj(calls-6, what-4)
nsubj(calls-6, Dawtie-5)
ccomp(not-3, calls-6)
dobj(calls-6, me-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP believe)
        (PP (IN in)
          (NP (DT the) (NN atonement)))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBD put)
        (NP (DT no) (NN trust))
        (PP (IN in)
          (NP (PRP myself)))))
    (: ;)
    (S
      (NP (PRP$ my) (NNS righteousness))
      (VP (VBZ is)
        (ADJP (RB as) (RB filthy) (JJ rags))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
det(atonement-5, the-4)
prep_in(believe-2, atonement-5)
nsubj(put-8, I-7)
parataxis(believe-2, put-8)
neg(trust-10, no-9)
dobj(put-8, trust-10)
prep_in(put-8, myself-12)
poss(righteousness-15, my-14)
nsubj(rags-19, righteousness-15)
cop(rags-19, is-16)
advmod(rags-19, as-17)
advmod(rags-19, filthy-18)
parataxis(believe-2, rags-19)

(ROOT
  (S
    (VP (VB Take)
      (NP (PRP me))
      (PP (IN with)
        (NP (PRP you))))
    (. .)))

root(ROOT-0, Take-1)
dobj(Take-1, me-2)
prep_with(Take-1, you-4)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB _))
    (VP (MD will)
      (ADVP (RB _))
      (VP (VB go)
        (PP (IN with)
          (NP (PRP you)))))
    (. .)))

nsubj(go-5, I-1)
advmod(go-5, _-2)
aux(go-5, will-3)
advmod(go-5, _-4)
root(ROOT-0, go-5)
prep_with(go-5, you-7)

(ROOT
  (FRAG
    (ADVP (RB There))
    (. !)))

root(ROOT-0, There-1)

(ROOT
  (S
    (NP (NNP Slip))
    (VP
      (X
        (X (IN that))
        (PP (IN under)
          (NP (PRP$ your) (JJ white) (NN robe))))
      (: --)
      (VP (VBN washed)
        (PP (IN in)
          (NP
            (NP (DT the) (NN blood))
            (PP (IN of)
              (NP (DT the) (NNP Lamb)))))))
    (. .)))

nsubj(washed-8, Slip-1)
dep(under-3, that-2)
dep(washed-8, under-3)
poss(robe-6, your-4)
amod(robe-6, white-5)
pobj(under-3, robe-6)
root(ROOT-0, washed-8)
det(blood-11, the-10)
prep_in(washed-8, blood-11)
det(Lamb-14, the-13)
prep_of(blood-11, Lamb-14)

(ROOT
  (S
    (NP (DT That))
    (VP (MD will)
      (VP (VB hide)
        (NP (PRP it))
        (: --)
        (PP (IN with)
          (NP
            (NP (DT the) (NN rest))
            (PP (IN of)
              (NP (PRP$ my) (NNS sins)))))))
    (. !)))

nsubj(hide-3, That-1)
aux(hide-3, will-2)
root(ROOT-0, hide-3)
dobj(hide-3, it-4)
det(rest-8, the-7)
prep_with(hide-3, rest-8)
poss(sins-11, my-10)
prep_of(rest-8, sins-11)

(ROOT
  (S
    (NP (DT The) (VBG unbelieving) (NN husband))
    (VP (VBZ is)
      (VP (VBN sanctified)
        (PP (IN by)
          (NP (DT the) (JJ believing) (NN wife)))))
    (. .)))

det(husband-3, The-1)
amod(husband-3, unbelieving-2)
nsubjpass(sanctified-5, husband-3)
auxpass(sanctified-5, is-4)
root(ROOT-0, sanctified-5)
det(wife-9, the-7)
amod(wife-9, believing-8)
agent(sanctified-5, wife-9)

(ROOT
  (S
    (S
      (S
        (VP (VB Take)
          (NP (PRP it)))
        (: ;))
      (VP (VBP take)
        (NP (PRP it))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB be)
          (VP (VBN lost)
            (PP (IN in)
              (NP (NN heaven)))
            (PP (IN without)
              (NP (PRP it)))))))
    (. !)))

csubj(take-4, Take-1)
dobj(Take-1, it-2)
root(ROOT-0, take-4)
dobj(take-4, it-5)
nsubjpass(lost-10, I-7)
aux(lost-10, should-8)
auxpass(lost-10, be-9)
parataxis(take-4, lost-10)
prep_in(lost-10, heaven-12)
prep_without(lost-10, it-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB see)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP 've)
                (VP (VBN got)
                  (PRT (RP on)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD must)
        (VP (VB be)
          (NP
            (NP (DT the) (NN robe))
            (PP (IN of)
              (NP (PRP$ His) (NNS righteousness))))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP I))
              (VP (VBP have)
                (NP
                  (NP (NN none))
                  (PP (IN of)
                    (NP (PRP$ my) (JJ own))))))))))
    (. !)))

nsubj(see-4, I-1)
aux(see-4, ca-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
dobj(got-8, what-5)
nsubj(got-8, I-6)
aux(got-8, 've-7)
ccomp(see-4, got-8)
prt(got-8, on-9)
nsubj(robe-16, it-12)
aux(robe-16, must-13)
cop(robe-16, be-14)
det(robe-16, the-15)
conj_but(see-4, robe-16)
poss(righteousness-19, His-18)
prep_of(robe-16, righteousness-19)
mark(have-23, for-21)
nsubj(have-23, I-22)
advcl(robe-16, have-23)
dobj(have-23, none-24)
poss(own-27, my-26)
prep_of(none-24, own-27)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB be)
        (PP (IN without)
          (NP (PRP it))))
      (. !))))

dobj(be-4, What-1)
aux(be-4, should-2)
nsubj(be-4, I-3)
root(ROOT-0, be-4)
prep_without(be-4, it-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBN got)))))))
    (. !)))

nsubj(all-3, It-1)
cop(all-3, 's-2)
root(ROOT-0, all-3)
nsubj(got-6, I-4)
aux(got-6, 've-5)
rcmod(all-3, got-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB bring)
          (PRT (RP away))
          (NP (DT a) (JJ single) (NN thing))
          (PP (IN besides)))))
    (PRN (: --)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (UCP
            (ADJP (RB so) (JJ cold)
              (S
                (VP (TO to)
                  (VP (VB have)))))
            (CC but)
            (NP
              (NP (CD one) (NN thing))
              (ADVP (RB on))))))
      (: --))
    (S
      (NP (PRP I))
      (VP (VBP mean)
        (NP
          (NP (CD one) (NN thing))
          (PP (IN in)
            (NP (PRP$ your) (NNS hands))))))
    (. !)))

nsubj(bring-4, I-1)
aux(bring-4, could-2)
neg(bring-4, n't-3)
root(ROOT-0, bring-4)
prt(bring-4, away-5)
det(thing-8, a-6)
amod(thing-8, single-7)
dobj(bring-4, thing-8)
prep(bring-4, besides-9)
nsubj(cold-15, it-12)
nsubj(have-17, it-12)
cop(cold-15, 's-13)
advmod(cold-15, so-14)
dep(bring-4, cold-15)
aux(have-17, to-16)
xcomp(cold-15, have-17)
num(thing-20, one-19)
dep(bring-4, thing-20)
conj_but(cold-15, thing-20)
advmod(thing-20, on-21)
nsubj(mean-24, I-23)
parataxis(bring-4, mean-24)
num(thing-26, one-25)
dobj(mean-24, thing-26)
poss(hands-29, your-28)
prep_in(thing-26, hands-29)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB say)
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD will)
            (VP (VB make)
              (S
                (NP (PRP me))
                (VP (VB sell)
                  (NP (PRP it)))))))))
    (. ?)))

aux(say-3, Do-1)
nsubj(say-3, you-2)
root(ROOT-0, say-3)
nsubj(make-6, they-4)
aux(make-6, will-5)
ccomp(say-3, make-6)
nsubj(sell-8, me-7)
ccomp(make-6, sell-8)
dobj(sell-8, it-9)

(ROOT
  (S
    (NP (DT That))
    (VP (MD would)
      (VP (VB be)
        (ADJP
          (ADJP (JJR worse))
          (PP (IN than)
            (S
              (VP (VBG coming)
                (PP (IN without)
                  (NP (PRP it)))))))))
    (. !) ('' '')))

nsubj(worse-4, That-1)
aux(worse-4, would-2)
cop(worse-4, be-3)
root(ROOT-0, worse-4)
prepc_than(worse-4, coming-6)
prep_without(coming-6, it-8)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (VP (VBG talking)
        (PP (TO to)
          (NP (PRP$ his) (NN wife)))))
    (. !)))

nsubj(talking-3, He-1)
aux(talking-3, was-2)
root(ROOT-0, talking-3)
poss(wife-6, his-5)
prep_to(talking-3, wife-6)

(ROOT
  (S
    (LST (: --))
    (VP (VB persuading)
      (S
        (NP (PRP her))
        (VP (TO to)
          (VP (VB smuggle)
            (NP (DT the) (NN cup))
            (PP (IN into)
              (NP (NN heaven)))))))
    (. !)))

root(ROOT-0, persuading-2)
dobj(persuading-2, her-3)
nsubj(smuggle-5, her-3)
aux(smuggle-5, to-4)
xcomp(persuading-2, smuggle-5)
det(cup-7, the-6)
dobj(smuggle-5, cup-7)
prep_into(smuggle-5, heaven-9)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP
        (VP (VBD went)
          (PP (IN on)
            (NP (PRP$ her) (NNS knees)))
          (PP (IN behind)
            (NP (DT the) (NN curtain))))
        (, ,)
        (CC and)
        (VP (VBD began)
          (S
            (VP (TO to)
              (VP (VB pray)
                (PP (IN for)
                  (NP (PRP him)))))))))
    (RB all)
    (S
      (NP (PRP she))
      (VP (MD could)))
    (. .)))

nsubj(went-2, Dawtie-1)
nsubj(began-11, Dawtie-1)
nsubj(pray-13, Dawtie-1)
root(ROOT-0, went-2)
poss(knees-5, her-4)
prep_on(went-2, knees-5)
det(curtain-8, the-7)
prep_behind(went-2, curtain-8)
conj_and(went-2, began-11)
aux(pray-13, to-12)
xcomp(began-11, pray-13)
prep_for(pray-13, him-15)
advmod(went-2, all-16)
nsubj(could-18, she-17)
parataxis(went-2, could-18)

(ROOT
  (S (CC But)
    (NP (NN something))
    (VP (VBD seemed)
      (S
        (VP
          (VP (VBG stopping)
            (NP (PRP her)))
          (, ,)
          (CC and)
          (VP (VBG making)
            (NP
              (NP (PRP$ her) (NN prayer))
              (VP (VBN come)
                (ADVP (RB only))
                (PP (IN from)
                  (NP (PRP$ her) (NNS lips)))))))))
    (. .)))

cc(seemed-3, But-1)
nsubj(seemed-3, something-2)
root(ROOT-0, seemed-3)
ccomp(seemed-3, stopping-4)
dobj(stopping-4, her-5)
ccomp(seemed-3, making-8)
conj_and(stopping-4, making-8)
poss(prayer-10, her-9)
dobj(making-8, prayer-10)
vmod(prayer-10, come-11)
advmod(come-11, only-12)
poss(lips-15, her-14)
prep_from(come-11, lips-15)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Ah)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (DT the) (NN voice))
      (PP (IN of)
        (NP (PRP$ her) (NN master))))
    (, ,) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (ADVP (RB so))))
    (. !)))

dep(said-5, Ah-2)
root(ROOT-0, said-5)
det(voice-7, the-6)
nsubj(said-5, voice-7)
poss(master-10, her-9)
prep_of(voice-7, master-10)
nsubj(thought-14, I-13)
ccomp(said-5, thought-14)
advmod(thought-14, so-15)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (PRP I))
      (VP
        (VP (VB go)
          (PRT (RP up)))
        (, ,)
        (CC and)
        (VP
          (NP (PRP you))
          (S
            (VP (VBG praying)
              (PP (IN against)
                (NP (PRP me)))
              (PP (IN like)
                (NP (DT that)))))))
      (. !))))

advmod(go-4, How-1)
aux(go-4, could-2)
nsubj(go-4, I-3)
root(ROOT-0, go-4)
prt(go-4, up-5)
conj_and(go-4, you-8)
xcomp(you-8, praying-9)
prep_against(praying-9, me-11)
prep_like(praying-9, that-13)

(ROOT
  (S
    (NP
      (NP (NNP Cup))
      (CC or)
      (NP (DT no) (NN cup)))
    (, ,)
    (NP (DT the) (NN thing))
    (VP (VBD was)
      (ADJP (JJ impossible)))
    (. !) ('' '')))

nsubj(impossible-9, Cup-1)
neg(cup-4, no-3)
conj_or(Cup-1, cup-4)
nsubj(impossible-9, cup-4)
det(thing-7, the-6)
nsubj(impossible-9, thing-7)
cop(impossible-9, was-8)
root(ROOT-0, impossible-9)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD opened)
        (NP (PRP$ her) (NNS eyes))))
    (: --)
    (CC and)
    (ADVP (RB there))
    (S
      (NP (PRP he))
      (VP (VBD was)
        (PRN (, ,)
          (S
            (VP
              (VP (VBG holding)
                (PRT (RP back))
                (NP (DT the) (NN curtain)))
              (CC and)
              (VP (VBG looking)
                (NP (NN round))))))
        (NP
          (NP (DT the) (NN edge))
          (PP (IN of)
            (NP (PRP it)))
          (PP (IN with)
            (NP
              (NP (DT a) (NN face))
              (PP (IN of)
                (NP
                  (NP (NN eagerness) (, ,) (NN effort) (, ,)
                    (CC and)
                    (NN hate) (, ,))
                  (PP (RB as) (IN of)
                    (NP (CD one)))))
              (VP (VBG struggling)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB go))
                      (, ,)
                      (CC and)
                      (VP (JJ unable)
                        (S
                          (VP (TO to)
                            (VP (VB break)
                              (PRT (RP away)))))))))))))))
    (. .)))

nsubj(opened-2, Dawtie-1)
root(ROOT-0, opened-2)
poss(eyes-4, her-3)
dobj(opened-2, eyes-4)
advmod(edge-19, there-7)
nsubj(edge-19, he-8)
cop(edge-19, was-9)
parataxis(edge-19, holding-11)
prt(holding-11, back-12)
det(curtain-14, the-13)
dobj(holding-11, curtain-14)
conj_and(holding-11, looking-16)
parataxis(edge-19, looking-16)
dobj(looking-16, round-17)
det(edge-19, the-18)
conj_and(opened-2, edge-19)
prep_of(edge-19, it-21)
det(face-24, a-23)
prep_with(edge-19, face-24)
nn(effort-28, eagerness-26)
prep_of(face-24, effort-28)
prep_of(face-24, hate-31)
conj_and(effort-28, hate-31)
prep_as_of(effort-28, one-35)
vmod(face-24, struggling-36)
aux(go-38, to-37)
xcomp(struggling-36, go-38)
xcomp(struggling-36, unable-41)
conj_and(go-38, unable-41)
aux(break-43, to-42)
xcomp(unable-41, break-43)
prt(break-43, away-44)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD rose)
      (PP (TO to)
        (NP (PRP$ her) (NNS feet))))
    (. .)))

nsubj(rose-2, She-1)
root(ROOT-0, rose-2)
poss(feet-5, her-4)
prep_to(rose-2, feet-5)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP are)
      (NP (DT a) (NN fiend)))
    (. !) ('' '')))

nsubj(fiend-5, You-2)
cop(fiend-5, are-3)
det(fiend-5, a-4)
root(ROOT-0, fiend-5)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD cried))
    (. .)))

nsubj(cried-2, he-1)
root(ROOT-0, cried-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (ADVP (RB _))
    (VP (MD will)
      (ADVP (RB _))
      (VP (VB go)
        (PP (IN with)
          (NP (NNP Agnes)))))
    (. !) ('' '')))

nsubj(go-6, I-2)
advmod(go-6, _-3)
aux(go-6, will-4)
advmod(go-6, _-5)
root(ROOT-0, go-6)
prep_with(go-6, Agnes-8)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD gave)
          (NP (DT a) (NN cry)))
        (, ,)
        (CC and)
        (VP (VBD ceased))))
    (, ,)
    (CC and)
    (S
      (NP (DT all))
      (VP (VBD was)
        (ADVP (RB still))))
    (. .)))

nsubj(gave-2, He-1)
nsubj(ceased-7, He-1)
root(ROOT-0, gave-2)
det(cry-4, a-3)
dobj(gave-2, cry-4)
conj_and(gave-2, ceased-7)
nsubj(was-11, all-10)
conj_and(gave-2, was-11)
advmod(was-11, still-12)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD heard)
        (NP (DT the) (NN cry))
        (PP (IN in)
          (NP (DT the) (NN kitchen))))
      (, ,)
      (CC and)
      (VP (VBD came)
        (S
          (VP (VBG running)
            (PRT (RP up))))))
    (. .)))

nsubj(heard-2, They-1)
nsubj(came-10, They-1)
root(ROOT-0, heard-2)
det(cry-4, the-3)
dobj(heard-2, cry-4)
det(kitchen-7, the-6)
prep_in(heard-2, kitchen-7)
conj_and(heard-2, came-10)
xcomp(came-10, running-11)
prt(running-11, up-12)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD found)
      (NP
        (NP (NNP Dawtie) (NNP bending))
        (PP (IN over)
          (NP (PRP$ her) (NN master))))
      (, ,)
      (PP (IN with)
        (NP (DT a) (VBN scared) (NN face))))
    (. .)))

nsubj(found-2, They-1)
root(ROOT-0, found-2)
nn(bending-4, Dawtie-3)
dobj(found-2, bending-4)
poss(master-7, her-6)
prep_over(bending-4, master-7)
det(face-12, a-10)
amod(face-12, scared-11)
prep_with(found-2, face-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB have)
            (VP (VBN struck)
              (NP (PRP her))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (CD one) (NN cheek))
                  (VP (VBD was)
                    (VP (VBN marked)
                      (PP (IN with)
                        (NP (JJ red) (NNS streaks)))
                      (PP (IN across)
                        (NP (PRP$ its) (NNS whiteness))))))))))))
    (. .)))

nsubj(seemed-2, He-1)
nsubj(struck-5, He-1)
root(ROOT-0, seemed-2)
aux(struck-5, to-3)
aux(struck-5, have-4)
xcomp(seemed-2, struck-5)
dobj(struck-5, her-6)
mark(marked-12, for-8)
num(cheek-10, one-9)
nsubjpass(marked-12, cheek-10)
auxpass(marked-12, was-11)
advcl(struck-5, marked-12)
amod(streaks-15, red-14)
prep_with(marked-12, streaks-15)
poss(whiteness-18, its-17)
prep_across(marked-12, whiteness-18)

(ROOT
  (NP (`` ``) (DT The) (NN Grail) (. !)))

det(Grail-3, The-2)
root(ROOT-0, Grail-3)

(ROOT
  (FRAG
    (NP (DT the) (JJ Holy) (NN Grail) (. !) ('' ''))))

det(Grail-3, the-1)
amod(Grail-3, Holy-2)
root(ROOT-0, Grail-3)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD cried))
    (. .)))

nsubj(cried-2, he-1)
root(ROOT-0, cried-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD found)
      (NP (PRP it)))
    (. !)))

nsubj(found-3, I-2)
root(ROOT-0, found-3)
dobj(found-3, it-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG bringing)
        (NP (PRP it))
        (ADVP (RB home))))
    (. !)))

nsubj(bringing-3, I-1)
aux(bringing-3, was-2)
root(ROOT-0, bringing-3)
dobj(bringing-3, it-4)
advmod(bringing-3, home-5)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD took)
      (NP (PRP it))
      (PP (IN from)
        (NP (PRP me))))
    (. !)))

nsubj(took-2, She-1)
root(ROOT-0, took-2)
dobj(took-2, it-3)
prep_from(took-2, me-5)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ wants)
        (S
          (NP (PRP it))
          (VP (TO to)))))
    (: --) ('' '')
    (PRN
      (S
        (NP (PRP$ His) (NN jaw))
        (VP (VBD fell))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ dead))))
    (. .)))

nsubj(wants-2, She-1)
root(ROOT-0, wants-2)
dobj(wants-2, it-3)
nsubj(to-4, it-3)
xcomp(wants-2, to-4)
poss(jaw-8, His-7)
nsubj(fell-9, jaw-8)
dep(wants-2, fell-9)
nsubj(dead-14, he-12)
cop(dead-14, was-13)
conj_and(wants-2, dead-14)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD threw)
      (NP (PRP herself))
      (PP (IN beside)
        (NP (DT the) (NN body))))
    (. .)))

nsubj(threw-2, Alexa-1)
root(ROOT-0, threw-2)
dobj(threw-2, herself-3)
det(body-6, the-5)
prep_beside(threw-2, body-6)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN raised)
            (NP (PRP her))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD resisted))
        (, ,)
        (CC and)
        (VP (VBD lay)
          (NP (NNS motionless)))))
    (. .)))

nsubj(raised-4, George-1)
aux(raised-4, would-2)
aux(raised-4, have-3)
root(ROOT-0, raised-4)
dobj(raised-4, her-5)
nsubj(resisted-9, she-8)
nsubj(lay-12, she-8)
conj_but(raised-4, resisted-9)
conj_but(raised-4, lay-12)
conj_and(resisted-9, lay-12)
dobj(lay-12, motionless-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD stood)
      (ADVP (RB then))
      (PP (IN behind)
        (NP (PRP her)))
      (, ,)
      (S
        (VP (VBG watching)
          (NP (DT an) (NN opportunity)
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP (DT the) (NN cup))
                  (PP (IN from)
                    (PP (IN under)
                      (NP (DT the) (NNS bed-clothes))))))))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD might)
            (VP (VB put)
              (NP (PRP it))
              (PP (IN in)
                (NP (DT the) (NN closet))))))))
    (. .)))

nsubj(stood-2, He-1)
root(ROOT-0, stood-2)
advmod(stood-2, then-3)
prep_behind(stood-2, her-5)
xcomp(stood-2, watching-7)
det(opportunity-9, an-8)
dobj(watching-7, opportunity-9)
aux(get-11, to-10)
vmod(opportunity-9, get-11)
det(cup-13, the-12)
dobj(get-11, cup-13)
prep(get-11, from-14)
pcomp(from-14, under-15)
det(bed-clothes-17, the-16)
pobj(under-15, bed-clothes-17)
mark(put-22, that-19)
nsubj(put-22, he-20)
aux(put-22, might-21)
ccomp(stood-2, put-22)
dobj(put-22, it-23)
det(closet-26, the-25)
prep_in(put-22, closet-26)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD ordered)
        (S
          (NP (NNP Dawtie))
          (VP (TO to)
            (VP (VB fetch)
              (NP (NN water))
              (PP (IN for)
                (NP (PRP$ her) (NN mistress))))))))
    (: ;)
    (CC but)
    (S
      (NP (NNP Alexa))
      (VP (VBD told)
        (NP (PRP her))
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBD did) (RB not)
              (VP (VB want)
                (NP (DT any))))))))
    (. .)))

nsubj(ordered-2, He-1)
root(ROOT-0, ordered-2)
dobj(ordered-2, Dawtie-3)
nsubj(fetch-5, Dawtie-3)
aux(fetch-5, to-4)
xcomp(ordered-2, fetch-5)
dobj(fetch-5, water-6)
poss(mistress-9, her-8)
prep_for(fetch-5, mistress-9)
nsubj(told-13, Alexa-12)
conj_but(ordered-2, told-13)
dobj(told-13, her-14)
nsubj(want-18, she-15)
aux(want-18, did-16)
neg(want-18, not-17)
dep(told-13, want-18)
dobj(want-18, any-19)

(ROOT
  (S
    (ADVP (RB Once)
      (CC and)
      (RB again))
    (NP (NNP George))
    (VP (VBD tried)
      (S
        (VP (TO to)
          (VP
            (VP (VB raise)
              (NP (PRP her)))
            (, ,)
            (CC and)
            (VP (VB get)
              (NP (PRP$ his) (NN hand))
              (PP (IN under)
                (NP (DT the) (NNS bed-clothes)))
              (S
                (VP (TO to)
                  (VP (VB feel)
                    (PP (IN for)
                      (NP (DT the) (NN cup)))))))))))
    (. .)))

advmod(tried-5, Once-1)
conj_and(Once-1, again-3)
advmod(tried-5, again-3)
nsubj(tried-5, George-4)
nsubj(raise-7, George-4)
nsubj(get-11, George-4)
root(ROOT-0, tried-5)
aux(raise-7, to-6)
xcomp(tried-5, raise-7)
dobj(raise-7, her-8)
xcomp(tried-5, get-11)
conj_and(raise-7, get-11)
poss(hand-13, his-12)
dobj(get-11, hand-13)
det(bed-clothes-16, the-15)
prep_under(get-11, bed-clothes-16)
aux(feel-18, to-17)
vmod(get-11, feel-18)
det(cup-21, the-20)
prep_for(feel-18, cup-21)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBZ is) (RB not)
      (ADJP (JJ dead)))
    (. !) ('' '')))

nsubj(dead-5, He-2)
cop(dead-5, is-3)
neg(dead-5, not-4)
root(ROOT-0, dead-5)

(ROOT
  (FRAG
    (NP (NNP cried) (NNP Alexa))
    (: ;) (`` ``)
    (S
      (NP (PRP he))
      (VP (VBD moved)))
    (. !) ('' '')))

nn(Alexa-2, cried-1)
root(ROOT-0, Alexa-2)
nsubj(moved-6, he-5)
dep(Alexa-2, moved-6)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Get)
        (NP (DT some) (NN brandy))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP George))
    (. .)))

ccomp(said-7, Get-2)
det(brandy-4, some-3)
dobj(Get-2, brandy-4)
root(ROOT-0, said-7)
nsubj(said-7, George-8)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD rose))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PP (TO to)
          (NP (DT the) (NN table)))
        (PP (IN for)
          (NP (DT the) (NN brandy)))))
    (. .)))

nsubj(rose-2, She-1)
nsubj(went-5, She-1)
root(ROOT-0, rose-2)
conj_and(rose-2, went-5)
det(table-8, the-7)
prep_to(went-5, table-8)
det(brandy-11, the-10)
prep_for(went-5, brandy-11)

(ROOT
  (S
    (NP
      (NP (NNP George))
      (, ,)
      (PP (IN with)
        (NP
          (NP (DT the) (NN pretense))
          (PP (IN of)
            (S
              (VP (VBG feeling)
                (NP
                  (NP (DT the) (JJ dead) (NN man) (POS 's))
                  (NN heart)))))))
      (, ,))
    (VP (VBD threw)
      (PRT (RP back))
      (NP (DT the) (NNS clothes)))
    (. .)))

nsubj(threw-14, George-1)
det(pretense-5, the-4)
prep_with(George-1, pretense-5)
prepc_of(pretense-5, feeling-7)
det(man-10, the-8)
amod(man-10, dead-9)
poss(heart-12, man-10)
dobj(feeling-7, heart-12)
root(ROOT-0, threw-14)
prt(threw-14, back-15)
det(clothes-17, the-16)
dobj(threw-14, clothes-17)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD could)
      (VP (VB find)
        (NP (DT no) (NN cup))))
    (. .)))

nsubj(find-3, He-1)
aux(find-3, could-2)
root(ROOT-0, find-3)
neg(cup-5, no-4)
dobj(find-3, cup-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD had)
      (VP (VBN got)
        (ADVP (RBR further) (RB down))))
    (. !)))

nsubj(got-3, It-1)
aux(got-3, had-2)
root(ROOT-0, got-3)
advmod(down-5, further-4)
advmod(got-3, down-5)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP (VB wait)))
    (. !)))

nsubj(wait-3, He-1)
aux(wait-3, would-2)
root(ROOT-0, wait-3)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD lifted)
        (NP
          (NP (PRP$ her) (NN father) (POS 's))
          (NN head))
        (PP (IN on)
          (NP (PRP$ her) (NN arm)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ plain))
        (SBAR (IN that)
          (S
            (NP (NN brandy))
            (VP (MD could) (RB not)
              (VP (VB help)))))))
    (. .)))

nsubj(lifted-2, Alexa-1)
root(ROOT-0, lifted-2)
poss(father-4, her-3)
poss(head-6, father-4)
dobj(lifted-2, head-6)
poss(arm-9, her-8)
prep_on(lifted-2, arm-9)
nsubj(plain-14, it-12)
cop(plain-14, was-13)
conj_but(lifted-2, plain-14)
mark(help-19, that-15)
nsubj(help-19, brandy-16)
aux(help-19, could-17)
neg(help-19, not-18)
ccomp(plain-14, help-19)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD went)
        (CC and)
        (VBD sat)
        (PP (IN on)
          (NP
            (NP (DT a) (NN chair))
            (ADVP (RB away)
              (PP (IN from)
                (NP (DT the) (NN bed))))))
        (, ,)
        (S
          (ADJP (JJ hopeless))))
      (CC and)
      (VP (VBD exhausted)))
    (. .)))

nsubj(went-2, She-1)
nsubj(sat-4, She-1)
nsubj(exhausted-15, She-1)
root(ROOT-0, went-2)
conj_and(went-2, sat-4)
det(chair-7, a-6)
prep_on(went-2, chair-7)
det(bed-11, the-10)
prep_away_from(chair-7, bed-11)
dep(went-2, hopeless-13)
conj_and(went-2, exhausted-15)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD lifted)
      (NP (DT the) (NNS clothes))
      (PP (IN from)
        (NP
          (NP (DT the) (NN foot))
          (PP (IN of)
            (NP (DT the) (NN bed))))
        (, ,)
        (ADVP (RB then)))
      (PP
        (PP (IN from)
          (NP (DT the) (JJ further) (NN side)))
        (, ,)
        (CC and)
        (RB then)
        (PP (IN from)
          (NP (DT the) (NN nearer))))
      (, ,)
      (PP (IN without)
        (S
          (VP (VBG attracting)
            (NP (PRP$ her) (NN attention))))))
    (. .)))

nsubj(lifted-2, George-1)
root(ROOT-0, lifted-2)
det(clothes-4, the-3)
dobj(lifted-2, clothes-4)
det(foot-7, the-6)
prep_from(lifted-2, foot-7)
det(bed-10, the-9)
prep_of(foot-7, bed-10)
advmod(lifted-2, then-12)
det(side-16, the-14)
amod(side-16, further-15)
prep_from(lifted-2, side-16)
advmod(lifted-2, then-19)
det(nearer-22, the-21)
prep_from(lifted-2, nearer-22)
conj_and(side-16, nearer-22)
prepc_without(lifted-2, attracting-25)
poss(attention-27, her-26)
dobj(attracting-25, attention-27)

(ROOT
  (S
    (NP (DT The) (NN cup))
    (VP (VBD was)
      (ADVP (RB nowhere))
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN seen))))))
    (. !)))

det(cup-2, The-1)
nsubj(was-3, cup-2)
nsubjpass(seen-7, cup-2)
root(ROOT-0, was-3)
advmod(was-3, nowhere-4)
aux(seen-7, to-5)
auxpass(seen-7, be-6)
xcomp(was-3, seen-7)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD put)
        (NP (PRP$ his) (NN hand))
        (PP (IN under)
          (NP (DT the) (NN body)))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN cup))
      (VP (VBD was) (RB not)
        (ADVP (RB there))))
    (. !)))

nsubj(put-2, He-1)
root(ROOT-0, put-2)
poss(hand-4, his-3)
dobj(put-2, hand-4)
det(body-7, the-6)
prep_under(put-2, body-7)
det(cup-11, the-10)
nsubj(was-12, cup-11)
conj_but(put-2, was-12)
neg(was-12, not-13)
advmod(was-12, there-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB leave)
            (NP (DT the) (NN room))
            (SBAR (IN that)
              (S
                (NP (NNP Dawtie)
                  (CC and)
                  (NNP Meg))
                (VP (MD might)
                  (VP (VB prepare)
                    (NP (PRP it))
                    (PP (IN for)
                      (NP (NN burial)))))))))))
    (. .)))

nsubj(had-2, He-1)
nsubj(leave-4, He-1)
root(ROOT-0, had-2)
aux(leave-4, to-3)
xcomp(had-2, leave-4)
det(room-6, the-5)
dobj(leave-4, room-6)
mark(prepare-12, that-7)
nsubj(prepare-12, Dawtie-8)
conj_and(Dawtie-8, Meg-10)
nsubj(prepare-12, Meg-10)
aux(prepare-12, might-11)
ccomp(leave-4, prepare-12)
dobj(prepare-12, it-13)
prep_for(prepare-12, burial-15)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD went)
      (PP (TO to)
        (NP (PRP$ her) (NN chamber))))
    (. .)))

nsubj(went-2, Alexa-1)
root(ROOT-0, went-2)
poss(chamber-5, her-4)
prep_to(went-2, chamber-5)

(ROOT
  (S
    (PP
      (NP (DT A) (NN moment))
      (IN after))
    (, ,)
    (S
      (NP (NNP George))
      (VP
        (VP (VBD returned))
        (, ,)
        (VP (VBD called)
          (NP (NNP Meg))
          (PP (TO to)
            (NP (DT the) (NN door))))
        (, ,)
        (CC and)
        (VP (VBD said))))
    (: :) (`` ``)
    (S
      (NP (EX There))
      (VP (MD must)
        (VP (VB be)
          (NP
            (NP (DT a) (NN brass) (NN cup))
            (PP (IN in)
              (NP (DT the) (NN bed) (RB somewhere)))))))
    (. !)))

det(moment-2, A-1)
npadvmod(after-3, moment-2)
prep(returned-6, after-3)
nsubj(returned-6, George-5)
nsubj(called-8, George-5)
nsubj(said-15, George-5)
root(ROOT-0, returned-6)
conj_and(returned-6, called-8)
dobj(called-8, Meg-9)
det(door-12, the-11)
prep_to(called-8, door-12)
conj_and(returned-6, said-15)
expl(cup-23, There-18)
aux(cup-23, must-19)
cop(cup-23, be-20)
det(cup-23, a-21)
nn(cup-23, brass-22)
parataxis(returned-6, cup-23)
det(bed-26, the-25)
prep_in(cup-23, bed-26)
advmod(bed-26, somewhere-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD brought)
      (S
        (NP (PRP it))
        (VP (TO to)
          (VP (VB amuse)
            (NP (PRP him))))))
    (. .)))

nsubj(brought-2, I-1)
root(ROOT-0, brought-2)
dobj(brought-2, it-3)
nsubj(amuse-5, it-3)
aux(amuse-5, to-4)
xcomp(brought-2, amuse-5)
dobj(amuse-5, him-6)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (VP (VBN fond)
          (PP (IN of)
            (NP (JJ odd) (NNS things))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. !)))

nsubjpass(fond-3, He-1)
auxpass(fond-3, was-2)
ccomp(know-9, fond-3)
amod(things-6, odd-5)
prep_of(fond-3, things-6)
nsubj(know-9, you-8)
root(ROOT-0, know-9)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (MD should))))
      (VP (VBP find)
        (NP (PRP it))))
    (: --) ('' '')
    (PRN
      (SINV (`` ``)
        (S
          (NP (PRP I))
          (VP (MD will)
            (VP (VB take)
              (NP
                (NP (NN care))
                (PP (IN of)
                  (NP (PRP it)))))))
        (, ,) ('' '')
        (VP (VBD answered))
        (NP (NNP Meg))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBN turned)
          (PP (IN from)
            (NP (PRP him)))))
      (VP (VBZ curtly)))
    (. .)))

mark(should-3, If-1)
nsubj(should-3, you-2)
csubj(find-4, should-3)
root(ROOT-0, find-4)
dobj(find-4, it-5)
nsubj(take-11, I-9)
aux(take-11, will-10)
ccomp(answered-17, take-11)
dobj(take-11, care-12)
prep_of(care-12, it-14)
dep(find-4, answered-17)
nsubj(answered-17, Meg-18)
csubj(curtly-24, turned-21)
prep_from(turned-21, him-23)
conj_and(find-4, curtly-24)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD felt)
      (SBAR
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had)
              (NP
                (NP (RB not) (DT a) (NN friend))
                (PP (IN in)
                  (NP (DT the) (NN house)))))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD must)
              (VP (VB leave)
                (NP (NNS things))
                (SBAR (IN as)
                  (S
                    (NP (PRP they))
                    (VP (VBD were))))))))))
    (. !)))

nsubj(felt-2, George-1)
root(ROOT-0, felt-2)
nsubj(had-4, he-3)
ccomp(felt-2, had-4)
neg(friend-7, not-5)
det(friend-7, a-6)
dobj(had-4, friend-7)
det(house-10, the-9)
prep_in(friend-7, house-10)
mark(leave-16, that-13)
nsubj(leave-16, he-14)
aux(leave-16, must-15)
ccomp(felt-2, leave-16)
conj_and(had-4, leave-16)
dobj(leave-16, things-17)
mark(were-20, as-18)
nsubj(were-20, they-19)
advcl(leave-16, were-20)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN door))
        (PP (IN of)
          (NP (DT the) (NN closet))))
      (VP (VBD was)
        (VP (VBN locked))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP (VB go)
          (ADVP (RB again))
          (PP (TO to)
            (NP (DT the) (NN death-chamber)))
          (S
            (VP (TO to)
              (VP (VB take)
                (NP
                  (NP (DT the) (NN laird) (POS 's))
                  (NNS keys))
                (PP (IN from)
                  (NP
                    (NP (DT the) (NN head))
                    (PP (IN of)
                      (NP (DT the) (NN bed)))))))))))
    (. !)))

det(door-2, The-1)
nsubjpass(locked-7, door-2)
det(closet-5, the-4)
prep_of(door-2, closet-5)
auxpass(locked-7, was-6)
root(ROOT-0, locked-7)
nsubj(go-13, he-10)
nsubj(take-19, he-10)
aux(go-13, could-11)
neg(go-13, not-12)
conj_and(locked-7, go-13)
advmod(go-13, again-14)
det(death-chamber-17, the-16)
prep_to(go-13, death-chamber-17)
aux(take-19, to-18)
xcomp(go-13, take-19)
det(laird-21, the-20)
poss(keys-23, laird-21)
dobj(take-19, keys-23)
det(head-26, the-25)
prep_from(take-19, head-26)
det(bed-29, the-28)
prep_of(head-26, bed-29)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD knew)
      (SBAR (IN that)
        (S
          (NP (DT the) (CD two) (NNS women))
          (VP (MD would) (RB not)
            (VP (VB let)
              (NP (PRP him)))))))
    (. .)))

nsubj(knew-2, He-1)
root(ROOT-0, knew-2)
mark(let-9, that-3)
det(women-6, the-4)
num(women-6, two-5)
nsubj(let-9, women-6)
aux(let-9, would-7)
neg(let-9, not-8)
ccomp(knew-2, let-9)
dobj(let-9, him-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD had)
      (VP (VBN been)
        (NP (DT an) (NN oversight)
          (S (RB not)
            (VP (TO to)
              (VP (VB secure)
                (NP (PRP them))))))))
    (. !)))

nsubj(oversight-5, It-1)
aux(oversight-5, had-2)
cop(oversight-5, been-3)
det(oversight-5, an-4)
root(ROOT-0, oversight-5)
neg(secure-8, not-6)
aux(secure-8, to-7)
vmod(oversight-5, secure-8)
dobj(secure-8, them-9)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD was)
        (ADJP (JJ glad)
          (SBAR
            (S
              (NP (DT the) (NN watch))
              (VP (VBD was)
                (ADJP (JJ safe)))))))
      (: :)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN put)
              (PP (IN in)
                (NP (DT the) (NN closet)))
              (ADVP (RB before)))))))
    (. !)))

nsubj(glad-3, He-1)
cop(glad-3, was-2)
root(ROOT-0, glad-3)
det(watch-5, the-4)
nsubj(safe-7, watch-5)
cop(safe-7, was-6)
ccomp(glad-3, safe-7)
mark(put-12, that-9)
nsubj(put-12, he-10)
aux(put-12, had-11)
ccomp(glad-3, put-12)
parataxis(glad-3, put-12)
det(closet-15, the-14)
prep_in(put-12, closet-15)
advmod(put-12, before-16)

(ROOT
  (S (: --)
    (CC but)
    (NP (PRP it))
    (VP (VBD mattered)
      (ADVP (RB little))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN cup))
          (VP (VBD was)
            (ADJP (VBG missing))))))
    (. !)))

conj_but(mattered-4, it-3)
nsubj(mattered-4, it-3)
root(ROOT-0, mattered-4)
advmod(mattered-4, little-5)
advmod(missing-10, when-6)
det(cup-8, the-7)
nsubj(missing-10, cup-8)
cop(missing-10, was-9)
advcl(mattered-4, missing-10)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD went)
        (PP (TO to)
          (NP (DT the) (NN stable))))
      (, ,)
      (VP (VBD got)
        (PRT (RP out))
        (NP (PRP$ his) (NN horse)))
      (, ,)
      (CC and)
      (VP (VBD rode)
        (NP (NN home))
        (PP (IN in)
          (NP
            (NP (DT the)
              (ADJP (RB still) (JJ gray)))
            (PP (IN of)
              (NP (DT a) (NN midsummer) (NN night)))))))
    (. .)))

nsubj(went-2, He-1)
nsubj(got-7, He-1)
nsubj(rode-13, He-1)
root(ROOT-0, went-2)
det(stable-5, the-4)
prep_to(went-2, stable-5)
conj_and(went-2, got-7)
prt(got-7, out-8)
poss(horse-10, his-9)
dobj(got-7, horse-10)
conj_and(went-2, rode-13)
dobj(rode-13, home-14)
det(gray-18, the-16)
advmod(gray-18, still-17)
prep_in(rode-13, gray-18)
det(night-22, a-20)
nn(night-22, midsummer-21)
prep_of(gray-18, night-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS stillness))
      (CC and)
      (NP (DT the) (NN night)))
    (VP (VBD seemed)
      (S
        (VP (VBG thinking)
          (PP (TO to)
            (NP (DT each) (JJ other))))))
    (. .)))

det(stillness-2, The-1)
nsubj(seemed-6, stillness-2)
det(night-5, the-4)
conj_and(stillness-2, night-5)
nsubj(seemed-6, night-5)
root(ROOT-0, seemed-6)
xcomp(seemed-6, thinking-7)
det(other-10, each-9)
prep_to(thinking-7, other-10)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP (VBD had)
        (NP (JJ little) (NN imagination))))
    (, ,)
    (CC but)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (VBD had))))
      (VP (VBD woke)
        (PP (IN in)
          (NP (PRP him)))
        (ADVP (RB now))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD rode)
              (ADVP (RB slowly) (RB along)))))))
    (. .)))

nsubj(had-2, George-1)
root(ROOT-0, had-2)
amod(imagination-4, little-3)
dobj(had-2, imagination-4)
dobj(had-9, what-7)
nsubj(had-9, he-8)
csubj(woke-10, had-9)
conj_but(had-2, woke-10)
prep_in(woke-10, him-12)
advmod(woke-10, now-13)
mark(rode-16, as-14)
nsubj(rode-16, he-15)
advcl(woke-10, rode-16)
advmod(along-18, slowly-17)
advmod(rode-16, along-18)

(ROOT
  (S
    (S
      (VP (VB Step)
        (PP (IN by)
          (NP (NN step)))))
    (NP (DT the) (JJ old) (NN man))
    (VP (VBD seemed)
      (S
        (VP (VBG following)
          (NP (PRP him))))
      (, ,)
      (PP (IN on)
        (NP (JJ silent) (JJ church-yard) (NNS feet)))
      (, ,)
      (PP (IN through)
        (NP
          (NP (DT the) (JJ eerie) (NNS whiteness))
          (PP (IN of)
            (NP (DT the) (NN night))))))
    (. .)))

dep(seemed-7, Step-1)
prep_by(Step-1, step-3)
det(man-6, the-4)
amod(man-6, old-5)
nsubj(seemed-7, man-6)
root(ROOT-0, seemed-7)
xcomp(seemed-7, following-8)
dobj(following-8, him-9)
amod(feet-14, silent-12)
amod(feet-14, church-yard-13)
prep_on(seemed-7, feet-14)
det(whiteness-19, the-17)
amod(whiteness-19, eerie-18)
prep_through(seemed-7, whiteness-19)
det(night-22, the-21)
prep_of(whiteness-19, night-22)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP (DT neither) (NN cloud)
        (CC nor)
        (NN moon))
      (, ,)
      (ADVP (RB only))
      (NP
        (NP (NNS stars))
        (PP (IN above)
          (NP
            (NP
              (QP (CC and)
                (RB around)))
            (, ,)
            (CC and)
            (NP
              (NP (DT a) (JJ great) (JJ cold) (NN crack))
              (PP (IN in)
                (NP (DT the) (NN north-east))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
preconj(cloud-4, neither-3)
nsubj(was-2, cloud-4)
nsubj(was-2, moon-6)
conj_nor(cloud-4, moon-6)
advmod(stars-9, only-8)
nsubj(was-2, stars-9)
prep(stars-9, above-10)
pobj(above-10, around-12)
det(crack-18, a-15)
amod(crack-18, great-16)
amod(crack-18, cold-17)
pobj(above-10, crack-18)
conj_and(around-12, crack-18)
det(north-east-21, the-20)
prep_in(crack-18, north-east-21)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (VP (VBG crying)
        (SBAR (IN after)
          (S
            (NP (PRP him))
            (, ,)
            (PP (IN in)
              (NP (DT a) (NN voice)))
            (NP (PRP he))
            (VP (MD could) (RB not)
              (VP (VB make)
                (S
                  (NP (PRP him))
                  (VP (VB hear)))))))))
    (. !)))

nsubj(crying-3, He-1)
aux(crying-3, was-2)
root(ROOT-0, crying-3)
mark(make-13, after-4)
nsubj(make-13, him-5)
det(voice-9, a-8)
prep_in(make-13, voice-9)
nsubj(make-13, he-10)
aux(make-13, could-11)
neg(make-13, not-12)
advcl(crying-3, make-13)
nsubj(hear-15, him-14)
ccomp(make-13, hear-15)

(ROOT
  (SQ (VBD Was)
    (NP (PRP he))
    (SBAR (RB not)
      (S
        (VP (VBG straggling)
          (S
            (VP (TO to)
              (VP (VB warn)
                (S
                  (NP (PRP him))
                  (RB not)
                  (VP (TO to)
                    (VP (VB come)
                      (PP (IN into)
                        (NP (JJ like) (NN condemnation))))))))))))
    (. ?)))

root(ROOT-0, Was-1)
nsubj(Was-1, he-2)
dep(straggling-4, not-3)
dep(Was-1, straggling-4)
aux(warn-6, to-5)
xcomp(straggling-4, warn-6)
dobj(warn-6, him-7)
nsubj(come-10, him-7)
neg(come-10, not-8)
aux(come-10, to-9)
xcomp(warn-6, come-10)
amod(condemnation-13, like-12)
prep_into(come-10, condemnation-13)

(ROOT
  (S
    (NP (DT The) (NN voice))
    (VP (VBD seemed)
      (S
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB say) (, ,) (`` ``)
                (S
                  (NP (PRP I))
                  (VP (VB know)))))))))
    (. !)))

det(voice-2, The-1)
nsubj(seemed-3, voice-2)
root(ROOT-0, seemed-3)
xcomp(seemed-3, trying-4)
aux(say-6, to-5)
xcomp(trying-4, say-6)
nsubj(know-10, I-9)
ccomp(say-6, know-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (ADVP (RB now)))
    (. !)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
advmod(know-2, now-3)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD would) (RB not)
        (VP (VB believe))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (ADVP (RB now))))
    (. !)))

nsubj(believe-4, I-1)
aux(believe-4, would-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
nsubj(know-8, I-7)
conj_but(believe-4, know-8)
advmod(know-8, now-9)

(ROOT
  (S
    (VP (VB Give)
      (PRT (RP back))
      (NP
        (NP (DT the) (NN cup))
        (: ;)
        (VP (VB give)
          (NP (PRP it))
          (ADVP (RB back)))))
    (. !) ('' '')))

root(ROOT-0, Give-1)
prt(Give-1, back-2)
det(cup-4, the-3)
dobj(Give-1, cup-4)
dep(cup-4, give-6)
dobj(give-6, it-7)
advmod(give-6, back-8)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD did) (RB not)
      (VP (VB allow)
        (PP (TO to)
          (NP (PRP himself)))
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP
                (NP (`` ``) (NN anything) ('' ''))
                (ADVP (RB there))))))))
    (. .)))

nsubj(allow-4, George-1)
aux(allow-4, did-2)
neg(allow-4, not-3)
root(ROOT-0, allow-4)
prep_to(allow-4, himself-6)
mark(was-9, that-7)
expl(was-9, there-8)
ccomp(allow-4, was-9)
nsubj(was-9, anything-11)
advmod(anything-11, there-13)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (VBD was))
      (CC but)
      (VP
        (NP (DT a) (JJ vague) (NN movement))
        (PP (IN in)
          (NP
            (NP (DT that) (JJ commonplace) (, ,) (JJ unmysterious) (NN region))
            (, ,)
            (NP (PRP$ his) (NN mind))))))
    (. !)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
det(movement-6, a-4)
amod(movement-6, vague-5)
conj_but(was-2, movement-6)
det(region-12, that-8)
amod(region-12, commonplace-9)
amod(region-12, unmysterious-11)
prep_in(movement-6, region-12)
poss(mind-15, his-14)
appos(region-12, mind-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD heard)
        (NP
          (NP (NN nothing))
          (, ,)
          (ADVP (RB positively))
          (NP (NN nothing))
          (, ,))
        (PP (IN with)
          (NP (PRP$ his) (NNS ears)))))
    (: --)
    (S
      (ADVP (RB therefore))
      (NP (EX there))
      (VP (VBD was)
        (NP (NN nothing))))
    (. !)))

nsubj(heard-2, He-1)
root(ROOT-0, heard-2)
dobj(heard-2, nothing-3)
advmod(nothing-6, positively-5)
appos(nothing-3, nothing-6)
poss(ears-10, his-9)
prep_with(heard-2, ears-10)
advmod(was-14, therefore-12)
expl(was-14, there-13)
parataxis(heard-2, was-14)
nsubj(was-14, nothing-15)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADVP (RB indeed))
        (ADVP (RB somehow))
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP one))
            (VP (VBD were)
              (VP (VBG saying)
                (NP (DT the) (NNS words))))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (NN reality)))
      (NP (PRP they))
      (VP (VBD came)
        (ADVP (RB only))
        (PP (IN as)
          (NP
            (NP (DT a) (NN thought))
            (VP
              (VP (VBG rising))
              (, ,)
              (ADVP (RB continually))
              (VP (VBG rising) (, ,)
                (PP (IN in)
                  (NP (PRP$ his) (NN mind)))))))))
    (. !)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(was-2, indeed-3)
advmod(was-2, somehow-4)
advmod(saying-9, as-5)
mark(saying-9, if-6)
nsubj(saying-9, one-7)
aux(saying-9, were-8)
advcl(was-2, saying-9)
det(words-11, the-10)
dobj(saying-9, words-11)
prep_in(came-17, reality-15)
nsubj(came-17, they-16)
conj_but(was-2, came-17)
advmod(came-17, only-18)
det(thought-21, a-20)
prep_as(came-17, thought-21)
dep(thought-21, rising-22)
advmod(rising-25, continually-24)
dep(rising-22, rising-25)
poss(mind-29, his-28)
prep_in(rising-25, mind-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (UCP
        (PP (CC but)
          (NP (DT a) (NN thought-sound)))
        (, ,)
        (CC and)
        (NP (DT no) (NN speech)))
      (: :)
      (SBAR (`` ``)
        (S
          (NP (PRP I))
          (VP (VBP know)
            (ADVP (RB now))))))
    (. !)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
dep(was-2, but-3)
det(thought-sound-5, a-4)
pobj(but-3, thought-sound-5)
neg(speech-9, no-8)
dep(was-2, speech-9)
conj_and(but-3, speech-9)
nsubj(know-13, I-12)
ccomp(was-2, know-13)
parataxis(was-2, know-13)
advmod(know-13, now-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (ADVP (RB now)))
    (. !)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
advmod(know-2, now-3)

(ROOT
  (S
    (VP (VB Give)
      (NP (PRP it))
      (NP
        (NP (NN back))
        (: ;)
        (VP (VB give)
          (NP (DT the) (NN cup))
          (ADVP (RB back)))))
    (. !) ('' '')))

root(ROOT-0, Give-1)
iobj(Give-1, it-2)
dobj(Give-1, back-3)
dep(back-3, give-5)
det(cup-7, the-6)
dobj(give-5, cup-7)
advmod(give-5, back-8)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD did) (RB not)
        (VP (VB ask)
          (NP (PRP himself))
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT the) (NN thought))
              (VP (VBD came)))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD cast)
        (NP (PRP it))
        (PP (RB away) (IN as)
          (NP
            (NP (RB only) (DT that) (JJ insignificant) (NN thing))
            (, ,)
            (NP (DT a) (NN thought))))
        (PRN (: --)
          (S
            (VP (VB cast)
              (NP (PRP it))
              (PP (RB away)
                (NP
                  (NP (NN none))
                  (X (DT the) (JJR less))
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (VBD found)
                        (NP (PRP himself))
                        (S
                          (VP (VBG answering)
                            (NP (PRP it)))))))))))
          (: --))
        (`` ``)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD ca) (RB n't)
              (VP (VB give)
                (NP (PRP it))
                (ADVP (RB back))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB find)
          (NP (PRP it)))))
    (. !)))

nsubj(ask-4, He-1)
aux(ask-4, did-2)
neg(ask-4, not-3)
root(ROOT-0, ask-4)
dobj(ask-4, himself-5)
advmod(came-9, how-6)
det(thought-8, the-7)
nsubj(came-9, thought-8)
dep(ask-4, came-9)
nsubj(cast-12, he-11)
parataxis(ask-4, cast-12)
dobj(cast-12, it-13)
advmod(cast-12, away-14)
advmod(thing-19, only-16)
det(thing-19, that-17)
amod(thing-19, insignificant-18)
prep_as(cast-12, thing-19)
det(thought-22, a-21)
appos(thing-19, thought-22)
parataxis(cast-12, cast-24)
dobj(cast-24, it-25)
prep(cast-24, away-26)
pobj(away-26, none-27)
det(less-29, the-28)
dep(none-27, less-29)
mark(found-32, that-30)
nsubj(found-32, he-31)
dep(none-27, found-32)
dobj(found-32, himself-33)
xcomp(found-32, answering-34)
dobj(answering-34, it-35)
nsubj(give-41, I-38)
aux(give-41, ca-39)
neg(give-41, n't-40)
dep(cast-12, give-41)
dobj(give-41, it-42)
advmod(give-41, back-43)
nsubj(find-48, I-45)
aux(find-48, ca-46)
neg(find-48, n't-47)
parataxis(ask-4, find-48)
dobj(find-48, it-49)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB put)
        (NP (PRP it))))
    (. ?)))

advmod(put-4, Where-1)
aux(put-4, did-2)
nsubj(put-4, you-3)
root(ROOT-0, put-4)
dobj(put-4, it-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must)
      (VP (VB have)
        (VP (VBN taken)
          (NP (PRP it))
          (PP (IN with)
            (NP (PRP you))))))
    (. !) ('' '')))

nsubj(taken-4, You-1)
aux(taken-4, must-2)
aux(taken-4, have-3)
root(ROOT-0, taken-4)
dobj(taken-4, it-5)
prep_with(taken-4, you-7)

(ROOT
  (S (`` ``)
    (NP (WP What))
    (VP (VBZ rubbish))
    (. !) ('' '')))

nsubj(rubbish-3, What-2)
root(ROOT-0, rubbish-3)

(ROOT
  (S
    (S
      (NP (PRP he))
      (VP (VBD said)
        (PP (TO to)
          (NP (PRP himself)))
        (NP (CD ten) (NNS times))
        (, ,)
        (S
          (VP (VBG waking)
            (PRT (RP up))))))
    (: ;) (`` ``)
    (S
      (PP (IN of)
        (NP (NN course)))
      (NP (NNP Dawtie))
      (VP (VBD took)
        (NP (PRP it))))
    (. !)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
prep_to(said-2, himself-4)
num(times-6, ten-5)
dobj(said-2, times-6)
vmod(said-2, waking-8)
prt(waking-8, up-9)
prep_of(took-15, course-13)
nsubj(took-15, Dawtie-14)
parataxis(said-2, took-15)
dobj(took-15, it-16)

(ROOT
  (SQ (MD Did) (RB n't)
    (NP (DT the) (JJ poor) (JJ old) (NN fellow))
    (VP (VB warn)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB beware)
            (PP (IN of)
              (NP (PRP her)))))))
    (. !)))

aux(warn-7, Did-1)
neg(warn-7, n't-2)
det(fellow-6, the-3)
amod(fellow-6, poor-4)
amod(fellow-6, old-5)
nsubj(warn-7, fellow-6)
root(ROOT-0, warn-7)
dobj(warn-7, me-8)
nsubj(beware-10, me-8)
aux(beware-10, to-9)
xcomp(warn-7, beware-10)
prep_of(beware-10, her-12)

(ROOT
  (S
    (NP
      (NP (NN Nobody))
      (PP (CC but)
        (NP (PRP her))))
    (VP (VBD was)
      (PP (IN in)
        (NP (DT the) (NN room)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP
            (VP (VBD ran)
              (PRT (RP in)))
            (, ,)
            (CC and)
            (VP (VBD found)
              (NP (PRP him))
              (PP (IN at)
                (NP
                  (NP (DT the) (NN point))
                  (PP (IN of)
                    (NP (NN death))))))))))
    (. !)))

nsubj(was-4, Nobody-1)
prep(Nobody-1, but-2)
pobj(but-2, her-3)
root(ROOT-0, was-4)
det(room-7, the-6)
prep_in(was-4, room-7)
advmod(ran-10, when-8)
nsubj(ran-10, we-9)
nsubj(found-14, we-9)
advcl(was-4, ran-10)
prt(ran-10, in-11)
advcl(was-4, found-14)
conj_and(ran-10, found-14)
dobj(found-14, him-15)
det(point-18, the-17)
prep_at(found-14, point-18)
prep_of(point-18, death-20)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB put)
        (NP (PRP it))))
    (. ?)))

advmod(put-4, Where-1)
aux(put-4, did-2)
nsubj(put-4, you-3)
root(ROOT-0, put-4)
dobj(put-4, it-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB find)
        (NP (PRP it))))
    (. !)))

nsubj(find-4, I-1)
aux(find-4, ca-2)
neg(find-4, n't-3)
root(ROOT-0, find-4)
dobj(find-4, it-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB give)
        (NP (PRP it))
        (ADVP (RB back))))
    (. !) ('' '')))

nsubj(give-4, I-1)
aux(give-4, ca-2)
neg(give-4, n't-3)
root(ROOT-0, give-4)
dobj(give-4, it-5)
advmod(give-4, back-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD went)
      (PP (IN over)
        (PP (IN in)
          (NP (PRP$ his) (NN mind))))
      (NP
        (NP (DT all))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD had)
              (VP (VBN taken)
                (NP (NN place))))))))
    (. .)))

nsubj(went-2, He-1)
root(ROOT-0, went-2)
prep(went-2, over-3)
pcomp(over-3, in-4)
poss(mind-6, his-5)
pobj(in-4, mind-6)
dobj(went-2, all-7)
nsubj(taken-10, all-7)
aux(taken-10, had-9)
rcmod(all-7, taken-10)
dobj(taken-10, place-11)

(ROOT
  (S
    (S
      (NP (DT The) (NN laird))
      (VP (VBD had)
        (NP
          (NP (DT the) (NN cup))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBD left)
                (S
                  (NP (PRP him))
                  (VP (TO to)
                    (VP (VB call)
                      (NP (NNP Dawtie)))))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBD came))))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)
        (ADVP (RB nowhere))))
    (. !)))

det(laird-2, The-1)
nsubj(had-3, laird-2)
root(ROOT-0, had-3)
det(cup-5, the-4)
dobj(had-3, cup-5)
tmod(left-8, cup-5)
advmod(left-8, when-6)
nsubj(left-8, he-7)
rcmod(cup-5, left-8)
dobj(left-8, him-9)
nsubj(call-11, him-9)
aux(call-11, to-10)
xcomp(left-8, call-11)
dobj(call-11, Dawtie-12)
advmod(came-17, when-15)
nsubj(came-17, they-16)
advcl(was-20, came-17)
nsubj(was-20, it-19)
conj_and(had-3, was-20)
advmod(was-20, nowhere-21)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (VBN convinced)
        (SBAR
          (S
            (NP (DT the) (NN girl))
            (VP (VBD had)
              (VP (VBN secured)
                (S
                  (NP (PRP it))
                  (PRN (: --)
                    (PP (IN in)))
                  (VP
                    (VP (VB obedience) (, ,)
                      (ADVP (RB doubtless))
                      (, ,)
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN instruction))
                          (PP (IN of)
                            (NP (PRP$ her) (NN director)))))
                      (, ,)
                      (ADJP (JJ ambitious)
                        (S
                          (VP (TO to)
                            (VP (VB do)
                              (NP (NN justice))))))
                      (, ,))
                    (CC and)
                    (VP (VB curry)
                      (NP (NN favor))
                      (PP (IN by)
                        (S
                          (VP (VBG restoring)
                            (NP (PRP it))))))))))))))
    (. !)))

nsubjpass(convinced-3, He-1)
auxpass(convinced-3, was-2)
root(ROOT-0, convinced-3)
det(girl-5, the-4)
nsubj(secured-7, girl-5)
aux(secured-7, had-6)
ccomp(convinced-3, secured-7)
nsubj(obedience-11, it-8)
nsubj(curry-28, it-8)
dep(obedience-11, in-10)
ccomp(secured-7, obedience-11)
advmod(obedience-11, doubtless-13)
det(instruction-17, the-16)
prep_to(obedience-11, instruction-17)
poss(director-20, her-19)
prep_of(instruction-17, director-20)
acomp(obedience-11, ambitious-22)
aux(do-24, to-23)
xcomp(ambitious-22, do-24)
dobj(do-24, justice-25)
ccomp(secured-7, curry-28)
conj_and(obedience-11, curry-28)
dobj(curry-28, favor-29)
prepc_by(curry-28, restoring-31)
dobj(restoring-31, it-32)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (MD could)
      (VP (VB do)
        (NP (NN nothing))
        (SBAR (IN till)
          (S
            (NP (DT the) (NN will))
            (VP (VBD was)
              (VP (VBN read)))))))
    (. !)))

cc(do-4, But-1)
nsubj(do-4, he-2)
aux(do-4, could-3)
root(ROOT-0, do-4)
dobj(do-4, nothing-5)
mark(read-10, till-6)
det(will-8, the-7)
nsubjpass(read-10, will-8)
auxpass(read-10, was-9)
advcl(do-4, read-10)

(ROOT
  (S
    (S
      (VP (VBG Was)
        (S
          (NP (PRP it))
          (ADJP (JJ possible)))))
    (NP (NNP Lexy))
    (VP (VBD had)
      (VP (VBN put)
        (S
          (NP (PRP it))
          (ADVP (RB away)))))
    (. ?)))

dep(put-6, Was-1)
nsubj(possible-3, it-2)
xcomp(Was-1, possible-3)
nsubj(put-6, Lexy-4)
aux(put-6, had-5)
root(ROOT-0, put-6)
dep(put-6, it-7)
advmod(it-7, away-8)

(ROOT
  (S
    (FRAG
      (INTJ (UH No)))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD had) (RB not)
        (VP (VBN had)
          (NP (DT the) (NN opportunity)))))
    (. !)))

dep(had-6, No-1)
nsubj(had-6, she-3)
aux(had-6, had-4)
neg(had-6, not-5)
root(ROOT-0, had-6)
det(opportunity-8, the-7)
dobj(had-6, opportunity-8)

(ROOT
  (NP (NNP CHAPTER) (NNP XXX) (. .)))

nn(XXX-2, CHAPTER-1)
root(ROOT-0, XXX-2)

(ROOT
  (S
    (NP (NNP GEORGE)
      (CC AND)
      (NNP THE) (NNP GOLDEN))
    (VP (VBP GOBLET))
    (. .)))

nn(GOLDEN-4, GEORGE-1)
conj_and(GEORGE-1, THE-3)
nn(GOLDEN-4, THE-3)
nsubj(GOBLET-5, GOLDEN-4)
root(ROOT-0, GOBLET-5)

(ROOT
  (S
    (PP (IN With)
      (NP (JJ slow-pacing) (NNS shadows)))
    (, ,)
    (NP (DT the) (JJ hot) (NNS hours))
    (VP
      (VP (VBD crept)
        (NP
          (NP
            (NP (NN athwart))
            (NP (DT the) (NN heath)))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NN house))
            (, ,)
            (CC and)
            (NP (DT the) (NN dead)))))
      (, ,)
      (CC and)
      (VP (VBD carried)
        (NP (DT the) (NN living))
        (PP (IN with)
          (NP (PRP them)))
        (PP (IN in)
          (NP (PRP$ their) (JJ invisible) (NN current)))))
    (. .)))

amod(shadows-3, slow-pacing-2)
prep_with(crept-8, shadows-3)
det(hours-7, the-5)
amod(hours-7, hot-6)
nsubj(crept-8, hours-7)
nsubj(carried-22, hours-7)
root(ROOT-0, crept-8)
dobj(crept-8, athwart-9)
det(heath-11, the-10)
dep(athwart-9, heath-11)
det(house-15, the-14)
dobj(crept-8, house-15)
conj_and(athwart-9, house-15)
det(dead-19, the-18)
conj_and(athwart-9, dead-19)
conj_and(house-15, dead-19)
conj_and(crept-8, carried-22)
det(living-24, the-23)
dobj(carried-22, living-24)
prep_with(carried-22, them-26)
poss(current-30, their-28)
amod(current-30, invisible-29)
prep_in(carried-22, current-30)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN tide))
          (PP (IN in)
            (NP (NN time))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT a) (JJ steady) (NN current))))
    (, ,) (RB not)
    (S
      (VP (VBG returning)))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(tide-4, no-3)
nsubj(is-2, tide-4)
prep_in(tide-4, time-6)
nsubj(current-12, it-8)
cop(current-12, is-9)
det(current-12, a-10)
amod(current-12, steady-11)
parataxis(is-2, current-12)
neg(returning-15, not-14)
parataxis(is-2, returning-15)

(ROOT
  (S
    (VP (VB Happy)
      (NP (PRP they))
      (SBAR
        (WHNP (WP whom))
        (S
          (NP (PRP it))
          (VP (VBZ bears)
            (ADJP (JJ inward)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN center))
                  (PP (IN of)
                    (NP (NNS things))))))))))
    (. !)))

root(ROOT-0, Happy-1)
dobj(Happy-1, they-2)
dobj(bears-5, whom-3)
nsubj(bears-5, it-4)
dep(Happy-1, bears-5)
acomp(bears-5, inward-6)
det(center-9, the-8)
prep_to(inward-6, center-9)
prep_of(center-9, things-11)

(ROOT
  (S
    (NP
      (NP (NNS Alas))
      (, ,)
      (PP (IN for)
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WP whom))
            (S
              (NP (PRP it))
              (VP (VBZ carries)))))))
    (VP (VBD outward)
      (PP (TO to) (`` ``)
        (NP
          (NP (DT the) (VBG flaming) (NNS walls))
          (PP (IN of)
            (NP (NN creation))))))
    (. !) ('' '')))

nsubj(outward-8, Alas-1)
prep_for(Alas-1, those-4)
dobj(carries-7, those-4)
nsubj(carries-7, it-6)
rcmod(those-4, carries-7)
root(ROOT-0, outward-8)
det(walls-13, the-11)
amod(walls-13, flaming-12)
prep_to(outward-8, walls-13)
prep_of(walls-13, creation-15)

(ROOT
  (S
    (S
      (NP
        (NP (DT The)
          (ADJP (JJ poor) (JJ old))
          (NN laird))
        (SBAR
          (WHNP (WP who))
          (, ,)
          (PP (IN with)
            (NP (PDT all) (PRP$ his) (NN refinement)))
          (S
            (PRN (, ,)
              (S
                (NP
                  (NP (PDT all) (PRP$ his) (NN education))
                  (, ,)
                  (NP
                    (NP (PDT all) (PRP$ his) (NN interest))
                    (PP (IN in)
                      (NP
                        (NP (NN philology))
                        (, ,)
                        (NP (NN prosody))
                        (, ,)
                        (NP (NN history))
                        (, ,)
                        (CC and)
                        (NP (JJ _) (JJ reliquial) (NN _) (NN humanity)))))
                  (, ,))
                (VP (VBD had)
                  (VP (VBN become)
                    (NP
                      (NP (DT the) (NN slave))
                      (PP (IN of)
                        (NP (DT a) (NN goblet)))))))
              (, ,))
            (VP (VBD had)
              (VP (VBN left)
                (NP (PRP it))
                (PP (IN behind)
                  (NP (PRP him)))))))
        (, ,))
      (VP (VBD had)
        (VP
          (VP (VBN faced)
            (NP (DT the) (JJ empty) (NN universe) (NN empty-handed)))
          (, ,)
          (CC and)
          (VP (VBN vanished)
            (PP (IN with)
              (NP
                (NP (DT a) (NN shadow-goblet))
                (PP (IN in)
                  (NP (PRP$ his) (NN heart)))))))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NNS eyes))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD gloated)
              (PP (IN over)
                (NP (DT the) (NNS gems)))))))
      (VP (VBD had)
        (VP (VBN gone)
          (S
            (VP (TO to)
              (VP (VB help)
                (NP (DT the) (NN grass)
                  (S
                    (VP (TO to)
                      (VP (VB grow)))))))))))
    (. .)))

det(laird-4, The-1)
amod(old-3, poor-2)
amod(laird-4, old-3)
nsubj(left-41, laird-4)
nsubj(faced-47, laird-4)
nsubj(vanished-54, laird-4)
predet(refinement-10, all-8)
poss(refinement-10, his-9)
prep_with(left-41, refinement-10)
predet(education-14, all-12)
poss(education-14, his-13)
nsubj(become-33, education-14)
predet(interest-18, all-16)
poss(interest-18, his-17)
appos(education-14, interest-18)
prep_in(interest-18, philology-20)
prep_in(interest-18, prosody-22)
conj_and(philology-20, prosody-22)
prep_in(interest-18, history-24)
conj_and(philology-20, history-24)
amod(humanity-30, _-27)
amod(humanity-30, reliquial-28)
nn(humanity-30, _-29)
prep_in(interest-18, humanity-30)
conj_and(philology-20, humanity-30)
aux(become-33, had-32)
parataxis(left-41, become-33)
det(slave-35, the-34)
xcomp(become-33, slave-35)
det(goblet-38, a-37)
prep_of(slave-35, goblet-38)
aux(left-41, had-40)
rcmod(laird-4, left-41)
dobj(left-41, it-42)
prep_behind(left-41, him-44)
aux(faced-47, had-46)
root(ROOT-0, faced-47)
det(empty-handed-51, the-48)
amod(empty-handed-51, empty-49)
nn(empty-handed-51, universe-50)
dobj(faced-47, empty-handed-51)
conj_and(faced-47, vanished-54)
det(shadow-goblet-57, a-56)
prep_with(vanished-54, shadow-goblet-57)
poss(heart-60, his-59)
prep_in(shadow-goblet-57, heart-60)
det(eyes-63, the-62)
nsubj(gloated-65, eyes-63)
nsubj(gone-70, eyes-63)
nsubj(help-72, eyes-63)
rcmod(eyes-63, gloated-65)
det(gems-68, the-67)
prep_over(gloated-65, gems-68)
aux(gone-70, had-69)
parataxis(faced-47, gone-70)
aux(help-72, to-71)
xcomp(gone-70, help-72)
det(grass-74, the-73)
dobj(help-72, grass-74)
aux(grow-76, to-75)
vmod(grass-74, grow-76)

(ROOT
  (S
    (S (CC But)
      (NP
        (NP (DT the) (NN will))
        (PP (IN of)
          (NP (DT the) (NN dead))))
      (VP (VBD remained)
        (PP (TO to)
          (NP (NN trouble)))
        (PP (IN for)
          (NP
            (NP (DT a) (NN time))
            (NP (DT the) (NN living))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP it))
            (VP (VBD put)
              (NP (PRP$ his) (NN daughter))
              (PP (IN in)
                (NP (DT a) (JJ painful) (NN predicament))))))))
    (: :)
    (S
      (SBAR (IN until)
        (S
          (NP
            (NP (NNP Crawford) (POS 's))
            (NN property))
          (VP (VBD was)
            (VP (VBN removed)
              (PP (IN from)
                (NP (DT the) (NN house)))))))
      (, ,)
      (NP (PRP it))
      (VP (MD would)
        (VP (VB give)
          (NP (PRP him))
          (NP
            (NP (JJ constant) (NN opportunity))
            (PP (IN of)
              (S
                (VP (VBG prosecuting)
                  (NP
                    (NP
                      (NP (DT the) (NN suit))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (NNP Aleza))
                          (VP (VBD had)
                            (NP (NN reason)
                              (S
                                (VP (TO to)
                                  (VP (VB think)
                                    (NP (PRP he))))))))))
                    (VP (VBN intended)
                      (S
                        (VP (TO to)
                          (VP (VB resume)))))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (DT the) (NN thought))
                      (PP (IN of)
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBD had)
                              (VP (VBN become)
                                (PP (TO to)
                                  (NP (PRP$ her) (JJ insupportable)))))))))))))))))
    (. .)))

cc(remained-7, But-1)
det(will-3, the-2)
nsubj(remained-7, will-3)
det(dead-6, the-5)
prep_of(will-3, dead-6)
root(ROOT-0, remained-7)
prep_to(remained-7, trouble-9)
det(time-12, a-11)
prep_for(remained-7, time-12)
det(living-14, the-13)
dep(time-12, living-14)
mark(put-18, for-16)
nsubj(put-18, it-17)
advcl(remained-7, put-18)
poss(daughter-20, his-19)
dobj(put-18, daughter-20)
det(predicament-24, a-22)
amod(predicament-24, painful-23)
prep_in(put-18, predicament-24)
mark(removed-31, until-26)
poss(property-29, Crawford-27)
nsubjpass(removed-31, property-29)
auxpass(removed-31, was-30)
advcl(give-38, removed-31)
det(house-34, the-33)
prep_from(removed-31, house-34)
nsubj(give-38, it-36)
aux(give-38, would-37)
parataxis(remained-7, give-38)
iobj(give-38, him-39)
amod(opportunity-41, constant-40)
dobj(give-38, opportunity-41)
prepc_of(opportunity-41, prosecuting-43)
det(suit-45, the-44)
dobj(prosecuting-43, suit-45)
dobj(had-48, suit-45)
nsubj(had-48, Aleza-47)
rcmod(suit-45, had-48)
dobj(had-48, reason-49)
aux(think-51, to-50)
vmod(reason-49, think-51)
dobj(think-51, he-52)
vmod(suit-45, intended-53)
aux(resume-55, to-54)
xcomp(intended-53, resume-55)
det(thought-59, the-58)
dobj(prosecuting-43, thought-59)
conj_and(suit-45, thought-59)
dobj(had-48, thought-59)
nsubj(become-63, which-61)
aux(become-63, had-62)
prepc_of(thought-59, become-63)
poss(insupportable-66, her-65)
prep_to(become-63, insupportable-66)

(ROOT
  (S
    (NP (NNP Great))
    (VP (VBD was)
      (NP (PRP$ her) (NN astonishment))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP she))
          (VP (VBD learned)
            (SBAR
              (SBAR
                (WHPP (TO to)
                  (WHNP (WP what)))
                (S
                  (NP
                    (NP (DT the) (NN door))
                    (PP (IN in)
                      (NP (DT the) (NN study))))
                  (VP (VBD led))))
              (, ,)
              (CC and)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP
                    (NP (DT a) (NN multitude))
                    (PP (IN of)
                      (NP (JJ curious)
                        (CC and)
                        (JJ valuable) (NNS things))))
                  (VP (VBD were)
                    (NP
                      (NP (RB there))
                      (PP (IN of)
                        (SBAR
                          (WHNP
                            (NP (WP$ whose) (NN presence))
                            (PP (IN in)
                              (NP (DT the) (NN house))))
                          (S
                            (NP (PRP she))
                            (VP (VBD had)
                              (ADVP (RB never))
                              (VP (VBN dreamed)))))))))))))))
    (. .)))

nsubj(astonishment-4, Great-1)
cop(astonishment-4, was-2)
poss(astonishment-4, her-3)
root(ROOT-0, astonishment-4)
advmod(learned-7, when-5)
nsubj(learned-7, she-6)
advcl(astonishment-4, learned-7)
prep_to(led-15, what-9)
det(door-11, the-10)
nsubj(led-15, door-11)
det(study-14, the-13)
prep_in(door-11, study-14)
dep(learned-7, led-15)
dobj(there-27, what-18)
det(multitude-20, a-19)
nsubj(there-27, multitude-20)
amod(things-25, curious-22)
conj_and(curious-22, valuable-24)
amod(things-25, valuable-24)
prep_of(multitude-20, things-25)
cop(there-27, were-26)
dep(learned-7, there-27)
conj_and(led-15, there-27)
poss(presence-30, whose-29)
dobj(dreamed-37, presence-30)
det(house-33, the-32)
prep_in(presence-30, house-33)
nsubj(dreamed-37, she-34)
aux(dreamed-37, had-35)
neg(dreamed-37, never-36)
prepc_of(there-27, dreamed-37)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (MD would)
        (ADVP (RB gladly))
        (VP (VB have)
          (VP (VBN had)
            (NP (PRP them))
            (PP (IN for)
              (NP (PRP herself)))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ pained)
        (NP (PRP her))
        (PP (TO to)
          (NP
            (NP (DT the) (NN heart)
              (S
                (VP (TO to)
                  (VP (VB think)
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN disappointment))
                        (PP (IN of)
                          (NP (DT the) (JJ poor) (NN ghost)))))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP he))
                        (VP (VBD saw))))
                    (, ,)
                    (SBAR (IN if)
                      (S
                        (NP (PRP he))
                        (VP (MD could)
                          (VP (VB see)))))))))
            (, ,)
            (NP
              (NP (PRP$ his) (JJ treasured) (NN hoard))
              (VP (VBN emptied)
                (PRT (RP out))
                (PP (IN of)
                  (NP (PRP$ its) (JJ hidden)))))
            (CC and)
            (NP (JJ safe) (NN abode))))))
    (. .)))

nsubj(had-5, She-1)
aux(had-5, would-2)
advmod(had-5, gladly-3)
aux(had-5, have-4)
root(ROOT-0, had-5)
dobj(had-5, them-6)
prep_for(had-5, herself-8)
nsubj(pained-12, it-11)
conj_and(had-5, pained-12)
dobj(pained-12, her-13)
det(heart-16, the-15)
prep_to(pained-12, heart-16)
aux(think-18, to-17)
vmod(heart-16, think-18)
det(disappointment-21, the-20)
prep_of(think-18, disappointment-21)
det(ghost-25, the-23)
amod(ghost-25, poor-24)
prep_of(disappointment-21, ghost-25)
advmod(saw-28, when-26)
nsubj(saw-28, he-27)
advcl(think-18, saw-28)
mark(see-33, if-30)
nsubj(see-33, he-31)
aux(see-33, could-32)
advcl(think-18, see-33)
poss(hoard-37, his-35)
amod(hoard-37, treasured-36)
prep_to(pained-12, hoard-37)
conj_and(heart-16, hoard-37)
vmod(hoard-37, emptied-38)
poss(hidden-42, its-41)
prep_out_of(emptied-38, hidden-42)
amod(abode-45, safe-44)
prep_to(pained-12, abode-45)
conj_and(heart-16, abode-45)

(ROOT
  (S (IN For) (, ,)
    (SBAR (RB even) (IN if)
      (S
        (NP (NNP George))
        (VP (MD should)
          (ADVP (RB magnanimously))
          (VP (VB protest)
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (VBD did) (RB not)
                  (VP (VB care)
                    (PP (IN for)
                      (NP (DT the) (NNS things) (RB enough)))
                    (S
                      (VP (TO to)
                        (VP
                          (VP (VB claim)
                            (NP (PRP them)))
                          (, ,)
                          (CC and)
                          (VP (VB beg)
                            (SBAR (IN that)
                              (S
                                (NP (PRP they))
                                (VP (MD might)
                                  (VP (VB remain)
                                    (SBAR
                                      (WHADVP (WRB where))
                                      (S
                                        (NP (PRP they))
                                        (VP (VBD were))))))))))))))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD could) (RB not)
      (VP (VB grant)
        (NP (PRP$ his) (NN request))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (S
                  (VP (TO to)
                    (VP (VB accept)
                      (NP (PRP them))
                      (PP (IN from)
                        (NP (PRP him))))))))))))
    (. .)))

dep(grant-35, For-1)
advmod(protest-8, even-3)
mark(protest-8, if-4)
nsubj(protest-8, George-5)
aux(protest-8, should-6)
advmod(protest-8, magnanimously-7)
advcl(grant-35, protest-8)
mark(care-13, that-9)
nsubj(care-13, he-10)
nsubj(claim-19, he-10)
nsubj(beg-23, he-10)
aux(care-13, did-11)
neg(care-13, not-12)
ccomp(protest-8, care-13)
det(things-16, the-15)
prep_for(care-13, things-16)
advmod(things-16, enough-17)
aux(claim-19, to-18)
xcomp(care-13, claim-19)
dobj(claim-19, them-20)
xcomp(care-13, beg-23)
conj_and(claim-19, beg-23)
mark(remain-27, that-24)
nsubj(remain-27, they-25)
aux(remain-27, might-26)
ccomp(beg-23, remain-27)
advmod(were-30, where-28)
nsubj(were-30, they-29)
advcl(remain-27, were-30)
nsubj(grant-35, she-32)
aux(grant-35, could-33)
neg(grant-35, not-34)
root(ROOT-0, grant-35)
poss(request-37, his-36)
dobj(grant-35, request-37)
mark(be-42, for-39)
nsubj(be-42, it-40)
nsubj(accept-44, it-40)
aux(be-42, would-41)
advcl(grant-35, be-42)
aux(accept-44, to-43)
xcomp(be-42, accept-44)
dobj(accept-44, them-45)
prep_from(accept-44, him-47)

(ROOT
  (S
    (SINV (VBD Had)
      (NP (PRP$ her) (NN father))
      (VP (VBN left)
        (NP (PRP them))
        (PP (TO to)
          (NP (PRP her)))))
    (, ,)
    (NP (PRP she))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN kept)
          (NP (PRP them))
          (ADVP
            (ADVP (RB as) (RB carefully))
            (SBAR (IN as)
              (S
                (SBAR (RB even)
                  (S
                    (NP (PRP he))
                    (VP (MD could))))
                (VP (VBP desire) (: --)
                  (PP (IN with)
                    (NP (DT this) (NN difference)))
                  (ADVP (RB only))
                  (, ,)
                  (SBAR (IN that)
                    (S
                      (NP (PRP she))
                      (VP (MD would) (RB not)
                        (VP (VB have)
                          (VP (VBD shut)
                            (NP (PRP them))
                            (PRT (RP up))
                            (PP (IN from)
                              (S
                                (VP (VBG giving)
                                  (NP (NN pleasure))
                                  (PP (TO to)
                                    (NP (NNS others))))))))))))))))))
    (. .)))

aux(left-4, Had-1)
poss(father-3, her-2)
nsubj(left-4, father-3)
dep(kept-12, left-4)
dobj(left-4, them-5)
prep_to(left-4, her-7)
nsubj(kept-12, she-9)
aux(kept-12, would-10)
aux(kept-12, have-11)
root(ROOT-0, kept-12)
dobj(kept-12, them-13)
advmod(carefully-15, as-14)
advmod(kept-12, carefully-15)
mark(desire-20, as-16)
advmod(could-19, even-17)
nsubj(could-19, he-18)
csubj(desire-20, could-19)
advcl(carefully-15, desire-20)
ccomp(carefully-15, desire-20)
det(difference-24, this-23)
prep_with(desire-20, difference-24)
advmod(desire-20, only-25)
mark(shut-32, that-27)
nsubj(shut-32, she-28)
aux(shut-32, would-29)
neg(shut-32, not-30)
aux(shut-32, have-31)
ccomp(desire-20, shut-32)
dobj(shut-32, them-33)
prt(shut-32, up-34)
prepc_from(shut-32, giving-36)
dobj(giving-36, pleasure-37)
prep_to(giving-36, others-39)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (VP (VBG growing)
          (S
            (VP (TO to)
              (VP (VB care)
                (NP (JJR more))
                (PP (IN about)
                  (NP (DT the) (NN truth)))))))))
    (: --)
    (S
      (S
        (ADVP (RB gradually))
        (VP (VBG coming)
          (S
            (VP (TO to)
              (VP (VB see)
                (SBAR (IN that)
                  (S
                    (NP (RB much) (PRP she))
                    (VP (VBD had)
                      (VP (VBN taken)
                        (PP (IN for)
                          (NP
                            (NP (DT a)
                              (ADJP (RBR more) (JJ liberal))
                              (NN creed))
                            (, ,)
                            (VP (VBD was)))))))))))))
      (CC but)
      (S
        (NP
          (NP (DT the) (JJ same) (NNS falsehoods))
          (PP (IN in)
            (NP
              (NP (JJR weaker) (NNS forms))
              (, ,)
              (RRC
                (ADJP (RBR less) (JJ repulsive))
                (ADVP (RB only)
                  (PP (TO to)
                    (NP (DT a) (NN mind))))))))
        (ADJP (JJ indifferent)
          (PP (TO to)
            (NP
              (NP (DT the) (JJ paramount) (NNS claims))
              (PP (IN of)
                (NP
                  (NP (NNP God))
                  (PP (IN on)
                    (NP (PRP$ His) (NN child))))))))))
    (. .)))

nsubj(growing-3, She-1)
nsubj(care-5, She-1)
aux(growing-3, was-2)
root(ROOT-0, growing-3)
aux(care-5, to-4)
xcomp(growing-3, care-5)
dobj(care-5, more-6)
det(truth-9, the-8)
prep_about(care-5, truth-9)
advmod(coming-12, gradually-11)
parataxis(growing-3, coming-12)
aux(see-14, to-13)
xcomp(coming-12, see-14)
mark(taken-19, that-15)
advmod(she-17, much-16)
nsubj(taken-19, she-17)
aux(taken-19, had-18)
ccomp(see-14, taken-19)
det(creed-24, a-21)
advmod(liberal-23, more-22)
amod(creed-24, liberal-23)
prep_for(taken-19, creed-24)
vmod(creed-24, was-26)
det(falsehoods-30, the-28)
amod(falsehoods-30, same-29)
dep(indifferent-41, falsehoods-30)
amod(forms-33, weaker-32)
prep_in(falsehoods-30, forms-33)
advmod(repulsive-36, less-35)
rcmod(forms-33, repulsive-36)
advmod(repulsive-36, only-37)
det(mind-40, a-39)
prep_to(only-37, mind-40)
parataxis(growing-3, indifferent-41)
conj_but(coming-12, indifferent-41)
det(claims-45, the-43)
amod(claims-45, paramount-44)
prep_to(indifferent-41, claims-45)
prep_of(claims-45, God-47)
poss(child-50, His-49)
prep_on(God-47, child-50)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD saw)
      (SBAR
        (S
          (NP
            (NP (NN something))
            (PP (IN of)
              (NP
                (NP (DT the) (NN falseness)
                  (CC and)
                  (NN folly))
                (PP (IN of)
                  (S
                    (VP (VBG attempting)
                      (S
                        (VP (TO to)
                          (VP
                            (VP (VB recommend)
                              (NP (NN religion)))
                            (CONJP (RB as) (RB not))
                            (VP
                              (ADJP
                                (ADJP (RB so) (JJ difficult))
                                (, ,)
                                (ADJP (RB so) (JJ exclusive))
                                (, ,)
                                (ADJP (RB so) (JJ full))
                                (PP (IN of)
                                  (NP (NN prohibition))))
                              (PP (IN as)
                                (NP (PRP$ our) (NNS ancestors)))))))))))))
          (VP (VBD believed)
            (NP (PRP it))))))
    (. .)))

nsubj(saw-2, She-1)
root(ROOT-0, saw-2)
nsubj(believed-29, something-3)
det(falseness-6, the-5)
prep_of(something-3, falseness-6)
prep_of(something-3, folly-8)
conj_and(falseness-6, folly-8)
prepc_of(falseness-6, attempting-10)
aux(recommend-12, to-11)
xcomp(attempting-10, recommend-12)
dobj(recommend-12, religion-13)
advmod(difficult-17, so-16)
xcomp(attempting-10, difficult-17)
conj_negcc(recommend-12, difficult-17)
advmod(exclusive-20, so-19)
dep(difficult-17, exclusive-20)
advmod(full-23, so-22)
dep(difficult-17, full-23)
prep_of(difficult-17, prohibition-25)
poss(ancestors-28, our-27)
prep_as(difficult-17, ancestors-28)
ccomp(saw-2, believed-29)
dobj(believed-29, it-30)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD saw)
        (NP (DT that))
        (, ,)
        (SBAR (IN although)
          (S
            (NP (NNP Andrew))
            (VP (MD might)
              (VP (VB regard)
                (NP (DT some) (NNS things))
                (ADVP (RB as) (RB freely))
                (PP (VBN given)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP (NNS others))
                      (VP (VBD thought)
                        (SBAR
                          (S
                            (NP (NNP God))
                            (VP (VBD forbade))))))))))))))
    (, ,)
    (CC yet)
    (S
      (NP (PRP he))
      (VP (VBD insisted)
        (PP (IN on)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD was)
                (ADJP
                  (ADJP (RB infinitely) (JJR higher))
                  (CC and)
                  (ADJP (JJR more)))))))
        (PP (IN than)
          (NP
            (NP
              (NP (DT the) (NN abandonment))
              (PP (IN of)
                (NP (NN everything) (NNS pleasant))))
            (: --)
            (NP (DT the) (NN abnegation))
            (, ,)
            (ADVP (RB namely))
            (, ,)
            (PP (IN of)
              (NP (DT the) (JJ very) (NN self)))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (NN reception))
              (PP (IN of)
                (NP (NNP God))))))
        (ADVP (RB instead))))
    (. .)))

nsubj(saw-2, She-1)
root(ROOT-0, saw-2)
dobj(saw-2, that-3)
mark(regard-8, although-5)
nsubj(regard-8, Andrew-6)
aux(regard-8, might-7)
advcl(saw-2, regard-8)
det(things-10, some-9)
dobj(regard-8, things-10)
advmod(freely-12, as-11)
advmod(regard-8, freely-12)
prep(regard-8, given-13)
dobj(thought-16, which-14)
nsubj(thought-16, others-15)
pcomp(given-13, thought-16)
nsubj(forbade-18, God-17)
ccomp(thought-16, forbade-18)
nsubj(insisted-22, he-21)
conj_yet(saw-2, insisted-22)
nsubj(higher-27, what-24)
nsubj(more-29, what-24)
cop(higher-27, was-25)
advmod(higher-27, infinitely-26)
prepc_on(insisted-22, higher-27)
prepc_on(insisted-22, more-29)
conj_and(higher-27, more-29)
det(abandonment-32, the-31)
prep_than(insisted-22, abandonment-32)
nn(pleasant-35, everything-34)
prep_of(abandonment-32, pleasant-35)
det(abnegation-38, the-37)
prep_than(insisted-22, abnegation-38)
conj_and(abandonment-32, abnegation-38)
prep_than(insisted-22, namely-40)
advmod(abandonment-32, namely-40)
conj_and(abandonment-32, namely-40)
prep_than(insisted-22, of-42)
conj_and(abandonment-32, of-42)
det(self-45, the-43)
amod(self-45, very-44)
prep_of(abandonment-32, self-45)
det(reception-49, the-48)
prep_than(insisted-22, reception-49)
conj_and(abandonment-32, reception-49)
prep_of(reception-49, God-51)
advmod(insisted-22, instead-52)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (NP
        (NP (NN hitherto))
        (VP (VBN been) (, ,)
          (PP (IN with)
            (NP (PDT all) (PRP$ her) (JJ supposed) (NN progress)))
          (, ,)
          (NP
            (NP (RB only) (DT a) (JJ recipient))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS traditions))
                (PP (IN of)
                  (NP (DT the) (NNS elders)))))))))
    (. !)))

nsubj(had-2, She-1)
root(ROOT-0, had-2)
dobj(had-2, hitherto-3)
cop(recipient-14, been-4)
predet(progress-10, all-7)
poss(progress-10, her-8)
amod(progress-10, supposed-9)
prep_with(recipient-14, progress-10)
advmod(recipient-14, only-12)
det(recipient-14, a-13)
vmod(hitherto-3, recipient-14)
det(traditions-17, the-16)
prep_of(recipient-14, traditions-17)
det(elders-20, the-19)
prep_of(traditions-17, elders-20)

(ROOT
  (S
    (NP (EX There))
    (VP (MD must)
      (VP (VB be)
        (NP
          (NP (DT a) (JJR deeper) (NN something))
          (: --)
          (NP (DT the) (JJ real) (NN religion)))))
    (. !)))

expl(something-6, There-1)
aux(something-6, must-2)
cop(something-6, be-3)
det(something-6, a-4)
amod(something-6, deeper-5)
root(ROOT-0, something-6)
det(religion-10, the-8)
amod(religion-10, real-9)
dep(something-6, religion-10)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD did) (RB not)
      (ADVP (RB yet))
      (VP (VB see)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN will))
              (PP (IN of)
                (NP (NNP God))))
            (VP (VBD lay)
              (PP (IN in)
                (NP (DT another) (NN direction)))
              (PP
                (ADVP (RB altogether))
                (IN than)
                (NP
                  (NP (DT the) (JJ heartiest) (NN reception))
                  (PP (IN of)
                    (NP (NN dogma))))))))))
    (. !)))

nsubj(see-5, She-1)
aux(see-5, did-2)
neg(see-5, not-3)
advmod(see-5, yet-4)
root(ROOT-0, see-5)
mark(lay-11, that-6)
det(will-8, the-7)
nsubj(lay-11, will-8)
prep_of(will-8, God-10)
ccomp(see-5, lay-11)
det(direction-14, another-13)
prep_in(lay-11, direction-14)
advmod(lay-11, altogether-15)
det(reception-19, the-17)
amod(reception-19, heartiest-18)
prep_than(lay-11, reception-19)
prep_of(reception-19, dogma-21)

(ROOT
  (S (: --)
    (NP (DT that) (NNP God))
    (VP
      (VP (VBD was)
        (ADJP
          (ADJP (RB too) (JJ great))
          (CC and)
          (ADJP (RB too) (JJ generous)
            (S
              (VP (TO to)
                (VP (VB care)
                  (PP (IN about)
                    (NP (NN anything))))))))
        (PP (IN except)
          (NP (NNS righteousness))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB only))
        (VBD wanted)
        (S
          (NP (PRP us))
          (VP (TO to)
            (VP (VB be)
              (NP (JJ good) (NNS children)))))))
    (. !)))

det(God-3, that-2)
nsubj(great-6, God-3)
nsubj(generous-9, God-3)
nsubj(care-11, God-3)
nsubj(wanted-19, God-3)
cop(great-6, was-4)
advmod(great-6, too-5)
root(ROOT-0, great-6)
advmod(generous-9, too-8)
conj_and(great-6, generous-9)
aux(care-11, to-10)
xcomp(generous-9, care-11)
prep_about(care-11, anything-13)
prep_except(great-6, righteousness-15)
advmod(wanted-19, only-18)
conj_and(great-6, wanted-19)
dobj(wanted-19, us-20)
nsubj(children-24, us-20)
aux(children-24, to-21)
cop(children-24, be-22)
amod(children-24, good-23)
xcomp(wanted-19, children-24)

(ROOT
  (S (: --)
    (SBAR (IN that)
      (S
        (NP (RB even) (NN honesty))
        (VP (VBD was)
          (PP (CC but)
            (NP
              (NP (DT the) (NN path))
              (PP (IN toward)
                (NP (NNS righteousness))))))))
    (, ,)
    (NP (DT a) (NN condition))
    (ADVP (RB so))
    (VP (VBZ pure)
      (NP
        (NP (DT that) (NN honesty))
        (SBAR
          (S
            (NP (PRP itself))
            (VP (MD would)
              (ADVP (RB never) (RBR more))
              (VP (VB be)
                (NP
                  (NP (DT an) (NN object))
                  (PP (IN of)
                    (NP (NN thought))))))))))
    (. !)))

mark(was-5, that-2)
advmod(honesty-4, even-3)
nsubj(was-5, honesty-4)
advcl(pure-15, was-5)
parataxis(pure-15, was-5)
prep(was-5, but-6)
det(path-8, the-7)
pobj(but-6, path-8)
prep_toward(path-8, righteousness-10)
det(condition-13, a-12)
nsubj(pure-15, condition-13)
advmod(pure-15, so-14)
root(ROOT-0, pure-15)
det(honesty-17, that-16)
dobj(pure-15, honesty-17)
nsubj(object-24, itself-18)
aux(object-24, would-19)
dep(more-21, never-20)
advmod(object-24, more-21)
cop(object-24, be-22)
det(object-24, an-23)
rcmod(honesty-17, object-24)
prep_of(object-24, thought-26)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD pondered)
        (ADVP (RB much))
        (PP (IN about)
          (NP (PRP$ her) (NN father))))
      (, ,)
      (CC and)
      (VP (MD would)
        (VP
          (VP (VB find)
            (S
              (NP (PRP herself))
              (VP (VBG praying)
                (PP (IN for)
                  (NP (PRP him))))))
          (, ,)
          (ADJP (JJ careless)
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP she))
                  (VP (VBD had)
                    (VP (VBN been)
                      (VP (VBN taught)))))))))))
    (. .)))

nsubj(pondered-2, She-1)
nsubj(find-10, She-1)
root(ROOT-0, pondered-2)
advmod(pondered-2, much-3)
poss(father-6, her-5)
prep_about(pondered-2, father-6)
aux(find-10, would-9)
conj_and(pondered-2, find-10)
nsubj(praying-12, herself-11)
dep(find-10, praying-12)
prep_for(praying-12, him-14)
acomp(find-10, careless-16)
dobj(taught-22, what-18)
nsubjpass(taught-22, she-19)
aux(taught-22, had-20)
auxpass(taught-22, been-21)
prepc_of(careless-16, taught-22)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD could) (RB not)
      (VP (VB blind)
        (NP (PRP herself))
        (PP (TO to)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP she))
              (VP (VBD knew)))))))
    (. .)))

nsubj(blind-4, She-1)
aux(blind-4, could-2)
neg(blind-4, not-3)
root(ROOT-0, blind-4)
dobj(blind-4, herself-5)
dobj(knew-9, what-7)
nsubj(knew-9, she-8)
prepc_to(blind-4, knew-9)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had) (RB not)
        (VP (VBN been)
          (NP
            (NP (DT a) (JJ bad) (NN man))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (NNS men))
                (VP (VBP count)
                  (NP (NNS badness)))))))))
    (, ,)
    (CC but)
    (SQ (MD could)
      (NP
        (NP (PRP she))
        (PP (IN in)
          (NP (JJ common) (NN sense))))
      (VP (VB think)
        (NP (PRP him))
        (NP
          (NP (DT a) (JJ glorified) (NN saint))
          (, ,)
          (NP
            (NP (VBG shining))
            (PP (IN in)
              (NP (JJ white) (NNS robes)))))))
    (. ?)))

nsubj(man-7, He-1)
aux(man-7, had-2)
neg(man-7, not-3)
cop(man-7, been-4)
det(man-7, a-5)
amod(man-7, bad-6)
root(ROOT-0, man-7)
mark(count-11, as-9)
nsubj(count-11, men-10)
dep(man-7, count-11)
dobj(count-11, badness-12)
aux(think-20, could-15)
nsubj(think-20, she-16)
amod(sense-19, common-18)
prep_in(she-16, sense-19)
conj_but(man-7, think-20)
iobj(think-20, him-21)
det(saint-24, a-22)
amod(saint-24, glorified-23)
dobj(think-20, saint-24)
appos(saint-24, shining-26)
amod(robes-29, white-28)
prep_in(shining-26, robes-29)

(ROOT
  (NP
    (NP (DT The) (JJ polite))
    (, ,)
    (NP (NN kind) (JJ old) (NN man))
    (. !)))

det(polite-2, The-1)
root(ROOT-0, polite-2)
nn(man-6, kind-4)
amod(man-6, old-5)
appos(polite-2, man-6)

(ROOT
  (FRAG
    (NP (PRP$ her) (JJ own) (NN father))
    (. !)))

poss(father-3, her-1)
amod(father-3, own-2)
root(ROOT-0, father-3)

(ROOT
  (FRAG (: --)
    (VP
      (VP (MD could))
      (SBAR
        (S
          (NP (PRP she))
          (, ,)
          (PP (IN on)
            (NP (DT the) (JJ other) (NN hand)))
          (, ,)
          (VP (VBP believe)
            (NP (PRP him))
            (PP (IN in)
              (NP (NNS flames)))
            (ADVP (RB forever))))))
    (. ?)))

root(ROOT-0, could-2)
nsubj(believe-10, she-3)
det(hand-8, the-6)
amod(hand-8, other-7)
prep_on(believe-10, hand-8)
ccomp(could-2, believe-10)
dobj(believe-10, him-11)
prep_in(believe-10, flames-13)
advmod(believe-10, forever-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (ADVP (RB so))
        (, ,)
        (X (WP what))
        (NP (DT a) (NN religion))
        (VP (VBD was)
          (ADJP (IN that)
            (WHNP (WDT which))))))
    (VP (VBD required)
      (S
        (NP (PRP her))
        (VP
          (VP (TO to)
            (VP (VB believe)
              (NP (PRP it))))
          (, ,)
          (CC and)
          (VP
            (PP (IN at)
              (NP (DT the) (JJ same) (NN time)))
            (PP (TO to)
              (NP
                (NP (NN rejoice))
                (PP (IN in)
                  (NP (DT the) (NNP Lord)))))
            (ADVP (RB always))))))
    (. !)))

mark(that-8, If-1)
advmod(that-8, so-2)
dep(that-8, what-4)
det(religion-6, a-5)
nsubj(that-8, religion-6)
cop(that-8, was-7)
csubj(required-10, that-8)
dep(that-8, which-9)
root(ROOT-0, required-10)
nsubj(believe-13, her-11)
aux(believe-13, to-12)
ccomp(required-10, believe-13)
dobj(believe-13, it-14)
ccomp(required-10, at-17)
conj_and(believe-13, at-17)
det(time-20, the-18)
amod(time-20, same-19)
pobj(at-17, time-20)
prep_to(at-17, rejoice-22)
det(Lord-25, the-24)
prep_in(rejoice-22, Lord-25)
advmod(at-17, always-26)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD longed)
      (PP (IN for)
        (NP
          (NP (NN something))
          (ADJP (JJ positive)
            (S
              (VP (TO to)
                (VP (VB believe) (, ,)
                  (NP (NN something))
                  (PP (IN into)
                    (NP
                      (NP (NN accordance))
                      (SBAR
                        (WHPP (IN with)
                          (WHNP (WDT which)))
                        (S
                          (NP (PRP she))
                          (VP (MD might)
                            (VP (VB work)
                              (NP (PRP$ her) (NNS feelings)))))))))))))))
    (. .)))

nsubj(longed-2, She-1)
root(ROOT-0, longed-2)
prep_for(longed-2, something-4)
amod(something-4, positive-5)
aux(believe-7, to-6)
xcomp(positive-5, believe-7)
dobj(believe-7, something-9)
prep_into(believe-7, accordance-11)
prep_with(work-16, accordance-11)
nsubj(work-16, she-14)
aux(work-16, might-15)
rcmod(accordance-11, work-16)
poss(feelings-18, her-17)
dobj(work-16, feelings-18)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADVP (RB still))
      (PP (IN on)
        (NP
          (NP (DT the) (NN outlook))
          (PP (IN for)
            (NP (JJ definite) (JJ intellectual) (NN formulae)))))
      (S
        (VP (TO to)
          (VP (VB hold)))))
    (. .)))

nsubj(was-2, She-1)
nsubj(hold-12, She-1)
root(ROOT-0, was-2)
advmod(was-2, still-3)
det(outlook-6, the-5)
prep_on(was-2, outlook-6)
amod(formulae-10, definite-8)
amod(formulae-10, intellectual-9)
prep_for(outlook-6, formulae-10)
aux(hold-12, to-11)
xcomp(was-2, hold-12)

(ROOT
  (S
    (NP
      (NP (PRP$ Her) (NN intercourse))
      (PP (IN with)
        (NP (NNP Andrew))))
    (VP (VBD had)
      (ADVP (RB as) (RB yet))
      (VP (VBN failed)
        (S
          (VP (TO to)
            (VP
              (VP (VB open)
                (NP (PRP$ her) (NNS eyes))
                (PP (TO to)
                  (NP (DT the) (NN fact)))
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT the) (NN faith))
                      (VP (VBN required)
                        (PP (IN of)
                          (NP (PRP us)))))
                    (VP (VBZ is)
                      (NP
                        (NP (NN faith))
                        (PP (IN in)
                          (NP (DT a) (NN person))))))))
              (, ,)
              (CC and)
              (VP (RB not)
                (PP
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN truest))
                      (PP (IN of)
                        (NP
                          (NP (NNS statements))
                          (VP (VBG concerning)
                            (NP (NN anything))
                            (, ,)
                            (S
                              (ADVP (RB even))
                              (VP (VBG concerning)
                                (NP (PRP him)))))))))
                  (: ;)
                  (CC or)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN fact))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP
                            (NP
                              (NP (NN faith))
                              (PP (IN in)
                                (NP (DT the) (NN living) (CD One))))
                            (, ,)
                            (NP
                              (NP (DT the) (JJ very) (NN essence))
                              (PP (IN of)
                                (NP (PRP it))))
                            (, ,))
                          (VP (VBZ consists)
                            (PP (IN in)
                              (NP (NN obedience)))
                            (PP (TO to)
                              (NP (PRP Him)))))))))))))))
    (. .)))

poss(intercourse-2, Her-1)
nsubj(failed-8, intercourse-2)
nsubj(open-10, intercourse-2)
prep_with(intercourse-2, Andrew-4)
aux(failed-8, had-5)
advmod(yet-7, as-6)
advmod(failed-8, yet-7)
root(ROOT-0, failed-8)
aux(open-10, to-9)
xcomp(failed-8, open-10)
poss(eyes-12, her-11)
dobj(open-10, eyes-12)
det(fact-15, the-14)
prep_to(open-10, fact-15)
mark(faith-23, that-16)
det(faith-18, the-17)
nsubj(faith-23, faith-18)
vmod(faith-18, required-19)
prep_of(required-19, us-21)
cop(faith-23, is-22)
ccomp(open-10, faith-23)
det(person-26, a-25)
prep_in(faith-23, person-26)
xcomp(failed-8, not-29)
conj_and(open-10, not-29)
conj_and(open-10, not-29')
conj_or(not-29, not-29')
det(truest-32, the-31)
prep_in(not-29, truest-32)
prep_of(truest-32, statements-34)
vmod(statements-34, concerning-35)
dobj(concerning-35, anything-36)
advmod(concerning-39, even-38)
vmod(concerning-35, concerning-39)
dobj(concerning-39, him-40)
det(fact-45, the-44)
prep_to(not-29', fact-45)
mark(consists-60, that-47)
nsubj(consists-60, faith-48)
det(living-51, the-50)
prep_in(faith-48, living-51)
num(living-51, One-52)
det(essence-56, the-54)
amod(essence-56, very-55)
appos(faith-48, essence-56)
prep_of(essence-56, it-58)
dep(fact-45, consists-60)
prep_in(consists-60, obedience-62)
prep_to(consists-60, Him-64)

(ROOT
  (S
    (S
      (NP (DT A) (NN man))
      (VP (MD can)
        (VP (VB obey)
          (SBAR
            (SBAR (IN before)
              (S
                (NP (PRP he))
                (VP (VBZ is)
                  (ADJP (JJ sure)))))
            (, ,)
            (CC and)
            (SBAR (IN except)
              (S
                (NP (PRP he))
                (VP (VBP obey)
                  (NP
                    (NP (DT the) (NN command))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBZ knows)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (ADJP (JJ right))
                                (, ,)
                                (SBAR
                                  (WHADVP (WRB wherever))
                                  (S
                                    (NP (PRP it))
                                    (VP (MD may)
                                      (VP (VB come)
                                        (PP (IN from))))))))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD will)
      (ADVP (RB never))
      (VP (VB be)
        (ADJP (JJ sure))))
    (. .)))

det(man-2, A-1)
nsubj(obey-4, man-2)
aux(obey-4, can-3)
ccomp(sure-32, obey-4)
mark(sure-8, before-5)
nsubj(sure-8, he-6)
cop(sure-8, is-7)
advcl(obey-4, sure-8)
mark(obey-13, except-11)
nsubj(obey-13, he-12)
advcl(obey-4, obey-13)
conj_and(sure-8, obey-13)
det(command-15, the-14)
dobj(obey-13, command-15)
nsubj(knows-17, he-16)
nsubj(right-20, he-16)
rcmod(command-15, knows-17)
aux(right-20, to-18)
cop(right-20, be-19)
xcomp(knows-17, right-20)
advmod(come-25, wherever-22)
nsubj(come-25, it-23)
aux(come-25, may-24)
advcl(right-20, come-25)
prep(come-25, from-26)
nsubj(sure-32, he-28)
aux(sure-32, will-29)
neg(sure-32, never-30)
cop(sure-32, be-31)
root(ROOT-0, sure-32)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB find)
          (NP (DT the) (NN truth)))))
    (, ,)
    (NP (NN man)
      (CC or)
      (NN woman))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ true))))
    (. .)))

aux(find-2, To-1)
advcl(true-11, find-2)
det(truth-4, the-3)
dobj(find-2, truth-4)
nsubj(true-11, man-6)
conj_or(man-6, woman-8)
nsubj(true-11, woman-8)
aux(true-11, must-9)
cop(true-11, be-10)
root(ROOT-0, true-11)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (ADVP (RB much))
    (VP (VBD desired)
      (NP (DT another) (NN talk))
      (PP (IN with)
        (NP (NNP Andrew))))
    (. .)))

cc(desired-4, But-1)
nsubj(desired-4, she-2)
advmod(desired-4, much-3)
root(ROOT-0, desired-4)
det(talk-6, another-5)
dobj(desired-4, talk-6)
prep_with(desired-4, Andrew-8)

(ROOT
  (S
    (S
      (VP (VBG Persuading)
        (NP (PRP himself))
        (SBAR (IN that)
          (S
            (NP
              (NP
                (NP (NNP Alexa) (POS 's))
                (JJ former) (NN feeling))
              (PP (IN toward)
                (NP (PRP him))))
            (VP (MD must)
              (PP (IN in)
                (NP (PRP$ her) (NN trouble)))
              (VP
                (VP (VB reassert)
                  (NP (PRP itself)))
                (, ,)
                (CC and)
                (VP
                  (ADJP (JJ confident))
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (MD would)
                        (VP (VB find)
                          (S
                            (NP (PRP her))
                            (ADJP (JJ loath)
                              (PP (TO to)
                                (NP
                                  (NP (NN part))
                                  (PP (IN with)
                                    (NP
                                      (NP (PRP$ her) (NN father) (POS 's))
                                      (JJ wonderful) (NN collection))))))))))))))))))
    (, ,)
    (NP (NNP George))
    (VP (VBD waited)
      (NP
        (NP (DT the) (NN effect))
        (PP (IN of)
          (NP (DT the) (NN will)))))
    (. .)))

vmod(waited-35, Persuading-1)
dobj(Persuading-1, himself-2)
mark(reassert-14, that-3)
poss(feeling-7, Alexa-4)
amod(feeling-7, former-6)
nsubj(reassert-14, feeling-7)
nsubj(confident-18, feeling-7)
prep_toward(feeling-7, him-9)
aux(reassert-14, must-10)
poss(trouble-13, her-12)
prep_in(reassert-14, trouble-13)
ccomp(Persuading-1, reassert-14)
dobj(reassert-14, itself-15)
ccomp(Persuading-1, confident-18)
conj_and(reassert-14, confident-18)
mark(find-22, that-19)
nsubj(find-22, he-20)
aux(find-22, would-21)
ccomp(confident-18, find-22)
nsubj(loath-24, her-23)
xcomp(find-22, loath-24)
prep_to(loath-24, part-26)
poss(father-29, her-28)
poss(collection-32, father-29)
amod(collection-32, wonderful-31)
prep_with(part-26, collection-32)
nsubj(waited-35, George-34)
root(ROOT-0, waited-35)
det(effect-37, the-36)
dobj(waited-35, effect-37)
det(will-40, the-39)
prep_of(effect-37, will-40)

(ROOT
  (S
    (S
      (S
        (PP (IN After)
          (NP
            (NP (DT the) (NN reading))
            (PP (IN of)
              (NP (PRP it)))))
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN gone)
            (PRT (RP away))
            (ADVP (RB directly))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (PRP$ his) (NN presence))
                (VP (MD might) (RB not)
                  (VP (VB add)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN irritation))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (NP (PRP he))
                            (VP (VBD concluded)))))))))))))
      (, ,) (RB not)
      (S
        (PP (IN without)
          (NP (NN reason)))
        (, ,)
        (NP (PRP it))
        (VP (MD must) (, ,)
          (PP (RB even) (IN in)
            (NP
              (NP (DT the) (NN midst))
              (PP (IN of)
                (NP (PRP$ her) (NN sorrow)))))
          (, ,)
          (VP (VB cause)
            (PP (IN in)
              (NP (PRP her)))))))
    (: ;)
    (CC but)
    (S
      (PP (IN at)
        (NP
          (NP (DT the) (NN end))
          (PP (IN of)
            (NP (DT a) (NN week)))))
      (NP (PRP he))
      (VP (VBD wrote) (, ,)
        (S
          (VP (VBG saying)
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (VBD felt)
                  (S
                    (NP (PRP it))
                    (NP (PRP$ his) (NN duty)))
                  (, ,)
                  (FRAG (IN if)
                    (ADVP (RB only)
                      (PP (IN in)
                        (NP (NN gratitude))
                        (PP (TO to)
                          (NP (PRP$ his) (NN friend))))))
                  (, ,)
                  (S
                    (VP (TO to)
                      (VP (VB inform)
                        (NP (PRP himself))
                        (PP (IN as)
                          (PP (TO to)
                            (NP (DT the) (NN attention))))
                        (NP
                          (NP (DT the) (JJ valuable) (NNS things))
                          (SBAR
                            (S
                              (NP (PRP he))
                              (VP (VBD had)
                                (VP (VBN left)
                                  (SBAR
                                    (S
                                      (NP (PRP him))
                                      (VP (MD might)
                                        (VP (VB require))))))))))))))))))))
    (. .)))

det(reading-3, the-2)
prep_after(gone-8, reading-3)
prep_of(reading-3, it-5)
nsubj(gone-8, he-6)
aux(gone-8, had-7)
root(ROOT-0, gone-8)
prt(gone-8, away-9)
advmod(gone-8, directly-10)
mark(add-17, that-12)
poss(presence-14, his-13)
nsubj(add-17, presence-14)
aux(add-17, might-15)
neg(add-17, not-16)
ccomp(gone-8, add-17)
det(irritation-20, the-19)
prep_to(add-17, irritation-20)
dobj(concluded-23, irritation-20)
nsubj(concluded-23, he-22)
rcmod(irritation-20, concluded-23)
neg(cause-40, not-25)
prep_without(cause-40, reason-27)
nsubj(cause-40, it-29)
aux(cause-40, must-30)
advmod(cause-40, even-32)
det(midst-35, the-34)
prep_in(cause-40, midst-35)
poss(sorrow-38, her-37)
prep_of(midst-35, sorrow-38)
parataxis(gone-8, cause-40)
prep_in(cause-40, her-42)
det(end-47, the-46)
prep_at(wrote-52, end-47)
det(week-50, a-49)
prep_of(end-47, week-50)
nsubj(wrote-52, he-51)
conj_but(gone-8, wrote-52)
xcomp(wrote-52, saying-54)
mark(felt-57, that-55)
nsubj(felt-57, he-56)
nsubj(inform-71, he-56)
ccomp(saying-54, felt-57)
nsubj(duty-60, it-58)
poss(duty-60, his-59)
xcomp(felt-57, duty-60)
dep(felt-57, if-62)
dep(if-62, only-63)
prep_in(only-63, gratitude-65)
poss(friend-68, his-67)
prep_to(only-63, friend-68)
aux(inform-71, to-70)
xcomp(felt-57, inform-71)
dobj(inform-71, himself-72)
prepc_as_to(inform-71, to-74)
det(attention-76, the-75)
pobj(inform-71, attention-76)
det(things-79, the-77)
amod(things-79, valuable-78)
dobj(inform-71, things-79)
nsubj(left-82, he-80)
aux(left-82, had-81)
rcmod(things-79, left-82)
nsubj(require-85, him-83)
aux(require-85, might-84)
ccomp(left-82, require-85)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD assured)
      (NP (NNP Alexa))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP
              (VP (VBN done)
                (NP (NN nothing))
                (S
                  (VP (TO to)
                    (VP (VB influence)
                      (NP (PRP$ her) (NN father))
                      (PP (IN in)
                        (NP (DT the) (NN matter)))))))
              (, ,)
              (CC and)
              (ADVP (RB much))
              (VP (VBN regretted)
                (NP
                  (NP (DT the) (JJ awkward) (NN position))
                  (SBAR
                    (WHPP (IN in)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP$ his) (NN will))
                      (VP (VBD had)
                        (VP (VBN placed)
                          (S
                            (NP (DT both))
                            (NP (PRP her)
                              (CC and)
                              (PRP him))))))))))))))
    (. .)))

nsubj(assured-2, He-1)
root(ROOT-0, assured-2)
dobj(assured-2, Alexa-3)
mark(done-7, that-4)
nsubj(done-7, he-5)
nsubj(regretted-19, he-5)
aux(done-7, had-6)
ccomp(assured-2, done-7)
dobj(done-7, nothing-8)
aux(influence-10, to-9)
vmod(done-7, influence-10)
poss(father-12, her-11)
dobj(influence-10, father-12)
det(matter-15, the-14)
prep_in(influence-10, matter-15)
advmod(regretted-19, much-18)
ccomp(assured-2, regretted-19)
conj_and(done-7, regretted-19)
det(position-22, the-20)
amod(position-22, awkward-21)
dobj(regretted-19, position-22)
prep_in(placed-28, position-22)
poss(will-26, his-25)
nsubj(placed-28, will-26)
aux(placed-28, had-27)
rcmod(position-22, placed-28)
nsubj(her-30, both-29)
xcomp(placed-28, her-30)
xcomp(placed-28, him-32)
conj_and(her-30, him-32)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (NP (PRP it))
    (VP (VBD was) (RB not)
      (ADJP (JJ unnatural))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD should)
            (VP (VB wish)
              (NP (JJ such) (JJ precious) (NNS objects))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN possessed)
                      (PP (IN by)
                        (NP
                          (NP (CD one))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (MD would)
                                (VP (VB care)
                                  (PP (IN for)
                                    (NP (PRP them)))
                                  (SBAR (IN as)
                                    (S
                                      (NP (PRP he))
                                      (VP (VBD had)
                                        (NP (PRP himself))
                                        (VP (VBN cared)
                                          (PP (IN for)
                                            (NP (PRP them))))))))))))))))))))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(unnatural-8, time-4)
nsubj(unnatural-8, it-5)
cop(unnatural-8, was-6)
neg(unnatural-8, not-7)
root(ROOT-0, unnatural-8)
mark(wish-12, that-9)
nsubj(wish-12, he-10)
aux(wish-12, should-11)
ccomp(unnatural-8, wish-12)
amod(objects-15, such-13)
amod(objects-15, precious-14)
dobj(wish-12, objects-15)
aux(possessed-18, to-16)
auxpass(possessed-18, be-17)
vmod(wish-12, possessed-18)
agent(possessed-18, one-20)
nsubj(care-23, one-20)
aux(care-23, would-22)
rcmod(one-20, care-23)
prep_for(care-23, them-25)
mark(cared-30, as-26)
nsubj(cared-30, he-27)
aux(cared-30, had-28)
dobj(cared-30, himself-29)
advcl(care-23, cared-30)
prep_for(cared-30, them-32)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD hoped) (, ,)
      (ADVP (RB therefore))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (MD would)
            (VP (VB allow)
              (S
                (NP (PRP him))
                (VP (VB access)
                  (PP (TO to)
                    (NP
                      (NP (PRP$ her) (NN father) (POS 's))
                      (NNS rooms))))))))))
    (. .)))

nsubj(hoped-2, He-1)
root(ROOT-0, hoped-2)
advmod(hoped-2, therefore-4)
mark(allow-9, that-6)
nsubj(allow-9, she-7)
aux(allow-9, would-8)
ccomp(hoped-2, allow-9)
nsubj(access-11, him-10)
ccomp(allow-9, access-11)
poss(father-14, her-13)
poss(rooms-16, father-14)
prep_to(access-11, rooms-16)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD would) (RB not)))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (MD might)
        (VP (VB rest)
          (ADJP (JJ assured))))
      (, ,)
      (VP (VBP intrude)
        (NP (PRP himself))
        (PP (IN upon)
          (NP (PRP$ her) (NN sorrow))))
      (, ,)
      (SBAR (IN though)
        (S
          (NP (PRP he))
          (VP (MD would)
            (VP (VB be)
              (VP (VBN compelled)
                (S
                  (VP (TO to)
                    (VP (VB ask)
                      (NP (PRP her))
                      (ADVP
                        (ADVP (RB before) (RB long))
                        (SBAR (IN whether)
                          (S
                            (NP (PRP he))
                            (VP (MD might)
                              (VP (VB hope)
                                (SBAR (IN that)
                                  (S
                                    (NP
                                      (NP (PRP$ her) (NN father) (POS 's))
                                      (NN wish))
                                    (VP (MD would)
                                      (VP (VB have)
                                        (NP
                                          (NP (DT any) (NN influence))
                                          (PP (IN in)
                                            (S
                                              (VP (VBG reviving)
                                                (NP
                                                  (NP (DT the) (NN favor))
                                                  (SBAR
                                                    (WHNP (WDT which))
                                                    (S
                                                      (VP (VBD had)
                                                        (ADVP (RB once))
                                                        (VP (VBN been)
                                                          (NP
                                                            (NP (DT the) (NN joy))
                                                            (PP (IN of)
                                                              (NP (PRP$ his) (NN life)))))))))))))))))))))))))))))))
    (. .)))

nsubj(would-2, He-1)
ccomp(rest-7, would-2)
neg(would-2, not-3)
nsubj(rest-7, she-5)
aux(rest-7, might-6)
root(ROOT-0, rest-7)
acomp(rest-7, assured-8)
dep(rest-7, intrude-10)
dobj(intrude-10, himself-11)
poss(sorrow-14, her-13)
prep_upon(intrude-10, sorrow-14)
mark(compelled-20, though-16)
nsubjpass(compelled-20, he-17)
nsubj(ask-22, he-17)
aux(compelled-20, would-18)
auxpass(compelled-20, be-19)
advcl(rest-7, compelled-20)
aux(ask-22, to-21)
xcomp(compelled-20, ask-22)
dobj(ask-22, her-23)
advmod(long-25, before-24)
advmod(ask-22, long-25)
mark(hope-29, whether-26)
nsubj(hope-29, he-27)
aux(hope-29, might-28)
advcl(long-25, hope-29)
mark(have-36, that-30)
poss(father-32, her-31)
poss(wish-34, father-32)
nsubj(have-36, wish-34)
aux(have-36, would-35)
ccomp(hope-29, have-36)
det(influence-38, any-37)
dobj(have-36, influence-38)
prepc_in(influence-38, reviving-40)
det(favor-42, the-41)
dobj(reviving-40, favor-42)
nsubj(joy-48, favor-42)
aux(joy-48, had-44)
advmod(joy-48, once-45)
cop(joy-48, been-46)
det(joy-48, the-47)
rcmod(favor-42, joy-48)
poss(life-51, his-50)
prep_of(joy-48, life-51)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD saw)
        (SBAR (IN that)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP she))
                (VP (VBD consented)
                  (S
                    (VP (TO to)
                      (VP (VB see)
                        (NP (PRP him))))))))
            (NP (PRP he))
            (VP (MD would)
              (VP (VB take)
                (NP (PRP it))
                (PP (IN as)
                  (NP (DT a) (NN permission)
                    (S
                      (VP (TO to)
                        (VP (VB press)
                          (NP (PRP$ his) (NN claim)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN idea))
      (VP (VBD was) (RB not)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN borne)))))))
    (. .)))

nsubj(saw-2, Alexa-1)
root(ROOT-0, saw-2)
mark(take-12, that-3)
mark(consented-6, if-4)
nsubj(consented-6, she-5)
nsubj(see-8, she-5)
advcl(take-12, consented-6)
aux(see-8, to-7)
xcomp(consented-6, see-8)
dobj(see-8, him-9)
nsubj(take-12, he-10)
aux(take-12, would-11)
ccomp(saw-2, take-12)
dobj(take-12, it-13)
det(permission-16, a-15)
prep_as(take-12, permission-16)
aux(press-18, to-17)
vmod(permission-16, press-18)
poss(claim-20, his-19)
dobj(press-18, claim-20)
det(idea-24, the-23)
nsubj(was-25, idea-24)
nsubjpass(borne-29, idea-24)
conj_and(saw-2, was-25)
neg(was-25, not-26)
aux(borne-29, to-27)
auxpass(borne-29, be-28)
xcomp(was-25, borne-29)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD wrote)
        (S
          (NP (PRP him))
          (ADVP (RB therefore))
          (NP (DT a) (JJ stiff) (NN letter)))
        (, ,)
        (S
          (VP (VBG telling)
            (NP (PRP him))
            (NP
              (NP (DT the) (NN house))
              (SBAR
                (S
                  (VP (VBD was)
                    (PP (IN at)
                      (NP (PRP$ his) (NN service)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD must)
        (VP (VB excuse)
          (NP (PRP herself)))))
    (. .)))

nsubj(wrote-2, She-1)
root(ROOT-0, wrote-2)
dep(letter-7, him-3)
advmod(letter-7, therefore-4)
det(letter-7, a-5)
amod(letter-7, stiff-6)
dep(wrote-2, letter-7)
xcomp(wrote-2, telling-9)
iobj(telling-9, him-10)
det(house-12, the-11)
dobj(telling-9, house-12)
rcmod(house-12, was-13)
poss(service-16, his-15)
prep_at(was-13, service-16)
nsubj(excuse-21, he-19)
aux(excuse-21, must-20)
conj_but(wrote-2, excuse-21)
dobj(excuse-21, herself-22)

(ROOT
  (S
    (NP (DT The) (JJ next) (NN morning))
    (VP (VBD brought)
      (NP (PRP him))
      (ADVP (RB early)
        (PP (TO to)
          (NP (NNP Potlurg)))))
    (. .)))

det(morning-3, The-1)
amod(morning-3, next-2)
nsubj(brought-4, morning-3)
root(ROOT-0, brought-4)
dobj(brought-4, him-5)
advmod(brought-4, early-6)
prep_to(early-6, Potlurg-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN cause))
      (PP (IN of)
        (NP (PRP$ his) (NN haste))))
    (VP (VBD was)
      (NP
        (NP (PRP$ his) (NN uneasiness))
        (PP (IN about)
          (NP (DT the) (NN chalice)))))
    (. .)))

det(cause-2, The-1)
nsubj(uneasiness-8, cause-2)
poss(haste-5, his-4)
prep_of(cause-2, haste-5)
cop(uneasiness-8, was-6)
poss(uneasiness-8, his-7)
root(ROOT-0, uneasiness-8)
det(chalice-11, the-10)
prep_about(uneasiness-8, chalice-11)

(ROOT
  (S
    (S
      (NP (NNP Old) (NNP Meg))
      (VP (VBD opened)
        (NP (DT the) (NN door))
        (PP (TO to)
          (NP (PRP him)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD followed)
        (NP (PRP her))
        (PP (RB straight) (IN into)
          (NP (DT the) (NN drawing-room)))))
    (. .)))

nn(Meg-2, Old-1)
nsubj(opened-3, Meg-2)
root(ROOT-0, opened-3)
det(door-5, the-4)
dobj(opened-3, door-5)
prep_to(opened-3, him-7)
nsubj(followed-11, he-10)
conj_and(opened-3, followed-11)
dobj(followed-11, her-12)
advmod(followed-11, straight-13)
det(drawing-room-16, the-15)
prep_into(followed-11, drawing-room-16)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP
      (VP (VBD was)
        (ADVP (RB there)))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB far))
        (PP (IN from)
          (S
            (VP (VBG expecting)
              (NP (PRP him)))))))
    (. .)))

nsubj(was-2, Alexa-1)
root(ROOT-0, was-2)
advmod(was-2, there-3)
conj_and(was-2, far-6)
prepc_from(far-6, expecting-8)
dobj(expecting-8, him-9)

(ROOT
  (S (CC But)
    (, ,)
    (SBAR
      (ADJP (JJ annoyed)
        (PP (IN at)
          (NP (PRP$ his) (NN appearance))))
      (IN as)
      (S
        (NP (PRP she))
        (VP (VBD was))))
    (, ,)
    (NP (PRP she))
    (VP (VBD found)
      (S
        (NP (PRP$ his) (NN manner)
          (CC and)
          (NN behavior))
        (ADJP (RBR less) (JJ unpleasant)
          (PP (IN than)
            (PP (IN at)
              (NP
                (NP (DT any) (NN time))
                (PP (IN since)
                  (NP (PRP$ his) (NN return)))))))))
    (. .)))

cc(found-12, But-1)
dep(was-9, annoyed-3)
poss(appearance-6, his-5)
prep_at(annoyed-3, appearance-6)
mark(was-9, as-7)
nsubj(was-9, she-8)
advcl(found-12, was-9)
nsubj(found-12, she-11)
root(ROOT-0, found-12)
poss(manner-14, his-13)
nsubj(unpleasant-18, manner-14)
conj_and(manner-14, behavior-16)
nsubj(unpleasant-18, behavior-16)
advmod(unpleasant-18, less-17)
xcomp(found-12, unpleasant-18)
prep(unpleasant-18, than-19)
pcomp(than-19, at-20)
det(time-22, any-21)
pobj(at-20, time-22)
poss(return-25, his-24)
prep_since(time-22, return-25)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (JJ gentle)
        (CC and)
        (JJ self-restrained))
      (, ,)
      (S
        (VP (VBG assuming)
          (NP (DT no) (NN familiarity))
          (PP (IN beyond)
            (NP
              (NP (DT that))
              (PP (IN of)
                (NP (DT a) (JJ distant) (NN relative))))))))
    (, ,)
    (CC and)
    (VP (VBD gave)
      (NP
        (NP (DT the) (NN impression))
        (PP (IN of)
          (S
            (VP (VBG having)
              (VP (VBN come)
                (PP
                  (PP (IN against)
                    (NP (PRP$ his) (NN will)))
                  (, ,)
                  (CC and)
                  (RB only)
                  (PP (IN from)
                    (NP
                      (NP (DT a) (NN sense))
                      (PP (IN of)
                        (NP (NN duty))))))))))))
    (. .)))

nsubj(gentle-3, He-1)
nsubj(self-restrained-5, He-1)
nsubj(gave-18, He-1)
cop(gentle-3, was-2)
root(ROOT-0, gentle-3)
conj_and(gentle-3, self-restrained-5)
xcomp(gentle-3, assuming-7)
neg(familiarity-9, no-8)
dobj(assuming-7, familiarity-9)
prep_beyond(assuming-7, that-11)
det(relative-15, a-13)
amod(relative-15, distant-14)
prep_of(that-11, relative-15)
conj_and(gentle-3, gave-18)
det(impression-20, the-19)
dobj(gave-18, impression-20)
aux(come-23, having-22)
prepc_of(impression-20, come-23)
prep(come-23, against-24)
poss(will-26, his-25)
pobj(against-24, will-26)
prep(come-23, only-29)
conj_and(against-24, only-29)
dep(against-24, from-30)
det(sense-32, a-31)
pobj(from-30, sense-32)
prep_of(sense-32, duty-34)

(ROOT
  (S (`` ``)
    (VP (VB Did)
      (NP (PRP you))
      (RB not)
      (VP (VB have)
        (NP (PRP$ my) (NN note))))
    (. ?) ('' '')))

aux(have-5, Did-2)
dobj(have-5, you-3)
neg(have-5, not-4)
root(ROOT-0, have-5)
poss(note-7, my-6)
dobj(have-5, note-7)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, she-1)
root(ROOT-0, asked-2)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (VP (VBN hoped))))
    (, ,)
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (S
        (VP (TO to)
          (VP (VB save)
            (NP (PRP her))
            (NP
              (NP (DT the) (NN trouble))
              (PP (IN of)
                (S
                  (VP (VBG writing)))))))))
    (. .)))

nsubj(hoped-3, He-1)
aux(hoped-3, had-2)
ccomp(said-6, hoped-3)
nsubj(said-6, he-5)
nsubj(save-9, he-5)
root(ROOT-0, said-6)
aux(save-9, to-8)
xcomp(said-6, save-9)
iobj(save-9, her-10)
det(trouble-12, the-11)
dobj(save-9, trouble-12)
prepc_of(trouble-12, writing-14)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD handed)
        (NP (PRP him))
        (NP
          (NP
            (NP (PRP$ her) (NN father) (POS 's))
            (NN bunch))
          (PP (IN of)
            (NP (NNS keys)))))
      (, ,)
      (CC and)
      (VP (VBD left)
        (NP (DT the) (NN room))))
    (. .)))

nsubj(handed-2, She-1)
nsubj(left-12, She-1)
root(ROOT-0, handed-2)
iobj(handed-2, him-3)
poss(father-5, her-4)
poss(bunch-7, father-5)
dobj(handed-2, bunch-7)
prep_of(bunch-7, keys-9)
conj_and(handed-2, left-12)
det(room-14, the-13)
dobj(left-12, room-14)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP (VBD went)
        (PP (TO to)
          (NP
            (NP (DT the) (NN laird) (POS 's))
            (NN closet)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG having)
          (VP (VBN spent)
            (PP
              (NP (DT an) (NN hour))
              (IN in)
              (NP (PRP it)))
            (, ,)
            (ADVP (RB again)))))
      (VP (VBD sought)
        (NP (NNP Alexa))))
    (. .)))

nsubj(went-2, George-1)
root(ROOT-0, went-2)
det(laird-5, the-4)
poss(closet-7, laird-5)
prep_to(went-2, closet-7)
aux(spent-11, having-10)
csubj(sought-18, spent-11)
det(hour-13, an-12)
npadvmod(spent-11, hour-13)
prep_in(spent-11, it-15)
advmod(spent-11, again-17)
conj_and(went-2, sought-18)
dobj(sought-18, Alexa-19)

(ROOT
  (S
    (NP (DT The) (JJ wonderful) (NN watch))
    (VP (VBD was)
      (PP (IN in)
        (NP (PRP$ his) (NN hand))))
    (. .)))

det(watch-3, The-1)
amod(watch-3, wonderful-2)
nsubj(was-4, watch-3)
root(ROOT-0, was-4)
poss(hand-7, his-6)
prep_in(was-4, hand-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP feel)
        (NP
          (NP (DT the) (JJR more) (NN pleasure))
          (, ,)
          (NP (NNP Alexa)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (PP (`` ``) (IN in)
        (S
          (VP (VBG begging)
            (S
              (NP (PRP you))
              (VP (TO to)
                (VP (VB accept)
                  (NP (DT this) (NN trinket))))))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP (DT the) (JJ last) (NN addition))
            (PP (TO to)
              (NP
                (NP (PRP$ your)
                  (ADJP (RB dear))
                  (NN father) (POS 's))
                (NN collection)))))))
    (. .)))

nsubj(feel-3, I-2)
ccomp(said-12, feel-3)
det(pleasure-6, the-4)
amod(pleasure-6, more-5)
dobj(feel-3, pleasure-6)
appos(pleasure-6, Alexa-8)
nsubj(said-12, he-11)
root(ROOT-0, said-12)
prepc_in(said-12, begging-16)
dobj(begging-16, you-17)
nsubj(accept-19, you-17)
aux(accept-19, to-18)
xcomp(begging-16, accept-19)
det(trinket-21, this-20)
dobj(accept-19, trinket-21)
mark(addition-28, that-23)
nsubj(addition-28, it-24)
cop(addition-28, was-25)
det(addition-28, the-26)
amod(addition-28, last-27)
ccomp(said-12, addition-28)
poss(father-32, your-30)
amod(father-32, dear-31)
poss(collection-34, father-32)
prep_to(addition-28, collection-34)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD had)
      (S
        (NP (PRP myself))
        (NP (DT the) (JJ good) (NN fortune)
          (S
            (VP (TO to)
              (VP (VB please)
                (NP (PRP him))
                (PP (IN with)
                  (NP (PRP it))))))))
      (NP
        (NP (DT a) (JJ few) (NNS days))
        (PP (IN before)
          (NP (PRP$ his) (NN death)))))
    (. .) ('' '')))

nsubj(had-2, I-1)
root(ROOT-0, had-2)
nsubj(fortune-6, myself-3)
det(fortune-6, the-4)
amod(fortune-6, good-5)
xcomp(had-2, fortune-6)
aux(please-8, to-7)
vmod(fortune-6, please-8)
dobj(please-8, him-9)
prep_with(please-8, it-11)
det(days-14, a-12)
amod(days-14, few-13)
dobj(had-2, days-14)
poss(death-17, his-16)
prep_before(days-14, death-17)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (VP (VB thank)
        (NP (PRP you))))
    (, ,)
    (NP (NNP George))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Alexa))
    (. .)))

discourse(thank-4, No-2)
ccomp(returned-10, thank-4)
dobj(thank-4, you-5)
nsubj(returned-10, George-7)
root(ROOT-0, returned-10)
dep(returned-10, Alexa-11)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP (DT a) (JJ beautiful) (NN thing))))
    (PRN (: --)
      (S
        (NP (PRP$ my) (NN father))
        (VP (VBD showed)
          (S
            (NP (PRP it))
            (NP (PRP me)))))
      (: --))
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB take)
          (NP (PRP it)))))
    (. .) ('' '')))

nsubj(thing-6, It-2)
cop(thing-6, is-3)
det(thing-6, a-4)
amod(thing-6, beautiful-5)
root(ROOT-0, thing-6)
poss(father-9, my-8)
nsubj(showed-10, father-9)
dep(thing-6, showed-10)
nsubj(me-12, it-11)
xcomp(showed-10, me-12)
nsubj(take-18, I-15)
aux(take-18, can-16)
neg(take-18, not-17)
conj_but(thing-6, take-18)
dobj(take-18, it-19)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (JJR more))
          (PP (IN of)
            (NP (PRP you))))
        (PP (IN than)
          (NP (PRP him)))))
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD purchased)
            (NP
              (NP (PRP it))
              (, ,)
              (NP (NNP Alexa)))))))
    (. .)))

nsubj(more-4, It-2)
cop(more-4, was-3)
dep(thought-10, more-4)
prep_of(more-4, you-6)
prep_than(more-4, him-8)
nsubj(thought-10, I-9)
root(ROOT-0, thought-10)
advmod(purchased-13, when-11)
nsubj(purchased-13, I-12)
advcl(thought-10, purchased-13)
dobj(purchased-13, it-14)
appos(it-14, Alexa-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP know)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP I))
          (VP (MD could) (RB not)
            (VP (VB offer)
              (NP (PRP it))
              (NP (PRP you)))))))
    (. .) ('' '')))

nsubj(know-2, You-1)
root(ROOT-0, know-2)
advmod(offer-7, why-3)
nsubj(offer-7, I-4)
aux(offer-7, could-5)
neg(offer-7, not-6)
ccomp(know-2, offer-7)
iobj(offer-7, it-8)
dobj(offer-7, you-9)

(ROOT
  (S (`` ``)
    (NP (DT The) (JJ same) (NN reason))
    (VP (VBZ exists)
      (ADVP (RB now)))
    (. .) ('' '')))

det(reason-4, The-2)
amod(reason-4, same-3)
nsubj(exists-5, reason-4)
root(ROOT-0, exists-5)
advmod(exists-5, now-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ sorry)
        (S
          (VP (TO to)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB force)
                    (S
                      (NP
                        (NP
                          (NP (PRP myself))
                          (PP (IN on)
                            (NP (PRP$ your) (NN attention))))
                        (, ,)
                        (PP (IN but))
                        (: --) ('' ''))
                      (`` ``)
                      (ADJP (JJ Dawtie)))))))))))
    (. !) ('' '')))

nsubj(sorry-4, I-2)
nsubj(have-6, I-2)
nsubj(force-8, I-2)
cop(sorry-4, am-3)
root(ROOT-0, sorry-4)
aux(have-6, to-5)
xcomp(sorry-4, have-6)
aux(force-8, to-7)
xcomp(have-6, force-8)
dep(Dawtie-18, myself-9)
poss(attention-12, your-11)
prep_on(myself-9, attention-12)
prep(myself-9, but-14)
dep(force-8, Dawtie-18)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Alexa-2)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD came)
      (S
        (VP (VBG running))))
    (. .)))

nsubj(came-2, Dawtie-1)
root(ROOT-0, came-2)
xcomp(came-2, running-3)

(ROOT
  (S (`` ``)
    (VP (VB Wait)
      (NP
        (NP (DT a) (NN minute))
        (, ,)
        (NP (NNP Dawtie))))
    (. .)))

root(ROOT-0, Wait-2)
det(minute-4, a-3)
dobj(Wait-2, minute-4)
appos(minute-4, Dawtie-6)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB speak)
          (PP (TO to)
            (NP (PRP you)))
          (ADVP (RB presently)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ her) (NN mistress))
    (. .)))

nsubj(speak-3, I-1)
aux(speak-3, will-2)
ccomp(said-9, speak-3)
prep_to(speak-3, you-5)
advmod(speak-3, presently-6)
root(ROOT-0, said-9)
poss(mistress-11, her-10)
nsubj(said-9, mistress-11)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD rose))
    (. .)))

nsubj(rose-2, George-1)
root(ROOT-0, rose-2)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD had)
        (VP (VBN laid)
          (NP
            (NP (DT the) (NN watch))
            (PP (IN on)
              (NP (DT the) (NN table))))))
      (, ,)
      (CC and)
      (VP (VBD seemed)
        (S
          (VP (TO to)
            (VP (VB have)
              (VP (VBN forgotten)
                (NP (PRP it))))))))
    (. .)))

nsubj(laid-3, He-1)
nsubj(seemed-11, He-1)
nsubj(forgotten-14, He-1)
aux(laid-3, had-2)
root(ROOT-0, laid-3)
det(watch-5, the-4)
dobj(laid-3, watch-5)
det(table-8, the-7)
prep_on(watch-5, table-8)
conj_and(laid-3, seemed-11)
aux(forgotten-14, to-12)
aux(forgotten-14, have-13)
xcomp(seemed-11, forgotten-14)
dobj(forgotten-14, it-15)

(ROOT
  (SINV (`` ``)
    (S
      (INTJ (UH Please))
      (VP (VB take)
        (NP (DT the) (NN watch))
        (PP (IN with)
          (NP (PRP you)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Alexa))
    (. .)))

discourse(take-3, Please-2)
ccomp(said-10, take-3)
det(watch-5, the-4)
dobj(take-3, watch-5)
prep_with(take-3, you-7)
root(ROOT-0, said-10)
nsubj(said-10, Alexa-11)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Certainly))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP wish)
            (NP (PRP it))))))
    (. !) ('' '')))

root(ROOT-0, Certainly-2)
mark(wish-6, if-4)
nsubj(wish-6, you-5)
dep(Certainly-2, wish-6)
dobj(wish-6, it-7)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD answered))
    (. .)))

nsubj(answered-2, he-1)
root(ROOT-0, answered-2)

(ROOT
  (S (`` ``)
    (S (CC And)
      (NP (PRP$ my) (NN father))
      (VP (VBZ 's)
        (NP (NNS keys))
        (, ,)
        (ADVP (RB too))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD added))
    (. .)))

cc(keys-6, And-2)
poss(father-4, my-3)
nsubj(keys-6, father-4)
cop(keys-6, 's-5)
ccomp(added-12, keys-6)
advmod(keys-6, too-8)
nsubj(added-12, she-11)
root(ROOT-0, added-12)

(ROOT
  (S (`` ``)
    (VP (VB Will)
      (NP (PRP you))
      (RB not)
      (VP (VB be)
        (ADJP (JJ kind) (RB enough)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP
                  (NP (NN charge))
                  (PP (IN of)
                    (NP (PRP them))))))))))
    (. ?) ('' '')))

aux(kind-6, Will-2)
dobj(kind-6, you-3)
nsubj(take-9, you-3)
neg(kind-6, not-4)
cop(kind-6, be-5)
root(ROOT-0, kind-6)
advmod(kind-6, enough-7)
aux(take-9, to-8)
xcomp(kind-6, take-9)
dobj(take-9, charge-10)
prep_of(charge-10, them-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB rather))
      (RB not)
      (VP (VB be)
        (ADJP (JJ accountable)
          (PP (IN for)
            (NP (NN anything))))
        (PP (IN under)
          (NP (PRP them)))))
    (. .)))

nsubj(accountable-7, I-2)
aux(accountable-7, would-3)
advmod(accountable-7, rather-4)
neg(accountable-7, not-5)
cop(accountable-7, be-6)
root(ROOT-0, accountable-7)
prep_for(accountable-7, anything-9)
prep_under(accountable-7, them-11)

(ROOT
  (S
    (FRAG
      (INTJ (UH No)))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB take)
          (NP (DT the) (NNS keys)))))
    (. .) ('' '')))

dep(take-5, No-1)
nsubj(take-5, you-3)
aux(take-5, must-4)
root(ROOT-0, take-5)
det(keys-7, the-6)
dobj(take-5, keys-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB help)
        (S
          (VP (VBG regretting)
            (PRN (, ,) ('' '')
              (SINV
                (VP (VBD said))
                (NP (NNP George)))
              (, ,) (`` ``))
            (SBAR (IN that)
              (S
                (NP (PRP$ your) (JJ honored) (NN father))
                (VP (MD should)
                  (VP (VB have)
                    (VP (VBN thought)
                      (ADJP (JJ fit)
                        (S
                          (VP (TO to)
                            (VP (VB lay)
                              (NP
                                (NP (DT this) (NN burden))
                                (PP (IN of)
                                  (NP (NN possession))))
                              (PP (IN upon)
                                (NP (PRP me))))))))))))))))
    (. .) ('' '')))

nsubj(help-5, I-2)
aux(help-5, can-3)
neg(help-5, not-4)
root(ROOT-0, help-5)
xcomp(help-5, regretting-6)
parataxis(regretting-6, said-9)
nsubj(said-9, George-10)
mark(thought-19, that-13)
poss(father-16, your-14)
amod(father-16, honored-15)
nsubj(thought-19, father-16)
aux(thought-19, should-17)
aux(thought-19, have-18)
ccomp(regretting-6, thought-19)
acomp(thought-19, fit-20)
aux(lay-22, to-21)
xcomp(fit-20, lay-22)
det(burden-24, this-23)
dobj(lay-22, burden-24)
prep_of(burden-24, possession-26)
prep_upon(lay-22, me-28)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD made)
      (NP (DT no) (NN answer)))
    (. .)))

nsubj(made-2, Alexa-1)
root(ROOT-0, made-2)
neg(answer-4, no-3)
dobj(made-2, answer-4)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD comforted)
      (NP (PRP myself))
      (PP (IN with)
        (NP (DT the) (NN hope)))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD would)
            (VP (VB feel)
              (NP (PRP them))
              (ADVP (RB as) (RB much))
              (PP
                (NP (PRP$ your) (JJ own))
                (IN as)
                (NP (RB ever))))))))
    (. !) ('' '')))

nsubj(comforted-3, I-2)
root(ROOT-0, comforted-3)
dobj(comforted-3, myself-4)
det(hope-7, the-6)
prep_with(comforted-3, hope-7)
mark(feel-11, that-8)
nsubj(feel-11, you-9)
aux(feel-11, would-10)
ccomp(comforted-3, feel-11)
dobj(feel-11, them-12)
advmod(much-14, as-13)
advmod(feel-11, much-14)
poss(own-16, your-15)
npadvmod(as-17, own-16)
prep(feel-11, as-17)
pobj(as-17, ever-18)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD resumed) (, ,)
      (PP (IN in)
        (NP
          (NP (DT a) (NN tone))
          (PP (IN of)
            (NP (NN disappointment)
              (CC and)
              (NN dejection))))))
    (. .)))

nsubj(resumed-2, he-1)
root(ROOT-0, resumed-2)
det(tone-6, a-5)
prep_in(resumed-2, tone-6)
prep_of(tone-6, disappointment-8)
prep_of(tone-6, dejection-10)
conj_and(disappointment-8, dejection-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD did) (RB not)
      (VP (VB know)
        (PP (IN of)
          (NP (PRP$ their) (NN existence)))
        (SBAR (IN before)
          (S
            (NP (PRP I))
            (VP (VBD knew)
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBD were)
                    (ADVP (RB never))
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (NP (NN mine)))))))))))))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, did-3)
neg(know-5, not-4)
root(ROOT-0, know-5)
poss(existence-8, their-7)
prep_of(know-5, existence-8)
mark(knew-11, before-9)
nsubj(knew-11, I-10)
advcl(know-5, knew-11)
nsubj(were-13, they-12)
nsubj(mine-17, they-12)
ccomp(knew-11, were-13)
neg(were-13, never-14)
aux(mine-17, to-15)
cop(mine-17, be-16)
xcomp(were-13, mine-17)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Never))
    (, ,)
    (NP (NNP Alexa))
    (. ?) ('' '')))

root(ROOT-0, Never-2)
dep(Never-2, Alexa-4)

(ROOT
  (INTJ (`` ``) (UH Never) (. .) ('' '')))

root(ROOT-0, Never-2)

(ROOT
  (S
    (S
      (S
        (NP (NNP George))
        (VP (VBD walked)
          (PP (TO to)
            (NP (DT the) (NN door)))))
      (, ,)
      (CC but)
      (S
        (NP (EX there))
        (VP
          (VP (VBD turned))
          (, ,)
          (CC and)
          (VP (VBD said)))))
    (: :) (`` ``)
    (S
      (PP (IN By)
        (NP (DT the) (NN way)))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (NP
              (NP (NN cup))
              (NP (PRP$ your) (NN father)))
            (VP (VBD was)
              (ADJP (RB so) (JJ fond)
                (PP (IN of))))))))
    (. ?) ('' '')))

nsubj(walked-2, George-1)
nsubj(turned-9, George-1)
root(ROOT-0, walked-2)
det(door-5, the-4)
prep_to(walked-2, door-5)
expl(turned-9, there-8)
conj_but(walked-2, turned-9)
conj_but(walked-2, said-12)
conj_and(turned-9, said-12)
det(way-17, the-16)
prep_by(know-20, way-17)
nsubj(know-20, you-19)
parataxis(walked-2, know-20)
mark(fond-27, that-21)
nsubj(fond-27, cup-22)
poss(father-24, your-23)
dep(cup-22, father-24)
cop(fond-27, was-25)
advmod(fond-27, so-26)
ccomp(know-20, fond-27)
prep(fond-27, of-28)

(ROOT
  (INTJ (`` ``) (UH No) (. .) ('' '')))

root(ROOT-0, No-2)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (RB Not) (DT that) (JJ gold) (NN cup))
      (, ,)
      (VP (VBN set)
        (PP (IN with)
          (NP (NNS stones)))))
    (. ?) ('' '')))

neg(cup-5, Not-2)
det(cup-5, that-3)
amod(cup-5, gold-4)
root(ROOT-0, cup-5)
vmod(cup-5, set-7)
prep_with(set-7, stones-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD saw)
      (NP (NN something))
      (PP (IN in)
        (NP (PRP$ his) (NNS hands))
        (ADVP (RB once)))
      (, ,)
      (PP (IN in)
        (NP
          (NP (NN bed))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD might)
                (VP (VB have)
                  (VP (VBN been)
                    (NP (DT a) (NN cup))))))))))
    (. .) ('' '')))

nsubj(saw-3, I-2)
root(ROOT-0, saw-3)
dobj(saw-3, something-4)
poss(hands-7, his-6)
prep_in(saw-3, hands-7)
advmod(saw-3, once-8)
prep_in(saw-3, bed-11)
nsubj(cup-18, bed-11)
aux(cup-18, might-14)
aux(cup-18, have-15)
cop(cup-18, been-16)
det(cup-18, a-17)
rcmod(bed-11, cup-18)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN thing))
          (PP (IN of)
            (NP (JJ great) (NN value)))
          (: --)
          (PP (IN of)
            (NP (JJ pure) (NN gold))))
        (, ,)
        (CC and)
        (NP
          (NP
            (NP (DT every) (NN stone))
            (PP (IN in)
              (NP (PRP it))))
          (NP (DT a) (NN gem)))))
    (. .) ('' '')))

nsubj(thing-5, It-2)
cop(thing-5, is-3)
det(thing-5, a-4)
root(ROOT-0, thing-5)
amod(value-8, great-7)
prep_of(thing-5, value-8)
amod(gold-12, pure-11)
prep_of(thing-5, gold-12)
det(stone-16, every-15)
conj_and(thing-5, stone-16)
prep_in(stone-16, it-18)
det(gem-20, a-19)
dep(stone-16, gem-20)

(ROOT
  (INTJ (`` ``) (UH Indeed) (. !) ('' '')))

root(ROOT-0, Indeed-2)

(ROOT
  (S
    (VP (VBN returned)
      (NP (NNP Alexa))
      (, ,)
      (PP (IN with)
        (NP (VBN marked) (NN indifference))))
    (. .)))

root(ROOT-0, returned-1)
dobj(returned-1, Alexa-2)
amod(indifference-6, marked-5)
prep_with(returned-1, indifference-6)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT the) (NN work))
          (PP (IN of)
            (NP (DT the) (JJ famous) (NNP Benvenuto) (NNP Cellini)))
          (, ,)
          (VP (VBN made)
            (PP (IN for)
              (NP (NNP Pope) (NNP Clement) (DT the) (NNP Seventh))))
          (, ,)
          (PP (IN for)
            (NP (PRP$ his) (JJ own) (NN communion-chalice))))))
    (. .)))

advmod(work-7, Yes-2)
nsubj(work-7, it-4)
cop(work-7, was-5)
det(work-7, the-6)
root(ROOT-0, work-7)
det(Cellini-12, the-9)
amod(Cellini-12, famous-10)
nn(Cellini-12, Benvenuto-11)
prep_of(work-7, Cellini-12)
vmod(work-7, made-14)
nn(Seventh-19, Pope-16)
nn(Seventh-19, Clement-17)
det(Seventh-19, the-18)
prep_for(made-14, Seventh-19)
poss(communion-chalice-24, his-22)
amod(communion-chalice-24, own-23)
prep_for(work-7, communion-chalice-24)

(ROOT
  (S
    (NP (PRP$ Your) (NN father))
    (VP (VBD priced)
      (NP (PRP it))
      (PP (IN at)
        (NP
          (QP (CD three) (CD thousand))
          (NNS pounds))))
    (. .)))

poss(father-2, Your-1)
nsubj(priced-3, father-2)
root(ROOT-0, priced-3)
dobj(priced-3, it-4)
number(thousand-7, three-6)
num(pounds-8, thousand-7)
prep_at(priced-3, pounds-8)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ his) (JJ last) (NNS moments)))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP$ his) (NN mind))
        (VP (VBD was)
          (VP (VBG wandering)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD fancied)
      (NP (PRP it))
      (NP
        (NP (DT the) (NNP Holy) (NNP Grail))
        (SBAR
          (S
            (NP (PRP He))
            (VP
              (VP (VBD had)
                (NP (PRP it))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN bed))
                    (PP (IN with)
                      (NP (PRP him)))))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP he))
                    (VP (VBD died)))))
              (: ;)
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (VBP know)))))))))
    (. .) ('' '')))

poss(moments-4, his-2)
amod(moments-4, last-3)
prep_in(fancied-13, moments-4)
advmod(wandering-10, when-6)
poss(mind-8, his-7)
nsubj(wandering-10, mind-8)
aux(wandering-10, was-9)
advcl(fancied-13, wandering-10)
nsubj(fancied-13, he-12)
root(ROOT-0, fancied-13)
iobj(fancied-13, it-14)
det(Grail-17, the-15)
nn(Grail-17, Holy-16)
dobj(fancied-13, Grail-17)
mark(know-32, Grail-17)
nsubj(had-19, He-18)
rcmod(Grail-17, had-19)
dobj(had-19, it-20)
det(bed-23, the-22)
prep_in(had-19, bed-23)
prep_with(bed-23, him-25)
advmod(died-28, when-26)
nsubj(died-28, he-27)
advcl(had-19, died-28)
nsubj(know-32, I-31)
ccomp(had-19, know-32)
parataxis(had-19, know-32)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (VBG missing)))
    (. ?) ('' '')))

cc(missing-5, And-2)
nsubj(missing-5, it-3)
cop(missing-5, is-4)
root(ROOT-0, missing-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Perhaps))
    (NP (NNP Dawtie))
    (VP (MD could)
      (VP (VB tell)
        (NP (PRP us))
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ has)
              (VP (VBN become)
                (PP (IN of)
                  (NP (PRP it)))))))))
    (. .)))

advmod(tell-5, Perhaps-2)
nsubj(tell-5, Dawtie-3)
aux(tell-5, could-4)
root(ROOT-0, tell-5)
dobj(tell-5, us-6)
nsubj(become-9, what-7)
aux(become-9, has-8)
dep(tell-5, become-9)
prep_of(become-9, it-11)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (PP (IN with)
        (NP
          (NP (DT the) (NN laird))
          (PP (IN at)
            (NP (DT the) (JJ last))))))
    (. .) ('' '')))

nsubj(was-2, She-1)
root(ROOT-0, was-2)
det(laird-5, the-4)
prep_with(was-2, laird-5)
det(last-8, the-7)
prep_at(laird-5, last-8)

(ROOT
  (S
    (NP
      (NP (NNP Dawtie))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD had)
            (VP (VBN stood)
              (ADVP (RB aside))
              (S
                (VP (TO to)
                  (VP (VB let)
                    (S
                      (NP (PRP him))
                      (VP (VB pass)
                        (PP (TO to)
                          (NP (DT the) (JJ open) (NN door))))))))))))
      (, ,))
    (VP
      (VP (VBD looked)
        (PRT (RP up))
        (PP (IN with)
          (NP
            (NP (DT a) (NN flash))
            (PP (IN in)
              (NP (PRP$ her) (NNS eyes))))))
      (, ,)
      (CC but)
      (VP (VBD said)
        (NP (NN nothing))))
    (. .)))

nsubj(stood-5, Dawtie-1)
nsubj(let-8, Dawtie-1)
nsubj(looked-16, Dawtie-1)
nsubj(said-26, Dawtie-1)
aux(stood-5, had-4)
rcmod(Dawtie-1, stood-5)
advmod(stood-5, aside-6)
aux(let-8, to-7)
xcomp(stood-5, let-8)
nsubj(pass-10, him-9)
ccomp(let-8, pass-10)
det(door-14, the-12)
amod(door-14, open-13)
prep_to(pass-10, door-14)
root(ROOT-0, looked-16)
prt(looked-16, up-17)
det(flash-20, a-19)
prep_with(looked-16, flash-20)
poss(eyes-23, her-22)
prep_in(flash-20, eyes-23)
conj_but(looked-16, said-26)
dobj(said-26, nothing-27)

(ROOT
  (S (`` ``)
    (VP (VB Have)
      (S
        (NP (PRP you))
        (VP (VBN seen)
          (NP
            (NP (DT the) (NN cup))
            (, ,)
            (NP (NNP Dawtie))))))
    (. ?) ('' '')))

root(ROOT-0, Have-2)
nsubj(seen-4, you-3)
ccomp(Have-2, seen-4)
det(cup-6, the-5)
dobj(seen-4, cup-6)
appos(cup-6, Dawtie-8)

(ROOT
  (S
    (VP (VBD asked)
      (NP (PRP$ her) (NN mistress)))
    (. .)))

root(ROOT-0, asked-1)
poss(mistress-3, her-2)
dobj(asked-1, mistress-3)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH No))
    (, ,)
    (NP (NN ma'am))
    (. .) ('' '')))

discourse(ma'am-4, No-2)
root(ROOT-0, ma'am-4)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB know)
          (NP (PRP it)))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(know-4, you-3)
ccomp(Do-2, know-4)
dobj(know-4, it-5)

(ROOT
  (S (`` ``)
    (VP (VB Very)
      (ADVP (RB well))
      (, ,) (VB ma'am))
    (. .) ('' '')))

root(ROOT-0, Very-2)
advmod(Very-2, well-3)
dep(Very-2, ma'am-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ has)
              (VP (VBN become)
                (PP (IN of)
                  (NP (PRP it)))))))))
    (. ?) ('' '')))

advmod(know-6, Then-2)
nsubj(know-6, you-3)
aux(know-6, do-4)
neg(know-6, n't-5)
root(ROOT-0, know-6)
nsubj(become-9, what-7)
aux(become-9, has-8)
ccomp(know-6, become-9)
prep_of(become-9, it-11)

(ROOT
  (S
    (S
      (INTJ (`` ``) (UH No))
      (, ,)
      (VP (VB ma'am)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP
          (NP (NN nothing))
          (PP (IN about)
            (NP (PRP it))))))
    (. .) ('' '')))

discourse(ma'am-4, No-2)
root(ROOT-0, ma'am-4)
nsubj(know-7, I-6)
parataxis(ma'am-4, know-7)
dobj(know-7, nothing-8)
prep_about(nothing-8, it-10)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Take)
        (NP (NN care))
        (, ,)
        (NP (NNP Dawtie))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP George))
    (. .)))

ccomp(said-8, Take-2)
dobj(Take-2, care-3)
dobj(Take-2, Dawtie-5)
root(ROOT-0, said-8)
nsubj(said-8, George-9)

(ROOT
  (S (`` ``)
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN matter))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD will)
              (VP (VB have)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN searched)
                        (PP (IN into))))))))))))
    (. .) ('' '')))

nsubj(matter-5, This-2)
cop(matter-5, is-3)
det(matter-5, a-4)
root(ROOT-0, matter-5)
nsubj(have-8, matter-5)
nsubjpass(searched-11, matter-5)
prep_into(searched-11, matter-5)
aux(have-8, will-7)
rcmod(matter-5, have-8)
aux(searched-11, to-9)
auxpass(searched-11, be-10)
xcomp(have-8, searched-11)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB When))
    (SQ (VBD did)
      (NP (PRP you))
      (VP
        (ADVP (RB last))
        (VB see)
        (NP
          (NP (PRP it))
          (, ,)
          (NP (NNP Dawtie)))))
    (. ?) ('' '')))

advmod(see-6, When-2)
aux(see-6, did-3)
nsubj(see-6, you-4)
advmod(see-6, last-5)
root(ROOT-0, see-6)
dobj(see-6, it-7)
appos(it-7, Dawtie-9)

(ROOT
  (NP (NNP inquired) (NNP Alexa) (. .)))

nn(Alexa-2, inquired-1)
root(ROOT-0, Alexa-2)

(ROOT
  (S (`` ``)
    (NP (DT The) (JJ very) (NN day))
    (PRN
      (S
        (NP (PRP$ my) (NN master))
        (VP (VBD died)))
      (, ,))
    (VP (VBP ma'am))
    (. .)))

det(day-4, The-2)
amod(day-4, very-3)
nsubj(ma'am-9, day-4)
poss(master-6, my-5)
nsubj(died-7, master-6)
parataxis(ma'am-9, died-7)
root(ROOT-0, ma'am-9)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (VP (VBG looking)
          (PP (IN at)
            (NP (PRP it))))))
    (, ,)
    (CC but)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD saw)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD saw)
                  (NP (PRP him))))))))
      (NP (PRP he))
      (VP (VBD took)
        (NP (PRP it))
        (PP (IN inside)
          (NP (DT the) (NNS bed-clothes)))))
    (. .) ('' '')))

nsubj(looking-3, He-1)
aux(looking-3, was-2)
root(ROOT-0, looking-3)
prep_at(looking-3, it-5)
advmod(saw-10, when-8)
nsubj(saw-10, he-9)
advcl(took-15, saw-10)
nsubj(saw-12, I-11)
ccomp(saw-10, saw-12)
dobj(saw-12, him-13)
nsubj(took-15, he-14)
conj_but(looking-3, took-15)
dobj(took-15, it-16)
det(bed-clothes-19, the-18)
prep_inside(took-15, bed-clothes-19)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP you))
    (VP (VBP have) (RB not)
      (VP (VBN seen)
        (S
          (NP (PRP it))
          (ADVP (RB since)))))
    (. ?) ('' '')))

cc(seen-6, And-2)
nsubj(seen-6, you-3)
aux(seen-6, have-4)
neg(seen-6, not-5)
root(ROOT-0, seen-6)
dep(seen-6, it-7)
advmod(it-7, since-8)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH No))
    (, ,)
    (NP (NN ma'am))
    (. .) ('' '')))

discourse(ma'am-4, No-2)
root(ROOT-0, ma'am-4)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP you))
    (VP (VBP do) (RB not)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP it))
            (VP (VBZ is))))))
    (. ?) ('' '')))

cc(know-6, And-2)
nsubj(know-6, you-3)
aux(know-6, do-4)
neg(know-6, not-5)
root(ROOT-0, know-6)
advmod(is-9, where-7)
nsubj(is-9, it-8)
ccomp(know-6, is-9)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP George)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, George-2)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH No))
    (, ,)
    (ADVP (RB sir))
    (. .)))

discourse(sir-4, No-2)
root(ROOT-0, sir-4)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP should)
      (NP (PRP I)))
    (. ?) ('' '')))

advmod(should-2, How-1)
root(ROOT-0, should-2)
nsubj(should-2, I-3)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP
      (ADVP (RB never))
      (VBD touched)
      (NP (PRP it)))
    (. ?) ('' '')))

nsubj(touched-4, You-2)
neg(touched-4, never-3)
root(ROOT-0, touched-4)
dobj(touched-4, it-5)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB say)
          (SBAR (IN that) (, ,)
            (S
              (NP (NN sir))
              (: ;)
              (NP (PRP I))
              (VP (VBD brought)
                (S
                  (NP (PRP it))
                  (NP (PRP him)))
                (PP (IN from)
                  (NP (PRP$ his) (NN closet)))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD sent)
        (NP (PRP me))
        (PP (IN for)
          (NP (PRP it)))))
    (. .) ('' '')))

nsubj(say-5, I-2)
aux(say-5, can-3)
neg(say-5, not-4)
root(ROOT-0, say-5)
mark(brought-11, that-6)
nsubj(brought-11, sir-8)
nsubj(brought-11, I-10)
ccomp(say-5, brought-11)
nsubj(him-13, it-12)
xcomp(brought-11, him-13)
poss(closet-16, his-15)
prep_from(brought-11, closet-16)
nsubj(sent-19, he-18)
parataxis(say-5, sent-19)
dobj(sent-19, me-20)
prep_for(sent-19, it-22)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (SBAR
          (S
            (VP (MD may)
              (VP (VB have)
                (VP (VBN become)
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (. ?) ('' '')))

dobj(think-5, What-2)
aux(think-5, do-3)
nsubj(think-5, you-4)
root(ROOT-0, think-5)
aux(become-8, may-6)
aux(become-8, have-7)
ccomp(think-5, become-8)
prep_of(become-8, it-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know) (, ,)
        (ADVP (RB sir))))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
advmod(know-5, sir-7)

(ROOT
  (S (`` ``)
    (ADVP (RB Would))
    (NP (PRP you))
    (VP (VBP allow)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB make)
            (NP (DT a) (JJ thorough) (NN search))
            (PP (IN in)
              (NP (DT the) (NN place)))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (VP
                    (ADVP (RB last))
                    (VBN seen)))))))))
    (. ?) ('' '')))

advmod(allow-4, Would-2)
nsubj(allow-4, you-3)
root(ROOT-0, allow-4)
dobj(allow-4, me-5)
nsubj(make-7, me-5)
aux(make-7, to-6)
xcomp(allow-4, make-7)
det(search-10, a-8)
amod(search-10, thorough-9)
dobj(make-7, search-10)
det(place-13, the-12)
prep_in(make-7, place-13)
advmod(seen-18, where-14)
nsubjpass(seen-18, it-15)
auxpass(seen-18, was-16)
advmod(seen-18, last-17)
advcl(make-7, seen-18)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP George))
      (, ,)
      (S
        (VP (VBG turning)
          (PP (TO to)
            (NP (PRP$ his) (NN cousin))))))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, George-2)
vmod(asked-1, turning-4)
poss(cousin-7, his-6)
prep_to(turning-4, cousin-7)

(ROOT
  (S (`` ``)
    (ADVP (IN By))
    (NP (DT all))
    (VP (VBZ means))
    (. .)))

advmod(means-4, By-2)
nsubj(means-4, all-3)
root(ROOT-0, means-4)

(ROOT
  (S
    (ADVP (RB Dawtie))
    (, ,)
    (VP (VB go)
      (CC and)
      (VB help)
      (NP (NNP Mr.) (NNP Crawford))
      (S
        (VP (TO to)
          (VP (VB look)))))
    (. .) ('' '')))

advmod(go-3, Dawtie-1)
root(ROOT-0, go-3)
conj_and(go-3, help-5)
nn(Crawford-7, Mr.-6)
dobj(go-3, Crawford-7)
aux(look-9, to-8)
vmod(go-3, look-9)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Please))
      (, ,)
      (VP (VB ma'am)))
    (, ,)
    (NP (PRP it))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (ADVP (RB there))))
    (. .)))

discourse(ma'am-4, Please-2)
ccomp(be-9, ma'am-4)
nsubj(be-9, it-6)
aux(be-9, ca-7)
neg(be-9, n't-8)
root(ROOT-0, be-9)
advmod(be-9, there-10)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN had)
          (NP (DT the) (NN carpet))
          (ADVP (RB up)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN floor))
      (VP (VBD scrubbed)))
    (. .)))

nsubj(had-3, We-1)
aux(had-3, 've-2)
root(ROOT-0, had-3)
det(carpet-5, the-4)
dobj(had-3, carpet-5)
advmod(had-3, up-6)
det(floor-10, the-9)
nsubj(scrubbed-11, floor-10)
conj_and(had-3, scrubbed-11)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (DT a) (NN hole))
        (CC or)
        (NP
          (NP
            (NP (DT a) (NN corner))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP have) (RB n't)
                  (VP (VBN been)
                    (PP (IN into)))))))
          (: --)
          (CC and)
          (NP (DT that) (NN yesterday)))))
    (. .) ('' '')))

expl('s-2, There-1)
root(ROOT-0, 's-2)
neg('s-2, not-3)
det(hole-5, a-4)
nsubj('s-2, hole-5)
det(corner-8, a-7)
nsubj('s-2, corner-8)
conj_or(hole-5, corner-8)
prep_into(been-12, corner-8)
nsubj(been-12, we-9)
aux(been-12, have-10)
neg(been-12, n't-11)
rcmod(corner-8, been-12)
det(yesterday-17, that-16)
conj_or(hole-5, yesterday-17)
conj_and(corner-8, yesterday-17)
prep_into(been-12, yesterday-17)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP We))
      (VP (MD must)
        (VP (VB find)
          (NP (PRP it)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP George))
    (. .)))

nsubj(find-4, We-2)
aux(find-4, must-3)
ccomp(said-8, find-4)
dobj(find-4, it-5)
root(ROOT-0, said-8)
nsubj(said-8, George-9)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD must)
      (VP (VB be)
        (PP (IN in)
          (NP (DT the) (NN house)))))
    (. .) ('' '')))

nsubj(be-4, It-2)
aux(be-4, must-3)
root(ROOT-0, be-4)
det(house-7, the-6)
prep_in(be-4, house-7)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP
        (VP (MD must))
        (, ,)
        (VP (VBP sir))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Dawtie))
    (. .)))

nsubj(must-3, It-2)
ccomp(said-8, must-3)
dep(must-3, sir-5)
root(ROOT-0, said-8)
nsubj(said-8, Dawtie-9)

(ROOT
  (S (CC But)
    (PRN
      (NP (NNP George))
      (VP
        (ADVP (RBR more) (IN than))
        (VBD doubted)
        (NP (PRP it))))
    (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do)
        (VP (VB believe))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said))))
    (, ,) (`` ``)
    (NP (DT the) (NN laird))
    (VP (MD would) (RB rather)
      (VP (VB have)
        (VP (VBN lost)
          (NP (PRP$ his) (JJ whole) (NN collection)))))
    (. .) ('' '')))

cc(lost-22, But-1)
nsubj(doubted-5, George-2)
advmod(than-4, more-3)
advmod(doubted-5, than-4)
parataxis(lost-22, doubted-5)
dobj(doubted-5, it-6)
nsubj(believe-10, I-8)
aux(believe-10, do-9)
ccomp(lost-22, believe-10)
nsubj(said-14, he-13)
parataxis(lost-22, said-14)
det(laird-18, the-17)
nsubj(lost-22, laird-18)
aux(lost-22, would-19)
advmod(lost-22, rather-20)
aux(lost-22, have-21)
root(ROOT-0, lost-22)
poss(collection-25, his-23)
amod(collection-25, whole-24)
dobj(lost-22, collection-25)

(ROOT
  (S (`` ``)
    (ADVP (RB Indeed))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD would)))))
    (. .) ('' '')))

advmod(think-7, Indeed-2)
advmod(think-7, sir-4)
nsubj(think-7, I-6)
root(ROOT-0, think-7)
nsubj(would-9, he-8)
ccomp(think-7, would-9)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (VBP have)
      (VP (VBN talked)
        (PP (TO to)
          (NP (PRP him)))
        (PP (IN about)
          (NP (PRP it)))))
    (. ?) ('' '')))

advmod(talked-5, Then-2)
nsubj(talked-5, you-3)
aux(talked-5, have-4)
root(ROOT-0, talked-5)
prep_to(talked-5, him-7)
prep_about(talked-5, it-9)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP
      (VP (VBP have))
      (, ,)
      (NP
        (NP (NN sir))
        (, ,) ('' '')
        (VP (VBN answered)
          (NP (NNP Dawtie))
          (, ,)
          (S
            (ADJP (JJ sorry))
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBD had)
                  (VP (VBN brought)
                    (PP (IN out)
                      (NP (DT the) (NN question)))))))))))
    (. .)))

discourse(have-5, Yes-2)
nsubj(have-5, I-4)
root(ROOT-0, have-5)
dobj(have-5, sir-7)
vmod(sir-7, answered-10)
dobj(answered-10, Dawtie-11)
dep(brought-16, sorry-13)
nsubj(brought-16, she-14)
aux(brought-16, had-15)
dep(answered-10, brought-16)
det(question-19, the-18)
prep_out(brought-16, question-19)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP you))
    (VP (VBP know)
      (NP
        (NP (DT the) (NN worth))
        (PP (IN of)
          (NP (DT the) (NN thing)))))
    (. ?) ('' '')))

cc(know-4, And-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
det(worth-6, the-5)
dobj(know-4, worth-6)
det(thing-9, the-8)
prep_of(worth-6, thing-9)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP
        (NP (NN sir))
        (: ;)
        (NP (DT that)))
      (VP (VBZ is) (, ,)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP (VB know)
                (SBAR
                  (WHADJP (WRB how) (JJ much))
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (ADJP (JJ worth)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB say)
          (NP (NNS pounds)
            (CC and)
            (NNS pounds)))))
    (. .) ('' '')))

discourse(is-7, Yes-2)
nsubj(is-7, sir-4)
dep(sir-4, that-6)
root(ROOT-0, is-7)
nsubj(know-12, I-9)
aux(know-12, do-10)
neg(know-12, n't-11)
ccomp(is-7, know-12)
advmod(much-14, how-13)
dep(worth-17, much-14)
nsubj(worth-17, it-15)
cop(worth-17, was-16)
ccomp(know-12, worth-17)
nsubj(say-22, I-20)
aux(say-22, should-21)
conj_but(is-7, say-22)
dobj(say-22, pounds-23)
dobj(say-22, pounds-25)
conj_and(pounds-23, pounds-25)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (, ,)
    (NP
      (NP (NNP Dawtie))
      (PRN (, ,)
        (S
          (NP (PRP I))
          (VP (MD must)
            (VP (VB ask)
              (NP (PRP you))
              (ADVP (RB again)))))
        (, ,)))
    (VP (VBD _)
      (SBAR
        (SBARQ
          (WHADVP (WRB where))
          (SQ (VBZ is)
            (NP (PRP it)))
          (. ?))))))

advmod(_-12, Then-2)
nsubj(_-12, Dawtie-4)
nsubj(ask-8, I-6)
aux(ask-8, must-7)
dep(Dawtie-4, ask-8)
dobj(ask-8, you-9)
advmod(ask-8, again-10)
root(ROOT-0, _-12)
advmod(is-14, where-13)
dep(_-12, is-14)
nsubj(is-14, it-15)

(ROOT
  (S
    (FRAG
      (ADJP (JJ _)))
    ('' '')
    (NP (`` ``) (PRP I))
    (VP (VBP know)
      (NP (NN nothing))
      (PP (IN about)
        (NP (PRP it)))
      (, ,)
      (ADVP (RB sir)))
    (. .)))

dep(know-5, _-1)
nsubj(know-5, I-4)
root(ROOT-0, know-5)
dobj(know-5, nothing-6)
prep_about(know-5, it-8)
advmod(know-5, sir-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD did)))))
    (. !) ('' '')))

nsubj(wish-2, I-1)
root(ROOT-0, wish-2)
nsubj(did-4, I-3)
ccomp(wish-2, did-4)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB wish)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD did))))))
    (. ?) ('' '')))

advmod(wish-5, Why-2)
aux(wish-5, do-3)
nsubj(wish-5, you-4)
root(ROOT-0, wish-5)
nsubj(did-7, you-6)
ccomp(wish-5, did-7)

(ROOT
  (S (`` ``)
    (FRAG
      (ADJP (JJ Because))
      (: --))
    ('' '')
    (VP
      (VP (VBD began)
        (NP (NNP Dawtie)))
      (, ,)
      (CC and)
      (VP (VBN stopped)
        (S
          (ADJP (JJ short)))
        (: ;)
        (S
          (NP (PRP she))
          (VP (VBN shrunk)
            (PP
              (PP (IN from)
                (S
                  (VP (VBG impugning)
                    (NP
                      (NP (DT the) (NN honesty))
                      (PP (IN of)
                        (NP (DT the) (JJ dead) (NN man)))))))
              (: --)
              (CC and)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN presence))
                  (PP (IN of)
                    (NP (PRP$ his) (NN daughter))))))))))
    (. .)))

dep(began-5, Because-2)
root(ROOT-0, began-5)
dobj(began-5, Dawtie-6)
conj_and(began-5, stopped-9)
acomp(stopped-9, short-10)
nsubj(shrunk-13, she-12)
nsubj(shrunk-13', she-12)
parataxis(stopped-9, shrunk-13)
parataxis(stopped-9, shrunk-13')
conj_and(shrunk-13, shrunk-13')
prepc_from(shrunk-13, impugning-15)
det(honesty-17, the-16)
dobj(impugning-15, honesty-17)
det(man-21, the-19)
amod(man-21, dead-20)
prep_of(honesty-17, man-21)
det(presence-26, the-25)
prep_in(shrunk-13', presence-26)
poss(daughter-29, his-28)
prep_of(presence-26, daughter-29)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ looks)
        (NP (DT a) (JJ little) (NN fishy))))
    (, ,)
    (VP (VBP do) (RB n't))
    (NP
      (NP (PRP it))
      (, ,)
      (NP (NNP Dawtie)))
    (. ?)))

nsubj(looks-3, It-2)
ccomp(do-8, looks-3)
det(fishy-6, a-4)
amod(fishy-6, little-5)
dobj(looks-3, fishy-6)
root(ROOT-0, do-8)
neg(do-8, n't-9)
nsubj(do-8, it-10)
appos(it-10, Dawtie-12)

(ROOT
  (FRAG
    (WHADVP (WRB Why))
    (RB not)
    (VP (VB speak)
      (ADVP (RB straight))
      (ADVP (RB out)))
    (. ?)))

dep(speak-3, Why-1)
neg(speak-3, not-2)
root(ROOT-0, speak-3)
advmod(speak-3, straight-4)
advmod(speak-3, out-5)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (MD would) (RB not)
      (VP (VB mind)
        (S
          (VP (VBG searching)
            (NP
              (NP
                (NP (NNP Meg) (POS 's))
                (NN trunk))
              (PP (IN for)
                (NP (PRP me))))))))
    (. .)))

advmod(mind-5, Perhaps-1)
nsubj(mind-5, you-2)
aux(mind-5, would-3)
neg(mind-5, not-4)
root(ROOT-0, mind-5)
xcomp(mind-5, searching-6)
poss(trunk-9, Meg-7)
dobj(searching-6, trunk-9)
prep_for(trunk-9, me-11)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (MD may)
        (VP (VB have)
          (VP (VBN taken)
            (NP (PRP it))
            (PP (IN for)
              (NP
                (NP (DT a) (NN bit))
                (PP (IN of)
                  (NP (JJ old) (NN brass)))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .) ('' '')))

nsubj(taken-4, She-1)
aux(taken-4, may-2)
aux(taken-4, have-3)
ccomp(know-14, taken-4)
dobj(taken-4, it-5)
det(bit-8, a-7)
prep_for(taken-4, bit-8)
amod(brass-11, old-10)
prep_of(bit-8, brass-11)
nsubj(know-14, you-13)
root(ROOT-0, know-14)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB answer)
          (PP (IN for)
            (NP
              (NP (PRP$ my) (NNS servants))
              (, ,)
              (NP (NNP Mr.) (NNP Crawford)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Alexa))
    (. .)))

nsubj(answer-4, I-2)
aux(answer-4, will-3)
ccomp(said-13, answer-4)
poss(servants-7, my-6)
prep_for(answer-4, servants-7)
nn(Crawford-10, Mr.-9)
appos(servants-7, Crawford-10)
root(ROOT-0, said-13)
nsubj(said-13, Alexa-14)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will) (RB not)
      (VP (VB have)
        (ADJP (JJ old)
          (SBAR
            (S
              (NP
                (NP (NNP Meg) (POS 's))
                (NN box))
              (VP (VBD searched)))))))
    (. .) ('' '')))

nsubj(old-6, I-2)
aux(old-6, will-3)
neg(old-6, not-4)
dep(old-6, have-5)
root(ROOT-0, old-6)
poss(box-9, Meg-7)
nsubj(searched-10, box-9)
ccomp(old-6, searched-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (JJ desirable)
          (S
            (VP (TO to)
              (VP (VB get)
                (ADJP (JJ rid))
                (PP (IN of)
                  (NP (DT any) (NN suspicion)))))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP George))
    (. .)))

nsubj(desirable-4, It-2)
nsubj(rid-7, It-2)
cop(desirable-4, is-3)
ccomp(replied-13, desirable-4)
aux(rid-7, to-5)
dep(rid-7, get-6)
xcomp(desirable-4, rid-7)
det(suspicion-10, any-9)
prep_of(rid-7, suspicion-10)
root(ROOT-0, replied-13)
nsubj(replied-13, George-14)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (NN none))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Alexa))
    (. .)))

nsubj(have-3, I-2)
ccomp(returned-7, have-3)
dobj(have-3, none-4)
root(ROOT-0, returned-7)
nsubj(returned-7, Alexa-8)

(ROOT
  (S
    (S
      (NP (NNP George))
      (VP (VBD was)
        (ADJP (JJ silent)
          (SBAR
            (SINV (`` ``)
              (S
                (NP (PRP I))
                (VP (MD will)
                  (VP (VB ask)
                    (NP (NNP Meg))
                    (, ,)
                    (SBAR (IN if)
                      (S
                        (NP (PRP you))
                        (VP (JJ like))))
                    (, ,)
                    (ADVP (RB sir)))))
              (, ,) ('' '')
              (VP (VBD said))
              (NP (NNP Dawtie)))))))
    (: ;) (`` ``)
    (S (CC but)
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD will)
                (VP (VB be)
                  (NP (DT no) (NN use)))))))))
    (. .)))

nsubj(silent-3, George-1)
cop(silent-3, was-2)
root(ROOT-0, silent-3)
nsubj(ask-7, I-5)
aux(ask-7, will-6)
ccomp(said-17, ask-7)
dobj(ask-7, Meg-8)
mark(like-12, if-10)
nsubj(like-12, you-11)
advcl(ask-7, like-12)
advmod(ask-7, sir-14)
dep(silent-3, said-17)
nsubj(said-17, Dawtie-18)
cc(sure-24, but-21)
nsubj(sure-24, I-22)
cop(sure-24, am-23)
parataxis(silent-3, sure-24)
nsubj(use-29, it-25)
aux(use-29, will-26)
cop(use-29, be-27)
neg(use-29, no-28)
ccomp(sure-24, use-29)

(ROOT
  (S
    (NP
      (NP (DT A) (NN servant))
      (PP (IN in)
        (NP (DT this) (NN house))))
    (ADVP (RB soon))
    (VP (VBZ learns)
      (S (RB not)
        (VP (TO to)
          (VP (VB go)
            (PP (IN by)
              (NP
                (NP (DT the) (NN look))
                (PP (IN of)
                  (NP (NNS things)))))))))
    (. .)))

det(servant-2, A-1)
nsubj(learns-7, servant-2)
nsubj(go-10, servant-2)
det(house-5, this-4)
prep_in(servant-2, house-5)
advmod(learns-7, soon-6)
root(ROOT-0, learns-7)
neg(go-10, not-8)
aux(go-10, to-9)
xcomp(learns-7, go-10)
det(look-13, the-12)
prep_by(go-10, look-13)
prep_of(look-13, things-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP do) (RB n't)
      (VP (VB treat)
        (NP (NN anything))
        (ADVP
          (ADVP (RB here) (RB as))
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (VP (VBD knew)
                (NP
                  (NP (DT all))
                  (PP (IN about)
                    (NP (PRP it))))))))))
    (. .) ('' '')))

nsubj(treat-4, We-1)
aux(treat-4, do-2)
neg(treat-4, n't-3)
root(ROOT-0, treat-4)
dobj(treat-4, anything-5)
advmod(as-7, here-6)
advmod(treat-4, as-7)
mark(knew-10, if-8)
nsubj(knew-10, we-9)
advcl(as-7, knew-10)
dobj(knew-10, all-11)
prep_about(all-11, it-13)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB When))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB see)
        (NP (DT the) (NN goblet))
        (ADVP (RB first))))
    (. ?) ('' '')))

advmod(see-5, When-2)
aux(see-5, did-3)
nsubj(see-5, you-4)
root(ROOT-0, see-5)
det(goblet-7, the-6)
dobj(see-5, goblet-7)
advmod(see-5, first-8)

(ROOT
  (NP (NNP persisted) (NNP George) (. .)))

nn(George-2, persisted-1)
root(ROOT-0, George-2)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Goblet))
    (, ,)
    (NP (NN sir))
    (. ?)))

root(ROOT-0, Goblet-2)
dep(Goblet-2, sir-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD were)
            (VP (VBG speaking)
              (PP (IN of)
                (NP (DT the) (JJ gold) (NN cup))))))))
    (. .) ('' '')))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(speaking-5, you-3)
aux(speaking-5, were-4)
ccomp(thought-2, speaking-5)
det(cup-9, the-7)
amod(cup-9, gold-8)
prep_of(speaking-5, cup-9)

(ROOT
  (S
    (PP (IN By)
      (NP (JJ _) (NN goblet)))
    (NP (NNP _) (NNP Dawtie))
    (VP (VBD understood)
      (NP (DT a) (JJ small) (NN iron) (NN pot)))
    (. .)))

amod(goblet-3, _-2)
prep_by(understood-6, goblet-3)
nn(Dawtie-5, _-4)
nsubj(understood-6, Dawtie-5)
root(ROOT-0, understood-6)
det(pot-10, a-7)
amod(pot-10, small-8)
nn(pot-10, iron-9)
dobj(understood-6, pot-10)

(ROOT
  (S (`` ``)
    (NP
      (NP
        (NP
          (NP (NNP Goblet))
          (PRN (, ,)
            (CC or)
            (NN cup) (, ,)))
        (CC or)
        (NP (NN chalice)))
      (PRN (: --)
        (SBAR
          (WHNP (WDT whatever))
          (S
            (NP (PRP you))
            (VP (VBP like)
              (S
                (VP (TO to)
                  (VP (VB call)
                    (NP (PRP it))))))))
        (: --)))
    (NP (PRP I))
    (VP (VBP ask)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP you))
          (VP (VBD came)
            (S
              (VP (TO to)
                (VP (VB know)
                  (PP (IN about)
                    (NP (PRP it))))))))))
    (. .) ('' '')))

nsubj(ask-18, Goblet-2)
cc(cup-5, or-4)
dep(Goblet-2, cup-5)
conj_or(Goblet-2, chalice-8)
nsubj(ask-18, chalice-8)
dobj(like-12, whatever-10)
nsubj(call-14, whatever-10)
nsubj(like-12, you-11)
dep(Goblet-2, like-12)
aux(call-14, to-13)
xcomp(like-12, call-14)
dobj(call-14, it-15)
nsubj(ask-18, I-17)
root(ROOT-0, ask-18)
advmod(came-21, how-19)
nsubj(came-21, you-20)
nsubj(know-23, you-20)
ccomp(ask-18, came-21)
aux(know-23, to-22)
xcomp(came-21, know-23)
prep_about(know-23, it-25)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP know)
      (ADJP (RB very) (JJ little))
      (PP (IN about)
        (NP (PRP it))))
    (. .) ('' '')))

nsubj(know-3, I-2)
root(ROOT-0, know-3)
advmod(little-5, very-4)
acomp(know-3, little-5)
prep_about(know-3, it-7)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ plain)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP know)
              (ADVP
                (ADVP (RBR more))
                (SBAR (IN than)
                  (S
                    (NP (PRP you))
                    (VP (VBP care)
                      (S
                        (VP (TO to)
                          (VP (VB tell)))))))))))))
    (. .)))

nsubj(plain-4, It-2)
cop(plain-4, is-3)
root(ROOT-0, plain-4)
nsubj(know-6, you-5)
ccomp(plain-4, know-6)
advmod(know-6, more-7)
mark(care-10, than-8)
nsubj(care-10, you-9)
nsubj(tell-12, you-9)
advcl(more-7, care-10)
aux(tell-12, to-11)
xcomp(care-10, tell-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD will) (RB not)
          (VP (VB answer)
            (NP (PRP me))))))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB answer)
              (NP (DT a) (NN magistrate)))))))
    (. .) ('' '')))

mark(answer-5, If-1)
nsubj(answer-5, you-2)
aux(answer-5, will-3)
neg(answer-5, not-4)
advcl(have-9, answer-5)
dobj(answer-5, me-6)
nsubj(have-9, you-7)
nsubj(answer-11, you-7)
aux(have-9, will-8)
root(ROOT-0, have-9)
aux(answer-11, to-10)
xcomp(have-9, answer-11)
det(magistrate-13, a-12)
dobj(answer-11, magistrate-13)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP I))
      (VP (MD will)
        (VP (VB answer)
          (NP (DT a) (NN magistrate)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Dawtie))
    (, ,)
    (S
      (VP (VBG beginning)
        (S
          (VP (TO to)
            (VP (VB grow)
              (ADJP (JJ angry)))))))
    (. .)))

advmod(answer-5, Then-2)
nsubj(answer-5, I-3)
aux(answer-5, will-4)
ccomp(said-10, answer-5)
det(magistrate-7, a-6)
dobj(answer-5, magistrate-7)
root(ROOT-0, said-10)
nsubj(said-10, Dawtie-11)
vmod(said-10, beginning-13)
aux(grow-15, to-14)
xcomp(beginning-13, grow-15)
acomp(grow-15, angry-16)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBD had)
      (ADVP (RBR better))
      (S
        (VP (VB answer)
          (NP (PRP me))
          (, ,)
          (NP (NNP Dawtie)))))
    (. .)))

nsubj(had-3, You-2)
root(ROOT-0, had-3)
advmod(had-3, better-4)
ccomp(had-3, answer-5)
dobj(answer-5, me-6)
dobj(answer-5, Dawtie-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJR easier))
        (PP (IN for)
          (NP (PRP you)))))
    (. .)))

nsubj(easier-4, It-1)
aux(easier-4, will-2)
cop(easier-4, be-3)
root(ROOT-0, easier-4)
prep_for(easier-4, you-6)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (PP (IN about)
          (NP (DT the) (NN cup)))))
    (. ?) ('' '')))

dobj(know-4, What-1)
aux(know-4, do-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
det(cup-7, the-6)
prep_about(know-4, cup-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (UCP
              (ADJP (RB not)
                (SBAR
                  (S
                    (NP (NN master))
                    (VP
                      (VP (VBZ 's))
                      (, ,)
                      (CC and)
                      (VP (VBZ is) (RB not)
                        (VP (VBN yours) (: --)
                          (ADVP (RB really))))))))
              (CC and)
              (ADVP (RB truly)))))))
    (. .) ('' '')))

nsubj(know-3, I-2)
root(ROOT-0, know-3)
nsubj(not-6, it-4)
cop(not-6, was-5)
ccomp(know-3, not-6)
nsubj('s-8, master-7)
nsubjpass(yours-13, master-7)
ccomp(not-6, 's-8)
auxpass(yours-13, is-11)
neg(yours-13, not-12)
ccomp(not-6, yours-13)
conj_and('s-8, yours-13)
advmod(yours-13, really-15)
ccomp(know-3, truly-17)
advmod(not-6, truly-17)
conj_and(not-6, truly-17)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (MD can)
      (VP (VB have)
        (VP (VBN put)
          (NP (PDT such) (DT a) (NN lie))
          (PP (IN in)
            (NP (PRP$ your) (NN head))))))
    (. ?) ('' '')))

nsubj(put-5, What-2)
aux(put-5, can-3)
aux(put-5, have-4)
root(ROOT-0, put-5)
predet(lie-8, such-6)
det(lie-8, a-7)
dobj(put-5, lie-8)
poss(head-11, your-10)
prep_in(put-5, head-11)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VB be)
          (NP
            (NP (DT a) (NN lie))
            (, ,)
            (NP (NN sir))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBN told)
        (PP (IN in)
          (NP (JJ plain) (NN print)))))
    (. .) ('' '')))

mark(lie-6, If-2)
nsubj(lie-6, it-3)
cop(lie-6, be-4)
det(lie-6, a-5)
advcl(told-12, lie-6)
appos(lie-6, sir-8)
nsubjpass(told-12, it-10)
auxpass(told-12, is-11)
root(ROOT-0, told-12)
amod(print-15, plain-14)
prep_in(told-12, print-15)

(ROOT
  (INTJ (`` ``) (UH Where) (. ?) ('' '')))

root(ROOT-0, Where-2)

(ROOT
  (S (CC But)
    (NP
      (NP (NNP Dawtie))
      (VP (VBN judged)
        (NP (PRP it))))
    (VP (NN time)
      (S
        (VP (TO to)
          (VP (VB stop)))))
    (. .)))

cc(time-5, But-1)
nsubj(time-5, Dawtie-2)
nsubj(stop-7, Dawtie-2)
vmod(Dawtie-2, judged-3)
dobj(judged-3, it-4)
root(ROOT-0, time-5)
aux(stop-7, to-6)
xcomp(time-5, stop-7)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBP bethought)
      (NP (PRP herself))
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (MD would) (RB not)
            (VP (VB have)
              (VP (VBD said)
                (S
                  (ADJP (RB so) (JJ much))
                  (SBAR
                    (SINV (VBD had)
                      (NP (PRP she))
                      (RB not)
                      (VP (VBN been)
                        (ADJP (JJ angry))))))))))))
    (. .)))

nsubj(bethought-2, She-1)
root(ROOT-0, bethought-2)
dobj(bethought-2, herself-3)
mark(said-9, that-4)
nsubj(said-9, she-5)
aux(said-9, would-6)
neg(said-9, not-7)
aux(said-9, have-8)
ccomp(bethought-2, said-9)
advmod(much-11, so-10)
dep(angry-16, much-11)
aux(angry-16, had-12)
nsubj(angry-16, she-13)
dep(angry-16, not-14)
cop(angry-16, been-15)
acomp(said-9, angry-16)

(ROOT
  (S (`` ``)
    (NP (NNP Sir))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP she))
        (VP (VBD answered)))
      (, ,))
    (`` ``)
    (NP (PRP you))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBG asking)
          (SBAR
            (S
              (S
                (NP (PRP me))
                (VP (VBZ questions)
                  (NP (PDT all) (DT this) (NN time))))
              (, ,)
              (CC and)
              (S
                (NP (PRP I))
                (VP (VBP have)
                  (VP (VBN been)
                    (VP (VBG answering)
                      (NP (PRP them))))))
              (: ;)
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (NP (PRP$ your) (NN turn)
                    (S
                      (VP (TO to)
                        (VP (VB answer)
                          (NP (PRP me))
                          (NP (CD one)))))))))))))
    (. .) ('' '')))

nsubj(asking-12, Sir-2)
nsubj(answered-6, she-5)
parataxis(asking-12, answered-6)
nsubj(asking-12, you-9)
aux(asking-12, have-10)
aux(asking-12, been-11)
root(ROOT-0, asking-12)
nsubj(questions-14, me-13)
dep(asking-12, questions-14)
predet(time-17, all-15)
det(time-17, this-16)
dobj(questions-14, time-17)
nsubj(answering-23, I-20)
aux(answering-23, have-21)
aux(answering-23, been-22)
dep(asking-12, answering-23)
conj_and(questions-14, answering-23)
dobj(answering-23, them-24)
nsubj(turn-29, it-26)
cop(turn-29, is-27)
poss(turn-29, your-28)
dep(asking-12, turn-29)
conj_and(questions-14, turn-29)
parataxis(questions-14, turn-29)
aux(answer-31, to-30)
vmod(turn-29, answer-31)
iobj(answer-31, me-32)
dobj(answer-31, one-33)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP see))))
    (VP (VBZ proper))
    (. .) ('' '')))

mark(see-4, If-2)
nsubj(see-4, I-3)
csubj(proper-5, see-4)
root(ROOT-0, proper-5)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Did))
    (SQ
      (NP (PRP$ my) (JJ old) (NN master))
      (VP (VB tell)
        (NP (PRP you))
        (NP
          (NP (DT the) (NN history))
          (PP (IN of)
            (NP (DT that) (NN cup))))))
    (. ?) ('' '')))

advmod(tell-6, Did-2)
poss(master-5, my-3)
amod(master-5, old-4)
nsubj(tell-6, master-5)
root(ROOT-0, tell-6)
iobj(tell-6, you-7)
det(history-9, the-8)
dobj(tell-6, history-9)
det(cup-12, that-11)
prep_of(history-9, cup-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB choose)
        (S
          (VP (TO to)
            (VP (VB answer)
              (NP (DT the) (NN question)))))))
    (. .) ('' '')))

nsubj(choose-5, I-2)
nsubj(answer-7, I-2)
aux(choose-5, do-3)
neg(choose-5, not-4)
root(ROOT-0, choose-5)
aux(answer-7, to-6)
xcomp(choose-5, answer-7)
det(question-9, the-8)
dobj(answer-7, question-9)

(ROOT
  (S (`` ``)
    (VP (VB Very)
      (ADVP (RB well))
      (, ,) (VB sir))
    (. .) ('' '')))

root(ROOT-0, Very-2)
advmod(Very-2, well-3)
dep(Very-2, sir-5)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD turned)
      (S
        (VP (TO to)
          (VP (VB leave)
            (NP (DT the) (NN room))))))
    (. .)))

nsubj(turned-2, Dawtie-1)
nsubj(leave-4, Dawtie-1)
root(ROOT-0, turned-2)
aux(leave-4, to-3)
xcomp(turned-2, leave-4)
det(room-6, the-5)
dobj(leave-4, room-6)

(ROOT
  (S (`` ``)
    (VP (VB Stop))
    (. !)))

root(ROOT-0, Stop-2)

(ROOT
  (S
    (VP (VB stop))
    (. !) ('' '')))

root(ROOT-0, stop-1)

(ROOT
  (NP
    (NP (NNP cried) (NNP Crawford))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have) (RB not)
        (VP (VBN done)
          (PP (IN with)
            (NP (PRP you)))
          (ADVP (RB yet)))))
    (, ,)
    (NP (PRP$ my) (NN girl))
    (. .)))

nn(Crawford-2, cried-1)
root(ROOT-0, Crawford-2)
nsubj(done-8, I-5)
aux(done-8, have-6)
neg(done-8, not-7)
dep(Crawford-2, done-8)
prep_with(done-8, you-10)
advmod(done-8, yet-11)
poss(girl-14, my-13)
appos(Crawford-2, girl-14)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have) (RB not)
      (VP (VBN told)
        (NP (PRP me))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBD meant)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP (VBD said)
                    (SBAR
                      (S
                        (NP (DT the) (NN cup))
                        (VP (VBD did) (RB not)
                          (VP (VB belong)
                            (PP (TO to)
                              (NP (DT the) (NN laird)))))))))))))))
    (. .) ('' '')))

nsubj(told-4, You-1)
aux(told-4, have-2)
neg(told-4, not-3)
root(ROOT-0, told-4)
dobj(told-4, me-5)
dobj(meant-8, what-6)
nsubj(meant-8, you-7)
dep(told-4, meant-8)
advmod(said-11, when-9)
nsubj(said-11, you-10)
advcl(meant-8, said-11)
det(cup-13, the-12)
nsubj(belong-16, cup-13)
aux(belong-16, did-14)
neg(belong-16, not-15)
ccomp(said-11, belong-16)
det(laird-19, the-18)
prep_to(belong-16, laird-19)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB choose)
          (S
            (VP (TO to)
              (VP (VB answer)
                (NP (DT the) (NN question))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Dawtie))
    (. .)))

nsubj(choose-5, I-2)
nsubj(answer-7, I-2)
aux(choose-5, do-3)
neg(choose-5, not-4)
ccomp(said-12, choose-5)
aux(answer-7, to-6)
xcomp(choose-5, answer-7)
det(question-9, the-8)
dobj(answer-7, question-9)
root(ROOT-0, said-12)
nsubj(said-12, Dawtie-13)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (MD shall)
      (VP (VB answer)
        (NP (PRP it))
        (PP (TO to)
          (NP (DT a) (NN magistrate)))))
    (. .) ('' '')))

advmod(answer-5, Then-2)
nsubj(answer-5, you-3)
aux(answer-5, shall-4)
root(ROOT-0, answer-5)
dobj(answer-5, it-6)
det(magistrate-9, a-8)
prep_to(answer-5, magistrate-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD will))
      (, ,)
      (ADVP (RB sir)))
    (, ,) ('' '')
    (NP (PRP she))
    (VP
      (VP (VBD replied))
      (, ,)
      (CC and)
      (VP (VBD stood)))
    (. .)))

nsubj(will-3, I-2)
ccomp(replied-9, will-3)
advmod(will-3, sir-5)
nsubj(replied-9, she-8)
nsubj(stood-12, she-8)
root(ROOT-0, replied-9)
conj_and(replied-9, stood-12)

(ROOT
  (S
    (NP (NNP Crawford))
    (VP (VBD left)
      (NP (DT the) (NN room)))
    (. .)))

nsubj(left-2, Crawford-1)
root(ROOT-0, left-2)
det(room-4, the-3)
dobj(left-2, room-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD rode)
      (NP (NN home))
      (PP (IN in)
        (NP (DT a) (NN rage))))
    (. .)))

nsubj(rode-2, He-1)
root(ROOT-0, rode-2)
dobj(rode-2, home-3)
det(rage-6, a-5)
prep_in(rode-2, rage-6)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD went)
        (PP (IN about)
          (NP (PRP$ her) (NN work)))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ bright) (NN spot))
            (PP (IN on)
              (NP
                (NP (DT each) (NN cheek))
                (, ,)
                (NP
                  (NP (NN indignant))
                  (PP (IN at)
                    (NP
                      (NP (DT the) (NN man) (POS 's))
                      (NNS rudeness))))))))))
    (, ,)
    (CC but)
    (S
      (VP (VBG praying)
        (S
          (NP (NNP God))
          (VP (TO to)
            (VP
              (VP (VB take)
                (NP (PRP$ her) (NN heart))
                (PP (IN in)
                  (NP (PRP$ His) (NN hand))))
              (, ,)
              (CC and)
              (VP (VB cool)
                (NP
                  (NP (DT the) (NN fever))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(went-2, Dawtie-1)
nsubj(praying-22, Dawtie-1)
root(ROOT-0, went-2)
poss(work-5, her-4)
prep_about(went-2, work-5)
det(spot-9, a-7)
amod(spot-9, bright-8)
prep_with(went-2, spot-9)
det(cheek-12, each-11)
prep_on(spot-9, cheek-12)
appos(cheek-12, indignant-14)
det(man-17, the-16)
poss(rudeness-19, man-17)
prep_at(indignant-14, rudeness-19)
conj_but(went-2, praying-22)
dobj(praying-22, God-23)
nsubj(take-25, God-23)
nsubj(cool-33, God-23)
aux(take-25, to-24)
xcomp(praying-22, take-25)
poss(heart-27, her-26)
dobj(take-25, heart-27)
poss(hand-30, His-29)
prep_in(take-25, hand-30)
xcomp(praying-22, cool-33)
conj_and(take-25, cool-33)
det(fever-35, the-34)
dobj(cool-33, fever-35)
prep_of(fever-35, it-37)

(ROOT
  (S
    (S
      (NP (DT The) (NNS words))
      (VP (VBD rose)
        (PP (IN in)
          (NP (PRP$ her) (NN mind)))))
    (: :) (`` ``)
    (S
      (NP (PRP It))
      (VP (MD must)
        (ADVP (RB needs))
        (VP (VB be)
          (SBAR (IN that)
            (S
              (NP (NNS offenses))
              (VP
                (VP (VBP come))
                (, ,)
                (CC but)
                (VP (JJ woe)
                  (PP (IN onto)
                    (NP
                      (NP (DT that) (NN man))
                      (SBAR
                        (WHPP (IN by)
                          (WHNP (WP whom)))
                        (S
                          (NP (PRP they))
                          (VP (VBP come)))))))))))))
    (. .) ('' '')))

det(words-2, The-1)
nsubj(rose-3, words-2)
root(ROOT-0, rose-3)
poss(mind-6, her-5)
prep_in(rose-3, mind-6)
nsubj(be-12, It-9)
aux(be-12, must-10)
advmod(be-12, needs-11)
parataxis(rose-3, be-12)
mark(come-15, that-13)
nsubj(come-15, offenses-14)
nsubj(woe-18, offenses-14)
ccomp(be-12, come-15)
ccomp(be-12, woe-18)
conj_but(come-15, woe-18)
det(man-21, that-20)
prep_onto(woe-18, man-21)
prep_by(come-25, man-21)
nsubj(come-25, they-24)
rcmod(man-21, come-25)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (ADVP (IN at) (RB once))
        (VP (VBN filled)
          (PP (IN with)
            (NP (NN pity)))
          (PP (IN for)
            (NP
              (NP (DT the) (NN man))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (MD could)
                    (VP (VB side)
                      (PP (IN with)
                        (NP (DT the) (JJ wrong))))))))))))
    (, ,)
    (CC and)
    (SINV
      (VP (VBP want)
        (NP (NN everything)))
      (NP
        (NP (PRP$ his) (JJ own) (NN way))
        (, ,)
        (SBAR (IN for)
          (S (, ,)
            (ADVP (RBR sooner)
              (CC or)
              (RBR later))
            (, ,)
            (NP (NN confusion))
            (VP (MD must)
              (VP (VB be)
                (NP (PRP$ his) (NN portion))))))))
    (: ;)
    (S
      (NP (DT the) (NNP Lord))
      (VP (VBD had)
        (VP (VBN said))))
    (: :) (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP
            (NP (NN nothing))
            (VP (VBN covered)
              (SBAR (IN that)
                (S
                  (VP (MD shall) (RB not)
                    (VP (VB be)
                      (VP (VBN revealed))))))))
          (, ,)
          (CC neither)
          (NP
            (NP (NN hid))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD shall) (RB not)
                  (VP (VB be)
                    (VP (VBN known))))))))))
    (. .) ('' '')))

nsubjpass(filled-5, She-1)
auxpass(filled-5, was-2)
advmod(filled-5, at-3)
advmod(at-3, once-4)
root(ROOT-0, filled-5)
prep_with(filled-5, pity-7)
det(man-10, the-9)
prep_for(filled-5, man-10)
nsubj(side-13, man-10)
aux(side-13, could-12)
rcmod(man-10, side-13)
det(wrong-16, the-15)
prep_with(side-13, wrong-16)
conj_and(filled-5, want-19)
dobj(want-19, everything-20)
poss(way-23, his-21)
amod(way-23, own-22)
nsubj(want-19, way-23)
mark(portion-35, for-25)
advmod(portion-35, sooner-27)
conj_or(sooner-27, later-29)
advmod(portion-35, later-29)
nsubj(portion-35, confusion-31)
aux(portion-35, must-32)
cop(portion-35, be-33)
poss(portion-35, his-34)
dep(way-23, portion-35)
det(Lord-38, the-37)
nsubj(said-40, Lord-38)
aux(said-40, had-39)
conj_and(filled-5, said-40)
expl(is-44, There-43)
conj_and(filled-5, is-44)
parataxis(filled-5, is-44)
nsubj(is-44, nothing-45)
vmod(nothing-45, covered-46)
mark(revealed-51, that-47)
aux(revealed-51, shall-48)
neg(revealed-51, not-49)
auxpass(revealed-51, be-50)
ccomp(covered-46, revealed-51)
dep(nothing-45, neither-53)
conj(nothing-45, hid-54)
nsubjpass(known-59, hid-54)
aux(known-59, shall-56)
neg(known-59, not-57)
auxpass(known-59, be-58)
rcmod(hid-54, known-59)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP He))
      (VP (VBZ needs)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN shamed)))))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP she))
        (VP (VBD said)))
      (, ,))
    (`` ``)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBZ is)
        (NP
          (NP (PRP$ thy) (NN child))
          (: ;)
          (NP
            (NP (NN care))
            (PP (IN for)
              (NP (PRP him))))
          (, ,))
        (ADVP (RB too))))
    (. .) ('' '')))

nsubj(needs-3, He-2)
nsubjpass(shamed-6, He-2)
root(ROOT-0, needs-3)
aux(shamed-6, to-4)
auxpass(shamed-6, be-5)
xcomp(needs-3, shamed-6)
nsubj(said-10, she-9)
dep(needs-3, said-10)
nsubj(child-17, he-14)
cop(child-17, is-15)
poss(child-17, thy-16)
conj_but(needs-3, child-17)
dep(child-17, care-19)
prep_for(care-19, him-21)
advmod(child-17, too-23)

(ROOT
  (S
    (NP (NNP George))
    (VP (VBD felt)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP
            (VP (VBD had) (RB not)
              (VP (VBN borne)
                (NP (DT a) (JJ dignified) (NN part))))
            (, ,)
            (CC and)
            (VP (VBD knew)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (PRP$ his) (JJ last) (NN chance))
                    (PP (IN with)
                      (NP (NNP Alexa))))
                  (VP (VBD was)
                    (VP (VBN gone))))))))))
    (. .)))

nsubj(felt-2, George-1)
root(ROOT-0, felt-2)
mark(borne-7, that-3)
nsubj(borne-7, he-4)
nsubj(knew-13, he-4)
aux(borne-7, had-5)
neg(borne-7, not-6)
ccomp(felt-2, borne-7)
det(part-10, a-8)
amod(part-10, dignified-9)
dobj(borne-7, part-10)
ccomp(felt-2, knew-13)
conj_and(borne-7, knew-13)
mark(gone-21, that-14)
poss(chance-17, his-15)
amod(chance-17, last-16)
nsubjpass(gone-21, chance-17)
prep_with(chance-17, Alexa-19)
auxpass(gone-21, was-20)
ccomp(knew-13, gone-21)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP
        (ADVP (RB too))
        (VBD felt)
        (NP (DT the) (NN situation) (NN unendurable)))
      (, ,)
      (CC and)
      (VP (VBD set)
        (PP (IN about)
          (S
            (VP (VBG removing)
              (NP (PRP$ his) (NN property)))))))
    (. .)))

advmod(felt-4, Then-1)
nsubj(felt-4, he-2)
nsubj(set-10, he-2)
advmod(felt-4, too-3)
root(ROOT-0, felt-4)
det(unendurable-7, the-5)
nn(unendurable-7, situation-6)
dobj(felt-4, unendurable-7)
conj_and(felt-4, set-10)
prepc_about(set-10, removing-12)
poss(property-14, his-13)
dobj(removing-12, property-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD wrote)
        (PP (TO to)
          (NP (NNP Alexa)))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD could)
              (ADVP (RB no) (RB longer))
              (VP (VB doubt)
                (NP (PRP it))))))))
    (NP (PRP her))
    (VP (VBP wish)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP
              (ADJP (JJ rid)
                (PP (IN of)
                  (NP (DT the) (NN collection))))
              (, ,)
              (CC and)
              (ADJP (JJ able)))
            (S
              (VP (TO to)
                (VP (VB use)
                  (NP (DT the) (NN room)))))))))
    (. .)))

nsubj(wrote-2, He-1)
dep(wish-13, wrote-2)
prep_to(wrote-2, Alexa-4)
mark(doubt-10, that-5)
nsubj(doubt-10, he-6)
aux(doubt-10, could-7)
neg(longer-9, no-8)
advmod(doubt-10, longer-9)
ccomp(wrote-2, doubt-10)
dobj(doubt-10, it-11)
nsubj(wish-13, her-12)
nsubj(rid-16, her-12)
nsubj(able-22, her-12)
nsubj(use-24, her-12)
root(ROOT-0, wish-13)
aux(rid-16, to-14)
cop(rid-16, be-15)
xcomp(wish-13, rid-16)
det(collection-19, the-18)
prep_of(rid-16, collection-19)
xcomp(wish-13, able-22)
conj_and(rid-16, able-22)
aux(use-24, to-23)
xcomp(rid-16, use-24)
det(room-26, the-25)
dobj(use-24, room-26)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP (JJ desirable))
        (ADVP (RB also))))
    (, ,)
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (SBAR (IN that)
        (S
          (NP (DT a) (JJ thorough) (NN search))
          (VP (MD should)
            (VP (VB be)
              (VP (VBN made)
                (PP (IN in)
                  (NP (DT those) (NNS rooms)))
                (SBAR (IN before)
                  (S
                    (NP (PRP he))
                    (VP (VBD placed)
                      (NP
                        (NP (DT the) (NN matter))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (VBG missing) (NN cup))
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NNS hands))
                                (PP (IN of)
                                  (NP (DT the) (NNS magistrates)))))))))))))))))
    (. .)))

nsubj(desirable-3, It-1)
cop(desirable-3, was-2)
ccomp(said-7, desirable-3)
advmod(desirable-3, also-4)
nsubj(said-7, he-6)
root(ROOT-0, said-7)
mark(made-15, that-9)
det(search-12, a-10)
amod(search-12, thorough-11)
nsubjpass(made-15, search-12)
aux(made-15, should-13)
auxpass(made-15, be-14)
ccomp(said-7, made-15)
det(rooms-18, those-17)
prep_in(made-15, rooms-18)
mark(placed-21, before-19)
nsubj(placed-21, he-20)
advcl(made-15, placed-21)
det(matter-23, the-22)
dobj(placed-21, matter-23)
det(cup-27, the-25)
amod(cup-27, missing-26)
prep_of(matter-23, cup-27)
det(hands-30, the-29)
prep_in(cup-27, hands-30)
det(magistrates-33, the-32)
prep_of(hands-30, magistrates-33)

(ROOT
  (S
    (NP
      (NP (NNP Dawtie) (POS 's))
      (JJ last) (NNS words))
    (VP (VBD had)
      (VP (VBN sufficed)
        (S
          (VP (TO to)
            (VP (VB remove)
              (NP (DT any) (VBG lingering) (NN doubt))
              (PP (IN as)
                (PP (TO to)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBD had)
                        (VP (VBN become)
                          (PP (IN of)
                            (NP (DT the) (NN chalice))))))))))))))
    (. .)))

poss(words-4, Dawtie-1)
amod(words-4, last-3)
nsubj(sufficed-6, words-4)
nsubj(remove-8, words-4)
aux(sufficed-6, had-5)
root(ROOT-0, sufficed-6)
aux(remove-8, to-7)
xcomp(sufficed-6, remove-8)
det(doubt-11, any-9)
amod(doubt-11, lingering-10)
dobj(remove-8, doubt-11)
prepc_as_to(remove-8, to-13)
nsubj(become-16, what-14)
aux(become-16, had-15)
pcomp(remove-8, become-16)
det(chalice-19, the-18)
prep_of(become-16, chalice-19)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD did) (RB not)
        (VP (VB occur)
          (PP (TO to)
            (NP (PRP him)))
          (SBAR (IN that)
            (S
              (NP
                (NP (CD one))
                (ADJP (RB so) (JJ anxious)
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (NP
                          (NP (DT the) (NN justice))
                          (PP (IN of)
                            (NP (NN restoration)))))))))
              (VP (MD would)
                (ADVP (RB hardly))
                (VP (VB be)
                  (ADJP (JJ capable)
                    (PP (IN of)
                      (S
                        (VP (VBG telling)
                          (NP
                            (NP (NNS lies))
                            (, ,)
                            (PP (IN of)
                              (S
                                (VP (VBG defiling)
                                  (NP (PRP$ her) (NN soul))))))))))
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT a) (NN bit))
                        (PP (IN of)
                          (NP (NN property))))
                      (VP (MD might)
                        (VP (VB be)
                          (VP (VBN recovered)))))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD took)
        (NP (PRP it))
        (PP (IN for)
          (S
            (VP (JJ granted))))
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (VBD meant)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP
                      (ADVP (RB liberally))
                      (VBN rewarded)
                      (PP (IN by)
                        (NP (DT the) (NN earl))))))))))))
    (. .)))

nsubj(occur-4, It-1)
aux(occur-4, did-2)
neg(occur-4, not-3)
root(ROOT-0, occur-4)
prep_to(occur-4, him-6)
mark(capable-20, that-7)
nsubj(capable-20, one-8)
advmod(anxious-10, so-9)
amod(one-8, anxious-10)
aux(do-12, to-11)
xcomp(anxious-10, do-12)
det(justice-14, the-13)
dobj(do-12, justice-14)
prep_of(justice-14, restoration-16)
aux(capable-20, would-17)
advmod(capable-20, hardly-18)
cop(capable-20, be-19)
ccomp(occur-4, capable-20)
prepc_of(capable-20, telling-22)
dobj(telling-22, lies-23)
prepc_of(lies-23, defiling-26)
poss(soul-28, her-27)
dobj(defiling-26, soul-28)
mark(recovered-36, that-29)
det(bit-31, a-30)
nsubjpass(recovered-36, bit-31)
prep_of(bit-31, property-33)
aux(recovered-36, might-34)
auxpass(recovered-36, be-35)
ccomp(capable-20, recovered-36)
nsubj(took-39, he-38)
parataxis(occur-4, took-39)
dobj(took-39, it-40)
prepc_for(took-39, granted-42)
mark(meant-45, that-43)
nsubj(meant-45, she-44)
nsubjpass(rewarded-49, she-44)
ccomp(took-39, meant-45)
aux(rewarded-49, to-46)
auxpass(rewarded-49, be-47)
advmod(rewarded-49, liberally-48)
xcomp(meant-45, rewarded-49)
det(earl-52, the-51)
agent(rewarded-49, earl-52)

(ROOT
  (S
    (S
      (S
        (NP (NNP George))
        (VP (MD would)
          (VP (VB have)
            (VP
              (ADVP (RB ill))
              (VBN understood)
              (NP
                (NP
                  (NP
                    (NP (DT the) (NN distinction) (NN Dawtie))
                    (VP (VBN made)))
                  (PRN (: --)
                    (SBAR (IN that)
                      (S
                        (S
                          (NP
                            (NP (DT the) (NN body))
                            (PP (IN of)
                              (NP (DT the) (NN cup) (NN _))))
                          (VP (MD might)
                            (ADVP (RB _))
                            (VP (VB belong)
                              (PP (TO to)
                                (NP (PRP him))))))
                        (, ,)
                        (CC but)
                        (S
                          (NP
                            (NP (DT the) (NN soul))
                            (PP (IN of)
                              (NP (DT the) (NN cup) (NN _))))
                          (VP (VBD did)
                            (SBAR
                              (S
                                (NP (NNP _))
                                (VP (VBP belong)
                                  (PP (TO to)
                                    (NP (DT another))))))))))
                    (: ;)))
                (CC or)
                (NP
                  (NP (PRP$ her) (NN assertion))
                  (SBAR (IN that)
                    (S
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (DT the) (NN soul))
                          (VP (VBD was)
                            (ADVP (RB there)))))
                      (NP (DT the) (NN body))
                      (VP (MD ought)
                        (S
                          (VP (TO to)
                            (VP (VB be))))))))
                (: ;)
                (CC or)
                (NP
                  (NP (PRP$ her) (NN argument))
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (PRP He))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBD had)
                              (NP (DT the) (NN soul))))))
                      (VP (VBD had)
                        (NP (DT the) (NN right)
                          (S
                            (VP (TO to)
                              (VP (VB ransom)
                                (NP (DT the) (NN body)))))))))))))))
      (: --)
      (S
        (NP (DT a) (NN reasoning))
        (ADJP (JJ possible)
          (PP (TO to)
            (NP (DT a) (JJ child-like) (NN nature) (RB only)))))
      (: ;)
      (S
        (NP (PRP she))
        (VP (VBD had)
          (VP (VBN pondered)
            (S
              (VP (TO to)
                (VP (VB find)
                  (NP
                    (NP (DT the) (JJ true) (NN law))
                    (PP (IN of)
                      (NP (DT the) (NN case)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT this))
      (VP (VBD was)
        (NP (PRP$ her) (NN conclusion))))
    (. .)))

nsubj(understood-5, George-1)
aux(understood-5, would-2)
aux(understood-5, have-3)
advmod(understood-5, ill-4)
root(ROOT-0, understood-5)
det(Dawtie-8, the-6)
nn(Dawtie-8, distinction-7)
dobj(understood-5, Dawtie-8)
vmod(Dawtie-8, made-9)
mark(belong-20, that-11)
det(body-13, the-12)
nsubj(belong-20, body-13)
det(_-17, the-15)
nn(_-17, cup-16)
prep_of(body-13, _-17)
aux(belong-20, might-18)
advmod(belong-20, _-19)
dep(Dawtie-8, belong-20)
prep_to(belong-20, him-22)
det(soul-26, the-25)
nsubj(did-31, soul-26)
det(_-30, the-28)
nn(_-30, cup-29)
prep_of(soul-26, _-30)
dep(Dawtie-8, did-31)
conj_but(belong-20, did-31)
nsubj(belong-33, _-32)
ccomp(did-31, belong-33)
prep_to(belong-33, another-35)
poss(assertion-39, her-38)
dobj(understood-5, assertion-39)
conj_or(Dawtie-8, assertion-39)
mark(ought-48, that-40)
advmod(was-44, where-41)
det(soul-43, the-42)
nsubj(was-44, soul-43)
advcl(ought-48, was-44)
advmod(was-44, there-45)
det(body-47, the-46)
nsubj(ought-48, body-47)
nsubj(be-50, body-47)
dep(assertion-39, ought-48)
aux(be-50, to-49)
xcomp(ought-48, be-50)
poss(argument-54, her-53)
dobj(understood-5, argument-54)
conj_or(Dawtie-8, argument-54)
mark(had-61, that-55)
nsubj(had-58, He-56)
nsubj(had-61, He-56)
rcmod(He-56, had-58)
det(soul-60, the-59)
dobj(had-58, soul-60)
dep(argument-54, had-61)
det(right-63, the-62)
dobj(had-61, right-63)
aux(ransom-65, to-64)
vmod(right-63, ransom-65)
det(body-67, the-66)
dobj(ransom-65, body-67)
det(reasoning-70, a-69)
dep(possible-71, reasoning-70)
parataxis(understood-5, possible-71)
det(nature-75, a-73)
amod(nature-75, child-like-74)
prep_to(possible-71, nature-75)
advmod(nature-75, only-76)
nsubj(pondered-80, she-78)
nsubj(find-82, she-78)
aux(pondered-80, had-79)
parataxis(understood-5, pondered-80)
aux(find-82, to-81)
xcomp(pondered-80, find-82)
det(law-85, the-83)
amod(law-85, true-84)
dobj(find-82, law-85)
det(case-88, the-87)
prep_of(law-85, case-88)
nsubj(conclusion-94, this-91)
cop(conclusion-94, was-92)
poss(conclusion-94, her-93)
conj_and(understood-5, conclusion-94)

(ROOT
  (S
    (NP (NNP George))
    (VP
      (VP (VBD suspected))
      (, ,)
      (CC and)
      (VP (VBD grew)
        (ADJP (VBN convinced)
          (SBAR (IN that)
            (S
              (NP (NNP Alexa))
              (VP (VBD was)
                (NP
                  (NP (DT a) (NN party))
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN abstraction))
                      (PP (IN of)
                        (NP (DT the) (NN cup))))))))))))
    (. .)))

nsubj(suspected-2, George-1)
nsubj(grew-5, George-1)
root(ROOT-0, suspected-2)
conj_and(suspected-2, grew-5)
acomp(grew-5, convinced-6)
mark(party-11, that-7)
nsubj(party-11, Alexa-8)
cop(party-11, was-9)
det(party-11, a-10)
ccomp(convinced-6, party-11)
det(abstraction-14, the-13)
prep_to(party-11, abstraction-14)
det(cup-17, the-16)
prep_of(abstraction-14, cup-17)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD had)))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD said))
      (, ,)
      (VP (VBN begun)
        (S
          (VP (TO to)
            (VP (VB share)
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ extravagant) (NNS notions))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (NN group))
                      (PP (IN of)
                        (NP
                          (NP (NNS pietists))
                          (SBAR
                            (WHNP (WP$ whose) (NN leader))
                            (S
                              (VP (VBD was)
                                (NP (DT that) (JJ detestable) (NN fellow)))))))))))))))
      (, ,)
      (NP (NNP Ingram)))
    (. .)))

nsubj(had-2, She-1)
ccomp(said-5, had-2)
nsubj(said-5, he-4)
root(ROOT-0, said-5)
dep(said-5, begun-7)
aux(share-9, to-8)
xcomp(begun-7, share-9)
det(notions-13, the-11)
amod(notions-13, extravagant-12)
prep_in(share-9, notions-13)
det(group-16, a-15)
prep_of(notions-13, group-16)
prep_of(group-16, pietists-18)
poss(leader-20, pietists-18)
nsubj(fellow-24, leader-20)
cop(fellow-24, was-21)
det(fellow-24, that-22)
amod(fellow-24, detestable-23)
rcmod(pietists-18, fellow-24)
dobj(said-5, Ingram-26)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD was)
        (VP (VBN attached)
          (PP (TO to)
            (NP (NNP Dawtie))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Dawtie))
      (VP (VBD was)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (PRP them))))))
    (. .)))

nsubjpass(attached-3, Alexa-1)
auxpass(attached-3, was-2)
root(ROOT-0, attached-3)
prep_to(attached-3, Dawtie-5)
nsubj(one-10, Dawtie-8)
cop(one-10, was-9)
conj_and(attached-3, one-10)
prep_of(one-10, them-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD believed)
      (SBAR
        (S
          (NP (NNP Alexa))
          (VP (MD would)
            (VP (VB do)
              (NP (NN anything))
              (S
                (VP (TO to)
                  (VP (VB spite)
                    (NP (PRP him))))))))))
    (. .)))

nsubj(believed-2, He-1)
root(ROOT-0, believed-2)
nsubj(do-5, Alexa-3)
aux(do-5, would-4)
ccomp(believed-2, do-5)
dobj(do-5, anything-6)
aux(spite-8, to-7)
vmod(do-5, spite-8)
dobj(spite-8, him-9)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB bring)
          (NP (NN trouble))
          (PP (IN on)
            (NP (NNP Dawtie))))))
    (VP (MD would)
      (VP (VB be)
        (S
          (VP (TO to)
            (VP (VB punish)
              (ADVP
                (NP
                  (NP (PRP$ her) (NN mistress))
                  (, ,)
                  (CC and)
                  (NP (DT the) (JJ pious) (NN farmer))
                  (, ,))
                (RB too)))))))
    (. .)))

aux(bring-2, To-1)
csubj(be-7, bring-2)
dobj(bring-2, trouble-3)
prep_on(bring-2, Dawtie-5)
aux(be-7, would-6)
root(ROOT-0, be-7)
aux(punish-9, to-8)
xcomp(be-7, punish-9)
poss(mistress-11, her-10)
npadvmod(too-18, mistress-11)
det(farmer-16, the-14)
amod(farmer-16, pious-15)
conj_and(mistress-11, farmer-16)
npadvmod(too-18, farmer-16)
advmod(punish-9, too-18)

(ROOT
  (NP (NNP CHAPTER) (NNP XXXI) (. .)))

nn(XXXI-2, CHAPTER-1)
root(ROOT-0, XXXI-2)

(ROOT
  (NP (DT THE) (NN PROSECUTION) (. .)))

det(PROSECUTION-2, THE-1)
root(ROOT-0, PROSECUTION-2)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (SBAR (RB soon) (IN as)
          (S
            (NP (NNP Crawford))
            (VP (VBD had)
              (NP (PRP$ his) (NNS things))
              (PP
                (ADVP (RB away))
                (IN from)
                (NP (NNP Potlurg)))
              (, ,)
              (S
                (ADJP (JJ satisfied))
                (SBAR
                  (S
                    (NP (DT the) (NN cup))
                    (VP (VBD was)
                      (ADVP (RB nowhere))
                      (PP (IN among)
                        (NP (PRP them))))))))))
        (, ,)
        (NP (PRP he))
        (VP (VBD made)
          (NP
            (NP (DT a) (NN statement))
            (PP (IN of)
              (NP (DT the) (NN case))))
          (PP (TO to)
            (NP (DT a) (NN magistrate))))))
    (NP (PRP he))
    (VP
      (VP (VBD knew))
      (: ;)
      (CC and)
      (VP
        (ADVP (RB so))
        (VBD represented)
        (NP (PRP it)))
      (, ,)
      (PP (IN as)
        (NP
          (NP (DT the) (NN outcome))
          (PP (IN of)
            (NP
              (NP (DT the) (NN hypocrisy))
              (PP (IN of)
                (NP
                  (NP (NN pietism))
                  (, ,)
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT the) (NN magistrate))
                        (, ,)
                        (VP (VBG hating)
                          (NP
                            (NP (NN everything))
                            (VP (VBN called)
                              (S
                                (ADJP (JJ fanatical))))))
                        (, ,))
                      (ADVP (IN at) (RB once))
                      (VP (VBD granted)
                        (NP (PRP him))
                        (NP (DT a) (NN warrant)
                          (S
                            (VP (TO to)
                              (VP (VB apprehend)
                                (NP
                                  (NP (NNP Dawtie))
                                  (PP (IN on)
                                    (NP
                                      (NP (DT the) (NN charge))
                                      (PP (IN of)
                                        (NP (NN theft))))))))))))))))))))
    (. .)))

mark(made-21, As-1)
advmod(had-5, soon-2)
mark(had-5, as-3)
nsubj(had-5, Crawford-4)
advcl(made-21, had-5)
poss(things-7, his-6)
dobj(had-5, things-7)
prep_away_from(had-5, Potlurg-10)
dep(was-15, satisfied-12)
det(cup-14, the-13)
nsubj(was-15, cup-14)
dep(had-5, was-15)
advmod(was-15, nowhere-16)
prep_among(was-15, them-18)
nsubj(made-21, he-20)
advcl(knew-31, made-21)
det(statement-23, a-22)
dobj(made-21, statement-23)
det(case-26, the-25)
prep_of(statement-23, case-26)
det(magistrate-29, a-28)
prep_to(made-21, magistrate-29)
nsubj(knew-31, he-30)
nsubj(represented-35, he-30)
root(ROOT-0, knew-31)
advmod(represented-35, so-34)
conj_and(knew-31, represented-35)
dobj(represented-35, it-36)
conj_and(knew-31, as-38)
det(outcome-40, the-39)
prep_as(knew-31, outcome-40)
det(hypocrisy-43, the-42)
prep_of(outcome-40, hypocrisy-43)
prep_of(hypocrisy-43, pietism-45)
mark(granted-58, that-47)
det(magistrate-49, the-48)
nsubj(granted-58, magistrate-49)
vmod(magistrate-49, hating-51)
dobj(hating-51, everything-52)
vmod(everything-52, called-53)
acomp(called-53, fanatical-54)
advmod(granted-58, at-56)
advmod(at-56, once-57)
dep(pietism-45, granted-58)
iobj(granted-58, him-59)
det(warrant-61, a-60)
dobj(granted-58, warrant-61)
aux(apprehend-63, to-62)
vmod(warrant-61, apprehend-63)
dobj(apprehend-63, Dawtie-64)
det(charge-67, the-66)
prep_on(Dawtie-64, charge-67)
prep_of(charge-67, theft-69)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a) (JJ terrible) (NN shock)))
    (. .)))

nsubj(shock-5, It-1)
cop(shock-5, was-2)
det(shock-5, a-3)
amod(shock-5, terrible-4)
root(ROOT-0, shock-5)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD cried)
      (PRT (RP out))
      (PP (IN with)
        (NP (NN indignation))))
    (. .)))

nsubj(cried-2, Alexa-1)
root(ROOT-0, cried-2)
prt(cried-2, out-3)
prep_with(cried-2, indignation-5)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP
      (VP (VBD turned)
        (ADJP
          (ADJP (JJ white))
          (CC and)
          (ADJP (RB then) (JJ red))))
      (, ,)
      (CC but)
      (VP (VBD uttered)
        (ADVP (RB never))
        (NP (DT a) (NN word))))
    (. .)))

nsubj(turned-2, Dawtie-1)
nsubj(uttered-9, Dawtie-1)
root(ROOT-0, turned-2)
acomp(turned-2, white-3)
advmod(red-6, then-5)
acomp(turned-2, red-6)
conj_and(white-3, red-6)
conj_but(turned-2, uttered-9)
neg(uttered-9, never-10)
det(word-12, a-11)
dobj(uttered-9, word-12)

(ROOT
  (S (`` ``)
    (NP (NNP Dawtie))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (PRP$ her) (NN mistress)))
      (, ,) (`` ``))
    (VP (VBP tell)
      (NP (PRP me))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBP know)
            (PP (IN about)
              (NP (DT the) (NN cup)))))))
    (. .)))

nsubj(tell-10, Dawtie-2)
parataxis(tell-10, said-5)
poss(mistress-7, her-6)
nsubj(said-5, mistress-7)
root(ROOT-0, tell-10)
dobj(tell-10, me-11)
dobj(know-14, what-12)
nsubj(know-14, you-13)
dep(tell-10, know-14)
det(cup-17, the-16)
prep_about(know-14, cup-17)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do)
      (VP (VB know)
        (NP (NN something))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP have) (RB not)
              (VP (VBN told)
                (NP (PRP me))))))))
    (. !) ('' '')))

nsubj(know-3, You-1)
aux(know-3, do-2)
root(ROOT-0, know-3)
dobj(know-3, something-4)
mark(told-9, that-5)
nsubj(told-9, you-6)
aux(told-9, have-7)
neg(told-9, not-8)
ccomp(know-3, told-9)
dobj(told-9, me-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (, ,) (VBP ma'am) (, ,)
      (SBAR (CC but)
        (S
          (NP (PRP I))
          (VP (MD will) (RB not)
            (VP (VB tell)
              (NP (PRP it))
              (SBAR (IN except)
                (S
                  (NP (PRP I))
                  (VP (VBP am)
                    (VP (VBN forced))))))))))
    (. .) ('' '')))

nsubj(do-3, I-2)
root(ROOT-0, do-3)
dep(do-3, ma'am-5)
cc(tell-11, but-7)
nsubj(tell-11, I-8)
aux(tell-11, will-9)
neg(tell-11, not-10)
ccomp(do-3, tell-11)
dobj(tell-11, it-12)
mark(forced-16, except-13)
nsubjpass(forced-16, I-14)
auxpass(forced-16, am-15)
advcl(tell-11, forced-16)

(ROOT
  (S (`` ``)
    (SBAR (IN That)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB be))))))))
    (, ,)
    (NP (PRP$ my) (NN poor))
    (VP (VBZ girl))
    (. !)))

mark(going-5, That-2)
nsubj(going-5, you-3)
nsubj(be-7, you-3)
aux(going-5, are-4)
advcl(girl-11, going-5)
aux(be-7, to-6)
xcomp(going-5, be-7)
poss(poor-10, my-9)
nsubj(girl-11, poor-10)
root(ROOT-0, girl-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (RB very) (JJ sorry))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (ADJP (RB perfectly) (JJ sure)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP have)
                    (VP (VBN done)
                      (NP
                        (NP (NN nothing))
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBP know)
                              (S
                                (VP (TO to)
                                  (VP (VB be)
                                    (ADJP (JJ wrong))))))))))))))))))
    (. !) ('' '')))

nsubj(sorry-4, I-1)
cop(sorry-4, am-2)
advmod(sorry-4, very-3)
root(ROOT-0, sorry-4)
mark(sure-10, for-6)
nsubj(sure-10, I-7)
cop(sure-10, am-8)
advmod(sure-10, perfectly-9)
advcl(sorry-4, sure-10)
nsubj(done-13, you-11)
aux(done-13, have-12)
ccomp(sure-10, done-13)
dobj(done-13, nothing-14)
nsubj(know-16, you-15)
nsubj(wrong-19, you-15)
rcmod(nothing-14, know-16)
aux(wrong-19, to-17)
cop(wrong-19, be-18)
xcomp(know-16, wrong-19)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN done)
        (NP
          (NP (NN nothing))
          (SBAR
            (S
              (NP
                (NP (PRP you))
                (CC or)
                (NP (NN anybody)))
              (VP (MD would)
                (VP (VB think)
                  (ADJP (JJ wrong))
                  (, ,)
                  (NP (NN ma'am)))))))))
    (. .) ('' '')))

nsubj(done-4, I-2)
aux(done-4, have-3)
root(ROOT-0, done-4)
dobj(done-4, nothing-5)
nsubj(think-10, you-6)
conj_or(you-6, anybody-8)
nsubj(think-10, anybody-8)
aux(think-10, would-9)
rcmod(nothing-5, think-10)
acomp(think-10, wrong-11)
dobj(think-10, ma'am-13)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD put)
        (PP (IN on)
          (NP (PRP$ her) (NNP Sunday) (NN frock))))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PRT (RP down))
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN with)
                (NP (DT the) (NN policeman))))))))
    (. .)))

nsubj(put-2, She-1)
nsubj(went-9, She-1)
nsubj(go-12, She-1)
root(ROOT-0, put-2)
poss(frock-6, her-4)
nn(frock-6, Sunday-5)
prep_on(put-2, frock-6)
conj_and(put-2, went-9)
prt(went-9, down-10)
aux(go-12, to-11)
xcomp(went-9, go-12)
det(policeman-15, the-14)
prep_with(go-12, policeman-15)

(ROOT
  (S
    (PP (TO To)
      (NP (PRP$ her) (NN joy)))
    (NP (PRP she))
    (VP (VBD found)
      (NP (PRP$ her) (NN mistress))
      (PP (IN at)
        (NP (DT the) (NN door)))
      (, ,)
      (S
        (ADJP (JJ ready)
          (S
            (VP (TO to)
              (VP (VB accompany)
                (NP (PRP her))))))))
    (. .)))

poss(joy-3, her-2)
prep_to(found-5, joy-3)
nsubj(found-5, she-4)
root(ROOT-0, found-5)
poss(mistress-7, her-6)
dobj(found-5, mistress-7)
det(door-10, the-9)
prep_at(found-5, door-10)
dep(found-5, ready-12)
aux(accompany-14, to-13)
xcomp(ready-12, accompany-14)
dobj(accompany-14, her-15)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD had)
        (ADVP
          (NP (CD two) (NNS miles))
          (CC or)
          (ADVP (RBR more)))
        (S
          (VP (TO to)
            (VP (VB walk))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBD was)
        (NP
          (NP (NN nothing))
          (PP (TO to)
            (NP (DT either))))))
    (. .)))

nsubj(had-2, They-1)
nsubj(walk-8, They-1)
root(ROOT-0, had-2)
num(miles-4, two-3)
advmod(had-2, miles-4)
advmod(had-2, more-6)
conj_or(miles-4, more-6)
aux(walk-8, to-7)
xcomp(had-2, walk-8)
nsubj(nothing-13, that-11)
cop(nothing-13, was-12)
conj_but(had-2, nothing-13)
prep_to(nothing-13, either-15)

(ROOT
  (S
    (S
      (VP (VBN Questioned)
        (PP (IN by)
          (NP
            (NP (DT the) (NN magistrate))
            (, ,)
            (ADJP (RB not) (JJ unkindly))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP$ her) (NN mistress))
                (VP (VBD was)
                  (ADVP (RB there)))))))))
    (, ,)
    (NP (NNP Dawtie))
    (VP (VBD told)
      (NP (NN everything))
      (: --)
      (SBAR
        (WHNP (WRB how) (JJ first))
        (S
          (NP (PRP she))
          (VP
            (VP (VBD came)
              (PP (IN upon)
                (NP
                  (NP (DT the) (NN likeness)
                    (CC and)
                    (NN history))
                  (PP (IN of)
                    (NP (DT the) (NN cup))))))
            (, ,)
            (CC and)
            (VP
              (ADVP (RB then))
              (VBD saw)
              (NP
                (NP (DT the) (NN cup))
                (ADVP (PRP itself)))
              (PP (IN in)
                (NP
                  (NP (PRP$ her) (NN master) (POS 's))
                  (NNS hands))))))))
    (. .)))

vmod(told-16, Questioned-1)
det(magistrate-4, the-3)
agent(Questioned-1, magistrate-4)
neg(unkindly-7, not-6)
amod(magistrate-4, unkindly-7)
mark(was-12, for-9)
poss(mistress-11, her-10)
nsubj(was-12, mistress-11)
dep(magistrate-4, was-12)
advmod(was-12, there-13)
nsubj(told-16, Dawtie-15)
root(ROOT-0, told-16)
dobj(told-16, everything-17)
advmod(first-20, how-19)
advmod(came-22, first-20)
nsubj(came-22, she-21)
nsubj(saw-34, she-21)
parataxis(told-16, came-22)
det(likeness-25, the-24)
prep_upon(came-22, likeness-25)
prep_upon(came-22, history-27)
conj_and(likeness-25, history-27)
det(cup-30, the-29)
prep_of(likeness-25, cup-30)
advmod(saw-34, then-33)
parataxis(told-16, saw-34)
conj_and(came-22, saw-34)
det(cup-36, the-35)
dobj(saw-34, cup-36)
advmod(cup-36, itself-37)
poss(master-40, her-39)
poss(hands-42, master-40)
prep_in(saw-34, hands-42)

(ROOT
  (S
    (NP (NNP Crawford))
    (VP (VBD told)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (DT the) (NN laird))
          (VP (VBD had)
            (VP (VBN warned)
              (NP (PRP him))
              (PP (IN against)
                (NP (NNP Dawtie)))
              (, ,)
              (S
                (VP (VBG giving)
                  (S
                    (NP (PRP him))
                    (VP (TO to)
                      (VP (VB understand)
                        (SBAR (IN that)
                          (S
                            (NP (PRP she))
                            (VP (VBD had)
                              (VP (VBN been)
                                (VP (VBN seized)
                                  (PP (IN with)
                                    (NP
                                      (NP (DT a) (NN passion))
                                      (PP (IN for)
                                        (NP (DT the) (NN goblet) (JJ such)))))
                                  (SBAR
                                    (SBAR (IN that)
                                      (S
                                        (NP (PRP she))
                                        (VP (MD would)
                                          (VP (VB peril)
                                            (NP (PRP$ her) (NN soul)
                                              (S
                                                (VP (TO to)
                                                  (VP (VB possess)
                                                    (NP (PRP it))))))))))
                                    (, ,)
                                    (CC and)
                                    (SBAR (IN that)
                                      (S
                                        (NP (PRP he))
                                        (VP (VBD dared) (RB not)
                                          (VP (VB let)
                                            (S
                                              (NP (PRP her))
                                              (VP (VB know)
                                                (SBAR
                                                  (WHADVP (WRB where))
                                                  (S
                                                    (NP (PRP it))
                                                    (VP (VBD was))))))))))))))))))))))))))
    (. .)))

nsubj(told-2, Crawford-1)
root(ROOT-0, told-2)
advmod(warned-7, how-3)
det(laird-5, the-4)
nsubj(warned-7, laird-5)
aux(warned-7, had-6)
ccomp(told-2, warned-7)
dobj(warned-7, him-8)
prep_against(warned-7, Dawtie-10)
vmod(warned-7, giving-12)
dobj(giving-12, him-13)
nsubj(understand-15, him-13)
aux(understand-15, to-14)
xcomp(giving-12, understand-15)
mark(seized-20, that-16)
nsubjpass(seized-20, she-17)
aux(seized-20, had-18)
auxpass(seized-20, been-19)
ccomp(understand-15, seized-20)
det(passion-23, a-22)
prep_with(seized-20, passion-23)
det(goblet-26, the-25)
prep_for(passion-23, goblet-26)
amod(goblet-26, such-27)
mark(peril-31, that-28)
nsubj(peril-31, she-29)
aux(peril-31, would-30)
ccomp(seized-20, peril-31)
poss(soul-33, her-32)
dobj(peril-31, soul-33)
aux(possess-35, to-34)
vmod(soul-33, possess-35)
dobj(possess-35, it-36)
mark(dared-41, that-39)
nsubj(dared-41, he-40)
ccomp(seized-20, dared-41)
conj_and(peril-31, dared-41)
neg(dared-41, not-42)
dep(dared-41, let-43)
nsubj(know-45, her-44)
ccomp(let-43, know-45)
advmod(was-48, where-46)
nsubj(was-48, it-47)
ccomp(know-45, was-48)

(ROOT
  (S (`` ``)
    (NP (NNP Sir))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (NNP Dawtie)))
      (, ,))
    (`` ``)
    (NP (PRP he))
    (VP (MD could)
      (S
        (VP (TO na)
          (VP (VB hae)
            (VP (VBN distrusted)
              (NP (PRP me))
              (PP (IN like)
                (NP
                  (NP (DT that))
                  (, ,)
                  (SBAR (IN for)
                    (S
                      (NP (PRP he))
                      (VP
                        (VP (VBP gae)
                          (S
                            (NP (PRP me))
                            (NP (PRP$ his) (NNS keys))))
                        (, ,)
                        (CC and)
                        (VP (VBD sent)
                          (S
                            (NP (PRP me))
                            (VP (TO to)
                              (VP (VB fetch)
                                (NP (DT the) (NN cup))
                                (SBAR
                                  (WHADVP (WRB when))
                                  (S
                                    (NP (PRP he))
                                    (VP (VBD was)
                                      (ADJP (JJ ower) (RB ill)
                                        (PP (TO to)
                                          (NP (NN gang)))
                                        (PP (IN till)
                                          (NP (`` `)
                                            (NP (NN t.))
                                            ('' '')
                                            (SBAR
                                              (S (`` ``)
                                                (S
                                                  (SBAR (IN If)
                                                    (S
                                                      (NP (DT that))
                                                      (VP (VB be)
                                                        (ADJP (JJ true))
                                                        (, ,)
                                                        (NP (PRP$ your) (NN worship)))))
                                                  (PRN (, ,) ('' '')
                                                    (SINV
                                                      (VP (VBD said))
                                                      (NP (NNP Crawford)))
                                                    (, ,) (`` ``))
                                                  (NP (PRP it))
                                                  (VP (VBZ does) (RB not)
                                                    (VP (VB affect)
                                                      (NP (DT the) (NN fact))
                                                      (SBAR (IN that)
                                                        (S
                                                          (NP (DT the) (NN cup))
                                                          (VP (VBD was)
                                                            (PP (IN in)
                                                              (NP
                                                                (NP (DT the) (NNS hands))
                                                                (PP (IN of)
                                                                  (NP (DT the) (JJ old) (NN man)))))
                                                            (SBAR
                                                              (WHADVP (WRB when))
                                                              (S
                                                                (NP (PRP I))
                                                                (VP (VBD left)
                                                                  (SBAR
                                                                    (S
                                                                      (NP (PRP him)
                                                                        (CC and)
                                                                        (PRP she))
                                                                      (VP (VBD went)
                                                                        (PP (TO to)
                                                                          (NP (PRP him)))))))))))))))
                                                (, ,)
                                                (CC and)
                                                (S
                                                  (PP (IN from)
                                                    (NP (DT that) (NN moment)))
                                                  (NP (PRP it))
                                                  (VP (VBZ has) (RB not)
                                                    (VP (VBN been)
                                                      (VP (VBN seen)))))))))))))))))))))))))))
    (. .) ('' '')))

nsubj(could-10, Sir-2)
nsubj(hae-12, Sir-2)
parataxis(could-10, said-5)
nsubj(said-5, Dawtie-6)
nsubj(could-10, he-9)
nsubj(hae-12, he-9)
root(ROOT-0, could-10)
aux(hae-12, na-11)
xcomp(could-10, hae-12)
dep(hae-12, distrusted-13)
dobj(distrusted-13, me-14)
prep_like(distrusted-13, that-16)
mark(gae-20, for-18)
nsubj(gae-20, he-19)
nsubj(sent-26, he-19)
rcmod(that-16, gae-20)
nsubj(keys-23, me-21)
poss(keys-23, his-22)
xcomp(gae-20, keys-23)
rcmod(that-16, sent-26)
conj_and(gae-20, sent-26)
dobj(sent-26, me-27)
nsubj(fetch-29, me-27)
aux(fetch-29, to-28)
xcomp(sent-26, fetch-29)
det(cup-31, the-30)
dobj(fetch-29, cup-31)
advmod(ower-35, when-32)
nsubj(ower-35, he-33)
cop(ower-35, was-34)
advcl(fetch-29, ower-35)
advmod(ower-35, ill-36)
prep_to(ower-35, gang-38)
prep_till(ower-35, t.-41)
nsubj(true-47, t.-41)
mark(true-47, If-44)
cop(true-47, be-46)
advcl(affect-60, true-47)
poss(worship-50, your-49)
dep(true-47, worship-50)
parataxis(affect-60, said-53)
nsubj(said-53, Crawford-54)
nsubj(affect-60, it-57)
aux(affect-60, does-58)
neg(affect-60, not-59)
rcmod(t.-41, affect-60)
det(fact-62, the-61)
dobj(affect-60, fact-62)
mark(was-66, that-63)
det(cup-65, the-64)
nsubj(was-66, cup-65)
ccomp(affect-60, was-66)
det(hands-69, the-68)
prep_in(was-66, hands-69)
det(man-73, the-71)
amod(man-73, old-72)
prep_of(hands-69, man-73)
advmod(left-76, when-74)
nsubj(left-76, I-75)
advcl(was-66, left-76)
nsubj(went-80, him-77)
conj_and(him-77, she-79)
nsubj(went-80, she-79)
ccomp(left-76, went-80)
prep_to(went-80, him-82)
det(moment-87, that-86)
prep_from(seen-92, moment-87)
nsubjpass(seen-92, it-88)
aux(seen-92, has-89)
neg(seen-92, not-90)
auxpass(seen-92, been-91)
rcmod(t.-41, seen-92)
conj_and(affect-60, seen-92)

(ROOT
  (S (`` ``)
    (ADVP (RB Did))
    (NP (PRP he))
    (VP (VBP have)
      (NP (PRP it))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBD went)
            (PP (TO to)
              (NP (PRP him)))))))
    (. ?) ('' '')))

advmod(have-4, Did-2)
nsubj(have-4, he-3)
root(ROOT-0, have-4)
dobj(have-4, it-5)
advmod(went-8, when-6)
nsubj(went-8, you-7)
advcl(have-4, went-8)
prep_to(went-8, him-10)

(ROOT
  (S
    (VP (VBD asked)
      (NP (DT the) (NN magistrate)))
    (. .)))

root(ROOT-0, asked-1)
det(magistrate-3, the-2)
dobj(asked-1, magistrate-3)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (PRN
      (S
        (NP (NN didna))
        (VP (VBP see) (`` `)
          (NP (NN t))))
      (, ,))
    (VP (VBP sir))
    (. .)))

nsubj(sir-8, I-2)
nsubj(see-4, didna-3)
parataxis(sir-8, see-4)
dobj(see-4, t-6)
root(ROOT-0, sir-8)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (PP (IN in)
        (NP
          (NP (DT a) (NN kind) (NN o) (POS '))
          (NN faint)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD got)
            (PRT (RP up))))))
    (. .) ('' '')))

nsubj(was-2, He-1)
root(ROOT-0, was-2)
det(o-6, a-4)
nn(o-6, kind-5)
poss(faint-8, o-6)
prep_in(was-2, faint-8)
advmod(got-11, when-9)
nsubj(got-11, I-10)
advcl(was-2, got-11)
prt(got-11, up-12)

(ROOT
  (S
    (NP (NNP Crawford))
    (VP (VBD said)
      (SBAR (IN that)
        (PRN (, ,)
          (S
            (VP (VBG hearing)
              (NP (DT a) (NN cry))))
          (, ,))
        (S
          (NP (PRP he))
          (VP
            (VP (VBD ran)
              (PRT (RP up))
              (ADVP (RB again)))
            (, ,)
            (CC and)
            (VP (VBD found)
              (NP (DT the) (JJ old) (NN man))
              (PP (IN at)
                (NP
                  (NP (DT the) (NN point))
                  (PP (IN of)
                    (NP (NN death)))))))))
      (, ,)
      (PP (IN with)
        (NP
          (NP (RB just) (NN strength))
          (SBAR
            (S
              (VP (TO to)
                (VP (VB cry)
                  (PRT (RP out))
                  (SBAR (IN before)
                    (S
                      (NP (PRP he))
                      (VP (VBD died))))))))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (NNP Dawtie))
          (VP (VBD had)
            (VP (VBN taken)
              (NP (DT the) (NN cup))
              (PP (IN from)
                (NP (PRP him))))))))
    (. .)))

nsubj(said-2, Crawford-1)
root(ROOT-0, said-2)
mark(ran-10, that-3)
dep(ran-10, hearing-5)
det(cry-7, a-6)
dobj(hearing-5, cry-7)
nsubj(ran-10, he-9)
nsubj(found-15, he-9)
ccomp(said-2, ran-10)
prt(ran-10, up-11)
advmod(ran-10, again-12)
ccomp(said-2, found-15)
conj_and(ran-10, found-15)
det(man-18, the-16)
amod(man-18, old-17)
dobj(found-15, man-18)
det(point-21, the-20)
prep_at(found-15, point-21)
prep_of(point-21, death-23)
advmod(strength-27, just-26)
prep_with(said-2, strength-27)
aux(cry-29, to-28)
vmod(strength-27, cry-29)
prt(cry-29, out-30)
mark(died-33, before-31)
nsubj(died-33, he-32)
advcl(cry-29, died-33)
mark(taken-38, that-35)
nsubj(taken-38, Dawtie-36)
aux(taken-38, had-37)
ccomp(said-2, taken-38)
det(cup-40, the-39)
dobj(taken-38, cup-40)
prep_from(taken-38, him-42)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD was)
        (VP (VBG leaning)
          (PRT (RP over))
          (NP (PRP him)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD had) (RB not)
        (VP (VBN imagined)
          (PP
            (ADVP
              (NP (DT the) (NN accusation))
              (RBR more))
            (IN than)
            (NP
              (NP (DT the) (JJ delirious) (NN fancy))
              (PP (IN of)
                (NP
                  (NP (DT a) (VBG dying) (NN man))
                  (, ,)
                  (SBAR (IN till)
                    (S
                      (NP (PRP it))
                      (VP (VBD appeared)
                        (SBAR (IN that)
                          (S
                            (NP (DT the) (NN cup))
                            (VP (VBD was) (RB not)
                              (S
                                (VP (TO to)
                                  (VP (VB be)
                                    (VP (VBN found))))))))))))))))))
    (. .)))

nsubj(leaning-3, Dawtie-1)
aux(leaning-3, was-2)
root(ROOT-0, leaning-3)
prt(leaning-3, over-4)
dobj(leaning-3, him-5)
nsubj(imagined-11, he-8)
aux(imagined-11, had-9)
neg(imagined-11, not-10)
conj_but(leaning-3, imagined-11)
det(accusation-13, the-12)
npadvmod(more-14, accusation-13)
advmod(imagined-11, more-14)
det(fancy-18, the-16)
amod(fancy-18, delirious-17)
prep_than(imagined-11, fancy-18)
det(man-22, a-20)
amod(man-22, dying-21)
prep_of(fancy-18, man-22)
mark(appeared-26, till-24)
nsubj(appeared-26, it-25)
dep(man-22, appeared-26)
mark(was-30, that-27)
det(cup-29, the-28)
nsubj(was-30, cup-29)
nsubjpass(found-34, cup-29)
ccomp(appeared-26, was-30)
neg(was-30, not-31)
aux(found-34, to-32)
auxpass(found-34, be-33)
xcomp(was-30, found-34)

(ROOT
  (S
    (NP (DT The) (NN magistrate))
    (VP (VBD made)
      (PRT (RP out))
      (NP
        (NP
          (NP (NNP Dawtie) (POS 's))
          (NN commitment))
        (PP (IN for)
          (NP (NN trial)))))
    (. .)))

det(magistrate-2, The-1)
nsubj(made-3, magistrate-2)
root(ROOT-0, made-3)
prt(made-3, out-4)
poss(commitment-7, Dawtie-5)
dobj(made-3, commitment-7)
prep_for(commitment-7, trial-9)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD remarked)
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (MD might)
              (VP (VB have)
                (VP (VBN been)
                  (VP (VBN misled)
                    (PP (IN by)
                      (NP
                        (NP (DT a) (JJ false) (NN notion))
                        (PP (IN of)
                          (NP (NN duty)))))))))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN been)
          (VP (VBN informed)
            (SBAR (IN that)
              (S
                (NP (PRP she))
                (VP (VBD belonged)
                  (PP (TO to)
                    (NP (DT a) (NN sect)))
                  (S
                    (VP (VBG claiming)
                      (NP (DT the) (NN right)
                        (S
                          (VP (TO to)
                            (VP (VB think)
                              (PP (IN for)
                                (NP (PRP themselves)))
                              (PP (IN on)
                                (NP (DT the) (JJ profoundest) (NNS mysteries))))))))))))))))
    (: --)
    (CC and)
    (S
      (NP (RB here))
      (VP (VBD was)
        (NP (DT the) (NN result))))
    (. !)))

nsubj(remarked-2, He-1)
root(ROOT-0, remarked-2)
mark(misled-8, that-3)
nsubjpass(misled-8, she-4)
aux(misled-8, might-5)
aux(misled-8, have-6)
auxpass(misled-8, been-7)
ccomp(remarked-2, misled-8)
det(notion-12, a-10)
amod(notion-12, false-11)
agent(misled-8, notion-12)
prep_of(notion-12, duty-14)
nsubjpass(informed-19, he-16)
aux(informed-19, had-17)
auxpass(informed-19, been-18)
conj_and(remarked-2, informed-19)
mark(belonged-22, that-20)
nsubj(belonged-22, she-21)
ccomp(informed-19, belonged-22)
det(sect-25, a-24)
prep_to(belonged-22, sect-25)
xcomp(belonged-22, claiming-26)
det(right-28, the-27)
dobj(claiming-26, right-28)
aux(think-30, to-29)
vmod(right-28, think-30)
prep_for(think-30, themselves-32)
det(mysteries-36, the-34)
amod(mysteries-36, profoundest-35)
prep_on(think-30, mysteries-36)
nsubj(result-42, here-39)
cop(result-42, was-40)
det(result-42, the-41)
conj_and(remarked-2, result-42)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (ADVP (RB not)
        (NP (DT a) (NN man))
        (PP (IN in)
          (NP (NNP Scotland))))
      (ADJP
        (ADJP (RBR less) (JJ capable)
          (PP (IN of)
            (S
              (VP (VBG knowing)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (DT any) (NN woman))
                    (VP (VBD was)
                      (VP (VBG thinking)))))))))
        (, ,)
        (CC or)
        (ADJP (RBR more) (JJ incapable)
          (PP (IN of)
            (S
              (VP (VBG doubting)
                (NP (PRP$ his) (JJ own) (NN insight))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(was-2, not-3)
det(man-5, a-4)
dep(not-3, man-5)
prep_in(not-3, Scotland-7)
advmod(capable-9, less-8)
acomp(was-2, capable-9)
prepc_of(capable-9, knowing-11)
dobj(thinking-16, what-12)
det(woman-14, any-13)
nsubj(thinking-16, woman-14)
aux(thinking-16, was-15)
ccomp(knowing-11, thinking-16)
advmod(incapable-20, more-19)
acomp(was-2, incapable-20)
conj_or(capable-9, incapable-20)
prepc_of(incapable-20, doubting-22)
poss(insight-25, his-23)
amod(insight-25, own-24)
dobj(doubting-22, insight-25)

(ROOT
  (S
    (S
      (ADVP (RB Doubtless))
      (PRN (, ,)
        (S
          (NP (PRP he))
          (VP (VBD went)
            (PRT (RP on))))
        (, ,))
      (NP (PRP she))
      (VP (VBD had)
        (ADVP (RB superstitiously))
        (VP (VBN regarded)
          (NP (DT the) (NN cup))
          (PP (IN as)
            (S
              (VP (VBG exercising)
                (NP (DT a) (JJ Satanic) (NN influence))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN mind))
                    (PP (IN of)
                      (NP (PRP$ her) (NN master)))))))))))
    (: ;)
    (S (CC but)
      (SBAR (RB even) (IN if)
        (S
          (NP (PRP she))
          (VP (VBD confessed)
            (NP (PRP it))
            (ADVP (RB now)))))
      (, ,)
      (NP (PRP he))
      (VP (MD must)
        (VP (VB make)
          (NP
            (NP (DT an) (NN example))
            (PP (IN of)
              (NP (CD one)))
            (SBAR (WP$ whose)
              (S
                (NP (NN fanaticism))
                (VP (MD would)
                  (VP
                    (VP (VB set)
                      (NP (JJ wrong) (NN right))
                      (PP (IN after)
                        (NP
                          (NP (DT the) (NNS notions))
                          (PP (IN of)
                            (NP (DT an) (JJ illiterate) (NN sect))))))
                    (, ,)
                    (CC and)
                    (VP (RB not)
                      (PP (VBG according)
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NNS laws))
                            (PP (IN of)
                              (NP (DT the) (NN land)))))))))))))))
    (. .)))

advmod(regarded-10, Doubtless-1)
nsubj(went-4, he-3)
parataxis(regarded-10, went-4)
prt(went-4, on-5)
nsubj(regarded-10, she-7)
aux(regarded-10, had-8)
advmod(regarded-10, superstitiously-9)
root(ROOT-0, regarded-10)
det(cup-12, the-11)
dobj(regarded-10, cup-12)
prepc_as(regarded-10, exercising-14)
det(influence-17, a-15)
amod(influence-17, Satanic-16)
dobj(exercising-14, influence-17)
det(mind-20, the-19)
prep_on(exercising-14, mind-20)
poss(master-23, her-22)
prep_of(mind-20, master-23)
cc(make-35, but-25)
advmod(confessed-29, even-26)
mark(confessed-29, if-27)
nsubj(confessed-29, she-28)
advcl(make-35, confessed-29)
dobj(confessed-29, it-30)
advmod(confessed-29, now-31)
nsubj(make-35, he-33)
aux(make-35, must-34)
parataxis(regarded-10, make-35)
det(example-37, an-36)
dobj(make-35, example-37)
prep_of(example-37, one-39)
dep(set-43, whose-40)
nsubj(set-43, fanaticism-41)
aux(set-43, would-42)
dep(example-37, set-43)
amod(right-45, wrong-44)
dobj(set-43, right-45)
det(notions-48, the-47)
prep_after(set-43, notions-48)
det(sect-52, an-50)
amod(sect-52, illiterate-51)
prep_of(notions-48, sect-52)
dep(example-37, not-55)
conj_and(set-43, not-55)
prepc_according_to(not-55, to-57)
det(laws-59, the-58)
pobj(not-55, laws-59)
det(land-62, the-61)
prep_of(laws-59, land-62)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB just))
    (VP (VBP send)
      (S
        (NP (DT the) (NN case))
        (VP (TO to)
          (VP (VB be)
            (VP (VBN tried)
              (PP (IN by)
                (NP (DT a) (NN jury))))))))
    (. !)))

nsubj(send-3, He-1)
advmod(send-3, just-2)
root(ROOT-0, send-3)
det(case-5, the-4)
dobj(send-3, case-5)
nsubjpass(tried-8, case-5)
aux(tried-8, to-6)
auxpass(tried-8, be-7)
xcomp(send-3, tried-8)
det(jury-11, a-10)
agent(tried-8, jury-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP she))
        (VP (VBD convinced)
          (NP
            (NP (DT the) (CD twelve) (NNS men))
            (VP (VBG composing)
              (NP
                (NP (DT that) (NN jury))
                (, ,)
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN innocence))
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP (VBD protested))))))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD would) (RB then)
      (VP (VB be)
        (NP (DT a) (JJ free) (NN woman))))
    (. .)))

mark(convinced-3, If-1)
nsubj(convinced-3, she-2)
advcl(woman-23, convinced-3)
det(men-6, the-4)
num(men-6, twelve-5)
dobj(convinced-3, men-6)
vmod(men-6, composing-7)
det(jury-9, that-8)
dobj(composing-7, jury-9)
det(innocence-13, the-12)
prep_of(jury-9, innocence-13)
nsubj(protested-15, she-14)
rcmod(innocence-13, protested-15)
nsubj(woman-23, she-17)
aux(woman-23, would-18)
advmod(woman-23, then-19)
cop(woman-23, be-20)
det(woman-23, a-21)
amod(woman-23, free-22)
root(ROOT-0, woman-23)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD stood)
        (ADJP (RB very) (JJ white))
        (NP (PDT all) (DT the) (NN time))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBG speaking))))
          (, ,)
          (CC and)
          (S
            (NP (PRP$ her) (NNS lips))
            (VP
              (ADVP (DT every) (RB now)
                (CC and)
                (RB then))
              (VBD quivered)
              (SBAR (RB as) (IN if)
                (S
                  (NP (PRP she))
                  (VP (VBD were)
                    (VP (VBG going)
                      (S
                        (VP (TO to)
                          (VP (VB cry)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD did) (RB not)))
    (. .)))

nsubj(stood-2, Dawtie-1)
root(ROOT-0, stood-2)
advmod(white-4, very-3)
acomp(stood-2, white-4)
predet(time-7, all-5)
det(time-7, the-6)
dobj(stood-2, time-7)
nsubj(speaking-10, he-8)
aux(speaking-10, was-9)
dep(stood-2, speaking-10)
poss(lips-14, her-13)
nsubj(quivered-19, lips-14)
dep(now-16, every-15)
advmod(quivered-19, now-16)
conj_and(now-16, then-18)
advmod(quivered-19, then-18)
dep(stood-2, quivered-19)
conj_and(speaking-10, quivered-19)
advmod(going-24, as-20)
mark(going-24, if-21)
nsubj(going-24, she-22)
nsubj(cry-26, she-22)
aux(going-24, were-23)
advcl(quivered-19, going-24)
aux(cry-26, to-25)
xcomp(going-24, cry-26)
nsubj(did-30, she-29)
conj_but(stood-2, did-30)
neg(did-30, not-31)

(ROOT
  (S
    (S
      (S
        (NP (NNP Alexa))
        (VP (VBD offered)
          (VP (VB bail))))
      (, ,)
      (CC but)
      (S
        (NP (PRP$ his) (NN worship))
        (VP (MD would) (RB not)
          (VP (VB accept)
            (NP (PRP it))))))
    (: :)
    (S
      (NP (PRP$ his) (JJ righteous) (NN soul))
      (VP (VBD was)
        (ADJP (RB too) (JJ indignant))))
    (. .)))

nsubj(offered-2, Alexa-1)
root(ROOT-0, offered-2)
xcomp(offered-2, bail-3)
poss(worship-7, his-6)
nsubj(accept-10, worship-7)
aux(accept-10, would-8)
neg(accept-10, not-9)
conj_but(offered-2, accept-10)
dobj(accept-10, it-11)
poss(soul-15, his-13)
amod(soul-15, righteous-14)
nsubj(indignant-18, soul-15)
cop(indignant-18, was-16)
advmod(indignant-18, too-17)
parataxis(offered-2, indignant-18)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP
        (VP (VBD went)
          (PP (TO to)
            (NP (NNP Dawtie))))
        (CC and)
        (VP (VBD kissed)
          (NP (PRP her)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB together))
      (NP (PRP they))
      (VP (VBD followed)
        (NP (DT the) (NN policeman))
        (PP (TO to)
          (NP (DT the) (NN door)))
        (, ,)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NNP Dawtie))
            (VP (VBD was)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB get)
                      (PP (IN into)
                        (NP
                          (NP (DT a) (NN spring-cart))
                          (PP (IN with)
                            (NP (PRP him))))))
                    (, ,)
                    (CC and)
                    (VP (VB be)
                      (VP (VBN driven)
                        (PP (TO to)
                          (NP (DT the) (NN county) (NN town)))
                        (, ,)
                        (S
                          (ADVP (RB there))
                          (VP (TO to)
                            (VP (VB lie)
                              (S
                                (VP (VBG waiting)
                                  (NP (DT the) (NNS assizes)))))))))))))))))
    (. .)))

nsubj(went-2, She-1)
nsubj(kissed-6, She-1)
root(ROOT-0, went-2)
prep_to(went-2, Dawtie-4)
conj_and(went-2, kissed-6)
dobj(kissed-6, her-7)
advmod(followed-12, together-10)
nsubj(followed-12, they-11)
conj_and(went-2, followed-12)
det(policeman-14, the-13)
dobj(followed-12, policeman-14)
det(door-17, the-16)
prep_to(followed-12, door-17)
advmod(was-21, where-19)
nsubj(was-21, Dawtie-20)
nsubj(get-23, Dawtie-20)
nsubjpass(driven-32, Dawtie-20)
nsubj(lie-40, Dawtie-20)
advcl(followed-12, was-21)
aux(get-23, to-22)
xcomp(was-21, get-23)
det(spring-cart-26, a-25)
prep_into(get-23, spring-cart-26)
prep_with(spring-cart-26, him-28)
auxpass(driven-32, be-31)
xcomp(was-21, driven-32)
conj_and(get-23, driven-32)
det(town-36, the-34)
nn(town-36, county-35)
prep_to(driven-32, town-36)
advmod(lie-40, there-38)
aux(lie-40, to-39)
xcomp(driven-32, lie-40)
xcomp(lie-40, waiting-41)
det(assizes-43, the-42)
dobj(waiting-41, assizes-43)

(ROOT
  (S
    (NP (DT The) (JJ bad) (NN news))
    (VP (VBD had)
      (VP (VBN spread)
        (ADVP
          (ADVP (RB so) (RB fast))
          (SBAR (IN that)
            (S
              (SBAR (IN as)
                (S
                  (NP (PRP they))
                  (VP (VBD came)
                    (PRT (RP out)))))
              (, ,)
              (ADVP (RB up))
              (VP (VBD came)
                (NP (NNP Andrew))))))))
    (. .)))

det(news-3, The-1)
amod(news-3, bad-2)
nsubj(spread-5, news-3)
aux(spread-5, had-4)
root(ROOT-0, spread-5)
advmod(fast-7, so-6)
advmod(spread-5, fast-7)
mark(came-15, that-8)
mark(came-11, as-9)
nsubj(came-11, they-10)
advcl(came-15, came-11)
prt(came-11, out-12)
advmod(came-15, up-14)
advcl(fast-7, came-15)
ccomp(fast-7, came-15)
dobj(came-15, Andrew-16)

(ROOT
  (S
    (PP (IN At)
      (NP
        (NP (NN sight))
        (PP (IN of)
          (NP (PRP him)))))
    (NP (NNP Dawtie))
    (ADVP (RB gently))
    (VP (VBD laughed) (, ,)
      (PP (IN like)
        (NP (DT a)
          (ADJP (VBN pleased))
          (NN child))))
    (. .)))

prep_at(laughed-7, sight-2)
prep_of(sight-2, him-4)
nsubj(laughed-7, Dawtie-5)
advmod(laughed-7, gently-6)
root(ROOT-0, laughed-7)
det(child-12, a-10)
amod(child-12, pleased-11)
prep_like(laughed-7, child-12)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN policeman))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S (, ,)
            (PP (IN like)
              (NP (JJ many) (NN present)))
            (, ,)
            (VP (VBD had)
              (VP (VBN been)
                (ADJP (VBN prejudiced)
                  (PP (IN by)
                    (NP (PRP$ her) (NNS looks))))
                (PP (IN in)
                  (NP (PRP$ her) (NN favor)))))))
        (, ,))
      (VP (VBD dropped)
        (PRT (RP behind))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD walked)
        (PP (IN between)
          (NP
            (NP (PRP$ her) (NN mistress))
            (CC and)
            (NP (NNP Andrew))))
        (PP (TO to)
          (NP (DT the) (NN cart)))))
    (. .)))

det(policeman-2, The-1)
nsubjpass(prejudiced-12, policeman-2)
nsubj(dropped-20, policeman-2)
amod(present-8, many-7)
prep_like(prejudiced-12, present-8)
aux(prejudiced-12, had-10)
auxpass(prejudiced-12, been-11)
rcmod(policeman-2, prejudiced-12)
poss(looks-15, her-14)
agent(prejudiced-12, looks-15)
poss(favor-18, her-17)
prep_in(prejudiced-12, favor-18)
root(ROOT-0, dropped-20)
prt(dropped-20, behind-21)
nsubj(walked-25, she-24)
conj_and(dropped-20, walked-25)
poss(mistress-28, her-27)
prep_between(walked-25, mistress-28)
prep_between(walked-25, Andrew-30)
conj_and(mistress-28, Andrew-30)
det(cart-33, the-32)
prep_to(walked-25, cart-33)

(ROOT
  (S (`` ``)
    (VP (VB Dawtie))
    (. !) ('' '')))

root(ROOT-0, Dawtie-2)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh) (, ,) (UH Andrew))
    (. !)))

root(ROOT-0, Oh-2)
dep(Oh-2, Andrew-4)

(ROOT
  (FRAG
    (S
      (VP (VBZ has)
        (NP
          (NP (NNP God))
          (VP (VBN forgotten)
            (NP (PRP me))))))
    (. ?) ('' '')))

root(ROOT-0, has-1)
dobj(has-1, God-2)
vmod(God-2, forgotten-3)
dobj(forgotten-3, me-4)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD returned) (, ,)
      (S
        (VP (VBG stopping)
          (ADJP (JJ short)))))
    (. .)))

nsubj(returned-2, she-1)
root(ROOT-0, returned-2)
xcomp(returned-2, stopping-4)
acomp(stopping-4, short-5)

(ROOT
  (S (`` ``)
    (SBAR (IN For)
      (S
        (NP (NNP God))
        (VP (TO to)
          (VP (VB forget)))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD answered))
        (NP (NNP Andrew)))
      (, ,))
    (`` ``)
    (VP (MD would)
      (VP (VB be)
        (S (RB not)
          (VP (TO to)
            (VP (VB be)
              (NP (NNP God))
              (ADVP (DT any) (RBR longer)))))))
    (. !) ('' '')))

mark(forget-5, For-2)
nsubj(forget-5, God-3)
aux(forget-5, to-4)
advcl(be-13, forget-5)
csubj(be-13, forget-5)
parataxis(be-13, answered-8)
nsubj(answered-8, Andrew-9)
aux(be-13, would-12)
root(ROOT-0, be-13)
neg(God-17, not-14)
aux(God-17, to-15)
cop(God-17, be-16)
xcomp(be-13, God-17)
dep(longer-19, any-18)
advmod(God-17, longer-19)

(ROOT
  (S (`` ``)
    (CC But)
    (ADVP (RB here))
    (NP (PRP I))
    (VP (VBP am)
      (PP (IN on)
        (NP
          (NP
            (NP (PRP$ my) (NN road) (NN til))
            (NP (DT a) (NN prison)))
          (, ,)
          (NP (NNP Andrew)))))
    (. !)))

cc(am-5, But-2)
advmod(am-5, here-3)
nsubj(am-5, I-4)
root(ROOT-0, am-5)
poss(til-9, my-7)
nn(til-9, road-8)
prep_on(am-5, til-9)
det(prison-11, a-10)
dep(til-9, prison-11)
appos(til-9, Andrew-13)

(ROOT
  (S
    (NP (PRP I))
    (PRN
      (S
        (NP (NN didna))
        (VP (VBP think)
          (SBAR
            (S
              (NP (PRP He))
              (VP (MD would)
                (VP (VB hae)
                  (NP (NN latten)))))))))
    (NP (PRP them))
    (VP (VBP do) (`` `)
      (NP (NN t)))
    (. !) ('' '')))

nsubj(do-9, I-1)
nsubj(think-3, didna-2)
parataxis(do-9, think-3)
nsubj(hae-6, He-4)
aux(hae-6, would-5)
ccomp(think-3, hae-6)
dobj(hae-6, latten-7)
nsubj(do-9, them-8)
root(ROOT-0, do-9)
dobj(do-9, t-11)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT A) (JJ bairn) (NN micht) (NN jist))
      (PP (IN as)
        (NP (NN weel))))
    (VP (VBP say) (, ,) (VBP whan)
      (NP
        (NP (PRP$ its) (NN nurse))
        (SBAR
          (S
            (NP
              (NP (NNP lays) (POS '))
              (NN t))
            (VP
              (VP (VBP intil)
                (NP (PRP$ its) (NN cradle)))
              (, ,)
              (CC and)
              (VP (VBZ says) (: :) (`` `)
                (S
                  (NP (NNP Noo))
                  (, ,)
                  (VP (VB lie)
                    (ADVP (RB still))))))))))
    (. !) ('' ')))

det(jist-5, A-2)
amod(jist-5, bairn-3)
nn(jist-5, micht-4)
nsubj(say-8, jist-5)
prep_as(jist-5, weel-7)
root(ROOT-0, say-8)
dep(say-8, whan-10)
poss(nurse-12, its-11)
dobj(say-8, nurse-12)
poss(t-15, lays-13)
nsubj(intil-16, t-15)
nsubj(says-21, t-15)
rcmod(nurse-12, intil-16)
poss(cradle-18, its-17)
dobj(intil-16, cradle-18)
rcmod(nurse-12, says-21)
conj_and(intil-16, says-21)
nsubj(lie-26, Noo-24)
ccomp(says-21, lie-26)
advmod(lie-26, still-27)

(ROOT
  (S (`` `)
    (ADVP (RB Mammy))
    (, ,)
    (NP (PRP I))
    (PRN
      (S
        (NP (NN didna))
        (VP (VBP think)
          (SBAR
            (S
              (NP (PRP ye))
              (VP (MD would)
                (VP (VB hae)
                  (NP (NN latten)))))))))
    (NP (PRP her))
    (VP (VBP do) (`` `)
      (NP (NN t)))
    (. !) ('' ')))

advmod(do-12, Mammy-2)
nsubj(do-12, I-4)
nsubj(think-6, didna-5)
parataxis(do-12, think-6)
nsubj(hae-9, ye-7)
aux(hae-9, would-8)
ccomp(think-6, hae-9)
dobj(hae-9, latten-10)
nsubj(do-12, her-11)
root(ROOT-0, do-12)
dobj(do-12, t-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ 's)
        (NP
          (NP (NNP a) (POS '))
          (JJ aboot) (NN ye)
          (CC and)
          (PP (IN in)
            (NP (PRP ye)))
          (, ,) (NN Dawtie))))
    (, ,)
    (CC and)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (VP (VBN come)
          (S
            (VP (TO to)
              (VP (VB ye)
                (NP
                  (ADJP (JJ jist)
                    (S
                      (VP (TO to)
                        (VP (VB lat)
                          (NP (PRP ye))))))
                  (NN ken))
                (`` `)
                (PP (IN at)
                  (S
                    (NP (PRP He))
                    (VP (VBZ is))))))))))
    (. .)))

nsubj(ye-6, He-1)
cop(ye-6, 's-2)
poss(ye-6, a-3)
amod(ye-6, aboot-5)
root(ROOT-0, ye-6)
prep_in(Dawtie-11, ye-9)
conj_and(ye-6, Dawtie-11)
nsubjpass(come-16, this-14)
nsubj(ye-18, this-14)
auxpass(come-16, is-15)
conj_and(ye-6, come-16)
aux(ye-18, to-17)
xcomp(come-16, ye-18)
amod(ken-23, jist-19)
aux(lat-21, to-20)
xcomp(jist-19, lat-21)
dobj(lat-21, ye-22)
dobj(ye-18, ken-23)
nsubj(is-27, He-26)
prepc_at(ye-18, is-27)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD raised)
      (SBAR
        (S
          (NP (PRP ye))
          (ADVP (RB up))
          (VP (VBP jist)
            (S
              (VP (TO to)
                (VP (VB spen) (`` ')
                  (NP (PRP$ His) (NN glory) (NN upo))
                  ('' '))))))))
    (. !)))

nsubj(raised-2, He-1)
root(ROOT-0, raised-2)
nsubj(jist-5, ye-3)
nsubj(spen-7, ye-3)
advmod(jist-5, up-4)
ccomp(raised-2, jist-5)
aux(spen-7, to-6)
xcomp(jist-5, spen-7)
poss(upo-11, His-9)
nn(upo-11, glory-10)
dobj(spen-7, upo-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP say)))
    (, ,)
    (NP (NNP Dawtie) (, ,))
    (VP (VBD did)
      (SBAR
        (S
          (NP (NNP Jesus) (NNP Christ))
          (VP (VBP deserve)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP He))
                (VP (VBD got))))))))
    (. ?) ('' '')))

nsubj(say-2, I-1)
ccomp(did-6, say-2)
nsubj(did-6, Dawtie-4)
root(ROOT-0, did-6)
nn(Christ-8, Jesus-7)
nsubj(deserve-9, Christ-8)
ccomp(did-6, deserve-9)
dobj(got-12, what-10)
nsubj(got-12, He-11)
ccomp(deserve-9, got-12)

(ROOT
  (FRAG (`` ``)
    (NP (DT No) (NN ae) (NN bit))
    (, ,)
    (NP (NNP Andrew))
    (. !)))

neg(bit-4, No-2)
nn(bit-4, ae-3)
root(ROOT-0, bit-4)
dep(bit-4, Andrew-6)

(ROOT
  (SBARQ
    (WHNP
      (WHNP (WP What))
      (PP (IN for)))
    (SQ (MD should)
      (NP (PRP ye))
      (VP (VB speir)
        (NP
          (NP (NN sic))
          (NP (DT a) (NN thing)))))
    (. ?) ('' '')))

dep(speir-5, What-1)
prep(What-1, for-2)
aux(speir-5, should-3)
nsubj(speir-5, ye-4)
root(ROOT-0, speir-5)
dobj(speir-5, sic-6)
iobj(speir-5, sic-6)
det(thing-8, a-7)
dep(sic-6, thing-8)

(ROOT
  (S (`` ``) (RB Then)
    (VP (VBP do)
      (SBAR
        (S
          (NP (PRP ye))
          (VP (VBP think)
            (NP
              (NP (NNP God) (NNP hae))
              (VP (VBN forgotten)
                (NP (PRP Him))))))))
    (. ?) ('' '')))

advmod(do-3, Then-2)
root(ROOT-0, do-3)
nsubj(think-5, ye-4)
ccomp(do-3, think-5)
nn(hae-7, God-6)
dobj(think-5, hae-7)
vmod(hae-7, forgotten-8)
dobj(forgotten-8, Him-9)

(ROOT
  (S (`` ``)
    (NP (NNP May))
    (VP (VB be)
      (S
        (NP (PRP He))
        (VP (VB thoucht)
          (S
            (NP (PRP it))
            (ADJP (JJ jist)
              (PP (IN for)
                (NP (DT a) (NN minute))))))))
    (. !) ('' '')))

nsubj(be-3, May-2)
root(ROOT-0, be-3)
nsubj(thoucht-5, He-4)
ccomp(be-3, thoucht-5)
nsubj(jist-7, it-6)
xcomp(thoucht-5, jist-7)
det(minute-10, a-9)
prep_for(jist-7, minute-10)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP ye))
      (VP (VBP hae)
        (NP
          (NP (JJ thoucht) (NN jist))
          (PP (IN for)
            (NP (DT a) (NN minute))))))
    (, ,)
    (CC and)
    (S
      (NP (JJ ye) (NN maun))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBP nae)
              (NP (NN mair)))))))
    (. .) ('' '')))

discourse(hae-5, Well-2)
nsubj(hae-5, ye-4)
root(ROOT-0, hae-5)
amod(jist-7, thoucht-6)
dobj(hae-5, jist-7)
det(minute-10, a-9)
prep_for(jist-7, minute-10)
amod(maun-14, ye-13)
nsubj(think-15, maun-14)
conj_and(hae-5, think-15)
nsubj(nae-17, it-16)
ccomp(think-15, nae-17)
dobj(nae-17, mair-18)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (NNP God) (NNP couldna))
    (VP (VBP forget)
      (NP
        (NP
          (NP (NNP _) (NNP Him) (NNP _))
          (, ,)
          (NP (DT An) (`` `) (NN rew)))
        (: :)
        (S
          (NP (PRP He))
          (VP (VBD got)
            (NP (PRP it) (DT a))
            ('' ')
            (PP (IN for)
              (NP
                (NP (NN doin) (POS '))
                (NP (PRP$ His) (NN will))))))))
    (. !) ('' '')))

cc(forget-5, But-2)
nn(couldna-4, God-3)
nsubj(forget-5, couldna-4)
root(ROOT-0, forget-5)
nn(_-8, _-6)
nn(_-8, Him-7)
dobj(forget-5, _-8)
det(rew-12, An-10)
appos(_-8, rew-12)
nsubj(got-15, He-14)
dep(_-8, got-15)
dobj(got-15, it-16)
dep(it-16, a-17)
prep_for(got-15, doin-20)
poss(will-23, His-22)
dep(doin-20, will-23)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Evil))
      (VP (MD may)
        (VP (VB come)
          (PRT (RP upon))
          (ADVP (RB as)
            (PP (IN from)
              (NP (JJ other) (NNS causes))))
          (PP (IN than)
            (S
              (VP (VBG doing)
                (NP
                  (NP (DT the) (NN will))
                  (PP (IN of)
                    (NP (NNP God))))))))))
    (: ;)
    (CC but)
    (S
      (PP (IN from)
        (NP (WDT whatever) (NN cause)))
      (NP (PRP it))
      (VP
        (VP (VBZ comes))
        (, ,)
        (NP
          (NP (DT the) (NN thing))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP have)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (S
                        (VP (TO to)
                          (VP (VBZ is)))))))
                (, ,)
                (SBAR (IN that)
                  (S
                    (PP (IN through)
                      (NP (PRP it) (DT all)))
                    (NP (PRP we))
                    (VP (VBP do)
                      (NP
                        (NP (DT the) (NN will))
                        (PP (IN of)
                          (NP (NNP God)))))))))))))
    (. !) ('' '')))

nsubj(come-4, Evil-2)
aux(come-4, may-3)
root(ROOT-0, come-4)
prt(come-4, upon-5)
amod(causes-9, other-8)
prep_as_from(come-4, causes-9)
prepc_than(come-4, doing-11)
det(will-13, the-12)
dobj(doing-11, will-13)
prep_of(will-13, God-15)
det(cause-20, whatever-19)
prep_from(comes-22, cause-20)
nsubj(comes-22, it-21)
conj_but(come-4, comes-22)
det(thing-25, the-24)
dobj(comes-22, thing-25)
mark(do-38, thing-25)
nsubj(have-27, we-26)
nsubj(see-29, we-26)
nsubj(is-31, we-26)
rcmod(thing-25, have-27)
aux(see-29, to-28)
xcomp(have-27, see-29)
aux(is-31, to-30)
xcomp(see-29, is-31)
prep_through(do-38, it-35)
det(it-35, all-36)
nsubj(do-38, we-37)
ccomp(have-27, do-38)
det(will-40, the-39)
dobj(do-38, will-40)
prep_of(will-40, God-42)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (PRP$ His) (NN will) (NN noo))
        (, ,)
        (NP (DT An) (`` `) (NN rew))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, 's-3)
poss(noo-6, His-4)
nn(noo-6, will-5)
nsubj(What-2, noo-6)
det(rew-10, An-8)
appos(noo-6, rew-10)

(ROOT
  (S (`` ``)
    (NP (DT That) (NN ye))
    (VP (VBP tak)
      (NP (PRP it))
      (ADVP (RB quaietly)))
    (. .)))

det(ye-3, That-2)
nsubj(tak-4, ye-3)
root(ROOT-0, tak-4)
dobj(tak-4, it-5)
advmod(tak-4, quaietly-6)

(ROOT
  (S
    (NP (NNP Shall))
    (RB not)
    (NP (DT the) (NNP Father))
    (VP (VBP do)
      (NP (NN wi) ('' '))
      (NP
        (NP (PRP$ His) (NN ain) (NN child))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP He))
            (VP (MD will))))))
    (. !)))

nsubj(do-5, Shall-1)
neg(do-5, not-2)
det(Father-4, the-3)
nsubj(do-5, Father-4)
root(ROOT-0, do-5)
iobj(do-5, wi-6)
poss(child-10, His-8)
nn(child-10, ain-9)
dobj(do-5, child-10)
dobj(will-13, child-10)
nsubj(will-13, He-12)
rcmod(child-10, will-13)

(ROOT
  (SQ (MD Can)
    (NP (PRP He))
    (ADVP (DT no))
    (VP (VB shift)
      (S
        (NP (PRP it))
        (VP (VB frae)
          (NP (DT the) (NN tae) (NN airm))
          (PP (TO to)
            (NP
              (NP (DT the) (NN tither))
              (, ,)
              (CC but)
              (NP (DT the) (JJ bairn) (NN maun) (NN girn)))))))
    (. ?)))

aux(shift-4, Can-1)
nsubj(shift-4, He-2)
advmod(shift-4, no-3)
root(ROOT-0, shift-4)
nsubj(frae-6, it-5)
ccomp(shift-4, frae-6)
det(airm-9, the-7)
nn(airm-9, tae-8)
dobj(frae-6, airm-9)
det(tither-12, the-11)
prep_to(frae-6, tither-12)
det(girn-18, the-15)
amod(girn-18, bairn-16)
nn(girn-18, maun-17)
prep_to(frae-6, girn-18)
conj_but(tither-12, girn-18)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ has)
      (NP
        (NP (PRP ye))
        (, ,)
        (NP (NNP Dawtie))))
    (. !)))

nsubj(has-2, He-1)
root(ROOT-0, has-2)
dobj(has-2, ye-3)
appos(ye-3, Dawtie-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (NNP a) (POS '))
        (NN richt)))
    (. !) ('' '')))

nsubj(richt-5, It-1)
cop(richt-5, 's-2)
poss(richt-5, a-3)
root(ROOT-0, richt-5)

(ROOT
  (S (`` ``)
    (SBAR (IN Though)
      (S
        (NP (PRP He))
        (VP (VBP slay)
          (NP (PRP me)))))
    (, ,)
    (ADVP (RB yet))
    (VP (VB will)
      (NP (PRP I))
      (NP
        (NP (NN trust))
        (PP (IN in)
          (NP (PRP Him)))))
    (. !) ('' '')))

mark(slay-4, Though-2)
nsubj(slay-4, He-3)
advcl(will-8, slay-4)
dobj(slay-4, me-5)
advmod(will-8, yet-7)
root(ROOT-0, will-8)
iobj(will-8, I-9)
dobj(will-8, trust-10)
prep_in(trust-10, Him-12)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Dawtie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Dawtie-2)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD raised)
      (NP (PRP$ her) (NN head)))
    (. .)))

nsubj(raised-2, She-1)
root(ROOT-0, raised-2)
poss(head-4, her-3)
dobj(raised-2, head-4)

(ROOT
  (S
    (S
      (NP (DT The) (NN color))
      (VP (VBD had)
        (VP (VBN come)
          (PRT (RP back))
          (PP (TO to)
            (NP (PRP$ her) (NN face))))))
    (: ;)
    (S
      (NP (PRP$ her) (NNS lips))
      (VP (VBD had)
        (VP (VBN ceased)
          (S
            (VP (TO to)
              (VP (VB tremble)))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBD stepped)
        (PP (IN on)
          (ADVP (RB steadily)))
        (PP (TO to)
          (SBAR
            (WHADVP (WRB where))
            (S (, ,)
              (PP
                (NP (DT a) (JJ few) (NNS yards))
                (IN from)
                (NP (DT the) (NN door)))
              (, ,)
              (NP (DT the) (NN spring-cart))
              (VP (VBD was)
                (VP (VBG waiting)
                  (NP (PRP her)))))))))
    (. .)))

det(color-2, The-1)
nsubj(come-4, color-2)
aux(come-4, had-3)
root(ROOT-0, come-4)
prt(come-4, back-5)
poss(face-8, her-7)
prep_to(come-4, face-8)
poss(lips-11, her-10)
nsubj(ceased-13, lips-11)
nsubj(tremble-15, lips-11)
aux(ceased-13, had-12)
parataxis(come-4, ceased-13)
aux(tremble-15, to-14)
xcomp(ceased-13, tremble-15)
nsubj(stepped-18, she-17)
parataxis(come-4, stepped-18)
prep(stepped-18, on-19)
pcomp(on-19, steadily-20)
advmod(waiting-34, where-22)
det(yards-26, a-24)
amod(yards-26, few-25)
npadvmod(waiting-34, yards-26)
det(door-29, the-28)
prep_from(waiting-34, door-29)
det(spring-cart-32, the-31)
nsubj(waiting-34, spring-cart-32)
aux(waiting-34, was-33)
prepc_to(stepped-18, waiting-34)
dobj(waiting-34, her-35)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBP bade)
        (NP (PRP$ her) (NN mistress) (NN good-bye)))
      (, ,)
      (VP
        (ADVP (RB then))
        (VBD turned)
        (PP (TO to)
          (NP (NNP Andrew))))
      (CC and)
      (VP (VBD said))
      (: :) (`` ``)
      (NP
        (NP (NN Good-bye))
        (, ,)
        (NP (DT An) (`` `) (NN rew))))
    (. !)))

nsubj(bade-2, She-1)
nsubj(turned-8, She-1)
nsubj(said-12, She-1)
root(ROOT-0, bade-2)
poss(good-bye-5, her-3)
nn(good-bye-5, mistress-4)
dobj(bade-2, good-bye-5)
advmod(turned-8, then-7)
conj_and(bade-2, turned-8)
prep_to(turned-8, Andrew-10)
conj_and(bade-2, said-12)
conj_and(bade-2, Good-bye-15)
dobj(bade-2, Good-bye-15)
det(rew-19, An-17)
appos(Good-bye-15, rew-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (ADJP (JJ afraid)))
    (. .) ('' '')))

nsubj(afraid-4, I-1)
cop(afraid-4, am-2)
neg(afraid-4, not-3)
root(ROOT-0, afraid-4)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG going)
          (PP (IN with)
            (NP
              (NP (PRP you))
              (, ,)
              (NP (NNP Dawtie)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Andrew))
    (. .)))

nsubj(going-4, I-2)
aux(going-4, am-3)
ccomp(said-11, going-4)
prep_with(going-4, you-6)
appos(you-6, Dawtie-8)
root(ROOT-0, said-11)
nsubj(said-11, Andrew-12)

(ROOT
  (S
    (INTJ (`` ``) (UH No))
    (, ,)
    (ADVP (RB sir))
    (, ,)
    (NP (PRP you))
    (VP (MD ca) (RB n't)
      (VP (VB do)
        (NP (DT that))))
    (. !) ('' '')))

discourse(do-9, No-2)
advmod(do-9, sir-4)
nsubj(do-9, you-6)
aux(do-9, ca-7)
neg(do-9, n't-8)
root(ROOT-0, do-9)
dobj(do-9, that-10)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (DT the) (NN policeman))))
    (: ;) (`` ``)
    (S
      (ADVP (IN at) (JJS least))
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (VB go)
          (PP (IN in)
            (NP (DT the) (NN trap))))))
    (. !) ('' '')))

root(ROOT-0, said-1)
det(policeman-3, the-2)
dobj(said-1, policeman-3)
advmod(go-11, at-6)
pobj(at-6, least-7)
nsubj(go-11, you-8)
aux(go-11, ca-9)
neg(go-11, n't-10)
parataxis(said-1, go-11)
det(trap-14, the-13)
prep_in(go-11, trap-14)

(ROOT
  (FRAG
    (INTJ
      (INTJ (`` ``) (UH No))
      (, ,)
      (INTJ (UH no)))
    (, ,)
    (NP (NNP Andrew))
    (. !) ('' '')))

discourse(Andrew-6, No-2)
discourse(No-2, no-4)
root(ROOT-0, Andrew-6)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Dawtie)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Dawtie-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD would) (RB rather)
      (VP (VB go)
        (ADVP (RB alone))))
    (. .)))

nsubj(go-5, I-2)
aux(go-5, would-3)
advmod(go-5, rather-4)
root(ROOT-0, go-5)
advmod(go-5, alone-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (RB quite) (JJ happy))
      (ADVP (RB now)))
    (. .)))

nsubj(happy-4, I-1)
cop(happy-4, am-2)
advmod(happy-4, quite-3)
root(ROOT-0, happy-4)
advmod(happy-4, now-5)

(ROOT
  (S
    (NP (NNP God))
    (VP (MD will)
      (VP (VB do)
        (PP (IN with)
          (NP (PRP me)))
        (SBAR (IN as)
          (S
            (NP (PRP He))
            (VP (VBZ pleases))))))
    (. !) ('' '')))

nsubj(do-3, God-1)
aux(do-3, will-2)
root(ROOT-0, do-3)
prep_with(do-3, me-5)
mark(pleases-8, as-6)
nsubj(pleases-8, He-7)
advcl(do-3, pleases-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG going)
        (PP (IN with)
          (NP (PRP you)))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (NNP Alexa)))
      (, ,) (`` ``))
    (SBAR (IN if)
      (S
        (NP (DT the) (NN policeman))
        (VP (MD will)
          (VP (VB let)
            (NP (PRP me))))))
    (. .) ('' '')))

nsubj(going-4, I-2)
aux(going-4, am-3)
root(ROOT-0, going-4)
prep_with(going-4, you-6)
parataxis(going-4, said-9)
nsubj(said-9, Alexa-10)
mark(let-17, if-13)
det(policeman-15, the-14)
nsubj(let-17, policeman-15)
aux(let-17, will-16)
dep(going-4, let-17)
dobj(let-17, me-18)

(ROOT
  (FRAG
    (INTJ
      (INTJ (`` ``) (UH Oh))
      (, ,)
      (INTJ (UH yes)))
    (, ,)
    (NP (NN ma'am))
    (. !)))

discourse(ma'am-6, Oh-2)
discourse(Oh-2, yes-4)
root(ROOT-0, ma'am-6)

(ROOT
  (S
    (NP (DT A) (NN lady))
    (VP (VBZ 's)
      (ADJP (JJ different)))
    (. !)))

det(lady-2, A-1)
nsubj(different-4, lady-2)
cop(different-4, 's-3)
root(ROOT-0, different-4)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB account)
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN prisoner))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP see))))))))))))
    (, ,)
    (ADVP (RB sir))
    (. !) ('' '')))

nsubj(got-4, I-2)
nsubj(account-6, I-2)
aux(got-4, 've-3)
root(ROOT-0, got-4)
aux(account-6, to-5)
xcomp(got-4, account-6)
det(prisoner-9, the-8)
prep_for(account-6, prisoner-9)
nsubj(see-11, you-10)
rcmod(prisoner-9, see-11)
advmod(got-4, sir-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (S
            (NP (PRP you))
            (VP (MD should)))
          (, ,)
          (NP (NN ma'am)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Dawtie))
    (. .)))

nsubj(think-5, I-2)
aux(think-5, do-3)
neg(think-5, n't-4)
ccomp(said-12, think-5)
nsubj(should-7, you-6)
ccomp(think-5, should-7)
dobj(think-5, ma'am-9)
root(ROOT-0, said-12)
nsubj(said-12, Dawtie-13)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT a) (JJ long) (NN way)))
    (. !) ('' '')))

nsubj(way-6, It-2)
cop(way-6, 's-3)
det(way-6, a-4)
amod(way-6, long-5)
root(ROOT-0, way-6)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG going))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP (PRP$ her) (NN mistress))
      (, ,)
      (NP (NNP decisively)))
    (. .)))

nsubj(going-4, I-2)
aux(going-4, am-3)
ccomp(returned-7, going-4)
root(ROOT-0, returned-7)
poss(mistress-9, her-8)
nsubj(returned-7, mistress-9)
appos(mistress-9, decisively-11)

(ROOT
  (S (`` ``)
    (NP (NNP God))
    (VP (VB bless)
      (NP (PRP you))
      (, ,) (VB ma'am))
    (. !) ('' '')))

nsubj(bless-3, God-2)
root(ROOT-0, bless-3)
dobj(bless-3, you-4)
dep(bless-3, ma'am-6)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD had)
      (VP (VBN heard)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (VP (VBD said)
              (PP (TO to)
                (NP (NNP Dawtie))))))))
    (. .)))

nsubj(heard-3, Alexa-1)
aux(heard-3, had-2)
root(ROOT-0, heard-3)
dobj(said-6, what-4)
nsubj(said-6, he-5)
ccomp(heard-3, said-6)
prep_to(said-6, Dawtie-8)

(ROOT
  (S
    (NP (DT A) (JJ new) (NN light))
    (VP (VBD had)
      (VP (VBN broken)
        (PP (IN upon)
          (NP (PRP her)))))
    (. .)))

det(light-3, A-1)
amod(light-3, new-2)
nsubj(broken-5, light-3)
aux(broken-5, had-4)
root(ROOT-0, broken-5)
prep_upon(broken-5, her-7)

(ROOT
  (S (`` ``)
    (NP (NNP God))
    (VP (VBZ is)
      (SBAR (IN like)
        (S
          (NP (DT that))
          (, ,)
          (VP (VBZ is)
            (NP (PRP He))))))
    (. ?) ('' '')))

nsubj(is-3, God-2)
root(ROOT-0, is-3)
mark(He-8, like-4)
nsubj(He-8, that-5)
cop(He-8, is-7)
advcl(is-3, He-8)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said)
      (PP (TO to)
        (NP (PRP herself))))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
prep_to(said-2, herself-4)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD can)
      (VP (VB go)
        (ADVP (RB close) (RB up))
        (PP (TO to)
          (NP (PRP Him)))
        (SBAR
          (WHADVP (WRB whenever))
          (S
            (NP (PRP you))
            (VP (VBP like))))))
    (. ?) ('' '')))

nsubj(go-4, You-2)
aux(go-4, can-3)
root(ROOT-0, go-4)
advmod(up-6, close-5)
advmod(go-4, up-6)
prep_to(go-4, Him-8)
advmod(like-11, whenever-9)
nsubj(like-11, you-10)
advcl(go-4, like-11)

(ROOT
  (NP (NNP CHAPTER) (NNP XXXII) (. .)))

nn(XXXII-2, CHAPTER-1)
root(ROOT-0, XXXII-2)

(ROOT
  (NP (NNP A) (NNP TALK) (NNP AT) (NNP POTLURG) (. .)))

nn(POTLURG-4, A-1)
nn(POTLURG-4, TALK-2)
nn(POTLURG-4, AT-3)
root(ROOT-0, POTLURG-4)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (NP (CD three) (NNS weeks))
        (SBAR (IN before)
          (S
            (NP (DT the) (NNS assizes))
            (VP (VBD came))))))
    (. .)))

nsubj(weeks-5, It-1)
aux(weeks-5, would-2)
cop(weeks-5, be-3)
num(weeks-5, three-4)
root(ROOT-0, weeks-5)
mark(came-9, before-6)
det(assizes-8, the-7)
nsubj(came-9, assizes-8)
advcl(weeks-5, came-9)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN house))
        (PP (IN of)
          (NP (NNP Potlurg))))
      (VP (VBD was)
        (VP (VBN searched)
          (PP (IN by)
            (NP
              (NP (DT the) (NN police))
              (PP (IN from)
                (NP (NN garret)))))
          (PP
            (PP (TO to)
              (NP (NN cellar)))
            (, ,)
            (CC but)
            (PP (IN in)
              (NP (JJ vain)))))))
    (: ;)
    (S
      (NP (DT the) (NN cup))
      (VP (VBD was) (RB not)
        (VP (VBN found))))
    (. .)))

det(house-2, The-1)
nsubjpass(searched-6, house-2)
nsubjpass(searched-6', house-2)
prep_of(house-2, Potlurg-4)
auxpass(searched-6, was-5)
root(ROOT-0, searched-6)
conj_but(searched-6, searched-6')
det(police-9, the-8)
agent(searched-6, police-9)
prep_from(police-9, garret-11)
prep_to(searched-6, cellar-13)
prep_in(searched-6', vain-17)
det(cup-20, the-19)
nsubjpass(found-23, cup-20)
auxpass(found-23, was-21)
neg(found-23, not-22)
parataxis(searched-6, found-23)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (SBAR (RB soon) (IN as)
            (S
              (NP (PRP they))
              (VP (VBD gave)
                (PRT (RP up))
                (S
                  (VP (VBG searching))))))
          (, ,)
          (NP (NNP Alexa))
          (VP (VBD had)
            (NP
              (NP (DT the) (JJ old) (NN door))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN laird) (POS 's))
                  (NN closet)))))))
      (, ,)
      (S
        (VP (VBG discernible)
          (NP (RB enough))
          (PP (IN on)
            (NP (DT the) (NN inside)))))
      (, ,)
      (VP (VBN reopened)))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN room))
      (VP (VBD cleaned)))
    (. .)))

mark(had-10, As-1)
advmod(gave-5, soon-2)
mark(gave-5, as-3)
nsubj(gave-5, they-4)
advcl(had-10, gave-5)
prt(gave-5, up-6)
xcomp(gave-5, searching-7)
nsubj(had-10, Alexa-9)
advcl(reopened-26, had-10)
det(door-13, the-11)
amod(door-13, old-12)
dobj(had-10, door-13)
det(laird-16, the-15)
poss(closet-18, laird-16)
prep_of(door-13, closet-18)
dep(reopened-26, discernible-20)
dobj(discernible-20, enough-21)
det(inside-24, the-23)
prep_on(discernible-20, inside-24)
root(ROOT-0, reopened-26)
det(room-30, the-29)
nsubj(cleaned-31, room-30)
conj_and(reopened-26, cleaned-31)

(ROOT
  (S
    (S
      (NP (NNP Almost))
      (VP (VBD unfurnished)
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (VBD was))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD made)
      (PP (IN of)
        (NP (PRP it)))
      (NP (PRP$ her) (NN sitting-parlor)))
    (. .)))

nsubj(unfurnished-2, Almost-1)
ccomp(made-8, unfurnished-2)
mark(was-5, as-3)
nsubj(was-5, it-4)
advcl(unfurnished-2, was-5)
nsubj(made-8, she-7)
root(ROOT-0, made-8)
prep_of(made-8, it-10)
poss(sitting-parlor-12, her-11)
dobj(made-8, sitting-parlor-12)

(ROOT
  (S (CC But)
    (S
      (ADVP (RB often))
      (NP
        (NP (PRP$ her) (NN work))
        (CC or)
        (NP (PRP$ her) (NN book)))
      (VP (MD would)
        (VP (VB lie)
          (PP (IN on)
            (NP (PRP$ her) (NN lap))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (MD would)
        (VP (VB find)
          (S
            (NP (PRP herself))
            (VP (VBG praying)
              (PP (IN for)
                (NP (DT the)
                  (ADJP (RB dear))
                  (NN father)))
              (SBAR
                (SBAR
                  (WHPP (IN for)
                    (WHNP (WP whom)))
                  (S
                    (NP (PRP she))
                    (VP (MD could)
                      (VP (VB do)
                        (NP (NN nothing) (RB else))
                        (ADVP (RB now))))))
                (, ,)
                (CC but)
                (SBAR
                  (WHPP (IN for)
                    (WHNP (WP whom)))
                  (S
                    (NP (PRP she))
                    (VP (MD might)
                      (VP (VB have)
                        (VP (VBN done)
                          (ADVP (RB so) (RB much)))))))))))))
    (, ,)
    (SBAR
      (SINV (VBD had)
        (NP (PRP she))
        (VP (VBN been)
          (PP (IN like)
            (NP (NNP Dawtie))))))
    (. .)))

advmod(lie-9, often-2)
poss(work-4, her-3)
nsubj(lie-9, work-4)
poss(book-7, her-6)
conj_or(work-4, book-7)
nsubj(lie-9, book-7)
aux(lie-9, would-8)
root(ROOT-0, lie-9)
poss(lap-12, her-11)
prep_on(lie-9, lap-12)
nsubj(find-17, she-15)
aux(find-17, would-16)
conj_and(lie-9, find-17)
nsubj(praying-19, herself-18)
dep(find-17, praying-19)
det(father-23, the-21)
amod(father-23, dear-22)
prep_for(praying-19, father-23)
prep_for(do-28, whom-25)
nsubj(do-28, she-26)
aux(do-28, could-27)
dep(praying-19, do-28)
dobj(do-28, nothing-29)
advmod(nothing-29, else-30)
advmod(do-28, now-31)
prep_for(done-39, whom-35)
nsubj(done-39, she-36)
aux(done-39, might-37)
aux(done-39, have-38)
dep(praying-19, done-39)
conj_but(do-28, done-39)
advmod(much-41, so-40)
advmod(done-39, much-41)
aux(been-45, had-43)
nsubj(been-45, she-44)
dep(lie-9, been-45)
prep_like(been-45, Dawtie-47)

(ROOT
  (S
    (NP (PRP$ Her) (NN servant))
    (VP (VBD had)
      (VP (VBN cared)
        (PP (IN for)
          (NP (PRP$ her) (NN father)))
        (PP (RBR more) (IN than)
          (NP (PRP she)))))
    (. !)))

poss(servant-2, Her-1)
nsubj(cared-4, servant-2)
aux(cared-4, had-3)
root(ROOT-0, cared-4)
poss(father-7, her-6)
prep_for(cared-4, father-7)
advmod(cared-4, more-8)
prep_than(cared-4, she-10)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP she))
        (VP (VBD sat)
          (ADVP (RB there)
            (NP (CD one) (NN morning)))
          (ADVP (RB alone))
          (, ,)
          (S
            (VP
              (VP (VBG brooding)
                (NP (DT a) (JJ little)))
              (, ,)
              (VP (VBG thinking)
                (NP (DT a) (JJ little)))
              (, ,)
              (VP (VBG reading)
                (NP (DT a) (JJ little)))
              (, ,)
              (CC and)
              (VP (VBG praying)
                (PP (IN through)
                  (NP (PRP it)))
                (ADVP (DT all))))))))
    (, ,)
    (NP (NNP Meg))
    (VP
      (VP (VBD appeared))
      (, ,)
      (CC and)
      (VP (VBD said)
        (SBAR
          (S
            (NP (NNP Maister) (NNP Andrew))
            (VP (VBD wanted)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP (PRP her))))))))))
    (. .)))

mark(sat-3, As-1)
nsubj(sat-3, she-2)
advcl(appeared-28, sat-3)
advmod(sat-3, there-4)
num(morning-6, one-5)
pobj(there-4, morning-6)
advmod(sat-3, alone-7)
ccomp(sat-3, brooding-9)
det(little-11, a-10)
dobj(brooding-9, little-11)
ccomp(sat-3, thinking-13)
conj_and(brooding-9, thinking-13)
det(little-15, a-14)
dobj(thinking-13, little-15)
ccomp(sat-3, reading-17)
conj_and(brooding-9, reading-17)
det(little-19, a-18)
dobj(reading-17, little-19)
ccomp(sat-3, praying-22)
conj_and(brooding-9, praying-22)
prep_through(praying-22, it-24)
advmod(praying-22, all-25)
nsubj(appeared-28, Meg-27)
nsubj(said-31, Meg-27)
root(ROOT-0, appeared-28)
conj_and(appeared-28, said-31)
nn(Andrew-33, Maister-32)
nsubj(wanted-34, Andrew-33)
nsubj(see-36, Andrew-33)
ccomp(said-31, wanted-34)
aux(see-36, to-35)
xcomp(wanted-34, see-36)
dobj(see-36, her-37)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD had)
        (VP (VBN called)
          (ADVP (RBR more) (IN than) (RB once))
          (S
            (VP (TO to)
              (VP (VB inquire)
                (PP (IN after)
                  (NP (NNP Dawtie))))))))
      (, ,)
      (CC but)
      (VP (VBD had) (RB not)
        (ADVP (RB before))
        (VP (VBN asked)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (PRP$ her) (NN mistress))))))))
    (. .)))

nsubj(called-3, He-1)
nsubj(inquire-8, He-1)
nsubj(asked-16, He-1)
nsubj(see-18, He-1)
aux(called-3, had-2)
root(ROOT-0, called-3)
advmod(than-5, more-4)
advmod(called-3, than-5)
advmod(than-5, once-6)
aux(inquire-8, to-7)
xcomp(called-3, inquire-8)
prep_after(inquire-8, Dawtie-10)
aux(asked-16, had-13)
neg(asked-16, not-14)
advmod(asked-16, before-15)
conj_but(called-3, asked-16)
aux(see-18, to-17)
xcomp(asked-16, see-18)
poss(mistress-20, her-19)
dobj(see-18, mistress-20)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD felt)
      (SBAR
        (S
          (NP (PRP herself))
          (VP
            (ADVP (RB unaccountably))
            (VBN agitated)))))
    (. .)))

nsubj(felt-2, Alexa-1)
root(ROOT-0, felt-2)
nsubj(agitated-5, herself-3)
advmod(agitated-5, unaccountably-4)
ccomp(felt-2, agitated-5)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD walked)
          (PP (IN into)
            (NP (DT the) (NN room)))
          (, ,)
          (ADVP (RB however)))))
    (, ,)
    (NP (PRP she))
    (VP (VBD was)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB receive)
              (NP (PRP him))
              (ADVP (RB quietly)))))))
    (. .)))

advmod(walked-3, When-1)
nsubj(walked-3, he-2)
advcl(able-12, walked-3)
det(room-6, the-5)
prep_into(walked-3, room-6)
advmod(walked-3, however-8)
nsubj(able-12, she-10)
nsubj(receive-14, she-10)
cop(able-12, was-11)
root(ROOT-0, able-12)
aux(receive-14, to-13)
xcomp(able-12, receive-14)
dobj(receive-14, him-15)
advmod(receive-14, quietly-16)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD came)))
    (, ,)
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (S
        (VP (TO to)
          (VP (VB ask)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP she))
                (VP (VBD had)
                  (VP (VBN seen)
                    (NP (NNP Dawtie))))))))))
    (. .)))

nsubj(came-2, He-1)
ccomp(said-5, came-2)
nsubj(said-5, he-4)
nsubj(ask-8, he-4)
root(ROOT-0, said-5)
aux(ask-8, to-7)
xcomp(said-5, ask-8)
advmod(seen-12, when-9)
nsubj(seen-12, she-10)
aux(seen-12, had-11)
ccomp(ask-8, seen-12)
dobj(seen-12, Dawtie-13)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN gone)
            (S
              (NP (PRP himself))
              (VP (TO to)
                (VP (VB see)
                  (NP (PRP her)))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP$ his) (NN father))
        (VP (VBD was)
          (ADJP (JJ ailing))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (NP (JJ double) (NN work)
            (S
              (VP (TO to)
                (VP (VB do))))))))
    (. .)))

nsubj(gone-4, He-1)
aux(gone-4, would-2)
aux(gone-4, have-3)
root(ROOT-0, gone-4)
dobj(gone-4, himself-5)
nsubj(see-7, himself-5)
aux(see-7, to-6)
xcomp(gone-4, see-7)
dobj(see-7, her-8)
poss(father-12, his-11)
nsubj(ailing-14, father-12)
cop(ailing-14, was-13)
conj_but(gone-4, ailing-14)
nsubj(had-18, he-17)
conj_but(gone-4, had-18)
conj_and(ailing-14, had-18)
amod(work-20, double-19)
dobj(had-18, work-20)
aux(do-22, to-21)
vmod(work-20, do-22)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (NP (PRP she))
    (VP (VBD did) (RB not)
      (VP (VB seem)
        (ADJP (JJ willing)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (PRP him))))))))
    (. !)))

advmod(seem-6, Besides-1)
nsubj(seem-6, she-3)
aux(seem-6, did-4)
neg(seem-6, not-5)
root(ROOT-0, seem-6)
acomp(seem-6, willing-7)
aux(see-9, to-8)
xcomp(willing-7, see-9)
dobj(see-9, him-10)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP
        (VP (VBD told)
          (NP (PRP him))
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN been)
                  (PP (IN with)
                    (NP
                      (NP (PRP her))
                      (NP (DT the) (NN day))))
                  (ADVP (RB before)))))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (VP (VBN found)
            (S
              (NP (PRP her))
              (ADJP (DT a) (RB little) (JJ pale)))))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD feared))
        (, ,)
        (VP
          (ADVP (RB rather))
          (JJ troubled)
          (PP (IN in)
            (NP (PRP$ her) (NN mind))))))
    (. .)))

nsubj(told-2, Alexa-1)
nsubj(found-15, Alexa-1)
root(ROOT-0, told-2)
dobj(told-2, him-3)
nsubj(been-6, she-4)
aux(been-6, had-5)
dep(told-2, been-6)
prep_with(been-6, her-8)
det(day-10, the-9)
dep(her-8, day-10)
advmod(been-6, before-11)
aux(found-15, had-14)
conj_and(told-2, found-15)
nsubj(pale-19, her-16)
det(pale-19, a-17)
advmod(pale-19, little-18)
xcomp(found-15, pale-19)
nsubj(feared-24, she-23)
conj_and(told-2, feared-24)
advmod(troubled-27, rather-26)
dep(feared-24, troubled-27)
poss(mind-30, her-29)
prep_in(troubled-27, mind-30)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP she))
            (VP (MD would)
              (VP (VB trust)
                (NP (NNP God))
                (PP (TO to)
                  (NP (DT the) (JJ last))))))))
      (, ,)
      (CC but)
      (VP (VBD confessed)
        (SBAR
          (S
            (NP (PRP herself))
            (VP (VBD assailed)
              (PP (IN by)
                (NP (NNS doubts))))))))
    (. .)))

nsubj(said-2, She-1)
nsubj(confessed-12, She-1)
root(ROOT-0, said-2)
nsubj(trust-5, she-3)
aux(trust-5, would-4)
ccomp(said-2, trust-5)
dobj(trust-5, God-6)
det(last-9, the-8)
prep_to(trust-5, last-9)
conj_but(said-2, confessed-12)
nsubj(assailed-14, herself-13)
ccomp(confessed-12, assailed-14)
prep_by(assailed-14, doubts-16)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD said)
        (PP (TO to)
          (NP (PRP her)))))
    (, ,) ('' '')
    (VP (VBD continued)
      (NP
        (NP (NNP Alexa))
        (PRN (, ,) ('' '')
          (S (`` `)
            (ADJP (RB Be) (JJ sure))
            (, ,)
            (NP (NNP Dawtie) (, ,) (NNP God))
            (VP (MD will)
              (VP (VB make)
                (NP (PRP$ your) (NN innocence))))))
        (VP (VBN known)
          (NP (CD one) (NN day)))))
    (. !) ('' ')))

nsubj(said-3, I-2)
ccomp(continued-8, said-3)
prep_to(said-3, her-5)
root(ROOT-0, continued-8)
dobj(continued-8, Alexa-9)
advmod(sure-14, Be-13)
dep(make-20, sure-14)
nn(God-18, Dawtie-16)
nsubj(make-20, God-18)
aux(make-20, will-19)
parataxis(known-23, make-20)
poss(innocence-22, your-21)
dobj(make-20, innocence-22)
vmod(Alexa-9, known-23)
num(day-25, one-24)
tmod(known-23, day-25)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD answered) (: :) (`` `)
      (S
        (S
          (PP (IN Of)
            (NP
              (NP (NN course))
              (, ,)
              (NP (NN ma'am))))
          (, ,)
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (NN nothing))
              (VP (VBN hidden))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD shall) (RB not)
                    (VP (VB be)
                      (VP (VBN known)))))))))
        (: ;)
        (CC but)
        (S
          (NP (PRP I))
          (VP (VBP am) (RB not)
            (ADJP (JJ impatient)
              (PP (IN about)
                (NP (DT that))))))))
    (. .)))

nsubj(answered-2, She-1)
root(ROOT-0, answered-2)
prep_of(is-11, course-6)
appos(course-6, ma'am-8)
expl(is-11, there-10)
dep(answered-2, is-11)
nsubj(is-11, nothing-12)
nsubjpass(known-18, nothing-12)
vmod(nothing-12, hidden-13)
aux(known-18, shall-15)
neg(known-18, not-16)
auxpass(known-18, be-17)
rcmod(nothing-12, known-18)
nsubj(impatient-24, I-21)
cop(impatient-24, am-22)
neg(impatient-24, not-23)
dep(answered-2, impatient-24)
conj_but(is-11, impatient-24)
prep_about(impatient-24, that-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NNPS Jews))
      (PP (TO to)
        (NP (DT this) (NN day))))
    (VP (VBP think)
      (S
        (VP (VBG Jesus)
          (NP (DT an) (NN impostor)))))
    (. !) ('' ')))

det(Jews-2, The-1)
nsubj(think-6, Jews-2)
det(day-5, this-4)
prep_to(Jews-2, day-5)
root(ROOT-0, think-6)
xcomp(think-6, Jesus-7)
det(impostor-9, an-8)
dobj(Jesus-7, impostor-9)

(ROOT
  (S (`` `)
    (CC But)
    (S
      (ADVP (RB surely))
      (PRN (, ,) ('' ')
        (SINV
          (VP (VBD said))
          (NP (PRP I)))
        (, ,) (`` `))
      (NP (PRP you))
      (VP (VBP care)
        (SBAR (IN that)
          (S
            (NP (NNS people))
            (VP (MD should)
              (VP (VB understand)
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP are)
                      (NP
                        (NP (DT no) (NN thief))
                        (, ,)
                        (NP (NNP Dawtie))))))))))))
    (. !) ('' ')))

cc(care-11, But-2)
advmod(care-11, surely-3)
parataxis(care-11, said-6)
nsubj(said-6, I-7)
nsubj(care-11, you-10)
root(ROOT-0, care-11)
mark(understand-15, that-12)
nsubj(understand-15, people-13)
aux(understand-15, should-14)
ccomp(care-11, understand-15)
nsubj(thief-19, you-16)
cop(thief-19, are-17)
neg(thief-19, no-18)
ccomp(understand-15, thief-19)
appos(thief-19, Dawtie-21)

(ROOT
  (S (`` `)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP I))
      (VP (VBP do)))
    (, ,) ('' ')
    (NP (PRP she))
    (VP (VBD answered) (: ;) (`` `)
      (S
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP say)
                (SBAR
                  (S
                    (VP (VBZ is)
                      (PRN (, ,)
                        (INTJ (DT that) (VBZ is))))))))))
        (VP (VBZ does) (RB not)
          (VP (VB trouble)
            (NP (PRP me))))))
    (. .)))

discourse(do-5, Yes-2)
nsubj(do-5, I-4)
ccomp(answered-9, do-5)
nsubj(answered-9, she-8)
root(ROOT-0, answered-9)
discourse(is-15, all-12)
nsubj(trouble-21, all-12)
nsubj(say-14, I-13)
rcmod(all-12, say-14)
ccomp(say-14, is-15)
dep(that-17, is-18)
aux(trouble-21, does-19)
neg(trouble-21, not-20)
ccomp(answered-9, trouble-21)
dobj(trouble-21, me-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (ADVP (RB only))
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (RB downright) (JJ sure))
            (SBAR (IN that)
              (S
                (NP (NNP God))
                (VP (VBZ is)
                  (VP (VBG looking)
                    (PP (IN after)
                      (NP (PRP me)))
                    (NP (PDT all) (DT the) (NN time))))))))))
    (. .)))

nsubj(want-2, I-1)
nsubj(sure-7, I-1)
root(ROOT-0, want-2)
advmod(want-2, only-3)
aux(sure-7, to-4)
cop(sure-7, be-5)
advmod(sure-7, downright-6)
xcomp(want-2, sure-7)
mark(looking-11, that-8)
nsubj(looking-11, God-9)
aux(looking-11, is-10)
ccomp(sure-7, looking-11)
prep_after(looking-11, me-13)
predet(time-16, all-14)
det(time-16, the-15)
dobj(looking-11, time-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ willing)
        (S
          (VP (TO to)
            (VP (VB sit)
              (PP (IN in)
                (NP (NN prison)))
              (SBAR (IN till)
                (S
                  (NP (PRP I))
                  (VP (VBP die))))
              (, ,)
              (SBAR (IN if)
                (S
                  (NP (PRP He))
                  (VP (VBZ pleases)))))))))
    (. .) ('' ')))

nsubj(willing-3, I-1)
nsubj(sit-5, I-1)
cop(willing-3, am-2)
root(ROOT-0, willing-3)
aux(sit-5, to-4)
xcomp(willing-3, sit-5)
prep_in(sit-5, prison-7)
mark(die-10, till-8)
nsubj(die-10, I-9)
advcl(sit-5, die-10)
mark(pleases-14, if-12)
nsubj(pleases-14, He-13)
advcl(sit-5, pleases-14)

(ROOT
  (S (`` `)
    (NP (NNP God))
    (VP (MD ca) (RB n't)
      (VP (VB please)
        (NP (DT that))))
    (. !) ('' ')))

nsubj(please-5, God-2)
aux(please-5, ca-3)
neg(please-5, n't-4)
root(ROOT-0, please-5)
dobj(please-5, that-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD said))
    (. .)))

nsubj(said-2, I-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` `)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP He))
          (VP (VBZ does) (RB not)
            (VP (VB care)
              (S
                (VP (TO to)
                  (VP (VB take)
                    (NP (PRP me))
                    (PRT (RP out)))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB care)
          (S
            (VP (TO to)
              (VP (VB go)
                (PRT (RP out))))))))
    (, ,) ('' ')
    (VP (VBD said))
    (NP (NNP Dawtie))
    (. .)))

mark(care-6, If-2)
nsubj(care-6, He-3)
nsubj(take-8, He-3)
aux(care-6, does-4)
neg(care-6, not-5)
advcl(care-15, care-6)
aux(take-8, to-7)
xcomp(care-6, take-8)
dobj(take-8, me-9)
prt(take-8, out-10)
nsubj(care-15, I-12)
nsubj(go-17, I-12)
aux(care-15, do-13)
neg(care-15, not-14)
ccomp(said-21, care-15)
aux(go-17, to-16)
xcomp(care-15, go-17)
prt(go-17, out-18)
root(ROOT-0, said-21)
dep(said-21, Dawtie-22)

(ROOT
  (S (`` `)
    (S
      (NP (PRP It))
      (VP (VBZ 's) (RB not)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (ADJP (JJ good)))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (SBAR (RB only) (IN that)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP (VB care)
                (PP (IN for)
                  (NP
                    (NP (NN anything))
                    (SBAR
                      (S
                        (NP (PRP He))
                        (VP (VBZ does) (RB n't)
                          (VP (VB care)
                            (PP (IN for))))))))))))))
    (. .)))

nsubj('s-3, It-2)
root(ROOT-0, 's-3)
neg('s-3, not-4)
mark(good-8, that-5)
nsubj(good-8, I-6)
cop(good-8, 'm-7)
ccomp('s-3, good-8)
nsubj('s-11, it-10)
parataxis('s-3, 's-11)
advmod(care-17, only-12)
mark(care-17, that-13)
nsubj(care-17, I-14)
aux(care-17, do-15)
neg(care-17, n't-16)
dep('s-11, care-17)
prep_for(care-17, anything-19)
prep_for(care-23, anything-19)
nsubj(care-23, He-20)
aux(care-23, does-21)
neg(care-23, n't-22)
rcmod(anything-19, care-23)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (MD would))))
    (NP (PRP it))
    (VP (VBP be)
      (SBAR (IN that)
        (S
          (NP (DT all) (NNS men))
          (VP (VBN acquitted)
            (NP (PRP me))
            (, ,)
            (SBAR (IN if)
              (S
                (NP (NNP God))
                (VP (VBD did) (RB not)
                  (VP (VB trouble)
                    (NP (PRP Himself))
                    (PP (IN about)
                      (NP (PRP$ His) (NNS children)))))))))))
    (. !) ('' ') ('' '')))

nsubj(would-2, What-1)
advcl(be-4, would-2)
nsubj(be-4, it-3)
root(ROOT-0, be-4)
mark(acquitted-8, that-5)
det(men-7, all-6)
nsubj(acquitted-8, men-7)
ccomp(be-4, acquitted-8)
dobj(acquitted-8, me-9)
mark(trouble-15, if-11)
nsubj(trouble-15, God-12)
aux(trouble-15, did-13)
neg(trouble-15, not-14)
advcl(acquitted-8, trouble-15)
dobj(trouble-15, Himself-16)
poss(children-19, His-18)
prep_about(trouble-15, children-19)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP see) (, ,) (VBP ma'am) (, ,)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ comes)
              (PP (TO to)
                (NP (DT this))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Andrew))
    (: :) (`` ``)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (NNP God) (NNP Dawtie))
          (SBAR
            (S
              (VP (VBZ cares)
                (PRT (RP about))))))
        (, ,)
        (FRAG (RB not)
          (NP (PRP herself)))))
    (. !)))

nsubj(see-3, You-2)
ccomp(said-13, see-3)
dep(see-3, ma'am-5)
nsubj(comes-8, it-7)
ccomp(see-3, comes-8)
prep_to(comes-8, this-10)
root(ROOT-0, said-13)
nsubj(said-13, Andrew-14)
nsubj(Dawtie-20, it-17)
cop(Dawtie-20, is-18)
nn(Dawtie-20, God-19)
dep(said-13, Dawtie-20)
rcmod(Dawtie-20, cares-21)
prt(cares-21, about-22)
dep(Dawtie-20, not-24)
dep(not-24, herself-25)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP God))
        (VP (VBZ is) (RB all)
          (ADJP (JJ right)))))
    (, ,)
    (NP (NNP Dawtie))
    (VP (VBZ is) (RB all)
      (ADJP (JJ right)))
    (. .)))

mark(right-5, If-1)
nsubj(right-5, God-2)
cop(right-5, is-3)
advmod(right-5, all-4)
advcl(right-10, right-5)
nsubj(right-10, Dawtie-7)
cop(right-10, is-8)
advmod(right-10, all-9)
root(ROOT-0, right-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN _))
      (SBAR (IN if)
        (S
          (S
            (NP (NNP _))
            (ADVP (RB sometimes))
            (VP (VBZ takes)
              (NP
                (NP (CD one) (NN shape))
                (, ,)
                (ADJP (RB sometimes) (DT another)))))
          (, ,)
          (CC but)
          (S
            (NP (DT the) (NN fear))
            (VP (VBZ is)
              (NP
                (NP (DT the) (JJ same))
                (: --)
                (CC and)
                (NP (DT the) (JJ very) (NN fear))))))))
    (VP (VBZ is)
      (NP (NN faith)))
    (. .)))

det(_-2, The-1)
nsubj(faith-25, _-2)
mark(takes-6, if-3)
nsubj(takes-6, _-4)
advmod(takes-6, sometimes-5)
dep(_-2, takes-6)
num(shape-8, one-7)
dobj(takes-6, shape-8)
advmod(another-11, sometimes-10)
amod(shape-8, another-11)
det(fear-15, the-14)
nsubj(same-18, fear-15)
cop(same-18, is-16)
det(same-18, the-17)
dep(_-2, same-18)
conj_but(takes-6, same-18)
det(fear-23, the-21)
amod(fear-23, very-22)
conj_but(takes-6, fear-23)
conj_and(same-18, fear-23)
cop(faith-25, is-24)
root(ROOT-0, faith-25)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (NP (DT the) (NN fear))
    (VP (VBZ is)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (MD may)
              (VP (VB be)
                (NP (DT no) (NNP God))))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (S
              (NP (PRP you))
              (VP (MD might)
                (VP (VB call)
                  (NP
                    (NP (DT a) (NN fear))
                    (PP (IN for)
                      (NP (PRP herself)))))))
            (: ;)
            (S (CC but)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (NNP Dawtie))
                  (VP (VBZ fears)
                    (SBAR (IN lest)
                      (S
                        (NP (NNP God))
                        (VP (MD should) (RB not)
                          (VP (VB be)
                            (VP (VBG caring)
                              (PP (IN for)
                                (NP (PRP her)))))))))))
              (, ,)
              (NP (DT that))
              (VP (VBZ is)
                (NP
                  (NP (DT a) (NN fear))
                  (PP (IN for)
                    (NP (NNP God))))))
            (: ;)
            (SBAR (IN for)
              (S
                (SBAR (IN if)
                  (S
                    (NP (NNP God))
                    (VP (VBD did) (RB not)
                      (VP (VB care)
                        (PP (IN for)
                          (NP (PRP$ His) (NN creature)))))))
                (, ,)
                (NP (PRP He))
                (VP (MD would)
                  (VP (VB be)
                    (NP (DT no) (JJ true) (NN God))))))))))
    (. !) ('' '')))

advmod(is-4, Sometimes-1)
det(fear-3, the-2)
nsubj(is-4, fear-3)
root(ROOT-0, is-4)
mark(God-10, that-5)
expl(God-10, there-6)
aux(God-10, may-7)
cop(God-10, be-8)
neg(God-10, no-9)
ccomp(is-4, God-10)
mark(call-16, that-13)
nsubj(call-16, you-14)
aux(call-16, might-15)
ccomp(is-4, call-16)
conj_and(God-10, call-16)
det(fear-18, a-17)
dobj(call-16, fear-18)
prep_for(fear-18, herself-20)
cc(fear-38, but-22)
advmod(fears-25, when-23)
nsubj(fears-25, Dawtie-24)
advcl(fear-38, fears-25)
mark(caring-31, lest-26)
nsubj(caring-31, God-27)
aux(caring-31, should-28)
neg(caring-31, not-29)
aux(caring-31, be-30)
advcl(fears-25, caring-31)
prep_for(caring-31, her-33)
nsubj(fear-38, that-35)
cop(fear-38, is-36)
det(fear-38, a-37)
parataxis(call-16, fear-38)
prep_for(fear-38, God-40)
mark(God-57, for-42)
mark(care-47, if-43)
nsubj(care-47, God-44)
aux(care-47, did-45)
neg(care-47, not-46)
advcl(God-57, care-47)
poss(creature-50, His-49)
prep_for(care-47, creature-50)
nsubj(God-57, He-52)
aux(God-57, would-53)
cop(God-57, be-54)
neg(God-57, no-55)
amod(God-57, true-56)
parataxis(call-16, God-57)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP He))
    (VP (MD could) (RB not)
      (VP (VB exist)))
    (. !) ('' '')))

advmod(exist-6, Then-2)
nsubj(exist-6, He-3)
aux(exist-6, could-4)
neg(exist-6, not-5)
root(ROOT-0, exist-6)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG True)))
    (: ;)
    (CC and)
    (S (IN so)
      (NP (PRP you))
      (VP (VBP are)
        (ADVP (RB back))
        (PP (IN on)
          (NP (DT the) (JJ other) (NN fear)))))
    (. !) ('' '')))

root(ROOT-0, True-2)
dep(are-7, so-5)
nsubj(are-7, you-6)
conj_and(True-2, are-7)
advmod(are-7, back-8)
det(fear-12, the-10)
amod(fear-12, other-11)
prep_on(are-7, fear-12)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB have)
        (VP (VBN said)
          (PP (TO to)
            (NP
              (NP (PRP her))
              (, ,)
              (NP (NNP Mr.) (NNP Ingram)))))))
    (. ?) ('' '')))

dobj(said-6, What-2)
aux(said-6, would-3)
nsubj(said-6, you-4)
aux(said-6, have-5)
root(ROOT-0, said-6)
prep_to(said-6, her-8)
nn(Ingram-11, Mr.-10)
appos(her-8, Ingram-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN reminded)
          (NP (PRP her))
          (SBAR
            (SBAR (IN that)
              (S
                (NP (NNP Jesus))
                (VP (VBD was)
                  (ADJP (RB perfectly) (JJ content))
                  (PP (IN with)
                    (NP (PRP$ His) (NN Father))))))
            (: ;)
            (SBAR (IN that)
              (S
                (NP (PRP He))
                (VP
                  (VP (VBD knew)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBD was)
                          (VP (VBG coming)
                            (PP (IN on)
                              (NP (PRP Himself))))))))
                  (, ,)
                  (CC and)
                  (VP
                    (ADVP (RB never))
                    (VBD doubted)
                    (NP (PRP Him))))))
            (: --)
            (SBAR (RB just)
              (S
                (VP (VBD gloried)
                  (SBAR (IN that)
                    (S
                      (NP (PRP$ His) (NN Father))
                      (VP (VBD was)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP He))
                            (VP (VBD knew)
                              (S
                                (NP (PRP Him))
                                (VP (TO to)
                                  (VP (VB be)))))))))))))))))
    (. .) ('' '')))

nsubj(reminded-5, I-2)
aux(reminded-5, would-3)
aux(reminded-5, have-4)
root(ROOT-0, reminded-5)
dobj(reminded-5, her-6)
mark(content-11, that-7)
nsubj(content-11, Jesus-8)
cop(content-11, was-9)
advmod(content-11, perfectly-10)
dep(reminded-5, content-11)
poss(Father-14, His-13)
prep_with(content-11, Father-14)
mark(knew-18, that-16)
nsubj(knew-18, He-17)
nsubj(doubted-27, He-17)
dep(content-11, knew-18)
nsubj(coming-21, what-19)
aux(coming-21, was-20)
ccomp(knew-18, coming-21)
prep_on(coming-21, Himself-23)
neg(doubted-27, never-26)
dep(content-11, doubted-27)
conj_and(knew-18, doubted-27)
dobj(doubted-27, Him-28)
advmod(gloried-31, just-30)
dep(content-11, gloried-31)
mark(was-35, that-32)
poss(Father-34, His-33)
nsubj(was-35, Father-34)
ccomp(gloried-31, was-35)
dobj(knew-38, what-36)
nsubj(be-41, what-36)
nsubj(knew-38, He-37)
ccomp(was-35, knew-38)
dobj(knew-38, Him-39)
nsubj(be-41, Him-39)
aux(be-41, to-40)
xcomp(knew-38, be-41)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP see))
    (. !)))

nsubj(see-3, I-2)
root(ROOT-0, see-3)

(ROOT
  (SBARQ (CC But)
    (WHNP (WP what))
    (SQ
      (VP (VBD did)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP mean)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP (VBD said)
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (NNP Dawtie) (POS 's))
                          (JJ very) (NN fear))
                        (VP (VBD was)
                          (NP (NN faith)))))))))))))
    (. ?) ('' '')))

cc(did-3, But-1)
nsubj(did-3, what-2)
root(ROOT-0, did-3)
nsubj(mean-5, you-4)
ccomp(did-3, mean-5)
advmod(said-8, when-6)
nsubj(said-8, you-7)
advcl(mean-5, said-8)
mark(faith-15, that-9)
poss(fear-13, Dawtie-10)
amod(fear-13, very-12)
nsubj(faith-15, fear-13)
cop(faith-15, was-14)
ccomp(said-8, faith-15)

(ROOT
  (S
    (NP
      (NP (`` ``) (NNP Think) (, ,) (NN ma'am))
      (: :)
      (NP
        (NP (NNS people))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB only))
            (VP (VBP care)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN saved)))))))))
      (, ,)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP
            (VP (VBZ is))
            (, ,)
            (S (RB not)
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN punished)
                    (PP (IN for)
                      (NP (PRP$ their) (NNS sins))))))))))
      (, ,))
    (VP (VBP are)
      (ADJP (JJ anxious))
      (PP (RB only)
        (PP (IN about)
          (NP (PRP themselves)))
        (, ,) (RB not)
        (PP (IN about)
          (NP
            (NP (NNP God))
            (CC and)
            (NP (PRP$ His) (NN glory)))))
      (ADVP (IN at) (DT all)))
    (. .)))

nn(ma'am-4, Think-2)
nsubj(is-15, ma'am-4)
nsubjpass(punished-20, ma'am-4)
nsubj(anxious-26, ma'am-4)
dep(ma'am-4, people-6)
nsubj(care-9, people-6)
nsubjpass(saved-12, people-6)
advmod(care-9, only-8)
rcmod(people-6, care-9)
aux(saved-12, to-10)
auxpass(saved-12, be-11)
xcomp(care-9, saved-12)
rcmod(ma'am-4, is-15)
neg(punished-20, not-17)
aux(punished-20, to-18)
auxpass(punished-20, be-19)
xcomp(is-15, punished-20)
poss(sins-23, their-22)
prep_for(punished-20, sins-23)
cop(anxious-26, are-25)
root(ROOT-0, anxious-26)
advmod(anxious-26, only-27)
prep_about(anxious-26, themselves-29)
neg(anxious-26, not-31)
prep_about(anxious-26, God-33)
poss(glory-36, His-35)
prep_about(anxious-26, glory-36)
conj_and(God-33, glory-36)
advmod(anxious-26, at-37)
pobj(at-37, all-38)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP talk)
        (PP (IN about)
          (NP
            (NP (DT the) (NN glory))
            (PP (IN of)
              (NP (NNP God)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBP make)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBP consist)
              (PP (IN in)
                (NP (JJ pure) (NNS selfishness))))))))
    (. !)))

nsubj(talk-2, They-1)
root(ROOT-0, talk-2)
det(glory-5, the-4)
prep_about(talk-2, glory-5)
prep_of(glory-5, God-7)
nsubj(make-11, they-10)
conj_but(talk-2, make-11)
nsubj(consist-13, it-12)
ccomp(make-11, consist-13)
amod(selfishness-16, pure-15)
prep_in(consist-13, selfishness-16)

(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP (PRP them))))
    (, ,)
    (NP (PRP He))
    (VP (VBZ seeks)
      (NP
        (NP
          (NP (NN everything))
          (PP (IN for)
            (NP (PRP Himself))))
        (: ;)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (ADJP (JJ dead))
              (PP (IN against)
                (NP
                  (NP (DT the) (NN truth))
                  (PP (IN of)
                    (NP (NNP God)))))
              (, ,)
              (NP
                (NP (DT a) (JJ diabolic) (NN slander))
                (PP (IN of)
                  (NP (NNP God)))))))))
    (. .)))

prepc_according_to(seeks-6, to-2)
pobj(seeks-6, them-3)
nsubj(seeks-6, He-5)
root(ROOT-0, seeks-6)
dobj(seeks-6, everything-7)
nsubj(dead-13, everything-7)
prep_for(everything-7, Himself-9)
cop(dead-13, is-12)
rcmod(everything-7, dead-13)
det(truth-16, the-15)
prep_against(dead-13, truth-16)
prep_of(truth-16, God-18)
det(slander-22, a-20)
amod(slander-22, diabolic-21)
dep(dead-13, slander-22)
prep_of(slander-22, God-24)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ does) (RB not)
        (VP (VB trouble)
          (S
            (NP (PRP them))
            (VP (TO to)
              (VP (VB believe)
                (NP (JJ such) (NNS things))
                (PP (IN about)
                  (NP (NNP God)))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP do)
        (NP (RB not) (RB even) (NN desire))
        (SBAR (IN that)
          (S
            (NP (NNP God))
            (VP (MD should) (RB not)
              (VP (VB be)
                (PP (IN like)
                  (NP (DT that)))))))))
    (: ;)
    (S
      (NP (PRP they))
      (ADVP (RB only))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB escape)
              (NP (PRP Him)))))))
    (. .)))

nsubj(trouble-4, It-1)
aux(trouble-4, does-2)
neg(trouble-4, not-3)
root(ROOT-0, trouble-4)
dobj(trouble-4, them-5)
nsubj(believe-7, them-5)
aux(believe-7, to-6)
xcomp(trouble-4, believe-7)
amod(things-9, such-8)
dobj(believe-7, things-9)
prep_about(believe-7, God-11)
nsubj(do-14, they-13)
parataxis(trouble-4, do-14)
neg(desire-17, not-15)
advmod(desire-17, even-16)
dobj(do-14, desire-17)
mark(be-22, that-18)
nsubj(be-22, God-19)
aux(be-22, should-20)
neg(be-22, not-21)
ccomp(do-14, be-22)
prep_like(be-22, that-24)
nsubj(want-28, they-26)
nsubj(escape-30, they-26)
advmod(want-28, only-27)
parataxis(trouble-4, want-28)
aux(escape-30, to-29)
xcomp(want-28, escape-30)
dobj(escape-30, Him-31)

(ROOT
  (S
    (S
      (S
        (NP (PRP They))
        (VP (MD dare) (RB not)
          (VP (VB say)
            (SBAR
              (S
                (NP (NNP God))
                (VP (MD will) (RB not)
                  (VP (VB do)
                    (NP
                      (NP (DT this))
                      (CC or)
                      (NP (DT that))))))))))
      (, ,)
      (ADVP (RB however))
      (VP (VB clear)
        (NP (PRP it))
        (VP (VB be)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (MD would) (RB not)
                (VP (VB be)
                  (ADJP (JJ fair)))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (PP (IN in)
          (NP
            (NP (NN terror))
            (PP (IN of)
              (S
                (VP (VBG contradicting)
                  (NP (DT the) (NNP Bible)))))))))
    (. .)))

nsubj(say-4, They-1)
aux(say-4, dare-2)
neg(say-4, not-3)
ccomp(clear-14, say-4)
nsubj(do-8, God-5)
aux(do-8, will-6)
neg(do-8, not-7)
ccomp(say-4, do-8)
dobj(do-8, this-9)
dobj(do-8, that-11)
conj_or(this-9, that-11)
advmod(clear-14, however-13)
root(ROOT-0, clear-14)
dobj(clear-14, it-15)
dep(clear-14, be-16)
mark(fair-22, that-17)
nsubj(fair-22, it-18)
aux(fair-22, would-19)
neg(fair-22, not-20)
cop(fair-22, be-21)
ccomp(be-16, fair-22)
nsubj(are-25, they-24)
parataxis(clear-14, are-25)
prep_in(are-25, terror-27)
prepc_of(terror-27, contradicting-29)
det(Bible-31, the-30)
dobj(contradicting-29, Bible-31)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBP make)
        (NP
          (NP
            (QP (JJR more) (IN of) (DT the) (NN Bible) (IN than)))
          (PP (IN of)
            (NP (NNP God)))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB so))
        (VBP fail)
        (S
          (VP (TO to)
            (VP
              (VP (VB find)
                (NP
                  (NP (DT the) (NN truth))
                  (PP (IN of)
                    (NP (DT the) (NNP Bible)))))
              (, ,)
              (CC and)
              (VP (VB accept)
                (NP
                  (NP (NNS things))
                  (PP (VBG concerning)
                    (NP
                      (NP (NNP God))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBP are) (RB not)
                            (PP (IN in)
                              (NP (DT the) (NNP Bible))))))))))))))
      (, ,)
      (CC and)
      (VP (VBP are)
        (NP
          (NP (DT the) (JJS greatest))
          (PP (IN of)
            (NP
              (NP (NNS insults))
              (PP (TO to)
                (NP (PRP Him))))))))
    (. !)))

nsubj(make-2, They-1)
nsubj(fail-13, They-1)
nsubj(find-15, They-1)
nsubj(greatest-37, They-1)
root(ROOT-0, make-2)
mwe(of-4, more-3)
quantmod(Bible-6, of-4)
quantmod(Bible-6, the-5)
dobj(make-2, Bible-6)
quantmod(Bible-6, than-7)
prep_of(Bible-6, God-9)
advmod(fail-13, so-12)
conj_and(make-2, fail-13)
aux(find-15, to-14)
xcomp(fail-13, find-15)
det(truth-17, the-16)
dobj(find-15, truth-17)
det(Bible-20, the-19)
prep_of(truth-17, Bible-20)
xcomp(fail-13, accept-23)
conj_and(find-15, accept-23)
dobj(accept-23, things-24)
prep_concerning(things-24, God-26)
nsubj(are-28, God-26)
rcmod(God-26, are-28)
neg(are-28, not-29)
det(Bible-32, the-31)
prep_in(are-28, Bible-32)
cop(greatest-37, are-35)
det(greatest-37, the-36)
conj_and(make-2, greatest-37)
prep_of(greatest-37, insults-39)
prep_to(insults-39, Him-41)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (ADVP (RB never))
      (VP (VBZ thinks)
        (PP (IN about)
          (S
            (VP (VBG saving)
              (NP (PRP$ her) (NN soul)))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBZ has)
        (NP
          (NP (DT no) (NN fear))
          (PP (IN about)
            (NP (PRP$ her) (NN soul))))))
    (: ;)
    (S
      (NP (PRP she))
      (VP (VBZ is)
        (ADJP (RB only) (JJ anxious)
          (PP (IN about)
            (NP
              (NP (NNP God))
              (CC and)
              (NP (PRP$ His) (NN glory)))))))
    (. .)))

nsubj(thinks-3, Dawtie-1)
neg(thinks-3, never-2)
root(ROOT-0, thinks-3)
prepc_about(thinks-3, saving-5)
poss(soul-7, her-6)
dobj(saving-5, soul-7)
nsubj(has-10, she-9)
parataxis(thinks-3, has-10)
neg(fear-12, no-11)
dobj(has-10, fear-12)
poss(soul-15, her-14)
prep_about(fear-12, soul-15)
nsubj(anxious-20, she-17)
cop(anxious-20, is-18)
advmod(anxious-20, only-19)
parataxis(thinks-3, anxious-20)
prep_about(anxious-20, God-22)
poss(glory-25, His-24)
prep_about(anxious-20, glory-25)
conj_and(God-22, glory-25)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB How))
        (S
          (NP (DT the) (NNS doubts))
          (VP (VBP come))))
      (, ,)
      (NP (NNP God))
      (VP (VBZ knows)))
    (: ;)
    (S (CC but)
      (SBAR (IN if)
        (S
          (NP (PRP she))
          (VP (VBD did) (RB not)
            (VP (VB love)
              (NP (NNP God))))))
      (, ,)
      (NP (PRP they))
      (VP (MD would) (RB not)
        (VP (VB be)
          (ADVP (RB there)))))
    (. .)))

advmod(come-4, How-1)
det(doubts-3, the-2)
nsubj(come-4, doubts-3)
advcl(knows-7, come-4)
nsubj(knows-7, God-6)
root(ROOT-0, knows-7)
cc(be-20, but-9)
mark(love-14, if-10)
nsubj(love-14, she-11)
aux(love-14, did-12)
neg(love-14, not-13)
advcl(be-20, love-14)
dobj(love-14, God-15)
nsubj(be-20, they-17)
aux(be-20, would-18)
neg(be-20, not-19)
parataxis(knows-7, be-20)
advmod(be-20, there-21)

(ROOT
  (S
    (NP (NNP Jesus))
    (VP (VBZ says)
      (SBAR
        (S
          (NP (NNP God))
          (VP (MD will)
            (ADVP (RB speedily))
            (VP (VB avenge)
              (NP
                (NP (PRP$ His) (NN elect))
                (PRN (: --)
                  (NP
                    (NP (DT those))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VB cry)
                          (NP (NN day)
                            (CC and)
                            (NN night))
                          (PP (TO to)
                            (NP (PRP Him)))))))
                  (: --))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP I))
                    (VP (VBP take)
                      (S
                        (VP (TO to)
                          (VP (VB mean)
                            (SBAR (IN that)
                              (S
                                (NP (PRP He))
                                (VP (MD will)
                                  (ADVP (RB soon))
                                  (VP (VB save)
                                    (NP (PRP them))
                                    (PP (IN from)
                                      (NP (DT all) (JJ such) (NNS miseries)))))))))))))))))))
    (. .)))

nsubj(says-2, Jesus-1)
root(ROOT-0, says-2)
nsubj(avenge-6, God-3)
aux(avenge-6, will-4)
advmod(avenge-6, speedily-5)
ccomp(says-2, avenge-6)
poss(elect-8, His-7)
dobj(avenge-6, elect-8)
dobj(take-21, elect-8)
nsubj(mean-23, elect-8)
dep(elect-8, those-10)
nsubj(cry-12, those-10)
rcmod(those-10, cry-12)
tmod(cry-12, day-13)
tmod(cry-12, night-15)
conj_and(day-13, night-15)
prep_to(cry-12, Him-17)
nsubj(take-21, I-20)
rcmod(elect-8, take-21)
aux(mean-23, to-22)
xcomp(take-21, mean-23)
mark(save-28, that-24)
nsubj(save-28, He-25)
aux(save-28, will-26)
advmod(save-28, soon-27)
ccomp(mean-23, save-28)
dobj(save-28, them-29)
det(miseries-33, all-31)
amod(miseries-33, such-32)
prep_from(save-28, miseries-33)

(ROOT
  (S
    (S
      (NP (NNP Free))
      (VP (VBP Dawtie)
        (PP (IN from)
          (NP
            (NP (NNS unsureness))
            (PP (IN about)
              (NP (NNP God)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBZ has)
        (NP
          (NP (DT no) (NN fear))
          (VP (VBN left)))))
    (. .)))

nsubj(Dawtie-2, Free-1)
root(ROOT-0, Dawtie-2)
prep_from(Dawtie-2, unsureness-4)
prep_about(unsureness-4, God-6)
nsubj(has-10, she-9)
conj_and(Dawtie-2, has-10)
neg(fear-12, no-11)
dobj(has-10, fear-12)
vmod(fear-12, left-13)

(ROOT
  (S
    (NP (DT All))
    (VP (VBZ is)
      (ADVP (RB well))
      (, ,)
      (PP
        (PP (IN in)
          (NP (DT the) (NN prison)))
        (CC or)
        (PP (IN on)
          (NP
            (NP (DT the) (NN throne))
            (PP (IN of)
              (NP (NNP God))))))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP He))
          (ADVP (RB only))
          (VP (VB be)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP she))
                (VP (VBZ thinks)
                  (SBAR
                    (S
                      (NP (PRP He))
                      (VP (VBZ is)))))))))))
    (. .)))

nsubj(is-2, All-1)
nsubj(is-2', All-1)
root(ROOT-0, is-2)
conj_or(is-2, is-2')
advmod(is-2, well-3)
det(prison-7, the-6)
prep_in(is-2, prison-7)
det(throne-11, the-10)
prep_on(is-2', throne-11)
prep_of(throne-11, God-13)
mark(be-18, if-15)
nsubj(be-18, He-16)
advmod(be-18, only-17)
advcl(is-2, be-18)
dobj(thinks-21, what-19)
nsubj(thinks-21, she-20)
ccomp(be-18, thinks-21)
nsubj(is-23, He-22)
ccomp(thinks-21, is-23)

(ROOT
  (SINV
    (S
      (SBAR (IN If)
        (S
          (NP (DT any) (NN one))
          (VP (VBP say)
            (SBAR (IN that)
              (S
                (NP (NN doubt))
                (VP (MD can) (RB not)
                  (VP (VB coexist)
                    (PP (IN with)
                      (NP (NN faith))))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP answer)
        (PRN (, ,)
          (S
            (S
              (NP (PRP it))
              (VP (MD can)
                (PP (IN with)
                  (NP (NN love)))))
            (, ,)
            (CC and)
            (S
              (NP (NN love))
              (VP (VBZ is)
                (NP
                  (NP (DT the) (JJR greater))
                  (PP (IN of)
                    (NP (DT the) (CD two)))))))
          (, ,))
        (NP (NN yea))))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ very) (NN heart))
        (PP (IN of)
          (NP (NN faith)))))
    (NP (PRP itself))
    (. .)))

mark(say-4, If-1)
det(one-3, any-2)
nsubj(say-4, one-3)
advcl(answer-14, say-4)
mark(coexist-9, that-5)
nsubj(coexist-9, doubt-6)
aux(coexist-9, can-7)
neg(coexist-9, not-8)
ccomp(say-4, coexist-9)
prep_with(coexist-9, faith-11)
nsubj(answer-14, I-13)
ccomp(heart-35, answer-14)
nsubj(can-17, it-16)
parataxis(answer-14, can-17)
prep_with(can-17, love-19)
nsubj(greater-25, love-22)
cop(greater-25, is-23)
det(greater-25, the-24)
parataxis(answer-14, greater-25)
conj_and(can-17, greater-25)
det(two-28, the-27)
prep_of(greater-25, two-28)
dobj(answer-14, yea-30)
cop(heart-35, is-32)
det(heart-35, the-33)
amod(heart-35, very-34)
root(ROOT-0, heart-35)
prep_of(heart-35, faith-37)
nsubj(heart-35, itself-38)

(ROOT
  (S
    (NP
      (NP (NNP God) (POS 's))
      (NNS children))
    (VP (VBP are) (RB not)
      (ADVP (RB yet))
      (NP
        (NP
          (NP (NNP God) (POS 's))
          (NNS men))
        (CC and)
        (NP (NNS women))))
    (. .)))

poss(children-3, God-1)
nsubj(men-9, children-3)
cop(men-9, are-4)
neg(men-9, not-5)
advmod(men-9, yet-6)
poss(men-9, God-7)
root(ROOT-0, men-9)
conj_and(men-9, women-11)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP God))
      (SBAR
        (WHNP (WDT that) (JJ many) (NNS people))
        (S
          (VP (VBP believe)
            (PRT (RP in)))))
      (, ,)
      (VP (VBG claiming)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN _)
                (NP (DT the) (JJ _) (NN religious))
                (SBAR (IN because)
                  (S
                    (NP (PRP they))
                    (VP (VBP believe)
                      (PP (IN in)
                        (NP (PRP Him)))))))))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP
          (NP
            (NP (DT a) (NNP God))
            (ADJP (RB not) (JJ worth)))
          (VP (VBG believing)
            (PRT (RP in))))
        (, ,)
        (NP
          (NP (DT a) (NNP God))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD ought)
                (S (RB not)
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN believed)
                        (PP (IN in))))))))))))
    (. .)))

det(God-2, The-1)
det(people-5, God-2)
nsubj(God-24, God-2)
amod(people-5, many-4)
nsubj(believe-6, people-5)
rcmod(God-2, believe-6)
prt(believe-6, in-7)
vmod(God-2, claiming-9)
aux(_-12, to-10)
auxpass(_-12, be-11)
xcomp(claiming-9, _-12)
det(religious-15, the-13)
amod(religious-15, _-14)
dobj(_-12, religious-15)
mark(believe-18, because-16)
nsubj(believe-18, they-17)
advcl(_-12, believe-18)
prep_in(believe-18, Him-20)
cop(God-24, is-22)
det(God-24, a-23)
root(ROOT-0, God-24)
neg(worth-26, not-25)
amod(God-24, worth-26)
vmod(God-24, believing-27)
prt(believing-27, in-28)
det(God-31, a-30)
appos(God-24, God-31)
nsubj(ought-33, God-31)
nsubjpass(believed-37, God-31)
prep_in(believed-37, God-31)
rcmod(God-31, ought-33)
neg(believed-37, not-34)
aux(believed-37, to-35)
auxpass(believed-37, be-36)
xcomp(ought-33, believed-37)

(ROOT
  (S
    (NP
      (NP (DT The) (NN life))
      (PP (VBN given)
        (PP (IN by)
          (NP (PDT such) (DT a) (NN God)))))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT a) (NN life))
          (ADJP (RB not) (IN worth) (JJ living)))
        (, ,)
        (SBAR (RB even) (IN if)
          (S
            (NP (PRP He))
            (VP (VBD made)
              (NP (PRP$ His) (NNS votaries))
              (PP (IN as)
                (ADJP (JJ happy)))
              (SBAR (IN as)
                (S
                  (NP (PRP they))
                  (VP (MD would)
                    (VP (VB choose)
                      (S
                        (VP (TO to)
                          (VP (VB be)))))))))))))
    (. .)))

det(life-2, The-1)
nsubj(life-11, life-2)
prep(life-2, given-3)
pcomp(given-3, by-4)
predet(God-7, such-5)
det(God-7, a-6)
pobj(by-4, God-7)
aux(life-11, would-8)
cop(life-11, be-9)
det(life-11, a-10)
root(ROOT-0, life-11)
neg(living-14, not-12)
dep(living-14, worth-13)
amod(life-11, living-14)
advmod(made-19, even-16)
mark(made-19, if-17)
nsubj(made-19, He-18)
advcl(life-11, made-19)
poss(votaries-21, His-20)
dobj(made-19, votaries-21)
prep_as(made-19, happy-23)
mark(choose-27, as-24)
nsubj(choose-27, they-25)
nsubj(be-29, they-25)
aux(choose-27, would-26)
advcl(made-19, choose-27)
aux(be-29, to-28)
xcomp(choose-27, be-29)

(ROOT
  (S
    (NP (DT A) (NNP God))
    (VP (VBP like)
      (SBAR (IN that)
        (S
          (VP (MD could) (RB not)
            (VP (VB make)
              (S
                (NP
                  (NP (DT a) (NN woman))
                  (PP (IN like)
                    (NP (NNP Dawtie))))
                (ADJP (JJ anxious)
                  (PP (IN about)
                    (NP (PRP Him))))))))))
    (. !)))

det(God-2, A-1)
nsubj(like-3, God-2)
root(ROOT-0, like-3)
mark(make-7, that-4)
aux(make-7, could-5)
neg(make-7, not-6)
ccomp(like-3, make-7)
det(woman-9, a-8)
nsubj(anxious-12, woman-9)
prep_like(woman-9, Dawtie-11)
xcomp(make-7, anxious-12)
prep_about(anxious-12, Him-14)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (NNP God))
        (VP (VBP be) (RB not)
          (NP
            (NP (DT each))
            (PP (IN as)
              (NP (NNP Jesus)))))))
    (, ,)
    (WHNP (WDT what) (NN good))
    (SQ (MD would)
      (NP
        (NP (DT the) (NN proving))
        (PP (IN of)
          (NP (PRP$ her) (NN innocence))))
      (VP (VB be)
        (PP (TO to)
          (NP (NNP Dawtie) (NNP !)))))))

mark(each-5, If-1)
nsubj(each-5, God-2)
cop(each-5, be-3)
neg(each-5, not-4)
advcl(be-17, each-5)
prep_as(each-5, Jesus-7)
det(good-10, what-9)
dobj(be-17, good-10)
aux(be-17, would-11)
det(proving-13, the-12)
nsubj(be-17, proving-13)
poss(innocence-16, her-15)
prep_of(proving-13, innocence-16)
root(ROOT-0, be-17)
prep(be-17, to-18)
nn(!-20, Dawtie-19)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ mighty) (NN thing))
      (ADVP (RB indeed))
      (SBAR (IN that)
        (S
          (NP (DT the) (NN world))
          (VP (MD should)
            (VP (VB confess)
              (NP (PRP she)))))))
    (VP (VBD was) (RB not)
      (NP (DT a) (NN thief)))
    (. !)))

det(thing-3, A-1)
amod(thing-3, mighty-2)
nsubj(thief-14, thing-3)
advmod(thing-3, indeed-4)
mark(confess-9, that-5)
det(world-7, the-6)
nsubj(confess-9, world-7)
aux(confess-9, should-8)
dep(thing-3, confess-9)
dobj(confess-9, she-10)
cop(thief-14, was-11)
neg(thief-14, not-12)
det(thief-14, a-13)
root(ROOT-0, thief-14)

(ROOT
  (S (CC But)
    (S
      (VP (TO to)
        (VP (VB know)
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (SBAR
                  (S
                    (NP
                      (NP (DT a) (JJ perfect) (NN God))
                      (, ,)
                      (SBAR
                        (WHNP
                          (WHNP (CD one))
                          (PP (IN for)
                            (NP (PRP us))))
                        (S
                          (VP (TO to)
                            (VP (VB love)
                              (PP (IN with)
                                (NP
                                  (NP (PDT all) (DT the) (NN power))
                                  (PP (IN of)
                                    (NP (NN love)))
                                  (SBAR
                                    (WHPP (IN of)
                                      (WHNP (WDT which)))
                                    (S
                                      (NP (PRP we))
                                      (VP (VBP feel)
                                        (SBAR
                                          (S
                                            (NP (PRP we))
                                            (VP (VBP are)
                                              (ADJP (JJ capable))))))))))))))
                      (, ,))
                    (VP (VBZ is)
                      (ADJP (JJ worth))
                      (S
                        (VP (VBG going)
                          (PRT (RP out))
                          (PP (IN of)
                            (NP (NN existence)))
                          (PP (IN for))))))))
              (: ;)
              (SBAR (IN while)
                (S
                  (VP (TO to)
                    (VP (VB know)
                      (NP
                        (NP (DT that))
                        (PP (NNP God)
                          (NP (PRP himself)))))))))))))
    (, ,)
    (VP (MD must)
      (VP (VB make)
        (NP
          (NP (DT every) (NN throb))
          (PP (IN of)
            (S
              (VP (VBG consciousness)
                (NP (DT a) (JJ divine) (NN ecstasy))))))))
    (. !) ('' '')))

cc(make-46, But-1)
aux(know-3, to-2)
dep(make-46, know-3)
mark(is-6, that-4)
expl(is-6, there-5)
ccomp(know-3, is-6)
det(God-9, a-7)
amod(God-9, perfect-8)
nsubj(worth-31, God-9)
nsubj(love-15, one-11)
prep_for(one-11, us-13)
aux(love-15, to-14)
rcmod(God-9, love-15)
vmod(God-9, love-15)
predet(power-19, all-17)
det(power-19, the-18)
prep_with(love-15, power-19)
prep_of(feel-25, power-19)
prep_of(power-19, love-21)
nsubj(feel-25, we-24)
rcmod(power-19, feel-25)
nsubj(capable-28, we-26)
cop(capable-28, are-27)
ccomp(feel-25, capable-28)
cop(worth-31, is-30)
ccomp(is-6, worth-31)
xcomp(worth-31, going-32)
prep_out_of(going-32, existence-35)
prep(going-32, for-36)
mark(know-40, while-38)
aux(know-40, to-39)
parataxis(is-6, know-40)
dobj(know-40, that-41)
prep(that-41, God-42)
dep(God-42, himself-43)
aux(make-46, must-45)
root(ROOT-0, make-46)
det(throb-48, every-47)
dobj(make-46, throb-48)
prepc_of(throb-48, consciousness-50)
det(ecstasy-53, a-51)
amod(ecstasy-53, divine-52)
dobj(consciousness-50, ecstasy-53)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Andrew) (POS 's))
        (NN heart))
      (VP (VBD was)
        (ADJP (JJ full))))
    (, ,)
    (CC and)
    (S
      (PP (RB out) (IN of)
        (NP (PRP$ its) (NNS fullness)))
      (NP (PRP he))
      (VP (VBD spoke)))
    (. .)))

poss(heart-3, Andrew-1)
nsubj(full-5, heart-3)
cop(full-5, was-4)
root(ROOT-0, full-5)
poss(fullness-11, its-10)
prep_out_of(spoke-13, fullness-11)
nsubj(spoke-13, he-12)
conj_and(full-5, spoke-13)

(ROOT
  (FRAG
    (ADVP (RB Never))
    (SBAR (IN before)
      (SINV (VBD had)
        (NP (PRP he))
        (VP (VBN been)
          (ADJP (JJ able)
            (PP (IN in)
              (NP
                (NP (DT the) (NN presence))
                (PP (IN of)
                  (NP (NNP Alexa))))))
          (S
            (VP (TO to)
              (VP (VB speak)
                (SBAR (IN as)
                  (S
                    (NP (PRP he))
                    (VP (VBD felt))))))))))
    (. .)))

root(ROOT-0, Never-1)
dep(able-6, before-2)
aux(able-6, had-3)
nsubj(able-6, he-4)
nsubj(speak-13, he-4)
cop(able-6, been-5)
dep(Never-1, able-6)
det(presence-9, the-8)
prep_in(able-6, presence-9)
prep_of(presence-9, Alexa-11)
aux(speak-13, to-12)
xcomp(able-6, speak-13)
mark(felt-16, as-14)
nsubj(felt-16, he-15)
advcl(speak-13, felt-16)

(ROOT
  (FRAG
    (ADVP (RB Never))
    (SBAR (IN before)
      (SINV (VBD had)
        (NP (PRP he))
        (VP (VBN had)
          (NP (DT any) (NN impulse))
          (S
            (VP (TO to)
              (VP (VB speak)
                (PP (IN as)
                  (NP (RB now)))))))))
    (. .)))

root(ROOT-0, Never-1)
dep(had-5, before-2)
aux(had-5, had-3)
nsubj(had-5, he-4)
dep(Never-1, had-5)
det(impulse-7, any-6)
dobj(had-5, impulse-7)
aux(speak-9, to-8)
vmod(had-5, speak-9)
prep(speak-9, as-10)
pobj(as-10, now-11)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (ADVP (RB soon))
        (VP (MD would))))
    (NP (PRP he))
    (VP (VBP have)
      (VP (VBN gone)
        (S
          (VP (TO to)
            (VP (VB sow)
              (NP (NN seed))
              (PP (IN on)
                (NP (DT a) (JJ bare) (NN rock)))
              (, ,)
              (PP (IN as)
                (NP
                  (NP (NNS words))
                  (PP (IN of)
                    (NP
                      (NP (NN spirit)
                        (CC and)
                        (NN life))
                      (PP (IN in)
                        (NP (PRP$ her) (NNS ears))))))))))))
    (. !)))

mark(would-3, As-1)
advmod(would-3, soon-2)
advcl(gone-6, would-3)
nsubj(gone-6, he-4)
nsubj(sow-8, he-4)
aux(gone-6, have-5)
root(ROOT-0, gone-6)
aux(sow-8, to-7)
xcomp(gone-6, sow-8)
dobj(sow-8, seed-9)
det(rock-13, a-11)
amod(rock-13, bare-12)
prep_on(sow-8, rock-13)
prep_as(sow-8, words-16)
prep_of(words-16, spirit-18)
prep_of(words-16, life-20)
conj_and(spirit-18, life-20)
poss(ears-23, her-22)
prep_in(spirit-18, ears-23)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG beginning)
          (S
            (VP (TO to)
              (VP (VB understand)
                (NP (PRP you))))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(beginning-4, I-2)
nsubj(understand-6, I-2)
aux(beginning-4, am-3)
ccomp(said-11, beginning-4)
aux(understand-6, to-5)
xcomp(beginning-4, understand-6)
dobj(understand-6, you-7)
nsubj(said-11, she-10)
root(ROOT-0, said-11)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Will))
    (SQ
      (NP (PRP you))
      (VP (VB forgive)
        (NP (PRP me))))
    (. ?)))

advmod(forgive-4, Will-2)
nsubj(forgive-4, you-3)
root(ROOT-0, forgive-4)
dobj(forgive-4, me-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN been)
        (ADJP (RB very) (JJ self-confident)
          (CC and)
          (JJ conceited))))
    (. !)))

nsubj(self-confident-5, I-1)
nsubj(conceited-7, I-1)
aux(self-confident-5, have-2)
cop(self-confident-5, been-3)
advmod(self-confident-5, very-4)
root(ROOT-0, self-confident-5)
conj_and(self-confident-5, conceited-7)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (DT a) (NN mercy) (NNS things))
        (VP (VBP are)
          (ADJP (RB not)
            (SBAR (IN as)
              (S
                (NP (PRP I))
                (VP (VBD thought)
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBD were))))))
              (: --))))))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD ought)
            (S
              (VP (TO to)
                (VP (VB be))))))))
    (. !) ('' '')))

dobj(not-6, What-1)
det(things-4, a-2)
nn(things-4, mercy-3)
nsubj(not-6, things-4)
cop(not-6, are-5)
csubj(thought-13, not-6)
mark(thought-9, as-7)
nsubj(thought-9, I-8)
dep(not-6, thought-9)
nsubj(were-11, they-10)
ccomp(thought-9, were-11)
root(ROOT-0, thought-13)
nsubj(ought-15, they-14)
nsubj(be-17, they-14)
ccomp(thought-13, ought-15)
aux(be-17, to-16)
xcomp(ought-15, be-17)

(ROOT
  (S (`` ``)
    (CC And)
    (NP
      (NP (DT the) (NN glory))
      (PP (IN of)
        (NP (DT the) (NNP Lord))))
    (VP (MD shall)
      (VP (VB cover)
        (NP (DT the) (NN earth))
        (SBAR (IN as)
          (S
            (NP (DT the) (NNS waters))
            (VP (VB cover)
              (NP (DT the) (NN sea)))))))
    (. !) ('' '')))

cc(cover-9, And-2)
det(glory-4, the-3)
nsubj(cover-9, glory-4)
det(Lord-7, the-6)
prep_of(glory-4, Lord-7)
aux(cover-9, shall-8)
root(ROOT-0, cover-9)
det(earth-11, the-10)
dobj(cover-9, earth-11)
mark(cover-15, as-12)
det(waters-14, the-13)
nsubj(cover-15, waters-14)
advcl(cover-9, cover-15)
det(sea-17, the-16)
dobj(cover-15, sea-17)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)

(ROOT
  (S (`` ``)
    (CC And)
    (S
      (NP
        (NP (NNS men) (POS 's))
        (NNS hearts))
      (VP (MD shall)
        (VP (VB be)
          (ADJP (JJ full)
            (PP (IN of)
              (NP (NNS bliss))))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (PRP they))
              (VP (VBP have)
                (VP (VBN found)
                  (NP (PRP$ their) (NN Father)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP He))
            (VP (VBZ is))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (VP (VBG going)
          (NP (NN home))
          (PP (TO to)
            (NP (PRP Him))))))
    (. .) ('' '')))

poss(hearts-5, men-3)
nsubj(full-8, hearts-5)
aux(full-8, shall-6)
cop(full-8, be-7)
root(ROOT-0, full-8)
prep_of(full-8, bliss-10)
mark(found-15, because-12)
nsubj(found-15, they-13)
aux(found-15, have-14)
advcl(full-8, found-15)
poss(Father-17, their-16)
dobj(found-15, Father-17)
nsubj(is-21, He-20)
conj_and(full-8, is-21)
dobj(is-24, what-22)
nsubj(is-24, He-23)
ccomp(is-21, is-24)
nsubj(going-29, they-27)
aux(going-29, are-28)
conj_and(full-8, going-29)
dobj(going-29, home-30)
prep_to(going-29, Him-32)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD rose))
    (. .)))

nsubj(rose-2, He-1)
root(ROOT-0, rose-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD will)
        (VP (VB come)
          (CC and)
          (VB see)
          (NP (PRP me))
          (ADVP (RB again) (RB soon)))))
    (: --)
    (SINV (MD will)
      (NP (PRP you))
      (ADVP (RB not)))
    (. ?) ('' '')))

nsubj(come-4, You-2)
nsubj(see-6, You-2)
aux(come-4, will-3)
root(ROOT-0, come-4)
conj_and(come-4, see-6)
dobj(come-4, me-7)
advmod(soon-9, again-8)
advmod(come-4, soon-9)
parataxis(come-4, will-11)
nsubj(will-11, you-12)
neg(will-11, not-13)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (SBAR (IN As)
      (S
        (SBAR
          (ADVP (RB often))
          (IN as)
          (S
            (NP (PRP you))
            (VP (VBP please))))
        (, ,)
        (VP (VB ma'am))))
    (: ;)
    (NP (PRP I))
    (VP (VBP am)
      (NP (PRP$ your) (NN servant)))
    (. .) ('' '')))

mark(ma'am-8, As-2)
advmod(please-6, often-3)
mark(please-6, as-4)
nsubj(please-6, you-5)
advcl(ma'am-8, please-6)
advcl(servant-13, ma'am-8)
nsubj(servant-13, I-10)
cop(servant-13, am-11)
poss(servant-13, your-12)
root(ROOT-0, servant-13)

(ROOT
  (S (`` ``) (RB Then)
    (VP (VBP come)
      (NP (NN to-morrow)))
    (. .) ('' '')))

advmod(come-3, Then-2)
root(ROOT-0, come-3)
dobj(come-3, to-morrow-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD went)
      (PP (IN on)
        (NP
          (NP
            (NP (DT the) (NN morrow))
            (, ,)
            (CC and)
            (NP (DT the) (JJ next) (NN day)))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NN day))
            (PP (IN after)))
          (: --)))
      (NP (RB almost) (DT every) (NN day))
      (SBAR (IN while)
        (S
          (NP (NNP Dawtie))
          (VP (VBD was)
            (VP (VBG waiting)
              (NP (PRP$ her) (NN trial)))))))
    (. .)))

nsubj(went-2, He-1)
root(ROOT-0, went-2)
det(morrow-5, the-4)
prep_on(went-2, morrow-5)
det(day-10, the-8)
amod(day-10, next-9)
prep_on(went-2, day-10)
conj_and(morrow-5, day-10)
det(day-14, the-13)
prep_on(went-2, day-14)
conj_and(morrow-5, day-14)
prep(day-14, after-15)
advmod(day-19, almost-17)
det(day-19, every-18)
tmod(went-2, day-19)
mark(waiting-23, while-20)
nsubj(waiting-23, Dawtie-21)
aux(waiting-23, was-22)
advcl(went-2, waiting-23)
poss(trial-25, her-24)
dobj(waiting-23, trial-25)

(ROOT
  (S
    (S
      (NP (RB Almost) (DT every) (NN morning))
      (NP (NNP Alexa))
      (VP (VBD went)
        (PP (IN by)
          (NP (NN train)))
        (S
          (VP (TO to)
            (VP (VB see)
              (NP
                (NP (NNP Dawtie))
                (: ;)
                (CC and)
                (NP
                  (NP (DT the) (NN news))
                  (SBAR
                    (S
                      (NP (PRP she))
                      (VP (VBD brought)))))))))))
    (, ,)
    (NP (NNP Andrew))
    (VP (MD would)
      (VP (VB carry)
        (PP (TO to)
          (NP
            (NP (DT the) (NN girl) (POS 's))
            (NNS parents)))))
    (. .)))

advmod(morning-3, Almost-1)
det(morning-3, every-2)
tmod(went-5, morning-3)
nsubj(went-5, Alexa-4)
nsubj(see-9, Alexa-4)
ccomp(carry-20, went-5)
prep_by(went-5, train-7)
aux(see-9, to-8)
xcomp(went-5, see-9)
dobj(see-9, Dawtie-10)
det(news-14, the-13)
dobj(see-9, news-14)
conj_and(Dawtie-10, news-14)
nsubj(brought-16, she-15)
rcmod(news-14, brought-16)
nsubj(carry-20, Andrew-18)
aux(carry-20, would-19)
root(ROOT-0, carry-20)
det(girl-23, the-22)
poss(parents-25, girl-23)
prep_to(carry-20, parents-25)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD continued)
        (ADJP (JJ unwilling)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (NNP Andrew))))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN had)
          (NP (NN trouble))
          (ADVP (RB enough)
            (PP (IN with)
              (NP (PRP her))
              (ADVP (RB already)))))))
    (, ,)
    (S
      (NP (PRP she))
      (VP (VBD said)))
    (: ;)
    (CC but)
    (S
      (NP (NNP Andrew))
      (VP (MD could) (RB not)
        (ADVP (RB quite))
        (VP (VB understand)
          (NP (PRP$ her) (NN refusal)))))
    (. .)))

nsubj(continued-2, Dawtie-1)
root(ROOT-0, continued-2)
acomp(continued-2, unwilling-3)
aux(see-5, to-4)
xcomp(unwilling-3, see-5)
dobj(see-5, Andrew-6)
nsubj(had-10, he-8)
aux(had-10, had-9)
conj_but(continued-2, had-10)
dobj(had-10, trouble-11)
advmod(had-10, enough-12)
prep_with(enough-12, her-14)
advmod(enough-12, already-15)
nsubj(said-18, she-17)
conj_but(continued-2, said-18)
nsubj(understand-25, Andrew-21)
aux(understand-25, could-22)
neg(understand-25, not-23)
advmod(understand-25, quite-24)
conj_but(continued-2, understand-25)
poss(refusal-27, her-26)
dobj(understand-25, refusal-27)

(ROOT
  (NP (NNP CHAPTER) (NNP XXXIII) (. .)))

nn(XXXIII-2, CHAPTER-1)
root(ROOT-0, XXXIII-2)

(ROOT
  (NP (DT A) (JJ GREAT) (NN OFFERING) (. .)))

det(OFFERING-3, A-1)
amod(OFFERING-3, GREAT-2)
root(ROOT-0, OFFERING-3)

(ROOT
  (S
    (PP
      (NP (CD Two) (NNS days))
      (IN before)
      (NP (DT the) (NNS assizes)))
    (, ,)
    (NP (NNP Andrew))
    (VP (VBD was)
      (PP (IN with)
        (NP
          (NP (NNP Alexa))
          (PP (IN in)
            (NP (PRP$ her) (NN parlor))))))
    (. .)))

num(days-2, Two-1)
npadvmod(was-8, days-2)
det(assizes-5, the-4)
prep_before(was-8, assizes-5)
nsubj(was-8, Andrew-7)
root(ROOT-0, was-8)
prep_with(was-8, Alexa-10)
poss(parlor-13, her-12)
prep_in(Alexa-10, parlor-13)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT a) (JJ cool) (NN autumn) (NN evening))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD proposed)
        (SBAR
          (S
            (NP (PRP they))
            (VP (MD should)
              (VP (VB go)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN heath))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBD came)
                          (ADVP (RB close) (RB up))
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NN back))
                              (PP (IN of)
                                (NP (DT the) (NN house))))))))))))))))
    (. .)))

nsubj(evening-6, It-1)
cop(evening-6, was-2)
det(evening-6, a-3)
amod(evening-6, cool-4)
nn(evening-6, autumn-5)
root(ROOT-0, evening-6)
nsubj(proposed-10, she-9)
conj_and(evening-6, proposed-10)
nsubj(go-13, they-11)
aux(go-13, should-12)
ccomp(proposed-10, go-13)
det(heath-16, the-15)
prep_on(go-13, heath-16)
nsubj(came-19, heath-16)
rcmod(heath-16, came-19)
advmod(up-21, close-20)
advmod(came-19, up-21)
det(back-24, the-23)
prep_to(came-19, back-24)
det(house-27, the-26)
prep_of(back-24, house-27)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP they))
          (VP (VBD reached)
            (NP
              (NP (DT the) (NN top))
              (PP (IN of)
                (NP (DT the) (NN hill)))))))
      (, ,)
      (NP (DT a) (JJ cold) (NN wind))
      (VP (VBD was)
        (VP (VBG blowing))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNP Andrew))
        (, ,)
        (NP
          (NP (JJ full))
          (PP (IN of)
            (NP
              (NP (NN care))
              (PP (IN for)
                (NP
                  (ADJP (JJ old)
                    (CC and)
                    (JJ young))
                  (, ,) (NN man)
                  (CC and)
                  (NN woman))))))
        (, ,))
      (VP (VBD made)
        (SBAR
          (S
            (NP (NNP Alexa))
            (VP (VBP draw)
              (NP (PRP$ her) (NN shawl))
              (ADVP (RBR closer)
                (PP (IN about)
                  (NP (PRP$ her) (NN throat))))
              (, ,)
              (SBAR
                (WHADVP (WRB where))
                (S (, ,)
                  (PP (IN with)
                    (NP (PRP$ his) (JJ rough) (, ,) (JJ plow-man) (NNS hands)))
                  (, ,)
                  (NP (PRP he))
                  (VP (VBD pinned)
                    (NP (PRP it))
                    (PP (IN for)
                      (NP (PRP her)))))))))))
    (. .)))

advmod(reached-3, When-1)
nsubj(reached-3, they-2)
advcl(blowing-14, reached-3)
det(top-5, the-4)
dobj(reached-3, top-5)
det(hill-8, the-7)
prep_of(top-5, hill-8)
det(wind-12, a-10)
amod(wind-12, cold-11)
nsubj(blowing-14, wind-12)
aux(blowing-14, was-13)
root(ROOT-0, blowing-14)
nsubj(made-31, Andrew-17)
appos(Andrew-17, full-19)
prep_of(full-19, care-21)
prep_for(care-21, old-23)
prep_for(care-21, young-25)
conj_and(old-23, young-25)
prep_for(care-21, man-27)
conj_and(old-23, man-27)
prep_for(care-21, woman-29)
conj_and(old-23, woman-29)
conj_and(blowing-14, made-31)
nsubj(draw-33, Alexa-32)
ccomp(made-31, draw-33)
poss(shawl-35, her-34)
dobj(draw-33, shawl-35)
advmod(draw-33, closer-36)
poss(throat-39, her-38)
prep_about(closer-36, throat-39)
advmod(pinned-51, where-41)
poss(hands-48, his-44)
amod(hands-48, rough-45)
amod(hands-48, plow-man-47)
prep_with(pinned-51, hands-48)
nsubj(pinned-51, he-50)
advcl(draw-33, pinned-51)
dobj(pinned-51, it-52)
prep_for(pinned-51, her-54)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP
        (VP (VBD saw))
        (, ,)
        (VP (VBD felt))
        (, ,)
        (CC and)
        (VP (VBD noted)
          (NP (PRP$ his) (NNS hands)))))
    (: ;)
    (S
      (NP
        (NP (DT a) (JJ pitying) (NN admiration))
        (, ,)
        (SBAR
          (WHPP (IN of)
            (WHNP (WDT which)))
          (S
            (NP (RB only) (DT the) (NN pity))
            (VP (VBD was)
              (ADJP (JJ foolish)))))
        (, ,))
      (VP (VBD woke)
        (PP (IN in)
          (NP (PRP her)))))
    (: ;)
    (CC and)
    (S
      (S
        (VP (VB ere)
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBD knew))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD was)
        (VP (VBG looking)
          (PRT (RP up))
          (PP (IN in)
            (NP (PRP$ his) (NN face)))
          (PP (IN with)
            (NP
              (NP (PDT such) (DT a) (NN light))
              (PP (IN in)
                (NP (PRP$ her) (NNS eyes)))))
          (SBAR (IN that)
            (S
              (NP (NNP Andrew))
              (VP
                (VP (VBD found)
                  (S
                    (NP (PRP himself))
                    (ADJP (JJ embarrassed))))
                (, ,)
                (CC and)
                (VP (VBD let)
                  (NP (PRP$ his) (NN fall)))))))))
    (. .)))

nsubj(saw-2, She-1)
nsubj(felt-4, She-1)
nsubj(noted-7, She-1)
root(ROOT-0, saw-2)
conj_and(saw-2, felt-4)
conj_and(saw-2, noted-7)
poss(hands-9, his-8)
dobj(noted-7, hands-9)
det(admiration-13, a-11)
amod(admiration-13, pitying-12)
prep_of(foolish-21, admiration-13)
nsubj(woke-23, admiration-13)
advmod(pity-19, only-17)
det(pity-19, the-18)
nsubj(foolish-21, pity-19)
cop(foolish-21, was-20)
rcmod(admiration-13, foolish-21)
conj_and(saw-2, woke-23)
prep_in(woke-23, her-25)
ccomp(looking-34, ere-28)
nsubj(knew-30, she-29)
ccomp(ere-28, knew-30)
nsubj(looking-34, she-32)
aux(looking-34, was-33)
conj_and(saw-2, looking-34)
prt(looking-34, up-35)
poss(face-38, his-37)
prep_in(looking-34, face-38)
predet(light-42, such-40)
det(light-42, a-41)
prep_with(looking-34, light-42)
poss(eyes-45, her-44)
prep_in(light-42, eyes-45)
mark(found-48, that-46)
nsubj(found-48, Andrew-47)
nsubj(let-53, Andrew-47)
ccomp(looking-34, found-48)
nsubj(embarrassed-50, himself-49)
xcomp(found-48, embarrassed-50)
ccomp(looking-34, let-53)
conj_and(found-48, let-53)
poss(fall-55, his-54)
tmod(let-53, fall-55)

(ROOT
  (S
    (S
      (S
        (VP (VBN Moved)
          (PP (IN by)
            (NP
              (NP (DT that) (NN sense))
              (PP (IN of)
                (NP (NN class-superiority)))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ has)
                    (NP
                      (NP (DT no) (NN place))
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN kingdom))
                          (PP (IN of)
                            (NP (NN heaven)))))))))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD attributed)
        (NP (PRP$ his) (NN modesty))
        (PP (TO to)
          (NP (NN self-depreciation)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN conviction))
      (VP (VBD rose)
        (PP (IN in)
          (NP
            (NP (PRP her))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ has)
                  (ADVP (RB often))
                  (VP (VBN risen)
                    (PP (IN in)
                      (UCP
                        (SBAR
                          (PP (JJ such) (IN as)
                            (NP (PRP she)))
                          (, ,) (IN that)
                          (S
                            (NP (EX there))
                            (VP (VBZ is)
                              (NP
                                (NP
                                  (NP (DT a) (NN magnanimity))
                                  (VP (VBG demanding)
                                    (NP (DT the) (NN sacrifice))))
                                (, ,)
                                (CONJP (RB not) (RB merely) (IN of))
                                (NP (JJ conventional) (NN dignity))))))
                        (, ,)
                        (CC but)
                        (PP (IN of)
                          (NP (JJ conventional) (NN propriety)))))))))))))
    (. .)))

vmod(attributed-18, Moved-1)
det(sense-4, that-3)
agent(Moved-1, sense-4)
nsubj(has-8, sense-4)
prep_of(sense-4, class-superiority-6)
rcmod(sense-4, has-8)
neg(place-10, no-9)
dobj(has-8, place-10)
det(kingdom-13, the-12)
prep_in(place-10, kingdom-13)
prep_of(kingdom-13, heaven-15)
nsubj(attributed-18, she-17)
root(ROOT-0, attributed-18)
poss(modesty-20, his-19)
dobj(attributed-18, modesty-20)
prep_to(attributed-18, self-depreciation-22)
det(conviction-26, the-25)
nsubj(rose-27, conviction-26)
conj_and(attributed-18, rose-27)
prep_in(rose-27, her-29)
nsubj(risen-34, her-29)
prep_in(risen-34, her-29)
aux(risen-34, has-32)
advmod(risen-34, often-33)
rcmod(her-29, risen-34)
prep_such_as(is-42, she-38)
mark(is-42, that-40)
expl(is-42, there-41)
dep(risen-34, is-42)
det(magnanimity-44, a-43)
nsubj(is-42, magnanimity-44)
vmod(magnanimity-44, demanding-45)
det(sacrifice-47, the-46)
dobj(demanding-45, sacrifice-47)
neg(merely-50, not-49)
dep(magnanimity-44, merely-50)
dep(merely-50, of-51)
amod(dignity-53, conventional-52)
conj(magnanimity-44, dignity-53)
dep(risen-34, of-56)
conj_but(is-42, of-56)
amod(propriety-58, conventional-57)
pobj(of-56, propriety-58)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD felt)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (DT a) (JJ great) (NN lady))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP
                      (ADVP (RBR more) (IN than))
                      (JJ great)))))
              (, ,)
              (VP (MD must)
                (VP (VB stoop)))))
          (: ;)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (NP (PRP$ her) (NN part)
                  (S
                    (VP (TO to)
                      (VP (VB make)
                        (NP
                          (NP (DT the) (NN approach))
                          (SBAR
                            (WHNP (WDT which))
                            (S (, ,)
                              (PP (IN between)
                                (NP (NNP equals)))
                              (, ,)
                              (VP (VBD was)
                                (NP
                                  (NP (DT the) (NN part))
                                  (PP (IN of)
                                    (NP (DT the) (NN man))))))))))))))))))
    (: ;)
    (S
      (NP (DT the) (NNS patroness) (NN _))
      (VP (MD must)
        (ADVP (RB _))
        (VP (VB do)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (NN woman))
              (VP (MD might) (RB not)))))))
    (. .)))

nsubj(felt-2, She-1)
root(ROOT-0, felt-2)
mark(stoop-15, that-3)
det(lady-6, a-4)
amod(lady-6, great-5)
nsubj(stoop-15, lady-6)
aux(great-12, to-8)
cop(great-12, be-9)
advmod(than-11, more-10)
advmod(great-12, than-11)
dep(stoop-15, great-12)
aux(stoop-15, must-14)
dep(felt-2, stoop-15)
mark(part-21, that-17)
nsubj(part-21, it-18)
cop(part-21, was-19)
poss(part-21, her-20)
dep(stoop-15, part-21)
aux(make-23, to-22)
vmod(part-21, make-23)
det(approach-25, the-24)
dobj(make-23, approach-25)
nsubj(part-33, approach-25)
prep_between(part-33, equals-29)
cop(part-33, was-31)
det(part-33, the-32)
rcmod(approach-25, part-33)
det(man-36, the-35)
prep_of(part-33, man-36)
det(_-40, the-38)
nn(_-40, patroness-39)
nsubj(do-43, _-40)
aux(do-43, must-41)
advmod(do-43, _-42)
parataxis(felt-2, do-43)
dobj(might-47, what-44)
det(woman-46, the-45)
nsubj(might-47, woman-46)
ccomp(do-43, might-47)
neg(might-47, not-48)

(ROOT
  (S
    (S
      (NP (DT This) (NN man))
      (VP (VBD was)
        (ADJP (JJ worthy)
          (PP (IN of)
            (NP (DT any) (NN woman))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD should) (RB not) (, ,)
        (PP (RB because) (IN of)
          (NP
            (NP (DT the) (NN humility))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD dared) (RB not)
                  (VP (VB presume)))))))
        (, ,)
        (VP (VB fail)
          (PP (IN of)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP he))
                (VP (VBD deserved))))))))
    (. !)))

det(man-2, This-1)
nsubj(worthy-4, man-2)
cop(worthy-4, was-3)
root(ROOT-0, worthy-4)
det(woman-7, any-6)
prep_of(worthy-4, woman-7)
nsubj(fail-23, he-10)
aux(fail-23, should-11)
neg(fail-23, not-12)
det(humility-17, the-16)
nsubj(dared-19, humility-17)
prep_because_of(fail-23, humility-17)
rcmod(humility-17, dared-19)
neg(dared-19, not-20)
dep(dared-19, presume-21)
conj_and(worthy-4, fail-23)
dobj(deserved-27, what-25)
nsubj(deserved-27, he-26)
prepc_of(fail-23, deserved-27)

(ROOT
  (S (`` ``)
    (FRAG
      (NP (NNP Andrew)))
    (, ,) ('' '')
    (NP (PRP she))
    (VP
      (VP (VBD said) (, ,) (`` ``)
        (S
          (S
            (NP (PRP I))
            (VP (VBP am)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (NP (DT an) (JJ unusual) (NN thing))))))))
          (, ,)
          (CC but)
          (S
            (NP (PRP you))
            (VP (VBP are) (RB not)
              (PP (IN like)
                (NP (JJ other) (NNS men)))))))
      (, ,)
      (CC and)
      (VP (MD will) (RB not)
        (VP (VB misunderstand))))
    (. !)))

dep(said-6, Andrew-2)
nsubj(said-6, she-5)
nsubj(misunderstand-29, she-5)
root(ROOT-0, said-6)
nsubj(going-11, I-9)
nsubj(do-13, I-9)
aux(going-11, am-10)
dep(said-6, going-11)
aux(do-13, to-12)
xcomp(going-11, do-13)
det(thing-16, an-14)
amod(thing-16, unusual-15)
dobj(do-13, thing-16)
nsubj(are-20, you-19)
dep(said-6, are-20)
conj_but(going-11, are-20)
neg(are-20, not-21)
amod(men-24, other-23)
prep_like(are-20, men-24)
aux(misunderstand-29, will-27)
neg(misunderstand-29, not-28)
conj_and(said-6, misunderstand-29)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (NP (PRP you))
      (NP (RB now))
      (: --)
      (S
        (VP (VB know)
          (NP (PRP you))
          (ADVP
            (ADVP (RB as) (RB far))
            (PP (IN above)
              (NP (JJ other) (NNS men))))
          (SBAR (IN as)
            (S
              (NP (DT the) (NNS clouds))
              (VP (VBP are)
                (PP (IN above)
                  (NP (DT this) (NN heath)))))))))
    (. !) ('' '')))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
iobj(know-2, you-3)
dobj(know-2, now-4)
parataxis(know-2, know-6)
dobj(know-6, you-7)
advmod(far-9, as-8)
advmod(know-6, far-9)
amod(men-12, other-11)
prep_above(far-9, men-12)
mark(are-16, as-13)
det(clouds-15, the-14)
nsubj(are-16, clouds-15)
advcl(know-6, are-16)
det(heath-19, this-18)
prep_above(are-16, heath-19)

(ROOT
  (FRAG
    (INTJ
      (INTJ (`` ``) (UH Oh))
      (, ,)
      (INTJ (UH no) (, ,) (UH no)))
    (, ,)
    (NP (NN ma'am))
    (. !) ('' '')))

discourse(ma'am-8, Oh-2)
discourse(Oh-2, no-4)
dep(no-4, no-6)
root(ROOT-0, ma'am-8)

(ROOT
  (NP (NNP protested) (NNP Andrew) (. .)))

nn(Andrew-2, protested-1)
root(ROOT-0, Andrew-2)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Hear)
        (NP (PRP me))
        (PRT (RP out))))
    (, ,)
    (NP (NNP Andrew))
    (, ,) ('' '')
    (NP (PRP she))
    (VP
      (VP (VBZ interrupted))
      (: --) (RB then)
      (VP (VBD paused)
        (NP (DT a) (JJ little))))
    (. .)))

ccomp(interrupted-10, Hear-2)
dobj(Hear-2, me-3)
prt(Hear-2, out-4)
nsubj(interrupted-10, Andrew-6)
nsubj(interrupted-10, she-9)
root(ROOT-0, interrupted-10)
advmod(interrupted-10, then-12)
dep(interrupted-10, paused-13)
det(little-15, a-14)
dobj(paused-13, little-15)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Tell)
        (NP (PRP me))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP she))
        (VP (VBD resumed)))
      (, ,))
    (`` ``)
    (VP (VBZ ought)
      (S
        (NP (PRP we))
        (RB not)
        (VP (TO to)
          (VP (VB love)
            (PRT (RBS best))
            (NP
              (NP (DT the) (JJS best))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBP know)))))))))
    (. ?) ('' '')))

csubj(ought-10, Tell-2)
dobj(Tell-2, me-3)
nsubj(resumed-7, she-6)
parataxis(ought-10, resumed-7)
root(ROOT-0, ought-10)
dobj(ought-10, we-11)
nsubj(love-14, we-11)
neg(love-14, not-12)
aux(love-14, to-13)
xcomp(ought-10, love-14)
prt(love-14, best-15)
det(best-17, the-16)
dobj(love-14, best-17)
nsubj(know-19, we-18)
rcmod(best-17, know-19)

(ROOT
  (S (`` ``)
    (ADVP (RB Surely))
    (, ,)
    (VP (VBP ma'am))
    (. !) ('' '')))

advmod(ma'am-4, Surely-2)
root(ROOT-0, ma'am-4)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD answered) (, ,)
      (S
        (VP
          (VP (VBG uncomfortable))
          (, ,)
          (CONJP (CC but)
            (RB not))
          (VP (VBG anticipating)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD was)
                  (PP (IN on)
                    (NP (DT the) (NN way))))))))))
    (. .)))

nsubj(answered-2, he-1)
root(ROOT-0, answered-2)
ccomp(answered-2, uncomfortable-4)
ccomp(answered-2, anticipating-8)
conj_negcc(uncomfortable-4, anticipating-8)
nsubj(was-10, what-9)
ccomp(anticipating-8, was-10)
det(way-13, the-12)
prep_on(was-10, way-13)

(ROOT
  (S (`` ``)
    (INTJ (UH Andrew))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (NP
        (NP (DT the) (JJS best))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP know))))))
    (. !)))

discourse(best-7, Andrew-2)
nsubj(best-7, you-4)
cop(best-7, are-5)
det(best-7, the-6)
root(ROOT-0, best-7)
nsubj(know-9, I-8)
rcmod(best-7, know-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBD said)
        (NP (PRP it))))
    (. !)))

nsubj(said-3, I-1)
aux(said-3, have-2)
root(ROOT-0, said-3)
dobj(said-3, it-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB care)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (NN world))
              (VP (VBZ thinks)))))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (ADJP
          (ADJP (JJR more))
          (PP (TO to)
            (NP (PRP me))))
        (PP (IN than)
          (NP (PDT all) (DT the) (NNS worlds)))))
    (. !)))

nsubj(care-4, I-1)
aux(care-4, do-2)
neg(care-4, not-3)
root(ROOT-0, care-4)
dobj(thinks-8, what-5)
det(world-7, the-6)
nsubj(thinks-8, world-7)
ccomp(care-4, thinks-8)
nsubj(more-12, you-10)
cop(more-12, are-11)
parataxis(care-4, more-12)
prep_to(more-12, me-14)
predet(worlds-18, all-16)
det(worlds-18, the-17)
prep_than(more-12, worlds-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD will)
          (VP (VB take)
            (NP (PRP me))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ yours)))
    (. .) ('' '')))

mark(take-4, If-1)
nsubj(take-4, you-2)
aux(take-4, will-3)
advcl(yours-9, take-4)
dobj(take-4, me-5)
nsubj(yours-9, I-7)
cop(yours-9, am-8)
root(ROOT-0, yours-9)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD looked)
      (NP (PRP him))
      (PP (IN in)
        (NP
          (NP (DT the) (NN face))
          (PP (IN with)
            (NP (DT the) (NN feeling)))))
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN done)
              (NP (DT a)
                (ADJP (JJ brave)
                  (CC and)
                  (DT a))
                (NN right) (NN thing)))))))
    (. .)))

nsubj(looked-2, She-1)
root(ROOT-0, looked-2)
dobj(looked-2, him-3)
det(face-6, the-5)
prep_in(looked-2, face-6)
det(feeling-9, the-8)
prep_with(face-6, feeling-9)
mark(done-13, that-10)
nsubj(done-13, she-11)
aux(done-13, had-12)
ccomp(looked-2, done-13)
det(thing-19, a-14)
amod(thing-19, brave-15)
conj_and(brave-15, a-17)
amod(thing-19, a-17)
nn(thing-19, right-18)
dobj(done-13, thing-19)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD stood)
      (NP (NN stock-still)))
    (. .) ('' '')))

nsubj(stood-2, Andrew-1)
root(ROOT-0, stood-2)
dobj(stood-2, stock-still-3)

(ROOT
  (NP
    (NP (NNP _) (NNP Me) (NNP _))
    (, ,)
    (NP (NN ma'am))
    (. !) ('' '')))

nn(_-3, _-1)
nn(_-3, Me-2)
root(ROOT-0, _-3)
appos(_-3, ma'am-5)

(ROOT
  (S
    (NP (PRP he))
    (VP
      (VP (VBD gasped))
      (, ,)
      (CC and)
      (VP (VBD grew)
        (ADJP
          (ADJP (JJ pale))
          (: --)
          (ADJP (RB then) (JJ red)))
        (PP (IN as)
          (NP (DT a) (JJ foggy) (NN sun)))))
    (. .)))

nsubj(gasped-2, he-1)
nsubj(grew-5, he-1)
root(ROOT-0, gasped-2)
conj_and(gasped-2, grew-5)
acomp(grew-5, pale-6)
advmod(red-9, then-8)
dep(pale-6, red-9)
det(sun-13, a-11)
amod(sun-13, foggy-12)
prep_as(grew-5, sun-13)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD made)
      (ADVP (RB scarcely))
      (NP
        (NP (DT a) (NN moment) (POS 's))
        (NN pause)))
    (. .)))

cc(made-3, But-1)
nsubj(made-3, he-2)
root(ROOT-0, made-3)
advmod(made-3, scarcely-4)
det(moment-6, a-5)
poss(pause-8, moment-6)
dobj(made-3, pause-8)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ God-like) (NN thing))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBN done) (, ,)
                (NP (NN ma'am))))))))
    (. !) ('' '')))

nsubj(thing-6, It-2)
cop(thing-6, 's-3)
det(thing-6, a-4)
amod(thing-6, God-like-5)
root(ROOT-0, thing-6)
nsubj(done-9, you-7)
aux(done-9, have-8)
rcmod(thing-6, done-9)
dobj(done-9, ma'am-11)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB make)
        (NP
          (NP (DT the) (NN return))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ deserves)))))))
    (. .)))

cc(make-6, But-2)
nsubj(make-6, I-3)
aux(make-6, can-4)
neg(make-6, not-5)
root(ROOT-0, make-6)
det(return-8, the-7)
dobj(make-6, return-8)
nsubj(deserves-10, it-9)
rcmod(return-8, deserves-10)

(ROOT
  (S
    (PP (IN From)
      (NP
        (NP (DT the) (NN heart))
        (PP (IN of)
          (NP (PRP$ my) (NN heart)))))
    (NP (PRP I))
    (VP (VBP thank)
      (NP (PRP you)))
    (. .)))

det(heart-3, the-2)
prep_from(thank-8, heart-3)
poss(heart-6, my-5)
prep_of(heart-3, heart-6)
nsubj(thank-8, I-7)
root(ROOT-0, thank-8)
dobj(thank-8, you-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP (VB say)
        (ADVP (DT no) (RBR more))))
    (. .) ('' '')))

nsubj(say-3, I-1)
aux(say-3, can-2)
root(ROOT-0, say-3)
neg(more-5, no-4)
advmod(say-3, more-5)

(ROOT
  (S
    (NP (PRP$ His) (NN voice))
    (VP (VBD trembled))
    (. .)))

poss(voice-2, His-1)
nsubj(trembled-3, voice-2)
root(ROOT-0, trembled-3)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD heard)
      (NP (DT a) (JJ stifled) (NN sob)))
    (. .)))

nsubj(heard-2, She-1)
root(ROOT-0, heard-2)
det(sob-5, a-3)
amod(sob-5, stifled-4)
dobj(heard-2, sob-5)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (VP (VBN turned)
        (PRT (RP away))
        (S
          (VP (TO to)
            (VP (VB conceal)
              (NP (PRP$ his) (NN emotion)))))))
    (. .)))

nsubj(turned-3, He-1)
nsubj(conceal-6, He-1)
aux(turned-3, had-2)
root(ROOT-0, turned-3)
prt(turned-3, away-4)
aux(conceal-6, to-5)
xcomp(turned-3, conceal-6)
poss(emotion-8, his-7)
dobj(conceal-6, emotion-8)

(ROOT
  (S (CC And)
    (NP (RB now))
    (VP (VBD came)
      (NP (NN greatness))
      (ADVP (RB indeed))
      (PP (TO to)
        (NP (DT the) (NN front))))
    (. .)))

cc(came-3, And-1)
nsubj(came-3, now-2)
root(ROOT-0, came-3)
dobj(came-3, greatness-4)
advmod(came-3, indeed-5)
det(front-8, the-7)
prep_to(came-3, front-8)

(ROOT
  (S
    (PP (RB Instead) (IN of)
      (S
        (VP (VBG drawing)
          (NP (PRP herself))
          (PRT (RP up))
          (PP (IN with)
            (NP
              (NP (DT the) (JJ bitter) (NN pride))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN woman))
                  (SBAR
                    (WHNP (WP$ whose)
                      (NP (JJS best)))
                    (S
                      (VP (VBZ is)
                        (VP (VBN scorned))))))))))))
    (, ,)
    (NP (NNP Alexa))
    (VP (VBD behaved)
      (ADVP (RB divinely)))
    (. .)))

prepc_instead_of(behaved-19, drawing-3)
dobj(drawing-3, herself-4)
prt(drawing-3, up-5)
det(pride-9, the-7)
amod(pride-9, bitter-8)
prep_with(drawing-3, pride-9)
det(woman-12, a-11)
prep_of(pride-9, woman-12)
poss(best-14, woman-12)
nsubjpass(scorned-16, best-14)
auxpass(scorned-16, is-15)
rcmod(woman-12, scorned-16)
nsubj(behaved-19, Alexa-18)
root(ROOT-0, behaved-19)
advmod(behaved-19, divinely-20)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD went)
        (ADVP (RB close)
          (PP (TO to)
            (NP (NNP Andrew)))))
      (, ,)
      (VP (VBD laid)
        (NP (PRP$ her) (NN hand))
        (PP (IN on)
          (NP (PRP$ his) (NN arm))))
      (, ,)
      (CC and)
      (VP (VBD said) (: :) (`` ``)
        (S
          (VP (VB Forgive)
            (NP (PRP me))
            (, ,)
            (NP (NNP Andrew))))))
    (. .)))

nsubj(went-2, She-1)
nsubj(laid-7, She-1)
nsubj(said-15, She-1)
root(ROOT-0, went-2)
prep_close_to(went-2, Andrew-5)
conj_and(went-2, laid-7)
poss(hand-9, her-8)
dobj(laid-7, hand-9)
poss(arm-12, his-11)
prep_on(laid-7, arm-12)
conj_and(went-2, said-15)
ccomp(said-15, Forgive-18)
dobj(Forgive-18, me-19)
dobj(Forgive-18, Andrew-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD made)
      (NP (DT a) (NN mistake)))
    (. .)))

nsubj(made-2, I-1)
root(ROOT-0, made-2)
det(mistake-4, a-3)
dobj(made-2, mistake-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD had)
      (ADVP (RB no) (RB right))
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (PRP it))))))
    (. .)))

nsubj(had-2, I-1)
nsubj(make-6, I-1)
root(ROOT-0, had-2)
neg(right-4, no-3)
advmod(had-2, right-4)
aux(make-6, to-5)
xcomp(had-2, make-6)
dobj(make-6, it-7)

(ROOT
  (S
    (S
      (S
        (VP (VBP Do) (RB not)
          (VP (VB be)
            (VP (VBN grieved)))))
      (, ,)
      (NP (PRP I))
      (VP (VBZ beg)))
    (: ;)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (JJ nowise)
          (S
            (VP (TO to)
              (VP (VB blame)))))))
    (. .)))

aux(grieved-4, Do-1)
neg(grieved-4, not-2)
auxpass(grieved-4, be-3)
ccomp(beg-7, grieved-4)
nsubj(beg-7, I-6)
root(ROOT-0, beg-7)
nsubj(nowise-11, you-9)
nsubj(blame-13, you-9)
cop(nowise-11, are-10)
parataxis(beg-7, nowise-11)
aux(blame-13, to-12)
xcomp(nowise-11, blame-13)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP us))
        (VP (VB continue)
          (NP (NNS friends)))))
    (. !) ('' '')))

root(ROOT-0, Let-1)
nsubj(continue-3, us-2)
ccomp(Let-1, continue-3)
dobj(continue-3, friends-4)

(ROOT
  (S (`` ``)
    (VP (VB Thank)
      (NP (PRP you))
      (, ,) (VB ma'am))
    (. !) ('' '')))

root(ROOT-0, Thank-2)
dobj(Thank-2, you-3)
dep(Thank-2, ma'am-5)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (NNP Andrew))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT a) (NN tone))
            (PP (IN of)
              (NP (JJS deepest) (NN gratitude)))))))
    (: ;)
    (CC and)
    (S
      (NP (DT neither))
      (VP (VBD said)
        (ADVP
          (NP (DT a) (NN word))
          (RBR more))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)
det(tone-6, a-5)
prep_in(said-1, tone-6)
amod(gratitude-9, deepest-8)
prep_of(tone-6, gratitude-9)
nsubj(said-13, neither-12)
conj_and(said-1, said-13)
det(word-15, a-14)
npadvmod(more-16, word-15)
advmod(said-13, more-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD walked)
      (NP (NN side))
      (PP (IN by)
        (NP (NN side)))
      (PP
        (ADVP (RB back))
        (TO to)
        (NP (DT the) (NN house))))
    (. .)))

nsubj(walked-2, They-1)
root(ROOT-0, walked-2)
dobj(walked-2, side-3)
prep_by(walked-2, side-5)
advmod(walked-2, back-6)
det(house-9, the-8)
prep_to(walked-2, house-9)

(ROOT
  (FRAG
    (PP
      (NP (NNP Said) (NNP Alexa))
      (PP (TO to)
        (NP (PRP herself))))
    (: :) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (IN at) (JJS least))
        (VP (VBN been)
          (VP (VBN refused)
            (PP (IN by)
              (NP
                (NP (DT a) (NN man))
                (ADJP (JJ worthy))
                (PP (IN of)
                  (NP (DT the) (NN honor)))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBD did)
                      (NP (PRP him)))))))))))
    (. !)))

nn(Alexa-2, Said-1)
dep(refused-12, Alexa-2)
prep_to(refused-12, herself-4)
nsubjpass(refused-12, I-7)
aux(refused-12, have-8)
advmod(refused-12, at-9)
pobj(at-9, least-10)
auxpass(refused-12, been-11)
root(ROOT-0, refused-12)
det(man-15, a-14)
agent(refused-12, man-15)
amod(man-15, worthy-16)
det(honor-19, the-18)
prep_of(man-15, honor-19)
nsubj(did-21, I-20)
rcmod(man-15, did-21)
dobj(did-21, him-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD made)
      (NP (DT no) (NN mistake))
      (PP (IN in)
        (S
          (VP (VBG _)
            (S
              (NP (PRP him))
              (ADJP (JJ _)))))))
    (. !) ('' '')))

nsubj(made-2, I-1)
root(ROOT-0, made-2)
neg(mistake-4, no-3)
dobj(made-2, mistake-4)
prepc_in(made-2, _-6)
nsubj(_-8, him-7)
xcomp(_-6, _-8)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBD reached)
          (NP (DT the) (NN door)))))
    (, ,)
    (NP (PRP she))
    (VP (VBD stopped))
    (. .)))

advmod(reached-3, When-1)
nsubj(reached-3, they-2)
advcl(stopped-8, reached-3)
det(door-5, the-4)
dobj(reached-3, door-5)
nsubj(stopped-8, she-7)
root(ROOT-0, stopped-8)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP
      (VP (VBD took)
        (PRT (RP off))
        (NP (PRP$ his) (NN hat)))
      (, ,)
      (CC and)
      (VP (VBD said))
      (, ,)
      (S
        (VP (VBG holding)
          (NP (PRP it))
          (PP (IN in)
            (NP (PRP$ his) (NN hand)))
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBD spoke) (: :) (`` ``)
                (S
                  (NP (NNP Good-night))
                  (, ,)
                  (VP (VB ma'am)))))))))
    (. !)))

nsubj(took-2, Andrew-1)
nsubj(said-8, Andrew-1)
nsubj(holding-10, Andrew-1)
root(ROOT-0, took-2)
prt(took-2, off-3)
poss(hat-5, his-4)
dobj(took-2, hat-5)
conj_and(took-2, said-8)
conj_and(took-2, holding-10)
vmod(took-2, holding-10)
dobj(holding-10, it-11)
poss(hand-14, his-13)
prep_in(holding-10, hand-14)
mark(spoke-17, as-15)
nsubj(spoke-17, he-16)
advcl(holding-10, spoke-17)
nsubj(ma'am-22, Good-night-20)
ccomp(spoke-17, ma'am-22)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB _))
    (VP (MD will)
      (ADVP (RB _))
      (VP (VB send)
        (PP (IN for)
          (NP (PRP me)))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP want)
              (NP (PRP me)))))))
    (. ?) ('' '')))

nsubj(send-5, You-1)
advmod(send-5, _-2)
aux(send-5, will-3)
advmod(send-5, _-4)
root(ROOT-0, send-5)
prep_for(send-5, me-7)
mark(want-10, if-8)
nsubj(want-10, you-9)
advcl(send-5, want-10)
dobj(want-10, me-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will))
    (. .)))

nsubj(will-3, I-2)
root(ROOT-0, will-3)

(ROOT
  (S
    (VP (VB Good-night))
    (. !) ('' '')))

root(ROOT-0, Good-night-1)

(ROOT
  (S
    (VP
      (VP (VBD said)
        (NP (NNP Alexa)))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PRT (RP in))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ strange) (NN weight))
            (PP (IN on)
              (NP (PRP$ her) (NN heart)))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Alexa-2)
conj_and(said-1, went-5)
prt(went-5, in-6)
det(weight-10, a-8)
amod(weight-10, strange-9)
prep_with(went-5, weight-10)
poss(heart-13, her-12)
prep_on(weight-10, heart-13)

(ROOT
  (SINV
    (S
      (S
        (S
          (VP (VB Shut)
            (PP (IN in)
              (NP (PRP$ her) (NN room)))))
        (, ,)
        (NP (PRP she))
        (VP (VBD wept)
          (ADVP (RB sorely))))
      (, ,)
      (CC but)
      (FRAG
        (FRAG (RB not)
          (ADVP (RB bitterly)))
        (: ;)
        (FRAG (CC and)
          (NP
            (NP (DT the) (JJ next) (NN day))
            (ADJP (JJ old) (JJ Meg))))))
    (, ,)
    (ADVP (IN at) (JJS least))
    (, ,)
    (VP (VBD saw))
    (NP
      (NP (DT no) (NN change))
      (PP (IN in)
        (NP (PRP her))))
    (. .)))

ccomp(wept-7, Shut-1)
poss(room-4, her-3)
prep_in(Shut-1, room-4)
nsubj(wept-7, she-6)
ccomp(saw-24, wept-7)
advmod(wept-7, sorely-8)
conj_but(wept-7, not-11)
ccomp(saw-24, not-11)
dep(not-11, bitterly-12)
cc(day-17, and-14)
det(day-17, the-15)
amod(day-17, next-16)
dep(not-11, day-17)
amod(Meg-19, old-18)
amod(day-17, Meg-19)
advmod(saw-24, at-21)
pobj(at-21, least-22)
root(ROOT-0, saw-24)
neg(change-26, no-25)
nsubj(saw-24, change-26)
prep_in(change-26, her-28)

(ROOT
  (SINV
    (VP (VBD Said))
    (NP
      (NP (NNP Andrew))
      (PP (TO to)
        (NP (PRP himself))))
    (: :) (`` ``)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB be)
          (NP (PRP$ her) (NN servant))
          (ADVP (RB always)))))
    (. .) ('' '')))

root(ROOT-0, Said-1)
nsubj(Said-1, Andrew-2)
prep_to(Andrew-2, himself-4)
nsubj(servant-11, I-7)
aux(servant-11, will-8)
cop(servant-11, be-9)
poss(servant-11, her-10)
ccomp(Said-1, servant-11)
advmod(servant-11, always-12)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD was)
        (VP (VBN humbled)))
      (, ,) (RB not)
      (VP (VBD uplifted)))
    (. .)))

nsubjpass(humbled-3, He-1)
auxpass(humbled-3, was-2)
root(ROOT-0, humbled-3)
neg(uplifted-6, not-5)
dep(humbled-3, uplifted-6)

(ROOT
  (NP (NNP CHAPTER) (NNP XXXIV) (. .)))

nn(XXXIV-2, CHAPTER-1)
root(ROOT-0, XXXIV-2)

(ROOT
  (NP (NNP ANOTHER) (NNP OFFERING) (. .)))

nn(OFFERING-2, ANOTHER-1)
root(ROOT-0, OFFERING-2)

(ROOT
  (S
    (NP (DT The) (JJ next) (NN evening))
    (PRN (, ,)
      (SBAR (IN that)
        (FRAG
          (PP (IN before)
            (NP (DT the) (NN trial)))))
      (, ,))
    (NP (NNP Andrew))
    (VP
      (VP (VBD presented)
        (NP (PRP himself))
        (PP (IN at)
          (NP (DT the) (NN prison))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (VP (VBN admitted))))
    (. .)))

det(evening-3, The-1)
amod(evening-3, next-2)
tmod(presented-11, evening-3)
mark(before-6, that-5)
parataxis(presented-11, before-6)
det(trial-8, the-7)
pobj(before-6, trial-8)
nsubj(presented-11, Andrew-10)
nsubjpass(admitted-19, Andrew-10)
root(ROOT-0, presented-11)
dobj(presented-11, himself-12)
det(prison-15, the-14)
prep_at(presented-11, prison-15)
auxpass(admitted-19, was-18)
conj_and(presented-11, admitted-19)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP
      (VP (VBD came)
        (S
          (VP (TO to)
            (VP (VB meet)
              (NP (PRP him))))))
      (, ,)
      (VP (VBD held)
        (PRT (RP out))
        (NP (PRP$ her) (NN hand)))
      (, ,)
      (CC and)
      (VP (VBD said) (: :) (`` ``)
        (S
          (VP (VB Thank)
            (NP (PRP you))
            (, ,)
            (NP (NNP Andrew))))))
    (. !) ('' '')))

nsubj(came-2, Dawtie-1)
nsubj(meet-4, Dawtie-1)
nsubj(held-7, Dawtie-1)
nsubj(said-13, Dawtie-1)
root(ROOT-0, came-2)
aux(meet-4, to-3)
xcomp(came-2, meet-4)
dobj(meet-4, him-5)
conj_and(came-2, held-7)
prt(held-7, out-8)
poss(hand-10, her-9)
dobj(held-7, hand-10)
conj_and(came-2, said-13)
ccomp(said-13, Thank-16)
dobj(Thank-16, you-17)
dobj(Thank-16, Andrew-19)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP are)
      (NP
        (NP (PRP you))
        (, ,)
        (NP (NNP Dawtie))))
    (. ?) ('' '')))

advmod(are-3, How-2)
root(ROOT-0, are-3)
nsubj(are-3, you-4)
appos(you-4, Dawtie-6)

(ROOT
  (FRAG (`` ``)
    (NP (NN Well) (RB enough))
    (, ,)
    (NP (NNP Andrew))
    (. !) ('' '')))

root(ROOT-0, Well-2)
advmod(Well-2, enough-3)
dep(Well-2, Andrew-5)

(ROOT
  (S (`` ``)
    (NP (NNP God))
    (VP (VBZ is)
      (PP (IN with)
        (NP
          (NP (PRP us))
          (, ,)
          (NP (NNP Dawtie)))))
    (. .) ('' '')))

nsubj(is-3, God-2)
root(ROOT-0, is-3)
prep_with(is-3, us-5)
appos(us-5, Dawtie-7)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Are)
        (S
          (NP (PRP you))
          (ADJP (JJ sure)))))
    (, ,)
    (VP (VBZ Andrew))
    (. ?) ('' '')))

dep(Andrew-6, Are-2)
nsubj(sure-4, you-3)
xcomp(Are-2, sure-4)
root(ROOT-0, Andrew-6)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Dawtie))
      (, ,)
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB see)
          (NP
            (NP (NNP God) (POS 's))
            (NNS eyes))
          (S
            (VP (VBG looking)
              (PP (IN at)
                (NP (PRP me))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ ready)
          (S
            (VP (TO to)
              (VP (VB do)
                (SBAR
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP He))
                      (VP (VBZ wants)
                        (S
                          (NP (PRP me))
                          (VP (TO to)
                            (VP (VB do)))))))
                  (, ,)
                  (CC and)
                  (SBAR (IN so)
                    (S
                      (NP (PRP I))
                      (VP (VBP feel)
                        (SBAR
                          (S
                            (NP (PRP He))
                            (VP (VBZ is)
                              (PP (IN with)
                                (NP (PRP me))))))))))))))))
    (. .) ('' '')))

nsubj(see-7, Dawtie-2)
nsubj(see-7, I-4)
aux(see-7, can-5)
neg(see-7, not-6)
root(ROOT-0, see-7)
poss(eyes-10, God-8)
dobj(see-7, eyes-10)
xcomp(see-7, looking-11)
prep_at(looking-11, me-13)
nsubj(ready-18, I-16)
nsubj(do-20, I-16)
cop(ready-18, am-17)
conj_but(see-7, ready-18)
aux(do-20, to-19)
xcomp(ready-18, do-20)
dobj(wants-23, what-21)
nsubj(do-26, what-21)
nsubj(wants-23, He-22)
advcl(do-20, wants-23)
dobj(wants-23, me-24)
nsubj(do-26, me-24)
aux(do-26, to-25)
xcomp(wants-23, do-26)
mark(feel-31, so-29)
nsubj(feel-31, I-30)
advcl(do-20, feel-31)
conj_and(wants-23, feel-31)
nsubj(is-33, He-32)
ccomp(feel-31, is-33)
prep_with(is-33, me-35)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh) (, ,) (UH Andrew))
    (, ,)
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD could)
            (VP (VB be)
              (ADJP (JJ sure)))))))
    (. !) ('' '')))

discourse(wish-7, Oh-2)
dep(Oh-2, Andrew-4)
nsubj(wish-7, I-6)
root(ROOT-0, wish-7)
nsubj(sure-11, I-8)
aux(sure-11, could-9)
cop(sure-11, be-10)
ccomp(wish-7, sure-11)

(ROOT
  (S (`` ``)
    (VP (VB Let)
      (S
        (NP (PRP us))
        (VP (VB take)
          (NP (DT the) (NN risk))
          (ADVP (RB together))
          (, ,) (VB Dawtie))))
    (. !) ('' '')))

root(ROOT-0, Let-2)
nsubj(take-4, us-3)
ccomp(Let-2, take-4)
det(risk-6, the-5)
dobj(take-4, risk-6)
advmod(take-4, together-7)
dep(take-4, Dawtie-9)

(ROOT
  (X (`` ``)
    (X
      (X (WP What))
      (NP (NN risk)))
    (, ,)
    (X (SYM Andrew))
    (. ?) ('' '')))

dep(risk-3, What-2)
dep(Andrew-5, risk-3)
root(ROOT-0, Andrew-5)

(ROOT
  (S
    (S
      (NP (`` ``)
        (NP (DT The) (NN risk))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ makes)
              (S
                (NP (PRP you))
                (ADJP (RB not) (JJ sure))))))
        (, ,))
      (VP (VBP Dawtie) (: --)
        (NP
          (NP (DT the) (NN risk))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (ADVP (IN at) (RB once))
                (NP
                  (NP
                    (NP (DT the) (JJS worst))
                    (CC and)
                    (NP (DT the) (JJS least)))
                  (: --)
                  (NP
                    (NP (DT the) (NN risk))
                    (SBAR (IN that)
                      (S
                        (NP (PRP$ our) (NN hope))
                        (VP (MD should)
                          (VP (VB be)
                            (PP (IN in)
                              (NP (JJ vain)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT no) (NNP God))))
    (. .)))

det(risk-3, The-2)
nsubj(makes-5, risk-3)
nsubj(Dawtie-10, risk-3)
rcmod(risk-3, makes-5)
nsubj(sure-8, you-6)
neg(sure-8, not-7)
xcomp(makes-5, sure-8)
root(ROOT-0, Dawtie-10)
det(risk-13, the-12)
dobj(Dawtie-10, risk-13)
parataxis(Dawtie-10, risk-13)
nsubj(worst-19, risk-13)
nsubj(least-22, risk-13)
cop(worst-19, is-15)
advmod(worst-19, at-16)
advmod(at-16, once-17)
det(worst-19, the-18)
rcmod(risk-13, worst-19)
det(least-22, the-21)
rcmod(risk-13, least-22)
conj_and(worst-19, least-22)
det(risk-25, the-24)
dep(worst-19, risk-25)
mark(be-30, that-26)
poss(hope-28, our-27)
nsubj(be-30, hope-28)
aux(be-30, should-29)
dep(risk-25, be-30)
prep_in(be-30, vain-32)
expl(is-36, there-35)
conj_and(Dawtie-10, is-36)
neg(God-38, no-37)
nsubj(is-36, God-38)

(ROOT
  (S (CC But)
    (, ,)
    (ADVP (RB Dawtie))
    (, ,)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT that))
          (PP (IN in)
            (NP (PRP$ my) (NN heart)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ cries)
                (SBAR
                  (S
                    (NP (NNP Christ) (NNP _))
                    (VP (VBD did)
                      (SBAR
                        (S
                          (NP (NNP _))
                          (VP (VBP die)))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (NNP _))
        (VP (VBD did)
          (NP (JJ _) (NN rise))
          (ADVP (RB again))))
      (, ,)
      (CC and)
      (S
        (NP (NNP God))
        (VP (VBZ is)
          (VP (VBG doing)
            (NP (PRP$ His) (JJS best))))))
    (. .)))

advmod(is-6, Dawtie-3)
expl(is-6, there-5)
root(ROOT-0, is-6)
nsubj(is-6, that-7)
nsubj(cries-12, that-7)
poss(heart-10, my-9)
prep_in(that-7, heart-10)
rcmod(that-7, cries-12)
nn(_-14, Christ-13)
nsubj(did-15, _-14)
ccomp(cries-12, did-15)
nsubj(die-17, _-16)
ccomp(did-15, die-17)
nsubj(did-21, _-20)
conj_and(is-6, did-21)
amod(rise-23, _-22)
dobj(did-21, rise-23)
advmod(did-21, again-24)
nsubj(doing-29, God-27)
aux(doing-29, is-28)
conj_and(is-6, doing-29)
conj_and(did-21, doing-29)
poss(best-31, His-30)
dobj(doing-29, best-31)

(ROOT
  (S
    (NP (PRP$ His) (JJ perfect) (NN love))
    (VP (VBZ is)
      (NP (PRP$ our) (JJ perfect) (NN safety)))
    (. .)))

poss(love-3, His-1)
amod(love-3, perfect-2)
nsubj(safety-7, love-3)
cop(safety-7, is-4)
poss(safety-7, our-5)
amod(safety-7, perfect-6)
root(ROOT-0, safety-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ hard)
        (PP (IN upon)
          (NP (PRP Him))))
      (SBAR (IN that)
        (S
          (NP (PRP$ His) (JJ own) (NNS children))
          (VP (MD will) (RB not)
            (VP (VB trust)
              (NP (PRP Him)))))))
    (. !) ('' '')))

nsubj(hard-3, It-1)
cop(hard-3, is-2)
root(ROOT-0, hard-3)
prep_upon(hard-3, Him-5)
mark(trust-12, that-6)
poss(children-9, His-7)
amod(children-9, own-8)
nsubj(trust-12, children-9)
aux(trust-12, will-10)
neg(trust-12, not-11)
ccomp(hard-3, trust-12)
dobj(trust-12, Him-13)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP He))
        (VP (MD would))))
    (VP (CC but)
      (VP (VBP show)
        (NP (PRP Himself))))
    (. !) ('' '')))

mark(would-4, If-2)
nsubj(would-4, He-3)
csubj(show-6, would-4)
cc(show-6, but-5)
root(ROOT-0, show-6)
dobj(show-6, Himself-7)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN sight))
      (PP (IN of)
        (NP (PRP Him))))
    (ADVP (RB now))
    (VP (MD would)
      (VP (VB make)
        (S
          (S
            (NP (PRP us))
            (VP (VBP believe)
              (PP (IN in)
                (NP (PRP Him)))
              (PP (IN without)
                (S
                  (VP (VBG knowing)
                    (NP (PRP Him)))))))
          (: ;)
          (CC and)
          (S
            (NP
              (NP (WP what) (NN kind))
              (PP (IN of)
                (NP (NN faith))))
            (VP (MD would)
              (ADVP (IN that))
              (VP (VB be)
                (PP
                  (PP (IN for)
                    (NP (PRP Him)))
                  (CC or)
                  (PP (IN for)
                    (NP (PRP us))))))))))
    (. !)))

det(sight-3, The-2)
nsubj(make-8, sight-3)
prep_of(sight-3, Him-5)
advmod(make-8, now-6)
aux(make-8, would-7)
root(ROOT-0, make-8)
nsubj(believe-10, us-9)
dep(make-8, believe-10)
prep_in(believe-10, Him-12)
prepc_without(believe-10, knowing-14)
dobj(knowing-14, Him-15)
det(kind-19, what-18)
nsubj(be-24, kind-19)
prep_of(kind-19, faith-21)
aux(be-24, would-22)
advmod(be-24, that-23)
dep(make-8, be-24)
conj_and(believe-10, be-24)
prep_for(be-24, Him-26)
prep_for(be-24, us-29)
conj_or(Him-26, us-29)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD should)
      (VP (VB be)
        (NP (JJ bad) (NNS children))
        (, ,)
        (S
          (VP (VBG taking)
            (NP (PRP Him))
            (PP (IN for)
              (NP (DT a) (JJ weak) (NN parent)))))))
    (. !)))

nsubj(children-5, We-1)
aux(children-5, should-2)
cop(children-5, be-3)
amod(children-5, bad-4)
root(ROOT-0, children-5)
vmod(children-5, taking-7)
dobj(taking-7, Him-8)
det(parent-12, a-10)
amod(parent-12, weak-11)
prep_for(taking-7, parent-12)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (ADVP (RB _))
      (VP (VB know)
        (S
          (VP (VBG _)
            (NP (PRP Him))))))
    (. !)))

nsubj(know-4, We-1)
aux(know-4, must-2)
advmod(know-4, _-3)
root(ROOT-0, know-4)
xcomp(know-4, _-5)
dobj(_-5, Him-6)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP we))
        (VP (VBP do))))
    (, ,)
    (NP (EX there))
    (VP (MD will)
      (VP (VB be)
        (NP (DT no) (NN fear))
        (, ,)
        (ADVP (DT no) (NN doubt))))
    (. .)))

advmod(do-3, When-1)
nsubj(do-3, we-2)
advcl(fear-9, do-3)
expl(fear-9, there-5)
aux(fear-9, will-6)
cop(fear-9, be-7)
neg(fear-9, no-8)
root(ROOT-0, fear-9)
neg(doubt-12, no-11)
advmod(fear-9, doubt-12)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD shall)
      (VP (VB run)
        (NP (JJ straight) (NN home))))
    (. !)))

nsubj(run-3, We-1)
aux(run-3, shall-2)
root(ROOT-0, run-3)
amod(home-5, straight-4)
dobj(run-3, home-5)

(ROOT
  (S
    (ADVP (RB Dawtie))
    (, ,)
    (ADVP (RB shall))
    (NP (PRP we))
    (VP (VBP go)
      (ADVP (RB together)))
    (. ?) ('' '')))

advmod(go-5, Dawtie-1)
advmod(go-5, shall-3)
nsubj(go-5, we-4)
root(ROOT-0, go-5)
advmod(go-5, together-6)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Yes))
    (, ,)
    (ADVP (RB surely))
    (, ,)
    (NP (NNP Andrew))
    (. !)))

discourse(Andrew-6, Yes-2)
dep(Andrew-6, surely-4)
root(ROOT-0, Andrew-6)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBZ knows)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP try)))))
    (. .)))

nsubj(knows-2, God-1)
root(ROOT-0, knows-2)
nsubj(try-4, I-3)
ccomp(knows-2, try-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ ready)
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (WHNP (WDT whatever))
                (S
                  (NP (PRP you))
                  (VP (VB tell)
                    (NP (PRP me))
                    (, ,)
                    (NP (NNP Andrew))))))))))
    (. !) ('' '')))

nsubj(ready-3, I-1)
nsubj(do-5, I-1)
cop(ready-3, 'm-2)
root(ROOT-0, ready-3)
aux(do-5, to-4)
xcomp(ready-3, do-5)
dobj(tell-8, whatever-6)
nsubj(tell-8, you-7)
ccomp(do-5, tell-8)
dobj(tell-8, me-9)
dobj(tell-8, Andrew-11)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH No))
    (, ,)
    (NP (NNP Dawtie))
    (. !)))

discourse(Dawtie-4, No-2)
root(ROOT-0, Dawtie-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must)
      (ADVP (RB never))
      (VP (VB do)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP tell)
              (NP (PRP you))
              (, ,)
              (SBAR (IN except)
                (S
                  (NP (PRP you))
                  (VP (VBP think)
                    (S
                      (NP (PRP it))
                      (ADJP (RB right)))))))))))
    (. .) ('' '')))

nsubj(do-4, You-1)
aux(do-4, must-2)
neg(do-4, never-3)
root(ROOT-0, do-4)
dobj(tell-7, what-5)
nsubj(tell-7, I-6)
ccomp(do-4, tell-7)
dobj(tell-7, you-8)
mark(think-12, except-10)
nsubj(think-12, you-11)
advcl(tell-7, think-12)
nsubj(right-14, it-13)
xcomp(think-12, right-14)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP know)
      (NP (DT that)))
    (. .)))

discourse(know-5, Yes-2)
nsubj(know-5, I-4)
root(ROOT-0, know-5)
dobj(know-5, that-6)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB think)
                (S
                  (NP (PRP it))
                  (ADJP (RB right)))))))))
    (. !) ('' '')))

cc(sure-4, But-1)
nsubj(sure-4, I-2)
cop(sure-4, am-3)
root(ROOT-0, sure-4)
nsubj(think-7, I-5)
aux(think-7, should-6)
ccomp(sure-4, think-7)
nsubj(right-9, it-8)
xcomp(think-7, right-9)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN been)
        (PP (IN of)
          (NP (CD one) (NN mind)))
        (PP (IN for)
          (NP
            (NP
              (NP (DT a) (JJ long) (NN time))
              (ADVP (RB now)))
            (, ,)
            (NP (NNP Dawtie))))))
    (. !) ('' '')))

nsubj(been-4, We-2)
aux(been-4, 've-3)
root(ROOT-0, been-4)
num(mind-7, one-6)
prep_of(been-4, mind-7)
det(time-11, a-9)
amod(time-11, long-10)
prep_for(been-4, time-11)
advmod(time-11, now-12)
appos(time-11, Dawtie-14)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Sin) (POS '))
      (VBG lang) (NN afore))
    (NP (PRP I))
    (VP (VBD had)
      (VP (VBN ony)
        (NP
          (NP (NNP min) (POS '))
          (NN o))
        (`` ')
        (NP (PRP$ my) (NN ain))))
    (. !) ('' '')))

poss(afore-5, Sin-2)
amod(afore-5, lang-4)
nsubj(ony-8, afore-5)
nsubj(ony-8, I-6)
aux(ony-8, had-7)
root(ROOT-0, ony-8)
poss(o-11, min-9)
dobj(ony-8, o-11)
poss(ain-14, my-13)
dobj(ony-8, ain-14)

(ROOT
  (S
    (VP (VBD responded)
      (NP (NNP Dawtie))
      (, ,)
      (S
        (VP (VBG turning)
          (PP (TO to)
            (NP (PRP$ her) (NN vernacular))))))
    (. .)))

root(ROOT-0, responded-1)
dobj(responded-1, Dawtie-2)
vmod(responded-1, turning-4)
poss(vernacular-7, her-6)
prep_to(turning-4, vernacular-7)

(ROOT
  (S (`` ``) (RB Then)
    (VP (VBP let)
      (S
        (NP (PRP us))
        (VP
          (VP (VB be)
            (PP (IN of)
              (NP (CD one) (NN heart)))
            (ADVP (RB too)))
          (, ,)
          (VP (VB Dawtie)))))
    (. !) ('' '')))

advmod(let-3, Then-2)
root(ROOT-0, let-3)
nsubj(be-5, us-4)
ccomp(let-3, be-5)
num(heart-8, one-7)
prep_of(be-5, heart-8)
advmod(be-5, too-9)
dep(be-5, Dawtie-11)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADJP (RB so) (JJ accustomed)
        (S
          (VP (TO to)
            (VP (VB hear)
              (S
                (NP (NNP Andrew))
                (VP (VB speak)
                  (PP (IN in)
                    (NP (NNS figures)))
                  (, ,)
                  (SBAR (IN that)
                    (S
                      (ADVP (RB sometimes))
                      (NP (PRP she))
                      (VP (VBD looked)
                        (PP (IN through)
                          (CC and)
                          (IN beyond)
                          (NP (PRP$ his) (NNS words)))))))))))))
    (. .)))

nsubj(accustomed-4, She-1)
nsubj(hear-6, She-1)
cop(accustomed-4, was-2)
advmod(accustomed-4, so-3)
root(ROOT-0, accustomed-4)
aux(hear-6, to-5)
xcomp(accustomed-4, hear-6)
nsubj(speak-8, Andrew-7)
ccomp(hear-6, speak-8)
prep_in(speak-8, figures-10)
mark(looked-15, that-12)
advmod(looked-15, sometimes-13)
nsubj(looked-15, she-14)
nsubj(looked-15', she-14)
ccomp(speak-8, looked-15)
ccomp(speak-8, looked-15')
conj_and(looked-15, looked-15')
poss(words-20, his-19)
prep_beyond(looked-15', words-20)
prep_through(looked-15, words-20)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD did)
        (ADVP (RB so) (RB now)))
      (, ,)
      (CC and)
      (VP
        (S
          (VP (VBG seeing)
            (NP (NN nothing))))
        (, ,)
        (VP (VBD stood)
          (S
            (ADJP (JJ perplexed))))))
    (. .)))

nsubj(did-2, She-1)
nsubj(stood-10, She-1)
root(ROOT-0, did-2)
advmod(now-4, so-3)
advmod(did-2, now-4)
xcomp(stood-10, seeing-7)
dobj(seeing-7, nothing-8)
conj_and(did-2, stood-10)
acomp(stood-10, perplexed-11)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Winna) (NNP ye))
    (, ,)
    (NP (NNP Dawtie))
    (. ?) ('' '')))

nn(ye-3, Winna-2)
root(ROOT-0, ye-3)
dep(ye-3, Dawtie-5)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew))
      (, ,)
      (S
        (VP (VBG holding)
          (PRT (RP out))
          (NP (PRP$ his) (NNS hands)))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)
vmod(said-1, holding-4)
prt(holding-4, out-5)
poss(hands-7, his-6)
dobj(holding-4, hands-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD dinna)
      (ADVP (RB freely))
      (NP
        (NP (NN un) (`` `) (NN erstan) ('' ') (NNS ye))
        (, ,)
        (NP (DT An) (`` `) (NN rew))))
    (. .) ('' '')))

nsubj(dinna-3, I-2)
root(ROOT-0, dinna-3)
advmod(dinna-3, freely-4)
nn(ye-9, un-5)
nn(ye-9, erstan-7)
dobj(dinna-3, ye-9)
det(rew-13, An-11)
appos(ye-9, rew-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP Ye))
      (VP (VBP h)
        (ADJP (`` `) (RB avenly) (JJ idiot))))
    (, ,) ('' '')
    (VP (VBD cried))
    (NP (NNP Andrew))
    (. .)))

nsubj(h-3, Ye-2)
ccomp(cried-9, h-3)
advmod(idiot-6, avenly-5)
acomp(h-3, idiot-6)
root(ROOT-0, cried-9)
nsubj(cried-9, Andrew-10)

(ROOT
  (S (`` ``)
    (NP (NNP Wull) (NNP ye))
    (VP
      (VP (VB be)
        (NP (PRP$ my) (NN wife)))
      (, ,)
      (CC or)
      (VP (VB wull)
        (NP (PRP ye) (DT no))))
    (. ?) ('' '')))

nn(ye-3, Wull-2)
nsubj(wife-6, ye-3)
nsubj(wull-9, ye-3)
cop(wife-6, be-4)
poss(wife-6, my-5)
root(ROOT-0, wife-6)
conj_or(wife-6, wull-9)
dobj(wull-9, ye-10)
dep(ye-10, no-11)

(ROOT
  (S
    (S
      (NP (NNP Dawtie))
      (VP (VBD threw)
        (NP (PRP$ her) (JJ shapely) (NNS arms))
        (PP (IN above)
          (NP (PRP$ her) (NN head)))))
    (: --)
    (S
      (ADVP (RB straight))
      (S
        (ADVP (RB up))
        (, ,)
        (NP (PRP$ her) (NN head))
        (VP (VBD fell)
          (ADVP (RB back))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (VBD seemed)
          (S
            (VP (TO to)
              (VP (VB gaze)
                (PP (IN into)
                  (NP (DT the) (NN unseen)))))))))
    (. .)))

nsubj(threw-2, Dawtie-1)
root(ROOT-0, threw-2)
poss(arms-5, her-3)
amod(arms-5, shapely-4)
dobj(threw-2, arms-5)
poss(head-8, her-7)
prep_above(threw-2, head-8)
advmod(fell-15, straight-10)
advmod(fell-15, up-11)
poss(head-14, her-13)
nsubj(fell-15, head-14)
parataxis(threw-2, fell-15)
advmod(fell-15, back-16)
nsubj(seemed-20, she-19)
nsubj(gaze-22, she-19)
parataxis(threw-2, seemed-20)
conj_and(fell-15, seemed-20)
aux(gaze-22, to-21)
xcomp(seemed-20, gaze-22)
det(unseen-25, the-24)
prep_into(gaze-22, unseen-25)

(ROOT
  (SINV
    (S
      (S
        (ADVP (RB Then))
        (NP (PRP she))
        (VP (VBD gave)
          (NP (DT a) (NN gasp))))
      (, ,)
      (S
        (NP (PRP$ her) (NNS arms))
        (VP (VBD dropped)
          (PP (TO to)
            (NP (PRP$ her) (NNS sides)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (MD would)
          (VP (VB have)
            (VP (VBN fallen))))))
    (VP (VBD had) (RB not)
      (ADVP (RB Andrew))
      (VP (VBN taken)))
    (NP (PRP her))
    (. .)))

advmod(gave-3, Then-1)
nsubj(gave-3, she-2)
dep(taken-22, gave-3)
det(gasp-5, a-4)
dobj(gave-3, gasp-5)
poss(arms-8, her-7)
nsubj(dropped-9, arms-8)
ccomp(gave-3, dropped-9)
conj_and(gave-3, dropped-9)
dep(taken-22, dropped-9)
poss(sides-12, her-11)
prep_to(dropped-9, sides-12)
nsubj(fallen-18, she-15)
aux(fallen-18, would-16)
aux(fallen-18, have-17)
conj_and(gave-3, fallen-18)
dep(taken-22, fallen-18)
aux(taken-22, had-19)
neg(taken-22, not-20)
advmod(taken-22, Andrew-21)
root(ROOT-0, taken-22)
nsubj(taken-22, her-23)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Andrew))
    (. !)))

root(ROOT-0, Andrew-2)

(ROOT
  (ADVP (RB Andrew) (. !) ('' '')))

root(ROOT-0, Andrew-1)

(ROOT
  (S
    (NP (PRP she))
    (VP
      (VP (VBD sighed))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADVP (RB still))
        (PP (IN in)
          (NP (PRP$ his) (NNS arms)))))
    (. .)))

nsubj(sighed-2, she-1)
nsubj(was-5, she-1)
root(ROOT-0, sighed-2)
conj_and(sighed-2, was-5)
advmod(was-5, still-6)
poss(arms-9, his-8)
prep_in(was-5, arms-9)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Winna) (NNP ye))
    (, ,)
    (NP (NNP Dawtie))
    (. ?) ('' '')))

nn(ye-3, Winna-2)
root(ROOT-0, ye-3)
dep(ye-3, Dawtie-5)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBN whispered))
    (. .)))

nsubj(whispered-2, he-1)
root(ROOT-0, whispered-2)

(ROOT
  (S
    (S (`` ``)
      (VP (VB Wait))
      (, ,) ('' ''))
    (S
      (NP (PRP she))
      (VP (VBD murmured) (: ;) (`` ``)
        (S
          (VP (VB wait)))))
    (. .) ('' '')))

root(ROOT-0, Wait-2)
nsubj(murmured-6, she-5)
parataxis(Wait-2, murmured-6)
ccomp(murmured-6, wait-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBZ winna)
      (NP
        (NP (NN wait))
        (, ,)
        (NP (NNP Dawtie))))
    (. .) ('' '')))

nsubj(winna-3, I-2)
root(ROOT-0, winna-3)
dobj(winna-3, wait-4)
appos(wait-4, Dawtie-6)

(ROOT
  (S (`` ``)
    (VP (VB Wait)
      (SBAR (IN till)
        (S
          (NP (PRP ye))
          (VP (VBP hear)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP they))
                (VP (MD 'll)
                  (VP (VB say)
                    (NP (DT the) (NN morn))))))))))
    (. .) ('' '')))

root(ROOT-0, Wait-2)
mark(hear-5, till-3)
nsubj(hear-5, ye-4)
advcl(Wait-2, hear-5)
dobj(say-9, what-6)
nsubj(say-9, they-7)
aux(say-9, 'll-8)
ccomp(hear-5, say-9)
det(morn-11, the-10)
dobj(say-9, morn-11)

(ROOT
  (S (`` ``)
    (NP (NNP Dawtie))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (ADJP (JJ ashamed)))))
    (VP (VBP o) (`` ')
      (NP (PRP ye)))
    (. .)))

nsubj(o-7, Dawtie-2)
nsubj(ashamed-6, I-4)
cop(ashamed-6, 'm-5)
parataxis(o-7, ashamed-6)
root(ROOT-0, o-7)
dobj(o-7, ye-9)

(ROOT
  (S
    (NP (WP What))
    (VP
      (VP (VBP care)
        (NP (PRP I)))
      (, ,)
      (NP
        (NP (DT an))
        ('' ')
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBP daur)
              (SBAR
                (S
                  (NP (PRP ye))
                  (VP (VBP care)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP they))
                        (VP (VBP say))))))))))))
    (. .)))

nsubj(care-2, What-1)
root(ROOT-0, care-2)
dobj(care-2, I-3)
dobj(care-2, an-5)
nsubj(daur-8, an-5)
rcmod(an-5, daur-8)
nsubj(care-10, ye-9)
ccomp(daur-8, care-10)
dobj(say-13, what-11)
nsubj(say-13, they-12)
ccomp(care-10, say-13)

(ROOT
  (SQ (VBP Are)
    (NP (PRP ye))
    (ADJP (RB no)
      (SBAR
        (S
          (NP (DT the) (NNP Lord))
          (VP (VBZ 's)
            (NP (JJ clean) (NN yowie))))))
    (. ?)))

cop(no-3, Are-1)
nsubj(no-3, ye-2)
root(ROOT-0, no-3)
det(Lord-5, the-4)
nsubj(yowie-8, Lord-5)
cop(yowie-8, 's-6)
amod(yowie-8, clean-7)
ccomp(no-3, yowie-8)

(ROOT
  (S
    (S
      (NP (NNP Gien) (NNP ye))
      (VP (VBP care)
        (PP (IN for)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (NN ony) (NN man))
              (VP (VBZ thinks)
                (NP
                  (NP
                    (NP (NNP o) (POS '))
                    (NN ye))
                  (PP (CC but)
                    (NP (DT the) (NNP Lord) (NN himsel) ('' '))))))))))
    (, ,)
    (NP (PRP ye))
    (VP (VBP 're)
      (NP
        (NP (DT no) (NNP a) (POS '))
        (NP (PRP$ His))))
    (. .)))

nn(ye-2, Gien-1)
nsubj(care-3, ye-2)
ccomp(a-21, care-3)
dobj(thinks-8, what-5)
nn(man-7, ony-6)
nsubj(thinks-8, man-7)
prepc_for(care-3, thinks-8)
poss(ye-11, o-9)
dobj(thinks-8, ye-11)
prep(ye-11, but-12)
det(himsel-15, the-13)
nn(himsel-15, Lord-14)
pobj(but-12, himsel-15)
nsubj(a-21, ye-18)
cop(a-21, 're-19)
neg(a-21, no-20)
root(ROOT-0, a-21)
dep(a-21, His-23)

(ROOT
  (S
    (S
      (NP (NNP Gien) (NNP ye))
      (VP (VBP care)
        (PP (IN for)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP think)
                (NP
                  (NP (NNP o) (POS '))
                  (NN ye))))))))
    (, ,)
    (ADVP (RB ither-like))
    (S (CC nor)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP He))
          (VP (VBZ thinks))))
      (, ,)
      (NP (PRP ye))
      (VP (VBP 're)
        (NP
          (NP
            (NP (DT no) (NN sae))
            (NP (PRP$ His)
              (ADJP (RB as)
                (NP (PRP I))
                (JJ maun))
              (NN hae)))
          (SBAR
            (S
              (NP (PRP ye))
              (VP (VBP afore)
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBD pairt)
                      (NP
                        (NP (NN company))
                        (PRN (: --)
                          (SBAR
                            (WHNP (WDT which))
                            (PRN (, ,)
                              (INTJ (VB please)))
                            (S
                              (VP (VBD God) (, ,) (`` `)
                                (ADJP (JJ ill)))))))
                      (VP (VB be)
                        (PP (IN on)
                          (NP
                            (NP (DT the) (NN ither) (NN side) (NN o) (POS '))
                            (NN eternity)))))))))))))
    (. .) ('' '')))

nn(ye-2, Gien-1)
nsubj(care-3, ye-2)
root(ROOT-0, care-3)
dobj(think-7, what-5)
nsubj(think-7, I-6)
prepc_for(care-3, think-7)
poss(ye-10, o-8)
dobj(think-7, ye-10)
advmod(sae-21, ither-like-12)
cc(sae-21, nor-13)
dobj(thinks-16, what-14)
nsubj(thinks-16, He-15)
advcl(sae-21, thinks-16)
nsubj(sae-21, ye-18)
cop(sae-21, 're-19)
neg(sae-21, no-20)
parataxis(care-3, sae-21)
poss(hae-26, His-22)
advmod(maun-25, as-23)
npadvmod(maun-25, I-24)
amod(hae-26, maun-25)
dep(sae-21, hae-26)
nsubj(afore-28, ye-27)
rcmod(sae-21, afore-28)
nsubj(pairt-30, we-29)
ccomp(afore-28, pairt-30)
dobj(pairt-30, company-31)
nsubj(God-36, which-33)
discourse(God-36, please-35)
dep(company-31, God-36)
acomp(God-36, ill-39)
dep(pairt-30, be-40)
det(o-45, the-42)
nn(o-45, ither-43)
nn(o-45, side-44)
poss(eternity-47, o-45)
prep_on(be-40, eternity-47)

(ROOT
  (S (`` ``)
    (ADVP (CC But))
    (, ,)
    (NP (DT An) (`` `) (NN rew))
    (, ,)
    (PRN
      (S
        (NP (PRP it) (NNS winna))
        (VP (VBP do)
          (S
            (VP (TO to)
              (VP (VB say)
                (S
                  (NP (NNP o) (POS '))
                  (VP (VB yer)
                    (NP
                      (NP (NN father) (POS 's))
                      (NN son))
                    (`` `)
                    (PP (IN at))))))))))
    (NP (PRP he))
    (VP (VBD took)
      (SBAR
        (S
          (NP (PRP$ his) (NN wife))
          (VP (VBP frae)
            (NP (DT the) (NN jail))))))
    (. .) ('' '') ('' '')))

advmod(took-22, But-2)
det(rew-6, An-4)
nsubj(took-22, rew-6)
dep(winna-9, it-8)
nsubj(do-10, winna-9)
nsubj(say-12, winna-9)
parataxis(took-22, do-10)
aux(say-12, to-11)
xcomp(do-10, say-12)
nsubj(yer-15, o-13)
ccomp(say-12, yer-15)
poss(son-18, father-16)
dobj(yer-15, son-18)
prep(yer-15, at-20)
nsubj(took-22, he-21)
root(ROOT-0, took-22)
poss(wife-24, his-23)
nsubj(frae-25, wife-24)
ccomp(took-22, frae-25)
det(jail-27, the-26)
dobj(frae-25, jail-27)

(ROOT
  (S (`` `)
    (NP (NNP Deed) (PRP they))
    (VP (VBZ s) (`` ')
      (VP (VB say)
        (NP (JJ naething) (NN ither))))
    (. !)))

nsubj(say-6, Deed-2)
dep(Deed-2, they-3)
aux(say-6, s-4)
root(ROOT-0, say-6)
amod(ither-8, naething-7)
dobj(say-6, ither-8)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (NP (NN ither))
      (VP (VB cam)
        (NP (PRP I))
        (PP (IN for))))
    (. ?)))

prep_for(cam-3, What-1)
nsubj(cam-3, ither-2)
root(ROOT-0, cam-3)
dobj(cam-3, I-4)

(ROOT
  (SQ (MD Would)
    (NP (PRP ye))
    (VP (VBP hae)
      (S
        (NP (PRP me))
        (ADJP (JJ ashamed))
        (S
          (VP (VBG o) ('' ')
            (NP (NN ane) (NN o))
            ('' ')
            (NP
              (NP
                (NP (NNP God) (POS 's))
                (NN elec))
              ('' ') (: --)
              (NP
                (NP (DT a) (NN lady) (NN o) (POS '))
                (NP
                  (NP
                    (NP (DT the) (NNP Lord) (POS 's))
                    (NN ain))
                  (NP (NN coort)))))))))
    (. ?) ('' '')))

aux(hae-3, Would-1)
nsubj(hae-3, ye-2)
root(ROOT-0, hae-3)
nsubj(o-6, me-4)
dep(o-6, ashamed-5)
xcomp(hae-3, o-6)
nn(o-9, ane-8)
dobj(o-6, o-9)
poss(elec-13, God-11)
dobj(o-6, elec-13)
det(o-18, a-16)
nn(o-18, lady-17)
dep(elec-13, o-18)
det(Lord-21, the-20)
poss(ain-23, Lord-21)
dep(o-18, ain-23)
dep(ain-23, coort-24)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Eh))
      (, ,)
      (CC but)
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ feart)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (NP
                  (NP (NNP a) (POS '))
                  (NP (DT the) (NN compassion) (NN o) (POS '))
                  (NN yer) (NNS hert))))))))
    (, ,)
    (VP (VBP sir))
    (. .)))

nsubj(feart-7, Eh-2)
conj_but(feart-7, I-5)
nsubj(feart-7, I-5)
ccomp(sir-19, I-5)
cop(feart-7, 'm-6)
ccomp(sir-19, feart-7)
nsubj(hert-17, it-8)
cop(hert-17, 's-9)
poss(hert-17, a-10)
det(o-14, the-12)
nn(o-14, compassion-13)
poss(hert-17, o-14)
nn(hert-17, yer-16)
ccomp(feart-7, hert-17)
root(ROOT-0, sir-19)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (VB wad)
      (NP (NN fain) (NN mak))
      ('' ')
      (PP (RP up)
        (PP (TO to)
          (NP (PRP me))))
      (PP (IN for)
        (NP (DT the) (NN disgrace))))
    (. .)))

nsubj(wad-2, Ye-1)
root(ROOT-0, wad-2)
nn(mak-4, fain-3)
dobj(wad-2, mak-4)
prep(wad-2, up-6)
prep_to(up-6, me-8)
det(disgrace-11, the-10)
prep_for(wad-2, disgrace-11)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (MD could)
      (ADVP (RB weel))
      (VP (VB do)
        (NP
          (NP (NN wantin) (POS '))
          (NX (FW me)))))
    (. .) ('' '')))

nsubj(do-4, Ye-1)
aux(do-4, could-2)
advmod(do-4, weel-3)
root(ROOT-0, do-4)
poss(me-7, wantin-5)
dobj(do-4, me-7)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB winna))
      (VP (VBP say)))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP (NNP Andrew))
      (, ,) (`` ``)
      (S
        (S
          (S
            (NP (DT that) (NN I) (NN couldna))
            (VP (VBP live)
              (NP
                (NP
                  (NP (NN wantin) (POS '))
                  (NN ye))
                (, ,)
                (SBAR
                  (WHPP (IN for)
                    (WHNP (WDT that)))
                  (S
                    (NP (NN wad))
                    (VP (VB be)
                      (S
                        (VP (TO to)
                          (VP (VB say)
                            (S
                              (NP (PRP I))
                              (ADJP (JJ wasna)
                                (PP (IN worth)
                                  (NP
                                    (NP (NN offerin) (POS '))
                                    (NN ye))))))))))))))
          (, ,)
          (CC and)
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (S
                  (VP (TO to)
                    (VP (VB deny)
                      (SBAR
                        (S
                          (NP (PRP Him))
                          (VP (`` `)
                            (ADVP (IN at))
                            (VBD made)
                            (NP (PRP you)))))))))))
          (CC and)
          (S
            (NP (PRP me))
            (PP (IN for)
              (NP (NN ane) (NN anither)))))
        (, ,)
        (CC but)
        (S
          (NP (PRP I))
          (ADVP (RB wad))
          (VP (VBP have)
            (NP (DT a) (DT some) (NN sair) (NN time))))))
    (. !)))

nsubj(say-4, I-2)
advmod(say-4, winna-3)
ccomp(returned-7, say-4)
root(ROOT-0, returned-7)
nsubj(returned-7, Andrew-8)
det(couldna-13, that-11)
nn(couldna-13, I-12)
nsubj(live-14, couldna-13)
dep(Andrew-8, live-14)
poss(ye-17, wantin-15)
dobj(live-14, ye-17)
prep_for(be-22, ye-17)
nsubj(be-22, wad-21)
nsubj(say-24, wad-21)
rcmod(ye-17, be-22)
aux(say-24, to-23)
xcomp(be-22, say-24)
nsubj(wasna-26, I-25)
xcomp(say-24, wasna-26)
poss(ye-30, offerin-28)
prep_worth(wasna-26, ye-30)
nsubj(be-35, it-33)
nsubj(deny-37, it-33)
aux(be-35, would-34)
dep(Andrew-8, be-35)
conj_and(live-14, be-35)
aux(deny-37, to-36)
xcomp(be-35, deny-37)
nsubj(made-41, Him-38)
advmod(made-41, at-40)
ccomp(deny-37, made-41)
dobj(made-41, you-42)
dep(Andrew-8, me-44)
conj_and(live-14, me-44)
dep(me-44, for-45)
nn(anither-47, ane-46)
pobj(for-45, anither-47)
nsubj(have-52, I-50)
advmod(have-52, wad-51)
dep(Andrew-8, have-52)
conj_but(live-14, have-52)
predet(time-56, a-53)
det(time-56, some-54)
nn(time-56, sair-55)
dobj(have-52, time-56)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB jist)
        (VP (VB speak)
          (PP (TO to)
            (NP (DT the) (NN minister)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ ready))
                    (NP
                      (NP (DT the) (NN minute))
                      (SBAR
                        (S
                          (NP (DT the) (NNP Lord))
                          (VP (VBZ opens)
                            (NP (NN yer) (NN prison-door))))))))))))))
    (. .) ('' '')))

nsubj(jist-3, I-1)
aux(jist-3, 'll-2)
root(ROOT-0, jist-3)
xcomp(jist-3, speak-4)
det(minister-7, the-6)
prep_to(speak-4, minister-7)
aux(ready-10, to-8)
cop(ready-10, be-9)
vmod(minister-7, ready-10)
det(minute-12, the-11)
dep(ready-10, minute-12)
det(Lord-14, the-13)
nsubj(opens-15, Lord-14)
rcmod(minute-12, opens-15)
nn(prison-door-17, yer-16)
dobj(opens-15, prison-door-17)

(ROOT
  (S
    (S
      (NP (DT The) (JJ same) (NN moment))
      (ADVP (RB in))
      (VP (VBD came)
        (NP (DT the) (NN governor))
        (PP (IN with)
          (NP (PRP$ his) (NN wife)))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBD were)
        (ADJP (RB much) (JJ interested))
        (PP (IN in)
          (NP (NNP Dawtie)))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, same-2)
nsubj(came-5, moment-3)
advmod(came-5, in-4)
root(ROOT-0, came-5)
det(governor-7, the-6)
dobj(came-5, governor-7)
poss(wife-10, his-9)
prep_with(came-5, wife-10)
nsubj(interested-15, they-12)
cop(interested-15, were-13)
advmod(interested-15, much-14)
parataxis(came-5, interested-15)
prep_in(interested-15, Dawtie-17)

(ROOT
  (S
    (NP (`` ``)
      (NP
        (NP (NNP Sir))
        (, ,)
        (CC and)
        (NP (NN ma'am)))
      (, ,) ('' ''))
    (VP (VBD said)
      (NP
        (NP (NNP Andrew))
        (, ,) (`` ``)
        (SQ (MD will)
          (NP (PRP you))
          (VP (VB please)
            (NP (NN witness))
            (SBAR (IN that)
              (S
                (NP (DT this) (NN woman))
                (VP (VBZ is)
                  (NP (PRP$ my) (NN wife)))))))
        (. ?) ('' '')))))

nsubj(said-8, Sir-2)
conj_and(Sir-2, ma'am-5)
nsubj(said-8, ma'am-5)
root(ROOT-0, said-8)
dobj(said-8, Andrew-9)
aux(please-14, will-12)
nsubj(please-14, you-13)
dep(Andrew-9, please-14)
dobj(please-14, witness-15)
mark(wife-21, that-16)
det(woman-18, this-17)
nsubj(wife-21, woman-18)
cop(wife-21, is-19)
poss(wife-21, my-20)
ccomp(please-14, wife-21)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (NNP Maister) (NNP Andrew) (NNP Ingram) (NN o) (POS '))
          (NP (DT the) (NN Knowe)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Dawtie))
    (. .)))

nsubj(o-7, It-2)
cop(o-7, 's-3)
nn(o-7, Maister-4)
nn(o-7, Andrew-5)
nn(o-7, Ingram-6)
ccomp(said-13, o-7)
det(Knowe-10, the-9)
dep(o-7, Knowe-10)
root(ROOT-0, said-13)
nsubj(said-13, Dawtie-14)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBZ wants)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB merry)
            (NP (PRP him))))))
    (. .) ('' '')))

nsubj(wants-3, He-2)
root(ROOT-0, wants-3)
dobj(wants-3, me-4)
nsubj(merry-6, me-4)
aux(merry-6, to-5)
xcomp(wants-3, merry-6)
dobj(merry-6, him-7)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP want)
        (S
          (NP (PRP her))
          (VP (TO to)
            (VP (VB go)
              (PP (IN before)
                (NP
                  (NP (DT the) (NN court))
                  (PP (IN as)
                    (NP (PRP$ my) (NN wife))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Andrew))
    (. .)))

nsubj(want-3, I-2)
ccomp(said-15, want-3)
dobj(want-3, her-4)
nsubj(go-6, her-4)
aux(go-6, to-5)
xcomp(want-3, go-6)
det(court-9, the-8)
prep_before(go-6, court-9)
poss(wife-12, my-11)
prep_as(court-9, wife-12)
root(ROOT-0, said-15)
nsubj(said-15, Andrew-16)

(ROOT
  (S (`` ``)
    (NP (PRP She))
    (VP (MD would)
      (VP (VB have)
        (S
          (NP (PRP me))
          (VP (VB wait)
            (SBAR (IN till)
              (S
                (NP (DT the) (NN jury))
                (VP (VBD said)
                  (NP
                    (NP (DT this))
                    (CC or)
                    (NP (DT that))))))))))
    (. .)))

nsubj(have-4, She-2)
aux(have-4, would-3)
root(ROOT-0, have-4)
nsubj(wait-6, me-5)
ccomp(have-4, wait-6)
mark(said-10, till-7)
det(jury-9, the-8)
nsubj(said-10, jury-9)
advcl(wait-6, said-10)
dobj(said-10, this-11)
dobj(said-10, that-13)
conj_or(this-11, that-13)

(ROOT
  (S
    (NP (DT The) (NN jury))
    (VP (VBP give)
      (NP (PRP me))
      (NP (PRP$ my) (NN wife)))
    (. .)))

det(jury-2, The-1)
nsubj(give-3, jury-2)
root(ROOT-0, give-3)
iobj(give-3, me-4)
poss(wife-6, my-5)
dobj(give-3, wife-6)

(ROOT
  (S
    (SBAR (IN As) (IN if)
      (S
        (NP (PRP I))
        (VP (VBD did) (RB n't))))
    (VP (VBP know)
      (NP (PRP her)))
    (. .) ('' '')))

mark(did-4, As-1)
mark(did-4, if-2)
nsubj(did-4, I-3)
advcl(know-6, did-4)
csubj(know-6, did-4)
neg(did-4, n't-5)
root(ROOT-0, know-6)
dobj(know-6, her-7)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP You))
        (VP (MD wo) (RB n't)
          (VP (VB have)
            (NP (PRP him)))))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VBP see))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mrs.) (NNP Innes))
    (, ,)
    (S
      (VP (VBG turning)
        (PP (TO to)
          (NP (NNP Dawtie)))))
    (. .)))

nsubj(have-5, You-2)
aux(have-5, wo-3)
neg(have-5, n't-4)
ccomp(said-12, have-5)
dobj(have-5, him-6)
nsubj(see-9, I-8)
parataxis(have-5, see-9)
root(ROOT-0, said-12)
nn(Innes-14, Mrs.-13)
nsubj(said-12, Innes-14)
vmod(said-12, turning-16)
prep_to(turning-16, Dawtie-18)

(ROOT
  (S (`` ``)
    (VP (VB Hae)
      (NP (PRP him)))
    (. !) ('' '')))

root(ROOT-0, Hae-2)
dobj(Hae-2, him-3)

(ROOT
  (SINV
    (VP (VBD cried))
    (NP (NNP Dawtie))
    (, ,) (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB wad))
      (VP (VBP hae)
        (S
          (NP (PRP him))
          (VP (VB gien)
            (S
              (NP (EX there))
              (NP
                (NP (NN war))
                (PP (CC but)
                  (NP
                    (NP (DT the) (JJ heid) (NN o) (POS '))
                    (NP (PRP him))))))))))
    (. .) ('' '')))

root(ROOT-0, cried-1)
nsubj(cried-1, Dawtie-2)
nsubj(hae-7, I-5)
advmod(hae-7, wad-6)
ccomp(cried-1, hae-7)
nsubj(gien-9, him-8)
ccomp(hae-7, gien-9)
expl(war-11, there-10)
nsubj(war-11, there-10)
xcomp(gien-9, war-11)
prep(war-11, but-12)
det(o-15, the-13)
amod(o-15, heid-14)
pobj(but-12, o-15)
dep(o-15, him-17)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP you))
      (VP (VBP are)
        (NP
          (NP (NN husband)
            (CC and)
            (NN wife))
          (, ,) ('' '')
          (SBAR
            (S
              (VP (VBD said)
                (NP (DT the) (NN governor))))))))
    (: ;) (`` ``)
    (S
      (ADVP (RB only))
      (NP (PRP you))
      (VP (MD should)
        (VP (VB have)
          (NP
            (NP (DT the) (NN thing))
            (VP (VBN done)
              (ADVP (RB properly))
              (PP (IN by)
                (NP
                  (NP (DT the) (NN minister))
                  (: --))
                (ADVP (RB afterward))))))))
    (. .) ('' '')))

advmod(husband-5, Then-2)
nsubj(husband-5, you-3)
cop(husband-5, are-4)
root(ROOT-0, husband-5)
conj_and(husband-5, wife-7)
rcmod(husband-5, said-10)
det(governor-12, the-11)
dobj(said-10, governor-12)
advmod(have-18, only-15)
nsubj(have-18, you-16)
aux(have-18, should-17)
parataxis(husband-5, have-18)
det(thing-20, the-19)
dobj(have-18, thing-20)
vmod(thing-20, done-21)
advmod(done-21, properly-22)
det(minister-25, the-24)
agent(done-21, minister-25)
advmod(done-21, afterward-27)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB see)
          (PP (TO to)
            (NP
              (NP (DT that))
              (, ,)
              (NP (NN sir)))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Andrew))
    (. .)))

nsubj(see-4, I-2)
aux(see-4, 'll-3)
ccomp(answered-11, see-4)
prep_to(see-4, that-6)
appos(that-6, sir-8)
root(ROOT-0, answered-11)
nsubj(answered-11, Andrew-12)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Come))
      (, ,)
      (NP (NN wife)))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (DT the) (NN governor))))
    (, ,) (`` ``)
    (NP (PRP we))
    (VP (MD must)
      (VP (VB let)
        (SBAR
          (S
            (NP (PRP them))
            (VP (VBP have)
              (S
                (NP (DT a) (JJ few) (NNS minutes))
                (ADJP (RB alone))
                (ADVP (RB together))))))))
    (. .) ('' '')))

discourse(wife-4, Come-2)
dep(let-14, wife-4)
parataxis(let-14, said-7)
det(governor-9, the-8)
nsubj(said-7, governor-9)
nsubj(let-14, we-12)
aux(let-14, must-13)
root(ROOT-0, let-14)
nsubj(have-16, them-15)
ccomp(let-14, have-16)
det(minutes-19, a-17)
amod(minutes-19, few-18)
nsubj(alone-20, minutes-19)
xcomp(have-16, alone-20)
advmod(alone-20, together-21)

(ROOT
  (SINV (`` ``)
    (FRAG
      (ADVP (RB There)))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP Andrew))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN door))
            (VP (VBD closed) (, ,) (`` ``)
              (S
                (NP (PRP ye))
                (VP (VBP 're)
                  (NP (PRP$ my) (NN wife)))))))
        (, ,)))
    (NP
      (NP (NN noo))
      (, ,)
      (NP (NNP Dawtie)))
    (. .)))

dep(said-5, There-2)
root(ROOT-0, said-5)
dobj(said-5, Andrew-6)
tmod(closed-11, Andrew-6)
advmod(closed-11, when-8)
det(door-10, the-9)
nsubj(closed-11, door-10)
rcmod(Andrew-6, closed-11)
nsubj(wife-17, ye-14)
cop(wife-17, 're-15)
poss(wife-17, my-16)
ccomp(closed-11, wife-17)
nsubj(said-5, noo-19)
appos(noo-19, Dawtie-21)

(ROOT
  (S
    (S
      (VP (VB Lat)
        (S
          (NP (PRP them))
          (VP
            (VP (VB acquit)
              (NP (PRP ye)))
            (CC or)
            (VP (VB condemn)
              (NP (PRP ye)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (PRP you))
        (, an) ('' ')
        (NP
          (NP (PRP me))
          (, ,)
          (NP (NN noo))
          (, ,)
          (SBAR
            (WHNP (WDT whatever))
            (S
              (VP (VBP come)))))))
    (. !) ('' '')))

ccomp(you-11, Lat-1)
nsubj(acquit-3, them-2)
nsubj(condemn-6, them-2)
ccomp(Lat-1, acquit-3)
dobj(acquit-3, ye-4)
ccomp(Lat-1, condemn-6)
conj_or(acquit-3, condemn-6)
dobj(condemn-6, ye-7)
nsubj(you-11, it-9)
cop(you-11, 's-10)
root(ROOT-0, you-11)
punct(you-11, an-12)
dep(you-11, me-14)
appos(me-14, noo-16)
nsubj(come-19, whatever-18)
rcmod(me-14, come-19)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP
      (VP (VBD broke)
        (PP (IN into)
          (NP (DT a) (NN flood)))
        (PP (IN of)
          (NP (NNS tears)))
        (PRN (: --)
          (S
            (NP (DT an) (NN experience))
            (ADJP
              (ADJP
                (ADVP (DT all)
                  (CC but))
                (JJ new))
              (PP (TO to)
                (NP (PRP her)))))
          (: --)))
      (CC and)
      (VP (VBD found)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD did)
              (S
                (NP (PRP her))
                (ADJP (JJ good))))))))
    (. .)))

nsubj(broke-2, Dawtie-1)
nsubj(found-18, Dawtie-1)
root(ROOT-0, broke-2)
det(flood-5, a-4)
prep_into(broke-2, flood-5)
prep_of(broke-2, tears-7)
det(experience-10, an-9)
dep(new-13, experience-10)
mwe(but-12, all-11)
advmod(new-13, but-12)
parataxis(broke-2, new-13)
prep_to(new-13, her-15)
conj_and(broke-2, found-18)
nsubj(did-20, it-19)
ccomp(found-18, did-20)
nsubj(good-22, her-21)
xcomp(did-20, good-22)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD smiled)
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP
              (VP (VBD wiped)
                (NP (PRP$ her) (NNS eyes)))
              (, ,)
              (CC and)
              (VP (VBD said)))))
        (: :) (`` ``)
        (S
          (NP
            (NP (NNP Weel))
            (, ,)
            (NP (DT An) (`` `) (NN rew))
            (, ,))
          (VP (VB gien)
            (NP
              (NP (DT the) (NNP Lord) (NN hasna) (NN appeart))
              (PP (IN in)
                (NP (PRP$ His) (NN ain) (NN likeness))))
            (S
              (VP (TO to)
                (VP (VB deliver)
                  (NP (PRP me)))))))))
    (, ,)
    (NP (PRP He))
    (VP (VBZ 's)
      (VP (VBN done)
        (NP (DT the) (JJ next) (JJS best) (NN thing))))
    (. .) ('' '')))

nsubj(smiled-2, She-1)
ccomp(done-34, smiled-2)
mark(wiped-5, as-3)
nsubj(wiped-5, she-4)
nsubj(said-10, she-4)
advcl(smiled-2, wiped-5)
poss(eyes-7, her-6)
dobj(wiped-5, eyes-7)
advcl(smiled-2, said-10)
conj_and(wiped-5, said-10)
nsubj(gien-19, Weel-13)
det(rew-17, An-15)
appos(Weel-13, rew-17)
ccomp(smiled-2, gien-19)
det(appeart-23, the-20)
nn(appeart-23, Lord-21)
nn(appeart-23, hasna-22)
dobj(gien-19, appeart-23)
poss(likeness-27, His-25)
nn(likeness-27, ain-26)
prep_in(appeart-23, likeness-27)
aux(deliver-29, to-28)
vmod(gien-19, deliver-29)
dobj(deliver-29, me-30)
nsubjpass(done-34, He-32)
auxpass(done-34, 's-33)
root(ROOT-0, done-34)
det(thing-38, the-35)
amod(thing-38, next-36)
amod(thing-38, best-37)
dobj(done-34, thing-38)

(ROOT
  (SINV (`` ``)
    (FRAG
      (NP (NNP Dawtie)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP
      (NP (NNP Andrew))
      (, ,) (`` ``)
      (S
        (NP (DT the) (NNP Lord))
        (ADVP (RB never))
        (VP (VBZ does)
          (NP (DT the) (JJ next))
          (ADVP (RBS best)))))
    (. .)))

dep(answered-5, Dawtie-2)
root(ROOT-0, answered-5)
nsubj(answered-5, Andrew-6)
det(Lord-10, the-9)
nsubj(does-12, Lord-10)
neg(does-12, never-11)
dep(Andrew-6, does-12)
det(next-14, the-13)
dobj(does-12, next-14)
advmod(does-12, best-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NN thing))
      (SBAR
        (S
          (NP (PRP He))
          (VP (VBZ does)))))
    (VP (VBZ is)
      (ADVP (RB always))
      (ADJP
        (ADJP (JJR better))
        (PP (IN than)
          (NP
            (NP (DT the) (NN thing))
            (SBAR
              (S
                (NP (PRP He))
                (VP (VBZ does) (RB not))))))))
    (. .) ('' '')))

det(thing-2, The-1)
nsubj(better-7, thing-2)
nsubj(does-4, He-3)
rcmod(thing-2, does-4)
cop(better-7, is-5)
advmod(better-7, always-6)
root(ROOT-0, better-7)
det(thing-10, the-9)
prep_than(better-7, thing-10)
nsubj(does-12, He-11)
rcmod(thing-10, does-12)
neg(does-12, not-13)

(ROOT
  (S
    (S
      (S (`` ``)
        (VP (VB Lat)
          (SBAR
            (S
              (NP (PRP me))
              (VP (VBP think) (, ,)
                (NP
                  (NP (DT an))
                  ('' ')
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (MD 'll)
                        (VP (VB try)
                          (PP (TO to)
                            (NP (NN un) (`` `) (NN erstan) ('' '))))))))))))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (NNP Dawtie))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Andrew))
      (VP (VBD went)
        (PRT (RP on))))
    (. .)))

csubj(said-18, Lat-2)
nsubj(think-4, me-3)
ccomp(Lat-2, think-4)
dobj(think-4, an-6)
nsubj(try-10, I-8)
aux(try-10, 'll-9)
rcmod(an-6, try-10)
nn(erstan-14, un-12)
prep_to(try-10, erstan-14)
root(ROOT-0, said-18)
dobj(said-18, Dawtie-19)
nsubj(went-23, Andrew-22)
conj_but(said-18, went-23)
prt(went-23, on-24)

(ROOT
  (S
    (NP
      (NP (`` ``) (DT The) (JJS best) (NN thing))
      (, ,)
      (VP (VBN whan)
        (SBAR
          (S
            (NP (DT a) (NN body))
            (VP (VBZ 's)
              (ADJP (RB no) (JJ ready)
                (PP (IN for) (`` `)
                  (NP (NN t))))))))
      (, ,))
    (VP (MD would)
      (VP (VB be)
        (NP (DT the) (NN warst)
          (S
            (VP (TO to)
              (VP
                (VP (VB gie)
                  (NP (PRP him)))
                (: --)
                (CC or)
                (VP (VB ony)
                  (NP (NN gait))
                  (ADVP (RB no)
                    (NP (DT the) (NN thing))
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NNP Father) (NN o) (POS '))
                        (NNS lichts))
                      (PP (TO to)
                        (NP (NN gie))))))))))))
    (. .)))

det(thing-4, The-2)
amod(thing-4, best-3)
nsubj(warst-19, thing-4)
vmod(thing-4, whan-6)
det(body-8, a-7)
nsubj(ready-11, body-8)
cop(ready-11, 's-9)
neg(ready-11, no-10)
ccomp(whan-6, ready-11)
prep_for(ready-11, t-14)
aux(warst-19, would-16)
cop(warst-19, be-17)
det(warst-19, the-18)
root(ROOT-0, warst-19)
aux(gie-21, to-20)
vmod(warst-19, gie-21)
dobj(gie-21, him-22)
vmod(warst-19, ony-25)
conj_or(gie-21, ony-25)
dobj(ony-25, gait-26)
advmod(ony-25, no-27)
det(thing-29, the-28)
pobj(no-27, thing-29)
det(o-33, the-31)
nn(o-33, Father-32)
poss(lichts-35, o-33)
prep_for(no-27, lichts-35)
prep_to(no-27, gie-37)

(ROOT
  (S
    (NP (NNP Shortbreid))
    (VP (VBP micht)
      (VP (VB be)
        (NP
          (NP (NN waur))
          (PP (IN for)
            (NP
              (NP (DT a) (JJ half) (NN hungert) (NN bairn))
              (CC nor)
              (NP (DT a) (NN stane)))))))
    (. .)))

nsubj(micht-2, Shortbreid-1)
root(ROOT-0, micht-2)
cop(waur-4, be-3)
xcomp(micht-2, waur-4)
det(bairn-9, a-6)
amod(bairn-9, half-7)
nn(bairn-9, hungert-8)
prep_for(waur-4, bairn-9)
det(stane-12, a-11)
prep_for(waur-4, stane-12)
conj_nor(bairn-9, stane-12)

(ROOT
  (S (CC But)
    (S
      (NP
        (NP (DT the) (NN minute))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADJP (JJ fit)
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (MD should)
                      (VP (VB look)
                        (S
                          (NP (NNP upo) (POS ') (DT the) (NN face) (NNS o) ('' '))
                          (NP
                            (NP (DT the) (NNP Son) (NN o) (POS '))
                            (NN Man) (, ,) (NN oor) (NN ain) (JJ God-born) (NN brither))))))))))))
      (, ,)
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB see)
          (NP
            (NP (PRP him))
            (, ,)
            (NP (NNP Dawtie))))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB see)
          (NP (PRP him)))))
    (. .)))

cc(see-29, But-1)
det(minute-3, the-2)
nsubj(see-29, minute-3)
nsubj(fit-6, it-4)
cop(fit-6, 's-5)
rcmod(minute-3, fit-6)
nsubj(look-9, we-7)
aux(look-9, should-8)
ccomp(fit-6, look-9)
poss(o-14, upo-10)
det(o-14, the-12)
nn(o-14, face-13)
nsubj(brither-25, o-14)
det(o-18, the-16)
nn(o-18, Son-17)
poss(brither-25, o-18)
nn(brither-25, Man-20)
dep(brither-25, oor-22)
nn(brither-25, ain-23)
amod(brither-25, God-born-24)
xcomp(look-9, brither-25)
nsubj(see-29, we-27)
aux(see-29, 'll-28)
root(ROOT-0, see-29)
dobj(see-29, him-30)
appos(him-30, Dawtie-32)
nsubj(see-36, we-34)
aux(see-36, 'll-35)
parataxis(see-29, see-36)
dobj(see-36, him-37)

(ROOT
  (S
    (NP (NNP Hert) (NNP canna))
    (VP (VBP think)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (MD 'll)
            (VP (VB be)
              (ADJP (JJ like)))))))
    (. .)))

nn(canna-2, Hert-1)
nsubj(think-3, canna-2)
root(ROOT-0, think-3)
dobj(like-8, what-4)
nsubj(like-8, it-5)
aux(like-8, 'll-6)
cop(like-8, be-7)
ccomp(think-3, like-8)

(ROOT
  (S (CC And)
    (NP
      (NP (NN noo))
      (, ,)
      (NP (NNP Dawtie))
      (, ,))
    (VP (VBP wull)
      (S
        (NP (PRP ye))
        (VP
          (VP (VB tell)
            (NP (PRP me))
            (SBAR
              (WHNP (WP what))
              (S
                (PP (IN for)
                  (NP (JJ ye) (NN wouldna) (NN lat)))
                (NP (PRP me))
                (VP (VBP come)))))
          (CC and)
          (VP (VB see)
            (S
              (NP (PRP ye))
              (ADJP (JJ afore)))))))
    (. ?) ('' '')))

cc(wull-6, And-1)
nsubj(wull-6, noo-2)
appos(noo-2, Dawtie-4)
root(ROOT-0, wull-6)
nsubj(tell-8, ye-7)
nsubj(see-18, ye-7)
ccomp(wull-6, tell-8)
dobj(tell-8, me-9)
dobj(come-16, what-10)
amod(lat-14, ye-12)
nn(lat-14, wouldna-13)
prep_for(come-16, lat-14)
nsubj(come-16, me-15)
dep(tell-8, come-16)
ccomp(wull-6, see-18)
conj_and(tell-8, see-18)
nsubj(afore-20, ye-19)
xcomp(see-18, afore-20)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wull) (, ,)
      (NP
        (NP (DT An) (`` `) (NN rew))
        (: ;)
        (S
          (NP (PRP I))
          (VP (VBD was)
            (NP
              (NP (NN nae) (NN suner))
              (VP (VBN left)
                (S
                  (VP (TO to)
                    (VP (VB mysel) (`` ')
                      (NP (FW i))
                      ('' ')
                      (PP
                        (NP (DT the) (NN prison))
                        (IN than)
                        (NP
                          (NP
                            (NP
                              (NP (NNP I) (NNP faun) (POS '))
                              (NN mysel) (POS '))
                            (JJ thinkin) ('' ') (NN aboot) (NNS _))
                          (SBAR
                            (S
                              (NP (PRP you))
                              (VP (VBZ _))))))
                      (PRN (: --)
                        (S
                          (NP (PRP you))
                          (ADJP (JJ first))))))))
              (, ,)
              (CC and)
              (ADVP (RB no)
                (NP (DT the) (NN Lord))))))))
    (. .)))

nsubj(wull-3, I-2)
root(ROOT-0, wull-3)
det(rew-7, An-5)
dobj(wull-3, rew-7)
nsubj(suner-12, I-9)
cop(suner-12, was-10)
nn(suner-12, nae-11)
dep(rew-7, suner-12)
vmod(suner-12, left-13)
aux(mysel-15, to-14)
xcomp(left-13, mysel-15)
dobj(mysel-15, i-17)
det(prison-20, the-19)
npadvmod(mysel-15, prison-20)
nn(faun-23, I-22)
poss(mysel-25, faun-23)
poss(_-30, mysel-25)
amod(_-30, thinkin-27)
nn(_-30, aboot-29)
prep_than(mysel-15, _-30)
nsubj(_-32, you-31)
rcmod(_-30, _-32)
dep(first-35, you-34)
parataxis(mysel-15, first-35)
dep(rew-7, no-38)
advmod(suner-12, no-38)
conj_and(suner-12, no-38)
det(Lord-40, the-39)
pobj(no-38, Lord-40)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD said)
      (PP (TO to)
        (NP
          (NP (NN mysel) ('' '))
          (, ,) (`` `)
          (S
            (NP (DT This))
            (VP (VBZ is)
              (ADJP (JJ awfu))))
          ('' '))))
    (. .)))

nsubj(said-2, I-1)
root(ROOT-0, said-2)
prep_to(said-2, mysel-4)
nsubj(awfu-10, This-8)
cop(awfu-10, is-9)
dep(mysel-4, awfu-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (NP
        (NP
          (NP (NN leanin) (POS '))
          (NP
            (NP (NNP upo) (POS '))
            (NP (DT An) (`` `) (NN rew))))
        (, ,)
        (CC and)
        (NP
          (NP (DT no) (NN upo) (POS '))
          (NP
            (NP (DT the) (NNP First))
            (CC and)
            (NP (DT the) (JJ Last))))))
    (. .) ('' ')))

nsubj(leanin-3, I-1)
cop(leanin-3, 'm-2)
root(ROOT-0, leanin-3)
dep(leanin-3, upo-5)
det(rew-9, An-7)
dep(upo-5, rew-9)
neg(upo-13, no-12)
conj_and(leanin-3, upo-13)
det(First-16, the-15)
dep(upo-13, First-16)
det(Last-19, the-18)
dep(upo-13, Last-19)
conj_and(First-16, Last-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD saw)
      (SBAR (IN that)
        (S
          (NP (DT that))
          (VP (VBD was)
            (S
              (VP (TO to)
                (VP (VB brak)
                  (NP
                    (NP
                      (NP
                        (NP (NNP awa) (POS '))
                        (JJ frae) (NN Him))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD was)
                            (NP (JJS nearest)
                              (NX (FW me)))))))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (NN trust) (NN ane))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD was)
                            (ADVP (RB farther)))))))
                  (ADVP (RB awa))
                  ('' ') (: --)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP (NN wasna))
                      (VP (VBZ i) (`` ')
                        (NP
                          (NP (DT the) (JJ holy) (NN rizzon) (NN o) (POS '))
                          (NNS things))))))))))))
    (. .)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
mark(was-5, that-3)
nsubj(was-5, that-4)
nsubj(brak-7, that-4)
ccomp(saw-2, was-5)
aux(brak-7, to-6)
xcomp(was-5, brak-7)
poss(Him-11, awa-8)
amod(Him-11, frae-10)
dobj(brak-7, Him-11)
nsubj(me-15, Him-11)
cop(me-15, was-13)
amod(me-15, nearest-14)
rcmod(Him-11, me-15)
nn(ane-19, trust-18)
conj_and(Him-11, ane-19)
nsubj(was-21, ane-19)
rcmod(ane-19, was-21)
advmod(was-21, farther-22)
advmod(brak-7, awa-23)
dobj(i-28, which-26)
nsubj(i-28, wasna-27)
parataxis(brak-7, i-28)
det(o-33, the-30)
amod(o-33, holy-31)
nn(o-33, rizzon-32)
poss(things-35, o-33)
dobj(i-28, things-35)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Sae))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD said)
              (S
                (VP (TO to)
                  (VP (VB mysel) ('' ')
                    (NP (PRP I)))))))))
      (VP (MD would)
        (VP (VB meet)
          (NP
            (NP (PRP$ my) (NN fate) (NN wi) (POS '))
            (NAC (DT the) (NNP Lord))
            (NN alane)))))
    (, ,)
    (CC and)
    (S
      (NP (NN wouldna))
      (VP (VBP hae)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP come)
              (ADJP (`` `) (JJ atween))
              (S
                (NP (PRP Him)
                  (CC and)
                  (PRP me))))))))
    (. .)))

nsubj(meet-9, Sae-1)
nsubj(said-3, I-2)
nsubj(mysel-5, I-2)
rcmod(Sae-1, said-3)
aux(mysel-5, to-4)
xcomp(said-3, mysel-5)
dobj(mysel-5, I-7)
aux(meet-9, would-8)
root(ROOT-0, meet-9)
poss(wi-12, my-10)
nn(wi-12, fate-11)
poss(alane-16, wi-12)
det(Lord-15, the-14)
dep(alane-16, Lord-15)
dobj(meet-9, alane-16)
nsubj(hae-20, wouldna-19)
conj_and(meet-9, hae-20)
nsubj(come-22, you-21)
ccomp(hae-20, come-22)
acomp(come-22, atween-24)
dep(come-22, Him-25)
dep(come-22, me-27)
conj_and(Him-25, me-27)

(ROOT
  (S
    (NP (NNP Noo) (NNP ye))
    (VP (VBP hae)
      (NP (`` `)
        (NP (NN t))
        (, ,)
        (NP (DT An) (`` `) (NN rew))))
    (. .) ('' '')))

nn(ye-2, Noo-1)
nsubj(hae-3, ye-2)
root(ROOT-0, hae-3)
dobj(hae-3, t-5)
det(rew-9, An-7)
appos(t-5, rew-9)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP
      (VP (VBD took)
        (NP (PRP her))
        (PP (IN in)
          (NP (PRP$ his) (NNS arms))))
      (CC and)
      (VP (VBD said) (: :) (`` ``)
        (S
          (VP (VB Thank)
            (NP (PRP ye))
            (, ,) (VB Dawtie)))))
    (. .)))

nsubj(took-2, Andrew-1)
nsubj(said-8, Andrew-1)
root(ROOT-0, took-2)
dobj(took-2, her-3)
poss(arms-6, his-5)
prep_in(took-2, arms-6)
conj_and(took-2, said-8)
ccomp(said-8, Thank-11)
dobj(Thank-11, ye-12)
dep(Thank-11, Dawtie-14)

(ROOT
  (S
    (ADVP (RB Eh))
    (, ,)
    (S (CC but)
      (NP (PRP I))
      (ADVP (RB _))
      (VP (VBP am)
        (ADJP (RB _) (JJ content))))
    (CC And)
    (S
      (NP (PRP she))
      (VP (VBD thought)
        (S
          (NP (PRP she))
          (NP (NN hadna) (NN faith)))))
    (. .)))

advmod(content-8, Eh-1)
nsubj(content-8, I-4)
advmod(content-8, _-5)
cop(content-8, am-6)
advmod(content-8, _-7)
root(ROOT-0, content-8)
nsubj(thought-11, she-10)
conj_and(content-8, thought-11)
nsubj(faith-14, she-12)
nn(faith-14, hadna-13)
xcomp(thought-11, faith-14)

(ROOT
  (NP
    (NP (NN Good-night))
    (, ,)
    (NP (NNP Dawtie))
    (. .)))

root(ROOT-0, Good-night-1)
appos(Good-night-1, Dawtie-3)

(ROOT
  (S
    (S
      (NP (PRP Ye))
      (VP (VBP maun)
        (ADJP (JJ gane)
          (S
            (VP (TO to)
              (VP (VB yer)
                (NP (NN bed))))))))
    (, ,)
    (S
      (NP (DT an))
      ('' ')
      (VP (VB grow)
        (NP (NN stoot))
        (PP (IN in)
          (NP
            (NP (NN hert))
            (PP (IN for)
              (NP (DT the) (NN morn)))))))
    (. .) ('' '')))

nsubj(maun-2, Ye-1)
root(ROOT-0, maun-2)
acomp(maun-2, gane-3)
aux(yer-5, to-4)
xcomp(gane-3, yer-5)
dobj(yer-5, bed-6)
nsubj(grow-10, an-8)
parataxis(maun-2, grow-10)
dobj(grow-10, stoot-11)
prep_in(grow-10, hert-13)
det(morn-16, the-15)
prep_for(hert-13, morn-16)

(ROOT
  (NP (NNP CHAPTER) (NNP XXXV) (. .)))

nn(XXXV-2, CHAPTER-1)
root(ROOT-0, XXXV-2)

(ROOT
  (S
    (NP (NNP AFTER) (NNP THE))
    (VP (VBP VERDICT))
    (. .)))

nn(THE-2, AFTER-1)
nsubj(VERDICT-3, THE-2)
root(ROOT-0, VERDICT-3)

(ROOT
  (S
    (PP (IN Through)
      (NP
        (NP (DT the) (NN governor))
        (PP (IN of)
          (NP (DT the) (NN jail)))))
    (NP (NNP Andrew))
    (VP (VBD obtained)
      (NP (NN permission))
      (S
        (VP (TO to)
          (VP (VB stand)
            (PP (IN near)
              (NP
                (NP (DT the) (NN prisoner))
                (PP (IN at)
                  (NP (DT the) (NN trial)))))))))
    (. .)))

det(governor-3, the-2)
prep_through(obtained-8, governor-3)
det(jail-6, the-5)
prep_of(governor-3, jail-6)
nsubj(obtained-8, Andrew-7)
root(ROOT-0, obtained-8)
dobj(obtained-8, permission-9)
aux(stand-11, to-10)
vmod(obtained-8, stand-11)
det(prisoner-14, the-13)
prep_near(stand-11, prisoner-14)
det(trial-17, the-16)
prep_at(prisoner-14, trial-17)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN counsel))
        (PP (IN for)
          (NP (DT the) (NN prosecution))))
      (VP (VBD did)
        (SBAR
          (S
            (S (RB all)
              (NP (PRP he))
              (VP (MD could)))
            (, ,)
            (CC and)
            (S
              (NP
                (NP (DT the) (NN counsel))
                (PP (IN for)
                  (NP (DT the) (NN defense))))
              (ADJP (RB not) (JJ much)))))))
    (: --)
    (S
      (ADVP (IN at) (JJS least))
      (NP
        (NP (NNP Dawtie) (POS 's))
        (NNS friends))
      (VP (VBD thought)
        (ADVP (RB so))))
    (: --)
    (CC and)
    (S
      (NP (DT the) (NN judge))
      (VP (VBD summed)
        (PRT (RP up))
        (PP (IN with)
          (NP (DT the) (JJS greatest) (NN impartiality)))))
    (. .)))

det(counsel-2, The-1)
nsubj(did-6, counsel-2)
det(prosecution-5, the-4)
prep_for(counsel-2, prosecution-5)
root(ROOT-0, did-6)
advmod(could-9, all-7)
nsubj(could-9, he-8)
nsubj(much-18, he-8)
dep(did-6, could-9)
det(counsel-13, the-12)
dep(much-18, counsel-13)
det(defense-16, the-15)
prep_for(counsel-13, defense-16)
neg(much-18, not-17)
dep(did-6, much-18)
conj_and(could-9, much-18)
advmod(thought-25, at-20)
pobj(at-20, least-21)
poss(friends-24, Dawtie-22)
nsubj(thought-25, friends-24)
conj_and(did-6, thought-25)
advmod(thought-25, so-26)
det(judge-30, the-29)
nsubj(summed-31, judge-30)
conj_and(did-6, summed-31)
prt(summed-31, up-32)
det(impartiality-36, the-34)
amod(impartiality-36, greatest-35)
prep_with(summed-31, impartiality-36)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (NNP Dawtie) (POS 's))
          (NN simplicity)
          (CC and)
          (NN calmness))
        (, ,)
        (NP
          (NP (PRP$ her) (NN confidence) (NN devoid))
          (PP (IN of)
            (NP (NN self-assertion))))
        (, ,))
      (VP (VBD had)
        (NP
          (NP (PRP$ its) (NN influence))
          (PP (IN on)
            (NP (DT the) (NN jury))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD gave)
        (S
          (NP
            (NP (DT the) (JJ uncomfortable) (NN verdict))
            (PP (IN of) ('' '')
              (NP (CD _) (RB Not) (NNP Proven))))
          (ADJP (JJ _)))
        (, ,) ('' '')
        (SBAR (RB so) (IN that)
          (S
            (NP (NNP Dawtie))
            (VP (VBD was)
              (VP (VBN discharged)))))))
    (. .)))

poss(simplicity-3, Dawtie-1)
nsubj(had-13, simplicity-3)
conj_and(simplicity-3, calmness-5)
nsubj(had-13, calmness-5)
poss(devoid-9, her-7)
nn(devoid-9, confidence-8)
appos(simplicity-3, devoid-9)
prep_of(devoid-9, self-assertion-11)
root(ROOT-0, had-13)
poss(influence-15, its-14)
dobj(had-13, influence-15)
det(jury-18, the-17)
prep_on(influence-15, jury-18)
nsubj(gave-22, they-21)
conj_and(had-13, gave-22)
det(verdict-25, the-23)
amod(verdict-25, uncomfortable-24)
nsubj(_-31, verdict-25)
num(Proven-30, _-28)
neg(Proven-30, Not-29)
prep_of(verdict-25, Proven-30)
xcomp(gave-22, _-31)
advmod(discharged-38, so-34)
mark(discharged-38, that-35)
nsubjpass(discharged-38, Dawtie-36)
auxpass(discharged-38, was-37)
advcl(gave-22, discharged-38)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD had)
      (S
        (NP (DT a) (NN carriage))
        (ADJP (JJ ready)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (PRP$ her) (NN home))))))))
    (. .)))

nsubj(had-2, Alexa-1)
root(ROOT-0, had-2)
det(carriage-4, a-3)
nsubj(ready-5, carriage-4)
nsubj(take-7, carriage-4)
xcomp(had-2, ready-5)
aux(take-7, to-6)
xcomp(ready-5, take-7)
poss(home-9, her-8)
dobj(take-7, home-9)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (NNP Dawtie))
        (VP (VBD went)
          (PP (TO to)
            (NP (PRP it)))
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBN whispered)
                (PP (TO to)
                  (NP (PRP$ her) (NN husband)))))))))
    (: :) (`` ``)
    (NP (PRP Ye))
    (VP (VBP hae)
      (S
        (VP (TO to)
          (VP (VB tak)
            (S
              (NP (PRP me))
              (NP
                (NP (NN wantin) (POS '))
                (NP
                  (NP (DT a) (NN character))
                  (, ,)
                  (NP (NNP Andrew)))))))))
    (. .) ('' '')))

mark(went-3, As-1)
nsubj(went-3, Dawtie-2)
advcl(hae-14, went-3)
prep_to(went-3, it-5)
nsubj(whispered-7, she-6)
ccomp(went-3, whispered-7)
poss(husband-10, her-9)
prep_to(whispered-7, husband-10)
nsubj(hae-14, Ye-13)
nsubj(tak-16, Ye-13)
root(ROOT-0, hae-14)
aux(tak-16, to-15)
xcomp(hae-14, tak-16)
nsubj(wantin-18, me-17)
xcomp(tak-16, wantin-18)
det(character-21, a-20)
dep(wantin-18, character-21)
appos(character-21, Andrew-23)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP Jesus))
      (VP
        (VP (VBD went)
          (NP (NN home))
          (PP (IN without)
            (NP (DT a) (NN character))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (VP
            (ADVP (RB well))
            (VBN received)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Andrew))
      (, ,)
      (PP (IN with)
        (NP (DT a) (NN smile))))
    (. .)))

nsubj(went-3, Jesus-2)
nsubjpass(received-12, Jesus-2)
ccomp(said-15, went-3)
dobj(went-3, home-4)
det(character-7, a-6)
prep_without(went-3, character-7)
auxpass(received-12, was-10)
advmod(received-12, well-11)
conj_and(went-3, received-12)
ccomp(said-15, received-12)
root(ROOT-0, said-15)
nsubj(said-15, Andrew-16)
det(smile-20, a-19)
prep_with(Andrew-16, smile-20)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD 'll)
      (VP (VB be)
        (ADJP (IN over) (JJ to-night))
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (DT the) (JJ old) (NN folk)))))))
    (. ?) ('' '')))

nsubj(to-night-6, You-2)
nsubj(see-8, You-2)
aux(to-night-6, 'll-3)
cop(to-night-6, be-4)
dep(to-night-6, over-5)
root(ROOT-0, to-night-6)
aux(see-8, to-7)
xcomp(to-night-6, see-8)
det(folk-11, the-9)
amod(folk-11, old-10)
dobj(see-8, folk-11)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes))
      (, ,)
      (NP (NNP Andrew)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (DT the) (NN mistress))
              (VP (MD will)
                (VP (VB let)
                  (NP (PRP me)))))))))
    (. .) ('' '')))

discourse(Andrew-4, Yes-2)
dep(sure-8, Andrew-4)
nsubj(sure-8, I-6)
cop(sure-8, 'm-7)
root(ROOT-0, sure-8)
det(mistress-10, the-9)
nsubj(let-12, mistress-10)
aux(let-12, will-11)
ccomp(sure-8, let-12)
dobj(let-12, me-13)

(ROOT
  (S (`` ``)
    (VP (VB Do) (RB n't)
      (VP (VB say)
        (NP (DT a) (NN word))
        (PP (TO to)
          (NP
            (NP (PRP her))
            (PP (IN of)
              (NP (PRP$ our) (NN marriage)))))
        (, ,)
        (SBAR (IN except)
          (S
            (NP (PRP she))
            (VP
              (VP (VBZ has)
                (VP (VBN heard)))
              (, ,)
              (CC and)
              (VP (VBZ mentions)
                (NP (PRP it))))))))
    (. .)))

aux(say-4, Do-2)
neg(say-4, n't-3)
root(ROOT-0, say-4)
det(word-6, a-5)
dobj(say-4, word-6)
prep_to(say-4, her-8)
poss(marriage-11, our-10)
prep_of(her-8, marriage-11)
mark(heard-16, except-13)
nsubj(heard-16, she-14)
nsubj(mentions-19, she-14)
aux(heard-16, has-15)
advcl(say-4, heard-16)
advcl(say-4, mentions-19)
conj_and(heard-16, mentions-19)
dobj(mentions-19, it-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB tell)
            (NP (PRP her))
            (NP (PRP myself))))))
    (. .)))

nsubj(want-2, I-1)
nsubj(tell-4, I-1)
root(ROOT-0, want-2)
aux(tell-4, to-3)
xcomp(want-2, tell-4)
iobj(tell-4, her-5)
dobj(tell-4, myself-6)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD will)
        (VP (VB find)
          (NP (PRP me))
          (PP (IN at)
            (NP (DT the) (NN croft)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP you))
              (VP (VBP come)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB go)
          (PRT (RP back))
          (PP (IN with)
            (NP (PRP you))))))
    (. .) ('' '')))

nsubj(find-3, You-1)
aux(find-3, will-2)
root(ROOT-0, find-3)
dobj(find-3, me-4)
det(croft-7, the-6)
prep_at(find-3, croft-7)
advmod(come-10, when-8)
nsubj(come-10, you-9)
advcl(find-3, come-10)
nsubj(go-15, I-13)
aux(go-15, will-14)
conj_and(find-3, go-15)
prt(go-15, back-16)
prep_with(go-15, you-18)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN evening)))
    (NP (NNP Dawtie))
    (VP
      (VP (VBD came))
      (, ,)
      (CC and)
      (VP (VBD brought)
        (NP (DT the) (NN message))
        (SBAR (IN that)
          (S
            (NP (PRP$ her) (NN mistress))
            (VP (MD would)
              (VP (VB like)
                (S
                  (VP (TO to)
                    (VP (VB see)
                      (NP (PRP him)))))))))))
    (. .)))

det(evening-3, the-2)
prep_in(came-5, evening-3)
nsubj(came-5, Dawtie-4)
nsubj(brought-8, Dawtie-4)
root(ROOT-0, came-5)
conj_and(came-5, brought-8)
det(message-10, the-9)
dobj(brought-8, message-10)
mark(like-15, that-11)
poss(mistress-13, her-12)
nsubj(like-15, mistress-13)
nsubj(see-17, mistress-13)
aux(like-15, would-14)
ccomp(brought-8, like-15)
aux(see-17, to-16)
xcomp(like-15, see-17)
dobj(see-17, him-18)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD entered)
          (NP (DT the) (NN room)))))
    (NP (NNP Alexa))
    (VP (VBD rose)
      (S
        (VP (TO to)
          (VP (VB meet)
            (NP (PRP him))))))
    (. .)))

advmod(entered-3, When-1)
nsubj(entered-3, he-2)
advcl(rose-7, entered-3)
det(room-5, the-4)
dobj(entered-3, room-5)
nsubj(rose-7, Alexa-6)
nsubj(meet-9, Alexa-6)
root(ROOT-0, rose-7)
aux(meet-9, to-8)
xcomp(rose-7, meet-9)
dobj(meet-9, him-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD stopped)
      (ADJP (JJ short)))
    (. .)))

nsubj(stopped-2, He-1)
root(ROOT-0, stopped-2)
acomp(stopped-2, short-3)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP thank)
        (NP (PRP you))))
    (, ,)
    (VP (VBP ma'am)
      (PRN (, ,) ('' '')
        (S
          (NP (PRP he))
          (VP (VBD said)))
        (, ,) (`` ``))
      (PP (IN for)
        (NP (PRP$ your) (JJ great) (NN kindness)))
      (PP (TO to)
        (NP (NNP Dawtie))))
    (. .)))

nsubj(thank-3, I-2)
ccomp(ma'am-6, thank-3)
dobj(thank-3, you-4)
root(ROOT-0, ma'am-6)
nsubj(said-10, he-9)
parataxis(ma'am-6, said-10)
poss(kindness-16, your-14)
amod(kindness-16, great-15)
prep_for(ma'am-6, kindness-16)
prep_to(ma'am-6, Dawtie-18)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD were)
      (VP (VBN married)
        (PP (IN in)
          (NP (DT the) (NN prison)))))
    (. .)))

nsubjpass(married-3, We-1)
auxpass(married-3, were-2)
root(ROOT-0, married-3)
det(prison-6, the-5)
prep_in(married-3, prison-6)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ is)
      (NP (PRP$ my) (NN wife))
      (ADVP (RB now)))
    (. .) ('' '')))

nsubj(wife-4, She-1)
cop(wife-4, is-2)
poss(wife-4, my-3)
root(ROOT-0, wife-4)
advmod(wife-4, now-5)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Married))
    (. !)))

root(ROOT-0, Married-2)

(ROOT
  (SQ (MD Your)
    (NP (NN wife))
    (. ?) ('' '')))

root(ROOT-0, Your-1)
dep(Your-1, wife-2)

(ROOT
  (NP
    (NP (NNP echoed) (NNP Alexa))
    (, ,)
    (S
      (S
        (VP (VBG flushing)))
      (, ,)
      (CC and)
      (S
        (VP (VBG drawing)
          (PRT (RP back))
          (NP (DT a) (NN step)))))
    (. .)))

nn(Alexa-2, echoed-1)
root(ROOT-0, Alexa-2)
dep(Alexa-2, flushing-4)
dep(Alexa-2, drawing-7)
conj_and(flushing-4, drawing-7)
prt(drawing-7, back-8)
det(step-10, a-9)
dobj(drawing-7, step-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (VP (VBN loved)
          (NP (PRP$ her) (JJ long) (, ,) (NN ma'am)))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NN trouble))
          (VP (VBD came)
            (NP (PRP her)))))
      (NP (DT the) (NN time))
      (VP (VBD came)
        (SBAR (IN for)
          (S
            (NP (PRP me))
            (VP (TO to)
              (VP (VB stand)
                (PP (IN by)
                  (NP (PRP$ her) (NN side)))))))))
    (. .) ('' '')))

nsubj(loved-4, I-2)
aux(loved-4, had-3)
root(ROOT-0, loved-4)
poss(ma'am-8, her-5)
amod(ma'am-8, long-6)
dobj(loved-4, ma'am-8)
advmod(came-13, when-11)
nsubj(came-13, trouble-12)
advcl(came-17, came-13)
dobj(came-13, her-14)
det(time-16, the-15)
nsubj(came-17, time-16)
conj_and(loved-4, came-17)
mark(stand-21, for-18)
nsubj(stand-21, me-19)
aux(stand-21, to-20)
advcl(came-17, stand-21)
xcomp(came-17, stand-21)
poss(side-24, her-23)
prep_by(stand-21, side-24)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBD had) (RB not)
      (VP (VBN spoken)
        (PP (TO to)
          (NP (PRP her)))
        (ADVP
          (ADVP (RB then))
          (PRN (: --)
            (PP (IN till))
            (: --)))
        ('' '')
        (PP (`` ``) (RB Not) (IN till)
          (NP (JJ last) (NN night)))))
    (. .)))

nsubj(spoken-5, You-2)
aux(spoken-5, had-3)
neg(spoken-5, not-4)
root(ROOT-0, spoken-5)
prep_to(spoken-5, her-7)
advmod(spoken-5, then-8)
dep(then-8, till-10)
neg(spoken-5, Not-14)
amod(night-17, last-16)
prep_till(spoken-5, night-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD said)
      (PP (IN before)
        (NP
          (NP (DT the) (NN governor))
          (PP (IN of)
            (NP
              (NP (DT the) (NN prison))
              (CC and)
              (NP (NNP Mrs.) (NNP Innes))))))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBD were)
            (NP (NN husband)
              (CC and)
              (NN wife))))))
    (. .)))

nsubj(said-2, I-1)
root(ROOT-0, said-2)
det(governor-5, the-4)
prep_before(said-2, governor-5)
det(prison-8, the-7)
prep_of(governor-5, prison-8)
nn(Innes-11, Mrs.-10)
prep_of(governor-5, Innes-11)
conj_and(prison-8, Innes-11)
mark(husband-15, that-12)
nsubj(husband-15, we-13)
cop(husband-15, were-14)
ccomp(said-2, husband-15)
ccomp(said-2, wife-17)
conj_and(husband-15, wife-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP please))))
    (, ,)
    (ADVP (RB ma'am))
    (, ,)
    (NP (PRP we))
    (VP (MD shall)
      (VP (VB have)
        (NP (DT the) (JJ proper) (NN ceremony))
        (ADVP
          (ADVP (RB as) (RB soon))
          (PP (IN as)
            (ADJP (JJ possible))))))
    (. .) ('' '')))

mark(please-3, If-1)
nsubj(please-3, you-2)
advcl(have-9, please-3)
advmod(have-9, ma'am-5)
nsubj(have-9, we-7)
aux(have-9, shall-8)
root(ROOT-0, have-9)
det(ceremony-12, the-10)
amod(ceremony-12, proper-11)
dobj(have-9, ceremony-12)
advmod(soon-14, as-13)
advmod(have-9, soon-14)
prep_as(soon-14, possible-16)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP wish)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD had)
              (VP (VBN known)))))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP Alexa))
        (: --)
        (ADVP (RB almost)
          (PP (TO to)
            (NP (PRP herself)))))
      (, ,)
      (PP (IN with)
        (NP (DT a) (VBN troubled) (NN smile))))
    (. .)))

nsubj(wish-3, I-2)
ccomp(said-9, wish-3)
nsubj(known-6, I-4)
aux(known-6, had-5)
ccomp(wish-3, known-6)
root(ROOT-0, said-9)
dobj(said-9, Alexa-10)
advmod(Alexa-10, almost-12)
prep_to(almost-12, herself-14)
det(smile-19, a-17)
amod(smile-19, troubled-18)
prep_with(said-9, smile-19)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP wish)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD had))))
        (, ,)
        (ADVP (RB ma'am))))
    (, ,) ('' '')
    (VP (VBD responded))
    (NP (NNP Andrew))
    (. .)))

nsubj(wish-3, I-2)
ccomp(responded-10, wish-3)
nsubj(had-5, you-4)
ccomp(wish-3, had-5)
advmod(wish-3, ma'am-7)
root(ROOT-0, responded-10)
nsubj(responded-10, Andrew-11)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD raised)
      (NP (PRP$ her) (NN face))
      (PP (IN with)
        (NP
          (NP (DT a) (NN look))
          (PP (IN of)
            (NP (NN confidence))))))
    (. .)))

nsubj(raised-2, She-1)
root(ROOT-0, raised-2)
poss(face-4, her-3)
dobj(raised-2, face-4)
det(look-7, a-6)
prep_with(raised-2, look-7)
prep_of(look-7, confidence-9)

(ROOT
  (S (`` ``)
    (NP (NNP Will))
    (PRN
      (S
        (NP (PRP you))
        (VP (VBP please)
          (S
            (VP (TO to)
              (VP (VB forget))))))
      (, ,))
    (VP (VBZ Andrew))
    (. ?) ('' '')))

nsubj(Andrew-8, Will-2)
nsubj(please-4, you-3)
nsubj(forget-6, you-3)
parataxis(Andrew-8, please-4)
aux(forget-6, to-5)
xcomp(please-4, forget-6)
root(ROOT-0, Andrew-8)

(ROOT
  (S
    (NP (NNP Nobility))
    (VP (VBD had)
      (VP (VBN carried)
        (NP (DT the) (NN day))))
    (. .)))

nsubj(carried-3, Nobility-1)
aux(carried-3, had-2)
root(ROOT-0, carried-3)
det(day-5, the-4)
tmod(carried-3, day-5)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (ADVP (RB not)
        (NP (CD one) (NN mean)))
      (VP (VBN thought)
        (ADVP (RB either))
        (PP (IN of)
          (NP
            (NP (PRP him))
            (CC or)
            (NP (DT the) (NN girl))))))
    (. .)))

nsubj(thought-6, She-1)
aux(thought-6, had-2)
neg(thought-6, not-3)
num(mean-5, one-4)
dep(not-3, mean-5)
root(ROOT-0, thought-6)
advmod(thought-6, either-7)
prep_of(thought-6, him-9)
det(girl-12, the-11)
prep_of(thought-6, girl-12)
conj_or(him-9, girl-12)

(ROOT
  (S (`` ``)
    (S
      (S
        (VP (TO To)
          (VP (VB forget))))
      (VP (VBZ is) (RB not)
        (PP (IN in)
          (NP
            (NP
              (NP (NN man) (POS 's))
              (NN power))
            (, ,)
            (NP (NN ma'am))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD shall)
        (ADVP (RB never))
        (VP (VB think)
          (NP
            (NP (DT a) (NN thought))
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD would)
                  (VP (VB wish)
                    (NP (NN unthought))))))))))
    (. .) ('' '')))

aux(forget-3, To-2)
csubj(is-4, forget-3)
root(ROOT-0, is-4)
neg(is-4, not-5)
poss(power-9, man-7)
prep_in(is-4, power-9)
appos(power-9, ma'am-11)
nsubj(think-17, I-14)
aux(think-17, shall-15)
neg(think-17, never-16)
conj_but(is-4, think-17)
det(thought-19, a-18)
dobj(think-17, thought-19)
nsubj(wish-22, you-20)
aux(wish-22, would-21)
rcmod(thought-19, wish-22)
dobj(wish-22, unthought-23)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD held)
      (PRT (RP out))
      (NP (PRP$ her) (NN hand))
      (PP (TO to)
        (NP (PRP him))))
    (. .)))

nsubj(held-2, She-1)
root(ROOT-0, held-2)
prt(held-2, out-3)
poss(hand-5, her-4)
dobj(held-2, hand-5)
prep_to(held-2, him-7)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (NP (NNS friends))
      (ADVP (RB forever)))
    (. .)))

nsubj(friends-3, They-1)
cop(friends-3, were-2)
root(ROOT-0, friends-3)
advmod(friends-3, forever-4)

(ROOT
  (S
    (VP (`` ``) (VB Will)
      (S
        (NP (PRP you))
        (VP (VB be)
          (VP (VBN married)
            (ADVP (RB here))))))
    (, ,)
    (NP (NNP Andrew))
    (. ?)))

root(ROOT-0, Will-2)
nsubjpass(married-5, you-3)
auxpass(married-5, be-4)
ccomp(Will-2, married-5)
advmod(married-5, here-6)
dep(Will-2, Andrew-8)

(ROOT
  (S
    (S
      (NP (DT The) (NN house))
      (VP (VBZ is)
        (PP (IN at)
          (NP (PRP$ your) (NN service)))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

det(house-2, The-1)
nsubj(is-3, house-2)
ccomp(said-10, is-3)
poss(service-6, your-5)
prep_at(is-3, service-6)
nsubj(said-10, she-9)
root(ROOT-0, said-10)

(ROOT
  (S (`` ``)
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD ought)
            (S
              (VP (TO to)
                (VP (VB be)
                  (PP (IN at)
                    (NP
                      (NP (PRP$ her) (NN father) (POS 's))
                      (, ,)
                      (NP (NN ma'am)))))))))))
    (. ?) ('' '')))

nsubj(think-5, Do-2)
neg(think-5, n't-3)
nsubj(think-5, you-4)
root(ROOT-0, think-5)
nsubj(ought-7, it-6)
nsubj(be-9, it-6)
ccomp(think-5, ought-7)
aux(be-9, to-8)
xcomp(ought-7, be-9)
poss(father-12, her-11)
prep_at(be-9, father-12)
possessive(father-12, 's-13)
appos(father-12, ma'am-15)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP are)
        (ADJP (JJ right))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP (NNP Alexa)))
    (: ;)
    (S (CC and)
      (S
        (NP (PRP she))
        (VP (VBD sat)
          (PRT (RP down)))))
    (. .)))

nsubj(right-4, You-2)
cop(right-4, are-3)
ccomp(said-7, right-4)
root(ROOT-0, said-7)
dobj(said-7, Alexa-8)
cc(sat-12, and-10)
nsubj(sat-12, she-11)
parataxis(said-7, sat-12)
prt(sat-12, down-13)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD stood)
      (PP (IN in)
        (NP (NN silence)))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD saw)
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBD was)
                  (VP (VBG meditating)
                    (NP (NN something))))))))))
    (. .)))

nsubj(stood-2, Andrew-1)
root(ROOT-0, stood-2)
prep_in(stood-2, silence-4)
mark(saw-8, for-6)
nsubj(saw-8, he-7)
advcl(stood-2, saw-8)
nsubj(meditating-11, she-9)
aux(meditating-11, was-10)
ccomp(saw-8, meditating-11)
dobj(meditating-11, something-12)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (NP (PRP she))
    (VP
      (VP (VBD raised)
        (NP (PRP$ her) (NN head)))
      (, ,)
      (CC and)
      (VP (VBD spoke)))
    (. .)))

prep_at(raised-4, length-2)
nsubj(raised-4, she-3)
nsubj(spoke-9, she-3)
root(ROOT-0, raised-4)
poss(head-6, her-5)
dobj(raised-4, head-6)
conj_and(raised-4, spoke-9)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBN compelled)
          (S
            (VP (TO to)
              (VP
                (VP (VB take)
                  (NP (DT the) (NN step))
                  (ADVP
                    (ADVP (RBR sooner))
                    (SBAR (IN than)
                      (S
                        (NP (PRP you))
                        (VP (VBD intended))))))
                (: --)
                (VP (VB have)
                  (NP (PRP you))
                  (ADVP (RB not)))))))))
    (. ?) ('' '')))

nsubjpass(compelled-5, You-2)
nsubj(take-7, You-2)
aux(compelled-5, have-3)
auxpass(compelled-5, been-4)
root(ROOT-0, compelled-5)
aux(take-7, to-6)
xcomp(compelled-5, take-7)
det(step-9, the-8)
dobj(take-7, step-9)
advmod(take-7, sooner-10)
mark(intended-13, than-11)
nsubj(intended-13, you-12)
advcl(sooner-10, intended-13)
dep(take-7, have-15)
dobj(have-15, you-16)
neg(have-15, not-17)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Yes))
    (, ,)
    (NP (NN ma'am))
    (. .) ('' '')))

discourse(ma'am-4, Yes-2)
root(ROOT-0, ma'am-4)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (MD can)
      (ADVP (RB hardly))
      (VP (VB be)
        (VP
          (ADVP (RB so) (RB well))
          (VBN prepared)
          (SBAR (IN as)
            (S
              (NP (PRP you))
              (VP (MD would)
                (VP (VB like)
                  (S
                    (VP (TO to)
                      (VP (VB be)))))))))))
    (. !) ('' '')))

advmod(prepared-9, Then-2)
nsubjpass(prepared-9, you-3)
aux(prepared-9, can-4)
advmod(prepared-9, hardly-5)
auxpass(prepared-9, be-6)
advmod(well-8, so-7)
advmod(prepared-9, well-8)
root(ROOT-0, prepared-9)
mark(like-13, as-10)
nsubj(like-13, you-11)
nsubj(be-15, you-11)
aux(like-13, would-12)
advcl(prepared-9, like-13)
aux(be-15, to-14)
xcomp(like-13, be-15)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD shall)
      (VP (VB manage)))
    (. .) ('' '')))

nsubj(manage-4, We-2)
aux(manage-4, shall-3)
root(ROOT-0, manage-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (MD will)
        (ADVP (RB hardly))
        (VP (VB be)
          (ADJP (JJ convenient)
            (PP (IN for)
              (NP (PRP$ your) (NN mother)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP fear))
    (. !)))

nsubj(convenient-6, It-2)
aux(convenient-6, will-3)
advmod(convenient-6, hardly-4)
cop(convenient-6, be-5)
ccomp(fear-12, convenient-6)
poss(mother-9, your-8)
prep_for(convenient-6, mother-9)
nsubj(fear-12, I-11)
root(ROOT-0, fear-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (ADVP (RB nowhere) (RB else))
      (S
        (VP (TO to)
          (VP
            (VP (VB take)
              (NP (PRP her)))
            (: --)
            (VP (VB have)
              (NP (PRP you)))))))
    (. ?) ('' '')))

nsubj(have-2, You-1)
nsubj(take-6, You-1)
root(ROOT-0, have-2)
advmod(else-4, nowhere-3)
advmod(have-2, else-4)
aux(take-6, to-5)
xcomp(have-2, take-6)
dobj(take-6, her-7)
dep(take-6, have-9)
dobj(have-9, you-10)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No))
      (, ,)
      (NP (NN ma'am)))
    (: ;)
    (S (CC but)
      (NP (PRP$ my) (NN mother))
      (VP (VBZ loves)
        (S
          (NP (PRP us))
          (NP (DT both)))))
    (. .)))

discourse(ma'am-4, No-2)
dep(loves-9, ma'am-4)
cc(loves-9, but-6)
poss(mother-8, my-7)
nsubj(loves-9, mother-8)
root(ROOT-0, loves-9)
nsubj(both-11, us-10)
xcomp(loves-9, both-11)

(ROOT
  (S (CC And)
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD added) (, ,)
          (ADVP (RB simply))))
      (, ,) (`` ``))
    (SBAR
      (WHADVP (WRB where))
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP
            (NP (NN room))
            (PP (IN for)
              (NP (PRP me)))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (NN room))
        (PP (IN for)
          (NP (PRP her))))
      (ADVP (RB now)))
    (. !) ('' '')))

cc('s-18, And-1)
nsubj(added-5, he-4)
parataxis('s-18, added-5)
advmod(added-5, simply-7)
advmod('s-12, where-10)
expl('s-12, there-11)
advcl('s-18, 's-12)
nsubj('s-12, room-13)
prep_for(room-13, me-15)
expl('s-18, there-17)
root(ROOT-0, 's-18)
nsubj('s-18, room-19)
prep_for(room-19, her-21)
advmod('s-18, now-22)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Would))
    (SQ
      (NP (PRP you))
      (VP (VB mind)
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBD asked)
              (NP (PRP you))
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (PRP$ your) (NNS parents))
                  (VP (VBP take)
                    (NP (PRP it))))))))))
    (. ?) ('' '')))

advmod(mind-4, Would-2)
nsubj(mind-4, you-3)
root(ROOT-0, mind-4)
mark(asked-7, if-5)
nsubj(asked-7, I-6)
advcl(mind-4, asked-7)
dobj(asked-7, you-8)
advmod(take-12, how-9)
poss(parents-11, your-10)
nsubj(take-12, parents-11)
dep(asked-7, take-12)
dobj(take-12, it-13)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (VBP do) (RB n't)
      (VP (VB say)
        (NP (RB much))))
    (. .)))

nsubj(say-5, They-2)
aux(say-5, do-3)
neg(say-5, n't-4)
root(ROOT-0, say-5)
dobj(say-5, much-6)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see) (, ,) (VBP ma'am) (, ,)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP are) (RB all)
              (ADJP (JJ proud))
              (SBAR (IN until)
                (S
                  (NP (PRP we))
                  (VP (VBP learn)
                    (SBAR (IN that)
                      (S
                        (NP (PRP we))
                        (VP (VBP have)
                          (NP (CD one) (NN Master)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (ADVP (DT all))
      (VP (VBP are)
        (NP (NNS brethren))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
dep(see-2, ma'am-4)
nsubj(proud-9, we-6)
cop(proud-9, are-7)
advmod(proud-9, all-8)
ccomp(see-2, proud-9)
mark(learn-12, until-10)
nsubj(learn-12, we-11)
advcl(proud-9, learn-12)
mark(have-15, that-13)
nsubj(have-15, we-14)
ccomp(learn-12, have-15)
num(Master-17, one-16)
dobj(have-15, Master-17)
nsubj(brethren-23, we-20)
advmod(brethren-23, all-21)
cop(brethren-23, are-22)
conj_and(see-2, brethren-23)

(ROOT
  (S
    (S (CC But)
      (NP (PRP they))
      (VP (MD will)
        (ADVP (RB soon))
        (VP (VB get)
          (PRT (RP over))
          (NP (PRP it))
          ('' '')
          (SBAR
            (WHADVP (WRB When))
            (S
              (NP (PRP I))
              (VP (VBP see)
                (S
                  (NP (DT a) (NN man))
                  (VP (VBG lifting)
                    (PRT (RP up))
                    (NP
                      (NP (DT those))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP are)
                            (PP (IN beneath)
                              (NP (PRP him)))))))))
                (, ,)
                (S (RB not)
                  (VP (VBG pulling)
                    (PRT (RP down))
                    (NP
                      (NP (DT those))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP are)
                            (PP (IN above)
                              (NP (PRP him)))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB believe)
        (PP (IN in)
          (NP (PRP$ his) (NN communism)))))
    (. .)))

cc(get-5, But-1)
nsubj(get-5, they-2)
aux(get-5, will-3)
advmod(get-5, soon-4)
ccomp(believe-33, get-5)
prt(get-5, over-6)
dobj(get-5, it-7)
advmod(see-11, When-9)
nsubj(see-11, I-10)
advcl(get-5, see-11)
det(man-13, a-12)
nsubj(lifting-14, man-13)
dep(see-11, lifting-14)
prt(lifting-14, up-15)
dobj(lifting-14, those-16)
nsubj(are-18, those-16)
rcmod(those-16, are-18)
prep_beneath(are-18, him-20)
neg(pulling-23, not-22)
xcomp(see-11, pulling-23)
prt(pulling-23, down-24)
dobj(pulling-23, those-25)
nsubj(are-27, those-25)
rcmod(those-25, are-27)
prep_above(are-27, him-29)
nsubj(believe-33, I-31)
aux(believe-33, will-32)
root(ROOT-0, believe-33)
poss(communism-36, his-35)
prep_in(believe-33, communism-36)

(ROOT
  (S
    (NP
      (NP (DT Those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP
            (ADVP (RBS most))
            (VBP resent)
            (S
              (VP (VBG being)
                (VP (VBN looked)
                  (PRT (RP down))
                  (PP (RB upon)))))))))
    (, ,)
    (VP (VBP are)
      (PP (IN in)
        (NP (JJ general) (DT the) (NN readiest)))
      (S
        (VP (TO to)
          (VP (VB look)
            (PRT (RP down))
            (PP (IN upon)
              (NP (NNS others)))))))
    (. .)))

nsubj(resent-4, Those-1)
pobj(upon-8, Those-1)
nsubj(are-10, Those-1)
nsubj(look-16, Those-1)
advmod(resent-4, most-3)
rcmod(Those-1, resent-4)
auxpass(looked-6, being-5)
xcomp(resent-4, looked-6)
prt(looked-6, down-7)
prep(looked-6, upon-8)
root(ROOT-0, are-10)
amod(readiest-14, general-12)
det(readiest-14, the-13)
prep_in(are-10, readiest-14)
aux(look-16, to-15)
xcomp(are-10, look-16)
prt(look-16, down-17)
prep_upon(look-16, others-19)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is) (RB not)
        (NP (NN principle))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBZ is) (RB not)
        (NP (NN truth))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (PRP themselves))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP regard)))))))
    (. .)))

nsubj(principle-4, It-1)
cop(principle-4, is-2)
neg(principle-4, not-3)
root(ROOT-0, principle-4)
nsubj(truth-9, it-6)
cop(truth-9, is-7)
neg(truth-9, not-8)
parataxis(principle-4, truth-9)
nsubj(themselves-13, it-11)
cop(themselves-13, is-12)
parataxis(principle-4, themselves-13)
nsubj(regard-15, they-14)
rcmod(themselves-13, regard-15)

(ROOT
  (S
    (PP (IN Of)
      (NP (DT all) (JJ false) (NNS divinities)))
    (, ,)
    (NP (NNP Self))
    (VP (VBZ is)
      (NP (DT the) (JJS most))
      (ADJP (JJ illogical)))
    (. .)))

det(divinities-4, all-2)
amod(divinities-4, false-3)
prep_of(illogical-10, divinities-4)
nsubj(illogical-10, Self-6)
cop(illogical-10, is-7)
det(most-9, the-8)
dep(illogical-10, most-9)
root(ROOT-0, illogical-10)

(ROOT
  (SINV (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (NNP God))
          (VP (VBD had)
            (VP (VBN been)
              (NP (DT the) (JJ mighty) (NN monarch))))))
      (NP (PRP they))
      (VP (VBP represent)
        (NP (PRP Him))))
    (, ,) ('' '')
    (VP (VBD continued))
    (NP (NNP Andrew))
    (, ,) (`` ``)
    (S
      (NP (PRP He))
      (VP (MD would)
        (ADVP (RB never))
        (VP (VB have)
          (S
            (VP (VB let)
              (S
                (NP (PRP us))
                (VP (VB come)
                  (PP (IN near)
                    (NP (PRP Him))))))))))
    (. !) ('' '')))

mark(monarch-8, If-2)
nsubj(monarch-8, God-3)
aux(monarch-8, had-4)
cop(monarch-8, been-5)
det(monarch-8, the-6)
amod(monarch-8, mighty-7)
advcl(represent-10, monarch-8)
nsubj(represent-10, they-9)
ccomp(continued-14, represent-10)
dobj(represent-10, Him-11)
root(ROOT-0, continued-14)
nsubj(continued-14, Andrew-15)
nsubj(have-21, He-18)
aux(have-21, would-19)
neg(have-21, never-20)
dep(continued-14, have-21)
ccomp(have-21, let-22)
nsubj(come-24, us-23)
ccomp(let-22, come-24)
prep_near(come-24, Him-26)

(ROOT
  (S (`` ``)
    (ADVP (RB Did))
    (NP (PRP you))
    (VP (VBP hear)
      (NP
        (NP
          (NP (NNP Mr.) (NNP Rackstraw) (POS 's))
          (NN sermon))
        (PP (IN on)
          (NP
            (NP (DT the) (NN condescension))
            (PP (IN of)
              (NP (NNP God)))))))
    (. ?) ('' '')))

advmod(hear-4, Did-2)
nsubj(hear-4, you-3)
root(ROOT-0, hear-4)
nn(Rackstraw-6, Mr.-5)
poss(sermon-8, Rackstraw-6)
dobj(hear-4, sermon-8)
det(condescension-11, the-10)
prep_on(sermon-8, condescension-11)
prep_of(condescension-11, God-13)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Alexa-2)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN condescension))
      (PP (IN of)
        (NP (NNP God))))
    (, ,)
    (VP (VBP ma'am))
    (. !)))

det(condescension-3, The-2)
nsubj(ma'am-7, condescension-3)
prep_of(condescension-3, God-5)
root(ROOT-0, ma'am-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (JJ such) (NN thing)))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(thing-5, no-3)
amod(thing-5, such-4)
nsubj(is-2, thing-5)

(ROOT
  (S
    (NP (NNP God))
    (ADVP (RB never))
    (VP (VBD condescended) (, ,)
      (PP (IN with)
        (NP (CD one) (JJ Jove-like) (NN nod)))
      (, ,)
      (PP (RB all)
        (NP (PRP$ his) (JJ mighty) (, ,) (JJ eternal) (NN life))))
    (. !)))

nsubj(condescended-3, God-1)
neg(condescended-3, never-2)
root(ROOT-0, condescended-3)
num(nod-8, one-6)
amod(nod-8, Jove-like-7)
prep_with(condescended-3, nod-8)
prep(condescended-3, all-10)
poss(life-15, his-11)
amod(life-15, mighty-12)
amod(life-15, eternal-14)
pobj(all-10, life-15)

(ROOT
  (S
    (S
      (NP (NNP God))
      (VP (VBD condescend)
        (PP (TO to)
          (NP (PRP$ His) (NNS children)))))
    (: --)
    (S
      (NP (PRP$ their) (NNS spirits))
      (VP (VBN born)
        (PP (IN of)
          (NP
            (NP (PRP$ His) (NN spirit))
            (, ,)
            (NP (PRP$ their) (NNS hearts))))
        (NP
          (NP (DT the) (NNS children))
          (PP (IN of)
            (NP (PRP$ His) (NN heart))))))
    (. !)))

nsubj(condescend-2, God-1)
root(ROOT-0, condescend-2)
poss(children-5, His-4)
prep_to(condescend-2, children-5)
poss(spirits-8, their-7)
nsubj(born-9, spirits-8)
parataxis(condescend-2, born-9)
poss(spirit-12, His-11)
prep_of(born-9, spirit-12)
poss(hearts-15, their-14)
appos(spirit-12, hearts-15)
det(children-17, the-16)
dobj(born-9, children-17)
poss(heart-20, His-19)
prep_of(children-17, heart-20)

(ROOT
  (FRAG
    (INTJ (UH No))
    (, ,)
    (NP (NN ma'am))
    (. !)))

discourse(ma'am-3, No-1)
root(ROOT-0, ma'am-3)

(ROOT
  (S
    (NP (EX there))
    (ADVP (RB never))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN falser))
        (, ,)
        (NP
          (NP (NN uglier) (NN word))
          (PP (IN in)
            (NP (DT any) (VBG lying) (NN sermon))))))
    (. !) ('' '')))

expl(was-3, there-1)
neg(was-3, never-2)
root(ROOT-0, was-3)
det(falser-5, a-4)
nsubj(was-3, falser-5)
nn(word-8, uglier-7)
appos(falser-5, word-8)
det(sermon-12, any-10)
amod(sermon-12, lying-11)
prep_in(word-8, sermon-12)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NNS eyes))
      (VP (VBD flashed)))
    (CC and)
    (S
      (NP (PRP$ his) (NN face))
      (VP (VBP shone)))
    (. .)))

poss(eyes-2, His-1)
nsubj(flashed-3, eyes-2)
root(ROOT-0, flashed-3)
poss(face-6, his-5)
nsubj(shone-7, face-6)
conj_and(flashed-3, shone-7)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD had)
            (ADVP (RB never))
            (VP (VBN seen)
              (S
                (NP (PRP him))
                (VP (VB look)
                  (NP (RB so) (JJ grand)))))))))
    (. .)))

nsubj(thought-2, Alexa-1)
root(ROOT-0, thought-2)
nsubj(seen-6, she-3)
aux(seen-6, had-4)
neg(seen-6, never-5)
ccomp(thought-2, seen-6)
nsubj(look-8, him-7)
ccomp(seen-6, look-8)
advmod(grand-10, so-9)
dobj(look-8, grand-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP see))
    (. !) ('' '')))

nsubj(see-3, I-2)
root(ROOT-0, see-3)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

nsubj(answered-2, she-1)
root(ROOT-0, answered-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will)
      (ADVP (RB never))
      (VP (VB use)
        (NP
          (NP (DT the) (NN word))
          (PP (IN about)
            (NP (NNP God))))
        (ADVP (RB again))))
    (. !) ('' '')))

nsubj(use-5, I-2)
aux(use-5, will-3)
neg(use-5, never-4)
root(ROOT-0, use-5)
det(word-7, the-6)
dobj(use-5, word-7)
prep_about(word-7, God-9)
advmod(use-5, again-10)

(ROOT
  (S (`` ``)
    (VP (VB Thank)
      (NP (PRP you))
      (, ,) (VB ma'am))
    (. .) ('' '')))

root(ROOT-0, Thank-2)
dobj(Thank-2, you-3)
dep(Thank-2, ma'am-5)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB thank)
        (NP (PRP me))))
    (. ?) ('' '')))

advmod(thank-5, Why-2)
aux(thank-5, should-3)
nsubj(thank-5, you-4)
root(ROOT-0, thank-5)
dobj(thank-5, me-6)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VB beg)
        (NP (PRP$ your) (NN pardon))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (ADVP (RB no) (RB right))
        (S
          (VP (TO to)
            (VP (VB thank)
              (NP (PRP you)))))))
    (. .)))

nsubj(beg-3, I-2)
root(ROOT-0, beg-3)
poss(pardon-5, your-4)
dobj(beg-3, pardon-5)
nsubj(had-8, I-7)
nsubj(thank-12, I-7)
parataxis(beg-3, had-8)
neg(right-10, no-9)
advmod(had-8, right-10)
aux(thank-12, to-11)
xcomp(had-8, thank-12)
dobj(thank-12, you-13)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB so))
      (VP (VBN tried)
        (PP (IN with)
          (NP
            (NP (DT the) (JJ wicked) (NNS things))
            (VP (VBN said)
              (PP (IN about)
                (NP (NNP God)))
              (PP (IN by)
                (NP
                  (NP (NNS people))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP think)
                        (SBAR
                          (S
                            (NP (PRP they))
                            (VP (VBP are)
                              (VP (VBG speaking)
                                (PP
                                  (PP (TO to)
                                    (NP (PRP$ His) (NN pleasure)))
                                  (CC and)
                                  (RB not)
                                  (PP (IN in)
                                    (NP (PRP$ his))))
                                (PP (IN despite))
                                (, ,)
                                (SBAR (IN that)
                                  (S
                                    (NP (PRP I))
                                    (VP (VBP am)
                                      (ADJP (JJ apt)
                                        (S
                                          (VP (TO to)
                                            (VP (VB talk)
                                              (ADVP (RB foolishly)))))))))))))))))))))))
    (. .)))

cc(tried-5, But-1)
nsubjpass(tried-5, I-2)
auxpass(tried-5, am-3)
advmod(tried-5, so-4)
root(ROOT-0, tried-5)
det(things-9, the-7)
amod(things-9, wicked-8)
prep_with(tried-5, things-9)
vmod(things-9, said-10)
prep_about(said-10, God-12)
agent(said-10, people-14)
nsubj(think-16, people-14)
rcmod(people-14, think-16)
nsubj(speaking-19, they-17)
nsubj(speaking-19', they-17)
aux(speaking-19, are-18)
ccomp(think-16, speaking-19)
ccomp(think-16, speaking-19')
conj_and(speaking-19, speaking-19')
poss(pleasure-22, His-21)
prep_to(speaking-19, pleasure-22)
neg(speaking-19, not-24)
prep_in(speaking-19', his-26)
prep(speaking-19, despite-27)
mark(apt-32, that-29)
nsubj(apt-32, I-30)
nsubj(talk-34, I-30)
cop(apt-32, am-31)
ccomp(speaking-19, apt-32)
aux(talk-34, to-33)
xcomp(apt-32, talk-34)
advmod(talk-34, foolishly-35)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB wonder)
          (PP (IN at)
            (NP
              (NP (NNP God) (POS 's))
              (NN patience)))
          (PP (IN with)
            (NP (DT the) (JJ wicked))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do)
        (NP (NN wonder))
        (PP (IN at)
          (NP
            (NP (PRP$ His) (NN patience))
            (PP (IN with)
              (NP (DT the) (JJ pious)))))))
    (. !) ('' '')))

nsubj(wonder-4, I-1)
aux(wonder-4, do-2)
neg(wonder-4, n't-3)
root(ROOT-0, wonder-4)
poss(patience-8, God-6)
prep_at(wonder-4, patience-8)
det(wicked-11, the-10)
prep_with(wonder-4, wicked-11)
nsubj(do-15, I-14)
conj_but(wonder-4, do-15)
dobj(do-15, wonder-16)
poss(patience-19, His-18)
prep_at(do-15, patience-19)
det(pious-22, the-21)
prep_with(patience-19, pious-22)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (ADVP (RBR better))))
    (. !) ('' '')))

nsubj(know-5, They-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
advmod(know-5, better-6)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WRB How))
    (SQ (VBP are)
      (NP
        (NP (PRP they))
        (S
          (VP (TO to)
            (VP (VB know)
              (ADVP
                (ADVP (RBR better))
                (SBAR (IN while)
                  (S
                    (NP (PRP they))
                    (VP (VBP are)))))))))
      (ADJP (RB so) (JJ sure)
        (PP (IN about)
          (NP (NN everything))))
      (. !))))

dep(sure-12, How-2)
cop(sure-12, are-3)
nsubj(sure-12, they-4)
aux(know-6, to-5)
vmod(they-4, know-6)
advmod(know-6, better-7)
mark(are-10, while-8)
nsubj(are-10, they-9)
advcl(better-7, are-10)
advmod(sure-12, so-11)
root(ROOT-0, sure-12)
prep_about(sure-12, everything-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB infinitely))
      (VP
        (ADVP (RB rather))
        (VB believe)
        (PP (IN in)
          (NP
            (NP (DT no) (NNP God))
            (ADVP (IN at) (DT all))))
        (, ,)
        (ADVP (IN than)
          (PP (IN in)
            (NP (PDT such) (DT a) (NN God))))
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP (MD would)
              (VP (VB have)
                (S
                  (NP (PRP me))
                  (VP (VB believe)
                    (PRT (RP in))))))))))
    (. !) ('' '')))

nsubj(believe-5, I-1)
aux(believe-5, would-2)
advmod(believe-5, infinitely-3)
advmod(believe-5, rather-4)
root(ROOT-0, believe-5)
neg(God-8, no-7)
prep_in(believe-5, God-8)
advmod(God-8, at-9)
pobj(at-9, all-10)
advmod(believe-5, than-12)
predet(God-16, such-14)
det(God-16, a-15)
prep_in(than-12, God-16)
mark(have-20, as-17)
nsubj(have-20, they-18)
aux(have-20, would-19)
advcl(believe-5, have-20)
nsubj(believe-22, me-21)
ccomp(have-20, believe-22)
prt(believe-22, in-23)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (PP (IN but)
      (NP (NNP Andrew)))
    (, ,)
    (NP (PRP I))
    (VP (VBD had)
      (NP (RB not) (DT a) (NN glimmer))
      (SBAR
        (SBAR
          (WHPP (IN of)
            (WHNP (WP what)))
          (S
            (NP (PRP you))
            (VP (VBD meant))))
        (: --)
        (SBAR
          (WHPP (IN of)
            (WHNP (WP what)))
          (S
            (NP (PRP you))
            (ADVP (RB really))
            (VP (VBD objected)
              (PP (TO to)))))
        (, ,)
        (CC or)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBD loved))))))
    (. !)))

discourse(had-8, Oh-2)
prep_but(had-8, Andrew-5)
nsubj(had-8, I-7)
root(ROOT-0, had-8)
neg(glimmer-11, not-9)
det(glimmer-11, a-10)
dobj(had-8, glimmer-11)
prep_of(meant-15, what-13)
nsubj(meant-15, you-14)
dep(had-8, meant-15)
prep_of(objected-21, what-18)
nsubj(objected-21, you-19)
advmod(objected-21, really-20)
dep(had-8, objected-21)
conj_or(meant-15, objected-21)
prep(objected-21, to-22)
dobj(loved-27, what-25)
nsubj(loved-27, you-26)
dep(had-8, loved-27)
conj_or(meant-15, loved-27)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (ADVP (RB even))
      (VP (VB recall)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP it))
            (VP (VBD was)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD did) (RB not)
                    (VP (VB like)
                      (PP (IN in)
                        (NP (PRP$ your) (NN teaching))))))))))))
    (. .)))

advmod(recall-7, Now-1)
nsubj(recall-7, I-3)
aux(recall-7, can-4)
neg(recall-7, not-5)
advmod(recall-7, even-6)
root(ROOT-0, recall-7)
dobj(was-10, what-8)
nsubj(was-10, it-9)
ccomp(recall-7, was-10)
nsubj(like-14, I-11)
aux(like-14, did-12)
neg(like-14, not-13)
ccomp(was-10, like-14)
poss(teaching-17, your-16)
prep_in(like-14, teaching-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (SBAR (IN that)
              (S (, ,)
                (PP (RB instead) (IN of)
                  (S
                    (VP (VBG listening)
                      (S
                        (VP (TO to)
                          (VP (VB know)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (PRP you))
                                (VP (VBD meant))))))))))
                (, ,)
                (NP (PRP I))
                (VP (VBD was)
                  (ADVP (RB always))
                  (VP
                    (VP (VBG thinking)
                      (SBAR
                        (WHADVP (WRB how))
                        (S
                          (VP (TO to)
                            (VP (VB oppose)
                              (NP (PRP you)))))))
                    (, ,)
                    (CC or)
                    (VP (VBG trying)
                      (S
                        (VP (TO to)
                          (VP (VB find)
                            (PRT (RP out))
                            (PP (IN by)
                              (SBAR
                                (WHNP (WP what) (NN name))
                                (S
                                  (NP (PRP you))
                                  (VP (VBD were)
                                    (S
                                      (VP (TO to)
                                        (VP (VB be)
                                          (VP (VBN called)))))))))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(was-4, it-3)
ccomp(think-2, was-4)
mark(thinking-19, that-5)
prepc_instead_of(thinking-19, listening-9)
aux(know-11, to-10)
xcomp(listening-9, know-11)
dobj(meant-14, what-12)
nsubj(meant-14, you-13)
ccomp(know-11, meant-14)
nsubj(thinking-19, I-16)
nsubj(oppose-22, I-16)
nsubj(trying-26, I-16)
nsubj(find-28, I-16)
aux(thinking-19, was-17)
advmod(thinking-19, always-18)
ccomp(was-4, thinking-19)
advmod(oppose-22, how-20)
aux(oppose-22, to-21)
ccomp(thinking-19, oppose-22)
xcomp(thinking-19, oppose-22)
dobj(oppose-22, you-23)
ccomp(was-4, trying-26)
conj_or(thinking-19, trying-26)
aux(find-28, to-27)
xcomp(trying-26, find-28)
prt(find-28, out-29)
det(name-32, what-31)
dobj(were-34, name-32)
nsubjpass(called-37, name-32)
nsubj(were-34, you-33)
prepc_by(find-28, were-34)
aux(called-37, to-35)
auxpass(called-37, be-36)
xcomp(were-34, called-37)

(ROOT
  (S
    (S
      (NP (CD One) (NN time))
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD were)
              (NP
                (NP (DT an) (NNP Arminian))
                (, ,)
                (NP
                  (NP (DT another) (NN time))
                  (NP (DT a) (NNP Socinian)))))))))
    (, ,)
    (FRAG (RB then)
      (NP (DT a) (NNP Swedenborgian))
      (, ,) (RB then)
      (NP (DT an) (NNP Arian)))
    (. !)))

num(time-2, One-1)
nsubj(thought-4, time-2)
nsubj(thought-4, I-3)
root(ROOT-0, thought-4)
nsubj(Arminian-8, you-5)
cop(Arminian-8, were-6)
det(Arminian-8, an-7)
ccomp(thought-4, Arminian-8)
det(time-11, another-10)
appos(Arminian-8, time-11)
det(Socinian-13, a-12)
dep(time-11, Socinian-13)
dep(then-19, then-15)
det(Swedenborgian-17, a-16)
dep(then-19, Swedenborgian-17)
dep(thought-4, then-19)
det(Arian-21, an-20)
dep(then-19, Arian-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD read)
      (NP
        (NP (DT a) (NN history))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS sects))
            (PP (IN of)
              (NP (DT the) (JJ middle) (NNS ages))))))
      (, ,)
      (S
        (ADVP (RB just))
        (VP (TO to)
          (VP (VB see)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP I))
                (VP (MD could)
                  (VP (VB set)
                    (NP (PRP you))
                    (PRT (RP down))))))))))
    (. .)))

nsubj(read-2, I-1)
root(ROOT-0, read-2)
det(history-4, a-3)
dobj(read-2, history-4)
det(sects-7, the-6)
prep_of(history-4, sects-7)
det(ages-11, the-9)
amod(ages-11, middle-10)
prep_of(sects-7, ages-11)
advmod(see-15, just-13)
aux(see-15, to-14)
vmod(read-2, see-15)
advmod(set-19, where-16)
nsubj(set-19, I-17)
aux(set-19, could-18)
advcl(see-15, set-19)
dobj(set-19, you-20)
prt(set-19, down-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD told)
        (NP
          (NP (NNS people))
          (SBAR
            (S
              (NP (PRP you))
              (VP
                (VP (VBD did) (RB not)
                  (VP (VB believe)
                    (NP (DT this))))
                (, ,)
                (CC and)
                (VP (VBD did) (RB not)
                  (VP (VB believe)
                    (NP
                      (NP (DT that))
                      (, ,)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP I))
                          (VP (VBD knew)
                            (NP
                              (NP (DT neither))
                              (SBAR
                                (WHNP (WP what))
                                (S
                                  (NP (PRP you))
                                  (VP (VBD believed)))))))))))))))))
    (, ,)
    (CC nor)
    (S
      (X (WP what))
      (NP (PRP you))
      (VP (VBD did) (RB not)
        (VP (VB believe))))
    (. .)))

nsubj(told-2, I-1)
root(ROOT-0, told-2)
dobj(told-2, people-3)
dobj(believe-13, people-3)
tmod(knew-18, people-3)
nsubj(believe-7, you-4)
nsubj(believe-13, you-4)
aux(believe-7, did-5)
neg(believe-7, not-6)
rcmod(people-3, believe-7)
dobj(believe-7, this-8)
aux(believe-13, did-11)
neg(believe-13, not-12)
rcmod(people-3, believe-13)
conj_and(believe-7, believe-13)
advmod(knew-18, when-16)
nsubj(knew-18, I-17)
rcmod(that-14, knew-18)
dobj(knew-18, neither-19)
dobj(believed-22, neither-19)
nsubj(believed-22, you-21)
rcmod(neither-19, believed-22)
dep(believe-29, what-25)
nsubj(believe-29, you-26)
aux(believe-29, did-27)
neg(believe-29, not-28)
conj_nor(told-2, believe-29)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD did))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT all) (NN mistake)
          (CC and)
          (NN imagination))))
    (. .)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(did-4, I-3)
ccomp(thought-2, did-4)
nsubj(mistake-10, it-7)
cop(mistake-10, was-8)
det(mistake-10, all-9)
conj_but(thought-2, mistake-10)
conj_but(thought-2, imagination-12)
conj_and(mistake-10, imagination-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (MD would) (RB not)
          (VP (VB discuss)
            (NP (NNS things))
            (PP (IN with)
              (NP (PRP me)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD were)
            (ADJP (JJ afraid)
              (PP (IN of)
                (S
                  (VP (VBG losing)
                    (NP (DT the) (NN argument))))))))))
    (. .)))

advmod(discuss-5, When-1)
nsubj(discuss-5, you-2)
aux(discuss-5, would-3)
neg(discuss-5, not-4)
advcl(thought-11, discuss-5)
dobj(discuss-5, things-6)
prep_with(discuss-5, me-8)
nsubj(thought-11, I-10)
root(ROOT-0, thought-11)
nsubj(afraid-14, you-12)
cop(afraid-14, were-13)
ccomp(thought-11, afraid-14)
prepc_of(afraid-14, losing-16)
det(argument-18, the-17)
dobj(losing-16, argument-18)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP I))
    (VP (VBP see)
      (SBAR (IN that)
        (S (, ,)
          (PP (RB instead) (IN of)
            (S
              (VP (VBG disputing)
                (PP (IN about)
                  (NP (NNS opinions))))))
          (, ,)
          (NP (PRP I))
          (VP (MD should)
            (VP (VB have)
              (VP (VBN been)
                (VP (VBG saying) (: :) (`` `)
                  (S
                    (NP (NNP God))
                    (VP (VB be)
                      (ADJP (JJ merciful)
                        (PP (TO to)
                          (NP (PRP me))))
                      (NP (DT a) (NN sinner)))))))))))
    (. !) ('' ') ('' '')))

advmod(see-3, Now-1)
nsubj(see-3, I-2)
root(ROOT-0, see-3)
mark(saying-16, that-4)
prepc_instead_of(saying-16, disputing-8)
prep_about(disputing-8, opinions-10)
nsubj(saying-16, I-12)
aux(saying-16, should-13)
aux(saying-16, have-14)
aux(saying-16, been-15)
ccomp(see-3, saying-16)
nsubj(merciful-21, God-19)
cop(merciful-21, be-20)
ccomp(saying-16, merciful-21)
prep_to(merciful-21, me-23)
det(sinner-25, a-24)
dep(merciful-21, sinner-25)

(ROOT
  (S (`` ``)
    (NP (NNP God))
    (VP (VB be)
      (VP (VBN praised)))
    (. !) ('' '')))

nsubjpass(praised-4, God-2)
auxpass(praised-4, be-3)
root(ROOT-0, praised-4)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)

(ROOT
  (S (`` ``)
    (NP (NNP Ma'am))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (NP (DT a) (JJ free) (NN woman)))
    (. !)))

nsubj(woman-8, Ma'am-2)
nsubj(woman-8, you-4)
cop(woman-8, are-5)
det(woman-8, a-6)
amod(woman-8, free-7)
root(ROOT-0, woman-8)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNP Father))
        (VP (VBZ has)
          (VP (VBN called)
            (NP (PRP you)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (VP (VBD said)))))
    (: :) (`` `)
    (S
      (ADVP (RB Here))
      (NP (PRP I))
      (VP (VBP am)))
    (. .) ('' ') ('' '')))

det(Father-2, The-1)
nsubj(called-4, Father-2)
aux(called-4, has-3)
root(ROOT-0, called-4)
dobj(called-4, you-5)
nsubj(said-10, you-8)
aux(said-10, have-9)
conj_and(called-4, said-10)
advmod(am-15, Here-13)
nsubj(am-15, I-14)
parataxis(called-4, am-15)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP hope)))
    (RB so) (, ,)
    (S
      (NP (NNP Andrew)))
    (, ,)
    (S
      (ADVP (NNS thanks)
        (PP (TO to)
          (NP (NNP God)))
        (PP (IN by)
          (NP (PRP you)))))
    (. !)))

nsubj(hope-3, I-2)
root(ROOT-0, hope-3)
advmod(hope-3, so-4)
parataxis(hope-3, Andrew-6)
parataxis(hope-3, thanks-8)
prep_to(thanks-8, God-10)
prep_by(thanks-8, you-12)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG forgetting)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBD wanted)
              (S
                (VP (TO to)
                  (VP (VB say)))))))))
    (. !)))

cc(forgetting-4, But-1)
nsubj(forgetting-4, I-2)
aux(forgetting-4, am-3)
root(ROOT-0, forgetting-4)
dobj(wanted-7, what-5)
nsubj(say-9, what-5)
nsubj(wanted-7, I-6)
ccomp(forgetting-4, wanted-7)
aux(say-9, to-8)
xcomp(wanted-7, say-9)

(ROOT
  (SQ (MD Would)
    (NP (PRP it))
    (ADVP (RB not))
    (VP (VB be)
      (ADJP (JJR better))
      (PRN (: --)
        (SBAR (IN after)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (VP (VBN married) (, ,)
                (S
                  (NP (PRP I))
                  (VP (VB mean)))))))
        (: --))
      (S
        (VP (TO to)
          (VP (VB let)
            (S
              (NP (NNP Dawtie))
              (VP (VB stay)
                (PP (IN with)
                  (NP (PRP me)))
                (ADVP (RB awhile))))))))
    (. ?)))

aux(better-5, Would-1)
nsubj(better-5, it-2)
nsubj(let-16, it-2)
advmod(better-5, not-3)
cop(better-5, be-4)
root(ROOT-0, better-5)
mark(married-10, after-7)
nsubjpass(married-10, you-8)
auxpass(married-10, are-9)
parataxis(better-5, married-10)
nsubj(mean-13, I-12)
ccomp(married-10, mean-13)
aux(let-16, to-15)
xcomp(better-5, let-16)
nsubj(stay-18, Dawtie-17)
ccomp(let-16, stay-18)
prep_with(stay-18, me-20)
advmod(stay-18, awhile-21)

(ROOT
  (S (: --)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB promise)
          (S
            (NP (PRP you))
            (RB not)
            (VP (TO to)
              (VP (VB work)
                (S
                  (NP (PRP her))
                  (ADJP (RB too) (JJ hard)))))))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP she))
        (VP (VBD added))))
    (, ,)
    (PP (IN with)
      (NP (DT a) (JJ little) (NN laugh)))
    (. .)))

nsubj(promise-4, I-2)
aux(promise-4, will-3)
root(ROOT-0, promise-4)
dobj(promise-4, you-5)
nsubj(work-8, you-5)
neg(work-8, not-6)
aux(work-8, to-7)
xcomp(promise-4, work-8)
nsubj(hard-11, her-9)
advmod(hard-11, too-10)
xcomp(work-8, hard-11)
nsubj(added-15, she-14)
dep(promise-4, added-15)
det(laugh-20, a-18)
amod(laugh-20, little-19)
prep_with(promise-4, laugh-20)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP see)))
    (, ,)
    (VP (VBP ma'am))
    (. !)))

nsubj(see-3, I-2)
ccomp(ma'am-5, see-3)
root(ROOT-0, ma'am-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB just))
      (PP (IN like)
        (NP (PRP you))))
    (. !)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
advmod(is-2, just-3)
prep_like(is-2, you-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP want)
      (S
        (NP (NNS people))
        (VP (TO to)
          (VP (VB know)
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (VP (VBP believe)
                  (PP (IN in)
                    (NP (PRP her))))))))))
    (. !) ('' '')))

nsubj(want-2, You-1)
root(ROOT-0, want-2)
dobj(want-2, people-3)
nsubj(know-5, people-3)
aux(know-5, to-4)
xcomp(want-2, know-5)
mark(believe-8, that-6)
nsubj(believe-8, you-7)
ccomp(know-5, believe-8)
prep_in(believe-8, her-10)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (: ;)
    (S (CC but)
      (NP (PRP I))
      (VP (VBP want)
        (ADVP (RB also))
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP I))
                  (VP (MD can)
                    (S
                      (VP (TO to)
                        (VP (VB keep)
                          (NP (JJ such) (JJ good) (NNS tenants)))))))))))))
    (. .)))

advmod(want-6, Yes-2)
cc(want-6, but-4)
nsubj(want-6, I-5)
nsubj(do-9, I-5)
root(ROOT-0, want-6)
advmod(want-6, also-7)
aux(do-9, to-8)
xcomp(want-6, do-9)
dobj(can-12, what-10)
nsubj(keep-14, what-10)
nsubj(can-12, I-11)
ccomp(do-9, can-12)
aux(keep-14, to-13)
xcomp(can-12, keep-14)
amod(tenants-17, such-15)
amod(tenants-17, good-16)
dobj(keep-14, tenants-17)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (PRP I))
    (VP (MD must)
      (VP (VB add)
        (NP
          (NP (DT a) (NN room))
          (CC or)
          (NP (CD two)))
        (PP (TO to)
          (NP (PRP$ your) (NN house)))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (MD may)
              (VP (VB be)
                (NP
                  (NP (JJ good) (NN accommodation))
                  (PP (IN for)
                    (NP (PRP you) (DT all))))))))))
    (. .) ('' '')))

advmod(add-4, Therefore-1)
nsubj(add-4, I-2)
aux(add-4, must-3)
root(ROOT-0, add-4)
det(room-6, a-5)
dobj(add-4, room-6)
dobj(add-4, two-8)
conj_or(room-6, two-8)
poss(house-11, your-10)
prep_to(add-4, house-11)
mark(accommodation-18, that-13)
expl(accommodation-18, there-14)
aux(accommodation-18, may-15)
cop(accommodation-18, be-16)
amod(accommodation-18, good-17)
ccomp(add-4, accommodation-18)
prep_for(accommodation-18, you-20)
det(you-20, all-21)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP make)
        (S
          (NP (NNS thanks))
          (ADJP (JJ impossible)))))
    (, ,)
    (VP (VBP ma'am))
    (. !)))

nsubj(make-3, You-2)
ccomp(ma'am-7, make-3)
nsubj(impossible-5, thanks-4)
xcomp(make-3, impossible-5)
root(ROOT-0, ma'am-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB speak)
        (S
          (VP (TO to)
            (VP (VB Dawtie)
              (PP (IN about)
                (NP (PRP it))))))))
    (. .)))

nsubj(speak-3, I-1)
nsubj(Dawtie-5, I-1)
aux(speak-3, will-2)
root(ROOT-0, speak-3)
aux(Dawtie-5, to-4)
xcomp(speak-3, Dawtie-5)
prep_about(Dawtie-5, it-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP she))
          (VP (MD will)
            (VP (VB be)
              (ADJP (JJ glad)
                (S (RB not)
                  (VP (TO to)
                    (VP (VB leave)
                      (NP (PRP you)))))))))))
    (. !)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubj(glad-6, she-3)
aux(glad-6, will-4)
cop(glad-6, be-5)
ccomp(know-2, glad-6)
neg(leave-9, not-7)
aux(leave-9, to-8)
dep(glad-6, leave-9)
dobj(leave-9, you-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB take)
        (NP (NN care))
        (S (RB not)
          (VP (TO to)
            (VP (VB trouble)
              (NP (DT the) (NN house)))))))
    (. .) ('' '')))

nsubj(take-3, I-1)
aux(take-3, will-2)
root(ROOT-0, take-3)
dobj(take-3, care-4)
neg(trouble-7, not-5)
aux(trouble-7, to-6)
vmod(take-3, trouble-7)
det(house-9, the-8)
dobj(trouble-7, house-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD shall)
        (VP (VB do)
          (ADVP (RB just))
          (PP (IN as)
            (NP (NNP Dawtie))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP please)))
    (. .)))

nsubj(do-4, You-2)
aux(do-4, shall-3)
root(ROOT-0, do-4)
advmod(do-4, just-5)
prep_as(do-4, Dawtie-7)
nsubj(please-10, you-9)
conj_and(do-4, please-10)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB Where))
      (S
        (NP (NNP Dawtie))
        (VP (VBZ is))))
    (, ,)
    (NP (EX there))
    (VP (MD will)
      (VP (VB be)
        (NP
          (NP (NN room))
          (PP (IN for)
            (NP (PRP you))))))
    (. !) ('' '')))

advmod(is-3, Where-1)
nsubj(is-3, Dawtie-2)
advcl(room-8, is-3)
expl(room-8, there-5)
aux(room-8, will-6)
cop(room-8, be-7)
root(ROOT-0, room-8)
prep_for(room-8, you-10)

(ROOT
  (S
    (ADVP (RB Already))
    (NP
      (NP (NNP Alexa) (POS 's))
      (NN pain))
    (VP (VBD had)
      (VP (VBN grown)
        (S
          (ADJP (RB quite) (JJ bearable)))))
    (. .)))

advmod(grown-6, Already-1)
poss(pain-4, Alexa-2)
nsubj(grown-6, pain-4)
aux(grown-6, had-5)
root(ROOT-0, grown-6)
advmod(bearable-8, quite-7)
acomp(grown-6, bearable-8)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD needed)
      (NP (DT no) (NN persuading)))
    (. .)))

nsubj(needed-2, Dawtie-1)
root(ROOT-0, needed-2)
neg(persuading-4, no-3)
dobj(needed-2, persuading-4)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (ADJP (RB so) (JJ rich)
          (PP (IN in)
            (NP
              (NP (DT the) (NN possession))
              (PP (IN of)
                (NP (NNP Andrew))))))
        (SBAR (IN that)
          (S
            (NP (PRP she))
            (VP (MD could)
              (VP (VB go)
                (NP (DT a) (CD hundred) (NNS years))
                (PP (IN without)
                  (S
                    (VP (VBG seeing)
                      (NP (PRP him)))))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(rich-4, She-1)
cop(rich-4, was-2)
advmod(rich-4, so-3)
ccomp(said-22, rich-4)
det(possession-7, the-6)
prep_in(rich-4, possession-7)
prep_of(possession-7, Andrew-9)
mark(go-13, that-10)
nsubj(go-13, she-11)
aux(go-13, could-12)
ccomp(rich-4, go-13)
det(years-16, a-14)
num(years-16, hundred-15)
tmod(go-13, years-16)
prepc_without(go-13, seeing-18)
dobj(seeing-18, him-19)
nsubj(said-22, she-21)
root(ROOT-0, said-22)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (SBAR (RB only) (IN that)
        (S
          (NP (PRP he))
          (VP (MD would)
            (VP (VB come)
              (CC and)
              (VB see)
              (NP (PRP her))
              (, ,)
              (ADVP (RB instead))
              (PP (IN of)
                (S
                  (NP (PRP her))
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB see)
                          (NP (PRP him)))))))))))))
    (. !)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(come-7, only-3)
mark(come-7, that-4)
nsubj(come-7, he-5)
nsubj(see-9, he-5)
aux(come-7, would-6)
dep(was-2, come-7)
dep(was-2, see-9)
conj_and(come-7, see-9)
dobj(come-7, her-10)
nsubj(going-15, her-14)
nsubj(see-17, her-14)
prepc_instead_of(come-7, going-15)
aux(see-17, to-16)
xcomp(going-15, see-17)
dobj(see-17, him-18)

(ROOT
  (S
    (PP (IN In)
      (NP (CD ten) (NNS days)))
    (NP (PRP they))
    (VP (VBD were)
      (VP (VBN married)
        (PP (IN at)
          (NP
            (NP (PRP$ her) (NN father) (POS 's))
            (NN cottage)))))
    (. .)))

num(days-3, ten-2)
prep_in(married-6, days-3)
nsubjpass(married-6, they-4)
auxpass(married-6, were-5)
root(ROOT-0, married-6)
poss(father-9, her-8)
poss(cottage-11, father-9)
prep_at(married-6, cottage-11)

(ROOT
  (S
    (NP (PRP$ Her) (NN father)
      (CC and)
      (NN mother))
    (ADVP (RB then))
    (VP (VBD accompanied)
      (NP
        (NP (PRP her))
        (CC and)
        (NP (NNP Andrew)))
      (PP (TO to)
        (NP (DT the) (NNP Knowe)))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB dine)
            (PP (IN with)
              (NP
                (NP (NNP Andrew) (POS 's))
                (NN father)
                (CC and)
                (NN mother)))))))
    (. .)))

poss(father-2, Her-1)
nsubj(accompanied-6, father-2)
conj_and(father-2, mother-4)
nsubj(accompanied-6, mother-4)
advmod(accompanied-6, then-5)
root(ROOT-0, accompanied-6)
dobj(accompanied-6, her-7)
dobj(accompanied-6, Andrew-9)
conj_and(her-7, Andrew-9)
det(Knowe-12, the-11)
prep_to(accompanied-6, Knowe-12)
aux(dine-15, to-14)
vmod(accompanied-6, dine-15)
poss(father-19, Andrew-17)
prep_with(dine-15, father-19)
prep_with(dine-15, mother-21)
conj_and(father-19, mother-21)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN evening)))
    (NP (DT the) (JJ new) (NN pair))
    (VP (VBD went)
      (PRT (RP out))
      (PP (IN for)
        (NP
          (NP (DT a) (NN walk))
          (PP (IN in)
            (NP (DT the) (JJ old) (NNS fields))))))
    (. .)))

det(evening-3, the-2)
prep_in(went-7, evening-3)
det(pair-6, the-4)
amod(pair-6, new-5)
nsubj(went-7, pair-6)
root(ROOT-0, went-7)
prt(went-7, out-8)
det(walk-11, a-10)
prep_for(went-7, walk-11)
det(fields-15, the-13)
amod(fields-15, old-14)
prep_in(walk-11, fields-15)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP
      (ADVP (RB _))
      (VBZ seems)
      (ADJP (JJ _))
      (, ,)
      (S
        (NP (NNP Dawtie)))
      (, ,)
      (SBAR (RB as) (IN if)
        (S
          (NP (NNP God))
          (VP (VBD was)
            (ADVP (RB here))))))
    (. !) ('' '')))

nsubj(seems-4, It-2)
advmod(seems-4, _-3)
root(ROOT-0, seems-4)
acomp(seems-4, _-5)
dep(seems-4, Dawtie-7)
advmod(was-12, as-9)
mark(was-12, if-10)
nsubj(was-12, God-11)
advcl(seems-4, was-12)
advmod(was-12, here-13)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Andrew)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Andrew-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB fain)
        (S
          (VP (VB see)
            (NP (PRP him))
            (, ,)
            (NP (NNP Andrew))))))
    (. !)))

nsubj(fain-4, I-2)
aux(fain-4, would-3)
root(ROOT-0, fain-4)
ccomp(fain-4, see-5)
dobj(see-5, him-6)
dobj(see-5, Andrew-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would) (RB rather)
      (VP (VB _)
        (SBAR
          (S
            (NP (PRP you))
            (ADVP (RB _))
            (VP (VBD went)
              (PRT (RP out))
              (PP (IN than)
                (NP (NNP God))))))))
    (. !) ('' '')))

nsubj(_-4, I-1)
aux(_-4, would-2)
advmod(_-4, rather-3)
root(ROOT-0, _-4)
nsubj(went-7, you-5)
advmod(went-7, _-6)
ccomp(_-4, went-7)
prt(went-7, out-8)
prep_than(went-7, God-10)

(ROOT
  (S (`` ``)
    (VP (VB Suppose)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was)
            (NP
              (NP (RB nowhere))
              (, ,)
              (NP (NNP Dawtie)))))))
    (. ?) ('' '')))

root(ROOT-0, Suppose-2)
nsubj(nowhere-5, he-3)
cop(nowhere-5, was-4)
ccomp(Suppose-2, nowhere-5)
appos(nowhere-5, Dawtie-7)

(ROOT
  (SQ (`` ``)
    (SBAR (IN If)
      (S
        (NP
          (NP (NNP God) (NNP werena))
          (PP (IN in)
            (S
              (VP (VBG _)
                (NP (PRP you))))))
        (VP (VBZ _))))
    (, ,) (MD ye)
    (NP (NN wadna))
    (VP (VB be)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP ye))
          (VP (VBP are)
            (PP (TO to)
              (NP (NN yer) (NN ignorant) (NNP Dawtie) (, ,) (NNP Andrew)))))))
    (. !)))

mark(_-8, If-2)
nn(werena-4, God-3)
nsubj(_-8, werena-4)
prepc_in(werena-4, _-6)
dobj(_-6, you-7)
advcl(be-12, _-8)
aux(be-12, ye-10)
nsubj(be-12, wadna-11)
root(ROOT-0, be-12)
dobj(are-15, what-13)
nsubj(are-15, ye-14)
ccomp(be-12, are-15)
nn(Andrew-21, yer-17)
nn(Andrew-21, ignorant-18)
nn(Andrew-21, Dawtie-19)
prep_to(are-15, Andrew-21)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ needs)
      (NP (PRP$ her) (NN Father))
      (PP (IN in)
        (NP
          (NP (NN h))
          (`` `)
          (NP
            (NP (NN aven) (NN sairer))
            (CC nor)
            (NP (PRP$ her) (NNP Andrew))))))
    (. !)))

nsubj(needs-2, She-1)
root(ROOT-0, needs-2)
poss(Father-4, her-3)
dobj(needs-2, Father-4)
prep_in(needs-2, h-6)
nn(sairer-9, aven-8)
dep(h-6, sairer-9)
poss(Andrew-12, her-11)
dep(h-6, Andrew-12)
conj_nor(sairer-9, Andrew-12)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP 'm)
      (VP
        (NP
          (NP (NN sayin) (POS '))
          (NNS things))
        (ADJP (RB sae) (JJ true) (`` `)
          (SBAR
            (X (IN at))
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (ADJP (JJ jist) (RB silly)
                  (S
                    (VP (TO to)
                      (VP (VB say)
                        (NP (PRP them))))))))))))
    (. !)))

cc(true-8, But-1)
nsubj(true-8, I-2)
aux(true-8, 'm-3)
poss(things-6, sayin-4)
dobj(true-8, things-6)
advmod(true-8, sae-7)
root(ROOT-0, true-8)
dep(jist-13, at-10)
nsubj(jist-13, it-11)
nsubj(say-16, it-11)
cop(jist-13, 's-12)
ccomp(true-8, jist-13)
advmod(jist-13, silly-14)
aux(say-16, to-15)
xcomp(jist-13, say-16)
dobj(say-16, them-17)

(ROOT
  (S
    (ADVP (RB Eh))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (JJ like) (NN h) (`` `) (NN aven) (NN itsel) ('' '))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP
                    (NP (NN oot))
                    (VP (VBN o) ('' ')
                      (NP (DT that) (NN prison))
                      (, ,)))
                  (, an) ('' ')
                  (NP
                    (NP
                      (NP (NN walkin) (POS '))
                      (NN aboot))
                    (VP (VBN wi) ('' ')
                      (NP (PRP you)))))))))))
    (. !)))

advmod(itsel-9, Eh-1)
nsubj(itsel-9, it-3)
cop(itsel-9, 's-4)
amod(itsel-9, like-5)
nn(itsel-9, h-6)
nn(itsel-9, aven-8)
root(ROOT-0, itsel-9)
aux(oot-13, to-11)
cop(oot-13, be-12)
vmod(itsel-9, oot-13)
vmod(oot-13, o-14)
det(prison-17, that-16)
dobj(o-14, prison-17)
punct(oot-13, an-19)
poss(aboot-23, walkin-21)
dep(oot-13, aboot-23)
vmod(aboot-23, wi-24)
dobj(wi-24, you-26)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBZ has)
      (VP (VBN gien)
        (S
          (NP (PRP me))
          (NP
            (NP (NNP a) (POS '))
            (NN thing)))))
    (. !)))

nsubj(gien-3, God-1)
aux(gien-3, has-2)
root(ROOT-0, gien-3)
nsubj(thing-7, me-4)
poss(thing-7, a-5)
xcomp(gien-3, thing-7)

(ROOT
  (S (: --)
    (S
      (VP (VB jist)
        (NP
          (NP (NNP _) (NNP a) (POS '))
          (NN thing) (NN _))))
    (, ,)
    (VP (VBZ Andrew))
    (. !) ('' '')))

parataxis(Andrew-9, jist-2)
nn(a-4, _-3)
poss(_-7, a-4)
nn(_-7, thing-6)
dobj(jist-2, _-7)
root(ROOT-0, Andrew-9)

(ROOT
  (S (`` ``)
    (NP (NNP God))
    (VP (VBD was)
      (S
        (VP (VBG wi) ('' ')
          (NP (FW ye) (FW i))
          ('' ')
          (NP
            (NP (DT the) (NN prison))
            (, ,)
            (NP (NNP Dawtie))))))
    (. !) ('' '')))

nsubj(was-3, God-2)
root(ROOT-0, was-3)
xcomp(was-3, wi-4)
nn(i-7, ye-6)
dobj(wi-4, i-7)
det(prison-10, the-9)
dobj(wi-4, prison-10)
appos(prison-10, Dawtie-12)

(ROOT
  (S (`` ``)
    (VP (VB Ay))
    (. !)))

root(ROOT-0, Ay-2)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP like)
      (ADVP (RBR better))
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP
                (NP (NNP wi) (POS '))
                (NN Him))
              (ADVP (RB here)))))))
    (. !) ('' '')))

cc(like-3, But-1)
nsubj(like-3, I-2)
nsubj(Him-9, I-2)
root(ROOT-0, like-3)
advmod(like-3, better-4)
aux(Him-9, to-5)
cop(Him-9, be-6)
poss(Him-9, wi-7)
xcomp(like-3, Him-9)
advmod(Him-9, here-10)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP An) (POS '))
      (NN ye))
    (VP (MD may)
      (VP (VB be)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP He))
              (VP (VBZ likes)
                (ADVP (RBR better))
                (S
                  (VP (TO to)
                    (VP (VB ha'e)
                      (NP (PRP ye))
                      (ADVP (RB here)))))))))))
    (. !) ('' '')))

poss(ye-4, An-2)
nsubj(sure-7, ye-4)
aux(sure-7, may-5)
cop(sure-7, be-6)
root(ROOT-0, sure-7)
nsubj(likes-9, He-8)
nsubj(ha'e-12, He-8)
ccomp(sure-7, likes-9)
advmod(likes-9, better-10)
aux(ha'e-12, to-11)
xcomp(likes-9, ha'e-12)
dobj(ha'e-12, ye-13)
advmod(ha'e-12, here-14)

(ROOT
  (NP (NNP rejoined) (NNP Andrew) (. .)))

nn(Andrew-2, rejoined-1)
root(ROOT-0, Andrew-2)

(ROOT
  (NP (NNP CHAPTER) (NNP XXXVI) (. .)))

nn(XXXVI-2, CHAPTER-1)
root(ROOT-0, XXXVI-2)

(ROOT
  (S
    (NP (NNP AGAIN) (NNP THE))
    (VP (VBP GOBLET))
    (. .)))

nn(THE-2, AGAIN-1)
nsubj(GOBLET-3, THE-2)
root(ROOT-0, GOBLET-3)

(ROOT
  (S
    (NP (DT The) (JJ next) (NN day) (NN Alexa))
    (VP (VBD set)
      (S
        (NP (NNP Dawtie))
        (VP (TO to)
          (VP (VB search)
            (NP (DT the) (NN house))
            (ADVP (RB yet) (RB again)
              (PP (IN for)
                (NP (DT the) (VBG missing) (NN goblet))))))))
    (. .)))

det(Alexa-4, The-1)
amod(Alexa-4, next-2)
nn(Alexa-4, day-3)
nsubj(set-5, Alexa-4)
root(ROOT-0, set-5)
dobj(set-5, Dawtie-6)
nsubj(search-8, Dawtie-6)
aux(search-8, to-7)
xcomp(set-5, search-8)
det(house-10, the-9)
dobj(search-8, house-10)
advmod(again-12, yet-11)
advmod(search-8, again-12)
det(goblet-16, the-14)
amod(goblet-16, missing-15)
prep_for(again-12, goblet-16)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD must)
      (VP (VB be)
        (ADVP (RB somewhere))))
    (. !) ('' '')))

nsubj(be-4, It-2)
aux(be-4, must-3)
root(ROOT-0, be-4)
advmod(be-4, somewhere-5)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (VBP are)
        (VP (VBN beset)
          (PP (IN with)
            (NP (DT an) (JJ absolute) (NN contradiction))))))
    (: :)
    (S
      (NP (DT the) (NN thing))
      (VP (MD ca) (RB n't)
        (VP (VB be)
          (PP (IN in)
            (NP (DT the) (NN house))))))
    (. !)))

nsubjpass(beset-4, We-2)
auxpass(beset-4, are-3)
root(ROOT-0, beset-4)
det(contradiction-8, an-6)
amod(contradiction-8, absolute-7)
prep_with(beset-4, contradiction-8)
det(thing-11, the-10)
nsubj(be-14, thing-11)
aux(be-14, ca-12)
neg(be-14, n't-13)
parataxis(beset-4, be-14)
det(house-17, the-16)
prep_in(be-14, house-17)

(ROOT
  (S (CC and)
    (NP (PRP it))
    (VP (MD must)
      (VP (VB be)
        (PP (IN in)
          (NP (DT the) (NN house)))))
    (. !) ('' '')))

cc(be-4, and-1)
nsubj(be-4, it-2)
aux(be-4, must-3)
root(ROOT-0, be-4)
det(house-7, the-6)
prep_in(be-4, house-7)

(ROOT
  (SINV (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP we))
          (VP (VBP do))))
      (VP (VBP find)
        (NP (PRP it))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP (NNP Dawtie))
      (, ,) (`` ``)
      (S
        (NP
          (NP (NN folk))
          (SBAR
            (S
              (VP (MD 'll)
                (VP (VB say)
                  (NP (PRP them))
                  (`` `)
                  (PP (IN at))))))
          (SBAR
            (S
              (VP (MD could)
                (VP (VB hide))))))
        (VP (MD could)
          (ADVP (RB weel))
          (VP (VB seek)))))
    (. !)))

mark(do-4, If-2)
nsubj(do-4, we-3)
csubj(find-5, do-4)
ccomp(returned-9, find-5)
dobj(find-5, it-6)
root(ROOT-0, returned-9)
nsubj(returned-9, Dawtie-10)
prep_at(say-15, folk-13)
nsubj(seek-23, folk-13)
aux(say-15, 'll-14)
rcmod(folk-13, say-15)
dobj(say-15, them-16)
aux(hide-20, could-19)
rcmod(folk-13, hide-20)
aux(seek-23, could-21)
advmod(seek-23, weel-22)
dep(Dawtie-10, seek-23)

(ROOT
  (S
    (NP
      (NP (NNP I) (NNP s) (POS '))
      (NN luik) (NN naegait))
    (VP (VBP wantin) ('' ')
      (NP (PRP you))
      (, ,)
      (ADVP (RB mem)))
    (. !) ('' '')))

nn(s-2, I-1)
poss(naegait-5, s-2)
nn(naegait-5, luik-4)
nsubj(wantin-6, naegait-5)
root(ROOT-0, wantin-6)
dobj(wantin-6, you-8)
advmod(wantin-6, mem-10)

(ROOT
  (S
    (S
      (NP (DT The) (NN study))
      (VP (VBD was)
        (ADJP (JJ bare)
          (PP (IN of)
            (NP (NNS books))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJ empty) (NNS shelves))
      (VP (VBD gave)
        (NP
          (NP (DT no) (NN hint))
          (PP (IN of)
            (NP (NN concealment)))
          (SBAR
            (S
              (NP (PRP They))
              (VP (VBD stood)
                (PP (IN in)
                  (NP (PRP$ its) (NNS dreariness)))
                (S
                  (VP (VBG looking)
                    (ADVP (RB vaguely) (RB round))
                    (NP (PRP them))))))))))
    (. .)))

det(study-2, The-1)
nsubj(bare-4, study-2)
cop(bare-4, was-3)
root(ROOT-0, bare-4)
prep_of(bare-4, books-6)
det(shelves-11, the-9)
amod(shelves-11, empty-10)
nsubj(gave-12, shelves-11)
conj_and(bare-4, gave-12)
neg(hint-14, no-13)
dobj(gave-12, hint-14)
prep_of(hint-14, concealment-16)
nsubj(stood-18, They-17)
rcmod(hint-14, stood-18)
poss(dreariness-21, its-20)
prep_in(stood-18, dreariness-21)
xcomp(stood-18, looking-22)
advmod(round-24, vaguely-23)
advmod(looking-22, round-24)
dobj(looking-22, them-25)

(ROOT
  (SINV (`` ``)
    (S
      (INTJ (UH Did))
      (NP (PRP it))
      (ADVP (RB ever))
      (VP (VBD come)
        (PP (TO to)
          (NP (PRP ye)))
        (, ,)
        (ADVP (RB mem))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Dawtie))
      (, ,) (`` ``)
      (S
        (S
          (NP
            (NP
              (NP (DT that))
              (NP (DT a) (NN minute)))
            (CC or)
            (NP (NN twa)))
          (VP (VBN passed)
            (PP (IN between)
              (NP
                (NP (NNP Mr.) (NNP Crawford) (NNP comin) (POS '))
                (NN doon)))
            (NP
              (NP (DT the) (NN stair) (NN wi) (POS '))
              (NN you))))
        (, ,)
        (CC and)
        (S
          (NP (PRP me))
          (VP (VBD gaein) ('' ')
            (ADVP (RB up)
              (PP (TO to)
                (NP (DT the) (NN maister))))))))
    (. ?)))

discourse(come-5, Did-2)
nsubj(come-5, it-3)
advmod(come-5, ever-4)
ccomp(said-12, come-5)
prep_to(come-5, ye-7)
advmod(come-5, mem-9)
root(ROOT-0, said-12)
nsubj(said-12, Dawtie-13)
nsubj(passed-21, that-16)
det(minute-18, a-17)
dep(that-16, minute-18)
conj_or(that-16, twa-20)
nsubj(passed-21, twa-20)
dep(Dawtie-13, passed-21)
nn(comin-25, Mr.-23)
nn(comin-25, Crawford-24)
poss(doon-27, comin-25)
prep_between(passed-21, doon-27)
det(wi-30, the-28)
nn(wi-30, stair-29)
poss(you-32, wi-30)
dobj(passed-21, you-32)
nsubj(gaein-36, me-35)
dep(Dawtie-13, gaein-36)
conj_and(passed-21, gaein-36)
advmod(gaein-36, up-38)
det(maister-41, the-40)
prep_to(up-38, maister-41)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBD gaed)
          (NP (JJ intil) (DT the) (NN room)))))
    (PRN (, ,)
      (S
        (S
          (S
            (NP (PRP he))
            (VP (VBD lay)
              (S
                (NP (NNP pantin) (POS '))
                (VP (VBG i) ('' ')
                  (NP (DT the) (NN bed))))))
          (: ;)
          (CC but)
          (S
            (SBAR (IN as)
              (S
                (NP (PRP I))
                (VP (VBP broodit)
                  (S
                    (NP
                      (NP (NNP upo) (POS '))
                      (NN ilka) (NN thing) (NN alane))
                    (VP (VBG i) ('' ')
                      (NP (DT the) (NN prison)))))))
            (, ,)
            (NP (PRP he))
            (VP (VBP cam)
              (VP (VB afore)
                (NP (PRP me))))))
        (, ,)
        (S
          (NP (EX there))
          (VP (VBP i) ('' ')
            (NP (DT the) (NN bed))
            (, ,)
            (PP (IN as)
              (NP
                (NP (NN gien))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN gotten)
                        (NP
                          (NP
                            (NP (JJ oot) (NN o) (POS '))
                            (`` `) (NNS t))
                          (, ,)
                          (CC and)
                          (NP (JJ hidden) (NN awa))
                          ('' '))
                        (NP (DT the) (NN cup))))))))))
        (, ,)
        (CC and)
        (SQ (VBD was)
          (NP (NN jist))
          (VP (VBN gotten)
            (NP
              (NP (NNP intil) (POS '))
              (NN t))
            (ADVP (RB again)))))
      (, ,))
    (NP (DT the) (JJ same) (NN moment) (NN I))
    (VP (VBP cam)
      (PRT (RP in)))
    (. .) ('' '')))

advmod(gaed-3, When-1)
nsubj(gaed-3, I-2)
advcl(cam-73, gaed-3)
amod(room-6, intil-4)
det(room-6, the-5)
dobj(gaed-3, room-6)
nsubj(lay-9, he-8)
parataxis(cam-73, lay-9)
nsubj(i-12, pantin-10)
dep(lay-9, i-12)
det(bed-15, the-14)
dobj(i-12, bed-15)
mark(broodit-20, as-18)
nsubj(broodit-20, I-19)
advcl(cam-32, broodit-20)
poss(alane-25, upo-21)
nn(alane-25, ilka-23)
nn(alane-25, thing-24)
nsubj(i-26, alane-25)
dep(broodit-20, i-26)
det(prison-29, the-28)
dobj(i-26, prison-29)
nsubj(cam-32, he-31)
conj_but(lay-9, cam-32)
parataxis(cam-73, cam-32)
xcomp(cam-32, afore-33)
dobj(afore-33, me-34)
expl(i-37, there-36)
ccomp(lay-9, i-37)
conj_but(lay-9, i-37)
parataxis(cam-73, i-37)
det(bed-40, the-39)
dobj(i-37, bed-40)
nsubj(i-37, bed-40)
prep_as(i-37, gien-43)
nsubj(gotten-46, he-44)
aux(gotten-46, had-45)
rcmod(gien-43, gotten-46)
amod(o-48, oot-47)
poss(t-51, o-48)
iobj(gotten-46, t-51)
amod(awa-55, hidden-54)
iobj(gotten-46, awa-55)
conj_and(t-51, awa-55)
det(cup-58, the-57)
dobj(gotten-46, cup-58)
auxpass(gotten-63, was-61)
nsubjpass(gotten-63, jist-62)
conj_and(lay-9, gotten-63)
parataxis(cam-73, gotten-63)
poss(t-66, intil-64)
dobj(gotten-63, t-66)
advmod(gotten-63, again-67)
det(I-72, the-69)
amod(I-72, same-70)
nn(I-72, moment-71)
nsubj(cam-73, I-72)
root(ROOT-0, cam-73)
prt(cam-73, in-74)

(ROOT
  (S (`` ``)
    (NP (NNP Dying) (NNS people))
    (VP (MD will)
      (VP (VB do)
        (NP (JJ strange) (NNS things))))
    (. !) ('' '')))

nn(people-3, Dying-2)
nsubj(do-5, people-3)
aux(do-5, will-4)
root(ROOT-0, do-5)
amod(things-7, strange-6)
dobj(do-5, things-7)

(ROOT
  (S
    (VP (VBD rejoined)
      (NP (PRP$ her) (NN mistress)))
    (. .)))

root(ROOT-0, rejoined-1)
poss(mistress-3, her-2)
dobj(rejoined-1, mistress-3)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP it))
    (VP (VBZ brings)
      (NP (PRP us))
      (NP
        (QP (DT no) (IN nearer) (DT the) (NN cup))))
    (. !) ('' '')))

cc(brings-4, But-2)
nsubj(brings-4, it-3)
root(ROOT-0, brings-4)
iobj(brings-4, us-5)
quantmod(cup-9, no-6)
quantmod(cup-9, nearer-7)
quantmod(cup-9, the-8)
dobj(brings-4, cup-9)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN surer))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP are)))))
    (, ,)
    (X (DT the) (JJR better))
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB seek)))
    (. !) ('' '')))

det(surer-3, The-2)
nsubj(seek-11, surer-3)
nsubj(are-5, we-4)
rcmod(surer-3, are-5)
det(better-8, the-7)
dep(seek-11, better-8)
nsubj(seek-11, we-9)
aux(seek-11, 'll-10)
root(ROOT-0, seek-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Dawtie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Dawtie-2)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VBD began))
        (, ,)
        (CC and)
        (VP (VBD went)
          (PP (IN over)
            (NP (DT the) (NN room)))
          (ADVP (RB thoroughly)))))
    (: --)
    (S
      (S
        (VP (VBG looking)
          (ADVP (RB everywhere))))
      (NP (PRP they))
      (VP (MD could)
        (VP (VB think)
          (PP (IN of)))))
    (. .)))

nsubj(began-2, They-1)
nsubj(went-5, They-1)
root(ROOT-0, began-2)
conj_and(began-2, went-5)
det(room-8, the-7)
prep_over(went-5, room-8)
advmod(went-5, thoroughly-9)
dep(think-15, looking-11)
advmod(looking-11, everywhere-12)
nsubj(think-15, they-13)
aux(think-15, could-14)
parataxis(began-2, think-15)
prep(think-15, of-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD had)
      (ADVP (DT all)
        (CC but))
      (VP (VBN given)
        (S
          (NP (PRP it))
          (ADVP (RB up)))
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN on)
                (NP (RB elsewhere))))))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NNP Dawtie))
            (, ,)
            (S
              (VP
                (VP (VBG standing)
                  (ADVP (RB again))
                  (PP (IN in)
                    (NP (DT the) (NN middle))))
                (CC and)
                (VP (VBG looking) (IN about)
                  (PP (IN in)
                    (NP
                      (NP (DT a) (NN sort))
                      (PP (IN of)
                        (NP (JJ unconscious) (NNS hopelessness))))))))
            (, ,)
            (VP
              (VP (VBD found)
                (NP (PRP$ her) (NNS eyes))
                (PP (IN on)
                  (NP (DT the) (NN mantel-shelf))))
              (, ,)
              (CC and)
              (VP (VBD went)
                (CC and)
                (VBD laid)
                (NP (PRP$ her) (NN hand))
                (PP (IN upon)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(given-5, They-1)
nsubj(go-9, They-1)
aux(given-5, had-2)
mwe(but-4, all-3)
advmod(given-5, but-4)
root(ROOT-0, given-5)
dep(given-5, it-6)
advmod(it-6, up-7)
aux(go-9, to-8)
xcomp(given-5, go-9)
prep(go-9, on-10)
pobj(on-10, elsewhere-11)
advmod(found-31, when-13)
nsubj(found-31, Dawtie-14)
nsubj(went-39, Dawtie-14)
vmod(found-31, standing-16)
advmod(standing-16, again-17)
det(middle-20, the-19)
prep_in(standing-16, middle-20)
conj_and(standing-16, looking-22)
vmod(found-31, looking-22)
dep(looking-22, about-23)
det(sort-26, a-25)
prep_in(looking-22, sort-26)
amod(hopelessness-29, unconscious-28)
prep_of(sort-26, hopelessness-29)
advcl(given-5, found-31)
poss(eyes-33, her-32)
dobj(found-31, eyes-33)
det(mantel-shelf-36, the-35)
prep_on(found-31, mantel-shelf-36)
advcl(given-5, went-39)
conj_and(found-31, went-39)
conj_and(found-31, laid-41)
conj_and(went-39, laid-41)
poss(hand-43, her-42)
dobj(went-39, hand-43)
prep_upon(went-39, it-45)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD was)
          (PP (IN of)
            (NP (NN wood)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (VBD fancied)
          (S
            (NP (PRP it))
            (ADJP (DT a) (RB little) (JJ loose))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (MD could) (RB not)
        (VP (VB move)
          (NP (PRP it)))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
prep_of(was-2, wood-4)
nsubj(fancied-8, she-7)
conj_and(was-2, fancied-8)
nsubj(loose-12, it-9)
det(loose-12, a-10)
advmod(loose-12, little-11)
xcomp(fancied-8, loose-12)
nsubj(move-18, she-15)
aux(move-18, could-16)
neg(move-18, not-17)
conj_but(was-2, move-18)
dobj(move-18, it-19)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP Andrew))
        (VP (VBZ comes))))
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB get)
        (S
          (NP (PRP him))
          (VP (TO to)
            (VP (VB examine)
              (NP (PRP it)))))))
    (. !) ('' '')))

advmod(comes-4, When-2)
nsubj(comes-4, Andrew-3)
advcl(get-7, comes-4)
nsubj(get-7, we-5)
aux(get-7, 'll-6)
root(ROOT-0, get-7)
dobj(get-7, him-8)
nsubj(examine-10, him-8)
aux(examine-10, to-9)
xcomp(get-7, examine-10)
dobj(examine-10, it-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Alexa-2)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD came)
        (PP (IN in)
          (NP (DT the) (NN evening)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Alexa))
      (VP (VBD told)
        (NP (PRP him))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP they))
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBG doing))))))))
    (. .)))

nsubj(came-2, He-1)
root(ROOT-0, came-2)
det(evening-5, the-4)
prep_in(came-2, evening-5)
nsubj(told-9, Alexa-8)
conj_and(came-2, told-9)
dobj(told-9, him-10)
dobj(doing-15, what-11)
nsubj(doing-15, they-12)
aux(doing-15, had-13)
aux(doing-15, been-14)
dep(told-9, doing-15)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBN begged)
      (S
        (NP (PRP him))
        (VP (TO to)
          (VP
            (VP (VB get)
              (NP (NNS tools)))
            (, ,)
            (CC and)
            (VP (VB see)
              (SBAR (IN whether)
                (S
                  (NP (EX there))
                  (VP (VBD was) (RB not)
                    (NP (DT a) (NN space))
                    (PP (IN under)
                      (NP (DT the) (NN mantel-shelf)))))))))))
    (. .)))

nsubj(begged-2, She-1)
root(ROOT-0, begged-2)
dobj(begged-2, him-3)
nsubj(get-5, him-3)
nsubj(see-9, him-3)
aux(get-5, to-4)
xcomp(begged-2, get-5)
dobj(get-5, tools-6)
xcomp(begged-2, see-9)
conj_and(get-5, see-9)
mark(was-12, whether-10)
expl(was-12, there-11)
ccomp(see-9, was-12)
neg(was-12, not-13)
det(space-15, a-14)
nsubj(was-12, space-15)
det(mantel-shelf-18, the-17)
prep_under(was-12, mantel-shelf-18)

(ROOT
  (S (CC But)
    (NP
      (NP (NNP Andrew))
      (, ,)
      (VP (VBN accustomed)
        (S
          (VP (TO to)
            (VP (VB ponder)
              (NP (NNS contrivances))
              (PP (IN with)
                (NP (NNP Sandy)))))))
      (, ,))
    (VP (MD would)
      (VP (VB have)
        (NP (DT a) (JJ good) (NN look))
        (PP (IN at)
          (NP (PRP it)))
        (ADVP
          (ADVP (RB first))
          (SBAR
            (S
              (NP (PRP He))
              (VP (VBD came)
                (ADVP (RB presently))
                (PP (IN upon)
                  (NP (DT a) (JJ clever) (JJ little) (NN spring)))
                (, ,)
                (S
                  (VP (VBG pressing)
                    (NP
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (PRP he))
                          (VP (MD could)
                            (VP (VB lift)
                              (NP (DT the) (NN shelf))))))
                      (: :)
                      (NP
                        (NP
                          (NP (RB there))
                          (PP (IN under)
                            (NP (PRP it))))
                        (, ,)
                        (ADJP (JJ sure) (JJ enough))
                        (, ,)
                        (PP (IN in)
                          (NP
                            (NP (JJ rich) (NN response))
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN candle))
                                (SBAR
                                  (S
                                    (NP (PRP he))
                                    (VP (VBD held))))))))
                        (, ,)
                        (VP (VBN flashed)
                          (NP
                            (NP (DT the) (NNS gems))
                            (PP (IN of)
                              (NP
                                (NP (DT the)
                                  (ADJP (RB curiously) (JJ wrought))
                                  (NN chalice))
                                (PP (IN of)
                                  (NP (NN gold)))))))))))))))))
    (. !)))

cc(have-12, But-1)
nsubj(have-12, Andrew-2)
vmod(Andrew-2, accustomed-4)
aux(ponder-6, to-5)
xcomp(accustomed-4, ponder-6)
dobj(ponder-6, contrivances-7)
prep_with(ponder-6, Sandy-9)
aux(have-12, would-11)
root(ROOT-0, have-12)
det(look-15, a-13)
amod(look-15, good-14)
dobj(have-12, look-15)
prep_at(have-12, it-17)
advmod(have-12, first-18)
nsubj(came-20, He-19)
advcl(first-18, came-20)
advmod(came-20, presently-21)
det(spring-26, a-23)
amod(spring-26, clever-24)
amod(spring-26, little-25)
prep_upon(came-20, spring-26)
xcomp(came-20, pressing-28)
dobj(lift-32, which-29)
nsubj(lift-32, he-30)
aux(lift-32, could-31)
dep(there-36, lift-32)
det(shelf-34, the-33)
dobj(lift-32, shelf-34)
dobj(pressing-28, there-36)
prep_under(there-36, it-38)
amod(enough-41, sure-40)
amod(there-36, enough-41)
amod(response-45, rich-44)
prep_in(there-36, response-45)
det(candle-48, the-47)
prep_to(response-45, candle-48)
nsubj(held-50, he-49)
rcmod(candle-48, held-50)
vmod(there-36, flashed-52)
det(gems-54, the-53)
dobj(flashed-52, gems-54)
det(chalice-59, the-56)
advmod(wrought-58, curiously-57)
amod(chalice-59, wrought-58)
prep_of(gems-54, chalice-59)
prep_of(chalice-59, gold-61)

(ROOT
  (S
    (S
      (NP (NNP Alexa))
      (VP (VBD gave)
        (NP (DT a) (NN cry))))
    (, ,)
    (NP (NNP Andrew))
    (VP (VBD drew)
      (NP
        (NP (DT a) (JJ deep) (NN breath))
        (, ,)
        (NP
          (NP (NNP Dawtie))
          (VP (VBN laughed)
            (PP (IN like)
              (NP (DT a) (NN child)))))))
    (. .)))

nsubj(gave-2, Alexa-1)
ccomp(drew-7, gave-2)
det(cry-4, a-3)
dobj(gave-2, cry-4)
nsubj(drew-7, Andrew-6)
root(ROOT-0, drew-7)
det(breath-10, a-8)
amod(breath-10, deep-9)
dobj(drew-7, breath-10)
appos(breath-10, Dawtie-12)
vmod(Dawtie-12, laughed-13)
det(child-16, a-15)
prep_like(laughed-13, child-16)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB How))
        (S
          (NP (PRP they))
          (VP (VBD gazed)
            (PP (IN on)
              (NP (PRP it))))))
      (, ,)
      (S
        (VP (VBN passed)
          (NP (PRP it))
          (PP (IN from)
            (NP (CD one)))
          (PP (TO to)
            (NP (DT the) (JJ other)))))
      (, ,)
      (VP (VBN pored)
        (PP (IN over)
          (NP (DT the) (NNS gems)))))
    (, ,)
    (CC and)
    (S
      (PP (IN over)
        (NP
          (NP (DT the) (VBN raised) (NN work))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD inclosed)
                (NP (PRP them)))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP need) (RB not)
        (VP (VB tell))))
    (. .)))

advmod(gazed-3, How-1)
nsubj(gazed-3, they-2)
dep(pored-15, gazed-3)
prep_on(gazed-3, it-5)
dep(pored-15, passed-7)
dobj(passed-7, it-8)
prep_from(passed-7, one-10)
det(other-13, the-12)
prep_to(passed-7, other-13)
root(ROOT-0, pored-15)
det(gems-18, the-17)
prep_over(pored-15, gems-18)
det(work-24, the-22)
amod(work-24, raised-23)
nsubj(inclosed-26, work-24)
prep_over(need-30, work-24)
rcmod(work-24, inclosed-26)
dobj(inclosed-26, them-27)
nsubj(need-30, I-29)
conj_and(pored-15, need-30)
neg(need-30, not-31)
dep(need-30, tell-32)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB talk)
            (PP (IN about)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD was)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN done)
                            (PP (IN with)
                              (NP (PRP it)))))))))))))))
    (. .)))

nsubj(began-2, They-1)
nsubj(talk-4, They-1)
root(ROOT-0, began-2)
aux(talk-4, to-3)
xcomp(began-2, talk-4)
nsubj(was-7, what-6)
nsubjpass(done-10, what-6)
prepc_about(talk-4, was-7)
aux(done-10, to-8)
auxpass(done-10, be-9)
xcomp(was-7, done-10)
prep_with(done-10, it-12)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD will)
      (VP (VB send)
        (NP (PRP it))
        (PP (TO to)
          (NP (DT the) (NN earl)))))
    (. !) ('' '')))

nsubj(send-4, We-2)
aux(send-4, will-3)
root(ROOT-0, send-4)
dobj(send-4, it-5)
det(earl-8, the-7)
prep_to(send-4, earl-8)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Alexa-2)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No)))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP Andrew))
        (: ;) (`` ``)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD would)
              (VP (VB be)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP (PRP ourselves)))))))))))
    (NP
      (NP (NNS judges))
      (PP (IN in)
        (NP (DT the) (NN case))))
    (. !)))

dep(said-5, No-2)
root(ROOT-0, said-5)
dobj(said-5, Andrew-6)
nsubj(be-11, Andrew-6)
nsubj(make-13, Andrew-6)
aux(be-11, would-10)
rcmod(Andrew-6, be-11)
aux(make-13, to-12)
xcomp(be-11, make-13)
dobj(make-13, ourselves-14)
nsubj(said-5, judges-15)
det(case-18, the-17)
prep_in(judges-15, case-18)

(ROOT
  (S
    (S
      (NP (PRP$ Your) (NN father))
      (VP (MD must)
        (VP (VB have)
          (VP (VBN paid)
            (NP
              (NP (NN money))
              (PP (IN for)
                (NP (PRP it))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD gave)
        (NP (PRP it))
        (PP (TO to)
          (NP (NNP Mr.) (NNP Crawford)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Mr.) (NNP Crawford))
      (VP (MD must) (RB not)
        (VP (VB be)
          (VP (VBN robbed)))))
    (. !) ('' '')))

poss(father-2, Your-1)
nsubj(paid-5, father-2)
aux(paid-5, must-3)
aux(paid-5, have-4)
root(ROOT-0, paid-5)
dobj(paid-5, money-6)
prep_for(money-6, it-8)
nsubj(gave-11, he-10)
conj_and(paid-5, gave-11)
dobj(gave-11, it-12)
nn(Crawford-15, Mr.-14)
prep_to(gave-11, Crawford-15)
nn(Crawford-19, Mr.-18)
nsubjpass(robbed-23, Crawford-19)
aux(robbed-23, must-20)
neg(robbed-23, not-21)
auxpass(robbed-23, be-22)
conj_and(paid-5, robbed-23)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Stop))
    (, ,)
    (NP (NNP Andrew))
    (. !) ('' '')))

root(ROOT-0, Stop-2)
dep(Stop-2, Andrew-4)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Alexa-2)

(ROOT
  (S (`` ``)
    (NP
      (NP (NN Everything))
      (PP (IN in)
        (NP (DT the) (JJ next) (NN room))))
    (VP (VBD was)
      (VP (VBN left)
        (PP (TO to)
          (NP (PRP$ my) (NN cousin)))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT the) (NN library))
            (PP (IN in)
              (NP
                (NP (DT this))
                (: ;)
                (SBAR
                  (WHNP (WDT whatever))
                  (S
                    (ADVP (RB else))
                    (VP (VBD was)
                      (VP (VBN left)
                        (SBAR
                          (S
                            (NP (PRP him))
                            (VP (VBD was)
                              (VP
                                (ADVP (RB individually))
                                (VBN described)))))))))))))))
    (. .)))

nsubjpass(left-8, Everything-2)
det(room-6, the-4)
amod(room-6, next-5)
prep_in(Everything-2, room-6)
auxpass(left-8, was-7)
root(ROOT-0, left-8)
poss(cousin-11, my-10)
prep_to(left-8, cousin-11)
det(library-15, the-14)
prep_with(left-8, library-15)
prep_in(library-15, this-17)
nsubjpass(left-22, whatever-19)
advmod(left-22, else-20)
auxpass(left-22, was-21)
rcmod(this-17, left-22)
nsubjpass(described-26, him-23)
auxpass(described-26, was-24)
advmod(described-26, individually-25)
ccomp(left-22, described-26)

(ROOT
  (S
    (NP (DT The) (NN cup))
    (VP
      (VP (VBD was)
        (ADVP (RB not)
          (PP (IN in)
            (NP (DT the) (JJ next) (NN room)))))
      (, ,)
      (CC and)
      (VP (VBD was) (RB not)
        (VP (VBN mentioned))))
    (. .)))

det(cup-2, The-1)
nsubj(was-3, cup-2)
nsubjpass(mentioned-13, cup-2)
root(ROOT-0, was-3)
neg(was-3, not-4)
det(room-8, the-6)
amod(room-8, next-7)
prep_in(not-4, room-8)
auxpass(mentioned-13, was-11)
neg(mentioned-13, not-12)
conj_and(was-3, mentioned-13)

(ROOT
  (S
    (NP (NNP Providence))
    (VP (VBZ has)
      (VP (VBN left)
        (S
          (NP (PRP us))
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (PRP it)))
              (SBAR (IN as)
                (S
                  (NP (PRP we))
                  (VP (MD may)
                    (VP (VB judge)
                      (ADVP (RB right)))))))))))
    (. .)))

nsubj(left-3, Providence-1)
aux(left-3, has-2)
root(ROOT-0, left-3)
dobj(left-3, us-4)
nsubj(do-6, us-4)
aux(do-6, to-5)
xcomp(left-3, do-6)
prep_with(do-6, it-8)
mark(judge-12, as-9)
nsubj(judge-12, we-10)
aux(judge-12, may-11)
advcl(do-6, judge-12)
advmod(judge-12, right-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD ought)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN taken)
                    (PP
                      (PP (TO to)
                        (NP (NNP Borland) (NNP Hall)))
                      (: --)
                      (CC and)
                      (PP (IN by)
                        (NP (NNP Dawtie))))))))))))
    (. .) ('' '')))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(ought-4, it-3)
nsubjpass(taken-7, it-3)
nsubjpass(taken-7', it-3)
ccomp(think-2, ought-4)
aux(taken-7, to-5)
auxpass(taken-7, be-6)
xcomp(ought-4, taken-7)
xcomp(ought-4, taken-7')
conj_and(taken-7, taken-7')
nn(Hall-10, Borland-9)
prep_to(taken-7, Hall-10)
agent(taken-7', Dawtie-14)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Well))
    (. !)))

root(ROOT-0, Well-2)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD will)
      (VP (VB mention)
        (SBAR (IN that)
          (S
            (NP (PRP$ your) (NN father))
            (VP (VBD bought)
              (NP (PRP it)))))))
    (. ?) ('' '')))

nsubj(mention-3, She-1)
aux(mention-3, will-2)
root(ROOT-0, mention-3)
mark(bought-7, that-4)
poss(father-6, your-5)
nsubj(bought-7, father-6)
ccomp(mention-3, bought-7)
dobj(bought-7, it-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will) (RB not)
      (VP (VB take)
        (NP
          (NP (DT a) (NN shilling))
          (PP (IN for)
            (NP (PRP it))))))
    (. !) ('' '')))

nsubj(take-5, I-2)
aux(take-5, will-3)
neg(take-5, not-4)
root(ROOT-0, take-5)
det(shilling-7, a-6)
dobj(take-5, shilling-7)
prep_for(shilling-7, it-9)

(ROOT
  (FRAG (`` ``)
    (ADJP (RB Is) (RB not)
      (SBAR (IN that)
        (S
          (SBAR (IN because)
            (S
              (NP (PRP you))
              (VP (VBP are) (RB not)
                (ADJP (RB quite) (JJ sure)))))
          (NP (PRP you))
          (VP (VBP have)
            (NP (DT the) (NN right)
              (S
                (VP (TO to)
                  (VP (VB dispose)
                    (PP (IN of)
                      (NP (PRP it)))))))))))
    (. ?) ('' '')))

advmod(not-3, Is-2)
root(ROOT-0, not-3)
mark(have-12, that-4)
mark(sure-10, because-5)
nsubj(sure-10, you-6)
cop(sure-10, are-7)
neg(sure-10, not-8)
advmod(sure-10, quite-9)
advcl(have-12, sure-10)
nsubj(have-12, you-11)
ccomp(not-3, have-12)
det(right-14, the-13)
dobj(have-12, right-14)
aux(dispose-16, to-15)
vmod(right-14, dispose-16)
prep_of(dispose-16, it-18)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD would) (RB not)
      (VP (VB take)
        (NP
          (NP (DT the) (NN price))
          (PP (IN of)
            (NP (PRP it))))
        (SBAR (IN if)
          (S
            (NP (PRP$ my) (NN father))
            (VP (VBD had)
              (VP (VBN left)
                (NP (DT the) (NN cup))
                (ADVP (RB expressly))
                (PP (TO to)
                  (NP (PRP me)))))))))
    (. !) ('' '')))

nsubj(take-5, I-2)
aux(take-5, would-3)
neg(take-5, not-4)
root(ROOT-0, take-5)
det(price-7, the-6)
dobj(take-5, price-7)
prep_of(price-7, it-9)
mark(left-14, if-10)
poss(father-12, my-11)
nsubj(left-14, father-12)
aux(left-14, had-13)
advcl(take-5, left-14)
det(cup-16, the-15)
dobj(left-14, cup-16)
advmod(left-14, expressly-17)
prep_to(left-14, me-19)

(ROOT
  (S (`` ``)
    (SINV (VBD Had)
      (NP (PRP he))
      (VP (VBN done)
        (ADVP (RB so))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (VP (VB have)
        (NP
          (NP (DT a) (NN right))
          (SBAR
            (WHPP (TO to)
              (WHNP (WP what)))
            (S
              (NP (PRP he))
              (VP (VBD paid)
                (PP (IN for)
                  (NP (PRP it)))))))))
    (. .)))

aux(done-4, Had-2)
nsubj(done-4, he-3)
dep(have-9, done-4)
advmod(done-4, so-5)
nsubj(have-9, you-7)
aux(have-9, would-8)
root(ROOT-0, have-9)
det(right-11, a-10)
dobj(have-9, right-11)
prep_to(paid-15, right-11)
nsubj(paid-15, he-14)
rcmod(right-11, paid-15)
prep_for(paid-15, it-17)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB give)
          (NP (DT the) (NN earl))
          (NP
            (NP (DT the) (NN choice))
            (PP (IN of)
              (S
                (VP (VBG securing)
                  (NP (PRP it)))))))))
    (, ,)
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT a) (NN service))
          (VP (VBN rendered)
            (NP (PRP him))))))
    (. .)))

aux(give-2, To-1)
dep(service-14, give-2)
det(earl-4, the-3)
iobj(give-2, earl-4)
det(choice-6, the-5)
dobj(give-2, choice-6)
prepc_of(choice-6, securing-8)
dobj(securing-8, it-9)
aux(service-14, would-11)
cop(service-14, be-12)
det(service-14, a-13)
root(ROOT-0, service-14)
vmod(service-14, rendered-15)
dobj(rendered-15, him-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBD were)
          (ADJP (RB too) (JJ poor)
            (S
              (VP (TO to)
                (VP (VB buy)
                  (NP (PRP it)))))))))
    (, ,)
    (NP (DT the) (NN thing))
    (VP (MD would)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN considered)))))))
    (. .) ('' '')))

mark(poor-5, If-1)
nsubj(poor-5, he-2)
nsubj(buy-7, he-2)
cop(poor-5, were-3)
advmod(poor-5, too-4)
advcl(have-13, poor-5)
aux(buy-7, to-6)
xcomp(poor-5, buy-7)
dobj(buy-7, it-8)
det(thing-11, the-10)
nsubj(have-13, thing-11)
nsubjpass(considered-16, thing-11)
aux(have-13, would-12)
root(ROOT-0, have-13)
aux(considered-16, to-14)
auxpass(considered-16, be-15)
xcomp(have-13, considered-16)

(ROOT
  (S (`` ``)
    (NP (NN Nothing))
    (VP (MD could)
      (VP (VB make)
        (S
          (NP (PRP me))
          (VP (VB touch)
            (NP (NN money))
            (PP (IN for)
              (NP (PRP it)))))))
    (. .)))

nsubj(make-4, Nothing-2)
aux(make-4, could-3)
root(ROOT-0, make-4)
nsubj(touch-6, me-5)
ccomp(make-4, touch-6)
dobj(touch-6, money-7)
prep_for(touch-6, it-9)

(ROOT
  (S
    (NP (NNP George))
    (VP (MD would)
      (ADVP (RB never))
      (VP (VB doubt)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD had)
              (VP (VBN concealed)
                (NP (PRP it))
                (PP (IN in)
                  (NP (NN order)))
                (S
                  (VP (TO to)
                    (VP (VB trick)
                      (NP (PRP him))
                      (PRT (RP out))
                      (PP (IN of)
                        (NP (PRP it))))))))))))
    (. !) ('' '')))

nsubj(doubt-4, George-1)
aux(doubt-4, would-2)
neg(doubt-4, never-3)
root(ROOT-0, doubt-4)
nsubj(concealed-7, we-5)
aux(concealed-7, had-6)
ccomp(doubt-4, concealed-7)
dobj(concealed-7, it-8)
prep_in(concealed-7, order-10)
aux(trick-12, to-11)
vmod(concealed-7, trick-12)
dobj(trick-12, him-13)
prep_out_of(trick-12, it-16)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (MD will)
      (VP (VB think)
        (ADVP (IN so) (DT all))
        (NP (DT the) (JJ same))))
    (. .)))

nsubj(think-4, He-2)
aux(think-4, will-3)
root(ROOT-0, think-4)
advmod(think-4, so-5)
dep(so-5, all-6)
det(same-8, the-7)
dobj(think-4, same-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB satisfy)
        (NP
          (NP (PRP him))
          (, ,)
          (CC and)
          (NP (RB not) (DT a) (JJ few) (NN beside))
          (, ,))
        (SBAR (IN that)
          (S
            (NP (NNP Dawtie))
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP (VB have)
                    (VP (VBN been)
                      (VP (VBN convicted)))))))))))
    (. .)))

nsubj(satisfy-3, It-1)
aux(satisfy-3, will-2)
root(ROOT-0, satisfy-3)
dobj(satisfy-3, him-4)
neg(beside-10, not-7)
det(beside-10, a-8)
amod(beside-10, few-9)
dobj(satisfy-3, beside-10)
conj_and(him-4, beside-10)
mark(ought-14, that-12)
nsubj(ought-14, Dawtie-13)
nsubjpass(convicted-18, Dawtie-13)
ccomp(satisfy-3, ought-14)
aux(convicted-18, to-15)
aux(convicted-18, have-16)
auxpass(convicted-18, been-17)
xcomp(ought-14, convicted-18)

(ROOT
  (S
    (NP (DT The) (NN thing))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (NP
        (NP (NNP Mr.)
          (NP (NNP Crawford) (POS 's)))
        (: --)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ is))
              (, ,)
              (NP (PRP$ his)
                (ADJP (RB as) (RB not))
                (NN yours)))))))
    (. .)))

det(thing-2, The-1)
nsubj(Mr.-5, thing-2)
cop(Mr.-5, is-3)
advmod(Mr.-5, certainly-4)
root(ROOT-0, Mr.-5)
nsubj(is-10, Mr.-5)
poss(Mr.-5, Crawford-6)
rcmod(Mr.-5, is-10)
poss(yours-15, his-12)
advmod(not-14, as-13)
amod(yours-15, not-14)
dobj(is-10, yours-15)

(ROOT
  (S
    (S
      (NP (PRP$ Your) (NN father))
      (ADVP (RB undoubtedly))
      (VP (VBD meant)
        (S
          (NP (PRP him))
          (VP (TO to)
            (VP (VB have)
              (NP (DT the) (NN cup)))))))
    (: ;)
    (CC and)
    (S
      (NP (NNP God))
      (VP (MD would) (RB not)
        (VP (VB have)
          (NP (PRP you))
          (, ,)
          (SBAR (RB even)
            (S
              (VP (TO to)
                (VP
                  (VP (VB serve)
                    (NP (DT the) (NN right)))
                  (, ,)
                  (VP (VB take)
                    (NP
                      (NP (NN advantage))
                      (PP (IN of)
                        (NP (DT an) (NN accident))))))))))))
    (. .)))

poss(father-2, Your-1)
nsubj(meant-4, father-2)
advmod(meant-4, undoubtedly-3)
root(ROOT-0, meant-4)
dobj(meant-4, him-5)
nsubj(have-7, him-5)
aux(have-7, to-6)
xcomp(meant-4, have-7)
det(cup-9, the-8)
dobj(have-7, cup-9)
nsubj(have-15, God-12)
aux(have-15, would-13)
neg(have-15, not-14)
conj_and(meant-4, have-15)
dobj(have-15, you-16)
nsubj(serve-20, you-16)
advmod(serve-20, even-18)
aux(serve-20, to-19)
xcomp(have-15, serve-20)
det(right-22, the-21)
dobj(serve-20, right-22)
dep(serve-20, take-24)
dobj(take-24, advantage-25)
det(accident-28, an-27)
prep_of(advantage-25, accident-28)

(ROOT
  (S
    (S
      (SBAR
        (WHNP (WDT Whatever))
        (S
          (VP (MD ought)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN done)
                    (PP (IN with)
                      (NP (DT the) (NN cup))))))))))
      (, ,)
      (NP (NNP Mr.) (NNP Crawford))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (PRP it)))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (PRP$ his) (NN business)
          (S
            (VP (TO to)
              (VP (VB do)
                (ADVP (RB right)
                  (PP (IN in)
                    (NP (NN regard))))
                (PP (TO to)
                  (NP (PRP it)))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHNP (WDT whatever))
        (S
          (NP (NN advantage))
          (VP (MD may)
            (VP (VB be)
              (VP (VBN gained)
                (PP (IN by)
                  (S
                    (VP (VBG doing)
                      (NP (NN right))))))))))
      (, ,)
      (NP (NNP Mr.) (NNP Crawford))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT the) (NN chance))
                (PP (IN of)
                  (S
                    (VP (VBG gaining)
                      (NP (PRP it)))))))))))
    (. .)))

nsubj(ought-2, Whatever-1)
nsubjpass(done-5, Whatever-1)
advcl(ought-12, ought-2)
aux(done-5, to-3)
auxpass(done-5, be-4)
xcomp(ought-2, done-5)
det(cup-8, the-7)
prep_with(done-5, cup-8)
nn(Crawford-11, Mr.-10)
nsubj(ought-12, Crawford-11)
nsubj(do-14, Crawford-11)
root(ROOT-0, ought-12)
aux(do-14, to-13)
xcomp(ought-12, do-14)
dobj(do-14, it-15)
nsubj(business-20, it-17)
cop(business-20, is-18)
poss(business-20, his-19)
conj_and(ought-12, business-20)
aux(do-22, to-21)
vmod(business-20, do-22)
advmod(do-22, right-23)
prep_in(right-23, regard-25)
prep_to(do-22, it-27)
dobj(gained-34, whatever-30)
nsubjpass(gained-34, advantage-31)
aux(gained-34, may-32)
auxpass(gained-34, be-33)
advcl(ought-41, gained-34)
agent(gained-34, doing-36)
dobj(doing-36, right-37)
nn(Crawford-40, Mr.-39)
nsubj(ought-41, Crawford-40)
nsubj(have-43, Crawford-40)
conj_and(ought-12, ought-41)
aux(have-43, to-42)
xcomp(ought-41, have-43)
det(chance-45, the-44)
dobj(have-43, chance-45)
prepc_of(chance-45, gaining-47)
dobj(gaining-47, it-48)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VBZ deprive)
      (NP (PRP him))
      (PP (IN of)
        (NP
          (NP (DT the) (NN opportunity))
          (, ,)
          (SBAR
            (WHPP (TO to)
              (WHNP (WDT which)))
            (S
              (ADVP (IN at) (JJS least))
              (NP (PRP he))
              (VP (VBZ has)
                (NP
                  (NP (DT a) (NN right))
                  (, ,)
                  (PP (IN of)
                    (S
                      (VP
                        (VP (VBG doing)
                          (NP (NN justice)))
                        (, ,)
                        (CC and)
                        (VP (VBG delivering)
                          (NP (PRP$ his) (NN soul)))))))))))))
    (. ?) ('' '')))

aux(deprive-3, Would-1)
nsubj(deprive-3, you-2)
root(ROOT-0, deprive-3)
dobj(deprive-3, him-4)
det(opportunity-7, the-6)
prep_of(deprive-3, opportunity-7)
prep_to(has-14, opportunity-7)
advmod(has-14, at-11)
pobj(at-11, least-12)
nsubj(has-14, he-13)
rcmod(opportunity-7, has-14)
det(right-16, a-15)
dobj(has-14, right-16)
prepc_of(right-16, doing-19)
dobj(doing-19, justice-20)
prepc_of(right-16, delivering-23)
conj_and(doing-19, delivering-23)
poss(soul-25, his-24)
dobj(delivering-23, soul-25)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD would)
        (VP (VB have)
          (S
            (NP (PRP us))
            (VP (VB tell)
              (NP (DT the) (NN earl))
              (SBAR (IN that)
                (S
                  (NP (PRP$ his) (NN cup))
                  (VP (VBZ is)
                    (VP (VBN found))))))))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Mr.) (NNP Crawford))
      (VP (VBZ claims)
        (NP (PRP it))))
    (. ?) ('' '')))

nsubj(have-4, You-2)
aux(have-4, would-3)
root(ROOT-0, have-4)
nsubj(tell-6, us-5)
ccomp(have-4, tell-6)
det(earl-8, the-7)
dobj(tell-6, earl-8)
mark(found-13, that-9)
poss(cup-11, his-10)
nsubjpass(found-13, cup-11)
auxpass(found-13, is-12)
ccomp(tell-6, found-13)
nn(Crawford-17, Mr.-16)
nsubj(claims-18, Crawford-17)
conj_but(have-4, claims-18)
dobj(claims-18, it-19)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Alexa-2)

(ROOT
  (S (`` ``)
    (NP (NNP Andrew))
    (VP (MD would)
      (VP (VB have)
        (S
          (NP (PRP us))
          (VP
            (VP (VB take)
              (NP (PRP it))
              (PP (TO to)
                (NP (NNP Mr.) (NNP Crawford)))
              (PRN (, ,) ('' '')
                (SINV
                  (VP (VBD said))
                  (NP (NNP Dawtie)))
                (, ,) (`` ``)))
            (CC and)
            (VP (VB tell)
              (NP (PRP him))
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN earl))
                  (VP (VBZ has)
                    (NP
                      (NP (DT a) (NN claim))
                      (PP (TO to)
                        (NP (PRP it))))))))))))
    (. .) ('' '')))

nsubj(have-4, Andrew-2)
aux(have-4, would-3)
root(ROOT-0, have-4)
nsubj(take-6, us-5)
nsubj(tell-18, us-5)
ccomp(have-4, take-6)
dobj(take-6, it-7)
nn(Crawford-10, Mr.-9)
prep_to(take-6, Crawford-10)
parataxis(take-6, said-13)
nsubj(said-13, Dawtie-14)
ccomp(have-4, tell-18)
conj_and(take-6, tell-18)
dobj(tell-18, him-19)
mark(has-23, that-20)
det(earl-22, the-21)
nsubj(has-23, earl-22)
ccomp(tell-18, has-23)
det(claim-25, a-24)
dobj(has-23, claim-25)
prep_to(claim-25, it-27)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Tell)
        (NP (PRP him))
        (ADVP (RB also))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Andrew))
    (, ,) (`` ``)
    (S
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP it))
          (VP (VBD was)
            (VP (VBN found) (, ,)
              (S
                (S
                  (VP (VBG showing)
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBZ has)
                          (NP
                            (NP (DT no) (JJ _) (JJ legal) (NN _) (NN right))
                            (PP (TO to)
                              (NP (PRP it)))))))))
                (: ;)
                (CC and)
                (S
                  (VP (VB tell)
                    (NP (PRP him)))))))))
      (NP (PRP he))
      (VP (VBZ has)
        (NP (DT no)
          (ADJP (RBR more) (JJ moral))
          (NN right))
        (PP (TO to)
          (NP (PRP it)))
        (SBAR (IN than)
          (S
            (NP (DT the) (NN laird))
            (VP (MD could)
              (VP (VB give)
                (NP (PRP him))))))))
    (. .)))

ccomp(said-7, Tell-2)
dobj(Tell-2, him-3)
advmod(Tell-2, also-4)
root(ROOT-0, said-7)
nsubj(said-7, Andrew-8)
advmod(found-14, where-11)
nsubjpass(found-14, it-12)
auxpass(found-14, was-13)
advcl(has-31, found-14)
dep(found-14, showing-16)
nsubj(has-18, he-17)
ccomp(showing-16, has-18)
neg(right-23, no-19)
amod(right-23, _-20)
amod(right-23, legal-21)
nn(right-23, _-22)
dobj(has-18, right-23)
prep_to(right-23, it-25)
dep(found-14, tell-28)
conj_and(showing-16, tell-28)
dobj(tell-28, him-29)
nsubj(has-31, he-30)
dep(said-7, has-31)
neg(right-35, no-32)
advmod(moral-34, more-33)
amod(right-35, moral-34)
dobj(has-31, right-35)
prep_to(has-31, it-37)
mark(give-42, than-38)
det(laird-40, the-39)
nsubj(give-42, laird-40)
aux(give-42, could-41)
advcl(has-31, give-42)
dobj(give-42, him-43)

(ROOT
  (S
    (VP
      (VP (VB Tell)
        (NP (PRP him)))
      (, ,)
      (VP (VB ma'am)
        (PRN (, ,) ('' '')
          (SINV
            (VP (VBD continued))
            (NP (NNP Andrew)))
          (, ,) (`` ``))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP expect)
              (S
                (NP (PRP him))
                (VP (TO to)
                  (VP (VB take)
                    (NP (PRP it))
                    (PP (TO to)
                      (NP (DT the) (NN earl))))))
              (, ,)
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (MD may)
                    (VP (VB buy)
                      (NP (PRP it))
                      (SBAR (IN if)
                        (S
                          (NP (PRP he))
                          (VP
                            (VP (MD will))
                            (: ;)
                            (CC and)
                            (VP (VBP say)
                              (SBAR (IN that)
                                (S
                                  (SBAR (IN if) (, ,)
                                    (PP (IN after)
                                      (NP (DT a) (NN fortnight)))
                                    (, ,)
                                    (S
                                      (NP (PRP you))
                                      (VP (VBP find)
                                        (SBAR
                                          (S
                                            (NP (PRP it))
                                            (VP (VBZ is) (RB not)
                                              (PP (IN in)
                                                (NP
                                                  (NP (DT the) (NN earl) (POS 's))
                                                  (NN possession)))))))))
                                  (, ,)
                                  (NP (PRP you))
                                  (VP (MD will)
                                    (VP (VB yourself)
                                      (NP (NN ascertain))
                                      (PP (IN from)
                                        (NP (PRP him)))
                                      (SBAR (IN whether)
                                        (S
                                          (NP (DT the) (NN offer))
                                          (VP (VBZ has)
                                            (VP (VBN been)
                                              (VP (VBN made))))))))))))))))))))))
      (NP (PRP him)))
    (. .) ('' '')))

root(ROOT-0, Tell-1)
dobj(Tell-1, him-2)
dep(Tell-1, ma'am-4)
parataxis(ma'am-4, continued-7)
nsubj(continued-7, Andrew-8)
mark(expect-13, that-11)
nsubj(expect-13, you-12)
ccomp(ma'am-4, expect-13)
dobj(expect-13, him-14)
nsubj(take-16, him-14)
aux(take-16, to-15)
xcomp(expect-13, take-16)
dobj(take-16, it-17)
det(earl-20, the-19)
prep_to(take-16, earl-20)
mark(buy-25, that-22)
nsubj(buy-25, he-23)
aux(buy-25, may-24)
ccomp(expect-13, buy-25)
dobj(buy-25, it-26)
mark(will-29, if-27)
nsubj(will-29, he-28)
nsubj(say-32, he-28)
advcl(buy-25, will-29)
advcl(buy-25, say-32)
conj_and(will-29, say-32)
mark(yourself-53, that-33)
mark(find-41, if-34)
det(fortnight-38, a-37)
prep_after(find-41, fortnight-38)
nsubj(find-41, you-40)
advcl(yourself-53, find-41)
nsubj(is-43, it-42)
ccomp(find-41, is-43)
neg(is-43, not-44)
det(earl-47, the-46)
poss(possession-49, earl-47)
prep_in(is-43, possession-49)
nsubj(yourself-53, you-51)
aux(yourself-53, will-52)
ccomp(say-32, yourself-53)
dobj(yourself-53, ascertain-54)
prep_from(yourself-53, him-56)
mark(made-62, whether-57)
det(offer-59, the-58)
nsubjpass(made-62, offer-59)
aux(made-62, has-60)
auxpass(made-62, been-61)
ccomp(yourself-53, made-62)
dobj(Tell-1, him-63)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ is)
        (ADJP (RB just) (JJ right))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Alexa))
    (. .)))

nsubj(right-5, That-2)
cop(right-5, is-3)
advmod(right-5, just-4)
ccomp(said-8, right-5)
root(ROOT-0, said-8)
nsubj(said-8, Alexa-9)

(ROOT
  (S (CC And)
    (ADVP (RB so))
    (NP (DT the) (NN thing))
    (VP (VBD was)
      (VP (VBN done)))
    (. .)))

cc(done-6, And-1)
advmod(done-6, so-2)
det(thing-4, the-3)
nsubjpass(done-6, thing-4)
auxpass(done-6, was-5)
root(ROOT-0, done-6)

(ROOT
  (S
    (NP (DT The) (NN cup))
    (VP (VBZ is)
      (ADVP (RB now))
      (PP
        (PP (IN in)
          (NP
            (NP (DT the) (NN earl) (POS 's))
            (NN collection)))
        (, ,)
        (CC and)
        (PP (IN without)
          (NP
            (NP (DT any) (JJ further) (NN interference))
            (PP (IN on)
              (NP (PRP$ her) (NN part)))))))
    (. .)))

det(cup-2, The-1)
nsubj(is-3, cup-2)
nsubj(is-3', cup-2)
root(ROOT-0, is-3)
conj_and(is-3, is-3')
advmod(is-3, now-4)
det(earl-7, the-6)
poss(collection-9, earl-7)
prep_in(is-3, collection-9)
det(interference-15, any-13)
amod(interference-15, further-14)
prep_without(is-3', interference-15)
poss(part-18, her-17)
prep_on(interference-15, part-18)

(ROOT
  (S
    (S
      (S
        (SBAR
          (NP (DT A) (JJ few) (NNS days))
          (IN after)
          (S
            (NP (PRP she)
              (CC and)
              (NNP Dawtie))
            (VP (VBD carried)
              (NP (DT the) (NN cup))
              (PP (TO to)
                (NP (NNP Crawford))))))
        (, ,)
        (NP (DT a) (NN parcel))
        (VP (VBD arrived)
          (PP (IN at)
            (NP (NNP Potlurg)))
          (, ,)
          (S
            (VP (VBG containing)
              (NP (DT a) (JJ beautiful) (NN silver) (NN case))))))
      (, ,)
      (CC and)
      (S
        (PP (IN inside)
          (NP (DT the) (NN case)))
        (NP (DT the) (NN jeweled))
        (VP (VBP watch)
          (PRN (: --)
            (PP (IN with)
              (NP
                (NP (DT a) (NN letter))
                (PP (IN from)
                  (NP (NNP George)))))
            (, ,)
            (S
              (VP
                (VP (VBG begging)
                  (S
                    (NP (NNP Alexa))
                    (VP (TO to)
                      (VP (VB accept)
                        (NP (PRP$ his) (NN present))))))
                (, ,)
                (CC and)
                (VP (VBG assuring)
                  (NP (PRP her))
                  (PP (IN of)
                    (NP (PRP$ his) (NN conviction)))))))
          (SBAR (IN that)
            (S
              (NP (DT the) (NN moment))
              (NP (PRP he))
              (VP (VBD annoyed)
                (NP (PRP her))
                (PP (IN with)
                  (NP (DT any) (JJ further) (NN petition)))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD would)
      (VP (VB return)
        (NP (PRP it))))
    (. .)))

det(days-3, A-1)
amod(days-3, few-2)
dep(carried-8, days-3)
mark(carried-8, after-4)
nsubj(carried-8, she-5)
conj_and(she-5, Dawtie-7)
nsubj(carried-8, Dawtie-7)
advcl(arrived-16, carried-8)
det(cup-10, the-9)
dobj(carried-8, cup-10)
prep_to(carried-8, Crawford-12)
det(parcel-15, a-14)
nsubj(arrived-16, parcel-15)
ccomp(return-66, arrived-16)
prep_at(arrived-16, Potlurg-18)
xcomp(arrived-16, containing-20)
det(case-24, a-21)
amod(case-24, beautiful-22)
nn(case-24, silver-23)
dobj(containing-20, case-24)
det(case-29, the-28)
prep_inside(watch-32, case-29)
det(jeweled-31, the-30)
nsubj(watch-32, jeweled-31)
conj_and(arrived-16, watch-32)
ccomp(return-66, watch-32)
det(letter-36, a-35)
prep_with(begging-40, letter-36)
prep_from(letter-36, George-38)
parataxis(watch-32, begging-40)
dobj(begging-40, Alexa-41)
nsubj(accept-43, Alexa-41)
aux(accept-43, to-42)
xcomp(begging-40, accept-43)
poss(present-45, his-44)
dobj(accept-43, present-45)
parataxis(watch-32, assuring-48)
conj_and(begging-40, assuring-48)
dobj(assuring-48, her-49)
poss(conviction-52, his-51)
prep_of(assuring-48, conviction-52)
mark(annoyed-57, that-53)
det(moment-55, the-54)
nsubj(annoyed-57, moment-55)
nsubj(annoyed-57, he-56)
ccomp(watch-32, annoyed-57)
dobj(annoyed-57, her-58)
det(petition-62, any-60)
amod(petition-62, further-61)
prep_with(annoyed-57, petition-62)
nsubj(return-66, she-64)
aux(return-66, would-65)
root(ROOT-0, return-66)
dobj(return-66, it-67)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD expressed)
        (NP (PRP$ his) (NN regret))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN brought)
                (PP (JJ such)
                  (S
                    (VP (VBG suffering)
                      (PP (IN upon)
                        (NP (NNP Dawtie)))))))))))
      (, ,)
      (CC and)
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADJP (JJ ready)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (SBAR
                        (WHNP (WDT whatever))
                        (S
                          (VP (VBZ amends)
                            (SBAR
                              (S
                                (NP (PRP$ her) (NN husband))
                                (VP (MD might)
                                  (VP (VB think)
                                    (NP (NN fit))))))))))))))))))
    (. .)))

nsubj(expressed-2, He-1)
nsubj(said-15, He-1)
root(ROOT-0, expressed-2)
poss(regret-4, his-3)
dobj(expressed-2, regret-4)
mark(brought-8, that-5)
nsubj(brought-8, he-6)
aux(brought-8, had-7)
ccomp(expressed-2, brought-8)
prep(brought-8, such-9)
dep(such-9, suffering-10)
prep_upon(suffering-10, Dawtie-12)
conj_and(expressed-2, said-15)
nsubj(ready-18, he-16)
nsubj(make-20, he-16)
cop(ready-18, was-17)
ccomp(said-15, ready-18)
aux(make-20, to-19)
xcomp(ready-18, make-20)
nsubj(amends-22, whatever-21)
ccomp(make-20, amends-22)
poss(husband-24, her-23)
nsubj(think-26, husband-24)
aux(think-26, might-25)
ccomp(amends-22, think-26)
dobj(think-26, fit-27)

(ROOT
  (S
    (NP (NNP Alexa))
    (VP
      (VP (VBD accepted)
        (NP (DT the) (NN watch)))
      (, ,)
      (CC and)
      (VP (VBD wore)
        (NP (PRP it))))
    (. .)))

nsubj(accepted-2, Alexa-1)
nsubj(wore-7, Alexa-1)
root(ROOT-0, accepted-2)
det(watch-4, the-3)
dobj(accepted-2, watch-4)
conj_and(accepted-2, wore-7)
dobj(wore-7, it-8)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP$ her) (NN father))
          (VP (MD would)
            (VP (VB like)
              (S
                (NP (PRP her))
                (VP (TO to)
                  (VP (VB do)
                    (ADVP (RB so))))))))))
    (. .)))

nsubj(thought-2, She-1)
root(ROOT-0, thought-2)
poss(father-4, her-3)
nsubj(like-6, father-4)
aux(like-6, would-5)
ccomp(thought-2, like-6)
dobj(like-6, her-7)
nsubj(do-9, her-7)
aux(do-9, to-8)
xcomp(like-6, do-9)
advmod(do-9, so-10)

(ROOT
  (NP (NNP CHAPTER) (NNP XXXVII) (. .)))

nn(XXXVII-2, CHAPTER-1)
root(ROOT-0, XXXVII-2)

(ROOT
  (NP (NNP THE) (NNP HOUR) (NNP BEFORE) (NNP DAWN) (. .)))

nn(DAWN-4, THE-1)
nn(DAWN-4, HOUR-2)
nn(DAWN-4, BEFORE-3)
root(ROOT-0, DAWN-4)

(ROOT
  (S
    (NP
      (NP (DT The) (NN friendship))
      (PP (IN of)
        (NP (DT the) (CD three))))
    (VP (VBD was)
      (VP
        (ADVP (RB never))
        (VBN broken)))
    (. .)))

det(friendship-2, The-1)
nsubjpass(broken-8, friendship-2)
det(three-5, the-4)
prep_of(friendship-2, three-5)
auxpass(broken-8, was-6)
neg(broken-8, never-7)
root(ROOT-0, broken-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB say)
          (SBAR (IN that) (, ,)
            (S
              (SBAR (IN as)
                (S
                  (NP (PRP she))
                  (VP (VBD lay)
                    (ADJP (RB awake))
                    (PP (IN in)
                      (NP (DT the) (NN dark))))))
              (, ,)
              (NP
                (NP (DT the) (NNS eyes))
                (PP (IN of)
                  (NP (NNP Alexa))))
              (ADVP (RB never))
              (VP (VBD renewed)
                (NP
                  (NP (DT the) (NNS tears))
                  (PP (IN of)
                    (NP (DT that) (NN autumn) (NN night)))
                  (SBAR
                    (WHPP (IN on)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP she))
                      (VP (VBD turned)
                        (NP (PRP$ her) (NN back))
                        (PP (IN upon)
                          (NP
                            (NP (DT the) (NN pride))
                            (PP (IN of)
                              (NP (NN self)))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP$ her) (NNS tears))
      (VP (VBD were)
        (ADVP (RB never))
        (NP
          (NP (DT those))
          (PP (IN of)
            (NP (NN bitterness))))
        (, ,)
        (PP
          (PP (IN of)
            (NP (NN self-scorn)))
          (, ,)
          (CC or)
          (PP (IN of)
            (NP (NN self-pity))))))
    (. .)))

nsubj(say-4, I-1)
aux(say-4, will-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
mark(renewed-20, that-5)
mark(lay-9, as-7)
nsubj(lay-9, she-8)
advcl(renewed-20, lay-9)
acomp(lay-9, awake-10)
det(dark-13, the-12)
prep_in(lay-9, dark-13)
det(eyes-16, the-15)
nsubj(renewed-20, eyes-16)
prep_of(eyes-16, Alexa-18)
neg(renewed-20, never-19)
ccomp(say-4, renewed-20)
det(tears-22, the-21)
dobj(renewed-20, tears-22)
prep_on(turned-30, tears-22)
det(night-26, that-24)
nn(night-26, autumn-25)
prep_of(tears-22, night-26)
nsubj(turned-30, she-29)
rcmod(tears-22, turned-30)
poss(back-32, her-31)
dobj(turned-30, back-32)
det(pride-35, the-34)
prep_upon(turned-30, pride-35)
prep_of(pride-35, self-37)
poss(tears-41, her-40)
nsubj(those-44, tears-41)
cop(those-44, were-42)
neg(those-44, never-43)
conj_but(say-4, those-44)
prep_of(those-44, bitterness-46)
prep_of(those-44, self-scorn-49)
prep_of(those-44, self-pity-53)
conj_or(self-scorn-49, self-pity-53)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN pitied))))))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP she))
        (VP (MD would)
          (VP (VB say)
            (PP (TO to)
              (NP (PRP herself))))))
      (, ,))
    (`` ``)
    (VP (VBP let)
      (S
        (NP (DT the) (NNP Lord) (NN pity))
        (NP (PRP me))))
    (. !)))

mark(am-4, If-2)
nsubj(am-4, I-3)
nsubjpass(pitied-7, I-3)
advcl(let-17, am-4)
csubj(let-17, am-4)
aux(pitied-7, to-5)
auxpass(pitied-7, be-6)
xcomp(am-4, pitied-7)
nsubj(say-12, she-10)
aux(say-12, would-11)
parataxis(let-17, say-12)
prep_to(say-12, herself-14)
root(ROOT-0, let-17)
det(pity-20, the-18)
nn(pity-20, Lord-19)
nsubj(me-21, pity-20)
xcomp(let-17, me-21)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP am) (RB not)
        (ADJP (JJ ashamed)))
      (, ,)
      (CC and)
      (VP (MD will) (RB not)
        (VP (VB be)
          (ADJP (JJ sorry)))))
    (. .)))

nsubj(ashamed-4, I-1)
nsubj(sorry-10, I-1)
cop(ashamed-4, am-2)
neg(ashamed-4, not-3)
root(ROOT-0, ashamed-4)
aux(sorry-10, will-7)
neg(sorry-10, not-8)
cop(sorry-10, be-9)
conj_and(ashamed-4, sorry-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (NN nothing))
        (S
          (VP (TO to)
            (VP (VB resent))))))
    (: ;)
    (S
      (NP (DT no) (NN one))
      (VP (VBZ has)
        (VP (VBN wronged)
          (NP (PRP me)))))
    (. .) ('' '')))

nsubj(have-2, I-1)
nsubj(resent-5, I-1)
root(ROOT-0, have-2)
advmod(have-2, nothing-3)
aux(resent-5, to-4)
xcomp(have-2, resent-5)
neg(one-8, no-7)
nsubj(wronged-10, one-8)
aux(wronged-10, has-9)
parataxis(have-2, wronged-10)
dobj(wronged-10, me-11)

(ROOT
  (S
    (NP (NNP Andrew))
    (VP (VBD died)
      (PP (IN in)
        (NP (JJ middle) (NN age))))
    (. .)))

nsubj(died-2, Andrew-1)
root(ROOT-0, died-2)
amod(age-5, middle-4)
prep_in(died-2, age-5)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN wife))
      (VP (VBD said)
        (SBAR
          (S
            (NP (DT the) (NN Master))
            (VP (VBD wanted)
              (NP (PRP him))
              (SBAR (IN for)
                (S
                  (NP (NN something) (NN nobody))
                  (ADVP (RB else))
                  (VP (MD could)
                    (VP (VB do))))))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP He))
      (VP (MD would) (RB not)
        (VP (VB have)
          (VP (VBN taken)
            (NP (PRP him))
            (PP (IN from)
              (NP (PRP her)))))))
    (. .)))

poss(wife-2, His-1)
nsubj(said-3, wife-2)
root(ROOT-0, said-3)
det(Master-5, the-4)
nsubj(wanted-6, Master-5)
ccomp(said-3, wanted-6)
dobj(wanted-6, him-7)
mark(do-13, for-8)
nn(nobody-10, something-9)
nsubj(do-13, nobody-10)
advmod(do-13, else-11)
aux(do-13, could-12)
advcl(wanted-6, do-13)
nsubj(taken-20, He-16)
aux(taken-20, would-17)
neg(taken-20, not-18)
aux(taken-20, have-19)
conj_or(said-3, taken-20)
dobj(taken-20, him-21)
prep_from(taken-20, her-23)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD wept)
      (CC and)
      (VBD took)
      (NP (NN comfort))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP she))
          (VP (VBD lived)
            (PP (IN in)
              (NP (NN expectation)))))))
    (. .)))

nsubj(wept-2, She-1)
nsubj(took-4, She-1)
root(ROOT-0, wept-2)
conj_and(wept-2, took-4)
dobj(wept-2, comfort-5)
mark(lived-9, for-7)
nsubj(lived-9, she-8)
advcl(wept-2, lived-9)
prep_in(lived-9, expectation-11)

(ROOT
  (S
    (NP (CD One) (NN night))
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP she)
          (CC and)
          (NNP Alexa))
        (VP (VBD were)
          (VP (VBG sitting)
            (ADVP (RB together))
            (PP (IN at)
              (NP (NNP Potlurg)))))))
    (, ,)
    (NP (RB about) (DT a) (NN month))
    (PP (IN after)
      (NP (PRP$ his) (NN burial)))
    (, ,)
    (NP
      (NP (NN speaking))
      (PP (IN of)
        (NP
          (NP (JJ many) (NNS things))
          (PP (IN with)
            (NP
              (NP (DT the) (NN freedom))
              (PP (IN of)
                (NP (DT a)
                  (ADJP (JJ long)
                    (CC and)
                    (JJ tried))
                  (NN love))))))))
    (PRN (, ,)
      (S
        (NP (NNP Alexa))
        (VP (VBD said) (, ,)
          (PP (IN after)
            (NP
              (NP
                (NP (DT a) (NN pause))
                (PP (IN of)
                  (NP (DT some) (NN duration))))
              (: :)
              (S (`` ``)
                (VP (VB Were)
                  (S
                    (NP (PRP you))
                    (ADJP (RB not) (RB very) (JJ angry)
                      (PP (IN with)
                        (NP (PRP me))))
                    (ADVP (RB then)))))))))
      (, ,))
    (VP (VBP Dawtie))
    (. ?) ('' '')))

num(night-2, One-1)
tmod(Dawtie-54, night-2)
advmod(sitting-8, when-3)
nsubj(sitting-8, she-4)
conj_and(she-4, Alexa-6)
nsubj(sitting-8, Alexa-6)
aux(sitting-8, were-7)
advcl(Dawtie-54, sitting-8)
advmod(sitting-8, together-9)
prep_at(sitting-8, Potlurg-11)
advmod(month-15, about-13)
det(month-15, a-14)
tmod(Dawtie-54, month-15)
poss(burial-18, his-17)
prep_after(Dawtie-54, burial-18)
nsubj(Dawtie-54, speaking-20)
amod(things-23, many-22)
prep_of(speaking-20, things-23)
det(freedom-26, the-25)
prep_with(things-23, freedom-26)
det(love-32, a-28)
amod(love-32, long-29)
conj_and(long-29, tried-31)
amod(love-32, tried-31)
prep_of(freedom-26, love-32)
nsubj(said-35, Alexa-34)
parataxis(Dawtie-54, said-35)
det(pause-39, a-38)
prep_after(said-35, pause-39)
det(duration-42, some-41)
prep_of(pause-39, duration-42)
dep(pause-39, Were-45)
nsubj(angry-49, you-46)
neg(angry-49, not-47)
advmod(angry-49, very-48)
xcomp(Were-45, angry-49)
prep_with(angry-49, me-51)
advmod(angry-49, then-52)
root(ROOT-0, Dawtie-54)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB When))
    (SQ (VBP ,)
      (NP (NN ma'am)))
    (. ?) ('' '')))

advmod(,-3, When-2)
nsubj(,-3, ma'am-4)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB When))
    (SQ
      (NP (NNP Andrew))
      (VP (VBD told)
        (NP (PRP you))))
    (. .) ('' '')))

advmod(told-4, When-2)
nsubj(told-4, Andrew-3)
root(ROOT-0, told-4)
dobj(told-4, you-5)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Told)
        (NP (PRP me))
        (X (WP what))))
    (, ,)
    (VP (VBP ma'am))
    (. ?)))

dep(ma'am-6, Told-2)
dobj(Told-2, me-3)
dep(Told-2, what-4)
root(ROOT-0, ma'am-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (VP (VB be)
        (NP (JJ stupid) (NN to-night))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP I))
            (VP (MD ca) (RB n't)
              (VP (VB think)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP you))
                    (VP (VBP mean))))))))))
    (. .) ('' '')))

nsubj(to-night-5, I-1)
aux(to-night-5, must-2)
cop(to-night-5, be-3)
amod(to-night-5, stupid-4)
root(ROOT-0, to-night-5)
mark(think-11, for-7)
nsubj(think-11, I-8)
aux(think-11, ca-9)
neg(think-11, n't-10)
advcl(to-night-5, think-11)
dobj(mean-14, what-12)
nsubj(mean-14, you-13)
ccomp(think-11, mean-14)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD told)
          (NP (PRP you))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD wanted)
                (NP (PRP him))))))))
    (, ,)
    (S (RB not)
      (VP (VBG knowing)
        (NP (PRP he))))
    (VP (VBD was)
      (ADJP (JJ yours)))
    (. .) ('' '')))

advmod(told-4, When-2)
nsubj(told-4, he-3)
advcl(yours-14, told-4)
dobj(told-4, you-5)
nsubj(wanted-7, I-6)
dep(told-4, wanted-7)
dobj(wanted-7, him-8)
neg(knowing-11, not-10)
csubj(yours-14, knowing-11)
dobj(knowing-11, he-12)
cop(yours-14, was-13)
root(ROOT-0, yours-14)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP ken)
        (S
          (VP (VBG naething)
            (NP (NN o))))
        ('' ')
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP ye))
            (VP (VBP 're)
              (ADJP (JJ mintin) ('' ')
                (PP (IN at)))
              (, ,)
              (ADVP (RB mem)))))))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP
      (NP (NNP Dawtie))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT a) (NN tone))
          (PP (IN of)
            (NP (NN bewilderment))))))
    (. .)))

nsubj(ken-3, I-2)
ccomp(persisted-17, ken-3)
xcomp(ken-3, naething-4)
dobj(naething-4, o-5)
dobj(mintin-10, what-7)
nsubj(mintin-10, ye-8)
cop(mintin-10, 're-9)
ccomp(ken-3, mintin-10)
prep(mintin-10, at-12)
advmod(mintin-10, mem-14)
root(ROOT-0, persisted-17)
nsubj(persisted-17, Dawtie-18)
det(tone-22, a-21)
prep_in(Dawtie-18, tone-22)
prep_of(tone-22, bewilderment-24)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD had)
            (NP
              (NP (DT no) (NNS secrets))
              (PP (IN from)
                (NP (CD one) (DT another))))))))
    (. .) ('' '')))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(had-4, you-3)
ccomp(thought-2, had-4)
neg(secrets-6, no-5)
dobj(had-4, secrets-6)
prep_from(secrets-6, one-8)
dep(one-8, another-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (ADVP (RB ever))
            (VP (VBD had))))
        (: --)
        (PP (IN except)
          (NP
            (NP (NNS things))
            (PP (IN in)
              (NP (PRP$ his) (NNS books)))))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD said)
              (SBAR
                (S
                  (VP (VBD were)
                    (NP
                      (NP (NNP God) (POS 's))
                      (NNS secrets))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (PRP I))
                        (VP (MD should)
                          (VP (VB understand)
                            (NP (DT some) (NN day))
                            (, ,)
                            (SBAR (IN for)
                              (S
                                (NP (NNP God))
                                (VP (VBD was)
                                  (VP (VBG telling)
                                    (S
                                      (NP (PRP them))
                                      (ADJP (RB as) (JJ fast)))
                                    (SBAR (IN as)
                                      (S
                                        (NP (PRP He))
                                        (VP (MD could)
                                          (VP (VB get)
                                            (NP (PRP$ his) (NNS children))
                                            (S
                                              (VP (TO to)
                                                (VP (VB understand)
                                                  (NP (PRP them)))))))))))))))))))))))))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
mark(had-9, that-6)
nsubj(had-9, we-7)
advmod(had-9, ever-8)
ccomp(know-5, had-9)
prep_except(know-5, things-12)
poss(books-15, his-14)
prep_in(things-12, books-15)
mark(said-18, that-16)
nsubj(said-18, he-17)
ccomp(know-5, said-18)
cop(secrets-22, were-19)
poss(secrets-22, God-20)
ccomp(said-18, secrets-22)
dobj(understand-27, which-24)
nsubj(understand-27, I-25)
aux(understand-27, should-26)
dep(secrets-22, understand-27)
det(day-29, some-28)
tmod(understand-27, day-29)
mark(telling-34, for-31)
nsubj(telling-34, God-32)
aux(telling-34, was-33)
advcl(understand-27, telling-34)
nsubj(fast-37, them-35)
advmod(fast-37, as-36)
xcomp(telling-34, fast-37)
mark(get-41, as-38)
nsubj(get-41, He-39)
aux(get-41, could-40)
advcl(telling-34, get-41)
poss(children-43, his-42)
dobj(get-41, children-43)
aux(understand-45, to-44)
vmod(get-41, understand-45)
dobj(understand-45, them-46)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP see)))
    (, ,) ('' '')
    (VP (VBD sighed))
    (NP
      (NP (NNP Alexa))
      (, ;) (`` ``)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (VP (VBN made)
            (PP (IN for)
              (NP (DT each) (JJ other)))))))
    (. .)))

nsubj(see-3, I-2)
ccomp(sighed-6, see-3)
root(ROOT-0, sighed-6)
nsubj(sighed-6, Alexa-7)
nsubjpass(made-12, you-10)
auxpass(made-12, were-11)
dep(Alexa-7, made-12)
det(other-15, each-14)
prep_for(made-12, other-15)

(ROOT
  (S (CC But)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (NP (PRP$ my) (NN secret))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP it))))))))
    (. .)))

nsubj(secret-5, this-2)
cop(secret-5, is-3)
poss(secret-5, my-4)
root(ROOT-0, secret-5)
nsubj(have-9, I-8)
conj_and(secret-5, have-9)
det(right-11, the-10)
dobj(have-9, right-11)
aux(tell-13, to-12)
vmod(right-11, tell-13)
dobj(tell-13, it-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD kept)
      (NP (PRP it))
      (PP (IN for)
        (NP (PRP me)))
      (S
        (VP (TO to)
          (VP (VB tell)
            (NP (PRP you))))))
    (. .)))

nsubj(kept-2, He-1)
root(ROOT-0, kept-2)
dobj(kept-2, it-3)
prep_for(kept-2, me-5)
aux(tell-7, to-6)
vmod(kept-2, tell-7)
dobj(tell-7, you-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (NP (PDT all) (DT the) (NN time))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD knew)
            (NP (PRP it))
            ('' '')
            (SBAR (`` ``)
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (VP (VB want)
                    (S
                      (VP (TO to)
                        (VP (VB know)
                          (NP
                            (NP (NN anything))
                            (SBAR
                              (S
                                (NP (NNP Andrew))
                                (VP (MD would) (RB not)
                                  (VP (VB tell)
                                    (NP (PRP me))))))))))))))))))
    (. .) ('' '')))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
predet(time-5, all-3)
det(time-5, the-4)
dobj(thought-2, time-5)
nsubj(knew-7, you-6)
dep(thought-2, knew-7)
dobj(knew-7, it-8)
nsubj(want-14, I-11)
nsubj(know-16, I-11)
aux(want-14, do-12)
neg(want-14, n't-13)
dep(knew-7, want-14)
aux(know-16, to-15)
xcomp(want-14, know-16)
dobj(know-16, anything-17)
nsubj(tell-21, Andrew-18)
aux(tell-21, would-19)
neg(tell-21, not-20)
rcmod(anything-17, tell-21)
dobj(tell-21, me-22)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP He))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP (PRP$ my) (NN secret)))))))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP
          (VP (VBP see))
          (, ,)
          (VP (RB not)
            (NP (PRP$ his)))))
      (, ,))
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD was)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP he))
            (VP (VBD did) (RB not)
              (VP (VB tell)
                (NP (PRP you))))))))
    (. .) ('' '')))

nsubj(thought-3, He-2)
root(ROOT-0, thought-3)
nsubj(secret-7, it-4)
cop(secret-7, was-5)
poss(secret-7, my-6)
ccomp(thought-3, secret-7)
nsubj(see-10, you-9)
dep(thought-3, see-10)
neg(his-13, not-12)
dep(see-10, his-13)
nsubj(was-17, that-16)
conj_and(thought-3, was-17)
advmod(tell-22, why-18)
nsubj(tell-22, he-19)
aux(tell-22, did-20)
neg(tell-22, not-21)
advcl(was-17, tell-22)
dobj(tell-22, you-23)

(ROOT
  (S (`` ``)
    (PP (IN Of)
      (NP (NNP coarse)))
    (, ,)
    (VP (VBP ma'am))
    (. .)))

prep_of(ma'am-5, coarse-3)
root(ROOT-0, ma'am-5)

(ROOT
  (S
    (NP (NNP Andrew))
    (ADVP (RB always))
    (VP (VBD did)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBD was)
            (ADJP (JJ right))))))
    (. .) ('' '')))

nsubj(did-3, Andrew-1)
advmod(did-3, always-2)
root(ROOT-0, did-3)
nsubj(right-6, what-4)
cop(right-6, was-5)
ccomp(did-3, right-6)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Well))
      (, ,)
      (ADVP (RB then))
      (, ,)
      (VP (VBP Dawtie)))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBD offered)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (PRP$ his) (NN wife))
              (SBAR (IN if)
                (S
                  (NP (PRP he))
                  (VP (MD would)
                    (VP (VB have)
                      (NP (PRP me)))))))))))
    (. .) ('' '')))

advmod(Dawtie-6, Well-2)
advmod(Dawtie-6, then-4)
root(ROOT-0, Dawtie-6)
nsubj(offered-9, I-8)
nsubj(wife-13, I-8)
parataxis(Dawtie-6, offered-9)
aux(wife-13, to-10)
cop(wife-13, be-11)
poss(wife-13, his-12)
xcomp(offered-9, wife-13)
mark(have-17, if-14)
nsubj(have-17, he-15)
aux(have-17, would-16)
advcl(wife-13, have-17)
dobj(have-17, me-18)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHNP (WP what))
    (SQ (VBD did)
      (NP (PRP he))
      (VP (VB say)))
    (. ?) ('' '')))

cc(say-6, And-2)
dobj(say-6, what-3)
aux(say-6, did-4)
nsubj(say-6, he-5)
root(ROOT-0, say-6)

(ROOT
  (S
    (S
      (VP (VBN asked)
        (NP (NNP Dawtie))
        (, ,)
        (PP (IN with)
          (S
            (NP
              (NP (DT the) (NN composure))
              (PP (IN of)
                (NP (CD one))))
            (VP (VBG listening)
              (PP (TO to)
                (NP (DT a) (NN story))))))))
    (VP (VBD learned)
      (PP (IN from)
        (NP (DT a) (NN book))))
    (. .)))

csubj(learned-13, asked-1)
dobj(asked-1, Dawtie-2)
det(composure-6, the-5)
nsubj(listening-9, composure-6)
prep_of(composure-6, one-8)
prepc_with(asked-1, listening-9)
det(story-12, a-11)
prep_to(listening-9, story-12)
root(ROOT-0, learned-13)
det(book-16, a-15)
prep_from(learned-13, book-16)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBD told)
      (NP (PRP me))
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD could) (RB n't)))))
    (. .)))

nsubj(told-3, He-2)
root(ROOT-0, told-3)
dobj(told-3, me-4)
nsubj(could-6, he-5)
dep(told-3, could-6)
neg(could-6, n't-7)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ sure)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (ADVP (RB _))
            (VP (VBD said)
              (NP (NNS _)))))))
    (. .)))

cc(sure-5, But-1)
nsubj(sure-5, I-2)
cop(sure-5, 'm-3)
neg(sure-5, not-4)
root(ROOT-0, sure-5)
dobj(said-9, what-6)
nsubj(said-9, he-7)
advmod(said-9, _-8)
ccomp(sure-5, said-9)
dobj(said-9, _-10)

(ROOT
  (S
    (NP (DT The) (NNS words))
    (VP (VBD went)
      (PRT (RP away)))
    (. .) ('' '')))

det(words-2, The-1)
nsubj(went-3, words-2)
root(ROOT-0, went-3)
prt(went-3, away-4)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB When))
    (SQ (VBD was)
      (NP
        (NP (PRP it))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD asked)
              (NP (PRP you)))))))
    (. ?) ('' '')))

advmod(was-3, When-2)
root(ROOT-0, was-3)
nsubj(was-3, it-4)
nsubj(asked-6, he-5)
rcmod(it-4, asked-6)
dobj(asked-6, you-7)

(ROOT
  (S
    (VP (VBD said)
      (NP
        (NP (NNP Dawtie))
        (, ,)
        (VP (VBN sunk)
          (PP (IN in)
            (NP (NN thought))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Dawtie-2)
vmod(Dawtie-2, sunk-4)
prep_in(sunk-4, thought-6)

(ROOT
  (SINV (`` ``)
    (FRAG
      (NP
        (NP (DT The) (NN night))
        (PP (CC but)
          (NP (CD one)))
        (PP (IN before)
          (NP (DT the) (NN trial)))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Alexa))
    (. .)))

det(night-3, The-2)
dep(answered-11, night-3)
prep(night-3, but-4)
pobj(but-4, one-5)
det(trial-8, the-7)
prep_before(night-3, trial-8)
root(ROOT-0, answered-11)
nsubj(answered-11, Alexa-12)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBP micht)
      (S
        (NP
          (NP
            (ADVP (RB hae))
            (NP
              (NP (NN ta'en))
              (NP (PRP you))
              (, ,)
              (ADVP (RB then)))
            (, ,) (FW i)
            (NP
              (NP (`` `) (JJ stead) (NN o) ('' '))
              (NP (PRP me))))
          (: --)
          (NP (DT a) (NN lady))
          (, an) ('' '))
        (NP (SYM a))))
    ('' ') (. .)))

nsubj(micht-3, He-2)
root(ROOT-0, micht-3)
advmod(ta'en-5, hae-4)
nsubj(a-21, ta'en-5)
dep(ta'en-5, you-6)
advmod(ta'en-5, then-8)
dep(ta'en-5, i-10)
amod(o-13, stead-12)
dep(ta'en-5, o-13)
dep(o-13, me-15)
det(lady-18, a-17)
dep(ta'en-5, lady-18)
punct(ta'en-5, an-19)
xcomp(micht-3, a-21)

(ROOT
  (FRAG
    (INTJ (UH Oh))
    (, ,)
    (ADVP (RB mem))
    (. !)))

discourse(mem-3, Oh-1)
root(ROOT-0, mem-3)

(ROOT
  (SQ (VBP do)
    (NP (PRP you))
    (VP (VB think)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD took)
            (SBAR
              (S
                (NP (PRP me))
                (VP (VBP 'cause)
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBD was)
                        (PP (IN in)
                          (NP (NN trouble)))))))))))))
    (. ?)))

aux(think-3, do-1)
nsubj(think-3, you-2)
root(ROOT-0, think-3)
nsubj(took-5, he-4)
ccomp(think-3, took-5)
nsubj('cause-7, me-6)
ccomp(took-5, 'cause-7)
nsubj(was-9, I-8)
ccomp('cause-7, was-9)
prep_in(was-9, trouble-11)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBP micht)
      (NP
        (NP (NN hae))
        (VP (VBN been)
          (VP (VBN laird)
            (ADJP (JJ himsel) ('' '))))))
    (. .) ('' '')))

nsubj(micht-2, He-1)
root(ROOT-0, micht-2)
dobj(micht-2, hae-3)
auxpass(laird-5, been-4)
vmod(hae-3, laird-5)
acomp(laird-5, himsel-6)

(ROOT
  (S (`` ``)
    (VP (VB Dawtie))
    (. !)))

root(ROOT-0, Dawtie-2)

(ROOT
  (S
    (VP (VB Dawtie))
    (. !) ('' '')))

root(ROOT-0, Dawtie-1)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Alexa)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Alexa-2)

(ROOT
  (S (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR (IN that)
              (S
                (VP (MD would)
                  (VP (VB have)
                    (VP (VBN weighed)
                      (PP (IN with)
                        (NP (NNP Andrew)))))))))))
      (, ,)
      (NP (PRP I))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB have)
              (VP (VBN been)
                (NP (PRP$ his) (NN wife))))))))
    (, ,) (IN for)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (S
          (NP (PRP him))
          (ADJP (JJR better)))
        (PP (IN than)
          (NP (PRP you)))))
    (. .) ('' '')))

mark(think-4, If-2)
nsubj(think-4, you-3)
advcl(ought-13, think-4)
mark(weighed-8, that-5)
aux(weighed-8, would-6)
aux(weighed-8, have-7)
ccomp(think-4, weighed-8)
prep_with(weighed-8, Andrew-10)
nsubj(ought-13, I-12)
nsubj(wife-18, I-12)
root(ROOT-0, ought-13)
aux(wife-18, to-14)
aux(wife-18, have-15)
cop(wife-18, been-16)
poss(wife-18, his-17)
xcomp(ought-13, wife-18)
dep(ought-13, for-20)
nsubj(know-22, I-21)
parataxis(ought-13, know-22)
nsubj(better-24, him-23)
xcomp(know-22, better-24)
prep_than(know-22, you-26)

(ROOT
  (S
    (NP (NNP Dawtie))
    (VP (VBD smiled)
      (PP (IN at)
        (NP (DT that))))
    (. .)))

nsubj(smiled-2, Dawtie-1)
root(ROOT-0, smiled-2)
prep_at(smiled-2, that-4)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBP do)
      (S
        (VP
          (VP (VB know))
          (, ,)
          (VP (VB mem)
            (PRN (, ,) ('' '')
              (S
                (NP (PRP she))
                (VP (VBD said)))
              (, ,) (`` ``))
            (SBAR (IN that)
              (S
                (NP (NNP Andrew))
                (VP (VBD was)
                  (ADJP (JJ fit)
                    (S
                      (VP (TO to)
                        (VP (VB cast)
                          (NP (DT the) (NN lairdship) (NN frae))))))))))
          (NP (PRP him))
          (PP (TO to)
            (NP (NN comfort) (NN ony) (NN puir) (NN lassie))))))
    (. .)))

cc(do-4, But-2)
nsubj(do-4, I-3)
root(ROOT-0, do-4)
ccomp(do-4, know-5)
dep(know-5, mem-7)
nsubj(said-11, she-10)
parataxis(mem-7, said-11)
mark(fit-17, that-14)
nsubj(fit-17, Andrew-15)
nsubj(cast-19, Andrew-15)
cop(fit-17, was-16)
ccomp(mem-7, fit-17)
aux(cast-19, to-18)
xcomp(fit-17, cast-19)
det(frae-22, the-20)
nn(frae-22, lairdship-21)
dobj(cast-19, frae-22)
dobj(know-5, him-23)
nn(lassie-28, comfort-25)
nn(lassie-28, ony-26)
nn(lassie-28, puir-27)
prep_to(know-5, lassie-28)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB ha)
        (S
          (VP (`` ') (VB lo'ed)
            (NP (PRP him) (DT a))
            ('' ')))
        (NP (DT the) (JJ same))))
    (. .) ('' '')))

nsubj(ha-3, I-1)
aux(ha-3, would-2)
root(ROOT-0, ha-3)
ccomp(ha-3, lo'ed-5)
dobj(lo'ed-5, him-6)
dep(him-6, a-7)
det(same-10, the-9)
dobj(ha-3, same-10)

(ROOT
  (S (`` ``)
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN done)))))
    (, ,)
    (NP (NNP Dawtie))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Alexa))
      (, ,)
      (ADVP (RB solemnly)))
    (. .)))

mark(done-5, As-2)
nsubj(done-5, I-3)
aux(done-5, have-4)
advcl(said-10, done-5)
nsubj(said-10, Dawtie-7)
root(ROOT-0, said-10)
dep(said-10, Alexa-11)
advmod(Alexa-11, solemnly-13)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP he))
    (VP (MD would) (RB n't)
      (VP (VB have)
        (VP (VBN thrown)
          (S
            (VP (VBG _)
              (S
                (NP (PRP me))
                (VP (VBN _)
                  (PRT (RP away))
                  (PP (IN for)
                    (NP (PRP you)))
                  (, ,)
                  (SBAR (IN if)
                    (S
                      (NP (PRP he))
                      (VP (VBD had) (RB n't)
                        (VP (VBN loved)
                          (S
                            (NP (PRP you)))
                          (, ,)
                          (S
                            (NP (NNP Dawtie))))))))))))))
    (. .)))

cc(thrown-7, But-2)
nsubj(thrown-7, he-3)
aux(thrown-7, would-4)
neg(thrown-7, n't-5)
aux(thrown-7, have-6)
root(ROOT-0, thrown-7)
xcomp(thrown-7, _-8)
nsubj(_-10, me-9)
dep(_-8, _-10)
prt(_-10, away-11)
prep_for(_-10, you-13)
mark(loved-19, if-15)
nsubj(loved-19, he-16)
aux(loved-19, had-17)
neg(loved-19, n't-18)
advcl(_-10, loved-19)
xcomp(loved-19, you-20)
xcomp(loved-19, Dawtie-22)

(ROOT
  (S
    (VP (VB Be)
      (ADJP (JJ sure)
        (WHPP (IN of)
          (WHNP (WDT that)))))
    (. .)))

cop(sure-2, Be-1)
root(ROOT-0, sure-2)
prep_of(sure-2, that-4)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD might)
        (VP (VB have)
          (VP (VBN made)
            (NP
              (NP (NN nothing))
              (PP (IN of)
                (NP (DT the) (NN lairdship))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD would) (RB n't)
        (VP (VB have)
          (VP (VBN made)
            (NP
              (NP (NN nothing))
              (PP (IN of)
                (NP (PRP me))))))))
    (. .) ('' '')))

nsubj(made-4, He-1)
aux(made-4, might-2)
aux(made-4, have-3)
root(ROOT-0, made-4)
dobj(made-4, nothing-5)
det(lairdship-8, the-7)
prep_of(nothing-5, lairdship-8)
nsubj(made-15, he-11)
aux(made-15, would-12)
neg(made-15, n't-13)
aux(made-15, have-14)
conj_but(made-4, made-15)
dobj(made-15, nothing-16)
prep_of(nothing-16, me-18)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (ADJP (JJ true))))
    (, ,)
    (VP (VBP mem))
    (. .)))

nsubj(true-4, That-2)
cop(true-4, 's-3)
ccomp(mem-6, true-4)
root(ROOT-0, mem-6)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB dinna))
    (VP (VBP doobt)
      (NP (PRP it)))
    (. .) ('' '')))

nsubj(doobt-3, I-1)
advmod(doobt-3, dinna-2)
root(ROOT-0, doobt-3)
dobj(doobt-3, it-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP love)
        (NP (PRP him))
        (ADVP (RB still))))
    (: --)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD must) (RB n't)
        (VP (VB mind)
          (S
            (NP (PRP me))
            (VP (VBG saying)
              (NP (PRP it))))
          (, ,)
          (NP (NNP Dawtie)))))
    (. .)))

nsubj(love-3, I-2)
root(ROOT-0, love-3)
dobj(love-3, him-4)
advmod(love-3, still-5)
nsubj(mind-11, you-8)
aux(mind-11, must-9)
neg(mind-11, n't-10)
conj_and(love-3, mind-11)
nsubj(saying-13, me-12)
dep(mind-11, saying-13)
dobj(saying-13, it-14)
dobj(mind-11, Dawtie-16)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS ways))
        (PP (IN of)
          (S
            (VP (VBG loving)
              (SBAR (IN that)
                (S
                  (VP (VBP are)
                    (ADJP (JJ good))
                    (, ,)
                    (SBAR (IN though)
                      (S
                        (NP (EX there))
                        (VP (VB be)
                          (NP
                            (NP (DT some) (NN pain))
                            (PP (IN in)
                              (NP (PRP them)))))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, ways-3)
prepc_of(ways-3, loving-5)
mark(good-8, that-6)
cop(good-8, are-7)
ccomp(loving-5, good-8)
mark(be-12, though-10)
expl(be-12, there-11)
advcl(good-8, be-12)
det(pain-14, some-13)
nsubj(be-12, pain-14)
prep_in(pain-14, them-16)

(ROOT
  (S
    (S
      (VP (VB Thank)
        (NP (NNP God))))
    (, ,)
    (NP (PRP we))
    (VP (VBP have)
      (NP (PRP$ our) (NNS children)
        (S
          (VP (TO to)
            (VP (VB look)
              (PP (IN after)))))))
    (. .)))

ccomp(have-5, Thank-1)
dobj(Thank-1, God-2)
nsubj(have-5, we-4)
root(ROOT-0, have-5)
poss(children-7, our-6)
dobj(have-5, children-7)
aux(look-9, to-8)
vmod(children-7, look-9)
prep(look-9, after-10)

(ROOT
  (SINV
    (S
      (NP (PRP You))
      (VP (MD will)
        (VP (VB let)
          (SBAR
            (S
              (NP (PRP me))
              (VP (VBP say)
                (S
                  (VP (VBG _)
                    (NP (PRP$ our) (JJ _) (NNS children))))))))))
    (, ,)
    (VP (MD wo) (RB n't))
    (NP
      (NP (PRP you))
      (, ,)
      (NP (NNP Dawtie)))
    (. ?) ('' '')))

nsubj(let-3, You-1)
aux(let-3, will-2)
ccomp(wo-11, let-3)
nsubj(say-5, me-4)
ccomp(let-3, say-5)
xcomp(say-5, _-6)
poss(children-9, our-7)
amod(children-9, _-8)
dobj(_-6, children-9)
root(ROOT-0, wo-11)
neg(wo-11, n't-12)
nsubj(wo-11, you-13)
appos(you-13, Dawtie-15)

(ROOT
  (S
    (S
      (NP (DT Some))
      (VP (VBD thought)
        (S
          (NP (NNP Alexa))
          (ADJP (JJ hard)))))
    (PRN (, ,)
      (S
        (NP (DT some))
        (VP (VBD thought)
          (NP (PRP$ her) (NN cold))))
      (, ,))
    (CC but)
    (S
      (NP
        (NP (DT the) (JJ few))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD knew)
              (SBAR
                (S
                  (NP (PRP her))
                  (VP (VBD knew)
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP (VBD was)
                          (NP
                            (NP (DT neither))
                            (: ;)
                            (CC and)
                            (NP
                              (NP (DT some))
                              (PP (IN of)
                                (NP (PRP$ my) (NNS readers)))))))))))))))
      (VP (MD will)
        (VP (VB grant)
          (SBAR (IN that)
            (S
              (NP
                (NP (PDT such) (DT a) (NN friend))
                (PP (IN as)
                  (NP (NNP Andrew))))
              (VP (VBD was)
                (ADJP (JJR better))
                (PP (IN than)
                  (NP
                    (NP (PDT such) (DT a) (NN husband))
                    (PP (IN as)
                      (NP (NNP George)))))))))))
    (. .)))

nsubj(thought-2, Some-1)
root(ROOT-0, thought-2)
nsubj(hard-4, Alexa-3)
xcomp(thought-2, hard-4)
nsubj(thought-7, some-6)
dep(thought-2, thought-7)
poss(cold-9, her-8)
dobj(thought-7, cold-9)
det(few-13, the-12)
nsubj(knew-15, few-13)
nsubj(grant-28, few-13)
rcmod(few-13, knew-15)
nsubj(knew-17, her-16)
ccomp(knew-15, knew-17)
nsubj(neither-20, she-18)
cop(neither-20, was-19)
ccomp(knew-17, neither-20)
ccomp(knew-17, some-23)
conj_and(neither-20, some-23)
poss(readers-26, my-25)
prep_of(some-23, readers-26)
aux(grant-28, will-27)
conj_but(thought-2, grant-28)
mark(better-36, that-29)
predet(friend-32, such-30)
det(friend-32, a-31)
nsubj(better-36, friend-32)
prep_as(friend-32, Andrew-34)
cop(better-36, was-35)
ccomp(grant-28, better-36)
predet(husband-40, such-38)
det(husband-40, a-39)
prep_than(better-36, husband-40)
prep_as(husband-40, George-42)

(ROOT
  (NP (DT THE) (NN END) (. .)))

det(END-2, THE-1)
root(ROOT-0, END-2)

