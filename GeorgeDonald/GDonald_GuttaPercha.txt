(ROOT
  (NP
    (NP (NNP Gutta) (NNP Percha) (NNP Willie))
    (: :)
    (S
      (S
        (NP (DT the) (NNP Working) (NNP Genius) (NNP BY) (NNP GEORGE) (NNP MACDONALD))
        (PP (IN With)
          (NP
            (NP (CD eight) (JJ black)
              (CC and)
              (JJ white) (NNS illustrations))
            (PP (IN by)
              (NP (NNP Arthur) (NNP Hughes) (NNP -LSB-) (NNP Illustration))))))
      (: :)
      (S
        (NP (NNP WILLIE) (POS 'S))
        (NP (NNP HORSE-SHOEING) (NNP FORGE) (. .) (NNP -RSB-))))))

nn(Willie-3, Gutta-1)
nn(Willie-3, Percha-2)
root(ROOT-0, Willie-3)
det(MACDONALD-10, the-5)
nn(MACDONALD-10, Working-6)
nn(MACDONALD-10, Genius-7)
nn(MACDONALD-10, BY-8)
nn(MACDONALD-10, GEORGE-9)
dep(Willie-3, MACDONALD-10)
dep(MACDONALD-10, With-11)
number(black-13, eight-12)
pobj(With-11, black-13)
amod(illustrations-16, white-15)
pobj(With-11, illustrations-16)
conj_and(black-13, illustrations-16)
nn(Illustration-21, Arthur-18)
nn(Illustration-21, Hughes-19)
nn(Illustration-21, -LSB--20)
prep_by(black-13, Illustration-21)
dep(-RSB--28, WILLIE-23)
possessive(WILLIE-23, 'S-24)
nn(-RSB--28, HORSE-SHOEING-25)
nn(-RSB--28, FORGE-26)
parataxis(MACDONALD-10, -RSB--28)

(ROOT
  (S
    (NP
      (NP (NNP CONTENTS) (NNP I.))
      (SBAR
        (WHNP (WP WHO))
        (S
          (NP (PRP HE))
          (VP (VBD WAS)
            (ADJP (JJ AND))))))
    (VP (VBP WHERE)
      (SBAR
        (S
          (NP (PRP HE))
          (VP (VBD WAS)
            (NP (NNP II))))))
    (. .)))

nn(I.-2, CONTENTS-1)
dobj(AND-6, I.-2)
nsubj(WHERE-7, I.-2)
nsubj(AND-6, HE-4)
cop(AND-6, WAS-5)
rcmod(I.-2, AND-6)
root(ROOT-0, WHERE-7)
nsubj(II-10, HE-8)
cop(II-10, WAS-9)
ccomp(WHERE-7, II-10)

(ROOT
  (S
    (NP (NNP WILLIE))
    (VP (VBZ 'S)
      (NP (NNP EDUCATION) (NNP III)))
    (. .)))

nsubj(III-4, WILLIE-1)
cop(III-4, 'S-2)
nn(III-4, EDUCATION-3)
root(ROOT-0, III-4)

(ROOT
  (S
    (NP (PRP HE))
    (VP (VBZ IS)
      (NP
        (NP (NNP TURNED) (NNP INTO) (NNP SOMETHING))
        (SBAR
          (S
            (NP (NNP HE) (NNP NEVER))
            (VP (VBD WAS)
              (NP (NNP BEFORE) (NNP IV)))))))
    (. .)))

nsubj(SOMETHING-5, HE-1)
cop(SOMETHING-5, IS-2)
nn(SOMETHING-5, TURNED-3)
nn(SOMETHING-5, INTO-4)
root(ROOT-0, SOMETHING-5)
nn(NEVER-7, HE-6)
nsubj(IV-10, NEVER-7)
cop(IV-10, WAS-8)
nn(IV-10, BEFORE-9)
rcmod(SOMETHING-5, IV-10)

(ROOT
  (S
    (NP (PRP HE))
    (VP (VBZ SERVES)
      (NP (DT AN) (NNP APPRENTICESHIP) (NNP V)))
    (. .)))

nsubj(SERVES-2, HE-1)
root(ROOT-0, SERVES-2)
det(V-5, AN-3)
nn(V-5, APPRENTICESHIP-4)
dobj(SERVES-2, V-5)

(ROOT
  (S
    (NP (PRP HE))
    (VP (VBZ GOES)
      (S
        (VP (TO TO)
          (VP (VB LEARN)
            (NP (DT A) (NN TRADE) (NN VI))))))
    (. .)))

nsubj(GOES-2, HE-1)
nsubj(LEARN-4, HE-1)
root(ROOT-0, GOES-2)
aux(LEARN-4, TO-3)
xcomp(GOES-2, LEARN-4)
det(VI-7, A-5)
nn(VI-7, TRADE-6)
dobj(LEARN-4, VI-7)

(ROOT
  (S
    (NP (NNP HOW) (NNP WILLIE) (NNP LEARNED) (NNP TO) (NNP READ))
    (VP (VBP BEFORE)
      (S
        (NP (PRP HE))
        (VP (VB KNEW)
          (NP (PRP$ HIS) (NNP LETTERS) (NN VII)))))
    (. .)))

nn(READ-5, HOW-1)
nn(READ-5, WILLIE-2)
nn(READ-5, LEARNED-3)
nn(READ-5, TO-4)
nsubj(BEFORE-6, READ-5)
root(ROOT-0, BEFORE-6)
nsubj(KNEW-8, HE-7)
ccomp(BEFORE-6, KNEW-8)
poss(VII-11, HIS-9)
nn(VII-11, LETTERS-10)
dobj(KNEW-8, VII-11)

(ROOT
  (S
    (NP
      (NP (NNP SOME) (NNP THINGS) (NNP THAT) (NNP CAME))
      (PP (IN OF)
        (NP (NNP WILLIE))))
    (VP (VBZ 'S)
      (VP (VBG GOING)
        (S
          (VP (TO TO)
            (VP (VB SCHOOL)
              (NP (CD VIII)))))))
    (. .)))

nn(CAME-4, SOME-1)
nn(CAME-4, THINGS-2)
nn(CAME-4, THAT-3)
nsubj(GOING-8, CAME-4)
nsubj(SCHOOL-10, CAME-4)
prep_of(CAME-4, WILLIE-6)
aux(GOING-8, 'S-7)
root(ROOT-0, GOING-8)
aux(SCHOOL-10, TO-9)
xcomp(GOING-8, SCHOOL-10)
dobj(SCHOOL-10, VIII-11)

(ROOT
  (S
    (NP (NNP WILLIE) (NNP DIGS)
      (CC AND)
      (NNP FINDS) (NN WHAT) (NNP HE) (NNP DID) (NNP NOT))
    (VP (VBP EXPECT)
      (NP (NNP IX)))
    (. .)))

nn(DIGS-2, WILLIE-1)
nsubj(EXPECT-9, DIGS-2)
nn(NOT-8, FINDS-4)
nn(NOT-8, WHAT-5)
nn(NOT-8, HE-6)
nn(NOT-8, DID-7)
conj_and(DIGS-2, NOT-8)
nsubj(EXPECT-9, NOT-8)
root(ROOT-0, EXPECT-9)
dobj(EXPECT-9, IX-10)

(ROOT
  (NP (NNP A) (NNP MARVEL) (NNP X) (. .)))

nn(X-3, A-1)
nn(X-3, MARVEL-2)
root(ROOT-0, X-3)

(ROOT
  (NP (NNP A) (NNP NEW) (NNP ALARUM) (NNP XI) (. .)))

nn(XI-4, A-1)
nn(XI-4, NEW-2)
nn(XI-4, ALARUM-3)
root(ROOT-0, XI-4)

(ROOT
  (NP
    (NP (NNP SOME))
    (PP (IN OF)
      (NP (DT THE) (NNP SIGHTS) (NNP WILLIE) (NNP SAW) (NNP XII)))
    (. .)))

root(ROOT-0, SOME-1)
det(XII-7, THE-3)
nn(XII-7, SIGHTS-4)
nn(XII-7, WILLIE-5)
nn(XII-7, SAW-6)
prep_of(SOME-1, XII-7)

(ROOT
  (NP (NNP A) (NNP NEW) (NNP SCHEME) (NNP XIII) (. .)))

nn(XIII-4, A-1)
nn(XIII-4, NEW-2)
nn(XIII-4, SCHEME-3)
root(ROOT-0, XIII-4)

(ROOT
  (S
    (NP (NNP WILLIE))
    (VP (VBZ 'S)
      (NP
        (NP (NNP NEST))
        (PP (IN IN)
          (NP (DT THE) (NNP RUINS) (NNP XIV)))))
    (. .)))

nsubj(NEST-3, WILLIE-1)
cop(NEST-3, 'S-2)
root(ROOT-0, NEST-3)
det(XIV-7, THE-5)
nn(XIV-7, RUINS-6)
prep_in(NEST-3, XIV-7)

(ROOT
  (S
    (NP (NNP WILLIE))
    (VP (VBZ 'S)
      (NP (NNP GRANDMOTHER) (NNP XV)))
    (. .)))

nsubj(XV-4, WILLIE-1)
cop(XV-4, 'S-2)
nn(XV-4, GRANDMOTHER-3)
root(ROOT-0, XV-4)

(ROOT
  (NP (NNP HYDRAULICS) (NNP XVI) (. .)))

nn(XVI-2, HYDRAULICS-1)
root(ROOT-0, XVI-2)

(ROOT
  (NP (NNP HECTOR) (NNP HINTS) (NNP AT) (NNP A) (NNP DISCOVERY) (NNP XVII) (. .)))

nn(XVII-6, HECTOR-1)
nn(XVII-6, HINTS-2)
nn(XVII-6, AT-3)
nn(XVII-6, A-4)
nn(XVII-6, DISCOVERY-5)
root(ROOT-0, XVII-6)

(ROOT
  (S
    (NP (NNP HOW) (NNP WILLIE))
    (VP (VBD WENT)
      (PRT (RP ON))
      (NP (NNP XVIII)))
    (. .)))

nn(WILLIE-2, HOW-1)
nsubj(WENT-3, WILLIE-2)
root(ROOT-0, WENT-3)
prt(WENT-3, ON-4)
dobj(WENT-3, XVIII-5)

(ROOT
  (S
    (NP (NNP WILLIE))
    (VP (VBZ 'S)
      (VP (VBN TALK)
        (PP (IN WITH)
          (NP (PRP$ HIS) (NNP GRANDMOTHER) (NNP XIX)))))
    (. .)))

nsubjpass(TALK-3, WILLIE-1)
auxpass(TALK-3, 'S-2)
root(ROOT-0, TALK-3)
poss(XIX-7, HIS-5)
nn(XIX-7, GRANDMOTHER-6)
prep_with(TALK-3, XIX-7)

(ROOT
  (S
    (NP (DT A) (NNP TALK) (NNP WITH) (NNP MR) (NNP SHEPHERD))
    (VP (VBP XX))
    (. .)))

det(SHEPHERD-5, A-1)
nn(SHEPHERD-5, TALK-2)
nn(SHEPHERD-5, WITH-3)
nn(SHEPHERD-5, MR-4)
nsubj(XX-6, SHEPHERD-5)
root(ROOT-0, XX-6)

(ROOT
  (S
    (NP (NNP HOW) (NNP WILLIE) (NNP DID) (NNP HIS))
    (VP (VBP BEST)
      (S
        (VP (TO TO)
          (VP (VB MAKE)
            (NP
              (NP (DT A) (NN BIRD))
              (PP (IN OF)
                (NP (NNP AGNES) (NNP XXI))))))))
    (. .)))

nn(HIS-4, HOW-1)
nn(HIS-4, WILLIE-2)
nn(HIS-4, DID-3)
nsubj(BEST-5, HIS-4)
nsubj(MAKE-7, HIS-4)
root(ROOT-0, BEST-5)
aux(MAKE-7, TO-6)
xcomp(BEST-5, MAKE-7)
det(BIRD-9, A-8)
dobj(MAKE-7, BIRD-9)
nn(XXI-12, AGNES-11)
prep_of(BIRD-9, XXI-12)

(ROOT
  (S
    (NP (NNP HOW) (NNP AGNES))
    (VP (VBD LIKED)
      (S
        (VP (VBG BEING)
          (NP (DT A) (NNP BIRD) (NNP XXII)))))
    (. .)))

nn(AGNES-2, HOW-1)
nsubj(LIKED-3, AGNES-2)
root(ROOT-0, LIKED-3)
cop(XXII-7, BEING-4)
det(XXII-7, A-5)
nn(XXII-7, BIRD-6)
xcomp(LIKED-3, XXII-7)

(ROOT
  (S
    (NP (NNP WILLIE) (POS 'S))
    (VP (VBZ PLANS)
      (NP (NNP BUD) (NNP XXIII)))
    (. .)))

nsubj(PLANS-3, WILLIE-1)
possessive(WILLIE-1, 'S-2)
root(ROOT-0, PLANS-3)
nn(XXIII-5, BUD-4)
dobj(PLANS-3, XXIII-5)

(ROOT
  (S
    (NP (NNP WILLIE) (POS 'S))
    (VP (VBZ PLANS)
      (NP (NNP BLOSSOM) (NNP XXIV)))
    (. .)))

nsubj(PLANS-3, WILLIE-1)
possessive(WILLIE-1, 'S-2)
root(ROOT-0, PLANS-3)
nn(XXIV-5, BLOSSOM-4)
dobj(PLANS-3, XXIV-5)

(ROOT
  (SINV
    (S
      (NP (NNP WILLIE) (POS 'S))
      (VP (VBZ PLANS)
        (NP
          (NP
            (NP (NNP BEAR) (NNP FRUIT) (NNP ILLUSTRATIONS) (NNP BY) (NNP ARTHUR) (NNP HUGHES) (NNP WILLIE) (POS 'S))
            (NNP HORSE-SHOEING) (NNP FORGE))
          (PRN (-LRB- -LRB-)
            (NP (NNP FRONTISPIECE))
            (-RRB- -RRB-)))
        (PP
          (NP
            (NP (NNP MRS) (NNP WILSON) (POS 'S))
            (NNP STORIES) (NNP WILLIE))
          (IN WITH)
          (NP (DT THE) (NNP BABY) (NNP WILLIE) (NNP TAKEN) (NNP TO)))))
    (VP (VBP SEE)
      (NP
        (NP (DT A) (NNP WATER-WHEEL) (NNP WILLIE) (NNP TOLD) (NNP HIS) (NNP FATHER) (NNP ALL) (NNP ABOUT) (NNP IT))
        (`` ``)
        (NP (NNP THAT) (NNP 'S) (NNP WILLIE) (NNP AGAIN))
        ('' '')
        (NP
          (NP (NNP WILLIE) (NNP MAKES) (NNP A) (NNP BIRD))
          (PP (IN OF)
            (NP
              (NP (NNP AGNES) (NNP WILLIE) (POS 'S))
              (NNP DREAM) (NNP Summary))))
        (: :)))
    (NP
      (NP (NNP Gutta) (NNP Percha) (NNP Willie))
      (, ,)
      (NP
        (NP (DT the) (JJ Working) (NN Genius))
        (PP (IN for)
          (NP (DT all) (NN reading) (NNS ages)))))
    (. .)))

nsubj(PLANS-3, WILLIE-1)
possessive(WILLIE-1, 'S-2)
dep(SEE-28, PLANS-3)
nn(WILLIE-10, BEAR-4)
nn(WILLIE-10, FRUIT-5)
nn(WILLIE-10, ILLUSTRATIONS-6)
nn(WILLIE-10, BY-7)
nn(WILLIE-10, ARTHUR-8)
nn(WILLIE-10, HUGHES-9)
poss(FORGE-13, WILLIE-10)
nn(FORGE-13, HORSE-SHOEING-12)
dobj(PLANS-3, FORGE-13)
appos(FORGE-13, FRONTISPIECE-15)
nn(WILSON-18, MRS-17)
poss(WILLIE-21, WILSON-18)
nn(WILLIE-21, STORIES-20)
dep(PLANS-3, WILLIE-21)
det(TO-27, THE-23)
nn(TO-27, BABY-24)
nn(TO-27, WILLIE-25)
nn(TO-27, TAKEN-26)
prep_with(PLANS-3, TO-27)
root(ROOT-0, SEE-28)
det(IT-37, A-29)
nn(IT-37, WATER-WHEEL-30)
nn(IT-37, WILLIE-31)
nn(IT-37, TOLD-32)
nn(IT-37, HIS-33)
nn(IT-37, FATHER-34)
nn(IT-37, ALL-35)
nn(IT-37, ABOUT-36)
dobj(SEE-28, IT-37)
nn(AGAIN-42, THAT-39)
nn(AGAIN-42, 'S-40)
nn(AGAIN-42, WILLIE-41)
dep(IT-37, AGAIN-42)
nn(BIRD-47, WILLIE-44)
nn(BIRD-47, MAKES-45)
nn(BIRD-47, A-46)
dep(IT-37, BIRD-47)
nn(WILLIE-50, AGNES-49)
poss(Summary-53, WILLIE-50)
nn(Summary-53, DREAM-52)
prep_of(BIRD-47, Summary-53)
nn(Willie-57, Gutta-55)
nn(Willie-57, Percha-56)
nsubj(SEE-28, Willie-57)
det(Genius-61, the-59)
amod(Genius-61, Working-60)
appos(Willie-57, Genius-61)
det(ages-65, all-63)
nn(ages-65, reading-64)
prep_for(Genius-61, ages-65)

(ROOT
  (S
    (NP (PRP We)
      (CC and)
      (NNP Willie))
    (VP (VBP discover)
      (NP
        (NP (DT the) (NN value))
        (PP (IN of)
          (S
            (VP (VBG learning)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ useful)
                      (PP
                        (PP (IN with)
                          (NP (PRP$ our) (NNS hands)
                            (S
                              (VP (TO to)
                                (VP (VB do)
                                  (NP
                                    (NP (DT that))
                                    (SBAR
                                      (WHNP (WDT which))
                                      (S
                                        (VP (VBZ is)
                                          (ADJP (JJ good)))))))))))
                        (CC and)
                        (PP (IN before)
                          (NP (PRP us)))))))))))))
    (. .)))

nsubj(discover-4, We-1)
conj_and(We-1, Willie-3)
nsubj(discover-4, Willie-3)
root(ROOT-0, discover-4)
det(value-6, the-5)
dobj(discover-4, value-6)
prepc_of(value-6, learning-8)
aux(useful-11, to-9)
cop(useful-11, be-10)
xcomp(learning-8, useful-11)
xcomp(learning-8, useful-11')
conj_and(useful-11, useful-11')
poss(hands-14, our-13)
prep_with(useful-11, hands-14)
aux(do-16, to-15)
vmod(hands-14, do-16)
dobj(do-16, that-17)
nsubj(good-20, that-17)
cop(good-20, is-19)
rcmod(that-17, good-20)
prep_before(useful-11', us-23)

(ROOT
  (NP
    (NP (NNP Reading) (NNP Level))
    (: :)
    (PP (IN for)
      (NP (DT all) (NN reading) (NNS ages)))
    (. .)))

nn(Level-2, Reading-1)
root(ROOT-0, Level-2)
det(ages-7, all-5)
nn(ages-7, reading-6)
prep_for(Level-2, ages-7)

(ROOT
  (NP
    (NP (DT THE) (NN HISTORY))
    (PP (IN OF)
      (NP (NNP GUTTA-PERCHA) (NNP WILLIE)))
    (. .)))

det(HISTORY-2, THE-1)
root(ROOT-0, HISTORY-2)
nn(WILLIE-5, GUTTA-PERCHA-4)
prep_of(HISTORY-2, WILLIE-5)

(ROOT
  (S
    (NP
      (NP (NNP CHAPTER) (NNP I.))
      (SBAR
        (WHNP (WP WHO))
        (S
          (NP (PRP HE))
          (VP (VBD WAS)
            (ADJP (JJ AND))))))
    (VP (VBP WHERE)
      (SBAR
        (S
          (NP (PRP HE))
          (VP (VBD WAS)))))
    (. .)))

nn(I.-2, CHAPTER-1)
dobj(AND-6, I.-2)
nsubj(WHERE-7, I.-2)
nsubj(AND-6, HE-4)
cop(AND-6, WAS-5)
rcmod(I.-2, AND-6)
root(ROOT-0, WHERE-7)
nsubj(WAS-9, HE-8)
ccomp(WHERE-7, WAS-9)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN been)
              (PP (IN at)
                (NP (NN school)))
              (PP (IN for)
                (NP
                  (QP (RB about) (CD three))
                  (NNS weeks)))))))
      (, ,)
      (NP (DT the) (NNS boys))
      (VP (VBD called)
        (S
          (NP (PRP him))
          (NP (NNP Six-fingered) (NNP Jack)))))
    (: ;)
    (CC but)
    (S
      (NP (PRP$ his) (JJ real) (NN name))
      (VP (VBD was)
        (NP (NNP Willie))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP$ his) (NN father)
              (CC and)
              (NN mother))
            (VP
              (VP (VBD gave)
                (NP (PRP it))
                (NP
                  (NP (PRP him))
                  (PRN (: --) (RB not)
                    (NP (NNP William)))))
              (, ,)
              (CC but)
              (VP
                (NP (NNP Willie))
                (, ,)
                (PP (IN after)
                  (NP
                    (NP (DT a) (NN brother))
                    (PP (IN of)
                      (NP
                        (NP (PRP$ his) (NN father))
                        (, ,)
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP
                              (VP (VBD died)
                                (S
                                  (ADJP (JJ young))))
                              (, ,)
                              (CC and)
                              (VP (VBD had)
                                (ADVP (RB always))
                                (VP (VBN been)
                                  (VP (VBN called)
                                    (NP (NNP Willie))))))))))))))))))
    (. .)))

advmod(been-4, When-1)
nsubj(been-4, he-2)
aux(been-4, had-3)
advcl(called-14, been-4)
prep_at(been-4, school-6)
quantmod(three-9, about-8)
num(weeks-10, three-9)
prep_for(been-4, weeks-10)
det(boys-13, the-12)
nsubj(called-14, boys-13)
root(ROOT-0, called-14)
nsubj(Jack-17, him-15)
nn(Jack-17, Six-fingered-16)
xcomp(called-14, Jack-17)
poss(name-22, his-20)
amod(name-22, real-21)
nsubj(Willie-24, name-22)
cop(Willie-24, was-23)
conj_but(called-14, Willie-24)
mark(gave-31, for-26)
poss(father-28, his-27)
nsubj(gave-31, father-28)
conj_and(father-28, mother-30)
nsubj(gave-31, mother-30)
advcl(Willie-24, gave-31)
iobj(gave-31, it-32)
dobj(gave-31, him-33)
dep(William-36, not-35)
dep(him-33, William-36)
advcl(Willie-24, Willie-39)
conj_but(gave-31, Willie-39)
det(brother-43, a-42)
prep_after(Willie-39, brother-43)
poss(father-46, his-45)
prep_of(brother-43, father-46)
nsubj(died-49, father-46)
nsubjpass(called-56, father-46)
rcmod(father-46, died-49)
acomp(died-49, young-50)
aux(called-56, had-53)
advmod(called-56, always-54)
auxpass(called-56, been-55)
rcmod(father-46, called-56)
conj_and(died-49, called-56)
dobj(called-56, Willie-57)

(ROOT
  (S
    (NP
      (NP (PRP$ His) (NN name))
      (PP (IN in)
        (NP (JJ full))))
    (VP (VBD was)
      (NP (NNP Willie) (NNP Macmichael)))
    (. .)))

poss(name-2, His-1)
nsubj(Macmichael-7, name-2)
prep_in(name-2, full-4)
cop(Macmichael-7, was-5)
nn(Macmichael-7, Willie-6)
root(ROOT-0, Macmichael-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB generally))
      (VP (VBN pronounced)
        (NP
          (NP
            (NP (NNP Macmickle))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD was) (, ,)
                  (PP (IN by)
                    (NP (DT a) (JJ learned) (NN anthropologist)))
                  (, ,)
                  (PP (IN for)
                    (NP
                      (NP (JJ certain) (NNS reasons))
                      (VP (IN about)
                        (S
                          (VP (TO to)
                            (VP (VB appear)
                              (PP (IN in)
                                (NP (DT this) (NN history))))))))))))
            (, ,))
          (VP (VBN supposed)
            (S
              (VP (TO to)
                (VP (VB have)
                  (VP (VBN been)
                    (NP
                      (NP (DT the) (JJ original) (NN form))
                      (PP (IN of)
                        (NP (DT the) (NN name)))))))))
          (, ,)
          (VP (VBG dignified)
            (PP (IN in)
              (NP
                (NP (DT the) (NN course))
                (PP (IN of)
                  (NP (NN time)))))
            (PP (IN into)
              (NP (NNP Macmichael)))))))
    (. .)))

nsubjpass(pronounced-4, It-1)
auxpass(pronounced-4, was-2)
advmod(pronounced-4, generally-3)
root(ROOT-0, pronounced-4)
dobj(pronounced-4, Macmickle-5)
nsubj(was-8, Macmickle-5)
rcmod(Macmickle-5, was-8)
det(anthropologist-13, a-11)
amod(anthropologist-13, learned-12)
prep_by(was-8, anthropologist-13)
amod(reasons-17, certain-16)
prep_for(was-8, reasons-17)
dep(reasons-17, about-18)
aux(appear-20, to-19)
xcomp(about-18, appear-20)
det(history-23, this-22)
prep_in(appear-20, history-23)
vmod(Macmickle-5, supposed-25)
aux(form-31, to-26)
aux(form-31, have-27)
cop(form-31, been-28)
det(form-31, the-29)
amod(form-31, original-30)
xcomp(supposed-25, form-31)
det(name-34, the-33)
prep_of(form-31, name-34)
vmod(Macmickle-5, dignified-36)
det(course-39, the-38)
prep_in(dignified-36, course-39)
prep_of(course-39, time-41)
prep_into(dignified-36, Macmichael-43)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (PRP$ his) (JJ own) (NN father))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD gave)
            (NP (PRP him))
            (NP
              (NP (DT the) (NN name))
              (PP (IN of)
                (NP
                  (NP (NNP Gutta-Percha) (NNP Willie))
                  (, ,)
                  (SBAR
                    (WHNP
                      (NP (DT the) (NN reason))
                      (WHPP (IN of)
                        (WHNP (WDT which))))
                    (S
                      (VP (MD will)
                        (ADVP (RB also))
                        (VP (VB show)
                          (NP (PRP itself))
                          (PP
                            (PP (IN by))
                            (CC and)
                            (PP (IN by))))))))))))))
    (. .)))

nsubj(father-5, It-1)
cop(father-5, was-2)
poss(father-5, his-3)
amod(father-5, own-4)
root(ROOT-0, father-5)
advmod(father-5, however-7)
nsubj(gave-10, who-9)
dep(father-5, gave-10)
iobj(gave-10, him-11)
det(name-13, the-12)
dobj(gave-10, name-13)
nn(Willie-16, Gutta-Percha-15)
prep_of(name-13, Willie-16)
prep_of(reason-19, Willie-16)
prep_by(show-24, Willie-16)
det(reason-19, the-18)
nsubj(show-24, reason-19)
aux(show-24, will-22)
advmod(show-24, also-23)
rcmod(Willie-16, show-24)
dobj(show-24, itself-25)

(ROOT
  (S
    (NP (NNP Mr) (NNP Macmichael))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT a) (NN country) (NN doctor))
          (, ,)
          (VP (VBG living)
            (PP (IN in)
              (NP
                (NP (DT a) (JJ small) (NN village))
                (PP (IN in)
                  (NP (DT a) (JJ thinly-peopled) (NN country)))))))
        (: ;)
        (NP
          (NP (DT the) (JJ first) (NN result))
          (PP (IN of)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD was)
                  (NP
                    (SBAR (IN that)
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (NP
                            (ADJP (RB very) (JJ hard))
                            (NN work))
                          (, ,)
                          (SBAR (IN for)
                            (S
                              (NP (PRP he))
                              (VP (VBD had)
                                (ADVP (RB often))
                                (S
                                  (VP (TO to)
                                    (VP (VB ride)
                                      (NP (JJ many) (NNS miles))
                                      (S
                                        (VP (TO to)
                                          (VP (VB see)
                                            (NP (DT a) (NN patient))))))))))))))
                    (, ,)
                    (CC and)
                    (SBAR (IN that)
                      (FRAG (RB not)
                        (ADJP (JJ unfrequently)
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NN middle))
                              (PP (IN of)
                                (NP (DT the) (NN night))))))))))))))
        (: ;)
        (CC and)
        (NP
          (NP (DT the) (NN second))
          (SBAR (IN that)
            (S (, ,)
              (PP (IN for)
                (NP (DT this) (JJ hard) (NN work)))
              (, ,)
              (NP (PRP he))
              (VP (VBD had)
                (NP
                  (ADJP (RB very) (JJ little))
                  (NN pay))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (DT a) (JJ thinly-peopled) (NN country))
                    (VP (VBZ is)
                      (ADVP (RB generally))
                      (NP
                        (NP (DT a) (JJ poor) (NN country))
                        (, ,)
                        (CC and)
                        (NP
                          (NP (DT those))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBP live)
                                (SBAR (IN in)
                                  (S
                                    (NP (PRP it))
                                    (VP (VBP are)
                                      (ADJP (JJ poor))
                                      (ADVP (RB also)))))))))))))
                (, ,)
                (CC and)
                (VP (MD can) (RB not)
                  (VP (VB spend)
                    (ADVP (RB much) (RB even))
                    (PP (IN upon)
                      (NP (PRP$ their) (NN health)))))))))))
    (. .)))

nn(Macmichael-2, Mr-1)
nsubj(doctor-6, Macmichael-2)
cop(doctor-6, was-3)
det(doctor-6, a-4)
nn(doctor-6, country-5)
root(ROOT-0, doctor-6)
vmod(doctor-6, living-8)
det(village-12, a-10)
amod(village-12, small-11)
prep_in(living-8, village-12)
det(country-16, a-14)
amod(country-16, thinly-peopled-15)
prep_in(village-12, country-16)
det(result-20, the-18)
amod(result-20, first-19)
conj_and(doctor-6, result-20)
nsubj(had-26, which-22)
cop(had-26, was-23)
mark(had-26, that-24)
nsubj(had-26, he-25)
prepc_of(result-20, had-26)
advmod(hard-28, very-27)
amod(work-29, hard-28)
dobj(had-26, work-29)
mark(had-33, for-31)
nsubj(had-33, he-32)
nsubj(ride-36, he-32)
advcl(had-26, had-33)
advmod(had-33, often-34)
aux(ride-36, to-35)
xcomp(had-33, ride-36)
amod(miles-38, many-37)
dobj(ride-36, miles-38)
aux(see-40, to-39)
vmod(ride-36, see-40)
det(patient-42, a-41)
dobj(see-40, patient-42)
mark(not-46, that-45)
prepc_of(result-20, not-46)
conj_and(had-26, not-46)
dep(not-46, unfrequently-47)
det(middle-50, the-49)
prep_in(unfrequently-47, middle-50)
det(night-53, the-52)
prep_of(middle-50, night-53)
det(second-57, the-56)
conj_and(doctor-6, second-57)
mark(pay-69, that-58)
det(work-63, this-61)
amod(work-63, hard-62)
prep_for(pay-69, work-63)
nsubj(pay-69, he-65)
nsubj(spend-94, he-65)
aux(pay-69, had-66)
advmod(little-68, very-67)
amod(pay-69, little-68)
dep(second-57, pay-69)
mark(country-79, for-71)
det(country-74, a-72)
amod(country-74, thinly-peopled-73)
nsubj(country-79, country-74)
cop(country-79, is-75)
advmod(country-79, generally-76)
det(country-79, a-77)
amod(country-79, poor-78)
dep(second-57, country-79)
advcl(pay-69, country-79)
conj_and(pay-69, country-79)
advcl(pay-69, those-82)
conj_and(pay-69, those-82)
conj_and(country-79, those-82)
nsubj(live-84, those-82)
rcmod(those-82, live-84)
mark(poor-88, in-85)
nsubj(poor-88, it-86)
cop(poor-88, are-87)
advcl(live-84, poor-88)
advmod(poor-88, also-89)
aux(spend-94, can-92)
neg(spend-94, not-93)
dep(second-57, spend-94)
conj_and(pay-69, spend-94)
advmod(even-96, much-95)
advmod(spend-94, even-96)
poss(health-99, their-98)
prep_upon(spend-94, health-99)

(ROOT
  (S (CC But)
    (S
      (NP (DT the) (NN doctor))
      (CONJP (RB not) (JJ only))
      (VP (VBD preferred)
        (NP (DT a) (NN country) (NN life))
        (, ,)
        (SBAR (IN although)
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB have)
                (VP (VBN been)
                  (ADJP (JJ glad)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (NP (JJR richer) (NNS patients)))))))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN within)
        (NP
          (NP (JJR less) (NNS distances))
          (PP (IN of)
            (NP (DT each) (JJ other)))))
      (, ,)
      (CC but)
      (NP (PRP he))
      (VP (MD would)
        (VP (VB say)
          (PP (TO to)
            (NP
              (NP (DT any) (NN one))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD expressed)
                    (NP
                      (NP (NN surprise))
                      (SBAR (IN that)
                        (S (, ,)
                          (PP (IN with)
                            (NP (PRP$ his) (NN reputation)))
                          (, ,)
                          (NP (PRP he))
                          (VP (MD should)
                            (VP (VB remain)
                              (SBAR
                                (WHADVP (WRB where))
                                (S
                                  (NP (PRP he))
                                  (VP (VBD was))))))))
                      (: --) (`` ``)
                      (SBAR
                        (WHNP (WP What))
                        (S
                          (VP (VBZ 's)
                            (S
                              (VP (TO to)
                                (VP (VB become)
                                  (PP (IN of)
                                    (NP (PRP$ my) (JJ little) (NN flock)))))))))))))))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBP go)
                (PRT (RP away)))))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (NP (RB very) (JJ few) (NNS doctors))
                  (PP (IN of)
                    (NP (PRP$ my) (NN experience)))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (MD would)
                        (VP (VB feel)
                          (ADJP (JJ inclined)
                            (S
                              (VP (TO to)
                                (VP (VB come)
                                  (CC and)
                                  (VB undertake)
                                  (NP (PRP$ my) (NN work)))))))))))))))))
    (. .)))

det(doctor-3, the-2)
root(ROOT-0, doctor-3)
neg(only-5, not-4)
dep(doctor-3, only-5)
conj_but(doctor-3, preferred-6)
det(life-9, a-7)
nn(life-9, country-8)
dobj(preferred-6, life-9)
mark(glad-16, although-11)
nsubj(glad-16, he-12)
nsubj(have-18, he-12)
aux(glad-16, would-13)
aux(glad-16, have-14)
cop(glad-16, been-15)
advcl(preferred-6, glad-16)
aux(have-18, to-17)
xcomp(glad-16, have-18)
amod(patients-20, richer-19)
dobj(have-18, patients-20)
amod(distances-25, less-24)
prep_within(say-33, distances-25)
det(other-28, each-27)
prep_of(distances-25, other-28)
conj_and(doctor-3, he-31)
conj_but(say-33, he-31)
nsubj(say-33, he-31)
aux(say-33, would-32)
conj_and(doctor-3, say-33)
det(one-36, any-35)
prep_to(say-33, one-36)
nsubj(expressed-38, one-36)
rcmod(one-36, expressed-38)
dobj(expressed-38, surprise-39)
nsubj('s-55, surprise-39)
nsubj(become-57, surprise-39)
mark(remain-48, that-40)
poss(reputation-44, his-43)
prep_with(remain-48, reputation-44)
nsubj(remain-48, he-46)
aux(remain-48, should-47)
dep(surprise-39, remain-48)
advmod(was-51, where-49)
nsubj(was-51, he-50)
advcl(remain-48, was-51)
rcmod(surprise-39, 's-55)
aux(become-57, to-56)
xcomp('s-55, become-57)
poss(flock-61, my-59)
amod(flock-61, little-60)
prep_of(become-57, flock-61)
mark(go-64, if-62)
nsubj(go-64, I-63)
advcl(say-33, go-64)
prt(go-64, away-65)
mark(are-69, for-67)
expl(are-69, there-68)
advcl(say-33, are-69)
advmod(doctors-72, very-70)
amod(doctors-72, few-71)
nsubj(are-69, doctors-72)
nsubj(feel-78, doctors-72)
poss(experience-75, my-74)
prep_of(doctors-72, experience-75)
aux(feel-78, would-77)
rcmod(doctors-72, feel-78)
acomp(feel-78, inclined-79)
aux(come-81, to-80)
xcomp(inclined-79, come-81)
xcomp(inclined-79, undertake-83)
conj_and(come-81, undertake-83)
poss(work-85, my-84)
dobj(come-81, work-85)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP
          (NP (DT every) (NN man) (, ,) (NN woman) (, ,)
            (CC and)
            (NN child))
          (PP (IN in)
            (NP (DT the) (JJ whole) (NN country-side))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ makes)
        (NP (PDT all) (DT the) (NN difference))))
    (. .) ('' '')))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
det(man-4, every-3)
dobj(know-2, man-4)
dobj(know-2, woman-6)
conj_and(man-4, woman-6)
dobj(know-2, child-9)
conj_and(man-4, child-9)
det(country-side-13, the-11)
amod(country-side-13, whole-12)
prep_in(man-4, country-side-13)
nsubj(makes-17, that-16)
conj_and(know-2, makes-17)
predet(difference-20, all-18)
det(difference-20, the-19)
dobj(makes-17, difference-20)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see) (, ,)
        (ADVP (RB therefore))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (NP (DT a) (JJ good) (JJ kind-hearted) (NN man)))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBN loved)
          (NP (PRP$ his) (NN work))
          (, ,)
          (PP (IN for)
            (NP
              (NP (DT the) (NN sake))
              (PP (IN of)
                (NP
                  (NP (DT those))
                  (SBAR
                    (WHNP (WP whom))
                    (S
                      (NP (PRP he))
                      (VP (VBD helped)
                        (PP (IN by)
                          (NP (PRP it)))
                        (, ,)
                        (ADVP
                          (ADVP (RBR better))
                          (PP (IN than)
                            (NP (DT the) (NN money)))))))))))))
      (NP (PRP he))
      (VP (VBD received)
        (PP (IN for)
          (NP (PRP it)))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
advmod(see-2, therefore-4)
mark(man-12, that-6)
nsubj(man-12, he-7)
cop(man-12, was-8)
det(man-12, a-9)
amod(man-12, good-10)
amod(man-12, kind-hearted-11)
ccomp(see-2, man-12)
dep(received-35, loved-15)
poss(work-17, his-16)
dobj(loved-15, work-17)
det(sake-21, the-20)
prep_for(loved-15, sake-21)
prep_of(sake-21, those-23)
dobj(helped-26, those-23)
nsubj(helped-26, he-25)
rcmod(those-23, helped-26)
prep_by(helped-26, it-28)
advmod(helped-26, better-30)
det(money-33, the-32)
prep_than(better-30, money-33)
nsubj(received-35, he-34)
conj_and(see-2, received-35)
prep_for(received-35, it-37)

(ROOT
  (S
    (NP (PRP$ Their) (NN home))
    (VP (VBD was)
      (ADVP (RB necessarily))
      (NP
        (NP (DT a)
          (ADJP (RB very) (JJ humble))
          (NN one))
        (: --)
        (NP
          (NP (DT a) (JJ neat) (JJ little) (NN cottage))
          (PP (IN in)
            (NP (DT the) (NN village)))
          (PP (IN of)
            (NP (NNP Priory) (NNPS Leas)))
          (: --) (RB almost)
          (NP (DT the)
            (ADJP
              (NP (CD one))
              (JJ pretty))
            (NN spot) (NN thereabout)))))
    (. .)))

poss(home-2, Their-1)
nsubj(one-8, home-2)
cop(one-8, was-3)
advmod(one-8, necessarily-4)
det(one-8, a-5)
advmod(humble-7, very-6)
amod(one-8, humble-7)
root(ROOT-0, one-8)
det(cottage-13, a-10)
amod(cottage-13, neat-11)
amod(cottage-13, little-12)
dep(one-8, cottage-13)
det(village-16, the-15)
prep_in(cottage-13, village-16)
nn(Leas-19, Priory-18)
prep_of(cottage-13, Leas-19)
advmod(cottage-13, almost-21)
det(thereabout-26, the-22)
npadvmod(pretty-24, one-23)
amod(thereabout-26, pretty-24)
nn(thereabout-26, spot-25)
dep(cottage-13, thereabout-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD lay)
      (PP (IN in)
        (NP (DT a) (NN valley)))
      (PP (IN in)
        (NP
          (NP (DT the) (NN midst))
          (PP (IN of)
            (NP
              (NP (NNS hills))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD did) (RB not)
                    (VP (VB look)
                      (ADJP (JJ high))
                      (, ,)
                      (SBAR (IN because)
                        (S
                          (NP (PRP they))
                          (VP
                            (VP (VBD rose)
                              (PP (IN with)
                                (NP (DT a) (JJ gentle) (NN slope))))
                            (, ,)
                            (CC and)
                            (VP (VBD had)
                              (NP
                                (NP (DT no) (JJ bold) (NNS elevations))
                                (CC or)
                                (NP (JJ grand-shaped) (NNS peaks))))))))))))))))
    (. .)))

nsubj(lay-2, It-1)
root(ROOT-0, lay-2)
det(valley-5, a-4)
prep_in(lay-2, valley-5)
det(midst-8, the-7)
prep_in(lay-2, midst-8)
prep_of(midst-8, hills-10)
nsubj(look-15, hills-10)
aux(look-15, did-13)
neg(look-15, not-14)
rcmod(hills-10, look-15)
acomp(look-15, high-16)
mark(rose-20, because-18)
nsubj(rose-20, they-19)
nsubj(had-27, they-19)
advcl(look-15, rose-20)
det(slope-24, a-22)
amod(slope-24, gentle-23)
prep_with(rose-20, slope-24)
advcl(look-15, had-27)
conj_and(rose-20, had-27)
neg(elevations-30, no-28)
amod(elevations-30, bold-29)
dobj(had-27, elevations-30)
amod(peaks-33, grand-shaped-32)
dobj(had-27, peaks-33)
conj_or(elevations-30, peaks-33)

(ROOT
  (S (CC But)
    (S
      (NP (PRP they))
      (VP (VBD rose)
        (PP (TO to)
          (NP (DT a) (JJ good) (NN height)))
        (ADVP (RB notwithstanding))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN weather))
        (PP (IN on)
          (NP
            (NP (DT the) (NN top))
            (PP (IN of)
              (NP (PRP them)))
            (PP (IN in)
              (NP (DT the) (NN wintertime))))))
      (VP (VBD was)
        (ADJP
          (ADJP (RB often) (JJ bitter)
            (CC and)
            (JJ fierce))
          (: --)
          (ADJP (JJ bitter)
            (PP (IN with)
              (NP (JJ keen) (NN frost))))
          (, ,)
          (CC and)
          (ADJP (JJ fierce)
            (PP (IN with)
              (PP (IN as)
                (NP (JJ wild) (NNS winds))))))
        (SBAR (IN as)
          (S
            (ADVP (RB ever))
            (VP (VBD blew))))))
    (. .)))

nsubj(rose-3, they-2)
root(ROOT-0, rose-3)
det(height-7, a-5)
amod(height-7, good-6)
prep_to(rose-3, height-7)
advmod(rose-3, notwithstanding-8)
det(weather-12, the-11)
nsubj(bitter-23, weather-12)
nsubj(fierce-25, weather-12)
nsubj(bitter-27, weather-12)
nsubj(fierce-33, weather-12)
det(top-15, the-14)
prep_on(weather-12, top-15)
prep_of(top-15, them-17)
det(wintertime-20, the-19)
prep_in(top-15, wintertime-20)
cop(bitter-23, was-21)
advmod(bitter-23, often-22)
conj_and(rose-3, bitter-23)
conj_and(rose-3, fierce-25)
conj_and(bitter-23, fierce-25)
conj_and(rose-3, bitter-27)
conj_and(bitter-23, bitter-27)
amod(frost-30, keen-29)
prep_with(bitter-27, frost-30)
conj_and(rose-3, fierce-33)
conj_and(bitter-23, fierce-33)
prep(fierce-33, with-34)
pcomp(with-34, as-35)
amod(winds-37, wild-36)
pobj(as-35, winds-37)
mark(blew-40, as-38)
advmod(blew-40, ever-39)
advcl(bitter-23, blew-40)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP (DT both) (NN frost)
          (CC and)
          (NN wind)))
      (NP
        (NP (DT the) (NN village))
        (PP (IN at)
          (NP (PRP$ their) (NNS feet))))
      (VP (VBD had)
        (NP (PRP$ its) (NN share))
        (ADVP (RB too))))
    (, ,)
    (CC but)
    (S
      (PP (IN of)
        (NP (NN course)))
      (NP (PRP they))
      (VP (VBD were) (RB not)
        (ADJP (RB so) (JJ bad)
          (PRN
            (ADVP (RB down) (RB below))
            (, ,)
            (SBAR (IN for)
              (S
                (S
                  (NP (DT the) (NNS hills))
                  (VP (VBD were)
                    (NP
                      (NP (DT a) (NN shelter))
                      (PP (IN from)
                        (NP (DT the) (NN wind))))))
                (, ,)
                (CC and)
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (ADVP (RB always))
                    (VP (VBG colder)
                      (ADVP (DT the) (RBR farther))))))))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP go)
                (ADVP (RB up)
                  (CC and)
                  (RB away))
                (PP (IN from)
                  (NP
                    (NP (DT the) (NN heart))
                    (PP (IN of)
                      (NP
                        (NP (DT this) (JJ warm) (NN ball))
                        (PP (IN of)
                          (NP (NN rock)
                            (CC and)
                            (NN earth)))))))
                (PP (IN upon)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP (PRP we))
                      (VP (VBP live)))))))))))
    (. .)))

preconj(frost-3, both-2)
prep_of(had-11, frost-3)
conj_and(frost-3, wind-5)
prep_of(had-11, wind-5)
det(village-7, the-6)
nsubj(had-11, village-7)
poss(feet-10, their-9)
prep_at(village-7, feet-10)
root(ROOT-0, had-11)
poss(share-13, its-12)
dobj(had-11, share-13)
advmod(had-11, too-14)
prep_of(bad-23, course-18)
nsubj(bad-23, they-19)
cop(bad-23, were-20)
neg(bad-23, not-21)
advmod(bad-23, so-22)
conj_but(had-11, bad-23)
advmod(below-25, down-24)
dep(shelter-32, below-25)
mark(shelter-32, for-27)
det(hills-29, the-28)
nsubj(shelter-32, hills-29)
cop(shelter-32, were-30)
det(shelter-32, a-31)
dep(bad-23, shelter-32)
det(wind-35, the-34)
prep_from(shelter-32, wind-35)
nsubj(colder-41, it-38)
aux(colder-41, is-39)
advmod(colder-41, always-40)
dep(bad-23, colder-41)
conj_and(shelter-32, colder-41)
dep(farther-43, the-42)
advmod(colder-41, farther-43)
nsubj(go-45, you-44)
ccomp(bad-23, go-45)
advmod(go-45, up-46)
advmod(go-45, away-48)
conj_and(up-46, away-48)
det(heart-51, the-50)
prep_from(go-45, heart-51)
det(ball-55, this-53)
amod(ball-55, warm-54)
prep_of(heart-51, ball-55)
prep_of(ball-55, rock-57)
prep_of(ball-55, earth-59)
conj_and(rock-57, earth-59)
dobj(live-63, which-61)
nsubj(live-63, we-62)
prepc_upon(go-45, live-63)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (S
          (NP
            (NP (NNP Willie) (POS 's))
            (NN father))
          (VP (VBD was)
            (VP (VBG riding)
              (PP (IN across)
                (NP
                  (NP (DT the) (JJ great) (NN moorland))
                  (PP (IN of)
                    (NP (DT those) (JJ desolate) (NNS hills))))))))
        (, ,)
        (CC and)
        (S
          (NP
            (NP (DT the) (NNS people))
            (PP (IN in)
              (NP (DT the) (NN village))))
          (VP (MD would)
            (VP (VB be)
              (VP (VBG saying)
                (PP (TO to)
                  (NP (DT each) (JJ other)))
                (SBAR
                  (WHADVP (WRB how)
                    (ADJP (RB bitterly) (JJ cold)))
                  (S
                    (NP (PRP it))
                    (VP (VBD was))))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB be)
        (VP (VBG thinking)
          (SBAR
            (SBAR
              (WHADVP (WRB how)
                (ADJP (JJ snug)
                  (CC and)
                  (JJ warm)))
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (ADVP (RB down) (RB there)))))
            (, ,)
            (CC and)
            (SBAR
              (WHADVP (WRB how)
                (ADJP (JJ nice)))
              (S
                (NP (PRP it))
                (VP (MD would)
                  (VP (VB be)
                    (S
                      (VP (TO to)
                        (VP
                          (VP (VB turn)
                            (NP
                              (NP (DT a) (JJ certain) (NN corner))
                              (PP (IN on)
                                (NP (DT the) (NN road))))
                            (ADVP (RB back)))
                          (, ,)
                          (CC and)
                          (VP (VB slip)
                            (ADVP (IN at) (RB once))
                            (PP (RB out) (IN of)
                              (NP
                                (NP (DT the) (JJ freezing) (NN wind))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBD had)
                                      (NP (PRP it))
                                      (PP (RB all)
                                        (NP (PRP$ its) (JJ own) (NN way)))
                                      (ADVP (RB up)
                                        (PP (IN among)
                                          (NP
                                            (NP (DT the) (JJ withered) (NN gorse)
                                              (CC and)
                                              (NN heather))
                                            (PP (IN of)
                                              (NP (DT the) (JJ wide) (NN expanse))))))
                                      (SBAR
                                        (WHADVP (WRB where))
                                        (S
                                          (NP (PRP he))
                                          (VP (VBD pursued)
                                            (NP (PRP$ his) (JJ dreary) (NN journey))))))))))))))))))))))
    (. .)))

advmod(riding-6, When-1)
poss(father-4, Willie-2)
nsubj(riding-6, father-4)
aux(riding-6, was-5)
advcl(thinking-37, riding-6)
det(moorland-10, the-8)
amod(moorland-10, great-9)
prep_across(riding-6, moorland-10)
det(hills-14, those-12)
amod(hills-14, desolate-13)
prep_of(moorland-10, hills-14)
det(people-18, the-17)
nsubj(saying-24, people-18)
det(village-21, the-20)
prep_in(people-18, village-21)
aux(saying-24, would-22)
aux(saying-24, be-23)
conj_and(riding-6, saying-24)
advcl(thinking-37, saying-24)
det(other-27, each-26)
prep_to(saying-24, other-27)
advmod(was-32, how-28)
advmod(cold-30, bitterly-29)
dep(how-28, cold-30)
nsubj(was-32, it-31)
ccomp(saying-24, was-32)
nsubj(thinking-37, he-34)
aux(thinking-37, would-35)
aux(thinking-37, be-36)
root(ROOT-0, thinking-37)
advmod(was-43, how-38)
dep(how-38, snug-39)
dep(how-38, warm-41)
conj_and(snug-39, warm-41)
nsubj(was-43, it-42)
dep(thinking-37, was-43)
advmod(there-45, down-44)
advmod(was-43, there-45)
advmod(be-52, how-48)
dep(how-48, nice-49)
nsubj(be-52, it-50)
nsubj(turn-54, it-50)
nsubj(slip-64, it-50)
aux(be-52, would-51)
dep(thinking-37, be-52)
conj_and(was-43, be-52)
aux(turn-54, to-53)
xcomp(be-52, turn-54)
det(corner-57, a-55)
amod(corner-57, certain-56)
dobj(turn-54, corner-57)
det(road-60, the-59)
prep_on(corner-57, road-60)
advmod(turn-54, back-61)
xcomp(be-52, slip-64)
conj_and(turn-54, slip-64)
advmod(slip-64, at-65)
advmod(at-65, once-66)
det(wind-71, the-69)
amod(wind-71, freezing-70)
prep_out_of(slip-64, wind-71)
nsubj(had-73, wind-71)
rcmod(wind-71, had-73)
dobj(had-73, it-74)
prep(had-73, all-75)
poss(way-78, its-76)
amod(way-78, own-77)
pobj(all-75, way-78)
advmod(had-73, up-79)
det(gorse-83, the-81)
amod(gorse-83, withered-82)
prep_among(up-79, gorse-83)
prep_among(up-79, heather-85)
conj_and(gorse-83, heather-85)
det(expanse-89, the-87)
amod(expanse-89, wide-88)
prep_of(gorse-83, expanse-89)
advmod(pursued-92, where-90)
nsubj(pursued-92, he-91)
advcl(had-73, pursued-92)
poss(journey-95, his-93)
amod(journey-95, dreary-94)
dobj(pursued-92, journey-95)

(ROOT
  (S
    (PP (IN For)
      (NP (PRP$ his) (NN part)))
    (, ,)
    (NP (NNP Willie))
    (VP (VBD cared)
      (ADJP (RB very) (JJ little))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT the) (NN weather))
          (VP
            (VP (VBD was))
            (, ,)
            (CC but)
            (VP (VBD took)
              (NP (PRP it))
              (SBAR (IN as)
                (S
                  (NP (PRP it))
                  (VP (VBD came)))))))))
    (. .)))

poss(part-3, his-2)
prep_for(cared-6, part-3)
nsubj(cared-6, Willie-5)
root(ROOT-0, cared-6)
advmod(little-8, very-7)
acomp(cared-6, little-8)
dobj(was-12, what-9)
det(weather-11, the-10)
nsubj(was-12, weather-11)
nsubj(took-15, weather-11)
ccomp(cared-6, was-12)
ccomp(cared-6, took-15)
conj_but(was-12, took-15)
dobj(took-15, it-16)
mark(came-19, as-17)
nsubj(came-19, it-18)
advcl(took-15, came-19)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT the) (JJ hot) (NN summer)))
      (, ,)
      (NP (PRP he))
      (VP (MD would)
        (VP
          (VP (VB lie)
            (PP (IN in)
              (NP (DT the) (JJ long) (NN grass))))
          (CC and)
          (VP (VB get)
            (ADJP (JJ cool))))))
    (: ;)
    (S
      (PP (IN in)
        (NP (DT the) (JJ cold) (NN winter)))
      (, ,)
      (NP (PRP he))
      (VP (MD would)
        (VP
          (VP (VB scamper)
            (PRT (RP about)))
          (CC and)
          (VP (VB get)
            (ADJP (JJ warm))))))
    (. .)))

det(summer-4, the-2)
amod(summer-4, hot-3)
prep_in(lie-8, summer-4)
nsubj(lie-8, he-6)
nsubj(cool-15, he-6)
aux(lie-8, would-7)
root(ROOT-0, lie-8)
det(grass-12, the-10)
amod(grass-12, long-11)
prep_in(lie-8, grass-12)
dep(cool-15, get-14)
conj_and(lie-8, cool-15)
det(winter-20, the-18)
amod(winter-20, cold-19)
prep_in(scamper-24, winter-20)
nsubj(scamper-24, he-22)
nsubj(warm-28, he-22)
aux(scamper-24, would-23)
parataxis(lie-8, scamper-24)
prt(scamper-24, about-25)
dep(warm-28, get-27)
parataxis(lie-8, warm-28)
conj_and(scamper-24, warm-28)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP$ his) (NNS hands))
        (VP (VBD were)
          (ADJP (RB as) (JJ cold))
          (PP (IN as)
            (NP (NNS icicles))))))
    (, ,)
    (NP (PRP$ his) (NNS cheeks))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ red)
          (PP (IN as)
            (NP (NNS apples))))))
    (. .)))

advmod(cold-6, When-1)
poss(hands-3, his-2)
nsubj(cold-6, hands-3)
cop(cold-6, were-4)
advmod(cold-6, as-5)
advcl(red-14, cold-6)
prep_as(cold-6, icicles-8)
poss(cheeks-11, his-10)
nsubj(red-14, cheeks-11)
aux(red-14, would-12)
cop(red-14, be-13)
root(ROOT-0, red-14)
prep_as(red-14, apples-16)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP$ his) (NN mother))
          (VP
            (VP (VBD took)
              (NP (PRP$ his) (NNS hands))
              (PP (IN in)
                (NP (NNS hers))))
            (, ,)
            (CC and)
            (VP (VBN chafed)
              (S
                (NP (PRP them)))
              (, ,)
              (S
                (ADJP (JJ full)
                  (PP (IN of)
                    (NP
                      (NP (NN pity))
                      (PP (IN for)
                        (NP (PRP$ their) (NN suffering)))))))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (PRP she))
                  (VP (VBD thought)
                    (NP (PRP it)))))))))
      (, ,)
      (NP (NNP Willie))
      (ADVP (RB first))
      (VP (VBD knew)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBD were)
              (ADJP (JJ cold)
                (PP (IN by)
                  (NP
                    (NP (DT the) (JJ sweet) (NN warmth))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN kind) (NNS hands))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBN chafed)
                              (NP (PRP them)))))))))))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD had) (RB not)
        (VP (VBN thought)
          (PP (IN of)
            (NP (PRP it)))
          (ADVP (RB before)))))
    (. .)))

advmod(took-4, When-1)
poss(mother-3, his-2)
nsubj(took-4, mother-3)
nsubj(chafed-11, mother-3)
advcl(knew-28, took-4)
poss(hands-6, his-5)
dobj(took-4, hands-6)
prep_in(took-4, hers-8)
conj_and(took-4, chafed-11)
advcl(knew-28, chafed-11)
xcomp(chafed-11, them-12)
dep(chafed-11, full-14)
prep_of(full-14, pity-16)
poss(suffering-19, their-18)
prep_for(pity-16, suffering-19)
mark(thought-23, as-21)
nsubj(thought-23, she-22)
advcl(chafed-11, thought-23)
dobj(thought-23, it-24)
nsubj(knew-28, Willie-26)
advmod(knew-28, first-27)
root(ROOT-0, knew-28)
mark(cold-32, that-29)
nsubj(cold-32, they-30)
cop(cold-32, were-31)
ccomp(knew-28, cold-32)
det(warmth-36, the-34)
amod(warmth-36, sweet-35)
prep_by(cold-32, warmth-36)
det(hands-40, the-38)
nn(hands-40, kind-39)
prep_of(warmth-36, hands-40)
nsubj(chafed-42, hands-40)
rcmod(hands-40, chafed-42)
dobj(chafed-42, them-43)
nsubj(thought-48, he-45)
aux(thought-48, had-46)
neg(thought-48, not-47)
parataxis(knew-28, thought-48)
prep_of(thought-48, it-50)
advmod(thought-48, before-51)

(ROOT
  (S
    (S
      (VP
        (VP (VBG Climbing)
          (PP (IN amongst)
            (NP
              (NP (DT the) (NNS ruins))
              (PP (IN of)
                (NP (DT the) (NNP Priory))))))
        (, ,)
        (CC or)
        (VP (VBG playing)
          (PP (IN with)
            (NP
              (NP
                (NP (NNP Farmer) (NNP Thomson) (POS 's))
                (NNS boys)
                (CC and)
                (NNS girls))
              (PP (IN about)
                (NP
                  (NP (DT the) (NNS ricks))
                  (PP (IN in)
                    (NP (PRP$ his) (NN yard)))))))
          (, ,)
          (PP (IN in)
            (NP
              (NP (DT the)
                (ADJP (JJ thin) (JJ clear))
                (NN saffron) (NN twilight))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD came)
                    (ADVP (RB so) (RB early))
                    (PP (IN after)
                      (NP (NN noon)))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (PRN (, ,)
                          (PP (TO to)
                            (NP (DT some) (NNS people)))
                          (, ,))
                        (S
                          (NP (DT every) (NN breath))
                          (VP (VBD seemed)
                            (NP
                              (NP (JJ full))
                              (PP (IN of)
                                (NP (NNS needle-points))))))
                        (, ,) (IN so)
                        (S
                          (NP (JJ sharp))
                          (VP (VBD was)
                            (NP (DT the) (NN cold))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD was)
        (ADJP (RB as) (JJ comfortable)
          (CC and)
          (JJ happy)
          (SBAR (RB as) (IN if)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN been)
                  (NP
                    (NP (DT a) (NN creature))
                    (PP (IN of)
                      (NP (DT the) (NN winter) (RB only))))))))))
      (, ,)
      (CC and)
      (VP (VBD found)
        (NP (PRP himself))
        (ADVP
          (ADVP (RB quite) (IN at) (NN home))
          (PP (IN in)
            (NP (PRP it))))))
    (. .)))

vmod(comfortable-60, Climbing-1)
det(ruins-4, the-3)
prep_amongst(Climbing-1, ruins-4)
det(Priory-7, the-6)
prep_of(ruins-4, Priory-7)
conj_or(Climbing-1, playing-10)
vmod(comfortable-60, playing-10)
nn(Thomson-13, Farmer-12)
poss(boys-15, Thomson-13)
prep_with(playing-10, boys-15)
prep_with(playing-10, girls-17)
conj_and(boys-15, girls-17)
det(ricks-20, the-19)
prep_about(boys-15, ricks-20)
poss(yard-23, his-22)
prep_in(ricks-20, yard-23)
det(twilight-30, the-26)
amod(clear-28, thin-27)
amod(twilight-30, clear-28)
nn(twilight-30, saffron-29)
prep_in(playing-10, twilight-30)
nsubj(came-32, twilight-30)
nsubj(seemed-46, twilight-30)
rcmod(twilight-30, came-32)
advmod(early-34, so-33)
advmod(came-32, early-34)
prep_after(came-32, noon-36)
advmod(seemed-46, when-38)
dep(seemed-46, to-40)
det(people-42, some-41)
pobj(to-40, people-42)
det(breath-45, every-44)
nsubj(seemed-46, breath-45)
advcl(came-32, seemed-46)
xcomp(seemed-46, full-47)
prep_of(full-47, needle-points-49)
dep(seemed-46, so-51)
nsubj(cold-55, sharp-52)
cop(cold-55, was-53)
det(cold-55, the-54)
parataxis(seemed-46, cold-55)
nsubj(comfortable-60, he-57)
nsubj(happy-62, he-57)
nsubj(found-76, he-57)
cop(comfortable-60, was-58)
advmod(comfortable-60, as-59)
root(ROOT-0, comfortable-60)
conj_and(comfortable-60, happy-62)
advmod(creature-69, as-63)
mark(creature-69, if-64)
nsubj(creature-69, he-65)
aux(creature-69, had-66)
cop(creature-69, been-67)
det(creature-69, a-68)
ccomp(comfortable-60, creature-69)
det(winter-72, the-71)
prep_of(creature-69, winter-72)
advmod(winter-72, only-73)
conj_and(comfortable-60, found-76)
dobj(found-76, himself-77)
advmod(at-79, quite-78)
advmod(found-76, at-79)
dep(at-79, home-80)
prep_in(at-79, it-82)

(ROOT
  (S (IN For)
    (NP (EX there))
    (VP (VBD were)
      (NP
        (NP (NNS ruins))
        (, ,)
        (CC and)
        (NP
          (ADJP (RB pretty) (JJ large))
          (NNS ruins)))
      (ADVP
        (ADVP (RB too))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP they))
            (VP (VBD called)
              (NP (DT the) (NN Priory)))))))
    (. .)))

dep(were-3, For-1)
expl(were-3, there-2)
root(ROOT-0, were-3)
nsubj(were-3, ruins-4)
advmod(large-8, pretty-7)
amod(ruins-9, large-8)
nsubj(were-3, ruins-9)
conj_and(ruins-4, ruins-9)
advmod(were-3, too-10)
dobj(called-14, which-12)
nsubj(called-14, they-13)
advcl(too-10, called-14)
ccomp(too-10, called-14)
det(Priory-16, the-15)
dobj(called-14, Priory-16)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADVP
          (ADVP (RB not) (RB often))
          (SBAR (IN that)
            (S
              (NP (NNS monks))
              (VP (VBD chose)
                (NP (PDT such) (DT a) (JJ poor) (NN country))
                (S
                  (VP (TO to)
                    (VP (VB settle)
                      (PRT (RP in)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP suppose)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD had)
              (NP (PRP$ their) (NNS reasons)))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
dep(often-4, not-3)
advmod(was-2, often-4)
mark(chose-7, that-5)
nsubj(chose-7, monks-6)
advcl(often-4, chose-7)
ccomp(often-4, chose-7)
predet(country-11, such-8)
det(country-11, a-9)
amod(country-11, poor-10)
dobj(chose-7, country-11)
aux(settle-13, to-12)
vmod(chose-7, settle-13)
prt(settle-13, in-14)
nsubj(suppose-18, I-17)
conj_but(was-2, suppose-18)
nsubj(had-20, they-19)
ccomp(suppose-18, had-20)
poss(reasons-22, their-21)
dobj(had-20, reasons-22)

(ROOT
  (S (CC And)
    (S
      (NP (PRP I))
      (VP (MD dare)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBD were) (RB not)
                (ADJP (JJ monks)
                  (PP (IN at)
                    (NP (DT all))))))))))
    (, ,)
    (CC but)
    (S
      (VP (VBG begging)
        (NP
          (NP (NNS friars))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD founded)
                (NP (PRP it))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP they))
                    (VP (VBD wanted)
                      (S
                        (VP (TO to)
                          (VP (VB reprove)
                            (NP
                              (NP (DT the) (NN luxury)
                                (CC and)
                                (NN greed))
                              (PP (IN of)
                                (NP (DT the) (NNS monks))))))))))))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB perhaps))
      (PP (IN by)
        (NP (DT the) (NN time)))
      (NP (PRP they))
      (VP (VBD had)
        (VP (VBN grown)
          (NP (RB as) (JJ bad))
          (NP (PRP themselves)))))
    (, ,)
    (S
      (NP (DT the) (NN place))
      (VP (VBD was)
        (ADJP (RB nearly) (VBN finished))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD could) (RB not)
        (ADVP (RB well))
        (VP (VB move)
          (NP (PRP it)))))
    (. .)))

nsubj(say-4, I-2)
nsubj(begging-13, I-2)
aux(say-4, dare-3)
root(ROOT-0, say-4)
nsubj(monks-8, they-5)
cop(monks-8, were-6)
neg(monks-8, not-7)
ccomp(say-4, monks-8)
prep_at(monks-8, all-10)
conj_but(say-4, begging-13)
dobj(begging-13, friars-14)
nsubj(founded-17, friars-14)
rcmod(friars-14, founded-17)
dobj(founded-17, it-18)
advmod(wanted-21, when-19)
nsubj(wanted-21, they-20)
nsubj(reprove-23, they-20)
advcl(founded-17, wanted-21)
aux(reprove-23, to-22)
xcomp(wanted-21, reprove-23)
det(luxury-25, the-24)
dobj(reprove-23, luxury-25)
dobj(reprove-23, greed-27)
conj_and(luxury-25, greed-27)
det(monks-30, the-29)
prep_of(luxury-25, monks-30)
advmod(grown-39, perhaps-33)
det(time-36, the-35)
prep_by(grown-39, time-36)
nsubj(grown-39, they-37)
aux(grown-39, had-38)
conj_and(say-4, grown-39)
advmod(bad-41, as-40)
iobj(grown-39, bad-41)
dobj(grown-39, themselves-42)
det(place-45, the-44)
nsubjpass(finished-48, place-45)
auxpass(finished-48, was-46)
advmod(finished-48, nearly-47)
ccomp(say-4, finished-48)
nsubj(move-55, they-51)
aux(move-55, could-52)
neg(move-55, not-53)
advmod(move-55, well-54)
conj_and(say-4, move-55)
dobj(move-55, it-56)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD had) (, ,)
      (ADVP (RB however))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP
              (VP (VBN indicated))
              (, ,)
              (VP (VBN chosen)
                (NP
                  (NP (DT the) (CD one) (JJ pretty) (NN spot))
                  (, ,)
                  (SBAR
                    (WHPP (IN around)
                      (WHNP (WDT which)))
                    (S (, ,)
                      (PP (IN for)
                        (NP
                          (NP (DT a) (JJ short) (NN distance))
                          (PP (IN on)
                            (NP (DT every) (NN side)))))
                      (, ,)
                      (NP (DT the) (NN land))
                      (VP (VBD was)
                        (ADJP (RB tolerably) (JJ good)))))))
              (, ,)
              (CC and)
              (VP (VBD grew)
                (NP (JJ excellent) (NNS oats))
                (PP (IN if)
                  (NP (JJ poor) (NN wheat))))))))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (DT the) (NNS gardens))
          (VP (VBD were)
            (ADJP (JJ equal)
              (PP (TO to)
                (NP
                  (NP (NNS apples))
                  (CC and)
                  (NP (DT a) (JJ few) (NNS pears))))))))
      (, ,)
      (PP (IN besides)
        (NP
          (NP (NN abundance))
          (PP (IN of)
            (NP (NNS gooseberries) (, ,) (NNS currants) (, ,)
              (CC and)
              (NNS strawberries))))))
    (. .)))

nsubj(had-2, They-1)
root(ROOT-0, had-2)
advmod(had-2, however-4)
mark(indicated-9, as-6)
nsubj(indicated-9, I-7)
nsubj(chosen-11, I-7)
nsubj(grew-35, I-7)
aux(indicated-9, have-8)
advcl(had-2, indicated-9)
advcl(had-2, chosen-11)
conj_and(indicated-9, chosen-11)
det(spot-15, the-12)
num(spot-15, one-13)
amod(spot-15, pretty-14)
dobj(chosen-11, spot-15)
prep_around(good-32, spot-15)
det(distance-23, a-21)
amod(distance-23, short-22)
prep_for(good-32, distance-23)
det(side-26, every-25)
prep_on(distance-23, side-26)
det(land-29, the-28)
nsubj(good-32, land-29)
cop(good-32, was-30)
advmod(good-32, tolerably-31)
rcmod(spot-15, good-32)
advcl(had-2, grew-35)
conj_and(indicated-9, grew-35)
amod(oats-37, excellent-36)
dobj(grew-35, oats-37)
amod(wheat-40, poor-39)
prep_if(grew-35, wheat-40)
mark(equal-46, while-42)
det(gardens-44, the-43)
nsubj(equal-46, gardens-44)
cop(equal-46, were-45)
advcl(had-2, equal-46)
prep_to(equal-46, apples-48)
det(pears-52, a-50)
amod(pears-52, few-51)
prep_to(equal-46, pears-52)
conj_and(apples-48, pears-52)
prep_besides(had-2, abundance-55)
prep_of(abundance-55, gooseberries-57)
prep_of(abundance-55, currants-59)
conj_and(gooseberries-57, currants-59)
prep_of(abundance-55, strawberries-62)
conj_and(gooseberries-57, strawberries-62)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS ruins))
      (PP (IN of)
        (NP (DT the) (NNP Priory))))
    (VP (VBD lay)
      (PRT (RP behind))
      (NP
        (NP
          (NP (NNP Mr) (NNP Macmichael) (POS 's))
          (NN cottage))
        (PRN (: --)
          (UCP
            (ADVP (RB indeed))
            (, ,)
            (PP (IN in)
              (NP (DT the) (JJ very) (NN garden))))
          (: --))
        (PP (IN of)
          (SBAR
            (WHNP (WDT which))
            (S (, ,)
              (ADVP (IN along)
                (PP (IN with)
                  (NP (DT the) (NN house))))
              (, ,)
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN purchased)
                  (NP
                    (NP (DT the) (NN fen))
                    (PRN (: --)
                      (INTJ (DT that) (VBZ is))
                      (, ,)
                      (NP
                        (NP (DT the) (NN place))
                        (SBAR
                          (S
                            (VP (VBD was)
                              (NP (PRP$ his) (JJ own))
                              (, ,)
                              (SBAR
                                (ADVP (RB so) (RB long))
                                (IN as)
                                (S
                                  (NP (PRP he))
                                  (VP (VBD paid)
                                    (NP (DT a) (JJ small) (NN sum))
                                    (ADVP (: --)
                                      (ADVP (RB not)
                                        (NP
                                          (NP
                                            (QP (JJR more) (IN than) (CD fifteen))
                                            (NNS shillings))
                                          (NP (DT a) (NN year))))
                                      (, ,)
                                      (S
                                        (NP (PRP I))
                                        (VP (VBP think)))))))))))
                      (: --))
                    (PP (TO to)
                      (NP (PRP$ his) (JJ superior)))))))))))
    (. .)))

det(ruins-2, The-1)
nsubj(lay-6, ruins-2)
det(Priory-5, the-4)
prep_of(ruins-2, Priory-5)
root(ROOT-0, lay-6)
prt(lay-6, behind-7)
nn(Macmichael-9, Mr-8)
poss(cottage-11, Macmichael-9)
dobj(lay-6, cottage-11)
dep(cottage-11, indeed-13)
det(garden-18, the-16)
amod(garden-18, very-17)
prep_in(indeed-13, garden-18)
dobj(purchased-30, which-21)
det(house-26, the-25)
prep_along_with(purchased-30, house-26)
nsubj(purchased-30, he-28)
aux(purchased-30, had-29)
prepc_of(cottage-11, purchased-30)
det(fen-32, the-31)
dobj(purchased-30, fen-32)
discourse(place-38, that-34)
dep(that-34, is-35)
det(place-38, the-37)
dep(fen-32, place-38)
cop(own-41, was-39)
poss(own-41, his-40)
rcmod(place-38, own-41)
advmod(long-44, so-43)
advmod(paid-47, long-44)
mark(paid-47, as-45)
nsubj(paid-47, he-46)
advcl(own-41, paid-47)
det(sum-50, a-48)
amod(sum-50, small-49)
dobj(paid-47, sum-50)
advmod(paid-47, not-52)
mwe(than-54, more-53)
quantmod(fifteen-55, than-54)
num(shillings-56, fifteen-55)
dep(not-52, shillings-56)
det(year-58, a-57)
dep(shillings-56, year-58)
nsubj(think-61, I-60)
dep(not-52, think-61)
poss(superior-65, his-64)
prep_to(fen-32, superior-65)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB How) (RB long))
        (S
          (NP (PRP it))
          (VP (VBD was)
            (SBAR (IN since)
              (S
                (NP (DT the) (NNP Priory))
                (VP (VBD had)
                  (VP (VBN come)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN looked)
                            (PP (IN upon) (IN as)
                              (NP
                                (NP (DT the) (JJ mere) (NN encumbrance))
                                (PP (IN of)
                                  (NP (DT a) (NN cottage) (NN garden))))))))))))))))
      (, ,)
      (NP (NN nobody) (NNS thereabouts))
      (VP (VBD knew)))
    (: ;)
    (CC and)
    (S
      (SBAR (IN although)
        (S
          (PP (IN by)
            (NP (DT this) (NN time)))
          (NP (PRP I))
          (VP (VBP presume)
            (SBAR
              (S
                (NP (NNS archaeologists))
                (VP (VBP have)
                  (VP (VBN ferreted)
                    (PRT (RP out))
                    (NP (NN everything))
                    (S
                      (VP (VBG concerning)
                        (NP (PRP it)))))))))))
      (, ,)
      (NP
        (NP (NN nobody))
        (PP (IN except)
          (NP (PRP$ its) (NN owner))))
      (VP (VBD had)
        (ADVP (RB then))
        (VP (VBN taken)
          (NP (DT the) (NN trouble)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP (DT the) (JJS least) (NN inquiry))
                  (PP (IN into)
                    (NP (PRP$ its) (NN history))))))))))
    (. .)))

advmod(long-2, How-1)
advmod(was-4, long-2)
nsubj(was-4, it-3)
advcl(knew-25, was-4)
mark(come-9, since-5)
det(Priory-7, the-6)
nsubj(come-9, Priory-7)
nsubjpass(looked-12, Priory-7)
aux(come-9, had-8)
advcl(was-4, come-9)
aux(looked-12, to-10)
auxpass(looked-12, be-11)
xcomp(come-9, looked-12)
dep(looked-12, upon-13)
det(encumbrance-17, the-15)
amod(encumbrance-17, mere-16)
prep_as(looked-12, encumbrance-17)
det(garden-21, a-19)
nn(garden-21, cottage-20)
prep_of(encumbrance-17, garden-21)
nn(thereabouts-24, nobody-23)
nsubj(knew-25, thereabouts-24)
root(ROOT-0, knew-25)
mark(presume-33, although-28)
det(time-31, this-30)
prep_by(presume-33, time-31)
nsubj(presume-33, I-32)
advcl(taken-48, presume-33)
nsubj(ferreted-36, archaeologists-34)
aux(ferreted-36, have-35)
ccomp(presume-33, ferreted-36)
prt(ferreted-36, out-37)
dobj(ferreted-36, everything-38)
xcomp(ferreted-36, concerning-39)
dobj(concerning-39, it-40)
nsubj(taken-48, nobody-42)
poss(owner-45, its-44)
prep_except(nobody-42, owner-45)
aux(taken-48, had-46)
advmod(taken-48, then-47)
conj_and(knew-25, taken-48)
det(trouble-50, the-49)
dobj(taken-48, trouble-50)
aux(make-52, to-51)
vmod(trouble-50, make-52)
det(inquiry-55, the-53)
amod(inquiry-55, least-54)
dobj(make-52, inquiry-55)
poss(history-58, its-57)
prep_into(make-52, history-58)

(ROOT
  (S
    (PP (TO To)
      (NP (NNP Willie)))
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB just))
      (NP
        (NP (DT the) (NN Priory))
        (, ,)
        (ADJP (IN as) (RB naturally)
          (PP (IN in)
            (NP
              (NP (PRP$ his) (NN father) (POS 's))
              (NN garden)))))
      (SBAR (RB as) (IN if)
        (S
          (NP
            (NP (DT every) (NN garden))
            (VP (VBN had)
              (NP (JJ similar) (NNS ruins))
              (S
                (VP (TO to)
                  (VP (VB adorn)
                    (CC or)
                    (VB encumber)
                    (NP (PRP it)))))
              (, ,)
              (PP (VBG according)
                (PP (IN as)
                  (NP (DT the) (NN owner))))))
          (VP (MD might)
            (VP (VB choose)
              (S
                (VP (TO to)
                  (VP (VB regard)
                    (NP (PRP$ its) (NN presence))))))))))
    (. .)))

prep_to(Priory-7, Willie-2)
nsubj(Priory-7, it-3)
cop(Priory-7, was-4)
advmod(Priory-7, just-5)
det(Priory-7, the-6)
root(ROOT-0, Priory-7)
dep(naturally-10, as-9)
amod(Priory-7, naturally-10)
poss(father-13, his-12)
poss(garden-15, father-13)
prep_in(naturally-10, garden-15)
advmod(choose-34, as-16)
mark(choose-34, if-17)
det(garden-19, every-18)
nsubj(choose-34, garden-19)
nsubj(regard-36, garden-19)
vmod(garden-19, had-20)
amod(ruins-22, similar-21)
dobj(had-20, ruins-22)
aux(adorn-24, to-23)
vmod(had-20, adorn-24)
vmod(had-20, encumber-26)
conj_or(adorn-24, encumber-26)
dobj(adorn-24, it-27)
prep(had-20, according-29)
pcomp(according-29, as-30)
det(owner-32, the-31)
pobj(as-30, owner-32)
aux(choose-34, might-33)
advcl(Priory-7, choose-34)
aux(regard-36, to-35)
xcomp(choose-34, regard-36)
poss(presence-38, its-37)
dobj(regard-36, presence-38)

(ROOT
  (S
    (NP (DT The) (NNS ruins))
    (VP (VBD were)
      (PP (IN of)
        (NP (JJ considerable) (NN extent)))
      (, ,)
      (PP (IN with)
        (NP
          (NP
            (NP
              (NP (NNS remains))
              (PP (IN of)
                (NP (JJ Gothic) (NNS arches))))
            (, ,)
            (CC and)
            (NP
              (NP (NNS carvings))
              (PP (IN about)
                (NP (DT the) (NNS doors)))))
          (: --)
          (ADJP (RB all) (JJ open)
            (PP (TO to)
              (NP
                (NP (DT the) (NN sky))
                (PP (IN except)
                  (NP
                    (NP (DT a) (JJ few) (NNS places))
                    (PP (IN on)
                      (NP
                        (NP (DT the) (NN ground-level))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBD were)
                              (VP (VBN vaulted)))))))))))))))
    (. .)))

det(ruins-2, The-1)
nsubj(were-3, ruins-2)
root(ROOT-0, were-3)
amod(extent-6, considerable-5)
prep_of(were-3, extent-6)
prep_with(were-3, remains-9)
amod(arches-12, Gothic-11)
prep_of(remains-9, arches-12)
prep_with(were-3, carvings-15)
conj_and(remains-9, carvings-15)
det(doors-18, the-17)
prep_about(carvings-15, doors-18)
advmod(open-21, all-20)
amod(remains-9, open-21)
det(sky-24, the-23)
prep_to(open-21, sky-24)
det(places-28, a-26)
amod(places-28, few-27)
prep_except(sky-24, places-28)
det(ground-level-31, the-30)
prep_on(places-28, ground-level-31)
nsubjpass(vaulted-34, ground-level-31)
auxpass(vaulted-34, were-33)
rcmod(ground-level-31, vaulted-34)

(ROOT
  (S
    (NP
      (NP (DT These))
      (VP (VBG being)
        (ADJP (RB still) (RB perfectly) (JJ solid))))
    (, ,)
    (VP (VBD were)
      (VP (VBN used)
        (PP (IN by)
          (NP
            (NP (DT the) (NN family))
            (PP (IN as)
              (NP (NNS outhouses)))))
        (PP (TO to)
          (NP (NN store) (NN wood)
            (CC and)
            (NNS peats)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB keep)
              (NP (DT the) (NN garden) (NNS tools))
              (PP
                (PP (IN in))
                (, ,)
                (CC and)
                (PP (IN for)
                  (NP (JJ such) (JJ like) (NNS purposes)))))))))
    (. .)))

nsubjpass(used-8, These-1)
nsubj(keep-21, These-1)
cop(solid-5, being-2)
advmod(solid-5, still-3)
advmod(solid-5, perfectly-4)
vmod(These-1, solid-5)
auxpass(used-8, were-7)
root(ROOT-0, used-8)
det(family-11, the-10)
agent(used-8, family-11)
prep_as(family-11, outhouses-13)
nn(wood-16, store-15)
prep_to(used-8, wood-16)
prep_to(used-8, peats-18)
conj_and(wood-16, peats-18)
aux(keep-21, to-20)
xcomp(used-8, keep-21)
det(tools-24, the-22)
nn(tools-24, garden-23)
dobj(keep-21, tools-24)
prep(keep-21, in-25)
prep(keep-21, for-28)
conj_and(in-25, for-28)
amod(purposes-31, such-29)
amod(purposes-31, like-30)
pobj(for-28, purposes-31)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (NN summer)))
      (, ,)
      (NP (JJ golden) (NNS flowers))
      (VP (VBD grew)
        (PP (IN on)
          (NP (DT the) (VBN broken) (NNS walls)))))
    (: ;)
    (S
      (PP (IN in)
        (NP (NN winter)))
      (, ,)
      (NP (JJ grey) (NNS frosts))
      (VP (VBD edged)
        (NP (PRP them))
        (PP (IN against)
          (NP (DT the) (NN sky)))))
    (. .)))

prep_in(grew-6, summer-2)
amod(flowers-5, golden-4)
nsubj(grew-6, flowers-5)
root(ROOT-0, grew-6)
det(walls-10, the-8)
amod(walls-10, broken-9)
prep_on(grew-6, walls-10)
prep_in(edged-17, winter-13)
amod(frosts-16, grey-15)
nsubj(edged-17, frosts-16)
parataxis(grew-6, edged-17)
dobj(edged-17, them-18)
det(sky-21, the-20)
prep_against(edged-17, sky-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD fancy)
      (SBAR
        (S
          (NP (DT the) (JJ whole) (NN garden))
          (VP
            (VP (VBD was))
            (CC but)
            (VP
              (ADVP
                (NP (DT the) (NN space))
                (RB once))
              (VBD occupied)
              (PP (IN by)
                (NP (DT the) (JJ huge) (NN building)))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP$ its) (NN surface))
                  (VP (VBD was)
                    (NP
                      (NP (DT the) (JJS most) (NN irregular))
                      (SBAR
                        (S
                          (NP (PRP I))
                          (ADVP (RB ever))
                          (VP (VBD saw)
                            (PP (IN in)
                              (NP (DT a) (NN garden)))))))))))))))
    (. .)))

nsubj(fancy-2, I-1)
root(ROOT-0, fancy-2)
det(garden-5, the-3)
amod(garden-5, whole-4)
nsubj(was-6, garden-5)
nsubj(occupied-11, garden-5)
ccomp(fancy-2, was-6)
det(space-9, the-8)
npadvmod(once-10, space-9)
advmod(occupied-11, once-10)
ccomp(fancy-2, occupied-11)
conj_but(was-6, occupied-11)
det(building-15, the-13)
amod(building-15, huge-14)
prep_by(occupied-11, building-15)
mark(irregular-23, for-17)
poss(surface-19, its-18)
nsubj(irregular-23, surface-19)
cop(irregular-23, was-20)
det(irregular-23, the-21)
amod(irregular-23, most-22)
advcl(occupied-11, irregular-23)
nsubj(saw-26, I-24)
advmod(saw-26, ever-25)
rcmod(irregular-23, saw-26)
det(garden-29, a-28)
prep_in(saw-26, garden-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB up)
        (CC and)
        (RB down))
      (VP (, ,)
        (ADVP (RB up)
          (CC and)
          (RB down))
        (, ,)
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT whatever) (NN direction)))
          (S
            (NP (PRP you))
            (VP
              (VP (VBD went))
              (, ,)
              (VP (VBD mounded)
                (PP (IN with)
                  (NP
                    (NP (NNS heaps))
                    (PP (IN of)
                      (NP (NNS ruins))))))
              (, ,)
              (PP (IN over)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (DT the) (NN mould))
                    (VP (VBD had)
                      (VP (VBN gathered)))))))))))
    (. .)))

nsubj(up-7, It-1)
aux(up-7, was-2)
advmod(up-7, up-3)
conj_and(up-3, down-5)
advmod(up-7, down-5)
root(ROOT-0, up-7)
conj_and(up-7, down-9)
det(direction-13, whatever-12)
prep_in(went-15, direction-13)
nsubj(went-15, you-14)
ccomp(up-7, went-15)
dep(went-15, mounded-17)
prep_with(mounded-17, heaps-19)
prep_of(heaps-19, ruins-21)
dobj(gathered-28, which-24)
det(mould-26, the-25)
nsubj(gathered-28, mould-26)
aux(gathered-28, had-27)
prepc_over(went-15, gathered-28)

(ROOT
  (S
    (S
      (S
        (PP (IN For)
          (NP (JJ many) (NNS years)))
        (NP (NNS bushes)
          (CC and)
          (NNS flowers))
        (VP (VBD had)
          (VP (VBN grown)
            (PP (IN upon)
              (NP (PRP them))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP you))
        (VP (MD might)
          (VP (VB dig)
            (NP (DT a) (JJ good) (NN way))
            (PP (IN without)
              (S
                (VP (VBG coming)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NNS stones))
                      (, ,)
                      (VP
                        (ADVP (RB though))
                        (VBN come)
                        (PP (TO to)
                          (NP (PRP them)))))))))))))
    (NP (PRP you))
    (VP (MD must)
      (ADVP (IN at))
      (VP (VB last)))
    (. .)))

amod(years-3, many-2)
prep_for(grown-8, years-3)
nsubj(grown-8, bushes-4)
conj_and(bushes-4, flowers-6)
nsubj(grown-8, flowers-6)
aux(grown-8, had-7)
dep(last-32, grown-8)
prep_upon(grown-8, them-10)
nsubj(dig-15, you-13)
aux(dig-15, might-14)
conj_and(grown-8, dig-15)
dep(last-32, dig-15)
det(way-18, a-16)
amod(way-18, good-17)
dobj(dig-15, way-18)
prepc_without(dig-15, coming-20)
det(stones-23, the-22)
prep_to(coming-20, stones-23)
advmod(come-26, though-25)
vmod(stones-23, come-26)
prep_to(come-26, them-28)
nsubj(last-32, you-29)
aux(last-32, must-30)
advmod(last-32, at-31)
root(ROOT-0, last-32)

(ROOT
  (S
    (S
      (NP (DT The) (NN walks))
      (VP (VBD wound)
        (PP
          (PP (IN about)
            (PP (IN between)
              (NP (DT the) (NNS heaps))))
          (, ,)
          (CC and)
          (PP (IN through)
            (NP
              (NP (DT the) (JJ thick) (NNS walls))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN ruin))
                  (, ,)
                  (NP
                    (NP (NN overgrown))
                    (PP (IN with)
                      (NP (NNS lichens)
                        (CC and)
                        (NNS mosses)))))))))
        (, ,)
        (ADVP (RB now))))
    (CC and)
    (RB then)
    (S
      (VP (VBG passing)
        (PP (IN through)
          (NP
            (NP (DT an) (JJ arched) (NN door)
              (CC or)
              (NN window))
            (PP (IN of)
              (NP (DT the) (JJ ancient) (NN building)))))))
    (. .)))

det(walks-2, The-1)
nsubj(wound-3, walks-2)
nsubj(passing-27, walks-2)
root(ROOT-0, wound-3)
prep(wound-3, about-4)
pcomp(about-4, between-5)
det(heaps-7, the-6)
pobj(between-5, heaps-7)
prep(wound-3, through-10)
conj_and(about-4, through-10)
det(walls-13, the-11)
amod(walls-13, thick-12)
pobj(through-10, walls-13)
det(ruin-16, the-15)
prep_of(walls-13, ruin-16)
appos(ruin-16, overgrown-18)
prep_with(overgrown-18, lichens-20)
prep_with(overgrown-18, mosses-22)
conj_and(lichens-20, mosses-22)
advmod(wound-3, now-24)
advmod(passing-27, then-26)
conj_and(wound-3, passing-27)
det(door-31, an-29)
amod(door-31, arched-30)
prep_through(passing-27, door-31)
prep_through(passing-27, window-33)
conj_or(door-31, window-33)
det(building-37, the-35)
amod(building-37, ancient-36)
prep_of(door-31, building-37)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ generous) (NN garden))
        (PP (IN in)
          (NP (JJ old-fashioned) (NNS flowers)
            (CC and)
            (NNS vegetables)))))
    (. .)))

nsubj(garden-5, It-1)
cop(garden-5, was-2)
det(garden-5, a-3)
amod(garden-5, generous-4)
root(ROOT-0, garden-5)
amod(flowers-8, old-fashioned-7)
prep_in(garden-5, flowers-8)
prep_in(garden-5, vegetables-10)
conj_and(flowers-8, vegetables-10)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP (DT a) (JJ few) (NN apple)
        (CC and)
        (NN pear) (NNS trees))
      (PP
        (ADVP (RB also))
        (IN on)
        (NP
          (NP (DT a) (NN wall))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD faced)
                (NP
                  (NP (DT the) (NN south))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD were)
                        (VP (VBN regarded)
                          (PP (IN by)
                            (NP (NNP Willie)))
                          (PP (IN with)
                            (NP (JJ mingled) (NN respect)
                              (CC and)
                              (NN desire)))))))))))))
      (, ,)
      (SBAR
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD was) (RB not)
              (VP (VBN allowed)
                (S
                  (VP (TO to)
                    (VP (VB touch)
                      (NP (PRP them)))))))))
        (, ,)
        (SBAR (IN while)
          (S
            (PP (IN of)
              (NP (DT the) (NNS gooseberries)))
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBN allowed)
                (S
                  (VP (TO to)
                    (VP (VB eat)
                      (ADJP (RB as) (JJ many))
                      (SBAR (IN as)
                        (S
                          (NP (PRP he))
                          (VP (VBD pleased)
                            (SBAR
                              (WHADVP (WRB when))
                              (S
                                (NP (PRP they))
                                (VP (VBD were)
                                  (ADJP (JJ ripe)))))))))))))))
        (, ,)
        (CC and)
        (SBAR
          (PP (IN of)
            (NP (DT the) (NNS currants) (RB too)))
          (, ,) (IN after)
          (S
            (NP (PRP$ his) (NN mother))
            (VP (VBD had)
              (VP (VBN had)
                (PP (IN as)
                  (NP
                    (NP (JJ many))
                    (SBAR (IN as)
                      (S
                        (NP (PRP she))
                        (VP (VBD wanted)
                          (PP (IN for)
                            (NP (NNP preserves))))))))))))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
det(apple-5, a-3)
amod(apple-5, few-4)
nsubj(were-2, apple-5)
nn(trees-8, pear-7)
nsubj(were-2, trees-8)
conj_and(apple-5, trees-8)
advmod(were-2, also-9)
det(wall-12, a-11)
prep_on(were-2, wall-12)
nsubj(faced-14, wall-12)
rcmod(wall-12, faced-14)
det(south-16, the-15)
dobj(faced-14, south-16)
nsubjpass(regarded-20, south-16)
auxpass(regarded-20, were-19)
rcmod(south-16, regarded-20)
agent(regarded-20, Willie-22)
amod(respect-25, mingled-24)
prep_with(regarded-20, respect-25)
prep_with(regarded-20, desire-27)
conj_and(respect-25, desire-27)
mark(allowed-33, for-29)
nsubjpass(allowed-33, he-30)
nsubj(touch-35, he-30)
auxpass(allowed-33, was-31)
neg(allowed-33, not-32)
advcl(were-2, allowed-33)
aux(touch-35, to-34)
xcomp(allowed-33, touch-35)
dobj(touch-35, them-36)
mark(allowed-44, while-38)
det(gooseberries-41, the-40)
prep_of(allowed-44, gooseberries-41)
nsubjpass(allowed-44, he-42)
nsubj(eat-46, he-42)
auxpass(allowed-44, was-43)
advcl(were-2, allowed-44)
conj_and(allowed-33, allowed-44)
aux(eat-46, to-45)
xcomp(allowed-44, eat-46)
advmod(many-48, as-47)
acomp(eat-46, many-48)
mark(pleased-51, as-49)
nsubj(pleased-51, he-50)
advcl(eat-46, pleased-51)
advmod(ripe-55, when-52)
nsubj(ripe-55, they-53)
cop(ripe-55, were-54)
advcl(pleased-51, ripe-55)
det(currants-60, the-59)
prep_of(had-67, currants-60)
advmod(currants-60, too-61)
mark(had-67, after-63)
poss(mother-65, his-64)
nsubj(had-67, mother-65)
aux(had-67, had-66)
advcl(were-2, had-67)
conj_and(allowed-33, had-67)
prep_as(had-67, many-69)
mark(wanted-72, as-70)
nsubj(wanted-72, she-71)
rcmod(many-69, wanted-72)
prep_for(wanted-72, preserves-74)

(ROOT
  (S
    (NP (DT Some) (NNS spots))
    (VP (VBD were)
      (ADJP (RB much) (RB too) (JJ shady)
        (S
          (VP (TO to)
            (VP (VB allow)
              (S
                (NP
                  (NP (DT either) (NN fruit))
                  (CC or)
                  (NP (NNS flowers)))
                (VP (TO to)
                  (VP (VB grow)
                    (PRT (RP in))
                    (NP (PRP them))
                    (, ,)
                    (ADJP (RB so) (JJ high)
                      (CC and)
                      (JJ close))))))))
        (SBAR
          (S
            (VP (VBD were)
              (NP (DT the) (NNS walls)))))))
    (. .)))

det(spots-2, Some-1)
nsubj(shady-6, spots-2)
nsubj(allow-8, spots-2)
cop(shady-6, were-3)
advmod(shady-6, much-4)
advmod(shady-6, too-5)
root(ROOT-0, shady-6)
aux(allow-8, to-7)
xcomp(shady-6, allow-8)
det(fruit-10, either-9)
dobj(allow-8, fruit-10)
nsubj(grow-14, fruit-10)
dobj(allow-8, flowers-12)
conj_or(fruit-10, flowers-12)
nsubj(grow-14, flowers-12)
aux(grow-14, to-13)
xcomp(allow-8, grow-14)
prt(grow-14, in-15)
dobj(grow-14, them-16)
advmod(high-19, so-18)
acomp(grow-14, high-19)
acomp(grow-14, close-21)
conj_and(high-19, close-21)
cop(walls-24, were-22)
det(walls-24, the-23)
ccomp(shady-6, walls-24)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP need) (RB not)
      (VP (VB say)
        (ADVP (RBR more)
          (PP (IN about)
            (NP (DT the) (NN garden))))
        (ADVP (RB now))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP I))
            (VP (MD shall)
              (VP (VB have)
                (S
                  (S
                    (VP (VB occasion)
                      (SBAR
                        (SBAR
                          (S
                            (VP (TO to)
                              (VP (VB refer)
                                (PP (TO to)
                                  (NP (PRP it)))
                                (ADVP (RB again)
                                  (CC and)
                                  (RB again))))))
                        (, ,)
                        (CC and)
                        (SBAR
                          (S
                            (NP (PRP I))
                            (VP (MD must) (RB not)
                              (VP (VB tell)
                                (NP
                                  (NP (DT all))
                                  (SBAR
                                    (S
                                      (NP (PRP I))
                                      (VP (VBP know)
                                        (ADVP (IN at) (RB once))
                                        (, ,)
                                        (S
                                          (ADJP (RB else))))))))))))))
                  (SBARQ
                    (WHADVP (WRB how))
                    (SQ (MD should)
                      (NP (PRP I))
                      (VP (VB make)
                        (NP
                          (NP (DT a) (NN story))
                          (PP (IN of)
                            (NP (PRP it))))))
                    (. ?)))))))))))

cc(need-3, But-1)
nsubj(need-3, I-2)
root(ROOT-0, need-3)
neg(need-3, not-4)
dep(need-3, say-5)
advmod(say-5, more-6)
det(garden-9, the-8)
prep_about(more-6, garden-9)
advmod(say-5, now-10)
mark(have-15, for-12)
nsubj(have-15, I-13)
aux(have-15, shall-14)
advcl(say-5, have-15)
dep(have-15, occasion-16)
aux(refer-18, to-17)
dep(occasion-16, refer-18)
prep_to(refer-18, it-20)
advmod(refer-18, again-21)
advmod(refer-18, again-23)
conj_and(again-21, again-23)
nsubj(tell-29, I-26)
aux(tell-29, must-27)
neg(tell-29, not-28)
dep(occasion-16, tell-29)
conj_and(refer-18, tell-29)
dobj(tell-29, all-30)
nsubj(know-32, I-31)
rcmod(all-30, know-32)
advmod(know-32, at-33)
advmod(at-33, once-34)
dep(know-32, else-36)
advmod(make-40, how-37)
aux(make-40, should-38)
nsubj(make-40, I-39)
parataxis(occasion-16, make-40)
det(story-42, a-41)
dobj(make-40, story-42)
prep_of(story-42, it-44)

(ROOT
  (NP (NNP CHAPTER) (NNP II) (. .)))

nn(II-2, CHAPTER-1)
root(ROOT-0, II-2)

(ROOT
  (S
    (NP (NNP WILLIE))
    (VP (VBZ 'S)
      (NP (NNP EDUCATION)))
    (. .)))

nsubj(EDUCATION-3, WILLIE-1)
cop(EDUCATION-3, 'S-2)
root(ROOT-0, EDUCATION-3)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ good) (NN deal))
        (PP
          (NP
            (QP (JJR more) (IN than) (CD nine))
            (NNS years))
          (IN of)
          (NP (NN age))))
      (SBAR (IN before)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB read)
              (NP (DT a) (JJ single) (NN word)))))))
    (. .)))

nsubj(deal-5, Willie-1)
cop(deal-5, was-2)
det(deal-5, a-3)
amod(deal-5, good-4)
root(ROOT-0, deal-5)
mwe(than-7, more-6)
quantmod(nine-8, than-7)
num(years-9, nine-8)
npadvmod(deal-5, years-9)
prep_of(deal-5, age-11)
mark(read-15, before-12)
nsubj(read-15, he-13)
aux(read-15, could-14)
advcl(deal-5, read-15)
det(word-18, a-16)
amod(word-18, single-17)
dobj(read-15, word-18)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (SBAR (RB not) (IN that)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADJP (JJ stupid))
              (, ,)
              (SBAR
                (SBAR (IN as)
                  (S
                    (NP (PRP we))
                    (VP (MD shall)
                      (ADVP (RB soon))
                      (VP (VB see)))))
                (, ,)
                (CC but)
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP
                      (VP (VBD had) (RB not)
                        (VP (VBN learned)
                          (NP
                            (NP (DT the) (NN good))
                            (PP (IN of)
                              (NP (NN reading))))))
                      (, ,)
                      (CC and)
                      (ADVP (RB therefore))
                      (VP (VBD had) (RB not)
                        (VP (VBN begun)
                          (S
                            (VP (TO to)
                              (VP (VB wish)
                                (S
                                  (VP (TO to)
                                    (VP (VB read))))))))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP$ his) (NN father))
      (VP (VBD had)
        (NP
          (NP (JJ unusual) (NNS ideas))
          (PP (IN about)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP he))
                (VP (MD ought)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (VBN educated))))))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
dep(stupid-7, not-3)
mark(stupid-7, that-4)
nsubj(stupid-7, he-5)
cop(stupid-7, was-6)
dep(was-2, stupid-7)
mark(see-13, as-9)
nsubj(see-13, we-10)
aux(see-13, shall-11)
advmod(see-13, soon-12)
advcl(stupid-7, see-13)
ccomp(stupid-7, see-13)
mark(learned-20, that-16)
nsubj(learned-20, he-17)
nsubj(begun-30, he-17)
nsubj(wish-32, he-17)
aux(learned-20, had-18)
neg(learned-20, not-19)
advcl(stupid-7, learned-20)
ccomp(stupid-7, learned-20)
conj_but(see-13, learned-20)
det(good-22, the-21)
dobj(learned-20, good-22)
prep_of(good-22, reading-24)
advmod(begun-30, therefore-27)
aux(begun-30, had-28)
neg(begun-30, not-29)
conj_but(see-13, begun-30)
conj_and(learned-20, begun-30)
aux(wish-32, to-31)
xcomp(begun-30, wish-32)
aux(read-34, to-33)
xcomp(wish-32, read-34)
poss(father-38, his-37)
nsubj(had-39, father-38)
conj_and(was-2, had-39)
amod(ideas-41, unusual-40)
dobj(had-39, ideas-41)
advmod(ought-45, how-43)
nsubj(ought-45, he-44)
nsubjpass(educated-48, he-44)
prepc_about(ideas-41, ought-45)
aux(educated-48, to-46)
auxpass(educated-48, be-47)
xcomp(ought-45, educated-48)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD would)
            (ADVP (DT no) (RBR more))
            (VP (VB think)
              (PP (IN of)
                (S
                  (VP (VBG making)
                    (SBAR
                      (S
                        (NP (NNP Willie))
                        (VP (VBP learn)
                          (S
                            (VP (TO to)
                              (VP (VB read)
                                (SBAR (IN before)
                                  (S
                                    (NP (PRP he))
                                    (VP (VBD wished)
                                      (S
                                        (VP (TO to)
                                          (VP (VB be)
                                            (VP (VBN taught)
                                              (SBAR (IN than)
                                                (S
                                                  (NP (PRP he))
                                                  (VP (MD would)
                                                    (VP (VB make)
                                                      (S
                                                        (NP (PRP him))
                                                        (VP (VB eat)
                                                          (SBAR (IN if)
                                                            (S
                                                              (NP (PRP he))
                                                              (VP (VBD was) (RB n't)
                                                                (ADJP (JJ hungry))))))))))))))))))))))))))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
nsubj(think-7, he-3)
aux(think-7, would-4)
neg(more-6, no-5)
advmod(think-7, more-6)
ccomp(said-2, think-7)
prepc_of(think-7, making-9)
nsubj(learn-11, Willie-10)
nsubj(read-13, Willie-10)
ccomp(making-9, learn-11)
aux(read-13, to-12)
xcomp(learn-11, read-13)
mark(wished-16, before-14)
nsubj(wished-16, he-15)
nsubjpass(taught-19, he-15)
advcl(read-13, wished-16)
aux(taught-19, to-17)
auxpass(taught-19, be-18)
xcomp(wished-16, taught-19)
mark(make-23, than-20)
nsubj(make-23, he-21)
aux(make-23, would-22)
advcl(taught-19, make-23)
nsubj(eat-25, him-24)
ccomp(make-23, eat-25)
mark(hungry-30, if-26)
nsubj(hungry-30, he-27)
cop(hungry-30, was-28)
neg(hungry-30, n't-29)
advcl(eat-25, hungry-30)

(ROOT
  (S
    (NP
      (NP (DT The) (NN gift))
      (PP (IN of)
        (NP (NN reading))))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (VBD said)))
      (, ,))
    (VP (VBD was)
      (ADJP (RB too) (JJ good)
        (SBAR
          (S
            (NP (DT a) (NN thing))
            (VP (TO to)
              (VP (VB give)
                (NP (PRP him))
                (SBAR (IN before)
                  (S
                    (NP (PRP he))
                    (VP
                      (VP (VBD wished)
                        (S
                          (VP (TO to)
                            (VP (VB have)
                              (NP (PRP it))))))
                      (, ,)
                      (CC or)
                      (VP (VBD knew)
                        (NP
                          (NP (DT the) (NN value))
                          (PP (IN of)
                            (NP (PRP it))))))))))))))
    (. .)))

det(gift-2, The-1)
nsubj(good-11, gift-2)
prep_of(gift-2, reading-4)
nsubj(said-7, he-6)
parataxis(good-11, said-7)
cop(good-11, was-9)
advmod(good-11, too-10)
root(ROOT-0, good-11)
det(thing-13, a-12)
nsubj(give-15, thing-13)
aux(give-15, to-14)
ccomp(good-11, give-15)
dobj(give-15, him-16)
mark(wished-19, before-17)
nsubj(wished-19, he-18)
nsubj(have-21, he-18)
nsubj(knew-25, he-18)
advcl(give-15, wished-19)
aux(have-21, to-20)
xcomp(wished-19, have-21)
dobj(have-21, it-22)
advcl(give-15, knew-25)
conj_or(wished-19, knew-25)
det(value-27, the-26)
dobj(knew-25, value-27)
prep_of(value-27, it-29)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Would))
      (NP (PRP you))
      (VP (VBP give)
        (NP (PRP him))
        (NP (DT a) (NN watch))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (MD would)
          (VP (VB say)))))
    (, ,) (`` ``)
    (ADVP (RB before))
    (NP (PRP he))
    (VP (VBZ cares)
      (S
        (VP (TO to)
          (VP (VB know)
            (SBAR
              (SBAR (IN whether)
                (S
                  (NP (DT the) (NN sun))
                  (VP (VBZ rises)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (JJ east))
                        (CC or)
                        (NP (DT the) (NN west)))))))
              (, ,)
              (CC or)
              (SBAR
                (WHPP (IN at)
                  (WHNP (WP what)))
                (S
                  (NP (NN hour) (NN dinner))
                  (VP (MD will)
                    (VP (VB be)
                      (ADJP (JJ ready)))))))))))
    (. ?) ('' '')))

advmod(give-4, Would-2)
nsubj(give-4, you-3)
ccomp(cares-17, give-4)
iobj(give-4, him-5)
det(watch-7, a-6)
dobj(give-4, watch-7)
nsubj(say-12, he-10)
aux(say-12, would-11)
parataxis(cares-17, say-12)
advmod(cares-17, before-15)
nsubj(cares-17, he-16)
nsubj(know-19, he-16)
root(ROOT-0, cares-17)
aux(know-19, to-18)
xcomp(cares-17, know-19)
mark(rises-23, whether-20)
det(sun-22, the-21)
nsubj(rises-23, sun-22)
ccomp(know-19, rises-23)
det(east-26, the-25)
prep_in(rises-23, east-26)
det(west-29, the-28)
prep_in(rises-23, west-29)
conj_or(east-26, west-29)
prep_at(ready-38, what-33)
nn(dinner-35, hour-34)
nsubj(ready-38, dinner-35)
aux(ready-38, will-36)
cop(ready-38, be-37)
ccomp(know-19, ready-38)
conj_or(rises-23, ready-38)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (ADJP (RB very) (JJ sure))
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (DT this))
          (VP (MD would)
            (VP (VB work)
              (PP (IN with)
                (NP (DT some) (NNS boys)
                  (CC and)
                  (NNS girls))))))))
    (. .)))

advmod(sure-6, Now-1)
nsubj(sure-6, I-2)
cop(sure-6, am-3)
neg(sure-6, not-4)
advmod(sure-6, very-5)
root(ROOT-0, sure-6)
advmod(work-10, how-7)
nsubj(work-10, this-8)
aux(work-10, would-9)
ccomp(sure-6, work-10)
det(boys-13, some-12)
prep_with(work-10, boys-13)
prep_with(work-10, girls-15)
conj_and(boys-13, girls-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ afraid)
        (SBAR
          (S
            (NP (PRP they))
            (VP (MD might)
              (ADVP (RB never))
              (VP (VB learn)
                (S
                  (VP (TO to)
                    (VP (VB read)
                      (SBAR (IN until)
                        (S
                          (NP (PRP they))
                          (VP (VBD had)
                            (NP
                              (NP (NNS boys)
                                (CC and)
                                (NNS girls))
                              (PP (IN of)
                                (NP (PRP$ their) (JJ own)))
                              (SBAR
                                (WHNP (WP whom))
                                (S
                                  (NP (PRP they))
                                  (VP (VBD wanted)
                                    (S
                                      (VP (TO to)
                                        (VP (VB be)
                                          (ADJP (JJR better) (RP off))
                                          (SBAR (IN than)
                                            (S
                                              (PRN (, ,)
                                                (SBAR (IN because)
                                                  (FRAG
                                                    (PP (IN of)
                                                      (NP (PRP$ their) (NN ignorance)))))
                                                (, ,))
                                              (NP (PRP they))
                                              (VP (VBD had)
                                                (VP (VBN been)
                                                  (NP (PRP themselves)))))))))))))))))))))))))
    (. .)))

nsubj(afraid-3, I-1)
cop(afraid-3, am-2)
root(ROOT-0, afraid-3)
nsubj(learn-7, they-4)
nsubj(read-9, they-4)
aux(learn-7, might-5)
neg(learn-7, never-6)
ccomp(afraid-3, learn-7)
aux(read-9, to-8)
xcomp(learn-7, read-9)
mark(had-12, until-10)
nsubj(had-12, they-11)
advcl(read-9, had-12)
dobj(had-12, boys-13)
dobj(wanted-21, boys-13)
nsubj(better-24, boys-13)
dobj(had-12, girls-15)
conj_and(boys-13, girls-15)
dobj(wanted-21, girls-15)
nsubj(better-24, girls-15)
poss(own-18, their-17)
prep_of(boys-13, own-18)
nsubj(wanted-21, they-20)
rcmod(boys-13, wanted-21)
aux(better-24, to-22)
cop(better-24, be-23)
xcomp(wanted-21, better-24)
dep(better-24, off-25)
mark(themselves-36, than-26)
mark(of-29, because-28)
parataxis(themselves-36, of-29)
poss(ignorance-31, their-30)
pobj(of-29, ignorance-31)
nsubj(themselves-36, they-33)
aux(themselves-36, had-34)
cop(themselves-36, been-35)
advcl(better-24, themselves-36)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBD worked)
      (ADVP (RB well))
      (PP (IN in)
        (NP
          (NP
            (NP (NNP Willie) (POS 's))
            (NN case))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD was)
                (ADJP (DT neither) (JJ lazy)
                  (CC nor)
                  (JJ idle))))))))
    (. .)))

cc(worked-3, But-1)
nsubj(worked-3, it-2)
root(ROOT-0, worked-3)
advmod(worked-3, well-4)
poss(case-8, Willie-6)
prep_in(worked-3, case-8)
nsubj(lazy-13, case-8)
nsubj(idle-15, case-8)
cop(lazy-13, was-11)
preconj(lazy-13, neither-12)
rcmod(case-8, lazy-13)
rcmod(case-8, idle-15)
conj_nor(lazy-13, idle-15)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (MD must) (RB not)
      (VP (VB be)
        (VP (VBN supposed)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD was)
                (VP (VBN left)
                  (PP (IN without)
                    (NP
                      (NP (DT any) (NN education))
                      (ADVP (IN at) (DT all)))))))))))
    (. .)))

cc(supposed-6, And-1)
nsubjpass(supposed-6, it-2)
aux(supposed-6, must-3)
neg(supposed-6, not-4)
auxpass(supposed-6, be-5)
root(ROOT-0, supposed-6)
mark(left-10, that-7)
nsubjpass(left-10, he-8)
auxpass(left-10, was-9)
ccomp(supposed-6, left-10)
det(education-13, any-12)
prep_without(left-10, education-13)
advmod(education-13, at-14)
pobj(at-14, all-15)

(ROOT
  (S
    (PP (IN For)
      (NP (CD one) (NN thing)))
    (, ,)
    (NP (PRP$ his) (NN father)
      (CC and)
      (NN mother))
    (VP (VBD used)
      (S
        (VP (TO to)
          (VP (VB talk)
            (ADVP
              (ADVP (RB very) (RB freely))
              (PP (IN before)
                (NP (PRP him))))
            (PRN (: --)
              (ADVP (RB much) (RBR more) (RB so)
                (SBAR (IN than)
                  (S
                    (S
                      (NP (JJS most) (NNS parents))
                      (VP (VBP do)
                        (PP (IN in)
                          (NP
                            (NP (DT the) (NN presence))
                            (PP (IN of)
                              (NP (PRP$ their) (NNS children)))))))
                    (: ;)
                    (CC and)
                    (S
                      (NP (NN nothing))
                      (VP (VBZ serves)
                        (ADJP (JJR better))))))))
            (PP (IN for)
              (S
                (VP (VBG teaching)
                  (PP (IN than)
                    (NP
                      (NP (DT the) (NN conversation))
                      (PP (IN of)
                        (NP
                          (ADJP (JJ good)
                            (CC and)
                            (JJ thoughtful))
                          (NNS people))))))))))))
    (. .)))

num(thing-3, one-2)
prep_for(used-9, thing-3)
poss(father-6, his-5)
nsubj(used-9, father-6)
nsubj(talk-11, father-6)
conj_and(father-6, mother-8)
nsubj(used-9, mother-8)
nsubj(talk-11, mother-8)
root(ROOT-0, used-9)
aux(talk-11, to-10)
xcomp(used-9, talk-11)
advmod(freely-13, very-12)
advmod(talk-11, freely-13)
prep_before(freely-13, him-15)
advmod(so-19, much-17)
advmod(so-19, more-18)
dep(talk-11, so-19)
mark(do-23, than-20)
amod(parents-22, most-21)
nsubj(do-23, parents-22)
dep(so-19, do-23)
det(presence-26, the-25)
prep_in(do-23, presence-26)
poss(children-29, their-28)
prep_of(presence-26, children-29)
nsubj(serves-33, nothing-32)
dep(so-19, serves-33)
conj_and(do-23, serves-33)
acomp(serves-33, better-34)
prepc_for(talk-11, teaching-36)
det(conversation-39, the-38)
prep_than(teaching-36, conversation-39)
amod(people-44, good-41)
conj_and(good-41, thoughtful-43)
amod(people-44, thoughtful-43)
prep_of(conversation-39, people-44)

(ROOT
  (S
    (S
      (SBAR (IN While)
        (S
          (NP (PRP they))
          (VP (VBD talked))))
      (, ,)
      (NP (NNP Willie))
      (VP (MD would)
        (VP (VB sit)
          (S
            (VP
              (VP (VBG listening)
                (ADVP (RB intently)))
              (, ,)
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB understand)
                      (SBAR
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP he))
                            (VP (VBD heard))))
                        (: ;)
                        (CC and)
                        (SBAR (IN although)
                          (S
                            (NP (PRP it))
                            (RB not)
                            (VP
                              (ADVP (RB unfrequently))
                              (VBD took)
                              (NP
                                (ADJP (RB very) (JJ strange))
                                (NNS shapes))
                              (PP (IN in)
                                (NP (PRP$ his) (JJ little) (NN mind)))
                              (, ,)
                              (SBAR (IN because)
                                (S
                                  (PP (IN at)
                                    (NP (NNS times)))
                                  (NP (PRP he))
                                  (VP (VBD understood)
                                    (SBAR
                                      (S
                                        (NP (CC neither)
                                          (NP (DT the) (NNS words))
                                          (CC nor)
                                          (NP
                                            (NP (DT the) (NNS things))
                                            (NP (DT the) (NNS words))))
                                        (VP (VBD represented))))))))))))))))))))
    (, ,)
    (CC yet)
    (S
      (NP (EX there))
      (VP (VBD was)
        (ADJP (JJ much))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD did)
              (VP (VB understand)
                (CC and)
                (VB make)
                (NP
                  (NP (DT a) (JJ good) (NN use))
                  (PP (IN of)))))))))
    (. .)))

mark(talked-3, While-1)
nsubj(talked-3, they-2)
advcl(sit-7, talked-3)
nsubj(sit-7, Willie-5)
nsubj(was-49, Willie-5)
aux(sit-7, would-6)
root(ROOT-0, sit-7)
ccomp(sit-7, listening-8)
advmod(listening-8, intently-9)
dep(listening-8, trying-11)
aux(understand-13, to-12)
xcomp(trying-11, understand-13)
dobj(heard-16, what-14)
nsubj(heard-16, he-15)
advcl(understand-13, heard-16)
mark(took-23, although-19)
nsubj(took-23, it-20)
neg(took-23, not-21)
advmod(took-23, unfrequently-22)
advcl(understand-13, took-23)
conj_and(heard-16, took-23)
advmod(strange-25, very-24)
amod(shapes-26, strange-25)
dobj(took-23, shapes-26)
poss(mind-30, his-28)
amod(mind-30, little-29)
prep_in(took-23, mind-30)
mark(understood-36, because-32)
prep_at(understood-36, times-34)
nsubj(understood-36, he-35)
advcl(took-23, understood-36)
preconj(words-39, neither-37)
det(words-39, the-38)
nsubj(represented-45, words-39)
det(things-42, the-41)
conj_nor(words-39, things-42)
nsubj(represented-45, things-42)
det(words-44, the-43)
dep(things-42, words-44)
ccomp(understood-36, represented-45)
expl(was-49, there-48)
conj_yet(sit-7, was-49)
acomp(was-49, much-50)
mark(understand-54, that-51)
nsubj(understand-54, he-52)
nsubj(make-56, he-52)
aux(understand-54, did-53)
ccomp(was-49, understand-54)
ccomp(was-49, make-56)
conj_and(understand-54, make-56)
det(use-59, a-57)
amod(use-59, good-58)
dobj(understand-54, use-59)
prep(use-59, of-60)

(ROOT
  (S
    (PP (IN For)
      (NP (NN instance)))
    (, ,)
    (NP (PRP he))
    (ADVP (RB soon))
    (VP (VBD came)
      (S
        (VP (TO to)
          (VP (VB know)
            (SBAR
              (SBAR (IN that)
                (S
                  (NP (PRP$ his) (NN father)
                    (CC and)
                    (NN mother))
                  (VP (VBD had)
                    (NP
                      (ADJP (RB very) (JJ little))
                      (NN money))
                    (S
                      (VP (TO to)
                        (VP (VB spare)))))))
              (, ,)
              (CC and)
              (SBAR (IN that)
                (S
                  (NP (PRP$ his) (NN father))
                  (VP (VBD had)
                    (S
                      (VP (TO to)
                        (VP (VB work)
                          (ADJP (JJ hard)
                            (S
                              (VP (TO to)
                                (VP (VB get)
                                  (SBAR
                                    (WHNP (WP what) (NN money))
                                    (S
                                      (NP (PRP they))
                                      (VP (VBD had)))))))))))))))))))
    (. .)))

prep_for(came-6, instance-2)
nsubj(came-6, he-4)
nsubj(know-8, he-4)
advmod(came-6, soon-5)
root(ROOT-0, came-6)
aux(know-8, to-7)
xcomp(came-6, know-8)
mark(had-14, that-9)
poss(father-11, his-10)
nsubj(had-14, father-11)
conj_and(father-11, mother-13)
nsubj(had-14, mother-13)
ccomp(know-8, had-14)
advmod(little-16, very-15)
amod(money-17, little-16)
dobj(had-14, money-17)
aux(spare-19, to-18)
vmod(had-14, spare-19)
mark(had-25, that-22)
poss(father-24, his-23)
nsubj(had-25, father-24)
nsubj(work-27, father-24)
ccomp(know-8, had-25)
conj_and(had-14, had-25)
aux(work-27, to-26)
xcomp(had-25, work-27)
acomp(work-27, hard-28)
aux(get-30, to-29)
xcomp(hard-28, get-30)
det(money-32, what-31)
dobj(had-34, money-32)
nsubj(had-34, they-33)
ccomp(get-30, had-34)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD learned)
        (ADVP (RB also))
        (NP
          (NP (DT that) (NN everything))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP
                (VP (VBD came)
                  (PP (IN into)
                    (NP (DT the) (NN house))))
                (, ,)
                (CC or)
                (VP (VBD was)
                  (VP (VBN done)
                    (PP (IN for)
                      (NP
                        (NP (PRP them))
                        (, ,)
                        (NP (NN cost) (NN money))))))))))))
    (: ;)
    (S
      (ADVP (RB therefore))
      (, ,)
      (PP (IN for)
        (NP (CD one) (NN thing)))
      (, ,)
      (NP (PRP he))
      (VP (MD must) (RB not)
        (VP (VB ill-use)
          (NP (PRP$ his) (NNS clothes)))))
    (. .)))

nsubj(learned-2, He-1)
root(ROOT-0, learned-2)
advmod(learned-2, also-3)
det(everything-5, that-4)
dobj(learned-2, everything-5)
nsubj(came-7, everything-5)
nsubjpass(done-14, everything-5)
rcmod(everything-5, came-7)
det(house-10, the-9)
prep_into(came-7, house-10)
auxpass(done-14, was-13)
rcmod(everything-5, done-14)
conj_or(came-7, done-14)
prep_for(done-14, them-16)
nn(money-19, cost-18)
appos(them-16, money-19)
advmod(ill-use-30, therefore-21)
num(thing-25, one-24)
prep_for(ill-use-30, thing-25)
nsubj(ill-use-30, he-27)
aux(ill-use-30, must-28)
neg(ill-use-30, not-29)
parataxis(learned-2, ill-use-30)
poss(clothes-32, his-31)
dobj(ill-use-30, clothes-32)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD learned) (, ,)
        (ADVP (RB too))
        (, ,)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBD was)
                (NP
                  (NP (DT a) (JJ great) (NN deal))
                  (PP (IN of)
                    (S
                      (VP (VBG suffering)
                        (PP (IN in)
                          (NP (DT the) (NN world))))))))))
          (, ,)
          (CC and)
          (SBAR (IN that)
            (S
              (NP
                (NP (PRP$ his) (NN father) (POS 's))
                (NN business))
              (VP (VBD was)
                (S
                  (VP (TO to)
                    (VP (VB try)
                      (S
                        (VP (TO to)
                          (VP
                            (VP (VB make)
                              (S
                                (NP (PRP it))
                                (ADJP (JJR less))))
                            (, ,)
                            (CC and)
                            (VP (VB help)
                              (NP
                                (NP (NNS people))
                                (SBAR
                                  (WHNP (WP who))
                                  (S
                                    (VP (VBD were)
                                      (ADJP (JJ ill)
                                        (S
                                          (VP (TO to)
                                            (VP (VB grow)
                                              (ADVP (RB well) (RB again)))))))))))
                            (, ,)
                            (CC and)
                            (VP (VB be)
                              (ADJP (JJ able)
                                (S
                                  (VP (TO to)
                                    (VP (VB do)
                                      (NP (PRP$ their) (NN work)))))))))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (DT this))
      (VP (VBD made)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBP see)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP
                    (NP (DT a) (JJ useful) (NN man))
                    (NP (PRP$ his) (NN father)))
                  (VP
                    (VP (VBD was))
                    (, ,)
                    (CC and)
                    (VP (VBP wish)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADVP (RB also))
                            (PP (IN of)
                              (NP
                                (NP (DT some) (NN good))
                                (PP (IN in)
                                  (NP (DT the) (NN world)))))))))))))))))
    (. .)))

nsubj(learned-2, He-1)
root(ROOT-0, learned-2)
advmod(learned-2, too-4)
mark(was-8, that-6)
expl(was-8, there-7)
ccomp(learned-2, was-8)
det(deal-11, a-9)
amod(deal-11, great-10)
nsubj(was-8, deal-11)
prepc_of(deal-11, suffering-13)
det(world-16, the-15)
prep_in(suffering-13, world-16)
mark(was-24, that-19)
poss(father-21, his-20)
poss(business-23, father-21)
nsubj(was-24, business-23)
nsubj(try-26, business-23)
nsubj(make-28, business-23)
ccomp(learned-2, was-24)
conj_and(was-8, was-24)
aux(try-26, to-25)
xcomp(was-24, try-26)
aux(make-28, to-27)
xcomp(try-26, make-28)
nsubj(less-30, it-29)
xcomp(make-28, less-30)
xcomp(try-26, help-33)
conj_and(make-28, help-33)
dobj(help-33, people-34)
nsubj(ill-37, people-34)
nsubj(grow-39, people-34)
cop(ill-37, were-36)
rcmod(people-34, ill-37)
aux(grow-39, to-38)
xcomp(ill-37, grow-39)
advmod(again-41, well-40)
advmod(grow-39, again-41)
cop(able-45, be-44)
xcomp(try-26, able-45)
conj_and(make-28, able-45)
aux(do-47, to-46)
xcomp(able-45, do-47)
poss(work-49, their-48)
dobj(do-47, work-49)
nsubj(made-53, this-52)
conj_and(learned-2, made-53)
nsubj(see-55, him-54)
ccomp(made-53, see-55)
dobj(was-62, what-56)
det(man-59, a-57)
amod(man-59, useful-58)
nsubj(was-62, man-59)
nsubj(wish-65, man-59)
nsubj(be-67, man-59)
poss(father-61, his-60)
dep(man-59, father-61)
ccomp(see-55, was-62)
ccomp(see-55, wish-65)
conj_and(was-62, wish-65)
aux(be-67, to-66)
xcomp(wish-65, be-67)
advmod(be-67, also-68)
det(good-71, some-70)
prep_of(be-67, good-71)
det(world-74, the-73)
prep_in(good-71, world-74)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD looked)
        (PP (IN about)
          (NP (PRP him))))
      (CC and)
      (VP (VBD saw)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD were)
              (NP
                (NP (DT a) (JJ great) (JJ many) (NNS ways))
                (PP (IN of)
                  (S
                    (VP (VBG getting)
                      (NP
                        (NP (NN money))
                        (, ,)
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ is) (, ,)
                              (S
                                (NP
                                  (NP (DT a) (JJ great) (JJ many) (NNS things))
                                  (PP (IN for)
                                    (S
                                      (VP (VBG doing)
                                        (SBAR
                                          (WHNP (WDT which))
                                          (S
                                            (S
                                              (NP (NNS people))
                                              (VP (MD would)
                                                (VP (VB give)
                                                  (NP (NN money)))))
                                            (: ;)
                                            (CC and)
                                            (S
                                              (NP (PRP he))
                                              (VP (VBD saw)
                                                (SBAR (IN that)
                                                  (S
                                                    (NP
                                                      (NP (DT some))
                                                      (PP (IN of)
                                                        (NP (DT those) (NNS ways))))
                                                    (VP (VBD were)
                                                      (ADJP (JJR better))
                                                      (PP (IN than)
                                                        (NP (NNS others))))))))
                                            (, ,)
                                            (CC and)
                                            (S
                                              (NP (PRP he))
                                              (VP (VBD thought)
                                                (NP
                                                  (NP (PRP$ his) (NN father) (POS 's))
                                                  (NN way))))))))))
                                (NP
                                  (NP (DT the) (RB very) (JJS best))
                                  (PP (IN of)
                                    (NP (DT all))))))))))))))))))
    (. .)))

advmod(looked-3, Then-1)
nsubj(looked-3, he-2)
nsubj(saw-7, he-2)
root(ROOT-0, looked-3)
prep_about(looked-3, him-5)
conj_and(looked-3, saw-7)
mark(were-10, that-8)
expl(were-10, there-9)
ccomp(saw-7, were-10)
det(ways-14, a-11)
amod(ways-14, great-12)
amod(ways-14, many-13)
nsubj(were-10, ways-14)
prepc_of(ways-14, getting-16)
dobj(getting-16, money-17)
nsubj(is-20, money-17)
rcmod(money-17, is-20)
det(things-25, a-22)
amod(things-25, great-23)
amod(things-25, many-24)
nsubj(best-56, things-25)
prepc_for(things-25, doing-27)
dep(give-31, which-28)
nsubj(give-31, people-29)
aux(give-31, would-30)
dep(doing-27, give-31)
dobj(give-31, money-32)
nsubj(saw-36, he-35)
dep(doing-27, saw-36)
conj_and(give-31, saw-36)
mark(better-43, that-37)
nsubj(better-43, some-38)
det(ways-41, those-40)
prep_of(some-38, ways-41)
cop(better-43, were-42)
ccomp(saw-36, better-43)
prep_than(better-43, others-45)
nsubj(thought-49, he-48)
dep(doing-27, thought-49)
conj_and(give-31, thought-49)
poss(father-51, his-50)
poss(way-53, father-51)
dobj(thought-49, way-53)
det(best-56, the-54)
advmod(best-56, very-55)
xcomp(is-20, best-56)
prep_of(best-56, all-58)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP give)
        (NP
          (NP (DT these))
          (PP (IN as)
            (NP
              (NP (NNS specimens))
              (PP (IN of)
                (NP (DT the) (NNS lessons))))))))
    (NP (PRP he))
    (VP (VBD learned)
      (PP (IN by)
        (S
          (VP (VBG listening)
            (PP (TO to)
              (NP (PRP$ his) (NN father)
                (CC and)
                (NN mother)))
            (SBAR (IN as)
              (S
                (NP (PRP they))
                (VP (VBD talked)
                  (ADVP (RB together)))))))))
    (. .)))

nsubj(give-2, I-1)
dep(learned-10, give-2)
dobj(give-2, these-3)
prep_as(these-3, specimens-5)
det(lessons-8, the-7)
prep_of(specimens-5, lessons-8)
nsubj(learned-10, he-9)
root(ROOT-0, learned-10)
prepc_by(learned-10, listening-12)
poss(father-15, his-14)
prep_to(listening-12, father-15)
prep_to(listening-12, mother-17)
conj_and(father-15, mother-17)
mark(talked-20, as-18)
nsubj(talked-20, they-19)
advcl(listening-12, talked-20)
advmod(talked-20, together-21)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD had)
      (NP (DT another) (NN teacher)))
    (. .)))

cc(had-3, But-1)
nsubj(had-3, he-2)
root(ROOT-0, had-3)
det(teacher-5, another-4)
dobj(had-3, teacher-5)

(ROOT
  (S
    (PP (IN Down)
      (NP
        (NP (DT the) (NN street))
        (PP (IN of)
          (NP
            (NP (DT the) (NN village))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD was)
                  (ADJP (RB very) (JJ straggling))
                  (, ,)
                  (PP (IN with)
                    (NP
                      (NP
                        (QP (RB nearly) (RB as) (JJ many))
                        (JJ little) (NNS gardens))
                      (PP (IN as)
                        (NP
                          (NP (NNS houses))
                          (PP (IN in)
                            (NP (PRP it))))))))))))))
    (, ,)
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN house))
        (ADJP (VBN occupied)
          (PP (IN by)
            (NP (JJ several) (JJ poor) (NNS people)))))
      (, ,)
      (PP (IN in)
        (NP
          (NP (CD one) (NN end))
          (SBAR
            (WHPP (IN of)
              (WHNP (WDT which)))
            (PRN (, ,)
              (S
                (VP (VBG consisting)
                  (ADVP (RB just))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (NN room))
                      (CC and)
                      (NP (DT a) (NN closet))))))
              (, ,))
            (S
              (NP (DT an) (JJ old) (NN woman))
              (VP (VBD lived)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD got)
                      (NP (PRP$ her) (NN money))
                      (PP (IN by)
                        (NP (JJ spinning) (NN flax)))
                      (PP (IN into)
                        (NP (NN yarn)))
                      (PP (IN for)
                        (S
                          (VP (VBG making)
                            (NP (NN linen))))))))))))))
    (. .)))

det(street-3, the-2)
prep_down(was-25, street-3)
det(village-6, the-5)
prep_of(street-3, village-6)
nsubj(straggling-11, village-6)
cop(straggling-11, was-9)
advmod(straggling-11, very-10)
rcmod(village-6, straggling-11)
quantmod(many-16, nearly-14)
quantmod(many-16, as-15)
num(gardens-18, many-16)
amod(gardens-18, little-17)
prep_with(straggling-11, gardens-18)
prep_as(gardens-18, houses-20)
prep_in(houses-20, it-22)
expl(was-25, there-24)
root(ROOT-0, was-25)
det(house-27, a-26)
nsubj(was-25, house-27)
amod(house-27, occupied-28)
amod(people-32, several-30)
amod(people-32, poor-31)
prep_by(occupied-28, people-32)
num(end-36, one-35)
prep_in(was-25, end-36)
prep_of(lived-52, end-36)
dep(lived-52, consisting-40)
advmod(consisting-40, just-41)
det(room-44, a-43)
prep_of(consisting-40, room-44)
det(closet-47, a-46)
prep_of(consisting-40, closet-47)
conj_and(room-44, closet-47)
det(woman-51, an-49)
amod(woman-51, old-50)
nsubj(lived-52, woman-51)
rcmod(end-36, lived-52)
nsubj(got-54, who-53)
ccomp(lived-52, got-54)
poss(money-56, her-55)
dobj(got-54, money-56)
amod(flax-59, spinning-58)
prep_by(got-54, flax-59)
prep_into(got-54, yarn-61)
prepc_for(got-54, making-63)
dobj(making-63, linen-64)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ kind-hearted) (JJ old) (NN creature))
        (: --)
        (NP (NN widow)))
      (, ,)
      (PP (IN without)
        (NP
          (NP (DT any) (NN relation))
          (VP (IN near)
            (S
              (VP (TO to)
                (VP
                  (VP (VB help)
                    (NP (PRP her)))
                  (CC or)
                  (VP (VB look)
                    (PP (IN after)
                      (NP (PRP her)))))))))))
    (. .)))

nsubj(creature-6, She-1)
cop(creature-6, was-2)
det(creature-6, a-3)
amod(creature-6, kind-hearted-4)
amod(creature-6, old-5)
root(ROOT-0, creature-6)
dep(creature-6, widow-8)
det(relation-12, any-11)
prep_without(creature-6, relation-12)
dep(relation-12, near-13)
aux(help-15, to-14)
xcomp(near-13, help-15)
dobj(help-15, her-16)
xcomp(near-13, look-18)
conj_or(help-15, look-18)
prep_after(look-18, her-20)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (VP (VBN had)
        (NP
          (NP (CD one) (NN child))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD died)
                (SBAR (IN before)
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (ADJP (RB as) (JJ old))
                      (PP (IN as)
                        (NP (NNP Willie))))))))))))
    (. .)))

nsubj(had-3, She-1)
aux(had-3, had-2)
root(ROOT-0, had-3)
num(child-5, one-4)
dobj(had-3, child-5)
nsubj(died-8, child-5)
rcmod(child-5, died-8)
mark(old-13, before-9)
nsubj(old-13, he-10)
cop(old-13, was-11)
advmod(old-13, as-12)
advcl(died-8, old-13)
prep_as(old-13, Willie-15)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBD was)
        (NP (JJ forty) (NNS years))
        (ADVP (RB before))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP she))
        (VP (VBD had)
          (ADVP (RB never))
          (VP (VBN forgotten)
            (NP (PRP$ her) (JJ little) (NNP Willie))
            (, ,)
            (PP (IN for)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD was)
                    (NP (PRP$ his) (NN name))
                    (ADVP (RB too)))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (VBD fancied)
          (SBAR
            (S
              (NP (PRP$ our) (NN Willie))
              (VP (VBD was)
                (PP (IN like)
                  (NP (PRP him)))))))))
    (. .)))

nsubj(years-4, That-1)
cop(years-4, was-2)
amod(years-4, forty-3)
root(ROOT-0, years-4)
advmod(years-4, before-5)
nsubj(forgotten-11, she-8)
aux(forgotten-11, had-9)
neg(forgotten-11, never-10)
conj_but(years-4, forgotten-11)
poss(Willie-14, her-12)
amod(Willie-14, little-13)
dobj(forgotten-11, Willie-14)
nsubj(name-20, that-17)
cop(name-20, was-18)
poss(name-20, his-19)
prepc_for(forgotten-11, name-20)
advmod(name-20, too-21)
nsubj(fancied-25, she-24)
conj_but(years-4, fancied-25)
conj_and(forgotten-11, fancied-25)
poss(Willie-27, our-26)
nsubj(was-28, Willie-27)
ccomp(fancied-25, was-28)
prep_like(was-28, him-30)

(ROOT
  (S
    (NP (NN Nothing))
    (, ,)
    (ADVP (RB therefore))
    (, ,)
    (VP (VBD pleased)
      (NP (PRP her))
      (ADVP (JJR better) (IN than)
        (S
          (VP (TO to)
            (VP
              (VP (VB get)
                (NP (PRP him))
                (PP (IN into)
                  (NP (PRP$ her) (JJ little) (NN room))))
              (, ,)
              (CC and)
              (VP (VB talk)
                (PP (TO to)
                  (NP (PRP him)))))))))
    (. .)))

nsubj(pleased-5, Nothing-1)
advmod(pleased-5, therefore-3)
root(ROOT-0, pleased-5)
dobj(pleased-5, her-6)
dep(than-8, better-7)
advmod(pleased-5, than-8)
aux(get-10, to-9)
dep(than-8, get-10)
dobj(get-10, him-11)
poss(room-15, her-13)
amod(room-15, little-14)
prep_into(get-10, room-15)
dep(than-8, talk-18)
conj_and(get-10, talk-18)
prep_to(talk-18, him-20)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD would)
      (VP
        (VP (VB take)
          (NP
            (NP (DT a) (JJ little) (NN bit))
            (PP (IN of)
              (NP (NN sugar-candy)))))
        (CC or)
        (VP (VB liquorice)
          (PRT (RP out))
          (PP (IN of)
            (NP
              (NP (PRP$ her) (NN cupboard))
              (PP (IN for)
                (NP (PRP him))))))
        (, ,)
        (CC and)
        (VP (VB tell)
          (NP (PRP him))
          (NP
            (NP (DT some) (JJ strange) (JJ old) (NN fairy) (NN tale)
              (CC or)
              (NN legend))
            (, ,)
            (SBAR (IN while)
              (S
                (NP (PRP she))
                (VP (VBD sat)
                  (S
                    (VP (VBG spinning)))
                  (, ,)
                  (SBAR (IN until)
                    (S
                      (PP (IN at)
                        (NP (JJ last)))
                      (NP (PRP she))
                      (VP (VBD had)
                        (VP (VBN made)
                          (S
                            (NP (PRP him))
                            (ADJP (RB so) (JJ fond)
                              (PP (IN of)
                                (NP (PRP her)))))
                          (SBAR (IN that)
                            (S
                              (NP (PRP he))
                              (VP (MD would)
                                (ADVP (RB often))
                                (VP (VB go)
                                  (CC and)
                                  (VB stay)
                                  (PP (IN for)
                                    (NP
                                      (NP (NNS hours))
                                      (PP (IN with)
                                        (NP (PRP her))))))))))))))))))))
    (. .)))

nsubj(take-3, She-1)
nsubj(liquorice-10, She-1)
nsubj(tell-19, She-1)
aux(take-3, would-2)
root(ROOT-0, take-3)
det(bit-6, a-4)
amod(bit-6, little-5)
dobj(take-3, bit-6)
prep_of(bit-6, sugar-candy-8)
conj_or(take-3, liquorice-10)
poss(cupboard-14, her-13)
prep_out_of(liquorice-10, cupboard-14)
prep_for(cupboard-14, him-16)
conj_and(take-3, tell-19)
iobj(tell-19, him-20)
det(tale-25, some-21)
amod(tale-25, strange-22)
amod(tale-25, old-23)
nn(tale-25, fairy-24)
dobj(tell-19, tale-25)
dobj(tell-19, legend-27)
conj_or(tale-25, legend-27)
mark(sat-31, while-29)
nsubj(sat-31, she-30)
dep(tale-25, sat-31)
xcomp(sat-31, spinning-32)
mark(made-39, until-34)
prep_at(made-39, last-36)
nsubj(made-39, she-37)
aux(made-39, had-38)
advcl(sat-31, made-39)
nsubj(fond-42, him-40)
advmod(fond-42, so-41)
xcomp(made-39, fond-42)
prep_of(fond-42, her-44)
mark(go-49, that-45)
nsubj(go-49, he-46)
nsubj(stay-51, he-46)
aux(go-49, would-47)
advmod(go-49, often-48)
ccomp(made-39, go-49)
ccomp(made-39, stay-51)
conj_and(go-49, stay-51)
prep_for(go-49, hours-53)
prep_with(hours-53, her-55)

(ROOT
  (SINV (CC Nor)
    (VBD did)
    (NP (PRP it))
    (VP (VB make)
      (NP (JJ much) (NN difference))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP$ his) (NN mother))
          (VP (VBN begged)
            (S
              (NP (NNP Mrs) (NNP Wilson))
              (VP (TO to)
                (VP (VB give)
                  (NP (PRP him))
                  (NP (NN something) (JJ sweet)))))
            (PP (RB only)
              (FRAG
                (NP (RB now))
                (CC and)
                (RB then)))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP she))
                (VP (VBD was)
                  (ADJP (JJ afraid)
                    (PP (IN of)
                      (NP (PRP$ his) (NN going)
                        (S
                          (VP (TO to)
                            (VP (VB see)
                              (NP (DT the) (JJ old) (NN woman))
                              (ADVP (RB merely))
                              (PP (IN for)
                                (SBAR
                                  (WHNP (WP what))
                                  (S
                                    (NP (PRP she))
                                    (VP (VBD gave)
                                      (NP
                                        (NP (PRP him))
                                        (, ,)
                                        (SBAR
                                          (WHNP (WDT which))
                                          (S
                                            (VP (MD would)
                                              (VP (VB have)
                                                (VP (VBN been)
                                                  (ADJP (JJ greedy)))))))))))))))))))))))))
    (. .)))

cc(make-4, Nor-1)
aux(make-4, did-2)
nsubj(make-4, it-3)
root(ROOT-0, make-4)
amod(difference-6, much-5)
dobj(make-4, difference-6)
advmod(begged-10, when-7)
poss(mother-9, his-8)
nsubj(begged-10, mother-9)
advcl(make-4, begged-10)
nn(Wilson-12, Mrs-11)
dobj(begged-10, Wilson-12)
nsubj(give-14, Wilson-12)
aux(give-14, to-13)
xcomp(begged-10, give-14)
iobj(give-14, him-15)
dobj(give-14, something-16)
amod(something-16, sweet-17)
prep(begged-10, only-18)
dep(only-18, now-19)
cc(now-19, and-20)
dep(now-19, then-21)
mark(afraid-26, for-23)
nsubj(afraid-26, she-24)
cop(afraid-26, was-25)
advcl(begged-10, afraid-26)
poss(going-29, his-28)
prep_of(afraid-26, going-29)
aux(see-31, to-30)
vmod(going-29, see-31)
det(woman-34, the-32)
amod(woman-34, old-33)
dobj(see-31, woman-34)
advmod(see-31, merely-35)
dobj(gave-39, what-37)
nsubj(gave-39, she-38)
prepc_for(see-31, gave-39)
dobj(gave-39, him-40)
nsubj(greedy-46, him-40)
aux(greedy-46, would-43)
aux(greedy-46, have-44)
cop(greedy-46, been-45)
rcmod(him-40, greedy-46)

(ROOT
  (S (CC But)
    (S
      (NP (DT the) (NN fact))
      (VP (VBD was) (, ,)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD liked)
              (NP (PRP$ her) (NNS stories))
              (ADVP (RBR better))
              (PP (IN than)
                (NP (PRP$ her) (NN sugar-candy)
                  (CC and)
                  (NN liquorice))))
            (: ;)
            (SBAR (IN while)
              (S
                (PP (IN above)
                  (NP (DT all) (NNS things)))
                (NP (PRP he))
                (VP (VBD delighted)
                  (PP (IN in)
                    (S
                      (VP (VBG watching)
                        (S
                          (NP (DT the) (JJ wonderful) (NN wheel))
                          (VP (VB go)
                            (NP (NN round)
                              (CC and)
                              (NN round))
                            (ADVP
                              (ADVP (RB so) (RB fast))
                              (SBAR (IN that)
                                (S
                                  (NP (PRP he))
                                  (VP (MD could) (RB not)
                                    (VP (VB find)
                                      (PRT (RP out))
                                      (SBAR (IN whether)
                                        (S
                                          (NP (PRP$ her) (NN foot))
                                          (VP (VBD was)
                                            (VP (VBG making)
                                              (S
                                                (NP (PRP it))
                                                (VP (VB spin))))))))))))))))))))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (VP (VBG making)
          (NP (PRP$ her) (NN foot) (NN dance))
          (ADVP (RB up)
            (CC and)
            (RB down))
          (PP (IN in)
            (NP (DT that) (JJ curious) (NN way))))))
    (. .)))

det(fact-3, the-2)
nsubj(was-4, fact-3)
root(ROOT-0, was-4)
nsubj(liked-7, he-6)
ccomp(was-4, liked-7)
poss(stories-9, her-8)
dobj(liked-7, stories-9)
advmod(liked-7, better-10)
poss(sugar-candy-13, her-12)
prep_than(liked-7, sugar-candy-13)
prep_than(liked-7, liquorice-15)
conj_and(sugar-candy-13, liquorice-15)
mark(delighted-22, while-17)
det(things-20, all-19)
prep_above(delighted-22, things-20)
nsubj(delighted-22, he-21)
parataxis(liked-7, delighted-22)
prepc_in(delighted-22, watching-24)
det(wheel-27, the-25)
amod(wheel-27, wonderful-26)
nsubj(go-28, wheel-27)
ccomp(watching-24, go-28)
dobj(go-28, round-29)
dobj(go-28, round-31)
conj_and(round-29, round-31)
advmod(fast-33, so-32)
advmod(go-28, fast-33)
mark(find-38, that-34)
nsubj(find-38, he-35)
aux(find-38, could-36)
neg(find-38, not-37)
advcl(fast-33, find-38)
ccomp(fast-33, find-38)
prt(find-38, out-39)
mark(making-44, whether-40)
poss(foot-42, her-41)
nsubj(making-44, foot-42)
aux(making-44, was-43)
ccomp(find-38, making-44)
nsubj(spin-46, it-45)
ccomp(making-44, spin-46)
nsubj(making-51, it-49)
aux(making-51, was-50)
conj_or(was-4, making-51)
poss(dance-54, her-52)
nn(dance-54, foot-53)
dobj(making-51, dance-54)
advmod(making-51, up-55)
advmod(making-51, down-57)
conj_and(up-55, down-57)
det(way-61, that-59)
amod(way-61, curious-60)
prep_in(making-51, way-61)

(ROOT
  (S
    (S
      (SBAR (IN After)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN explained)
              (NP (PRP it))
              (PP (TO to)
                (NP (PRP him)))
              (SBAR
                (ADVP (RB as) (RB well))
                (IN as)
                (S
                  (S
                    (NP (PRP she))
                    (VP (MD could)))
                  (, ,)
                  (CC and)
                  (S
                    (NP (PRP he))
                    (VP (VBD thought)
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (VBD understood)
                            (NP (PRP it)))))))))))))
      (, ,)
      (NP (PRP it))
      (VP (VBD seemed)
        (PP (TO to)
          (NP (PRP him)))
        (NP
          (NP (RB only) (DT the))
          (ADJP (RBR more) (JJ wonderful)
            (CC and)
            (VBN mysterious)))))
    (: ;)
    (CC and)
    (S
      (SBAR (RB ever) (IN as)
        (S
          (NP (PRP it))
          (VP (VBD went)
            (NP (VBG whirring) (NN round)))))
      (, ,)
      (NP (PRP it))
      (VP
        (VP (VBN sung)
          (NP
            (NP (DT a) (NN song))
            (PP (IN of)
              (NP (PRP$ its) (JJ own)))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD was)
                  (ADVP (RB also))
                  (NP
                    (NP (DT the) (NN song))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN story))
                        (, ,)
                        (SBAR
                          (WHNP (WDT whatever))
                          (S
                            (NP (PRP it))
                            (VP (VBD was)
                              (PRN (, ,)
                                (SBAR (IN that)
                                  (S
                                    (NP (DT the) (JJ old) (NN woman))
                                    (VP (VBD was)
                                      (VP (VBG telling)
                                        (NP (PRP him))
                                        (, ,)
                                        (SBAR (IN as)
                                          (S
                                            (NP (PRP he))
                                            (VP (VBD sat)
                                              (S
                                                (VP (VBG listening)
                                                  (PP (IN in)
                                                    (NP (PRP$ her) (JJ high) (JJ soft) (NN chair))))))))))))
                                (, ,))
                              (VP (VBN covered)
                                (PP (IN with)
                                  (NP (JJ long-faded) (NN chintz)))))))
                        (, ,)))))))))
        (CC and)
        (VP (VBN cushioned)
          (PP (IN like)
            (NP (DT a) (NN nest))))))
    (. .)))

mark(explained-4, After-1)
nsubj(explained-4, she-2)
aux(explained-4, had-3)
advcl(seemed-22, explained-4)
dobj(explained-4, it-5)
prep_to(explained-4, him-7)
advmod(well-9, as-8)
mwe(well-9, as-8)
advmod(could-12, well-9)
mark(could-12, as-10)
nsubj(could-12, she-11)
advcl(explained-4, could-12)
nsubj(thought-16, he-15)
advcl(explained-4, thought-16)
conj_and(could-12, thought-16)
nsubj(understood-18, he-17)
ccomp(thought-16, understood-18)
dobj(understood-18, it-19)
nsubj(seemed-22, it-21)
root(ROOT-0, seemed-22)
prep_to(seemed-22, him-24)
advmod(the-26, only-25)
xcomp(seemed-22, the-26)
advmod(wonderful-28, more-27)
amod(the-26, wonderful-28)
amod(the-26, mysterious-30)
conj_and(wonderful-28, mysterious-30)
advmod(went-36, ever-33)
mark(went-36, as-34)
nsubj(went-36, it-35)
advcl(sung-41, went-36)
amod(round-38, whirring-37)
dobj(went-36, round-38)
nsubj(sung-41, it-40)
nsubj(cushioned-85, it-40)
conj_and(seemed-22, sung-41)
det(song-43, a-42)
dobj(sung-41, song-43)
nsubj(song-52, song-43)
poss(own-46, its-45)
prep_of(song-43, own-46)
cop(song-52, was-49)
advmod(song-52, also-50)
det(song-52, the-51)
rcmod(song-43, song-52)
det(story-55, the-54)
prep_of(song-52, story-55)
mark(telling-66, story-55)
dobj(covered-79, whatever-57)
nsubjpass(covered-79, it-58)
auxpass(covered-79, was-59)
det(woman-64, the-62)
amod(woman-64, old-63)
nsubj(telling-66, woman-64)
aux(telling-66, was-65)
parataxis(covered-79, telling-66)
dobj(telling-66, him-67)
mark(sat-71, as-69)
nsubj(sat-71, he-70)
advcl(telling-66, sat-71)
xcomp(sat-71, listening-72)
poss(chair-77, her-74)
amod(chair-77, high-75)
amod(chair-77, soft-76)
prep_in(listening-72, chair-77)
rcmod(story-55, covered-79)
amod(chintz-82, long-faded-81)
prep_with(covered-79, chintz-82)
conj_and(seemed-22, cushioned-85)
conj_and(sung-41, cushioned-85)
det(nest-88, a-87)
prep_like(cushioned-85, nest-88)

(ROOT
  (S
    (SBAR (IN For)
      (S
        (S
          (S
            (NP (NNP Mrs) (NNP Wilson))
            (VP (VBD had)
              (VP (VBN had)
                (NP (DT a) (JJR better) (NN house))
                (S
                  (VP (TO to)
                    (VP (VB live)
                      (PP (IN in)
                        (NP (RB once)))))))))
          (, ,)
          (CC and)
          (S
            (NP
              (NP (DT this) (NN chair))
              (, ,)
              (CONJP (RB as) (RB well) (IN as))
              (NP
                (NP (DT the) (NN chest))
                (PP (IN of)
                  (NP
                    (NP (NNS drawers))
                    (PP (IN of)
                      (NP (JJ dark) (NN mahogany)))
                    (, ,)
                    (PP (IN with)
                      (NP
                        (NP (NN brass))
                        (VP (VBZ handles)))))))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD stood)
                    (PP (IN opposite)
                      (NP (DT the) (NN window))))))
              (, ,))
            (VP (VBD was)
              (NP
                (NP (NN part))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN furniture))
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP (VBD saved)
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP she))
                              (VP (VBD had)
                                (S
                                  (VP (TO to)
                                    (VP (VB sell)
                                      (NP (DT the) (NN rest)))))))))))))))))
        (: ;)
        (CC and)
        (S
          (ADVP (RB well))
          (NP (PRP it))
          (VP (VBD was)))))
    (, ,)
    (NP (PRP she))
    (VP (VBD used)
      (S
        (VP (TO to)
          (VP (VB say) (, ,)
            (PP (IN for)
              (NP (PRP$ her) (JJ old) (JJ rheumatic) (NNS bones)))
            (SBAR (IN that)
              (S
                (NP (PRP she))
                (VP (VBD had)
                  (VP (VBN saved)
                    (NP
                      (NP (DT the) (NN chair))
                      (ADVP (IN at) (JJS least)))))))))))
    (. .)))

mark(had-5, For-1)
nn(Wilson-3, Mrs-2)
nsubj(had-5, Wilson-3)
aux(had-5, had-4)
advcl(used-60, had-5)
det(house-8, a-6)
amod(house-8, better-7)
dobj(had-5, house-8)
aux(live-10, to-9)
vmod(had-5, live-10)
prep(live-10, in-11)
pobj(in-11, once-12)
det(chair-16, this-15)
nsubj(part-40, chair-16)
det(chest-22, the-21)
conj_and(chair-16, chest-22)
nsubj(part-40, chest-22)
prep_of(chest-22, drawers-24)
amod(mahogany-27, dark-26)
prep_of(drawers-24, mahogany-27)
prep_with(drawers-24, brass-30)
dep(brass-30, handles-31)
nsubj(stood-34, that-33)
conj_and(chair-16, stood-34)
nsubj(part-40, stood-34)
det(window-37, the-36)
prep_opposite(stood-34, window-37)
cop(part-40, was-39)
conj_and(had-5, part-40)
advcl(used-60, part-40)
det(furniture-43, the-42)
prep_of(part-40, furniture-43)
nsubj(saved-45, she-44)
rcmod(furniture-43, saved-45)
advmod(had-48, when-46)
nsubj(had-48, she-47)
nsubj(sell-50, she-47)
advcl(saved-45, had-48)
aux(sell-50, to-49)
xcomp(had-48, sell-50)
det(rest-52, the-51)
dobj(sell-50, rest-52)
advmod(was-57, well-55)
nsubj(was-57, it-56)
conj_and(had-5, was-57)
advcl(used-60, was-57)
nsubj(used-60, she-59)
nsubj(say-62, she-59)
root(ROOT-0, used-60)
aux(say-62, to-61)
xcomp(used-60, say-62)
poss(bones-68, her-65)
amod(bones-68, old-66)
amod(bones-68, rheumatic-67)
prep_for(say-62, bones-68)
mark(saved-72, that-69)
nsubj(saved-72, she-70)
aux(saved-72, had-71)
ccomp(say-62, saved-72)
det(chair-74, the-73)
dobj(saved-72, chair-74)
advmod(chair-74, at-75)
pobj(at-75, least-76)

(ROOT
  (S
    (PP (IN In)
      (NP (DT that) (NN chair)))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (NP (DT the) (JJ little) (NN boy))
    (VP (MD would)
      (VP (VB sit)
        (S
          (S
            (VP (VBN coiled)
              (PRT (RP up))
              (NP (RB as) (RB nearly))
              (PP (IN into)
                (NP
                  (NP (DT a) (NN ball))
                  (SBAR (IN as)
                    (S
                      (VP (MD might)
                        (VP (VB be) (, ,)
                          (PP (IN like)
                            (NP
                              (NP (DT a) (JJ young) (NN bird))
                              (CC or)
                              (NP (DT a) (NN rabbit))))
                          (PP (IN in)
                            (NP (PRP$ its) (NN nest)))))))))
              (, ,)
              (PP (VBG staring)
                (PP (IN at)
                  (NP (DT the) (NN wheel))))))
          (, ,)
          (CC and)
          (S
            (VP (VBG listening)
              (PP (IN with)
                (NP
                  (NP (CD two) (NNS ears))
                  (CC and)
                  (NP (CD one) (NN heart))))
              (PP (TO to)
                (NP
                  (NP (PRP$ its) (NN song))
                  (CC and)
                  (NP
                    (NP (DT the) (JJ old) (NN woman) (POS 's))
                    (NN tale))))
              (ADVP (DT both) (IN at) (RB once)))))))
    (. .)))

det(chair-3, that-2)
prep_in(sit-11, chair-3)
advmod(sit-11, then-5)
det(boy-9, the-7)
amod(boy-9, little-8)
nsubj(sit-11, boy-9)
aux(sit-11, would-10)
root(ROOT-0, sit-11)
dep(sit-11, coiled-12)
prt(coiled-12, up-13)
advmod(nearly-15, as-14)
dobj(coiled-12, nearly-15)
det(ball-18, a-17)
prep_into(coiled-12, ball-18)
mark(be-21, as-19)
aux(be-21, might-20)
dep(ball-18, be-21)
det(bird-26, a-24)
amod(bird-26, young-25)
prep_like(be-21, bird-26)
det(rabbit-29, a-28)
prep_like(be-21, rabbit-29)
conj_or(bird-26, rabbit-29)
poss(nest-32, its-31)
prep_in(be-21, nest-32)
prep(coiled-12, staring-34)
pcomp(staring-34, at-35)
det(wheel-37, the-36)
pobj(at-35, wheel-37)
dep(sit-11, listening-40)
conj_and(coiled-12, listening-40)
num(ears-43, two-42)
prep_with(listening-40, ears-43)
num(heart-46, one-45)
prep_with(listening-40, heart-46)
conj_and(ears-43, heart-46)
poss(song-49, its-48)
prep_to(listening-40, song-49)
det(woman-53, the-51)
amod(woman-53, old-52)
poss(tale-55, woman-53)
prep_to(listening-40, tale-55)
conj_and(song-49, tale-55)
pobj(at-57, both-56)
advmod(listening-40, at-57)
advmod(at-57, once-58)

(ROOT
  (FRAG
    (NP (NNP -LSB-) (NNP Illustration))
    (: :)
    (PP
      (NP (`` ``)
        (NP (NNP WILLIE) (NNP LIKED) (NNP MRS) (NNP WILSON) (POS 'S))
        (NNP STORIES) (NN BETTER))
      (IN THAN)
      (NP (NNP HER) (NNP SUGAR) (NNP CANDY) (. .) ('' '') (NNP -RSB-)))))

nn(Illustration-2, -LSB--1)
root(ROOT-0, Illustration-2)
nn(WILSON-8, WILLIE-5)
nn(WILSON-8, LIKED-6)
nn(WILSON-8, MRS-7)
poss(BETTER-11, WILSON-8)
nn(BETTER-11, STORIES-10)
dep(Illustration-2, BETTER-11)
nn(-RSB--18, HER-13)
nn(-RSB--18, SUGAR-14)
nn(-RSB--18, CANDY-15)
prep_than(Illustration-2, -RSB--18)

(ROOT
  (S
    (NP (CD One) (JJ sultry) (NNP summer) (NN afternoon))
    (, ,)
    (NP
      (NP (PRP$ his) (NN mother))
      (SBAR
        (S
          (SBAR (RB not)
            (S
              (S
                (VP (VBG being)
                  (ADVP (RB very) (RB well))))
              (CC and)
              (S
                (VP (VBG having)
                  (VP (VBN gone)
                    (S
                      (VP (TO to)
                        (VP (VB lie)
                          (PRT (RP down))
                          (, ,)
                          (NP (PRP$ his) (NN father)
                            (S
                              (VP (VBG being)
                                (ADJP (RP out)))))
                          (, ,)
                          (SBAR (IN as)
                            (S
                              (NP (PRP he))
                              (ADVP (RB so) (RB often))
                              (VP (VBD was) (, ,)
                                (PP (IN upon)
                                  (NP
                                    (NP
                                      (NP (NNP Scramble))
                                      (NP (DT the) (JJ old) (NN horse)))
                                    (, ,)
                                    (CC and)
                                    (NP
                                      (NP (NNP Tibby))
                                      (, ,)
                                      (NP (PRP$ their) (JJ only) (NN servant)))))
                                (, ,)
                                (S
                                  (VP (VBG being)
                                    (ADJP (JJ busy)
                                      (PP (IN with)
                                        (NP (DT the) (NN ironing)))))))))))))))))
          (, ,)
          (NP (NNP Willie))
          (VP
            (VP (VBD ran)
              (PRT (RP off))
              (PP (TO to)
                (NP (NNP Widow) (NNP Wilson) (POS 's))))
            (, ,)
            (CC and)
            (VP (VBD was)
              (ADVP (RB soon))
              (VP (VBN curled)
                (PRT (RP up))
                (PP (IN in)
                  (NP (DT the) (NN chair)))
                (, ,)
                (PP (IN like)
                  (NP
                    (NP (DT a) (JJ little) (NNP Hindoo) (NN idol))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD had)
                          (VP (VBN grown)
                            (ADJP (JJ weary)
                              (PP (IN of)
                                (S
                                  (VP (VBG sitting)
                                    (NP (NN upright))))))))))))))
            (, ,)
            (CC and)
            (VP (VBD had))))))
    (VP (VBD tumbled)
      (NP (PRP itself))
      (PP (IN into)
        (NP (DT a) (NN corner))))
    (. .)))

num(afternoon-4, One-1)
amod(afternoon-4, sultry-2)
nn(afternoon-4, summer-3)
nsubj(tumbled-81, afternoon-4)
poss(mother-7, his-6)
nsubj(tumbled-81, mother-7)
dep(being-9, not-8)
advcl(ran-50, being-9)
advmod(well-11, very-10)
advmod(being-9, well-11)
aux(gone-14, having-13)
conj_and(being-9, gone-14)
advcl(ran-50, gone-14)
aux(lie-16, to-15)
xcomp(gone-14, lie-16)
prt(lie-16, down-17)
poss(father-20, his-19)
dobj(lie-16, father-20)
cop(out-22, being-21)
dep(father-20, out-22)
mark(was-28, as-24)
nsubj(was-28, he-25)
advmod(often-27, so-26)
advmod(was-28, often-27)
advcl(lie-16, was-28)
prep_upon(was-28, Scramble-31)
det(horse-34, the-32)
amod(horse-34, old-33)
dep(Scramble-31, horse-34)
prep_upon(was-28, Tibby-37)
conj_and(Scramble-31, Tibby-37)
poss(servant-41, their-39)
amod(servant-41, only-40)
appos(Tibby-37, servant-41)
cop(busy-44, being-43)
xcomp(was-28, busy-44)
det(ironing-47, the-46)
prep_with(busy-44, ironing-47)
nsubj(ran-50, Willie-49)
nsubjpass(curled-60, Willie-49)
nsubj(had-80, Willie-49)
rcmod(mother-7, ran-50)
prt(ran-50, off-51)
nn(Wilson-54, Widow-53)
prep_to(ran-50, Wilson-54)
possessive(Wilson-54, 's-55)
auxpass(curled-60, was-58)
advmod(curled-60, soon-59)
rcmod(mother-7, curled-60)
conj_and(ran-50, curled-60)
prt(curled-60, up-61)
det(chair-64, the-63)
prep_in(curled-60, chair-64)
det(idol-70, a-67)
amod(idol-70, little-68)
nn(idol-70, Hindoo-69)
prep_like(curled-60, idol-70)
nsubj(grown-73, idol-70)
aux(grown-73, had-72)
rcmod(idol-70, grown-73)
acomp(grown-73, weary-74)
prepc_of(weary-74, sitting-76)
dobj(sitting-76, upright-77)
rcmod(mother-7, had-80)
conj_and(ran-50, had-80)
root(ROOT-0, tumbled-81)
dobj(tumbled-81, itself-82)
det(corner-85, a-84)
prep_into(tumbled-81, corner-85)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S
      (SBAR (IN before)
        (S
          (NP (PRP he))
          (VP (VBD came))))
      (, ,)
      (NP (DT the) (JJ old) (NN woman))
      (VP (VBD had)
        (VP (VBN been)
          (VP
            (VP (VBG thinking)
              (PP (IN about)
                (NP (PRP him))))
            (, ,)
            (CC and)
            (VP (VBG wishing)
              (ADVP
                (ADVP (RB very) (RB much))
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (MD would)
                      (VP (VB come)))))))))))
    (: ;)
    (S
      (S
        (VP (VBG turning)
          (PRT (RP over))
          (ADVP (RB also))
          (PP (IN in)
            (NP (PRP$ her) (NN mind)))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP she))
              (VP (VBD spun) (, ,)
                (NP
                  (NP (PDT all) (PRP$ her) (NN stock))
                  (PP (IN of)
                    (NP (NNS stories)))))))
          (, ,)
          (PP (IN in)
            (NP
              (NP (DT the) (NN hope))
              (PP (IN of)
                (S
                  (VP (VBG finding)
                    (PP (IN in)
                      (NP
                        (NP (DT some) (NN nook))
                        (CC or)
                        (NP (JJ other) (NN one)))))))))))
      (NP (PRP she))
      (VP (VBD had) (RB not)
        (ADVP (RB yet))
        (VP (VBN told)
          (NP (PRP him)))))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (SBAR (IN although)
            (S
              (NP (PRP he))
              (VP (VBD had) (RB not)
                (ADVP (RB yet))
                (VP (VBN begun)
                  (S
                    (VP (TO to)
                      (VP (VB grow)
                        (ADJP (JJ tired))
                        (ADVP (RB even))
                        (PP (IN of)
                          (NP (DT those))))))))))
          (NP (PRP he))
          (VP (VBD knew)
            (ADVP (RBS best)))))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT a) (JJ special) (NN treat)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP (DT a) (JJ new) (NN one))))))))
    (: ;)
    (S
      (PP (IN for)
        (PP (IN by)
          (NP (DT this) (NN time))))
      (NP
        (NP (NNP Mrs) (NNP Wilson) (POS 's))
        (NN store))
      (VP (VBD was)
        (VP
          (ADVP (DT all)
            (CC but))
          (VBN exhausted))))
    (, ,)
    (CC and)
    (S
      (NP (DT a) (JJ new) (NN one))
      (VP (VBD turned)
        (ADVP (RB up) (RB very))
        (ADVP (RB rarely))))
    (. .)))

advmod(thinking-12, Now-1)
mark(came-5, before-3)
nsubj(came-5, he-4)
advcl(thinking-12, came-5)
det(woman-9, the-7)
amod(woman-9, old-8)
nsubj(thinking-12, woman-9)
nsubj(wishing-17, woman-9)
aux(thinking-12, had-10)
aux(thinking-12, been-11)
root(ROOT-0, thinking-12)
prep_about(thinking-12, him-14)
conj_and(thinking-12, wishing-17)
advmod(much-19, very-18)
advmod(wishing-17, much-19)
mark(come-23, that-20)
nsubj(come-23, he-21)
aux(come-23, would-22)
advcl(much-19, come-23)
ccomp(much-19, come-23)
dep(told-57, turning-25)
prt(turning-25, over-26)
advmod(turning-25, also-27)
poss(mind-30, her-29)
prep_in(turning-25, mind-30)
mark(spun-34, as-32)
nsubj(spun-34, she-33)
advcl(turning-25, spun-34)
predet(stock-38, all-36)
poss(stock-38, her-37)
dobj(spun-34, stock-38)
prep_of(stock-38, stories-40)
det(hope-44, the-43)
prep_in(turning-25, hope-44)
prepc_of(hope-44, finding-46)
det(nook-49, some-48)
prep_in(finding-46, nook-49)
amod(one-52, other-51)
prep_in(finding-46, one-52)
conj_or(nook-49, one-52)
nsubj(told-57, she-53)
aux(told-57, had-54)
neg(told-57, not-55)
advmod(told-57, yet-56)
conj_and(thinking-12, told-57)
dobj(told-57, him-58)
mark(knew-74, for-60)
mark(begun-66, although-61)
nsubj(begun-66, he-62)
nsubj(grow-68, he-62)
aux(begun-66, had-63)
neg(begun-66, not-64)
advmod(begun-66, yet-65)
advcl(knew-74, begun-66)
aux(grow-68, to-67)
xcomp(begun-66, grow-68)
acomp(grow-68, tired-69)
advmod(grow-68, even-70)
prep_of(grow-68, those-72)
nsubj(knew-74, he-73)
advcl(treat-81, knew-74)
advmod(knew-74, best-75)
nsubj(treat-81, it-77)
cop(treat-81, was-78)
det(treat-81, a-79)
amod(treat-81, special-80)
conj_and(thinking-12, treat-81)
aux(have-83, to-82)
vmod(treat-81, have-83)
det(one-86, a-84)
amod(one-86, new-85)
dobj(have-83, one-86)
prep(exhausted-99, for-88)
pcomp(for-88, by-89)
det(time-91, this-90)
pobj(by-89, time-91)
nn(Wilson-93, Mrs-92)
poss(store-95, Wilson-93)
nsubjpass(exhausted-99, store-95)
auxpass(exhausted-99, was-96)
mwe(but-98, all-97)
advmod(exhausted-99, but-98)
conj_and(thinking-12, exhausted-99)
det(one-104, a-102)
amod(one-104, new-103)
nsubj(turned-105, one-104)
conj_and(thinking-12, turned-105)
advmod(very-107, up-106)
advmod(turned-105, very-107)
advmod(turned-105, rarely-108)

(ROOT
  (S
    (NP (DT This) (NN time))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (VBD was)
        (ADJP (JJ successful)))
      (, ,)
      (CC and)
      (VP (VBD did)
        (NP (NN call))
        (S
          (VP (TO to)
            (VP (VB mind)
              (NP (CD one))
              (SBAR (IN that)
                (S
                  (NP (PRP she))
                  (VP (VBD had) (RB not)
                    (VP (VBN thought)
                      (PP (IN of)
                        (ADVP (RB before))))))))))))
    (. .)))

det(time-2, This-1)
nsubj(successful-8, time-2)
nsubj(did-11, time-2)
advmod(successful-8, however-4)
nsubj(successful-8, she-6)
cop(successful-8, was-7)
root(ROOT-0, successful-8)
conj_and(successful-8, did-11)
dobj(did-11, call-12)
aux(mind-14, to-13)
vmod(did-11, mind-14)
dobj(mind-14, one-15)
mark(thought-20, that-16)
nsubj(thought-20, she-17)
aux(thought-20, had-18)
neg(thought-20, not-19)
ccomp(mind-14, thought-20)
prep(thought-20, of-21)
pcomp(of-21, before-22)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP
        (VP (VBD had) (RB not)
          (ADVP (RB only))
          (VP (VBN grown)
            (S
              (ADJP (RB very) (JJ dusty)))))
        (, ,)
        (CC but)
        (VP (VBD was)
          (ADJP (JJ full)
            (PP (IN of)
              (NP
                (NP (JJ little) (NNS holes))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP she))
                    (ADVP (IN at) (RB once))
                    (VP (VBD set)
                      (PP (IN about)
                        (S
                          (VP (VBG darning)
                            (PRT (RP up))
                            (PP (IN with)
                              (NP
                                (NP (DT the) (NN needle)
                                  (CC and)
                                  (NN thread))
                                (PP (IN of)
                                  (NP (PRP$ her) (NN imagination)))))))))))))))))
    (, ,) (IN so)
    (S
      (NP (DT that))
      (, ,)
      (PP (IN by)
        (NP
          (NP (DT the) (NN time))
          (SBAR
            (S
              (NP (NNP Willie))
              (VP (VBD arrived))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD had)
        (NP (DT a) (NN treat))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP
              (VP (VBD thought))
              (, ,)
              (VP
                (ADJP (RB quite) (JJ ready))
                (PP (IN for)
                  (NP (PRP him)))))))))
    (. .)))

nsubj(grown-5, It-1)
nsubj(full-11, It-1)
aux(grown-5, had-2)
neg(grown-5, not-3)
advmod(grown-5, only-4)
root(ROOT-0, grown-5)
advmod(dusty-7, very-6)
acomp(grown-5, dusty-7)
cop(full-11, was-10)
conj_but(grown-5, full-11)
amod(holes-14, little-13)
prep_of(full-11, holes-14)
dobj(set-20, holes-14)
nsubj(set-20, she-17)
advmod(set-20, at-18)
advmod(at-18, once-19)
rcmod(holes-14, set-20)
prepc_about(set-20, darning-22)
prt(darning-22, up-23)
det(needle-26, the-25)
prep_with(darning-22, needle-26)
prep_with(darning-22, thread-28)
conj_and(needle-26, thread-28)
poss(imagination-31, her-30)
prep_of(needle-26, imagination-31)
dep(grown-5, so-33)
nsubj(had-43, that-34)
det(time-38, the-37)
prep_by(had-43, time-38)
nsubj(arrived-40, Willie-39)
rcmod(time-38, arrived-40)
nsubj(had-43, she-42)
parataxis(grown-5, had-43)
det(treat-45, a-44)
dobj(had-43, treat-45)
mark(thought-49, as-47)
nsubj(thought-49, she-48)
advcl(had-43, thought-49)
advmod(ready-52, quite-51)
dep(thought-49, ready-52)
prep_for(ready-52, him-54)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP (PRP you))
              (NP
                (NP (DT the) (NN story))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD was)
                      (PP (IN about)
                        (NP
                          (NP (DT a) (JJ poor) (NN boy))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBD received)
                                (PP (IN from)
                                  (NP
                                    (NP (DT a) (NN fairy))
                                    (SBAR
                                      (WHPP (TO to)
                                        (WHNP (WP whom)))
                                      (S
                                        (NP (PRP he))
                                        (VP (VBD had)
                                          (VP (VBN shown)
                                            (S
                                              (NP (DT some) (NN kindness))
                                              (NP
                                                (NP (DT the) (NN gift))
                                                (PP (IN of)
                                                  (NP (DT a) (JJ marvelous) (NN wand)))))))))))
                                (, ,)
                                (PP (IN in)
                                  (NP
                                    (NP (DT the) (NN shape))
                                    (PP (IN of)
                                      (NP
                                        (NP (DT a) (JJ common) (NN blackthorn) (NN walking-stick))
                                        (, ,)
                                        (SBAR
                                          (WHNP (WDT which))
                                          (S
                                            (NP (NN nobody))
                                            (VP (MD could)
                                              (VP (VB suspect)
                                                (PP (IN of)
                                                  (S
                                                    (VP (VBG possessing)
                                                      (NP (JJ such) (JJ wonderful) (NN virtue)))))))))))))))))))))))))))
    (. .)))

nsubj(going-4, I-1)
nsubj(tell-6, I-1)
aux(going-4, am-2)
neg(going-4, not-3)
root(ROOT-0, going-4)
aux(tell-6, to-5)
xcomp(going-4, tell-6)
iobj(tell-6, you-7)
det(story-9, the-8)
dobj(tell-6, story-9)
nsubj(was-12, story-9)
rcmod(story-9, was-12)
det(boy-16, a-14)
amod(boy-16, poor-15)
prep_about(was-12, boy-16)
nsubj(received-18, boy-16)
rcmod(boy-16, received-18)
det(fairy-21, a-20)
prep_from(received-18, fairy-21)
prep_to(shown-26, fairy-21)
nsubj(shown-26, he-24)
aux(shown-26, had-25)
rcmod(fairy-21, shown-26)
det(kindness-28, some-27)
nsubj(gift-30, kindness-28)
det(gift-30, the-29)
xcomp(shown-26, gift-30)
det(wand-34, a-32)
amod(wand-34, marvelous-33)
prep_of(gift-30, wand-34)
det(shape-38, the-37)
prep_in(received-18, shape-38)
det(walking-stick-43, a-40)
amod(walking-stick-43, common-41)
nn(walking-stick-43, blackthorn-42)
prep_of(shape-38, walking-stick-43)
dobj(suspect-48, walking-stick-43)
nsubj(suspect-48, nobody-46)
aux(suspect-48, could-47)
rcmod(walking-stick-43, suspect-48)
prepc_of(suspect-48, possessing-50)
amod(virtue-53, such-51)
amod(virtue-53, wonderful-52)
dobj(possessing-50, virtue-53)

(ROOT
  (S
    (PP (IN By)
      (NP
        (NP (NNS means))
        (PP (IN of)
          (NP (PRP it)))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP
                  (NP (NN anything))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD wished)))))))))
        (, ,)
        (PP (IN without)
          (NP (DT the) (JJS least) (NN trouble)))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB so))
      (, ,)
      (SBAR (IN upon)
        (S
          (NP
            (NP (DT a) (NN trial))
            (PP (IN of)
              (NP
                (NP (NN skill))
                (, ,)
                (VP (VBN appointed)
                  (PP (IN by)
                    (NP (DT a) (JJ certain) (NN king)))
                  (, ,)
                  (SBAR (IN in) (NN order)
                    (S
                      (VP (TO to)
                        (VP (VB find)
                          (ADJP (IN out)
                            (WHNP (WDT which)))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NNS craftsmen))
                              (PP (IN of)
                                (NP (PRP$ his) (NN realm)))))))))))))
          (VP (VBD was)
            (ADJP (JJ fittest)
              (S
                (VP (TO to)
                  (VP (VB aid)
                    (NP (PRP him))
                    (PP (IN in)
                      (S
                        (VP (VBG ruling)
                          (NP (PRP it))))))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD found)
        (S
          (NP (PRP it))
          (ADJP (JJ easy)
            (S
              (VP (TO to)
                (VP
                  (VP (VB surpass)
                    (NP
                      (NP (DT every) (NN one))
                      (PP (IN of)
                        (NP (PRP them)))))
                  (, ,)
                  (NP
                    (NP (DT each))
                    (PP (IN in)
                      (NP (PRP$ his) (JJ own) (NN trade)))))))))))
    (. .)))

prep_by_means_of(able-8, it-4)
nsubj(able-8, he-6)
nsubj(do-10, he-6)
cop(able-8, was-7)
root(ROOT-0, able-8)
aux(do-10, to-9)
xcomp(able-8, do-10)
dobj(do-10, anything-11)
nsubj(wished-13, he-12)
rcmod(anything-11, wished-13)
det(trouble-18, the-16)
amod(trouble-18, least-17)
prep_without(able-8, trouble-18)
advmod(found-57, so-21)
mark(fittest-48, upon-23)
det(trial-25, a-24)
nsubj(fittest-48, trial-25)
nsubj(aid-50, trial-25)
prep_of(trial-25, skill-27)
vmod(skill-27, appointed-29)
det(king-33, a-31)
amod(king-33, certain-32)
agent(appointed-29, king-33)
mark(find-38, in-35)
dep(find-38, order-36)
aux(find-38, to-37)
advcl(appointed-29, find-38)
acomp(find-38, out-39)
dep(out-39, which-40)
det(craftsmen-43, the-42)
prep_of(find-38, craftsmen-43)
poss(realm-46, his-45)
prep_of(craftsmen-43, realm-46)
cop(fittest-48, was-47)
advcl(found-57, fittest-48)
aux(aid-50, to-49)
xcomp(fittest-48, aid-50)
dobj(aid-50, him-51)
prepc_in(aid-50, ruling-53)
dobj(ruling-53, it-54)
nsubj(found-57, he-56)
conj_and(able-8, found-57)
nsubj(easy-59, it-58)
nsubj(surpass-61, it-58)
xcomp(found-57, easy-59)
aux(surpass-61, to-60)
xcomp(easy-59, surpass-61)
det(one-63, every-62)
dobj(surpass-61, one-63)
prep_of(one-63, them-65)
dobj(surpass-61, each-67)
poss(trade-71, his-69)
amod(trade-71, own-70)
prep_in(each-67, trade-71)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD produced)
        (NP
          (NP (DT a) (JJR richer) (NN damask))
          (PP (IN than)
            (NP
              (NP
                (NP
                  (NP (DT any))
                  (PP (IN of)
                    (NP (DT the) (NNS silk-weavers))))
                (: ;)
                (NP
                  (NP (DT a) (NN finer) (NN linen))
                  (PP (IN than)
                    (NP
                      (NP (DT any))
                      (PP (IN of)
                        (NP (DT the) (NNS linen-weavers))))))
                (: ;)
                (NP
                  (NP (DT a)
                    (ADJP
                      (ADJP (RBR more) (JJ complicated))
                      (CONJP (RB as) (RB well) (IN as))
                      (ADJP (JJ ornate)))
                    (NN cabinet))
                  (PRN (, ,)
                    (PP (IN with)
                      (NP
                        (NP (JJR more) (NNS drawers))
                        (CC and)
                        (NP (JJ quaint) (NNS hiding-places))))
                    (, ,))
                  (PP (IN than)
                    (NP (DT any)))
                  (PP (IN of)
                    (NP (DT the) (NNS cabinet-makers))))
                (: ;)
                (NP
                  (NP (DT a) (JJ sword-blade)
                    (ADJP (RBR more) (JJ cunningly))
                    (NN damasked))
                  (, ,)
                  (CC and)
                  (NP (DT a) (JJ hilt)
                    (ADJP (RBR more) (JJ gorgeously))
                    (NN jewelled))))
              (, ,)
              (PP (IN than)
                (NP
                  (NP (DT any))
                  (PP (IN of)
                    (NP (DT the) (NNS sword-makers)))))
              (: ;)
              (NP
                (NP (DT a) (NN ring))
                (VP (VBN set)
                  (PP (IN with)
                    (NP
                      (NP (NNS stones))
                      (ADJP
                        (ADJP (RBR more) (JJ precious))
                        (, ,)
                        (ADJP (RBR more) (JJ brilliant)
                          (PP (IN in)
                            (NP (NN colour))))
                        (, ,)
                        (CC and)
                        (ADJP (RBR more) (RB beautifully) (JJ combined))
                        (, ,))))
                  (PP (IN than)
                    (NP
                      (NP (DT any))
                      (PP (IN of)
                        (NP (DT the) (NNS jewellers)))))))
              (: :))))
        (PP (IN in)
          (ADJP (JJ short)))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBP say)
              (SBAR
                (S (, ,)
                  (PP (IN without)
                    (S
                      (VP (VBG knowing)
                        (NP
                          (NP (DT a) (JJ single) (NN device))
                          (PP (IN of)
                            (NP (CD one)))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NNS arts))
                              (PP (IN in)
                                (NP (NN question)))))))))
                  (, ,)
                  (NP (PRP he))
                  (VP (VBD surpassed)
                    (NP
                      (NP (DT every) (NN one))
                      (PP (IN of)
                        (NP (DT the) (NNS competitors))))
                    (PP (IN in)
                      (NP (PRP$ his) (JJ own) (NN craft)))))))))))
    (, ,)
    (VP (VBD won)
      (NP
        (NP (DT the) (NN favour))
        (PP (IN of)
          (NP
            (NP (DT the) (NN king))
            (CC and)
            (NP (DT the) (NN office)))))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD wished)
            (S
              (VP (TO to)
                (VP (VB confer))))))
        (, ,)
        (CC and)
        (S
          (PRN (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBP remember)
                  (ADVP (RB rightly)))))
            (, ,))
          (VP (VBD gained)
            (PP (IN at)
              (NP (NN length)))))))
    (NP
      (NP
        (NP (DT the) (NN king) (POS 's))
        (NN daughter))
      (PP (TO to)
        (NP (NN boot))))
    (. .)))

nsubj(produced-2, He-1)
ccomp(won-118, produced-2)
det(damask-5, a-3)
amod(damask-5, richer-4)
dobj(produced-2, damask-5)
prep_than(damask-5, any-7)
det(silk-weavers-10, the-9)
prep_of(any-7, silk-weavers-10)
det(linen-14, a-12)
nn(linen-14, finer-13)
dep(any-7, linen-14)
prep_than(linen-14, any-16)
det(linen-weavers-19, the-18)
prep_of(any-16, linen-weavers-19)
det(cabinet-28, a-21)
advmod(complicated-23, more-22)
amod(cabinet-28, complicated-23)
conj_and(complicated-23, ornate-27)
amod(cabinet-28, ornate-27)
dep(any-7, cabinet-28)
amod(drawers-32, more-31)
prep_with(cabinet-28, drawers-32)
amod(hiding-places-35, quaint-34)
prep_with(cabinet-28, hiding-places-35)
conj_and(drawers-32, hiding-places-35)
prep_than(cabinet-28, any-38)
det(cabinet-makers-41, the-40)
prep_of(cabinet-28, cabinet-makers-41)
det(damasked-47, a-43)
amod(damasked-47, sword-blade-44)
advmod(cunningly-46, more-45)
amod(damasked-47, cunningly-46)
dep(any-7, damasked-47)
det(jewelled-54, a-50)
amod(jewelled-54, hilt-51)
advmod(gorgeously-53, more-52)
amod(jewelled-54, gorgeously-53)
dep(any-7, jewelled-54)
conj_and(damasked-47, jewelled-54)
prep_than(any-7, any-57)
det(sword-makers-60, the-59)
prep_of(any-57, sword-makers-60)
det(ring-63, a-62)
dep(any-7, ring-63)
vmod(ring-63, set-64)
prep_with(set-64, stones-66)
advmod(precious-68, more-67)
amod(stones-66, precious-68)
advmod(brilliant-71, more-70)
amod(stones-66, brilliant-71)
conj_and(precious-68, brilliant-71)
prep_in(brilliant-71, colour-73)
advmod(combined-78, more-76)
advmod(combined-78, beautifully-77)
amod(stones-66, combined-78)
conj_and(precious-68, combined-78)
prep_than(set-64, any-81)
det(jewellers-84, the-83)
prep_of(any-81, jewellers-84)
prep_in(produced-2, short-87)
mark(say-91, as-89)
nsubj(say-91, I-90)
advcl(produced-2, say-91)
prepc_without(surpassed-107, knowing-94)
det(device-97, a-95)
amod(device-97, single-96)
dobj(knowing-94, device-97)
prep_of(device-97, one-99)
det(arts-102, the-101)
prep_of(device-97, arts-102)
prep_in(arts-102, question-104)
nsubj(surpassed-107, he-106)
ccomp(say-91, surpassed-107)
det(one-109, every-108)
dobj(surpassed-107, one-109)
det(competitors-112, the-111)
prep_of(one-109, competitors-112)
poss(craft-116, his-114)
amod(craft-116, own-115)
prep_in(surpassed-107, craft-116)
root(ROOT-0, won-118)
det(favour-120, the-119)
dobj(won-118, favour-120)
det(king-123, the-122)
prep_of(favour-120, king-123)
det(office-126, the-125)
prep_of(favour-120, office-126)
conj_and(king-123, office-126)
nsubj(wished-128, he-127)
nsubj(confer-130, he-127)
nsubj(gained-139, he-127)
dep(won-118, wished-128)
aux(confer-130, to-129)
xcomp(wished-128, confer-130)
mark(remember-136, if-134)
nsubj(remember-136, I-135)
parataxis(gained-139, remember-136)
advmod(remember-136, rightly-137)
dep(won-118, gained-139)
conj_and(wished-128, gained-139)
prep_at(gained-139, length-141)
det(king-143, the-142)
poss(daughter-145, king-143)
dep(won-118, daughter-145)
prep_to(daughter-145, boot-147)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (DT a) (JJ long) (NN time)))
      (NP (NNP Willie))
      (VP (VBD had) (RB not)
        (VP (VBN uttered)
          (NP (DT a) (JJ single) (NN exclamation)))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (JJ old) (NN woman))
          (VP (VBD looked)
            (PRT (RP up))
            (, ,)
            (S
              (VP (VBG fancying)
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (MD must)
                      (VP (VB be)
                        (ADJP (RB asleep)))))))))))
      (, ,)
      (NP (PRP she))
      (VP
        (VP (VBD saw))
        (, ,)
        (VP
          (PP (TO to)
            (NP (PRP$ her) (NN disappointment)))
          (, ,)
          (NP
            (NP (DT a) (NN cloud))
            (PP (IN upon)
              (NP (PRP$ his) (NN face)))))
        (: --)
        (S
          (VP (VBG amounting)
            (PP (TO to)
              (NP (DT a) (NN frown)))))))
    (. .)))

det(time-4, a-2)
amod(time-4, long-3)
prep_for(uttered-8, time-4)
nsubj(uttered-8, Willie-5)
aux(uttered-8, had-6)
neg(uttered-8, not-7)
root(ROOT-0, uttered-8)
det(exclamation-11, a-9)
amod(exclamation-11, single-10)
dobj(uttered-8, exclamation-11)
advmod(looked-18, when-14)
det(woman-17, the-15)
amod(woman-17, old-16)
nsubj(looked-18, woman-17)
advcl(saw-28, looked-18)
prt(looked-18, up-19)
xcomp(looked-18, fancying-21)
nsubj(asleep-25, he-22)
aux(asleep-25, must-23)
cop(asleep-25, be-24)
ccomp(fancying-21, asleep-25)
nsubj(saw-28, she-27)
conj_and(uttered-8, saw-28)
poss(disappointment-32, her-31)
prep_to(cloud-35, disappointment-32)
det(cloud-35, a-34)
dep(saw-28, cloud-35)
poss(face-38, his-37)
prep_upon(cloud-35, face-38)
parataxis(saw-28, amounting-40)
det(frown-43, a-42)
prep_to(amounting-40, frown-43)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (DT the) (NN matter))
        (PP (IN with)
          (NP
            (NP (PRP you))
            (, ,)
            (NP
              (NP (NNP Willie))
              (, ,)
              (NP (PRP$ my) (NN chick)))))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, 's-3)
det(matter-5, the-4)
nsubj(What-2, matter-5)
prep_with(matter-5, you-7)
appos(you-7, Willie-9)
poss(chick-12, my-11)
appos(Willie-9, chick-12)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, she-1)
root(ROOT-0, asked-2)

(ROOT
  (S (`` ``)
    (ADVP (RB Have))
    (NP (PRP you))
    (VP (VBD got)
      (NP (DT a) (NN headache)))
    (. ?) ('' '')))

advmod(got-4, Have-2)
nsubj(got-4, you-3)
root(ROOT-0, got-4)
det(headache-6, a-5)
dobj(got-4, headache-6)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (S
        (VP (VB thank)
          (NP
            (NP (PRP you))
            (, ,)
            (NP (NNP Mrs) (NNP Wilson))
            (, ,))))
      ('' '')
      (VP (VBD answered)
        (NP (NNP Willie))))
    (: ;) (`` ``)
    (S (CC but)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB like)
          (NP (DT that) (NN story))
          (ADVP (IN at) (DT all)))))
    (. .) ('' '')))

discourse(answered-11, No-2)
ccomp(answered-11, thank-4)
csubj(answered-11, thank-4)
dobj(thank-4, you-5)
nn(Wilson-8, Mrs-7)
appos(you-5, Wilson-8)
root(ROOT-0, answered-11)
dobj(answered-11, Willie-12)
cc(like-19, but-15)
nsubj(like-19, I-16)
aux(like-19, do-17)
neg(like-19, n't-18)
parataxis(answered-11, like-19)
det(story-21, that-20)
dobj(like-19, story-21)
advmod(like-19, at-22)
pobj(at-22, all-23)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sorry)
        (WHPP (IN for)
          (WHNP (WDT that)))))
    (. .)))

nsubj(sorry-4, I-2)
cop(sorry-4, 'm-3)
root(ROOT-0, sorry-4)
prep_for(sorry-4, that-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ sure)
                  (S
                    (VP (TO to)
                      (VP (VB please)
                        (NP (PRP you))
                        (NP (DT this) (NN time))))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (CD one))
          (SBAR
            (S
              (NP (PRP I))
              (ADVP (RB never))
              (VP (VBD told)
                (NP (PRP you))
                (ADVP (RB before))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP I))
                    (VP (VBD had)
                      (ADVP (RB quite))
                      (VP (VBN forgotten)
                        (S
                          (NP (PRP it))
                          (NP (PRP myself))))))))
              (PP (IN till)
                (NP (DT this) (JJ very) (NN afternoon))))))))
    (. .)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(sure-6, I-3)
nsubj(please-8, I-3)
aux(sure-6, should-4)
cop(sure-6, be-5)
ccomp(thought-2, sure-6)
aux(please-8, to-7)
xcomp(sure-6, please-8)
iobj(please-8, you-9)
det(time-11, this-10)
dobj(please-8, time-11)
nsubj(one-15, it-13)
cop(one-15, is-14)
parataxis(thought-2, one-15)
nsubj(told-18, I-16)
neg(told-18, never-17)
rcmod(one-15, told-18)
dobj(told-18, you-19)
advmod(told-18, before-20)
mark(forgotten-26, for-22)
nsubj(forgotten-26, I-23)
aux(forgotten-26, had-24)
advmod(forgotten-26, quite-25)
advcl(told-18, forgotten-26)
nsubj(myself-28, it-27)
xcomp(forgotten-26, myself-28)
det(afternoon-32, this-30)
amod(afternoon-32, very-31)
prep_till(told-18, afternoon-32)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do) (RB n't)
      (NP (PRP you))
      (VP (VB like)
        (NP (PRP it))))
    (. ?) ('' '')))

advmod(like-5, Why-1)
aux(like-5, do-2)
neg(like-5, n't-3)
nsubj(like-5, you-4)
root(ROOT-0, like-5)
dobj(like-5, it-6)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (NP (DT a)))))
    (VP (VBP cheat))
    (. .)))

mark(a-5, Because-2)
nsubj(a-5, he-3)
cop(a-5, was-4)
csubj(cheat-6, a-5)
root(ROOT-0, cheat-6)

(ROOT
  (S
    (S
      (S
        (ADJP (JJ _)))
      (NP (PRP He))
      (ADVP (RB _))
      (VP (MD could) (RB n't)
        (VP (VB do)
          (NP (DT the) (NNS things)))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADVP (RB only))
        (NP
          (NP (DT the) (NN fairy) (POS 's))
          (NN wand)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD did)
                (NP (PRP them))))))))
    (. .) ('' '')))

dep(do-6, _-1)
nsubj(do-6, He-2)
advmod(do-6, _-3)
aux(do-6, could-4)
neg(do-6, n't-5)
root(ROOT-0, do-6)
det(things-8, the-7)
dobj(do-6, things-8)
nsubj(wand-16, it-10)
cop(wand-16, was-11)
advmod(wand-16, only-12)
det(fairy-14, the-13)
poss(wand-16, fairy-14)
nsubj(did-18, fairy-14)
parataxis(do-6, wand-16)
rcmod(fairy-14, did-18)
ccomp(wand-16, did-18)
dobj(did-18, them-19)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP he))
    (VP
      (VP (VBD was)
        (NP (PDT such) (DT a) (JJ good) (NN lad)))
      (, ,)
      (CC and)
      (VP (VBD had)
        (VP (VBN been)
          (ADJP (RB so) (JJ kind)
            (PP (TO to)
              (NP (DT the) (NN fairy)))))))
    (. .) ('' '')))

nsubj(lad-8, he-3)
nsubj(kind-14, he-3)
cop(lad-8, was-4)
predet(lad-8, such-5)
det(lad-8, a-6)
amod(lad-8, good-7)
root(ROOT-0, lad-8)
aux(kind-14, had-11)
cop(kind-14, been-12)
advmod(kind-14, so-13)
conj_and(lad-8, kind-14)
det(fairy-17, the-16)
prep_to(kind-14, fairy-17)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ makes)
      (NP (DT no) (NN difference)))
    (. .)))

nsubj(makes-3, That-2)
root(ROOT-0, makes-3)
neg(difference-5, no-4)
dobj(makes-3, difference-5)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB _))
    (VP (VBD was) (RB n't)
      (ADJP (RB _) (JJ good)))
    (. .)))

nsubj(good-6, He-1)
advmod(good-6, _-2)
cop(good-6, was-3)
neg(good-6, n't-4)
advmod(good-6, _-5)
root(ROOT-0, good-6)

(ROOT
  (S
    (S (CC And)
      (NP (DT the) (NN fairy))
      (VP (VBD was) (RB n't)
        (ADJP (JJ good) (RB either))))
    (, ,)
    (CC or)
    (S
      (NP (PRP she))
      (VP (MD would) (RB n't)
        (VP (VB have)
          (VP (VBN set)
            (S
              (NP (PRP him))
              (VP (TO to)
                (VP (VB do)
                  (NP (JJ such) (JJ wicked) (NNS things)))))))))
    (. .) ('' '')))

det(fairy-3, the-2)
nsubj(good-6, fairy-3)
cop(good-6, was-4)
neg(good-6, n't-5)
root(ROOT-0, good-6)
advmod(good-6, either-7)
nsubj(set-14, she-10)
aux(set-14, would-11)
neg(set-14, n't-12)
aux(set-14, have-13)
conj_or(good-6, set-14)
dobj(set-14, him-15)
nsubj(do-17, him-15)
aux(do-17, to-16)
xcomp(set-14, do-17)
amod(things-20, such-18)
amod(things-20, wicked-19)
dobj(do-17, things-20)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (VBD were) (RB n't)
      (NP (JJ wicked) (NNS things)))
    (. .)))

nsubj(things-6, They-2)
cop(things-6, were-3)
neg(things-6, n't-4)
amod(things-6, wicked-5)
root(ROOT-0, things-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (ADJP (RB all) (JJ first-rate)
        (PRN (: --)
          (NP
            (NP (NN everything))
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (VBD made)))))
          (: --))
        (SBAR
          (ADVP (RB better))
          (IN than)
          (S
            (NP (DT any) (NN one) (RB else))
            (VP (MD could)
              (VP (VB make)
                (NP (PRP them))))))))
    (. .) ('' '')))

nsubj(first-rate-4, They-1)
cop(first-rate-4, were-2)
advmod(first-rate-4, all-3)
root(ROOT-0, first-rate-4)
dep(first-rate-4, everything-6)
mark(made-9, that-7)
nsubj(made-9, he-8)
dep(everything-6, made-9)
advmod(make-17, better-11)
mark(make-17, than-12)
det(one-14, any-13)
nsubj(make-17, one-14)
advmod(one-14, else-15)
aux(make-17, could-16)
ccomp(first-rate-4, make-17)
dobj(make-17, them-18)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP he))
    (VP (VBD did) (RB n't)
      (VP (VB make)
        (NP (PRP them))))
    (. .)))

cc(make-6, But-2)
nsubj(make-6, he-3)
aux(make-6, did-4)
neg(make-6, n't-5)
root(ROOT-0, make-6)
dobj(make-6, them-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was) (RB n't)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT those) (JJ poor) (NNS fellows))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD cheated)
                  (SBAR (IN that)
                    (S
                      (VP (VBD was) (RB n't)
                        (NP (DT a) (JJR better) (NN man))
                        (PP (IN than)
                          (NP (PRP he)))))))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(was-2, n't-3)
nsubj(was-2, one-4)
det(fellows-8, those-6)
amod(fellows-8, poor-7)
prep_of(one-4, fellows-8)
mark(man-16, fellows-8)
nsubj(cheated-10, he-9)
rcmod(fellows-8, cheated-10)
cop(man-16, was-12)
neg(man-16, n't-13)
det(man-16, a-14)
amod(man-16, better-15)
ccomp(cheated-10, man-16)
prep_than(man-16, he-18)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJS worst))
        (PP (IN of)
          (NP (PRP them))))
      (VP (MD could)
        (VP (VB do)
          (NP (NN something))
          (PP (IN with)
            (NP (PRP$ his) (JJ own) (NNS hands))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB believe)
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB do)
                  (NP (NN anything))
                  (, ,)
                  (SBAR (IN for)
                    (S
                      (SBAR (IN if)
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (ADVP (RB ever))
                            (VP (VBN tried)))))
                      (NP (PRP he))
                      (VP (MD would)
                        (VP (VB have)
                          (ADJP (VBN hated)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (NP (PDT such) (DT a) (NN sneak)))))))))))))))))
    (. .)))

det(worst-2, The-1)
nsubj(do-6, worst-2)
prep_of(worst-2, them-4)
aux(do-6, could-5)
root(ROOT-0, do-6)
dobj(do-6, something-7)
poss(hands-11, his-9)
amod(hands-11, own-10)
prep_with(do-6, hands-11)
nsubj(believe-17, I-14)
aux(believe-17, do-15)
neg(believe-17, n't-16)
conj_and(do-6, believe-17)
nsubj(do-20, he-18)
aux(do-20, could-19)
ccomp(believe-17, do-20)
dobj(do-20, anything-21)
mark(hated-32, for-23)
mark(tried-28, if-24)
nsubj(tried-28, he-25)
aux(tried-28, had-26)
advmod(tried-28, ever-27)
advcl(hated-32, tried-28)
nsubj(hated-32, he-29)
nsubj(sneak-37, he-29)
aux(hated-32, would-30)
dep(hated-32, have-31)
advcl(do-20, hated-32)
aux(sneak-37, to-33)
cop(sneak-37, be-34)
predet(sneak-37, such-35)
det(sneak-37, a-36)
xcomp(hated-32, sneak-37)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD cheated)
      (NP
        (NP
          (NP (DT the) (NN king))
          (, ,)
          (ADVP (RB too)))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (NNS princess))
          (, ,)
          (CC and)
          (NP (NN everybody)))))
    (. .)))

nsubj(cheated-2, He-1)
root(ROOT-0, cheated-2)
det(king-4, the-3)
dobj(cheated-2, king-4)
advmod(king-4, too-6)
det(princess-10, the-9)
dobj(cheated-2, princess-10)
conj_and(king-4, princess-10)
conj_and(king-4, everybody-13)
conj_and(princess-10, everybody-13)

(ROOT
  (INTJ (UH Oh) (. !)))

root(ROOT-0, Oh-1)

(ROOT
  (SQ (MD should) (RB n't)
    (NP (PRP I))
    (VP (VB like)
      (S
        (VP
          (VP (TO to)
            (VP (VB have)
              (VP (VBN been)
                (ADVP (RB there)))))
          (, ,)
          (CC and)
          (VP (TO to)
            (VP (VB have)
              (VP (VBN beaten)
                (NP
                  (NP (PRP him))
                  (ADJP (JJ wand)
                    (CC and)
                    (DT all)))))))))
    (. !)))

aux(like-4, should-1)
neg(like-4, n't-2)
nsubj(like-4, I-3)
root(ROOT-0, like-4)
aux(been-7, to-5)
aux(been-7, have-6)
ccomp(like-4, been-7)
advmod(been-7, there-8)
aux(beaten-13, to-11)
aux(beaten-13, have-12)
ccomp(like-4, beaten-13)
conj_and(been-7, beaten-13)
dobj(beaten-13, him-14)
amod(him-14, wand-15)
amod(him-14, all-17)
conj_and(wand-15, all-17)

(ROOT
  (S (IN For)
    (NP (NN somebody))
    (VP (MD might)
      (VP (VB have)
        (VP (VBN been)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP (DT the) (NNS things))
                  (ADVP (RBR better))
                  (ADVP (RB still))
                  (, ,)
                  (SBAR (IN if)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (ADVP (RB only))
                        (VP (VBN known)
                          (NP (WRB how)))))))))))))
    (. .) ('' '')))

dep(able-6, For-1)
nsubj(able-6, somebody-2)
nsubj(make-8, somebody-2)
aux(able-6, might-3)
aux(able-6, have-4)
cop(able-6, been-5)
root(ROOT-0, able-6)
aux(make-8, to-7)
xcomp(able-6, make-8)
det(things-10, the-9)
dobj(make-8, things-10)
advmod(make-8, better-11)
advmod(make-8, still-12)
mark(known-18, if-14)
nsubj(known-18, he-15)
aux(known-18, had-16)
advmod(known-18, only-17)
advcl(make-8, known-18)
dobj(known-18, how-19)

(ROOT
  (S
    (NP (NNP Mrs) (NNP Wilson))
    (VP (VBD was)
      (VP (VBN disappointed)
        (PRN (: --)
          (ADVP (RB perhaps))
          (ADVP
            (ADVP
              (NP (DT a) (RB little))
              (RB ashamed))
            (SBAR (IN that)
              (S
                (NP (PRP she))
                (VP (VBD had) (RB not)
                  (VP (VBN thought)
                    (PP (IN of)
                      (NP (DT this)))))))))
        (SBAR (IN before)
          (PRN (: ;)
            (S
              (VP (VB anyhow)
                (S
                  (S
                    (NP (PRP she))
                    (VP (VBD grew)
                      (NP (NN cross))))
                  (: ;)
                  (CC and)
                  (S
                    (SBAR (IN because)
                      (S
                        (NP (PRP she))
                        (VP (VBD was)
                          (NP (NN cross)))))
                    (, ,)
                    (NP (PRP she))
                    (VP
                      (VP (VBD grew)
                        (S
                          (ADJP (JJ unfair))))
                      (, ,)
                      (CC and)
                      (VP (VBD said)
                        (PP (TO to)
                          (NP (NNP Willie)))))))))
            (: --))
          (`` ``)
          (S
            (NP (PRP You))
            (VP (VBP think)
              (NP
                (NP (DT a) (JJ great) (NN deal))
                (PP (IN of)
                  (NP
                    (NP (PRP yourself))
                    (, ,)
                    (NP (NNP Master) (NNP Willie))))))))))
    (. !)))

nn(Wilson-2, Mrs-1)
nsubjpass(disappointed-4, Wilson-2)
auxpass(disappointed-4, was-3)
root(ROOT-0, disappointed-4)
dep(disappointed-4, perhaps-6)
det(little-8, a-7)
npadvmod(ashamed-9, little-8)
dep(perhaps-6, ashamed-9)
mark(thought-14, that-10)
nsubj(thought-14, she-11)
aux(thought-14, had-12)
neg(thought-14, not-13)
advcl(ashamed-9, thought-14)
ccomp(ashamed-9, thought-14)
prep_of(thought-14, this-16)
mark(think-41, before-17)
dep(think-41, anyhow-19)
nsubj(grew-21, she-20)
dep(anyhow-19, grew-21)
dobj(grew-21, cross-22)
mark(cross-28, because-25)
nsubj(cross-28, she-26)
cop(cross-28, was-27)
advcl(grew-31, cross-28)
nsubj(grew-31, she-30)
nsubj(said-35, she-30)
dep(anyhow-19, grew-31)
conj_and(grew-21, grew-31)
acomp(grew-31, unfair-32)
conj_and(grew-21, said-35)
conj_and(grew-31, said-35)
prep_to(said-35, Willie-37)
nsubj(think-41, You-40)
advcl(disappointed-4, think-41)
det(deal-44, a-42)
amod(deal-44, great-43)
dobj(think-41, deal-44)
prep_of(deal-44, yourself-46)
nn(Willie-49, Master-48)
appos(yourself-46, Willie-49)

(ROOT
  (SBARQ
    (ADVP (RB Pray))
    (WHNP (WP what))
    (SQ
      (VP (MD could)
        (S
          (ADJP
            (NP (DT those))
            (JJ idle))
          (SBAR
            (S
              (NP
                (NP (JJ little) (NNS hands))
                (PP (IN of)
                  (NP (NNP yours))))
              (VP
                (VP (VBP do))
                (, ,)
                (SBAR (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VBD were)
                      (S
                        (VP (TO to)
                          (VP (VB try)))))))))))))
    (. ?) ('' '')))

advmod(could-3, Pray-1)
nsubj(could-3, what-2)
root(ROOT-0, could-3)
npadvmod(idle-5, those-4)
dep(do-10, idle-5)
amod(hands-7, little-6)
nsubj(do-10, hands-7)
prep_of(hands-7, yours-9)
dep(could-3, do-10)
mark(were-14, if-12)
nsubj(were-14, you-13)
nsubj(try-16, you-13)
advcl(do-10, were-14)
aux(try-16, to-15)
xcomp(were-14, try-16)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP I))
          (VP (VBP have) (RB n't)
            (VP (VBN tried))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
ccomp(answered-14, know-5)
mark(tried-11, for-7)
nsubj(tried-11, I-8)
aux(tried-11, have-9)
neg(tried-11, n't-10)
dep(know-5, tried-11)
root(ROOT-0, answered-14)
nsubj(answered-14, Willie-15)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN pity))
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD should) (RB n't)))))
      (PRN (, ,) ('' '')
        (S
          (NP (PRP she))
          (VP (VBD rejoined)))
        (, ,) (`` ``))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (PRP they))
                (VP (MD would)
                  (VP (VB turn)
                    (PRT (RP out))
                    (ADJP (RB so) (RB very) (JJ clever))))))))))
    (. .) ('' '')))

nsubj(pity-5, It-2)
cop(pity-5, 's-3)
det(pity-5, a-4)
root(ROOT-0, pity-5)
nsubj(should-7, you-6)
rcmod(pity-5, should-7)
neg(should-7, n't-8)
nsubj(rejoined-12, she-11)
parataxis(pity-5, rejoined-12)
mark(think-17, if-15)
nsubj(think-17, you-16)
advcl(pity-5, think-17)
nsubj(turn-20, they-18)
aux(turn-20, would-19)
ccomp(think-17, turn-20)
prt(turn-20, out-21)
advmod(clever-24, so-22)
advmod(clever-24, very-23)
acomp(turn-20, clever-24)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD did) (RB n't)
        (VP (VB mean)
          (NP (NN anything))))
      (CC but)
      (VP (VBZ crossness)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP she))
            (VP (VBD said)
              (NP (DT this))
              (PRN (: --)
                (PP (IN for)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP
                        (ADVP (RB probably))
                        (NP (DT a) (JJ severe) (JJ rheumatic) (NN twinge))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (ADVP (RB just))
                            (VP
                              (ADVP (RB then))
                              (VBN passed)
                              (PP (IN through)
                                (NP (PRP$ her) (NN shoulder)))))))
                      (VP (VBD was)
                        (ADVP (RB also))
                        (ADVP (RB partly)))))))
              (S
                (VP (TO to)
                  (VP (VB blame)))))))))
    (. .)))

nsubj(mean-4, She-1)
nsubj(crossness-7, She-1)
aux(mean-4, did-2)
neg(mean-4, n't-3)
root(ROOT-0, mean-4)
dobj(mean-4, anything-5)
conj_but(mean-4, crossness-7)
advmod(said-10, when-8)
nsubj(said-10, she-9)
advcl(crossness-7, said-10)
dobj(said-10, this-11)
dep(said-10, for-13)
dobj(was-27, which-14)
advmod(twinge-19, probably-15)
det(twinge-19, a-16)
amod(twinge-19, severe-17)
amod(twinge-19, rheumatic-18)
nsubj(passed-23, twinge-19)
nsubj(was-27, twinge-19)
advmod(passed-23, just-21)
advmod(passed-23, then-22)
rcmod(twinge-19, passed-23)
poss(shoulder-26, her-25)
prep_through(passed-23, shoulder-26)
pcomp(for-13, was-27)
advmod(was-27, also-28)
advmod(was-27, partly-29)
aux(blame-31, to-30)
vmod(said-10, blame-31)

(ROOT
  (S (CC But)
    (NP (NNP Willie))
    (VP
      (VP (VBD took)
        (NP (PRP her))
        (ADVP (RB up) (RB quite) (RB seriously)))
      (, ,)
      (CC and)
      (VP (VBD asked)
        (PP (IN in)
          (NP
            (NP (DT a) (NN tone))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD showed)
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD wanted)
                        (SBAR
                          (S
                            (NP (PRP it))
                            (VP (VBD accounted)
                              (PP (IN for))))))))))))))
      (: --) (`` ``)
      (ADVP (WRB Why))
      (VP (VBP have) (RB n't)
        (ADVP
          (NP (CD I))
          (RB ever))
        (VP (VBN done)
          (NP
            (NP (NN anything))
            (, ,)
            (NP (NNP Mrs) (NNP Wilson))))))
    (. ?) ('' '')))

nsubj(took-3, Willie-2)
nsubj(asked-10, Willie-2)
root(ROOT-0, took-3)
dobj(took-3, her-4)
advmod(seriously-7, up-5)
advmod(seriously-7, quite-6)
advmod(took-3, seriously-7)
conj_and(took-3, asked-10)
det(tone-13, a-12)
prep_in(asked-10, tone-13)
nsubj(showed-15, tone-13)
rcmod(tone-13, showed-15)
nsubj(wanted-17, he-16)
ccomp(showed-15, wanted-17)
nsubj(accounted-19, it-18)
ccomp(wanted-17, accounted-19)
prep(accounted-19, for-20)
advmod(took-3, Why-23)
conj_and(took-3, Why-23)
aux(done-28, have-24)
neg(done-28, n't-25)
npadvmod(ever-27, I-26)
advmod(done-28, ever-27)
dep(took-3, done-28)
dobj(done-28, anything-29)
nn(Wilson-32, Mrs-31)
appos(anything-29, Wilson-32)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB know)
              (ADVP (IN that) (JJS best))
              (NP (PRP yourself)))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP
      (VP (VBD answered))
      (, ,)
      (ADVP (RB still))
      (VP (VBP cross)))
    (. .)))

nsubj(ought-3, You-2)
nsubj(know-5, You-2)
ccomp(answered-12, ought-3)
aux(know-5, to-4)
xcomp(ought-3, know-5)
advmod(know-5, that-6)
dep(that-6, best-7)
dobj(know-5, yourself-8)
nsubj(answered-12, she-11)
root(ROOT-0, answered-12)
advmod(cross-15, still-14)
dep(answered-12, cross-15)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB like)
              (NP (NN work)))))))
    (. .)))

nsubj(suppose-3, I-2)
root(ROOT-0, suppose-3)
mark(like-8, because-4)
nsubj(like-8, you-5)
aux(like-8, do-6)
neg(like-8, n't-7)
advcl(suppose-3, like-8)
dobj(like-8, work-9)

(ROOT
  (S
    (S
      (NP
        (NP (PRP$ Your) (JJ good) (NN father)
          (CC and)
          (NN mother) (NN work))
        (ADJP (RB very) (JJ hard))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)))
    (. .)))

poss(father-3, Your-1)
amod(father-3, good-2)
ccomp(sure-12, father-3)
nn(work-6, mother-5)
conj_and(father-3, work-6)
ccomp(sure-12, work-6)
advmod(hard-8, very-7)
amod(father-3, hard-8)
nsubj(sure-12, I-10)
cop(sure-12, 'm-11)
root(ROOT-0, sure-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN shame))
        (PP (IN of)
          (NP (PRP you)))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (RB so) (JJ idle)))))))
    (. .) ('' '')))

nsubj(shame-4, It-1)
cop(shame-4, 's-2)
det(shame-4, a-3)
root(ROOT-0, shame-4)
prep_of(shame-4, you-6)
aux(idle-10, to-7)
cop(idle-10, be-8)
advmod(idle-10, so-9)
vmod(shame-4, idle-10)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (ADJP (RB rather) (JJ hard))
      (PP (IN on)
        (NP
          (NP (DT a) (NN boy))
          (PP (IN of)
            (NP (CD seven)))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (NNP Willie))
          (VP (VBD was)
            (ADVP (DT no) (RBR more))
            (ADVP (RB then))))))
    (. .)))

nsubj(hard-4, This-1)
cop(hard-4, was-2)
advmod(hard-4, rather-3)
root(ROOT-0, hard-4)
det(boy-7, a-6)
prep_on(hard-4, boy-7)
prep_of(boy-7, seven-9)
mark(was-13, for-11)
nsubj(was-13, Willie-12)
advcl(hard-4, was-13)
neg(more-15, no-14)
advmod(was-13, more-15)
advmod(was-13, then-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD made)
      (SBAR
        (S
          (NP (PRP him))
          (VP (VBP look)
            (NP
              (NP
                (NP (RB very) (NN grave) (RB indeed))
                (PRN (, ,)
                  (SBAR (IN if)
                    (FRAG (RB not)
                      (ADJP (JJ unhappy))))
                  (, ,)))
              (PP (IN for)
                (NP (DT a) (JJ little) (NN while))))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (VBD sat)
                  (S
                    (VP (VBG turning)
                      (PRT (RP over))
                      (NP
                        (NP (DT the) (NN thing))
                        (PP (IN in)
                          (NP (PRP$ his) (NN mind)))))))))))))
    (. .)))

nsubj(made-2, It-1)
root(ROOT-0, made-2)
nsubj(look-4, him-3)
ccomp(made-2, look-4)
advmod(grave-6, very-5)
dobj(look-4, grave-6)
advmod(grave-6, indeed-7)
mark(not-10, if-9)
dep(grave-6, not-10)
dep(not-10, unhappy-11)
det(while-16, a-14)
amod(while-16, little-15)
prep_for(grave-6, while-16)
mark(sat-20, as-18)
nsubj(sat-20, he-19)
advcl(look-4, sat-20)
xcomp(sat-20, turning-21)
prt(turning-21, over-22)
det(thing-24, the-23)
dobj(turning-21, thing-24)
poss(mind-27, his-26)
prep_in(thing-24, mind-27)

(ROOT
  (X (`` ``)
    (NP
      (SQ (VBZ Is)
        (NP (PRP it))
        (ADJP (JJ wrong) (TO to)))
      (VP (VB play)
        (PRT (RP about))))
    (, ,)
    (NP
      (NP (NNP Mrs))
      (VP (VBN Wilson)))
    (. ?) ('' '')))

cop(wrong-4, Is-2)
nsubj(wrong-4, it-3)
dep(play-6, wrong-4)
dep(wrong-4, to-5)
dep(Mrs-9, play-6)
prt(play-6, about-7)
root(ROOT-0, Mrs-9)
vmod(Mrs-9, Wilson-10)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked) (, ,)
      (PP (IN after)
        (NP
          (NP (DT a) (NN pause))
          (PP (IN of)
            (NP (JJ considerable) (NN duration))))))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)
det(pause-6, a-5)
prep_after(asked-2, pause-6)
amod(duration-9, considerable-8)
prep_of(pause-6, duration-9)

(ROOT
  (S
    (INTJ (`` ``) (UH No))
    (, ,)
    (ADVP (RB indeed))
    (, ,)
    (NP (PRP$ my) (NN dear))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD answered)
      (SBAR
        (S (: ;)
          (PP (IN for)
            (PP (IN during)
              (NP (DT the) (NN pause))))
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN begun)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ sorry)
                      (PP (IN for)
                        (S
                          (VP (VBG having)
                            (VP (VBN spoken)
                              (ADJP (RB so) (RB roughly)
                                (PP (TO to)
                                  (NP (PRP$ her) (JJ little) (NN darling)))))))))))))))))
    (. .)))

discourse(answered-11, No-2)
advmod(answered-11, indeed-4)
poss(dear-7, my-6)
nsubj(answered-11, dear-7)
nsubj(answered-11, she-10)
root(ROOT-0, answered-11)
prep(begun-19, for-13)
pcomp(for-13, during-14)
det(pause-16, the-15)
pobj(during-14, pause-16)
nsubj(begun-19, she-17)
nsubj(sorry-22, she-17)
aux(begun-19, had-18)
ccomp(answered-11, begun-19)
aux(sorry-22, to-20)
cop(sorry-22, be-21)
xcomp(begun-19, sorry-22)
aux(spoken-25, having-24)
prepc_for(sorry-22, spoken-25)
advmod(roughly-27, so-26)
acomp(spoken-25, roughly-27)
poss(darling-31, her-29)
amod(darling-31, little-30)
prep_to(roughly-27, darling-31)

(ROOT
  (S (`` ``)
    (NP (JJ Does) (NN everybody))
    (VP (VBP work))
    (. ?) ('' '')))

amod(everybody-3, Does-2)
nsubj(work-4, everybody-3)
root(ROOT-0, work-4)

(ROOT
  (S (`` ``)
    (NP
      (NP (NN Everybody))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ 's)
            (UCP
              (ADJP (JJ worth) (NN anything))
              (, ,)
              (CC and)
              (VP (VBZ is)
                (ADJP (JJ old) (RB enough))))))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD added))
    (. .)))

nsubj(anything-6, Everybody-2)
nsubj(old-10, Everybody-2)
nsubj(added-15, Everybody-2)
cop(anything-6, 's-4)
dep(anything-6, worth-5)
rcmod(Everybody-2, anything-6)
cop(old-10, is-9)
rcmod(Everybody-2, old-10)
conj_and(anything-6, old-10)
advmod(old-10, enough-11)
nsubj(added-15, she-14)
root(ROOT-0, added-15)

(ROOT
  (S (`` ``)
    (NP (NNP Does) (NNP God))
    (VP (VBP work))
    (. ?) ('' '')))

nn(God-3, Does-2)
nsubj(work-4, God-3)
root(ROOT-0, work-4)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked) (, ,)
      (PP (IN after)
        (NP (DT another) (NN pause)))
      (, ,)
      (PP (IN in)
        (NP (DT a) (JJ low) (NN voice))))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)
det(pause-6, another-5)
prep_after(asked-2, pause-6)
det(voice-11, a-9)
amod(voice-11, low-10)
prep_in(asked-2, voice-11)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH No))
    (, ,)
    (NP (NN child))
    (. .)))

discourse(child-4, No-2)
root(ROOT-0, child-4)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD should)
      (NP (PRP He))
      (VP (VB work)
        (PP (IN for))))
    (. ?) ('' '')))

prep_for(work-4, What-1)
aux(work-4, should-2)
nsubj(work-4, He-3)
root(ROOT-0, work-4)

(ROOT
  (SINV (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (NN everybody))
          (VP (VBZ works)
            (SBAR (IN that)
              (S
                (VP (VBZ is)
                  (ADJP
                    (ADJP (JJ good))
                    (CC and)
                    (ADJP (JJ old) (NN enough)))))))))
      (, ,) (RB then)
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (NNP God))
            (VP (MD must)
              (VP (VB work)))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (. .)))

mark(works-4, If-2)
nsubj(works-4, everybody-3)
advcl(think-14, works-4)
mark(good-7, that-5)
cop(good-7, is-6)
ccomp(works-4, good-7)
dep(enough-10, old-9)
ccomp(works-4, enough-10)
conj_and(good-7, enough-10)
advmod(I-13, then-12)
nsubj(think-14, I-13)
ccomp(answered-20, think-14)
nsubj(work-17, God-15)
aux(work-17, must-16)
ccomp(think-14, work-17)
root(ROOT-0, answered-20)
nsubj(answered-20, Willie-21)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB ask)
        (NP (PRP$ my) (NN papa))))
    (. .)))

cc(ask-5, But-2)
nsubj(ask-5, I-3)
aux(ask-5, will-4)
root(ROOT-0, ask-5)
poss(papa-7, my-6)
dobj(ask-5, papa-7)

(ROOT
  (FRAG
    (S
      (VP (VBG Am)
        (S
          (NP (PRP I))
          (ADJP (JJ old) (NN enough)))))
    (. ?) ('' '')))

root(ROOT-0, Am-1)
nsubj(enough-4, I-2)
dep(enough-4, old-3)
xcomp(Am-1, enough-4)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP you))
      (VP (VBP 're) (RB not)
        (ADJP (JJ old) (RB enough)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (RB much))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD might)
        (VP (VB do)
          (NP (NN something)))))
    (. .) ('' '')))

discourse(old-7, Well-2)
nsubj(old-7, you-4)
nsubj(do-10, you-4)
cop(old-7, 're-5)
neg(old-7, not-6)
root(ROOT-0, old-7)
advmod(old-7, enough-8)
aux(do-10, to-9)
xcomp(old-7, do-10)
dobj(do-10, much-11)
nsubj(do-16, you-14)
aux(do-16, might-15)
conj_but(old-7, do-16)
dobj(do-16, something-17)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (MD could)
      (NP (PRP I))
      (VP (VB do)))
    (. ?)))

dobj(do-5, What-2)
aux(do-5, could-3)
nsubj(do-5, I-4)
root(ROOT-0, do-5)

(ROOT
  (SQ (MD Could)
    (NP (NNP I) (NNPS spin) (, ,) (NNP Mrs) (NNP Wilson))
    (. ?) ('' '')))

root(ROOT-0, Could-1)
nn(Wilson-6, I-2)
nn(Wilson-6, spin-3)
dep(Wilson-6, Mrs-5)
dep(Could-1, Wilson-6)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (NP
        (NP (NN child))
        (: ;)
        (NP (DT that)))
      (VP (VBZ 's) (RB not)
        (NP (DT an) (JJ easy) (NN thing)
          (S
            (VP (TO to)
              (VP (VB do)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD could)
        (VP (VB knit))))
    (. .) ('' '')))

discourse(thing-11, No-2)
nsubj(thing-11, child-4)
dep(child-4, that-6)
cop(thing-11, 's-7)
neg(thing-11, not-8)
det(thing-11, an-9)
amod(thing-11, easy-10)
root(ROOT-0, thing-11)
aux(do-13, to-12)
vmod(thing-11, do-13)
nsubj(knit-18, you-16)
aux(knit-18, could-17)
conj_but(thing-11, knit-18)

(ROOT
  (S (`` ``)
    (VP (VB Could)
      (NP (PRP I)))
    (. ?)))

root(ROOT-0, Could-2)
dobj(Could-2, I-3)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN good))
    (SQ (MD would)
      (NP (PRP it))
      (VP (VB do)))
    (. ?) ('' '')))

det(good-2, What-1)
dobj(do-5, good-2)
aux(do-5, would-3)
nsubj(do-5, it-4)
root(ROOT-0, do-5)

(ROOT
  (S (`` ``)
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP you))
    (VP (MD could)
      (VP (VB knit)
        (NP (PRP$ your) (NN mother))
        (NP
          (NP (DT a) (NN pair))
          (PP (IN of)
            (NP (NNS stockings))))))
    (. .) ('' '')))

discourse(knit-6, Why-2)
nsubj(knit-6, you-4)
aux(knit-6, could-5)
root(ROOT-0, knit-6)
poss(mother-8, your-7)
dep(knit-6, mother-8)
det(pair-10, a-9)
dobj(knit-6, pair-10)
prep_of(pair-10, stockings-12)

(ROOT
  (S (`` ``)
    (VP (VB Could)
      (NP (PRP I))
      (ADVP (RB though)))
    (. ?)))

root(ROOT-0, Could-2)
dobj(Could-2, I-3)
advmod(Could-2, though-4)

(ROOT
  (SQ (MD Will)
    (NP (PRP you))
    (VP (VBP teach)
      (NP
        (NP (PRP me))
        (, ,)
        (NP (NNP Mrs) (NNP Wilson))))
    (. ?) ('' '')))

aux(teach-3, Will-1)
nsubj(teach-3, you-2)
root(ROOT-0, teach-3)
dobj(teach-3, me-4)
nn(Wilson-7, Mrs-6)
appos(me-4, Wilson-7)

(ROOT
  (S
    (NP (NNP Mrs) (NNP Wilson))
    (ADVP (RB very) (RB readily))
    (VP (VBD promised) (, ,)
      (S
        (VP (VBG foreseeing)
          (SBAR (IN that) (IN so)
            (S
              (NP (PRP she))
              (VP (MD might)
                (VP (VB have)
                  (NP (DT a) (JJ good) (NN deal))
                  (PP
                    (PP (JJR more) (IN of)
                      (NP
                        (NP
                          (NP (DT the) (JJ little) (NN man) (POS 's))
                          (NN company))
                        (, ,)
                        (SBAR
                          (SBAR (IN if)
                            (S
                              (ADVP (RB indeed))
                              (NP (PRP he))
                              (VP (VBD was)
                                (PP (IN in)
                                  (NP (NN earnest))))))
                          (: ;)
                          (SBAR (IN for)
                            (S
                              (NP (PRP she))
                              (VP
                                (VP (VBD was)
                                  (ADJP (RB very) (JJ lonely)))
                                (, ,)
                                (CC and)
                                (VP (VBD was)
                                  (ADVP (RB never))
                                  (ADJP (RB so) (JJ happy)))))))))
                    (PP (IN as)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP he))
                          (VP (VBD was)
                            (PP (IN with)
                              (NP (PRP her)))))))))))))))
    (. .)))

nn(Wilson-2, Mrs-1)
nsubj(promised-5, Wilson-2)
advmod(readily-4, very-3)
advmod(promised-5, readily-4)
root(ROOT-0, promised-5)
xcomp(promised-5, foreseeing-7)
mark(have-12, that-8)
mark(have-12, so-9)
nsubj(have-12, she-10)
aux(have-12, might-11)
advcl(foreseeing-7, have-12)
ccomp(foreseeing-7, have-12)
det(deal-15, a-13)
amod(deal-15, good-14)
dobj(have-12, deal-15)
dep(have-12, more-16)
det(man-20, the-18)
amod(man-20, little-19)
poss(company-22, man-20)
prep_of(have-12, company-22)
mark(was-27, if-24)
advmod(was-27, indeed-25)
nsubj(was-27, he-26)
dep(company-22, was-27)
prep_in(was-27, earnest-29)
mark(lonely-35, for-31)
nsubj(lonely-35, she-32)
nsubj(happy-41, she-32)
cop(lonely-35, was-33)
advmod(lonely-35, very-34)
dep(was-27, lonely-35)
cop(happy-41, was-38)
neg(happy-41, never-39)
advmod(happy-41, so-40)
dep(was-27, happy-41)
conj_and(lonely-35, happy-41)
advmod(was-45, when-43)
nsubj(was-45, he-44)
prepc_as(have-12, was-45)
prep_with(was-45, her-47)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP she))
            (VP (MD would)
              (VP
                (VP (VB get)
                  (S
                    (NP (PRP him))
                    (NP (DT some) (NNS knitting-needles))))
                (PRN (: --)
                  (NP
                    (NP (NNS wires))
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP (VBD called)
                          (NP (PRP them))))))
                  (: --))
                (NP (DT that) (JJ very) (NN evening))))))))
    (: ;)
    (S
      (S
        (NP (PRP she))
        (VP (VBD had)
          (NP (DT some) (NN wool))))
      (, ,)
      (CC and)
      (S
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (VBD came)
              (NP (NN to-morrow)))))
        (, ,)
        (NP (PRP she))
        (VP (MD would)
          (ADVP (RB soon))
          (VP (VB see)
            (SBAR (IN whether)
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (ADJP
                    (ADJP (JJ old) (NN enough))
                    (CC and)
                    (ADJP (JJ clever) (RB enough)
                      (S
                        (VP (TO to)
                          (VP (VB learn)
                            (PP (TO to)
                              (ADJP (VBN knit)))))))))))))))
    (. .)))

nsubj(said-2, She-1)
root(ROOT-0, said-2)
nsubj(get-5, she-3)
aux(get-5, would-4)
ccomp(said-2, get-5)
nsubj(knitting-needles-8, him-6)
det(knitting-needles-8, some-7)
xcomp(get-5, knitting-needles-8)
dep(get-5, wires-10)
nsubj(called-12, she-11)
rcmod(wires-10, called-12)
dobj(called-12, them-13)
det(evening-17, that-15)
amod(evening-17, very-16)
tmod(get-5, evening-17)
nsubj(had-20, she-19)
parataxis(said-2, had-20)
det(wool-22, some-21)
dobj(had-20, wool-22)
mark(came-27, if-25)
nsubj(came-27, he-26)
advcl(see-33, came-27)
dobj(came-27, to-morrow-28)
nsubj(see-33, she-30)
aux(see-33, would-31)
advmod(see-33, soon-32)
parataxis(said-2, see-33)
conj_and(had-20, see-33)
mark(enough-38, whether-34)
nsubj(enough-38, he-35)
nsubj(clever-40, he-35)
nsubj(learn-43, he-35)
cop(enough-38, was-36)
dep(enough-38, old-37)
ccomp(see-33, enough-38)
ccomp(see-33, clever-40)
conj_and(enough-38, clever-40)
advmod(clever-40, enough-41)
aux(learn-43, to-42)
xcomp(clever-40, learn-43)
prep_to(learn-43, knit-45)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD advised)
        (SBAR
          (S
            (NP (PRP him))
            (, ,)
            (ADVP (RB however))
            (, ,)
            (VP (TO to)
              (VP (VB say)
                (NP
                  (NP (NN nothing))
                  (PP (IN about)
                    (NP (PRP it))))
                (PP (TO to)
                  (NP (PRP$ his) (NN mother)))
                (SBAR (IN till)
                  (S
                    (NP (PRP she))
                    (VP (VBD had)
                      (VP (VBN made)
                        (PRT (RP up))
                        (NP (PRP$ her) (NN mind))
                        (SBAR (IN whether)
                          (CC or)
                          (RB not)
                          (S
                            (NP (PRP he))
                            (VP (MD could)
                              (VP (VB learn)))))))))))))))
    (: ;)
    (S
      (SBAR (IN for) (IN if)
        (S
          (NP (PRP he))
          (VP (MD could))))
      (, ,)
      (ADVP (RB then))
      (NP (PRP he))
      (VP (MD might)
        (VP (VB surprise)
          (NP (PRP her))
          (PP (IN by)
            (S
              (VP (VBG taking)
                (NP
                  (NP (PRP$ her) (NN something))
                  (PP (IN of)
                    (NP (PRP$ his) (JJ own) (NN knitting))))
                (PRN (: --)
                  (ADVP (IN at) (JJS least))
                  (NP
                    (NP (DT a) (NN pair))
                    (PP (IN of)
                      (NP (NNS muffetees)))))
                (S
                  (VP (TO to)
                    (VP (VB keep)
                      (S
                        (NP (PRP$ her) (NNS wrists))
                        (ADJP (JJ warm)
                          (PP (IN in)
                            (NP (DT the) (NN winter))))))))))))))
    (. .)))

nsubj(advised-2, She-1)
root(ROOT-0, advised-2)
nsubj(say-8, him-3)
advmod(say-8, however-5)
aux(say-8, to-7)
ccomp(advised-2, say-8)
xcomp(advised-2, say-8)
dobj(say-8, nothing-9)
prep_about(nothing-9, it-11)
poss(mother-14, his-13)
prep_to(say-8, mother-14)
mark(made-18, till-15)
nsubj(made-18, she-16)
aux(made-18, had-17)
advcl(say-8, made-18)
prt(made-18, up-19)
poss(mind-21, her-20)
dobj(made-18, mind-21)
mark(learn-27, whether-22)
ccomp(made-18, not-24)
conj_or(learn-27, not-24)
nsubj(learn-27, he-25)
aux(learn-27, could-26)
ccomp(made-18, learn-27)
mark(could-32, for-29)
mark(could-32, if-30)
nsubj(could-32, he-31)
advcl(surprise-37, could-32)
advmod(he-35, then-34)
nsubj(surprise-37, he-35)
aux(surprise-37, might-36)
parataxis(advised-2, surprise-37)
dobj(surprise-37, her-38)
prepc_by(surprise-37, taking-40)
poss(something-42, her-41)
dobj(taking-40, something-42)
poss(knitting-46, his-44)
amod(knitting-46, own-45)
prep_of(something-42, knitting-46)
dep(pair-51, at-48)
pobj(at-48, least-49)
det(pair-51, a-50)
dep(taking-40, pair-51)
prep_of(pair-51, muffetees-53)
aux(keep-55, to-54)
vmod(taking-40, keep-55)
poss(wrists-57, her-56)
nsubj(warm-58, wrists-57)
xcomp(keep-55, warm-58)
det(winter-61, the-60)
prep_in(warm-58, winter-61)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD went)
      (NP (NN home) (NN solemn))
      (PP (IN with)
        (NP (PRP$ his) (NN secret))))
    (. .)))

nsubj(went-2, Willie-1)
root(ROOT-0, went-2)
nn(solemn-4, home-3)
dobj(went-2, solemn-4)
poss(secret-7, his-6)
prep_with(went-2, secret-7)

(ROOT
  (S
    (S
      (NP (DT The) (JJ next) (NN day))
      (NP (PRP he))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB learn))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN although)
        (S
          (NP (PRP$ his) (NNS fingers))
          (VP (VBD annoyed)
            (NP (PRP him))
            (PP
              (NP (DT a) (JJ good) (NN deal))
              (IN at)
              (ADJP (JJ first)))
            (PP (IN by)
              (S
                (VP (VBG refusing)
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (ADVP (RB exactly))
                        (SBAR (IN as)
                          (S
                            (NP (PRP he))
                            (VP (VBD wanted)
                              (NP (PRP them))))))))))))))
      (, ,)
      (NP (PRP they))
      (ADVP (RB soon))
      (VP (VBD became)
        (ADJP (RBR more) (JJ obedient))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN before)
        (S
          (NP (DT the) (JJ new) (NN year))
          (VP (VBD arrived))))
      (, ,)
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RB actually))
        (VP (VBN knitted)
          (NP
            (NP
              (NP (DT a) (NN pair))
              (PP (IN of)
                (NP (JJ warm)
                  (NP (JJ white) (NN lamb) (POS 's)))))
            (: -)
            (NP
              (NP (NN wool) (NNS stockings))
              (PP (IN for)
                (NP (PRP$ his) (NN mother))))))))
    (. .)))

det(day-3, The-1)
amod(day-3, next-2)
tmod(began-5, day-3)
nsubj(began-5, he-4)
nsubj(learn-7, he-4)
root(ROOT-0, began-5)
aux(learn-7, to-6)
xcomp(began-5, learn-7)
mark(annoyed-13, although-10)
poss(fingers-12, his-11)
nsubj(annoyed-13, fingers-12)
advcl(became-32, annoyed-13)
dobj(annoyed-13, him-14)
det(deal-17, a-15)
amod(deal-17, good-16)
npadvmod(annoyed-13, deal-17)
prep_at(annoyed-13, first-19)
prepc_by(annoyed-13, refusing-21)
aux(do-23, to-22)
xcomp(refusing-21, do-23)
advmod(do-23, exactly-24)
mark(wanted-27, as-25)
nsubj(wanted-27, he-26)
advcl(do-23, wanted-27)
dobj(wanted-27, them-28)
nsubj(became-32, they-30)
advmod(became-32, soon-31)
conj_and(began-5, became-32)
advmod(obedient-34, more-33)
acomp(became-32, obedient-34)
mark(arrived-41, before-37)
det(year-40, the-38)
amod(year-40, new-39)
nsubj(arrived-41, year-40)
advcl(knitted-46, arrived-41)
nsubj(knitted-46, he-43)
aux(knitted-46, had-44)
advmod(knitted-46, actually-45)
conj_and(began-5, knitted-46)
det(pair-48, a-47)
dobj(knitted-46, pair-48)
amod(lamb-52, warm-50)
amod(lamb-52, white-51)
prep_of(pair-48, lamb-52)
possessive(lamb-52, 's-53)
nn(stockings-56, wool-55)
dep(pair-48, stockings-56)
poss(mother-59, his-58)
prep_for(stockings-56, mother-59)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (VBN bound)
        (PP (TO to)
          (NP (NNS confess))))
      (SBAR (IN that)
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (S
                (ADVP (RB first))
                (NP (PRP they))
                (VP (VBD were)
                  (VP (VBN finished)
                    (S
                      (S
                        (NP (PRP they))
                        (VP (VBD were)
                          (NP
                            (NP (DT a) (JJ good) (NN deal))
                            (SBAR
                              (S
                                (VP (VBD soiled)
                                  (PP (IN by)
                                    (S
                                      (VP (VBG having)
                                        (VP (VBN been)
                                          (PP (IN on)
                                            (NP (DT the) (NN way)))
                                          (ADVP
                                            (ADVP (RB so) (RB long))
                                            (, ,)
                                            (CC and)
                                            (ADVP (RB perhaps) (RB partly)))
                                          (PP (IN by)
                                            (NP
                                              (NP (DT the) (JJ little) (NNS hands))
                                              (SBAR
                                                (S (RB not)
                                                  (ADVP (RB always))
                                                  (VP (VBG being)
                                                    (ADJP (RB so) (JJ clean)
                                                      (SBAR (IN as)
                                                        (S
                                                          (NP (PRP they))
                                                          (VP (MD might)
                                                            (VP (VB have)
                                                              (VP (VBN been)
                                                                (SBAR
                                                                  (WHADVP (WRB when))
                                                                  (S
                                                                    (NP (PRP he))
                                                                    (VP (VBD turned)
                                                                      (PP (IN from)
                                                                        (NP (NN play)))
                                                                      (S
                                                                        (VP (TO to)
                                                                          (VP (VB work))))))))))))))))))))))))))))
                      (: ;)
                      (CC but)
                      (S
                        (NP (NNP Mrs) (NNP Wilson))
                        (VP (VBD washed)
                          (S
                            (NP (PRP them))
                            (NP (PRP herself)))))))))
              (, ,)
              (CC and)
              (S
                (NP (PRP they))
                (VP (VBD looked)))))
          (, ,)
          (SBAR (IN if)
            (S (RB not)
              (ADJP (RB as) (JJ white)
                (PP (IN as)
                  (NP (NN snow))))))
          (, ,)
          (VP
            (ADVP
              (ADVP (IN at) (JJS least))
              (PP (IN as)
                (ADJP (JJ white)
                  (PP (IN as)
                    (NP (DT the) (NN whitest))))))
            (VBZ lamb)
            (SBAR
              (S
                (NP (PRP you))
                (ADVP (RB ever))
                (VP (VBD saw))))))))
    (. .)))

nsubjpass(bound-3, I-1)
auxpass(bound-3, am-2)
root(ROOT-0, bound-3)
prep_to(bound-3, confess-5)
mark(lamb-77, that-6)
advmod(finished-11, when-7)
advmod(finished-11, first-8)
nsubjpass(finished-11, they-9)
auxpass(finished-11, were-10)
advcl(lamb-77, finished-11)
nsubj(deal-16, they-12)
cop(deal-16, were-13)
det(deal-16, a-14)
amod(deal-16, good-15)
dep(finished-11, deal-16)
rcmod(deal-16, soiled-17)
aux(been-20, having-19)
prepc_by(soiled-17, been-20)
det(way-23, the-22)
prep_on(been-20, way-23)
advmod(long-25, so-24)
advmod(been-20, long-25)
advmod(partly-29, perhaps-28)
advmod(been-20, partly-29)
conj_and(long-25, partly-29)
det(hands-33, the-31)
amod(hands-33, little-32)
prep_by(been-20, hands-33)
neg(clean-38, not-34)
advmod(clean-38, always-35)
cop(clean-38, being-36)
advmod(clean-38, so-37)
rcmod(hands-33, clean-38)
mark(been-43, as-39)
nsubj(been-43, they-40)
aux(been-43, might-41)
aux(been-43, have-42)
dep(clean-38, been-43)
advmod(turned-46, when-44)
nsubj(turned-46, he-45)
nsubj(work-50, he-45)
advcl(been-43, turned-46)
prep_from(turned-46, play-48)
aux(work-50, to-49)
xcomp(turned-46, work-50)
nn(Wilson-54, Mrs-53)
nsubj(washed-55, Wilson-54)
dep(finished-11, washed-55)
conj_but(deal-16, washed-55)
nsubj(herself-57, them-56)
xcomp(washed-55, herself-57)
nsubj(looked-61, they-60)
conj_and(finished-11, looked-61)
advcl(lamb-77, looked-61)
mark(white-66, if-63)
neg(white-66, not-64)
advmod(white-66, as-65)
dep(lamb-77, white-66)
prep_as(white-66, snow-68)
advmod(lamb-77, at-70)
pobj(at-70, least-71)
prep_as(at-70, white-73)
det(whitest-76, the-75)
prep_as(white-73, whitest-76)
ccomp(bound-3, lamb-77)
nsubj(saw-80, you-78)
advmod(saw-80, ever-79)
ccomp(lamb-77, saw-80)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB attempt)
          (S
            (VP (TO to)
              (VP (VB describe)
                (NP
                  (NP
                    (NP (DT the) (NN delight))
                    (PP (IN of)
                      (NP (PRP$ his) (NN mother))))
                  (, ,)
                  (NP
                    (NP (DT the) (NN triumph))
                    (PP (IN of)
                      (NP (NNP Willie))))
                  (, ,)
                  (CC or)
                  (NP
                    (NP (DT the) (NN gratification))
                    (PP (IN of)
                      (NP
                        (NP (PRP$ his) (NN father))
                        (, ,)
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBD saw)
                              (PP (IN in)
                                (NP
                                  (NP (DT this) (JJ good) (NN promise))
                                  (PP (IN of)
                                    (NP
                                      (NP (PRP$ his) (NN boy) (POS 's))
                                      (NN capacity))))))))))
                    (: ;)
                    (SBAR
                      (WHPP (IN for)
                        (WHNP (DT all) (WDT that)))
                      (S
                        (NP (PRP I))
                        (VP (VBP have)
                          (VP (VBN written)
                            (SBAR
                              (S
                                (NP (NN hitherto))
                                (VP (VBZ is)
                                  (NP
                                    (NP (RB only) (JJ introductory))
                                    (PP (TO to)
                                      (NP (PRP$ my) (NN story)))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (ADJP (JJ long)
        (S
          (VP (TO to)
            (VP
              (VP (VB begin))
              (CC and)
              (VP (VB tell)
                (NP (PRP it))
                (NP (PRP you))
                (PP (IN in)
                  (NP (DT a) (JJ regular) (JJ straightforward) (NN fashion)))))))))
    (. .)))

nsubj(attempt-4, I-1)
nsubj(describe-6, I-1)
nsubj(long-53, I-1)
nsubj(begin-55, I-1)
aux(attempt-4, will-2)
neg(attempt-4, not-3)
root(ROOT-0, attempt-4)
aux(describe-6, to-5)
xcomp(attempt-4, describe-6)
det(delight-8, the-7)
dobj(describe-6, delight-8)
poss(mother-11, his-10)
prep_of(delight-8, mother-11)
det(triumph-14, the-13)
dobj(describe-6, triumph-14)
conj_or(delight-8, triumph-14)
prep_of(triumph-14, Willie-16)
det(gratification-20, the-19)
dobj(describe-6, gratification-20)
conj_or(delight-8, gratification-20)
prep_for(written-42, gratification-20)
poss(father-23, his-22)
prep_of(gratification-20, father-23)
nsubj(saw-26, father-23)
rcmod(father-23, saw-26)
det(promise-30, this-28)
amod(promise-30, good-29)
prep_in(saw-26, promise-30)
poss(boy-33, his-32)
poss(capacity-35, boy-33)
prep_of(promise-30, capacity-35)
dep(that-39, all-38)
nsubj(written-42, I-40)
aux(written-42, have-41)
rcmod(gratification-20, written-42)
nsubj(introductory-46, hitherto-43)
cop(introductory-46, is-44)
advmod(introductory-46, only-45)
ccomp(written-42, introductory-46)
poss(story-49, my-48)
prep_to(introductory-46, story-49)
dep(long-53, I-52)
conj_and(attempt-4, long-53)
aux(begin-55, to-54)
xcomp(long-53, begin-55)
xcomp(long-53, tell-57)
conj_and(begin-55, tell-57)
iobj(tell-57, it-58)
dobj(tell-57, you-59)
det(fashion-64, a-61)
amod(fashion-64, regular-62)
amod(fashion-64, straightforward-63)
prep_in(tell-57, fashion-64)

(ROOT
  (S
    (S
      (SBAR (IN Before)
        (S
          (NP (PRP I))
          (VP (VBP begin))))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (NP (PRP I))
      (VP (MD must) (RB not)
        (VP (VB forget)
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP you))
                (SBAR (IN that)
                  (S
                    (NP (NNP Willie))
                    (VP (VBD did)
                      (S
                        (VP (VB ask)
                          (NP (PRP$ his) (NN father))))
                      (NP
                        (NP (DT the) (NN question))
                        (PP (IN with)
                          (NP
                            (NP (NNP Mrs) (NNP Wilson) (POS 's))
                            (NN answer)))
                        (SBAR
                          (WHPP (TO to)
                            (WHNP (WDT which)))
                          (S
                            (NP (PRP he))
                            (VP (VBD had) (RB not)
                              (VP (VBN been)
                                (VP (VBN satisfied)
                                  (PRN (: --)
                                    (S
                                      (NP (PRP I))
                                      (VP (VBP mean)
                                        (NP (DT the) (NN question))
                                        (SBAR (IN whether)
                                          (S
                                            (S
                                              (NP (NNP God))
                                              (VP (VBD worked)))
                                            (: ;)
                                            (CC and)
                                            (S
                                              (NP
                                                (NP
                                                  (NP (PRP$ his) (NN father) (POS 's))
                                                  (NN answer))
                                                (, ,)
                                                (SBAR (IN after)
                                                  (S
                                                    (NP (PRP he))
                                                    (VP (VBD had)
                                                      (VP (VBN sat)
                                                        (S
                                                          (VP (VBG pondering)
                                                            (PP (IN for)
                                                              (NP
                                                                (NP (DT a) (NN while))
                                                                (PP (IN in)
                                                                  (NP (PRP$ his) (NN chair)))))))))))
                                                (, ,))
                                              (VP (VBD was)
                                                (NP
                                                  (NP (NN something))
                                                  (PP (TO to)
                                                    (NP (DT this) (NN effect))))))
                                            (: :)
                                            (SBAR
                                              (PRN (: --)
                                                (FRAG
                                                  (INTJ (`` ``) (UH Yes))
                                                  (, ,)
                                                  (NP (NNP Willie)))
                                                (: ;))
                                              (S
                                                (NP (PRP it))
                                                (VP (VBZ seems)
                                                  (PP (TO to)
                                                    (NP (PRP me)))
                                                  (SBAR (IN that)
                                                    (S
                                                      (NP (NNP God))
                                                      (VP (VBZ works)
                                                        (NP
                                                          (QP (JJR more) (IN than) (CD anybody)))))))))))))
                                    (: --))
                                  (SBAR (IN for)
                                    (S
                                      (NP (PRP He))
                                      (VP (VBZ works)
                                        (NP
                                          (NP (DT all) (NN night))
                                          (CC and)
                                          (NP (DT all) (NN day)))))))))))))))))))))
    (, ,)
    (CC and)
    (S (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBP remember)
            (ADVP (RB rightly)))))
      (, ,)
      (NP (NNP Jesus))
      (VP (VBZ tells)
        (NP (PRP us))
        (ADVP (RB somewhere))
        (SBAR (IN that)
          (S
            (NP (PRP He))
            (VP (VBZ works)
              (NP (DT all) (NNP Sunday))
              (ADVP (RB too)))))))
    (. .)))

mark(begin-3, Before-1)
nsubj(begin-3, I-2)
advcl(forget-10, begin-3)
advmod(forget-10, however-5)
nsubj(forget-10, I-7)
nsubj(tell-12, I-7)
aux(forget-10, must-8)
neg(forget-10, not-9)
root(ROOT-0, forget-10)
aux(tell-12, to-11)
xcomp(forget-10, tell-12)
dobj(tell-12, you-13)
mark(did-16, that-14)
nsubj(did-16, Willie-15)
ccomp(tell-12, did-16)
ccomp(did-16, ask-17)
poss(father-19, his-18)
dobj(ask-17, father-19)
det(question-21, the-20)
dobj(did-16, question-21)
prep_to(satisfied-33, question-21)
nn(Wilson-24, Mrs-23)
poss(answer-26, Wilson-24)
prep_with(question-21, answer-26)
nsubjpass(satisfied-33, he-29)
aux(satisfied-33, had-30)
neg(satisfied-33, not-31)
auxpass(satisfied-33, been-32)
rcmod(question-21, satisfied-33)
nsubj(mean-36, I-35)
parataxis(satisfied-33, mean-36)
det(question-38, the-37)
dobj(mean-36, question-38)
mark(worked-41, whether-39)
nsubj(worked-41, God-40)
ccomp(mean-36, worked-41)
poss(father-45, his-44)
poss(answer-47, father-45)
nsubj(something-62, answer-47)
nsubj(sat-52, he-50)
aux(sat-52, had-51)
prepc_after(answer-47, sat-52)
xcomp(sat-52, pondering-53)
det(while-56, a-55)
prep_for(pondering-53, while-56)
poss(chair-59, his-58)
prep_in(while-56, chair-59)
cop(something-62, was-61)
ccomp(mean-36, something-62)
conj_and(worked-41, something-62)
det(effect-65, this-64)
prep_to(something-62, effect-65)
discourse(Willie-71, Yes-69)
dep(seems-74, Willie-71)
nsubj(seems-74, it-73)
ccomp(mean-36, seems-74)
conj_and(worked-41, seems-74)
prep_to(seems-74, me-76)
mark(works-79, that-77)
nsubj(works-79, God-78)
ccomp(seems-74, works-79)
mwe(than-81, more-80)
quantmod(anybody-82, than-81)
dobj(works-79, anybody-82)
mark(works-86, for-84)
nsubj(works-86, He-85)
advcl(satisfied-33, works-86)
det(night-88, all-87)
dobj(works-86, night-88)
det(day-91, all-90)
dobj(works-86, day-91)
conj_and(night-88, day-91)
mark(remember-97, if-95)
nsubj(remember-97, I-96)
advcl(tells-101, remember-97)
advmod(remember-97, rightly-98)
nsubj(tells-101, Jesus-100)
conj_and(forget-10, tells-101)
dobj(tells-101, us-102)
advmod(tells-101, somewhere-103)
mark(works-106, that-104)
nsubj(works-106, He-105)
ccomp(tells-101, works-106)
det(Sunday-108, all-107)
tmod(works-106, Sunday-108)
advmod(works-106, too-109)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP He))
        (VP (VBD were)
          (S
            (VP (TO to)
              (VP (VB stop)
                (S
                  (VP (VBG working)))))))))
    (, ,)
    (NP (NN everything))
    (VP (MD would)
      (VP (VB stop)
        (NP (NN being))))
    (. .)))

mark(were-3, If-1)
nsubj(were-3, He-2)
nsubj(stop-5, He-2)
advcl(stop-10, were-3)
aux(stop-5, to-4)
xcomp(were-3, stop-5)
xcomp(stop-5, working-6)
nsubj(stop-10, everything-8)
aux(stop-10, would-9)
root(ROOT-0, stop-10)
dobj(stop-10, being-11)

(ROOT
  (S
    (S
      (NP (DT The) (NN sun))
      (VP (MD would)
        (VP (VB stop)
          (NP
            (NP (NNP shining))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (NN moon))
              (CC and)
              (NP (DT the) (NNS stars)))))))
    (: ;)
    (S
      (NP (DT the) (NN corn))
      (VP (MD would)
        (VP (VB stop)
          (NP (VBG growing)))))
    (: ;)
    (S
      (NP (EX there))
      (VP (MD would)
        (VP (VB be)
          (NP
            (ADJP (DT no) (JJR more))
            (NNS apples)
            (CC or)
            (NNS gooseberries)))))
    (: ;)
    (S
      (NP (PRP$ your) (NNS eyes))
      (VP (MD would)
        (VP (VB stop)
          (S
            (VP (VBG seeing))))))
    (: ;)
    (S
      (NP (PRP$ your) (NNS ears))
      (VP (MD would)
        (VP (VB stop)
          (NP (NN hearing)))))
    (: ;)
    (S
      (NP (PRP$ your) (NNS fingers))
      (VP (MD could) (RB n't)
        (VP (VB move)
          (NP (DT an) (NN inch)))))
    (: ;)
    (CC and)
    (S (, ,)
      (PP
        (ADVP (JJS worst))
        (IN of)
        (NP (DT all)))
      (, ,)
      (NP (PRP$ your) (JJ little) (NN heart))
      (VP (MD would)
        (VP (VB stop)
          (NP (NN loving)))))
    (. .) ('' '')))

det(sun-2, The-1)
nsubj(stop-4, sun-2)
aux(stop-4, would-3)
root(ROOT-0, stop-4)
dobj(stop-4, shining-5)
det(moon-9, the-8)
dobj(stop-4, moon-9)
conj_and(shining-5, moon-9)
det(stars-12, the-11)
conj_and(shining-5, stars-12)
conj_and(moon-9, stars-12)
det(corn-15, the-14)
nsubj(stop-17, corn-15)
aux(stop-17, would-16)
conj_and(stop-4, stop-17)
dobj(stop-17, growing-18)
expl(apples-25, there-20)
aux(apples-25, would-21)
cop(apples-25, be-22)
neg(more-24, no-23)
amod(apples-25, more-24)
conj_and(stop-4, apples-25)
conj_and(stop-4, gooseberries-27)
conj_or(apples-25, gooseberries-27)
poss(eyes-30, your-29)
nsubj(stop-32, eyes-30)
aux(stop-32, would-31)
conj_and(stop-4, stop-32)
xcomp(stop-32, seeing-33)
poss(ears-36, your-35)
nsubj(stop-38, ears-36)
aux(stop-38, would-37)
conj_and(stop-4, stop-38)
dobj(stop-38, hearing-39)
poss(fingers-42, your-41)
nsubj(move-45, fingers-42)
aux(move-45, could-43)
neg(move-45, n't-44)
conj_and(stop-4, move-45)
det(inch-47, an-46)
dobj(move-45, inch-47)
advmod(stop-59, worst-51)
prep_of(stop-59, all-53)
poss(heart-57, your-55)
amod(heart-57, little-56)
nsubj(stop-59, heart-57)
aux(stop-59, would-58)
conj_and(stop-4, stop-59)
dobj(stop-59, loving-60)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH No))
      (, ,)
      (NP (NN papa)))
    (, ,) ('' '')
    (VP (VBD cried)
      (NP
        (NP (NNP Willie))
        (: ;) (`` ``)
        (S
          (S
            (NP (PRP I))
            (VP (MD should) (RB n't)
              (VP (VB stop)
                (NP (NN loving)))))
          (, ,)
          (NP (PRP I))
          (VP (VBP 'm)
            (ADJP (JJ sure))))))
    (. .) ('' '')))

discourse(papa-4, No-2)
dep(cried-7, papa-4)
root(ROOT-0, cried-7)
dobj(cried-7, Willie-8)
nsubj(stop-14, I-11)
aux(stop-14, should-12)
neg(stop-14, n't-13)
ccomp(sure-19, stop-14)
dobj(stop-14, loving-15)
nsubj(sure-19, I-17)
cop(sure-19, 'm-18)
dep(Willie-8, sure-19)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Indeed))
      (NP (PRP you))
      (VP (MD would)))
    (, ,)
    (S
      (NP (NNP Willie)))
    (. .) ('' '')))

advmod(would-4, Indeed-2)
nsubj(would-4, you-3)
root(ROOT-0, would-4)
parataxis(would-4, Willie-6)

(ROOT
  (S (`` ``)
    (NP (RB Not) (PRP you))
    (VP (VB and)
      (NP (NN mamma)))
    (. .) ('' '')))

neg(you-3, Not-2)
nsubj(and-4, you-3)
root(ROOT-0, and-4)
dobj(and-4, mamma-5)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes)))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD would) (RB n't)
        (VP (VB love)
          (NP (PRP us))
          (ADVP (DT any) (RBR more))
          (SBAR (IN than) (IN if)
            (S
              (NP (PRP you))
              (VP (VBD were)
                (ADJP (RB dead) (JJ asleep)
                  (PP (IN without)
                    (S
                      (VP (VBG dreaming)))))))))))
    (. .) ('' '')))

dep(love-7, Yes-2)
nsubj(love-7, you-4)
aux(love-7, would-5)
neg(love-7, n't-6)
root(ROOT-0, love-7)
dobj(love-7, us-8)
dep(more-10, any-9)
advmod(love-7, more-10)
mark(asleep-16, than-11)
mark(asleep-16, if-12)
nsubj(asleep-16, you-13)
cop(asleep-16, were-14)
advmod(asleep-16, dead-15)
advcl(love-7, asleep-16)
prepc_without(asleep-16, dreaming-18)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ dreadful))))
    (. .) ('' '')))

nsubj(dreadful-5, That-2)
aux(dreadful-5, would-3)
cop(dreadful-5, be-4)
root(ROOT-0, dreadful-5)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (NP (PRP it))
    (VP (MD would))
    (. .)))

advmod(would-4, Yes-2)
nsubj(would-4, it-3)
root(ROOT-0, would-4)

(ROOT
  (S (IN So)
    (NP (PRP you))
    (VP (VBP see)
      (SBAR
        (WHADJP (WRB how) (JJ good))
        (S
          (NP (NNP God))
          (VP (VBZ is)
            (PP (TO to)
              (NP
                (NP (PRP us))
                (: --)
                (S
                  (VP (TO to)
                    (VP (VB go)
                      (PP (IN on)
                        (S
                          (VP (VBG working)))))))))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (MD may)
                  (VP (VB be)
                    (ADJP (JJ able)
                      (S
                        (VP (TO to)
                          (VP (VB love)
                            (NP (DT each) (JJ other))))))))))))))
    (. .) ('' '')))

dep(see-3, So-1)
nsubj(see-3, you-2)
root(ROOT-0, see-3)
advmod(good-5, how-4)
dep(is-7, good-5)
nsubj(is-7, God-6)
ccomp(see-3, is-7)
prep_to(is-7, us-9)
aux(go-12, to-11)
vmod(us-9, go-12)
prepc_on(go-12, working-14)
mark(able-20, that-16)
nsubj(able-20, we-17)
nsubj(love-22, we-17)
aux(able-20, may-18)
cop(able-20, be-19)
ccomp(is-7, able-20)
aux(love-22, to-21)
xcomp(able-20, love-22)
det(other-24, each-23)
dobj(love-22, other-24)

(ROOT
  (SINV (`` ``)
    (S
      (SBAR
        (ADVP (RB Then))
        (IN if)
        (S
          (NP (NNP God))
          (VP (VBZ works)
            (PP (IN like)
              (NP
                (NP (DT that))
                (NP (DT all) (NN day))))
            (ADVP (RB long)))))
      (, ,)
      (NP (PRP it))
      (VP (MD must)
        (VP (VB be)
          (NP (DT a) (JJ fine) (NN thing)
            (S
              (VP (TO to)
                (VP (VB work))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

advmod(works-5, Then-2)
mark(works-5, if-3)
nsubj(works-5, God-4)
advcl(thing-17, works-5)
prep_like(works-5, that-7)
det(day-9, all-8)
dep(that-7, day-9)
advmod(works-5, long-10)
nsubj(thing-17, it-12)
aux(thing-17, must-13)
cop(thing-17, be-14)
det(thing-17, a-15)
amod(thing-17, fine-16)
ccomp(said-22, thing-17)
aux(work-19, to-18)
vmod(thing-17, work-19)
root(ROOT-0, said-22)
nsubj(said-22, Willie-23)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (JJ right)))
    (. .)))

nsubj(right-4, You-2)
cop(right-4, are-3)
root(ROOT-0, right-4)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT a) (JJ fine) (NN thing))
      (PP (TO to)
        (NP (NN work)))
      (: --)
      (NP
        (NP (DT the) (JJS finest) (NN thing))
        (PP (IN in)
          (NP
            (NP (DT the) (NN world))
            (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBZ comes)
                  (PP (IN of)
                    (NP (NN love)))
                  (, ,)
                  (SBAR (IN as)
                    (S
                      (NP
                        (NP (NNP God) (POS 's))
                        (NN work))
                      (VP (VBZ does)))))))))))
    (. .) ('' '')))

nsubj(thing-5, It-1)
cop(thing-5, is-2)
det(thing-5, a-3)
amod(thing-5, fine-4)
root(ROOT-0, thing-5)
prep_to(thing-5, work-7)
det(thing-11, the-9)
amod(thing-11, finest-10)
parataxis(thing-5, thing-11)
det(world-14, the-13)
prep_in(thing-11, world-14)
mark(comes-18, if-16)
nsubj(comes-18, it-17)
dep(world-14, comes-18)
prep_of(comes-18, love-20)
mark(does-26, as-22)
poss(work-25, God-23)
nsubj(does-26, work-25)
advcl(comes-18, does-26)

(ROOT
  (S
    (S
      (NP (DT This) (NN conversation))
      (VP (VBD made)
        (NP
          (NP (NNP Willie))
          (ADJP (RB quite) (VBN determined)))
        (S
          (VP (TO to)
            (VP (VB learn)
              (PP (TO to)
                (ADJP (VBN knit))))))))
    (: ;)
    (S
      (SBAR (IN for) (IN if)
        (S
          (NP (NNP God))
          (VP (VBD worked))))
      (, ,)
      (NP (PRP he))
      (VP (MD would)
        (VP (VB work)
          (ADVP (RB too)))))
    (. .)))

det(conversation-2, This-1)
nsubj(made-3, conversation-2)
root(ROOT-0, made-3)
dobj(made-3, Willie-4)
advmod(determined-6, quite-5)
amod(Willie-4, determined-6)
aux(learn-8, to-7)
vmod(made-3, learn-8)
prep_to(learn-8, knit-10)
mark(worked-15, for-12)
mark(worked-15, if-13)
nsubj(worked-15, God-14)
advcl(work-19, worked-15)
nsubj(work-19, he-17)
aux(work-19, would-18)
parataxis(made-3, work-19)
advmod(work-19, too-20)

(ROOT
  (S (CC And)
    (SBAR (IN although)
      (S
        (NP
          (NP (DT the) (NN work))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD undertook)))))
        (VP (VBD was)
          (NP (DT a)
            (ADJP (RB very) (JJ small))
            (NN work)))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (PP (IN like)
        (NP
          (NP (DT all) (NNP God) (POS 's))
          (JJ great) (NNS works)))
      (, ,)
      (PP (IN for)
        (NP
          (NP (DT every) (NN loop))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD made)
                (SBAR
                  (SINV (VBD had)
                    (NP (DT a) (JJ little) (NN love))
                    (VP (VBN looped)
                      (PRT (RP up))
                      (PP (IN in)
                        (NP (PRP it)))
                      (, ,)
                      (PP (IN like)
                        (NP
                          (NP (DT an) (JJ invisible) (, ,) (JJ softest) (, ,) (JJ downiest) (NN lining))
                          (PP (TO to)
                            (NP (DT the) (NNS stockings))))))))))))))
    (. .)))

cc(was-14, And-1)
mark(work-11, although-2)
det(work-4, the-3)
nsubj(work-11, work-4)
nsubj(undertook-6, he-5)
rcmod(work-4, undertook-6)
cop(work-11, was-7)
det(work-11, a-8)
advmod(small-10, very-9)
amod(work-11, small-10)
advcl(was-14, work-11)
nsubj(was-14, it-13)
root(ROOT-0, was-14)
det(God-17, all-16)
poss(works-20, God-17)
amod(works-20, great-19)
prep_like(was-14, works-20)
det(loop-24, every-23)
prep_for(was-14, loop-24)
nsubj(made-26, he-25)
rcmod(loop-24, made-26)
aux(looped-31, had-27)
det(love-30, a-28)
amod(love-30, little-29)
nsubj(looped-31, love-30)
advcl(made-26, looped-31)
prt(looped-31, up-32)
prep_in(looped-31, it-34)
det(lining-43, an-37)
amod(lining-43, invisible-38)
amod(lining-43, softest-40)
amod(lining-43, downiest-42)
prep_like(looped-31, lining-43)
det(stockings-46, the-45)
prep_to(lining-43, stockings-46)

(ROOT
  (S (CC And)
    (PP (IN after)
      (NP (DT those)))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD went)
        (PP (IN on)
          (S
            (VP (VBG knitting)
              (NP
                (NP (DT a) (NN pair))
                (PP (IN for)
                  (NP (PRP$ his) (NN father)))))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB indeed))
      (, ,)
      (SBAR (IN although)
        (S
          (NP (PRP he))
          (VP (VBD learned)
            (S
              (VP
                (VP (TO to)
                  (VP (VB work)
                    (PP (IN with)
                      (NP (DT a) (NN needle)))
                    (ADVP (RB as) (RB well))))
                (, ,)
                (CC and)
                (VP (TO to)
                  (VP (VB darn)
                    (NP (DT the) (NNS stockings))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN made))))
                      (, ,)
                      (CC and)
                      (S
                        (ADVP (RB even))
                        (VP (VBD tried)
                          (NP (PRP$ his) (NN hand))
                          (PP (IN at)
                            (NP
                              (NP (DT the) (NN spinning))
                              (PRN (: --)
                                (SBAR
                                  (WHPP (IN of)
                                    (WHNP (WDT which)))
                                  (S (, ,)
                                    (ADVP (RB however))
                                    (, ,)
                                    (NP (PRP he))
                                    (VP (MD could) (RB not)
                                      (VP (VB make)
                                        (NP (RB much))
                                        (PP (IN for)
                                          (NP (DT a) (JJ long) (NN time)))))))
                                (: --))))))))))))))
      (NP (PRP he))
      (VP (VBD had) (RB not)
        (VP (VBN left)
          (PP (IN off)
            (S
              (VP (VBG knitting)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP we))
                    (VP (VBP come)
                      (S
                        (VP (TO to)
                          (VP (VB begin)
                            (NP
                              (NP (DT the) (NN story))
                              (PP (IN in)
                                (NP (DT the) (JJ next) (NN chapter))))))))))))))))
    (. .)))

prep_after(went-6, those-3)
nsubj(went-6, he-5)
root(ROOT-0, went-6)
prepc_on(went-6, knitting-8)
det(pair-10, a-9)
dobj(knitting-8, pair-10)
poss(father-13, his-12)
prep_for(pair-10, father-13)
advmod(left-65, indeed-16)
mark(learned-20, although-18)
nsubj(learned-20, he-19)
advcl(left-65, learned-20)
aux(work-22, to-21)
ccomp(learned-20, work-22)
det(needle-25, a-24)
prep_with(work-22, needle-25)
advmod(well-27, as-26)
mwe(well-27, as-26)
advmod(work-22, well-27)
aux(darn-31, to-30)
ccomp(learned-20, darn-31)
conj_and(work-22, darn-31)
det(stockings-33, the-32)
dobj(darn-31, stockings-33)
nsubj(made-36, he-34)
nsubj(tried-40, he-34)
aux(made-36, had-35)
dep(darn-31, made-36)
advmod(tried-40, even-39)
dep(darn-31, tried-40)
conj_and(made-36, tried-40)
poss(hand-42, his-41)
dobj(tried-40, hand-42)
det(spinning-45, the-44)
prep_at(tried-40, spinning-45)
prep_of(make-55, which-48)
advmod(make-55, however-50)
nsubj(make-55, he-52)
aux(make-55, could-53)
neg(make-55, not-54)
dep(spinning-45, make-55)
dobj(make-55, much-56)
det(time-60, a-58)
amod(time-60, long-59)
prep_for(make-55, time-60)
nsubj(left-65, he-62)
aux(left-65, had-63)
neg(left-65, not-64)
conj_and(went-6, left-65)
prepc_off(left-65, knitting-67)
advmod(come-70, when-68)
nsubj(come-70, we-69)
nsubj(begin-72, we-69)
advcl(knitting-67, come-70)
aux(begin-72, to-71)
xcomp(come-70, begin-72)
det(story-74, the-73)
dobj(begin-72, story-74)
det(chapter-78, the-76)
amod(chapter-78, next-77)
prep_in(story-74, chapter-78)

(ROOT
  (NP (NNP CHAPTER) (NNP III) (. .)))

nn(III-2, CHAPTER-1)
root(ROOT-0, III-2)

(ROOT
  (S
    (NP (PRP HE))
    (VP (VBZ IS)
      (NP
        (NP (NNP TURNED) (NNP INTO) (NNP SOMETHING))
        (SBAR
          (S
            (NP (NNP HE) (NNP NEVER))
            (VP (VBD WAS)
              (ADJP (JJ BEFORE)))))))
    (. .)))

nsubj(SOMETHING-5, HE-1)
cop(SOMETHING-5, IS-2)
nn(SOMETHING-5, TURNED-3)
nn(SOMETHING-5, INTO-4)
root(ROOT-0, SOMETHING-5)
nn(NEVER-7, HE-6)
nsubj(BEFORE-9, NEVER-7)
cop(BEFORE-9, WAS-8)
rcmod(SOMETHING-5, BEFORE-9)

(ROOT
  (S
    (S
      (NP (NNP Hitherto) (NNP I))
      (VP (VBP have)
        (VP (VBN been)
          (VP (VBG mixing)
            (PP (IN up)
              (NP (NN summer)
                (CC and)
                (NN winter)
                (CC and)
                (NN everything)))
            (ADVP (DT all) (RB together))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB now))
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB try)
                (S
                  (VP (TO to)
                    (VP (VB keep)
                      (NP (NN everything))
                      (PP (IN in)
                        (NP (PRP$ its) (JJ own) (NN place))))))))))))
    (. .)))

nn(I-2, Hitherto-1)
nsubj(mixing-5, I-2)
aux(mixing-5, have-3)
aux(mixing-5, been-4)
root(ROOT-0, mixing-5)
prep_up(mixing-5, summer-7)
prep_up(mixing-5, winter-9)
conj_and(summer-7, winter-9)
prep_up(mixing-5, everything-11)
conj_and(summer-7, everything-11)
dep(together-13, all-12)
advmod(mixing-5, together-13)
advmod(going-19, now-16)
nsubj(going-19, I-17)
nsubj(try-21, I-17)
nsubj(keep-23, I-17)
aux(going-19, am-18)
conj_but(mixing-5, going-19)
aux(try-21, to-20)
xcomp(going-19, try-21)
aux(keep-23, to-22)
xcomp(try-21, keep-23)
dobj(keep-23, everything-24)
poss(place-28, its-26)
amod(place-28, own-27)
prep_in(keep-23, place-28)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD was)
      (ADVP (RB now))
      (ADJP
        (NP (CD nine) (NNS years))
        (JJ old)))
    (. .)))

nsubj(old-6, Willie-1)
cop(old-6, was-2)
advmod(old-6, now-3)
num(years-5, nine-4)
npadvmod(old-6, years-5)
root(ROOT-0, old-6)

(ROOT
  (S
    (NP (PRP$ His) (NN mother))
    (VP (VBD had)
      (VP
        (VP (VBN been)
          (ADVP (RB poorly))
          (PP (IN for)
            (NP (DT some) (NN time))))
        (: --)
        (VP (VBN confined)
          (PP (TO to)
            (NP (PRP$ her) (NN room))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP
              (NP (PRP she))
              (ADJP (RB not) (JJ unfrequently)))
            (VP (VBD was)
              (PP (IN in)
                (NP (DT the) (JJ long) (JJ cold) (NNS winters))))))))
    (. .)))

poss(mother-2, His-1)
nsubj(been-4, mother-2)
aux(been-4, had-3)
root(ROOT-0, been-4)
advmod(been-4, poorly-5)
det(time-8, some-7)
prep_for(been-4, time-8)
dep(been-4, confined-10)
poss(room-13, her-12)
prep_to(confined-10, room-13)
mark(was-19, as-15)
nsubj(was-19, she-16)
neg(unfrequently-18, not-17)
amod(she-16, unfrequently-18)
advcl(been-4, was-19)
det(winters-24, the-21)
amod(winters-24, long-22)
amod(winters-24, cold-23)
prep_in(was-19, winters-24)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD was)
          (NP (NN winter))
          (ADVP (RB now))))
      (: ;)
      (CC and)
      (S
        (NP (CD one) (NN morning))
        (, ,)
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PDT all) (DT the) (NN air))
              (VP (VBD was)
                (ADJP (JJ dark)
                  (PP (IN with)
                    (S
                      (VP (VBG falling)
                        (NP (NN snow)))))))))
          (, ,)
          (NP (PRP he))
          (VP (VBD was)
            (VP (VBG standing)
              (PP (IN by)
                (NP (DT the) (NN parlour) (NN window)))
              (, ,)
              (S
                (VP
                  (VP (VBG looking)
                    (PRT (RP out))
                    (PP (IN on)
                      (NP (PRP it))))
                  (, ,)
                  (CC and)
                  (VP (VBG wondering)
                    (SBAR
                      (SBAR (IN whether)
                        (S
                          (NP (DT the) (NNS angels))
                          (VP (VBD made)
                            (NP (PRP it))
                            (PRT (RP up))
                            (PP (IN in)
                              (NP (DT the) (NN sky))))))
                      (: ;)
                      (SBAR (IN for)
                        (S
                          (NP (PRP he))
                          (VP (VBD thought)
                            (SBAR
                              (S
                                (NP (PRP it))
                                (VP (MD might)
                                  (VP (VB be)
                                    (NP (PRP$ their) (NN sawdust))
                                    (, ,)
                                    (SBAR
                                      (WHNP (WDT which))
                                      (, ,)
                                      (S
                                        (SBAR
                                          (WHADVP (WRB when))
                                          (S
                                            (NP (PRP they))
                                            (VP (VBD had)
                                              (ADVP (RB too) (RB much)))))
                                        (, ,)
                                        (NP (PRP they))
                                        (VP
                                          (VP (VBD shook)
                                            (PRT (RP down))
                                            (S
                                              (VP (TO to)
                                                (VP (VB get)
                                                  (ADJP (JJ melted))))))
                                          (CC and)
                                          (VP (VBD put)
                                            (PRT (RP out))
                                            (PP (IN of)
                                              (NP (DT the) (NN way))))))))))))))
                      (: ;)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (NNP Tibby))
                          (VP (VBD came)
                            (PP (IN into)
                              (NP
                                (NP (DT the) (NN room))
                                (ADJP (RB very) (VBN softly)))))))))
                  (, ,)
                  (CC and)
                  (VP (VBG looking)))))))
        (, ,)
        (S
          (NP (PRP he))
          (VP (VBD thought)))))
    (, ,)
    (FRAG
      (ADJP (RB very) (JJ strange)))
    (. .)))

nsubj(winter-3, It-1)
cop(winter-3, was-2)
root(ROOT-0, winter-3)
advmod(winter-3, now-4)
num(morning-8, one-7)
dep(standing-22, morning-8)
advmod(dark-15, when-10)
predet(air-13, all-11)
det(air-13, the-12)
nsubj(dark-15, air-13)
cop(dark-15, was-14)
advcl(standing-22, dark-15)
prepc_with(dark-15, falling-17)
dobj(falling-17, snow-18)
nsubj(standing-22, he-20)
aux(standing-22, was-21)
conj_and(winter-3, standing-22)
det(window-26, the-24)
nn(window-26, parlour-25)
prep_by(standing-22, window-26)
ccomp(standing-22, looking-28)
prt(looking-28, out-29)
prep_on(looking-28, it-31)
ccomp(standing-22, wondering-34)
conj_and(looking-28, wondering-34)
mark(made-38, whether-35)
det(angels-37, the-36)
nsubj(made-38, angels-37)
advcl(wondering-34, made-38)
dobj(made-38, it-39)
prt(made-38, up-40)
det(sky-43, the-42)
prep_in(made-38, sky-43)
mark(thought-47, for-45)
nsubj(thought-47, he-46)
dep(made-38, thought-47)
nsubj(sawdust-52, it-48)
aux(sawdust-52, might-49)
cop(sawdust-52, be-50)
poss(sawdust-52, their-51)
ccomp(thought-47, sawdust-52)
dobj(shook-63, which-54)
nsubj(melted-67, which-54)
advmod(had-58, when-56)
nsubj(had-58, they-57)
advcl(shook-63, had-58)
advmod(much-60, too-59)
advmod(had-58, much-60)
nsubj(shook-63, they-62)
nsubj(put-69, they-62)
dep(sawdust-52, shook-63)
prt(shook-63, down-64)
aux(melted-67, to-65)
dep(melted-67, get-66)
xcomp(shook-63, melted-67)
dep(sawdust-52, put-69)
conj_and(shook-63, put-69)
det(way-73, the-72)
prep_out_of(put-69, way-73)
advmod(came-77, when-75)
nsubj(came-77, Tibby-76)
dep(made-38, came-77)
det(room-80, the-79)
prep_into(came-77, room-80)
advmod(softly-82, very-81)
amod(room-80, softly-82)
ccomp(standing-22, looking-85)
conj_and(looking-28, looking-85)
nsubj(thought-88, he-87)
parataxis(standing-22, thought-88)
advmod(strange-91, very-90)
dep(winter-3, strange-91)

(ROOT
  (S
    (S (`` ``)
      (S
        (ADVP (RB Willie))
        (, ,)
        (NP (PRP$ your) (NN mamma))
        (VP (VBZ wants)
          (NP (PRP you))))
      (, ,) ('' '')
      (NP (PRP she))
      (VP (VBD said)))
    (: ;)
    (CC and)
    (S
      (NP (NNP Willie) (NNP hastened))
      (VP (VBZ up-stairs)
        (PP (TO to)
          (NP
            (NP (PRP$ his) (NN mother) (POS 's))
            (NN room)))))
    (. .)))

advmod(wants-6, Willie-2)
poss(mamma-5, your-4)
nsubj(wants-6, mamma-5)
ccomp(said-11, wants-6)
dobj(wants-6, you-7)
nsubj(said-11, she-10)
root(ROOT-0, said-11)
nn(hastened-15, Willie-14)
nsubj(up-stairs-16, hastened-15)
conj_and(said-11, up-stairs-16)
poss(mother-19, his-18)
poss(room-21, mother-19)
prep_to(up-stairs-16, room-21)

(ROOT
  (S
    (S
      (VP (VBG Dark)
        (SBAR (IN as)
          (S
            (VP (VBD was)
              (ADVP
                (NP (DT the) (NN air))
                (IN outside)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (JJ surprised)
        (S
          (VP (TO to)
            (VP (VB find)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (JJ dark) (DT the) (NN room))
                  (VP (VBD was)))))))))
    (. .)))

vmod(surprised-10, Dark-1)
mark(was-3, as-2)
advcl(Dark-1, was-3)
det(air-5, the-4)
npadvmod(outside-6, air-5)
advmod(was-3, outside-6)
nsubj(surprised-10, he-8)
nsubj(find-12, he-8)
cop(surprised-10, was-9)
root(ROOT-0, surprised-10)
aux(find-12, to-11)
xcomp(surprised-10, find-12)
advmod(was-17, how-13)
amod(room-16, dark-14)
det(room-16, the-15)
nsubj(was-17, room-16)
ccomp(find-12, was-17)

(ROOT
  (S (CC And)
    (SBAR
      (WHNP (WP what))
      (S
        (VP (VBD surprised)
          (SBAR
            (S
              (NP (PRP him))
              (ADVP (RBR more))
              (VP (VBD was)
                (NP
                  (NP (DT a) (JJ curious) (NN noise))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP (PRP he))
                      (VP (VBD heard)
                        (NP (DT the) (NN moment))))))))))))
    (NP (PRP he))
    (VP (VBD entered)
      (NP (PRP it))
      (, ,)
      (PP (IN like)
        (NP
          (NP
            (NP (DT the) (NN noise))
            (PP (IN of)
              (NP (DT a) (NN hedgehog))))
          (, ,)
          (CC or)
          (NP
            (NP (DT some) (JJ other) (JJ little) (NN creature))
            (PP (IN of)
              (NP (DT the) (NNS fields)
                (CC or)
                (NNS woods)))))))
    (. .)))

cc(entered-16, And-1)
nsubj(surprised-3, what-2)
advcl(entered-16, surprised-3)
nsubj(noise-9, him-4)
advmod(noise-9, more-5)
cop(noise-9, was-6)
det(noise-9, a-7)
amod(noise-9, curious-8)
ccomp(surprised-3, noise-9)
dobj(heard-12, noise-9)
nsubj(heard-12, he-11)
rcmod(noise-9, heard-12)
det(moment-14, the-13)
dobj(heard-12, moment-14)
nsubj(entered-16, he-15)
root(ROOT-0, entered-16)
dobj(entered-16, it-17)
det(noise-21, the-20)
prep_like(entered-16, noise-21)
det(hedgehog-24, a-23)
prep_of(noise-21, hedgehog-24)
det(creature-30, some-27)
amod(creature-30, other-28)
amod(creature-30, little-29)
prep_like(entered-16, creature-30)
conj_or(noise-21, creature-30)
det(fields-33, the-32)
prep_of(creature-30, fields-33)
prep_of(creature-30, woods-35)
conj_or(fields-33, woods-35)

(ROOT
  (S
    (S (CC But)
      (NP (PRP he))
      (VP (VBD crept)
        (ADVP (RB gently) (RB up))
        (PP (TO to)
          (NP
            (NP (PRP$ his) (NN mother) (POS 's))
            (NN bed)))
        (, ,)
        (S
          (VP (VBG saying)))))
    (: --) (`` ``)
    (SQ (VBP Are)
      (NP (PRP you))
      (NP
        (NP (RBR better) (DT this) (NN morning))
        (, ,)
        (NP (NNP mamma) (. ?))
        ('' '')))))

cc(crept-3, But-1)
nsubj(crept-3, he-2)
root(ROOT-0, crept-3)
advmod(up-5, gently-4)
advmod(crept-3, up-5)
poss(mother-8, his-7)
poss(bed-10, mother-8)
prep_to(crept-3, bed-10)
xcomp(crept-3, saying-12)
cop(morning-19, Are-15)
nsubj(morning-19, you-16)
advmod(morning-19, better-17)
det(morning-19, this-18)
dep(crept-3, morning-19)
appos(morning-19, mamma-21)

(ROOT
  (S (CC And)
    (NP (PRP she))
    (VP (VBD answered)
      (PP (IN in)
        (NP (DT a) (JJ feeble) (JJ sweet) (NN voice)))
      (: --) (`` ``)
      (FRAG
        (INTJ (UH Yes) (, ,) (UH Willie))
        (, ,)
        (ADVP (RB very) (RB much) (RB better))))
    (. .)))

cc(answered-3, And-1)
nsubj(answered-3, she-2)
root(ROOT-0, answered-3)
det(voice-8, a-5)
amod(voice-8, feeble-6)
amod(voice-8, sweet-7)
prep_in(answered-3, voice-8)
discourse(better-17, Yes-11)
dep(Yes-11, Willie-13)
advmod(better-17, very-15)
advmod(better-17, much-16)
dep(answered-3, better-17)

(ROOT
  (S (CC And)
    (, ,)
    (ADVP (RB Willie))
    (, ,)
    (NP (NNP God))
    (VP (VBZ has)
      (VP (VBN sent)
        (NP (PRP you))
        (NP (DT a) (JJ little) (NN sister))))
    (. .) ('' '')))

cc(sent-7, And-1)
advmod(sent-7, Willie-3)
nsubj(sent-7, God-5)
aux(sent-7, has-6)
root(ROOT-0, sent-7)
iobj(sent-7, you-8)
det(sister-11, a-9)
amod(sister-11, little-10)
dobj(sent-7, sister-11)

(ROOT
  (S (`` ``)
    (VP (VB O-o-o-oh))
    (. !) ('' '')))

root(ROOT-0, O-o-o-oh-2)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Willie-2)

(ROOT
  (NP (`` ``) (DT A) (JJ little) (NN sister) (. !)))

det(sister-4, A-2)
amod(sister-4, little-3)
root(ROOT-0, sister-4)

(ROOT
  (SQ (MD Did)
    (NP (PRP He))
    (VP (VBP make)
      (NP (PRP$ her) (NN Himself)))
    (. ?) ('' '')))

aux(make-3, Did-1)
nsubj(make-3, He-2)
root(ROOT-0, make-3)
poss(Himself-5, her-4)
dobj(make-3, Himself-5)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes)))
    (: ;)
    (S
      (NP (PRP He))
      (VP
        (VP (VBD made)
          (NP (PRP$ her) (NN Himself)))
        (: ;)
        (CC and)
        (VP (VBD sent)
          (NP (PRP her))
          (PP (TO to)
            (NP (PRP you))))
        (NP (JJ last) (NN night))))
    (. .) ('' '')))

dep(made-5, Yes-2)
nsubj(made-5, He-4)
nsubj(sent-10, He-4)
root(ROOT-0, made-5)
poss(Himself-7, her-6)
dobj(made-5, Himself-7)
conj_and(made-5, sent-10)
dobj(sent-10, her-11)
prep_to(sent-10, you-13)
amod(night-15, last-14)
tmod(made-5, night-15)

(ROOT
  (S (`` ``)
    (S
      (FRAG
        (WHADVP (WRB How))
        (ADJP (JJ busy)))
      (NP (PRP He))
      (VP (MD must)
        (VP (VB have)
          (VP (VBN been)
            (ADVP (RB lately))))))
    (. !) ('' '')))

dep(busy-3, How-2)
dep(been-7, busy-3)
nsubj(been-7, He-4)
aux(been-7, must-5)
aux(been-7, have-6)
root(ROOT-0, been-7)
advmod(been-7, lately-8)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBZ is)
      (NP (PRP she)))
    (. ?)))

advmod(is-3, Where-2)
root(ROOT-0, is-3)
nsubj(is-3, she-4)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB _))
    (VP (MD should)
      (ADVP (RB _))
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP her)))))))
    (. .)))

nsubj(like-5, I-1)
nsubj(see-7, I-1)
advmod(like-5, _-2)
aux(like-5, should-3)
advmod(like-5, _-4)
root(ROOT-0, like-5)
aux(see-7, to-6)
xcomp(like-5, see-7)
dobj(see-7, her-8)

(ROOT
  (SQ (VBZ Is)
    (NP
      (NP (PRP she))
      (NP (PRP$ my) (JJ very) (JJ own)))
    (ADJP (JJ sister))
    (. ?) ('' '')))

cop(sister-6, Is-1)
nsubj(sister-6, she-2)
poss(own-5, my-3)
amod(own-5, very-4)
dep(she-2, own-5)
root(ROOT-0, sister-6)

(ROOT
  (S
    (INTJ (`` ``) (UH Yes))
    (, ,)
    (NP
      (NP (PRP$ your) (RB very) (JJ own) (NN sister))
      (, ,)
      (NP (NNP Willie)))
    (: --)
    (S
      (VP (TO to)
        (VP (VB love)
          (CC and)
          (VB take))))
    (VP (VBP care)
      (PP (IN of)
        (ADVP (RB always))))
    (. .) ('' '')))

discourse(care-15, Yes-2)
poss(sister-7, your-4)
advmod(sister-7, very-5)
amod(sister-7, own-6)
nsubj(care-15, sister-7)
appos(sister-7, Willie-9)
aux(love-12, to-11)
parataxis(care-15, love-12)
conj_and(love-12, take-14)
parataxis(care-15, take-14)
root(ROOT-0, care-15)
prep(care-15, of-16)
pcomp(of-16, always-17)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBZ is)
      (NP (PRP she)))
    (. ?) ('' '')))

advmod(is-3, Where-2)
root(ROOT-0, is-3)
nsubj(is-3, she-4)

(ROOT
  (S (`` ``)
    (VP (VB Go)
      (CC and)
      (VB ask)
      (NP (NN nurse))
      (S
        (VP (TO to)
          (VP (VB let)
            (S
              (NP (PRP you))
              (VP (VB see)
                (NP (PRP her))))))))
    (. .) ('' '')))

root(ROOT-0, Go-2)
conj_and(Go-2, ask-4)
dobj(Go-2, nurse-5)
nsubj(let-7, nurse-5)
aux(let-7, to-6)
xcomp(Go-2, let-7)
nsubj(see-9, you-8)
ccomp(let-7, see-9)
dobj(see-9, her-10)

(ROOT
  (S (RB Then)
    (NP (NNP Willie))
    (VP (VBD saw)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBD was)
            (NP
              (NP (DT a) (JJ strange) (NN woman))
              (PP (IN in)
                (NP (DT the) (NN room))))
            (, ,)
            (PP (IN with)
              (NP
                (NP (NN something))
                (VP (VBG lying)
                  (PP (IN on)
                    (NP (PRP$ her) (NN lap))))))))))
    (. .)))

advmod(saw-3, Then-1)
nsubj(saw-3, Willie-2)
root(ROOT-0, saw-3)
mark(was-6, that-4)
expl(was-6, there-5)
ccomp(saw-3, was-6)
det(woman-9, a-7)
amod(woman-9, strange-8)
nsubj(was-6, woman-9)
det(room-12, the-11)
prep_in(woman-9, room-12)
prep_with(was-6, something-15)
vmod(something-15, lying-16)
poss(lap-19, her-18)
prep_on(lying-16, lap-19)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD went)
        (PRT (RP up))
        (PP (TO to)
          (NP (PRP her)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD folded)
          (PRT (RP back))
          (NP
            (NP (DT the) (NN corner))
            (PP (IN of)
              (NP (DT a) (NN blanket)))))
        (, ,)
        (CC and)
        (VP (VBD revealed)
          (NP
            (NP (DT a) (NN face))
            (ADJP
              (ADJP (RB no) (JJR bigger)
                (PP (IN than)
                  (NP
                    (NP (DT that))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (JJ big) (NN doll))
                        (PP (IN at)
                          (NP
                            (NP (DT the) (NN clergyman) (POS 's))
                            (NN house))))))))
              (, ,)
              (CC but)
              (ADJP (JJ alive))
              (, ,)
              (ADJP (RB quite) (JJ alive))
              (: --)))
          (PP (JJ such)
            (NP (DT a) (JJ pretty) (JJ little) (NN face))))))
    (. !)))

nsubj(went-2, He-1)
root(ROOT-0, went-2)
prt(went-2, up-3)
prep_to(went-2, her-5)
nsubj(folded-9, she-8)
nsubj(revealed-18, she-8)
conj_and(went-2, folded-9)
prt(folded-9, back-10)
det(corner-12, the-11)
dobj(folded-9, corner-12)
det(blanket-15, a-14)
prep_of(corner-12, blanket-15)
conj_and(went-2, revealed-18)
conj_and(folded-9, revealed-18)
det(face-20, a-19)
dobj(revealed-18, face-20)
neg(bigger-22, no-21)
amod(face-20, bigger-22)
prep_than(bigger-22, that-24)
det(doll-28, the-26)
amod(doll-28, big-27)
prep_of(that-24, doll-28)
det(clergyman-31, the-30)
poss(house-33, clergyman-31)
prep_at(doll-28, house-33)
amod(face-20, alive-36)
conj_but(bigger-22, alive-36)
advmod(alive-39, quite-38)
amod(face-20, alive-39)
conj_but(bigger-22, alive-39)
prep(revealed-18, such-41)
det(face-45, a-42)
amod(face-45, pretty-43)
amod(face-45, little-44)
dep(such-41, face-45)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD stood)
      (PP (VBG staring)
        (PP (IN at)
          (NP
            (NP (PRP it))
            (PP (IN for)
              (NP (DT a) (NN while)))))))
    (. .)))

nsubj(stood-2, He-1)
root(ROOT-0, stood-2)
prep(stood-2, staring-3)
pcomp(staring-3, at-4)
pobj(at-4, it-5)
det(while-8, a-7)
prep_for(it-5, while-8)

(ROOT
  (S (`` ``)
    (NP (NNP May))
    (PRN
      (S
        (NP (PRP I))
        (VP (VBZ kiss)
          (NP (PRP her))))
      (, ,))
    (VP (VBZ nurse))
    (. ?) ('' '')))

nsubj(nurse-7, May-2)
nsubj(kiss-4, I-3)
parataxis(nurse-7, kiss-4)
dobj(kiss-4, her-5)
root(ROOT-0, nurse-7)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Yes))
      (PRN (: --)
        (ADVP (RB gently))
        (: --)))
    (VP (VBZ quite)
      (ADVP (RB gently)))
    (. .) ('' '')))

nsubj(quite-6, Yes-2)
dep(Yes-2, gently-4)
root(ROOT-0, quite-6)
advmod(quite-6, gently-7)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD kissed)
        (NP (PRP her))))
    (, ,)
    (S
      (NP (DT half))
      (ADJP (JJ afraid)))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD did) (RB not)
        (VP (VB know)
          (PP (IN of)
            (NP (WP what))))))
    (. .)))

nsubj(kissed-2, He-1)
root(ROOT-0, kissed-2)
dobj(kissed-2, her-3)
dep(afraid-6, half-5)
parataxis(kissed-2, afraid-6)
nsubj(know-11, he-8)
aux(know-11, did-9)
neg(know-11, not-10)
parataxis(kissed-2, know-11)
prep_of(know-11, what-13)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NN cheek))
      (VP (VBD was)
        (UCP
          (ADVP (JJR softer))
          (CC and)
          (ADJP (JJR smoother)
            (PP (IN than)
              (NP (NN anything)))))))
    (NP (PRP he))
    (VP (VBD had)
      (ADVP (RB ever))
      (VP (VBN touched)
        (ADVP (RB before))))
    (. .)))

poss(cheek-2, Her-1)
nsubj(was-3, cheek-2)
dep(touched-12, was-3)
advmod(was-3, softer-4)
advmod(was-3, smoother-6)
conj_and(softer-4, smoother-6)
prep_than(smoother-6, anything-8)
nsubj(touched-12, he-9)
aux(touched-12, had-10)
advmod(touched-12, ever-11)
root(ROOT-0, touched-12)
advmod(touched-12, before-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD sped)
      (ADVP (RB back))
      (PP (TO to)
        (NP
          (NP (PRP$ his) (NN mother))
          (, ,)
          (ADJP (RB too) (JJ full))
          (PP (IN of)
            (NP (NN delight)))))
      (S
        (VP (TO to)
          (VP (VB speak)))))
    (. .)))

nsubj(sped-2, He-1)
nsubj(speak-13, He-1)
root(ROOT-0, sped-2)
advmod(sped-2, back-3)
poss(mother-6, his-5)
prep_to(sped-2, mother-6)
advmod(full-9, too-8)
amod(mother-6, full-9)
prep_of(mother-6, delight-11)
aux(speak-13, to-12)
xcomp(sped-2, speak-13)

(ROOT
  (S (CC But)
    (S
      (NP (PRP she))
      (VP (VBD was) (RB not)
        (ADJP
          (ADVP (RB yet) (RB well))
          (JJ enough)
          (S
            (VP (TO to)
              (VP (VB talk)
                (PP (TO to)
                  (NP (PRP him)))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (PRP$ his) (NN father))
        (VP (VBG coming)
          (PRT (RP in)))
        (, ,))
      (VP (VBD led)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBZ down-stairs)
              (ADVP (RB again))
              (, ,)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP he))
                  (VP (VBD began)
                    (ADVP (RB once) (RBR more))
                    (S
                      (VP (TO to)
                        (VP (VB watch)
                          (NP (DT the) (NN snow)))))
                    (, ,)
                    (S
                      (VP (VBG wondering)
                        (ADVP (RB now))
                        (SBAR (IN if)
                          (S
                            (NP (PRP it))
                            (VP (VBD had)
                              (NP (NN anything)
                                (S
                                  (VP (TO to)
                                    (VP (VB do)
                                      (PP (IN with)
                                        (NP
                                          (NP (NN baby) (POS 's))
                                          (NN arrival))))))))))))))))))))
    (. .)))

nsubj(enough-7, she-2)
nsubj(talk-9, she-2)
cop(enough-7, was-3)
neg(enough-7, not-4)
advmod(well-6, yet-5)
advmod(enough-7, well-6)
root(ROOT-0, enough-7)
aux(talk-9, to-8)
xcomp(enough-7, talk-9)
prep_to(talk-9, him-11)
poss(father-15, his-14)
nsubj(led-19, father-15)
vmod(father-15, coming-16)
prt(coming-16, in-17)
conj_and(enough-7, led-19)
nsubj(down-stairs-21, him-20)
ccomp(led-19, down-stairs-21)
advmod(down-stairs-21, again-22)
advmod(began-26, where-24)
nsubj(began-26, he-25)
nsubj(watch-30, he-25)
advcl(down-stairs-21, began-26)
advmod(more-28, once-27)
advmod(began-26, more-28)
aux(watch-30, to-29)
xcomp(began-26, watch-30)
det(snow-32, the-31)
dobj(watch-30, snow-32)
xcomp(began-26, wondering-34)
advmod(wondering-34, now-35)
mark(had-38, if-36)
nsubj(had-38, it-37)
advcl(wondering-34, had-38)
dobj(had-38, anything-39)
aux(do-41, to-40)
vmod(anything-39, do-41)
poss(arrival-45, baby-43)
prep_with(do-41, arrival-45)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN afternoon)))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (VP (VBN found)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN lock))
              (PP (IN of)
                (NP
                  (NP (PRP$ his) (NN mother) (POS 's))
                  (NN room))))
            (VP
              (CONJP (RB not) (JJ only))
              (VP (MD would) (RB not)
                (VP (VB catch)
                  (ADVP (RB easily))))
              (, ,)
              (CC but)
              (VP (VBD made)
                (NP
                  (NP (DT a) (NN noise))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBN disturbed)
                        (NP (PRP her))))))))))))
    (. .)))

det(afternoon-3, the-2)
prep_in(found-7, afternoon-3)
nsubjpass(found-7, it-5)
auxpass(found-7, was-6)
root(ROOT-0, found-7)
mark(catch-20, that-8)
det(lock-10, the-9)
nsubj(catch-20, lock-10)
nsubj(made-24, lock-10)
poss(mother-13, his-12)
poss(room-15, mother-13)
prep_of(lock-10, room-15)
neg(only-17, not-16)
preconj(catch-20, only-17)
aux(catch-20, would-18)
neg(catch-20, not-19)
ccomp(found-7, catch-20)
advmod(catch-20, easily-21)
ccomp(found-7, made-24)
conj_but(catch-20, made-24)
det(noise-26, a-25)
dobj(made-24, noise-26)
nsubj(disturbed-28, noise-26)
rcmod(noise-26, disturbed-28)
dobj(disturbed-28, her-29)

(ROOT
  (S (IN So)
    (NP (PRP$ his) (NN father))
    (VP
      (VP (VBD got)
        (NP (DT a) (NN screwdriver)))
      (CC and)
      (VP (VBD removed)
        (NP (PRP it)))
      (, ,)
      (S
        (VP (VBG making)
          (PP (IN as)
            (NP (JJ little) (NN noise)))
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (MD could)))))))
    (. .)))

dep(got-4, So-1)
poss(father-3, his-2)
nsubj(got-4, father-3)
nsubj(removed-8, father-3)
root(ROOT-0, got-4)
det(screwdriver-6, a-5)
dobj(got-4, screwdriver-6)
conj_and(got-4, removed-8)
dobj(removed-8, it-9)
vmod(got-4, making-11)
amod(noise-14, little-13)
prep_as(making-11, noise-14)
mark(could-17, as-15)
nsubj(could-17, he-16)
advcl(making-11, could-17)

(ROOT
  (S
    (NP (NNP Next))
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD contrived)
          (NP (DT a) (NN way))
          (, ,)
          (PP (IN with)
            (NP
              (NP (DT a) (NN piece))
              (PP (IN of)
                (NP (NN string)))))
          (, ,)
          (PP (IN for)
            (S
              (VP (VBG keeping)
                (SBAR
                  (SBAR
                    (S
                      (NP (DT the) (NN door))
                      (VP (VBD shut))))
                  (, ,)
                  (CC and)
                  (SBAR (IN as)
                    (S
                      (NP (DT that))
                      (VP (MD would) (RB not)
                        (VP (VB hold)
                          (S
                            (NP (PRP it))
                            (ADJP (RB close) (JJ enough)))))))))))))
      (, ,))
    (VP (VBD hung)
      (NP (DT a) (NN shawl))
      (PP (IN over)
        (NP (PRP it)))
      (S
        (VP (TO to)
          (VP
            (VP (VB keep)
              (NP (DT the) (NN draught))
              (PRT (RP out)))
            (: --)
            (NP
              (NP (DT all))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBG proceeding)
                    (S
                      (NP (NNP Willie))
                      (ADJP (VBN watched)))))))))))
    (. .)))

nsubj(hung-29, Next-1)
nsubj(contrived-3, he-2)
parataxis(hung-29, contrived-3)
det(way-5, a-4)
dobj(contrived-3, way-5)
det(piece-9, a-8)
prep_with(contrived-3, piece-9)
prep_of(piece-9, string-11)
prepc_for(contrived-3, keeping-14)
det(door-16, the-15)
nsubj(shut-17, door-16)
advcl(keeping-14, shut-17)
mark(hold-24, as-20)
nsubj(hold-24, that-21)
aux(hold-24, would-22)
neg(hold-24, not-23)
advcl(keeping-14, hold-24)
conj_and(shut-17, hold-24)
nsubj(enough-27, it-25)
advmod(enough-27, close-26)
xcomp(hold-24, enough-27)
root(ROOT-0, hung-29)
det(shawl-31, a-30)
dobj(hung-29, shawl-31)
prep_over(hung-29, it-33)
aux(keep-35, to-34)
vmod(hung-29, keep-35)
det(draught-37, the-36)
dobj(keep-35, draught-37)
prt(keep-35, out-38)
dobj(keep-35, all-40)
parataxis(keep-35, all-40)
nsubj(proceeding-42, all-40)
rcmod(all-40, proceeding-42)
nsubj(watched-44, Willie-43)
xcomp(proceeding-42, watched-44)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (S
          (ADVP (RB soon) (RB as))
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN finished))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN nurse))
          (VP (VBD had)
            (VP (VBN closed)
              (NP
                (NP (DT the) (NN door))
                (PP (IN behind)
                  (NP (PRP them)))))))))
    (, ,)
    (NP (NNP Mr) (NNP Macmichael))
    (VP
      (VP (VBD set)
        (PRT (RP out))
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (DT the) (NN lock))
              (PP (TO to)
                (NP (DT the) (NN smithy)))))))
      (, ,)
      (CC and)
      (VP (VBD allowed)
        (S
          (NP (NNP Willie))
          (VP (TO to)
            (VP (VB go)
              (PP (IN with)
                (NP (PRP him))))))))
    (. .)))

mark(finished-6, As-1)
advmod(as-3, soon-2)
advmod(finished-6, as-3)
nsubj(finished-6, he-4)
aux(finished-6, had-5)
advcl(set-20, finished-6)
det(nurse-10, the-9)
nsubj(closed-12, nurse-10)
aux(closed-12, had-11)
conj_and(finished-6, closed-12)
advcl(set-20, closed-12)
det(door-14, the-13)
dobj(closed-12, door-14)
prep_behind(door-14, them-16)
nn(Macmichael-19, Mr-18)
nsubj(set-20, Macmichael-19)
nsubj(take-23, Macmichael-19)
nsubj(allowed-31, Macmichael-19)
root(ROOT-0, set-20)
prt(set-20, out-21)
aux(take-23, to-22)
xcomp(set-20, take-23)
det(lock-25, the-24)
dobj(take-23, lock-25)
det(smithy-28, the-27)
prep_to(take-23, smithy-28)
conj_and(set-20, allowed-31)
dobj(allowed-31, Willie-32)
nsubj(go-34, Willie-32)
aux(go-34, to-33)
xcomp(allowed-31, go-34)
prep_with(go-34, him-36)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP (DT the) (NN time)))
      (NP (PRP they))
      (VP (VBD reached)
        (NP (PRP it))))
    (, ,)
    (NP (DT the) (NN snow))
    (VP (VBD was)
      (ADJP
        (NP (DT an) (NN inch))
        (JJ deep)
        (PP (IN on)
          (NP (PRP$ their) (NNS shoulders))))
      (, ,)
      (PP
        (PP (IN on)
          (NP
            (NP (NNP Willie) (POS 's))
            (NN cap)))
        (, ,)
        (CC and)
        (PP (IN on)
          (NP
            (NP (PRP$ his) (NN father) (POS 's))
            (NN hat)))))
    (. .)))

det(time-3, the-2)
prep_by(reached-5, time-3)
nsubj(reached-5, they-4)
ccomp(deep-13, reached-5)
dobj(reached-5, it-6)
det(snow-9, the-8)
nsubj(deep-13, snow-9)
cop(deep-13, was-10)
det(inch-12, an-11)
npadvmod(deep-13, inch-12)
root(ROOT-0, deep-13)
poss(shoulders-16, their-15)
prep_on(deep-13, shoulders-16)
poss(cap-21, Willie-19)
prep_on(deep-13, cap-21)
poss(father-26, his-25)
poss(hat-28, father-26)
prep_on(deep-13, hat-28)
conj_and(cap-21, hat-28)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WRB How) (JJ red))
      (S
        (NP
          (NP (DT the) (NN glow))
          (PP (IN of)
            (NP
              (NP (DT the) (NN smith) (POS 's))
              (NN fire))))
        (VP (VBD looked))))
    (. !)))

advmod(red-2, How-1)
advmod(looked-10, red-2)
det(glow-4, the-3)
nsubj(looked-10, glow-4)
det(smith-7, the-6)
poss(fire-9, smith-7)
prep_of(glow-4, fire-9)
root(ROOT-0, looked-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ great) (JJ black) (NN cavern))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ red) (NN heart))
            (PP (TO to)
              (NP (PRP it))))))
      (PP (IN in)
        (NP
          (NP (DT the) (NN midst))
          (PP (IN of)
            (NP (NNS whiteness))))))
    (. .)))

nsubj(cavern-6, It-1)
cop(cavern-6, was-2)
det(cavern-6, a-3)
amod(cavern-6, great-4)
amod(cavern-6, black-5)
root(ROOT-0, cavern-6)
det(heart-10, a-8)
amod(heart-10, red-9)
prep_with(cavern-6, heart-10)
prep_to(heart-10, it-12)
det(midst-15, the-14)
prep_in(cavern-6, midst-15)
prep_of(midst-15, whiteness-17)

(ROOT
  (S
    (NP (DT The) (NN smith))
    (VP (VBD was)
      (NP (DT a) (JJ great) (JJ powerful) (NN man))
      (, ,)
      (PP (IN with)
        (NP
          (NP (JJ bare) (NNS arms))
          (, ,)
          (CC and)
          (NP (VBN blackened) (NN face)))))
    (. .)))

det(smith-2, The-1)
nsubj(man-7, smith-2)
cop(man-7, was-3)
det(man-7, a-4)
amod(man-7, great-5)
amod(man-7, powerful-6)
root(ROOT-0, man-7)
amod(arms-11, bare-10)
prep_with(man-7, arms-11)
amod(face-15, blackened-14)
prep_with(man-7, face-15)
conj_and(arms-11, face-15)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBD entered))))
    (, ,)
    (NP
      (NP (PRP he))
      (CC and)
      (NP (CD two) (JJ other) (NNS men)))
    (VP (VBD were)
      (VP (VBG making)
        (NP
          (NP (DT the) (NN axle))
          (PP (IN of)
            (NP (DT a) (NN wheel))))))
    (. .)))

advmod(entered-3, When-1)
nsubj(entered-3, they-2)
advcl(making-11, entered-3)
nsubj(making-11, he-5)
num(men-9, two-7)
amod(men-9, other-8)
conj_and(he-5, men-9)
nsubj(making-11, men-9)
aux(making-11, were-10)
root(ROOT-0, making-11)
det(axle-13, the-12)
dobj(making-11, axle-13)
det(wheel-16, a-15)
prep_of(axle-13, wheel-16)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VBD had)
          (NP
            (NP (DT a) (JJ great) (NN lump))
            (PP (IN of)
              (NP (JJ red-hot) (NN iron))))
          (PP (IN on)
            (NP (DT the) (NN anvil))))
        (, ,)
        (CC and)
        (VP (VBD were)
          (VP (VBG knocking)
            (NP (DT a) (JJ big) (NN hole))
            (PP (IN through)
              (NP (PRP it)))))))
    (: --) (RB not)
    (S
      (VP
        (VP (VBG boring)
          (NP (PRP it)))
        (, ,)
        (CC but)
        (VP (VBG knocking)
          (NP (PRP it))
          (PP (IN through)
            (PP (IN with)
              (NP (DT a) (JJ big) (NN punch)))))))
    (. .)))

nsubj(had-2, They-1)
nsubj(knocking-15, They-1)
root(ROOT-0, had-2)
det(lump-5, a-3)
amod(lump-5, great-4)
dobj(had-2, lump-5)
amod(iron-8, red-hot-7)
prep_of(lump-5, iron-8)
det(anvil-11, the-10)
prep_on(had-2, anvil-11)
aux(knocking-15, were-14)
conj_and(had-2, knocking-15)
det(hole-18, a-16)
amod(hole-18, big-17)
dobj(knocking-15, hole-18)
prep_through(knocking-15, it-20)
neg(had-2, not-22)
parataxis(had-2, boring-23)
dobj(boring-23, it-24)
parataxis(had-2, knocking-27)
conj_but(boring-23, knocking-27)
dobj(knocking-27, it-28)
prep(knocking-27, through-29)
pcomp(through-29, with-30)
det(punch-33, a-31)
amod(punch-33, big-32)
pobj(with-30, punch-33)

(ROOT
  (S
    (NP
      (NP (CD One))
      (PP (IN of)
        (NP (DT the) (NNS men))))
    (VP
      (VP (, ,)
        (PP (IN with)
          (NP
            (NP (DT a) (NN pair))
            (PP (IN of)
              (NP (JJ tongs-like) (NNS pincers)))))
        (, ,) (VBD held)
        (S
          (NP (DT the) (NN punch))
          (ADJP (JJ steady)
            (PP (IN in)
              (NP
                (NP (DT the) (NN hole))
                (, ,)
                (SBAR (IN while)
                  (S
                    (NP (DT the) (JJ other) (CD two))
                    (VP (VBD struck)
                      (NP
                        (NP (DT the) (NN head))
                        (PP (IN of)
                          (NP (PRP it))))
                      (PP (IN with)
                        (NP
                          (NP (JJ alternate) (NNS blows))
                          (PP (IN of)
                            (NP
                              (NP (JJ mighty) (NNS hammers))
                              (VP (VBN called)
                                (NP (NNS sledges)))))))))))))))
      (, ,)
      (NP
        (NP (DT each))
        (SBAR
          (WHPP (IN of)
            (WHNP (WDT which)))
          (S
            (NP (PRP it))
            (VP (VBD took)
              (NP
                (NP (DT the) (NN strength))
                (PP (IN of)
                  (NP (CD two) (JJ brawny) (NNS arms))))
              (S
                (VP (TO to)
                  (VP (VB heave)
                    (ADJP (JJ high)
                      (PP (IN above)
                        (NP (DT the) (NN head))))
                    (PP (IN with)
                      (NP
                        (NP (DT a) (JJ great) (NN round) (NN swing))
                        (PP (IN over)
                          (NP (DT the) (NN shoulder))))))))
              (, ,)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (MD might)
                    (VP
                      (VP (VB come)
                        (PRT (RP down))
                        (PP (IN with)
                          (NP (JJ right) (JJ good) (NN force))))
                      (, ,)
                      (CC and)
                      (VP (VB drive)
                        (NP (DT the) (NN punch))
                        (PP (IN through)
                          (NP
                            (NP
                              (NP (DT the) (JJ glowing) (NN iron))
                              (, ,)
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (VP (VBD was) (, ,)
                                    (SBAR
                                      (S
                                        (NP (PRP I))
                                        (VP (MD should)
                                          (VP (VB judge))))))))
                              (, ,))
                            (ADJP
                              (NP (CD four) (NNS inches))
                              (JJ thick))))))))))))))
    (. .)))

nsubj(held-13, One-1)
det(men-4, the-3)
prep_of(One-1, men-4)
det(pair-8, a-7)
prep_with(held-13, pair-8)
amod(pincers-11, tongs-like-10)
prep_of(pair-8, pincers-11)
root(ROOT-0, held-13)
det(punch-15, the-14)
nsubj(steady-16, punch-15)
xcomp(held-13, steady-16)
det(hole-19, the-18)
prep_in(steady-16, hole-19)
mark(struck-25, while-21)
det(two-24, the-22)
amod(two-24, other-23)
nsubj(struck-25, two-24)
dep(hole-19, struck-25)
det(head-27, the-26)
dobj(struck-25, head-27)
prep_of(head-27, it-29)
amod(blows-32, alternate-31)
prep_with(struck-25, blows-32)
amod(hammers-35, mighty-34)
prep_of(blows-32, hammers-35)
vmod(hammers-35, called-36)
dobj(called-36, sledges-37)
dobj(held-13, each-39)
prep_of(took-43, each-39)
nsubj(took-43, it-42)
rcmod(each-39, took-43)
det(strength-45, the-44)
dobj(took-43, strength-45)
num(arms-49, two-47)
amod(arms-49, brawny-48)
prep_of(strength-45, arms-49)
aux(heave-51, to-50)
vmod(took-43, heave-51)
acomp(heave-51, high-52)
det(head-55, the-54)
prep_above(high-52, head-55)
det(swing-60, a-57)
amod(swing-60, great-58)
nn(swing-60, round-59)
prep_with(heave-51, swing-60)
det(shoulder-63, the-62)
prep_over(swing-60, shoulder-63)
mark(come-68, that-65)
nsubj(come-68, it-66)
nsubj(drive-76, it-66)
aux(come-68, might-67)
ccomp(took-43, come-68)
prt(come-68, down-69)
amod(force-73, right-71)
amod(force-73, good-72)
prep_with(come-68, force-73)
ccomp(took-43, drive-76)
conj_and(come-68, drive-76)
det(punch-78, the-77)
dobj(drive-76, punch-78)
det(iron-82, the-80)
amod(iron-82, glowing-81)
prep_through(drive-76, iron-82)
nsubj(was-85, iron-82)
rcmod(iron-82, was-85)
nsubj(judge-89, I-87)
aux(judge-89, should-88)
ccomp(was-85, judge-89)
num(inches-92, four-91)
npadvmod(thick-93, inches-92)
amod(iron-82, thick-93)

(ROOT
  (S
    (S
      (NP (PDT All) (DT this) (NNP Willie))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could)
              (VP (VB understand)))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD knew)
              (SBAR (IN that)
                (S
                  (NP (NN fire))
                  (VP (VBD made)
                    (S
                      (NP (DT the) (JJS hardest) (NN metal))
                      (ADJP (JJ soft)))))))))))
    (: ;)
    (S (CC but)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (MD could) (RB n't)
            (ADVP (IN at) (DT all))
            (VP (VB understand)))))
      (VP (VBD was)
        (NP (DT this))))
    (: :)
    (S
      (SBAR
        (ADVP (DT every) (RB now)
          (CC and)
          (RB then))
        (S
          (NP (PRP they))
          (VP (VBD stopped)
            (S
              (VP (VBG heaving)
                (NP (PRP$ their) (JJ mighty) (NNS sledges)))))))
      (, ,)
      (NP (DT the) (JJ third) (NN man))
      (VP (VBD took)
        (NP (DT the) (NN punch))
        (PRT (RP out))
        (PP (IN of)
          (NP (DT the) (NN hole)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN smith))
        (SBAR
          (S
            (NP
              (NP (PRP himself))
              (, ,)
              (SBAR
                (WHNP (WP$ whose) (NN name))
                (S
                  (VP (VBD was)
                    (NP
                      (NP (NNP Willet))
                      (PRN (-LRB- -LRB-)
                        (CC and)
                        (NP
                          (NP (JJ _) (NN will))
                          (SBAR
                            (S
                              (NP (PRP it))
                              (VP (VBD _)
                                (SBAR
                                  (S
                                    (NP (PRP he))
                                    (VP (VBD did)
                                      (PP (IN with)
                                        (NP
                                          (NP (DT a) (NN vengeance))
                                          (, ,)
                                          (SBAR
                                            (WHADVP (WRB when))
                                            (S
                                              (NP (PRP he))
                                              (VP (VBD had)
                                                (NP
                                                  (NP (NN anything))
                                                  (PP (IN on)
                                                    (NP (DT the) (NN anvil))))
                                                (PP (IN before)
                                                  (NP (PRP him)))))))))))))))
                        (-RRB- -RRB-))))))
              (, ,))
            (VP (VBN caught)
              (PRT (RP up))
              (NP (PRP$ his) (NNS tongs))
              (PP (IN in)
                (NP (PRP$ his) (NN hand)))
              (, ,)
              (ADVP (RB then))))))
      (VP
        (VP (VBD picked)
          (PRT (RP up))
          (NP
            (NP (DT a) (JJ little) (NN bit))
            (PP (IN of)
              (NP
                (NP (JJ black) (NN coal))
                (PP (IN with)
                  (NP (DT the) (NNS tongs)))))))
        (, ,)
        (CC and)
        (VP (VBD dropped)
          (NP (PRP it))
          (PP (IN into)
            (NP (DT the) (NN hole)))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT the) (NN punch))
              (VP (VBD had)
                (VP (VBN been))))))
        (, ,)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP it))
            (VP
              (VP (VBD took)
                (NP (NN fire))
                (ADVP (RB immediately)))
              (CC and)
              (VP (VBD blazed)
                (PRT (RP up))))))))
    (. .)))

predet(Willie-3, All-1)
det(Willie-3, this-2)
nsubj(thought-4, Willie-3)
root(ROOT-0, thought-4)
nsubj(understand-7, he-5)
aux(understand-7, could-6)
ccomp(thought-4, understand-7)
mark(knew-11, for-9)
nsubj(knew-11, he-10)
advcl(thought-4, knew-11)
mark(made-14, that-12)
nsubj(made-14, fire-13)
ccomp(knew-11, made-14)
det(metal-17, the-15)
amod(metal-17, hardest-16)
nsubj(soft-18, metal-17)
xcomp(made-14, soft-18)
cc(this-29, but-20)
dobj(understand-27, what-21)
nsubj(understand-27, he-22)
aux(understand-27, could-23)
neg(understand-27, n't-24)
advmod(understand-27, at-25)
pobj(at-25, all-26)
csubj(this-29, understand-27)
cop(this-29, was-28)
conj_and(thought-4, this-29)
dep(now-32, every-31)
advmod(stopped-36, now-32)
conj_and(now-32, then-34)
advmod(stopped-36, then-34)
nsubj(stopped-36, they-35)
advcl(took-45, stopped-36)
xcomp(stopped-36, heaving-37)
poss(sledges-40, their-38)
amod(sledges-40, mighty-39)
dobj(heaving-37, sledges-40)
det(man-44, the-42)
amod(man-44, third-43)
nsubj(took-45, man-44)
conj_and(thought-4, took-45)
det(punch-47, the-46)
dobj(took-45, punch-47)
det(hole-51, the-50)
prep_out_of(took-45, hole-51)
det(smith-55, the-54)
nsubj(picked-94, smith-55)
nsubj(dropped-107, smith-55)
poss(name-59, himself-56)
nsubj(caught-85, himself-56)
nsubj(Willet-61, name-59)
cop(Willet-61, was-60)
rcmod(himself-56, Willet-61)
cc(will-65, and-63)
amod(will-65, _-64)
dep(Willet-61, will-65)
nsubj(_-67, it-66)
rcmod(will-65, _-67)
nsubj(did-69, he-68)
ccomp(_-67, did-69)
det(vengeance-72, a-71)
prep_with(did-69, vengeance-72)
tmod(had-76, vengeance-72)
advmod(had-76, when-74)
nsubj(had-76, he-75)
rcmod(vengeance-72, had-76)
dobj(had-76, anything-77)
det(anvil-80, the-79)
prep_on(anything-77, anvil-80)
prep_before(had-76, him-82)
rcmod(smith-55, caught-85)
prt(caught-85, up-86)
poss(tongs-88, his-87)
dobj(caught-85, tongs-88)
poss(hand-91, his-90)
prep_in(caught-85, hand-91)
advmod(caught-85, then-93)
conj_and(thought-4, picked-94)
prt(picked-94, up-95)
det(bit-98, a-96)
amod(bit-98, little-97)
dobj(picked-94, bit-98)
amod(coal-101, black-100)
prep_of(bit-98, coal-101)
det(tongs-104, the-103)
prep_with(coal-101, tongs-104)
conj_and(thought-4, dropped-107)
conj_and(picked-94, dropped-107)
dobj(dropped-107, it-108)
det(hole-111, the-110)
prep_into(dropped-107, hole-111)
advmod(been-116, where-112)
det(punch-114, the-113)
nsubj(been-116, punch-114)
aux(been-116, had-115)
advcl(dropped-107, been-116)
advmod(took-120, where-118)
nsubj(took-120, it-119)
nsubj(blazed-124, it-119)
conj_and(thought-4, took-120)
advcl(picked-94, took-120)
conj_and(picked-94, took-120)
dobj(took-120, fire-121)
advmod(took-120, immediately-122)
advcl(picked-94, blazed-124)
conj_and(picked-94, blazed-124)
conj_and(took-120, blazed-124)
prt(blazed-124, up-125)

(ROOT
  (S (RB Then)
    (ADVP (RB in))
    (SINV
      (VP (VBD went))
      (NP
        (NP (DT the) (NN punch))
        (ADVP (RB again))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB again))
      (NP (DT the) (JJ huge) (NN hammering))
      (VP (VBD commenced) (, ,)
        (PP (IN with)
          (NP (JJ such) (NNS bangs)
            (CC and)
            (NNS blows)))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN smith))
            (VP (VBD was)
              (ADJP (JJ wise)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (NP (DT no) (NN floor))
                      (PP (TO to)
                        (NP (PRP$ his) (NN smithy)))
                      (, ,)
                      (SBAR (IN for)
                        (S
                          (NP (PRP they))
                          (VP (MD would)
                            (ADVP (RB surely))
                            (VP (VB have)
                              (VP (VBN knocked)
                                (NP
                                  (NP (DT a) (NN hole))
                                  (PP (IN in)
                                    (NP (DT that))))
                                (, ,)
                                (SBAR (IN though)
                                  (S
                                    (NP (PRP they))
                                    (VP (VBD were) (RB not)
                                      (ADJP (JJ able)
                                        (S
                                          (VP (TO to)
                                            (VP (VB knock)
                                              (NP (DT the) (NN anvil))
                                              (PRT (RP down))
                                              (ADVP (RB halfway))
                                              (PP (IN into)
                                                (NP (DT the) (NN earth)))
                                              (, ,)
                                              (SBAR (IN as)
                                                (S
                                                  (NP
                                                    (NP (DT the) (JJ giant) (NN smith))
                                                    (PP (IN in)
                                                      (NP (DT the) (NN story))))
                                                  (VP (VBD did)))))))))))))))))))))))))
    (. .)))

advmod(went-3, Then-1)
advmod(went-3, in-2)
root(ROOT-0, went-3)
det(punch-5, the-4)
nsubj(went-3, punch-5)
advmod(punch-5, again-6)
advmod(commenced-13, again-9)
det(hammering-12, the-10)
amod(hammering-12, huge-11)
nsubj(commenced-13, hammering-12)
conj_and(went-3, commenced-13)
amod(bangs-17, such-16)
prep_with(commenced-13, bangs-17)
prep_with(commenced-13, blows-19)
conj_and(bangs-17, blows-19)
mark(wise-25, that-21)
det(smith-23, the-22)
nsubj(wise-25, smith-23)
nsubj(have-27, smith-23)
cop(wise-25, was-24)
ccomp(commenced-13, wise-25)
aux(have-27, to-26)
xcomp(wise-25, have-27)
neg(floor-29, no-28)
dobj(have-27, floor-29)
poss(smithy-32, his-31)
prep_to(have-27, smithy-32)
mark(knocked-39, for-34)
nsubj(knocked-39, they-35)
aux(knocked-39, would-36)
advmod(knocked-39, surely-37)
aux(knocked-39, have-38)
advcl(have-27, knocked-39)
det(hole-41, a-40)
dobj(knocked-39, hole-41)
prep_in(hole-41, that-43)
mark(able-49, though-45)
nsubj(able-49, they-46)
nsubj(knock-51, they-46)
cop(able-49, were-47)
neg(able-49, not-48)
advcl(knocked-39, able-49)
aux(knock-51, to-50)
xcomp(able-49, knock-51)
det(anvil-53, the-52)
dobj(knock-51, anvil-53)
prt(knock-51, down-54)
advmod(knock-51, halfway-55)
det(earth-58, the-57)
prep_into(knock-51, earth-58)
mark(did-67, as-60)
det(smith-63, the-61)
amod(smith-63, giant-62)
nsubj(did-67, smith-63)
det(story-66, the-65)
prep_in(smith-63, story-66)
advcl(knock-51, did-67)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (DT this))
        (VP (VBD was)
          (VP (VBG going)
            (PRT (RP on))))))
    (, ,)
    (S
      (NP
        (NP (NNP Mr) (NNP Macmichael))
        (, ,)
        (VP (VBG perceiving)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN operation))
              (VP (MD ought)
                (S (RB not)
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN interrupted)
                        (ADVP (DT any) (RBR more))
                        (PP (IN than)
                          (NP (DT a) (JJ surgical) (NN one)))))))))))
        (, ,))
      (VP (VBD stood)
        (ADVP (RB quite)
          (VP
            (ADVP (RB still))
            (VBG waiting)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Willie))
      (VP (VBD stood)
        (ADVP (RB also))
        (: --)
        (S
          (VP (VBN absorbed)
            (PP (IN in)
              (S
                (VP
                  (VP (VBG staring))
                  (, ,)
                  (CC and)
                  (VP
                    (ADVP (RB gradually))
                    (VBG creeping)
                    (NP (NNS nearer)
                      (CC and)
                      (NNS nearer))
                    (PP (TO to)
                      (NP (DT the) (NN anvil)))
                    (, ,)
                    (SBAR (IN for)
                      (S
                        (NP (EX there))
                        (VP (VBD were)
                          (NP
                            (NP (DT no) (NN sparks))
                            (VP (VBG flying)
                              (PRT (RP about))
                              (S
                                (VP (TO to)
                                  (VP (VB make)
                                    (S
                                      (NP (PRP it))
                                      (ADJP (JJ dangerous)
                                        (PP (TO to)
                                          (NP (DT the) (NNS eyes))))))))
                              (, ,)
                              (SBAR (IN as)
                                (S
                                  (NP (EX there))
                                  (VP (MD would)
                                    (VP (VB have)
                                      (VP (VBN been)
                                        (SBAR (IN if)
                                          (S
                                            (NP (PRP they))
                                            (VP (VBD had)
                                              (VP (VBN been)
                                                (VP (VBG striking)
                                                  (NP
                                                    (NP (DT the) (NN iron))
                                                    (ADVP (PRP itself))
                                                    (PP (RB instead) (IN of)
                                                      (NP (DT the) (NN punch)))))))))))))))))))))))))))
    (. .)))

mark(going-4, While-1)
nsubj(going-4, this-2)
aux(going-4, was-3)
advcl(stood-26, going-4)
prt(going-4, on-5)
nn(Macmichael-8, Mr-7)
nsubj(stood-26, Macmichael-8)
vmod(Macmichael-8, perceiving-10)
mark(ought-14, that-11)
det(operation-13, the-12)
nsubj(ought-14, operation-13)
nsubjpass(interrupted-18, operation-13)
ccomp(perceiving-10, ought-14)
neg(interrupted-18, not-15)
aux(interrupted-18, to-16)
auxpass(interrupted-18, be-17)
xcomp(ought-14, interrupted-18)
dep(more-20, any-19)
advmod(interrupted-18, more-20)
det(one-24, a-22)
amod(one-24, surgical-23)
prep_than(interrupted-18, one-24)
root(ROOT-0, stood-26)
advmod(stood-26, quite-27)
advmod(waiting-29, still-28)
dep(quite-27, waiting-29)
nsubj(stood-33, Willie-32)
conj_and(stood-26, stood-33)
advmod(stood-33, also-34)
parataxis(stood-33, absorbed-36)
prepc_in(absorbed-36, staring-38)
advmod(creeping-42, gradually-41)
prepc_in(absorbed-36, creeping-42)
conj_and(staring-38, creeping-42)
dobj(creeping-42, nearer-43)
dobj(creeping-42, nearer-45)
conj_and(nearer-43, nearer-45)
det(anvil-48, the-47)
prep_to(creeping-42, anvil-48)
mark(were-52, for-50)
expl(were-52, there-51)
advcl(creeping-42, were-52)
neg(sparks-54, no-53)
nsubj(were-52, sparks-54)
vmod(sparks-54, flying-55)
prt(flying-55, about-56)
aux(make-58, to-57)
xcomp(flying-55, make-58)
nsubj(dangerous-60, it-59)
xcomp(make-58, dangerous-60)
det(eyes-63, the-62)
prep_to(dangerous-60, eyes-63)
mark(been-69, as-65)
expl(been-69, there-66)
aux(been-69, would-67)
aux(been-69, have-68)
advcl(flying-55, been-69)
mark(striking-74, if-70)
nsubj(striking-74, they-71)
aux(striking-74, had-72)
aux(striking-74, been-73)
advcl(been-69, striking-74)
det(iron-76, the-75)
dobj(striking-74, iron-76)
advmod(iron-76, itself-77)
det(punch-81, the-80)
prep_instead_of(iron-76, punch-81)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (S
          (ADVP (RB soon) (RB as))
          (NP (DT the) (NN punch))
          (VP (VBD was)
            (VP (VBN driven)
              (PP (IN through)))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN smith))
          (VP (VBD had)
            (VP
              (VP (VBN dropped)
                (NP (PRP$ his) (NN sledge-hammer)))
              (, ,)
              (CC and)
              (VP (VBN begun)
                (S
                  (VP (TO to)
                    (VP (VB wipe)
                      (NP (PRP$ his) (NN forehead)))))))))))
    (, ,)
    (NP (NNP Willie))
    (VP (VBD spoke))
    (. .)))

mark(driven-7, As-1)
advmod(as-3, soon-2)
advmod(driven-7, as-3)
det(punch-5, the-4)
nsubjpass(driven-7, punch-5)
auxpass(driven-7, was-6)
advcl(spoke-26, driven-7)
prep(driven-7, through-8)
det(smith-12, the-11)
nsubj(dropped-14, smith-12)
nsubj(begun-19, smith-12)
nsubj(wipe-21, smith-12)
aux(dropped-14, had-13)
conj_and(driven-7, dropped-14)
advcl(spoke-26, dropped-14)
poss(sledge-hammer-16, his-15)
dobj(dropped-14, sledge-hammer-16)
conj_and(driven-7, begun-19)
conj_and(dropped-14, begun-19)
aux(wipe-21, to-20)
xcomp(begun-19, wipe-21)
poss(forehead-23, his-22)
dobj(wipe-21, forehead-23)
nsubj(spoke-26, Willie-25)
root(ROOT-0, spoke-26)

(ROOT
  (S (`` ``)
    (NP (NNP Mr) (NNP Willet))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD knew)
            (NP
              (NP (DT every) (NN man))
              (PP (IN of)
                (NP
                  (NP (DT any) (NN standing))
                  (PP (IN in)
                    (NP (DT the) (NN village))))))
            (PP (IN by)
              (NP
                (NP (NN name)
                  (CC and)
                  (NN profession))
                (, ,) (`` ``)
                (SBARQ
                  (WHADVP (WRB why))
                  (SQ (VBD did)
                    (NP (PRP you))
                    (VP (VB put)
                      (NP
                        (NP (NNS bits))
                        (PP (IN of)
                          (NP (NN coal))))
                      (PP (IN into)
                        (NP
                          (NP (DT the) (NN hole))
                          (SBAR
                            (S
                              (NP (PRP you))
                              (VP (VBD were)
                                (VP (VBG making))))))))))))))))
    (. ?)))

nn(Willet-3, Mr-2)
nsubj(said-7, Willet-3)
nsubj(said-7, he-6)
root(ROOT-0, said-7)
mark(knew-11, for-9)
nsubj(knew-11, he-10)
advcl(said-7, knew-11)
det(man-13, every-12)
dobj(knew-11, man-13)
det(standing-16, any-15)
prep_of(man-13, standing-16)
det(village-19, the-18)
prep_in(standing-16, village-19)
prep_by(knew-11, name-21)
prep_by(knew-11, profession-23)
conj_and(name-21, profession-23)
advmod(put-29, why-26)
aux(put-29, did-27)
nsubj(put-29, you-28)
dep(name-21, put-29)
dobj(put-29, bits-30)
prep_of(bits-30, coal-32)
det(hole-35, the-34)
prep_into(put-29, hole-35)
nsubj(making-38, you-36)
aux(making-38, were-37)
rcmod(hole-35, making-38)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should)
      (VP (VB have)
        (VP (VBN thought)
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD would)
                (VP
                  (VP (VB be)
                    (PP (IN in)
                      (NP (DT the) (NN way))))
                  (CONJP (RB rather) (IN than))
                  (VP (VB help)
                    (NP (PRP you))))))))))
    (. .) ('' '')))

nsubj(thought-4, I-1)
aux(thought-4, should-2)
aux(thought-4, have-3)
root(ROOT-0, thought-4)
nsubj(be-7, it-5)
nsubj(help-13, it-5)
aux(be-7, would-6)
ccomp(thought-4, be-7)
det(way-10, the-9)
prep_in(be-7, way-10)
ccomp(thought-4, help-13)
conj_negcc(be-7, help-13)
dobj(help-13, you-14)

(ROOT
  (S
    (S (`` ``) (IN So)
      (NP (PRP it))
      (VP
        (VP (MD would))
        (, ,)
        (NP
          (NP (PRP$ my) (JJ little) (NN man))
          (, ,) ('' '')
          (VP (VBN answered)
            (NP
              (NP (NNP Willet))
              (, ,)
              (PP (IN with)
                (NP (DT no) (JJ grim)
                  (ADJP (IN though) (JJ grimy))
                  (NN smile)))
              (, ,))
            (`` ``)
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBD did) (RB n't)
                  (VP
                    (VP (VB take)
                      (NP (NN fire)))
                    (CC and)
                    (VP (VB keep)
                      (S
                        (VP (VBG getting)
                          (PRT (RP out))
                          (PP (IN of)
                            (NP (DT the) (NN way)))
                          (NP (PDT all) (DT the) (NN time)))))))))))))
    (NP (PRP it))
    (VP (VBD kept)
      (PRT (RP up))
      (NP (DT the) (NN heat)))
    (. .)))

dep(would-4, So-2)
nsubj(would-4, it-3)
dep(kept-39, would-4)
poss(man-8, my-6)
amod(man-8, little-7)
dobj(would-4, man-8)
vmod(man-8, answered-11)
dobj(answered-11, Willet-12)
neg(smile-19, no-15)
amod(smile-19, grim-16)
dep(grimy-18, though-17)
amod(smile-19, grimy-18)
prep_with(Willet-12, smile-19)
mark(take-26, if-22)
nsubj(take-26, it-23)
nsubj(keep-29, it-23)
aux(take-26, did-24)
neg(take-26, n't-25)
advcl(answered-11, take-26)
dobj(take-26, fire-27)
advcl(answered-11, keep-29)
conj_and(take-26, keep-29)
xcomp(keep-29, getting-30)
det(way-34, the-33)
prep_out_of(getting-30, way-34)
predet(time-37, all-35)
det(time-37, the-36)
dobj(getting-30, time-37)
nsubj(kept-39, it-38)
root(ROOT-0, kept-39)
prt(kept-39, up-40)
det(heat-42, the-41)
dobj(kept-39, heat-42)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP depend)
              (PP (IN on)
                (NP
                  (NP (DT the) (NN heat))
                  (PP (IN for)
                    (S
                      (VP (VBG getting)
                        (PRT (RP through))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP
            (ADJP (RB much) (JJR less))
            (NN trouble)
            (S
              (VP (TO to)
                (VP (VB drop)
                  (NP
                    (NP
                      (NP
                        (NP (DT a) (NN bit))
                        (PP (IN of)
                          (NP (NN coal))))
                      (CC or)
                      (NP
                        (NP (CD two))
                        (PP (IN into)
                          (NP (DT the) (NN hole)))))
                    (PRN (, ,)
                      (SBAR (IN than)
                        (S
                          (VP (TO to)
                            (VP
                              (VP (VB take)
                                (PRT (RP up))
                                (NP (DT the) (JJ big) (NN axle)))
                              (CC and)
                              (VP (VB lay)
                                (NP (PRP it))
                                (PP (IN in)
                                  (NP (DT the) (NN fire)))
                                (ADVP (RB again)))))))
                      (, ,))
                    (CONJP (RB not) (TO to) (VB mention))
                    (NP
                      (NP (DT the) (NN time))
                      (CC and)
                      (NP
                        (NP (DT the) (NN quantity))
                        (PP (IN of)
                          (NP (NN coal))))))))))))
      (NP (PRP it))
      (VP (MD would)
        (VP (VB take)
          (S
            (VP (TO to)
              (VP (VB heat)
                (NP (PRP it))
                (PRT (RP up))
                (ADVP (RB afresh))))))))
    (. .) ('' '')))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
nsubj(depend-4, we-3)
ccomp(see-2, depend-4)
det(heat-7, the-6)
prep_on(depend-4, heat-7)
prepc_for(heat-7, getting-9)
prt(getting-9, through-10)
nsubj(trouble-17, it-13)
cop(trouble-17, 's-14)
advmod(less-16, much-15)
amod(trouble-17, less-16)
dep(take-57, trouble-17)
aux(drop-19, to-18)
vmod(trouble-17, drop-19)
det(bit-21, a-20)
dobj(drop-19, bit-21)
prep_of(bit-21, coal-23)
dobj(drop-19, two-25)
conj_or(bit-21, two-25)
det(hole-28, the-27)
prep_into(two-25, hole-28)
mark(take-32, than-30)
aux(take-32, to-31)
dep(bit-21, take-32)
prt(take-32, up-33)
det(axle-36, the-34)
amod(axle-36, big-35)
dobj(take-32, axle-36)
dep(bit-21, lay-38)
conj_and(take-32, lay-38)
dobj(lay-38, it-39)
det(fire-42, the-41)
prep_in(lay-38, fire-42)
advmod(lay-38, again-43)
det(time-49, the-48)
dobj(drop-19, time-49)
conj_and(bit-21, time-49)
det(quantity-52, the-51)
conj_and(bit-21, quantity-52)
conj_and(time-49, quantity-52)
prep_of(quantity-52, coal-54)
nsubj(take-57, it-55)
nsubj(heat-59, it-55)
aux(take-57, would-56)
conj_and(see-2, take-57)
aux(heat-59, to-58)
xcomp(take-57, heat-59)
dobj(heat-59, it-60)
prt(heat-59, up-61)
advmod(heat-59, afresh-62)

(ROOT
  (S (`` ``)
    (CC But)
    (NP
      (NP (JJ such) (JJ little) (NNS bits))
      (PP (IN of)
        (NP (NN coal))))
    (VP (MD could) (RB n't)
      (VP (VB do)
        (NP (RB much))))
    (. ?) ('' '')))

cc(do-10, But-2)
amod(bits-5, such-3)
amod(bits-5, little-4)
nsubj(do-10, bits-5)
prep_of(bits-5, coal-7)
aux(do-10, could-8)
neg(do-10, n't-9)
root(ROOT-0, do-10)
dobj(do-10, much-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP They))
        (VP (MD could)
          (VP (VB do)
            (NP (RB enough)))))
      (, ,)
      (CC and)
      (S
        (NP (PDT all) (DT that))
        (VP (VBZ 's)
          (ADJP (JJR less))
          (SBAR (IN after)
            (S
              (NP (DT that))
              (VP (VBZ is)
                (VP (VBG saving))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (DT the) (NN smith))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD was)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP
                  (NP (DT those) (NNS men))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (MD can) (RB not) (RB only)
                        (VP (VB do)
                          (NP (DT a) (NN thing) (NN right)))
                        (CC but)
                        (VP (VB give)
                          (NP
                            (NP (DT a) (NN reason))
                            (PP (IN for)
                              (NP (PRP it)))))))))))))))
    (. .)))

nsubj(do-4, They-2)
aux(do-4, could-3)
ccomp(said-18, do-4)
dobj(do-4, enough-5)
predet(that-9, all-8)
nsubj(less-11, that-9)
cop(less-11, 's-10)
conj_and(do-4, less-11)
ccomp(said-18, less-11)
mark(saving-15, after-12)
nsubj(saving-15, that-13)
aux(saving-15, is-14)
advcl(less-11, saving-15)
root(ROOT-0, said-18)
det(smith-20, the-19)
nsubj(said-18, smith-20)
nsubj(one-24, smith-20)
cop(one-24, was-23)
rcmod(smith-20, one-24)
det(men-27, those-26)
prep_of(one-24, men-27)
nsubj(do-32, men-27)
nsubj(give-37, men-27)
aux(do-32, can-29)
neg(do-32, not-30)
advmod(do-32, only-31)
rcmod(men-27, do-32)
det(right-35, a-33)
nn(right-35, thing-34)
dobj(do-32, right-35)
rcmod(men-27, give-37)
conj_but(do-32, give-37)
det(reason-39, a-38)
dobj(give-37, reason-39)
prep_for(reason-39, it-41)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP see)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD was)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB put)
                    (NP (DT the) (JJ little) (NNS bits))
                    (ADVP (RB just))
                    (PP (IN in)
                      (NP (DT the) (JJ right) (NN place)))))))))))
    (. .) ('' '')))

nsubj(see-3, You-2)
root(ROOT-0, see-3)
nsubj(able-6, I-4)
nsubj(put-8, I-4)
cop(able-6, was-5)
ccomp(see-3, able-6)
aux(put-8, to-7)
xcomp(able-6, put-8)
det(bits-11, the-9)
amod(bits-11, little-10)
dobj(put-8, bits-11)
advmod(put-8, just-12)
det(place-16, the-14)
amod(place-16, right-15)
prep_in(put-8, place-16)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP see))
    (. !)))

nsubj(see-3, I-2)
root(ROOT-0, see-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP see))
    (. !) ('' '')))

nsubj(see-2, I-1)
root(ROOT-0, see-2)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Willie-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP understand))
    (. !)))

nsubj(understand-3, I-2)
root(ROOT-0, understand-3)

(ROOT
  (S (CC But)
    (, ,)
    (ADVP (RB papa))
    (, ,)
    (VP (VBP do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (NNP Mr) (NNP Willet))
                (VP (VBZ is)
                  (NP (DT the) (JJ proper) (NN person)
                    (S
                      (VP (TO to)
                        (VP (VB ask)
                          (S
                            (VP (TO to)
                              (VP (VB set)
                                (NP (PRP$ your) (NN lock) (NN right))))))))))))))))
    (. ?) ('' '')))

cc(do-5, But-1)
advmod(do-5, papa-3)
root(ROOT-0, do-5)
nsubj(think-7, you-6)
ccomp(do-5, think-7)
nn(Willet-9, Mr-8)
nsubj(person-13, Willet-9)
cop(person-13, is-10)
det(person-13, the-11)
amod(person-13, proper-12)
ccomp(think-7, person-13)
aux(ask-15, to-14)
vmod(person-13, ask-15)
aux(set-17, to-16)
xcomp(ask-15, set-17)
poss(right-20, your-18)
nn(right-20, lock-19)
dobj(set-17, right-20)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have) (RB n't)
        (NP
          (NP (DT a) (NN doubt))
          (PP (IN of)
            (NP (PRP it))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Macmichael))
    (, ,)
    (S
      (VP
        (VP (VBG taking)
          (NP (PRP it))
          (ADVP (RB out))
          (PP (IN of)
            (NP (PRP$ his) (JJ greatcoat) (NN pocket))))
        (, ,)
        (CC and)
        (VP (VBG unfolding)
          (NP
            (NP (DT the) (NN piece))
            (PP (IN of)
              (NP (NN paper)))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN wrapped)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(have-3, I-2)
ccomp(said-11, have-3)
neg(have-3, n't-4)
det(doubt-6, a-5)
dobj(have-3, doubt-6)
prep_of(doubt-6, it-8)
root(ROOT-0, said-11)
nn(Macmichael-13, Mr-12)
nsubj(said-11, Macmichael-13)
vmod(said-11, taking-15)
dobj(taking-15, it-16)
poss(pocket-21, his-19)
amod(pocket-21, greatcoat-20)
prep_out_of(taking-15, pocket-21)
vmod(said-11, unfolding-24)
conj_and(taking-15, unfolding-24)
det(piece-26, the-25)
dobj(unfolding-24, piece-26)
prep_in(wrapped-33, piece-26)
prep_of(piece-26, paper-28)
nsubj(wrapped-33, he-31)
aux(wrapped-33, had-32)
rcmod(piece-26, wrapped-33)
dobj(wrapped-33, it-34)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB make)
        (NP
          (NP (DT a) (NN question))
          (PP (IN of)
            (NP (PRP it))))))
    (. ?) ('' '')))

advmod(make-5, Why-2)
aux(make-5, do-3)
nsubj(make-5, you-4)
root(ROOT-0, make-5)
det(question-7, a-6)
dobj(make-5, question-7)
prep_of(question-7, it-9)

(ROOT
  (S (`` ``)
    (PP (IN Because)
      (NP
        (NP (NN look))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (JJ great) (JJ big) (JJ huge) (NNS things))))))
    (NP (PRP he))
    (VP (VBZ does))
    (. !)))

dep(things-8, look-3)
prep_because(does-10, look-3)
amod(things-8, great-5)
amod(things-8, big-6)
amod(things-8, huge-7)
rcmod(look-3, things-8)
nsubj(does-10, he-9)
root(ROOT-0, does-10)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (DT those) (JJ tremendous) (NNS hammers))
      (VP (VB set)
        (NP (PDT such) (DT a) (JJ little) (NN thing))
        (PP (IN as)
          (NP (DT that) (NN right)))))
    (. ?)))

advmod(set-6, How-1)
aux(set-6, could-2)
det(hammers-5, those-3)
amod(hammers-5, tremendous-4)
nsubj(set-6, hammers-5)
root(ROOT-0, set-6)
predet(thing-10, such-7)
det(thing-10, a-8)
amod(thing-10, little-9)
dobj(set-6, thing-10)
det(right-13, that-12)
prep_as(set-6, right-13)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD would)
      (VP (VB knock)
        (NP (PRP it))
        (ADVP (RB all)
          (PP (TO to)
            (NP (NNS pieces))))))
    (. .)))

nsubj(knock-3, They-1)
aux(knock-3, would-2)
root(ROOT-0, knock-3)
dobj(knock-3, it-4)
advmod(knock-3, all-5)
prep_to(all-5, pieces-7)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD had)
            (ADVP (RBR better))
            (VP (VB take)
              (NP (PRP it))
              (PP (TO to)
                (NP (DT the) (NN watchmaker))))))))
    (. ?) ('' '')))

nsubj(think-4, Do-1)
neg(think-4, n't-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj(take-8, you-5)
aux(take-8, had-6)
advmod(take-8, better-7)
ccomp(think-4, take-8)
dobj(take-8, it-9)
det(watchmaker-12, the-11)
prep_to(take-8, watchmaker-12)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD did))))
    (, ,)
    (NP (NNP Willie))
    (, ,)
    (PRN
      (SINV (VBP do)
        (NP (PRP you))
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (MD would)
                (VP (VB say)
                  (NP (DT the) (NN moment)))))))))
    (NP (PRP you))
    (VP (VBD saw)
      (NP (PRP him))
      (PP (IN at)
        (NP (NN work))))
    (. ?) ('' '')))

mark(did-4, If-2)
nsubj(did-4, I-3)
advcl(saw-18, did-4)
nsubj(saw-18, Willie-6)
aux(know-10, do-8)
nsubj(know-10, you-9)
parataxis(saw-18, know-10)
dobj(say-14, what-11)
nsubj(say-14, you-12)
aux(say-14, would-13)
ccomp(know-10, say-14)
det(moment-16, the-15)
dobj(say-14, moment-16)
nsubj(saw-18, you-17)
root(ROOT-0, saw-18)
dobj(saw-18, him-19)
prep_at(saw-18, work-21)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH No))
    (, ,)
    (NP (NN papa))
    (. .)))

discourse(papa-4, No-2)
root(ROOT-0, papa-4)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB say)))
    (. ?) ('' '')))

dobj(say-4, What-1)
aux(say-4, should-2)
nsubj(say-4, I-3)
root(ROOT-0, say-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD would)
        (VP (VB say) (, ,) (`` `)
          (SQ (VBP Do) (RB n't)
            (NP (PRP you))
            (VP (VB think))))))
    (, ,)
    (S
      (S
        (ADJP (JJ papa)))
      (, ,)
      (NP (PRP you))
      (VP (VBD had)
        (ADVP (RBR better))
        (VP (VB take)
          (NP (PRP it))
          (PRT (RP back))
          (PP (TO to)
            (NP (DT the) (NN smith))))))
    (. ?) ('' '')))

nsubj(say-4, You-2)
aux(say-4, would-3)
root(ROOT-0, say-4)
aux(think-10, Do-7)
neg(think-10, n't-8)
nsubj(think-10, you-9)
dep(say-4, think-10)
ccomp(take-17, papa-12)
nsubj(take-17, you-14)
aux(take-17, had-15)
advmod(take-17, better-16)
parataxis(say-4, take-17)
dobj(take-17, it-18)
prt(take-17, back-19)
det(smith-22, the-21)
prep_to(take-17, smith-22)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB say)
        (NP (DT that))))
    (. ?) ('' '')))

cc(say-6, But-2)
advmod(say-6, why-3)
aux(say-6, should-4)
nsubj(say-6, I-5)
root(ROOT-0, say-6)
dobj(say-6, that-7)

(ROOT
  (S (`` ``)
    (SBAR (IN Because) (, ,)
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBD saw)
              (NP (PRP$ his) (NNS tools))
              (PP (IN beside)
                (NP (DT this) (NN lock))))))
        (, ,)
        (NP (PRP you))
        (VP (MD would)
          (VP (VB think)
            (S
              (S
                (NP (DT the) (NNS tools))
                (ADJP (RB so) (JJ small)))
              (CC and)
              (S
                (NP (DT the) (NN lock))
                (ADJP (RB so) (JJ huge))))))))
    (, ,)
    (NP (DT that) (NN nothing))
    (VP (MD could)
      (VP (VB be)
        (VP (VBN done)
          (PP (IN between)
            (NP (PRP them))))))
    (. .)))

mark(think-15, Because-2)
advmod(saw-6, when-4)
nsubj(saw-6, you-5)
advcl(think-15, saw-6)
poss(tools-8, his-7)
dobj(saw-6, tools-8)
det(lock-11, this-10)
prep_beside(saw-6, lock-11)
nsubj(think-15, you-13)
aux(think-15, would-14)
advcl(done-30, think-15)
det(tools-17, the-16)
dep(small-19, tools-17)
advmod(small-19, so-18)
dep(think-15, small-19)
det(lock-22, the-21)
dep(huge-24, lock-22)
advmod(huge-24, so-23)
dep(think-15, huge-24)
conj_and(small-19, huge-24)
det(nothing-27, that-26)
nsubjpass(done-30, nothing-27)
aux(done-30, could-28)
auxpass(done-30, be-29)
root(ROOT-0, done-30)
prep_between(done-30, them-32)

(ROOT
  (S (CC Yet)
    (NP (PRP I))
    (VP (VBP daresay)
      (SBAR
        (S
          (NP (DT the) (NN watchmaker))
          (VP (MD could)
            (VP (VB set)
              (NP (DT the) (NN lock))
              (ADVP (DT all) (NN right)
                (SBAR (IN if)
                  (S
                    (NP (PRP he))
                    (VP (VBD chose)
                      (S
                        (VP (TO to)
                          (VP (VB try)))))))))))))
    (. .)))

cc(daresay-3, Yet-1)
nsubj(daresay-3, I-2)
root(ROOT-0, daresay-3)
det(watchmaker-5, the-4)
nsubj(set-7, watchmaker-5)
aux(set-7, could-6)
ccomp(daresay-3, set-7)
det(lock-9, the-8)
dobj(set-7, lock-9)
det(right-11, all-10)
advmod(set-7, right-11)
mark(chose-14, if-12)
nsubj(chose-14, he-13)
nsubj(try-16, he-13)
dep(right-11, chose-14)
aux(try-16, to-15)
xcomp(chose-14, try-16)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP think)
      (ADVP (RB so))
      (, ,)
      (S
        (NP (NNP Mr) (NNP Willet))))
    (. ?) ('' '')))

nsubj(think-4, Do-1)
neg(think-4, n't-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
advmod(think-4, so-5)
nn(Willet-8, Mr-7)
dep(think-4, Willet-8)

(ROOT
  (S
    (NP (`` ``)
      (NP
        (NP (RB Not) (DT a) (NN doubt))
        (PP (IN of)
          (NP (PRP it))))
      (, ,) ('' ''))
    (VP (VBD answered)
      (NP (DT the) (NN smith)))
    (. .)))

neg(doubt-4, Not-2)
det(doubt-4, a-3)
nsubj(answered-9, doubt-4)
prep_of(doubt-4, it-6)
root(ROOT-0, answered-9)
det(smith-11, the-10)
dobj(answered-9, smith-11)

(ROOT
  (FRAG (`` ``)
    (ADJP (RB Had)
      (SBAR
        (S
          (NP (PRP we))
          (ADVP (RB better))
          (VP (VBP go)
            (PP (TO to)
              (NP (PRP him)))
            (ADVP (RB then))))))
    (. ?) ('' '')))

root(ROOT-0, Had-2)
nsubj(go-5, we-3)
advmod(go-5, better-4)
ccomp(Had-2, go-5)
prep_to(go-5, him-7)
advmod(go-5, then-8)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Well)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (DT the) (NN smith))
    (, ,)
    (S
      (VP (VBG smiling) (, ,) (`` ``)
        (S
          (NP (PRP I))
          (VP (VB think)
            (S
              (ADVP (RB perhaps))
              (NP (PRP he))
              (VP (MD would)
                (VP (VB ask)
                  (NP (PRP you))
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (PRP you))
                      (VP (VBD had) (RB n't)
                        (VP (VBN come)
                          (PP (TO to)
                            (NP (PRP me))))))))))))))
    (. .)))

dep(answered-5, Well-2)
root(ROOT-0, answered-5)
det(smith-7, the-6)
nsubj(answered-5, smith-7)
vmod(answered-5, smiling-9)
nsubj(think-13, I-12)
ccomp(smiling-9, think-13)
advmod(ask-17, perhaps-14)
nsubj(ask-17, he-15)
aux(ask-17, would-16)
ccomp(think-13, ask-17)
dobj(ask-17, you-18)
advmod(come-23, why-19)
nsubj(come-23, you-20)
aux(come-23, had-21)
neg(come-23, n't-22)
advcl(ask-17, come-23)
prep_to(come-23, me-25)

(ROOT
  (S
    (S
      (ADVP (DT No) (NN doubt))
      (NP (PRP he))
      (VP (MD could)
        (VP (VB do)
          (NP (PRP it)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN got)
          (NP (JJR better) (NNS tools))
          (PP (IN for)
            (NP (DT the) (NN purpose))))))
    (. .)))

neg(doubt-2, No-1)
advmod(do-5, doubt-2)
nsubj(do-5, he-3)
aux(do-5, could-4)
root(ROOT-0, do-5)
dobj(do-5, it-6)
nsubj(got-11, I-9)
aux(got-11, 've-10)
conj_but(do-5, got-11)
amod(tools-13, better-12)
dobj(got-11, tools-13)
det(purpose-16, the-15)
prep_for(got-11, purpose-16)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP me))
        (VP (VB look)
          (PP (IN at)
            (NP (DT the) (NN lock))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(look-3, me-2)
ccomp(Let-1, look-3)
det(lock-6, the-5)
prep_at(look-3, lock-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD shall)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB set)
                        (S
                          (NP (PRP it))
                          (ADJP (RB right)))))))))))))
    (. .) ('' '')))

nsubj(sure-3, I-1)
cop(sure-3, 'm-2)
root(ROOT-0, sure-3)
nsubj(able-7, I-4)
nsubj(set-9, I-4)
aux(able-7, shall-5)
cop(able-7, be-6)
ccomp(sure-3, able-7)
aux(set-9, to-8)
xcomp(able-7, set-9)
nsubj(right-11, it-10)
xcomp(set-9, right-11)

(ROOT
  (SINV (`` ``)
    (FRAG
      (PP (RB Not) (IN with)
        (NP
          (NP (DT that) (JJ great) (JJ big) (NN hammer))
          (, ,)
          (ADVP (RB then)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

neg(with-3, Not-2)
dep(said-12, with-3)
det(hammer-7, that-4)
amod(hammer-7, great-5)
amod(hammer-7, big-6)
pobj(with-3, hammer-7)
advmod(hammer-7, then-9)
root(ROOT-0, said-12)
nsubj(said-12, Willie-13)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (JJR smaller) (NNS hammers))
        (PP (IN than)
          (NP (DT that)))))
    (. .)))

dep(have-5, No-2)
nsubj(have-5, I-4)
root(ROOT-0, have-5)
amod(hammers-7, smaller-6)
dobj(have-5, hammers-7)
prep_than(have-5, that-9)

(ROOT
  (SBARQ
    (WHADVP (WRB When))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB want)
        (NP (PRP it))
        (, ,)
        (ADVP (RB sir))))
    (. ?) ('' '')))

advmod(want-4, When-1)
aux(want-4, do-2)
nsubj(want-4, you-3)
root(ROOT-0, want-4)
dobj(want-4, it-5)
advmod(want-4, sir-7)

(ROOT
  (X (`` ``)
    (NP
      (SQ (MD Could)
        (NP (PRP you))
        (VP (VB manage)
          (S
            (VP (TO to)
              (VP
                (VP (VB do)
                  (NP (PRP it))
                  (PP (IN at)
                    (NP (RB once))))
                (, ,)
                (CC and)
                (VP (VB let)
                  (NP (PRP me))))))))
      (VP (VB take)
        (NP (PRP it))
        (ADVP (RB home))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (EX there))
            (VP (VBZ 's)
              (NP (DT a) (JJ little) (NN baby))
              (ADVP (RB there)))))))
    (, ,)
    (NP
      (NP (JJ just))
      (VP (VBN arrived)))
    (. ?) ('' '')))

aux(manage-4, Could-2)
nsubj(manage-4, you-3)
nsubj(do-6, you-3)
nsubj(let-12, you-3)
dep(take-14, manage-4)
aux(do-6, to-5)
xcomp(manage-4, do-6)
dobj(do-6, it-7)
prep(do-6, at-8)
pobj(at-8, once-9)
xcomp(manage-4, let-12)
conj_and(do-6, let-12)
dobj(let-12, me-13)
dep(just-26, take-14)
dobj(take-14, it-15)
advmod(take-14, home-16)
mark('s-20, for-18)
expl('s-20, there-19)
advcl(take-14, 's-20)
det(baby-23, a-21)
amod(baby-23, little-22)
nsubj('s-20, baby-23)
advmod('s-20, there-24)
root(ROOT-0, just-26)
vmod(just-26, arrived-27)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB mean)
        (NP (PRP it))))
    (. !) ('' '')))

nsubj(mean-5, You-2)
aux(mean-5, do-3)
neg(mean-5, n't-4)
root(ROOT-0, mean-5)
dobj(mean-5, it-6)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN smith))
      (, ,)
      (S
        (VP (VBG looking)
          (ADJP (JJ surprised)))))
    (. .)))

root(ROOT-0, said-1)
det(smith-3, the-2)
dobj(said-1, smith-3)
vmod(said-1, looking-5)
acomp(looking-5, surprised-6)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wish)
      (NP (PRP you))
      (NP (NN joy))
      (, ,)
      (ADVP (RB sir)))
    (. .) ('' '')))

nsubj(wish-3, I-2)
root(ROOT-0, wish-3)
iobj(wish-3, you-4)
dobj(wish-3, joy-5)
advmod(wish-3, sir-7)

(ROOT
  (SINV (`` ``)
    (S (CC And)
      (NP (DT this))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN lock))
          (PP (IN of)
            (NP
              (NP (DT the) (NN room))
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (VBZ 's)
                    (PP (IN in))))))))))
    (, ,) ('' '')
    (VP (VBD continued))
    (NP (DT the) (NN doctor))
    (. .)))

cc(lock-6, And-2)
nsubj(lock-6, this-3)
cop(lock-6, is-4)
det(lock-6, the-5)
ccomp(continued-15, lock-6)
det(room-9, the-8)
prep_of(lock-6, room-9)
prep_in('s-11, room-9)
nsubj('s-11, she-10)
rcmod(room-9, 's-11)
root(ROOT-0, continued-15)
det(doctor-17, the-16)
nsubj(continued-15, doctor-17)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP (JJ afraid))
      (PP (IN of)
        (S
          (NP (PRP her))
          (VP
            (VP (VBG getting)
              (PRT (RP out)))
            (CC and)
            (VP (VBG flying)
              (PRT (RP off))
              (ADVP (RB again)))))))
    (. !) ('' '')))

cc(afraid-5, And-2)
nsubj(afraid-5, you-3)
cop(afraid-5, 're-4)
root(ROOT-0, afraid-5)
nsubj(getting-8, her-7)
nsubj(flying-11, her-7)
prepc_of(afraid-5, getting-8)
prt(getting-8, out-9)
prepc_of(afraid-5, flying-11)
conj_and(getting-8, flying-11)
prt(flying-11, off-12)
advmod(flying-11, again-13)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN smith)))
    (. .)))

root(ROOT-0, said-1)
det(smith-3, the-2)
dobj(said-1, smith-3)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB do)
        (NP (PRP it))
        (PP (IN at)
          (NP (RB once)))))
    (. .)))

nsubj(do-4, I-2)
aux(do-4, will-3)
root(ROOT-0, do-4)
dobj(do-4, it-5)
prep(do-4, at-6)
pobj(at-6, once-7)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is) (RB n't)
        (ADJP (RB much) (JJ wrong)
          (PP (IN with)
            (NP (PRP it))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP daresay))
    (. .)))

expl(is-2, There-1)
ccomp(daresay-10, is-2)
neg(is-2, n't-3)
advmod(wrong-5, much-4)
acomp(is-2, wrong-5)
prep_with(wrong-5, it-7)
nsubj(daresay-10, I-9)
root(ROOT-0, daresay-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (NNP Mrs) (NNP Macmichael))
          (VP (VBZ is)
            (VP (VBG doing)
              (ADVP (RB well))))))
      (, ,)
      (ADVP (RB sir)))
    (. .) ('' '')))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
nn(Macmichael-4, Mrs-3)
nsubj(doing-6, Macmichael-4)
aux(doing-6, is-5)
ccomp(hope-2, doing-6)
advmod(doing-6, well-7)
advmod(hope-2, sir-9)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD took)
        (NP (DT the) (NN lock)))
      (, ,)
      (VP (VBD drew)
        (NP (JJ several) (NNS screws))
        (PP (IN from)
          (NP (PRP it))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB then))
        (VBD forced)
        (S
          (NP (PRP it))
          (ADJP (JJ open)))))
    (. .)))

nsubj(took-2, He-1)
nsubj(drew-6, He-1)
nsubj(forced-14, He-1)
root(ROOT-0, took-2)
det(lock-4, the-3)
dobj(took-2, lock-4)
conj_and(took-2, drew-6)
amod(screws-8, several-7)
dobj(drew-6, screws-8)
prep_from(drew-6, it-10)
advmod(forced-14, then-13)
conj_and(took-2, forced-14)
nsubj(open-16, it-15)
xcomp(forced-14, open-16)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (NN nothing))
          (PP (CC but)
            (NP
              (NP (DT the) (NN spring))
              (VP (VBN gone)))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP
            (VP (VBD took)
              (PRT (RP out))
              (NP (NN something)))
            (CC and)
            (VP (VBD threw)
              (NP (PRP it))
              (ADVP (RB away)))))))
    (. .)))

nsubj(nothing-4, It-2)
cop(nothing-4, 's-3)
ccomp(said-12, nothing-4)
prep(nothing-4, but-5)
det(spring-7, the-6)
pobj(but-5, spring-7)
vmod(spring-7, gone-8)
nsubj(said-12, he-11)
root(ROOT-0, said-12)
mark(took-16, as-14)
nsubj(took-16, he-15)
nsubj(threw-20, he-15)
advcl(said-12, took-16)
prt(took-16, out-17)
dobj(took-16, something-18)
advcl(said-12, threw-20)
conj_and(took-16, threw-20)
dobj(threw-20, it-21)
advmod(threw-20, away-22)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD took)
        (PRT (RP out))
        (NP (JJ several) (JJR more) (NNS pieces)))
      (, ,)
      (CC and)
      (VP (VBD cleaned)
        (S
          (NP (PRP them))
          (NP (DT all)))))
    (. .)))

advmod(took-3, Then-1)
nsubj(took-3, he-2)
nsubj(cleaned-10, he-2)
root(ROOT-0, took-3)
prt(took-3, out-4)
amod(pieces-7, several-5)
amod(pieces-7, more-6)
dobj(took-3, pieces-7)
conj_and(took-3, cleaned-10)
nsubj(all-12, them-11)
xcomp(cleaned-10, all-12)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD searched)
      (PP (IN in)
        (NP (DT a) (NN box)))
      (SBAR (IN till)
        (S
          (NP (PRP he))
          (VP (VBD found)
            (NP
              (NP (DT another) (NN spring))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP he))
                  (VP (VBD put)
                    (PP (IN in) (RB instead))
                    (PP (IN of)
                      (NP (DT the) (JJ broken) (NN one)))
                    (, ,)
                    (PP (IN after)
                      (S
                        (VP (VBG snipping)
                          (PRT (RP off))
                          (NP (DT a) (JJ little) (NN bit))
                          (PP (IN with)
                            (NP
                              (NP (DT a) (NN pair))
                              (PP (IN of)
                                (NP (NNS pincers))))))))))))))))
    (. .)))

advmod(searched-3, Then-1)
nsubj(searched-3, he-2)
root(ROOT-0, searched-3)
det(box-6, a-5)
prep_in(searched-3, box-6)
mark(found-9, till-7)
nsubj(found-9, he-8)
advcl(searched-3, found-9)
det(spring-11, another-10)
dobj(found-9, spring-11)
dobj(put-15, spring-11)
prep_in(put-15, spring-11)
nsubj(put-15, he-14)
rcmod(spring-11, put-15)
dep(put-15, instead-17)
det(one-21, the-19)
amod(one-21, broken-20)
prep_of(put-15, one-21)
prepc_after(put-15, snipping-24)
prt(snipping-24, off-25)
det(bit-28, a-26)
amod(bit-28, little-27)
dobj(snipping-24, bit-28)
det(pair-31, a-30)
prep_with(snipping-24, pair-31)
prep_of(pair-31, pincers-33)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD put)
        (NP (PDT all) (DT the) (NNS pieces))
        (PP (IN in)))
      (, ,)
      (VP (VBD put)
        (PP (IN on)
          (NP
            (NP (DT the) (NN cover))
            (PP (IN of)
              (NP (PRP it))))))
      (, ,)
      (VP (VBD gave)
        (NP (NN something))
        (NP
          (NP (DT a) (JJ few) (NNS taps))
          (PP (IN with)
            (NP (DT a) (JJ tiny) (NN hammer)))))
      (, ,)
      (VP (VBD replaced)
        (NP (DT the) (NNS screws)))
      (, ,)
      (CC and)
      (VP (VBD said) (: --) (`` ``)
        (S
          (NP (NNP Shall) (NNP I))
          (VP (VB come)
            (CC and)
            (VB put)
            (NP (PRP it))
            (PP (IN on) (IN for)
              (NP
                (NP (PRP you))
                (, ,)
                (NP (NN sir))))))))
    (. ?) ('' '')))

advmod(put-3, Then-1)
nsubj(put-3, he-2)
nsubj(put-9, he-2)
nsubj(gave-16, he-2)
nsubj(replaced-26, he-2)
nsubj(said-31, he-2)
root(ROOT-0, put-3)
predet(pieces-6, all-4)
det(pieces-6, the-5)
dobj(put-3, pieces-6)
prep(put-3, in-7)
conj_and(put-3, put-9)
det(cover-12, the-11)
prep_on(put-9, cover-12)
prep_of(cover-12, it-14)
conj_and(put-3, gave-16)
iobj(gave-16, something-17)
det(taps-20, a-18)
amod(taps-20, few-19)
dobj(gave-16, taps-20)
det(hammer-24, a-22)
amod(hammer-24, tiny-23)
prep_with(taps-20, hammer-24)
conj_and(put-3, replaced-26)
det(screws-28, the-27)
dobj(replaced-26, screws-28)
conj_and(put-3, said-31)
nn(I-35, Shall-34)
nsubj(come-36, I-35)
nsubj(put-38, I-35)
ccomp(said-31, come-36)
ccomp(said-31, put-38)
conj_and(come-36, put-38)
dobj(come-36, it-39)
dep(come-36, on-40)
prep_for(come-36, you-42)
appos(you-42, sir-44)

(ROOT
  (SINV (`` ``)
    (S
      (FRAG
        (INTJ (UH No) (, ,) (UH no)))
      (: ;)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (ADVP (RB up)
            (PP (TO to)
              (NP (DT that))))
          (ADJP (JJ much)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Macmichael))
    (. .)))

dep(much-11, No-2)
dep(No-2, no-4)
nsubj(much-11, I-6)
cop(much-11, am-7)
advmod(much-11, up-8)
prep_to(up-8, that-10)
ccomp(said-14, much-11)
root(ROOT-0, said-14)
nn(Macmichael-16, Mr-15)
nsubj(said-14, Macmichael-16)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB easily))
      (VP (VB manage)
        (NP (DT that))))
    (. .)))

nsubj(manage-5, I-2)
aux(manage-5, can-3)
advmod(manage-5, easily-4)
root(ROOT-0, manage-5)
dobj(manage-5, that-6)

(ROOT
  (S
    (VP (VB Come))
    (, ,)
    (NP (NNP Willie))
    (. .)))

root(ROOT-0, Come-1)
dep(Come-1, Willie-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB much) (JJ obliged)
        (PP (TO to)
          (NP (PRP you))))
      (PP (IN for)
        (S
          (VP (VBG doing)
            (NP (PRP it))
            (PP (IN at)
              (NP (RB once)))))))
    (. .)))

nsubj(obliged-4, I-1)
cop(obliged-4, 'm-2)
advmod(obliged-4, much-3)
root(ROOT-0, obliged-4)
prep_to(obliged-4, you-6)
prepc_for(obliged-4, doing-8)
dobj(doing-8, it-9)
prep(doing-8, at-10)
pobj(at-10, once-11)

(ROOT
  (S
    (VP (VB Good-night))
    (. .) ('' '')))

root(ROOT-0, Good-night-1)

(ROOT
  (S (RB Then)
    (ADVP (RB out))
    (NP (PRP they))
    (VP (VBD went)
      (PP (IN into)
        (NP (DT the) (NN snowstorm)))
      (ADVP (RB again))
      (, ,)
      (NP
        (NP (NNP Willie))
        (VP (VBG holding)
          (ADVP (RB fast))
          (PP (IN by)
            (NP
              (NP (PRP$ his) (NN father) (POS 's))
              (NN hand))))))
    (. .)))

advmod(went-4, Then-1)
advmod(went-4, out-2)
nsubj(went-4, they-3)
root(ROOT-0, went-4)
det(snowstorm-7, the-6)
prep_into(went-4, snowstorm-7)
advmod(went-4, again-8)
dobj(went-4, Willie-10)
vmod(Willie-10, holding-11)
advmod(holding-11, fast-12)
poss(father-15, his-14)
poss(hand-17, father-15)
agent(holding-11, hand-17)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT This))
      (VP (VBZ is)
        (ADJP (JJ good))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN father))
    (. .)))

nsubj(good-4, This-2)
cop(good-4, is-3)
ccomp(said-7, good-4)
root(ROOT-0, said-7)
poss(father-9, his-8)
nsubj(said-7, father-9)

(ROOT
  (S (`` ``)
    (NP (PRP$ Your) (NN mother))
    (VP (MD will)
      (VP (VB have)
        (NP
          (NP
            (NP (DT a) (JJR better) (NN day))
            (NP (DT all) (NN to-morrow)))
          (, ,)
          (CC and)
          (NP
            (NP (RB perhaps) (DT a) (JJR longer) (NN sleep) (NN to-night))
            (PP (IN for)
              (NP (PRP it)))))))
    (. .)))

poss(mother-3, Your-2)
nsubj(have-5, mother-3)
aux(have-5, will-4)
root(ROOT-0, have-5)
det(day-8, a-6)
amod(day-8, better-7)
dobj(have-5, day-8)
det(to-morrow-10, all-9)
dep(day-8, to-morrow-10)
advmod(to-night-17, perhaps-13)
det(to-night-17, a-14)
amod(to-night-17, longer-15)
nn(to-night-17, sleep-16)
dobj(have-5, to-night-17)
conj_and(day-8, to-night-17)
prep_for(to-night-17, it-19)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see)
      (SBAR
        (WHADVP (WRB how)
          (ADJP (JJ easy)))
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (DT both) (JJ useful)
                    (CC and)
                    (JJ kind))
                  (ADVP (RB sometimes)))))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
advmod(is-6, how-3)
dep(how-3, easy-4)
nsubj(is-6, it-5)
nsubj(useful-10, it-5)
nsubj(kind-12, it-5)
ccomp(see-2, is-6)
aux(useful-10, to-7)
cop(useful-10, be-8)
preconj(useful-10, both-9)
xcomp(is-6, useful-10)
xcomp(is-6, kind-12)
conj_and(useful-10, kind-12)
advmod(useful-10, sometimes-13)

(ROOT
  (S
    (NP (DT The) (NN smith))
    (VP (VBD did)
      (ADVP (RBR more))
      (PP (IN for)
        (NP
          (NP (PRP$ your) (NN mother))
          (PP (IN in)
            (NP (DT those) (JJ few) (NNS minutes)))))
      (SBAR (IN than)
        (S
          (NP (CD ten) (NNS doctors))
          (VP (MD could)
            (VP (VB have)
              (VP (VBN done)))))))
    (. .)))

det(smith-2, The-1)
nsubj(did-3, smith-2)
root(ROOT-0, did-3)
advmod(did-3, more-4)
poss(mother-7, your-6)
prep_for(did-3, mother-7)
det(minutes-11, those-9)
amod(minutes-11, few-10)
prep_in(mother-7, minutes-11)
mark(done-17, than-12)
num(doctors-14, ten-13)
nsubj(done-17, doctors-14)
aux(done-17, could-15)
aux(done-17, have-16)
advcl(did-3, done-17)

(ROOT
  (S
    (VP (VB Think)
      (PP (IN of)
        (NP (PRP$ his) (JJ great) (JJ black) (NNS fingers)))
      (S
        (VP (VBG making)
          (NP
            (NP
              (NP (DT a)
                (ADJP (RB little) (JJR more))
                (NN sleep))
              (CC and)
              (NP (NN rest)))
            (CC and)
            (NP
              (NP (NN warmth))
              (PP (IN for)
                (NP (PRP her))))
            (: --)
            (CC and)
            (NP
              (NP (DT all))
              (PP (IN in)
                (NP (DT those) (JJ few) (NNS minutes))))))))
    (. !) ('' '')))

root(ROOT-0, Think-1)
poss(fingers-6, his-3)
amod(fingers-6, great-4)
amod(fingers-6, black-5)
prep_of(Think-1, fingers-6)
xcomp(Think-1, making-7)
det(sleep-11, a-8)
advmod(more-10, little-9)
amod(sleep-11, more-10)
dobj(making-7, sleep-11)
dobj(making-7, rest-13)
conj_and(sleep-11, rest-13)
dobj(making-7, warmth-15)
conj_and(sleep-11, warmth-15)
prep_for(warmth-15, her-17)
dobj(making-7, all-20)
conj_and(sleep-11, all-20)
det(minutes-24, those-22)
amod(minutes-24, few-23)
prep_in(all-20, minutes-24)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Suppose)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could) (RB n't)
              (VP (VB have)
                (VP (VBN done)
                  (NP (PRP it)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

ccomp(said-11, Suppose-2)
nsubj(done-7, he-3)
aux(done-7, could-4)
neg(done-7, n't-5)
aux(done-7, have-6)
ccomp(Suppose-2, done-7)
dobj(done-7, it-8)
root(ROOT-0, said-11)
nsubj(said-11, Willie-12)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (DT the) (NN watchmaker))
                (VP (MD could))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(think-4, you-3)
ccomp(Do-2, think-4)
det(watchmaker-6, the-5)
nsubj(could-7, watchmaker-6)
ccomp(think-4, could-7)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That) (NN I))
      (VP (MD ca) (RB n't)
        (VP (VB tell))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (S
            (NP (PRP it))
            (ADJP (JJ likely))))))
    (. .)))

det(I-3, That-2)
nsubj(tell-6, I-3)
aux(tell-6, ca-4)
neg(tell-6, n't-5)
root(ROOT-0, tell-6)
nsubj(think-12, I-9)
aux(think-12, do-10)
neg(think-12, n't-11)
conj_but(tell-6, think-12)
nsubj(likely-14, it-13)
xcomp(think-12, likely-14)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD should)
      (ADVP (RBS most) (RB probably))
      (VP (VB have)
        (VP (VBN had)
          (S
            (VP (TO to)
              (VP (VB get)
                (NP (DT a) (JJ new) (NN one))))))))
    (. .) ('' '')))

nsubj(had-6, We-1)
nsubj(get-8, We-1)
aux(had-6, should-2)
advmod(probably-4, most-3)
advmod(had-6, probably-4)
aux(had-6, have-5)
root(ROOT-0, had-6)
aux(get-8, to-7)
xcomp(had-6, get-8)
det(one-11, a-9)
amod(one-11, new-10)
dobj(get-8, one-11)

(ROOT
  (S (`` ``)
    (VP (VB Suppose)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD could) (RB n't)
            (VP (VB get)
              (NP (DT a) (JJ new) (NN one)))))))
    (. ?) ('' '')))

root(ROOT-0, Suppose-2)
nsubj(get-6, you-3)
aux(get-6, could-4)
neg(get-6, n't-5)
ccomp(Suppose-2, get-6)
det(one-9, a-7)
amod(one-9, new-8)
dobj(get-6, one-9)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP we))
      (VP (MD should)
        (VP (VB have)
          (VP (VBN had)
            (S
              (VP (TO to)
                (VP (VB set)
                  (NP (PRP$ our) (NNS wits))
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB work))
                        (, ,)
                        (CC and)
                        (VP (VB contrive)
                          (NP
                            (NP (DT some) (JJ other) (NN way))
                            (PP (IN of)
                              (S
                                (VP (VBG fastening)
                                  (NP (DT the) (NN door)))))))))))))))))
    (, ,) (IN so)
    (S
      (NP (DT that) (NN mamma))
      (VP (MD should) (RB n't)
        (VP
          (VP (VB take)
            (ADVP (NN cold))
            (PP (IN by)
              (S
                (NP (PRP$ its))
                (VP (VBG being)
                  (ADJP (JJ open))))))
          (, ,)
          (CC nor)
          (ADVP (RB yet))
          (VP (VB be)
            (VP (VBN disturbed)
              (PP (IN by)
                (NP
                  (NP (DT the) (NN noise))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (. .) ('' '')))

advmod(had-6, Then-2)
nsubj(had-6, we-3)
nsubj(set-8, we-3)
aux(had-6, should-4)
aux(had-6, have-5)
root(ROOT-0, had-6)
aux(set-8, to-7)
xcomp(had-6, set-8)
poss(wits-10, our-9)
dobj(set-8, wits-10)
aux(work-12, to-11)
vmod(set-8, work-12)
vmod(set-8, contrive-15)
conj_and(work-12, contrive-15)
det(way-18, some-16)
amod(way-18, other-17)
dobj(contrive-15, way-18)
prepc_of(way-18, fastening-20)
det(door-22, the-21)
dobj(fastening-20, door-22)
dep(had-6, so-24)
det(mamma-26, that-25)
nsubj(take-29, mamma-26)
nsubjpass(disturbed-39, mamma-26)
aux(take-29, should-27)
neg(take-29, n't-28)
parataxis(had-6, take-29)
advmod(take-29, cold-30)
nsubj(open-34, its-32)
cop(open-34, being-33)
prepc_by(take-29, open-34)
advmod(disturbed-39, yet-37)
auxpass(disturbed-39, be-38)
parataxis(had-6, disturbed-39)
conj_nor(take-29, disturbed-39)
det(noise-42, the-41)
agent(disturbed-39, noise-42)
prep_of(noise-42, it-44)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB so) (JJ nice)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (NP (NN everything))))))))))))
    (. !) ('' '')))

nsubj(nice-6, It-2)
nsubj(able-9, It-2)
nsubj(do-11, It-2)
aux(nice-6, would-3)
cop(nice-6, be-4)
advmod(nice-6, so-5)
root(ROOT-0, nice-6)
aux(able-9, to-7)
cop(able-9, be-8)
xcomp(nice-6, able-9)
aux(do-11, to-10)
xcomp(able-9, do-11)
dobj(do-11, everything-12)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)

(ROOT
  (S (`` ``)
    (CC So)
    (S
      (S
        (NP (PRP it))
        (VP (MD would)))
      (: ;)
      (CC but)
      (S
        (NP (NN nobody))
        (VP (MD can))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP (RB just))
        (ADVP (RB as) (RB well))
        (, ,)
        (SBAR (IN for)
          (S
            (ADVP (RB then))
            (NP (PRP we))
            (VP
              (VP (MD should) (RB not)
                (VP (VB need)
                  (NP
                    (ADJP (RB so) (JJ much))
                    (NN help))
                  (PP (IN from)
                    (NP (DT each) (JJ other)))))
              (, ,)
              (CC and)
              (VP (MD would)
                (VP (VB be)
                  (ADJP (RB too) (JJ independent)))))))))
    (. .) ('' '')))

nsubj(would-4, it-3)
root(ROOT-0, would-4)
nsubj(can-8, nobody-7)
conj_but(would-4, can-8)
nsubj('s-12, it-11)
conj_and(would-4, 's-12)
advmod('s-12, just-13)
advmod(well-15, as-14)
mwe(well-15, as-14)
advmod('s-12, well-15)
mark(need-22, for-17)
advmod(need-22, then-18)
nsubj(need-22, we-19)
nsubj(independent-34, we-19)
aux(need-22, should-20)
neg(need-22, not-21)
advcl('s-12, need-22)
advmod(much-24, so-23)
amod(help-25, much-24)
dobj(need-22, help-25)
det(other-28, each-27)
prep_from(need-22, other-28)
aux(independent-34, would-31)
cop(independent-34, be-32)
advmod(independent-34, too-33)
advcl('s-12, independent-34)
conj_and(need-22, independent-34)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Then))
    (SQ (MD should) (RB n't)
      (NP (DT a) (NN body))
      (VP (VB try)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN as)
                (NP (JJ many) (NNS things)))
              (SBAR (IN as)
                (S
                  (NP (PRP he))
                  (VP (MD can)))))))))
    (. ?) ('' '')))

advmod(try-7, Then-2)
aux(try-7, should-3)
neg(try-7, n't-4)
det(body-6, a-5)
nsubj(try-7, body-6)
nsubj(do-9, body-6)
root(ROOT-0, try-7)
aux(do-9, to-8)
xcomp(try-7, do-9)
amod(things-12, many-11)
prep_as(do-9, things-12)
mark(can-15, as-13)
nsubj(can-15, he-14)
advcl(do-9, can-15)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (X (IN for))
      (NP (EX there))
      (VP (VBZ 's)
        (NP
          (NP (DT no) (NN fear))
          (PP (IN of)
            (S
              (ADVP (RB ever))
              (VP (VBG being)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (PP (IN without)
                          (NP (JJ other) (NNS people)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD would)
        (VP (VB be)
          (ADJP
            (ADVP (RB so) (RB often))
            (JJ able)
            (S
              (VP (TO to)
                (VP (VB help)
                  (NP (PRP them)))))))))
    (. .)))

discourse('s-6, Yes-2)
dep('s-6, for-4)
expl('s-6, there-5)
root(ROOT-0, 's-6)
neg(fear-8, no-7)
nsubj('s-6, fear-8)
advmod(able-12, ever-10)
cop(able-12, being-11)
prepc_of(fear-8, able-12)
aux(do-14, to-13)
xcomp(able-12, do-14)
amod(people-17, other-16)
prep_without(do-14, people-17)
nsubj(able-25, you-20)
nsubj(help-27, you-20)
aux(able-25, would-21)
cop(able-25, be-22)
advmod(often-24, so-23)
advmod(able-25, often-24)
conj_and('s-6, able-25)
aux(help-27, to-26)
xcomp(able-25, help-27)
dobj(help-27, them-28)

(ROOT
  (S
    (S
      (NP (DT Both)
        (NP (DT the) (NN smith))
        (CC and)
        (NP (DT the) (NN watch) (NN maker)))
      (VP (MD could)
        (VP (VB mend)
          (NP (DT a) (NN lock)))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT neither))
        (PP (IN of)
          (NP (PRP them))))
      (VP (MD could)
        (VP (VB do)
          (PP (IN without)
            (NP
              (NP (DT the) (JJ other))
              (PP (IN for)
                (NP (PDT all) (DT that))))))))
    (. .) ('' '')))

preconj(smith-3, Both-1)
det(smith-3, the-2)
nsubj(mend-9, smith-3)
det(maker-7, the-5)
nn(maker-7, watch-6)
conj_and(smith-3, maker-7)
nsubj(mend-9, maker-7)
aux(mend-9, could-8)
root(ROOT-0, mend-9)
det(lock-11, a-10)
dobj(mend-9, lock-11)
nsubj(do-18, neither-14)
prep_of(neither-14, them-16)
aux(do-18, could-17)
conj_but(mend-9, do-18)
det(other-21, the-20)
prep_without(do-18, other-21)
predet(that-24, all-23)
prep_for(other-21, that-24)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP Willie))
        (VP (VBD went)
          (PP (TO to)
            (NP (NN bed))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD lay)
      (ADJP (RB awake))
      (NP (DT a) (JJ long) (NN time))
      (, ,)
      (S
        (VP (VBG thinking)
          (SBAR
            (WHADVP (WRB how))
            (, ,)
            (S
              (SBAR (IN if)
                (S
                  (S
                    (NP (DT the) (NN lock))
                    (VP (MD could) (RB not)
                      (VP (VB have)
                        (VP (VBN been)
                          (VP (VBN mended))))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (EX there))
                    (VP (VBD had)
                      (VP (VBN been)
                        (ADJP (RB no) (JJ other)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (VP (VBN had)))))))))))
              (, ,)
              (NP (PRP he))
              (VP (MD could)
                (VP (VB have)
                  (VP (VBN contrived)
                    (S
                      (VP (TO to)
                        (VP (VB keep)
                          (S
                            (NP (DT the) (NN door))
                            (VP (VB shut)
                              (ADVP (RB properly)))))))))))))))
    (. .)))

advmod(went-3, When-1)
nsubj(went-3, Willie-2)
advcl(lay-8, went-3)
prep_to(went-3, bed-5)
nsubj(lay-8, he-7)
root(ROOT-0, lay-8)
acomp(lay-8, awake-9)
det(time-12, a-10)
amod(time-12, long-11)
dobj(lay-8, time-12)
vmod(lay-8, thinking-14)
advmod(contrived-39, how-15)
mark(mended-24, if-17)
det(lock-19, the-18)
nsubjpass(mended-24, lock-19)
nsubj(other-31, lock-19)
nsubjpass(had-34, lock-19)
aux(mended-24, could-20)
neg(mended-24, not-21)
aux(mended-24, have-22)
auxpass(mended-24, been-23)
advcl(contrived-39, mended-24)
expl(other-31, there-27)
aux(other-31, had-28)
cop(other-31, been-29)
neg(other-31, no-30)
conj_and(mended-24, other-31)
advcl(contrived-39, other-31)
aux(had-34, to-32)
auxpass(had-34, be-33)
xcomp(other-31, had-34)
nsubj(contrived-39, he-36)
nsubj(keep-41, he-36)
aux(contrived-39, could-37)
aux(contrived-39, have-38)
ccomp(thinking-14, contrived-39)
aux(keep-41, to-40)
xcomp(contrived-39, keep-41)
det(door-43, the-42)
nsubj(shut-44, door-43)
ccomp(keep-41, shut-44)
advmod(shut-44, properly-45)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN morning)))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP he))
    (VP (VBD told)
      (NP (PRP$ his) (NN father))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD had) (RB not)
            (VP (VBN thought)
              (PP (IN of)
                (NP
                  (NP (DT any) (NN way))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD would)
                        (VP (VB do)
                          (PRN (, ,)
                            (SBAR (IN for)
                              (S
                                (S
                                  (SBAR (IN though)
                                    (S
                                      (NP (PRP he))
                                      (VP (MD could)
                                        (VP (VB contrive)
                                          (S
                                            (VP (TO to)
                                              (VP (VB shut)
                                                (CC and)
                                                (VB open)
                                                (NP (DT the) (NN door))
                                                (ADVP (RB well) (RB enough)))))))))
                                  (, ,)
                                  (NP (PRP he))
                                  (VP (MD could) (RB not)
                                    (VP (VB think)
                                      (SBAR
                                        (WHADVP (WRB how))
                                        (S
                                          (NP (DT a) (NN person))
                                          (ADVP (RB outside))
                                          (VP (MD might)
                                            (VP (VB be)
                                              (ADJP (JJ able)
                                                (S
                                                  (VP (TO to)
                                                    (VP (VB do)
                                                      (NP (PRP it)))))))))))))
                                (: ;)
                                (CC and)
                                (S
                                  (NP (PRP he))
                                  (VP (VBD thought)
                                    (SBAR
                                      (S
                                        (NP
                                          (NP (DT the) (JJS best) (NN way))
                                          (, ,)
                                          (SBAR (IN if)
                                            (S
                                              (NP (PDT such) (DT a) (NN difficulty))
                                              (VP (MD should)
                                                (VP (VB occur)))))
                                          (, ,))
                                        (VP (MD would)
                                          (VP (VB be)
                                            (S
                                              (VP (TO to)
                                                (VP (VB take)
                                                  (NP (DT the) (NN lock))
                                                  (PP (IN off)
                                                    (NP (PRP$ his) (NN door))))))))))))))
                            (, ,))
                          (CC and)
                          (VB put)
                          (NP (PRP it))
                          (PP (IN on)
                            (NP (NNP mamma) (POS 's)))
                          (SBAR (IN till)
                            (S
                              (NP (DT a) (JJR better) (CD one))
                              (VP (MD could)
                                (VP (VB be)
                                  (VP (VBN got)))))))))))))))))
    (. .)))

det(morning-3, the-2)
prep_in(told-8, morning-3)
advmod(told-8, however-5)
nsubj(told-8, he-7)
root(ROOT-0, told-8)
poss(father-10, his-9)
dobj(told-8, father-10)
mark(thought-15, that-11)
nsubj(thought-15, he-12)
aux(thought-15, had-13)
neg(thought-15, not-14)
ccomp(told-8, thought-15)
det(way-18, any-17)
prep_of(thought-15, way-18)
nsubj(do-21, way-18)
nsubj(put-77, way-18)
aux(do-21, would-20)
rcmod(way-18, do-21)
mark(think-40, for-23)
mark(contrive-27, though-24)
nsubj(contrive-27, he-25)
nsubj(shut-29, he-25)
nsubj(open-31, he-25)
aux(contrive-27, could-26)
advcl(think-40, contrive-27)
aux(shut-29, to-28)
xcomp(contrive-27, shut-29)
xcomp(contrive-27, open-31)
conj_and(shut-29, open-31)
det(door-33, the-32)
dobj(shut-29, door-33)
advmod(enough-35, well-34)
advmod(shut-29, enough-35)
nsubj(think-40, he-37)
aux(think-40, could-38)
neg(think-40, not-39)
parataxis(do-21, think-40)
advmod(able-47, how-41)
det(person-43, a-42)
nsubj(able-47, person-43)
nsubj(do-49, person-43)
advmod(able-47, outside-44)
aux(able-47, might-45)
cop(able-47, be-46)
ccomp(think-40, able-47)
aux(do-49, to-48)
xcomp(able-47, do-49)
dobj(do-49, it-50)
nsubj(thought-54, he-53)
parataxis(do-21, thought-54)
conj_and(think-40, thought-54)
det(way-57, the-55)
amod(way-57, best-56)
nsubj(be-67, way-57)
nsubj(take-69, way-57)
mark(occur-64, if-59)
predet(difficulty-62, such-60)
det(difficulty-62, a-61)
nsubj(occur-64, difficulty-62)
aux(occur-64, should-63)
rcmod(way-57, occur-64)
aux(be-67, would-66)
ccomp(thought-54, be-67)
aux(take-69, to-68)
xcomp(be-67, take-69)
det(lock-71, the-70)
dobj(take-69, lock-71)
poss(door-74, his-73)
prep_off(take-69, door-74)
rcmod(way-18, put-77)
conj_and(do-21, put-77)
dobj(do-21, it-78)
prep_on(do-21, mamma-80)
possessive(mamma-80, 's-81)
mark(got-88, till-82)
det(better-84, a-83)
nsubjpass(got-88, better-84)
num(better-84, one-85)
aux(got-88, could-86)
auxpass(got-88, be-87)
advcl(do-21, got-88)

(ROOT
  (S
    (PP (IN Of)
      (NP (DT this) (NN suggestion)))
    (NP
      (NP (PRP$ his) (NN father))
      (, ,)
      (ADJP (JJ much)
        (PP (TO to)
          (NP
            (NP (NNP Willie) (POS 's))
            (NN satisfaction))))
      (, ,))
    (VP
      (ADVP (RB entirely))
      (VBD approved))
    (. .)))

det(suggestion-3, this-2)
prep_of(approved-14, suggestion-3)
poss(father-5, his-4)
nsubj(approved-14, father-5)
amod(father-5, much-7)
poss(satisfaction-11, Willie-9)
prep_to(much-7, satisfaction-11)
advmod(approved-14, entirely-13)
root(ROOT-0, approved-14)

(ROOT
  (NP (NNP CHAPTER) (NNP IV) (. .)))

nn(IV-2, CHAPTER-1)
root(ROOT-0, IV-2)

(ROOT
  (S
    (NP (PRP HE))
    (VP (VBZ SERVES)
      (NP (DT AN) (NNP APPRENTICESHIP)))
    (. .)))

nsubj(SERVES-2, HE-1)
root(ROOT-0, SERVES-2)
det(APPRENTICESHIP-4, AN-3)
dobj(SERVES-2, APPRENTICESHIP-4)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (NNP Willie) (POS 's))
          (NN mother))
        (VP (VBD grew)
          (ADVP (RBR better))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (NNP Willie) (POS 's))
          (NN sister))
        (VP (VBD grew)
          (ADJP (JJR bigger))))
      (: ;)
      (CC and)
      (S
        (NP (DT the) (JJ strange) (NN nurse))
        (VP (VBD went)
          (PRT (RP away)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNP Willie))
        (CC and)
        (NP (PRP$ his) (NN mother)
          (CC and)
          (NN Tibby)))
      (, ,)
      (PP (IN with)
        (NP
          (NP (DT a) (JJ little) (JJ occasional) (NN assistance))
          (PP (IN from)
            (NP (DT the) (NN doctor)))))
      (, ,)
      (VP (VBD managed)
        (NP (DT the) (NN baby))
        (PP (IN amongst)
          (NP (PRP them)))))
    (. .)))

poss(mother-3, Willie-1)
nsubj(grew-4, mother-3)
root(ROOT-0, grew-4)
advmod(grew-4, better-5)
poss(sister-10, Willie-8)
nsubj(grew-11, sister-10)
conj_and(grew-4, grew-11)
acomp(grew-11, bigger-12)
det(nurse-17, the-15)
amod(nurse-17, strange-16)
nsubj(went-18, nurse-17)
conj_and(grew-4, went-18)
prt(went-18, away-19)
nsubj(managed-38, Willie-22)
poss(mother-25, his-24)
conj_and(Willie-22, mother-25)
nsubj(managed-38, mother-25)
conj_and(Willie-22, Tibby-27)
conj_and(mother-25, Tibby-27)
det(assistance-33, a-30)
amod(assistance-33, little-31)
amod(assistance-33, occasional-32)
prep_with(managed-38, assistance-33)
det(doctor-36, the-35)
prep_from(assistance-33, doctor-36)
conj_and(grew-4, managed-38)
det(baby-40, the-39)
dobj(managed-38, baby-40)
prep_amongst(managed-38, them-42)

(ROOT
  (S
    (PP (VBG Considering)
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN been)
              (ADVP (RB yet))
              (ADVP (RB only))
              (NP (DT a) (JJ short) (NN time))
              (PP (IN at)
                (NP (NN school))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD behaved)
      (NP (RB wonderfully) (RB well)))
    (. .)))

dep(behaved-15, Considering-1)
mark(time-10, that-2)
nsubj(time-10, she-3)
aux(time-10, had-4)
cop(time-10, been-5)
advmod(time-10, yet-6)
advmod(time-10, only-7)
det(time-10, a-8)
amod(time-10, short-9)
pcomp(Considering-1, time-10)
prep_at(time-10, school-12)
nsubj(behaved-15, she-14)
root(ROOT-0, behaved-15)
advmod(well-17, wonderfully-16)
dobj(behaved-15, well-17)

(ROOT
  (S
    (S
      (NP (PRP She))
      (ADVP (RB never))
      (VP (VBD cried)
        (SBAR (IN except)
          (S
            (NP (PRP she))
            (VP (VBD was)
              (PP (IN in)
                (NP (DT some) (NN trouble))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB even))
      (ADVP (RB then))
      (NP (PRP you))
      (VP (MD could)
        (ADVP (RB seldom))
        (VP (VB have)
          (VP (VBN seen)
            (NP
              (NP (DT a) (NN tear))
              (PP (IN on)
                (NP (PRP$ her) (NN face))))))))
    (. .)))

nsubj(cried-3, She-1)
neg(cried-3, never-2)
root(ROOT-0, cried-3)
mark(was-6, except-4)
nsubj(was-6, she-5)
advcl(cried-3, was-6)
det(trouble-9, some-8)
prep_in(was-6, trouble-9)
advmod(seen-18, even-12)
advmod(seen-18, then-13)
nsubj(seen-18, you-14)
aux(seen-18, could-15)
advmod(seen-18, seldom-16)
aux(seen-18, have-17)
conj_and(cried-3, seen-18)
det(tear-20, a-19)
dobj(seen-18, tear-20)
poss(face-23, her-22)
prep_on(tear-20, face-23)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD did)
        (NP
          (NP (DT all))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was)
                (VP (VBN required)
                  (PP (IN of)
                    (NP (PRP her)))))))))
      (, ,)
      (VP (VBD grew)
        (ADJP
          (ADJP (JJR longer))
          (CC and)
          (ADJP (JJR broader)
            (CC and)
            (JJR heavier))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADJP (RB very) (JJ fond))
        (PP (IN of)
          (NP (DT a) (VBN lighted) (NN candle)))))
    (. .)))

nsubj(did-2, She-1)
nsubj(grew-10, She-1)
nsubj(fond-20, She-1)
root(ROOT-0, did-2)
dobj(did-2, all-3)
nsubjpass(required-6, all-3)
auxpass(required-6, was-5)
rcmod(all-3, required-6)
prep_of(required-6, her-8)
conj_and(did-2, grew-10)
acomp(grew-10, longer-11)
acomp(grew-10, broader-13)
conj_and(longer-11, broader-13)
conj_and(longer-11, heavier-15)
conj_and(broader-13, heavier-15)
cop(fond-20, was-18)
advmod(fond-20, very-19)
conj_and(did-2, fond-20)
det(candle-24, a-22)
amod(candle-24, lighted-23)
prep_of(fond-20, candle-24)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NN fault))
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBD was)))))
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (MD would) (RB n't)
            (VP (VB give)
              (S
                (NP (NNP Willie))
                (ADJP (RB quite) (RB so) (JJ many))))))))
    (VP (VBZ smiles)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD wanted)))))
    (. .)))

det(fault-3, The-1)
amod(fault-3, only-2)
nsubj(smiles-16, fault-3)
nsubj(was-6, she-4)
aux(was-6, had-5)
rcmod(fault-3, was-6)
mark(give-11, that-7)
nsubj(give-11, she-8)
aux(give-11, would-9)
neg(give-11, n't-10)
dep(fault-3, give-11)
nsubj(many-15, Willie-12)
advmod(many-15, quite-13)
advmod(many-15, so-14)
xcomp(give-11, many-15)
root(ROOT-0, smiles-16)
mark(wanted-19, as-17)
nsubj(wanted-19, he-18)
advcl(smiles-16, wanted-19)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (PP (TO to)
          (NP (DT the) (NN view)))
        (NP (PRP she))
        (VP (VBD took)
          (PP (IN of)
            (NP (NNS affairs))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD seemed)
      (PP (IN for)
        (NP (DT a) (JJ long) (NN time)))
      (S
        (VP (TO to)
          (VP (VB be)
            (PP (IN on)
              (NP
                (NP (DT the) (NN whole))
                (VP
                  (ADVP (RB very) (RB well))
                  (VBN satisfied)
                  (PP (IN with)
                    (NP
                      (NP (NN life))
                      (CC and)
                      (NP (PRP$ its) (NNS gifts)))))))))))
    (. .)))

mark(took-6, As-1)
det(view-4, the-3)
prep_to(took-6, view-4)
nsubj(took-6, she-5)
advcl(seemed-11, took-6)
prep_of(took-6, affairs-8)
nsubj(seemed-11, she-10)
nsubj(be-17, she-10)
root(ROOT-0, seemed-11)
det(time-15, a-13)
amod(time-15, long-14)
prep_for(seemed-11, time-15)
aux(be-17, to-16)
xcomp(seemed-11, be-17)
det(whole-20, the-19)
prep_on(be-17, whole-20)
advmod(well-22, very-21)
advmod(satisfied-23, well-22)
vmod(whole-20, satisfied-23)
prep_with(satisfied-23, life-25)
poss(gifts-28, its-27)
prep_with(satisfied-23, gifts-28)
conj_and(life-25, gifts-28)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (PP (IN at)
          (NP (JJ last)))
        (NP (PRP$ its) (NNS troubles))
        (VP (VBD began)
          (S
            (VP (TO to)
              (VP (VB overtake)
                (NP (PRP her))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD did) (RB not)
      (VP (VB approve)
        (PP (IN of)
          (NP (PRP them)))
        (ADVP (IN at) (DT all))))
    (. .)))

cc(approve-15, But-1)
advmod(began-7, when-2)
prep_at(began-7, last-4)
poss(troubles-6, its-5)
nsubj(began-7, troubles-6)
nsubj(overtake-9, troubles-6)
advcl(approve-15, began-7)
aux(overtake-9, to-8)
xcomp(began-7, overtake-9)
dobj(overtake-9, her-10)
nsubj(approve-15, she-12)
aux(approve-15, did-13)
neg(approve-15, not-14)
root(ROOT-0, approve-15)
prep_of(approve-15, them-17)
advmod(approve-15, at-18)
pobj(at-18, all-19)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ first) (NN thing))
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD objected)
            (PP (TO to))))))
    (VP (VBD was)
      (VP (VBG being)
        (VP (VBN weaned) (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP she))
              (ADVP (RB evidently))
              (VP (VBD considered)
                (NP (DT a)
                  (ADJP (RB very) (JJ cruel)
                    (CC and)
                    (JJ unnecessary))
                  (NN experience))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, first-2)
prep_to(objected-5, thing-3)
nsubjpass(weaned-9, thing-3)
nsubj(objected-5, she-4)
rcmod(thing-3, objected-5)
aux(weaned-9, was-7)
auxpass(weaned-9, being-8)
root(ROOT-0, weaned-9)
dobj(considered-14, which-11)
nsubj(considered-14, she-12)
advmod(considered-14, evidently-13)
ccomp(weaned-9, considered-14)
det(experience-20, a-15)
advmod(cruel-17, very-16)
amod(experience-20, cruel-17)
conj_and(cruel-17, unnecessary-19)
amod(experience-20, unnecessary-19)
dobj(considered-14, experience-20)

(ROOT
  (S (CC But)
    (S
      (NP (PRP$ her) (NN father))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD must)
              (VP (VB be)))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (PRP$ her) (NN mother))
        (, ,)
        (VP (VBG believing)
          (S
            (NP (PRP him))
            (VP (TO to)
              (VP (VB know)
                (ADVP (RBS best))))))
        (, ,))
      (VP (VBD carried)
        (PRT (RP out))
        (NP (PRP$ his) (NN decree))))
    (. .)))

poss(father-3, her-2)
nsubj(said-4, father-3)
root(ROOT-0, said-4)
nsubj(be-7, it-5)
aux(be-7, must-6)
ccomp(said-4, be-7)
poss(mother-11, her-10)
nsubj(carried-19, mother-11)
vmod(mother-11, believing-13)
dobj(believing-13, him-14)
nsubj(know-16, him-14)
aux(know-16, to-15)
xcomp(believing-13, know-16)
advmod(know-16, best-17)
conj_and(said-4, carried-19)
prt(carried-19, out-20)
poss(decree-22, his-21)
dobj(carried-19, decree-22)

(ROOT
  (S
    (NP (NNP Little) (NNP Agnes))
    (VP
      (VP (VBD endured)
        (NP (PRP it))
        (ADVP (RB tolerably))
        (PP (RB well)
          (PP (IN in)
            (NP (DT the) (JJ daytime)))
          (, ,)
          (CC but)
          (PP (IN in)
            (NP
              (NP (DT the) (NN night))
              (VP (VBN protested)
                (ADVP (RB lustily)))))))
      (: --)
      (VP (VBD was)
        (ADVP (RB indeed))
        (ADJP (RB so) (RB outrageously) (JJ indignant)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (CD one) (NN evening))
          (NP (DT the) (JJ following) (NN conversation))
          (VP (VBD took)
            (NP (NN place))
            (PP (IN at)
              (NP (DT the) (NN tea-table)))
            (, ,)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (NNP Willie))
                (VP
                  (VP (VBD sat))
                  (CC and)
                  (VP (VBD heard)
                    (NP (PRP it))))))))))
    (. .)))

nn(Agnes-2, Little-1)
nsubj(endured-3, Agnes-2)
root(ROOT-0, endured-3)
dobj(endured-3, it-4)
advmod(endured-3, tolerably-5)
advmod(endured-3, well-6)
det(daytime-9, the-8)
prep_in(endured-3, daytime-9)
det(night-14, the-13)
prep_in(endured-3, night-14)
conj_but(daytime-9, night-14)
vmod(night-14, protested-15)
advmod(protested-15, lustily-16)
cop(indignant-22, was-18)
advmod(indignant-22, indeed-19)
advmod(indignant-22, so-20)
advmod(indignant-22, outrageously-21)
dep(endured-3, indignant-22)
mark(took-30, that-24)
num(evening-26, one-25)
tmod(took-30, evening-26)
det(conversation-29, the-27)
amod(conversation-29, following-28)
nsubj(took-30, conversation-29)
ccomp(endured-3, took-30)
dobj(took-30, place-31)
det(tea-table-34, the-33)
prep_at(took-30, tea-table-34)
advmod(sat-38, where-36)
nsubj(sat-38, Willie-37)
nsubj(heard-40, Willie-37)
advcl(took-30, sat-38)
advcl(took-30, heard-40)
conj_and(sat-38, heard-40)
dobj(heard-40, it-41)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Really))
      (, ,)
      (NP (PRP$ my))
      (VP (VBZ dear)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Mrs) (NNP Macmichael))
      (, ,) (`` ``)
      (S
        (NP (PRP I))
        (VP (MD can) (RB not)
          (VP (VB have)
            (NP
              (NP (PRP$ your) (NN rest))
              (VP (VBN disturbed)
                (PP (IN in)
                  (NP (DT this) (NN way)))
                (NP (DT another) (NN night))))))))
    (. .)))

advmod(dear-5, Really-2)
nsubj(dear-5, my-4)
ccomp(said-8, dear-5)
root(ROOT-0, said-8)
nn(Macmichael-10, Mrs-9)
nsubj(said-8, Macmichael-10)
nsubj(have-16, I-13)
aux(have-16, can-14)
neg(have-16, not-15)
dep(Macmichael-10, have-16)
poss(rest-18, your-17)
dobj(have-16, rest-18)
vmod(rest-18, disturbed-19)
det(way-22, this-21)
prep_in(disturbed-19, way-22)
det(night-24, another-23)
tmod(disturbed-19, night-24)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must)
      (VP
        (VP (VB go)
          (PP (TO to)
            (NP
              (NP (NNP Willie) (POS 's))
              (NN room))))
        (, ,)
        (CC and)
        (VP (VB let)
          (S
            (NP (PRP me))
            (VP (VB manage)
              (S
                (NP (DT the) (JJ little) (NN squalling) (NN thing))
                (NP (PRP myself))))))))
    (. .) ('' '')))

nsubj(go-3, You-1)
nsubj(let-10, You-1)
aux(go-3, must-2)
root(ROOT-0, go-3)
poss(room-7, Willie-5)
prep_to(go-3, room-7)
conj_and(go-3, let-10)
nsubj(manage-12, me-11)
ccomp(let-10, manage-12)
det(thing-16, the-13)
amod(thing-16, little-14)
nn(thing-16, squalling-15)
nsubj(myself-17, thing-16)
xcomp(manage-12, myself-17)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (MD should) (RB n't)
      (NP (PRP I))
      (VP (VB take)
        (NP
          (NP (PRP$ my) (NN share))
          (PP (IN of)
            (NP (DT the) (NN trouble))))))
    (. ?) ('' '')))

advmod(take-6, Why-2)
aux(take-6, should-3)
neg(take-6, n't-4)
nsubj(take-6, I-5)
root(ROOT-0, take-6)
poss(share-8, my-7)
dobj(take-6, share-8)
det(trouble-11, the-10)
prep_of(share-8, trouble-11)

(ROOT
  (S
    (VP (VBD objected)
      (NP (PRP$ her) (NN husband)))
    (. .)))

root(ROOT-0, objected-1)
poss(husband-3, her-2)
dobj(objected-1, husband-3)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (S
          (NP (PRP you))
          (VP (MD may)
            (VP
              (VP (VB be)
                (VP (VBN called)
                  (PRT (RP up))
                  (NP (DT any) (NN moment))))
              (, ,)
              (CC and)
              (VP (VB have)
                (NP (DT no) (JJR more) (NN sleep))
                (PP (IN till)
                  (NP (JJ next) (NN night)))))))
        (: ;)
        (CC and)
        (S
          (NP (PRP it))
          (VP (VBZ is) (RB not)
            (ADJP (JJ fair))
            (SBAR (IN that)
              (S
                (NP (WDT what))
                (VP (VBP sleep)
                  (SBAR
                    (S
                      (NP (PRP$ your) (NN work))
                      (VP (VBZ does)))))))))))
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (MD should)
              (VP (VB be)
                (ADJP (RB so) (RB unnecessarily) (JJ broken))))))))
    (. .)))

mark(called-6, Because-2)
nsubjpass(called-6, you-3)
nsubj(have-12, you-3)
aux(called-6, may-4)
auxpass(called-6, be-5)
csubj(let-31, called-6)
prt(called-6, up-7)
det(moment-9, any-8)
dobj(called-6, moment-9)
conj_and(called-6, have-12)
csubj(let-31, have-12)
neg(sleep-15, no-13)
amod(sleep-15, more-14)
dobj(have-12, sleep-15)
amod(night-18, next-17)
prep_till(have-12, night-18)
nsubj(fair-24, it-21)
cop(fair-24, is-22)
neg(fair-24, not-23)
conj_and(called-6, fair-24)
csubj(let-31, fair-24)
mark(sleep-27, that-25)
nsubj(sleep-27, what-26)
ccomp(fair-24, sleep-27)
poss(work-29, your-28)
nsubj(does-30, work-29)
ccomp(sleep-27, does-30)
root(ROOT-0, let-31)
nsubj(broken-38, you-32)
aux(broken-38, have-33)
aux(broken-38, should-34)
cop(broken-38, be-35)
advmod(broken-38, so-36)
advmod(broken-38, unnecessarily-37)
ccomp(let-31, broken-38)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP I))
          (VP (MD could) (RB n't)
            (VP (VB manage)
              (PP (IN without)
                (NP (PRP you))))))))
    (. .) ('' '')))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
neg('s-2, not-3)
advmod(manage-9, as-4)
mark(manage-9, if-5)
nsubj(manage-9, I-6)
aux(manage-9, could-7)
neg(manage-9, n't-8)
advcl('s-2, manage-9)
prep_without(manage-9, you-11)

(ROOT
  (S (`` ``)
    (S (CC But)
      (NP
        (NP (NNP Willie) (POS 's))
        (NN bed))
      (VP (VBZ is) (RB not)
        (ADJP (JJ big) (RB enough))
        (PP (IN for)
          (NP
            (NP (DT both))
            (PP (IN of)
              (NP (PRP us)))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD objected))
    (. .)))

cc(big-8, But-2)
poss(bed-5, Willie-3)
nsubj(big-8, bed-5)
cop(big-8, is-6)
neg(big-8, not-7)
ccomp(objected-17, big-8)
advmod(big-8, enough-9)
prep_for(big-8, both-11)
prep_of(both-11, us-13)
nsubj(objected-17, he-16)
root(ROOT-0, objected-17)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (NNP Willie))
    (VP (MD can)
      (VP (VB come)
        (CC and)
        (VB sleep)
        (PP (IN with)
          (NP (PRP me)))))
    (. .) ('' '')))

advmod(come-5, Then-2)
nsubj(come-5, Willie-3)
nsubj(sleep-7, Willie-3)
aux(come-5, can-4)
root(ROOT-0, come-5)
conj_and(come-5, sleep-7)
prep_with(come-5, me-9)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (NNP Willie))
    (VP (VBZ wants)
      (NP (PRP$ his) (NN sleep))
      (ADVP
        (ADVP (RB as) (RB much))
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBP do)
              (NP (NN mine)))))))
    (. .) ('' '')))

cc(wants-4, But-2)
nsubj(wants-4, Willie-3)
root(ROOT-0, wants-4)
poss(sleep-6, his-5)
dobj(wants-4, sleep-6)
advmod(much-8, as-7)
advmod(wants-4, much-8)
mark(do-11, as-9)
nsubj(do-11, I-10)
advcl(much-8, do-11)
ccomp(much-8, do-11)
dobj(do-11, mine-12)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (DT no) (NN fear))
          (PP (IN of)
            (NP (PRP him))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (MD would)
        (VP (VB sleep)
          (SBAR (IN though)
            (S
              (NP
                (NP (PDT all) (DT the) (NNS babies))
                (PP (IN in)
                  (NP (NNP Priory) (NNPS Leas))))
              (VP (VBD were)
                (VP (VBG crying)
                  (PP (IN in)
                    (NP (DT the) (NN room))))))))))
    (. .) ('' '')))

expl('s-3, There-2)
root(ROOT-0, 's-3)
neg(fear-5, no-4)
nsubj('s-3, fear-5)
prep_of(fear-5, him-7)
nsubj(sleep-11, he-9)
aux(sleep-11, would-10)
parataxis('s-3, sleep-11)
mark(crying-20, though-12)
predet(babies-15, all-13)
det(babies-15, the-14)
nsubj(crying-20, babies-15)
nn(Leas-18, Priory-17)
prep_in(babies-15, Leas-18)
aux(crying-20, were-19)
advcl(sleep-11, crying-20)
det(room-23, the-22)
prep_in(crying-20, room-23)

(ROOT
  (S (`` ``)
    (VP (VB Would)
      (NP (PRP I))
      (ADVP (RB really)))
    (. ?) ('' '')))

root(ROOT-0, Would-2)
dobj(Would-2, I-3)
advmod(Would-2, really-4)

(ROOT
  (S
    (VP (VBD thought)
      (NP (NNP Willie))
      (, ,)
      (S
        (VP (VBG feeling)
          (ADJP (RB rather) (JJ ashamed))
          (PP (IN of)
            (NP (PRP himself))))))
    (. .)))

root(ROOT-0, thought-1)
dobj(thought-1, Willie-2)
vmod(thought-1, feeling-4)
advmod(ashamed-6, rather-5)
acomp(feeling-4, ashamed-6)
prep_of(feeling-4, himself-8)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHNP (WP who))
    (SQ (MD will)
      (VP
        (VP (VB get)
          (PRT (RP up)))
        (CC and)
        (VP (VB warm)
          (NP
            (NP (DT the) (NN milk-and-water))
            (PP (IN for)
              (NP (PRP you)))))))
    (. ?) ('' '')))

nsubj(get-5, who-3)
nsubj(warm-8, who-3)
aux(get-5, will-4)
root(ROOT-0, get-5)
prt(get-5, up-6)
conj_and(get-5, warm-8)
det(milk-and-water-10, the-9)
dobj(warm-8, milk-and-water-10)
prep_for(milk-and-water-10, you-12)

(ROOT
  (S
    (VP (VBN pursued)
      (NP (PRP$ his) (NN father)))
    (. .)))

root(ROOT-0, pursued-1)
poss(father-3, his-2)
dobj(pursued-1, father-3)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP (VB manage)
        (NP (DT that))
        (ADVP (RB quite) (RB well))))
    (. .) ('' '')))

nsubj(manage-3, I-1)
aux(manage-3, can-2)
root(ROOT-0, manage-3)
dobj(manage-3, that-4)
advmod(well-6, quite-5)
advmod(manage-3, well-6)

(ROOT
  (S (`` ``)
    (NP (NNP Could))
    (RB n't)
    (NP (PRP I))
    (VP (VBP do)
      (NP
        (NP (DT that))
        (, ,)
        (NP (NN mamma))))
    (. ?) ('' '')))

nsubj(do-5, Could-2)
neg(do-5, n't-3)
nsubj(do-5, I-4)
root(ROOT-0, do-5)
dobj(do-5, that-6)
appos(that-6, mamma-8)

(ROOT
  (S
    (VP (VBD said)
      (NP
        (NP (NNP Willie))
        (, ,)
        (ADJP (RB very) (JJ humbly))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD thought)
              (SBAR
                (WHPP (IN of)
                  (WHNP (WP what)))
                (S
                  (NP (PRP$ his) (NN mother))
                  (VP (VBD had)
                    (VP (VBN said)
                      (PP (IN about)
                        (NP (PRP$ his) (VBG sleeping) (NNS powers))))))))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)
advmod(humbly-5, very-4)
amod(Willie-2, humbly-5)
mark(thought-9, for-7)
nsubj(thought-9, he-8)
dep(Willie-2, thought-9)
prep_of(said-15, what-11)
poss(mother-13, his-12)
nsubj(said-15, mother-13)
aux(said-15, had-14)
ccomp(thought-9, said-15)
poss(powers-19, his-17)
amod(powers-19, sleeping-18)
prep_about(said-15, powers-19)

(ROOT
  (S (`` ``)
    (S
      (FRAG
        (INTJ (UH No))
        (, ,)
        (NP (PRP$ my) (NN pet))
        (, ,) ('' ''))
      (NP (PRP she))
      (VP (VBD answered)))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD said)
        (ADVP (DT no) (RBR more))))
    (. .)))

discourse(pet-5, No-2)
poss(pet-5, my-4)
dep(answered-9, pet-5)
nsubj(answered-9, she-8)
root(ROOT-0, answered-9)
nsubj(said-13, he-12)
conj_and(answered-9, said-13)
neg(more-15, no-14)
advmod(said-13, more-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ seems)
        (PP (TO to)
          (NP (PRP me)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (PRP$ his) (NN father))
      (, ,)
      (NP (`` ``) (DT a) (JJ very) (JJ clumsy) (NN necessity)))
    (. .)))

nsubj(seems-3, It-2)
ccomp(said-8, seems-3)
prep_to(seems-3, me-5)
root(ROOT-0, said-8)
poss(father-10, his-9)
nsubj(said-8, father-10)
det(necessity-16, a-13)
amod(necessity-16, very-14)
amod(necessity-16, clumsy-15)
appos(father-10, necessity-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBG thinking)
          (PRT (RP over))
          (NP (PRP it)))))
    (. .)))

nsubj(thinking-4, I-1)
aux(thinking-4, have-2)
aux(thinking-4, been-3)
root(ROOT-0, thinking-4)
prt(thinking-4, over-5)
dobj(thinking-4, it-6)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB keep)
          (NP (DT a) (NN fire))
          (PP (IN in)
            (NP (DT all) (NN night) (RB only)))
          (S
            (VP (TO to)
              (VP (VB warm)
                (NP
                  (NP (PDT such) (DT a) (JJ tiny) (NN drop))
                  (PP (IN of)
                    (NP (NN water))))
                (SBAR (IN as)
                  (S
                    (NP (PRP she))
                    (VP (VBZ wants))))))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (MD must)
          (VP (VB say))))
      (, ,))
    (VP (VBZ seems)
      (PP (IN like)
        (S
          (VP (VBG using)
            (NP (DT a) (NN steam-engine)
              (S
                (VP (TO to)
                  (VP (VB sweep)
                    (PRT (RP up))
                    (NP (DT the) (NNS crumbs))))))))))
    (. .)))

aux(keep-2, To-1)
csubj(seems-25, keep-2)
det(fire-4, a-3)
dobj(keep-2, fire-4)
det(night-7, all-6)
prep_in(keep-2, night-7)
advmod(night-7, only-8)
aux(warm-10, to-9)
vmod(keep-2, warm-10)
predet(drop-14, such-11)
det(drop-14, a-12)
amod(drop-14, tiny-13)
dobj(warm-10, drop-14)
prep_of(drop-14, water-16)
mark(wants-19, as-17)
nsubj(wants-19, she-18)
advcl(warm-10, wants-19)
nsubj(say-23, I-21)
aux(say-23, must-22)
parataxis(seems-25, say-23)
root(ROOT-0, seems-25)
prepc_like(seems-25, using-27)
det(steam-engine-29, a-28)
dobj(using-27, steam-engine-29)
aux(sweep-31, to-30)
vmod(steam-engine-29, sweep-31)
prt(sweep-31, up-32)
det(crumbs-34, the-33)
dobj(sweep-31, crumbs-34)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD would)
          (ADVP (RB just))
          (VP
            (VP (VB get)
              (NP (DT a) (NN stone) (NN bottle)))
            (, ,)
            (VP (VB fill)
              (NP (PRP it))
              (PP (IN with)
                (NP (JJ boiling) (NN water))))
            (, ,)
            (VP (VB wrap)
              (NP
                (NP (DT a) (NN piece))
                (PP (IN of)
                  (NP (NN flannel))))
              (PP (IN about)
                (NP (PRP it))))
            (, ,)
            (CC and)
            (VP (VB lay)
              (NP (PRP it))
              (ADVP (RB anywhere)
                (PP (IN in)
                  (NP (DT the) (NN bed)))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB quite) (JJ hot))
        (ADVP
          (ADVP (RB enough) (RB even))
          (PP (IN in)
            (NP (DT the) (NN morning))))
        (S
          (VP (TO to)
            (VP (VB make)
              (S
                (NP (DT the) (NN milk))
                (ADJP (RB as) (JJ warm))
                (SBAR (IN as)
                  (S
                    (NP (PRP she))
                    (VP (MD ought)
                      (S
                        (VP (TO to)
                          (VP (VB have)
                            (NP (PRP it))))))))))))))
    (. .) ('' '')))

mark(get-5, If-1)
nsubj(get-5, you-2)
nsubj(fill-10, you-2)
nsubj(wrap-16, you-2)
nsubj(lay-25, you-2)
aux(get-5, would-3)
advmod(get-5, just-4)
advcl(hot-36, get-5)
det(bottle-8, a-6)
nn(bottle-8, stone-7)
dobj(get-5, bottle-8)
conj_and(get-5, fill-10)
advcl(hot-36, fill-10)
dobj(fill-10, it-11)
amod(water-14, boiling-13)
prep_with(fill-10, water-14)
conj_and(get-5, wrap-16)
advcl(hot-36, wrap-16)
det(piece-18, a-17)
dobj(wrap-16, piece-18)
prep_of(piece-18, flannel-20)
prep_about(wrap-16, it-22)
conj_and(get-5, lay-25)
advcl(hot-36, lay-25)
dobj(lay-25, it-26)
advmod(lay-25, anywhere-27)
det(bed-30, the-29)
prep_in(anywhere-27, bed-30)
nsubj(hot-36, it-32)
nsubj(make-43, it-32)
aux(hot-36, would-33)
cop(hot-36, be-34)
advmod(hot-36, quite-35)
root(ROOT-0, hot-36)
advmod(even-38, enough-37)
advmod(hot-36, even-38)
det(morning-41, the-40)
prep_in(even-38, morning-41)
aux(make-43, to-42)
xcomp(hot-36, make-43)
det(milk-45, the-44)
nsubj(ought-50, milk-45)
nsubj(have-52, milk-45)
advmod(warm-47, as-46)
dep(ought-50, warm-47)
mark(ought-50, as-48)
nsubj(ought-50, she-49)
nsubj(have-52, she-49)
xcomp(make-43, ought-50)
aux(have-52, to-51)
xcomp(ought-50, have-52)
dobj(have-52, it-53)

(ROOT
  (S (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP
              (VP (VB go)
                (PP (TO to)
                  (NP
                    (NP (NNP Willie) (POS 's))
                    (NN room))))
              (, ,)
              (CC and)
              (VP (VB let)
                (SBAR
                  (S
                    (NP (NNP Willie))
                    (VP (VBP come)
                      (CC and)
                      (VBP sleep)
                      (PP (IN with)
                        (NP (PRP me)))))))))))
      (, ,)
      (NP (PRP I))
      (VP (MD will)
        (VP (VB try)
          (NP (PRP it)))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

mark(go-5, If-2)
nsubj(go-5, you-3)
nsubj(let-12, you-3)
aux(go-5, will-4)
advcl(try-22, go-5)
poss(room-9, Willie-7)
prep_to(go-5, room-9)
conj_and(go-5, let-12)
advcl(try-22, let-12)
nsubj(come-14, Willie-13)
nsubj(sleep-16, Willie-13)
ccomp(let-12, come-14)
ccomp(let-12, sleep-16)
conj_and(come-14, sleep-16)
prep_with(come-14, me-18)
nsubj(try-22, I-20)
aux(try-22, will-21)
ccomp(said-27, try-22)
dobj(try-22, it-23)
nsubj(said-27, she-26)
root(ROOT-0, said-27)

(ROOT
  (S
    (S
      (NP (NNP Mr) (NNP Macmichael))
      (VP (VBD consented)))
    (: ;)
    (CC and)
    (ADVP (RB straightway))
    (S
      (NP (NNP Willie))
      (VP (VBD was)
        (VP (VBN filled)
          (PP (IN with)
            (NP (JJ silent) (NN delight)))
          (PP (IN at)
            (NP
              (NP (DT the) (NN thought))
              (PP (IN of)
                (S
                  (VP (VBG sleeping)
                    (PP (IN with)
                      (NP
                        (NP (PRP$ his) (NN mother))
                        (CC and)
                        (NP (DT the) (NN baby))))))))))))
    (. .)))

nn(Macmichael-2, Mr-1)
nsubj(consented-3, Macmichael-2)
root(ROOT-0, consented-3)
advmod(filled-9, straightway-6)
nsubjpass(filled-9, Willie-7)
auxpass(filled-9, was-8)
conj_and(consented-3, filled-9)
amod(delight-12, silent-11)
prep_with(filled-9, delight-12)
det(thought-15, the-14)
prep_at(filled-9, thought-15)
prepc_of(thought-15, sleeping-17)
poss(mother-20, his-19)
prep_with(sleeping-17, mother-20)
det(baby-23, the-22)
prep_with(sleeping-17, baby-23)
conj_and(mother-20, baby-23)

(ROOT
  (FRAG (CC Nor)
    (PP (RB because) (IN of)
      (NP
        (NP (DT that) (JJ only))
        (: ;)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD resolved)
              (PP (IN within)
                (NP (PRP himself)))
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (MD would)
                    (VP (VB try)
                      (S
                        (VP (TO to)
                          (VP (VB get)
                            (NP (DT a) (NN share))
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NN business))
                                (PP (IN of)
                                  (NP (DT the) (NN night)))))
                            (: :)
                            (SBARQ
                              (WHADVP (WRB why))
                              (SQ (MD should)
                                (NP (PRP$ his) (NN mother))
                                (VP (VB have)
                                  (NP
                                    (NP (RB too) (JJ little) (NN sleep))
                                    (CONJP (RB rather) (IN than))
                                    (NP (PRP himself)))))
                              (. ?))))))))))))))))

root(ROOT-0, Nor-1)
det(only-5, that-4)
prep_because_of(Nor-1, only-5)
mark(resolved-9, for-7)
nsubj(resolved-9, he-8)
dep(only-5, resolved-9)
prep_within(resolved-9, himself-11)
mark(try-15, that-12)
nsubj(try-15, he-13)
nsubj(get-17, he-13)
aux(try-15, would-14)
ccomp(resolved-9, try-15)
aux(get-17, to-16)
xcomp(try-15, get-17)
det(share-19, a-18)
dobj(get-17, share-19)
det(business-22, the-21)
prep_in(get-17, business-22)
det(night-25, the-24)
prep_of(business-22, night-25)
advmod(have-31, why-27)
aux(have-31, should-28)
poss(mother-30, his-29)
nsubj(have-31, mother-30)
ccomp(get-17, have-31)
parataxis(get-17, have-31)
advmod(sleep-34, too-32)
amod(sleep-34, little-33)
dobj(have-31, sleep-34)
dobj(have-31, himself-37)
conj_negcc(sleep-34, himself-37)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD might)
      (ADVP (IN at) (JJS least))
      (VP (VBP divide)
        (NP
          (NP (DT the)
            (ADJP (RB too) (JJ little)))
          (PP (IN between)
            (NP (PRP them))))))
    (. !)))

nsubj(divide-5, They-1)
aux(divide-5, might-2)
advmod(divide-5, at-3)
pobj(at-3, least-4)
root(ROOT-0, divide-5)
det(little-8, the-6)
advmod(little-8, too-7)
dobj(divide-5, little-8)
prep_between(little-8, them-10)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBD went)
      (PP (TO to)
        (NP
          (NP (NN bed) (RB early))
          (, ,)
          (PP (JJ full) (IN of)
            (NP
              (NP (DT the) (NN thought))
              (PP (IN of)
                (S
                  (VP
                    (VP (VBG waking)
                      (ADVP
                        (ADVP (RB up) (RB as) (RB soon))
                        (SBAR (IN as)
                          (S
                            (NP (NNP Agnes))
                            (VP (MD should)
                              (VP (VB begin)
                                (S
                                  (VP (TO to)
                                    (VP (VB cry))))))))))
                    (, ,)
                    (CC and)
                    (VP (VBG finding)
                      (PRT (RP out))
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP he))
                          (VP (MD could)
                            (VP (VB do))))))))))))))
    (. .)))

dep(went-3, So-1)
nsubj(went-3, he-2)
root(ROOT-0, went-3)
prep_to(went-3, bed-5)
advmod(bed-5, early-6)
dep(bed-5, full-8)
det(thought-11, the-10)
prep_of(bed-5, thought-11)
prepc_of(thought-11, waking-13)
advmod(soon-16, up-14)
advmod(soon-16, as-15)
advmod(waking-13, soon-16)
mark(begin-20, as-17)
nsubj(begin-20, Agnes-18)
nsubj(cry-22, Agnes-18)
aux(begin-20, should-19)
advcl(soon-16, begin-20)
ccomp(soon-16, begin-20)
aux(cry-22, to-21)
xcomp(begin-20, cry-22)
prepc_of(thought-11, finding-25)
conj_and(waking-13, finding-25)
prt(finding-25, out-26)
dobj(do-30, what-27)
nsubj(do-30, he-28)
aux(do-30, could-29)
ccomp(finding-25, do-30)

(ROOT
  (S
    (ADVP (RB Already))
    (NP (PRP he))
    (VP
      (VP (VBD had)
        (VP (VBN begun)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ useful)
                  (PP (IN in)
                    (NP (DT the) (JJ daytime)))))))))
      (, ,)
      (CC and)
      (VP (VBD had)
        (ADVP (RB twice))
        (VP (VBN put)
          (S
            (NP (PRP her))
            (VP (TO to)
              (VP (VB sleep)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (CC both)
                      (NP (PRP$ his) (NN mother))
                      (CC and)
                      (NP (NNP Tibby)))
                    (VP (VBD had)
                      (VP (VBN failed)))))))))))
    (. .)))

advmod(begun-4, Already-1)
nsubj(begun-4, he-2)
nsubj(useful-7, he-2)
nsubj(put-15, he-2)
aux(begun-4, had-3)
root(ROOT-0, begun-4)
aux(useful-7, to-5)
cop(useful-7, be-6)
xcomp(begun-4, useful-7)
det(daytime-10, the-9)
prep_in(useful-7, daytime-10)
aux(put-15, had-13)
advmod(put-15, twice-14)
conj_and(begun-4, put-15)
dobj(put-15, her-16)
nsubj(sleep-18, her-16)
aux(sleep-18, to-17)
xcomp(put-15, sleep-18)
advmod(failed-26, when-19)
preconj(mother-22, both-20)
poss(mother-22, his-21)
nsubj(failed-26, mother-22)
conj_and(mother-22, Tibby-24)
nsubj(failed-26, Tibby-24)
aux(failed-26, had-25)
advcl(sleep-18, failed-26)

(ROOT
  (S (CC And)
    (SBAR (IN although)
      (S
        (NP (PRP he))
        (ADVP (RB quite))
        (VP (VBD understood)
          (SBAR (IN that)
            (S
              (PP (IN in)
                (NP (DT all) (NN probability)))
              (NP (PRP he))
              (VP (MD would) (RB not)
                (VP (VB have)
                  (VP (VBN succeeded)
                    (SBAR (IN if)
                      (S
                        (NP (PRP they))
                        (VP (VBD had) (RB n't)
                          (VP (VBN tried)
                            (ADVP (RB first))))))))))))))
    (, ,)
    (S
      (ADVP (RB yet))
      (NP (PRP it))
      (VP (VBD had)
        (VP (VBN been)
          (NP
            (NP (DT some) (NN relief))
            (PP (TO to)
              (NP (PRP them)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD had)
        (VP (VBD confessed)
          (NP (PRP it)))))
    (. .)))

mark(understood-5, although-2)
nsubj(understood-5, he-3)
advmod(understood-5, quite-4)
advcl(relief-27, understood-5)
mark(succeeded-14, that-6)
det(probability-9, all-8)
prep_in(succeeded-14, probability-9)
nsubj(succeeded-14, he-10)
aux(succeeded-14, would-11)
neg(succeeded-14, not-12)
aux(succeeded-14, have-13)
ccomp(understood-5, succeeded-14)
mark(tried-19, if-15)
nsubj(tried-19, they-16)
aux(tried-19, had-17)
neg(tried-19, n't-18)
advcl(succeeded-14, tried-19)
advmod(tried-19, first-20)
advmod(relief-27, yet-22)
nsubj(relief-27, it-23)
aux(relief-27, had-24)
cop(relief-27, been-25)
det(relief-27, some-26)
root(ROOT-0, relief-27)
prep_to(relief-27, them-29)
nsubj(confessed-34, they-32)
aux(confessed-34, had-33)
conj_and(relief-27, confessed-34)
dobj(confessed-34, it-35)

(ROOT
  (S
    (S (CC But)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD woke))))
      (, ,)
      (NP (EX there))
      (VP (VBD lay)
        (NP (PRP$ his) (NN mother))))
    (CC and)
    (S
      (NP
        (NP (PRP$ his) (NN sister))
        (ADJP (DT both) (JJ sound)))
      (ADJP (RB asleep)))
    (: ;)
    (S
      (NP (DT the) (NN sun))
      (VP (VBD was)
        (VP (VBG shining)
          (PP (IN through)
            (NP (DT the) (JJ blind))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD heard)
        (NP
          (NP (NNP Tibby))
          (PP (IN about)
            (NP (DT the) (NN house))))))
    (: ;)
    (CC and)
    (S (, ,)
      (PP (IN in)
        (ADJP (JJ short)))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)
        (VP (NN time)
          (S
            (VP (TO to)
              (VP (VB get)
                (PRT (RP up))))))))
    (. .)))

advmod(woke-4, when-2)
nsubj(woke-4, he-3)
advcl(lay-7, woke-4)
expl(lay-7, there-6)
root(ROOT-0, lay-7)
poss(mother-9, his-8)
dobj(lay-7, mother-9)
nsubj(lay-7, mother-9)
poss(sister-12, his-11)
dep(asleep-15, sister-12)
det(sound-14, both-13)
amod(sister-12, sound-14)
conj_and(lay-7, asleep-15)
det(sun-18, the-17)
nsubj(shining-20, sun-18)
aux(shining-20, was-19)
dep(lay-7, shining-20)
det(blind-23, the-22)
prep_through(shining-20, blind-23)
nsubj(heard-26, he-25)
dep(lay-7, heard-26)
dobj(heard-26, Tibby-27)
det(house-30, the-29)
prep_about(Tibby-27, house-30)
prep_in(time-39, short-35)
nsubj(time-39, it-37)
nsubj(get-41, it-37)
aux(time-39, was-38)
conj_and(lay-7, time-39)
aux(get-41, to-40)
xcomp(time-39, get-41)
prt(get-41, up-42)

(ROOT
  (S
    (PP (IN At)
      (NP (NN breakfast)))
    (, ,)
    (NP (PRP$ his) (NN father))
    (VP (VBD said)
      (PP (TO to)
        (NP
          (NP (PRP him))
          (: --) (`` ``)
          (SBARQ
            (FRAG
              (INTJ (UH Well))
              (, ,)
              (NP (NNP Willie)))
            (, ,)
            (SBARQ
              (WHADVP (WRB how))
              (SQ (VBD did)
                (NP (NNPS Agnes))
                (VP (VB behave)
                  (NP (PRP herself))
                  (NP (JJ last) (NN night)))))
            (. ?)))))
    ('' '')))

prep_at(said-6, breakfast-2)
poss(father-5, his-4)
nsubj(said-6, father-5)
root(ROOT-0, said-6)
prep_to(said-6, him-8)
discourse(Willie-13, Well-11)
dep(behave-18, Willie-13)
advmod(behave-18, how-15)
aux(behave-18, did-16)
nsubj(behave-18, Agnes-17)
dep(him-8, behave-18)
dobj(behave-18, herself-19)
amod(night-21, last-20)
tmod(behave-18, night-21)

(ROOT
  (S (`` ``)
    (NP (RB So) (NN well))
    (VP (VBZ !))
    ('' '')))

advmod(well-3, So-2)
nsubj(!-4, well-3)

(ROOT
  (S
    (S
      (VP (VBN answered)
        (NP (NNP Willie))))
    (: ;) (`` ``)
    (S
      (NP (PRP she))
      (ADVP (RB never))
      (VP (VBD cried)
        (ADVP (RB once))))
    (. .) ('' '')))

root(ROOT-0, answered-1)
dobj(answered-1, Willie-2)
nsubj(cried-7, she-5)
neg(cried-7, never-6)
parataxis(answered-1, cried-7)
advmod(cried-7, once-8)

(ROOT
  (S (`` ``)
    (NP (NNP O))
    (VP (VBZ Willie))
    (. !) ('' '')))

nsubj(Willie-3, O-2)
root(ROOT-0, Willie-3)

(ROOT
  (SINV
    (VP (VBD said))
    (NP
      (NP (PRP$ his) (NN mother))
      (, ,)
      (VP (VBG laughing)))
    (, ,) (`` ``)
    (S
      (NP (PRP she))
      (VP
        (VP (VBD screamed)
          (PP (IN for)
            (NP (DT a) (JJ whole) (NN hour))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (ADJP (RB so) (JJ hungry)
            (PP (IN after)
              (NP (PRP it))))
          (SBAR (IN that)
            (S
              (NP (PRP she))
              (VP (VBN emptied)
                (NP (PRP$ her) (NN bottle))
                (PP (IN without)
                  (S
                    (VP (VBG stopping)
                      (ADVP (RB once)))))))))))
    (. .)))

root(ROOT-0, said-1)
poss(mother-3, his-2)
nsubj(said-1, mother-3)
vmod(mother-3, laughing-5)
nsubj(screamed-9, she-8)
nsubj(hungry-18, she-8)
ccomp(said-1, screamed-9)
det(hour-13, a-11)
amod(hour-13, whole-12)
prep_for(screamed-9, hour-13)
cop(hungry-18, was-16)
advmod(hungry-18, so-17)
ccomp(said-1, hungry-18)
conj_and(screamed-9, hungry-18)
prep_after(hungry-18, it-20)
mark(emptied-23, that-21)
nsubj(emptied-23, she-22)
ccomp(hungry-18, emptied-23)
poss(bottle-25, her-24)
dobj(emptied-23, bottle-25)
prepc_without(emptied-23, stopping-27)
advmod(stopping-27, once-28)

(ROOT
  (S
    (NP (PRP You))
    (VP
      (VP (VBD were)
        (ADJP (JJ sound) (JJ asleep))
        (NP (PDT all) (DT the) (NN time)))
      (, ,)
      (CC and)
      (ADVP (RB never))
      (VP (VBD stirred)))
    (. .) ('' '')))

nsubj(asleep-4, You-1)
nsubj(stirred-11, You-1)
cop(asleep-4, were-2)
amod(asleep-4, sound-3)
root(ROOT-0, asleep-4)
predet(time-7, all-5)
det(time-7, the-6)
dep(asleep-4, time-7)
neg(stirred-11, never-10)
conj_and(asleep-4, stirred-11)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD was)
      (ADJP (RB so) (RB much) (JJ ashamed))
      (PP (IN of)
        (NP (PRP himself)))
      (, ,)
      (SBAR (IN although)
        (S
          (NP (PRP he))
          (VP (VBD was) (RB n't)
            (PP (IN in)
              (NP
                (NP (DT the) (JJS least))
                (PP (TO to)
                  (NP (NN blame)))))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (MD could)
                  (ADVP (RB hardly))
                  (VP (VB keep)
                    (PP (IN from)
                      (S
                        (VP (VBG crying))))))))))))
    (. .)))

nsubj(ashamed-5, Willie-1)
cop(ashamed-5, was-2)
advmod(ashamed-5, so-3)
advmod(ashamed-5, much-4)
root(ROOT-0, ashamed-5)
prep_of(ashamed-5, himself-7)
mark(was-11, although-9)
nsubj(was-11, he-10)
advcl(ashamed-5, was-11)
neg(was-11, n't-12)
det(least-15, the-14)
prep_in(was-11, least-15)
prep_to(least-15, blame-17)
mark(keep-23, that-19)
nsubj(keep-23, he-20)
aux(keep-23, could-21)
advmod(keep-23, hardly-22)
ccomp(was-11, keep-23)
prepc_from(keep-23, crying-25)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD did) (RB not)
        (VP (VB say)
          (NP
            (NP (DT another) (NN word))
            (, ,)
            (PP (IN except)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (VP (VBN spoken)
                      (S
                        (VP (TO to))))))))
            (, ,)
            (ADVP (DT all)))
          (PP (IN through)
            (NP (NN breakfast))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NN father)
        (CC and)
        (NN mother))
      (VP (VBD were)
        (VP (VBN puzzled)
          (S
            (VP (TO to)
              (VP (VB think)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (MD could)
                      (VP (VB be)
                        (NP
                          (NP (DT the) (NN matter))
                          (PP (IN with)
                            (NP (PRP him))))))))))))))
    (: :)
    (S
      (NP (PRP He))
      (VP (VBD went)
        (PP (IN about)
          (NP
            (NP (DT the) (JJR greater) (NN part))
            (PP (IN of)
              (NP (DT the) (NN morning) (NN moodily) (NN thinking)))))))
    (: ;)
    (S
      (NP
        (NP (RB then))
        (PP (IN for)
          (NP (NN advice))))
      (VP (VBP betook)
        (NP (PRP himself))
        (PP (TO to)
          (NP
            (NP (NNP Mrs) (NNP Wilson))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (VBD gave)
                    (NP (PRP him))
                    (NP (PRP$ her) (JJ full) (NN attention)))
                  (, ,)
                  (CC and)
                  (VP (VBD suggested)
                    (NP (JJ several) (NNS things))))))))))
    (, ,)
    (S
      (NP
        (NP (NN none))
        (WHPP (IN of)
          (WHNP (WDT which))))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (VP (VBD seemed)
        (PP (TO to)
          (NP (PRP him)))
        (ADVP (RB likely))
        (S
          (VP (TO to)
            (VP (VB succeed))))))
    (. .)))

nsubj(say-4, He-1)
aux(say-4, did-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
det(word-6, another-5)
dobj(say-4, word-6)
advmod(spoken-12, when-9)
nsubjpass(spoken-12, he-10)
nsubj(to-13, he-10)
auxpass(spoken-12, was-11)
prepc_except(word-6, spoken-12)
xcomp(spoken-12, to-13)
advmod(word-6, all-15)
prep_through(say-4, breakfast-17)
poss(father-21, his-20)
nsubjpass(puzzled-25, father-21)
nsubj(think-27, father-21)
conj_and(father-21, mother-23)
nsubjpass(puzzled-25, mother-23)
nsubj(think-27, mother-23)
auxpass(puzzled-25, were-24)
conj_and(say-4, puzzled-25)
aux(think-27, to-26)
xcomp(puzzled-25, think-27)
nsubj(matter-32, what-28)
aux(matter-32, could-29)
cop(matter-32, be-30)
det(matter-32, the-31)
ccomp(think-27, matter-32)
prep_with(matter-32, him-34)
nsubj(went-37, He-36)
conj_and(say-4, went-37)
parataxis(say-4, went-37)
det(part-41, the-39)
amod(part-41, greater-40)
prep_about(went-37, part-41)
det(thinking-46, the-43)
nn(thinking-46, morning-44)
nn(thinking-46, moodily-45)
prep_of(part-41, thinking-46)
nsubj(betook-51, then-48)
prep_for(then-48, advice-50)
conj_and(say-4, betook-51)
parataxis(say-4, betook-51)
dobj(betook-51, himself-52)
nn(Wilson-55, Mrs-54)
prep_to(betook-51, Wilson-55)
nsubj(gave-58, Wilson-55)
nsubj(suggested-65, Wilson-55)
rcmod(Wilson-55, gave-58)
iobj(gave-58, him-59)
poss(attention-62, her-60)
amod(attention-62, full-61)
dobj(gave-58, attention-62)
rcmod(Wilson-55, suggested-65)
conj_and(gave-58, suggested-65)
amod(things-67, several-66)
dobj(suggested-65, things-67)
nsubj(seemed-75, none-69)
nsubj(succeed-80, none-69)
prep_of(none-69, which-71)
advmod(seemed-75, however-73)
conj_and(say-4, seemed-75)
parataxis(say-4, seemed-75)
prep_to(seemed-75, him-77)
advmod(seemed-75, likely-78)
aux(succeed-80, to-79)
xcomp(seemed-75, succeed-80)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (MD could)
          (ADVP (CC but))
          (VP (VB go)
            (PP (TO to)
              (NP (NN bed)))
            (SBAR (IN after)
              (S
                (NP (NN mamma))
                (VP (VBD was)
                  (ADJP (RB asleep)))))))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD said)))
      (, ,) (`` ``))
    (NP (PRP I))
    (VP (MD could)
      (VP
        (VP (VB tie)
          (NP (DT a) (NN string))
          (PP (TO to)
            (NP (PRP$ my) (NN hair))))
        (, ,)
        (CC and)
        (ADVP (RB then))
        (VP (VB slip)
          (NP (DT a) (NN loop))
          (PP (IN at)
            (NP
              (NP (DT the) (JJ other) (NN end))
              (PP (IN over)
                (NP
                  (NP (NNP mamma) (POS 's))
                  (NN wrist)))))
          (, ,)
          (SBAR (RB so) (IN that)
            (S
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP she))
                  (VP (VBD sat)
                    (PRT (RP up))
                    (S
                      (VP (TO to)
                        (VP (VB attend)
                          (PP (TO to)
                            (NP (NNP Agnes)))))))))
              (, ,)
              (NP (PRP she))
              (VP (MD would)
                (VP (VB pull)
                  (NP (PRP$ my) (NN hair)
                    (CC and)
                    (NN wake)))))))
        (NP (PRP me))))
    (. .)))

mark(go-6, If-2)
nsubj(go-6, I-3)
aux(go-6, could-4)
advmod(go-6, but-5)
advcl(tie-21, go-6)
prep_to(go-6, bed-8)
mark(asleep-12, after-9)
nsubj(asleep-12, mamma-10)
cop(asleep-12, was-11)
advcl(go-6, asleep-12)
nsubj(said-16, he-15)
parataxis(tie-21, said-16)
nsubj(tie-21, I-19)
nsubj(slip-30, I-19)
aux(tie-21, could-20)
root(ROOT-0, tie-21)
det(string-23, a-22)
dobj(tie-21, string-23)
poss(hair-26, my-25)
prep_to(tie-21, hair-26)
advmod(slip-30, then-29)
conj_and(tie-21, slip-30)
det(loop-32, a-31)
dobj(slip-30, loop-32)
det(end-36, the-34)
amod(end-36, other-35)
prep_at(slip-30, end-36)
poss(wrist-40, mamma-38)
prep_over(end-36, wrist-40)
advmod(pull-55, so-42)
mark(pull-55, that-43)
advmod(sat-46, when-44)
nsubj(sat-46, she-45)
nsubj(attend-49, she-45)
advcl(pull-55, sat-46)
prt(sat-46, up-47)
aux(attend-49, to-48)
xcomp(sat-46, attend-49)
prep_to(attend-49, Agnes-51)
nsubj(pull-55, she-53)
aux(pull-55, would-54)
advcl(slip-30, pull-55)
poss(hair-57, my-56)
dobj(pull-55, hair-57)
dobj(pull-55, wake-59)
conj_and(hair-57, wake-59)
dobj(tie-21, me-60)

(ROOT
  (S
    (NP (NNP Would))
    (RB n't)
    (NP (PRP she))
    (VP (VBP wonder)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBD was)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP she))
                (VP (VBD felt)
                  (S
                    (NP (PRP it))
                    (VP (VBG pulling)
                      (S
                        (VP (VBG _)
                          (NP (PRP$ her) (NN _)))))))))))))
    (. ?) ('' '')))

nsubj(wonder-4, Would-1)
neg(wonder-4, n't-2)
nsubj(wonder-4, she-3)
root(ROOT-0, wonder-4)
dobj(was-7, what-5)
nsubj(was-7, it-6)
ccomp(wonder-4, was-7)
advmod(felt-10, when-8)
nsubj(felt-10, she-9)
advcl(was-7, felt-10)
nsubj(pulling-12, it-11)
dep(felt-10, pulling-12)
vmod(pulling-12, _-13)
poss(_-15, her-14)
dobj(_-13, _-15)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB go)
            (NP (NN home))
            (PP (IN without)
              (NP
                (NP (DT any) (NN help))
                (PP (IN from)
                  (NP (NNP Mrs) (NNP Wilson)))))))))
    (. .)))

nsubj(had-2, He-1)
nsubj(go-4, He-1)
root(ROOT-0, had-2)
aux(go-4, to-3)
xcomp(had-2, go-4)
dobj(go-4, home-5)
det(help-8, any-7)
prep_without(go-4, help-8)
nn(Wilson-11, Mrs-10)
prep_from(help-8, Wilson-11)

(ROOT
  (S
    (NP
      (NP (PDT All) (DT the) (NN way))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD kept)
            (S
              (VP (VBG thinking)
                (PP (IN with)
                  (NP (PRP himself)))
                (NP
                  (NP
                    (NP (NN something))
                    (PP (IN after)
                      (NP
                        (NP (DT this) (NN fashion))
                        (: --) (`` ``)
                        (S
                          (S
                            (NP (NNP Mamma))
                            (VP (MD wo) (RB n't)
                              (VP (VB wake)
                                (NP (PRP me)))))
                          (, ,)
                          (CC and)
                          (S
                            (NP (NNP Agnes))
                            (VP (MD ca) (RB n't)))))))
                  (: ;)
                  (CC and)
                  (NP
                    (NP (DT the) (JJS worst))
                    (PP (IN of)
                      (NP (PRP it)))))))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NN everybody) (RB else))
          (VP (MD will)
            (VP (VB be)
              (ADJP
                (ADVP (RB just) (RB as) (RB fast))
                (JJ asleep))
              (SBAR (IN as)
                (S
                  (NP (PRP I))
                  (VP (MD shall)
                    (VP (VB be))))))))))
    (. .)))

predet(way-3, All-1)
det(way-3, the-2)
nsubj(is-31, way-3)
nsubj(kept-5, he-4)
rcmod(way-3, kept-5)
xcomp(kept-5, thinking-6)
prep_with(thinking-6, himself-8)
dobj(thinking-6, something-9)
det(fashion-12, this-11)
prep_after(something-9, fashion-12)
nsubj(wake-18, Mamma-15)
aux(wake-18, wo-16)
neg(wake-18, n't-17)
dep(fashion-12, wake-18)
dobj(wake-18, me-19)
nsubj(ca-23, Agnes-22)
dep(fashion-12, ca-23)
conj_and(wake-18, ca-23)
neg(ca-23, n't-24)
det(worst-28, the-27)
dobj(thinking-6, worst-28)
conj_and(something-9, worst-28)
prep_of(worst-28, it-30)
root(ROOT-0, is-31)
mark(asleep-40, that-32)
nsubj(asleep-40, everybody-33)
advmod(everybody-33, else-34)
aux(asleep-40, will-35)
cop(asleep-40, be-36)
advmod(fast-39, just-37)
advmod(fast-39, as-38)
advmod(asleep-40, fast-39)
ccomp(is-31, asleep-40)
mark(be-44, as-41)
nsubj(be-44, I-42)
aux(be-44, shall-43)
advcl(asleep-40, be-44)

(ROOT
  (S
    (VP (VB Let)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP see) (: --)
            (SBAR
              (WHNP (WP who))
              (S
                (NP (NNP _))
                (VP (VBZ is)
                  (ADJP (JJ _)
                    (SBAR
                      (ADVP (RB there))
                      (WHNP (WDT that))
                      (SQ
                        (VP (VBZ 's)
                          (ADJP (RB awake))
                          (NP (DT all) (NN night))))
                      (. ?))))))))))))

root(ROOT-0, Let-1)
nsubj(see-3, me-2)
ccomp(Let-1, see-3)
dobj(_-8, who-5)
nsubj(_-8, _-6)
cop(_-8, is-7)
ccomp(see-3, _-8)
parataxis(see-3, _-8)
advmod(awake-12, there-9)
dep(awake-12, that-10)
cop(awake-12, 's-11)
dep(_-8, awake-12)
det(night-14, all-13)
tmod(awake-12, night-14)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP (DT the) (NN cat))))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (S
              (NP (PRP she))
              (VP (VBZ is)))
            (, ,)
            (S (CC but)
              (ADVP (RB then))
              (NP (PRP she))
              (VP (MD would) (RB n't)
                (VP (VB know)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (VP (TO to)
                        (VP (VB wake)
                          (NP (PRP me)))))))))
            (, ,)
            (CC and)
            (S
              (SBAR (RB even) (IN if)
                (S
                  (NP (PRP I))
                  (VP (MD could)
                    (VP (VB teach)
                      (S
                        (NP (PRP her))
                        (VP (TO to)
                          (VP (VB wake)
                            (S
                              (NP (PRP me))
                              (ADJP
                                (NP (DT the) (NN moment) (NNS Agnes))
                                (JJ cried))))))))))
              (, ,)
              (NP (PRP I))
              (VP (VBP do) (RB n't)
                (VP (VB think)
                  (SBAR
                    (S
                      (NP (PRP she))
                      (VP (MD would)
                        (VP (VB be)
                          (NP (DT a) (JJ nice) (NN one)
                            (S
                              (VP (TO to)
                                (VP (VB do)
                                  (NP (PRP it)))))))))))))
            (: ;)
            (SBAR (IN for)
              (S
                (SBAR (IN if)
                  (S
                    (NP (PRP I))
                    (VP (VBD did) (RB n't)
                      (VP (VB come)
                        (ADJP (RB awake))
                        (PP (IN with)
                          (NP
                            (NP (DT a) (NN pat))
                            (PP (IN of)
                              (NP (PRP$ her) (JJ velvety) (NNS pin-cushions)))))))))
                (, ,)
                (NP (PRP she))
                (VP
                  (VP (MD might)
                    (VP (VB turn)
                      (PRT (RP out))
                      (NP
                        (NP (DT the) (NNS points))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NNS pins))
                            (PP (IN in)
                              (NP (PRP them))))))))
                  (, ,)
                  (CC and)
                  (VP (VBP scratch)
                    (S
                      (NP (PRP me))
                      (ADJP (RB awake)))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(cat-4, the-3)
nsubj('s-2, cat-4)
nsubj(think-7, I-6)
parataxis('s-2, think-7)
nsubj(is-9, she-8)
dep(think-7, is-9)
cc(know-16, but-11)
advmod(know-16, then-12)
nsubj(know-16, she-13)
nsubj(wake-19, she-13)
aux(know-16, would-14)
neg(know-16, n't-15)
dep(think-7, know-16)
ccomp(is-9, know-16)
conj_and(is-9, know-16)
advmod(wake-19, when-17)
aux(wake-19, to-18)
xcomp(know-16, wake-19)
dobj(wake-19, me-20)
advmod(teach-27, even-23)
mark(teach-27, if-24)
nsubj(teach-27, I-25)
aux(teach-27, could-26)
advcl(think-40, teach-27)
dobj(teach-27, her-28)
nsubj(wake-30, her-28)
aux(wake-30, to-29)
xcomp(teach-27, wake-30)
nsubj(cried-35, me-31)
det(Agnes-34, the-32)
nn(Agnes-34, moment-33)
npadvmod(cried-35, Agnes-34)
xcomp(wake-30, cried-35)
nsubj(think-40, I-37)
aux(think-40, do-38)
neg(think-40, n't-39)
dep(think-7, think-40)
conj_and(is-9, think-40)
nsubj(one-46, she-41)
aux(one-46, would-42)
cop(one-46, be-43)
det(one-46, a-44)
amod(one-46, nice-45)
ccomp(think-40, one-46)
aux(do-48, to-47)
vmod(one-46, do-48)
dobj(do-48, it-49)
mark(turn-68, for-51)
mark(come-56, if-52)
nsubj(come-56, I-53)
aux(come-56, did-54)
neg(come-56, n't-55)
advcl(turn-68, come-56)
acomp(come-56, awake-57)
det(pat-60, a-59)
prep_with(come-56, pat-60)
poss(pin-cushions-64, her-62)
amod(pin-cushions-64, velvety-63)
prep_of(pat-60, pin-cushions-64)
nsubj(turn-68, she-66)
nsubj(scratch-79, she-66)
aux(turn-68, might-67)
dep(think-7, turn-68)
conj_and(is-9, turn-68)
prt(turn-68, out-69)
det(points-71, the-70)
dobj(turn-68, points-71)
det(pins-74, the-73)
prep_of(points-71, pins-74)
prep_in(pins-74, them-76)
conj_and(is-9, scratch-79)
conj_and(turn-68, scratch-79)
nsubj(awake-81, me-80)
xcomp(scratch-79, awake-81)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP (DT the) (NN clock))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP (RB always))
        (ADJP (RB awake))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD ca) (RB n't)
        (VP (VB tell)
          (NP (PRP you))
          (NP (DT the) (NN time))
          (SBAR (IN till)
            (S
              (NP (PRP you))
              (VP (VBP go)
                (CC and)
                (VBP ask)
                (NP (PRP it))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(clock-4, the-3)
nsubj('s-2, clock-4)
nsubj(awake-9, it-6)
cop(awake-9, 's-7)
advmod(awake-9, always-8)
conj_but('s-2, awake-9)
nsubj(tell-15, it-12)
aux(tell-15, ca-13)
neg(tell-15, n't-14)
conj_but('s-2, tell-15)
iobj(tell-15, you-16)
det(time-18, the-17)
dobj(tell-15, time-18)
mark(go-21, till-19)
nsubj(go-21, you-20)
nsubj(ask-23, you-20)
advcl(tell-15, go-21)
advcl(tell-15, ask-23)
conj_and(go-21, ask-23)
dobj(go-21, it-24)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD might)
              (VP (VB be)
                (VP (VBN made)
                  (S
                    (VP (TO to)
                      (VP (VB wind)
                        (PRT (RP up))
                        (NP
                          (NP (DT a) (NN string))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (MD should)
                                (VP (VB pull)
                                  (NP (PRP me))
                                  (SBAR
                                    (WHADVP (WRB when))
                                    (S
                                      (NP (DT the) (JJ right) (NN time))
                                      (VP (VBD came)))))))))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD could)
                (VP (VB teach)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubjpass(made-6, it-3)
nsubj(wind-8, it-3)
aux(made-6, might-4)
auxpass(made-6, be-5)
ccomp(think-2, made-6)
aux(wind-8, to-7)
xcomp(made-6, wind-8)
prt(wind-8, up-9)
det(string-11, a-10)
dobj(wind-8, string-11)
nsubj(pull-14, string-11)
aux(pull-14, should-13)
rcmod(string-11, pull-14)
dobj(pull-14, me-15)
advmod(came-20, when-16)
det(time-19, the-17)
amod(time-19, right-18)
nsubj(came-20, time-19)
advcl(pull-14, came-20)
nsubj(think-26, I-23)
aux(think-26, do-24)
neg(think-26, n't-25)
conj_but(think-2, think-26)
nsubj(teach-29, I-27)
aux(teach-29, could-28)
ccomp(think-26, teach-29)
dobj(teach-29, it-30)

(ROOT
  (S (CC And)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBD came)
            (PP (TO to)
              (NP (DT the) (NN pull))))))
      (, ,)
      (NP (DT the) (NN pull))
      (VP (MD might)
        (VP (VB stop)
          (NP (DT the) (NN clock)))))
    (, ,)
    (CC and)
    (SBARQ
      (WHNP (WP what))
      (SQ (MD would)
        (NP (NN papa))
        (VP (VB say)
          (ADVP (RB then)))))
    (. ?)))

advmod(came-4, when-2)
nsubj(came-4, it-3)
advcl(stop-12, came-4)
det(pull-7, the-6)
prep_to(came-4, pull-7)
det(pull-10, the-9)
nsubj(stop-12, pull-10)
aux(stop-12, might-11)
root(ROOT-0, stop-12)
det(clock-14, the-13)
dobj(stop-12, clock-14)
dobj(say-20, what-17)
aux(say-20, would-18)
nsubj(say-20, papa-19)
conj_and(stop-12, say-20)
advmod(say-20, then-21)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP tell)
        (NP (PRP me))
        (SBAR
          (S
            (NP (DT the) (NNS owls))
            (VP (VBP are)
              (ADVP (IN up) (DT all))
              (NP (NN night))))
          (, ,)
          (CC but)
          (S
            (NP (PRP they))
            (VP (VBP 're)
              (ADJP (RB no) (JJ good)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ certain)))
    (. .)))

nsubj(tell-2, They-1)
ccomp(certain-19, tell-2)
dobj(tell-2, me-3)
det(owls-5, the-4)
nsubj(night-9, owls-5)
cop(night-9, are-6)
advmod(night-9, up-7)
dep(up-7, all-8)
dep(tell-2, night-9)
nsubj(good-15, they-12)
cop(good-15, 're-13)
neg(good-15, no-14)
dep(tell-2, good-15)
conj_but(night-9, good-15)
nsubj(certain-19, I-17)
cop(certain-19, 'm-18)
root(ROOT-0, certain-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (ADVP (RB _))
            (VP (VBP am)
              (ADJP (JJ _)
                (S
                  (VP (TO to)
                    (VP (VB do))))))))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, do-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
dobj(_-9, what-5)
nsubj(do-11, what-5)
nsubj(_-9, I-6)
advmod(_-9, _-7)
cop(_-9, am-8)
ccomp(see-4, _-9)
aux(do-11, to-10)
xcomp(_-9, do-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP wonder)
      (SBAR (IN if)
        (S
          (NP (NNP God))
          (VP (MD would)
            (VP (VB wake)
              (NP (PRP me))
              (SBAR (IN if)
                (S
                  (NP (PRP I))
                  (VP (VBD were)
                    (S
                      (VP (TO to)
                        (VP (VB ask)
                          (NP (PRP Him)))))))))))))
    (. ?) ('' '')))

nsubj(wonder-2, I-1)
root(ROOT-0, wonder-2)
mark(wake-6, if-3)
nsubj(wake-6, God-4)
aux(wake-6, would-5)
advcl(wonder-2, wake-6)
dobj(wake-6, me-7)
mark(were-10, if-8)
nsubj(were-10, I-9)
nsubj(ask-12, I-9)
advcl(wake-6, were-10)
aux(ask-12, to-11)
xcomp(were-10, ask-12)
dobj(ask-12, Him-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR (IN whether)
          (S
            (NP (NNP Willie))
            (VP
              (VP (VBD did))
              (CC or)
              (VP (VBD did) (RB not)
                (VP (VB ask)
                  (S
                    (NP (NNP God))
                    (VP (TO to)
                      (VP (VB wake)
                        (NP (PRP him))))))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
mark(did-7, whether-5)
nsubj(did-7, Willie-6)
nsubj(ask-11, Willie-6)
ccomp(know-4, did-7)
aux(ask-11, did-9)
neg(ask-11, not-10)
ccomp(know-4, ask-11)
conj_or(did-7, ask-11)
dobj(ask-11, God-12)
nsubj(wake-14, God-12)
aux(wake-14, to-13)
xcomp(ask-11, wake-14)
dobj(wake-14, him-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD did) (RB not)
        (VP (VB inquire) (, ,)
          (PP (IN for)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ goes)
                  (PRT (RP on))
                  (PP (IN of)
                    (NP (DT that) (NN kind))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJR better))
      (S (RB not)
        (VP (TO to)
          (VP (VB talk)
            (NP (RB much) (RB about))))))
    (. .)))

nsubj(inquire-4, I-1)
aux(inquire-4, did-2)
neg(inquire-4, not-3)
ccomp(better-16, inquire-4)
nsubj(goes-8, what-7)
prepc_for(inquire-4, goes-8)
prt(goes-8, on-9)
det(kind-12, that-11)
prep_of(goes-8, kind-12)
nsubj(better-16, it-14)
nsubj(talk-19, it-14)
cop(better-16, is-15)
root(ROOT-0, better-16)
neg(talk-19, not-17)
aux(talk-19, to-18)
xcomp(better-16, talk-19)
advmod(about-21, much-20)
dobj(talk-19, about-21)

(ROOT
  (S
    (S
      (SBAR
        (WHNP (WP What))
        (S
          (NP (PRP I))
          (VP (VBP do)
            (VP (VB know)))))
      (VP (VBZ is) (, ,)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP
                (VP (VBD fell)
                  (S
                    (ADJP (RB asleep)))
                  (PP (IN with)
                    (NP
                      (NP (PRP$ his) (NN head)
                        (CC and)
                        (NN heart))
                      (PP (JJ full) (IN of)
                        (NP
                          (NP (NN desire))
                          (PP (TO to)
                            (NP (NN wake))))))))
                (CC and)
                (VP (VBP help)
                  (NP (PRP$ his) (NN mother))))))
          (: ;)
          (CC and)
          (SBAR (IN that)
            (S (, ,)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN middle))
                  (PP (IN of)
                    (NP (DT the) (NN night)))))
              (, ,)
              (NP (PRP he))
              (VP (VBD did)
                (NP (NN wake))
                (PRT (RP up))
                (ADVP (RB suddenly))))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (JJ little) (NNS Agnes))
          (VP (VBG screaming)
            (PP (IN with)
              (NP (PDT all) (PRP$ her) (NN might)))))))
    (. .)))

dobj(know-4, What-1)
nsubj(know-4, I-2)
aux(know-4, do-3)
csubj(is-5, know-4)
root(ROOT-0, is-5)
mark(fell-9, that-7)
nsubj(fell-9, he-8)
nsubj(help-22, he-8)
ccomp(is-5, fell-9)
dep(fell-9, asleep-10)
poss(head-13, his-12)
prep_with(fell-9, head-13)
prep_with(fell-9, heart-15)
conj_and(head-13, heart-15)
dep(head-13, full-16)
prep_of(head-13, desire-18)
prep_to(desire-18, wake-20)
ccomp(is-5, help-22)
conj_and(fell-9, help-22)
poss(mother-24, his-23)
dobj(help-22, mother-24)
mark(did-37, that-27)
det(middle-31, the-30)
prep_in(did-37, middle-31)
det(night-34, the-33)
prep_of(middle-31, night-34)
nsubj(did-37, he-36)
ccomp(is-5, did-37)
conj_and(fell-9, did-37)
dobj(did-37, wake-38)
prt(did-37, up-39)
advmod(did-37, suddenly-40)
expl(was-44, there-43)
conj_and(is-5, was-44)
amod(Agnes-46, little-45)
nsubj(was-44, Agnes-46)
vmod(Agnes-46, screaming-47)
predet(might-51, all-49)
poss(might-51, her-50)
prep_with(screaming-47, might-51)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD sat)
      (ADVP (RB up)
        (PP (IN in)
          (NP (NN bed))))
      (ADVP (RB instantly)))
    (. .)))

nsubj(sat-2, He-1)
root(ROOT-0, sat-2)
advmod(sat-2, up-3)
prep_in(up-3, bed-5)
advmod(sat-2, instantly-6)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (DT the) (NN matter))
        (, ,)
        (NP (NNP Willie))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, 's-3)
det(matter-5, the-4)
nsubj(What-2, matter-5)
appos(matter-5, Willie-7)

(ROOT
  (S
    (VP (VBD said)
      (NP (PRP$ his) (NN mother)))
    (. .)))

root(ROOT-0, said-1)
poss(mother-3, his-2)
dobj(said-1, mother-3)

(ROOT
  (S (`` ``)
    (VP
      (VP (VB Lie)
        (PRT (RP down)))
      (CC and)
      (VP (VB go)
        (S
          (VP (TO to)
            (VP (VB sleep))))))
    (. .) ('' '')))

root(ROOT-0, Lie-2)
prt(Lie-2, down-3)
conj_and(Lie-2, go-5)
aux(sleep-7, to-6)
xcomp(go-5, sleep-7)

(ROOT
  (SINV (`` ``)
    (S
      (NP (NNP Baby) (POS 's))
      (VP (VBG crying)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(crying-4, Baby-2)
possessive(Baby-2, 's-3)
dep(said-7, crying-4)
root(ROOT-0, said-7)
nsubj(said-7, Willie-8)

(ROOT
  (S (`` ``)
    (ADVP (RB Never))
    (S
      (NP (PRP you))
      (VP (VB mind)))
    (. .)))

neg(mind-4, Never-2)
nsubj(mind-4, you-3)
root(ROOT-0, mind-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB manage)
        (NP (PRP her))))
    (. .) ('' '')))

nsubj(manage-3, I-1)
aux(manage-3, 'll-2)
root(ROOT-0, manage-3)
dobj(manage-3, her-4)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP know))))))
    (, ,)
    (ADVP (RB mamma))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD was)
            (VP (VBN waked)
              (ADVP (RB up) (RB just))
              (PP (IN in)
                (NP (NN time)))
              (S
                (VP (TO to)
                  (VP (VB help)
                    (NP (PRP you))))))))))
    (. .)))

ccomp(think-9, Do-2)
nsubj(know-4, you-3)
ccomp(Do-2, know-4)
advmod(think-9, mamma-6)
nsubj(think-9, I-8)
root(ROOT-0, think-9)
nsubjpass(waked-12, I-10)
nsubj(help-18, I-10)
auxpass(waked-12, was-11)
ccomp(think-9, waked-12)
advmod(just-14, up-13)
advmod(waked-12, just-14)
prep_in(waked-12, time-16)
aux(help-18, to-17)
xcomp(waked-12, help-18)
dobj(help-18, you-19)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB take)
          (NP (PRP her))
          (PP (IN from)
            (NP (PRP you))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB perhaps))
      (NP (PRP she))
      (VP (MD will)
        (VP (VB take)
          (NP (PRP$ her) (NN drink))
          (PP (IN from)
            (NP (PRP me))))))
    (. .) ('' '')))

nsubj(take-3, I-1)
aux(take-3, 'll-2)
root(ROOT-0, take-3)
dobj(take-3, her-4)
prep_from(take-3, you-6)
advmod(take-12, perhaps-9)
nsubj(take-12, she-10)
aux(take-12, will-11)
conj_and(take-3, take-12)
poss(drink-14, her-13)
dobj(take-12, drink-14)
prep_from(take-12, me-16)

(ROOT
  (FRAG (`` ``)
    (NP (NN Nonsense))
    (, ,)
    (NP (NNP Willie))
    (. .)))

root(ROOT-0, Nonsense-2)
dep(Nonsense-2, Willie-4)

(ROOT
  (FRAG
    (ADVP (RB Lie) (RB down))
    (, ,)
    (NP (PRP$ my) (NN pet))
    (. .) ('' '')))

advmod(down-2, Lie-1)
dep(pet-5, down-2)
poss(pet-5, my-4)
root(ROOT-0, pet-5)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN been)
        (VP (VBG thinking)
          (PP (IN about)
            (NP
              (NP (PRP it))
              (, ,)
              (NP (NN mamma)))))))
    (. .)))

cc(thinking-6, But-2)
nsubj(thinking-6, I-3)
aux(thinking-6, 've-4)
aux(thinking-6, been-5)
root(ROOT-0, thinking-6)
prep_about(thinking-6, it-8)
appos(it-8, mamma-10)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB remember) (, ,)
      (SBAR
        (S
          (S
            (NP (NN yesterday))
            (, ,)
            (NP (NNP Agnes))
            (VP
              (VP (MD would) (RB not)
                (VP (VB take)
                  (NP (PRP$ her) (NN bottle))
                  (PP (IN from)
                    (NP (PRP you)))))
              (, ,)
              (CC and)
              (VP
                (VP (VBD screamed))
                (CC and)
                (VP (VBD screamed)))))
          (: ;)
          (S (CC but)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (NNP Tibby))
                (VP (VBD took)
                  (NP (PRP her)))))
            (, ,)
            (NP (PRP she))
            (VP
              (VP (VBD gave)
                (PRT (RP in)))
              (CC and)
              (VP (VBD drank)
                (S
                  (NP (PRP it))
                  (NP (DT all)))))))))
    (. ?)))

aux(remember-3, Do-1)
nsubj(remember-3, you-2)
root(ROOT-0, remember-3)
tmod(take-10, yesterday-5)
nsubj(take-10, Agnes-7)
nsubj(screamed-17, Agnes-7)
aux(take-10, would-8)
neg(take-10, not-9)
dep(remember-3, take-10)
poss(bottle-12, her-11)
dobj(take-10, bottle-12)
prep_from(take-10, you-14)
dep(remember-3, screamed-17)
conj_and(take-10, screamed-17)
conj_and(take-10, screamed-19)
conj_and(screamed-17, screamed-19)
advmod(took-24, when-22)
nsubj(took-24, Tibby-23)
advcl(gave-28, took-24)
dobj(took-24, her-25)
nsubj(gave-28, she-27)
nsubj(drank-31, she-27)
parataxis(take-10, gave-28)
prt(gave-28, in-29)
parataxis(take-10, drank-31)
conj_and(gave-28, drank-31)
nsubj(all-33, it-32)
xcomp(drank-31, all-33)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP she))
    (VP (MD would)
      (VP (VB do)
        (NP (DT the) (JJ same))
        (PP (IN with)
          (NP (PRP me)))))
    (. .) ('' '')))

advmod(do-4, Perhaps-1)
nsubj(do-4, she-2)
aux(do-4, would-3)
root(ROOT-0, do-4)
det(same-6, the-5)
dobj(do-4, same-6)
prep_with(do-4, me-8)

(ROOT
  (FRAG
    (NP (NNP -LSB-) (NNP Illustration))
    (: :)
    (S
      (NP (`` ``)
        (NP
          (NP (NNP WILLIE) (NNP SAT) (NNP DOWN) (NNP WITH) (NNP THE) (NNP BABY))
          (PP (IN ON)
            (NP (PRP$ HIS) (NNS KNEES))))
        (, ,)
        (CC AND)
        (NP (NNP SHE) (NNP STOPPED) (NNP CRYING) (. .))
        ('' ''))
      (VP (VBZ -RSB-)))))

nn(Illustration-2, -LSB--1)
root(ROOT-0, Illustration-2)
nn(BABY-10, WILLIE-5)
nn(BABY-10, SAT-6)
nn(BABY-10, DOWN-7)
nn(BABY-10, WITH-8)
nn(BABY-10, THE-9)
nsubj(-RSB--21, BABY-10)
poss(KNEES-13, HIS-12)
prep_on(BABY-10, KNEES-13)
nn(CRYING-18, SHE-16)
nn(CRYING-18, STOPPED-17)
conj_and(BABY-10, CRYING-18)
nsubj(-RSB--21, CRYING-18)
dep(Illustration-2, -RSB--21)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP he))
        (VP (VBD spoke))))
    (NP (PRP he))
    (VP
      (VP (VBD slipped)
        (PRT (RP out))
        (PP (IN of)
          (NP (NN bed))))
      (, ,)
      (CC and)
      (VP (VBD held)
        (PRT (RP out))
        (NP (PRP$ his) (NNS arms)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (DT the) (NN baby))))))))
    (. .)))

mark(spoke-3, As-1)
nsubj(spoke-3, he-2)
advcl(slipped-5, spoke-3)
nsubj(slipped-5, he-4)
nsubj(held-11, he-4)
root(ROOT-0, slipped-5)
prt(slipped-5, out-6)
prep_of(slipped-5, bed-8)
conj_and(slipped-5, held-11)
prt(held-11, out-12)
poss(arms-14, his-13)
dobj(held-11, arms-14)
aux(take-16, to-15)
vmod(arms-14, take-16)
det(baby-18, the-17)
dobj(take-16, baby-18)

(ROOT
  (S
    (NP (DT The) (NN light))
    (VP (VBD was)
      (ADVP (RB already))
      (VP (VBG coming)
        (PP (IN in))
        (, ,)
        (ADVP (RB just)
          (NP (DT a) (RB little)))
        (, ,)
        (PP (IN through)
          (NP
            (NP (DT the) (JJ blind))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (NP (NN summer)))))))))
    (. .)))

det(light-2, The-1)
nsubj(coming-5, light-2)
aux(coming-5, was-3)
advmod(coming-5, already-4)
root(ROOT-0, coming-5)
prep(coming-5, in-6)
advmod(coming-5, just-8)
det(little-10, a-9)
pobj(just-8, little-10)
det(blind-14, the-13)
prep_through(coming-5, blind-14)
mark(summer-19, for-16)
nsubj(summer-19, it-17)
cop(summer-19, was-18)
dep(blind-14, summer-19)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD heard)
        (NP (DT a) (NN cow) (NN lowing))
        (PP (IN in)
          (NP (DT the) (NNS fields)))
        (PP (IN at)
          (NP
            (NP (DT the) (NN back))
            (PP (IN of)
              (NP (DT the) (NN house)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD wondered)
        (SBAR (IN whether)
          (S
            (NP (PRP$ her) (NN baby))
            (VP (VBD had)
              (VP (VBD woke)
                (NP (PRP her))))))))
    (. .)))

nsubj(heard-2, He-1)
root(ROOT-0, heard-2)
det(lowing-5, a-3)
nn(lowing-5, cow-4)
dobj(heard-2, lowing-5)
det(fields-8, the-7)
prep_in(heard-2, fields-8)
det(back-11, the-10)
prep_at(heard-2, back-11)
det(house-14, the-13)
prep_of(back-11, house-14)
nsubj(wondered-18, he-17)
conj_and(heard-2, wondered-18)
mark(woke-23, whether-19)
poss(baby-21, her-20)
nsubj(woke-23, baby-21)
aux(woke-23, had-22)
ccomp(wondered-18, woke-23)
dobj(woke-23, her-24)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ next) (NN moment))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD had)
            (NP
              (NP (JJ little) (NNS Agnes))
              (PP (IN in)
                (NP (PRP$ his) (NNS arms))))
            (, ,)
            (PP (IN for)
              (NP (PRP$ his) (NN mother)))))))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP he))
          (VP (MD might)
            (ADVP (RB as) (RB well))
            (VP (VB try) (, ,)
              (S
                (VP (VBG seeing)
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD was)
                        (ADJP (RB awake))))))))))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, next-2)
nsubj(thought-15, moment-3)
nsubj(had-5, he-4)
rcmod(moment-3, had-5)
amod(Agnes-7, little-6)
dobj(had-5, Agnes-7)
poss(arms-10, his-9)
prep_in(Agnes-7, arms-10)
poss(mother-14, his-13)
prep_for(had-5, mother-14)
root(ROOT-0, thought-15)
nsubj(try-20, he-16)
aux(try-20, might-17)
advmod(well-19, as-18)
mwe(well-19, as-18)
advmod(try-20, well-19)
ccomp(thought-15, try-20)
xcomp(try-20, seeing-22)
nsubj(awake-25, he-23)
cop(awake-25, was-24)
ccomp(seeing-22, awake-25)

(ROOT
  (S (`` ``)
    (NP (NNP Do))
    (VP
      (VP (VBP take)
        (NP (NN care)))
      (CC and)
      (VP (VBP do) (RB n't)
        (VP (VB let)
          (NP
            (NP (PRP$ her) (NN fall))
            (, ,)
            (NP (NNP Willie))))))
    (. .) ('' '')))

nsubj(take-3, Do-2)
nsubj(let-8, Do-2)
root(ROOT-0, take-3)
dobj(take-3, care-4)
aux(let-8, do-6)
neg(let-8, n't-7)
conj_and(take-3, let-8)
poss(fall-10, her-9)
dobj(let-8, fall-10)
appos(fall-10, Willie-12)

(ROOT
  (S (`` ``)
    (SBAR (IN That)
      (S
        (NP (PRP I))
        (VP (MD will))))
    (, ,)
    (VP (VBZ mamma))
    (. .)))

mark(will-4, That-2)
nsubj(will-4, I-3)
dep(mamma-6, will-4)
root(ROOT-0, mamma-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN got)
        (S
          (NP (PRP her))
          (ADJP (JJ tight)))))
    (. .)))

nsubj(got-3, I-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
nsubj(tight-5, her-4)
xcomp(got-3, tight-5)

(ROOT
  (S
    (ADVP (RB Now))
    (S
      (VP (VB give)
        (NP (PRP me))
        (NP (DT the) (NN bottle))))
    (, ,)
    (VP (VBP please))
    (. .) ('' '')))

advmod(please-7, Now-1)
ccomp(please-7, give-2)
iobj(give-2, me-3)
det(bottle-5, the-4)
dobj(give-2, bottle-5)
root(ROOT-0, please-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have) (RB n't)
        (VP (VBN got)
          (S
            (NP (PRP it))
            (ADJP (JJ ready))
            (ADVP (RB yet))))))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (NP (PRP you))
          (VP (VBD woke)
            (NP (DT the) (NN minute)))))
      (NP (PRP she))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB cry))))))
    (. .) ('' '')))

nsubj(got-5, I-2)
aux(got-5, have-3)
neg(got-5, n't-4)
root(ROOT-0, got-5)
nsubj(ready-7, it-6)
xcomp(got-5, ready-7)
advmod(ready-7, yet-8)
mark(woke-12, for-10)
nsubj(woke-12, you-11)
advcl(began-16, woke-12)
det(minute-14, the-13)
dobj(woke-12, minute-14)
nsubj(began-16, she-15)
nsubj(cry-18, she-15)
parataxis(got-5, began-16)
aux(cry-18, to-17)
xcomp(began-16, cry-18)

(ROOT
  (S (IN So)
    (NP (NNP Willie))
    (VP (VBD walked)
      (PP (IN about)
        (NP
          (NP (DT the) (NN room))
          (PP (IN with)
            (NP (NNP Agnes)))))
      (SBAR (IN till)
        (S
          (NP (PRP$ his) (NN mother))
          (VP (VBD had)
            (VP (VBN got)
              (NP
                (NP (PRP$ her) (NN bottle))
                (VP (VBN filled)
                  (PP (IN with)
                    (NP
                      (NP (JJ nice) (JJ warm) (NN milk-and-water))
                      (CC and)
                      (NP (RB just) (DT a) (JJ little) (NN sugar)))))))))))
    (. .)))

dep(walked-3, So-1)
nsubj(walked-3, Willie-2)
root(ROOT-0, walked-3)
det(room-6, the-5)
prep_about(walked-3, room-6)
prep_with(room-6, Agnes-8)
mark(got-13, till-9)
poss(mother-11, his-10)
nsubj(got-13, mother-11)
aux(got-13, had-12)
advcl(walked-3, got-13)
poss(bottle-15, her-14)
dobj(got-13, bottle-15)
vmod(bottle-15, filled-16)
amod(milk-and-water-20, nice-18)
amod(milk-and-water-20, warm-19)
prep_with(filled-16, milk-and-water-20)
advmod(sugar-25, just-22)
det(sugar-25, a-23)
amod(sugar-25, little-24)
prep_with(filled-16, sugar-25)
conj_and(milk-and-water-20, sugar-25)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP she))
        (VP (VBD gave)
          (NP (PRP it))
          (PP (TO to)
            (NP (PRP him))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD sat)
        (PRT (RP down))
        (PP (IN with)
          (NP
            (NP
              (NP (DT the) (NN baby))
              (PP (IN on)
                (NP (PRP$ his) (NNS knees))))
            (, ,)
            (CC and)
            (, ,)
            (PP (TO to)
              (NP (PRP$ his) (JJ great) (NN delight)))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (NN satisfaction))
              (PP (IN of)
                (NP (PRP$ his) (NN mother))))))
        (ADVP (RB as) (RB well)))
      (PRN (, ,)
        (S
          (NP (PRP she))
          (VP (VBD stopped)
            (S
              (VP (VBG crying)))))
        (, ,))
      (CC and)
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB drink)
              (NP (DT the) (NN milk-and-water)))))))
    (. .)))

advmod(gave-3, When-1)
nsubj(gave-3, she-2)
advcl(sat-9, gave-3)
dobj(gave-3, it-4)
prep_to(gave-3, him-6)
nsubj(sat-9, he-8)
nsubj(began-39, he-8)
nsubj(drink-41, he-8)
root(ROOT-0, sat-9)
prt(sat-9, down-10)
det(baby-13, the-12)
prep_with(sat-9, baby-13)
poss(knees-16, his-15)
prep_on(baby-13, knees-16)
prep_with(sat-9, to-20)
conj_and(baby-13, to-20)
poss(delight-23, his-21)
amod(delight-23, great-22)
prep_to(baby-13, delight-23)
det(satisfaction-27, the-26)
prep_with(sat-9, satisfaction-27)
conj_and(baby-13, satisfaction-27)
poss(mother-30, his-29)
prep_of(satisfaction-27, mother-30)
advmod(well-32, as-31)
mwe(well-32, as-31)
advmod(sat-9, well-32)
nsubj(stopped-35, she-34)
parataxis(sat-9, stopped-35)
parataxis(began-39, stopped-35)
xcomp(stopped-35, crying-36)
conj_and(sat-9, began-39)
aux(drink-41, to-40)
xcomp(began-39, drink-41)
det(milk-and-water-43, the-42)
dobj(drink-41, milk-and-water-43)

(ROOT
  (S (`` ``)
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (NP
        (NP (DT a) (VBN born) (NN nurse))
        (, ,)
        (NP (NNP Willie))))
    (. !) ('' '')))

discourse(nurse-8, Why-2)
nsubj(nurse-8, you-4)
cop(nurse-8, 're-5)
det(nurse-8, a-6)
amod(nurse-8, born-7)
root(ROOT-0, nurse-8)
appos(nurse-8, Willie-10)

(ROOT
  (S
    (VP (VBD said)
      (NP (PRP$ his) (NN mother)))
    (. .)))

root(ROOT-0, said-1)
poss(mother-3, his-2)
dobj(said-1, mother-3)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NN moment))
      (NP (DT the) (NN baby)))
    (VP (VBD heard)
      (NP
        (NP (PRP$ her) (NN mother) (POS 's))
        (NN voice))
      (PRN (, ,)
        (S
          (NP (PRP she))
          (VP
            (VP (VBP forsook)
              (NP (DT the) (NN bottle)))
            (, ,)
            (CC and)
            (VP (VBD began)
              (S
                (VP (TO to)
                  (VP (VB scream)))))))
        (, ,))
      (S
        (VP (VBG wanting)
          (S
            (VP (TO to)
              (VP (VB go)
                (PP (TO to)
                  (NP (PRP her)))))))))
    (. .)))

cc(heard-6, But-1)
det(moment-3, the-2)
nsubj(heard-6, moment-3)
det(baby-5, the-4)
dep(moment-3, baby-5)
root(ROOT-0, heard-6)
poss(mother-8, her-7)
poss(voice-10, mother-8)
dobj(heard-6, voice-10)
nsubj(forsook-13, she-12)
nsubj(began-18, she-12)
nsubj(scream-20, she-12)
parataxis(heard-6, forsook-13)
det(bottle-15, the-14)
dobj(forsook-13, bottle-15)
parataxis(heard-6, began-18)
conj_and(forsook-13, began-18)
aux(scream-20, to-19)
xcomp(began-18, scream-20)
xcomp(heard-6, wanting-22)
aux(go-24, to-23)
xcomp(wanting-22, go-24)
prep_to(go-24, her-26)

(ROOT
  (S (`` ``)
    (VP (VB O)
      (NP (NN mamma)))
    (. !)))

root(ROOT-0, O-2)
dobj(O-2, mamma-3)

(ROOT
  (S
    (S
      (NP (PRP you))
      (VP (MD must) (RB n't)
        (VP (VB speak)
          (PRN (, ,)
            (INTJ (VB please))))))
    (: ;)
    (S
      (PP (IN for)
        (PP (IN of)
          (NP (NN course))))
      (NP (PRP she))
      (VP (VBZ likes)
        (S
          (NP (PRP you))
          (ADJP
            (ADJP (JJR better))
            (PP (IN than)
              (NP (DT the) (NN bottle)))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP speak))))
      (NP (DT that))
      (VP (VBZ reminds)
        (NP
          (NP (PRP her))
          (PP (IN of)
            (NP (PRP you))))))
    (. .)))

nsubj(speak-4, you-1)
aux(speak-4, must-2)
neg(speak-4, n't-3)
root(ROOT-0, speak-4)
discourse(speak-4, please-6)
prep(likes-12, for-8)
pcomp(for-8, of-9)
pobj(of-9, course-10)
nsubj(likes-12, she-11)
conj_and(speak-4, likes-12)
nsubj(better-14, you-13)
xcomp(likes-12, better-14)
det(bottle-17, the-16)
prep_than(better-14, bottle-17)
advmod(speak-22, when-20)
nsubj(speak-22, you-21)
advcl(reminds-24, speak-22)
nsubj(reminds-24, that-23)
conj_and(speak-4, reminds-24)
dobj(reminds-24, her-25)
prep_of(her-25, you-27)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (RB just) (DT the) (JJ same))
        (PP (IN with)
          (NP (NNP Tibby))))
      (NP (NN yesterday)))
    (. .)))

nsubj(same-5, It-1)
cop(same-5, was-2)
advmod(same-5, just-3)
det(same-5, the-4)
root(ROOT-0, same-5)
prep_with(same-5, Tibby-7)
tmod(same-5, yesterday-8)

(ROOT
  (S (CC Or)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD must)
          (VP (VB speak)))))
    (, ,)
    (VP (VBP speak)
      (PP
        (PP (IN with)
          (NP (DT some) (JJ other) (NN sound)))
        (, ,)
        (CC and)
        (RB not)
        (PP (IN in)
          (NP (PRP$ your) (JJ own) (JJ soft) (, ,) (JJ sweet) (NN way)))))
    (. .) ('' '')))

cc(speak-7, Or-1)
mark(speak-5, if-2)
nsubj(speak-5, you-3)
aux(speak-5, must-4)
advcl(speak-7, speak-5)
root(ROOT-0, speak-7)
conj_and(speak-7, speak-7')
det(sound-11, some-9)
amod(sound-11, other-10)
prep_with(speak-7, sound-11)
neg(speak-7, not-14)
poss(way-21, your-16)
amod(way-21, own-17)
amod(way-21, soft-18)
amod(way-21, sweet-20)
prep_in(speak-7', way-21)

(ROOT
  (S
    (S
      (PP
        (NP (DT A) (JJ few) (NNS moments))
        (IN after))
      (, ,)
      (NP (NNP Willie))
      (VP (VBD was)
        (ADJP (RB so) (JJ startled)
          (PP (IN by)
            (NP
              (NP (DT a) (JJ gruff) (NN voice))
              (PP (IN in)
                (NP (DT the) (NN room))))))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (ADVP (RB nearly))
            (VP (VBD dropped)
              (NP (DT the) (NN bottle)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADVP (RB only))
        (NP
          (NP (PRP$ his) (NN mother))
          (PP (VBG following)
            (NP (PRP$ his) (NNS directions))))))
    (. .)))

det(moments-3, A-1)
amod(moments-3, few-2)
npadvmod(after-4, moments-3)
prep(startled-9, after-4)
nsubj(startled-9, Willie-6)
cop(startled-9, was-7)
advmod(startled-9, so-8)
root(ROOT-0, startled-9)
det(voice-13, a-11)
amod(voice-13, gruff-12)
prep_by(startled-9, voice-13)
det(room-16, the-15)
prep_in(voice-13, room-16)
mark(dropped-20, that-17)
nsubj(dropped-20, he-18)
advmod(dropped-20, nearly-19)
ccomp(startled-9, dropped-20)
det(bottle-22, the-21)
dobj(dropped-20, bottle-22)
nsubj(mother-29, it-25)
cop(mother-29, was-26)
advmod(mother-29, only-27)
poss(mother-29, his-28)
conj_but(startled-9, mother-29)
poss(directions-32, his-31)
prep_following(mother-29, directions-32)

(ROOT
  (S
    (NP (DT The) (NN plan))
    (VP (VBD was)
      (ADJP (RB quite) (JJ successful))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (DT the) (NN baby))
          (VP (VBD had)
            (NP (RB not) (DT a) (NN suspicion))
            (SBAR (IN that)
              (S
                (NP (DT the) (NN voice))
                (VP (VBD was)
                  (NP
                    (NP (PRP$ her) (NN mother))
                    (SBAR
                      (S
                        (VP
                          (VP (VBZ 's))
                          (, ,)
                          (VP (VBD paid)
                            (NP (DT no) (NN heed))
                            (PP (TO to)
                              (NP (PRP it))))
                          (, ,)
                          (CC and)
                          (VP (VBD attended)
                            (ADVP (RB only))
                            (PP (TO to)
                              (NP (PRP$ her) (NN bottle)))))))))))))))
    (. .)))

det(plan-2, The-1)
nsubj(successful-5, plan-2)
cop(successful-5, was-3)
advmod(successful-5, quite-4)
root(ROOT-0, successful-5)
mark(had-10, for-7)
det(baby-9, the-8)
nsubj(had-10, baby-9)
advcl(successful-5, had-10)
neg(suspicion-13, not-11)
det(suspicion-13, a-12)
dobj(had-10, suspicion-13)
mark(mother-19, that-14)
det(voice-16, the-15)
nsubj(mother-19, voice-16)
cop(mother-19, was-17)
poss(mother-19, her-18)
ccomp(had-10, mother-19)
rcmod(mother-19, 's-20)
rcmod(mother-19, paid-22)
conj_and('s-20, paid-22)
neg(heed-24, no-23)
dobj(paid-22, heed-24)
prep_to(paid-22, it-26)
rcmod(mother-19, attended-29)
conj_and('s-20, attended-29)
advmod(attended-29, only-30)
poss(bottle-33, her-32)
prep_to(attended-29, bottle-33)

(ROOT
  (S
    (NP
      (NP (NNP Mr) (NNP Macmichael))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD had)
            (VP (VBN been)
              (PP (IN in)
                (NP (DT the) (NN country)))))))
      (, ,))
    (VP (VBD was)
      (VP (VBG creeping)
        (PRT (RP up))
        (NP
          (NP (DT the) (NN stair))
          (PP (TO to)
            (NP
              (NP (PRP$ his) (NN room))
              (, ,)
              (UCP
                (ADJP (JJ fearful)
                  (PP (IN of)
                    (S
                      (VP (VBG disturbing)
                        (NP
                          (NP (PRP$ his) (NN wife))
                          (, ,)
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (SBAR
                                (WHNP (WP what))
                                (S
                                  (VP (MD should))))
                              (NP (PRP he))
                              (VP (VBP hear)))))))))
                (CC but)
                (NP
                  (NP (DT a) (NN man) (POS 's))
                  (NN voice))))))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD supposed))))))
    (. !)))

nn(Macmichael-2, Mr-1)
nsubj(been-6, Macmichael-2)
nsubj(creeping-12, Macmichael-2)
aux(been-6, had-5)
rcmod(Macmichael-2, been-6)
det(country-9, the-8)
prep_in(been-6, country-9)
aux(creeping-12, was-11)
root(ROOT-0, creeping-12)
prt(creeping-12, up-13)
det(stair-15, the-14)
dobj(creeping-12, stair-15)
poss(room-18, his-17)
prep_to(stair-15, room-18)
amod(room-18, fearful-20)
prepc_of(fearful-20, disturbing-22)
poss(wife-24, his-23)
dobj(disturbing-22, wife-24)
nsubj(should-28, wife-24)
tmod(hear-30, wife-24)
advmod(hear-30, when-26)
advcl(hear-30, should-28)
nsubj(hear-30, he-29)
rcmod(wife-24, hear-30)
det(man-33, a-32)
poss(voice-35, man-33)
amod(room-18, voice-35)
conj_but(fearful-20, voice-35)
mark(supposed-38, as-36)
nsubj(supposed-38, he-37)
advcl(creeping-12, supposed-38)

(ROOT
  (FRAG (CC and)
    (SBAR
      (WHNP (WP what))
      (SINV (MD should)
        (NP (PRP he))
        (VP (VBP think)
          (PRN (CC but)
            (SBAR (IN that)
              (S
                (NP (NNS robbers))
                (VP (VBD had)
                  (VP (VBN broken)
                    (PP (IN in))))))))))
    (. !)))

cc(think-5, and-1)
dep(think-5, what-2)
aux(think-5, should-3)
nsubj(think-5, he-4)
root(ROOT-0, think-5)
cc(broken-10, but-6)
mark(broken-10, that-7)
nsubj(broken-10, robbers-8)
aux(broken-10, had-9)
parataxis(think-5, broken-10)
prep(broken-10, in-11)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP he))
    (VP (VBD went)
      (PP (TO to)
        (NP
          (NP (PRP$ his) (NN wife) (POS 's))
          (NN room)))
      (ADVP (RB first)))
    (. .)))

prep_of(went-4, course-2)
nsubj(went-4, he-3)
root(ROOT-0, went-4)
poss(wife-7, his-6)
poss(room-9, wife-7)
prep_to(went-4, room-9)
advmod(went-4, first-10)

(ROOT
  (S
    (S
      (ADVP (RB There))
      (NP (PRP he))
      (VP (VBD heard)
        (NP
          (NP (DT the) (NN voice))
          (ADJP (RB plainly) (JJ enough)))
        (PP (IN through)
          (NP (DT the) (NN door)))))
    (, ,)
    (CC but)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD opened)
            (NP (PRP it)))))
      (NP (PRP he))
      (VP (MD could)
        (VP (VB see)
          (NP
            (NP (DT no) (NN one))
            (PP (IN except)
              (NP (NNP Willie))))
          (S
            (VP (VBG feeding)
              (NP (DT the) (NN baby))
              (PP (IN on)
                (NP
                  (NP (DT an) (NN ottoman))
                  (PP (IN at)
                    (NP
                      (NP (DT the) (NN foot))
                      (PP (IN of)
                        (NP (DT the) (NN bed))))))))))))
    (. .)))

advmod(heard-3, There-1)
nsubj(heard-3, he-2)
root(ROOT-0, heard-3)
det(voice-5, the-4)
dobj(heard-3, voice-5)
advmod(enough-7, plainly-6)
amod(voice-5, enough-7)
det(door-10, the-9)
prep_through(heard-3, door-10)
advmod(opened-15, when-13)
nsubj(opened-15, he-14)
advcl(see-19, opened-15)
dobj(opened-15, it-16)
nsubj(see-19, he-17)
aux(see-19, could-18)
conj_but(heard-3, see-19)
neg(one-21, no-20)
dobj(see-19, one-21)
prep_except(one-21, Willie-23)
xcomp(see-19, feeding-24)
det(baby-26, the-25)
dobj(feeding-24, baby-26)
det(ottoman-29, an-28)
prep_on(feeding-24, ottoman-29)
det(foot-32, the-31)
prep_at(ottoman-29, foot-32)
det(bed-35, the-34)
prep_of(foot-32, bed-35)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP$ his) (NN wife))
        (VP (VBD had)
          (VP
            (VP (VBN explained)
              (UCP
                (NP (WP what))
                (CC and)
                (SBAR
                  (WHADVP (WRB why))
                  (S
                    (NP (PRP it))
                    (VP (VBD was) (, ,)
                      (SBAR
                        (S
                          (NP (PRP they))
                          (DT both)
                          (VP (VBD laughed)
                            (ADVP (RB heartily))
                            (PP (IN over)
                              (NP
                                (NP (NNP Willie) (POS 's))
                                (NN suggestion)))
                            (PP (IN for)
                              (S
                                (VP (VBG leaving)
                                  (NP
                                    (NP (DT the) (NN imagination))
                                    (PP (IN of)
                                      (NP
                                        (NP (JJ little) (NNS Agnes))
                                        (PP (IN in)
                                          (NP (NN repose) (: ;)
                                            (CC and)
                                            (NN henceforth)))))
                                    (SBAR
                                      (S
                                        (NP (PRP he))
                                        (VP (VBD was)
                                          (VP (VBN installed)
                                            (PP (IN as)
                                              (NP (NN night-nurse)))))))))))
                            (, ,)
                            (ADVP
                              (ADVP (RB so) (RB long))
                              (SBAR (IN as)
                                (S
                                  (NP
                                    (NP (DT the) (NN process))
                                    (PP (IN of)
                                      (NP (NN weaning))))
                                  (VP (MD should)
                                    (VP (VB last))))))))))))))
            (: ;)
            (CC and)
            (VP
              (ADJP (RB very) (JJ proud))
              (PP (IN of)
                (NP (PRP$ his) (NN promotion))))))))
    (NP (PRP he))
    (VP (VBD was))
    (. .)))

advmod(explained-5, When-1)
poss(wife-3, his-2)
nsubj(explained-5, wife-3)
nsubj(proud-50, wife-3)
aux(explained-5, had-4)
advcl(was-55, explained-5)
dobj(explained-5, what-6)
advmod(was-10, why-8)
nsubj(was-10, it-9)
dobj(explained-5, was-10)
conj_and(what-6, was-10)
rcmod(what-6, was-10)
nsubj(laughed-14, they-12)
dep(laughed-14, both-13)
ccomp(was-10, laughed-14)
advmod(laughed-14, heartily-15)
poss(suggestion-19, Willie-17)
prep_over(laughed-14, suggestion-19)
prepc_for(laughed-14, leaving-21)
det(imagination-23, the-22)
dobj(leaving-21, imagination-23)
amod(Agnes-26, little-25)
prep_of(imagination-23, Agnes-26)
prep_in(Agnes-26, repose-28)
prep_in(Agnes-26, henceforth-31)
conj_and(repose-28, henceforth-31)
nsubjpass(installed-34, he-32)
auxpass(installed-34, was-33)
rcmod(imagination-23, installed-34)
prep_as(installed-34, night-nurse-36)
advmod(long-39, so-38)
advmod(laughed-14, long-39)
mark(last-46, as-40)
det(process-42, the-41)
nsubj(last-46, process-42)
prep_of(process-42, weaning-44)
aux(last-46, should-45)
advcl(long-39, last-46)
ccomp(long-39, last-46)
advmod(proud-50, very-49)
conj_and(explained-5, proud-50)
advcl(was-55, proud-50)
poss(promotion-53, his-52)
prep_of(proud-50, promotion-53)
nsubj(was-55, he-54)
root(ROOT-0, was-55)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD slept)
        (ADJP (RB as) (JJ sound))
        (ADVP (RB as) (RB ever))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (NP
                (NP (DT no) (NN anxiety))
                (PP (IN about)
                  (NP (NN waking)))))))))
    (: ;)
    (S
      (NP (PRP$ his) (NN mother))
      (ADVP (RB always))
      (VP (VBD woke)
        (NP (PRP him))
        (SBAR
          (S
            (NP (DT the) (JJ instant) (NNS Agnes))
            (VP (VBD began)
              (S
                (VP (TO to)
                  (VP (VB cry)))))))))
    (. .)))

nsubj(slept-2, He-1)
root(ROOT-0, slept-2)
advmod(sound-4, as-3)
acomp(slept-2, sound-4)
advmod(ever-6, as-5)
advmod(slept-2, ever-6)
mark(had-10, for-8)
nsubj(had-10, he-9)
advcl(slept-2, had-10)
neg(anxiety-12, no-11)
dobj(had-10, anxiety-12)
prep_about(anxiety-12, waking-14)
poss(mother-17, his-16)
nsubj(woke-19, mother-17)
advmod(woke-19, always-18)
parataxis(slept-2, woke-19)
dobj(woke-19, him-20)
det(Agnes-23, the-21)
amod(Agnes-23, instant-22)
nsubj(began-24, Agnes-23)
nsubj(cry-26, Agnes-23)
dep(woke-19, began-24)
aux(cry-26, to-25)
xcomp(began-24, cry-26)

(ROOT
  (INTJ (`` ``) (UH Willie) (. !) ('' '')))

root(ROOT-0, Willie-2)

(ROOT
  (S
    (NP (PRP she))
    (VP (MD would)
      (VP (VB say) (, ,) (`` ``)
        (S
          (VP (VBG Willie)))))
    (. !)))

nsubj(say-3, she-1)
aux(say-3, would-2)
root(ROOT-0, say-3)
xcomp(say-3, Willie-6)

(ROOT
  (S
    (NP (RB here))
    (VP (VBZ 's)
      (NP (PRP$ your) (NN baby)
        (S
          (VP (VBG wanting)
            (NP (PRP you))))))
    (. .) ('' '')))

nsubj(baby-4, here-1)
cop(baby-4, 's-2)
poss(baby-4, your-3)
root(ROOT-0, baby-4)
dep(baby-4, wanting-5)
dobj(wanting-5, you-6)

(ROOT
  (S (CC And)
    (ADVP (RB up))
    (NP (NNP Willie))
    (VP (MD would)
      (VP (VB start) (, ,)
        (ADVP (RB sometimes))
        (SBAR (IN before)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB open)
                      (NP (PRP$ his) (NNS eyes))))))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP
                    (NP (JJ little) (NNS boys) (POS '))
                    (NNS eyelids))
                  (VP (VBP are)
                    (ADJP (RB occasionally) (JJ obstinate))))))))))
    (. .)))

cc(start-5, And-1)
advmod(start-5, up-2)
nsubj(start-5, Willie-3)
aux(start-5, would-4)
root(ROOT-0, start-5)
advmod(start-5, sometimes-7)
mark(able-11, before-8)
nsubj(able-11, he-9)
nsubj(open-13, he-9)
cop(able-11, was-10)
advcl(start-5, able-11)
aux(open-13, to-12)
xcomp(able-11, open-13)
poss(eyes-15, his-14)
dobj(open-13, eyes-15)
mark(obstinate-24, for-17)
amod(boys-19, little-18)
poss(eyelids-21, boys-19)
nsubj(obstinate-24, eyelids-21)
cop(obstinate-24, are-22)
advmod(obstinate-24, occasionally-23)
advcl(able-11, obstinate-24)

(ROOT
  (UCP
    (S (CC And)
      (ADVP (RB once))
      (NP (PRP he))
      (VP (VBD jumped)
        (PRT (RP out))
        (PP (IN of)
          (NP
            (NP (NN bed) (NNS crying))
            (, ,) (`` ``)
            (SBARQ
              (WHADVP (WRB Where))
              (SQ (VBZ is)
                (NP (PRP she))))))))
    (, ,)
    (NP (NN mamma))
    (. ?)))

cc(jumped-4, And-1)
advmod(jumped-4, once-2)
nsubj(jumped-4, he-3)
root(ROOT-0, jumped-4)
nn(crying-8, bed-7)
prep_out_of(jumped-4, crying-8)
advmod(is-12, Where-11)
dep(crying-8, is-12)
nsubj(is-12, she-13)
dep(jumped-4, mamma-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN lost)
        (NP (PRP her))))
    (. !) ('' '')))

nsubj(lost-3, I-1)
aux(lost-3, 've-2)
root(ROOT-0, lost-3)
dobj(lost-3, her-4)

(ROOT
  (S (IN for)
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBG dreaming)
          (PP (IN about)
            (NP (PRP her))))))
    (. .)))

dep(dreaming-5, for-1)
nsubj(dreaming-5, he-2)
aux(dreaming-5, had-3)
aux(dreaming-5, been-4)
root(ROOT-0, dreaming-5)
prep_about(dreaming-5, her-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD may)
      (VP (VB be)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP$ his) (NN mamma))
              (VP (VBD let)
                (SBAR
                  (S
                    (NP (PRP him))
                    (VP (VBP have)
                      (NP
                        (NP (DT a) (JJ long) (NN sleep))
                        (PP (IN in)
                          (NP (DT the) (NN morning))))
                      (ADVP (RB always))
                      (, ,)
                      (S
                        (VP (TO to)
                          (VP (VB make)
                            (PRT (RP up))
                            (PP (IN for)
                              (S
                                (VP (VBG being)
                                  (VP (VBN disturbed)
                                    (PP (IN in)
                                      (NP (DT the) (NN night)))))))))))))))))))
    (. .)))

nsubj(sure-4, You-1)
aux(sure-4, may-2)
cop(sure-4, be-3)
root(ROOT-0, sure-4)
poss(mamma-6, his-5)
nsubj(let-7, mamma-6)
ccomp(sure-4, let-7)
nsubj(have-9, him-8)
ccomp(let-7, have-9)
det(sleep-12, a-10)
amod(sleep-12, long-11)
dobj(have-9, sleep-12)
det(morning-15, the-14)
prep_in(sleep-12, morning-15)
advmod(have-9, always-16)
aux(make-19, to-18)
vmod(have-9, make-19)
prt(make-19, up-20)
auxpass(disturbed-23, being-22)
prepc_for(make-19, disturbed-23)
det(night-26, the-25)
prep_in(disturbed-23, night-26)

(ROOT
  (S
    (NP (NNS Agnes))
    (VP (VBP throve)
      (ADVP (RB well))
      (, ,)
      (PP (IN notwithstanding)
        (NP (DT the) (NN weaning))))
    (. .)))

nsubj(throve-2, Agnes-1)
root(ROOT-0, throve-2)
advmod(throve-2, well-3)
det(weaning-7, the-6)
prep_notwithstanding(throve-2, weaning-7)

(ROOT
  (S
    (S
      (NP (PRP She))
      (ADVP (RB soon))
      (VP (VBD got)
        (VP (VBN reconciled)
          (PP (TO to)
            (NP (DT the) (NN bottle))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (NNP Willie))
      (VP (VBD slept)
        (PP (IN in)
          (NP (NN peace)))))
    (. .)))

nsubjpass(reconciled-4, She-1)
advmod(reconciled-4, soon-2)
auxpass(reconciled-4, got-3)
root(ROOT-0, reconciled-4)
det(bottle-7, the-6)
prep_to(reconciled-4, bottle-7)
advmod(slept-12, then-10)
nsubj(slept-12, Willie-11)
conj_and(reconciled-4, slept-12)
prep_in(slept-12, peace-14)

(ROOT
  (NP (NNP CHAPTER) (NNP V) (. .)))

nn(V-2, CHAPTER-1)
root(ROOT-0, V-2)

(ROOT
  (S
    (NP (PRP HE))
    (VP (VBZ GOES)
      (S
        (VP (TO TO)
          (VP (VB LEARN)
            (NP (DT A) (NN TRADE))))))
    (. .)))

nsubj(GOES-2, HE-1)
nsubj(LEARN-4, HE-1)
root(ROOT-0, GOES-2)
aux(LEARN-4, TO-3)
xcomp(GOES-2, LEARN-4)
det(TRADE-6, A-5)
dobj(LEARN-4, TRADE-6)

(ROOT
  (S
    (S
      (NP (NNP Time))
      (VP (VBD passed)))
    (, ,)
    (CC and)
    (S
      (NP (NNP Willie))
      (VP (VBD grew)))
    (. .)))

nsubj(passed-2, Time-1)
root(ROOT-0, passed-2)
nsubj(grew-6, Willie-5)
conj_and(passed-2, grew-6)

(ROOT
  (SQ (VBP Have)
    (NP
      (NP (PRP$ my) (NNS readers))
      (ADVP (RB ever)))
    (VP (VBN thought)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ is)
            (VP (VBN meant)
              (PP (IN by)
                (NP (VBG growing))))))))
    (. ?)))

aux(thought-5, Have-1)
poss(readers-3, my-2)
nsubj(thought-5, readers-3)
advmod(readers-3, ever-4)
root(ROOT-0, thought-5)
nsubjpass(meant-8, what-6)
auxpass(meant-8, is-7)
ccomp(thought-5, meant-8)
agent(meant-8, growing-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB far)
        (PP (IN from)
          (S
            (VP (VBG meaning)
              (SBAR (RB only) (IN that)
                (S
                  (NP (PRP you))
                  (VP (VBP get)
                    (S
                      (ADJP (JJR bigger)
                        (CC and)
                        (JJR stronger)))))))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
prepc_far_from(is-2, meaning-5)
advmod(get-9, only-6)
mark(get-9, that-7)
nsubj(get-9, you-8)
dep(meaning-5, get-9)
acomp(get-9, bigger-10)
acomp(get-9, stronger-12)
conj_and(bigger-10, stronger-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP become)
            (ADJP (JJ able)
              (S
                (VP (DT both)
                  (VP (TO to)
                    (VP (VB understand)))
                  (CC and)
                  (VP (TO to)
                    (VP (VB wonder)
                      (PP (IN at)
                        (NP
                          (NP (JJR more))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NNS things))
                              (PP (IN about)
                                (NP (PRP you))))))))))))))))
    (. .)))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
mark(become-5, that-3)
nsubj(become-5, you-4)
ccomp(means-2, become-5)
acomp(become-5, able-6)
preconj(understand-9, both-7)
aux(understand-9, to-8)
dep(able-6, understand-9)
aux(wonder-12, to-11)
dep(able-6, wonder-12)
conj_and(understand-9, wonder-12)
prep_at(wonder-12, more-14)
det(things-17, the-16)
prep_of(more-14, things-17)
prep_about(things-17, you-19)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBP are)
          (NP
            (NP (NNS people))
            (SBAR
              (WHNP (WP who))
              (S
                (SBAR
                  (X (DT the) (JJR more))
                  (S
                    (NP (PRP they))
                    (VP (VBP understand))))
                (, ,)
                (VP (VB wonder)
                  (NP (DT the) (JJR less))))))))
      (: ;)
      (CC but)
      (S
        (NP (JJ such))
        (VP (VBP are) (RB not)
          (VP (VBG growing)
            (ADVP (RB straight))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (VP (VBG growing)
          (ADJP (JJ crooked)))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, people-3)
dep(wonder-10, people-3)
det(more-6, the-5)
dep(understand-8, more-6)
nsubj(understand-8, they-7)
dep(wonder-10, understand-8)
rcmod(people-3, wonder-10)
det(less-12, the-11)
dobj(wonder-10, less-12)
nsubj(growing-18, such-15)
aux(growing-18, are-16)
neg(growing-18, not-17)
conj_but(are-2, growing-18)
advmod(growing-18, straight-19)
nsubj(growing-23, they-21)
aux(growing-23, are-22)
parataxis(are-2, growing-23)
acomp(growing-23, crooked-24)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (CD two) (NNS ways))
        (PP (IN of)
          (NP (VBG growing)))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
num(ways-4, two-3)
nsubj(are-2, ways-4)
prep_of(ways-4, growing-6)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD may)
        (VP (VB be)
          (VP (VBG growing)
            (PRT (RP up))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP you))
      (VP (MD may)
        (VP (VB be)
          (VP (VBG growing)
            (PRT (RP down))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG doing)
              (ADVP (DT both) (IN at) (RB once))))))
      (, ,)
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBP are)
        (VP (VBG growing)
          (ADJP (JJ crooked)))))
    (. .)))

nsubj(growing-4, You-1)
aux(growing-4, may-2)
aux(growing-4, be-3)
root(ROOT-0, growing-4)
prt(growing-4, up-5)
nsubj(growing-11, you-8)
aux(growing-11, may-9)
aux(growing-11, be-10)
conj_or(growing-4, growing-11)
prt(growing-11, down-12)
mark(doing-18, if-15)
nsubj(doing-18, you-16)
aux(doing-18, are-17)
advcl(growing-26, doing-18)
pobj(at-20, both-19)
advmod(doing-18, at-20)
advmod(at-20, once-21)
advmod(you-24, then-23)
nsubj(growing-26, you-24)
aux(growing-26, are-25)
conj_and(growing-4, growing-26)
acomp(growing-26, crooked-27)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP are)
              (VP (VBG growing)
                (PRT (RP up))
                (PP
                  (PP (IN in)
                    (NP (NN understanding)))
                  (, ,)
                  (CC but)
                  (RB down)
                  (PP (IN in)
                    (NP (NN goodness))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, people-3)
nsubj(growing-6, people-3)
aux(growing-6, are-5)
rcmod(people-3, growing-6)
prt(growing-6, up-7)
prep(growing-6, in-8)
pobj(in-8, understanding-9)
prep(growing-6, down-12)
conj_but(in-8, down-12)
dep(in-8, in-13)
pobj(in-13, goodness-14)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP (DT a)
          (ADJP (JJ beautiful))
          (NN fact))
        (, ,)
        (ADVP (RB however))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD ca) (RB n't)
              (VP (VB grow)
                (PRT (RP up))
                (UCP
                  (PP (IN in)
                    (NP (NN goodness)))
                  (CC and)
                  (ADVP (RB down)
                    (PP (IN in)
                      (NP (NN understanding)))))))))))
    (: ;)
    (S
      (SBAR (IN while)
        (S
          (NP (DT the) (JJ great) (NN probability))
          (VP (VBZ is) (, ,)
            (ADVP (IN that))
            (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP are) (RB not)
                  (VP (VBG growing)
                    (ADVP (RBR better)))))))))
      (, ,)
      (NP (PRP you))
      (VP (MD will)
        (ADVP (RP by)
          (CC and)
          (RP by))
        (VP (VB begin)
          (S
            (VP (TO to)
              (VP (VB grow)
                (ADJP (JJ stupid))))))))
    (. .)))

nsubj(fact-5, It-1)
cop(fact-5, is-2)
det(fact-5, a-3)
amod(fact-5, beautiful-4)
root(ROOT-0, fact-5)
advmod(fact-5, however-7)
mark(grow-13, that-9)
nsubj(grow-13, you-10)
aux(grow-13, ca-11)
neg(grow-13, n't-12)
ccomp(fact-5, grow-13)
prt(grow-13, up-14)
dep(grow-13, in-15)
pobj(in-15, goodness-16)
dep(grow-13, down-18)
conj_and(in-15, down-18)
prep_in(down-18, understanding-20)
mark(is-26, while-22)
det(probability-25, the-23)
amod(probability-25, great-24)
nsubj(is-26, probability-25)
advcl(begin-42, is-26)
advmod(is-26, that-28)
mark(growing-34, if-30)
nsubj(growing-34, you-31)
aux(growing-34, are-32)
neg(growing-34, not-33)
advcl(is-26, growing-34)
advmod(growing-34, better-35)
nsubj(begin-42, you-37)
nsubj(grow-44, you-37)
aux(begin-42, will-38)
advmod(begin-42, by-39)
conj_and(by-39, by-41)
advmod(begin-42, by-41)
parataxis(fact-5, begin-42)
aux(grow-44, to-43)
xcomp(begin-42, grow-44)
acomp(grow-44, stupid-45)

(ROOT
  (S
    (NP
      (NP (DT Those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP are)
            (VP (VBG growing)
              (NP (DT the) (JJ right) (NN way)))))))
    (, ,)
    (S
      (SBAR
        (X (DT the) (JJR more))
        (S
          (NP (PRP they))
          (VP (VBP understand))))
      (, ,)
      (X (DT the) (JJR more))
      (NP (PRP they))
      (VP (VBP wonder)))
    (: ;)
    (CC and)
    (S
      (SBAR
        (X (DT the) (JJR more))
        (S
          (NP (PRP they))
          (VP (VBP learn)
            (S
              (VP (TO to)
                (VP (VB do)))))))
      (, ,)
      (X (DT the) (JJR more))
      (NP (PRP they))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB do))))))
    (. .)))

nsubj(growing-4, Those-1)
dep(wonder-17, Those-1)
aux(growing-4, are-3)
rcmod(Those-1, growing-4)
det(way-7, the-5)
amod(way-7, right-6)
dobj(growing-4, way-7)
det(more-10, the-9)
dep(understand-12, more-10)
nsubj(understand-12, they-11)
advcl(wonder-17, understand-12)
det(more-15, the-14)
dep(wonder-17, more-15)
nsubj(wonder-17, they-16)
root(ROOT-0, wonder-17)
det(more-21, the-20)
dep(learn-23, more-21)
nsubj(learn-23, they-22)
nsubj(do-25, they-22)
advcl(want-30, learn-23)
aux(do-25, to-24)
xcomp(learn-23, do-25)
det(more-28, the-27)
dep(want-30, more-28)
nsubj(want-30, they-29)
nsubj(do-32, they-29)
conj_and(wonder-17, want-30)
aux(do-32, to-31)
xcomp(want-30, do-32)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN boy))
        (PP (IN of)
          (NP (DT this) (NN kind)))))
    (. .)))

nsubj(boy-4, Willie-1)
cop(boy-4, was-2)
det(boy-4, a-3)
root(ROOT-0, boy-4)
det(kind-7, this-6)
prep_of(boy-4, kind-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB care)
        (S
          (VP (TO to)
            (VP (VB write)
              (NP
                (NP
                  (NP (RB about) (NNS boys)
                    (CC and)
                    (NNS girls))
                  (, ,)
                  (CC or)
                  (NP (NNS men)
                    (CC and)
                    (NNS women))
                  (, ,))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP are) (RB not)
                      (VP (VBG growing)
                        (NP (DT the) (JJ right) (NN way))))))))))))
    (. .)))

nsubj(care-4, I-1)
nsubj(write-6, I-1)
aux(care-4, do-2)
neg(care-4, n't-3)
root(ROOT-0, care-4)
aux(write-6, to-5)
xcomp(care-4, write-6)
advmod(boys-8, about-7)
dobj(write-6, boys-8)
nsubj(growing-20, boys-8)
dobj(write-6, girls-10)
conj_and(boys-8, girls-10)
nsubj(growing-20, girls-10)
dobj(write-6, men-13)
conj_or(boys-8, men-13)
nsubj(growing-20, men-13)
conj_or(boys-8, women-15)
conj_and(men-13, women-15)
aux(growing-20, are-18)
neg(growing-20, not-19)
rcmod(boys-8, growing-20)
det(way-23, the-21)
amod(way-23, right-22)
dobj(growing-20, way-23)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are) (RB not)
      (ADJP (JJ interesting) (RB enough)
        (S
          (VP (TO to)
            (VP (VB write)
              (PRT (RP about)))))))
    (. .)))

nsubj(interesting-4, They-1)
nsubj(write-7, They-1)
cop(interesting-4, are-2)
neg(interesting-4, not-3)
root(ROOT-0, interesting-4)
advmod(interesting-4, enough-5)
aux(write-7, to-6)
xcomp(interesting-4, write-7)
prt(write-7, about-8)

(ROOT
  (S (CC But)
    (S
      (NP (PRP he))
      (VP (VBD was) (RB not)
        (NP (DT the) (JJ only) (NN one)
          (S
            (VP (TO to)
              (VP (VB grow)))))))
    (: :)
    (S
      (NP (NNP Agnes))
      (VP (VBD grew)
        (ADVP (RB as) (RB well))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (X (DT the) (JJR more))
        (S
          (NP (NNP Willie))
          (VP (VBD grew)
            (ADJP (JJ capable)
              (PP (IN of)
                (S
                  (VP (VBG helping)
                    (NP (PRP her)))))))))
      (, ,)
      (X (DT the) (JJR more))
      (NP (PRP he))
      (VP (VBD found)
        (NP
          (NP (NNP Agnes))
          (VP (VBN required)
            (PP (IN of)
              (NP (PRP him)))))))
    (. .)))

nsubj(one-7, he-2)
cop(one-7, was-3)
neg(one-7, not-4)
det(one-7, the-5)
amod(one-7, only-6)
root(ROOT-0, one-7)
aux(grow-9, to-8)
vmod(one-7, grow-9)
nsubj(grew-12, Agnes-11)
dep(one-7, grew-12)
advmod(well-14, as-13)
mwe(well-14, as-13)
advmod(grew-12, well-14)
det(more-18, the-17)
dep(grew-20, more-18)
nsubj(grew-20, Willie-19)
advcl(found-29, grew-20)
acomp(grew-20, capable-21)
prepc_of(capable-21, helping-23)
dobj(helping-23, her-24)
det(more-27, the-26)
dep(found-29, more-27)
nsubj(found-29, he-28)
conj_and(one-7, found-29)
dobj(found-29, Agnes-30)
vmod(Agnes-30, required-31)
prep_of(required-31, him-33)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a) (JJ long) (NN time))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (SBAR (IN before)
        (S
          (NP (PRP he))
          (VP (VBD knew)
            (SBAR
              (WHADJP (WRB how) (JJ much))
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (VP (VBN obliged)
                    (PP (TO to)
                      (NP (NNP Agnes)))
                    (PP (IN for)
                      (S
                        (VP (VBG requiring)
                          (ADVP (RB so) (RB much))
                          (PP (IN of)
                            (NP (PRP him))))))))))))))
    (. .)))

nsubj(time-5, It-1)
cop(time-5, was-2)
det(time-5, a-3)
amod(time-5, long-4)
root(ROOT-0, time-5)
advmod(time-5, however-7)
mark(knew-11, before-9)
nsubj(knew-11, he-10)
advcl(time-5, knew-11)
advmod(much-13, how-12)
dep(obliged-16, much-13)
nsubjpass(obliged-16, he-14)
auxpass(obliged-16, was-15)
ccomp(knew-11, obliged-16)
prep_to(obliged-16, Agnes-18)
prepc_for(obliged-16, requiring-20)
advmod(much-22, so-21)
advmod(requiring-20, much-22)
prep_of(requiring-20, him-24)

(ROOT
  (S
    (S
      (S
        (NP (PRP She))
        (VP
          (VP (VBD grew))
          (CC and)
          (VP (VBD grew)
            (SBAR (IN until)
              (S
                (NP (PRP she))
                (VP (VBD was)
                  (ADJP (JJ capable)
                    (PP (IN of)
                      (NP
                        (NP (DT a) (NN doll))
                        (: ;)
                        (SBAR
                          (WHADVP (WRB when)
                            (PP (IN of)
                              (NP (NN course))))
                          (S
                            (NP (DT a) (NN doll))
                            (VP (VBD was)
                              (VP (VBN given)
                                (NP (PRP her)))))))))))))))
      (: --) (RB not)
      (S
        (NP (DT a) (JJ new) (NN one))
        (ADVP (RB just))
        (VP (VBD bought))))
    (, ,)
    (CC but)
    (S
      (NP (DT a)
        (ADJP (RBS most) (JJ respectable))
        (JJ old) (NN doll))
      (, ,)
      (NP
        (NP (DT a) (JJ big) (NN one))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD had)
              (VP (VBN been)
                (NP (PRP$ her) (NN mother)))))))
      (VP (VBZ 's)
        (SBAR
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP she))
              (VP (VBD was)
                (NP (DT a) (JJ little) (NN girl)))))
          (, ,)
          (CC and)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN been)
                  (ADJP (JJ wise) (RB enough)
                    (S
                      (VP (TO to)
                        (VP (VB put)
                          (PP (IN in)
                            (NP (PRP$ her) (NN trunk)))))))
                  (SBAR (IN before)
                    (S
                      (NP (PRP she))
                      (VP (VBD left)
                        (NP
                          (NP (PRP$ her) (NN mother) (POS 's))
                          (NN house)
                          (S
                            (VP (TO to)
                              (VP (VB go)
                                (NP (NN home))
                                (PP (IN with)
                                  (NP (NNP Mr) (NNP Macmichael)))))))))))))))))
    (. .)))

nsubj(grew-2, She-1)
nsubj(grew-4, She-1)
root(ROOT-0, grew-2)
conj_and(grew-2, grew-4)
mark(capable-8, until-5)
nsubj(capable-8, she-6)
cop(capable-8, was-7)
advcl(grew-4, capable-8)
det(doll-11, a-10)
prep_of(capable-8, doll-11)
tmod(given-19, doll-11)
advmod(given-19, when-13)
prep_of(when-13, course-15)
det(doll-17, a-16)
nsubjpass(given-19, doll-17)
auxpass(given-19, was-18)
rcmod(doll-11, given-19)
dobj(given-19, her-20)
neg(grew-2, not-22)
det(one-25, a-23)
amod(one-25, new-24)
nsubj(bought-27, one-25)
advmod(bought-27, just-26)
parataxis(grew-2, bought-27)
det(doll-34, a-30)
advmod(respectable-32, most-31)
amod(doll-34, respectable-32)
amod(doll-34, old-33)
nsubj('s-44, doll-34)
det(one-38, a-36)
amod(one-38, big-37)
nsubj(mother-43, one-38)
nsubj('s-44, one-38)
aux(mother-43, had-40)
cop(mother-43, been-41)
poss(mother-43, her-42)
rcmod(one-38, mother-43)
conj_but(grew-2, 's-44)
advmod(girl-50, when-45)
nsubj(girl-50, she-46)
cop(girl-50, was-47)
det(girl-50, a-48)
amod(girl-50, little-49)
advcl('s-44, girl-50)
dobj(wise-57, which-53)
nsubj(put-60, which-53)
nsubj(wise-57, she-54)
aux(wise-57, had-55)
cop(wise-57, been-56)
advcl('s-44, wise-57)
conj_and(girl-50, wise-57)
advmod(wise-57, enough-58)
aux(put-60, to-59)
xcomp(wise-57, put-60)
poss(trunk-63, her-62)
prep_in(put-60, trunk-63)
mark(left-66, before-64)
nsubj(left-66, she-65)
advcl(wise-57, left-66)
poss(mother-68, her-67)
poss(house-70, mother-68)
dobj(left-66, house-70)
aux(go-72, to-71)
vmod(house-70, go-72)
dobj(go-72, home-73)
nn(Macmichael-76, Mr-75)
prep_with(go-72, Macmichael-76)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD made)
        (NP
          (NP (DT some) (JJ new) (NNS clothes))
          (PP (IN for)
            (NP (PRP it))))
        (ADVP (RB now))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tibby))
      (VP (VBD made)
        (NP (DT a) (NN cloak)
          (CC and)
          (NN bonnet))
        (PP (IN for)
          (NP (PRP her)))
        (S
          (VP (TO to)
            (VP (VB wear)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP she))
                  (VP (VBD went)
                    (PRT (RP out))
                    (PP (IN of)
                      (NP (NNS doors)))))))))))
    (. .)))

nsubj(made-2, She-1)
root(ROOT-0, made-2)
det(clothes-5, some-3)
amod(clothes-5, new-4)
dobj(made-2, clothes-5)
prep_for(clothes-5, it-7)
advmod(made-2, now-8)
nsubj(made-12, Tibby-11)
conj_and(made-2, made-12)
det(cloak-14, a-13)
dobj(made-12, cloak-14)
dobj(made-12, bonnet-16)
conj_and(cloak-14, bonnet-16)
prep_for(made-12, her-18)
aux(wear-20, to-19)
vmod(made-12, wear-20)
advmod(went-23, when-21)
nsubj(went-23, she-22)
advcl(wear-20, went-23)
prep_out_of(went-23, doors-26)

(ROOT
  (S (CC But)
    (S
      (NP (PRP it))
      (VP (VBD struck)
        (NP (NNP Willie))
        (SBAR (IN that)
          (S
            (NP
              (NP (PRP$ her) (NNS shoes))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD were)
                    (ADVP (RB only))
                    (PP (IN of)
                      (NP (NN cloth))))))
              (, ,))
            (VP (VBD were)
              (ADJP (RB very) (JJ unfit)
                (PP (IN for)
                  (S
                    (VP (VBG walking))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD thought)
        (SBAR (IN that)
          (S
            (PP (IN in)
              (NP
                (NP (DT a) (NN doctor) (POS 's))
                (NN family)))
            (NP (PRP it))
            (VP (VBD was)
              (NP
                (NP (NN something))
                (ADJP (RB quite) (JJ amazing)))
              (SBAR (IN that) (, ,)
                (S
                  (SBAR (IN while)
                    (S
                      (NP (NN head)
                        (CC and)
                        (NNS shoulders))
                      (VP (VBD were)
                        (ADVP (RB properly))
                        (VP (VBN looked)
                          (PP (IN after))))))
                  (, ,)
                  (NP (DT the) (NNS feet))
                  (VP (MD should)
                    (VP (VB remain)
                      (ADJP (RB utterly) (JJ neglected)))))))))))
    (. .)))

nsubj(struck-3, it-2)
root(ROOT-0, struck-3)
dobj(struck-3, Willie-4)
mark(unfit-17, that-5)
poss(shoes-7, her-6)
nsubj(were-10, shoes-7)
nsubj(unfit-17, shoes-7)
rcmod(shoes-7, were-10)
advmod(were-10, only-11)
prep_of(were-10, cloth-13)
cop(unfit-17, were-15)
advmod(unfit-17, very-16)
ccomp(struck-3, unfit-17)
prepc_for(unfit-17, walking-19)
nsubj(thought-23, he-22)
conj_and(struck-3, thought-23)
mark(something-32, that-24)
det(doctor-27, a-26)
poss(family-29, doctor-27)
prep_in(something-32, family-29)
nsubj(something-32, it-30)
cop(something-32, was-31)
ccomp(thought-23, something-32)
advmod(amazing-34, quite-33)
amod(something-32, amazing-34)
mark(remain-49, that-35)
mark(looked-43, while-37)
nsubjpass(looked-43, head-38)
conj_and(head-38, shoulders-40)
nsubjpass(looked-43, shoulders-40)
auxpass(looked-43, were-41)
advmod(looked-43, properly-42)
advcl(remain-49, looked-43)
prep(looked-43, after-44)
det(feet-47, the-46)
nsubj(remain-49, feet-47)
aux(remain-49, should-48)
ccomp(something-32, remain-49)
advmod(neglected-51, utterly-50)
acomp(remain-49, neglected-51)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADJP (JJ clear)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD must)
                (VP (VB be)
                  (NP
                    (NP (PRP$ his) (NN part))
                    (PP (IN in)
                      (NP (DT the) (NN affair)))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (MD could) (RB not)
        (VP (VB be)
          (NP
            (NP (NN anybody) (RB else) (POS 's))
            (, ,)
            (SBAR (IN for)
              (S
                (PP (IN in)
                  (NP (DT that) (NN case)))
                (NP (DT some) (NN one) (RB else))
                (VP (MD would)
                  (VP (VB have)
                    (VP (VBN attended)
                      (PP (TO to)
                        (NP (PRP it))))))))))))
    (. .)))

nsubj(clear-3, It-1)
cop(clear-3, was-2)
root(ROOT-0, clear-3)
nsubj(part-8, that-4)
aux(part-8, must-5)
cop(part-8, be-6)
poss(part-8, his-7)
ccomp(clear-3, part-8)
det(affair-11, the-10)
prep_in(part-8, affair-11)
nsubj(anybody-17, it-13)
aux(anybody-17, could-14)
neg(anybody-17, not-15)
cop(anybody-17, be-16)
parataxis(clear-3, anybody-17)
det(case-24, anybody-17)
advmod(anybody-17, else-18)
possessive(anybody-17, 's-19)
mark(attended-30, for-21)
prep_in(attended-30, case-24)
det(one-26, some-25)
nsubj(attended-30, one-26)
advmod(one-26, else-27)
aux(attended-30, would-28)
aux(attended-30, have-29)
rcmod(anybody-17, attended-30)
prep_to(attended-30, it-32)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must)
      (VP (VB see)
        (PP (IN about)
          (NP (PRP it)))))
    (. .)))

nsubj(see-3, He-1)
aux(see-3, must-2)
root(ROOT-0, see-3)
prep_about(see-3, it-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP have)
              (VP (VBD said)
                (SBAR (RB before) (IN that)
                  (S
                    (NP (NNP Willie))
                    (VP (VBD knew)
                      (NP (RB almost) (NN everybody))
                      (PP (IN in)
                        (NP (DT the) (NN village))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD might)
        (VP (VB have)
          (VP (VBN added)
            (SBAR (IN that)
              (S
                (NP
                  (NP (NN everybody))
                  (PP (IN without)
                    (NP (NN exception))))
                (VP (VBD knew)
                  (NP (PRP him)))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(said-5, I-3)
aux(said-5, have-4)
ccomp(think-2, said-5)
advmod(knew-9, before-6)
mark(knew-9, that-7)
nsubj(knew-9, Willie-8)
dep(said-5, knew-9)
advmod(everybody-11, almost-10)
dobj(knew-9, everybody-11)
det(village-14, the-13)
prep_in(knew-9, village-14)
nsubj(added-20, I-17)
aux(added-20, might-18)
aux(added-20, have-19)
conj_and(think-2, added-20)
mark(knew-25, that-21)
nsubj(knew-25, everybody-22)
prep_without(everybody-22, exception-24)
ccomp(added-20, knew-25)
dobj(knew-25, him-26)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT a) (NN favourite))
          (: --)
          (NP
            (NP (JJ first))
            (PP (IN of)
              (NP
                (NP (DT all))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (PRP$ his) (NN father))
                    (VP (VBD was)
                      (ADVP (RB much))
                      (VP (VBN loved)
                        (CC and)
                        (VBN trusted)))))))))
        (: ;)
        (NP
          (NP (JJ next))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (PRP$ his) (NN mother))
              (VP (VBD spoke)
                (ADVP (RB as) (RB kindly)
                  (PP (TO to)
                    (NP
                      (NP (PRP$ her) (NN husband) (POS 's))
                      (JJ poor) (NNS patients)))
                  (RB as))
                (PP (TO to)
                  (NP (DT the) (JJR richer) (NNS ones)))))))
        (: ;)
        (CC and)
        (NP
          (NP (JJ last))
          (, ,)
          (PP (IN because)
            (NP (PRP he)))
          (SBAR
            (S
              (NP (PRP himself))
              (VP (VBD spoke)
                (PP (TO to)
                  (NP (NN everybody)))
                (PP (IN with)
                  (NP (JJ proper) (NN respect)))))))))
    (. .)))

nsubj(favourite-4, He-1)
nsubj(next-19, He-1)
nsubj(last-40, He-1)
cop(favourite-4, was-2)
det(favourite-4, a-3)
root(ROOT-0, favourite-4)
dep(favourite-4, first-6)
prep_of(first-6, all-8)
mark(loved-15, because-10)
poss(father-12, his-11)
nsubjpass(loved-15, father-12)
nsubjpass(trusted-17, father-12)
auxpass(loved-15, was-13)
advmod(loved-15, much-14)
dep(all-8, loved-15)
dep(all-8, trusted-17)
conj_and(loved-15, trusted-17)
conj_and(favourite-4, next-19)
mark(spoke-24, because-21)
poss(mother-23, his-22)
nsubj(spoke-24, mother-23)
rcmod(next-19, spoke-24)
advmod(spoke-24, as-25)
advmod(spoke-24, kindly-26)
poss(husband-29, her-28)
poss(patients-32, husband-29)
amod(patients-32, poor-31)
prep_to(spoke-24, patients-32)
det(ones-37, the-35)
amod(ones-37, richer-36)
prep_as_to(spoke-24, ones-37)
conj_and(favourite-4, last-40)
prep_because(last-40, he-43)
nsubj(spoke-45, himself-44)
rcmod(last-40, spoke-45)
prep_to(spoke-45, everybody-47)
amod(respect-50, proper-49)
prep_with(spoke-45, respect-50)

(ROOT
  (S
    (NP
      (NP (DT Some))
      (PP (IN of)
        (NP (DT the) (NNS people))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP he))
    (VP (VBD knew)
      (PP (IN of)
        (NP (NN course)))
      (PP
        (ADVP (RBR better))
        (IN than)
        (NP (NNS others))))
    (. .)))

nsubj(knew-9, Some-1)
det(people-4, the-3)
prep_of(Some-1, people-4)
advmod(knew-9, however-6)
nsubj(knew-9, he-8)
root(ROOT-0, knew-9)
prep_of(knew-9, course-11)
advmod(knew-9, better-12)
prep_than(knew-9, others-14)

(ROOT
  (S
    (PP (IN Of)
      (NP (DT these) (NNP Mrs) (NNP Wilson)))
    (NP (PRP we))
    (VP (VBP know)
      (SBAR
        (S
          (VP (VBD was)
            (NP (CD one))))))
    (. .)))

det(Wilson-4, these-2)
nn(Wilson-4, Mrs-3)
prep_of(know-6, Wilson-4)
nsubj(know-6, we-5)
root(ROOT-0, know-6)
cop(one-8, was-7)
ccomp(know-6, one-8)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (PRP I))
          (ADVP (RB also))
          (VP (VBD mentioned)
            (NP
              (NP (DT that))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN house))
                  (SBAR
                    (WHPP (IN in)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP she))
                      (VP (VBD lived)
                        (SBAR
                          (S
                            (NP (EX there))
                            (VP (VBD were)
                              (NP (JJ other) (JJ poor) (NNS people)))))))))))))))
    (. .)))

cc(believe-3, But-1)
nsubj(believe-3, I-2)
root(ROOT-0, believe-3)
nsubj(mentioned-6, I-4)
advmod(mentioned-6, also-5)
ccomp(believe-3, mentioned-6)
dobj(mentioned-6, that-7)
det(house-10, the-9)
prep_in(that-7, house-10)
prep_in(lived-14, house-10)
nsubj(lived-14, she-13)
rcmod(house-10, lived-14)
expl(were-16, there-15)
ccomp(lived-14, were-16)
amod(people-19, other-17)
amod(people-19, poor-18)
nsubj(were-16, people-19)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN room) (NN opposite))
        (PP (TO to)
          (NP (NNS hers)))))
    (, ,)
    (PP (IN on)
      (NP (DT the) (NN ground-floor)))
    (, ,)
    (VP (VBD lived)
      (CC and)
      (VBD worked)
      (NP
        (NP (DT a) (NN shoemaker))
        (PRN (: --)
          (NP
            (NP (DT a) (NN man))
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (VBD had)
                    (NP (DT neither) (NN wife)
                      (CC nor)
                      (NN child)))
                  (, ,)
                  (CC nor)
                  (, ,)
                  (SBAR
                    (ADVP (RB so) (RB far))
                    (IN as)
                    (S
                      (NP (NNS people))
                      (VP (VBD knew))))))))
          (, ,)
          (ADVP (RB any)
            (ADVP (RB near) (JJ relative))
            (PP (IN at)
              (NP (DT all)))))))
    (. .)))

det(opposite-4, the-2)
nn(opposite-4, room-3)
prep_in(lived-12, opposite-4)
prep_to(opposite-4, hers-6)
det(ground-floor-10, the-9)
prep_on(lived-12, ground-floor-10)
root(ROOT-0, lived-12)
conj_and(lived-12, worked-14)
det(shoemaker-16, a-15)
dobj(lived-12, shoemaker-16)
det(man-19, a-18)
dep(shoemaker-16, man-19)
nsubj(had-21, man-19)
rcmod(man-19, had-21)
preconj(wife-23, neither-22)
dobj(had-21, wife-23)
dobj(had-21, child-25)
conj_nor(wife-23, child-25)
advmod(far-30, so-29)
advmod(knew-33, far-30)
mark(knew-33, as-31)
nsubj(knew-33, people-32)
rcmod(man-19, knew-33)
advcl(had-21, knew-33)
conj_nor(had-21, knew-33)
advmod(relative-37, any-35)
advmod(relative-37, near-36)
dep(man-19, relative-37)
prep_at(relative-37, all-39)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (ADVP (RB far)
          (PP (IN from)
            (S
              (VP (VBG being)
                (PP (IN in)
                  (NP (JJ good) (NN health)))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN although)
        (S
          (NP (PRP he))
          (VP (VBD worked)
            (PP (IN from)
              (NP (NN morning)))
            (PP (TO to)
              (NP (NN night)))))
        (, ,))
      (VP (VBD had)
        (NP
          (NP (DT a) (JJ constant) (NN pain))
          (PP (IN in)
            (NP
              (NP (PRP$ his) (NN back))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (ADJP (RB rather) (JJ crooked))
                    (, ,)
                    (S
                      (VP (VBG having)
                        (NP
                          (NP (RB indeed) (DT a) (JJ little) (NN hump))
                          (PP (IN on)
                            (NP (PRP it))))))))))))))
    (. .)))

nsubj(was-2, He-1)
root(ROOT-0, was-2)
prepc_far_from(was-2, being-5)
amod(health-8, good-7)
prep_in(being-5, health-8)
mark(worked-13, although-11)
nsubj(worked-13, he-12)
csubj(had-19, worked-13)
prep_from(worked-13, morning-15)
prep_to(worked-13, night-17)
conj_and(was-2, had-19)
det(pain-22, a-20)
amod(pain-22, constant-21)
dobj(had-19, pain-22)
poss(back-25, his-24)
prep_in(pain-22, back-25)
nsubj(crooked-30, back-25)
cop(crooked-30, was-28)
advmod(crooked-30, rather-29)
rcmod(back-25, crooked-30)
xcomp(crooked-30, having-32)
advmod(hump-36, indeed-33)
det(hump-36, a-34)
amod(hump-36, little-35)
dobj(having-32, hump-36)
prep_on(hump-36, it-38)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP$ his) (NN temper))
        (VP (VBD was) (RB not)
          (VP
            (ADVP (RB always))
            (PP (IN of)
              (NP (DT the) (JJS best)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP wonder)
      (SBAR
        (WHNP (WP what))
        (S
          (NP
            (NP (NN cleverest))
            (PP (IN of)
              (NP (NNS watches)
                (CC or)
                (NNS steam-engines))))
          (VP (MD would)
            (VP (VB go)
              (ADVP
                (ADVP (RB as) (RB well))
                (SBAR (IN as)
                  (S
                    (NP (PRP he))
                    (VP (VBD did)
                      (PP (IN with)
                        (NP (PDT such) (DT a) (NN twist)))
                      (PP (IN in)
                        (NP (PRP$ its) (NN back))))))))))))
    (. ?)))

mark(always-6, If-1)
poss(temper-3, his-2)
nsubj(always-6, temper-3)
aux(always-6, was-4)
neg(always-6, not-5)
advcl(wonder-12, always-6)
det(best-9, the-8)
prep_of(always-6, best-9)
nsubj(wonder-12, I-11)
root(ROOT-0, wonder-12)
dobj(go-20, what-13)
nsubj(go-20, cleverest-14)
prep_of(cleverest-14, watches-16)
prep_of(cleverest-14, steam-engines-18)
conj_or(watches-16, steam-engines-18)
aux(go-20, would-19)
ccomp(wonder-12, go-20)
advmod(well-22, as-21)
mwe(well-22, as-21)
advmod(go-20, well-22)
mark(did-25, as-23)
nsubj(did-25, he-24)
advcl(well-22, did-25)
ccomp(well-22, did-25)
predet(twist-29, such-27)
det(twist-29, a-28)
prep_with(did-25, twist-29)
poss(back-32, its-31)
prep_in(did-25, back-32)

(ROOT
  (S
    (S
      (S
        (VP (TO To)
          (VP (VB see)
            (S
              (NP (PRP him))
              (VP (VBN seated)
                (PP (IN on)
                  (NP (PRP$ his) (JJ low) (NN stool)))))
            (PRN (: --)
              (PP (IN in)
                (WHNP (WDT which)))
              (, ,)
              (SBAR
                (PP (IN by)
                  (NP (DT the) (NN way)))
                (, ,) (IN as)
                (S
                  (SBAR (IN if)
                    (S
                      (NP (PRP it))
                      (VP (VBD had) (RB not)
                        (VP (VBN been)
                          (ADJP (RB low) (JJ enough))))))
                  (, ,)
                  (NP (PRP he))
                  (VP (VBD sat)
                    (PP (IN in)
                      (NP (DT a) (JJ leather-covered) (NN hole)))
                    (, ,)
                    (ADVP (RB perhaps))
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN sake))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NN softness)
                              (CC and)
                              (NN spring))
                            (PP (IN of)
                              (NP (DT the) (NN leather))))))))))
              (: --))
            (PP (IN with)
              (NP
                (NP
                  (NP (PRP$ his) (NN head)
                    (CC and)
                    (NN body) (NN bent))
                  (PP
                    (ADVP (RB forward))
                    (IN over)
                    (NP
                      (NP (PRP$ his) (NN lapstone))
                      (CC or)
                      (NP (PRP$ his) (JJ last)))))
                (, ,)
                (CC and)
                (NP
                  (NP (PRP$ his) (JJ right) (NN hand))
                  (PP (IN with)
                    (NP
                      (NP (DT the) (JJ quick) (JJ broad-headed) (NN hammer))
                      (VP (VBG hammering)
                        (PRT (RP up)
                          (CC and)
                          (RP down))
                        (PP
                          (PP (IN on)
                            (NP
                              (NP (DT a) (NN piece))
                              (PP (IN of)
                                (NP (NN sole-leather)))))
                          (: ;)
                          (CC or)
                          (PP (IN with)
                            (NP (PDT both) (PRP$ his) (NNS hands))))
                        (S
                          (ADVP (RB now))
                          (VP
                            (VP (VBG meeting)
                              (PP
                                (CONJP (RB as) (IN if))
                                (PP (IN for)
                                  (NP
                                    (NP (DT a) (JJ little) (JJ friendly) (NN chat))
                                    (PP (IN about)
                                      (NP (NN something) (JJ small)))))
                                (, ,)
                                (CC and)
                                (ADVP (RB then)))
                              (ADVP (RB suddenly)))
                            (VP (VBG starting)
                              (NP
                                (ADJP (JJ asunder)
                                  (PP
                                    (CONJP (RB as) (IN if))
                                    (PP (IN in)
                                      (NP (JJ astonished) (NN anger)))
                                    (, ,)
                                    (PP (IN with)
                                      (NP (DT a) (NNS portentous)))))
                                (NNS hiss))
                              (PRN (, ,)
                                (S
                                  (NP (PRP you))
                                  (VP (MD might)
                                    (VP (VB have)
                                      (VP (VBN taken)
                                        (NP (PRP him))
                                        (PP (IN for)
                                          (NP
                                            (NP (DT an) (NN automaton))
                                            (VP (VBN moved)
                                              (PP (IN by)
                                                (NP (NNS springs))))))))))
                                (, ,)))
                            (CC and)
                            (VP (VBG imitating)
                              (NP (JJ human) (NNS actions))
                              (PP (IN in)
                                (NP
                                  (NP (DT a)
                                    (ADJP (RB very) (JJ wonderful))
                                    (NN manner))
                                  (: --)
                                  (ADJP (RB so) (JJ regular)
                                    (CC and)
                                    (JJ machine-like))))))))))))))))
      (VP (VBD were)
        (NP (PRP$ his) (NNS motions))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (RB little))
      (VP (VBD did)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBP seem)
              (S
                (VP (TO to)
                  (VP (VB think)
                    (PP (IN about)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP he))
                          (VP (VBD was)
                            (ADVP (IN at))))))))))))))
    (. .)))

aux(see-2, To-1)
csubj(motions-141, see-2)
nsubj(seated-4, him-3)
dep(see-2, seated-4)
poss(stool-8, his-6)
amod(stool-8, low-7)
prep_on(seated-4, stool-8)
prep_in(sat-27, which-11)
det(way-15, the-14)
prep_by(sat-27, way-15)
mark(sat-27, as-17)
mark(enough-24, if-18)
nsubj(enough-24, it-19)
aux(enough-24, had-20)
neg(enough-24, not-21)
cop(enough-24, been-22)
advmod(enough-24, low-23)
advcl(sat-27, enough-24)
nsubj(sat-27, he-26)
parataxis(see-2, sat-27)
det(hole-31, a-29)
amod(hole-31, leather-covered-30)
prep_in(sat-27, hole-31)
advmod(sat-27, perhaps-33)
det(sake-36, the-35)
prep_for(sat-27, sake-36)
det(softness-39, the-38)
prep_of(sake-36, softness-39)
prep_of(sake-36, spring-41)
conj_and(softness-39, spring-41)
det(leather-44, the-43)
prep_of(softness-39, leather-44)
poss(head-48, his-47)
prep_with(see-2, head-48)
nn(bent-51, body-50)
prep_with(see-2, bent-51)
conj_and(head-48, bent-51)
advmod(head-48, forward-52)
poss(lapstone-55, his-54)
prep_over(head-48, lapstone-55)
poss(last-58, his-57)
prep_over(head-48, last-58)
conj_or(lapstone-55, last-58)
poss(hand-63, his-61)
amod(hand-63, right-62)
prep_with(see-2, hand-63)
conj_and(head-48, hand-63)
det(hammer-68, the-65)
amod(hammer-68, quick-66)
amod(hammer-68, broad-headed-67)
prep_with(hand-63, hammer-68)
vmod(hammer-68, hammering-69)
vmod(hammer-68, hammering-69')
conj_or(hammering-69, hammering-69')
prt(hammering-69, up-70)
cc(up-70, and-71)
dep(up-70, down-72)
det(piece-75, a-74)
prep_on(hammering-69, piece-75)
prep_of(piece-75, sole-leather-77)
predet(hands-83, both-81)
poss(hands-83, his-82)
prep_with(hammering-69', hands-83)
advmod(meeting-85, now-84)
ccomp(hammering-69, meeting-85)
prep(meeting-85, for-88)
det(chat-92, a-89)
amod(chat-92, little-90)
amod(chat-92, friendly-91)
pobj(for-88, chat-92)
prep_about(chat-92, something-94)
amod(something-94, small-95)
prep(meeting-85, then-98)
conj_and(for-88, then-98)
advmod(meeting-85, suddenly-99)
dep(meeting-85, starting-100)
amod(hiss-111, asunder-101)
cc(asunder-101, as-102)
amod(anger-106, astonished-105)
prep_in(asunder-101, anger-106)
dep(asunder-101, with-108)
det(portentous-110, a-109)
pobj(with-108, portentous-110)
dobj(starting-100, hiss-111)
nsubj(taken-116, you-113)
aux(taken-116, might-114)
aux(taken-116, have-115)
parataxis(starting-100, taken-116)
dobj(taken-116, him-117)
det(automaton-120, an-119)
prep_for(taken-116, automaton-120)
vmod(automaton-120, moved-121)
agent(moved-121, springs-123)
ccomp(hammering-69, imitating-126)
conj_and(meeting-85, imitating-126)
amod(actions-128, human-127)
dobj(imitating-126, actions-128)
det(manner-133, a-130)
advmod(wonderful-132, very-131)
amod(manner-133, wonderful-132)
prep_in(imitating-126, manner-133)
advmod(regular-136, so-135)
amod(manner-133, regular-136)
amod(manner-133, machine-like-138)
conj_and(regular-136, machine-like-138)
cop(motions-141, were-139)
poss(motions-141, his-140)
root(ROOT-0, motions-141)
conj_and(motions-141, so-144)
nsubj(did-146, little-145)
ccomp(motions-141, did-146)
nsubj(seem-148, he-147)
nsubj(think-150, he-147)
ccomp(did-146, seem-148)
aux(think-150, to-149)
xcomp(seem-148, think-150)
dobj(was-154, what-152)
nsubj(was-154, he-153)
prepc_about(think-150, was-154)
advmod(was-154, at-155)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ little) (NN passing) (NN attention))
      (, ,)
      (NP
        (NP (DT a) (NN hint))
        (ADVP (RB now)
          (CC and)
          (RB then))
        (PP (IN from)
          (NP (PRP$ his) (NN head))))
      (, ,))
    (VP (VBD was)
      (ADJP (JJ sufficient)
        (S
          (VP (TO to)
            (VP (VB keep)
              (NP (PRP$ his) (NNS hands))
              (ADVP (RB right))
              (, ,)
              (SBAR
                (SBAR (IN for)
                  (S
                    (NP (PRP they))
                    (VP
                      (VP (VBD were)
                        (VP
                          (ADVP (RB so))
                          (VBN used)
                          (PP (TO to)
                            (NP (PRP$ their) (NN work)))))
                      (, ,)
                      (CC and)
                      (VP (VBD had)
                        (VP (VBN been)
                          (VP
                            (ADVP (RB so) (RB well))
                            (VBN taught)
                            (PP (IN by)
                              (NP (PRP$ his) (NN head)))))))))
                (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (MD could)
                      (ADVP (RB pretty) (RB nearly))
                      (VP (VB have)
                        (VP (VBN made)
                          (NP
                            (NP (DT a) (NN pair))
                            (PP (IN of)
                              (NP
                                (NP (NNS shoes))
                                (PP (IN of)
                                  (NP (PRP themselves)))))))))))
                (: ;)
                (SBAR (RB so) (IN that)
                  (S
                    (NP (DT the) (VBG shoemaking) (NN trade))
                    (VP (VBZ is)
                      (NP
                        (NP (CD one))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ admits)
                              (PP (IN of)
                                (NP
                                  (NP (DT a) (JJ great) (NN deal))
                                  (PP (IN of)
                                    (NP
                                      (NP (NN thought))
                                      (VP (VBG going)
                                        (PP (IN on) (IN in)
                                          (NP
                                            (NP (DT the) (NN head))
                                            (SBAR
                                              (WHNP (WDT that))
                                              (S
                                                (VP (VBZ hangs)
                                                  (PP (IN over)
                                                    (NP (DT the) (NN work)))
                                                  (, ,)
                                                  (PP (IN like)
                                                    (NP
                                                      (NP (DT a) (NN sun))
                                                      (PP (IN over)
                                                        (NP
                                                          (NP (DT the) (NN earth))
                                                          (VP (VBG ripening)
                                                            (NP (PRP$ its) (NN harvest))))))))))))))))))))))))))))))
    (. .)))

det(attention-4, A-1)
amod(attention-4, little-2)
nn(attention-4, passing-3)
nsubj(sufficient-16, attention-4)
nsubj(keep-18, attention-4)
det(hint-7, a-6)
appos(attention-4, hint-7)
advmod(hint-7, now-8)
advmod(hint-7, then-10)
conj_and(now-8, then-10)
poss(head-13, his-12)
prep_from(hint-7, head-13)
cop(sufficient-16, was-15)
root(ROOT-0, sufficient-16)
aux(keep-18, to-17)
xcomp(sufficient-16, keep-18)
poss(hands-20, his-19)
dobj(keep-18, hands-20)
advmod(keep-18, right-21)
mark(used-27, for-23)
nsubjpass(used-27, they-24)
nsubjpass(taught-37, they-24)
auxpass(used-27, were-25)
advmod(used-27, so-26)
advcl(keep-18, used-27)
poss(work-30, their-29)
prep_to(used-27, work-30)
aux(taught-37, had-33)
auxpass(taught-37, been-34)
advmod(well-36, so-35)
advmod(taught-37, well-36)
advcl(keep-18, taught-37)
conj_and(used-27, taught-37)
poss(head-40, his-39)
agent(taught-37, head-40)
mark(made-48, that-42)
nsubj(made-48, they-43)
aux(made-48, could-44)
advmod(nearly-46, pretty-45)
advmod(made-48, nearly-46)
aux(made-48, have-47)
dep(used-27, made-48)
det(pair-50, a-49)
dobj(made-48, pair-50)
prep_of(pair-50, shoes-52)
prep_of(shoes-52, themselves-54)
advmod(one-62, so-56)
mark(one-62, that-57)
det(trade-60, the-58)
amod(trade-60, shoemaking-59)
nsubj(one-62, trade-60)
cop(one-62, is-61)
dep(used-27, one-62)
nsubj(admits-64, one-62)
rcmod(one-62, admits-64)
det(deal-68, a-66)
amod(deal-68, great-67)
prep_of(admits-64, deal-68)
prep_of(deal-68, thought-70)
vmod(thought-70, going-71)
dep(going-71, on-72)
det(head-75, the-74)
prep_in(going-71, head-75)
nsubj(hangs-77, head-75)
rcmod(head-75, hangs-77)
det(work-80, the-79)
prep_over(hangs-77, work-80)
det(sun-84, a-83)
prep_like(hangs-77, sun-84)
det(earth-87, the-86)
prep_over(sun-84, earth-87)
vmod(earth-87, ripening-88)
poss(harvest-90, its-89)
dobj(ripening-88, harvest-90)

(ROOT
  (S
    (S
      (NP (NNS Shoemakers))
      (VP (VBP have)
        (VP (VBD distinguished)
          (NP (PRP themselves))
          (PP (DT both)
            (PP (IN in)
              (NP (NN poetry)))
            (CC and)
            (PP (IN in)
              (NP (NN prose)))))))
    (: ;)
    (CC and)
    (S
      (S
        (SBAR (IN if)
          (S
            (NP (NNP Hector) (NNP Macallaster))
            (VP (VBD had)
              (VP (VBN done)
                (ADVP (RB so))
                (PP (IN in)
                  (NP (DT neither)))))))
        (, ,)
        (NP (PRP he))
        (VP (MD could)
          (ADVP (RB yet))
          (VP (VB think))))
      (, ,)
      (CC and)
      (S
        (NP (DT that))
        (VP (VBZ is)
          (SBAR
            (WHNP (WP what))
            (S
              (NP
                (NP (DT some) (NNS people))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP write)
                      (NP (DT both) (NN poetry)
                        (CC and)
                        (NN prose))))))
              (VP (MD can) (RB not)
                (VP (VB do))))))))
    (. .)))

nsubj(distinguished-3, Shoemakers-1)
aux(distinguished-3, have-2)
root(ROOT-0, distinguished-3)
dobj(distinguished-3, themselves-4)
preconj(distinguished-3, both-5)
prep_in(distinguished-3, poetry-7)
prep_in(distinguished-3, prose-10)
conj_and(poetry-7, prose-10)
mark(done-17, if-13)
nn(Macallaster-15, Hector-14)
nsubj(done-17, Macallaster-15)
aux(done-17, had-16)
advcl(think-25, done-17)
advmod(done-17, so-18)
prep_in(done-17, neither-20)
nsubj(think-25, he-22)
aux(think-25, could-23)
advmod(think-25, yet-24)
conj_and(distinguished-3, think-25)
nsubj(is-29, that-28)
conj_and(distinguished-3, is-29)
conj_and(think-25, is-29)
dobj(do-41, what-30)
det(people-32, some-31)
nsubj(write-34, people-32)
nsubj(do-41, people-32)
rcmod(people-32, write-34)
preconj(poetry-36, both-35)
dobj(write-34, poetry-36)
dobj(write-34, prose-38)
conj_and(poetry-36, prose-38)
aux(do-41, can-39)
neg(do-41, not-40)
ccomp(is-29, do-41)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ is)
      (PP (IN of)
        (NP
          (ADJP (RB infinitely) (JJR more))
          (NN importance)))
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB think)
                    (S
                      (VP
                        (CONJP (RB well) (IN than))
                        (VP
                          (ADVP (RB merely))
                          (TO to)
                          (VP
                            (VP (VB write)
                              (ADVP (RB ever))
                              (ADVP (RB so) (RB well)))
                            (: ;)
                            (CC and)
                            (, ,)
                            (ADVP (VBD besides))))
                        (, ,)
                        (VP (TO to)
                          (VP (VB think)
                            (ADVP (RB well)
                              (S
                                (VP (VBZ is)
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (NP (NN everybody))
                                      (VP (MD ought)
                                        (S
                                          (VP (TO to)
                                            (VP (VB be))))))))))))
                        (CC or)
                        (VP (TO to)
                          (VP (VB become)
                            (ADJP (JJ able)
                              (S
                                (VP (TO to)
                                  (VP (VB do)))))))))))))))))
    (. .)))

cc(is-3, But-1)
nsubj(is-3, it-2)
nsubj(able-10, it-2)
nsubj(think-12, it-2)
root(ROOT-0, is-3)
advmod(more-6, infinitely-5)
amod(importance-7, more-6)
prep_of(is-3, importance-7)
aux(able-10, to-8)
cop(able-10, be-9)
xcomp(is-3, able-10)
aux(think-12, to-11)
xcomp(able-10, think-12)
advmod(write-17, merely-15)
aux(write-17, to-16)
ccomp(think-12, write-17)
advmod(write-17, ever-18)
advmod(well-20, so-19)
advmod(write-17, well-20)
ccomp(think-12, besides-24)
advmod(write-17, besides-24)
conj_and(write-17, besides-24)
aux(think-27, to-26)
dep(write-17, think-27)
advmod(think-27, well-28)
dep(well-28, is-29)
dobj(ought-32, what-30)
nsubj(be-34, what-30)
nsubj(ought-32, everybody-31)
ccomp(is-29, ought-32)
aux(be-34, to-33)
xcomp(ought-32, be-34)
aux(become-37, to-36)
ccomp(think-12, become-37)
conj_or(write-17, become-37)
acomp(become-37, able-38)
aux(do-40, to-39)
xcomp(able-38, do-40)

(ROOT
  (S
    (S
      (NP (NNP Hector))
      (VP (VBD had)
        (NP
          (NP (JJ odd) (NNS ways))
          (PP (IN of)
            (S
              (VP (VBG looking)
                (PP (IN at)
                  (NP (NNS things)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP need) (RB not)
        (VP (VB say)
          (NP (JJR more))
          (PP (IN about)
            (NP
              (NP (DT that))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP it))
                  (VP (MD will)
                    (ADVP (RB soon))
                    (VP (VB be)
                      (ADJP (RB plain) (JJ enough)))))))))))
    (. .)))

nsubj(had-2, Hector-1)
root(ROOT-0, had-2)
amod(ways-4, odd-3)
dobj(had-2, ways-4)
prepc_of(ways-4, looking-6)
prep_at(looking-6, things-8)
nsubj(need-12, I-11)
conj_but(had-2, need-12)
neg(need-12, not-13)
dep(need-12, say-14)
dobj(say-14, more-15)
prep_about(say-14, that-17)
mark(enough-25, for-19)
nsubj(enough-25, it-20)
aux(enough-25, will-21)
advmod(enough-25, soon-22)
cop(enough-25, be-23)
advmod(enough-25, plain-24)
rcmod(that-17, enough-25)

(ROOT
  (S
    (PP (RB Ever) (IN since)
      (NP
        (NP (DT the) (NN illness))
        (SBAR
          (WHPP (IN from)
            (WHNP (WDT which)))
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN risen)
                (PP (IN with)
                  (NP
                    (NP (DT a) (JJ weak) (NN spine))
                    (, ,)
                    (CC and)
                    (NP (JJ ever-working) (NN brain))
                    (, ,)
                    (CC and)
                    (NP (DT a) (JJ quiet) (NN heart))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN shown)
        (NP (PRP himself))
        (PP (RB not)
          (NP
            (NP (RB merely) (DT a) (JJ good) (NN sort))
            (PP (IN of)
              (NP (NN man)))))
        (, ,)
        (PP
          (PP (IN for)
            (NP
              (NP (JJ such))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (ADVP (RB always))
                    (VP
                      (VP (VBN been))
                      (, ,)
                      (CC but)
                      (VP
                        (NP
                          (NP (DT a) (JJ religious) (NN man))
                          (: ;)
                          (S
                            (PP (RB not) (IN by)
                              (S
                                (VP (VBG saying)
                                  (NP (RB much)))))
                            (, ,)
                            (X (IN for))
                            (NP (PRP he))
                            (VP (VBD was)
                              (ADJP (JJ modest))
                              (PP (RB even)
                                (PP (TO to)
                                  (NP
                                    (NP (NNS shyness))
                                    (PP (IN with)
                                      (NP (JJ grown) (NNS people)))))
                                (, ,)
                                (CC but)
                                (PP (IN by)
                                  (NP
                                    (NP (DT the) (NN solemnity))
                                    (PP (IN of)
                                      (NP (PRP$ his) (NN look))))))
                              (SBAR
                                (WHADVP (WRB when))
                                (S
                                  (NP (DT a) (JJ great) (NN word))
                                  (VP (VBD was)
                                    (VP (VBN spoken)))))))))))))))
          (, ,)
          (PP (IN by)
            (NP (PRP$ his) (JJ unblamable) (NN behaviour)))
          (, ,)
          (CC and)
          (PP (IN by)
            (NP
              (NP (DT the) (NN readiness))
              (SBAR
                (WHPP (IN with)
                  (WHNP (WDT which)))
                (S
                  (NP (PRP he))
                  (VP (MD would)
                    (VP (VB lend)
                      (CC or)
                      (VB give)
                      (PP (IN of)
                        (NP (PRP$ his) (JJ small) (NNS earnings)))
                      (PP (TO to)
                        (NP (PRP$ his) (JJ poor) (NNS neighbours))))))))))))
    (. .)))

advmod(shown-26, Ever-1)
det(illness-4, the-3)
prep_from(risen-9, illness-4)
prep_since(shown-26, illness-4)
nsubj(risen-9, he-7)
aux(risen-9, had-8)
rcmod(illness-4, risen-9)
det(spine-13, a-11)
amod(spine-13, weak-12)
prep_with(risen-9, spine-13)
amod(brain-17, ever-working-16)
prep_with(risen-9, brain-17)
conj_and(spine-13, brain-17)
det(heart-22, a-20)
amod(heart-22, quiet-21)
prep_with(risen-9, heart-22)
conj_and(spine-13, heart-22)
nsubj(shown-26, he-24)
nsubj(shown-26', he-24)
nsubj(shown-26'', he-24)
aux(shown-26, had-25)
root(ROOT-0, shown-26)
conj_and(shown-26, shown-26')
conj_and(shown-26, shown-26'')
dobj(shown-26, himself-27)
prep(shown-26, not-28)
advmod(sort-32, merely-29)
det(sort-32, a-30)
amod(sort-32, good-31)
dep(not-28, sort-32)
prep_of(sort-32, man-34)
prep_for(shown-26, such-37)
nsubj(been-41, he-38)
aux(been-41, had-39)
advmod(been-41, always-40)
rcmod(such-37, been-41)
det(man-46, a-44)
amod(man-46, religious-45)
rcmod(such-37, man-46)
conj_but(been-41, man-46)
neg(modest-56, not-48)
prepc_by(modest-56, saying-50)
dobj(saying-50, much-51)
dep(modest-56, for-53)
nsubj(modest-56, he-54)
nsubj(modest-56', he-54)
cop(modest-56, was-55)
dep(man-46, modest-56)
dep(man-46, modest-56')
conj_but(modest-56, modest-56')
advmod(modest-56, even-57)
prep_to(modest-56, shyness-59)
amod(people-62, grown-61)
prep_with(shyness-59, people-62)
det(solemnity-67, the-66)
prep_by(modest-56', solemnity-67)
poss(look-70, his-69)
prep_of(solemnity-67, look-70)
advmod(spoken-76, when-71)
det(word-74, a-72)
amod(word-74, great-73)
nsubjpass(spoken-76, word-74)
auxpass(spoken-76, was-75)
advcl(modest-56, spoken-76)
poss(behaviour-81, his-79)
amod(behaviour-81, unblamable-80)
prep_by(shown-26', behaviour-81)
det(readiness-86, the-85)
prep_by(shown-26'', readiness-86)
prep_with(lend-91, readiness-86)
nsubj(lend-91, he-89)
nsubj(give-93, he-89)
aux(lend-91, would-90)
rcmod(readiness-86, lend-91)
rcmod(readiness-86, give-93)
conj_or(lend-91, give-93)
poss(earnings-97, his-95)
amod(earnings-97, small-96)
prep_of(lend-91, earnings-97)
poss(neighbours-101, his-99)
amod(neighbours-101, poor-100)
prep_to(lend-91, neighbours-101)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (DT The) (JJ only) (NN thing))
          (SBAR
            (WHPP (IN of)
              (WHNP (WDT which)))
            (S
              (NP (NN anybody))
              (VP (MD could)
                (VP (VB complain))))))
        (VP (VBD was)
          (NP (PRP$ his) (NN temper))))
      (: ;)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD showed)
          (NP (PRP itself))
          (ADVP (RB only))
          (ADVP (RB occasionally)))))
    (, ,)
    (CC and)
    (S
      (NP (RB almost) (NN everybody))
      (VP (VBD made)
        (NP (NN excuse))
        (PP (IN for)
          (NP (PRP it)))
        (PP (IN on)
          (NP
            (NP (DT the) (NN ground))
            (PP (IN of)
              (NP (PRP$ his) (JJ bodily) (NNS ailments)))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, only-2)
prep_of(complain-8, thing-3)
nsubj(temper-11, thing-3)
nsubj(complain-8, anybody-6)
aux(complain-8, could-7)
rcmod(thing-3, complain-8)
cop(temper-11, was-9)
poss(temper-11, his-10)
root(ROOT-0, temper-11)
nsubj(showed-15, it-14)
conj_but(temper-11, showed-15)
dobj(showed-15, itself-16)
advmod(showed-15, only-17)
advmod(showed-15, occasionally-18)
advmod(everybody-22, almost-21)
nsubj(made-23, everybody-22)
conj_and(temper-11, made-23)
dobj(made-23, excuse-24)
prep_for(made-23, it-26)
det(ground-29, the-28)
prep_on(made-23, ground-29)
poss(ailments-33, his-31)
amod(ailments-33, bodily-32)
prep_of(ground-29, ailments-33)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD gave)
      (NP (PRP it))
      (NP
        (NP
          (NP (DT no) (NN quarter))
          (NP (PRP himself)))
        (, ,)
        (ADVP (RB however))))
    (. .)))

nsubj(gave-2, He-1)
root(ROOT-0, gave-2)
iobj(gave-2, it-3)
neg(quarter-5, no-4)
dobj(gave-2, quarter-5)
npadvmod(quarter-5, himself-6)
advmod(quarter-5, however-8)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (ADVP (RB once))
        (PP (TO to)
          (NP
            (NP (DT the) (NN clergyman))
            (, ,)
            (SBAR
              (WHPP (TO to)
                (WHNP (WP whom)))
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN been)
                    (VP (VBG lamenting)
                      (NP (DT the) (NN trouble))
                      (SBAR
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD had)
                              (PP (IN with)
                                (NP (PRP it))))))
                        (, ,)
                        (CC and)
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBD had)
                              (VP (VBN sought)
                                (S
                                  (VP (TO to)
                                    (VP (VB comfort)
                                      (NP (PRP him))
                                      (PP (IN by)
                                        (S
                                          (VP (VBG saying)
                                            (SBAR (IN that)
                                              (S
                                                (NP (PRP it))
                                                (VP (VBD was)
                                                  (VP (VBN caused)
                                                    (PP (IN by)
                                                      (NP
                                                        (NP (DT the) (NN weakness))
                                                        (PP (IN of)
                                                          (NP (PRP$ his) (NN health)))))))))))))))))))))))))))
        (: --) (`` ``)
        (FRAG
          (INTJ (UH No))
          (, ,)
          (NP (NN sir)))))
    (: --)
    (S
      (NP (NN excuse))
      (NP (PRP me)))
    (: ;)
    (S
      (NP (NN nobody))
      (VP (VBZ knows)
        (SBAR
          (WHADJP (WRB how) (JJ much))
          (S
            (NP (PRP I))
            (VP (VBP am)
              (ADJP (JJ indebted)
                (PP (TO to)
                  (NP (PRP$ my) (JJ crooked) (NN back)))))))))
    (. .)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
advmod(said-2, once-3)
det(clergyman-6, the-5)
prep_to(said-2, clergyman-6)
prep_to(lamenting-13, clergyman-6)
nsubj(lamenting-13, he-10)
aux(lamenting-13, had-11)
aux(lamenting-13, been-12)
rcmod(clergyman-6, lamenting-13)
det(trouble-15, the-14)
dobj(lamenting-13, trouble-15)
nsubj(had-17, he-16)
dep(lamenting-13, had-17)
prep_with(had-17, it-19)
nsubj(sought-24, who-22)
nsubj(comfort-26, who-22)
aux(sought-24, had-23)
dep(lamenting-13, sought-24)
conj_and(had-17, sought-24)
aux(comfort-26, to-25)
xcomp(sought-24, comfort-26)
dobj(comfort-26, him-27)
prepc_by(comfort-26, saying-29)
mark(caused-33, that-30)
nsubjpass(caused-33, it-31)
auxpass(caused-33, was-32)
ccomp(saying-29, caused-33)
det(weakness-36, the-35)
agent(caused-33, weakness-36)
poss(health-39, his-38)
prep_of(weakness-36, health-39)
discourse(sir-44, No-42)
dep(said-2, sir-44)
dep(me-47, excuse-46)
parataxis(said-2, me-47)
nsubj(knows-50, nobody-49)
parataxis(said-2, knows-50)
advmod(much-52, how-51)
dep(indebted-55, much-52)
nsubj(indebted-55, I-53)
cop(indebted-55, am-54)
ccomp(knows-50, indebted-55)
poss(back-59, my-57)
amod(back-59, crooked-58)
prep_to(indebted-55, back-59)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD were) (RB n't)
          (PP (IN for)
            (NP (DT that))))))
    (NP (PRP I))
    (VP (MD might)
      (VP
        (VP (VB have)
          (NP (DT a) (JJ bad) (NN temper)))
        (CC and)
        (VP
          (ADVP (RB never))
          (VB know)
          (NP (PRP it)))))
    (. .)))

mark(were-3, If-1)
nsubj(were-3, it-2)
advcl(have-9, were-3)
neg(were-3, n't-4)
prep_for(were-3, that-6)
nsubj(have-9, I-7)
nsubj(know-15, I-7)
aux(have-9, might-8)
root(ROOT-0, have-9)
det(temper-12, a-10)
amod(temper-12, bad-11)
dobj(have-9, temper-12)
neg(know-15, never-14)
conj_and(have-9, know-15)
dobj(know-15, it-16)

(ROOT
  (S (CC But)
    (S
      (NP (DT that))
      (VP (VBZ drives)
        (NP (PRP it))
        (PRT (RP out))
        (PP (IN of)
          (NP (PRP$ its) (NN hole)))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBP see)
            (NP
              (NP (DT the) (JJ ugly) (NN head))
              (PP (IN of)
                (NP (PRP it)))))))
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (S
            (NP (PRP it))
            (VP
              (VP (VBZ 's)
                (ADVP (RB there)))
              (, ,)
              (CC and)
              (VP (VBP try)
                (ADVP (RB once) (RBR more))
                (S
                  (VP (TO to)
                    (VP (VB starve)
                      (NP (PRP it))
                      (PP (TO to)
                        (NP (NN death))))))))))))
    (. .)))

nsubj(drives-3, that-2)
root(ROOT-0, drives-3)
dobj(drives-3, it-4)
poss(hole-8, its-7)
prep_out_of(drives-3, hole-8)
advmod(see-13, when-11)
nsubj(see-13, I-12)
advcl(know-20, see-13)
det(head-16, the-14)
amod(head-16, ugly-15)
dobj(see-13, head-16)
prep_of(head-16, it-18)
nsubj(know-20, I-19)
conj_and(drives-3, know-20)
nsubj('s-22, it-21)
nsubj(try-26, it-21)
nsubj(starve-30, it-21)
ccomp(know-20, 's-22)
advmod('s-22, there-23)
ccomp(know-20, try-26)
conj_and('s-22, try-26)
advmod(more-28, once-27)
advmod(try-26, more-28)
aux(starve-30, to-29)
xcomp(try-26, starve-30)
dobj(starve-30, it-31)
prep_to(starve-30, death-33)

(ROOT
  (S (CC But)
    (VP (VB oh)
      (ADJP (RB dear)))
    (. !)))

cc(oh-2, But-1)
root(ROOT-0, oh-2)
acomp(oh-2, dear-3)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (PDT such) (DT a) (NN creature))
        (PP (TO to)
          (NP (NN burrow)))))
    (. !)))

nsubj(creature-5, it-1)
cop(creature-5, 's-2)
predet(creature-5, such-3)
det(creature-5, a-4)
root(ROOT-0, creature-5)
prep_to(creature-5, burrow-7)

(ROOT
  (FRAG
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBP think)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 've)
                (VP (VBN built)
                  (NP (PRP it))
                  (PP (IN in)
                    (NP (DT all) (NN round))))))))))
    (, ,)
    (ADVP (RB out))
    (VP (VBZ comes)
      (NP (PRP$ its) (NN head))
      (PP
        (ADVP (RB again))
        (IN at)
        (NP
          (NP (DT a) (NN place))
          (SBAR
            (WHADVP (WRB where))
            (S
              (S
                (NP (PRP I))
                (ADVP (RB never))
                (VP (VBD looked)
                  (S
                    (VP (TO to)
                      (VP (VB see)
                        (NP (PRP it)))))))
              (, ,)
              (CC and)
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (S (RB all)
                    (VP (TO to)
                      (VP (VB do)
                        (PRT (RP over))
                        (ADVP (RB again))))))))))))
    (. !) ('' '')))

advmod(think-3, When-1)
nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(built-6, I-4)
aux(built-6, 've-5)
ccomp(think-3, built-6)
dobj(built-6, it-7)
det(round-10, all-9)
prep_in(built-6, round-10)
advmod(comes-13, out-12)
dep(think-3, comes-13)
poss(head-15, its-14)
dobj(comes-13, head-15)
advmod(comes-13, again-16)
det(place-19, a-18)
prep_at(comes-13, place-19)
advmod(looked-23, where-20)
nsubj(looked-23, I-21)
nsubj(see-25, I-21)
neg(looked-23, never-22)
rcmod(place-19, looked-23)
aux(see-25, to-24)
xcomp(looked-23, see-25)
dobj(see-25, it-26)
nsubj('s-30, it-29)
nsubj(do-33, it-29)
rcmod(place-19, 's-30)
conj_and(looked-23, 's-30)
advmod(do-33, all-31)
aux(do-33, to-32)
xcomp('s-30, do-33)
prt(do-33, over-34)
advmod(do-33, again-35)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (VP (VB understand)
        (PP (IN by)
          (NP (DT this)))
        (SBAR
          (ADVP (RB already))
          (IN that)
          (S
            (NP (DT the) (NN shoemaker))
            (VP (VBD thought)
              (SBAR (IN after)
                (S
                  (NP
                    (NP (PRP$ his) (JJ own) (NN fashion))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ is)
                          (NP
                            (NP (DT the) (NN way) (NN everybody))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (MD can)
                                  (VP (VB think))))))))))
                  (VP (VBZ does)
                    (VP (VB think))))))))))
    (. .)))

nsubj(understand-3, You-1)
aux(understand-3, will-2)
root(ROOT-0, understand-3)
prep_by(understand-3, this-5)
advmod(thought-10, already-6)
mark(thought-10, that-7)
det(shoemaker-9, the-8)
nsubj(thought-10, shoemaker-9)
dep(understand-3, thought-10)
mark(think-25, after-11)
poss(fashion-14, his-12)
amod(fashion-14, own-13)
nsubj(everybody-20, fashion-14)
nsubj(think-25, fashion-14)
cop(everybody-20, is-17)
det(everybody-20, the-18)
nn(everybody-20, way-19)
rcmod(fashion-14, everybody-20)
nsubj(think-23, everybody-20)
aux(think-23, can-22)
rcmod(everybody-20, think-23)
aux(think-25, does-24)
advcl(thought-10, think-25)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP he))
        (VP (VBD thought)
          (PP (IN about)
            (NP
              (NP (PRP$ his) (NN trade))
              (CC and)
              (NP (DT some) (JJ other) (NNS things)))))))
    (NP (PRP we))
    (VP (MD shall)
      (VP (VB see)
        (ADVP (RP by)
          (CC and)
          (RP by))))
    (. .)))

dobj(thought-3, What-1)
nsubj(thought-3, he-2)
advcl(see-13, thought-3)
poss(trade-6, his-5)
prep_about(thought-3, trade-6)
det(things-10, some-8)
amod(things-10, other-9)
prep_about(thought-3, things-10)
conj_and(trade-6, things-10)
nsubj(see-13, we-11)
aux(see-13, shall-12)
root(ROOT-0, see-13)
advmod(see-13, by-14)
advmod(see-13, by-16)
conj_and(by-14, by-16)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (NNP Willie))
          (VP (VBD entered)
            (NP (PRP$ his) (NN room)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD greeted)
        (NP (PRP him))
        (PP (IN with)
          (NP (DT a)
            (ADJP (RB very) (JJ friendly))
            (NN nod)))))
    (: ;)
    (S
      (S
        (PP (IN for)
          (NP
            (NP (RB not) (RB only))
            (VP (VBD was))))
        (NP (PRP he))
        (VP (VBD fond)
          (PP (IN of)
            (NP (NNS children)))))
      (, ,)
      (CC but)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (NP
            (NP (DT a) (JJ special) (NN favour))
            (PP (IN for)
              (NP (NNP Willie))))
          (, ,)
          (ADVP (RB chiefly))
          (SBAR
            (SBAR (IN because)
              (S
                (NP (PRP he))
                (VP (VBD considered)
                  (S
                    (NP (PRP himself))
                    (ADJP (RB greatly) (JJ indebted)
                      (PP (TO to)
                        (NP
                          (NP (PRP him))
                          (PP (IN for)
                            (NP (NN something))))))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN said)
                            (PP (TO to)
                              (NP (NNP Mrs) (NNP Wilson)))))))))))
            (, ,)
            (CC and)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD had)
                  (VP (VBN given)
                    (NP (PRP him))
                    (NP (DT a) (JJ good) (NN deal)
                      (S
                        (VP (TO to)
                          (VP (VB think)
                            (PRT (RP about))))))))))))))
    (. .)))

advmod(entered-3, When-1)
nsubj(entered-3, Willie-2)
advcl(greeted-8, entered-3)
poss(room-5, his-4)
dobj(entered-3, room-5)
nsubj(greeted-8, he-7)
root(ROOT-0, greeted-8)
dobj(greeted-8, him-9)
det(nod-14, a-11)
advmod(friendly-13, very-12)
amod(nod-14, friendly-13)
prep_with(greeted-8, nod-14)
prep(fond-21, for-16)
neg(only-18, not-17)
pobj(for-16, only-18)
vmod(only-18, was-19)
nsubj(fond-21, he-20)
parataxis(greeted-8, fond-21)
prep_of(fond-21, children-23)
nsubj(had-27, he-26)
parataxis(greeted-8, had-27)
conj_but(fond-21, had-27)
det(favour-30, a-28)
amod(favour-30, special-29)
dobj(had-27, favour-30)
prep_for(favour-30, Willie-32)
advmod(considered-37, chiefly-34)
mark(considered-37, because-35)
nsubj(considered-37, he-36)
advcl(had-27, considered-37)
nsubj(said-47, himself-38)
advmod(indebted-40, greatly-39)
dep(said-47, indebted-40)
prep_to(indebted-40, him-42)
prep_for(him-42, something-44)
nsubj(said-47, he-45)
aux(said-47, had-46)
xcomp(considered-37, said-47)
nn(Wilson-50, Mrs-49)
prep_to(said-47, Wilson-50)
nsubj(given-55, which-53)
aux(given-55, had-54)
advcl(had-27, given-55)
conj_and(considered-37, given-55)
iobj(given-55, him-56)
det(deal-59, a-57)
amod(deal-59, good-58)
dobj(given-55, deal-59)
aux(think-61, to-60)
vmod(deal-59, think-61)
prt(think-61, about-62)

(ROOT
  (S
    (PP (IN For)
      (NP (NNP Mrs)))
    (S
      (NP (NNP Wilson))
      (ADVP (RB often))
      (VP (VBD had)
        (NP
          (NP (DT a) (NN chat))
          (PP (IN with)
            (NP (NNP Hector))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP she))
      (VP (MD would) (RB not)
        (ADVP (RB unfrequently))
        (VP (VB talk)
          (PP (IN about)
            (NP
              (NP (NNP Willie))
              (, ,)
              (SBAR
                (WHPP (IN of)
                  (WHNP (WP$ whose) (NNS friendship)))
                (S
                  (NP (PRP she))
                  (VP (VBD was)
                    (ADJP (JJ proud))))))))))
    (. .)))

prep_for(had-5, Mrs-2)
nsubj(had-5, Wilson-3)
advmod(had-5, often-4)
root(ROOT-0, had-5)
det(chat-7, a-6)
dobj(had-5, chat-7)
prep_with(chat-7, Hector-9)
advmod(talk-17, then-12)
nsubj(talk-17, she-13)
aux(talk-17, would-14)
neg(talk-17, not-15)
advmod(talk-17, unfrequently-16)
conj_and(had-5, talk-17)
prep_about(talk-17, Willie-19)
poss(friendship-23, Willie-19)
prep_of(proud-26, friendship-23)
nsubj(proud-26, she-24)
cop(proud-26, was-25)
rcmod(Willie-19, proud-26)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD had)
        (VP (VBN told)
          (NP (PRP him))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ strange) (NN question))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN put)
                      (PP (TO to)
                        (NP (PRP her)))
                      (PP (IN as)
                        (PP (TO to)
                          (SBAR (IN whether)
                            (S
                              (NP (NNP God))
                              (VP (VBD worked)))))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP
          (NP (DT the) (NN shoemaker))
          (, ,)
          (VP (VBG thinking)
            (PRT (RP over))
            (NP (PRP it)))
          (, ,))
        (VP (VBD had)
          (VP (VBN come)
            (PP (TO to)
              (NP
                (NP (DT the) (JJ same) (NN conclusion))
                (PP (IN as)
                  (NP
                    (NP (NNP Willie) (POS 's))
                    (NN father))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBD had)
          (VP (VBN been)
            (NP
              (NP (DT a) (JJ great) (NN comfort)
                (CC and)
                (NN help))
              (PP (TO to)
                (NP (PRP him))))))))
    (. .)))

nsubj(told-3, She-1)
aux(told-3, had-2)
root(ROOT-0, told-3)
dobj(told-3, him-4)
det(question-8, the-6)
amod(question-8, strange-7)
prep_of(told-3, question-8)
nsubj(put-11, he-9)
aux(put-11, had-10)
rcmod(question-8, put-11)
prep_to(put-11, her-13)
prepc_as_to(put-11, to-15)
mark(worked-18, whether-16)
nsubj(worked-18, God-17)
pcomp(put-11, worked-18)
det(shoemaker-22, the-21)
nsubj(come-29, shoemaker-22)
vmod(shoemaker-22, thinking-24)
prt(thinking-24, over-25)
dobj(thinking-24, it-26)
aux(come-29, had-28)
conj_and(told-3, come-29)
det(conclusion-33, the-31)
amod(conclusion-33, same-32)
prep_to(come-29, conclusion-33)
poss(father-37, Willie-35)
prep_as(conclusion-33, father-37)
nsubj(comfort-45, it-40)
aux(comfort-45, had-41)
cop(comfort-45, been-42)
det(comfort-45, a-43)
amod(comfort-45, great-44)
conj_and(told-3, comfort-45)
conj_and(come-29, comfort-45)
conj_and(come-29, help-47)
conj_and(comfort-45, help-47)
prep_to(comfort-45, him-49)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (MD can)
      (NP (PRP I))
      (VP (VB do)
        (PP (IN for)
          (NP
            (NP (PRP you) (NN to-day))
            (, ,)
            (NP (NNP Willie))))))
    (. ?) ('' '')))

dobj(do-5, What-2)
aux(do-5, can-3)
nsubj(do-5, I-4)
root(ROOT-0, do-5)
dep(to-day-8, you-7)
prep_for(do-5, to-day-8)
appos(to-day-8, Willie-10)

(ROOT
  (S
    (S
      (NP (PRP he))
      (VP (VBD said)))
    (: ;)
    (S
      (PP (IN for)
        (PP (IN in)
          (NP
            (NP (DT that) (NN part))
            (PP (IN of)
              (NP (DT the) (NN country))))))
      (NP (PRP they))
      (VP (VBP do) (RB not)
        (VP (VB say)
          (NP
            (NP (NNP _) (NNP Master) (NNP _))
            (CC and)
            (NP (NNP _) (NNP Miss) (NNP _))))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
prep(say-14, for-4)
pcomp(for-4, in-5)
det(part-7, that-6)
pobj(in-5, part-7)
det(country-10, the-9)
prep_of(part-7, country-10)
nsubj(say-14, they-11)
aux(say-14, do-12)
neg(say-14, not-13)
parataxis(said-2, say-14)
nn(_-17, _-15)
nn(_-17, Master-16)
dobj(say-14, _-17)
nn(_-21, _-19)
nn(_-21, Miss-20)
dobj(say-14, _-21)
conj_and(_-17, _-21)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP look)
      (PRN (, ,) ('' '')
        (S
          (NP (PRP he))
          (VP (VBD added)))
        (, ,) (`` ``))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBD wanted)
            (NP (NN something))))))
    (. .) ('' '')))

nsubj(look-3, You-2)
root(ROOT-0, look-3)
nsubj(added-7, he-6)
parataxis(look-3, added-7)
mark(wanted-12, if-10)
nsubj(wanted-12, you-11)
advcl(look-3, wanted-12)
dobj(wanted-12, something-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP want)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB teach)
              (NP (PRP me))
              (PRN (, ,)
                (INTJ (VB please))))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (. .)))

nsubj(want-3, I-2)
ccomp(answered-12, want-3)
dobj(want-3, you-4)
nsubj(teach-6, you-4)
aux(teach-6, to-5)
xcomp(want-3, teach-6)
dobj(teach-6, me-7)
discourse(teach-6, please-9)
root(ROOT-0, answered-12)
nsubj(answered-12, Willie-13)

(ROOT
  (S (`` ``)
    (NP (TO To))
    (VP (VB teach)
      (NP (PRP you))
      (NP (WP what)))
    (. ?) ('' '')))

nsubj(teach-3, To-2)
root(ROOT-0, teach-3)
iobj(teach-3, you-4)
dobj(teach-3, what-5)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Hector)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Hector-2)

(ROOT
  (SINV (`` ``)
    (S
      (VP (TO To)
        (VP (VB make)
          (NP (NNS shoes))
          (PRN (, ,)
            (INTJ (VB please))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (. .)))

aux(make-3, To-2)
dep(answered-9, make-3)
dobj(make-3, shoes-4)
discourse(make-3, please-6)
root(ROOT-0, answered-9)
nsubj(answered-9, Willie-10)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (S (CC but)
    (VBP do)
    (NP (PRP you))
    (VP (VB think)
      (SBAR (IN that)
        (S
          (VP (MD would)
            (VP (VB be)
              (ADJP (JJ prudent)
                (PP (IN of)
                  (NP (PRP me)))))))))
    (. ?)))

cc(think-4, but-1)
dep(think-4, do-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
mark(prudent-8, that-5)
aux(prudent-8, would-6)
cop(prudent-8, be-7)
ccomp(think-4, prudent-8)
prep_of(prudent-8, me-10)

(ROOT
  (S
    (S
      (S
        (VP (VB Do) (RB n't)))
      (NP (PRP you))
      (VP (VBP see)))
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB teach)
                  (S
                    (NP (PRP you))
                    (VP (TO to)
                      (VP (VB make)
                        (NP (NNS shoes)))))))))))
      (, ,)
      (NP (NNS people))
      (VP (MD would)
        (VP (VB be)
          (VP (VBG coming)
            (PP (TO to)
              (NP (PRP you)))
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP (PRP$ their) (NNS shoes))
                  (PP (IN for)
                    (NP (PRP them))))))))))
    (, ,)
    (CC and)
    (S
      (NP (WDT what))
      (VP (MD would)
        (VP (VB become)
          (PP (IN of)
            (NP (PRP me)))
          (ADVP (RB then)))))
    (. ?) ('' '')))

dep(see-4, Do-1)
neg(Do-1, n't-2)
nsubj(see-4, you-3)
root(ROOT-0, see-4)
mark(were-8, if-6)
nsubj(were-8, I-7)
nsubj(teach-10, I-7)
advcl(coming-19, were-8)
aux(teach-10, to-9)
xcomp(were-8, teach-10)
dobj(teach-10, you-11)
nsubj(make-13, you-11)
aux(make-13, to-12)
xcomp(teach-10, make-13)
dobj(make-13, shoes-14)
nsubj(coming-19, people-16)
nsubj(make-23, people-16)
aux(coming-19, would-17)
aux(coming-19, be-18)
ccomp(see-4, coming-19)
conj_and(see-4, coming-19)
prep_to(coming-19, you-21)
aux(make-23, to-22)
xcomp(coming-19, make-23)
poss(shoes-25, their-24)
dobj(make-23, shoes-25)
prep_for(make-23, them-27)
nsubj(become-32, what-30)
aux(become-32, would-31)
conj_and(see-4, become-32)
prep_of(become-32, me-34)
advmod(become-32, then-35)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (ADVP (RB only))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP
              (NP (NNS shoes))
              (PP (IN for)
                (NP
                  (NP (NNP Aggy) (POS 's))
                  (NN doll))))))))
    (. .)))

cc(want-5, But-2)
nsubj(want-5, I-3)
nsubj(make-7, I-3)
advmod(want-5, only-4)
root(ROOT-0, want-5)
aux(make-7, to-6)
xcomp(want-5, make-7)
dobj(make-7, shoes-8)
poss(doll-12, Aggy-10)
prep_for(shoes-8, doll-12)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (MD ought) (RB n't)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN without)
                (NP
                  (NP (NNS shoes))
                  (PP (IN in)
                    (NP (DT this) (NN weather))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .) ('' '')))

nsubj(ought-2, She-1)
nsubj(go-5, She-1)
ccomp(know-13, ought-2)
neg(ought-2, n't-3)
aux(go-5, to-4)
xcomp(ought-2, go-5)
prep_without(go-5, shoes-7)
det(weather-10, this-9)
prep_in(shoes-7, weather-10)
nsubj(know-13, you-12)
root(ROOT-0, know-13)

(ROOT
  (S (`` ``)
    (VP (VB Certainly) (RB not))
    (. .)))

root(ROOT-0, Certainly-2)
neg(Certainly-2, not-3)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD will)
          (VP (VB bring)
            (NP (PRP me))
            (NP (DT the) (NN doll))))))
    (NP (PRP I))
    (VP (MD will)
      (VP
        (VP (VB take)
          (NP (PRP$ her) (NN measure)))
        (CC and)
        (VP (VB make)
          (NP (PRP her)))
        (NP (DT a) (NN pair))))
    (. .) ('' '')))

advmod(take-12, Well-1)
mark(bring-6, if-3)
nsubj(bring-6, you-4)
aux(bring-6, will-5)
advcl(take-12, bring-6)
iobj(bring-6, me-7)
det(doll-9, the-8)
dobj(bring-6, doll-9)
nsubj(take-12, I-10)
nsubj(make-16, I-10)
aux(take-12, will-11)
root(ROOT-0, take-12)
poss(measure-14, her-13)
dobj(take-12, measure-14)
conj_and(take-12, make-16)
dobj(make-16, her-17)
det(pair-19, a-18)
dobj(take-12, pair-19)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (NN papa))
            (VP (MD could)
              (VP (VB afford)
                (S
                  (VP (TO to)
                    (VP (VB pay)
                      (PP
                        (PP (IN for)
                          (NP
                            (NP (NNS shoes))
                            (PP (IN for)
                              (NP (DT a) (NN doll)))))
                        (CONJP (RB as) (RB well) (IN as))
                        (PP (IN for)
                          (NP
                            (NP (DT all))
                            (PP (IN of)
                              (NP (PRP us)))))))))))))))
    (. .)))

cc(think-6, But-2)
nsubj(think-6, I-3)
aux(think-6, do-4)
neg(think-6, n't-5)
root(ROOT-0, think-6)
nsubj(afford-9, papa-7)
nsubj(pay-11, papa-7)
aux(afford-9, could-8)
ccomp(think-6, afford-9)
aux(pay-11, to-10)
xcomp(afford-9, pay-11)
prep_for(pay-11, shoes-13)
det(doll-16, a-15)
prep_for(shoes-13, doll-16)
prep_for(pay-11, all-21)
conj_and(shoes-13, all-21)
prep_of(all-21, us-23)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see) (, ,)
      (S
        (SBAR (IN though)
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (ADJP (JJR better))))))
        (, ,)
        (NP (PRP it))
        (VP (VBZ 's) (RB not)
          (ADJP (JJ necessary))
          (SBAR (IN that)
            (S
              (NP (DT a) (NN doll))
              (VP (MD should)
                (VP (VB have)
                  (NP (JJ strong) (NNS shoes)))))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
mark(better-8, though-4)
nsubj(better-8, it-5)
aux(better-8, would-6)
cop(better-8, be-7)
advcl(necessary-13, better-8)
nsubj(necessary-13, it-10)
cop(necessary-13, 's-11)
neg(necessary-13, not-12)
ccomp(see-2, necessary-13)
mark(have-18, that-14)
det(doll-16, a-15)
nsubj(have-18, doll-16)
aux(have-18, should-17)
ccomp(necessary-13, have-18)
amod(shoes-20, strong-19)
dobj(have-18, shoes-20)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBZ has)
        (S
          (NP (NNS shoes))
          (ADJP (JJ good) (NN enough)
            (PP (IN for)
              (ADVP (RB indoors)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBP need) (RB n't)
        (VP (VB walk)
          (PP (IN in)
            (NP (DT the) (JJ wet))))))
    (. .)))

nsubj(has-2, She-1)
root(ROOT-0, has-2)
nsubj(enough-5, shoes-3)
dep(enough-5, good-4)
xcomp(has-2, enough-5)
prep(enough-5, for-6)
pcomp(for-6, indoors-7)
nsubj(need-11, she-10)
conj_and(has-2, need-11)
neg(need-11, n't-12)
dep(need-11, walk-13)
det(wet-16, the-15)
prep_in(walk-13, wet-16)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP think)
      (ADVP (RB so))
      (NP (PRP yourself))
      (, ,)
      (ADVP (RB Hector)))
    (. ?) ('' '')))

nsubj(think-4, Do-1)
neg(think-4, n't-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
advmod(think-4, so-5)
dobj(think-4, yourself-6)
advmod(think-4, Hector-8)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (VP (VBD returned)
      (NP (NNP Hector))
      (, ,) (`` ``)
      (S
        (NP (PRP I))
        (VP (MD shall)
          (VP (VB be)
            (ADJP (JJ happy)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP (NNS Agnes))))))))))
    (NP
      (NP (DT a) (NN present))
      (PP (IN of)
        (NP
          (NP (DT a) (NN pair))
          (PP (IN of)
            (NP
              (NP (NNS shoes))
              (PP (IN for)
                (NP (PRP$ her) (NN doll))))))))
    (. .)))

cc(returned-5, But-2)
root(ROOT-0, returned-5)
dobj(returned-5, Hector-6)
nsubj(happy-12, I-9)
nsubj(make-14, I-9)
aux(happy-12, shall-10)
cop(happy-12, be-11)
dep(returned-5, happy-12)
aux(make-14, to-13)
xcomp(happy-12, make-14)
dobj(make-14, Agnes-15)
det(present-17, a-16)
dep(returned-5, present-17)
det(pair-20, a-19)
prep_of(present-17, pair-20)
prep_of(pair-20, shoes-22)
poss(doll-25, her-24)
prep_for(shoes-22, doll-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should) (RB n't)
      (VP (VB think)
        (PP (IN of)
          (S
            (VP (VBG charging)
              (NP (PRP$ your) (NN papa))
              (PP (IN for)
                (NP (DT that))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, should-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
prepc_of(think-4, charging-6)
poss(papa-8, your-7)
dobj(charging-6, papa-8)
prep_for(charging-6, that-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ is)
      (ADJP (RB far) (RB too) (JJ good)
        (SBAR
          (S
            (NP (DT a) (NN man))
            (VP (TO to)
              (VP (VB be)
                (VP (VBN made)
                  (S
                    (VP (TO to)
                      (VP (VB pay)
                        (PP (IN for)
                          (NP (NN everything)))))))))))))
    (. .) ('' '')))

nsubj(good-5, He-1)
cop(good-5, is-2)
advmod(good-5, far-3)
advmod(good-5, too-4)
root(ROOT-0, good-5)
det(man-7, a-6)
nsubjpass(made-10, man-7)
nsubj(pay-12, man-7)
aux(made-10, to-8)
auxpass(made-10, be-9)
ccomp(good-5, made-10)
aux(pay-12, to-11)
xcomp(made-10, pay-12)
prep_for(pay-12, everything-14)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD objected))
        (NP (NNP Willie))))
    (, ,) (`` ``)
    (S
      (VP (TO to)
        (VP (VB let)
          (S
            (NP (PRP you))
            (VP (VB make)
              (NP (PRP them))
              (PP (IN for)
                (NP (NN nothing))))))))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB as) (JJ bad)
          (SBAR (IN as)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP (NN papa) (NN pay))
                  (PP (IN for)
                    (NP (PRP them))))))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBP are) (RB not)
              (ADJP (JJ necessary)))))))
    (. .)))

cc(bad-19, But-2)
parataxis(bad-19, objected-5)
nsubj(objected-5, Willie-6)
aux(let-10, to-9)
csubj(bad-19, let-10)
nsubj(make-12, you-11)
ccomp(let-10, make-12)
dobj(make-12, them-13)
prep_for(make-12, nothing-15)
aux(bad-19, would-16)
cop(bad-19, be-17)
advmod(bad-19, as-18)
root(ROOT-0, bad-19)
mark(make-22, as-20)
aux(make-22, to-21)
dep(bad-19, make-22)
nn(pay-24, papa-23)
dobj(make-22, pay-24)
prep_for(make-22, them-26)
advmod(necessary-31, when-27)
nsubj(necessary-31, they-28)
cop(necessary-31, are-29)
neg(necessary-31, not-30)
advcl(bad-19, necessary-31)

(ROOT
  (S
    (INTJ (UH Please))
    (, ,)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB let)
        (S
          (NP (PRP me))
          (VP (VB make)
            (NP (PRP them))
            (PP (IN for)
              (NP (NNP Aggy)))))))
    (. .)))

discourse(let-5, Please-1)
nsubj(let-5, you-3)
aux(let-5, must-4)
root(ROOT-0, let-5)
nsubj(make-7, me-6)
ccomp(let-5, make-7)
dobj(make-7, them-8)
prep_for(make-7, Aggy-10)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (NP (PRP she))
    (VP (VBZ 's) (RB not)
      (ADJP (JJ old))
      (ADVP (RB enough)
        (CC yet)
        (RB even))
      (S
        (VP (TO to)
          (VP (VB say)
            (VP (VB thank)
              (NP (PRP you))
              (PP (IN for)
                (NP (PRP them))))))))
    (. .) ('' '')))

advmod(old-6, Besides-1)
nsubj(old-6, she-3)
nsubj(say-11, she-3)
cop(old-6, 's-4)
neg(old-6, not-5)
root(ROOT-0, old-6)
advmod(old-6, enough-7)
advmod(old-6, even-9)
conj_yet(enough-7, even-9)
aux(say-11, to-10)
xcomp(old-6, say-11)
xcomp(say-11, thank-12)
dobj(thank-12, you-13)
prep_for(thank-12, them-15)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP she))
      (VP (MD wo) (RB n't)
        (VP (VB be)
          (ADJP (JJ old) (RB enough)
            (S
              (VP (TO to)
                (VP (VB say)
                  (VP (VB thank)
                    (NP (PRP you))
                    (PP (TO to)
                      (NP (PRP you)))
                    (ADVP (RB either))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Hector))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S (, ,)
          (PP (RB all)
            (NP (DT this) (NN time)))
          (, ,)
          (VP
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBG losing)
                  (NP (DT no) (NN moment))
                  (PP (IN from)
                    (NP (PRP$ his) (NN work))))))
            (, ,)
            (CC but)
            (VP (VBD was)
              (VP (VBG stitching)
                (ADVP (RB away))
                (, ,)
                (PP (IN with)
                  (NP
                    (NP
                      (QP (DT a) (CD bore)))
                    (, ,)
                    (CC and)
                    (NP
                      (NP
                        (NP (DT a) (NN twiddle))
                        (, ,)
                        (CC and)
                        (NP (DT a) (NNS hiss))
                        (, ,))
                      (PP (IN at)
                        (NP
                          (NP (DT the) (NN sole))
                          (PP (IN of)
                            (NP (DT a) (JJ huge) (NN boot))))))))))))))
    (. .)))

advmod(old-7, Then-2)
nsubj(old-7, she-3)
nsubj(say-10, she-3)
aux(old-7, wo-4)
neg(old-7, n't-5)
cop(old-7, be-6)
ccomp(said-18, old-7)
advmod(old-7, enough-8)
aux(say-10, to-9)
xcomp(old-7, say-10)
xcomp(say-10, thank-11)
dobj(thank-11, you-12)
prep_to(thank-11, you-14)
advmod(thank-11, either-15)
root(ROOT-0, said-18)
nsubj(said-18, Hector-19)
nsubj(losing-29, Hector-19)
nsubj(stitching-38, Hector-19)
prep(losing-29, all-23)
det(time-25, this-24)
pobj(all-23, time-25)
aux(losing-29, had-27)
aux(losing-29, been-28)
rcmod(Hector-19, losing-29)
neg(moment-31, no-30)
dobj(losing-29, moment-31)
poss(work-34, his-33)
prep_from(losing-29, work-34)
aux(stitching-38, was-37)
rcmod(Hector-19, stitching-38)
conj_but(losing-29, stitching-38)
advmod(stitching-38, away-39)
quantmod(bore-43, a-42)
prep_with(stitching-38, bore-43)
det(twiddle-47, a-46)
prep_with(stitching-38, twiddle-47)
conj_and(bore-43, twiddle-47)
det(hiss-51, a-50)
conj_and(bore-43, hiss-51)
conj_and(twiddle-47, hiss-51)
det(sole-55, the-54)
prep_at(twiddle-47, sole-55)
det(boot-59, a-57)
amod(boot-59, huge-58)
prep_of(sole-55, boot-59)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (S
    (S (CC but)
      (NP (PRP you))
      (VP (VBP see)))
    (, ,)
    (NP (PRP she))
    (VP (VBZ 's)
      (NP (PRP$ my) (JJ own))
      (: --)
      (SBAR (IN so)
        (S
          (NP (PRP it))
          (VP (VBZ does) (RB n't)
            (VP (VB matter))))))
    (. !) ('' '')))

cc(see-3, but-1)
nsubj(see-3, you-2)
ccomp(own-8, see-3)
nsubj(own-8, she-5)
cop(own-8, 's-6)
poss(own-8, my-7)
root(ROOT-0, own-8)
mark(matter-14, so-10)
nsubj(matter-14, it-11)
aux(matter-14, does-12)
neg(matter-14, n't-13)
advcl(own-8, matter-14)
parataxis(own-8, matter-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD were)
          (VP (VBG writing)
            (NP
              (NP (DT a) (JJ big) (NN book))
              (, ,)
              (CONJP (RB instead) (IN of))
              (NP (DT a) (JJ little) (NN one)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN tempted)
          (S
            (VP (TO to)
              (VP (VB say)
                (NP (RB not) (RB only))
                (SBAR
                  (SBAR (IN that)
                    (S
                      (NP (DT this) (NN set))
                      (VP (VBZ Hector)
                        (NP (DT a) (NN thinking)))))
                  (, ,)
                  (CC but)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP it))
                      (VP (VBD made)
                        (SBAR
                          (S
                            (NP (PRP him))
                            (VP (VBP think)
                              (ADVP (RB as) (RB well)))))))))))))))
    (. .)))

mark(writing-4, If-1)
nsubj(writing-4, I-2)
aux(writing-4, were-3)
advcl(tempted-18, writing-4)
det(book-7, a-5)
amod(book-7, big-6)
dobj(writing-4, book-7)
det(one-13, a-11)
amod(one-13, little-12)
dobj(writing-4, one-13)
conj_negcc(book-7, one-13)
nsubjpass(tempted-18, I-15)
nsubj(say-20, I-15)
aux(tempted-18, should-16)
auxpass(tempted-18, be-17)
root(ROOT-0, tempted-18)
aux(say-20, to-19)
xcomp(tempted-18, say-20)
neg(only-22, not-21)
dobj(say-20, only-22)
mark(Hector-26, that-23)
det(set-25, this-24)
nsubj(Hector-26, set-25)
ccomp(say-20, Hector-26)
det(thinking-28, a-27)
dobj(Hector-26, thinking-28)
dobj(made-33, what-31)
nsubj(made-33, it-32)
ccomp(say-20, made-33)
conj_but(Hector-26, made-33)
nsubj(think-35, him-34)
ccomp(made-33, think-35)
advmod(well-37, as-36)
mwe(well-37, as-36)
advmod(think-35, well-37)

(ROOT
  (S
    (PP (RB Instead) (IN of)
      (S
        (VP (VBG replying))))
    (, ,)
    (S
      (ADVP (RB however))
      (, ,)
      (NP (PRP he))
      (VP
        (VP (VBD laid)
          (PRT (RP down))
          (NP (PRP$ his) (NN boot)))
        (, ,)
        (VP (VBD rose))))
    (, ,)
    (CC and)
    (S
      (S
        (ADVP (RB first))
        (VP (VBG taking)
          (PP (IN from)
            (NP (DT a) (NN shelf)))
          (NP
            (NP
              (NP (DT a) (JJ whole) (NN skin))
              (PP (IN of)
                (NP (NN calf-leather))))
            (, ,)
            (CC and)
            (NP
              (NP (JJ next) (DT a) (JJ low) (NN chair))
              (PP (IN from)
                (NP
                  (NP (DT a) (NN corner))
                  (PP (IN of)
                    (NP (DT the) (NN room)))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD set)
        (NP (DT the) (NN latter))
        (PP (IN near)
          (NP (PRP$ his) (JJ own) (NN seat)))
        (PP (IN opposite)
          (NP (DT the) (NN window)))))
    (. .)))

prepc_instead_of(laid-8, replying-3)
advmod(laid-8, however-5)
nsubj(laid-8, he-7)
root(ROOT-0, laid-8)
prt(laid-8, down-9)
poss(boot-11, his-10)
dobj(laid-8, boot-11)
dep(laid-8, rose-13)
advmod(taking-17, first-16)
vmod(set-40, taking-17)
det(shelf-20, a-19)
prep_from(taking-17, shelf-20)
det(skin-23, a-21)
amod(skin-23, whole-22)
dobj(taking-17, skin-23)
prep_of(skin-23, calf-leather-25)
amod(chair-31, next-28)
det(chair-31, a-29)
amod(chair-31, low-30)
dobj(taking-17, chair-31)
conj_and(skin-23, chair-31)
det(corner-34, a-33)
prep_from(chair-31, corner-34)
det(room-37, the-36)
prep_of(corner-34, room-37)
nsubj(set-40, he-39)
conj_and(laid-8, set-40)
det(latter-42, the-41)
dobj(set-40, latter-42)
poss(seat-46, his-44)
amod(seat-46, own-45)
prep_near(set-40, seat-46)
det(window-49, the-48)
prep_opposite(set-40, window-49)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Sit)
        (ADVP (RB down) (RB there))))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (NP (NNP Willie))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said)
      (S (: ;)
        (S
          (S
            (VP (VBG adding)))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBD handed)
                (NP (PRP him))
                (NP (DT the) (NN calf-skin)))))
          (, ,) (`` ``)
          (NP (EX There))
          (VP (VBZ 's)
            (NP (PRP$ your) (NN leather))))
        (, ,)
        (CC and)
        (S
          (NP (PRP$ my) (NNS tools))
          (VP (VBP are)
            (PP (IN at)
              (NP (PRP$ your) (NN service)))))))
    (. .)))

ccomp(said-12, Sit-2)
advmod(there-4, down-3)
advmod(Sit-2, there-4)
advmod(said-12, then-6)
nsubj(said-12, Willie-8)
nsubj(said-12, he-11)
root(ROOT-0, said-12)
dep('s-25, adding-14)
mark(handed-18, as-16)
nsubj(handed-18, he-17)
advcl('s-25, handed-18)
iobj(handed-18, him-19)
det(calf-skin-21, the-20)
dobj(handed-18, calf-skin-21)
expl('s-25, There-24)
dep(said-12, 's-25)
poss(leather-27, your-26)
nsubj('s-25, leather-27)
poss(tools-31, my-30)
nsubj(are-32, tools-31)
dep(said-12, are-32)
conj_and('s-25, are-32)
poss(service-35, your-34)
prep_at(are-32, service-35)

(ROOT
  (S
    (VP
      (VP (VB Make)
        (NP (PRP$ your) (NNS shoes)))
      (, ,)
      (CC and)
      (VP (VB welcome)))
    (. .)))

root(ROOT-0, Make-1)
poss(shoes-3, your-2)
dobj(Make-1, shoes-3)
conj_and(Make-1, welcome-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB be)
        (ADJP (JJ glad)
          (PP (IN of)
            (NP (PRP$ your) (NN company))))))
    (. .) ('' '')))

nsubj(glad-4, I-1)
aux(glad-4, shall-2)
cop(glad-4, be-3)
root(ROOT-0, glad-4)
poss(company-7, your-6)
prep_of(glad-4, company-7)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (VP
          (ADVP (RB thus))
          (VBN spoken))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD sat)
        (PRT (RP down))
        (ADVP (RB again)))
      (, ,)
      (VP (VBD caught)
        (PRT (RP up))
        (NP (PRP$ his) (NN boot) (NN hurriedly)))
      (, ,)
      (CC and)
      (VP (VBD began)
        (S
          (VP (VBG stitching)
            (ADVP
              (ADVP (RB away) (RB as))
              (SBAR (IN if)
                (FRAG
                  (PP (IN for)
                    (NP (JJ bare) (NN life))))))))))
    (. .)))

aux(spoken-3, Having-1)
advmod(spoken-3, thus-2)
vmod(sat-6, spoken-3)
nsubj(sat-6, he-5)
nsubj(caught-10, he-5)
nsubj(began-17, he-5)
root(ROOT-0, sat-6)
prt(sat-6, down-7)
advmod(sat-6, again-8)
conj_and(sat-6, caught-10)
prt(caught-10, up-11)
poss(hurriedly-14, his-12)
nn(hurriedly-14, boot-13)
dobj(caught-10, hurriedly-14)
conj_and(sat-6, began-17)
xcomp(began-17, stitching-18)
advmod(as-20, away-19)
advmod(stitching-18, as-20)
mark(for-22, if-21)
advcl(as-20, for-22)
amod(life-24, bare-23)
pobj(for-22, life-24)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD took)
      (NP (DT the) (NN calf-skin))
      (PP (IN on)
        (NP
          (NP (PRP$ his) (NN lap))
          (, ,)
          (ADJP (RB somewhat) (VBN bewildered)))))
    (. .)))

nsubj(took-2, Willie-1)
root(ROOT-0, took-2)
det(calf-skin-4, the-3)
dobj(took-2, calf-skin-4)
poss(lap-7, his-6)
prep_on(took-2, lap-7)
advmod(bewildered-10, somewhat-9)
amod(lap-7, bewildered-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN been)
            (VP (VBN asked)
              (S
                (VP (TO to)
                  (VP (VB cut)
                    (PRT (RP out))
                    (NP
                      (NP (DT a) (NN pair))
                      (PP (IN of)
                        (NP
                          (NP (JJ seven-leagued) (NNS boots))
                          (PP (IN for)
                            (NP (DT the) (NN ogre))))))))))))))
    (, ,)
    (NP (EX there))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN seemed)
          (PP (TO to)
            (NP
              (NP (PRP$ his) (NNS eyes) (NN enough))
              (PP (IN of)
                (NP
                  (NP (NN leather))
                  (PP (IN for)
                    (NP (PRP them)))))))
          (PP (IN in)
            (NP (DT that) (CD one) (NN skin))))))
    (. .)))

mark(asked-5, If-1)
nsubjpass(asked-5, he-2)
nsubj(cut-7, he-2)
aux(asked-5, had-3)
auxpass(asked-5, been-4)
advcl(seemed-21, asked-5)
aux(cut-7, to-6)
xcomp(asked-5, cut-7)
prt(cut-7, out-8)
det(pair-10, a-9)
dobj(cut-7, pair-10)
amod(boots-13, seven-leagued-12)
prep_of(pair-10, boots-13)
det(ogre-16, the-15)
prep_for(boots-13, ogre-16)
expl(seemed-21, there-18)
aux(seemed-21, would-19)
aux(seemed-21, have-20)
root(ROOT-0, seemed-21)
poss(enough-25, his-23)
nn(enough-25, eyes-24)
prep_to(seemed-21, enough-25)
prep_of(enough-25, leather-27)
prep_for(leather-27, them-29)
det(skin-33, that-31)
num(skin-33, one-32)
prep_in(seemed-21, skin-33)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB how))
    (SQ
      (ADVP (RB ever))
      (VP (VBD was)
        (SBAR
          (S
            (NP (PRP he))
            (VP (TO to)
              (VP (VB find)
                (NP
                  (NP (CD two) (NNS pieces))
                  (ADJP (JJ small) (JJ enough)))
                (PP (IN for)
                  (NP
                    (NP (NN doll) (POS 's))
                    (NNS shoes)))
                (PP (IN in)
                  (NP
                    (NP (PDT such) (DT an) (NN ocean))
                    (PP (IN of)
                      (NP (NN leather)))))))))))
    (. ?)))

cc(was-4, But-1)
advmod(was-4, how-2)
advmod(was-4, ever-3)
root(ROOT-0, was-4)
nsubj(find-7, he-5)
aux(find-7, to-6)
ccomp(was-4, find-7)
xcomp(was-4, find-7)
num(pieces-9, two-8)
dobj(find-7, pieces-9)
amod(enough-11, small-10)
amod(pieces-9, enough-11)
poss(shoes-15, doll-13)
prep_for(find-7, shoes-15)
predet(ocean-19, such-17)
det(ocean-19, an-18)
prep_in(find-7, ocean-19)
prep_of(ocean-19, leather-21)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB turn)
            (NP (PRP it))
            (ADVP (RB round)
              (CC and)
              (RB round)))))
      (, ,)
      (S
        (VP (VBG looking)
          (PP (IN at)
            (NP (PRP it)))
          (PP (DT all)
            (PP (IN along)
              (NP
                (NP (DT the) (NN edge))
                (, ,)
                (SBAR (IN while)
                  (S
                    (NP (NNP Hector))
                    (VP (VBD was)
                      (VP (VBG casting)
                        (S
                          (VP (VBG sidelong)
                            (NP (NNS glances))
                            (PP (IN at)
                              (NP (PRP him)))
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NN midst))
                                (PP (IN of)
                                  (NP (PRP$ his) (NNS busyness)))))))))))))
            (, ,)
            (PP (IN with)
              (NP
                (NP (DT a) (NN curiosity))
                (PP (IN on)
                  (NP (PRP$ his) (NN face)))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP$ his) (NN desire)
                      (S
                        (VP (TO to)
                          (VP (VB conceal)
                            (NP (PRP it))))))
                    (VP (VBD caused)
                      (S
                        (VP (TO to)
                          (VP (VB look)
                            (ADJP (JJ grim)
                              (PP (RB instead) (IN of)
                                (ADJP (VBN amused))))))))))))))))
    (. .)))

nsubj(began-2, He-1)
nsubj(turn-4, He-1)
root(ROOT-0, began-2)
aux(turn-4, to-3)
xcomp(began-2, turn-4)
dobj(turn-4, it-5)
advmod(turn-4, round-6)
advmod(turn-4, round-8)
conj_and(round-6, round-8)
xcomp(began-2, looking-10)
prep_at(looking-10, it-12)
dep(looking-10, all-13)
det(edge-16, the-15)
prep_along(looking-10, edge-16)
mark(casting-21, while-18)
nsubj(casting-21, Hector-19)
aux(casting-21, was-20)
rcmod(edge-16, casting-21)
vmod(casting-21, sidelong-22)
dobj(sidelong-22, glances-23)
prep_at(sidelong-22, him-25)
det(midst-28, the-27)
prep_in(sidelong-22, midst-28)
poss(busyness-31, his-30)
prep_of(midst-28, busyness-31)
det(curiosity-35, a-34)
prep_with(looking-10, curiosity-35)
dobj(caused-45, curiosity-35)
nsubj(look-47, curiosity-35)
poss(face-38, his-37)
prep_on(curiosity-35, face-38)
poss(desire-41, his-40)
nsubj(caused-45, desire-41)
aux(conceal-43, to-42)
vmod(desire-41, conceal-43)
dobj(conceal-43, it-44)
rcmod(curiosity-35, caused-45)
aux(look-47, to-46)
xcomp(caused-45, look-47)
acomp(look-47, grim-48)
prep_instead_of(grim-48, amused-51)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Willie))
        (, ,)
        (SBAR (IN although)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (ADVP (RB never))
              (VP
                (ADVP (RB yet))
                (VBN considered)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (NNS shoes))
                    (VP (VBP are)
                      (VP (VBN made)))))))))
        (, ,))
      (VP (VBD had)
        (VP (VBN seen)
          (PP (IN at)
            (NP (RB once)))
          (SBAR (IN that)
            (S
              (NP (NN nothing))
              (VP (MD could)
                (VP (VB be)
                  (VP (VBN done)
                    (SBAR (IN until)
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN got)
                            (NP
                              (NP (DT the) (NN command))
                              (PP (IN of)
                                (NP
                                  (NP (DT a) (JJ manageable) (NN bit))
                                  (PP (IN of)
                                    (NP (NN leather))))))))))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD found)
        (ADVP (RB too) (RB much))
        (PP
          (ADVP
            (NP (RB only) (DT a) (NN shade))
            (RBR better))
          (IN than)
          (NP (RB too) (RB little)))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD saw)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD would) (RB n't)
              (VP (VB be)
                (ADJP (JJ wise)
                  (S
                    (VP (TO to)
                      (VP (VB cut)
                        (NP (DT a) (NN piece))
                        (PRT (RP out))
                        (ADVP (RB anywhere))
                        (, ,)
                        (SBAR (IN for)
                          (S
                            (NP (DT that))
                            (VP (MD might)
                              (VP (VB spoil)
                                (SBAR
                                  (WHNP (WP what))
                                  (S
                                    (VP (MD would)
                                      (VP (VB serve)
                                        (PP (IN for)
                                          (NP
                                            (NP (DT a) (JJ large) (NN pair))
                                            (PP (IN of)
                                              (NP
                                                (NP (NNS shoes))
                                                (CC or)
                                                (NP (RB even) (NNS boots))))))))))))))))))))))))
    (. .)))

nsubj(seen-15, Willie-1)
mark(considered-8, although-3)
nsubj(considered-8, he-4)
aux(considered-8, had-5)
neg(considered-8, never-6)
advmod(considered-8, yet-7)
rcmod(Willie-1, considered-8)
advmod(made-12, how-9)
nsubjpass(made-12, shoes-10)
auxpass(made-12, are-11)
ccomp(considered-8, made-12)
aux(seen-15, had-14)
root(ROOT-0, seen-15)
prep(seen-15, at-16)
pobj(at-16, once-17)
mark(done-22, that-18)
nsubjpass(done-22, nothing-19)
aux(done-22, could-20)
auxpass(done-22, be-21)
ccomp(seen-15, done-22)
mark(got-26, until-23)
nsubj(got-26, he-24)
aux(got-26, had-25)
advcl(done-22, got-26)
det(command-28, the-27)
dobj(got-26, command-28)
det(bit-32, a-30)
amod(bit-32, manageable-31)
prep_of(command-28, bit-32)
prep_of(bit-32, leather-34)
nsubj(found-37, he-36)
conj_and(seen-15, found-37)
advmod(much-39, too-38)
advmod(found-37, much-39)
advmod(shade-42, only-40)
det(shade-42, a-41)
npadvmod(better-43, shade-42)
advmod(than-44, better-43)
prep(found-37, than-44)
advmod(little-46, too-45)
pobj(than-44, little-46)
nsubj(saw-50, he-49)
conj_and(seen-15, saw-50)
mark(wise-56, that-51)
nsubj(wise-56, it-52)
nsubj(cut-58, it-52)
aux(wise-56, would-53)
neg(wise-56, n't-54)
cop(wise-56, be-55)
ccomp(saw-50, wise-56)
aux(cut-58, to-57)
xcomp(wise-56, cut-58)
det(piece-60, a-59)
dobj(cut-58, piece-60)
prt(cut-58, out-61)
advmod(cut-58, anywhere-62)
mark(spoil-67, for-64)
nsubj(spoil-67, that-65)
aux(spoil-67, might-66)
advcl(cut-58, spoil-67)
nsubj(serve-70, what-68)
aux(serve-70, would-69)
ccomp(spoil-67, serve-70)
det(pair-74, a-72)
amod(pair-74, large-73)
prep_for(serve-70, pair-74)
prep_of(pair-74, shoes-76)
advmod(boots-79, even-78)
prep_of(pair-74, boots-79)
conj_or(shoes-76, boots-79)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (PRP he))
    (VP (VBD kept)
      (S
        (VP (VBG turning)
          (NP (DT the) (NN skin) (NN round))
          (SBAR (IN until)
            (S
              (NP (PRP he))
              (VP (VBD came)
                (PP (TO to)
                  (NP (DT a) (JJ small) (JJ projecting) (NN piece)))))))))
    (. .)))

advmod(kept-3, Therefore-1)
nsubj(kept-3, he-2)
root(ROOT-0, kept-3)
xcomp(kept-3, turning-4)
det(round-7, the-5)
nn(round-7, skin-6)
dobj(turning-4, round-7)
mark(came-10, until-8)
nsubj(came-10, he-9)
advcl(turning-4, came-10)
det(piece-15, a-12)
amod(piece-15, small-13)
amod(piece-15, projecting-14)
prep_to(came-10, piece-15)

(ROOT
  (S
    (NP (DT This) (PRP he))
    (VP (VBD contemplated)
      (PP (IN for)
        (NP (DT some) (NN time)))
      (, ,)
      (S
        (VP (VBG trying)
          (S
            (VP
              (VP (TO to)
                (VP (VB recall)
                  (NP
                    (NP (DT the) (NN size))
                    (PP (IN of)
                      (NP
                        (NP (NNP Dolly) (POS 's))
                        (NNS feet))))))
              (, ,)
              (CC and)
              (VP (TO to)
                (VP (VB make)
                  (PRT (RP up))
                  (NP (PRP$ his) (NN mind))
                  (SBAR (IN whether)
                    (S
                      (NP (PRP it))
                      (VP (MD would) (RB not)
                        (VP (VB be)
                          (ADJP (JJ large) (RB enough))
                          (PP (IN for)
                            (NP (CD one))))))
                    (CC or)
                    (RB even))))))
          (PP (IN for)
            (NP (DT both) (NNS shoes))))))
    (. .)))

det(he-2, This-1)
nsubj(contemplated-3, he-2)
root(ROOT-0, contemplated-3)
det(time-6, some-5)
prep_for(contemplated-3, time-6)
xcomp(contemplated-3, trying-8)
aux(recall-10, to-9)
ccomp(trying-8, recall-10)
det(size-12, the-11)
dobj(recall-10, size-12)
poss(feet-16, Dolly-14)
prep_of(size-12, feet-16)
aux(make-20, to-19)
ccomp(trying-8, make-20)
conj_and(recall-10, make-20)
prt(make-20, up-21)
poss(mind-23, his-22)
dobj(make-20, mind-23)
mark(large-29, whether-24)
nsubj(large-29, it-25)
aux(large-29, would-26)
neg(large-29, not-27)
cop(large-29, be-28)
ccomp(make-20, large-29)
advmod(large-29, enough-30)
prep_for(large-29, one-32)
ccomp(make-20, even-34)
advmod(large-29, even-34)
conj_or(large-29, even-34)
det(shoes-37, both-36)
prep_for(trying-8, shoes-37)

(ROOT
  (NP
    (NP
      (NP (DT A) (NN smile))
      (VP (VBN passed)
        (PP (IN over)
          (NP
            (NP (NNP Hector) (POS 's))
            (NN face)))))
    (: --)
    (NP
      (NP (DT a) (NN smile))
      (PP (IN of)
        (NP (NN satisfaction))))
    (. .)))

det(smile-2, A-1)
root(ROOT-0, smile-2)
vmod(smile-2, passed-3)
poss(face-7, Hector-5)
prep_over(passed-3, face-7)
det(smile-10, a-9)
dep(smile-2, smile-10)
prep_of(smile-10, satisfaction-12)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (NP (PRP it)))
    (. !) ('' '')))

nsubj(it-4, That-2)
cop(it-4, 's-3)
root(ROOT-0, it-4)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said)
      (PP (IN at)
        (NP (JJ last))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
prep_at(said-2, last-4)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD 'll)
            (VP (VB do))))))
    (. .)))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(do-6, you-4)
aux(do-6, 'll-5)
ccomp(think-3, do-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (DT the) (JJ first) (NN thing) (: --)
        (S
          (VP (TO to)
            (VP
              (VP (VB consider)
                (NP (PRP$ your) (NN stuff)))
              (, ,)
              (CC and)
              (VP (VB see)
                (SBAR
                  (WHADJP (WRB how) (JJ much))
                  (S
                    (NP (PRP you))
                    (VP (MD can)
                      (VP (VB make)
                        (PP (IN of)
                          (NP (PRP it)))))))))))))
    (. .)))

nsubj(thing-5, That-1)
cop(thing-5, 's-2)
det(thing-5, the-3)
amod(thing-5, first-4)
root(ROOT-0, thing-5)
aux(consider-8, to-7)
vmod(thing-5, consider-8)
poss(stuff-10, your-9)
dobj(consider-8, stuff-10)
vmod(thing-5, see-13)
conj_and(consider-8, see-13)
advmod(much-15, how-14)
dep(make-18, much-15)
nsubj(make-18, you-16)
aux(make-18, can-17)
ccomp(see-13, make-18)
prep_of(make-18, it-20)

(ROOT
  (S
    (NP (NNP Waste))
    (VP (VBZ is)
      (NP (DT a) (NN thing))
      (SBAR (IN that)
        (S
          (NP (DT no) (JJ good) (NN shoemaker))
          (ADVP (RB ever) (RB yet))
          (VP (MD could)
            (VP (VB endure))))))
    (. .)))

nsubj(thing-4, Waste-1)
cop(thing-4, is-2)
det(thing-4, a-3)
root(ROOT-0, thing-4)
mark(endure-12, that-5)
neg(shoemaker-8, no-6)
amod(shoemaker-8, good-7)
nsubj(endure-12, shoemaker-8)
advmod(yet-10, ever-9)
advmod(endure-12, yet-10)
aux(endure-12, could-11)
ccomp(thing-4, endure-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP
        (ADJP (JJ bad)
          (PP (IN in)
            (NP (PRP itself))))
        (, ,)
        (CC and)
        (ADJP (RB so) (JJ unworkmanlike))))
    (. !)))

nsubj(bad-3, It-1)
nsubj(unworkmanlike-9, It-1)
cop(bad-3, 's-2)
root(ROOT-0, bad-3)
prep_in(bad-3, itself-5)
advmod(unworkmanlike-9, so-8)
conj_and(bad-3, unworkmanlike-9)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP (NN corner))
          (VP (MD will)
            (VP (VB do))))))
    (. .)))

discourse(think-4, Yes-1)
nsubj(think-4, I-3)
root(ROOT-0, think-4)
mark(do-8, that-5)
nsubj(do-8, corner-6)
aux(do-8, will-7)
ccomp(think-4, do-8)

(ROOT
  (S
    (NP (NNP Shall) (NNP I))
    (VP (VBD cut)
      (NP (PRP it))
      (PRT (RP off))
      (PP (IN for)
        (NP (PRP you))))
    (. ?) ('' '')))

nn(I-2, Shall-1)
nsubj(cut-3, I-2)
root(ROOT-0, cut-3)
dobj(cut-3, it-4)
prt(cut-3, off-5)
prep_for(cut-3, you-7)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (VP (VB thank)
        (NP
          (NP (PRP you))
          (PRN (: --)
            (FRAG (RB not)
              (ADVP (RB yet)))))))
    (, ,)
    (VP (VBP please))
    (. .)))

discourse(thank-4, No-2)
ccomp(please-10, thank-4)
dobj(thank-4, you-5)
dep(you-5, not-7)
dep(not-7, yet-8)
root(ROOT-0, please-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD must)
            (VP (VB go)
              (CC and)
              (VB look)
              (PP (IN at)
                (NP (PRP$ her) (NNS feet)))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP I))
                  (VP (MD ca) (RB n't)
                    (VP (VB recollect)
                      (S
                        (NP (NNP _))
                        (ADJP (RB quite) (JJ _))
                        (SBAR
                          (WHADJP (WRB how) (JJ big))
                          (S
                            (NP (PRP they))
                            (VP (VBP are))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(go-5, I-3)
nsubj(look-7, I-3)
aux(go-5, must-4)
ccomp(think-2, go-5)
ccomp(think-2, look-7)
conj_and(go-5, look-7)
poss(feet-10, her-9)
prep_at(go-5, feet-10)
mark(recollect-16, for-12)
nsubj(recollect-16, I-13)
aux(recollect-16, ca-14)
neg(recollect-16, n't-15)
advcl(go-5, recollect-16)
nsubj(are-23, _-17)
advmod(_-19, quite-18)
dep(are-23, _-19)
advmod(big-21, how-20)
dep(are-23, big-21)
nsubj(are-23, they-22)
xcomp(recollect-16, are-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (ADVP (RB just))
      (VP (VB run)
        (NP (NN home)
          (CC and)
          (NN look))))
    (. .) ('' '')))

nsubj(run-4, I-1)
aux(run-4, 'll-2)
advmod(run-4, just-3)
root(ROOT-0, run-4)
dobj(run-4, home-5)
dobj(run-4, look-7)
conj_and(home-5, look-7)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD will)
                  (VP (VB be)
                    (ADJP (JJ able)
                      (S
                        (VP (TO to)
                          (VP
                            (VP (VB carry)
                              (NP (DT the) (JJ exact) (NN size))
                              (PP (IN in)
                                (NP (PRP$ your) (NN head))))
                            (, ,)
                            (CC and)
                            (VP (VB bring)
                              (NP (PRP it))
                              (PRT (RP back))
                              (PP (IN with)
                                (NP (PRP you))))))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(think-4, you-3)
ccomp(Do-2, think-4)
nsubj(able-8, you-5)
nsubj(carry-10, you-5)
nsubj(bring-19, you-5)
aux(able-8, will-6)
cop(able-8, be-7)
ccomp(think-4, able-8)
aux(carry-10, to-9)
xcomp(able-8, carry-10)
det(size-13, the-11)
amod(size-13, exact-12)
dobj(carry-10, size-13)
poss(head-16, your-15)
prep_in(carry-10, head-16)
xcomp(able-8, bring-19)
conj_and(carry-10, bring-19)
dobj(bring-19, it-20)
prt(bring-19, back-21)
prep_with(bring-19, you-23)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD shall)))))
    (. .) ('' '')))

discourse(think-5, Yes-2)
nsubj(think-5, I-4)
root(ROOT-0, think-5)
nsubj(shall-7, I-6)
ccomp(think-5, shall-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't))
    (. .)))

nsubj(do-3, I-2)
root(ROOT-0, do-3)
neg(do-3, n't-4)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (MD could)
      (VP (VB trust)
        (NP (PRP myself))
        (ADVP (RB so) (RB far))
        (SBAR (IN as)
          (FRAG
            (WHNP (WDT that))))
        (, ,)
        (ADVP (RB nearly))))
    (. .)))

nsubj(trust-4, I-1)
neg(trust-4, never-2)
aux(trust-4, could-3)
root(ROOT-0, trust-4)
dobj(trust-4, myself-5)
advmod(far-7, so-6)
advmod(trust-4, far-7)
mark(that-9, as-8)
advcl(trust-4, that-9)
advmod(trust-4, nearly-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD might)
      (VP (VB be)
        (ADJP
          (ADJP
            (ADJP (RB pretty) (JJ nigh)
              (NP (PRP it)))
            (NP (CD one) (NN way)))
          (CC and)
          (ADJP (RB all) (JJ wrong)))
        (NP
          (NP (DT another))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP you))
              (VP (VBP have)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB consider)
                        (NP (NN length)
                          (CC and)
                          (NN breadth)))
                      (CC and)
                      (VP (VB roundabout)))))))))))
    (. .)))

nsubj(nigh-5, You-1)
nsubj(wrong-11, You-1)
aux(nigh-5, might-2)
cop(nigh-5, be-3)
advmod(nigh-5, pretty-4)
root(ROOT-0, nigh-5)
dep(nigh-5, it-6)
num(way-8, one-7)
dep(nigh-5, way-8)
advmod(wrong-11, all-10)
conj_and(nigh-5, wrong-11)
dep(nigh-5, another-12)
mark(have-16, for-14)
nsubj(have-16, you-15)
nsubj(consider-18, you-15)
nsubj(roundabout-23, you-15)
rcmod(another-12, have-16)
aux(consider-18, to-17)
xcomp(have-16, consider-18)
dobj(consider-18, length-19)
dobj(consider-18, breadth-21)
conj_and(length-19, breadth-21)
xcomp(have-16, roundabout-23)
conj_and(consider-18, roundabout-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB tell)
        (NP (PRP you))
        (NP
          (NP (DT the) (JJS best) (NN way))
          (PP (IN for)
            (S
              (VP (VBG _)
                (S
                  (NP (PRP you))
                  (ADJP (JJ _)
                    (S
                      (VP (TO to)
                        (VP (VB do))))))))))))
    (. .)))

nsubj(tell-3, I-1)
aux(tell-3, will-2)
root(ROOT-0, tell-3)
iobj(tell-3, you-4)
det(way-7, the-5)
amod(way-7, best-6)
dobj(tell-3, way-7)
prepc_for(way-7, _-9)
nsubj(_-11, you-10)
nsubj(do-13, you-10)
xcomp(_-9, _-11)
aux(do-13, to-12)
xcomp(_-11, do-13)

(ROOT
  (S
    (VP
      (VP (VB Set)
        (NP (DT the) (NN doll) (NN standing))
        (PP (IN on)
          (NP
            (NP (DT a) (NN bit))
            (PP (IN of)
              (NP (NN paper))))))
      (, ,)
      (CC and)
      (VP (VB draw)
        (S
          (NP (DT a) (NN pencil))
          (RB all)
          (VP (VB round)
            (NP (PRP$ her) (NN foot))
            (PP (IN with)
              (NP
                (NP (DT the) (NN point) (NN close))
                (PP (TO to)
                  (NP (PRP it)))
                (PP (IN on)
                  (NP (DT the) (NN paper)))))))))
    (. .)))

root(ROOT-0, Set-1)
det(standing-4, the-2)
nn(standing-4, doll-3)
dobj(Set-1, standing-4)
det(bit-7, a-6)
prep_on(Set-1, bit-7)
prep_of(bit-7, paper-9)
conj_and(Set-1, draw-12)
det(pencil-14, a-13)
nsubj(round-16, pencil-14)
advmod(round-16, all-15)
ccomp(draw-12, round-16)
poss(foot-18, her-17)
dobj(round-16, foot-18)
det(close-22, the-20)
nn(close-22, point-21)
prep_with(round-16, close-22)
prep_to(close-22, it-24)
det(paper-27, the-26)
prep_on(close-22, paper-27)

(ROOT
  (S
    (NP (DT Both) (NNS feet))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJR better))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (NP (DT a) (NN mistake)
                  (S
                    (VP (TO to)
                      (VP (VB suppose)
                        (SBAR
                          (S
                            (NP (PRP they))
                            (VP (MD must)
                              (VP (VB be)
                                (PP (IN of)
                                  (NP (DT the) (JJ same) (NN size)))))))))))))))))
    (. .)))

det(feet-2, Both-1)
nsubj(better-5, feet-2)
aux(better-5, will-3)
cop(better-5, be-4)
root(ROOT-0, better-5)
mark(mistake-12, for-7)
nsubj(mistake-12, it-8)
aux(mistake-12, would-9)
cop(mistake-12, be-10)
det(mistake-12, a-11)
advcl(better-5, mistake-12)
aux(suppose-14, to-13)
vmod(mistake-12, suppose-14)
nsubj(be-17, they-15)
aux(be-17, must-16)
ccomp(suppose-14, be-17)
det(size-21, the-19)
amod(size-21, same-20)
prep_of(be-17, size-21)

(ROOT
  (S
    (NP (DT That))
    (VP (MD will)
      (VP (VB give)
        (NP (PRP you))
        (NP
          (NP (DT the) (NN size))
          (PP (IN of)
            (NP (DT the) (NN sole))))))
    (. .)))

nsubj(give-3, That-1)
aux(give-3, will-2)
root(ROOT-0, give-3)
iobj(give-3, you-4)
det(size-6, the-5)
dobj(give-3, size-6)
det(sole-9, the-8)
prep_of(size-6, sole-9)

(ROOT
  (S (RB Then)
    (VP
      (VP (VB take)
        (NP
          (NP (DT a) (NN strip))
          (PP (IN of)
            (NP (NN paper)))))
      (CC and)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB how) (RB long))
          (S
            (NP
              (NP (DT a) (NN piece))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ takes)
                    (S
                      (VP (TO to)
                        (VP (VB go))))))))
            (VP (VBP round)
              (NP
                (NP (DT the) (JJ thickest) (NN part))
                (PP (IN of)
                  (NP (DT the) (NN foot))))))))
      (, ,)
      (CC and)
      (VP (VB cut)
        (NP (PRP it))
        (PRT (RP off))
        (PP (TO to)
          (NP (DT that) (NN length)))))
    (. .)))

advmod(take-2, Then-1)
root(ROOT-0, take-2)
det(strip-4, a-3)
dobj(take-2, strip-4)
prep_of(strip-4, paper-6)
conj_and(take-2, see-8)
advmod(long-10, how-9)
advmod(round-17, long-10)
det(piece-12, a-11)
nsubj(round-17, piece-12)
nsubj(takes-14, it-13)
nsubj(go-16, it-13)
rcmod(piece-12, takes-14)
aux(go-16, to-15)
xcomp(takes-14, go-16)
ccomp(see-8, round-17)
det(part-20, the-18)
amod(part-20, thickest-19)
dobj(round-17, part-20)
det(foot-23, the-22)
prep_of(part-20, foot-23)
conj_and(take-2, cut-26)
dobj(cut-26, it-27)
prt(cut-26, off-28)
det(length-31, that-30)
prep_to(cut-26, length-31)

(ROOT
  (S
    (NP (DT That))
    (VP (MD will)
      (VP (VB be)
        (NP
          (NP (JJ sufficient) (NN measurement))
          (PP (IN for)
            (NP
              (NP (DT a) (NN doll) (POS 's))
              (NN shoe))))
        (, ,)
        (SBAR (IN for)
          (S
            (SBAR (RB even) (IN if)
              (S
                (NP (PRP it))
                (VP (MD should) (RB not)
                  (VP (VB fit)
                    (ADVP (RB exactly))))))
            (, ,)
            (NP (PRP she))
            (VP (MD wo) (RB n't)
              (VP (VB mind)
                (S
                  (VP (CC either)
                    (VP (VBG being)
                      (VP (VBN pinched)
                        (NP (DT a) (JJ little))))
                    (CC or)
                    (VP (VBG having)
                      (S
                        (VP (TO to)
                          (VP (VB walk)
                            (ADJP
                              (NP (DT a) (RB little))
                              (JJ loose))))))))))))))
    (. .) ('' '')))

nsubj(measurement-5, That-1)
aux(measurement-5, will-2)
cop(measurement-5, be-3)
amod(measurement-5, sufficient-4)
root(ROOT-0, measurement-5)
det(doll-8, a-7)
poss(shoe-10, doll-8)
prep_for(measurement-5, shoe-10)
mark(mind-24, for-12)
advmod(fit-18, even-13)
mark(fit-18, if-14)
nsubj(fit-18, it-15)
aux(fit-18, should-16)
neg(fit-18, not-17)
advcl(mind-24, fit-18)
advmod(fit-18, exactly-19)
nsubj(mind-24, she-21)
aux(mind-24, wo-22)
neg(mind-24, n't-23)
advcl(measurement-5, mind-24)
preconj(pinched-27, either-25)
auxpass(pinched-27, being-26)
ccomp(mind-24, pinched-27)
det(little-29, a-28)
dobj(pinched-27, little-29)
ccomp(mind-24, having-31)
conj_or(pinched-27, having-31)
aux(walk-33, to-32)
xcomp(having-31, walk-33)
det(little-35, a-34)
npadvmod(loose-36, little-35)
acomp(walk-33, loose-36)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP
        (VP (VBD got)
          (PRT (RP up))
          (PP (IN at)
            (NP (RB once)))
          (S
            (VP (TO to)
              (VP (VB go)))))
        (CC and)
        (VP (VBP do)
          (SBAR (IN as)
            (S
              (NP (NNP Hector))
              (VP (VBD had)
                (VP (VBN told)
                  (NP (PRP him)))))))))
    (: ;)
    (S (CC but)
      (S
        (NP (NNP Hector))
        (VP (VBD was) (RB not)
          (ADJP (JJ willing)
            (S
              (VP (TO to)
                (VP (VB part)
                  (PP (IN with)
                    (NP (PRP him)))))))))
      (IN so)
      (S
        (ADVP (RB soon))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP it))
            (VP (VBD was) (RB not)
              (ADVP (RB often)))))
        (NP (PRP he))
        (VP (VBD had)
          (NP (NN anybody)
            (S
              (VP (TO to)
                (VP (VB talk)
                  (PP (TO to)
                    (SBAR (IN while)
                      (S
                        (NP (PRP he))
                        (VP (VBD went)
                          (PRT (RP on))
                          (PP (IN with)
                            (NP (PRP$ his) (NN work))))))))))))))
    (. .)))

nsubj(got-2, Willie-1)
nsubj(go-7, Willie-1)
nsubj(do-9, Willie-1)
root(ROOT-0, got-2)
prt(got-2, up-3)
prep(got-2, at-4)
pobj(at-4, once-5)
aux(go-7, to-6)
xcomp(got-2, go-7)
conj_and(got-2, do-9)
mark(told-13, as-10)
nsubj(told-13, Hector-11)
aux(told-13, had-12)
advcl(do-9, told-13)
dobj(told-13, him-14)
cc(willing-20, but-16)
nsubj(willing-20, Hector-17)
nsubj(part-22, Hector-17)
cop(willing-20, was-18)
neg(willing-20, not-19)
parataxis(got-2, willing-20)
aux(part-22, to-21)
xcomp(willing-20, part-22)
prep_with(part-22, him-24)
dep(willing-20, so-25)
advmod(had-34, soon-26)
mark(was-30, for-28)
nsubj(was-30, it-29)
advcl(had-34, was-30)
neg(was-30, not-31)
advmod(was-30, often-32)
nsubj(had-34, he-33)
parataxis(willing-20, had-34)
dobj(had-34, anybody-35)
aux(talk-37, to-36)
vmod(anybody-35, talk-37)
mark(went-41, while-39)
nsubj(went-41, he-40)
prepc_to(talk-37, went-41)
prt(went-41, on-42)
poss(work-45, his-44)
prep_with(went-41, work-45)

(ROOT
  (S
    (VP (VB Therefore)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD said) (: --) (`` ``)
            (SBARQ (CC But)
              (SQ (VBP do) (RB n't)
                (NP (PRP you))
                (VP (VB think) (, ,)
                  (INTJ (UH Willie))
                  (, ,)
                  (SBAR (IN before)
                    (S
                      (NP (PRP you))
                      (VP (VBD set)
                        (PP (IN about)
                          (NP (PRP it)))
                        (, ,)
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBD had)
                              (ADVP (RBR better))
                              (VP (VB see)
                                (SBAR
                                  (WHADVP (WRB how))
                                  (S
                                    (NP (PRP I))
                                    (VP (VBP do)))))))))))))
              (. ?))))))))

root(ROOT-0, Therefore-1)
nsubj(said-3, he-2)
ccomp(Therefore-1, said-3)
cc(think-10, But-6)
aux(think-10, do-7)
neg(think-10, n't-8)
nsubj(think-10, you-9)
ccomp(said-3, think-10)
discourse(think-10, Willie-12)
mark(set-16, before-14)
nsubj(set-16, you-15)
advcl(think-10, set-16)
prep_about(set-16, it-18)
nsubj(see-23, you-20)
aux(see-23, had-21)
advmod(see-23, better-22)
ccomp(set-16, see-23)
advmod(do-26, how-24)
nsubj(do-26, I-25)
ccomp(see-23, do-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (NP (DT a) (NN pity)
          (S
            (VP (TO to)
              (VP (VB spend)
                (NP (PRP$ your) (NN labour))
                (PP (IN in)
                  (S
                    (VP (VBG finding)
                      (PRT (RP out))
                      (PP (IN for)
                        (NP (PRP yourself))))))
                (SBAR
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (NNS shoemakers))
                      (VP (VBP have)
                        (VP (VBN known)
                          (PP (IN for)
                            (NP
                              (NP (NNS hundreds))
                              (PP (IN of)
                                (NP (NNS years)))))))))
                  (, ,)
                  (CC and)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP (PRP you))
                      (VP (MD could)
                        (VP (VB learn)
                          (ADVP (RB so) (RB easily))
                          (PP (IN by)
                            (S
                              (VP (VBG letting)
                                (S
                                  (NP (PRP me))
                                  (VP (VB show)
                                    (NP (PRP you))))))))))))))))))
    (. .) ('' '')))

nsubj(pity-5, It-1)
aux(pity-5, would-2)
cop(pity-5, be-3)
det(pity-5, a-4)
root(ROOT-0, pity-5)
aux(spend-7, to-6)
vmod(pity-5, spend-7)
poss(labour-9, your-8)
dobj(spend-7, labour-9)
prepc_in(spend-7, finding-11)
prt(finding-11, out-12)
prep_for(finding-11, yourself-14)
dobj(known-18, what-15)
nsubj(known-18, shoemakers-16)
aux(known-18, have-17)
dep(spend-7, known-18)
prep_for(known-18, hundreds-20)
prep_of(hundreds-20, years-22)
dobj(learn-28, which-25)
nsubj(learn-28, you-26)
aux(learn-28, could-27)
dep(spend-7, learn-28)
conj_and(known-18, learn-28)
advmod(easily-30, so-29)
advmod(learn-28, easily-30)
prepc_by(learn-28, letting-32)
nsubj(show-34, me-33)
ccomp(letting-32, show-34)
dobj(show-34, you-35)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Thank)
        (NP (PRP you))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (, ,)
    (S
      (VP (VBG sitting)
        (ADVP (RB down) (RB again))))
    (. .)))

ccomp(said-6, Thank-2)
dobj(Thank-2, you-3)
root(ROOT-0, said-6)
nsubj(said-6, Willie-7)
vmod(said-6, sitting-9)
advmod(again-11, down-10)
advmod(sitting-9, again-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB like)
        (S
          (NP (DT that))
          (ADJP (RB very) (JJ much)))))
    (. .)))

nsubj(like-4, I-2)
aux(like-4, should-3)
root(ROOT-0, like-4)
nsubj(much-7, that-5)
advmod(much-7, very-6)
xcomp(like-4, much-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB sit)
        (CC and)
        (VB look)
        (PP (IN at)
          (NP (PRP you)))))
    (. .)))

nsubj(sit-3, I-1)
nsubj(look-5, I-1)
aux(sit-3, will-2)
root(ROOT-0, sit-3)
conj_and(sit-3, look-5)
prep_at(sit-3, you-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG doing))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
dobj(doing-6, what-3)
nsubj(doing-6, you-4)
aux(doing-6, are-5)
ccomp(know-2, doing-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (VP (VBG fastening)
        (PP (IN on)
          (NP
            (NP (DT the) (NN sole))
            (PP (IN of)
              (NP (DT a) (NN boot)))))))
    (. .) ('' '')))

nsubj(fastening-3, You-1)
aux(fastening-3, are-2)
root(ROOT-0, fastening-3)
det(sole-6, the-5)
prep_on(fastening-3, sole-6)
det(boot-9, a-8)
prep_of(sole-6, boot-9)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (S
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB see)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (VP (VBN done))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-1)
nsubj(see-3, you-2)
ccomp(Do-1, see-3)
advmod(done-7, how-4)
nsubjpass(done-7, it-5)
auxpass(done-7, 's-6)
ccomp(see-3, done-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ sure)))
    (. .)))

nsubj(sure-5, I-2)
cop(sure-5, 'm-3)
neg(sure-5, not-4)
root(ROOT-0, sure-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (ADVP (RB yet) (RB quite))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, do-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
advmod(quite-6, yet-5)
advmod(see-4, quite-6)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP I))
    (VP (VBP see)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG sewing)
              (NP (DT the) (NN one))
              (PP (TO to)
                (NP (DT the) (JJ other))))))))
    (. .)))

prep_of(see-4, course-2)
nsubj(see-4, I-3)
root(ROOT-0, see-4)
nsubj(sewing-7, you-5)
aux(sewing-7, are-6)
ccomp(see-4, sewing-7)
det(one-9, the-8)
dobj(sewing-7, one-9)
det(other-12, the-11)
prep_to(sewing-7, other-12)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBP 've)
          (ADVP (RB often))
          (VP (VBD wondered)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP you))
                (VP (MD could)
                  (VP (VB manage)
                    (PP (IN with)
                      (NP
                        (NP (JJ small) (NNS shoes))
                        (PP (IN like)
                          (NP (NN mine)))))
                    (S
                      (VP (TO to)
                        (VP (VB get)
                          (PP (IN in)
                            (NP (PRP$ your) (NN hand)
                              (S
                                (VP (TO to)
                                  (VP (VB pull)
                                    (NP (DT the) (NN needle))
                                    (PRT (RP through)))))))))))))))))
      (: ;)
      (CC but)
      (S
        (NP (PRP I))
        (VP (VBP see)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP do) (RB n't)
                (VP (VB use)
                  (NP (DT a) (NN needle)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP
        (VP (VBP see)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP are)
                (VP (VBG sewing)
                  (NP (PRP it))
                  (PP (DT all) (IN on)
                    (NP
                      (NP (DT the) (NN outside))
                      (PP (IN of)
                        (NP (DT the) (NN boot))))))))))
        (, ,)
        (CC and)
        (VP (VBP do) (RB n't)
          (VP (VB put)
            (NP (PRP$ your) (NN hand))
            (ADVP (RB inside) (IN at) (DT all))))))
    (. .)))

nsubj(wondered-4, I-1)
aux(wondered-4, 've-2)
advmod(wondered-4, often-3)
root(ROOT-0, wondered-4)
advmod(manage-8, how-5)
nsubj(manage-8, you-6)
nsubj(get-15, you-6)
aux(manage-8, could-7)
ccomp(wondered-4, manage-8)
amod(shoes-11, small-10)
prep_with(manage-8, shoes-11)
prep_like(shoes-11, mine-13)
aux(get-15, to-14)
xcomp(manage-8, get-15)
poss(hand-18, your-17)
prep_in(get-15, hand-18)
aux(pull-20, to-19)
vmod(hand-18, pull-20)
det(needle-22, the-21)
dobj(pull-20, needle-22)
prt(pull-20, through-23)
nsubj(see-27, I-26)
conj_but(wondered-4, see-27)
nsubj(use-31, you-28)
aux(use-31, do-29)
neg(use-31, n't-30)
ccomp(see-27, use-31)
det(needle-33, a-32)
dobj(use-31, needle-33)
nsubj(see-37, I-36)
nsubj(put-54, I-36)
conj_and(wondered-4, see-37)
mark(sewing-41, that-38)
nsubj(sewing-41, you-39)
aux(sewing-41, are-40)
ccomp(see-37, sewing-41)
dobj(sewing-41, it-42)
dep(sewing-41, all-43)
det(outside-46, the-45)
prep_on(sewing-41, outside-46)
det(boot-49, the-48)
prep_of(outside-46, boot-49)
aux(put-54, do-52)
neg(put-54, n't-53)
conj_and(wondered-4, put-54)
conj_and(see-37, put-54)
poss(hand-56, your-55)
dobj(put-54, hand-56)
advmod(at-58, inside-57)
advmod(put-54, at-58)
pobj(at-58, all-59)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB get)
        (S
          (VP (TO to)
            (VP (VB understand)
              (NP (PRP it)))))))
    (. .) ('' '')))

nsubj(get-4, I-1)
nsubj(understand-6, I-1)
aux(get-4, ca-2)
neg(get-4, n't-3)
root(ROOT-0, get-4)
aux(understand-6, to-5)
xcomp(get-4, understand-6)
dobj(understand-6, it-7)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD will)
      (PP (IN in)
        (NP (DT a) (NN minute))))
    (. .)))

nsubj(will-3, You-2)
root(ROOT-0, will-3)
det(minute-6, a-5)
prep_in(will-3, minute-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see)
      (SBAR
        (WHADVP (WRB how))
        (, ,)
        (S
          (NP (DT all))
          (VP (VBP round)
            (NP
              (NP (DT the) (NN edge))
              (PP (IN of)
                (NP (DT the) (JJ upper))))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP we))
                (VP (VBP call)
                  (NP (PRP it))))))))
      (PRN (, ,)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBN sewn)
              (PP (IN on)
                (NP (DT a) (JJ strong) (JJ narrow) (NN strip))))))
        (, ,))
      (SBAR (RB so) (IN that)
        (S
          (NP
            (NP (CD one) (NN edge))
            (PP (IN of)
              (NP (DT the) (NN strip))))
          (VP (VBZ sticks)
            (PRT (RP out))
            (ADVP (DT all) (RB round))
            (, ,)
            (SBAR (IN while)
              (S
                (NP (DT the) (JJ other))
                (VP (VBZ is)
                  (ADVP (RB inside)))))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
advmod(round-6, how-3)
nsubj(round-6, all-5)
ccomp(see-2, round-6)
det(edge-8, the-7)
dobj(round-6, edge-8)
det(upper-11, the-10)
prep_of(edge-8, upper-11)
mark(call-15, as-13)
nsubj(call-15, we-14)
advcl(round-6, call-15)
dobj(call-15, it-16)
nsubj(sewn-20, I-18)
aux(sewn-20, have-19)
parataxis(see-2, sewn-20)
det(strip-25, a-22)
amod(strip-25, strong-23)
amod(strip-25, narrow-24)
prep_on(sewn-20, strip-25)
advmod(sticks-34, so-27)
mark(sticks-34, that-28)
num(edge-30, one-29)
nsubj(sticks-34, edge-30)
det(strip-33, the-32)
prep_of(edge-30, strip-33)
advcl(see-2, sticks-34)
prt(sticks-34, out-35)
dep(round-37, all-36)
advmod(sticks-34, round-37)
mark(is-42, while-39)
det(other-41, the-40)
nsubj(is-42, other-41)
advcl(sticks-34, is-42)
advmod(is-42, inside-43)

(ROOT
  (S
    (PP (TO To)
      (NP
        (NP (DT the) (NN edge))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ sticks)
              (PRT (RP out))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP sew)
                    (PP (IN on)
                      (NP (DT the) (NN sole)))
                    (, ,)
                    (S
                      (VP (VBG drawing)
                        (S
                          (NP (PRP$ my) (NNS threads))
                          (ADJP (RB so) (JJ tight)))))
                    (SBAR (IN that)
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP I))
                        (VP (VBP pare)
                          (S
                            (NP (DT the) (NNS edges))
                            (ADJP (RB off) (JJ smooth))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP
        (VP (VB look)
          (PP (IN like)
            (NP (CD one) (NN piece))))
        (, ,)
        (CC and)
        (VP (VB puzzle)
          (NP
            (NP (NN anybody))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD did) (RB not)
                  (VP (VB know)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (PRP it))
                        (VP (VBD was)
                          (VP (VBN done)))))))))))))
    (. .) ('' '')))

det(edge-3, the-2)
nsubj(sticks-5, edge-3)
prep_to(look-29, edge-3)
rcmod(edge-3, sticks-5)
prt(sticks-5, out-6)
nsubj(sew-8, I-7)
ccomp(sticks-5, sew-8)
det(sole-11, the-10)
prep_on(sew-8, sole-11)
xcomp(sew-8, drawing-13)
poss(threads-15, my-14)
nsubj(tight-17, threads-15)
advmod(tight-17, so-16)
xcomp(drawing-13, tight-17)
mark(pare-21, that-18)
advmod(pare-21, when-19)
nsubj(pare-21, I-20)
ccomp(sew-8, pare-21)
det(edges-23, the-22)
nsubj(smooth-25, edges-23)
advmod(smooth-25, off-24)
xcomp(pare-21, smooth-25)
nsubj(look-29, it-27)
nsubj(puzzle-35, it-27)
aux(look-29, will-28)
root(ROOT-0, look-29)
num(piece-32, one-31)
prep_like(look-29, piece-32)
conj_and(look-29, puzzle-35)
dobj(puzzle-35, anybody-36)
nsubj(know-40, anybody-36)
aux(know-40, did-38)
neg(know-40, not-39)
rcmod(anybody-36, know-40)
advmod(done-44, how-41)
nsubjpass(done-44, it-42)
auxpass(done-44, was-43)
ccomp(know-40, done-44)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP understand)))))
    (. .)))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(understand-5, I-4)
ccomp(think-3, understand-5)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB how))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB get)
        (S
          (NP (PRP$ your) (NN thread))
          (ADJP
            (ADJP (RB so) (JJ sharp))
            (CC and)
            (ADJP (JJ stiff) (RB as)
              (S
                (VP (TO to)
                  (VP (VB go)
                    (PP (IN through)
                      (NP (DT the) (NNS holes))))))))))
      (S
        (NP (PRP you))
        (VP (VBP make))))
    (. ?)))

cc(get-5, But-1)
advmod(get-5, how-2)
aux(get-5, do-3)
nsubj(get-5, you-4)
root(ROOT-0, get-5)
poss(thread-7, your-6)
nsubj(sharp-9, thread-7)
nsubj(stiff-11, thread-7)
nsubj(go-14, thread-7)
advmod(sharp-9, so-8)
xcomp(get-5, sharp-9)
xcomp(get-5, stiff-11)
conj_and(sharp-9, stiff-11)
advmod(stiff-11, as-12)
aux(go-14, to-13)
xcomp(stiff-11, go-14)
det(holes-17, the-16)
prep_through(go-14, holes-17)
nsubj(make-19, you-18)
dep(get-5, make-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP find)
      (S
        (NP (PRP it))
        (ADJP (JJ hard))
        (S
          (ADJP
            (ADJP (RB enough) (RB sometimes)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (NP (DT a) (NN thread))))))
            (PP (IN through)
              (NP
                (NP (DT the) (NN eye))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN needle))
                    (: ;)
                    (SBAR (IN for)
                      (S
                        (SBAR (IN though)
                          (S
                            (NP (DT the) (NN thread))
                            (VP (VBZ is)
                              (ADVP (RB ever))
                              (ADJP (RB so) (RB much) (JJR smaller))
                              (PP (IN than)
                                (NP (NNP yours))))))
                        (, ,)
                        (NP (PRP I))
                        (VP (VBP have)
                          (S
                            (VP (TO to)
                              (VP (VB sharpen)
                                (CC and)
                                (VB sharpen)
                                (NP (PRP it))
                                (ADVP (RB often)))))
                          (SBAR (IN before)
                            (S
                              (NP (PRP I))
                              (VP (MD can)
                                (VP (VB get)
                                  (NP (PRP it))
                                  (PRT (RP through)))))))))))))))))
    (. .)))

nsubj(find-2, I-1)
root(ROOT-0, find-2)
nsubj(sometimes-6, it-3)
nsubj(get-8, it-3)
dep(sometimes-6, hard-4)
advmod(sometimes-6, enough-5)
xcomp(find-2, sometimes-6)
aux(get-8, to-7)
xcomp(sometimes-6, get-8)
det(thread-10, a-9)
dobj(get-8, thread-10)
det(eye-13, the-12)
prep_through(sometimes-6, eye-13)
det(needle-16, a-15)
prep_of(eye-13, needle-16)
mark(have-31, for-18)
mark(smaller-26, though-19)
det(thread-21, the-20)
nsubj(smaller-26, thread-21)
cop(smaller-26, is-22)
advmod(smaller-26, ever-23)
advmod(smaller-26, so-24)
advmod(smaller-26, much-25)
advcl(have-31, smaller-26)
prep_than(smaller-26, yours-28)
nsubj(have-31, I-30)
nsubj(sharpen-33, I-30)
nsubj(sharpen-35, I-30)
dep(needle-16, have-31)
aux(sharpen-33, to-32)
xcomp(have-31, sharpen-33)
xcomp(have-31, sharpen-35)
conj_and(sharpen-33, sharpen-35)
dobj(sharpen-33, it-36)
advmod(sharpen-33, often-37)
mark(get-41, before-38)
nsubj(get-41, I-39)
aux(get-41, can-40)
advcl(have-31, get-41)
dobj(get-41, it-42)
prt(get-41, through-43)

(ROOT
  (S (CC But)
    (NP
      (NP (NNP yours))
      (, ,)
      (SBAR (IN though)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (RB so) (JJ thick)))))
      (, ,))
    (VP (VBZ keeps)
      (ADJP (RB so) (JJ sharp)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ goes)
              (PP (IN through)
                (NP
                  (NP (DT the) (NNS holes))
                  (PP (IN at)
                    (NP (RB once)))))
              (: --)
              (NP
                (NP (CD two) (NNS threads))
                (PP (IN at)
                  (NP (RB once))))))))
      (: --)
      (NP
        (NP (CD one))
        (PP (IN from)
          (NP (DT each) (NN side)))))
    (. !) ('' '')))

cc(keeps-10, But-1)
nsubj(keeps-10, yours-2)
mark(thick-8, though-4)
nsubj(thick-8, it-5)
cop(thick-8, is-6)
advmod(thick-8, so-7)
dep(yours-2, thick-8)
root(ROOT-0, keeps-10)
advmod(sharp-12, so-11)
acomp(keeps-10, sharp-12)
mark(goes-15, that-13)
nsubj(goes-15, it-14)
ccomp(sharp-12, goes-15)
det(holes-18, the-17)
prep_through(goes-15, holes-18)
prep(holes-18, at-19)
pobj(at-19, once-20)
num(threads-23, two-22)
dobj(goes-15, threads-23)
parataxis(goes-15, threads-23)
prep(threads-23, at-24)
pobj(at-24, once-25)
dobj(keeps-10, one-27)
parataxis(keeps-10, one-27)
det(side-30, each-29)
prep_from(one-27, side-30)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (S
    (S (CC but)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB sharpen)
          (NP (PRP$ my) (NN thread)))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBD put)
        (NP (DT a) (NN point))
        (PP (IN upon)
          (NP (PRP it)))))
    (. .) ('' '')))

cc(sharpen-5, but-1)
nsubj(sharpen-5, I-2)
aux(sharpen-5, do-3)
neg(sharpen-5, n't-4)
root(ROOT-0, sharpen-5)
poss(thread-7, my-6)
dobj(sharpen-5, thread-7)
nsubj(put-10, I-9)
parataxis(sharpen-5, put-10)
det(point-12, a-11)
dobj(put-10, point-12)
prep_upon(put-10, it-14)

(ROOT
  (FRAG (`` ``)
    (ADJP (RB Does) (RB n't)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP mean)
            (NP (DT the) (JJ same) (NN thing))))))
    (. ?) ('' '')))

advmod(n't-3, Does-2)
root(ROOT-0, n't-3)
nsubj(mean-5, that-4)
ccomp(n't-3, mean-5)
det(thing-8, the-6)
amod(thing-8, same-7)
dobj(mean-5, thing-8)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP it))
    (VP (MD may)
      (ADVP (RB generally)))
    (: ;)
    (CC but)
    (ADVP (RB _))
    (S
      (NP (PRP I))
      (ADVP (RB _))
      (VP (VBP do) (RB n't)
        (VP (VB mean)
          (NP (DT the) (JJ same) (NN thing))
          (PP (IN by)
            (NP (PRP it))))))
    (. .)))

discourse(may-5, Well-2)
nsubj(may-5, it-4)
root(ROOT-0, may-5)
advmod(may-5, generally-6)
advmod(mean-14, _-9)
nsubj(mean-14, I-10)
advmod(mean-14, _-11)
aux(mean-14, do-12)
neg(mean-14, n't-13)
conj_but(may-5, mean-14)
det(thing-17, the-15)
amod(thing-17, same-16)
dobj(mean-14, thing-17)
prep_by(mean-14, it-19)

(ROOT
  (S
    (VP (VB Look)
      (ADVP (RB here)))
    (. .) ('' '')))

root(ROOT-0, Look-1)
advmod(Look-1, here-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP see))
    (. !) ('' '')))

nsubj(see-3, I-2)
root(ROOT-0, see-3)

(ROOT
  (NP
    (NP (NNP cried) (NNP Willie))
    (: ;) (`` ``)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ long) (NN bit))
          (PP (IN of)
            (NP (NN something) (RB else))))))
    (, ,)
    (NP (RB not) (NN thread))
    (, ,)
    (PP (IN upon)
      (NP (PRP it)))
    (. .)))

nn(Willie-2, cried-1)
root(ROOT-0, Willie-2)
expl(is-6, there-5)
dep(Willie-2, is-6)
det(bit-9, a-7)
amod(bit-9, long-8)
nsubj(is-6, bit-9)
prep_of(bit-9, something-11)
advmod(something-11, else-12)
neg(thread-15, not-14)
appos(Willie-2, thread-15)
prep_upon(Willie-2, it-18)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP (PRP it)))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, is-2)
nsubj(What-1, it-3)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ looks)
        (PP (IN like)
          (NP
            (NP (DT a) (NN hair))
            (, ,)
            (NP (RB only) (JJR thicker))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB so) (JJ sharp)
          (PP (IN at)
            (NP (DT the) (NN point))))))
    (. !) ('' '')))

nsubj(looks-2, It-1)
root(ROOT-0, looks-2)
det(hair-5, a-4)
prep_like(looks-2, hair-5)
advmod(thicker-8, only-7)
appos(hair-5, thicker-8)
nsubj(sharp-14, it-11)
cop(sharp-14, is-12)
advmod(sharp-14, so-13)
conj_and(looks-2, sharp-14)
det(point-17, the-16)
prep_at(sharp-14, point-17)

(ROOT
  (FRAG (`` ``)
    (ADJP
      (ADJP (JJ Ca))
      (SBAR (RB n't)
        (S
          (NP (PRP you))
          (VP (VBP guess)))))
    (. ?) ('' '')))

root(ROOT-0, Ca-2)
dep(guess-5, n't-3)
nsubj(guess-5, you-4)
ccomp(Ca-2, guess-5)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)))
    (. .) ('' '')))

dep(ca-5, No-2)
nsubj(ca-5, I-4)
root(ROOT-0, ca-5)
neg(ca-5, n't-6)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP I))
    (VP (MD will)
      (VP (VB tell)
        (NP (PRP you))))
    (. .)))

advmod(tell-5, Then-2)
nsubj(tell-5, I-3)
aux(tell-5, will-4)
root(ROOT-0, tell-5)
dobj(tell-5, you-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBG bristle) (RP out))
        (PP (IN of)
          (NP
            (NP (DT a) (NN hog) (POS 's))
            (NN back)))))
    (. .)))

nsubj(a-3, It-1)
cop(a-3, is-2)
root(ROOT-0, a-3)
amod(a-3, bristle-4)
det(hog-8, a-7)
poss(back-10, hog-8)
prep_out_of(a-3, back-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT a) (NN shoemaker))
            (VP (MD would)
              (VP (VB do)
                (PP (IN without)
                  (NP (PRP them)))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
dobj(do-9, what-5)
det(shoemaker-7, a-6)
nsubj(do-9, shoemaker-7)
aux(do-9, would-8)
ccomp(know-4, do-9)
prep_without(do-9, them-11)

(ROOT
  (S
    (S
      (VP (VB Look)))
    (, ,)
    (NP (RB here))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ little) (NN bunch))
        (PP (IN of)
          (NP (PRP them)))))
    (. .) ('' '')))

ccomp(bunch-7, Look-1)
nsubj(bunch-7, here-3)
cop(bunch-7, 's-4)
det(bunch-7, a-5)
amod(bunch-7, little-6)
root(ROOT-0, bunch-7)
prep_of(bunch-7, them-9)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (NP (DT a)
          (ADJP (RB very) (JJ clever))
          (NN use)
          (S
            (VP (TO to)
              (VP (VB put)
                (NP (PRP them))
                (PP (TO to))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(use-7, That-2)
cop(use-7, 's-3)
det(use-7, a-4)
advmod(clever-6, very-5)
amod(use-7, clever-6)
ccomp(said-14, use-7)
aux(put-9, to-8)
vmod(use-7, put-9)
dobj(put-9, them-10)
prep(put-9, to-11)
root(ROOT-0, said-14)
nsubj(said-14, Willie-15)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP
          (VP (VB go))
          (CC and)
          (VP (VB pluck)
            (NP (PRP them))
            (PRT (RP out))
            (PP (IN of)
              (NP (DT the) (NNS pigs)))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(go-4, you-3)
nsubj(pluck-6, you-3)
ccomp(Do-2, go-4)
ccomp(Do-2, pluck-6)
conj_and(go-4, pluck-6)
dobj(pluck-6, them-7)
det(pigs-11, the-10)
prep_out_of(pluck-6, pigs-11)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBP buy)
        (NP (PRP them))
        (PP (IN at)
          (NP (DT the) (NN shop)))))
    (. .)))

dep(buy-5, No-2)
nsubj(buy-5, we-4)
root(ROOT-0, buy-5)
dobj(buy-5, them-6)
det(shop-9, the-8)
prep_at(buy-5, shop-9)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP want)
      (ADJP (DT a) (JJ good) (JJ many))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP they))
          (VP (VBP wear)
            (PRT (RP out))))))
    (. .)))

nsubj(want-2, We-1)
root(ROOT-0, want-2)
det(many-5, a-3)
amod(many-5, good-4)
acomp(want-2, many-5)
mark(wear-9, for-7)
nsubj(wear-9, they-8)
advcl(want-2, wear-9)
prt(wear-9, out-10)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP get)
        (ADJP (RB too) (JJ soft))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN though)
        (S
          (NP (PRP they))
          (VP (VBP do) (RB n't)
            (VP (VB break)
              (ADVP (RB right) (RB off))))))
      (, ,)
      (NP (PRP they))
      (VP (VB double)
        (PRT (RP up))
        (PP (IN in)
          (NP (NNS places)))
        (, ,)
        (SBAR (RB so) (IN that)
          (S
            (NP (PRP they))
            (VP (MD wo) (RB n't)
              (VP (VB go)
                (PRT (RP through))))))))
    (. .) ('' '')))

nsubj(soft-4, They-1)
dep(soft-4, get-2)
advmod(soft-4, too-3)
root(ROOT-0, soft-4)
mark(break-11, though-7)
nsubj(break-11, they-8)
aux(break-11, do-9)
neg(break-11, n't-10)
advcl(double-16, break-11)
advmod(off-13, right-12)
advmod(break-11, off-13)
nsubj(double-16, they-15)
conj_and(soft-4, double-16)
prt(double-16, up-17)
prep_in(double-16, places-19)
advmod(go-26, so-21)
mark(go-26, that-22)
nsubj(go-26, they-23)
aux(go-26, wo-24)
neg(go-26, n't-25)
advcl(double-16, go-26)
prt(go-26, through-27)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB fasten)
        (NP (PRP them))
        (PP (TO to)
          (NP (DT the) (NN thread)))))
    (. ?) ('' '')))

advmod(fasten-5, How-2)
aux(fasten-5, do-3)
nsubj(fasten-5, you-4)
root(ROOT-0, fasten-5)
dobj(fasten-5, them-6)
det(thread-9, the-8)
prep_to(fasten-5, thread-9)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Look)
        (ADVP (RB here))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Hector))
    (. .)))

ccomp(said-6, Look-2)
advmod(Look-2, here-3)
root(ROOT-0, said-6)
nsubj(said-6, Hector-7)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD took)
        (S
          (NP
            (NP (JJ several) (NNS strands))
            (PP (IN of)
              (NP (NN thread))))
          (ADJP (RB together))))
      (, ,)
      (CC and)
      (VP (VBD drew)
        (NP (PRP them))
        (PP (IN through)
          (CC and)
          (IN through)
          (NP
            (NP (DT a) (NN piece))
            (PP (IN of)
              (NP
                (NP (NN cobbler) (POS 's))
                (NN wax))))))
      (, ,)
      (VP
        (ADVP (RB then))
        (VBD took)
        (NP (DT a) (NN bristle)))
      (CC and)
      (VP (VBP put)
        (NP (PRP it))
        (PRT (RP in))
        (PP (IN at)
          (NP (DT the) (NN end) (NN cunningly)))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT a) (NN way))
            (SBAR
              (S
                (NP (NNP Willie))
                (VP (MD could) (RB n't)
                  (ADVP (RB quite))
                  (VP (VB follow))))))))
      (: ;)
      (CC and)
      (VP
        (ADVP (RB then))
        (VBN rolled)
        (CC and)
        (VBN rolled)
        (UCP
          (ADJP (JJ threads))
          (CC and)
          (ADVP (DT all) (RB over)
            (CC and)
            (RB over))
          (PP (IN between)
            (NP
              (NP (PRP$ his) (NN hand))
              (CC and)
              (NP (PRP$ his) (NN leather) (NN apron)))))
        (, ,)
        (SBAR (IN till)
          (S
            (NP (PRP it))
            (VP (VBD seemed)
              (PP (IN like)
                (NP (DT a) (JJ single) (JJ dark-coloured) (NN cord))))))))
    (. .)))

nsubj(took-2, He-1)
nsubj(drew-10, He-1)
nsubj(took-23, He-1)
nsubj(put-27, He-1)
nsubj(rolled-46, He-1)
root(ROOT-0, took-2)
amod(strands-4, several-3)
nsubj(together-7, strands-4)
prep_of(strands-4, thread-6)
xcomp(took-2, together-7)
conj_and(took-2, drew-10)
dobj(drew-10, them-11)
det(piece-16, a-15)
prep_through(drew-10, piece-16)
poss(wax-20, cobbler-18)
prep_of(piece-16, wax-20)
advmod(took-23, then-22)
conj_and(took-2, took-23)
det(bristle-25, a-24)
dobj(took-23, bristle-25)
conj_and(took-2, put-27)
dobj(put-27, it-28)
prt(put-27, in-29)
det(cunningly-33, the-31)
nn(cunningly-33, end-32)
prep_at(put-27, cunningly-33)
det(way-37, a-36)
prep_in(put-27, way-37)
nsubj(follow-42, Willie-38)
aux(follow-42, could-39)
neg(follow-42, n't-40)
advmod(follow-42, quite-41)
rcmod(way-37, follow-42)
advmod(rolled-46, then-45)
conj_and(took-2, rolled-46)
conj_and(took-2, rolled-48)
conj_and(rolled-46, rolled-48)
acomp(rolled-46, threads-49)
dep(over-52, all-51)
acomp(rolled-46, over-52)
advmod(threads-49, over-52)
conj_and(threads-49, over-52)
advmod(threads-49, over-54)
conj_and(threads-49, over-54)
conj_and(over-52, over-54)
acomp(rolled-46, between-55)
conj_and(threads-49, between-55)
poss(hand-57, his-56)
prep_between(threads-49, hand-57)
poss(apron-61, his-59)
nn(apron-61, leather-60)
prep_between(threads-49, apron-61)
conj_and(hand-57, apron-61)
mark(seemed-65, till-63)
nsubj(seemed-65, it-64)
advcl(rolled-46, seemed-65)
det(cord-70, a-67)
amod(cord-70, single-68)
amod(cord-70, dark-coloured-69)
prep_like(seemed-65, cord-70)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP see)))
      (, ,))
    (VP (VBZ is)
      (NP (PRP$ my) (NN needle)
        (CC and)
        (NN thread))
      (PP (DT all) (IN in)
        (NP (CD one))))
    (. .) ('' '')))

expl(is-7, There-2)
nsubj(see-5, you-4)
parataxis(is-7, see-5)
root(ROOT-0, is-7)
poss(needle-9, my-8)
nsubj(is-7, needle-9)
nsubj(is-7, thread-11)
conj_and(needle-9, thread-11)
dep(is-7, all-12)
prep_in(is-7, one-14)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHNP (WP what))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN good))
        (PP (IN of)
          (S
            (VP (VBG rubbing)
              (NP (PRP it))
              (ADVP (RB so) (RB much))
              (PP (IN with)
                (NP
                  (NP (DT the) (NN cobbler) (POS 's))
                  (NN wax))))))))
    (. ?) ('' '')))

cc(what-3, And-2)
root(ROOT-0, what-3)
cop(what-3, is-4)
det(good-6, the-5)
nsubj(what-3, good-6)
prepc_of(good-6, rubbing-8)
dobj(rubbing-8, it-9)
advmod(much-11, so-10)
advmod(rubbing-8, much-11)
det(cobbler-14, the-13)
poss(wax-16, cobbler-14)
prep_with(rubbing-8, wax-16)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ several) (JJ good) (NNS reasons))
        (PP (IN for)
          (S
            (VP (VBG doing)
              (NP (DT that)))))))
    (. .)))

expl(are-3, There-2)
root(ROOT-0, are-3)
amod(reasons-6, several-4)
amod(reasons-6, good-5)
nsubj(are-3, reasons-6)
prepc_for(reasons-6, doing-8)
dobj(doing-8, that-9)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ first) (NN place)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ makes)
      (NP (PDT all) (DT the) (NNS threads))
      (PP (IN into)
        (NP (CD one)))
      (PP (IN by)
        (S
          (VP (VBG sticking)
            (NP (PRP them))
            (ADVP (RB together))))))
    (. .)))

det(place-4, the-2)
amod(place-4, first-3)
prep_in(makes-7, place-4)
nsubj(makes-7, it-6)
root(ROOT-0, makes-7)
predet(threads-10, all-8)
det(threads-10, the-9)
dobj(makes-7, threads-10)
prep_into(makes-7, one-12)
prepc_by(makes-7, sticking-14)
dobj(sticking-14, them-15)
advmod(sticking-14, together-16)

(ROOT
  (S
    (ADVP (RB Next))
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN worn)
          (PRT (RP out))
          (SBAR (IN before)
            (S
              (NP (PRP I))
              (VP (VBD had)
                (VP (VBN drawn)
                  (S
                    (NP (PRP it))
                    (ADJP (JJ many)))
                  (PP (CC times)
                    (PP (IN through)
                      (FRAG (CC but)
                        (PP (IN for)
                          (NP
                            (NP (DT the) (NN wax))
                            (, ,)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBZ keeps)
                                  (NP (DT the) (NN rubbing))
                                  (PP (IN from)
                                    (S
                                      (VP (VBG wearing)
                                        (NP (PRP it))))))))))))))))))))
    (. .)))

advmod(worn-5, Next-1)
nsubjpass(worn-5, it-2)
aux(worn-5, would-3)
auxpass(worn-5, be-4)
root(ROOT-0, worn-5)
prt(worn-5, out-6)
mark(drawn-10, before-7)
nsubj(drawn-10, I-8)
aux(drawn-10, had-9)
advcl(worn-5, drawn-10)
nsubj(many-12, it-11)
xcomp(drawn-10, many-12)
cc(through-14, times-13)
prep(drawn-10, through-14)
dep(through-14, but-15)
det(wax-18, the-17)
prep_for(but-15, wax-18)
nsubj(keeps-21, wax-18)
rcmod(wax-18, keeps-21)
det(rubbing-23, the-22)
dobj(keeps-21, rubbing-23)
prepc_from(keeps-21, wearing-25)
dobj(wearing-25, it-26)

(ROOT
  (S
    (NP (DT The) (NN wax))
    (ADVP (RB also))
    (VP
      (VP (VBZ protects)
        (NP (PRP it))
        (ADVP (RB afterwards)))
      (, ,)
      (CC and)
      (VP (VBZ keeps)
        (NP (DT the) (JJ wet))
        (PP (IN from)
          (S
            (VP (VBG rotting)
              (NP (PRP it)))))))
    (. .)))

det(wax-2, The-1)
nsubj(protects-4, wax-2)
nsubj(keeps-9, wax-2)
advmod(protects-4, also-3)
root(ROOT-0, protects-4)
dobj(protects-4, it-5)
advmod(protects-4, afterwards-6)
conj_and(protects-4, keeps-9)
det(wet-11, the-10)
dobj(keeps-9, wet-11)
prepc_from(keeps-9, rotting-13)
dobj(rotting-13, it-14)

(ROOT
  (S
    (S
      (NP (DT The) (JJ waxed) (NN thread))
      (VP (VBZ fills)
        (NP (DT the) (NN hole))
        (ADVP (RBR better) (RB too))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ is)
            (PP (IN of) (IN as)
              (NP
                (NP (JJ much) (NN consequence))
                (PP (IN as)
                  (NP (NN anything))))))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ sticks)
        (SBAR (RB so) (IN that)
          (S
            (NP (DT the) (JJ last) (NN stitch))
            (VP (VBZ does) (RB n't)
              (VP (VB slacken)
                (SBAR (IN before)
                  (S
                    (NP (DT the) (JJ next))
                    (VP
                      (VP (VBZ comes))
                      (, ,)
                      (CC but)
                      (VP (VBZ holds)
                        (ADJP (RB so) (JJ tight)
                          (SBAR (IN that) (, ,)
                            (S
                              (SBAR (IN although)
                                (S
                                  (NP (DT the) (NN leather))
                                  (VP (VBZ is)
                                    (ADJP (RB very) (JJ springy)))))
                              (, ,)
                              (NP (PRP it))
                              (VP (MD can) (RB not)
                                (VP (VB make)
                                  (S
                                    (NP (PRP it))
                                    (VP (VB slip))))))))))))))))))
    (. .)))

det(thread-3, The-1)
amod(thread-3, waxed-2)
nsubj(fills-4, thread-3)
root(ROOT-0, fills-4)
det(hole-6, the-5)
dobj(fills-4, hole-6)
advmod(too-8, better-7)
advmod(fills-4, too-8)
nsubj(is-12, what-11)
advcl(sticks-21, is-12)
amod(consequence-16, much-15)
prep_as_of(is-12, consequence-16)
prep_as(consequence-16, anything-18)
nsubj(sticks-21, it-20)
conj_and(fills-4, sticks-21)
advmod(slacken-29, so-22)
mark(slacken-29, that-23)
det(stitch-26, the-24)
amod(stitch-26, last-25)
nsubj(slacken-29, stitch-26)
aux(slacken-29, does-27)
neg(slacken-29, n't-28)
advcl(sticks-21, slacken-29)
mark(comes-33, before-30)
det(next-32, the-31)
nsubj(comes-33, next-32)
nsubj(holds-36, next-32)
advcl(slacken-29, comes-33)
advcl(slacken-29, holds-36)
conj_but(comes-33, holds-36)
advmod(tight-38, so-37)
acomp(holds-36, tight-38)
mark(make-51, that-39)
mark(springy-46, although-41)
det(leather-43, the-42)
nsubj(springy-46, leather-43)
cop(springy-46, is-44)
advmod(springy-46, very-45)
advcl(make-51, springy-46)
nsubj(make-51, it-48)
aux(make-51, can-49)
neg(make-51, not-50)
ccomp(tight-38, make-51)
nsubj(slip-53, it-52)
ccomp(make-51, slip-53)

(ROOT
  (S
    (NP (DT The) (CD two) (NNS pieces))
    (VP (VBP are)
      (ADVP (RB thus))
      (VP (VBN got)
        (ADVP
          (ADVP (RB so) (RB close) (RB together))
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBP are)
                (PP (IN like)
                  (NP (CD one) (NN piece)))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP you))
                    (VP (MD will)
                      (VP (VB see)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP I))
                            (VP (VBP pare)
                              (NP (DT the) (JJ joined) (NNS edges)))))))))))))))
    (. .) ('' '')))

det(pieces-3, The-1)
num(pieces-3, two-2)
nsubjpass(got-6, pieces-3)
auxpass(got-6, are-4)
advmod(got-6, thus-5)
root(ROOT-0, got-6)
advmod(together-9, so-7)
advmod(together-9, close-8)
advmod(got-6, together-9)
mark(are-12, that-10)
nsubj(are-12, they-11)
advcl(together-9, are-12)
ccomp(together-9, are-12)
num(piece-15, one-14)
prep_like(are-12, piece-15)
mark(see-20, as-17)
nsubj(see-20, you-18)
aux(see-20, will-19)
advcl(are-12, see-20)
advmod(pare-23, when-21)
nsubj(pare-23, I-22)
advcl(see-20, pare-23)
det(edges-26, the-24)
amod(edges-26, joined-25)
dobj(pare-23, edges-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should)
      (VP (VB tire)
        (NP
          (NP
            (NP (PRP$ my) (NN reader))
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBD were)
                  (S
                    (VP (TO to)
                      (VP (VB recount)
                        (NP
                          (NP (PDT all) (DT the) (JJ professional) (NN talk))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD followed))))
                          (: ;)
                          (PP (IN for)
                            (SBAR (IN although)
                              (S
                                (NP (NNP Willie))
                                (VP
                                  (VP (VBD found)
                                    (S
                                      (NP (PRP it))
                                      (ADJP (RBS most) (JJ interesting))))
                                  (, ,)
                                  (CC and)
                                  (VP (VBD began)
                                    (S
                                      (VP (TO to)
                                        (VP (VB feel)
                                          (SBAR (IN as)
                                            (S
                                              (SBAR (IN if)
                                                (S
                                                  (NP (PRP he))
                                                  (VP (MD should)
                                                    (ADVP (RB soon))
                                                    (VP (VB be)
                                                      (ADJP (JJ able)
                                                        (S
                                                          (VP (TO to)
                                                            (VP (VB make)
                                                              (NP (DT a) (NN shoe))
                                                              (NP (PRP himself))))))))))
                                              (, ,)
                                              (NP (PRP it))
                                              (VP (VBZ is)
                                                (NP
                                                  (NP (DT a)
                                                    (ADJP (RB very) (JJ different))
                                                    (NN thing))
                                                  (ADVP (RB merely))
                                                  (S
                                                    (VP (TO to)
                                                      (VP (VB read)
                                                        (PP (IN about)
                                                          (NP (PRP it))))))))))))))))))))))))))
          (: --)
          (NP
            (NP
              (NP (DT the) (NN man) (POS 's))
              (NN voice))
            (PP (RB not) (IN in)
              (NP (PRP$ your) (NNS ears))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NN work))
            (VP (RB not) (VBG going)
              (PP (IN on)
                (PP (IN before)
                  (NP (PRP$ your) (NNS eyes)))))))))
    (. .)))

nsubj(tire-3, I-1)
aux(tire-3, should-2)
root(ROOT-0, tire-3)
poss(reader-5, my-4)
dobj(tire-3, reader-5)
mark(were-8, if-6)
nsubj(were-8, I-7)
nsubj(recount-10, I-7)
dep(reader-5, were-8)
aux(recount-10, to-9)
xcomp(were-8, recount-10)
predet(talk-14, all-11)
det(talk-14, the-12)
amod(talk-14, professional-13)
dobj(recount-10, talk-14)
nsubj(followed-16, talk-14)
rcmod(talk-14, followed-16)
mark(found-21, although-19)
nsubj(found-21, Willie-20)
nsubj(began-27, Willie-20)
nsubj(feel-29, Willie-20)
prepc_for(talk-14, found-21)
nsubj(interesting-24, it-22)
advmod(interesting-24, most-23)
xcomp(found-21, interesting-24)
prepc_for(talk-14, began-27)
conj_and(found-21, began-27)
aux(feel-29, to-28)
xcomp(began-27, feel-29)
mark(thing-48, as-30)
mark(able-36, if-31)
nsubj(able-36, he-32)
nsubj(make-38, he-32)
aux(able-36, should-33)
advmod(able-36, soon-34)
cop(able-36, be-35)
advcl(thing-48, able-36)
aux(make-38, to-37)
xcomp(able-36, make-38)
det(shoe-40, a-39)
iobj(make-38, shoe-40)
dobj(make-38, himself-41)
nsubj(thing-48, it-43)
cop(thing-48, is-44)
det(thing-48, a-45)
advmod(different-47, very-46)
amod(thing-48, different-47)
advcl(feel-29, thing-48)
advmod(thing-48, merely-49)
aux(read-51, to-50)
vmod(thing-48, read-51)
prep_about(read-51, it-53)
det(man-56, the-55)
poss(voice-58, man-56)
dobj(tire-3, voice-58)
conj_and(reader-5, voice-58)
neg(voice-58, not-59)
poss(ears-62, your-61)
prep_in(voice-58, ears-62)
det(work-66, the-65)
dobj(tire-3, work-66)
conj_and(reader-5, work-66)
neg(going-68, not-67)
vmod(work-66, going-68)
prep(going-68, on-69)
pcomp(on-69, before-70)
poss(eyes-72, your-71)
pobj(before-70, eyes-72)

(ROOT
  (S
    (S
      (S (CC But)
        (NP (DT the) (NN shoemaker))
        (VP (VBD cared)
          (PP (IN for)
            (NP
              (NP (JJ other) (NNS things))
              (PP (IN besides)
                (NP (VBG shoemaking)))))))
      (, ,)
      (CC and)
      (S
        (PP (IN after)
          (NP (DT a) (NN while)))
        (NP (PRP he))
        (VP (VBD happened)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP
                  (NP (DT a) (NN remark))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD led)
                        (PP (TO to)
                          (NP (DT the) (JJ following) (NN question)))
                        (PP (IN from)
                          (NP (NNP Willie))))
                      (: :))))))))))
    (: --) (`` ``)
    (SQ (VBP Do)
      (NP (PRP you))
      (VP (VB understand)
        (FRAG
          (ADVP (RB astronomy))
          (, ,)
          (NP (NNP Hector))
          (. ?) ('' ''))))))

det(shoemaker-3, the-2)
nsubj(cared-4, shoemaker-3)
root(ROOT-0, cared-4)
amod(things-7, other-6)
prep_for(cared-4, things-7)
prep_besides(things-7, shoemaking-9)
det(while-14, a-13)
prep_after(happened-16, while-14)
nsubj(happened-16, he-15)
nsubj(make-18, he-15)
conj_and(cared-4, happened-16)
aux(make-18, to-17)
xcomp(happened-16, make-18)
det(remark-20, a-19)
dobj(make-18, remark-20)
nsubj(led-22, remark-20)
rcmod(remark-20, led-22)
det(question-26, the-24)
amod(question-26, following-25)
prep_to(led-22, question-26)
prep_from(led-22, Willie-28)
aux(understand-34, Do-32)
nsubj(understand-34, you-33)
dep(cared-4, understand-34)
dep(Hector-37, astronomy-35)
dep(understand-34, Hector-37)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's) (RB not)
        (NP (PRP$ my) (NN business))))
    (, ,)
    (NP (PRP you))
    (VP (VBP see) (, ,)
      (S
        (VP (VBG Willie))))
    (. .) ('' '')))

nsubj(business-5, It-1)
cop(business-5, 's-2)
neg(business-5, not-3)
poss(business-5, my-4)
ccomp(see-8, business-5)
nsubj(see-8, you-7)
root(ROOT-0, see-8)
xcomp(see-8, Willie-10)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (VBP 've)
      (ADVP (RB just))
      (VP (VBN been)
        (VP (VBG telling)
          (S
            (NP (PRP me))
            (ADJP (RB so) (JJ much)
              (PP (IN about)
                (NP
                  (NP (DT the) (NN moon))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (DT the) (NN way))
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP (VBZ keeps)
                          (S
                            (VP (VBG turning)
                              (NP (PRP$ her) (NN face))
                              (ADVP (RB always))
                              (PP (TO to)
                                (NP (PRP us)))))))))
                  (: --)))))
          (PP (IN in)
            (NP
              (NP (DT the) (JJ politest) (NN manner))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (PRP you))
                  (VP (VBD said)))))))))
    (. !) ('' '')))

cc(telling-7, But-2)
nsubj(telling-7, you-3)
aux(telling-7, 've-4)
advmod(telling-7, just-5)
aux(telling-7, been-6)
root(ROOT-0, telling-7)
nsubj(much-10, me-8)
advmod(much-10, so-9)
xcomp(telling-7, much-10)
det(moon-13, the-12)
prep_about(much-10, moon-13)
det(way-17, the-16)
prep_about(much-10, way-17)
conj_and(moon-13, way-17)
nsubj(keeps-19, she-18)
rcmod(way-17, keeps-19)
xcomp(keeps-19, turning-20)
poss(face-22, her-21)
dobj(turning-20, face-22)
advmod(turning-20, always-23)
prep_to(turning-20, us-25)
det(manner-30, the-28)
amod(manner-30, politest-29)
prep_in(telling-7, manner-30)
mark(said-34, as-32)
nsubj(said-34, you-33)
rcmod(manner-30, said-34)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD got)
      (NP (PRP it))
      (ADVP (DT all) (IN out))
      (PP (IN of)
        (NP
          (NP (NNP Mr) (NNP Dick) (POS 's))
          (NN book))))
    (. .)))

nsubj(got-3, I-2)
root(ROOT-0, got-3)
dobj(got-3, it-4)
dep(got-3, all-5)
nn(Dick-9, Mr-8)
poss(book-11, Dick-9)
prep_out_of(got-3, book-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB understand)
        (NP (PRP it))))
    (. .)))

nsubj(understand-4, I-1)
aux(understand-4, do-2)
neg(understand-4, n't-3)
root(ROOT-0, understand-4)
dobj(understand-4, it-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP she))
            (VP (VBZ does)
              (ADVP (RB so)))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
advmod(does-7, why-5)
nsubj(does-7, she-6)
ccomp(know-4, does-7)
advmod(does-7, so-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP
          (NP (DT a) (JJ few) (NNS things))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP are) (RB not)
                (NP (PRP$ my) (NN business))
                (, ,)
                (SBAR (RB just) (IN as)
                  (S
                    (NP (PRP you))
                    (VP (VBP know)
                      (NP
                        (NP (DT a) (JJ little)
                          (QP (RB about) (CD shoemaking)))
                        (, ,)
                        (SBAR
                          (WHNP (WDT that))
                          (S (RB not)
                            (VP (VBG being)
                              (NP (PRP$ your) (NN business)))))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB understand)
          (NP (PRP them))
          (PP (IN for)
            (NP (PDT all) (DT that))))))
    (. .) ('' '')))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
det(things-5, a-3)
amod(things-5, few-4)
dobj(know-2, things-5)
nsubj(business-10, things-5)
cop(business-10, are-7)
neg(business-10, not-8)
poss(business-10, my-9)
rcmod(things-5, business-10)
advmod(know-15, just-12)
mark(know-15, as-13)
nsubj(know-15, you-14)
advcl(business-10, know-15)
det(shoemaking-19, a-16)
amod(shoemaking-19, little-17)
quantmod(shoemaking-19, about-18)
dobj(know-15, shoemaking-19)
nsubj(business-25, shoemaking-19)
neg(business-25, not-22)
cop(business-25, being-23)
poss(business-25, your-24)
rcmod(shoemaking-19, business-25)
nsubj(understand-31, I-28)
aux(understand-31, do-29)
neg(understand-31, n't-30)
conj_but(know-2, understand-31)
dobj(understand-31, them-32)
predet(that-35, all-34)
prep_for(understand-31, that-35)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP$ Whose) (NN business))
    (SQ (VBZ is)
      (NP (NN astronomy))
      (ADVP (RB then)))
    (. ?) ('' '')))

poss(business-3, Whose-2)
dep(is-4, business-3)
root(ROOT-0, is-4)
nsubj(is-4, astronomy-5)
advmod(is-4, then-6)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Well)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP
      (NP (NNP Hector))
      (, ,)
      (NP (DT a) (JJ little) (NN puzzled)))
    (, ,) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP it))
              (VP (MD can)
                (ADVP (RB well))
                (VP (VB be)
                  (NP
                    (NP
                      (NP (NN anybody) (POS 's))
                      (NN business))
                    (PP (IN but)
                      (NP (NNP God) (POS 's))))
                  (, ,)
                  (SBAR (IN for)
                    (S
                      (NP (PRP I))
                      (VP (VBP 'm)
                        (ADJP (JJ sure)
                          (SBAR
                            (S
                              (NP (DT no) (NN one) (RB else))
                              (VP (MD can)
                                (VP (VB lay)
                                  (NP (DT a) (NN hand))
                                  (PP (TO to)
                                    (NP (PRP it))))))))))))))))))
    (. .) ('' '')))

dep(answered-5, Well-2)
root(ROOT-0, answered-5)
nsubj(answered-5, Hector-6)
det(puzzled-10, a-8)
amod(puzzled-10, little-9)
appos(Hector-6, puzzled-10)
nsubj(see-16, I-13)
aux(see-16, do-14)
neg(see-16, n't-15)
ccomp(answered-5, see-16)
advmod(business-24, how-17)
nsubj(business-24, it-18)
aux(business-24, can-19)
advmod(business-24, well-20)
cop(business-24, be-21)
poss(business-24, anybody-22)
ccomp(see-16, business-24)
prep_but(business-24, God-26)
possessive(God-26, 's-27)
mark(sure-32, for-29)
nsubj(sure-32, I-30)
cop(sure-32, 'm-31)
advcl(business-24, sure-32)
neg(one-34, no-33)
nsubj(lay-37, one-34)
advmod(one-34, else-35)
aux(lay-37, can-36)
ccomp(sure-32, lay-37)
det(hand-39, a-38)
dobj(lay-37, hand-39)
prep_to(lay-37, it-41)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHNP (WP what))
    (SQ (VBZ 's)
      (NP
        (NP (PRP$ your) (NN business))
        (, ,)
        (NP (NNP Hector))))
    (. ?) ('' '')))

cc(what-3, And-2)
root(ROOT-0, what-3)
cop(what-3, 's-4)
poss(business-6, your-5)
nsubj(what-3, business-6)
appos(business-6, Hector-8)

(ROOT
  (S
    (VP (VBN asked)
      (NP (NNP Willie))
      (, ,)
      (PP (IN in)
        (NP (DT a) (JJ half-absent) (NN mood))))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Willie-2)
det(mood-7, a-5)
amod(mood-7, half-absent-6)
prep_in(asked-1, mood-7)

(ROOT
  (S
    (S
      (NP (DT Some) (NNS readers))
      (VP (MD may)
        (ADVP (RB perhaps))
        (VP (VB think)
          (NP (DT this)
            (ADJP (DT a) (JJ stupid))
            (NN question)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB perhaps))
      (ADVP (RB so))
      (NP (PRP it))
      (VP (VBD was)))
    (: ;)
    (CC but)
    (S
      (NP (NNP Willie))
      (VP (VBD was) (RB not)
        (ADVP (RB therefore))
        (ADJP (JJ stupid))))
    (. .)))

det(readers-2, Some-1)
nsubj(think-5, readers-2)
aux(think-5, may-3)
advmod(think-5, perhaps-4)
root(ROOT-0, think-5)
det(question-9, this-6)
det(stupid-8, a-7)
amod(question-9, stupid-8)
dobj(think-5, question-9)
advmod(was-15, perhaps-12)
advmod(was-15, so-13)
nsubj(was-15, it-14)
conj_and(think-5, was-15)
nsubj(stupid-22, Willie-18)
cop(stupid-22, was-19)
neg(stupid-22, not-20)
advmod(stupid-22, therefore-21)
conj_but(think-5, stupid-22)

(ROOT
  (S
    (NP
      (NP (NNS People))
      (ADJP (RB sometimes) (JJ _)))
    (VP (VBP appear)
      (S
        (NP (NNP _))
        (ADJP (JJ stupid))
        (SBAR
          (SBAR (IN because)
            (S
              (NP (PRP they))
              (VP (VBP have)
                (NP (JJR more) (NNS things)
                  (S
                    (VP (TO to)
                      (VP (VB think)
                        (PRT (RP about))
                        (SBAR (IN than)
                          (S
                            (NP (PRP they))
                            (VP (MD can)
                              (ADVP (RB well))
                              (VP (VB manage))))))))))))
          (: ;)
          (SBAR (IN while)
            (S
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP think)
                      (NP
                        (QP (RB only) (RB about) (CD one)
                          (CC or)
                          (CD two))
                        (NNS things))))))
              (VP (MD may) (, ,)
                (PP (IN on)
                  (NP (DT the) (NN contrary)))
                (, ,)
                (ADVP (RB _))
                (VP (VB appear)
                  (S
                    (NP (NNP _))
                    (ADJP (JJ clever))
                    (SBAR
                      (WHADVP (WRB when) (RB just))
                      (S
                        (NP
                          (NP (DT those) (NN one))
                          (CC or)
                          (NP (CD two) (NNS things)))
                        (VP (VBP happen)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (VP (VBN talked)
                                  (PP (IN about)))))))))))))))))
    (. .)))

nsubj(appear-4, People-1)
advmod(_-3, sometimes-2)
amod(People-1, _-3)
root(ROOT-0, appear-4)
nsubj(have-9, _-5)
dep(have-9, stupid-6)
mark(have-9, because-7)
nsubj(have-9, they-8)
xcomp(appear-4, have-9)
amod(things-11, more-10)
dobj(have-9, things-11)
aux(think-13, to-12)
vmod(things-11, think-13)
prt(think-13, about-14)
mark(manage-19, than-15)
nsubj(manage-19, they-16)
aux(manage-19, can-17)
advmod(manage-19, well-18)
advcl(think-13, manage-19)
mark(appear-38, while-21)
nsubj(think-24, those-22)
nsubj(appear-38, those-22)
rcmod(those-22, think-24)
advmod(one-27, only-25)
advmod(one-27, about-26)
num(things-30, one-27)
conj_or(one-27, two-29)
num(things-30, two-29)
dobj(think-24, things-30)
aux(appear-38, may-31)
det(contrary-35, the-34)
prep_on(appear-38, contrary-35)
advmod(appear-38, _-37)
dep(have-9, appear-38)
nsubj(happen-48, _-39)
nsubjpass(talked-51, _-39)
dep(happen-48, clever-40)
advmod(just-42, when-41)
advmod(happen-48, just-42)
det(one-44, those-43)
nsubj(happen-48, one-44)
nsubjpass(talked-51, one-44)
num(things-47, two-46)
conj_or(one-44, things-47)
nsubj(happen-48, things-47)
nsubjpass(talked-51, things-47)
xcomp(appear-38, happen-48)
aux(talked-51, to-49)
auxpass(talked-51, be-50)
xcomp(happen-48, talked-51)
prep(talked-51, about-52)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (PRP$ my) (NN business))
        (, ,)
        (NP (NNP Willie))))
    (. ?)))

root(ROOT-0, What-2)
cop(What-2, is-3)
poss(business-5, my-4)
nsubj(What-2, business-5)
appos(business-5, Willie-7)

(ROOT
  (S
    (INTJ (WRB Why))
    (, ,)
    (NP (TO to))
    (VP (VB keep)
      (NP
        (NP (NNS people))
        (PP (RB out) (IN of)
          (NP (DT the) (NN dirt)))
        (, ,)
        (PP (IN of)
          (NP (NN course)))))
    (. .) ('' '')))

discourse(keep-4, Why-1)
nsubj(keep-4, to-3)
root(ROOT-0, keep-4)
dobj(keep-4, people-5)
det(dirt-9, the-8)
prep_out_of(people-5, dirt-9)
prep_of(people-5, course-12)

(ROOT
  (INTJ (`` ``) (UH How) (. ?) ('' '')))

root(ROOT-0, How-2)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Willie))
      (ADVP (RB again)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Willie-2)
advmod(asked-1, again-3)

(ROOT
  (S (`` ``)
    (PP (IN By)
      (S
        (VP (VBG making)
          (CC and)
          (VBG mending)
          (NP (PRP$ their)))))
    (VP (VBZ shoes))
    (. .)))

prepc_by(shoes-7, making-3)
conj_and(making-3, mending-5)
prepc_by(shoes-7, mending-5)
dobj(making-3, their-6)
root(ROOT-0, shoes-7)

(ROOT
  (S
    (NP (NNP Mr) (NNP Dick))
    (, ,)
    (ADVP (RB now))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBZ goes)
          (PRT (RP out))
          (S
            (VP (TO to)
              (VP (VB look)
                (PP (IN at)
                  (NP (DT the) (NNS stars)))
                (PP (IN through)
                  (NP (PRP$ his) (NN telescope)))))))))
    (, ,)
    (VP (MD might)
      (VP (VB get)
        (NP
          (NP (PRP$ his) (NN death))
          (PP (IN of)
            (NP (NN cold))))
        (SBAR (IN if)
          (S
            (NP (PRP$ his) (NN shoemaker))
            (VP (VBD did) (RB not)
              (VP (VB know)
                (NP (PRP$ his) (NN business))))))))
    (. .)))

nn(Dick-2, Mr-1)
nsubj(get-20, Dick-2)
advmod(get-20, now-4)
advmod(goes-8, when-6)
nsubj(goes-8, he-7)
nsubj(look-11, he-7)
advcl(get-20, goes-8)
prt(goes-8, out-9)
aux(look-11, to-10)
xcomp(goes-8, look-11)
det(stars-14, the-13)
prep_at(look-11, stars-14)
poss(telescope-17, his-16)
prep_through(look-11, telescope-17)
aux(get-20, might-19)
root(ROOT-0, get-20)
poss(death-22, his-21)
dobj(get-20, death-22)
prep_of(death-22, cold-24)
mark(know-30, if-25)
poss(shoemaker-27, his-26)
nsubj(know-30, shoemaker-27)
aux(know-30, did-28)
neg(know-30, not-29)
advcl(get-20, know-30)
poss(business-32, his-31)
dobj(know-30, business-32)

(ROOT
  (S
    (PP (IN Of)
      (NP (DT the) (JJ general) (NN business)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN part))
        (SBAR
          (S
            (NP (NNP God))
            (VP (VBZ keeps)
              (S
                (VP (TO to)
                  (VP (VB Himself)
                    (S
                      (VP (TO to)
                        (VP (VB see)
                          (SBAR
                            (SBAR (IN that)
                              (S
                                (NP (DT the) (NNS stars))
                                (VP (VBP go)
                                  (ADVP (DT all) (RB right)))))
                            (, ,)
                            (CC and)
                            (SBAR (IN that)
                              (S
                                (NP (DT the) (NN sun))
                                (VP (VBZ rises)
                                  (CC and)
                                  (VBZ sets)
                                  (PP (IN at)
                                    (NP (DT the) (JJ proper) (NNS times))))))))))))))))))
    (. .)))

det(business-4, the-2)
amod(business-4, general-3)
prep_of(part-9, business-4)
nsubj(part-9, it-6)
cop(part-9, 's-7)
det(part-9, a-8)
root(ROOT-0, part-9)
nsubj(keeps-11, God-10)
nsubj(Himself-13, God-10)
nsubj(see-15, God-10)
rcmod(part-9, keeps-11)
aux(Himself-13, to-12)
xcomp(keeps-11, Himself-13)
aux(see-15, to-14)
xcomp(Himself-13, see-15)
mark(go-19, that-16)
det(stars-18, the-17)
nsubj(go-19, stars-18)
ccomp(see-15, go-19)
dep(right-21, all-20)
advmod(go-19, right-21)
mark(rises-27, that-24)
det(sun-26, the-25)
nsubj(rises-27, sun-26)
nsubj(sets-29, sun-26)
ccomp(see-15, rises-27)
conj_and(go-19, rises-27)
conj_and(go-19, sets-29)
conj_and(rises-27, sets-29)
det(times-33, the-31)
amod(times-33, proper-32)
prep_at(rises-27, times-33)

(ROOT
  (S
    (S
      (SBAR (IN For)
        (S
          (NP (DT the) (NN time))
          (VP (VBZ 's) (RB not)
            (NP (DT the) (JJ same)
              (NP (DT any) (CD two) (NNS mornings))
              (NN running)))))
      (, ,)
      (NP (PRP you))
      (VP (VBP see)))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD might)
        (VP (VB make)
          (NP (DT a) (NN mistake))
          (SBAR
            (SBAR (IN if)
              (S
                (NP (PRP he))
                (VP (VBD was) (RB n't)
                  (VP (VBN looked)
                    (PP (IN after))))))
            (, ,)
            (CC and)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD would)
                  (VP (VB be)
                    (ADJP (JJ serious))))))))))
    (. .)))

mark(running-11, For-1)
det(time-3, the-2)
nsubj(running-11, time-3)
cop(running-11, 's-4)
neg(running-11, not-5)
det(running-11, the-6)
amod(running-11, same-7)
det(mornings-10, any-8)
num(mornings-10, two-9)
nn(running-11, mornings-10)
advcl(see-14, running-11)
nsubj(see-14, you-13)
root(ROOT-0, see-14)
nsubj(make-19, he-17)
aux(make-19, might-18)
conj_and(see-14, make-19)
det(mistake-21, a-20)
dobj(make-19, mistake-21)
mark(looked-26, if-22)
nsubjpass(looked-26, he-23)
auxpass(looked-26, was-24)
neg(looked-26, n't-25)
advcl(make-19, looked-26)
prep(looked-26, after-27)
nsubj(serious-33, that-30)
aux(serious-33, would-31)
cop(serious-33, be-32)
advcl(make-19, serious-33)
conj_and(looked-26, serious-33)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBD told)
      (NP (PRP you))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP do) (RB n't)
            (VP (VB understand)
              (PP (IN about)
                (NP (NN astronomy)))
              (, ,)
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBZ 's) (RB not)
                    (NP (PRP$ my) (NN business))))))))))
    (. .)))

cc(told-3, But-1)
nsubj(told-3, I-2)
root(ROOT-0, told-3)
dobj(told-3, you-4)
nsubj(understand-8, I-5)
aux(understand-8, do-6)
neg(understand-8, n't-7)
dep(told-3, understand-8)
prep_about(understand-8, astronomy-10)
mark(business-17, because-12)
nsubj(business-17, it-13)
cop(business-17, 's-14)
neg(business-17, not-15)
poss(business-17, my-16)
advcl(understand-8, business-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBN set)
          (S
            (VP (TO to)
              (VP (VB keep)
                (NP
                  (NP (NN folk) (POS 's))
                  (NNS feet))
                (PP (IN off)
                  (NP
                    (NP (DT the)
                      (ADJP (JJ cold)
                        (CC and)
                        (JJ wet))
                      (NN earth))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (NNS stones))
                      (CC and)
                      (NP (JJ broken) (NN glass)))))))))))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (ADVP (RB however))
          (NP (RB much) (DT a) (NN man))
          (VP (MD may)
            (VP
              (VP (VB be)
                (NP (DT an) (NN astronomer)))
              (CC and)
              (VP (VB look)
                (PRT (RP up))
                (PP (IN at)
                  (NP (DT the) (NN sky))))))))
      (, ,)
      (NP (PRP he))
      (VP
        (VP (MD must)
          (VP (VB touch)
            (NP (DT the) (NN earth))
            (PP (IN with)
              (NP
                (NP (DT some) (NN part))
                (PP (IN of)
                  (NP (PRP him)))))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB generally))
          (VBZ does)
          (ADVP (RB so))
          (PP (IN with)
            (NP (PRP$ his) (NNS feet))))))
    (. .) ('' '')))

nsubjpass(set-3, I-1)
nsubj(keep-5, I-1)
auxpass(set-3, 'm-2)
root(ROOT-0, set-3)
aux(keep-5, to-4)
xcomp(set-3, keep-5)
poss(feet-8, folk-6)
dobj(keep-5, feet-8)
det(earth-14, the-10)
amod(earth-14, cold-11)
conj_and(cold-11, wet-13)
amod(earth-14, wet-13)
prep_off(keep-5, earth-14)
prep_off(keep-5, stones-17)
conj_and(earth-14, stones-17)
amod(glass-20, broken-19)
conj_and(earth-14, glass-20)
conj_and(stones-17, glass-20)
mark(astronomer-30, for-22)
advmod(astronomer-30, however-23)
advmod(man-26, much-24)
det(man-26, a-25)
nsubj(astronomer-30, man-26)
nsubj(look-32, man-26)
aux(astronomer-30, may-27)
cop(astronomer-30, be-28)
det(astronomer-30, an-29)
advcl(touch-40, astronomer-30)
conj_and(astronomer-30, look-32)
advcl(touch-40, look-32)
prt(look-32, up-33)
det(sky-36, the-35)
prep_at(look-32, sky-36)
nsubj(touch-40, he-38)
nsubj(does-51, he-38)
aux(touch-40, must-39)
parataxis(set-3, touch-40)
det(earth-42, the-41)
dobj(touch-40, earth-42)
det(part-45, some-44)
prep_with(touch-40, part-45)
prep_of(part-45, him-47)
advmod(does-51, generally-50)
parataxis(set-3, does-51)
conj_and(touch-40, does-51)
advmod(does-51, so-52)
poss(feet-55, his-54)
prep_with(does-51, feet-55)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (NNP God))
    (VP (VBZ sets)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP (VB do)
            (NP (PRP it))
            (, ,)
            (ADVP (RB Hector))))))
    (. ?) ('' '')))

cc(sets-4, And-2)
nsubj(sets-4, God-3)
root(ROOT-0, sets-4)
dobj(sets-4, you-5)
nsubj(do-7, you-5)
aux(do-7, to-6)
xcomp(sets-4, do-7)
dobj(do-7, it-8)
advmod(do-7, Hector-10)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN way))
        (SBAR
          (S
            (NP (PRP He))
            (VP (VBZ looks)
              (PP (IN after)
                (NP
                  (NP (NNS people) (POS 's))
                  (NNS feet))))))))
    (. .)))

nsubj(way-4, It-1)
cop(way-4, 's-2)
det(way-4, the-3)
root(ROOT-0, way-4)
nsubj(looks-6, He-5)
rcmod(way-4, looks-6)
poss(feet-10, people-8)
prep_after(looks-6, feet-10)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ 's)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB look)
                (PP (IN after)
                  (NP (NN everything)))))))))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP know)))
      (, ,))
    (CC or)
    (S
      (NP (NN everything))
      (VP (MD would)
        (VP (VB go)
          (ADJP (JJ wrong)))))
    (. .)))

nsubjpass(got-3, He-1)
nsubj(look-5, He-1)
auxpass(got-3, 's-2)
root(ROOT-0, got-3)
aux(look-5, to-4)
xcomp(got-3, look-5)
prep_after(look-5, everything-7)
nsubj(know-10, you-9)
dep(got-3, know-10)
nsubj(go-15, everything-13)
aux(go-15, would-14)
conj_or(got-3, go-15)
acomp(go-15, wrong-16)

(ROOT
  (S (CC So)
    (S
      (NP (PRP He))
      (VP (VBZ gives)
        (NP (PRP me))
        (NP
          (NP (DT the) (NN leather))
          (CC and)
          (NP
            (NP (DT the) (NNS tools))
            (CC and)
            (NP (DT the) (NNS hands))))))
    (: --)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD must)
        (VP (VB say)
          (NP (DT the) (NN head))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP it))
              (VP (VBZ wants)
                (NP (DT no) (JJ little) (NN head)
                  (S
                    (VP (TO to)
                      (VP (VB make)
                        (S
                          (NP (DT a) (JJ _) (JJ good) (NN _) (NN shoe))
                          (VP (TO to)
                            (VP (VB measure))))
                        (PRN (: --)
                          (CC and)
                          (S
                            (NP (PRP it))
                            (VP (VBZ is)
                              (SBAR (RB as) (IN if)
                                (S
                                  (NP (PRP He))
                                  (VP (VBD said)
                                    (PP (TO to)
                                      (NP (PRP me))))))))
                          (: --))
                        (`` `)
                        (NP (EX There))))))))))))
    (. !)))

nsubj(gives-3, He-2)
root(ROOT-0, gives-3)
iobj(gives-3, me-4)
det(leather-6, the-5)
dobj(gives-3, leather-6)
det(tools-9, the-8)
dobj(gives-3, tools-9)
conj_and(leather-6, tools-9)
det(hands-12, the-11)
conj_and(leather-6, hands-12)
conj_and(tools-9, hands-12)
nsubj(say-17, I-15)
aux(say-17, must-16)
conj_and(gives-3, say-17)
det(head-19, the-18)
dobj(say-17, head-19)
mark(wants-23, for-21)
nsubj(wants-23, it-22)
advcl(say-17, wants-23)
neg(head-26, no-24)
amod(head-26, little-25)
dobj(wants-23, head-26)
aux(make-28, to-27)
vmod(head-26, make-28)
det(shoe-33, a-29)
amod(shoe-33, _-30)
amod(shoe-33, good-31)
nn(shoe-33, _-32)
dobj(make-28, shoe-33)
nsubj(measure-35, shoe-33)
aux(measure-35, to-34)
xcomp(make-28, measure-35)
cc(is-39, and-37)
nsubj(is-39, it-38)
parataxis(make-28, is-39)
advmod(said-43, as-40)
mark(said-43, if-41)
nsubj(said-43, He-42)
advcl(is-39, said-43)
prep_to(said-43, me-45)
dobj(make-28, There-48)
nsubj(measure-35, There-48)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBP make)
      (NP
        (NP (NNS shoes))
        (, ,)
        (SBAR (IN while)
          (S
            (NP (PRP I))
            (VP (VB keep)
              (S
                (NP (DT the) (NNS stars))
                (ADJP (RB right))))))))
    (. .) ('' ')))

nsubj(make-2, you-1)
root(ROOT-0, make-2)
dobj(make-2, shoes-3)
mark(keep-7, while-5)
nsubj(keep-7, I-6)
rcmod(shoes-3, keep-7)
det(stars-9, the-8)
nsubj(right-10, stars-9)
xcomp(keep-7, right-10)

(ROOT
  (SINV
    (VP (VBZ Is) (RB n't))
    (NP (PRP it))
    (SBAR
      (S
        (NP (DT a) (JJ fine) (NN thing))
        (VP (TO to)
          (VP (VB have)
            (NP
              (NP (DT a) (NN hand))
              (PP (IN in)
                (NP (DT the) (JJ general) (NN business)))))))
      (. ?) ('' ''))))

root(ROOT-0, Is-1)
neg(Is-1, n't-2)
nsubj(Is-1, it-3)
det(thing-6, a-4)
amod(thing-6, fine-5)
nsubj(have-8, thing-6)
aux(have-8, to-7)
dep(Is-1, have-8)
det(hand-10, a-9)
dobj(have-8, hand-10)
det(business-14, the-12)
amod(business-14, general-13)
prep_in(hand-10, business-14)

(ROOT
  (S (CC And)
    (NP (NNP Hector))
    (VP (VBD looked)
      (PRT (RP up))
      (PP (IN with)
        (NP
          (NP (VBG shining) (NNS eyes))
          (PP (IN in)
            (NP
              (NP (DT the) (NN face))
              (PP (IN of)
                (NP (DT the) (JJ little) (NN boy)))))))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (PRP he))
          (VP (VBD pulled)
            (PP (IN at)
              (NP (PRP$ his) (NNS rosin-ends)))
            (SBAR (RB as) (IN if)
              (S
                (NP (PRP he))
                (VP (MD would)
                  (VP (VB make)
                    (NP
                      (NP (DT the) (NN boot))
                      (ADJP (JJ strong) (RB enough)
                        (S
                          (VP (TO to)
                            (VP (VB keep)
                              (PRT (RP out))
                              (NP (JJ evil) (NNS spirits)))))))))))))))
    (. .)))

cc(looked-3, And-1)
nsubj(looked-3, Hector-2)
root(ROOT-0, looked-3)
prt(looked-3, up-4)
amod(eyes-7, shining-6)
prep_with(looked-3, eyes-7)
det(face-10, the-9)
prep_in(eyes-7, face-10)
det(boy-14, the-12)
amod(boy-14, little-13)
prep_of(face-10, boy-14)
mark(pulled-18, while-16)
nsubj(pulled-18, he-17)
advcl(looked-3, pulled-18)
poss(rosin-ends-21, his-20)
prep_at(pulled-18, rosin-ends-21)
advmod(make-26, as-22)
mark(make-26, if-23)
nsubj(make-26, he-24)
aux(make-26, would-25)
advcl(pulled-18, make-26)
det(boot-28, the-27)
dobj(make-26, boot-28)
amod(boot-28, strong-29)
advmod(strong-29, enough-30)
aux(keep-32, to-31)
xcomp(strong-29, keep-32)
prt(keep-32, out-33)
amod(spirits-35, evil-34)
dobj(keep-32, spirits-35)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP (DT a) (JJ fine) (NN thing)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (S
                        (VP (TO to)
                          (VP (VB make)
                            (NP (JJ nice) (JJ new) (NNS shoes))))))))))))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (NNP Willie))))
    (: ;) (`` ``)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD should)
                (VP (VB like)
                  (S
                    (VP (TO to)
                      (VP (VB mend)
                        (NP (PRP them))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP they))
                            (VP (VBP are)
                              (ADJP
                                (ADJP (JJ soppy)
                                  (CC and)
                                  (JJ muddy)
                                  (CC and)
                                  (JJ out))
                                (PP (IN of)
                                  (NP (NN shape)))))))))))))))))
    (. .) ('' '')))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(thing-8, it-4)
cop(thing-8, 's-5)
det(thing-8, a-6)
amod(thing-8, fine-7)
ccomp(think-3, thing-8)
aux(have-10, to-9)
vmod(thing-8, have-10)
aux(make-12, to-11)
xcomp(have-10, make-12)
amod(shoes-15, nice-13)
amod(shoes-15, new-14)
dobj(make-12, shoes-15)
dep(think-3, said-18)
nsubj(said-18, Willie-19)
nsubj(think-26, I-23)
aux(think-26, do-24)
neg(think-26, n't-25)
conj_but(think-3, think-26)
nsubj(like-29, I-27)
nsubj(mend-31, I-27)
aux(like-29, should-28)
ccomp(think-26, like-29)
aux(mend-31, to-30)
xcomp(like-29, mend-31)
dobj(mend-31, them-32)
advmod(muddy-38, when-33)
nsubj(muddy-38, they-34)
nsubj(out-40, they-34)
cop(muddy-38, are-35)
dep(muddy-38, soppy-36)
advcl(mend-31, muddy-38)
advcl(mend-31, out-40)
conj_and(muddy-38, out-40)
prep_of(muddy-38, shape-42)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD would)
          (VP (VB take)
            (NP (PRP$ your) (NN share))
            (PP (IN in)
              (NP (DT the) (JJ general) (NN business)))))))
    (, ,)
    (NP (PRP you))
    (VP (MD must) (RB n't)
      (VP (VB be)
        (ADJP (JJ particular))))
    (. .)))

mark(take-5, If-2)
nsubj(take-5, you-3)
aux(take-5, would-4)
advcl(particular-17, take-5)
poss(share-7, your-6)
dobj(take-5, share-7)
det(business-11, the-9)
amod(business-11, general-10)
prep_in(take-5, business-11)
nsubj(particular-17, you-13)
aux(particular-17, must-14)
neg(particular-17, n't-15)
cop(particular-17, be-16)
root(ROOT-0, particular-17)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD wo) (RB n't)
        (VP (VB do)
          (S
            (VP (TO to)
              (VP (VB be)
                (PP (IN above)
                  (NP (PRP$ your) (NN business)))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP they))
                    (VP (VBP say))))))))))
    (: :)
    (S
      (PP (IN for)
        (NP (PRP$ my) (NN part)))
      (, ,)
      (NP (PRP I))
      (VP (MD would)
        (VP (VB say)
          (NP (NNS _))
          (PP (IN below)
            (S
              (VP (VBG _)
                (NP (PRP$ your) (NN business))))))))
    (. .)))

nsubj(do-4, It-1)
nsubj(be-6, It-1)
aux(do-4, wo-2)
neg(do-4, n't-3)
root(ROOT-0, do-4)
aux(be-6, to-5)
xcomp(do-4, be-6)
poss(business-9, your-8)
prep_above(be-6, business-9)
mark(say-13, as-11)
nsubj(say-13, they-12)
advcl(be-6, say-13)
poss(part-17, my-16)
prep_for(say-21, part-17)
nsubj(say-21, I-19)
aux(say-21, would-20)
parataxis(do-4, say-21)
dobj(say-21, _-22)
prepc_below(say-21, _-24)
poss(business-26, your-25)
dobj(_-24, business-26)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (DT those) (NNS boots))
        (PP (IN in)
          (NP (DT the) (NN corner))))
      (ADVP (RB now)))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(boots-4, those-3)
nsubj('s-2, boots-4)
det(corner-7, the-6)
prep_in(boots-4, corner-7)
advmod('s-2, now-8)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP belong)
      (PP (TO to)
        (NP (PRP$ your) (NN papa))))
    (. .)))

nsubj(belong-2, They-1)
root(ROOT-0, belong-2)
poss(papa-5, your-4)
prep_to(belong-2, papa-5)

(ROOT
  (S (CC And)
    (NP (PRP they))
    (VP (VBP come)
      (ADVP (JJ next)))
    (. .)))

cc(come-3, And-1)
nsubj(come-3, they-2)
root(ROOT-0, come-3)
advmod(come-3, next-4)

(ROOT
  (SQ (MD Do) (RB n't)
    (NP (PRP you))
    (VP (VB think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP (DT an) (NN honour)
              (S
                (VP (TO to)
                  (VP (VB keep)
                    (NP
                      (NP (DT the) (NNS feet))
                      (PP (IN of)
                        (NP
                          (NP (PDT such) (DT a) (JJ good) (NN man))
                          (ADJP (JJ dry)
                            (CC and)
                            (JJ warm)))))
                    (SBAR (IN as)
                      (S
                        (NP (PRP he))
                        (VP (VBZ goes)
                          (PP (IN about)
                            (PP (IN from)
                              (NP (NN morning))))
                          (PP (TO to)
                            (NP (NN night) (JJ comforting) (NNS people))))))))))))))
    (. ?)))

aux(think-4, Do-1)
neg(think-4, n't-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj(honour-8, it-5)
cop(honour-8, 's-6)
det(honour-8, an-7)
ccomp(think-4, honour-8)
aux(keep-10, to-9)
vmod(honour-8, keep-10)
det(feet-12, the-11)
dobj(keep-10, feet-12)
predet(man-17, such-14)
det(man-17, a-15)
amod(man-17, good-16)
prep_of(feet-12, man-17)
amod(man-17, dry-18)
amod(man-17, warm-20)
conj_and(dry-18, warm-20)
mark(goes-23, as-21)
nsubj(goes-23, he-22)
advcl(keep-10, goes-23)
prep(goes-23, about-24)
pcomp(about-24, from-25)
pobj(from-25, morning-26)
nn(people-30, night-28)
amod(people-30, comforting-29)
prep_to(goes-23, people-30)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP (DT an) (NN honour)
              (S
                (VP (TO to)
                  (VP (VB mend)
                    (NP (NNS boots))
                    (PP (IN for)
                      (S
                        (VP (VBG _)
                          (S
                            (NP (PRP him))
                            (ADJP (JJ _)))
                          (, ,)
                          (SBAR (RB even) (IN if)
                            (S
                              (NP (PRP they))
                              (VP (MD should)
                                (VP (VB be)
                                  (ADJP (JJ dirty)))))))))))))))))
    (. ?) ('' '')))

nsubj(think-4, Do-1)
neg(think-4, n't-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj(honour-8, it-5)
cop(honour-8, 's-6)
det(honour-8, an-7)
ccomp(think-4, honour-8)
aux(mend-10, to-9)
vmod(honour-8, mend-10)
dobj(mend-10, boots-11)
prepc_for(mend-10, _-13)
nsubj(_-15, him-14)
xcomp(_-13, _-15)
advmod(dirty-22, even-17)
mark(dirty-22, if-18)
nsubj(dirty-22, they-19)
aux(dirty-22, should-20)
cop(dirty-22, be-21)
advcl(_-13, dirty-22)

(ROOT
  (S
    (FRAG
      (INTJ
        (INTJ (`` ``) (UH Oh))
        (, ,)
        (INTJ (UH yes))))
    (: --)
    (S
      (PP (IN for)
        (NP (NNP _)))
      (NP (NN papa))
      (VP (VBZ _)))
    (. !) ('' '')))

dep(_-9, Oh-2)
discourse(Oh-2, yes-4)
prep_for(_-9, _-7)
nsubj(_-9, papa-8)
root(ROOT-0, _-9)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie))
      (, ,)
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP$ his) (NN papa))
          (VP (MD must)
            (VP (VB be)
              (NP
                (NP (DT an) (NN exception))
                (PP (TO to)
                  (NP (DT any) (NN rule)))))))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)
advmod(exception-11, as-4)
mark(exception-11, if-5)
poss(papa-7, his-6)
nsubj(exception-11, papa-7)
aux(exception-11, must-8)
cop(exception-11, be-9)
det(exception-11, an-10)
advcl(said-1, exception-11)
det(rule-14, any-13)
prep_to(exception-11, rule-14)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Well)))
    (, ,) ('' '')
    (VP (VBD resumed))
    (NP
      (NP (NNP Hector))
      (, ,)
      (NP
        (NP (`` ``) (NN look))
        (PP (IN at)
          (NP (DT these) (JJ great) (NNS lace-boots)))))
    (. .)))

dep(resumed-5, Well-2)
root(ROOT-0, resumed-5)
nsubj(resumed-5, Hector-6)
appos(Hector-6, look-9)
det(lace-boots-13, these-11)
amod(lace-boots-13, great-12)
prep_at(look-9, lace-boots-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB fill)
              (NP
                (NP (DT the) (NNS soles))
                (PP (IN of)
                  (NP (PRP them)))
                (PP (JJ full) (IN of)
                  (NP (NNS hobnails))))
              (ADVP (RB presently)))))))
    (. .)))

nsubj(have-3, I-1)
nsubj(fill-5, I-1)
aux(have-3, shall-2)
root(ROOT-0, have-3)
aux(fill-5, to-4)
xcomp(have-3, fill-5)
det(soles-7, the-6)
dobj(fill-5, soles-7)
prep_of(soles-7, them-9)
dep(soles-7, full-10)
prep_of(soles-7, hobnails-12)
advmod(fill-5, presently-13)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP belong)
      (PP (TO to)
        (NP
          (NP (DT the) (JJS best) (NN ploughman))
          (PP (IN in)
            (NP
              (NP (DT the) (NN parish))
              (: --)
              (NP (NNP John) (NNP Turnbull)))))))
    (. .)))

nsubj(belong-2, They-1)
root(ROOT-0, belong-2)
det(ploughman-6, the-4)
amod(ploughman-6, best-5)
prep_to(belong-2, ploughman-6)
det(parish-9, the-8)
prep_in(ploughman-6, parish-9)
nn(Turnbull-12, John-11)
dep(parish-9, Turnbull-12)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP (DT an) (NN honour)
              (S
                (VP (TO to)
                  (VP (VB mend)
                    (NP (NNS boots))
                    (PP (IN for)
                      (NP
                        (NP (DT a) (NN man))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ makes)
                              (NP
                                (NP (DT the) (JJS best) (NN bed))
                                (PP (IN for)
                                  (NP (DT the) (NN corn)
                                    (S
                                      (VP (TO to)
                                        (VP (VB die)
                                          (PRT (RP in)))))))))))))))))))))
    (. ?) ('' '')))

nsubj(think-4, Do-1)
neg(think-4, n't-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj(honour-8, it-5)
cop(honour-8, 's-6)
det(honour-8, an-7)
ccomp(think-4, honour-8)
aux(mend-10, to-9)
vmod(honour-8, mend-10)
dobj(mend-10, boots-11)
det(man-14, a-13)
prep_for(mend-10, man-14)
nsubj(makes-16, man-14)
rcmod(man-14, makes-16)
det(bed-19, the-17)
amod(bed-19, best-18)
dobj(makes-16, bed-19)
det(corn-22, the-21)
prep_for(bed-19, corn-22)
aux(die-24, to-23)
vmod(corn-22, die-24)
prt(die-24, in-25)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (S
                (VP (TO to)
                  (VP (VB grow)
                    (PRT (RP in))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(thought-3, I-2)
ccomp(said-11, thought-3)
nsubj(was-5, it-4)
nsubj(grow-7, it-4)
ccomp(thought-3, was-5)
aux(grow-7, to-6)
xcomp(was-5, grow-7)
prt(grow-7, in-8)
root(ROOT-0, said-11)
nsubj(said-11, Willie-12)

(ROOT
  (S (`` ``)
    (ADVP (PDT All) (DT the) (JJ same))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Hector))
    (. .)))

dep(same-4, All-2)
det(same-4, the-3)
advmod(returned-7, same-4)
root(ROOT-0, returned-7)
dep(returned-7, Hector-8)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP it))
        (VP (VBZ dies)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ grows)
                (PRN (: --)
                  (CC and)
                  (RB not)
                  (PP (IN till)
                    (NP (RB then))))))))))
    (, ,)
    (NP (RB as) (PRP you))
    (VP (MD will)
      (VP (VB read)
        (PP (IN in)
          (NP (DT the) (NNP New) (NN Testament)))))
    (. .)))

advmod(dies-4, When-2)
nsubj(dies-4, it-3)
advcl(read-16, dies-4)
nsubj(grows-6, it-5)
ccomp(dies-4, grows-6)
cc(till-10, and-8)
dep(till-10, not-9)
dep(grows-6, till-10)
pobj(till-10, then-11)
advmod(you-14, as-13)
nsubj(read-16, you-14)
aux(read-16, will-15)
root(ROOT-0, read-16)
det(Testament-20, the-18)
nn(Testament-20, New-19)
prep_in(read-16, Testament-20)

(ROOT
  (SINV
    (VP (VBZ Is) (RB n't)
      (NP (PRP it)))
    (NP (DT an) (NN honour))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP say) (, ,)
        (PP (TO to)
          (NP (JJ mend) (NNS boots)))
        (PP (IN for)
          (NP (NNP John) (NNP Turnbull)))))
    (. ?) ('' '')))

cop(it-3, Is-1)
neg(it-3, n't-2)
root(ROOT-0, it-3)
det(honour-5, an-4)
nsubj(it-3, honour-5)
nsubj(say-8, I-7)
ccomp(it-3, say-8)
amod(boots-12, mend-11)
prep_to(say-8, boots-12)
nn(Turnbull-15, John-14)
prep_for(say-8, Turnbull-15)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (PP
      (X (SYM yes))
      (: --)
      (PP (IN for)
        (NP (NNP John) (NNP Turnbull)))
      (. !))))

root(ROOT-0, Oh-2)
dep(Oh-2, yes-4)
nn(Turnbull-8, John-7)
prep_for(Oh-2, Turnbull-8)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP (NNP John))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Willie))
      (, ,)
      (SBAR (IN as) (IN if)
        (S
          (NP (PRP it))
          (VP (VBD made)
            (NP (DT any) (NN difference))
            (PP (TO to)
              (NP (PRP$ his) (NN merit)))
            (SBAR (IN whether)
              (S
                (NP (NNP Willie))
                (VP (VBD knew)
                  (NP (PRP him))))
              (CC or)
              (RB not))))))
    (. !)))

nsubj(know-2, I-1)
ccomp(said-6, know-2)
dobj(know-2, John-3)
root(ROOT-0, said-6)
nsubj(said-6, Willie-7)
mark(made-12, as-9)
mark(made-12, if-10)
nsubj(made-12, it-11)
dep(Willie-7, made-12)
det(difference-14, any-13)
dobj(made-12, difference-14)
poss(merit-17, his-16)
prep_to(made-12, merit-17)
mark(knew-20, whether-18)
nsubj(knew-20, Willie-19)
ccomp(made-12, knew-20)
dobj(knew-20, him-21)
ccomp(made-12, not-23)
conj_or(knew-20, not-23)

(ROOT
  (S (`` ``)
    (CC And)
    (NP
      (NP (RB there))
      (PRN (, ,) ('' '')
        (S
          (NP (NNP Hector))
          (VP (VBD went)
            (PRT (RP on))))
        (, ,) (`` ``)))
    (VP (VBZ lies)
      (NP
        (NP (DT a) (NN pair))
        (PP (IN of)
          (NP
            (NP (NNS slippers))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP want)
                  (S
                    (VP (VBG patching))))))))))
    (. .)))

cc(lies-11, And-2)
nsubj(lies-11, there-3)
nsubj(went-7, Hector-6)
dep(there-3, went-7)
prt(went-7, on-8)
root(ROOT-0, lies-11)
det(pair-13, a-12)
dobj(lies-11, pair-13)
prep_of(pair-13, slippers-15)
nsubj(want-17, slippers-15)
rcmod(slippers-15, want-17)
xcomp(want-17, patching-18)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP belong)
      (PP (TO to)
        (NP
          (NP (NNP William) (NNP Webster))
          (, ,)
          (NP (DT the) (NN weaver))
          (, ,)))
      (ADVP (RB round)
        (NP (DT the) (NN corner))))
    (. .)))

nsubj(belong-2, They-1)
root(ROOT-0, belong-2)
nn(Webster-5, William-4)
prep_to(belong-2, Webster-5)
det(weaver-8, the-7)
appos(Webster-5, weaver-8)
advmod(belong-2, round-10)
det(corner-12, the-11)
pobj(round-10, corner-12)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 're)
      (ADVP (RB very) (RB much) (RB down))
      (PP (IN at)
        (NP (NN heel)))
      (ADVP (RB too)))
    (. .)))

nsubj('re-2, They-1)
root(ROOT-0, 're-2)
advmod(down-5, very-3)
advmod(down-5, much-4)
advmod('re-2, down-5)
prep_at('re-2, heel-7)
advmod('re-2, too-8)

(ROOT
  (S (CC But)
    (S
      (VP
        (VP (VBZ is) (RB n't)
          (NP (PRP it)
            (NP
              (NP (DT an) (NN honour))
              (PP (TO to)
                (NP (NN patch))))))
        (CC or)
        (VP (VBD set)
          (PRT (RP up)))))
    (VP (VBZ slippers)
      (PP (IN for)
        (NP
          (NP (DT a) (NN man))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ keeps)
                (NP (PRP$ his) (NNS neighbours))
                (PP (IN in)
                  (NP (JJ fine) (NN linen))))))))
      (NP
        (NP (PDT all) (DT the) (NNS days))
        (PP (IN of)
          (NP (PRP$ their) (NNS lives)))))
    (. ?) ('' '')))

cc(slippers-12, But-1)
cop(honour-6, is-2)
neg(honour-6, n't-3)
dep(honour-6, it-4)
det(honour-6, an-5)
csubj(slippers-12, honour-6)
prep_to(honour-6, patch-8)
conj_or(honour-6, set-10)
csubj(slippers-12, set-10)
prt(set-10, up-11)
root(ROOT-0, slippers-12)
det(man-15, a-14)
prep_for(slippers-12, man-15)
nsubj(keeps-17, man-15)
rcmod(man-15, keeps-17)
poss(neighbours-19, his-18)
dobj(keeps-17, neighbours-19)
amod(linen-22, fine-21)
prep_in(keeps-17, linen-22)
predet(days-25, all-23)
det(days-25, the-24)
dobj(slippers-12, days-25)
poss(lives-28, their-27)
prep_of(days-25, lives-28)

(ROOT
  (INTJ (`` ``) (UH Yes) (, ,) (RB yes) (. .)))

root(ROOT-0, Yes-2)
dep(Yes-2, yes-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (NP (NNP William)))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
dobj(know-2, William-3)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ nice)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (NN anything))
                (PP (IN for)
                  (NP (NNP William) (NNP Webster)))))))))
    (. .) ('' '')))

nsubj(nice-4, It-1)
nsubj(do-6, It-1)
aux(nice-4, must-2)
cop(nice-4, be-3)
root(ROOT-0, nice-4)
aux(do-6, to-5)
xcomp(nice-4, do-6)
dobj(do-6, anything-7)
nn(Webster-10, William-9)
prep_for(do-6, Webster-10)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Suppose)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD did) (RB n't)
              (VP (VB know)
                (NP (PRP him))))))))
    (, ,)
    (VP (MD would)
      (ADVP (IN that))
      (VP (VB make)
        (NP (DT any) (NN difference))))
    (. ?) ('' '')))

ccomp(make-11, Suppose-2)
nsubj(know-6, you-3)
aux(know-6, did-4)
neg(know-6, n't-5)
ccomp(Suppose-2, know-6)
dobj(know-6, him-7)
aux(make-11, would-9)
advmod(make-11, that-10)
root(ROOT-0, make-11)
det(difference-13, any-12)
dobj(make-11, difference-13)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Willie))
      (, ,)
      (SBAR (IN after)
        (S
          (VP (VBG thinking)
            (NP (DT a) (JJ little))))))
    (. .)))

dep(said-5, No-2)
root(ROOT-0, said-5)
nsubj(said-5, Willie-6)
prepc_after(Willie-6, thinking-9)
det(little-11, a-10)
dobj(thinking-9, little-11)

(ROOT
  (S (`` ``)
    (NP (JJ Other) (NNS people))
    (VP (MD would)
      (VP (VB know)
        (NP (PRP him))
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBD did) (RB n't))))))
    (. .) ('' '')))

amod(people-3, Other-2)
nsubj(know-5, people-3)
aux(know-5, would-4)
root(ROOT-0, know-5)
dobj(know-5, him-6)
mark(did-9, if-7)
nsubj(did-9, I-8)
advcl(know-5, did-9)
neg(did-9, n't-10)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (S (CC and)
        (SBAR (IN if)
          (S
            (NP (NN nobody))
            (VP (VBD knew)
              (NP (PRP him)))))
        (, ,)
        (NP (NNP God))
        (VP (MD would)
          (VP (VB know)
            (NP (PRP him)))))
      (: ;)
      (CC and)
      (S
        (NP (NNP anybody) (NNP God))
        (VP (VBZ has)
          (VP (VBN thought)
            (PP (IN worth)
              (S
                (VP (VBG making))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (DT an) (NN honour)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (NN anything))
              (PP (IN for)))))))
    (. .)))

discourse(know-12, Yes-2)
mark(knew-7, if-5)
nsubj(knew-7, nobody-6)
advcl(know-12, knew-7)
dobj(knew-7, him-8)
nsubj(know-12, God-10)
aux(know-12, would-11)
ccomp(honour-26, know-12)
dobj(know-12, him-13)
nn(God-17, anybody-16)
nsubj(thought-19, God-17)
aux(thought-19, has-18)
conj_and(know-12, thought-19)
ccomp(honour-26, thought-19)
prepc_worth(thought-19, making-21)
nsubj(honour-26, it-23)
cop(honour-26, 's-24)
det(honour-26, an-25)
root(ROOT-0, honour-26)
aux(do-28, to-27)
vmod(honour-26, do-28)
dobj(do-28, anything-29)
prep(do-28, for-30)

(ROOT
  (S
    (NP
      (NP (NNP Believe) (PRP me) (, ,) (NNP Willie) (, ,))
      (SBAR
        (S
          (VP (TO to)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB keep)
                    (NP
                      (NP
                        (NP (NNS people) (POS 's))
                        (NNS feet))
                      (ADJP (JJ dry)
                        (CC and)
                        (JJ warm)))))))))))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (RB very) (JJ important))
        (NN appointment)))
    (. .) ('' '')))

nn(Willie-4, Believe-1)
dep(Willie-4, me-2)
nsubj(appointment-20, Willie-4)
aux(have-7, to-6)
vmod(Willie-4, have-7)
aux(keep-9, to-8)
xcomp(have-7, keep-9)
poss(feet-12, people-10)
dobj(keep-9, feet-12)
amod(feet-12, dry-13)
amod(feet-12, warm-15)
conj_and(dry-13, warm-15)
cop(appointment-20, is-16)
det(appointment-20, a-17)
advmod(important-19, very-18)
amod(appointment-20, important-19)
root(ROOT-0, appointment-20)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP$ Your) (JJ own) (NNS shoes))
      (VP (VBP are) (RB n't)
        (ADJP (RB very) (JJ good))
        (, ,)
        (NP (NNP Hector))))
    (, ,) ('' '')
    (VP (VBD said)
      (SBAR
        (S
          (NP
            (NP (NNP Willie))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD had)
                  (VP (VBN been)
                    (VP (VBG casting)
                      (NP
                        (NP (NNS glances))
                        (PP (IN from)
                          (NP (NN time))))
                      (PP (TO to)
                        (NP
                          (NP (NN time))
                          (PP (IN at)
                            (NP
                              (NP (PRP$ his) (NN companion) (POS 's))
                              (NNS feet)))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBD were)
                                (VP (VBN shod)
                                  (PP (IN in)
                                    (NP
                                      (NP (DT a) (NN manner))
                                      (SBAR
                                        (WHNP (WDT that))
                                        (, ,)
                                        (S
                                          (VP (TO to)
                                            (VP (VB say)
                                              (NP
                                                (NP (DT the) (JJS least))
                                                (PP (IN of)
                                                  (NP (PRP it)))))))))))))))))))))
            (, ,))
          (VP (MD would)
            (VP (VB have)
              (S
                (ADJP (VBN prejudiced))))))))
    (NP
      (NP (DT no) (NN one))
      (PP (IN in)
        (NP
          (NP (NN favour))
          (PP (IN of)
            (NP (PRP$ his) (NN handiwork))))))
    (. .)))

poss(shoes-4, Your-2)
amod(shoes-4, own-3)
nsubj(good-8, shoes-4)
cop(good-8, are-5)
neg(good-8, n't-6)
advmod(good-8, very-7)
ccomp(said-13, good-8)
dep(good-8, Hector-10)
root(ROOT-0, said-13)
nsubj(casting-19, Willie-14)
nsubj(have-47, Willie-14)
aux(casting-19, had-17)
aux(casting-19, been-18)
rcmod(Willie-14, casting-19)
dobj(casting-19, glances-20)
prep_from(glances-20, time-22)
prep_to(casting-19, time-24)
nsubjpass(shod-33, time-24)
poss(companion-27, his-26)
poss(feet-29, companion-27)
prep_at(time-24, feet-29)
auxpass(shod-33, were-32)
rcmod(time-24, shod-33)
det(manner-36, a-35)
prep_in(shod-33, manner-36)
nsubj(say-40, manner-36)
aux(say-40, to-39)
rcmod(manner-36, say-40)
vmod(manner-36, say-40)
det(least-42, the-41)
dobj(say-40, least-42)
prep_of(least-42, it-44)
aux(have-47, would-46)
ccomp(said-13, have-47)
dep(have-47, prejudiced-48)
neg(one-50, no-49)
nsubj(said-13, one-50)
prep_in(one-50, favour-52)
poss(handiwork-55, his-54)
prep_of(favour-52, handiwork-55)

(ROOT
  (S (`` ``)
    (S
      (VP (VBZ Is) (RB n't)
        (NP (PRP it))
        (S
          (NP (DT an) (NN honour)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP
                    (NP (NNS shoes))
                    (PP (IN for)
                      (NP (PRP yourself)))))))))))
    (VP (VBZ Hector))
    (. ?) ('' '')))

cop(it-4, Is-2)
neg(it-4, n't-3)
csubj(Hector-12, it-4)
det(honour-6, an-5)
dep(it-4, honour-6)
aux(make-8, to-7)
vmod(honour-6, make-8)
dobj(make-8, shoes-9)
prep_for(shoes-9, yourself-11)
root(ROOT-0, Hector-12)

(ROOT
  (SINV (`` ``)
    (S
      (NP (EX There))
      (VP (MD ca) (RB n't)
        (VP (VB be)
          (ADJP (RB much) (JJ honour)
            (PP (IN in)
              (S
                (VP (VBG doing)
                  (NP (NN anything))
                  (PP (IN for)
                    (NP (PRP yourself))))))))))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Hector))
    (, ,) (`` ``)
    (S
      (ADVP (IN so) (RB far) (RB as))
      (NP (PRP I))
      (VP (MD can)
        (VP (VB see))))
    (. .)))

expl(honour-7, There-2)
aux(honour-7, ca-3)
neg(honour-7, n't-4)
cop(honour-7, be-5)
advmod(honour-7, much-6)
ccomp(replied-15, honour-7)
prepc_in(honour-7, doing-9)
dobj(doing-9, anything-10)
prep_for(doing-9, yourself-12)
root(ROOT-0, replied-15)
nsubj(replied-15, Hector-16)
advmod(see-24, so-19)
advmod(so-19, far-20)
advmod(so-19, as-21)
nsubj(see-24, I-22)
aux(see-24, can-23)
dep(replied-15, see-24)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBZ confess)
          (SBAR
            (S
              (NP (PRP$ my) (NNS shoes))
              (VP (VBP are)
                (ADJP (RB hardly) (JJ decent)))))))
      (, ,)
      (CC but)
      (S
        (ADVP (RB then))
        (NP (PRP I))
        (VP (MD can)
          (VP (VB make)
            (S
              (NP (PRP myself))
              (NP
                (NP (DT a) (NN pair))
                (PP (IN at)
                  (NP (DT any) (NN time))))))))
      (: ;)
      (CC and)
      (S
        (S
          (ADVP (RB indeed))
          (NP (PRP I))
          (VP (VBP 've)
            (VP (VBN been)
              (VP (VBG thinking)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (MD would)
                      (PP (IN for)
                        (NP (DT the) (JJ last) (CD three) (NNS months))))))
                (, ,)
                (SBAR
                  (ADVP (RB as) (RB soon))
                  (IN as)
                  (S
                    (NP (DT a) (NN slack) (NN time))
                    (VP (VBD came))))))))
        (: ;)
        (CC but)
        (S
          (NP (PRP I))
          (VP (VBP 've)
            (VP (VBN been)
              (ADJP
                (ADJP (RB far) (RB too) (JJ busy))
                (PP (IN as)
                  (ADVP (RB yet)))))))))
    (, ,)
    (CC and)
    (S (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBP do) (RB n't)
            (VP (VB go)
              (PRT (RP out))
              (ADVP (RB much))
              (SBAR (IN till) (IN after)
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (NP (NN dusk)))))))))
      (, ,)
      (NP (NN nobody))
      (VP (VBZ sees)
        (NP (PRP them))))
    (. .) ('' '')))

nsubj(confess-2, I-1)
root(ROOT-0, confess-2)
poss(shoes-4, my-3)
nsubj(decent-7, shoes-4)
cop(decent-7, are-5)
advmod(decent-7, hardly-6)
ccomp(confess-2, decent-7)
advmod(make-13, then-10)
nsubj(make-13, I-11)
aux(make-13, can-12)
conj_but(confess-2, make-13)
nsubj(pair-16, myself-14)
det(pair-16, a-15)
xcomp(make-13, pair-16)
det(time-19, any-18)
prep_at(pair-16, time-19)
advmod(thinking-26, indeed-22)
nsubj(thinking-26, I-23)
aux(thinking-26, 've-24)
aux(thinking-26, been-25)
conj_and(confess-2, thinking-26)
nsubj(would-28, I-27)
ccomp(thinking-26, would-28)
det(months-33, the-30)
amod(months-33, last-31)
num(months-33, three-32)
prep_for(would-28, months-33)
advmod(soon-36, as-35)
advmod(came-41, soon-36)
mark(came-41, as-37)
det(time-40, a-38)
nn(time-40, slack-39)
nsubj(came-41, time-40)
advcl(thinking-26, came-41)
nsubj(busy-49, I-44)
aux(busy-49, 've-45)
cop(busy-49, been-46)
advmod(busy-49, far-47)
advmod(busy-49, too-48)
conj_and(confess-2, busy-49)
conj_but(thinking-26, busy-49)
prep(busy-49, as-50)
pcomp(as-50, yet-51)
mark(go-59, as-55)
nsubj(go-59, I-56)
aux(go-59, do-57)
neg(go-59, n't-58)
advcl(sees-69, go-59)
prt(go-59, out-60)
advmod(go-59, much-61)
mark(dusk-66, till-62)
mark(dusk-66, after-63)
nsubj(dusk-66, it-64)
cop(dusk-66, 's-65)
advcl(go-59, dusk-66)
nsubj(sees-69, nobody-68)
conj_and(confess-2, sees-69)
dobj(sees-69, them-70)

(ROOT
  (S (`` ``)
    (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD should)
          (VP (VB get)
            (NP (PRP$ your) (NNS feet))))))
    (VP
      (VP (VBZ wet))
      (, ,)
      (CC and)
      (VP (VBP catch)
        (ADJP (JJ cold))))
    (. ?) ('' '')))

mark(get-6, if-3)
nsubj(get-6, you-4)
aux(get-6, should-5)
csubj(wet-9, get-6)
csubj(catch-12, get-6)
poss(feet-8, your-7)
dobj(get-6, feet-8)
root(ROOT-0, wet-9)
conj_and(wet-9, catch-12)
acomp(catch-12, cold-13)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (S
    (NP (DT that))
    (VP (MD might)
      (VP (VB be)
        (NP
          (NP (DT the) (NN death))
          (PP (IN of)
            (NP (PRP me))))))
    (. !) ('' '')))

nsubj(death-5, that-1)
aux(death-5, might-2)
cop(death-5, be-3)
det(death-5, the-4)
root(ROOT-0, death-5)
prep_of(death-5, me-7)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Hector)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Hector-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (ADVP (RB really))
    (VP (MD must)
      (VP (VB make)
        (S
          (NP (PRP myself))
          (NP (DT a) (NN pair)))))
    (. .)))

nsubj(make-5, I-2)
advmod(make-5, really-3)
aux(make-5, must-4)
root(ROOT-0, make-5)
nsubj(pair-8, myself-6)
det(pair-8, a-7)
xcomp(make-5, pair-8)

(ROOT
  (S
    (ADVP (RB Well))
    (ADVP (RB now))
    (PRN (: --)
      (S
        (VP (VB let)
          (SBAR
            (S
              (NP (PRP me))
              (VP (VBP see)
                (PRN (: --)
                  (ADVP
                    (ADVP (RB as) (RB soon))
                    (SBAR (IN as)
                      (S
                        (NP (PRP I))
                        (VP (VBP have)
                          (VP (VBN mended)
                            (NP
                              (NP (DT those) (CD two) (NNS pairs))
                              (: --)
                              (S
                                (NP (PRP I))
                                (VP (MD can)
                                  (VP (VB do)
                                    (NP (PRP them))))))))))))
                (NP (DT all) (NN to-morrow)))))))
      (: --))
    (NP (PRP I))
    (VP (MD will)
      (VP (VB begin)))
    (. .)))

advmod(begin-27, Well-1)
advmod(begin-27, now-2)
parataxis(begin-27, let-4)
nsubj(see-6, me-5)
ccomp(let-4, see-6)
advmod(soon-9, as-8)
dep(see-6, soon-9)
mark(mended-13, as-10)
nsubj(mended-13, I-11)
aux(mended-13, have-12)
advcl(soon-9, mended-13)
ccomp(soon-9, mended-13)
det(pairs-16, those-14)
num(pairs-16, two-15)
dobj(mended-13, pairs-16)
nsubj(do-20, I-18)
aux(do-20, can-19)
dep(pairs-16, do-20)
dobj(do-20, them-21)
det(to-morrow-23, all-22)
dobj(see-6, to-morrow-23)
nsubj(begin-27, I-25)
aux(begin-27, will-26)
root(ROOT-0, begin-27)

(ROOT
  (S
    (S (CC And)
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB tell)
          (NP (PRP you))
          (NP (WP what)))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD added))))
    (, ,)
    (PP (IN after)
      (NP (DT a) (JJ thoughtful) (NN pause)))
    (, ,) (`` ``)
    (S
      (S
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (MD 'll)
              (VP (VB come)
                (PP (TO to)
                  (NP
                    (NP (PRP me))
                    (NP (DT the) (NN day))))
                (PP (IN after)
                  (NP (NN to-morrow)))))))
        (, ,)
        (NP (PRP I))
        (VP (MD will)
          (VP
            (VP (VB take)
              (NP (DT that) (NN skin)))
            (, ,)
            (CC and)
            (VP (VB cut)
              (PRT (RP out))
              (NP
                (NP (DT a) (NN pair))
                (PP (IN of)
                  (NP
                    (NP (NNS shoes))
                    (PP (IN for)
                      (NP (PRP myself))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP you))
        (VP (MD shall)
          (VP (VB see)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP I))
                (VP (VBP do)
                  (NP
                    (NP (PRP it))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (NN everything))
                      (PP (IN about)
                        (NP
                          (NP (DT the) (NN making))
                          (PP (IN of)
                            (NP (PRP them))))))
                    (: ;)))))))))
    (: --)
    (S
      (INTJ (UH yes))
      (, ,)
      (NP (PRP you))
      (VP (MD shall)
        (VP (VB do)
          (NP
            (NP (DT some) (NN part))
            (PP (IN of)
              (NP (PRP them))))
          (NP (PRP yourself)))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (MD shall)
        (VP (VB be)
          (NP
            (NP (PRP$ your) (JJ first) (NN lesson))
            (PP (IN in)
              (NP (VBG shoemaking)))))))
    (. .) ('' '')))

nsubj(tell-4, I-2)
aux(tell-4, 'll-3)
root(ROOT-0, tell-4)
iobj(tell-4, you-5)
dobj(tell-4, what-6)
nsubj(added-10, he-9)
dep(tell-4, added-10)
conj_and(tell-4, after-12)
det(pause-15, a-13)
amod(pause-15, thoughtful-14)
prep_after(tell-4, pause-15)
mark(come-21, if-18)
nsubj(come-21, you-19)
aux(come-21, 'll-20)
advcl(take-31, come-21)
prep_to(come-21, me-23)
det(day-25, the-24)
dep(me-23, day-25)
prep_after(come-21, to-morrow-27)
nsubj(take-31, I-29)
nsubj(cut-36, I-29)
aux(take-31, will-30)
conj_and(tell-4, take-31)
det(skin-33, that-32)
dobj(take-31, skin-33)
conj_and(tell-4, cut-36)
conj_and(take-31, cut-36)
prt(cut-36, out-37)
det(pair-39, a-38)
dobj(cut-36, pair-39)
prep_of(pair-39, shoes-41)
prep_for(shoes-41, myself-43)
nsubj(see-48, you-46)
aux(see-48, shall-47)
conj_and(tell-4, see-48)
conj_and(take-31, see-48)
advmod(do-51, how-49)
nsubj(do-51, I-50)
ccomp(see-48, do-51)
dobj(do-51, it-52)
dobj(do-51, everything-55)
conj_and(it-52, everything-55)
det(making-58, the-57)
prep_about(everything-55, making-58)
prep_of(making-58, them-60)
discourse(do-67, yes-63)
nsubj(do-67, you-65)
aux(do-67, shall-66)
conj_and(tell-4, do-67)
det(part-69, some-68)
iobj(do-67, part-69)
prep_of(part-69, them-71)
dobj(do-67, yourself-72)
nsubj(lesson-80, that-75)
aux(lesson-80, shall-76)
cop(lesson-80, be-77)
poss(lesson-80, your-78)
amod(lesson-80, first-79)
conj_and(tell-4, lesson-80)
prep_in(lesson-80, shoemaking-82)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (NNP Dolly))
    (VP (VBZ 's)
      (NP (NNS shoes)))
    (. !) ('' '')))

cc(shoes-5, But-2)
nsubj(shoes-5, Dolly-3)
cop(shoes-5, 's-4)
root(ROOT-0, shoes-5)

(ROOT
  (S
    (VP (VBD suggested)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, suggested-1)
dobj(suggested-1, Willie-2)

(ROOT
  (S (`` ``)
    (NP (NNP Dolly))
    (VP (MD can)
      (VP (VB wait)
        (NP (DT a) (NN bit))))
    (. .)))

nsubj(wait-4, Dolly-2)
aux(wait-4, can-3)
root(ROOT-0, wait-4)
det(bit-6, a-5)
dobj(wait-4, bit-6)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD wo) (RB n't)
      (VP (VB take)
        (S
          (VP (VBG _)
            (NP
              (NP (PRP$ her) (JJ _) (NN death))
              (PP (IN of)
                (NP (NN cold))))
            (PP (IN from)
              (NP (JJ wet) (NNS feet)))))))
    (. .)))

nsubj(take-4, She-1)
aux(take-4, wo-2)
neg(take-4, n't-3)
root(ROOT-0, take-4)
xcomp(take-4, _-5)
poss(death-8, her-6)
amod(death-8, _-7)
dobj(_-5, death-8)
prep_of(death-8, cold-10)
amod(feet-13, wet-12)
prep_from(_-5, feet-13)

(ROOT
  (S (CC And)
    (VP (VB let)
      (S
        (NP (PRP me))
        (VP (VB tell)
          (NP (PRP you))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (JJR harder))
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP
                        (NP (DT a) (JJ small) (NN pair))
                        (CONJP (RB well) (IN than))
                        (NP (DT a) (JJ large) (NN pair))))))))))))
    (. .)))

cc(let-2, And-1)
root(ROOT-0, let-2)
nsubj(tell-4, me-3)
ccomp(let-2, tell-4)
dobj(tell-4, you-5)
nsubj(harder-8, it-6)
nsubj(make-10, it-6)
cop(harder-8, is-7)
dep(tell-4, harder-8)
aux(make-10, to-9)
xcomp(harder-8, make-10)
det(pair-13, a-11)
amod(pair-13, small-12)
dobj(make-10, pair-13)
det(pair-18, a-16)
amod(pair-18, large-17)
dobj(make-10, pair-18)
conj_and(pair-13, pair-18)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (VP (VB do)
        (SBAR
          (S
            (NP (NNP Dolly))
            (VP (VBZ 's)
              (ADVP (RB ever))
              (ADJP (RB so) (RB much) (JJR better))
              (SBAR (IN after)
                (S
                  (NP (PRP you))
                  (VP (VBP know)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (VP (TO to)
                          (VP (VB make)
                            (NP
                              (NP (DT a) (NN pair))
                              (PP (IN for)
                                (NP (PRP me))))))))))))))))
    (. .) ('' '')))

nsubj(do-3, You-1)
aux(do-3, will-2)
root(ROOT-0, do-3)
nsubj(better-9, Dolly-4)
cop(better-9, 's-5)
advmod(better-9, ever-6)
advmod(better-9, so-7)
advmod(better-9, much-8)
ccomp(do-3, better-9)
mark(know-12, after-10)
nsubj(know-12, you-11)
nsubj(make-15, you-11)
advcl(better-9, know-12)
advmod(make-15, how-13)
aux(make-15, to-14)
ccomp(know-12, make-15)
xcomp(know-12, make-15)
det(pair-17, a-16)
dobj(make-15, pair-17)
prep_for(pair-17, me-19)

(ROOT
  (NP (NNP CHAPTER) (NNP VI) (. .)))

nn(VI-2, CHAPTER-1)
root(ROOT-0, VI-2)

(ROOT
  (S
    (NP (NNP HOW) (NNP WILLIE) (NNP LEARNED) (NNP TO) (NNP READ))
    (VP (VBP BEFORE)
      (S
        (NP (PRP HE))
        (VP (VB KNEW)
          (NP (PRP$ HIS) (NNS LETTERS)))))
    (. .)))

nn(READ-5, HOW-1)
nn(READ-5, WILLIE-2)
nn(READ-5, LEARNED-3)
nn(READ-5, TO-4)
nsubj(BEFORE-6, READ-5)
root(ROOT-0, BEFORE-6)
nsubj(KNEW-8, HE-7)
ccomp(BEFORE-6, KNEW-8)
poss(LETTERS-10, HIS-9)
dobj(KNEW-8, LETTERS-10)

(ROOT
  (S
    (NP (DT The) (JJ next) (NN day))
    (NP (PRP$ his) (NNS thoughts))
    (, ,)
    (S
      (VP (VBG having)
        (S
          (NP (NN nothing))
          (ADJP (JJ particular)
            (S
              (VP (TO to)
                (VP (VB engage)
                  (NP (PRP them)))))))))
    (, ,)
    (VP (VBD kept)
      (S
        (VP (VBG brooding)
          (PP (IN over)
            (NP (CD two) (NNS things))))))
    (. .)))

det(day-3, The-1)
amod(day-3, next-2)
tmod(kept-14, day-3)
poss(thoughts-5, his-4)
nsubj(kept-14, thoughts-5)
vmod(kept-14, having-7)
nsubj(particular-9, nothing-8)
nsubj(engage-11, nothing-8)
xcomp(having-7, particular-9)
aux(engage-11, to-10)
xcomp(particular-9, engage-11)
dobj(engage-11, them-12)
root(ROOT-0, kept-14)
xcomp(kept-14, brooding-15)
num(things-18, two-17)
prep_over(brooding-15, things-18)

(ROOT
  (S
    (S
      (NP (DT These) (CD two) (NNS things))
      (VP (VBD came)
        (ADVP (RB together))
        (ADVP (DT all) (IN at) (RB once))))
    (, ,)
    (CC and)
    (S
      (NP (DT a) (NN resolution))
      (VP (VBD was)
        (NP (DT the) (NN consequence))))
    (. .)))

det(things-3, These-1)
num(things-3, two-2)
nsubj(came-4, things-3)
root(ROOT-0, came-4)
advmod(came-4, together-5)
pobj(at-7, all-6)
advmod(came-4, at-7)
advmod(at-7, once-8)
det(resolution-12, a-11)
nsubj(consequence-15, resolution-12)
cop(consequence-15, was-13)
det(consequence-15, the-14)
conj_and(came-4, consequence-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall)
      (ADVP (RB soon))
      (VP (VB explain)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP mean))))))
    (. .)))

nsubj(explain-4, I-1)
aux(explain-4, shall-2)
advmod(explain-4, soon-3)
root(ROOT-0, explain-4)
dobj(mean-7, what-5)
nsubj(mean-7, I-6)
ccomp(explain-4, mean-7)

(ROOT
  (S
    (NP (DT The) (CD one) (NN thing))
    (VP
      (VP (VBD was))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (NNP Hector))
          (VP (VBD had)
            (VP (VBN shown)
              (NP (JJ considerable) (NN surprise))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP he))
                  (VP (VBD found)
                    (SBAR (IN that)
                      (S
                        (NP (NNP Willie))
                        (VP (MD could) (RB not)
                          (VP (VB read)))))))))))))
    (. .)))

det(thing-3, The-1)
num(thing-3, one-2)
nsubj(was-4, thing-3)
root(ROOT-0, was-4)
mark(shown-9, that-6)
nsubj(shown-9, Hector-7)
aux(shown-9, had-8)
ccomp(was-4, shown-9)
amod(surprise-11, considerable-10)
dobj(shown-9, surprise-11)
advmod(found-14, when-12)
nsubj(found-14, he-13)
advcl(shown-9, found-14)
mark(read-19, that-15)
nsubj(read-19, Willie-16)
aux(read-19, could-17)
neg(read-19, not-18)
ccomp(found-14, read-19)

(ROOT
  (S
    (NP (NNP Now) (NNP Willie))
    (VP (VBD was) (RB not)
      (PP (IN in)
        (NP (DT the)
          (ADJP (JJS least) (JJ ashamed))))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD could) (RB not)
            (VP (VB read) (: :)
              (SBARQ
                (WHADVP (WRB why))
                (SQ (MD should)
                  (NP (PRP he))
                  (VP (VB be)))
                (. ?)))))))))

nn(Willie-2, Now-1)
nsubj(was-3, Willie-2)
root(ROOT-0, was-3)
neg(was-3, not-4)
det(ashamed-8, the-6)
dep(ashamed-8, least-7)
prep_in(was-3, ashamed-8)
mark(read-13, that-9)
nsubj(read-13, he-10)
aux(read-13, could-11)
neg(read-13, not-12)
ccomp(was-3, read-13)
advmod(be-18, why-15)
aux(be-18, should-16)
nsubj(be-18, he-17)
ccomp(read-13, be-18)
parataxis(read-13, be-18)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADVP (RB nowhere))
        (VP (VBN written)
          (PP (IN in)
            (NP
              (NP (DT the) (NN catechism))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN learnt)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (VBD was)
                            (NP (PRP$ his) (NN duty)
                              (S
                                (VP (TO to)
                                  (VP (VB be)
                                    (ADJP (JJ able)
                                      (S
                                        (VP (TO to)
                                          (VP (VB read)))))))))))))))))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (DT the) (NN catechism))
          (VP (VBD had)
            (ADVP (RB merely))
            (VP (VBN forgotten)
              (S
                (VP (TO to)
                  (VP (VB mention)
                    (NP (PRP it)))))))))
      (, ,)
      (NP (PRP$ his) (NN father)
        (CC and)
        (NN mother))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN told)
            (NP (PRP him))))))
    (. .)))

nsubjpass(written-4, It-1)
auxpass(written-4, was-2)
advmod(written-4, nowhere-3)
root(ROOT-0, written-4)
det(catechism-7, the-6)
prep_in(written-4, catechism-7)
mark(duty-15, catechism-7)
nsubj(learnt-10, he-8)
aux(learnt-10, had-9)
rcmod(catechism-7, learnt-10)
nsubj(duty-15, it-12)
cop(duty-15, was-13)
poss(duty-15, his-14)
ccomp(learnt-10, duty-15)
aux(able-18, to-16)
cop(able-18, be-17)
vmod(duty-15, able-18)
aux(read-20, to-19)
xcomp(able-18, read-20)
mark(forgotten-28, if-23)
det(catechism-25, the-24)
nsubj(forgotten-28, catechism-25)
nsubj(mention-30, catechism-25)
aux(forgotten-28, had-26)
advmod(forgotten-28, merely-27)
advcl(told-39, forgotten-28)
aux(mention-30, to-29)
xcomp(forgotten-28, mention-30)
dobj(mention-30, it-31)
poss(father-34, his-33)
nsubj(told-39, father-34)
conj_and(father-34, mother-36)
nsubj(told-39, mother-36)
aux(told-39, would-37)
aux(told-39, have-38)
conj_and(written-4, told-39)
dobj(told-39, him-40)

(ROOT
  (S
    (S
      (NP (DT Neither))
      (VP (VBD was)
        (S
          (NP (PRP it))
          (NP
            (NP (DT a) (NN duty))
            (SBAR
              (S
                (NP (PRP he))
                (VP (MD ought)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (VP (VBN known)
                          (PP (IN of)
                            (NP (PRP himself))))))))))))))
    (: --)
    (S
      (PP (IN for)
        (NP (RB then)))
      (NP (PRP he))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN known)
            (NP (PRP it))))))
    (. .)))

nsubj(was-2, Neither-1)
root(ROOT-0, was-2)
nsubj(duty-5, it-3)
det(duty-5, a-4)
xcomp(was-2, duty-5)
nsubj(ought-7, he-6)
nsubj(known-10, he-6)
rcmod(duty-5, ought-7)
aux(known-10, to-8)
aux(known-10, have-9)
xcomp(ought-7, known-10)
prep_of(known-10, himself-12)
prep(known-19, for-14)
pobj(for-14, then-15)
nsubj(known-19, he-16)
aux(known-19, would-17)
aux(known-19, have-18)
parataxis(was-2, known-19)
dobj(known-19, it-20)

(ROOT
  (SBARQ (RB So)
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (PRP he))
      (VP (VB be)
        (ADJP (JJ ashamed))))
    (. ?)))

advmod(ashamed-6, So-1)
advmod(ashamed-6, why-2)
aux(ashamed-6, should-3)
nsubj(ashamed-6, he-4)
cop(ashamed-6, be-5)
root(ROOT-0, ashamed-6)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP are)
      (ADJP (RB often) (JJ ashamed)
        (PP (IN of)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (VBP need) (RB not)
                (VP (VB be)
                  (ADJP (JJ ashamed)
                    (PP (IN of))))))))))
    (. .)))

nsubj(ashamed-4, People-1)
cop(ashamed-4, are-2)
advmod(ashamed-4, often-3)
root(ROOT-0, ashamed-4)
dobj(need-8, what-6)
nsubj(need-8, they-7)
prepc_of(ashamed-4, need-8)
neg(need-8, not-9)
cop(ashamed-11, be-10)
dep(need-8, ashamed-11)
prep(ashamed-11, of-12)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (PRP they))
    (VP
      (VP (VBP are)
        (ADVP (RB often))
        (ADJP
          (ADJP (RB not)
            (ADVP (IN at) (DT all))
            (JJ ashamed))
          (SBAR
            (WHPP (IN of)
              (WHNP (WP what)))
            (S
              (NP (PRP they))
              (VP (MD ought)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ ashamed)
                        (PP (IN of)))))))))))
      (, ,)
      (CC and)
      (VP (MD will)
        (VP (VB turn)
          (PRT (RP up))
          (NP (PRP$ their) (NNS faces))
          (PP (TO to)
            (NP
              (NP (DT the) (NN sun))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP they))
                  (VP (MD ought)
                    (S
                      (VP (TO to)
                        (VP (VB hide)
                          (NP (PRP them))
                          (PP (IN in)
                            (NP (DT the) (NN dust))))))))))))))
    (. .)))

advmod(ashamed-9, Again-1)
nsubj(ashamed-9, they-3)
nsubj(turn-21, they-3)
cop(ashamed-9, are-4)
advmod(ashamed-9, often-5)
neg(ashamed-9, not-6)
advmod(ashamed-9, at-7)
pobj(at-7, all-8)
root(ROOT-0, ashamed-9)
prep_of(ought-13, what-11)
nsubj(ought-13, they-12)
nsubj(ashamed-16, they-12)
ccomp(ashamed-9, ought-13)
aux(ashamed-16, to-14)
cop(ashamed-16, be-15)
xcomp(ought-13, ashamed-16)
prep(ashamed-16, of-17)
aux(turn-21, will-20)
conj_and(ashamed-9, turn-21)
prt(turn-21, up-22)
poss(faces-24, their-23)
dobj(turn-21, faces-24)
det(sun-27, the-26)
prep_to(turn-21, sun-27)
tmod(ought-30, sun-27)
advmod(ought-30, when-28)
nsubj(ought-30, they-29)
nsubj(hide-32, they-29)
rcmod(sun-27, ought-30)
aux(hide-32, to-31)
xcomp(ought-30, hide-32)
dobj(hide-32, them-33)
det(dust-36, the-35)
prep_in(hide-32, dust-36)

(ROOT
  (S
    (S
      (SBAR (IN If) (, ,)
        (PP (IN for)
          (NP (NN instance)))
        (, ,)
        (S
          (NP (NNP Willie))
          (VP (VBD had)
            (ADVP (RB ever))
            (VP (VBN put)
              (PP (IN on)
                (NP
                  (NP (DT a) (JJ sulky) (NN face))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP$ his) (NN mother))
                      (VP (VBD asked)
                        (S
                          (NP (PRP him))
                          (VP (TO to)
                            (VP (VB hold)
                              (NP
                                (NP (DT the) (NN baby))
                                (PP (IN for)
                                  (NP
                                    (NP (PRP her))
                                    (, ,)
                                    (SBAR
                                      (WHNP (WDT that))
                                      (S
                                        (VP (MD would)
                                          (VP (VB have)
                                            (VP (VBN been)
                                              (NP
                                                (NP (DT a) (NN thing))
                                                (PP (IN for)
                                                  (NP (NN shame))))
                                              (SBAR
                                                (SBAR
                                                  (WHPP (IN of)
                                                    (WHNP (WDT which)))
                                                  (S
                                                    (NP
                                                      (NP (DT the) (NN skin))
                                                      (PP (IN of)
                                                        (NP (PRP$ his) (NN face))))
                                                    (VP (MD might)
                                                      (ADVP (RB well))
                                                      (VP (VB try)
                                                        (S
                                                          (VP (TO to)
                                                            (VP (VB burn)
                                                              (NP (PRP itself))
                                                              (PRT (RP off)))))))))
                                                (: ;)
                                                (PRN (CC but)
                                                  (S (RB not)
                                                    (VP (TO to)
                                                      (VP (VB be)
                                                        (ADJP (JJ able)
                                                          (S
                                                            (VP (TO to)
                                                              (VP (VB read)
                                                                (SBAR (IN before)
                                                                  (S
                                                                    (NP (PRP he))
                                                                    (VP (VBD had)
                                                                      (ADVP (RB even))
                                                                      (VP (VBN been)
                                                                        (VP (VBN made)
                                                                          (S
                                                                            (VP (TO to)
                                                                              (VP (VB think)
                                                                                (PP (IN about)
                                                                                  (NP (PRP it)))))))))))))))))))))))))
                                    (, ,))))))))))))))))
      (VP (VBD was) (RB not)
        (ADVP (IN at) (DT all))
        (NP (DT a) (NN thing)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ ashamed)
                  (PP (IN of)))))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (NP
              (NP (JJR more))
              (PP (IN of)
                (NP (DT a) (NN shame)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ ashamed))))))))))))
    (. .)))

mark(put-9, If-1)
prep_for(put-9, instance-4)
nsubj(put-9, Willie-6)
aux(put-9, had-7)
advmod(put-9, ever-8)
csubj(thing-72, put-9)
det(face-13, a-11)
amod(face-13, sulky-12)
prep_on(put-9, face-13)
tmod(asked-17, face-13)
advmod(asked-17, when-14)
poss(mother-16, his-15)
nsubj(asked-17, mother-16)
rcmod(face-13, asked-17)
dobj(asked-17, him-18)
nsubj(hold-20, him-18)
aux(hold-20, to-19)
xcomp(asked-17, hold-20)
det(baby-22, the-21)
dobj(hold-20, baby-22)
prep_for(baby-22, her-24)
nsubj(thing-31, her-24)
aux(thing-31, would-27)
aux(thing-31, have-28)
cop(thing-31, been-29)
det(thing-31, a-30)
rcmod(her-24, thing-31)
prep_for(thing-31, shame-33)
prep_of(try-43, which-35)
det(skin-37, the-36)
nsubj(try-43, skin-37)
nsubj(burn-45, skin-37)
poss(face-40, his-39)
prep_of(skin-37, face-40)
aux(try-43, might-41)
advmod(try-43, well-42)
dep(thing-31, try-43)
aux(burn-45, to-44)
xcomp(try-43, burn-45)
dobj(burn-45, itself-46)
prt(burn-45, off-47)
cc(able-53, but-49)
neg(able-53, not-50)
aux(able-53, to-51)
cop(able-53, be-52)
dep(try-43, able-53)
aux(read-55, to-54)
xcomp(able-53, read-55)
mark(made-61, before-56)
nsubjpass(made-61, he-57)
nsubj(think-63, he-57)
aux(made-61, had-58)
advmod(made-61, even-59)
auxpass(made-61, been-60)
advcl(read-55, made-61)
aux(think-63, to-62)
xcomp(made-61, think-63)
prep_about(think-63, it-65)
cop(thing-72, was-67)
neg(thing-72, not-68)
advmod(thing-72, at-69)
pobj(at-69, all-70)
det(thing-72, a-71)
root(ROOT-0, thing-72)
aux(ashamed-75, to-73)
cop(ashamed-75, be-74)
vmod(thing-72, ashamed-75)
prep(ashamed-75, of-76)
nsubj(more-82, it-78)
aux(more-82, would-79)
aux(more-82, have-80)
cop(more-82, been-81)
parataxis(thing-72, more-82)
det(shame-85, a-84)
prep_of(more-82, shame-85)
aux(ashamed-88, to-86)
cop(ashamed-88, be-87)
vmod(shame-85, ashamed-88)

(ROOT
  (S
    (SBAR (RB Now) (IN that)
      (S
        (NP (PRP it))
        (VP (VBD had)
          (VP (VBN been)
            (VP (VBN put)
              (PP (IN into)
                (NP (PRP$ his) (NN head)))
              (, ,)
              (ADVP (RB however))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB think)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (DT a) (JJ good) (NN thing) (NN reading))
                        (VP (VBD was))))))))))))
    (, ,)
    (NP (PDT all) (DT this))
    (VP (MD would)
      (VP (VB apply)
        (ADVP (RB no) (RB longer))))
    (. .)))

advmod(put-6, Now-1)
mark(put-6, that-2)
nsubjpass(put-6, it-3)
nsubj(think-14, it-3)
aux(put-6, had-4)
auxpass(put-6, been-5)
advcl(apply-25, put-6)
poss(head-9, his-8)
prep_into(put-6, head-9)
advmod(put-6, however-11)
aux(think-14, to-13)
xcomp(put-6, think-14)
dobj(was-20, what-15)
det(reading-19, a-16)
amod(reading-19, good-17)
nn(reading-19, thing-18)
nsubj(was-20, reading-19)
ccomp(think-14, was-20)
predet(this-23, all-22)
nsubj(apply-25, this-23)
aux(apply-25, would-24)
root(ROOT-0, apply-25)
neg(longer-27, no-26)
advmod(apply-25, longer-27)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a)
        (ADJP (RB very) (JJ different))
        (NN thing))
      (ADVP (RB now)))
    (. .)))

nsubj(thing-6, It-1)
cop(thing-6, was-2)
det(thing-6, a-3)
advmod(different-5, very-4)
amod(thing-6, different-5)
root(ROOT-0, thing-6)
advmod(thing-6, now-7)

(ROOT
  (FRAG
    (NP
      (NP (DT The) (JJ other) (NN subject))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBD occupied)
            (SBAR
              (S
                (NP (PRP$ his) (NNS thoughts))
                (VP (VBD was)
                  (NP (DT this)))))))))
    (: :)
    (S
      (NP (NN Everybody))
      (VP
        (VP (VBD was)
          (ADJP (RB so) (JJ kind))
          (PP (TO to)
            (NP (PRP him))))
        (PRN (: --)
          (ADJP (RB so) (JJ ready)
            (S
              (VP (TO to)
                (VP (VB do)
                  (NP
                    (NP (NNS things))
                    (PP (IN for)
                      (NP (PRP him))))))))
          (: --))
        (CC and)
        (VP (, ,)
          (SBAR
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD was)
                  (PP (IN of)
                    (NP
                      (ADJP (RB far) (JJR more))
                      (NN consequence)))
                  (, ,)
                  (S
                    (VP (TO to)
                      (VP (VB teach)
                        (S
                          (NP (PRP him))
                          (VP (TO to)
                            (VP (VB do)
                              (NP (PRP them))
                              (NP (PRP himself)))))))))))
            (: ;)
            (SBAR (IN while)
              (S
                (NP (PRP he))
                (, ,)
                (SBAR
                  (ADVP (RB so) (RB far))
                  (IN as)
                  (S
                    (NP (PRP he))
                    (VP (MD could)
                      (VP (VB think)))))
                (, ,)
                (VP (VBD did)
                  (NP (NN nothing))
                  (PP (IN for)
                    (NP (NN anybody))))))))))
    (. !)))

det(subject-3, The-1)
amod(subject-3, other-2)
root(ROOT-0, subject-3)
nsubj(occupied-5, subject-3)
rcmod(subject-3, occupied-5)
poss(thoughts-7, his-6)
nsubj(this-9, thoughts-7)
cop(this-9, was-8)
ccomp(occupied-5, this-9)
nsubj(kind-14, Everybody-11)
cop(kind-14, was-12)
advmod(kind-14, so-13)
dep(subject-3, kind-14)
prep_to(kind-14, him-16)
advmod(ready-19, so-18)
dep(kind-14, ready-19)
aux(do-21, to-20)
xcomp(ready-19, do-21)
dobj(do-21, things-22)
prep_for(things-22, him-24)
nsubj(was-29, what-28)
nsubj(teach-36, what-28)
dep(subject-3, was-29)
conj_and(kind-14, was-29)
advmod(more-32, far-31)
amod(consequence-33, more-32)
prep_of(was-29, consequence-33)
aux(teach-36, to-35)
xcomp(was-29, teach-36)
dobj(teach-36, him-37)
nsubj(do-39, him-37)
aux(do-39, to-38)
xcomp(teach-36, do-39)
iobj(do-39, them-40)
dobj(do-39, himself-41)
mark(did-53, while-43)
nsubj(did-53, he-44)
advmod(far-47, so-46)
advmod(think-51, far-47)
mark(think-51, as-48)
nsubj(think-51, he-49)
aux(think-51, could-50)
dep(did-53, think-51)
dep(was-29, did-53)
dobj(did-53, nothing-54)
prep_for(did-53, anybody-56)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (MD could) (RB not)
        (VP (VB be)
          (ADJP (JJ right)))))
    (: ;)
    (S
      (NP (PRP it))
      (ADVP (RB _))
      (VP (MD could)
        (ADVP (RB _))
        (RB not)
        (VP (VB be))))
    (: --)
    (SBAR (IN for)
      (S
        (NP (PRP it))
        (VP (VBD was) (RB not)
          (ADJP (JJ reasonable)))))
    (. .)))

nsubj(right-5, That-1)
aux(right-5, could-2)
neg(right-5, not-3)
cop(right-5, be-4)
root(ROOT-0, right-5)
nsubj(be-12, it-7)
advmod(be-12, _-8)
aux(be-12, could-9)
advmod(be-12, _-10)
neg(be-12, not-11)
parataxis(right-5, be-12)
mark(reasonable-18, for-14)
nsubj(reasonable-18, it-15)
cop(reasonable-18, was-16)
neg(reasonable-18, not-17)
parataxis(right-5, reasonable-18)

(ROOT
  (FRAG (RB Not)
    (VP (TO to)
      (VP (VB mention)
        (NP (PRP$ his) (NN father)
          (CC and)
          (NN mother))
        (PRN (, ,)
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP
                (NP (NNP Mrs) (NNP Wilson))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD had)
                      (VP
                        (VP (VBN taught)
                          (NP (PRP him))
                          (PP (TO to)
                            (ADJP (VBN knit))))
                        (, ,)
                        (CC and)
                        (ADVP (RB even))
                        (VP (VBN given)
                          (NP (PRP him))
                          (NP
                            (NP (DT a) (JJ few) (NNS lessons))
                            (PP (IN in)
                              (S
                                (VP (VBG spinning)))))))))))))
          (, ,))
        (SBAR (IN though)
          (S
            (S
              (S
                (NP (DT that))
                (VP (VBD had) (RB not)
                  (VP (VBN come)
                    (PP (TO to)
                      (NP (RB much))))))
              (: ;)
              (CC and)
              (S
                (NP (RB here))
                (VP (VBD was)
                  (NP
                    (NP (NNP Hector) (NNP Macallaster))
                    (VP (VBG going)
                      (S
                        (VP (TO to)
                          (VP (VB teach)
                            (S
                              (NP (PRP him))
                              (VP (TO to)
                                (VP (VB make)
                                  (NP (NNS shoes)))))))))))))
            (: ;)
            (CC and)
            (RB not)
            (S
              (NP
                (NP (CD one) (NN thing))
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (MD could)
                      (VP (VB think)
                        (PP (IN of)))))))
              (VP (VBD was)
                (S
                  (NP (PRP he))
                  (ADJP (JJ capable)
                    (PP (IN of)
                      (S
                        (VP (VBG doing)
                          (PP (IN in)
                            (NP (NN return))))))))))))))
    (. !)))

neg(mention-3, Not-1)
aux(mention-3, to-2)
root(ROOT-0, mention-3)
poss(father-5, his-4)
dobj(mention-3, father-5)
dobj(mention-3, mother-7)
conj_and(father-5, mother-7)
expl(was-10, there-9)
parataxis(mention-3, was-10)
nn(Wilson-12, Mrs-11)
nsubj(was-10, Wilson-12)
nsubj(taught-16, Wilson-12)
nsubj(given-23, Wilson-12)
aux(taught-16, had-15)
rcmod(Wilson-12, taught-16)
dobj(taught-16, him-17)
prep_to(taught-16, knit-19)
advmod(given-23, even-22)
rcmod(Wilson-12, given-23)
conj_and(taught-16, given-23)
iobj(given-23, him-24)
det(lessons-27, a-25)
amod(lessons-27, few-26)
dobj(given-23, lessons-27)
prepc_in(lessons-27, spinning-29)
mark(come-35, though-31)
nsubj(come-35, that-32)
aux(come-35, had-33)
neg(come-35, not-34)
advcl(mention-3, come-35)
prep(come-35, to-36)
pobj(to-36, much-37)
nsubj(Macallaster-43, here-40)
cop(Macallaster-43, was-41)
nn(Macallaster-43, Hector-42)
advcl(mention-3, Macallaster-43)
conj_and(come-35, Macallaster-43)
vmod(Macallaster-43, going-44)
aux(teach-46, to-45)
xcomp(going-44, teach-46)
dobj(teach-46, him-47)
nsubj(make-49, him-47)
aux(make-49, to-48)
xcomp(teach-46, make-49)
dobj(make-49, shoes-50)
neg(was-61, not-53)
num(thing-55, one-54)
nsubj(was-61, thing-55)
mark(think-59, that-56)
nsubj(think-59, he-57)
aux(think-59, could-58)
dep(thing-55, think-59)
prep(think-59, of-60)
advcl(mention-3, was-61)
conj_and(come-35, was-61)
nsubj(capable-63, he-62)
xcomp(was-61, capable-63)
prepc_of(capable-63, doing-65)
prep_in(doing-65, return-67)

(ROOT
  (S
    (NP (DT This))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN looked)
          (PP (IN into))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (NNS things))
              (VP (MD could) (RB not)
                (VP (VB be)
                  (VP (VBN allowed)
                    (S
                      (VP (TO to)
                        (VP (VB go)
                          (PRT (RP on))
                          (PP (IN like)
                            (NP (DT that))))))))))))))
    (. .)))

nsubjpass(looked-4, This-1)
aux(looked-4, must-2)
auxpass(looked-4, be-3)
root(ROOT-0, looked-4)
prep(looked-4, into-5)
mark(allowed-12, for-7)
nsubjpass(allowed-12, things-8)
nsubj(go-14, things-8)
aux(allowed-12, could-9)
neg(allowed-12, not-10)
auxpass(allowed-12, be-11)
advcl(looked-4, allowed-12)
aux(go-14, to-13)
xcomp(allowed-12, go-14)
prt(go-14, on-15)
prep_like(go-14, that-17)

(ROOT
  (S
    (ADVP (DT All)
      (PP (IN at)
        (ADVP (RB once))))
    (NP (PRP it))
    (VP (VBD struck)
      (NP (PRP him))
      (SBAR
        (SBAR (IN that)
          (S
            (NP (NNP Hector))
            (VP (VBD had)
              (VP (VBN said) (, ,)
                (PP (IN with)
                  (NP
                    (NP (DT some) (NN regret))
                    (PP (IN in)
                      (NP (PRP$ his) (NN voice)))))))))
        (, ,)
        (SBAR (IN that)
          (S
            (SBAR (IN though)
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (NP
                    (NP (RB plenty))
                    (PP (IN of)
                      (NP (NN time)))
                    (S
                      (VP (TO to)
                        (VP (VB think))))))))
            (, ,)
            (NP (PRP he))
            (VP (VBD had)
              (NP
                (ADJP (RB very) (JJ little))
                (NN time))
              (S
                (VP (TO to)
                  (VP (VB read)))))))
        (: ;)
        (SBAR
          (ADVP (RB also))
          (IN that)
          (S
            (SBAR (IN although)
              (S
                (NP (PRP he))
                (VP (MD could)
                  (VP (VB see)
                    (ADVP (RB well) (RB enough))
                    (PP (IN by)
                      (NP (NN candlelight)))
                    (S
                      (VP (TO to)
                        (VP (VB work)
                          (PP (IN at)
                            (NP (PRP$ his) (NN trade))))))))))
            (, ,)
            (NP (PRP he))
            (VP (MD could) (RB not)
              (VP (VB see)
                (ADVP (RB well) (RB enough))
                (S
                  (VP (TO to)
                    (VP (VB read))))))))))
    (. .)))

advmod(struck-5, All-1)
prep(All-1, at-2)
pcomp(at-2, once-3)
nsubj(struck-5, it-4)
root(ROOT-0, struck-5)
dobj(struck-5, him-6)
mark(said-10, that-7)
nsubj(said-10, Hector-8)
aux(said-10, had-9)
dep(struck-5, said-10)
det(regret-14, some-13)
prep_with(said-10, regret-14)
poss(voice-17, his-16)
prep_in(regret-14, voice-17)
mark(had-30, that-19)
mark(had-22, though-20)
nsubj(had-22, he-21)
advcl(had-30, had-22)
dobj(had-22, plenty-23)
prep_of(plenty-23, time-25)
aux(think-27, to-26)
vmod(plenty-23, think-27)
nsubj(had-30, he-29)
dep(said-10, had-30)
advmod(little-32, very-31)
amod(time-33, little-32)
dobj(had-30, time-33)
aux(read-35, to-34)
vmod(had-30, read-35)
advmod(see-56, also-37)
mark(see-56, that-38)
mark(see-42, although-39)
nsubj(see-42, he-40)
nsubj(work-48, he-40)
aux(see-42, could-41)
advcl(see-56, see-42)
advmod(enough-44, well-43)
advmod(see-42, enough-44)
prep_by(see-42, candlelight-46)
aux(work-48, to-47)
xcomp(see-42, work-48)
poss(trade-51, his-50)
prep_at(work-48, trade-51)
nsubj(see-56, he-53)
nsubj(read-60, he-53)
aux(see-56, could-54)
neg(see-56, not-55)
dep(said-10, see-56)
advmod(enough-58, well-57)
advmod(see-56, enough-58)
aux(read-60, to-59)
xcomp(see-56, read-60)

(ROOT
  (FRAG
    (SBAR
      (X
        (X (WP What))
        (NP (DT a) (JJ fine) (NN thing)))
      (S
        (NP (PRP it))
        (VP (MD would)
          (VP (VB be)
            (S
              (VP (TO to)
                (VP (VB learn)
                  (S
                    (VP (TO to)
                      (VP (VB read)
                        (PP (TO to)
                          (NP (NNP Hector)))))))))))))
    (. !)))

dep(thing-4, What-1)
det(thing-4, a-2)
amod(thing-4, fine-3)
dep(be-7, thing-4)
nsubj(be-7, it-5)
nsubj(learn-9, it-5)
nsubj(read-11, it-5)
aux(be-7, would-6)
root(ROOT-0, be-7)
aux(learn-9, to-8)
xcomp(be-7, learn-9)
aux(read-11, to-10)
xcomp(learn-9, read-11)
prep_to(read-11, Hector-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (NP (JJ such) (NN fun)
          (S
            (VP (TO to)
              (VP (VB surprise)
                (NP (PRP him))
                (ADVP (RB too))
                (, ,)
                (PP (IN by)
                  (S
                    (VP
                      (ADVP (DT all) (IN at) (RB once))
                      (VBG reading)
                      (S
                        (NP (PRP him))
                        (NP (NN something))))))))))))
    (. !)))

nsubj(fun-5, It-1)
aux(fun-5, would-2)
cop(fun-5, be-3)
amod(fun-5, such-4)
root(ROOT-0, fun-5)
aux(surprise-7, to-6)
vmod(fun-5, surprise-7)
dobj(surprise-7, him-8)
advmod(surprise-7, too-9)
pobj(at-13, all-12)
advmod(reading-15, at-13)
advmod(at-13, once-14)
prepc_by(surprise-7, reading-15)
nsubj(something-17, him-16)
xcomp(reading-15, something-17)

(ROOT
  (S
    (NP (DT The) (NN sun))
    (VP (VBD was) (RB not)
      (PP (IN at)
        (NP (PRP$ his) (JJ full) (NN height)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NNP Willie))
          (VP (VBD received)
            (NP (DT this) (NN illumination))))))
    (. .)))

det(sun-2, The-1)
nsubj(was-3, sun-2)
root(ROOT-0, was-3)
neg(was-3, not-4)
poss(height-8, his-6)
amod(height-8, full-7)
prep_at(was-3, height-8)
advmod(received-11, when-9)
nsubj(received-11, Willie-10)
advcl(was-3, received-11)
det(illumination-13, this-12)
dobj(received-11, illumination-13)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (DT the) (NN sun))
        (VP (VBD went)
          (PRT (RP down)))))
    (NP (PRP he))
    (VP
      (VP (VBD knew))
      (CC and)
      (VP (MD could)
        (VP (VB read)
          (PP (IN at)
            (NP
              (QP (RB sight) (IN at) (JJS least) (DT a) (NN dozen))
              (NNS words))))))
    (. .)))

mark(went-4, Before-1)
det(sun-3, the-2)
nsubj(went-4, sun-3)
advcl(knew-7, went-4)
prt(went-4, down-5)
nsubj(knew-7, he-6)
nsubj(read-10, he-6)
root(ROOT-0, knew-7)
aux(read-10, could-9)
conj_and(knew-7, read-10)
quantmod(dozen-16, sight-12)
quantmod(dozen-16, at-13)
quantmod(dozen-16, least-14)
quantmod(dozen-16, a-15)
num(words-17, dozen-16)
prep_at(read-10, words-17)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (DT the) (NN moment)))
      (NP (PRP he))
      (VP (VBD saw)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP (VB learn)
                    (S
                      (VP (TO to)
                        (VP (VB read))))))))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD ran)
        (PP (TO to)
          (NP (PRP$ his) (NN mother))))
      (, ,)
      (CC and)
      (VP (VBD asked)
        (S
          (NP (PRP her))
          (VP (TO to)
            (VP (VB teach)
              (NP (PRP him)))))))
    (. .)))

det(moment-3, the-2)
prep_for(saw-5, moment-3)
nsubj(saw-5, he-4)
ccomp(ran-15, saw-5)
mark(ought-8, that-6)
nsubj(ought-8, he-7)
nsubj(learn-10, he-7)
nsubj(read-12, he-7)
ccomp(saw-5, ought-8)
aux(learn-10, to-9)
xcomp(ought-8, learn-10)
aux(read-12, to-11)
xcomp(learn-10, read-12)
nsubj(ran-15, he-14)
nsubj(asked-21, he-14)
root(ROOT-0, ran-15)
poss(mother-18, his-17)
prep_to(ran-15, mother-18)
conj_and(ran-15, asked-21)
dobj(asked-21, her-22)
nsubj(teach-24, her-22)
aux(teach-24, to-23)
xcomp(asked-21, teach-24)
dobj(teach-24, him-25)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADJP (JJ delighted))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN begun)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP
                      (NP (DT a) (RB little))
                      (JJ doubtful))
                    (SBAR (IN whether)
                      (S
                        (NP
                          (NP
                            (NP (PRP$ his) (NN father) (POS 's))
                            (NN plan))
                          (PP (IN of)
                            (S
                              (VP (VBG leaving)
                                (S
                                  (NP (PRP him))
                                  (ADJP (RB alone)))
                                (SBAR (IN till)
                                  (S
                                    (NP (PRP he))
                                    (VP (VBD wanted)
                                      (S
                                        (VP (TO to)
                                          (VP (VB learn)))))))))))
                        (VP (VBD was)
                          (NP (DT the) (JJ right) (NN one)))))))))))))
    (. .)))

nsubj(delighted-3, She-1)
cop(delighted-3, was-2)
root(ROOT-0, delighted-3)
mark(begun-8, for-5)
nsubj(begun-8, she-6)
nsubj(doubtful-13, she-6)
aux(begun-8, had-7)
advcl(delighted-3, begun-8)
aux(doubtful-13, to-9)
cop(doubtful-13, be-10)
det(little-12, a-11)
npadvmod(doubtful-13, little-12)
xcomp(begun-8, doubtful-13)
mark(one-31, whether-14)
poss(father-16, his-15)
poss(plan-18, father-16)
nsubj(one-31, plan-18)
prepc_of(plan-18, leaving-20)
nsubj(alone-22, him-21)
xcomp(leaving-20, alone-22)
mark(wanted-25, till-23)
nsubj(wanted-25, he-24)
nsubj(learn-27, he-24)
advcl(leaving-20, wanted-25)
aux(learn-27, to-26)
xcomp(wanted-25, learn-27)
cop(one-31, was-28)
det(one-31, the-29)
amod(one-31, right-30)
ccomp(doubtful-13, one-31)

(ROOT
  (S (CC But)
    (PP (IN at)
      (NP (DT that) (JJ precise) (NN moment)))
    (NP (PRP she))
    (VP (VBD was)
      (ADJP (RB too) (JJ busy)
        (PP (IN with)
          (NP
            (NP (NN something))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD must)
                  (VP (VB be)
                    (VP (VBN done)
                      (PP (IN for)
                        (NP (PRP$ his) (NN father)
                          (S
                            (VP (TO to)
                              (VP
                                (VP (VB lay)
                                  (NP (PRP it))
                                  (PRT (RP down)))
                                (CC and)
                                (VP (VB begin)
                                  (S
                                    (VP (VBG teaching)
                                      (NP (PRP him)))))
                                (NP (PRP$ his) (NNS letters))))))))))))))))
    (. .)))

cc(busy-9, But-1)
det(moment-5, that-3)
amod(moment-5, precise-4)
prep_at(busy-9, moment-5)
nsubj(busy-9, she-6)
cop(busy-9, was-7)
advmod(busy-9, too-8)
root(ROOT-0, busy-9)
prep_with(busy-9, something-11)
nsubjpass(done-15, something-11)
aux(done-15, must-13)
auxpass(done-15, be-14)
rcmod(something-11, done-15)
poss(father-18, his-17)
prep_for(done-15, father-18)
aux(lay-20, to-19)
vmod(father-18, lay-20)
dobj(lay-20, it-21)
prt(lay-20, down-22)
vmod(father-18, begin-24)
conj_and(lay-20, begin-24)
xcomp(begin-24, teaching-25)
dobj(teaching-25, him-26)
poss(letters-28, his-27)
dobj(lay-20, letters-28)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD was)
      (ADJP (RB so) (JJ eager)
        (S
          (VP (TO to)
            (VP (VB learn) (, ,)
              (ADVP (RB however))
              (, ,)
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (MD could) (RB not)
                    (VP (VB rest)
                      (PP (IN without)
                        (S
                          (VP (VBG doing)
                            (NP (NN something))
                            (PP (IN towards)
                              (NP (PRP it)))))))))))))))
    (. .)))

nsubj(eager-4, Willie-1)
nsubj(learn-6, Willie-1)
cop(eager-4, was-2)
advmod(eager-4, so-3)
root(ROOT-0, eager-4)
aux(learn-6, to-5)
xcomp(eager-4, learn-6)
advmod(learn-6, however-8)
mark(rest-14, that-10)
nsubj(rest-14, he-11)
aux(rest-14, could-12)
neg(rest-14, not-13)
ccomp(learn-6, rest-14)
prepc_without(rest-14, doing-16)
dobj(doing-16, something-17)
prep_towards(doing-16, it-19)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBP bethought)
        (NP
          (NP (PRP himself))
          (NP (DT a) (JJ little)))))
    (: --)
    (S
      (NP (RB then))
      (VP
        (VP (VBD ran))
        (CC and)
        (VP (VBD got)
          (NP
            (NP (NNP Dr) (NNP Watts) (POS 's))
            (NNS hymns))
          (PP (IN for)
            (NP (NNS children))))))
    (. .)))

nsubj(bethought-2, He-1)
root(ROOT-0, bethought-2)
dobj(bethought-2, himself-3)
iobj(bethought-2, himself-3)
det(little-5, a-4)
dep(himself-3, little-5)
nsubj(ran-8, then-7)
nsubj(got-10, then-7)
parataxis(bethought-2, ran-8)
parataxis(bethought-2, got-10)
conj_and(ran-8, got-10)
nn(Watts-12, Dr-11)
poss(hymns-14, Watts-12)
dobj(got-10, hymns-14)
prep_for(got-10, children-16)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD knew) (`` ``)
        (SBAR
          (WHADVP (WRB How))
          (S
            (VP (VBP doth)
              (NP (DT the) (JJ little) (JJ busy) (NN bee))
              ('' '')
              (ADVP
                (ADVP (RB so) (RB well))
                (SBAR (IN as)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ able)
                          (S
                            (VP (TO to)
                              (VP (VB repeat)
                                (NP (PRP it))
                                (PP (IN without)
                                  (NP (DT a) (NN mistake)))))))
                        (, ,)
                        (SBAR (IN for)
                          (S
                            (NP (PRP$ his) (NN mother))
                            (VP (VBD had)
                              (VP (VBN taught)
                                (S
                                  (NP (PRP it))
                                  (NP (PRP him)))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN understood)
          (NP (PRP it)))))
    (. .)))

nsubj(knew-2, He-1)
root(ROOT-0, knew-2)
advmod(doth-5, How-4)
ccomp(knew-2, doth-5)
det(bee-9, the-6)
amod(bee-9, little-7)
amod(bee-9, busy-8)
dobj(doth-5, bee-9)
advmod(well-12, so-11)
advmod(doth-5, well-12)
mark(able-16, as-13)
aux(able-16, to-14)
cop(able-16, be-15)
advcl(well-12, able-16)
aux(repeat-18, to-17)
xcomp(able-16, repeat-18)
dobj(repeat-18, it-19)
det(mistake-22, a-21)
prep_without(repeat-18, mistake-22)
mark(taught-28, for-24)
poss(mother-26, his-25)
nsubj(taught-28, mother-26)
aux(taught-28, had-27)
advcl(able-16, taught-28)
nsubj(him-30, it-29)
xcomp(taught-28, him-30)
nsubj(understood-35, he-33)
aux(understood-35, had-34)
conj_and(knew-2, understood-35)
dobj(understood-35, it-36)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP see)))
    (, ,)
    (NP (PRP he))
    (VP (VBD was) (RB not)
      (PP (IN like)
        (NP
          (NP (DT a) (NN child))
          (PP (IN of)
            (NP (CD five)))))
      (, ,)
      (VP (VBN taught)
        (S
          (VP (TO to)
            (VP (VB repeat)
              (PP (IN by)
                (NP
                  (NP (JJ rote) (NNS lines))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD could)
                        (VP (VB give)
                          (NP (PRP him))
                          (NP
                            (NP (DT no) (NNS notions))
                            (PP (CC but)
                              (NP (JJ mistaken) (NNS ones)))))))))))))))
    (. .)))

nsubj(see-2, You-1)
ccomp(taught-13, see-2)
nsubjpass(taught-13, he-4)
nsubj(repeat-15, he-4)
auxpass(taught-13, was-5)
neg(taught-13, not-6)
det(child-9, a-8)
prep_like(taught-13, child-9)
prep_of(child-9, five-11)
root(ROOT-0, taught-13)
aux(repeat-15, to-14)
xcomp(taught-13, repeat-15)
amod(lines-18, rote-17)
prep_by(repeat-15, lines-18)
nsubj(give-21, lines-18)
aux(give-21, could-20)
rcmod(lines-18, give-21)
iobj(give-21, him-22)
neg(notions-24, no-23)
dobj(give-21, notions-24)
prep(notions-24, but-25)
amod(ones-27, mistaken-26)
pobj(but-25, ones-27)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD had)
          (NP
            (NP (DT a) (JJ good) (NN knowledge))
            (PP (IN of)
              (NP (NNS words)))))
        (, ,)
        (CC and)
        (VP (MD could)
          (VP (VB use)
            (NP (PRP them))
            (ADVP (RB well))
            (PP (IN in)
              (NP (NN talk)))
            (, ,)
            (SBAR (IN although)
              (S
                (NP (PRP he))
                (VP (MD could) (RB not)
                  (VP (VB read)))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT a) (JJ great) (NN thing))
        (SBAR (IN if)
          (S
            (NP (DT a) (NN child))
            (VP (MD can)
              (VP (VB talk)
                (ADVP (RB well))
                (SBAR (IN before)
                  (S
                    (NP (PRP he))
                    (VP (VBZ begins)
                      (S
                        (VP (TO to)
                          (VP (VB learn)
                            (S
                              (VP (TO to)
                                (VP (VB read))))))))))))))))
    (. .)))

advmod(had-4, Besides-1)
nsubj(had-4, he-3)
nsubj(use-13, he-3)
root(ROOT-0, had-4)
det(knowledge-7, a-5)
amod(knowledge-7, good-6)
dobj(had-4, knowledge-7)
prep_of(knowledge-7, words-9)
aux(use-13, could-12)
conj_and(had-4, use-13)
dobj(use-13, them-14)
advmod(use-13, well-15)
prep_in(use-13, talk-17)
mark(read-23, although-19)
nsubj(read-23, he-20)
aux(read-23, could-21)
neg(read-23, not-22)
advcl(use-13, read-23)
nsubj(thing-30, it-26)
cop(thing-30, is-27)
det(thing-30, a-28)
amod(thing-30, great-29)
conj_and(had-4, thing-30)
mark(talk-35, if-31)
det(child-33, a-32)
nsubj(talk-35, child-33)
aux(talk-35, can-34)
advcl(thing-30, talk-35)
advmod(talk-35, well-36)
mark(begins-39, before-37)
nsubj(begins-39, he-38)
nsubj(learn-41, he-38)
nsubj(read-43, he-38)
advcl(talk-35, begins-39)
aux(learn-41, to-40)
xcomp(begins-39, learn-41)
aux(read-43, to-42)
xcomp(learn-41, read-43)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD opened)
        (NP (DT the) (JJ little) (NN book))
        (PP (IN at)
          (NP (DT the) (NNP Busy) (NNP Bee)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG knowing)
          (ADJP (RB already) (JJ enough)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB divide)
                          (NP (DT the) (NNS words))
                          (NP
                            (NP (DT the) (NN one))
                            (PP (IN from)
                              (NP (DT the) (JJ other))))))))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD said)
        (PP (TO to)
          (NP (PRP himself)))
        (: --) (`` ``)
        (S
          (NP (DT The) (JJ first) (NN word))
          (VP (MD must)
            (VP (VB be)
              (VP (VBN _)
                (S
                  (ADJP (WRB How) (JJ _)))))))))
    (. .)))

nsubj(opened-2, He-1)
root(ROOT-0, opened-2)
det(book-5, the-3)
amod(book-5, little-4)
dobj(opened-2, book-5)
det(Bee-9, the-7)
nn(Bee-9, Busy-8)
prep_at(opened-2, Bee-9)
vmod(said-29, knowing-12)
advmod(enough-14, already-13)
acomp(knowing-12, enough-14)
aux(able-17, to-15)
cop(able-17, be-16)
xcomp(enough-14, able-17)
aux(divide-19, to-18)
xcomp(able-17, divide-19)
det(words-21, the-20)
iobj(divide-19, words-21)
det(one-23, the-22)
dobj(divide-19, one-23)
det(other-26, the-25)
prep_from(one-23, other-26)
nsubj(said-29, he-28)
conj_and(opened-2, said-29)
prep_to(said-29, himself-31)
det(word-36, The-34)
amod(word-36, first-35)
nsubjpass(_-39, word-36)
aux(_-39, must-37)
auxpass(_-39, be-38)
ccomp(said-29, _-39)
advmod(_-41, How-40)
xcomp(_-39, _-41)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP it))
    (VP (VBZ is) (, ,)
      (PP (IN with)
        (NP (DT a) (NN gap)))
      (PP (IN between)
        (NP
          (NP (PRP it))
          (CC and)
          (NP (DT the) (JJ next) (NN word)))))
    (. .)))

advmod(is-3, There-1)
nsubj(is-3, it-2)
root(ROOT-0, is-3)
det(gap-7, a-6)
prep_with(is-3, gap-7)
prep_between(is-3, it-9)
det(word-13, the-11)
amod(word-13, next-12)
prep_between(is-3, word-13)
conj_and(it-9, word-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB look)
        (CC and)
        (VB see)
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (MD can)
              (VP (VB find)
                (S
                  (NP (DT another) (NN _))
                  (ADJP (WRB How) (JJ _))
                  (ADVP (RB anywhere)))))))))
    (. .) ('' '')))

nsubj(look-3, I-1)
nsubj(see-5, I-1)
aux(look-3, will-2)
root(ROOT-0, look-3)
conj_and(look-3, see-5)
mark(find-9, if-6)
nsubj(find-9, I-7)
aux(find-9, can-8)
advcl(look-3, find-9)
det(_-11, another-10)
nsubj(_-13, _-11)
advmod(_-13, How-12)
xcomp(find-9, _-13)
advmod(_-13, anywhere-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD looked)
        (NP (DT a) (JJ long) (NN time))
        (SBAR (IN before)
          (S
            (NP (PRP he))
            (VP (VBD found)
              (NP (CD one)))))))
    (: ;)
    (S
      (PP (IN for)
        (NP (DT the) (NN capital)))
      (NP (NNP H))
      (VP (VBD was)
        (PP (IN in)
          (NP (DT the) (NN way)))))
    (. .)))

nsubj(looked-2, He-1)
root(ROOT-0, looked-2)
det(time-5, a-3)
amod(time-5, long-4)
dobj(looked-2, time-5)
mark(found-8, before-6)
nsubj(found-8, he-7)
advcl(looked-2, found-8)
dobj(found-8, one-9)
det(capital-13, the-12)
prep_for(was-15, capital-13)
nsubj(was-15, H-14)
parataxis(looked-2, was-15)
det(way-18, the-17)
prep_in(was-15, way-18)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP (NN course)))
      (NP (EX there))
      (VP (VBD were)
        (NP (DT a) (JJ good) (JJ many) (NN _))
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (VBZ 's)
              (ADJP
                (ADJP (JJ _))
                (, ,)
                (CC but)
                (ADJP (RB not) (JJ many)))
              (PP (IN with)
                (NP (DT a) (JJ big) (NNP H))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD did) (RB n't)
        (VP (VB know)
          (SBAR (IN that)
            (S
              (NP (DT the) (JJ little) (JJ _) (NN h) (NN _))
              (VP (VBD was)
                (ADVP (RB just))
                (ADJP (RB as) (JJ good)
                  (PP (IN for)
                    (NP (DT the) (JJ mere) (NN word))))))))))
    (. .)))

prep_of(were-4, course-2)
expl(were-4, there-3)
root(ROOT-0, were-4)
det(_-8, a-5)
amod(_-8, good-6)
amod(_-8, many-7)
nsubj(were-4, _-8)
advmod(_-11, how-9)
cop(_-11, 's-10)
dep(were-4, _-11)
neg(many-15, not-14)
dep(were-4, many-15)
conj_but(_-11, many-15)
det(H-19, a-17)
amod(H-19, big-18)
prep_with(_-11, H-19)
nsubj(know-25, he-22)
aux(know-25, did-23)
neg(know-25, n't-24)
conj_and(were-4, know-25)
mark(good-35, that-26)
det(_-31, the-27)
amod(_-31, little-28)
amod(_-31, _-29)
nn(_-31, h-30)
nsubj(good-35, _-31)
cop(good-35, was-32)
advmod(good-35, just-33)
advmod(good-35, as-34)
ccomp(know-25, good-35)
det(word-39, the-37)
amod(word-39, mere-38)
prep_for(good-35, word-39)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD looked)
        (PP (IN for)
          (NP (JJ _) (NN doth) (NNS _)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD found)
        (NP
          (NP (JJ several) (JJ _) (NN doth) (POS 's))
          (NN _))))
    (. .)))

advmod(looked-3, Then-1)
nsubj(looked-3, he-2)
root(ROOT-0, looked-3)
amod(_-7, _-5)
nn(_-7, doth-6)
prep_for(looked-3, _-7)
nsubj(found-11, he-10)
conj_and(looked-3, found-11)
amod(doth-14, several-12)
amod(doth-14, _-13)
poss(_-16, doth-14)
dobj(found-11, _-16)

(ROOT
  (S
    (PP (IN Of)
      (NP
        (NP (NNP _) (NNP the) (POS 's))
        (NN _)))
    (NP (PRP he))
    (VP (VBD found)
      (PP (IN as)
        (NP (JJ great) (DT a) (NN swarm)))
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP they))
          (VP (VBD had)
            (VP (VBN been)
              (NP
                (NP (DT the) (NNS bees))
                (ADVP (PRP themselves))
                (SBAR
                  (WHPP (IN with)
                    (WHNP (WDT which)))
                  (S
                    (NP (DT the) (JJ little) (NN song))
                    (VP (VBD was)
                      (ADJP (JJ concerned)))))))))))
    (. .)))

nn(the-3, _-2)
poss(_-5, the-3)
prep_of(found-7, _-5)
nsubj(found-7, he-6)
root(ROOT-0, found-7)
amod(swarm-11, great-9)
det(swarm-11, a-10)
prep_as(found-7, swarm-11)
advmod(bees-18, as-12)
mark(bees-18, if-13)
nsubj(bees-18, they-14)
aux(bees-18, had-15)
cop(bees-18, been-16)
det(bees-18, the-17)
advcl(found-7, bees-18)
prep_with(concerned-26, bees-18)
advmod(bees-18, themselves-19)
det(song-24, the-22)
amod(song-24, little-23)
nsubj(concerned-26, song-24)
cop(concerned-26, was-25)
rcmod(bees-18, concerned-26)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP Busy) (NNP _))
      (VP (VBD was)
        (ADJP (JJ scarce))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP am) (RB not)
        (ADJP (JJ sure))
        (SBAR (IN whether)
          (S
            (NP (PRP he))
            (VP (VBD found)
              (NP (PRP it))
              (ADVP (IN at) (DT all)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD looked)
        (PP (IN at)
          (NP (PRP it)))
        (SBAR (IN until)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADJP (RB pretty) (JJ sure)
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (MD should)
                      (VP (VB know)
                        (NP (PRP it))
                        (ADVP (RB again))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP he))
                            (VP (VBD saw)
                              (NP (PRP it)))))))))))))))
    (. .)))

nn(_-3, _-1)
nn(_-3, Busy-2)
nsubj(scarce-5, _-3)
cop(scarce-5, was-4)
root(ROOT-0, scarce-5)
nsubj(sure-10, I-7)
cop(sure-10, am-8)
neg(sure-10, not-9)
conj_but(scarce-5, sure-10)
mark(found-13, whether-11)
nsubj(found-13, he-12)
ccomp(sure-10, found-13)
dobj(found-13, it-14)
advmod(found-13, at-15)
pobj(at-15, all-16)
nsubj(looked-20, he-19)
conj_but(scarce-5, looked-20)
prep_at(looked-20, it-22)
mark(sure-27, until-23)
nsubj(sure-27, he-24)
cop(sure-27, was-25)
advmod(sure-27, pretty-26)
advcl(looked-20, sure-27)
nsubj(know-30, he-28)
aux(know-30, should-29)
ccomp(sure-27, know-30)
dobj(know-30, it-31)
advmod(know-30, again-32)
advmod(saw-35, when-33)
nsubj(saw-35, he-34)
advcl(know-30, saw-35)
dobj(saw-35, it-36)

(ROOT
  (S
    (SBAR (IN After)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN gone)
            (PRT (RP over))
            (PP (IN in)
              (NP
                (NP
                  (NP (DT this) (NN way))
                  (DT every) (NN word))
                (PP (IN of)
                  (NP (DT the) (JJ first) (NN verse)))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD tried)
      (NP (PRP himself))
      (, ,)
      (PP (IN by)
        (S
          (VP (VBG putting)
            (NP (PRP$ his) (NN finger))
            (PP (IN at)
              (S
                (VP
                  (VP (VBG random)
                    (ADVP (RB here)
                      (CC and)
                      (RB there))
                    (PP (IN upon)
                      (NP (PRP it))))
                  (, ,)
                  (CC and)
                  (VP (VBG seeing)
                    (SBAR (IN whether)
                      (S
                        (NP (PRP he))
                        (VP (MD could)
                          (VP (VB tell)
                            (NP
                              (NP (DT the) (NN word))
                              (SBAR
                                (S
                                  (NP (PRP it))
                                  (VP (VBD happened)
                                    (S
                                      (VP (TO to)
                                        (VP (VB touch))))))))))))))))))))
    (. .)))

mark(gone-4, After-1)
nsubj(gone-4, he-2)
aux(gone-4, had-3)
advcl(tried-17, gone-4)
prt(gone-4, over-5)
det(way-8, this-7)
nn(word-10, way-8)
det(word-10, every-9)
prep_in(gone-4, word-10)
det(verse-14, the-12)
amod(verse-14, first-13)
prep_of(word-10, verse-14)
nsubj(tried-17, he-16)
root(ROOT-0, tried-17)
dobj(tried-17, himself-18)
prepc_by(tried-17, putting-21)
poss(finger-23, his-22)
dobj(putting-21, finger-23)
prepc_at(putting-21, random-25)
advmod(random-25, here-26)
advmod(random-25, there-28)
conj_and(here-26, there-28)
prep_upon(random-25, it-30)
prepc_at(putting-21, seeing-33)
conj_and(random-25, seeing-33)
mark(tell-37, whether-34)
nsubj(tell-37, he-35)
aux(tell-37, could-36)
ccomp(seeing-33, tell-37)
det(word-39, the-38)
dobj(tell-37, word-39)
nsubj(happened-41, it-40)
nsubj(touch-43, it-40)
rcmod(word-39, happened-41)
aux(touch-43, to-42)
xcomp(happened-41, touch-43)

(ROOT
  (S
    (S
      (ADVP (RB Sometimes))
      (NP (PRP he))
      (VP (MD could)))
    (, ,)
    (CC and)
    (S
      (ADVP (RB sometimes))
      (NP (PRP he))
      (VP (MD could) (RB n't)))
    (. .)))

advmod(could-3, Sometimes-1)
nsubj(could-3, he-2)
root(ROOT-0, could-3)
advmod(could-8, sometimes-6)
nsubj(could-8, he-7)
conj_and(could-3, could-8)
neg(could-8, n't-9)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBD said) (, ,)
          (SBAR (IN before)
            (S
              (NP (DT the) (NN day))
              (VP (VBD was)
                (ADJP (RP over))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD knew)
      (NP
        (QP (IN at) (JJS least) (DT a))
        (NN dozen) (NNS words))
      (ADVP (RB perfectly) (RB well))
      (PP (IN at)
        (NP (NN sight))))
    (. .)))

advmod(knew-14, However-1)
mark(said-5, as-3)
nsubj(said-5, I-4)
advcl(knew-14, said-5)
mark(over-11, before-7)
det(day-9, the-8)
nsubj(over-11, day-9)
cop(over-11, was-10)
advcl(said-5, over-11)
nsubj(knew-14, he-13)
root(ROOT-0, knew-14)
quantmod(a-17, at-15)
mwe(at-15, least-16)
pobj(at-15, least-16)
num(words-19, a-17)
nn(words-19, dozen-18)
dobj(knew-14, words-19)
advmod(well-21, perfectly-20)
advmod(knew-14, well-21)
prep_at(knew-14, sight-23)

(ROOT
  (FRAG (CC Nor)
    (VP (VB let)
      (SBAR
        (S
          (NP (DT any) (NN one))
          (VP (VBP think)
            (SBAR
              (S
                (NP (DT this))
                (VP (VBD was)
                  (ADJP (JJ other)
                    (PP (IN than)
                      (NP
                        (NP (DT a) (JJ great) (NN step))
                        (PP (IN in)
                          (NP
                            (NP (DT the) (NN direction))
                            (PP (IN of)
                              (NP (NN reading)))))))))))))))
    (. .)))

cc(let-2, Nor-1)
root(ROOT-0, let-2)
det(one-4, any-3)
nsubj(think-5, one-4)
ccomp(let-2, think-5)
nsubj(other-8, this-6)
cop(other-8, was-7)
ccomp(think-5, other-8)
det(step-12, a-10)
amod(step-12, great-11)
prep_than(other-8, step-12)
det(direction-15, the-14)
prep_in(step-12, direction-15)
prep_of(direction-15, reading-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ easy))
        (PP (IN for)
          (NP (NNP Willie)))
        (ADVP (RB afterwards))
        (S
          (VP (TO to)
            (VP (VB break)
              (PRT (RP up))
              (NP (DT these) (NNS words))
              (PP (IN into)
                (NP (NNS letters))))))))
    (. .)))

nsubj(easy-4, It-1)
nsubj(break-9, It-1)
aux(easy-4, would-2)
cop(easy-4, be-3)
root(ROOT-0, easy-4)
prep_for(easy-4, Willie-6)
advmod(easy-4, afterwards-7)
aux(break-9, to-8)
xcomp(easy-4, break-9)
prt(break-9, up-10)
det(words-12, these-11)
dobj(break-9, words-12)
prep_into(break-9, letters-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD took)
      (S
        (NP (PRP him))
        (ADJP
          (NP (CD two) (NNS days))
          (JJR more))
        (PRN (: --)
          (PP (IN for) (IN during)
            (NP
              (NP (NN part))
              (PP (IN of)
                (NP (DT each)))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (VP (VBG learning)
                      (S
                        (VP (TO to)
                          (VP (VB make)
                            (NP (NNS shoes)))))))))))
          (: --))
        (S
          (VP (TO to)
            (VP (VB learn)
              (S
                (VP (TO to)
                  (VP (VB know)
                    (NP
                      (NP (RB anywhere) (DT every) (NN word))
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (VP (VBN found)
                              (PP (IN in)
                                (NP (DT that) (NN hymn))))))))))))))))
    (. .)))

nsubj(took-2, It-1)
root(ROOT-0, took-2)
nsubj(learn-21, him-3)
nsubj(know-23, him-3)
num(days-5, two-4)
tmod(more-6, days-5)
dep(learn-21, more-6)
dep(during-9, for-8)
dep(learn-21, during-9)
pobj(during-9, part-10)
prep_of(part-10, each-12)
nsubj(learning-15, he-13)
nsubj(make-17, he-13)
aux(learning-15, was-14)
rcmod(part-10, learning-15)
aux(make-17, to-16)
xcomp(learning-15, make-17)
dobj(make-17, shoes-18)
aux(learn-21, to-20)
xcomp(took-2, learn-21)
aux(know-23, to-22)
xcomp(learn-21, know-23)
advmod(word-26, anywhere-24)
det(word-26, every-25)
dobj(know-23, word-26)
det(hymn-32, word-26)
nsubj(found-29, he-27)
aux(found-29, had-28)
rcmod(word-26, found-29)
prep_in(found-29, hymn-32)

(ROOT
  (S
    (ADVP (RB Next))
    (NP (PRP he))
    (VP (VBD took)
      (NP
        (NP (DT a) (NN hymn))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD had) (RB not)
              (VP
                (VP (VBN learned))
                (, ,)
                (CC and)
                (VP (VBN applied)
                  (PP (TO to)
                    (NP (PRP$ his) (NN mother)))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP he))
                      (VP (VBD came)
                        (PP (TO to)
                          (NP
                            (NP (DT a) (NN word))
                            (SBAR
                              (S
                                (NP (PRP he))
                                (VP (VBD did) (RB not)
                                  (VP (VB know)))))
                            (, ,)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBD was)
                                  (ADVP (RB very) (RB often)))))))))))))))))
    (. .)))

advmod(took-3, Next-1)
nsubj(took-3, he-2)
root(ROOT-0, took-3)
det(hymn-5, a-4)
dobj(took-3, hymn-5)
nsubj(learned-9, he-6)
nsubj(applied-12, he-6)
aux(learned-9, had-7)
neg(learned-9, not-8)
rcmod(hymn-5, learned-9)
rcmod(hymn-5, applied-12)
conj_and(learned-9, applied-12)
poss(mother-15, his-14)
prep_to(applied-12, mother-15)
advmod(came-18, when-16)
nsubj(came-18, he-17)
advcl(applied-12, came-18)
det(word-21, a-20)
prep_to(came-18, word-21)
nsubj(was-28, word-21)
nsubj(know-25, he-22)
aux(know-25, did-23)
neg(know-25, not-24)
rcmod(word-21, know-25)
rcmod(word-21, was-28)
advmod(often-30, very-29)
advmod(was-28, often-30)

(ROOT
  (S
    (ADVP (RB As) (RB soon)
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD told)
            (S
              (NP (PRP him))
              (NP (PRP one)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBZ hunted)
      (PRT (RP about))
      (SBAR
        (SBAR (IN until)
          (S
            (NP (PRP he))
            (VP (VBD found)
              (NP
                (NP
                  (ADJP (DT another)
                    (CC and)
                    (DT another))
                  (NN specimen))
                (PP (IN of)
                  (NP (DT the) (JJ same)))))))
        (, ,)
        (CC and)
        (SBAR (IN so)
          (S
            (VP (VBD went)
              (PRT (RP on))
              (SBAR (IN until)
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN fixed)
                      (NP (PRP it))
                      (ADVP (RB quite)
                        (PP (IN in)
                          (NP (PRP$ his) (NN mind)))))))))))))
    (. .)))

advmod(soon-2, As-1)
advmod(hunted-10, soon-2)
mark(told-5, as-3)
nsubj(told-5, she-4)
ccomp(soon-2, told-5)
nsubj(one-7, him-6)
xcomp(told-5, one-7)
nsubj(hunted-10, he-9)
root(ROOT-0, hunted-10)
prt(hunted-10, about-11)
mark(found-14, until-12)
nsubj(found-14, he-13)
nsubj(went-25, he-13)
advcl(hunted-10, found-14)
amod(specimen-18, another-15)
conj_and(another-15, another-17)
amod(specimen-18, another-17)
dobj(found-14, specimen-18)
det(same-21, the-20)
prep_of(specimen-18, same-21)
mark(went-25, so-24)
advcl(hunted-10, went-25)
conj_and(found-14, went-25)
prt(went-25, on-26)
mark(fixed-30, until-27)
nsubj(fixed-30, he-28)
aux(fixed-30, had-29)
advcl(went-25, fixed-30)
dobj(fixed-30, it-31)
advmod(fixed-30, quite-32)
poss(mind-35, his-34)
prep_in(quite-32, mind-35)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (NN length)))
      (NP (PRP he))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB compare)
              (NP
                (NP (NNS words))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD were)
                      (PP
                        (PP (IN like)
                          (NP (DT each) (JJ other)))
                        (, ,)
                        (CC and)
                        (PP (IN by)
                          (S
                            (VP (VBG discovering)
                              (SBAR
                                (WHADVP (WRB wherein))
                                (S
                                  (NP (PRP they))
                                  (VP (VBD looked)
                                    (NP (DT the) (JJ same))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB wherein))
        (S
          (NP (PRP they))
          (VP (VBD looked)
            (ADJP (JJ different)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD learned)
        (NP
          (NP (NN something))
          (PP (IN of)
            (NP
              (NP (DT the) (NN sound))
              (PP (IN of)
                (NP (DT the) (NNS letters))))))))
    (. .)))

prep_at(began-4, length-2)
nsubj(began-4, he-3)
nsubj(compare-6, he-3)
root(ROOT-0, began-4)
aux(compare-6, to-5)
xcomp(began-4, compare-6)
dobj(compare-6, words-7)
nsubj(were-9, words-7)
nsubj(were-9', words-7)
rcmod(words-7, were-9)
rcmod(words-7, were-9')
conj_and(were-9, were-9')
det(other-12, each-11)
prep_like(were-9, other-12)
prepc_by(were-9', discovering-16)
advmod(looked-19, wherein-17)
nsubj(looked-19, they-18)
advcl(discovering-16, looked-19)
det(same-21, the-20)
dobj(looked-19, same-21)
advmod(looked-26, wherein-24)
nsubj(looked-26, they-25)
advcl(learned-30, looked-26)
acomp(looked-26, different-27)
nsubj(learned-30, he-29)
conj_and(began-4, learned-30)
dobj(learned-30, something-31)
det(sound-34, the-33)
prep_of(something-31, sound-34)
det(letters-37, the-36)
prep_of(sound-34, letters-37)

(ROOT
  (S
    (PP (IN For)
      (NP (NN instance)))
    (, ,)
    (PP (IN in)
      (S
        (VP
          (VP (VBG comparing)
            (S
              (VP (VBG _)
                (NP (DT the) (NN _)))))
          (CC and)
          (VP (VBG _)
            (NP (DT these) (NN _))))))
    (, ,)
    (SBAR (IN although)
      (S
        (NP
          (NP
            (NP (DT the) (CD one) (NN sound))
            (PP (IN of)
              (NP (DT the) (CD two) (NNS letters))))
          (, ,)
          (NP
            (NP (NNP _) (NNP t) (NNP _))
            (CC and)
            (NP (NNP _) (NNP h) (NNP _)))
          (, ,))
        (VP (VBD puzzled)
          (NP
            (NP (PRP him))
            (, ,)
            (CC and)
            (ADVP (RB likewise))
            (NP (DT the) (JJ silent) (NNP _) (NNP e) (NN _))))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD conjectured)
        (SBAR (IN that)
          (S
            (NP (DT the) (NNP _) (NNP s) (NNP _))
            (VP (MD must)
              (VP (VB stand)
                (PP (IN for)
                  (NP (DT the) (VBG hissing) (NN sound)))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD looked)
            (PP (IN at)
              (NP
                (NP (JJ other) (NNS words))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP
                      (VP (VBD had)
                        (NP (DT that) (NN sound)))
                      (, ,)
                      (CC and)
                      (VP (VBD perceived)
                        (SBAR
                          (S
                            (NP (DT an) (NN _))
                            (VP (VBZ s)
                              (VP (VBN _)
                                (PP (IN in)
                                  (NP
                                    (NP (DT every) (NN one))
                                    (PP (IN of)
                                      (NP (PRP them))))))))))))))))))
      (, ,)
      (ADVP (RB then))
      (NP (PRP he))
      (VP (VBD was)
        (ADJP (JJ sure)
          (PP (IN of)
            (NP (PRP it))))))
    (. .)))

prep_for(conjectured-43, instance-2)
prepc_in(conjectured-43, comparing-5)
vmod(comparing-5, _-6)
det(_-8, the-7)
dobj(_-6, _-8)
conj_and(comparing-5, _-10)
prepc_in(conjectured-43, _-10)
det(_-12, these-11)
dobj(_-10, _-12)
mark(puzzled-31, although-14)
det(sound-17, the-15)
num(sound-17, one-16)
nsubj(puzzled-31, sound-17)
det(letters-21, the-19)
num(letters-21, two-20)
prep_of(sound-17, letters-21)
nn(_-25, _-23)
nn(_-25, t-24)
appos(sound-17, _-25)
nn(_-29, _-27)
nn(_-29, h-28)
appos(sound-17, _-29)
conj_and(_-25, _-29)
advcl(conjectured-43, puzzled-31)
dobj(puzzled-31, him-32)
advmod(_-40, likewise-35)
det(_-40, the-36)
amod(_-40, silent-37)
nn(_-40, _-38)
nn(_-40, e-39)
dobj(puzzled-31, _-40)
conj_and(him-32, _-40)
nsubj(conjectured-43, he-42)
root(ROOT-0, conjectured-43)
mark(stand-50, that-44)
det(_-48, the-45)
nn(_-48, _-46)
nn(_-48, s-47)
nsubj(stand-50, _-48)
aux(stand-50, must-49)
ccomp(conjectured-43, stand-50)
det(sound-54, the-52)
amod(sound-54, hissing-53)
prep_for(stand-50, sound-54)
advmod(looked-59, when-57)
nsubj(looked-59, he-58)
advcl(sure-83, looked-59)
amod(words-62, other-61)
prep_at(looked-59, words-62)
nsubj(had-64, words-62)
nsubj(perceived-69, words-62)
rcmod(words-62, had-64)
det(sound-66, that-65)
dobj(had-64, sound-66)
rcmod(words-62, perceived-69)
conj_and(had-64, perceived-69)
det(_-71, an-70)
nsubjpass(_-73, _-71)
auxpass(_-73, s-72)
ccomp(perceived-69, _-73)
det(one-76, every-75)
prep_in(_-73, one-76)
prep_of(one-76, them-78)
advmod(he-81, then-80)
nsubj(sure-83, he-81)
cop(sure-83, was-82)
conj_and(conjectured-43, sure-83)
prep_of(sure-83, it-85)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN mother))
      (VP (VBD had)
        (NP
          (NP (DT no) (NN idea))
          (SBAR
            (WHADVP (WRB how) (RB fast))
            (S
              (NP (PRP he))
              (VP (VBD was)
                (VP (VBG learning))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (SBAR
            (NP (RB about) (DT a) (NN fortnight))
            (IN after)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN begun)))))
          (, ,)
          (NP (PRP she))
          (VP (VBD was)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB take)
                    (NP (PRP him))
                    (PP (IN in)
                      (NP (NN hand))))))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD found) (, ,)
        (PP (TO to)
          (NP (PRP$ her) (NN astonishment)))
        (, ,)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB read)
                  (NP (DT a) (JJ great) (JJ many) (NNS words))))))
          (, ,)
          (CC but)
          (SBAR (IN that) (, ,)
            (S
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP she))
                  (VP (VBD wished)
                    (S
                      (NP (PRP him))
                      (VP (TO to)
                        (VP (VB spell)
                          (NP (CD one))))))))
              (, ,)
              (NP (PRP he))
              (VP (VBD had)
                (NP
                  (NP (RB not) (DT the) (JJS least) (NN notion))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP she))
                      (VP (VBD meant)))))))))))
    (. .)))

poss(mother-2, His-1)
nsubj(had-3, mother-2)
root(ROOT-0, had-3)
neg(idea-5, no-4)
dobj(had-3, idea-5)
advmod(fast-7, how-6)
advmod(learning-10, fast-7)
nsubj(learning-10, he-8)
aux(learning-10, was-9)
dep(idea-5, learning-10)
advmod(able-24, when-13)
advmod(fortnight-16, about-14)
det(fortnight-16, a-15)
dep(begun-20, fortnight-16)
mark(begun-20, after-17)
nsubj(begun-20, he-18)
aux(begun-20, had-19)
advcl(able-24, begun-20)
nsubj(able-24, she-22)
nsubj(take-26, she-22)
cop(able-24, was-23)
advcl(found-32, able-24)
aux(take-26, to-25)
xcomp(able-24, take-26)
dobj(take-26, him-27)
prep_in(take-26, hand-29)
nsubj(found-32, she-31)
conj_and(had-3, found-32)
poss(astonishment-36, her-35)
prep_to(found-32, astonishment-36)
mark(read-41, that-38)
nsubj(read-41, he-39)
aux(read-41, could-40)
ccomp(found-32, read-41)
det(words-45, a-42)
amod(words-45, great-43)
amod(words-45, many-44)
dobj(read-41, words-45)
mark(had-59, that-48)
advmod(wished-52, when-50)
nsubj(wished-52, she-51)
advcl(had-59, wished-52)
dobj(wished-52, him-53)
nsubj(spell-55, him-53)
aux(spell-55, to-54)
xcomp(wished-52, spell-55)
dobj(spell-55, one-56)
nsubj(had-59, he-58)
ccomp(found-32, had-59)
conj_but(read-41, had-59)
neg(notion-63, not-60)
det(notion-63, the-61)
amod(notion-63, least-62)
dobj(had-59, notion-63)
dobj(meant-66, notion-63)
nsubj(meant-66, she-65)
rcmod(notion-63, meant-66)

(ROOT
  (S (`` ``)
    (S
      (VP (VBZ Is) (RB n't)
        (SBAR (IN that)
          (S
            (NP (DT a) (NN _))
            (VP (VBZ b))))))
    (VP (VBZ _))
    (. ?) ('' '')))

csubj(_-8, Is-2)
neg(Is-2, n't-3)
mark(b-7, that-4)
det(_-6, a-5)
nsubj(b-7, _-6)
ccomp(Is-2, b-7)
root(ROOT-0, _-8)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said) (, ,)
      (S
        (VP (VBG wishing)
          (S
            (VP (TO to)
              (VP (VB help)
                (S
                  (NP (PRP him))
                  (VP (TO to)
                    (VP (VB find)
                      (PRT (RP out))
                      (NP
                        (NP (DT a) (JJ certain) (NN word))
                        (PP (IN for)
                          (NP (PRP himself)))))))))))))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
xcomp(said-2, wishing-4)
aux(help-6, to-5)
xcomp(wishing-4, help-6)
dobj(help-6, him-7)
nsubj(find-9, him-7)
aux(find-9, to-8)
xcomp(help-6, find-9)
prt(find-9, out-10)
det(word-13, a-11)
amod(word-13, certain-12)
dobj(find-9, word-13)
prep_for(word-13, himself-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
ccomp(answered-8, know-5)
root(ROOT-0, answered-8)
nsubj(answered-8, Willie-9)

(ROOT
  (S
    (S (`` ``)
      (S
        (NP (PRP It))
        (VP (VBZ 's) (RB not)
          (NP (DT the) (JJ busy) (NN bee))))
      (, ,) ('' '')
      (NP (PRP he))
      (VP (VBD added) (, ,)
        (S
          (VP (VBG laughing)))))
    (: ;) (: --) (`` ``)
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB know)
          (NP (PRP him)))))
    (. .)))

nsubj(bee-7, It-2)
cop(bee-7, 's-3)
neg(bee-7, not-4)
det(bee-7, the-5)
amod(bee-7, busy-6)
ccomp(added-11, bee-7)
nsubj(added-11, he-10)
root(ROOT-0, added-11)
xcomp(added-11, laughing-13)
nsubj(know-19, I-17)
aux(know-19, should-18)
parataxis(added-11, know-19)
dobj(know-19, him-20)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD must)
        (VP (VB be)
          (NP (DT the) (JJ lazy) (NN one)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP suppose))
    (. .) ('' '')))

nsubj(one-6, It-1)
aux(one-6, must-2)
cop(one-6, be-3)
det(one-6, the-4)
amod(one-6, lazy-5)
ccomp(suppose-9, one-6)
nsubj(suppose-9, I-8)
root(ROOT-0, suppose-9)

(ROOT
  (S (`` ``)
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP know)
      (NP (PRP$ your) (NNS letters)))
    (. ?) ('' '')))

nsubj(know-5, Do-2)
neg(know-5, n't-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
poss(letters-7, your-6)
dobj(know-5, letters-7)

(ROOT
  (S
    (VP (VBD asked)
      (NP (PRP$ his) (NN mother)))
    (. .)))

root(ROOT-0, asked-1)
poss(mother-3, his-2)
dobj(asked-1, mother-3)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH No))
    (, ,)
    (NP (NN mamma))
    (. .)))

discourse(mamma-4, No-2)
root(ROOT-0, mamma-4)

(ROOT
  (SBARQ
    (WHNP (WP Which))
    (SQ (VBP are)
      (NP (PRP they)))
    (. ?)))

root(ROOT-0, Which-1)
cop(Which-1, are-2)
nsubj(Which-1, they-3)

(ROOT
  (FRAG
    (NP
      (NP (NNP Are))
      (SBAR
        (S
          (NP (DT the) (NN rest) (NN yours)
            (CC and)
            (NN papa))
          (VP (VBZ 's)))))
    (. ?) ('' '')))

root(ROOT-0, Are-1)
det(yours-4, the-2)
nn(yours-4, rest-3)
nsubj('s-7, yours-4)
conj_and(yours-4, papa-6)
nsubj('s-7, papa-6)
rcmod(Are-1, 's-7)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP you))
    (VP (VBZ silly)
      (ADJP (RB dear)))
    (. !) ('' '')))

discourse(silly-5, Oh-2)
nsubj(silly-5, you-4)
root(ROOT-0, silly-5)
acomp(silly-5, dear-6)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)

(ROOT
  (S (`` ``)
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP I))
    (VP (VBP am))
    (. !) ('' '')))

prep_of(am-5, course-3)
nsubj(am-5, I-4)
root(ROOT-0, am-5)

(ROOT
  (S
    (S
      (NP (PRP he))
      (VP (VBD returned)))
    (: ;) (: --) (`` ``)
    (S
      (NP (JJ very))
      (VP (VBZ silly)))
    (. !)))

nsubj(returned-2, he-1)
root(ROOT-0, returned-2)
nsubj(silly-7, very-6)
parataxis(returned-2, silly-7)

(ROOT
  (FRAG
    (SBAR
      (WHADVP (WRB How))
      (S
        (VP (MD could)
          (ADVP (RB any)
            (PP (IN of)
              (NP (PRP them))))
          (VP (VB be)
            (NP (NN mine))
            (SBAR (IN before)
              (S
                (NP (PRP I))
                (VP (VBP know)
                  (NP
                    (NP (DT the) (NNS names))
                    (PP (IN of)
                      (NP (PRP them)))))))))))
    (. !)))

advmod(mine-7, How-1)
aux(mine-7, could-2)
advmod(mine-7, any-3)
prep_of(any-3, them-5)
cop(mine-7, be-6)
root(ROOT-0, mine-7)
mark(know-10, before-8)
nsubj(know-10, I-9)
advcl(mine-7, know-10)
det(names-12, the-11)
dobj(know-10, names-12)
prep_of(names-12, them-14)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (S
            (NP (PRP I))
            (VP (VBP know)
              (S
                (NP (PRP them))
                (NP (DT all)))))
          (, ,) (RB then)
          (S
            (NP (PRP they))
            (VP (MD 'll) (RB all)
              (VP (VB be)
                (NP (NN mine)))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP suppose)))
    (: --)
    (CC and)
    (S
      (NP (NN everybody) (RB else))
      (VP (VBZ 's)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ knows)
              (NP (PRP them)))))))
    (. .)))

advmod(know-3, When-1)
nsubj(know-3, I-2)
advcl(suppose-15, know-3)
nsubj(all-5, them-4)
xcomp(know-3, all-5)
advmod(mine-12, then-7)
nsubj(mine-12, they-8)
aux(mine-12, 'll-9)
advmod(mine-12, all-10)
cop(mine-12, be-11)
parataxis(know-3, mine-12)
nsubj(suppose-15, I-14)
root(ROOT-0, suppose-15)
nsubj('s-20, everybody-18)
advmod(everybody-18, else-19)
conj_and(suppose-15, 's-20)
nsubj(knows-22, who-21)
ccomp('s-20, knows-22)
dobj(knows-22, them-23)

(ROOT
  (S (: --)
    (CC So)
    (NP (DT that))
    (VP (VBZ 's)
      (NP
        (NP (NNP Mr) (NNP B))
        (: --)
        (SQ (VBZ is)
          (NP (PRP it)))))
    (. ?) ('' '')))

conj_so(B-6, that-3)
nsubj(B-6, that-3)
cop(B-6, 's-4)
nn(B-6, Mr-5)
root(ROOT-0, B-6)
dep(B-6, is-8)
nsubj(is-8, it-9)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (SINV
    (S (CC And)
      (NP (DT that))
      (VP (VBZ 's)
        (NP (NNP C))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN mother))
    (. .)))

cc(C-4, And-1)
nsubj(C-4, that-2)
cop(C-4, 's-3)
ccomp(said-7, C-4)
root(ROOT-0, said-7)
poss(mother-9, his-8)
nsubj(said-7, mother-9)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ glad)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP
                  (NP (PRP you))
                  (, ,)
                  (NP (NNP Mr) (NNP C)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Willie))
      (PRN (, ,)
        (ADVP (RB merrily))
        (, ,)))
    (S
      (VP (VBG nodding)
        (PP (TO to)
          (NP (DT the) (NN letter)))))
    (. .)))

nsubj(glad-4, I-2)
nsubj(see-6, I-2)
cop(glad-4, 'm-3)
ccomp(said-13, glad-4)
aux(see-6, to-5)
xcomp(glad-4, see-6)
dobj(see-6, you-7)
nn(C-10, Mr-9)
appos(you-7, C-10)
root(ROOT-0, said-13)
nsubj(said-13, Willie-14)
dep(Willie-14, merrily-16)
dep(said-13, nodding-18)
det(letter-21, the-20)
prep_to(nodding-18, letter-21)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD shall)
      (VP (VB know)
        (NP (DT each) (JJ other))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP we))
            (VP (VB meet)
              (ADVP (RB again)))))))
    (. .)))

nsubj(know-4, We-2)
aux(know-4, shall-3)
root(ROOT-0, know-4)
det(other-6, each-5)
dobj(know-4, other-6)
advmod(meet-9, when-7)
nsubj(meet-9, we-8)
advcl(know-4, meet-9)
advmod(meet-9, again-10)

(ROOT
  (S (: --)
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (DT this))
          (VP (VBZ is)
            (NP
              (NP (NNP D))
              (, ,)
              (NP (NN mamma)))))))
    (. .)))

nsubj(suppose-3, I-2)
root(ROOT-0, suppose-3)
nsubj(D-6, this-4)
cop(D-6, is-5)
ccomp(suppose-3, D-6)
appos(D-6, mamma-8)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB How))
      (S
        (NP (NN d') (NNS e))
        (VP (VBP do))))
    (, ,)
    (NP (NNP Mr))
    (VP (VBZ D))
    (. ?)))

advmod(do-4, How-1)
nn(e-3, d'-2)
nsubj(do-4, e-3)
advcl(D-7, do-4)
nsubj(D-7, Mr-6)
root(ROOT-0, D-7)

(ROOT
  (SBARQ (CC And)
    (WHNP (WP what))
    (SQ
      (VP (VBZ 's)
        (NP
          (NP
            (NP (DT this) (NN one))
            (PP (IN with)
              (NP (PRP$ its) (NN mouth) (NN open))))
          (, ,)
          (CC and)
          (NP (PDT half) (PRP$ its) (NN tongue)))
        (VP (VBN cut)
          (PRT (RP off)))))
    (. ?) ('' '')))

cc(cut-15, And-1)
dobj(cut-15, what-2)
nsubjpass(cut-15, what-2)
auxpass(cut-15, 's-3)
cop(cut-15, 's-3)
det(one-5, this-4)
dep(cut-15, one-5)
poss(open-9, its-7)
nn(open-9, mouth-8)
prep_with(one-5, open-9)
predet(tongue-14, half-12)
poss(tongue-14, its-13)
conj_and(one-5, tongue-14)
dep(cut-15, tongue-14)
root(ROOT-0, cut-15)
prt(cut-15, off-16)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN mother))
      (VP (VBD told)
        (NP (PRP him))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP
                (NP (NNP E.))
                (SBAR
                  (S (`` ``) (RB Then)
                    (S
                      (NP
                        (NP (DT this) (NN one))
                        (, ,)
                        (PP (IN with)
                          (NP (DT no) (NN foot)
                            (S
                              (VP (TO to)
                                (VP (VB stand)
                                  (PRT (RP on)))))))
                        (, ,))
                      (VP (VBZ is)
                        (NP (NNP Fe))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP suppose))
    (. .) ('' '')))

poss(mother-2, His-1)
nsubj(told-3, mother-2)
ccomp(suppose-24, told-3)
dobj(told-3, him-4)
nsubj(E.-7, it-5)
cop(E.-7, was-6)
dep(told-3, E.-7)
advmod(Fe-21, Then-9)
det(one-11, this-10)
nsubj(Fe-21, one-11)
neg(foot-15, no-14)
prep_with(one-11, foot-15)
aux(stand-17, to-16)
vmod(foot-15, stand-17)
prt(stand-17, on-18)
cop(Fe-21, is-20)
rcmod(E.-7, Fe-21)
nsubj(suppose-24, I-23)
root(ROOT-0, suppose-24)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN mother))
      (VP (VBD laughed)))
    (: ;)
    (CC but)
    (SINV
      (VP
        (SBAR
          (WHNP (WP whoever))
          (S
            (VP (VBD gave)
              (NP (PRP it))
              (NP
                (NP (DT the) (NN name))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ has))))))))
        (, ,) (MD would)
        (VP (VB have)
          (VP (VBN done)
            (ADVP (RBR better))
            (S
              (VP (TO to)
                (VP (VB call)
                  (NP (PRP it))))))))
      (NP
        (NP (NNP Fe))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (NNP Willie))
            (VP (VBD did))))))
    (. .)))

poss(mother-2, His-1)
nsubj(laughed-3, mother-2)
root(ROOT-0, laughed-3)
nsubj(gave-7, whoever-6)
ccomp(done-16, gave-7)
iobj(gave-7, it-8)
det(name-10, the-9)
dobj(gave-7, name-10)
nsubj(has-12, it-11)
rcmod(name-10, has-12)
aux(done-16, would-14)
aux(done-16, have-15)
conj_but(laughed-3, done-16)
advmod(done-16, better-17)
aux(call-19, to-18)
xcomp(done-16, call-19)
dobj(call-19, it-20)
nsubj(done-16, Fe-21)
nsubj(call-19, Fe-21)
mark(did-25, as-23)
nsubj(did-25, Willie-24)
rcmod(Fe-21, did-25)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB much) (JJR better))
        (ADVP (RB also))
        (, ,)
        (PP (IN in)
          (NP
            (NP
              (NP (NN teaching) (NNS children))
              (, ,)
              (ADVP (IN at) (JJS least)))
            (, ,)
            (S
              (VP (TO to)
                (VP (VB call)
                  (NP
                    (NP (NNP H))
                    (, ,)
                    (NP (PRP He))
                    (, ,)
                    (CC and)
                    (NP (NNP W))
                    (, ,))
                  (NP (PRP We))
                  (, ,)
                  (CC and)
                  (NP (NNP Y) (, ,) (NNP Ye) (, ,)
                    (CC and)
                    (NNP Z)))))
            (, ,)
            (NP
              (NP (NNP Ze))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (NNP Willie))
                  (VP (VBD called)
                    (NP (PRP them))))))))))
    (. .)))

nsubj(better-5, It-1)
aux(better-5, would-2)
cop(better-5, be-3)
advmod(better-5, much-4)
root(ROOT-0, better-5)
advmod(better-5, also-6)
nn(children-10, teaching-9)
prep_in(better-5, children-10)
advmod(children-10, at-12)
pobj(at-12, least-13)
aux(call-16, to-15)
vmod(children-10, call-16)
iobj(call-16, H-17)
iobj(call-16, He-19)
conj_and(H-17, He-19)
iobj(call-16, W-22)
conj_and(H-17, W-22)
dobj(call-16, We-24)
vmod(children-10, Y-27)
conj_and(call-16, Y-27)
dobj(call-16, Y-27)
conj_and(call-16, Ye-29)
dobj(call-16, Ye-29)
conj_and(Y-27, Ye-29)
conj_and(call-16, Z-32)
dobj(call-16, Z-32)
conj_and(Y-27, Z-32)
appos(children-10, Ze-34)
mark(called-38, as-36)
nsubj(called-38, Willie-37)
dep(Ze-34, called-38)
dobj(called-38, them-39)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBD was)
      (ADJP
        (ADJP (RB easy) (RB enough)
          (PP (IN for)
            (NP (PRP him)))
          (S
            (VP (TO to)
              (VP (VB learn)
                (NP (PRP$ their) (NNS names))))))
        (SBAR (IN after)
          (S
            (NP (PRP he))
            (VP (VBD knew)
              (ADVP
                (ADVP (RB so) (RB much))
                (SBAR
                  (WHPP (IN of)
                    (WHNP (WP what)))
                  (S
                    (NP (PRP they))
                    (VP (MD could)
                      (ADVP (RB _))
                      (VP (VB do)
                        (NP (NNS _))))))))))))
    (. .)))

cc(enough-5, But-1)
nsubj(enough-5, it-2)
nsubj(learn-9, it-2)
cop(enough-5, was-3)
advmod(enough-5, easy-4)
root(ROOT-0, enough-5)
prep_for(enough-5, him-7)
aux(learn-9, to-8)
xcomp(enough-5, learn-9)
poss(names-11, their-10)
dobj(learn-9, names-11)
mark(knew-14, after-12)
nsubj(knew-14, he-13)
ccomp(enough-5, knew-14)
advmod(much-16, so-15)
advmod(knew-14, much-16)
prep_of(do-22, what-18)
nsubj(do-22, they-19)
aux(do-22, could-20)
advmod(do-22, _-21)
advcl(much-16, do-22)
dobj(do-22, _-23)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBD gave)
          (NP (PRP him))
          (NP (DT a) (JJ considerable) (NN advantage)))))
    (VP
      (VP (VBD was))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN begun)
              (PP (IN with)
                (NP
                  (UCP
                    (NP (NN verse))
                    (, ,)
                    (CC and)
                    (RB not)
                    (ADJP
                      (ADJP (JJ dry) (JJ syllables))
                      (CC and)
                      (ADJP (JJ stupid))))
                  (NNS sentences))))))))
    (. .)))

nsubj(gave-2, What-1)
csubj(was-7, gave-2)
iobj(gave-2, him-3)
det(advantage-6, a-4)
amod(advantage-6, considerable-5)
dobj(gave-2, advantage-6)
root(ROOT-0, was-7)
mark(begun-12, that-9)
nsubj(begun-12, he-10)
aux(begun-12, had-11)
ccomp(was-7, begun-12)
nn(sentences-22, verse-14)
neg(syllables-19, not-17)
amod(syllables-19, dry-18)
conj_and(verse-14, syllables-19)
nn(sentences-22, syllables-19)
conj_and(verse-14, stupid-21)
conj_and(syllables-19, stupid-21)
prep_with(begun-12, sentences-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NN music))
      (PP (IN of)
        (NP (DT the) (NN verse))))
    (VP (VBD repaid)
      (NP (PRP him))
      (PP (IN at)
        (NP (RB once)))
      (PP (IN for)
        (NP
          (NP (DT the) (NN trouble))
          (PP (IN of)
            (S
              (VP (VBG making)
                (S
                  (NP (PRP it))
                  (ADJP (RB out)))
                (: --)
                (SBAR (RB even) (IN before)
                  (S
                    (NP (PRP he))
                    (VP (VBD got)
                      (PP (IN at)
                        (NP (DT the) (NN meaning)))
                      (, ,)
                      (SBAR (IN while)
                        (S
                          (NP
                            (NP (DT the) (NN necessity))
                            (PP (IN of)
                              (S
                                (VP (VBG making)
                                  (S
                                    (NP (DT each) (NN line))
                                    (VP (VB go)
                                      (ADVP
                                        (ADVP (RB right))
                                        (, ,)
                                        (CC and)
                                        (ADVP
                                          (NP (DT the) (NN rhymes))
                                          (RB too))
                                        (, ,))))))))
                          (VP (VBD helped)
                            (NP (PRP him))
                            (ADVP (RB occasionally))
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN pronunciation))
                                (PP (IN of)
                                  (NP (DT a) (NN word)))))))))))))))))
    (. .)))

det(music-2, The-1)
nsubj(repaid-6, music-2)
det(verse-5, the-4)
prep_of(music-2, verse-5)
root(ROOT-0, repaid-6)
dobj(repaid-6, him-7)
prep(repaid-6, at-8)
pobj(at-8, once-9)
det(trouble-12, the-11)
prep_for(repaid-6, trouble-12)
prepc_of(trouble-12, making-14)
nsubj(out-16, it-15)
xcomp(making-14, out-16)
advmod(got-21, even-18)
mark(got-21, before-19)
nsubj(got-21, he-20)
advcl(making-14, got-21)
parataxis(making-14, got-21)
det(meaning-24, the-23)
prep_at(got-21, meaning-24)
mark(helped-41, while-26)
det(necessity-28, the-27)
nsubj(helped-41, necessity-28)
prepc_of(necessity-28, making-30)
det(line-32, each-31)
nsubj(go-33, line-32)
ccomp(making-30, go-33)
advmod(go-33, right-34)
det(rhymes-38, the-37)
npadvmod(too-39, rhymes-38)
advmod(go-33, too-39)
conj_and(right-34, too-39)
advcl(got-21, helped-41)
dobj(helped-41, him-42)
advmod(helped-41, occasionally-43)
det(pronunciation-46, the-45)
prep_to(helped-41, pronunciation-46)
det(word-49, a-48)
prep_of(pronunciation-46, word-49)

(ROOT
  (S
    (NP
      (NP (DT The) (NN farther))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD got)
            (PRT (RP on))))))
    (, ,)
    (S
      (ADVP (DT the) (RBR faster))
      (NP (PRP he))
      (VP (VBD got)
        (PRT (RP on))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN before)
        (S
          (NP (CD six) (NNS weeks))
          (VP (VBD were)
            (ADJP (RP over)))))
      (, ,)
      (NP (PRP he))
      (VP (MD could)
        (VP (VB read)
          (NP
            (NP (NN anything))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD was)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB understand)
                          (ADVP (RB pretty) (RB well))
                          (PP (IN at)
                            (NP (NN sight))))))))))))))
    (. .)))

det(farther-2, The-1)
dep(got-10, farther-2)
nsubj(got-4, he-3)
rcmod(farther-2, got-4)
prt(got-4, on-5)
dep(faster-8, the-7)
advmod(got-10, faster-8)
nsubj(got-10, he-9)
root(ROOT-0, got-10)
prt(got-10, on-11)
mark(over-18, before-14)
num(weeks-16, six-15)
nsubj(over-18, weeks-16)
cop(over-18, were-17)
advcl(read-22, over-18)
nsubj(read-22, he-20)
aux(read-22, could-21)
conj_and(got-10, read-22)
dobj(read-22, anything-23)
nsubj(able-26, he-24)
nsubj(understand-28, he-24)
cop(able-26, was-25)
rcmod(anything-23, able-26)
aux(understand-28, to-27)
xcomp(able-26, understand-28)
advmod(well-30, pretty-29)
advmod(understand-28, well-30)
prep_at(understand-28, sight-32)

(ROOT
  (S
    (PP (IN By)
      (NP (DT this) (NN time)))
    (, ,)
    (ADVP (RB also))
    (, ,)
    (NP (PRP he))
    (VP (VBD understood)
      (NP
        (NP
          (NP (PDT all) (DT the) (NNS particulars))
          (PP (IN as) (TO to)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (DT a) (NN shoe))
                (VP
                  (VP (VBZ is)
                    (VP (VBN made)))
                  (, ,)
                  (CC and)
                  (VP (VBD had) (RB indeed)
                    (VP (VBN done)
                      (S
                        (NP (DT a) (JJ few) (NNS stitches))
                        (NP (PRP himself))))))))))
        (, ,)
        (NP
          (NP (DT a) (JJ good) (NN deal))
          (PP (IN of)
            (S
              (VP (VBG hammering)
                (PP (DT both)
                  (PP (IN of)
                    (NP (NN leather)))
                  (CC and)
                  (PP (IN of)
                    (NP (NNS hob-nails))))))))
        (, ,)
        (CC and)
        (NP
          (NP (DT a) (JJ little) (NN patching))
          (, ,)
          (SBAR
            (WHPP (IN at)
              (WHNP (WDT which)))
            (S
              (NP
                (NP (JJ last) (DT the) (NNS smallness))
                (PP (IN of)
                  (NP (PRP$ his) (NNS hands))))
              (VP (VBD was)
                (NP (DT an) (NN advantage))))))))
    (. .)))

det(time-3, this-2)
prep_by(understood-8, time-3)
advmod(understood-8, also-5)
nsubj(understood-8, he-7)
root(ROOT-0, understood-8)
predet(particulars-11, all-9)
det(particulars-11, the-10)
dobj(understood-8, particulars-11)
advmod(made-18, how-14)
det(shoe-16, a-15)
nsubjpass(made-18, shoe-16)
nsubjpass(done-23, shoe-16)
auxpass(made-18, is-17)
prepc_as_to(particulars-11, made-18)
aux(done-23, had-21)
advmod(done-23, indeed-22)
prepc_as_to(particulars-11, done-23)
conj_and(made-18, done-23)
det(stitches-26, a-24)
amod(stitches-26, few-25)
nsubj(himself-27, stitches-26)
xcomp(done-23, himself-27)
det(deal-31, a-29)
amod(deal-31, good-30)
dobj(understood-8, deal-31)
conj_and(particulars-11, deal-31)
prepc_of(deal-31, hammering-33)
preconj(hammering-33, both-34)
prep_of(hammering-33, leather-36)
prep_of(hammering-33, hob-nails-39)
conj_and(leather-36, hob-nails-39)
det(patching-44, a-42)
amod(patching-44, little-43)
dobj(understood-8, patching-44)
conj_and(particulars-11, patching-44)
prep_at(advantage-56, patching-44)
amod(smallness-50, last-48)
det(smallness-50, the-49)
nsubj(advantage-56, smallness-50)
poss(hands-53, his-52)
prep_of(smallness-50, hands-53)
cop(advantage-56, was-54)
det(advantage-56, an-55)
rcmod(patching-44, advantage-56)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (, ,)
    (NP (CD one) (NN day))
    (, ,)
    (NP (PRP he))
    (VP (VBD said)
      (PP (TO to)
        (NP (DT the) (NN shoemaker)))
      (: --) (`` ``)
      (S
        (NP (NNP Shall) (NNP I))
        (VP (VB read)
          (NP (DT a) (JJ little) (NN poem))
          (PP (TO to)
            (NP
              (NP (PRP you))
              (, ,)
              (NP (NNP Hector)))))))
    (. ?) ('' '')))

prep_at(said-8, length-2)
num(day-5, one-4)
tmod(said-8, day-5)
nsubj(said-8, he-7)
root(ROOT-0, said-8)
det(shoemaker-11, the-10)
prep_to(said-8, shoemaker-11)
nn(I-15, Shall-14)
nsubj(read-16, I-15)
ccomp(said-8, read-16)
det(poem-19, a-17)
amod(poem-19, little-18)
dobj(read-16, poem-19)
prep_to(read-16, you-21)
appos(you-21, Hector-23)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBD told)
      (NP (PRP me))
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD could) (RB n't)
            (VP (VB read) (, ,)
              (ADVP (RB Willie)))))))
    (. .) ('' '')))

nsubj(told-3, You-2)
root(ROOT-0, told-3)
dobj(told-3, me-4)
nsubj(read-8, you-5)
aux(read-8, could-6)
neg(read-8, n't-7)
dep(told-3, read-8)
advmod(read-8, Willie-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB now) (IN though)))
    (. .) ('' '')))

nsubj(can-3, I-2)
root(ROOT-0, can-3)
advmod(though-5, now-4)
advmod(can-3, though-5)

(ROOT
  (SINV (`` ``)
    (S
      (VP (VB Do)
        (ADVP (RB then))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Hector))
    (. .)))

ccomp(said-6, Do-2)
advmod(Do-2, then-3)
root(ROOT-0, said-6)
nsubj(said-6, Hector-7)

(ROOT
  (S
    (S
      (VP (VBG Looking)
        (PP (IN for)
          (NP (CC but)
            (DT a) (JJ small) (NN result)))
        (PP (IN in)
          (NP (PDT such) (DT a) (JJ short) (NN time)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (ADVP (RB considerably))
      (VP (VBN astonished)
        (S
          (VP (TO to)
            (VP (VB find)
              (SBAR
                (SBAR
                  (WHADVP (WRB how) (RB well))
                  (S
                    (NP (DT the) (NN boy))
                    (VP (MD could)
                      (VP (VB read)))))
                (: ;)
                (SBAR (IN for)
                  (S
                    (NP (PRP he))
                    (RB not)
                    (VP
                      (ADVP (RB merely))
                      (VBD gave)
                      (NP (DT the) (NNS words))
                      (ADVP (RB correctly))
                      (, ,)
                      (PP (CC but)
                        (NP
                          (NP (DT the) (NNS sentences))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBZ is)
                                (ADJP (RB far) (RBR more) (JJ difficult))))))))))
                (: ;)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is) (, ,)
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (VBP read)
                            (SBAR (RB so) (IN that)
                              (S
                                (NP (NNP Hector))
                                (VP (MD could)
                                  (VP (VB understand)
                                    (SBAR
                                      (WHNP (WP what))
                                      (S
                                        (NP (DT the) (NN writer))
                                        (VP (VBD meant))))))))))))))))))))
    (. .)))

vmod(astonished-16, Looking-1)
cc(result-6, but-3)
det(result-6, a-4)
amod(result-6, small-5)
prep_for(Looking-1, result-6)
predet(time-11, such-8)
det(time-11, a-9)
amod(time-11, short-10)
prep_in(Looking-1, time-11)
nsubjpass(astonished-16, he-13)
nsubj(find-18, he-13)
auxpass(astonished-16, was-14)
advmod(astonished-16, considerably-15)
root(ROOT-0, astonished-16)
aux(find-18, to-17)
xcomp(astonished-16, find-18)
advmod(well-20, how-19)
advmod(read-24, well-20)
det(boy-22, the-21)
nsubj(read-24, boy-22)
aux(read-24, could-23)
advcl(find-18, read-24)
mark(gave-30, for-26)
nsubj(gave-30, he-27)
neg(gave-30, not-28)
advmod(gave-30, merely-29)
dep(read-24, gave-30)
det(words-32, the-31)
dobj(gave-30, words-32)
advmod(gave-30, correctly-33)
prep(gave-30, but-35)
det(sentences-37, the-36)
pobj(but-35, sentences-37)
nsubj(difficult-43, sentences-37)
cop(difficult-43, is-40)
advmod(difficult-43, far-41)
advmod(difficult-43, more-42)
rcmod(sentences-37, difficult-43)
nsubj(is-46, that-45)
dep(read-24, is-46)
nsubj(read-49, he-48)
ccomp(is-46, read-49)
advmod(understand-54, so-50)
mark(understand-54, that-51)
nsubj(understand-54, Hector-52)
aux(understand-54, could-53)
advcl(read-49, understand-54)
dobj(meant-58, what-55)
det(writer-57, the-56)
nsubj(meant-58, writer-57)
ccomp(understand-54, meant-58)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT a) (JJ great) (NN thing)
        (S
          (VP (TO to)
            (VP (VB read)
              (ADVP (RB well)))))))
    (. .)))

nsubj(thing-5, It-1)
cop(thing-5, is-2)
det(thing-5, a-3)
amod(thing-5, great-4)
root(ROOT-0, thing-5)
aux(read-7, to-6)
vmod(thing-5, read-7)
advmod(read-7, well-8)

(ROOT
  (S
    (NP (JJ Few))
    (VP (MD can))
    (. .)))

nsubj(can-2, Few-1)
root(ROOT-0, can-2)

(ROOT
  (S
    (NP (NNP Whoever))
    (VP
      (VP (VBZ reads)
        (ADVP (RB aloud)))
      (CC and)
      (VP (VBZ does) (RB not)
        (VP (VB read)
          (ADVP (RB well))))
      (, ,)
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN sort))
          (PP (IN of)
            (NP (NN deceiver)))))
      (: ;)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBZ pretends)
            (S
              (VP (TO to)
                (VP (VB introduce)
                  (NP (CD one) (NN person))
                  (PP (TO to)
                    (NP (DT another))))))
            (, ,)
            (SBAR (IN while)
              (S
                (NP (PRP he))
                (VP (VBZ misrepresents)
                  (NP (PRP him)))))))))
    (. .)))

nsubj(reads-2, Whoever-1)
nsubj(read-7, Whoever-1)
root(ROOT-0, reads-2)
advmod(reads-2, aloud-3)
aux(read-7, does-5)
neg(read-7, not-6)
conj_and(reads-2, read-7)
advmod(read-7, well-8)
cop(sort-12, is-10)
det(sort-12, a-11)
dep(reads-2, sort-12)
prep_of(sort-12, deceiver-14)
mark(pretends-18, for-16)
nsubj(pretends-18, he-17)
nsubj(introduce-20, he-17)
advcl(reads-2, pretends-18)
aux(introduce-20, to-19)
xcomp(pretends-18, introduce-20)
num(person-22, one-21)
dobj(introduce-20, person-22)
prep_to(introduce-20, another-24)
mark(misrepresents-28, while-26)
nsubj(misrepresents-28, he-27)
advcl(pretends-18, misrepresents-28)
dobj(misrepresents-28, him-29)

(ROOT
  (S
    (PP (IN In)
      (PP (IN after)
        (NP (NN life))))
    (, ,)
    (NP (NNP Willie))
    (VP (VBD continued)
      (S
        (VP (TO to)
          (VP (VB pay)
            (NP
              (NP (DT a) (JJ good) (NN deal))
              (PP (IN of)
                (NP (NN attention))))
            (PP
              (CONJP (RB not) (RB merely))
              (PP (TO to)
                (NP
                  (NP (NN reading))
                  (PP (IN for)
                    (NP (PRP$ its) (JJ own) (NN sake)))))
              (, ,)
              (CC but)
              (PP (TO to)
                (NP (NN reading))))
            (PP (IN for)
              (NP
                (NP (DT the) (NN sake))
                (PP (IN of)
                  (NP (JJ other) (NNS people)))))
            (PRN (, ,)
              (INTJ (DT that) (VBZ is))
              (, ,))
            (PP (TO to)
              (S
                (VP (VBG reading)
                  (ADVP (RB aloud)))))))))
    (. .)))

prep(continued-6, In-1)
pcomp(In-1, after-2)
pobj(after-2, life-3)
nsubj(continued-6, Willie-5)
nsubj(pay-8, Willie-5)
root(ROOT-0, continued-6)
aux(pay-8, to-7)
xcomp(continued-6, pay-8)
det(deal-11, a-9)
amod(deal-11, good-10)
dobj(pay-8, deal-11)
prep_of(deal-11, attention-13)
neg(merely-15, not-14)
preconj(pay-8, merely-15)
prep_to(pay-8, reading-17)
poss(sake-21, its-19)
amod(sake-21, own-20)
prep_for(reading-17, sake-21)
prep_to(pay-8, reading-25)
conj_but(reading-17, reading-25)
det(sake-28, the-27)
prep_for(pay-8, sake-28)
amod(people-31, other-30)
prep_of(sake-28, people-31)
discourse(pay-8, that-33)
dep(that-33, is-34)
prepc_to(pay-8, reading-37)
advmod(reading-37, aloud-38)

(ROOT
  (S
    (ADVP (RB As) (RB often)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD came) (, ,)
            (PP (IN in)
              (NP
                (NP (DT the) (NN course))
                (PP (IN of)
                  (NP (PRP$ his) (JJ own) (NN reading)))))
            (, ,)
            (PP (TO to)
              (NP
                (NP (DT any) (NN verse))
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBD liked)
                      (ADJP (RB very) (JJ much)))))))))))
    (, ,)
    (NP (PRP he))
    (ADVP (RB always))
    (VP (VB read)
      (NP (PRP it))
      (ADVP (RB aloud))
      (SBAR (IN in) (NN order)
        (S
          (VP (TO to)
            (VP (VB teach)
              (NP (PRP himself))
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (PRP it))
                  (VP (MD ought)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN read)
                            (PRN (: ;)
                              (S
                                (VP (VBG doing)
                                  (NP (PRP$ his) (JJS best))))
                              (: --))
                            (ADVP (RB first))
                            (, ,)
                            (S
                              (VP (TO to)
                                (VP (VB make)
                                  (S
                                    (NP (PRP it))
                                    (VP (VB sound)
                                      (ADJP (JJ true))))
                                  (, ,)
                                  (INTJ (DT that) (VBZ is))
                                  (, ,)
                                  (S
                                    (VP (TO to)
                                      (VP (VB read)
                                        (NP (PRP it))
                                        (PP (VBG according)
                                          (PP (TO to)
                                            (NP
                                              (NP (DT the) (NN sense))
                                              (: ;)
                                              (ADVP (JJ next))
                                              (, ,)
                                              (S
                                                (VP (TO to)
                                                  (VP (VB make)
                                                    (S
                                                      (NP (PRP it))
                                                      (VP (VB sound)
                                                        (ADJP (JJ beautiful))))
                                                    (, ,)
                                                    (INTJ (DT that) (VBZ is))
                                                    (, ,)
                                                    (S
                                                      (VP (TO to)
                                                        (VP (VB read)
                                                          (NP (PRP it))
                                                          (PP (VBG according)
                                                            (PP (TO to)
                                                              (NP
                                                                (NP
                                                                  (NP (DT the) (NN measure))
                                                                  (PP (IN of)
                                                                    (NP (DT the) (NN verse))))
                                                                (CC and)
                                                                (NP
                                                                  (NP (DT the) (NN melody))
                                                                  (PP (IN of)
                                                                    (NP (DT the) (NNS words))))))))))))))))))))))))))))))))))
    (. .)))

advmod(often-2, As-1)
advmod(read-26, often-2)
mark(came-5, as-3)
nsubj(came-5, he-4)
ccomp(often-2, came-5)
det(course-9, the-8)
prep_in(came-5, course-9)
poss(reading-13, his-11)
amod(reading-13, own-12)
prep_of(course-9, reading-13)
det(verse-17, any-16)
prep_to(came-5, verse-17)
mark(liked-20, that-18)
nsubj(liked-20, he-19)
dep(verse-17, liked-20)
advmod(much-22, very-21)
acomp(liked-20, much-22)
nsubj(read-26, he-24)
advmod(read-26, always-25)
root(ROOT-0, read-26)
dobj(read-26, it-27)
advmod(read-26, aloud-28)
mark(teach-32, in-29)
dep(teach-32, order-30)
aux(teach-32, to-31)
advcl(read-26, teach-32)
dobj(teach-32, himself-33)
advmod(ought-36, how-34)
nsubj(ought-36, it-35)
nsubjpass(read-39, it-35)
nsubj(make-48, it-35)
dep(teach-32, ought-36)
aux(read-39, to-37)
auxpass(read-39, be-38)
xcomp(ought-36, read-39)
parataxis(read-39, doing-41)
poss(best-43, his-42)
dobj(doing-41, best-43)
advmod(read-39, first-45)
aux(make-48, to-47)
xcomp(read-39, make-48)
nsubj(sound-50, it-49)
ccomp(make-48, sound-50)
acomp(sound-50, true-51)
discourse(make-48, that-53)
dep(that-53, is-54)
aux(read-57, to-56)
xcomp(make-48, read-57)
dobj(read-57, it-58)
prep(read-57, according-59)
pcomp(according-59, to-60)
det(sense-62, the-61)
pobj(to-60, sense-62)
advmod(sense-62, next-64)
aux(make-67, to-66)
vmod(sense-62, make-67)
nsubj(sound-69, it-68)
ccomp(make-67, sound-69)
acomp(sound-69, beautiful-70)
discourse(make-67, that-72)
dep(that-72, is-73)
aux(read-76, to-75)
xcomp(make-67, read-76)
dobj(read-76, it-77)
prepc_according_to(read-76, to-79)
det(measure-81, the-80)
pobj(read-76, measure-81)
det(verse-84, the-83)
prep_of(measure-81, verse-84)
det(melody-87, the-86)
pobj(read-76, melody-87)
conj_and(measure-81, melody-87)
det(words-90, the-89)
prep_of(melody-87, words-90)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB now))
    (VP (VBD read)
      (NP (DT a) (JJ great) (NN deal))
      (PP (TO to)
        (NP (NNP Hector))))
    (. .)))

nsubj(read-3, He-1)
advmod(read-3, now-2)
root(ROOT-0, read-3)
det(deal-6, a-4)
amod(deal-6, great-5)
dobj(read-3, deal-6)
prep_to(read-3, Hector-8)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD came)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP
                (NP (DT a) (JJ certain) (NN time))
                (NP (DT every) (NN day)))
              (SBAR
                (WHPP (IN at)
                  (WHNP (WDT which)))
                (S
                  (NP (NNP Willie) (NNP Macmichael))
                  (VP (VBD was)
                    (ADVP (RB joyfully))
                    (VP (VBN expected)
                      (PP (IN by)
                        (NP
                          (NP (DT the) (NN shoemaker))
                          (PRN (: --)
                            (S
                              (VP (TO to)
                                (VP (VB read)
                                  (PP (TO to)
                                    (NP (PRP him)))
                                  (PP (IN for)
                                    (NP
                                      (NP (DT an) (NN hour))
                                      (CC and)
                                      (NP (DT a) (NN half)))))))
                            (: --))
                          (SBAR
                            (WHPP (IN beyond)
                              (WHNP (WDT which) (NN time)))
                            (S
                              (NP (PRP$ his) (NN father))
                              (VP (VBD did) (RB not)
                                (VP (VB wish)
                                  (NP (DT the) (NN reading)
                                    (S
                                      (VP (TO to)
                                        (VP (VB extend))))))))))))))))))))
    (. .)))

expl(came-2, There-1)
root(ROOT-0, came-2)
aux(time-7, to-3)
cop(time-7, be-4)
det(time-7, a-5)
amod(time-7, certain-6)
xcomp(came-2, time-7)
prep_at(expected-16, time-7)
det(day-9, every-8)
dep(time-7, day-9)
nn(Macmichael-13, Willie-12)
nsubjpass(expected-16, Macmichael-13)
auxpass(expected-16, was-14)
advmod(expected-16, joyfully-15)
rcmod(time-7, expected-16)
det(shoemaker-19, the-18)
agent(expected-16, shoemaker-19)
det(time-34, shoemaker-19)
aux(read-22, to-21)
dep(shoemaker-19, read-22)
prep_to(read-22, him-24)
det(hour-27, an-26)
prep_for(read-22, hour-27)
det(half-30, a-29)
prep_for(read-22, half-30)
conj_and(hour-27, half-30)
prep_beyond(wish-39, time-34)
poss(father-36, his-35)
nsubj(wish-39, father-36)
aux(wish-39, did-37)
neg(wish-39, not-38)
rcmod(shoemaker-19, wish-39)
det(reading-41, the-40)
dobj(wish-39, reading-41)
aux(extend-43, to-42)
vmod(reading-41, extend-43)

(ROOT
  (S
    (NP (NNP CHAPTER))
    (VP (VBZ VII))
    (. .)))

nsubj(VII-2, CHAPTER-1)
root(ROOT-0, VII-2)

(ROOT
  (S
    (NP
      (NP (NNP SOME) (NNP THINGS) (NNP THAT) (NNP CAME))
      (PP (IN OF)
        (NP (NNP WILLIE))))
    (VP (VBZ 'S)
      (VP (VBG GOING)
        (S
          (VP (TO TO)
            (VP (VB SCHOOL))))))
    (. .)))

nn(CAME-4, SOME-1)
nn(CAME-4, THINGS-2)
nn(CAME-4, THAT-3)
nsubj(GOING-8, CAME-4)
nsubj(SCHOOL-10, CAME-4)
prep_of(CAME-4, WILLIE-6)
aux(GOING-8, 'S-7)
root(ROOT-0, GOING-8)
aux(SCHOOL-10, TO-9)
xcomp(GOING-8, SCHOOL-10)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP$ his) (NN father))
        (VP (VBD found)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN learned)
                  (S
                    (VP (TO to)
                      (VP (VB read)))))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP he))
    (VP (VBZ judged)
      (S
        (NP (PRP it))
        (ADJP (JJ good))
        (SBAR (IN for)
          (S
            (NP (PRP him))
            (VP (TO to)
              (VP (VB go)
                (PP (TO to)
                  (NP (NN school)))))))))
    (. .)))

advmod(found-4, When-1)
poss(father-3, his-2)
nsubj(found-4, father-3)
advcl(judged-14, found-4)
mark(learned-8, that-5)
nsubj(learned-8, he-6)
nsubj(read-10, he-6)
aux(learned-8, had-7)
ccomp(found-4, learned-8)
aux(read-10, to-9)
xcomp(learned-8, read-10)
advmod(he-13, then-12)
nsubj(judged-14, he-13)
root(ROOT-0, judged-14)
nsubj(go-20, it-15)
dep(go-20, good-16)
mark(go-20, for-17)
nsubj(go-20, him-18)
aux(go-20, to-19)
xcomp(judged-14, go-20)
prep_to(go-20, school-22)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD was)
      (ADJP (RB very) (RB much) (JJ pleased)))
    (. .)))

nsubj(pleased-5, Willie-1)
cop(pleased-5, was-2)
advmod(pleased-5, very-3)
advmod(pleased-5, much-4)
root(ROOT-0, pleased-5)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN mother))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP she))
            (VP (MD would)
              (VP (VB make)
                (S
                  (NP (PRP him))
                  (NP (DT a) (NN bag)
                    (S
                      (VP (TO to)
                        (VP (VB carry)
                          (NP (PRP$ his) (NNS books))
                          (PP (IN in)))))))))))))
    (: ;)
    (S (CC but)
      (NP (NNP Willie))
      (VP (VBD said)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP (DT no) (NN occasion)
                (S
                  (VP (TO to)
                    (VP (VB trouble)
                      (NP (PRP herself)))))))))))
    (: ;)
    (SBAR (IN for) (, ,)
      (S
        (SBAR (IN if)
          (S
            (NP (PRP she))
            (VP (MD would)
              (VP (VB give)
                (NP (PRP him))
                (NP (DT the) (NN stuff))))))
        (, ,)
        (NP (PRP he))
        (VP (MD would)
          (VP (VB make)
            (NP (PRP it))))))
    (. .)))

poss(mother-2, His-1)
nsubj(said-3, mother-2)
root(ROOT-0, said-3)
nsubj(make-6, she-4)
aux(make-6, would-5)
ccomp(said-3, make-6)
nsubj(bag-9, him-7)
det(bag-9, a-8)
xcomp(make-6, bag-9)
aux(carry-11, to-10)
vmod(bag-9, carry-11)
poss(books-13, his-12)
dobj(carry-11, books-13)
prep(carry-11, in-14)
cc(said-18, but-16)
nsubj(said-18, Willie-17)
parataxis(said-3, said-18)
expl(was-20, there-19)
ccomp(said-18, was-20)
neg(occasion-22, no-21)
nsubj(was-20, occasion-22)
aux(trouble-24, to-23)
vmod(occasion-22, trouble-24)
dobj(trouble-24, herself-25)
mark(make-39, for-27)
mark(give-32, if-29)
nsubj(give-32, she-30)
aux(give-32, would-31)
advcl(make-39, give-32)
iobj(give-32, him-33)
det(stuff-35, the-34)
dobj(give-32, stuff-35)
nsubj(make-39, he-37)
aux(make-39, would-38)
parataxis(said-3, make-39)
dobj(make-39, it-40)

(ROOT
  (S (CC So)
    (S
      (NP (PRP she))
      (VP (VBD got)
        (S
          (NP (PRP him))
          (NP
            (NP (DT a) (JJ nice) (NN bit))
            (PP (IN of)
              (NP (JJ green) (NN baize)))))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP (DT the) (NN afternoon)))
      (NP (PRP he))
      (VP (VBD made)
        (NP (PRP$ his) (NN bag))
        (: --)
        (NP
          (NP (DT no) (JJ gobble-stitch) (NN work))
          (PRN (, ,)
            (CC but)
            (ADJP (JJ good) (, ,) (JJ honest) (JJ back-stitching))
            (, ,))
          (PP (IN except)
            (NP
              (NP (DT the) (NN string-case))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (VP
                      (ADVP (RB only))
                      (VBN run) (, ,)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (MD might)
                            (VP (VB draw)
                              (S
                                (ADJP (JJR easier)
                                  (CC and)
                                  (JJR tighter))))))))))))))))
    (. .)))

nsubj(got-3, she-2)
root(ROOT-0, got-3)
nsubj(bit-7, him-4)
det(bit-7, a-5)
amod(bit-7, nice-6)
xcomp(got-3, bit-7)
amod(baize-10, green-9)
prep_of(bit-7, baize-10)
det(afternoon-15, the-14)
prep_in(made-17, afternoon-15)
nsubj(made-17, he-16)
conj_and(got-3, made-17)
poss(bag-19, his-18)
dobj(made-17, bag-19)
neg(work-23, no-21)
amod(work-23, gobble-stitch-22)
parataxis(made-17, work-23)
cc(back-stitching-29, but-25)
amod(back-stitching-29, good-26)
amod(back-stitching-29, honest-28)
dep(work-23, back-stitching-29)
det(string-case-33, the-32)
prep_except(work-23, string-case-33)
nsubjpass(run-38, string-case-33)
auxpass(run-38, was-36)
advmod(run-38, only-37)
rcmod(string-case-33, run-38)
mark(draw-43, that-40)
nsubj(draw-43, it-41)
aux(draw-43, might-42)
ccomp(run-38, draw-43)
acomp(draw-43, easier-44)
acomp(draw-43, tighter-46)
conj_and(easier-44, tighter-46)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD passed)
        (NP (DT the) (NN string))
        (PP (IN through) (IN with)
          (NP
            (NP (DT a) (NN bodkin))
            (, ,)
            (VP (VBN fixed)
              (NP (PRP it))
              (PP (IN in)
                (NP (DT the) (NN middle)))))))
      (, ,)
      (VP (VBD tied)
        (NP (DT the) (CD two) (NNS ends)))
      (, ,)
      (CC and)
      (VP (VBD carried)
        (NP (DT the) (NN bag))
        (PP (TO to)
          (NP
            (NP (PRP$ his) (NN mother))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD pronounced)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP
                        (ADVP (RB nearly) (RB as) (RB well))
                        (VBD made)
                        (SBAR (RB as) (IN if)
                          (S
                            (NP (PRP she))
                            (VP (VBD had)
                              (VP (VBN done)
                                (S
                                  (NP (PRP it))
                                  (NP (PRP herself)))))))))))))))))
    (. .)))

nsubj(passed-2, He-1)
nsubj(tied-16, He-1)
nsubj(carried-22, He-1)
root(ROOT-0, passed-2)
det(string-4, the-3)
dobj(passed-2, string-4)
dep(passed-2, through-5)
det(bodkin-8, a-7)
prep_with(passed-2, bodkin-8)
vmod(bodkin-8, fixed-10)
dobj(fixed-10, it-11)
det(middle-14, the-13)
prep_in(fixed-10, middle-14)
conj_and(passed-2, tied-16)
det(ends-19, the-17)
num(ends-19, two-18)
dobj(tied-16, ends-19)
conj_and(passed-2, carried-22)
det(bag-24, the-23)
dobj(carried-22, bag-24)
poss(mother-27, his-26)
prep_to(carried-22, mother-27)
nsubj(pronounced-30, mother-27)
rcmod(mother-27, pronounced-30)
nsubj(made-35, it-31)
advmod(well-34, nearly-32)
advmod(well-34, as-33)
mwe(well-34, as-33)
advmod(made-35, well-34)
ccomp(pronounced-30, made-35)
advmod(done-40, as-36)
mark(done-40, if-37)
nsubj(done-40, she-38)
aux(done-40, had-39)
advcl(made-35, done-40)
nsubj(herself-42, it-41)
xcomp(done-40, herself-42)

(ROOT
  (S
    (PP (IN At)
      (NP (NN school)))
    (NP (PRP he))
    (VP (VBD found)
      (S
        (NP (PRP it))
        (ADJP
          (ADJP (JJR more))
          (CC and)
          (ADJP (RBR more) (JJ plain)))
        (SBAR
          (SBAR
            (WHNP (WP what))
            (S
              (NP
                (NP (DT a) (JJ good) (NN thing))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ is)
                      (SBAR (IN that)
                        (S
                          (NP (PRP we))
                          (VP (VBP have) (RB n't))))))))
              (VP (TO to)
                (VP (VB find)
                  (PRT (RP out))
                  (NP
                    (NP (DT every) (NN thing))
                    (PP (IN for)
                      (NP (PRP ourselves))))
                  (PP (IN from)
                    (NP (DT the) (NN beginning)))))))
          (: ;)
          (SBAR (IN that)
            (S
              (NP (NNS people))
              (VP (VBP gather)
                (PP (IN into)
                  (NP
                    (NP (NNS books))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP
                          (NP (PRP they))
                          (CC and)
                          (NP
                            (NP (DT all))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBD went)
                                  (SBAR (IN before)
                                    (S
                                      (NP (PRP them))
                                      (VP (VBP have)
                                        (VP
                                          (VP (VBN learned) (, ,)
                                            (SBAR (RB so) (IN that)
                                              (S
                                                (NP (PRP we))
                                                (VP (VBP come)
                                                  (PP (IN into)
                                                    (NP (PRP$ their) (NN property)))
                                                  (, ,)
                                                  (SBAR (IN as)
                                                    (S
                                                      (NP (PRP it))
                                                      (VP (VBD were))))))))
                                          (: ;)
                                          (CC and)
                                          (, ,)
                                          (PP (IN after)
                                            (S
                                              (VP (VBG being)
                                                (VP (VBN taught)
                                                  (PP (IN of)
                                                    (NP (PRP them))))))))))))))))
                        (, ,)
                        (VP (VBP have)
                          (ADVP (RB only))
                          (S
                            (VP (TO to)
                              (VP (VB begin)
                                (NP (PRP$ our) (NNS discoveries))
                                (PP (IN from)
                                  (SBAR
                                    (WHADVP (WRB where))
                                    (S
                                      (NP (PRP they))
                                      (VP (VBP leave)
                                        (PRT (RP off))))))))))))))))))))
    (. .)))

prep_at(found-4, school-2)
nsubj(found-4, he-3)
root(ROOT-0, found-4)
nsubj(find-21, it-5)
dep(find-21, more-6)
advmod(plain-9, more-8)
conj_and(more-6, plain-9)
dep(find-21, plain-9)
dobj(find-21, what-10)
det(thing-13, a-11)
amod(thing-13, good-12)
mark(have-18, thing-13)
nsubj(find-21, thing-13)
nsubj(is-15, it-14)
rcmod(thing-13, is-15)
nsubj(have-18, we-17)
ccomp(is-15, have-18)
neg(have-18, n't-19)
aux(find-21, to-20)
xcomp(found-4, find-21)
prt(find-21, out-22)
det(thing-24, every-23)
dobj(find-21, thing-24)
prep_for(thing-24, ourselves-26)
det(beginning-29, the-28)
prep_from(find-21, beginning-29)
mark(gather-33, that-31)
nsubj(gather-33, people-32)
dep(find-21, gather-33)
prep_into(gather-33, books-35)
dobj(have-67, books-35)
nsubj(begin-70, books-35)
nsubj(have-67, they-37)
conj_and(they-37, all-39)
nsubj(went-41, all-39)
nsubj(have-67, all-39)
rcmod(all-39, went-41)
mark(learned-45, before-42)
nsubj(learned-45, them-43)
aux(learned-45, have-44)
advcl(went-41, learned-45)
advmod(come-50, so-47)
mark(come-50, that-48)
nsubj(come-50, we-49)
advcl(learned-45, come-50)
poss(property-53, their-52)
prep_into(come-50, property-53)
mark(were-57, as-55)
nsubj(were-57, it-56)
advcl(come-50, were-57)
advcl(went-41, after-61)
conj_and(learned-45, after-61)
auxpass(taught-63, being-62)
prepc_after(learned-45, taught-63)
prep_of(taught-63, them-65)
rcmod(books-35, have-67)
advmod(have-67, only-68)
aux(begin-70, to-69)
xcomp(have-67, begin-70)
poss(discoveries-72, our-71)
dobj(begin-70, discoveries-72)
advmod(leave-76, where-74)
nsubj(leave-76, they-75)
prepc_from(begin-70, leave-76)
prt(leave-76, off-77)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP
          (NP (NN geography))
          (, ,)
          (PP (IN for)
            (NP
              (NP (NN instance))
              (, ,)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP
                    (NP (DT a) (NN number))
                    (PP (IN of)
                      (NP (NNS voyages)
                        (CC and)
                        (NNS journeys))))
                  (VP (VBP have)
                    (VP (VBN had)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBN made))))))))))))
        (, ,)
        (CC and)
        (NP
          (NP (NNS books)
            (S
              (VP (TO to)
                (VP (VB record)
                  (S
                    (NP (PRP them))
                    (ADJP (VBN written)))))))
          (: ;)
          (NP
            (NP (RB then))
            (SBAR
              (WHNP (WP what))
              (S
                (NP
                  (NP (DT a) (NN number))
                  (PP (IN of)
                    (NP (DT these) (NNS books))))
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN read)))))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NNS facts))
            (VP (VBN gathered)
              (PRT (RP out))
              (PP (IN of)
                (NP (PRP them))))))))
    (, ,)
    (SBAR (IN before)
      (S
        (NP (DT a) (JJ single) (NN map))
        (VP (MD could)
          (VP (VB be)
            (VP (VBN drawn))))))
    (, ,)
    (S (RB not)
      (VP (TO to)
        (VP (VB say)
          (NP (DT a) (NN geography) (NN book)))))
    (VP (VBD printed))
    (. !)))

prep_in(printed-60, geography-2)
prep_for(geography-2, instance-5)
dobj(had-15, instance-5)
nsubjpass(made-18, instance-5)
det(number-9, a-8)
nsubj(had-15, number-9)
prep_of(number-9, voyages-11)
prep_of(number-9, journeys-13)
conj_and(voyages-11, journeys-13)
aux(had-15, have-14)
rcmod(instance-5, had-15)
aux(made-18, to-16)
auxpass(made-18, be-17)
xcomp(had-15, made-18)
conj_and(geography-2, books-21)
prep_in(printed-60, books-21)
aux(record-23, to-22)
vmod(books-21, record-23)
nsubj(written-25, them-24)
xcomp(record-23, written-25)
conj_and(geography-2, then-27)
conj_and(books-21, then-27)
dobj(read-36, then-27)
det(number-30, a-29)
nsubjpass(read-36, number-30)
det(books-33, these-32)
prep_of(number-30, books-33)
aux(read-36, to-34)
auxpass(read-36, be-35)
rcmod(then-27, read-36)
vmod(then-27, read-36)
det(facts-40, the-39)
conj_and(geography-2, facts-40)
conj_and(books-21, facts-40)
vmod(facts-40, gathered-41)
prep_out_of(gathered-41, them-44)
mark(drawn-52, before-46)
det(map-49, a-47)
amod(map-49, single-48)
nsubjpass(drawn-52, map-49)
aux(drawn-52, could-50)
auxpass(drawn-52, be-51)
advcl(printed-60, drawn-52)
neg(say-56, not-54)
aux(say-56, to-55)
csubj(printed-60, say-56)
det(book-59, a-57)
nn(book-59, geography-58)
dobj(say-56, book-59)
root(ROOT-0, printed-60)

(ROOT
  (S
    (ADVP (RB Whereas) (RB now))
    (NP (PRP he))
    (VP (MD could)
      (VP (VB learn)
        (NP
          (NP (DT a) (NN multitude))
          (PP (IN of)
            (NP (NNS things))))
        (PP (IN about)
          (NP
            (NP (DT the) (JJ various) (NNS countries))
            (, ,)
            (NP (PRP$ their) (NNS peoples)
              (CC and)
              (NNS animals))
            (CC and)
            (NP
              (NP (NNS plants))
              (, ,)
              (NP (PRP$ their) (NNS mountains)
                (CC and)
                (NNS rivers))
              (CC and)
              (NP (NNS lakes)
                (CC and)
                (NNS cities)))))
        (, ,)
        (PP (IN without)
          (S
            (VP (VBG having)
              (VP (VBN set)
                (NP (PRP$ his) (NN foot))
                (PP (IN beyond)
                  (NP
                    (NP (DT the) (NN parish))
                    (SBAR
                      (WHPP (IN in)
                        (WHNP (WDT which)))
                      (S
                        (NP (PRP he))
                        (VP (VBD was)
                          (VP (VBN born)))))))))))))
    (. .)))

advmod(now-2, Whereas-1)
advmod(learn-5, now-2)
nsubj(learn-5, he-3)
aux(learn-5, could-4)
root(ROOT-0, learn-5)
det(multitude-7, a-6)
dobj(learn-5, multitude-7)
prep_of(multitude-7, things-9)
det(countries-13, the-11)
amod(countries-13, various-12)
prep_about(learn-5, countries-13)
poss(peoples-16, their-15)
prep_about(learn-5, peoples-16)
conj_and(countries-13, peoples-16)
conj_and(countries-13, animals-18)
conj_and(peoples-16, animals-18)
prep_about(learn-5, plants-20)
conj_and(countries-13, plants-20)
poss(mountains-23, their-22)
conj_and(countries-13, mountains-23)
conj_and(plants-20, mountains-23)
conj_and(plants-20, rivers-25)
conj_and(mountains-23, rivers-25)
conj_and(countries-13, lakes-27)
conj_and(plants-20, lakes-27)
conj_and(plants-20, cities-29)
conj_and(lakes-27, cities-29)
aux(set-33, having-32)
prepc_without(learn-5, set-33)
poss(foot-35, his-34)
dobj(set-33, foot-35)
det(parish-38, the-37)
prep_beyond(set-33, parish-38)
prep_in(born-43, parish-38)
nsubjpass(born-43, he-41)
auxpass(born-43, was-42)
rcmod(parish-38, born-43)

(ROOT
  (FRAG (CC And)
    (ADVP (RB so))
    (PP (IN with)
      (NP (NN everything) (RB else)))
    (PP (IN after)
      (NP (PRP$ its) (NN kind)))
    (. .)))

cc(so-2, And-1)
root(ROOT-0, so-2)
prep_with(so-2, everything-4)
advmod(everything-4, else-5)
poss(kind-8, its-7)
prep_after(so-2, kind-8)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (JJR more))
        (PP (IN of)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (NNP Willie))
              (VP (VBD learned)
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (PP (IN than)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP he))
                            (VP (VBD learned)
                              (S
                                (VP (TO to)
                                  (VP (VB know)
                                    (SBAR (IN that)
                                      (S
                                        (NP (PRP I))
                                        (VP (VBP have)
                                          (S
                                            (VP (TO to)
                                              (VP (VB treat)))))))))))))))))))))))
    (. .)))

cc(more-4, But-1)
nsubj(more-4, it-2)
cop(more-4, is-3)
root(ROOT-0, more-4)
dobj(learned-8, what-6)
nsubj(do-10, what-6)
nsubj(learned-8, Willie-7)
prepc_of(more-4, learned-8)
aux(do-10, to-9)
xcomp(learned-8, do-10)
dobj(learned-14, what-12)
nsubj(know-16, what-12)
nsubj(learned-14, he-13)
prepc_than(do-10, learned-14)
aux(know-16, to-15)
xcomp(learned-14, know-16)
mark(have-19, that-17)
nsubj(have-19, I-18)
nsubj(treat-21, I-18)
ccomp(know-16, have-19)
aux(treat-21, to-20)
xcomp(have-19, treat-21)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD went)
          (PP (TO to)
            (NP (NN school))))))
    (, ,)
    (NP (PRP$ his) (NN father))
    (VP (VBD made)
      (S
        (NP (PRP him))
        (NP
          (NP (DT a) (NN present))
          (PP (IN of)
            (NP (DT a) (NN pocket-knife))))))
    (. .)))

advmod(went-3, When-1)
nsubj(went-3, he-2)
advcl(made-9, went-3)
prep_to(went-3, school-5)
poss(father-8, his-7)
nsubj(made-9, father-8)
root(ROOT-0, made-9)
nsubj(present-12, him-10)
det(present-12, a-11)
xcomp(made-9, present-12)
det(pocket-knife-15, a-14)
prep_of(present-12, pocket-knife-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (VP (VBN had)
          (NP
            (NP
              (NP (CD one) (RB before))
              (, ,)
              (CONJP (CC but)
                (RB not))
              (NP (DT a)
                (ADJP (RB very) (JJ good))
                (NN one)))
            (: ;)
            (CC and)
            (NP
              (NP (DT this))
              (, ,)
              (VP (VBG having)
                (NP (CD three) (NNS blades))))))))
    (, ,)
    (S
      (NP (DT all))
      (ADJP (RB very) (JJ sharp)))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD found)
        (NP
          (NP (DT a) (JJ wonderful) (NN treasure))
          (PP (IN of)
            (NP (NN recourse))))))
    (. .)))

nsubj(had-3, He-1)
aux(had-3, had-2)
root(ROOT-0, had-3)
dobj(had-3, one-4)
advmod(one-4, before-5)
det(one-12, a-9)
advmod(good-11, very-10)
amod(one-12, good-11)
dobj(had-3, one-12)
conj_negcc(one-4, one-12)
dobj(had-3, this-15)
conj_and(one-4, this-15)
vmod(this-15, having-17)
num(blades-19, three-18)
dobj(having-17, blades-19)
dep(sharp-23, all-21)
advmod(sharp-23, very-22)
parataxis(had-3, sharp-23)
nsubj(found-26, he-25)
parataxis(had-3, found-26)
det(treasure-29, a-27)
amod(treasure-29, wonderful-28)
dobj(found-26, treasure-29)
prep_of(treasure-29, recourse-31)

(ROOT
  (S
    (NP (PRP$ His) (NN father))
    (ADVP (RB also))
    (VP (VBD bought)
      (S
        (NP (PRP him))
        (NP (DT a) (JJ nice) (JJ new) (NN slate))))
    (. .)))

poss(father-2, His-1)
nsubj(bought-4, father-2)
advmod(bought-4, also-3)
root(ROOT-0, bought-4)
nsubj(slate-9, him-5)
det(slate-9, a-6)
amod(slate-9, nice-7)
amod(slate-9, new-8)
xcomp(bought-4, slate-9)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (DT another) (JJ handy) (NN boy))
        (PP (IN at)
          (NP (NN school))))
      (, ,)
      (S
        (NP
          (NP (DT a) (NN couple))
          (PP (IN of)
            (NP (NNS years))))
        (ADJP (JJR older)
          (PP (IN than)
            (NP
              (NP (NNP Willie))
              (, ,)
              (SBAR
                (WHNP (WP$ whose) (NNS father))
                (S
                  (VP (VBD was)
                    (NP (DT a) (NN carpenter))))))))))
    (. .)))

advmod(was-3, Now-1)
expl(was-3, there-2)
root(ROOT-0, was-3)
det(boy-6, another-4)
amod(boy-6, handy-5)
nsubj(was-3, boy-6)
prep_at(boy-6, school-8)
det(couple-11, a-10)
nsubj(older-14, couple-11)
prep_of(couple-11, years-13)
xcomp(was-3, older-14)
prep_than(older-14, Willie-16)
poss(father-19, Willie-16)
nsubj(carpenter-22, father-19)
cop(carpenter-22, was-20)
det(carpenter-22, a-21)
rcmod(Willie-16, carpenter-22)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP (VBD had)
          (VP (VBN cut)
            (PP (IN on)
              (NP
                (NP (DT the) (NN frame))
                (PP (IN of)
                  (NP (PRP$ his) (NN slate))))))))
      (, ,) (RB not)
      (S
        (NP (PRP$ his) (NNS initials))
        (ADVP (RB only))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (PRP$ his) (JJ whole) (NN name)
          (CC and)
          (NN address))
        (, ,)
        (PRN (: --)
          (NP
            (NP (NNP _) (NNP Alexander) (NNP Spelman))
            (, ,)
            (NP (NNP Priory) (NNP Leas)))))
      (VP (VBZ _)))
    (. .)))

nsubj(cut-3, He-1)
aux(cut-3, had-2)
root(ROOT-0, cut-3)
det(frame-6, the-5)
prep_on(cut-3, frame-6)
poss(slate-9, his-8)
prep_of(frame-6, slate-9)
neg(initials-13, not-11)
poss(initials-13, his-12)
parataxis(cut-3, initials-13)
advmod(initials-13, only-14)
poss(name-19, his-17)
amod(name-19, whole-18)
nsubj(_-30, name-19)
conj_and(name-19, address-21)
nsubj(_-30, address-21)
nn(Spelman-26, _-24)
nn(Spelman-26, Alexander-25)
dep(name-19, Spelman-26)
nn(Leas-29, Priory-28)
appos(Spelman-26, Leas-29)
conj_but(cut-3, _-30)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (VBD thought)
        (SBAR
          (WHADVP (WRB how)
            (ADJP (JJ nice)))
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (PP (IN with)
                  (NP (PRP$ his) (JJ new) (NN knife)))
                (ADVP (RB also))
                (S
                  (VP (TO to)
                    (VP (VB cut)
                      (NP (PRP$ his) (NN name))
                      (PP (IN on)
                        (NP (PRP$ his) (NN slate))))))))))))
    (: ;)
    (S
      (ADVP (RB only))
      (NP (PRP he))
      (VP (MD would) (RB rather)
        (VP (VB make)
          (NP (DT some) (NN difference))
          (PP (IN in)
            (NP
              (NP (DT the) (NN way))
              (PP (IN of)
                (S
                  (VP (VBG doing)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(thought-2, Willie-1)
root(ROOT-0, thought-2)
advmod(be-7, how-3)
dep(how-3, nice-4)
nsubj(be-7, it-5)
nsubj(cut-14, it-5)
aux(be-7, would-6)
ccomp(thought-2, be-7)
poss(knife-11, his-9)
amod(knife-11, new-10)
prep_with(be-7, knife-11)
advmod(be-7, also-12)
aux(cut-14, to-13)
xcomp(be-7, cut-14)
poss(name-16, his-15)
dobj(cut-14, name-16)
poss(slate-19, his-18)
prep_on(cut-14, slate-19)
advmod(make-25, only-21)
nsubj(make-25, he-22)
aux(make-25, would-23)
advmod(make-25, rather-24)
parataxis(thought-2, make-25)
det(difference-27, some-26)
dobj(make-25, difference-27)
det(way-30, the-29)
prep_in(make-25, way-30)
prepc_of(way-30, doing-32)
dobj(doing-32, it-33)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S (, ,)
        (PP (RB instead) (IN of)
          (S
            (VP (VBG sinking)
              (NP (DT the) (NNS letters))
              (PP (IN in)
                (NP (DT the) (NN frame))))))
        (, ,)
        (NP (PRP he))
        (VP (VBD made)
          (SBAR
            (S
              (NP (PRP them))
              (VP (VBP stand)
                (PRT (RP up))
                (PP (IN from)
                  (NP
                    (NP (DT the) (NN frame))
                    (PP (IN by)
                      (S
                        (VP (VBG cutting)
                          (NP (PRP it))
                          (PRT (RP away))
                          (S
                            (VP (TO to)
                              (VP
                                (ADVP
                                  (NP (DT some) (NN depth))
                                  (RB all))
                                (VB round)
                                (NP (PRP them))))))))))))))))
    (. .)))

dep(made-14, What-1)
mark(made-14, if-2)
prepc_instead_of(made-14, sinking-6)
det(letters-8, the-7)
dobj(sinking-6, letters-8)
det(frame-11, the-10)
prep_in(sinking-6, frame-11)
nsubj(made-14, he-13)
root(ROOT-0, made-14)
nsubj(stand-16, them-15)
ccomp(made-14, stand-16)
prt(stand-16, up-17)
det(frame-20, the-19)
prep_from(stand-16, frame-20)
prepc_by(frame-20, cutting-22)
dobj(cutting-22, it-23)
prt(cutting-22, away-24)
aux(round-29, to-25)
det(depth-27, some-26)
npadvmod(all-28, depth-27)
advmod(round-29, all-28)
vmod(cutting-22, round-29)
dobj(round-29, them-30)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBD was) (RB not)
          (ADJP (RB much) (JJ originality))
          (PP (IN in)
            (NP (DT this)))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADVP (RB only))
                (VP (VBG reversing)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (NNP Spelman))
                      (VP (VBD had)
                        (VP (VBN done)))))))))))
      (: ;)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (RBR more) (JJ difficult)))))
    (, ,)
    (CC and)
    (S
      (VP (MD would)
        (PRN (, ,)
          (S
            (NP (PRP he))
            (VP (VBD thought)))
          (, ,))
        (VP (VB be)
          (ADJP (JJR prettier)))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(was-2, not-3)
advmod(originality-5, much-4)
acomp(was-2, originality-5)
prep_in(was-2, this-7)
mark(reversing-13, for-9)
nsubj(reversing-13, it-10)
aux(reversing-13, was-11)
advmod(reversing-13, only-12)
advcl(was-2, reversing-13)
dobj(done-17, what-14)
nsubj(done-17, Spelman-15)
aux(done-17, had-16)
ccomp(reversing-13, done-17)
nsubj(difficult-23, it-20)
cop(difficult-23, was-21)
advmod(difficult-23, more-22)
conj_but(was-2, difficult-23)
aux(prettier-32, would-26)
nsubj(thought-29, he-28)
parataxis(prettier-32, thought-29)
cop(prettier-32, be-31)
conj_and(was-2, prettier-32)

(ROOT
  (SBARQ
    (ADVP (RB Then))
    (WHNP (WP what))
    (SQ
      (VP (VBD was)
        (NP (PRP he))
        (PP
          (ADVP (RB thus))
          (TO to)
          (NP (NNP carve)))))
    (. ?)))

advmod(he-4, Then-1)
nsubj(he-4, what-2)
cop(he-4, was-3)
root(ROOT-0, he-4)
advmod(he-4, thus-5)
prep_to(he-4, carve-7)

(ROOT
  (S
    (S
      (S
        (NP (PRP One))
        (VP (MD would)
          (VP (VB say) (, ,) (`` ``)
            (FRAG
              (INTJ (WRB Why))
              (, ,)
              (NP (NNP _) (NNP William) (NNP Macmichael) (NNP _)))
            (, ,)
            (PP (IN of)
              (NP (NN course))))))
      (, ,)
      (CC and)
      (S (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (VBD liked))))
        (, ,)
        (NP (NNP _) (NNP Priory) (NNP Leas))
        (VP (VBZ _)))
      ('' '')
      (CC But)
      (S
        (NP (NNP Willie))
        (VP (VBD was)
          (NP (DT a) (JJ peculiar) (JJ little) (NN fellow)))))
    (, ,)
    (CC and)
    (S
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB reason)
              (PP (IN with)
                (NP (PRP himself)))
              (SBAR (IN whether)
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (NP (DT any) (NN right)
                      (S
                        (VP (TO to)
                          (VP (VB put)
                            (NP (PRP$ his) (JJ own) (NN name))
                            (PP (IN on)
                              (NP (DT the) (NN slate)))))))))))))))
    (. .)))

nsubj(say-3, One-1)
nsubj(began-36, One-1)
nsubj(reason-38, One-1)
aux(say-3, would-2)
root(ROOT-0, say-3)
discourse(_-11, Why-6)
nn(_-11, _-8)
nn(_-11, William-9)
nn(_-11, Macmichael-10)
dep(say-3, _-11)
prep_of(say-3, course-14)
mark(liked-20, if-18)
nsubj(liked-20, he-19)
advcl(_-25, liked-20)
nn(Leas-24, _-22)
nn(Leas-24, Priory-23)
nsubj(_-25, Leas-24)
conj_and(say-3, _-25)
nsubj(fellow-33, Willie-28)
cop(fellow-33, was-29)
det(fellow-33, a-30)
amod(fellow-33, peculiar-31)
amod(fellow-33, little-32)
conj_but(say-3, fellow-33)
conj_and(say-3, began-36)
aux(reason-38, to-37)
xcomp(began-36, reason-38)
prep_with(reason-38, himself-40)
mark(had-43, whether-41)
nsubj(had-43, he-42)
ccomp(reason-38, had-43)
det(right-45, any-44)
dobj(had-43, right-45)
aux(put-47, to-46)
vmod(right-45, put-47)
poss(name-50, his-48)
amod(name-50, own-49)
dobj(put-47, name-50)
det(slate-53, the-52)
prep_on(put-47, slate-53)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ My) (NN father))
      (VP (VBD did) (RB not)
        (VP (VB give)
          (NP (PRP me))
          (NP (DT the) (NN slate)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (PRP$ my)))))
        (ADJP (RB very) (JJ own))))
    (. .)))

poss(father-3, My-2)
nsubj(give-6, father-3)
aux(give-6, did-4)
neg(give-6, not-5)
ccomp(said-13, give-6)
iobj(give-6, me-7)
det(slate-9, the-8)
dobj(give-6, slate-9)
nsubj(said-13, he-12)
root(ROOT-0, said-13)
aux(my-18, to-16)
cop(my-18, be-17)
dep(said-13, my-18)
advmod(own-20, very-19)
dep(my-18, own-20)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD gave)
      (NP (PRP me))
      (NP
        (NP (DT the) (NN knife))
        (PP (IN like)
          (NP
            (NP (DT that))
            (, ,)
            (CONJP (CC but)
              (RB not))
            (NP (DT the) (NN slate))))))
    (. .)))

nsubj(gave-2, He-1)
root(ROOT-0, gave-2)
iobj(gave-2, me-3)
det(knife-5, the-4)
dobj(gave-2, knife-5)
prep_like(knife-5, that-7)
det(slate-12, the-11)
prep_like(knife-5, slate-12)
conj_negcc(that-7, slate-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBP am)
          (VP (VBN grown)
            (PRT (RP up))))))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB belong)
        (PP (TO to)
          (NP (NNP Agnes)))))
    (. .)))

advmod(grown-4, When-1)
nsubjpass(grown-4, I-2)
auxpass(grown-4, am-3)
advcl(belong-9, grown-4)
prt(grown-4, up-5)
nsubj(belong-9, it-7)
aux(belong-9, will-8)
root(ROOT-0, belong-9)
prep_to(belong-9, Agnes-11)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBD shall)
      (NP (PRP I))
      (VP (VB put)
        (PP (IN on)
          (NP (PRP it)))))
    (. ?)))

dobj(put-4, What-1)
aux(put-4, shall-2)
nsubj(put-4, I-3)
root(ROOT-0, put-4)
prep_on(put-4, it-6)

(ROOT
  (SINV
    (S
      (SBAR
        (WHNP (WP What))
        (S
          (VP (VBZ 's)
            (SBAR
              (SBAR
                (S
                  (NP
                    (NP (NN mine) (POS 's))
                    (NN papa))
                  (VP (VBZ 's))))
              (, ,)
              (CC and)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ 's)
                    (ADJP (JJ papa)))))))))
      (NP (PRP 's))
      (VP (VBZ is)
        (NP (PRP$ his) (JJ own))))
    (, ,) ('' '')
    (VP (VBD argued))
    (NP (NNP Willie))
    (. .)))

nsubj('s-2, What-1)
advcl(own-15, 's-2)
poss(papa-5, mine-3)
nsubj('s-6, papa-5)
dep('s-2, 's-6)
nsubj(papa-11, what-9)
cop(papa-11, 's-10)
dep('s-2, papa-11)
conj_and('s-6, papa-11)
nsubj(own-15, 's-12)
cop(own-15, is-13)
poss(own-15, his-14)
ccomp(argued-18, own-15)
root(ROOT-0, argued-18)
nsubj(argued-18, Willie-19)

(ROOT
  (S (: --)
    (PP (IN '')
      (S
        (VP (SYM _)
          (NP (PRP I)))))
    (NP (PRP _))
    (VP (VBP know))
    (. !) ('' '')))

dep(I-4, _-3)
pcomp(''-2, I-4)
nsubj(know-6, _-5)
root(ROOT-0, know-6)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said)
      (PP (TO to)
        (NP (PRP himself)))
      (PP (IN at)
        (NP (JJ last))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
prep_to(said-2, himself-4)
prep_at(said-2, last-6)

(ROOT
  (S
    (NP (DT The) (NNS boys))
    (VP (MD could) (RB n't)
      (VP (VB imagine)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (VP (VBD meant)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP they))
                        (VP (VBD saw)
                          (S
                            (NP (PRP him))
                            (VP (VB draw)
                              (S
                                (S
                                  (ADVP (RB first))
                                  (NP (DT a) (NNP D)))
                                (CC and)
                                (S
                                  (ADVP (RB then))
                                  (NP
                                    (NP (DT an) (NNP O))
                                    (PP (IN on)
                                      (NP (DT the) (NN frame)))))))))))))))))))
    (. .)))

det(boys-2, The-1)
nsubj(imagine-5, boys-2)
aux(imagine-5, could-3)
neg(imagine-5, n't-4)
root(ROOT-0, imagine-5)
dobj(meant-8, what-6)
nsubj(do-10, what-6)
nsubj(meant-8, he-7)
ccomp(imagine-5, meant-8)
aux(do-10, to-9)
xcomp(meant-8, do-10)
advmod(saw-13, when-11)
nsubj(saw-13, they-12)
advcl(do-10, saw-13)
nsubj(draw-15, him-14)
ccomp(saw-13, draw-15)
advmod(D-18, first-16)
det(D-18, a-17)
dep(draw-15, D-18)
advmod(O-22, then-20)
det(O-22, an-21)
dep(draw-15, O-22)
conj_and(D-18, O-22)
det(frame-25, the-24)
prep_on(O-22, frame-25)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP they))
        (VP (VBD saw)
          (SBAR
            (S
              (NP
                (NP (DT a) (NNP C))
                (CC and)
                (NP (DT a) (NNP T)))
              (VP (VBP follow)))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD thought)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT a) (JJ conceited) (JJ little) (NN prig) (NN Willie))
          (VP (VBD was)))))
    (. !)))

cc(thought-13, But-1)
advmod(saw-4, when-2)
nsubj(saw-4, they-3)
advcl(thought-13, saw-4)
det(C-6, a-5)
nsubj(follow-10, C-6)
det(T-9, a-8)
conj_and(C-6, T-9)
nsubj(follow-10, T-9)
ccomp(saw-4, follow-10)
nsubj(thought-13, they-12)
root(ROOT-0, thought-13)
dobj(was-20, what-14)
det(Willie-19, a-15)
amod(Willie-19, conceited-16)
amod(Willie-19, little-17)
nn(Willie-19, prig-18)
nsubj(was-20, Willie-19)
ccomp(thought-13, was-20)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP 're)
                  (NP
                    (NP (DT a) (NN doctor))
                    (SBAR (IN because)
                      (S
                        (NP (PRP$ your) (NN father))
                        (VP (VBZ is) (, ,)
                          (NP (PRP you) (JJ little) (NN ape)))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(think-4, you-3)
ccomp(Do-2, think-4)
nsubj(doctor-8, you-5)
cop(doctor-8, 're-6)
det(doctor-8, a-7)
ccomp(think-4, doctor-8)
mark(ape-16, because-9)
poss(father-11, your-10)
nsubj(ape-16, father-11)
cop(ape-16, is-12)
dep(ape-16, you-14)
amod(ape-16, little-15)
dep(doctor-8, ape-16)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBD said))
    (. .)))

nsubj(said-2, they-1)
root(ROOT-0, said-2)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No) (, ,) (UH no)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (, ,)
    (S
      (VP
        (VP (VBG laughing)
          (ADVP (RB heartily)))
        (, ,)
        (CC but)
        (VP (VBG thinking) (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBD went)
                (PRT (RP on))
                (PP (IN with)
                  (NP (PRP$ his) (NN work)))
                (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (MD might)
                      (VP (VB be)
                        (NP
                          (NP (CD one))
                          (NP (DT some) (NN day)))))))))))))
    (. .)))

dep(answered-7, No-2)
dep(No-2, no-4)
root(ROOT-0, answered-7)
nsubj(answered-7, Willie-8)
vmod(answered-7, laughing-10)
advmod(laughing-10, heartily-11)
vmod(answered-7, thinking-14)
conj_but(laughing-10, thinking-14)
mark(went-18, as-16)
nsubj(went-18, he-17)
advcl(thinking-14, went-18)
prt(went-18, on-19)
poss(work-22, his-21)
prep_with(went-18, work-22)
mark(one-28, that-24)
nsubj(one-28, he-25)
aux(one-28, might-26)
cop(one-28, be-27)
ccomp(went-18, one-28)
det(day-30, some-29)
dep(one-28, day-30)

(ROOT
  (SINV
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP
            (NP (DT the) (NN drawing))
            (PP (IN of)
              (NP (DT the) (NNS letters))))
          (VP (VBD was)
            (VP (VBN finished)))))
      (, ,)
      (NP (EX there))
      (VP (VBD stood) (, ,)
        (S
          (NP (DT all))
          (VP (VB round)
            (NP (DT the) (NN slate))))))
    (, ,) ('' '')
    (VP (VBD _)
      (NP
        (NP
          (NP (NNP Doctor) (NNP Macmichael) (POS 's))
          (NNP Willie))
        (, ,)
        (NP (DT The) (NNPS Ruins))
        (, ,)))
    (NP (NNP Priory) (NNPS Leas) (NNP _))
    (. .) ('' '')))

advmod(finished-8, When-1)
det(drawing-3, the-2)
nsubjpass(finished-8, drawing-3)
det(letters-6, the-5)
prep_of(drawing-3, letters-6)
auxpass(finished-8, was-7)
advcl(stood-11, finished-8)
expl(stood-11, there-10)
ccomp(_-19, stood-11)
nsubj(round-14, all-13)
ccomp(stood-11, round-14)
det(slate-16, the-15)
dobj(round-14, slate-16)
root(ROOT-0, _-19)
nn(Macmichael-21, Doctor-20)
poss(Willie-23, Macmichael-21)
dobj(_-19, Willie-23)
det(Ruins-26, The-25)
appos(Willie-23, Ruins-26)
nn(_-30, Priory-28)
nn(_-30, Leas-29)
nsubj(_-19, _-30)

(ROOT
  (SINV (RB Then)
    (ADVP (RB out))
    (VP (VBD came))
    (NP (PRP$ his) (NN knife))
    (. .)))

advmod(came-3, Then-1)
advmod(came-3, out-2)
root(ROOT-0, came-3)
poss(knife-5, his-4)
nsubj(came-3, knife-5)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBD was)
      (NP (DT a) (JJ long) (NN job))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (NNP Willie))
          (VP (VBD was) (RB not)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (DT those) (JJ slovenly) (NNS boys))))
            (SBAR (IN that)
              (S
                (NP (JJ _) (NN scamp))
                (VP (VBZ _)
                  (NP (PRP$ their) (NN work)))))))))
    (. .)))

cc(job-6, But-1)
nsubj(job-6, it-2)
cop(job-6, was-3)
det(job-6, a-4)
amod(job-6, long-5)
root(ROOT-0, job-6)
mark(one-12, for-8)
nsubj(one-12, Willie-9)
cop(one-12, was-10)
neg(one-12, not-11)
advcl(job-6, one-12)
det(boys-16, those-14)
amod(boys-16, slovenly-15)
prep_of(one-12, boys-16)
mark(_-20, that-17)
amod(scamp-19, _-18)
nsubj(_-20, scamp-19)
ccomp(one-12, _-20)
poss(work-22, their-21)
dobj(_-20, work-22)

(ROOT
  (S
    (NP (JJ Such) (NNS boys))
    (VP (VBP are)
      (NP
        (NP (NN nothing))
        (PP (CC but)
          (NP
            (NP (JJ soft) (, ,) (JJ pulpy) (NNS creatures))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S (, ,)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP they))
                    (VP (VBP grow)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (NP (NNS men))))))))
                (, ,)
                (VP (MD will)
                  (VP (VB be)
                    (ADJP (RB too) (JJ soft))
                    (PP (IN for)
                      (NP
                        (NP (DT any))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (JJ hard) (NN work))
                            (PP (IN of)
                              (NP (DT the) (NN world)))))))))))))))
    (. .)))

amod(boys-2, Such-1)
nsubj(nothing-4, boys-2)
cop(nothing-4, are-3)
root(ROOT-0, nothing-4)
prep(nothing-4, but-5)
amod(creatures-9, soft-6)
amod(creatures-9, pulpy-8)
pobj(but-5, creatures-9)
dep(soft-23, creatures-9)
advmod(grow-15, when-13)
nsubj(grow-15, they-14)
nsubj(men-18, they-14)
advcl(soft-23, grow-15)
aux(men-18, to-16)
cop(men-18, be-17)
xcomp(grow-15, men-18)
aux(soft-23, will-20)
cop(soft-23, be-21)
advmod(soft-23, too-22)
rcmod(creatures-9, soft-23)
prep_for(soft-23, any-25)
det(work-29, the-27)
amod(work-29, hard-28)
prep_of(any-25, work-29)
det(world-32, the-31)
prep_of(work-29, world-32)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD will)
      (VP (VB be)
        (VP (VBN fit)
          (ADVP (RB only))
          (PP (IN for)
            (NP (NNS buffers)))
          (, ,)
          (S
            (VP (TO to)
              (VP (VB keep)
                (NP (DT the) (VBG working) (NNS men))
                (PP (IN from)
                  (S
                    (VP (VBG breaking)
                      (NP (PRP$ their) (NNS heads))
                      (PP (IN against)
                        (NP
                          (NP (DT each) (JJ other))
                          (PP (IN in)
                            (NP (PRP$ their) (NN eagerness))))))))))))))
    (. .)))

nsubjpass(fit-4, They-1)
nsubj(keep-10, They-1)
aux(fit-4, will-2)
auxpass(fit-4, be-3)
root(ROOT-0, fit-4)
advmod(fit-4, only-5)
prep_for(fit-4, buffers-7)
aux(keep-10, to-9)
xcomp(fit-4, keep-10)
det(men-13, the-11)
amod(men-13, working-12)
dobj(keep-10, men-13)
prepc_from(keep-10, breaking-15)
poss(heads-17, their-16)
dobj(breaking-15, heads-17)
det(other-20, each-19)
prep_against(breaking-15, other-20)
poss(eagerness-23, their-22)
prep_in(other-20, eagerness-23)

(ROOT
  (S
    (S (CC But)
      (NP (DT the) (NN carving))
      (VP (VBD was)
        (PP (IN at)
          (NP
            (NP (NN length))
            (SBAR
              (S
                (VP
                  (VP (VBD finished))
                  (, ,)
                  (CC and)
                  (VP (VBD gave)
                    (NP
                      (NP (JJ much) (NN satisfaction))
                      (: --)
                      (ADVP (JJ first)
                        (PP (TO to)
                          (NP (NNP Willie)))))
                    (NP (PRP himself))))))))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (VP (VBN finished)))))))
    (: ;)
    (S
      (NP
        (NP (JJ next))
        (, ,)
        (PP (TO to)
          (NP (NNP Alexander) (NNP Spelman)))
        (, ,)
        (NP (NNP Priory) (NNP Leas))
        (, ,)
        (SBAR (IN because) (, ,)
          (S
            (S
              (S
                (VP (VBG being)
                  (NP (DT a) (JJ generous-minded) (NN boy))))
              (, ,)
              (NP (PRP he))
              (VP (VBD admired)
                (NP
                  (NP
                    (NP (NNP Willie) (POS 's))
                    (ADJP (JJ new)
                      (CC and)
                      (JJ superior))
                    (NN work))
                  (: ;)
                  (NP (JJ third))
                  (, ,))
                (PP (TO to)
                  (NP (NNP Mr)
                    (CC and)
                    (NNP Mrs) (NNP Macmichael)))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (PRP they))
                    (VP (VBD saw)
                      (PP (IN in)
                        (NP
                          (NP (PRP it))
                          (, ,) (RB not)
                          (NP
                            (NP (DT the) (NN boy) (POS 's))
                            (NN faculty))))
                      (ADVP (RB merely)))))))
            (, ,)
            (CC but)
            (S
              (NP
                (NP (PRP$ his) (NN love))
                (PP
                  (PP (TO to)
                    (NP
                      (NP (PRP$ his) (NN father))
                      (ADVP (RB as) (RB well))))
                  (: ;)
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN recognition))
                      (PP (IN of)
                        (NP
                          (NP (DT a) (NN right))
                          (PP (IN over)
                            (NP (PRP us)))))))))
              (VP (VBZ is)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (NP (DT the) (NN sweetest) (NNS forms) (NN love)))))))))
      (VP (MD can)
        (VP (VB take))))
    (. .) ('' '')))

cc(was-4, But-1)
det(carving-3, the-2)
nsubj(was-4, carving-3)
root(ROOT-0, was-4)
prep_at(was-4, length-6)
rcmod(length-6, finished-7)
rcmod(length-6, gave-10)
conj_and(finished-7, gave-10)
amod(satisfaction-12, much-11)
iobj(gave-10, satisfaction-12)
advmod(satisfaction-12, first-14)
prep_to(first-14, Willie-16)
dobj(gave-10, himself-17)
mark(finished-22, because-19)
nsubjpass(finished-22, it-20)
auxpass(finished-22, was-21)
advcl(was-4, finished-22)
nsubj(take-95, next-24)
nn(Spelman-28, Alexander-27)
prep_to(next-24, Spelman-28)
nn(Leas-31, Priory-30)
appos(next-24, Leas-31)
mark(admired-41, because-33)
cop(boy-38, being-35)
det(boy-38, a-36)
amod(boy-38, generous-minded-37)
vmod(admired-41, boy-38)
nsubj(admired-41, he-40)
dep(next-24, admired-41)
poss(work-47, Willie-42)
amod(work-47, new-44)
conj_and(new-44, superior-46)
amod(work-47, superior-46)
dobj(admired-41, work-47)
dep(work-47, third-49)
nn(Macmichael-55, Mr-52)
conj_and(Mr-52, Mrs-54)
nn(Macmichael-55, Mrs-54)
prep_to(admired-41, Macmichael-55)
mark(saw-59, because-57)
nsubj(saw-59, they-58)
advcl(admired-41, saw-59)
prep_in(saw-59, it-61)
neg(faculty-67, not-63)
det(boy-65, the-64)
poss(faculty-67, boy-65)
appos(it-61, faculty-67)
advmod(saw-59, merely-68)
poss(love-72, his-71)
nsubj(one-88, love-72)
poss(father-75, his-74)
prep_to(love-72, father-75)
advmod(well-77, as-76)
mwe(well-77, as-76)
advmod(father-75, well-77)
det(recognition-81, the-80)
prep_for(love-72, recognition-81)
det(right-84, a-83)
prep_of(recognition-81, right-84)
prep_over(right-84, us-86)
cop(one-88, is-87)
dep(next-24, one-88)
conj_but(admired-41, one-88)
det(love-93, the-90)
nn(love-93, sweetest-91)
nn(love-93, forms-92)
prep_of(one-88, love-93)
aux(take-95, can-94)
parataxis(was-4, take-95)

(ROOT
  (S
    (ADVP (RB _))
    (NP (PRP I))
    (VP (VBP am)
      (NP
        (NP (PRP$ yours) (NN _))
        ('' '')
        (SBAR
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the)
                  (ADJP (JJS best)
                    (CC and)
                    (JJS greatest))
                  (NN thing))
                (SBAR
                  (S
                    (NP (PRP one))
                    (VP (MD can)
                      (VP (VB say)))))))))
        (, ,)
        (ADJP (IN if)
          (PP (TO to)
            (NP (DT the) (JJ right) (NN person))))))
    (. .)))

advmod(_-5, _-1)
nsubj(_-5, I-2)
cop(_-5, am-3)
poss(_-5, yours-4)
root(ROOT-0, _-5)
cop(thing-12, is-7)
det(thing-12, the-8)
amod(thing-12, best-9)
conj_and(best-9, greatest-11)
amod(thing-12, greatest-11)
rcmod(_-5, thing-12)
nsubj(say-15, one-13)
aux(say-15, can-14)
rcmod(thing-12, say-15)
amod(_-5, if-17)
det(person-21, the-19)
amod(person-21, right-20)
prep_to(if-17, person-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD led)
      (PP
        (PP (TO to)
          (NP
            (NP (DT a) (JJ strong) (NN friendship))
            (PP (IN between)
              (NP
                (NP (PRP him))
                (CC and)
                (NP (NNP Spelman))))))
        (, ,)
        (CC and)
        (PP (TO to)
          (NP (PRP$ his) (NN going))))
      (ADVP (RB often))
      (PP (TO to)
        (NP
          (NP (DT the) (NN workshop))
          (PP (IN of)
            (NP
              (NP (DT the) (JJR elder) (NN Spelman))
              (, ,)
              (NP (DT the) (NN carpenter)))))))
    (. .)))

nsubj(led-2, It-1)
root(ROOT-0, led-2)
det(friendship-6, a-4)
amod(friendship-6, strong-5)
prep_to(led-2, friendship-6)
prep_between(friendship-6, him-8)
prep_between(friendship-6, Spelman-10)
conj_and(him-8, Spelman-10)
poss(going-15, his-14)
prep_to(led-2, going-15)
conj_and(friendship-6, going-15)
advmod(led-2, often-16)
det(workshop-19, the-18)
prep_to(led-2, workshop-19)
det(Spelman-23, the-21)
amod(Spelman-23, elder-22)
prep_of(workshop-19, Spelman-23)
det(carpenter-26, the-25)
appos(Spelman-23, carpenter-26)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (UCP
        (NP (DT a) (NN solemn))
        (, ,)
        (ADJP (JJ long-faced))
        (, ,)
        (CC and)
        (NP (JJ long-legged) (NN man)))
      (, ,)
      (PP
        (PP (IN with)
          (NP
            (NP (JJ reddish) (NN hair)
              (CC and)
              (NN pale) (NN complexion))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (ADVP (RB seldom)
                  (CC or)
                  (RB ever))
                (VP (VBD smiled))))
            (, ,)))
        (CC and)
        (PP (IN at)
          (NP
            (NP (DT the) (NN bench))
            (VP
              (ADVP (RB always))
              (VBN looked)
              (SBAR (IN as)
                (S
                  (SBAR (IN if)
                    (S
                      (NP (PRP he))
                      (VP (VBD were)
                        (VP (VBG standing)
                          (PP (IN on)
                            (NP (DT a) (NN stool)))))))
                  (, ,)
                  (NP (PRP he))
                  (VP (VBD stooped)
                    (ADJP (RB so) (JJ immoderately))))))))))
    (. .)))

nsubj(solemn-4, He-1)
nsubj(long-faced-6, He-1)
cop(solemn-4, was-2)
det(solemn-4, a-3)
root(ROOT-0, solemn-4)
conj_and(solemn-4, solemn-4')
amod(solemn-4, long-faced-6)
conj_and(solemn-4, long-faced-6)
amod(man-10, long-legged-9)
conj_and(solemn-4, man-10)
amod(hair-14, reddish-13)
prep_with(solemn-4, hair-14)
nsubj(smiled-23, hair-14)
nn(complexion-17, pale-16)
prep_with(solemn-4, complexion-17)
conj_and(hair-14, complexion-17)
nsubj(smiled-23, complexion-17)
advmod(smiled-23, seldom-20)
conj_or(seldom-20, ever-22)
advmod(smiled-23, ever-22)
rcmod(hair-14, smiled-23)
det(bench-28, the-27)
prep_at(solemn-4', bench-28)
advmod(looked-30, always-29)
vmod(bench-28, looked-30)
mark(stooped-41, as-31)
mark(standing-35, if-32)
nsubj(standing-35, he-33)
aux(standing-35, were-34)
advcl(stooped-41, standing-35)
det(stool-38, a-37)
prep_on(standing-35, stool-38)
nsubj(stooped-41, he-40)
advcl(looked-30, stooped-41)
advmod(immoderately-43, so-42)
acomp(stooped-41, immoderately-43)

(ROOT
  (S
    (NP
      (NP (DT A) (JJR greater) (NN contrast))
      (PP (IN than)
        (NP
          (NP (DT that))
          (PP (IN between)
            (NP
              (NP (PRP him))
              (CC and)
              (NP (DT the) (NN shoemaker)))))))
    (VP (MD could)
      (ADVP (RB hardly))
      (VP (VB have)
        (VP (VBN been)
          (VP (VBN found) (, ,)
            (PP (IN except)
              (PP (IN in)
                (NP (DT this))))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (DT the) (NN carpenter))
                (ADVP (RB also))
                (VP (VBD looked)
                  (ADVP (RB sickly)))))))))
    (. .)))

det(contrast-3, A-1)
amod(contrast-3, greater-2)
nsubjpass(found-15, contrast-3)
prep_than(contrast-3, that-5)
prep_between(that-5, him-7)
det(shoemaker-10, the-9)
prep_between(that-5, shoemaker-10)
conj_and(him-7, shoemaker-10)
aux(found-15, could-11)
advmod(found-15, hardly-12)
aux(found-15, have-13)
auxpass(found-15, been-14)
root(ROOT-0, found-15)
prep(found-15, except-17)
pcomp(except-17, in-18)
pobj(in-18, this-19)
mark(looked-25, that-21)
det(carpenter-23, the-22)
nsubj(looked-25, carpenter-23)
advmod(looked-25, also-24)
ccomp(found-15, looked-25)
advmod(looked-25, sickly-26)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (PP (IN in)
          (NP (JJ perfect) (NN health)))
        (, ,)
        (ADVP (RB however))))
    (PRN (, ,)
      (S
        (ADVP (RB only))
        (VP (VBN oppressed)
          (PP (IN with)
            (NP
              (NP
                (NP (DT the) (NN cares))
                (PP (IN of)
                  (NP (PRP$ his) (NN family))))
              (, ,)
              (CC and)
              (NP
                (NP (DT the) (NN sickness))
                (PP (IN of)
                  (NP
                    (NP (PRP$ his) (NN wife))
                    (, ,)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBD was)
                          (ADJP (DT a) (JJ constant) (JJ invalid))
                          (, ,)
                          (PP (IN with)
                            (NP
                              (NP (JJR more) (NNS children))
                              (SBAR
                                (S
                                  (NP (PRP$ her) (NN husband))
                                  (VP (VBD thought)
                                    (SBAR (IN than)
                                      (S
                                        (NP (PRP she))
                                        (VP (MD could)
                                          (ADVP (RB well))
                                          (VP (VB manage))))))))))))))))))))
      (, ,))
    (CC or)
    (S
      (NP (PRP he))
      (ADVP (RB well))
      (VP (VBP provide)
        (PP (IN for))))
    (. .)))

nsubj(was-2, He-1)
root(ROOT-0, was-2)
amod(health-5, perfect-4)
prep_in(was-2, health-5)
advmod(was-2, however-7)
advmod(oppressed-10, only-9)
dep(was-2, oppressed-10)
det(cares-13, the-12)
prep_with(oppressed-10, cares-13)
poss(family-16, his-15)
prep_of(cares-13, family-16)
det(sickness-20, the-19)
prep_with(oppressed-10, sickness-20)
conj_and(cares-13, sickness-20)
poss(wife-23, his-22)
prep_of(sickness-20, wife-23)
nsubj(invalid-29, wife-23)
cop(invalid-29, was-26)
det(invalid-29, a-27)
amod(invalid-29, constant-28)
rcmod(wife-23, invalid-29)
amod(children-33, more-32)
prep_with(invalid-29, children-33)
poss(husband-35, her-34)
nsubj(thought-36, husband-35)
rcmod(children-33, thought-36)
mark(manage-41, than-37)
nsubj(manage-41, she-38)
aux(manage-41, could-39)
advmod(manage-41, well-40)
advcl(thought-36, manage-41)
nsubj(provide-46, he-44)
advmod(provide-46, well-45)
conj_or(was-2, provide-46)
prep(provide-46, for-47)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN thought)
            (ADVP (RBR less))
            (PP (IN about)
              (NP (PRP it)))))))
    (NP (PRP he))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN got)
          (PP (IN on)
            (ADVP (RBR better))))))
    (. .)))

cc(got-12, But-1)
mark(thought-5, if-2)
nsubj(thought-5, he-3)
aux(thought-5, had-4)
advcl(got-12, thought-5)
advmod(thought-5, less-6)
prep_about(thought-5, it-8)
nsubj(got-12, he-9)
aux(got-12, would-10)
aux(got-12, have-11)
root(ROOT-0, got-12)
prepc_on(got-12, better-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD worked)
      (ADJP
        (ADJP (JJ hard))
        (, ,)
        (CC but)
        (ADJP (RB little) (JJ fancied)))
      (SBAR
        (WHADJP (WRB how) (JJ many))
        (S
          (NP
            (NP (JJR fewer) (NNS strokes))
            (PP (IN of)
              (NP
                (NP (PRP$ his) (NN plane))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD made)
                      (PP (IN in)
                        (NP (DT an) (NN hour)))
                      (SBAR (RB just) (IN because)
                        (S
                          (NP (PRP he))
                          (VP (VBD was)
                            (VP
                              (VP (VBG brooding)
                                (PP (IN over)
                                  (NP (PRP$ his) (NNS difficulties))))
                              (, ,)
                              (CC and)
                              (VP (VBG imagining)
                                (NP (WP what)))))))))))))
          (VP (MD would)
            (VP (VB be)
              (NP
                (NP (DT the) (NNS consequences))
                (SBAR (IN if)
                  (S
                    (NP
                      (NP (DT this))
                      (CC or)
                      (NP (DT that) (NN misfortune)))
                    (VP (VBD were)
                      (S
                        (VP (TO to)
                          (VP (VB befall)
                            (NP (PRP him))))))))
                (: --)
                (SBAR
                  (WHPP (IN of)
                    (WHNP (WDT which)))
                  (S
                    (NP (PRP he))
                    (VP
                      (VP
                        (NP (PRP himself))
                        (VBN sought))
                      (CC and)
                      (VP (VBN secured)
                        (ADVP
                          (NP (DT the) (NN shadow))
                          (RB beforehand))
                        (, ,)
                        (S
                          (VP (TO to)
                            (VP (VB darken)
                              (CC and)
                              (VB hinder)
                              (NP
                                (NP (DT the) (NN labour))
                                (SBAR
                                  (WHNP (WDT which))
                                  (S
                                    (VP (MD might)
                                      (VP (VB prevent)
                                        (NP (PRP$ its) (NN arrival))))))))))))))))))))
    (. .)))

nsubj(worked-2, He-1)
root(ROOT-0, worked-2)
acomp(worked-2, hard-3)
advmod(fancied-7, little-6)
acomp(worked-2, fancied-7)
conj_but(hard-3, fancied-7)
advmod(many-9, how-8)
dep(consequences-35, many-9)
amod(strokes-11, fewer-10)
nsubj(consequences-35, strokes-11)
poss(plane-14, his-13)
prep_of(strokes-11, plane-14)
nsubj(made-16, he-15)
rcmod(plane-14, made-16)
det(hour-19, an-18)
prep_in(made-16, hour-19)
advmod(brooding-24, just-20)
mark(brooding-24, because-21)
nsubj(brooding-24, he-22)
nsubj(imagining-30, he-22)
aux(brooding-24, was-23)
advcl(made-16, brooding-24)
poss(difficulties-27, his-26)
prep_over(brooding-24, difficulties-27)
advcl(made-16, imagining-30)
conj_and(brooding-24, imagining-30)
dobj(imagining-30, what-31)
aux(consequences-35, would-32)
cop(consequences-35, be-33)
det(consequences-35, the-34)
ccomp(worked-2, consequences-35)
prep_of(sought-50, consequences-35)
mark(were-41, if-36)
nsubj(were-41, this-37)
nsubj(befall-43, this-37)
det(misfortune-40, that-39)
conj_or(this-37, misfortune-40)
nsubj(were-41, misfortune-40)
nsubj(befall-43, misfortune-40)
dep(consequences-35, were-41)
aux(befall-43, to-42)
xcomp(were-41, befall-43)
dobj(befall-43, him-44)
nsubj(sought-50, he-48)
nsubj(secured-52, he-48)
nsubj(darken-58, he-48)
dobj(sought-50, himself-49)
rcmod(consequences-35, sought-50)
rcmod(consequences-35, secured-52)
conj_and(sought-50, secured-52)
det(shadow-54, the-53)
npadvmod(beforehand-55, shadow-54)
advmod(secured-52, beforehand-55)
aux(darken-58, to-57)
xcomp(secured-52, darken-58)
xcomp(secured-52, hinder-60)
conj_and(darken-58, hinder-60)
det(labour-62, the-61)
dobj(darken-58, labour-62)
nsubj(prevent-65, labour-62)
aux(prevent-65, might-64)
rcmod(labour-62, prevent-65)
poss(arrival-67, its-66)
dobj(prevent-65, arrival-67)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD was)
      (NP (DT a) (JJ good) (NN man))
      (ADVP (RB nevertheless))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP$ his) (JJS greatest) (NN bugbear))
          (VP (VBD was)
            (NP (NN debt))))))
    (. .)))

cc(man-6, But-1)
nsubj(man-6, he-2)
cop(man-6, was-3)
det(man-6, a-4)
amod(man-6, good-5)
root(ROOT-0, man-6)
advmod(man-6, nevertheless-7)
mark(debt-14, for-9)
poss(bugbear-12, his-10)
amod(bugbear-12, greatest-11)
nsubj(debt-14, bugbear-12)
cop(debt-14, was-13)
advcl(man-6, debt-14)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP he))
          (VP (MD could)
            (ADVP (RB only))
            (VP (VB pay)
              (PRT (RP off))
              (NP (DT every) (NN penny))))))
      (NP (PRP he))
      (VP (VBD owed)
        (PP (IN in)
          (NP (DT the) (NN world)))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if) (RB only)
        (S
          (NP (PRP$ his) (NN wife))
          (VP (VBD were)
            (ADJP
              (ADJP (RB so) (RB far) (JJR better))
              (SBAR (IN as)
                (S
                  (VP (TO to)
                    (VP (VB enjoy)
                      (NP
                        (NP (NN life))
                        (NP (DT a) (JJ little)))))))))))
      (, ,)
      (NP (PRP he))
      (VP (MD would)
        (PRN (, ,)
          (S
            (NP (PRP he))
            (VP (VBD thought)))
          (, ,))
        (VP (VB be)
          (ADJP (RB perfectly) (JJ happy)))))
    (. .)))

mark(pay-5, If-1)
nsubj(pay-5, he-2)
aux(pay-5, could-3)
advmod(pay-5, only-4)
advcl(owed-10, pay-5)
prt(pay-5, off-6)
det(penny-8, every-7)
dobj(pay-5, penny-8)
nsubj(owed-10, he-9)
root(ROOT-0, owed-10)
det(world-13, the-12)
prep_in(owed-10, world-13)
mark(better-23, if-16)
advmod(better-23, only-17)
poss(wife-19, his-18)
nsubj(better-23, wife-19)
cop(better-23, were-20)
advmod(better-23, so-21)
advmod(better-23, far-22)
advcl(happy-39, better-23)
mark(enjoy-26, as-24)
aux(enjoy-26, to-25)
dep(better-23, enjoy-26)
dobj(enjoy-26, life-27)
iobj(enjoy-26, life-27)
det(little-29, a-28)
dep(life-27, little-29)
nsubj(happy-39, he-31)
aux(happy-39, would-32)
nsubj(thought-35, he-34)
parataxis(happy-39, thought-35)
cop(happy-39, be-37)
advmod(happy-39, perfectly-38)
conj_and(owed-10, happy-39)

(ROOT
  (S
    (NP (PRP$ His) (NN wife))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (VBD was)
      (UCP
        (ADVP (RB tolerably))
        (ADJP (JJ happy))
        (, ,)
        (X
          (PP (IN notwithstanding)
            (NP (PRP$ her) (JJ weak) (NN health))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB certainly))
          (VBN enjoyed)
          (NP
            (NP
              (NP (NN life))
              (NP (DT a) (JJ good) (NN deal)))
            (: --)
            (ADVP
              (ADVP (RB far) (RBR more))
              (SBAR
                (ADVP (IN at) (JJS least))
                (IN than)
                (S
                  (NP (PRP$ her) (NN husband))
                  (VP (VBD was)
                    (ADJP (JJ able)
                      (S
                        (VP (TO to)
                          (VP (VB believe)))))))))))))
    (. .)))

poss(wife-2, His-1)
nsubj(was-6, wife-2)
advmod(was-6, however-4)
root(ROOT-0, was-6)
advmod(was-6, tolerably-7)
dep(tolerably-7, happy-8)
dep(tolerably-7, notwithstanding-10)
poss(health-13, her-11)
amod(health-13, weak-12)
pobj(notwithstanding-10, health-13)
advmod(enjoyed-17, certainly-16)
advmod(was-6, enjoyed-17)
conj_and(tolerably-7, enjoyed-17)
dobj(enjoyed-17, life-18)
det(deal-21, a-19)
amod(deal-21, good-20)
dep(life-18, deal-21)
advmod(more-24, far-23)
advmod(life-18, more-24)
advmod(able-31, at-25)
pobj(at-25, least-26)
mark(able-31, than-27)
poss(husband-29, her-28)
nsubj(able-31, husband-29)
nsubj(believe-33, husband-29)
cop(able-31, was-30)
advcl(more-24, able-31)
aux(believe-33, to-32)
xcomp(able-31, believe-33)

(ROOT
  (S
    (S
      (NP (NNP Mr) (NNP Macmichael))
      (VP (VBD was)
        (ADJP
          (ADJP (RB very) (JJ kind)
            (CC and)
            (JJ attentive))
          (PP (TO to)
            (NP (NNP Mrs) (NNP Spelman))))))
    (: ;)
    (S
      (ADVP (RB though))
      (, ,)
      (PP (IN as)
        (NP
          (NP (DT the) (NN carpenter))
          (SBAR
            (S
              (NP (PRP himself))
              (VP (VBD said))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD had) (RB n't)
        (VP (VBN seen)
          (NP
            (NP (DT the) (NN colour))
            (PP (IN of)
              (S
                (VP (VBG _)
                  (NP (PRP$ his) (JJ _) (NN money))
                  (PP (IN for)
                    (NP (NNS years))))))))))
    (. .)))

nn(Macmichael-2, Mr-1)
nsubj(kind-5, Macmichael-2)
nsubj(attentive-7, Macmichael-2)
cop(kind-5, was-3)
advmod(kind-5, very-4)
root(ROOT-0, kind-5)
conj_and(kind-5, attentive-7)
nn(Spelman-10, Mrs-9)
prep_to(kind-5, Spelman-10)
advmod(seen-23, though-12)
det(carpenter-16, the-15)
prep_as(seen-23, carpenter-16)
nsubj(said-18, himself-17)
rcmod(carpenter-16, said-18)
nsubj(seen-23, he-20)
aux(seen-23, had-21)
neg(seen-23, n't-22)
parataxis(kind-5, seen-23)
det(colour-25, the-24)
dobj(seen-23, colour-25)
prepc_of(colour-25, _-27)
poss(money-30, his-28)
amod(money-30, _-29)
dobj(_-27, money-30)
prep_for(_-27, years-32)

(ROOT
  (S (CC But)
    (NP (DT the) (NNP Doctor))
    (VP
      (VP (VBD knew)
        (SBAR (IN that)
          (S
            (NP (NNP Spelman))
            (VP (VBD was)
              (NP (DT a) (JJ hard-working) (NN man))))))
      (, ,)
      (CC and)
      (VP (MD would) (RB rather)
        (VP (VB have)
          (VP (VBN given)
            (NP (PRP him))
            (NP
              (NP (DT a) (JJ little) (NN money))
              (SBAR (IN than)
                (S
                  (VP (VBP have)
                    (VP (VBN pressed)
                      (NP (PRP him))
                      (PP (IN for)
                        (NP (DT a) (NN penny))))))))))))
    (. .)))

det(Doctor-3, the-2)
nsubj(knew-4, Doctor-3)
nsubj(given-16, Doctor-3)
root(ROOT-0, knew-4)
mark(man-10, that-5)
nsubj(man-10, Spelman-6)
cop(man-10, was-7)
det(man-10, a-8)
amod(man-10, hard-working-9)
ccomp(knew-4, man-10)
aux(given-16, would-13)
advmod(given-16, rather-14)
aux(given-16, have-15)
conj_and(knew-4, given-16)
iobj(given-16, him-17)
det(money-20, a-18)
amod(money-20, little-19)
dobj(given-16, money-20)
mark(pressed-23, than-21)
aux(pressed-23, have-22)
dep(money-20, pressed-23)
dobj(pressed-23, him-24)
det(penny-27, a-26)
prep_for(pressed-23, penny-27)

(ROOT
  (SINV
    (S
      (NP (PRP He))
      (VP (VBD told)
        (NP (PRP him))
        (NP (CD one) (NN day))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBG lamenting)
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (MD could) (RB n't)
                      (VP (VB pay)
                        (NP (PRP him))
                        (SBAR (RB even)
                          (S
                            (ADJP (JJ _)
                              (CC yet)
                              (JJ _))))
                        (, ,)
                        (SBAR (IN that)
                          (S
                            (NP (PRP he))
                            (VP (VBD was)
                              (ADVP (RB only))
                              (ADJP (RB too) (JJ glad)
                                (S
                                  (VP (TO to)
                                    (VP (VB do)
                                      (NP (NN anything))
                                      (PP (IN in)
                                        (NP
                                          (NP (DT the) (JJS least) (JJ little) (NN bit))
                                          (PP (IN like)
                                            (SBAR
                                              (WHNP (WP what))
                                              (S
                                                (NP (DT the) (NNP Saviour))
                                                (VP (VBD did)
                                                  (SBAR
                                                    (WHADVP (WRB when))
                                                    (S
                                                      (NP (PRP he))
                                                      (VP (VBD was)
                                                        (PP (IN in)
                                                          (NP (DT the) (NN world))))))
                                                  (: --) (`` ``)
                                                  (S
                                                    (NP (DT a) (NN carpenter))
                                                    (VP (VB like)
                                                      (S
                                                        (NP (PRP you))
                                                        (, ,)
                                                        (NP (NNP Spelman))
                                                        (: --)
                                                        (VP (VBP think)
                                                          (PP (IN of)
                                                            (NP (DT that))))))))))))))))))))))))))))))
    (, ,) ('' '')
    (VP (VBD added))
    (NP (DT the) (NNP Doctor))
    (. .)))

nsubj(told-2, He-1)
ccomp(added-61, told-2)
dobj(told-2, him-3)
num(day-5, one-4)
tmod(told-2, day-5)
advmod(lamenting-10, when-7)
nsubj(lamenting-10, he-8)
aux(lamenting-10, was-9)
ccomp(told-2, lamenting-10)
mark(pay-15, that-11)
nsubj(pay-15, he-12)
aux(pay-15, could-13)
neg(pay-15, n't-14)
ccomp(lamenting-10, pay-15)
dobj(pay-15, him-16)
advmod(_-18, even-17)
dep(pay-15, _-18)
dep(pay-15, _-20)
conj_yet(_-18, _-20)
mark(glad-27, that-22)
nsubj(glad-27, he-23)
nsubj(do-29, he-23)
cop(glad-27, was-24)
advmod(glad-27, only-25)
advmod(glad-27, too-26)
ccomp(pay-15, glad-27)
aux(do-29, to-28)
xcomp(glad-27, do-29)
dobj(do-29, anything-30)
det(bit-35, the-32)
amod(bit-35, least-33)
amod(bit-35, little-34)
prep_in(do-29, bit-35)
dobj(did-40, what-37)
det(Saviour-39, the-38)
nsubj(did-40, Saviour-39)
prepc_like(bit-35, did-40)
advmod(was-43, when-41)
nsubj(was-43, he-42)
advcl(did-40, was-43)
det(world-46, the-45)
prep_in(was-43, world-46)
det(carpenter-50, a-49)
nsubj(like-51, carpenter-50)
ccomp(did-40, like-51)
nsubj(think-56, you-52)
nsubj(think-56, Spelman-54)
ccomp(like-51, think-56)
prep_of(think-56, that-58)
root(ROOT-0, added-61)
det(Doctor-63, the-62)
nsubj(added-61, Doctor-63)

(ROOT
  (S (IN So)
    (NP (NNP Spelman))
    (VP (VBD was)
      (ADJP (RB as) (JJ full)
        (PP (IN of)
          (NP (NN gratitude))))
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB hold))))))
    (. .)))

dep(full-5, So-1)
nsubj(full-5, Spelman-2)
cop(full-5, was-3)
advmod(full-5, as-4)
root(ROOT-0, full-5)
prep_of(full-5, gratitude-7)
mark(hold-11, as-8)
nsubj(hold-11, he-9)
aux(hold-11, could-10)
advcl(full-5, hold-11)

(ROOT
  (S
    (PP (IN Except)
      (NP (NNP Hector) (NNP Macallaster)))
    (, ,)
    (NP (DT the) (NNP Doctor))
    (VP (VBD was)
      (ADVP (RB almost))
      (NP (PRP$ his) (JJ only) (NN creditor)))
    (. .)))

nn(Macallaster-3, Hector-2)
prep_except(creditor-11, Macallaster-3)
det(Doctor-6, the-5)
nsubj(creditor-11, Doctor-6)
cop(creditor-11, was-7)
advmod(creditor-11, almost-8)
poss(creditor-11, his-9)
amod(creditor-11, only-10)
root(ROOT-0, creditor-11)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Medicine))
        (CC and)
        (NP (NNS shoes)))
      (VP (VBD were)
        (NP (PRP$ his) (JJ chief) (NNS trials))))
    (: :)
    (S
      (S
        (NP (PRP he))
        (VP (VBD kept)
          (PP (IN on)
            (S
              (VP (VBG paying)
                (PP (IN for)
                  (NP (DT the) (NN latter))))))))
      (, ,)
      (CC but)
      (S
        (NP
          (NP (DT the) (NN debt))
          (PP (IN for)
            (NP (DT the) (JJ former))))
        (VP (VBD went)
          (PP (IN on)
            (S
              (VP (VBG accumulating)))))))
    (. .)))

nsubj(trials-7, Medicine-1)
conj_and(Medicine-1, shoes-3)
nsubj(trials-7, shoes-3)
cop(trials-7, were-4)
poss(trials-7, his-5)
amod(trials-7, chief-6)
root(ROOT-0, trials-7)
nsubj(kept-10, he-9)
parataxis(trials-7, kept-10)
prepc_on(kept-10, paying-12)
det(latter-15, the-14)
prep_for(paying-12, latter-15)
det(debt-19, the-18)
nsubj(went-23, debt-19)
det(former-22, the-21)
prep_for(debt-19, former-22)
parataxis(trials-7, went-23)
conj_but(kept-10, went-23)
prepc_on(went-23, accumulating-25)

(ROOT
  (S
    (S
      (ADVP (RB Hence))
      (NP (PRP it))
      (VP (VBD came)
        (SBAR (IN that)
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (NNP Willie))
                (VP (VBD began)
                  (S
                    (VP (TO to)
                      (VP (VB haunt)
                        (NP (PRP$ his) (NN shop)))))
                  (, ,)
                  (SBAR (IN though)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (S
                          (NP (RB hardly) (DT a) (JJ single) (NN smile))
                          (VP (TO to)
                            (VP (VB give)
                              (NP (DT the) (JJ little) (NN fellow)))))))))))
            (, ,)
            (NP (PRP he))
            (VP (VBD was)
              (ADJP
                (ADVP (RBR more) (IN than))
                (VBN pleased)))))))
    (: ;) (: --)
    (S
      (SINV
        (VP (VBD gave)
          (NP (PRP him)))
        (NP
          (NP (NNS odds)
            (CC and)
            (NNS ends))
          (PP (IN of)
            (NP (NN wood)))))
      (: ;)
      (SINV
        (VP (VBD lent))
        (NP (PRP him))
        (SBAR
          (WHNP (WDT whatever) (NNS tools))
          (S
            (NP (PRP he))
            (VP (VBD wanted)
              (SBAR (IN except)
                (S
                  (NP
                    (NP (DT the) (NN adze))
                    (: --)
                    (SBAR (IN that)
                      (S
                        (NP (PRP he))
                        (VP (MD would) (RB not)
                          (VP (VB let)
                            (S
                              (NP (PRP him))
                              (VP (VB touch)))))))
                    (: ;))
                  (VP (MD would)
                    (VP (VB drop)
                      (S
                        (S
                          (NP (PRP him))
                          (ADVP
                            (NP (DT a) (NN hint))
                            (RB now)))
                        (CC and)
                        (S
                          (ADVP (RB then))
                          (ADJP (RB as)
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN use))
                                (PP (IN of)
                                  (NP (PRP them))))))))))))))))
      (: ;)
      (SINV (MD would)
        (NP (DT any) (NN moment))
        (VP (VB stop)
          (NP (PRP$ his) (JJ own) (NN work))
          (S
            (VP (TO to)
              (VP (VB attend)
                (PP (TO to)
                  (NP
                    (NP (DT a) (NN difficulty))
                    (SBAR
                      (S
                        (NP (DT the) (NN boy))
                        (VP (VBD found)
                          (NP (PRP himself))
                          (PP (IN in)))))))))))))
    (: ;)
    (CC and)
    (S
      (NP
        (PRN (, ,)
          (PP (IN in)
            (ADJP (JJ short)))
          (, ,)))
      (VP (VBD paid)
        (NP (PRP him))
        (NP
          (ADJP (RB far) (JJR more))
          (NN attention))
        (SBAR (IN than)
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB have)
                (VP (VBN thought)
                  (S
                    (VP (VBN required)
                      (PP (IN of)
                        (NP (PRP him)))))
                  (SBAR (IN if)
                    (S
                      (NP (NNP Willie))
                      (VP (VBD had)
                        (VP (VBN been)
                          (NP (PRP$ his) (NN apprentice)))))))))))))
    (. .)))

advmod(came-3, Hence-1)
nsubj(came-3, it-2)
root(ROOT-0, came-3)
mark(pleased-30, that-4)
advmod(began-7, when-5)
nsubj(began-7, Willie-6)
nsubj(haunt-9, Willie-6)
advcl(pleased-30, began-7)
aux(haunt-9, to-8)
xcomp(began-7, haunt-9)
poss(shop-11, his-10)
dobj(haunt-9, shop-11)
mark(had-15, though-13)
nsubj(had-15, he-14)
advcl(began-7, had-15)
advmod(smile-19, hardly-16)
det(smile-19, a-17)
amod(smile-19, single-18)
dobj(had-15, smile-19)
nsubj(give-21, smile-19)
aux(give-21, to-20)
ccomp(had-15, give-21)
xcomp(had-15, give-21)
det(fellow-24, the-22)
amod(fellow-24, little-23)
dobj(give-21, fellow-24)
nsubjpass(pleased-30, he-26)
auxpass(pleased-30, was-27)
advmod(than-29, more-28)
advmod(pleased-30, than-29)
ccomp(came-3, pleased-30)
dep(stop-77, gave-33)
dobj(gave-33, him-34)
nsubj(gave-33, odds-35)
nsubj(gave-33, ends-37)
conj_and(odds-35, ends-37)
prep_of(odds-35, wood-39)
parataxis(stop-77, lent-41)
nsubj(lent-41, him-42)
det(tools-44, whatever-43)
dobj(wanted-46, tools-44)
nsubj(wanted-46, he-45)
dep(lent-41, wanted-46)
mark(drop-60, except-47)
det(adze-49, the-48)
nsubj(drop-60, adze-49)
mark(let-55, that-51)
nsubj(let-55, he-52)
aux(let-55, would-53)
neg(let-55, not-54)
dep(adze-49, let-55)
nsubj(touch-57, him-56)
ccomp(let-55, touch-57)
aux(drop-60, would-59)
advcl(wanted-46, drop-60)
dep(drop-60, him-61)
det(hint-63, a-62)
npadvmod(now-64, hint-63)
advmod(him-61, now-64)
advmod(as-67, then-66)
dep(drop-60, as-67)
conj_and(him-61, as-67)
det(use-70, the-69)
prep_to(as-67, use-70)
prep_of(use-70, them-72)
aux(stop-77, would-74)
det(moment-76, any-75)
nsubj(stop-77, moment-76)
conj_and(came-3, stop-77)
poss(work-80, his-78)
amod(work-80, own-79)
dobj(stop-77, work-80)
aux(attend-82, to-81)
vmod(stop-77, attend-82)
det(difficulty-85, a-84)
prep_to(attend-82, difficulty-85)
prep_in(found-88, difficulty-85)
det(boy-87, the-86)
nsubj(found-88, boy-87)
rcmod(difficulty-85, found-88)
dobj(found-88, himself-89)
nsubj(paid-97, in-94)
pobj(in-94, short-95)
conj_and(came-3, paid-97)
iobj(paid-97, him-98)
advmod(more-100, far-99)
amod(attention-101, more-100)
dobj(paid-97, attention-101)
mark(thought-106, than-102)
nsubj(thought-106, he-103)
aux(thought-106, would-104)
aux(thought-106, have-105)
advcl(paid-97, thought-106)
dep(thought-106, required-107)
prep_of(required-107, him-109)
mark(apprentice-115, if-110)
nsubj(apprentice-115, Willie-111)
aux(apprentice-115, had-112)
cop(apprentice-115, been-113)
poss(apprentice-115, his-114)
advcl(thought-106, apprentice-115)

(ROOT
  (S
    (S
      (PP (IN From)
        (NP (DT the) (NN moment)))
      (NP (PRP he))
      (VP (VBD entered)
        (NP (DT the) (NN workshop))))
    (, ,)
    (NP (NNP Willie))
    (VP (MD could)
      (ADVP (RB hardly))
      (VP (VB keep)
        (NP (PRP$ his) (NNS hands))
        (PP (IN off)
          (NP (DT the) (NNS tools)))))
    (. .)))

det(moment-3, the-2)
prep_from(entered-5, moment-3)
nsubj(entered-5, he-4)
ccomp(keep-12, entered-5)
det(workshop-7, the-6)
dobj(entered-5, workshop-7)
nsubj(keep-12, Willie-9)
aux(keep-12, could-10)
advmod(keep-12, hardly-11)
root(ROOT-0, keep-12)
poss(hands-14, his-13)
dobj(keep-12, hands-14)
det(tools-17, the-16)
prep_off(keep-12, tools-17)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ very) (NN shape))
      (PP (IN of)
        (NP (PRP them)))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP
            (VP (VBD lay)
              (PP (IN on)
                (NP (DT the) (NN bench))))
            (CC or)
            (VP (VBD hung)
              (PP (IN on)
                (NP (DT the) (NN wall)))))))
      (, ,))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP
            (VP (VB say)
              (PRT (RP over)
                (CC and)
                (RP over)))
            (, ,) (`` ``)
            (VP (VB Come))
            (, ,)
            (VP
              (VP (VB use)
                (NP (PRP me)))
              (: ;)
              (VP (VB come)))
            (, ,)
            (VP (VB use)
              (NP (PRP me)))))))
    (. .) ('' '')))

det(shape-3, The-1)
amod(shape-3, very-2)
nsubj(seemed-19, shape-3)
nsubj(say-21, shape-3)
prep_of(shape-3, them-5)
mark(lay-9, as-7)
nsubj(lay-9, they-8)
nsubj(hung-14, they-8)
rcmod(shape-3, lay-9)
det(bench-12, the-11)
prep_on(lay-9, bench-12)
rcmod(shape-3, hung-14)
conj_or(lay-9, hung-14)
det(wall-17, the-16)
prep_on(hung-14, wall-17)
root(ROOT-0, seemed-19)
aux(say-21, to-20)
xcomp(seemed-19, say-21)
prt(say-21, over-22)
cc(over-22, and-23)
dep(over-22, over-24)
dep(say-21, Come-27)
dep(say-21, use-29)
dobj(use-29, me-30)
dep(use-29, come-32)
dep(say-21, use-34)
dobj(use-34, me-35)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD looked)
        (S
          (VP (VBG waiting))))
      (, ,)
      (CC and)
      (VP
        (ADJP (JJ hungry))
        (PP (IN for)
          (NP (NN work)))))
    (. .)))

nsubj(looked-2, They-1)
nsubj(hungry-6, They-1)
root(ROOT-0, looked-2)
xcomp(looked-2, waiting-3)
conj_and(looked-2, hungry-6)
prep_for(hungry-6, work-8)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD wanted)
      (NP (NN stuff))
      (S
        (VP (TO to)
          (VP
            (VP (VB shape))
            (CC and)
            (VP (VB fashion)
              (PP (IN into)
                (NP (NNS things))))
            (, ,)
            (CC and)
            (VP (VB join)
              (PP (IN into)
                (NP (JJ other) (NNS things))))))))
    (. .)))

nsubj(wanted-2, They-1)
root(ROOT-0, wanted-2)
dobj(wanted-2, stuff-3)
aux(shape-5, to-4)
vmod(wanted-2, shape-5)
vmod(wanted-2, fashion-7)
conj_and(shape-5, fashion-7)
prep_into(fashion-7, things-9)
vmod(wanted-2, join-12)
conj_and(shape-5, join-12)
amod(things-15, other-14)
prep_into(join-12, things-15)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (JJR bigger) (NNS tools))
            (PP (IN than)
              (NP (PRP themselves)))
            (: --)
            (PP
              (PP (IN for)
                (S
                  (VP (VBG ploughing)
                    (NP (DT the) (NN earth)))))
              (, ,)
              (PP (IN for)
                (S
                  (VP (VBG carrying)
                    (NP (DT the) (NN harvest)))))
              (, ,)
              (CC or)
              (PP (IN for)
                (NP
                  (NP (DT some) (NN one))
                  (CC or)
                  (NP
                    (NP (JJ other))
                    (PP (IN of)
                      (NP
                        (QP (CD ten) (CD thousand))
                        (NNS services)))
                    (UCP
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBN rendered)
                              (PP (IN in)
                                (NP (DT the) (NN house)))))))
                      (CC or)
                      (PP (IN in)
                        (NP (DT the) (NNS fields))))))))))))
    (. .)))

nsubj(wanted-2, They-1)
nsubj(make-4, They-1)
root(ROOT-0, wanted-2)
aux(make-4, to-3)
xcomp(wanted-2, make-4)
amod(tools-6, bigger-5)
dobj(make-4, tools-6)
prep_than(make-4, themselves-8)
prepc_for(make-4, ploughing-11)
det(earth-13, the-12)
dobj(ploughing-11, earth-13)
prepc_for(make-4, carrying-16)
conj_or(ploughing-11, carrying-16)
det(harvest-18, the-17)
dobj(carrying-16, harvest-18)
det(one-23, some-22)
prepc_for(make-4, one-23)
conj_or(ploughing-11, one-23)
conj_or(ploughing-11, other-25)
conj_or(one-23, other-25)
number(thousand-28, ten-27)
num(services-29, thousand-28)
prep_of(other-25, services-29)
aux(rendered-32, to-30)
auxpass(rendered-32, be-31)
dep(other-25, rendered-32)
det(house-35, the-34)
prep_in(rendered-32, house-35)
dep(other-25, in-37)
conj_or(rendered-32, in-37)
det(fields-39, the-38)
pobj(in-37, fields-39)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ impossible)
        (PP (IN for)
          (NP (NNP Willie))))
      (S
        (VP (TO to)
          (VP (VB see)
            (NP
              (NP
                (NP (DT the) (JJ hollow) (NN lip))
                (PP (IN of)
                  (NP (DT the) (NN gouge))))
              (, ,)
              (NP
                (NP (DT the) (JJ straight) (NN lip))
                (PP (IN of)
                  (NP (DT the) (NN chisel))))
              (, ,)
              (CC or)
              (NP
                (NP
                  (NP (DT the) (JJ same) (NN lip))
                  (VP
                    (VP (VBN fitted)
                      (PP (IN with)
                        (NP (DT another) (NN lip))))
                    (, ,)
                    (CC and)
                    (ADVP (RB so))
                    (VP (VBN made)
                      (PP (IN into)
                        (NP
                          (NP (DT the) (NN mouth))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN plane))
                              (, ,)
                              (NP (DT the) (JJ worm-like) (NN auger))
                              (, ,)
                              (CC or)
                              (NP (DT the) (JJ critical) (NN spokeshave)))))))))
                (, ,)
                (NP
                  (NP (DT the) (NN hammer))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD will)
                        (VP (VB have)
                          (NP (PRP it))
                          (ADVP (RB so)))))))
                (, ,)
                (CC or)
                (NP
                  (NP (DT the) (JJ humble) (NN bradawl))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (NP (PRP$ its) (NN pioneer))
                        (PRN (: --)
                          (S
                            (NP (PRP he))
                            (VP (MD could)
                              (VP (VB see)
                                (NP
                                  (NP (NN none))
                                  (PP (IN of)
                                    (NP (PRP them))))
                                (PP (IN without)
                                  (NP (NN longing)))
                                (S
                                  (VP (TO to)
                                    (VP
                                      (VP (VB send)
                                        (NP (PRP$ his) (NN life))
                                        (PP (IN into)
                                          (NP (PRP theirs))))
                                      (, ,)
                                      (CC and)
                                      (VP (VB set)
                                        (S
                                          (NP (PRP them))
                                          (VP (VBG doing)
                                            (PP (IN in)
                                              (NP (DT the) (NN world))))))))))))
                          (: --))
                        (SBAR (IN for)
                          (S
                            (VP (VBD was) (RB not)
                              (NP
                                (NP (DT this))
                                (SBAR
                                  (WHNP (WP what))
                                  (S
                                    (NP (PRP$ their) (JJ dumb) (NNS looks))
                                    (VP (VBD seemed)
                                      (ADVP (RB ever))
                                      (S
                                        (VP (TO to)
                                          (VP (VB implore)))))))))))))))))))))
    (. ?)))

nsubj(impossible-3, It-1)
nsubj(see-7, It-1)
cop(impossible-3, was-2)
root(ROOT-0, impossible-3)
prep_for(impossible-3, Willie-5)
aux(see-7, to-6)
xcomp(impossible-3, see-7)
det(lip-10, the-8)
amod(lip-10, hollow-9)
dobj(see-7, lip-10)
det(gouge-13, the-12)
prep_of(lip-10, gouge-13)
det(lip-17, the-15)
amod(lip-17, straight-16)
dobj(see-7, lip-17)
conj_or(lip-10, lip-17)
det(chisel-20, the-19)
prep_of(lip-17, chisel-20)
det(lip-25, the-23)
amod(lip-25, same-24)
dobj(see-7, lip-25)
conj_or(lip-10, lip-25)
dep(lip-25, fitted-26)
det(lip-29, another-28)
prep_with(fitted-26, lip-29)
dep(lip-25, made-33)
conj_and(fitted-26, made-33)
det(mouth-36, the-35)
prep_into(made-33, mouth-36)
det(plane-39, the-38)
prep_of(mouth-36, plane-39)
det(auger-43, the-41)
amod(auger-43, worm-like-42)
prep_of(mouth-36, auger-43)
conj_or(plane-39, auger-43)
det(spokeshave-48, the-46)
amod(spokeshave-48, critical-47)
prep_of(mouth-36, spokeshave-48)
conj_or(plane-39, spokeshave-48)
det(hammer-51, the-50)
conj_or(lip-10, hammer-51)
conj_or(lip-25, hammer-51)
nsubj(have-54, hammer-51)
aux(have-54, will-53)
rcmod(hammer-51, have-54)
dobj(have-54, it-55)
advmod(have-54, so-56)
det(bradawl-61, the-59)
amod(bradawl-61, humble-60)
conj_or(lip-10, bradawl-61)
conj_or(lip-25, bradawl-61)
nsubj(pioneer-65, bradawl-61)
nsubj(this-93, bradawl-61)
cop(pioneer-65, is-63)
poss(pioneer-65, its-64)
rcmod(bradawl-61, pioneer-65)
nsubj(see-69, he-67)
aux(see-69, could-68)
parataxis(pioneer-65, see-69)
dobj(see-69, none-70)
prep_of(none-70, them-72)
prep_without(see-69, longing-74)
aux(send-76, to-75)
vmod(see-69, send-76)
poss(life-78, his-77)
dobj(send-76, life-78)
prep_into(send-76, theirs-80)
vmod(see-69, set-83)
conj_and(send-76, set-83)
nsubj(doing-85, them-84)
dep(set-83, doing-85)
det(world-88, the-87)
prep_in(doing-85, world-88)
mark(this-93, for-90)
cop(this-93, was-91)
neg(this-93, not-92)
advcl(pioneer-65, this-93)
dobj(seemed-98, this-93)
nsubj(implore-101, this-93)
poss(looks-97, their-95)
amod(looks-97, dumb-96)
nsubj(seemed-98, looks-97)
rcmod(this-93, seemed-98)
advmod(seemed-98, ever-99)
aux(implore-101, to-100)
xcomp(seemed-98, implore-101)

(ROOT
  (S
    (PP (IN At)
      (NP (DT that) (NN time)))
    (NP (JJ young) (NNP Spelman))
    (VP (VBD was)
      (ADJP (JJ busy))
      (S
        (VP (VBG making)
          (NP
            (NP (DT a) (JJ salt-box))
            (PP (IN for)
              (NP (PRP$ his) (NN mother))))
          (PRT (RP out))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ sound) (NNS bits))
              (PP (IN of)
                (NP (DT an) (JJ old) (NN oak) (NN floor)))))))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP$ his) (NN father))
          (VP (VBD had)
            (VP (VBN taken)
              (PRT (RP up))
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (ADJP (JJ dry-rotted))))))))))
    (. .)))

det(time-3, that-2)
prep_at(busy-7, time-3)
amod(Spelman-5, young-4)
nsubj(busy-7, Spelman-5)
cop(busy-7, was-6)
root(ROOT-0, busy-7)
xcomp(busy-7, making-8)
det(salt-box-10, a-9)
dobj(making-8, salt-box-10)
poss(mother-13, his-12)
prep_for(salt-box-10, mother-13)
det(bits-18, the-16)
amod(bits-18, sound-17)
prep_out_of(making-8, bits-18)
det(floor-23, an-20)
amod(floor-23, old-21)
nn(floor-23, oak-22)
prep_of(bits-18, floor-23)
dobj(taken-28, which-24)
poss(father-26, his-25)
nsubj(taken-28, father-26)
aux(taken-28, had-27)
ccomp(busy-7, taken-28)
prt(taken-28, up-29)
mark(dry-rotted-33, because-30)
nsubj(dry-rotted-33, it-31)
cop(dry-rotted-33, was-32)
advcl(taken-28, dry-rotted-33)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (JJ hard) (NN wood)
          (S
            (VP (TO to)
              (VP (VB work)))))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Willie))
      (VP
        (VP (VBD bore)
          (NP (DT a) (NN hand))
          (PP (IN in)
            (S
              (VP (VBG planing)
                (NP (DT the) (NNS pieces))))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (VP (VBN initiated)
            (PP (IN into)
              (NP
                (NP (DT the) (NNS mysteries))
                (PP (IN of)
                  (NP (VBG dovetailing)
                    (CC and)
                    (VBG gluing)))))))))
    (. .)))

nsubj(wood-4, It-1)
cop(wood-4, was-2)
amod(wood-4, hard-3)
root(ROOT-0, wood-4)
aux(work-6, to-5)
vmod(wood-4, work-6)
nsubj(bore-10, Willie-9)
nsubjpass(initiated-20, Willie-9)
conj_but(wood-4, bore-10)
det(hand-12, a-11)
dobj(bore-10, hand-12)
prepc_in(bore-10, planing-14)
det(pieces-16, the-15)
dobj(planing-14, pieces-16)
auxpass(initiated-20, was-19)
conj_but(wood-4, initiated-20)
conj_and(bore-10, initiated-20)
det(mysteries-23, the-22)
prep_into(initiated-20, mysteries-23)
prep_of(mysteries-23, dovetailing-25)
prep_of(mysteries-23, gluing-27)
conj_and(dovetailing-25, gluing-27)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (DT the) (NN lid))
        (VP (VBD was)
          (VP (VBN put)
            (PRT (RP on))
            (PP (IN by)
              (NP (DT the) (NNS hinges)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD carved)
      (NP
        (NP
          (NP (DT the) (NNS initials))
          (PP (IN of)
            (NP (DT the) (NN carpenter))))
        (CC and)
        (NP
          (NP (PRP$ his) (NN wife))
          (PP (IN in)
            (NP
              (NP (NN relief))
              (PP (IN upon)
                (NP (PRP it))))))
        (, ,)
        (CC and)
        (NP (JJ many) (NNS years)))
      (SBAR (IN after)
        (S
          (NP (PRP they))
          (VP (VBD used)
            (S
              (VP (TO to)
                (VP (VB show)
                  (NP (PRP$ his) (NN work)))))))))
    (. .)))

mark(put-5, Before-1)
det(lid-3, the-2)
nsubjpass(put-5, lid-3)
auxpass(put-5, was-4)
advcl(carved-12, put-5)
prt(put-5, on-6)
det(hinges-9, the-8)
agent(put-5, hinges-9)
nsubj(carved-12, he-11)
root(ROOT-0, carved-12)
det(initials-14, the-13)
dobj(carved-12, initials-14)
det(carpenter-17, the-16)
prep_of(initials-14, carpenter-17)
poss(wife-20, his-19)
dobj(carved-12, wife-20)
conj_and(initials-14, wife-20)
prep_in(wife-20, relief-22)
prep_upon(relief-22, it-24)
amod(years-28, many-27)
dobj(carved-12, years-28)
conj_and(initials-14, years-28)
mark(used-31, after-29)
nsubj(used-31, they-30)
nsubj(show-33, they-30)
advcl(carved-12, used-31)
aux(show-33, to-32)
xcomp(used-31, show-33)
poss(work-35, his-34)
dobj(show-33, work-35)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (JJ first) (NN thing))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD set)
            (PP (IN about)
              (S
                (VP (VBG making)
                  (PP (IN for)
                    (NP (PRP himself))))))))))
    (VP (VBD was)
      (NP (DT a) (NN water-wheel)))
    (. .)))

cc(water-wheel-13, But-1)
det(thing-4, the-2)
amod(thing-4, first-3)
nsubj(water-wheel-13, thing-4)
nsubj(set-6, he-5)
rcmod(thing-4, set-6)
prepc_about(set-6, making-8)
prep_for(making-8, himself-10)
cop(water-wheel-13, was-11)
det(water-wheel-13, a-12)
root(ROOT-0, water-wheel-13)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN been)
              (NP (DT a) (JJ seaside) (NN boy))))))
      (, ,)
      (NP (PRP$ his) (JJ first) (NN job))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (NP (DT a) (NN boat))))))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN lived)
              (PP (IN in)
                (NP (DT a) (JJ flat) (NN country)))))))
      (, ,)
      (NP (PRP it))
      (VP (MD would)
        (ADVP (RB very) (RB likely))
        (VP (VB have)
          (VP (VBN been)
            (NP (DT a) (NN windmill))))))
    (: ;)
    (CC but)
    (S
      (NP
        (NP (DT the) (RBS most) (JJ noticeable) (NN thing))
        (PP (IN in)
          (NP (DT that) (NN neighbourhood))))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN mill))
          (PP (IN for)
            (NP
              (NP (VBG grinding) (NN corn))
              (VP (VBN driven)
                (PP (IN by)
                  (NP (DT a) (NN water-wheel)))))))))
    (. .)))

mark(boy-7, If-1)
nsubj(boy-7, he-2)
aux(boy-7, had-3)
cop(boy-7, been-4)
det(boy-7, a-5)
amod(boy-7, seaside-6)
advcl(boat-16, boy-7)
poss(job-11, his-9)
amod(job-11, first-10)
nsubj(boat-16, job-11)
aux(boat-16, would-12)
aux(boat-16, have-13)
cop(boat-16, been-14)
det(boat-16, a-15)
root(ROOT-0, boat-16)
mark(lived-21, if-18)
nsubj(lived-21, he-19)
aux(lived-21, had-20)
advcl(windmill-34, lived-21)
det(country-25, a-23)
amod(country-25, flat-24)
prep_in(lived-21, country-25)
nsubj(windmill-34, it-27)
aux(windmill-34, would-28)
advmod(likely-30, very-29)
advmod(windmill-34, likely-30)
aux(windmill-34, have-31)
cop(windmill-34, been-32)
det(windmill-34, a-33)
conj_but(boat-16, windmill-34)
det(thing-40, the-37)
advmod(thing-40, most-38)
amod(thing-40, noticeable-39)
nsubj(mill-46, thing-40)
det(neighbourhood-43, that-42)
prep_in(thing-40, neighbourhood-43)
cop(mill-46, was-44)
det(mill-46, a-45)
conj_but(boat-16, mill-46)
amod(corn-49, grinding-48)
prep_for(mill-46, corn-49)
vmod(corn-49, driven-50)
det(water-wheel-53, a-52)
agent(driven-50, water-wheel-53)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (NNP Willie))
          (VP (VBD was)
            (NP (DT a) (JJ tiny) (NN boy)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN gone)
          (ADVP (RB once))
          (PP (IN with)
            (NP
              (NP
                (NP (NNP Farmer) (NNP Thomson) (POS 's))
                (NN man))
              (CC and)
              (NP
                (NP (DT a) (NN load))
                (PP (IN of)
                  (NP (NN corn))))))
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (DT the) (NN mill))))))))
    (: ;)
    (CC and)
    (S
      (NP (DT the) (NN miller))
      (VP (VBD had)
        (VP (VBN taken)
          (NP (PRP him))
          (PP (DT all) (IN over)
            (NP (PRP it))))))
    (. .)))

advmod(boy-6, When-1)
nsubj(boy-6, Willie-2)
cop(boy-6, was-3)
det(boy-6, a-4)
amod(boy-6, tiny-5)
advcl(gone-10, boy-6)
nsubj(gone-10, he-8)
nsubj(see-23, he-8)
aux(gone-10, had-9)
root(ROOT-0, gone-10)
advmod(gone-10, once-11)
nn(Thomson-14, Farmer-13)
poss(man-16, Thomson-14)
prep_with(gone-10, man-16)
det(load-19, a-18)
prep_with(gone-10, load-19)
conj_and(man-16, load-19)
prep_of(load-19, corn-21)
aux(see-23, to-22)
xcomp(gone-10, see-23)
det(mill-25, the-24)
dobj(see-23, mill-25)
det(miller-29, the-28)
nsubj(taken-31, miller-29)
aux(taken-31, had-30)
conj_and(gone-10, taken-31)
dobj(taken-31, him-32)
dep(taken-31, all-33)
prep_over(taken-31, it-35)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD saw)
      (SBAR
        (S
          (NP (DT the) (NN corn))
          (VP (VBP go)
            (PP (IN in)
              (PP (IN by)
                (NP (DT the) (NN hopper))))
            (PP (IN into)
              (NP
                (NP
                  (NP (DT the) (NN trough))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD was)
                        (NP (DT the) (JJ real) (NN hopper))
                        (, ,)
                        (SBAR (IN for)
                          (S
                            (NP (PRP it))
                            (VP (VBD kept)
                              (S
                                (ADVP (RB constantly))
                                (VP (VBG hopping)
                                  (S
                                    (VP (TO to)
                                      (VP (VB shake)
                                        (NP (DT the) (NN corn))
                                        (PRT (RP down))
                                        (PP (IN through)
                                          (NP
                                            (NP (DT a) (NN hole))
                                            (PP (IN in)
                                              (NP
                                                (NP (DT the) (NN middle))
                                                (PP (IN of)
                                                  (NP
                                                    (NP (DT the) (JJ upper) (NN stone))
                                                    (, ,)
                                                    (SBAR
                                                      (WHNP (WDT which))
                                                      (S
                                                        (VP (VBD went)
                                                          (ADVP (RB round)
                                                            (CC and)
                                                            (RB round))
                                                          (PP (IN against)
                                                            (NP (DT the) (JJR lower)))
                                                          (, ,)
                                                          (SBAR (RB so) (IN that)
                                                            (S
                                                              (PP (IN between)
                                                                (NP (PRP them)))
                                                              (NP (PRP they))
                                                              (VP (VBD ground)
                                                                (NP (DT the) (NN corn))
                                                                (PP (TO to)
                                                                  (NP (NN meal)))
                                                                (, ,)
                                                                (SBAR
                                                                  (WHNP (WDT which))
                                                                  (PRN (, ,)
                                                                    (PP (IN in)
                                                                      (NP (DT the) (NN story) (NN beneath)))
                                                                    (, ,))
                                                                  (S
                                                                    (NP (PRP he))
                                                                    (VP (VBD saw)
                                                                      (S
                                                                        (VP (VBG pouring))))))))))))))))))))))))))))))
                (, ,)
                (NP
                  (NP (DT a) (JJ solid) (NN stream))
                  (PP (IN like)
                    (NP (DT an) (NN avalanche))))
                (, ,)
                (PP (IN from)
                  (NP (DT a) (JJ wooden) (NN spout)))))))))
    (. .)))

nsubj(saw-2, He-1)
root(ROOT-0, saw-2)
det(corn-4, the-3)
nsubj(go-5, corn-4)
ccomp(saw-2, go-5)
prep(go-5, in-6)
pcomp(in-6, by-7)
det(hopper-9, the-8)
pobj(by-7, hopper-9)
det(trough-12, the-11)
prep_into(go-5, trough-12)
nsubj(hopper-17, trough-12)
cop(hopper-17, was-14)
det(hopper-17, the-15)
amod(hopper-17, real-16)
rcmod(trough-12, hopper-17)
mark(kept-21, for-19)
nsubj(kept-21, it-20)
advcl(hopper-17, kept-21)
advmod(hopping-23, constantly-22)
xcomp(kept-21, hopping-23)
aux(shake-25, to-24)
xcomp(hopping-23, shake-25)
det(corn-27, the-26)
dobj(shake-25, corn-27)
prt(shake-25, down-28)
det(hole-31, a-30)
prep_through(shake-25, hole-31)
det(middle-34, the-33)
prep_in(hole-31, middle-34)
det(stone-38, the-36)
amod(stone-38, upper-37)
prep_of(middle-34, stone-38)
nsubj(went-41, stone-38)
rcmod(stone-38, went-41)
advmod(went-41, round-42)
advmod(went-41, round-44)
conj_and(round-42, round-44)
det(lower-47, the-46)
prep_against(went-41, lower-47)
advmod(ground-54, so-49)
mark(ground-54, that-50)
prep_between(ground-54, them-52)
nsubj(ground-54, they-53)
advcl(went-41, ground-54)
det(corn-56, the-55)
dobj(ground-54, corn-56)
prep_to(ground-54, meal-58)
dobj(saw-68, which-60)
dep(saw-68, in-62)
det(beneath-65, the-63)
nn(beneath-65, story-64)
pobj(in-62, beneath-65)
nsubj(saw-68, he-67)
dep(ground-54, saw-68)
xcomp(saw-68, pouring-69)
det(stream-73, a-71)
amod(stream-73, solid-72)
appos(trough-12, stream-73)
det(avalanche-76, an-75)
prep_like(stream-73, avalanche-76)
det(spout-81, a-79)
amod(spout-81, wooden-80)
prep_from(trough-12, spout-81)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (JJS best))
      (PP (IN of)
        (NP (PRP it))))
    (ADVP (DT all))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN wheel) (NN outside))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (JJ busy) (NN rush))
          (PP (IN of)
            (NP
              (NP (DT the) (NN water))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD made)
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBP go))))))))))))
    (. .)))

det(best-3, the-2)
nsubj(outside-10, best-3)
prep_of(best-3, it-5)
advmod(outside-10, all-6)
cop(outside-10, was-7)
det(outside-10, the-8)
nn(outside-10, wheel-9)
root(ROOT-0, outside-10)
det(rush-15, the-13)
amod(rush-15, busy-14)
conj_and(outside-10, rush-15)
det(water-18, the-17)
prep_of(rush-15, water-18)
nsubj(made-20, water-18)
rcmod(water-18, made-20)
nsubj(go-22, it-21)
ccomp(made-20, go-22)

(ROOT
  (S (IN So)
    (NP (NNP Willie))
    (VP (MD would)
      (ADVP (RB now))
      (VP (VB make)
        (NP (DT a) (NN water-wheel))))
    (. .)))

dep(make-5, So-1)
nsubj(make-5, Willie-2)
aux(make-5, would-3)
advmod(make-5, now-4)
root(ROOT-0, make-5)
det(water-wheel-7, a-6)
dobj(make-5, water-wheel-7)

(ROOT
  (FRAG
    (NP (NNP -LSB-) (NNP Illustration))
    (: :)
    (S
      (NP (NNP WILLIE))
      (VP (VBZ IS)
        (ADJP (JJ TAKEN)
          (S
            (VP (TO TO)
              (VP (VB SEE)
                (NP (DT A) (NNP WATER-WHEEL) (. .) (NN -RSB-))))))))))

nn(Illustration-2, -LSB--1)
root(ROOT-0, Illustration-2)
nsubj(TAKEN-6, WILLIE-4)
nsubj(SEE-8, WILLIE-4)
cop(TAKEN-6, IS-5)
dep(Illustration-2, TAKEN-6)
aux(SEE-8, TO-7)
xcomp(TAKEN-6, SEE-8)
det(-RSB--12, A-9)
nn(-RSB--12, WATER-WHEEL-10)
dobj(SEE-8, -RSB--12)

(ROOT
  (S
    (NP (DT The) (NN carpenter)
      (S
        (VP (VBG having)
          (VP (VBN given)
            (NP (PRP him))
            (NP
              (NP (DT a) (JJ short) (NN lecture))
              (PP
                (PP (IN on)
                  (NP
                    (NP (DT the) (JJ different) (NNS kinds))
                    (PP (IN of)
                      (NP (NNS water-wheels)))))
                (PRN (, ,)
                  (S
                    (NP (PRP he))
                    (VP (VBD decided)
                      (PP (IN on)
                        (NP (DT an) (NN undershot)))))
                  (, ,))
                (CC and)
                (PP (IN with)
                  (NP
                    (NP
                      (NP
                        (NP (NNP Sandy) (POS 's))
                        (NN help))
                      (VP (VBD proceeded)
                        (S
                          (VP (TO to)
                            (VP (VB construct)
                              (NP (PRP it)))))))
                    (: --)
                    (PP (IN with)
                      (NP
                        (NP (PRP$ its) (NN nave))
                        (PP (IN of)
                          (NP (NN mahogany)))))
                    (, ,)
                    (NP
                      (NP (PRP$ its) (NNS spokes))
                      (PP (IN of)
                        (NP (NN birch))))
                    (, ,)
                    (NP
                      (NP (PRP$ its) (NN floats))
                      (PP (IN of)
                        (NP (NN deal))))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (PRP$ its) (NN axle))
                      (PP (IN of)
                        (NP
                          (NP (JJ stout) (NN iron-wire))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (PRN (, ,)
                                (SBAR (IN as)
                                  (S
                                    (NP (DT the) (NN friction))
                                    (VP (MD would) (RB not)
                                      (VP (VB be)
                                        (ADJP (JJ great))))))
                                (, ,))
                              (VP (VBD was)
                                (S
                                  (VP (TO to)
                                    (VP (VB run)
                                      (PP (IN in)
                                        (NP
                                          (NP (NNS gudgeon-blocks))
                                          (PP (IN of)
                                            (NP (DT some) (JJ hard) (NN wood)))))))))))
                          (, ,))))))))))))
    (ADVP (RB well))
    (VP (VBD oiled))
    (. .)))

det(carpenter-2, The-1)
nsubj(oiled-76, carpenter-2)
aux(given-4, having-3)
dep(carpenter-2, given-4)
iobj(given-4, him-5)
det(lecture-8, a-6)
amod(lecture-8, short-7)
dobj(given-4, lecture-8)
dobj(given-4, lecture-8')
conj_and(lecture-8, lecture-8')
det(kinds-12, the-10)
amod(kinds-12, different-11)
prep_on(lecture-8, kinds-12)
prep_of(kinds-12, water-wheels-14)
nsubj(decided-17, he-16)
dep(lecture-8, decided-17)
det(undershot-20, an-19)
prep_on(decided-17, undershot-20)
poss(help-26, Sandy-24)
prep_with(lecture-8', help-26)
vmod(help-26, proceeded-27)
aux(construct-29, to-28)
xcomp(proceeded-27, construct-29)
dobj(construct-29, it-30)
prep_with(lecture-8', with-32)
conj_and(help-26, with-32)
poss(nave-34, its-33)
prep_with(help-26, nave-34)
prep_of(nave-34, mahogany-36)
poss(spokes-39, its-38)
prep_with(lecture-8', spokes-39)
conj_and(help-26, spokes-39)
prep_of(spokes-39, birch-41)
poss(floats-44, its-43)
prep_with(lecture-8', floats-44)
conj_and(help-26, floats-44)
prep_of(floats-44, deal-46)
poss(axle-50, its-49)
prep_with(lecture-8', axle-50)
conj_and(help-26, axle-50)
amod(iron-wire-53, stout-52)
prep_of(axle-50, iron-wire-53)
nsubj(was-65, iron-wire-53)
nsubj(run-67, iron-wire-53)
mark(great-63, as-57)
det(friction-59, the-58)
nsubj(great-63, friction-59)
aux(great-63, would-60)
neg(great-63, not-61)
cop(great-63, be-62)
parataxis(was-65, great-63)
rcmod(iron-wire-53, was-65)
aux(run-67, to-66)
xcomp(was-65, run-67)
prep_in(run-67, gudgeon-blocks-69)
det(wood-73, some-71)
amod(wood-73, hard-72)
prep_of(gudgeon-blocks-69, wood-73)
advmod(oiled-76, well-75)
root(ROOT-0, oiled-76)

(ROOT
  (S
    (NP (DT These) (NNS blocks))
    (VP (VBD were)
      (VP (VBN fixed)
        (PP (IN in)
          (NP
            (NP (DT a) (NN frame))
            (VP
              (ADVP (RB so))
              (VBN devised)
              (SBAR (IN that)
                (S (, ,)
                  (PP (IN with)
                    (NP
                      (NP (DT the) (NN help))
                      (PP (IN of)
                        (NP (DT a) (JJ few) (NNS stones)))
                      (S
                        (VP (TO to)
                          (VP (VB support)
                            (NP (PRP it)))))))
                  (, ,)
                  (NP (DT the) (NN wheel))
                  (VP (MD might)
                    (VP (VB be)
                      (VP (VBN set)
                        (S
                          (VP (VBG going)
                            (PP (IN in)
                              (NP (DT any) (JJ small) (NN stream)))))))))))))))
    (. .)))

det(blocks-2, These-1)
nsubjpass(fixed-4, blocks-2)
auxpass(fixed-4, were-3)
root(ROOT-0, fixed-4)
det(frame-7, a-6)
prep_in(fixed-4, frame-7)
advmod(devised-9, so-8)
vmod(frame-7, devised-9)
mark(set-27, that-10)
det(help-14, the-13)
prep_with(set-27, help-14)
det(stones-18, a-16)
amod(stones-18, few-17)
prep_of(help-14, stones-18)
aux(support-20, to-19)
vmod(help-14, support-20)
dobj(support-20, it-21)
det(wheel-24, the-23)
nsubjpass(set-27, wheel-24)
aux(set-27, might-25)
auxpass(set-27, be-26)
ccomp(devised-9, set-27)
xcomp(set-27, going-28)
det(stream-32, any-30)
amod(stream-32, small-31)
prep_in(going-28, stream-32)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBD were)
          (NP
            (NP (JJ many) (JJ tiny) (NNS brooks))
            (VP (VBG running)
              (PP (IN into)
                (NP (DT the) (NN river)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP they))
        (VP (VBN fixed)
          (PP (IN upon)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (PRP them)))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBN issued)
                    (PP (IN from)
                      (NP
                        (NP (DT the) (VBG rising) (NN ground))
                        (PP (IN at)
                          (NP
                            (NP (DT the) (NN back))
                            (PP (IN of)
                              (NP (DT the) (NN village)))))))))))))))
    (: :)
    (S
      (SBAR
        (WHADVP (RB just) (WRB where))
        (S
          (NP (PRP it))
          (VP (VBD began)
            (S
              (VP (TO to)
                (VP (VB run)
                  (ADVP (RB merrily))
                  (ADVP (RB down)
                    (NP (DT the) (NN hill)))))))))
      (, ,)
      (NP (PRP they))
      (VP (VBN constructed)
        (PP (IN in)
          (NP (PRP$ its) (NN channel)))
        (NP
          (NP (DT a) (NN stonebed))
          (PP (IN for)
            (NP
              (NP (DT the) (NN water-wheel))
              (PRN (: --) (RB not)
                (PP (IN by)
                  (NP
                    (NP (DT any) (NN means))
                    (PP (IN for)
                      (NP (PRP it)))))))))
        (S
          (VP (TO to)
            (VP (VB go)
              (S
                (VP (TO to)
                  (VP (VB sleep)
                    (PRT (RP in))))))))))
    (. !)))

expl(were-2, There-1)
root(ROOT-0, were-2)
amod(brooks-5, many-3)
amod(brooks-5, tiny-4)
nsubj(were-2, brooks-5)
vmod(brooks-5, running-6)
det(river-9, the-8)
prep_into(running-6, river-9)
nsubj(fixed-13, they-12)
conj_and(were-2, fixed-13)
prep_upon(fixed-13, one-15)
nsubj(issued-19, one-15)
prep_of(one-15, them-17)
rcmod(one-15, issued-19)
det(ground-23, the-21)
amod(ground-23, rising-22)
prep_from(issued-19, ground-23)
det(back-26, the-25)
prep_at(ground-23, back-26)
det(village-29, the-28)
prep_of(back-26, village-29)
advmod(where-32, just-31)
advmod(began-34, where-32)
nsubj(began-34, it-33)
nsubj(run-36, it-33)
advcl(constructed-43, began-34)
aux(run-36, to-35)
xcomp(began-34, run-36)
advmod(run-36, merrily-37)
advmod(run-36, down-38)
det(hill-40, the-39)
pobj(down-38, hill-40)
nsubj(constructed-43, they-42)
parataxis(were-2, constructed-43)
poss(channel-46, its-45)
prep_in(constructed-43, channel-46)
det(stonebed-48, a-47)
dobj(constructed-43, stonebed-48)
det(water-wheel-51, the-50)
prep_for(stonebed-48, water-wheel-51)
dep(water-wheel-51, not-53)
det(means-56, any-55)
prep_by(water-wheel-51, means-56)
prep_for(means-56, it-58)
aux(go-60, to-59)
vmod(constructed-43, go-60)
aux(sleep-62, to-61)
xcomp(go-60, sleep-62)
prt(sleep-62, in-63)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD went)
        (ADVP (RB delightfully))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD shall)
        (VP (VB hear)
          (ADVP (RBR more)
            (PP (IN of)
              (NP (PRP it))
              (PP (IN by)
                (CC and)
                (IN by)))))))
    (. .)))

nsubj(went-2, It-1)
root(ROOT-0, went-2)
advmod(went-2, delightfully-3)
nsubj(hear-8, we-6)
aux(hear-8, shall-7)
conj_and(went-2, hear-8)
advmod(hear-8, more-9)
prep_of(more-9, it-11)
prep(more-9, by-12)
prep(more-9, by-14)
conj_and(by-12, by-14)

(ROOT
  (S
    (PP (IN For)
      (NP (DT the) (NN present)))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (RB only))
        (S
          (VP (TO to)
            (VP (VB confess)
              (SBAR (IN that)
                (S (, ,)
                  (PP (IN after)
                    (NP (DT a) (JJ few) (NNS days)))
                  (, ,)
                  (NP (NNP Willie))
                  (VP (VBD got)
                    (NP
                      (ADJP
                        (ADJP (JJ tired)
                          (PP (IN of)
                            (NP (PRP it))))
                        (: --)
                        (CC and)
                        (ADJP (JJ small)))
                      (NN blame))
                    (PP (TO to)
                      (NP (PRP him)))
                    (, ,)
                    (SBAR (IN for)
                      (S
                        (NP (PRP it))
                        (VP (VBD was)
                          (PP (IN of)
                            (NP
                              (NP (DT no) (JJ earthly) (NN use))
                              (PP (IN beyond)
                                (NP (NN amusement))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT that))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (MD can)
              (ADVP (RB only))
              (VP (VB amuse))))))
      (VP (MD can)
        (ADVP (RB never))
        (VP (VB amuse)
          (ADVP (RB long)))))
    (. .)))

det(present-3, the-2)
prep_for(have-6, present-3)
nsubj(have-6, I-5)
nsubj(confess-9, I-5)
root(ROOT-0, have-6)
advmod(have-6, only-7)
aux(confess-9, to-8)
xcomp(have-6, confess-9)
mark(got-18, that-10)
det(days-15, a-13)
amod(days-15, few-14)
prep_after(got-18, days-15)
nsubj(got-18, Willie-17)
ccomp(confess-9, got-18)
amod(blame-25, tired-19)
prep_of(tired-19, it-21)
conj_and(tired-19, small-24)
amod(blame-25, small-24)
dobj(got-18, blame-25)
prep_to(got-18, him-27)
mark(was-31, for-29)
nsubj(was-31, it-30)
advcl(got-18, was-31)
neg(use-35, no-33)
amod(use-35, earthly-34)
prep_of(was-31, use-35)
prep_beyond(use-35, amusement-37)
nsubj(amuse-44, that-40)
nsubj(amuse-47, that-40)
aux(amuse-44, can-42)
advmod(amuse-44, only-43)
rcmod(that-40, amuse-44)
aux(amuse-47, can-45)
neg(amuse-47, never-46)
conj_and(have-6, amuse-47)
advmod(amuse-47, long-48)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT the) (NN reason) (NNS children))
          (VP (VBP get)
            (SBAR
              (S
                (NP
                  (NP (JJ tired))
                  (PP (IN of)
                    (NP (PRP$ their) (NNS toys))))
                (ADVP (RB so) (RB soon))
                (VP (VBZ is)
                  (SBAR (RB just) (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)
                        (PP (IN against)
                          (NP (JJ human) (NN nature)))
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (ADJP (RB really) (JJ interested)
                                (PP (IN in)
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (VP (VBZ is)
                                        (PP (IN of)
                                          (NP (DT no) (NN use)))))))))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
det(children-5, the-3)
nn(children-5, reason-4)
nsubj(get-6, children-5)
ccomp(think-2, get-6)
nsubj(is-13, tired-7)
poss(toys-10, their-9)
prep_of(tired-7, toys-10)
advmod(soon-12, so-11)
advmod(is-13, soon-12)
ccomp(get-6, is-13)
advmod(is-17, just-14)
mark(is-17, that-15)
nsubj(is-17, it-16)
nsubj(interested-24, it-16)
dep(is-13, is-17)
amod(nature-20, human-19)
prep_against(is-17, nature-20)
aux(interested-24, to-21)
cop(interested-24, be-22)
advmod(interested-24, really-23)
xcomp(is-17, interested-24)
nsubj(is-27, what-26)
prepc_in(interested-24, is-27)
neg(use-30, no-29)
prep_of(is-27, use-30)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (SBAR (IN that)
            (S
              (NP (DT a) (JJ beautiful) (NN thing))
              (VP (VBZ is)
                (ADVP (RB always))
                (ADJP (JJ interesting))))))))
    (, ,)
    (NP (PRP I))
    (VP (VB answer) (, ,)
      (SBAR (IN that)
        (S
          (NP (DT a) (JJ beautiful) (NN thing))
          (VP (VBZ is)
            (PP (IN of)
              (NP (DT the) (JJS highest) (NN use)))))))
    (. .)))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(answer-13, say-3)
mark(interesting-10, that-4)
det(thing-7, a-5)
amod(thing-7, beautiful-6)
nsubj(interesting-10, thing-7)
cop(interesting-10, is-8)
advmod(interesting-10, always-9)
ccomp(say-3, interesting-10)
nsubj(answer-13, I-12)
root(ROOT-0, answer-13)
mark(is-19, that-15)
det(thing-18, a-16)
amod(thing-18, beautiful-17)
nsubj(is-19, thing-18)
ccomp(answer-13, is-19)
det(use-23, the-21)
amod(use-23, highest-22)
prep_of(is-19, use-23)

(ROOT
  (SQ (VBZ Is) (RB not)
    (NP (DT a) (NN diamond))
    (NP
      (NP (DT that))
      (SBAR
        (S
          (VP (VBZ flashes)
            (NP (PDT all) (PRP$ its) (NNS colours))
            (PP (IN into)
              (NP
                (NP (DT the) (NN heart))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN poet))
                    (ADJP (RB as) (JJ useful)
                      (PP (IN as)
                        (NP
                          (NP (DT the) (NN diamond))
                          (SBAR
                            (WHPP (IN with)
                              (WHNP (WDT which)))
                            (S
                              (NP (DT the) (NN glazier))
                              (VP (VBZ divides)
                                (NP
                                  (NP (DT the) (NNS sheets))
                                  (PP (IN of)
                                    (NP (NN glass))))
                                (PP (IN into)
                                  (NP
                                    (NP (NNS panes))
                                    (PP (IN for)
                                      (NP (PRP$ our) (NNS windows)))))))))))))))))))
    (. ?)))

cop(that-5, Is-1)
neg(that-5, not-2)
det(diamond-4, a-3)
nsubj(that-5, diamond-4)
root(ROOT-0, that-5)
rcmod(that-5, flashes-6)
predet(colours-9, all-7)
poss(colours-9, its-8)
dobj(flashes-6, colours-9)
det(heart-12, the-11)
prep_into(flashes-6, heart-12)
det(poet-15, a-14)
prep_of(heart-12, poet-15)
advmod(useful-17, as-16)
amod(poet-15, useful-17)
det(diamond-20, the-19)
prep_as(useful-17, diamond-20)
prep_with(divides-25, diamond-20)
det(glazier-24, the-23)
nsubj(divides-25, glazier-24)
rcmod(diamond-20, divides-25)
det(sheets-27, the-26)
dobj(divides-25, sheets-27)
prep_of(sheets-27, glass-29)
prep_into(divides-25, panes-31)
poss(windows-34, our-33)
prep_for(panes-31, windows-34)

(ROOT
  (S
    (ADVP (RB Anyhow))
    (, ,)
    (NP (DT the) (NN reason) (NNP Willie))
    (VP
      (VP (VBD got)
        (SBAR
          (S
            (NP
              (NP (JJ tired))
              (PP (IN of)
                (NP (PRP$ his) (NN water-wheel))))
            (VP (VBD was)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP
                    (VP (VBD went)
                      (ADVP (RB round)
                        (CC and)
                        (RB round)))
                    (, ,)
                    (CC and)
                    (VP (VBD did)
                      (NP (NN nothing))))))))))
      (CC but)
      (VP (VBP go)
        (NP (NN round))))
    (. .)))

advmod(got-6, Anyhow-1)
det(Willie-5, the-3)
nn(Willie-5, reason-4)
nsubj(got-6, Willie-5)
nsubj(go-23, Willie-5)
root(ROOT-0, got-6)
nsubj(was-11, tired-7)
poss(water-wheel-10, his-9)
prep_of(tired-7, water-wheel-10)
ccomp(got-6, was-11)
mark(went-14, that-12)
nsubj(went-14, it-13)
nsubj(did-20, it-13)
ccomp(was-11, went-14)
advmod(went-14, round-15)
advmod(went-14, round-17)
conj_and(round-15, round-17)
ccomp(was-11, did-20)
conj_and(went-14, did-20)
dobj(did-20, nothing-21)
conj_but(got-6, go-23)
dobj(go-23, round-24)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD drove)
        (SBAR
          (S
            (NP
              (NP (DT no) (NN machinery))
              (, ,)
              (ADJP (VBN ground)
                (NP
                  (NP (DT no) (NN grain))
                  (PP (IN of)
                    (NP (NN corn)))))
              (: --))
            (`` ``)
            (VP (VBD did)
              (NP (NN nothing))
              (PP (IN for)
                (NP (JJ _) (NN no_body))))))))
    (, ,) ('' '')
    (NP (NNP Willie))
    (VP (VBD said) (, ,)
      (S
        (VP (VBG seeking)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ emphatic))))))))
    (. .)))

nsubj(drove-2, It-1)
ccomp(said-21, drove-2)
neg(machinery-4, no-3)
nsubj(did-13, machinery-4)
amod(machinery-4, ground-6)
neg(grain-8, no-7)
dep(ground-6, grain-8)
prep_of(grain-8, corn-10)
ccomp(drove-2, did-13)
dobj(did-13, nothing-14)
amod(no_body-17, _-16)
prep_for(did-13, no_body-17)
nsubj(said-21, Willie-20)
root(ROOT-0, said-21)
xcomp(said-21, seeking-23)
aux(emphatic-26, to-24)
cop(emphatic-26, be-25)
xcomp(seeking-23, emphatic-26)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP
      (VP (VBD carried)
        (NP (PRP it))
        (ADVP (RB home)))
      (, ,)
      (CC and)
      (VP (VBP put)
        (NP (PRP it))
        (PRT (RP away))
        (PP (IN in)
          (NP
            (NP (DT a) (JJ certain) (NN part))
            (PP (IN of)
              (NP (DT the) (NNS ruins)))))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP he))
            (VP (VBD kept)
              (NP
                (NP (NNS odds)
                  (CC and)
                  (NNS ends))
                (PP (IN of)
                  (NP
                    (NP (NNS things))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (MD might)
                          (NP (DT some) (NN day))
                          (VP (VB come)
                            (PP (IN in)
                              (ADJP (JJ useful)))))))))))))))
    (. .)))

dep(carried-3, So-1)
nsubj(carried-3, he-2)
nsubj(put-8, he-2)
root(ROOT-0, carried-3)
dobj(carried-3, it-4)
advmod(carried-3, home-5)
conj_and(carried-3, put-8)
dobj(put-8, it-9)
prt(put-8, away-10)
det(part-14, a-12)
amod(part-14, certain-13)
prep_in(put-8, part-14)
det(ruins-17, the-16)
prep_of(part-14, ruins-17)
advmod(kept-20, where-18)
nsubj(kept-20, he-19)
advcl(put-8, kept-20)
dobj(kept-20, odds-21)
dobj(kept-20, ends-23)
conj_and(odds-21, ends-23)
prep_of(odds-21, things-25)
nsubj(come-30, things-25)
aux(come-30, might-27)
det(day-29, some-28)
tmod(come-30, day-29)
rcmod(things-25, come-30)
prep_in(come-30, useful-32)

(ROOT
  (S
    (NP (NNP Mr) (NNP Macmichael))
    (VP (VBD was)
      (ADJP (RB so) (VBN devoted)
        (PP (TO to)
          (NP (PRP$ his) (NN profession)))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD desired)
              (NP (NN nothing))
              (ADVP (RBR better))
              (PP (IN for)
                (NP (NNP Willie)))
              (SBAR (IN than) (IN that)
                (S
                  (S
                    (NP (PRP he))
                    (ADVP (RB too))
                    (VP (MD should)
                      (VP (VB be)
                        (NP (DT a) (JJ medical) (NN man)))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (ADJP
                        (ADVP (RBR more) (IN than))
                        (JJ pleased)
                        (S
                          (VP (TO to)
                            (VP (VB find)
                              (SBAR
                                (WHADVP (WRB how) (RB well))
                                (S
                                  (NP
                                    (NP (NNP Willie) (POS 's))
                                    (NNS hands))
                                  (VP (VBD were)
                                    (ADJP (JJ able)
                                      (S
                                        (VP (TO to)
                                          (VP (VB carry)
                                            (PRT (RP out))
                                            (NP (PRP$ his) (NNS contrivances)))))))))))))))
                  (: ;)
                  (SBAR (IN for)
                    (S
                      (NP (PRP he))
                      (VP (VBN judged)
                        (S
                          (NP (PRP it))
                          (ADJP (JJ impossible)))
                        (PP (IN for)
                          (NP (DT a) (NN country) (NN doctor)
                            (S
                              (VP (TO to)
                                (VP (VB have)
                                  (NP
                                    (ADJP (RB too) (JJ much))
                                    (JJ mechanical) (NN faculty)))))))))))))))))
    (. .)))

nn(Macmichael-2, Mr-1)
nsubjpass(devoted-5, Macmichael-2)
auxpass(devoted-5, was-3)
advmod(devoted-5, so-4)
root(ROOT-0, devoted-5)
poss(profession-8, his-7)
prep_to(devoted-5, profession-8)
mark(desired-11, that-9)
nsubj(desired-11, he-10)
ccomp(devoted-5, desired-11)
dobj(desired-11, nothing-12)
advmod(desired-11, better-13)
prep_for(desired-11, Willie-15)
mark(man-24, than-16)
mark(man-24, that-17)
nsubj(man-24, he-18)
advmod(man-24, too-19)
aux(man-24, should-20)
cop(man-24, be-21)
det(man-24, a-22)
amod(man-24, medical-23)
advcl(desired-11, man-24)
nsubj(pleased-31, he-27)
nsubj(find-33, he-27)
cop(pleased-31, was-28)
advmod(than-30, more-29)
advmod(pleased-31, than-30)
advcl(desired-11, pleased-31)
conj_and(man-24, pleased-31)
aux(find-33, to-32)
xcomp(pleased-31, find-33)
advmod(well-35, how-34)
advmod(able-40, well-35)
poss(hands-38, Willie-36)
nsubj(able-40, hands-38)
nsubj(carry-42, hands-38)
cop(able-40, were-39)
ccomp(find-33, able-40)
aux(carry-42, to-41)
xcomp(able-40, carry-42)
prt(carry-42, out-43)
poss(contrivances-45, his-44)
dobj(carry-42, contrivances-45)
mark(judged-49, for-47)
nsubj(judged-49, he-48)
advcl(desired-11, judged-49)
conj_and(man-24, judged-49)
nsubj(impossible-51, it-50)
xcomp(judged-49, impossible-51)
det(doctor-55, a-53)
nn(doctor-55, country-54)
prep_for(judged-49, doctor-55)
aux(have-57, to-56)
vmod(doctor-55, have-57)
advmod(much-59, too-58)
amod(faculty-61, much-59)
amod(faculty-61, mechanical-60)
dobj(have-57, faculty-61)

(ROOT
  (S
    (NP
      (NP (DT The) (NN exercise))
      (PP (IN of)
        (NP (PDT such) (DT a) (NN skill))))
    (ADVP (RB alone))
    (VP (MD might)
      (VP
        (VP (VB secure)
          (NP
            (NP (DT the) (JJ instant) (NN relief))
            (PP (IN of)
              (NP (DT a) (NN patient)))))
        (, ,)
        (CC and)
        (VP (VB be)
          (NP
            (NP (DT the) (NN saving))
            (PP (IN of)
              (NP (PRP him)))))))
    (. .)))

det(exercise-2, The-1)
nsubj(secure-9, exercise-2)
predet(skill-6, such-4)
det(skill-6, a-5)
prep_of(exercise-2, skill-6)
advmod(secure-9, alone-7)
aux(secure-9, might-8)
root(ROOT-0, secure-9)
det(relief-12, the-10)
amod(relief-12, instant-11)
dobj(secure-9, relief-12)
det(patient-15, a-14)
prep_of(relief-12, patient-15)
cop(saving-20, be-18)
det(saving-20, the-19)
conj_and(secure-9, saving-20)
prep_of(saving-20, him-22)

(ROOT
  (S (CC But)
    (, ,)
    (ADVP (RBR more)
      (PP (IN than)
        (NP (DT this))))
    (, ,)
    (NP (PRP he))
    (VP (VBD believed)
      (SBAR (IN that)
        (S
          (NP (NN nothing))
          (VP (VBD tended)
            (ADVP (RB so) (RB much))
            (S
              (VP (TO to)
                (VP (VB develop)
                  (NP
                    (NP (JJ common) (NN sense))
                    (PRN (: --)
                      (NP
                        (NP (DT the) (RBS most) (JJ precious))
                        (PP (IN of)
                          (NP (NNS faculties))))
                      (: --)))
                  (PP (IN as)
                    (NP
                      (NP (DT the))
                      (VP (VBG doing)
                        (PP (IN of)
                          (NP
                            (NP (NNS things))
                            (PP (IN with)
                              (NP (DT the) (NNS hands)))))))))))))))
    (. .)))

cc(believed-8, But-1)
advmod(believed-8, more-3)
prep_than(more-3, this-5)
nsubj(believed-8, he-7)
root(ROOT-0, believed-8)
mark(tended-11, that-9)
nsubj(tended-11, nothing-10)
nsubj(develop-15, nothing-10)
ccomp(believed-8, tended-11)
advmod(much-13, so-12)
advmod(tended-11, much-13)
aux(develop-15, to-14)
xcomp(tended-11, develop-15)
amod(sense-17, common-16)
dobj(develop-15, sense-17)
det(precious-21, the-19)
advmod(precious-21, most-20)
dep(sense-17, precious-21)
prep_of(precious-21, faculties-23)
prep_as(develop-15, the-26)
vmod(the-26, doing-27)
prep_of(doing-27, things-29)
det(hands-32, the-31)
prep_with(things-29, hands-32)

(ROOT
  (S
    (ADVP (RB Hence))
    (NP (PRP he))
    (VP
      (ADVP (RB not) (RB only))
      (VP (VBD encouraged)
        (NP
          (NP (NNP Willie))
          (PP (IN in)
            (NP (NN everything)))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD undertook))))))
      (, ,)
      (CC but)
      (, ,)
      (S
        (VP (VBG considering)
          (S
            (NP
              (NP (DT the) (CD five) (NNS hours))
              (PP (IN of)
                (NP (NN school))))
            (ADJP (RB quite) (JJ sufficient)
              (PP (IN for)
                (NP
                  (NP (NN study))
                  (PP (IN of)
                    (NP
                      (NP (DT that) (NN sort))
                      (, ,)
                      (VP (VBN requested)
                        (NP (DT the) (NN master))
                        (S (RB not)
                          (VP (TO to)
                            (VP (VB give)
                              (NP (PRP him))
                              (NP (DT any) (NNS lessons)
                                (S
                                  (VP (TO to)
                                    (VP (VB do)
                                      (PP (IN at)
                                        (NP (NN home))))))))))))))))))))
    (. .)))

advmod(encouraged-5, Hence-1)
nsubj(encouraged-5, he-2)
nsubj(considering-14, he-2)
dep(only-4, not-3)
advmod(encouraged-5, only-4)
root(ROOT-0, encouraged-5)
dobj(encouraged-5, Willie-6)
prep_in(Willie-6, everything-8)
nsubj(undertook-10, he-9)
rcmod(Willie-6, undertook-10)
conj_but(encouraged-5, considering-14)
xcomp(encouraged-5, considering-14)
det(hours-17, the-15)
num(hours-17, five-16)
nsubj(sufficient-21, hours-17)
prep_of(hours-17, school-19)
advmod(sufficient-21, quite-20)
xcomp(considering-14, sufficient-21)
prep_for(sufficient-21, study-23)
det(sort-26, that-25)
prep_of(study-23, sort-26)
vmod(sort-26, requested-28)
det(master-30, the-29)
dobj(requested-28, master-30)
neg(give-33, not-31)
aux(give-33, to-32)
vmod(requested-28, give-33)
iobj(give-33, him-34)
det(lessons-36, any-35)
dobj(give-33, lessons-36)
aux(do-38, to-37)
vmod(lessons-36, do-38)
prep_at(do-38, home-40)

(ROOT
  (S (IN So)
    (NP (NNP Willie))
    (VP (VBD worked)
      (UCP
        (PP
          (ADVP (RB hard))
          (IN during)
          (NP (NN school)))
        (, ,)
        (CC and)
        (SBAR (IN after)
          (S
            (NP (PRP it))
            (VP (VBD had)
              (NP
                (NP (RB plenty))
                (PP (IN of)
                  (NP (NN time)))
                (S
                  (VP (TO to)
                    (VP (VB spend)
                      (PP (IN in)
                        (NP (NN carpentering)))
                      (, ,)
                      (ADVP (RB so))
                      (SBAR (IN that)
                        (S
                          (S
                            (NP (PRP he))
                            (ADVP (RB soon))
                            (VP (VBD came)
                              (S
                                (VP (TO to)
                                  (VP (VB use)
                                    (NP (PDT all) (DT the) (JJ common) (NNS bench-tools))
                                    (PP (IN with)
                                      (NP (NN ease))))))))
                          (, ,)
                          (CC and)
                          (S
                            (NP (NNP Spelman))
                            (VP (VBD was)
                              (ADJP (JJ proud))
                              (PP (IN of)
                                (NP (PRP$ his) (NN apprentice)))
                              (, ,)
                              (SBAR (IN as)
                                (S
                                  (NP (PRP he))
                                  (VP (VBD called)
                                    (NP (PRP him)))))))))
                      (: --)
                      (ADVP (RB so) (RB much) (RB so))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP
                            (NP (DT the) (NN burden))
                            (PP (IN of)
                              (NP (PRP$ his) (NN debt))))
                          (VP (VBD grew)
                            (ADJP (RB much) (JJR lighter))
                            (PP (IN upon)
                              (NP (PRP$ his) (NNS shoulders)))))))))))))))
    (. .)))

dep(worked-3, So-1)
nsubj(worked-3, Willie-2)
root(ROOT-0, worked-3)
advmod(during-5, hard-4)
dep(worked-3, during-5)
pobj(during-5, school-6)
mark(had-11, after-9)
nsubj(had-11, it-10)
dep(worked-3, had-11)
conj_and(during-5, had-11)
dobj(had-11, plenty-12)
prep_of(plenty-12, time-14)
aux(spend-16, to-15)
vmod(plenty-12, spend-16)
prep_in(spend-16, carpentering-18)
advmod(came-24, so-20)
mark(came-24, that-21)
nsubj(came-24, he-22)
nsubj(use-26, he-22)
advmod(came-24, soon-23)
dep(spend-16, came-24)
aux(use-26, to-25)
xcomp(came-24, use-26)
predet(bench-tools-30, all-27)
det(bench-tools-30, the-28)
amod(bench-tools-30, common-29)
dobj(use-26, bench-tools-30)
prep_with(use-26, ease-32)
nsubj(proud-37, Spelman-35)
cop(proud-37, was-36)
dep(spend-16, proud-37)
conj_and(came-24, proud-37)
poss(apprentice-40, his-39)
prep_of(proud-37, apprentice-40)
mark(called-44, as-42)
nsubj(called-44, he-43)
advcl(proud-37, called-44)
dobj(called-44, him-45)
advmod(so-49, so-47)
advmod(so-49, much-48)
advmod(spend-16, so-49)
mark(grew-57, that-51)
det(burden-53, the-52)
nsubj(grew-57, burden-53)
poss(debt-56, his-55)
prep_of(burden-53, debt-56)
ccomp(spend-16, grew-57)
advmod(lighter-59, much-58)
acomp(grew-57, lighter-59)
poss(shoulders-62, his-61)
prep_upon(grew-57, shoulders-62)

(ROOT
  (S (CC But)
    (NP (NNP Willie))
    (VP (VBD did) (RB not)
      (VP (VB forget)
        (NP
          (NP (PRP$ his) (JJR older) (NN friend))
          (, ,)
          (NP (NNP Hector) (NNP Macallaster)))))
    (. .)))

cc(forget-5, But-1)
nsubj(forget-5, Willie-2)
aux(forget-5, did-3)
neg(forget-5, not-4)
root(ROOT-0, forget-5)
poss(friend-8, his-6)
amod(friend-8, older-7)
dobj(forget-5, friend-8)
nn(Macallaster-11, Hector-10)
appos(friend-8, Macallaster-11)

(ROOT
  (S
    (NP (DT Every) (NN half-holiday))
    (NP (PRP he))
    (VP (VBD read)
      (PP (TO to)
        (NP (PRP him)))
      (PP (IN for)
        (NP
          (NP (DT a) (NN couple))
          (PP (IN of)
            (NP (NNS hours)))))
      (, ,)
      (ADVP (RB chiefly))
      (, ,)
      (PP (IN for)
        (NP (DT some) (NN time)))
      (, ,)
      (PP (IN from)
        (NP
          (NP (NNP Dick) (POS 's))
          (NNP Astronomy))))
    (. .)))

det(half-holiday-2, Every-1)
nsubj(read-4, half-holiday-2)
nsubj(read-4, he-3)
root(ROOT-0, read-4)
prep_to(read-4, him-6)
det(couple-9, a-8)
prep_for(read-4, couple-9)
prep_of(couple-9, hours-11)
advmod(read-4, chiefly-13)
det(time-17, some-16)
prep_for(read-4, time-17)
poss(Astronomy-22, Dick-20)
prep_from(read-4, Astronomy-22)

(ROOT
  (S
    (S
      (NP
        (NP (DT Neither))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBD understood)
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD read)))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (DT both))
        (VP (VBD understood)
          (ADVP (RB much))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Hector))
        (VP (MD could)
          (VP (VB explain)
            (NP
              (NP (DT some))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS things))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD puzzled)
                        (NP (NNP Willie))))))))))))
    (. .)))

nsubj(understood-4, Neither-1)
prep_of(Neither-1, them-3)
root(ROOT-0, understood-4)
dobj(understood-4, all-5)
nsubj(read-7, he-6)
rcmod(all-5, read-7)
nsubj(understood-11, both-10)
conj_but(understood-4, understood-11)
advmod(understood-11, much-12)
nsubj(explain-17, Hector-15)
aux(explain-17, could-16)
conj_but(understood-4, explain-17)
conj_and(understood-11, explain-17)
dobj(explain-17, some-18)
det(things-21, the-20)
prep_of(some-18, things-21)
nsubj(puzzled-23, things-21)
rcmod(things-21, puzzled-23)
dobj(puzzled-23, Willie-24)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP
          (VP (VBD found)
            (SBAR (IN that)
              (S
                (NP (NN everything))
                (VP (VBD went)
                  (PP (IN on)
                    (PP (IN in)
                      (NP (JJ such) (NN order))))
                  (, ,)
                  (ADVP (IN above)
                    (CC and)
                    (IN below))))))
          (CC and)
          (VP
            (NP (DT all))
            (PP (IN about)
              (NP (PRP him)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB see)
            (SBAR
              (SBAR (IN that)
                (S
                  (NP
                    (NP (RB even) (DT a) (NN thing))
                    (ADJP (RB well) (VBN done)))
                  (VP (VBD was)
                    (ADJP (JJ worth)
                      (NP
                        (NP (DT a) (JJ good) (NN deal))
                        (JJR more)))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (VP (VBN done)
                          (PP
                            (PP (IN at)
                              (NP (DT the) (JJ right) (NN moment)))
                            (CC or)
                            (PP (IN within)
                              (NP (DT the) (VBN set) (NN time))))))))))
              (: ;)
              (CC and)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NNS heavens))
                  (ADVP (PRP themselves))
                  (VP (VBD were)
                    (PP (IN like)
                      (NP (DT a) (JJ great) (NN clock))))))))))
      (, ,)
      (S
        (VP (VBG ordering)
          (NP
            (NP (DT the) (NN time))
            (PP (IN for)
              (NP (NN everything)))))))
    (. .)))

cc(began-22, And-1)
advmod(found-4, when-2)
nsubj(found-4, he-3)
advcl(began-22, found-4)
mark(went-7, that-5)
nsubj(went-7, everything-6)
ccomp(found-4, went-7)
prep(went-7, on-8)
pcomp(on-8, in-9)
amod(order-11, such-10)
pobj(in-9, order-11)
advmod(went-7, above-13)
advmod(went-7, below-15)
conj_and(above-13, below-15)
conj_and(found-4, all-17)
advcl(began-22, all-17)
prep_about(all-17, him-19)
nsubj(began-22, he-21)
nsubj(see-24, he-21)
root(ROOT-0, began-22)
aux(see-24, to-23)
xcomp(began-22, see-24)
mark(worth-32, that-25)
advmod(thing-28, even-26)
det(thing-28, a-27)
nsubj(worth-32, thing-28)
advmod(done-30, well-29)
amod(thing-28, done-30)
cop(worth-32, was-31)
ccomp(see-24, worth-32)
det(deal-35, a-33)
amod(deal-35, good-34)
dep(more-36, deal-35)
dep(worth-32, more-36)
advmod(done-38, when-37)
advcl(worth-32, done-38)
advcl(worth-32, done-38')
conj_or(done-38, done-38')
det(moment-42, the-40)
amod(moment-42, right-41)
prep_at(done-38, moment-42)
det(time-47, the-45)
amod(time-47, set-46)
prep_within(done-38', time-47)
mark(were-54, that-50)
det(heavens-52, the-51)
nsubj(were-54, heavens-52)
advmod(were-54, themselves-53)
ccomp(see-24, were-54)
conj_and(worth-32, were-54)
det(clock-58, a-56)
amod(clock-58, great-57)
prep_like(were-54, clock-58)
xcomp(began-22, ordering-60)
det(time-62, the-61)
dobj(ordering-60, time-62)
prep_for(time-62, everything-64)

(ROOT
  (S
    (NP (DT Neither))
    (VP (VBD did)
      (S
        (NP (PRP he))
        (VP
          (VP (VB give)
            (PRT (RP up))
            (NP (VBG shoemaking))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP he))
                (ADVP (RB often))
                (VP (VBD did)
                  (NP
                    (NP (DT a) (JJ little) (NN work))
                    (PP (IN for)
                      (NP
                        (NP (NNP Hector))
                        (, ,)
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBD had)
                              (VP (VBN made)
                                (S
                                  (NP (PRP him))
                                  (NP (DT a) (NN leather) (NN apron)))))))
                        (, ,))))))))
          (CC and)
          (VP (VB cut)
            (NP (PRP him))
            (PP (IN out)
              (NP
                (NP (NNS bits))
                (PP (IN of)
                  (NP (JJ stout) (NN leather)))))
            (S
              (VP (TO to)
                (VP (VB protect)
                  (NP (PRP$ his) (NNS hands))
                  (PP (IN from)
                    (NP (DT the) (NN thread)))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP he))
                      (VP (VBD was)
                        (VP (VBG sewing))))))))))))
    (. .)))

nsubj(did-2, Neither-1)
root(ROOT-0, did-2)
nsubj(give-4, he-3)
nsubj(cut-27, he-3)
ccomp(did-2, give-4)
prt(give-4, up-5)
dobj(give-4, shoemaking-6)
mark(did-11, for-8)
nsubj(did-11, he-9)
advmod(did-11, often-10)
advcl(give-4, did-11)
det(work-14, a-12)
amod(work-14, little-13)
dobj(did-11, work-14)
prep_for(work-14, Hector-16)
nsubj(made-20, Hector-16)
aux(made-20, had-19)
rcmod(Hector-16, made-20)
nsubj(apron-24, him-21)
det(apron-24, a-22)
nn(apron-24, leather-23)
xcomp(made-20, apron-24)
ccomp(did-2, cut-27)
conj_and(give-4, cut-27)
dobj(cut-27, him-28)
prep_out(cut-27, bits-30)
amod(leather-33, stout-32)
prep_of(bits-30, leather-33)
aux(protect-35, to-34)
vmod(cut-27, protect-35)
poss(hands-37, his-36)
dobj(protect-35, hands-37)
det(thread-40, the-39)
prep_from(protect-35, thread-40)
advmod(sewing-44, when-41)
nsubj(sewing-44, he-42)
aux(sewing-44, was-43)
advcl(protect-35, sewing-44)

(ROOT
  (S
    (PP (IN For)
      (NP (CD twelve) (NNS months)))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP$ his) (JJ chief) (NN employment))
    (VP (VBD lay)
      (PP (IN in)
        (NP
          (NP (DT the) (NN workshop))
          (PP (IN of)
            (NP (DT the) (NN carpenter))))))
    (. .)))

num(months-3, twelve-2)
prep_for(lay-10, months-3)
advmod(lay-10, however-5)
poss(employment-9, his-7)
amod(employment-9, chief-8)
nsubj(lay-10, employment-9)
root(ROOT-0, lay-10)
det(workshop-13, the-12)
prep_in(lay-10, workshop-13)
det(carpenter-16, the-15)
prep_of(workshop-13, carpenter-16)

(ROOT
  (NP (NNP CHAPTER) (NNP VIII) (. .)))

nn(VIII-2, CHAPTER-1)
root(ROOT-0, VIII-2)

(ROOT
  (S
    (NP (NNP WILLIE) (NNP DIGS)
      (CC AND)
      (NNP FINDS) (NN WHAT) (NNP HE) (NNP DID) (NNP NOT))
    (VP (VBP EXPECT))
    (. .)))

nn(DIGS-2, WILLIE-1)
nsubj(EXPECT-9, DIGS-2)
nn(NOT-8, FINDS-4)
nn(NOT-8, WHAT-5)
nn(NOT-8, HE-6)
nn(NOT-8, DID-7)
conj_and(DIGS-2, NOT-8)
nsubj(EXPECT-9, NOT-8)
root(ROOT-0, EXPECT-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBG reading)
          (PP (TO to)
            (NP
              (NP (NNP Hector) (NNP Sir) (NNP Walter) (NNP Scott) (POS 's))
              (`` ``) (NNP Antiquary)))
          (, ,) ('' '')
          (PP (IN in)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ occurs)
                  (NP
                    (NP (DT the) (NN narration))
                    (PP (IN of)
                      (NP
                        (NP (DT a) (NN digging))
                        (PP (IN for)
                          (NP
                            (NP (NN treasure))
                            (PP (IN in)
                              (NP (NNS ruins))))))))
                  (PP (RB not) (IN unlike)
                    (NP
                      (NP (DT these))
                      (, ,)
                      (ADJP (RB only) (JJR grander)))))))))))
    (. .)))

nsubj(reading-4, He-1)
aux(reading-4, had-2)
aux(reading-4, been-3)
root(ROOT-0, reading-4)
nn(Scott-9, Hector-6)
nn(Scott-9, Sir-7)
nn(Scott-9, Walter-8)
poss(Antiquary-12, Scott-9)
prep_to(reading-4, Antiquary-12)
nsubj(occurs-17, which-16)
prepc_in(reading-4, occurs-17)
det(narration-19, the-18)
dobj(occurs-17, narration-19)
det(digging-22, a-21)
prep_of(narration-19, digging-22)
prep_for(digging-22, treasure-24)
prep_in(treasure-24, ruins-26)
neg(occurs-17, not-27)
prep_unlike(occurs-17, these-29)
advmod(grander-32, only-31)
amod(these-29, grander-32)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (PP (IN of)
          (NP
            (NP (JJ little) (NN consequence))
            (PP (TO to)
              (NP (NNP Willie)))))
        (SBAR (IN that)
          (S
            (NP (DT no) (NN treasure))
            (VP (VBD had)
              (VP (VBN been)
                (VP (VBN found)
                  (ADVP (RB there)))))))))
    (: :)
    (S
      (NP
        (NP (DT the) (NN propriety))
        (PP (IN of)
          (NP (NN digging))))
      (VP (VBD remained)
        (NP (DT the) (JJ same))))
    (: ;)
    (S
      (PP (IN for)
        (PP (IN in)
          (NP (DT a) (JJ certain) (NN spot))))
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RB often))
        (VP (VBN fancied)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT a) (JJ hollow) (NN sound))
                (, ,)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP he))
                    (VP (VBD stamped)
                      (ADJP (JJ hard)))))
                (, ,))
              (VP (VBD indicated)
                (NP (DT an) (JJ empty) (NN place))
                (PP (IN underneath))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
amod(consequence-5, little-4)
prep_of(was-2, consequence-5)
prep_to(consequence-5, Willie-7)
mark(found-13, that-8)
neg(treasure-10, no-9)
nsubjpass(found-13, treasure-10)
aux(found-13, had-11)
auxpass(found-13, been-12)
ccomp(was-2, found-13)
advmod(found-13, there-14)
det(propriety-17, the-16)
nsubj(remained-20, propriety-17)
prep_of(propriety-17, digging-19)
parataxis(was-2, remained-20)
det(same-22, the-21)
xcomp(remained-20, same-22)
prep(fancied-32, for-24)
pcomp(for-24, in-25)
det(spot-28, a-26)
amod(spot-28, certain-27)
pobj(in-25, spot-28)
nsubj(fancied-32, he-29)
aux(fancied-32, had-30)
advmod(fancied-32, often-31)
parataxis(was-2, fancied-32)
mark(indicated-43, that-33)
det(sound-36, a-34)
amod(sound-36, hollow-35)
tmod(stamped-40, sound-36)
nsubj(indicated-43, sound-36)
advmod(stamped-40, when-38)
nsubj(stamped-40, he-39)
rcmod(sound-36, stamped-40)
acomp(stamped-40, hard-41)
ccomp(fancied-32, indicated-43)
det(place-46, an-44)
amod(place-46, empty-45)
dobj(indicated-43, place-46)
prep(indicated-43, underneath-47)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (NP (PRP myself))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD came)
            (PP (IN from)
              (UCP
                (ADVP (RB above))
                (, ,)
                (CC and)
                (RB not)
                (PP (IN from)
                  (NP (NNP beneath))
                  (: ;))))
            (SBAR (IN for)
              (S
                (SBAR (IN although)
                  (S
                    (NP
                      (NP (DT a) (NN portion))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (JJ vaulted) (NN roof))
                          (PP (IN of)
                            (NP (DT the) (JJ little) (NN chamber))))))
                    (VP (VBD had)
                      (VP (VBN been)
                        (VP (VBN broken)
                          (PP (IN in)))))))
                (, ,)
                (NP
                  (NP (DT the) (JJR greater) (NN part))
                  (PP (IN of)
                    (NP (PRP it))))
                (ADVP (RB still))
                (VP
                  (VP (VBD remained))
                  (, ,)
                  (CC and)
                  (VP (MD might)
                    (VP (VB have)
                      (VP (VBN caused)
                        (NP (DT a) (NN reverberation))))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
dobj(believe-2, myself-3)
mark(came-6, that-4)
nsubj(came-6, it-5)
ccomp(believe-2, came-6)
prep(came-6, from-7)
pcomp(from-7, above-8)
neg(from-12, not-11)
pcomp(from-7, from-12)
conj_and(above-8, from-12)
pobj(from-12, beneath-13)
mark(remained-38, for-15)
mark(broken-29, although-16)
det(portion-18, a-17)
nsubjpass(broken-29, portion-18)
det(roof-22, the-20)
amod(roof-22, vaulted-21)
prep_of(portion-18, roof-22)
det(chamber-26, the-24)
amod(chamber-26, little-25)
prep_of(roof-22, chamber-26)
aux(broken-29, had-27)
auxpass(broken-29, been-28)
advcl(remained-38, broken-29)
prep(broken-29, in-30)
det(part-34, the-32)
amod(part-34, greater-33)
nsubj(remained-38, part-34)
nsubj(caused-43, part-34)
prep_of(part-34, it-36)
advmod(remained-38, still-37)
advcl(came-6, remained-38)
aux(caused-43, might-41)
aux(caused-43, have-42)
advcl(came-6, caused-43)
conj_and(remained-38, caused-43)
det(reverberation-45, a-44)
dobj(caused-43, reverberation-45)

(ROOT
  (S
    (NP (DT The) (NN floor))
    (VP (VBD was)
      (VP (VBN heaped)
        (PRT (RP up))
        (PP (IN with)
          (NP (VBN fallen) (NNS stones)
            (CC and)
            (NNS rubbish)))))
    (. .)))

det(floor-2, The-1)
nsubjpass(heaped-4, floor-2)
auxpass(heaped-4, was-3)
root(ROOT-0, heaped-4)
prt(heaped-4, up-5)
amod(stones-8, fallen-7)
prep_with(heaped-4, stones-8)
prep_with(heaped-4, rubbish-10)
conj_and(stones-8, rubbish-10)

(ROOT
  (S
    (NP (CD One) (NNP Wednesday) (NN afternoon))
    (, ,)
    (PP (RB instead) (IN of)
      (S
        (VP (VBG going)
          (PP (TO to)
            (NP
              (NP (NNP Hector))
              (, ,)
              (SBAR
                (WHNP (WP whom))
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN told)
                      (S (RB not)
                        (VP (TO to)
                          (VP (VB expect)
                            (NP (PRP him))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD got)
        (NP (DT a) (NN pickaxe)
          (CC and)
          (NN spade)))
      (, ,)
      (CC and)
      (VP (VBD proceeded)
        (S
          (VP (TO to)
            (VP (VB dig)
              (PP (IN in)
                (NP (DT the) (JJ trodden) (NN heap))))))))
    (. .)))

num(afternoon-3, One-1)
nn(afternoon-3, Wednesday-2)
nsubj(got-21, afternoon-3)
nsubj(proceeded-28, afternoon-3)
nsubj(dig-30, afternoon-3)
prepc_instead_of(got-21, going-7)
prep_to(going-7, Hector-9)
dobj(told-14, Hector-9)
nsubj(expect-17, Hector-9)
nsubj(told-14, he-12)
aux(told-14, had-13)
rcmod(Hector-9, told-14)
neg(expect-17, not-15)
aux(expect-17, to-16)
xcomp(told-14, expect-17)
dobj(expect-17, him-18)
nsubj(got-21, he-20)
root(ROOT-0, got-21)
det(pickaxe-23, a-22)
dobj(got-21, pickaxe-23)
dobj(got-21, spade-25)
conj_and(pickaxe-23, spade-25)
conj_and(got-21, proceeded-28)
aux(dig-30, to-29)
xcomp(proceeded-28, dig-30)
det(heap-34, the-32)
amod(heap-34, trodden-33)
prep_in(dig-30, heap-34)

(ROOT
  (S
    (PP (IN At)
      (NP
        (NP (DT the) (JJ first) (NN blow))
        (PP (IN of)
          (NP (DT the) (NN pickaxe)))))
    (NP (PRP he))
    (VP (VBD came)
      (PP (IN upon)
        (NP
          (NP (JJ large) (NNS stones))
          (PRN (: --)
            (NP
              (NP (DT the) (NN job))
              (PP (IN of)
                (S
                  (VP (VBG clearing)
                    (PRT (RP out))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBD was)
                          (PP (IN by)
                            (NP
                              (NP (DT no) (NN means))
                              (NP (DT an) (JJ easy) (NN one)))))))))))
            (: --))))
      (PP
        (ADVP (RB so) (RB far))
        (IN from)
        (NP (PRP it)))
      (, ,)
      (ADVP (RB indeed))
      (, ,)
      (SBAR (IN that)
        (S (, ,)
          (PP (IN after)
            (S
              (VP
                (VP (VBG working)
                  (PP (IN for)
                    (NP
                      (QP (PDT half) (DT an) (NN hour)))))
                (, ,)
                (CC and)
                (VP
                  (ADVP (RB only))
                  (VBG getting)
                  (PP (IN out)
                    (NP (CD two)
                      (ADJP
                        (ADJP (JJ large))
                        (CC and)
                        (ADJP
                          (NP
                            (QP (PDT half) (DT a) (NN dozen)))
                          (JJR smaller)))
                      (NNS ones)))))))
          (, ,)
          (NP (PRP he))
          (VP (VBD resolved)
            (S
              (VP (TO to)
                (VP (VB ask)
                  (S
                    (NP (NNP Sandy) (NNP Spelman))
                    (VP (TO to)
                      (VP (VB help)
                        (NP (PRP him))))))))))))
    (. .)))

det(blow-4, the-2)
amod(blow-4, first-3)
prep_at(came-9, blow-4)
det(pickaxe-7, the-6)
prep_of(blow-4, pickaxe-7)
nsubj(came-9, he-8)
root(ROOT-0, came-9)
amod(stones-12, large-11)
prep_upon(came-9, stones-12)
det(job-15, the-14)
dep(stones-12, job-15)
prepc_of(job-15, clearing-17)
prt(clearing-17, out-18)
nsubj(was-20, which-19)
ccomp(clearing-17, was-20)
neg(means-23, no-22)
prep_by(was-20, means-23)
det(one-26, an-24)
amod(one-26, easy-25)
dep(means-23, one-26)
advmod(came-9, so-28)
prep_far_from(came-9, it-31)
advmod(came-9, indeed-33)
mark(resolved-58, that-35)
prepc_after(resolved-58, working-38)
quantmod(hour-42, half-40)
quantmod(hour-42, an-41)
prep_for(working-38, hour-42)
advmod(getting-46, only-45)
conj_and(working-38, getting-46)
prepc_after(resolved-58, getting-46)
num(ones-55, two-48)
amod(ones-55, large-49)
quantmod(dozen-53, half-51)
quantmod(dozen-53, a-52)
npadvmod(smaller-54, dozen-53)
conj_and(large-49, smaller-54)
amod(ones-55, smaller-54)
prep_out(getting-46, ones-55)
nsubj(resolved-58, he-57)
nsubj(ask-60, he-57)
ccomp(came-9, resolved-58)
aux(ask-60, to-59)
xcomp(resolved-58, ask-60)
nn(Spelman-62, Sandy-61)
dobj(ask-60, Spelman-62)
nsubj(help-64, Spelman-62)
aux(help-64, to-63)
xcomp(ask-60, help-64)
dobj(help-64, him-65)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP
      (VP (VBD left)
        (NP (PRP$ his) (NN pickaxe))
        (PP (IN with)
          (ADVP
            (NP (CD one) (NN point))
            (RB fast)))
        (PP (IN between)
          (NP (CD two) (NNS stones))))
      (, ,)
      (CC and)
      (VP (VBD ran)
        (PP (TO to)
          (NP (DT the) (NN shop)))))
    (. .)))

dep(left-3, So-1)
nsubj(left-3, he-2)
nsubj(ran-15, he-2)
root(ROOT-0, left-3)
poss(pickaxe-5, his-4)
dobj(left-3, pickaxe-5)
prep(left-3, with-6)
num(point-8, one-7)
npadvmod(fast-9, point-8)
pcomp(with-6, fast-9)
num(stones-12, two-11)
prep_between(left-3, stones-12)
conj_and(left-3, ran-15)
det(shop-18, the-17)
prep_to(ran-15, shop-18)

(ROOT
  (S
    (S
      (NP (NNP Sandy))
      (VP (VBD was)
        (PP (IN at)
          (NP (NN work)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP$ his) (NN father))
      (VP (VBD was)
        (ADJP (RB quite) (JJ willing)
          (S
            (VP (TO to)
              (VP (VB let)
                (S
                  (NP (PRP him))
                  (VP (VB go)))))))))
    (. .)))

nsubj(was-2, Sandy-1)
root(ROOT-0, was-2)
prep_at(was-2, work-4)
poss(father-8, his-7)
nsubj(willing-11, father-8)
nsubj(let-13, father-8)
cop(willing-11, was-9)
advmod(willing-11, quite-10)
conj_but(was-2, willing-11)
aux(let-13, to-12)
xcomp(willing-11, let-13)
nsubj(go-15, him-14)
ccomp(let-13, go-15)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (VBD told)
        (NP (PRP them))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBN digging)
                (PP (IN for)
                  (NP (DT a) (NN treasure)))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP they))
        (ADVP (DT all))
        (VP (VBD laughed)
          (PP (IN over)
            (NP (PRP it)))))
      (: ;)
      (CC but)
      (S
        (PP (IN at)
          (NP (DT the) (JJ same) (NN time)))
        (NP (NNP Willie))
        (VP (VBD thought)
          (PP (IN with)
            (NP
              (NP (PRP himself))
              (: --) (`` ``)
              (SBARQ
                (WHNP (WP Who))
                (SQ
                  (VP (VBZ knows)))
                (. ?)))))))))

nsubj(told-2, Willie-1)
root(ROOT-0, told-2)
dobj(told-2, them-3)
nsubjpass(digging-6, he-4)
auxpass(digging-6, was-5)
dep(told-2, digging-6)
det(treasure-9, a-8)
prep_for(digging-6, treasure-9)
nsubj(laughed-14, they-12)
advmod(laughed-14, all-13)
conj_and(told-2, laughed-14)
prep_over(laughed-14, it-16)
det(time-22, the-20)
amod(time-22, same-21)
prep_at(thought-24, time-22)
nsubj(thought-24, Willie-23)
conj_and(told-2, thought-24)
conj_but(laughed-14, thought-24)
prep_with(thought-24, himself-26)
nsubj(knows-30, Who-29)
dep(himself-26, knows-30)

(ROOT
  (S
    (NP (NNP People) (NNP _))
    (VP (VBP have)
      (ADVP (RB _))
      (VP (VBN found)
        (NP
          (NP (NNS treasures))
          (VP (VBN buried)
            (PP (IN in)
              (NP
                (NP (JJ old) (NNS places))
                (PP (IN like)
                  (NP (DT that)))))))))
    (. .)))

nn(_-2, People-1)
nsubj(found-5, _-2)
aux(found-5, have-3)
advmod(found-5, _-4)
root(ROOT-0, found-5)
dobj(found-5, treasures-6)
vmod(treasures-6, buried-7)
amod(places-10, old-9)
prep_in(buried-7, places-10)
prep_like(places-10, that-12)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Antiquary))
      (VP (VBD did) (RB not)))
    (: --)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBZ is)
        (PP (RB only)
          (PP (IN in)
            (NP (DT a) (NN story)))
          (, ,) (RB not)
          (PP (IN in)
            (NP
              (NP (DT a) (JJ _) (JJ high) (NN story) (NN _) ('' ''))
              (PRN (-LRB- -LRB-)
                (SBAR (IN for)
                  (S
                    (NP (DT that))
                    (VP (VBD was)
                      (NP
                        (NP
                          (NP (NNP Willie) (POS 's))
                          (NN derivation))
                        (PP (IN of)
                          (NP (DT the) (NN word) (NN _) (NN history) (NN _)))))))
                (-RRB- -RRB-)))))))
    (. .)))

det(Antiquary-2, The-1)
nsubj(did-3, Antiquary-2)
root(ROOT-0, did-3)
neg(did-3, not-4)
nsubj(is-8, he-7)
conj_but(did-3, is-8)
advmod(is-8, only-9)
det(story-12, a-11)
prep_in(is-8, story-12)
neg(is-8, not-14)
det(_-20, a-16)
amod(_-20, _-17)
amod(_-20, high-18)
nn(_-20, story-19)
prep_in(is-8, _-20)
mark(derivation-28, for-23)
nsubj(derivation-28, that-24)
cop(derivation-28, was-25)
poss(derivation-28, Willie-26)
dep(_-20, derivation-28)
det(_-34, the-30)
nn(_-34, word-31)
nn(_-34, _-32)
nn(_-34, history-33)
prep_of(derivation-28, _-34)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN place))
    (VP (VBZ sounds)
      (ADJP (RB likely) (JJ enough)))
    (. .)))

det(place-3, The-2)
nsubj(sounds-4, place-3)
root(ROOT-0, sounds-4)
advmod(enough-6, likely-5)
acomp(sounds-4, enough-6)

(ROOT
  (FRAG
    (NP
      (NP (NNP Anyhow))
      (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (VP (VBZ 's)
            (NP
              (NP (DT the) (NN harm))
              (PP (IN in)
                (S
                  (VP (VBG trying)))))))))
    (. ?) ('' '')))

root(ROOT-0, Anyhow-1)
advmod(harm-6, where-3)
cop(harm-6, 's-4)
det(harm-6, the-5)
rcmod(Anyhow-1, harm-6)
prepc_in(harm-6, trying-8)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD were)
        (ADJP (DT both) (RB so) (JJ eager))))
    (: --)
    (S
      (SBAR
        (SBAR (IN for)
          (S
            (NP (NNP Sandy))
            (VP (VBD liked)
              (NP
                (NP (DT the) (NN idea))
                (PP (IN of)
                  (NP (NN digging))))
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS ruins))
                  (ADJP (RB much) (JJR better))
                  (PP (IN than)
                    (NP (DT the) (NN work)))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD was)
                        (ADVP (IN at))))))))))
        (: --)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBD set)
              (NP
                (ADVP (IN off)
                  (PP (IN at)
                    (NP (JJ full) (NN speed))))
                (DT the) (NN moment))
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBD were)
                    (ADVP (RB out))
                    (PP (IN of)
                      (NP (DT the) (NN shop)))))
                (, ,)
                (CC and)
                (S
                  (ADVP (RB never))
                  (VP (VBD slackened)
                    (SBAR (IN until)
                      (S
                        (NP (PRP they))
                        (VP (VBD stood)
                          (S
                            (VP
                              (VP (VBG panting)
                                (PP (IN by)
                                  (NP (DT the) (JJ anchored) (NN pickaxe)))
                                (, ,)
                                (PP (IN upon)
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (NP (NNP Spelman))
                                      (VP (VBD pounced))))))
                              (, ,)
                              (CC and)
                              (VP (VBG being)
                                (ADJP
                                  (ADJP (JJR stronger))
                                  (PP (IN than)
                                    (NP (NNP Willie)))
                                  (, ,)
                                  (CC and)
                                  (ADJP (RBR more) (VBN used)
                                    (PP (TO to)
                                      (NP (JJ hard) (NN work)))))))))))))))))
        (, ,))
      (VP (VBD had)
        (ADVP (RB soon))
        (VP (VBN dislodged)
          (NP
            (NP (PDT both) (DT the) (NNS stones))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD held)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(eager-5, They-1)
cop(eager-5, were-2)
det(eager-5, both-3)
advmod(eager-5, so-4)
root(ROOT-0, eager-5)
mark(liked-9, for-7)
nsubj(liked-9, Sandy-8)
csubj(dislodged-74, liked-9)
det(idea-11, the-10)
dobj(liked-9, idea-11)
prep_of(idea-11, digging-13)
det(ruins-16, the-15)
prep_in(liked-9, ruins-16)
advmod(better-18, much-17)
amod(ruins-16, better-18)
det(work-21, the-20)
prep_than(ruins-16, work-21)
nsubj(was-23, he-22)
rcmod(ruins-16, was-23)
advmod(was-23, at-24)
mark(set-28, that-26)
nsubj(set-28, they-27)
dep(liked-9, set-28)
advmod(moment-34, off-29)
amod(speed-32, full-31)
prep_at(off-29, speed-32)
det(moment-34, the-33)
dobj(set-28, moment-34)
nsubj(were-36, they-35)
nsubj(slackened-44, they-35)
dep(set-28, were-36)
det(shop-40, the-39)
prep_out_of(were-36, shop-40)
neg(slackened-44, never-43)
dep(set-28, slackened-44)
conj_and(were-36, slackened-44)
mark(stood-47, until-45)
nsubj(stood-47, they-46)
advcl(slackened-44, stood-47)
ccomp(stood-47, panting-48)
det(pickaxe-52, the-50)
amod(pickaxe-52, anchored-51)
prep_by(panting-48, pickaxe-52)
dobj(pounced-57, which-55)
nsubj(pounced-57, Spelman-56)
prepc_upon(panting-48, pounced-57)
auxpass(stronger-61, being-60)
cop(stronger-61, being-60)
ccomp(stood-47, stronger-61)
conj_and(panting-48, stronger-61)
prep_than(stronger-61, Willie-63)
advmod(used-67, more-66)
conj_and(panting-48, used-67)
conj_and(stronger-61, used-67)
amod(work-70, hard-69)
prep_to(used-67, work-70)
aux(dislodged-74, had-72)
advmod(dislodged-74, soon-73)
parataxis(eager-5, dislodged-74)
predet(stones-77, both-75)
det(stones-77, the-76)
dobj(dislodged-74, stones-77)
nsubj(held-79, stones-77)
rcmod(stones-77, held-79)
dobj(held-79, it-80)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (ADVP (RB so))
      (ADJP (RB much) (JJR larger))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (SBAR
        (SBAR (IN than)
          (S
            (NP (DT any) (NNP Willie))
            (VP (VBD had)
              (VP (VBN come)
                (PP (IN upon)
                  (ADVP (RB before)))))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBD had)
              (S
                (VP (TO to)
                  (VP (VB roll)
                    (NP (PRP them))
                    (PRT (RP out))
                    (PP (IN of)
                      (NP (DT the) (JJ little) (NN chamber)))
                    (, ,)
                    (PP (RB instead) (IN of)
                      (S
                        (VP (VBG lifting)
                          (NP (PRP them)))))))))))
        (: ;)
        (SBAR
          (WHPP (IN after)
            (WHNP (WDT which)))
          (S
            (NP (PRP they))
            (VP
              (VP (VBD got)
                (PRT (RP on))
                (ADVP (RBR better)))
              (, ,)
              (CC and)
              (VP (VBD had)
                (ADVP (RB soon))
                (VP (VBN piled)
                  (NP
                    (NP (DT a) (JJ good) (NN heap))
                    (PP (IN against)
                      (NP (DT the) (NN wall) (NN outside)))))))))))
    (. .)))

nsubj(larger-5, They-1)
cop(larger-5, were-2)
advmod(larger-5, so-3)
advmod(larger-5, much-4)
root(ROOT-0, larger-5)
advmod(larger-5, however-7)
mark(come-13, than-9)
det(Willie-11, any-10)
nsubj(come-13, Willie-11)
aux(come-13, had-12)
advcl(larger-5, come-13)
prep(come-13, upon-14)
pcomp(upon-14, before-15)
mark(had-19, that-17)
nsubj(had-19, they-18)
nsubj(roll-21, they-18)
dep(come-13, had-19)
aux(roll-21, to-20)
xcomp(had-19, roll-21)
dobj(roll-21, them-22)
det(chamber-27, the-25)
amod(chamber-27, little-26)
prep_out_of(roll-21, chamber-27)
prepc_instead_of(roll-21, lifting-31)
dobj(lifting-31, them-32)
prep_after(got-37, which-35)
nsubj(got-37, they-36)
nsubj(piled-44, they-36)
dep(come-13, got-37)
prt(got-37, on-38)
advmod(got-37, better-39)
aux(piled-44, had-42)
advmod(piled-44, soon-43)
dep(come-13, piled-44)
conj_and(got-37, piled-44)
det(heap-47, a-45)
amod(heap-47, good-46)
dobj(piled-44, heap-47)
det(outside-51, the-49)
nn(outside-51, wall-50)
prep_against(heap-47, outside-51)

(ROOT
  (S
    (SBAR (IN After)
      (S
        (NP (PRP they))
        (VP (VBD had)
          (VP (VBN had)
            (NP (PRP$ their) (NN tea))))))
    (, ,)
    (NP (PRP they))
    (VP
      (VP (VBD set)
        (S
          (VP (TO to)
            (VP (VB work)
              (ADVP (RB again))))))
      (, ,)
      (CC and)
      (VP (VBD worked)
        (SBAR (IN till)
          (S
            (NP (DT the) (NN twilight))
            (VP (VBD grew)
              (ADJP (JJ dark))
              (PP (IN about)
                (NP
                  (NP (PRP them))
                  (: --)
                  (SBAR
                    (WHPP (IN by)
                      (WHNP (WDT which) (NN time)))
                    (S
                      (NP (PRP they))
                      (VP (VBD had)
                        (VP (VBN got)
                          (NP (DT the) (NN heap))
                          (ADVP (RB down)
                            (PP (TO to)
                              (SBAR
                                (WHNP (WP what))
                                (S
                                  (VP (VBD seemed)
                                    (NP
                                      (NP (DT the) (JJ original) (NN level))
                                      (PP (IN of)
                                        (NP (DT the) (NN floor))))))))))))))))))))
    (. .)))

mark(had-4, After-1)
nsubj(had-4, they-2)
aux(had-4, had-3)
advcl(set-9, had-4)
poss(tea-6, their-5)
dobj(had-4, tea-6)
nsubj(set-9, they-8)
nsubj(work-11, they-8)
nsubj(worked-15, they-8)
root(ROOT-0, set-9)
aux(work-11, to-10)
xcomp(set-9, work-11)
advmod(work-11, again-12)
conj_and(set-9, worked-15)
mark(grew-19, till-16)
det(twilight-18, the-17)
nsubj(grew-19, twilight-18)
advcl(worked-15, grew-19)
acomp(grew-19, dark-20)
prep_about(grew-19, them-22)
det(time-26, them-22)
prep_by(got-29, time-26)
nsubj(got-29, they-27)
aux(got-29, had-28)
rcmod(them-22, got-29)
det(heap-31, the-30)
dobj(got-29, heap-31)
advmod(got-29, down-32)
nsubj(seemed-35, what-34)
prepc_to(down-32, seemed-35)
det(level-38, the-36)
amod(level-38, original-37)
xcomp(seemed-35, level-38)
det(floor-41, the-40)
prep_of(level-38, floor-41)

(ROOT
  (S
    (S
      (ADVP (RB Still))
      (NP (EX there))
      (VP (VBD were)
        (NP (NNS stones))
        (ADVP (RB below))))
    (, ,)
    (CC but)
    (S
      (S
        (SBAR
          (WHNP (WP what))
          (FRAG
            (PP (IN with)
              (NP (NN fatigue)
                (CC and)
                (NNS darkness)))))
        (, ,)
        (NP (PRP they))
        (VP (VBD were)
          (ADVP (RB now))
          (VP (VBN compelled)
            (S
              (VP (TO to)
                (VP (VB stop)))))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Sandy))
        (VP (VBD went)
          (NP (NN home))
          (, ,)
          (PP (IN after)
            (S
              (VP (VBG promising)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB come)
                        (ADVP
                          (ADVP (RB as) (RB early))
                          (SBAR (IN as)
                            (S
                              (NP (PRP he))
                              (VP (MD could)))))
                        (PP (IN in)
                          (NP (DT the) (NN morning))))
                      (CC and)
                      (VP (VB call)
                        (NP
                          (NP (NNP Willie))
                          (, ,)
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBD was)
                                (S
                                  (VP (TO to)
                                    (VP (VB leave)
                                      (NP
                                        (NP (DT the) (NN end))
                                        (PP (IN of)
                                          (NP (DT a) (NN string))))
                                      (S
                                        (VP (VBG hanging)
                                          (PRT (RP out))
                                          (PP (IN of)
                                            (NP
                                              (NP (DT the) (JJ staircase) (NN window))
                                              (, ,)
                                              (SBAR (WP$ whose)
                                                (S
                                                  (NP (JJ other) (NN end))
                                                  (VP (MD should)
                                                    (VP
                                                      (VP (VB pass)
                                                        (PP (IN through)
                                                          (NP
                                                            (NP (DT the) (NN keyhole))
                                                            (PP (IN of)
                                                              (NP (PRP$ his) (NN door))))))
                                                      (CC and)
                                                      (VP (VB be)
                                                        (VP (VBN tied)
                                                          (PP (TO to)
                                                            (NP (PRP$ his) (NN wrist))))))))))))))))))))))))))))))
    (. .)))

advmod(were-3, Still-1)
expl(were-3, there-2)
root(ROOT-0, were-3)
nsubj(were-3, stones-4)
advmod(were-3, below-5)
dep(with-9, what-8)
advcl(compelled-17, with-9)
pobj(with-9, fatigue-10)
pobj(with-9, darkness-12)
conj_and(fatigue-10, darkness-12)
nsubjpass(compelled-17, they-14)
nsubj(stop-19, they-14)
auxpass(compelled-17, were-15)
advmod(compelled-17, now-16)
conj_but(were-3, compelled-17)
aux(stop-19, to-18)
xcomp(compelled-17, stop-19)
nsubj(went-23, Sandy-22)
conj_but(were-3, went-23)
conj_and(compelled-17, went-23)
dobj(went-23, home-24)
prepc_after(went-23, promising-27)
aux(come-29, to-28)
xcomp(promising-27, come-29)
advmod(early-31, as-30)
advmod(come-29, early-31)
mark(could-34, as-32)
nsubj(could-34, he-33)
advcl(early-31, could-34)
ccomp(early-31, could-34)
det(morning-37, the-36)
prep_in(come-29, morning-37)
xcomp(promising-27, call-39)
conj_and(come-29, call-39)
dobj(call-39, Willie-40)
nsubj(was-43, Willie-40)
nsubj(leave-45, Willie-40)
rcmod(Willie-40, was-43)
aux(leave-45, to-44)
xcomp(was-43, leave-45)
det(end-47, the-46)
dobj(leave-45, end-47)
det(string-50, a-49)
prep_of(end-47, string-50)
xcomp(leave-45, hanging-51)
det(window-56, the-54)
amod(window-56, staircase-55)
prep_out_of(hanging-51, window-56)
dep(pass-62, whose-58)
amod(end-60, other-59)
nsubj(pass-62, end-60)
nsubjpass(tied-71, end-60)
aux(pass-62, should-61)
dep(window-56, pass-62)
det(keyhole-65, the-64)
prep_through(pass-62, keyhole-65)
poss(door-68, his-67)
prep_of(keyhole-65, door-68)
auxpass(tied-71, be-70)
dep(window-56, tied-71)
conj_and(pass-62, tied-71)
poss(wrist-74, his-73)
prep_to(tied-71, wrist-74)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD seemed)
        (S
          (VP (TO to)
            (VP (VB have)
              (ADVP (RB hardly))
              (VP (VBN been)
                (PP (IN in)
                  (NP
                    (NP
                      (NP (NN bed))
                      (NP (DT an) (NN hour)))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP he))
                        (VP (VBD woke)
                          (PP (IN with)
                            (NP (PRP$ his) (NN arm)))
                          (PP (IN at)
                            (NP (JJ full) (NN length))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (VBG pulling))
      (VP (VBG going)
        (PRT (RP on))
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB pull)
                (NP (PRP him))
                (PRT (RP out))
                (PP (IN of)
                  (NP (NN bed)))))))))
    (. .)))

nsubj(seemed-2, He-1)
nsubj(been-6, He-1)
root(ROOT-0, seemed-2)
aux(been-6, to-3)
aux(been-6, have-4)
advmod(been-6, hardly-5)
xcomp(seemed-2, been-6)
prep_in(been-6, bed-8)
tmod(woke-14, bed-8)
det(hour-10, an-9)
dep(bed-8, hour-10)
advmod(woke-14, when-12)
nsubj(woke-14, he-13)
rcmod(bed-8, woke-14)
poss(arm-17, his-16)
prep_with(woke-14, arm-17)
amod(length-20, full-19)
prep_at(woke-14, length-20)
nsubj(going-25, the-23)
amod(the-23, pulling-24)
conj_and(seemed-2, going-25)
prt(going-25, on-26)
advmod(pull-31, as-27)
mark(pull-31, if-28)
nsubj(pull-31, it-29)
aux(pull-31, would-30)
advcl(going-25, pull-31)
dobj(pull-31, him-32)
prep_out_of(pull-31, bed-35)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD tugged)
        (ADVP (RB again))
        (PP (IN in)
          (NP (NN reply))))
      (, ,)
      (CC and)
      (VP (VBD jumped)
        (PRT (RP out))))
    (. .)))

nsubj(tugged-2, He-1)
nsubj(jumped-8, He-1)
root(ROOT-0, tugged-2)
advmod(tugged-2, again-3)
prep_in(tugged-2, reply-5)
conj_and(tugged-2, jumped-8)
prt(jumped-8, out-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP
          (NP
            (NP (DT a) (JJ lovely) (NN summer))
            (NP (NN morning)))
          (: --)
          (NP
            (NP (DT the) (NN sun))
            (PP
              (NP (DT a) (JJ few) (NNS yards))
              (IN up)
              (NP (DT the) (NN sky))))
          (: ;)
          (NP
            (NP (DT the) (NN grass) (NN glittering))
            (PP (IN with)
              (NP (NN dew)))))
        (: ;)
        (NP
          (NP (DT the) (NNS birds))
          (UCP
            (VP (VBG singing)
              (PP
                (PP (IN as)
                  (NP
                    (SBAR (IN if)
                      (S
                        (NP (PRP they))
                        (VP
                          (VP (VBD were)
                            (VP (VBG singing)
                              (NP (PRP$ their) (JJ first))))
                          (CC and)
                          (VP (MD would)
                            (VP (VB sing)
                              (NP (PRP$ their) (JJ last)))))))
                    (: ;)
                    (NP (DT the) (JJ whole) (NN air))))
                (, ,) (RB even) (IN in)
                (NP
                  (NP (PRP$ his) (JJ little) (NN room))
                  (, ,)
                  (VP (VBN filled)
                    (PP (IN with)
                      (NP
                        (NP (DT a) (JJ cool) (NN odour))
                        (PP (RB as) (IN of)
                          (NP (JJ blessed) (NNS thoughts))))))
                  (, ,))))
            (CC and)
            (ADJP
              (ADJP (RB just) (JJ warm))
              (RB enough)
              (S
                (VP (TO to)
                  (VP (VB let)
                    (S
                      (NP (PRP him))
                      (VP (VB know)
                        (SBAR (IN that)
                          (S
                            (NP (DT the) (NN noontide))
                            (VP (MD would)
                              (VP (VB be)
                                (ADJP (JJ hot))))))))))))))))
    (. .)))

nsubj(summer-5, It-1)
cop(summer-5, was-2)
det(summer-5, a-3)
amod(summer-5, lovely-4)
root(ROOT-0, summer-5)
dep(summer-5, morning-6)
det(sun-9, the-8)
dep(summer-5, sun-9)
det(yards-12, a-10)
amod(yards-12, few-11)
npadvmod(sun-9, yards-12)
det(sky-15, the-14)
prep_up(sun-9, sky-15)
det(glittering-19, the-17)
nn(glittering-19, grass-18)
dep(summer-5, glittering-19)
prep_with(glittering-19, dew-21)
det(birds-24, the-23)
dep(summer-5, birds-24)
dep(birds-24, singing-25)
mark(singing-30, if-27)
nsubj(singing-30, they-28)
nsubj(sing-35, they-28)
aux(singing-30, were-29)
dep(air-41, singing-30)
poss(first-32, their-31)
dobj(singing-30, first-32)
aux(sing-35, would-34)
conj_and(singing-30, sing-35)
dep(air-41, sing-35)
poss(last-37, their-36)
dobj(sing-35, last-37)
det(air-41, the-39)
amod(air-41, whole-40)
prep_as(singing-25, air-41)
advmod(singing-25, even-43)
poss(room-47, his-45)
amod(room-47, little-46)
prep_in(singing-25, room-47)
vmod(room-47, filled-49)
det(odour-53, a-51)
amod(odour-53, cool-52)
prep_with(filled-49, odour-53)
amod(thoughts-57, blessed-56)
prep_as_of(odour-53, thoughts-57)
advmod(warm-61, just-60)
dep(birds-24, warm-61)
conj_and(singing-25, warm-61)
advmod(warm-61, enough-62)
aux(let-64, to-63)
xcomp(warm-61, let-64)
nsubj(know-66, him-65)
ccomp(let-64, know-66)
mark(hot-72, that-67)
det(noontide-69, the-68)
nsubj(hot-72, noontide-69)
aux(hot-72, would-70)
cop(hot-72, be-71)
ccomp(know-66, hot-72)

(ROOT
  (S (CC And)
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (NNP Sandy))
        (VP (VBG waiting)
          (PP (IN in)
            (NP (DT the) (NN street)))
          (S
            (VP (TO to)
              (VP (VB help)
                (S
                  (NP (PRP him))
                  (VP (VB dig)
                    (PP (IN for)
                      (NP (DT the) (NN treasure)))))))))))
    (. !)))

cc(was-3, And-1)
expl(was-3, there-2)
root(ROOT-0, was-3)
nsubj(was-3, Sandy-4)
vmod(Sandy-4, waiting-5)
det(street-8, the-7)
prep_in(waiting-5, street-8)
aux(help-10, to-9)
xcomp(waiting-5, help-10)
nsubj(dig-12, him-11)
ccomp(help-10, dig-12)
det(treasure-15, the-14)
prep_for(dig-12, treasure-15)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ few) (NNS minutes)))
    (NP (PRP he))
    (VP
      (VP (VBD had)
        (VP (VBN opened)
          (NP (DT the) (NN street) (NN door))))
      (CC and)
      (VP (VBD admitted)
        (NP (PRP him))))
    (. .)))

det(minutes-4, a-2)
amod(minutes-4, few-3)
prep_in(opened-7, minutes-4)
nsubj(opened-7, he-5)
nsubj(admitted-12, he-5)
aux(opened-7, had-6)
root(ROOT-0, opened-7)
det(door-10, the-8)
nn(door-10, street-9)
dobj(opened-7, door-10)
conj_and(opened-7, admitted-12)
dobj(admitted-12, him-13)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD went)
      (ADVP (RB straight))
      (PP (TO to)
        (NP
          (NP (DT the) (NN scene))
          (PP (IN of)
            (NP (PRP$ their) (NN labour))))))
    (. .)))

nsubj(went-2, They-1)
root(ROOT-0, went-2)
advmod(went-2, straight-3)
det(scene-6, the-5)
prep_to(went-2, scene-6)
poss(labour-9, their-8)
prep_of(scene-6, labour-9)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (VP (VBN got)
          (PRT (RP out))
          (NP (DT a) (JJ few) (JJR more) (NNS stones)))))
    (, ,)
    (NP (PRP they))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB fancy)
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBD heard)
                  (SBAR
                    (S
                      (NP
                        (NP (DT a) (JJ curious) (NN sound))
                        (, ,)
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (NP (PRP they))
                            (VP (VBD agreed)))))
                      (VP (VBD was)
                        (ADJP
                          (ADJP (RBR more) (JJ like))
                          (SBAR (IN that)
                            (S
                              (PP (IN of)
                                (S
                                  (VP (VBG running)
                                    (NP (NN water))
                                    (PP (IN than)
                                      (NP (NN anything) (RB else))))))
                              (NP (PRP they))
                              (VP (MD could)
                                (VP (VB think)
                                  (PP (IN of)))))))))))))))))
    (. .)))

aux(got-2, Having-1)
vmod(began-10, got-2)
prt(got-2, out-3)
det(stones-7, a-4)
amod(stones-7, few-5)
amod(stones-7, more-6)
dobj(got-2, stones-7)
nsubj(began-10, they-9)
nsubj(fancy-12, they-9)
root(ROOT-0, began-10)
aux(fancy-12, to-11)
xcomp(began-10, fancy-12)
nsubj(heard-14, they-13)
ccomp(fancy-12, heard-14)
det(sound-17, a-15)
amod(sound-17, curious-16)
dobj(agreed-21, sound-17)
nsubj(like-24, sound-17)
nsubj(agreed-21, they-20)
rcmod(sound-17, agreed-21)
cop(like-24, was-22)
advmod(like-24, more-23)
ccomp(heard-14, like-24)
mark(think-34, that-25)
prepc_of(think-34, running-27)
dobj(running-27, water-28)
prep_than(running-27, anything-30)
advmod(anything-30, else-31)
nsubj(think-34, they-32)
aux(think-34, could-33)
ccomp(like-24, think-34)
prep(think-34, of-35)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (PP (IN except)
      (NP
        (NP (DT a) (NN well))
        (PP (IN in)
          (NP (DT the) (NN street)))))
    (, ,)
    (ADVP (RB just))
    (PP (IN before)
      (NP (DT the) (NN cottage)))
    (, ,)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (DT no) (NN water))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBD knew)
                (PP (IN of)
                  (NP (JJ much) (NNS nearer)))
                (PP (IN than)
                  (NP (DT the) (NN river)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD wondered)
        (NP (DT a) (JJ good) (NN deal))))
    (. .)))

advmod(was-16, Now-1)
det(well-5, a-4)
prep_except(was-16, well-5)
det(street-8, the-7)
prep_in(well-5, street-8)
advmod(was-16, just-10)
det(cottage-13, the-12)
prep_before(was-16, cottage-13)
expl(was-16, there-15)
root(ROOT-0, was-16)
neg(water-18, no-17)
nsubj(was-16, water-18)
nsubj(knew-20, they-19)
rcmod(water-18, knew-20)
amod(nearer-23, much-22)
prep_of(knew-20, nearer-23)
det(river-26, the-25)
prep_than(knew-20, river-26)
nsubj(wondered-30, they-29)
conj_and(was-16, wondered-30)
det(deal-33, a-31)
amod(deal-33, good-32)
dobj(wondered-30, deal-33)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (NP
      (NP (NNP Sandy) (POS 's))
      (NN pickaxe))
    (VP (VBD got)
      (SBAR
        (S
          (NP
            (NP (VB hold))
            (PP (IN of)
              (NP
                (NP (DT a) (NN stone))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP he))
                    (VP (MD could) (RB not)
                      (VP (VB move)))))))
            (, ,))
          (VP (VBP do)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP he))
                (VP (MD would))))))))
    (. .)))

prep_at(got-6, length-2)
poss(pickaxe-5, Sandy-3)
nsubj(got-6, pickaxe-5)
root(ROOT-0, got-6)
nsubj(do-17, hold-7)
det(stone-10, a-9)
prep_of(hold-7, stone-10)
dobj(move-15, stone-10)
nsubj(move-15, he-12)
aux(move-15, could-13)
neg(move-15, not-14)
rcmod(stone-10, move-15)
ccomp(got-6, do-17)
dobj(would-20, what-18)
nsubj(would-20, he-19)
ccomp(do-17, would-20)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD tried)
        (NP (DT another)))
      (, ,)
      (CC and)
      (VP (VBD succeeded))
      (, ,)
      (CC but)
      (ADVP (RB soon))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB suspect)
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBD was)
                    (NP (DT some) (NN masonry))
                    (ADVP (RB there))))))))))
    (. .)))

nsubj(tried-2, He-1)
nsubj(succeeded-6, He-1)
nsubj(began-10, He-1)
nsubj(suspect-12, He-1)
root(ROOT-0, tried-2)
dobj(tried-2, another-3)
conj_and(tried-2, succeeded-6)
advmod(began-10, soon-9)
conj_but(tried-2, began-10)
aux(suspect-12, to-11)
xcomp(began-10, suspect-12)
mark(was-15, that-13)
expl(was-15, there-14)
ccomp(suspect-12, was-15)
det(masonry-17, some-16)
nsubj(was-15, masonry-17)
advmod(was-15, there-18)

(ROOT
  (S
    (S
      (VP (VBG Contenting)
        (NP (PRP himself))
        (ADVP (RB therefore))
        (PP (IN with)
          (S
            (VP (VBG clearing)
              (PRT (RP out))
              (NP (RB only) (DT the) (JJ loose) (NNS stones)))))))
    (, ,)
    (NP (PRP he))
    (ADVP (RB soon))
    (VP (VBD found)
      (ADJP (RB plainly) (JJ enough))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBD was)
            (VP (VBG working)
              (PP (IN in)
                (NP (DT a) (JJ narrow) (NN space)))
              (, ,)
              (PP (IN around)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD was)
                      (NP
                        (NP (DT a) (JJ circular) (NN wall))
                        (PP (IN of)
                          (NP (JJ solid) (NN stone)
                            (CC and)
                            (NN lime)))))))))))))
    (. .)))

vmod(found-14, Contenting-1)
dobj(Contenting-1, himself-2)
advmod(Contenting-1, therefore-3)
prepc_with(Contenting-1, clearing-5)
prt(clearing-5, out-6)
advmod(stones-10, only-7)
det(stones-10, the-8)
amod(stones-10, loose-9)
dobj(clearing-5, stones-10)
nsubj(found-14, he-12)
advmod(found-14, soon-13)
root(ROOT-0, found-14)
advmod(enough-16, plainly-15)
acomp(found-14, enough-16)
mark(working-20, that-17)
nsubj(working-20, he-18)
aux(working-20, was-19)
ccomp(found-14, working-20)
det(space-24, a-22)
amod(space-24, narrow-23)
prep_in(working-20, space-24)
nsubj(wall-31, which-27)
cop(wall-31, was-28)
det(wall-31, a-29)
amod(wall-31, circular-30)
prepc_around(working-20, wall-31)
amod(stone-34, solid-33)
prep_of(wall-31, stone-34)
prep_of(wall-31, lime-36)
conj_and(stone-34, lime-36)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN sound))
        (PP (IN of)
          (NP (JJ running) (NN water))))
      (VP (VBD was)
        (ADVP (RB now))
        (ADJP (JJ clear) (RB enough))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN earth))
        (PP (IN in)
          (NP (DT the) (NN hole))))
      (VP (VBD was)
        (ADJP (RB very) (JJ damp))))
    (. .)))

det(sound-2, The-1)
nsubj(clear-8, sound-2)
amod(water-5, running-4)
prep_of(sound-2, water-5)
cop(clear-8, was-6)
advmod(clear-8, now-7)
root(ROOT-0, clear-8)
advmod(clear-8, enough-9)
det(earth-13, the-12)
nsubj(damp-19, earth-13)
det(hole-16, the-15)
prep_in(earth-13, hole-16)
cop(damp-19, was-17)
advmod(damp-19, very-18)
conj_and(clear-8, damp-19)

(ROOT
  (S
    (NP (NNP Sandy))
    (VP (VBD had)
      (ADVP (RB now))
      (VP (VBN got)
        (PRT (RP down))
        (PP
          (NP
            (QP (CD three)
              (CC or)
              (CD four))
            (NNS feet))
          (IN below)
          (NP (DT the) (NN level)))))
    (. .)))

nsubj(got-4, Sandy-1)
aux(got-4, had-2)
advmod(got-4, now-3)
root(ROOT-0, got-4)
prt(got-4, down-5)
num(feet-9, three-6)
conj_or(three-6, four-8)
num(feet-9, four-8)
npadvmod(got-4, feet-9)
det(level-12, the-11)
prep_below(got-4, level-12)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP (DT an) (JJ old) (NN well))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(well-6, It-2)
cop(well-6, 's-3)
det(well-6, an-4)
amod(well-6, old-5)
ccomp(said-10, well-6)
nsubj(said-10, he-9)
root(ROOT-0, said-10)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (MD can)
      (VP (VB be)
        (NP
          (NP (DT no) (NN doubt))
          (PP (IN of)
            (NP (PRP it))))))
    (. .) ('' '')))

expl(doubt-6, There-2)
aux(doubt-6, can-3)
cop(doubt-6, be-4)
neg(doubt-6, no-5)
root(ROOT-0, doubt-6)
prep_of(doubt-6, it-8)

(ROOT
  (S (`` ``)
    (ADVP (RB Does))
    (NP (PRP it))
    (VP (VBP smell)
      (ADJP (JJ bad)))
    (. ?) ('' '')))

advmod(smell-4, Does-2)
nsubj(smell-4, it-3)
root(ROOT-0, smell-4)
acomp(smell-4, bad-5)

(ROOT
  (S
    (S
      (VP (VBN asked)
        (NP (NNP Willie))
        (, ,)
        (S
          (VP (VBG peeping)
            (PRT (RP down))))))
    (VP (VBN disappointed))
    (. .)))

csubj(disappointed-6, asked-1)
dobj(asked-1, Willie-2)
vmod(asked-1, peeping-4)
prt(peeping-4, down-5)
root(ROOT-0, disappointed-6)

(ROOT
  (SINV (`` ``)
    (FRAG
      (NP (RB Not) (DT a) (NN bit)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Sandy))
    (. .)))

neg(bit-4, Not-2)
det(bit-4, a-3)
dep(answered-7, bit-4)
root(ROOT-0, answered-7)
nsubj(answered-7, Sandy-8)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP it))
      (VP (VBZ 's) (RB not)
        (ADJP (JJ stagnant))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

advmod(stagnant-6, Then-2)
nsubj(stagnant-6, it-3)
cop(stagnant-6, 's-4)
neg(stagnant-6, not-5)
ccomp(said-9, stagnant-6)
root(ROOT-0, said-9)
nsubj(said-9, Willie-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (MD might)
        (VP (VB have)
          (VP (VBN told)
            (NP (DT that))
            (PP (IN by)
              (NP (PRP$ your) (NNS ears)))
            (PP (IN without)
              (S
                (VP (VBG troubling)
                  (NP (PRP$ your) (NN nose)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Sandy))
    (. .)))

nsubj(told-5, You-2)
aux(told-5, might-3)
aux(told-5, have-4)
ccomp(said-16, told-5)
dobj(told-5, that-6)
poss(ears-9, your-8)
prep_by(told-5, ears-9)
prepc_without(told-5, troubling-11)
poss(nose-13, your-12)
dobj(troubling-11, nose-13)
root(ROOT-0, said-16)
nsubj(said-16, Sandy-17)

(ROOT
  (S (`` ``)
    (S
      (VP (VBD Did) (RB n't)
        (NP (PRP you))))
    (VP (VBP hear)
      (S
        (NP (PRP it))
        (VP (VBG running))))
    (. ?) ('' '')))

csubj(hear-5, Did-2)
neg(Did-2, n't-3)
dobj(Did-2, you-4)
root(ROOT-0, hear-5)
nsubj(running-7, it-6)
dep(hear-5, running-7)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP it))
      (VP (VB be)
        (VP (VBG running)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (VP (VBN buried)
                  (PRT (RP away))
                  (ADVP (RB down) (RB there)))))))))
    (. ?) ('' '')))

advmod(running-6, How-2)
aux(running-6, can-3)
nsubj(running-6, it-4)
aux(running-6, be-5)
root(ROOT-0, running-6)
advmod(buried-10, when-7)
nsubjpass(buried-10, it-8)
auxpass(buried-10, 's-9)
advcl(running-6, buried-10)
prt(buried-10, away-11)
advmod(there-13, down-12)
advmod(buried-10, there-13)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP it))
      (VP (VB make)
        (NP (DT a) (NN noise))
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBZ is) (RB n't)
              (VP (VBG running)))))))
    (. ?) ('' '')))

advmod(make-5, How-2)
aux(make-5, can-3)
nsubj(make-5, it-4)
root(ROOT-0, make-5)
det(noise-7, a-6)
dobj(make-5, noise-7)
mark(running-12, if-8)
nsubj(running-12, it-9)
aux(running-12, is-10)
neg(running-12, n't-11)
advcl(make-5, running-12)

(ROOT
  (NP
    (NP
      (NP (NN retorted))
      (NP (NNP Sandy)))
    (: --)
    (SBAR
      (WHPP (TO to)
        (WHNP (WDT which)))
      (S
        (NP (NN question) (NNS Willie))
        (VP (VBD attempted)
          (NP (DT no) (NN reply)))))
    (. .)))

root(ROOT-0, retorted-1)
prep_to(attempted-8, retorted-1)
appos(retorted-1, Sandy-2)
nn(Willie-7, question-6)
nsubj(attempted-8, Willie-7)
rcmod(retorted-1, attempted-8)
neg(reply-10, no-9)
dobj(attempted-8, reply-10)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADVP (RB now))
        (NP (JJ serious) (NN work)
          (S
            (VP (TO to)
              (VP (VB get)
                (NP (DT the) (NNS stones))
                (PRT (RP up))))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP
              (NP (NNP Sandy) (POS 's))
              (NN head))
            (ADVP (RB only))
            (VP (VBD was)
              (PP (IN above)
                (NP
                  (NP (DT the) (NN level))
                  (PP (IN of)
                    (NP (DT the) (NN ground))))))))))
    (: ;)
    (S
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP
            (NP (DT all))
            (SBAR
              (S
                (NP (PRP he))
                (VP (MD could)
                  (VP (VB do)
                    (S
                      (VP (TO to)
                        (VP (VB lift)
                          (NP
                            (NP (DT some))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (JJR larger) (NNS ones))
                                (PP (RB out) (IN of)
                                  (NP (DT the) (NN hole))))))))))))))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Willie))
        (VP (VBD saw)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (MD must)
                (VP (VB contrive)
                  (S
                    (VP (TO to)
                      (VP (VB give)
                        (NP (PRP him))
                        (NP (DT some) (NN help))))))))))))
    (. .)))

nsubj(work-5, It-1)
cop(work-5, was-2)
advmod(work-5, now-3)
amod(work-5, serious-4)
root(ROOT-0, work-5)
aux(get-7, to-6)
vmod(work-5, get-7)
det(stones-9, the-8)
dobj(get-7, stones-9)
prt(get-7, up-10)
mark(was-17, for-12)
poss(head-15, Sandy-13)
nsubj(was-17, head-15)
advmod(was-17, only-16)
advcl(work-5, was-17)
det(level-20, the-19)
prep_above(was-17, level-20)
det(ground-23, the-22)
prep_of(level-20, ground-23)
nsubj(all-27, it-25)
cop(all-27, was-26)
parataxis(work-5, all-27)
nsubj(do-30, he-28)
nsubj(lift-32, he-28)
aux(do-30, could-29)
rcmod(all-27, do-30)
aux(lift-32, to-31)
xcomp(do-30, lift-32)
dobj(lift-32, some-33)
det(ones-37, the-35)
amod(ones-37, larger-36)
prep_of(some-33, ones-37)
det(hole-41, the-40)
prep_out_of(ones-37, hole-41)
nsubj(saw-45, Willie-44)
parataxis(work-5, saw-45)
conj_and(all-27, saw-45)
mark(contrive-49, that-46)
nsubj(contrive-49, he-47)
nsubj(give-51, he-47)
aux(contrive-49, must-48)
ccomp(saw-45, contrive-49)
aux(give-51, to-50)
xcomp(contrive-49, give-51)
iobj(give-51, him-52)
det(help-54, some-53)
dobj(give-51, help-54)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD ran)
        (ADVP (RB therefore))
        (PP (TO to)
          (NP (DT the) (NN house))))
      (, ,)
      (CC and)
      (VP (VBD brought)
        (NP
          (NP (DT a) (NN rope))
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN seen)
                  (S
                    (VP (VBG lying)
                      (PRT (RP about)))))))))))
    (. .)))

nsubj(ran-2, He-1)
nsubj(brought-9, He-1)
root(ROOT-0, ran-2)
advmod(ran-2, therefore-3)
det(house-6, the-5)
prep_to(ran-2, house-6)
conj_and(ran-2, brought-9)
det(rope-11, a-10)
dobj(brought-9, rope-11)
dobj(seen-15, rope-11)
nsubj(seen-15, he-13)
aux(seen-15, had-14)
rcmod(rope-11, seen-15)
xcomp(seen-15, lying-16)
prt(lying-16, about-17)

(ROOT
  (S
    (S
      (NP
        (NP (CD One) (NN end))
        (PP (IN of)
          (NP (PRP it))))
      (NP (NNP Sandy))
      (VP (VBD tied)
        (NP
          (NP (NN round))
          (SBAR
            (WHNP (WDT whatever) (NN stone))
            (S
              (VP (VBD was)
                (ADJP (RB too) (JJ heavy))
                (PP (IN for)
                  (NP (PRP him)))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNP Willie))
        (, ,)
        (VP (VBG laying)
          (NP
            (NP (NN hold))
            (PP (IN of)
              (NP (DT the) (JJ other)))))
        (, ,))
      (VP (VBD lifted)
        (PRT (RP along))
        (PP (IN with)
          (NP (PRP him)))))
    (. .)))

num(end-2, One-1)
nsubj(tied-6, end-2)
prep_of(end-2, it-4)
nsubj(tied-6, Sandy-5)
root(ROOT-0, tied-6)
dobj(tied-6, round-7)
det(stone-9, whatever-8)
nsubj(heavy-12, stone-9)
cop(heavy-12, was-10)
advmod(heavy-12, too-11)
rcmod(round-7, heavy-12)
prep_for(heavy-12, him-14)
nsubj(lifted-25, Willie-17)
vmod(Willie-17, laying-19)
dobj(laying-19, hold-20)
det(other-23, the-22)
prep_of(hold-20, other-23)
conj_and(tied-6, lifted-25)
prep_along_with(lifted-25, him-28)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD got)
        (PRT (RP on))
        (ADVP (RBR faster))
        (ADVP (RB now))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP (DT a) (JJ few) (NNS minutes)))
      (NP (NNP Sandy))
      (VP (VBD exclaimed) (: --) (`` ``)
        (S
          (ADVP (RB Here))
          (NP (PRP it))
          (VP (VBZ is)
            (PP (IN at)
              (NP (JJ last)))))))
    (. !) ('' '')))

nsubj(got-2, They-1)
root(ROOT-0, got-2)
prt(got-2, on-3)
advmod(got-2, faster-4)
advmod(got-2, now-5)
det(minutes-11, a-9)
amod(minutes-11, few-10)
prep_in(exclaimed-13, minutes-11)
nsubj(exclaimed-13, Sandy-12)
conj_and(got-2, exclaimed-13)
advmod(is-18, Here-16)
nsubj(is-18, it-17)
ccomp(exclaimed-13, is-18)
prep_at(is-18, last-20)

(ROOT
  (S (`` ``)
    (NP (NNP The))
    (VP (VBZ treasure))
    (. ?) ('' '')))

nsubj(treasure-3, The-2)
root(ROOT-0, treasure-3)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Willie-2)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (NP (NN jolly))
    (. !) ('' '')))

discourse(jolly-4, Oh-2)
root(ROOT-0, jolly-4)

(ROOT
  (S
    (NP (NNP Sandy))
    (VP (VBP burst)
      (PRT (RP out))
      (S
        (S
          (VP (VBG laughing)))
        (, ,)
        (CC and)
        (S
          (VP (VBG shouted) (: --) (`` ``)
            (NP (DT The) (NN water))))))
    (. !) ('' '')))

nsubj(burst-2, Sandy-1)
root(ROOT-0, burst-2)
prt(burst-2, out-3)
dep(burst-2, laughing-4)
dep(burst-2, shouted-7)
conj_and(laughing-4, shouted-7)
det(water-11, The-10)
dobj(shouted-7, water-11)

(ROOT
  (S (`` ``)
    (VP (VB Bother)
      (NP (DT the) (NN water)))
    (. !) ('' '')))

root(ROOT-0, Bother-2)
det(water-4, the-3)
dobj(Bother-2, water-4)

(ROOT
  (S
    (VP (VB growled)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, growled-1)
dobj(growled-1, Willie-2)

(ROOT
  (S (`` ``)
    (CC But)
    (S
      (S
        (VP (VB go)
          (PRT (RP on))))
      (, ,)
      (NP
        (NP (NNP Sandy))
        (: ;)
        (NP (DT the) (NN iron) (NN chest)))
      (VP (MD may)
        (VP (VB be)
          (PP (IN at)
            (NP
              (NP (DT the) (NN bottom))
              (PP (IN of)
                (NP (DT the) (NN water))))))))
    (, ,)
    (S
      (NP (PRP you))
      (VP (VBP know)))
    (. .) ('' '')))

cc(be-12, But-2)
ccomp(be-12, go-3)
prt(go-3, on-4)
nsubj(be-12, Sandy-6)
det(chest-10, the-8)
nn(chest-10, iron-9)
dep(Sandy-6, chest-10)
aux(be-12, may-11)
root(ROOT-0, be-12)
det(bottom-15, the-14)
prep_at(be-12, bottom-15)
det(water-18, the-17)
prep_of(bottom-15, water-18)
nsubj(know-21, you-20)
parataxis(be-12, know-21)

(ROOT
  (FRAG
    (ADVP (`` ``) (RB All)
      (ADVP
        (ADVP (RB very) (RB well))
        (PP (IN for)
          (NP (PRP you))
          (ADVP (RB up)))))
    (ADVP (RB there) (. !) ('' ''))))

advmod(well-4, All-2)
advmod(well-4, very-3)
root(ROOT-0, well-4)
prep_for(well-4, you-6)
advmod(well-4, up-7)
dep(well-4, there-8)

(ROOT
  (S
    (VP (VB retorted)
      (NP (NNP Sandy)))
    (. .)))

root(ROOT-0, retorted-1)
dobj(retorted-1, Sandy-2)

(ROOT
  (S (`` ``)
    (CC But)
    (SBAR (IN though)
      (S
        (NP (PRP I))
        (VP (MD can)
          (VP (VB get)
            (NP (DT the) (NNS stones))
            (PRT (RP out))))))
    (, ,)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB get)
        (NP (DT the) (NN water))
        (PRT (RP out))))
    (. .)))

cc(get-14, But-2)
mark(get-6, though-3)
nsubj(get-6, I-4)
aux(get-6, can-5)
advcl(get-14, get-6)
det(stones-8, the-7)
dobj(get-6, stones-8)
prt(get-6, out-9)
nsubj(get-14, I-11)
aux(get-14, ca-12)
neg(get-14, n't-13)
root(ROOT-0, get-14)
det(water-16, the-15)
dobj(get-14, water-16)
prt(get-14, out-17)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP 've)
      (NP
        (NP (DT no) (NN notion))
        (PP (IN of)
          (NP (NN diving)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (EX there))
            (VP (VBZ 's)
              (ADJP (RB pretty) (JJ sure))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (NN nothing)
                      (PP (TO to)
                        (NP (NN dive))))
                    (PP (IN for))))))))))
    (. .)))

cc('ve-3, And-1)
nsubj('ve-3, I-2)
root(ROOT-0, 've-3)
neg(notion-5, no-4)
dobj('ve-3, notion-5)
prep_for(nothing-15, notion-5)
prep_of(notion-5, diving-7)
advmod('s-10, where-8)
expl('s-10, there-9)
rcmod(notion-5, 's-10)
advmod(sure-12, pretty-11)
acomp('s-10, sure-12)
aux(nothing-15, to-13)
cop(nothing-15, be-14)
xcomp('s-10, nothing-15)
prep_to(nothing-15, dive-17)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (NP (DT a) (NN body))
    (VP (MD ca) (RB n't)
      (VP (VB dive)
        (PP (IN in)
          (NP
            (NP (DT a) (NN stone) (NN pipe))
            (PP (IN like)
              (NP (DT this)))))))
    (. .)))

advmod(dive-7, Besides-1)
det(body-4, a-3)
nsubj(dive-7, body-4)
aux(dive-7, ca-5)
neg(dive-7, n't-6)
root(ROOT-0, dive-7)
det(pipe-11, a-9)
nn(pipe-11, stone-10)
prep_in(dive-7, pipe-11)
prep_like(pipe-11, this-13)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB want)
          (S
            (NP (NNS weights))
            (VP (TO to)
              (VP (VB sink)
                (NP (PRP me))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD might) (RB n't)
        (VP (VB get)
          (NP (PRP them))
          (PRT (RP off))
          (PP (IN in)
            (NP (NN time))))))
    (. .)))

nsubj(want-3, I-1)
aux(want-3, should-2)
root(ROOT-0, want-3)
dobj(want-3, weights-4)
nsubj(sink-6, weights-4)
aux(sink-6, to-5)
xcomp(want-3, sink-6)
dobj(sink-6, me-7)
nsubj(get-13, I-10)
aux(get-13, might-11)
neg(get-13, n't-12)
conj_and(want-3, get-13)
dobj(get-13, them-14)
prt(get-13, off-15)
prep_in(get-13, time-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (NP
        (NP (PRP$ my) (NN breakfast) (JJ dreadful))
        (, ,)
        (NP (NNP Willie))))
    (. .) ('' '')))

nsubj(want-2, I-1)
root(ROOT-0, want-2)
poss(breakfast-4, my-3)
dobj(want-2, breakfast-4)
amod(breakfast-4, dreadful-5)
appos(breakfast-4, Willie-7)

(ROOT
  (S
    (S
      (S (RB So)
        (VP (VBG saying)))
      (, ,)
      (NP (PRP he))
      (VP (VBD scrambled)
        (PRT (RP up))
        (NP
          (NP (DT the) (NN side))
          (PP (IN of)
            (NP (DT the) (NN well))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP
          (NP (DT the) (JJ last))
          (PP (IN of)
            (NP (PRP him)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD appeared)))))
        (, ,)
        (NP
          (NP (PRP$ his) (NNS boots))
          (, ,)
          (ADVP (RB namely)))
        (, ,))
      (VP (VBD bore)
        (NP (NN testimony))
        (S
          (VP
            (ADVP (RB enough)
              (PP (TO to)
                (NP (PRP$ his))))
            (VBG having)
            (VP (VBN reached)
              (NP (DT the) (NN water)))))))
    (. .)))

advmod(saying-2, So-1)
vmod(scrambled-5, saying-2)
nsubj(scrambled-5, he-4)
root(ROOT-0, scrambled-5)
prt(scrambled-5, up-6)
det(side-8, the-7)
dobj(scrambled-5, side-8)
det(well-11, the-10)
prep_of(side-8, well-11)
det(last-15, the-14)
nsubj(appeared-19, last-15)
nsubj(bore-26, last-15)
prep_of(last-15, him-17)
rcmod(last-15, appeared-19)
poss(boots-22, his-21)
appos(last-15, boots-22)
advmod(boots-22, namely-24)
conj_and(scrambled-5, bore-26)
dobj(bore-26, testimony-27)
nsubj(reached-32, testimony-27)
advmod(reached-32, enough-28)
prep_to(enough-28, his-30)
aux(reached-32, having-31)
xcomp(bore-26, reached-32)
det(water-34, the-33)
dobj(reached-32, water-34)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP
        (VP (VBD peered)
          (PRT (RP down))
          (PP (IN into)
            (NP (DT the) (NN well))))
        (, ,)
        (CC and)
        (VP (VBD caught)
          (NP
            (NP (DT the) (JJ dull) (NN glimmer))
            (PP (IN of)
              (NP (PRP it))))
          (PP (IN through)
            (NP (DT the) (NNS stones))))))
    (: ;)
    (S
      (ADVP (RB then))
      (, ,)
      (S
        (NP (DT a) (JJ good) (NN deal))
        (ADJP (JJ disappointed)))
      (, ,)
      (VP (VBD followed)
        (NP (NNP Sandy))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD strode)
              (PRT (RP away))
              (PP (IN towards)
                (NP (DT the) (NN house))))))))
    (. .)))

nsubj(peered-2, Willie-1)
nsubj(caught-9, Willie-1)
root(ROOT-0, peered-2)
prt(peered-2, down-3)
det(well-6, the-5)
prep_into(peered-2, well-6)
conj_and(peered-2, caught-9)
det(glimmer-12, the-10)
amod(glimmer-12, dull-11)
dobj(caught-9, glimmer-12)
prep_of(glimmer-12, it-14)
det(stones-17, the-16)
prep_through(caught-9, stones-17)
advmod(followed-26, then-19)
det(deal-23, a-21)
amod(deal-23, good-22)
dep(disappointed-24, deal-23)
ccomp(followed-26, disappointed-24)
parataxis(peered-2, followed-26)
dobj(followed-26, Sandy-27)
mark(strode-30, as-28)
nsubj(strode-30, he-29)
advcl(followed-26, strode-30)
prt(strode-30, away-31)
det(house-34, the-33)
prep_towards(strode-30, house-34)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD 'll)
      (VP
        (VP (VB come))
        (CC and)
        (VP (VB have)
          (NP (PRP$ your) (NN breakfast))
          (SBAR (IN with)
            (S
              (NP
                (NP (PRP me))
                (, ,)
                (NP (NNP Sandy))
                (, ,))
              (VP (MD wo) (RB n't)))))
        (NP (PRP you))))
    (. ?) ('' '')))

nsubj(come-4, You-2)
nsubj(have-6, You-2)
aux(come-4, 'll-3)
root(ROOT-0, come-4)
conj_and(come-4, have-6)
poss(breakfast-8, your-7)
dobj(have-6, breakfast-8)
mark(wo-14, with-9)
nsubj(wo-14, me-10)
appos(me-10, Sandy-12)
advcl(have-6, wo-14)
neg(wo-14, n't-15)
dobj(come-4, you-16)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said)
      (PP (IN from)
        (PP (IN behind)
          (NP (PRP him)))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
prep(said-2, from-3)
pcomp(from-3, behind-4)
pobj(behind-4, him-5)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (VP (VB thank)
        (NP (PRP you))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Sandy))
    (. .)))

discourse(thank-4, No-2)
ccomp(answered-8, thank-4)
dobj(thank-4, you-5)
root(ROOT-0, answered-8)
dep(answered-8, Sandy-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB like)
          (NP (DT any) (NN porridge)))))
    (CC but)
    (S
      (NP (PRP$ my) (NN mother))
      (VP (VBZ 's)))
    (. .) ('' '')))

nsubj(like-5, I-2)
aux(like-5, do-3)
neg(like-5, n't-4)
root(ROOT-0, like-5)
det(porridge-7, any-6)
dobj(like-5, porridge-7)
poss(mother-10, my-9)
nsubj('s-11, mother-10)
conj_but(like-5, 's-11)

(ROOT
  (S (CC And)
    (PP (IN without)
      (S
        (VP (VBG looking)
          (PRT (RP behind))
          (NP (PRP him)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD walked)
      (NP (JJ right)
        (UCP
          (PP (IN through)
            (NP (DT the) (NN cottage)))
          (, ,)
          (CC and)
          (ADVP (RB away)))
        (NN home)))
    (. .)))

cc(walked-8, And-1)
prepc_without(walked-8, looking-3)
prt(looking-3, behind-4)
dobj(looking-3, him-5)
nsubj(walked-8, he-7)
root(ROOT-0, walked-8)
amod(home-16, right-9)
prep(home-16, through-10)
det(cottage-12, the-11)
pobj(through-10, cottage-12)
conj_and(through-10, away-15)
prep(home-16, away-15)
dobj(walked-8, home-16)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (NNP Willie))
        (VP (VBD had)
          (VP (VBN finished)
            (NP (PRP$ his) (NN porridge))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD had)
        (VP (VBN got)
          (PP (IN over)
            (NP (PRP$ his) (NN disappointment)))))
      (, ,)
      (CC and)
      (VP (VBD had)
        (ADVP (RB even))
        (VP (VBN begun)
          (S
            (VP (TO to)
              (VP (VB see)
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (ADVP (RB never))
                      (VP
                        (ADVP (RB really))
                        (VBN expected)
                        (S
                          (VP (TO to)
                            (VP (VB find)
                              (NP (DT a) (NN treasure)))))))))))))))
    (. .)))

mark(finished-4, Before-1)
nsubj(finished-4, Willie-2)
aux(finished-4, had-3)
advcl(got-10, finished-4)
poss(porridge-6, his-5)
dobj(finished-4, porridge-6)
nsubj(got-10, he-8)
nsubj(begun-18, he-8)
nsubj(see-20, he-8)
aux(got-10, had-9)
root(ROOT-0, got-10)
poss(disappointment-13, his-12)
prep_over(got-10, disappointment-13)
aux(begun-18, had-16)
advmod(begun-18, even-17)
conj_and(got-10, begun-18)
aux(see-20, to-19)
xcomp(begun-18, see-20)
mark(expected-26, that-21)
nsubj(expected-26, he-22)
nsubj(find-28, he-22)
aux(expected-26, had-23)
neg(expected-26, never-24)
advmod(expected-26, really-25)
ccomp(see-20, expected-26)
aux(find-28, to-27)
xcomp(expected-26, find-28)
det(treasure-30, a-29)
dobj(find-28, treasure-30)

(ROOT
  (S (RB Only)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN been)
          (ADJP (JJ fun)
            (S
              (VP (TO to)
                (VP (VB hand)
                  (NP (PRP it))
                  (PRT (RP over))
                  (PP (TO to)
                    (NP (PRP$ his) (NN father))))))))))
    (. !)))

advmod(fun-6, Only-1)
nsubj(fun-6, it-2)
nsubj(hand-8, it-2)
aux(fun-6, would-3)
aux(fun-6, have-4)
cop(fun-6, been-5)
root(ROOT-0, fun-6)
aux(hand-8, to-7)
xcomp(fun-6, hand-8)
dobj(hand-8, it-9)
prt(hand-8, over-10)
poss(father-13, his-12)
prep_to(hand-8, father-13)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN through)
        (NP (NN morning) (NN school))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP$ his) (NNS thoughts))
    (VP (MD would)
      (VP (VB go)
        (PRT (RP back))
        (PP (TO to)
          (NP (DT the) (JJ little) (NN vault)))
        (, ,)
        (ADJP (RB so) (JJ cool)
          (CC and)
          (JJ shadowy))
        (, ,)
        (S
          (VP (VBG sheltering)
            (NP (PRP$ its) (JJ ancient) (NN well))
            (PP (IN from)
              (NP
                (NP (DT the) (NN light))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD lorded)
                      (NP (PRP it))
                      (PP (IN over)
                        (NP (PDT all) (DT the) (NN country)))
                      (PP (IN outside)))))))))))
    (. .)))

nsubj(go-11, All-1)
nn(school-4, morning-3)
prep_through(All-1, school-4)
advmod(go-11, however-6)
poss(thoughts-9, his-8)
nsubj(go-11, thoughts-9)
aux(go-11, would-10)
root(ROOT-0, go-11)
prt(go-11, back-12)
det(vault-16, the-14)
amod(vault-16, little-15)
prep_to(go-11, vault-16)
advmod(cool-19, so-18)
acomp(go-11, cool-19)
acomp(go-11, shadowy-21)
conj_and(cool-19, shadowy-21)
xcomp(go-11, sheltering-23)
poss(well-26, its-24)
amod(well-26, ancient-25)
dobj(sheltering-23, well-26)
det(light-29, the-28)
prep_from(sheltering-23, light-29)
nsubj(lorded-31, light-29)
prep_outside(lorded-31, light-29)
rcmod(light-29, lorded-31)
dobj(lorded-31, it-32)
predet(country-36, all-34)
det(country-36, the-35)
prep_over(lorded-31, country-36)

(ROOT
  (S
    (S
      (ADVP (DT No) (NN doubt))
      (NP (DT the) (NN streams))
      (VP (VBD rejoiced)
        (PP (IN in)
          (NP (PRP it)))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB even))
      (PP (IN for)
        (NP (PRP them)))
      (NP (PRP it))
      (VP (MD would)
        (VP (VB be)
          (ADJP (RB too) (JJ much))
          (SBAR (IN before)
            (S
              (NP (DT the) (NN evening))
              (VP (VBD came)
                (S
                  (VP (TO to)
                    (VP (VB cool)
                      (CC and)
                      (VB console)
                      (NP (PRP them))))
                  (: ;)
                  (SBAR (IN while)
                    (S
                      (NP
                        (NP (DT the) (JJ slow) (NNS wells))
                        (PP (IN in)
                          (NP
                            (NP (DT the) (JJ marshy) (NN ground))
                            (ADVP (RB up)
                              (PP (IN on)
                                (NP (DT the) (NNS mountains)))))))
                      (VP (MD must)
                        (VP (VB feel)
                          (ADJP (JJ faint))
                          (PP (IN in)
                            (NP
                              (NP (DT an) (NN hour))
                              (PP (IN of)
                                (NP (PRP$ its) (NN burning) (NN eye))))))))))))))))
    (. .)))

neg(doubt-2, No-1)
advmod(rejoiced-5, doubt-2)
det(streams-4, the-3)
nsubj(rejoiced-5, streams-4)
root(ROOT-0, rejoiced-5)
prep_in(rejoiced-5, it-7)
advmod(much-17, even-10)
prep_for(much-17, them-12)
nsubj(much-17, it-13)
aux(much-17, would-14)
cop(much-17, be-15)
advmod(much-17, too-16)
conj_but(rejoiced-5, much-17)
mark(came-21, before-18)
det(evening-20, the-19)
nsubj(came-21, evening-20)
nsubj(cool-23, evening-20)
nsubj(console-25, evening-20)
advcl(much-17, came-21)
aux(cool-23, to-22)
xcomp(came-21, cool-23)
xcomp(came-21, console-25)
conj_and(cool-23, console-25)
dobj(cool-23, them-26)
mark(feel-41, while-28)
det(wells-31, the-29)
amod(wells-31, slow-30)
nsubj(feel-41, wells-31)
det(ground-35, the-33)
amod(ground-35, marshy-34)
prep_in(wells-31, ground-35)
advmod(ground-35, up-36)
det(mountains-39, the-38)
prep_on(up-36, mountains-39)
aux(feel-41, must-40)
parataxis(cool-23, feel-41)
acomp(feel-41, faint-42)
det(hour-45, an-44)
prep_in(feel-41, hour-45)
poss(eye-49, its-47)
nn(eye-49, burning-48)
prep_of(hour-45, eye-49)

(ROOT
  (S
    (NP (DT This))
    (ADVP (RB well))
    (VP (VBD had)
      (ADVP (RB always))
      (VP
        (VP
          (VP (VBN been))
          (, ,)
          (CC and)
          (VP
            (ADVP (RB always))
            (MD would)
            (VP
              (VP (VB be))
              (, ,)
              (ADJP (JJ cool)
                (CC and)
                (VBN blessed)))))
        (CC and)
        (VP
          (ADJP (JJ sweet))
          (, ,)
          (SBAR (IN like)
            (S (: --)
              (PP (IN like)
                (NP (DT a) (JJ precious) (NN thing)))
              (NP (PRP you))
              (VP (MD can)
                (ADVP (RB only))
                (VP (VB think)
                  (PRT (RP about)))))))))
    (. .)))

nsubj(been-5, This-1)
nsubj(be-10, This-1)
nsubj(sweet-16, This-1)
advmod(been-5, well-2)
aux(been-5, had-3)
advmod(been-5, always-4)
root(ROOT-0, been-5)
advmod(be-10, always-8)
aux(be-10, would-9)
conj_and(been-5, be-10)
acomp(be-10, cool-12)
acomp(be-10, blessed-14)
conj_and(cool-12, blessed-14)
conj_and(been-5, sweet-16)
mark(think-27, like-18)
det(thing-23, a-21)
amod(thing-23, precious-22)
prep_like(think-27, thing-23)
nsubj(think-27, you-24)
aux(think-27, can-25)
advmod(think-27, only-26)
advcl(sweet-16, think-27)
prt(think-27, about-28)

(ROOT
  (SBARQ (CC And)
    (SQ
      (VP (VBD was)
        (ADVP (RB n't)))
      (NP (PRP it))
      (NP
        (NP (DT a) (JJ nice) (NN thing))
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT a) (NN well))
                (PP (IN of)
                  (NP (PRP$ your) (JJ own)))))))))
    (. ?)))

cc(was-2, And-1)
root(ROOT-0, was-2)
neg(was-2, n't-3)
dep(was-2, it-4)
det(thing-7, a-5)
amod(thing-7, nice-6)
dep(was-2, thing-7)
aux(have-9, to-8)
vmod(thing-7, have-9)
det(well-11, a-10)
dobj(have-9, well-11)
poss(own-14, your-13)
prep_of(well-11, own-14)

(ROOT
  (S
    (NP (NNP Tibby))
    (VP (VBP need) (RB n't)
      (VP (VB go)
        (ADVP (DT any) (RBR more))
        (PP (TO to)
          (NP
            (NP (DT the) (NN village) (NN pump))
            (: --)
            (SBAR
              (WHNP (WDT which))
              (S
                (ADVP (RB certainly))
                (VP
                  (VP (VBD was)
                    (ADJP (JJ nearer)))
                  (, ,)
                  (CC but)
                  (VP (VBD stood)
                    (PP
                      (PP (IN in)
                        (NP (DT the) (NN street)))
                      (, ,) (RB not)
                      (PP (IN in)
                        (NP (PRP$ their) (JJ own) (NN ground))))))))))))
    (. .)))

nsubj(need-2, Tibby-1)
root(ROOT-0, need-2)
neg(need-2, n't-3)
dep(need-2, go-4)
dep(more-6, any-5)
advmod(go-4, more-6)
det(pump-10, the-8)
nn(pump-10, village-9)
prep_to(go-4, pump-10)
nsubj(nearer-15, pump-10)
nsubj(stood-18, pump-10)
advmod(nearer-15, certainly-13)
cop(nearer-15, was-14)
rcmod(pump-10, nearer-15)
rcmod(pump-10, stood-18)
conj_but(nearer-15, stood-18)
det(street-21, the-20)
prep_in(stood-18, street-21)
neg(stood-18, not-23)
poss(ground-27, their-25)
amod(ground-27, own-26)
prep_in(stood-18, ground-27)

(ROOT
  (SBARQ
    (SBAR
      (PP (IN Of)
        (NP (NN course)))
      (, ,) (IN as)
      (S
        (S
          (ADVP (RB yet))
          (, ,)
          (NP (PRP she))
          (VP (MD could) (RB not)
            (VP (VB draw)
              (NP (DT a) (NN bucketful)))))
        (, ,) (IN for)
        (S
          (NP (DT the) (NN water))
          (ADVP (RB hardly))
          (VP (VBD came)
            (PP (IN above)
              (NP (DT the) (NNS stones)))))
        (: ;)
        (S (CC but)
          (NP (PRP he))
          (VP (MD would)
            (ADVP (RB soon))
            (VP (VB get)
              (PRT (RP out))
              (ADVP
                (ADVP (RB as) (JJ many))
                (SBAR (IN as)
                  (S
                    (VP (MD would)
                      (VP (VB make)
                        (S
                          (NP (PRP it))
                          (ADJP (RB deep) (JJ enough)))
                        (: --)
                        (ADVP (RB only))
                        (, ,)
                        (SBAR (IN if)
                          (S
                            (NP (PRP it))
                            (VP (VBD was)
                              (NP
                                (SBAR
                                  (WHNP (DT all))
                                  (S
                                    (NP (NNP Sandy))
                                    (VP (MD could)
                                      (VP (VB do)
                                        (S
                                          (VP (TO to)
                                            (VP (VB get)
                                              (PRT (RP out))
                                              (NP (DT the) (JJ big) (NNS ones)))))))))
                                (, ,)
                                (CC and)
                                (SBAR (IN that)
                                  (FRAG
                                    (PP (IN with)
                                      (NP (PRP$ his) (NN help) (RB too)))))))))))))))))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (VBD was)
      (NP
        (NP (PRP he))
        (S
          (VP (TO to)
            (VP (VB manage)
              (NP (PRP it))
              (ADVP (RB alone)))))))
    (. ?)))

prep_of(draw-10, course-2)
mark(draw-10, as-4)
advmod(draw-10, yet-5)
nsubj(draw-10, she-7)
aux(draw-10, could-8)
neg(draw-10, not-9)
dep(was-62, draw-10)
det(bucketful-12, a-11)
dobj(draw-10, bucketful-12)
dep(draw-10, for-14)
det(water-16, the-15)
nsubj(came-18, water-16)
advmod(came-18, hardly-17)
parataxis(draw-10, came-18)
det(stones-21, the-20)
prep_above(came-18, stones-21)
cc(get-27, but-23)
nsubj(get-27, he-24)
aux(get-27, would-25)
advmod(get-27, soon-26)
parataxis(draw-10, get-27)
prt(get-27, out-28)
advmod(many-30, as-29)
advmod(get-27, many-30)
mark(make-33, as-31)
aux(make-33, would-32)
advcl(many-30, make-33)
ccomp(many-30, make-33)
nsubj(enough-36, it-34)
advmod(enough-36, deep-35)
xcomp(make-33, enough-36)
advmod(make-33, only-38)
mark(do-46, if-40)
nsubj(do-46, it-41)
cop(do-46, was-42)
dobj(do-46, all-43)
nsubj(get-48, all-43)
nsubj(do-46, Sandy-44)
aux(do-46, could-45)
advcl(make-33, do-46)
aux(get-48, to-47)
xcomp(do-46, get-48)
prt(get-48, out-49)
det(ones-52, the-50)
amod(ones-52, big-51)
dobj(get-48, ones-52)
mark(with-56, that-55)
advcl(make-33, with-56)
conj_and(do-46, with-56)
poss(help-58, his-57)
pobj(with-56, help-58)
advmod(help-58, too-59)
advmod(was-62, how-61)
root(ROOT-0, was-62)
nsubj(was-62, he-63)
aux(manage-65, to-64)
vmod(he-63, manage-65)
dobj(manage-65, it-66)
advmod(manage-65, alone-67)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP (DT the) (NN rub)))
    (. !)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(rub-4, the-3)
nsubj(was-2, rub-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (VP (VB go)
        (ADVP (RB back)
          (NP (DT a) (RB little)))
        (S
          (VP (TO to)
            (VP (VB explain)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (PRP he))
                  (VP (VBD came)
                    (S
                      (VP (TO to)
                        (VP (VB think)
                          (PP (IN of)
                            (NP (DT a) (NN plan))))))))))))))
    (. .)))

nsubj(go-3, I-1)
nsubj(explain-8, I-1)
aux(go-3, must-2)
root(ROOT-0, go-3)
advmod(go-3, back-4)
det(little-6, a-5)
pobj(back-4, little-6)
aux(explain-8, to-7)
xcomp(go-3, explain-8)
advmod(came-11, how-9)
nsubj(came-11, he-10)
nsubj(think-13, he-10)
ccomp(explain-8, came-11)
aux(think-13, to-12)
xcomp(came-11, think-13)
det(plan-16, a-15)
prep_of(think-13, plan-16)

(ROOT
  (S
    (SBAR (IN After)
      (S
        (NP (NNP Hector)
          (CC and)
          (PRP he))
        (VP (VBD had)
          (VP (VBN gone)
            (ADVP (RB as) (RB far))
            (PP (IN in)
              (NP
                (NP (NNP Dr) (NNP Dick) (POS 's))
                (NN astronomy)))
            (SBAR (IN as)
              (S
                (NP (PRP they))
                (VP (MD could)
                  (VP (VB understand)))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD found)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBD were)
            (VP (VBG getting)
              (NP (PRP themselves))
              (PP (IN into)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP
                      (VP (VBD seemed)
                        (NP
                          (NP (RB quite) (DT a) (NN jungle))
                          (PP (IN of)
                            (NP
                              (NP (NNS planets))
                              (, ,)
                              (CC and)
                              (NP (NNS suns))
                              (, ,)
                              (CC and)
                              (NP (NNS comets))
                              (, ,)))))
                      (CC and)
                      (VP (VBZ constellations)))))))))))
    (. .)))

mark(gone-6, After-1)
nsubj(gone-6, Hector-2)
conj_and(Hector-2, he-4)
nsubj(gone-6, he-4)
aux(gone-6, had-5)
advcl(found-20, gone-6)
advmod(far-8, as-7)
advmod(gone-6, far-8)
nn(Dick-11, Dr-10)
poss(astronomy-13, Dick-11)
prep_in(gone-6, astronomy-13)
mark(understand-17, as-14)
nsubj(understand-17, they-15)
aux(understand-17, could-16)
advcl(gone-6, understand-17)
nsubj(found-20, they-19)
root(ROOT-0, found-20)
nsubj(getting-23, they-21)
aux(getting-23, were-22)
ccomp(found-20, getting-23)
dobj(getting-23, themselves-24)
nsubj(seemed-27, what-26)
nsubj(constellations-41, what-26)
prepc_into(getting-23, seemed-27)
advmod(jungle-30, quite-28)
det(jungle-30, a-29)
xcomp(seemed-27, jungle-30)
prep_of(jungle-30, planets-32)
prep_of(jungle-30, suns-35)
conj_and(planets-32, suns-35)
prep_of(jungle-30, comets-38)
conj_and(planets-32, comets-38)
prepc_into(getting-23, constellations-41)
conj_and(seemed-27, constellations-41)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ seems)
        (PP (TO to)
          (NP (PRP me)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (DT the) (NN shoemaker))
    (, ,) (`` ``)
    (S
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (TO to)
            (VP (VB understand)
              (NP (NN anything))))))
      (NP (PRP you))
      (VP (MD must)
        (VP (VB understand)
          (NP (NN everything)))))
    (. .) ('' '')))

nsubj(seems-3, It-2)
ccomp(said-8, seems-3)
prep_to(seems-3, me-5)
root(ROOT-0, said-8)
det(shoemaker-10, the-9)
nsubj(said-8, shoemaker-10)
nsubj(understand-15, that-13)
aux(understand-15, to-14)
advcl(understand-19, understand-15)
dobj(understand-15, anything-16)
nsubj(understand-19, you-17)
aux(understand-19, must-18)
dep(said-8, understand-19)
dobj(understand-19, everything-20)

(ROOT
  (S (CC So)
    (S
      (NP (PRP they))
      (VP (VBD laid)
        (NP (DT the) (NN book))
        (ADVP (RB aside))
        (PP (IN for)
          (NP (DT the) (NN present)))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (NNP Hector))
        (, ,)
        (VP (VBG searching)
          (PP (IN about) (IN for)
            (NP
              (NP (DT another))
              (PP (IN with)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (TO to)
                      (VP (VB fill)
                        (PRT (RP up))
                        (NP
                          (NP (DT the) (NN remainder))
                          (PP (IN of)
                            (NP (DT the) (NN afternoon))))))))))))
        (, ,))
      (VP (VBD came)
        (PP (IN upon)
          (NP
            (NP (CD one))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (DT the) (JJ mechanical) (NNS powers))
                (VP (VBD were)
                  (VP (VBN treated)
                    (PP (IN after)
                      (NP (DT a) (JJ simple) (NN fashion)))))))))))
    (. .)))

nsubj(laid-3, they-2)
root(ROOT-0, laid-3)
det(book-5, the-4)
dobj(laid-3, book-5)
advmod(laid-3, aside-6)
det(present-9, the-8)
prep_for(laid-3, present-9)
nsubj(came-29, Hector-12)
vmod(Hector-12, searching-14)
dep(searching-14, about-15)
prep_for(searching-14, another-17)
nsubj(fill-21, which-19)
aux(fill-21, to-20)
prepc_with(another-17, fill-21)
prt(fill-21, up-22)
det(remainder-24, the-23)
dobj(fill-21, remainder-24)
det(afternoon-27, the-26)
prep_of(remainder-24, afternoon-27)
conj_and(laid-3, came-29)
prep_upon(came-29, one-31)
prep_in(treated-38, one-31)
det(powers-36, the-34)
amod(powers-36, mechanical-35)
nsubjpass(treated-38, powers-36)
auxpass(treated-38, were-37)
rcmod(one-31, treated-38)
det(fashion-42, a-40)
amod(fashion-42, simple-41)
prep_after(treated-38, fashion-42)

(ROOT
  (S
    (PP (IN Of)
      (NP (DT this) (NN book)))
    (NP (NNP Willie))
    (VP (VBD had)
      (ADVP (RB now))
      (VP (VBN read)
        (NP (DT a) (JJ good) (NN deal))))
    (. .)))

det(book-3, this-2)
prep_of(read-7, book-3)
nsubj(read-7, Willie-4)
aux(read-7, had-5)
advmod(read-7, now-6)
root(ROOT-0, read-7)
det(deal-10, a-8)
amod(deal-10, good-9)
dobj(read-7, deal-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (ADVP (RB yet))
                (VP (VBN come)
                  (S
                    (VP (TO to)
                      (VP (VB understand)
                        (NP (DT the) (JJ mechanical) (NN power))
                        (ADVP (RB so))
                        (SBAR
                          (SBAR
                            (ADVP (RB thoroughly))
                            (IN as)
                            (S
                              (VP (TO to)
                                (VP (VB see)
                                  (SBAR (IN that)
                                    (S
                                      (NP
                                        (NP (DT the) (NN lever))
                                        (CC and)
                                        (NP (DT the) (NN wheel-and-axle)))
                                      (VP (VBP are)
                                        (NP
                                          (NP (DT the) (JJ same))
                                          (PP (IN in)
                                            (NP (NN kind)))))))))))
                          (, ,)
                          (CC or)
                          (SBAR (IN that)
                            (S
                              (NP
                                (NP (DT the) (NN screw))
                                (, ,)
                                (NP (DT the) (JJ inclined) (NN plane))
                                (, ,)
                                (CC and)
                                (NP (DT the) (NN wedge)))
                              (VP (VBP are)
                                (NP
                                  (NP (DT the) (JJ same) (NN power))
                                  (PP (IN in)
                                    (NP (JJ different) (NNS shapes))))))))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD did)
        (VP (VB understand)
          (SBAR (IN that)
            (S
              (SBAR (IN while)
                (S
                  (NP (DT a) (JJ single) (NN pulley))
                  (VP (VBZ gives)
                    (NP (PRP you))
                    (NP (DT no) (NN advantage))
                    (PP (IN except)
                      (PP (IN by)
                        (S
                          (VP (VBG enabling)
                            (S
                              (NP (PRP you))
                              (VP (TO to)
                                (VP (VB apply)
                                  (NP (PRP$ your) (NN strength))
                                  (PP (IN in)
                                    (NP (DT the)
                                      (ADJP (RBS most) (JJ effective))
                                      (NN manner)))))))))))))
              (, ,)
              (NP (DT a) (JJ second) (NN pulley))
              (VP (VBZ takes)
                (NP (PDT half) (DT the) (NN weight))
                (PP (IN off)
                  (NP (PRP you)))))))))
    (. .)))

nsubj(say-4, I-1)
aux(say-4, can-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
mark(come-9, that-5)
nsubj(come-9, he-6)
nsubj(understand-11, he-6)
aux(come-9, had-7)
advmod(come-9, yet-8)
ccomp(say-4, come-9)
aux(understand-11, to-10)
xcomp(come-9, understand-11)
det(power-14, the-12)
amod(power-14, mechanical-13)
dobj(understand-11, power-14)
advmod(understand-11, so-15)
advmod(see-19, thoroughly-16)
mark(see-19, as-17)
aux(see-19, to-18)
advcl(understand-11, see-19)
ccomp(understand-11, see-19)
mark(same-28, that-20)
det(lever-22, the-21)
nsubj(same-28, lever-22)
det(wheel-and-axle-25, the-24)
conj_and(lever-22, wheel-and-axle-25)
nsubj(same-28, wheel-and-axle-25)
cop(same-28, are-26)
det(same-28, the-27)
ccomp(see-19, same-28)
prep_in(same-28, kind-30)
mark(power-47, that-33)
det(screw-35, the-34)
nsubj(power-47, screw-35)
det(plane-39, the-37)
amod(plane-39, inclined-38)
conj_and(screw-35, plane-39)
nsubj(power-47, plane-39)
det(wedge-43, the-42)
conj_and(screw-35, wedge-43)
nsubj(power-47, wedge-43)
cop(power-47, are-44)
det(power-47, the-45)
amod(power-47, same-46)
advcl(understand-11, power-47)
ccomp(understand-11, power-47)
conj_or(see-19, power-47)
amod(shapes-50, different-49)
prep_in(power-47, shapes-50)
nsubj(understand-55, he-53)
aux(understand-55, did-54)
conj_but(say-4, understand-55)
mark(takes-82, that-56)
mark(gives-61, while-57)
det(pulley-60, a-58)
amod(pulley-60, single-59)
nsubj(gives-61, pulley-60)
advcl(takes-82, gives-61)
iobj(gives-61, you-62)
neg(advantage-64, no-63)
dobj(gives-61, advantage-64)
prep(gives-61, except-65)
pcomp(except-65, by-66)
pcomp(by-66, enabling-67)
dobj(enabling-67, you-68)
nsubj(apply-70, you-68)
aux(apply-70, to-69)
xcomp(enabling-67, apply-70)
poss(strength-72, your-71)
dobj(apply-70, strength-72)
det(manner-77, the-74)
advmod(effective-76, most-75)
amod(manner-77, effective-76)
prep_in(apply-70, manner-77)
det(pulley-81, a-79)
amod(pulley-81, second-80)
nsubj(takes-82, pulley-81)
ccomp(understand-55, takes-82)
predet(weight-85, half-83)
det(weight-85, the-84)
dobj(takes-82, weight-85)
prep_off(takes-82, you-87)

(ROOT
  (S
    (ADVP (RB Hence))
    (, ,)
    (PP (IN with)
      (NP
        (NP (DT the) (NN difficulty))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (PRP he))
            (ADVP (RB now))
            (VP (VBD found)
              (NP (PRP himself)))))))
    (, ,)
    (VP (VBD came)
      (PP (IN at)
        (NP
          (NP (RB once) (DT the) (NN thought))
          (PP (IN of)
            (NP (DT a) (NN block)))))
      (PP (IN with)
        (NP
          (NP (DT a) (NN pulley))
          (PP (IN in)
            (NP (PRP it)))))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN seen)
              (S
                (VP (VBG lying)
                  (PRT (RP about))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN carpenter) (POS 's))
                      (NN shop))))))))))
    (. .)))

advmod(came-13, Hence-1)
det(difficulty-5, the-4)
prep_in(found-10, difficulty-5)
prep_with(came-13, difficulty-5)
nsubj(found-10, he-8)
advmod(found-10, now-9)
rcmod(difficulty-5, found-10)
dobj(found-10, himself-11)
root(ROOT-0, came-13)
advmod(thought-17, once-15)
det(thought-17, the-16)
prep_at(came-13, thought-17)
det(block-20, a-19)
prep_of(thought-17, block-20)
det(pulley-23, a-22)
prep_with(came-13, pulley-23)
prep_in(pulley-23, it-25)
dobj(seen-30, which-27)
nsubj(seen-30, he-28)
aux(seen-30, had-29)
ccomp(came-13, seen-30)
xcomp(seen-30, lying-31)
prt(lying-31, about-32)
det(carpenter-35, the-34)
poss(shop-37, carpenter-35)
prep_in(lying-31, shop-37)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP (VBD remembered)
          (ADVP (RB also))
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBD was)
                (NP
                  (NP (DT a) (JJ great) (NN iron) (NN staple)
                    (CC or)
                    (JJ _) (NN eye) (NN _))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN vault))
                      (PP (RB just) (IN over)
                        (NP (DT the) (NN well)))))))))))
      (: ;)
      (CC and)
      (S
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (MD could)
              (ADVP (RB only))
              (VP (VB get)
                (NP
                  (NP (NN hold))
                  (PP (IN of)
                    (NP (DT a) (JJ second) (NN pulley))))))))
        (, ,)
        (NP (DT the) (NN thing))
        (VP (VBD was)
          (ADJP (RB as) (JJ good)
            (PP (IN as)
              (NP
                (S
                  (VP (VBN done)))
                (: --)
                (NP (DT the)
                  (ADJP
                    (ADJP (RB well) (RB as) (JJ good))
                    (SBAR (IN as)
                      (FRAG
                        (VP (VBN cleared)
                          (PRT (RP out))
                          (WHPP (TO to)
                            (WHNP (WDT whatever)))))))
                  (NN depth))))))))
    (NP (PRP he))
    (VP (MD could)
      (VP (VB reach)
        (PP (IN below)
          (NP (DT the) (NN water)))))
    (. .)))

nsubj(remembered-2, He-1)
dep(reach-55, remembered-2)
advmod(remembered-2, also-3)
mark(was-6, that-4)
expl(was-6, there-5)
ccomp(remembered-2, was-6)
det(staple-10, a-7)
amod(staple-10, great-8)
nn(staple-10, iron-9)
nsubj(was-6, staple-10)
amod(_-14, _-12)
nn(_-14, eye-13)
nsubj(was-6, _-14)
conj_or(staple-10, _-14)
det(vault-17, the-16)
prep_in(staple-10, vault-17)
advmod(vault-17, just-18)
det(well-21, the-20)
prep_over(vault-17, well-21)
mark(get-28, if-24)
nsubj(get-28, he-25)
aux(get-28, could-26)
advmod(get-28, only-27)
advcl(good-39, get-28)
dobj(get-28, hold-29)
det(pulley-33, a-31)
amod(pulley-33, second-32)
prep_of(hold-29, pulley-33)
det(thing-36, the-35)
nsubj(good-39, thing-36)
cop(good-39, was-37)
advmod(good-39, as-38)
conj_and(remembered-2, good-39)
dep(reach-55, good-39)
dep(depth-52, done-41)
det(depth-52, the-43)
advmod(good-46, well-44)
advmod(good-46, as-45)
amod(depth-52, good-46)
mark(cleared-48, as-47)
dep(good-46, cleared-48)
prt(cleared-48, out-49)
prep_to(cleared-48, whatever-51)
prep_as(good-39, depth-52)
nsubj(reach-55, he-53)
aux(reach-55, could-54)
root(ROOT-0, reach-55)
det(water-58, the-57)
prep_below(reach-55, water-58)

(ROOT
  (S
    (ADVP (RB As) (RB soon)
      (SBAR (IN as)
        (S
          (NP (NN school))
          (VP (VBD was)
            (ADJP (RP over))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD ran)
        (PP (TO to)
          (NP (NNP Mr) (NNP Spelman))))
      (, ,)
      (CC and)
      (VP (VBD found)
        (PP (TO to)
          (NP (PRP$ his) (NN delight)))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD could)
              (VP (VB lend)
                (NP (PRP him))
                (PP
                  (CONJP (RB not) (JJ only))
                  (PP (IN that)
                    (NP (NN pulley)))
                  (CC but)
                  (ADVP
                    (NP (DT another) (RB as))
                    (RB well)))))))))
    (. .)))

advmod(soon-2, As-1)
advmod(ran-9, soon-2)
mark(over-6, as-3)
nsubj(over-6, school-4)
cop(over-6, was-5)
ccomp(soon-2, over-6)
nsubj(ran-9, he-8)
nsubj(found-15, he-8)
root(ROOT-0, ran-9)
nn(Spelman-12, Mr-11)
prep_to(ran-9, Spelman-12)
conj_and(ran-9, found-15)
poss(delight-18, his-17)
prep_to(found-15, delight-18)
mark(lend-22, that-19)
nsubj(lend-22, he-20)
aux(lend-22, could-21)
ccomp(found-15, lend-22)
dobj(lend-22, him-23)
neg(only-25, not-24)
preconj(that-26, only-25)
prep(lend-22, that-26)
pobj(that-26, pulley-27)
det(as-30, another-29)
npadvmod(well-31, as-30)
prep(lend-22, well-31)
conj_but(that-26, well-31)

(ROOT
  (S
    (NP (DT Each))
    (VP (VBD ran)
      (PP (IN in)
        (NP
          (NP (DT a) (NN block))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD had)
                (NP
                  (NP (DT an) (NN iron) (NN hook))
                  (VP (VBN attached)
                    (PP (TO to)
                      (NP (PRP it)))))))))))
    (. .)))

nsubj(ran-2, Each-1)
root(ROOT-0, ran-2)
det(block-5, a-4)
prep_in(ran-2, block-5)
nsubj(had-7, block-5)
rcmod(block-5, had-7)
det(hook-10, an-8)
nn(hook-10, iron-9)
dobj(had-7, hook-10)
vmod(hook-10, attached-11)
prep_to(attached-11, it-13)

(ROOT
  (S
    (S
      (PP (IN With)
        (NP
          (NP (DT the) (NN aid))
          (PP (IN of)
            (NP (DT a) (NN ladder)))))
      (NP (PRP he))
      (VP (VBD put)
        (NP
          (NP (DT the) (NN hook))
          (PP (IN of)
            (NP (CD one)))
          (PP (IN of)
            (NP (DT the) (NNS blocks))))
        (PP (IN through)
          (NP (DT the) (NN staple)))))
    (, ,)
    (CC and)
    (RB then)
    (S
      (VP (VBN fastened)
        (NP
          (NP (DT the) (NN end))
          (PP (IN of)
            (NP (PRP$ his) (NN rope))))
        (PP (TO to)
          (NP (DT the) (NN block)))))
    (. .)))

det(aid-3, the-2)
prep_with(put-8, aid-3)
det(ladder-6, a-5)
prep_of(aid-3, ladder-6)
nsubj(put-8, he-7)
nsubj(fastened-22, he-7)
root(ROOT-0, put-8)
det(hook-10, the-9)
dobj(put-8, hook-10)
prep_of(hook-10, one-12)
det(blocks-15, the-14)
prep_of(hook-10, blocks-15)
det(staple-18, the-17)
prep_through(put-8, staple-18)
advmod(fastened-22, then-21)
conj_and(put-8, fastened-22)
det(end-24, the-23)
dobj(fastened-22, end-24)
poss(rope-27, his-26)
prep_of(end-24, rope-27)
det(block-30, the-29)
prep_to(fastened-22, block-30)

(ROOT
  (S
    (S
      (ADVP (RB Next))
      (NP (PRP he))
      (VP (VBD got)
        (NP
          (NP (DT another) (NN bit))
          (PP (IN of)
            (NP (NN rope))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG having)
          (VP
            (VP (VBN pulled)
              (PRT (RP off))
              (NP (PRP$ his) (NNS shoes)
                (CC and)
                (NNS stockings)))
            (, ,)
            (CC and)
            (VP (VBD got)
              (PRT (RP down))
              (PP (IN into)
                (NP (DT the) (NN well)))))))
      (, ,)
      (S
        (VP (VBN tied)
          (S
            (NP (PRP it))
            (VP (VB round)
              (NP (DT the) (JJS largest) (NN stone))))
          (PP (IN within)
            (NP (NN reach)))
          (, ,)
          (S
            (ADVP (RB loosely) (RB enough))
            (VP (TO to)
              (VP (VB allow)
                (NP
                  (NP (DT the) (NN hook))
                  (PP (IN of)
                    (NP (DT the) (JJ second) (NN pulley))))
                (S
                  (VP (TO to)
                    (VP (VB lay)
                      (NP
                        (NP (NN hold))
                        (PP (IN of)
                          (NP (PRP it)))))))))))))
    (. .)))

advmod(got-3, Next-1)
nsubj(got-3, he-2)
nsubj(pulled-11, he-2)
root(ROOT-0, got-3)
det(bit-5, another-4)
dobj(got-3, bit-5)
prep_of(bit-5, rope-7)
aux(pulled-11, having-10)
conj_and(got-3, pulled-11)
prt(pulled-11, off-12)
poss(shoes-14, his-13)
dobj(pulled-11, shoes-14)
dobj(pulled-11, stockings-16)
conj_and(shoes-14, stockings-16)
conj_and(got-3, got-19)
conj_and(pulled-11, got-19)
prt(got-19, down-20)
det(well-23, the-22)
prep_into(got-19, well-23)
parataxis(pulled-11, tied-25)
nsubj(round-27, it-26)
ccomp(tied-25, round-27)
det(stone-30, the-28)
amod(stone-30, largest-29)
dobj(round-27, stone-30)
prep_within(tied-25, reach-32)
advmod(enough-35, loosely-34)
advmod(allow-37, enough-35)
aux(allow-37, to-36)
xcomp(tied-25, allow-37)
det(hook-39, the-38)
dobj(allow-37, hook-39)
nsubj(lay-45, hook-39)
det(pulley-43, the-41)
amod(pulley-43, second-42)
prep_of(hook-39, pulley-43)
aux(lay-45, to-44)
xcomp(allow-37, lay-45)
dobj(lay-45, hold-46)
prep_of(hold-46, it-48)

(ROOT
  (S (RB Then) (, ,)
    (SBAR (IN as)
      (S
        (NP (DT a) (NN sailor))
        (VP (MD would)
          (VP (VB say)))))
    (, ,)
    (NP (PRP he))
    (VP (VBP rove)
      (NP
        (NP (DT the) (NN end))
        (PP (IN of)
          (NP (DT the) (JJ long) (NN rope))))
      (PP (IN through)
        (UCP
          (NP (DT this) (NN block))
          (, ,)
          (CC and)
          (VP (VBG getting)
            (PRT (RP up))
            (PP (IN on)
              (NP (DT the) (NN ladder)))
            (S
              (ADVP (RB again))
              (, ,)
              (VP (VB rove)
                (NP (PRP it))
                (ADVP (RB also))
                (PP (IN through)
                  (NP
                    (NP (DT the) (JJ first) (NN block))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (VP (VBN left)
                            (S
                              (VP (VBG hanging)
                                (PP (TO to)
                                  (NP (DT the) (NN staple)))))))))))))))))
    (. .)))

advmod(rove-10, Then-1)
mark(say-7, as-3)
det(sailor-5, a-4)
nsubj(say-7, sailor-5)
aux(say-7, would-6)
advcl(rove-10, say-7)
nsubj(rove-10, he-9)
root(ROOT-0, rove-10)
det(end-12, the-11)
dobj(rove-10, end-12)
det(rope-16, the-14)
amod(rope-16, long-15)
prep_of(end-12, rope-16)
det(block-19, this-18)
prep_through(rove-10, block-19)
prep_through(rove-10, getting-22)
conj_and(block-19, getting-22)
vmod(block-19, getting-22)
prt(getting-22, up-23)
det(ladder-26, the-25)
prep_on(getting-22, ladder-26)
advmod(rove-29, again-27)
ccomp(getting-22, rove-29)
dobj(rove-29, it-30)
advmod(rove-29, also-31)
det(block-35, the-33)
amod(block-35, first-34)
prep_through(rove-29, block-35)
dobj(left-39, block-35)
nsubj(left-39, he-37)
aux(left-39, had-38)
rcmod(block-35, left-39)
xcomp(left-39, hanging-40)
det(staple-43, the-42)
prep_to(hanging-40, staple-43)

(ROOT
  (S
    (S
      (NP (DT All) (NNS preparations))
      (ADVP (RB thus))
      (VP (VBD completed)))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD stood)
        (PP (IN by)
          (NP (DT the) (NN well))))
      (, ,)
      (CC and)
      (VP (VBD hauled)
        (PRT (RP away))
        (PP (IN at)
          (NP (DT the) (NN rope)))))
    (. .)))

det(preparations-2, All-1)
nsubj(completed-4, preparations-2)
advmod(completed-4, thus-3)
ccomp(stood-7, completed-4)
nsubj(stood-7, he-6)
nsubj(hauled-13, he-6)
root(ROOT-0, stood-7)
det(well-10, the-9)
prep_by(stood-7, well-10)
conj_and(stood-7, hauled-13)
prt(hauled-13, away-14)
det(rope-17, the-16)
prep_at(hauled-13, rope-17)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (VBD came)
        (S
          (VP (VBG slipping)
            (PP (IN through)
              (NP (DT the) (NNS pulleys))))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB up))
        (VBD rose)
        (NP (DT the) (NN stone))
        (PP
          (PP (IN from)
            (NP (DT the)))
          (CONJP (RB well) (RB as) (IN if))
          (PP (IN by)
            (NP (NN magic))))))
    (. .)))

nsubj(came-2, It-1)
nsubj(rose-10, It-1)
root(ROOT-0, came-2)
xcomp(came-2, slipping-3)
det(pulleys-6, the-5)
prep_through(slipping-3, pulleys-6)
advmod(rose-10, up-9)
conj_and(came-2, rose-10)
conj_and(came-2, rose-10')
conj_as(rose-10, rose-10')
det(stone-12, the-11)
dobj(rose-10, stone-12)
prep_from(rose-10, the-14)
prep_by(rose-10', magic-19)

(ROOT
  (S
    (ADVP (RB As) (RB soon)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBD came)
            (ADJP (JJ clear))
            (PP (IN of)
              (NP (DT the) (NN edge)))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD drew)
        (NP (PRP it))
        (PP (IN towards)
          (NP (PRP him))))
      (, ,)
      (VP (VBD lowered)
        (NP (PRP it))
        (PP (TO to)
          (NP (DT the) (NN ground))))
      (, ,)
      (VP (VBD took)
        (PRT (RP off))
        (NP (PRP$ its) (NN rope) (NN collar)))
      (, ,)
      (CC and)
      (VP (VBD rolled)
        (NP (PRP it))
        (PRT (RP out))
        (PP (IN of)
          (NP (DT the) (NN doorway)))))
    (. .)))

advmod(soon-2, As-1)
advmod(drew-12, soon-2)
mark(came-5, as-3)
nsubj(came-5, it-4)
ccomp(soon-2, came-5)
acomp(came-5, clear-6)
det(edge-9, the-8)
prep_of(came-5, edge-9)
nsubj(drew-12, he-11)
nsubj(lowered-17, he-11)
nsubj(took-23, he-11)
nsubj(rolled-30, he-11)
root(ROOT-0, drew-12)
dobj(drew-12, it-13)
prep_towards(drew-12, him-15)
conj_and(drew-12, lowered-17)
dobj(lowered-17, it-18)
det(ground-21, the-20)
prep_to(lowered-17, ground-21)
conj_and(drew-12, took-23)
prt(took-23, off-24)
poss(collar-27, its-25)
nn(collar-27, rope-26)
dobj(took-23, collar-27)
conj_and(drew-12, rolled-30)
dobj(rolled-30, it-31)
det(doorway-35, the-34)
prep_out_of(rolled-30, doorway-35)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD got)
        (PP (IN into)
          (NP (DT the) (NN well)))
        (ADVP (RB again)))
      (, ,)
      (VP (VBD tied)
        (NP (DT the) (NN collar))
        (PP (IN about)
          (NP (DT another) (NN stone))))
      (, ,)
      (VP (VBD drew)
        (PRT (RP down))
        (NP (DT the) (NN pulley)))
      (, ,)
      (VP (VBD thrust)
        (NP (PRP$ its) (NN hook))
        (PP (IN through)
          (NP (DT the) (NN collar))))
      (, ,)
      (VP (VBD got)
        (PRT (RP out))
        (PP (IN of)
          (NP (DT the) (NN well))))
      (, ,)
      (CC and)
      (VP (VBD hauled)
        (PRT (RP up))
        (NP (DT the) (JJ second) (NN stone))))
    (. .)))

advmod(got-3, Then-1)
nsubj(got-3, he-2)
nsubj(tied-9, he-2)
nsubj(drew-16, he-2)
nsubj(thrust-21, he-2)
nsubj(got-28, he-2)
nsubj(hauled-35, he-2)
root(ROOT-0, got-3)
det(well-6, the-5)
prep_into(got-3, well-6)
advmod(got-3, again-7)
conj_and(got-3, tied-9)
det(collar-11, the-10)
dobj(tied-9, collar-11)
det(stone-14, another-13)
prep_about(tied-9, stone-14)
conj_and(got-3, drew-16)
prt(drew-16, down-17)
det(pulley-19, the-18)
dobj(drew-16, pulley-19)
conj_and(got-3, thrust-21)
poss(hook-23, its-22)
dobj(thrust-21, hook-23)
det(collar-26, the-25)
prep_through(thrust-21, collar-26)
conj_and(got-3, got-28)
det(well-32, the-31)
prep_out_of(got-28, well-32)
conj_and(got-3, hauled-35)
prt(hauled-35, up-36)
det(stone-39, the-37)
amod(stone-39, second-38)
dobj(hauled-35, stone-39)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN way)))
    (NP (PRP he))
    (VP (VBD had)
      (ADVP (RB soon))
      (VP (VBN got)
        (PRT (RP out))
        (ADVP
          (ADVP (RB so) (JJ many))
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD was)
                (VP (VBG standing)
                  (ADVP (RB far)
                    (PP (IN above)
                      (NP (PRP$ his) (NNS ankles))))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN water))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBD was)
                            (ADJP (RB so) (JJ cold))
                            (SBAR (IN that)
                              (S
                                (NP (PRP he))
                                (VP (VBD was)
                                  (ADJP (JJ glad)
                                    (S
                                      (VP (TO to)
                                        (VP (VB get)
                                          (PRT (RP out))
                                          (S
                                            (VP (TO to)
                                              (VP (VB pull)
                                                (PRT (RP up))
                                                (NP (DT every) (NN stone))))))))))))))))))))))))
    (. .)))

det(way-3, this-2)
prep_in(got-7, way-3)
nsubj(got-7, he-4)
aux(got-7, had-5)
advmod(got-7, soon-6)
root(ROOT-0, got-7)
prt(got-7, out-8)
advmod(many-10, so-9)
advmod(got-7, many-10)
mark(standing-14, that-11)
nsubj(standing-14, he-12)
aux(standing-14, was-13)
advcl(many-10, standing-14)
ccomp(many-10, standing-14)
advmod(standing-14, far-15)
poss(ankles-18, his-17)
prep_above(far-15, ankles-18)
det(water-21, the-20)
prep_in(standing-14, water-21)
nsubj(cold-26, water-21)
cop(cold-26, was-24)
advmod(cold-26, so-25)
rcmod(water-21, cold-26)
mark(glad-30, that-27)
nsubj(glad-30, he-28)
nsubj(get-32, he-28)
nsubj(pull-35, he-28)
cop(glad-30, was-29)
ccomp(cold-26, glad-30)
aux(get-32, to-31)
xcomp(glad-30, get-32)
prt(get-32, out-33)
aux(pull-35, to-34)
xcomp(get-32, pull-35)
prt(pull-35, up-36)
det(stone-38, every-37)
dobj(pull-35, stone-38)

(ROOT
  (S
    (PP (IN By)
      (NP (DT this) (NN time)))
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB perfectly))
      (VP (VBN explained)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (DT the) (NN water))
            (VP (VBD made)
              (NP (DT a) (NN noise))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP he))
                  (VP (VBD saw)
                    (S
                      (NP (PRP it))
                      (VP (VB escape)
                        (PP (IN by)
                          (NP
                            (NP (DT an) (NN opening))
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NN side))
                                (PP (IN of)
                                  (NP (DT the) (NN well)))))))))))))))))
    (. .)))

det(time-3, this-2)
agent(explained-7, time-3)
nsubjpass(explained-7, it-4)
auxpass(explained-7, was-5)
advmod(explained-7, perfectly-6)
root(ROOT-0, explained-7)
advmod(made-11, how-8)
det(water-10, the-9)
nsubj(made-11, water-10)
ccomp(explained-7, made-11)
det(noise-13, a-12)
dobj(made-11, noise-13)
mark(saw-17, for-15)
nsubj(saw-17, he-16)
advcl(made-11, saw-17)
nsubj(escape-19, it-18)
ccomp(saw-17, escape-19)
det(opening-22, an-21)
prep_by(escape-19, opening-22)
det(side-25, the-24)
prep_in(opening-22, side-25)
det(well-28, the-27)
prep_of(side-25, well-28)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD came)
        (PP (IN at)
          (NP (JJ last)))
        (PP (TO to)
          (NP
            (NP (DT a) (JJ huge) (NN stone))
            (, ,)
            (NP
              (NP (NN round))
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (PP (IN with)
                      (NP (NN difficulty)))))))))))
    (NP (PRP he))
    (VP (VBD managed)
      (S
        (VP (TO to)
          (VP (VB fasten)
            (NP (DT the) (NN rope))))))
    (. .)))

nsubj(came-2, He-1)
dep(managed-17, came-2)
prep_at(came-2, last-4)
det(stone-8, a-6)
amod(stone-8, huge-7)
prep_to(came-2, stone-8)
appos(stone-8, round-10)
dobj(was-13, round-10)
nsubj(was-13, it-12)
rcmod(round-10, was-13)
prep_with(was-13, difficulty-15)
nsubj(managed-17, he-16)
nsubj(fasten-19, he-16)
root(ROOT-0, managed-17)
aux(fasten-19, to-18)
xcomp(managed-17, fasten-19)
det(rope-21, the-20)
dobj(fasten-19, rope-21)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP
            (VP (VB pull)
              (PRT (RP away))
              (NP (JJR smaller) (NNS stones))
              (PP (IN from)
                (PP (IN beneath)
                  (NP (PRP it)))))
            (, ,)
            (CC and)
            (VP (VB pass)
              (NP (DT the) (NN rope))
              (PP (IN through)
                (PP (IN under)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(had-2, He-1)
nsubj(pull-4, He-1)
nsubj(pass-13, He-1)
root(ROOT-0, had-2)
aux(pull-4, to-3)
xcomp(had-2, pull-4)
prt(pull-4, away-5)
amod(stones-7, smaller-6)
dobj(pull-4, stones-7)
prep(pull-4, from-8)
pcomp(from-8, beneath-9)
pobj(beneath-9, it-10)
xcomp(had-2, pass-13)
conj_and(pull-4, pass-13)
det(rope-15, the-14)
dobj(pass-13, rope-15)
prep(pass-13, through-16)
pcomp(through-16, under-17)
pobj(under-17, it-18)

(ROOT
  (S
    (S
      (S
        (VP (VBG Having)
          (VP (VBN lifted)
            (S
              (NP (PRP it))
              (NP
                (NP (DT a) (JJ little) (NN way))
                (PP (IN with)
                  (NP
                    (NP (DT the) (JJ powerful) (NN help))
                    (PP (IN of)
                      (NP (PRP$ his) (NN tackle))))))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB try)
                    (SBAR (IN if)
                      (S
                        (NP (DT all))
                        (VP (VBD was)
                          (ADJP (JJ right))
                          (SBAR (IN before)
                            (S
                              (NP (PRP he))
                              (VP (VBD got)
                                (PRT (RP out))
                                (S
                                  (VP (TO to)
                                    (VP (VB haul)
                                      (PP (IN in)
                                        (NP (NN earnest)))))))))))))))))))
      (, ,)
      (NP (PRP he))
      (VP
        (VP (VBD saw)
          (SBAR (IN that)
            (S
              (NP (PRP$ his) (NN knot))
              (VP (VBD was)
                (VP (VBG slipping))))))
        (, ,)
        (CC and)
        (VP (VBD lowered)
          (NP (DT the) (NN stone))
          (ADVP (RB again) (RB so) (RB as))
          (S
            (VP (TO to)
              (VP (VB set)
                (NP (PRP it))
                (PP (IN on)
                  (NP (CD one) (NN end)))
                (, ,)
                (S
                  (VP (VBG leaning)
                    (PP (IN against)
                      (NP
                        (NP (DT the) (NN side))
                        (PP (IN of)
                          (NP (DT the) (NN well)))))))))))
        (: --)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD discovered)
              (SBAR (IN that)
                (S
                  (NP (PRP$ his) (NN rope) (NN collar))
                  (VP (VBD had)
                    (VP (VBN got)
                      (S
                        (ADJP (RB so) (JJ frayed)))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP
                            (NP (CD one))
                            (PP (IN of)
                              (NP (DT the) (NNS strands))))
                          (VP (VBD was)
                            (VP (VBN cut)
                              (PP (IN through)))))))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (MD would)
        (ADVP (RB probably))
        (VP (VB break)
          (CC and)
          (VB let)
          (NP (DT the) (NN stone) (NN fall))
          (PP
            (ADVP (RB again))
            (IN into)
            (NP
              (NP (DT the) (NN well))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP he))
                  (VP (MD would)
                    (ADVP (RB still))
                    (ADVP (RBR more) (RB probably))
                    (VP (VB tumble)
                      (PP (IN after)
                        (NP (PRP it))))))))))))
    (. .)))

aux(lifted-2, Having-1)
vmod(saw-31, lifted-2)
nsubj(try-16, it-3)
det(way-6, a-4)
amod(way-6, little-5)
dep(try-16, way-6)
det(help-10, the-8)
amod(help-10, powerful-9)
prep_with(way-6, help-10)
poss(tackle-13, his-12)
prep_of(help-10, tackle-13)
aux(try-16, to-15)
xcomp(lifted-2, try-16)
mark(right-20, if-17)
nsubj(right-20, all-18)
cop(right-20, was-19)
advcl(try-16, right-20)
mark(got-23, before-21)
nsubj(got-23, he-22)
nsubj(haul-26, he-22)
advcl(right-20, got-23)
prt(got-23, out-24)
aux(haul-26, to-25)
xcomp(got-23, haul-26)
prep_in(haul-26, earnest-28)
nsubj(saw-31, he-30)
nsubj(lowered-39, he-30)
root(ROOT-0, saw-31)
mark(slipping-36, that-32)
poss(knot-34, his-33)
nsubj(slipping-36, knot-34)
aux(slipping-36, was-35)
ccomp(saw-31, slipping-36)
conj_and(saw-31, lowered-39)
det(stone-41, the-40)
dobj(lowered-39, stone-41)
advmod(as-44, again-42)
advmod(as-44, so-43)
advmod(lowered-39, as-44)
aux(set-46, to-45)
vmod(lowered-39, set-46)
dobj(set-46, it-47)
num(end-50, one-49)
prep_on(set-46, end-50)
vmod(set-46, leaning-52)
det(side-55, the-54)
prep_against(leaning-52, side-55)
det(well-58, the-57)
prep_of(side-55, well-58)
advmod(discovered-62, when-60)
nsubj(discovered-62, he-61)
conj_and(saw-31, discovered-62)
mark(got-68, that-63)
poss(collar-66, his-64)
nn(collar-66, rope-65)
nsubj(got-68, collar-66)
aux(got-68, had-67)
ccomp(discovered-62, got-68)
advmod(frayed-70, so-69)
acomp(got-68, frayed-70)
mark(cut-78, that-72)
nsubjpass(cut-78, one-73)
det(strands-76, the-75)
prep_of(one-73, strands-76)
auxpass(cut-78, was-77)
ccomp(got-68, cut-78)
prep(cut-78, through-79)
nsubj(break-84, it-81)
nsubj(let-86, it-81)
aux(break-84, would-82)
advmod(break-84, probably-83)
parataxis(saw-31, break-84)
parataxis(saw-31, let-86)
conj_and(break-84, let-86)
det(fall-89, the-87)
nn(fall-89, stone-88)
tmod(break-84, fall-89)
advmod(break-84, again-90)
det(well-93, the-92)
prep_into(break-84, well-93)
tmod(tumble-101, well-93)
advmod(tumble-101, when-95)
nsubj(tumble-101, he-96)
aux(tumble-101, would-97)
advmod(tumble-101, still-98)
advmod(probably-100, more-99)
advmod(tumble-101, probably-100)
rcmod(well-93, tumble-101)
prep_after(tumble-101, it-103)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (VP (VBG getting)
          (ADJP (JJ tired) (RB too)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (VP (VBG growing)
          (ADJP (RB very) (JJ dusky)
            (PP (IN in)
              (NP (DT the) (NNS ruins)))))))
    (. .)))

nsubj(tired-4, He-1)
aux(tired-4, was-2)
dep(tired-4, getting-3)
root(ROOT-0, tired-4)
advmod(tired-4, too-5)
nsubj(growing-10, it-8)
aux(growing-10, was-9)
conj_and(tired-4, growing-10)
advmod(dusky-12, very-11)
acomp(growing-10, dusky-12)
det(ruins-15, the-14)
prep_in(dusky-12, ruins-15)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD thought)
        (NP (PRP it))
        (ADVP (RBR better))
        (S
          (VP (TO to)
            (VP (VB postpone)
              (NP (JJ further) (NNS proceedings))))))
      (, ,)
      (CC and)
      (VP
        (S
          (VP (VBG getting)
            (PRT (RP out))
            (PP (IN of)
              (NP (DT the) (NN well)))))
        (, ,)
        (VP (VBD caught)
          (PRT (RP up))
          (NP (PRP$ his) (NNS shoes)
            (CC and)
            (NNS stockings))))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PP (IN into)
          (NP (DT the) (NN house)))))
    (. .)))

nsubj(thought-2, He-1)
nsubj(caught-17, He-1)
nsubj(went-25, He-1)
root(ROOT-0, thought-2)
dobj(thought-2, it-3)
advmod(thought-2, better-4)
aux(postpone-6, to-5)
vmod(thought-2, postpone-6)
amod(proceedings-8, further-7)
dobj(postpone-6, proceedings-8)
xcomp(caught-17, getting-11)
det(well-15, the-14)
prep_out_of(getting-11, well-15)
conj_and(thought-2, caught-17)
prt(caught-17, up-18)
poss(shoes-20, his-19)
dobj(caught-17, shoes-20)
dobj(caught-17, stockings-22)
conj_and(shoes-20, stockings-22)
conj_and(thought-2, went-25)
det(house-28, the-27)
prep_into(went-25, house-28)

(ROOT
  (NP (NNP CHAPTER) (NNP IX) (. .)))

nn(IX-2, CHAPTER-1)
root(ROOT-0, IX-2)

(ROOT
  (NP (NNP A) (NNP MARVEL) (. .)))

nn(MARVEL-2, A-1)
root(ROOT-0, MARVEL-2)

(ROOT
  (S
    (NP
      (NP
        (NP (RB Early) (DT the) (JJ next) (NN morning))
        (NP (NNP Mr) (NNP Macmichael)))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD was)
            (VP
              (VP (VBN dressing))
              (, ,)
              (VP (VBN heard)
                (NP
                  (NP (DT a) (NN laugh))
                  (PP (IN of)
                    (NP (JJ strange) (NN delight))))
                (PP (IN in)
                  (NP (DT the) (NN garden))))
              (, ,)
              (CC and)
              (, ,)
              (VP (NN drawing)
                (PRT (RP up))
                (NP (DT the) (JJ blind)))))))
      (, ,))
    (VP (VBD looked)
      (PRT (RP out)))
    (. .)))

advmod(morning-4, Early-1)
det(morning-4, the-2)
amod(morning-4, next-3)
nsubj(looked-30, morning-4)
nn(Macmichael-6, Mr-5)
dep(morning-4, Macmichael-6)
mark(dressing-11, as-8)
nsubjpass(dressing-11, he-9)
nsubjpass(heard-13, he-9)
auxpass(dressing-11, was-10)
dep(morning-4, dressing-11)
dep(morning-4, heard-13)
conj_and(dressing-11, heard-13)
det(laugh-15, a-14)
dobj(heard-13, laugh-15)
amod(delight-18, strange-17)
prep_of(laugh-15, delight-18)
det(garden-21, the-20)
prep_in(heard-13, garden-21)
dep(morning-4, drawing-25)
conj_and(dressing-11, drawing-25)
prt(drawing-25, up-26)
det(blind-28, the-27)
dobj(drawing-25, blind-28)
root(ROOT-0, looked-30)
prt(looked-30, out-31)

(ROOT
  (S
    (NP (EX There))
    (, ,)
    (ADVP
      (NP (DT some) (NN distance))
      (RB off))
    (, ,)
    (VP (VBD stood)
      (NP
        (NP (NNP Willie))
        (, ,)
        (NP
          (NP (DT the) (CD one) (NN moment))
          (VP
            (VP (VBG staring)
              (NP
                (NP (NNS motionless))
                (PP (IN at)
                  (NP (NN something))))
              (PP (IN at)
                (NP
                  (NP (PRP$ his) (NNS feet))
                  (, ,)
                  (NP (DT the) (JJ other) (NN dancing)))))
            (CC and)
            (VP (VBG skipping)
              (CC and)
              (VBG singing)))))
      (, ,)
      (CC but)
      (ADVP (RB still))
      (S
        (VP (VBG looking)
          (PRT (RP down))
          (PP (IN at)
            (NP (NN something)))
          (PP (IN at)
            (NP (PRP$ his) (NNS feet))))))
    (. .)))

expl(stood-7, There-1)
det(distance-4, some-3)
npadvmod(off-5, distance-4)
advmod(stood-7, off-5)
root(ROOT-0, stood-7)
dobj(stood-7, Willie-8)
nsubj(stood-7, Willie-8)
nsubj(looking-31, Willie-8)
det(moment-12, the-10)
num(moment-12, one-11)
appos(Willie-8, moment-12)
dep(moment-12, staring-13)
dobj(staring-13, motionless-14)
prep_at(motionless-14, something-16)
poss(feet-19, his-18)
prep_at(staring-13, feet-19)
det(dancing-23, the-21)
amod(dancing-23, other-22)
appos(feet-19, dancing-23)
dep(moment-12, skipping-25)
conj_and(staring-13, skipping-25)
conj_and(staring-13, singing-27)
conj_and(skipping-25, singing-27)
advmod(looking-31, still-30)
conj_but(stood-7, looking-31)
xcomp(stood-7, looking-31)
prt(looking-31, down-32)
prep_at(looking-31, something-34)
poss(feet-37, his-36)
prep_at(looking-31, feet-37)

(ROOT
  (S
    (NP (PRP$ His) (NN father))
    (VP (MD could) (RB not)
      (VP (VB see)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT this) (NN something))
            (VP
              (VP (VBD was))
              (PRN (, ,)
                (SBAR (IN for)
                  (S
                    (NP (NNP Willie))
                    (VP (VBD was)
                      (PP (IN on)
                        (NP
                          (NP (DT the) (JJ other) (NN side))
                          (PP (IN of)
                            (NP
                              (NP (CD one))
                              (PP (IN of)
                                (NP (DT the) (NNS mounds))))))))))
                (, ,))
              (CC and)
              (VP (VBD was)
                (VP (VBG turning)
                  (PRT (RP away))
                  (S
                    (VP (TO to)
                      (VP (VB finish)
                        (NP (PRP$ his) (NN dressing)))))))
              (, ,)
              (SBAR
                (WHADVP (WRB when)
                  (PP (IN from)
                    (NP (DT another) (NN direction))))
                (S
                  (NP (DT a) (JJ peculiar) (NN glitter))
                  (VP (VBD caught)
                    (NP (PRP$ his) (NN eye))))))))))
    (. .)))

poss(father-2, His-1)
nsubj(see-5, father-2)
aux(see-5, could-3)
neg(see-5, not-4)
root(ROOT-0, see-5)
dobj(was-9, what-6)
det(something-8, this-7)
nsubj(was-9, something-8)
nsubj(turning-26, something-8)
nsubj(finish-29, something-8)
ccomp(see-5, was-9)
mark(was-13, for-11)
nsubj(was-13, Willie-12)
parataxis(was-9, was-13)
parataxis(turning-26, was-13)
det(side-17, the-15)
amod(side-17, other-16)
prep_on(was-13, side-17)
prep_of(side-17, one-19)
det(mounds-22, the-21)
prep_of(one-19, mounds-22)
aux(turning-26, was-25)
ccomp(see-5, turning-26)
conj_and(was-9, turning-26)
prt(turning-26, away-27)
aux(finish-29, to-28)
xcomp(turning-26, finish-29)
poss(dressing-31, his-30)
dobj(finish-29, dressing-31)
advmod(caught-40, when-33)
det(direction-36, another-35)
prep_from(when-33, direction-36)
det(glitter-39, a-37)
amod(glitter-39, peculiar-38)
nsubj(caught-40, glitter-39)
advcl(was-9, caught-40)
poss(eye-42, his-41)
dobj(caught-40, eye-42)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (MD can)
      (NP (DT this))
      (VP (VB mean)))
    (. ?) ('' '')))

dobj(mean-5, What-2)
aux(mean-5, can-3)
nsubj(mean-5, this-4)
root(ROOT-0, mean-5)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said)
      (PP (TO to)
        (NP (PRP himself))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
prep_to(said-2, himself-4)

(ROOT
  (NP
    (NP (`` ``) (NNP Water))
    (PP (IN in)
      (NP (DT the) (NN garden)))
    (. !)))

root(ROOT-0, Water-2)
det(garden-5, the-4)
prep_in(Water-2, garden-5)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (VP (VBN been)
          (NP (DT no) (NN rain)))))
    (: ;)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (ADJP (DT neither) (JJ river)
          (CC nor)
          (JJ reservoir)
          (PP (TO to)
            (NP (NN overflow))))))
    (. !)))

expl(rain-5, There-1)
auxpass(rain-5, 's-2)
cop(rain-5, been-3)
neg(rain-5, no-4)
root(ROOT-0, rain-5)
expl('s-9, there-8)
conj_and(rain-5, 's-9)
preconj(river-11, neither-10)
acomp('s-9, river-11)
acomp('s-9, reservoir-13)
conj_nor(river-11, reservoir-13)
prep_to(river-11, overflow-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB hardly))
      (VP (VB believe)
        (NP (PRP$ my) (NNS eyes))))
    (. !) ('' '')))

nsubj(believe-4, I-1)
aux(believe-4, can-2)
advmod(believe-4, hardly-3)
root(ROOT-0, believe-4)
poss(eyes-6, my-5)
dobj(believe-4, eyes-6)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBN hurried)
        (PP (IN on)
          (NP
            (NP (DT the) (NN remainder))
            (PP (IN of)
              (NP (PRP$ his) (NNS clothes))))))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PRT (RP out))))
    (. .)))

nsubj(hurried-2, He-1)
nsubj(went-11, He-1)
root(ROOT-0, hurried-2)
det(remainder-5, the-4)
prep_on(hurried-2, remainder-5)
poss(clothes-8, his-7)
prep_of(remainder-5, clothes-8)
conj_and(hurried-2, went-11)
prt(went-11, out-12)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD had) (RB not)
      (VP (VBN gone)
        (NP (JJ many) (NNS steps))
        (SBAR
          (WHADVP (WRB when))
          (S
            (SBAR
              (WHNP (WP what))
              (S
                (VP (MD should))))
            (NP (PRP he))
            (VP (VBP meet)
              (PP (CC but)
                (NP
                  (NP (DT a) (JJ merry) (JJ little) (NN brook))
                  (VP (VBG coming)
                    (S
                      (VP (VBG cantering)
                        (PRT (RP down))
                        (PP (IN between)
                          (NP
                            (NP (CD two))
                            (PP (IN of)
                              (NP (DT the) (NNS mounds)))))))))))))))
    (. !)))

cc(gone-5, But-1)
nsubj(gone-5, he-2)
aux(gone-5, had-3)
neg(gone-5, not-4)
root(ROOT-0, gone-5)
amod(steps-7, many-6)
dobj(gone-5, steps-7)
advmod(meet-12, when-8)
nsubj(should-10, what-9)
advcl(meet-12, should-10)
nsubj(meet-12, he-11)
advcl(gone-5, meet-12)
prep(meet-12, but-13)
det(brook-17, a-14)
amod(brook-17, merry-15)
amod(brook-17, little-16)
pobj(but-13, brook-17)
vmod(brook-17, coming-18)
vmod(coming-18, cantering-19)
prt(cantering-19, down-20)
prep_between(cantering-19, two-22)
det(mounds-25, the-24)
prep_of(two-22, mounds-25)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD had)
      (ADVP (RB already))
      (VP (VBN worn)
        (S
          (NP (PRP itself))
          (NP
            (NP (DT a) (NN channel))
            (PP (IN in)
              (NP (DT the) (NN path)))))))
    (. .)))

nsubj(worn-4, It-1)
aux(worn-4, had-2)
advmod(worn-4, already-3)
root(ROOT-0, worn-4)
nsubj(channel-7, itself-5)
det(channel-7, a-6)
xcomp(worn-4, channel-7)
det(path-10, the-9)
prep_in(channel-7, path-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD followed)
      (NP (PRP it))
      (PRT (RP up))
      (, ,)
      (S
        (VP (VBG wondering)
          (NP (RB much))))
      (, ,)
      (S
        (VP
          (VP (VBN bewildered)
            (ADVP (RB indeed)))
          (: ;)
          (CC and)
          (VP (VBD had)
            (VP (VBN got)
              (PP (TO to)
                (NP (DT a) (JJ little)
                  (ADJP (RB turfy) (JJ hollow))))
              (, ,)
              (PP (IN down)
                (NP
                  (NP (DT the) (NN middle))
                  (SBAR
                    (WHPP (IN of)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP it))
                      (VP (VBD came)
                        (S
                          (VP
                            (VP (VBG bubbling))
                            (CC and)
                            (VP (VBG gabbling)
                              (PRT (RP along))))))))))))))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NNP Willie))
          (VP
            (VP (VBD caught)
              (NP
                (NP (NN sight))
                (PP (IN of)
                  (NP (PRP him)))))
            (, ,)
            (CC and)
            (VP (VBD bounded)
              (S
                (VP (TO to)
                  (VP (VB meet)
                    (NP (PRP him))
                    (PP (IN with)
                      (NP
                        (NP (DT a)
                          (ADJP
                            (ADJP (JJ radiant) (JJ countenance))
                            (CC and)
                            (ADJP (RB almost) (JJ inarticulate)))
                          (NN cries))
                        (PP (IN of)
                          (NP (NN delight)))))))))))))
    (. .)))

nsubj(followed-2, He-1)
root(ROOT-0, followed-2)
dobj(followed-2, it-3)
prt(followed-2, up-4)
xcomp(followed-2, wondering-6)
dobj(wondering-6, much-7)
dep(followed-2, bewildered-9)
advmod(bewildered-9, indeed-10)
aux(got-14, had-13)
dep(followed-2, got-14)
conj_and(bewildered-9, got-14)
det(hollow-19, a-16)
amod(hollow-19, little-17)
advmod(hollow-19, turfy-18)
prep_to(got-14, hollow-19)
det(middle-23, the-22)
prep_down(got-14, middle-23)
prep_of(came-27, middle-23)
nsubj(came-27, it-26)
rcmod(middle-23, came-27)
ccomp(came-27, bubbling-28)
ccomp(came-27, gabbling-30)
conj_and(bubbling-28, gabbling-30)
prt(gabbling-30, along-31)
advmod(caught-35, when-33)
nsubj(caught-35, Willie-34)
nsubj(bounded-41, Willie-34)
nsubj(meet-43, Willie-34)
advcl(followed-2, caught-35)
dobj(caught-35, sight-36)
prep_of(sight-36, him-38)
advcl(followed-2, bounded-41)
conj_and(caught-35, bounded-41)
aux(meet-43, to-42)
xcomp(bounded-41, meet-43)
dobj(meet-43, him-44)
det(cries-52, a-46)
amod(countenance-48, radiant-47)
amod(cries-52, countenance-48)
advmod(inarticulate-51, almost-50)
conj_and(countenance-48, inarticulate-51)
amod(cries-52, inarticulate-51)
prep_with(meet-43, cries-52)
prep_of(cries-52, delight-54)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Am) (NNP I) (NNP awake))
    (, ,)
    (NP (NNP Willie))
    (. ?)))

nn(awake-4, Am-2)
nn(awake-4, I-3)
root(ROOT-0, awake-4)
dep(awake-4, Willie-6)

(ROOT
  (SQ (CC or)
    (MD am)
    (NP (PRP I))
    (VP (VB dreaming))
    (. ?) ('' '')))

cc(dreaming-4, or-1)
aux(dreaming-4, am-2)
nsubj(dreaming-4, I-3)
root(ROOT-0, dreaming-4)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)

(ROOT
  (SINV (`` ``)
    (NP
      (NP (NNP Wide) (NNP awake))
      (, ,)
      (NP (NN papa)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (. .)))

nn(awake-3, Wide-2)
dep(answered-8, awake-3)
appos(awake-3, papa-5)
root(ROOT-0, answered-8)
nsubj(answered-8, Willie-9)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (WDT what))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN meaning))
        (PP (IN of)
          (NP (DT this)))))
    (. ?)))

advmod(meaning-6, Then-2)
nsubj(meaning-6, what-3)
cop(meaning-6, is-4)
det(meaning-6, the-5)
root(ROOT-0, meaning-6)
prep_of(meaning-6, this-8)

(ROOT
  (S
    (VP (VB _)
      (SBAR
        (S
          (NP (PRP You))
          (ADVP (RB _))
          (VP (VBP seem)
            (S
              (VP (TO to)
                (VP (VB be)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN secret))
                      (: :)
                      (SBARQ
                        (WHADVP (WRB where))
                        (SQ (VBZ does)
                          (NP (DT this) (NN water))
                          (VP (VB come)
                            (PP (IN from))))
                        (. ?)))))))))))))

root(ROOT-0, _-1)
nsubj(seem-4, You-2)
nsubj(be-6, You-2)
advmod(seem-4, _-3)
ccomp(_-1, seem-4)
aux(be-6, to-5)
xcomp(seem-4, be-6)
det(secret-9, the-8)
prep_in(be-6, secret-9)
advmod(come-15, where-11)
aux(come-15, does-12)
det(water-14, this-13)
nsubj(come-15, water-14)
dep(secret-9, come-15)
prep(come-15, from-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP feel)
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP I))
          (VP (VBD were)
            (PP (IN in)
              (NP (DT a) (NN fairy) (NN tale)))))))
    (. .) ('' '')))

nsubj(feel-2, I-1)
root(ROOT-0, feel-2)
advmod(were-6, as-3)
mark(were-6, if-4)
nsubj(were-6, I-5)
advcl(feel-2, were-6)
det(tale-10, a-8)
nn(tale-10, fairy-9)
prep_in(were-6, tale-10)

(ROOT
  (S (`` ``)
    (S
      (VP (VBZ Is) (RB n't)
        (NP (PRP it))))
    (VP (VBZ lovely))
    (. ?) ('' '')))

cop(it-4, Is-2)
neg(it-4, n't-3)
csubj(lovely-5, it-4)
root(ROOT-0, lovely-5)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Willie-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB show)
        (NP (PRP you))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP it))
            (VP (VBZ comes)
              (PP (IN from)))))))
    (. .)))

nsubj(show-4, I-2)
aux(show-4, 'll-3)
root(ROOT-0, show-4)
dobj(show-4, you-5)
advmod(comes-8, where-6)
nsubj(comes-8, it-7)
advcl(show-4, comes-8)
prep(comes-8, from-9)

(ROOT
  (NP (DT This) (NN way) (. .)))

det(way-2, This-1)
root(ROOT-0, way-2)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD 'll)
      (VP (VB spoil)
        (NP (PRP$ your) (NNS boots))
        (ADVP (RB there))))
    (. .)))

nsubj(spoil-3, You-1)
aux(spoil-3, 'll-2)
root(ROOT-0, spoil-3)
poss(boots-5, your-4)
dobj(spoil-3, boots-5)
advmod(spoil-3, there-6)

(ROOT
  (S
    (S
      (VP (VB Look)
        (PP (IN at)
          (NP (DT the) (NN rhubarb-bed)))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (VP (VBN turned)
          (PP (IN into)
            (NP (DT a) (NN swamp))))))
    (. .) ('' '')))

root(ROOT-0, Look-1)
det(rhubarb-bed-4, the-3)
prep_at(Look-1, rhubarb-bed-4)
nsubjpass(turned-8, it-6)
auxpass(turned-8, 's-7)
parataxis(Look-1, turned-8)
det(swamp-11, a-10)
prep_into(turned-8, swamp-11)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT The) (NN garden))
      (VP (MD will)
        (VP (VB be)
          (ADJP (VBN ruined)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN father))
    (. .)))

det(garden-3, The-2)
nsubjpass(ruined-6, garden-3)
aux(ruined-6, will-4)
auxpass(ruined-6, be-5)
ccomp(said-9, ruined-6)
root(ROOT-0, said-9)
poss(father-11, his-10)
nsubj(said-9, father-11)

(ROOT
  (S
    (FRAG
      (INTJ
        (INTJ (`` ``) (UH No))
        (, ,)
        (INTJ (UH no)))
      (, ,)
      (NP (NN papa)))
    (: ;)
    (S
      (NP (PRP we))
      (VP (MD wo) (RB n't)
        (VP (VB let)
          (S
            (NP (PRP it))
            (VP (VB come)
              (PP (TO to)
                (NP (DT that))))))))
    (. .)))

discourse(papa-6, No-2)
discourse(No-2, no-4)
dep(let-11, papa-6)
nsubj(let-11, we-8)
aux(let-11, wo-9)
neg(let-11, n't-10)
root(ROOT-0, let-11)
nsubj(come-13, it-12)
ccomp(let-11, come-13)
prep_to(come-13, that-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN been)
        (VP (VBG watching)
          (NP (PRP it)))))
    (. .)))

nsubj(watching-4, I-1)
aux(watching-4, 've-2)
aux(watching-4, been-3)
root(ROOT-0, watching-4)
dobj(watching-4, it-5)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (DT no) (NN soil))
        (VP (VBN carried)
          (PRT (RP away))
          (ADVP (RB yet)))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
neg(soil-4, no-3)
nsubj('s-2, soil-4)
vmod(soil-4, carried-5)
prt(carried-5, away-6)
advmod(carried-5, yet-7)

(ROOT
  (S
    (NP (NNP Do))
    (VP (VBP come)
      (CC and)
      (VBP see))
    (. .) ('' '')))

nsubj(come-2, Do-1)
nsubj(see-4, Do-1)
root(ROOT-0, come-2)
conj_and(come-2, see-4)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ mute) (NN astonishment)))
    (, ,)
    (NP (PRP$ his) (NN father))
    (VP (VBD followed))
    (. .)))

amod(astonishment-3, mute-2)
prep_in(followed-7, astonishment-3)
poss(father-6, his-5)
nsubj(followed-7, father-6)
root(ROOT-0, followed-7)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (ADVP (RB already))
          (VP (VBN described)
            (NP (PRP it))))))
    (PRN (, ,)
      (S
        (NP (DT the) (NN ground))
        (VP (VBD was)
          (ADJP (RB very) (JJ uneven))
          (, ,)
          (PP (IN with)
            (NP (JJ many) (NNS heights)
              (CC and)
              (NNS hollows)))))
      (, ,))
    (VP (VBP whence)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD came)
            (SBAR (IN that)
              (S
                (NP (DT the) (NN water))
                (VP
                  (VP (VBD took)
                    (NP
                      (NP (DT an) (JJ amazing) (NN number))
                      (PP (IN of)
                        (NP (NNS twists)))))
                  (CC and)
                  (VP (VBZ turns)))))))))
    (. .)))

mark(described-5, As-1)
nsubj(described-5, I-2)
aux(described-5, have-3)
advmod(described-5, already-4)
advcl(whence-20, described-5)
csubj(whence-20, described-5)
dobj(described-5, it-6)
det(ground-9, the-8)
nsubj(uneven-12, ground-9)
cop(uneven-12, was-10)
advmod(uneven-12, very-11)
parataxis(whence-20, uneven-12)
amod(heights-16, many-15)
prep_with(uneven-12, heights-16)
prep_with(uneven-12, hollows-18)
conj_and(heights-16, hollows-18)
root(ROOT-0, whence-20)
nsubj(came-22, it-21)
ccomp(whence-20, came-22)
mark(took-26, that-23)
det(water-25, the-24)
nsubj(took-26, water-25)
nsubj(turns-33, water-25)
ccomp(came-22, took-26)
det(number-29, an-27)
amod(number-29, amazing-28)
dobj(took-26, number-29)
prep_of(number-29, twists-31)
ccomp(came-22, turns-33)
conj_and(took-26, turns-33)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (VBD led)
        (NP (PRP$ his) (NN father))
        (PP (IN as) (RB straight))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (MD could))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB how) (RB often))
            (S
              (NP (PRP they))
              (VP (VBD crossed)
                (NP (DT the) (JJ little) (NN brook))
                (SBAR (IN before)
                  (S
                    (NP (PRP they))
                    (VP (VBD came)
                      (PP (TO to)
                        (SBAR
                          (WHADVP (WRB where))
                          (S (, ,)
                            (PP (IN from)
                              (NP (DT the) (JJ old) (NN stone) (NN shaft)))
                            (, ,)
                            (PP (IN like)
                              (NP
                                (NP (DT the) (NN crater))
                                (PP (IN of)
                                  (NP (DT a) (NN volcano)))))
                            (, ,)
                            (NP (PRP it))
                            (VP (VBD rolled)
                              (PP (IN over)
                                (NP
                                  (NP (DT the) (NN brim))
                                  (, ,)
                                  (NP
                                    (NP (DT an) (NN eruption))
                                    (PP (IN of)
                                      (NP (JJ cool) (, ,) (JJ clear) (, ,) (JJ lucid) (NN water)))))))))))))))))))
    (. .)))

nsubj(led-2, Willie-1)
root(ROOT-0, led-2)
poss(father-4, his-3)
dobj(led-2, father-4)
prep(led-2, as-5)
dep(as-5, straight-6)
mark(could-9, as-7)
nsubj(could-9, he-8)
advcl(led-2, could-9)
nsubj(know-15, I-12)
aux(know-15, do-13)
neg(know-15, n't-14)
conj_but(led-2, know-15)
advmod(often-17, how-16)
advmod(crossed-19, often-17)
nsubj(crossed-19, they-18)
ccomp(know-15, crossed-19)
det(brook-22, the-20)
amod(brook-22, little-21)
dobj(crossed-19, brook-22)
mark(came-25, before-23)
nsubj(came-25, they-24)
advcl(crossed-19, came-25)
advmod(rolled-43, where-27)
det(shaft-33, the-30)
amod(shaft-33, old-31)
nn(shaft-33, stone-32)
prep_from(rolled-43, shaft-33)
det(crater-37, the-36)
prep_like(rolled-43, crater-37)
det(volcano-40, a-39)
prep_of(crater-37, volcano-40)
nsubj(rolled-43, it-42)
prepc_to(came-25, rolled-43)
det(brim-46, the-45)
prep_over(rolled-43, brim-46)
det(eruption-49, an-48)
appos(brim-46, eruption-49)
amod(water-56, cool-51)
amod(water-56, clear-53)
amod(water-56, lucid-55)
prep_of(eruption-49, water-56)

(ROOT
  (S
    (ADVP (RB Plenteous))
    (NP (PRP it))
    (VP (VBD rose)
      (CC and)
      (VBD overflowed) (, ,)
      (PP (IN like)
        (NP (DT a)
          (ADJP (JJ dark)
            (CC yet)
            (JJ clear))
          (NN molten) (NN gem)))
      (, ,)
      (S
        (VP (VBG tumbling)
          (NP (PRP itself))
          (PP (IN into)
            (NP (DT the) (JJ open) (NN world))))))
    (. .)))

advmod(rose-3, Plenteous-1)
nsubj(rose-3, it-2)
nsubj(overflowed-5, it-2)
root(ROOT-0, rose-3)
conj_and(rose-3, overflowed-5)
det(gem-13, a-8)
amod(gem-13, dark-9)
conj_yet(dark-9, clear-11)
amod(gem-13, clear-11)
nn(gem-13, molten-12)
prep_like(rose-3, gem-13)
xcomp(rose-3, tumbling-15)
dobj(tumbling-15, itself-16)
det(world-20, the-18)
amod(world-20, open-19)
prep_into(tumbling-15, world-20)

(ROOT
  (S
    (SBAR
      (SBAR
        (WHADJP (WRB How)
          (ADJP (RB deliciously) (JJ wet)))
        (S
          (NP (PRP it))
          (VP (VBD looked)
            (PP (IN in)
              (NP (DT the) (NN shadow) (NN I))))))
      (: --)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP it))
          (VP (VBD caught)
            (NP (DT the) (NN sun))
            (NP (DT the) (NN moment))))))
    (NP (PRP it))
    (VP
      (VP
        (VP (VBD left)
          (NP (DT the) (NN chamber)))
        (, ,)
        (VP (VBD grew)
          (ADVP (RB merry)))
        (, ,)
        (CC and)
        (VP (VBN trotted)
          (CC and)
          (VBN trolled)))
      (CC and)
      (VP (VBD cantered)
        (PRT (RP along))))
    (. !)))

advmod(wet-3, How-1)
advmod(wet-3, deliciously-2)
dep(looked-5, wet-3)
nsubj(looked-5, it-4)
advcl(left-19, looked-5)
det(I-9, the-7)
nn(I-9, shadow-8)
prep_in(looked-5, I-9)
advmod(caught-13, how-11)
nsubj(caught-13, it-12)
dep(looked-5, caught-13)
det(sun-15, the-14)
iobj(caught-13, sun-15)
det(moment-17, the-16)
dobj(caught-13, moment-17)
nsubj(left-19, it-18)
nsubj(grew-23, it-18)
nsubj(trotted-27, it-18)
nsubj(cantered-31, it-18)
root(ROOT-0, left-19)
det(chamber-21, the-20)
dobj(left-19, chamber-21)
conj_and(left-19, grew-23)
advmod(grew-23, merry-24)
conj_and(left-19, trotted-27)
conj_and(left-19, trolled-29)
conj_and(trotted-27, trolled-29)
conj_and(left-19, cantered-31)
prt(cantered-31, along-32)

(ROOT
  (X (`` ``)
    (X
      (X (SYM Is))
      (NP
        (NP (DT this) (NN _))
        (NP (PRP$ your) (JJ _) (NN work))))
    (, ,)
    (X (SYM Willie))
    (. ?) ('' '')))

dep(_-4, Is-2)
det(_-4, this-3)
dep(Willie-9, _-4)
poss(work-7, your-5)
amod(work-7, _-6)
dep(_-4, work-7)
root(ROOT-0, Willie-9)

(ROOT
  (S
    (VP (VBD asked)
      (NP
        (NP (PRP$ his) (NN father))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD did) (RB not)
              (VP (VB know)
                (SBAR
                  (WHNP (WDT which))
                  (PP (IN of)
                    (NP (CD twenty) (NNS questions)))
                  (S
                    (VP (TO to)
                      (VP (VB ask)
                        (ADVP (RB first))))))))))))
    (. .)))

root(ROOT-0, asked-1)
poss(father-3, his-2)
dobj(asked-1, father-3)
nsubj(know-8, father-3)
aux(know-8, did-6)
neg(know-8, not-7)
rcmod(father-3, know-8)
nsubj(ask-14, which-9)
num(questions-12, twenty-11)
prep_of(ask-14, questions-12)
aux(ask-14, to-13)
ccomp(know-8, ask-14)
xcomp(know-8, ask-14)
advmod(ask-14, first-15)

(ROOT
  (SINV (`` ``)
    (FRAG
      (ADVP (RB Mostly)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

dep(said-5, Mostly-2)
root(ROOT-0, said-5)
nsubj(said-5, Willie-6)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (ADVP (RB little))
    (VP (VBD wizard))
    (. !)))

nsubj(wizard-4, You-2)
advmod(wizard-4, little-3)
root(ROOT-0, wizard-4)

(ROOT
  (SBARQ
    (WHNP (WP what))
    (SQ (VBP have)
      (NP (PRP you))
      (VP (VBN been)
        (ADJP (IN about))))
    (. ?)))

dobj(about-5, what-1)
aux(about-5, have-2)
nsubj(about-5, you-3)
cop(about-5, been-4)
root(ROOT-0, about-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB understand)
        (NP (PRP it))))
    (. .)))

nsubj(understand-4, I-1)
aux(understand-4, ca-2)
neg(understand-4, n't-3)
root(ROOT-0, understand-4)
dobj(understand-4, it-5)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (VP (VB make)
        (NP
          (NP (DT a) (NN drain))
          (PP (IN for)
            (NP (PRP it))))
        (PP (IN at)
          (NP (RB once)))))
    (. .) ('' '')))

nsubj(make-3, We-1)
aux(make-3, must-2)
root(ROOT-0, make-3)
det(drain-5, a-4)
dobj(make-3, drain-5)
prep_for(drain-5, it-7)
prep(make-3, at-8)
pobj(at-8, once-9)

(ROOT
  (S (`` ``)
    (ADVP (RB Bury))
    (NP (DT a) (NN beauty))
    (VP (VBP like)
      (NP
        (NP (DT that))
        (PP (IN in)
          (NP (DT a) (NN drain)))))
    (. !) ('' '')))

advmod(like-5, Bury-2)
det(beauty-4, a-3)
nsubj(like-5, beauty-4)
root(ROOT-0, like-5)
dobj(like-5, that-6)
det(drain-9, a-8)
prep_in(that-6, drain-9)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Willie-2)

(ROOT
  (S (`` ``)
    (VP (VB O)
      (NP (NN papa)))
    (. !) ('' '')))

root(ROOT-0, O-2)
dobj(O-2, papa-3)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (S
          (NP (WDT what))
          (ADJP (RB else))
          (S
            (VP (TO to)
              (VP (VB do)
                (PP (IN with)
                  (NP (PRP it)))))))))
    (. .)))

discourse(know-7, Well-2)
nsubj(know-7, I-4)
aux(know-7, do-5)
neg(know-7, n't-6)
root(ROOT-0, know-7)
nsubj(do-11, what-8)
dep(do-11, else-9)
aux(do-11, to-10)
xcomp(know-7, do-11)
prep_with(do-11, it-13)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (ADVP (RB never))
            (VP (VBD found)
              (NP (PRP$ its) (NN way))
              (PRT (RP out))
              (PP (IN before)
                (PRN (: --)
                  (NP
                    (NP (RB somewhere))
                    (CC or)
                    (NP (JJ other))))))))))
    (. ?) ('' '')))

advmod(is-2, How-1)
root(ROOT-0, is-2)
nsubj(is-2, it-3)
mark(found-7, that-4)
nsubj(found-7, it-5)
neg(found-7, never-6)
dep(it-3, found-7)
poss(way-9, its-8)
dobj(found-7, way-9)
prt(found-7, out-10)
prep(found-7, before-11)
dep(before-11, somewhere-13)
dep(before-11, other-15)
conj_or(somewhere-13, other-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (ADVP (RB soon))
        (VP (VB show)
          (S
            (NP (PRP you))
            (NP (DT that))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(show-5, I-2)
aux(show-5, 'll-3)
advmod(show-5, soon-4)
ccomp(said-10, show-5)
nsubj(that-7, you-6)
xcomp(show-5, that-7)
root(ROOT-0, said-10)
nsubj(said-10, Willie-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD 'll)
      (ADVP (RB soon))
      (VP (VB send)
        (NP (PRP it))
        (PP (IN about)
          (NP (PRP$ its) (NN business)))))
    (. .) ('' '')))

nsubj(send-5, I-2)
aux(send-5, 'll-3)
advmod(send-5, soon-4)
root(ROOT-0, send-5)
dobj(send-5, it-6)
poss(business-9, its-8)
prep_about(send-5, business-9)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (VP (VBN thought)
          (PRN (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP he))
                (ADVP (RB first))
                (VP (VBD saw)
                  (NP (DT the) (VBG issuing) (NN water)))))
            (, ,))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (NN weight))
                (PP (IN of)
                  (NP
                    (NP (DT the) (VBN fallen) (NNS stones))
                    (CC and)
                    (NP
                      (NP (DT the) (JJ hard) (NN covering))
                      (PP (IN of)
                        (NP
                          (NP (NN earth))
                          (VP (VBG being)
                            (VP (VBN removed)
                              (PRN (, ,)
                                (S
                                  (NP (DT the) (NN spring))
                                  (VP
                                    (VP (VBD had)
                                      (VP (VBN burst)
                                        (PRT (RP out))
                                        (PP (IN with)
                                          (NP (JJ tenfold) (NN volume)
                                            (CC and)
                                            (NN vigour)))))
                                    (: ;)
                                    (CC but)
                                    (VP (VBD had)
                                      (VP (VBN satisfied)
                                        (NP (PRP himself))
                                        (PP (IN by)
                                          (S
                                            (VP (VBG thinking)
                                              (PP (IN about)
                                                (NP (PRP it))))))))))
                                (, ,))
                              (SBAR (IN that)
                                (S
                                  (NP
                                    (NP (DT the) (NN cause))
                                    (PP (IN of)
                                      (NP (DT the) (NN overflow))))
                                  (VP (MD must)
                                    (VP (VB be)
                                      (NP
                                        (NP (DT the) (JJ great) (NN stone))
                                        (SBAR
                                          (S
                                            (NP (PRP he))
                                            (VP (VBD had)
                                              (VP (VBN set)
                                                (S
                                                  (VP (VBG leaning)
                                                    (PP (IN against)
                                                      (NP (DT the) (NN side)))
                                                    (NP
                                                      (NP (DT the) (JJ last) (NN thing))
                                                      (PP (IN before)
                                                        (S
                                                          (VP (VBG dropping))))))))))))))))))))))))
              (VP (VBP work)
                (NP (DT the) (JJ previous) (NN night))))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (MD must)
        (VP (VB have)
          (VP
            (VP (VBN blocked)
              (PRT (RP up))
              (NP (DT the) (NN opening)))
            (, ,)
            (CC and)
            (VP (VBN prevented)
              (NP (DT the) (NN water))
              (PP (IN from)
                (S
                  (VP
                    (VP (VBG getting)
                      (PRT (RP out))
                      (ADVP (RB as) (RB fast) (RB as)))
                    (PP (IN before) (, ,)
                      (INTJ (DT that) (VBZ is))
                      (, ,)
                      (ADVP (RB as) (RB fast)))
                    (SBAR (IN as)
                      (S
                        (NP (DT the) (NN spring))
                        (VP (VBD rose))))))))))))
    (. .)))

nsubj(thought-3, He-1)
aux(thought-3, had-2)
root(ROOT-0, thought-3)
advmod(saw-8, when-5)
nsubj(saw-8, he-6)
advmod(saw-8, first-7)
parataxis(thought-3, saw-8)
det(water-11, the-9)
amod(water-11, issuing-10)
dobj(saw-8, water-11)
mark(work-72, that-13)
det(weight-15, the-14)
nsubj(work-72, weight-15)
det(stones-19, the-17)
amod(stones-19, fallen-18)
prep_of(weight-15, stones-19)
det(covering-23, the-21)
amod(covering-23, hard-22)
prep_of(weight-15, covering-23)
conj_and(stones-19, covering-23)
prep_of(covering-23, earth-25)
auxpass(removed-27, being-26)
vmod(earth-25, removed-27)
det(spring-30, the-29)
nsubj(burst-32, spring-30)
nsubj(satisfied-42, spring-30)
aux(burst-32, had-31)
parataxis(removed-27, burst-32)
prt(burst-32, out-33)
amod(volume-36, tenfold-35)
prep_with(burst-32, volume-36)
prep_with(burst-32, vigour-38)
conj_and(volume-36, vigour-38)
aux(satisfied-42, had-41)
parataxis(removed-27, satisfied-42)
conj_but(burst-32, satisfied-42)
dobj(satisfied-42, himself-43)
prepc_by(satisfied-42, thinking-45)
prep_about(thinking-45, it-47)
mark(stone-59, that-49)
det(cause-51, the-50)
nsubj(stone-59, cause-51)
det(overflow-54, the-53)
prep_of(cause-51, overflow-54)
aux(stone-59, must-55)
cop(stone-59, be-56)
det(stone-59, the-57)
amod(stone-59, great-58)
ccomp(removed-27, stone-59)
nsubj(set-62, he-60)
aux(set-62, had-61)
rcmod(stone-59, set-62)
xcomp(set-62, leaning-63)
det(side-66, the-65)
prep_against(leaning-63, side-66)
det(thing-69, the-67)
amod(thing-69, last-68)
dobj(leaning-63, thing-69)
prepc_before(thing-69, dropping-71)
ccomp(thought-3, work-72)
det(night-75, the-73)
amod(night-75, previous-74)
tmod(work-72, night-75)
nsubj(blocked-80, it-77)
nsubj(prevented-86, it-77)
aux(blocked-80, must-78)
aux(blocked-80, have-79)
parataxis(thought-3, blocked-80)
prt(blocked-80, up-81)
det(opening-83, the-82)
dobj(blocked-80, opening-83)
parataxis(thought-3, prevented-86)
conj_and(blocked-80, prevented-86)
det(water-88, the-87)
dobj(prevented-86, water-88)
prepc_from(prevented-86, getting-90)
prt(getting-90, out-91)
advmod(as-94, as-92)
advmod(as-94, fast-93)
advmod(getting-90, as-94)
prep(getting-90, before-95)
discourse(before-95, that-97)
dep(that-97, is-98)
advmod(fast-101, as-100)
dep(before-95, fast-101)
mark(rose-105, as-102)
det(spring-104, the-103)
nsubj(rose-105, spring-104)
advcl(getting-90, rose-105)

(ROOT
  (SINV
    (S
      (ADVP (RB Therefore))
      (NP (PRP he))
      (ADVP (RB now))
      (VP (VBD laid)
        (SBAR
          (S
            (S
              (VP (VB hold)
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN rope))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBD was)
                          (ADVP (RB still))
                          (VP (VBN connected)
                            (PP (IN with)
                              (NP (DT the) (NN stone)))))))))))
            (, ,)
            (CC and)
            (, ,)
            (S
              (ADJP (RB not) (JJ aware)
                (PP (IN of)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (DT the) (NN water))
                      (VP (MD would)
                        (VP (VB help)
                          (NP (PRP him))
                          (PP (IN by)
                            (S
                              (ADVP (RB partly))
                              (VP (VBG floating)
                                (NP (PRP it))))))))))))))))
    (, ,)
    (VP (VBD was)
      (VP (VBN astonished)
        (S
          (VP (TO to)
            (VP (VB find)
              (SBAR
                (WHADVP (WRB how) (RB easily))
                (S
                  (NP (PRP he))
                  (VP (VBD moved)))))))))
    (NP (PRP it))
    (. .)))

advmod(laid-4, Therefore-1)
nsubj(laid-4, he-2)
advmod(laid-4, now-3)
ccomp(astonished-35, laid-4)
dep(laid-4, hold-5)
det(rope-8, the-7)
prep_of(hold-5, rope-8)
nsubjpass(connected-13, rope-8)
auxpass(connected-13, was-11)
advmod(connected-13, still-12)
rcmod(rope-8, connected-13)
det(stone-16, the-15)
prep_with(connected-13, stone-16)
neg(aware-21, not-20)
dep(laid-4, aware-21)
conj_and(hold-5, aware-21)
advmod(help-27, how-23)
det(water-25, the-24)
nsubj(help-27, water-25)
aux(help-27, would-26)
prepc_of(aware-21, help-27)
dobj(help-27, him-28)
advmod(floating-31, partly-30)
prepc_by(help-27, floating-31)
dobj(floating-31, it-32)
auxpass(astonished-35, was-34)
root(ROOT-0, astonished-35)
aux(find-37, to-36)
xcomp(astonished-35, find-37)
advmod(easily-39, how-38)
advmod(moved-41, easily-39)
nsubj(moved-41, he-40)
ccomp(find-37, moved-41)
nsubjpass(astonished-35, it-42)
nsubj(find-37, it-42)

(ROOT
  (S
    (S
      (ADVP (IN At) (RB once))
      (NP (PRP it))
      (VP (VBD swung)
        (PRT (RP away))
        (PP (IN from)
          (NP (DT the) (NN side)))
        (PP (IN into)
          (NP
            (NP (DT the) (NN middle))
            (PP (IN of)
              (NP (DT the) (NN well)))))))
    (: ;)
    (S
      (NP (DT the) (NN water))
      (VP (VBD ceased)
        (S
          (VP (TO to)
            (VP (VB run)
              (PP (IN over)
                (NP
                  (NP (DT the) (NN edge))
                  (, ,)
                  (SBAR
                    (SBAR (IN with)
                      (S
                        (NP (DT a) (JJ loud) (NN gurgling))
                        (VP
                          (VP (VBD began)
                            (S
                              (VP (TO to)
                                (VP (VB sink)))))
                          (, ,)
                          (CC and)
                          (VP (VBD sank)
                            (PRT (RP down))))))
                    (CC and)
                    (SBAR
                      (ADVP (RB down)
                        (CC and)
                        (RB down))
                      (IN until)
                      (S
                        (NP
                          (NP (DT the) (NN opening))
                          (SBAR
                            (WHPP (IN by)
                              (WHNP (WDT which)))
                            (S
                              (NP (PRP it))
                              (VP (VBD escaped)))))
                        (VP (VBD was)
                          (ADJP (JJ visible)))))))))))))
    (. .)))

advmod(swung-4, At-1)
advmod(At-1, once-2)
nsubj(swung-4, it-3)
root(ROOT-0, swung-4)
det(side-8, the-7)
prep_away_from(swung-4, side-8)
det(middle-11, the-10)
prep_into(swung-4, middle-11)
det(well-14, the-13)
prep_of(middle-11, well-14)
det(water-17, the-16)
nsubj(ceased-18, water-17)
nsubj(run-20, water-17)
parataxis(swung-4, ceased-18)
aux(run-20, to-19)
xcomp(ceased-18, run-20)
det(edge-23, the-22)
prep_over(run-20, edge-23)
mark(began-29, with-25)
det(gurgling-28, a-26)
amod(gurgling-28, loud-27)
nsubj(began-29, gurgling-28)
nsubj(sink-31, gurgling-28)
nsubj(sank-34, gurgling-28)
dep(edge-23, began-29)
aux(sink-31, to-30)
xcomp(began-29, sink-31)
dep(edge-23, sank-34)
conj_and(began-29, sank-34)
prt(sank-34, down-35)
advmod(visible-48, down-37)
conj_and(down-37, down-39)
advmod(visible-48, down-39)
mark(visible-48, until-40)
det(opening-42, the-41)
prep_by(escaped-46, opening-42)
nsubj(visible-48, opening-42)
nsubj(escaped-46, it-45)
rcmod(opening-42, escaped-46)
cop(visible-48, was-47)
dep(edge-23, visible-48)
conj_and(began-29, visible-48)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (S
    (ADVP (RB now))
    (, ,)
    (ADVP (RB now))
    (NP (PRP I))
    (VP (VBP understand))
    (. !) ('' '')))

advmod(understand-5, now-1)
advmod(understand-5, now-3)
nsubj(understand-5, I-4)
root(ROOT-0, understand-5)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Mr) (NNP Macmichael)))
    (. .)))

root(ROOT-0, cried-1)
nn(Macmichael-3, Mr-2)
dobj(cried-1, Macmichael-3)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJ old) (NN well))
        (PP (IN of)
          (NP (DT the) (NNP Priory)))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 've)
              (VP (VBN come)
                (PP (RB upon)))))))
      (, ,)
      (S
        (NP (PRP you))
        (ADJP (JJ little))
        (S
          (VP (VBG burrowing)
            (NP (NN mole))))))
    (. .) ('' '')))

nsubj(well-6, It-2)
cop(well-6, 's-3)
det(well-6, the-4)
amod(well-6, old-5)
root(ROOT-0, well-6)
pobj(upon-13, well-6)
det(Priory-9, the-8)
prep_of(well-6, Priory-9)
nsubj(come-12, you-10)
aux(come-12, 've-11)
rcmod(well-6, come-12)
prep(come-12, upon-13)
nsubj(burrowing-17, you-15)
dep(burrowing-17, little-16)
xcomp(well-6, burrowing-17)
dobj(burrowing-17, mole-18)

(ROOT
  (S (`` ``)
    (NP (NNP Sandy))
    (VP (VBD helped)
      (NP (PRP me))
      (PRT (RP out))
      (PP (IN with)
        (NP (DT the) (NNS stones))))
    (. .)))

nsubj(helped-3, Sandy-2)
root(ROOT-0, helped-3)
dobj(helped-3, me-4)
prt(helped-3, out-5)
det(stones-8, the-7)
prep_with(helped-3, stones-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD thought)
        (SBAR
          (S
            (NP (EX there))
            (VP (MD might)
              (VP (VB be)
                (NP (DT a) (NN treasure))
                (ADVP (RB down) (RB there))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD set)
        (SBAR
          (S
            (NP (PRP me))
            (VP (VBZ digging))))))
    (. .)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
expl(treasure-7, there-3)
aux(treasure-7, might-4)
cop(treasure-7, be-5)
det(treasure-7, a-6)
ccomp(thought-2, treasure-7)
advmod(there-9, down-8)
advmod(treasure-7, there-9)
nsubj(set-13, that-12)
conj_and(thought-2, set-13)
nsubj(digging-15, me-14)
ccomp(set-13, digging-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ funny) (NN treasure))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB find)))))
        (: --)
        (SBAR
          (S
            (VP (VBD was) (RB n't)
              (NP (PRP it)))))))
    (. ?)))

nsubj(treasure-5, It-1)
cop(treasure-5, was-2)
det(treasure-5, a-3)
amod(treasure-5, funny-4)
root(ROOT-0, treasure-5)
aux(find-7, to-6)
vmod(treasure-5, find-7)
cop(it-11, was-9)
neg(it-11, n't-10)
rcmod(treasure-5, it-11)

(ROOT
  (S
    (NP (DT No) (NN treasure))
    (VP (MD could)
      (VP (VB have)
        (VP (VBN been)
          (ADJP (JJR prettier) (IN though)))))
    (. .) ('' '')))

neg(treasure-2, No-1)
nsubj(though-7, treasure-2)
aux(though-7, could-3)
aux(though-7, have-4)
cop(though-7, been-5)
dep(though-7, prettier-6)
root(ROOT-0, though-7)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (DT this))
        (VP
          (VP (VB be)
            (NP
              (NP (DT the) (NN Prior) (POS 's))
              (NNP Well)))
          (, ,)
          (CC and)
          (VP
            (ADVP (DT all))
            (VB be)
            (ADJP (JJ true)
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBD said)
                    (PP (IN about)
                      (NP (PRP it)))
                    (PP (IN in)
                      (NP (JJ old) (NNS times)))))))))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD returned))
        (NP (PRP$ his) (NN father)))
      (, ,) (`` ``))
    (NP (PRP it))
    (VP (MD may)
      (VP (VB turn)
        (PRT (RP out))
        (NP (DT a) (JJR greater) (NN treasure))
        (SBAR (IN than)
          (S
            (NP (PRP you))
            (ADVP (RB even))
            (VP (VBD hoped)
              (PP (IN for))
              (, ,)
              (ADVP (RB Willie)))))))
    (. .)))

mark(Well-8, If-2)
nsubj(Well-8, this-3)
nsubj(true-13, this-3)
cop(Well-8, be-4)
det(Prior-6, the-5)
poss(Well-8, Prior-6)
advcl(turn-30, Well-8)
advmod(true-13, all-11)
cop(true-13, be-12)
conj_and(Well-8, true-13)
advcl(turn-30, true-13)
nsubj(said-15, they-14)
ccomp(true-13, said-15)
prep_about(said-15, it-17)
amod(times-20, old-19)
prep_in(said-15, times-20)
parataxis(turn-30, returned-23)
poss(father-25, his-24)
nsubj(returned-23, father-25)
nsubj(turn-30, it-28)
aux(turn-30, may-29)
root(ROOT-0, turn-30)
prt(turn-30, out-31)
det(treasure-34, a-32)
amod(treasure-34, greater-33)
dobj(turn-30, treasure-34)
mark(hoped-38, than-35)
nsubj(hoped-38, you-36)
advmod(hoped-38, even-37)
advcl(turn-30, hoped-38)
prep(hoped-38, for-39)
advmod(hoped-38, Willie-41)

(ROOT
  (S
    (ADVP (WRB Why))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBD found)
          (ADVP
            (NP (DT some) (NN time))
            (RB ago))
          (PP (IN in)
            (NP
              (NP (DT an) (JJ old) (NN book))
              (PP (IN about)
                (NP
                  (NP (DT the) (NNS monasteries))
                  (PP (IN of)
                    (NP (DT the) (NN country))))))))))
    (, ,)
    (NP (NNS people))
    (VP (VBD used)
      (S
        (VP (TO to)
          (VP (VB come)
            (PP (IN from)
              (NP (JJ great) (NNS distances)))
            (S
              (VP (TO to)
                (VP (VB drink)
                  (NP
                    (NP (DT the) (NN water))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN Prior) (POS 's))
                        (NNP Well))))))))))
      (, ,)
      (S
        (VP (VBG believing)
          (S
            (NP (PRP it))
            (NP
              (NP (DT a) (NN cure))
              (PP (IN for)
                (NP
                  (NP (DT every) (NN disease))
                  (PP (IN under)
                    (NP (DT the) (NN sun))))))))))
    (. .)))

advmod(used-21, Why-1)
mark(found-5, as-3)
nsubj(found-5, I-4)
advcl(used-21, found-5)
det(time-7, some-6)
npadvmod(ago-8, time-7)
advmod(found-5, ago-8)
det(book-12, an-10)
amod(book-12, old-11)
prep_in(found-5, book-12)
det(monasteries-15, the-14)
prep_about(book-12, monasteries-15)
det(country-18, the-17)
prep_of(monasteries-15, country-18)
nsubj(used-21, people-20)
nsubj(come-23, people-20)
nsubj(drink-28, people-20)
root(ROOT-0, used-21)
aux(come-23, to-22)
xcomp(used-21, come-23)
amod(distances-26, great-25)
prep_from(come-23, distances-26)
aux(drink-28, to-27)
xcomp(come-23, drink-28)
det(water-30, the-29)
dobj(drink-28, water-30)
det(Prior-33, the-32)
poss(Well-35, Prior-33)
prep_of(water-30, Well-35)
xcomp(used-21, believing-37)
nsubj(cure-40, it-38)
det(cure-40, a-39)
xcomp(believing-37, cure-40)
det(disease-43, every-42)
prep_for(cure-40, disease-43)
det(sun-46, the-45)
prep_under(disease-43, sun-46)

(ROOT
  (S
    (VP
      (VP (VB Run)
        (PP (IN into)
          (NP (DT the) (NN house))))
      (CC and)
      (VP (VB fetch)
        (S
          (NP (PRP me))
          (NP (DT a) (NN jug)))))
    (. .) ('' '')))

root(ROOT-0, Run-1)
det(house-4, the-3)
prep_into(Run-1, house-4)
conj_and(Run-1, fetch-6)
nsubj(jug-9, me-7)
det(jug-9, a-8)
xcomp(fetch-6, jug-9)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Yes))
      (, ,)
      (NP (NN papa)))
    (, ,) ('' '')
    (VP
      (VP (VBD said)
        (NP (NNP Willie)))
      (, ,)
      (CC and)
      (VP (VBD bounded)
        (PRT (RP off))))
    (. .)))

discourse(papa-4, Yes-2)
dep(said-7, papa-4)
root(ROOT-0, said-7)
dobj(said-7, Willie-8)
conj_and(said-7, bounded-11)
prt(bounded-11, off-12)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT no) (JJ little) (NN brook))
          (VP (VBG careering)
            (PP (IN through)
              (NP (DT the) (NN garden)))
            (ADVP (RB now))))
        (: --)
        (NP (RB only)
          (NP (DT a) (JJ few) (NNS pools))
          (ADVP (RB here)
            (CC and)
            (RB there)))
        (: --)
        (CC and)
        (NP
          (NP (PRP$ its) (NN channel))
          (SBAR
            (S
              (VP (MD would)
                (ADVP (RB soon))
                (VP (VB be)
                  (ADJP (JJ dry)
                    (PP (IN in)
                      (NP (DT the) (JJ hot) (NN sun)))))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(brook-5, no-3)
amod(brook-5, little-4)
nsubj(was-2, brook-5)
vmod(brook-5, careering-6)
det(garden-9, the-8)
prep_through(careering-6, garden-9)
advmod(careering-6, now-10)
advmod(pools-15, only-12)
det(pools-15, a-13)
amod(pools-15, few-14)
nsubj(was-2, pools-15)
conj_and(brook-5, pools-15)
advmod(pools-15, here-16)
advmod(pools-15, there-18)
conj_and(here-16, there-18)
poss(channel-22, its-21)
nsubj(was-2, channel-22)
conj_and(brook-5, channel-22)
aux(dry-26, would-23)
advmod(dry-26, soon-24)
cop(dry-26, be-25)
rcmod(channel-22, dry-26)
det(sun-30, the-28)
amod(sun-30, hot-29)
prep_in(dry-26, sun-30)

(ROOT
  (S (CC But)
    (NP (NNP Willie))
    (VP (VBD thought)
      (SBAR
        (WHADJP (WRB how) (JJ delightful))
        (S
          (NP (PRP it))
          (VP (VBD was)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (NP (CD one))
                          (ADVP (RB there))))))
                  (SBAR
                    (WHADVP (WRB whenever))
                    (S
                      (NP (PRP he))
                      (VP (VBD pleased)))))))))))
    (. .)))

cc(thought-3, But-1)
nsubj(thought-3, Willie-2)
root(ROOT-0, thought-3)
advmod(delightful-5, how-4)
dep(was-7, delightful-5)
nsubj(was-7, it-6)
nsubj(able-10, it-6)
nsubj(have-12, it-6)
ccomp(thought-3, was-7)
aux(able-10, to-8)
cop(able-10, be-9)
xcomp(was-7, able-10)
aux(have-12, to-11)
xcomp(able-10, have-12)
dobj(have-12, one-13)
advmod(have-12, there-14)
advmod(pleased-17, whenever-15)
nsubj(pleased-17, he-16)
advcl(able-10, pleased-17)

(ROOT
  (S
    (S (CC And)
      (NP (PRP it))
      (VP (MD might)
        (VP (VB be)
          (NP
            (NP (DT a)
              (ADJP (RB much) (JJR bigger))
              (NN brook))
            (ADVP (RB too)))
          (, ,)
          (SBAR (IN for)
            (S (, ,)
              (PP (RB instead) (IN of)
                (S
                  (VP (VBG using)
                    (NP
                      (NP (DT the) (NN stone))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (MD could)
                            (ADVP (RB but) (RB partly))
                            (VP (VB block)
                              (NP (DT the) (NN water))
                              (PP (IN from)
                                (NP (DT the) (JJ underground) (NN way)))))))))))
              (, ,)
              (NP (PRP he))
              (VP
                (VP (MD would)
                  (VP (VB cut)
                    (NP
                      (NP (DT a) (NN piece))
                      (PP (IN of)
                        (NP
                          (NP (NN wood))
                          (ADJP (JJ large) (RB enough)
                            (S
                              (VP (TO to)
                                (VP (VB cover)
                                  (NP (DT the) (NN opening)))))))))))
                (, ,)
                (CC and)
                (VP (VBD rounded)
                  (NP (DT a) (JJ little))
                  (S
                    (VP (TO to)
                      (VP (VB fit)
                        (NP
                          (NP (DT the) (NN side))
                          (PP (IN of)
                            (NP (DT the) (NN well))))))))))))))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (PRP he))
      (VP (MD would)
        (VP (VB put)
          (NP (DT the) (JJ big) (NN stone))
          (ADVP
            (ADVP (RB just) (RB so) (RB far))
            (PP (IN from)
              (NP (DT the) (NN opening))))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (NN piece))
                (PP (IN of)
                  (NP (NN wood))))
              (VP (MD could)
                (VP
                  (VP (VB get)
                    (PRT (RP through))
                    (PP (IN between)
                      (NP
                        (NP (PRP it))
                        (CC and)
                        (NP
                          (NP (DT the) (NN side))
                          (PP (IN of)
                            (NP (DT the) (NN well)))))))
                  (, ,)
                  (CC and)
                  (ADVP (RB so))
                  (VP (VB be)
                    (VP (VBN held)
                      (ADVP (RB tight)))))))))))
    (. .)))

cc(brook-8, And-1)
nsubj(brook-8, it-2)
aux(brook-8, might-3)
cop(brook-8, be-4)
det(brook-8, a-5)
advmod(bigger-7, much-6)
amod(brook-8, bigger-7)
root(ROOT-0, brook-8)
advmod(brook-8, too-9)
mark(cut-32, for-11)
prepc_instead_of(cut-32, using-15)
det(stone-17, the-16)
dobj(using-15, stone-17)
nsubj(block-22, stone-17)
aux(block-22, could-19)
advmod(partly-21, but-20)
advmod(block-22, partly-21)
rcmod(stone-17, block-22)
det(water-24, the-23)
dobj(block-22, water-24)
det(way-28, the-26)
amod(way-28, underground-27)
prep_from(block-22, way-28)
nsubj(cut-32, he-30)
nsubj(rounded-45, he-30)
aux(cut-32, would-31)
advcl(brook-8, cut-32)
det(piece-34, a-33)
dobj(cut-32, piece-34)
prep_of(piece-34, wood-36)
amod(wood-36, large-37)
advmod(large-37, enough-38)
aux(cover-40, to-39)
xcomp(large-37, cover-40)
det(opening-42, the-41)
dobj(cover-40, opening-42)
advcl(brook-8, rounded-45)
conj_and(cut-32, rounded-45)
det(little-47, a-46)
dobj(rounded-45, little-47)
aux(fit-49, to-48)
vmod(rounded-45, fit-49)
det(side-51, the-50)
dobj(fit-49, side-51)
det(well-54, the-53)
prep_of(side-51, well-54)
advmod(put-59, then-56)
nsubj(put-59, he-57)
aux(put-59, would-58)
parataxis(brook-8, put-59)
det(stone-62, the-60)
amod(stone-62, big-61)
dobj(put-59, stone-62)
advmod(put-59, just-63)
advmod(put-59, so-64)
det(opening-68, the-67)
prep_far_from(put-59, opening-68)
mark(get-75, that-69)
det(piece-71, the-70)
nsubj(get-75, piece-71)
nsubjpass(held-89, piece-71)
prep_of(piece-71, wood-73)
aux(get-75, could-74)
ccomp(put-59, get-75)
prt(get-75, through-76)
prep_between(get-75, it-78)
det(side-81, the-80)
prep_between(get-75, side-81)
conj_and(it-78, side-81)
det(well-84, the-83)
prep_of(side-81, well-84)
auxpass(held-89, be-88)
ccomp(put-59, held-89)
conj_and(get-75, held-89)
advmod(held-89, tight-90)

(ROOT
  (S (RB Then)
    (NP (PDT all) (DT the) (NN water))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN forced)
          (S
            (VP (TO to)
              (VP
                (VP (VB mount)
                  (PRT (RP up)))
                (, ,)
                (VP (VB get)
                  (PRT (RP out))
                  (PP (IN at)
                    (NP (DT the) (NN top))))
                (, ,)
                (CC and)
                (VP (VB run)
                  (PP (IN through)
                    (NP (DT the) (NN garden))))))))))
    (. .)))

advmod(forced-7, Then-1)
predet(water-4, all-2)
det(water-4, the-3)
nsubjpass(forced-7, water-4)
nsubj(mount-9, water-4)
nsubj(get-12, water-4)
nsubj(run-19, water-4)
aux(forced-7, would-5)
auxpass(forced-7, be-6)
root(ROOT-0, forced-7)
aux(mount-9, to-8)
xcomp(forced-7, mount-9)
prt(mount-9, up-10)
xcomp(forced-7, get-12)
conj_and(mount-9, get-12)
prt(get-12, out-13)
det(top-16, the-15)
prep_at(get-12, top-16)
xcomp(forced-7, run-19)
conj_and(mount-9, run-19)
det(garden-22, the-21)
prep_through(run-19, garden-22)

(ROOT
  (S
    (ADVP (RB Meantime))
    (NP (NNP Mr) (NNP Macmichael))
    (, ,)
    (S
      (VP (VBG having)
        (VP (VBN gone)
          (S
            (VP (TO to)
              (VP (VB see)
                (SBAR
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP
                        (NP (NN course))
                        (NP (DT the) (NN water)))
                      (VP (VBD had)
                        (VP (VBN taken)))))
                  (, ,)
                  (CC and)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (PRP it))
                      (VP (VBD had)
                        (VP (VBN left)
                          (NP (DT the) (NN garden)))))))))))))
    (, ,)
    (VP (VBD found)
      (SBAR (IN that)
        (S (, ,)
          (PP (IN after)
            (NP (DT a) (RB very) (JJ circuitous) (NN route)))
          (, ,)
          (NP (PRP it))
          (VP (VBD had)
            (VP (VBN run)
              (PP (IN through)
                (NP (DT the) (NN hedge)))
              (PP (IN into)
                (NP
                  (NP
                    (NP (DT a) (NN surface) (NN drain))
                    (PP (IN in)
                      (NP (DT the) (NN field))))
                  (, ,)
                  (CC and)
                  (RB so) (IN down)
                  (NP
                    (NP (DT the) (NN hill))
                    (PP (IN towards)
                      (NP (DT the) (NN river)))))))))))
    (. .)))

advmod(found-24, Meantime-1)
nn(Macmichael-3, Mr-2)
nsubj(found-24, Macmichael-3)
aux(gone-6, having-5)
vmod(found-24, gone-6)
aux(see-8, to-7)
xcomp(gone-6, see-8)
dobj(taken-14, what-9)
nsubj(taken-14, course-10)
det(water-12, the-11)
dep(course-10, water-12)
aux(taken-14, had-13)
dep(see-8, taken-14)
advmod(left-20, how-17)
nsubj(left-20, it-18)
aux(left-20, had-19)
dep(see-8, left-20)
conj_and(taken-14, left-20)
det(garden-22, the-21)
dobj(left-20, garden-22)
root(ROOT-0, found-24)
mark(run-35, that-25)
det(route-31, a-28)
advmod(route-31, very-29)
amod(route-31, circuitous-30)
prep_after(run-35, route-31)
nsubj(run-35, it-33)
aux(run-35, had-34)
ccomp(found-24, run-35)
det(hedge-38, the-37)
prep_through(run-35, hedge-38)
det(drain-42, a-40)
nn(drain-42, surface-41)
prep_into(run-35, drain-42)
det(field-45, the-44)
prep_in(drain-42, field-45)
prep_into(run-35, so-48)
advmod(drain-42, so-48)
conj_and(drain-42, so-48)
amod(drain-42, down-49)
det(hill-51, the-50)
dep(drain-42, hill-51)
det(river-54, the-53)
prep_towards(hill-51, river-54)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP Willie))
        (VP (VBD brought)
          (S
            (NP (PRP him))
            (NP (DT the) (NN jug))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD filled)
        (NP (PRP it))
        (PP (IN from)
          (NP (DT the) (NN well))))
      (, ,)
      (CC and)
      (VP (VBD carried)
        (NP (DT the) (NN water))
        (PP (IN into)
          (NP (PRP$ his) (NN surgery)))))
    (. .)))

advmod(brought-3, When-1)
nsubj(brought-3, Willie-2)
advcl(filled-9, brought-3)
nsubj(jug-6, him-4)
det(jug-6, the-5)
xcomp(brought-3, jug-6)
nsubj(filled-9, he-8)
nsubj(carried-16, he-8)
root(ROOT-0, filled-9)
dobj(filled-9, it-10)
det(well-13, the-12)
prep_from(filled-9, well-13)
conj_and(filled-9, carried-16)
det(water-18, the-17)
dobj(carried-16, water-18)
poss(surgery-21, his-20)
prep_into(carried-16, surgery-21)

(ROOT
  (S
    (S
      (ADVP (RB There))
      (NP (PRP he))
      (VP (VBD put)
        (NP (DT a) (JJ little))
        (PP (IN of)
          (NP (PRP it)))
        (PP (IN into)
          (NP (JJ several) (JJ different) (NNS glasses)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG dropping)
          (NP (NN something))
          (PRT (RP out))
          (PP (IN of)
            (NP
              (NP (CD one) (NN bottle))
              (PP (IN into)
                (NP (CD one) (NN glass)))))))
      (, ,)
      (CC and)
      (S
        (NP (NN something))
        (VP
          (ADVP (IN out)
            (PP (IN of)
              (NP
                (NP (DT another) (NN bottle))
                (PP (IN into)
                  (NP (DT another) (NN glass))))
              (, ,)
              (ADVP (RB soon))))
          (VBD satisfied)
          (NP (PRP himself))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD contained)
                (NP (JJ medicinal) (NNS salts))
                (PP (IN in)
                  (NP (JJ considerable) (NNS quantities)))))))))
    (. .)))

advmod(put-3, There-1)
nsubj(put-3, he-2)
nsubj(dropping-14, he-2)
root(ROOT-0, put-3)
det(little-5, a-4)
dobj(put-3, little-5)
prep_of(put-3, it-7)
amod(glasses-11, several-9)
amod(glasses-11, different-10)
prep_into(put-3, glasses-11)
conj_and(put-3, dropping-14)
dobj(dropping-14, something-15)
num(bottle-19, one-18)
prep_out_of(dropping-14, bottle-19)
num(glass-22, one-21)
prep_into(bottle-19, glass-22)
nsubj(satisfied-35, something-25)
det(bottle-29, another-28)
prep_out_of(satisfied-35, bottle-29)
det(glass-32, another-31)
prep_into(bottle-29, glass-32)
advmod(satisfied-35, soon-34)
conj_and(put-3, satisfied-35)
conj_and(dropping-14, satisfied-35)
dobj(satisfied-35, himself-36)
mark(contained-39, that-37)
nsubj(contained-39, it-38)
ccomp(satisfied-35, contained-39)
amod(salts-41, medicinal-40)
dobj(contained-39, salts-41)
amod(quantities-44, considerable-43)
prep_in(contained-39, quantities-44)

(ROOT
  (S
    (NP (EX There))
    (VP (MD could)
      (VP (VB be)
        (ADVP (DT no) (NN doubt)
          (SBAR (IN that)
            (S
              (NP (NNP Willie))
              (VP (VBD had)
                (VP (VBN found)
                  (NP
                    (NP (DT the) (NN Prior) (POS 's))
                    (NNP Well)))))))))
    (. .)))

expl(be-3, There-1)
aux(be-3, could-2)
root(ROOT-0, be-3)
neg(doubt-5, no-4)
advmod(be-3, doubt-5)
mark(found-9, that-6)
nsubj(found-9, Willie-7)
aux(found-9, had-8)
ccomp(doubt-5, found-9)
det(Prior-11, the-10)
poss(Well-13, Prior-11)
dobj(found-9, Well-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP (DT a) (JJ good) (NN thing))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP (PRP$ his) (NN father))
      (PP (IN at)
        (NP
          (NP (NN breakfast))
          (, ,) (`` ``)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBD did) (RB n't)
                (VP (VB flood))))))))
    (NP
      (NP (DT the) (NN house))
      (, ,)
      (NP (NNP Willie)))
    (. !)))

nsubj(thing-6, It-2)
cop(thing-6, 's-3)
det(thing-6, a-4)
amod(thing-6, good-5)
ccomp(said-9, thing-6)
root(ROOT-0, said-9)
poss(father-11, his-10)
dobj(said-9, father-11)
prep_at(said-9, breakfast-13)
mark(flood-20, that-16)
nsubj(flood-20, you-17)
aux(flood-20, did-18)
neg(flood-20, n't-19)
dep(breakfast-13, flood-20)
det(house-22, the-21)
nsubj(said-9, house-22)
appos(house-22, Willie-24)

(ROOT
  (S
    (S
      (NP (PRP One))
      (VP (VBP turn)
        (ADVP (RBR more))))
    (CC and)
    (S
      (NP (DT the) (NN stream))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (PP (IN in)
              (PP (IN at)
                (NP (DT the) (NN back-door))))))))
    (. .) ('' '')))

nsubj(turn-2, One-1)
root(ROOT-0, turn-2)
advmod(turn-2, more-3)
det(stream-6, the-5)
nsubj(been-9, stream-6)
aux(been-9, would-7)
aux(been-9, have-8)
conj_and(turn-2, been-9)
prep(been-9, in-10)
pcomp(in-10, at-11)
det(back-door-13, the-12)
pobj(at-11, back-door-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (MD would) (RB n't)
        (VP (VB have)
          (VP (VBN done)
            (NP (JJ much) (NN harm))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(done-6, It-2)
aux(done-6, would-3)
neg(done-6, n't-4)
aux(done-6, have-5)
ccomp(said-11, done-6)
amod(harm-8, much-7)
dobj(done-6, harm-8)
root(ROOT-0, said-11)
nsubj(said-11, Willie-12)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD would)
      (VP
        (VP (VB have)
          (VP (VBN run)
            (PP (IN along)
              (NP
                (NP (DT the) (NNS slabs))
                (PP (IN in)
                  (NP (DT the) (NN passage)))))))
        (CC and)
        (ADVP (IN out) (RB again))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (DT the) (JJ front) (NN door))
            (VP (VBZ is)
              (ADJP
                (ADJP (JJR lower))
                (PP (IN than)
                  (NP (DT the) (NN back)))))))))
    (. .)))

nsubj(run-5, It-2)
aux(run-5, would-3)
aux(run-5, have-4)
root(ROOT-0, run-5)
det(slabs-8, the-7)
prep_along(run-5, slabs-8)
det(passage-11, the-10)
prep_in(slabs-8, passage-11)
advmod(run-5, out-13)
conj_and(run-5, out-13)
advmod(out-13, again-14)
mark(lower-21, for-16)
det(door-19, the-17)
amod(door-19, front-18)
nsubj(lower-21, door-19)
cop(lower-21, is-20)
advcl(run-5, lower-21)
det(back-24, the-23)
prep_than(lower-21, back-24)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN been)
          (NP (JJ such) (NN fun)))))
    (. !) ('' '')))

nsubj(fun-6, It-1)
aux(fun-6, would-2)
aux(fun-6, have-3)
cop(fun-6, been-4)
amod(fun-6, such-5)
root(ROOT-0, fun-6)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBZ mischievous)
      (NP (JJ little) (NN thing)))
    (. !) ('' '')))

nsubj(mischievous-3, You-2)
root(ROOT-0, mischievous-3)
amod(thing-5, little-4)
dobj(mischievous-3, thing-5)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP
          (NP (PRP$ his) (NN mother))
          (, ,)
          (VP (VBG pretending)
            (S
              (VP (TO to)
                (VP (VB scold)
                  (NP (PRP him))))))
          (, ,))))
    (: --) (`` ``)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (NP
            (NP (WP what) (NN trouble))
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD would)
                  (VP (VB have)
                    (VP (VBN given)
                      (ADVP (RB Tibby)))))))))))
    (. !) ('' '')))

root(ROOT-0, said-1)
poss(mother-3, his-2)
dobj(said-1, mother-3)
vmod(mother-3, pretending-5)
aux(scold-7, to-6)
xcomp(pretending-5, scold-7)
dobj(scold-7, him-8)
nsubj(think-15, you-12)
aux(think-15, do-13)
neg(think-15, n't-14)
parataxis(said-1, think-15)
det(trouble-17, what-16)
dobj(think-15, trouble-17)
nsubj(given-21, you-18)
aux(given-21, would-19)
aux(given-21, have-20)
rcmod(trouble-17, given-21)
advmod(given-21, Tibby-22)

(ROOT
  (S (`` ``)
    (S
      (NP
        (ADVP (CC But)))
      (VP (MD would) (RB n't)))
    (NP (PRP it))
    (VP (VBP have)
      (VP (VBN been)
        (NP (NN fun))))
    (. ?)))

nsubj(would-3, But-2)
dep(fun-8, would-3)
neg(would-3, n't-4)
nsubj(fun-8, it-5)
aux(fun-8, have-6)
cop(fun-8, been-7)
root(ROOT-0, fun-8)

(ROOT
  (SQ (CC And)
    (MD would) (RB n't)
    (NP (PRP it))
    (VP (VB have)
      (VP (VBN been)
        (ADJP (JJ lovely))
        (: --)
        (S
          (VP (VBG running)
            (PP (IN through)
              (NP
                (NP (DT the) (NN house))
                (ADVP (DT all))
                (NP (DT the) (JJ hot) (NN summer))))
            (NP (NN day))))))
    (. ?) ('' '')))

cc(lovely-7, And-1)
aux(lovely-7, would-2)
neg(lovely-7, n't-3)
nsubj(lovely-7, it-4)
aux(lovely-7, have-5)
cop(lovely-7, been-6)
root(ROOT-0, lovely-7)
parataxis(lovely-7, running-9)
det(house-12, the-11)
prep_through(running-9, house-12)
advmod(house-12, all-13)
det(summer-16, the-14)
amod(summer-16, hot-15)
dep(house-12, summer-16)
tmod(running-9, day-17)

(ROOT
  (SINV (`` ``)
    (S
      (NP (EX There))
      (VP (MD may)
        (VP (VB be)
          (NP
            (NP (DT a) (NN difference))
            (PP (IN of)
              (NP
                (NP (NN opinion))
                (PP (IN about)
                  (NP
                    (NP (DT that))
                    (, ,)
                    (NP (NNP Master) (NNP Willie))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN mother))
    (. .)))

expl(difference-6, There-2)
aux(difference-6, may-3)
cop(difference-6, be-4)
det(difference-6, a-5)
ccomp(said-16, difference-6)
prep_of(difference-6, opinion-8)
prep_about(opinion-8, that-10)
nn(Willie-13, Master-12)
appos(that-10, Willie-13)
root(ROOT-0, said-16)
poss(mother-18, his-17)
nsubj(said-16, mother-18)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (, ,)
      (PP (IN for)
        (NP (NN instance)))
      (, ,)
      (VP (MD might)
        (VP (VB like)
          (S
            (VP (TO to)
              (VP (VB walk)
                (PP (IN through)
                  (NP (NN water)))
                (NP
                  (NP (DT every) (NN time))
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBD went)
                        (PP (IN from)
                          (NP (DT the) (NN parlour)))
                        (PP (TO to)
                          (NP (DT the) (NN kitchen)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD should)))))))
    (. .) ('' '')))

nsubj(like-8, You-2)
nsubj(walk-10, You-2)
prep_for(like-8, instance-5)
aux(like-8, might-7)
root(ROOT-0, like-8)
aux(walk-10, to-9)
xcomp(like-8, walk-10)
prep_through(walk-10, water-12)
det(time-14, every-13)
dobj(walk-10, time-14)
nsubj(went-16, you-15)
rcmod(time-14, went-16)
det(parlour-19, the-18)
prep_from(went-16, parlour-19)
det(kitchen-22, the-21)
prep_to(went-16, kitchen-22)
nsubj(say-28, I-25)
aux(say-28, ca-26)
neg(say-28, n't-27)
conj_but(like-8, say-28)
nsubj(should-30, I-29)
ccomp(say-28, should-30)

(ROOT
  (S
    (S
      (NP (NNS Curious)
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR (IN whether)
                (S
                  (NP (DT the) (NN village))
                  (VP (VBP pump))))))))
      (VP (MD might) (RB not)
        (VP (VB be)
          (VP (VBN supplied)
            (PP (IN from)
              (NP (PRP$ his) (NN well)))))))
    (, ,)
    (NP (NNP Mr) (NNP Macmichael))
    (VP
      (VP
        (ADVP (JJ next))
        (VBD analysed)
        (NP
          (NP (DT the) (NN water))
          (PP (IN of)
            (NP
              (NP (DT that))
              (ADVP (RB also))))))
      (, ,)
      (CC and)
      (VP (VBD satisfied)
        (NP (PRP himself))
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP
                (NP (DT no) (NN connection))
                (PP (IN between)
                  (NP (PRP them)))))))))
    (. .)))

nsubjpass(supplied-11, Curious-1)
aux(know-3, to-2)
vmod(Curious-1, know-3)
mark(pump-7, whether-4)
det(village-6, the-5)
nsubj(pump-7, village-6)
ccomp(know-3, pump-7)
aux(supplied-11, might-8)
neg(supplied-11, not-9)
auxpass(supplied-11, be-10)
ccomp(analysed-19, supplied-11)
poss(well-14, his-13)
prep_from(supplied-11, well-14)
nn(Macmichael-17, Mr-16)
nsubj(analysed-19, Macmichael-17)
nsubj(satisfied-27, Macmichael-17)
advmod(analysed-19, next-18)
root(ROOT-0, analysed-19)
det(water-21, the-20)
dobj(analysed-19, water-21)
prep_of(water-21, that-23)
advmod(that-23, also-24)
conj_and(analysed-19, satisfied-27)
dobj(satisfied-27, himself-28)
mark(was-31, that-29)
expl(was-31, there-30)
ccomp(satisfied-27, was-31)
neg(connection-33, no-32)
nsubj(was-31, connection-33)
prep_between(connection-33, them-35)

(ROOT
  (S
    (PP (IN Within)
      (NP (DT the) (JJ next) (NN fortnight)))
    (NP (NNP Willie))
    (VP (VBD discovered)
      (SBAR (IN that)
        (S
          (SBAR
            (ADVP (RB as) (RB often))
            (IN as)
            (S
              (NP (DT the) (NN stream))
              (VP (VBD ran)
                (PP (IN through)
                  (NP (DT the) (NN garden))))))
          (, ,)
          (NP
            (NP (DT the) (JJ little) (NN brook))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN set)
                    (NP (PRP$ his) (JJ water-wheel) (NN going)))))))
          (VP (VBD was)
            (ADJP (RB nearly) (JJ dry))))))
    (. .)))

det(fortnight-4, the-2)
amod(fortnight-4, next-3)
prep_within(discovered-6, fortnight-4)
nsubj(discovered-6, Willie-5)
root(ROOT-0, discovered-6)
mark(dry-31, that-7)
advmod(often-9, as-8)
advmod(ran-13, often-9)
mark(ran-13, as-10)
det(stream-12, the-11)
nsubj(ran-13, stream-12)
advcl(dry-31, ran-13)
det(garden-16, the-15)
prep_through(ran-13, garden-16)
det(brook-20, the-18)
amod(brook-20, little-19)
prep_in(set-25, brook-20)
nsubj(dry-31, brook-20)
nsubj(set-25, he-23)
aux(set-25, had-24)
rcmod(brook-20, set-25)
poss(going-28, his-26)
amod(going-28, water-wheel-27)
dobj(set-25, going-28)
cop(dry-31, was-29)
advmod(dry-31, nearly-30)
ccomp(discovered-6, dry-31)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (VP
        (ADVP (RB soon))
        (VBN made)
        (NP
          (NP (DT a) (JJ nice) (JJ little) (NN channel))
          (PP (IN for)
            (NP (PRP it))))
        (, ,)
        (SBAR (RB so) (IN that)
          (S
            (NP (PRP it))
            (VP (MD should) (RB not)
              (VP (VB get)
                (PP (IN into)
                  (NP
                    (NP (DT any))
                    (PP (IN of)
                      (NP (DT the) (NNS beds)))))))))))
    (. .)))

nsubj(made-4, He-1)
aux(made-4, had-2)
advmod(made-4, soon-3)
root(ROOT-0, made-4)
det(channel-8, a-5)
amod(channel-8, nice-6)
amod(channel-8, little-7)
dobj(made-4, channel-8)
prep_for(channel-8, it-10)
advmod(get-17, so-12)
mark(get-17, that-13)
nsubj(get-17, it-14)
aux(get-17, should-15)
neg(get-17, not-16)
advcl(made-4, get-17)
prep_into(get-17, any-19)
det(beds-22, the-21)
prep_of(any-19, beds-22)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD laid)
          (PRT (RP down))
          (NP (NN turf))
          (PP (IN along)
            (NP (PRP$ its) (NNS banks)))
          (PP (IN in)
            (NP (DT some) (NNS parts))))
        (, ,)
        (CC and)
        (VP (VBD sowed)
          (NP (NN grass)
            (CC and)
            (NN daisy-seed))
          (PP (IN in)
            (NP (NNS others))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD found)
            (NP
              (NP (DT a) (JJ pretty) (NN stone)
                (CC or)
                (NN shell))
              (, ,)
              (NP
                (NP
                  (QP (CC or)
                    (RB bit)))
                (PP (IN of)
                  (NP
                    (NP (VBN coloured) (NN glass))
                    (CC or)
                    (NP
                      (NP (JJ bright) (NN crockery))
                      (CC or)
                      (NP (VBN broken) (NN mirror))))))))))
      (, ,)
      (NP (PRP he))
      (VP (MD would)
        (ADVP (RB always))
        (VP (VB throw)
          (NP (PRP it))
          (PP (IN in))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN water))
              (VP (MD might)
                (VP (VB have)
                  (NP (DT the) (JJ prettier) (NN path)
                    (S
                      (VP (TO to)
                        (VP (VB run)
                          (PP (RB upon)))))))))))))
    (. .)))

nsubj(laid-2, He-1)
nsubj(sowed-13, He-1)
root(ROOT-0, laid-2)
prt(laid-2, down-3)
dobj(laid-2, turf-4)
poss(banks-7, its-6)
prep_along(laid-2, banks-7)
det(parts-10, some-9)
prep_in(laid-2, parts-10)
conj_and(laid-2, sowed-13)
dobj(sowed-13, grass-14)
dobj(sowed-13, daisy-seed-16)
conj_and(grass-14, daisy-seed-16)
prep_in(sowed-13, others-18)
advmod(found-23, when-21)
nsubj(found-23, he-22)
advcl(throw-45, found-23)
det(stone-26, a-24)
amod(stone-26, pretty-25)
dobj(found-23, stone-26)
dobj(found-23, shell-28)
conj_or(stone-26, shell-28)
cc(bit-31, or-30)
appos(stone-26, bit-31)
amod(glass-34, coloured-33)
prep_of(bit-31, glass-34)
amod(crockery-37, bright-36)
prep_of(bit-31, crockery-37)
conj_or(glass-34, crockery-37)
amod(mirror-40, broken-39)
conj_or(glass-34, mirror-40)
conj_or(crockery-37, mirror-40)
nsubj(throw-45, he-42)
aux(throw-45, would-43)
advmod(throw-45, always-44)
conj_and(laid-2, throw-45)
dobj(throw-45, it-46)
prep(throw-45, in-47)
mark(have-53, that-49)
det(water-51, the-50)
nsubj(have-53, water-51)
aux(have-53, might-52)
ccomp(throw-45, have-53)
det(path-56, the-54)
amod(path-56, prettier-55)
dobj(have-53, path-56)
aux(run-58, to-57)
vmod(path-56, run-58)
prep(run-58, upon-59)

(ROOT
  (S
    (ADVP (RB Indeed))
    (, ,)
    (NP (PRP he))
    (VP (VBN emptied)
      (NP
        (NP (PRP$ his) (NN store))
        (PP (IN of)
          (NP (NNS marbles))))
      (PP (IN into)
        (NP (PRP it))))
    (. .)))

advmod(emptied-4, Indeed-1)
nsubj(emptied-4, he-3)
root(ROOT-0, emptied-4)
poss(store-6, his-5)
dobj(emptied-4, store-6)
prep_of(store-6, marbles-8)
prep_into(emptied-4, it-10)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was) (RB not)
        (ADJP (RB particularly) (JJ fond)
          (PP (IN of)
            (S
              (VP (VBG playing)
                (PP (IN with)
                  (NP (NNS marbles)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD had)
          (NP
            (NP (DT a) (JJ great) (NN fancy))
            (PP (IN for)
              (NP
                (NP (DT those))
                (PP (IN of)
                  (NP (JJ real) (JJ white) (NN marble))))))
          (PP (IN with)
            (NP (JJ lovely) (JJ red) (NNS streaks))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (VP (VBN collected)
            (PP
              (NP (DT some) (CD twenty)
                (CC or)
                (CD thirty))
              (IN of)
              (NP (PRP them)))))))
    (. .)))

nsubj(fond-5, He-1)
cop(fond-5, was-2)
neg(fond-5, not-3)
advmod(fond-5, particularly-4)
root(ROOT-0, fond-5)
prepc_of(fond-5, playing-7)
prep_with(playing-7, marbles-9)
nsubj(had-13, he-12)
nsubj(collected-30, he-12)
conj_but(fond-5, had-13)
det(fancy-16, a-14)
amod(fancy-16, great-15)
dobj(had-13, fancy-16)
prep_for(fancy-16, those-18)
amod(marble-22, real-20)
amod(marble-22, white-21)
prep_of(those-18, marble-22)
amod(streaks-26, lovely-24)
amod(streaks-26, red-25)
prep_with(had-13, streaks-26)
aux(collected-30, had-29)
conj_but(fond-5, collected-30)
conj_and(had-13, collected-30)
dep(twenty-32, some-31)
npadvmod(collected-30, twenty-32)
npadvmod(collected-30, thirty-34)
conj_or(twenty-32, thirty-34)
prep_of(collected-30, them-36)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD kept)
      (NP (PRP them))
      (PP
        (PP (IN in)
          (NP (DT the) (NN brook))
          (ADVP (RB now)))
        (, ,)
        (CONJP (RB instead) (IN of))
        (PP (IN in)
          (NP (DT a) (NN calico) (NN bag)))))
    (. .)))

nsubj(kept-2, He-1)
root(ROOT-0, kept-2)
dobj(kept-2, them-3)
det(brook-6, the-5)
prep_in(kept-2, brook-6)
advmod(kept-2, now-7)
det(bag-14, a-12)
nn(bag-14, calico-13)
prep_in(kept-2, bag-14)
conj_negcc(brook-6, bag-14)

(ROOT
  (S
    (NP (DT The) (NN summer))
    (VP (VBD was)
      (NP (DT a)
        (ADJP (RB very) (JJ hot)
          (CC and)
          (JJ dry))
        (NN one)))
    (. .)))

det(summer-2, The-1)
nsubj(one-9, summer-2)
cop(one-9, was-3)
det(one-9, a-4)
advmod(hot-6, very-5)
amod(one-9, hot-6)
conj_and(hot-6, dry-8)
amod(one-9, dry-8)
root(ROOT-0, one-9)

(ROOT
  (S
    (S
      (NP
        (NP (JJR More))
        (PP (IN than)
          (NP
            (NP (DT any))
            (PP (IN of)
              (NP
                (NP (DT the) (NN rest))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNS gardens))
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN village))
                        (, ,)
                        (NP
                          (NP (DT that))
                          (PP (IN of)
                            (NP
                              (NP (DT The) (NNPS Ruins))
                              (VP (VBN suffered)
                                (PP (IN from)
                                  (NP (JJ such) (NN weather))))))
                          (: ;)
                          (PP (IN for)
                            (NP (RB not) (RB only)))))))))))))
      (VP (VBD was)
        (ADVP (RB there))
        (NP (DT a) (JJ deep) (NN gravel-bed))
        (PP (IN under)
          (NP (PRP$ its) (NN mould)))))
    (, ,)
    (CC but)
    (S
      (S
        (NP
          (NP (DT a) (JJ good) (NN part))
          (PP (IN of)
            (NP (PRP$ its) (NN produce))))
        (VP (VBD grew)
          (PP (IN on)
            (NP
              (NP (DT the) (NNS mounds))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD were)
                    (ADVP (RB mostly))
                    (NP
                      (NP (NNS heaps))
                      (PP (IN of)
                        (NP (NNS stones)))))))))))
      (, ,)
      (CC and)
      (S
        (NP (CC neither)
          (NP (NN gravel))
          (CC nor)
          (NP (NNS stones)))
        (VP (MD could)
          (VP (VB retain)
            (NP (JJ much) (NN moisture))))))
    (. .)))

nsubj(gravel-bed-30, More-1)
prep_than(More-1, any-3)
det(rest-6, the-5)
prep_of(any-3, rest-6)
det(gardens-9, the-8)
prep_of(rest-6, gardens-9)
det(village-12, the-11)
prep_in(gardens-9, village-12)
appos(village-12, that-14)
det(Ruins-17, The-16)
prep_of(that-14, Ruins-17)
vmod(Ruins-17, suffered-18)
amod(weather-21, such-20)
prep_from(suffered-18, weather-21)
prep(that-14, for-23)
neg(only-25, not-24)
pobj(for-23, only-25)
cop(gravel-bed-30, was-26)
advmod(gravel-bed-30, there-27)
det(gravel-bed-30, a-28)
amod(gravel-bed-30, deep-29)
root(ROOT-0, gravel-bed-30)
poss(mould-33, its-32)
prep_under(gravel-bed-30, mould-33)
det(part-38, a-36)
amod(part-38, good-37)
nsubj(grew-42, part-38)
poss(produce-41, its-40)
prep_of(part-38, produce-41)
conj_but(gravel-bed-30, grew-42)
det(mounds-45, the-44)
prep_on(grew-42, mounds-45)
nsubj(heaps-50, mounds-45)
cop(heaps-50, were-48)
advmod(heaps-50, mostly-49)
rcmod(mounds-45, heaps-50)
prep_of(heaps-50, stones-52)
preconj(gravel-56, neither-55)
nsubj(retain-60, gravel-56)
conj_nor(gravel-56, stones-58)
nsubj(retain-60, stones-58)
aux(retain-60, could-59)
conj_but(gravel-bed-30, retain-60)
conj_and(grew-42, retain-60)
amod(moisture-62, much-61)
dobj(retain-60, moisture-62)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (VBD watered)
        (S
          (NP (PRP it))
          (NP
            (NP (DT a) (JJ good) (NN deal))
            (PP (RB out) (IN of)
              (NP
                (NP (DT the) (NN Prior) (POS 's))
                (NNP Well)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP
        (VP (VBD was)
          (NP (JJ hard) (NN work)))
        (, ,)
        (CC and)
        (VP (VBD did) (RB not)
          (VP (VB seem)
            (S
              (VP (TO to)
                (VP (VB be)
                  (PP (IN of)
                    (NP (JJ much) (NN use))))))))))
    (. .)))

nsubj(watered-2, Willie-1)
root(ROOT-0, watered-2)
nsubj(deal-6, it-3)
det(deal-6, a-4)
amod(deal-6, good-5)
xcomp(watered-2, deal-6)
det(Prior-10, the-9)
poss(Well-12, Prior-10)
prep_out_of(deal-6, Well-12)
nsubj(work-18, it-15)
nsubj(seem-23, it-15)
nsubj(be-25, it-15)
cop(work-18, was-16)
amod(work-18, hard-17)
conj_but(watered-2, work-18)
aux(seem-23, did-21)
neg(seem-23, not-22)
conj_but(watered-2, seem-23)
conj_and(work-18, seem-23)
aux(be-25, to-24)
xcomp(seem-23, be-25)
amod(use-28, much-27)
prep_of(be-25, use-28)

(ROOT
  (S
    (NP (CD One) (NN evening))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN set)
              (S
                (NP (DT the) (JJ little) (NN brook))
                (ADJP (JJ free)
                  (S
                    (VP (TO to)
                      (VP (VB run)
                        (PP (IN through)
                          (NP (DT the) (NN garden)))))))))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN sun))
          (VP (VBD was)
            (VP (VBG setting)
              (ADJP (JJ huge)
                (CC and)
                (JJ red) (, ,)
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN promise))
                    (PP (IN of)
                      (NP (DT another) (JJ glowing) (NN day) (NN to-morrow)))))))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NN air))
          (VP (VBD was)
            (VP (VBG stifling))))
        (, ,)
        (CC and)
        (RB not)
        (S
          (S
            (NP
              (NP (DT a) (NN breath))
              (PP (IN of)
                (NP
                  (NP (NN wind))
                  (VP (VBG stirring) (, ,)
                    (SBAR (RB so) (IN that)
                      (S
                        (NP (DT the) (NNS flowers))
                        (VP (VBD hung)
                          (NP (PRP$ their) (NNS heads)))))))))
            (VP (VBD oppressed)))
          (, ,)
          (CC and)
          (S
            (NP
              (NP (DT the) (NNS leaves))
              (CC and)
              (NP
                (NP (JJ little) (NNS buttons))
                (PP (IN of)
                  (NP
                    (NP (NN fruit))
                    (PP (IN on)
                      (NP (DT the) (NNS trees)))))))
            (VP (VBD looked)
              (ADJP (JJ ready)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB shrivel)
                        (PRT (RP up)))
                      (CC and)
                      (VP (VB drop)
                        (PP (IN from)
                          (NP (DT the) (NNS boughs)))))))))))))
    (, ,)
    (NP (DT the) (NN thought))
    (VP (VBD came)
      (PP (TO to)
        (NP (PRP him)))
      (SBAR (IN whether)
        (S
          (NP (PRP he))
          (VP
            (VP (MD could) (RB not)
              (VP (VB turn)
                (NP (DT the) (NN brook))
                (PP (IN into)
                  (NP (DT a) (JJ little) (NNP Nile)))
                (, ,)
                (S
                  (VP (VBG causing)
                    (S
                      (NP (PRP it))
                      (VP (TO to)
                        (VP (VB overflow)
                          (NP (PRP$ its) (NNS banks)))))))))
            (CC and)
            (VP (VBP enrich)
              (NP (DT the) (NN garden)))))))
    (. .)))

num(evening-2, One-1)
tmod(came-83, evening-2)
advmod(set-7, when-4)
nsubj(set-7, he-5)
aux(set-7, had-6)
advcl(came-83, set-7)
det(brook-10, the-8)
amod(brook-10, little-9)
nsubj(free-11, brook-10)
nsubj(run-13, brook-10)
xcomp(set-7, free-11)
aux(run-13, to-12)
xcomp(free-11, run-13)
det(garden-16, the-15)
prep_through(run-13, garden-16)
det(sun-20, the-19)
nsubj(setting-22, sun-20)
aux(setting-22, was-21)
conj_and(set-7, setting-22)
advcl(came-83, setting-22)
acomp(setting-22, huge-23)
acomp(setting-22, red-25)
conj_and(huge-23, red-25)
acomp(setting-22, with-27)
conj_and(huge-23, with-27)
det(promise-29, the-28)
prep_with(huge-23, promise-29)
det(to-morrow-34, another-31)
amod(to-morrow-34, glowing-32)
nn(to-morrow-34, day-33)
prep_of(promise-29, to-morrow-34)
det(air-38, the-37)
nsubj(stifling-40, air-38)
aux(stifling-40, was-39)
conj_and(set-7, stifling-40)
advcl(came-83, stifling-40)
neg(oppressed-57, not-43)
det(breath-45, a-44)
nsubj(oppressed-57, breath-45)
prep_of(breath-45, wind-47)
vmod(wind-47, stirring-48)
advmod(hung-54, so-50)
mark(hung-54, that-51)
det(flowers-53, the-52)
nsubj(hung-54, flowers-53)
advcl(stirring-48, hung-54)
poss(heads-56, their-55)
dobj(hung-54, heads-56)
conj_and(set-7, oppressed-57)
advcl(came-83, oppressed-57)
det(leaves-61, the-60)
nsubj(looked-70, leaves-61)
amod(buttons-64, little-63)
conj_and(leaves-61, buttons-64)
nsubj(looked-70, buttons-64)
prep_of(buttons-64, fruit-66)
det(trees-69, the-68)
prep_on(fruit-66, trees-69)
conj_and(set-7, looked-70)
conj_and(oppressed-57, looked-70)
acomp(looked-70, ready-71)
aux(shrivel-73, to-72)
xcomp(ready-71, shrivel-73)
prt(shrivel-73, up-74)
xcomp(ready-71, drop-76)
conj_and(shrivel-73, drop-76)
det(boughs-79, the-78)
prep_from(drop-76, boughs-79)
det(thought-82, the-81)
nsubj(came-83, thought-82)
root(ROOT-0, came-83)
prep_to(came-83, him-85)
mark(turn-90, whether-86)
nsubj(turn-90, he-87)
nsubj(enrich-105, he-87)
aux(turn-90, could-88)
neg(turn-90, not-89)
ccomp(came-83, turn-90)
det(brook-92, the-91)
dobj(turn-90, brook-92)
det(Nile-96, a-94)
amod(Nile-96, little-95)
prep_into(turn-90, Nile-96)
vmod(turn-90, causing-98)
dobj(causing-98, it-99)
nsubj(overflow-101, it-99)
aux(overflow-101, to-100)
xcomp(causing-98, overflow-101)
poss(banks-103, its-102)
dobj(overflow-101, banks-103)
ccomp(came-83, enrich-105)
conj_and(turn-90, enrich-105)
det(garden-107, the-106)
dobj(enrich-105, garden-107)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (MD could) (RB not)
        (VP
          (PRN (, ,)
            (PP (IN of)
              (NP (NN course)))
            (, ,))
          (VB bring)
          (NP (PRP it))
          (SBAR
            (SBAR (IN about)
              (S
                (PP (IN in)
                  (NP
                    (NP (DT the) (JJ same) (NN way))
                    (: ;)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NNP Nile) (NNS overflows))
                        (PP (IN from)
                          (NP
                            (NP (DT the) (NNS quantities))
                            (PP (IN of)
                              (NP (NN rain)))))))
                    (ADVP (RB up)
                      (PP (IN in)
                        (NP (DT the) (JJ far-off) (NNS mountains))))))
                (, ,)
                (S
                  (VP (VBG making)
                    (NP (JJ huge) (NNS torrents))))
                (VP (VBP rush)
                  (PP (IN into)
                    (NP (PRP it)))
                  (ADVP
                    (ADVP (RBR faster))
                    (SBAR (IN than)
                      (S
                        (NP (PRP$ its) (NN channel))
                        (, ,)
                        (PP (IN through)
                          (NP (DT a) (JJ slow) (, ,) (JJ level) (NN country)))
                        (, ,)
                        (VP (MD can)
                          (VP (VB carry)
                            (NP (DT the) (NN water))
                            (ADVP (RB away))))))))))
            (, ,)
            (CC so)
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP
                    (NP (NN nothing))
                    (PP (IN for)
                      (NP (PRP it))))))))))
      (CC but)
      (VP (VBZ overflow)))
    (. .)))

nsubj(bring-8, He-1)
nsubj(overflow-63, He-1)
aux(bring-8, could-2)
neg(bring-8, not-3)
dep(bring-8, of-5)
pobj(of-5, course-6)
root(ROOT-0, bring-8)
dobj(bring-8, it-9)
mark(rush-34, about-10)
det(way-14, the-12)
amod(way-14, same-13)
prep_in(rush-34, way-14)
det(overflows-19, the-17)
nn(overflows-19, Nile-18)
prep_for(way-14, overflows-19)
det(quantities-22, the-21)
prep_from(overflows-19, quantities-22)
prep_of(quantities-22, rain-24)
advmod(way-14, up-25)
det(mountains-29, the-27)
amod(mountains-29, far-off-28)
prep_in(up-25, mountains-29)
csubj(rush-34, making-31)
amod(torrents-33, huge-32)
dobj(making-31, torrents-33)
advcl(bring-8, rush-34)
ccomp(bring-8, rush-34)
prep_into(rush-34, it-36)
advmod(rush-34, faster-37)
mark(carry-50, than-38)
poss(channel-40, its-39)
nsubj(carry-50, channel-40)
det(country-47, a-43)
amod(country-47, slow-44)
amod(country-47, level-46)
prep_through(carry-50, country-47)
aux(carry-50, can-49)
advcl(faster-37, carry-50)
det(water-52, the-51)
dobj(carry-50, water-52)
advmod(carry-50, away-53)
mark(is-58, that-56)
expl(is-58, there-57)
advcl(bring-8, is-58)
ccomp(bring-8, is-58)
conj_so(rush-34, is-58)
nsubj(is-58, nothing-59)
prep_for(nothing-59, it-61)
conj_but(bring-8, overflow-63)

(ROOT
  (S
    (SBAR (IN If)
      (PRN (, ,)
        (ADVP (RB however))
        (, ,))
      (S
        (NP (PRP he))
        (VP (MD could) (RB not)
          (VP (VB make)
            (NP
              (NP (JJR more) (NN water))
              (VP (VBN run)
                (PRT (RP out))
                (PP (IN of)
                  (NP (DT the) (NN well)))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD could)
      (VP (VB make)
        (S
          (NP (PRP it))
          (ADJP (RBR more) (JJ difficult)))
        (PP (IN for)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD did)
                (VP (VBN come)
                  (PP (IN from)
                    (NP (PRP it)))
                  (S
                    (VP (TO to)
                      (VP (VB get)
                        (PRT (RP away))))))))))))
    (. .)))

mark(make-8, If-1)
dep(make-8, however-3)
nsubj(make-8, he-5)
aux(make-8, could-6)
neg(make-8, not-7)
advcl(make-19, make-8)
amod(water-10, more-9)
dobj(make-8, water-10)
vmod(water-10, run-11)
det(well-15, the-14)
prep_out_of(run-11, well-15)
nsubj(make-19, he-17)
aux(make-19, could-18)
root(ROOT-0, make-19)
nsubj(difficult-22, it-20)
advmod(difficult-22, more-21)
xcomp(make-19, difficult-22)
nsubj(come-26, what-24)
nsubj(get-30, what-24)
aux(come-26, did-25)
prepc_for(make-19, come-26)
prep_from(come-26, it-28)
aux(get-30, to-29)
xcomp(come-26, get-30)
prt(get-30, away-31)

(ROOT
  (S
    (ADVP (RB First))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD stopped)
        (PRT (RP up))
        (NP (DT the) (NN outlet))
        (PP (IN through)
          (NP (DT the) (NN hedge)))
        (PP (IN with)
          (NP
            (NP
              (NP (NNS stones))
              (, ,)
              (CC and)
              (NP (NN clay))
              (, ,))
            (CC and)
            (NP
              (NP (NNS bits))
              (PP (IN of)
                (NP (NN board))))))))
    (: ;)
    (S
      (NP (RB then))
      (VP (VBD watched)
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (VBD spread) (, ,)
              (SBAR (IN until)
                (S
                  (NP (PRP he))
                  (VP
                    (VP (VBD saw)
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (PRP it))
                          (VP (MD would)
                            (VP (VB try)
                              (S
                                (VP (TO to)
                                  (VP (VB escape)
                                    (ADVP (JJ next))))))))))
                    (, ,)
                    (CC and)
                    (VP (VBD did)
                      (NP (DT the) (JJ same)))))))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB so) (RB on))
      (, ,)
      (NP (NN taking))
      (VP (VBP care)
        (ADVP (RB especially))
        (S
          (VP (TO to)
            (VP (VB keep)
              (NP (PRP it))
              (PP (IN from)
                (NP (DT the) (NN house))))))))
    (. .)))

advmod(stopped-4, First-1)
nsubj(stopped-4, he-3)
root(ROOT-0, stopped-4)
prt(stopped-4, up-5)
det(outlet-7, the-6)
dobj(stopped-4, outlet-7)
det(hedge-10, the-9)
prep_through(stopped-4, hedge-10)
prep_with(stopped-4, stones-12)
prep_with(stopped-4, clay-15)
conj_and(stones-12, clay-15)
prep_with(stopped-4, bits-18)
conj_and(stones-12, bits-18)
prep_of(bits-18, board-20)
nsubj(watched-23, then-22)
conj_and(stopped-4, watched-23)
mark(spread-26, as-24)
nsubj(spread-26, it-25)
advcl(watched-23, spread-26)
mark(saw-30, until-28)
nsubj(saw-30, he-29)
nsubj(did-40, he-29)
advcl(spread-26, saw-30)
advmod(try-34, where-31)
nsubj(try-34, it-32)
nsubj(escape-36, it-32)
aux(try-34, would-33)
advcl(saw-30, try-34)
aux(escape-36, to-35)
xcomp(try-34, escape-36)
advmod(escape-36, next-37)
advcl(spread-26, did-40)
conj_and(saw-30, did-40)
det(same-42, the-41)
dobj(did-40, same-42)
advmod(on-46, so-45)
advmod(care-49, on-46)
nsubj(care-49, taking-48)
nsubj(keep-52, taking-48)
conj_and(stopped-4, care-49)
advmod(care-49, especially-50)
aux(keep-52, to-51)
xcomp(care-49, keep-52)
dobj(keep-52, it-53)
det(house-56, the-55)
prep_from(keep-52, house-56)

(ROOT
  (S
    (S
      (NP (DT The) (NNS mounds))
      (VP (VBD were)
        (NP
          (NP (DT a) (JJ great) (NN assistance))
          (PP (TO to)
            (NP (PRP him))))
        (PP (IN in)
          (S
            (VP (VBG hemming)
              (NP (PRP it))
              (PP (IN in)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD had)
          (NP
            (NP (JJ hard) (JJ enough) (NN work))
            (PP (IN of)
              (NP (PRP it))))
          (PP (IN notwithstanding)))
        (: ;)
        (CC and)
        (VP
          (ADVP (RB soon))
          (VBN perceived)
          (SBAR (IN that)
            (S
              (PP (IN at)
                (NP (CD one) (NN spot)))
              (NP (PRP it))
              (VP (MD would)
                (VP
                  (VP (VB get)
                    (NP
                      (NP (DT the) (JJR better))
                      (PP (IN of)
                        (NP (PRP him))))
                    (PP (IN in)
                      (NP (DT a) (JJ few) (NNS minutes))))
                  (, ,)
                  (CC and)
                  (VP (VB make)
                    (ADVP (RB straight))
                    (PP (IN for)
                      (NP (DT the) (NN back-door)))))))))))
    (. .)))

det(mounds-2, The-1)
nsubj(assistance-6, mounds-2)
cop(assistance-6, were-3)
det(assistance-6, a-4)
amod(assistance-6, great-5)
root(ROOT-0, assistance-6)
prep_to(assistance-6, him-8)
prepc_in(assistance-6, hemming-10)
dobj(hemming-10, it-11)
prep(hemming-10, in-12)
nsubj(had-16, he-15)
nsubj(perceived-26, he-15)
conj_but(assistance-6, had-16)
amod(work-19, hard-17)
amod(work-19, enough-18)
dobj(had-16, work-19)
prep_of(work-19, it-21)
prep(had-16, notwithstanding-22)
advmod(perceived-26, soon-25)
conj_but(assistance-6, perceived-26)
conj_and(had-16, perceived-26)
mark(get-33, that-27)
num(spot-30, one-29)
prep_at(get-33, spot-30)
nsubj(get-33, it-31)
nsubj(make-44, it-31)
aux(get-33, would-32)
ccomp(perceived-26, get-33)
det(better-35, the-34)
dobj(get-33, better-35)
prep_of(better-35, him-37)
det(minutes-41, a-39)
amod(minutes-41, few-40)
prep_in(get-33, minutes-41)
ccomp(perceived-26, make-44)
conj_and(get-33, make-44)
advmod(make-44, straight-45)
det(back-door-48, the-47)
prep_for(make-44, back-door-48)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD ran)
        (ADVP (IN at) (RB once)))
      (CC and)
      (VP (VBD opened)
        (NP (DT the) (NN sluice))
        (PP (IN in)
          (NP (DT the) (NN well))))
      (, ,)
      (CC and)
      (ADVP (RB away)
        (NP (DT the) (NN stream)))
      (VP (VBD gurgled)
        (ADVP (RB underground))))
    (. .)))

nsubj(ran-2, He-1)
nsubj(opened-6, He-1)
nsubj(gurgled-17, He-1)
root(ROOT-0, ran-2)
advmod(ran-2, at-3)
advmod(at-3, once-4)
conj_and(ran-2, opened-6)
det(sluice-8, the-7)
dobj(opened-6, sluice-8)
det(well-11, the-10)
prep_in(opened-6, well-11)
advmod(ran-2, away-14)
conj_and(ran-2, away-14)
det(stream-16, the-15)
pobj(away-14, stream-16)
conj_and(ran-2, gurgled-17)
advmod(gurgled-17, underground-18)

(ROOT
  (S
    (PP (IN Before)
      (NP (NN morning)))
    (NP
      (NP (DT the) (NN water))
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD left)))))
    (VP (VBD had) (RB all)
      (VP (VBN disappeared)))
    (. .)))

prep_before(disappeared-9, morning-2)
det(water-4, the-3)
nsubj(disappeared-9, water-4)
nsubj(left-6, it-5)
rcmod(water-4, left-6)
aux(disappeared-9, had-7)
advmod(disappeared-9, all-8)
root(ROOT-0, disappeared-9)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD had)
        (VP (VBN soaked)
          (PP
            (PP (IN through)
              (NP (DT the) (NNS mounds)))
            (, ,)
            (CC and)
            (PP (IN into)
              (NP (DT the) (NN gravel)))))))
    (, ,)
    (CC but)
    (S
      (VP
        (VP (VBG comforting)
          (NP (DT the) (JJ hot) (NNS roots))
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP (VBD went)))))
        (, ,)
        (CC and)
        (VP (VBG feeding)
          (NP (PRP them))
          (PP (IN with)
            (NP (JJ dissolved) (NNS minerals))))))
    (. .)))

nsubj(soaked-3, It-1)
nsubj(soaked-3', It-1)
nsubj(comforting-14, It-1)
aux(soaked-3, had-2)
root(ROOT-0, soaked-3)
conj_and(soaked-3, soaked-3')
det(mounds-6, the-5)
prep_through(soaked-3, mounds-6)
det(gravel-11, the-10)
prep_into(soaked-3', gravel-11)
conj_but(soaked-3, comforting-14)
det(roots-17, the-15)
amod(roots-17, hot-16)
dobj(comforting-14, roots-17)
mark(went-20, as-18)
nsubj(went-20, it-19)
advcl(comforting-14, went-20)
conj_but(soaked-3, feeding-23)
conj_and(comforting-14, feeding-23)
dobj(feeding-23, them-24)
amod(minerals-27, dissolved-26)
prep_with(feeding-23, minerals-27)

(ROOT
  (S
    (NP (NNS Doubtless))
    (, ,)
    (ADVP (RB also))
    (, ,)
    (NP (PRP it))
    (VP (VBD lay)
      (NP (DT all) (NN night))
      (PP (IN in)
        (NP (PDT many) (DT a) (JJ little) (JJ hidden) (NN pool)))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP
            (NP (DT the) (NN heat))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ next) (NN day) (POS 's))
                (NN sun))))
          (VP (VBD drew)
            (PRT (RP up))
            (, ,)
            (ADVP (RB comforting) (RB again))
            (, ,)
            (PP
              (PP (IN through)
                (NP
                  (NP (DT the) (NNS roots))
                  (PP (IN in)
                    (NP (DT the) (NN earth)))))
              (, ,)
              (CC and)
              (PP (IN through)
                (NP
                  (NP (DT the) (NNS leaves))
                  (PP (IN in)
                    (NP (DT the) (NN air)))))
              (, ,) (RB up)
              (PP (IN into)
                (NP (DT the) (NN sky))))))))
    (. .)))

nsubj(lay-6, Doubtless-1)
advmod(lay-6, also-3)
nsubj(lay-6, it-5)
root(ROOT-0, lay-6)
det(night-8, all-7)
tmod(lay-6, night-8)
predet(pool-14, many-10)
det(pool-14, a-11)
amod(pool-14, little-12)
amod(pool-14, hidden-13)
prep_in(lay-6, pool-14)
dobj(drew-25, which-16)
det(heat-18, the-17)
nsubj(drew-25, heat-18)
det(day-22, the-20)
amod(day-22, next-21)
poss(sun-24, day-22)
prep_of(heat-18, sun-24)
dep(lay-6, drew-25)
prt(drew-25, up-26)
advmod(again-29, comforting-28)
advmod(drew-25, again-29)
det(roots-33, the-32)
prep_through(drew-25, roots-33)
det(earth-36, the-35)
prep_in(roots-33, earth-36)
det(leaves-41, the-40)
prep_through(drew-25, leaves-41)
conj_and(roots-33, leaves-41)
det(air-44, the-43)
prep_in(leaves-41, air-44)
conj(drew-25, up-46)
dep(drew-25, into-47)
det(sky-49, the-48)
pobj(into-47, sky-49)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (MD could) (RB not)
        (VP (VB help)
          (S
            (VP (VBG thinking)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN garden))
                  (VP (VBD looked)
                    (ADJP (JJ refreshed))))))))))
    (: ;)
    (S
      (NP (DT the) (NN green))
      (VP (VBD was)
        (ADJP (JJ brighter))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD thought)))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS flowers))
      (VP (VBD held)
        (PRT (RP up))
        (NP
          (NP (PRP$ their) (NNS heads))
          (ADJP
            (NP (DT a) (RB little))
            (JJR better)))))
    (: ;)
    (S
      (NP (DT the) (NNS carrots))
      (VP (VBD looked)
        (ADJP
          (ADJP (RBR more) (JJ feathery))
          (, ,)
          (CC and)
          (ADJP
            (NP (DT the) (NNS ferns))
            (RBR more) (JJ palmy)))))
    (: ;)
    (S
      (NP (NN everything))
      (VP (VBD looked)
        (PRN (, ,)
          (S
            (NP (PRP he))
            (VP (VBD said)))
          (, ,))
        (SBAR (RB just) (IN as)
          (S
            (NP (PRP he))
            (VP (VBD felt)
              (SBAR (IN after)
                (S
                  (NP
                    (NP (DT a) (JJ good) (NN drink))
                    (PP (RB out) (IN of)
                      (NP (DT the) (NN Prior))))
                  (VP (VBZ 's)
                    (ADVP (RB Well))))))))))
    (. .)))

nsubj(help-4, Willie-1)
aux(help-4, could-2)
neg(help-4, not-3)
root(ROOT-0, help-4)
xcomp(help-4, thinking-5)
mark(looked-9, that-6)
det(garden-8, the-7)
nsubj(looked-9, garden-8)
ccomp(thinking-5, looked-9)
acomp(looked-9, refreshed-10)
det(green-13, the-12)
nsubj(brighter-15, green-13)
cop(brighter-15, was-14)
conj_and(help-4, brighter-15)
nsubj(thought-18, he-17)
ccomp(help-4, thought-18)
conj_and(help-4, thought-18)
det(flowers-22, the-21)
nsubj(held-23, flowers-22)
conj_and(help-4, held-23)
prt(held-23, up-24)
poss(heads-26, their-25)
dobj(held-23, heads-26)
det(little-28, a-27)
npadvmod(better-29, little-28)
amod(heads-26, better-29)
det(carrots-32, the-31)
nsubj(looked-33, carrots-32)
conj_and(help-4, looked-33)
parataxis(help-4, looked-33)
advmod(feathery-35, more-34)
acomp(looked-33, feathery-35)
det(ferns-39, the-38)
dep(palmy-41, ferns-39)
advmod(palmy-41, more-40)
acomp(looked-33, palmy-41)
conj_and(feathery-35, palmy-41)
nsubj(looked-44, everything-43)
conj_and(help-4, looked-44)
parataxis(help-4, looked-44)
nsubj(said-47, he-46)
parataxis(looked-44, said-47)
advmod(felt-52, just-49)
mark(felt-52, as-50)
nsubj(felt-52, he-51)
advcl(looked-44, felt-52)
mark('s-61, after-53)
det(drink-56, a-54)
amod(drink-56, good-55)
nsubj('s-61, drink-56)
det(Prior-60, the-59)
prep_out_of(drink-56, Prior-60)
advcl(felt-52, 's-61)
advmod('s-61, Well-62)

(ROOT
  (S
    (PP (IN At)
      (NP (DT all) (NNS events)))
    (, ,)
    (NP (PRP he))
    (VP (VBD resolved)
      (S
        (VP (TO to)
          (VP (VB do)
            (NP (DT the) (JJ same)))))
      (NP (DT every) (NN night))
      (PP (IN after)
        (NP
          (NP (NN sunset))
          (SBAR (IN while)
            (S
              (NP (DT the) (JJ hot) (NN weather))
              (VP (VBD lasted))))
          (: --)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP
                (VP (VBD was))
                (, ,)
                (SBAR (IN if)
                  (S
                    (NP (PRP$ his) (NN father))
                    (VP (VBD had)
                      (NP (DT no) (NN objection)))))))))))
    (. .)))

det(events-3, all-2)
prep_at(resolved-6, events-3)
nsubj(resolved-6, he-5)
nsubj(do-8, he-5)
root(ROOT-0, resolved-6)
aux(do-8, to-7)
xcomp(resolved-6, do-8)
det(same-10, the-9)
dobj(do-8, same-10)
det(night-12, every-11)
tmod(resolved-6, night-12)
prep_after(resolved-6, sunset-14)
nsubj(was-22, sunset-14)
mark(lasted-19, while-15)
det(weather-18, the-16)
amod(weather-18, hot-17)
nsubj(lasted-19, weather-18)
rcmod(sunset-14, lasted-19)
rcmod(sunset-14, was-22)
mark(had-27, if-24)
poss(father-26, his-25)
nsubj(had-27, father-26)
advcl(was-22, had-27)
neg(objection-29, no-28)
dobj(had-27, objection-29)

(ROOT
  (S
    (S
      (S
        (NP (NNP Mr) (NNP Macmichael))
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD might)
                (VP (VB try)
                  (NP (PRP it))))))))
      (, ,)
      (ADVP (RB only))
      (S
        (NP (PRP he))
        (VP (MD must)
          (VP
            (VP (VB mind))
            (CC and)
            (VP (RB not)
              (VP (VB go)
                (PP (TO to)
                  (NP (NN bed))))
              (CC and)
              (VP (VB leave)
                (NP
                  (NP (DT the) (NN water))
                  (VP (VBG running)))))))))
    (, ,)
    (NP (RB else) (PRP they))
    (VP (MD would)
      (VP (VB have)
        (NP
          (NP (DT a) (NN cartload))
          (PP (IN of)
            (NP
              (NP (NN mud))
              (PP (IN in)
                (NP (DT the) (NN house))))))
        (PP (IN before)
          (NP (NN morning)))))
    (. .)))

nn(Macmichael-2, Mr-1)
nsubj(said-3, Macmichael-2)
ccomp(have-27, said-3)
nsubj(try-6, he-4)
aux(try-6, might-5)
ccomp(said-3, try-6)
dobj(try-6, it-7)
advmod(mind-12, only-9)
nsubj(mind-12, he-10)
nsubj(go-15, he-10)
aux(mind-12, must-11)
parataxis(said-3, mind-12)
neg(go-15, not-14)
parataxis(said-3, go-15)
conj_and(mind-12, go-15)
prep_to(go-15, bed-17)
conj_and(mind-12, leave-19)
conj_and(go-15, leave-19)
det(water-21, the-20)
dobj(leave-19, water-21)
vmod(water-21, running-22)
advmod(they-25, else-24)
nsubj(have-27, they-25)
aux(have-27, would-26)
root(ROOT-0, have-27)
det(cartload-29, a-28)
dobj(have-27, cartload-29)
prep_of(cartload-29, mud-31)
det(house-34, the-33)
prep_in(mud-31, house-34)
prep_before(have-27, morning-36)

(ROOT
  (S (CC So)
    (S
      (NP (NNP Willie))
      (VP
        (VP (VBD strengthened))
        (CC and)
        (VP (VBD heightened)
          (NP (PRP$ his) (NNS barriers)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG having)
          (VP (VBN built)
            (NP (DT a) (JJ huge) (NN one))
            (PP (IN at)
              (NP
                (NP (DT the) (JJ last) (NN point))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (DT the) (NN water))
                    (VP
                      (VP (VBD had)
                        (VP (VBN tried)
                          (S
                            (VP (TO to)
                              (VP (VB get)
                                (ADVP (RB away))
                                (, ,)
                                (ADVP
                                  (ADVP (RB as) (RB soon))
                                  (SBAR (IN as)
                                    (S
                                      (NP (DT the) (NN sun))
                                      (VP (VBD was)
                                        (ADVP (RB down))
                                        (VP (VBN shut)
                                          (NP (DT the) (NN sluice))))))))))))
                      (, ,)
                      (CC and)
                      (VP (VBD watched)
                        (NP (DT the) (NN water))
                        (SBAR (IN as)
                          (S
                            (NP (PRP it))
                            (VP
                              (VP (VBD surged)
                                (PRT (RP up))
                                (PP (IN in)
                                  (NP
                                    (NP (DT the) (NN throat))
                                    (PP (IN of)
                                      (NP (DT the) (NN well))))))
                              (, ,)
                              (CC and)
                              (VP (VBD rushed)
                                (PRT (RP out))
                                (S
                                  (VP (TO to)
                                    (VP (VB be)
                                      (VP (VBN caught)
                                        (PP (IN in)
                                          (NP (DT the) (NNS toils))))))))))))))))))))
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN made)
          (PP (IN for)
            (NP (PRP it))))))
    (. .)))

nsubj(strengthened-3, Willie-2)
nsubj(heightened-5, Willie-2)
root(ROOT-0, strengthened-3)
conj_and(strengthened-3, heightened-5)
poss(barriers-7, his-6)
dobj(heightened-5, barriers-7)
aux(built-11, having-10)
dep(made-65, built-11)
det(one-14, a-12)
amod(one-14, huge-13)
dobj(built-11, one-14)
det(point-18, the-16)
amod(point-18, last-17)
prep_at(built-11, point-18)
advmod(tried-23, where-19)
det(water-21, the-20)
nsubj(tried-23, water-21)
nsubj(get-25, water-21)
nsubj(watched-40, water-21)
aux(tried-23, had-22)
rcmod(point-18, tried-23)
aux(get-25, to-24)
xcomp(tried-23, get-25)
advmod(get-25, away-26)
advmod(soon-29, as-28)
advmod(get-25, soon-29)
mark(shut-35, as-30)
det(sun-32, the-31)
nsubjpass(shut-35, sun-32)
auxpass(shut-35, was-33)
advmod(shut-35, down-34)
advcl(soon-29, shut-35)
ccomp(soon-29, shut-35)
det(sluice-37, the-36)
dobj(shut-35, sluice-37)
rcmod(point-18, watched-40)
conj_and(tried-23, watched-40)
det(water-42, the-41)
dobj(watched-40, water-42)
mark(surged-45, as-43)
nsubj(surged-45, it-44)
nsubj(rushed-55, it-44)
nsubjpass(caught-59, it-44)
advcl(watched-40, surged-45)
prt(surged-45, up-46)
det(throat-49, the-48)
prep_in(surged-45, throat-49)
det(well-52, the-51)
prep_of(throat-49, well-52)
advcl(watched-40, rushed-55)
conj_and(surged-45, rushed-55)
prt(rushed-55, out-56)
aux(caught-59, to-57)
auxpass(caught-59, be-58)
xcomp(rushed-55, caught-59)
det(toils-62, the-61)
prep_in(caught-59, toils-62)
nsubj(made-65, he-63)
aux(made-65, had-64)
conj_and(strengthened-3, made-65)
prep_for(made-65, it-67)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (PRP it))
        (VP (MD could)
          (VP (VB find)
            (NP (DT a) (JJ fresh) (NN place))
            (S
              (VP (TO to)
                (VP (VB get)
                  (PRT (RP out))
                  (PP (IN at)))))))))
    (, ,)
    (NP
      (NP (DT the) (JJ whole) (JJ upper) (NN part))
      (PP (IN of)
        (NP (DT the) (NN garden))))
    (VP (VBD was)
      (NP
        (NP (CD one) (NN network))
        (PP (IN of)
          (NP (NNS lakes)
            (CC and)
            (NNS islands)))))
    (. .)))

mark(find-4, Before-1)
nsubj(find-4, it-2)
aux(find-4, could-3)
advcl(network-22, find-4)
det(place-7, a-5)
amod(place-7, fresh-6)
dobj(find-4, place-7)
aux(get-9, to-8)
vmod(find-4, get-9)
prt(get-9, out-10)
prep(get-9, at-11)
det(part-16, the-13)
amod(part-16, whole-14)
amod(part-16, upper-15)
nsubj(network-22, part-16)
det(garden-19, the-18)
prep_of(part-16, garden-19)
cop(network-22, was-20)
num(network-22, one-21)
root(ROOT-0, network-22)
prep_of(network-22, lakes-24)
prep_of(network-22, islands-26)
conj_and(lakes-24, islands-26)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD kept)
      (S
        (VP (VBG walking)
          (ADVP (RB round)
            (CC and)
            (RB round))
          (NP (PRP it))))
      (, ,)
      (PP (IN as)
        (SBAR
          (SBAR (IN if)
            (S
              (S
                (NP (PRP it))
                (VP (VBD had)
                  (VP (VBN been)
                    (NP
                      (NP (DT a) (JJ wild) (NN beast))
                      (VP (VBG trying)
                        (S
                          (VP (TO to)
                            (VP (VB get)
                              (PRT (RP out))
                              (PP (IN of)
                                (NP (PRP$ its) (NN cage)))))))))))
              (, ,)
              (CC and)
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (S
                    (VP (TO to)
                      (VP (VB watch)
                        (CC and)
                        (VB prevent)
                        (NP (PRP it))
                        (PP (IN at)
                          (NP (DT every) (JJ weak) (NN spot))))))))))
          (: ;)
          (CC or)
          (SBAR (RB as) (IN if)
            (S
              (NP (PRP he))
              (VP (VBD were)
                (NP (DT a) (NN magician))
                (, ,)
                (ADVP (RB busily))
                (VP (VBG sustaining)
                  (NP (DT the) (NN charm))
                  (PP (IN by)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (PRP he))
                        (VP (VBN confined)
                          (NP (DT the) (JJ gad-about) (NN creature)))))))))))))
    (. .)))

nsubj(kept-2, Willie-1)
root(ROOT-0, kept-2)
xcomp(kept-2, walking-3)
advmod(walking-3, round-4)
advmod(walking-3, round-6)
conj_and(round-4, round-6)
dobj(walking-3, it-7)
mark(beast-16, if-10)
nsubj(beast-16, it-11)
aux(beast-16, had-12)
cop(beast-16, been-13)
det(beast-16, a-14)
amod(beast-16, wild-15)
prepc_as(kept-2, beast-16)
vmod(beast-16, trying-17)
aux(get-19, to-18)
xcomp(trying-17, get-19)
poss(cage-23, its-22)
prep_out_of(get-19, cage-23)
nsubj(had-27, he-26)
nsubj(watch-29, he-26)
nsubj(prevent-31, he-26)
prepc_as(kept-2, had-27)
conj_and(beast-16, had-27)
aux(watch-29, to-28)
xcomp(had-27, watch-29)
xcomp(had-27, prevent-31)
conj_and(watch-29, prevent-31)
dobj(watch-29, it-32)
det(spot-36, every-34)
amod(spot-36, weak-35)
prep_at(watch-29, spot-36)
advmod(sustaining-47, as-39)
mark(sustaining-47, if-40)
nsubj(sustaining-47, he-41)
cop(sustaining-47, were-42)
det(magician-44, a-43)
dep(sustaining-47, magician-44)
advmod(sustaining-47, busily-46)
prepc_as(kept-2, sustaining-47)
conj_or(beast-16, sustaining-47)
det(charm-49, the-48)
dobj(sustaining-47, charm-49)
dobj(confined-53, which-51)
nsubj(confined-53, he-52)
prepc_by(sustaining-47, confined-53)
det(creature-56, the-54)
amod(creature-56, gad-about-55)
dobj(confined-53, creature-56)

(ROOT
  (S
    (NP
      (NP (DT The) (NN moment))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD saw)
            (S
              (NP (PRP it))
              (VP (VBG beginning)
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (NP
                        (NP (DT the) (JJR better))
                        (PP (IN of)
                          (NP (PRP him)))))))))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD ran)
        (PP (TO to)
          (NP (DT the) (NN sluice))))
      (CC and)
      (VP (VBN banished)
        (NP (PRP it))
        (PP (TO to)
          (NP (DT the) (NNS regions)))
        (ADVP (RB below))))
    (. .)))

det(moment-2, The-1)
nsubj(ran-15, moment-2)
nsubj(banished-20, moment-2)
nsubj(saw-4, he-3)
rcmod(moment-2, saw-4)
nsubj(beginning-6, it-5)
nsubj(get-8, it-5)
dep(saw-4, beginning-6)
aux(get-8, to-7)
xcomp(beginning-6, get-8)
det(better-10, the-9)
dobj(get-8, better-10)
prep_of(better-10, him-12)
nsubj(ran-15, he-14)
root(ROOT-0, ran-15)
det(sluice-18, the-17)
prep_to(ran-15, sluice-18)
conj_and(ran-15, banished-20)
dobj(banished-20, it-21)
det(regions-24, the-23)
prep_to(banished-20, regions-24)
advmod(banished-20, below-25)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD fetched)
        (NP (DT an) (JJ old) (NN newspaper))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG sitting)
          (PRT (RP down))
          (PP (IN on)
            (NP
              (NP (DT the) (NNS borders))
              (PP (IN of)
                (NP (PRP$ his) (NN lake)))
              (, ,)
              (VP (VBN fashioned)
                (NP (NN boat))
                (PP (IN after)
                  (NP
                    (NP (NN boat))
                    (PP (RB out) (IN of)
                      (NP (DT the) (NN paper))))))
              (, ,)))))
      (CC and)
      (S
        (VP (VBN sent)
          (S
            (NP (PRP them))
            (VP (VBG sailing)
              (PP (IN like)
                (NP (NN merchant) (NNS ships)))
              (PP (IN from)
                (NP (NN isle)))
              (PP (TO to)
                (NP (VBG blooming) (NN isle))))))))
    (. .)))

advmod(fetched-3, Then-1)
nsubj(fetched-3, he-2)
nsubj(sitting-9, he-2)
root(ROOT-0, fetched-3)
det(newspaper-6, an-4)
amod(newspaper-6, old-5)
dobj(fetched-3, newspaper-6)
conj_and(fetched-3, sitting-9)
prt(sitting-9, down-10)
det(borders-13, the-12)
prep_on(sitting-9, borders-13)
poss(lake-16, his-15)
prep_of(borders-13, lake-16)
vmod(borders-13, fashioned-18)
dobj(fashioned-18, boat-19)
prep_after(fashioned-18, boat-21)
det(paper-25, the-24)
prep_out_of(boat-21, paper-25)
conj_and(fetched-3, sent-28)
conj_and(sitting-9, sent-28)
nsubj(sailing-30, them-29)
dep(sent-28, sailing-30)
nn(ships-33, merchant-32)
prep_like(sailing-30, ships-33)
prep_from(sailing-30, isle-35)
amod(isle-38, blooming-37)
prep_to(sailing-30, isle-38)

(ROOT
  (S
    (NP
      (NP (NNP Night))
      (SBAR (IN after)
        (S
          (NP (NN night))
          (NP (PRP he))
          (VP (VBD flooded)
            (NP
              (NP (DT the) (NN garden))
              (, ,)
              (CC and)
              (ADVP (RB always)
                (PP (IN before)
                  (NP (NN morning))))
              (NP (DT the) (NN water)))))))
    (VP (VBD had)
      (VP (VBN sunk)
        (PRT (RP away))
        (PP (IN through)
          (NP (DT the) (NN gravel)))))
    (. .)))

nsubj(sunk-16, Night-1)
tmod(flooded-5, night-3)
nsubj(flooded-5, he-4)
prepc_after(Night-1, flooded-5)
det(garden-7, the-6)
dobj(flooded-5, garden-7)
dobj(flooded-5, always-10)
advmod(garden-7, always-10)
conj_and(garden-7, always-10)
prep_before(always-10, morning-12)
det(water-14, the-13)
dobj(flooded-5, water-14)
conj_and(garden-7, water-14)
aux(sunk-16, had-15)
root(ROOT-0, sunk-16)
prt(sunk-16, away-17)
det(gravel-20, the-19)
prep_through(sunk-16, gravel-20)

(ROOT
  (S
    (S
      (ADVP (RB Soon))
      (NP (EX there))
      (VP (VBD was)
        (ADVP (RB no) (RB longer))
        (ADVP (DT any) (NN doubt)
          (SBAR (IN that)
            (S
              (NP (NN everything))
              (VP (VBD was)
                (ADVP (RB mightily))
                (VP (VBN refreshed)
                  (PP (IN by)
                    (NP (PRP it))))))))))
    (: ;)
    (S
      (S
        (NP
          (NP (DT the) (NN look))
          (PP (IN of)
            (NP (NN exhaustion)
              (CC and)
              (NNS hopelessness))))
        (VP (VBD was)
          (VP (VBN gone))))
      (, ,)
      (CC and)
      (S
        (NP (NN life))
        (VP (VBD was)
          (ADJP (JJ busy)
            (PP (IN in)
              (NP (NN flower)
                (CC and)
                (NN tree)
                (CC and)
                (NN plant)))))))
    (. .)))

advmod(was-3, Soon-1)
expl(was-3, there-2)
root(ROOT-0, was-3)
neg(longer-5, no-4)
advmod(was-3, longer-5)
det(doubt-7, any-6)
advmod(was-3, doubt-7)
mark(refreshed-12, that-8)
nsubjpass(refreshed-12, everything-9)
auxpass(refreshed-12, was-10)
advmod(refreshed-12, mightily-11)
ccomp(doubt-7, refreshed-12)
agent(refreshed-12, it-14)
det(look-17, the-16)
nsubjpass(gone-23, look-17)
prep_of(look-17, exhaustion-19)
prep_of(look-17, hopelessness-21)
conj_and(exhaustion-19, hopelessness-21)
auxpass(gone-23, was-22)
parataxis(was-3, gone-23)
nsubj(busy-28, life-26)
cop(busy-28, was-27)
parataxis(was-3, busy-28)
conj_and(gone-23, busy-28)
prep_in(busy-28, flower-30)
prep_in(busy-28, tree-32)
conj_and(flower-30, tree-32)
prep_in(busy-28, plant-34)
conj_and(flower-30, plant-34)

(ROOT
  (S
    (S
      (NP (DT This) (NN year))
      (NP (EX there))
      (VP (VBD was) (RB not)
        (NP
          (NP (DT a) (NN garden))
          (, ,)
          (RRC
            (ADVP (RB even))
            (PP (IN on)
              (NP
                (NP (DT the) (NNS banks))
                (PP (IN of)
                  (NP (DT the) (NN river))))))
          (, ,)
          (S
            (VP (TO to)
              (VP (VB compare)
                (PP (IN with)
                  (NP (PRP it)))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN autumn))
          (VP (VBD came))))
      (, ,)
      (NP (EX there))
      (VP (VBD was)
        (NP (JJR more) (NN fruit))
        (SBAR (IN than)
          (S
            (NP (NNP Mr) (NNP Macmichael))
            (VP (VBD remembered)
              (ADVP (RB ever))
              (S
                (VP (TO to)
                  (VP (VB have)
                    (VP (VBN seen)
                      (ADVP (RB before)))))))))))
    (. .)))

det(year-2, This-1)
tmod(was-4, year-2)
expl(was-4, there-3)
root(ROOT-0, was-4)
neg(was-4, not-5)
det(garden-7, a-6)
nsubj(was-4, garden-7)
advmod(on-10, even-9)
rcmod(garden-7, on-10)
det(banks-12, the-11)
pobj(on-10, banks-12)
det(river-15, the-14)
prep_of(banks-12, river-15)
aux(compare-18, to-17)
vmod(garden-7, compare-18)
prep_with(compare-18, it-20)
advmod(came-26, when-23)
det(autumn-25, the-24)
nsubj(came-26, autumn-25)
advcl(was-29, came-26)
expl(was-29, there-28)
conj_and(was-4, was-29)
amod(fruit-31, more-30)
nsubj(was-29, fruit-31)
mark(remembered-35, than-32)
nn(Macmichael-34, Mr-33)
nsubj(remembered-35, Macmichael-34)
nsubj(seen-39, Macmichael-34)
advcl(was-29, remembered-35)
advmod(remembered-35, ever-36)
aux(seen-39, to-37)
aux(seen-39, have-38)
xcomp(remembered-35, seen-39)
advmod(seen-39, before-40)

(ROOT
  (NP (NNP CHAPTER) (NNP X) (. .)))

nn(X-2, CHAPTER-1)
root(ROOT-0, X-2)

(ROOT
  (NP (NNP A) (NNP NEW) (NNP ALARUM) (. .)))

nn(ALARUM-3, A-1)
nn(ALARUM-3, NEW-2)
root(ROOT-0, ALARUM-3)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD was)
      (ADVP (RB always))
      (VP (VBG thinking)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ uses)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (MD could)
                    (VP (VB put)
                      (NP (NNS things))
                      (PP (TO to)))))))))))
    (. .)))

nsubj(thinking-4, Willie-1)
aux(thinking-4, was-2)
advmod(thinking-4, always-3)
root(ROOT-0, thinking-4)
nsubj(uses-6, what-5)
ccomp(thinking-4, uses-6)
nsubj(put-9, he-7)
aux(put-9, could-8)
ccomp(uses-6, put-9)
dobj(put-9, things-10)
prep(put-9, to-11)

(ROOT
  (S (RB Only)
    (NP (PRP he))
    (VP (VBD was)
      (ADVP (RB never))
      (VP (VBN tempted)
        (S
          (VP (TO to)
            (VP (VB set)
              (NP (DT a) (JJ fine) (NN thing))
              (S
                (VP (TO to)
                  (VP (VB do)
                    (NP (JJ dirty) (NN work))))))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (JJ dull-hearted) (NNS money-grubbers))
            (VP (VBP do) (: --)
              (NP
                (NP (NNS mill-owners))
                (, ,)
                (PP (IN for)
                  (NP
                    (NP (NN instance))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP they))
                        (VP (VBP make)
                          (SBAR
                            (S
                              (NP
                                (NP (DT the) (NN channel))
                                (PP (IN of)
                                  (NP (DT a) (JJ lovely) (NN mountain-stream))))
                              (VP (VBP serve)
                                (PP (IN for)
                                  (NP (DT a) (NN drain)
                                    (S
                                      (VP (TO to)
                                        (VP (VB carry)
                                          (PRT (RP off))
                                          (NP
                                            (NP (DT the) (NN filth))
                                            (PP (IN from)
                                              (NP (PRP$ their) (NNS works)))))))))))))))))))))))
    (. .)))

advmod(tempted-5, Only-1)
nsubjpass(tempted-5, he-2)
nsubj(set-7, he-2)
auxpass(tempted-5, was-3)
neg(tempted-5, never-4)
root(ROOT-0, tempted-5)
aux(set-7, to-6)
xcomp(tempted-5, set-7)
det(thing-10, a-8)
amod(thing-10, fine-9)
dobj(set-7, thing-10)
aux(do-12, to-11)
vmod(set-7, do-12)
amod(work-14, dirty-13)
dobj(do-12, work-14)
mark(do-19, as-16)
amod(money-grubbers-18, dull-hearted-17)
nsubj(do-19, money-grubbers-18)
advcl(tempted-5, do-19)
dobj(do-19, mill-owners-21)
parataxis(do-19, mill-owners-21)
prep_for(mill-owners-21, instance-24)
tmod(make-28, instance-24)
advmod(make-28, when-26)
nsubj(make-28, they-27)
rcmod(instance-24, make-28)
det(channel-30, the-29)
nsubj(serve-35, channel-30)
det(mountain-stream-34, a-32)
amod(mountain-stream-34, lovely-33)
prep_of(channel-30, mountain-stream-34)
ccomp(make-28, serve-35)
det(drain-38, a-37)
prep_for(serve-35, drain-38)
aux(carry-40, to-39)
vmod(drain-38, carry-40)
prt(carry-40, off-41)
det(filth-43, the-42)
dobj(carry-40, filth-43)
poss(works-46, their-45)
prep_from(filth-43, works-46)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (NNP Dante))
          (VP (VBD had)
            (VP (VBN known)
              (NP (DT any) (JJ such))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB have)
                (VP (VBN put)
                  (NP (PRP them)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD would)
        (ADVP (RB rather))
        (RB not)
        (VP (VB describe)
          (NP (DT the) (NN place)))))
    (. .)))

mark(known-4, If-1)
nsubj(known-4, Dante-2)
aux(known-4, had-3)
advcl(know-9, known-4)
det(such-6, any-5)
dobj(known-4, such-6)
nsubj(know-9, I-8)
root(ROOT-0, know-9)
advmod(put-14, where-10)
nsubj(put-14, he-11)
aux(put-14, would-12)
aux(put-14, have-13)
ccomp(know-9, put-14)
dobj(put-14, them-15)
nsubj(describe-22, I-18)
aux(describe-22, would-19)
advmod(describe-22, rather-20)
neg(describe-22, not-21)
conj_but(know-9, describe-22)
det(place-24, the-23)
dobj(describe-22, place-24)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN told)
          (NP (PRP you))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (NNP Willie))
              (VP (VBD made)
                (SBAR
                  (S
                    (NP (DT the) (JJ prisoned) (NN stream))
                    (VP (VBP do)
                      (PP (IN for)
                        (NP (DT the) (NN garden))))))))))))
    (: ;)
    (S
      (S
        (NP (PRP I))
        (VP (MD will)
          (ADVP (RB now))
          (VP (VB tell)
            (NP (PRP you))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP he))
                (VP (VBD made)
                  (SBAR
                    (S
                      (NP (DT the) (JJ running) (NN stream))
                      (VP (VBP do)
                        (PP (IN for)
                          (NP (PRP himself))))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP you))
        (VP (MD shall)
          (VP (VB judge)
            (SBAR (IN whether)
              (CC or)
              (RB not)
              (S
                (NP (DT that))
                (VP (VBD was)
                  (VP (VBN fit)
                    (NP (NN work))
                    (PP (IN for)
                      (NP (PRP him)))
                    (S
                      (VP (TO to)
                        (VP (VB require)
                          (PP (IN of)
                            (NP (PRP it))))))))))))))
    (. .)))

nsubj(told-3, I-1)
aux(told-3, have-2)
root(ROOT-0, told-3)
dobj(told-3, you-4)
dobj(made-7, what-5)
nsubj(made-7, Willie-6)
dep(told-3, made-7)
det(stream-10, the-8)
amod(stream-10, prisoned-9)
nsubj(do-11, stream-10)
ccomp(made-7, do-11)
det(garden-14, the-13)
prep_for(do-11, garden-14)
nsubj(tell-19, I-16)
aux(tell-19, will-17)
advmod(tell-19, now-18)
parataxis(told-3, tell-19)
dobj(tell-19, you-20)
dobj(made-23, what-21)
nsubj(made-23, he-22)
dep(tell-19, made-23)
det(stream-26, the-24)
amod(stream-26, running-25)
nsubj(do-27, stream-26)
ccomp(made-23, do-27)
prep_for(do-27, himself-29)
nsubj(judge-34, you-32)
aux(judge-34, shall-33)
parataxis(told-3, judge-34)
conj_and(tell-19, judge-34)
mark(fit-40, whether-35)
ccomp(judge-34, not-37)
conj_or(fit-40, not-37)
nsubjpass(fit-40, that-38)
auxpass(fit-40, was-39)
ccomp(judge-34, fit-40)
dobj(fit-40, work-41)
prep_for(fit-40, him-43)
aux(require-45, to-44)
vmod(fit-40, require-45)
prep_of(require-45, it-47)

(ROOT
  (S
    (SBAR (RB Ever) (IN since)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN ceased)
            (S
              (VP (VBG being)
                (ADJP (JJ night-nurse)
                  (PP (TO to)
                    (NP (JJ little) (NNS Agnes))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN wished)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (NP (DT some) (NN one)
                (S
                  (VP (TO to)
                    (VP (VB wake)
                      (NP (PRP him))
                      (NP (DT every) (NN night))
                      (, ,)
                      (PP (IN about)
                        (NP
                          (NP (DT the) (NN middle))
                          (PP (IN of)
                            (NP (PRP it)))))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP (PRP he))
                          (VP (MD might)
                            (VP
                              (VP (VB get)
                                (PRT (RP up)))
                              (CC and)
                              (VP (VB look)
                                (PRT (RP out))
                                (PP (IN of)
                                  (NP (DT the) (NN window)))))))))))))))))
    (. .)))

advmod(ceased-5, Ever-1)
mark(ceased-5, since-2)
nsubj(ceased-5, he-3)
aux(ceased-5, had-4)
advcl(wished-14, ceased-5)
cop(night-nurse-7, being-6)
xcomp(ceased-5, night-nurse-7)
amod(Agnes-10, little-9)
prep_to(night-nurse-7, Agnes-10)
nsubj(wished-14, he-12)
aux(wished-14, had-13)
root(ROOT-0, wished-14)
mark(had-17, that-15)
nsubj(had-17, he-16)
ccomp(wished-14, had-17)
det(one-19, some-18)
dobj(had-17, one-19)
aux(wake-21, to-20)
vmod(one-19, wake-21)
dobj(wake-21, him-22)
det(night-24, every-23)
tmod(wake-21, night-24)
det(middle-28, the-27)
prep_about(wake-21, middle-28)
prep_of(middle-28, it-30)
mark(get-35, that-32)
nsubj(get-35, he-33)
nsubj(look-38, he-33)
aux(get-35, might-34)
ccomp(wake-21, get-35)
prt(get-35, up-36)
ccomp(wake-21, look-38)
conj_and(get-35, look-38)
det(window-42, the-41)
prep_out_of(look-38, window-42)

(ROOT
  (S (IN For) (, ,)
    (SBAR (IN after)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP
            (VP (VBN fed)
              (NP (PRP$ his) (NN baby-sister)))
            (CC and)
            (VP (VBN given)
              (NP (PRP her))
              (ADVP (RB back)
                (PP (TO to)
                  (NP (PRP$ his) (NN mother))))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN state))
                  (PP (IN of)
                    (NP (NN contentment)))))
              (, ,)
              (PP (IN before)
                (S
                  (VP (VBG getting)
                    (PP (IN into)
                      (NP (NN bed)))))))))))
    (ADVP (RB again))
    (NP (PRP he))
    (VP (VBD had)
      (ADVP (RB always))
      (VP (VBN looked)
        (PRT (RP out))
        (PP (IN of)
          (NP (DT the) (NN window)
            (S
              (VP
                (VP (TO to)
                  (VP (VB see)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (DT the) (NN night))
                        (VP (VBD was)
                          (ADJP
                            (ADJP (JJ like))
                            (: --)
                            (SBAR (RB not) (IN that)
                              (S
                                (NP (PRP he))
                                (VP (VBD was)
                                  (ADJP
                                    (NP (CD one) (NN bit))
                                    (JJ anxious))
                                  (PP (IN about)
                                    (NP (DT the) (NN weather)))
                                  (, ,)
                                  (SBAR (IN except)
                                    (S (, ,)
                                      (ADVP (RB indeed))
                                      (, ,)
                                      (NP (PRP he))
                                      (VP
                                        (VP (VBD heard)
                                          (NP
                                            (NP (PRP$ his) (NN papa))
                                            (VP (VBG getting)
                                              (PRT (RP up))
                                              (S
                                                (VP (TO to)
                                                  (VP (VB go)
                                                    (PRT (RP out))))))))
                                        (, ,)
                                        (CC or)
                                        (VP (VBD knew)
                                          (SBAR
                                            (SBAR (IN that)
                                              (S
                                                (NP (PRP he))
                                                (VP (VBD had)
                                                  (S
                                                    (VP (TO to)
                                                      (VP (VB go)))))))
                                            (: ;)
                                            (SBAR (IN for)
                                              (S
                                                (NP (PRP he))
                                                (VP (MD could)
                                                  (VP (VB enjoy)
                                                    (NP
                                                      (NP (NN weather))
                                                      (PP (IN of)
                                                        (NP
                                                          (NP (DT any) (NN sort))
                                                          (CC and)
                                                          (NP (DT all) (NNS sorts)))))))))))
                                        (, ,)
                                        (CC and)
                                        (ADVP (RB never))
                                        (VP (VBD thought)
                                          (SBAR
                                            (WHNP (WP what))
                                            (S
                                              (NP (DT the) (JJ next) (NN day))
                                              (VP (MD would)
                                                (VP (VB be)
                                                  (ADJP (JJ like)))))))))))))
                            (: --)))))))
                (CONJP (CC but)
                  (RB just))
                (VP (TO to)
                  (VP (VB see)
                    (SBAR
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (NNP Madame) (NNP Night))
                          (VP (VBD was)
                            (VP (VBG thinking) (IN about)))))
                      (: --)
                      (SBAR
                        (WHADVP (WRB how))
                        (S
                          (NP (PRP she))
                          (VP (VBD looked))))
                      (, ,)
                      (CC and)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP she))
                          (VP (VBD was)
                            (VP (VBG doing))))))))))))))
    (. .)))

dep(looked-30, For-1)
mark(fed-6, after-3)
nsubj(fed-6, he-4)
nsubj(given-10, he-4)
aux(fed-6, had-5)
advcl(looked-30, fed-6)
poss(baby-sister-8, his-7)
dobj(fed-6, baby-sister-8)
conj_and(fed-6, given-10)
advcl(looked-30, given-10)
dobj(given-10, her-11)
advmod(given-10, back-12)
poss(mother-15, his-14)
prep_to(back-12, mother-15)
det(state-18, a-17)
prep_in(given-10, state-18)
prep_of(state-18, contentment-20)
prepc_before(given-10, getting-23)
prep_into(getting-23, bed-25)
advmod(looked-30, again-26)
nsubj(looked-30, he-27)
aux(looked-30, had-28)
advmod(looked-30, always-29)
root(ROOT-0, looked-30)
prt(looked-30, out-31)
det(window-34, the-33)
prep_of(looked-30, window-34)
aux(see-36, to-35)
dep(window-34, see-36)
dobj(like-41, what-37)
det(night-39, the-38)
nsubj(like-41, night-39)
cop(like-41, was-40)
ccomp(see-36, like-41)
dep(anxious-49, not-43)
mark(anxious-49, that-44)
nsubj(anxious-49, he-45)
cop(anxious-49, was-46)
num(bit-48, one-47)
npadvmod(anxious-49, bit-48)
ccomp(like-41, anxious-49)
det(weather-52, the-51)
prep_about(anxious-49, weather-52)
mark(heard-59, except-54)
advmod(heard-59, indeed-56)
nsubj(heard-59, he-58)
nsubj(knew-69, he-58)
nsubj(thought-90, he-58)
advcl(anxious-49, heard-59)
poss(papa-61, his-60)
dobj(heard-59, papa-61)
vmod(papa-61, getting-62)
prt(getting-62, up-63)
aux(go-65, to-64)
xcomp(getting-62, go-65)
prt(go-65, out-66)
advcl(anxious-49, knew-69)
conj_or(heard-59, knew-69)
mark(had-72, that-70)
nsubj(had-72, he-71)
nsubj(go-74, he-71)
advcl(knew-69, had-72)
aux(go-74, to-73)
xcomp(had-72, go-74)
mark(enjoy-79, for-76)
nsubj(enjoy-79, he-77)
aux(enjoy-79, could-78)
dep(had-72, enjoy-79)
dobj(enjoy-79, weather-80)
det(sort-83, any-82)
prep_of(weather-80, sort-83)
det(sorts-86, all-85)
prep_of(weather-80, sorts-86)
conj_and(sort-83, sorts-86)
neg(thought-90, never-89)
advcl(anxious-49, thought-90)
conj_and(heard-59, thought-90)
dobj(like-97, what-91)
det(day-94, the-92)
amod(day-94, next-93)
nsubj(like-97, day-94)
aux(like-97, would-95)
cop(like-97, be-96)
ccomp(thought-90, like-97)
aux(see-102, to-101)
dep(window-34, see-102)
conj_but(see-36, see-102)
dobj(thinking-107, what-103)
nn(Night-105, Madame-104)
nsubj(thinking-107, Night-105)
aux(thinking-107, was-106)
dep(see-102, thinking-107)
dep(thinking-107, about-108)
advmod(looked-112, how-110)
nsubj(looked-112, she-111)
dep(see-102, looked-112)
conj_and(thinking-107, looked-112)
dobj(doing-118, what-115)
nsubj(doing-118, she-116)
aux(doing-118, was-117)
dep(see-102, doing-118)
conj_and(thinking-107, doing-118)

(ROOT
  (S
    (SBAR (IN For)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP
            (ADVP (RB soon))
            (VBN found)
            (NP (PRP her))
            (PP (JJ such)
              (NP (DT a) (JJ changeful) (NN creature)))
            (SBAR (IN that) (, ,)
              (S
                (NP (DT every) (NN time))
                (NP (PRP he))
                (VP (VBD looked)
                  (PP (IN at)
                    (NP (PRP her))))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD looked)
      (PP (IN at)
        (NP (PRP him)))
      (PP (IN with)
        (NP
          (NP (DT another) (NN face))
          (SBAR
            (WHPP (IN from)
              (WHNP (WDT that)))
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN worn)
                  (NP (JJ last) (NN time)))))))))
    (. .)))

mark(found-5, For-1)
nsubj(found-5, he-2)
aux(found-5, had-3)
advmod(found-5, soon-4)
advcl(looked-21, found-5)
dobj(found-5, her-6)
prep(found-5, such-7)
det(creature-10, a-8)
amod(creature-10, changeful-9)
dep(such-7, creature-10)
mark(looked-16, that-11)
det(time-14, every-13)
nsubj(looked-16, time-14)
nsubj(looked-16, he-15)
ccomp(found-5, looked-16)
prep_at(looked-16, her-18)
nsubj(looked-21, she-20)
root(ROOT-0, looked-21)
prep_at(looked-21, him-23)
det(face-26, another-25)
prep_with(looked-21, face-26)
prep_from(worn-31, face-26)
nsubj(worn-31, she-29)
aux(worn-31, had-30)
rcmod(face-26, worn-31)
amod(time-33, last-32)
dobj(worn-31, time-33)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN made)
            (NP (DT this) (NN acquaintance))
            (PP (IN with)
              (NP (DT the) (NN night)))))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (S
        (ADVP (RB often))
        (, ,)
        (VP (VB ere)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD fell)
                (SBAR
                  (S
                    (S
                      (ADJP (RB asleep)))
                    (, ,)
                    (VP (VBP lie)
                      (S
                        (VP (VBG wondering)
                          (SBAR
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (PRP he))
                                (VP (VBD was)
                                  (VP (VBG going)
                                    (S
                                      (VP (TO to)
                                        (VP (VB dream)
                                          (PRT (RP about)))))))))
                            (: ;)
                            (SBAR (IN for)
                              (S
                                (PRN (, ,)
                                  (PP (IN with)
                                    (NP (DT all) (PRP$ his) (JJ practical) (NNS tendencies)))
                                  (, ,))
                                (S
                                  (NP (NNP Willie))
                                  (VP (VBD was)
                                    (ADJP (RB very) (JJ fond)
                                      (PP (IN of)
                                        (S
                                          (VP (VBG dreaming)))))))
                                (: ;)
                                (S (CC but)
                                  (SBAR (IN after)
                                    (S
                                      (NP (PRP he))
                                      (VP (VBD had)
                                        (VP (VBN begun)
                                          (PP (IN in)
                                            (NP (DT this) (NN manner)))
                                          (S
                                            (VP (TO to)
                                              (VP (VB make)
                                                (NP (NN acquaintance))
                                                (PP (IN with)
                                                  (NP (PRP her))))))))))
                                  (, ,)
                                  (NP (PRP he))
                                  (VP (MD would)
                                    (ADVP (RB just) (RB as) (RB often))
                                    (VP (VB fall)
                                      (ADJP (RB asleep))
                                      (S
                                        (VP (VBG wondering)
                                          (SBAR
                                            (WHNP (WP what))
                                            (S
                                              (NP (DT the) (NN day))
                                              (VP (MD would)
                                                (VP (VB be)
                                                  (VP (VBG dreaming) (IN about)))))))))))))
                            (: --)
                            (SBAR (IN for)
                              (S (, ,)
                                (PP (IN in)
                                  (NP
                                    (NP (PRP$ his) (JJ own) (JJ fanciful) (NN way))
                                    (PP (IN of)
                                      (NP (NN thinking)))))
                                (, ,)
                                (NP (PRP he))
                                (VP (VBD had)
                                  (VP (VBN settled)
                                    (SBAR (IN that)
                                      (S
                                        (NP
                                          (NP (DT the) (NN look))
                                          (PP (IN of)
                                            (NP (DT the) (NN night))))
                                        (VP (VBD was)
                                          (SBAR
                                            (WHNP (WP what))
                                            (S
                                              (NP (DT the) (NN day))
                                              (VP (VBD was)
                                                (VP (VBG dreaming))))))))))))))))))))))))
    (. .)))

mark(made-4, Before-1)
nsubj(made-4, he-2)
aux(made-4, had-3)
advcl(would-12, made-4)
det(acquaintance-6, this-5)
dobj(made-4, acquaintance-6)
det(night-9, the-8)
prep_with(made-4, night-9)
nsubj(would-12, he-11)
root(ROOT-0, would-12)
advmod(ere-15, often-13)
ccomp(would-12, ere-15)
nsubj(fell-17, he-16)
ccomp(ere-15, fell-17)
ccomp(lie-20, asleep-18)
ccomp(fell-17, lie-20)
xcomp(lie-20, wondering-21)
dobj(going-25, what-22)
nsubj(dream-27, what-22)
nsubj(going-25, he-23)
aux(going-25, was-24)
advcl(wondering-21, going-25)
aux(dream-27, to-26)
xcomp(going-25, dream-27)
prt(dream-27, about-28)
mark(fond-41, for-30)
dep(fond-41, with-32)
predet(tendencies-36, all-33)
poss(tendencies-36, his-34)
amod(tendencies-36, practical-35)
pobj(with-32, tendencies-36)
nsubj(fond-41, Willie-38)
cop(fond-41, was-39)
advmod(fond-41, very-40)
dep(going-25, fond-41)
prepc_of(fond-41, dreaming-43)
cc(fall-64, but-45)
mark(begun-49, after-46)
nsubj(begun-49, he-47)
nsubj(make-54, he-47)
aux(begun-49, had-48)
advcl(fall-64, begun-49)
det(manner-52, this-51)
prep_in(begun-49, manner-52)
aux(make-54, to-53)
xcomp(begun-49, make-54)
dobj(make-54, acquaintance-55)
prep_with(make-54, her-57)
nsubj(fall-64, he-59)
aux(fall-64, would-60)
advmod(often-63, just-61)
advmod(often-63, as-62)
advmod(fall-64, often-63)
parataxis(fond-41, fall-64)
acomp(fall-64, asleep-65)
xcomp(fall-64, wondering-66)
dobj(dreaming-72, what-67)
det(day-69, the-68)
nsubj(dreaming-72, day-69)
aux(dreaming-72, would-70)
aux(dreaming-72, be-71)
ccomp(wondering-66, dreaming-72)
dep(dreaming-72, about-73)
mark(settled-87, for-75)
poss(way-81, his-78)
amod(way-81, own-79)
amod(way-81, fanciful-80)
prep_in(settled-87, way-81)
prep_of(way-81, thinking-83)
nsubj(settled-87, he-85)
aux(settled-87, had-86)
dep(going-25, settled-87)
mark(was-94, that-88)
det(look-90, the-89)
nsubj(was-94, look-90)
det(night-93, the-92)
prep_of(look-90, night-93)
ccomp(settled-87, was-94)
dobj(dreaming-99, what-95)
det(day-97, the-96)
nsubj(dreaming-99, day-97)
aux(dreaming-99, was-98)
ccomp(was-94, dreaming-99)

(ROOT
  (S
    (ADVP (RB Hence))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (NNP Agnes))
        (VP (VBD required)
          (NP (PRP$ his) (NNS services))
          (ADVP (RB no) (RB longer)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD fell)
      (S
        (ADJP (RB asleep))
        (NP
          (NP
            (NP (DT the) (JJ first) (NN night))
            (PP (IN with)
              (NP
                (NP (DT the) (JJ full) (NN intention))
                (PP (IN of)
                  (S
                    (VP
                      (VP (VBG waking)
                        (ADVP (RB just))
                        (ADVP (RB as) (RB before)))
                      (, ,)
                      (CC and)
                      (VP (VBG getting)
                        (PRT (RP up))
                        (S
                          (VP (TO to)
                            (VP (VB have)
                              (NP (DT a) (NN peep))
                              (PP (IN into)
                                (NP
                                  (NP
                                    (NP (DT the) (NN day) (POS 's))
                                    (NN dream))
                                  (, ,)
                                  (SBAR
                                    (WHNP (WDT whatever))
                                    (S
                                      (NP (PRP it))
                                      (VP (MD might)
                                        (VP (VB be)))))))))))))))))
          (, ,)
          (NP (DT that) (NN night))
          (, ,)
          (CC and)
          (NP (DT every) (NN night))))
      (ADVP (RB thereafter)))
    (. .)))

advmod(fell-12, Hence-1)
advmod(required-5, when-3)
nsubj(required-5, Agnes-4)
advcl(fell-12, required-5)
poss(services-7, his-6)
dobj(required-5, services-7)
neg(longer-9, no-8)
advmod(required-5, longer-9)
nsubj(fell-12, he-11)
root(ROOT-0, fell-12)
dep(fell-12, asleep-13)
det(night-16, the-14)
amod(night-16, first-15)
dep(asleep-13, night-16)
det(intention-20, the-18)
amod(intention-20, full-19)
prep_with(night-16, intention-20)
prepc_of(intention-20, waking-22)
advmod(waking-22, just-23)
advmod(before-25, as-24)
advmod(waking-22, before-25)
prepc_of(intention-20, getting-28)
conj_and(waking-22, getting-28)
prt(getting-28, up-29)
aux(have-31, to-30)
xcomp(getting-28, have-31)
det(peep-33, a-32)
dobj(have-31, peep-33)
det(day-36, the-35)
poss(dream-38, day-36)
prep_into(have-31, dream-38)
dobj(be-43, whatever-40)
nsubj(be-43, it-41)
aux(be-43, might-42)
rcmod(dream-38, be-43)
det(night-46, that-45)
dep(asleep-13, night-46)
conj_and(night-16, night-46)
det(night-50, every-49)
dep(asleep-13, night-50)
conj_and(night-16, night-50)
advmod(fell-12, thereafter-51)

(ROOT
  (S (CC But)
    (S
      (S
        (NP (PRP he))
        (VP (VBD was)
          (ADVP (RB now) (RB back))
          (PP (IN in)
            (NP (PRP$ his) (JJ own) (NN room)))))
      (, ,)
      (CC and)
      (S
        (NP (EX there))
        (VP (VBD was)
          (ADVP (NN nothing)
            (PP (TO to)
              (NP (NN wake))))
          (NP (PRP him)))))
    (, ,) (IN so)
    (S
      (NP (PRP he))
      (VP (VBD slept)
        (ADJP (JJ sound))
        (SBAR (IN until)
          (S
            (NP (DT the) (NN day))
            (VP (VBD had)
              (VP (VBN done)
                (S
                  (VP (VBG dreaming)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN morning))
      (VP (VBD was)
        (ADVP (JJ wide))
        (ADJP (RB awake))))
    (. .)))

nsubj(was-3, he-2)
root(ROOT-0, was-3)
advmod(back-5, now-4)
advmod(was-3, back-5)
poss(room-9, his-7)
amod(room-9, own-8)
prep_in(was-3, room-9)
expl(was-13, there-12)
conj_and(was-3, was-13)
advmod(was-13, nothing-14)
prep_to(nothing-14, wake-16)
nsubj(was-13, him-17)
dep(was-3, so-19)
nsubj(slept-21, he-20)
ccomp(was-3, slept-21)
acomp(slept-21, sound-22)
mark(done-27, until-23)
det(day-25, the-24)
nsubj(done-27, day-25)
aux(done-27, had-26)
advcl(slept-21, done-27)
xcomp(done-27, dreaming-28)
det(morning-32, the-31)
nsubj(awake-35, morning-32)
cop(awake-35, was-33)
advmod(awake-35, wide-34)
conj_and(was-3, awake-35)

(ROOT
  (S
    (NP (DT Neither))
    (VP
      (VP (VBD had)
        (S
          (NP (PRP he))
          (VP (VBD awoke)
            (NP (DT any) (CD one) (NN night))
            (PP (IN since)))))
      (, ,)
      (CC or)
      (VP (VBN seen)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VB marvel)
              (SBAR
                (S
                  (NP (EX there))
                  (VP (MD might)
                    (VP (VB be)
                      (PP (IN beyond)
                        (NP (PRP$ his) (NNS windowpanes))))))))))))
    (. .)))

nsubj(had-2, Neither-1)
nsubj(seen-11, Neither-1)
root(ROOT-0, had-2)
nsubj(awoke-4, he-3)
ccomp(had-2, awoke-4)
det(night-7, any-5)
num(night-7, one-6)
tmod(awoke-4, night-7)
prep(awoke-4, since-8)
conj_or(had-2, seen-11)
nsubj(marvel-13, what-12)
ccomp(seen-11, marvel-13)
expl(be-16, there-14)
aux(be-16, might-15)
ccomp(marvel-13, be-16)
poss(windowpanes-19, his-18)
prep_beyond(be-16, windowpanes-19)

(ROOT
  (SQ (MD Does)
    (NP
      (NP (DT any) (JJ little) (NN boy))
      (CC or)
      (NP (NN girl)))
    (VP (VB wonder)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (EX there))
          (VP (MD can)
            (VP (VB be)
              (VP (VBG going)
                (PP (IN on)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP we))
                      (VP (VBP are)
                        (ADJP (RB asleep))))))))))))
    (. ?)))

aux(wonder-7, Does-1)
det(boy-4, any-2)
amod(boy-4, little-3)
nsubj(wonder-7, boy-4)
conj_or(boy-4, girl-6)
nsubj(wonder-7, girl-6)
root(ROOT-0, wonder-7)
dobj(going-12, what-8)
expl(going-12, there-9)
aux(going-12, can-10)
aux(going-12, be-11)
ccomp(wonder-7, going-12)
prep(going-12, on-13)
advmod(asleep-17, when-14)
nsubj(asleep-17, we-15)
cop(asleep-17, are-16)
pcomp(on-13, asleep-17)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (NP
      (NP (DT the) (NNS stars))
      (, ,)
      (ADVP (RB sometimes))
      (NP (DT the) (NN moon))
      (, ,)
      (ADVP (RB sometimes))
      (NP (DT the) (NNS clouds))
      (, ,)
      (ADVP (RB sometimes))
      (NP (DT the) (NN wind))
      (, ,)
      (ADVP (RB sometimes))
      (NP (DT the) (NN snow))
      (, ,)
      (ADVP (RB sometimes))
      (NP (DT the) (NN frost))
      (, ,)
      (ADVP (RB sometimes))
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP
            (NP (PRP them))
            (ADVP (RB together)))))
      (, ,))
    (VP (VBP are)
      (ADJP (JJ busy)))
    (. .)))

advmod(busy-32, Sometimes-1)
det(stars-3, the-2)
nsubj(busy-32, stars-3)
advmod(moon-7, sometimes-5)
det(moon-7, the-6)
appos(stars-3, moon-7)
advmod(clouds-11, sometimes-9)
det(clouds-11, the-10)
appos(stars-3, clouds-11)
advmod(wind-15, sometimes-13)
det(wind-15, the-14)
appos(stars-3, wind-15)
advmod(snow-19, sometimes-17)
det(snow-19, the-18)
appos(stars-3, snow-19)
advmod(frost-23, sometimes-21)
det(frost-23, the-22)
appos(stars-3, frost-23)
advmod(all-26, sometimes-25)
appos(stars-3, all-26)
prep_of(all-26, them-28)
advmod(them-28, together-29)
cop(busy-32, are-31)
root(ROOT-0, busy-32)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (NP
      (NP
        (NP (DT the) (NN owl))
        (CC and)
        (NP
          (NP (DT the) (NN moth))
          (CC and)
          (NP (DT the) (NN beetle))))
      (, ,)
      (CC and)
      (NP
        (NP (DT the) (NN bat))
        (CC and)
        (NP
          (NP (DT the) (NN cat))
          (CC and)
          (NP (DT the) (NN rat))))
      (, ,))
    (VP (VBP are) (RB all)
      (PP (IN at)
        (NP (NN work))))
    (. .)))

advmod(are-21, Sometimes-1)
det(owl-3, the-2)
nsubj(are-21, owl-3)
det(moth-6, the-5)
conj_and(owl-3, moth-6)
nsubj(are-21, moth-6)
det(beetle-9, the-8)
conj_and(owl-3, beetle-9)
conj_and(moth-6, beetle-9)
det(bat-13, the-12)
conj_and(owl-3, bat-13)
nsubj(are-21, bat-13)
det(cat-16, the-15)
conj_and(owl-3, cat-16)
conj_and(bat-13, cat-16)
det(rat-19, the-18)
conj_and(bat-13, rat-19)
conj_and(cat-16, rat-19)
root(ROOT-0, are-21)
advmod(are-21, all-22)
prep_at(are-21, work-24)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (NNS flowers))
        (PP (IN in)
          (NP (NN bloom)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBP love)
                (ADJP
                  (NP (DT the) (NN night))
                  (JJR better)
                  (PP (IN than)
                    (NP (DT the) (NN day)))))
              (, ,)
              (CC and)
              (VP (VBP are)
                (ADJP (JJ busy))
                (PP (DT all) (IN through)
                  (NP
                    (NP (DT the) (NNS darkness))
                    (VP (VBG pouring)
                      (PRT (RP out))
                      (PP (IN on)
                        (NP (DT the) (JJ still) (NN air)))
                      (NP
                        (NP (DT the) (NN scent))
                        (SBAR
                          (S
                            (NP (PRP they))
                            (VP (VBD withheld)
                              (PP (IN during)
                                (NP (DT the) (NN sunlight))))))))))))))))
    (. .)))

advmod(are-3, Sometimes-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
nsubj(are-3, flowers-4)
nsubj(love-8, flowers-4)
nsubj(busy-18, flowers-4)
prep_in(flowers-4, bloom-6)
rcmod(flowers-4, love-8)
det(night-10, the-9)
tmod(better-11, night-10)
acomp(love-8, better-11)
det(day-14, the-13)
prep_than(better-11, day-14)
cop(busy-18, are-17)
rcmod(flowers-4, busy-18)
conj_and(love-8, busy-18)
dep(busy-18, all-19)
det(darkness-22, the-21)
prep_through(busy-18, darkness-22)
vmod(darkness-22, pouring-23)
prt(pouring-23, out-24)
det(air-28, the-26)
amod(air-28, still-27)
prep_on(pouring-23, air-28)
det(scent-30, the-29)
dobj(pouring-23, scent-30)
nsubj(withheld-32, they-31)
rcmod(scent-30, withheld-32)
det(sunlight-35, the-34)
prep_during(withheld-32, sunlight-35)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (NP
      (NP (DT the) (NN lightning))
      (CC and)
      (NP (DT the) (NN thunder))
      (, ,)
      (ADVP (RB sometimes))
      (NP (DT the) (NN moon-rainbow))
      (, ,)
      (ADVP (RB sometimes))
      (NP (DT the) (NN aurora) (NNS borealis))
      (, ,))
    (VP (VBZ is)
      (ADJP (JJ busy)))
    (. .)))

advmod(busy-18, Sometimes-1)
det(lightning-3, the-2)
nsubj(busy-18, lightning-3)
det(thunder-6, the-5)
conj_and(lightning-3, thunder-6)
nsubj(busy-18, thunder-6)
advmod(moon-rainbow-10, sometimes-8)
det(moon-rainbow-10, the-9)
conj_and(lightning-3, moon-rainbow-10)
nsubj(busy-18, moon-rainbow-10)
advmod(borealis-15, sometimes-12)
det(borealis-15, the-13)
nn(borealis-15, aurora-14)
conj_and(lightning-3, borealis-15)
nsubj(busy-18, borealis-15)
cop(busy-18, is-17)
root(ROOT-0, busy-18)

(ROOT
  (S (CC And)
    (NP (DT the) (NN streams))
    (VP
      (VP (VBP are)
        (VP (VBG running)
          (NP (DT all) (NN night))
          (ADVP (RB long))))
      (, ,)
      (CC and)
      (VP (VBP seem)
        (S
          (VP (TO to)
            (VP (VB babble)
              (PP
                (ADVP (RBR louder))
                (IN than) (IN in)
                (NP
                  (NP (DT the) (NN day) (NN time))
                  (, ,)
                  (SBAR (IN for)
                    (S
                      (NP
                        (NP (DT the) (NNS noises))
                        (PP (IN of)
                          (NP (DT the) (JJ working) (NN world))))
                      (VP (VBP are)
                        (ADVP (RB still))
                        (, ,)
                        (SBAR (RB so) (IN that)
                          (S
                            (NP (PRP we))
                            (VP (VBP hear)
                              (S
                                (NP (PRP them))
                                (ADJP (JJR better))))))))))))))))
    (. .)))

det(streams-3, the-2)
nsubj(running-5, streams-3)
nsubj(seem-11, streams-3)
nsubj(babble-13, streams-3)
aux(running-5, are-4)
root(ROOT-0, running-5)
det(night-7, all-6)
tmod(running-5, night-7)
advmod(running-5, long-8)
conj_and(running-5, seem-11)
aux(babble-13, to-12)
xcomp(seem-11, babble-13)
advmod(babble-13, louder-14)
dep(babble-13, than-15)
det(time-19, the-17)
nn(time-19, day-18)
prep_in(babble-13, time-19)
mark(are-28, for-21)
det(noises-23, the-22)
nsubj(are-28, noises-23)
det(world-27, the-25)
amod(world-27, working-26)
prep_of(noises-23, world-27)
dep(time-19, are-28)
advmod(are-28, still-29)
advmod(hear-34, so-31)
mark(hear-34, that-32)
nsubj(hear-34, we-33)
advcl(are-28, hear-34)
nsubj(better-36, them-35)
xcomp(hear-34, better-36)

(ROOT
  (S
    (S
      (NP
        (NP (RB Almost) (DT the) (JJ only) (NN daylight) (NN thing))
        (ADJP (RB awake)))
      (, ,)
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN clock))
          (VP (VBG ticking)
            (PP (IN with)
              (NP (NN nobody)))
            (S
              (VP (TO to)
                (VP (VB heed)
                  (NP (PRP it)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ sounds)
        (PP (TO to)
          (NP
            (NP (PRP me))
            (ADJP (RB very) (JJ dismal))))))
    (. .)))

advmod(thing-5, Almost-1)
det(thing-5, the-2)
amod(thing-5, only-3)
nn(thing-5, daylight-4)
nsubj(clock-10, thing-5)
amod(thing-5, awake-6)
cop(clock-10, is-8)
det(clock-10, the-9)
root(ROOT-0, clock-10)
vmod(clock-10, ticking-11)
prep_with(ticking-11, nobody-13)
aux(heed-15, to-14)
xcomp(ticking-11, heed-15)
dobj(heed-15, it-16)
nsubj(sounds-20, that-19)
conj_and(clock-10, sounds-20)
prep_to(sounds-20, me-22)
advmod(dismal-24, very-23)
amod(me-22, dismal-24)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN look))
        (PP (IN of)
          (NP
            (NP (DT the) (NN night))
            (, ,)
            (NP
              (NP (DT the) (NN meaning))
              (PP (IN on)
                (NP (PRP$ her) (NN face)))))))
      (SBAR (IN that)
        (S
          (NP (NNP Willie))
          (VP
            (VP (VBD cared)
              (ADVP (RBS most) (RB about)))
            (, ,)
            (CC and)
            (VP (VBD desired)
              (ADVP (RB so) (RB much))
              (S
                (VP (TO to)
                  (VP (VB see) (, ,)
                    (SBAR (IN that)
                      (S
                        (NP (PRP he))
                        (VP (VBD was)
                          (PP (IN at)
                            (NP
                              (NP (NNS times))
                              (ADJP (RB quite) (JJ unhappy))))
                          (S
                            (VP (TO to)
                              (VP (VB think)
                                (SBAR (IN that)
                                  (S
                                    (NP (PRP he))
                                    (ADVP (RB never))
                                    (VP (MD could)
                                      (VP (VB wake)
                                        (PRT (RP up))))))))))))
                    (, ,)
                    (SBAR (RB not) (IN although)
                      (S
                        (NP
                          (ADJP (RB ever) (RB so))
                          (JJ many)
                          (ADJP (JJ strange)
                            (CC and)
                            (JJ lovely))
                          (NNS dreams))
                        (VP (MD might)
                          (VP (VB be)
                            (VP (VBG passing)
                              (PP (IN before)
                                (NP (PRP$ his) (NN window))))))))))))))))
    (. .)))

cc(look-5, But-1)
nsubj(look-5, it-2)
cop(look-5, was-3)
det(look-5, the-4)
root(ROOT-0, look-5)
det(night-8, the-7)
prep_of(look-5, night-8)
det(meaning-11, the-10)
appos(night-8, meaning-11)
poss(face-14, her-13)
prep_on(meaning-11, face-14)
mark(cared-17, that-15)
nsubj(cared-17, Willie-16)
nsubj(desired-22, Willie-16)
nsubj(see-26, Willie-16)
ccomp(look-5, cared-17)
advmod(about-19, most-18)
advmod(cared-17, about-19)
ccomp(look-5, desired-22)
conj_and(cared-17, desired-22)
advmod(much-24, so-23)
advmod(desired-22, much-24)
aux(see-26, to-25)
xcomp(desired-22, see-26)
mark(was-30, that-28)
nsubj(was-30, he-29)
nsubj(think-36, he-29)
ccomp(see-26, was-30)
prep_at(was-30, times-32)
advmod(unhappy-34, quite-33)
amod(times-32, unhappy-34)
aux(think-36, to-35)
xcomp(was-30, think-36)
mark(wake-41, that-37)
nsubj(wake-41, he-38)
neg(wake-41, never-39)
aux(wake-41, could-40)
ccomp(think-36, wake-41)
prt(wake-41, up-42)
dep(passing-55, not-44)
mark(passing-55, although-45)
advmod(so-47, ever-46)
amod(dreams-52, so-47)
amod(dreams-52, many-48)
amod(dreams-52, strange-49)
conj_and(strange-49, lovely-51)
amod(dreams-52, lovely-51)
nsubj(passing-55, dreams-52)
aux(passing-55, might-53)
aux(passing-55, be-54)
advcl(see-26, passing-55)
poss(window-58, his-57)
prep_before(passing-55, window-58)

(ROOT
  (S
    (S
      (NP (PRP He))
      (ADVP (RB often))
      (VP
        (VP (VBD dreamed)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN waked)
                  (PRT (RP up)))))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (VP (VBG looking)
            (PRT (RP out))
            (PP (IN on)
              (NP (DT some)
                (ADJP (JJ gorgeous)
                  (CC and)
                  (JJ lovely))
                (NN show)))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (DT the) (NN morning)))
      (NP (PRP he))
      (VP
        (VP (VBD knew)
          (ADVP (RB sorrowfully))
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (ADVP (RB only))
                (VP (VBN dreamed)
                  (NP (PRP$ his) (JJ own) (NN dream)))))))
        (, ,) (RB not)
        (VP (VBN gazed)
          (PP (IN into)
            (NP
              (NP (DT that))
              (PP (IN of)
                (NP (DT the) (VBG sleeping) (NN day))))))))
    (. .)))

nsubj(dreamed-3, He-1)
nsubj(looking-12, He-1)
advmod(dreamed-3, often-2)
root(ROOT-0, dreamed-3)
mark(waked-7, that-4)
nsubj(waked-7, he-5)
aux(waked-7, had-6)
ccomp(dreamed-3, waked-7)
prt(waked-7, up-8)
aux(looking-12, was-11)
conj_and(dreamed-3, looking-12)
prt(looking-12, out-13)
det(show-19, some-15)
amod(show-19, gorgeous-16)
conj_and(gorgeous-16, lovely-18)
amod(show-19, lovely-18)
prep_on(looking-12, show-19)
det(morning-24, the-23)
prep_in(knew-26, morning-24)
nsubj(knew-26, he-25)
conj_but(dreamed-3, knew-26)
advmod(knew-26, sorrowfully-27)
mark(dreamed-32, that-28)
nsubj(dreamed-32, he-29)
aux(dreamed-32, had-30)
advmod(dreamed-32, only-31)
ccomp(knew-26, dreamed-32)
poss(dream-35, his-33)
amod(dream-35, own-34)
dobj(dreamed-32, dream-35)
neg(gazed-38, not-37)
dep(knew-26, gazed-38)
prep_into(gazed-38, that-40)
det(day-44, the-42)
amod(day-44, sleeping-43)
prep_of(that-40, day-44)

(ROOT
  (S
    (ADVP (RB Again)
      (CC and)
      (RB again))
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN worked)
        (NP (PRP$ his) (NNS brains))
        (PP (TO to)
          (NP (NN weariness)))
        (, ,)
        (S
          (VP
            (VP (VBG trying))
            (CC and)
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB invent)
                    (NP
                      (NP (DT some) (NN machine))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD should)
                            (VP (VB wake)
                              (NP (PRP him)))))))))))))))
    (. .)))

advmod(worked-6, Again-1)
conj_and(Again-1, again-3)
advmod(worked-6, again-3)
nsubj(worked-6, he-4)
aux(worked-6, had-5)
root(ROOT-0, worked-6)
poss(brains-8, his-7)
dobj(worked-6, brains-8)
prep_to(worked-6, weariness-10)
dep(worked-6, trying-12)
dep(worked-6, trying-14)
conj_and(trying-12, trying-14)
aux(invent-16, to-15)
xcomp(trying-14, invent-16)
det(machine-18, some-17)
dobj(invent-16, machine-18)
nsubj(wake-21, machine-18)
aux(wake-21, should-20)
rcmod(machine-18, wake-21)
dobj(wake-21, him-22)

(ROOT
  (S (CC But)
    (SBAR (IN although)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (ADJP
            (ADJP (JJR older))
            (CC and)
            (ADJP (JJ cleverer)))
          (ADVP (RB now)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD fared)
      (ADVP (DT no) (RBR better))
      (PP (IN than)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD wanted)
              (S
                (VP (TO to)
                  (VP (VB wake)
                    (S
                      (NP (PRP himself))
                      (VP (TO to)
                        (VP (VB help)
                          (NP (PRP$ his) (NN mother))
                          (PP (IN with)
                            (NP (NNP Agnes))))))))))))))
    (. .)))

cc(fared-11, But-1)
mark(older-5, although-2)
nsubj(older-5, he-3)
nsubj(cleverer-7, he-3)
cop(older-5, was-4)
advcl(fared-11, older-5)
conj_and(older-5, cleverer-7)
advcl(fared-11, cleverer-7)
advmod(older-5, now-8)
nsubj(fared-11, he-10)
root(ROOT-0, fared-11)
neg(better-13, no-12)
advmod(fared-11, better-13)
advmod(wanted-17, when-15)
nsubj(wanted-17, he-16)
nsubj(wake-19, he-16)
prepc_than(fared-11, wanted-17)
aux(wake-19, to-18)
xcomp(wanted-17, wake-19)
dobj(wake-19, himself-20)
nsubj(help-22, himself-20)
aux(help-22, to-21)
xcomp(wake-19, help-22)
poss(mother-24, his-23)
dobj(help-22, mother-24)
prep_with(help-22, Agnes-26)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD must)
        (VP (VB have)
          (NP
            (NP (DT some) (NN motive) (NN power))
            (SBAR
              (SBAR (IN before)
                (S
                  (S
                    (NP (PRP he))
                    (VP (MD could)
                      (VP (VB do)
                        (NP (NN anything)))))
                  (, ,)
                  (CC and)
                  (S
                    (NP (DT the) (NN clock))
                    (VP (VBD was)
                      (ADVP (RB still))
                      (NP
                        (NP (DT the) (JJ only) (NN power))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (MD could)
                              (VP (VB think)
                                (PP (IN of)))))))))))
              (, ,)
              (CC and)
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (ADJP (JJ afraid)
                      (S
                        (VP (TO to)
                          (VP (VB meddle)
                            (PP (IN with)))))))))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP$ its) (NNS works))
                  (VP (VBD were)
                    (PP (IN beyond)
                      (NP (PRP him)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (RB so) (JJ essential)
          (PP (TO to)
            (NP
              (NP (DT the) (NN well-being))
              (PP (IN of)
                (NP (DT the) (NN house))))))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD would) (RB not)
              (VP (VB venture)
                (S
                  (VP (VBG putting)
                    (NP (PRP it))
                    (PP (IN in)
                      (NP (NN jeopardy)))))))))))
    (. .)))

nsubj(have-3, He-1)
aux(have-3, must-2)
root(ROOT-0, have-3)
det(power-6, some-4)
nn(power-6, motive-5)
dobj(have-3, power-6)
mark(do-10, before-7)
nsubj(do-10, he-8)
aux(do-10, could-9)
dep(power-6, do-10)
dobj(do-10, anything-11)
det(clock-15, the-14)
nsubj(power-20, clock-15)
cop(power-20, was-16)
advmod(power-20, still-17)
det(power-20, the-18)
amod(power-20, only-19)
dep(power-6, power-20)
conj_and(do-10, power-20)
prep_of(think-23, power-20)
nsubj(think-23, he-21)
aux(think-23, could-22)
rcmod(power-20, think-23)
mark(afraid-30, that-27)
nsubj(afraid-30, he-28)
nsubj(meddle-32, he-28)
cop(afraid-30, was-29)
dep(power-6, afraid-30)
conj_and(do-10, afraid-30)
aux(meddle-32, to-31)
xcomp(afraid-30, meddle-32)
prep(meddle-32, with-33)
mark(were-38, for-35)
poss(works-37, its-36)
nsubj(were-38, works-37)
dep(power-6, were-38)
conj_and(do-10, were-38)
prep_beyond(were-38, him-40)
nsubj(essential-46, it-43)
cop(essential-46, was-44)
advmod(essential-46, so-45)
conj_and(have-3, essential-46)
det(well-being-49, the-48)
prep_to(essential-46, well-being-49)
det(house-52, the-51)
prep_of(well-being-49, house-52)
mark(venture-57, that-53)
nsubj(venture-57, he-54)
aux(venture-57, would-55)
neg(venture-57, not-56)
ccomp(essential-46, venture-57)
xcomp(venture-57, putting-58)
dobj(putting-58, it-59)
prep_in(putting-58, jeopardy-61)

(ROOT
  (S
    (NP (CD One) (NN day))
    (, ,)
    (S
      (ADVP (RB however))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD was)
            (VP (VBG thinking)
              (NP (NN nothing))
              (PP (IN about)
                (NP (PRP it)))
              (, ,)
              (ADVP (DT all) (IN at) (RB once))))))
      (NP (PRP it))
      (VP (VBD struck)
        (NP (PRP him))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (NP
                (NP (DT another) (NN motive) (NN power))
                (PP (IN at)
                  (NP (PRP$ his) (NN command)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN thought))
      (VP (VBD had)
        (ADVP (RB hardly))
        (VP (VBN entered)
          (NP (PRP$ his) (NN mind))
          (, ,)
          (SBAR (IN before)
            (S
              (NP (PRP he))
              (VP (VBD saw)
                (ADVP (RB also))
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (ADJP (JJ possible)
                        (S
                          (VP (TO to)
                            (VP (VB turn)
                              (S
                                (NP (PRP it))
                                (VP (TO to)
                                  (VP (VB account)))))))))))))))))
    (. .)))

num(day-2, One-1)
dep(struck-18, day-2)
advmod(struck-18, however-4)
advmod(thinking-9, when-6)
nsubj(thinking-9, he-7)
aux(thinking-9, was-8)
advcl(struck-18, thinking-9)
dobj(thinking-9, nothing-10)
prep_about(thinking-9, it-12)
pobj(at-15, all-14)
advmod(thinking-9, at-15)
advmod(at-15, once-16)
nsubj(struck-18, it-17)
root(ROOT-0, struck-18)
dobj(struck-18, him-19)
mark(had-22, that-20)
nsubj(had-22, he-21)
ccomp(struck-18, had-22)
det(power-25, another-23)
nn(power-25, motive-24)
dobj(had-22, power-25)
poss(command-28, his-27)
prep_at(power-25, command-28)
det(thought-32, the-31)
nsubj(entered-35, thought-32)
aux(entered-35, had-33)
advmod(entered-35, hardly-34)
conj_and(struck-18, entered-35)
poss(mind-37, his-36)
dobj(entered-35, mind-37)
mark(saw-41, before-39)
nsubj(saw-41, he-40)
advcl(entered-35, saw-41)
advmod(saw-41, also-42)
advmod(possible-46, how-43)
nsubj(possible-46, it-44)
nsubj(turn-48, it-44)
cop(possible-46, was-45)
ccomp(saw-41, possible-46)
aux(turn-48, to-47)
xcomp(possible-46, turn-48)
dobj(turn-48, it-49)
nsubj(account-51, it-49)
aux(account-51, to-50)
xcomp(turn-48, account-51)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN motive) (NN power))
      (VP (VBD was)
        (NP
          (NP (DT the) (NN stream))
          (PP (IN from)
            (NP
              (NP (DT the) (NN Prior) (POS 's))
              (NNP Well))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN means))
        (PP (IN of)
          (S
            (VP (VBG using)
              (NP (PRP it))
              (PP (IN for)
                (NP (PRP$ his) (NN purpose)))))))
      (VP (VBD stood)
        (PP (IN on)
          (NP (DT a) (NN shelf)))
        (PP (IN in)
          (NP (DT the) (NNS ruins)))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT the) (NN shape))
            (PP (IN of)
              (NP
                (NP (DT the) (NN toy) (NN water-wheel))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN laid)
                        (PRT (RP aside))
                        (PP (IN as)
                          (ADJP (RB distressingly) (JJ useless)))))))))))))
    (. .)))

poss(power-3, His-1)
nn(power-3, motive-2)
nsubj(stream-6, power-3)
cop(stream-6, was-4)
det(stream-6, the-5)
root(ROOT-0, stream-6)
det(Prior-9, the-8)
poss(Well-11, Prior-9)
prep_from(stream-6, Well-11)
det(means-15, the-14)
nsubj(stood-22, means-15)
prepc_of(means-15, using-17)
dobj(using-17, it-18)
poss(purpose-21, his-20)
prep_for(using-17, purpose-21)
conj_and(stream-6, stood-22)
det(shelf-25, a-24)
prep_on(stood-22, shelf-25)
det(ruins-28, the-27)
prep_in(stood-22, ruins-28)
det(shape-32, the-31)
prep_in(stood-22, shape-32)
det(water-wheel-36, the-34)
nn(water-wheel-36, toy-35)
prep_of(shape-32, water-wheel-36)
dobj(laid-40, water-wheel-36)
nsubj(laid-40, he-38)
aux(laid-40, had-39)
rcmod(water-wheel-36, laid-40)
prt(laid-40, aside-41)
advmod(useless-44, distressingly-43)
prep_as(laid-40, useless-44)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD set)
      (PP (IN about)
        (NP (DT the) (NN thing)))
      (PP (IN at)
        (NP (RB once))))
    (. .)))

nsubj(set-2, He-1)
root(ROOT-0, set-2)
det(thing-5, the-4)
prep_about(set-2, thing-5)
prep(set-2, at-6)
pobj(at-6, once-7)

(ROOT
  (S
    (LST (JJ First))
    (PP (IN of)
      (NP (DT all)))
    (, ,)
    (NP (PRP he))
    (VP (VBD made)
      (NP
        (NP (DT a) (JJ second) (NN bit))
        (PP (IN of)
          (NP (NN channel))))
      (PP (IN for)
        (NP (DT the) (NN stream)))
      (, ,)
      (PP (IN like)
        (NP
          (NP (DT a) (JJ little) (NN loop))
          (PP (TO to)
            (NP (DT the) (JJ first)))))
      (, ,)
      (SBAR (RB so) (IN that)
        (S
          (NP (PRP he))
          (VP (MD could) (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP he))
                (VP (VBD pleased))))
            (, ,)
            (VP
              (VP (VB turn)
                (NP
                  (NP (DT a) (NN part))
                  (PP (IN of)
                    (NP (DT the) (NN water))))
                (PP (IN into)
                  (NP (PRP it))))
              (, ,)
              (CC and)
              (VP (VB let)
                (S
                  (NP (PRP it))
                  (ADVP (RB again))
                  (VP (VB join)
                    (NP
                      (NP (DT the) (JJ principal) (NN channel))
                      (ADJP
                        (NP (DT a) (RB little))
                        (JJR lower)))
                    (PRT (RP down))))))))))
    (. .)))

dep(made-6, First-1)
prep_of(made-6, all-3)
nsubj(made-6, he-5)
root(ROOT-0, made-6)
det(bit-9, a-7)
amod(bit-9, second-8)
dobj(made-6, bit-9)
prep_of(bit-9, channel-11)
det(stream-14, the-13)
prep_for(made-6, stream-14)
det(loop-19, a-17)
amod(loop-19, little-18)
prep_like(made-6, loop-19)
det(first-22, the-21)
prep_to(loop-19, first-22)
advmod(turn-33, so-24)
mark(turn-33, that-25)
nsubj(turn-33, he-26)
nsubj(let-43, he-26)
aux(turn-33, could-27)
advmod(pleased-31, when-29)
nsubj(pleased-31, he-30)
advcl(turn-33, pleased-31)
advcl(made-6, turn-33)
det(part-35, a-34)
dobj(turn-33, part-35)
det(water-38, the-37)
prep_of(part-35, water-38)
prep_into(turn-33, it-40)
advcl(made-6, let-43)
conj_and(turn-33, let-43)
nsubj(join-46, it-44)
advmod(join-46, again-45)
ccomp(let-43, join-46)
det(channel-49, the-47)
amod(channel-49, principal-48)
dobj(join-46, channel-49)
det(little-51, a-50)
npadvmod(lower-52, little-51)
amod(channel-49, lower-52)
prt(join-46, down-53)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD was) (, ,)
      (PP (IN in)
        (NP (NN fact)))
      (, ,)
      (NP (PRP$ his) (NN mill-race)))
    (. .)))

nsubj(mill-race-8, This-1)
cop(mill-race-8, was-2)
prep_in(mill-race-8, fact-5)
poss(mill-race-8, his-7)
root(ROOT-0, mill-race-8)

(ROOT
  (S
    (S
      (SBAR (RB Just) (IN before)
        (S
          (NP (PRP it))
          (VP (VBD joined)
            (NP (DT the) (JJR older) (NN part))
            (ADVP (RB again)))))
      (, ,)
      (ADVP (RB right)
        (PP (IN opposite)
          (NP (PRP$ his) (NN window))))
      (, ,)
      (NP (PRP he))
      (VP (VBD made)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBP run)
              (PP (IN for)
                (NP
                  (NP (DT a) (JJ little) (NN way))
                  (PP (IN in)
                    (NP
                      (NP (DT a) (JJ direct) (NN line))
                      (PP (IN towards)
                        (NP (DT the) (NN house))))))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP
          (NP (DT this) (NN part))
          (PP (IN of)
            (NP (DT the) (JJ new) (NN channel)))))
      (NP (PRP he))
      (VP (VBD made)
        (NP (NNS preparations))
        (PP (IN for)
          (NP (PRP$ his) (NN water-wheel)))))
    (. .)))

advmod(joined-4, Just-1)
mark(joined-4, before-2)
nsubj(joined-4, it-3)
advcl(made-16, joined-4)
det(part-7, the-5)
amod(part-7, older-6)
dobj(joined-4, part-7)
advmod(joined-4, again-8)
advmod(made-16, right-10)
poss(window-13, his-12)
prep_opposite(right-10, window-13)
nsubj(made-16, he-15)
root(ROOT-0, made-16)
nsubj(run-18, it-17)
ccomp(made-16, run-18)
det(way-22, a-20)
amod(way-22, little-21)
prep_for(run-18, way-22)
det(line-26, a-24)
amod(line-26, direct-25)
prep_in(way-22, line-26)
det(house-29, the-28)
prep_towards(line-26, house-29)
det(part-34, this-33)
prep_in(made-40, part-34)
det(channel-38, the-36)
amod(channel-38, new-37)
prep_of(part-34, channel-38)
nsubj(made-40, he-39)
conj_and(made-16, made-40)
dobj(made-40, preparations-41)
poss(water-wheel-44, his-43)
prep_for(made-40, water-wheel-44)

(ROOT
  (S
    (S
      (PP (IN Into)
        (NP (DT the) (NN channel)))
      (NP (PRP he))
      (VP (VBD laid)
        (NP
          (NP (DT a) (NN piece))
          (PP (IN of)
            (NP
              (NP (NN iron) (NN pipe))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD had)
                    (VP (VBN been)
                      (VP (VBG lying)
                        (NP
                          (NP
                            (QP (RB about) (CD useless)))
                          (PP (IN for)
                            (NP (NNS years))))))))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (RB just) (WRB where))
        (S
          (NP (DT the) (NN water))
          (VP (MD would)
            (VP (VB issue)
              (PP (IN in)
                (NP (DT a) (JJ concentrated) (NN rush)))
              (PP (IN from)
                (NP
                  (NP (DT the) (JJR lower) (NN end))
                  (PP (IN of)
                    (NP (PRP it)))))))))
      (, ,)
      (S
        (NP (PRP he))
        (VP (VBN constructed)
          (NP (DT a) (NN foundation))
          (PP (IN for)
            (NP (PRP$ his) (NN wheel)))
          (, ,)
          (FRAG
            (ADJP (JJ similar)
              (PP (TO to)
                (NP (DT that) (NNP Sandy)))))))
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN built)
            (PP (IN for)
              (NP (PRP it)))
            (ADVP (RB before))))))
    (. .)))

det(channel-3, the-2)
prep_into(laid-5, channel-3)
nsubj(laid-5, he-4)
root(ROOT-0, laid-5)
det(piece-7, a-6)
dobj(laid-5, piece-7)
nn(pipe-10, iron-9)
prep_of(piece-7, pipe-10)
nsubj(lying-15, pipe-10)
aux(lying-15, had-13)
aux(lying-15, been-14)
rcmod(pipe-10, lying-15)
quantmod(useless-17, about-16)
dobj(lying-15, useless-17)
prep_for(useless-17, years-19)
advmod(where-23, just-22)
advmod(issue-27, where-23)
det(water-25, the-24)
nsubj(issue-27, water-25)
aux(issue-27, would-26)
advcl(constructed-40, issue-27)
det(rush-31, a-29)
amod(rush-31, concentrated-30)
prep_in(issue-27, rush-31)
det(end-35, the-33)
amod(end-35, lower-34)
prep_from(issue-27, end-35)
prep_of(end-35, it-37)
nsubj(constructed-40, he-39)
conj_and(laid-5, constructed-40)
det(foundation-42, a-41)
dobj(constructed-40, foundation-42)
poss(wheel-45, his-44)
prep_for(constructed-40, wheel-45)
dep(constructed-40, similar-47)
det(Sandy-50, that-49)
prep_to(similar-47, Sandy-50)
nsubj(built-54, he-52)
aux(built-54, had-53)
conj_and(laid-5, built-54)
conj_and(constructed-40, built-54)
prep_for(built-54, it-56)
advmod(built-54, before-57)

(ROOT
  (S
    (NP
      (NP (DT The) (NN water))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBD issued)
            (PP (IN from)
              (NP (DT the) (NN pipe))))))
      (, ,))
    (VP (MD should)
      (VP
        (VP (VB strike)
          (ADVP (RB straight))
          (PP (IN upon)
            (NP (PRP$ its) (NN floats))))
        (, ,)
        (CC and)
        (VP (VB send)
          (S
            (NP (PRP it))
            (VP (VBG whirling)
              (NP (NN round)))))))
    (. .)))

det(water-2, The-1)
nsubj(strike-12, water-2)
nsubj(send-19, water-2)
mark(issued-6, as-4)
nsubj(issued-6, it-5)
rcmod(water-2, issued-6)
det(pipe-9, the-8)
prep_from(issued-6, pipe-9)
aux(strike-12, should-11)
root(ROOT-0, strike-12)
advmod(strike-12, straight-13)
poss(floats-16, its-15)
prep_upon(strike-12, floats-16)
conj_and(strike-12, send-19)
nsubj(whirling-21, it-20)
dep(send-19, whirling-21)
dobj(whirling-21, round-22)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD took)
      (NP (PRP him))
      (NP (DT some) (NN time))
      (S
        (VP (TO to)
          (VP (VB build)
            (NP (PRP it)))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD wanted)
            (S
              (NP (DT this))
              (VP (TO to)
                (VP (VB be)
                  (NP (DT a)
                    (ADJP (JJ good)
                      (CC and)
                      (JJ permanent))
                    (NN job)))))))))
    (. .)))

nsubj(took-2, It-1)
root(ROOT-0, took-2)
iobj(took-2, him-3)
det(time-5, some-4)
dobj(took-2, time-5)
aux(build-7, to-6)
vmod(took-2, build-7)
dobj(build-7, it-8)
mark(wanted-12, for-10)
nsubj(wanted-12, he-11)
advcl(took-2, wanted-12)
dobj(wanted-12, this-13)
nsubj(job-20, this-13)
aux(job-20, to-14)
cop(job-20, be-15)
det(job-20, a-16)
amod(job-20, good-17)
conj_and(good-17, permanent-19)
amod(job-20, permanent-19)
xcomp(wanted-12, job-20)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (NP
          (NP (NNS stones))
          (PP (IN at)
            (NP (NN command))))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (NP (DT a) (NN well))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD said)))
    (, ,)
    (S
      (NP (DT that))
      (VP (VBD yielded)
        (NP
          (NP (DT both) (NNS stones)
            (CC and)
            (NN water))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (ADJP (JJR more))
                (SBAR
                  (SBAR (IN than)
                    (S
                      (NP (NN everybody))
                      (VP (MD could)
                        (VP (VB say)))))
                  (: ;)
                  (CC and)
                  (SBAR (IN in) (NN order)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (S
                            (NP (PRP it))
                            (NP
                              (NP (DT a) (JJ sound) (NN bit))
                              (PP (IN of)
                                (NP (NN work))))))))))))))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD fetched)
        (NP
          (NP (DT a) (NN lump))
          (PP (IN of)
            (NP (NN quick-lime))))
        (PP (IN from)
          (NP
            (NP (DT the) (NN kiln))
            (, ,)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP they))
                (VP (VBD burned)
                  (NP
                    (NP (NNS quantities))
                    (PP (IN of)
                      (NP (PRP it))))
                  (S
                    (VP (TO to)
                      (VP (VB scatter)
                        (PRT (RP over))
                        (NP (DT the) (NN clay-soil))))))))))))
    (, ,)
    (CC and)
    (ADVP (RB first))
    (S
      (S
        (VP
          (VP (VBG wetting)
            (NP (PRP it))
            (PP (IN with)
              (NP (NN water)))
            (SBAR (IN till)
              (S
                (NP (PRP it))
                (VP (VBD fell)
                  (PP (IN into)
                    (NP (NN powder)))))))
          (, ,)
          (CC and)
          (VP
            (ADVP (RB then))
            (VBG mixing)
            (NP (PRP it))
            (PP (IN with)
              (NP
                (NP (NN sand))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP he))
                    (VP (JJ riddled)
                      (PP (IN from)
                        (NP (DT the) (NN gravel)))))))))))
      (PRN
        (S
          (NP (PRP he))
          (VP (VBD dug)
            (PP (IN from)
              (NP (DT the) (NN garden)))))
        (, ,))
      (NP (PRP he))
      (VP (VBD made)
        (NP (PRP it))
        (PP (IN into)
          (NP (JJ good) (JJ strong) (NN mortar)))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
dobj(had-2, stones-3)
prep_at(stones-3, command-5)
nsubj(had-8, he-7)
conj_and(had-2, had-8)
det(well-10, a-9)
dobj(had-8, well-10)
nsubj(said-13, he-12)
ccomp(had-2, said-13)
conj_and(had-2, said-13)
nsubj(yielded-16, that-15)
ccomp(had-2, yielded-16)
conj_and(had-2, yielded-16)
preconj(stones-18, both-17)
dobj(yielded-16, stones-18)
nsubj(more-24, stones-18)
dobj(yielded-16, water-20)
conj_and(stones-18, water-20)
nsubj(more-24, water-20)
cop(more-24, was-23)
rcmod(stones-18, more-24)
mark(say-28, than-25)
nsubj(say-28, everybody-26)
nsubj(make-34, everybody-26)
aux(say-28, could-27)
advcl(more-24, say-28)
mark(make-34, in-31)
dep(make-34, order-32)
aux(make-34, to-33)
advcl(more-24, make-34)
conj_and(say-28, make-34)
nsubj(bit-38, it-35)
det(bit-38, a-36)
amod(bit-38, sound-37)
xcomp(make-34, bit-38)
prep_of(bit-38, work-40)
nsubj(fetched-43, he-42)
ccomp(had-2, fetched-43)
conj_and(had-2, fetched-43)
det(lump-45, a-44)
dobj(fetched-43, lump-45)
prep_of(lump-45, quick-lime-47)
det(kiln-50, the-49)
prep_from(fetched-43, kiln-50)
advmod(burned-54, where-52)
nsubj(burned-54, they-53)
rcmod(kiln-50, burned-54)
dobj(burned-54, quantities-55)
prep_of(quantities-55, it-57)
aux(scatter-59, to-58)
vmod(burned-54, scatter-59)
prt(scatter-59, over-60)
det(clay-soil-62, the-61)
dobj(scatter-59, clay-soil-62)
advmod(made-95, first-65)
dep(made-95, wetting-66)
dobj(wetting-66, it-67)
prep_with(wetting-66, water-69)
mark(fell-72, till-70)
nsubj(fell-72, it-71)
advcl(wetting-66, fell-72)
prep_into(fell-72, powder-74)
advmod(mixing-78, then-77)
conj_and(wetting-66, mixing-78)
dep(made-95, mixing-78)
dobj(mixing-78, it-79)
prep_with(mixing-78, sand-81)
dobj(riddled-84, sand-81)
nsubj(riddled-84, he-83)
rcmod(sand-81, riddled-84)
det(gravel-87, the-86)
prep_from(riddled-84, gravel-87)
nsubj(dug-89, he-88)
parataxis(made-95, dug-89)
det(garden-92, the-91)
prep_from(dug-89, garden-92)
nsubj(made-95, he-94)
conj_and(had-2, made-95)
dobj(made-95, it-96)
amod(mortar-100, good-98)
amod(mortar-100, strong-99)
prep_into(made-95, mortar-100)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP$ its) (NN bed))
        (VP (VBD was)
          (PP (IN at)
            (NP
              (NP (NN length))
              (VP (VBN made)
                (PP (IN for)
                  (NP (PRP it)))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD took)
      (NP
        (NP (DT the) (NN wheel)
          (CC and)
          (NN put))
        (PP (IN in)
          (NP (DT a) (JJR longer) (NNS axis))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB project)
            (PP (IN on)
              (NP (CD one) (NN side)))
            (PP
              (PP (IN beyond)
                (NP
                  (NP (DT the) (NN gudgeon-block))
                  (, ,)
                  (CC or)
                  (NP
                    (NP (JJ hollow))
                    (SBAR
                      (WHPP (IN in)
                        (WHNP (WDT which)))
                      (S
                        (NP (PRP it))
                        (VP (VBD turned)))))
                  (: ;)))
              (CC and)
              (PP (IN upon)
                (NP
                  (NP (DT this) (JJ projecting) (NN piece))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD fixed)
                        (NP (DT a) (JJ large) (NN reel))))))))))))
    (. .)))

advmod(was-4, When-1)
poss(bed-3, its-2)
nsubj(was-4, bed-3)
advcl(took-12, was-4)
prep_at(was-4, length-6)
vmod(length-6, made-7)
prep_for(made-7, it-9)
nsubj(took-12, he-11)
root(ROOT-0, took-12)
det(wheel-14, the-13)
dobj(took-12, wheel-14)
dobj(took-12, put-16)
conj_and(wheel-14, put-16)
det(axis-20, a-18)
amod(axis-20, longer-19)
prep_in(wheel-14, axis-20)
aux(project-23, to-22)
vmod(took-12, project-23)
vmod(took-12, project-23')
conj_and(project-23, project-23')
num(side-26, one-25)
prep_on(project-23, side-26)
det(gudgeon-block-29, the-28)
prep_beyond(project-23, gudgeon-block-29)
prep_beyond(project-23, hollow-32)
conj_or(gudgeon-block-29, hollow-32)
prep_in(turned-36, hollow-32)
nsubj(turned-36, it-35)
rcmod(hollow-32, turned-36)
det(piece-42, this-40)
amod(piece-42, projecting-41)
prep_upon(project-23', piece-42)
nsubj(fixed-44, he-43)
rcmod(piece-42, fixed-44)
det(reel-47, a-45)
amod(reel-47, large-46)
dobj(fixed-44, reel-47)

(ROOT
  (S
    (ADVP (RB Then))
    (, ,)
    (S
      (VP (VBG having)
        (VP (VBN put)
          (NP
            (NP (DT the) (NN wheel))
            (PP (IN in)
              (NP (PRP$ its) (NN place)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD asked)
      (NP (PRP$ his) (NN father))
      (PP (IN for)
        (NP
          (NP (NN sixpence))
          (, ,)
          (NP
            (NP (NN part))
            (SBAR
              (WHPP (IN of)
                (WHNP (WDT which)))
              (S
                (NP (PRP he))
                (VP (VBD laid)
                  (PRT (RP out))
                  (PP (IN on)
                    (NP
                      (NP (DT a) (JJ large) (NN ball))
                      (PP (IN of)
                        (NP (NN pack-thread))))))))))))
    (. .)))

advmod(asked-12, Then-1)
aux(put-4, having-3)
vmod(asked-12, put-4)
det(wheel-6, the-5)
dobj(put-4, wheel-6)
poss(place-9, its-8)
prep_in(wheel-6, place-9)
nsubj(asked-12, he-11)
root(ROOT-0, asked-12)
poss(father-14, his-13)
dobj(asked-12, father-14)
prep_for(asked-12, sixpence-16)
appos(sixpence-16, part-18)
prep_of(laid-22, part-18)
nsubj(laid-22, he-21)
rcmod(part-18, laid-22)
prt(laid-22, out-23)
det(ball-27, a-25)
amod(ball-27, large-26)
prep_on(laid-22, ball-27)
prep_of(ball-27, pack-thread-29)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ outside) (NN end))
        (PP (IN of)
          (NP
            (NP (DT the) (NN ball))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBN fastened)
                  (PP (TO to)
                    (NP (DT the) (NN reel)))
                  (, ,)
                  (ADVP (RB then))))))))
      (VP (VBD threw)
        (NP (DT the) (NN ball))
        (PP (IN through)
          (NP (DT the) (JJ open) (NN window)))
        (PP (IN into)
          (NP (PRP$ his) (NN room)))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD undid)
        (NP (PRP it))
        (PP (IN from)
          (NP (DT the) (JJ inside) (NN end)))
        (, ,)
        (S
          (VP (VBG laying)
            (NP (DT the) (NN thread))
            (PP (IN in)
              (NP
                (NP (NNS coils))
                (PP (IN on)
                  (NP (DT the) (NN floor)))))))))
    (. .)))

det(end-3, The-1)
amod(end-3, outside-2)
nsubj(threw-14, end-3)
det(ball-6, the-5)
prep_of(end-3, ball-6)
nsubj(fastened-8, he-7)
rcmod(ball-6, fastened-8)
det(reel-11, the-10)
prep_to(fastened-8, reel-11)
advmod(fastened-8, then-13)
root(ROOT-0, threw-14)
det(ball-16, the-15)
dobj(threw-14, ball-16)
det(window-20, the-18)
amod(window-20, open-19)
prep_through(threw-14, window-20)
poss(room-23, his-22)
prep_into(threw-14, room-23)
expl(undid-27, there-26)
conj_and(threw-14, undid-27)
dobj(undid-27, it-28)
nsubj(undid-27, it-28)
det(end-32, the-30)
amod(end-32, inside-31)
prep_from(undid-27, end-32)
vmod(undid-27, laying-34)
det(thread-36, the-35)
dobj(laying-34, thread-36)
prep_in(laying-34, coils-38)
det(floor-41, the-40)
prep_on(coils-38, floor-41)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP it))
        (VP (VBD was)
          (VP (NN time)
            (S
              (VP (TO to)
                (VP (VB go)
                  (PP (TO to)
                    (NP (NN bed))))))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD ran)
        (PRT (RP out)))
      (CC and)
      (VP (VBD turned)
        (NP (DT the) (NN water))
        (PP (RB first)
          (PP (IN into)
            (NP (DT the) (NN garden)))
          (, ,)
          (CC and)
          (ADVP (RB then))
          (PP (IN into)
            (NP (DT the) (JJ new) (NN channel)))))
      (: ;)
      (SBAR
        (WHADVP (WRB when))
        (S
          (ADVP (RB suddenly))
          (NP (DT the) (NN wheel))
          (VP (VBD began)
            (S
              (VP (TO to)
                (VP (VB spin)
                  (PRT (RP about))
                  (, ,)
                  (CC and)
                  (VB wind)
                  (NP (DT the) (NN pack-thread))
                  (PP (IN on)
                    (PP (TO to)
                      (NP (DT the) (NN reel)))))))))))
    (. .)))

advmod(time-4, When-1)
nsubj(time-4, it-2)
nsubj(go-6, it-2)
aux(time-4, was-3)
advcl(ran-11, time-4)
aux(go-6, to-5)
xcomp(time-4, go-6)
prep_to(go-6, bed-8)
nsubj(ran-11, he-10)
nsubj(turned-14, he-10)
root(ROOT-0, ran-11)
prt(ran-11, out-12)
conj_and(ran-11, turned-14)
det(water-16, the-15)
dobj(turned-14, water-16)
advmod(turned-14, first-17)
det(garden-20, the-19)
prep_into(turned-14, garden-20)
advmod(turned-14, then-23)
det(channel-27, the-25)
amod(channel-27, new-26)
prep_into(turned-14, channel-27)
conj_and(garden-20, channel-27)
advmod(began-33, when-29)
advmod(began-33, suddenly-30)
det(wheel-32, the-31)
nsubj(began-33, wheel-32)
nsubj(spin-35, wheel-32)
nsubj(wind-39, wheel-32)
dep(ran-11, began-33)
aux(spin-35, to-34)
xcomp(began-33, spin-35)
prt(spin-35, about-36)
xcomp(began-33, wind-39)
conj_and(spin-35, wind-39)
det(pack-thread-41, the-40)
dobj(spin-35, pack-thread-41)
prep(spin-35, on-42)
pcomp(on-42, to-43)
det(reel-45, the-44)
pobj(to-43, reel-45)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD ran)
          (PP (TO to)
            (NP (PRP$ his) (NN room))))
        (, ,)
        (CC and)
        (VP (VBD undressed)
          (ADVP (RBR faster))
          (SBAR (IN than)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (ADVP (RB ever))
                (VP (VBN done)
                  (ADVP (RB before)))))))
        (, ,)
        (VP (VBD tied)
          (NP
            (NP (DT the) (JJ other) (NN end))
            (PP (IN of)
              (NP (DT the) (NN thread))))
          (PP (IN around)
            (NP (PRP$ his) (NN wrist))))))
    (, ,)
    (CC and)
    (, ,)
    (SBAR (IN although)
      (S
        (VP (VBD kept)
          (NP
            (NP
              (NP
                (ADJP (RB awake))
                (ADVP (RB much) (RB longer)
                  (PP (IN than)
                    (ADJP (JJ usual)))))
              (PP (IN by)
                (NP
                  (NP (PRP$ his) (NN excitement))
                  (, ,)
                  (PP (IN at)
                    (NP
                      (NP (NN length))
                      (VP (VBD fell))))))
              (ADJP (JJ fast) (JJ asleep))
              (, ,)
              (CC and)
              (VP (VBN dreamed)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN thread))
                    (VP (VBD had)
                      (VP (VBN waked)
                        (NP (PRP him)))))))
              (, ,)
              (CC and)
              (VP (VBN drawn)
                (NP (PRP him))
                (PP (TO to)
                  (NP (DT the) (NN window))))
              (, ,)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP he))
                  (VP (VBD saw)
                    (NP (DT the) (JJ water-wheel) (NN flashing))
                    (PP (IN like)
                      (NP (DT a) (NN fire-wheel)))))))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (NN water))
              (VP (VBG rushing)
                (PRT (RP away))
                (PP (IN from)
                  (PP (IN under)
                    (NP (PRP it))))
                (PP (IN in)
                  (NP (DT a) (JJ green) (NN flame)))))))))
    (. .)))

nsubj(ran-2, He-1)
nsubj(undressed-8, He-1)
nsubj(tied-17, He-1)
nsubj(kept-31, He-1)
root(ROOT-0, ran-2)
poss(room-5, his-4)
prep_to(ran-2, room-5)
conj_and(ran-2, undressed-8)
advmod(undressed-8, faster-9)
mark(done-14, than-10)
nsubj(done-14, he-11)
aux(done-14, had-12)
advmod(done-14, ever-13)
advcl(undressed-8, done-14)
advmod(done-14, before-15)
conj_and(ran-2, tied-17)
det(end-20, the-18)
amod(end-20, other-19)
dobj(tied-17, end-20)
det(thread-23, the-22)
prep_of(end-20, thread-23)
poss(wrist-26, his-25)
prep_around(tied-17, wrist-26)
mark(kept-31, although-30)
conj_and(ran-2, kept-31)
dobj(kept-31, awake-32)
advmod(longer-34, much-33)
advmod(awake-32, longer-34)
prep_than(longer-34, usual-36)
poss(excitement-39, his-38)
prep_by(awake-32, excitement-39)
prep_at(excitement-39, length-42)
vmod(length-42, fell-43)
amod(asleep-45, fast-44)
amod(awake-32, asleep-45)
dobj(kept-31, dreamed-48)
conj_and(awake-32, dreamed-48)
mark(waked-53, that-49)
det(thread-51, the-50)
nsubj(waked-53, thread-51)
aux(waked-53, had-52)
ccomp(dreamed-48, waked-53)
dobj(waked-53, him-54)
dobj(kept-31, drawn-57)
conj_and(awake-32, drawn-57)
dobj(drawn-57, him-58)
det(window-61, the-60)
prep_to(drawn-57, window-61)
advmod(saw-65, where-63)
nsubj(saw-65, he-64)
dep(drawn-57, saw-65)
det(flashing-68, the-66)
amod(flashing-68, water-wheel-67)
dobj(saw-65, flashing-68)
det(fire-wheel-71, a-70)
prep_like(saw-65, fire-wheel-71)
det(water-75, the-74)
dobj(kept-31, water-75)
conj_and(awake-32, water-75)
vmod(water-75, rushing-76)
prepc_away_from(rushing-76, under-79)
pobj(under-79, it-80)
det(flame-84, a-82)
amod(flame-84, green-83)
prep_in(rushing-76, flame-84)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP he))
          (VP (VBD did)
            (NP (NN wake)))))
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ broad))
        (NP (NN day))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NNS coils))
        (PP (IN of)
          (NP (NN pack-thread))))
      (VP (VBD were)
        (VP (VBG lying)
          (PP (IN on)
            (NP
              (NP (DT the) (NN floor))
              (VP
                (ADVP (RB scarcely))
                (VBN diminished)))))))
    (: ;)
    (S
      (NP (DT the) (NN brook))
      (VP (VBD was)
        (VP (VBG singing)
          (PP (IN in)
            (NP (DT the) (NN garden))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD went)
            (PP (TO to)
              (NP (DT the) (NN window))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD saw)
        (NP
          (NP (DT the) (NN wheel))
          (VP (VBG spinning)
            (ADVP (RB merrily))
            (NP (NN round))))))
    (. .)))

advmod(did-3, When-1)
nsubj(did-3, he-2)
advcl(broad-7, did-3)
dobj(did-3, wake-4)
nsubj(broad-7, it-5)
cop(broad-7, was-6)
root(ROOT-0, broad-7)
tmod(broad-7, day-8)
det(coils-11, the-10)
nsubj(lying-15, coils-11)
prep_of(coils-11, pack-thread-13)
aux(lying-15, were-14)
conj_and(broad-7, lying-15)
det(floor-18, the-17)
prep_on(lying-15, floor-18)
advmod(diminished-20, scarcely-19)
vmod(floor-18, diminished-20)
det(brook-23, the-22)
nsubj(singing-25, brook-23)
aux(singing-25, was-24)
conj_and(broad-7, singing-25)
det(garden-28, the-27)
prep_in(singing-25, garden-28)
advmod(went-33, when-31)
nsubj(went-33, he-32)
advcl(saw-39, went-33)
det(window-36, the-35)
prep_to(went-33, window-36)
nsubj(saw-39, he-38)
conj_and(broad-7, saw-39)
det(wheel-41, the-40)
dobj(saw-39, wheel-41)
vmod(wheel-41, spinning-42)
advmod(spinning-42, merrily-43)
dobj(spinning-42, round-44)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD dressed)
          (PP (IN in)
            (NP (NN haste))))
        (, ,)
        (VP (VBD ran)
          (PRT (RP out)))
        (, ,)
        (CC and)
        (VP (VBD found)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN thread))
              (VP (VBD had)
                (VP (VBN got)
                  (ADJP (JJ entangled)
                    (PP (IN amongst)
                      (NP
                        (NP (DT the) (NN bushes))
                        (PP (IN on)
                          (NP (PRP$ its) (NN way))))))
                  (PP (TO to)
                    (NP (DT the) (NN wheel))))))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (VP (VBN stuck)
            (ADVP (RB fast))))))
    (: ;)
    (S
      (NP (JJ whereupon) (DT the) (NN wheel))
      (VP
        (VP (VBD had)
          (VP (VBN broken)
            (S
              (NP (PRP it))
              (VP (TO to)
                (VP (VB get)
                  (ADVP (RB loose)))))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (VP (VBN been)
            (VP (VBG spinning)
              (NP (NN round)
                (CC and)
                (NN round))
              (NP (DT all) (NN night))
              (PP (IN for)
                (NP (NN nothing)))
              (, ,)
              (PP (IN like)
                (NP
                  (NP (DT the)
                    (ADJP (JJ useless))
                    (NN thing))
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (ADVP (RB before))))))))))))
    (. .)))

nsubj(dressed-2, He-1)
nsubj(ran-6, He-1)
nsubj(found-10, He-1)
nsubj(stuck-29, He-1)
root(ROOT-0, dressed-2)
prep_in(dressed-2, haste-4)
conj_and(dressed-2, ran-6)
prt(ran-6, out-7)
conj_and(dressed-2, found-10)
mark(entangled-16, that-11)
det(thread-13, the-12)
nsubj(entangled-16, thread-13)
aux(entangled-16, had-14)
dep(entangled-16, got-15)
ccomp(found-10, entangled-16)
det(bushes-19, the-18)
prep_amongst(entangled-16, bushes-19)
poss(way-22, its-21)
prep_on(bushes-19, way-22)
det(wheel-25, the-24)
prep_to(entangled-16, wheel-25)
aux(stuck-29, had-28)
conj_and(dressed-2, stuck-29)
advmod(stuck-29, fast-30)
amod(wheel-34, whereupon-32)
det(wheel-34, the-33)
nsubj(broken-36, wheel-34)
nsubj(spinning-45, wheel-34)
aux(broken-36, had-35)
parataxis(dressed-2, broken-36)
dobj(broken-36, it-37)
nsubj(get-39, it-37)
aux(get-39, to-38)
xcomp(broken-36, get-39)
advmod(get-39, loose-40)
aux(spinning-45, had-43)
aux(spinning-45, been-44)
parataxis(dressed-2, spinning-45)
conj_and(broken-36, spinning-45)
dobj(spinning-45, round-46)
dobj(spinning-45, round-48)
conj_and(round-46, round-48)
det(night-50, all-49)
tmod(spinning-45, night-50)
prep_for(spinning-45, nothing-52)
det(thing-57, the-55)
amod(thing-57, useless-56)
prep_like(spinning-45, thing-57)
nsubj(was-59, it-58)
rcmod(thing-57, was-59)
advmod(was-59, before-60)

(ROOT
  (S
    (NP (DT That) (NN afternoon))
    (NP (PRP he))
    (VP (VBD set)
      (NP (NNS poles))
      (PRT (RP up))
      (PP (IN for)
        (NP (NNS guides)))
      (, ,)
      (PP (IN along)
        (NP
          (NP (DT the) (NN top))
          (SBAR
            (WHPP (IN of)
              (WHNP (WDT which)))
            (S
              (NP (DT the) (NN thread))
              (VP (MD might)
                (VP
                  (VP (VB run))
                  (, ,)
                  (CC and)
                  (ADVP (RB so))
                  (VP (VB keep)
                    (ADJP (JJ clear))
                    (PP (IN of)
                      (NP (DT the) (NN bushes)))))))))))
    (. .)))

det(afternoon-2, That-1)
nsubj(set-4, afternoon-2)
nsubj(set-4, he-3)
root(ROOT-0, set-4)
dobj(set-4, poles-5)
prt(set-4, up-6)
prep_for(set-4, guides-8)
det(top-12, the-11)
prep_along(set-4, top-12)
prep_of(run-18, top-12)
det(thread-16, the-15)
nsubj(run-18, thread-16)
nsubj(keep-22, thread-16)
aux(run-18, might-17)
rcmod(top-12, run-18)
rcmod(top-12, keep-22)
conj_and(run-18, keep-22)
acomp(keep-22, clear-23)
det(bushes-26, the-25)
prep_of(keep-22, bushes-26)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBD fared)
      (ADVP (DT no) (RBR better))
      (NP (DT the) (JJ next) (NN night))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (ADVP (RB never))
          (VP (VBD waked)
            (SBAR
              (SBAR (IN until)
                (S
                  (NP
                    (NP (DT the) (NN morning))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP he))
                        (VP (VBD found)
                          (SBAR (IN that)
                            (S
                              (NP (DT the) (NN wheel))
                              (VP (VBD stood)
                                (NP (NN stock))
                                (ADVP (RB still))
                                (, ,)
                                (PP (IN for)
                                  (NP (DT the) (NN thread)))
                                (, ,)
                                (S
                                  (VP (VBG having)
                                    (VP (VBN filled)
                                      (NP (DT the) (NN reel)))))))))))
                    (, ,))
                  (VP (VBD had)
                    (VP (VBN slipped)
                      (PRT (RP off))))))
              (, ,)
              (CC and)
              (SBAR (IN so)
                (S
                  (VP (VBD wound)
                    (NP (PRP itself))
                    (PP (IN about)
                      (NP (DT the) (NN wheel)))
                    (SBAR (IN that)
                      (S
                        (NP (PRP it))
                        (VP (VBD was)
                          (ADJP (VBN choked)
                            (PP (IN in)
                              (NP (PRP$ its) (JJ many) (NNS windings)))))))))))))))
    (. .)))

cc(fared-3, But-1)
nsubj(fared-3, he-2)
root(ROOT-0, fared-3)
neg(better-5, no-4)
advmod(fared-3, better-5)
det(night-8, the-6)
amod(night-8, next-7)
tmod(fared-3, night-8)
mark(waked-13, for-10)
nsubj(waked-13, he-11)
neg(waked-13, never-12)
advcl(fared-3, waked-13)
mark(slipped-38, until-14)
det(morning-16, the-15)
tmod(found-20, morning-16)
mark(stood-24, morning-16)
nsubj(slipped-38, morning-16)
nsubj(wound-43, morning-16)
advmod(found-20, when-18)
nsubj(found-20, he-19)
rcmod(morning-16, found-20)
det(wheel-23, the-22)
nsubj(stood-24, wheel-23)
ccomp(found-20, stood-24)
dobj(stood-24, stock-25)
advmod(stood-24, still-26)
det(thread-30, the-29)
prep_for(stood-24, thread-30)
aux(filled-33, having-32)
vmod(stood-24, filled-33)
det(reel-35, the-34)
dobj(filled-33, reel-35)
aux(slipped-38, had-37)
advcl(waked-13, slipped-38)
prt(slipped-38, off-39)
mark(wound-43, so-42)
advcl(waked-13, wound-43)
conj_and(slipped-38, wound-43)
dobj(wound-43, itself-44)
det(wheel-47, the-46)
prep_about(wound-43, wheel-47)
mark(choked-51, that-48)
nsubjpass(choked-51, it-49)
auxpass(choked-51, was-50)
ccomp(wound-43, choked-51)
poss(windings-55, its-53)
amod(windings-55, many-54)
prep_in(choked-51, windings-55)

(ROOT
  (S
    (ADVP (RB Indeed))
    (, ,)
    (S
      (NP (DT the) (NN thread))
      (VP (VBD was)
        (PP (IN in)
          (NP
            (NP (DT a) (JJ wonderful) (NN tangle))
            (PP (IN about)
              (NP (DT the) (JJ whole) (NN machine)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD took)
        (NP (PRP him))
        (NP (DT a) (JJ long) (NN time)
          (S
            (VP (TO to)
              (VP (VB unwind) (: --)
                (S
                  (VP (VBG turning)
                    (ADVP
                      (ADVP
                        (NP (DT the) (NN wheel))
                        (RB backwards))
                      (, ,) (RB so)
                      (ADVP (RB as) (RB not)))
                    (S
                      (VP (TO to)
                        (VP (VB break)
                          (NP (DT the) (NN thread)))))))))))))
    (. .)))

advmod(was-5, Indeed-1)
det(thread-4, the-3)
nsubj(was-5, thread-4)
root(ROOT-0, was-5)
det(tangle-9, a-7)
amod(tangle-9, wonderful-8)
prep_in(was-5, tangle-9)
det(machine-13, the-11)
amod(machine-13, whole-12)
prep_about(tangle-9, machine-13)
nsubj(took-17, it-16)
conj_and(was-5, took-17)
iobj(took-17, him-18)
det(time-21, a-19)
amod(time-21, long-20)
dobj(took-17, time-21)
aux(unwind-23, to-22)
vmod(time-21, unwind-23)
parataxis(unwind-23, turning-25)
det(wheel-27, the-26)
npadvmod(backwards-28, wheel-27)
advmod(turning-25, backwards-28)
advmod(backwards-28, so-30)
advmod(not-32, as-31)
advmod(backwards-28, not-32)
aux(break-34, to-33)
xcomp(turning-25, break-34)
det(thread-36, the-35)
dobj(break-34, thread-36)

(ROOT
  (S
    (SBAR (IN In) (NN order)
      (S
        (VP (TO to)
          (VP (VB remove)
            (NP
              (NP (DT the) (NN cause))
              (PP (IN of)
                (NP (DT this) (JJ fresh) (NN failure))))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD went)
        (PP (TO to)
          (NP
            (NP (DT the) (NN turner))
            (, ,)
            (SBAR
              (WHNP (WP$ whose) (NN name))
              (S
                (VP (VBD was)
                  (NP (NNP William) (NNP Burt))))))))
      (, ,)
      (CC and)
      (VP (VBD asked)
        (S
          (NP (PRP him))
          (VP (TO to)
            (VP (VB turn)
              (PP (IN for)
                (NP (PRP him)))
              (NP
                (NP (DT a) (JJ large) (NN reel)
                  (CC or)
                  (NN spool))
                (, ,)
                (PP (IN with)
                  (NP (JJ deep) (NNS ends)))
                (, ,)
                (CC and)
                (NP (JJ small) (NN cylinder) (IN between))))))))
    (. .)))

mark(remove-4, In-1)
dep(remove-4, order-2)
aux(remove-4, to-3)
advcl(went-13, remove-4)
det(cause-6, the-5)
dobj(remove-4, cause-6)
det(failure-10, this-8)
amod(failure-10, fresh-9)
prep_of(cause-6, failure-10)
nsubj(went-13, he-12)
nsubj(asked-25, he-12)
root(ROOT-0, went-13)
det(turner-16, the-15)
prep_to(went-13, turner-16)
poss(name-19, turner-16)
nsubj(Burt-22, name-19)
cop(Burt-22, was-20)
nn(Burt-22, William-21)
rcmod(turner-16, Burt-22)
conj_and(went-13, asked-25)
dobj(asked-25, him-26)
nsubj(turn-28, him-26)
aux(turn-28, to-27)
xcomp(asked-25, turn-28)
prep_for(turn-28, him-30)
det(reel-33, a-31)
amod(reel-33, large-32)
dobj(turn-28, reel-33)
dobj(turn-28, spool-35)
conj_or(reel-33, spool-35)
dobj(turn-28, with-37)
conj_or(reel-33, with-37)
amod(ends-39, deep-38)
prep_with(reel-33, ends-39)
amod(cylinder-43, small-42)
dobj(turn-28, cylinder-43)
conj_and(reel-33, cylinder-43)
amod(cylinder-43, between-44)

(ROOT
  (S
    (S
      (NP (NNP William))
      (VP (VBD told)
        (NP (PRP him))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADJP (RB very) (JJ busy))
              (NP (RB just) (RB then)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD would)
        (VP (VB fix)
          (NP
            (NP (DT a) (JJ suitable) (NN piece))
            (PP (IN of)
              (NP
                (NP (NN wood))
                (PP (IN for)
                  (NP (PRP him))))))
          (PP (IN on)
            (NP
              (NP (PRP$ his) (JJ old) (NN lathe))
              (, ,)
              (SBAR
                (WHPP (IN with)
                  (WHNP (WDT which)))
                (PRN (, ,)
                  (SBAR (IN as)
                    (S
                      (NP (PRP he))
                      (VP (VBD knew)
                        (S
                          (NP (PRP him))
                          (VP (TO to)
                            (VP (VB be)
                              (NP (DT a) (JJ handy) (NN boy))))))))
                  (, ,))
                (S
                  (NP (PRP he))
                  (VP (MD might)
                    (VP (VB turn)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP he))
                          (VP (VBD wanted)
                            (PP (IN for)
                              (NP (PRP himself)))))))))))))))
    (. .)))

nsubj(told-2, William-1)
root(ROOT-0, told-2)
dobj(told-2, him-3)
nsubj(busy-7, he-4)
cop(busy-7, was-5)
advmod(busy-7, very-6)
dep(told-2, busy-7)
advmod(then-9, just-8)
dep(busy-7, then-9)
nsubj(fix-14, he-12)
aux(fix-14, would-13)
conj_but(told-2, fix-14)
det(piece-17, a-15)
amod(piece-17, suitable-16)
dobj(fix-14, piece-17)
prep_of(piece-17, wood-19)
prep_for(wood-19, him-21)
poss(lathe-25, his-23)
amod(lathe-25, old-24)
prep_on(fix-14, lathe-25)
prep_with(turn-42, lathe-25)
mark(knew-32, as-30)
nsubj(knew-32, he-31)
dep(turn-42, knew-32)
dobj(knew-32, him-33)
nsubj(boy-38, him-33)
aux(boy-38, to-34)
cop(boy-38, be-35)
det(boy-38, a-36)
amod(boy-38, handy-37)
xcomp(knew-32, boy-38)
nsubj(turn-42, he-40)
aux(turn-42, might-41)
rcmod(lathe-25, turn-42)
dobj(wanted-45, what-43)
nsubj(wanted-45, he-44)
ccomp(turn-42, wanted-45)
prep_for(wanted-45, himself-47)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBD was)
        (NP (PRP$ his) (JJ first) (NN attempt))
        (PP (IN at)
          (NP
            (NP (DT the) (NN use))
            (PP (IN of)
              (NP (DT the) (NN turning-lathe)))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RB often))
        (VP
          (VP (VBN watched)
            (NP
              (NP (NNP William))
              (PP (IN at)
                (NP (NN work)))))
          (, ,)
          (CC and)
          (VP (VBD was)
            (ADJP (JJ familiar)
              (PP (IN with)
                (NP
                  (NP (DT the) (NN way))
                  (SBAR
                    (WHPP (IN in)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP he))
                      (VP (VBD held)
                        (NP (PRP$ his) (NN tool))))))))))))
    (. .)))

nsubj(attempt-5, This-1)
cop(attempt-5, was-2)
poss(attempt-5, his-3)
amod(attempt-5, first-4)
root(ROOT-0, attempt-5)
det(use-8, the-7)
prep_at(attempt-5, use-8)
det(turning-lathe-11, the-10)
prep_of(use-8, turning-lathe-11)
nsubj(watched-17, he-14)
nsubj(familiar-24, he-14)
aux(watched-17, had-15)
advmod(watched-17, often-16)
conj_but(attempt-5, watched-17)
dobj(watched-17, William-18)
prep_at(William-18, work-20)
cop(familiar-24, was-23)
conj_but(attempt-5, familiar-24)
conj_and(watched-17, familiar-24)
det(way-27, the-26)
prep_with(familiar-24, way-27)
prep_in(held-31, way-27)
nsubj(held-31, he-30)
rcmod(way-27, held-31)
poss(tool-33, his-32)
dobj(held-31, tool-33)

(ROOT
  (S
    (ADVP (RB Hence))
    (NP (DT the) (NN result))
    (VP (VBD was)
      (ADJP (RB tolerably) (JJ satisfactory)))
    (. .)))

advmod(satisfactory-6, Hence-1)
det(result-3, the-2)
nsubj(satisfactory-6, result-3)
cop(satisfactory-6, was-4)
advmod(satisfactory-6, tolerably-5)
root(ROOT-0, satisfactory-6)

(ROOT
  (S
    (SBAR
      (ADVP (RB Long))
      (IN before)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN reached)
            (NP
              (NP (DT the) (NN depth))
              (SBAR
                (WHPP (IN of)
                  (WHNP (WDT which)))
                (S
                  (NP (PRP he))
                  (VP (VBD wished)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (NP (DT the) (NN spool)))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN learned)
        (S
          (VP (TO to)
            (VP (VB manage)
              (NP (PRP$ his) (NN chisel))
              (PP (IN with)
                (NP (DT some) (NN nicety))))))))
    (. .)))

advmod(reached-5, Long-1)
mark(reached-5, before-2)
nsubj(reached-5, he-3)
aux(reached-5, had-4)
advcl(learned-19, reached-5)
det(depth-7, the-6)
dobj(reached-5, depth-7)
prep_of(wished-11, depth-7)
nsubj(wished-11, he-10)
nsubj(make-13, he-10)
rcmod(depth-7, wished-11)
aux(make-13, to-12)
xcomp(wished-11, make-13)
det(spool-15, the-14)
dobj(make-13, spool-15)
nsubj(learned-19, he-17)
nsubj(manage-21, he-17)
aux(learned-19, had-18)
root(ROOT-0, learned-19)
aux(manage-21, to-20)
xcomp(learned-19, manage-21)
poss(chisel-23, his-22)
dobj(manage-21, chisel-23)
det(nicety-26, some-25)
prep_with(manage-21, nicety-26)

(ROOT
  (S
    (S
      (NP (NNP Burt))
      (VP (VBD finished)
        (NP (PRP it))
        (PRT (RP off))
        (PP (IN for)
          (NP (PRP him)))
        (PP (IN with)
          (NP
            (QP (RB just) (DT a) (JJ few))
            (NNS touches)))))
    (: ;)
    (CC and)
    (, ,)
    (S
      (ADJP (JJ delighted)
        (PP (IN with)
          (NP
            (NP (PRP$ his) (NN acquisition))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS rudiments))
                (PP (IN of)
                  (NP (DT a) (JJ new) (NN trade)))))))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD carried)
        (NP (DT the) (JJ spool) (NN home))
        (PP (IN with)
          (NP (PRP him)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB try)
              (ADVP (RB once) (RBR more))
              (NP
                (NP (DT the) (NN possibility))
                (PP (IN of)
                  (S
                    (VP (VBG educating)
                      (NP (PRP$ his) (NN water-wheel))
                      (PP (IN into)
                        (NP (DT a) (NN watchman))))))))))))
    (. .)))

nsubj(finished-2, Burt-1)
nsubj(delighted-15, Burt-1)
root(ROOT-0, finished-2)
dobj(finished-2, it-3)
prt(finished-2, off-4)
prep_for(finished-2, him-6)
quantmod(few-10, just-8)
quantmod(few-10, a-9)
num(touches-11, few-10)
prep_with(finished-2, touches-11)
conj_and(finished-2, delighted-15)
poss(acquisition-18, his-17)
prep_with(delighted-15, acquisition-18)
det(rudiments-21, the-20)
prep_of(acquisition-18, rudiments-21)
det(trade-25, a-23)
amod(trade-25, new-24)
prep_of(rudiments-21, trade-25)
nsubj(carried-28, he-27)
conj_and(finished-2, carried-28)
parataxis(finished-2, carried-28)
det(home-31, the-29)
amod(home-31, spool-30)
dobj(carried-28, home-31)
prep_with(carried-28, him-33)
aux(try-36, to-35)
vmod(carried-28, try-36)
advmod(more-38, once-37)
advmod(try-36, more-38)
det(possibility-40, the-39)
dobj(try-36, possibility-40)
prepc_of(possibility-40, educating-42)
poss(water-wheel-44, his-43)
dobj(educating-42, water-wheel-44)
det(watchman-47, a-46)
prep_into(educating-42, watchman-47)

(ROOT
  (S
    (NP (DT That) (NN night))
    (NP (DT the) (NN pull))
    (VP
      (VP (VBD did) (RB indeed)
        (VP (VB come)))
      (, ,)
      (CC but)
      (, ,)
      (VP (JJ alas))
      (SBAR (IN before)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (ADVP (RB even))
            (VP (VBN fallen)
              (S
                (ADJP (RB asleep))))))))
    (. .)))

det(night-2, That-1)
tmod(come-7, night-2)
det(pull-4, the-3)
nsubj(come-7, pull-4)
nsubj(alas-11, pull-4)
aux(come-7, did-5)
advmod(come-7, indeed-6)
root(ROOT-0, come-7)
conj_but(come-7, alas-11)
mark(fallen-16, before-12)
nsubj(fallen-16, he-13)
aux(fallen-16, had-14)
advmod(fallen-16, even-15)
advcl(come-7, fallen-16)
dep(fallen-16, asleep-17)

(ROOT
  (S
    (NP (NN Something))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADVP (RB always))
            (VP (VBG going)
              (ADJP (JJ wrong)))))))
    (. !)))

nsubj(seemed-2, Something-1)
nsubj(going-6, Something-1)
root(ROOT-0, seemed-2)
aux(going-6, to-3)
aux(going-6, be-4)
advmod(going-6, always-5)
xcomp(seemed-2, going-6)
acomp(going-6, wrong-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD concluded)
      (ADVP (RB already))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP (DT a) (JJ difficult) (NN thing)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP
                      (NP (DT a) (NN machine))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (MD should)
                            (VP (VB do)
                              (SBAR
                                (WHADJP (RB just) (WP what))
                                (S
                                  (NP (DT the) (NN maker))
                                  (VP (VBD wished)))))))))))))))))
    (. .)))

nsubj(concluded-2, He-1)
root(ROOT-0, concluded-2)
advmod(concluded-2, already-3)
mark(thing-9, that-4)
nsubj(thing-9, it-5)
cop(thing-9, was-6)
det(thing-9, a-7)
amod(thing-9, difficult-8)
ccomp(concluded-2, thing-9)
aux(make-11, to-10)
vmod(thing-9, make-11)
det(machine-13, a-12)
dobj(make-11, machine-13)
nsubj(do-16, machine-13)
aux(do-16, should-15)
rcmod(machine-13, do-16)
advmod(what-18, just-17)
dep(wished-21, what-18)
det(maker-20, the-19)
nsubj(wished-21, maker-20)
ccomp(do-16, wished-21)

(ROOT
  (S
    (NP (DT The) (NN spool))
    (VP
      (VP (VBD had)
        (VP (VBN gone)
          (S
            (VP (VBG flying)
              (NP (NN round))))))
      (, ,)
      (CC and)
      (VP (VBD had)
        (VP (VBN swallowed)
          (PRT (RP up))
          (NP
            (NP (DT the) (NN thread))
            (ADJP (RB incredibly) (JJ fast))))))
    (. .)))

det(spool-2, The-1)
nsubj(gone-4, spool-2)
nsubj(swallowed-10, spool-2)
aux(gone-4, had-3)
root(ROOT-0, gone-4)
xcomp(gone-4, flying-5)
dobj(flying-5, round-6)
aux(swallowed-10, had-9)
conj_and(gone-4, swallowed-10)
prt(swallowed-10, up-11)
det(thread-13, the-12)
dobj(swallowed-10, thread-13)
advmod(fast-15, incredibly-14)
amod(thread-13, fast-15)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD made)
        (NP (NN haste))
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (DT the) (NN end))
              (PP (IN off)
                (NP (PRP$ his) (NN wrist)))))))
      (, ,)
      (CC and)
      (VP (VBD saw)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBP fly)
              (PP
                (PP (IN through)
                  (NP
                    (NP (DT the) (JJ little) (NN hole))
                    (PP (IN in)
                      (NP (DT the) (NN window) (NN frame)))))
                (, ,)
                (CC and)
                (RB away)
                (PP (IN after)
                  (NP
                    (NP (DT the) (NN rest))
                    (PP (IN of)
                      (NP (PRP it))))))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN wound)
                      (PP (IN on)
                        (NP (DT the) (VBG whirling) (NN spool))))))))))))
    (. .)))

nsubj(made-2, He-1)
nsubj(saw-13, He-1)
root(ROOT-0, made-2)
dobj(made-2, haste-3)
aux(get-5, to-4)
vmod(made-2, get-5)
det(end-7, the-6)
dobj(get-5, end-7)
poss(wrist-10, his-9)
prep_off(get-5, wrist-10)
conj_and(made-2, saw-13)
nsubj(fly-15, it-14)
nsubjpass(wound-35, it-14)
ccomp(saw-13, fly-15)
prep(fly-15, through-16)
det(hole-19, the-17)
amod(hole-19, little-18)
pobj(through-16, hole-19)
det(frame-23, the-21)
nn(frame-23, window-22)
prep_in(hole-19, frame-23)
prep(fly-15, away-26)
conj_and(through-16, away-26)
dep(through-16, after-27)
det(rest-29, the-28)
pobj(after-27, rest-29)
prep_of(rest-29, it-31)
aux(wound-35, to-33)
auxpass(wound-35, be-34)
xcomp(fly-15, wound-35)
det(spool-39, the-37)
amod(spool-39, whirling-38)
prep_on(wound-35, spool-39)

(ROOT
  (S
    (S
      (SBAR
        (NP (JJ Disappointing))
        (IN as)
        (S
          (NP (DT this))
          (VP (VBD was))))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (NN progress))
          (PP (IN in)
            (NP (PRP it))))))
    (: :)
    (S
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN got)
            (NP (DT the) (NN thing)
              (S
                (VP (TO to)
                  (VP (VB work))))))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (DT all))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD remained)))))
        (VP (VBD was)
          (S
            (VP (TO to)
              (VP (VB regulate)
                (NP (PRP it))))))))
    (. .)))

dep(was-4, Disappointing-1)
mark(was-4, as-2)
nsubj(was-4, this-3)
advcl(was-9, was-4)
advmod(was-9, however-6)
expl(was-9, there-8)
root(ROOT-0, was-9)
nsubj(was-9, progress-10)
prep_in(progress-10, it-12)
nsubj(got-16, he-14)
aux(got-16, had-15)
parataxis(was-9, got-16)
det(thing-18, the-17)
dobj(got-16, thing-18)
aux(work-20, to-19)
vmod(thing-18, work-20)
nsubj(remained-25, all-23)
nsubj(was-26, all-23)
nsubj(regulate-28, all-23)
rcmod(all-23, remained-25)
parataxis(was-9, was-26)
conj_and(got-16, was-26)
aux(regulate-28, to-27)
xcomp(was-26, regulate-28)
dobj(regulate-28, it-29)

(ROOT
  (S (CC But)
    (NP (DT this))
    (VP (VBD turned)
      (PRT (RP out))
      (NP
        (NP (DT the)
          (ADJP (RBS most) (JJ difficult))
          (NN part))
        (PP (IN of)
          (NP (DT the) (NN affair))))
      (PP (IN by)
        (ADVP (RB far))))
    (. .)))

cc(turned-3, But-1)
nsubj(turned-3, this-2)
root(ROOT-0, turned-3)
prt(turned-3, out-4)
det(part-8, the-5)
advmod(difficult-7, most-6)
amod(part-8, difficult-7)
dobj(turned-3, part-8)
det(affair-11, the-10)
prep_of(part-8, affair-11)
prep(turned-3, by-12)
pcomp(by-12, far-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD saw)
      (ADVP (IN at) (RB once))
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBD were)
                (ADJP (JJ only)
                  (S
                    (VP (TO to)
                      (VP (VB make)
                        (NP (DT the) (NN thread))
                        (ADVP
                          (ADVP (RBR longer))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBD was)
                                (NP
                                  (NP (DT the) (JJ first) (NN mode))
                                  (SBAR
                                    (WHNP (WDT that))
                                    (S
                                      (VP (VBD suggested)
                                        (NP (PRP itself)))))))))))))))))
          (, ,)
          (NP (PRP he))
          (VP (MD would)
            (VP (VB increase)
              (NP
                (NP (DT the) (JJ constant) (NN danger))
                (SBAR
                  (S
                    (NP (EX there))
                    (VP (VBD was)
                      (PP (IN of)
                        (S
                          (NP (PRP$ its))
                          (VP (VBG getting)
                            (S
                              (S
                                (VP (VBN fouled)))
                              (, ,) (RB not)
                              (S
                                (VP (TO to)
                                  (VP (VB mention)
                                    (NP
                                      (NP (DT the) (NNS awkwardness))
                                      (PP (IN of)
                                        (S
                                          (VP (VBG using)
                                            (NP
                                              (NP (PDT such) (DT a) (NN quantity))
                                              (PP (IN of)
                                                (NP (PRP it))))))))))))))))))))))))
    (. .)))

nsubj(saw-2, He-1)
root(ROOT-0, saw-2)
advmod(saw-2, at-3)
advmod(at-3, once-4)
mark(increase-27, that-5)
mark(only-9, if-6)
nsubj(only-9, he-7)
nsubj(make-11, he-7)
cop(only-9, were-8)
advcl(increase-27, only-9)
aux(make-11, to-10)
xcomp(only-9, make-11)
det(thread-13, the-12)
dobj(make-11, thread-13)
advmod(make-11, longer-14)
nsubj(mode-20, which-16)
cop(mode-20, was-17)
det(mode-20, the-18)
amod(mode-20, first-19)
advcl(longer-14, mode-20)
ccomp(longer-14, mode-20)
nsubj(suggested-22, mode-20)
rcmod(mode-20, suggested-22)
dobj(suggested-22, itself-23)
nsubj(increase-27, he-25)
aux(increase-27, would-26)
ccomp(saw-2, increase-27)
det(danger-30, the-28)
amod(danger-30, constant-29)
dobj(increase-27, danger-30)
expl(was-32, there-31)
rcmod(danger-30, was-32)
nsubj(getting-35, its-34)
prepc_of(was-32, getting-35)
dep(getting-35, fouled-36)
neg(mention-40, not-38)
aux(mention-40, to-39)
parataxis(fouled-36, mention-40)
det(awkwardness-42, the-41)
dobj(mention-40, awkwardness-42)
prepc_of(awkwardness-42, using-44)
predet(quantity-47, such-45)
det(quantity-47, a-46)
dobj(using-44, quantity-47)
prep_of(quantity-47, it-49)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (DT the) (NN kitten))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB get)
                  (PP (IN into)
                    (NP (DT the) (NN room)))
                  (, ,)
                  (PP (IN for)
                    (NP (NN instance)))
                  (, ,)
                  (SBAR (IN after)
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (VP (VBN laid)
                          (NP (PRP it))
                          (PRT (RP down))))))))))))
      (, ,)
      (NP (PRP she))
      (VP (MD would)
        (VP (VB ruin)
          (S
            (NP (PRP$ his))
            (NP
              (NP (DT every) (NN hope))
              (PP (IN for)
                (NP (DT the) (NN time) (VBG being))))))))
    (: ;)
    (CC and)
    (S
      (PP (IN in)
        (NP
          (NP (NNP Willie) (POS 's))
          (NNS eyes)))
      (NP (NN sixpence))
      (VP (VBD was)
        (NP (DT a) (JJ huge) (NN sum)
          (S
            (VP (TO to)
              (VP (VB ask)
                (PP (IN from)
                  (NP (PRP$ his) (NN father)))))))))
    (. .)))

mark(were-4, If-1)
det(kitten-3, the-2)
nsubj(were-4, kitten-3)
nsubj(get-6, kitten-3)
advcl(ruin-23, were-4)
aux(get-6, to-5)
xcomp(were-4, get-6)
det(room-9, the-8)
prep_into(get-6, room-9)
prep_for(get-6, instance-12)
mark(laid-17, after-14)
nsubj(laid-17, he-15)
aux(laid-17, had-16)
advcl(get-6, laid-17)
dobj(laid-17, it-18)
prt(laid-17, down-19)
nsubj(ruin-23, she-21)
aux(ruin-23, would-22)
root(ROOT-0, ruin-23)
nsubj(hope-26, his-24)
det(hope-26, every-25)
xcomp(ruin-23, hope-26)
det(time-29, the-28)
prep_for(hope-26, time-29)
amod(time-29, being-30)
poss(eyes-36, Willie-34)
prep_in(sum-41, eyes-36)
nsubj(sum-41, sixpence-37)
cop(sum-41, was-38)
det(sum-41, a-39)
amod(sum-41, huge-40)
conj_and(ruin-23, sum-41)
aux(ask-43, to-42)
vmod(sum-41, ask-43)
poss(father-46, his-45)
prep_from(ask-43, father-46)

(ROOT
  (S (CC But)
    (SBAR (IN if) (, ,)
      (PP (IN on)
        (NP (DT the) (NN contrary)))
      (, ,)
      (S
        (NP (PRP he))
        (VP (MD could)
          (VP (VB find)
            (PRT (RP out))
            (NP
              (NP (DT any) (NN mode))
              (PP (IN of)
                (S
                  (VP (VBG making)
                    (NP (DT the) (NN machine) (NN wind))
                    (ADVP (RBR more) (RB slowly))))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD might) (RB then)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB shorten)
                (PP (RB instead) (IN of)
                  (S
                    (VP (VBG lengthening)
                      (NP (DT the) (NN string)))))))))))
    (. .)))

cc(able-26, But-1)
mark(find-10, if-2)
det(contrary-6, the-5)
prep_on(find-10, contrary-6)
nsubj(find-10, he-8)
aux(find-10, could-9)
advcl(able-26, find-10)
prt(find-10, out-11)
det(mode-13, any-12)
dobj(find-10, mode-13)
prepc_of(mode-13, making-15)
det(wind-18, the-16)
nn(wind-18, machine-17)
dobj(making-15, wind-18)
advmod(slowly-20, more-19)
advmod(making-15, slowly-20)
nsubj(able-26, he-22)
nsubj(shorten-28, he-22)
aux(able-26, might-23)
advmod(able-26, then-24)
cop(able-26, be-25)
root(ROOT-0, able-26)
aux(shorten-28, to-27)
xcomp(able-26, shorten-28)
prepc_instead_of(shorten-28, lengthening-31)
det(string-33, the-32)
dobj(lengthening-31, string-33)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (, ,)
    (PP (IN after)
      (NP (JJ much) (NNS pondering)))
    (, ,)
    (NP (PRP he))
    (VP (VBD came)
      (S
        (VP (TO to)
          (VP (VB see)
            (SBAR (IN that)
              (S
                (SBAR (IN if) (, ,)
                  (PP (RB instead) (IN of)
                    (NP (DT the) (NN spool)))
                  (, ,)
                  (S
                    (NP (PRP he))
                    (VP (VBD were)
                      (S
                        (VP (TO to)
                          (VP
                            (VP (VB fix)
                              (PP (IN on)
                                (NP
                                  (NP (DT the) (NNS axis))
                                  (NP
                                    (NP (DT a) (JJ small) (JJ cogged) (NN wheel))
                                    (: --)
                                    (SBAR
                                      (WHNP (WDT that))
                                      (S
                                        (VP (VBZ is) (, ,)
                                          (NP
                                            (NP (DT a) (NN wheel))
                                            (PP (IN with)
                                              (NP (NNS teeth)))))))
                                    (: --)))))
                            (CC and)
                            (VP
                              (ADVP (RB then))
                              (VB make)
                              (NP
                                (NP (DT these) (NNS cogs))
                                (ADJP (VBP fit)
                                  (PP (IN into)
                                    (NP
                                      (NP (DT the) (NNS cogs))
                                      (PP (IN of)
                                        (NP (DT a)
                                          (ADJP (RB much) (JJR larger))
                                          (NN wheel))))))))))))))
                (, ,)
                (NP
                  (NP (DT the) (JJ small) (NN wheel))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD would)
                        (VP (VB turn)
                          (ADVP (RB once))
                          (PP (IN with)
                            (NP
                              (NP (DT every) (NN turn))
                              (PP (IN of)
                                (NP (DT the) (NN water-wheel)))))))))
                  (, ,))
                (VP (MD must)
                  (VP (VB turn)
                    (NP (DT a) (JJ great) (JJ many) (NNS times))
                    (SBAR (IN before)
                      (S
                        (NP (PRP it))
                        (VP (MD could)
                          (VP (VB turn)
                            (NP (DT the) (JJ big) (NN wheel))
                            (ADVP (RB once))))))))))))))
    (. .)))

prep_at(came-9, length-2)
amod(pondering-6, much-5)
prep_after(came-9, pondering-6)
nsubj(came-9, he-8)
nsubj(see-11, he-8)
root(ROOT-0, came-9)
aux(see-11, to-10)
xcomp(came-9, see-11)
mark(turn-71, that-12)
mark(were-21, if-13)
det(spool-18, the-17)
prep_instead_of(were-21, spool-18)
nsubj(were-21, he-20)
nsubj(fix-23, he-20)
nsubj(make-42, he-20)
advcl(turn-71, were-21)
aux(fix-23, to-22)
xcomp(were-21, fix-23)
det(axis-26, the-25)
prep_on(fix-23, axis-26)
det(wheel-30, a-27)
amod(wheel-30, small-28)
amod(wheel-30, cogged-29)
dep(axis-26, wheel-30)
nsubj(wheel-36, wheel-30)
cop(wheel-36, is-33)
det(wheel-36, a-35)
rcmod(wheel-30, wheel-36)
prep_with(wheel-36, teeth-38)
advmod(make-42, then-41)
xcomp(were-21, make-42)
conj_and(fix-23, make-42)
det(cogs-44, these-43)
dobj(make-42, cogs-44)
amod(cogs-44, fit-45)
det(cogs-48, the-47)
prep_into(fit-45, cogs-48)
det(wheel-53, a-50)
advmod(larger-52, much-51)
amod(wheel-53, larger-52)
prep_of(cogs-48, wheel-53)
det(wheel-57, the-55)
amod(wheel-57, small-56)
nsubj(turn-61, wheel-57)
nsubj(turn-71, wheel-57)
aux(turn-61, would-60)
rcmod(wheel-57, turn-61)
advmod(turn-61, once-62)
det(turn-65, every-64)
prep_with(turn-61, turn-65)
det(water-wheel-68, the-67)
prep_of(turn-65, water-wheel-68)
aux(turn-71, must-70)
ccomp(see-11, turn-71)
det(times-75, a-72)
amod(times-75, great-73)
amod(times-75, many-74)
dobj(turn-71, times-75)
mark(turn-79, before-76)
nsubj(turn-79, it-77)
aux(turn-79, could-78)
advcl(turn-71, turn-79)
det(wheel-82, the-80)
amod(wheel-82, big-81)
dobj(turn-79, wheel-82)
advmod(turn-79, once-83)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (MD must)
      (VP (VB fix)
        (NP (DT the) (NN spool))
        (PP (IN on)
          (NP
            (NP (DT the) (NNS axis))
            (PP (IN of)
              (NP
                (NP (DT this) (JJ great) (JJ slow) (NN wheel))
                (, ,)
                (SBAR
                  (WHADVP (WRB when))
                  (PRN (, ,)
                    (S
                      (VP (VBG turning)
                        (ADVP (RB only) (RB as) (RB often))
                        (SBAR (IN as)
                          (S
                            (NP (DT the) (NN wheel))
                            (VP (VBD turned))))))
                    (, ,))
                  (S
                    (NP (DT the) (NN spool))
                    (VP (MD would)
                      (VP (VB wind)
                        (NP
                          (NP
                            (NP (DT the) (NN thread))
                            (ADJP (RB so) (JJ much)))
                          (X (DT the) (JJR more)))
                        (ADVP (RB slowly))))))))))))
    (. .)))

advmod(fix-4, Then-1)
nsubj(fix-4, he-2)
aux(fix-4, must-3)
root(ROOT-0, fix-4)
det(spool-6, the-5)
dobj(fix-4, spool-6)
det(axis-9, the-8)
prep_on(fix-4, axis-9)
det(wheel-14, this-11)
amod(wheel-14, great-12)
amod(wheel-14, slow-13)
prep_of(axis-9, wheel-14)
tmod(wind-30, wheel-14)
advmod(wind-30, when-16)
dep(wind-30, turning-18)
advmod(often-21, only-19)
advmod(often-21, as-20)
advmod(turning-18, often-21)
mark(turned-25, as-22)
det(wheel-24, the-23)
nsubj(turned-25, wheel-24)
advcl(turning-18, turned-25)
det(spool-28, the-27)
nsubj(wind-30, spool-28)
aux(wind-30, would-29)
rcmod(wheel-14, wind-30)
det(thread-32, the-31)
dobj(wind-30, thread-32)
advmod(much-34, so-33)
amod(thread-32, much-34)
det(more-36, the-35)
dep(thread-32, more-36)
advmod(wind-30, slowly-37)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will) (RB not)
      (VP (VB weary)
        (NP (PRP$ my) (NN reader))
        (PP (IN with)
          (NP
            (NP (DT any) (JJ further) (NN detail))
            (PP (IN of)
              (NP
                (NP (NNP Willie) (POS 's))
                (NNS efforts)
                (CC and)
                (NNS failures)))))))
    (. .)))

nsubj(weary-4, I-1)
aux(weary-4, will-2)
neg(weary-4, not-3)
root(ROOT-0, weary-4)
poss(reader-6, my-5)
dobj(weary-4, reader-6)
det(detail-10, any-8)
amod(detail-10, further-9)
prep_with(weary-4, detail-10)
poss(efforts-14, Willie-12)
prep_of(detail-10, efforts-14)
prep_of(detail-10, failures-16)
conj_and(efforts-14, failures-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ enough)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (ADVP (IN at) (RB last))
                    (ADJP (RB so) (RB entirely) (JJ successful))
                    (PP (IN in)
                      (S
                        (VP (VBG timing)
                          (NP (PRP$ his) (NN machine))))))))))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP
            (NP (DT the) (NN run))
            (PP (IN of)
              (NP (DT the) (NN water))))
          (VP (VBD was)
            (ADVP (RB always))
            (NP (DT the) (JJ same))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (MD could)
                  (VP (VB tell)
                    (SBAR
                      (WHNP
                        (WHADJP (RB exactly) (WRB how) (JJ much))
                        (NNS thread))
                      (S
                        (NP (PRP it))
                        (VP (MD would)
                          (VP (VB wind)
                            (PP (IN in)
                              (NP (DT a) (VBN given) (NN time)))))))))))))))
    (. .)))

nsubj(enough-3, It-1)
nsubj(say-5, It-1)
cop(enough-3, is-2)
root(ROOT-0, enough-3)
aux(say-5, to-4)
xcomp(enough-3, say-5)
mark(successful-13, that-6)
nsubj(successful-13, he-7)
cop(successful-13, was-8)
advmod(successful-13, at-9)
advmod(at-9, last-10)
advmod(successful-13, so-11)
advmod(successful-13, entirely-12)
ccomp(say-5, successful-13)
prepc_in(successful-13, timing-15)
poss(machine-17, his-16)
dobj(timing-15, machine-17)
mark(same-28, for-19)
det(run-21, the-20)
nsubj(same-28, run-21)
det(water-24, the-23)
prep_of(run-21, water-24)
cop(same-28, was-25)
advmod(same-28, always-26)
det(same-28, the-27)
advcl(enough-3, same-28)
mark(tell-33, that-30)
nsubj(tell-33, he-31)
aux(tell-33, could-32)
ccomp(same-28, tell-33)
advmod(much-36, exactly-34)
advmod(much-36, how-35)
amod(thread-37, much-36)
dobj(wind-40, thread-37)
nsubj(wind-40, it-38)
aux(wind-40, would-39)
ccomp(tell-33, wind-40)
det(time-44, a-42)
amod(time-44, given-43)
prep_in(wind-40, time-44)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (ADVP (RB then))
        (VP (VBN measured)
          (ADVP
            (ADVP (RB off)
              (NP (DT the) (NN thread))
              (PP (IN with)
                (NP
                  (NP (DT a) (NN mark))
                  (PP (IN of)
                    (NP
                      (NP (NN ink))
                      (PP (IN for)
                        (NP
                          (NP (DT the) (JJ first) (NN hour))
                          (, ,)
                          (NP
                            (NP (CD two))
                            (PP (IN for)
                              (NP (DT the) (NN second))))
                          (, ,))))))))
            (CC and)
            (ADVP (RB so) (RB on))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB set)
              (NP (PRP$ his) (NN alarum))
              (PP (VBG according)
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN time))
                    (SBAR
                      (WHPP (IN at)
                        (WHNP (WDT which)))
                      (S
                        (NP (PRP he))
                        (VP (VBD wished)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (VP (VBN woke)
                                  (PP (IN by)
                                    (NP
                                      (NP (DT the) (NN pull))
                                      (PP (IN at)
                                        (NP (PRP$ his) (NN wrist))))))))))))))))))))
    (. .)))

aux(measured-3, Having-1)
advmod(measured-3, then-2)
vmod(able-28, measured-3)
advmod(measured-3, off-4)
det(thread-6, the-5)
pobj(off-4, thread-6)
det(mark-9, a-8)
prep_with(off-4, mark-9)
prep_of(mark-9, ink-11)
det(hour-15, the-13)
amod(hour-15, first-14)
prep_for(ink-11, hour-15)
appos(hour-15, two-17)
det(second-20, the-19)
prep_for(two-17, second-20)
advmod(on-24, so-23)
advmod(measured-3, on-24)
conj_and(off-4, on-24)
nsubj(able-28, he-26)
nsubj(set-30, he-26)
cop(able-28, was-27)
root(ROOT-0, able-28)
aux(set-30, to-29)
xcomp(able-28, set-30)
poss(alarum-32, his-31)
dobj(set-30, alarum-32)
prepc_according_to(set-30, to-34)
det(time-36, the-35)
pobj(set-30, time-36)
prep_at(wished-40, time-36)
nsubj(wished-40, he-39)
nsubjpass(woke-43, he-39)
rcmod(time-36, wished-40)
aux(woke-43, to-41)
auxpass(woke-43, be-42)
xcomp(wished-40, woke-43)
det(pull-46, the-45)
agent(woke-43, pull-46)
poss(wrist-49, his-48)
prep_at(pull-46, wrist-49)

(ROOT
  (SQ (CC But)
    (SBAR (IN if)
      (S
        (NP (DT any) (NN one))
        (VP (VBD had)
          (VP (VBN happened)
            (S
              (VP (TO to)
                (VP (VB go)
                  (PP (IN into)
                    (NP (DT the) (NN garden)))
                  (SBAR (IN after)
                    (S
                      (NP (DT the) (NN household))
                      (VP
                        (VP (VBD was)
                          (ADJP (RB asleep)))
                        (, ,)
                        (CC and)
                        (VP (VBD had)
                          (VP (VBN come)
                            (PP (IN upon)
                              (NP (DT the) (NN toy) (NN water-wheel)))))
                        (, ,)
                        (S
                          (VP (VBG working)
                            (PRT (RP away))
                            (PP (IN in)
                              (NP (NN starlight)
                                (CC or)
                                (NN moonlight)))))))))))
            (, ,)
            (FRAG
              (WHADVP (WRB how))
              (ADJP (JJ little))))
          (, ,)
          (SBAR (RB even) (IN if)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN caught)
                  (NP
                    (NP (NN sight))
                    (PP (IN of)
                      (NP (DT the)
                        (ADJP (RB nearly) (JJ invisible))
                        (NN thread))))))))
          (, ,)
          (CC and)
          (VP (VBD had)
            (VP (VBN discovered)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN wheel))
                  (VP (VBD was)
                    (VP (VBG winding)
                      (NP (PRP it))
                      (PRT (RP up)))))))))))
    (, ,) (MD would)
    (NP (PRP he))
    (VP (VB have)
      (VP (VBN thought)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT the) (JJ tiny) (NN machine))
            (VP (VBD was)
              (ADJP (IN about)))))))
    (. !)))

cc(thought-62, But-1)
mark(happened-6, if-2)
det(one-4, any-3)
nsubj(happened-6, one-4)
nsubj(go-8, one-4)
nsubj(discovered-50, one-4)
aux(happened-6, had-5)
advcl(thought-62, happened-6)
aux(go-8, to-7)
xcomp(happened-6, go-8)
det(garden-11, the-10)
prep_into(go-8, garden-11)
mark(asleep-16, after-12)
det(household-14, the-13)
nsubj(asleep-16, household-14)
nsubj(come-20, household-14)
nsubj(working-26, household-14)
cop(asleep-16, was-15)
advcl(go-8, asleep-16)
aux(come-20, had-19)
advcl(go-8, come-20)
conj_and(asleep-16, come-20)
det(water-wheel-24, the-22)
nn(water-wheel-24, toy-23)
prep_upon(come-20, water-wheel-24)
advcl(go-8, working-26)
conj_and(asleep-16, working-26)
vmod(asleep-16, working-26)
prt(working-26, away-27)
prep_in(working-26, starlight-29)
prep_in(working-26, moonlight-31)
conj_or(starlight-29, moonlight-31)
dep(little-34, how-33)
dep(happened-6, little-34)
advmod(caught-40, even-36)
mark(caught-40, if-37)
nsubj(caught-40, he-38)
aux(caught-40, had-39)
advcl(happened-6, caught-40)
conj_and(happened-6, caught-40)
advcl(thought-62, caught-40)
dobj(caught-40, sight-41)
det(thread-46, the-43)
advmod(invisible-45, nearly-44)
amod(thread-46, invisible-45)
prep_of(sight-41, thread-46)
aux(discovered-50, had-49)
conj_and(happened-6, discovered-50)
advcl(thought-62, discovered-50)
mark(winding-55, that-51)
det(wheel-53, the-52)
nsubj(winding-55, wheel-53)
aux(winding-55, was-54)
ccomp(discovered-50, winding-55)
dobj(winding-55, it-56)
prt(winding-55, up-57)
aux(thought-62, would-59)
nsubj(thought-62, he-60)
aux(thought-62, have-61)
root(ROOT-0, thought-62)
dobj(about-68, what-63)
det(machine-66, the-64)
amod(machine-66, tiny-65)
nsubj(about-68, machine-66)
cop(about-68, was-67)
ccomp(thought-62, about-68)

(ROOT
  (SBARQ
    (WHNP (WRB How) (JJ little))
    (SQ (MD would)
      (NP (PRP he))
      (VP (VB have)
        (VP (VBN thought)
          (SBAR (IN that)
            (S
              (NP (PRP$ its) (NN business))
              (VP (VBD was)
                (PP (IN with)
                  (NP (DT the) (NN infinite))))))))
      (. !))))

advmod(little-2, How-1)
dep(thought-6, little-2)
aux(thought-6, would-3)
nsubj(thought-6, he-4)
aux(thought-6, have-5)
root(ROOT-0, thought-6)
mark(was-10, that-7)
poss(business-9, its-8)
nsubj(was-10, business-9)
ccomp(thought-6, was-10)
det(infinite-13, the-12)
prep_with(was-10, infinite-13)

(ROOT
  (S
    (SBAR
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (PP (IN in)
              (NP
                (NP (NN connection))
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN window))
                    (PP (IN of)
                      (NP (DT an) (JJ eternal) (NN world))))))))))
      (: --)
      (PRN
        (FRAG
          (ADVP (RB namely)))))
    (, ,)
    (NP (NNP Willie))
    (VP (VBZ 's)
      (ADJP (NN soul))
      (: --)
      (PP (IN from)
        (SBAR
          (WHNP (WDT which))
          (S
            (PP (IN at)
              (NP (DT a) (VBN given) (NN moment)))
            (NP (PRP it))
            (VP (MD would)
              (VP
                (VP (VB lift)
                  (NP
                    (NP
                      (NP (DT the) (NNS curtains))
                      (, ,)
                      (ADVP (RB namely)))
                    (, ,)
                    (NP (DT the) (NNS eyelids))
                    (, ,)))
                (CC and)
                (VP (VB let)
                  (NP
                    (NP (DT the) (NN night))
                    (PP (IN of)
                      (NP (DT the) (JJ outer) (NN world))))
                  (PP (IN in) (IN upon)
                    (NP
                      (NP (DT the) (NN thought)
                        (CC and)
                        (NN feeling))
                      (PP (IN of)
                        (NP (DT the) (NN boy))))))))))))
    (. !)))

mark(was-3, that-1)
nsubj(was-3, it-2)
advcl(soul-18, was-3)
prep_in(was-3, connection-5)
det(window-8, the-7)
prep_with(connection-5, window-8)
det(world-12, an-10)
amod(world-12, eternal-11)
prep_of(window-8, world-12)
dep(was-3, namely-14)
nsubj(soul-18, Willie-16)
cop(soul-18, 's-17)
root(ROOT-0, soul-18)
dobj(lift-28, which-21)
det(moment-25, a-23)
amod(moment-25, given-24)
prep_at(lift-28, moment-25)
nsubj(lift-28, it-26)
nsubj(let-38, it-26)
aux(lift-28, would-27)
prepc_from(soul-18, lift-28)
det(curtains-30, the-29)
dobj(lift-28, curtains-30)
advmod(curtains-30, namely-32)
det(eyelids-35, the-34)
appos(curtains-30, eyelids-35)
prepc_from(soul-18, let-38)
conj_and(lift-28, let-38)
det(night-40, the-39)
dobj(let-38, night-40)
det(world-44, the-42)
amod(world-44, outer-43)
prep_of(night-40, world-44)
dep(let-38, in-45)
det(thought-48, the-47)
prep_upon(let-38, thought-48)
prep_upon(let-38, feeling-50)
conj_and(thought-48, feeling-50)
det(boy-53, the-52)
prep_of(thought-48, boy-53)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB use)
          (NP (DT a) (NN likeness)))))
    (, ,)
    (NP (DT the) (NN wheel))
    (VP (VBD was)
      (ADVP (RB thus))
      (VP
        (ADVP (RB ever))
        (VBG working)
        (S
          (VP (TO to)
            (VP
              (VP (VB draw)
                (PRT (RP up))
                (NP
                  (NP (DT the) (NN slide))
                  (PP (IN of)
                    (NP (DT a) (JJ _) (NN camera) (NN obscura) (NN _)))))
              (, ,)
              (CC and)
              (VP (VB let)
                (PP (IN in)
                  (SBAR
                    (WHNP (WDT whatever))
                    (S
                      (NP (NNS pictures))
                      (VP (MD might)
                        (VP (VB be)
                          (ADVP (RB abroad))
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NNS dreams))
                              (PP (IN of)
                                (NP (DT the) (NN day)))))
                          (, ,)
                          (SBAR (IN that)
                            (S
                              (NP (DT the) (NN watcher) (IN within))
                              (VP (MD might)
                                (VP (VB behold)
                                  (NP (PRP them)))))))))))))))))
    (. .)))

aux(use-2, To-1)
advcl(working-11, use-2)
det(likeness-4, a-3)
dobj(use-2, likeness-4)
det(wheel-7, the-6)
nsubj(working-11, wheel-7)
nsubj(draw-13, wheel-7)
nsubj(let-25, wheel-7)
aux(working-11, was-8)
advmod(working-11, thus-9)
advmod(working-11, ever-10)
root(ROOT-0, working-11)
aux(draw-13, to-12)
xcomp(working-11, draw-13)
prt(draw-13, up-14)
det(slide-16, the-15)
dobj(draw-13, slide-16)
det(_-22, a-18)
amod(_-22, _-19)
nn(_-22, camera-20)
nn(_-22, obscura-21)
prep_of(slide-16, _-22)
xcomp(working-11, let-25)
conj_and(draw-13, let-25)
dobj(be-30, whatever-27)
nsubj(be-30, pictures-28)
aux(be-30, might-29)
prepc_in(let-25, be-30)
advmod(be-30, abroad-31)
det(dreams-34, the-33)
prep_in(be-30, dreams-34)
det(day-37, the-36)
prep_of(dreams-34, day-37)
mark(behold-44, that-39)
det(watcher-41, the-40)
nsubj(behold-44, watcher-41)
amod(watcher-41, within-42)
aux(behold-44, might-43)
ccomp(be-30, behold-44)
dobj(behold-44, them-45)

(ROOT
  (S
    (ADVP (RB Indeed))
    (, ,)
    (S
      (NP
        (NP (CD one) (NN night))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD came)
              (NP (NN home))
              (PP (IN from)
                (S
                  (VP (VBG visiting)
                    (NP (DT a) (NN patient)))))
              (, ,)
              (SBAR (RB soon) (IN after)
                (S
                  (NP (NNP Willie))
                  (VP (VBD had)
                    (PP (IN at)
                      (NP (NN length))))))))))
      (VP (VBD taught)
        (S
          (NP (PRP$ his) (NN watchman))
          (NP (PRP$ his) (NN duty)))))
    (PRN (, ,)
      (S
        (NP (NNP Mr) (NNP Macmichael))
        (VP
          (VP (VBD did)
            (VP (VBN come)
              (PP (IN upon)
                (NP (DT the) (NN mill)))))
          (, ,)
          (CC and)
          (VP (VBD was)
            (VP
              (ADVP (RB just))
              (VBG going)
              (S
                (VP (TO to)
                  (VP (VB turn)
                    (NP (DT the) (NN water))
                    (PRT (RP off))
                    (PP (IN at)
                      (NP (DT the) (NN well)))
                    (, ,)
                    (SBAR
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (PRP he))
                          (VP (VBD thought)
                            (SBAR
                              (S
                                (NP (NNP Willie))
                                (VP (VBD had)
                                  (VP (VBN forgotten)
                                    (S
                                      (VP (TO to)
                                        (VP (VB do)))))))))))
                      (, ,)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP he))
                          (VP (VBD caught)
                            (NP
                              (NP (NN sight))
                              (PP (IN of)
                                (NP (DT the) (JJ winding) (NN thread)))))))
                      (: --)
                      (SBAR (IN for)
                        (S
                          (NP (DT the) (NN moon))
                          (VP (VBD was)
                            (ADJP (JJ full)))))))))))))
      (, ,))
    (CC and)
    (S
      (NP (DT the) (NNP Doctor))
      (VP (VBD was)
        (ADJP (JJ sharp-sighted))))
    (. .)))

advmod(taught-20, Indeed-1)
num(night-4, one-3)
nsubj(taught-20, night-4)
mark(came-7, as-5)
nsubj(came-7, he-6)
dep(night-4, came-7)
dobj(came-7, home-8)
prepc_from(came-7, visiting-10)
det(patient-12, a-11)
dobj(visiting-10, patient-12)
advmod(had-17, soon-14)
mark(had-17, after-15)
nsubj(had-17, Willie-16)
advcl(came-7, had-17)
prep_at(had-17, length-19)
root(ROOT-0, taught-20)
poss(watchman-22, his-21)
nsubj(duty-24, watchman-22)
poss(duty-24, his-23)
xcomp(taught-20, duty-24)
nn(Macmichael-27, Mr-26)
nsubj(come-29, Macmichael-27)
nsubj(going-37, Macmichael-27)
nsubj(turn-39, Macmichael-27)
aux(come-29, did-28)
dep(taught-20, come-29)
det(mill-32, the-31)
prep_upon(come-29, mill-32)
aux(going-37, was-35)
advmod(going-37, just-36)
dep(taught-20, going-37)
conj_and(come-29, going-37)
aux(turn-39, to-38)
xcomp(going-37, turn-39)
det(water-41, the-40)
dobj(turn-39, water-41)
prt(turn-39, off-42)
det(well-45, the-44)
prep_at(turn-39, well-45)
dobj(thought-49, which-47)
nsubj(thought-49, he-48)
advcl(turn-39, thought-49)
nsubj(forgotten-52, Willie-50)
nsubj(do-54, Willie-50)
aux(forgotten-52, had-51)
ccomp(thought-49, forgotten-52)
aux(do-54, to-53)
xcomp(forgotten-52, do-54)
advmod(caught-58, when-56)
nsubj(caught-58, he-57)
dep(thought-49, caught-58)
dobj(caught-58, sight-59)
det(thread-63, the-61)
amod(thread-63, winding-62)
prep_of(sight-59, thread-63)
mark(full-69, for-65)
det(moon-67, the-66)
nsubj(full-69, moon-67)
cop(full-69, was-68)
dep(thought-49, full-69)
det(Doctor-73, the-72)
nsubj(sharp-sighted-75, Doctor-73)
cop(sharp-sighted-75, was-74)
conj_and(taught-20, sharp-sighted-75)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WDT What)
      (NP (CD _)))
    (SQ (MD can)
      (NP (JJ _)
        (NP (DT this)))
      (VP (VB be)
        (ADVP (RB now))))
    (. ?) ('' '')))

det(_-3, What-2)
dobj(be-7, _-3)
aux(be-7, can-4)
amod(this-6, _-5)
nsubj(be-7, this-6)
root(ROOT-0, be-7)
advmod(be-7, now-8)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said)
      (PP (TO to)
        (NP (PRP himself))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
prep_to(said-2, himself-4)

(ROOT
  (NP
    (NP (`` ``) (DT Some) (JJ new) (NN freak))
    (PP (IN of)
      (NP (NNP Willie) (POS 's)))
    (, ,)
    (PP (IN of)
      (NP (NN course)))
    (. .)))

det(freak-4, Some-2)
amod(freak-4, new-3)
root(ROOT-0, freak-4)
prep_of(freak-4, Willie-6)
possessive(Willie-6, 's-7)
prep_of(freak-4, course-10)

(ROOT
  (S
    (ADVP (RB Yes))
    (: ;)
    (NP (DT the) (NN thread))
    (VP (VBZ goes)
      (ADVP (RB right) (RB up))
      (PP (TO to)
        (NP (PRP$ his) (NN window))))
    (. !)))

advmod(goes-5, Yes-1)
det(thread-4, the-3)
nsubj(goes-5, thread-4)
root(ROOT-0, goes-5)
advmod(up-7, right-6)
advmod(goes-5, up-7)
poss(window-10, his-9)
prep_to(goes-5, window-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD dare)
      (VP (VB say)
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBD were)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB stop))
                    (CC and)
                    (VP (VB watch)
                      (SBAR
                        (S
                          (NP (PRP I))
                          (VP (MD should)
                            (VP (VB see)
                              (S
                                (NP (NN something))
                                (VP (VB happen)
                                  (PP (IN in)
                                    (NP (NN consequence))))))))))))))))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, dare-2)
root(ROOT-0, say-3)
mark(were-6, if-4)
nsubj(were-6, I-5)
nsubj(stop-8, I-5)
nsubj(watch-10, I-5)
advcl(say-3, were-6)
aux(stop-8, to-7)
xcomp(were-6, stop-8)
xcomp(were-6, watch-10)
conj_and(stop-8, watch-10)
nsubj(see-13, I-11)
aux(see-13, should-12)
ccomp(watch-10, see-13)
nsubj(happen-15, something-14)
ccomp(see-13, happen-15)
prep_in(happen-15, consequence-17)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP
      (VP (VBP am)
        (ADJP (RB too) (JJ tired)))
      (, ,)
      (CC and)
      (VP (MD must)
        (VP (VB go)
          (PP (TO to)
            (NP (NN bed))))))
    (. .) ('' '')))

nsubj(tired-5, I-2)
nsubj(go-9, I-2)
cop(tired-5, am-3)
advmod(tired-5, too-4)
root(ROOT-0, tired-5)
aux(go-9, must-8)
conj_and(tired-5, go-9)
prep_to(go-9, bed-11)

(ROOT
  (S
    (SBAR (RB Just) (IN as)
      (S
        (NP (PRP he))
        (VP (VBD thought)
          (ADVP (RB thus))
          (PP (IN with)
            (NP (PRP himself))))))
    (, ,)
    (NP (DT the) (NN wheel))
    (VP (VBD stopped))
    (. .)))

advmod(thought-4, Just-1)
mark(thought-4, as-2)
nsubj(thought-4, he-3)
advcl(stopped-11, thought-4)
advmod(thought-4, thus-5)
prep_with(thought-4, himself-7)
det(wheel-10, the-9)
nsubj(stopped-11, wheel-10)
root(ROOT-0, stopped-11)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ next) (NN moment))
        (NP (DT the) (JJ blind))
        (PP (IN of)
          (NP
            (NP (NNP Willie) (POS 's))
            (NN window))))
      (VP (VBD was)
        (VP (VBN drawn)
          (PRT (RP up)))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD stood)
        (NP
          (NP (NNP Willie))
          (, ,)
          (NP (PRP$ his) (NN face))
          (CC and)
          (NP (PRP$ his) (JJ white) (NN gown) (NN glimmering)))
        (PP (IN in)
          (NP (DT the) (NN moonlight)))))
    (. .)))

det(moment-3, The-1)
amod(moment-3, next-2)
nsubjpass(drawn-11, moment-3)
det(blind-5, the-4)
dep(moment-3, blind-5)
poss(window-9, Willie-7)
prep_of(moment-3, window-9)
auxpass(drawn-11, was-10)
root(ROOT-0, drawn-11)
prt(drawn-11, up-12)
expl(stood-16, there-15)
conj_and(drawn-11, stood-16)
dobj(stood-16, Willie-17)
nsubj(stood-16, Willie-17)
poss(face-20, his-19)
dobj(stood-16, face-20)
nsubj(stood-16, face-20)
conj_and(Willie-17, face-20)
poss(glimmering-25, his-22)
amod(glimmering-25, white-23)
nn(glimmering-25, gown-24)
dobj(stood-16, glimmering-25)
nsubj(stood-16, glimmering-25)
conj_and(Willie-17, glimmering-25)
det(moonlight-28, the-27)
prep_in(stood-16, moonlight-28)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD caught)
        (NP
          (NP (NN sight))
          (PP (IN of)
            (NP (PRP$ his) (NN father)))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB up))
        (VBD went)
        (NP (DT the) (NN sash))))
    (. .)))

nsubj(caught-2, He-1)
nsubj(went-10, He-1)
root(ROOT-0, caught-2)
dobj(caught-2, sight-3)
poss(father-6, his-5)
prep_of(sight-3, father-6)
advmod(went-10, up-9)
conj_and(caught-2, went-10)
det(sash-12, the-11)
dobj(went-10, sash-12)

(ROOT
  (S (`` ``)
    (VP (VB O)
      (NP (NN papa)))
    (. !) ('' '')))

root(ROOT-0, O-2)
dobj(O-2, papa-3)

(ROOT
  (S
    (S
      (NP (PRP he))
      (VP (VBD cried)))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB think)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (NP
                  (NP (PRP you))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBD was)
                        (VP (VBG going)
                          (S
                            (VP (TO to)
                              (VP (VB see)))))))))))))))
    (. !) ('' '')))

nsubj(cried-2, he-1)
root(ROOT-0, cried-2)
nsubj(think-8, I-5)
aux(think-8, did-6)
neg(think-8, n't-7)
parataxis(cried-2, think-8)
nsubj(you-11, it-9)
cop(you-11, was-10)
ccomp(think-8, you-11)
nsubj(going-14, I-12)
nsubj(see-16, I-12)
aux(going-14, was-13)
rcmod(you-11, going-14)
aux(see-16, to-15)
xcomp(going-14, see-16)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ (VBD was)
      (NP (PRP it))
      (NP
        (NP (RB then))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD thought)
              (S
                (VP (TO to)
                  (VP (VB see)))))))))
    (. ?) ('' '')))

root(ROOT-0, Who-2)
cop(Who-2, was-3)
nsubj(Who-2, it-4)
nsubj(Who-2, then-5)
nsubj(thought-7, you-6)
nsubj(see-9, you-6)
rcmod(then-5, thought-7)
aux(see-9, to-8)
xcomp(thought-7, see-9)

(ROOT
  (S
    (VP (VBD asked)
      (NP (PRP$ his) (NN father)))
    (. .)))

root(ROOT-0, asked-1)
poss(father-3, his-2)
dobj(asked-1, father-3)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH Oh))
    (, ,)
    (NP (NN nobody))
    (. !)))

discourse(nobody-4, Oh-2)
root(ROOT-0, nobody-4)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (RB only) (DT the) (NN night))
      (VP (VBZ herself)))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN moon))
      (VP
        (ADVP (RB perhaps))))
    (. .) ('' '')))

advmod(night-4, only-2)
det(night-4, the-3)
nsubj(herself-5, night-4)
root(ROOT-0, herself-5)
det(moon-9, the-8)
nsubj(perhaps-10, moon-9)
conj_and(herself-5, perhaps-10)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WDT What)
      (NP
        (NP (JJ new) (NN freak))
        (PP (IN of)
          (NP (NNP yours)))))
    (SQ (VBZ is)
      (NP
        (NP (DT this))
        (, ,)
        (NP (PRP$ my) (NN boy))))
    (. ?) ('' '')))

det(freak-4, What-2)
amod(freak-4, new-3)
dep(is-7, freak-4)
prep_of(freak-4, yours-6)
root(ROOT-0, is-7)
nsubj(is-7, this-8)
poss(boy-11, my-10)
appos(this-8, boy-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (PRP$ his) (NN father))
      (, ,)
      (S
        (VP (VBG smiling))))
    (. .)))

root(ROOT-0, said-1)
poss(father-3, his-2)
dobj(said-1, father-3)
vmod(said-1, smiling-5)

(ROOT
  (S (`` ``)
    (S
      (S
        (VP (VB Wait)
          (NP (DT a) (NN minute))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (MD 'll)
          (VP (VB tell)
            (NP (PRP you))
            (NP
              (NP (DT all))
              (PP (IN about)
                (NP (PRP it))))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (. .)))

ccomp(answered-16, Wait-2)
det(minute-4, a-3)
dobj(Wait-2, minute-4)
nsubj(tell-9, I-7)
aux(tell-9, 'll-8)
conj_and(Wait-2, tell-9)
ccomp(answered-16, tell-9)
iobj(tell-9, you-10)
dobj(tell-9, all-11)
prep_about(all-11, it-13)
root(ROOT-0, answered-16)
dep(answered-16, Willie-17)

(ROOT
  (S
    (PP (IN Out)
      (S
        (NP (PRP he))
        (VP (VBD came)
          (PP (IN in)
            (NP (PRP$ his) (NN night-shirt))))))
    (, ,)
    (NP (PRP$ his) (JJ bare) (NNS feet))
    (VP (VBD dancing)
      (PP (IN with)
        (NP (NN pleasure)))
      (PP (IN at)
        (S
          (VP (VBG having)
            (NP (PRP$ his) (NN father))
            (PP (IN for)
              (NP (PRP$ his) (NN midnight) (NN companion)))))))
    (. .)))

nsubj(came-3, he-2)
prepc_out(dancing-11, came-3)
poss(night-shirt-6, his-5)
prep_in(came-3, night-shirt-6)
poss(feet-10, his-8)
amod(feet-10, bare-9)
nsubj(dancing-11, feet-10)
root(ROOT-0, dancing-11)
prep_with(dancing-11, pleasure-13)
prepc_at(dancing-11, having-15)
poss(father-17, his-16)
dobj(having-15, father-17)
poss(companion-21, his-19)
nn(companion-21, midnight-20)
prep_for(having-15, companion-21)

(ROOT
  (S
    (PP (IN On)
      (NP
        (NP (DT the) (NN grass))
        (, ,)
        (PP
          (PP (IN beside)
            (NP (DT the) (NNS ruins)))
          (, ,)
          (PP (IN in)
            (NP (DT the) (NN moonlight)))
          (, ,)
          (PP (IN by)
            (NP (DT the) (VBG gurgling) (NN water))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD told)
      (NP (PRP him))
      (PP (DT all) (IN about)
        (NP (PRP it))))
    (. .)))

det(grass-3, the-2)
prep_on(told-19, grass-3)
det(ruins-7, the-6)
prep_beside(grass-3, ruins-7)
det(moonlight-11, the-10)
prep_in(grass-3, moonlight-11)
det(water-16, the-14)
amod(water-16, gurgling-15)
prep_by(grass-3, water-16)
nsubj(told-19, he-18)
root(ROOT-0, told-19)
dobj(told-19, him-20)
dep(told-19, all-21)
prep_about(told-19, it-23)

(ROOT
  (S (`` ``)
    (S
      (FRAG
        (INTJ (UH Yes))
        (, ,)
        (NP (PRP$ my) (NN boy))
        (: ;))
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (JJ right))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN father))
    (. .)))

discourse(boy-5, Yes-2)
poss(boy-5, my-4)
dep(right-9, boy-5)
nsubj(right-9, you-7)
cop(right-9, are-8)
ccomp(said-12, right-9)
root(ROOT-0, said-12)
poss(father-14, his-13)
dep(said-12, father-14)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP God))
      (ADVP (RB never))
      (VP (VBZ sleeps)))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD would)
        (VP (VB be)
          (NP (DT a) (NN pity))
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (ADVP (RB never))
              (VP (VBD saw)
                (NP (PRP Him))
                (PP (IN at)
                  (NP (PRP$ his) (NN night-work)))))))))
    (. .) ('' '')))

nsubj(sleeps-4, God-2)
neg(sleeps-4, never-3)
root(ROOT-0, sleeps-4)
nsubj(pity-11, it-7)
aux(pity-11, would-8)
cop(pity-11, be-9)
det(pity-11, a-10)
conj_and(sleeps-4, pity-11)
mark(saw-15, if-12)
nsubj(saw-15, we-13)
neg(saw-15, never-14)
advcl(pity-11, saw-15)
dobj(saw-15, Him-16)
poss(night-work-19, his-18)
prep_at(saw-15, night-work-19)

(ROOT
  (NP
    (NP (NNP -LSB-) (NNP Illustration))
    (PRN (: :)
      (FRAG (`` ``)
        (NP (NNP ON) (NNP THE) (NNPS GRASS))
        (, ,)
        (NP
          (NP (NNP BESIDE))
          (NP (DT THE) (NNS RUINS)))
        (, ,)
        (PP (IN IN)
          (NP (DT THE) (NN MOONLIGHT)))
        (, ,)
        (NP (NNP WILLIE) (NNP TOLD) (NNP HIS) (NNP FATHER) (NNP ALL) (NNP ABOUT) (NNP IT))
        (. .) ('' '')))
    (NP (NNP -RSB-))))

nn(Illustration-2, -LSB--1)
root(ROOT-0, Illustration-2)
nn(GRASS-7, ON-5)
nn(GRASS-7, THE-6)
dep(Illustration-2, GRASS-7)
dep(GRASS-7, BESIDE-9)
det(RUINS-11, THE-10)
dep(BESIDE-9, RUINS-11)
det(MOONLIGHT-15, THE-14)
prep_in(GRASS-7, MOONLIGHT-15)
nn(IT-23, WILLIE-17)
nn(IT-23, TOLD-18)
nn(IT-23, HIS-19)
nn(IT-23, FATHER-20)
nn(IT-23, ALL-21)
nn(IT-23, ABOUT-22)
dep(GRASS-7, IT-23)
dep(Illustration-2, -RSB--26)

(ROOT
  (NP (NNP CHAPTER) (NNP XI) (. .)))

nn(XI-2, CHAPTER-1)
root(ROOT-0, XI-2)

(ROOT
  (NP
    (NP (NNP SOME))
    (PP (IN OF)
      (NP (DT THE) (NNP SIGHTS) (NNP WILLIE) (NNP SAW)))
    (. .)))

root(ROOT-0, SOME-1)
det(SAW-6, THE-3)
nn(SAW-6, SIGHTS-4)
nn(SAW-6, WILLIE-5)
prep_of(SOME-1, SAW-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD fancy)
      (SBAR
        (S
          (NP
            (NP (DT some))
            (PP (IN of)
              (NP (PRP$ my) (NNS readers))))
          (VP (MD would)
            (VP (VB like)
              (S
                (VP (TO to)
                  (VP (VB hear)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBD were)
                          (NP
                            (NP (DT some))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NNS scenes))
                                (SBAR
                                  (S
                                    (NP (NNP Willie))
                                    (VP (VBD saw)
                                      (PP (IN on)
                                        (NP (JJ such) (NNS occasions))))))))))))))))))))
    (. .)))

nsubj(fancy-2, I-1)
root(ROOT-0, fancy-2)
nsubj(like-8, some-3)
nsubj(hear-10, some-3)
poss(readers-6, my-5)
prep_of(some-3, readers-6)
aux(like-8, would-7)
ccomp(fancy-2, like-8)
aux(hear-10, to-9)
xcomp(like-8, hear-10)
nsubj(some-13, what-11)
cop(some-13, were-12)
ccomp(hear-10, some-13)
det(scenes-16, the-15)
prep_of(some-13, scenes-16)
nsubj(saw-18, Willie-17)
rcmod(scenes-16, saw-18)
amod(occasions-21, such-20)
prep_on(saw-18, occasions-21)

(ROOT
  (S
    (NP (DT The) (JJ little) (NN mill))
    (VP (VBD went)
      (PP (IN on)
        (NP
          (NP
            (NP (NN night))
            (PP (IN after)
              (NP (NN night))))
          (: --)
          (NP
            (NP (RB almost) (NN everynight))
            (PP (IN in)
              (NP (DT the) (NN summer))))
          (, ,)
          (CC and)
          (NP
            (NP (DT those) (NNS nights))
            (PP (IN in)
              (NP (DT the) (NN winter))))))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN frost))
          (VP (VBD was) (RB n't)
            (ADJP (RB so) (JJ hard))
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (MD would)
                  (VP (VB have)
                    (VP (VBN frozen)
                      (PRT (RP up))
                      (NP (DT the) (NN machinery)))))))))))
    (. .)))

det(mill-3, The-1)
amod(mill-3, little-2)
nsubj(went-4, mill-3)
root(ROOT-0, went-4)
prep_on(went-4, night-6)
prep_after(night-6, night-8)
advmod(everynight-11, almost-10)
prep_on(went-4, everynight-11)
conj_and(night-6, everynight-11)
det(summer-14, the-13)
prep_in(everynight-11, summer-14)
det(nights-18, those-17)
prep_on(went-4, nights-18)
conj_and(night-6, nights-18)
det(winter-21, the-20)
prep_in(nights-18, winter-21)
advmod(hard-28, when-22)
det(frost-24, the-23)
nsubj(hard-28, frost-24)
cop(hard-28, was-25)
neg(hard-28, n't-26)
advmod(hard-28, so-27)
advcl(went-4, hard-28)
mark(frozen-33, that-29)
nsubj(frozen-33, it-30)
aux(frozen-33, would-31)
aux(frozen-33, have-32)
ccomp(hard-28, frozen-33)
prt(frozen-33, up-34)
det(machinery-36, the-35)
dobj(frozen-33, machinery-36)

(ROOT
  (S (CC But)
    (S
      (VP (TO to)
        (VP (VB attempt)
          (S
            (VP (TO to)
              (VP (VB describe)
                (NP
                  (NP (DT the) (NN variety))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NNS pictures))
                      (SBAR
                        (S
                          (NP (NNP Willie))
                          (VP (VBD saw)))))))))))))
    (VP (MD would)
      (VP (VB be)
        (NP (DT an) (JJ endless) (NN labour))))
    (. .)))

cc(labour-17, But-1)
aux(attempt-3, to-2)
csubj(labour-17, attempt-3)
aux(describe-5, to-4)
xcomp(attempt-3, describe-5)
det(variety-7, the-6)
dobj(describe-5, variety-7)
det(pictures-10, the-9)
prep_of(variety-7, pictures-10)
nsubj(saw-12, Willie-11)
rcmod(pictures-10, saw-12)
aux(labour-17, would-13)
cop(labour-17, be-14)
det(labour-17, an-15)
amod(labour-17, endless-16)
root(ROOT-0, labour-17)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBD looked)
          (PRT (RP out)))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ simple) (, ,) (JJ quiet) (, ,) (JJ thoughtful) (NN night))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD met)
              (SBAR
                (S
                  (NP (PRP$ his))
                  (VP (VBP gaze) (, ,)
                    (PP (IN without)
                      (NP (DT any) (NN moon)))
                    (, ,)
                    (ADJP
                      (ADJP
                        (ADJP (CC but)
                          (RB as) (JJ full)
                          (PP (IN of)
                            (NP (NNS stars))))
                        (SBAR (IN as)
                          (S
                            (NP (PRP it))
                            (VP (MD could)
                              (VP (VB hold))))))
                      (, ,)
                      (ADJP (RB all) (VBG flashing))
                      (CC and)
                      (ADJP (JJ trembling)
                        (PP (IN through)
                          (NP
                            (NP (DT the) (NN dew))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBD was)
                                  (ADVP (RB slowly))
                                  (VP (VBG sinking)
                                    (PRT (RP down))
                                    (NP (DT the) (NN air)
                                      (S
                                        (VP (TO to)
                                          (VP (VB settle)
                                            (PP (IN upon)
                                              (NP
                                                (NP (DT the) (NN earth))
                                                (CC and)
                                                (NP (PRP$ its) (CD thousand) (NN living) (NNS things))))
                                            (ADVP (RB below))))))))))))))))))))))
    (. .)))

advmod(night-16, Sometimes-1)
advmod(looked-5, when-3)
nsubj(looked-5, he-4)
advcl(night-16, looked-5)
prt(looked-5, out-6)
nsubj(night-16, it-8)
cop(night-16, was-9)
det(night-16, a-10)
amod(night-16, simple-11)
amod(night-16, quiet-13)
amod(night-16, thoughtful-15)
root(ROOT-0, night-16)
nsubj(met-18, night-16)
rcmod(night-16, met-18)
nsubj(gaze-20, his-19)
ccomp(met-18, gaze-20)
det(moon-24, any-23)
prep_without(gaze-20, moon-24)
advmod(full-28, as-27)
acomp(gaze-20, full-28)
prep_of(full-28, stars-30)
mark(hold-34, as-31)
nsubj(hold-34, it-32)
aux(hold-34, could-33)
dep(full-28, hold-34)
advmod(flashing-37, all-36)
acomp(gaze-20, flashing-37)
conj_but(full-28, flashing-37)
acomp(gaze-20, trembling-39)
conj_and(full-28, trembling-39)
det(dew-42, the-41)
prep_through(trembling-39, dew-42)
nsubj(sinking-46, dew-42)
aux(sinking-46, was-44)
advmod(sinking-46, slowly-45)
rcmod(dew-42, sinking-46)
prt(sinking-46, down-47)
det(air-49, the-48)
dobj(sinking-46, air-49)
aux(settle-51, to-50)
vmod(air-49, settle-51)
det(earth-54, the-53)
prep_upon(settle-51, earth-54)
poss(things-59, its-56)
num(things-59, thousand-57)
nn(things-59, living-58)
prep_upon(settle-51, things-59)
conj_and(earth-54, things-59)
advmod(settle-51, below-60)

(ROOT
  (S
    (PP (IN On)
      (NP (PDT such) (DT a) (NN night)))
    (NP (NNP Willie))
    (ADVP (RB never))
    (VP (VBD went)
      (PP (TO to)
        (NP (NN bed)))
      (ADVP (RB again))
      (PP (IN without)
        (S
          (VP (VBG wishing)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP
                    (NP (JJ pure))
                    (PP (IN in)
                      (NP (NN heart))))
                  (, ,)
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (MD might)
                        (NP (CD one) (NN day))
                        (VP (VB see)
                          (NP
                            (NP (DT the) (NNP God))
                            (SBAR (WP$ whose)
                              (S
                                (NP (NN thought))
                                (VP (VBD had)
                                  (VP (VBN taken)
                                    (NP
                                      (NP (DT the) (NN shape))
                                      (PP (IN of)
                                        (NP (PDT such) (DT a) (JJ lovely) (NN night))))))))))))))))))))
    (. .)))

predet(night-4, such-2)
det(night-4, a-3)
prep_on(went-7, night-4)
nsubj(went-7, Willie-5)
neg(went-7, never-6)
root(ROOT-0, went-7)
prep_to(went-7, bed-9)
advmod(went-7, again-10)
prepc_without(went-7, wishing-12)
aux(pure-15, to-13)
cop(pure-15, be-14)
xcomp(wishing-12, pure-15)
prep_in(pure-15, heart-17)
mark(see-24, that-19)
nsubj(see-24, he-20)
aux(see-24, might-21)
num(day-23, one-22)
tmod(see-24, day-23)
ccomp(pure-15, see-24)
det(God-26, the-25)
dobj(see-24, God-26)
dep(taken-30, whose-27)
nsubj(taken-30, thought-28)
aux(taken-30, had-29)
dep(God-26, taken-30)
det(shape-32, the-31)
dobj(taken-30, shape-32)
predet(night-37, such-34)
det(night-37, a-35)
amod(night-37, lovely-36)
prep_of(shape-32, night-37)

(ROOT
  (S (IN For)
    (SBAR (IN although)
      (S
        (NP (PRP he))
        (VP (MD could) (RB not)
          (VP (VB have)
            (VP (VBN expressed)
              (NP (PRP himself))
              (ADVP (RB thus))
              (PP (IN at)
                (NP (DT that) (NN time))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD felt)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (MD must)
            (VP (VB be)
              (NP
                (NP (NNP God) (POS 's))
                (NN thinking)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD put)
                      (NP (PRP it))
                      (ADVP (DT all) (RB there)))))))))))
    (. .)))

dep(felt-15, For-1)
mark(expressed-7, although-2)
nsubj(expressed-7, he-3)
aux(expressed-7, could-4)
neg(expressed-7, not-5)
aux(expressed-7, have-6)
advcl(felt-15, expressed-7)
dobj(expressed-7, himself-8)
advmod(expressed-7, thus-9)
det(time-12, that-11)
prep_at(expressed-7, time-12)
nsubj(felt-15, he-14)
root(ROOT-0, felt-15)
mark(thinking-22, that-16)
nsubj(thinking-22, it-17)
aux(thinking-22, must-18)
cop(thinking-22, be-19)
poss(thinking-22, God-20)
nsubj(put-24, God-20)
ccomp(felt-15, thinking-22)
rcmod(God-20, put-24)
ccomp(thinking-22, put-24)
dobj(put-24, it-25)
dep(there-27, all-26)
advmod(put-24, there-27)

(ROOT
  (S
    (NP (JJ Other) (NNS times))
    (, ,)
    (NP (DT the) (NNS stars))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB half) (JJ blotted))
        (PP (IN out)
          (PRN (: --)
            (PP
              (ADVP (DT all))
              (IN over)
              (NP (DT the) (NNS heavens)))
            (: --)))
        (PP (RB not)
          (PP (IN with)
            (NP (NN mist)))
          (, ,)
          (CC but)
          (PP (IN with)
            (NP
              (NP (DT the) (NN light))
              (PP (IN of)
                (NP (DT the) (NN moon))))))))
    (. .)))

amod(times-2, Other-1)
nsubj(blotted-9, times-2)
det(stars-5, the-4)
nsubj(blotted-9, stars-5)
aux(blotted-9, would-6)
cop(blotted-9, be-7)
advmod(blotted-9, half-8)
root(ROOT-0, blotted-9)
prep(blotted-9, out-10)
advmod(over-13, all-12)
dep(out-10, over-13)
det(heavens-15, the-14)
pobj(over-13, heavens-15)
neg(blotted-9, not-17)
prep_with(blotted-9, mist-19)
det(light-24, the-23)
prep_with(blotted-9, light-24)
conj_but(mist-19, light-24)
det(moon-27, the-26)
prep_of(light-24, moon-27)

(ROOT
  (S
    (INTJ (UH Oh))
    (, ,)
    (ADVP (WRB how))
    (VP (VBD lovely)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD was)))))
    (. !)))

discourse(lovely-4, Oh-1)
advmod(lovely-4, how-3)
root(ROOT-0, lovely-4)
nsubj(was-6, she-5)
ccomp(lovely-4, was-6)

(ROOT
  (S
    (LST (: --))
    (ADVP (RB so))
    (VP (VB calm))
    (. !)))

advmod(calm-3, so-2)
root(ROOT-0, calm-3)

(ROOT
  (FRAG
    (ADVP (RB so)
      (ADVP (RB all) (JJ alone))
      (PP (IN in)
        (NP
          (NP (DT the) (NN midst))
          (PP (IN of)
            (NP (DT the) (JJ great) (JJ blue) (NN ocean))))))
    (. !)))

advmod(alone-3, so-1)
advmod(alone-3, all-2)
root(ROOT-0, alone-3)
det(midst-6, the-5)
prep_in(alone-3, midst-6)
det(ocean-11, the-8)
amod(ocean-11, great-9)
amod(ocean-11, blue-10)
prep_of(midst-6, ocean-11)

(ROOT
  (NP
    (NP (DT the) (NN sun))
    (PP (IN of)
      (NP (DT the) (NN night)))
    (. !)))

det(sun-2, the-1)
root(ROOT-0, sun-2)
det(night-5, the-4)
prep_of(sun-2, night-5)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB hold)
            (PRT (RP up))
            (NP
              (NP (DT the) (NN tent))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS heavens))
                  (PP (IN in)
                    (NP (DT a) (JJ great) (NN silver) (NN knot))))))))))
    (. .)))

nsubj(seemed-2, She-1)
nsubj(hold-4, She-1)
root(ROOT-0, seemed-2)
aux(hold-4, to-3)
xcomp(seemed-2, hold-4)
prt(hold-4, up-5)
det(tent-7, the-6)
dobj(hold-4, tent-7)
det(heavens-10, the-9)
prep_of(tent-7, heavens-10)
det(knot-15, a-12)
amod(knot-15, great-13)
nn(knot-15, silver-14)
prep_in(heavens-10, knot-15)

(ROOT
  (S (CC And)
    (, ,)
    (PP (IN like)
      (NP (DT the) (NNS stars)))
    (ADVP (RB above))
    (, ,)
    (NP (PDT all) (DT the) (NNS flowers))
    (ADVP (RB below))
    (VP (VBD had)
      (VP
        (VP (VBN lost)
          (NP (PRP$ their) (NN colour)))
        (CC and)
        (VP (VBN looked)
          (S
            (ADJP (JJ pale)
              (CC and)
              (JJ wan)))
          (, ,)
          (ADJP (JJ sweet)
            (CC and)
            (JJ sad)))))
    (. .)))

det(stars-5, the-4)
prep_like(lost-13, stars-5)
advmod(lost-13, above-6)
predet(flowers-10, all-8)
det(flowers-10, the-9)
nsubj(lost-13, flowers-10)
nsubj(looked-17, flowers-10)
advmod(lost-13, below-11)
aux(lost-13, had-12)
root(ROOT-0, lost-13)
poss(colour-15, their-14)
dobj(lost-13, colour-15)
conj_and(lost-13, looked-17)
acomp(looked-17, pale-18)
acomp(looked-17, wan-20)
conj_and(pale-18, wan-20)
acomp(looked-17, sweet-22)
acomp(looked-17, sad-24)
conj_and(sweet-22, sad-24)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (ADVP (RB just))
        (PP
          (PP (IN like)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (DT the) (NN schoolmaster))
                (VP (VBD had)
                  (VP (VBN been)
                    (VP (VBG telling)
                      (NP (PRP him))
                      (PP (IN about)
                        (NP
                          (NP (DT the) (NNP Elysium))
                          (PP (IN of)
                            (NP (DT the) (JJ Greek)
                              (CC and)
                              (JJ Latin) (NNS poets)))))))))))
          (, ,)
          (PP (TO to)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP they))
                (VP (VBD fancied)
                  (SBAR
                    (S
                      (NP (DT the) (JJ good) (NNS people))
                      (VP (VBD went)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP they))
                            (VP (VBD died) (: --)
                              (NP (RB not)
                                (ADJP
                                  (ADJP (RB half) (RB so) (JJ glad)
                                    (CC and)
                                    (JJ bright))
                                  (CC and)
                                  (ADJP (JJ busy)
                                    (PP (IN as)
                                      (NP (DT the) (NN daylight)))))
                                (NN world)
                                (SBAR
                                  (WHNP (WDT which))
                                  (S
                                    (NP (PRP they))
                                    (VP (VBD had)
                                      (VP (VBN left)
                                        (PP (IN behind)
                                          (NP (PRP them))))))))))))))))))
          (, ,)
          (CC and)
          (PP (TO to)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP they))
                (ADVP (RB always))
                (VP (VBD wanted)
                  (S
                    (VP (TO to)
                      (VP (VB go)
                        (PRT (RP back))
                        (SBAR (IN that)
                          (S
                            (NP (PRP they))
                            (VP (MD might)
                              (VP
                                (VP (VB eat)
                                  (CC and)
                                  (VB drink))
                                (CC and)
                                (VP (VB be)
                                  (ADJP (JJ merry))
                                  (ADVP (RB again)))))))))))))))))
    (: --)
    (CC but)
    (S
      (INTJ (UH oh))
      (, ,)
      (ADVP (RB so))
      (VP
        (VP (VBP tender))
        (CC and)
        (VP
          (ADJP (JJ lovely))
          (PP (IN in)
            (NP (PRP$ its) (NNS mournfulness))))))
    (. !)))

nsubj(was-2, It-1)
nsubj(was-2', It-1)
nsubj(was-2'', It-1)
nsubj(tender-77, It-1)
root(ROOT-0, was-2)
conj_and(was-2, was-2')
conj_and(was-2, was-2'')
advmod(was-2, just-3)
dobj(telling-10, what-5)
det(schoolmaster-7, the-6)
nsubj(telling-10, schoolmaster-7)
aux(telling-10, had-8)
aux(telling-10, been-9)
prepc_like(was-2, telling-10)
dobj(telling-10, him-11)
det(Elysium-14, the-13)
prep_about(telling-10, Elysium-14)
det(poets-20, the-16)
amod(poets-20, Greek-17)
conj_and(Greek-17, Latin-19)
amod(poets-20, Latin-19)
prep_of(Elysium-14, poets-20)
dobj(fancied-25, which-23)
nsubj(fancied-25, they-24)
prepc_to(was-2', fancied-25)
det(people-28, the-26)
amod(people-28, good-27)
nsubj(went-29, people-28)
ccomp(fancied-25, went-29)
advmod(died-32, when-30)
nsubj(died-32, they-31)
advcl(went-29, died-32)
neg(world-45, not-34)
advmod(glad-37, half-35)
advmod(glad-37, so-36)
amod(world-45, glad-37)
conj_and(glad-37, bright-39)
amod(world-45, bright-39)
conj_and(glad-37, busy-41)
amod(world-45, busy-41)
det(daylight-44, the-43)
prep_as(busy-41, daylight-44)
dobj(died-32, world-45)
parataxis(died-32, world-45)
dobj(left-49, which-46)
nsubj(left-49, they-47)
aux(left-49, had-48)
ccomp(world-45, left-49)
prep_behind(left-49, them-51)
dobj(wanted-58, which-55)
nsubj(go-60, which-55)
nsubj(wanted-58, they-56)
advmod(wanted-58, always-57)
prepc_to(was-2'', wanted-58)
aux(go-60, to-59)
xcomp(wanted-58, go-60)
prt(go-60, back-61)
mark(eat-65, that-62)
nsubj(eat-65, they-63)
nsubj(drink-67, they-63)
nsubj(merry-70, they-63)
aux(eat-65, might-64)
ccomp(go-60, eat-65)
ccomp(go-60, drink-67)
conj_and(eat-65, drink-67)
cop(merry-70, be-69)
ccomp(go-60, merry-70)
conj_and(eat-65, merry-70)
advmod(merry-70, again-71)
discourse(tender-77, oh-74)
advmod(tender-77, so-76)
conj_but(was-2, tender-77)
conj_but(was-2, lovely-79)
conj_and(tender-77, lovely-79)
poss(mournfulness-82, its-81)
prep_in(lovely-79, mournfulness-82)

(ROOT
  (S
    (NP
      (NP (JJ Several) (NNS times))
      (PP (IN in)
        (NP (NN winter))))
    (, ,)
    (S
      (VP (VBG looking)
        (PRT (RP out))))
    (, ,)
    (NP (PRP he))
    (VP (VBD saw)
      (NP
        (NP
          (NP (DT a) (JJ strange) (NN sight))
          (PRN (: --)
            (S
              (NP (DT the) (NN air))
              (ADJP (RB so) (JJ full)))))
        (PP (IN of)
          (NP (JJ great) (NNS snowflakes))))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD could) (RB not)
            (VP (VB see)
              (NP (DT the) (NN moon))
              (PP (IN through)
                (NP (PRP them)))
              (, ,)
              (SBAR (IN although)
                (S
                  (NP (PRP$ her) (NN light))
                  (VP (VBD was)
                    (ADJP (JJ visible))
                    (PP (DT all) (IN about)
                      (NP (PRP them)))))))))))
    (. .)))

amod(times-2, Several-1)
nsubj(saw-10, times-2)
prep_in(times-2, winter-4)
vmod(saw-10, looking-6)
prt(looking-6, out-7)
nsubj(saw-10, he-9)
root(ROOT-0, saw-10)
det(sight-13, a-11)
amod(sight-13, strange-12)
dobj(saw-10, sight-13)
det(air-16, the-15)
dep(full-18, air-16)
advmod(full-18, so-17)
dep(sight-13, full-18)
amod(snowflakes-21, great-20)
prep_of(sight-13, snowflakes-21)
mark(see-26, that-22)
nsubj(see-26, he-23)
aux(see-26, could-24)
neg(see-26, not-25)
ccomp(saw-10, see-26)
det(moon-28, the-27)
dobj(see-26, moon-28)
prep_through(see-26, them-30)
mark(visible-36, although-32)
poss(light-34, her-33)
nsubj(visible-36, light-34)
cop(visible-36, was-35)
advcl(see-26, visible-36)
dep(visible-36, all-37)
prep_about(visible-36, them-39)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD came)
      (S
        (VP (VBG floating)
          (ADVP (RB slowly) (RB down))
          (PP (IN through)
            (NP (DT the) (JJ dusky) (NN light)))))
      (, ,)
      (SBAR (RB just) (RB as) (IN if)
        (S
          (NP (PRP they))
          (VP (VBD had)
            (VP (VBN been)
              (NP
                (NP (DT a) (NN precipitate))
                (PP (IN from)
                  (NP
                    (NP (DT that) (NN solution))
                    (PP (IN of)
                      (NP (NNS moonbeams)))))))))))
    (. .)))

nsubj(came-2, They-1)
root(ROOT-0, came-2)
xcomp(came-2, floating-3)
advmod(down-5, slowly-4)
advmod(floating-3, down-5)
det(light-9, the-7)
amod(light-9, dusky-8)
prep_through(floating-3, light-9)
advmod(precipitate-18, just-11)
advmod(precipitate-18, as-12)
mark(precipitate-18, if-13)
nsubj(precipitate-18, they-14)
aux(precipitate-18, had-15)
cop(precipitate-18, been-16)
det(precipitate-18, a-17)
advcl(came-2, precipitate-18)
ccomp(came-2, precipitate-18)
det(solution-21, that-20)
prep_from(precipitate-18, solution-21)
prep_of(solution-21, moonbeams-23)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD could)
        (ADVP (RB hardly))
        (VP (VB persuade)
          (S
            (NP (PRP himself))
            (VP (TO to)
              (VP (VB go)
                (PP (TO to)
                  (NP (NN bed)))))))))
    (, ,) (IN so)
    (S
      (S
        (NP (JJ fascinating))
        (VP (VBD was)
          (NP (DT the) (NN sight))))
      (: ;)
      (CC but)
      (S
        (NP (DT the) (NN cold))
        (VP (MD would)
          (VP (VB drive)
            (NP (PRP him))
            (PP (TO to)
              (NP (PRP$ his) (NN nest)))
            (ADVP (RB again))))))
    (. .)))

nsubj(persuade-4, He-1)
aux(persuade-4, could-2)
advmod(persuade-4, hardly-3)
root(ROOT-0, persuade-4)
dobj(persuade-4, himself-5)
nsubj(go-7, himself-5)
aux(go-7, to-6)
xcomp(persuade-4, go-7)
prep_to(go-7, bed-9)
dep(persuade-4, so-11)
nsubj(sight-15, fascinating-12)
cop(sight-15, was-13)
det(sight-15, the-14)
parataxis(persuade-4, sight-15)
det(cold-19, the-18)
nsubj(drive-21, cold-19)
aux(drive-21, would-20)
parataxis(persuade-4, drive-21)
conj_but(sight-15, drive-21)
dobj(drive-21, him-22)
poss(nest-25, his-24)
prep_to(drive-21, nest-25)
advmod(drive-21, again-26)

(ROOT
  (S
    (SBAR (IN Once)
      (S
        (NP (DT the) (NN wheel-watchman))
        (VP (VBD pulled)
          (NP (PRP him))
          (PRT (RP up))
          (PP (IN in)
            (NP
              (NP (DT the) (NN midst))
              (PP (IN of)
                (NP (DT a) (JJ terrible) (NN thunder-storm))))))))
    (PRN (: --)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP
            (NP (DT the) (NNP East))
            (CC and)
            (NP (DT the) (NN West)))
          (VP (VBD were)
            (VP (VBG answering)
              (NP (DT each) (JJ other))
              (PP (IN with)
                (NP
                  (NP (JJ alternate) (NNS flashes))
                  (PP (IN of)
                    (NP (JJ forked) (NN lightning)))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD seemed)
                        (S
                          (VP (TO to)
                            (VP (VB split)
                              (NP (DT the) (JJ black) (NNS clouds))
                              (PP (IN with)
                                (NP
                                  (NP (NNS cracks))
                                  (PP (IN of)
                                    (NP
                                      (NP (VBG blinding) (NN blue))
                                      (, ,)
                                      (ADJP (JJ awful)
                                        (PP (IN in)
                                          (NP (PRP$ their) (VBG blasting) (NN silence))))))))))))))))))))
      (: --))
    (VP (VBD followed)
      (PP (IN by)
        (ADJP (JJ great)))
      (, ,)
      (ADVP (RB billowy))
      (, ,)
      (S
        (VP (VBG shattering)
          (NP
            (NP (NNS rolls))
            (PP (IN of)
              (NP (NN thunder)))
            (, ,)
            (ADVP (RB as) (RB loud) (RB as)
              (SBAR (IN if)
                (S
                  (NP (DT the) (NN sky))
                  (VP (VBD had)
                    (VP
                      (VP (VBN been)
                        (NP
                          (NP (DT a) (JJ huge) (NN kettledrum))
                          (, ,)
                          (SBAR
                            (WHPP (IN on)
                              (WHNP (WDT which)))
                            (S
                              (NP
                                (NP (DT the) (NNS clubs))
                                (PP (IN of)
                                  (NP (JJ giant) (NNS drummers))))
                              (VP (VBD were)
                                (VP (VBG beating)
                                  (NP (DT a) (JJ terrible) (NN onset))
                                  (: ;)
                                  (SBAR (IN while)
                                    (S
                                      (PP (IN at)
                                        (NP (JJ sudden) (NNS intervals)))
                                      (, ,)
                                      (ADVP (RB down))
                                      (VP (VBD came)
                                        (NP (DT the) (JJ big-dropped) (NN rain))
                                        (, ,)
                                        (S
                                          (VP (VBG pattering)
                                            (PP (TO to)
                                              (NP (DT the) (NN earth))))))))))))))
                      (CONJP (RB as) (IN if))
                      (VP (VBN beaten)
                        (PRT (RP out))
                        (PP (IN of)
                          (NP (DT the) (NNS clouds))))
                      (PP (IN by)
                        (NP
                          (NP (DT the) (NNS blows))
                          (PP (IN of)
                            (NP (DT the) (NN thunder))))))))))))))
    (. .)))

mark(pulled-4, Once-1)
det(wheel-watchman-3, the-2)
nsubj(pulled-4, wheel-watchman-3)
advcl(followed-50, pulled-4)
csubj(followed-50, pulled-4)
dobj(pulled-4, him-5)
prt(pulled-4, up-6)
det(midst-9, the-8)
prep_in(pulled-4, midst-9)
det(thunder-storm-13, a-11)
amod(thunder-storm-13, terrible-12)
prep_of(midst-9, thunder-storm-13)
advmod(answering-22, when-15)
det(East-17, the-16)
nsubj(answering-22, East-17)
det(West-20, the-19)
conj_and(East-17, West-20)
nsubj(answering-22, West-20)
aux(answering-22, were-21)
parataxis(followed-50, answering-22)
det(other-24, each-23)
dobj(answering-22, other-24)
amod(flashes-27, alternate-26)
prep_with(answering-22, flashes-27)
nsubj(seemed-32, flashes-27)
nsubj(split-34, flashes-27)
amod(lightning-30, forked-29)
prep_of(flashes-27, lightning-30)
rcmod(flashes-27, seemed-32)
aux(split-34, to-33)
xcomp(seemed-32, split-34)
det(clouds-37, the-35)
amod(clouds-37, black-36)
dobj(split-34, clouds-37)
prep_with(split-34, cracks-39)
amod(blue-42, blinding-41)
prep_of(cracks-39, blue-42)
amod(blue-42, awful-44)
poss(silence-48, their-46)
amod(silence-48, blasting-47)
prep_in(awful-44, silence-48)
root(ROOT-0, followed-50)
prep_by(followed-50, great-52)
advmod(followed-50, billowy-54)
xcomp(followed-50, shattering-56)
dobj(shattering-56, rolls-57)
prep_of(rolls-57, thunder-59)
advmod(as-63, as-61)
advmod(as-63, loud-62)
advmod(rolls-57, as-63)
mark(kettledrum-71, if-64)
det(sky-66, the-65)
nsubj(kettledrum-71, sky-66)
nsubj(beaten-103, sky-66)
aux(kettledrum-71, had-67)
cop(kettledrum-71, been-68)
det(kettledrum-71, a-69)
amod(kettledrum-71, huge-70)
dep(as-63, kettledrum-71)
prep_on(beating-81, kettledrum-71)
det(clubs-76, the-75)
nsubj(beating-81, clubs-76)
amod(drummers-79, giant-78)
prep_of(clubs-76, drummers-79)
aux(beating-81, were-80)
rcmod(kettledrum-71, beating-81)
det(onset-84, a-82)
amod(onset-84, terrible-83)
dobj(beating-81, onset-84)
mark(came-92, while-86)
amod(intervals-89, sudden-88)
prep_at(came-92, intervals-89)
advmod(came-92, down-91)
advcl(beating-81, came-92)
parataxis(beating-81, came-92)
det(rain-95, the-93)
amod(rain-95, big-dropped-94)
dobj(came-92, rain-95)
vmod(came-92, pattering-97)
det(earth-100, the-99)
prep_to(pattering-97, earth-100)
dep(as-63, beaten-103)
conj_as(kettledrum-71, beaten-103)
prep_on(beating-81, beaten-103)
det(clouds-107, the-106)
prep_out_of(beaten-103, clouds-107)
det(blows-110, the-109)
prep_by(kettledrum-71, blows-110)
det(thunder-113, the-112)
prep_of(blows-110, thunder-113)

(ROOT
  (S (CC But)
    (NP (NNP Willie))
    (VP (VBD was)
      (ADJP (RB not) (JJ frightened)
        (PRN (, ,)
          (SBAR (IN though)
            (S
              (S
                (NP (DT the) (NN lightning))
                (VP (VBD blinded)))
              (CC and)
              (S
                (NP (DT the) (NN thunder))
                (VP
                  (VP (VBD deafened)
                    (NP (PRP him)))
                  (: --) (RB not)
                  (VP (VBD frightened)
                    (ADVP (DT any) (RBR more))
                    (PP (IN than)
                      (NP
                        (NP (DT the) (JJS tiniest) (NN flower))
                        (PP (IN in)
                          (NP (DT the) (NN garden))))))))
              (ADVP (RB below))))
          (, ,))
        (SBAR
          (WHNP (WDT which))
          (PRN (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP she))
                (VP (MD could)
                  (VP (VB have)
                    (VP (VBN thought)
                      (PP (IN about)
                        (NP (PRP it))))))))
            (, ,))
          (S
            (VP (MD would)
              (VP (VB have)
                (VP (VBN thought)
                  (NP (PRP it))
                  (S (RB all)
                    (VP (VBG being)
                      (VP (VBN done)
                        (SBAR (RB only) (IN that)
                          (S
                            (NP (PRP she))
                            (VP (MD might)
                              (VP
                                (VP (VB feel)
                                  (NP
                                    (NP (JJR cooler))
                                    (CC and)
                                    (NP (JJR stronger))))
                                (, ,)
                                (CC and)
                                (VP (VB be)
                                  (ADJP (JJ able)
                                    (S
                                      (VP (TO to)
                                        (VP (VB hold)
                                          (PRT (RP up))
                                          (NP (PRP$ her) (NN head))
                                          (ADVP (RBR better)))))))))))))))))))))
    (. .)))

cc(frightened-5, But-1)
nsubj(frightened-5, Willie-2)
cop(frightened-5, was-3)
neg(frightened-5, not-4)
root(ROOT-0, frightened-5)
mark(blinded-10, though-7)
det(lightning-9, the-8)
nsubj(blinded-10, lightning-9)
dep(frightened-5, blinded-10)
det(thunder-13, the-12)
nsubj(deafened-14, thunder-13)
dep(frightened-5, deafened-14)
conj_and(blinded-10, deafened-14)
dobj(deafened-14, him-15)
neg(deafened-14, not-17)
dep(deafened-14, frightened-18)
dep(more-20, any-19)
advmod(frightened-18, more-20)
det(flower-24, the-22)
amod(flower-24, tiniest-23)
prep_than(frightened-18, flower-24)
det(garden-27, the-26)
prep_in(flower-24, garden-27)
advmod(blinded-10, below-28)
nsubj(thought-42, which-30)
mark(thought-36, if-32)
nsubj(thought-36, she-33)
aux(thought-36, could-34)
aux(thought-36, have-35)
dep(thought-42, thought-36)
prep_about(thought-36, it-38)
aux(thought-42, would-40)
aux(thought-42, have-41)
ccomp(frightened-5, thought-42)
dobj(thought-42, it-43)
advmod(done-46, all-44)
auxpass(done-46, being-45)
xcomp(thought-42, done-46)
advmod(feel-51, only-47)
mark(feel-51, that-48)
nsubj(feel-51, she-49)
nsubj(able-58, she-49)
nsubj(hold-60, she-49)
aux(feel-51, might-50)
dep(done-46, feel-51)
dobj(feel-51, cooler-52)
dobj(feel-51, stronger-54)
conj_and(cooler-52, stronger-54)
cop(able-58, be-57)
dep(done-46, able-58)
conj_and(feel-51, able-58)
aux(hold-60, to-59)
xcomp(able-58, hold-60)
prt(hold-60, up-61)
poss(head-63, her-62)
dobj(hold-60, head-63)
advmod(hold-60, better-64)

(ROOT
  (S (CC And)
    (ADVP (RB once))
    (NP (PRP he))
    (VP (VBD saw)
      (NP
        (NP
          (NP (DT a) (JJ glorious) (NN dance))
          (PP (IN of)
            (NP (DT the) (NN aurora) (NNS borealis))))
        (: --)
        (PP (IN in)
          (NP
            (NP (PDT all) (DT the) (NNS colours))
            (PP (IN of)
              (NP (DT a) (JJ faint) (NN rainbow)))))))
    (. .)))

cc(saw-4, And-1)
advmod(saw-4, once-2)
nsubj(saw-4, he-3)
root(ROOT-0, saw-4)
det(dance-7, a-5)
amod(dance-7, glorious-6)
dobj(saw-4, dance-7)
det(borealis-11, the-9)
nn(borealis-11, aurora-10)
prep_of(dance-7, borealis-11)
predet(colours-16, all-14)
det(colours-16, the-15)
prep_in(dance-7, colours-16)
det(rainbow-20, a-18)
amod(rainbow-20, faint-19)
prep_of(colours-16, rainbow-20)

(ROOT
  (S
    (S
      (NP (DT The) (JJ frosty) (NN snow))
      (VP (VBD sparkled)
        (PP (IN underneath))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (JJ cold) (NNS stars))
        (PP (IN of)
          (NP (NN winter))))
      (VP
        (VP (VBD sparkled)
          (ADVP (RB above)))
        (, ,)
        (CC and)
        (VP
          (PP (IN between)
            (NP
              (NP (DT the) (NN snow))
              (CC and)
              (NP (DT the) (NNS stars))))
          (, ,)
          (VP (VBD shimmered))
          (CC and)
          (VP (VBD shifted)))
        (, ,)
        (VP (VBZ vanished))
        (CC and)
        (VP (VBD came)
          (ADVP (RB again)))
        (, ,)
        (NP
          (NP (DT a) (JJ serried) (NN host))
          (PP (IN of)
            (NP (NNS spears))))))
    (. .)))

det(snow-3, The-1)
amod(snow-3, frosty-2)
nsubj(sparkled-4, snow-3)
root(ROOT-0, sparkled-4)
prep(sparkled-4, underneath-5)
det(stars-10, the-8)
amod(stars-10, cold-9)
nsubj(sparkled-13, stars-10)
nsubj(shimmered-24, stars-10)
nsubj(vanished-28, stars-10)
nsubj(came-30, stars-10)
prep_of(stars-10, winter-12)
conj_and(sparkled-4, sparkled-13)
advmod(sparkled-13, above-14)
det(snow-19, the-18)
prep_between(shimmered-24, snow-19)
det(stars-22, the-21)
conj_and(snow-19, stars-22)
prep_between(shimmered-24, stars-22)
conj_and(sparkled-4, shimmered-24)
conj_and(sparkled-13, shimmered-24)
conj_and(sparkled-13, shifted-26)
conj_and(shimmered-24, shifted-26)
conj_and(sparkled-4, vanished-28)
conj_and(sparkled-13, vanished-28)
conj_and(sparkled-4, came-30)
conj_and(sparkled-13, came-30)
advmod(came-30, again-31)
det(host-35, a-33)
amod(host-35, serried-34)
conj_and(sparkled-4, host-35)
conj_and(sparkled-13, host-35)
dobj(sparkled-13, host-35)
prep_of(host-35, spears-37)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (VBD had)
        (VP (VBN been)
          (VP (VBG reading)
            (NP
              (NP (DT the) (`` ``) (NNP Paradise) (NNP Lost))
              (, ,) ('' '')
              (CC and)
              (NP
                (NP (DT the) (NN part))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD pleased)
                      (NP (PRP him)))))))))))
    (, ,)
    (NP
      (NP (NN boy-like))
      (, ,)
      (NP (DT the) (JJS most))
      (, ,))
    (VP (VBD was)
      (NP
        (NP (DT the) (NNS wars))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS angels))
            (PP (IN in)
              (NP (DT the) (JJ sixth) (NN book)))))))
    (. .)))

nsubj(reading-4, Willie-1)
aux(reading-4, had-2)
aux(reading-4, been-3)
ccomp(wars-25, reading-4)
det(Lost-8, the-5)
nn(Lost-8, Paradise-7)
dobj(reading-4, Lost-8)
det(part-13, the-12)
dobj(reading-4, part-13)
conj_and(Lost-8, part-13)
nsubj(pleased-15, part-13)
rcmod(part-13, pleased-15)
dobj(pleased-15, him-16)
nsubj(wars-25, boy-like-18)
det(most-21, the-20)
appos(boy-like-18, most-21)
cop(wars-25, was-23)
det(wars-25, the-24)
root(ROOT-0, wars-25)
det(angels-28, the-27)
prep_of(wars-25, angels-28)
det(book-32, the-30)
amod(book-32, sixth-31)
prep_in(angels-28, book-32)

(ROOT
  (S
    (ADVP (RB Hence))
    (NP (PRP it))
    (VP (VBD came)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN aurora))
          (VP (VBD looked)
            (PP (TO to)
              (NP (PRP him)))
            (SBAR (IN like)
              (S
                (NP
                  (NP (DT the) (NN crowding))
                  (PP (IN of)
                    (NP (JJ innumerable) (NNS spears))))
                (PRN (: --)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NNS hands))
                      (PP (IN of)
                        (NP (NNS angels)))))
                  (, ,)
                  (ADVP (PRP themselves) (RB invisible))
                  (: --))
                (VP
                  (VP (VBD clashed)
                    (ADVP (RB together)))
                  (CC and)
                  (VP
                    (VP (VBN shaken)
                      (NP (NN asunder))
                      (, ,)
                      (ADVP (RB however))
                      (, ,)
                      (PP (IN as) (IN in)
                        (NP
                          (NP (DT the) (NNS convolutions))
                          (PP (IN of)
                            (NP
                              (NP (DT a) (JJ mazy) (NN dance))
                              (PP (IN of)
                                (NP (NN victory))))))))
                    (, ,)
                    (CONJP (RB rather) (IN than))
                    (VP (VBN brandished))
                    (CC and)
                    (VP (VBN hurtled)
                      (PP (IN as) (IN in)
                        (NP
                          (NP (DT the) (NN tumult))
                          (PP (IN of)
                            (NP (DT the) (NN battle))))))))))))))
    (. .)))

advmod(came-3, Hence-1)
nsubj(came-3, it-2)
root(ROOT-0, came-3)
mark(looked-7, that-4)
det(aurora-6, the-5)
nsubj(looked-7, aurora-6)
ccomp(came-3, looked-7)
prep_to(looked-7, him-9)
mark(clashed-26, like-10)
det(crowding-12, the-11)
nsubj(clashed-26, crowding-12)
nsubj(shaken-29, crowding-12)
amod(spears-15, innumerable-14)
prep_of(crowding-12, spears-15)
dep(clashed-26, in-17)
det(hands-19, the-18)
pobj(in-17, hands-19)
prep_of(hands-19, angels-21)
dep(invisible-24, themselves-23)
dep(in-17, invisible-24)
advcl(looked-7, clashed-26)
advmod(clashed-26, together-27)
advcl(looked-7, shaken-29)
conj_and(clashed-26, shaken-29)
dobj(shaken-29, asunder-30)
advmod(shaken-29, however-32)
dep(shaken-29, as-34)
det(convolutions-37, the-36)
prep_in(shaken-29, convolutions-37)
det(dance-41, a-39)
amod(dance-41, mazy-40)
prep_of(convolutions-37, dance-41)
prep_of(dance-41, victory-43)
conj_and(clashed-26, brandished-47)
conj_negcc(shaken-29, brandished-47)
conj_and(clashed-26, hurtled-49)
conj_and(shaken-29, hurtled-49)
dep(hurtled-49, as-50)
det(tumult-53, the-52)
prep_in(hurtled-49, tumult-53)
det(battle-56, the-55)
prep_of(tumult-53, battle-56)

(ROOT
  (S
    (NP
      (NP (DT Another) (NN vision))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (MD would)
            (ADVP (RB greatly))
            (VP (VB delight)
              (NP (PRP him)))))))
    (VP (VBD was)
      (NP
        (NP (DT a)
          (ADJP (RB far) (RBR more) (JJ common))
          (NN one))
        (: :)
        (NP
          (NP (DT the) (NN moon))
          (VP (VBG wading)
            (PP (IN through)
              (NP
                (NP (NNS clouds))
                (VP (VBN blown)
                  (ADVP (RB slowly)
                    (PP (IN across)
                      (NP (DT the) (NN sky))))
                  (PRN (: --)
                    (ADVP (RB especially))
                    (ADVP (IN if)
                      (PP (IN by)
                        (NP
                          (NP (DT an) (JJ upper) (NN wind))
                          (, ,)
                          (VP (VBN unfelt)
                            (ADVP (RB below))))))))))))))
    (. .)))

det(vision-2, Another-1)
nsubj(delight-6, vision-2)
nsubj(one-13, vision-2)
aux(delight-6, would-4)
advmod(delight-6, greatly-5)
rcmod(vision-2, delight-6)
dobj(delight-6, him-7)
cop(one-13, was-8)
det(one-13, a-9)
advmod(common-12, far-10)
advmod(common-12, more-11)
amod(one-13, common-12)
root(ROOT-0, one-13)
det(moon-16, the-15)
dep(one-13, moon-16)
vmod(moon-16, wading-17)
prep_through(wading-17, clouds-19)
vmod(clouds-19, blown-20)
advmod(blown-20, slowly-21)
det(sky-24, the-23)
prep_across(slowly-21, sky-24)
dep(blown-20, especially-26)
dep(especially-26, if-27)
det(wind-31, an-29)
amod(wind-31, upper-30)
prep_by(if-27, wind-31)
vmod(wind-31, unfelt-33)
advmod(unfelt-33, below-34)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP she))
      (VP (MD would)
        (VP (VB be)
          (VP (VBG sinking)
            (ADJP (JJ helpless))
            (PP (IN in)
              (NP (DT a) (JJ black) (NN faint)))
            (: --)
            (S
              (VP (VBG growing)
                (NP
                  (ADJP (JJR more)
                    (CC and)
                    (JJR more))
                  (NN dim))))
            (, ,)
            (SBAR (IN until)
              (S
                (S
                  (PP (IN at)
                    (NP (JJ last)))
                  (NP (PRP she))
                  (VP
                    (VP (VBD disappeared)
                      (PP (IN from)
                        (NP (DT the) (NN night))))
                    (: --)
                    (VP (VBD was)
                      (VP (VBN blotted)
                        (PP (IN from)
                          (NP
                            (NP (DT the) (NN face))
                            (PP (IN of)
                              (NP (NN nature)))))))
                    (, ,)
                    (S
                      (VP (VBG leaving)
                        (NP (RB only) (DT a) (JJ dim) (NN memorial) (NN light))
                        (PP (IN behind)
                          (NP (PRP her)))))))
                (: ;)
                (S
                  (ADVP (RB now))
                  (NP (PRP$ her) (NN soul))
                  (VP (MD would)
                    (VP (VB come)
                      (PP (IN into)
                        (NP (PRP her)))
                      (ADVP (RB again)))))
                (, ,)
                (CC and)
                (S
                  (NP (PRP she))
                  (VP (VBD was)
                    (ADVP (RB there))
                    (ADJP
                      (ADJP (RB once) (JJR more))
                      (: --)
                      (ADJP (JJ doubtful))
                      (ADVP (RB indeed)))))
                (: :)
                (S (CC but)
                  (PP (IN with)
                    (NP (DT a) (JJ slow) (, ,) (JJ solemn) (NN revival)))
                  (, ,)
                  (NP (PRP$ her) (NN light))
                  (VP (MD would)
                    (VP (VB grow)
                      (CC and)
                      (VB grow))))))
            (, ,)
            (SBAR (IN until)
              (S
                (NP
                  (NP (DT the) (JJ last) (NN fringe))
                  (PP (IN of)
                    (NP (DT the) (JJ great) (NN cloud))))
                (VP (VBD swung)
                  (PRT (RP away))
                  (PP (IN from)
                    (PP (IN off)
                      (NP (PRP$ her) (NN face)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD dawned)
        (PP (IN out)
          (NP (JJ stately)
            (CC and)
            (JJ glorious)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB float)
              (PP (IN for)
                (NP
                  (NP (DT a) (NN space))
                  (PP (IN in)
                    (NP (JJ queenly) (NN triumph)))))
              (PP (IN across)
                (NP
                  (NP (DT a) (NN lake))
                  (PP (IN of)
                    (NP (JJ clearest) (NN blue))))))))))
    (. .)))

advmod(sinking-5, Now-1)
nsubj(sinking-5, she-2)
aux(sinking-5, would-3)
aux(sinking-5, be-4)
root(ROOT-0, sinking-5)
acomp(sinking-5, helpless-6)
det(faint-10, a-8)
amod(faint-10, black-9)
prep_in(sinking-5, faint-10)
parataxis(sinking-5, growing-12)
amod(dim-16, more-13)
conj_and(more-13, more-15)
amod(dim-16, more-15)
dobj(growing-12, dim-16)
mark(disappeared-22, until-18)
prep_at(disappeared-22, last-20)
nsubj(disappeared-22, she-21)
advcl(sinking-5, disappeared-22)
det(night-25, the-24)
prep_from(disappeared-22, night-25)
auxpass(blotted-28, was-27)
dep(disappeared-22, blotted-28)
det(face-31, the-30)
prep_from(blotted-28, face-31)
prep_of(face-31, nature-33)
vmod(disappeared-22, leaving-35)
advmod(light-40, only-36)
det(light-40, a-37)
amod(light-40, dim-38)
nn(light-40, memorial-39)
dobj(leaving-35, light-40)
prep_behind(leaving-35, her-42)
advmod(come-48, now-44)
poss(soul-46, her-45)
nsubj(come-48, soul-46)
aux(come-48, would-47)
advcl(sinking-5, come-48)
conj_and(disappeared-22, come-48)
prep_into(come-48, her-50)
advmod(come-48, again-51)
nsubj(more-58, she-54)
cop(more-58, was-55)
advmod(more-58, there-56)
advmod(more-58, once-57)
advcl(sinking-5, more-58)
conj_and(disappeared-22, more-58)
dep(more-58, doubtful-60)
advmod(more-58, indeed-61)
det(revival-69, a-65)
amod(revival-69, slow-66)
amod(revival-69, solemn-68)
prep_with(grow-74, revival-69)
poss(light-72, her-71)
nsubj(grow-74, light-72)
nsubj(grow-76, light-72)
aux(grow-74, would-73)
advcl(sinking-5, grow-74)
conj_and(disappeared-22, grow-74)
parataxis(disappeared-22, grow-74)
conj_and(disappeared-22, grow-76)
parataxis(disappeared-22, grow-76)
conj_and(grow-74, grow-76)
mark(swung-86, until-78)
det(fringe-81, the-79)
amod(fringe-81, last-80)
nsubj(swung-86, fringe-81)
det(cloud-85, the-83)
amod(cloud-85, great-84)
prep_of(fringe-81, cloud-85)
advcl(sinking-5, swung-86)
prepc_away_from(swung-86, off-89)
poss(face-91, her-90)
pobj(off-89, face-91)
nsubj(dawned-95, she-94)
nsubj(float-102, she-94)
conj_and(sinking-5, dawned-95)
prep_out(dawned-95, stately-97)
prep_out(dawned-95, glorious-99)
conj_and(stately-97, glorious-99)
aux(float-102, to-101)
xcomp(dawned-95, float-102)
det(space-105, a-104)
prep_for(float-102, space-105)
amod(triumph-108, queenly-107)
prep_in(space-105, triumph-108)
det(lake-111, a-110)
prep_across(float-102, lake-111)
amod(blue-114, clearest-113)
prep_of(lake-111, blue-114)

(ROOT
  (S (CC And)
    (S
      (NP (NNP Willie))
      (VP (VBD was)
        (ADJP (JJ philosopher) (RB enough)
          (S
            (VP (TO to)
              (VP (VB say)
                (PP (TO to)
                  (NP (PRP himself)))
                (, ,)
                (SBAR
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (PDT all) (DT this) (NNS fainting)
                          (CC and)
                          (NNS reviving))
                        (, ,)
                        (NP
                          (NP (PDT all) (DT this) (NN defeat))
                          (CC and)
                          (NP (NN conquest)))
                        (, ,))
                      (VP (VBD were)
                        (PP (CC but)
                          (NP (NNS appearances))))))
                  (: ;)
                  (SBAR (IN that)
                    (S
                      (NP (DT the) (NN moon))
                      (VP (VBD was)
                        (NP (PRP$ her) (JJ own) (JJ bright) (NN self))
                        (NP (PDT all) (DT the) (NN time))
                        (, ,)
                        (S
                          (VP (VBG basking)
                            (NP
                              (NP (JJ contented))
                              (PP (IN in)
                                (NP
                                  (NP (DT the) (NN light))
                                  (PP (IN of)
                                    (NP (PRP$ her) (NN sun)))
                                  (, ,)
                                  (PP (IN between)
                                    (NP (WP whom))))))))))))))))))
    (CC and)
    (S
      (NP (PRP her))
      (NP (DT the) (NN cloud))
      (VP (MD could) (RB not)
        (VP (VB creep) (, ,)
          (ADVP (RB only))
          (PP (IN between)
            (NP
              (NP (PRP her))
              (CC and)
              (NP (NNP Willie)))))))
    (. .)))

nsubj(philosopher-4, Willie-2)
nsubj(say-7, Willie-2)
cop(philosopher-4, was-3)
root(ROOT-0, philosopher-4)
advmod(philosopher-4, enough-5)
aux(say-7, to-6)
xcomp(philosopher-4, say-7)
prep_to(say-7, himself-9)
mark(were-24, that-11)
dep(fainting-14, all-12)
det(fainting-14, this-13)
nsubj(were-24, fainting-14)
conj_and(fainting-14, reviving-16)
nsubj(were-24, reviving-16)
predet(defeat-20, all-18)
det(defeat-20, this-19)
appos(fainting-14, defeat-20)
appos(fainting-14, conquest-22)
conj_and(defeat-20, conquest-22)
dep(say-7, were-24)
prep(were-24, but-25)
pobj(but-25, appearances-26)
mark(self-35, that-28)
det(moon-30, the-29)
nsubj(self-35, moon-30)
cop(self-35, was-31)
poss(self-35, her-32)
amod(self-35, own-33)
amod(self-35, bright-34)
dep(were-24, self-35)
predet(time-38, all-36)
det(time-38, the-37)
dep(self-35, time-38)
vmod(self-35, basking-40)
dobj(basking-40, contented-41)
det(light-44, the-43)
prep_in(contented-41, light-44)
poss(sun-47, her-46)
prep_of(light-44, sun-47)
prep_between(light-44, whom-50)
nsubj(creep-57, her-52)
det(cloud-54, the-53)
nsubj(creep-57, cloud-54)
aux(creep-57, could-55)
neg(creep-57, not-56)
conj_and(philosopher-4, creep-57)
advmod(creep-57, only-59)
prep_between(creep-57, her-61)
prep_between(creep-57, Willie-63)
conj_and(her-61, Willie-63)

(ROOT
  (S (CC But)
    (SBAR
      (WHNP (WP what))
      (S
        (VP (VBD delighted)
          (NP (PRP him)))))
    (NP
      (NP (JJS most))
      (PP (IN of)
        (NP (DT all))))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP (VB catch)
            (NP
              (NP (DT the) (NN moon))
              (VP (VBG dreaming)))))))
    (. .)))

cc(was-8, But-1)
nsubj(delighted-3, what-2)
advcl(was-8, delighted-3)
dobj(delighted-3, him-4)
nsubj(was-8, most-5)
nsubj(catch-10, most-5)
prep_of(most-5, all-7)
root(ROOT-0, was-8)
aux(catch-10, to-9)
xcomp(was-8, catch-10)
det(moon-12, the-11)
dobj(catch-10, moon-12)
vmod(moon-12, dreaming-13)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP
            (NP (DT the) (JJ old) (NN moon))
            (, ,)
            (VP (VBD tumbled)
              (PRT (RP over))
              (PP (IN on)
                (NP (PRP$ her) (NN back))))
            (, ,))
          (VP (MD would)
            (VP (VB come)
              (S
                (VP
                  (VP (VBG floating)
                    (ADVP (RB up) (DT the) (JJ east))
                    (, ,)
                    (PP (IN like)
                      (NP
                        (NP (DT a) (JJ little) (NN boat))
                        (PP (IN on)
                          (NP
                            (NP (DT the) (VBG rising) (NN tide))
                            (PP (IN of)
                              (NP (DT the) (NN night))))))))
                  (, ,)
                  (VP (VBG looking)
                    (S
                      (VP (VBN lost)
                        (PP (IN on)
                          (NP (DT the) (JJ infinite) (NN sea)))))))))))))
    (. !)))

nsubj(was-2, That-1)
root(ROOT-0, was-2)
advmod(come-15, when-3)
det(moon-6, the-4)
amod(moon-6, old-5)
nsubj(come-15, moon-6)
vmod(moon-6, tumbled-8)
prt(tumbled-8, over-9)
poss(back-12, her-11)
prep_on(tumbled-8, back-12)
aux(come-15, would-14)
advcl(was-2, come-15)
ccomp(come-15, floating-16)
advmod(east-19, up-17)
det(east-19, the-18)
advmod(floating-16, east-19)
det(boat-24, a-22)
amod(boat-24, little-23)
prep_like(floating-16, boat-24)
det(tide-28, the-26)
amod(tide-28, rising-27)
prep_on(boat-24, tide-28)
det(night-31, the-30)
prep_of(tide-28, night-31)
dep(floating-16, looking-33)
dep(looking-33, lost-34)
det(sea-38, the-36)
amod(sea-38, infinite-37)
prep_on(lost-34, sea-38)

(ROOT
  (S
    (S
      (VP (VBG Dreaming)
        (NP (PRP she))))
    (VP (MD must)
      (VP (VB be)
        (ADVP (RB surely))))
    (. !)))

csubj(be-4, Dreaming-1)
dobj(Dreaming-1, she-2)
aux(be-4, must-3)
root(ROOT-0, be-4)
advmod(be-4, surely-5)

(ROOT
  (S (: --)
    (S
      (NP (PRP she))
      (VP (VBD looked)
        (NP (NN nothing))))
    (CC but)
    (S
      (VP (VBG dreaming)
        (PRN (: ;)
          (SBAR (IN for)
            (S
              (NP (PRP she))
              (VP (VBD seemed)
                (S
                  (VP (TO to)
                    (VP (VB care)
                      (PP (IN about)
                        (NP (NN nothing)))
                      (: --)
                      (SBAR (RB not) (RB even) (IN that)
                        (S
                          (NP (PRP she))
                          (VP (VBD was)
                            (UCP
                              (ADJP (JJ old))
                              (CC and)
                              (VP (VBN worn) (, ,)
                                (CC and)
                                (VBN withered)
                                (CC and)
                                (VBN dying) (, ,))))))))))))
          (: --))
        (SBAR (RB not) (RB even) (IN that)
          (S (, ,)
            (PP (RB instead) (IN of)
              (S
                (VP (VBG sinking)
                  (PRT (RP down))
                  (PP (IN in)
                    (NP (DT the) (NN west)))
                  (, ,)
                  (PP (IN into)
                    (NP
                      (NP (DT some) (JJ deep) (NN bed))
                      (PP (IN of)
                        (NP (NN dim) (NN repose))))))))
            (, ,)
            (NP (PRP she))
            (VP (VBD was)
              (UCP
                (VP (VBN drifting) (, ,) (VBN haggard)
                  (CC and)
                  (VBN battered) (, ,)
                  (ADVP (RB untidy)))
                (CC and)
                (ADJP (JJ weak)
                  (CC and)
                  (JJ sleepy)))
              (, ,)
              (ADVP (IN up)
                (CC and)
                (IN up)
                (PP (IN into)
                  (NP
                    (NP (DT the) (JJ dazzling) (NNS halls))
                    (PP (IN of)
                      (NP (DT the) (NN sun)))))))))))
    (. .)))

nsubj(looked-3, she-2)
nsubj(dreaming-6, she-2)
root(ROOT-0, looked-3)
dobj(looked-3, nothing-4)
conj_but(looked-3, dreaming-6)
mark(seemed-10, for-8)
nsubj(seemed-10, she-9)
nsubj(care-12, she-9)
parataxis(dreaming-6, seemed-10)
aux(care-12, to-11)
xcomp(seemed-10, care-12)
prep_about(care-12, nothing-14)
dep(old-21, not-16)
advmod(old-21, even-17)
mark(old-21, that-18)
nsubjpass(old-21, she-19)
nsubjpass(worn-23, she-19)
auxpass(old-21, was-20)
cop(old-21, was-20)
ccomp(care-12, old-21)
parataxis(care-12, old-21)
ccomp(care-12, worn-23)
parataxis(care-12, worn-23)
conj_and(old-21, worn-23)
conj_and(old-21, withered-26)
conj_and(worn-23, withered-26)
conj_and(old-21, dying-28)
conj_and(worn-23, dying-28)
dep(was-52, not-31)
advmod(was-52, even-32)
mark(was-52, that-33)
prepc_instead_of(was-52, sinking-37)
prt(sinking-37, down-38)
det(west-41, the-40)
prep_in(sinking-37, west-41)
det(bed-46, some-44)
amod(bed-46, deep-45)
prep_into(sinking-37, bed-46)
nn(repose-49, dim-48)
prep_of(bed-46, repose-49)
nsubj(was-52, she-51)
ccomp(dreaming-6, was-52)
dep(was-52, drifting-53)
dep(was-52, haggard-55)
conj_and(drifting-53, haggard-55)
dep(was-52, battered-57)
conj_and(drifting-53, battered-57)
dep(was-52, untidy-59)
advmod(drifting-53, untidy-59)
conj_and(drifting-53, untidy-59)
dep(was-52, weak-61)
conj_and(drifting-53, weak-61)
conj_and(drifting-53, sleepy-63)
conj_and(weak-61, sleepy-63)
advmod(was-52, up-65)
advmod(was-52, up-67)
conj_and(up-65, up-67)
det(halls-71, the-69)
amod(halls-71, dazzling-70)
prep_into(up-65, halls-71)
det(sun-74, the-73)
prep_of(halls-71, sun-74)

(ROOT
  (SQ (VBD Did)
    (NP (PRP she))
    (VP (VB know)
      (SBAR (IN that)
        (S
          (NP (PRP$ his) (NN light))
          (VP (MD would)
            (VP
              (VP (VB clothe)
                (NP (PRP her))
                (PP (IN as)
                  (PP (IN with)
                    (NP (DT a) (NN garment)))))
              (, ,)
              (CC and)
              (VP (VB hide)
                (NP (PRP her))
                (PP (IN in)
                  (NP
                    (NP (DT the) (JJS highest) (NNS recesses))
                    (PP (IN of)
                      (NP (PRP$ his) (JJ light-filled) (NN ceiling)))))))))))
    (. ?)))

aux(know-3, Did-1)
nsubj(know-3, she-2)
root(ROOT-0, know-3)
mark(clothe-8, that-4)
poss(light-6, his-5)
nsubj(clothe-8, light-6)
nsubj(hide-16, light-6)
aux(clothe-8, would-7)
ccomp(know-3, clothe-8)
dobj(clothe-8, her-9)
prep(clothe-8, as-10)
pcomp(as-10, with-11)
det(garment-13, a-12)
pobj(with-11, garment-13)
ccomp(know-3, hide-16)
conj_and(clothe-8, hide-16)
dobj(hide-16, her-17)
det(recesses-21, the-19)
amod(recesses-21, highest-20)
prep_in(hide-16, recesses-21)
poss(ceiling-25, his-23)
amod(ceiling-25, light-filled-24)
prep_of(recesses-21, ceiling-25)

(ROOT
  (SQ (CC or)
    (VBD was)
    (NP (PRP it))
    (SBAR (RB only) (IN that)
      (S
        (S
          (NP (PRP she))
          (VP (VBD was)
            (VP (VBG dreaming))))
        (, ,)
        (S
          (NP
            (NP (NNP dreaming))
            (: --)
            (ADJP (JJ sweet) (, ,) (JJ cool))
            (, ,))
          (VP (VBP tender)
            (NP
              (NP (NNS dreams))
              (PP (IN of)
                (NP (PRP$ her) (JJ own))))))
        (, ,)
        (CC and)
        (S
          (NP (DT neither))
          (VP
            (VP (VBD knew))
            (CC nor)
            (VP (VBD cared)
              (PP (IN about)
                (NP (NN anything)))
              (PP (IN around)
                (NP (PRP her))))))))
    (. ?)))

cc(was-2, or-1)
root(ROOT-0, was-2)
nsubj(was-2, it-3)
advmod(dreaming-8, only-4)
mark(dreaming-8, that-5)
nsubj(dreaming-8, she-6)
aux(dreaming-8, was-7)
dep(was-2, dreaming-8)
nsubj(tender-16, dreaming-10)
amod(cool-14, sweet-12)
amod(dreaming-10, cool-14)
dep(was-2, tender-16)
ccomp(dreaming-8, tender-16)
conj_and(dreaming-8, tender-16)
dobj(tender-16, dreams-17)
poss(own-20, her-19)
prep_of(dreams-17, own-20)
nsubj(knew-24, neither-23)
nsubj(cared-26, neither-23)
dep(was-2, knew-24)
conj_and(dreaming-8, knew-24)
conj_and(dreaming-8, cared-26)
conj_nor(knew-24, cared-26)
prep_about(cared-26, anything-28)
prep_around(cared-26, her-30)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (DT a) (JJ strange) (NN look))
        (NP (PDT all) (DT the) (NN night))
        (VP (VBD wore)
          (SBAR (IN while)
            (S
              (NP (DT the) (JJ tired) (JJ old) (NN moon))
              (VP (VBD was)
                (ADVP (RB thus))
                (VP (VBG dreaming)
                  (PP (IN of)
                    (NP (DT the) (NN time)))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP she))
                      (VP (MD would)
                        (VP (VB come)
                          (ADVP (RB again))
                          (, ,)
                          (ADVP (RB back)
                            (PP (IN through)
                              (NP
                                (NP
                                  (NP (DT the) (VBG vanishing))
                                  (CC and)
                                  (NP (DT the) (NNS darkness)))
                                (: --)
                                (NP
                                  (NP (DT a) (JJ single) (JJ curved) (NN thread))
                                  (PP (IN of)
                                    (NP (DT a) (NN baby) (NN moon)))))))))))))))
          (, ,)
          (S
            (VP (TO to)
              (VP (VB grow)
                (CC and)
                (VB grow)
                (PP (TO to)
                  (NP (DT a) (JJ great) (JJ full-grown) (NN lady) (NN moon)))))))))
    (, ,)
    (S
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB cross)
              (PP (IN with)
                (ADJP (JJ fearless))))))))
    (VP
      (VP (VBP gaze)
        (NP
          (NP (DT the) (NN gulf))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ vaulted) (NNS heavens))
              (: --)
              (ADVP (RB alone))
              (, ,)
              (PP (IN with)
                (NP (DT neither) (NN sleep)))))))
      (CC nor)
      (VP (VBZ dreams)
        (S
          (VP (TO to)
            (VP (VB protect)
              (NP (PRP her)))))))
    (. !)))

dobj(wore-8, What-1)
nsubj(grow-44, What-1)
nsubj(grow-46, What-1)
det(look-4, a-2)
amod(look-4, strange-3)
nsubj(wore-8, look-4)
predet(night-7, all-5)
det(night-7, the-6)
nsubj(wore-8, night-7)
dep(gaze-59, wore-8)
mark(dreaming-16, while-9)
det(moon-13, the-10)
amod(moon-13, tired-11)
amod(moon-13, old-12)
nsubj(dreaming-16, moon-13)
aux(dreaming-16, was-14)
advmod(dreaming-16, thus-15)
advcl(wore-8, dreaming-16)
det(time-19, the-18)
prep_of(dreaming-16, time-19)
advmod(come-23, when-20)
nsubj(come-23, she-21)
aux(come-23, would-22)
advcl(dreaming-16, come-23)
advmod(come-23, again-24)
advmod(come-23, back-26)
prep_through(back-26, the-28)
amod(the-28, vanishing-29)
det(darkness-32, the-31)
prep_through(back-26, darkness-32)
conj_and(the-28, darkness-32)
det(thread-37, a-34)
amod(thread-37, single-35)
amod(thread-37, curved-36)
dep(the-28, thread-37)
det(moon-41, a-39)
nn(moon-41, baby-40)
prep_of(thread-37, moon-41)
aux(grow-44, to-43)
xcomp(wore-8, grow-44)
xcomp(wore-8, grow-46)
conj_and(grow-44, grow-46)
det(moon-52, a-48)
amod(moon-52, great-49)
amod(moon-52, full-grown-50)
nn(moon-52, lady-51)
prep_to(grow-44, moon-52)
csubj(gaze-59, able-54)
csubj(dreams-73, able-54)
aux(cross-56, to-55)
xcomp(able-54, cross-56)
prep_with(cross-56, fearless-58)
root(ROOT-0, gaze-59)
det(gulf-61, the-60)
dobj(gaze-59, gulf-61)
det(heavens-65, the-63)
amod(heavens-65, vaulted-64)
prep_of(gulf-61, heavens-65)
advmod(heavens-65, alone-67)
det(sleep-71, neither-70)
prep_with(heavens-65, sleep-71)
conj_nor(gaze-59, dreams-73)
aux(protect-75, to-74)
xcomp(dreams-73, protect-75)
dobj(protect-75, her-76)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP
        (NP (JJ many) (JJ other) (NNS nights))
        (, ,)
        (ADJP (RB far) (RBR more) (JJ commonplace))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (RB yet) (NNP Willie))
            (VP (VBD liked)
              (UCP (RB well)
                (S
                  (VP (TO to)
                    (VP (VB look)
                      (PRT (RP out))
                      (PP (RB upon)))))
                (, ,)
                (CC but)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (MD could) (RB not)
                      (VP (VB keep)
                        (NP (PRP him))
                        (ADVP (RB long))
                        (PP (IN from)
                          (NP (PRP$ his) (NN bed)))))))))))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
amod(nights-5, many-3)
amod(nights-5, other-4)
nsubj(were-2, nights-5)
dobj(liked-14, nights-5)
advmod(commonplace-9, far-7)
advmod(commonplace-9, more-8)
amod(nights-5, commonplace-9)
advmod(Willie-13, yet-12)
nsubj(liked-14, Willie-13)
rcmod(nights-5, liked-14)
dep(liked-14, well-15)
aux(look-17, to-16)
dep(well-15, look-17)
prt(look-17, out-18)
prep(look-17, upon-19)
nsubj(keep-25, which-22)
aux(keep-25, could-23)
neg(keep-25, not-24)
dep(liked-14, keep-25)
conj_but(well-15, keep-25)
dobj(keep-25, him-26)
advmod(keep-25, long-27)
poss(bed-30, his-29)
prep_from(keep-25, bed-30)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was) (, ,)
      (PP (IN for)
        (NP
          (NP (NN instance))
          (, ,)
          (NP (DT the) (NNS moonless))
          (CC and)
          (NP (NN cloudy))))
      (NP (NN night))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (, ,)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (VBD had)
                (VP (VBN been)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB pierce)
                          (NP (DT the) (NNS darkness))
                          (PP (TO to)
                            (NP (DT the) (NN core)))))))))))
          (, ,)
          (NP (PRP he))
          (VP
            (VP (MD would)
              (VP (VB have)
                (VP (VBN found)
                  (NP (NN nothing)))))
            (CC but)
            (VP (VBZ blackness))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
prep_for(was-2, instance-5)
det(moonless-8, the-7)
prep_for(was-2, moonless-8)
conj_and(instance-5, moonless-8)
prep_for(was-2, cloudy-10)
conj_and(instance-5, cloudy-10)
nsubj(was-2, night-11)
tmod(was-2, night-11)
advmod(found-31, when-13)
mark(able-19, if-15)
nsubj(able-19, he-16)
nsubj(pierce-21, he-16)
aux(able-19, had-17)
cop(able-19, been-18)
advcl(found-31, able-19)
aux(pierce-21, to-20)
xcomp(able-19, pierce-21)
det(darkness-23, the-22)
dobj(pierce-21, darkness-23)
det(core-26, the-25)
prep_to(pierce-21, core-26)
nsubj(found-31, he-28)
nsubj(blackness-34, he-28)
aux(found-31, would-29)
aux(found-31, have-30)
advcl(was-2, found-31)
dobj(found-31, nothing-32)
advcl(was-2, blackness-34)
conj_but(found-31, blackness-34)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD had)
        (NP
          (NP (DT a) (NN power))
          (PP (IN of)
            (NP (PRP$ its) (JJ own))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP one))
      (VP (MD can) (RB not)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD had)
                (ADVP (RB much))
                (S
                  (VP (TO to)
                    (VP (VB look)
                      (PP (IN at)))))))))))
    (. .)))

nsubj(had-2, It-1)
root(ROOT-0, had-2)
det(power-4, a-3)
dobj(had-2, power-4)
poss(own-7, its-6)
prep_of(power-4, own-7)
nsubj(say-13, one-10)
aux(say-13, can-11)
neg(say-13, not-12)
conj_but(had-2, say-13)
nsubj(had-15, it-14)
nsubj(look-18, it-14)
ccomp(say-13, had-15)
advmod(had-15, much-16)
aux(look-18, to-17)
xcomp(had-15, look-18)
prep(look-18, at-19)

(ROOT
  (S
    (PP (IN On)
      (NP (PDT such) (DT a) (NN night)))
    (NP (PRP he))
    (VP (MD would)
      (VP
        (VP (VB say)
          (PP (TO to)
            (NP (PRP himself)))
          (SBAR (IN that)
            (S
              (NP (DT the) (NN day))
              (VP (VBD was)
                (ADJP (RB so) (JJ sound))
                (S
                  (ADJP (JJ asleep)
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBD was)
                          (VP (VBG dreaming)
                            (PP (IN of)
                              (NP (NN nothing)))
                            (ADVP (IN at) (DT all))))))))))))
        (, ,)
        (CC and)
        (VP (VB make)
          (NP (NN haste))
          (PP (TO to)
            (NP (PRP$ his) (NN nest))))))
    (. .)))

predet(night-4, such-2)
det(night-4, a-3)
prep_on(say-7, night-4)
nsubj(say-7, he-5)
nsubj(make-26, he-5)
aux(say-7, would-6)
root(ROOT-0, say-7)
prep_to(say-7, himself-9)
mark(sound-15, that-10)
det(day-12, the-11)
nsubj(sound-15, day-12)
cop(sound-15, was-13)
advmod(sound-15, so-14)
ccomp(say-7, sound-15)
dep(sound-15, asleep-16)
nsubj(dreaming-19, he-17)
aux(dreaming-19, was-18)
ccomp(asleep-16, dreaming-19)
prep_of(dreaming-19, nothing-21)
advmod(dreaming-19, at-22)
pobj(at-22, all-23)
conj_and(say-7, make-26)
dobj(make-26, haste-27)
poss(nest-30, his-29)
prep_to(make-26, nest-30)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (ADVP (RB again))
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJ cold) (NN night))
          (PP (IN of)
            (NP (JJ black) (NN frost))))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (EX there))
            (VP (VBD was)
              (ADJP (JJ cloud) (RB enough)
                (S
                  (VP (TO to)
                    (VP (VB hide)
                      (NP
                        (NP (DT the) (NNS stars))
                        (CC and)
                        (NP (DT the) (NN moon))))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB yet))
      (NP (DT a) (JJ little) (NN light))
      (VP (VBD came)
        (S
          (VP (VBG soaking)
            (PRT (RP through))))
        (, ,)
        (S
          (ADVP (RB enough))
          (VP (TO to)
            (VP (VB reveal)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP
                    (ADJP (JJ hopeless)
                      (CC and)
                      (JJ dreary))
                    (DT the) (NN earth))
                  (VP (VBD was)))))))))
    (. .)))

advmod(was-4, Then-1)
advmod(was-4, again-2)
expl(was-4, there-3)
root(ROOT-0, was-4)
det(night-7, the-5)
amod(night-7, cold-6)
nsubj(was-4, night-7)
amod(frost-10, black-9)
prep_of(night-7, frost-10)
advmod(was-14, when-12)
expl(was-14, there-13)
advcl(was-4, was-14)
acomp(was-14, cloud-15)
advmod(cloud-15, enough-16)
aux(hide-18, to-17)
xcomp(cloud-15, hide-18)
det(stars-20, the-19)
dobj(hide-18, stars-20)
det(moon-23, the-22)
dobj(hide-18, moon-23)
conj_and(stars-20, moon-23)
advmod(came-30, yet-26)
det(light-29, a-27)
amod(light-29, little-28)
nsubj(came-30, light-29)
nsubj(reveal-36, light-29)
conj_and(was-4, came-30)
xcomp(came-30, soaking-31)
prt(soaking-31, through-32)
advmod(reveal-36, enough-34)
aux(reveal-36, to-35)
xcomp(came-30, reveal-36)
advmod(was-43, how-37)
amod(earth-42, hopeless-38)
conj_and(hopeless-38, dreary-40)
amod(earth-42, dreary-40)
det(earth-42, the-41)
nsubj(was-43, earth-42)
ccomp(reveal-36, was-43)

(ROOT
  (S
    (PP (IN For)
      (PP (IN in)
        (NP
          (NP (JJ such) (NNS nights))
          (PP (IN of)
            (NP (NN cold))))))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP (DT no) (NN snow)
            (S
              (VP (TO to)
                (VP (VB cover)
                  (NP (PRP them)))))))))
    (, ,)
    (S
      (NP
        (NP (DT the) (NNS flowers))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP have)
              (VP (VBN crept)
                (PP (IN into)
                  (NP (PRP$ their) (NNS roots)
                    (S
                      (VP (TO to)
                        (VP (VB hide)
                          (PP (IN from)
                            (NP (DT the) (NN winter)))))))))))))
      (VP (VBP are) (RB not)
        (ADJP (RB even) (JJ able)
          (PP (TO to)
            (NP
              (NP (NN dream))
              (PP (IN of)
                (NP (DT the) (NN spring))))))))
    (: ;)
    (S
      (LST (: --))
      (NP (PRP they))
      (VP
        (VP (VBP grow)
          (ADJP (RB quite) (JJ stupid)
            (CC and)
            (JJ benumbed)))
        (, ,)
        (CC and)
        (VP (VBP sleep)
          (ADVP (RB outright))
          (PP (IN like)
            (NP
              (NP (DT a) (JJ polar) (NN bear))
              (CC or)
              (NP (DT a) (NN dormouse)))))))
    (. .)))

prep(able-33, For-1)
pcomp(For-1, in-2)
amod(nights-4, such-3)
pobj(in-2, nights-4)
prep_of(nights-4, cold-6)
advmod(is-10, when-8)
expl(is-10, there-9)
advcl(able-33, is-10)
neg(snow-12, no-11)
nsubj(is-10, snow-12)
aux(cover-14, to-13)
vmod(snow-12, cover-14)
dobj(cover-14, them-15)
det(flowers-18, the-17)
nsubj(crept-21, flowers-18)
nsubj(able-33, flowers-18)
aux(crept-21, have-20)
rcmod(flowers-18, crept-21)
poss(roots-24, their-23)
prep_into(crept-21, roots-24)
aux(hide-26, to-25)
vmod(roots-24, hide-26)
det(winter-29, the-28)
prep_from(hide-26, winter-29)
cop(able-33, are-30)
neg(able-33, not-31)
advmod(able-33, even-32)
root(ROOT-0, able-33)
prep_to(able-33, dream-35)
det(spring-38, the-37)
prep_of(dream-35, spring-38)
nsubj(grow-42, they-41)
nsubj(sleep-49, they-41)
parataxis(able-33, grow-42)
advmod(stupid-44, quite-43)
acomp(grow-42, stupid-44)
acomp(grow-42, benumbed-46)
conj_and(stupid-44, benumbed-46)
parataxis(able-33, sleep-49)
conj_and(grow-42, sleep-49)
advmod(sleep-49, outright-50)
det(bear-54, a-52)
amod(bear-54, polar-53)
prep_like(sleep-49, bear-54)
det(dormouse-57, a-56)
prep_like(sleep-49, dormouse-57)
conj_or(bear-54, dormouse-57)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB never))
    (VP (MD could)
      (VP (VB look)
        (ADVP (RB long))
        (PP (IN at)
          (NP (PDT such) (DT a) (NN night)))))
    (. .)))

nsubj(look-4, He-1)
neg(look-4, never-2)
aux(look-4, could-3)
root(ROOT-0, look-4)
advmod(look-4, long-5)
predet(night-9, such-7)
det(night-9, a-8)
prep_at(look-4, night-9)

(ROOT
  (S
    (S
      (NP (DT Neither))
      (VP (VBD did)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBP care)
              (S
                (VP (TO to)
                  (VP (VB look)
                    (SBAR
                      (SBAR
                        (WHADVP (RB long) (WRB when))
                        (S
                          (NP (DT a) (JJ loud) (NN wind))
                          (VP (VBD was)
                            (ADVP (RB out)))))
                      (: --)
                      (SBAR (IN except)
                        (S
                          (NP (DT the) (NN moon))
                          (VP (VBD was)
                            (ADJP (JJ bright)))))
                      (: ;)
                      (SBAR (IN for)
                        (S
                          (NP
                            (NP (DT the) (JJS most))
                            (SBAR
                              (S
                                (NP (PRP he))
                                (VP (MD could)
                                  (VP (VB distinguish))))))
                          (VP (VBD was)
                            (NP
                              (NP (DT the) (NNS trees))
                              (VP (VBG blowing)
                                (PP (IN against)
                                  (NP (DT the) (NN sky)))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (ADVP (RB always))
      (VP (VBD seemed)
        (S (RB not)
          (VP
            (VP (TO to)
              (VP (VB like)
                (NP (PRP it))))
            (, ,)
            (CC and)
            (VP (TO to)
              (VP (VB want)
                (S
                  (VP (TO to)
                    (VP (VB stop))))))))))
    (. .)))

nsubj(did-2, Neither-1)
root(ROOT-0, did-2)
nsubj(care-4, he-3)
nsubj(look-6, he-3)
ccomp(did-2, care-4)
aux(look-6, to-5)
xcomp(care-4, look-6)
advmod(when-8, long-7)
advmod(was-12, when-8)
det(wind-11, a-9)
amod(wind-11, loud-10)
nsubj(was-12, wind-11)
advcl(look-6, was-12)
advmod(was-12, out-13)
mark(bright-19, except-15)
det(moon-17, the-16)
nsubj(bright-19, moon-17)
cop(bright-19, was-18)
dep(was-12, bright-19)
mark(trees-29, for-21)
det(most-23, the-22)
nsubj(trees-29, most-23)
nsubj(distinguish-26, he-24)
aux(distinguish-26, could-25)
rcmod(most-23, distinguish-26)
cop(trees-29, was-27)
det(trees-29, the-28)
dep(was-12, trees-29)
vmod(trees-29, blowing-30)
det(sky-33, the-32)
prep_against(blowing-30, sky-33)
nsubj(seemed-38, they-36)
advmod(seemed-38, always-37)
conj_and(did-2, seemed-38)
neg(like-41, not-39)
aux(like-41, to-40)
ccomp(seemed-38, like-41)
dobj(like-41, it-42)
aux(want-46, to-45)
ccomp(seemed-38, want-46)
conj_and(like-41, want-46)
aux(stop-48, to-47)
xcomp(want-46, stop-48)

(ROOT
  (FRAG (CC And)
    (SBAR (IN if)
      (S
        (NP (DT the) (JJ big) (JJ strong) (NNS trees))
        (VP
          (VP (VBD did) (RB not)
            (VP (VB like)
              (NP (PRP it))
              (, ,)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (VP (MD could)
                    (S
                      (NP
                        (NP (DT the) (JJ poor) (JJ little) (JJ delicate) (NNS flowers))
                        (, ,)
                        (VP (VBG shivering)
                          (CC and)
                          (VBG shaking)))))))))
          (CC and)
          (VP (VBD tossed)
            (ADVP (TO to)
              (CC and)
              (RB fro))))))
    (. ?)))

mark(like-9, if-2)
det(trees-6, the-3)
amod(trees-6, big-4)
amod(trees-6, strong-5)
nsubj(like-9, trees-6)
nsubj(tossed-24, trees-6)
aux(like-9, did-7)
neg(like-9, not-8)
root(ROOT-0, like-9)
dobj(like-9, it-10)
advmod(could-13, how-12)
dep(like-9, could-13)
det(flowers-18, the-14)
amod(flowers-18, poor-15)
amod(flowers-18, little-16)
amod(flowers-18, delicate-17)
dep(could-13, flowers-18)
vmod(flowers-18, shivering-20)
vmod(flowers-18, shaking-22)
conj_and(shivering-20, shaking-22)
conj_and(like-9, tossed-24)
advmod(tossed-24, to-25)
advmod(tossed-24, fro-27)
conj_and(to-25, fro-27)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB have)
              (VP (VBN seen)
                (S
                  (NP (DT the) (NN wind))
                  (NP (PRP itself))))))))
      (, ,)
      (NP (PRP it))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (NP (DT a) (JJ different) (NN thing))))))
    (: ;)
    (S (CC but)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBD was))))
      (, ,)
      (NP (PRP he))
      (VP (MD could)
        (VP (VB enjoy)
          (S
            (NP (PRP it))
            (ADJP (JJR more)
              (PP (IN by)
                (S
                  (VP
                    (VP (VBG lying)
                      (PP (IN in)
                        (NP (NN bed))))
                    (CC and)
                    (VP (VBG listening)
                      (PP (TO to)
                        (NP (PRP it))))))))))))
    (. .)))

mark(seen-5, If-1)
nsubj(seen-5, he-2)
aux(seen-5, could-3)
aux(seen-5, have-4)
advcl(thing-16, seen-5)
det(wind-7, the-6)
nsubj(itself-8, wind-7)
xcomp(seen-5, itself-8)
nsubj(thing-16, it-10)
aux(thing-16, would-11)
aux(thing-16, have-12)
cop(thing-16, been-13)
det(thing-16, a-14)
amod(thing-16, different-15)
root(ROOT-0, thing-16)
cc(enjoy-25, but-18)
mark(was-21, as-19)
nsubj(was-21, it-20)
advcl(enjoy-25, was-21)
nsubj(enjoy-25, he-23)
aux(enjoy-25, could-24)
parataxis(thing-16, enjoy-25)
nsubj(more-27, it-26)
xcomp(enjoy-25, more-27)
prepc_by(more-27, lying-29)
prep_in(lying-29, bed-31)
prepc_by(more-27, listening-33)
conj_and(lying-29, listening-33)
prep_to(listening-33, it-35)

(ROOT
  (S (RB Then)
    (SBAR (IN as)
      (S
        (NP (PRP he))
        (VP (VBD listened)
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB fancy)
                  (S
                    (NP (PRP himself))
                    (VP (VBG floating)
                      (PRT (RP out))
                      (PP (IN through)
                        (NP
                          (NP
                            (NP (NNS miles)
                              (CC and)
                              (NNS miles))
                            (PP (IN of)
                              (NP (NN night)
                                (CC and)
                                (NN wind))))
                          (, ,)
                          (CC and)
                          (NP
                            (NP
                              (ADJP
                                (ADJP (JJ moon-and-star-light))
                                (, ,)
                                (CC or)
                                (ADJP (RB moony) (JJ snowflakes))
                                (, ,)
                                (CC or)
                                (ADJP (RB even) (JJ thick)))
                              (NNS darkness))
                            (CC and)
                            (NP (NN rain)))
                          (: ;)))
                      (PP (IN until))
                      (, ,)
                      (S
                        (VP (VBG falling)
                          (S
                            (ADJP (RB asleep)))
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NN middle))
                              (PP (IN of)
                                (NP (PRP$ his) (NN fancy))))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB thicken)
        (PRT (RP around))
        (NP (PRP him))
        (PP (IN into)
          (NP
            (NP (DT a) (NN dream))
            (PP (IN of)
              (NP (NN delight)))))))
    (. .)))

advmod(thicken-47, Then-1)
mark(listened-4, as-2)
nsubj(listened-4, he-3)
advcl(thicken-47, listened-4)
nsubj(fancy-7, he-5)
aux(fancy-7, could-6)
ccomp(listened-4, fancy-7)
nsubj(floating-9, himself-8)
dep(fancy-7, floating-9)
prt(floating-9, out-10)
prep_through(floating-9, miles-12)
prep_through(floating-9, miles-14)
conj_and(miles-12, miles-14)
prep_of(miles-12, night-16)
prep_of(miles-12, wind-18)
conj_and(night-16, wind-18)
amod(darkness-30, moon-and-star-light-21)
advmod(snowflakes-25, moony-24)
conj_or(moon-and-star-light-21, snowflakes-25)
amod(darkness-30, snowflakes-25)
advmod(thick-29, even-28)
conj_or(moon-and-star-light-21, thick-29)
amod(darkness-30, thick-29)
prep_through(floating-9, darkness-30)
conj_and(miles-12, darkness-30)
conj_and(miles-12, rain-32)
conj_and(darkness-30, rain-32)
prep(floating-9, until-34)
vmod(floating-9, falling-36)
dep(falling-36, asleep-37)
det(middle-40, the-39)
prep_in(falling-36, middle-40)
poss(fancy-43, his-42)
prep_of(middle-40, fancy-43)
nsubj(thicken-47, it-45)
aux(thicken-47, would-46)
root(ROOT-0, thicken-47)
prt(thicken-47, around-48)
dobj(thicken-47, him-49)
det(dream-52, a-51)
prep_into(thicken-47, dream-52)
prep_of(dream-52, delight-54)

(ROOT
  (S
    (ADVP (RB Once))
    (NP (EX there))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT an) (NN eclipse))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN moon))
                  (PP (IN about)
                    (NP (CD two) (RB o'clock)))))
              (PP (IN in)
                (NP (DT the) (NN morning))))))))
    (. .)))

advmod(was-3, Once-1)
expl(was-3, there-2)
root(ROOT-0, was-3)
aux(eclipse-7, to-4)
cop(eclipse-7, be-5)
det(eclipse-7, an-6)
xcomp(was-3, eclipse-7)
det(moon-10, the-9)
prep_of(eclipse-7, moon-10)
prep_about(moon-10, two-12)
advmod(two-12, o'clock-13)
det(morning-16, the-15)
prep_in(eclipse-7, morning-16)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN pity))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (ADJP
                  (ADJP (RB so) (JJ late))
                  (, ,)
                  (CC or)
                  (ADJP (RB rather) (RB so) (JJ early)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Macmichael))
    (. .)))

nsubj(pity-5, It-2)
cop(pity-5, 's-3)
det(pity-5, a-4)
ccomp(said-17, pity-5)
nsubj(late-9, it-6)
nsubj(early-14, it-6)
cop(late-9, 's-7)
advmod(late-9, so-8)
rcmod(pity-5, late-9)
advmod(early-14, rather-12)
advmod(early-14, so-13)
rcmod(pity-5, early-14)
conj_or(late-9, early-14)
root(ROOT-0, said-17)
nn(Macmichael-19, Mr-18)
nsubj(said-17, Macmichael-19)

(ROOT
  (S (`` ``)
    (NP
      (NP (PRP You))
      (, ,)
      (NP (NNP Willie))
      (, ,))
    (VP (MD wo) (RB n't)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (PRP it))))))))
    (. .) ('' '')))

nsubj(able-9, You-2)
nsubj(see-11, You-2)
appos(You-2, Willie-4)
aux(able-9, wo-6)
neg(able-9, n't-7)
cop(able-9, be-8)
root(ROOT-0, able-9)
aux(see-11, to-10)
xcomp(able-9, see-11)
dobj(see-11, it-12)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh) (, ,) (UH yes))
    (, ,)
    (NP (PRP I))
    (VP
      (VP (MD shall))
      (, ,)
      (NP
        (NP (NN father))
        (, ,) ('' '')
        (VP (VBN answered)
          (NP (NNP Willie)))))
    (. .)))

discourse(shall-7, Oh-2)
dep(Oh-2, yes-4)
nsubj(shall-7, I-6)
root(ROOT-0, shall-7)
dobj(shall-7, father-9)
vmod(father-9, answered-12)
dobj(answered-12, Willie-13)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB let)
        (S
          (NP (PRP you))
          (VP (VB sit)
            (ADVP (RB up) (RB so) (RB late))))))
    (. .)))

nsubj(let-5, I-2)
aux(let-5, ca-3)
neg(let-5, n't-4)
root(ROOT-0, let-5)
nsubj(sit-7, you-6)
ccomp(let-5, sit-7)
advmod(late-10, up-8)
advmod(late-10, so-9)
advmod(sit-7, late-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB be)
        (PP (IN in)
          (NP
            (NP (DT the) (NN middle))
            (PP (IN of)
              (NP
                (NP (NNP Sedgy) (NNP Moor))
                (ADJP (RBS most) (JJ likely))))))
        (SBAR
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP it))
              (VP (VBZ begins))))
          (: --)
          (CC and)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ is)
                (S
                  (VP (TO to)
                    (VP (VB wake)
                      (NP (PRP you)))))))))))
    (. ?)))

nsubj(be-3, I-1)
aux(be-3, shall-2)
root(ROOT-0, be-3)
det(middle-6, the-5)
prep_in(be-3, middle-6)
nn(Moor-9, Sedgy-8)
prep_of(middle-6, Moor-9)
advmod(likely-11, most-10)
amod(Moor-9, likely-11)
advmod(begins-14, when-12)
nsubj(begins-14, it-13)
advcl(be-3, begins-14)
nsubj(is-18, who-17)
nsubj(wake-20, who-17)
advcl(be-3, is-18)
conj_and(begins-14, is-18)
aux(wake-20, to-19)
xcomp(is-18, wake-20)
dobj(wake-20, you-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD wo) (RB n't)
        (VP (VB have)
          (NP
            (NP (PRP$ your) (NN mother))
            (VP (VBN disturbed))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Tibby))
      (VP (VBZ 's) (RB not)
        (ADJP (JJ much)
          (S
            (VP (TO to)
              (VP (VB depend)
                (PP (RB upon))))))))
    (. .)))

nsubj(have-4, I-1)
aux(have-4, wo-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
poss(mother-6, your-5)
dobj(have-4, mother-6)
vmod(mother-6, disturbed-7)
nsubj(much-13, Tibby-10)
nsubj(depend-15, Tibby-10)
cop(much-13, 's-11)
neg(much-13, not-12)
conj_and(have-4, much-13)
aux(depend-15, to-14)
xcomp(much-13, depend-15)
prep(depend-15, upon-16)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ 's)
      (ADJP (RB too) (JJ hard-worked)
        (PP (TO to)
          (NP (NN wake))))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP she))
          (VP
            (VP (VBZ likes))
            (, ,)
            (NP
              (ADJP (JJ poor) (JJ old))
              (NN thing))))))
    (. .) ('' '')))

nsubj(hard-worked-4, She-1)
cop(hard-worked-4, 's-2)
advmod(hard-worked-4, too-3)
root(ROOT-0, hard-worked-4)
prep_to(hard-worked-4, wake-6)
advmod(likes-9, when-7)
nsubj(likes-9, she-8)
advcl(hard-worked-4, likes-9)
amod(old-12, poor-11)
amod(thing-13, old-12)
dobj(likes-9, thing-13)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN woke)
          (PP (IN without)
            (NP (NN anybody)))
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (PRP it))))))))
    (. !) ('' '')))

discourse(woke-7, Oh-2)
nsubjpass(woke-7, I-4)
nsubj(do-11, I-4)
aux(woke-7, can-5)
auxpass(woke-7, be-6)
root(ROOT-0, woke-7)
prep_without(woke-7, anybody-9)
aux(do-11, to-10)
xcomp(woke-7, do-11)
dobj(do-11, it-12)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB depend)
                (PP (IN on)
                  (NP (PRP$ your) (NN water-wheel)
                    (S
                      (VP (TO to)
                        (VP (VBP wake)
                          (NP (PRP you))
                          (PP (IN at)
                            (NP (DT the) (JJ right) (NN time)))
                          (, ,) (VBP do)
                          (NP (PRP you)))))))))))))
    (. ?) ('' '')))

nsubj(mean-5, You-2)
aux(mean-5, do-3)
neg(mean-5, n't-4)
root(ROOT-0, mean-5)
nsubj(depend-8, you-6)
aux(depend-8, can-7)
ccomp(mean-5, depend-8)
poss(water-wheel-11, your-10)
prep_on(depend-8, water-wheel-11)
aux(wake-13, to-12)
vmod(water-wheel-11, wake-13)
dobj(wake-13, you-14)
det(time-18, the-16)
amod(time-18, right-17)
prep_at(wake-13, time-18)
dep(wake-13, do-20)
dobj(wake-13, you-21)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP do))
    (, ,)
    (X
      (NP (NN father)))
    (. .)))

discourse(do-5, Yes-2)
nsubj(do-5, I-4)
root(ROOT-0, do-5)
dep(do-5, father-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD will)
          (VP (VB tell)
            (NP (PRP me))
            (SBAR
              (WHADVP (RB exactly) (WRB when))
              (S
                (NP (DT the) (NN eclipse))
                (VP (VBZ is)
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB begin))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB set)
        (NP (PRP$ my) (NN wakener))
        (SBAR (RB so) (IN that)
          (S
            (NP (PRP it))
            (VP (MD shall)
              (VP (VB wake)
                (NP (PRP me))
                (ADVP
                  (NP (DT a) (NN quarter-of-an-hour))
                  (IN before))
                (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (MD may)
                      (VP (VB be)
                        (ADJP (JJ sure)
                          (PP (IN of)
                            (S
                              (VP (VBG seeing)
                                (NP
                                  (NP (DT the)
                                    (ADJP (RB very) (JJ first)))
                                  (PP (IN of)
                                    (NP (PRP it))))))))))))))))))
    (. .) ('' '')))

mark(tell-4, If-1)
nsubj(tell-4, you-2)
aux(tell-4, will-3)
advcl(set-17, tell-4)
dobj(tell-4, me-5)
advmod(when-7, exactly-6)
advmod(going-11, when-7)
det(eclipse-9, the-8)
nsubj(going-11, eclipse-9)
nsubj(begin-13, eclipse-9)
aux(going-11, is-10)
ccomp(tell-4, going-11)
aux(begin-13, to-12)
xcomp(going-11, begin-13)
nsubj(set-17, I-15)
aux(set-17, will-16)
root(ROOT-0, set-17)
poss(wakener-19, my-18)
dobj(set-17, wakener-19)
advmod(wake-24, so-20)
mark(wake-24, that-21)
nsubj(wake-24, it-22)
aux(wake-24, shall-23)
advcl(set-17, wake-24)
dobj(wake-24, me-25)
det(quarter-of-an-hour-27, a-26)
npadvmod(before-28, quarter-of-an-hour-27)
advmod(wake-24, before-28)
mark(sure-34, that-30)
nsubj(sure-34, I-31)
aux(sure-34, may-32)
cop(sure-34, be-33)
ccomp(wake-24, sure-34)
prepc_of(sure-34, seeing-36)
det(first-39, the-37)
advmod(first-39, very-38)
dobj(seeing-36, first-39)
prep_of(first-39, it-41)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB be)
        (ADJP (IN worth)
          (NP
            (NP (NN something))
            (PP (TO to)
              (NP (PRP you)))))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (MD can)
              (VP (VB do)
                (NP (DT that))))))))
    (. !) ('' '')))

discourse(worth-7, Well-2)
nsubj(worth-7, it-4)
aux(worth-7, will-5)
cop(worth-7, be-6)
root(ROOT-0, worth-7)
dep(worth-7, something-8)
prep_to(something-8, you-10)
mark(do-15, if-12)
nsubj(do-15, it-13)
aux(do-15, can-14)
advcl(worth-7, do-15)
dobj(do-15, that-16)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Mr) (NNP Macmichael)))
    (. .)))

root(ROOT-0, said-1)
nn(Macmichael-3, Mr-2)
dobj(said-1, Macmichael-3)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (VP (VBN been)
          (PP (IN worth)
            (NP (DT a) (JJ great) (NN deal)))
          (PP (TO to)
            (NP (PRP me)))
          (, ,)
          (ADVP (RB already)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubjpass(been-4, It-2)
auxpass(been-4, 's-3)
ccomp(said-15, been-4)
det(deal-8, a-6)
amod(deal-8, great-7)
prep_worth(been-4, deal-8)
prep_to(been-4, me-10)
advmod(been-4, already-12)
root(ROOT-0, said-15)
nsubj(said-15, Willie-16)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN shown)
            (S
              (NP (PRP me))
              (NP
                (NP (DT an) (NN eclipse))
                (PP (IN before)
                  (NP (RB now)))))))))
    (, ,)
    (ADVP (RB only))
    (S
      (NP (EX there))
      (VP (VBZ has) (RB n't)
        (VP (VBN been)
          (NP (CD one))
          (SBAR (IN since)
            (S
              (NP (PRP I))
              (VP (VBD set)
                (S
                  (NP (PRP it))
                  (VP (VBG going)))))))))
    (. .) ('' '')))

nsubj(shown-5, It-2)
aux(shown-5, would-3)
aux(shown-5, have-4)
root(ROOT-0, shown-5)
nsubj(eclipse-8, me-6)
det(eclipse-8, an-7)
xcomp(shown-5, eclipse-8)
prep(eclipse-8, before-9)
pobj(before-9, now-10)
advmod(one-17, only-12)
expl(one-17, there-13)
aux(one-17, has-14)
neg(one-17, n't-15)
cop(one-17, been-16)
parataxis(shown-5, one-17)
mark(set-20, since-18)
nsubj(set-20, I-19)
advcl(one-17, set-20)
nsubj(going-22, it-21)
dep(set-20, going-22)

(ROOT
  (S (CC And)
    (VP (VBP wake)
      (NP (PRP him))
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD did)))))
    (. .)))

cc(wake-2, And-1)
root(ROOT-0, wake-2)
dobj(wake-2, him-3)
nsubj(did-5, it-4)
dep(wake-2, did-5)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (PRP$ his) (NN father))
        (VP (VBD was)
          (VP (VBG riding)
            (PP (IN across)
              (NP (DT the) (NN moor)))))))
    (, ,)
    (PP (IN in)
      (NP
        (NP (DT the) (JJ strange) (NN hush))
        (PP (IN of)
          (NP (DT the) (JJ blotted) (NN moon)))))
    (, ,)
    (NP (NNP Willie))
    (VP (VBD was)
      (ADVP (IN out)
        (PP (IN in)
          (NP (DT the) (NN garden))))
      (PP (IN beside)
        (NP (PRP$ his) (JJ motionless) (NN wheel)))
      (, ,)
      (VP (VBG watching)
        (NP
          (NP
            (NP (DT the) (JJ fell) (NN shadow))
            (PP (IN of)
              (NP (DT the) (NN earth)))
            (UCP
              (VP
                (VP (VBG passing)
                  (PP (IN over)
                    (NP
                      (NP (DT the) (JJ blessed) (NN face))
                      (PP (IN of)
                        (NP (DT the) (NN moon))))))
                (, ,)
                (CC and)
                (VP (VBG leaving)
                  (NP (PRP$ her) (JJ pure))))
              (CC and)
              (ADJP (JJ clear))))
          (, ,)
          (CC and)
          (NP
            (NP (NN nothing))
            (ADJP (DT the) (JJR worse))))))
    (. .)))

mark(riding-5, While-1)
poss(father-3, his-2)
nsubj(riding-5, father-3)
aux(riding-5, was-4)
advcl(watching-30, riding-5)
det(moor-8, the-7)
prep_across(riding-5, moor-8)
det(hush-13, the-11)
amod(hush-13, strange-12)
prep_in(watching-30, hush-13)
det(moon-17, the-15)
amod(moon-17, blotted-16)
prep_of(hush-13, moon-17)
nsubj(watching-30, Willie-19)
aux(watching-30, was-20)
advmod(watching-30, out-21)
det(garden-24, the-23)
prep_in(out-21, garden-24)
poss(wheel-28, his-26)
amod(wheel-28, motionless-27)
prep_beside(watching-30, wheel-28)
root(ROOT-0, watching-30)
det(shadow-33, the-31)
amod(shadow-33, fell-32)
dobj(watching-30, shadow-33)
det(earth-36, the-35)
prep_of(shadow-33, earth-36)
dep(shadow-33, passing-37)
det(face-41, the-39)
amod(face-41, blessed-40)
prep_over(passing-37, face-41)
det(moon-44, the-43)
prep_of(face-41, moon-44)
dep(shadow-33, leaving-47)
conj_and(passing-37, leaving-47)
poss(pure-49, her-48)
dobj(leaving-47, pure-49)
dep(shadow-33, clear-51)
conj_and(passing-37, clear-51)
dobj(watching-30, nothing-54)
conj_and(shadow-33, nothing-54)
det(worse-56, the-55)
amod(nothing-54, worse-56)

(ROOT
  (NP (NNP CHAPTER) (NNP XII) (. .)))

nn(XII-2, CHAPTER-1)
root(ROOT-0, XII-2)

(ROOT
  (S
    (NP (DT A) (NN NEW))
    (VP (VBP SCHEME))
    (. .)))

det(NEW-2, A-1)
nsubj(SCHEME-3, NEW-2)
root(ROOT-0, SCHEME-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (NP
              (NP (NNP Willie) (POS 's))
              (NN father)
              (CC and)
              (NN mother))
            (VP (VBD used)
              (S
                (VP (TO to)
                  (VP (VB talk)
                    (PP (IN without)
                      (NP
                        (NP (NN restraint))
                        (PP (IN in)
                          (NP (PRP$ his) (NN presence)))))))))))))
    (. .)))

nsubj(said-3, I-1)
aux(said-3, have-2)
root(ROOT-0, said-3)
mark(used-10, that-4)
poss(father-7, Willie-5)
nsubj(used-10, father-7)
nsubj(talk-12, father-7)
conj_and(father-7, mother-9)
nsubj(used-10, mother-9)
nsubj(talk-12, mother-9)
ccomp(said-3, used-10)
aux(talk-12, to-11)
xcomp(used-10, talk-12)
prep_without(talk-12, restraint-14)
poss(presence-17, his-16)
prep_in(restraint-14, presence-17)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD had)
      (NP
        (NP (DT no) (NN fear))
        (PP (IN of)
          (S
            (NP (NNP Willie) (POS 's))
            (VP (VBG committing)
              (NP (DT an) (NN indiscretion))
              (PP (IN by)
                (S
                  (VP (VBG repeating)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP he))
                        (VP (VBD heard))))))))))))
    (. .)))

nsubj(had-2, They-1)
root(ROOT-0, had-2)
neg(fear-4, no-3)
dobj(had-2, fear-4)
nsubj(committing-8, Willie-6)
possessive(Willie-6, 's-7)
prepc_of(fear-4, committing-8)
det(indiscretion-10, an-9)
dobj(committing-8, indiscretion-10)
prepc_by(committing-8, repeating-12)
dobj(heard-15, what-13)
nsubj(heard-15, he-14)
ccomp(repeating-12, heard-15)

(ROOT
  (S
    (NP
      (NP (CD One) (NN day))
      (PP (IN at)
        (NP
          (NP (NN dinner))
          (NP (DT the) (JJ following) (NN conversation)))))
    (VP (VBD took)
      (NP
        (NP (NN place))
        (PP (IN between)
          (NP (PRP them)))))
    (. .)))

num(day-2, One-1)
nsubj(took-8, day-2)
prep_at(day-2, dinner-4)
det(conversation-7, the-5)
amod(conversation-7, following-6)
dep(dinner-4, conversation-7)
root(ROOT-0, took-8)
dobj(took-8, place-9)
prep_between(place-9, them-11)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN had)
          (NP (DT a) (NN letter))
          (PP (IN from)
            (NP
              (NP (PRP$ my) (NN mother))
              (, ,)
              (NP (NNP John)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Mrs) (NNP Macmichael))
      (PP (TO to)
        (NP (PRP$ her) (NN husband))))
    (. .)))

nsubj(had-4, I-2)
aux(had-4, 've-3)
ccomp(said-14, had-4)
det(letter-6, a-5)
dobj(had-4, letter-6)
poss(mother-9, my-8)
prep_from(had-4, mother-9)
appos(mother-9, John-11)
root(ROOT-0, said-14)
nn(Macmichael-16, Mrs-15)
nsubj(said-14, Macmichael-16)
poss(husband-19, her-18)
prep_to(Macmichael-16, husband-19)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ wonderful))
      (SBAR
        (WHADVP (WRB how) (RB well))
        (S
          (NP (PRP she))
          (VP (VBZ manages)
            (S
              (VP (TO to)
                (VP (VB write))))
            (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP she))
                (VP (VBZ sees)
                  (ADVP (RB so) (RB badly)))))))))
    (. .) ('' '')))

nsubj(wonderful-4, It-2)
cop(wonderful-4, 's-3)
root(ROOT-0, wonderful-4)
advmod(well-6, how-5)
advmod(manages-8, well-6)
nsubj(manages-8, she-7)
nsubj(write-10, she-7)
ccomp(wonderful-4, manages-8)
aux(write-10, to-9)
xcomp(manages-8, write-10)
advmod(sees-14, when-12)
nsubj(sees-14, she-13)
advcl(manages-8, sees-14)
advmod(badly-16, so-15)
advmod(sees-14, badly-16)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP She))
      (VP (MD might)
        (VP (VB see)
          (ADVP
            (ADVP (RB well) (RB enough))
            (PRN (: --)
              (FRAG
                (ADVP
                  (ADVP (IN at) (JJS least))
                  (NP (DT a) (JJ great) (NN deal)))
                (ADVP (RB better)))
              (: --))
            (SBAR (IN if)
              (S
                (NP (PRP she))
                (VP (MD would)
                  (VP (VB submit)
                    (PP (TO to)
                      (NP (DT an) (NN operation)))))))))))
    (, ,)
    (VP (VBD said))
    (NP (DT the) (NN doctor))
    (. .)))

nsubj(see-4, She-2)
aux(see-4, might-3)
ccomp(said-23, see-4)
advmod(enough-6, well-5)
advmod(see-4, enough-6)
dep(enough-6, at-8)
pobj(at-8, least-9)
det(deal-12, a-10)
amod(deal-12, great-11)
dep(at-8, deal-12)
dep(at-8, better-13)
mark(submit-18, if-15)
nsubj(submit-18, she-16)
aux(submit-18, would-17)
advcl(enough-6, submit-18)
det(operation-21, an-20)
prep_to(submit-18, operation-21)
root(ROOT-0, said-23)
det(doctor-25, the-24)
nsubj(said-23, doctor-25)

(ROOT
  (S (`` ``)
    (PP (IN At)
      (NP (NNP _)))
    (NP (PRP her))
    (VP (VBZ _)
      (NP
        (NP (NN age))
        (, ,)
        (NP (NNP John))))
    (. !) ('' '')))

prep_at(_-5, _-3)
nsubj(_-5, her-4)
root(ROOT-0, _-5)
dobj(_-5, age-6)
appos(age-6, John-8)

(ROOT
  (S
    (VP (VBD returned)
      (NP (PRP$ his) (NN wife))
      (PP (IN in)
        (NP (DT an) (JJ expostulatory) (NN tone))))
    (. .)))

root(ROOT-0, returned-1)
poss(wife-3, his-2)
dobj(returned-1, wife-3)
det(tone-7, an-5)
amod(tone-7, expostulatory-6)
prep_in(returned-1, tone-7)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (ADVP (RB really))
          (VP (VBP think)
            (S
              (NP (PRP it))
              (ADJP (JJ worth))
              (SBAR (IN while)
                (S
                  (PRN (: --)
                    (PP (IN for)
                      (NP (DT the) (JJ few) (NNS years))))
                  (NP (DT that))
                  (VP (VBP are)
                    (VP (VBN left)
                      (NP (PRP her)))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(think-5, you-3)
advmod(think-5, really-4)
ccomp(Do-2, think-5)
nsubjpass(left-16, it-6)
dep(left-16, worth-7)
mark(left-16, while-8)
dep(left-16, for-10)
det(years-13, the-11)
amod(years-13, few-12)
pobj(for-10, years-13)
nsubjpass(left-16, that-14)
auxpass(left-16, are-15)
xcomp(think-5, left-16)
dobj(left-16, her-17)

(ROOT
  (FRAG (`` ``)
    (ADJP
      (ADJP (JJ Worth))
      (SBAR (IN while)
        (S
          (VP (TO to)
            (VP (VB see)
              (ADVP (RB well))
              (PP (IN for)
                (NP (DT a) (JJ few) (NNS years))))))))
    (. !) ('' '')))

root(ROOT-0, Worth-2)
mark(see-5, while-3)
aux(see-5, to-4)
ccomp(Worth-2, see-5)
advmod(see-5, well-6)
det(years-10, a-8)
amod(years-10, few-9)
prep_for(see-5, years-10)

(ROOT
  (S
    (VP (VB exclaimed)
      (NP (DT the) (NN doctor)))
    (. .)))

root(ROOT-0, exclaimed-1)
det(doctor-3, the-2)
dobj(exclaimed-1, doctor-3)

(ROOT
  (S (`` ``)
    (ADVP (RB Indeed))
    (, ,)
    (NP (PRP I))
    (VP (VBP do))
    (. .) ('' '')))

advmod(do-5, Indeed-2)
nsubj(do-5, I-4)
root(ROOT-0, do-5)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (NP (EX there))
      (VP (VBZ 's)
        (NP
          (NP (DT another) (NN thing))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP want)
                (S
                  (VP (TO to)
                    (VP (VB talk)
                      (PP (TO to)
                        (NP (PRP you)))
                      (PP (IN about)
                        (NP (RB now))))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mrs) (NNP Macmichael))
    (. .)))

cc('s-4, But-2)
expl('s-4, there-3)
ccomp(said-17, 's-4)
det(thing-6, another-5)
nsubj('s-4, thing-6)
nsubj(want-8, I-7)
nsubj(talk-10, I-7)
rcmod(thing-6, want-8)
aux(talk-10, to-9)
xcomp(want-8, talk-10)
prep_to(talk-10, you-12)
prep(talk-10, about-13)
pobj(about-13, now-14)
root(ROOT-0, said-17)
nn(Macmichael-19, Mrs-18)
nsubj(said-17, Macmichael-19)

(ROOT
  (S (`` ``)
    (S
      (PP (IN Since)
        (NP
          (NP
            (NP (JJ old) (NNP Ann) (POS 's))
            (NN death))
          (, ,)
          (ADVP
            (NP (CD six) (NNS months))
            (RB ago))))
      (, ,)
      (NP (PRP she))
      (VP (VBZ says)
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBZ has)
              (VP (VBN been)
                (ADJP (JJ miserable))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP she))
          (VP (VBZ goes)
            (PRT (RP on))
            (PP (IN like)
              (NP (DT this))))))
      (, ,)
      (NP (PRP it))
      (VP (MD will)
        (VP (VB shorten)
          (NP
            (NP (DT the) (JJ few) (NNS days))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP are)
                  (VP (VBN left)
                    (NP (PRP her))))))))))
    (. .)))

amod(Ann-4, old-3)
poss(death-6, Ann-4)
prep_since(says-13, death-6)
num(months-9, six-8)
npadvmod(ago-10, months-9)
advmod(death-6, ago-10)
nsubj(says-13, she-12)
root(ROOT-0, says-13)
nsubj(miserable-17, she-14)
aux(miserable-17, has-15)
cop(miserable-17, been-16)
ccomp(says-13, miserable-17)
mark(goes-22, if-20)
nsubj(goes-22, she-21)
advcl(shorten-29, goes-22)
prt(goes-22, on-23)
prep_like(goes-22, this-25)
nsubj(shorten-29, it-27)
aux(shorten-29, will-28)
conj_and(says-13, shorten-29)
det(days-32, the-30)
amod(days-32, few-31)
dobj(shorten-29, days-32)
nsubjpass(left-35, days-32)
auxpass(left-35, are-34)
rcmod(days-32, left-35)
dobj(left-35, her-36)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Effie))
        (, ,)
        (NP
          (NP (DT the) (RB only) (JJ endurable) (NN servant))
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBZ has)
                (VP (VBN had)
                  (PP (IN since)
                    (NP (NNP Ann))))))))
        (, ,))
      (VP (VBZ is)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB leave)
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN end))
                    (PP (IN of)
                      (NP (PRP$ her) (NN half-year)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBZ says)
        (SBAR
          (S
            (NP
              (NP (DT the) (NN thought))
              (PP (IN of)
                (NP (DT another))))
            (VP (VBZ makes)
              (NP (PRP$ her) (NN wretched)))))))
    (. .)))

nsubj(going-14, Effie-1)
nsubj(leave-16, Effie-1)
det(servant-6, the-3)
advmod(servant-6, only-4)
amod(servant-6, endurable-5)
appos(Effie-1, servant-6)
nsubj(had-9, she-7)
aux(had-9, has-8)
rcmod(servant-6, had-9)
prep_since(had-9, Ann-11)
aux(going-14, is-13)
root(ROOT-0, going-14)
aux(leave-16, to-15)
xcomp(going-14, leave-16)
det(end-19, the-18)
prep_at(leave-16, end-19)
poss(half-year-22, her-21)
prep_of(end-19, half-year-22)
nsubj(says-26, she-25)
conj_and(going-14, says-26)
det(thought-28, the-27)
nsubj(makes-31, thought-28)
prep_of(thought-28, another-30)
ccomp(says-26, makes-31)
poss(wretched-33, her-32)
dobj(makes-31, wretched-33)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (MD may)
        (VP (VB be)
          (ADJP
            (NP (DT a) (RB little))
            (JJ hard))
          (S
            (VP (TO to)
              (VP (VB please)))))))
    (, ,)
    (CC but)
    (S
      (PP (IN after)
        (S
          (VP (VBG being)
            (VP (VBN used)
              (PP (TO to)
                (NP (CD one)))
              (PP (IN for)
                (NP
                  (ADJP (RB so) (JJ many))
                  (NNS years)))))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT no) (NN wonder))
        (SBAR (IN if)
          (S
            (NP (PRP she))
            (VP (VB be)
              (ADJP (JJ particular)))))))
    (. .)))

nsubj(hard-6, She-1)
nsubj(please-8, She-1)
aux(hard-6, may-2)
cop(hard-6, be-3)
det(little-5, a-4)
npadvmod(hard-6, little-5)
root(ROOT-0, hard-6)
aux(please-8, to-7)
xcomp(hard-6, please-8)
auxpass(used-13, being-12)
prepc_after(wonder-24, used-13)
prep_to(used-13, one-15)
advmod(many-18, so-17)
amod(years-19, many-18)
prep_for(used-13, years-19)
nsubj(wonder-24, it-21)
cop(wonder-24, is-22)
neg(wonder-24, no-23)
conj_but(hard-6, wonder-24)
mark(particular-28, if-25)
nsubj(particular-28, she-26)
cop(particular-28, be-27)
advcl(wonder-24, particular-28)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN done))))))))))
    (. .) ('' '')))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
nsubj(is-6, what-5)
nsubjpass(done-9, what-5)
ccomp(know-4, is-6)
aux(done-9, to-7)
auxpass(done-9, be-8)
xcomp(is-6, done-9)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know) (, ,)
          (ADVP (RB either))
          (: --)
          (SBAR (IN except)
            (S
              (NP (PRP you))
              (VP (VBP make)
                (S
                  (NP (PRP her))
                  (NP
                    (NP (DT a) (NN present))
                    (PP (IN of)
                      (NP (NNP Tibby)))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ her) (NN husband))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
ccomp(said-19, know-5)
advmod(know-5, either-7)
mark(make-11, except-9)
nsubj(make-11, you-10)
advcl(know-5, make-11)
parataxis(know-5, make-11)
nsubj(present-14, her-12)
det(present-14, a-13)
xcomp(make-11, present-14)
prep_of(present-14, Tibby-16)
root(ROOT-0, said-19)
poss(husband-21, her-20)
nsubj(said-19, husband-21)

(ROOT
  (S (`` ``)
    (NP (NNP John))
    (VP (VBZ !))
    ('' '')))

nsubj(!-3, John-2)

(ROOT
  (S
    (NP
      (NP (JJ exclaimed) (NNP Mrs) (NNP Macmichael))
      (: ;)
      (CC and)
      (`` ``)
      (NP (NNP John))
      ('' ''))
    (VP (VBP burst)
      (PRT (RP out))
      (S
        (VP (VBG laughing))))
    (. .)))

amod(Macmichael-3, exclaimed-1)
nn(Macmichael-3, Mrs-2)
nsubj(burst-9, Macmichael-3)
conj_and(Macmichael-3, John-7)
nsubj(burst-9, John-7)
root(ROOT-0, burst-9)
prt(burst-9, out-10)
xcomp(burst-9, laughing-11)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP they))
            (VP (MD 'd)
              (VP (VB pull)
                (ADVP (RB together))))))))
    (. ?) ('' '')))

nsubj(think-5, You-2)
aux(think-5, do-3)
neg(think-5, n't-4)
root(ROOT-0, think-5)
nsubj(pull-8, they-6)
aux(pull-8, 'd-7)
ccomp(think-5, pull-8)
advmod(pull-8, together-9)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (CD Two) (JJ old) (NNS people))
      (: --)
      (NP
        (NP (DT each))
        (PP (IN with)
          (NP (PRP$ her) (JJ own) (NNS ways)))))
    (, ,)
    (CC and)
    (S
      (PP (IN without)
        (NP
          (NP (DT any) (NNS memories))
          (PP (IN in)
            (NP
              (NP (JJ common))
              (PP (TO to)
                (NP (NN bind)))))))
      (NP (PRP them))
      (VP (VBZ together)))
    (. !)))

num(people-4, Two-2)
amod(people-4, old-3)
root(ROOT-0, people-4)
dep(people-4, each-6)
poss(ways-10, her-8)
amod(ways-10, own-9)
prep_with(each-6, ways-10)
cc(people-4, and-12)
det(memories-15, any-14)
prep_without(together-21, memories-15)
prep_in(memories-15, common-17)
prep_to(common-17, bind-19)
nsubj(together-21, them-20)
dep(people-4, together-21)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBN surprised)
          (PP (IN at)
            (NP
              (NP (PRP$ your) (NN dreaming))
              (PP (IN of)
                (NP (PDT such) (DT a) (NN thing))))))))
    (, ,) ('' '')
    (VP (VBD exclaimed))
    (NP (PRP$ his) (NN wife))
    (. .)))

nsubjpass(surprised-3, I-1)
auxpass(surprised-3, 'm-2)
ccomp(exclaimed-13, surprised-3)
poss(dreaming-6, your-5)
prep_at(surprised-3, dreaming-6)
predet(thing-10, such-8)
det(thing-10, a-9)
prep_of(dreaming-6, thing-10)
root(ROOT-0, exclaimed-13)
poss(wife-15, his-14)
nsubj(exclaimed-13, wife-15)

(ROOT
  (SINV (`` ``)
    (S
      (S (CC But)
        (NP (PRP I))
        (VP (VBD did) (RB n't)
          (ADVP (RB even))
          (VP (VB dream)
            (PP (IN of)
              (NP (PRP it))))))
      (: ;)
      (S
        (NP (PRP I))
        (ADVP (RB only))
        (VP (VBD said)
          (NP (PRP it)))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (PRP$ her) (NN husband))
    (. .)))

cc(dream-7, But-2)
nsubj(dream-7, I-3)
aux(dream-7, did-4)
neg(dream-7, n't-5)
advmod(dream-7, even-6)
ccomp(returned-17, dream-7)
prep_of(dream-7, it-9)
nsubj(said-13, I-11)
advmod(said-13, only-12)
parataxis(dream-7, said-13)
dobj(said-13, it-14)
root(ROOT-0, returned-17)
poss(husband-19, her-18)
nsubj(returned-17, husband-19)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (NN time))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD knew)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP I))
                  (VP (VBD was)
                    (VP (VBG joking) (, ,)
                      (ADVP (RB wifie)))))))))))
    (. .) ('' '')))

nsubj(time-4, It-2)
cop(time-4, 's-3)
root(ROOT-0, time-4)
nsubj(knew-6, you-5)
rcmod(time-4, knew-6)
advmod(joking-10, when-7)
nsubj(joking-10, I-8)
aux(joking-10, was-9)
ccomp(knew-6, joking-10)
advmod(joking-10, wifie-12)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VB joke)
      (ADJP (RB so) (JJ dreadfully)
        (PP (IN like)
          (NP (NN earnest)))))
    (. !) ('' '')))

nsubj(joke-3, You-2)
root(ROOT-0, joke-3)
advmod(dreadfully-5, so-4)
acomp(joke-3, dreadfully-5)
prep_like(dreadfully-5, earnest-7)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD answered))
    (. .)))

nsubj(answered-2, she-1)
root(ROOT-0, answered-2)

(ROOT
  (S (`` ``)
    (PP (IN If)
      (ADVP (RB only)))
    (NP (PRP we))
    (VP (VBD had)
      (NP
        (NP (CD one) (JJR more) (NN room))
        (PP (IN in)
          (NP (DT the) (NN house)))))
    (. !) ('' '')))

prep(had-5, If-2)
pcomp(If-2, only-3)
nsubj(had-5, we-4)
root(ROOT-0, had-5)
num(room-8, one-6)
amod(room-8, more-7)
dobj(had-5, room-8)
det(house-11, the-10)
prep_in(room-8, house-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN doctor))
      (, ,)
      (ADVP (RB thoughtfully)))
    (. .)))

root(ROOT-0, said-1)
det(doctor-3, the-2)
dobj(said-1, doctor-3)
advmod(said-1, thoughtfully-5)

(ROOT
  (INTJ (`` ``) (UH Ah) (. !) ('' '')))

root(ROOT-0, Ah-2)

(ROOT
  (SINV
    (VP (VBD returned))
    (NP (PRP$ his) (NN wife))
    (, ,)
    (S
      (ADVP (RB eagerly))
      (, ,) (`` ``)
      (NP (DT that))
      (VP (MD would)
        (VP (VB be)
          (NP (DT a) (NN blessing)))))
    (. !)))

root(ROOT-0, returned-1)
poss(wife-3, his-2)
nsubj(returned-1, wife-3)
advmod(blessing-12, eagerly-5)
nsubj(blessing-12, that-8)
aux(blessing-12, would-9)
cop(blessing-12, be-10)
det(blessing-12, a-11)
ccomp(returned-1, blessing-12)

(ROOT
  (S (CC And)
    (SBAR (IN though)
      (S
        (NP (NNP Tibby))
        (VP (MD would)
          (VP (VB be)
            (NP
              (NP (DT a) (NN thorn))
              (PP (IN in)
                (NP
                  (NP (DT every) (NN inch))
                  (PP (IN of)
                    (NP
                      (NP (NNP grandmamma) (POS 's))
                      (NN body))))))
            (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP they))
                (VP (VBD were)
                  (ADVP (RB alone))
                  (ADVP (RB together)))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT no) (NN doubt))
        (SBAR
          (S
            (NP (PRP they))
            (VP (MD would)
              (VP (VB get)
                (PRT (RP on))
                (ADVP (RB very) (RB well))
                (PP (IN with)
                  (NP (PRP me)))
                (PP (IN between)
                  (NP (PRP them)))))))))
    (. .) ('' '')))

cc(have-23, And-1)
mark(thorn-7, though-2)
nsubj(thorn-7, Tibby-3)
aux(thorn-7, would-4)
cop(thorn-7, be-5)
det(thorn-7, a-6)
advcl(have-23, thorn-7)
det(inch-10, every-9)
prep_in(thorn-7, inch-10)
poss(body-14, grandmamma-12)
prep_of(inch-10, body-14)
mark(were-18, if-16)
nsubj(were-18, they-17)
advcl(thorn-7, were-18)
advmod(were-18, alone-19)
advmod(were-18, together-20)
nsubj(have-23, I-22)
root(ROOT-0, have-23)
neg(doubt-25, no-24)
dobj(have-23, doubt-25)
nsubj(get-28, they-26)
aux(get-28, would-27)
rcmod(doubt-25, get-28)
prt(get-28, on-29)
advmod(well-31, very-30)
advmod(get-28, well-31)
prep_with(get-28, me-33)
prep_between(get-28, them-35)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB doubt)
          (NP (PRP it)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (PRP$ her) (NN husband))
      (, ,)
      (ADJP (RB still) (JJ thoughtfully)))
    (. .)))

nsubj(doubt-5, I-2)
aux(doubt-5, do-3)
neg(doubt-5, n't-4)
ccomp(said-9, doubt-5)
dobj(doubt-5, it-6)
root(ROOT-0, said-9)
poss(husband-11, her-10)
nsubj(said-9, husband-11)
advmod(thoughtfully-14, still-13)
amod(husband-11, thoughtfully-14)

(ROOT
  (S (`` ``)
    (S
      (S
        (VP (MD Could) (RB n't)))
      (NP (PRP we))
      (VP (VBP manage)
        (NP (PRP it))
        (ADVP (RB somehow))))
    (, ,)
    (S
      (NP (NNP John)))
    (. ?) ('' '')))

dep(manage-5, Could-2)
neg(Could-2, n't-3)
nsubj(manage-5, we-4)
root(ROOT-0, manage-5)
dobj(manage-5, it-6)
advmod(manage-5, somehow-7)
parataxis(manage-5, John-9)

(ROOT
  (S
    (VP (VBD said)
      (NP
        (NP (NNP Mrs) (NNP Macmichael))
        (, ,)
        (ADJP (RB half) (JJ timidly))
        (, ,))
      (PP (IN after)
        (NP
          (NP (DT a) (NN pause))
          (PP (IN of)
            (NP (DT some) (NN duration))))))
    (. .)))

root(ROOT-0, said-1)
nn(Macmichael-3, Mrs-2)
dobj(said-1, Macmichael-3)
advmod(timidly-6, half-5)
amod(Macmichael-3, timidly-6)
det(pause-10, a-9)
prep_after(said-1, pause-10)
det(duration-13, some-12)
prep_of(pause-10, duration-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP see)
                (NP (WRB how))
                (: --)
                (PP (IN at)
                  (NP (DT this) (NN moment)))))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (DT the) (NN doctor))
    (, ,) (`` ``)
    (S
      (ADVP (RB much) (RB as))
      (NP (PRP I))
      (VP (MD should)
        (VP (VB like)
          (NP (PRP it)))))
    (. .)))

nsubj(say-5, I-2)
aux(say-5, ca-3)
neg(say-5, n't-4)
ccomp(answered-15, say-5)
nsubj(see-7, I-6)
ccomp(say-5, see-7)
dobj(see-7, how-8)
det(moment-12, this-11)
prep_at(see-7, moment-12)
root(ROOT-0, answered-15)
det(doctor-17, the-16)
nsubj(answered-15, doctor-17)
advmod(as-21, much-20)
advmod(like-24, as-21)
nsubj(like-24, I-22)
aux(like-24, should-23)
dep(answered-15, like-24)
dobj(like-24, it-25)

(ROOT
  (S (CC But)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (NP (NN time))
        (ADVP (RB yet))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP we))
        (VP (MD 'll)
          (VP
            (VP (VB think)
              (NP (PRP it))
              (PRT (RP over)))
            (, ,)
            (CC and)
            (VP (VB talk)
              (PP (IN about)
                (NP (PRP it)))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB perhaps))
        (NP (PRP we))
        (VP (MD may)
          (VP (VB hit)
            (PP (IN upon)
              (NP
                (NP (DT some) (NN plan))
                (CC or)
                (NP (JJ other))))))))
    (. .)))

expl('s-3, there-2)
root(ROOT-0, 's-3)
nsubj('s-3, time-4)
advmod('s-3, yet-5)
nsubj(think-10, we-8)
nsubj(talk-15, we-8)
aux(think-10, 'll-9)
conj_and('s-3, think-10)
dobj(think-10, it-11)
prt(think-10, over-12)
conj_and('s-3, talk-15)
conj_and(think-10, talk-15)
prep_about(talk-15, it-17)
advmod(hit-23, perhaps-20)
nsubj(hit-23, we-21)
aux(hit-23, may-22)
conj_and('s-3, hit-23)
conj_and(think-10, hit-23)
det(plan-26, some-25)
prep_upon(hit-23, plan-26)
prep_upon(hit-23, other-28)
conj_or(plan-26, other-28)

(ROOT
  (S
    (S
      (NP (JJS Most) (NNS things) (NNS _))
      (VP (MD may)
        (ADVP (RB _))
        (VP (VB be)
          (VP (VBN done)))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (NN everything))
        (ADJP (JJ necessary) (JJ _)))
      (VP (MD can)
        (ADVP (RB _))
        (VP (VB be)
          (VP (VBN done)
            (NP (JJ _) (NN some_how))))))
    (. .)))

amod(_-3, Most-1)
nn(_-3, things-2)
nsubjpass(done-7, _-3)
aux(done-7, may-4)
advmod(done-7, _-5)
auxpass(done-7, be-6)
root(ROOT-0, done-7)
nsubjpass(done-16, everything-10)
amod(_-12, necessary-11)
amod(everything-10, _-12)
aux(done-16, can-13)
advmod(done-16, _-14)
auxpass(done-16, be-15)
conj_and(done-7, done-16)
amod(some_how-18, _-17)
dobj(done-16, some_how-18)

(ROOT
  (S (IN So)
    (NP (PRP we))
    (VP (MD wo) (RB n't)
      (VP
        (VP (VB bother)
          (NP (PRP$ our) (NNS minds))
          (PP (IN about)
            (NP
              (NP (PRP it))
              (, ,)
              (CONJP (CC but)
                (RB only))
              (NP (PRP$ our) (NNS brains)))))
        (, ,)
        (CC and)
        (VP (VB see)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (MD can)
                (VP (VB do)
                  (PP (IN for)
                    (NP (PRP us))))))))))
    (. .) ('' '')))

dep(bother-5, So-1)
nsubj(bother-5, we-2)
nsubj(see-17, we-2)
aux(bother-5, wo-3)
neg(bother-5, n't-4)
root(ROOT-0, bother-5)
poss(minds-7, our-6)
dobj(bother-5, minds-7)
prep_about(bother-5, it-9)
poss(brains-14, our-13)
prep_about(bother-5, brains-14)
conj_but(it-9, brains-14)
conj_and(bother-5, see-17)
dobj(do-21, what-18)
nsubj(do-21, they-19)
aux(do-21, can-20)
ccomp(see-17, do-21)
prep_for(do-21, us-23)

(ROOT
  (S
    (PP (IN With)
      (NP (DT this)))
    (NP (PRP he))
    (VP (VBD rose)
      (CC and)
      (VBD went)
      (PP (TO to)
        (NP (PRP$ his) (NN laboratory))))
    (. .)))

prep_with(rose-4, this-2)
nsubj(rose-4, he-3)
nsubj(went-6, he-3)
root(ROOT-0, rose-4)
conj_and(rose-4, went-6)
poss(laboratory-9, his-8)
prep_to(rose-4, laboratory-9)

(ROOT
  (S
    (NP (NNP Willie))
    (VP
      (VP (VBD rose)
        (ADVP (RB also)))
      (CC and)
      (VP (VBD went)
        (ADVP (RB straight))
        (PP (TO to)
          (NP (PRP$ his) (JJ own) (NN room)))))
    (. .)))

nsubj(rose-2, Willie-1)
nsubj(went-5, Willie-1)
root(ROOT-0, rose-2)
advmod(rose-2, also-3)
conj_and(rose-2, went-5)
advmod(went-5, straight-6)
poss(room-10, his-8)
amod(room-10, own-9)
prep_to(went-5, room-10)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (VP (VBD looked) (RB all)
          (VP (VB round)
            (NP (PRP it))
            (ADVP (RB thoughtfully))
            (NP (JJ several) (NNS times))))))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (VBD went)
          (PRT (RP out))
          (ADVP (RB again))
          (PP (IN on)
            (NP (DT the) (NN landing)))))
      (, ,))
    (VP (VBP whence)
      (NP
        (NP (DT a) (NN ladder))
        (VP (VBN led)
          (PRT (RP up))
          (PP (IN into)
            (NP
              (NP (DT a) (NN garret))
              (VP (VBG running)
                (NP
                  (NP (DT the) (JJ whole) (NN length))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN roof))
                      (PP (IN of)
                        (NP (DT the) (NN cottage))))))))))))
    (. .)))

aux(looked-2, Having-1)
csubj(whence-18, looked-2)
advmod(looked-2, all-3)
dep(looked-2, round-4)
dobj(round-4, it-5)
advmod(round-4, thoughtfully-6)
amod(times-8, several-7)
dobj(round-4, times-8)
nsubj(went-11, he-10)
parataxis(whence-18, went-11)
prt(went-11, out-12)
advmod(went-11, again-13)
det(landing-16, the-15)
prep_on(went-11, landing-16)
root(ROOT-0, whence-18)
det(ladder-20, a-19)
dobj(whence-18, ladder-20)
vmod(ladder-20, led-21)
prt(led-21, up-22)
det(garret-25, a-24)
prep_into(led-21, garret-25)
vmod(garret-25, running-26)
det(length-29, the-27)
amod(length-29, whole-28)
dobj(running-26, length-29)
det(roof-32, the-31)
prep_of(length-29, roof-32)
det(cottage-35, the-34)
prep_of(roof-32, cottage-35)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ My) (NN room))
      (VP (MD would)
        (VP (VB do)
          (PP (IN for)
            (NP (NN grannie))))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said)
          (PP (TO to)
            (NP (PRP himself))))))
    (: ;) (`` ``)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB sleep)
          (PRT (RP up))
          (ADVP (RB there)))))
    (. .)))

poss(room-3, My-2)
nsubj(do-5, room-3)
aux(do-5, would-4)
root(ROOT-0, do-5)
prep_for(do-5, grannie-7)
nsubj(said-11, he-10)
dep(do-5, said-11)
prep_to(said-11, himself-13)
nsubj(sleep-19, I-17)
aux(sleep-19, could-18)
conj_and(do-5, sleep-19)
prt(sleep-19, up-20)
advmod(sleep-19, there-21)

(ROOT
  (S
    (NP
      (NP (DT A) (NN shake-down))
      (PP (IN in)
        (NP (DT the) (NN corner))))
    (VP (MD would)
      (VP (VB do)
        (ADVP (RB well) (RB enough))
        (PP (IN for)
          (NP (PRP me)))))
    (. .) ('' '')))

det(shake-down-2, A-1)
nsubj(do-7, shake-down-2)
det(corner-5, the-4)
prep_in(shake-down-2, corner-5)
aux(do-7, would-6)
root(ROOT-0, do-7)
advmod(enough-9, well-8)
advmod(do-7, enough-9)
prep_for(do-7, me-11)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD climbed)
      (SBAR
        (S
          (NP
            (NP (DT the) (NN ladder))
            (, ,)
            (VP (VBN pushed)
              (PRT (RP open))
              (NP (DT the) (NN trap-door)))
            (, ,))
          (VP
            (VP (VBD crept)
              (ADVP (NN half) (IN through)))
            (, ,)
            (CC and)
            (VP (VBD surveyed)
              (NP (DT the) (JJ gloomy) (NN place)))))))
    (. .)))

nsubj(climbed-2, He-1)
root(ROOT-0, climbed-2)
det(ladder-4, the-3)
nsubj(crept-11, ladder-4)
nsubj(surveyed-16, ladder-4)
vmod(ladder-4, pushed-6)
prt(pushed-6, open-7)
det(trap-door-9, the-8)
dobj(pushed-6, trap-door-9)
ccomp(climbed-2, crept-11)
dep(through-13, half-12)
advmod(crept-11, through-13)
ccomp(climbed-2, surveyed-16)
conj_and(crept-11, surveyed-16)
det(place-19, the-17)
amod(place-19, gloomy-18)
dobj(surveyed-16, place-19)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (DT no) (NN window))
        (PP (CC but)
          (NP (DT a) (NN skylight)))))
    (. !) ('' '')))

expl('s-3, There-2)
root(ROOT-0, 's-3)
neg(window-5, no-4)
nsubj('s-3, window-5)
prep(window-5, but-6)
det(skylight-8, a-7)
pobj(but-6, skylight-8)

(ROOT
  (S
    (S
      (NP (PRP he))
      (VP (VBD said)))
    (: ;)
    (CC and)
    (S
      (NP (PRP$ his) (NNS eyes))
      (VP (VBD smarted)
        (SBAR (RB as) (IN if)
          (S
            (NP (DT the) (NNS tears))
            (VP (VBD were)
              (VP (IN about)
                (S
                  (VP (TO to)
                    (VP (VB rush)
                      (PP (IN into)
                        (NP (PRP them))))))))))))
    (. .)))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
poss(eyes-6, his-5)
nsubj(smarted-7, eyes-6)
conj_and(said-2, smarted-7)
advmod(about-13, as-8)
mark(about-13, if-9)
det(tears-11, the-10)
nsubj(about-13, tears-11)
nsubj(rush-15, tears-11)
aux(about-13, were-12)
advcl(smarted-7, about-13)
aux(rush-15, to-14)
xcomp(about-13, rush-15)
prep_into(rush-15, them-17)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP
        (ADVP (RB _))
        (MD shall)
        (VP (VB _)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP do)))))))
    (. ?)))

nsubj(_-5, What-2)
advmod(_-5, _-3)
aux(_-5, shall-4)
root(ROOT-0, _-5)
nsubj(do-7, I-6)
ccomp(_-5, do-7)

(ROOT
  (S
    (NP (NNP Wheelie))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJ useless))))
    (. !)))

nsubj(useless-4, Wheelie-1)
aux(useless-4, will-2)
cop(useless-4, be-3)
root(ROOT-0, useless-4)

(ROOT
  (S (: --)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB help)
          (NP (PRP it)))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (MD ca) (RB n't)
            (VP (VB help)
              (NP (PRP it))))))
      (, ,)
      (NP (PRP I))
      (VP (MD can)
        (VP (VB bear)
          (NP (PRP it)))))
    (. .)))

discourse(help-7, Well-2)
nsubj(help-7, I-4)
aux(help-7, ca-5)
neg(help-7, n't-6)
root(ROOT-0, help-7)
dobj(help-7, it-8)
mark(help-15, if-11)
nsubj(help-15, I-12)
aux(help-15, ca-13)
neg(help-15, n't-14)
advcl(bear-20, help-15)
dobj(help-15, it-16)
nsubj(bear-20, I-18)
aux(bear-20, can-19)
conj_and(help-7, bear-20)
dobj(bear-20, it-21)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB have)
          (S
            (VP (VB grannie)
              (ADJP (JJ comfortable)))))))
    (VP (MD will)
      (VP (VB be)
        (ADVP (JJR better) (IN than)
          (S
            (VP (TO to)
              (VP (VB look)
                (PRT (RP out))
                (PP (IN of)
                  (NP (DT the) (NN window)))
                (ADVP (RB ever) (RB so) (RB much))))))))
    (. .) ('' '')))

aux(have-2, To-1)
csubj(be-6, have-2)
ccomp(have-2, grannie-3)
acomp(grannie-3, comfortable-4)
aux(be-6, will-5)
root(ROOT-0, be-6)
dep(than-8, better-7)
advmod(be-6, than-8)
aux(look-10, to-9)
dep(than-8, look-10)
det(window-14, the-13)
prep_out_of(look-10, window-14)
advmod(much-17, ever-15)
advmod(much-17, so-16)
advmod(look-10, much-17)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD drew)
        (PP (IN in)
          (NP (PRP$ his) (NN head))))
      (, ,)
      (VP (VBD came)
        (PRT (RP down))
        (NP (DT the) (NN ladder))
        (PP (IN with)
          (NP (DT a) (NN rush)))
        (, ,))
      (CC and)
      (VP (VBN hurried)
        (PRT (RP off))
        (PP (TO to)
          (NP (NN school)))))
    (. .)))

nsubj(drew-2, He-1)
nsubj(came-7, He-1)
nsubj(hurried-16, He-1)
root(ROOT-0, drew-2)
poss(head-5, his-4)
prep_in(drew-2, head-5)
conj_and(drew-2, came-7)
prt(came-7, down-8)
det(ladder-10, the-9)
dobj(came-7, ladder-10)
det(rush-13, a-12)
prep_with(came-7, rush-13)
conj_and(drew-2, hurried-16)
prt(hurried-16, off-17)
prep_to(hurried-16, school-19)

(ROOT
  (S
    (PP (IN At)
      (NP (NN supper)))
    (NP (PRP he))
    (VP (VBD laid)
      (NP (PRP$ his) (NN scheme))
      (PP (IN before)
        (NP (PRP$ his) (NN father)
          (CC and)
          (NN mother))))
    (. .)))

prep_at(laid-4, supper-2)
nsubj(laid-4, he-3)
root(ROOT-0, laid-4)
poss(scheme-6, his-5)
dobj(laid-4, scheme-6)
poss(father-9, his-8)
prep_before(laid-4, father-9)
prep_before(laid-4, mother-11)
conj_and(father-9, mother-11)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD looked)
      (ADJP (RB very) (RB much) (JJ pleased))
      (PP (IN with)
        (NP (PRP$ their) (NN boy))))
    (. .)))

nsubj(looked-2, They-1)
root(ROOT-0, looked-2)
advmod(pleased-5, very-3)
advmod(pleased-5, much-4)
acomp(looked-2, pleased-5)
poss(boy-8, their-7)
prep_with(looked-2, boy-8)

(ROOT
  (S (CC But)
    (NP (PRP$ his) (NN father))
    (VP (VBD said)
      (PP (IN at)
        (NP (RB once)))
      (: --) (`` ``)
      (FRAG
        (INTJ (UH No) (, ,) (UH no))
        (, ,)
        (NP (NNP Willie))))
    (. .)))

cc(said-4, But-1)
poss(father-3, his-2)
nsubj(said-4, father-3)
root(ROOT-0, said-4)
prep(said-4, at-5)
pobj(at-5, once-6)
discourse(Willie-13, No-9)
dep(No-9, no-11)
dep(said-4, Willie-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD wo) (RB n't)
      (VP (VB do)))
    (. .)))

nsubj(do-4, It-1)
aux(do-4, wo-2)
neg(do-4, n't-3)
root(ROOT-0, do-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ glad)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP 've)
                (VP (VBN been)
                  (NP (DT the) (JJ first)
                    (S
                      (VP (TO to)
                        (VP (VB think)
                          (PP (IN of)
                            (NP (NN something))))))))))))))
    (: --)
    (S
      (ADVP (RB only))
      (, ,)
      (ADVP (RB unfortunately))
      (, ,)
      (NP (PRP$ your) (NN plan))
      (VP (MD wo) (RB n't)
        (VP (VB work))))
    (. .)))

nsubj(glad-3, I-1)
cop(glad-3, 'm-2)
root(ROOT-0, glad-3)
nsubj(first-8, you-4)
aux(first-8, 've-5)
cop(first-8, been-6)
det(first-8, the-7)
ccomp(glad-3, first-8)
aux(think-10, to-9)
dep(first-8, think-10)
prep_of(think-10, something-12)
advmod(work-22, only-14)
advmod(work-22, unfortunately-16)
poss(plan-19, your-18)
nsubj(work-22, plan-19)
aux(work-22, wo-20)
neg(work-22, n't-21)
parataxis(glad-3, work-22)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB sleep)
        (ADVP (RB there))))
    (. .) ('' '')))

nsubj(sleep-4, You-1)
aux(sleep-4, ca-2)
neg(sleep-4, n't-3)
root(ROOT-0, sleep-4)
advmod(sleep-4, there-5)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB engage)
          (S
            (VP (TO to)
              (VP (VB sleep)
                (SBAR
                  (WHADVP (WRB wherever))
                  (S
                    (S
                      (NP (EX there))
                      (VP (VBZ 's)
                        (NP (NN room)
                          (S
                            (VP (TO to)
                              (VP (VB lie)
                                (PRT (RP down))))))))
                    (: ;)
                    (CC and)
                    (S
                      (SBAR (IN if)
                        (S
                          (NP (EX there))
                          (VP (VBZ is) (RB n't)
                            (NP (PRP I)))))
                      (VP (MD 'll)
                        (VP (VB engage)
                          (S
                            (VP (TO to)
                              (VP (VB sleep)
                                (S
                                  (VP (VBG sitting)
                                    (CC or)
                                    (VBG standing)))))))))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Willie))
      (, ,)
      (SBAR
        (WHNP (WP$ whose) (NNS mother))
        (S
          (VP (VBD had)
            (ADVP (RB often))
            (VP (VBN said)
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (VBD wished)
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP (MD could)
                          (VP (VB sleep)
                            (PP (IN like)
                              (NP (NNP Willie)))))))))))))))
    (. .)))

nsubj(engage-4, I-2)
nsubj(sleep-6, I-2)
aux(engage-4, 'll-3)
ccomp(said-30, engage-4)
aux(sleep-6, to-5)
xcomp(engage-4, sleep-6)
advmod('s-9, wherever-7)
expl('s-9, there-8)
advcl(sleep-6, 's-9)
nsubj('s-9, room-10)
aux(lie-12, to-11)
vmod(room-10, lie-12)
prt(lie-12, down-13)
mark(is-18, if-16)
expl(is-18, there-17)
csubj(engage-22, is-18)
neg(is-18, n't-19)
nsubj(is-18, I-20)
aux(engage-22, 'll-21)
advcl(sleep-6, engage-22)
conj_and('s-9, engage-22)
aux(sleep-24, to-23)
xcomp(engage-22, sleep-24)
xcomp(sleep-24, sitting-25)
xcomp(sleep-24, standing-27)
conj_or(sitting-25, standing-27)
root(ROOT-0, said-30)
nsubj(said-30, Willie-31)
poss(mother-34, Willie-31)
nsubj(said-37, mother-34)
aux(said-37, had-35)
advmod(said-37, often-36)
rcmod(Willie-31, said-37)
nsubj(wished-39, she-38)
ccomp(said-37, wished-39)
nsubj(sleep-42, she-40)
aux(sleep-42, could-41)
ccomp(wished-39, sleep-42)
prep_like(sleep-42, Willie-44)

(ROOT
  (S (`` ``)
    (CC And)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB walk)
            (PP (IN in)
              (NP (PRP$ my) (NN sleep)))))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD added))))
    (, ,) (`` ``)
    (NP (DT the) (NN trap-door))
    (VP (VBP need) (RB n't)
      (VP (VB be)
        (VP (VBN shut))))
    (. .) ('' '')))

cc(need-19, And-2)
mark(walk-7, as-3)
nsubj(walk-7, I-4)
aux(walk-7, do-5)
neg(walk-7, n't-6)
advcl(need-19, walk-7)
poss(sleep-10, my-9)
prep_in(walk-7, sleep-10)
nsubj(added-14, he-13)
parataxis(need-19, added-14)
det(trap-door-18, the-17)
nsubj(need-19, trap-door-18)
root(ROOT-0, need-19)
neg(need-19, n't-20)
auxpass(shut-22, be-21)
dep(need-19, shut-22)

(ROOT
  (FRAG (`` ``)
    (NP (NNS Mice))
    (, ,)
    (NP (NNP Willie))
    (. !) ('' '')))

root(ROOT-0, Mice-2)
dep(Mice-2, Willie-4)

(ROOT
  (S
    (VP (VBD said)
      (NP (PRP$ his) (NN mother))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT a) (NN tone))
          (PP (IN of)
            (NP (JJ much) (NN significance))))))
    (. .)))

root(ROOT-0, said-1)
poss(mother-3, his-2)
dobj(said-1, mother-3)
det(tone-7, a-6)
prep_in(said-1, tone-7)
amod(significance-10, much-9)
prep_of(tone-7, significance-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP
        (NP (DT The) (NN cat))
        (CC and)
        (NP (PRP I)))
      (VP (VBP are)
        (NP (JJ good) (NNS friends))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Willie))
    (. .)))

det(cat-3, The-2)
nsubj(friends-8, cat-3)
conj_and(cat-3, I-5)
nsubj(friends-8, I-5)
cop(friends-8, are-6)
amod(friends-8, good-7)
ccomp(returned-11, friends-8)
root(ROOT-0, returned-11)
nsubj(returned-11, Willie-12)

(ROOT
  (S (`` ``)
    (NP (PRP She))
    (VP (MD 'll)
      (VP (VB be)
        (ADJP (JJ pleased) (RB enough)
          (S
            (VP (TO to)
              (VP (VB sleep)
                (PP (IN with)
                  (NP (PRP me)))))))))
    (. .) ('' '')))

nsubj(pleased-5, She-2)
nsubj(sleep-8, She-2)
aux(pleased-5, 'll-3)
cop(pleased-5, be-4)
root(ROOT-0, pleased-5)
advmod(pleased-5, enough-6)
aux(sleep-8, to-7)
xcomp(pleased-5, sleep-8)
prep_with(sleep-8, me-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP do) (RB n't)
        (VP (VB hit)
          (NP (DT the) (NN thing))
          (ADVP (IN at) (DT all)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN father))
    (. .)))

nsubj(hit-5, You-2)
aux(hit-5, do-3)
neg(hit-5, n't-4)
ccomp(said-12, hit-5)
det(thing-7, the-6)
dobj(hit-5, thing-7)
advmod(hit-5, at-8)
pobj(at-8, all-9)
root(ROOT-0, said-12)
poss(father-14, his-13)
nsubj(said-12, father-14)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP wonder)
      (SBAR
        (S
          (NP
            (NP
              (NP (DT a) (JJ practical) (NN man))
              (PP (IN like)
                (NP (PRP you))))
            (, ,)
            (NP (NNP Willie))
            (, ,))
          (VP (VBZ does) (RB n't)
            (VP (VB see)
              (NP (PRP it))
              (PP (IN at)
                (NP (RB once))))))))
    (. .)))

nsubj(wonder-3, I-2)
root(ROOT-0, wonder-3)
det(man-6, a-4)
amod(man-6, practical-5)
nsubj(see-14, man-6)
prep_like(man-6, you-8)
appos(man-6, Willie-10)
aux(see-14, does-12)
neg(see-14, n't-13)
ccomp(wonder-3, see-14)
dobj(see-14, it-15)
prep(see-14, at-16)
pobj(at-16, once-17)

(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (PRP I))
        (VP (VBD were)
          (PP (IN at)
            (NP
              (NP (DT the) (NN expense))
              (PP (IN of)
                (NP (NN ceiling)))))
          (NP
            (NP (DT the) (JJ whole) (NN roof))
            (PP (IN with)
              (NP (NN lath)
                (CC and)
                (NN plaster)))))))
    (, ,)
    (NP (PRP we))
    (VP (MD should)
      (VP (VB find)
        (NP
          (NP (PRP you))
          (, ,)
          (NP
            (NP (DT some) (NN morning))
            (PP (IN in)
              (NP (NN summer))))
          (, ,)
          (NP
            (NP (JJ baked) (NN black))
            (PP (IN as)
              (NP (DT a) (NN coal))))
          (: ;)
          (CC or)
          (NP
            (NP (RB else))
            (, ,)
            (NP (DT some) (NN morning))))
        (PP (IN in)
          (NP
            (NP (NN winter))
            (VP (VBN frozen)
              (ADJP (RB so) (JJ stiff))
              (SBAR (IN that) (, ,)
                (S
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP we))
                      (VP (VBD tried)
                        (S
                          (VP (TO to)
                            (VP (VB lift)
                              (NP (PRP you))))))))
                  (, ,)
                  (NP (PRP$ your) (NN arm))
                  (VP (VBD snapped)
                    (PRT (RP off))
                    (PP (IN like)
                      (NP
                        (NP (DT a) (JJ dry) (NN twig))
                        (PP (IN of)
                          (NP (NNP elder)))))))))))))
    (. .) ('' '')))

advmod(roof-12, Even-1)
mark(roof-12, if-2)
nsubj(roof-12, I-3)
cop(roof-12, were-4)
det(expense-7, the-6)
prep_at(roof-12, expense-7)
prep_of(expense-7, ceiling-9)
det(roof-12, the-10)
amod(roof-12, whole-11)
advcl(find-20, roof-12)
prep_with(roof-12, lath-14)
prep_with(roof-12, plaster-16)
conj_and(lath-14, plaster-16)
nsubj(find-20, we-18)
aux(find-20, should-19)
root(ROOT-0, find-20)
dobj(find-20, you-21)
det(morning-24, some-23)
dobj(find-20, morning-24)
conj_or(you-21, morning-24)
prep_in(morning-24, summer-26)
amod(black-29, baked-28)
dobj(find-20, black-29)
conj_or(you-21, black-29)
det(coal-32, a-31)
prep_as(black-29, coal-32)
dobj(find-20, else-35)
conj_or(you-21, else-35)
det(morning-38, some-37)
appos(else-35, morning-38)
prep_in(find-20, winter-40)
vmod(winter-40, frozen-41)
advmod(stiff-43, so-42)
acomp(frozen-41, stiff-43)
mark(snapped-55, that-44)
advmod(tried-48, when-46)
nsubj(tried-48, we-47)
nsubj(lift-50, we-47)
advcl(snapped-55, tried-48)
aux(lift-50, to-49)
xcomp(tried-48, lift-50)
dobj(lift-50, you-51)
poss(arm-54, your-53)
nsubj(snapped-55, arm-54)
ccomp(frozen-41, snapped-55)
prt(snapped-55, off-56)
det(twig-60, a-58)
amod(twig-60, dry-59)
prep_like(snapped-55, twig-60)
prep_of(twig-60, elder-62)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ho))
    (. !)))

root(ROOT-0, Ho-2)

(ROOT
  (NP (NN ho) (. !)))

root(ROOT-0, ho-1)

(ROOT
  (S
    (VP (VB ho))
    (. !) ('' '')))

root(ROOT-0, ho-1)

(ROOT
  (S
    (S
      (VP (VBN laughed)
        (NP (NNP Willie))))
    (: ;) (`` ``)
    (S
      (ADVP (RB then))
      (NP (EX there))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (DT the) (JJR more) (NN room))
            (PP (IN for)
              (NP (NN grannie)))))))
    (. .) ('' '')))

root(ROOT-0, laughed-1)
dobj(laughed-1, Willie-2)
advmod(room-11, then-5)
expl(room-11, there-6)
aux(room-11, would-7)
cop(room-11, be-8)
det(room-11, the-9)
amod(room-11, more-10)
parataxis(laughed-1, room-11)
prep_for(room-11, grannie-13)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN father))
      (VP (VBD laughed)
        (PP (IN with)
          (NP (PRP him)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP$ his) (NN mother))
      (VP (VBD looked)
        (ADJP
          (NP (DT a) (RB little))
          (JJ shocked))))
    (. .)))

poss(father-2, His-1)
nsubj(laughed-3, father-2)
root(ROOT-0, laughed-3)
prep_with(laughed-3, him-5)
poss(mother-9, his-8)
nsubj(looked-10, mother-9)
conj_but(laughed-3, looked-10)
det(little-12, a-11)
npadvmod(shocked-13, little-12)
acomp(looked-10, shocked-13)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (NP (NNP Willie) (, ,))
      ('' '')
      (VP (VBD said)
        (NP (PRP$ his) (NN father))
        (ADVP (RB again))))
    (: ;) (`` ``)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB make)
          (NP (DT another) (NN attempt)))))
    (. .)))

discourse(said-7, No-2)
nsubj(said-7, Willie-4)
root(ROOT-0, said-7)
poss(father-9, his-8)
dobj(said-7, father-9)
advmod(said-7, again-10)
nsubj(make-15, you-13)
aux(make-15, must-14)
parataxis(said-7, make-15)
det(attempt-17, another-16)
dobj(make-15, attempt-17)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must)
      (VP (VB say)
        (PP (IN with)
          (NP (NNP Hamlet)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBN puzzled)
                (PP (IN for)
                  (NP (DT a) (NN plan)))))))
        (: --) (`` `)
        (PP (IN About)
          (NP (PRP$ my) (NNS brains)))))
    (. !) ('' ')))

nsubj(say-3, You-1)
aux(say-3, must-2)
root(ROOT-0, say-3)
prep_with(say-3, Hamlet-5)
advmod(puzzled-9, when-6)
nsubjpass(puzzled-9, he-7)
auxpass(puzzled-9, was-8)
advcl(say-3, puzzled-9)
det(plan-12, a-11)
prep_for(puzzled-9, plan-12)
poss(brains-17, my-16)
prep_about(say-3, brains-17)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP they))
    (VP (MD will)
      (VP (VB suggest)
        (NP (NN something) (NNS wiser))
        (NP (JJ next) (NN time))))
    (. .) ('' '')))

advmod(suggest-4, Perhaps-1)
nsubj(suggest-4, they-2)
aux(suggest-4, will-3)
root(ROOT-0, suggest-4)
nn(wiser-6, something-5)
iobj(suggest-4, wiser-6)
amod(time-8, next-7)
dobj(suggest-4, time-8)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD lay)
      (ADVP (RB so) (RB long))
      (NP (JJ awake) (DT that) (NN night))
      (, ,)
      (S
        (VP (VBG thinking)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (NNP _) (NNP Wheelie) (NNP _))
          (VP (VBD pulled)
            (NP (PRP him))
            (SBAR (IN before)
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN had)
                    (NP
                      (NP (DT a) (NN wink))
                      (PP (IN of)
                        (NP (NN sleep))))))))))))
    (. .)))

nsubj(lay-2, Willie-1)
root(ROOT-0, lay-2)
advmod(long-4, so-3)
advmod(lay-2, long-4)
amod(night-7, awake-5)
det(night-7, that-6)
tmod(lay-2, night-7)
vmod(lay-2, thinking-9)
mark(pulled-15, that-11)
nn(_-14, _-12)
nn(_-14, Wheelie-13)
nsubj(pulled-15, _-14)
ccomp(lay-2, pulled-15)
dobj(pulled-15, him-16)
mark(had-20, before-17)
nsubj(had-20, he-18)
aux(had-20, had-19)
advcl(pulled-15, had-20)
det(wink-22, a-21)
dobj(had-20, wink-22)
prep_of(wink-22, sleep-24)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD got)
        (ADVP (RB up))
        (, ,)
        (PP (IN of)
          (NP (NN course))))
      (, ,)
      (CC and)
      (VP (VBD looked)
        (PP (IN from)
          (NP (DT the) (NN window)))))
    (. .)))

nsubj(got-2, He-1)
nsubj(looked-9, He-1)
root(ROOT-0, got-2)
advmod(got-2, up-3)
prep_of(got-2, course-6)
conj_and(got-2, looked-9)
det(window-12, the-11)
prep_from(looked-9, window-12)

(ROOT
  (S
    (NP (DT The) (NN day))
    (VP (VBD was)
      (VP (VBG dreaming)
        (ADVP (RB grandly))))
    (. .)))

det(day-2, The-1)
nsubj(dreaming-4, day-2)
aux(dreaming-4, was-3)
root(ROOT-0, dreaming-4)
advmod(dreaming-4, grandly-5)

(ROOT
  (S
    (S
      (NP (DT The) (NN sky))
      (VP (VBD was)
        (ADJP (RB pretty) (JJ clear))
        (PP (IN in)
          (NP (NN front)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (JJ full))
        (PP (IN of)
          (NP
            (NP (NNS sparkles))
            (PP (IN of)
              (NP (NN light)))
            (, ,)
            (PP (IN for)
              (NP (DT the) (NNS stars))))))
      (VP (VBD were)
        (VP (VBN kept)
          (PP (IN in)
            (NP (DT the) (NN background)))
          (PP (IN by)
            (NP
              (NP (DT the) (NN moon))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (ADVP (RB down)
                      (NP (DT a) (RB little)))
                    (PP (IN towards)
                      (NP (DT the) (NN west)))))))))))
    (. .)))

det(sky-2, The-1)
nsubj(clear-5, sky-2)
cop(clear-5, was-3)
advmod(clear-5, pretty-4)
root(ROOT-0, clear-5)
prep_in(clear-5, front-7)
nsubjpass(kept-20, full-10)
prep_of(full-10, sparkles-12)
prep_of(sparkles-12, light-14)
det(stars-18, the-17)
prep_for(sparkles-12, stars-18)
auxpass(kept-20, were-19)
conj_and(clear-5, kept-20)
det(background-23, the-22)
prep_in(kept-20, background-23)
det(moon-26, the-25)
agent(kept-20, moon-26)
nsubj(was-29, moon-26)
rcmod(moon-26, was-29)
advmod(was-29, down-30)
det(little-32, a-31)
pobj(down-30, little-32)
det(west-35, the-34)
prep_towards(was-29, west-35)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (VP (VBN sunk)
        (PP (IN below)
          (NP
            (NP (DT the) (NN top))
            (PP (IN of)
              (NP
                (NP (DT a) (JJ huge) (JJ towering) (NN cloud))
                (, ,)
                (NP
                  (NP (DT the) (NNS edges))
                  (PP (IN of)
                    (SBAR
                      (WHNP (WP$ whose)
                        (NP
                          (NP (NNS jags))
                          (CC and)
                          (NP (NNS pinnacles))))
                      (S
                        (NP (PRP she))
                        (VP (VBN bordered)
                          (PP (IN with)
                            (NP
                              (NP (DT a) (NN line))
                              (PP (IN of)
                                (NP (JJ silvery) (NN light))))))))))))))))
    (. .)))

nsubj(sunk-3, She-1)
aux(sunk-3, had-2)
root(ROOT-0, sunk-3)
det(top-6, the-5)
prep_below(sunk-3, top-6)
det(cloud-11, a-8)
amod(cloud-11, huge-9)
amod(cloud-11, towering-10)
prep_of(top-6, cloud-11)
det(edges-14, the-13)
appos(cloud-11, edges-14)
poss(jags-17, whose-16)
dobj(bordered-21, jags-17)
conj_and(jags-17, pinnacles-19)
dobj(bordered-21, pinnacles-19)
nsubj(bordered-21, she-20)
prepc_of(edges-14, bordered-21)
det(line-24, a-23)
prep_with(bordered-21, line-24)
amod(light-27, silvery-26)
prep_of(line-24, light-27)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (DT this) (NN cloud))
      (VP (VBD rose)
        (PP (IN into)
          (NP (DT the) (NN sky)))
        (PP (IN from)
          (ADVP (RB just)))
        (PP (IN behind)
          (NP (DT the) (NNS ruins)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG looking)
          (NP (DT a) (JJ good) (NN deal))
          (PP (IN like)
            (NP (JJ upheaved) (NNS towers)
              (CC and)
              (NNS spires)))))
      (, ,)
      (S
        (VP (VBN made)
          (S
            (NP (NNP Willie))
            (VP (VB think)
              (PP (IN within)
                (NP (PRP himself)))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP
                    (NP (DT a) (JJ grand) (NN place))
                    (NP (DT the) (NN priory)))
                  (VP (MD must)
                    (VP (VB have)
                      (VP (VBN been))))))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP$ its) (NNS roofs)
                    (CC and)
                    (NNS turrets))
                  (VP (VBD rose)
                    (PRT (RP up))
                    (PP (IN into)
                      (NP (DT the) (NN sky)))))))))))
    (. .)))

advmod(rose-4, Now-1)
det(cloud-3, this-2)
nsubj(rose-4, cloud-3)
nsubj(looking-15, cloud-3)
root(ROOT-0, rose-4)
det(sky-7, the-6)
prep_into(rose-4, sky-7)
prep(rose-4, from-8)
pcomp(from-8, just-9)
det(ruins-12, the-11)
prep_behind(rose-4, ruins-12)
conj_and(rose-4, looking-15)
det(deal-18, a-16)
amod(deal-18, good-17)
dobj(looking-15, deal-18)
amod(towers-21, upheaved-20)
prep_like(looking-15, towers-21)
prep_like(looking-15, spires-23)
conj_and(towers-21, spires-23)
parataxis(looking-15, made-25)
nsubj(think-27, Willie-26)
ccomp(made-25, think-27)
prep_within(think-27, himself-29)
dobj(been-38, what-30)
det(place-33, a-31)
amod(place-33, grand-32)
nsubj(been-38, place-33)
det(priory-35, the-34)
dep(place-33, priory-35)
aux(been-38, must-36)
aux(been-38, have-37)
ccomp(think-27, been-38)
advmod(rose-45, when-40)
poss(roofs-42, its-41)
nsubj(rose-45, roofs-42)
conj_and(roofs-42, turrets-44)
nsubj(rose-45, turrets-44)
advcl(think-27, rose-45)
prt(rose-45, up-46)
det(sky-49, the-48)
prep_into(rose-45, sky-49)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (VBP say)
      (NP
        (NP (DT a) (NN lot))
        (PP (IN of)
          (NP
            (NP (NNS people))
            (VP (VBN lived)
              (PP (IN in)
                (NP (PRP it)))
              (ADVP (RB then)))))))
    (. !) ('' '')))

nsubj(say-3, They-2)
root(ROOT-0, say-3)
det(lot-5, a-4)
dobj(say-3, lot-5)
prep_of(lot-5, people-7)
vmod(people-7, lived-8)
prep_in(lived-8, it-10)
advmod(lived-8, then-11)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD thought)
      (PP (IN with)
        (NP (PRP himself)))
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD stood)
            (S
              (VP (VBG gazing)
                (PP (IN at)
                  (NP (DT the) (NN cloud)))))))))
    (. .)))

nsubj(thought-2, he-1)
root(ROOT-0, thought-2)
prep_with(thought-2, himself-4)
mark(stood-7, as-5)
nsubj(stood-7, he-6)
advcl(thought-2, stood-7)
xcomp(stood-7, gazing-8)
det(cloud-11, the-10)
prep_at(gazing-8, cloud-11)

(ROOT
  (S
    (ADVP (RB Suddenly))
    (NP (PRP he))
    (VP
      (VP (VBD gave)
        (NP (DT a) (JJ great) (NN jump)))
      (, ,)
      (CC and)
      (VP (VBD clapped)
        (NP (PRP$ his) (NNS hands))
        (ADVP
          (ADVP (RB so) (JJ loud))
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBD woke)
                (NP (PRP$ his) (NN father))))))))
    (. .)))

advmod(gave-3, Suddenly-1)
nsubj(gave-3, he-2)
nsubj(clapped-9, he-2)
root(ROOT-0, gave-3)
det(jump-6, a-4)
amod(jump-6, great-5)
dobj(gave-3, jump-6)
conj_and(gave-3, clapped-9)
poss(hands-11, his-10)
dobj(clapped-9, hands-11)
advmod(loud-13, so-12)
advmod(clapped-9, loud-13)
mark(woke-16, that-14)
nsubj(woke-16, he-15)
advcl(loud-13, woke-16)
ccomp(loud-13, woke-16)
poss(father-18, his-17)
dobj(woke-16, father-18)

(ROOT
  (S (`` ``)
    (VP (VB Is)
      (NP (NN anything))
      (NP
        (NP (DT the) (NN matter))
        (, ,)
        (NP (PRP$ my) (NN boy))))
    (. ?) ('' '')))

cop(anything-3, Is-2)
root(ROOT-0, anything-3)
det(matter-5, the-4)
dep(anything-3, matter-5)
poss(boy-8, my-7)
appos(matter-5, boy-8)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked) (, ,)
      (S
        (VP
          (VP (VBG opening)
            (NP
              (NP (NNP Willie) (POS 's))
              (NN door)))
          (, ,)
          (CC and)
          (VP (VBG peeping)
            (PRT (RP in))))))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)
ccomp(asked-2, opening-4)
poss(door-7, Willie-5)
dobj(opening-4, door-7)
ccomp(asked-2, peeping-10)
conj_and(opening-4, peeping-10)
prt(peeping-10, in-11)

(ROOT
  (SINV (`` ``)
    (NP
      (NP (NNP No))
      (, ,)
      (NP
        (NP (NN papa))
        (, ,)
        (NP (NN nothing))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (. .)))

dep(answered-9, No-2)
appos(No-2, papa-4)
appos(papa-4, nothing-6)
root(ROOT-0, answered-9)
nsubj(answered-9, Willie-10)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (RB Only) (NN something))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD came)
            (PP (IN into)
              (NP (PRP$ my) (NN head)))
            (PP (IN with)
              (NP (DT a) (JJ great) (NN bounce)))))))
    (. !) ('' '')))

advmod(something-3, Only-2)
root(ROOT-0, something-3)
nsubj(came-5, something-3)
rcmod(something-3, came-5)
poss(head-8, my-7)
prep_into(came-5, head-8)
det(bounce-12, a-10)
amod(bounce-12, great-11)
prep_with(came-5, bounce-12)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (S (: --)
    (SBAR
      (WHADVP (WRB Where))
      (S
        (VP (VBD did)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBP come)
                (PP (IN from))))))))
    (, ,)
    (VP (VBZ Willie))
    (. ?) ('' '')))

advmod(did-3, Where-2)
parataxis(Willie-8, did-3)
nsubj(come-5, it-4)
ccomp(did-3, come-5)
prep(come-5, from-6)
root(ROOT-0, Willie-8)

(ROOT
  (S (`` ``)
    (NP
      (NP (IN Out))
      (PP (IN of)
        (NP (DT that))))
    (VP (VBP cloud)
      (ADVP (RB there)))
    (. .)))

nsubj(cloud-5, Out-2)
prep_of(Out-2, that-4)
root(ROOT-0, cloud-5)
advmod(cloud-5, there-6)

(ROOT
  (FRAG
    (S
      (VP (VBZ Is) (RB n't)
        (NP
          (NP (PRP it))
          (NP (DT a) (JJ grand) (NN one)))))
    (. ?) ('' '')))

cop(it-3, Is-1)
neg(it-3, n't-2)
root(ROOT-0, it-3)
det(one-6, a-4)
amod(one-6, grand-5)
dep(it-3, one-6)

(ROOT
  (S (`` ``)
    (NP (NNP Grand))
    (VP
      (ADVP (RB enough) (RB certainly))
      (S
        (VP (TO to)
          (VP (VB put)
            (NP (JJ many) (NNS thoughts))
            (PP (IN into)
              (NP
                (NP
                  (NP (DT a) (NN body) (POS 's))
                  (NN head))
                (, ,)
                (NP (NNP Willie))))))))
    (. .)))

nsubj(certainly-4, Grand-2)
nsubj(put-6, Grand-2)
advmod(certainly-4, enough-3)
root(ROOT-0, certainly-4)
aux(put-6, to-5)
xcomp(certainly-4, put-6)
amod(thoughts-8, many-7)
dobj(put-6, thoughts-8)
det(body-11, a-10)
poss(head-13, body-11)
prep_into(put-6, head-13)
appos(head-13, Willie-15)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBD did)
      (NP (PRP it))
      (VP (VB put)
        (PP (IN into)
          (NP (NNP yours)))))
    (. ?) ('' '')))

dobj(put-4, What-1)
aux(put-4, did-2)
nsubj(put-4, it-3)
root(ROOT-0, put-4)
prep_into(put-4, yours-6)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Please))
      (, ,)
      (NP (PRP I))
      (VP (MD would)
        (ADVP (RB rather))
        (RB not)
        (VP (VB tell)
          (NP
            (NP (RB just) (RB yet))
            (, ,) ('' '')
            (VP (VBN answered)
              (NP (NNP Willie))))))
      (, ,) ('' ''))
    (: --)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB mind)))))
      (, ,)
      (VP (VB father)))
    (. .) ('' '')))

discourse(tell-8, Please-2)
nsubj(tell-8, I-4)
aux(tell-8, would-5)
advmod(tell-8, rather-6)
neg(tell-8, not-7)
root(ROOT-0, tell-8)
advmod(yet-10, just-9)
dobj(tell-8, yet-10)
vmod(yet-10, answered-13)
dobj(answered-13, Willie-14)
mark(mind-22, if-18)
nsubj(mind-22, you-19)
aux(mind-22, do-20)
neg(mind-22, n't-21)
advcl(father-24, mind-22)
parataxis(tell-8, father-24)

(ROOT
  (FRAG (`` ``)
    (NP (RB Not) (DT a) (NN bit))
    (, ,)
    (NP (PRP$ my) (NN boy))
    (. .)))

neg(bit-4, Not-2)
det(bit-4, a-3)
root(ROOT-0, bit-4)
poss(boy-7, my-6)
dep(bit-4, boy-7)

(ROOT
  (S
    (VP (VB Tell)
      (NP (PRP me))
      (SBAR
        (WHADVP (RB just) (WRB when))
        (S
          (NP (PRP you))
          (VP
            (VP (VBP please))
            (, ,)
            (CC or)
            (VP (VBP do) (RB n't)
              (VP (VB tell)
                (NP (PRP me))
                (ADVP (IN at) (DT all))))))))
    (. .)))

root(ROOT-0, Tell-1)
dobj(Tell-1, me-2)
advmod(when-4, just-3)
advmod(please-6, when-4)
nsubj(please-6, you-5)
nsubj(tell-11, you-5)
ccomp(Tell-1, please-6)
aux(tell-11, do-9)
neg(tell-11, n't-10)
ccomp(Tell-1, tell-11)
conj_or(please-6, tell-11)
dobj(tell-11, me-12)
advmod(tell-11, at-13)
pobj(at-13, all-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB hear)
              (NP (PRP it))
              (, ,)
              (PRN (CC but)
                (ADVP (RB only))
                (PP (IN at)
                  (NP
                    (NP (PRP$ your) (NN pleasure))
                    (, ,)
                    (NP (NNP Willie))))))))))
    (. .) ('' '')))

nsubj(like-3, I-1)
nsubj(hear-5, I-1)
aux(like-3, should-2)
root(ROOT-0, like-3)
aux(hear-5, to-4)
xcomp(like-3, hear-5)
dobj(hear-5, it-6)
cc(at-10, but-8)
dep(at-10, only-9)
dep(hear-5, at-10)
poss(pleasure-12, your-11)
pobj(at-10, pleasure-12)
appos(pleasure-12, Willie-14)

(ROOT
  (S (`` ``)
    (VP (VB Thank)
      (NP (PRP you))
      (, ,)
      (NP (NN father)))
    (. .)))

root(ROOT-0, Thank-2)
dobj(Thank-2, you-3)
dobj(Thank-2, father-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do)
      (SBAR
        (S
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB tell)
                  (NP (PRP you))))))))
      (, ,)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP know)))
        (, ,)
        (CC but)
        (S (RB not)
          (ADJP (RB just) (RB yet)))))
    (. .) ('' '')))

nsubj(do-2, I-1)
root(ROOT-0, do-2)
ccomp(do-2, want-3)
aux(tell-5, to-4)
xcomp(want-3, tell-5)
dobj(tell-5, you-6)
nsubj(know-9, you-8)
ccomp(do-2, know-9)
neg(yet-14, not-12)
advmod(yet-14, just-13)
ccomp(do-2, yet-14)
conj_but(know-9, yet-14)

(ROOT
  (S (`` ``)
    (VP (VB Very)
      (ADVP (RB well))
      (, ,)
      (NP (PRP$ my) (NN boy)))
    (. .)))

root(ROOT-0, Very-2)
advmod(Very-2, well-3)
poss(boy-6, my-5)
dobj(Very-2, boy-6)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (VP (VB go)
        (PP (TO to)
          (NP (NN bed)))))
    (, ,)
    (CC and)
    (S
      (NP (NN sleep))
      (VP (MD may)
        (ADVP (RB better)
          (NP (DT the) (NN thought))
          (PP (IN before)
            (NP (DT the) (NN morning))))))
    (. .) ('' '')))

advmod(go-2, Now-1)
root(ROOT-0, go-2)
prep_to(go-2, bed-4)
nsubj(may-8, sleep-7)
conj_and(go-2, may-8)
advmod(may-8, better-9)
det(thought-11, the-10)
pobj(better-9, thought-11)
det(morning-14, the-13)
prep_before(better-9, morning-14)

(ROOT
  (S
    (NP (NNP Willie))
    (ADVP (RB soon))
    (VP (VBD fell)
      (ADJP (RB asleep))
      (ADVP (RB now))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD believed)
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN found)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP he))
                        (VP (VBD wanted))))))))))))
    (. .)))

nsubj(fell-3, Willie-1)
advmod(fell-3, soon-2)
root(ROOT-0, fell-3)
acomp(fell-3, asleep-4)
advmod(fell-3, now-5)
mark(believed-9, for-7)
nsubj(believed-9, he-8)
advcl(fell-3, believed-9)
nsubj(found-12, he-10)
aux(found-12, had-11)
ccomp(believed-9, found-12)
dobj(wanted-15, what-13)
nsubj(wanted-15, he-14)
ccomp(found-12, wanted-15)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADVP (RB up) (RBR earlier))
      (PP
        (PP (IN than)
          (NP (JJ usual) (DT the) (JJ next) (NN morning)))
        (, ,)
        (CC and)
        (RB out)
        (PP (IN in)
          (NP (DT the) (NN garden)))))
    (. .)))

nsubj(was-2, He-1)
root(ROOT-0, was-2)
advmod(earlier-4, up-3)
advmod(was-2, earlier-4)
prep(was-2, than-5)
amod(morning-9, usual-6)
det(morning-9, the-7)
amod(morning-9, next-8)
pobj(than-5, morning-9)
prep(was-2, out-12)
conj_and(than-5, out-12)
dep(than-5, in-13)
det(garden-15, the-14)
pobj(in-13, garden-15)

(ROOT
  (S (`` ``)
    (ADVP (RB Surely))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD said)
          (PP (TO to)
            (NP (PRP himself)))))
      (, ,))
    (`` ``)
    (NP
      (NP (DT those) (NNS ruins))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (ADVP (RB once))
          (VP (VBD held)
            (NP
              (ADJP (RB so) (JJ many))
              (NNS monks)))))
      (, ,))
    (VP (MD might)
      (VP (VB manage)
        (ADVP (RB even) (RB yet))
        (S
          (VP (TO to)
            (VP (VB find)
              (NP (NN room))
              (PP (IN for)
                (NP (PRP me))))))))
    (. !) ('' '')))

advmod(manage-22, Surely-2)
nsubj(said-6, he-5)
parataxis(manage-22, said-6)
prep_to(said-6, himself-8)
det(ruins-12, those-11)
nsubj(held-16, ruins-12)
nsubj(manage-22, ruins-12)
nsubj(find-26, ruins-12)
advmod(held-16, once-15)
rcmod(ruins-12, held-16)
advmod(many-18, so-17)
amod(monks-19, many-18)
dobj(held-16, monks-19)
aux(manage-22, might-21)
root(ROOT-0, manage-22)
advmod(yet-24, even-23)
advmod(manage-22, yet-24)
aux(find-26, to-25)
xcomp(manage-22, find-26)
dobj(find-26, room-27)
prep_for(find-26, me-29)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD went)
      (S
        (VP (VBG wandering)
          (PRT (RP about))
          (PP (IN amongst)
            (NP (PRP them)))))
      (, ,)
      (PP (IN like)
        (NP
          (NP (DT an)
            (ADJP (JJ undecided) (JJ young))
            (NN bird))
          (VP (VBG looking)
            (PP (IN for)
              (NP (DT the)
                (ADJP (RB very) (JJS best))
                (JJ possible) (NN spot)))
            (S
              (VP (TO to)
                (VP (VB build)
                  (NP (PRP$ its) (NN nest))
                  (PP (IN in)))))))))
    (. .)))

nsubj(went-2, He-1)
root(ROOT-0, went-2)
xcomp(went-2, wandering-3)
prt(wandering-3, about-4)
prep_amongst(wandering-3, them-6)
det(bird-12, an-9)
amod(young-11, undecided-10)
amod(bird-12, young-11)
prep_like(went-2, bird-12)
vmod(bird-12, looking-13)
det(spot-19, the-15)
advmod(best-17, very-16)
amod(spot-19, best-17)
amod(spot-19, possible-18)
prep_for(looking-13, spot-19)
aux(build-21, to-20)
xcomp(looking-13, build-21)
poss(nest-23, its-22)
dobj(build-21, nest-23)
prep(build-21, in-24)

(ROOT
  (S
    (NP
      (NP (DT The) (NN spot))
      (SBAR
        (S
          (NP (NNP Willie))
          (VP (VBD sought)))))
    (VP (VBD was)
      (NP
        (NP (DT that))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (MD would)
              (VP (VB require)
                (S
                  (NP
                    (NP (DT the) (JJS least) (NN labour))
                    (CC and)
                    (NP (JJS least)))
                  (ADJP (NN material)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (NP (PRP it))
                          (PP (IN into)
                            (NP (DT a) (NN room))))))))))))))
    (. .)))

det(spot-2, The-1)
nsubj(that-6, spot-2)
nsubj(sought-4, Willie-3)
rcmod(spot-2, sought-4)
cop(that-6, was-5)
root(ROOT-0, that-6)
nsubj(require-9, that-6)
aux(require-9, would-8)
rcmod(that-6, require-9)
det(labour-12, the-10)
amod(labour-12, least-11)
nsubj(material-15, labour-12)
nsubj(make-17, labour-12)
conj_and(labour-12, least-14)
nsubj(material-15, least-14)
nsubj(make-17, least-14)
xcomp(require-9, material-15)
aux(make-17, to-16)
xcomp(material-15, make-17)
dobj(make-17, it-18)
det(room-21, a-20)
prep_into(make-17, room-21)

(ROOT
  (S
    (S
      (SBAR (IN Before)
        (S
          (NP (PRP he))
          (VP (VBD heard)
            (NP
              (NP (DT the) (NN voice))
              (PP (IN of)
                (NP (NNP Tibby))))
            (, ,)
            (S
              (VP (VBG calling)
                (S
                  (NP (PRP him))
                  (VP (TO to)
                    (VP (VB come)
                      (PP (TO to)
                        (NP (PRP$ his) (NN porridge)))))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN fixed)
          (PP (IN upon)
            (NP (CD one))))))
    (: ;)
    (CC and)
    (S
      (PP (IN in)
        (NP (DT the) (JJ following) (NN chapter)))
      (NP (PRP I))
      (VP (MD will)
        (VP (VB tell)
          (NP (PRP you))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBD led)
                (S
                  (NP (PRP him))
                  (VP (TO to)
                    (VP (VB choose)
                      (NP (PRP it)))))))))))
    (. .)))

mark(heard-3, Before-1)
nsubj(heard-3, he-2)
advcl(fixed-19, heard-3)
det(voice-5, the-4)
dobj(heard-3, voice-5)
prep_of(voice-5, Tibby-7)
vmod(heard-3, calling-9)
dobj(calling-9, him-10)
nsubj(come-12, him-10)
aux(come-12, to-11)
xcomp(calling-9, come-12)
poss(porridge-15, his-14)
prep_to(come-12, porridge-15)
nsubj(fixed-19, he-17)
aux(fixed-19, had-18)
root(ROOT-0, fixed-19)
prep_upon(fixed-19, one-21)
det(chapter-27, the-25)
amod(chapter-27, following-26)
prep_in(tell-30, chapter-27)
nsubj(tell-30, I-28)
aux(tell-30, will-29)
conj_and(fixed-19, tell-30)
dobj(tell-30, you-31)
nsubj(led-33, what-32)
dep(tell-30, led-33)
dobj(led-33, him-34)
nsubj(choose-36, him-34)
aux(choose-36, to-35)
xcomp(led-33, choose-36)
dobj(choose-36, it-37)

(ROOT
  (S
    (S
      (NP
        (NP (PDT All) (DT the) (NN time))
        (PP (IN between)
          (NP (NN morning)
            (CC and)
            (NN afternoon) (NN school)))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD spent)
        (PP (IN in)
          (NP (DT the) (JJ same) (NN place)))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD came)
            (NP (NN home))
            (PP (IN in)
              (NP (DT the) (NN evening))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBN accompanied)
          (PP (IN by)
            (NP
              (NP (NNP Mr) (NNP Spelman))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD went)
                    (PP (IN with)
                      (NP (PRP him)))
                    (PP (RB straight)
                      (PP (TO to)
                        (NP (DT the) (NNS ruins))))))))))))
    (. .)))

predet(time-3, All-1)
det(time-3, the-2)
root(ROOT-0, time-3)
nn(school-8, morning-5)
conj_and(morning-5, afternoon-7)
nn(school-8, afternoon-7)
prep_between(time-3, school-8)
nsubj(spent-11, he-10)
conj_and(time-3, spent-11)
det(place-15, the-13)
amod(place-15, same-14)
prep_in(spent-11, place-15)
advmod(came-20, when-18)
nsubj(came-20, he-19)
advcl(accompanied-28, came-20)
dobj(came-20, home-21)
det(evening-24, the-23)
prep_in(came-20, evening-24)
nsubjpass(accompanied-28, he-26)
auxpass(accompanied-28, was-27)
conj_and(time-3, accompanied-28)
nn(Spelman-31, Mr-30)
agent(accompanied-28, Spelman-31)
nsubj(went-34, Spelman-31)
rcmod(Spelman-31, went-34)
prep_with(went-34, him-36)
advmod(went-34, straight-37)
det(ruins-40, the-39)
prep_to(went-34, ruins-40)

(ROOT
  (S
    (S
      (ADVP (RB There))
      (NP (PRP they))
      (VP (VBD were)
        (NP (DT a) (JJ good) (NN while))
        (ADVP (RB together))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP
            (NP (NNP Willie))
            (PP (IN at)
              (NP (NN length))))
          (VP (VBD came)
            (PRT (RP in)))))
      (, ,)
      (NP (PRP$ his) (NN mother))
      (VP (VBD saw)
        (SBAR (IN that)
          (S
            (NP (PRP$ his) (NN face))
            (VP
              (VP (VBD was)
                (ADVP (RBR more) (IN than))
                (ADJP (RB usually) (JJ radiant)))
              (, ,)
              (CC and)
              (VP (VBD was)
                (ADJP (JJ certain)
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD had)
                        (NP
                          (NP (DT some) (JJ new) (NN scheme))
                          (CC or)
                          (NP (JJ other)))))))
                (PP (IN in)
                  (NP (PRP$ his) (NN head)))))))))
    (. .)))

advmod(while-6, There-1)
nsubj(while-6, they-2)
cop(while-6, were-3)
det(while-6, a-4)
amod(while-6, good-5)
root(ROOT-0, while-6)
advmod(while-6, together-7)
advmod(came-14, when-10)
nsubj(came-14, Willie-11)
prep_at(Willie-11, length-13)
advcl(saw-19, came-14)
prt(came-14, in-15)
poss(mother-18, his-17)
nsubj(saw-19, mother-18)
conj_and(while-6, saw-19)
mark(radiant-27, that-20)
poss(face-22, his-21)
nsubj(radiant-27, face-22)
nsubj(certain-31, face-22)
cop(radiant-27, was-23)
advmod(than-25, more-24)
advmod(radiant-27, than-25)
advmod(radiant-27, usually-26)
ccomp(saw-19, radiant-27)
cop(certain-31, was-30)
ccomp(saw-19, certain-31)
conj_and(radiant-27, certain-31)
nsubj(had-33, he-32)
ccomp(certain-31, had-33)
det(scheme-36, some-34)
amod(scheme-36, new-35)
dobj(had-33, scheme-36)
dobj(had-33, other-38)
conj_or(scheme-36, other-38)
poss(head-41, his-40)
prep_in(certain-31, head-41)

(ROOT
  (NP (NNP CHAPTER) (NNP XIII) (. .)))

nn(XIII-2, CHAPTER-1)
root(ROOT-0, XIII-2)

(ROOT
  (S
    (NP (NNP WILLIE))
    (VP (VBZ 'S)
      (NP
        (NP (NNP NEST))
        (PP (IN IN)
          (NP (DT THE) (NNS RUINS)))))
    (. .)))

nsubj(NEST-3, WILLIE-1)
cop(NEST-3, 'S-2)
root(ROOT-0, NEST-3)
det(RUINS-6, THE-5)
prep_in(NEST-3, RUINS-6)

(ROOT
  (S
    (NP
      (NP (DT The) (NN spot))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN fixed)
              (PP (RB upon)))))))
    (VP (VBD was)
      (PP
        (PP (IN in)
          (NP
            (NP (DT the) (NN part))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS ruins))
                (PP (IN next)
                  (NP (DT the) (NN cottage)))))))
        (, ,) (RB not)
        (PP
          (NP (JJ many) (NNS yards))
          (IN from)
          (NP
            (NP (DT the) (JJ back) (NN door))
            (PP (IN of)
              (NP (PRP it)))))))
    (. .)))

det(spot-2, The-1)
pobj(upon-6, spot-2)
nsubj(was-7, spot-2)
nsubj(fixed-5, he-3)
aux(fixed-5, had-4)
rcmod(spot-2, fixed-5)
prep(fixed-5, upon-6)
root(ROOT-0, was-7)
det(part-10, the-9)
prep_in(was-7, part-10)
det(ruins-13, the-12)
prep_of(part-10, ruins-13)
det(cottage-16, the-15)
prep_next(ruins-13, cottage-16)
neg(was-7, not-18)
amod(yards-20, many-19)
npadvmod(was-7, yards-20)
det(door-24, the-22)
amod(door-24, back-23)
prep_from(was-7, door-24)
prep_of(door-24, it-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBD said)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBD were)
              (ADVP (RB still))
              (NP
                (NP (DT a) (JJ few) (JJ vaulted) (NNS places))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN ground-level))
                    (VP (VBN used)
                      (PP (IN by)
                        (NP (DT the) (NN family))))))))))))
    (. .)))

nsubj(said-3, I-1)
aux(said-3, have-2)
root(ROOT-0, said-3)
expl(were-5, there-4)
ccomp(said-3, were-5)
advmod(were-5, still-6)
det(places-10, a-7)
amod(places-10, few-8)
amod(places-10, vaulted-9)
nsubj(were-5, places-10)
det(ground-level-13, the-12)
prep_on(places-10, ground-level-13)
vmod(ground-level-13, used-14)
det(family-17, the-16)
agent(used-14, family-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NN vault))
      (PP (IN over)
        (NP (DT the) (NN wood-house))))
    (VP
      (VP (VBD was)
        (ADJP (RB perfectly) (JJ sound)
          (CC and)
          (JJ weather-tight)))
      (, ,)
      (CC and)
      (VP (, ,)
        (ADVP (RB therefore))
        (, ,)
        (SBAR (IN as)
          (S
            (NP
              (NP (NNP Willie))
              (CC and)
              (NP (DT the) (NN carpenter)))
            (VP (VBD agreed) (, ,)
              (S
                (ADJP (RB quite) (JJ safe)
                  (SBAR
                    (S
                      (VP (TO to)
                        (VP (VB roost)
                          (PP (RB upon)))))))))))))
    (. .)))

det(vault-2, The-1)
nsubj(sound-8, vault-2)
nsubj(weather-tight-10, vault-2)
det(wood-house-5, the-4)
prep_over(vault-2, wood-house-5)
cop(sound-8, was-6)
advmod(sound-8, perfectly-7)
root(ROOT-0, sound-8)
conj_and(sound-8, weather-tight-10)
conj_and(sound-8, therefore-14)
mark(agreed-21, as-16)
nsubj(agreed-21, Willie-17)
det(carpenter-20, the-19)
conj_and(Willie-17, carpenter-20)
nsubj(agreed-21, carpenter-20)
advcl(therefore-14, agreed-21)
advmod(safe-24, quite-23)
dep(agreed-21, safe-24)
aux(roost-26, to-25)
ccomp(safe-24, roost-26)
prep(roost-26, upon-27)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (NN corner)))
    (S
      (UCP
        (NP (RB outside))
        (, ,)
        (CC and)
        (ADVP (RB now))
        (ADJP (JJ open)
          (PP (TO to)
            (NP (DT the) (NNS elements))))))
    (, ,)
    (VP (VBD had)
      (ADVP (RB once))
      (VP (VBN been)
        (NP
          (NP (DT a) (JJ small) (JJ winding) (NN stone) (NN stair))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD led)
                (PP (TO to)
                  (NP (DT the) (NN room)))
                (PP (IN above))
                (, ,)
                (PP (IN on)
                  (NP
                    (NP (DT the) (JJ few) (JJ broken) (NNS fragments))
                    (SBAR
                      (WHPP (IN of)
                        (WHNP (WDT which)))
                      (PRN (, ,)
                        (S
                          (VP (VBG projecting)
                            (PP (IN from)
                              (NP
                                (NP (DT the) (CD two) (NNS sides))
                                (PP (IN of)
                                  (NP (DT the) (NN corner)))))))
                        (, ,))
                      (S
                        (NP (PRP it))
                        (VP (VBD was)
                          (ADVP (RB just))
                          (ADJP (JJ possible)
                            (S
                              (VP (TO to)
                                (VP
                                  (VP (VB climb))
                                  (, ,)
                                  (CC and)
                                  (ADVP (RB so))
                                  (VP (VB reach)
                                    (NP
                                      (NP (DT the) (NN top))
                                      (PP (IN of)
                                        (NP (DT the) (NN vault))))))))))))))))))))
    (. .)))

det(corner-3, a-2)
prep_in(stair-20, corner-3)
ccomp(stair-20, outside-4)
advmod(open-8, now-7)
conj_and(outside-4, open-8)
ccomp(stair-20, open-8)
det(elements-11, the-10)
prep_to(open-8, elements-11)
aux(stair-20, had-13)
advmod(stair-20, once-14)
cop(stair-20, been-15)
det(stair-20, a-16)
amod(stair-20, small-17)
amod(stair-20, winding-18)
nn(stair-20, stone-19)
root(ROOT-0, stair-20)
nsubj(led-23, stair-20)
prep_above(led-23, stair-20)
rcmod(stair-20, led-23)
det(room-26, the-25)
prep_to(led-23, room-26)
det(fragments-33, the-30)
amod(fragments-33, few-31)
amod(fragments-33, broken-32)
prep_on(led-23, fragments-33)
prep_of(possible-49, fragments-33)
dep(possible-49, projecting-37)
det(sides-41, the-39)
num(sides-41, two-40)
prep_from(projecting-37, sides-41)
det(corner-44, the-43)
prep_of(sides-41, corner-44)
nsubj(possible-49, it-46)
nsubj(climb-51, it-46)
nsubj(reach-55, it-46)
cop(possible-49, was-47)
advmod(possible-49, just-48)
rcmod(fragments-33, possible-49)
aux(climb-51, to-50)
xcomp(possible-49, climb-51)
xcomp(possible-49, reach-55)
conj_and(climb-51, reach-55)
det(top-57, the-56)
dobj(reach-55, top-57)
det(vault-60, the-59)
prep_of(top-57, vault-60)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD had)
      (ADVP (RB often))
      (VP (VBN got)
        (PRT (RP up))
        (S
          (VP (TO to)
            (VP (VB look)
              (PRT (RP out))
              (PP (IN through)
                (NP (DT a) (JJ small) (, ,) (JJ flat-arched) (NN window)))
              (PP (IN into)
                (NP
                  (NP (DT the) (NN garden))
                  (PP (IN of)
                    (NP (DT the) (NN manse))))))))))
    (. .)))

nsubj(got-4, Willie-1)
nsubj(look-7, Willie-1)
aux(got-4, had-2)
advmod(got-4, often-3)
root(ROOT-0, got-4)
prt(got-4, up-5)
aux(look-7, to-6)
xcomp(got-4, look-7)
prt(look-7, out-8)
det(window-14, a-10)
amod(window-14, small-11)
amod(window-14, flat-arched-13)
prep_through(look-7, window-14)
det(garden-17, the-16)
prep_into(look-7, garden-17)
det(manse-20, the-19)
prep_of(garden-17, manse-20)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP
          (NP (NNP Mr) (NNP Shepherd))
          (, ,)
          (NP (DT the) (NN clergyman))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (ADVP (RB often))
              (VP (VBD walked)
                (PP (IN in)
                  (NP (PRP$ his) (NN garden))))))
          (, ,))
        (VP (VBD caught)
          (NP
            (NP (NN sight))
            (PP (IN of)
              (NP (PRP him)))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP
        (ADVP (RB always))
        (VBD came)
        (NP (NNS nearer)))
      (, ,)
      (CC and)
      (VP (VBD had)
        (NP
          (NP (DT a) (NN chat))
          (PP (IN with)
            (NP (PRP him)))))
      (: ;)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD did) (RB not)
            (VP (VB mind)
              (NP (JJ such) (NNS people))
              (PP (IN as)
                (S
                  (NP (NNP Willie))
                  (VP
                    (VP (VBG looking)
                      (PP (IN into)
                        (NP (PRP$ his) (NN garden))))
                    (, ,)
                    (CC and)
                    (VP (VBG seeing)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP he))
                          (VP (VBD was)
                            (ADJP (IN about))))))))))))))
    (. .)))

advmod(caught-15, When-1)
nn(Shepherd-3, Mr-2)
nsubj(walked-10, Shepherd-3)
nsubj(caught-15, Shepherd-3)
det(clergyman-6, the-5)
appos(Shepherd-3, clergyman-6)
advmod(walked-10, often-9)
rcmod(Shepherd-3, walked-10)
poss(garden-13, his-12)
prep_in(walked-10, garden-13)
advcl(came-22, caught-15)
dobj(caught-15, sight-16)
prep_of(sight-16, him-18)
nsubj(came-22, he-20)
nsubj(had-26, he-20)
advmod(came-22, always-21)
root(ROOT-0, came-22)
dobj(came-22, nearer-23)
conj_and(came-22, had-26)
det(chat-28, a-27)
dobj(had-26, chat-28)
prep_with(chat-28, him-30)
mark(mind-36, for-32)
nsubj(mind-36, he-33)
aux(mind-36, did-34)
neg(mind-36, not-35)
advcl(came-22, mind-36)
conj_and(came-22, mind-36)
amod(people-38, such-37)
dobj(mind-36, people-38)
nsubj(looking-41, Willie-40)
nsubj(seeing-47, Willie-40)
prepc_as(mind-36, looking-41)
poss(garden-44, his-43)
prep_into(looking-41, garden-44)
prepc_as(mind-36, seeing-47)
conj_and(looking-41, seeing-47)
dobj(about-51, what-48)
nsubj(about-51, he-49)
cop(about-51, was-50)
ccomp(seeing-47, about-51)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (S
      (ADVP (RB also))
      (NP
        (NP (JJ little) (NNS Mona))
        (, ,)
        (NP
          (NP (DT a) (NN girl))
          (PP (IN of)
            (NP (PRP$ his) (JJ own) (NN age))))
        (, ,))
      (VP (MD would)
        (VP (VB be)
          (VP (VBG running) (IN about)))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP
          (NP (PRP she))
          (ADVP (RB also)))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP she))
            (VP (VBD caught)
              (NP
                (NP (NN sight))
                (PP (IN of)
                  (NP (NNP Willie)))))))
        (, ,))
      (VP (VBD was)
        (ADJP (JJ sure)
          (S
            (VP (TO to)
              (VP (VB come)
                (S
                  (VP
                    (VP (VBG hopping))
                    (CC and)
                    (VP (VBG skipping)
                      (PP (IN like)
                        (NP
                          (NP (DT a) (NN bird)
                            (S
                              (VP (TO to)
                                (VP
                                  (VP (VB have)
                                    (NP
                                      (NP (DT a) (NN talk))
                                      (PP (IN with)
                                        (NP (PRP him)))))
                                  (, ,)
                                  (CC and)
                                  (VP (VB beg)
                                    (S
                                      (NP (PRP him))
                                      (VP (TO to)
                                        (VP (VB take)
                                          (NP (PRP her))
                                          (PRT (RP up))))))))))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (PRN (, ,)
                                (S
                                  (NP (PRP he))
                                  (VP
                                    (ADVP (RB as) (RB often))
                                    (VBD assured)
                                    (NP (PRP her))))
                                (, ,))
                              (VP (VBD was)
                                (ADJP
                                  (ADVP (DT all)
                                    (CC but))
                                  (JJ impossible))))))))))))))))
    (. .)))

advmod(running-15, Sometimes-1)
advmod(running-15, also-2)
amod(Mona-4, little-3)
nsubj(running-15, Mona-4)
det(girl-7, a-6)
appos(Mona-4, girl-7)
poss(age-11, his-9)
amod(age-11, own-10)
prep_of(girl-7, age-11)
aux(running-15, would-13)
aux(running-15, be-14)
root(ROOT-0, running-15)
dep(running-15, about-16)
nsubj(sure-30, she-19)
nsubj(come-32, she-19)
advmod(she-19, also-20)
mark(caught-24, if-22)
nsubj(caught-24, she-23)
dep(she-19, caught-24)
dobj(caught-24, sight-25)
prep_of(sight-25, Willie-27)
cop(sure-30, was-29)
conj_and(running-15, sure-30)
aux(come-32, to-31)
xcomp(sure-30, come-32)
ccomp(come-32, hopping-33)
ccomp(come-32, skipping-35)
conj_and(hopping-33, skipping-35)
det(bird-38, a-37)
prep_like(skipping-35, bird-38)
nsubj(impossible-65, bird-38)
aux(have-40, to-39)
vmod(bird-38, have-40)
det(talk-42, a-41)
dobj(have-40, talk-42)
prep_with(talk-42, him-44)
vmod(bird-38, beg-47)
conj_and(have-40, beg-47)
dobj(beg-47, him-48)
nsubj(take-50, him-48)
aux(take-50, to-49)
xcomp(beg-47, take-50)
dobj(take-50, her-51)
prt(take-50, up-52)
nsubj(assured-59, he-56)
advmod(often-58, as-57)
advmod(assured-59, often-58)
parataxis(impossible-65, assured-59)
dobj(assured-59, her-60)
cop(impossible-65, was-62)
mwe(but-64, all-63)
advmod(impossible-65, but-64)
rcmod(bird-38, impossible-65)

(ROOT
  (S
    (S
      (S
        (PP (TO To)
          (NP (DT this) (NN place)))
        (NP (NNP Mr) (NNP Spelman)
          (CC and)
          (NNP Willie))
        (VP (VBD climbed)))
      (, ,)
      (CC and)
      (S
        (NP (EX there))
        (VP (VBD held)
          (NP
            (NP (NN consultation))
            (UCP (IN whether)
              (CC and)
              (WHADVP (WRB how)))))))
    (NP (PRP it))
    (VP (MD could)
      (VP (VB be)
        (VP (VBN made)
          (S
            (ADJP (JJ habitable))))))
    (. .)))

det(place-3, this-2)
prep_to(climbed-8, place-3)
nn(Spelman-5, Mr-4)
nsubj(climbed-8, Spelman-5)
conj_and(Spelman-5, Willie-7)
nsubj(climbed-8, Willie-7)
dep(made-20, climbed-8)
expl(held-12, there-11)
conj_and(climbed-8, held-12)
dep(made-20, held-12)
dobj(held-12, consultation-13)
nsubj(held-12, consultation-13)
dep(consultation-13, whether-14)
dep(consultation-13, how-16)
conj_and(whether-14, how-16)
nsubjpass(made-20, it-17)
aux(made-20, could-18)
auxpass(made-20, be-19)
root(ROOT-0, made-20)
xcomp(made-20, habitable-21)

(ROOT
  (S
    (NP (DT The) (JJ main) (NN difficulty))
    (VP
      (VP (VBD was))
      (, ,)
      (SBAR
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB cover)
                (NP (PRP it))
                (PP (IN in))))))
        (: ;)
        (SBAR (IN for)
          (S
            (SBAR (IN although)
              (S
                (NP (DT the) (NNS walls))
                (VP (VBD were)
                  (ADJP (RB quite) (JJ sound))
                  (ADVP
                    (NP (DT a) (JJ long) (NN way))
                    (RB up)))))
            (, ,)
            (NP (PRP it))
            (VP (VBD lay)
              (ADJP (JJ open)
                (PP (TO to)
                  (NP (DT the) (NN sky)))))))))
    (. .)))

det(difficulty-3, The-1)
amod(difficulty-3, main-2)
nsubj(was-4, difficulty-3)
root(ROOT-0, was-4)
advmod(cover-8, how-6)
aux(cover-8, to-7)
advcl(was-4, cover-8)
dobj(cover-8, it-9)
prep(cover-8, in-10)
mark(lay-25, for-12)
mark(sound-18, although-13)
det(walls-15, the-14)
nsubj(sound-18, walls-15)
cop(sound-18, were-16)
advmod(sound-18, quite-17)
advcl(lay-25, sound-18)
det(way-21, a-19)
amod(way-21, long-20)
npadvmod(up-22, way-21)
advmod(sound-18, up-22)
nsubj(lay-25, it-24)
dep(cover-8, lay-25)
acomp(lay-25, open-26)
det(sky-29, the-28)
prep_to(open-26, sky-29)

(ROOT
  (S (CC But)
    (S
      (NP
        (NP
          (QP (RB about) (CD ten))
          (NNS feet))
        (PP (IN over)
          (NP (PRP$ their) (NNS heads))))
      (NP (PRP they))
      (VP (VBD saw)
        (NP (DT the) (JJ opposing) (NNS holes))
        (PP (IN in)
          (NP
            (NP (CD two))
            (PP (IN of)
              (NP (DT the) (NNS walls)))))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT the) (NNS joists))
              (VP
                (ADVP (RB formerly))
                (VBG sustaining)
                (NP
                  (NP (DT the) (NN floor))
                  (PP (IN of)
                    (NP (DT the) (NN chamber))))))
            (ADVP (RB above))
            (VP (VBD had)
              (VP (VBD rested)))))))
    (: ;)
    (CC and)
    (S
      (NP (NNP Mr) (NNP Spelman))
      (VP (VBD thought)
        (SBAR (IN that)
          (S (, ,)
            (PP (IN without)
              (NP
                (NP (DT any)
                  (ADJP (RB very) (JJ large))
                  (NN outlay) (RB either))
                (PP (IN of)
                  (NP (NN time)
                    (CC or)
                    (NN material)))))
            (, ,)
            (NP (PRP he))
            (VP (MD could)
              (ADVP (RB there))
              (VP
                (VP (VB lay)
                  (NP (DT a) (NN floor))
                  (, ,)
                  (SBAR (IN as)
                    (S
                      (NP (PRP it))
                      (VP (VBD were)))))
                (, ,)
                (CC and)
                (ADVP (RB then))
                (VP (VB turn)
                  (NP (PRP it))
                  (PP (IN into)
                    (NP (DT a) (NN roof)))
                  (PP (IN by)
                    (S
                      (VP (VBG covering)
                        (NP (PRP it))
                        (PP (IN with)
                          (NP
                            (NP
                              (NP (NN cement))
                              (, ,)
                              (CC or)
                              (NP (NN pitch))
                              (, ,))
                            (CC or)
                            (NP
                              (NP (NN something))
                              (PP (IN of)
                                (NP (DT the) (NN sort))))))))))))))))
    (, ,)
    (PP (VBG concerning)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP he))
          (VP (MD would)
            (VP (VB take)
              (NP (NN counsel))
              (PP (IN with)
                (NP
                  (NP (PRP$ his) (NN friend) (NNP Mortimer))
                  (, ,)
                  (NP (DT the) (NN mason)))))))))
    (. .)))

quantmod(ten-3, about-2)
num(feet-4, ten-3)
nsubj(saw-9, feet-4)
poss(heads-7, their-6)
prep_over(feet-4, heads-7)
nsubj(saw-9, they-8)
root(ROOT-0, saw-9)
det(holes-12, the-10)
amod(holes-12, opposing-11)
dobj(saw-9, holes-12)
prep_in(saw-9, two-14)
det(walls-17, the-16)
prep_of(two-14, walls-17)
advmod(rested-30, where-18)
det(joists-20, the-19)
nsubj(rested-30, joists-20)
advmod(sustaining-22, formerly-21)
vmod(joists-20, sustaining-22)
det(floor-24, the-23)
dobj(sustaining-22, floor-24)
det(chamber-27, the-26)
prep_of(floor-24, chamber-27)
advmod(rested-30, above-28)
aux(rested-30, had-29)
advcl(saw-9, rested-30)
nn(Spelman-34, Mr-33)
nsubj(thought-35, Spelman-34)
conj_and(saw-9, thought-35)
mark(lay-52, that-36)
det(outlay-42, any-39)
advmod(large-41, very-40)
amod(outlay-42, large-41)
prep_without(lay-52, outlay-42)
advmod(outlay-42, either-43)
prep_of(outlay-42, time-45)
prep_of(outlay-42, material-47)
conj_or(time-45, material-47)
nsubj(lay-52, he-49)
nsubj(turn-62, he-49)
aux(lay-52, could-50)
advmod(lay-52, there-51)
ccomp(thought-35, lay-52)
det(floor-54, a-53)
dobj(lay-52, floor-54)
mark(were-58, as-56)
nsubj(were-58, it-57)
advcl(lay-52, were-58)
advmod(turn-62, then-61)
ccomp(thought-35, turn-62)
conj_and(lay-52, turn-62)
dobj(turn-62, it-63)
det(roof-66, a-65)
prep_into(turn-62, roof-66)
prepc_by(turn-62, covering-68)
dobj(covering-68, it-69)
prep_with(covering-68, cement-71)
prep_with(covering-68, pitch-74)
conj_or(cement-71, pitch-74)
prep_with(covering-68, something-77)
conj_or(cement-71, something-77)
det(sort-80, the-79)
prep_of(something-77, sort-80)
dep(saw-9, concerning-82)
dobj(take-86, which-83)
nsubj(take-86, he-84)
aux(take-86, would-85)
pcomp(concerning-82, take-86)
dobj(take-86, counsel-87)
poss(Mortimer-91, his-89)
nn(Mortimer-91, friend-90)
prep_with(take-86, Mortimer-91)
det(mason-94, the-93)
appos(Mortimer-91, mason-94)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (NNP Willie))))
    (, ,) (`` ``)
    (NP (DT that))
    (VP (MD would)
      (VP (VB turn)
        (NP (PRP it))
        (PP (IN into)
          (NP
            (NP (DT the) (NN bottom))
            (PP (IN of)
              (NP
                (NP (DT a) (NN cistern))
                (: ;)
                (SBAR
                  (SBAR (IN for)
                    (S
                      (NP (DT the) (NNS walls))
                      (ADVP (RB above))
                      (VP (MD would)
                        (VP (VB hold)
                          (NP (DT the) (NN rain))
                          (PP (IN in))))))
                  (, ,)
                  (CC and)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (MD would)
                        (VP (VB happen)
                          (ADVP (RB then)))))))))))))
    (. ?)))

cc(turn-11, But-2)
parataxis(turn-11, said-5)
nsubj(said-5, Willie-6)
nsubj(turn-11, that-9)
aux(turn-11, would-10)
root(ROOT-0, turn-11)
dobj(turn-11, it-12)
det(bottom-15, the-14)
prep_into(turn-11, bottom-15)
det(cistern-18, a-17)
prep_of(bottom-15, cistern-18)
prep_in(hold-25, cistern-18)
nsubj(happen-33, cistern-18)
mark(hold-25, for-20)
det(walls-22, the-21)
nsubj(hold-25, walls-22)
advmod(hold-25, above-23)
aux(hold-25, would-24)
rcmod(cistern-18, hold-25)
det(rain-27, the-26)
dobj(hold-25, rain-27)
aux(happen-33, would-32)
rcmod(cistern-18, happen-33)
conj_and(hold-25, happen-33)
advmod(happen-33, then-34)

(ROOT
  (S
    (S (CC Either)
      (NP (PRP it))
      (VP (MD must)
        (VP (VB gather)
          (SBAR (IN till)
            (S
              (NP (PRP it))
              (VP (VBD reached)
                (NP (DT the) (NN top))))))))
    (, ,)
    (CC or)
    (S
      (NP
        (NP (DT the) (NN weight))
        (PP (IN of)
          (NP (PRP it))))
      (VP (MD would)
        (VP
          (VP (VB burst)
            (NP (DT the) (NNS walls)))
          (, ,)
          (CC or)
          (ADVP (RB perhaps))
          (VP
            (VP (VB break)
              (PP (IN through)
                (NP (PRP$ my) (NN roof))))
            (CC and)
            (VP (VB drown)
              (NP (PRP me)))))))
    (. .) ('' '')))

dep(gather-4, Either-1)
nsubj(gather-4, it-2)
aux(gather-4, must-3)
root(ROOT-0, gather-4)
mark(reached-7, till-5)
nsubj(reached-7, it-6)
advcl(gather-4, reached-7)
det(top-9, the-8)
dobj(reached-7, top-9)
det(weight-13, the-12)
nsubj(burst-17, weight-13)
nsubj(break-23, weight-13)
prep_of(weight-13, it-15)
aux(burst-17, would-16)
conj_or(gather-4, burst-17)
det(walls-19, the-18)
dobj(burst-17, walls-19)
advmod(break-23, perhaps-22)
conj_or(gather-4, break-23)
conj_or(burst-17, break-23)
poss(roof-26, my-25)
prep_through(break-23, roof-26)
conj_or(burst-17, drown-28)
conj_and(break-23, drown-28)
dobj(drown-28, me-29)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (JJ easy)
          (S
            (VP (TO to)
              (VP (VB avoid)
                (NP (DT that))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Spelman))
    (. .)))

nsubj(easy-4, It-2)
nsubj(avoid-6, It-2)
cop(easy-4, is-3)
ccomp(said-10, easy-4)
aux(avoid-6, to-5)
xcomp(easy-4, avoid-6)
dobj(avoid-6, that-7)
root(ROOT-0, said-10)
nn(Spelman-12, Mr-11)
nsubj(said-10, Spelman-12)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (VBP have)
      (ADVP (RB only))
      (S
        (VP (TO to)
          (VP (VB lay)
            (PP (IN on)
              (NP (DT the) (NN cement)))
            (NP
              (NP
                (NP (DT a) (JJ little) (JJR thicker))
                (PP (IN at)
                  (NP (CD one) (NN side))))
              (, ,)
              (CC and)
              (NP
                (NP (NN slope))
                (PP
                  (ADVP
                    (NP (DT the) (NN surface))
                    (RB down))
                  (TO to)
                  (NP
                    (NP (DT the) (JJ other))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP
                          (NP (DT a) (NN hole))
                          (PP (IN through)
                            (NP (DT the) (NN wall))))
                        (, ,)
                        (PP (IN with)
                          (NP
                            (NP (DT a) (NN pipe))
                            (PP (IN in)
                              (NP (PRP it)))))
                        (, ,)
                        (VP (MD would)
                          (VP (VB let)
                            (NP (DT the) (NN water))
                            (PRT (RP off))))))))))))))
    (. .) ('' '')))

nsubj(have-3, We-2)
nsubj(lay-6, We-2)
root(ROOT-0, have-3)
advmod(have-3, only-4)
aux(lay-6, to-5)
xcomp(have-3, lay-6)
det(cement-9, the-8)
prep_on(lay-6, cement-9)
det(thicker-12, a-10)
amod(thicker-12, little-11)
dobj(lay-6, thicker-12)
num(side-15, one-14)
prep_at(thicker-12, side-15)
dobj(lay-6, slope-18)
conj_and(thicker-12, slope-18)
det(surface-20, the-19)
npadvmod(down-21, surface-20)
advmod(slope-18, down-21)
det(other-24, the-23)
prep_to(slope-18, other-24)
advmod(let-40, where-26)
det(hole-28, a-27)
nsubj(let-40, hole-28)
det(wall-31, the-30)
prep_through(hole-28, wall-31)
det(pipe-35, a-34)
prep_with(let-40, pipe-35)
prep_in(pipe-35, it-37)
aux(let-40, would-39)
rcmod(other-24, let-40)
det(water-42, the-41)
dobj(let-40, water-42)
prt(let-40, off-43)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP know))
    (. !) ('' '')))

nsubj(know-3, I-2)
root(ROOT-0, know-3)

(ROOT
  (S
    (VP (VB cried)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Willie-2)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP they))
          (VP (VBD called)
            (NP (DT a) (NN gurgoyle))))))
    (. !) ('' '')))

nsubj('s-3, That-2)
root(ROOT-0, 's-3)
dobj(called-6, what-4)
nsubj(called-6, they-5)
ccomp('s-3, called-6)
det(gurgoyle-8, a-7)
dobj(called-6, gurgoyle-8)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (NP (NN anything))
          (PP (IN about)
            (NP (DT that))))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (DT the) (NN carpenter))))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD will)
              (VP (VB carry)
                (PRT (RP off))
                (NP (DT the) (NN water))))))))
    (. .) ('' '')))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
dobj(know-5, anything-6)
prep_about(know-5, that-8)
dep(know-5, said-11)
det(carpenter-13, the-12)
nsubj(said-11, carpenter-13)
nsubj(know-17, I-16)
parataxis(know-5, know-17)
nsubj(carry-20, it-18)
aux(carry-20, will-19)
ccomp(know-17, carry-20)
prt(carry-20, off-21)
det(water-23, the-22)
dobj(carry-20, water-23)

(ROOT
  (SINV (`` ``)
    (S
      (VP (TO To)
        (VP (VB be)
          (ADJP (JJ sure)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

aux(sure-4, To-2)
cop(sure-4, be-3)
dep(said-7, sure-4)
root(ROOT-0, said-7)
nsubj(said-7, Willie-8)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (NN capital)))
    (. .) ('' '')))

nsubj(capital-4, It-2)
cop(capital-4, 's-3)
root(ROOT-0, capital-4)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (NNP Mr) (NNP Spelman))))
    (, ,) (`` ``)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (RB rather) (RB too) (JJ serious))
      (NP
        (NP (DT a) (NN job))
        (SBAR
          (S
            (NP (DT this))
            (VP (TO to)
              (VP (VB set)
                (PRT (RP about))
                (PP (IN before)
                  (S
                    (VP (VBG asking)
                      (NP
                        (NP (DT the) (NN doctor) (POS 's))
                        (NN leave)))))))))))
    (. .)))

cc(serious-14, But-2)
parataxis(serious-14, said-5)
nn(Spelman-7, Mr-6)
nsubj(said-5, Spelman-7)
nsubj(serious-14, it-10)
cop(serious-14, 's-11)
advmod(serious-14, rather-12)
advmod(serious-14, too-13)
root(ROOT-0, serious-14)
det(job-16, a-15)
dep(serious-14, job-16)
nsubj(set-19, this-17)
aux(set-19, to-18)
rcmod(job-16, set-19)
vmod(job-16, set-19)
prt(set-19, about-20)
prepc_before(set-19, asking-22)
det(doctor-24, the-23)
poss(leave-26, doctor-24)
dobj(asking-22, leave-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB cost)
        (NP (NN money))))
    (. .) ('' '')))

nsubj(cost-3, It-1)
aux(cost-3, will-2)
root(ROOT-0, cost-3)
dobj(cost-3, money-4)

(ROOT
  (INTJ (`` ``) (UH Much) (. ?) ('' '')))

root(ROOT-0, Much-2)

(ROOT
  (S
    (VP (VBD asked)
      (NP
        (NP (NNP Willie))
        (, ,)
        (SBAR
          (WHNP (WP$ whose) (NNS heart))
          (S
            (VP (VBD sank)
              (PP (IN within)
                (NP (PRP him))))))))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Willie-2)
poss(heart-5, Willie-2)
nsubj(sank-6, heart-5)
rcmod(Willie-2, sank-6)
prep_within(sank-6, him-8)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Well))
      (, ,)
      (NP (DT that))
      (VP (VBZ depends)
        (PP (IN on)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBP count)
                (ADVP (RB much))))))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Spelman))
    (. .)))

advmod(depends-5, Well-2)
nsubj(depends-5, that-4)
ccomp(answered-13, depends-5)
dobj(count-9, what-7)
nsubj(count-9, you-8)
prepc_on(depends-5, count-9)
advmod(count-9, much-10)
root(ROOT-0, answered-13)
nsubj(answered-13, Spelman-14)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT All))
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD can)
            (VP (VB say))))))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would) (RB n't)
            (VP (VB be)
              (NP
                (NP (NN anything) (RP out))
                (PP (IN of)
                  (NP
                    (NP (PRP$ your) (NN father) (POS 's))
                    (NN pocket)))))))))
    (. .) ('' '')))

nsubj(is-6, All-2)
nsubj(say-5, I-3)
aux(say-5, can-4)
rcmod(All-2, say-5)
root(ROOT-0, is-6)
nsubj(anything-12, it-8)
aux(anything-12, would-9)
neg(anything-12, n't-10)
cop(anything-12, be-11)
ccomp(is-6, anything-12)
poss(father-16, your-15)
poss(pocket-18, father-16)
prep_out_of(anything-12, pocket-18)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT that))
              (VP (MD can)
                (VP (VB be))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .) ('' '')))

nsubj(see-5, I-2)
aux(see-5, do-3)
neg(see-5, n't-4)
ccomp(said-12, see-5)
advmod(be-9, how-6)
nsubj(be-9, that-7)
aux(be-9, can-8)
ccomp(see-5, be-9)
root(ROOT-0, said-12)
nsubj(said-12, Willie-13)

(ROOT
  (NP (: --)
    (NP
      (VP
        (VP (VB Cost)
          (NP (NN money)))
        (, ,)
        (CC and)
        (ADVP (RB yet))
        (VP (VB be)
          (ADVP (NN nothing) (IN out))))
      (PP (IN of)
        (NP
          (NP (PRP$ my) (NN father) (POS 's))
          (NN pocket))))
    (. !)))

root(ROOT-0, Cost-2)
dobj(Cost-2, money-3)
advmod(be-7, yet-6)
conj_and(Cost-2, be-7)
dep(out-9, nothing-8)
advmod(be-7, out-9)
poss(father-12, my-11)
poss(pocket-14, father-12)
prep_of(Cost-2, pocket-14)

(ROOT
  (S
    (ADVP (RB _))
    (NP (PRP I))
    (VP (VBP 've)
      (ADVP (RB _))
      (VP
        (ADVP (RB only))
        (VBN got)
        (NP
          (NP (JJ threepence) (NN ha) (POS '))
          (JJ -) (NN penny))))
    (. .) ('' '')))

advmod(got-6, _-1)
nsubj(got-6, I-2)
aux(got-6, 've-3)
advmod(got-6, _-4)
advmod(got-6, only-5)
root(ROOT-0, got-6)
amod(ha-8, threepence-7)
poss(penny-11, ha-8)
dobj(got-6, penny-11)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (PRP$ Your) (NN father))
        (CC and)
        (NP (PRP I)))
      (VP (MD will)
        (VP (VB talk)
          (PP (IN about)
            (NP (PRP it))))))
    (, ,) ('' '')
    (VP
      (VP (VBD said)
        (NP (DT the) (NN carpenter))
        (ADVP (RB mysteriously)))
      (, ,)
      (CC and)
      (VP (VBD offered)))
    (NP (DT no) (JJ further) (NN information))
    (. .)))

poss(father-3, Your-2)
nsubj(talk-7, father-3)
conj_and(father-3, I-5)
nsubj(talk-7, I-5)
aux(talk-7, will-6)
ccomp(said-12, talk-7)
prep_about(talk-7, it-9)
root(ROOT-0, said-12)
det(carpenter-14, the-13)
dobj(said-12, carpenter-14)
advmod(said-12, mysteriously-15)
conj_and(said-12, offered-18)
neg(information-21, no-19)
amod(information-21, further-20)
dep(said-12, information-21)

(ROOT
  (SINV (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ seems)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADVP (RB always))
              (NP
                (NP (DT some) (NN way))
                (PP (IN of)
                  (S
                    (VP (VBG doing)
                      (NP (DT a) (NN thing)))))))))))
    (, ,) ('' '')
    (VP (VBD thought))
    (NP
      (NP (NNP Willie))
      (PP (TO to)
        (NP (PRP himself))))
    (. .)))

expl(seems-3, There-2)
ccomp(thought-15, seems-3)
aux(way-8, to-4)
cop(way-8, be-5)
advmod(way-8, always-6)
det(way-8, some-7)
xcomp(seems-3, way-8)
prepc_of(way-8, doing-10)
det(thing-12, a-11)
dobj(doing-10, thing-12)
root(ROOT-0, thought-15)
nsubj(thought-15, Willie-16)
prep_to(Willie-16, himself-18)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB little))
    (VP (VBD knew)
      (PP (IN by)
        (SBAR
          (WHNP (WP what))
          (S
            (NP
              (NP (DT a) (JJ roundabout) (NN succession))
              (PP (IN of)
                (NP
                  (NP (NN cause)
                    (CC and)
                    (NN effect))
                  (NP
                    (NP
                      (NP (PRP$ his) (NN father) (POS 's))
                      (NN kindness))
                    (PP (TO to)
                      (NP (NNP Spelman)))))))
            (VP (VBD was)
              (ADVP (IN at)
                (NP (DT this) (NN moment)))
              (VP (VBG returning)
                (PP (TO to)
                  (NP
                    (NP (PRP him))
                    (, ,)
                    (NP
                      (NP (CD one))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NNS links))
                          (PP (IN of)
                            (NP (NN connection))))))))
                (S
                  (VP (VBG being)
                    (NP
                      (NP (DT this) (NN project))
                      (PP (IN of)
                        (NP
                          (NP (NNP Willie) (POS 's))
                          (JJ own))))))))))))
    (. .)))

nsubj(knew-3, He-1)
advmod(knew-3, little-2)
root(ROOT-0, knew-3)
dobj(returning-23, what-5)
det(succession-8, a-6)
amod(succession-8, roundabout-7)
nsubj(returning-23, succession-8)
prep_of(succession-8, cause-10)
prep_of(succession-8, effect-12)
conj_and(cause-10, effect-12)
poss(father-14, his-13)
poss(kindness-16, father-14)
dep(cause-10, kindness-16)
prep_to(kindness-16, Spelman-18)
aux(returning-23, was-19)
advmod(returning-23, at-20)
det(moment-22, this-21)
pobj(at-20, moment-22)
prepc_by(knew-3, returning-23)
prep_to(returning-23, him-25)
appos(him-25, one-27)
det(links-30, the-29)
prep_of(one-27, links-30)
prep_of(links-30, connection-32)
cop(project-35, being-33)
det(project-35, this-34)
vmod(returning-23, project-35)
prep_of(project-35, Willie-37)
possessive(Willie-37, 's-38)
amod(Willie-37, own-39)

(ROOT
  (S
    (S
      (NP (DT The) (NN doctor))
      (VP (VBG being)
        (ADVP (IN out)
          (PP (IN at)
            (NP
              (NP (DT the) (NN time))
              (, ,)
              (NP (DT the) (NN carpenter)))))
        (VP (VBN called)
          (ADVP (RB again) (RB later))
          (PP (IN in)
            (NP (DT the) (NN evening))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD had)
        (NP
          (NP (DT a) (JJ long) (NN talk))
          (ADVP (RB together))
          (: --)
          (PP (TO to)
            (NP (DT the) (JJ following) (NN effect))))))
    (. .)))

det(doctor-2, The-1)
nsubjpass(called-11, doctor-2)
auxpass(called-11, being-3)
advmod(called-11, out-4)
det(time-7, the-6)
prep_at(out-4, time-7)
det(carpenter-10, the-9)
appos(time-7, carpenter-10)
root(ROOT-0, called-11)
advmod(later-13, again-12)
advmod(called-11, later-13)
det(evening-16, the-15)
prep_in(called-11, evening-16)
nsubj(had-20, they-19)
conj_and(called-11, had-20)
det(talk-23, a-21)
amod(talk-23, long-22)
dobj(had-20, talk-23)
advmod(talk-23, together-24)
det(effect-29, the-27)
amod(effect-29, following-28)
prep_to(talk-23, effect-29)

(ROOT
  (SINV
    (S
      (S
        (NP (NNP Spelman))
        (VP (VBG having)
          (VP (VBN set)
            (PRT (RP forth))
            (NP (PRP$ his) (NN scheme)))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN doctor))
        (VP (VBG having)
          (VP (VBD listened)
            (PP (IN in)
              (NP (NN silence)))
            (SBAR (IN until)
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN finished) (: --) (`` ``)
                    (ADVP (CC But))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Macmichael))
    (, ,) (`` ``)
    (S
      (S
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD will)
              (VP (VB cost)
                (NP (DT a) (JJ good) (NN deal))))))
        (, ,)
        (NP (PRP I))
        (VP (VBP fear)))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (NP (DT no) (NN money)
            (S
              (VP (TO to)
                (VP (VB spare))))))))
    (. .) ('' '')))

nsubj(set-3, Spelman-1)
aux(set-3, having-2)
ccomp(said-24, set-3)
prt(set-3, forth-4)
poss(scheme-6, his-5)
dobj(set-3, scheme-6)
det(doctor-10, the-9)
nsubj(listened-12, doctor-10)
aux(listened-12, having-11)
conj_and(set-3, listened-12)
ccomp(said-24, listened-12)
prep_in(listened-12, silence-14)
mark(finished-18, until-15)
nsubj(finished-18, he-16)
aux(finished-18, had-17)
advcl(listened-12, finished-18)
advmod(finished-18, But-21)
root(ROOT-0, said-24)
nn(Macmichael-26, Mr-25)
nsubj(said-24, Macmichael-26)
nsubj(cost-31, that-29)
aux(cost-31, will-30)
advcl(fear-37, cost-31)
det(deal-34, a-32)
amod(deal-34, good-33)
dobj(cost-31, deal-34)
nsubj(fear-37, I-36)
dep(said-24, fear-37)
nsubj(have-41, I-40)
dep(said-24, have-41)
conj_and(fear-37, have-41)
neg(money-43, no-42)
dobj(have-41, money-43)
aux(spare-45, to-44)
vmod(money-43, spare-45)

(ROOT
  (S (`` ``)
    (NP (NNP Mr) (NNP Macmichael))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP
          (NP (NNP Spelman) (NNP solemnly))
          (, ,)
          (NP
            (NP (PRP$ his) (JJ long) (NN face))
            (VP (VBG looking)
              (SBAR (RB as) (IN if)
                (S
                  (NP (DT some) (JJ awful) (NN doom))
                  (VP (VBD were)
                    (VP (IN about)
                      (S
                        (VP (TO to)
                          (VP (VB issue)
                            (PP (IN from)
                              (NP
                                (NP (DT the) (NN middle))
                                (PP (IN of)
                                  (NP (PRP it))))))))))))))))
      (, ,))
    (`` ``)
    (NP (PRP you))
    (VP (VBP forget)
      (SBAR
        (WHADJP (WRB how) (JJ much))
        (S
          (NP (PRP I))
          (VP (VBP am)
            (PP (IN in)
              (NP (PRP$ your) (NN debt)))))))
    (. .) ('' '')))

nn(Macmichael-3, Mr-2)
nsubj(forget-31, Macmichael-3)
parataxis(forget-31, said-6)
nn(solemnly-8, Spelman-7)
nsubj(said-6, solemnly-8)
poss(face-12, his-10)
amod(face-12, long-11)
appos(solemnly-8, face-12)
vmod(face-12, looking-13)
advmod(about-20, as-14)
mark(about-20, if-15)
det(doom-18, some-16)
amod(doom-18, awful-17)
nsubj(about-20, doom-18)
nsubj(issue-22, doom-18)
aux(about-20, were-19)
advcl(looking-13, about-20)
aux(issue-22, to-21)
xcomp(about-20, issue-22)
det(middle-25, the-24)
prep_from(issue-22, middle-25)
prep_of(middle-25, it-27)
nsubj(forget-31, you-30)
root(ROOT-0, forget-31)
advmod(much-33, how-32)
dep(am-35, much-33)
nsubj(am-35, I-34)
ccomp(forget-31, am-35)
poss(debt-38, your-37)
prep_in(am-35, debt-38)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (DT the) (NN doctor))
    (. .)))

discourse(do-5, No-2)
nsubj(do-5, I-4)
ccomp(returned-9, do-5)
neg(do-5, n't-6)
root(ROOT-0, returned-9)
det(doctor-11, the-10)
dep(returned-9, doctor-11)

(ROOT
  (SBARQ (`` ``)
    (CC But)
    (WHADVP (WRB neither))
    (SQ (VBP do)
      (NP (PRP I))
      (VP (VB forget)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ takes)
                (NP (PDT all)
                  (NP (PRP$ your) (NN time))
                  (CC and)
                  (NP (NN labour)))
                (S
                  (VP (TO to)
                    (VP (VB provide)
                      (PP (IN for)
                        (NP (PRP$ your) (NN family)))))))))
          (: ;)
          (CC and)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (MD will)
                (VP (VB become)
                  (PP (IN of)
                    (NP (PRP them)))
                  (SBAR (IN if)
                    (S
                      (NP (PRP you))
                      (VP (VBD set)
                        (PP (IN about)
                          (NP (DT this) (NN job)))
                        (, ,)
                        (PP (IN with)
                          (NP
                            (NP (DT no) (NN return))
                            (PP (IN in)
                              (NP
                                (NP (NN prospect))
                                (PP (CC but)
                                  (NP
                                    (NP (DT the) (NN satisfaction))
                                    (PP (IN of)
                                      (S
                                        (VP (VBG clearing)
                                          (PRT (RP off))
                                          (PP (IN of)
                                            (NP (DT an) (JJ old) (NN debt))))))))))))))))))))))
    (. ?) ('' '')))

cc(forget-6, But-2)
advmod(forget-6, neither-3)
aux(forget-6, do-4)
nsubj(forget-6, I-5)
root(ROOT-0, forget-6)
mark(takes-9, that-7)
nsubj(takes-9, it-8)
ccomp(forget-6, takes-9)
dep(time-12, all-10)
poss(time-12, your-11)
dobj(takes-9, time-12)
dobj(takes-9, labour-14)
conj_and(time-12, labour-14)
aux(provide-16, to-15)
vmod(takes-9, provide-16)
poss(family-19, your-18)
prep_for(provide-16, family-19)
nsubj(become-24, what-22)
aux(become-24, will-23)
ccomp(forget-6, become-24)
conj_and(takes-9, become-24)
prep_of(become-24, them-26)
mark(set-29, if-27)
nsubj(set-29, you-28)
advcl(become-24, set-29)
det(job-32, this-31)
prep_about(set-29, job-32)
neg(return-36, no-35)
prep_with(set-29, return-36)
prep_in(return-36, prospect-38)
prep(prospect-38, but-39)
det(satisfaction-41, the-40)
pobj(but-39, satisfaction-41)
prepc_of(satisfaction-41, clearing-43)
det(debt-48, an-46)
amod(debt-48, old-47)
prep_off_of(clearing-43, debt-48)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (RB very) (JJ good)
          (PP (IN of)
            (NP
              (NP (PRP you))
              (, ,)
              (NP (NN sir))
              (, ,))))
        (S
          (VP (TO to)
            (VP (VB think)
              (PP (IN of)
                (NP (DT that))))))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (DT the) (NN carpenter))))
    (: ;) (`` ``)
    (S (CC but)
      (, ,)
      (S
        (VP (VBG begging)
          (NP (PRP$ your) (NN pardon))))
      (, ,)
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN thought)
          (PP (IN of)
            (NP (PRP it)))
          (ADVP (RB too)))))
    (. .)))

nsubj(good-5, It-2)
nsubj(think-12, It-2)
cop(good-5, is-3)
advmod(good-5, very-4)
root(ROOT-0, good-5)
prep_of(good-5, you-7)
appos(you-7, sir-9)
aux(think-12, to-11)
xcomp(good-5, think-12)
prep_of(think-12, that-14)
dep(good-5, said-17)
det(carpenter-19, the-18)
nsubj(said-17, carpenter-19)
cc(thought-30, but-22)
vmod(thought-30, begging-24)
poss(pardon-26, your-25)
dobj(begging-24, pardon-26)
nsubj(thought-30, I-28)
aux(thought-30, 've-29)
parataxis(good-5, thought-30)
prep_of(thought-30, it-32)
advmod(thought-30, too-33)

(ROOT
  (S
    (NP (DT Many))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN time))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 've)
              (VP (VBN come)
                (PP (IN after)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP I))
                      (VP (MD 'd)
                        (VP (VB ha)
                          (S
                            (S
                              (NP (POS '))
                              (VP (VBD called)
                                (NP (NN work) (NNS hours))
                                (S
                                  (VP (TO to)
                                    (VP (VB see)
                                      (NP (PRP$ my) (NN wife))
                                      (PRN (: --)
                                        (FRAG
                                          (INTJ (UH yes))
                                          (, ,)
                                          (PP (IN in)
                                            (NP
                                              (NP (DT the) (NN middle))
                                              (PP (IN of)
                                                (NP
                                                  (NP (DT the) (NN night))
                                                  (, ,)
                                                  (ADVP (RBR more)
                                                    (PP (IN than)
                                                      (ADVP (RB once)
                                                        (CC or)
                                                        (RB twice)))))))))
                                        (: ;)))))))
                            (CC and)
                            (SBARQ
                              (WHADVP (WRB why))
                              (SQ (MD should) (RB n't)
                                (NP (PRP I))
                                (VP (VB do)
                                  (NP (DT the) (JJ same))))
                              (. ?))))))))))))))))

nsubj(time-4, Many-1)
cop(time-4, 's-2)
det(time-4, the-3)
root(ROOT-0, time-4)
dobj(ha-12, time-4)
nsubj(come-7, you-5)
aux(come-7, 've-6)
rcmod(time-4, come-7)
nsubj(ha-12, I-10)
aux(ha-12, 'd-11)
prepc_after(come-7, ha-12)
dep(ha-12, called-14)
nn(hours-16, work-15)
dobj(called-14, hours-16)
aux(see-18, to-17)
vmod(called-14, see-18)
poss(wife-20, my-19)
dobj(see-18, wife-20)
dep(see-18, yes-22)
det(middle-26, the-25)
prep_in(yes-22, middle-26)
det(night-29, the-28)
prep_of(middle-26, night-29)
advmod(night-29, more-31)
prep(more-31, than-32)
pcomp(than-32, once-33)
pcomp(than-32, twice-35)
conj_or(once-33, twice-35)
advmod(do-42, why-38)
aux(do-42, should-39)
neg(do-42, n't-40)
nsubj(do-42, I-41)
dep(ha-12, do-42)
conj_and(called-14, do-42)
det(same-44, the-43)
dobj(do-42, same-44)

(ROOT
  (S
    (VP (VB Look)
      (NP (PRP ye))
      (ADVP (RB here))
      (, ,) (VB sir))
    (. .)))

root(ROOT-0, Look-1)
dobj(Look-1, ye-2)
advmod(Look-1, here-3)
dep(Look-1, sir-5)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP 're) (RB not)
            (PP (IN in)
              (NP (DT a) (JJ main) (NN hurry))))))
      (, ,)
      (NP (DT an))
      ('' ')
      (VP (MD 'll)
        (VP (VB give)
          (NP (PRP me))
          (NP (NN time)))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (MD 'll)
          (VP (VB do)
            (NP (DT the) (JJ heavy) (NN work) (NN o) ('' '))
            (NP
              (NP (DT this) (NN job))
              (PP (IN after)
                (NP (CD six) (RB o'clock) (NNP o)))
              ('' ')
              (NP
                (NP (DT the) (NN summer))
                (NP (NNS nights)))
              (, ,))
            (PP (IN with)
              (NP (NNP Sandy)))
            (S
              (VP (TO to)
                (VP (VB help)
                  (NP (PRP me))))))))
      (, ,))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB charge)
          (NP (PRP you))
          (ADVP (DT no) (RBR more))
          (PP (IN than)
            (NP
              (NP (DT a) (NN journeyman) (POS 's))
              (NNS wages)))
          (PP (IN by)
            (NP (DT the) (NN hour))))))
    (. .)))

mark('re-3, If-1)
nsubj('re-3, you-2)
advcl(give-13, 're-3)
neg('re-3, not-4)
det(hurry-8, a-6)
amod(hurry-8, main-7)
prep_in('re-3, hurry-8)
nsubj(give-13, an-10)
aux(give-13, 'll-12)
root(ROOT-0, give-13)
iobj(give-13, me-14)
dobj(give-13, time-15)
nsubj(do-19, I-17)
aux(do-19, 'll-18)
dep(give-13, do-19)
det(o-23, the-20)
amod(o-23, heavy-21)
nn(o-23, work-22)
iobj(do-19, o-23)
det(job-26, this-25)
dobj(do-19, job-26)
num(o-30, six-28)
advmod(o-30, o'clock-29)
prep_after(job-26, o-30)
det(summer-33, the-32)
dep(job-26, summer-33)
dep(summer-33, nights-34)
prep_with(do-19, Sandy-37)
aux(help-39, to-38)
vmod(do-19, help-39)
dobj(help-39, me-40)
nsubj(charge-45, I-43)
aux(charge-45, 'll-44)
conj_and(give-13, charge-45)
dobj(charge-45, you-46)
neg(more-48, no-47)
advmod(charge-45, more-48)
det(journeyman-51, a-50)
poss(wages-53, journeyman-51)
prep_than(charge-45, wages-53)
det(hour-56, the-55)
prep_by(charge-45, hour-56)

(ROOT
  (S (CC And)
    (SBAR
      (WHNP (WP what))
      (S
        (S
          (NP (NNP Willie)
            (CC and)
            (NNP Sandy))
          (VP (MD can)
            (VP (VB do)
              (PP (IN by)
                (NP (PRP themselves))))))
        (: --)
        (S
          (NP (PRP he))
          (VP (VBZ 's)
            (NP (DT a) (JJ clever) (NN boy) (NN Sandy))))
        (: ;)
        (S (CC but)
          (NP (PRP he))
          (VP (VBZ 's)
            (NP (DT a) (NNP genius) (NNP Willie))
            (: --)
            (SBAR
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP they))
                  (VP (MD can)
                    (VP (VB do)
                      (PP (IN by)
                        (NP (PRP themselves)))))))
              (, ,)
              (CC and)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's) (RB not)
                    (NP (DT a) (JJ little))))))))))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (NN nothing))
        (PP (TO to)
          (NP (PRP me)))))
    (. .)))

cc(nothing-40, And-1)
dep(do-7, what-2)
nsubj(do-7, Willie-3)
conj_and(Willie-3, Sandy-5)
nsubj(do-7, Sandy-5)
aux(do-7, can-6)
dep(nothing-40, do-7)
prep_by(do-7, themselves-9)
nsubj(Sandy-16, he-11)
cop(Sandy-16, 's-12)
det(Sandy-16, a-13)
amod(Sandy-16, clever-14)
nn(Sandy-16, boy-15)
parataxis(do-7, Sandy-16)
cc(Willie-23, but-18)
nsubj(Willie-23, he-19)
cop(Willie-23, 's-20)
det(Willie-23, a-21)
nn(Willie-23, genius-22)
parataxis(do-7, Willie-23)
dobj(do-28, what-25)
nsubj(do-28, they-26)
aux(do-28, can-27)
parataxis(Willie-23, do-28)
prep_by(do-28, themselves-30)
nsubj(little-37, that-33)
cop(little-37, 's-34)
neg(little-37, not-35)
det(little-37, a-36)
parataxis(Willie-23, little-37)
conj_and(do-28, little-37)
cop(nothing-40, is-39)
root(ROOT-0, nothing-40)
prep_to(nothing-40, me-42)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD 'll)
          (VP (VB have)
            (NP
              (NP (DT the) (NN goodness))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP I))
                  (VP (VBP give)
                    (NP (PRP you))
                    (NP
                      (NP (DT the) (JJ honest) (NN time))
                      (, ,)
                      (PP (IN at)
                        (NP (JJ fourpence) (NN ha)))
                      (`` `)
                      (NP
                        (NP (NN penny))
                        (NP (DT an) (NN hour))))
                    (, ,)
                    (ADVP (RB just))))))
            (S
              (VP (TO to)
                (VP (VB strike)
                  (ADVP (RB that) (RB much))
                  (PP (IN off)
                    (NP (PRP$ my) (NN bill))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB be)
        (ADJP
          (ADJP (RBR more) (VBN obliged)
            (PP (TO to)
              (NP (PRP you))))
          (SBAR (IN than)
            (S
              (NP (PRP I))
              (VP (VBP am)
                (ADVP (RB now))))))))
    (. .)))

cc(obliged-38, And-1)
mark(have-5, if-2)
nsubj(have-5, you-3)
aux(have-5, 'll-4)
advcl(obliged-38, have-5)
det(goodness-7, the-6)
dobj(have-5, goodness-7)
tmod(give-11, goodness-7)
advmod(give-11, when-9)
nsubj(give-11, I-10)
rcmod(goodness-7, give-11)
iobj(give-11, you-12)
det(time-15, the-13)
amod(time-15, honest-14)
dobj(give-11, time-15)
amod(ha-19, fourpence-18)
prep_at(time-15, ha-19)
dep(time-15, penny-21)
det(hour-23, an-22)
dep(penny-21, hour-23)
advmod(give-11, just-25)
aux(strike-27, to-26)
vmod(have-5, strike-27)
advmod(much-29, that-28)
advmod(strike-27, much-29)
poss(bill-32, my-31)
prep_off(strike-27, bill-32)
nsubj(obliged-38, I-34)
aux(obliged-38, 'll-35)
cop(obliged-38, be-36)
advmod(obliged-38, more-37)
root(ROOT-0, obliged-38)
prep_to(obliged-38, you-40)
mark(am-43, than-41)
nsubj(am-43, I-42)
ccomp(obliged-38, am-43)
advmod(am-43, now-44)

(ROOT
  (S (RB Only)
    (NP (PRP I))
    (VP (VBP fear)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD must)
            (VP (VB make)
              (S
                (NP (PRP you))
                (VP (VB pay)
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN material))
                      (PRN (: --) (RB not)
                        (NP (DT a)
                          (S
                            (VP (VBG farthing)
                              (ADVP (RBR more))
                              (SBAR (IN than)
                                (S
                                  (NP (PRP it))
                                  (VP (VBZ costs)
                                    (NP (PRP me))
                                    (PP (IN at)
                                      (NP (DT the) (NNS saw-mills)))
                                    (, ,)
                                    (ADVP (RB up)
                                      (PP (IN at)
                                        (NP (DT the) (NNP Grange))))))))))
                        (, ,)
                        (SBAR (IN for)
                          (S
                            (NP (DT the) (NN carriage))
                            (VP (MD 'll)
                              (VP (VB come)
                                (PP (IN in) (IN with)
                                  (NP
                                    (NP (JJ other) (NNS lots))
                                    (SBAR
                                      (S
                                        (NP (PRP I))
                                        (ADVP (RB _))
                                        (VP (MD must)
                                          (ADVP (RB _))
                                          (VP (VB have)))))))))))))))))))))
    (. .) ('' '')))

advmod(fear-3, Only-1)
nsubj(fear-3, I-2)
root(ROOT-0, fear-3)
nsubj(make-6, I-4)
aux(make-6, must-5)
ccomp(fear-3, make-6)
nsubj(pay-8, you-7)
ccomp(make-6, pay-8)
det(material-11, the-10)
prep_for(pay-8, material-11)
dep(come-34, not-13)
dep(come-34, a-14)
dep(a-14, farthing-15)
advmod(farthing-15, more-16)
mark(costs-19, than-17)
nsubj(costs-19, it-18)
advcl(farthing-15, costs-19)
dobj(costs-19, me-20)
det(saw-mills-23, the-22)
prep_at(costs-19, saw-mills-23)
advmod(costs-19, up-25)
det(Grange-28, the-27)
prep_at(up-25, Grange-28)
mark(come-34, for-30)
det(carriage-32, the-31)
nsubj(come-34, carriage-32)
aux(come-34, 'll-33)
dep(material-11, come-34)
dep(come-34, in-35)
amod(lots-38, other-37)
prep_with(come-34, lots-38)
nsubj(have-43, I-39)
advmod(have-43, _-40)
aux(have-43, must-41)
advmod(have-43, _-42)
rcmod(lots-38, have-43)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (JJ generous) (NN offer))
          (, ,)
          (NP (NNP Spelman)))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (DT the) (NN doctor)))
      (, ,) (`` ``))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP accept)
        (NP (PRP it))
        (ADVP (RB heartily))
        (, ,)
        (SBAR (IN though)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (VP (VBG turning)
                (NP
                  (NP (DT the) (NNS tables))
                  (PP (IN of)
                    (NP (NN obligation))))
                (PP (IN upon)
                  (NP (PRP me)))))))))
    (. .)))

nsubj(offer-6, It-2)
cop(offer-6, 's-3)
det(offer-6, a-4)
amod(offer-6, generous-5)
root(ROOT-0, offer-6)
appos(offer-6, Spelman-8)
dep(offer-6, said-11)
det(doctor-13, the-12)
nsubj(said-11, doctor-13)
nsubj(accept-18, I-17)
conj_and(offer-6, accept-18)
dobj(accept-18, it-19)
advmod(accept-18, heartily-20)
mark(turning-25, though-22)
nsubj(turning-25, you-23)
aux(turning-25, are-24)
advcl(accept-18, turning-25)
det(tables-27, the-26)
dobj(turning-25, tables-27)
prep_of(tables-27, obligation-29)
prep_upon(turning-25, me-31)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD 'll)
      (VP (VB have)
        (VP (VBN done)
          (ADVP (RB far) (RBR more))
          (PP (IN for)
            (NP (PRP me)))
          (SBAR (IN than)
            (S
              (NP (PRP I))
              (ADVP (RB ever))
              (VP (VBD did)
                (PP (IN for)
                  (NP (PRP you)))))))))
    (. .) ('' '')))

nsubj(done-4, You-1)
aux(done-4, 'll-2)
aux(done-4, have-3)
root(ROOT-0, done-4)
advmod(more-6, far-5)
advmod(done-4, more-6)
prep_for(done-4, me-8)
mark(did-12, than-9)
nsubj(did-12, I-10)
advmod(did-12, ever-11)
advcl(done-4, did-12)
prep_for(did-12, you-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP wish)
        (SBAR (IN that)
          (S
            (VP (VBD were)
              (ADJP (JJ like)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ true))
                      (, ,)
                      (ADVP (RB sir)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is) (RB n't)))
    (. .)))

nsubj(wish-3, I-2)
root(ROOT-0, wish-3)
mark(like-6, that-4)
cop(like-6, were-5)
ccomp(wish-3, like-6)
aux(true-9, to-7)
cop(true-9, be-8)
xcomp(like-6, true-9)
advmod(true-9, sir-11)
nsubj(is-15, it-14)
conj_but(wish-3, is-15)
neg(is-15, n't-16)

(ROOT
  (S
    (NP (PRP$ My) (NN wife))
    (VP (VBZ 's) (RB not)
      (NP (DT a) (NNS giantess))
      (ADVP (RB yet))
      (, ,)
      (SBAR (IN for)
        (S (RB all)
          (NP (PRP you))
          (VP (VBP 've)
            (VP (VBN done)
              (PP (IN for)
                (NP (PRP her))))))))
    (. .) ('' '')))

poss(wife-2, My-1)
nsubj(giantess-6, wife-2)
cop(giantess-6, 's-3)
neg(giantess-6, not-4)
det(giantess-6, a-5)
root(ROOT-0, giantess-6)
advmod(giantess-6, yet-7)
mark(done-13, for-9)
advmod(done-13, all-10)
nsubj(done-13, you-11)
aux(done-13, 've-12)
advcl(giantess-6, done-13)
prep_for(done-13, her-15)

(ROOT
  (S
    (NP (NNP Spelman))
    (VP (VBD set)
      (S
        (VP (TO to)
          (VP (VB work)
            (PP (IN at)
              (NP (RB once)))))))
    (. .)))

nsubj(set-2, Spelman-1)
nsubj(work-4, Spelman-1)
root(ROOT-0, set-2)
aux(work-4, to-3)
xcomp(set-2, work-4)
prep(work-4, at-5)
pobj(at-5, once-6)

(ROOT
  (S
    (NP (NNP New) (NNS joists))
    (VP (VBD were)
      (VP
        (VP (VBN inserted)
          (PP (IN in)
            (NP (DT the) (JJ old) (NNS walls))))
        (, ,)
        (VP (VBN boarded)
          (PRT (RP over)))
        (, ,)
        (CC and)
        (VP (VBN covered) (, ,)
          (PP (IN after)
            (NP
              (NP (DT the) (NN advice))
              (PP (IN of)
                (NP (NNP Mortimer)))))
          (, ,)
          (PP (IN with)
            (NP (DT some) (JJ cunning) (NN mixture)
              (S
                (VP (TO to)
                  (VP (VB keep)
                    (PRT (RP out))
                    (NP (DT the) (NN water))))))))))
    (. .)))

nn(joists-2, New-1)
nsubjpass(inserted-4, joists-2)
nsubjpass(boarded-10, joists-2)
nsubjpass(covered-14, joists-2)
auxpass(inserted-4, were-3)
root(ROOT-0, inserted-4)
det(walls-8, the-6)
amod(walls-8, old-7)
prep_in(inserted-4, walls-8)
conj_and(inserted-4, boarded-10)
prt(boarded-10, over-11)
conj_and(inserted-4, covered-14)
det(advice-18, the-17)
prep_after(covered-14, advice-18)
prep_of(advice-18, Mortimer-20)
det(mixture-25, some-23)
amod(mixture-25, cunning-24)
prep_with(covered-14, mixture-25)
aux(keep-27, to-26)
vmod(mixture-25, keep-27)
prt(keep-27, out-28)
det(water-30, the-29)
dobj(keep-27, water-30)

(ROOT
  (S (RB Then)
    (NP (DT a) (NN pipe))
    (VP (VBD was)
      (VP (VBN put)
        (PP (IN through)
          (NP (DT the) (NN wall)
            (S
              (VP (TO to)
                (VP (VB carry)
                  (NP (PRP it))
                  (PRT (RP off)))))))
        (: --)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP
              (NP (NN pipe))
              (, ,)
              (SBAR (IN if)
                (S
                  (NP (PRP it))
                  (VP (VBD was) (RB not)
                    (VP (VBN masked)
                      (PP (IN with)
                        (NP (DT an) (JJ awful) (NN head)))
                      (, ,)
                      (SBAR (IN as)
                        (S
                          (NP
                            (NP (DT the) (NNS remains))
                            (PP (IN of)
                              (NP
                                (NP
                                  (QP (JJR more) (IN than) (CD one)))
                                (PP (IN on)
                                  (NP (DT the) (NNP Priory))))))
                          (VP (VBD showed)
                            (SBAR
                              (S
                                (NP (PRP it))
                                (VP (MD would)
                                  (VP (VB have)
                                    (VP (VBN been)
                                      (PP (IN in)
                                        (NP
                                          (NP (DT the) (NNS days))
                                          (PP (IN of)
                                            (NP (DT the) (NNS monks)))))))))))))))))
              (, ,))
            (ADVP (RB yet))
            (VP (VBD did)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBP work)
                    (PP (IN as)
                      (ADVP (RB faithfully)))
                    (PP (IN without)
                      (NP (PRP it)))))))))))
    (. .)))

advmod(put-5, Then-1)
det(pipe-3, a-2)
nsubjpass(put-5, pipe-3)
auxpass(put-5, was-4)
root(ROOT-0, put-5)
det(wall-8, the-7)
prep_through(put-5, wall-8)
aux(carry-10, to-9)
vmod(wall-8, carry-10)
dobj(carry-10, it-11)
prt(carry-10, off-12)
dobj(did-50, which-14)
nsubj(did-50, pipe-15)
mark(masked-21, if-17)
nsubjpass(masked-21, it-18)
auxpass(masked-21, was-19)
neg(masked-21, not-20)
dep(pipe-15, masked-21)
det(head-25, an-23)
amod(head-25, awful-24)
prep_with(masked-21, head-25)
mark(showed-37, as-27)
det(remains-29, the-28)
nsubj(showed-37, remains-29)
mwe(than-32, more-31)
quantmod(one-33, than-32)
prep_of(remains-29, one-33)
det(Priory-36, the-35)
prep_on(one-33, Priory-36)
advcl(masked-21, showed-37)
nsubj(been-41, it-38)
aux(been-41, would-39)
aux(been-41, have-40)
ccomp(showed-37, been-41)
det(days-44, the-43)
prep_in(been-41, days-44)
det(monks-47, the-46)
prep_of(days-44, monks-47)
advmod(did-50, yet-49)
ccomp(put-5, did-50)
parataxis(put-5, did-50)
nsubj(work-52, it-51)
ccomp(did-50, work-52)
prep(work-52, as-53)
pcomp(as-53, faithfully-54)
prep_without(work-52, it-56)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP it))
        (VP (VBD came)
          (PP (TO to)
            (NP
              (NP (DT the) (NN plastering))
              (PP (IN of)
                (NP (DT the) (NNS walls))))))))
    (, ,)
    (NP (NNP Mr) (NNP Spelman))
    (, ,)
    (PP (IN after)
      (S
        (VP (VBG giving)
          (NP (PRP them))
          (NP (JJ full) (NNS directions)))))
    (, ,)
    (VP (VBD left)
      (S
        (NP (DT the) (CD two) (NNS boys))
        (VP (TO to)
          (VP (VB do)
            (NP
              (NP (DT that))
              (PP (IN between)
                (NP (PRP them))))))))
    (. .)))

advmod(came-3, When-1)
nsubj(came-3, it-2)
advcl(left-20, came-3)
det(plastering-6, the-5)
prep_to(came-3, plastering-6)
det(walls-9, the-8)
prep_of(plastering-6, walls-9)
nn(Spelman-12, Mr-11)
nsubj(left-20, Spelman-12)
prepc_after(left-20, giving-15)
iobj(giving-15, them-16)
amod(directions-18, full-17)
dobj(giving-15, directions-18)
root(ROOT-0, left-20)
det(boys-23, the-21)
num(boys-23, two-22)
dobj(left-20, boys-23)
nsubj(do-25, boys-23)
aux(do-25, to-24)
xcomp(left-20, do-25)
dobj(do-25, that-26)
prep_between(that-26, them-28)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP (DT no) (NN occasion)
            (S
              (VP (TO to)
                (VP (VB roughen)
                  (NP (DT these) (NNS walls))
                  (PP (IN by)
                    (S
                      (VP (VBG clearing)
                        (PRT (RP away))
                        (NP (DT the) (JJ old) (NN mortar))
                        (PP (IN from)
                          (PP (IN between)
                            (NP (DT the) (NNS stones))))))))))))))
    (, ,)
    (NP (DT the) (NN weather)
      (S
        (VP (VBG having)
          (VP (VBN done)
            (UCP
              (ADJP (IN that) (RB quite) (RB sufficiently))
              (, ,)
              (CC and)
              (NP
                (NP (PDT all) (DT the) (NN preparation))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBD wanted)
                      (PP (IN for)
                        (NP (DT the) (JJ first) (JJ thin) (NN coat))))))))))))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADVP (RB well))
            (VP (VBN washed)
              (PRT (RP down))
              (PRN (, ,)
                (S
                  (NP (PRP it))
                  (VP (VBD took)
                    (NP (PRP them))
                    (NP (DT a) (JJ good) (JJ many) (NNS days))
                    (, ,)
                    (S
                      (VP (VBG working)
                        (NP (PDT all) (PRP$ their) (NN time))))))
                (, ,))
              (S
                (VP (TO to)
                  (VP (VB lay)
                    (PP (IN on)
                      (NP
                        (NP (DT the) (JJ orthodox) (CD three) (NNS coats))
                        (PP (IN of)
                          (NP (NN plaster)))))))))))))
    (. .)))

mark(was-3, Although-1)
expl(was-3, there-2)
advcl(was-40, was-3)
neg(occasion-5, no-4)
nsubj(was-3, occasion-5)
aux(roughen-7, to-6)
vmod(occasion-5, roughen-7)
det(walls-9, these-8)
dobj(roughen-7, walls-9)
prepc_by(roughen-7, clearing-11)
prt(clearing-11, away-12)
det(mortar-15, the-13)
amod(mortar-15, old-14)
dobj(clearing-11, mortar-15)
prep(clearing-11, from-16)
pcomp(from-16, between-17)
det(stones-19, the-18)
pobj(between-17, stones-19)
det(weather-22, the-21)
nsubj(was-40, weather-22)
nsubjpass(washed-44, weather-22)
nsubj(lay-61, weather-22)
aux(done-24, having-23)
dep(weather-22, done-24)
dep(sufficiently-27, that-25)
advmod(sufficiently-27, quite-26)
acomp(done-24, sufficiently-27)
predet(preparation-32, all-30)
det(preparation-32, the-31)
acomp(done-24, preparation-32)
conj_and(sufficiently-27, preparation-32)
nsubj(wanted-34, they-33)
rcmod(preparation-32, wanted-34)
det(coat-39, the-36)
amod(coat-39, first-37)
amod(coat-39, thin-38)
prep_for(wanted-34, coat-39)
root(ROOT-0, was-40)
aux(washed-44, to-41)
auxpass(washed-44, be-42)
advmod(washed-44, well-43)
xcomp(was-40, washed-44)
prt(washed-44, down-45)
nsubj(took-48, it-47)
parataxis(washed-44, took-48)
dobj(took-48, them-49)
det(days-53, a-50)
amod(days-53, good-51)
amod(days-53, many-52)
tmod(took-48, days-53)
vmod(took-48, working-55)
predet(time-58, all-56)
poss(time-58, their-57)
dobj(working-55, time-58)
aux(lay-61, to-60)
xcomp(washed-44, lay-61)
det(coats-66, the-63)
amod(coats-66, orthodox-64)
num(coats-66, three-65)
prep_on(lay-61, coats-66)
prep_of(coats-66, plaster-68)

(ROOT
  (S
    (NP (NNP Mr) (NNP Spelman))
    (VP (VBD had)
      (ADVP (RB wisely))
      (VP (VBN boarded)
        (NP (DT the) (NN ceiling))
        (, ,)
        (SBAR (RB so) (IN that)
          (S
            (NP (PRP they))
            (VP (VBD had)
              (VP (RB not)
                (S
                  (VP (TO to)
                    (VP (VB plaster)
                      (NP (DT that)))))))))))
    (. .)))

nn(Spelman-2, Mr-1)
nsubj(boarded-5, Spelman-2)
aux(boarded-5, had-3)
advmod(boarded-5, wisely-4)
root(ROOT-0, boarded-5)
det(ceiling-7, the-6)
dobj(boarded-5, ceiling-7)
advmod(not-13, so-9)
mark(not-13, that-10)
nsubj(not-13, they-11)
nsubj(plaster-15, they-11)
aux(not-13, had-12)
advcl(boarded-5, not-13)
aux(plaster-15, to-14)
xcomp(not-13, plaster-15)
dobj(plaster-15, that-16)

(ROOT
  (S
    (ADVP (RB Meantime))
    (NP (PRP he))
    (VP (VBD was)
      (VP (VBG preparing)
        (NP
          (NP (DT a) (NN door)
            (CC and)
            (NNS window-frames))
          (PP (IN in)
            (NP (DT the) (NN shop))))))
    (. .)))

advmod(preparing-4, Meantime-1)
nsubj(preparing-4, he-2)
aux(preparing-4, was-3)
root(ROOT-0, preparing-4)
det(door-6, a-5)
dobj(preparing-4, door-6)
dobj(preparing-4, window-frames-8)
conj_and(door-6, window-frames-8)
det(shop-11, the-10)
prep_in(door-6, shop-11)

(ROOT
  (S
    (NP (DT The) (NN room))
    (VP (VBD had)
      (ADVP (RB probably))
      (VP (VBN been)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ prior) (POS 's))
              (, ,)
              (SBAR (IN for)
                (S
                  (NP (PRP it))
                  (VP
                    (VP (VBD was)
                      (ADJP
                        (ADJP (RB much) (RB too) (JJ large)
                          (CC and)
                          (JJ lofty))
                        (PP (IN for)
                          (NP (DT a) (JJ mere) (NN cell)))))
                    (, ,)
                    (CC and)
                    (VP (VBD had)
                      (NP (CD two) (NNS windows)))))))))))
    (. .)))

det(room-2, The-1)
nsubj(one-6, room-2)
aux(one-6, had-3)
advmod(one-6, probably-4)
cop(one-6, been-5)
root(ROOT-0, one-6)
det(prior-9, the-8)
prep_of(one-6, prior-9)
possessive(prior-9, 's-10)
mark(large-17, for-12)
nsubj(large-17, it-13)
nsubj(lofty-19, it-13)
nsubj(had-26, it-13)
cop(large-17, was-14)
advmod(large-17, much-15)
advmod(large-17, too-16)
dep(prior-9, large-17)
dep(prior-9, lofty-19)
conj_and(large-17, lofty-19)
det(cell-23, a-21)
amod(cell-23, mere-22)
prep_for(large-17, cell-23)
dep(prior-9, had-26)
conj_and(large-17, had-26)
num(windows-28, two-27)
dobj(had-26, windows-28)

(ROOT
  (S (CC But)
    (S
      (NP (DT these))
      (VP (VBD were)
        (ADJP (RB fortunately) (JJ small))))
    (, ,) (RB not)
    (S
      (PP (IN like)
        (NP
          (NP (DT the) (JJ splendid) (NNS ones))
          (PP (IN in)
            (NP (DT the) (NN chapel)
              (CC and)
              (NN refectory)))))
      (, ,)
      (NP (RB else) (PRP they))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (ADJP (JJ hard)
              (S
                (VP (TO to)
                  (VP (VB fill)
                    (PP (IN with)
                      (NP (NN glass)))))))))))
    (. .)))

cc(small-5, But-1)
nsubj(small-5, these-2)
cop(small-5, were-3)
advmod(small-5, fortunately-4)
root(ROOT-0, small-5)
neg(hard-23, not-7)
det(ones-11, the-9)
amod(ones-11, splendid-10)
prep_like(hard-23, ones-11)
det(chapel-14, the-13)
prep_in(ones-11, chapel-14)
prep_in(ones-11, refectory-16)
conj_and(chapel-14, refectory-16)
advmod(they-19, else-18)
nsubj(hard-23, they-19)
nsubj(fill-25, they-19)
aux(hard-23, would-20)
aux(hard-23, have-21)
cop(hard-23, been-22)
parataxis(small-5, hard-23)
aux(fill-25, to-24)
xcomp(hard-23, fill-25)
prep_with(fill-25, glass-27)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ afraid)
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD 'll)
                (VP (VB be)
                  (VP (VBN starved)
                    (PP (IN with)
                      (NP
                        (NP (JJ cold))
                        (, ,)
                        (NP (NNP Willie))))))))))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP (PRP$ his) (NN father)))
    (NP
      (NP (CD one) (NN day))
      (, ,)
      (SBAR (IN after)
        (S
          (VP (VBG watching)
            (NP (DT the) (NNS boys))
            (PP (IN at)
              (NP
                (NP (NN work))
                (PP (IN for)
                  (NP (DT a) (JJ few) (NNS minutes)))))))))
    (. .)))

nsubj(afraid-4, I-2)
cop(afraid-4, 'm-3)
ccomp(said-15, afraid-4)
nsubjpass(starved-8, you-5)
aux(starved-8, 'll-6)
auxpass(starved-8, be-7)
ccomp(afraid-4, starved-8)
prep_with(starved-8, cold-10)
appos(cold-10, Willie-12)
root(ROOT-0, said-15)
poss(father-17, his-16)
dobj(said-15, father-17)
num(day-19, one-18)
nsubj(said-15, day-19)
prepc_after(day-19, watching-22)
det(boys-24, the-23)
dobj(watching-22, boys-24)
prep_at(watching-22, work-26)
det(minutes-30, a-28)
amod(minutes-30, few-29)
prep_for(work-26, minutes-30)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT no) (NN fireplace)))
    (. .) ('' '')))

expl('s-3, There-2)
root(ROOT-0, 's-3)
neg(fireplace-5, no-4)
nsubj('s-3, fireplace-5)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (SINV
    (S
      (NP (DT that))
      (VP (VBZ does) (RB n't)
        (VP (VB signify))))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (. .)))

nsubj(signify-4, that-1)
aux(signify-4, does-2)
neg(signify-4, n't-3)
ccomp(answered-7, signify-4)
root(ROOT-0, answered-7)
nsubj(answered-7, Willie-8)

(ROOT
  (S (`` ``)
    (VP (VB Look)
      (SBAR
        (WHADVP (WRB how)
          (ADJP (JJ thick)))
        (S
          (NP (DT the) (NNS walls))
          (VP (VBP are)))))
    (. !)))

root(ROOT-0, Look-2)
advmod(are-7, how-3)
dep(how-3, thick-4)
det(walls-6, the-5)
nsubj(are-7, walls-6)
ccomp(Look-2, are-7)

(ROOT
  (S (CC and)
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB have)
        (NP
          (NP (RB plenty))
          (PP (IN of)
            (NP
              (NP (NNS blankets))
              (PP (IN on)
                (NP (PRP$ my) (NN bed))))))))
    (. .)))

cc(have-4, and-1)
nsubj(have-4, I-2)
aux(have-4, shall-3)
root(ROOT-0, have-4)
dobj(have-4, plenty-5)
prep_of(plenty-5, blankets-7)
poss(bed-10, my-9)
prep_on(blankets-7, bed-10)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (NP (PRP we))
    (VP (MD can)
      (ADVP (RB easily))
      (VP (VB put)
        (NP (DT a) (JJ little) (NN stove))
        (PP (IN in))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (VP (VBN wanted)))))))
    (. .) ('' '')))

advmod(put-6, Besides-1)
nsubj(put-6, we-3)
aux(put-6, can-4)
advmod(put-6, easily-5)
root(ROOT-0, put-6)
det(stove-9, a-7)
amod(stove-9, little-8)
dobj(put-6, stove-9)
prep(put-6, in-10)
mark(wanted-15, if-12)
nsubjpass(wanted-15, it-13)
auxpass(wanted-15, 's-14)
advcl(put-6, wanted-15)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (DT the) (NNS windows))
        (VP (VBD were)
          (VP (VBN fitted)
            (CC and)
            (VBN fixed)))))
    (, ,)
    (NP (NNP Mr) (NNP Macmichael))
    (VP (VBD saw)
      (PP (TO to)
        (NP (PRP$ his) (NN dismay)))
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBD were) (RB not)
            (VP (VBN made)
              (S
                (VP (TO to)
                  (VP (VB open)))))))))
    (. .)))

cc(saw-12, But-1)
advmod(fitted-6, when-2)
det(windows-4, the-3)
nsubjpass(fitted-6, windows-4)
nsubjpass(fixed-8, windows-4)
auxpass(fitted-6, were-5)
advcl(saw-12, fitted-6)
conj_and(fitted-6, fixed-8)
advcl(saw-12, fixed-8)
nn(Macmichael-11, Mr-10)
nsubj(saw-12, Macmichael-11)
root(ROOT-0, saw-12)
poss(dismay-15, his-14)
prep_to(saw-12, dismay-15)
mark(made-20, that-16)
nsubjpass(made-20, they-17)
nsubj(open-22, they-17)
auxpass(made-20, were-18)
neg(made-20, not-19)
ccomp(saw-12, made-20)
aux(open-22, to-21)
xcomp(made-20, open-22)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD had)
      (ADVP (RB not) (RB even))
      (NP
        (NP (DT a) (NN pane))
        (PP (IN on)
          (NP (NNS hinges)))))
    (. .)))

nsubj(had-2, They-1)
root(ROOT-0, had-2)
dep(even-4, not-3)
advmod(had-2, even-4)
det(pane-6, a-5)
dobj(had-2, pane-6)
prep_on(pane-6, hinges-8)

(ROOT
  (S (`` ``)
    (S
      (NP (DT This))
      (VP (MD 'll)
        (VP
          (ADVP (RB never))
          (VB do) (, ,)
          (ADVP (RB Willie)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

nsubj(do-5, This-2)
aux(do-5, 'll-3)
neg(do-5, never-4)
ccomp(said-11, do-5)
advmod(do-5, Willie-7)
nsubj(said-11, he-10)
root(ROOT-0, said-11)

(ROOT
  (S (`` ``)
    (NP (DT This))
    (VP (VBZ is)
      (ADJP
        (ADJP (RB far) (JJR worse))
        (PP (IN than)
          (NP (DT no) (NN chimney)))))
    (. .) ('' '')))

nsubj(worse-5, This-2)
cop(worse-5, is-3)
advmod(worse-5, far-4)
root(ROOT-0, worse-5)
neg(chimney-8, no-7)
prep_than(worse-5, chimney-8)

(ROOT
  (S
    (NP (NNP Willie))
    (VP
      (VP (VBD took)
        (NP (PRP$ his) (NN father))
        (PP (IN by)
          (NP (DT the) (NN coat))))
      (, ,)
      (CC and)
      (VP (VBD led)
        (NP (PRP him))
        (PP (TO to)
          (NP
            (NP (DT a) (NN corner))
            (, ,)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT a) (NN hole))
                (VP (VBD went)
                  (ADVP (RB right)
                    (PP (IN through)
                      (NP (DT the) (NN wall))))
                  (PP (IN into)
                    (NP (DT another) (NN room)))))))))
      (: --)
      (SBAR (IN if)
        (S
          (NP (DT that))
          (VP (MD can)
            (VP (VB be)
              (VP (VBN called)
                (NP
                  (NP (DT a) (NN room))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD had)
                        (NP (DT neither) (NN floor)
                          (CC nor)
                          (NN ceiling))))))))))))
    (. .)))

nsubj(took-2, Willie-1)
nsubj(led-10, Willie-1)
root(ROOT-0, took-2)
poss(father-4, his-3)
dobj(took-2, father-4)
det(coat-7, the-6)
prep_by(took-2, coat-7)
conj_and(took-2, led-10)
dobj(led-10, him-11)
det(corner-14, a-13)
prep_to(led-10, corner-14)
advmod(went-19, where-16)
det(hole-18, a-17)
nsubj(went-19, hole-18)
rcmod(corner-14, went-19)
advmod(went-19, right-20)
det(wall-23, the-22)
prep_through(right-20, wall-23)
det(room-26, another-25)
prep_into(went-19, room-26)
mark(called-32, if-28)
nsubjpass(called-32, that-29)
aux(called-32, can-30)
auxpass(called-32, be-31)
advcl(took-2, called-32)
conj_and(took-2, called-32)
det(room-34, a-33)
dobj(called-32, room-34)
nsubj(had-36, room-34)
rcmod(room-34, had-36)
preconj(floor-38, neither-37)
dobj(had-36, floor-38)
dobj(had-36, ceiling-40)
conj_nor(floor-38, ceiling-40)

(ROOT
  (FRAG (`` ``)
    (NP (RB There))
    (, ,)
    (NP (NN father))
    (. !) ('' '')))

root(ROOT-0, There-2)
dep(There-2, father-4)

(ROOT
  (S
    (S
      (NP (PRP he))
      (VP (VBD said)))
    (: ;) (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (VBP am)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB fit)
                  (NP
                    (NP (DT a) (NN slide))
                    (PP (IN over)
                      (NP (DT this) (NN hole))))))))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (PRP I))
        (VP (MD can)
          (VP (VB let)
            (PRT (RP in))
            (ADVP (RB just)
              (PP (IN as)
                (NP
                  (QP (JJ much)
                    (CC or)
                    (RB as) (JJ little))
                  (NN air))))
            (SBAR (IN as)
              (S
                (NP (PRP I))
                (VP (VBP please))))))))
    (. .) ('' '')))

nsubj(said-2, he-1)
root(ROOT-0, said-2)
nsubj(going-7, I-5)
nsubj(fit-9, I-5)
aux(going-7, am-6)
parataxis(said-2, going-7)
aux(fit-9, to-8)
xcomp(going-7, fit-9)
det(slide-11, a-10)
dobj(fit-9, slide-11)
det(hole-14, this-13)
prep_over(slide-11, hole-14)
advmod(let-20, then-17)
nsubj(let-20, I-18)
aux(let-20, can-19)
parataxis(said-2, let-20)
conj_and(going-7, let-20)
prt(let-20, in-21)
advmod(let-20, just-22)
num(air-28, much-24)
advmod(little-27, as-26)
conj_or(much-24, little-27)
num(air-28, little-27)
prep_as(just-22, air-28)
mark(please-31, as-29)
nsubj(please-31, I-30)
advcl(let-20, please-31)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN been)
          (ADJP (JJR better))
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (CD one))
                  (ADVP (IN at) (JJS least))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NNS windows))
                      (VP (VBN made)
                        (S
                          (VP (TO to)
                            (VP (VB open))))))))))))))
    (. .)))

nsubj(better-6, It-2)
nsubj(have-8, It-2)
aux(better-6, would-3)
aux(better-6, have-4)
cop(better-6, been-5)
root(ROOT-0, better-6)
aux(have-8, to-7)
xcomp(better-6, have-8)
dobj(have-8, one-9)
advmod(one-9, at-10)
pobj(at-10, least-11)
det(windows-14, the-13)
prep_of(one-9, windows-14)
vmod(windows-14, made-15)
aux(open-17, to-16)
xcomp(made-15, open-17)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (ADVP (RB only))
      (VP (VB get)
        (NP (DT the) (NN air))
        (PP (IN from)
          (NP
            (NP (DT the) (NNS ruins))
            (NP (DT that) (NN way))))
        (, ,)
        (SBAR (IN whereas)
          (S
            (NP (PRP you))
            (VP (MD might)
              (VP (VB have)
                (VP (VBN had)
                  (NP
                    (NP (PDT all) (DT the) (NNS scents))
                    (PP (IN of)
                      (NP
                        (NP (NNP Mr) (NNP Shepherd) (POS 's))
                        (NNS wallflowers)
                        (CC and)
                        (NNS roses)))))))))))
    (. .) ('' '')))

nsubj(get-4, You-1)
aux(get-4, will-2)
advmod(get-4, only-3)
root(ROOT-0, get-4)
det(air-6, the-5)
dobj(get-4, air-6)
det(ruins-9, the-8)
prep_from(get-4, ruins-9)
det(way-11, that-10)
dep(ruins-9, way-11)
mark(had-17, whereas-13)
nsubj(had-17, you-14)
aux(had-17, might-15)
aux(had-17, have-16)
advcl(get-4, had-17)
predet(scents-20, all-18)
det(scents-20, the-19)
dobj(had-17, scents-20)
nn(Shepherd-23, Mr-22)
poss(wallflowers-25, Shepherd-23)
prep_of(scents-20, wallflowers-25)
prep_of(scents-20, roses-27)
conj_and(wallflowers-25, roses-27)

(ROOT
  (S (`` ``)
    (S
      (SBAR (IN As)
        (S
          (SBAR (RB soon) (IN as)
            (S
              (NP (NNP Mr) (NNP Spelman))
              (VP (VBZ has)
                (VP (VBN done)
                  (PP (IN with)
                    (NP (DT the) (NN job)))))))
          (, ,) ('' '')
          (VP (VBD said)
            (NP (NNP Willie)))))
      (, ,) (`` ``)
      (S
        (NP (PRP I))
        (VP (MD will)
          (VP (VB make)
            (S
              (NP (PRP them))
              (VP (DT both) (TO to)
                (VP (VB come)
                  (ADJP (RB wide) (JJ open))
                  (PP (IN on)
                    (NP (NNS hinges)))))))))
      (: ;)
      (CC but)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB want)
            (S
              (VP (TO to)
                (VP (VB bother)
                  (NP (PRP him))
                  (PP (IN about)
                    (NP (PRP it)))
                  (, ,)
                  (SBAR (IN for)
                    (S
                      (NP (PRP he))
                      (VP (VBZ has)
                        (VP (VBN been)
                          (ADJP (RB very) (JJ kind)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD can)
        (VP (VB do)
          (S
            (NP (PRP it))
            (ADVP (RB quite) (RB well))
            (NP (PRP myself))))))
    (. .) ('' '')))

mark(said-14, As-2)
advmod(done-8, soon-3)
mark(done-8, as-4)
nn(Spelman-6, Mr-5)
nsubj(done-8, Spelman-6)
aux(done-8, has-7)
advcl(said-14, done-8)
det(job-11, the-10)
prep_with(done-8, job-11)
advcl(make-20, said-14)
dobj(said-14, Willie-15)
nsubj(make-20, I-18)
aux(make-20, will-19)
root(ROOT-0, make-20)
dobj(make-20, them-21)
nsubj(come-24, them-21)
dep(come-24, both-22)
aux(come-24, to-23)
ccomp(make-20, come-24)
xcomp(make-20, come-24)
advmod(open-26, wide-25)
acomp(come-24, open-26)
prep_on(come-24, hinges-28)
nsubj(want-34, I-31)
nsubj(bother-36, I-31)
aux(want-34, do-32)
neg(want-34, n't-33)
conj_but(make-20, want-34)
aux(bother-36, to-35)
xcomp(want-34, bother-36)
dobj(bother-36, him-37)
prep_about(bother-36, it-39)
mark(kind-46, for-41)
nsubj(kind-46, he-42)
aux(kind-46, has-43)
cop(kind-46, been-44)
advmod(kind-46, very-45)
advcl(bother-36, kind-46)
nsubj(do-51, I-49)
aux(do-51, can-50)
conj_and(make-20, do-51)
dep(myself-55, it-52)
advmod(well-54, quite-53)
advmod(myself-55, well-54)
dep(do-51, myself-55)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD satisfied)
      (NP (PRP$ his) (NN father)))
    (. .)))

nsubj(satisfied-2, This-1)
root(ROOT-0, satisfied-2)
poss(father-4, his-3)
dobj(satisfied-2, father-4)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (NN length)))
      (NP (DT the) (NN floor))
      (VP (VBD was)
        (VP (VBN boarded))))
    (: ;)
    (S
      (NP (DT a) (JJ strong) (JJ thick) (NN door))
      (VP (VBD was)
        (VP (VBN fitted)
          (ADVP (RB tight)))))
    (: ;)
    (S
      (NP
        (NP (DT a) (JJ winding) (NN stair))
        (PP (IN of)
          (NP (NN deal))))
      (VP (VBD inserted)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (NN stone) (NN one))
            (VP (VBD had)
              (VP
                (VP (VBN been))
                (, ,)
                (CC and)
                (VP (VBN cased)
                  (PP (IN in) (IN with)
                    (NP
                      (NP (NNS planks))
                      (, ,)
                      (VP
                        (ADVP (RB well))
                        (VBN pitched)
                        (PP (IN on)
                          (NP (DT the) (NN outside)))))))))))))
    (: ;)
    (CC and)
    (S
      (ADVP (RB now))
      (NP
        (NP (NNP Willie) (POS 's))
        (NN mother))
      (VP (VBD was)
        (ADJP (JJ busy)
          (S
            (VP (VBG making)
              (NP
                (NP
                  (NP (JJ little) (NN muslin) (NNS curtains))
                  (PP (IN for)
                    (NP (PRP$ his) (NNS windows))))
                (, ,)
                (CC and)
                (NP
                  (NP (DT a) (NN carpet))
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN middle))
                      (PP (IN of)
                        (NP (DT the) (NN room))))))))))))
    (. .)))

prep_at(boarded-6, length-2)
det(floor-4, the-3)
nsubjpass(boarded-6, floor-4)
auxpass(boarded-6, was-5)
root(ROOT-0, boarded-6)
det(door-11, a-8)
amod(door-11, strong-9)
amod(door-11, thick-10)
nsubjpass(fitted-13, door-11)
auxpass(fitted-13, was-12)
conj_and(boarded-6, fitted-13)
advmod(fitted-13, tight-14)
det(stair-18, a-16)
amod(stair-18, winding-17)
nsubj(inserted-21, stair-18)
prep_of(stair-18, deal-20)
conj_and(boarded-6, inserted-21)
advmod(been-27, where-22)
det(one-25, the-23)
nn(one-25, stone-24)
nsubj(been-27, one-25)
nsubj(cased-30, one-25)
aux(been-27, had-26)
advcl(inserted-21, been-27)
advcl(inserted-21, cased-30)
conj_and(been-27, cased-30)
dep(cased-30, in-31)
prep_with(cased-30, planks-33)
advmod(pitched-36, well-35)
vmod(planks-33, pitched-36)
det(outside-39, the-38)
prep_on(pitched-36, outside-39)
advmod(busy-47, now-42)
poss(mother-45, Willie-43)
nsubj(busy-47, mother-45)
cop(busy-47, was-46)
conj_and(boarded-6, busy-47)
dep(busy-47, making-48)
amod(curtains-51, little-49)
nn(curtains-51, muslin-50)
dobj(making-48, curtains-51)
poss(windows-54, his-53)
prep_for(curtains-51, windows-54)
det(carpet-58, a-57)
dobj(making-48, carpet-58)
conj_and(curtains-51, carpet-58)
det(middle-61, the-60)
prep_for(carpet-58, middle-61)
det(room-64, the-63)
prep_of(middle-61, room-64)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN meantime)))
    (, ,)
    (NP (PRP$ his) (NN father)
      (CC and)
      (NN mother))
    (VP (VBD had)
      (ADVP (DT both))
      (VP (VBN written)
        (PP (TO to)
          (NP (PRP$ his) (NN grandmother)))
        (, ,)
        (S
          (VP
            (VP (VBG telling)
              (NP (PRP her))
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (NNP Willie))
                  (VP (VBD had)
                    (VP (VBN been)
                      (VP (VBG using)
                        (NP (PRP$ his) (NNS powers))
                        (PP (DT both)
                          (PP (IN of)
                            (NP (NN invention)))
                          (CC and)
                          (PP (IN of)
                            (NP (NN labour))))
                        (S
                          (VP (TO to)
                            (VP (VB make)
                              (NP (NN room))
                              (PP (IN for)
                                (NP (PRP her))))))))))))
            (, ,)
            (CC and)
            (VP (VBG urging)
              (S
                (NP (PRP her))
                (VP (TO to)
                  (VP (VB come)
                    (CC and)
                    (VB live)
                    (PP (IN with)
                      (NP (PRP them)))
                    (, ,)
                    (SBAR (IN for)
                      (S
                        (NP (PRP they))
                        (VP (VBD were) (RB all)
                          (ADJP (JJ anxious)
                            (S
                              (VP (TO to)
                                (VP (VB have)
                                  (S
                                    (NP (PRP her))
                                    (VP (TO to)
                                      (VP (VB take)
                                        (NP (VB care) (IN of))))))))))))))))))))
    (. .)))

det(meantime-3, the-2)
prep_in(written-11, meantime-3)
poss(father-6, his-5)
nsubj(written-11, father-6)
conj_and(father-6, mother-8)
nsubj(written-11, mother-8)
aux(written-11, had-9)
advmod(written-11, both-10)
root(ROOT-0, written-11)
poss(grandmother-14, his-13)
prep_to(written-11, grandmother-14)
ccomp(written-11, telling-16)
dobj(telling-16, her-17)
advmod(using-22, how-18)
nsubj(using-22, Willie-19)
aux(using-22, had-20)
aux(using-22, been-21)
dep(telling-16, using-22)
poss(powers-24, his-23)
dobj(using-22, powers-24)
preconj(using-22, both-25)
prep_of(using-22, invention-27)
prep_of(using-22, labour-30)
conj_and(invention-27, labour-30)
aux(make-32, to-31)
vmod(using-22, make-32)
dobj(make-32, room-33)
prep_for(make-32, her-35)
ccomp(written-11, urging-38)
conj_and(telling-16, urging-38)
dobj(urging-38, her-39)
nsubj(come-41, her-39)
nsubj(live-43, her-39)
aux(come-41, to-40)
xcomp(urging-38, come-41)
xcomp(urging-38, live-43)
conj_and(come-41, live-43)
prep_with(come-41, them-45)
mark(anxious-51, for-47)
nsubj(anxious-51, they-48)
nsubj(have-53, they-48)
cop(anxious-51, were-49)
advmod(anxious-51, all-50)
advcl(come-41, anxious-51)
aux(have-53, to-52)
xcomp(anxious-51, have-53)
dobj(have-53, her-54)
nsubj(take-56, her-54)
aux(take-56, to-55)
ccomp(have-53, take-56)
xcomp(have-53, take-56)
dobj(take-56, care-57)
amod(care-57, of-58)

(ROOT
  (S (CC But)
    (, ,)
    (PP (IN in)
      (NP (NN fact)))
    (, ,)
    (NP (JJ small) (NN persuasion))
    (VP (VBD was)
      (ADJP (JJ necessary))
      (, ,)
      (SBAR (IN for)
        (S
          (S
            (NP (DT the) (JJ old) (NN lady))
            (VP (VBD was)
              (ADVP (RB only))
              (ADJP (RB too) (JJ glad)
                (S
                  (VP (TO to)
                    (VP (VB accept)
                      (NP (DT the) (NN invitation))))))))
          (: ;)
          (CC and)
          (S
            (SBAR (IN before)
              (S
                (NP
                  (NP (DT the) (JJ warm) (NN weather))
                  (PP (IN of)
                    (NP (NN autumn))))
                (VP (VBD was)
                  (ADJP (RP over)))))
            (, ,)
            (NP (PRP she))
            (VP (VBD was)
              (ADJP (JJ ready)
                (S
                  (VP (TO to)
                    (VP (VB go)
                      (PP (TO to)
                        (NP (PRP them))))))))))))
    (. .)))

cc(necessary-9, But-1)
prep_in(necessary-9, fact-4)
amod(persuasion-7, small-6)
nsubj(necessary-9, persuasion-7)
cop(necessary-9, was-8)
root(ROOT-0, necessary-9)
mark(glad-18, for-11)
det(lady-14, the-12)
amod(lady-14, old-13)
nsubj(glad-18, lady-14)
nsubj(accept-20, lady-14)
cop(glad-18, was-15)
advmod(glad-18, only-16)
advmod(glad-18, too-17)
advcl(necessary-9, glad-18)
aux(accept-20, to-19)
xcomp(glad-18, accept-20)
det(invitation-22, the-21)
dobj(accept-20, invitation-22)
mark(over-32, before-25)
det(weather-28, the-26)
amod(weather-28, warm-27)
nsubj(over-32, weather-28)
prep_of(weather-28, autumn-30)
cop(over-32, was-31)
advcl(ready-36, over-32)
nsubj(ready-36, she-34)
nsubj(go-38, she-34)
cop(ready-36, was-35)
advcl(necessary-9, ready-36)
conj_and(glad-18, ready-36)
aux(go-38, to-37)
xcomp(ready-36, go-38)
prep_to(go-38, them-40)

(ROOT
  (S
    (PP (IN By)
      (NP (DT this) (NN time)))
    (NP
      (NP (NNP Willie) (POS 's))
      (NN room))
    (VP (VBD was)
      (ADJP (JJ furnished)))
    (. .)))

det(time-3, this-2)
prep_by(furnished-8, time-3)
poss(room-6, Willie-4)
nsubj(furnished-8, room-6)
cop(furnished-8, was-7)
root(ROOT-0, furnished-8)

(ROOT
  (S
    (NP
      (NP (PDT All) (DT the) (NNS things))
      (PP (IN from)
        (NP (PRP$ his) (JJ former) (NN nest))))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBN moved)
          (PP
            (PP (IN into)
              (NP
                (NP (PRP it))
                (: ;)
                (NP
                  (NP (DT the) (NN bed))
                  (PP (IN with)
                    (NP (DT the) (NN chintz) (NNS curtains)))
                  (, ,)
                  (VP (VBN covered)
                    (PP (IN with)
                      (NP (JJ strange) (NNS flowers)
                        (CC and)
                        (NNS birds)))))
                (: ;)
                (NP
                  (NP (DT the) (JJ old) (NN bureau))
                  (, ,)
                  (PP (IN with)
                    (NP
                      (NP (DT the) (JJ many) (NNS drawers))
                      (PP (IN inside)
                        (NP
                          (NP (DT the) (JJ folding) (NN cover))
                          (, ,)
                          (SBAR
                            (WHPP (IN in)
                              (WHNP (WDT which)))
                            (S
                              (NP (PRP he))
                              (VP (VBD kept)
                                (NP (PDT all) (PRP$ his) (JJ little) (NNS treasures))))))))))
                (: ;)
                (NP
                  (NP (DT the) (NN table))
                  (SBAR
                    (WHPP (IN at)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP he))
                      (VP (VBD read)
                        (NP
                          (NP (NNS books))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD were)
                                (ADJP (RB too) (JJ big)
                                  (S
                                    (VP (TO to)
                                      (VP (VB hold))))))))
                          (, ,)
                          (PP (JJ such) (IN as)
                            (NP
                              (NP
                                (NP (NNP Raleigh) (POS 's))
                                (NN History))
                              (PP (IN of)
                                (NP (DT the) (NNP World)
                                  (CC and)
                                  (NNP Josephus))))))))))
                (: ;)
                (NP
                  (NP (DT the) (JJ old) (NN oblong) (NN mirror))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD hung)
                        (PP (IN on)
                          (NP (DT the) (NN wall)))
                        (, ,)
                        (PP (IN with)
                          (NP
                            (NP (DT an) (JJ outspread) (JJ gilt) (NN eagle))
                            (PP (IN at)
                              (NP
                                (NP (DT the) (NN top))
                                (PP (IN of)
                                  (NP (PRP it)))))))))))
                (: ;)
                (NP
                  (NP (DT the) (JJ big) (JJ old) (NN arm-chair))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD had)
                        (VP (VBN belonged)
                          (PP (TO to)
                            (NP (PRP$ his) (NN great-grandfather))))))))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD wrote)
                      (NP (PRP$ his) (NNS sermons))
                      (PP (IN in)
                        (NP (PRP it))))))))
            (: --)
            (PP (IN for)
              (NP
                (NP (PDT all) (DT the) (NNS things))
                (SBAR
                  (S
                    (NP (DT the) (NN boy))
                    (VP (VBD had)
                      (SBAR (IN about)
                        (S
                          (NP (PRP him))
                          (VP (VBD were)
                            (ADJP (JJ old))))))))))
            (, ,)
            (CC and)
            (PP (IN in)
              (NP
                (NP (PDT all) (PRP$ his) (NN after-life))
                (SBAR
                  (S
                    (NP (PRP he))
                    (ADVP (RB never))
                    (VP (MD could)
                      (VP (VB bear)
                        (NP (JJ new) (NN furniture))))))))))))
    (. .)))

predet(things-3, All-1)
det(things-3, the-2)
nsubjpass(moved-10, things-3)
nsubjpass(moved-10', things-3)
nsubjpass(moved-10'', things-3)
poss(nest-7, his-5)
amod(nest-7, former-6)
prep_from(things-3, nest-7)
aux(moved-10, had-8)
auxpass(moved-10, been-9)
root(ROOT-0, moved-10)
conj_and(moved-10, moved-10')
conj_and(moved-10, moved-10'')
prep_into(moved-10, it-12)
nsubj(wrote-108, it-12)
det(bed-15, the-14)
dep(it-12, bed-15)
det(curtains-19, the-17)
nn(curtains-19, chintz-18)
prep_with(bed-15, curtains-19)
vmod(bed-15, covered-21)
amod(flowers-24, strange-23)
prep_with(covered-21, flowers-24)
prep_with(covered-21, birds-26)
conj_and(flowers-24, birds-26)
det(bureau-30, the-28)
amod(bureau-30, old-29)
dep(it-12, bureau-30)
det(drawers-35, the-33)
amod(drawers-35, many-34)
prep_with(bureau-30, drawers-35)
det(cover-39, the-37)
amod(cover-39, folding-38)
prep_inside(drawers-35, cover-39)
prep_in(kept-44, cover-39)
nsubj(kept-44, he-43)
rcmod(cover-39, kept-44)
predet(treasures-48, all-45)
poss(treasures-48, his-46)
amod(treasures-48, little-47)
dobj(kept-44, treasures-48)
det(table-51, the-50)
dep(it-12, table-51)
prep_at(read-55, table-51)
nsubj(read-55, he-54)
rcmod(table-51, read-55)
dobj(read-55, books-56)
nsubj(big-60, books-56)
nsubj(hold-62, books-56)
cop(big-60, were-58)
advmod(big-60, too-59)
rcmod(books-56, big-60)
aux(hold-62, to-61)
xcomp(big-60, hold-62)
poss(History-68, Raleigh-66)
prep_such_as(books-56, History-68)
det(World-71, the-70)
prep_of(History-68, World-71)
prep_of(History-68, Josephus-73)
conj_and(World-71, Josephus-73)
det(mirror-78, the-75)
amod(mirror-78, old-76)
nn(mirror-78, oblong-77)
dep(it-12, mirror-78)
nsubj(hung-80, mirror-78)
rcmod(mirror-78, hung-80)
det(wall-83, the-82)
prep_on(hung-80, wall-83)
det(eagle-89, an-86)
amod(eagle-89, outspread-87)
amod(eagle-89, gilt-88)
prep_with(hung-80, eagle-89)
det(top-92, the-91)
prep_at(eagle-89, top-92)
prep_of(top-92, it-94)
det(arm-chair-99, the-96)
amod(arm-chair-99, big-97)
amod(arm-chair-99, old-98)
dep(it-12, arm-chair-99)
nsubj(belonged-102, arm-chair-99)
aux(belonged-102, had-101)
rcmod(arm-chair-99, belonged-102)
poss(great-grandfather-105, his-104)
prep_to(belonged-102, great-grandfather-105)
rcmod(it-12, wrote-108)
poss(sermons-110, his-109)
dobj(wrote-108, sermons-110)
prep_in(wrote-108, it-112)
predet(things-117, all-115)
det(things-117, the-116)
prep_for(moved-10', things-117)
det(boy-119, the-118)
nsubj(had-120, boy-119)
rcmod(things-117, had-120)
mark(old-124, about-121)
nsubj(old-124, him-122)
cop(old-124, were-123)
advcl(had-120, old-124)
predet(after-life-130, all-128)
poss(after-life-130, his-129)
prep_in(moved-10'', after-life-130)
nsubj(bear-134, he-131)
neg(bear-134, never-132)
aux(bear-134, could-133)
rcmod(after-life-130, bear-134)
amod(furniture-136, new-135)
dobj(bear-134, furniture-136)

(ROOT
  (S (CC And)
    (S
      (ADVP (RB now))
      (NP
        (NP (PRP$ his) (NN grandmother) (POS 's))
        (NN furniture))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB appear))))))
    (: ;)
    (CC and)
    (S
      (S
        (NP
          (NP (DT a) (JJ great) (NN cart-load))
          (PP (IN of)
            (NP
              (NP (PRP it))
              (PP (IN from)
                (NP (PRP$ her) (JJS best) (NN bedroom))))))
        (VP (VBD was)
          (ADVP (RB speedily))
          (VP (VBN arranged)
            (PP (IN in)
              (NP
                (NP (NNP Willie) (POS 's))
                (JJ late) (NNS quarters))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB as) (RB soon)
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (VBD were)
                (ADJP (JJ ready)
                  (PP (IN for)
                    (NP (PRP her))))))))
        (, ,)
        (NP (NNP Mrs) (NNP Macmichael))
        (VP (VBD set)
          (PRT (RP out))
          (PP (IN in)
            (NP (DT a) (NN post-chaise)))
          (S
            (VP (TO to)
              (VP (VB fetch)
                (NP (PRP$ her) (NN mother))))))))
    (. .)))

advmod(began-7, now-2)
poss(grandmother-4, his-3)
poss(furniture-6, grandmother-4)
nsubj(began-7, furniture-6)
nsubj(appear-9, furniture-6)
root(ROOT-0, began-7)
aux(appear-9, to-8)
xcomp(began-7, appear-9)
det(cart-load-14, a-12)
amod(cart-load-14, great-13)
nsubjpass(arranged-23, cart-load-14)
prep_of(cart-load-14, it-16)
poss(bedroom-20, her-18)
amod(bedroom-20, best-19)
prep_from(it-16, bedroom-20)
auxpass(arranged-23, was-21)
advmod(arranged-23, speedily-22)
conj_and(began-7, arranged-23)
poss(quarters-28, Willie-25)
amod(quarters-28, late-27)
prep_in(arranged-23, quarters-28)
advmod(soon-32, as-31)
advmod(set-42, soon-32)
mark(ready-36, as-33)
nsubj(ready-36, they-34)
cop(ready-36, were-35)
ccomp(soon-32, ready-36)
prep_for(ready-36, her-38)
nn(Macmichael-41, Mrs-40)
nsubj(set-42, Macmichael-41)
nsubj(fetch-48, Macmichael-41)
conj_and(began-7, set-42)
conj_and(arranged-23, set-42)
prt(set-42, out-43)
det(post-chaise-46, a-45)
prep_in(set-42, post-chaise-46)
aux(fetch-48, to-47)
xcomp(set-42, fetch-48)
poss(mother-50, her-49)
dobj(fetch-48, mother-50)

(ROOT
  (NP (NNP CHAPTER) (NNP XIV) (. .)))

nn(XIV-2, CHAPTER-1)
root(ROOT-0, XIV-2)

(ROOT
  (S
    (NP (NNP WILLIE))
    (VP (VBZ 'S)
      (NP (NN GRANDMOTHER)))
    (. .)))

nsubj(GRANDMOTHER-3, WILLIE-1)
cop(GRANDMOTHER-3, 'S-2)
root(ROOT-0, GRANDMOTHER-3)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD was)
      (PP (IN in)
        (NP
          (NP (DT a) (NN state))
          (PP (IN of)
            (NP (NN excitement)))))
      (SBAR (IN until)
        (S
          (NP (PRP she))
          (VP (VBD arrived) (, ,)
            (S
              (VP (VBG looking)
                (PP (IN for)
                  (NP (PRP her)))
                (ADVP
                  (ADVP (RB as) (RB eagerly) (RB as))
                  (SBAR (IN if)
                    (S
                      (NP (PRP she))
                      (VP (VBD had)
                        (VP (VBN been)
                          (NP (DT a) (JJ young) (NNS princess)))))))))))))
    (. .)))

nsubj(was-2, Willie-1)
root(ROOT-0, was-2)
det(state-5, a-4)
prep_in(was-2, state-5)
prep_of(state-5, excitement-7)
mark(arrived-10, until-8)
nsubj(arrived-10, she-9)
advcl(was-2, arrived-10)
xcomp(arrived-10, looking-12)
prep_for(looking-12, her-14)
advmod(as-17, as-15)
advmod(as-17, eagerly-16)
advmod(looking-12, as-17)
mark(princess-24, if-18)
nsubj(princess-24, she-19)
aux(princess-24, had-20)
cop(princess-24, been-21)
det(princess-24, a-22)
amod(princess-24, young-23)
advcl(as-17, princess-24)

(ROOT
  (S
    (S
      (NP (RB So) (JJ few))
      (VP (VBD were)
        (NP
          (NP (DT the) (NNS opportunities))
          (PP (IN of)
            (S
              (VP (VBG travelling)
                (PP (IN between)
                  (NP
                    (NP (NNP Priory) (NNP Leas))
                    (CC and)
                    (NP (DT the) (NN town))))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP$ his) (NN grandmother))
                    (VP (VBD lived) (, ,)
                      (SBAR (IN that)
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (ADVP (RB never))
                            (VP (VBN seen)
                              (NP (PRP her)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN curiosity))
      (VP (VBD had)
        (NP
          (NP (PRP$ its) (NN influence))
          (CONJP (RB as) (RB well) (IN as))
          (NP (NN affection)))))
    (. .)))

advmod(few-2, So-1)
nsubj(opportunities-5, few-2)
cop(opportunities-5, were-3)
det(opportunities-5, the-4)
root(ROOT-0, opportunities-5)
prepc_of(opportunities-5, travelling-7)
nn(Leas-10, Priory-9)
prep_between(travelling-7, Leas-10)
det(town-13, the-12)
prep_between(travelling-7, town-13)
conj_and(Leas-10, town-13)
advmod(lived-17, where-14)
poss(grandmother-16, his-15)
nsubj(lived-17, grandmother-16)
advcl(travelling-7, lived-17)
mark(seen-23, that-19)
nsubj(seen-23, he-20)
aux(seen-23, had-21)
neg(seen-23, never-22)
ccomp(lived-17, seen-23)
dobj(seen-23, her-24)
nsubj(had-28, curiosity-27)
conj_and(opportunities-5, had-28)
poss(influence-30, its-29)
dobj(had-28, influence-30)
dobj(had-28, affection-34)
conj_and(influence-30, affection-34)

(ROOT
  (S
    (NP (NNP Great))
    (, ,)
    (ADVP (RB therefore))
    (, ,)
    (VP (VBD was)
      (NP (PRP$ his) (NN delight))
      (SBAR
        (WHADVP (WRB when))
        (S
          (PP (IN at)
            (NP (JJ last)))
          (NP (DT the) (NN chaise))
          (VP
            (VP (VBD came)
              (ADVP (RB round)
                (NP (DT the) (NN corner)))
              (PP (IN of)
                (NP (DT the) (NN street))))
            (, ,)
            (CC and)
            (VP (VBD began)
              (S
                (VP (TO to)
                  (VP (VB draw)
                    (PRT (RP up))
                    (SBAR (IN in) (NN order)
                      (S
                        (VP (TO to)
                          (VP (VB halt)
                            (PP (IN at)
                              (NP (PRP$ their) (NN door)))))))))))))))
    (. .)))

nsubj(delight-7, Great-1)
advmod(delight-7, therefore-3)
cop(delight-7, was-5)
poss(delight-7, his-6)
root(ROOT-0, delight-7)
advmod(came-13, when-8)
prep_at(came-13, last-10)
det(chaise-12, the-11)
nsubj(came-13, chaise-12)
nsubj(began-22, chaise-12)
nsubj(draw-24, chaise-12)
advcl(delight-7, came-13)
advmod(came-13, round-14)
det(corner-16, the-15)
pobj(round-14, corner-16)
det(street-19, the-18)
prep_of(came-13, street-19)
advcl(delight-7, began-22)
conj_and(came-13, began-22)
aux(draw-24, to-23)
xcomp(began-22, draw-24)
prt(draw-24, up-25)
mark(halt-29, in-26)
dep(halt-29, order-27)
aux(halt-29, to-28)
advcl(draw-24, halt-29)
poss(door-32, their-31)
prep_at(halt-29, door-32)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ first) (NN thing))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD caught)
            (SBAR
              (S
                (NP
                  (NP (NN sight))
                  (PP (IN of)))
                (VP (VBD was)
                  (NP
                    (NP (DT a) (JJ curious) (NN bonnet))
                    (, ,)
                    (PP (IN like)
                      (NP (DT a) (JJ black) (NN coal-scuttle))))
                  (ADVP
                    (ADVP (RB upside) (RB down))
                    (PRN (, ,)
                      (PP (IN inside)
                        (WHNP (WDT which)))
                      (, ,))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP it))
                        (VP (VBD turned)
                          (NP (PRP$ its) (NN front))
                          (PP (IN towards)
                            (NP (PRP him))))))))))))))
    (, ,)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD saw)
          (NP
            (NP (DT a) (JJ close-fitting) (NN widow) (POS 's))
            (NN cap)))
        (, ,)
        (CC and)
        (ADVP (RB inside))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (NN kind))
              (ADJP (JJ old)))
            (VP (VBP face))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB have)
              (VP (VBN looked)
                (ADVP (RB still))
                (ADVP (RBR further)))))))
      (, ,)
      (NP (PRP he))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN seen)
            (S
              (NP (DT a) (NN kind))
              (ADJP (JJ young) (NN soul)
                (PP (IN inside)
                  (NP (DT the) (NN kind) (JJ old) (NN face)))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, first-2)
dep(saw-32, thing-3)
nsubj(caught-5, he-4)
rcmod(thing-3, caught-5)
nsubj(bonnet-11, sight-6)
prep(sight-6, of-7)
cop(bonnet-11, was-8)
det(bonnet-11, a-9)
amod(bonnet-11, curious-10)
ccomp(caught-5, bonnet-11)
det(coal-scuttle-16, a-14)
amod(coal-scuttle-16, black-15)
prep_like(bonnet-11, coal-scuttle-16)
advmod(down-18, upside-17)
advmod(bonnet-11, down-18)
dep(down-18, inside-20)
pobj(inside-20, which-21)
advmod(turned-25, when-23)
nsubj(turned-25, it-24)
advcl(down-18, turned-25)
poss(front-27, its-26)
dobj(turned-25, front-27)
prep_towards(turned-25, him-29)
nsubj(saw-32, he-31)
root(ROOT-0, saw-32)
det(widow-35, a-33)
amod(widow-35, close-fitting-34)
poss(cap-37, widow-35)
dobj(saw-32, cap-37)
advmod(face-45, inside-40)
mark(face-45, that-41)
det(kind-43, a-42)
nsubj(face-45, kind-43)
amod(kind-43, old-44)
dep(saw-32, face-45)
mark(looked-52, if-48)
nsubj(looked-52, he-49)
aux(looked-52, could-50)
aux(looked-52, have-51)
advcl(seen-59, looked-52)
advmod(looked-52, still-53)
advmod(looked-52, further-54)
nsubj(seen-59, he-56)
aux(seen-59, would-57)
aux(seen-59, have-58)
conj_and(saw-32, seen-59)
det(kind-61, a-60)
nsubj(soul-63, kind-61)
dep(soul-63, young-62)
xcomp(seen-59, soul-63)
det(face-68, the-65)
nn(face-68, kind-66)
amod(face-68, old-67)
prep_inside(soul-63, face-68)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD smiled)
      (ADVP (RB sweetly))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP she))
          (VP
            (VP (VBD saw)
              (NP (PRP him)))
            (, ,)
            (CC but)
            (VP (VBD was)
              (ADJP (RB too) (JJ tired)
                (S
                  (VP (TO to)
                    (VP (VB take)
                      (NP
                        (NP (DT any) (JJ further) (NN notice))
                        (PP (IN of)
                          (NP (PRP him))))
                      (SBAR (IN until)
                        (S
                          (NP (PRP she))
                          (VP (VBD had)
                            (VP (VBN had)
                              (NP (NN tea)))))))))))))))
    (. .)))

nsubj(smiled-2, She-1)
root(ROOT-0, smiled-2)
advmod(smiled-2, sweetly-3)
advmod(saw-6, when-4)
nsubj(saw-6, she-5)
nsubj(tired-12, she-5)
nsubj(take-14, she-5)
advcl(smiled-2, saw-6)
dobj(saw-6, him-7)
cop(tired-12, was-10)
advmod(tired-12, too-11)
advcl(smiled-2, tired-12)
conj_but(saw-6, tired-12)
aux(take-14, to-13)
xcomp(tired-12, take-14)
det(notice-17, any-15)
amod(notice-17, further-16)
dobj(take-14, notice-17)
prep_of(notice-17, him-19)
mark(had-23, until-20)
nsubj(had-23, she-21)
aux(had-23, had-22)
advcl(take-14, had-23)
dobj(had-23, tea-24)

(ROOT
  (S
    (PP (IN During)
      (NP
        (NP (DT that) (NNP meal) (NNP Willie))
        (VP (VBN devoted)
          (NP (PRP himself))
          (PP (TO to)
            (NP
              (NP (DT a) (JJ silent) (NN waiting))
              (PP (IN upon)
                (NP (PRP her))))))))
    (, ,)
    (S
      (VP
        (VP (VBG watching))
        (CC and)
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB anticipate)
                (NP (PRP her) (DT every))))))))
    (VP (VBP want))
    (. .)))

det(Willie-4, that-2)
nn(Willie-4, meal-3)
prep_during(want-21, Willie-4)
vmod(Willie-4, devoted-5)
dobj(devoted-5, himself-6)
det(waiting-10, a-8)
amod(waiting-10, silent-9)
prep_to(devoted-5, waiting-10)
prep_upon(waiting-10, her-12)
csubj(want-21, watching-14)
conj_and(watching-14, trying-16)
csubj(want-21, trying-16)
aux(anticipate-18, to-17)
xcomp(trying-16, anticipate-18)
dobj(anticipate-18, her-19)
dep(her-19, every-20)
root(ROOT-0, want-21)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP she))
        (VP (VBD had)
          (VP (VBN eaten)
            (NP
              (NP
                (NP (DT a) (JJ little) (NN bread)
                  (CC and)
                  (NN butter))
                (CC and)
                (NP (DT an) (NN egg)))
              (, ,)
              (CC and)
              (NP
                (NP
                  (ADJP (JJ drunk)
                    (NP (CD two)))
                  (NNS cups))
                (PP (IN of)
                  (NP (NN tea)))))))))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (VBD lay)
        (PRT (RP back))
        (PP (IN in)
          (NP
            (NP (PRP$ her) (JJ own) (JJ easy) (NN chair))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD had)
                  (VP (VBN been)
                    (VP (VBN placed)
                      (PP (IN for)
                        (NP (PRP her))))))))))
        (PP (IN by)
          (NP
            (NP (DT the) (NN side))
            (PP (IN of)
              (NP (DT the) (NN parlour) (NN fire))))))
      (, ,)
      (CC and)
      (VP (VBD fell)
        (ADVP (RB fast)
          (ADJP (RB asleep)))
        (PP (IN for)
          (NP (CD ten) (NNS minutes)))
        (, ,)
        (VP (VBG breathing)
          (ADVP
            (ADVP (RB so) (RB gently))
            (SBAR (IN that)
              (S
                (NP (NNP Willie))
                (VP (VBD got)
                  (ADJP (JJ frightened))))))))
      (, ,)
      (CC and)
      (VP (VBD thought)
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBD was)
              (ADJP (JJ dead)))))))
    (. .)))

advmod(eaten-4, When-1)
nsubj(eaten-4, she-2)
aux(eaten-4, had-3)
advcl(lay-22, eaten-4)
det(bread-7, a-5)
amod(bread-7, little-6)
dobj(eaten-4, bread-7)
dobj(eaten-4, butter-9)
conj_and(bread-7, butter-9)
det(egg-12, an-11)
dobj(eaten-4, egg-12)
conj_and(bread-7, egg-12)
amod(cups-17, drunk-15)
dep(drunk-15, two-16)
dobj(eaten-4, cups-17)
conj_and(bread-7, cups-17)
prep_of(cups-17, tea-19)
nsubj(lay-22, she-21)
nsubj(fell-45, she-21)
nsubj(thought-61, she-21)
root(ROOT-0, lay-22)
prt(lay-22, back-23)
poss(chair-28, her-25)
amod(chair-28, own-26)
amod(chair-28, easy-27)
prep_in(lay-22, chair-28)
nsubjpass(placed-33, chair-28)
aux(placed-33, had-31)
auxpass(placed-33, been-32)
rcmod(chair-28, placed-33)
prep_for(placed-33, her-35)
det(side-38, the-37)
prep_by(lay-22, side-38)
det(fire-42, the-40)
nn(fire-42, parlour-41)
prep_of(side-38, fire-42)
conj_and(lay-22, fell-45)
advmod(fell-45, fast-46)
pobj(fast-46, asleep-47)
num(minutes-50, ten-49)
prep_for(fell-45, minutes-50)
dep(fell-45, breathing-52)
advmod(gently-54, so-53)
advmod(breathing-52, gently-54)
mark(frightened-58, that-55)
nsubj(frightened-58, Willie-56)
dep(frightened-58, got-57)
advcl(gently-54, frightened-58)
ccomp(gently-54, frightened-58)
conj_and(lay-22, thought-61)
nsubj(dead-64, she-62)
cop(dead-64, was-63)
ccomp(thought-61, dead-64)

(ROOT
  (S (CC But)
    (ADVP (DT all)
      (PP (IN at)
        (ADVP (RB once))))
    (NP (PRP she))
    (VP
      (VP (VBD opened)
        (S
          (NP (PRP$ her) (NNS eyes))
          (ADJP (JJ wide))))
      (, ,)
      (CC and)
      (VP (VBD made)
        (NP (DT a) (NN sign))
        (PP (TO to)
          (NP (PRP him)))
        (S
          (VP (TO to)
            (VP (VB come)
              (PP (TO to)
                (NP (PRP her))))))))
    (. .)))

advmod(opened-6, all-2)
prep(all-2, at-3)
pcomp(at-3, once-4)
nsubj(opened-6, she-5)
nsubj(made-12, she-5)
root(ROOT-0, opened-6)
poss(eyes-8, her-7)
nsubj(wide-9, eyes-8)
xcomp(opened-6, wide-9)
conj_and(opened-6, made-12)
det(sign-14, a-13)
dobj(made-12, sign-14)
prep_to(made-12, him-16)
aux(come-18, to-17)
vmod(made-12, come-18)
prep_to(come-18, her-20)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Sit)
        (ADVP (RB down) (RB there))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said) (, ,)
      (S
        (VP (VBG pushing)
          (NP (DT a) (JJ little) (NN footstool))
          (PP (IN towards)
            (NP (PRP him))))))
    (. .)))

ccomp(said-8, Sit-2)
advmod(there-4, down-3)
advmod(Sit-2, there-4)
nsubj(said-8, she-7)
root(ROOT-0, said-8)
xcomp(said-8, pushing-10)
det(footstool-13, a-11)
amod(footstool-13, little-12)
dobj(pushing-10, footstool-13)
prep_towards(pushing-10, him-15)

(ROOT
  (S
    (NP (NNP Willie))
    (VP
      (VP (VBD obeyed))
      (, ,)
      (CC and)
      (VP (VBD sat)
        (S
          (VP (VBG looking)
            (PRT (RP up))
            (PP (IN in)
              (NP (PRP$ her) (NN face)))))))
    (. .)))

nsubj(obeyed-2, Willie-1)
nsubj(sat-5, Willie-1)
root(ROOT-0, obeyed-2)
conj_and(obeyed-2, sat-5)
xcomp(sat-5, looking-6)
prt(looking-6, up-7)
poss(face-10, her-9)
prep_in(looking-6, face-10)

(ROOT
  (S (`` ``)
    (ADVP (RB So))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP she))
        (VP (VBD said)))
      (, ,))
    (`` ``)
    (NP (PRP you))
    (VP (VBP 're)
      (NP
        (NP (DT the) (JJ little) (NN man))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB do)
                (NP (NN everything))))))))
    (. ?) ('' '')))

advmod(man-13, So-2)
nsubj(said-6, she-5)
parataxis(man-13, said-6)
nsubj(man-13, you-9)
cop(man-13, 're-10)
det(man-13, the-11)
amod(man-13, little-12)
root(ROOT-0, man-13)
nsubj(do-16, man-13)
aux(do-16, can-15)
rcmod(man-13, do-16)
dobj(do-16, everything-17)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH No))
      (, ,)
      (NP (NN grannie)))
    (, ,) ('' '')
    (VP (VBD answered)
      (NP (NNP Willie))
      (, ,)
      (S
        (VP (VBG laughing))))
    (. .)))

discourse(grannie-4, No-2)
dep(answered-7, grannie-4)
root(ROOT-0, answered-7)
dobj(answered-7, Willie-8)
vmod(answered-7, laughing-10)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP wish)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD could))))))
    (: ;)
    (S (CC but)
      (NP (PRP I))
      (VP (VBP am)
        (ADVP (RB only))
        (VP (VBG learning)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (DT a) (JJ few) (NNS things))))))))
    (: ;)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ 's) (RB not)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (PRP them)))
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD can)
                (VP (VB do)
                  (ADVP (RB right) (RB yet)))))))))
    (. .) ('' '')))

nsubj(wish-3, I-2)
root(ROOT-0, wish-3)
nsubj(could-5, I-4)
ccomp(wish-3, could-5)
cc(learning-11, but-7)
nsubj(learning-11, I-8)
nsubj(do-13, I-8)
aux(learning-11, am-9)
advmod(learning-11, only-10)
conj_and(wish-3, learning-11)
aux(do-13, to-12)
xcomp(learning-11, do-13)
det(things-16, a-14)
amod(things-16, few-15)
dobj(do-13, things-16)
expl('s-20, there-19)
conj_and(wish-3, 's-20)
neg('s-20, not-21)
nsubj('s-20, one-22)
prep_of(one-22, them-24)
nsubj(do-27, I-25)
aux(do-27, can-26)
rcmod(one-22, do-27)
advmod(yet-29, right-28)
advmod(do-27, yet-29)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP know)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP they))
                (VP (VBP call)
                  (NP (PRP you)))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(know-4, you-3)
ccomp(Do-2, know-4)
dobj(call-7, what-5)
nsubj(call-7, they-6)
ccomp(know-4, call-7)
dobj(call-7, you-8)

(ROOT
  (SINV (`` ``)
    (S
      (NP
        (NP (DT The) (NNS boys))
        (PP (IN at)
          (NP (NN school))))
      (VP (VBP call)
        (S
          (NP (PRP me))
          (NP (NNP Six-fingered) (NNP Jack)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

det(boys-3, The-2)
nsubj(call-6, boys-3)
prep_at(boys-3, school-5)
ccomp(said-12, call-6)
nsubj(Jack-9, me-7)
nn(Jack-9, Six-fingered-8)
xcomp(call-6, Jack-9)
root(ROOT-0, said-12)
nsubj(said-12, Willie-13)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ !))
    ('' '')))

expl(!-3, There-2)

(ROOT
  (S
    (VP (VBD said)
      (NP (PRP$ his) (NN grandmother)))
    (. .)))

root(ROOT-0, said-1)
poss(grandmother-3, his-2)
dobj(said-1, grandmother-3)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD told)
      (NP (PRP you))
      (ADVP (RB so)))
    (. .) ('' '')))

nsubj(told-3, I-2)
root(ROOT-0, told-3)
dobj(told-3, you-4)
advmod(told-3, so-5)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ glad)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (ADVP (RB only))
                (NP (DT a) (NN nickname))
                (, ,)
                (ADVP (RB grannie))))))))
    (: ;)
    (S (CC but)
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBD were) (RB n't))))
      (, ,)
      (NP (PRP it))
      (VP (MD would)
        (ADVP (RB soon))
        (VP (VB be)
          (NP (CD one))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (ADJP (JJ certain)
                  (SBAR
                    (S
                      (NP
                        (NP (DT the) (NN finger))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBD came)
                              (SBAR (IN after)
                                (S
                                  (NP (DT the) (JJ little) (NN one))
                                  (VP (MD would)
                                    (VP (VB be)
                                      (ADJP (RB so) (JJ much)
                                        (PP (IN in)
                                          (NP
                                            (NP (DT the) (NN way))
                                            (SBAR
                                              (S
                                                (NP (PRP it))
                                                (VP (MD would)
                                                  (ADVP (RB soon))
                                                  (VP (VB get))))))))))))))))
                      (VP (VBD cut)
                        (PRT (RP off))))))))))))
    (. .) ('' '')))

nsubj(glad-4, I-2)
cop(glad-4, 'm-3)
root(ROOT-0, glad-4)
nsubj(nickname-9, it-5)
cop(nickname-9, 's-6)
advmod(nickname-9, only-7)
det(nickname-9, a-8)
ccomp(glad-4, nickname-9)
advmod(nickname-9, grannie-11)
cc(one-23, but-13)
mark(were-16, if-14)
nsubj(were-16, it-15)
advcl(one-23, were-16)
neg(were-16, n't-17)
nsubj(one-23, it-19)
aux(one-23, would-20)
advmod(one-23, soon-21)
cop(one-23, be-22)
parataxis(glad-4, one-23)
mark(certain-28, for-25)
nsubj(certain-28, I-26)
cop(certain-28, 'm-27)
advcl(one-23, certain-28)
det(finger-30, the-29)
nsubj(came-32, finger-30)
nsubj(cut-48, finger-30)
rcmod(finger-30, came-32)
mark(much-40, after-33)
det(one-36, the-34)
amod(one-36, little-35)
nsubj(much-40, one-36)
aux(much-40, would-37)
cop(much-40, be-38)
advmod(much-40, so-39)
advcl(came-32, much-40)
det(way-43, the-42)
prep_in(much-40, way-43)
nsubj(get-47, it-44)
aux(get-47, would-45)
advmod(get-47, soon-46)
rcmod(way-43, get-47)
ccomp(certain-28, cut-48)
prt(cut-48, off-49)

(ROOT
  (S (`` ``)
    (NP (NNP Anyhow))
    (, ,)
    (S
      (VP (VBG supposing)
        (S
          (NP (PRP you))
          (NP
            (NP
              (QP (RB only) (PDT half)))
            (PP (IN as)
              (NP (JJ clever) (DT a) (NN fellow)))))
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBP pass)
              (PP (IN for)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB try)
            (NP (PRP you))))))
    (. .)))

nsubj(want-18, Anyhow-2)
nsubj(try-20, Anyhow-2)
vmod(want-18, supposing-4)
nsubj(half-7, you-5)
quantmod(half-7, only-6)
xcomp(supposing-4, half-7)
amod(fellow-11, clever-9)
det(fellow-11, a-10)
prep_as(half-7, fellow-11)
mark(pass-14, as-12)
nsubj(pass-14, you-13)
advcl(supposing-4, pass-14)
prep(pass-14, for-15)
nsubj(want-18, I-17)
nsubj(try-20, I-17)
root(ROOT-0, want-18)
aux(try-20, to-19)
xcomp(want-18, try-20)
dobj(try-20, you-21)

(ROOT
  (SQ (VBP Have)
    (NP
      (NP (PRP you))
      (NP (DT any)))
    (VP (VBN objection)
      (PP (TO to)
        (NP (NN service))))
    (. ?)))

aux(objection-4, Have-1)
nsubj(objection-4, you-2)
dep(you-2, any-3)
root(ROOT-0, objection-4)
prep_to(objection-4, service-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB like)
          (S
            (VP (TO to)
              (VP (VB hire)
                (NP (PRP you))
                (PP (IN for)
                  (NP
                    (NP (PRP$ my) (NN servant))
                    (: --)
                    (NP (PRP$ my) (JJ own) (JJ special) (NN servant))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP understand))
    (. .) ('' '')))

nsubj(like-3, I-1)
nsubj(hire-5, I-1)
aux(like-3, should-2)
ccomp(understand-17, like-3)
aux(hire-5, to-4)
xcomp(like-3, hire-5)
dobj(hire-5, you-6)
poss(servant-9, my-8)
prep_for(hire-5, servant-9)
poss(servant-14, my-11)
amod(servant-14, own-12)
amod(servant-14, special-13)
dep(servant-9, servant-14)
nsubj(understand-17, you-16)
root(ROOT-0, understand-17)

(ROOT
  (S (`` ``)
    (ADVP (DT All) (NN right))
    (, ,)
    (S
      (NP (NN grannie))
      (: ;)
      (ADVP (RB here))
      (NP (PRP I))
      (VP (VBP am)))
    (. !) ('' '')))

det(right-3, All-2)
advmod(am-9, right-3)
nsubj(am-9, grannie-5)
advmod(am-9, here-7)
nsubj(am-9, I-8)
root(ROOT-0, am-9)

(ROOT
  (FRAG
    (ADJP (JJ cried) (JJ Willie))
    (, ,)
    (VP (VBG jumping)
      (PRT (RP up)))
    (. .)))

amod(Willie-2, cried-1)
root(ROOT-0, Willie-2)
dep(Willie-2, jumping-4)
prt(jumping-4, up-5)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBD shall)
      (NP (PRP I))
      (VP (VB do)
        (ADVP (RB first))))
    (. ?) ('' '')))

dobj(do-5, What-2)
aux(do-5, shall-3)
nsubj(do-5, I-4)
root(ROOT-0, do-5)
advmod(do-5, first-6)

(ROOT
  (S (`` ``)
    (VP
      (VP (VB Sit)
        (ADVP (RB down) (RB again) (RB instantly)))
      (, ,)
      (CC and)
      (VP (VB wait)
        (SBAR (IN till)
          (S
            (NP (PRP we))
            (VP (VBP 've)
              (VP (VBN finished)
                (NP (DT the) (NN bargain))))))))
    (. .)))

root(ROOT-0, Sit-2)
advmod(instantly-5, down-3)
advmod(instantly-5, again-4)
advmod(Sit-2, instantly-5)
conj_and(Sit-2, wait-8)
mark(finished-12, till-9)
nsubj(finished-12, we-10)
aux(finished-12, 've-11)
advcl(wait-8, finished-12)
det(bargain-14, the-13)
dobj(finished-12, bargain-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (ADVP (RB first))
      (VP (VB have)
        (S
          (NP (PRP you))
          (VP (VB understand)
            (SBAR (IN that)
              (S
                (SBAR (IN though)
                  (S
                    (NP (PRP I))
                    (VP (VBP do) (RB n't)
                      (VP (VB want)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (ADJP (JJ hard)
                                (PP (IN upon)
                                  (NP (PRP you)))))))))))
                (, ,)
                (NP (PRP you))
                (VP (MD must)
                  (VP (VB come)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP I))
                        (VP
                          (VP (VBP call)
                            (NP (PRP you)))
                          (, ,)
                          (CC and)
                          (VP (VBP do)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (PRP I))
                                (VP (VBP tell)
                                  (NP (PRP you)))))))))))))))))
    (. .) ('' '')))

nsubj(have-4, I-1)
aux(have-4, must-2)
advmod(have-4, first-3)
root(ROOT-0, have-4)
nsubj(understand-6, you-5)
ccomp(have-4, understand-6)
mark(come-21, that-7)
mark(want-12, though-8)
nsubj(want-12, I-9)
nsubj(hard-15, I-9)
aux(want-12, do-10)
neg(want-12, n't-11)
advcl(come-21, want-12)
aux(hard-15, to-13)
cop(hard-15, be-14)
xcomp(want-12, hard-15)
prep_upon(hard-15, you-17)
nsubj(come-21, you-19)
aux(come-21, must-20)
ccomp(understand-6, come-21)
advmod(call-24, when-22)
nsubj(call-24, I-23)
nsubj(do-28, I-23)
advcl(come-21, call-24)
dobj(call-24, you-25)
advcl(come-21, do-28)
conj_and(call-24, do-28)
dobj(tell-31, what-29)
nsubj(tell-31, I-30)
ccomp(do-28, tell-31)
dobj(tell-31, you-32)

(ROOT
  (S (`` ``)
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (VP (VBP grannie))
    (. .)))

prep_of(grannie-5, course-3)
root(ROOT-0, grannie-5)

(ROOT
  (S
    (S
      (ADVP (RB Only))
      (NP (PRP I))
      (VP
        (VP (MD ca) (RB n't))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (PP (IN at)
                (NP (NN school))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .) ('' '')))

advmod(ca-3, Only-1)
nsubj(ca-3, I-2)
ccomp(know-12, ca-3)
neg(ca-3, n't-4)
advmod('m-7, when-5)
nsubj('m-7, I-6)
advcl(ca-3, 'm-7)
prep_at('m-7, school-9)
nsubj(know-12, you-11)
root(ROOT-0, know-12)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN told)
                (NP (DT that))))))))
    (. .)))

nsubj(want-5, I-2)
nsubjpass(told-8, I-2)
aux(want-5, do-3)
neg(want-5, n't-4)
root(ROOT-0, want-5)
aux(told-8, to-6)
auxpass(told-8, be-7)
xcomp(want-5, told-8)
dobj(told-8, that-9)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (DT a) (NN tyrant)))))))
    (. .)))

cc(going-5, And-1)
nsubj(going-5, I-2)
nsubj(tyrant-9, I-2)
aux(going-5, 'm-3)
neg(going-5, not-4)
root(ROOT-0, going-5)
aux(tyrant-9, to-6)
cop(tyrant-9, be-7)
det(tyrant-9, a-8)
xcomp(going-5, tyrant-9)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBD had)
      (NP
        (NP (DT no) (NN idea))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD were)
              (NP (PDT such) (DT a) (NN silly)))))))
    (. !)))

cc(had-3, But-1)
nsubj(had-3, I-2)
root(ROOT-0, had-3)
neg(idea-5, no-4)
dobj(had-3, idea-5)
nsubj(silly-10, you-6)
cop(silly-10, were-7)
predet(silly-10, such-8)
det(silly-10, a-9)
rcmod(idea-5, silly-10)

(ROOT
  (S
    (PP (IN For)
      (NP (PDT all) (PRP$ your) (NNS cleverness)))
    (, ,)
    (NP (PRP you))
    (VP (VBP 've)
      (ADVP (RB positively))
      (VP
        (ADVP (RB never))
        (VBN asked)
        (NP (PRP me))
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD wages)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD would)
                    (VP (VB give)
                      (NP (PRP you)))))))))))
    (. .) ('' '')))

predet(cleverness-4, all-2)
poss(cleverness-4, your-3)
prep_for(asked-10, cleverness-4)
nsubj(asked-10, you-6)
aux(asked-10, 've-7)
advmod(asked-10, positively-8)
neg(asked-10, never-9)
root(ROOT-0, asked-10)
dobj(asked-10, me-11)
nsubj(wages-13, what-12)
dep(asked-10, wages-13)
nsubj(give-16, I-14)
aux(give-16, would-15)
ccomp(wages-13, give-16)
dobj(give-16, you-17)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (NP (DT any) (NNS wages))
        (, ,)
        (ADVP (RB grannie))))
    (. .)))

nsubj(want-4, I-1)
aux(want-4, do-2)
neg(want-4, n't-3)
root(ROOT-0, want-4)
det(wages-6, any-5)
dobj(want-4, wages-6)
advmod(want-4, grannie-8)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBD _)
          (PP (IN like)
            (NP (NNP _)))
          (S
            (VP (TO to)
              (VP (VB do)
                (NP
                  (NP (NNS things))
                  (PP (IN for)
                    (NP (NNS people)))))))))
      (: ;)
      (CC and)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (NP (PRP$ my) (RB very) (JJ own) (NN grandmother))
          (, ,)
          (PP (IN besides)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .) ('' '')))

nsubj(_-2, I-1)
nsubj(do-6, I-1)
ccomp(know-22, _-2)
prep_like(_-2, _-4)
aux(do-6, to-5)
xcomp(_-2, do-6)
dobj(do-6, things-7)
prep_for(things-7, people-9)
nsubj(grandmother-17, you-12)
cop(grandmother-17, 're-13)
poss(grandmother-17, my-14)
advmod(grandmother-17, very-15)
amod(grandmother-17, own-16)
conj_and(_-2, grandmother-17)
ccomp(know-22, grandmother-17)
prep(grandmother-17, besides-19)
nsubj(know-22, you-21)
root(ROOT-0, know-22)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD must)
            (VP (VB settle)
              (NP (PRP$ your) (NNS wages))
              (PP (IN for)
                (NP (PRP you))))))))
    (. .)))

discourse(suppose-5, Well-2)
nsubj(suppose-5, I-4)
root(ROOT-0, suppose-5)
nsubj(settle-8, I-6)
aux(settle-8, must-7)
ccomp(suppose-5, settle-8)
poss(wages-10, your-9)
dobj(settle-8, wages-10)
prep_for(settle-8, you-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean)
      (S
        (VP (TO to)
          (VP (VB pay)
            (NP (PRP you))
            (PP (IN by)
              (NP (DT the) (NN job)))))))
    (. .)))

nsubj(mean-2, I-1)
nsubj(pay-4, I-1)
root(ROOT-0, mean-2)
aux(pay-4, to-3)
xcomp(mean-2, pay-4)
dobj(pay-4, you-5)
det(job-8, the-7)
prep_by(pay-4, job-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT an) (JJ odd) (NN arrangement))
          (PP (IN for)
            (NP (DT a) (NN servant))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD will)
        (VP (VB suit)
          (NP (PRP me))
          (ADVP (RBS best)))))
    (. .)))

nsubj(arrangement-5, It-1)
cop(arrangement-5, 's-2)
det(arrangement-5, an-3)
amod(arrangement-5, odd-4)
root(ROOT-0, arrangement-5)
det(servant-8, a-7)
prep_for(arrangement-5, servant-8)
nsubj(suit-13, it-11)
aux(suit-13, will-12)
conj_but(arrangement-5, suit-13)
dobj(suit-13, me-14)
advmod(suit-13, best-15)

(ROOT
  (S (CC And)
    (SBAR (IN as)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB ask)
            (NP (DT any))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP need) (RB n't)
      (VP (VB pay)
        (NP (PRP you))
        (ADVP
          (ADVP (RBR more))
          (SBAR (IN than)
            (S
              (NP (PRP I))
              (VP (VBP like)
                (NP (PRP myself))))))))
    (. .) ('' '')))

cc(need-10, And-1)
mark(ask-6, as-2)
nsubj(ask-6, you-3)
aux(ask-6, do-4)
neg(ask-6, n't-5)
advcl(need-10, ask-6)
dobj(ask-6, any-7)
nsubj(need-10, I-9)
root(ROOT-0, need-10)
neg(need-10, n't-11)
dep(need-10, pay-12)
dobj(pay-12, you-13)
advmod(pay-12, more-14)
mark(like-17, than-15)
nsubj(like-17, I-16)
advcl(more-14, like-17)
dobj(like-17, myself-18)

(ROOT
  (S (`` ``)
    (ADVP (RB Certainly) (RB not))
    (, ,)
    (VP (VBP grannie))
    (. .)))

advmod(not-3, Certainly-2)
neg(grannie-5, not-3)
root(ROOT-0, grannie-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB quite) (VBN satisfied)))
    (. .) ('' '')))

nsubjpass(satisfied-4, I-1)
auxpass(satisfied-4, 'm-2)
advmod(satisfied-4, quite-3)
root(ROOT-0, satisfied-4)

(ROOT
  (S (`` ``)
    (ADVP (RB Meantime))
    (, ,)
    (NP
      (NP (DT no) (NN engagement))
      (PP (IN of)
        (NP (DT a) (NN servant))))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN counted)
              (ADJP (JJ complete))
              (PP (IN without)
                (NP (NN earnest))))))))
    (. .) ('' '')))

advmod(ought-9, Meantime-2)
neg(engagement-5, no-4)
nsubj(ought-9, engagement-5)
nsubjpass(counted-12, engagement-5)
det(servant-8, a-7)
prep_of(engagement-5, servant-8)
root(ROOT-0, ought-9)
aux(counted-12, to-10)
auxpass(counted-12, be-11)
xcomp(ought-9, counted-12)
acomp(counted-12, complete-13)
prep_without(counted-12, earnest-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (RB quite)
          (PP (IN in)
            (NP (NN earnest))))
        (, ,)
        (ADJP (JJ grannie))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Willie))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD did) (RB not)
            (VP (VB know)
              (NP
                (NP (DT the) (NN meaning))
                (PP (IN of)
                  (NP (DT the) (NN word))))
              (PP (IN as)
                (NP
                  (NP (PRP$ his) (JJ new) (NN mistress))
                  (VP (VBN used)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(quite-4, I-2)
cop(quite-4, 'm-3)
ccomp(said-11, quite-4)
prep_in(quite-4, earnest-6)
acomp(quite-4, grannie-8)
root(ROOT-0, said-11)
nsubj(said-11, Willie-12)
nsubj(know-17, Willie-12)
aux(know-17, did-15)
neg(know-17, not-16)
rcmod(Willie-12, know-17)
det(meaning-19, the-18)
dobj(know-17, meaning-19)
det(word-22, the-21)
prep_of(meaning-19, word-22)
poss(mistress-26, his-24)
amod(mistress-26, new-25)
prep_as(know-17, mistress-26)
vmod(mistress-26, used-27)
dobj(used-27, it-28)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (DT all))
    (VP (VBD laughed))
    (. .)))

nsubj(laughed-3, They-1)
advmod(laughed-3, all-2)
root(ROOT-0, laughed-3)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ 's)
                (ADJP (JJ funny))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (, ,)
    (S
      (VP (VBG laughing)
        (ADVP (RB too))
        (, ,)
        (ADVP (RB however))))
    (. .)))

nsubj(see-5, I-2)
aux(see-5, do-3)
neg(see-5, n't-4)
ccomp(said-11, see-5)
nsubj(funny-8, what-6)
cop(funny-8, 's-7)
ccomp(see-5, funny-8)
root(ROOT-0, said-11)
nsubj(said-11, Willie-12)
vmod(said-11, laughing-14)
advmod(laughing-14, too-15)
advmod(laughing-14, however-17)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP they))
        (VP (VBD explained)
          (PP (TO to)
            (NP (PRP him)))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (JJ _) (JJ earnest) (NNS _))
              (VP (VBD meant)))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP he))
    (VP (VBD laughed)
      (PP
        (PP (IN with)
          (NP (NN understanding)))
        (, ,)
        (CONJP (RB as) (RB well) (IN as))
        (PP (IN with)
          (NP (JJ good) (NN will)))))
    (. .)))

cc(laughed-15, But-1)
advmod(explained-4, when-2)
nsubj(explained-4, they-3)
advcl(laughed-15, explained-4)
prep_to(explained-4, him-6)
dobj(meant-11, what-7)
amod(_-10, _-8)
amod(_-10, earnest-9)
nsubj(meant-11, _-10)
ccomp(explained-4, meant-11)
advmod(he-14, then-13)
nsubj(laughed-15, he-14)
root(ROOT-0, laughed-15)
prep_with(laughed-15, understanding-17)
amod(will-24, good-23)
prep_with(laughed-15, will-24)
conj_and(understanding-17, will-24)

(ROOT
  (S (`` ``)
    (ADVP (RB So))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP$ his) (NN grandmother))
        (VP (VBD went)
          (PRT (RP on))))
      (, ,) (`` ``))
    (NP (PRP I))
    (VP (MD will)
      (VP (VB give)
        (NP (PRP you))
        (NP
          (NP (NN earnest))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (PRN (, ,)
                (S
                  (NP (PRP you))
                  (VP (VBP know)))
                (, ,))
              (VP (VBZ binds)
                (S
                  (NP (PRP you))
                  (NP (PRP$ my) (NN servant)))))))))
    (. .)))

advmod(give-13, So-2)
poss(grandmother-6, his-5)
nsubj(went-7, grandmother-6)
parataxis(give-13, went-7)
prt(went-7, on-8)
nsubj(give-13, I-11)
aux(give-13, will-12)
root(ROOT-0, give-13)
iobj(give-13, you-14)
dobj(give-13, earnest-15)
nsubj(binds-22, earnest-15)
nsubj(know-20, you-19)
parataxis(binds-22, know-20)
rcmod(earnest-15, binds-22)
nsubj(servant-25, you-23)
poss(servant-25, my-24)
xcomp(binds-22, servant-25)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP (WRB how) (JJ long)))
    (, ,)
    (VP (VBZ Willie))
    (. ?) ('' '')))

cc(Willie-6, But-1)
advmod(long-4, how-3)
prep_for(Willie-6, long-4)
root(ROOT-0, Willie-6)

(ROOT
  (S (`` ``)
    (ADVP (RB Till))
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP (JJ tired)
        (PP (IN of)
          (NP (PRP me))))
      (, ,)
      (ADJP (JJ grannie)))
    (. .)))

advmod(tired-5, Till-2)
nsubj(tired-5, you-3)
cop(tired-5, 're-4)
root(ROOT-0, tired-5)
prep_of(tired-5, me-7)
acomp(tired-5, grannie-9)

(ROOT
  (S
    (ADVP (RB Only))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP know)))
      (, ,))
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (NP
          (NP (NN papa))
          (CC and)
          (NP
            (NP (NNP mamma) (POS 's))
            (NN servant)))
        (ADVP (RB first))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD may)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB arrange)
                (PP (IN with)
                  (NP (PRP them)))
                (ADVP (RB sometimes))
                (: ;)
                (PP (IN for)
                  (SBARQ
                    (WHNP (WP what))
                    (SQ (MD should)
                      (NP (PRP I))
                      (VP (VB do)
                        (SBAR (IN if)
                          (S
                            (NP (PRP you))
                            (VP (VBD were)
                              (S (RB all)
                                (VP (TO to)
                                  (VP (VB want)
                                    (NP (PRP me))
                                    (PP (IN at)
                                      (NP (RB once)))))))))))
                    (. ?) ('' '')))))))))))

advmod(papa-8, Only-1)
nsubj(know-4, you-3)
dep(papa-8, know-4)
nsubj(papa-8, I-6)
cop(papa-8, 'm-7)
root(ROOT-0, papa-8)
poss(servant-12, mamma-10)
conj_and(papa-8, servant-12)
advmod(papa-8, first-13)
nsubj(have-18, you-16)
nsubj(arrange-20, you-16)
aux(have-18, may-17)
conj_and(papa-8, have-18)
aux(arrange-20, to-19)
xcomp(have-18, arrange-20)
prep_with(arrange-20, them-22)
advmod(arrange-20, sometimes-23)
prep(arrange-20, for-25)
dobj(do-29, what-26)
aux(do-29, should-27)
nsubj(do-29, I-28)
dep(for-25, do-29)
mark(were-32, if-30)
nsubj(were-32, you-31)
nsubj(want-35, you-31)
advcl(do-29, were-32)
advmod(want-35, all-33)
aux(want-35, to-34)
xcomp(were-32, want-35)
dobj(want-35, me-36)
prep(want-35, at-37)
pobj(at-37, once-38)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (MD 'll)
      (ADVP (RB easily))
      (VP (VB manage)
        (NP (DT that))))
    (. .)))

nsubj(manage-5, We-2)
aux(manage-5, 'll-3)
advmod(manage-5, easily-4)
root(ROOT-0, manage-5)
dobj(manage-5, that-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB arrange)
        (PP (IN with)
          (NP (PRP them)))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBP say))))))
    (. .)))

nsubj(arrange-3, I-1)
aux(arrange-3, 'll-2)
root(ROOT-0, arrange-3)
prep_with(arrange-3, them-5)
mark(say-9, as-7)
nsubj(say-9, you-8)
advcl(arrange-3, say-9)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (, ,)
    (NP (RB here))
    (VP (VBZ 's)
      (NP (PRP$ your) (NN earnest)))
    (. .) ('' '')))

cc(earnest-7, And-1)
advmod(earnest-7, now-2)
nsubj(earnest-7, here-4)
cop(earnest-7, 's-5)
poss(earnest-7, your-6)
root(ROOT-0, earnest-7)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP she))
        (VP (VBD spoke))))
    (, ,)
    (NP (PRP she))
    (VP (VBD put)
      (PP (IN into)
        (NP (PRP$ his) (NN hand)))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNP Willie))
          (VP (VBD took)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP (DT a) (NN shilling)))))))))
    (. .)))

mark(spoke-3, As-1)
nsubj(spoke-3, she-2)
advcl(put-6, spoke-3)
nsubj(put-6, she-5)
root(ROOT-0, put-6)
poss(hand-9, his-8)
prep_into(put-6, hand-9)
dobj(took-12, what-10)
nsubj(shilling-16, what-10)
nsubj(took-12, Willie-11)
ccomp(put-6, took-12)
aux(shilling-16, to-13)
cop(shilling-16, be-14)
det(shilling-16, a-15)
xcomp(took-12, shilling-16)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBD glanced)
          (PP (IN at)
            (NP (PRP it))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD found)
      (SBAR
        (S
          (NP (PRP himself))
          (VP (VBN mistaken)))))
    (. .)))

cc(found-9, But-1)
advmod(glanced-4, when-2)
nsubj(glanced-4, he-3)
advcl(found-9, glanced-4)
prep_at(glanced-4, it-6)
nsubj(found-9, he-8)
root(ROOT-0, found-9)
nsubj(mistaken-11, himself-10)
ccomp(found-9, mistaken-11)

(ROOT
  (S
    (S (`` ``)
      (S
        (VP (VB Thank)
          (NP (PRP you))))
      (, ,)
      (VP (VBP grannie)
        (PRN (, ,) ('' '')
          (S
            (NP (PRP he))
            (VP (VBD said) (, ,)
              (S
                (VP (VBG trying)
                  (S (RB not)
                    (VP (TO to)
                      (VP (VB show)
                        (S
                          (NP (PRP himself))
                          (ADJP (DT a) (RB little) (JJ disappointed))))))))))
          (, ,))
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBD had)
                (NP
                  (NP (DT another) (NN scheme))
                  (PP (IN in)
                    (NP (PRP$ his) (NN head))))
                (NP (DT some) (NNS days))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN shilling))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (NP
              (NP (NN everything))
              (PP (IN towards)
                (NP (DT that))))))))
    (. .)))

ccomp(grannie-5, Thank-2)
dobj(Thank-2, you-3)
root(ROOT-0, grannie-5)
nsubj(said-9, he-8)
parataxis(grannie-5, said-9)
xcomp(said-9, trying-11)
neg(show-14, not-12)
aux(show-14, to-13)
xcomp(trying-11, show-14)
nsubj(disappointed-18, himself-15)
det(disappointed-18, a-16)
advmod(disappointed-18, little-17)
xcomp(show-14, disappointed-18)
mark(had-23, for-20)
nsubj(had-23, he-21)
aux(had-23, had-22)
advcl(grannie-5, had-23)
det(scheme-25, another-24)
dobj(had-23, scheme-25)
poss(head-28, his-27)
prep_in(scheme-25, head-28)
det(days-30, some-29)
tmod(had-23, days-30)
det(shilling-34, the-33)
nsubj(everything-38, shilling-34)
aux(everything-38, would-35)
aux(everything-38, have-36)
cop(everything-38, been-37)
conj_and(grannie-5, everything-38)
prep_towards(everything-38, that-40)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP know)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (NN grannie))
                (VP (VBZ has)
                  (VP (VBN given)
                    (S
                      (NP (PRP you)))
                    (, ,)
                    (S
                      (NP (NNP Willie)))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(know-4, you-3)
ccomp(Do-2, know-4)
dobj(given-8, what-5)
nsubj(given-8, grannie-6)
aux(given-8, has-7)
ccomp(know-4, given-8)
xcomp(given-8, you-9)
xcomp(given-8, Willie-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (PRP$ his) (NN mother)))
    (. .)))

root(ROOT-0, said-1)
poss(mother-3, his-2)
dobj(said-1, mother-3)

(ROOT
  (FRAG
    (FRAG
      (INTJ (`` ``) (UH Yes))
      (, ,)
      (NP (NN mother)))
    (: --)
    (FRAG
      (NP
        (NP (JJ such))
        (NP (DT a)
          (ADJP (RB pretty) (JJ brass))
          (NN medal)))
      (. !) ('' ''))))

discourse(mother-4, Yes-2)
root(ROOT-0, mother-4)
dep(mother-4, such-6)
det(medal-10, a-7)
advmod(brass-9, pretty-8)
amod(medal-10, brass-9)
dep(such-6, medal-10)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Show)
        (S
          (NP (PRP it))
          (NP (PRP me)))))
    (, ,)
    (VP (VBZ dear))
    (. .)))

ccomp(dear-6, Show-2)
nsubj(me-4, it-3)
xcomp(Show-2, me-4)
root(ROOT-0, dear-6)

(ROOT
  (FRAG
    (INTJ (WRB Why))
    (, ,)
    (NP (NNP Willie))
    (. !)))

discourse(Willie-3, Why-1)
root(ROOT-0, Willie-3)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (DT no) (NN brass) (NN medal))
          (, ,)
          (NP (NN child))
          (: ;))
        (: --)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP (DT a) (JJ sovereign))))))
    (. !) ('' '')))

nsubj(medal-5, it-1)
cop(medal-5, 's-2)
neg(medal-5, no-3)
nn(medal-5, brass-4)
root(ROOT-0, medal-5)
appos(medal-5, child-7)
nsubj(sovereign-13, it-10)
cop(sovereign-13, 's-11)
det(sovereign-13, a-12)
dep(medal-5, sovereign-13)

(ROOT
  (S (`` ``)
    (VP (VB No-o-o-o))
    (. !)))

root(ROOT-0, No-o-o-o-2)

(ROOT
  (S
    (VP (VBZ Is)
      (NP (PRP it)))
    (. ?)))

cop(it-2, Is-1)
root(ROOT-0, it-2)

(ROOT
  (S
    (NP (NNP O))
    (VP (VBP grannie))
    (. !) ('' '')))

nsubj(grannie-2, O-1)
root(ROOT-0, grannie-2)

(ROOT
  (S
    (NP (PRP he))
    (VP
      (VP (VBD cried))
      (, ,)
      (CC and)
      (VP (VBD went)
        (S
          (VP (VBG dancing)
            (PP (IN about)
              (NP (DT the) (NN room)))
            (, ,)
            (SBAR (RB as) (IN if)
              (S
                (NP (PRP he))
                (VP (MD would)
                  (ADVP (RB actually))
                  (VP (VB fly)
                    (PP (IN with)
                      (NP (NN delight)))))))))))
    (. .)))

nsubj(cried-2, he-1)
nsubj(went-5, he-1)
root(ROOT-0, cried-2)
conj_and(cried-2, went-5)
xcomp(went-5, dancing-6)
det(room-9, the-8)
prep_about(dancing-6, room-9)
advmod(fly-16, as-11)
mark(fly-16, if-12)
nsubj(fly-16, he-13)
aux(fly-16, would-14)
advmod(fly-16, actually-15)
advcl(dancing-6, fly-16)
prep_with(fly-16, delight-18)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (VBD had)
        (ADVP (RB never))
        (VP (VBN seen)
          (NP
            (NP (DT a) (NN sovereign))
            (, ,)
            (SBAR
              (WHPP (IN for)
                (WHNP (WDT that)))
              (S
                (NP
                  (NP (NN part))
                  (PP (IN of)
                    (NP (DT the) (NN country))))
                (VP (VBD was)
                  (ADVP (RB then))
                  (PP (IN like)
                    (NP (NNP Holland))))))))))
    (: --)
    (S
      (NP (PRP you))
      (ADVP (RB never))
      (VP (VBD saw)
        (NP (JJ gold) (NN money))
        (ADVP (RB there))))
    (. .)))

nsubj(seen-4, Willie-1)
aux(seen-4, had-2)
neg(seen-4, never-3)
root(ROOT-0, seen-4)
det(sovereign-6, a-5)
dobj(seen-4, sovereign-6)
prep_for(was-14, sovereign-6)
nsubj(was-14, part-10)
det(country-13, the-12)
prep_of(part-10, country-13)
rcmod(sovereign-6, was-14)
advmod(was-14, then-15)
prep_like(was-14, Holland-17)
nsubj(saw-21, you-19)
neg(saw-21, never-20)
parataxis(seen-4, saw-21)
amod(money-23, gold-22)
dobj(saw-21, money-23)
advmod(saw-21, there-24)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB get)
          (NP (PRP it))
          (PP (IN for)
            (NP (PRP him))))))
    (, ,)
    (NP (PRP$ his) (NN grandmother))
    (VP (VBD had)
      (VP (VBN had)
        (S
          (VP (TO to)
            (VP (VB send)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN bank))
                  (PP (IN in)
                    (NP (DT the) (NN county) (NN town))))))))))
    (. .)))

aux(get-2, To-1)
advcl(had-10, get-2)
dobj(get-2, it-3)
prep_for(get-2, him-5)
poss(grandmother-8, his-7)
nsubj(had-10, grandmother-8)
nsubj(send-12, grandmother-8)
aux(had-10, had-9)
root(ROOT-0, had-10)
aux(send-12, to-11)
xcomp(had-10, send-12)
det(bank-15, the-14)
prep_to(send-12, bank-15)
det(town-19, the-17)
nn(town-19, county-18)
prep_in(bank-15, town-19)

(ROOT
  (S
    (PP (IN After)
      (NP (DT this)))
    (NP (PRP she))
    (VP (MD would)
      (ADVP (RB often))
      (VP (VB give)
        (NP (PRP him))
        (NP
          (NP (NN sixpence))
          (CC or)
          (NP (DT a) (NN shilling))
          (, ,)
          (CC and)
          (ADVP (RB sometimes))
          (RB even)
          (NP
            (NP (DT a) (NN half-crown))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP she))
                (VP (VBD asked)
                  (NP (PRP him))
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (NP
                          (NP (NN anything))
                          (SBAR
                            (S
                              (NP (PRP she))
                              (VP (VBD thought)
                                (ADJP
                                  (NP (DT a) (RB little))
                                  (JJR harder)
                                  (PP (IN than)
                                    (ADJP (JJ usual))))))))
                        (: ;)
                        (SBAR (RB so) (IN that)
                          (S
                            (NP (NNP Willie))
                            (VP (VBD had)
                              (ADVP (RB now))
                              (NP
                                (NP (RB plenty))
                                (PP (IN of)
                                  (NP (NN money))))))))))
                  (PP (IN with)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (TO to)
                          (VP (VB carry)
                            (PRT (RP out))
                            (NP (PRP$ his) (JJ little) (NNS plans))))))))))))))
    (. .)))

prep_after(give-6, this-2)
nsubj(give-6, she-3)
aux(give-6, would-4)
advmod(give-6, often-5)
root(ROOT-0, give-6)
iobj(give-6, him-7)
dobj(give-6, sixpence-8)
det(shilling-11, a-10)
dobj(give-6, shilling-11)
conj_or(sixpence-8, shilling-11)
dobj(give-6, sometimes-14)
advmod(sixpence-8, sometimes-14)
conj_and(sixpence-8, sometimes-14)
dobj(give-6, even-15)
advmod(sixpence-8, even-15)
conj_and(sixpence-8, even-15)
det(half-crown-17, a-16)
dep(sixpence-8, half-crown-17)
tmod(asked-20, half-crown-17)
nsubj(carry-44, half-crown-17)
advmod(asked-20, when-18)
nsubj(asked-20, she-19)
rcmod(half-crown-17, asked-20)
dobj(asked-20, him-21)
nsubj(do-23, him-21)
aux(do-23, to-22)
xcomp(asked-20, do-23)
dobj(do-23, anything-24)
nsubj(thought-26, she-25)
rcmod(anything-24, thought-26)
det(little-28, a-27)
npadvmod(harder-29, little-28)
acomp(thought-26, harder-29)
prep_than(harder-29, usual-31)
advmod(had-36, so-33)
mark(had-36, that-34)
nsubj(had-36, Willie-35)
advcl(do-23, had-36)
parataxis(do-23, had-36)
advmod(had-36, now-37)
dobj(had-36, plenty-38)
prep_of(plenty-38, money-40)
aux(carry-44, to-43)
prepc_with(asked-20, carry-44)
prt(carry-44, out-45)
poss(plans-48, his-46)
amod(plans-48, little-47)
dobj(carry-44, plans-48)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (VP (VBN remonstrated)
          (PP (IN with) (IN by)
            (NP
              (NP (PRP$ her) (NN daughter))
              (PP (IN for)
                (S
                  (VP (VBG giving)
                    (S
                      (NP (PRP him))
                      (ADJP (RB so) (JJ much)))))))))))
    (, ,)
    (NP (PRP$ his) (NN grandmother))
    (VP (MD would)
      (VP (VB say) (: --) (`` ``)
        (S
          (VP (VB Look)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (DT the) (NN boy))
                (VP (VBZ spends)
                  (NP (PRP it)))))))))
    (. !)))

advmod(remonstrated-2, When-1)
advcl(say-16, remonstrated-2)
dep(remonstrated-2, with-3)
poss(daughter-6, her-5)
prep_by(remonstrated-2, daughter-6)
prepc_for(daughter-6, giving-8)
nsubj(much-11, him-9)
advmod(much-11, so-10)
xcomp(giving-8, much-11)
poss(grandmother-14, his-13)
nsubj(say-16, grandmother-14)
aux(say-16, would-15)
root(ROOT-0, say-16)
ccomp(say-16, Look-19)
advmod(spends-23, how-20)
det(boy-22, the-21)
nsubj(spends-23, boy-22)
ccomp(Look-19, spends-23)
dobj(spends-23, it-24)

(ROOT
  (FRAG (: --)
    (VP
      (ADVP (RB always))
      (VBD _)
      (S
        (VP (VBG doing)
          (NP (JJ _) (NN something))
          (PP (IN with)
            (NP (PRP it))))))
    (. !)))

advmod(_-3, always-2)
root(ROOT-0, _-3)
xcomp(_-3, doing-4)
amod(something-6, _-5)
dobj(doing-4, something-6)
prep_with(doing-4, it-8)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB never))
    (VP (VBZ wastes)
      (NP (PRP it))
      (PP (IN on)
        (NP
          (NP (NNS sweets))
          (PRN (: --) (RB not)
            (NP (PRP he))))))
    (. !)))

nsubj(wastes-3, He-1)
neg(wastes-3, never-2)
root(ROOT-0, wastes-3)
dobj(wastes-3, it-4)
prep_on(wastes-3, sweets-6)
dep(he-9, not-8)
dep(sweets-6, he-9)

(ROOT
  (S (: --)
    (NP (PRP$ My))
    (ADVP (RB Willie))
    (VP (VBZ 's)
      (WHPP (IN above)
        (WHNP (WDT that))))
    (. !) ('' '')))

nsubj('s-4, My-2)
advmod('s-4, Willie-3)
root(ROOT-0, 's-4)
prep_above('s-4, that-6)

(ROOT
  (S
    (NP (DT The) (JJ old) (NN lady))
    (ADVP (RB generally))
    (VP (VBD spoke)
      (PP (IN of)
        (NP (PRP him)))
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP she))
          (VP (VBD were)
            (NP
              (NP (DT the) (NN chief))
              (CONJP (IN if) (RB not))
              (NP
                (NP (DT the) (JJ sole) (NN proprietor))
                (PP (IN of)
                  (NP (DT the) (NN boy)))))))))
    (. .)))

det(lady-3, The-1)
amod(lady-3, old-2)
nsubj(spoke-5, lady-3)
advmod(spoke-5, generally-4)
root(ROOT-0, spoke-5)
prep_of(spoke-5, him-7)
advmod(chief-13, as-8)
mark(chief-13, if-9)
nsubj(chief-13, she-10)
cop(chief-13, were-11)
det(chief-13, the-12)
advcl(spoke-5, chief-13)
det(proprietor-18, the-16)
amod(proprietor-18, sole-17)
advcl(spoke-5, proprietor-18)
conj_negcc(chief-13, proprietor-18)
det(boy-21, the-20)
prep_of(proprietor-18, boy-21)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD could) (RB n't)
                (VP (VB do)
                  (ADVP (RBR better))
                  (PP (IN with)
                    (NP (PRP it))))))))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP she))
        (VP (MD would)
          (VP (VB add)))))
    (: ;) (`` ``)
    (CC and)
    (S
      (NP (DT that) (PRP you))
      (VP (MD 'll)
        (VP (VB see)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBZ comes)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP (DT a) (NN man)))))))))))
    (. .)))

nsubj(sure-4, I-2)
cop(sure-4, 'm-3)
root(ROOT-0, sure-4)
nsubj(do-8, I-5)
aux(do-8, could-6)
neg(do-8, n't-7)
ccomp(sure-4, do-8)
advmod(do-8, better-9)
prep_with(do-8, it-11)
nsubj(add-16, she-14)
aux(add-16, would-15)
dep(sure-4, add-16)
det(you-21, that-20)
nsubj(see-23, you-21)
aux(see-23, 'll-22)
conj_and(sure-4, see-23)
advmod(comes-26, when-24)
nsubj(comes-26, he-25)
nsubj(man-30, he-25)
advcl(see-23, comes-26)
aux(man-30, to-27)
cop(man-30, be-28)
det(man-30, a-29)
xcomp(comes-26, man-30)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD 'll)
      (VP (VB be)
        (NP
          (NP (DT the) (NN making))
          (PP (IN of)
            (NP (PRP you) (DT all))))))
    (. .) ('' '')))

nsubj(making-5, He-1)
aux(making-5, 'll-2)
cop(making-5, be-3)
det(making-5, the-4)
root(ROOT-0, making-5)
prep_of(making-5, you-7)
det(you-7, all-8)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,)
    (PP (IN mother))
    (, ,)
    (NP (PRP you))
    (VP (MD ca) (RB n't)
      (VP (VB afford)
        (NP (PRP it))))
    (. .) ('' '')))

cc(afford-9, But-2)
prep(afford-9, mother-4)
nsubj(afford-9, you-6)
aux(afford-9, ca-7)
neg(afford-9, n't-8)
root(ROOT-0, afford-9)
dobj(afford-9, it-10)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (NP (DT that))))
    (. ?)))

advmod(know-5, How-2)
aux(know-5, do-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
dobj(know-5, that-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP (VB afford)
        (NP (PRP it))
        (ADVP (RB very) (RB well))))
    (. .)))

nsubj(afford-3, I-1)
aux(afford-3, can-2)
root(ROOT-0, afford-3)
dobj(afford-3, it-4)
advmod(well-6, very-5)
advmod(afford-3, well-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (NP (DT no) (NN house-rent)
          (S
            (VP (TO to)
              (VP (VB pay)))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ certain)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (NP
                  (NP (DT the)
                    (ADJP (RB very) (JJS best))
                    (NN return))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (MD can)
                        (VP (VB make)
                          (NP (PRP you))
                          (PP (IN for)
                            (NP (PRP$ your) (NN kindness))))))))))))))
    (. .)))

nsubj('ve-2, I-1)
root(ROOT-0, 've-2)
neg(house-rent-4, no-3)
dobj('ve-2, house-rent-4)
aux(pay-6, to-5)
vmod(house-rent-4, pay-6)
nsubj(certain-11, I-9)
cop(certain-11, am-10)
conj_and('ve-2, certain-11)
nsubj(return-17, it-12)
cop(return-17, is-13)
det(return-17, the-14)
advmod(best-16, very-15)
amod(return-17, best-16)
ccomp(certain-11, return-17)
nsubj(make-20, I-18)
aux(make-20, can-19)
rcmod(return-17, make-20)
dobj(make-20, you-21)
poss(kindness-24, your-23)
prep_for(make-20, kindness-24)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBP do)
          (PP (IN for)
            (NP (NNP Willie))))))
    (VP (MD will)
      (VP (VB prove)
        (S
          (VP (TO to)
            (VP (VB have)
              (VP (VBN been)
                (VP (VBN done)
                  (PP (IN for)
                    (NP (PRP us))
                    (ADVP (DT all))))))))))
    (. .) ('' '')))

dobj(do-3, What-1)
nsubj(do-3, I-2)
csubj(prove-7, do-3)
prep_for(do-3, Willie-5)
aux(prove-7, will-6)
root(ROOT-0, prove-7)
aux(done-11, to-8)
aux(done-11, have-9)
auxpass(done-11, been-10)
xcomp(prove-7, done-11)
prep_for(done-11, us-13)
advmod(done-11, all-14)

(ROOT
  (S
    (ADVP (RB Certainly))
    (NP
      (NP (NNP Willie) (POS 's))
      (NN grandmother))
    (VP (VBD showed)
      (NP (PRP herself))
      (NP (DT a)
        (ADJP (RB very) (JJ wise))
        (JJ old) (NN lady)))
    (. .)))

advmod(showed-5, Certainly-1)
poss(grandmother-4, Willie-2)
nsubj(showed-5, grandmother-4)
root(ROOT-0, showed-5)
iobj(showed-5, herself-6)
det(lady-11, a-7)
advmod(wise-9, very-8)
amod(lady-11, wise-9)
amod(lady-11, old-10)
dobj(showed-5, lady-11)

(ROOT
  (S
    (NP (DT The) (JJ wisest) (JJ old) (NNS ladies))
    (VP (VBP are)
      (ADVP (RB always))
      (NP
        (NP (DT those))
        (PP (IN with)
          (NP
            (NP (JJ young) (NNS souls))
            (VP (VBG looking)
              (PRT (RP out))
              (PP (IN of)
                (NP (PRP$ their) (NNS eyes))))))))
    (. .)))

det(ladies-4, The-1)
amod(ladies-4, wisest-2)
amod(ladies-4, old-3)
nsubj(those-7, ladies-4)
cop(those-7, are-5)
advmod(those-7, always-6)
root(ROOT-0, those-7)
amod(souls-10, young-9)
prep_with(those-7, souls-10)
vmod(souls-10, looking-11)
poss(eyes-15, their-14)
prep_out_of(looking-11, eyes-15)

(ROOT
  (S (CC And)
    (NP (JJ few) (NNS things))
    (VP (VBD pleased)
      (S
        (NP (NNP Willie))
        (ADJP (JJR more)
          (PP (IN than)
            (S
              (VP (VBG waiting)
                (PP (IN upon)
                  (NP (PRP her)))))))))
    (. .)))

cc(pleased-4, And-1)
amod(things-3, few-2)
nsubj(pleased-4, things-3)
root(ROOT-0, pleased-4)
nsubj(more-6, Willie-5)
xcomp(pleased-4, more-6)
prepc_than(more-6, waiting-8)
prep_upon(waiting-8, her-10)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (NP
          (NP (DT a) (NN passion))
          (PP (IN for)
            (S
              (VP (VBG being)
                (ADJP (JJ useful))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP$ his) (NN grandmother))
          (VP (VBD needed)
            (NP (PRP$ his) (NN help))
            (ADVP (RBR more))
            (PP (IN than)
              (NP (DT any) (CD one) (RB else))))))
      (, ,)
      (NP
        (NP (PRP$ her) (NN presence))
        (PP (IN in)
          (NP (DT the) (NN house))))
      (VP (VBD was)
        (NP
          (NP (DT an) (JJ endless) (NN source))
          (PP (IN of)
            (NP (NN pleasure))))
        (PP (TO to)
          (NP (PRP him)))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
det(passion-4, a-3)
dobj(had-2, passion-4)
cop(useful-7, being-6)
prepc_for(passion-4, useful-7)
mark(needed-13, as-10)
poss(grandmother-12, his-11)
nsubj(needed-13, grandmother-12)
advcl(source-30, needed-13)
poss(help-15, his-14)
dobj(needed-13, help-15)
advmod(needed-13, more-16)
det(one-19, any-18)
prep_than(needed-13, one-19)
advmod(one-19, else-20)
poss(presence-23, her-22)
nsubj(source-30, presence-23)
det(house-26, the-25)
prep_in(presence-23, house-26)
cop(source-30, was-27)
det(source-30, an-28)
amod(source-30, endless-29)
conj_and(had-2, source-30)
prep_of(source-30, pleasure-32)
prep_to(source-30, him-34)

(ROOT
  (S (CC But)
    (NP (PRP$ his) (NN father))
    (VP (VBD grew)
      (ADJP (JJ anxious)))
    (. .)))

cc(grew-4, But-1)
poss(father-3, his-2)
nsubj(grew-4, father-3)
root(ROOT-0, grew-4)
acomp(grew-4, anxious-5)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD did) (RB not)
      (VP (VB like)
        (S
          (NP (PRP her))
          (VP (VBG giving)
            (NP
              (NP
                (NP (NNP Willie))
                (NP
                  (ADJP (RB so) (JJ much))
                  (NN money)))
              (PRN (: --) (RB not)
                (NP
                  (NP (DT that))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD minded)
                        (NP
                          (NP (NNP Willie))
                          (VP (VBG having)
                            (NP (CC or)
                              (NP
                                (NP (NN spending))
                                (NP (DT the) (NN money))))))))))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP he))
                    (VP (VBD believed)
                      (SBAR (IN that)
                        (S
                          (NP (DT the) (NN spending))
                          (VP (MD would)
                            (VP (VB keep)
                              (S
                                (NP (DT the))
                                (VP (VBG having)
                                  (S
                                    (S
                                      (PP (IN from)
                                        (S
                                          (VP (VBG hurting)
                                            (NP (PRP him))))))
                                    (: ;)
                                    (S (CC but)
                                      (NP (PRP he))
                                      (VP (VBD feared)
                                        (SBAR (IN lest)
                                          (S
                                            (PP (IN through)
                                              (NP (PRP$ her) (NNS gifts)))
                                            (NP
                                              (NP (DT the) (NN purity))
                                              (PP (IN of)
                                                (NP
                                                  (NP
                                                    (NP (DT the) (NN boy) (POS 's))
                                                    (NN love))
                                                  (PP (IN for)
                                                    (NP (PRP$ his) (NN grandmother))))))
                                            (VP (MD might)
                                              (VP (VB be)
                                                (VP (VBN injured)))))))))))))))))))
              (, ,)
              (CC and)
              (NP
                (NP (DT the) (NN service))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (ADVP (IN at) (JJ first))
                    (VP (VBD had)
                      (VP (VBN looked)
                        (ADVP (RB only))
                        (PP (TO to)
                          (NP (PRP her)))
                        (SBAR (IN as)
                          (S
                            (NP (PRP$ its) (NN end))
                            (VP (MD might)
                              (VP (VB degenerate)
                                (PP (IN into)
                                  (NP
                                    (NP (DT a) (JJ mere) (NN serving))
                                    (PP (IN of)
                                      (NP (PRP her)))))
                                (PP (IN for)
                                  (NP
                                    (NP (DT the) (NN sake))
                                    (PP (IN of)
                                      (NP (PRP$ her) (NNS shillings)))))))))))))))))))
    (. .)))

nsubj(like-4, He-1)
aux(like-4, did-2)
neg(like-4, not-3)
root(ROOT-0, like-4)
nsubj(giving-6, her-5)
dep(like-4, giving-6)
dobj(giving-6, Willie-7)
advmod(much-9, so-8)
amod(money-10, much-9)
dep(Willie-7, money-10)
dep(believed-25, not-12)
dep(believed-25, that-13)
nsubj(minded-15, he-14)
rcmod(that-13, minded-15)
dobj(minded-15, Willie-16)
vmod(Willie-16, having-17)
cc(spending-19, or-18)
dobj(having-17, spending-19)
det(money-21, the-20)
dep(spending-19, money-21)
mark(believed-25, for-23)
nsubj(believed-25, he-24)
dep(Willie-7, believed-25)
mark(keep-30, that-26)
det(spending-28, the-27)
nsubj(keep-30, spending-28)
aux(keep-30, would-29)
ccomp(believed-25, keep-30)
nsubj(having-32, the-31)
dep(keep-30, having-32)
dep(having-32, from-33)
pcomp(from-33, hurting-34)
dobj(hurting-34, him-35)
cc(feared-39, but-37)
nsubj(feared-39, he-38)
parataxis(from-33, feared-39)
mark(injured-56, lest-40)
poss(gifts-43, her-42)
prep_through(injured-56, gifts-43)
det(purity-45, the-44)
nsubjpass(injured-56, purity-45)
det(boy-48, the-47)
poss(love-50, boy-48)
prep_of(purity-45, love-50)
poss(grandmother-53, his-52)
prep_for(love-50, grandmother-53)
aux(injured-56, might-54)
auxpass(injured-56, be-55)
advcl(feared-39, injured-56)
det(service-60, the-59)
dobj(giving-6, service-60)
conj_and(Willie-7, service-60)
nsubj(looked-65, service-60)
advmod(looked-65, at-62)
advmod(at-62, first-63)
aux(looked-65, had-64)
rcmod(service-60, looked-65)
advmod(looked-65, only-66)
prep_to(looked-65, her-68)
mark(degenerate-73, as-69)
poss(end-71, its-70)
nsubj(degenerate-73, end-71)
aux(degenerate-73, might-72)
advcl(looked-65, degenerate-73)
det(serving-77, a-75)
amod(serving-77, mere-76)
prep_into(degenerate-73, serving-77)
prep_of(serving-77, her-79)
det(sake-82, the-81)
prep_for(degenerate-73, sake-82)
poss(shillings-85, her-84)
prep_of(sake-82, shillings-85)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had) (, ,)
      (ADVP (RB therefore))
      (, ,)
      (PP
        (NP (DT a) (JJ long) (NN talk))
        (IN with)
        (NP
          (NP (PRP her))
          (PP (IN about)
            (NP (PRP it))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
advmod(had-2, therefore-4)
det(talk-8, a-6)
amod(talk-8, long-7)
npadvmod(had-2, talk-8)
prep_with(had-2, her-10)
prep_about(her-10, it-12)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD was)
      (ADJP
        (ADJP (JJ indignant)
          (PP (IN at)
            (NP
              (NP (DT the) (NN notion))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJS least) (NN danger))
                  (PP (IN of)
                    (S
                      (VP (VBG spoiling)
                        (NP (NNP Willie))))))))))
        (, ,)
        (CC but)
        (RB so)
        (ADJP (JJ anxious)
          (S
            (VP (TO to)
              (VP (VB prove)
                (SBAR
                  (S
                    (NP (EX there))
                    (VP (VBD was)
                      (NP (NN none))
                      (SBAR (IN that)
                        (S
                          (NP (PRP she))
                          (VP (VBD agreed)
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN test))
                                (VP (VBN proposed)
                                  (PP (IN by)
                                    (NP
                                      (NP (PRP$ his) (NN father))
                                      (: --)
                                      (SBAR
                                        (WHNP (WDT which))
                                        (S
                                          (VP (VBD was)))))))))
                            (, ,)
                            (S
                              (VP (TO to)
                                (VP (VB drop)
                                  (NP
                                    (NP (DT all) (NN money) (NNS transactions))
                                    (PP (IN between)
                                      (NP (PRP them))))
                                  (PP (IN for)
                                    (NP (DT a) (JJ few) (NNS months)))
                                  (, ,)
                                  (S
                                    (VP (VBG giving)
                                      (NP (NNP Willie))
                                      (NP
                                        (NP (DT no) (NN reason))
                                        (PP (IN for)
                                          (NP (DT the) (NN change)))))))))))))))))))))
    (. .)))

nsubj(indignant-3, She-1)
cop(indignant-3, was-2)
root(ROOT-0, indignant-3)
det(notion-6, the-5)
prep_at(indignant-3, notion-6)
det(danger-10, the-8)
amod(danger-10, least-9)
prep_of(notion-6, danger-10)
prepc_of(danger-10, spoiling-12)
dobj(spoiling-12, Willie-13)
advmod(indignant-3, so-16)
conj_but(indignant-3, so-16)
dep(indignant-3, anxious-17)
aux(prove-19, to-18)
xcomp(anxious-17, prove-19)
expl(was-21, there-20)
ccomp(prove-19, was-21)
nsubj(was-21, none-22)
mark(agreed-25, that-23)
nsubj(agreed-25, she-24)
nsubj(drop-38, she-24)
ccomp(was-21, agreed-25)
det(test-28, the-27)
prep_to(agreed-25, test-28)
vmod(test-28, proposed-29)
poss(father-32, his-31)
agent(proposed-29, father-32)
nsubj(was-35, father-32)
rcmod(father-32, was-35)
aux(drop-38, to-37)
xcomp(agreed-25, drop-38)
det(transactions-41, all-39)
nn(transactions-41, money-40)
dobj(drop-38, transactions-41)
prep_between(transactions-41, them-43)
det(months-47, a-45)
amod(months-47, few-46)
prep_for(drop-38, months-47)
vmod(drop-38, giving-49)
iobj(giving-49, Willie-50)
neg(reason-52, no-51)
dobj(giving-49, reason-52)
det(change-55, the-54)
prep_for(reason-52, change-55)

(ROOT
  (S
    (S
      (ADVP (RB Grannie))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (S
        (VP (VBG being)
          (PP (IN in)
            (S
              (NP
                (NP
                  (NP (NN word)
                    (CC and)
                    (NN manner))
                  (PRN (, ,)
                    (SBAR (IN if)
                      (FRAG (JJ possible)))
                    (, ,)))
                (ADJP
                  (ADJP
                    (ADJP (RB still) (JJR kinder)
                      (PP (TO to)
                        (NP (PRP him))))
                    (PP (IN than)
                      (ADVP (RB ever))))
                  (: --)
                  (CC and)
                  (ADJP (RB no) (JJ wonder))
                  (, ,)))
              (VP (VBG seeing)
                (SBAR
                  (S
                    (S
                      (NP (PRP she))
                      (VP (MD could)
                        (ADVP (DT no) (RBR more))
                        (PRN (, ,)
                          (PP (IN for)
                            (NP (DT the) (NN present)))
                          (, ,))
                        (VP (VB let)
                          (NP (PRP$ her) (NN love))
                          (PRT (RP out))
                          (PP (IN at)
                            (NP (PRP$ her) (NN pocket-hole))))))
                    (: --)
                    (CC and)
                    (S
                      (NP (NNP Willie))
                      (VP (VBG having)
                        (S
                          (SBAR
                            (PRN (, ,)
                              (ADVP (RB therefore))
                              (, ,))
                            (S
                              (NP (DT no) (NN anxiety))
                              (VP (VBD lest)
                                (SBAR
                                  (S
                                    (NP (PRP he))
                                    (VP (MD should)
                                      (VP (VB have)
                                        (VP (VBN displeased)
                                          (NP (PRP her))))))))))
                          (, ,)
                          (NP (PRP he))
                          (ADVP (RB soon))
                          (VP (VBD ceased)
                            (S
                              (VP (TO to)
                                (VP (VB think)
                                  (ADVP (RB even))
                                  (PP (IN of)
                                    (NP (DT the) (NN change)))
                                  (: ;)
                                  (PP (IN except) (, ,)
                                    (ADVP (RB indeed))
                                    (, ,)
                                    (ADVP (RB sometimes)))
                                  (SBAR
                                    (WHADVP (WRB when))
                                    (S
                                      (NP (PRP he))
                                      (VP (VBD wanted)
                                        (NP (DT a) (JJ little) (NN money))
                                        (ADVP (RB very) (RB much))))))))))))
                    (, ,)
                    (CC and)
                    (RB then)
                    (S
                      (NP (PRP he))
                      (VP (MD would)
                        (VP (VB say)
                          (PP (TO to)
                            (NP (PRP himself)))
                          (SBAR (IN that)
                            (S
                              (NP (PRP he))
                              (VP (VBD was)
                                (ADJP (JJ afraid)))))))))))))))
      (NP (JJ poor) (NN grannie))
      (VP
        (VP (VBD had)
          (VP (VBN been)
            (ADJP (RB too) (JJ liberal)
              (PP (IN at)
                (ADVP (RB first))))))
        (, ,)
        (CC and)
        (VP (VBD had)
          (VP (VBN spent)
            (NP (PDT all) (PRP$ her) (NN money))
            (PP (IN upon)
              (NP (PRP him)))))))
    (: ;)
    (S
      (ADVP (RB therefore))
      (NP (PRP he))
      (VP (MD must)
        (VP (VB try)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP
                  (ADJP (DT the) (RBR more) (JJ attentive))
                  (PP (TO to)
                    (NP (PRP her))))
                (ADVP (RB now))))))))
    (. .)))

advmod(liberal-98, Grannie-1)
advmod(liberal-98, however-3)
dep(liberal-98, being-5)
nsubj(seeing-25, word-7)
conj_and(word-7, manner-9)
nsubj(seeing-25, manner-9)
mark(possible-12, if-11)
dep(word-7, possible-12)
advmod(kinder-15, still-14)
amod(word-7, kinder-15)
prep_to(kinder-15, him-17)
prep(kinder-15, than-18)
pcomp(than-18, ever-19)
neg(wonder-23, no-22)
amod(word-7, wonder-23)
conj_and(kinder-15, wonder-23)
prepc_in(being-5, seeing-25)
nsubj(let-35, she-26)
aux(let-35, could-27)
neg(more-29, no-28)
advmod(let-35, more-29)
dep(let-35, for-31)
det(present-33, the-32)
pobj(for-31, present-33)
dep(seeing-25, let-35)
poss(love-37, her-36)
dobj(let-35, love-37)
prt(let-35, out-38)
poss(pocket-hole-41, her-40)
prep_at(let-35, pocket-hole-41)
nsubj(having-45, Willie-44)
dep(seeing-25, having-45)
conj_and(let-35, having-45)
dep(lest-51, therefore-47)
neg(anxiety-50, no-49)
nsubj(lest-51, anxiety-50)
advcl(ceased-60, lest-51)
nsubj(displeased-55, he-52)
aux(displeased-55, should-53)
aux(displeased-55, have-54)
ccomp(lest-51, displeased-55)
dobj(displeased-55, her-56)
nsubj(ceased-60, he-58)
nsubj(think-62, he-58)
advmod(ceased-60, soon-59)
ccomp(having-45, ceased-60)
aux(think-62, to-61)
xcomp(ceased-60, think-62)
advmod(think-62, even-63)
det(change-66, the-65)
prep_of(think-62, change-66)
prep(think-62, except-68)
dep(except-68, indeed-70)
dep(except-68, sometimes-72)
advmod(wanted-75, when-73)
nsubj(wanted-75, he-74)
dep(think-62, wanted-75)
det(money-78, a-76)
amod(money-78, little-77)
dobj(wanted-75, money-78)
advmod(much-80, very-79)
advmod(wanted-75, much-80)
advmod(say-86, then-83)
nsubj(say-86, he-84)
aux(say-86, would-85)
dep(seeing-25, say-86)
conj_and(let-35, say-86)
prep_to(say-86, himself-88)
mark(afraid-92, that-89)
nsubj(afraid-92, he-90)
cop(afraid-92, was-91)
ccomp(say-86, afraid-92)
amod(grannie-94, poor-93)
nsubj(liberal-98, grannie-94)
nsubj(spent-104, grannie-94)
aux(liberal-98, had-95)
cop(liberal-98, been-96)
advmod(liberal-98, too-97)
root(ROOT-0, liberal-98)
prep(liberal-98, at-99)
pcomp(at-99, first-100)
aux(spent-104, had-103)
conj_and(liberal-98, spent-104)
predet(money-107, all-105)
poss(money-107, her-106)
dobj(spent-104, money-107)
prep_upon(spent-104, him-109)
advmod(try-114, therefore-111)
nsubj(try-114, he-112)
nsubj(attentive-119, he-112)
aux(try-114, must-113)
parataxis(liberal-98, try-114)
aux(attentive-119, to-115)
cop(attentive-119, be-116)
det(attentive-119, the-117)
advmod(attentive-119, more-118)
xcomp(try-114, attentive-119)
prep_to(attentive-119, her-121)
advmod(attentive-119, now-122)

(ROOT
  (S (CC So)
    (S
      (NP (DT the) (NN result))
      (VP (VBD was)
        (ADJP (JJ satisfactory))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (DT the)
          (ADVP
            (ADVP (RBR more) (RB so))
            (SBAR (IN that)
              (S (, ,)
                (PP (IN for)
                  (NP (PDT all) (PRP$ her) (NN boasting)))
                (, ,)
                (NP (PRP$ his) (NN grandmother))
                (VP (VBD had) (RB not)
                  (VP (VBN been)
                    (ADJP (JJ able)
                      (S
                        (VP (TO to)
                          (VP (VB help)
                            (S
                              (VP (VBG trembling)
                                (NP
                                  (NP (DT a) (JJ little))
                                  (, ,)
                                  (NP
                                    (NP (NN half))
                                    (PP (IN with)
                                      (NP (NN annoyance))))
                                  (, ,)))))))))))))
          (NN half))
        (PP (IN with)
          (NP
            (NP (NN anxiety))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP she))
                (VP (VBP let)
                  (NP
                    (NP (DT the) (JJ first) (JJ few))
                    (PP (IN of)
                      (NP (PRP$ his) (NNS services))))))))))
      (VP (VBP pass)
        (PP (IN without)
          (NP (DT the) (JJ customary) (NN acknowledgment)))))
    (. .)))

det(result-3, the-2)
nsubj(satisfactory-5, result-3)
cop(satisfactory-5, was-4)
root(ROOT-0, satisfactory-5)
det(half-34, the-8)
advmod(so-10, more-9)
advmod(half-34, so-10)
mark(able-23, that-11)
predet(boasting-16, all-14)
poss(boasting-16, her-15)
prep_for(able-23, boasting-16)
poss(grandmother-19, his-18)
nsubj(able-23, grandmother-19)
nsubj(help-25, grandmother-19)
aux(able-23, had-20)
neg(able-23, not-21)
cop(able-23, been-22)
advcl(so-10, able-23)
ccomp(so-10, able-23)
aux(help-25, to-24)
xcomp(able-23, help-25)
xcomp(help-25, trembling-26)
det(little-28, a-27)
dobj(trembling-26, little-28)
appos(little-28, half-30)
prep_with(half-30, annoyance-32)
nsubj(pass-47, half-34)
prep_with(half-34, anxiety-36)
mark(let-40, as-38)
nsubj(let-40, she-39)
dep(anxiety-36, let-40)
det(few-43, the-41)
amod(few-43, first-42)
dobj(let-40, few-43)
poss(services-46, his-45)
prep_of(few-43, services-46)
conj_and(satisfactory-5, pass-47)
det(acknowledgment-51, the-49)
amod(acknowledgment-51, customary-50)
prep_without(pass-47, acknowledgment-51)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (VBZ !))
    ('' '')))

expl(!-3, There-2)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD said)
      (NP (CD one) (NN day))
      (, ,)
      (PP (IN at)
        (NP (NN length)))
      (, ,)
      (ADVP (RB triumphantly))
      (, ,)
      (PP (TO to)
        (NP
          (NP (NNP Mr) (NNP Macmichael))
          (: ;) (`` ``)
          (SBARQ
            (WHNP (WP what))
            (SQ (VBP do)
              (NP (PRP you))
              (VP (VB think)
                (PP (IN of)
                  (NP (PRP$ my) (NN Willie)))
                (ADVP (RB now))))
            (. ?)))))))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
num(day-4, one-3)
tmod(said-2, day-4)
prep_at(said-2, length-7)
advmod(said-2, triumphantly-9)
nn(Macmichael-13, Mr-12)
prep_to(said-2, Macmichael-13)
dobj(think-19, what-16)
aux(think-19, do-17)
nsubj(think-19, you-18)
dep(Macmichael-13, think-19)
poss(Willie-22, my-21)
prep_of(think-19, Willie-22)
advmod(think-19, now-23)

(ROOT
  (S
    (NP
      (NP (CD Three) (NNS months))
      (UCP
        (ADJP (IN over))
        (CC and)
        (VP
          (VP (VBN gone))
          (, ,)
          (CC and)
          (VP
            (FRAG
              (WHADVP (WRB where)))))))
    (VP (VBP are)
      (NP (PRP$ your) (NNS fears)))
    (. ?)))

num(months-2, Three-1)
nsubj(fears-11, months-2)
amod(months-2, over-3)
amod(months-2, gone-5)
conj_and(over-3, gone-5)
conj_and(over-3, where-8)
conj_and(gone-5, where-8)
cop(fears-11, are-9)
poss(fears-11, your-10)
root(ROOT-0, fears-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB trust)
              (NP
                (NP (PRP$ my) (NN judgment))
                (ADJP
                  (NP (DT a) (RB little))
                  (JJR better)
                  (SBAR (IN after)
                    (FRAG
                      (NP (DT this)))))))))))
    (. .) ('' '')))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
nsubj(trust-5, you-3)
aux(trust-5, will-4)
ccomp(hope-2, trust-5)
poss(judgment-7, my-6)
dobj(trust-5, judgment-7)
det(little-9, a-8)
npadvmod(better-10, little-9)
amod(judgment-7, better-10)
mark(this-12, after-11)
dep(better-10, this-12)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (ADJP (RB very) (JJ glad))
          (, ,)
          (ADJP (JJ anyhow))))
      (, ,)
      (S
        (NP (PRP you))
        (VP (VBD put)
          (NP (PRP him))
          (PP (TO to)
            (NP (DT the) (NN trial))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN father))
    (. .)))

nsubj(glad-5, I-2)
cop(glad-5, 'm-3)
advmod(glad-5, very-4)
ccomp(said-17, glad-5)
acomp(glad-5, anyhow-7)
nsubj(put-10, you-9)
parataxis(glad-5, put-10)
dobj(put-10, him-11)
det(trial-14, the-13)
prep_to(put-10, trial-14)
root(ROOT-0, said-17)
poss(father-19, his-18)
nsubj(said-17, father-19)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD will)
      (VP (VB do)
        (S
          (NP (PRP him))
          (ADJP (JJ good)))))
    (. .) ('' '')))

nsubj(do-4, It-2)
aux(do-4, will-3)
root(ROOT-0, do-4)
nsubj(good-6, him-5)
xcomp(do-4, good-6)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP He))
        (VP (VBZ wants)
          (NP
            (NP (JJR less))
            (PP (IN of)
              (NP
                (NP (DT that))
                (PP (IN than)
                  (NP
                    (NP (JJS most) (NNS people))
                    (, ,)
                    (NP (NNP Mr) (NNP Macmichael)))))))))
      (: --)
      (S
        (NP (JJ present) (NN company))
        (VP (VBZ _) (RB not)
          (VP (VB _)
            (ADJP (JJ excepted))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (DT the) (JJ old) (NN lady))
      (, ,)
      (ADJP
        (ADJP (RB rather) (JJ nettled))
        (, ,)
        (CC but)
        (ADJP (JJ pretending)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADVP
                  (ADVP (RBR more) (RB so))
                  (SBAR (IN than)
                    (S
                      (NP (PRP she))
                      (ADVP (RB really))
                      (VP (VBD was)))))))))))
    (. .)))

nsubj(wants-3, He-2)
ccomp(said-22, wants-3)
dobj(wants-3, less-4)
prep_of(less-4, that-6)
amod(people-9, most-8)
prep_than(that-6, people-9)
nn(Macmichael-12, Mr-11)
appos(people-9, Macmichael-12)
amod(company-15, present-14)
nsubj(_-16, company-15)
parataxis(wants-3, _-16)
neg(_-16, not-17)
dep(_-16, _-18)
acomp(_-18, excepted-19)
root(ROOT-0, said-22)
det(lady-25, the-23)
amod(lady-25, old-24)
nsubj(said-22, lady-25)
advmod(nettled-28, rather-27)
amod(lady-25, nettled-28)
amod(lady-25, pretending-31)
conj_but(nettled-28, pretending-31)
aux(be-33, to-32)
xcomp(pretending-31, be-33)
advmod(so-35, more-34)
advmod(be-33, so-35)
mark(was-39, than-36)
nsubj(was-39, she-37)
advmod(was-39, really-38)
advcl(so-35, was-39)

(ROOT
  (NP (NNP CHAPTER) (NNP XV) (. .)))

nn(XV-2, CHAPTER-1)
root(ROOT-0, XV-2)

(ROOT
  (NP (NNS HYDRAULICS) (. .)))

root(ROOT-0, HYDRAULICS-1)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ first) (NN thing))
      (SBAR
        (S
          (NP (NNP Willie))
          (VP (VBD did)))))
    (, ,)
    (PP (IN after)
      (S
        (VP (VBG getting)
          (NP (PRP$ his) (NN room))
          (ADVP (RB all)
            (PP (TO to)
              (NP (PRP himself)))))))
    (, ,)
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP
            (VP (VB put)
              (NP (NNS hinges))
              (PP (IN on)
                (NP (DT the) (NNS windows))))
            (CC and)
            (VP (VB make)
              (S
                (NP (PRP them))
                (ADJP
                  (ADJP (JJ open))
                  (, ,)
                  (ADJP (RB so) (JJ satisfying)))))
            (NP (PRP$ his) (NN father))
            (PP (IN as)
              (PP (TO to)
                (NP
                  (NP (DT the) (NNS airiness))
                  (PP (IN of)
                    (NP (DT the) (NN room))))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, first-2)
nsubj(was-15, thing-3)
nsubj(put-17, thing-3)
nsubj(make-23, thing-3)
nsubj(did-5, Willie-4)
rcmod(thing-3, did-5)
prepc_after(was-15, getting-8)
poss(room-10, his-9)
dobj(getting-8, room-10)
advmod(getting-8, all-11)
prep_to(all-11, himself-13)
root(ROOT-0, was-15)
aux(put-17, to-16)
xcomp(was-15, put-17)
dobj(put-17, hinges-18)
det(windows-21, the-20)
prep_on(put-17, windows-21)
xcomp(was-15, make-23)
conj_and(put-17, make-23)
nsubj(open-25, them-24)
xcomp(make-23, open-25)
advmod(satisfying-28, so-27)
dep(open-25, satisfying-28)
poss(father-30, his-29)
dobj(put-17, father-30)
prepc_as_to(put-17, to-32)
det(airiness-34, the-33)
pobj(put-17, airiness-34)
det(room-37, the-36)
prep_of(airiness-34, room-37)

(ROOT
  (S
    (S
      (VP (VBG Finding)
        (NP (PRP himself))
        (ADVP (RB then))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (VBD were))))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT a) (NN house))
            (PP (IN of)
              (NP (PRP$ his) (JJ own)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB ask)
            (NP (PRP$ his) (NNS friends))
            (PP (IN in)
              (NP (DT the) (NN village)
                (S
                  (VP (TO to)
                    (VP (VB come)
                      (CC and)
                      (VB see)
                      (NP (PRP him))
                      (PP (IN in)
                        (NP (PRP$ his) (JJ new) (NNS quarters))))))))))))
    (. .)))

vmod(began-17, Finding-1)
dobj(Finding-1, himself-2)
advmod(Finding-1, then-3)
mark(were-7, as-5)
nsubj(were-7, it-6)
advcl(Finding-1, were-7)
det(house-11, a-10)
prep_in(Finding-1, house-11)
poss(own-14, his-13)
prep_of(house-11, own-14)
nsubj(began-17, he-16)
nsubj(ask-19, he-16)
root(ROOT-0, began-17)
aux(ask-19, to-18)
xcomp(began-17, ask-19)
poss(friends-21, his-20)
dobj(ask-19, friends-21)
det(village-24, the-23)
prep_in(ask-19, village-24)
aux(come-26, to-25)
vmod(village-24, come-26)
vmod(village-24, see-28)
conj_and(come-26, see-28)
dobj(come-26, him-29)
poss(quarters-33, his-31)
amod(quarters-33, new-32)
prep_in(come-26, quarters-33)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ first))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD did)
              (ADVP (RB so))))))
      (VP (VBD was)
        (NP (NNP Mrs) (NNP Wilson))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Mr) (NNP Spelman))
      (VP (VBD followed)))
    (. .)))

det(first-2, The-1)
nsubj(did-4, first-2)
nsubj(Wilson-8, first-2)
rcmod(first-2, did-4)
advmod(did-4, so-5)
cop(Wilson-8, was-6)
nn(Wilson-8, Mrs-7)
root(ROOT-0, Wilson-8)
nn(Spelman-12, Mr-11)
nsubj(followed-13, Spelman-12)
conj_and(Wilson-8, followed-13)

(ROOT
  (S
    (S
      (NP (NNP Hector) (NNP Macallaster))
      (VP (VBD was)
        (ADJP (JJ unwell))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT a) (NN month))
        (SBAR (IN before)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB go))))))))))
    (: ;)
    (CC but)
    (S
      (NP (DT the) (JJ first) (NN day))
      (NP (PRP he))
      (VP (MD could)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD crawled)
              (PRT (RP up))
              (NP (DT the) (NN hill))
              (PP (TO to)
                (NP (DT the) (NNPS Ruins)))))
          (, ,)
          (CC and)
          (S (RB then)
            (VP
              (ADVP (RB up)
                (NP (DT the) (RB little)))
              (VBG winding)
              (NP (NN stair))
              (PP (TO to)
                (NP
                  (NP (NNP Willie) (POS 's))
                  (NN nest))))))))
    (. .)))

nn(Macallaster-2, Hector-1)
nsubj(unwell-4, Macallaster-2)
cop(unwell-4, was-3)
root(ROOT-0, unwell-4)
nsubj(month-10, it-7)
cop(month-10, was-8)
det(month-10, a-9)
conj_and(unwell-4, month-10)
mark(able-14, before-11)
nsubj(able-14, he-12)
nsubj(go-16, he-12)
cop(able-14, was-13)
advcl(month-10, able-14)
aux(go-16, to-15)
xcomp(able-14, go-16)
det(day-21, the-19)
amod(day-21, first-20)
tmod(could-23, day-21)
nsubj(could-23, he-22)
conj_but(unwell-4, could-23)
nsubj(crawled-25, he-24)
nsubj(winding-38, he-24)
ccomp(could-23, crawled-25)
prt(crawled-25, up-26)
det(hill-28, the-27)
dobj(crawled-25, hill-28)
det(Ruins-31, the-30)
prep_to(crawled-25, Ruins-31)
advmod(winding-38, then-34)
advmod(winding-38, up-35)
det(little-37, the-36)
pobj(up-35, little-37)
ccomp(could-23, winding-38)
conj_and(crawled-25, winding-38)
dobj(winding-38, stair-39)
poss(nest-43, Willie-41)
prep_to(winding-38, nest-43)

(ROOT
  (S
    (S
      (NP (DT The) (NN boy))
      (VP
        (VP (VBD was)
          (ADJP (JJ delighted)
            (S
              (VP (TO to)
                (VP (VB see)
                  (NP (PRP him)))))))
        (, ,)
        (VP (VBD made)
          (SBAR
            (S
              (NP (PRP him))
              (VP (VBP sit)
                (PP (IN in)
                  (NP (PRP$ his) (JJ great) (NN arm-chair))))))
          (, ,))
        (CC and)
        (PRN (, ,)
          (SBAR (IN as)
            (S
              (NP (DT the) (JJ poor) (NN man))
              (VP (VBD was)
                (ADJP (RB very) (JJ tired))
                (PP (IN with)
                  (NP (DT the) (NN exertion))))))
          (, ,))
        (VP (MD would)
          (VP (VB have)
            (VP (VBN run)
              (PP (TO to)
                (NP (DT the) (NN house)))
              (S
                (VP (TO to)
                  (VP (VB get)
                    (S
                      (NP (PRP him))
                      (NP (NN something)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (NNP Hector))
      (VP
        (VP (VBN begged)
          (PP (IN for)
            (NP (DT a) (JJ little) (NN water))))
        (, ,)
        (CC and)
        (VP (VBD declared)
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB take)
                  (S
                    (NP (NN nothing))
                    (ADJP (RB else))))))))))
    (. .)))

det(boy-2, The-1)
nsubj(delighted-4, boy-2)
nsubj(see-6, boy-2)
nsubj(made-9, boy-2)
nsubj(run-32, boy-2)
nsubj(get-37, boy-2)
cop(delighted-4, was-3)
root(ROOT-0, delighted-4)
aux(see-6, to-5)
xcomp(delighted-4, see-6)
dobj(see-6, him-7)
conj_and(delighted-4, made-9)
nsubj(sit-11, him-10)
ccomp(made-9, sit-11)
poss(arm-chair-15, his-13)
amod(arm-chair-15, great-14)
prep_in(sit-11, arm-chair-15)
mark(tired-25, as-19)
det(man-22, the-20)
amod(man-22, poor-21)
nsubj(tired-25, man-22)
cop(tired-25, was-23)
advmod(tired-25, very-24)
parataxis(delighted-4, tired-25)
parataxis(made-9, tired-25)
parataxis(run-32, tired-25)
det(exertion-28, the-27)
prep_with(tired-25, exertion-28)
aux(run-32, would-30)
aux(run-32, have-31)
conj_and(delighted-4, run-32)
det(house-35, the-34)
prep_to(run-32, house-35)
aux(get-37, to-36)
xcomp(run-32, get-37)
nsubj(something-39, him-38)
xcomp(get-37, something-39)
nsubj(begged-43, Hector-42)
nsubj(declared-50, Hector-42)
conj_but(delighted-4, begged-43)
det(water-47, a-45)
amod(water-47, little-46)
prep_for(begged-43, water-47)
conj_but(delighted-4, declared-50)
conj_and(begged-43, declared-50)
nsubj(take-53, he-51)
aux(take-53, could-52)
ccomp(declared-50, take-53)
nsubj(else-55, nothing-54)
xcomp(take-53, else-55)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (NNP Willie))
    (VP
      (VP (VBD got)
        (NP (DT a) (NN tumbler))
        (PP (IN from)
          (NP (PRP$ his) (NN dressing-table))))
      (, ,)
      (CC and)
      (VP (VBD went)
        (PP (TO to)
          (NP
            (NP (DT the) (JJ other) (NN side))
            (PP (IN of)
              (NP (DT the) (NN room)))))))
    (. .)))

advmod(got-3, Therefore-1)
nsubj(got-3, Willie-2)
nsubj(went-11, Willie-2)
root(ROOT-0, got-3)
det(tumbler-5, a-4)
dobj(got-3, tumbler-5)
poss(dressing-table-8, his-7)
prep_from(got-3, dressing-table-8)
conj_and(got-3, went-11)
det(side-15, the-13)
amod(side-15, other-14)
prep_to(went-11, side-15)
det(room-18, the-17)
prep_of(side-15, room-18)

(ROOT
  (S
    (NP (NNP Hector))
    (, ,)
    (S
      (VP
        (VP (VBG hearing)
          (NP (DT a) (NN splashing)))
        (CC and)
        (VP (VBG rushing))))
    (, ,)
    (VP
      (VP (VBD turned)
        (NP (NN round))
        (S
          (VP (TO to)
            (VP (VB look)))))
      (, ,)
      (CC and)
      (VP (VBD saw)
        (NP (PRP him))
        (PP (IN with)
          (NP
            (NP (CD one) (NN hand))
            (PP (IN in)
              (NP
                (NP (DT a) (JJ small) (JJ wooden) (NN trough))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD ran)
                      (PP
                        (PP (IN along)
                          (NP (DT the) (NN wall)))
                        (, ,)
                        (CC and)
                        (PP (IN with)
                          (NP (DT the) (JJ other) (NN holding))))
                      (NP
                        (NP (DT the) (NN tumbler))
                        (PP (IN in)
                          (NP
                            (NP (DT a) (NN stream))
                            (PP (IN of)
                              (NP (NN water)))))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBD fell)
                              (PP (IN from)
                                (NP
                                  (NP (DT the) (NN side))
                                  (PP (IN of)
                                    (NP (DT the) (NN trough)))))
                              (PP (IN into)
                                (NP (PRP$ his) (NN bath))))))))))))))))
    (. .)))

nsubj(turned-9, Hector-1)
nsubj(saw-15, Hector-1)
vmod(turned-9, hearing-3)
det(splashing-5, a-4)
dobj(hearing-3, splashing-5)
conj_and(hearing-3, rushing-7)
vmod(turned-9, rushing-7)
root(ROOT-0, turned-9)
dobj(turned-9, round-10)
aux(look-12, to-11)
vmod(turned-9, look-12)
conj_and(turned-9, saw-15)
dobj(saw-15, him-16)
num(hand-19, one-18)
prep_with(saw-15, hand-19)
det(trough-24, a-21)
amod(trough-24, small-22)
amod(trough-24, wooden-23)
prep_in(hand-19, trough-24)
nsubj(ran-26, trough-24)
nsubj(ran-26', trough-24)
rcmod(trough-24, ran-26)
rcmod(trough-24, ran-26')
conj_and(ran-26, ran-26')
det(wall-29, the-28)
prep_along(ran-26, wall-29)
det(holding-35, the-33)
amod(holding-35, other-34)
prep_with(ran-26', holding-35)
det(tumbler-37, the-36)
dobj(ran-26, tumbler-37)
nsubj(fell-44, tumbler-37)
det(stream-40, a-39)
prep_in(tumbler-37, stream-40)
prep_of(stream-40, water-42)
rcmod(tumbler-37, fell-44)
det(side-47, the-46)
prep_from(fell-44, side-47)
det(trough-50, the-49)
prep_of(side-47, trough-50)
poss(bath-53, his-52)
prep_into(fell-44, bath-53)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (DT the) (NN tumbler))
          (VP (VBD was)
            (ADJP (JJ full)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD removed)
        (NP (PRP$ his) (NN hand))
        (PP (IN from)
          (NP (DT the) (NN trough)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN water))
      (VP (VBD ceased)
        (PP (TO to)
          (NP (NN overflow)))))
    (. .)))

advmod(full-5, When-1)
det(tumbler-3, the-2)
nsubj(full-5, tumbler-3)
cop(full-5, was-4)
advcl(removed-8, full-5)
nsubj(removed-8, he-7)
root(ROOT-0, removed-8)
poss(hand-10, his-9)
dobj(removed-8, hand-10)
det(trough-13, the-12)
prep_from(removed-8, trough-13)
det(water-17, the-16)
nsubj(ceased-18, water-17)
conj_and(removed-8, ceased-18)
prep_to(ceased-18, overflow-20)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD carried)
      (NP (DT the) (NN tumbler))
      (PP (TO to)
        (NP
          (NP (NNP Hector))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VBD drank))
                (, ,)
                (CC and)
                (VP (VBD said)
                  (SBAR
                    (S
                      (NP (DT the) (NN water))
                      (VP (VBD was)
                        (ADJP (JJ delicious))))))))))))
    (. .)))

nsubj(carried-2, He-1)
root(ROOT-0, carried-2)
det(tumbler-4, the-3)
dobj(carried-2, tumbler-4)
prep_to(carried-2, Hector-6)
nsubj(drank-9, Hector-6)
nsubj(said-12, Hector-6)
rcmod(Hector-6, drank-9)
rcmod(Hector-6, said-12)
conj_and(drank-9, said-12)
det(water-14, the-13)
nsubj(delicious-16, water-14)
cop(delicious-16, was-15)
ccomp(said-12, delicious-16)

(ROOT
  (S
    (S
      (NP (NNP Hector))
      (VP (MD could) (RB not)
        (VP (VB imagine)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT the) (JJ running) (NN water))
              (VP (VBD had)
                (VP (VBN got)
                  (ADVP (RB there)))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Willie))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP (PRP him))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP I))
                  (VP (VBP am)
                    (ADVP (RB now))
                    (VP (VBG going)
                      (S
                        (VP (TO to)
                          (VP (VB tell)
                            (NP (PRP$ my) (NN reader))))))))))))))
    (. .)))

nsubj(imagine-4, Hector-1)
aux(imagine-4, could-2)
neg(imagine-4, not-3)
root(ROOT-0, imagine-4)
advmod(got-10, how-5)
det(water-8, the-6)
amod(water-8, running-7)
nsubj(got-10, water-8)
aux(got-10, had-9)
ccomp(imagine-4, got-10)
advmod(got-10, there-11)
nsubj(had-15, Willie-14)
nsubj(tell-17, Willie-14)
conj_and(imagine-4, had-15)
aux(tell-17, to-16)
xcomp(had-15, tell-17)
dobj(tell-17, him-18)
dobj(going-23, what-19)
nsubj(tell-25, what-19)
nsubj(going-23, I-20)
aux(going-23, am-21)
advmod(going-23, now-22)
dep(tell-17, going-23)
aux(tell-25, to-24)
xcomp(going-23, tell-25)
poss(reader-27, my-26)
dobj(tell-25, reader-27)

(ROOT
  (S
    (NP
      (NP
        (NP (PRP$ His) (NN grandmother) (POS 's))
        (NN sovereign))
      (CC and)
      (NP (PRP$ his) (JJ own) (NNS hydraulics)))
    (VP (VBD had)
      (VP (VBN brought)
        (S
          (NP (PRP it))
          (ADVP (RB there)))))
    (. .)))

poss(grandmother-2, His-1)
poss(sovereign-4, grandmother-2)
nsubj(brought-10, sovereign-4)
poss(hydraulics-8, his-6)
amod(hydraulics-8, own-7)
conj_and(sovereign-4, hydraulics-8)
nsubj(brought-10, hydraulics-8)
aux(brought-10, had-9)
root(ROOT-0, brought-10)
dep(brought-10, it-11)
advmod(it-11, there-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBG thinking)
          (PP (IN for)
            (NP (DT some) (NN time)))
          (SBAR
            (SBAR
              (X
                (X (WP what))
                (NP (DT a) (NN pleasure)))
              (S
                (NP (PRP it))
                (VP (MD would)
                  (VP (VB be)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (NP
                            (NP (DT a) (NN stream))
                            (VP (VBG running)
                              (PP (IN through)
                                (NP (PRP$ his) (NN room))))))))))))
            (, ,)
            (CC and)
            (SBAR
              (WHNP
                (WHNP (WRB how) (RB much))
                (NP (NN labour)))
              (S
                (NP (PRP it))
                (VP (MD would)
                  (VP (VB save)
                    (NP (JJ poor) (JJ old) (NN Tibbie))))
                (: ;)
                (SBAR (IN for)
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (NP
                        (NP (DT no) (JJ light) (NN matter))
                        (PP (IN for)
                          (NP (PRP$ her) (JJ old) (NNS limbs)))
                        (S
                          (VP (TO to)
                            (VP (VB carry)
                              (NP (PDT all) (DT the) (NN water))
                              (PP (IN for)
                                (NP (PRP$ his) (NN bath)))
                              (PP (IN up)
                                (NP
                                  (NP (DT that) (JJ steep) (JJ narrow) (NN winding) (NN stair))
                                  (PP (TO to)
                                    (NP (PRP$ his) (NN room))))))))))))))))))
    (. .)))

nsubj(thinking-4, He-1)
aux(thinking-4, had-2)
aux(thinking-4, been-3)
root(ROOT-0, thinking-4)
det(time-7, some-6)
prep_for(thinking-4, time-7)
dep(pleasure-10, what-8)
det(pleasure-10, a-9)
dep(be-13, pleasure-10)
nsubj(be-13, it-11)
nsubj(have-15, it-11)
aux(be-13, would-12)
dep(thinking-4, be-13)
aux(have-15, to-14)
xcomp(be-13, have-15)
det(stream-17, a-16)
dobj(have-15, stream-17)
vmod(stream-17, running-18)
poss(room-21, his-20)
prep_through(running-18, room-21)
advmod(much-25, how-24)
dobj(save-29, much-25)
dep(much-25, labour-26)
nsubj(save-29, it-27)
aux(save-29, would-28)
dep(thinking-4, save-29)
conj_and(be-13, save-29)
amod(Tibbie-32, poor-30)
amod(Tibbie-32, old-31)
dobj(save-29, Tibbie-32)
mark(matter-39, for-34)
nsubj(matter-39, it-35)
cop(matter-39, was-36)
neg(matter-39, no-37)
amod(matter-39, light-38)
parataxis(save-29, matter-39)
poss(limbs-43, her-41)
amod(limbs-43, old-42)
prep_for(matter-39, limbs-43)
aux(carry-45, to-44)
vmod(matter-39, carry-45)
predet(water-48, all-46)
det(water-48, the-47)
dobj(carry-45, water-48)
poss(bath-51, his-50)
prep_for(carry-45, bath-51)
det(stair-57, that-53)
amod(stair-57, steep-54)
amod(stair-57, narrow-55)
nn(stair-57, winding-56)
prep_up(carry-45, stair-57)
poss(room-60, his-59)
prep_to(stair-57, room-60)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD reasoned)
      (SBAR (IN that)
        (S
          (SBAR (IN as)
            (S
              (NP (DT the) (NN well))
              (VP
                (VP (VBD rose))
                (CC and)
                (VP (VBD overflowed)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP$ its) (NN outlet))
                      (VP (VBD was)
                        (VP (VBN stopped)))))))))
          (, ,)
          (NP (PRP it))
          (VP (MD might)
            (VP (VB rise)
              (ADVP (CC yet)
                (RBR farther))
              (SBAR (IN if)
                (S
                  (NP (PRP it))
                  (VP (VBD were)
                    (VP
                      (ADVP (RB still))
                      (VBN confined)))))
              (: ;)
              (SBAR (IN for)
                (S
                  (NP (PRP$ its) (NN source))
                  (VP (VBD was)
                    (ADVP (RB probably))
                    (PP (IN in)
                      (NP
                        (NP
                          (NP (DT the) (NN heart))
                          (PP (IN of)
                            (NP (CD one)))
                          (PP (IN of)
                            (NP (DT the) (VBG surrounding) (NNS hills))))
                        (, ,)
                        (CC and)
                        (NP
                          (NP (NN water))
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (NNP confined))
                              (VP (MD will)
                                (ADVP (RB always))
                                (VP (VB rise)
                                  (ADJP (RB as) (JJ high))
                                  (PP (IN as)
                                    (NP (PRP$ its) (NN source))))))))))))))))))
    (. .)))

nsubj(reasoned-2, He-1)
root(ROOT-0, reasoned-2)
mark(rise-18, that-3)
mark(rose-7, as-4)
det(well-6, the-5)
nsubj(rose-7, well-6)
nsubj(overflowed-9, well-6)
advcl(rise-18, rose-7)
conj_and(rose-7, overflowed-9)
advcl(rise-18, overflowed-9)
advmod(stopped-14, when-10)
poss(outlet-12, its-11)
nsubjpass(stopped-14, outlet-12)
auxpass(stopped-14, was-13)
advcl(overflowed-9, stopped-14)
nsubj(rise-18, it-16)
aux(rise-18, might-17)
ccomp(reasoned-2, rise-18)
cc(farther-20, yet-19)
advmod(rise-18, farther-20)
mark(confined-25, if-21)
nsubjpass(confined-25, it-22)
auxpass(confined-25, were-23)
advmod(confined-25, still-24)
advcl(rise-18, confined-25)
mark(was-30, for-27)
poss(source-29, its-28)
nsubj(was-30, source-29)
advcl(rise-18, was-30)
parataxis(rise-18, was-30)
advmod(was-30, probably-31)
det(heart-34, the-33)
prep_in(was-30, heart-34)
prep_of(heart-34, one-36)
det(hills-40, the-38)
amod(hills-40, surrounding-39)
prep_of(heart-34, hills-40)
prep_in(was-30, water-43)
conj_and(heart-34, water-43)
tmod(rise-48, water-43)
advmod(rise-48, when-44)
nsubj(rise-48, confined-45)
aux(rise-48, will-46)
advmod(rise-48, always-47)
rcmod(water-43, rise-48)
advmod(high-50, as-49)
acomp(rise-48, high-50)
poss(source-53, its-52)
prep_as(rise-48, source-53)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (PP (IN after)
      (NP
        (NP (JJ much) (NN meditation))
        (PP (IN as) (TO to)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP it))
              (VP (MD could)
                (VP (VB be)
                  (VP (VBN accomplished)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (JJS simplest))
                        (CC and)
                        (NP
                          (ADJP (JJS least) (JJ expensive))
                          (NN manner))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD set)
      (PP (IN about)
        (NP (PRP it)))
      (SBAR (IN as)
        (S
          (VP (VBZ follows)))))
    (. .)))

advmod(set-22, Therefore-1)
amod(meditation-5, much-4)
prep_after(set-22, meditation-5)
advmod(accomplished-12, how-8)
nsubjpass(accomplished-12, it-9)
aux(accomplished-12, could-10)
auxpass(accomplished-12, be-11)
prepc_as_to(meditation-5, accomplished-12)
det(simplest-15, the-14)
prep_in(accomplished-12, simplest-15)
dep(expensive-18, least-17)
amod(manner-19, expensive-18)
prep_in(accomplished-12, manner-19)
conj_and(simplest-15, manner-19)
nsubj(set-22, he-21)
root(ROOT-0, set-22)
prep_about(set-22, it-24)
mark(follows-26, as-25)
advcl(set-22, follows-26)

(ROOT
  (S
    (NP
      (NP (NNP First))
      (PP (IN of)
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP he))
              (VP
                (VP (VBD cleared)
                  (PRT (RP away))
                  (NP
                    (NP (DT the) (NN floor))
                    (PP (IN about)
                      (NP (DT the) (NN well)))))
                (, ,)
                (CC and)
                (VP (VBD built)
                  (PRT (RP up))
                  (NP
                    (NP (DT the) (JJ circular) (NN wall))
                    (PP (IN of)
                      (NP
                        (NP
                          (NP (PRP it))
                          (NP (DT a) (NN foot)))
                        (CC or)
                        (ADVP
                          (NP (CD two))
                          (JJR higher))
                        (, ,)
                        (PP (IN with)
                          (NP (NNS stones)))))))))))))
    (VP (VBD picked)
      (PP
        (PP (IN from)
          (NP
            (NP (DT those))
            (VP (VBG lying) (IN about))))
        (, ,)
        (CC and)
        (PP (IN with)
          (NP
            (NP (NN mortar))
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP he))
                (VP (VBD made)
                  (NP (PRP himself)))))))))
    (. .)))

nsubj(picked-29, First-1)
nsubj(picked-29', First-1)
prep_of(First-1, all-3)
nsubj(cleared-5, he-4)
nsubj(built-14, he-4)
rcmod(all-3, cleared-5)
prt(cleared-5, away-6)
det(floor-8, the-7)
dobj(cleared-5, floor-8)
det(well-11, the-10)
prep_about(floor-8, well-11)
rcmod(all-3, built-14)
conj_and(cleared-5, built-14)
prt(built-14, up-15)
det(wall-18, the-16)
amod(wall-18, circular-17)
dobj(built-14, wall-18)
prep_of(wall-18, it-20)
det(foot-22, a-21)
dep(it-20, foot-22)
npadvmod(higher-25, two-24)
prep_of(wall-18, higher-25)
conj_or(it-20, higher-25)
prep_with(higher-25, stones-28)
root(ROOT-0, picked-29)
conj_and(picked-29, picked-29')
prep_from(picked-29, those-31)
vmod(those-31, lying-32)
dep(lying-32, about-33)
prep_with(picked-29', mortar-37)
dobj(made-40, mortar-37)
nsubj(made-40, he-39)
rcmod(mortar-37, made-40)
dobj(made-40, himself-41)

(ROOT
  (S
    (PP (IN By)
      (NP
        (NP (NNS means))
        (PP (IN of)
          (NP (DT a) (NN spirit-level)))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBD laid)
        (NP
          (NP (DT the) (JJ top) (NN layer))
          (PP (IN of)
            (NP
              (NP (NNS stones))
              (ADJP (RB quite) (JJ horizontal)))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD introduced)
        (PP (IN into)
          (NP (PRP it)))
        (NP
          (NP (JJ several) (NNS blocks))
          (PP (IN of)
            (NP
              (NP (NN wood))
              (PP (RB instead) (IN of)
                (NP (NNS stones))))))))
    (. .)))

det(spirit-level-5, a-4)
prep_by_means_of(laid-8, spirit-level-5)
nsubj(laid-8, he-7)
root(ROOT-0, laid-8)
det(layer-11, the-9)
amod(layer-11, top-10)
dobj(laid-8, layer-11)
prep_of(layer-11, stones-13)
advmod(horizontal-15, quite-14)
amod(stones-13, horizontal-15)
nsubj(introduced-19, he-18)
conj_and(laid-8, introduced-19)
prep_into(introduced-19, it-21)
amod(blocks-23, several-22)
dobj(introduced-19, blocks-23)
prep_of(blocks-23, wood-25)
prep_instead_of(wood-25, stones-28)

(ROOT
  (S
    (ADVP (RB Next))
    (NP (PRP he))
    (VP (VBD made)
      (NP (DT a) (JJ small) (JJ wooden) (NN frame))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (PRN (, ,)
          (PP (IN by)
            (NP
              (NP (JJ driving) (NNS spikes))
              (PP (IN between)
                (NP (DT the) (NNS stones)))))
          (, ,))
        (S
          (NP (PRP he))
          (VP (VBN fastened)
            (PP (TO to)
              (NP
                (NP (DT the) (NN opening))
                (PP (IN of)
                  (NP (DT the) (JJ underground) (NN passage)))))
            (, ,)
            (SBAR (RB so) (IN that)
              (S
                (NP
                  (NP (DT a) (JJ well-fitting) (NN piece))
                  (PP (IN of)
                    (NP (NN board))))
                (VP (MD could)
                  (VP
                    (VP (VB move)
                      (ADVP (RB up)
                        (CC and)
                        (RB down))
                      (PP (IN in)
                        (NP (PRP it)))
                      (, ,)
                      (PP (IN by)
                        (NP
                          (NP (NNS means))
                          (PP (IN of)
                            (NP (DT a) (JJ projecting) (NN handle))))))
                    (, ,)
                    (CC and)
                    (VP (VB be)
                      (NP (DT a)
                        (ADJP (RBR more) (JJ manageable))
                        (NN sluice))
                      (SBAR (IN than)
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (NP
                              (NP (NN hitherto))
                              (VP (VBN had)))))))))))))))
    (. .)))

advmod(made-3, Next-1)
nsubj(made-3, he-2)
root(ROOT-0, made-3)
det(frame-7, a-4)
amod(frame-7, small-5)
amod(frame-7, wooden-6)
dobj(made-3, frame-7)
dobj(fastened-19, which-9)
dep(fastened-19, by-11)
amod(spikes-13, driving-12)
pobj(by-11, spikes-13)
det(stones-16, the-15)
prep_between(spikes-13, stones-16)
nsubj(fastened-19, he-18)
dep(made-3, fastened-19)
det(opening-22, the-21)
prep_to(fastened-19, opening-22)
det(passage-26, the-24)
amod(passage-26, underground-25)
prep_of(opening-22, passage-26)
advmod(move-36, so-28)
mark(move-36, that-29)
det(piece-32, a-30)
amod(piece-32, well-fitting-31)
nsubj(move-36, piece-32)
prep_of(piece-32, board-34)
aux(move-36, could-35)
advcl(fastened-19, move-36)
advmod(move-36, up-37)
advmod(move-36, down-39)
conj_and(up-37, down-39)
prep_in(move-36, it-41)
det(handle-48, a-46)
amod(handle-48, projecting-47)
prep_by_means_of(move-36, handle-48)
cop(sluice-55, be-51)
det(sluice-55, a-52)
advmod(manageable-54, more-53)
amod(sluice-55, manageable-54)
advcl(fastened-19, sluice-55)
conj_and(move-36, sluice-55)
mark(had-58, than-56)
nsubj(had-58, he-57)
advcl(sluice-55, had-58)
dobj(had-58, hitherto-59)
vmod(hitherto-59, had-60)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD made)
        (NP (DT a) (JJ strong) (JJ wooden) (NN lid))
        (PP (TO to)
          (NP
            (NP (DT the) (NN mouth))
            (PP (IN of)
              (NP (DT the) (NN well))))))
      (, ,)
      (CC and)
      (VP (VBN screwed)
        (NP (PRP it))
        (ADVP (RB down)
          (PP (TO to)
            (NP
              (NP (DT the) (JJ wooden) (NNS blocks))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN built)
                      (PP (IN in)))))))))))
    (. .)))

advmod(made-3, Then-1)
nsubj(made-3, he-2)
nsubj(screwed-16, he-2)
root(ROOT-0, made-3)
det(lid-7, a-4)
amod(lid-7, strong-5)
amod(lid-7, wooden-6)
dobj(made-3, lid-7)
det(mouth-10, the-9)
prep_to(made-3, mouth-10)
det(well-13, the-12)
prep_of(mouth-10, well-13)
conj_and(made-3, screwed-16)
dobj(screwed-16, it-17)
advmod(screwed-16, down-18)
det(blocks-22, the-20)
amod(blocks-22, wooden-21)
prep_to(down-18, blocks-22)
prep_in(built-25, blocks-22)
nsubj(built-25, he-23)
aux(built-25, had-24)
rcmod(blocks-22, built-25)

(ROOT
  (S
    (PP (IN Through)
      (NP
        (NP (DT a) (NN hole))
        (PP (IN in)
          (NP (PRP it)))))
    (, ,)
    (S
      (ADVP (RB just))
      (ADJP (JJ large) (NN enough)))
    (, ,)
    (VP (VBD came)
      (NP
        (NP (DT the) (NN handle))
        (PP (IN of)
          (NP (DT the) (NN sluice)))))
    (. .)))

det(hole-3, a-2)
prep_through(came-11, hole-3)
prep_in(hole-3, it-5)
advmod(enough-9, just-7)
dep(enough-9, large-8)
ccomp(came-11, enough-9)
root(ROOT-0, came-11)
det(handle-13, the-12)
dobj(came-11, handle-13)
det(sluice-16, the-15)
prep_of(handle-13, sluice-16)

(ROOT
  (S
    (ADVP (RB Next))
    (, ,)
    (PP (IN in)
      (NP
        (NP (DT the) (NN middle))
        (PP (IN of)
          (NP (DT the) (NN cover)))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD made)
        (NP (DT a) (NN hole))
        (PP (IN with)
          (NP (DT a) (NN brace)
            (CC and)
            (NN centre-bit))))
      (, ,)
      (CC and)
      (VP
        (PP (IN into)
          (NP (PRP it)))
        (VBD drove)
        (NP
          (NP
            (NP (DT the) (NN end))
            (PP (IN of)
              (NP (DT a) (JJ strong) (NN iron) (NN pipe))))
          (, ,)
          (ADJP
            (ADJP (JJ fitting) (JJ tight))
            (, ,)
            (CC and)
            (ADJP (RB long) (JJ enough)))
          (S
            (VP (TO to)
              (VP (VB reach)
                (ADVP (RB almost))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN top))
                    (PP (IN of)
                      (NP (DT the) (NN vault)))))))))))
    (. .)))

advmod(made-11, Next-1)
det(middle-5, the-4)
prep_in(made-11, middle-5)
det(cover-8, the-7)
prep_of(middle-5, cover-8)
nsubj(made-11, he-10)
nsubj(drove-23, he-10)
root(ROOT-0, made-11)
det(hole-13, a-12)
dobj(made-11, hole-13)
det(brace-16, a-15)
prep_with(made-11, brace-16)
prep_with(made-11, centre-bit-18)
conj_and(brace-16, centre-bit-18)
prep_into(drove-23, it-22)
conj_and(made-11, drove-23)
det(end-25, the-24)
dobj(drove-23, end-25)
det(pipe-30, a-27)
amod(pipe-30, strong-28)
nn(pipe-30, iron-29)
prep_of(end-25, pipe-30)
amod(tight-33, fitting-32)
amod(end-25, tight-33)
advmod(enough-37, long-36)
amod(end-25, enough-37)
conj_and(tight-33, enough-37)
aux(reach-39, to-38)
vmod(end-25, reach-39)
advmod(reach-39, almost-40)
det(top-43, the-42)
prep_to(reach-39, top-43)
det(vault-46, the-45)
prep_of(top-43, vault-46)

(ROOT
  (S
    (S
      (ADVP (RB As) (RB soon)
        (SBAR (IN as)
          (S
            (NP (DT this))
            (VP (VBD was)
              (VP (VBN fixed))))))
      (NP (PRP he))
      (VP (VBD shut)
        (PRT (RP down))
        (NP (DT the) (NN sluice))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP (DT a) (JJ few) (NNS seconds)))
      (NP (DT the) (NN water))
      (VP (VBD was)
        (VP
          (VP (VBG falling)
            (PP (IN in)
              (NP (NNS sheets)))
            (PP (IN upon)
              (NP (PRP him))))
          (, ,)
          (CC and)
          (VP (VBG flooding)
            (NP
              (NP (DT the) (NN floor))
              (, ,)
              (VP (VBN dashed)
                (PRT (RP back))
                (PP (IN from)
                  (NP (DT the) (NN vault))))
              (, ,)
              (PP (IN against)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP it))
                    (VP (VBD rushed)
                      (PP (IN from)
                        (NP
                          (NP (DT the) (NN top))
                          (PP (IN of)
                            (NP (DT the) (NN pipe))))))))))))))
    (. .)))

advmod(soon-2, As-1)
advmod(shut-8, soon-2)
mark(fixed-6, as-3)
nsubjpass(fixed-6, this-4)
auxpass(fixed-6, was-5)
ccomp(soon-2, fixed-6)
nsubj(shut-8, he-7)
root(ROOT-0, shut-8)
prt(shut-8, down-9)
det(sluice-11, the-10)
dobj(shut-8, sluice-11)
det(seconds-17, a-15)
amod(seconds-17, few-16)
prep_in(falling-21, seconds-17)
det(water-19, the-18)
nsubj(falling-21, water-19)
nsubj(flooding-28, water-19)
aux(falling-21, was-20)
conj_and(shut-8, falling-21)
prep_in(falling-21, sheets-23)
prep_upon(falling-21, him-25)
conj_and(shut-8, flooding-28)
conj_and(falling-21, flooding-28)
det(floor-30, the-29)
dobj(flooding-28, floor-30)
vmod(floor-30, dashed-32)
prt(dashed-32, back-33)
det(vault-36, the-35)
prep_from(dashed-32, vault-36)
dobj(rushed-41, which-39)
nsubj(rushed-41, it-40)
prepc_against(floor-30, rushed-41)
det(top-44, the-43)
prep_from(rushed-41, top-44)
det(pipe-47, the-46)
prep_of(top-44, pipe-47)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBD was)
        (ADJP (JJ enough)
          (PP (IN for)
            (NP (DT the) (NN present))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD raised)
          (NP (DT the) (NN sluice)))
        (CC and)
        (VP (VBD let)
          (NP (DT the) (NN water) (NN escape))
          (ADVP (RB again) (RB below)))))
    (. .)))

nsubj(enough-3, This-1)
cop(enough-3, was-2)
root(ROOT-0, enough-3)
det(present-6, the-5)
prep_for(enough-3, present-6)
nsubj(raised-9, he-8)
nsubj(let-13, he-8)
parataxis(enough-3, raised-9)
det(sluice-11, the-10)
dobj(raised-9, sluice-11)
parataxis(enough-3, let-13)
conj_and(raised-9, let-13)
det(escape-16, the-14)
nn(escape-16, water-15)
dobj(let-13, escape-16)
advmod(below-18, again-17)
advmod(let-13, below-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ plain))
      (, ,)
      (PP (IN from)
        (NP
          (NP (DT the) (NN force))
          (SBAR
            (WHPP (IN with)
              (WHNP (WDT which)))
            (S
              (NP (DT the) (NN water))
              (VP (VBD struck)
                (NP (DT the) (NN vault))
                (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (VP (MD would)
                      (ADVP (RB yet))
                      (VP (VB rise)
                        (ADJP (RB much) (JJR higher))))))))))))
    (. .)))

nsubj(plain-3, It-1)
cop(plain-3, was-2)
root(ROOT-0, plain-3)
det(force-7, the-6)
prep_from(plain-3, force-7)
prep_with(struck-12, force-7)
det(water-11, the-10)
nsubj(struck-12, water-11)
rcmod(force-7, struck-12)
det(vault-14, the-13)
dobj(struck-12, vault-14)
mark(rise-20, that-16)
nsubj(rise-20, it-17)
aux(rise-20, would-18)
advmod(rise-20, yet-19)
ccomp(struck-12, rise-20)
advmod(higher-22, much-21)
acomp(rise-20, higher-22)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD scrambled)
        (ADVP (RB now))
        (PP (IN on)
          (NP
            (NP (DT the) (NN top))
            (PP (IN of)
              (NP (DT the) (NN vault)))))
        (, ,))
      (CC and)
      (PRN (, ,)
        (S
          (VP (VBG examining)
            (NP (DT the) (NNS ruins))))
        (, ,))
      (VP
        (ADVP (RB soon))
        (VBD saw)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP
              (NP (DT a) (NN pipe))
              (VP (VBN brought)
                (PRT (RP up))
                (PP (IN through)
                  (NP
                    (NP (DT the) (NN breach))
                    (PP (IN in)
                      (NP (DT the) (NN vault)))))))
            (VP (MD could)
              (VP (VB be)
                (VP (VBN led)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN hole))
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN wall))
                          (PP (IN of)
                            (NP (PRP$ his) (NN room)))))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (PRP he))
                          (VP (VBD had)
                            (VP (VBN shown)
                              (NP (PRP$ his) (NN father))
                              (PP (IN as)
                                (NP (DT a) (NN ventilator))))))))))))))))
    (. .)))

nsubj(scrambled-2, He-1)
nsubj(saw-18, He-1)
root(ROOT-0, scrambled-2)
advmod(scrambled-2, now-3)
det(top-6, the-5)
prep_on(scrambled-2, top-6)
det(vault-9, the-8)
prep_of(top-6, vault-9)
parataxis(scrambled-2, examining-13)
parataxis(saw-18, examining-13)
det(ruins-15, the-14)
dobj(examining-13, ruins-15)
advmod(saw-18, soon-17)
conj_and(scrambled-2, saw-18)
advmod(led-32, how-19)
det(pipe-21, a-20)
nsubjpass(led-32, pipe-21)
vmod(pipe-21, brought-22)
prt(brought-22, up-23)
det(breach-26, the-25)
prep_through(brought-22, breach-26)
det(vault-29, the-28)
prep_in(breach-26, vault-29)
aux(led-32, could-30)
auxpass(led-32, be-31)
ccomp(saw-18, led-32)
det(hole-35, the-34)
prep_to(led-32, hole-35)
dobj(shown-45, hole-35)
det(wall-38, the-37)
prep_in(hole-35, wall-38)
poss(room-41, his-40)
prep_of(wall-38, room-41)
nsubj(shown-45, he-43)
aux(shown-45, had-44)
rcmod(hole-35, shown-45)
poss(father-47, his-46)
dobj(shown-45, father-47)
det(ventilator-50, a-49)
prep_as(shown-45, ventilator-50)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (MD would) (RB not)
      (VP (VB have)
        (NP
          (NP (DT a) (JJ close) (NN pipe))
          (VP (VBG running)
            (PP (IN through)
              (NP (PRP$ his) (NN room)))))))
    (. .)))

cc(have-5, But-1)
nsubj(have-5, he-2)
aux(have-5, would-3)
neg(have-5, not-4)
root(ROOT-0, have-5)
det(pipe-8, a-6)
amod(pipe-8, close-7)
dobj(have-5, pipe-8)
vmod(pipe-8, running-9)
poss(room-12, his-11)
prep_through(running-9, room-12)

(ROOT
  (S
    (NP (EX There))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB little) (JJ good)
          (PP (IN in)
            (NP (DT that))))))
    (. .)))

expl(good-5, There-1)
aux(good-5, would-2)
cop(good-5, be-3)
advmod(good-5, little-4)
root(ROOT-0, good-5)
prep_in(good-5, that-7)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD could)
        (VP (VB have)
          (VP (VBN made)
            (NP
              (NP (DT a) (NN hole))
              (PP (IN in)
                (NP (PRP it))))
            (, ,)
            (PP (IN with)
              (NP (DT a) (NN stopper)))
            (, ,)
            (S
              (VP (TO to)
                (VP (VB let)
                  (NP (DT the) (NN water))
                  (PP (IN out)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP he))
                        (VP (VBD wanted)
                          (S
                            (VP (TO to)
                              (VP (VB use)
                                (NP (PRP it))))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (MD would)
        (VP (VB be)
          (ADJP (JJ awkward))
          (, ,)
          (SBAR (IN while)
            (S
              (NP (PDT all) (DT the) (NN pleasure))
              (VP (VBD lay)
                (PP (IN in)
                  (S
                    (VP (VBG seeing)
                      (NP (DT the) (NN water))
                      (SBAR (IN as)
                        (S
                          (NP (PRP it))
                          (VP (VBD ran)))))))))))))
    (. .)))

nsubj(made-4, He-1)
aux(made-4, could-2)
aux(made-4, have-3)
root(ROOT-0, made-4)
det(hole-6, a-5)
dobj(made-4, hole-6)
prep_in(hole-6, it-8)
det(stopper-12, a-11)
prep_with(made-4, stopper-12)
aux(let-15, to-14)
vmod(made-4, let-15)
det(water-17, the-16)
dobj(let-15, water-17)
advmod(wanted-21, when-19)
nsubj(wanted-21, he-20)
nsubj(use-23, he-20)
prepc_out(let-15, wanted-21)
aux(use-23, to-22)
xcomp(wanted-21, use-23)
dobj(use-23, it-24)
nsubj(awkward-30, that-27)
aux(awkward-30, would-28)
cop(awkward-30, be-29)
conj_but(made-4, awkward-30)
mark(lay-36, while-32)
predet(pleasure-35, all-33)
det(pleasure-35, the-34)
nsubj(lay-36, pleasure-35)
advcl(awkward-30, lay-36)
prepc_in(lay-36, seeing-38)
det(water-40, the-39)
dobj(seeing-38, water-40)
mark(ran-43, as-41)
nsubj(ran-43, it-42)
advcl(seeing-38, ran-43)

(ROOT
  (S
    (S
      (ADVP (RB Therefore))
      (NP (PRP he))
      (VP (VBD got)
        (NP (NNP Mr) (NNP Spelman))
        (S
          (VP (TO to)
            (VP (VB find)
              (NP (PRP him)))))
        (NP
          (NP (DT a) (JJ long) (JJ small) (NN pine) (NN tree))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP he))
              (VP
                (VP
                  (ADVP (RB first))
                  (VBD sawed)
                  (PP (IN in)
                    (NP (CD two))))
                (, ,)
                (VP (VBZ lengthways))
                (, ,)
                (CC and)
                (VP (VBD hollowed)
                  (PP (IN into)
                    (NP (CD two) (NNS troughs))))))))))
    (: ;)
    (S
      (ADVP (RB then))
      (, ,)
      (PP (IN by)
        (S
          (VP (VBG laying)
            (NP
              (NP (DT the) (JJ small) (NN end))
              (PP (IN of)
                (NP (CD one))))
            (PP (IN into)
              (NP
                (NP (DT the) (JJ wide) (NN end))
                (PP (IN of)
                  (NP (DT the) (JJ other))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD had)
        (NP (DT a) (NN spout))
        (ADVP (RB long) (RB enough))
        (S
          (VP (TO to)
            (VP
              (VP (VB reach)
                (PP (IN across)
                  (NP (DT the) (NN room))))
              (, ,)
              (CC and)
              (VP (VB go)
                (PP (IN through)
                  (NP
                    (NP (DT the) (NN wall))
                    (PP (IN on)
                      (NP (DT both) (NNS sides)))))))))))
    (. .)))

advmod(got-3, Therefore-1)
nsubj(got-3, he-2)
root(ROOT-0, got-3)
nn(Spelman-5, Mr-4)
dobj(got-3, Spelman-5)
aux(find-7, to-6)
vmod(got-3, find-7)
dobj(find-7, him-8)
det(tree-13, a-9)
amod(tree-13, long-10)
amod(tree-13, small-11)
nn(tree-13, pine-12)
dobj(got-3, tree-13)
dobj(sawed-18, tree-13)
nsubj(sawed-18, he-16)
nsubj(lengthways-22, he-16)
nsubj(hollowed-25, he-16)
advmod(sawed-18, first-17)
rcmod(tree-13, sawed-18)
prep_in(sawed-18, two-20)
rcmod(tree-13, lengthways-22)
conj_and(sawed-18, lengthways-22)
rcmod(tree-13, hollowed-25)
conj_and(sawed-18, hollowed-25)
num(troughs-28, two-27)
prep_into(hollowed-25, troughs-28)
advmod(had-48, then-30)
prepc_by(had-48, laying-33)
det(end-36, the-34)
amod(end-36, small-35)
dobj(laying-33, end-36)
prep_of(end-36, one-38)
det(end-42, the-40)
amod(end-42, wide-41)
prep_into(laying-33, end-42)
det(other-45, the-44)
prep_of(end-42, other-45)
nsubj(had-48, he-47)
parataxis(got-3, had-48)
det(spout-50, a-49)
dobj(had-48, spout-50)
advmod(enough-52, long-51)
advmod(had-48, enough-52)
aux(reach-54, to-53)
vmod(had-48, reach-54)
det(room-57, the-56)
prep_across(reach-54, room-57)
vmod(had-48, go-60)
conj_and(reach-54, go-60)
det(wall-63, the-62)
prep_through(go-60, wall-63)
det(sides-66, both-65)
prep_on(wall-63, sides-66)

(ROOT
  (S
    (NP (DT The) (JJ chief) (NN difficulty))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP (VB pierce)
            (NP (DT the) (JJ other) (NN wall))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (DT the) (NN mortar))
                (VP (VBD was)
                  (ADJP (RB very) (JJ hard)))))))))
    (. .)))

det(difficulty-3, The-1)
amod(difficulty-3, chief-2)
nsubj(was-4, difficulty-3)
nsubj(pierce-6, difficulty-3)
root(ROOT-0, was-4)
aux(pierce-6, to-5)
xcomp(was-4, pierce-6)
det(wall-9, the-7)
amod(wall-9, other-8)
dobj(pierce-6, wall-9)
mark(hard-16, for-11)
det(mortar-13, the-12)
nsubj(hard-16, mortar-13)
cop(hard-16, was-14)
advmod(hard-16, very-15)
advcl(pierce-6, hard-16)

(ROOT
  (S
    (NP (DT The) (NNS stones))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (SBAR (RB just)
      (S
        (S
          (NP (EX there))
          (VP (VBD were) (RB not)
            (ADJP (RB very) (JJ large))))
        (, ,)
        (CC and)
        (, ,)
        (PP (IN with)
          (NP
            (NP (NNP Sandy) (POS 's))
            (NN help)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD managed)
      (NP (PRP it)))
    (. .)))

det(stones-2, The-1)
nsubj(managed-21, stones-2)
advmod(managed-21, however-4)
advmod(were-8, just-6)
expl(were-8, there-7)
advcl(managed-21, were-8)
neg(were-8, not-9)
advmod(large-11, very-10)
acomp(were-8, large-11)
conj_and(were-8, with-15)
advcl(managed-21, with-15)
poss(help-18, Sandy-16)
prep_with(were-8, help-18)
nsubj(managed-21, he-20)
root(ROOT-0, managed-21)
dobj(managed-21, it-22)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ large) (NN end))
        (PP (IN of)
          (NP (CD one) (NN trough))))
      (VP (VBD was)
        (VP (VBN put)
          (PP (IN through)
            (NP
              (NP (DT the) (NN ventilator-hole))
              (, ,)
              (CC and)
              (NP
                (NP (DT the) (JJ small) (NN end))
                (PP (IN of)
                  (NP (DT the) (JJ other))))))
          (PP (IN through)
            (NP (DT the) (NN hole) (NN opposite))))))
    (: ;)
    (S
      (NP (PRP$ their) (JJ second) (NNS ends))
      (VP
        (VP (VBD met)
          (PP (IN in)
            (NP
              (NP (DT the) (NN middle))
              (, ,)
              (NP
                (NP (DT the) (NN one))
                (VP (VBG lying)
                  (PP (IN into)
                    (NP (DT the) (JJ other))))))))
        (, ,)
        (CC and)
        (VP (VBD were)
          (VP (VBN supported)
            (PP (IN at)
              (NP (DT the) (NN juncture)))
            (PP (IN by)
              (NP (DT a) (NN prop)))))))
    (. .)))

det(end-3, The-1)
amod(end-3, large-2)
nsubjpass(put-8, end-3)
num(trough-6, one-5)
prep_of(end-3, trough-6)
auxpass(put-8, was-7)
root(ROOT-0, put-8)
det(ventilator-hole-11, the-10)
prep_through(put-8, ventilator-hole-11)
det(end-16, the-14)
amod(end-16, small-15)
prep_through(put-8, end-16)
conj_and(ventilator-hole-11, end-16)
det(other-19, the-18)
prep_of(end-16, other-19)
det(opposite-23, the-21)
nn(opposite-23, hole-22)
prep_through(put-8, opposite-23)
poss(ends-27, their-25)
amod(ends-27, second-26)
nsubj(met-28, ends-27)
nsubjpass(supported-42, ends-27)
parataxis(put-8, met-28)
det(middle-31, the-30)
prep_in(met-28, middle-31)
det(one-34, the-33)
appos(middle-31, one-34)
vmod(one-34, lying-35)
det(other-38, the-37)
prep_into(lying-35, other-38)
auxpass(supported-42, were-41)
parataxis(put-8, supported-42)
conj_and(met-28, supported-42)
det(juncture-45, the-44)
prep_at(supported-42, juncture-45)
det(prop-48, a-47)
agent(supported-42, prop-48)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD filled)
      (PRT (RP up))
      (S
        (NP (DT the) (CD two) (NNS openings))
        (VP (VB round)
          (NP (DT the) (NNS ends))
          (PP (IN with)
            (NP
              (NP
                (ADJP (JJ lime)
                  (CC and)
                  (JJ small))
                (NNS stones))
              (, ,)
              (VP (VBG making)
                (NP (PRP them))
                (PP (IN as)
                  (S
                    (VP (VBG tidy)
                      (SBAR (IN as)
                        (S
                          (NP (PRP they))
                          (VP (MD could))))))))
              (, ,)
              (CC and)
              (NP
                (NP (JJ fitting) (JJ small) (NNS slides))
                (SBAR
                  (WHPP (IN by)
                    (WHNP (WDT which)))
                  (S
                    (NP (NNP Willie))
                    (VP (MD could)
                      (VP (VB close)
                        (PRT (RP up))
                        (NP
                          (NP (DT the) (NNS passages))
                          (PP (IN for)
                            (NP (DT the) (NN water)))))))))))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBD pleased)))))))
    (. .)))

nsubj(filled-2, They-1)
root(ROOT-0, filled-2)
prt(filled-2, up-3)
det(openings-6, the-4)
num(openings-6, two-5)
nsubj(round-7, openings-6)
ccomp(filled-2, round-7)
det(ends-9, the-8)
dobj(round-7, ends-9)
amod(stones-14, lime-11)
conj_and(lime-11, small-13)
amod(stones-14, small-13)
prep_with(round-7, stones-14)
prep_with(round-7, making-16)
conj_and(stones-14, making-16)
vmod(stones-14, making-16)
dobj(making-16, them-17)
prepc_as(making-16, tidy-19)
mark(could-22, as-20)
nsubj(could-22, they-21)
advcl(tidy-19, could-22)
amod(slides-27, fitting-25)
amod(slides-27, small-26)
prep_with(round-7, slides-27)
conj_and(stones-14, slides-27)
prep_by(close-32, slides-27)
nsubj(close-32, Willie-30)
aux(close-32, could-31)
rcmod(slides-27, close-32)
prt(close-32, up-33)
det(passages-35, the-34)
dobj(close-32, passages-35)
det(water-38, the-37)
prep_for(passages-35, water-38)
advmod(pleased-41, when-39)
nsubj(pleased-41, he-40)
advcl(round-7, pleased-41)

(ROOT
  (S
    (NP (NN Nothing))
    (VP (VBD remained)
      (X (CC but)
        (S
          (VP (TO to)
            (VP
              (VP (VB solder)
                (NP (DT a) (JJ lead) (NN pipe))
                (PP (IN into)
                  (NP
                    (NP (DT the) (NN top))
                    (PP (IN of)
                      (NP (DT the) (NN iron) (NN one))))))
              (, ,)
              (VP (VB guide)
                (NP (DT this) (JJ flexible) (NN tube))
                (PP (IN across)
                  (NP
                    (NP (DT the) (NNS ups)
                      (CC and)
                      (NNS downs))
                    (PP (IN of)
                      (NP (DT the) (NNS ruins))))))
              (, ,)
              (CC and)
              (VP (VB lay)
                (NP
                  (NP (DT the) (NN end))
                  (PP (IN of)
                    (NP (PRP it))))
                (PP (IN into)
                  (NP (DT the) (NN trough)))))))))
    (. .)))

nsubj(remained-2, Nothing-1)
root(ROOT-0, remained-2)
aux(solder-5, to-4)
dep(remained-2, solder-5)
det(pipe-8, a-6)
amod(pipe-8, lead-7)
dobj(solder-5, pipe-8)
det(top-11, the-10)
prep_into(solder-5, top-11)
det(one-15, the-13)
nn(one-15, iron-14)
prep_of(top-11, one-15)
dep(remained-2, guide-17)
conj_but(solder-5, guide-17)
det(tube-20, this-18)
amod(tube-20, flexible-19)
dobj(guide-17, tube-20)
det(ups-23, the-22)
prep_across(guide-17, ups-23)
prep_across(guide-17, downs-25)
conj_and(ups-23, downs-25)
det(ruins-28, the-27)
prep_of(ups-23, ruins-28)
dep(remained-2, lay-31)
conj_and(solder-5, lay-31)
det(end-33, the-32)
dobj(lay-31, end-33)
prep_of(end-33, it-35)
det(trough-38, the-37)
prep_into(lay-31, trough-38)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (NP (NNP Willie))
    (VP
      (VP (VBD took)
        (NP (PRP$ his) (NN stand))
        (PP (IN at)
          (NP (DT the) (NN sluice))))
      (, ,)
      (CC and)
      (VP (VBD told)
        (S
          (NP (NNP Sandy))
          (VP (TO to)
            (VP (VB scramble)
              (PRT (RP up))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN end))
                  (PP (IN of)
                    (NP (DT the) (JJ lead) (NN pipe)))))))))
      (, ,)
      (CC and)
      (VP (VBP shout)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN water))
            (VP (VBD began)
              (S
                (VP (TO to)
                  (VP (VB pour)
                    (PP (IN into)
                      (NP (DT the) (NN trough)))))))))))
    (. .)))

prep_at(took-4, length-2)
nsubj(took-4, Willie-3)
nsubj(told-12, Willie-3)
nsubj(shout-26, Willie-3)
root(ROOT-0, took-4)
poss(stand-6, his-5)
dobj(took-4, stand-6)
det(sluice-9, the-8)
prep_at(took-4, sluice-9)
conj_and(took-4, told-12)
dobj(told-12, Sandy-13)
nsubj(scramble-15, Sandy-13)
aux(scramble-15, to-14)
xcomp(told-12, scramble-15)
prt(scramble-15, up-16)
det(end-19, the-18)
prep_to(scramble-15, end-19)
det(pipe-23, the-21)
amod(pipe-23, lead-22)
prep_of(end-19, pipe-23)
conj_and(took-4, shout-26)
advmod(began-30, when-27)
det(water-29, the-28)
nsubj(began-30, water-29)
nsubj(pour-32, water-29)
advcl(shout-26, began-30)
aux(pour-32, to-31)
xcomp(began-30, pour-32)
det(trough-35, the-34)
prep_into(pour-32, trough-35)

(ROOT
  (S
    (NP (PRP$ His) (NN object))
    (VP (VBD was)
      (S
        (VP (TO to)
          (VP (VB find)
            (SBAR
              (WHADVP (WRB how) (RB far))
              (S
                (NP (DT the) (NN sluice))
                (VP (VBD required)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN shut)
                          (PRT (RP down))
                          (PP (IN in)
                            (NP (NN order)))
                          (S
                            (VP (TO to)
                              (VP (VB send)
                                (PRT (RP up))
                                (SBAR (RB just) (IN as)
                                  (S
                                    (NP
                                      (NP (JJ much) (NN water))
                                      (PP (IN as)
                                        (NP (DT the) (NN pipe))))
                                    (VP (MD could)
                                      (VP (VB deliver)))))))))))))))))))
    (. .)))

poss(object-2, His-1)
nsubj(was-3, object-2)
nsubj(find-5, object-2)
root(ROOT-0, was-3)
aux(find-5, to-4)
xcomp(was-3, find-5)
advmod(far-7, how-6)
advmod(required-10, far-7)
det(sluice-9, the-8)
nsubj(required-10, sluice-9)
nsubjpass(shut-13, sluice-9)
nsubj(send-18, sluice-9)
ccomp(find-5, required-10)
aux(shut-13, to-11)
auxpass(shut-13, be-12)
xcomp(required-10, shut-13)
prt(shut-13, down-14)
prep_in(shut-13, order-16)
aux(send-18, to-17)
xcomp(shut-13, send-18)
prt(send-18, up-19)
advmod(deliver-28, just-20)
mark(deliver-28, as-21)
amod(water-23, much-22)
nsubj(deliver-28, water-23)
det(pipe-26, the-25)
prep_as(water-23, pipe-26)
aux(deliver-28, could-27)
advcl(send-18, deliver-28)

(ROOT
  (S
    (ADVP (RBR More) (IN than))
    (NP (DT that))
    (VP (MD would)
      (VP (VB cause)
        (NP
          (NP
            (NP (DT a) (NN pressure))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (MD might)
                  (VP (VB strain))))))
          (, ,)
          (CC and)
          (NP
            (NP (RB perhaps) (NN burst))
            (, ,)
            (NP (PRP$ their) (NN apparatus))))))
    (. .)))

advmod(than-2, More-1)
advmod(cause-5, than-2)
nsubj(cause-5, that-3)
aux(cause-5, would-4)
root(ROOT-0, cause-5)
det(pressure-7, a-6)
dobj(cause-5, pressure-7)
nsubj(strain-10, pressure-7)
aux(strain-10, might-9)
rcmod(pressure-7, strain-10)
advmod(burst-14, perhaps-13)
dobj(cause-5, burst-14)
conj_and(pressure-7, burst-14)
nsubj(strain-10, burst-14)
poss(apparatus-17, their-16)
appos(burst-14, apparatus-17)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD pushed)
        (NP (DT the) (NN sluice))
        (ADVP (RB down)
          (NP (DT a) (RB little))))
      (, ,)
      (CC and)
      (VP (VBD waited)
        (NP (DT a) (NN moment))))
    (. .)))

nsubj(pushed-2, He-1)
nsubj(waited-10, He-1)
root(ROOT-0, pushed-2)
det(sluice-4, the-3)
dobj(pushed-2, sluice-4)
advmod(pushed-2, down-5)
det(little-7, a-6)
pobj(down-5, little-7)
conj_and(pushed-2, waited-10)
det(moment-12, a-11)
dobj(waited-10, moment-12)

(ROOT
  (S (`` ``)
    (PP (IN Is)
      (S
        (NP (PRP it))
        (VP (VBG coming)
          (ADVP (RB yet)))))
    (, ,)
    (VP (VB Sandy))
    (. ?) ('' '')))

nsubj(coming-4, it-3)
prepc_is(Sandy-7, coming-4)
advmod(coming-4, yet-5)
root(ROOT-0, Sandy-7)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD cried))
    (. .)))

nsubj(cried-2, he-1)
root(ROOT-0, cried-2)

(ROOT
  (SINV (`` ``)
    (FRAG
      (NP (RB Not) (DT a) (NN drop)))
    (, ,) ('' '')
    (VP (VBD shouted))
    (NP (NNP Sandy))
    (. .)))

neg(drop-4, Not-2)
det(drop-4, a-3)
dep(shouted-7, drop-4)
root(ROOT-0, shouted-7)
nsubj(shouted-7, Sandy-8)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (VBD pushed)
        (SBAR
          (S
            (NP (PRP it))
            (VP
              (ADVP
                (ADVP
                  (NP (DT a) (RB little))
                  (RBR further))
                (, ,)
                (CC and)
                (ADVP (RB then)))
              (VBD knew)
              (PP (IN by)
                (NP
                  (NP (DT the) (NN change))
                  (PP (IN in)
                    (NP (DT the) (NN gurgle)))))
              (SBAR
                (ADVP (RB below))
                (IN that)
                (S
                  (NP (DT the) (NN water))
                  (VP (VBD was)
                    (VP (VBG rising)
                      (PP (IN in)
                        (NP (DT the) (NN well))))))))))))
    (: ;)
    (CC and)
    (S
      (NP (PRP it))
      (ADVP (RB soon))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB spout)
              (PP (IN from)
                (NP
                  (NP (DT the) (NN hole))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN cover))
                      (SBAR
                        (WHPP (IN through)
                          (WHNP (WDT which)))
                        (S
                          (NP (DT the) (NN sluice-handle))
                          (VP (VBD came)
                            (PRT (RP up))))))))))))))
    (. .)))

nsubj(pushed-2, Willie-1)
root(ROOT-0, pushed-2)
nsubj(knew-10, it-3)
det(little-5, a-4)
npadvmod(further-6, little-5)
advmod(knew-10, further-6)
conj_and(further-6, then-9)
advmod(knew-10, then-9)
ccomp(pushed-2, knew-10)
det(change-13, the-12)
prep_by(knew-10, change-13)
det(gurgle-16, the-15)
prep_in(change-13, gurgle-16)
advmod(rising-22, below-17)
mark(rising-22, that-18)
det(water-20, the-19)
nsubj(rising-22, water-20)
aux(rising-22, was-21)
dep(knew-10, rising-22)
det(well-25, the-24)
prep_in(rising-22, well-25)
nsubj(began-30, it-28)
nsubj(spout-32, it-28)
advmod(began-30, soon-29)
conj_and(pushed-2, began-30)
aux(spout-32, to-31)
xcomp(began-30, spout-32)
det(hole-35, the-34)
prep_from(spout-32, hole-35)
det(cover-38, the-37)
prep_in(hole-35, cover-38)
prep_through(came-43, cover-38)
det(sluice-handle-42, the-41)
nsubj(came-43, sluice-handle-42)
rcmod(cover-38, came-43)
prt(came-43, up-44)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (VP (VBG coming))))
    (, ,) ('' '')
    (VP (VBD cried)
      (NP (NNP Sandy))
      (, ,)
      (PP (IN after)
        (NP (DT a) (NN pause)))
      (: ;) (`` ``)
      (FRAG
        (NP (RB not) (JJ much))
        (, ,)
        (ADVP (RB though))))
    (. .) ('' '')))

nsubj(coming-4, It-2)
aux(coming-4, 's-3)
ccomp(cried-7, coming-4)
root(ROOT-0, cried-7)
dobj(cried-7, Sandy-8)
det(pause-12, a-11)
prep_after(cried-7, pause-12)
neg(much-16, not-15)
dep(cried-7, much-16)
dep(much-16, though-18)

(ROOT
  (S
    (NP (NNP Down))
    (VP (VBD went)
      (NP (DT the) (NN sluice))
      (ADVP
        (NP (DT a) (RB little))
        (RBR further))
      (ADVP (RB still)))
    (. .)))

nsubj(went-2, Down-1)
root(ROOT-0, went-2)
det(sluice-4, the-3)
dobj(went-2, sluice-4)
det(little-6, a-5)
npadvmod(further-7, little-6)
advmod(went-2, further-7)
advmod(went-2, still-8)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (VP (VBG pouring))))
    (, ,) ('' '')
    (VP (VBD echoed)
      (NP
        (NP (DT the) (NN voice))
        (PP (IN of)
          (NP (NNP Sandy))))
      (PP (IN amongst)
        (NP (DT the) (NNS ruins)))
      (: ;) (`` ``)
      (FRAG
        (ADVP (RB as) (RB much) (RB as))
        (ADVP (RB ever))))
    (NP
      (NP (DT the) (NN pipe))
      (SBAR
        (S
          (VP (MD can)
            (VP (VB give))))))
    (. .)))

nsubj(pouring-4, It-2)
aux(pouring-4, 's-3)
ccomp(echoed-7, pouring-4)
root(ROOT-0, echoed-7)
det(voice-9, the-8)
dobj(echoed-7, voice-9)
prep_of(voice-9, Sandy-11)
det(ruins-14, the-13)
prep_amongst(echoed-7, ruins-14)
advmod(as-19, as-17)
advmod(as-19, much-18)
dep(echoed-7, as-19)
dep(as-19, ever-20)
det(pipe-22, the-21)
dep(echoed-7, pipe-22)
aux(give-24, can-23)
rcmod(pipe-22, give-24)

(ROOT
  (S
    (NP (PRP$ Its) (NN mouth))
    (VP (VBZ is)
      (ADJP (RB quite) (JJ full)))
    (. .) ('' '')))

poss(mouth-2, Its-1)
nsubj(full-5, mouth-2)
cop(full-5, is-3)
advmod(full-5, quite-4)
root(ROOT-0, full-5)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD raised)
      (NP (DT the) (NN sluice))
      (NP (DT a) (JJ little)))
    (. .)))

nsubj(raised-2, Willie-1)
root(ROOT-0, raised-2)
det(sluice-4, the-3)
iobj(raised-2, sluice-4)
det(little-6, a-5)
dobj(raised-2, little-6)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP (PRP it))
      (ADVP (RB now)))
    (. ?) ('' '')))

advmod(is-3, How-2)
root(ROOT-0, is-3)
nsubj(is-3, it-4)
advmod(is-3, now-5)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD bawled))
    (. .)))

nsubj(bawled-2, he-1)
root(ROOT-0, bawled-2)

(ROOT
  (SINV (`` ``)
    (FRAG
      (NP (NNP Less)))
    (, ,) ('' '')
    (VP (VBD cried))
    (NP (NNP Sandy))
    (. .)))

dep(cried-5, Less-2)
root(ROOT-0, cried-5)
nsubj(cried-5, Sandy-6)

(ROOT
  (S (IN So)
    (NP (NNP Willie))
    (VP
      (VP (VBD pushed)
        (NP (PRP it))
        (ADVP (RB back)
          (PP (TO to)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP it))
                (VP (VBD had)
                  (VP (VBN been)
                    (ADJP (JJ last)))))))))
      (, ,)
      (CC and)
      (VP (VBD made)
        (NP
          (NP (DT a) (NN notch))
          (PP (IN in)
            (NP (DT the) (NN handle))))
        (S
          (VP (TO to)
            (VP (VB know)
              (NP (DT the) (JJ right) (NN place))
              (ADVP (RB again)))))))
    (. .)))

dep(pushed-3, So-1)
nsubj(pushed-3, Willie-2)
nsubj(made-14, Willie-2)
root(ROOT-0, pushed-3)
dobj(pushed-3, it-4)
advmod(pushed-3, back-5)
advmod(last-11, where-7)
nsubj(last-11, it-8)
aux(last-11, had-9)
cop(last-11, been-10)
prepc_to(back-5, last-11)
conj_and(pushed-3, made-14)
det(notch-16, a-15)
dobj(made-14, notch-16)
det(handle-19, the-18)
prep_in(notch-16, handle-19)
aux(know-21, to-20)
vmod(made-14, know-21)
det(place-24, the-22)
amod(place-24, right-23)
dobj(know-21, place-24)
advmod(know-21, again-25)

(ROOT
  (S (IN So)
    (NP
      (NP (DT the) (NN water))
      (PP (IN from)
        (NP
          (NP (DT the) (NN Prior) (POS 's))
          (NNP Well))))
    (VP (VBD went)
      (S
        (VP (VBG careering)
          (PP (IN through)
            (NP
              (NP
                (NP (NNP Willie) (POS 's))
                (NN bed-chamber))
              (, ,)
              (ADVP
                (NP (DT a) (NN story))
                (RB high)))))))
    (. .)))

dep(went-9, So-1)
det(water-3, the-2)
nsubj(went-9, water-3)
det(Prior-6, the-5)
poss(Well-8, Prior-6)
prep_from(water-3, Well-8)
root(ROOT-0, went-9)
xcomp(went-9, careering-10)
poss(bed-chamber-14, Willie-12)
prep_through(careering-10, bed-chamber-14)
det(story-17, a-16)
npadvmod(high-18, story-17)
advmod(bed-chamber-14, high-18)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP he))
          (VP (VBD wanted)
            (S
              (VP (TO to)
                (VP (VB fill)
                  (NP (PRP$ his) (NN bath))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RB only))
        (S
          (VP (TO to)
            (VP (VB stop)
              (NP (DT the) (NN run))
              (PP (IN with)
                (NP (PRP$ his) (NN hand))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP it))
        (VP (VBD poured)
          (PP (IN over)
            (NP (DT the) (NNS sides)))
          (PP (IN into)
            (NP (PRP it)))))
      (: ;) (RB so)
      (S
        (S
          (NP (DT that) (NNP Tibbie))
          (VP (VBD was)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP
                    (ADVP (RB henceforth))
                    (VBN relieved)
                    (PP (IN of)
                      (NP (DT a) (JJ great) (NN labour)))
                    (, ,)
                    (SBAR (IN while)
                      (S
                        (NP
                          (NP (NNP Willie) (POS 's))
                          (NNS eyes))
                        (VP (VBD were)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (ADJP (JJ delighted)
                                  (PP (IN with)
                                    (NP (DT the) (NN vision))))))))))))))))
        (, ,)
        (CC and)
        (S
          (NP
            (NP (PRP$ his) (NNS ears))
            (PP (IN with)
              (NP
                (NP (DT the) (NNS sounds))
                (PP (IN of)
                  (NP (DT the) (NN water))))))
          (VP (VBG scampering)
            (PP (IN through)
              (NP (PRP$ his) (NN room)))))))
    (. .)))

advmod(wanted-3, When-1)
nsubj(wanted-3, he-2)
nsubj(fill-5, he-2)
advcl(had-10, wanted-3)
aux(fill-5, to-4)
xcomp(wanted-3, fill-5)
poss(bath-7, his-6)
dobj(fill-5, bath-7)
nsubj(had-10, he-9)
nsubj(stop-13, he-9)
root(ROOT-0, had-10)
advmod(had-10, only-11)
aux(stop-13, to-12)
xcomp(had-10, stop-13)
det(run-15, the-14)
dobj(stop-13, run-15)
poss(hand-18, his-17)
prep_with(stop-13, hand-18)
nsubj(poured-22, it-21)
conj_and(had-10, poured-22)
det(sides-25, the-24)
prep_over(poured-22, sides-25)
prep_into(poured-22, it-27)
advmod(poured-22, so-29)
det(Tibbie-31, that-30)
nsubj(was-32, Tibbie-31)
nsubjpass(relieved-36, Tibbie-31)
parataxis(poured-22, was-32)
aux(relieved-36, to-33)
auxpass(relieved-36, be-34)
advmod(relieved-36, henceforth-35)
xcomp(was-32, relieved-36)
det(labour-40, a-38)
amod(labour-40, great-39)
prep_of(relieved-36, labour-40)
mark(were-46, while-42)
poss(eyes-45, Willie-43)
nsubj(were-46, eyes-45)
nsubj(delighted-49, eyes-45)
advcl(relieved-36, were-46)
aux(delighted-49, to-47)
cop(delighted-49, be-48)
xcomp(were-46, delighted-49)
det(vision-52, the-51)
prep_with(delighted-49, vision-52)
poss(ears-56, his-55)
nsubj(scampering-63, ears-56)
det(sounds-59, the-58)
prep_with(ears-56, sounds-59)
det(water-62, the-61)
prep_of(sounds-59, water-62)
parataxis(poured-22, scampering-63)
conj_and(was-32, scampering-63)
poss(room-66, his-65)
prep_through(scampering-63, room-66)

(ROOT
  (S
    (PP
      (NP (DT An) (NN hour)
        (CC or)
        (RB so))
      (IN after))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (VP (VBG finishing)
            (PRT (RP off))
            (NP
              (NP (NN something))
              (PP (IN about)
                (NP
                  (NP (DT the) (NN mouth))
                  (PP (IN of)
                    (NP (DT the) (NN well))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD heard)
      (NP (PRP$ his) (NN father))
      (S
        (VP (VBG calling)
          (NP (PRP him)))))
    (. .)))

det(hour-2, An-1)
npadvmod(after-5, hour-2)
advmod(hour-2, so-4)
conj_or(hour-2, so-4)
npadvmod(after-5, so-4)
prep(heard-21, after-5)
mark(finishing-10, as-7)
nsubj(finishing-10, he-8)
aux(finishing-10, was-9)
advcl(heard-21, finishing-10)
prt(finishing-10, off-11)
dobj(finishing-10, something-12)
det(mouth-15, the-14)
prep_about(something-12, mouth-15)
det(well-18, the-17)
prep_of(mouth-15, well-18)
nsubj(heard-21, he-20)
root(ROOT-0, heard-21)
poss(father-23, his-22)
dobj(heard-21, father-23)
xcomp(heard-21, calling-24)
dobj(calling-24, him-25)

(ROOT
  (S (`` ``)
    (NP (NNP Willie) (, ,) (NNP Willie))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD shouted)))
      (, ,) (`` ``))
    (VP (VBZ is)
      (NP
        (NP (DT this)
          (ADJP (DT any) (JJR more)))
        (PP (IN of)
          (NP (PRP$ your) (JJ kelpie) (NN work)))))
    (. ?) ('' '')))

nn(Willie-4, Willie-2)
nsubj(more-14, Willie-4)
nsubj(shouted-8, he-7)
parataxis(more-14, shouted-8)
cop(more-14, is-11)
det(more-14, this-12)
det(more-14, any-13)
root(ROOT-0, more-14)
poss(work-18, your-16)
amod(work-18, kelpie-17)
prep_of(more-14, work-18)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (, ,)
        (NP (NN father))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
nsubj(What-2, it-4)
appos(it-4, father-6)

(ROOT
  (S
    (VP (VBN cried)
      (NP (NNP Willie))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD came)
            (S
              (VP (VBG bounding)
                (PP (TO to)
                  (NP (PRP him)))))))))
    (. .)))

root(ROOT-0, cried-1)
dobj(cried-1, Willie-2)
mark(came-6, as-4)
nsubj(came-6, he-5)
advcl(cried-1, came-6)
xcomp(came-6, bounding-7)
prep_to(bounding-7, him-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD needed)
      (NP (DT no) (NN reply))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD saw)
            (NP
              (NP (DT a) (JJ great) (NN pool))
              (PP (IN of)
                (NP (NN water))))
            (PP (IN about)
              (NP
                (NP (DT the) (JJ back) (NN door))
                (, ,)
                (VP (VBN fed)
                  (PP (IN by)
                    (NP (DT a) (JJ small) (NN stream)))
                  (PP (IN from)
                    (NP
                      (NP (DT the) (NN direction))
                      (PP (IN of)
                        (NP (DT the) (NN woodhouse))))))))))))
    (. .)))

nsubj(needed-2, He-1)
root(ROOT-0, needed-2)
neg(reply-4, no-3)
dobj(needed-2, reply-4)
advmod(saw-7, when-5)
nsubj(saw-7, he-6)
advcl(needed-2, saw-7)
det(pool-10, a-8)
amod(pool-10, great-9)
dobj(saw-7, pool-10)
prep_of(pool-10, water-12)
det(door-16, the-14)
amod(door-16, back-15)
prep_about(saw-7, door-16)
vmod(door-16, fed-18)
det(stream-22, a-20)
amod(stream-22, small-21)
agent(fed-18, stream-22)
det(direction-25, the-24)
prep_from(fed-18, direction-25)
det(woodhouse-28, the-27)
prep_of(direction-25, woodhouse-28)

(ROOT
  (S
    (NP (NNP Tibbie))
    (VP
      (VP (VBD had)
        (VP (VBN come)
          (PRT (RP out))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (VP (VBG looking)
          (PRT (RP on))
          (PP (IN in)
            (NP (NN dismay))))))
    (. .)))

nsubj(come-3, Tibbie-1)
nsubj(looking-8, Tibbie-1)
aux(come-3, had-2)
root(ROOT-0, come-3)
prt(come-3, out-4)
aux(looking-8, was-7)
conj_and(come-3, looking-8)
prt(looking-8, on-9)
prep_in(looking-8, dismay-11)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (NP (NNP Willie))
        (ADVP (RB again))
        (, ,)
        (ADJP (JJ sir))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD was)
      (VP (VBG saying)))
    (. .)))

nsubj(sir-7, That-2)
cop(sir-7, 's-3)
dep(sir-7, Willie-4)
advmod(sir-7, again-5)
ccomp(saying-12, sir-7)
nsubj(saying-12, she-10)
aux(saying-12, was-11)
root(ROOT-0, saying-12)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (ADVP (RB never))
    (VP (MD can)
      (VP (VB tell)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP he))
            (VP (MD 'll)
              (VP (VB be)
                (VP (VBG spouting)
                  (NP (DT that) (JJ weary) (NN water))
                  (PP (IN at)
                    (NP (PRP you))))))))))
    (. .) ('' '')))

nsubj(tell-5, You-2)
neg(tell-5, never-3)
aux(tell-5, can-4)
root(ROOT-0, tell-5)
advmod(spouting-10, where-6)
nsubj(spouting-10, he-7)
aux(spouting-10, 'll-8)
aux(spouting-10, be-9)
ccomp(tell-5, spouting-10)
det(water-13, that-11)
amod(water-13, weary-12)
dobj(spouting-10, water-13)
prep_at(spouting-10, you-15)

(ROOT
  (SINV
    (FRAG
      (NP
        (NP (NNP -LSB-) (NNP Illustration))
        (: :)
        (NP (NNP TIBBIE))
        (, ,)
        (NP
          (NP (NNP LOOKING) (NNP ON))
          (PP (IN IN)
            (NP (NNP DISMAY))))
        (, ,)))
    (VP (VBD SAID) (, ,) (`` ``)
      (S
        (NP (NNP THAT) (POS 'S))
        (VP (VB WILLIE)
          (NP (NNP AGAIN))))
      (. .) ('' ''))
    (NP (NNP -RSB-))))

nn(Illustration-2, -LSB--1)
dep(SAID-11, Illustration-2)
dep(Illustration-2, TIBBIE-4)
nn(ON-7, LOOKING-6)
appos(Illustration-2, ON-7)
prep_in(ON-7, DISMAY-9)
root(ROOT-0, SAID-11)
nsubj(WILLIE-16, THAT-14)
possessive(THAT-14, 'S-15)
ccomp(SAID-11, WILLIE-16)
dobj(WILLIE-16, AGAIN-17)
nsubj(SAID-11, -RSB--20)

(ROOT
  (S
    (S
      (NP (DT The) (JJ whole) (NN place))
      (VP (MD 'll)
        (VP (VB be)
          (VP (VBN bog)
            (ADVP (RB before) (RB long))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP
        (VP (MD 'll)
          (VP
            (VP (VB be)
              (VP
                (ADVP (DT all))
                (VBN turned)
                (PP (IN into)
                  (NP (NNS frogs)))))
            (, ,)
            (CC and)
            (VP (VB have)
              (NP (NN nothing))
              (S
                (VP (TO to)
                  (VP (VB do)))))))
        (CC but)
        (VP (VBP croak))))
    (. .)))

det(place-3, The-1)
amod(place-3, whole-2)
nsubjpass(bog-6, place-3)
aux(bog-6, 'll-4)
auxpass(bog-6, be-5)
root(ROOT-0, bog-6)
advmod(long-8, before-7)
advmod(bog-6, long-8)
nsubjpass(turned-15, we-11)
nsubj(have-20, we-11)
nsubj(croak-25, we-11)
aux(turned-15, 'll-12)
auxpass(turned-15, be-13)
advmod(turned-15, all-14)
conj_and(bog-6, turned-15)
prep_into(turned-15, frogs-17)
conj_and(bog-6, have-20)
conj_and(turned-15, have-20)
dobj(have-20, nothing-21)
aux(do-23, to-22)
vmod(have-20, do-23)
conj_and(bog-6, croak-25)
conj_but(turned-15, croak-25)

(ROOT
  (S
    (NP (DT That))
    (ADVP (RB well))
    (VP (MD 'll)
      (VP (VB be)
        (NP
          (NP (DT the) (NN ruin))
          (PP (IN of)
            (NP (PRP us))))
        (PP (DT all) (IN with)
          (NP (NN cold)
            (CC and)
            (NNS coughs)))))
    (. .) ('' '')))

nsubj(ruin-6, That-1)
advmod(ruin-6, well-2)
aux(ruin-6, 'll-3)
cop(ruin-6, be-4)
det(ruin-6, the-5)
root(ROOT-0, ruin-6)
prep_of(ruin-6, us-8)
dep(ruin-6, all-9)
prep_with(ruin-6, cold-11)
prep_with(ruin-6, coughs-13)
conj_and(cold-11, coughs-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (MD 'll)
        (VP (VB be)
          (ADJP (JJ glad) (RB enough))
          (PP (IN of)
            (NP
              (NP (PRP it) (NN to-night))
              (, ,)
              (NP (NNP Tibbie)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (, ,)
    (S
      (VP (VBG laughing)
        (ADVP (RB prophetically))))
    (. .)))

nsubj(glad-5, You-2)
aux(glad-5, 'll-3)
cop(glad-5, be-4)
ccomp(said-14, glad-5)
advmod(glad-5, enough-6)
dep(to-night-9, it-8)
prep_of(glad-5, to-night-9)
appos(to-night-9, Tibbie-11)
root(ROOT-0, said-14)
nsubj(said-14, Willie-15)
vmod(said-14, laughing-17)
advmod(laughing-17, prophetically-18)

(ROOT
  (FRAG
    (NP (`` ``) (DT A) (JJ likely) (NN story) (. !) ('' ''))))

det(story-4, A-2)
amod(story-4, likely-3)
root(ROOT-0, story-4)

(ROOT
  (S
    (NP (PRP she))
    (VP
      (VP (VBD returned))
      (, ,)
      (ADVP (RB quite))
      (VP (VBP cross)))
    (. .)))

nsubj(returned-2, she-1)
root(ROOT-0, returned-2)
advmod(cross-5, quite-4)
dep(returned-2, cross-5)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (MD 'll)
      (VP (VB be)
        (PP (IN into)
          (NP (DT the) (NN house)))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB stop)
                (NP (PRP it))))))))
    (. .) ('' '')))

nsubj(be-4, It-2)
aux(be-4, 'll-3)
root(ROOT-0, be-4)
det(house-7, the-6)
prep_into(be-4, house-7)
mark(stop-12, if-8)
nsubj(stop-12, you-9)
aux(stop-12, do-10)
neg(stop-12, n't-11)
advcl(be-4, stop-12)
dobj(stop-12, it-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (ADVP (RB soon))
        (VP (VB do)
          (NP (DT that)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(do-5, I-2)
aux(do-5, 'll-3)
advmod(do-5, soon-4)
ccomp(said-9, do-5)
dobj(do-5, that-6)
root(ROOT-0, said-9)
nsubj(said-9, Willie-10)

(ROOT
  (S
    (NP (CC Neither)
      (PRP he)
      (CC nor)
      (NNP Sandy))
    (VP (VBD had)
      (VP (VBN thought)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (MD would)
              (VP (VB become)
                (PP (IN of)
                  (NP (DT the) (NN water)))
                (SBAR (IN after)
                  (S
                    (NP (PRP it))
                    (VP (VBD had)
                      (VP (VBN traversed)
                        (NP (DT the) (NN chamber))))))))))))
    (. .)))

preconj(he-2, Neither-1)
nsubj(thought-6, he-2)
conj_nor(he-2, Sandy-4)
nsubj(thought-6, Sandy-4)
aux(thought-6, had-5)
root(ROOT-0, thought-6)
nsubj(become-9, what-7)
aux(become-9, would-8)
ccomp(thought-6, become-9)
det(water-12, the-11)
prep_of(become-9, water-12)
mark(traversed-16, after-13)
nsubj(traversed-16, it-14)
aux(traversed-16, had-15)
advcl(become-9, traversed-16)
det(chamber-18, the-17)
dobj(traversed-16, chamber-18)

(ROOT
  (S
    (S
      (ADVP (RB There))
      (NP (PRP it))
      (VP (VBD was)
        (VP
          (VP (VBG pouring)
            (PRT (RP down))
            (PP (IN from)
              (NP
                (NP (DT the) (NN end))
                (PP (IN of)
                  (NP (DT the) (JJ wooden) (NN spout))))))
          (, ,)
          (VP
            (ADVP (RB just))
            (VBG clearing)
            (NP
              (NP (DT the) (JJ tarred) (NN roof))
              (PP (IN of)
                (NP (DT the) (NN spiral) (NN stair)))))
          (, ,)
          (CC and)
          (VP (VBG plashing)
            (PP (IN on)
              (NP (DT the) (NN ground) (NN close)))
            (PP (TO to)
              (NP
                (NP (DT the) (NN foot))
                (PP (IN of)
                  (NP (PRP it)))))))))
    (: ;)
    (S
      (PP (IN in)
        (NP (PRP$ their) (NN eagerness)))
      (NP (PRP they))
      (VP (VBD had)
        (ADVP (RB never))
        (VP (VBN thought)
          (PP (IN of)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP it))
                (VP (MD would)
                  (VP (VB run)
                    (PP (TO to)
                      (NP (JJ next)))))))))))
    (. .)))

advmod(pouring-4, There-1)
nsubj(pouring-4, it-2)
nsubj(clearing-15, it-2)
nsubj(plashing-25, it-2)
aux(pouring-4, was-3)
root(ROOT-0, pouring-4)
prt(pouring-4, down-5)
det(end-8, the-7)
prep_from(pouring-4, end-8)
det(spout-12, the-10)
amod(spout-12, wooden-11)
prep_of(end-8, spout-12)
advmod(clearing-15, just-14)
conj_and(pouring-4, clearing-15)
det(roof-18, the-16)
amod(roof-18, tarred-17)
dobj(clearing-15, roof-18)
det(stair-22, the-20)
nn(stair-22, spiral-21)
prep_of(roof-18, stair-22)
conj_and(pouring-4, plashing-25)
det(close-29, the-27)
nn(close-29, ground-28)
prep_on(plashing-25, close-29)
det(foot-32, the-31)
prep_to(plashing-25, foot-32)
prep_of(foot-32, it-34)
poss(eagerness-38, their-37)
prep_in(thought-42, eagerness-38)
nsubj(thought-42, they-39)
aux(thought-42, had-40)
neg(thought-42, never-41)
parataxis(pouring-4, thought-42)
advmod(run-47, where-44)
nsubj(run-47, it-45)
aux(run-47, would-46)
prepc_of(thought-42, run-47)
prep_next_to(run-47, next-49)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (NP (NNP Willie))
    (VP (VBD was)
      (VP (VBN puzzled)))
    (. .)))

cc(puzzled-5, And-1)
advmod(puzzled-5, now-2)
nsubjpass(puzzled-5, Willie-3)
auxpass(puzzled-5, was-4)
root(ROOT-0, puzzled-5)

(ROOT
  (S
    (NP (NN Nothing))
    (VP (VBD was)
      (ADJP (JJR easier))
      (SBAR
        (SBAR (IN than)
          (S
            (VP (TO to)
              (VP (VB stop)
                (NP (PRP it))
                (PP (IN for)
                  (NP (DT the) (NN present)))))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (PP (IN of)
              (NP (NN course)))
            (NP (PRP he))
            (VP (VBD ran)
              (ADVP (IN at) (RB once))
              (S
                (VP (TO to)
                  (VP (VB do)))))))
        (: ;)
        (SBAR (CC but)
          (WHADVP (WRB where))
          (S
            (VP (VBD was)
              (S
                (NP (PRP he))
                (VP (TO to)
                  (VP (VB send)
                    (NP (PRP it)))))))
          (. ?))))))

nsubj(easier-3, Nothing-1)
cop(easier-3, was-2)
root(ROOT-0, easier-3)
mark(stop-6, than-4)
aux(stop-6, to-5)
advcl(easier-3, stop-6)
dobj(stop-6, it-7)
det(present-10, the-9)
prep_for(stop-6, present-10)
dobj(ran-16, which-12)
nsubj(do-20, which-12)
prep_of(ran-16, course-14)
nsubj(ran-16, he-15)
dep(stop-6, ran-16)
advmod(ran-16, at-17)
advmod(at-17, once-18)
aux(do-20, to-19)
xcomp(ran-16, do-20)
cc(was-24, but-22)
advmod(was-24, where-23)
dep(stop-6, was-24)
dobj(was-24, he-25)
nsubj(send-27, he-25)
aux(send-27, to-26)
xcomp(was-24, send-27)
dobj(send-27, it-28)

(ROOT
  (S
    (S
      (VP (VBG Thinking)
        (PRT (RP over))
        (NP (PRP it))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP he))
    (VP (VBD remembered)
      (SBAR (IN that)
        (S
          (S
            (SBAR (RB just)
              (S
                (PP (IN on)
                  (NP
                    (NP (DT the) (JJ other) (NN side))
                    (PP (IN of)
                      (NP (DT the) (NN wall)))))
                (VP (VBD was)
                  (NP
                    (NP (DT the) (NN stable))
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP
                          (NP (PRP$ his) (NN father) (POS 's))
                          (NNS horses))
                        (VP (VBD lived))))))))
            (, ,)
            (VP (VB close)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN parson) (POS 's))
                  (NN garden)))))
          (: ;)
          (CC and)
          (S
            (PP (IN in)
              (NP (DT the) (NN corner)))
            (, ,)
            (PP (IN at)
              (NP
                (NP (DT the) (NN foot))
                (PP (IN of)
                  (NP (DT the) (NN wall)))))
            (, ,)
            (VP (VBD was)
              (NP (DT a) (NN drain))))
          (: ;)
          (SBAR (RB so) (IN that)
            (S
              (NP
                (NP (DT all))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (S
                        (VP (TO to)
                          (VP (VB do))))))))
              (VP (VBD was)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB fit)
                        (NP (DT another) (NN spout))
                        (PP (TO to)
                          (NP
                            (NP (DT this))
                            (, ,)
                            (PP (IN at)
                              (NP
                                (NP (JJ right) (NNS angles))
                                (PP (TO to)
                                  (NP (PRP it)))))
                            (, ,))))
                      (CC and)
                      (VP (VB carry)
                        (NP (PRP it))
                        (PP (IN over)
                          (NP (DT the) (NN wall)))))))))))))
    (. .)))

dep(remembered-8, Thinking-1)
prt(Thinking-1, over-2)
dobj(Thinking-1, it-3)
advmod(remembered-8, however-5)
nsubj(remembered-8, he-7)
root(ROOT-0, remembered-8)
mark(close-28, that-9)
advmod(stable-20, just-10)
det(side-14, the-12)
amod(side-14, other-13)
prep_on(stable-20, side-14)
det(wall-17, the-16)
prep_of(side-14, wall-17)
cop(stable-20, was-18)
det(stable-20, the-19)
dep(close-28, stable-20)
advmod(lived-26, where-21)
poss(father-23, his-22)
poss(horses-25, father-23)
nsubj(lived-26, horses-25)
rcmod(stable-20, lived-26)
ccomp(remembered-8, close-28)
det(parson-31, the-30)
poss(garden-33, parson-31)
prep_to(close-28, garden-33)
det(corner-38, the-37)
prep_in(drain-49, corner-38)
det(foot-42, the-41)
prep_at(drain-49, foot-42)
det(wall-45, the-44)
prep_of(foot-42, wall-45)
cop(drain-49, was-47)
det(drain-49, a-48)
ccomp(remembered-8, drain-49)
conj_and(close-28, drain-49)
advmod(was-58, so-51)
mark(was-58, that-52)
nsubj(was-58, all-53)
nsubj(fit-60, all-53)
nsubj(carry-73, all-53)
nsubj(had-55, he-54)
nsubj(do-57, he-54)
rcmod(all-53, had-55)
aux(do-57, to-56)
xcomp(had-55, do-57)
ccomp(remembered-8, was-58)
conj_and(close-28, was-58)
aux(fit-60, to-59)
xcomp(was-58, fit-60)
det(spout-62, another-61)
dobj(fit-60, spout-62)
prep_to(fit-60, this-64)
amod(angles-68, right-67)
prep_at(this-64, angles-68)
prep_to(angles-68, it-70)
xcomp(was-58, carry-73)
conj_and(fit-60, carry-73)
dobj(carry-73, it-74)
det(wall-77, the-76)
prep_over(carry-73, wall-77)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP need) (RB n't)
        (VP (VB take)
          (ADVP
            (NP (DT any) (NN water))
            (RB up))
          (PP (IN for)
            (NP (PRP me)))
          (NP (NN tonight))
          (, ,)
          (ADVP (RB Tibby)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD went)
            (PP (IN in)
              (PP (TO to)
                (NP (NN supper))))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (ADVP (RB already))
                  (VP (VBN filled)
                    (NP (PRP$ his) (NN bath))))))))))
    (. .)))

nsubj(need-3, You-2)
ccomp(said-17, need-3)
neg(need-3, n't-4)
dep(need-3, take-5)
det(water-7, any-6)
npadvmod(up-8, water-7)
advmod(take-5, up-8)
prep_for(take-5, me-10)
dobj(take-5, tonight-11)
advmod(take-5, Tibby-13)
nsubj(said-17, he-16)
root(ROOT-0, said-17)
mark(went-21, as-19)
nsubj(went-21, he-20)
advcl(said-17, went-21)
prep(went-21, in-22)
pcomp(in-22, to-23)
pobj(to-23, supper-24)
mark(filled-30, for-26)
nsubj(filled-30, he-27)
aux(filled-30, had-28)
advmod(filled-30, already-29)
advcl(went-21, filled-30)
poss(bath-32, his-31)
dobj(filled-30, bath-32)

(ROOT
  (SINV (`` ``)
    (NP
      (NP (NN Nonsense))
      (, ,)
      (NP (NNP Willie)))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP (NNP Tibbie))
      (, ,)
      (RRC
        (ADVP (RB still))
        (PP (RB out) (IN of)
          (NP
            (NP (NN temper))
            (PP (RB because) (IN of)
              (NP
                (NP (DT the) (NN mess))
                (PP (IN at)
                  (NP (DT the) (NN door)))))))))
    (. .)))

dep(returned-7, Nonsense-2)
appos(Nonsense-2, Willie-4)
root(ROOT-0, returned-7)
nsubj(returned-7, Tibbie-8)
advmod(of-12, still-10)
advmod(of-12, out-11)
rcmod(Tibbie-8, of-12)
pobj(of-12, temper-13)
det(mess-17, the-16)
prep_because_of(temper-13, mess-17)
det(door-20, the-19)
prep_at(mess-17, door-20)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ Your) (NN papa))
      (VP (VBZ says)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD must)
              (VP (VB have)
                (NP (PRP$ your) (NN bath))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ my) (JJ poor) (JJ old) (NNS bones))
      (VP (MD must)
        (VP (VB ache)
          (PP (IN for) (`` `)
            (NP (NN t.))
            ('' ''))
          (SBAR (`` ``)
            (S
              (NP (DT The) (NN bath))
              (VP (VBZ 's)
                (VP (VBN filled)
                  (ADVP (RB already)))))))))
    (. .)))

poss(papa-3, Your-2)
nsubj(says-4, papa-3)
root(ROOT-0, says-4)
nsubj(have-7, you-5)
aux(have-7, must-6)
ccomp(says-4, have-7)
poss(bath-9, your-8)
dobj(have-7, bath-9)
poss(bones-15, my-12)
amod(bones-15, poor-13)
amod(bones-15, old-14)
nsubj(ache-17, bones-15)
aux(ache-17, must-16)
conj_and(says-4, ache-17)
prep_for(ache-17, t.-20)
det(bath-24, The-23)
nsubjpass(filled-26, bath-24)
auxpass(filled-26, 's-25)
ccomp(ache-17, filled-26)
advmod(filled-26, already-27)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD put)
          (PP (IN in)
            (NP (CD one) (JJ other) (NN pailful))))))
    (, ,)
    (NP (PRP it))
    (VP (MD 'll)
      (VP (VB run)
        (PRT (RP over))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBP get)
              (PP (IN into)
                (NP (PRP it))))))))
    (. .) ('' '')))

mark(put-3, If-1)
nsubj(put-3, you-2)
advcl(run-11, put-3)
num(pailful-7, one-5)
amod(pailful-7, other-6)
prep_in(put-3, pailful-7)
nsubj(run-11, it-9)
aux(run-11, 'll-10)
root(ROOT-0, run-11)
prt(run-11, over-12)
advmod(get-15, when-13)
nsubj(get-15, I-14)
advcl(run-11, get-15)
prep_into(get-15, it-17)

(ROOT
  (S (`` ``)
    (ADVP (RB Now))
    (, ,)
    (VP (VBP do) (RB n't)
      (VP
        (NP (PRP you))
        (S
          (VP (VB play)
            (NP (NNS tricks))
            (PP (IN with)
              (S
                (VP (VBG _)
                  (S
                    (NP (PRP me))
                    (NP (NNP _) (, ,) (NNP Willie))))))))))
    (. .)))

advmod(you-6, Now-2)
aux(you-6, do-4)
neg(you-6, n't-5)
root(ROOT-0, you-6)
dep(you-6, play-7)
dobj(play-7, tricks-8)
prepc_with(play-7, _-10)
nsubj(Willie-14, me-11)
nn(Willie-14, _-12)
xcomp(_-10, Willie-14)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (MD wo) (RB n't)
        (VP (VB have)
          (NP
            (NP (DT any) (JJR more))
            (PP (IN of)
              (NP (PRP$ your) (NN joking)))))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Tibbie))
    (. .)))

nsubj(have-4, I-1)
aux(have-4, wo-2)
neg(have-4, n't-3)
ccomp(returned-12, have-4)
det(more-6, any-5)
dobj(have-4, more-6)
poss(joking-9, your-8)
prep_of(more-6, joking-9)
root(ROOT-0, returned-12)
nsubj(returned-12, Tibbie-13)

(ROOT
  (S
    (S
      (S
        (S
          (VP (VBN Nettled)
            (PP (IN at)
              (NP
                (NP (DT the) (NN way))
                (SBAR
                  (S
                    (NP (PRP she))
                    (VP (VBD took)
                      (NP
                        (NP (DT the) (NN information))
                        (SBAR
                          (WHPP (IN with)
                            (WHNP (WDT which)))
                          (S
                            (NP (PRP he))
                            (VP (VBD had)
                              (VP (VBN hoped)
                                (S
                                  (VP (TO to)
                                    (VP (VB please)
                                      (NP (PRP her)))))))))))))))))
        (, ,)
        (NP (PRP he))
        (VP (VBD left)
          (S
            (NP (PRP her))
            (VP (TO to)
              (VP (VB carry)
                (PRT (RP up))
                (NP
                  (NP (PRP$ her) (NN pail))
                  (PP (IN of)
                    (NP (NN water)))))))))
      (: ;)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP (DT the) (JJ last)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD thanked)
        (NP (PRP him))
        (ADVP (RB very) (RB kindly))
        (NP (DT the) (JJ next) (NN day))))
    (. .)))

vmod(left-19, Nettled-1)
det(way-4, the-3)
prep_at(Nettled-1, way-4)
nsubj(took-6, she-5)
rcmod(way-4, took-6)
det(information-8, the-7)
dobj(took-6, information-8)
prep_with(hoped-13, information-8)
nsubj(hoped-13, he-11)
nsubj(please-15, he-11)
aux(hoped-13, had-12)
rcmod(information-8, hoped-13)
aux(please-15, to-14)
xcomp(hoped-13, please-15)
dobj(please-15, her-16)
nsubj(left-19, he-18)
root(ROOT-0, left-19)
dobj(left-19, her-20)
nsubj(carry-22, her-20)
aux(carry-22, to-21)
xcomp(left-19, carry-22)
prt(carry-22, up-23)
poss(pail-25, her-24)
dobj(carry-22, pail-25)
prep_of(pail-25, water-27)
nsubj(last-33, it-30)
cop(last-33, was-31)
det(last-33, the-32)
conj_but(left-19, last-33)
nsubj(thanked-37, she-36)
conj_and(left-19, thanked-37)
dobj(thanked-37, him-38)
advmod(kindly-40, very-39)
advmod(thanked-37, kindly-40)
det(day-43, the-41)
amod(day-43, next-42)
tmod(thanked-37, day-43)

(ROOT
  (S
    (NP (DT The) (JJ only) (VBG remaining) (NN question))
    (VP (VBD was)
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (TO to)
            (VP (VB get)
              (ADJP (JJ rid))
              (PP (IN of)
                (NP (DT the) (NN bath-water))))))))
    (. .)))

det(question-4, The-1)
amod(question-4, only-2)
amod(question-4, remaining-3)
nsubj(was-5, question-4)
nsubj(rid-9, question-4)
root(ROOT-0, was-5)
advmod(rid-9, how-6)
aux(rid-9, to-7)
dep(rid-9, get-8)
ccomp(was-5, rid-9)
xcomp(was-5, rid-9)
det(bath-water-12, the-11)
prep_of(rid-9, bath-water-12)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (ADVP (RB soon))
    (VP (VBD contrived)
      (NP (DT a) (NN sink))
      (PP (IN on)
        (NP
          (NP (DT the) (JJ top) (NN step))
          (PP (IN of)
            (NP (DT the) (NN stair)))))
      (PP (IN outside)
        (NP
          (NP (DT the) (NN door))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (ADJP
                  (NP (DT a) (RB little))
                  (JJR higher)
                  (PP (IN than)
                    (NP
                      (NP (DT the) (NN wall))
                      (PP (IN of)
                        (NP (DT the) (NN stable-yard))))))))))))
    (. .)))

cc(contrived-4, But-1)
nsubj(contrived-4, he-2)
advmod(contrived-4, soon-3)
root(ROOT-0, contrived-4)
det(sink-6, a-5)
dobj(contrived-4, sink-6)
det(step-10, the-8)
amod(step-10, top-9)
prep_on(contrived-4, step-10)
det(stair-13, the-12)
prep_of(step-10, stair-13)
det(door-16, the-15)
prep_outside(contrived-4, door-16)
nsubj(higher-22, door-16)
cop(higher-22, was-19)
det(little-21, a-20)
npadvmod(higher-22, little-21)
rcmod(door-16, higher-22)
det(wall-25, the-24)
prep_than(higher-22, wall-25)
det(stable-yard-28, the-27)
prep_of(wall-25, stable-yard-28)

(ROOT
  (S
    (PP (IN From)
      (NP (RB there)))
    (NP (DT a) (JJ short) (NN pipe))
    (VP (VBD was)
      (ADJP (JJ sufficient)
        (S
          (VP (TO to)
            (VP (VB carry)
              (NP (DT that) (NN water))
              (ADVP (RB also))
              (PRT (RP over))
              (PP (IN into)
                (NP (DT the) (NN drain))))))))
    (. .)))

prep(sufficient-7, From-1)
pobj(From-1, there-2)
det(pipe-5, a-3)
amod(pipe-5, short-4)
nsubj(sufficient-7, pipe-5)
nsubj(carry-9, pipe-5)
cop(sufficient-7, was-6)
root(ROOT-0, sufficient-7)
aux(carry-9, to-8)
xcomp(sufficient-7, carry-9)
det(water-11, that-10)
dobj(carry-9, water-11)
advmod(carry-9, also-12)
prt(carry-9, over-13)
det(drain-16, the-15)
prep_into(carry-9, drain-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD may)
      (VP (VB mention) (, ,)
        (SBAR (IN that)
          (S
            (S
              (SBAR (IN although)
                (S
                  (NP (DT a) (JJ severe) (NN winter))
                  (VP (VBD followed))))
              (, ,)
              (NP
                (NP (DT the) (NN Prior) (POS 's))
                (NNP Well))
              (ADVP (RB never))
              (VP (VBD froze)))
            (: ;)
            (CC and)
            (S
              (NP (DT that))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (PRP they))
                  (VP (VBD were)
                    (ADVP (RB always))
                    (ADJP (CC either)
                      (ADJP (JJ empty))
                      (, ,)
                      (CC or)
                      (ADJP (JJ full)
                        (PP (IN of)
                          (S
                            (ADVP (RB _))
                            (VP (VBG running)
                              (NP (JJ _) (NN water))))))))))
              (, ,)
              (NP (DT the) (NNS pipes))
              (ADVP (RB never))
              (VP
                (VP (VBD froze))
                (, ,)
                (CC and)
                (ADVP (RB consequently))
                (VP
                  (ADVP (RB never))
                  (VBP burst))))))))
    (. .)))

nsubj(mention-3, I-1)
aux(mention-3, may-2)
root(ROOT-0, mention-3)
mark(froze-17, that-5)
mark(followed-10, although-6)
det(winter-9, a-7)
amod(winter-9, severe-8)
nsubj(followed-10, winter-9)
advcl(froze-17, followed-10)
det(Prior-13, the-12)
poss(Well-15, Prior-13)
nsubj(froze-17, Well-15)
neg(froze-17, never-16)
ccomp(mention-3, froze-17)
nsubj(froze-40, that-20)
nsubj(burst-45, that-20)
mark(empty-27, as-22)
nsubj(empty-27, they-23)
nsubj(full-30, they-23)
cop(empty-27, were-24)
advmod(empty-27, always-25)
preconj(empty-27, either-26)
advcl(froze-40, empty-27)
conj_or(empty-27, full-30)
advcl(froze-40, full-30)
advmod(running-33, _-32)
prepc_of(full-30, running-33)
amod(water-35, _-34)
dobj(running-33, water-35)
det(pipes-38, the-37)
nsubj(froze-40, pipes-38)
neg(froze-40, never-39)
ccomp(mention-3, froze-40)
conj_and(froze-17, froze-40)
advmod(burst-45, consequently-43)
neg(burst-45, never-44)
conj_and(froze-17, burst-45)
conj_and(froze-40, burst-45)

(ROOT
  (NP (NNP CHAPTER) (NNP XVI) (. .)))

nn(XVI-2, CHAPTER-1)
root(ROOT-0, XVI-2)

(ROOT
  (NP (NNP HECTOR) (NNP HINTS) (NNP AT) (NNP A) (NNP DISCOVERY) (. .)))

nn(DISCOVERY-5, HECTOR-1)
nn(DISCOVERY-5, HINTS-2)
nn(DISCOVERY-5, AT-3)
nn(DISCOVERY-5, A-4)
root(ROOT-0, DISCOVERY-5)

(ROOT
  (S
    (PP
      (NP (DT The) (JJ next) (NN day))
      (IN after)
      (NP
        (NP (NNP Hector) (POS 's))
        (NN visit)))
    (, ,)
    (NP (NNP Willie))
    (VP (VBD went)
      (S
        (VP (TO to)
          (VP (VB see)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP he))
                (VP
                  (VP (VBD was))
                  (, ,)
                  (CC and)
                  (VP (VBD found)
                    (S
                      (NP (PRP him))
                      (ADJP (JJR better)))))))))))
    (. .)))

det(day-3, The-1)
amod(day-3, next-2)
npadvmod(went-10, day-3)
poss(visit-7, Hector-5)
prep_after(went-10, visit-7)
nsubj(went-10, Willie-9)
nsubj(see-12, Willie-9)
root(ROOT-0, went-10)
aux(see-12, to-11)
xcomp(went-10, see-12)
advmod(was-15, how-13)
nsubj(was-15, he-14)
nsubj(found-18, he-14)
ccomp(see-12, was-15)
ccomp(see-12, found-18)
conj_and(was-15, found-18)
nsubj(better-20, him-19)
xcomp(found-18, better-20)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB certainly))
      (VP (VBP am)
        (ADJP (JJR better))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD said)))
      (, ,) (`` ``))
    (CC and)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ 's)
            (ADJP (JJR more)))))
      (, ,)
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN got)
          (NP
            (NP (DT a) (JJ strange) (NN feeling))
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (SBAR
                    (WHNP
                      (WHNP (WDT that) (NN drink))
                      (PP (IN of)
                        (NP (NN water))))
                    (S
                      (NP (PRP you))
                      (VP (VBD gave)
                        (NP (PRP me))
                        (NP (NN yesterday))
                        (SBAR (IN that)
                          (S
                            (VP (VBZ has)
                              (VP (VBN done)
                                (NP (PRP it))))))))))))))))
    (. .)))

nsubj(better-5, I-2)
advmod(better-5, certainly-3)
cop(better-5, am-4)
root(ROOT-0, better-5)
nsubj(said-9, he-8)
dep(better-5, said-9)
nsubj(more-15, what-13)
cop(more-15, 's-14)
advcl(got-19, more-15)
nsubj(got-19, I-17)
aux(got-19, 've-18)
conj_and(better-5, got-19)
det(feeling-22, a-20)
amod(feeling-22, strange-21)
dobj(got-19, feeling-22)
nsubj(was-24, it-23)
rcmod(feeling-22, was-24)
det(drink-26, that-25)
dobj(gave-30, drink-26)
nsubj(done-35, drink-26)
prep_of(drink-26, water-28)
nsubj(gave-30, you-29)
ccomp(was-24, gave-30)
dobj(gave-30, me-31)
tmod(gave-30, yesterday-32)
mark(done-35, that-33)
aux(done-35, has-34)
ccomp(gave-30, done-35)
dobj(done-35, it-36)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG coming)
        (PRT (RP up))
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT some) (JJR more))
                (PP (IN of)
                  (NP (PRP it))))
              (PP (IN in)
                (NP (DT the) (NN evening)))
              (, ,)
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (MD 'll)
                    (VP (VB give)
                      (NP (PRP it))
                      (NP (PRP me)))))))))))
    (. .) ('' '')))

nsubj(coming-3, I-1)
nsubj(have-6, I-1)
aux(coming-3, 'm-2)
root(ROOT-0, coming-3)
prt(coming-3, up-4)
aux(have-6, to-5)
xcomp(coming-3, have-6)
det(more-8, some-7)
dobj(have-6, more-8)
prep_of(more-8, it-10)
det(evening-13, the-12)
prep_in(have-6, evening-13)
mark(give-18, if-15)
nsubj(give-18, you-16)
aux(give-18, 'll-17)
advcl(have-6, give-18)
iobj(give-18, it-19)
dobj(give-18, me-20)

(ROOT
  (SINV (`` ``)
    (S
      (SBAR (IN As)
        (S
          (NP
            (NP (RB much))
            (PP (IN of)
              (NP
                (NP (PRP it))
                (PP (IN as)
                  (S
                    (VP (VBG _)
                      (S
                        (NP (PRP you))
                        (ADJP (JJ _)))))))))
          (VP (MD can)
            (VP (VB drink)))))
      (, ,)
      (ADVP (RB Hector))
      (, ,)
      (VP (VBD anyhow)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

mark(drink-11, As-2)
nsubj(drink-11, much-3)
prep_of(much-3, it-5)
prepc_as(it-5, _-7)
nsubj(_-9, you-8)
xcomp(_-7, _-9)
aux(drink-11, can-10)
advcl(anyhow-15, drink-11)
advmod(anyhow-15, Hector-13)
ccomp(said-18, anyhow-15)
root(ROOT-0, said-18)
nsubj(said-18, Willie-19)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD wo) (RB n't)
      (VP (VB drink)
        (S
          (VP (VBG _)
            (S
              (NP (PRP$ my) (JJ _) (NN cow))
              (ADJP (JJ dry)))))))
    (. .) ('' '')))

nsubj(drink-5, You-2)
aux(drink-5, wo-3)
neg(drink-5, n't-4)
root(ROOT-0, drink-5)
xcomp(drink-5, _-6)
poss(cow-9, my-7)
amod(cow-9, _-8)
nsubj(dry-10, cow-9)
xcomp(_-6, dry-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP wonder)
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (MD could)
              (VP (VB be)
                (NP (DT the) (NN water))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Hector))
      (, ,)
      (NP (NN musingly)))
    (. .)))

nsubj(wonder-3, I-2)
ccomp(said-12, wonder-3)
mark(water-9, if-4)
nsubj(water-9, it-5)
aux(water-9, could-6)
cop(water-9, be-7)
det(water-9, the-8)
advcl(wonder-3, water-9)
root(ROOT-0, said-12)
nsubj(said-12, Hector-13)
appos(Hector-13, musingly-15)

(ROOT
  (S (`` ``)
    (NP (PRP$ My) (NN father))
    (VP (VBZ says)
      (NP
        (NP (NNS people))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB think)
                (S
                  (NP (PRP it))
                  (VP (VBN cured)
                    (NP (PRP them))))))))))
    (. .)))

poss(father-3, My-2)
nsubj(says-4, father-3)
root(ROOT-0, says-4)
dobj(says-4, people-5)
vmod(people-5, used-6)
aux(think-8, to-7)
xcomp(used-6, think-8)
nsubj(cured-10, it-9)
dep(think-8, cured-10)
dobj(cured-10, them-11)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBD was)
        (NP
          (NP (DT some) (NNS hundreds))
          (PP (IN of)
            (NP
              (NP (NNS years))
              (ADVP (IN ago)))))))
    (: ;)
    (S (CC but)
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBD did)
            (ADVP (RB so))
            (ADVP (RB then)))))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP (PRP it))
              (VP (MD should) (RB n't))))
          (ADVP (RB now)))))
    (. .)))

nsubj(hundreds-4, That-1)
cop(hundreds-4, was-2)
det(hundreds-4, some-3)
root(ROOT-0, hundreds-4)
prep_of(hundreds-4, years-6)
advmod(years-6, ago-7)
cc(see-19, but-9)
mark(did-12, if-10)
nsubj(did-12, it-11)
advcl(see-19, did-12)
advmod(did-12, so-13)
advmod(did-12, then-14)
nsubj(see-19, I-16)
aux(see-19, do-17)
neg(see-19, n't-18)
parataxis(hundreds-4, see-19)
advmod(should-22, why-20)
nsubj(should-22, it-21)
advcl(see-19, should-22)
neg(should-22, n't-23)
advmod(see-19, now-24)

(ROOT
  (S
    (S
      (NP (PRP$ My) (NN mother))
      (VP (VBZ is)
        (ADVP (RB certainly))
        (ADJP (JJR better))))
    (, ,)
    (CC but)
    (S
      (SBAR (IN whether)
        (S
          (NP (DT that))
          (VP (VBD began)
            (SBAR (IN since)
              (S
                (NP (PRP we))
                (VP (VBD found)
                  (NP (DT the) (NN well))))))))
      (, ,)
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB be)
          (ADJP (RB very) (JJ sure)))))
    (. .)))

poss(mother-2, My-1)
nsubj(better-5, mother-2)
cop(better-5, is-3)
advmod(better-5, certainly-4)
root(ROOT-0, better-5)
mark(began-10, whether-8)
nsubj(began-10, that-9)
advcl(sure-22, began-10)
ccomp(sure-22, began-10)
mark(found-13, since-11)
nsubj(found-13, we-12)
advcl(began-10, found-13)
det(well-15, the-14)
dobj(found-13, well-15)
nsubj(sure-22, I-17)
aux(sure-22, ca-18)
neg(sure-22, n't-19)
cop(sure-22, be-20)
advmod(sure-22, very-21)
conj_but(better-5, sure-22)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (NNP Tibbie))
        (PRN (: --)
          (S
            (NP (PRP she))
            (VP (VBZ is)
              (ADVP (RB always))
              (VP (VBG drinking)
                (PP (IN at)
                  (NP (PRP it)))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBZ says)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ does)
            (S
              (NP (PRP her))
              (NP
                (NP (DT a) (NN world))
                (PP (IN of)
                  (ADJP (JJ good)))))))))
    (. .) ('' '')))

prep_for(says-12, Tibbie-2)
nsubj(drinking-7, she-4)
aux(drinking-7, is-5)
advmod(drinking-7, always-6)
dep(Tibbie-2, drinking-7)
prep_at(drinking-7, it-9)
nsubj(says-12, she-11)
root(ROOT-0, says-12)
nsubj(does-14, it-13)
ccomp(says-12, does-14)
nsubj(world-17, her-15)
det(world-17, a-16)
xcomp(does-14, world-17)
prep_of(world-17, good-19)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP
          (VP (VBN read)
            (NP (RB somewhere))
            (PRN (, ,) ('' '')
              (SINV
                (VP (VBD said))
                (NP (DT the) (NN shoemaker)))
              (, ,) (`` ``))
            (SBAR
              (SBAR (IN that)
                (S
                  (SBAR
                    (WHADVP (WRB wherever))
                    (S
                      (NP (EX there))
                      (VP (VBZ 's)
                        (NP (DT a) (NN hurt)))))
                  (NP (EX there))
                  (VP (VBZ 's)
                    (NP (DT a) (NN help)))))
              (: ;)
              (CC and)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP I))
                  (VP (VBD was)
                    (NP (DT a) (NN boy)))))))
          (, ,)
          (CC and)
          (VP (VBN stung)
            (NP (PRP myself))
            (PP (IN with)
              (NP (DT a) (NN nettle)))))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBD had)
      (ADVP (RB far))
      (S
        (VP (TO to)
          (VP (VB look)
            (PP (IN for)
              (NP
                (NP (DT a) (NN dock-stalk))
                (PP (IN with)
                  (NP (PRP$ its) (NN juice)))))))))
    (. .)))

nsubj(read-4, I-2)
nsubj(stung-32, I-2)
aux(read-4, 've-3)
ccomp(had-40, read-4)
dobj(read-4, somewhere-5)
parataxis(read-4, said-8)
det(shoemaker-10, the-9)
nsubj(said-8, shoemaker-10)
mark('s-20, that-13)
advmod('s-16, wherever-14)
expl('s-16, there-15)
advcl('s-20, 's-16)
det(hurt-18, a-17)
nsubj('s-16, hurt-18)
expl('s-20, there-19)
ccomp(read-4, 's-20)
det(help-22, a-21)
nsubj('s-20, help-22)
advmod(boy-29, when-25)
nsubj(boy-29, I-26)
cop(boy-29, was-27)
det(boy-29, a-28)
ccomp(read-4, boy-29)
conj_and('s-20, boy-29)
conj_and(read-4, stung-32)
ccomp(had-40, stung-32)
dobj(stung-32, myself-33)
det(nettle-36, a-35)
prep_with(stung-32, nettle-36)
nsubj(had-40, I-38)
nsubj(look-43, I-38)
neg(had-40, never-39)
root(ROOT-0, had-40)
advmod(had-40, far-41)
aux(look-43, to-42)
xcomp(had-40, look-43)
det(dock-stalk-46, a-45)
prep_for(look-43, dock-stalk-46)
poss(juice-49, its-48)
prep_with(dock-stalk-46, juice-49)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (VBZ knows)
        (SBAR (CC but)
          (S
            (NP
              (NP (DT the) (NN Prior) (POS 's))
              (NNP Well))
            (VP (MD may)
              (VP (VB be)
                (NP
                  (NP (DT the) (NN cure))
                  (PP (IN for)
                    (NP (PRP me))))))))))
    (. ?)))

nsubj(knows-2, Who-1)
root(ROOT-0, knows-2)
cc(cure-11, but-3)
det(Prior-5, the-4)
poss(Well-7, Prior-5)
nsubj(cure-11, Well-7)
aux(cure-11, may-8)
cop(cure-11, be-9)
det(cure-11, the-10)
ccomp(knows-2, cure-11)
prep_for(cure-11, me-13)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD ca) (RB n't)
        (VP (VB straighten)
          (NP (PRP$ my) (NN back)))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP know)))
      (, ,))
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD may)
        (VP
          (VP (VB make)
            (S
              (NP (PRP me))
              (ADJP (JJR stronger)))
            (PP (IN for)
              (NP (PDT all) (DT that))))
          (, ,)
          (CC and)
          (VP (VB fitter)
            (PP (IN for)
              (NP (DT the) (JJ general) (NN business)))))))
    (. .) ('' '')))

nsubj(straighten-4, It-1)
aux(straighten-4, ca-2)
neg(straighten-4, n't-3)
root(ROOT-0, straighten-4)
poss(back-6, my-5)
dobj(straighten-4, back-6)
nsubj(know-9, I-8)
dep(straighten-4, know-9)
nsubj(make-14, it-12)
nsubj(fitter-22, it-12)
aux(make-14, may-13)
conj_but(straighten-4, make-14)
nsubj(stronger-16, me-15)
xcomp(make-14, stronger-16)
predet(that-19, all-18)
prep_for(make-14, that-19)
conj_but(straighten-4, fitter-22)
conj_and(make-14, fitter-22)
det(business-26, the-24)
amod(business-26, general-25)
prep_for(fitter-22, business-26)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (MD will)
          (VP (VB lay)
            (PRT (RP down))
            (NP (DT a) (NN pipe))
            (SBAR (IN for)
              (S
                (NP (PRP you))
                (, ,)
                (SBAR (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VBP like))))
                (, ,)
                (VP (VBZ Hector)))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB then))
        (NP (PRP you))
        (VP (MD can)
          (VP (VB drink)
            (NP
              (NP
                (QP (RB as) (JJ much)))
              (PP (IN of)
                (NP (DT the) (NN water))))
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (VBP please))))
            (, ,)
            (PP (IN without)
              (S
                (VP (VBG asking)
                  (NP (NN anybody)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(lay-4, I-2)
aux(lay-4, will-3)
ccomp(said-36, lay-4)
prt(lay-4, down-5)
det(pipe-7, a-6)
dobj(lay-4, pipe-7)
mark(Hector-15, for-8)
nsubj(Hector-15, you-9)
mark(like-13, if-11)
nsubj(like-13, you-12)
dep(Hector-15, like-13)
advcl(lay-4, Hector-15)
advmod(drink-21, then-18)
nsubj(drink-21, you-19)
aux(drink-21, can-20)
conj_and(lay-4, drink-21)
ccomp(said-36, drink-21)
quantmod(much-23, as-22)
dobj(drink-21, much-23)
det(water-26, the-25)
prep_of(much-23, water-26)
mark(please-29, as-27)
nsubj(please-29, you-28)
advcl(drink-21, please-29)
prepc_without(drink-21, asking-32)
dobj(asking-32, anybody-33)
root(ROOT-0, said-36)
nsubj(said-36, Willie-37)

(ROOT
  (S
    (NP (NNP Hector))
    (VP (VBD laughed))
    (. .)))

nsubj(laughed-2, Hector-1)
root(ROOT-0, laughed-2)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (PDT such) (DT a) (JJ sure) (NN thing))
        (, ,) ('' '')
        (PRN
          (S
            (NP (PRP he))
            (VP (VBD replied) (, ,) (`` ``)
              (S
                (S
                  (SBAR (IN as)
                    (S
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ worth)
                              (SBAR (IN that)
                                (FRAG
                                  (NP (NN trouble))))))))
                      (: ;)
                      (CC and)
                      (S
                        (VP (VBG besides)))))
                  (, ,)
                  (NP (DT the) (NN walk))
                  (VP (VBZ does)
                    (S
                      (NP (PRP me))
                      (ADJP (JJ good)))))
                (, ,)
                (CC and)
                (S
                  (NP
                    (NP (DT a) (NN drink))
                    (ADVP (RB once)
                      (CC or)
                      (RB twice)
                      (NP (DT a) (NN day))))
                  (VP (VBZ is)
                    (ADJP (JJ enough))))))))
        (: --)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is) (, ,)
              (SBAR (IN if)
                (S
                  (NP (PRP$ your) (NNS people))
                  (VP (MD wo) (RB n't)
                    (VP (VB think)
                      (S
                        (NP (PRP me))
                        (NP (DT a) (NN trouble)))))))
              (, ,)
              (S
                (VP (VBG coming)
                  (ADVP (RB so) (RB often)))))))))
    (. .) ('' '')))

nsubj(thing-8, It-2)
cop(thing-8, 's-3)
neg(thing-8, not-4)
predet(thing-8, such-5)
det(thing-8, a-6)
amod(thing-8, sure-7)
root(ROOT-0, thing-8)
nsubj(is-43, thing-8)
nsubj(replied-12, he-11)
dep(thing-8, replied-12)
mark(worth-18, as-15)
aux(worth-18, to-16)
cop(worth-18, be-17)
advcl(does-27, worth-18)
mark(trouble-20, that-19)
dep(worth-18, trouble-20)
conj_and(worth-18, besides-23)
advcl(does-27, besides-23)
det(walk-26, the-25)
nsubj(does-27, walk-26)
dep(replied-12, does-27)
nsubj(good-29, me-28)
xcomp(does-27, good-29)
det(drink-33, a-32)
nsubj(enough-40, drink-33)
advmod(drink-33, once-34)
advmod(drink-33, twice-36)
conj_or(once-34, twice-36)
det(day-38, a-37)
pobj(once-34, day-38)
cop(enough-40, is-39)
dep(replied-12, enough-40)
conj_and(does-27, enough-40)
rcmod(thing-8, is-43)
mark(think-50, if-45)
poss(people-47, your-46)
nsubj(think-50, people-47)
aux(think-50, wo-48)
neg(think-50, n't-49)
advcl(is-43, think-50)
nsubj(trouble-53, me-51)
det(trouble-53, a-52)
xcomp(think-50, trouble-53)
xcomp(is-43, coming-55)
advmod(often-57, so-56)
advmod(coming-55, often-57)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (DT no) (NN fear))
          (PP (IN of)
            (NP (DT that))))))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP Willie))
        (: ;) (`` ``)
        (S
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP (PRP$ our) (NN business))))
          (, ,)
          (NP (PRP you))
          (VP (VBP know))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB try)
            (S
              (VP (TO to)
                (VP (VB cure)
                  (NP (NNS people)))))))))
    (. .)))

expl('s-3, There-2)
ccomp(said-10, 's-3)
neg(fear-5, no-4)
nsubj('s-3, fear-5)
prep_of(fear-5, that-7)
root(ROOT-0, said-10)
dobj(said-10, Willie-11)
nsubj(business-17, it-14)
cop(business-17, 's-15)
poss(business-17, our-16)
ccomp(know-20, business-17)
nsubj(know-20, you-19)
dep(Willie-11, know-20)
aux(try-23, to-22)
vmod(said-10, try-23)
aux(cure-25, to-24)
xcomp(try-23, cure-25)
dobj(cure-25, people-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB tell)
        (NP (PRP you))
        (NP
          (NP (WP what))
          (: --)
          (SQ (MD could) (RB n't)
            (NP (PRP you))
            (VP
              (VP (VB bring)
                (PRT (RP up))
                (NP
                  (NP (DT a) (NN bit))
                  (PP (IN of)
                    (NP (PRP$ your) (NN work)))))
              (, ,)
              (CC and)
              (VP (VB sit)
                (PP (IN in)
                  (NP (PRP$ my) (NN room)))
                (ADVP (RB sometimes))))
            (. ?)))))))

nsubj(tell-3, I-1)
aux(tell-3, 'll-2)
root(ROOT-0, tell-3)
iobj(tell-3, you-4)
dobj(tell-3, what-5)
aux(bring-10, could-7)
neg(bring-10, n't-8)
nsubj(bring-10, you-9)
nsubj(sit-19, you-9)
dep(what-5, bring-10)
prt(bring-10, up-11)
det(bit-13, a-12)
dobj(bring-10, bit-13)
poss(work-16, your-15)
prep_of(bit-13, work-16)
dep(what-5, sit-19)
conj_and(bring-10, sit-19)
poss(room-22, my-21)
prep_in(sit-19, room-22)
advmod(sit-19, sometimes-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RBR better))
      (VP (NN air)
        (ADVP (RB there))
        (PP (IN than)
          (ADVP (RB down) (RB here)))))
    (. .) ('' '')))

nsubj(air-4, It-1)
aux(air-4, 's-2)
advmod(air-4, better-3)
root(ROOT-0, air-4)
advmod(air-4, there-5)
prep(air-4, than-6)
advmod(here-8, down-7)
pcomp(than-6, here-8)
pobj(than-6, here-8)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP 're)
      (ADJP (RB very) (JJ kind))
      (, ,)
      (ADVP (RB indeed))
      (, ,)
      (ADJP (JJ Willie)))
    (. .)))

nsubj(kind-5, You-2)
cop(kind-5, 're-3)
advmod(kind-5, very-4)
root(ROOT-0, kind-5)
advmod(kind-5, indeed-7)
acomp(kind-5, Willie-9)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD 'll)
      (VP (VB see)))
    (. .)))

nsubj(see-3, We-1)
aux(see-3, 'll-2)
root(ROOT-0, see-3)

(ROOT
  (S
    (ADVP (RB Meantime))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP
        (VP (VB come)
          (PRT (RP up))
          (NP (NN morning)
            (CC and)
            (NN evening)))
        (, ,)
        (CC and)
        (VP (VB have)
          (NP
            (NP (DT a) (NN drink))
            (PP (IN of)
              (NP
                (NP (DT the) (NN water))
                (, ,)
                (ADVP (RB as) (JJ long)))))
          (SBAR
            (SBAR
              (ADVP (IN at) (JJS least))
              (IN as)
              (S
                (NP (DT the) (JJ warm) (NN weather))
                (VP (VBZ lasts))))
            (, ,)
            (CC and)
            (SBAR
              (WHPP (IN by)
                (WHNP (WDT that) (NN time)))
              (S
                (NP (PRP I))
                (VP (MD shall)
                  (VP (VB be)
                    (ADJP (RB pretty) (JJ certain))
                    (SBAR (IN whether)
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (VP (VBG doing)
                            (S
                              (NP (PRP me))
                              (ADJP (JJ good))))))
                      (CC or)
                      (RB not))))))))))
    (. .) ('' '')))

advmod(come-5, Meantime-1)
nsubj(come-5, I-3)
nsubj(have-12, I-3)
aux(come-5, 'll-4)
root(ROOT-0, come-5)
prt(come-5, up-6)
tmod(come-5, morning-7)
tmod(come-5, evening-9)
conj_and(morning-7, evening-9)
conj_and(come-5, have-12)
det(drink-14, a-13)
dobj(have-12, drink-14)
det(water-17, the-16)
prep_of(drink-14, water-17)
advmod(long-20, as-19)
advmod(water-17, long-20)
advmod(lasts-27, at-21)
pobj(at-21, least-22)
mark(lasts-27, as-23)
det(weather-26, the-24)
amod(weather-26, warm-25)
nsubj(lasts-27, weather-26)
advcl(have-12, lasts-27)
det(time-32, that-31)
prep_by(certain-37, time-32)
nsubj(certain-37, I-33)
aux(certain-37, shall-34)
cop(certain-37, be-35)
advmod(certain-37, pretty-36)
advcl(have-12, certain-37)
conj_and(lasts-27, certain-37)
mark(doing-41, whether-38)
nsubj(doing-41, it-39)
aux(doing-41, is-40)
ccomp(certain-37, doing-41)
nsubj(good-43, me-42)
xcomp(doing-41, good-43)
ccomp(certain-37, not-45)
conj_or(doing-41, not-45)

(ROOT
  (S (IN So)
    (NP (NNP Hector))
    (VP (VBD went)
      (PP (IN on)
        (S
          (VP
            (VP (VBG drinking)
              (NP (DT the) (NN water)))
            (CC and)
            (VP (VBG getting)
              (ADJP
                (NP (DT a) (RB little))
                (JJR better)))))))
    (. .)))

dep(went-3, So-1)
nsubj(went-3, Hector-2)
root(ROOT-0, went-3)
prepc_on(went-3, drinking-5)
det(water-7, the-6)
dobj(drinking-5, water-7)
dep(better-12, getting-9)
det(little-11, a-10)
npadvmod(better-12, little-11)
prepc_on(went-3, better-12)
conj_and(drinking-5, better-12)

(ROOT
  (S
    (NP (NNP Next))
    (, ,)
    (S
      (VP (VB grannie)
        (SBAR
          (S
            (S
              (VP (VBD took)
                (PP (TO to)
                  (NP (PRP it)))))
            (, ,)
            (CC and)
            (, ,)
            (S
              (UCP (RB either)
                (PP (IN from)
                  (NP (NN imagination)))
                (, ,)
                (CC or)
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (ADVP (RB really))
                    (VP (VBD did)
                      (S
                        (NP (PRP her))
                        (ADJP (JJ good))))))))))))
    (, ,)
    (VP (VBD declared)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (VP (VBG renewing)
              (NP (PRP$ her) (NN youth)))))))
    (. .)))

nsubj(declared-22, Next-1)
ccomp(declared-22, grannie-3)
dep(grannie-3, took-4)
prep_to(took-4, it-6)
dep(grannie-3, either-10)
conj_and(took-4, either-10)
dep(either-10, from-11)
pobj(from-11, imagination-12)
mark(did-18, that-15)
nsubj(did-18, it-16)
advmod(did-18, really-17)
conj_and(took-4, did-18)
conj_or(either-10, did-18)
nsubj(good-20, her-19)
xcomp(did-18, good-20)
root(ROOT-0, declared-22)
nsubj(renewing-25, it-23)
aux(renewing-25, was-24)
ccomp(declared-22, renewing-25)
poss(youth-27, her-26)
dobj(renewing-25, youth-27)

(ROOT
  (S
    (NP (PDT All) (DT the) (NN doctor))
    (VP (VBD said)
      (PP (IN on)
        (NP
          (NP (DT the) (NN matter))
          (VP (VBD was))
          (, ,)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (NNS salts))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBD contained)))))
              (VP
                (VP (MD could)
                  (VP (VB do)
                    (NP (DT no) (NN one))
                    (NP (DT any) (NN harm))))
                (, ,)
                (CC and)
                (VP (MD might)
                  (VP (VB do)
                    (S
                      (NP (DT some) (NNS people))
                      (ADJP (RB much) (JJ good))))))))
          (: ;)))
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBD was)
            (NP
              (NP
                (NP (NN iron))
                (PP (IN in)
                  (NP
                    (NP (PRP it))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBD was)
                          (VP (VBG strengthening))))))))
              (, ,)
              (CC and)
              (NP
                (NP (JJ certain) (NNS ingredients))
                (PP (IN besides))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (MD might)
                      (ADVP (RB possibly))
                      (VP (VB prevent)
                        (NP (DT the) (NN iron))
                        (PP (IN from)
                          (S
                            (VP (VBG interfering)
                              (PP (IN with)
                                (NP
                                  (NP (JJ other) (NNS functions))
                                  (PP (IN of)
                                    (NP (DT the) (NN system))))))))))))))))))
    (. .)))

predet(doctor-3, All-1)
det(doctor-3, the-2)
nsubj(said-4, doctor-3)
root(ROOT-0, said-4)
det(matter-7, the-6)
prep_on(said-4, matter-7)
vmod(matter-7, was-8)
mark(do-16, that-10)
det(salts-12, the-11)
nsubj(do-16, salts-12)
nsubj(do-24, salts-12)
nsubj(contained-14, it-13)
rcmod(salts-12, contained-14)
aux(do-16, could-15)
dep(matter-7, do-16)
neg(one-18, no-17)
iobj(do-16, one-18)
det(harm-20, any-19)
dobj(do-16, harm-20)
aux(do-24, might-23)
dep(matter-7, do-24)
conj_and(do-16, do-24)
det(people-26, some-25)
nsubj(good-28, people-26)
advmod(good-28, much-27)
xcomp(do-24, good-28)
mark(was-32, that-30)
expl(was-32, there-31)
ccomp(said-4, was-32)
nsubj(was-32, iron-33)
prep_in(iron-33, it-35)
nsubj(strengthening-39, it-35)
aux(strengthening-39, was-38)
rcmod(it-35, strengthening-39)
amod(ingredients-43, certain-42)
nsubj(was-32, ingredients-43)
conj_and(iron-33, ingredients-43)
nsubj(prevent-49, ingredients-43)
prep(ingredients-43, besides-44)
aux(prevent-49, might-47)
advmod(prevent-49, possibly-48)
rcmod(ingredients-43, prevent-49)
det(iron-51, the-50)
dobj(prevent-49, iron-51)
prepc_from(prevent-49, interfering-53)
amod(functions-56, other-55)
prep_with(interfering-53, functions-56)
det(system-59, the-58)
prep_of(functions-56, system-59)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD should) (RB not)
              (VP (VB be)
                (VP
                  (ADVP (IN at) (DT all))
                  (VBN surprised)
                  (UCP
                    (ADJP (IN if))
                    (, ,)
                    (NP (DT some) (NN day))
                    (CC or)
                    (ADJP (JJ other))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD regained)
      (NP (PRP$ its) (JJ old) (NN fame))
      (PP (IN as)
        (NP
          (NP (DT a) (NN well))
          (PP (IN of)
            (NP (NN healing))))))
    (. .)))

nsubj(said-2, He-1)
ccomp(regained-18, said-2)
nsubjpass(surprised-9, he-3)
aux(surprised-9, should-4)
neg(surprised-9, not-5)
auxpass(surprised-9, be-6)
advmod(surprised-9, at-7)
pobj(at-7, all-8)
ccomp(said-2, surprised-9)
acomp(surprised-9, if-10)
det(day-13, some-12)
acomp(surprised-9, day-13)
conj_or(if-10, day-13)
tmod(if-10, day-13)
acomp(surprised-9, other-15)
conj_or(if-10, other-15)
nsubj(regained-18, it-17)
root(ROOT-0, regained-18)
poss(fame-21, its-19)
amod(fame-21, old-20)
dobj(regained-18, fame-21)
det(well-24, a-23)
prep_as(regained-18, well-24)
prep_of(well-24, healing-26)

(ROOT
  (S
    (NP (NNP Mr) (NNP Spelman))
    (, ,)
    (PP (IN in)
      (NP
        (NP (NN consequence))
        (PP (IN of)
          (NP
            (NP (DT a) (NN talk))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (PP (IN with)
                    (NP (NNP Hector))))
                (, ,)
                (S
                  (VP (VBG having)
                    (VP (VBN induced)
                      (NP (PRP$ his) (NN wife)
                        (S
                          (VP (TO to)
                            (VP (VB try)
                              (NP (PRP it)))))))))))))))
    (, ,)
    (NP (PRP she))
    (ADVP (RB also))
    (VP
      (ADVP (RB soon))
      (VBD began)
      (S
        (VP (TO to)
          (VP (VB think)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (VP (VBG doing)
                    (NP (PRP$ her) (NN good))))))))))
    (. .)))

nn(Spelman-2, Mr-1)
nsubj(began-25, Spelman-2)
nsubj(think-27, Spelman-2)
prep_in(began-25, consequence-5)
det(talk-8, a-7)
prep_of(consequence-5, talk-8)
nsubj(had-10, he-9)
rcmod(talk-8, had-10)
prep_with(had-10, Hector-12)
aux(induced-15, having-14)
dep(had-10, induced-15)
poss(wife-17, his-16)
dobj(induced-15, wife-17)
aux(try-19, to-18)
vmod(wife-17, try-19)
dobj(try-19, it-20)
nsubj(began-25, she-22)
nsubj(think-27, she-22)
advmod(began-25, also-23)
advmod(began-25, soon-24)
root(ROOT-0, began-25)
aux(think-27, to-26)
xcomp(began-25, think-27)
nsubj(doing-30, it-28)
aux(doing-30, was-29)
ccomp(think-27, doing-30)
poss(good-32, her-31)
dobj(doing-30, good-32)

(ROOT
  (S
    (PP (IN Beyond)
      (NP
        (NP (DT these))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP have)
              (ADVP (RB now))
              (VP (VBN mentioned)))))))
    (, ,)
    (NP (DT no) (NN one))
    (VP (VBD paid)
      (NP (DT any) (NN attention))
      (PP (TO to)
        (NP
          (NP
            (NP (DT the) (NN Prior) (POS 's))
            (NNP Well))
          (CC or)
          (NP (PRP$ its) (JJ renascent) (NN reputation)))))
    (. .)))

prep_beyond(paid-10, these-2)
nsubj(mentioned-6, I-3)
aux(mentioned-6, have-4)
advmod(mentioned-6, now-5)
rcmod(these-2, mentioned-6)
neg(one-9, no-8)
nsubj(paid-10, one-9)
root(ROOT-0, paid-10)
det(attention-12, any-11)
dobj(paid-10, attention-12)
det(Prior-15, the-14)
poss(Well-17, Prior-15)
prep_to(paid-10, Well-17)
poss(reputation-21, its-19)
amod(reputation-21, renascent-20)
prep_to(paid-10, reputation-21)
conj_or(Well-17, reputation-21)

(ROOT
  (NP (NNP CHAPTER) (NNP XVII) (. .)))

nn(XVII-2, CHAPTER-1)
root(ROOT-0, XVII-2)

(ROOT
  (S
    (NP (NNP HOW) (NNP WILLIE))
    (VP (VBD WENT)
      (PRT (RP ON)))
    (. .)))

nn(WILLIE-2, HOW-1)
nsubj(WENT-3, WILLIE-2)
root(ROOT-0, WENT-3)
prt(WENT-3, ON-4)

(ROOT
  (S
    (ADVP (RB As) (RB soon)
      (SBAR (IN as)
        (S
          (NP (NNP Willie))
          (VP (VBD began)
            (NP (DT a) (JJ new) (NN study))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD began)
      (S
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB get)
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN sense))
                    (PP (IN of)
                      (NP (PRP it)))))))))))
    (. .)))

advmod(soon-2, As-1)
advmod(began-11, soon-2)
mark(began-5, as-3)
nsubj(began-5, Willie-4)
ccomp(soon-2, began-5)
det(study-8, a-6)
amod(study-8, new-7)
dobj(began-5, study-8)
nsubj(began-11, he-10)
root(ROOT-0, began-11)
xcomp(began-11, trying-12)
aux(get-14, to-13)
xcomp(trying-12, get-14)
det(sense-17, the-16)
prep_at(get-14, sense-17)
prep_of(sense-17, it-19)

(ROOT
  (S
    (S
      (S
        (NP (DT This))
        (VP (VBD caused)
          (NP (PRP$ his) (NN progress)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ slow)
                    (PP (IN at)
                      (ADVP (RB first))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP him))
        (VP (TO to)
          (VP (VB appear)
            (ADJP (JJ dull))
            (PP (IN amongst)
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (ADVP (RB merely))
                    (VP (VBN learned)
                      (PP (IN by)
                        (NP (NNP rote))))))))))))
    (: ;)
    (S (CC but)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD got)
            (NP
              (NP (DT a) (NN hold))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN meaning))
                  (PP (IN of)
                    (NP (PRP it)))
                  (ADVP (DT all))))))))
      (, ,)
      (NP (PRP$ his) (NN progress))
      (VP (VBD grew)
        (ADVP
          (ADVP (RBR faster))
          (CC and)
          (ADVP (RBR faster)))
        (, ,)
        (SBAR (IN until)
          (S
            (PP (IN at)
              (NP
                (NP (NN length))
                (PP (IN in)
                  (NP (JJS most) (NNS studies)))))
            (NP (PRP he))
            (VP (VBD outstripped)
              (NP (PDT all) (DT the) (NN rest)))))))
    (. .)))

nsubj(caused-2, This-1)
root(ROOT-0, caused-2)
poss(progress-4, his-3)
dobj(caused-2, progress-4)
aux(slow-7, to-5)
cop(slow-7, be-6)
vmod(progress-4, slow-7)
prep(slow-7, at-8)
pcomp(at-8, first-9)
nsubj(appear-14, him-12)
aux(appear-14, to-13)
conj_and(caused-2, appear-14)
acomp(appear-14, dull-15)
prep_amongst(appear-14, those-17)
nsubj(learned-20, those-17)
advmod(learned-20, merely-19)
rcmod(those-17, learned-20)
prep_by(learned-20, rote-22)
cc(grew-39, but-24)
mark(got-27, as-25)
nsubj(got-27, he-26)
advcl(grew-39, got-27)
det(hold-29, a-28)
dobj(got-27, hold-29)
det(meaning-32, the-31)
prep_of(hold-29, meaning-32)
prep_of(meaning-32, it-34)
advmod(meaning-32, all-35)
poss(progress-38, his-37)
nsubj(grew-39, progress-38)
parataxis(caused-2, grew-39)
advmod(grew-39, faster-40)
advmod(grew-39, faster-42)
conj_and(faster-40, faster-42)
mark(outstripped-51, until-44)
prep_at(outstripped-51, length-46)
amod(studies-49, most-48)
prep_in(length-46, studies-49)
nsubj(outstripped-51, he-50)
advcl(grew-39, outstripped-51)
predet(rest-54, all-52)
det(rest-54, the-53)
dobj(outstripped-51, rest-54)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD need)
      (ADVP (RB hardly))
      (VP (VB repeat)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (JJ constant) (NN exercise))
              (PP (IN of)
                (NP
                  (NP (PRP$ his) (NN mind))
                  (PP (IN through)
                    (NP (PRP$ his) (NNS fingers))))))
            (, ,)
            (PP (IN in)
              (S
                (VP (VBG giving)
                  (NP
                    (NP (DT a) (JJ second) (NN existence) (NN outside))
                    (PP (IN of)
                      (NP (PRP him))))
                  (PP (TO to)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBD had)
                          (NP
                            (NP (PRP$ its) (JJ first) (NN existence))
                            (PP (IN inside)
                              (NP
                                (NP (PRP him))
                                (: --)
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBZ is))))
                                (, ,))))
                          (PP (IN in)
                            (NP (PRP$ his) (NN mind))))))))))
            (, ,)
            (VP (VBD made)
              (S
                (NP (PRP it))
                (ADJP (RB far) (JJR easier))
                (SBAR (IN for)
                  (S
                    (NP (PRP him))
                    (VP (TO to)
                      (VP (VB understand)
                        (NP
                          (NP (DT the) (NNS relations))
                          (PP (IN of)
                            (NP
                              (NP (NNS things))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBP go)
                                    (S
                                      (VP (TO to)
                                        (VP (VB make)
                                          (PRT (RP up))
                                          (NP (DT a) (NN science)))))))))))))))))))))
    (. .)))

nsubj(repeat-4, I-1)
aux(repeat-4, need-2)
advmod(repeat-4, hardly-3)
root(ROOT-0, repeat-4)
mark(made-40, that-5)
det(exercise-8, the-6)
amod(exercise-8, constant-7)
nsubj(made-40, exercise-8)
poss(mind-11, his-10)
prep_of(exercise-8, mind-11)
poss(fingers-14, his-13)
prep_through(mind-11, fingers-14)
prepc_in(made-40, giving-17)
det(outside-21, a-18)
amod(outside-21, second-19)
nn(outside-21, existence-20)
dobj(giving-17, outside-21)
prep_of(outside-21, him-23)
nsubj(had-26, what-25)
prepc_to(giving-17, had-26)
poss(existence-29, its-27)
amod(existence-29, first-28)
dobj(had-26, existence-29)
prep_inside(existence-29, him-31)
nsubj(is-34, him-31)
rcmod(him-31, is-34)
poss(mind-38, his-37)
prep_in(had-26, mind-38)
ccomp(repeat-4, made-40)
nsubj(understand-47, it-41)
advmod(easier-43, far-42)
dep(understand-47, easier-43)
mark(understand-47, for-44)
nsubj(understand-47, him-45)
aux(understand-47, to-46)
xcomp(made-40, understand-47)
det(relations-49, the-48)
dobj(understand-47, relations-49)
prep_of(relations-49, things-51)
nsubj(go-53, things-51)
nsubj(make-55, things-51)
rcmod(things-51, go-53)
aux(make-55, to-54)
xcomp(go-53, make-55)
prt(make-55, up-56)
det(science-58, a-57)
dobj(make-55, science-58)

(ROOT
  (S
    (NP
      (NP (DT A) (NN boy))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (MD could)
            (VP (VB put)
              (NP (DT a) (NN box)))))))
    (ADVP (RB together))
    (VP
      (VP (MD must)
        (VP (VB find)
          (S
            (NP (NNP Euclid))
            (ADJP (RBR easier)))))
      (: --)
      (VP
        (NP (DT the) (JJ Second) (NN Book))
        (ADVP (RB particularly)))
      (: --)
      (SBAR
        (SBAR (IN than)
          (S
            (NP
              (NP (CD one))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD had)
                    (NP
                      (NP (DT no) (NN idea))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (JJ practical) (NNS relations))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NNS boundaries))
                              (PP (IN of)
                                (NP (NNS spaces)))))))))))
              (: ;)
              (NP
                (NP (CD one))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (MD could)
                      (VP (VB contrive)
                        (NP (DT a) (NN machine))
                        (PP (IN like)
                          (NP (PRP$ his) (NN water-wheel))))))))
              (, ,))
            (VP (MD must)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB understand)
                        (NP
                          (NP (DT the) (NN interdependence))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NNS parts))
                              (PP (IN of)
                                (NP
                                  (NP (DT a) (NN sentence)
                                    (QP (JJR better) (IN than) (CD one)))
                                  (ADJP (RB equally) (JJ gifted)))))))
                        (ADVP (RB otherwise))))))))))
        (, ,)
        (CC but)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD did) (RB not)
              (VP (VB know)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (CD one) (NN wheel))
                    (VP (MD could)
                      (VP (VB move)
                        (NP (DT another))))))))))))
    (. .)))

det(boy-2, A-1)
nsubj(put-5, boy-2)
nsubj(find-10, boy-2)
aux(put-5, could-4)
rcmod(boy-2, put-5)
det(box-7, a-6)
dobj(put-5, box-7)
advmod(find-10, together-8)
aux(find-10, must-9)
root(ROOT-0, find-10)
nsubj(easier-12, Euclid-11)
xcomp(find-10, easier-12)
det(Book-16, the-14)
amod(Book-16, Second-15)
dep(find-10, Book-16)
advmod(Book-16, particularly-17)
mark(able-47, than-19)
nsubj(had-22, one-20)
nsubj(able-47, one-20)
nsubj(understand-49, one-20)
rcmod(one-20, had-22)
neg(idea-24, no-23)
dobj(had-22, idea-24)
det(relations-28, the-26)
amod(relations-28, practical-27)
prep_of(idea-24, relations-28)
det(boundaries-31, the-30)
prep_of(relations-28, boundaries-31)
prep_of(boundaries-31, spaces-33)
dep(one-20, one-35)
nsubj(contrive-38, one-35)
aux(contrive-38, could-37)
rcmod(one-35, contrive-38)
det(machine-40, a-39)
dobj(contrive-38, machine-40)
poss(water-wheel-43, his-42)
prep_like(contrive-38, water-wheel-43)
aux(able-47, must-45)
cop(able-47, be-46)
advcl(find-10, able-47)
parataxis(find-10, able-47)
aux(understand-49, to-48)
xcomp(able-47, understand-49)
det(interdependence-51, the-50)
dobj(understand-49, interdependence-51)
det(parts-54, the-53)
prep_of(interdependence-51, parts-54)
det(sentence-57, a-56)
prep_of(parts-54, sentence-57)
mwe(than-59, better-58)
quantmod(one-60, than-59)
num(sentence-57, one-60)
advmod(gifted-62, equally-61)
amod(sentence-57, gifted-62)
advmod(understand-49, otherwise-63)
nsubj(know-69, who-66)
aux(know-69, did-67)
neg(know-69, not-68)
advcl(find-10, know-69)
parataxis(find-10, know-69)
conj_but(able-47, know-69)
advmod(move-74, how-70)
num(wheel-72, one-71)
nsubj(move-74, wheel-72)
aux(move-74, could-73)
ccomp(know-69, move-74)
dobj(move-74, another-75)

(ROOT
  (S
    (NP (NNP Everything))
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD did)
          (SBAR
            (S
              (VP (MD would)
                (VP (VB help)
                  (NP
                    (NP (PRP$ his) (NN arithmetic))
                    (, ,)
                    (CC and)
                    (NP (NN geography))
                    (, ,)
                    (CC and)
                    (NP (NN history))
                    (: ;)
                    (CC and)
                    (NP
                      (NP (DT these)
                        (CC and)
                        (DT those))
                      (CC and)
                      (NP (DT all) (NNS things))))
                  (PP (IN besides))))))))
      (, ,))
    (VP (MD would)
      (VP (VB help)
        (S
          (NP (PRP him))
          (VP (TO to)
            (VP (VB understand)
              (NP (NN poetry)))))))
    (. .)))

nsubj(help-25, Everything-1)
nsubj(did-3, he-2)
parataxis(help-25, did-3)
aux(help-5, would-4)
ccomp(did-3, help-5)
poss(arithmetic-7, his-6)
dobj(help-5, arithmetic-7)
dobj(help-5, geography-10)
conj_and(arithmetic-7, geography-10)
dobj(help-5, history-13)
conj_and(arithmetic-7, history-13)
dobj(help-5, these-16)
conj_and(arithmetic-7, these-16)
conj_and(arithmetic-7, those-18)
conj_and(these-16, those-18)
det(things-21, all-20)
conj_and(arithmetic-7, things-21)
conj_and(these-16, things-21)
prep(help-5, besides-22)
aux(help-25, would-24)
root(ROOT-0, help-25)
dobj(help-25, him-26)
nsubj(understand-28, him-26)
aux(understand-28, to-27)
xcomp(help-25, understand-28)
dobj(understand-28, poetry-29)

(ROOT
  (S
    (S
      (S
        (PP (IN In)
          (NP (PRP$ his) (JJ Latin) (NNS sentences)))
        (NP (PRP he))
        (VP (VBD found)
          (NP
            (NP (DT the) (NNS parts))
            (ADJP (VBP fit)
              (PP (IN into)
                (NP (DT each) (JJ other) (JJ like) (NN dove-tailing)))))))
      (: ;)
      (S
        (S
          (VP (VBG finding)
            (NP
              (NP (DT the) (NNS terms))
              (PP (IN of)
                (NP (NNS equations))))))
        (, ,)
        (NP (PRP he))
        (VP (VBD said))))
    (, ,)
    (VP (VBD was)
      (PP (IN like)
        (S
          (VP (VBG inventing)
            (NP (NNS machines))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (ADVP (RB soon))
      (VP (VBD grew)
        (ADJP (JJ clever)
          (PP (IN at)
            (S
              (VP (VBG solving)
                (NP (PRP them))))))))
    (. .)))

poss(sentences-4, his-2)
amod(sentences-4, Latin-3)
prep_in(found-6, sentences-4)
nsubj(found-6, he-5)
ccomp(was-25, found-6)
det(parts-8, the-7)
dobj(found-6, parts-8)
amod(parts-8, fit-9)
det(dove-tailing-14, each-11)
amod(dove-tailing-14, other-12)
amod(dove-tailing-14, like-13)
prep_into(fit-9, dove-tailing-14)
vmod(said-23, finding-16)
det(terms-18, the-17)
dobj(finding-16, terms-18)
prep_of(terms-18, equations-20)
nsubj(said-23, he-22)
parataxis(found-6, said-23)
root(ROOT-0, was-25)
prepc_like(was-25, inventing-27)
dobj(inventing-27, machines-28)
nsubj(grew-33, he-31)
advmod(grew-33, soon-32)
conj_and(was-25, grew-33)
acomp(grew-33, clever-34)
prepc_at(clever-34, solving-36)
dobj(solving-36, them-37)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was) (RB not)
      (PP (IN from)
        (NP (PRP$ his) (JJ manual) (NNS abilities)))
      (SBAR
        (ADVP (RB alone))
        (IN that)
        (S
          (NP (PRP$ his) (NN father))
          (VP (VBD had)
            (VP (VBN given)
              (NP (PRP him))
              (NP
                (NP (DT the) (NN name))
                (PP (IN of)
                  (NP (NNP Gutta-Percha) (NNP Willie))))
              (, ,)
              (PP (CC but)
                (PP (IN from)
                  (NP
                    (NP (DT the) (NN fact))
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (PRP$ his) (NN mind))
                          (, ,)
                          (VP
                            (ADVP (RB once))
                            (VBN warmed)
                            (PP (TO to)
                              (NP (NN interest))))
                          (, ,))
                        (VP (MD could)
                          (VP (VB accommodate)
                            (NP (PRP itself))
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NNS peculiarities))
                                (PP (IN of)
                                  (NP (DT any) (NN science)))))))))))
                (, ,) (RB just)
                (PP (IN as)
                  (NP
                    (NP (DT the) (NN gutta-percha))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ is)
                          (VP (VBN used)
                            (PP (IN for)
                              (S
                                (VP (VBG taking)
                                  (SBAR
                                    (S
                                      (NP (DT a) (NN mould))
                                      (VP (VBZ fits)
                                        (NP (PRP itself))
                                        (PP (TO to)
                                          (NP
                                            (NP (DT the) (NN outs)
                                              (CC and)
                                              (NN ins))
                                            (PP (IN of)
                                              (NP (DT any) (NN figure)))))))))))))))))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
neg(was-2, not-3)
poss(abilities-7, his-5)
amod(abilities-7, manual-6)
prep_from(was-2, abilities-7)
advmod(given-13, alone-8)
mark(given-13, that-9)
poss(father-11, his-10)
nsubj(given-13, father-11)
aux(given-13, had-12)
dep(was-2, given-13)
iobj(given-13, him-14)
det(name-16, the-15)
dobj(given-13, name-16)
nn(Willie-19, Gutta-Percha-18)
prep_of(name-16, Willie-19)
cc(given-13, but-21)
det(fact-24, the-23)
prep_from(given-13, fact-24)
mark(accommodate-35, that-25)
poss(mind-27, his-26)
nsubj(accommodate-35, mind-27)
advmod(warmed-30, once-29)
vmod(mind-27, warmed-30)
prep_to(warmed-30, interest-32)
aux(accommodate-35, could-34)
dep(fact-24, accommodate-35)
dobj(accommodate-35, itself-36)
det(peculiarities-39, the-38)
prep_to(accommodate-35, peculiarities-39)
det(science-42, any-41)
prep_of(peculiarities-39, science-42)
dep(given-13, just-44)
dep(given-13, as-45)
det(gutta-percha-47, the-46)
pobj(as-45, gutta-percha-47)
nsubjpass(used-50, gutta-percha-47)
auxpass(used-50, is-49)
rcmod(gutta-percha-47, used-50)
prepc_for(used-50, taking-52)
det(mould-54, a-53)
nsubj(fits-55, mould-54)
ccomp(taking-52, fits-55)
dobj(fits-55, itself-56)
det(outs-59, the-58)
prep_to(fits-55, outs-59)
prep_to(fits-55, ins-61)
conj_and(outs-59, ins-61)
det(figure-64, any-63)
prep_of(outs-59, figure-64)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB still))
    (VP (VBN employed)
      (NP (PRP$ his) (NN water-wheel)
        (S
          (VP (TO to)
            (VP (VB pull)
              (NP (PRP him))
              (PRT (RP out))
              (PP (IN of)
                (NP
                  (NP (NN bed))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN middle))
                      (PP (IN of)
                        (NP (DT the) (NN night))))))))))))
    (. .)))

nsubj(employed-3, He-1)
advmod(employed-3, still-2)
root(ROOT-0, employed-3)
poss(water-wheel-5, his-4)
dobj(employed-3, water-wheel-5)
aux(pull-7, to-6)
vmod(water-wheel-5, pull-7)
dobj(pull-7, him-8)
prep_out_of(pull-7, bed-11)
det(middle-14, the-13)
prep_in(bed-11, middle-14)
det(night-17, the-16)
prep_of(middle-14, night-17)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had) (, ,)
        (PP (IN of)
          (NP (NN course)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP
                (NP (JJ considerable) (NNS alterations))
                (PP (IN in)
                  (PRN (, ,)
                    (CC or)
                    (ADVP (RB rather)
                      (NP (NNS additions))
                      (PP (TO to)))
                    (, ,))
                  (NP (PRP$ its) (NN machinery))))
              (, ,)
              (PP (IN after)
                (S
                  (VP (VBG changing)
                    (NP (PRP$ his) (NN bed-room))))))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP it))
            (VP (VBD had)
              (ADVP (RB then))
              (S
                (VP (TO to)
                  (VP (VB work)
                    (PP (IN in)
                      (NP
                        (NP (DT a) (NN direction))
                        (PP (IN at)
                          (NP (JJ right) (NNS angles)))))
                    (PP (TO to)
                      (NP (DT the) (JJ former)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (DT this) (PRP he))
      (VP (VBD managed)
        (ADVP (RB perfectly))))
    (. .)))

nsubj(had-2, He-1)
nsubj(make-8, He-1)
root(ROOT-0, had-2)
prep_of(had-2, course-5)
aux(make-8, to-7)
xcomp(had-2, make-8)
amod(alterations-10, considerable-9)
dobj(make-8, alterations-10)
cc(rather-14, or-13)
dep(alterations-10, rather-14)
pobj(rather-14, additions-15)
prep(rather-14, to-16)
poss(machinery-19, its-18)
prep_in(alterations-10, machinery-19)
prepc_after(make-8, changing-22)
poss(bed-room-24, his-23)
dobj(changing-22, bed-room-24)
mark(had-28, for-26)
nsubj(had-28, it-27)
nsubj(work-31, it-27)
advcl(had-2, had-28)
advmod(had-28, then-29)
aux(work-31, to-30)
xcomp(had-28, work-31)
det(direction-34, a-33)
prep_in(work-31, direction-34)
amod(angles-37, right-36)
prep_at(direction-34, angles-37)
det(former-40, the-39)
prep_to(work-31, former-40)
det(he-44, this-43)
nsubj(managed-45, he-44)
conj_but(had-2, managed-45)
advmod(managed-45, perfectly-46)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (UCP (RB well)
        (PP (IN for)
          (NP
            (NP
              (NP (NNP Willie) (POS 's))
              (NN reputation))
            (PP (IN with)
              (NP (DT a) (JJ certain)))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP
              (NP (RB not) (DT a) (JJ small) (NN class))
              (PP (IN of)
                (NP
                  (NP (NNS readers))
                  (, ,)
                  (SBAR (IN that)
                    (S
                      (NP (EX there))
                      (VP (VBD was)
                        (NP (NN something))
                        (SBAR (RB even)
                          (S
                            (NP (PRP they))
                            (VP (MD would)
                              (VP (VB call)
                                (ADJP (JJ useful)
                                  (PP
                                    (PP (IN in)
                                      (NP
                                        (NP
                                          (NP
                                            (NP (JJ several))
                                            (PP (IN of)
                                              (NP (PRP$ his) (NNS inventions))))
                                          (CC and)
                                          (NP
                                            (NP (JJ many))
                                            (PP (IN of)
                                              (NP (PRP$ his) (NNS efforts)))))
                                        (: ;)
                                        (PP
                                          (PP (IN in)
                                            (NP (PRP$ his) (NNS hydraulics)))
                                          (, ,)
                                          (PP (IN for)
                                            (NP (NN instance)))
                                          (, ,)
                                          (PP (IN by)
                                            (NP
                                              (NP (NNS means))
                                              (SBAR
                                                (WHPP (IN of)
                                                  (WHNP (WDT which)))
                                                (S
                                                  (NP (PRP he))
                                                  (VP (VBD saved)
                                                    (NP
                                                      (NP (JJ old) (NNP Tibby) (POS 's))
                                                      (NNS limbs))
                                                    (: ;)
                                                    (PP (IN in)
                                                      (NP (PRP$ his) (NN house-building)))
                                                    (, ,)
                                                    (ADVP (RB too))
                                                    (, ,)
                                                    (PP (IN by)
                                                      (NP
                                                        (NP (NNS means))
                                                        (SBAR
                                                          (WHPP (IN of)
                                                            (WHNP (WDT which)))
                                                          (S
                                                            (NP (PRP they))
                                                            (VP (VBD were)
                                                              (ADJP (JJ able)
                                                                (S
                                                                  (VP (TO to)
                                                                    (VP (VB take)
                                                                      (PP (IN in)
                                                                        (NP (NN grannie))))))))))))))))))
                                        (: ;)))
                                    (CC and)
                                    (, ,)
                                    (PP (IN for)
                                      (NP
                                        (NP (DT a) (JJ long) (NN time))
                                        (SBAR
                                          (S
                                            (ADVP (RB now))
                                            (, ,)
                                            (NP (PRP he))
                                            (VP (VBD had)
                                              (VP (VBN been)
                                                (VP (VBG doing)
                                                  (NP (DT every) (JJ little) (NN repair)))))))))))))))))))))
            (VP (VBD wanted)
              (PP (IN in)
                (NP (DT the) (NN house))))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
dep(is-2, well-3)
dep(well-3, for-4)
poss(reputation-7, Willie-5)
pobj(for-4, reputation-7)
det(certain-10, a-9)
prep_with(reputation-7, certain-10)
mark(wanted-92, that-13)
neg(class-17, not-14)
det(class-17, a-15)
amod(class-17, small-16)
nsubj(wanted-92, class-17)
prep_of(class-17, readers-19)
mark(was-23, that-21)
expl(was-23, there-22)
dep(readers-19, was-23)
nsubj(was-23, something-24)
advmod(call-28, even-25)
nsubj(call-28, they-26)
aux(call-28, would-27)
dep(was-23, call-28)
acomp(call-28, useful-29)
acomp(call-28, useful-29')
conj_and(useful-29, useful-29')
prep_in(useful-29, several-31)
poss(inventions-34, his-33)
prep_of(several-31, inventions-34)
prep_in(useful-29, many-36)
conj_and(several-31, many-36)
poss(efforts-39, his-38)
prep_of(many-36, efforts-39)
poss(hydraulics-43, his-42)
prep_in(several-31, hydraulics-43)
prep_for(several-31, instance-46)
prep_by(several-31, means-49)
prep_of(saved-53, means-49)
nsubj(saved-53, he-52)
rcmod(means-49, saved-53)
amod(Tibby-55, old-54)
poss(limbs-57, Tibby-55)
dobj(saved-53, limbs-57)
poss(house-building-61, his-60)
prep_in(saved-53, house-building-61)
advmod(saved-53, too-63)
prep_by(saved-53, means-66)
prep_of(able-71, means-66)
nsubj(able-71, they-69)
nsubj(take-73, they-69)
cop(able-71, were-70)
rcmod(means-66, able-71)
aux(take-73, to-72)
xcomp(able-71, take-73)
prep_in(take-73, grannie-75)
det(time-82, a-80)
amod(time-82, long-81)
prep_for(useful-29', time-82)
advmod(doing-88, now-83)
nsubj(doing-88, he-85)
aux(doing-88, had-86)
aux(doing-88, been-87)
rcmod(time-82, doing-88)
det(repair-91, every-89)
amod(repair-91, little-90)
dobj(doing-88, repair-91)
dep(is-2, wanted-92)
conj_and(well-3, wanted-92)
det(house-95, the-94)
prep_in(wanted-92, house-95)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN lock))
        (VP (VBD went)
          (ADJP (JJ wrong)))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB have)
        (S
          (NP (PRP it))
          (UCP
            (ADJP (IN off)
              (ADVP (IN at) (RB once)))
            (CC and)
            (VP (VBN taken)
              (PP (TO to)
                (NP (NNS pieces))))))))
    (. .)))

mark(went-4, If-1)
det(lock-3, a-2)
nsubj(went-4, lock-3)
advcl(have-9, went-4)
acomp(went-4, wrong-5)
nsubj(have-9, he-7)
aux(have-9, would-8)
root(ROOT-0, have-9)
nsubj(off-11, it-10)
nsubj(taken-15, it-10)
xcomp(have-9, off-11)
advmod(off-11, at-12)
advmod(at-12, once-13)
xcomp(have-9, taken-15)
conj_and(off-11, taken-15)
prep_to(taken-15, pieces-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (JJR less))
        (VP (MD would) (RB not)
          (VP (VB do)))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD carried)
        (NP (PRP it))
        (PP (TO to)
          (NP (DT the) (NN smithy))))
      (, ,)
      (CC but)
      (VP
        (ADVP (RB very) (RB seldom))
        (JJ troubled)
        (NP (NNP Mr) (NNP Willett))
        (PP (IN about)
          (NP
            (NP (PRP it))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN learned)
                    (S
                      (VP
                        (VP (TO to)
                          (VP (VB do)
                            (NP (JJ small) (NNS jobs))))
                        (, ,)
                        (CC and)
                        (VP (TO to)
                          (VP
                            (VP (VB heat))
                            (CC and)
                            (VP (VB work)
                              (CC and)
                              (VB temper)
                              (NP
                                (NP (DT a) (NN piece))
                                (PP (IN of)
                                  (NP (NN iron))))
                              (PP (IN within)
                                (NP
                                  (NP (PRP$ his) (NN strength))
                                  (CONJP (RB as) (RB well) (IN as))
                                  (NP (DT any) (NN man)))))))))))))))))
    (. .)))

mark(do-5, If-1)
nsubj(do-5, less-2)
aux(do-5, would-3)
neg(do-5, not-4)
advcl(carried-8, do-5)
nsubj(carried-8, he-7)
nsubj(troubled-17, he-7)
root(ROOT-0, carried-8)
dobj(carried-8, it-9)
det(smithy-12, the-11)
prep_to(carried-8, smithy-12)
advmod(seldom-16, very-15)
advmod(troubled-17, seldom-16)
conj_but(carried-8, troubled-17)
nn(Willett-19, Mr-18)
dobj(troubled-17, Willett-19)
prep_about(troubled-17, it-21)
mark(learned-26, for-23)
nsubj(learned-26, he-24)
aux(learned-26, had-25)
rcmod(it-21, learned-26)
aux(do-28, to-27)
ccomp(learned-26, do-28)
amod(jobs-30, small-29)
dobj(do-28, jobs-30)
aux(heat-34, to-33)
ccomp(learned-26, heat-34)
conj_and(do-28, heat-34)
conj_and(do-28, work-36)
conj_and(heat-34, work-36)
conj_and(heat-34, temper-38)
conj_and(work-36, temper-38)
det(piece-40, a-39)
dobj(work-36, piece-40)
prep_of(piece-40, iron-42)
poss(strength-45, his-44)
prep_within(work-36, strength-45)
det(man-50, any-49)
prep_within(work-36, man-50)
conj_and(strength-45, man-50)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN mother))
      (VP (VBD did)
        (ADVP (RB not) (RB much))
        (PP (IN like)
          (NP
            (NP (DT this) (NN part))
            (PP (IN of)
              (NP (PRP$ his) (JJ general) (NN apprenticeship)))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB get)
                (S
                  (NP (PRP$ his) (NNS hands))
                  (ADJP (RB so) (JJ black))
                  (ADVP (RB sometimes)))
                (PP (IN on)
                  (NP (DT a) (NNP Saturday) (NN afternoon)))
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (MD could) (RB not)
                      (VP (VB get)
                        (S
                          (NP (PRP them))
                          (VP (VB clean)
                            (ADVP (RB enough)
                              (PP (IN for)
                                (NP (NN church))
                                (NP (DT the) (JJ next) (NN day))))))))))))))))
    (: ;)
    (CC and)
    (ADVP (RB sometimes))
    (S
      (NP (PRP he))
      (VP (MD would)
        (VP (VB come)
          (NP (NN home))
          (PP (IN with)
            (NP
              (NP (JJ little) (NNS holes))
              (VP (VBN burnt)
                (ADVP (RB here)
                  (CC and)
                  (RB there))
                (PP (IN in)
                  (NP (PRP$ his) (NNS clothes)))
                (PP (IN by)
                  (NP
                    (NP (DT the) (NN sparks))
                    (PP (IN from)
                      (NP (DT the) (JJ red-hot) (NN iron))))))))
          (SBAR
            (WHADVP (WRB when))
            (S
              (VP (VBN beaten)
                (PP (IN on)
                  (NP (DT the) (NN anvil)))))))))
    (. .)))

poss(mother-2, His-1)
nsubj(did-3, mother-2)
root(ROOT-0, did-3)
dep(much-5, not-4)
advmod(did-3, much-5)
det(part-8, this-7)
prep_like(did-3, part-8)
poss(apprenticeship-12, his-10)
amod(apprenticeship-12, general-11)
prep_of(part-8, apprenticeship-12)
mark(get-17, for-14)
nsubj(get-17, he-15)
aux(get-17, would-16)
advcl(did-3, get-17)
poss(hands-19, his-18)
nsubj(black-21, hands-19)
advmod(black-21, so-20)
xcomp(get-17, black-21)
advmod(black-21, sometimes-22)
det(afternoon-26, a-24)
nn(afternoon-26, Saturday-25)
prep_on(get-17, afternoon-26)
mark(get-31, that-27)
nsubj(get-31, he-28)
aux(get-31, could-29)
neg(get-31, not-30)
ccomp(get-17, get-31)
nsubj(clean-33, them-32)
ccomp(get-31, clean-33)
advmod(clean-33, enough-34)
prep_for(enough-34, church-36)
det(day-39, the-37)
amod(day-39, next-38)
tmod(enough-34, day-39)
advmod(come-45, sometimes-42)
nsubj(come-45, he-43)
aux(come-45, would-44)
conj_and(did-3, come-45)
dobj(come-45, home-46)
amod(holes-49, little-48)
prep_with(come-45, holes-49)
vmod(holes-49, burnt-50)
advmod(burnt-50, here-51)
advmod(burnt-50, there-53)
conj_and(here-51, there-53)
poss(clothes-56, his-55)
prep_in(burnt-50, clothes-56)
det(sparks-59, the-58)
agent(burnt-50, sparks-59)
det(iron-63, the-61)
amod(iron-63, red-hot-62)
prep_from(sparks-59, iron-63)
advmod(beaten-65, when-64)
advcl(come-45, beaten-65)
det(anvil-68, the-67)
prep_on(beaten-65, anvil-68)

(ROOT
  (S
    (PP (VBG Concerning)
      (NP (DT this) (JJ last) (NN evil)))
    (, ,)
    (NP (PRP she))
    (VP (VBD spoke)
      (PP (IN at)
        (NP (NN length)))
      (PP (TO to)
        (NP
          (NP (NNP Hector))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD made)
                (S
                  (NP (PRP him))
                  (NP (DT a) (NN leather) (NN apron)))
                (, ,)
                (PP (IN like)
                  (NP
                    (NP (NNP Mr) (NNP Willett) (POS 's))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (ADVP (RB thereafter))
                        (NP (PRP he))
                        (VP
                          (ADVP (RB always))
                          (VBD wore)
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP he))
                              (VP (VBD had)
                                (NP (DT a) (NN job)
                                  (S
                                    (VP (TO to)
                                      (VP (VB do)
                                        (PP (IN in)
                                          (NP (DT the) (NN smithy)))))))))))))))))))))
    (. .)))

det(evil-4, this-2)
amod(evil-4, last-3)
prep_concerning(spoke-7, evil-4)
nsubj(spoke-7, she-6)
root(ROOT-0, spoke-7)
prep_at(spoke-7, length-9)
prep_to(spoke-7, Hector-11)
nsubj(made-14, Hector-11)
rcmod(Hector-11, made-14)
nsubj(apron-18, him-15)
det(apron-18, a-16)
nn(apron-18, leather-17)
xcomp(made-14, apron-18)
nn(Willett-22, Mr-21)
prep_like(made-14, Willett-22)
dobj(wore-29, Willett-22)
possessive(Willett-22, 's-23)
advmod(wore-29, thereafter-26)
nsubj(wore-29, he-27)
advmod(wore-29, always-28)
rcmod(Willett-22, wore-29)
advmod(had-32, when-30)
nsubj(had-32, he-31)
advcl(wore-29, had-32)
det(job-34, a-33)
dobj(had-32, job-34)
aux(do-36, to-35)
vmod(job-34, do-36)
det(smithy-39, the-38)
prep_in(do-36, smithy-39)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ well))
      (PRN (, ,)
        (S
          (NP (PRP I))
          (VP (VBP say)))
        (, ,))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN utility))
            (PP (IN of)
              (NP
                (NP (JJ such))
                (PP (IN of)
                  (NP
                    (NP (PRP$ his) (NNS doings))
                    (SBAR (IN as)
                      (S
                        (NP (DT these))
                        (VP (MD will)
                          (VP (VB be)
                            (VP (VBN admitted)
                              (PP (IN by)
                                (NP (DT all))))))))
                    (: ;)
                    (PP (IN for)
                      (NP
                        (NP (DT some) (JJ other) (NNS objects))
                        (PP (IN upon)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (NP (PRP he))
                              (VP (VBD spent)
                                (NP (JJ much) (NN labour)))))))))))))
          (VP (MD would) (, ,)
            (PP (IN by)
              (NP (JJS most) (NNS people)))
            (, ,)
            (VP (VB be)
              (VP (VBN regarded)
                (PP (IN as)
                  (ADJP (RB utterly) (JJ useless)))))))))
    (. .)))

nsubj(well-3, It-1)
cop(well-3, is-2)
root(ROOT-0, well-3)
nsubj(say-6, I-5)
parataxis(well-3, say-6)
mark(regarded-41, that-8)
det(utility-10, the-9)
nsubjpass(regarded-41, utility-10)
prep_of(utility-10, such-12)
poss(doings-15, his-14)
prep_of(such-12, doings-15)
mark(admitted-20, as-16)
nsubjpass(admitted-20, these-17)
aux(admitted-20, will-18)
auxpass(admitted-20, be-19)
dep(doings-15, admitted-20)
agent(admitted-20, all-22)
det(objects-27, some-25)
amod(objects-27, other-26)
prep_for(doings-15, objects-27)
dobj(spent-31, which-29)
nsubj(spent-31, he-30)
prepc_upon(objects-27, spent-31)
amod(labour-33, much-32)
dobj(spent-31, labour-33)
aux(regarded-41, would-34)
amod(people-38, most-37)
agent(regarded-41, people-38)
auxpass(regarded-41, be-40)
ccomp(well-3, regarded-41)
advmod(useless-44, utterly-43)
prep_as(regarded-41, useless-44)

(ROOT
  (S
    (NP
      (NP (JJ Few))
      (, ,)
      (PP (IN for)
        (NP (NN instance)))
      (, ,))
    (VP (MD would)
      (VP (VB allow)
        (SBAR
          (SBAR
            (S
              (NP (EX there))
              (VP (VBD was)
                (NP
                  (NP (DT any) (NN value))
                  (PP (IN in)
                    (NP
                      (NP (DT a) (NN water-wheel))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP
                            (VP (MD could)
                              (VP (VB grind)
                                (NP (DT no) (NN corn))))
                            (, ,)
                            (CC and)
                            (VP (VBD was)))))))
                  (PP (IN of)
                    (NP (NN service) (RB only)))
                  (S
                    (VP (TO to)
                      (VP (VB wake)
                        (NP (PRP him))
                        (PP
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NN middle))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (NN night))
                                  (PRN (: --) (RB not)
                                    (PP (IN for)
                                      (NP (NN work))))))))
                          (, ,) (RB not)
                          (PP (IN for)
                            (NP
                              (NP (DT the) (NN learning))
                              (PP (IN of)
                                (NP (DT a) (JJ single) (NN lesson)))))))))))))
          (, ,)
          (CC but)
          (SBAR (RB only) (IN that)
            (S
              (NP (PRP he))
              (VP (MD might)
                (VP
                  (VP (VB stare)
                    (PRT (RP out))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN window))
                        (PP (IN for)
                          (NP (DT a) (NN while))))))
                  (, ,)
                  (CC and)
                  (ADVP (RB then))
                  (VP (VB get)
                    (PP (IN into)
                      (NP (NN bed)))
                    (ADVP (RB again))))))))))
    (. .)))

nsubj(allow-7, Few-1)
prep_for(Few-1, instance-4)
aux(allow-7, would-6)
root(ROOT-0, allow-7)
expl(was-9, there-8)
dep(allow-7, was-9)
det(value-11, any-10)
nsubj(was-9, value-11)
det(water-wheel-14, a-13)
prep_in(value-11, water-wheel-14)
nsubj(grind-17, water-wheel-14)
nsubj(was-22, water-wheel-14)
aux(grind-17, could-16)
rcmod(water-wheel-14, grind-17)
neg(corn-19, no-18)
dobj(grind-17, corn-19)
rcmod(water-wheel-14, was-22)
conj_and(grind-17, was-22)
prep_of(value-11, service-24)
advmod(service-24, only-25)
aux(wake-27, to-26)
vmod(value-11, wake-27)
dobj(wake-27, him-28)
det(middle-31, the-30)
prep_in(wake-27, middle-31)
det(night-34, the-33)
prep_of(middle-31, night-34)
dep(night-34, not-36)
prep_for(night-34, work-38)
neg(wake-27, not-40)
det(learning-43, the-42)
prep_for(wake-27, learning-43)
det(lesson-47, a-45)
amod(lesson-47, single-46)
prep_of(learning-43, lesson-47)
advmod(stare-54, only-50)
mark(stare-54, that-51)
nsubj(stare-54, he-52)
nsubj(get-65, he-52)
aux(stare-54, might-53)
dep(allow-7, stare-54)
conj_but(was-9, stare-54)
det(window-58, the-57)
prep_out_of(stare-54, window-58)
det(while-61, a-60)
prep_for(window-58, while-61)
advmod(get-65, then-64)
conj_but(was-9, get-65)
conj_and(stare-54, get-65)
prep_into(get-65, bed-67)
advmod(get-65, again-68)

(ROOT
  (S
    (PP (IN For)
      (NP (PRP$ my) (NN part)))
    (, ,)
    (ADVP (RB nevertheless))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (S
        (NP (PRP it))
        (NP (DT a)
          (ADJP (RBS most) (JJ useful))
          (NN contrivance))))
    (. .)))

poss(part-3, my-2)
prep_for(think-8, part-3)
advmod(think-8, nevertheless-5)
nsubj(think-8, I-7)
root(ROOT-0, think-8)
nsubj(contrivance-13, it-9)
det(contrivance-13, a-10)
advmod(useful-12, most-11)
amod(contrivance-13, useful-12)
xcomp(think-8, contrivance-13)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (DT all)))
      (NP (JJ lovely) (NNS sights))
      (VP (VBP tend)
        (S
          (VP (TO to)
            (VP (VB keep)
              (NP (DT the) (NN soul) (JJ pure))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB lift)
                    (NP (DT the) (NN heart))
                    (PRT (RP up))
                    (PP (TO to)
                      (NP (NNP God)))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB above))
      (, ,)
      (NP
        (NP (RB not) (RB merely))
        (SBAR
          (WHNP (WP what) (NNS people))
          (S
            (VP (VBP call)
              (ADJP (JJ low))
              (SBAR
                (SBAR
                  (S
                    (VP (VBZ cares))))
                (, ,)
                (CC but)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (NNS people))
                    (VP (MD would)
                      (VP (VB call)
                        (ADJP (JJ reasonable)))))))))))
      (VP (VBZ cares) (, ,)
        (SBAR (IN although)
          (S
            (NP (PRP$ our) (JJ great) (NN Teacher))
            (VP (VBZ teaches)
              (NP (PRP us))
              (SBAR (IN that)
                (S
                  (NP (JJ such) (NNS cares))
                  (VP (VBP are)
                    (VP (VBG unjust)
                      (PP (IN towards)
                        (NP
                          (NP (PRP$ our) (NN Father))
                          (PP (IN in)
                            (NP (NNP Heaven))))))))))))))
    (. .)))

prep_for(tend-5, all-2)
amod(sights-4, lovely-3)
nsubj(tend-5, sights-4)
nsubj(keep-7, sights-4)
root(ROOT-0, tend-5)
aux(keep-7, to-6)
xcomp(tend-5, keep-7)
det(soul-9, the-8)
dobj(keep-7, soul-9)
amod(soul-9, pure-10)
aux(lift-13, to-12)
vmod(keep-7, lift-13)
det(heart-15, the-14)
dobj(lift-13, heart-15)
prt(lift-13, up-16)
prep_to(lift-13, God-18)
advmod(cares-37, above-21)
neg(merely-24, not-23)
det(people-26, merely-24)
nsubj(cares-37, merely-24)
nsubj(call-27, people-26)
rcmod(merely-24, call-27)
acomp(call-27, low-28)
dep(call-27, cares-29)
dobj(call-35, what-32)
nsubj(call-35, people-33)
aux(call-35, would-34)
dep(call-27, call-35)
conj_but(cares-29, call-35)
acomp(call-35, reasonable-36)
conj_and(tend-5, cares-37)
mark(teaches-43, although-39)
poss(Teacher-42, our-40)
amod(Teacher-42, great-41)
nsubj(teaches-43, Teacher-42)
advcl(cares-37, teaches-43)
dobj(teaches-43, us-44)
mark(unjust-49, that-45)
amod(cares-47, such-46)
nsubj(unjust-49, cares-47)
aux(unjust-49, are-48)
ccomp(teaches-43, unjust-49)
poss(Father-52, our-51)
prep_towards(unjust-49, Father-52)
prep_in(Father-52, Heaven-54)

(ROOT
  (S
    (ADVP (RBR More) (IN than) (RB that))
    (, ,)
    (PP (IN by)
      (S
        (VP (VBG helping)
          (S
            (VP (TO to)
              (VP (VB keep)
                (NP
                  (NP (DT the) (NN mind))
                  (ADJP (JJ calm)
                    (CC and)
                    (JJ pure)))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP help)
      (S
        (VP (TO to)
          (VP (VB keep)
            (NP
              (NP (DT the) (NN imagination))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (DT the) (NN source))
                      (PP (IN of)
                        (NP
                          (NP (DT all) (NN invention))
                          (, ,)
                          (NP (JJ active))
                          (, ,)
                          (CC and)
                          (NP (DT the) (NN judgment))))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ weighs)
                            (NP (PDT all) (PRP$ its) (NNS suggestions))
                            (, ,)
                            (ADVP (RB just))))))))))))))
    (. .)))

advmod(than-2, More-1)
advmod(help-16, than-2)
advmod(than-2, that-3)
prepc_by(help-16, helping-6)
aux(keep-8, to-7)
xcomp(helping-6, keep-8)
det(mind-10, the-9)
dobj(keep-8, mind-10)
amod(mind-10, calm-11)
amod(mind-10, pure-13)
conj_and(calm-11, pure-13)
nsubj(help-16, they-15)
nsubj(keep-18, they-15)
root(ROOT-0, help-16)
aux(keep-18, to-17)
xcomp(help-16, keep-18)
det(imagination-20, the-19)
dobj(keep-18, imagination-20)
nsubj(source-25, imagination-20)
cop(source-25, is-23)
det(source-25, the-24)
rcmod(imagination-20, source-25)
nsubj(weighs-37, source-25)
det(invention-28, all-27)
prep_of(source-25, invention-28)
prep_of(source-25, active-30)
conj_and(invention-28, active-30)
det(judgment-34, the-33)
prep_of(source-25, judgment-34)
conj_and(invention-28, judgment-34)
rcmod(source-25, weighs-37)
predet(suggestions-40, all-38)
poss(suggestions-40, its-39)
dobj(weighs-37, suggestions-40)
advmod(weighs-37, just-42)

(ROOT
  (S
    (S
      (NP (WDT Whatever))
      (VP (VBZ is)
        (ADJP (JJ beautiful)
          (SBAR
            (S
              (VP (VBZ is)
                (PP (IN of)
                  (NP (NNP God)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (JJ only) (NN ignorance))
          (CC or)
          (NP
            (NP (DT a) (JJ low) (NN condition))
            (PP (IN of)
              (NP (NN heart)
                (CC and)
                (NN soul)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ does)
                  (NP
                    (NP (RB not) (NN prize))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ is)
                          (ADJP (JJ beautiful)))))))))))))
    (. .)))

nsubj(beautiful-3, Whatever-1)
cop(beautiful-3, is-2)
root(ROOT-0, beautiful-3)
ccomp(beautiful-3, is-4)
prep_of(is-4, God-6)
nsubj(ignorance-12, it-9)
cop(ignorance-12, is-10)
amod(ignorance-12, only-11)
conj_and(beautiful-3, ignorance-12)
det(condition-16, a-14)
amod(condition-16, low-15)
conj_and(beautiful-3, condition-16)
conj_or(ignorance-12, condition-16)
nsubj(does-22, condition-16)
prep_of(condition-16, heart-18)
prep_of(condition-16, soul-20)
conj_and(heart-18, soul-20)
rcmod(condition-16, does-22)
neg(prize-24, not-23)
dobj(does-22, prize-24)
nsubj(beautiful-27, prize-24)
cop(beautiful-27, is-26)
rcmod(prize-24, beautiful-27)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (NP
            (NP
              (NP (DT a) (NN choice))
              (PP (IN between)
                (NP (CD two) (NNS mills))))
            (, ,)
            (NP
              (NP (CD one))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD would)
                    (VP (VB set)
                      (NP (JJ fine) (NNS dinners))
                      (PP (IN on)
                        (NP (PRP$ my) (NN table))))))))
            (, ,)
            (CC and)
            (NP
              (NP (CD one))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD would)
                    (VP (VB show)
                      (S
                        (NP (PRP me))
                        (NP
                          (NP (JJ lovely) (NNS sights))
                          (PP (IN in)
                            (NP (NN earth)
                              (CC and)
                              (NN sky)
                              (CC and)
                              (NN sea))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP I))
          (VP (MD should)
            (VP (VB count)
              (NP (DT the)
                (ADJP (RBR more) (JJ useful))))))))
    (. .)))

mark(had-3, If-1)
nsubj(had-3, I-2)
advcl(know-36, had-3)
det(choice-5, a-4)
dobj(had-3, choice-5)
num(mills-8, two-7)
prep_between(choice-5, mills-8)
dobj(had-3, one-10)
conj_and(choice-5, one-10)
nsubj(set-13, one-10)
aux(set-13, would-12)
rcmod(one-10, set-13)
amod(dinners-15, fine-14)
dobj(set-13, dinners-15)
poss(table-18, my-17)
prep_on(set-13, table-18)
dobj(had-3, one-21)
conj_and(choice-5, one-21)
nsubj(show-24, one-21)
aux(show-24, would-23)
rcmod(one-21, show-24)
nsubj(sights-27, me-25)
amod(sights-27, lovely-26)
xcomp(show-24, sights-27)
prep_in(sights-27, earth-29)
prep_in(sights-27, sky-31)
conj_and(earth-29, sky-31)
prep_in(sights-27, sea-33)
conj_and(earth-29, sea-33)
nsubj(know-36, I-35)
root(ROOT-0, know-36)
dobj(count-40, which-37)
nsubj(count-40, I-38)
aux(count-40, should-39)
ccomp(know-36, count-40)
det(useful-43, the-41)
advmod(useful-43, more-42)
dobj(count-40, useful-43)

(ROOT
  (S
    (S
      (ADVP (RB Perhaps))
      (NP (EX there))
      (VP (VBZ is) (RB not)
        (ADJP (RB so) (JJ much)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN said)
                  (PP (IN for)
                    (NP
                      (NP (DT the) (JJ next) (NN whim))
                      (PP (IN of)
                        (NP (NNP Willie) (POS 's))))))))))))
    (: ;)
    (S (CC but)
      (NP
        (NP (DT a) (NN part))
        (ADVP (IN at) (JJS least))
        (SBAR
          (WHPP (IN of)
            (WHNP (WP what)))
          (S
            (NP (PRP I))
            (VP (VBP have)
              (ADVP (RB just))
              (VP (VBN written))))))
      (VP (MD will)
        (VP (VB apply)
          (PP (TO to)
            (NP (PRP it)))
          (ADVP (RB also)))))
    (. .)))

advmod(is-3, Perhaps-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
advmod(much-6, so-5)
acomp(is-3, much-6)
aux(said-9, to-7)
auxpass(said-9, be-8)
xcomp(much-6, said-9)
det(whim-13, the-11)
amod(whim-13, next-12)
prep_for(said-9, whim-13)
prep_of(whim-13, Willie-15)
possessive(Willie-15, 's-16)
cc(apply-30, but-18)
det(part-20, a-19)
prep_of(written-28, part-20)
nsubj(apply-30, part-20)
advmod(part-20, at-21)
pobj(at-21, least-22)
nsubj(written-28, I-25)
aux(written-28, have-26)
advmod(written-28, just-27)
rcmod(part-20, written-28)
aux(apply-30, will-29)
parataxis(is-3, apply-30)
prep_to(apply-30, it-32)
advmod(apply-30, also-33)

(ROOT
  (S
    (S
      (SBAR
        (WHNP (WP What))
        (S
          (VP (VBD put)
            (NP (PRP it))
            (PP (IN in)
              (NP (PRP$ his) (NN head))))))
      (S
        (NP (PRP I))
        (VP (VBP am) (RB not)
          (ADJP (JJ sure))))
      (, ,)
      (CC but)
      (S
        (NP (PRP I))
        (VP (VBP think)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADVP
                  (NP (CD two) (NNS things))
                  (RB together))))))))
    (: --)
    (S
      (S
        (VP
          (VP (VBG seeing)
            (NP
              (NP (DT a) (VBG soaring) (NN lark))
              (ADJP (JJ radiant)
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN light))
                    (PP (IN of)
                      (NP (DT the) (NN unrisen) (NN sun))))))))
          (, ,)
          (CC and)
          (VP (VBG finding)
            (PP (IN in)
              (NP
                (NP (DT a) (NN corner))
                (PP (IN of)
                  (NP
                    (NP (NNP Spelman) (POS 's))
                    (NN shop)))))
            (NP
              (NP (DT a) (JJ large) (JJ gilt) (NN ball))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD had)
                    (VP (VBN belonged)
                      (PP (TO to)
                        (NP (DT an) (JJ old) (JJ eight-day) (NN clock)))))))))))
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN bought))))
    (. .)))

nsubj(put-2, What-1)
dep(sure-10, put-2)
dobj(put-2, it-3)
poss(head-6, his-5)
prep_in(put-2, head-6)
nsubj(sure-10, I-7)
cop(sure-10, am-8)
neg(sure-10, not-9)
root(ROOT-0, sure-10)
nsubj(think-14, I-13)
conj_but(sure-10, think-14)
nsubj(was-16, it-15)
ccomp(think-14, was-16)
num(things-18, two-17)
npadvmod(together-19, things-18)
advmod(was-16, together-19)
dep(bought-57, seeing-21)
det(lark-24, a-22)
amod(lark-24, soaring-23)
dobj(seeing-21, lark-24)
amod(lark-24, radiant-25)
det(light-28, the-27)
prep_with(radiant-25, light-28)
det(sun-32, the-30)
nn(sun-32, unrisen-31)
prep_of(light-28, sun-32)
conj_and(seeing-21, finding-35)
dep(bought-57, finding-35)
det(corner-38, a-37)
prep_in(finding-35, corner-38)
poss(shop-42, Spelman-40)
prep_of(corner-38, shop-42)
det(ball-46, a-43)
amod(ball-46, large-44)
amod(ball-46, gilt-45)
dobj(finding-35, ball-46)
nsubj(belonged-49, ball-46)
aux(belonged-49, had-48)
rcmod(ball-46, belonged-49)
det(clock-54, an-51)
amod(clock-54, old-52)
amod(clock-54, eight-day-53)
prep_to(belonged-49, clock-54)
nsubj(bought-57, he-55)
aux(bought-57, had-56)
parataxis(sure-10, bought-57)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN passage))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (PRP he))
            (VP (VBD set)
              (NP (PRP it))
              (PRT (RP up))))))
      (VP (VBD was)
        (ADJP (RB so) (JJ low))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (S
                (VP (TO to)
                  (VP (VB remove)
                    (NP (DT the) (NNS ornaments))
                    (PP (IN from)
                      (NP
                        (NP (DT the) (NN top))
                        (PP (IN of)
                          (NP (PRP it)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT this) (NN one))
      (VP (VBD was)
        (VP (VBN humbled)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (MD might)
                (VP (VB be)
                  (VP (VBN exalted)))))))))
    (. .)))

det(passage-2, The-1)
prep_in(set-6, passage-2)
nsubj(low-11, passage-2)
nsubj(set-6, he-5)
rcmod(passage-2, set-6)
dobj(set-6, it-7)
prt(set-6, up-8)
cop(low-11, was-9)
advmod(low-11, so-10)
root(ROOT-0, low-11)
mark(had-14, that-12)
nsubj(had-14, he-13)
nsubj(remove-16, he-13)
ccomp(low-11, had-14)
aux(remove-16, to-15)
xcomp(had-14, remove-16)
det(ornaments-18, the-17)
dobj(remove-16, ornaments-18)
det(top-21, the-20)
prep_from(remove-16, top-21)
prep_of(top-21, it-23)
det(one-27, this-26)
nsubjpass(humbled-29, one-27)
auxpass(humbled-29, was-28)
conj_but(low-11, humbled-29)
mark(exalted-34, that-30)
nsubjpass(exalted-34, it-31)
aux(exalted-34, might-32)
auxpass(exalted-34, be-33)
ccomp(humbled-29, exalted-34)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ very) (NN sight))
      (PP (IN of)
        (NP (PRP it)))
      (VP
        (VP (VBN set)
          (NP
            (NP (NNP Willie))
            (VP (VBG thinking)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP he))
                  (VP (MD could)
                    (VP (VB do)
                      (PP (IN with)
                        (NP (PRP it))))))))
            (: ;)
            (PP (IN for)
              (NP (PRP he)))))
        (CONJP (RB not) (JJ only))
        (VP (VBN meditated)
          (SBAR
            (WHADVP (WRB how))
            (S
              (VP (TO to)
                (VP (VB do)
                  (NP (DT a) (NN thing)))))))
        (, ,)
        (FRAG (CC but)
          (ADVP (RB sometimes))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP (DT a) (NN thing)))))))))
    (VP (VBP do))
    (. .)))

det(sight-3, The-1)
amod(sight-3, very-2)
nsubj(do-34, sight-3)
prep_of(sight-3, it-5)
dep(sight-3, set-6)
dobj(set-6, Willie-7)
vmod(Willie-7, thinking-8)
dobj(do-12, what-9)
nsubj(do-12, he-10)
aux(do-12, could-11)
ccomp(thinking-8, do-12)
prep_with(do-12, it-14)
prep_for(Willie-7, he-17)
neg(only-19, not-18)
dep(set-6, only-19)
conj(set-6, meditated-20)
advmod(do-23, how-21)
aux(do-23, to-22)
ccomp(meditated-20, do-23)
xcomp(meditated-20, do-23)
det(thing-25, a-24)
dobj(do-23, thing-25)
cc(sometimes-28, but-27)
dep(set-6, sometimes-28)
nsubj(make-31, what-29)
aux(make-31, to-30)
dep(sometimes-28, make-31)
det(thing-33, a-32)
dobj(make-31, thing-33)
root(ROOT-0, do-34)

(ROOT
  (SINV (CC Nor)
    (VBD was)
    (NP (PRP it))
    (VP
      (ADVP (RB long))
      (VBN ere)
      (SBAR
        (S
          (NP (PRP he))
          (VP
            (VP (VBD made)
              (PRT (RP up))
              (NP (PRP$ his) (NN mind)))
            (, ,)
            (CC and)
            (VP (VBD set)
              (PP (IN about)
                (NP
                  (NP (DT a) (JJ huge) (NN kite))
                  (, ,)
                  (UCP
                    (ADJP
                      (NP
                        (QP (JJR more) (IN than) (CD six))
                        (NNS feet))
                      (JJ high))
                    (: --)
                    (NP
                      (NP (DT a) (JJ great) (JJ strong) (NN monster))
                      (, ,)
                      (PP (IN with)
                        (NP (DT a) (NN tail)))))
                  (PP (IN of)
                    (NP (JJ portentous) (NN length))))))
            (: --)
            (PP (TO to)
              (NP
                (NP (DT the) (NN top))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN arch))
                    (SBAR
                      (WHPP (IN of)
                        (WHNP (WDT which)))
                      (S
                        (NP (PRP he))
                        (VP (VBD attached)
                          (NP (DT the) (JJ golden) (NN ball)))))))))))))
    (. .)))

cc(ere-5, Nor-1)
auxpass(ere-5, was-2)
nsubjpass(ere-5, it-3)
advmod(ere-5, long-4)
root(ROOT-0, ere-5)
nsubj(made-7, he-6)
nsubj(set-13, he-6)
ccomp(ere-5, made-7)
prt(made-7, up-8)
poss(mind-10, his-9)
dobj(made-7, mind-10)
ccomp(ere-5, set-13)
conj_and(made-7, set-13)
det(kite-17, a-15)
amod(kite-17, huge-16)
prep_about(set-13, kite-17)
mwe(than-20, more-19)
quantmod(six-21, than-20)
num(feet-22, six-21)
npadvmod(high-23, feet-22)
amod(kite-17, high-23)
det(monster-28, a-25)
amod(monster-28, great-26)
amod(monster-28, strong-27)
dep(high-23, monster-28)
det(tail-32, a-31)
prep_with(monster-28, tail-32)
amod(length-35, portentous-34)
prep_of(kite-17, length-35)
ccomp(ere-5, to-37)
conj_and(made-7, to-37)
det(top-39, the-38)
prep_to(made-7, top-39)
det(arch-42, the-41)
prep_of(top-39, arch-42)
prep_of(attached-46, arch-42)
nsubj(attached-46, he-45)
rcmod(arch-42, attached-46)
det(ball-49, the-47)
amod(ball-49, golden-48)
dobj(attached-46, ball-49)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP (VBD bought)
        (NP
          (NP (DT a) (NN quantity))
          (PP (IN of)
            (NP (NN string)))))
      (, ,)
      (CC and)
      (VP (VBD set)
        (NP (PRP$ his) (NN wheel))
        (S
          (VP (TO to)
            (VP (VB call)
              (NP (PRP him))
              (ADVP (RB up)
                (NP (DT an) (NN hour))
                (PP (IN before)
                  (NP (NN sunrise)))))))))
    (. .)))

advmod(bought-3, Then-1)
nsubj(bought-3, he-2)
nsubj(set-10, he-2)
root(ROOT-0, bought-3)
det(quantity-5, a-4)
dobj(bought-3, quantity-5)
prep_of(quantity-5, string-7)
conj_and(bought-3, set-10)
poss(wheel-12, his-11)
dobj(set-10, wheel-12)
aux(call-14, to-13)
vmod(set-10, call-14)
dobj(call-14, him-15)
advmod(call-14, up-16)
det(hour-18, an-17)
pobj(up-16, hour-18)
prep_before(up-16, sunrise-20)

(ROOT
  (S
    (S
      (NP (CD One) (NN morning))
      (VP (VBD was)
        (UCP
          (ADJP (RB too) (RB still))
          (, ,)
          (ADJP
            (NP (DT another) (RB too))
            (JJ cloudy))
          (, ,)
          (CC and)
          (NP (DT a) (JJ third) (NN wet)))))
    (: ;)
    (S (CC but)
      (ADVP (IN at))
      (NP (JJ last))
      (VP (VBD came)
        (NP
          (NP (CD one))
          (ADJP (JJ clear)
            (CC and)
            (JJ cool)))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT a) (JJ steady) (NN breeze))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD sent)
                  (NP
                    (NP (DT the) (NNS leaves))
                    (PP (IN of)
                      (NP (DT the) (JJ black) (NNS poplars))))
                  (ADVP (RB all)
                    (NP (CD one) (NN way))))))))))
    (. .)))

num(morning-2, One-1)
nsubj(still-5, morning-2)
nsubj(cloudy-9, morning-2)
cop(still-5, was-3)
advmod(still-5, too-4)
root(ROOT-0, still-5)
det(too-8, another-7)
npadvmod(cloudy-9, too-8)
conj_and(still-5, cloudy-9)
det(wet-14, a-12)
amod(wet-14, third-13)
conj_and(still-5, wet-14)
cc(came-19, but-16)
advmod(came-19, at-17)
nsubj(came-19, last-18)
parataxis(still-5, came-19)
dobj(came-19, one-20)
amod(one-20, clear-21)
amod(one-20, cool-23)
conj_and(clear-21, cool-23)
det(breeze-28, a-26)
amod(breeze-28, steady-27)
prep_with(came-19, breeze-28)
nsubj(sent-30, breeze-28)
rcmod(breeze-28, sent-30)
det(leaves-32, the-31)
dobj(sent-30, leaves-32)
det(poplars-36, the-34)
amod(poplars-36, black-35)
prep_of(leaves-32, poplars-36)
advmod(sent-30, all-37)
num(way-39, one-38)
pobj(all-37, way-39)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBN dressed)
        (PP (IN with)
          (NP (NN speed)))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (S
        (VP (VBG taking)
          (NP
            (NP (PRP$ his) (NN kite)
              (CC and)
              (NN string))
            (, ,)
            (VP (VBN set)
              (PRT (RP out))
              (PP (IN for)
                (NP
                  (NP (DT a) (NN grass) (NN field))
                  (VP (VBG belonging)
                    (PP (TO to)
                      (NP (NNP Farmer) (NNP Thomson)))))))
            (, ,)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP he))
                (VP (VBD found)
                  (NP
                    (NP (JJS most))
                    (PP (IN of)
                      (NP (DT the) (NNS daisies))))))))))
      (ADVP (RB still))
      (VP (VBN buttoned)
        (PRT (RP up))
        (PP (IN in)
          (NP
            (NP (NN sleep))
            (, ,)
            (NP (PRP$ their) (JJ red) (NNS tips))))
        (ADVP
          (ADVP (RB all) (RB together))
          (, ,) (RB as)
          (ADVP (RB tight)))))
    (CC and)
    (S
      (ADVP (RB close)
        (PP (IN as)
          (NP
            (NP (DT the) (NNS lips))
            (PP (IN of)
              (NP
                (NP (DT a) (NN baby))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD wo) (RB n't)
                      (VP (VB take)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (VBZ is)
                              (VP (VBN offered)
                                (S
                                  (NP (PRP it)))
                                (: --)
                                (SBAR (RB as) (IN if)
                                  (S
                                    (NP (PRP they))
                                    (VP
                                      (VP
                                        (ADVP (RB never))
                                        (VBD meant)
                                        (S
                                          (VP (TO to)
                                            (VP (VB have)
                                              (NP (NN anything))
                                              (ADVP (RBR more))
                                              (S
                                                (VP (TO to)
                                                  (VP (VB do)
                                                    (PP (IN with)
                                                      (NP (DT the) (NN sun))))))))))
                                      (, ,)
                                      (CC and)
                                      (VP (MD would)
                                        (ADVP (RB never))
                                        (VP
                                          (ADVP (RB again))
                                          (VB show)
                                          (NP (PRP him))
                                          (NP (DT the) (JJ little) (JJ golden) (NN sun))))))))))))))))))))
      (NP (PRP they))
      (VP (VBD had)
        (NP (PRP themselves))
        (ADVP (RB inside)
          (PP (IN of)
            (NP (PRP them))))))
    (. .)))

nsubj(dressed-2, He-1)
root(ROOT-0, dressed-2)
prep_with(dressed-2, speed-4)
csubj(buttoned-33, taking-8)
poss(kite-10, his-9)
dobj(taking-8, kite-10)
dobj(taking-8, string-12)
conj_and(kite-10, string-12)
vmod(kite-10, set-14)
prt(set-14, out-15)
det(field-19, a-17)
nn(field-19, grass-18)
prep_for(set-14, field-19)
vmod(field-19, belonging-20)
nn(Thomson-23, Farmer-22)
prep_to(belonging-20, Thomson-23)
advmod(found-27, where-25)
nsubj(found-27, he-26)
rcmod(kite-10, found-27)
dobj(found-27, most-28)
det(daisies-31, the-30)
prep_of(most-28, daisies-31)
advmod(buttoned-33, still-32)
conj_and(dressed-2, buttoned-33)
prt(buttoned-33, up-34)
prep_in(buttoned-33, sleep-36)
poss(tips-40, their-38)
amod(tips-40, red-39)
appos(sleep-36, tips-40)
advmod(together-42, all-41)
advmod(buttoned-33, together-42)
advmod(together-42, as-44)
advmod(together-42, tight-45)
advmod(had-89, close-47)
det(lips-50, the-49)
prep_as(close-47, lips-50)
det(baby-53, a-52)
prep_of(lips-50, baby-53)
nsubj(take-57, baby-53)
aux(take-57, wo-55)
neg(take-57, n't-56)
rcmod(baby-53, take-57)
nsubjpass(offered-60, what-58)
auxpass(offered-60, is-59)
ccomp(take-57, offered-60)
xcomp(offered-60, it-61)
advmod(meant-67, as-63)
mark(meant-67, if-64)
nsubj(meant-67, they-65)
nsubj(have-69, they-65)
nsubj(show-82, they-65)
neg(meant-67, never-66)
advcl(offered-60, meant-67)
parataxis(offered-60, meant-67)
aux(have-69, to-68)
xcomp(meant-67, have-69)
dobj(have-69, anything-70)
advmod(have-69, more-71)
aux(do-73, to-72)
vmod(have-69, do-73)
det(sun-76, the-75)
prep_with(do-73, sun-76)
aux(show-82, would-79)
neg(show-82, never-80)
advmod(show-82, again-81)
advcl(offered-60, show-82)
parataxis(offered-60, show-82)
conj_and(meant-67, show-82)
iobj(show-82, him-83)
det(sun-87, the-84)
amod(sun-87, little-85)
amod(sun-87, golden-86)
dobj(show-82, sun-87)
nsubj(had-89, they-88)
conj_and(dressed-2, had-89)
dobj(had-89, themselves-90)
prep_inside_of(had-89, them-93)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ few) (NNS minutes)))
    (NP (DT the) (NN kite))
    (VP (VBD had)
      (VP (VBN begun)
        (S
          (VP (TO to)
            (VP
              (VP (VB soar) (, ,)
                (ADVP (RB slowly)))
              (CC and)
              (ADVP (RB steadily))
              (, ,)
              (ADVP
                (ADVP (RB then) (RBR faster)
                  (CC and)
                  (RBR faster))
                (, ,)
                (SBAR (IN until)
                  (S
                    (PP (IN at)
                      (NP (NN length)))
                    (NP (PRP it))
                    (VP (VBD was)
                      (VP
                        (VP (VBG towering)
                          (ADVP (RB aloft)))
                        (, ,)
                        (VP (VBG tugging))
                        (CC and)
                        (VP (VBG pulling)
                          (PP (IN at)
                            (NP
                              (NP (DT the) (NN string))
                              (, ,)
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (NP (PRP he))
                                  (VP (MD could) (RB not)
                                    (VP (VB let)
                                      (PRT (RP out))
                                      (ADVP (RB fast) (RB enough)))))))))))))))))))
    (. .)))

det(minutes-4, a-2)
amod(minutes-4, few-3)
prep_in(begun-8, minutes-4)
det(kite-6, the-5)
nsubj(begun-8, kite-6)
nsubj(soar-10, kite-6)
aux(begun-8, had-7)
root(ROOT-0, begun-8)
aux(soar-10, to-9)
xcomp(begun-8, soar-10)
advmod(soar-10, slowly-12)
xcomp(begun-8, steadily-14)
advmod(soar-10, steadily-14)
conj_and(soar-10, steadily-14)
advmod(faster-17, then-16)
advmod(soar-10, faster-17)
advmod(soar-10, faster-19)
conj_and(faster-17, faster-19)
mark(towering-26, until-21)
prep_at(towering-26, length-23)
nsubj(towering-26, it-24)
nsubj(tugging-29, it-24)
nsubj(pulling-31, it-24)
aux(towering-26, was-25)
advcl(faster-17, towering-26)
advmod(towering-26, aloft-27)
advcl(faster-17, tugging-29)
conj_and(towering-26, tugging-29)
advcl(faster-17, pulling-31)
conj_and(towering-26, pulling-31)
det(string-34, the-33)
prep_at(pulling-31, string-34)
dobj(let-40, string-34)
nsubj(let-40, he-37)
aux(let-40, could-38)
neg(let-40, not-39)
rcmod(string-34, let-40)
prt(let-40, out-41)
advmod(enough-43, fast-42)
advmod(let-40, enough-43)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD kept)
      (S
        (VP (VBG looking)
          (PRT (RP up))
          (SBAR (IN after)
            (S
              (NP (PRP it))
              (VP (VBP intently)
                (SBAR (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBD rose)))))))))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (ADVP (RB suddenly))
          (NP (DT a) (JJ new) (NN morning) (NN star))
          (VP (VBP burst)
            (PRT (RP out))
            (PP (IN in)
              (NP (JJ golden) (NN glitter)))))))
    (. .)))

nsubj(kept-2, He-1)
root(ROOT-0, kept-2)
xcomp(kept-2, looking-3)
prt(looking-3, up-4)
mark(intently-7, after-5)
nsubj(intently-7, it-6)
advcl(looking-3, intently-7)
mark(rose-10, as-8)
nsubj(rose-10, it-9)
advcl(intently-7, rose-10)
advmod(burst-18, when-12)
advmod(burst-18, suddenly-13)
det(star-17, a-14)
amod(star-17, new-15)
nn(star-17, morning-16)
nsubj(burst-18, star-17)
advcl(kept-2, burst-18)
prt(burst-18, out-19)
amod(glitter-22, golden-21)
prep_in(burst-18, glitter-22)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT the) (JJ gilt) (NN ball))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBD saw)
        (NP (DT the) (NN sun))))
    (. .)))

nsubj(ball-5, It-1)
cop(ball-5, was-2)
det(ball-5, the-3)
amod(ball-5, gilt-4)
root(ROOT-0, ball-5)
nsubj(saw-8, it-7)
parataxis(ball-5, saw-8)
det(sun-10, the-9)
dobj(saw-8, sun-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN glory))
      (SBAR
        (WHNP (WDT which))
        (S
          (PRN (, ,)
            (S
              (VP (VBG striking)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN heart))
                    (PP (IN of)
                      (NP (DT the) (NN lark)))))))
            (, ,))
          (VP (VBD was)
            (ADVP (RB there))
            (VP (VBN transmuted)
              (PP (IN into)
                (NP (NN song))))))))
    (, ,)
    (VP (VBD came)
      (ADVP (RB back))
      (PP (IN from)
        (NP (DT the) (NN ball)))
      (, ,)
      (PP (IN after)
        (NP (PRP$ its) (NN kind)))
      (, ,)
      (PP (IN in)
        (NP (NN glow)
          (CC and)
          (NN gleam))))
    (. .)))

det(glory-2, The-1)
nsubjpass(transmuted-15, glory-2)
nsubj(came-19, glory-2)
parataxis(transmuted-15, striking-5)
det(heart-8, the-7)
prep_on(striking-5, heart-8)
det(lark-11, the-10)
prep_of(heart-8, lark-11)
auxpass(transmuted-15, was-13)
advmod(transmuted-15, there-14)
rcmod(glory-2, transmuted-15)
prep_into(transmuted-15, song-17)
root(ROOT-0, came-19)
advmod(came-19, back-20)
det(ball-23, the-22)
prep_from(came-19, ball-23)
poss(kind-27, its-26)
prep_after(came-19, kind-27)
prep_in(came-19, glow-30)
prep_in(came-19, gleam-32)
conj_and(glow-30, gleam-32)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBN danced)
        (PP (IN with)
          (NP (NN delight))))
      (, ,)
      (CC and)
      (VP (VBD shouted)
        (CC and)
        (VBD sang)
        (NP (PRP$ his) (JJ welcome))
        (PP (TO to)
          (NP
            (NP (DT the) (NN resurrection))
            (PP (IN of)
              (NP
                (NP (DT the) (NN sun))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP he))
                    (VP (VBD watched)
                      (NP (PRP$ his) (JJ golden) (NN ball))
                      (ADVP (RB alone))
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN depth))
                          (PP (IN of)
                            (NP (DT the) (NN air))))))))))))))
    (. .)))

nsubj(danced-2, He-1)
nsubj(shouted-7, He-1)
root(ROOT-0, danced-2)
prep_with(danced-2, delight-4)
conj_and(danced-2, shouted-7)
conj_and(danced-2, sang-9)
conj_and(shouted-7, sang-9)
poss(welcome-11, his-10)
dobj(shouted-7, welcome-11)
det(resurrection-14, the-13)
prep_to(shouted-7, resurrection-14)
det(sun-17, the-16)
prep_of(resurrection-14, sun-17)
mark(watched-21, as-19)
nsubj(watched-21, he-20)
dep(sun-17, watched-21)
poss(ball-24, his-22)
amod(ball-24, golden-23)
dobj(watched-21, ball-24)
advmod(watched-21, alone-25)
det(depth-28, the-27)
prep_in(watched-21, depth-28)
det(air-31, the-30)
prep_of(depth-28, air-31)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB never))
    (VP
      (VP (VBD thought)
        (PP (IN of)
          (NP (DT any) (NN one)))
        (S
          (VP (VBG hearing)
            (NP (PRP him)))))
      (, ,)
      (CC nor)
      (VP (VBD was)
        (ADJP
          (NP (PRP it))
          (JJ likely)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT any) (NN one))
                (PP (IN in)
                  (NP (DT the) (NN village))))
              (VP (MD would)
                (VP (VB be)
                  (ADVP (RB up) (RB yet)))))))))
    (. .)))

nsubj(thought-3, He-1)
nsubj(likely-13, He-1)
neg(thought-3, never-2)
root(ROOT-0, thought-3)
det(one-6, any-5)
prep_of(thought-3, one-6)
xcomp(thought-3, hearing-7)
dobj(hearing-7, him-8)
cop(likely-13, was-11)
npadvmod(likely-13, it-12)
conj_nor(thought-3, likely-13)
mark(be-21, that-14)
det(one-16, any-15)
nsubj(be-21, one-16)
det(village-19, the-18)
prep_in(one-16, village-19)
aux(be-21, would-20)
ccomp(likely-13, be-21)
advmod(yet-23, up-22)
advmod(be-21, yet-23)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADVP (RB therefore))
      (NP
        (NP (DT a) (JJ good) (NN deal))
        (VP (VBN surprised)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP he))
              (VP (VBD heard)
                (SBAR
                  (S
                    (NP
                      (NP (DT the) (JJ sweet) (NN voice))
                      (PP (IN of)
                        (NP
                          (NP
                            (NP (NNP Mona) (NNP Shepherd))
                            (PP (IN behind)
                              (NP (PRP him))))
                          (: ;)
                          (CC and)
                          (NP (NN turning))
                          (, ,))))
                    (VP (VBD saw)
                      (NP (PRP$ her)
                        (ADJP (VBG running)
                          (PP (TO to)
                            (NP (PRP him))))
                        (NN bare-headed))))))))))
      (, ,)
      (PP (IN with)
        (NP
          (NP (PRP$ her) (NN hair))
          (VP (VBG flying)
            (PP (IN in)
              (NP (DT the) (NN wind)))))))
    (. .)))

nsubj(deal-6, He-1)
cop(deal-6, was-2)
advmod(deal-6, therefore-3)
det(deal-6, a-4)
amod(deal-6, good-5)
root(ROOT-0, deal-6)
vmod(deal-6, surprised-7)
advmod(heard-10, when-8)
nsubj(heard-10, he-9)
advcl(surprised-7, heard-10)
det(voice-13, the-11)
amod(voice-13, sweet-12)
nsubj(saw-23, voice-13)
nn(Shepherd-16, Mona-15)
prep_of(voice-13, Shepherd-16)
prep_behind(Shepherd-16, him-18)
prep_of(voice-13, turning-21)
conj_and(Shepherd-16, turning-21)
ccomp(heard-10, saw-23)
poss(bare-headed-28, her-24)
amod(bare-headed-28, running-25)
prep_to(running-25, him-27)
dobj(saw-23, bare-headed-28)
poss(hair-32, her-31)
prep_with(deal-6, hair-32)
vmod(hair-32, flying-33)
det(wind-36, the-35)
prep_in(flying-33, wind-36)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Willie))
    (. !)))

root(ROOT-0, Willie-2)

(ROOT
  (ADVP (RB Willie) (. !) ('' '')))

root(ROOT-0, Willie-1)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD was)
      (NP
        (NP (NNP crying))
        (, ,)
        (NP
          (NP (NNS half-breathless))
          (PP (IN with)
            (NP (NN haste))))
        (CC and)
        (NP
          (NP (DT the) (NN buffeting))
          (PP (IN of)
            (NP (DT the) (NN breeze))))))
    (. .)))

nsubj(crying-3, she-1)
cop(crying-3, was-2)
root(ROOT-0, crying-3)
conj_and(crying-3, half-breathless-5)
prep_with(half-breathless-5, haste-7)
det(buffeting-10, the-9)
conj_and(crying-3, buffeting-10)
det(breeze-13, the-12)
prep_of(buffeting-10, breeze-13)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Well) (, ,) (NNP Mona))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (MD would)
            (VP (VB have)
              (VP (VBN thought)
                (PP (IN of)
                  (S
                    (VP (VBG seeing)
                      (NP (PRP you))
                      (ADVP (IN out) (RB so) (RB early)))))))))))
    (. ?) ('' '')))

nn(Mona-4, Well-2)
root(ROOT-0, Mona-4)
nsubj(thought-9, Mona-4)
aux(thought-9, would-7)
aux(thought-9, have-8)
rcmod(Mona-4, thought-9)
prepc_of(thought-9, seeing-11)
dobj(seeing-11, you-12)
advmod(seeing-11, out-13)
advmod(out-13, so-14)
advmod(out-13, early-15)

(ROOT
  (S (`` ``)
    (NP (NNP May))
    (RB n't)
    (NP (DT a) (NN girl))
    (VP (VBP get)
      (PRT (RP up))
      (NP
        (NP (JJ early))
        (, ,)
        (CONJP (RB as) (RB well) (IN as))
        (NP (DT a) (NN boy))))
    (. ?)))

tmod(get-6, May-2)
neg(get-6, n't-3)
det(girl-5, a-4)
nsubj(get-6, girl-5)
root(ROOT-0, get-6)
prt(get-6, up-7)
dobj(get-6, early-8)
det(boy-14, a-13)
dobj(get-6, boy-14)
conj_and(early-8, boy-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (PP (IN like)
        (S
          (VP (VBG climbing)
            (NP (NNS walls)
              (CC and)
              (NNS trees))))))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP know)))
      (, ,))
    (SBAR (IN though)
      (S
        (NP (PRP I))
        (VP (MD ca) (RB n't)
          (VP (VB see)
            (NP
              (NP (DT the) (NN harm))
              (PP (IN of)
                (NP (DT that))))
            (ADVP (RB either))))))
    (. .) ('' '')))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
neg('s-2, not-3)
prepc_like('s-2, climbing-5)
dobj(climbing-5, walls-6)
dobj(climbing-5, trees-8)
conj_and(walls-6, trees-8)
nsubj(know-11, you-10)
parataxis('s-2, know-11)
mark(see-17, though-13)
nsubj(see-17, I-14)
aux(see-17, ca-15)
neg(see-17, n't-16)
dep('s-2, see-17)
det(harm-19, the-18)
dobj(see-17, harm-19)
prep_of(harm-19, that-21)
advmod(see-17, either-22)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT No) (JJR more))
      (VP (MD can)
        (VP
          (NP (PRP I)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Willie))
      (, ,) (`` ``)
      (S
        (SBAR (IN if)
          (S
            (NP (PRP they))
            (VP (VBP 're) (RB not)
              (ADJP (RB too) (JJ difficult)))))
        (, ,)
        (NP (PRP you))
        (VP (VBP know))))
    (. .)))

neg(more-3, No-2)
nsubj(I-5, more-3)
aux(I-5, can-4)
ccomp(said-8, I-5)
root(ROOT-0, said-8)
nsubj(said-8, Willie-9)
mark(difficult-17, if-12)
nsubj(difficult-17, they-13)
cop(difficult-17, 're-14)
neg(difficult-17, not-15)
advmod(difficult-17, too-16)
advcl(know-20, difficult-17)
nsubj(know-20, you-19)
dep(Willie-9, know-20)

(ROOT
  (SBARQ (CC But)
    (WHNP (WP what))
    (SQ
      (VP (VBD brought)
        (NP (PRP you))
        (PP (IN out)
          (NP (RB now)))))
    (. ?)))

cc(brought-3, But-1)
nsubj(brought-3, what-2)
root(ROOT-0, brought-3)
dobj(brought-3, you-4)
prep(brought-3, out-5)
pobj(out-5, now-6)

(ROOT
  (FRAG
    (S
      (VP (VBP Do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP want)
              (NP (PRP me)))))))
    (. ?) ('' '')))

root(ROOT-0, Do-1)
nsubj(want-3, you-2)
ccomp(Do-1, want-3)
dobj(want-3, me-4)

(ROOT
  (S (`` ``)
    (NP (NNP May))
    (RB n't)
    (NP (PRP I))
    (VP (VBP stop)
      (PP (IN with)
        (NP (PRP you))))
    (. ?)))

tmod(stop-5, May-2)
neg(stop-5, n't-3)
nsubj(stop-5, I-4)
root(ROOT-0, stop-5)
prep_with(stop-5, you-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD saw)
        (S
          (NP (PRP you))
          (VP (VBG looking)
            (PRT (RP up))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP I))
        (VP (VBD looked)
          (ADVP (RB up) (RB too))))
      (, ,)
      (CC and)
      (RB then)
      (S
        (NP (PRP I))
        (VP (VBD saw)
          (NP (NN something) (NN flash)))))
    (: ;)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD dressed)
        (ADJP (RB as) (JJ hard))
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP
              (VP (MD could))
              (, ,)
              (CC and)
              (VP (VBD ran)
                (PRT (RP out))))))))
    (. .)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
nsubj(looking-4, you-3)
dep(saw-2, looking-4)
prt(looking-4, up-5)
nsubj(looked-9, I-8)
conj_and(saw-2, looked-9)
advmod(too-11, up-10)
advmod(looked-9, too-11)
advmod(saw-16, then-14)
nsubj(saw-16, I-15)
conj_and(saw-2, saw-16)
conj_and(looked-9, saw-16)
nn(flash-18, something-17)
dobj(saw-16, flash-18)
nsubj(dressed-22, I-21)
conj_and(saw-2, dressed-22)
advmod(hard-24, as-23)
acomp(dressed-22, hard-24)
mark(could-27, as-25)
nsubj(could-27, I-26)
nsubj(ran-30, I-26)
advcl(dressed-22, could-27)
advcl(dressed-22, ran-30)
conj_and(could-27, ran-30)
prt(ran-30, out-31)

(ROOT
  (FRAG
    (S
      (VP (VBG Are)
        (S
          (NP (PRP you))
          (VP (VBG catching)
            (NP (DT the) (NN lightning))))))
    (. ?) ('' '')))

root(ROOT-0, Are-1)
nsubj(catching-3, you-2)
vmod(Are-1, catching-3)
det(lightning-5, the-4)
dobj(catching-3, lightning-5)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Willie))
      (: ;)
      (NP (`` ``)
        (NP (NN something))
        (PP
          (ADVP (RBR better))
          (IN than)
          (NP (DT the) (NN lightning)))
        (: --)
        (NP (DT the) (NN sunlight))))
    (. .) ('' '')))

dep(said-5, No-2)
root(ROOT-0, said-5)
nsubj(said-5, Willie-6)
dep(Willie-6, something-9)
advmod(something-9, better-10)
det(lightning-13, the-12)
prep_than(something-9, lightning-13)
det(sunlight-16, the-15)
dep(something-9, sunlight-16)

(ROOT
  (S (`` ``)
    (VP (VB Is)
      (ADVP (IN that) (DT all)))
    (. ?) ('' '')))

root(ROOT-0, Is-2)
advmod(Is-2, that-3)
dep(that-3, all-4)

(ROOT
  (S
    (VP (VBD said)
      (NP
        (NP (NNP Mona))
        (, ,)
        (VP (VBN disappointed))))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Mona-2)
vmod(Mona-2, disappointed-4)

(ROOT
  (S (`` ``)
    (INTJ (WRB Why))
    (, ,)
    (NP (NNP Mona) (, ,))
    (VP (VBZ is) (RB n't)
      (NP
        (NP (DT the) (NN sunlight))
        (NP
          (NP (DT a) (JJR better) (NN thing))
          (PP (IN than)
            (NP (DT the) (NN lightning))))))
    (. ?) ('' '')))

discourse(sunlight-9, Why-2)
nsubj(sunlight-9, Mona-4)
cop(sunlight-9, is-6)
neg(sunlight-9, n't-7)
det(sunlight-9, the-8)
root(ROOT-0, sunlight-9)
det(thing-12, a-10)
amod(thing-12, better-11)
dep(sunlight-9, thing-12)
det(lightning-15, the-14)
prep_than(thing-12, lightning-15)

(ROOT
  (S
    (VP (VBD said)
      (NP (JJ philosophical) (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
amod(Willie-3, philosophical-2)
dobj(said-1, Willie-3)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP I))
      (VP (MD dare)
        (VP (VB say))))
    (: ;)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB have)
          (NP (PRP it))
          (NP (DT any) (NN time)))))
    (. .) ('' '')))

discourse(say-6, Yes-2)
nsubj(say-6, I-4)
aux(say-6, dare-5)
root(ROOT-0, say-6)
nsubj(have-11, you-9)
aux(have-11, can-10)
conj_but(say-6, have-11)
iobj(have-11, it-12)
det(time-14, any-13)
dobj(have-11, time-14)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (ADVP (RB only))
    (VP (VBZ makes)
      (S
        (NP (PRP it) (DT the))
        (ADJP (RBR more) (JJ valuable))))
    (. .)))

nsubj(makes-4, That-2)
advmod(makes-4, only-3)
root(ROOT-0, makes-4)
nsubj(valuable-8, it-5)
dep(it-5, the-6)
advmod(valuable-8, more-7)
xcomp(makes-4, valuable-8)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (ADJP (RB quite) (JJ true))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP think)
            (PP (IN of)
              (NP (PRP it)))))))
    (. .)))

cc(true-6, But-1)
nsubj(true-6, it-2)
cop(true-6, 's-3)
neg(true-6, not-4)
advmod(true-6, quite-5)
root(ROOT-0, true-6)
advmod(think-9, when-7)
nsubj(think-9, you-8)
advcl(true-6, think-9)
prep_of(think-9, it-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB have)
        (NP (PRP it))
        (ADVP (RB now))
        (, ,)
        (PP (IN except)
          (PP (IN from)
            (NP (PRP$ my) (NN ball))))))
    (. .) ('' '')))

nsubj(have-4, You-1)
aux(have-4, ca-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
dobj(have-4, it-5)
advmod(have-4, now-6)
prep(have-4, except-8)
pcomp(except-8, from-9)
poss(ball-11, my-10)
pobj(from-9, ball-11)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh) (, ,) (UH yes))
      (, ,)
      (NP (PRP I))
      (VP (MD can)))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD cried))
        (NP (NNP Mona))))
    (: ;) (`` ``)
    (S
      (PP (IN for)
        (NP (RB there)))
      (NP (PRP he))
      (VP (VBZ comes)
        (NP (PRP himself))))
    (. .) ('' '')))

discourse(can-7, Oh-2)
dep(Oh-2, yes-4)
nsubj(can-7, I-6)
root(ROOT-0, can-7)
dep(can-7, cried-10)
nsubj(cried-10, Mona-11)
prep(comes-17, for-14)
pobj(for-14, there-15)
nsubj(comes-17, he-16)
parataxis(can-7, comes-17)
dobj(comes-17, himself-18)

(ROOT
  (S (CC And)
    (NP (EX there))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB be)
          (ADJP (JJ sure)))))
    (, ,)
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ first) (NN blinding) (NN arc))
        (PP (IN of)
          (NP
            (NP (DT the) (NN sun))
            (VP (VBG rising)
              (PP (IN over)
                (NP (DT the) (JJ eastern) (NN hill))))))))
    (. .)))

cc(was-8, And-1)
expl(was-8, there-2)
aux(sure-6, to-4)
cop(sure-6, be-5)
dep(was-8, sure-6)
root(ROOT-0, was-8)
det(arc-12, the-9)
amod(arc-12, first-10)
nn(arc-12, blinding-11)
nsubj(was-8, arc-12)
det(sun-15, the-14)
prep_of(arc-12, sun-15)
vmod(sun-15, rising-16)
det(hill-20, the-18)
amod(hill-20, eastern-19)
prep_over(rising-16, hill-20)

(ROOT
  (S
    (NP
      (NP (DT Both))
      (PP (IN of)
        (NP (PRP them))))
    (VP
      (VP (VBD forgot)
        (NP (DT the) (NN kite)))
      (, ,)
      (CC and)
      (VP (VBD turned)
        (S
          (VP (TO to)
            (VP (VB watch)
              (NP
                (NP (DT the) (JJ great) (NN marvel))
                (PP (IN of)
                  (NP (DT the) (NNS heavens))))
              (, ,)
              (S
                (VP (VBG throbbing)
                  (CC and)
                  (VBG pulsing)
                  (PP (IN like)
                    (NP
                      (NP (DT a) (NN sea))
                      (PP (IN of)
                        (NP (NN flame))))))))))))
    (. .)))

nsubj(forgot-4, Both-1)
nsubj(turned-9, Both-1)
nsubj(watch-11, Both-1)
prep_of(Both-1, them-3)
root(ROOT-0, forgot-4)
det(kite-6, the-5)
dobj(forgot-4, kite-6)
conj_and(forgot-4, turned-9)
aux(watch-11, to-10)
xcomp(turned-9, watch-11)
det(marvel-14, the-12)
amod(marvel-14, great-13)
dobj(watch-11, marvel-14)
det(heavens-17, the-16)
prep_of(marvel-14, heavens-17)
vmod(watch-11, throbbing-19)
vmod(watch-11, pulsing-21)
conj_and(throbbing-19, pulsing-21)
det(sea-24, a-23)
prep_like(throbbing-19, sea-24)
prep_of(sea-24, flame-26)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBD turned)
          (ADVP (RB again))
          (PP (TO to)
            (NP (DT the) (NN kite))))))
    (NP (PRP they))
    (VP (MD could)
      (VP (VB see)
        (NP (DT the) (JJ golden) (NN ball))
        (ADVP (RB no) (RB longer))))
    (. .)))

advmod(turned-3, When-1)
nsubj(turned-3, they-2)
advcl(see-10, turned-3)
advmod(turned-3, again-4)
det(kite-7, the-6)
prep_to(turned-3, kite-7)
nsubj(see-10, they-8)
aux(see-10, could-9)
root(ROOT-0, see-10)
det(ball-13, the-11)
amod(ball-13, golden-12)
dobj(see-10, ball-13)
neg(longer-15, no-14)
advmod(see-10, longer-15)

(ROOT
  (S
    (S
      (NP (PRP$ Its) (NN work))
      (VP (VBD was)
        (ADJP (RP over))))
    (: ;)
    (S
      (S
        (NP (PRP it))
        (VP (VBD had)
          (VP (VBN told)
            (NP (PRP them))
            (SBAR
              (S
                (NP (DT the) (NN sun))
                (VP (VBD was)
                  (VP (VBG coming))))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB now))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN sun))
            (VP (VBD was)
              (VP (VBN come)))))
        (, ,)
        (NP (PRP it))
        (VP (VBD was) (RB not)
          (VP (VBN wanted)
            (ADVP (DT any) (RBR more))))))
    (. .)))

poss(work-2, Its-1)
nsubj(over-4, work-2)
cop(over-4, was-3)
root(ROOT-0, over-4)
nsubj(told-8, it-6)
aux(told-8, had-7)
parataxis(over-4, told-8)
dobj(told-8, them-9)
det(sun-11, the-10)
nsubj(coming-13, sun-11)
aux(coming-13, was-12)
dep(told-8, coming-13)
advmod(wanted-27, now-16)
advmod(come-22, when-18)
det(sun-20, the-19)
nsubjpass(come-22, sun-20)
auxpass(come-22, was-21)
advcl(wanted-27, come-22)
nsubjpass(wanted-27, it-24)
auxpass(wanted-27, was-25)
neg(wanted-27, not-26)
parataxis(over-4, wanted-27)
conj_and(told-8, wanted-27)
dep(more-29, any-28)
advmod(wanted-27, more-29)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP
            (VP (VB draw)
              (PP (IN in)
                (NP (PRP$ his) (NN string))))
            (CC and)
            (VP (VB roll)
              (NP (PRP it))
              (PRT (RP up))
              (PP (IN on)
                (NP (PRP$ its) (NN stick)))))))
      (, ,)
      (S
        (ADVP (RB slowly))
        (VP (VBG pulling)
          (PRT (RP down))
          (PP (TO to)
            (NP (DT the) (NN earth)))
          (NP
            (NP (DT the) (VBG soaring) (NN sun-scout))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN sent)
                    (ADVP (RB aloft))
                    (PP (IN for)
                      (NP (DT the) (NN news)))))))))))
    (. .)))

nsubj(began-2, Willie-1)
nsubj(draw-4, Willie-1)
nsubj(roll-9, Willie-1)
root(ROOT-0, began-2)
aux(draw-4, to-3)
xcomp(began-2, draw-4)
poss(string-7, his-6)
prep_in(draw-4, string-7)
xcomp(began-2, roll-9)
conj_and(draw-4, roll-9)
dobj(roll-9, it-10)
prt(roll-9, up-11)
poss(stick-14, its-13)
prep_on(roll-9, stick-14)
advmod(pulling-17, slowly-16)
xcomp(began-2, pulling-17)
prt(pulling-17, down-18)
det(earth-21, the-20)
prep_to(pulling-17, earth-21)
det(sun-scout-24, the-22)
amod(sun-scout-24, soaring-23)
dobj(pulling-17, sun-scout-24)
nsubj(sent-27, he-25)
aux(sent-27, had-26)
rcmod(sun-scout-24, sent-27)
advmod(sent-27, aloft-28)
det(news-31, the-30)
prep_for(sent-27, news-31)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD had)
        (ADVP (RB never))
        (VP (VBN flown)
          (NP
            (NP (NN anything))
            (PP (IN like)
              (NP (PDT such) (DT a) (JJ large) (NN kite))))
          (ADVP (RB before)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD found)
        (S
          (NP (PRP it))
          (ADJP (JJ difficult)
            (S
              (VP (TO to)
                (VP (VB reclaim))))))))
    (. .)))

nsubj(flown-4, He-1)
aux(flown-4, had-2)
neg(flown-4, never-3)
root(ROOT-0, flown-4)
dobj(flown-4, anything-5)
predet(kite-10, such-7)
det(kite-10, a-8)
amod(kite-10, large-9)
prep_like(anything-5, kite-10)
advmod(flown-4, before-11)
nsubj(found-15, he-14)
conj_and(flown-4, found-15)
nsubj(difficult-17, it-16)
nsubj(reclaim-19, it-16)
xcomp(found-15, difficult-17)
aux(reclaim-19, to-18)
xcomp(difficult-17, reclaim-19)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Will))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VB take)
            (NP (PRP me))
            (ADVP (IN out)
              (PP (IN with)
                (NP (PRP you))
                (NP (JJ next) (NN time))))
            (, ,)
            (NP (NNP Willie))))))
    (. ?) ('' '')))

root(ROOT-0, Will-2)
nsubj(take-4, you-3)
rcmod(Will-2, take-4)
dobj(take-4, me-5)
advmod(take-4, out-6)
prep_with(out-6, you-8)
amod(time-10, next-9)
dep(out-6, time-10)
dobj(take-4, Willie-12)

(ROOT
  (S
    (VP (VBN asked)
      (ADVP (RB Mona))
      (, ,)
      (ADVP (RB pleadingly)))
    (. .)))

root(ROOT-0, asked-1)
advmod(asked-1, Mona-2)
advmod(asked-1, pleadingly-4)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB so)
        (VP (VB like)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADVP (IN out)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN morning))
                      (, ,)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (DT the) (NN wind))
                          (VP (VBZ is)
                            (VP (VBG blowing))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS clouds))
      (VP (VBP are)
        (VP (VBG flying) (IN about))))
    (. .)))

nsubj(like-5, I-2)
nsubj(be-7, I-2)
aux(like-5, do-3)
advmod(like-5, so-4)
root(ROOT-0, like-5)
aux(be-7, to-6)
xcomp(like-5, be-7)
advmod(be-7, out-8)
det(morning-11, the-10)
prep_in(out-8, morning-11)
tmod(blowing-17, morning-11)
advmod(blowing-17, when-13)
det(wind-15, the-14)
nsubj(blowing-17, wind-15)
aux(blowing-17, is-16)
rcmod(morning-11, blowing-17)
det(clouds-21, the-20)
nsubj(flying-23, clouds-21)
aux(flying-23, are-22)
conj_and(like-5, flying-23)
dep(flying-23, about-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP wonder)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (NN everybody))
          (VP (VBZ does) (RB n't)
            (VP (VB get)
              (PRT (RP up))
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP (DT the) (NN sun) (NN rise))))))))))
    (. .)))

nsubj(wonder-2, I-1)
root(ROOT-0, wonder-2)
advmod(get-7, why-3)
nsubj(get-7, everybody-4)
nsubj(see-10, everybody-4)
aux(get-7, does-5)
neg(get-7, n't-6)
ccomp(wonder-2, get-7)
prt(get-7, up-8)
aux(see-10, to-9)
xcomp(get-7, see-10)
det(rise-13, the-11)
nn(rise-13, sun-12)
dobj(see-10, rise-13)

(ROOT
  (S
    (NP (NNP Do))
    (RB n't)
    (NP (PRP you))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (RB well) (JJ worth))
            (S
              (VP (VBG seeing)))))))
    (. ?) ('' '')))

nsubj(think-4, Do-1)
neg(think-4, n't-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj(worth-8, it-5)
cop(worth-8, is-6)
advmod(worth-8, well-7)
ccomp(think-4, worth-8)
xcomp(worth-8, seeing-9)

(ROOT
  (S (`` ``)
    (NP (DT That) (NN I))
    (VP (VBP do))
    (. .) ('' '')))

det(I-3, That-2)
nsubj(do-4, I-3)
root(ROOT-0, do-4)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB let)
        (S
          (NP (PRP me))
          (VP (VB come)
            (PP (IN with)
              (NP (PRP you)))))))
    (. ?)))

advmod(let-5, Then-2)
nsubj(let-5, you-3)
aux(let-5, will-4)
root(ROOT-0, let-5)
nsubj(come-7, me-6)
ccomp(let-5, come-7)
prep_with(come-7, you-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP like)
      (S
        (NP (PRP it))
        (ADJP
          (ADJP (RB so) (RB much) (JJR better))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP you))
              (VP (VBP are)
                (PP (IN with)
                  (NP (PRP me)))))))))
    (. .)))

nsubj(like-2, I-1)
root(ROOT-0, like-2)
nsubj(better-6, it-3)
advmod(better-6, so-4)
advmod(better-6, much-5)
xcomp(like-2, better-6)
advmod(are-9, when-7)
nsubj(are-9, you-8)
ccomp(better-6, are-9)
prep_with(are-9, me-11)

(ROOT
  (S
    (NP (NNP Janet))
    (VP (VBZ spoils)
      (S
        (NP (PRP it))
        (NP (DT all))))
    (. .) ('' '')))

nsubj(spoils-2, Janet-1)
root(ROOT-0, spoils-2)
nsubj(all-4, it-3)
xcomp(spoils-2, all-4)

(ROOT
  (S
    (NP (NNP Janet))
    (VP (VBD was)
      (NP
        (NP (PRP$ her) (JJ old) (NN nurse))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD seemed)
              (S
                (VP (TO to)
                  (VP (VB think)
                    (SBAR
                      (S
                        (NP
                          (NP (DT the) (JJ main) (NN part))
                          (PP (IN of)
                            (NP (PRP$ her) (NN duty))))
                        (VP (VBD was)
                          (S
                            (VP (TO to)
                              (VP (VB check)
                                (NP
                                  (NP (NNP Mona) (POS 's))
                                  (NN enthusiasm))))))))))))))))
    (. .)))

nsubj(nurse-5, Janet-1)
cop(nurse-5, was-2)
poss(nurse-5, her-3)
amod(nurse-5, old-4)
root(ROOT-0, nurse-5)
nsubj(seemed-8, nurse-5)
nsubj(think-10, nurse-5)
rcmod(nurse-5, seemed-8)
aux(think-10, to-9)
xcomp(seemed-8, think-10)
det(part-13, the-11)
amod(part-13, main-12)
nsubj(was-17, part-13)
nsubj(check-19, part-13)
poss(duty-16, her-15)
prep_of(part-13, duty-16)
ccomp(think-10, was-17)
aux(check-19, to-18)
xcomp(was-17, check-19)
poss(enthusiasm-22, Mona-20)
dobj(check-19, enthusiasm-22)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD will))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (NNP Willie)))
      (, ,) (`` ``))
    (SBAR (IN if)
      (S
        (NP (PRP$ your) (NN papa))
        (VP (VBZ has)
          (NP (DT no) (NN objection)))))
    (. .) ('' '')))

nsubj(will-3, I-2)
root(ROOT-0, will-3)
parataxis(will-3, said-6)
nsubj(said-6, Willie-7)
mark(has-13, if-10)
poss(papa-12, your-11)
nsubj(has-13, papa-12)
dep(will-3, has-13)
neg(objection-15, no-14)
dobj(has-13, objection-15)

(ROOT
  (S
    (NP (NNP Mona))
    (VP (VBD did) (RB not)
      (ADVP (RB even))
      (VP (VB remember)
        (NP (PRP$ her) (NN mamma))))
    (. .)))

nsubj(remember-5, Mona-1)
aux(remember-5, did-2)
neg(remember-5, not-3)
advmod(remember-5, even-4)
root(ROOT-0, remember-5)
poss(mamma-7, her-6)
dobj(remember-5, mamma-7)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (VP (VBN died)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP she))
            (VP (VBD was)
              (NP (PDT such) (DT a) (JJ little) (NN thing)))))))
    (. .)))

nsubj(died-3, She-1)
aux(died-3, had-2)
root(ROOT-0, died-3)
advmod(thing-10, when-4)
nsubj(thing-10, she-5)
cop(thing-10, was-6)
predet(thing-10, such-7)
det(thing-10, a-8)
amod(thing-10, little-9)
advcl(died-3, thing-10)

(ROOT
  (SINV (`` ``)
    (S
      (VP
        (VP (VB Come))
        (CC and)
        (VP (VB ask)
          (NP (PRP him))
          (, ,)
          (ADVP (RB then)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mona))
    (. .)))

ccomp(said-10, Come-2)
conj_and(Come-2, ask-4)
ccomp(said-10, ask-4)
dobj(ask-4, him-5)
advmod(ask-4, then-7)
root(ROOT-0, said-10)
nsubj(said-10, Mona-11)

(ROOT
  (S
    (ADVP (RB So) (RB soon)
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN secured)
              (NP (NNP Sun-scout))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (PRP he))
                  (VP (VBD called)
                    (NP (PRP$ his) (NN kite))
                    (PP (IN with)
                      (NP (DT the) (JJ golden) (NN head)))))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD took)
      (NP (PRP$ his) (NN hand)
        (S
          (VP (TO to)
            (VP (VB lead)
              (NP (PRP him))
              (PP (TO to)
                (NP (PRP$ her) (NN father))))))))
    (. .)))

advmod(soon-2, So-1)
advmod(took-20, soon-2)
mark(secured-6, as-3)
nsubj(secured-6, he-4)
aux(secured-6, had-5)
ccomp(soon-2, secured-6)
dobj(secured-6, Sun-scout-7)
mark(called-11, as-9)
nsubj(called-11, he-10)
advcl(secured-6, called-11)
poss(kite-13, his-12)
dobj(called-11, kite-13)
det(head-17, the-15)
amod(head-17, golden-16)
prep_with(called-11, head-17)
nsubj(took-20, she-19)
root(ROOT-0, took-20)
poss(hand-22, his-21)
dobj(took-20, hand-22)
aux(lead-24, to-23)
vmod(hand-22, lead-24)
dobj(lead-24, him-25)
poss(father-28, her-27)
prep_to(lead-24, father-28)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (MD wo) (RB n't)
        (VP (VB be)
          (ADVP (RB up) (RB yet)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(be-5, He-2)
aux(be-5, wo-3)
neg(be-5, n't-4)
ccomp(said-10, be-5)
advmod(yet-7, up-6)
advmod(be-5, yet-7)
root(ROOT-0, said-10)
nsubj(said-10, Willie-11)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Oh) (, ,) (UH yes))
      (, ,)
      (ADVP (RB long) (RB ago)))
    (, ,) ('' '')
    (VP (VBD cried))
    (NP (NNP Mona))
    (. .)))

discourse(ago-7, Oh-2)
dep(Oh-2, yes-4)
advmod(ago-7, long-6)
dep(cried-10, ago-7)
root(ROOT-0, cried-10)
dep(cried-10, Mona-11)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBZ 's)
      (ADVP (RB always))
      (ADVP
        (ADVP (RB up) (JJ first)
          (PP (IN in)
            (NP (DT the) (NN house))))
        (, ,)
        (CC and)
        (ADVP (RB as) (RB soon)))
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBZ 's)
            (VP (VBN dressed)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBZ calls)
                    (NP (PRP me))))))))))
    (. .)))

nsubj('s-3, He-2)
root(ROOT-0, 's-3)
advmod('s-3, always-4)
advmod(first-6, up-5)
advmod('s-3, first-6)
det(house-9, the-8)
prep_in(first-6, house-9)
advmod(soon-13, as-12)
advmod('s-3, soon-13)
conj_and(first-6, soon-13)
mark(dressed-17, as-14)
nsubjpass(dressed-17, he-15)
auxpass(dressed-17, 's-16)
advcl('s-3, dressed-17)
nsubj(calls-19, he-18)
ccomp(dressed-17, calls-19)
dobj(calls-19, me-20)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD 'll)
        (VP (VB be)
          (PP (IN at)
            (NP (NN breakfast)))
          (PP (IN by)
            (NP (DT this) (NN time))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG wondering)
          (NP (WP what))))
      (VP (MD can)
        (VP (VB have)
          (VP (VBN become)
            (PP (IN of)
              (NP (PRP me)))))))
    (. .) ('' '')))

nsubj(be-3, He-1)
aux(be-3, 'll-2)
root(ROOT-0, be-3)
prep_at(be-3, breakfast-5)
det(time-8, this-7)
prep_by(be-3, time-8)
csubj(become-15, wondering-11)
dobj(wondering-11, what-12)
aux(become-15, can-13)
aux(become-15, have-14)
conj_and(be-3, become-15)
prep_of(become-15, me-17)

(ROOT
  (S (CC So)
    (S
      (NP (NNP Willie))
      (VP (VBD went)
        (PP (IN with)
          (NP (PRP her)))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (NNP Mr) (NNP Shepherd))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP she))
              (VP (VBD had)
                (VP (VBN said)))))
          (, ,)
          (VP
            (ADVP (RB already))
            (VBN seated)
            (PP (IN at)
              (NP (NN breakfast)))))))
    (. .)))

nsubj(went-3, Willie-2)
root(ROOT-0, went-3)
prep_with(went-3, her-5)
expl(was-9, there-8)
conj_and(went-3, was-9)
nn(Shepherd-11, Mr-10)
nsubj(was-9, Shepherd-11)
mark(said-16, as-13)
nsubj(said-16, she-14)
aux(said-16, had-15)
rcmod(Shepherd-11, said-16)
advmod(seated-19, already-18)
vmod(Shepherd-11, seated-19)
prep_at(seated-19, breakfast-21)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP have)
      (NP (PRP you))
      (VP
        (VP (VBN been)
          (ADJP (IN about)))
        (, ,)
        (VP (VBN Mona))
        (, ,)
        (NP (PRP$ my) (NN child))))
    (. ?) ('' '')))

dep(about-6, What-2)
aux(about-6, have-3)
nsubj(about-6, you-4)
cop(about-6, been-5)
root(ROOT-0, about-6)
dep(about-6, Mona-8)
poss(child-11, my-10)
dobj(about-6, child-11)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD asked) (, ,)
      (SBAR
        (ADVP (RB as) (RB soon))
        (IN as)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN shaken)
              (NP (NNS hands))
              (PP (IN with)
                (NP (NNP Willie))))))))
    (. .)))

nsubj(asked-2, he-1)
root(ROOT-0, asked-2)
advmod(soon-5, as-4)
advmod(shaken-9, soon-5)
mark(shaken-9, as-6)
nsubj(shaken-9, he-7)
aux(shaken-9, had-8)
advcl(asked-2, shaken-9)
dobj(shaken-9, hands-10)
prep_with(shaken-9, Willie-12)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN been)
          (VP (VBG helping)
            (NP (DT the) (NN sun)
              (S
                (VP (TO to)
                  (VP (VB rise)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Mona))
      (, ,)
      (NP (NNP merrily)))
    (. .)))

nsubj(helping-5, We-2)
aux(helping-5, 've-3)
aux(helping-5, been-4)
ccomp(said-12, helping-5)
det(sun-7, the-6)
dobj(helping-5, sun-7)
aux(rise-9, to-8)
vmod(sun-7, rise-9)
root(ROOT-0, said-12)
nsubj(said-12, Mona-13)
appos(Mona-13, merrily-15)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH No) (, ,) (UH no)))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP Willie))
        (: ;) (`` ``)
        (S
          (NP (PRP we))
          (VP (VBP 've)
            (ADVP (RB only))
            (VP (VBN been)
              (VP (VBG having)
                (NP (DT a) (NN peep))
                (PP (IN at)
                  (NP
                    (NP (PRP him))
                    (PP (IN in)
                      (NP (NN bed)))))
                (, ,)
                (SBAR (IN before)
                  (S
                    (NP (PRP he))
                    (VP (VBD got)
                      (PRT (RP up)))))))))))
    (. .) ('' '')))

dep(said-7, No-2)
dep(No-2, no-4)
root(ROOT-0, said-7)
dobj(said-7, Willie-8)
nsubj(having-15, we-11)
aux(having-15, 've-12)
advmod(having-15, only-13)
aux(having-15, been-14)
dep(Willie-8, having-15)
det(peep-17, a-16)
dobj(having-15, peep-17)
prep_at(having-15, him-19)
prep_in(him-19, bed-21)
mark(got-25, before-23)
nsubj(got-25, he-24)
advcl(having-15, got-25)
prt(got-25, up-26)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Oh) (, ,) (UH yes)))
    (, ,) ('' '')
    (VP (VBD chimed)
      (PRT (RP in)))
    (NP (NNP Mona))
    (. .)))

dep(chimed-7, Oh-2)
dep(Oh-2, yes-4)
root(ROOT-0, chimed-7)
prt(chimed-7, in-8)
nsubj(chimed-7, Mona-9)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP he))
    (VP (VBD was)
      (ADVP (RB so) (RB fast))
      (ADJP (RB asleep)))
    (. !)))

cc(asleep-7, And-2)
nsubj(asleep-7, he-3)
cop(asleep-7, was-4)
advmod(fast-6, so-5)
advmod(asleep-7, fast-6)
root(ROOT-0, asleep-7)

(ROOT
  (S
    (LST (: --))
    (NP (NNP and) (NNP snoring))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD added) (, ,)
      (PP (IN with)
        (NP
          (NP (DT a) (JJ comical) (NN expression))
          (CC and)
          (NP (NN tone))))
      (, ,)
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP it))
          (VP (VBD were)
            (NP (DT a) (NN thing)
              (S (RB not)
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN mentioned)
                      (S
                        (VP (VB save)
                          (PP (IN as)
                            (NP (DT a) (NN secret))))))))))))))
    (. .)))

nn(snoring-3, and-2)
nsubj(added-7, snoring-3)
nsubj(added-7, she-6)
root(ROOT-0, added-7)
det(expression-12, a-10)
amod(expression-12, comical-11)
prep_with(added-7, expression-12)
prep_with(added-7, tone-14)
conj_and(expression-12, tone-14)
advmod(thing-21, as-16)
mark(thing-21, if-17)
nsubj(thing-21, it-18)
cop(thing-21, were-19)
det(thing-21, a-20)
advcl(added-7, thing-21)
neg(mentioned-25, not-22)
aux(mentioned-25, to-23)
auxpass(mentioned-25, be-24)
vmod(thing-21, mentioned-25)
ccomp(mentioned-25, save-26)
det(secret-29, a-28)
prep_as(save-26, secret-29)

(ROOT
  (S (CC But)
    (S
      (NP (NNP Willie))
      (VP (VBD did) (RB not)
        (VP (VB like)
          (NP (DT the) (NN word)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ her) (NN father))
      (VP (VBD was)
        (PP (IN of)
          (NP (DT the) (JJ same) (NN mind)))))
    (. .)))

nsubj(like-5, Willie-2)
aux(like-5, did-3)
neg(like-5, not-4)
root(ROOT-0, like-5)
det(word-7, the-6)
dobj(like-5, word-7)
poss(father-11, her-10)
nsubj(was-12, father-11)
conj_and(like-5, was-12)
det(mind-16, the-14)
amod(mind-16, same-15)
prep_of(was-12, mind-16)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No) (, ,) (UH no)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP
      (NP (NNP Mr) (NNP Shepherd))
      (: ;)
      (SBAR (`` ``)
        (WHNP (WDT that))
        (S
          (VP (VBZ 's) (RB not)
            (ADJP (JJ respectful))
            (, ,)
            (ADVP (RB Mona))))))
    (. .)))

dep(said-7, No-2)
dep(No-2, no-4)
root(ROOT-0, said-7)
nn(Shepherd-9, Mr-8)
nsubj(said-7, Shepherd-9)
nsubj(respectful-15, Shepherd-9)
cop(respectful-15, 's-13)
neg(respectful-15, not-14)
rcmod(Shepherd-9, respectful-15)
advmod(respectful-15, Mona-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB like)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB talk)
              (NP
                (NP
                  (NP (DT that) (NN way))
                  (, ,)
                  (ADVP (RB even)
                    (PP (IN in)
                      (NP (NN fun))))
                  (, ,))
                (PP (IN of)
                  (NP
                    (NP (DT the) (JJ great) (NN light))
                    (PP (IN of)
                      (NP (DT the) (NN earth)))))))))))
    (. .)))

nsubj(like-4, I-1)
aux(like-4, do-2)
neg(like-4, n't-3)
root(ROOT-0, like-4)
dobj(like-4, you-5)
nsubj(talk-7, you-5)
aux(talk-7, to-6)
xcomp(like-4, talk-7)
det(way-9, that-8)
dobj(talk-7, way-9)
advmod(way-9, even-11)
prep_in(even-11, fun-13)
det(light-18, the-16)
amod(light-18, great-17)
prep_of(way-9, light-18)
det(earth-21, the-20)
prep_of(light-18, earth-21)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP
          (ADJP (RBR more) (JJ good))
          (NNS reasons))
        (PP (IN for)
          (S
            (VP (VBG objecting)
              (PP (TO to)
                (NP (PRP it)))
              (SBAR (IN than)
                (S
                  (NP (PRP you))
                  (VP (MD would)
                    (ADVP (RB quite))
                    (VP (VB understand)
                      (ADVP (RB yet)))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
advmod(good-4, more-3)
amod(reasons-5, good-4)
nsubj(are-2, reasons-5)
prepc_for(reasons-5, objecting-7)
prep_to(objecting-7, it-9)
mark(understand-14, than-10)
nsubj(understand-14, you-11)
aux(understand-14, would-12)
advmod(understand-14, quite-13)
advcl(objecting-7, understand-14)
advmod(understand-14, yet-15)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (MD would) (RB not)
        (VP (VB talk)
          (PP (IN like)
            (NP (DT that))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ sure)))
    (. .)))

nsubj(talk-4, Willie-1)
aux(talk-4, would-2)
neg(talk-4, not-3)
ccomp(sure-10, talk-4)
prep_like(talk-4, that-6)
nsubj(sure-10, I-8)
cop(sure-10, am-9)
root(ROOT-0, sure-10)

(ROOT
  (S
    (VP (VB Tell)
      (NP (PRP me))
      (NP
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBN been)
                (ADJP (IN about))))))
        (, ,)
        (NP (PRP$ my) (NN boy))))
    (. .) ('' '')))

root(ROOT-0, Tell-1)
iobj(Tell-1, me-2)
dobj(about-7, what-3)
nsubj(about-7, you-4)
aux(about-7, have-5)
cop(about-7, been-6)
dep(boy-10, about-7)
poss(boy-10, my-9)
dobj(Tell-1, boy-10)

(ROOT
  (S
    (NP (NNP Willie))
    (VP
      (VP (VBD explained)
        (NP (DT the) (JJ whole) (NN matter)))
      (, ,)
      (CC and)
      (VP (VBD asked)
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (MD might)
              (VP (VB call)
                (NP (NNP Mona))
                (NP
                  (NP (DT the) (JJ next) (NN time))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD went)
                        (PRT (RP out))
                        (PP (IN with)
                          (NP (PRP$ his) (NN kite)))
                        (PP (IN in)
                          (NP (DT the) (NN morning)))))))))))))
    (. .)))

nsubj(explained-2, Willie-1)
nsubj(asked-8, Willie-1)
root(ROOT-0, explained-2)
det(matter-5, the-3)
amod(matter-5, whole-4)
dobj(explained-2, matter-5)
conj_and(explained-2, asked-8)
mark(call-12, if-9)
nsubj(call-12, he-10)
aux(call-12, might-11)
advcl(asked-8, call-12)
iobj(call-12, Mona-13)
det(time-16, the-14)
amod(time-16, next-15)
dobj(call-12, time-16)
nsubj(went-18, he-17)
rcmod(time-16, went-18)
prt(went-18, out-19)
poss(kite-22, his-21)
prep_with(went-18, kite-22)
det(morning-25, the-24)
prep_in(went-18, morning-25)

(ROOT
  (S
    (S
      (NP (NNP Mr) (NNP Shepherd))
      (VP (VBD consented)
        (PP (IN at)
          (NP (RB once)))))
    (: ;)
    (CC and)
    (S
      (S
        (NP (NNP Mona))
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD had)
                (ADVP (RB only))
                (S
                  (VP (TO to)
                    (VP (VB call)
                      (PP (IN from)
                        (NP (PRP$ his) (NN window)))
                      (PP (IN into)
                        (NP (PRP$ their) (NN garden)))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (MD would)
          (VP (VB be)
            (ADJP (JJ sure)
              (S
                (VP (TO to)
                  (VP (VB hear)
                    (NP (PRP him))
                    (SBAR (RB even) (IN if)
                      (S
                        (NP (PRP she))
                        (VP (VBD was)
                          (ADJP (RB asleep)))))))))))))
    (. .)))

nn(Shepherd-2, Mr-1)
nsubj(consented-3, Shepherd-2)
root(ROOT-0, consented-3)
prep(consented-3, at-4)
pobj(at-4, once-5)
nsubj(said-9, Mona-8)
conj_and(consented-3, said-9)
nsubj(had-11, he-10)
nsubj(call-14, he-10)
ccomp(said-9, had-11)
advmod(had-11, only-12)
aux(call-14, to-13)
xcomp(had-11, call-14)
poss(window-17, his-16)
prep_from(call-14, window-17)
poss(garden-20, their-19)
prep_into(call-14, garden-20)
nsubj(sure-26, she-23)
nsubj(hear-28, she-23)
aux(sure-26, would-24)
cop(sure-26, be-25)
conj_and(consented-3, sure-26)
conj_and(said-9, sure-26)
aux(hear-28, to-27)
xcomp(sure-26, hear-28)
dobj(hear-28, him-29)
advmod(asleep-34, even-30)
mark(asleep-34, if-31)
nsubj(asleep-34, she-32)
cop(asleep-34, was-33)
advcl(hear-28, asleep-34)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ next) (NN thing))
        (SBAR
          (S
            (NP (NNP Willie))
            (VP (VBD did)))))
      (VP (VBD was)
        (S
          (VP (TO to)
            (VP (VB construct)
              (NP
                (NP (DT a) (JJ small) (NNS windlass))
                (PP (IN in)
                  (NP (DT the) (NN garden))))
              (, ,)
              (PP (IN with)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB wind)
                          (PRT (RP up)))
                        (CC or)
                        (VP (VB let)
                          (PRT (RP out))
                          (NP
                            (NP (DT the) (NN string))
                            (PP (IN of)
                              (NP (DT the) (NN kite)))))))))))))))
    (: ;)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (JJ next) (NN fit) (NN morning))
          (VP (VBD arrived))))
      (, ,)
      (NP (NNP Mona)
        (CC and)
        (PRP he))
      (VP (VBD went)
        (PRT (RP out))
        (ADVP (RB together))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, next-2)
nsubj(was-6, thing-3)
nsubj(construct-8, thing-3)
nsubj(did-5, Willie-4)
rcmod(thing-3, did-5)
root(ROOT-0, was-6)
aux(construct-8, to-7)
xcomp(was-6, construct-8)
det(windlass-11, a-9)
amod(windlass-11, small-10)
dobj(construct-8, windlass-11)
det(garden-14, the-13)
prep_in(windlass-11, garden-14)
nsubj(wind-19, which-17)
nsubj(let-22, which-17)
aux(wind-19, to-18)
prepc_with(construct-8, wind-19)
prt(wind-19, up-20)
prepc_with(construct-8, let-22)
conj_or(wind-19, let-22)
prt(let-22, out-23)
det(string-25, the-24)
dobj(let-22, string-25)
det(kite-28, the-27)
prep_of(string-25, kite-28)
advmod(arrived-36, when-31)
det(morning-35, the-32)
amod(morning-35, next-33)
nn(morning-35, fit-34)
nsubj(arrived-36, morning-35)
advcl(went-41, arrived-36)
nsubj(went-41, Mona-38)
conj_and(Mona-38, he-40)
nsubj(went-41, he-40)
conj_and(was-6, went-41)
prt(went-41, out-42)
advmod(went-41, together-43)

(ROOT
  (S
    (S
      (NP (DT The) (NN wind))
      (VP (VBG blowing)
        (ADVP (RB right))
        (PP (IN through)
          (NP (DT the) (NN garden)))))
    (PRN (, ,)
      (S
        (NP (PRP they))
        (VP
          (VP (VBD did) (RB not)
            (VP (VB go)
              (PP (TO to)
                (NP (DT the) (JJ open) (NN field)))))
          (, ,)
          (CC but)
          (VP (VBD sent)
            (PRT (RP up))
            (NP (DT the) (NN kite))
            (PP (IN from)
              (NP (DT the) (NNS windlass))))))
      (, ,))
    (CC and)
    (S
      (NP (NNP Mona))
      (VP (VBD was)
        (ADJP (JJ able))
        (PP (IN by)
          (NP
            (NP (NNS means))
            (PP (IN of)
              (NP (DT the) (NN winch)))))
        (S
          (VP (TO to)
            (VP (VB let)
              (PRT (RP out))
              (NP (DT the) (NN string)))))
        (, ,)
        (SBAR (IN while)
          (S
            (NP (NNP Willie))
            (VP (VBD kept)
              (S
                (VP (VBG watching)
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN moment))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (DT the) (JJ golden) (NN ball))
                          (VP (MD should)
                            (VP (VB catch)
                              (NP (DT the) (NN light)))))))))))))))
    (. .)))

det(wind-2, The-1)
nsubj(blowing-3, wind-2)
root(ROOT-0, blowing-3)
advmod(blowing-3, right-4)
det(garden-7, the-6)
prep_through(blowing-3, garden-7)
nsubj(go-12, they-9)
nsubj(sent-19, they-9)
aux(go-12, did-10)
neg(go-12, not-11)
dep(blowing-3, go-12)
det(field-16, the-14)
amod(field-16, open-15)
prep_to(go-12, field-16)
dep(blowing-3, sent-19)
conj_but(go-12, sent-19)
prt(sent-19, up-20)
det(kite-22, the-21)
dobj(sent-19, kite-22)
det(windlass-25, the-24)
prep_from(sent-19, windlass-25)
nsubj(able-30, Mona-28)
nsubj(let-37, Mona-28)
cop(able-30, was-29)
conj_and(blowing-3, able-30)
det(winch-35, the-34)
prep_by_means_of(able-30, winch-35)
aux(let-37, to-36)
xcomp(able-30, let-37)
prt(let-37, out-38)
det(string-40, the-39)
dobj(let-37, string-40)
mark(kept-44, while-42)
nsubj(kept-44, Willie-43)
advcl(able-30, kept-44)
xcomp(kept-44, watching-45)
det(moment-48, the-47)
prep_for(watching-45, moment-48)
tmod(catch-54, moment-48)
advmod(catch-54, when-49)
det(ball-52, the-50)
amod(ball-52, golden-51)
nsubj(catch-54, ball-52)
aux(catch-54, should-53)
rcmod(moment-48, catch-54)
det(light-56, the-55)
dobj(catch-54, light-56)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD did)
        (NP (DT the) (JJ same))
        (PP (IN for)
          (NP (JJ several) (NNS mornings)))
        (PP (IN after))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Willie))
      (VP (VBD managed) (, ,)
        (PP (IN with)
          (NP
            (NP (DT the) (NN master) (POS 's))
            (NN help)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB calculate)
              (NP
                (NP (RB exactly) (DT the) (NN height))
                (SBAR
                  (WHPP (TO to)
                    (WHNP (WDT which)))
                  (S
                    (NP (DT the) (NN ball))
                    (VP (VBD had)
                      (VP (VBN flown)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (ADVP (RB first))
                            (NP (PRP it))
                            (VP (VBD gained)
                              (NP
                                (NP (DT a) (NN peep))
                                (PP (IN of)
                                  (NP (DT the) (NN sun))))
                              (PP (IN in)
                                (NP (NN bed))))))))))))))))
    (. .)))

nsubj(did-2, They-1)
root(ROOT-0, did-2)
det(same-4, the-3)
dobj(did-2, same-4)
amod(mornings-7, several-6)
prep_for(did-2, mornings-7)
prep(did-2, after-8)
nsubj(managed-12, Willie-11)
nsubj(calculate-21, Willie-11)
conj_and(did-2, managed-12)
det(master-16, the-15)
poss(help-18, master-16)
prep_with(managed-12, help-18)
aux(calculate-21, to-20)
xcomp(managed-12, calculate-21)
advmod(height-24, exactly-22)
det(height-24, the-23)
dobj(calculate-21, height-24)
prep_to(flown-30, height-24)
det(ball-28, the-27)
nsubj(flown-30, ball-28)
aux(flown-30, had-29)
rcmod(height-24, flown-30)
advmod(gained-34, when-31)
advmod(gained-34, first-32)
nsubj(gained-34, it-33)
advcl(flown-30, gained-34)
det(peep-36, a-35)
dobj(gained-34, peep-36)
det(sun-39, the-38)
prep_of(peep-36, sun-39)
prep_in(gained-34, bed-41)

(ROOT
  (S
    (S
      (S
        (NP (CD One) (JJ windy) (NN evening))
        (NP (PRP they))
        (VP (VBD sent)
          (NP (DT the) (NN kite))
          (PRT (RP up))
          (PP (IN in)
            (NP (DT the) (NN hope)))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (MD would)
                (VP (VB fly)
                  (PP (IN till)
                    (NP (DT the) (NN morning)))))))))
      (: ;)
      (CC but)
      (S
        (NP (DT the) (NN wind))
        (VP (VBD fell)
          (PP (IN in)
            (NP (DT the) (NN night))))))
    (, ,)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN sun))
          (VP (VBD came)
            (PP (IN near)
              (NP (RB there))))))
      (VP (VBD was)
        (NP
          (NP (DT no) (JJ golden) (NN ball))
          (PP (IN in)
            (NP (DT the) (NN air)
              (S
                (VP (TO to)
                  (VP (VB greet)
                    (NP (PRP him))))))))))
    (. .)))

num(evening-3, One-1)
amod(evening-3, windy-2)
tmod(sent-5, evening-3)
nsubj(sent-5, they-4)
root(ROOT-0, sent-5)
det(kite-7, the-6)
dobj(sent-5, kite-7)
prt(sent-5, up-8)
det(hope-11, the-10)
prep_in(sent-5, hope-11)
mark(fly-15, that-12)
nsubj(fly-15, it-13)
aux(fly-15, would-14)
ccomp(sent-5, fly-15)
det(morning-18, the-17)
prep_till(fly-15, morning-18)
det(wind-22, the-21)
nsubj(fell-23, wind-22)
conj_but(sent-5, fell-23)
det(night-26, the-25)
prep_in(fell-23, night-26)
advmod(came-32, when-29)
det(sun-31, the-30)
nsubj(came-32, sun-31)
advcl(ball-38, came-32)
csubj(ball-38, came-32)
prep(came-32, near-33)
pobj(near-33, there-34)
cop(ball-38, was-35)
neg(ball-38, no-36)
amod(ball-38, golden-37)
conj_and(sent-5, ball-38)
det(air-41, the-40)
prep_in(ball-38, air-41)
aux(greet-43, to-42)
vmod(air-41, greet-43)
dobj(greet-43, him-44)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (PP (RB instead) (IN of)
      (S
        (VP (VBG rejoicing)
          (PP (IN in)
            (NP
              (NP (PRP$ its) (NN glitter))
              (PP (RB far)
                (ADVP (RB aloft))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB set)
            (PRT (RP out))
            (, ,)
            (S
              (VP (VBN guided)
                (PP (IN by)
                  (NP (DT the) (NN string)))))
            (, ,)
            (S
              (VP (TO to)
                (VP (VB find)
                  (NP (DT the) (JJ fallen) (NN Lucifer)))))))))
    (. .)))

advmod(had-13, So-1)
prepc_instead_of(had-13, rejoicing-5)
poss(glitter-8, its-7)
prep_in(rejoicing-5, glitter-8)
prep(glitter-8, far-9)
dep(far-9, aloft-10)
nsubj(had-13, they-12)
nsubj(set-15, they-12)
nsubj(find-24, they-12)
root(ROOT-0, had-13)
aux(set-15, to-14)
xcomp(had-13, set-15)
prt(set-15, out-16)
dep(set-15, guided-18)
det(string-21, the-20)
prep_by(guided-18, string-21)
aux(find-24, to-23)
xcomp(set-15, find-24)
det(Lucifer-27, the-25)
amod(Lucifer-27, fallen-26)
dobj(find-24, Lucifer-27)

(ROOT
  (S
    (S
      (NP (DT The) (NN kite))
      (VP (VBD was)
        (PP (IN of)
          (NP (JJ small) (NN consequence)))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (JJ golden) (NN ball) (NNP Willie))
      (VP (MD could) (RB not)
        (VP (VB replace))))
    (. .)))

det(kite-2, The-1)
nsubj(was-3, kite-2)
root(ROOT-0, was-3)
amod(consequence-6, small-5)
prep_of(was-3, consequence-6)
det(Willie-12, the-9)
amod(Willie-12, golden-10)
nn(Willie-12, ball-11)
nsubj(replace-15, Willie-12)
aux(replace-15, could-13)
neg(replace-15, not-14)
conj_but(was-3, replace-15)

(ROOT
  (NP (NNS Alas) (. !)))

root(ROOT-0, Alas-1)

(ROOT
  (S
    (S
      (NP (DT that) (JJ very) (NN evening))
      (NP (PRP he))
      (VP (VBD had)
        (VP (VBN added)
          (NP
            (NP
              (NP (DT a) (JJ great) (NN length))
              (PP (IN of)
                (NP (NN string))))
            (: --)
            (ADVP
              (ADVP (RB so) (RB much))
              (, ,)
              (SBAR (IN that)
                (S
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (DT the) (NN wind))
                      (VP (VBD ceased)
                        (SBAR
                          (S
                            (NP (DT the) (NN kite))
                            (VP (MD could)
                              (ADVP (RB just))
                              (VP (VB reach)
                                (NP (DT the) (NN river))
                                (, ,)
                                (SBAR
                                  (SBAR
                                    (WHPP (IN into)
                                      (WHNP (WDT which)))
                                    (S
                                      (NP (PRP it))
                                      (VP (VBD fell))))
                                  (: ;)
                                  (CC and)
                                  (SBAR
                                    (WHADVP (WRB when))
                                    (S
                                      (NP
                                        (NP (DT the) (NNS searchers))
                                        (PP (IN at)
                                          (NP (NN length))))
                                      (VP (VBD drew)
                                        (NP (NNP Sun-scout))
                                        (PP (IN from)
                                          (NP (DT the) (NN water))))))))))))))
                  (NP (PRP they))
                  (VP (VBD found)
                    (SBAR
                      (S
                        (NP (PRP$ his) (NN glory))
                        (VP (VBD had)
                          (VP (VBD departed)))))))))))))
    (: ;)
    (S
      (NP (DT the) (JJ golden) (NN ball))
      (VP
        (VP (VBD had)
          (VP (VBN been)
            (VP (VBN beaten))))
        (CC and)
        (VP (VBD ground)
          (PP (IN upon)
            (NP
              (NP (DT the) (NNS stones))
              (PP (IN of)
                (NP (DT the) (NN stream))))))
        (, ,)
        (CC and)
        (ADVP (RB never) (RBR more))
        (VP (VBD did)
          (S
            (NP (PRP they))
            (VP (VB send)
              (S
                (NP (PRP him))
                (VP (VBG climbing)
                  (PRT (RP up))
                  (NP (DT the) (NNS heavens))
                  (S
                    (VP (TO to)
                      (VP (VB welcome)
                        (NP
                          (NP (DT the) (NN lord))
                          (PP (IN of)
                            (NP (NN day))))))))))))))
    (. .)))

det(evening-3, that-1)
amod(evening-3, very-2)
tmod(added-6, evening-3)
nsubj(added-6, he-4)
aux(added-6, had-5)
root(ROOT-0, added-6)
det(length-9, a-7)
amod(length-9, great-8)
dobj(added-6, length-9)
prep_of(length-9, string-11)
advmod(much-14, so-13)
advmod(length-9, much-14)
mark(found-46, that-16)
advmod(ceased-20, when-17)
det(wind-19, the-18)
nsubj(ceased-20, wind-19)
advcl(found-46, ceased-20)
det(kite-22, the-21)
nsubj(reach-25, kite-22)
aux(reach-25, could-23)
advmod(reach-25, just-24)
ccomp(ceased-20, reach-25)
det(river-27, the-26)
dobj(reach-25, river-27)
prep_into(fell-32, which-30)
nsubj(fell-32, it-31)
dep(reach-25, fell-32)
advmod(drew-40, when-35)
det(searchers-37, the-36)
nsubj(drew-40, searchers-37)
prep_at(searchers-37, length-39)
dep(reach-25, drew-40)
conj_and(fell-32, drew-40)
dobj(drew-40, Sun-scout-41)
det(water-44, the-43)
prep_from(drew-40, water-44)
nsubj(found-46, they-45)
advcl(much-14, found-46)
ccomp(much-14, found-46)
poss(glory-48, his-47)
nsubj(departed-50, glory-48)
aux(departed-50, had-49)
ccomp(found-46, departed-50)
det(ball-54, the-52)
amod(ball-54, golden-53)
nsubjpass(beaten-57, ball-54)
nsubjpass(ground-59, ball-54)
nsubjpass(did-70, ball-54)
aux(beaten-57, had-55)
auxpass(beaten-57, been-56)
parataxis(added-6, beaten-57)
parataxis(added-6, ground-59)
conj_and(beaten-57, ground-59)
det(stones-62, the-61)
prep_upon(ground-59, stones-62)
det(stream-65, the-64)
prep_of(stones-62, stream-65)
dep(more-69, never-68)
parataxis(added-6, more-69)
advmod(beaten-57, more-69)
conj_and(beaten-57, more-69)
parataxis(added-6, did-70)
conj_and(beaten-57, did-70)
nsubj(send-72, they-71)
ccomp(did-70, send-72)
nsubj(climbing-74, him-73)
dep(send-72, climbing-74)
prt(climbing-74, up-75)
det(heavens-77, the-76)
dobj(climbing-74, heavens-77)
aux(welcome-79, to-78)
vmod(climbing-74, welcome-79)
det(lord-81, the-80)
dobj(welcome-79, lord-81)
prep_of(lord-81, day-83)

(ROOT
  (S
    (ADVP (RB Indeed))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (NP (JJ many) (NNS years))
      (SBAR (IN before)
        (S
          (NP (NNP Willie))
          (VP (VBD flew)
            (NP (DT a) (NN kite))
            (ADVP (RB again))
            (, ,)
            (SBAR (IN for)
              (S
                (PRN (, ,)
                  (PP (IN after)
                    (NP
                      (NP (DT a) (JJ certain) (NN conversation))
                      (PP (IN with)
                        (NP (PRP$ his) (NN grandmother)))))
                  (, ,))
                (S
                  (NP (PRP he))
                  (VP (VBD began)
                    (S
                      (VP (TO to)
                        (VP (VB give)
                          (NP (DT a) (JJ good) (NN deal))
                          (NP (JJR more) (NN time))
                          (PP (TO to)
                            (NP
                              (NP (PRP$ his) (NNS lessons))
                              (PP (IN than)
                                (NP (NN hitherto))))))))))
                (: ;)
                (CC and)
                (S
                  (SBAR (IN while)
                    (S
                      (NP (PRP$ his) (NNS recreations))
                      (VP (VBD continued)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (NP
                                (NP (DT all))
                                (PP (IN of)
                                  (NP (DT a) (JJ practical) (NN sort))))))))))
                  (, ,)
                  (NP (PRP$ his) (NN reading))
                  (VP (VBD was)
                    (ADJP (RB mostly) (JJ such)
                      (SBAR (IN as)
                        (S
                          (VP (VBD prepared)
                            (NP (PRP him))
                            (PP (IN for)
                              (NP (NN college)))))))))))))))
    (. .)))

advmod(years-6, Indeed-1)
nsubj(years-6, it-3)
cop(years-6, was-4)
amod(years-6, many-5)
root(ROOT-0, years-6)
mark(flew-9, before-7)
nsubj(flew-9, Willie-8)
advcl(years-6, flew-9)
det(kite-11, a-10)
dobj(flew-9, kite-11)
advmod(flew-9, again-12)
mark(began-25, for-14)
dep(began-25, after-16)
det(conversation-19, a-17)
amod(conversation-19, certain-18)
pobj(after-16, conversation-19)
poss(grandmother-22, his-21)
prep_with(conversation-19, grandmother-22)
nsubj(began-25, he-24)
nsubj(give-27, he-24)
advcl(flew-9, began-25)
aux(give-27, to-26)
xcomp(began-25, give-27)
det(deal-30, a-28)
amod(deal-30, good-29)
iobj(give-27, deal-30)
amod(time-32, more-31)
dobj(give-27, time-32)
poss(lessons-35, his-34)
prep_to(give-27, lessons-35)
prep_than(lessons-35, hitherto-37)
mark(continued-43, while-40)
poss(recreations-42, his-41)
nsubj(continued-43, recreations-42)
nsubj(all-46, recreations-42)
advcl(such-56, continued-43)
aux(all-46, to-44)
cop(all-46, be-45)
xcomp(continued-43, all-46)
det(sort-50, a-48)
amod(sort-50, practical-49)
prep_of(all-46, sort-50)
poss(reading-53, his-52)
nsubj(such-56, reading-53)
cop(such-56, was-54)
advmod(such-56, mostly-55)
advcl(flew-9, such-56)
conj_and(began-25, such-56)
mark(prepared-58, as-57)
dep(such-56, prepared-58)
dobj(prepared-58, him-59)
prep_for(prepared-58, college-61)

(ROOT
  (NP (NNP CHAPTER) (NNP XVIII) (. .)))

nn(XVIII-2, CHAPTER-1)
root(ROOT-0, XVIII-2)

(ROOT
  (S
    (NP (NNP WILLIE))
    (VP (VBZ 'S)
      (VP (VBN TALK)
        (PP (IN WITH)
          (NP (PRP$ HIS) (NN GRANDMOTHER)))))
    (. .)))

nsubjpass(TALK-3, WILLIE-1)
auxpass(TALK-3, 'S-2)
root(ROOT-0, TALK-3)
poss(GRANDMOTHER-6, HIS-5)
prep_with(TALK-3, GRANDMOTHER-6)

(ROOT
  (S
    (NP
      (NP (CD One) (NN evening))
      (PP (IN in)
        (NP (NN winter))))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN been)
            (VP (VBG putting)
              (NP
                (NP (NNS coals))
                (PP (IN on)
                  (NP
                    (NP (PRP$ his) (NN grannie) (POS 's))
                    (NN fire)))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD told)
      (S
        (NP (PRP him))
        (VP (TO to)
          (VP (VB take)
            (NP (DT a) (NN chair))
            (PP (IN beside)
              (NP (PRP her)))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP she))
                (VP (VBD wanted)
                  (NP (DT a) (JJ little) (NN talk))
                  (PP (IN with)
                    (NP (PRP him))))))))))
    (. .)))

num(evening-2, One-1)
nsubj(told-19, evening-2)
prep_in(evening-2, winter-4)
advmod(putting-10, when-6)
nsubj(putting-10, he-7)
aux(putting-10, had-8)
aux(putting-10, been-9)
advcl(told-19, putting-10)
dobj(putting-10, coals-11)
poss(grannie-14, his-13)
poss(fire-16, grannie-14)
prep_on(coals-11, fire-16)
nsubj(told-19, she-18)
root(ROOT-0, told-19)
dobj(told-19, him-20)
nsubj(take-22, him-20)
aux(take-22, to-21)
xcomp(told-19, take-22)
det(chair-24, a-23)
dobj(take-22, chair-24)
prep_beside(take-22, her-26)
mark(wanted-30, as-28)
nsubj(wanted-30, she-29)
advcl(take-22, wanted-30)
det(talk-33, a-31)
amod(talk-33, little-32)
dobj(wanted-30, talk-33)
prep_with(wanted-30, him-35)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD obeyed)
      (NP (PRP$ her) (NN gladly)))
    (. .)))

nsubj(obeyed-2, He-1)
root(ROOT-0, obeyed-2)
poss(gladly-4, her-3)
dobj(obeyed-2, gladly-4)

(ROOT
  (SBAR (`` ``)
    (S
      (FRAG
        (INTJ (UH Well))
        (, ,)
        (NP (NNP Willie)))
      (, ,) ('' '')
      (NP (PRP she))
      (VP (VBD said) (, ,) (`` ``)
        (SBARQ
          (WHNP (WP what))
          (SQ (MD would)
            (NP (PRP you))
            (VP (VB like)
              (S
                (VP (TO to)
                  (VP (VB be))))))
          (. ?))
        ('' '')))))

discourse(Willie-4, Well-2)
dep(said-8, Willie-4)
nsubj(said-8, she-7)
root(ROOT-0, said-8)
dep(like-14, what-11)
aux(like-14, would-12)
nsubj(like-14, you-13)
nsubj(be-16, you-13)
ccomp(said-8, like-14)
aux(be-16, to-15)
xcomp(like-14, be-16)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (VBD had)
        (ADVP (RB just))
        (VP (VBN been)
          (VP (VBG helping)
            (S
              (VP (TO to)
                (VP (VB shoe)
                  (NP (DT a) (NN horse))
                  (PP (IN at)
                    (NP (DT the) (NN smithy))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (PRN (, ,)
          (PP (IN in)
            (NP (NN fact)))
          (, ,)))
      (VP (VBD had)
        (VP (VBN driven)
          (NP
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (DT the) (NNS nails))))
            (: --)
            (NP
              (NP (DT an) (NN operation))
              (ADJP (JJ perilous)
                (PP (TO to)
                  (NP (DT the) (NN horse)))))))))
    (. .)))

nsubj(helping-5, Willie-1)
nsubj(shoe-7, Willie-1)
aux(helping-5, had-2)
advmod(helping-5, just-3)
aux(helping-5, been-4)
root(ROOT-0, helping-5)
aux(shoe-7, to-6)
xcomp(helping-5, shoe-7)
det(horse-9, a-8)
dobj(shoe-7, horse-9)
det(smithy-12, the-11)
prep_at(shoe-7, smithy-12)
nsubj(driven-20, in-16)
pobj(in-16, fact-17)
aux(driven-20, had-19)
conj_and(helping-5, driven-20)
dobj(driven-20, one-21)
det(nails-24, the-23)
prep_of(one-21, nails-24)
det(operation-27, an-26)
dep(one-21, operation-27)
amod(operation-27, perilous-28)
det(horse-31, the-30)
prep_to(perilous-28, horse-31)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Full))
        (PP (IN of)
          (NP
            (NP (DT the) (NN thing))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD had)
                  (NP (JJ last))))))))
      (VP (VBD occupied)
        (NP (PRP him))))
    (, ,)
    (NP (PRP he))
    (VP (VBD answered)
      (PP (IN without)
        (NP
          (NP (DT a) (NN moment) (POS 's))
          (NN hesitation)))
      (: --) (`` ``)
      (S
        (NP (PRP I))
        (VP (MD should)
          (VP (VB like)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP (DT a) (NN blacksmith))
                  (, ,)
                  (ADVP (RB grannie)))))))))
    (. .) ('' '')))

nsubj(occupied-8, Full-1)
det(thing-4, the-3)
prep_of(Full-1, thing-4)
nsubj(had-6, thing-4)
rcmod(thing-4, had-6)
dobj(had-6, last-7)
ccomp(answered-12, occupied-8)
dobj(occupied-8, him-9)
nsubj(answered-12, he-11)
root(ROOT-0, answered-12)
det(moment-15, a-14)
poss(hesitation-17, moment-15)
prep_without(answered-12, hesitation-17)
nsubj(like-22, I-20)
nsubj(blacksmith-26, I-20)
aux(like-22, should-21)
ccomp(answered-12, like-22)
aux(blacksmith-26, to-23)
cop(blacksmith-26, be-24)
det(blacksmith-26, a-25)
xcomp(like-22, blacksmith-26)
advmod(blacksmith-26, grannie-28)

(ROOT
  (S
    (NP (DT The) (JJ old) (NN lady))
    (VP (VBD smiled))
    (. .)))

det(lady-3, The-1)
amod(lady-3, old-2)
nsubj(smiled-4, lady-3)
root(ROOT-0, smiled-4)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (VP (VBN seen)
        (S
          (ADJP (RBR more) (JJ black)
            (PP (IN on)
              (NP
                (NP (NNP Willie) (POS 's))
                (NNS hands)))))
        (SBAR (IN than)
          (S
            (VP (MD could)
              (VP (VB have)
                (VP
                  (VP (VBN come)
                    (PP (IN from)
                      (NP (DT the) (NNS coals))))
                  (, ,)
                  (CC and)
                  (VP (VBN judged)
                    (PP (IN from)
                      (NP
                        (NP (DT that))
                        (CC and)
                        (NP (PRP$ his) (NN answer))))
                    (SBAR (IN that)
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (ADVP (RB just))
                          (VP (VBN come)
                            (PP (IN from)
                              (NP (DT the) (NN smithy)))))))))))))))
    (. .)))

nsubj(seen-3, She-1)
aux(seen-3, had-2)
root(ROOT-0, seen-3)
advmod(black-5, more-4)
acomp(seen-3, black-5)
poss(hands-9, Willie-7)
prep_on(black-5, hands-9)
mark(come-13, than-10)
aux(come-13, could-11)
aux(come-13, have-12)
advcl(seen-3, come-13)
det(coals-16, the-15)
prep_from(come-13, coals-16)
advcl(seen-3, judged-19)
conj_and(come-13, judged-19)
prep_from(judged-19, that-21)
poss(answer-24, his-23)
prep_from(judged-19, answer-24)
conj_and(that-21, answer-24)
mark(come-29, that-25)
nsubj(come-29, he-26)
aux(come-29, had-27)
advmod(come-29, just-28)
ccomp(judged-19, come-29)
det(smithy-32, the-31)
prep_from(come-29, smithy-32)

(ROOT
  (S
    (S
      (NP (DT An) (JJ unwise) (NN grandmother))
      (PRN (, ,)
        (SINV (VBD had)
          (NP (PRP she))
          (VP (VBN wished)
            (S
              (VP (TO to)
                (VP (VB turn)
                  (NP (PRP him))
                  (PP (IN from)
                    (NP (DT the) (NN notion))))))))
        (, ,))
      (VP (MD would)
        (VP (VB have)
          (VP (VBD started)
            (NP
              (NP (DT an) (NN objection))
              (PP (IN at)
                (NP (RB once))))
            (: --)
            (S
              (ADVP (RB probably))
              (VP (VBG calling)
                (NP (PRP it))
                (NP
                  (NP
                    (NP (DT a) (JJ dirty) (NN trade))
                    (, ,)
                    (CC or)
                    (NP (DT a) (JJ dangerous) (NN trade))
                    (, ,))
                  (CC or)
                  (NP (DT a) (NN trade)))
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT the) (NN son))
                      (PP (IN of)
                        (NP (DT a) (JJ professional) (NN man))))
                    (VP (MD could) (RB not)
                      (VP (VB be)
                        (VP (VBN allowed)
                          (S
                            (VP (TO to)
                              (VP (VB follow)))))))))))))))
    (: ;)
    (CC but)
    (S
      (NP
        (NP (NNP Willie) (POS 's))
        (NN grandmother))
      (VP
        (VP (VBD knew)
          (ADVP (RBR better)))
        (, ,)
        (CC and)
        (VP (VBD went)
          (PP (IN on)
            (S
              (VP (VBG talking)
                (PP (IN about)
                  (NP
                    (NP (DT the) (NN thing))
                    (PP (IN in)
                      (NP (DT the) (JJ quietest) (NN manner)))))))))))
    (. .)))

det(grandmother-3, An-1)
amod(grandmother-3, unwise-2)
nsubj(started-17, grandmother-3)
aux(wished-7, had-5)
nsubj(wished-7, she-6)
nsubj(turn-9, she-6)
parataxis(started-17, wished-7)
aux(turn-9, to-8)
xcomp(wished-7, turn-9)
dobj(turn-9, him-10)
det(notion-13, the-12)
prep_from(turn-9, notion-13)
aux(started-17, would-15)
aux(started-17, have-16)
root(ROOT-0, started-17)
det(objection-19, an-18)
dobj(started-17, objection-19)
prep(objection-19, at-20)
pobj(at-20, once-21)
advmod(calling-24, probably-23)
parataxis(started-17, calling-24)
iobj(calling-24, it-25)
det(trade-28, a-26)
amod(trade-28, dirty-27)
dobj(calling-24, trade-28)
det(trade-33, a-31)
amod(trade-33, dangerous-32)
dobj(calling-24, trade-33)
conj_or(trade-28, trade-33)
det(trade-37, a-36)
dobj(calling-24, trade-37)
conj_or(trade-28, trade-37)
mark(allowed-48, that-38)
det(son-40, the-39)
nsubjpass(allowed-48, son-40)
nsubj(follow-50, son-40)
det(man-44, a-42)
amod(man-44, professional-43)
prep_of(son-40, man-44)
aux(allowed-48, could-45)
neg(allowed-48, not-46)
auxpass(allowed-48, be-47)
ccomp(calling-24, allowed-48)
aux(follow-50, to-49)
xcomp(allowed-48, follow-50)
poss(grandmother-55, Willie-53)
nsubj(knew-56, grandmother-55)
nsubj(went-60, grandmother-55)
conj_but(started-17, knew-56)
advmod(knew-56, better-57)
conj_but(started-17, went-60)
conj_and(knew-56, went-60)
prepc_on(went-60, talking-62)
det(thing-65, the-64)
prep_about(talking-62, thing-65)
det(manner-69, the-67)
amod(manner-69, quietest-68)
prep_in(thing-65, manner-69)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP (DT a) (JJ fine) (NN trade))))
    (, ,) ('' '')
    (NP (PRP she))
    (VP (VBD said) (: ;) (`` ``)
      (S
        (UCP
          (VP (VBG thorough)
            (NP (JJ manly) (NN work)))
          (, ,)
          (CC and)
          (ADJP (JJ healthy)))
        (, ,)
        (NP (PRP I))
        (VP (VBP believe)))
      (, ,)
      (PP (IN notwithstanding)
        (NP (DT the) (NN heat))))
    (. .)))

nsubj(trade-6, It-2)
cop(trade-6, 's-3)
det(trade-6, a-4)
amod(trade-6, fine-5)
ccomp(said-10, trade-6)
nsubj(said-10, she-9)
root(ROOT-0, said-10)
dep(believe-21, thorough-13)
amod(work-15, manly-14)
dobj(thorough-13, work-15)
conj_and(thorough-13, healthy-18)
dep(believe-21, healthy-18)
nsubj(believe-21, I-20)
ccomp(said-10, believe-21)
det(heat-25, the-24)
prep_notwithstanding(said-10, heat-25)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB why))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB take)
        (PP (TO to)
          (NP
            (NP (PRP it))
            (, ,)
            (NP (NNP Willie))))))
    (. ?) ('' '')))

cc(take-5, But-1)
advmod(take-5, why-2)
aux(take-5, would-3)
nsubj(take-5, you-4)
root(ROOT-0, take-5)
prep_to(take-5, it-7)
appos(it-7, Willie-9)

(ROOT
  (S
    (NP (NNP Willie))
    (VP
      (VP (VBD fell)
        (PRT (RP back))
        (PP (IN on)
          (NP (PRP$ his) (NNS principles))))
      (, ,)
      (CC and)
      (VP (VBD thought)
        (PP (IN for)
          (NP (DT a) (NN minute)))))
    (. .)))

nsubj(fell-2, Willie-1)
nsubj(thought-9, Willie-1)
root(ROOT-0, fell-2)
prt(fell-2, back-3)
poss(principles-6, his-5)
prep_on(fell-2, principles-6)
conj_and(fell-2, thought-9)
det(minute-12, a-11)
prep_for(thought-9, minute-12)

(ROOT
  (S (`` ``)
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (RB any) (JJ good))))))))
    (ADVP (IN at) (DT all))
    (NP (PRP I))
    (VP (MD must)
      (VP (VB have)
        (NP
          (NP (DT a) (NN hand))
          (SBAR
            (WHPP (IN in)
              (WHNP (WP what)))
            (S
              (NP (NNP Hector))
              (VP (VBZ calls)
                (NP
                  (NP (DT the) (JJ general) (NN business))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN universe))
                      (, ,)
                      (NP (NN grannie)))))))))))
    (. .) ('' '')))

prep_of(have-16, course-3)
mark('m-7, if-5)
nsubj('m-7, I-6)
nsubj(good-11, I-6)
advcl(have-16, 'm-7)
aux(good-11, to-8)
cop(good-11, be-9)
advmod(good-11, any-10)
xcomp('m-7, good-11)
advmod(have-16, at-12)
pobj(at-12, all-13)
nsubj(have-16, I-14)
aux(have-16, must-15)
root(ROOT-0, have-16)
det(hand-18, a-17)
dobj(have-16, hand-18)
prep_in(calls-22, hand-18)
nsubj(calls-22, Hector-21)
rcmod(hand-18, calls-22)
det(business-25, the-23)
amod(business-25, general-24)
dobj(calls-22, business-25)
det(universe-28, the-27)
prep_of(business-25, universe-28)
appos(universe-28, grannie-30)

(ROOT
  (S (`` ``)
    (S
      (VP (TO To)
        (VP (VB be)
          (ADJP (JJ sure)))))
    (: ;)
    (CC and)
    (S
      (S
        (NP (DT that))
        (, ,)
        (PP (IN as)
          (NP (DT a) (NN smith)))
        (, ,)
        (NP (PRP you))
        (VP (MD would)
          (VP (VB have))))
      (: ;)
      (CC but)
      (S
        (SBAR
          (WHADVP (WRB why))
          (S
            (VP (MD should))))
        (NP (PRP you))
        (VP (VBP choose)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (DT a) (NN smith))
                  (CONJP (RB rather) (IN than))
                  (NP (NN anything) (RB else)))
                (PP (IN in)
                  (NP (DT the) (NN world)))))))))
    (. ?) ('' '')))

aux(sure-4, To-2)
cop(sure-4, be-3)
root(ROOT-0, sure-4)
nsubj(have-15, that-7)
det(smith-11, a-10)
prep_as(have-15, smith-11)
nsubj(have-15, you-13)
aux(have-15, would-14)
conj_and(sure-4, have-15)
advmod(should-19, why-18)
advcl(choose-21, should-19)
nsubj(choose-21, you-20)
nsubj(smith-25, you-20)
conj_and(sure-4, choose-21)
conj_but(have-15, choose-21)
aux(smith-25, to-22)
cop(smith-25, be-23)
det(smith-25, a-24)
xcomp(choose-21, smith-25)
xcomp(choose-21, anything-28)
conj_negcc(smith-25, anything-28)
advmod(anything-28, else-29)
det(world-32, the-31)
prep_in(smith-25, world-32)

(ROOT
  (S (`` ``)
    (S
      (PP (IN Because)
        (PRN (: --)
          (PP (IN because))
          (: --)))
      (NP (NNS people))
      (VP
        (VP (MD ca) (RB n't)
          (VP (VB get)
            (PRT (RP on))
            (PP (IN without)
              (NP
                (NP (NNS horse-shoes))
                (, ,)
                (CC and)
                (NP (NNS ploughs)
                  (CC and)
                  (NNS harrows))
                (, ,)
                (CC and)
                (NP
                  (NP (NNS tires))
                  (PP (IN for)
                    (NP (NNS cart-wheels))))
                (, ,)))))
        (CC and)
        (VP (VBZ locks))))
    (, ,)
    (CC and)
    (S
      (NP (DT all))
      (NP (DT that)))
    (. .)))

prep(get-9, Because-2)
dep(Because-2, because-4)
nsubj(get-9, people-6)
nsubj(locks-25, people-6)
aux(get-9, ca-7)
neg(get-9, n't-8)
root(ROOT-0, get-9)
prt(get-9, on-10)
prep_without(get-9, horse-shoes-12)
prep_without(get-9, ploughs-15)
conj_and(horse-shoes-12, ploughs-15)
conj_and(horse-shoes-12, harrows-17)
conj_and(ploughs-15, harrows-17)
prep_without(get-9, tires-20)
conj_and(horse-shoes-12, tires-20)
prep_for(tires-20, cart-wheels-22)
conj_and(get-9, locks-25)
dep(that-29, all-28)
conj_and(get-9, that-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB help)
        (NP (NNS people))
        (ADVP
          (ADVP (RB very) (RB much))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD were)
                (NP (DT a) (NN smith))))))))
    (. .) ('' '')))

nsubj(help-3, It-1)
aux(help-3, would-2)
root(ROOT-0, help-3)
dobj(help-3, people-4)
advmod(much-6, very-5)
advmod(help-3, much-6)
mark(smith-11, if-7)
nsubj(smith-11, I-8)
cop(smith-11, were-9)
det(smith-11, a-10)
advcl(much-6, smith-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB doubt)
        (NP (PRP it))))
    (. .)))

nsubj(doubt-5, I-2)
aux(doubt-5, do-3)
neg(doubt-5, n't-4)
root(ROOT-0, doubt-5)
dobj(doubt-5, it-6)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (NP (DT a) (NN mason)))))
    (S
      (NP (PRP you))
      (VP (MD could)
        (VP (VB do)
          (ADVP (RB quite) (RB as) (RB much))
          (S
            (VP (TO to)
              (VP (VB make)
                (S
                  (NP (PRP them))
                  (ADJP (JJ comfortable)))))))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD could)
        (VP (VB build)
          (S
            (NP (PRP them))
            (NP (NNS houses))))))
    (. .) ('' '')))

cc(do-9, But-1)
mark(mason-6, if-2)
nsubj(mason-6, you-3)
cop(mason-6, were-4)
det(mason-6, a-5)
advcl(do-9, mason-6)
nsubj(do-9, you-7)
nsubj(make-14, you-7)
aux(do-9, could-8)
root(ROOT-0, do-9)
advmod(much-12, quite-10)
advmod(much-12, as-11)
advmod(do-9, much-12)
aux(make-14, to-13)
xcomp(do-9, make-14)
nsubj(comfortable-16, them-15)
xcomp(make-14, comfortable-16)
nsubj(build-20, you-18)
aux(build-20, could-19)
parataxis(do-9, build-20)
nsubj(houses-22, them-21)
xcomp(build-20, houses-22)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (MD could))
    (. .)))

discourse(could-5, Yes-2)
nsubj(could-5, I-4)
root(ROOT-0, could-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ delightful)
          (S
            (VP (TO to)
              (VP (VB build)
                (NP
                  (NP (NNS houses))
                  (PP (IN for)
                    (NP (NNS people))))))))))
    (. .)))

nsubj(delightful-4, It-1)
nsubj(build-6, It-1)
aux(delightful-4, would-2)
cop(delightful-4, be-3)
root(ROOT-0, delightful-4)
aux(build-6, to-5)
xcomp(delightful-4, build-6)
dobj(build-6, houses-7)
prep_for(houses-7, people-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should)
      (VP (VB like)
        (NP (DT that))))
    (. .) ('' '')))

nsubj(like-3, I-1)
aux(like-3, should-2)
root(ROOT-0, like-3)
dobj(like-3, that-4)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (ADJP (RB very) (JJ hard))
          (NN work))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN grandmother))
    (. .)))

nsubj(work-6, It-2)
cop(work-6, 's-3)
advmod(hard-5, very-4)
amod(work-6, hard-5)
ccomp(said-9, work-6)
root(ROOT-0, said-9)
poss(grandmother-11, his-10)
nsubj(said-9, grandmother-11)

(ROOT
  (S (`` ``)
    (ADVP (RB Only))
    (NP (PRP you))
    (VP (MD would) (RB n't)
      (VP (VB mind)
        (SBAR (IN that) (, ,)
          (S
            (NP (PRP I))
            (VP (VBP know))))
        (, ,)
        (NP (NNP Willie))))
    (. .) ('' '')))

advmod(mind-6, Only-2)
nsubj(mind-6, you-3)
aux(mind-6, would-4)
neg(mind-6, n't-5)
root(ROOT-0, mind-6)
mark(know-10, that-7)
nsubj(know-10, I-9)
ccomp(mind-6, know-10)
dobj(mind-6, Willie-12)

(ROOT
  (SINV (`` ``)
    (S
      (INTJ (UH No))
      (NP (NN man) (NNS minds))
      (ADVP (RB hard))
      (VP (VBP work)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

discourse(work-6, No-2)
nn(minds-4, man-3)
nsubj(work-6, minds-4)
advmod(work-6, hard-5)
ccomp(said-9, work-6)
root(ROOT-0, said-9)
nsubj(said-9, Willie-10)

(ROOT
  (S (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (VBP think)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD should)
                (VP (VB like)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (NP (DT a) (NN mason)))))))))))
      (: ;)
      (S
        (PP (IN for)
          (NP (RB then)))
        (, ,)
        (NP (PRP you))
        (VP (VBP see))))
    (, ,)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB look)
                (PP (IN at)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP I))
                      (VP (VBD had)
                        (VP (VBN done))))))))))))
    (. .)))

nsubj(think-3, I-2)
ccomp(able-21, think-3)
nsubj(like-6, I-4)
nsubj(mason-10, I-4)
aux(like-6, should-5)
ccomp(think-3, like-6)
aux(mason-10, to-7)
cop(mason-10, be-8)
det(mason-10, a-9)
xcomp(like-6, mason-10)
prep(see-16, for-12)
pobj(for-12, then-13)
nsubj(see-16, you-15)
parataxis(think-3, see-16)
nsubj(able-21, I-18)
nsubj(look-23, I-18)
aux(able-21, should-19)
cop(able-21, be-20)
root(ROOT-0, able-21)
aux(look-23, to-22)
xcomp(able-21, look-23)
dobj(done-28, what-25)
nsubj(done-28, I-26)
aux(done-28, had-27)
prepc_at(look-23, done-28)

(ROOT
  (S
    (S
      (NP (DT The) (NNS ploughs)
        (CC and)
        (NNS carts))
      (VP (MD would)
        (VP (VB go)
          (PRT (RP away))
          (PRT (RP out))
          (PP (IN of)
            (NP (NN sight))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (DT the) (JJ good) (NNS houses))
        (VP (MD would)
          (VP (VB stand)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP I))
                (VP (VBD had)
                  (VP (VBN built)
                    (NP (PRP them)))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (MD should)
          (VP (VB be)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (SBAR
                      (WHADVP (WRB how)
                        (ADJP (JJ comfortable)))
                      (S
                        (NP (DT the) (NNS people))
                        (VP (VBD were)
                          (PP (IN in)
                            (NP (PRP them))))))))))))))
    (. .)))

det(ploughs-2, The-1)
nsubj(go-6, ploughs-2)
conj_and(ploughs-2, carts-4)
nsubj(go-6, carts-4)
aux(go-6, would-5)
root(ROOT-0, go-6)
prt(go-6, away-7)
prep_out_of(go-6, sight-10)
det(houses-15, the-13)
amod(houses-15, good-14)
nsubj(stand-17, houses-15)
aux(stand-17, would-16)
conj_but(go-6, stand-17)
advmod(built-21, where-18)
nsubj(built-21, I-19)
aux(built-21, had-20)
advcl(stand-17, built-21)
dobj(built-21, them-22)
nsubj(able-28, I-25)
nsubj(see-30, I-25)
aux(able-28, should-26)
cop(able-28, be-27)
conj_but(go-6, able-28)
conj_and(stand-17, able-28)
aux(see-30, to-29)
xcomp(able-28, see-30)
advmod(were-35, how-31)
dep(how-31, comfortable-32)
det(people-34, the-33)
nsubj(were-35, people-34)
ccomp(see-30, were-35)
prep_in(were-35, them-37)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD should)
      (VP (VB come)
        (ADJP (JJ nearer)
          (PP (TO to)
            (NP
              (NP
                (NP (DT the) (NNS people))
                (ADVP (PRP themselves)))
              (NP (DT that) (NN way)))))
        (PP (IN with)
          (NP (PRP$ my) (NN work)))))
    (. .)))

nsubj(come-3, I-1)
aux(come-3, should-2)
root(ROOT-0, come-3)
acomp(come-3, nearer-4)
det(people-7, the-6)
prep_to(nearer-4, people-7)
advmod(people-7, themselves-8)
det(way-10, that-9)
dep(people-7, way-10)
poss(work-13, my-12)
prep_with(come-3, work-13)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (ADVP (RB grannie))
    (, ,)
    (NP (PRP I))
    (VP (MD would) (RB rather)
      (VP (VB be)
        (NP
          (NP (DT a) (NN mason))
          (PP (IN than)
            (NP (DT a) (NN smith))))))
    (. .) ('' '')))

discourse(mason-10, Yes-1)
advmod(mason-10, grannie-3)
nsubj(mason-10, I-5)
aux(mason-10, would-6)
advmod(mason-10, rather-7)
cop(mason-10, be-8)
det(mason-10, a-9)
root(ROOT-0, mason-10)
det(smith-13, a-12)
prep_than(mason-10, smith-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT A) (NN carpenter))
      (VP (VBZ fits)
        (PRT (RP up))
        (NP (DT the) (NNS houses) (NN inside))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN grandmother))
    (. .)))

det(carpenter-3, A-2)
nsubj(fits-4, carpenter-3)
ccomp(said-11, fits-4)
prt(fits-4, up-5)
det(inside-8, the-6)
nn(inside-8, houses-7)
dobj(fits-4, inside-8)
root(ROOT-0, said-11)
poss(grandmother-13, his-12)
nsubj(said-11, grandmother-13)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Do) (RB n't)))
    (PRN
      (S
        (NP (PRP you))
        (VP (VBP think) (, ,)
          (PP (IN with)
            (NP (PRP$ his) (NN work)))))
      (, ,))
    (NP (PRP he))
    (VP (VBZ comes)
      (S
        (VP (VBG nearer)
          (NP
            (NP (DT the) (NNS people))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP live)
                  (PP (IN in)
                    (NP (PRP it)))
                  (SBAR (IN than)
                    (S
                      (NP (DT the) (NN mason))
                      (VP (VBZ does)))))))))))
    (. ?) ('' '')))

dep(comes-12, Do-2)
neg(Do-2, n't-3)
nsubj(think-5, you-4)
parataxis(comes-12, think-5)
poss(work-9, his-8)
prep_with(think-5, work-9)
nsubj(comes-12, he-11)
root(ROOT-0, comes-12)
xcomp(comes-12, nearer-13)
det(people-15, the-14)
dobj(nearer-13, people-15)
nsubj(live-17, people-15)
rcmod(people-15, live-17)
prep_in(live-17, it-19)
mark(does-23, than-20)
det(mason-22, the-21)
nsubj(does-23, mason-22)
advcl(live-17, does-23)

(ROOT
  (SINV (`` ``)
    (S
      (VP (TO To)
        (VP (VB be)
          (ADJP (JJ sure)))))
    (, ,) ('' '')
    (VP (VBD cried))
    (NP (NNP Willie))
    (, ,)
    (S
      (VP (VBG laughing)))
    (. .)))

aux(sure-4, To-2)
cop(sure-4, be-3)
dep(cried-7, sure-4)
root(ROOT-0, cried-7)
nsubj(cried-7, Willie-8)
vmod(cried-7, laughing-10)

(ROOT
  (S (`` ``)
    (NP (NNS People))
    (ADVP (RB hardly))
    (VP (VB see)
      (NP
        (NP
          (NP (DT the) (NN mason) (POS 's))
          (NN work))
        (, ,)
        (PP (IN except)
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (VBP 're)
                (VP (VBG coming)
                  (PRT (RP up))
                  (PP (TO to)
                    (NP (DT the) (NN door))))))))))
    (. .)))

nsubj(see-4, People-2)
advmod(see-4, hardly-3)
root(ROOT-0, see-4)
det(mason-6, the-5)
poss(work-8, mason-6)
dobj(see-4, work-8)
mark(coming-14, as-11)
nsubj(coming-14, they-12)
aux(coming-14, 're-13)
prepc_except(work-8, coming-14)
prt(coming-14, up-15)
det(door-18, the-17)
prep_to(coming-14, door-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (ADVP (RBR more)
        (PP (IN about)
          (NP
            (NP (NN carpenter) (POS 's))
            (NN work))
          (ADVP (RB too)))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
advmod(know-2, more-3)
poss(work-7, carpenter-5)
prep_about(more-3, work-7)
advmod(more-3, too-8)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP Yes) (NNP _))
      (, ,)
      (ADVP (RB grannie))
      (, ,)
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN settled)
          (ADVP (RB now)))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB be)
          (NP
            (NP (DT a) (NN carpenter))
            (: --)
            (ADVP (RB there))))))
    (. !) ('' '')))

nn(_-3, _-1)
nn(_-3, Yes-2)
nsubj(settled-9, _-3)
advmod(settled-9, grannie-5)
nsubj(settled-9, I-7)
aux(settled-9, have-8)
root(ROOT-0, settled-9)
advmod(settled-9, now-10)
nsubj(carpenter-16, I-12)
aux(carpenter-16, 'll-13)
cop(carpenter-16, be-14)
det(carpenter-16, a-15)
parataxis(settled-9, carpenter-16)
advmod(carpenter-16, there-18)

(ROOT
  (FRAG
    (ADJP (JJ cried) (JJ Willie))
    (, ,)
    (VP (VBG jumping)
      (PRT (RP up))
      (PP (IN from)
        (NP (PRP$ his) (NN seat))))
    (. .)))

amod(Willie-2, cried-1)
root(ROOT-0, Willie-2)
dep(Willie-2, jumping-4)
prt(jumping-4, up-5)
poss(seat-8, his-7)
prep_from(jumping-4, seat-8)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD had) (RB n't)
          (VP (VBN been)
            (PP (IN for)
              (NP (NNP Mr) (NNP Spelman)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP we))
            (VP (MD could)
              (VP (VB have)
                (VP (VBN had)
                  (NP
                    (NP (NNP _))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBD _)
                          (PP (IN with)
                            (NP (PRP us)))
                          (, ,)
                          (ADVP (RB grannie)))))))))))))
    (. .)))

mark(been-6, If-2)
nsubj(been-6, it-3)
aux(been-6, had-4)
neg(been-6, n't-5)
advcl(see-14, been-6)
nn(Spelman-9, Mr-8)
prep_for(been-6, Spelman-9)
nsubj(see-14, I-11)
aux(see-14, do-12)
neg(see-14, n't-13)
root(ROOT-0, see-14)
advmod(had-19, how-15)
nsubj(had-19, we-16)
aux(had-19, could-17)
aux(had-19, have-18)
ccomp(see-14, had-19)
dobj(had-19, _-20)
nsubj(_-22, you-21)
rcmod(_-20, _-22)
prep_with(_-22, us-24)
advmod(_-22, grannie-26)

(ROOT
  (S
    (VP (VB Think)
      (PP (IN of)
        (NP (DT that))))
    (. !) ('' '')))

root(ROOT-0, Think-1)
prep_of(Think-1, that-3)

(ROOT
  (S (`` ``)
    (ADVP (RB Only))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBD had)
          (VP (VBN been)
            (NP
              (NP (DT a) (NN tailor))
              (CC or)
              (NP (DT a) (NN shoemaker)))))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN come)
          (ADJP (RB still) (JJ nearer))
          (PP (TO to)
            (NP
              (NP (DT the) (NNS people))
              (ADVP (PRP themselves)))))))
    (. .) ('' '')))

advmod(come-17, Only-2)
mark(tailor-9, if-4)
nsubj(tailor-9, you-5)
aux(tailor-9, had-6)
cop(tailor-9, been-7)
det(tailor-9, a-8)
advcl(come-17, tailor-9)
det(shoemaker-12, a-11)
conj_or(tailor-9, shoemaker-12)
advcl(come-17, shoemaker-12)
nsubj(come-17, you-14)
aux(come-17, would-15)
aux(come-17, have-16)
root(ROOT-0, come-17)
advmod(nearer-19, still-18)
acomp(come-17, nearer-19)
det(people-22, the-21)
prep_to(come-17, people-22)
advmod(people-22, themselves-23)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (NP (RB much) (RB about) (NN tailoring)))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Willie))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
ccomp(returned-11, know-5)
advmod(tailoring-8, much-6)
advmod(tailoring-8, about-7)
dobj(know-5, tailoring-8)
root(ROOT-0, returned-11)
nsubj(returned-11, Willie-12)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB stitch)
          (ADVP (RB well) (RB enough)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB cut)
          (PRT (RP out)))))
    (. .)))

nsubj(stitch-4, I-2)
aux(stitch-4, could-3)
root(ROOT-0, stitch-4)
advmod(enough-6, well-5)
advmod(stitch-4, enough-6)
nsubj(cut-12, I-9)
aux(cut-12, could-10)
neg(cut-12, n't-11)
conj_but(stitch-4, cut-12)
prt(cut-12, out-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could)
      (ADVP (RB soon))
      (VP (VB be)
        (NP (DT a) (NN shoemaker))
        (, ,)
        (ADVP (RB though))))
    (. .)))

nsubj(shoemaker-6, I-1)
aux(shoemaker-6, could-2)
advmod(shoemaker-6, soon-3)
cop(shoemaker-6, be-4)
det(shoemaker-6, a-5)
root(ROOT-0, shoemaker-6)
advmod(shoemaker-6, though-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN done)
          (SBAR
            (S
              (NP (NN everything))
              (VP (VBD wanted)
                (PP (IN in)
                  (NP
                    (NP (DT a) (NN shoe))
                    (CC or)
                    (NP (DT a) (NN boot))))
                (PP (IN with)
                  (NP (PRP$ my) (JJ own) (NNS hands)))
                (ADVP (RB already))))))))
    (: ;)
    (S
      (NP (NNP Hector))
      (VP (MD will)
        (VP (VB tell)
          (NP (PRP you))
          (ADVP (RB so)))))
    (. .)))

nsubj(done-3, I-1)
aux(done-3, 've-2)
root(ROOT-0, done-3)
nsubj(wanted-5, everything-4)
ccomp(done-3, wanted-5)
det(shoe-8, a-7)
prep_in(wanted-5, shoe-8)
det(boot-11, a-10)
prep_in(wanted-5, boot-11)
conj_or(shoe-8, boot-11)
poss(hands-15, my-13)
amod(hands-15, own-14)
prep_with(wanted-5, hands-15)
advmod(wanted-5, already-16)
nsubj(tell-20, Hector-18)
aux(tell-20, will-19)
parataxis(done-3, tell-20)
dobj(tell-20, you-21)
advmod(tell-20, so-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could)
      (VP (VB begin)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (DT a) (NN shoemaker) (NN to-morrow)))))))
    (. .)))

nsubj(begin-3, I-1)
nsubj(to-morrow-8, I-1)
aux(begin-3, could-2)
root(ROOT-0, begin-3)
aux(to-morrow-8, to-4)
cop(to-morrow-8, be-5)
det(to-morrow-8, a-6)
nn(to-morrow-8, shoemaker-7)
xcomp(begin-3, to-morrow-8)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (VP (VBN nearer)
        (PP (IN than)
          (NP (DT a) (NN carpenter)))))
    (. .)))

nsubjpass(nearer-3, That-1)
auxpass(nearer-3, is-2)
root(ROOT-0, nearer-3)
det(carpenter-6, a-5)
prep_than(nearer-3, carpenter-6)

(ROOT
  (S
    (VP (VB Yes))
    (. .) ('' '')))

root(ROOT-0, Yes-1)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB suggest)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN grannie))
    (, ,) (`` ``)
    (S
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP
              (NP (DT a) (NN kind))
              (PP (IN of)
                (NP (NN work)))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ goes)
                    (ADJP (RB yet) (JJ nearer)
                      (PP (TO to)
                        (NP (DT the) (NNS people)))))))))))
      (NP (PRP it))
      (VP (VBZ helps)
        (PP (IN than)
          (NP
            (NP (DT any))
            (PP (IN of)
              (NP (DT those)))))))
    (. .)))

nsubj(going-4, I-2)
nsubj(suggest-6, I-2)
aux(going-4, was-3)
ccomp(said-9, going-4)
aux(suggest-6, to-5)
xcomp(going-4, suggest-6)
root(ROOT-0, said-9)
poss(grannie-11, his-10)
nsubj(said-9, grannie-11)
mark('s-16, that-14)
expl('s-16, there-15)
advcl(helps-29, 's-16)
ccomp(helps-29, 's-16)
det(kind-18, a-17)
nsubj('s-16, kind-18)
nsubj(goes-22, kind-18)
prep_of(kind-18, work-20)
rcmod(kind-18, goes-22)
advmod(nearer-24, yet-23)
acomp(goes-22, nearer-24)
det(people-27, the-26)
prep_to(nearer-24, people-27)
nsubj(helps-29, it-28)
dep(said-9, helps-29)
prep_than(helps-29, any-31)
prep_of(any-31, those-33)

(ROOT
  (S (CC But)
    (, ,)
    (PP (IN of)
      (NP (NN course)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP 've))))
    (VP (VBD made)
      (PP (IN up)
        (NP (PRP$ your) (NN mind) ('' '')))
      (: --) (`` ``)
      (FRAG
        (INTJ (UH Oh) (UH no))
        (, ,)
        (NP (NN grannie))))
    (. !)))

cc(made-9, But-1)
prep_of(made-9, course-4)
mark('ve-8, if-6)
nsubj('ve-8, you-7)
csubj(made-9, 've-8)
root(ROOT-0, made-9)
poss(mind-12, your-11)
prep_up(made-9, mind-12)
discourse(grannie-19, Oh-16)
dep(Oh-16, no-17)
dep(made-9, grannie-19)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB mean)
          (NP (PRP it))
          (ADVP (RB so) (RB much))
          (PP (IN as)
            (NP (DT that))))))
    (: --)
    (S
      (SBAR (IN if)
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP (DT a) (JJR better) (NN way)))))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)))
    (. .)))

nsubj(mean-4, I-1)
aux(mean-4, do-2)
neg(mean-4, n't-3)
root(ROOT-0, mean-4)
dobj(mean-4, it-5)
advmod(much-7, so-6)
advmod(mean-4, much-7)
prep_as(mean-4, that-9)
mark('s-13, if-11)
expl('s-13, there-12)
advcl(know-19, 's-13)
det(way-16, a-14)
amod(way-16, better-15)
nsubj('s-13, way-16)
nsubj(know-19, you-18)
parataxis(mean-4, know-19)

(ROOT
  (S
    (VP (VB Tell)
      (NP (PRP me))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBZ is)))))
    (. .) ('' '')))

root(ROOT-0, Tell-1)
dobj(Tell-1, me-2)
dobj(is-5, what-3)
nsubj(is-5, it-4)
dep(Tell-1, is-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP want)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP
            (VP (VB think))
            (CC and)
            (VP (VB find)
              (PRT (RP out)))))))
    (. .) ('' '')))

nsubj(want-3, I-2)
root(ROOT-0, want-3)
dobj(want-3, you-4)
nsubj(think-6, you-4)
nsubj(find-8, you-4)
aux(think-6, to-5)
xcomp(want-3, think-6)
xcomp(want-3, find-8)
conj_and(think-6, find-8)
prt(find-8, out-9)

(ROOT
  (S
    (NP (NNP Willie))
    (VP
      (VP (VBD thought))
      (, ,)
      (VP (VBD looked)
        (VP (VBN puzzled)))
      (, ,)
      (CC and)
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD could) (RB n't)
              (VP (VB tell)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP it))
                    (VP (VBD was))))))))))
    (. .)))

nsubj(thought-2, Willie-1)
nsubj(looked-4, Willie-1)
nsubj(said-8, Willie-1)
root(ROOT-0, thought-2)
conj_and(thought-2, looked-4)
dep(looked-4, puzzled-5)
conj_and(thought-2, said-8)
nsubj(tell-12, he-9)
aux(tell-12, could-10)
neg(tell-12, n't-11)
ccomp(said-8, tell-12)
dobj(was-15, what-13)
nsubj(was-15, it-14)
ccomp(tell-12, was-15)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Then))
      (NP (PRP you))
      (VP (MD must)
        (VP (VB think)
          (ADVP
            (NP (DT a) (RB little))
            (RBR longer)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN grandmother))
    (. .)))

advmod(think-5, Then-2)
nsubj(think-5, you-3)
aux(think-5, must-4)
ccomp(said-11, think-5)
det(little-7, a-6)
npadvmod(longer-8, little-7)
advmod(think-5, longer-8)
root(ROOT-0, said-11)
poss(grandmother-13, his-12)
nsubj(said-11, grandmother-13)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (RB now))
    (VP (VBP go)
      (CC and)
      (VBP wash)
      (NP (PRP$ your) (NNS hands)))
    (. .) ('' '')))

nsubj(go-4, now-3)
nsubj(wash-6, now-3)
root(ROOT-0, go-4)
conj_and(go-4, wash-6)
poss(hands-8, your-7)
dobj(go-4, hands-8)

(ROOT
  (NP (NNP CHAPTER) (NNP XVIX) (. .)))

nn(XVIX-2, CHAPTER-1)
root(ROOT-0, XVIX-2)

(ROOT
  (S
    (NP (DT A) (NNP TALK) (NNP WITH) (NNP Mr))
    (VP (VBD SHEPHERD))
    (. .)))

det(Mr-4, A-1)
nn(Mr-4, TALK-2)
nn(Mr-4, WITH-3)
nsubj(SHEPHERD-5, Mr-4)
root(ROOT-0, SHEPHERD-5)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ few) (NNS minutes)))
    (NP (NNP Willie))
    (VP
      (VP (VBD came)
        (S
          (VP (VBG rushing)
            (PRT (RP back))
            (PP (IN from)
              (NP (PRP$ his) (NN room)))
            (, ,)
            (PP (IN with)
              (NP (PRP$ his) (NNS hands))))))
      (CC and)
      (VP (VBP face)
        (ADJP
          (ADJP (RB half) (JJ wet))
          (CC and)
          (ADJP (RB half) (JJ dry)))))
    (. .)))

det(minutes-4, a-2)
amod(minutes-4, few-3)
prep_in(came-6, minutes-4)
nsubj(came-6, Willie-5)
nsubj(face-17, Willie-5)
root(ROOT-0, came-6)
xcomp(came-6, rushing-7)
prt(rushing-7, back-8)
poss(room-11, his-10)
prep_from(rushing-7, room-11)
poss(hands-15, his-14)
prep_with(rushing-7, hands-15)
conj_and(came-6, face-17)
advmod(wet-19, half-18)
acomp(face-17, wet-19)
advmod(dry-22, half-21)
acomp(face-17, dry-22)
conj_and(wet-19, dry-22)

(ROOT
  (S (`` ``)
    (VP (VB Grannie))
    (. !)))

root(ROOT-0, Grannie-2)

(ROOT
  (S
    (VP (VB grannie))
    (. !) ('' '')))

root(ROOT-0, grannie-1)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD panted) (: --) (`` ``)
      (S
        (NP (WDT what))
        (ADJP (DT a) (JJ stupid))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP am))))))
    (. !)))

nsubj(panted-2, he-1)
root(ROOT-0, panted-2)
nsubj(am-9, what-5)
det(stupid-7, a-6)
dep(am-9, stupid-7)
nsubj(am-9, I-8)
xcomp(panted-2, am-9)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (DT a) (NN body))
      (VP (VB be)
        (ADJP (RB so) (JJ stupid)))
      (. !))))

advmod(stupid-7, How-1)
aux(stupid-7, can-2)
det(body-4, a-3)
nsubj(stupid-7, body-4)
cop(stupid-7, be-5)
advmod(stupid-7, so-6)
root(ROOT-0, stupid-7)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP you))
    (VP (VBP mean)
      (NP
        (NP (DT a) (NN doctor) (POS 's))
        (NN work)))
    (. !)))

prep_of(mean-4, course-2)
nsubj(mean-4, you-3)
root(ROOT-0, mean-4)
det(doctor-6, a-5)
poss(work-8, doctor-6)
dobj(mean-4, work-8)

(ROOT
  (S
    (S
      (NP (PRP$ My) (NN father))
      (VP (VBZ comes)
        (ADJP (JJ nearer)
          (PP (TO to)
            (NP (NNS people))))
        (S
          (VP (TO to)
            (VP (VB help)
              (NP (PRP them))
              (SBAR (IN than)
                (S
                  (NP (NN anybody) (RB else))
                  (VP (MD can)))))))))
    (: --)
    (CC and)
    (ADVP (RB yet))
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD thought)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBD meant))))))
    (. .)))

poss(father-2, My-1)
nsubj(comes-3, father-2)
nsubj(help-8, father-2)
root(ROOT-0, comes-3)
acomp(comes-3, nearer-4)
prep_to(nearer-4, people-6)
aux(help-8, to-7)
xcomp(comes-3, help-8)
dobj(help-8, them-9)
mark(can-13, than-10)
nsubj(can-13, anybody-11)
advmod(anybody-11, else-12)
advcl(help-8, can-13)
advmod(thought-19, yet-16)
nsubj(thought-19, I-17)
neg(thought-19, never-18)
conj_and(comes-3, thought-19)
dobj(meant-22, what-20)
nsubj(meant-22, you-21)
ccomp(thought-19, meant-22)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP
                (VP (VB know)
                  (NP (DT a) (NN thing)))
                (CC and)
                (RB not)
                (VP (VB know)
                  (NP (PRP it))
                  (PP (IN at)
                    (NP (DT the) (JJ same) (NN moment))))))))))
    (. ?) ('' '')))

advmod(is-2, How-1)
root(ROOT-0, is-2)
nsubj(is-2, it-3)
nsubj(know-6, you-4)
nsubj(know-11, you-4)
aux(know-6, can-5)
rcmod(it-3, know-6)
det(thing-8, a-7)
dobj(know-6, thing-8)
neg(know-11, not-10)
rcmod(it-3, know-11)
conj_and(know-6, know-11)
dobj(know-11, it-12)
det(moment-16, the-14)
amod(moment-16, same-15)
prep_at(know-11, moment-16)

(ROOT
  (S
    (INTJ (`` ``) (UH Well))
    (, ,)
    (ADVP (RB now))
    (NP (PRP you))
    (VP (VBP 've)
      (VP (VBN found)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBD meant) (, ,)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBP do)
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP think)
                          (PP (IN of)
                            (NP (PRP it))))))))))))))
    (. ?) ('' '')))

discourse(found-7, Well-2)
advmod(found-7, now-4)
nsubj(found-7, you-5)
aux(found-7, 've-6)
root(ROOT-0, found-7)
dobj(meant-10, what-8)
nsubj(meant-10, I-9)
ccomp(found-7, meant-10)
nsubj(do-13, what-12)
ccomp(meant-10, do-13)
nsubj(think-15, you-14)
ccomp(do-13, think-15)
prep_of(think-15, it-17)

(ROOT
  (S
    (VP (VBD said)
      (NP (PRP$ his) (NN grandmother)))
    (. .)))

root(ROOT-0, said-1)
poss(grandmother-3, his-2)
dobj(said-1, grandmother-3)

(ROOT
  (S (`` ``)
    (INTJ (WRB Why))
    (, ,)
    (PP (IN of)
      (NP (NN course)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJS best))
        (PP (IN of)
          (NP (DT all)))))
    (. .)))

discourse(best-10, Why-2)
prep_of(best-10, course-5)
nsubj(best-10, it-7)
cop(best-10, 's-8)
det(best-10, the-9)
root(ROOT-0, best-10)
prep_of(best-10, all-12)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP I))
          (VP (VBD was)
            (NP (DT a) (JJ little) (NN fellow)))))
      (, ,)
      (NP (PRP I))
      (VP (VBD used)
        (S
          (VP (TO to)
            (VP (VB think)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD should)
                    (VP (VB be)
                      (NP
                        (NP (DT a) (NN doctor))
                        (NP (DT some) (NN day))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB feel)
          (ADJP
            (ADJP (RB quite) (RB so) (JJ sure))
            (PP (IN of)
              (NP (PRP it))))
          (ADVP (RB now)))))
    (. .)))

advmod(fellow-6, When-1)
nsubj(fellow-6, I-2)
cop(fellow-6, was-3)
det(fellow-6, a-4)
amod(fellow-6, little-5)
advcl(used-9, fellow-6)
nsubj(used-9, I-8)
nsubj(think-11, I-8)
root(ROOT-0, used-9)
aux(think-11, to-10)
xcomp(used-9, think-11)
nsubj(doctor-16, I-12)
aux(doctor-16, should-13)
cop(doctor-16, be-14)
det(doctor-16, a-15)
ccomp(think-11, doctor-16)
det(day-18, some-17)
dep(doctor-16, day-18)
nsubj(feel-24, I-21)
aux(feel-24, do-22)
neg(feel-24, n't-23)
conj_but(used-9, feel-24)
advmod(sure-27, quite-25)
advmod(sure-27, so-26)
acomp(feel-24, sure-27)
prep_of(sure-27, it-29)
advmod(feel-24, now-30)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (ADVP (RB really))
    (VP (VB think) (, ,) (VB grannie) (, ,)
      (S
        (NP (PRP I))
        (ADVP (RB _))
        (VP (MD could)
          (ADVP (RB _))
          (VP (VB be)
            (NP
              (NP (DT a) (NN doctor))
              (PP (IN like)
                (NP (NN papa))))))))
    (. ?)))

aux(think-4, Do-1)
nsubj(think-4, you-2)
advmod(think-4, really-3)
root(ROOT-0, think-4)
dep(think-4, grannie-6)
nsubj(doctor-14, I-8)
advmod(doctor-14, _-9)
aux(doctor-14, could-10)
advmod(doctor-14, _-11)
cop(doctor-14, be-12)
det(doctor-14, a-13)
ccomp(think-4, doctor-14)
prep_like(doctor-14, papa-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see)
      (SBAR (IN that)
        (S
          (VP (VBZ wants)
            (PP (JJ such)
              (NP
                (NP (DT a) (JJ good) (NN head))
                (: --)
                (CC and)
                (PRN (: --)
                  (NP (NNP and))
                  (: --))
                (NP (NN everything))))))))
    (. .) ('' '')))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
mark(wants-4, that-3)
ccomp(see-2, wants-4)
prep(wants-4, such-5)
det(head-8, a-6)
amod(head-8, good-7)
dep(such-5, head-8)
dep(head-8, and-12)
dep(such-5, everything-14)
conj_and(head-8, everything-14)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ does)
        (VP (VB want)
          (NP (DT a) (JJ good) (NN head)
            (CC and)
            (NN everything)))))
    (. .)))

advmod(want-6, Yes-2)
nsubj(want-6, it-4)
aux(want-6, does-5)
root(ROOT-0, want-6)
det(head-9, a-7)
amod(head-9, good-8)
dobj(want-6, head-9)
dobj(want-6, everything-11)
conj_and(head-9, everything-11)

(ROOT
  (S (CC But)
    (S
      (NP (PRP you))
      (VP (VBP 've)
        (VP (VBN got)
          (NP (DT a) (JJ good) (JJ enough) (NN head))
          (S
            (VP (TO to)
              (VP (VB begin)
                (PP (IN with))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ depends)
        (PP (IN on)
          (NP (PRP yourself)))
        (S
          (VP (TO to)
            (VP (VB make)
              (S
                (NP (PRP it))
                (NP (DT a) (JJR better) (CD one))))))))
    (. .)))

nsubj(got-4, you-2)
aux(got-4, 've-3)
root(ROOT-0, got-4)
det(head-8, a-5)
amod(head-8, good-6)
amod(head-8, enough-7)
dobj(got-4, head-8)
aux(begin-10, to-9)
vmod(got-4, begin-10)
prep(begin-10, with-11)
nsubj(depends-15, it-14)
nsubj(make-19, it-14)
conj_and(got-4, depends-15)
prep_on(depends-15, yourself-17)
aux(make-19, to-18)
xcomp(depends-15, make-19)
nsubj(better-22, it-20)
det(better-22, a-21)
xcomp(make-19, better-22)
num(better-22, one-23)

(ROOT
  (S
    (ADVP (RB So) (RB long)
      (SBAR (IN as)
        (S
          (NP
            (NP (NNS people) (POS 's))
            (NNS hearts))
          (VP (VBP keep)
            (S
              (VP (VBG growing)
                (ADVP (RBR better))))))))
    (, ,)
    (NP (PRP$ their) (NNS heads))
    (VP (VBP do)
      (NP (DT the) (JJ same)))
    (. .)))

advmod(long-2, So-1)
advmod(do-13, long-2)
mark(keep-7, as-3)
poss(hearts-6, people-4)
nsubj(keep-7, hearts-6)
ccomp(long-2, keep-7)
xcomp(keep-7, growing-8)
advmod(growing-8, better-9)
poss(heads-12, their-11)
nsubj(do-13, heads-12)
root(ROOT-0, do-13)
det(same-15, the-14)
dobj(do-13, same-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP have)
            (NP
              (NP (DT every) (NN faculty))
              (PP (IN for)
                (NP
                  (NP (DT the) (NN making))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (JJ good) (NN doctor))
                      (PP (IN in)
                        (NP (PRP you))))))))))))
    (. .) ('' '')))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(have-4, you-3)
ccomp(think-2, have-4)
det(faculty-6, every-5)
dobj(have-4, faculty-6)
det(making-9, the-8)
prep_for(faculty-6, making-9)
det(doctor-13, a-11)
amod(doctor-13, good-12)
prep_of(making-9, doctor-13)
prep_in(doctor-13, you-15)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (S
        (NP (PRP you))
        (ADVP (RB really))
        (VP (VB think)
          (ADVP (RB so))
          (, ,) (VB grannie))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(think-5, you-3)
advmod(think-5, really-4)
ccomp(Do-2, think-5)
advmod(think-5, so-6)
dep(think-5, grannie-8)

(ROOT
  (S
    (NP (NNP cried) (NNP Willie))
    (, ,)
    (VP (VBD delighted))
    (. .)))

nn(Willie-2, cried-1)
nsubj(delighted-4, Willie-2)
root(ROOT-0, delighted-4)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do)
      (ADVP (RB indeed)))
    (. .) ('' '')))

nsubj(do-3, I-2)
root(ROOT-0, do-3)
advmod(do-3, indeed-4)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP I))
    (VP (MD shall)
      (VP (VB ask)
        (NP (NN papa))
        (S
          (VP (TO to)
            (VP (VB teach)
              (NP (PRP me)))))))
    (. .) ('' '')))

advmod(ask-5, Then-2)
nsubj(ask-5, I-3)
aux(ask-5, shall-4)
root(ROOT-0, ask-5)
dobj(ask-5, papa-6)
nsubj(teach-8, papa-6)
aux(teach-8, to-7)
xcomp(ask-5, teach-8)
dobj(teach-8, me-9)

(ROOT
  (S (CC But)
    (NP (NNP Willie))
    (VP (VBD did) (RB not)
      (VP (VB find)
        (S
          (NP (PRP$ his) (NN papa))
          (ADJP (RB quite) (JJ ready))
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (PRP him))
                (PP (IN in)
                  (NP (NN hand)))))))))
    (. .)))

cc(find-5, But-1)
nsubj(find-5, Willie-2)
aux(find-5, did-3)
neg(find-5, not-4)
root(ROOT-0, find-5)
poss(papa-7, his-6)
nsubj(take-11, papa-7)
advmod(ready-9, quite-8)
dep(take-11, ready-9)
aux(take-11, to-10)
xcomp(find-5, take-11)
dobj(take-11, him-12)
prep_in(take-11, hand-14)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH No))
      (, ,)
      (NP (NNP Willie)))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

discourse(Willie-4, No-2)
dep(said-8, Willie-4)
nsubj(said-8, he-7)
root(ROOT-0, said-8)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD must)
      (VP (VB learn)
        (NP (DT a) (JJ great) (JJ many) (JJ other) (NNS things))
        (SBAR (IN before)
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (PP (IN of)
                  (NP
                    (NP (JJ much) (NN use))
                    (PP (IN for)
                      (NP (PRP me)))))
                (S
                  (VP (TO to)
                    (VP (VB commence)
                      (NP (PRP$ my) (NN part)))))))))))
    (. .)))

nsubj(learn-4, You-2)
aux(learn-4, must-3)
root(ROOT-0, learn-4)
det(things-9, a-5)
amod(things-9, great-6)
amod(things-9, many-7)
amod(things-9, other-8)
dobj(learn-4, things-9)
mark(be-13, before-10)
nsubj(be-13, it-11)
nsubj(commence-20, it-11)
aux(be-13, would-12)
advcl(learn-4, be-13)
amod(use-16, much-15)
prep_of(be-13, use-16)
prep_for(use-16, me-18)
aux(commence-20, to-19)
xcomp(be-13, commence-20)
poss(part-22, my-21)
dobj(commence-20, part-22)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB teach)
          (NP (PRP you))
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP like) (, ,)
                (PP (IN after)
                  (NP (NNS school-hours)))
                (, ,)
                (S
                  (VP (TO to)
                    (VP (VB compound)
                      (NP (JJ certain) (NNS medicines)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (DT the) (JJ important) (NN thing))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB get)
              (PRT (RP on))
              (PP (IN at)
                (NP (NN school))))))))
    (. .)))

nsubj(teach-3, I-1)
aux(teach-3, will-2)
root(ROOT-0, teach-3)
dobj(teach-3, you-4)
mark(like-7, if-5)
nsubj(like-7, you-6)
nsubj(compound-13, you-6)
advcl(teach-3, like-7)
prep_after(like-7, school-hours-10)
aux(compound-13, to-12)
xcomp(like-7, compound-13)
amod(medicines-15, certain-14)
dobj(compound-13, medicines-15)
det(thing-20, the-18)
amod(thing-20, important-19)
nsubj(is-21, thing-20)
nsubj(get-23, thing-20)
conj_but(teach-3, is-21)
aux(get-23, to-22)
xcomp(is-21, get-23)
prt(get-23, on-24)
prep_at(get-23, school-26)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP are)
        (ADJP (RB quite) (JJ old))
        (ADVP (RB enough) (RB now)
          (PP (TO to)
            (NP
              (NP (NN work))
              (PP (IN at)
                (NP (NN home)))))
          (RB too))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN though)
        (S
          (NP (PRP I))
          (VP (VBP do) (RB n't)
            (VP (VB want)
              (S
                (VP (TO to)
                  (VP (VB confine)
                    (NP (PRP you))
                    (PP (TO to)
                      (NP (PRP$ your) (NNS lessons))))))))))
      (, ,)
      (NP (PRP I))
      (VP (MD should)
        (VP (VB like)
          (S
            (NP (PRP you))
            (VP (TO to)
              (VP (VB spend)
                (NP
                  (NP (DT a) (NN couple))
                  (PP (IN of)
                    (NP
                      (NP (NNS hours))
                      (PP (IN at)
                        (NP (PRP them))))))
                (NP (DT every) (NN evening))))))))
    (. .)))

nsubj(old-4, You-1)
cop(old-4, are-2)
advmod(old-4, quite-3)
root(ROOT-0, old-4)
advmod(too-11, enough-5)
advmod(too-11, now-6)
prep_to(too-11, work-8)
prep_at(work-8, home-10)
advmod(old-4, too-11)
mark(want-18, though-14)
nsubj(want-18, I-15)
nsubj(confine-20, I-15)
aux(want-18, do-16)
neg(want-18, n't-17)
advcl(like-28, want-18)
aux(confine-20, to-19)
xcomp(want-18, confine-20)
dobj(confine-20, you-21)
poss(lessons-24, your-23)
prep_to(confine-20, lessons-24)
nsubj(like-28, I-26)
aux(like-28, should-27)
conj_and(old-4, like-28)
dobj(like-28, you-29)
nsubj(spend-31, you-29)
aux(spend-31, to-30)
xcomp(like-28, spend-31)
det(couple-33, a-32)
dobj(spend-31, couple-33)
prep_of(couple-33, hours-35)
prep_at(hours-35, them-37)
det(evening-39, every-38)
tmod(spend-31, evening-39)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB have)
        (NP
          (NP
            (NP (DT the) (NNS remainders))
            (PP (IN of)
              (NP (DT the) (NNS evenings))))
          (, ,)
          (NP
            (NP (PDT all) (DT the) (NNS mornings))
            (PP (IN before)
              (NP (NN breakfast))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (JJR greater) (NNS parts))
            (PP (IN of)
              (NP
                (NP (PRP$ your) (NNS half-holidays))
                (, ,)
                (SBAR
                  (WHPP (IN for)
                    (WHNP (WDT whatever)))
                  (S
                    (NP (PRP you))
                    (VP (VBP like)
                      (S
                        (VP (TO to)
                          (VP (VB do)
                            (PP (IN of)
                              (NP (DT another) (NN sort)))))))))))))))
    (. .) ('' '')))

nsubj(have-3, You-1)
aux(have-3, can-2)
root(ROOT-0, have-3)
det(remainders-5, the-4)
dobj(have-3, remainders-5)
det(evenings-8, the-7)
prep_of(remainders-5, evenings-8)
predet(mornings-12, all-10)
det(mornings-12, the-11)
dobj(have-3, mornings-12)
conj_and(remainders-5, mornings-12)
prep_before(mornings-12, breakfast-14)
det(parts-19, the-17)
amod(parts-19, greater-18)
dobj(have-3, parts-19)
conj_and(remainders-5, parts-19)
poss(half-holidays-22, your-21)
prep_of(parts-19, half-holidays-22)
prep_for(like-27, whatever-25)
nsubj(like-27, you-26)
nsubj(do-29, you-26)
rcmod(half-holidays-22, like-27)
aux(do-29, to-28)
xcomp(like-27, do-29)
det(sort-32, another-31)
prep_of(do-29, sort-32)

(ROOT
  (S
    (NP (NNP Willie))
    (ADVP (RB never))
    (VP (VBD required)
      (NP
        (NP (DT any))
        (VP (VBG urging)
          (PP (TO to)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP$ his) (NN father))
                (VP (VBD wished))))))))
    (. .)))

nsubj(required-3, Willie-1)
neg(required-3, never-2)
root(ROOT-0, required-3)
dobj(required-3, any-4)
vmod(any-4, urging-5)
dobj(wished-10, what-7)
poss(father-9, his-8)
nsubj(wished-10, father-9)
prepc_to(urging-5, wished-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD became)
      (PP (IN at)
        (NP
          (NP (RB once) (JJR more))
          (PP (IN of)
            (NP (DT a) (NN student)))))
      (, ,)
      (PP (IN without)
        (S
          (VP (VBG becoming)
            (NP
              (NP (RB much) (JJR less))
              (PP (IN of)
                (NP (DT a) (NN workman)))
              (PRN (: --)
                (SBAR (IN for)
                  (S
                    (NP (PRP he))
                    (VP (VBD found)
                      (NP
                        (NP (RB plenty))
                        (PP (IN of)
                          (NP (NN time))))
                      (S
                        (VP (TO to)
                          (VP (VB do)
                            (NP
                              (NP (DT all))
                              (SBAR
                                (S
                                  (NP (PRP he))
                                  (VP (VBD wanted))))))))
                      (, ,)
                      (PP (IN by)
                        (S
                          (VP (VBG being)
                            (ADJP (RBR more) (JJ careful)))))))))
              (PP (IN of)
                (NP (PRP$ his) (JJ odd) (NNS moments))))))))
    (. .)))

nsubj(became-2, He-1)
root(ROOT-0, became-2)
advmod(more-5, once-4)
prep_at(became-2, more-5)
det(student-8, a-7)
prep_of(more-5, student-8)
prepc_without(became-2, becoming-11)
advmod(less-13, much-12)
xcomp(becoming-11, less-13)
det(workman-16, a-15)
prep_of(less-13, workman-16)
mark(found-20, for-18)
nsubj(found-20, he-19)
dep(less-13, found-20)
dobj(found-20, plenty-21)
prep_of(plenty-21, time-23)
aux(do-25, to-24)
vmod(found-20, do-25)
dobj(do-25, all-26)
nsubj(wanted-28, he-27)
rcmod(all-26, wanted-28)
cop(careful-33, being-31)
advmod(careful-33, more-32)
prepc_by(found-20, careful-33)
poss(moments-37, his-35)
amod(moments-37, odd-36)
prep_of(less-13, moments-37)

(ROOT
  (S
    (NP
      (NP (CD One) (JJ lovely) (NN evening))
      (PP (IN in)
        (NP (NN spring))))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN sun))
          (VP (VBD had)
            (VP
              (VP (VBN gone)
                (PRT (RP down)))
              (CC and)
              (VP (VBN left)
                (NP
                  (NP
                    (NP (DT the) (NN air))
                    (ADJP (JJ soft) (, ,)
                      (CC and)
                      (JJ balmy) (, ,)))
                  (CC and)
                  (NP
                    (NP (JJ full))
                    (PP (IN of)
                      (NP (DT the) (NNS scents)))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBP rise)
                          (PP (IN from)
                            (NP (DT the) (NN earth)))
                          (PP (IN after)
                            (NP (DT a) (NN shower)))))))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (DT the) (NNS odours))
                    (PP (IN of)
                      (NP (DT the) (NNS buds)))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBD were)
                          (VP (VBG swelling)
                            (CC and)
                            (VBG bursting)
                            (PP (IN in)
                              (NP (DT all) (NNS directions))))))))))))))
      (, ,)
      (NP (NNP Willie))
      (VP (VBD was)
        (VP (VBG standing)
          (S
            (VP (VBG looking)
              (PRT (RP out))
              (PP (IN of)
                (NP (PRP$ his) (JJ open) (NN window)))
              (PP (IN into)
                (NP
                  (NP (DT the) (NN parson) (POS 's))
                  (NN garden)))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (NNP Mr) (NNP Shepherd))
                  (VP
                    (VP (VBD saw)
                      (NP (PRP him)))
                    (CC and)
                    (VP (VBD called)
                      (PP (TO to)
                        (NP (PRP him)))))))
              (: --) (`` ``)
              (PP (VBN Come)
                (PP (IN down)
                  (NP
                    (NP (RB here))
                    (, ,)
                    (NP (NNP Willie))))))))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

num(evening-3, One-1)
amod(evening-3, lovely-2)
nsubj(said-85, evening-3)
prep_in(evening-3, spring-5)
advmod(gone-11, when-7)
det(sun-9, the-8)
nsubj(gone-11, sun-9)
nsubj(left-14, sun-9)
aux(gone-11, had-10)
advcl(standing-53, gone-11)
prt(gone-11, down-12)
conj_and(gone-11, left-14)
advcl(standing-53, left-14)
det(air-16, the-15)
dobj(left-14, air-16)
amod(air-16, soft-17)
amod(air-16, balmy-20)
conj_and(soft-17, balmy-20)
dobj(left-14, full-23)
conj_and(air-16, full-23)
nsubj(rise-28, full-23)
det(scents-26, the-25)
prep_of(full-23, scents-26)
rcmod(full-23, rise-28)
det(earth-31, the-30)
prep_from(rise-28, earth-31)
det(shower-34, a-33)
prep_after(rise-28, shower-34)
det(odours-38, the-37)
dobj(left-14, odours-38)
conj_and(air-16, odours-38)
nsubj(swelling-44, odours-38)
nsubj(bursting-46, odours-38)
det(buds-41, the-40)
prep_of(odours-38, buds-41)
aux(swelling-44, were-43)
rcmod(odours-38, swelling-44)
rcmod(odours-38, bursting-46)
conj_and(swelling-44, bursting-46)
det(directions-49, all-48)
prep_in(swelling-44, directions-49)
nsubj(standing-53, Willie-51)
aux(standing-53, was-52)
ccomp(said-85, standing-53)
vmod(standing-53, looking-54)
poss(window-59, his-57)
amod(window-59, open-58)
prep_out_of(looking-54, window-59)
det(parson-62, the-61)
poss(garden-64, parson-62)
prep_into(looking-54, garden-64)
advmod(saw-69, when-66)
nn(Shepherd-68, Mr-67)
nsubj(saw-69, Shepherd-68)
nsubj(called-72, Shepherd-68)
advcl(looking-54, saw-69)
dobj(saw-69, him-70)
advcl(looking-54, called-72)
conj_and(saw-69, called-72)
prep_to(called-72, him-74)
prep(looking-54, Come-77)
pcomp(Come-77, down-78)
pobj(down-78, here-79)
appos(here-79, Willie-81)
nsubj(said-85, he-84)
root(ROOT-0, said-85)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP
              (NP (DT a) (JJ little) (NN talk))
              (PP (IN with)
                (NP (PRP you))))))))
    (. .) ('' '')))

nsubj(want-3, I-2)
nsubj(have-5, I-2)
root(ROOT-0, want-3)
aux(have-5, to-4)
xcomp(want-3, have-5)
det(talk-8, a-6)
amod(talk-8, little-7)
dobj(have-5, talk-8)
prep_with(talk-8, you-10)

(ROOT
  (S
    (NP (NNP Willie))
    (VP
      (VP (VBD got)
        (PP (IN on)
          (NP (DT the) (NN wall)))
        (PP (IN from)
          (NP
            (NP (DT the) (NN top))
            (PP (IN of)
              (NP (PRP$ his) (NN stair))))))
      (, ,)
      (VP (VBD dropped)
        (PP (IN into)
          (NP
            (NP (DT the) (NN stable-yard))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBN served)
                  (PP
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN parson) (POS 's))
                        (NN pony)))
                    (CONJP (RB as) (RB well))
                    (PP (IN as)
                      (NP
                        (NP (DT the) (NNP Doctor) (POS 's))
                        (CD two) (NNS horses))))))))))
      (, ,)
      (CC and)
      (ADVP (RB thence))
      (VP (VBN passed)
        (PP (IN into)
          (NP
            (NP
              (NP (NNP Mr) (NNP Shepherd) (POS 's))
              (NN garden))
            (, ,)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT the) (CD two))
                (VP (VBD began)
                  (S
                    (VP (TO to)
                      (VP (VB walk)
                        (ADVP (RB up)
                          (CC and)
                          (RB down))
                        (ADVP (RB together))))))))))))
    (. .)))

nsubj(got-2, Willie-1)
nsubj(dropped-13, Willie-1)
nsubj(passed-36, Willie-1)
root(ROOT-0, got-2)
det(wall-5, the-4)
prep_on(got-2, wall-5)
det(top-8, the-7)
prep_from(got-2, top-8)
poss(stair-11, his-10)
prep_of(top-8, stair-11)
conj_and(got-2, dropped-13)
det(stable-yard-16, the-15)
prep_into(dropped-13, stable-yard-16)
nsubj(served-19, stable-yard-16)
nsubj(served-19', stable-yard-16)
rcmod(stable-yard-16, served-19)
rcmod(stable-yard-16, served-19')
conj_and(served-19, served-19')
det(parson-22, the-21)
poss(pony-24, parson-22)
prep_for(served-19, pony-24)
det(Doctor-29, the-28)
poss(horses-32, Doctor-29)
num(horses-32, two-31)
prep_as(served-19', horses-32)
advmod(passed-36, thence-35)
conj_and(got-2, passed-36)
nn(Shepherd-39, Mr-38)
poss(garden-41, Shepherd-39)
prep_into(passed-36, garden-41)
advmod(began-46, where-43)
det(two-45, the-44)
nsubj(began-46, two-45)
nsubj(walk-48, two-45)
rcmod(garden-41, began-46)
aux(walk-48, to-47)
xcomp(began-46, walk-48)
advmod(walk-48, up-49)
advmod(walk-48, down-51)
conj_and(up-49, down-51)
advmod(walk-48, together-52)

(ROOT
  (S
    (NP (DT The) (NN year))
    (VP (VBD was)
      (VP
        (PP (IN like)
          (NP (DT a) (NN child)))
        (VBG waking)
        (PRT (RP up))
        (PP (IN from)
          (NP
            (NP (DT a) (NN sleep))
            (SBAR
              (WHPP (IN into)
                (WHNP (WDT which)))
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN fallen)
                    (S
                      (VP (VBG crying)))))))))))
    (. .)))

det(year-2, The-1)
nsubj(waking-7, year-2)
aux(waking-7, was-3)
det(child-6, a-5)
prep_like(waking-7, child-6)
root(ROOT-0, waking-7)
prt(waking-7, up-8)
det(sleep-11, a-10)
prep_from(waking-7, sleep-11)
prep_into(fallen-16, sleep-11)
nsubj(fallen-16, he-14)
aux(fallen-16, had-15)
rcmod(sleep-11, fallen-16)
xcomp(fallen-16, crying-17)

(ROOT
  (S
    (NP (PRP$ Its) (NN life))
    (VP (VBD was)
      (VP (VBG returning)
        (PP (TO to)
          (NP
            (NP (PRP it))
            (, ,)
            (ADJP (JJ fresh)
              (CC and)
              (JJ new))))))
    (. .)))

poss(life-2, Its-1)
nsubj(returning-4, life-2)
aux(returning-4, was-3)
root(ROOT-0, returning-4)
prep_to(returning-4, it-6)
amod(it-6, fresh-8)
amod(it-6, new-10)
conj_and(fresh-8, new-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (SBAR (RB as) (IN if)
        (S
          (NP (NNP God))
          (VP (VBD were)
            (ADVP (RB again))
            (VP (VBG drawing)
              (NP (NN nigh))
              (PP (TO to)
                (NP (PRP$ His) (NN world))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(drawing-8, as-3)
mark(drawing-8, if-4)
nsubj(drawing-8, God-5)
aux(drawing-8, were-6)
advmod(drawing-8, again-7)
advcl(was-2, drawing-8)
dobj(drawing-8, nigh-9)
poss(world-12, His-11)
prep_to(drawing-8, world-12)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (PDT All) (DT the) (NN winter))
          (PP (IN through)
            (NP (PRP He))))
        (VP (VBD had)
          (ADVP (RB never))
          (VP (VBN left)
            (NP (PRP it))
            (PRN (, ,)
              (SBAR (RB only)
                (S
                  (VP (VBD had))))
              (, ,))
            (SBAR (IN as)
              (S
                (NP (PRP it))
                (VP
                  (VP (VBD were))
                  (, ,)
                  (VP (VBN been)
                    (VP (VBG rolling)
                      (NP (PRP it))
                      (PP (IN along)
                        (NP (DT the) (NN path)))))
                  (PP (IN before)
                    (NP (PRP Him)))))))))
      (: ;)
      (CC but)
      (S
        (NP (RB now))
        (VP
          (VP (VBD had)
            (VP (VBN taken)
              (NP (PRP it))
              (PRT (RP up))
              (PP (IN in)
                (NP (PRP$ His) (NN hand)))))
          (, ,)
          (CC and)
          (VP (VBD was)
            (VP (VBG carrying)
              (NP (PRP it))
              (PP (IN for)
                (NP (DT a) (NN while)))))))
      (: ;)
      (CC and)
      (S
        (NP (DT that))
        (VP (VBD was)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP$ its) (NNS birds))
              (VP (VBD were)
                (VP (VBG singing)
                  (ADJP (RB so) (JJ sweetly)))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP$ its) (NNS buds))
        (VP (VBD were)
          (VP (VBG coming)
            (ADVP (RB so))
            (PP
              (ADVP (RB blithely))
              (IN out) (IN of)
              (NP (NNS doors))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NN wind))
          (VP (VBD blew)
            (ADJP (RB so) (JJ soft))))
        (, ,)
        (CC and)
        (S
          (S
            (NP (DT the) (NN rain))
            (VP (VBD fell)
              (ADJP (RB so) (JJ repentantly))))
          (, ,)
          (CC and)
          (S
            (NP (DT the) (NN earth))
            (VP (VBD sent)
              (PRT (RP up))
              (NP (PDT such) (DT a) (JJ gracious) (NN odour)))))))
    (. .)))

predet(winter-3, All-1)
det(winter-3, the-2)
nsubj(left-8, winter-3)
prep_through(winter-3, He-5)
aux(left-8, had-6)
neg(left-8, never-7)
root(ROOT-0, left-8)
dobj(left-8, it-9)
advmod(had-12, only-11)
parataxis(left-8, had-12)
mark(were-16, as-14)
nsubj(were-16, it-15)
advcl(left-8, were-16)
aux(rolling-19, been-18)
dep(were-16, rolling-19)
dobj(rolling-19, it-20)
det(path-23, the-22)
prep_along(rolling-19, path-23)
prep_before(were-16, Him-25)
nsubj(taken-30, now-28)
nsubj(carrying-39, now-28)
aux(taken-30, had-29)
conj_but(left-8, taken-30)
dobj(taken-30, it-31)
prt(taken-30, up-32)
poss(hand-35, His-34)
prep_in(taken-30, hand-35)
aux(carrying-39, was-38)
conj_but(left-8, carrying-39)
conj_and(taken-30, carrying-39)
dobj(carrying-39, it-40)
det(while-43, a-42)
prep_for(carrying-39, while-43)
nsubj(was-47, that-46)
conj_and(left-8, was-47)
advmod(singing-52, how-48)
poss(birds-50, its-49)
nsubj(singing-52, birds-50)
aux(singing-52, were-51)
ccomp(was-47, singing-52)
advmod(sweetly-54, so-53)
acomp(singing-52, sweetly-54)
poss(buds-58, its-57)
nsubj(coming-60, buds-58)
aux(coming-60, were-59)
conj_and(left-8, coming-60)
advmod(coming-60, so-61)
advmod(coming-60, blithely-62)
prep_out_of(coming-60, doors-65)
det(wind-69, the-68)
nsubj(blew-70, wind-69)
conj_and(left-8, blew-70)
conj_and(coming-60, blew-70)
advmod(soft-72, so-71)
acomp(blew-70, soft-72)
det(rain-76, the-75)
nsubj(fell-77, rain-76)
conj_and(coming-60, fell-77)
conj_and(blew-70, fell-77)
advmod(repentantly-79, so-78)
acomp(fell-77, repentantly-79)
det(earth-83, the-82)
nsubj(sent-84, earth-83)
conj_and(blew-70, sent-84)
conj_and(fell-77, sent-84)
prt(sent-84, up-85)
predet(odour-89, such-86)
det(odour-89, a-87)
amod(odour-89, gracious-88)
dobj(sent-84, odour-89)

(ROOT
  (S (`` ``)
    (S
      (NP (DT The) (NN year))
      (VP (VBZ is)
        (VP (VBG coming)
          (PP (TO to)
            (NP (PRP itself)))
          (ADVP (RB again))
          (, ,)
          (S
            (NP (NNP Willie))
            (: --)
            (VP (VBG growing)
              (ADJP (JJ busy))
              (ADVP (RB once) (RBR more)))))))
    (, ,) ('' '')
    (NP (NNP Mr) (NNP Shepherd))
    (VP (VBD said))
    (. .)))

det(year-3, The-2)
nsubj(coming-5, year-3)
aux(coming-5, is-4)
ccomp(said-20, coming-5)
prep_to(coming-5, itself-7)
advmod(coming-5, again-8)
nsubj(growing-12, Willie-10)
vmod(coming-5, growing-12)
acomp(growing-12, busy-13)
advmod(more-15, once-14)
advmod(growing-12, more-15)
nn(Shepherd-19, Mr-18)
nsubj(said-20, Shepherd-19)
root(ROOT-0, said-20)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH Yes)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (. .)))

dep(answered-5, Yes-2)
root(ROOT-0, answered-5)
nsubj(answered-5, Willie-6)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP
      (VP (VBZ 's)
        (VP (VBN been)
          (ADJP
            (ADVP (DT all)
              (CC but))
            (JJ dead))))
      (, ,)
      (CC and)
      (VP (VBZ has)
        (VP (VBN come)
          (PP (TO to)
            (NP (NN life)))
          (ADVP (RB again)))))
    (. .)))

nsubjpass(dead-7, It-2)
nsubjpass(come-11, It-2)
auxpass(dead-7, 's-3)
cop(dead-7, been-4)
mwe(but-6, all-5)
advmod(dead-7, but-6)
root(ROOT-0, dead-7)
aux(come-11, has-10)
conj_and(dead-7, come-11)
prep_to(come-11, life-13)
advmod(come-11, again-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD must)
      (VP (VB have)
        (VP (VBN had)
          (NP (DT the) (NN doctor))
          (PP (TO to)
            (NP (PRP it))))))
    (. .) ('' '')))

nsubj(had-4, It-1)
aux(had-4, must-2)
aux(had-4, have-3)
root(ROOT-0, had-4)
det(doctor-6, the-5)
dobj(had-4, doctor-6)
prep_to(had-4, it-8)

(ROOT
  (S (`` ``)
    (VP (VB Eh))
    (. ?)))

root(ROOT-0, Eh-2)

(ROOT
  (NP
    (NP (WP What) (NN doctor))
    (, ,)
    (NP (NNP Willie))
    (. ?) ('' '')))

det(doctor-2, What-1)
root(ROOT-0, doctor-2)
appos(doctor-2, Willie-4)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (CC but)
      (NP
        (NP (CD One))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD could)
              (VP (VB be)
                (NP
                  (NP (NN doctor))
                  (PP (TO to)
                    (NP (DT this) (JJ big) (NN world))))))))))
    (. .) ('' '')))

discourse(know-5, Well-2)
nsubj(know-5, you-4)
ccomp(is-8, know-5)
expl(is-8, there-7)
root(ROOT-0, is-8)
conj_but(is-8, One-10)
nsubj(is-8, One-10)
nsubj(doctor-14, One-10)
aux(doctor-14, could-12)
cop(doctor-14, be-13)
rcmod(One-10, doctor-14)
det(world-18, this-16)
amod(world-18, big-17)
prep_to(doctor-14, world-18)

(ROOT
  (S (`` ``)
    (FRAG
      (INTJ (UH Yes))
      (, ,)
      (ADVP (RB surely)))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Mr) (NNP Shepherd))
    (. .)))

discourse(surely-4, Yes-2)
dep(returned-7, surely-4)
root(ROOT-0, returned-7)
nn(Shepherd-9, Mr-8)
dep(returned-7, Shepherd-9)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (DT that))
    (VP (VBZ brings)
      (NP (PRP me))
      (PP (TO to)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBD wanted)
              (S
                (VP (TO to)
                  (VP (VB talk)
                    (PP (TO to)
                      (NP (PRP you)))
                    (PP (IN about))))))))))
    (. .)))

cc(brings-4, And-2)
nsubj(brings-4, that-3)
root(ROOT-0, brings-4)
dobj(brings-4, me-5)
dobj(wanted-9, what-7)
nsubj(talk-11, what-7)
nsubj(wanted-9, I-8)
prepc_to(brings-4, wanted-9)
aux(talk-11, to-10)
xcomp(wanted-9, talk-11)
prep_to(talk-11, you-13)
prep(talk-11, about-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hear)
      (SBAR
        (S
          (NP (PRP$ your) (NN father))
          (VP (VBZ means)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP
                    (NP (DT a) (NN doctor))
                    (PP (IN of)
                      (NP (PRP you)))))))))))
    (. .) ('' '')))

nsubj(hear-2, I-1)
root(ROOT-0, hear-2)
poss(father-4, your-3)
nsubj(means-5, father-4)
nsubj(make-7, father-4)
ccomp(hear-2, means-5)
aux(make-7, to-6)
xcomp(means-5, make-7)
det(doctor-9, a-8)
dobj(make-7, doctor-9)
prep_of(doctor-9, you-11)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))

root(ROOT-0, Yes-2)

(ROOT
  (SQ (VBZ Is) (RB n't)
    (NP (PRP it))
    (ADJP (JJ good)
      (PP (IN of)
        (NP (PRP him))))
    (. ?) ('' '')))

cop(good-4, Is-1)
neg(good-4, n't-2)
nsubj(good-4, it-3)
root(ROOT-0, good-4)
prep_of(good-4, him-6)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP you))
    (VP (MD would)
      (VP (VB like)
        (NP (PRP it))))
    (. ?) ('' '')))

advmod(like-5, Then-2)
nsubj(like-5, you-3)
aux(like-5, would-4)
root(ROOT-0, like-5)
dobj(like-5, it-6)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Yes))
      (, ;)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD should)))))
    (. !) ('' '')))

root(ROOT-0, Yes-2)
mark(should-6, that-4)
nsubj(should-6, I-5)
dep(Yes-2, should-6)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB like)
        (NP (PRP it))))
    (. ?) ('' '')))

advmod(like-5, Why-2)
aux(like-5, would-3)
nsubj(like-5, you-4)
root(ROOT-0, like-5)
dobj(like-5, it-6)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP I))
        (VP (VBZ _))))
    (VP (MD must)
      (ADVP (RB _))
      (VP (VB have)
        (NP
          (NP (DT a) (NN hand))
          (PP (IN in)
            (NP (DT the) (JJ general) (NN business))))))
    (. .) ('' '')))

mark(_-4, Because-2)
nsubj(_-4, I-3)
csubj(have-7, _-4)
aux(have-7, must-5)
advmod(have-7, _-6)
root(ROOT-0, have-7)
det(hand-9, a-8)
dobj(have-7, hand-9)
det(business-13, the-11)
amod(business-13, general-12)
prep_in(hand-9, business-13)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB mean)
        (PP (IN by)
          (NP (DT that)))))
    (. ?) ('' '')))

dobj(mean-5, What-2)
aux(mean-5, do-3)
nsubj(mean-5, you-4)
root(ROOT-0, mean-5)
prep_by(mean-5, that-7)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD set)
      (PRT (RP forth))
      (NP
        (NP
          (NP (NNP Hector) (NNP Macallaster) (POS 's))
          (NN way))
        (PP (IN of)
          (S
            (VP (VBG thinking)
              (PP (IN about)
                (NP (JJ such) (NNS matters))))))))
    (. .)))

nsubj(set-2, Willie-1)
root(ROOT-0, set-2)
prt(set-2, forth-3)
nn(Macallaster-5, Hector-4)
poss(way-7, Macallaster-5)
dobj(set-2, way-7)
prepc_of(way-7, thinking-9)
amod(matters-12, such-11)
prep_about(thinking-9, matters-12)

(ROOT
  (S (`` ``)
    (VP (VB Very)
      (ADJP
        (ADJP (JJ good))
        (: --)
        (ADJP (RB very) (JJ good))
        (ADVP (RB indeed))))
    (. !) ('' '')))

root(ROOT-0, Very-2)
acomp(Very-2, good-3)
advmod(good-6, very-5)
dep(good-3, good-6)
advmod(good-3, indeed-7)

(ROOT
  (NP (NNP remarked) (NNP Mr) (NNP Shepherd) (. .)))

nn(Shepherd-3, remarked-1)
nn(Shepherd-3, Mr-2)
root(ROOT-0, Shepherd-3)

(ROOT
  (S (`` ``)
    (CC But)
    (ADVP (RB why))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (VP (MD should)
      (NP (PRP you))
      (S
        (VP (VB prefer)
          (S
            (VP (VBG being)
              (NP
                (NP (DT a) (NN doctor))
                (PP (TO to)
                  (S
                    (VP (VBG being)
                      (NP (DT a) (NN shoemaker)))))))))))
    (. ?)))

cc(should-7, But-2)
advmod(should-7, why-3)
advmod(should-7, then-5)
root(ROOT-0, should-7)
dobj(should-7, you-8)
dep(should-7, prefer-9)
cop(doctor-12, being-10)
det(doctor-12, a-11)
xcomp(prefer-9, doctor-12)
cop(shoemaker-16, being-14)
det(shoemaker-16, a-15)
prepc_to(doctor-12, shoemaker-16)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (SBAR (IN because)
      (S
        (NP (PRP you))
        (VP (MD will)
          (VP (VB get)
            (NP
              (NP (JJR better))
              (VP (VBN paid)
                (PP (IN for)
                  (NP (PRP it)))))))))
    (. ?) ('' '')))

root(ROOT-0, Is-1)
nsubj(Is-1, it-2)
mark(get-6, because-3)
nsubj(get-6, you-4)
aux(get-6, will-5)
dep(Is-1, get-6)
dobj(get-6, better-7)
vmod(better-7, paid-8)
prep_for(paid-8, it-10)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD thought)
        (PP (IN of)
          (NP (DT that)))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Willie))
    (. .)))

nsubj(thought-4, I-2)
neg(thought-4, never-3)
ccomp(returned-9, thought-4)
prep_of(thought-4, that-6)
root(ROOT-0, returned-9)
nsubj(returned-9, Willie-10)

(ROOT
  (S (`` ``)
    (PP (IN Of)
      (NP (NN course)))
    (PRN
      (S
        (NP (PRP I))
        (VP (MD should)
          (VP (VB be)
            (ADJP (RBR better) (VBN paid))
            (: --)
            (SBAR (IN for)
              (S
                (NP (NNP Hector))
                (VP (MD could) (RB n't)
                  (VP (VB keep)
                    (NP
                      (NP (DT a) (NN horse))
                      (, ,)
                      (CC and)
                      (NP
                        (NP (DT a) (NN horse))
                        (SBAR
                          (S
                            (NP (PRP I))
                            (VP (MD must)
                              (VP (VB have))))))))))))))
      (, ,))
    (NP
      (NP (RB else) (DT some))
      (PP (IN of)
        (NP (PRP$ my) (NNS patients))))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ dead))
        (SBAR (IN before)
          (S
            (NP (PRP I))
            (VP (MD could)
              (VP (VB get)
                (PP (TO to)
                  (NP (PRP them)))))))))
    (. .)))

prep_of(dead-32, course-3)
nsubjpass(paid-8, I-4)
aux(paid-8, should-5)
auxpass(paid-8, be-6)
advmod(paid-8, better-7)
parataxis(dead-32, paid-8)
mark(keep-14, for-10)
nsubj(keep-14, Hector-11)
aux(keep-14, could-12)
neg(keep-14, n't-13)
advcl(paid-8, keep-14)
parataxis(paid-8, keep-14)
det(horse-16, a-15)
dobj(keep-14, horse-16)
det(horse-20, a-19)
dobj(keep-14, horse-20)
conj_and(horse-16, horse-20)
nsubj(have-23, I-21)
aux(have-23, must-22)
rcmod(horse-20, have-23)
advmod(some-26, else-25)
nsubj(dead-32, some-26)
poss(patients-29, my-28)
prep_of(some-26, patients-29)
aux(dead-32, would-30)
cop(dead-32, be-31)
root(ROOT-0, dead-32)
mark(get-36, before-33)
nsubj(get-36, I-34)
aux(get-36, could-35)
advcl(dead-32, get-36)
prep_to(get-36, them-38)

(ROOT
  (S (CC But)
    (NP (DT that))
    (VP (VBZ 's) (RB not)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP I))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP (DT a) (NN doctor)))))))))
    (. .)))

cc('s-3, But-1)
nsubj('s-3, that-2)
root(ROOT-0, 's-3)
neg('s-3, not-4)
advmod(want-7, why-5)
nsubj(want-7, I-6)
nsubj(doctor-11, I-6)
advcl('s-3, want-7)
aux(doctor-11, to-8)
cop(doctor-11, be-9)
det(doctor-11, a-10)
xcomp(want-7, doctor-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB help)
                  (NP (NNS people)))))))))
    (. .) ('' '')))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
mark(want-5, because-3)
nsubj(want-5, I-4)
nsubj(help-7, I-4)
advcl('s-2, want-5)
aux(help-7, to-6)
xcomp(want-5, help-7)
dobj(help-7, people-8)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP want)
              (S
                (VP (TO to)
                  (VP (VB help)
                    (NP (NNS people))))))))))
    (. ?) ('' '')))

nsubj(makes-3, What-2)
root(ROOT-0, makes-3)
nsubj(want-5, you-4)
nsubj(help-7, you-4)
ccomp(makes-3, want-5)
aux(help-7, to-6)
xcomp(want-5, help-7)
dobj(help-7, people-8)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP (DT the) (JJS best) (NN thing)))))
    (NP (PRP you))
    (VP (MD can)
      (VP (VB do)
        (PP (IN with)
          (NP (PRP yourself)))))
    (. .) ('' '')))

mark(thing-7, Because-2)
nsubj(thing-7, it-3)
cop(thing-7, 's-4)
det(thing-7, the-5)
amod(thing-7, best-6)
advcl(do-10, thing-7)
nsubj(do-10, you-8)
aux(do-10, can-9)
root(ROOT-0, do-10)
prep_with(do-10, yourself-12)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ
      (VP (VBD told)
        (S
          (NP (PRP you))
          (NP (DT that)))))
    (. ?) ('' '')))

nsubj(told-3, Who-2)
root(ROOT-0, told-3)
nsubj(that-5, you-4)
xcomp(told-3, that-5)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (SBAR (RB as) (IN if)
        (S
          (NP (NN everybody)
            (CC and)
            (NN everything))
          (VP (VBD had)
            (VP (VBN been)
              (VP (VBG teaching)
                (S
                  (NP (PRP me))
                  (NP (DT that))))))))
      (, ,)
      (SBAR (RB ever) (IN since)
        (S
          (NP (PRP I))
          (VP (MD can)
            (VP (VB remember))))))
    (. .) ('' '')))

nsubj(seems-2, It-1)
root(ROOT-0, seems-2)
advmod(teaching-10, as-3)
mark(teaching-10, if-4)
nsubj(teaching-10, everybody-5)
conj_and(everybody-5, everything-7)
nsubj(teaching-10, everything-7)
aux(teaching-10, had-8)
aux(teaching-10, been-9)
advcl(seems-2, teaching-10)
nsubj(that-12, me-11)
xcomp(teaching-10, that-12)
advmod(remember-18, ever-14)
mark(remember-18, since-15)
nsubj(remember-18, I-16)
aux(remember-18, can-17)
advcl(seems-2, remember-18)

(ROOT
  (S (`` ``)
    (INTJ (UH Well))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT no) (NN wonder))
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD should)
              (VP (VB seem)
                (SBAR (RB as) (IN if)
                  (S
                    (NP (NN everything))
                    (VP (VBD taught)
                      (S
                        (NP (PRP you))
                        (NP (DT that)))
                      (, ,)
                      (S
                        (VP (VBG seeing)
                          (SBAR
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBZ is)
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (NP (NNP God))
                                      (VP (VBZ is)
                                        (ADVP (RB always))
                                        (VP (VBG doing))))))))
                            (: --)
                            (CC and)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (NNP Jesus))
                                (VP (VBD taught)
                                  (NP (PRP us))
                                  (PP (IN as)
                                    (NP
                                      (NP (DT the) (NN law))
                                      (PP (IN of)
                                        (NP (PRP$ His) (NN kingdom)))
                                      (PRN (: --)
                                        (SBAR
                                          (WHNP (WDT which))
                                          (S
                                            (VP (VBZ is)
                                              (NP (DT the) (RB only) (JJ real) (NN kingdom)))))
                                        (: --))))
                                  (PRN
                                    (ADVP (RB namely))
                                    (, ,)
                                    (SBAR (IN that)
                                      (S
                                        (NP
                                          (NP (DT the) (JJS greatest) (NN man))
                                          (PP (IN in)
                                            (NP (PRP it))))
                                        (VP (VBZ is)
                                          (NP
                                            (NP (PRP he))
                                            (SBAR
                                              (WHNP (WP who))
                                              (S
                                                (VP (VBZ gives)
                                                  (NP (PRP himself))
                                                  (NP (DT the) (JJS most))))))))))
                                  (S
                                    (VP (TO to)
                                      (VP (VB help)
                                        (NP (JJ other) (NNS people))))))))))))))))))))
    (. .)))

discourse(wonder-7, Well-2)
nsubj(wonder-7, it-4)
cop(wonder-7, 's-5)
neg(wonder-7, no-6)
root(ROOT-0, wonder-7)
xcomp(taught-14, wonder-7)
nsubj(seem-10, it-8)
aux(seem-10, should-9)
rcmod(wonder-7, seem-10)
advmod(taught-14, as-11)
mark(taught-14, if-12)
nsubj(taught-14, everything-13)
advcl(seem-10, taught-14)
nsubj(that-16, you-15)
xcomp(taught-14, seeing-18)
nsubj(is-20, that-19)
dep(seeing-18, is-20)
dobj(doing-25, what-21)
nsubj(doing-25, God-22)
aux(doing-25, is-23)
advmod(doing-25, always-24)
ccomp(is-20, doing-25)
dobj(taught-30, what-28)
nsubj(taught-30, Jesus-29)
dep(seeing-18, taught-30)
conj_and(is-20, taught-30)
dobj(taught-30, us-31)
det(law-34, the-33)
prep_as(taught-30, law-34)
poss(kingdom-37, His-36)
prep_of(law-34, kingdom-37)
nsubj(kingdom-44, which-39)
cop(kingdom-44, is-40)
det(kingdom-44, the-41)
advmod(kingdom-44, only-42)
amod(kingdom-44, real-43)
dep(law-34, kingdom-44)
dep(he-55, namely-46)
mark(he-55, that-48)
det(man-51, the-49)
amod(man-51, greatest-50)
nsubj(he-55, man-51)
prep_in(man-51, it-53)
cop(he-55, is-54)
parataxis(taught-30, he-55)
nsubj(gives-57, he-55)
rcmod(he-55, gives-57)
iobj(gives-57, himself-58)
det(most-60, the-59)
dobj(gives-57, most-60)
aux(help-62, to-61)
vmod(taught-30, help-62)
amod(people-64, other-63)
dobj(help-62, people-64)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (SBAR (IN because)
        (S
          (NP (NNP Jesus) (NNP Himself))
          (VP (VBD did)
            (ADJP (RB so))
            (PRN (: --)
              (S
                (VP (VBG giving)
                  (S
                    (NP (PRP Himself))
                    (ADJP (IN up) (RB utterly)))))
              (: --))
            (SBAR (IN that)
              (S
                (NP (NNP God))
                (VP (VBZ has)
                  (ADVP (RB so)
                    (ADJP (RB highly) (JJ exalted)))
                  (VP (VBN Him)
                    (CC and)
                    (VBN given)
                    (NP (PRP Him))
                    (NP (DT a) (NN name))
                    (PP (IN above)
                      (NP (DT every) (NN name)))))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
mark(so-7, because-3)
nn(Himself-5, Jesus-4)
nsubj(so-7, Himself-5)
dep(so-7, did-6)
advcl(was-2, so-7)
parataxis(so-7, giving-9)
nsubj(utterly-12, Himself-10)
dep(utterly-12, up-11)
xcomp(giving-9, utterly-12)
mark(Him-20, that-14)
nsubj(Him-20, God-15)
nsubj(given-22, God-15)
aux(Him-20, has-16)
advmod(Him-20, so-17)
advmod(exalted-19, highly-18)
pobj(so-17, exalted-19)
ccomp(so-7, Him-20)
ccomp(so-7, given-22)
conj_and(Him-20, given-22)
iobj(Him-20, Him-23)
det(name-25, a-24)
dobj(Him-20, name-25)
det(name-28, every-27)
prep_above(Him-20, name-28)

(ROOT
  (S (CC And)
    (, ,)
    (ADVP (RB indeed))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (NP (DT a) (JJ good) (NN doctor)))))
    (, ,)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB be)
        (VP (VBG doing)
          (NP
            (NP (NN something))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (NNP Jesus))
                  (VP (VBD did)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP He))
                        (VP (VBD was)
                          (PP (IN in)
                            (NP (DT the) (NN world))))))))))))))
    (. .) ('' '')))

cc(doing-15, And-1)
advmod(doing-15, indeed-3)
mark(doctor-10, if-5)
nsubj(doctor-10, you-6)
cop(doctor-10, are-7)
det(doctor-10, a-8)
amod(doctor-10, good-9)
advcl(doing-15, doctor-10)
nsubj(doing-15, you-12)
aux(doing-15, will-13)
aux(doing-15, be-14)
root(ROOT-0, doing-15)
dobj(doing-15, something-16)
dobj(did-20, what-18)
nsubj(did-20, Jesus-19)
prepc_of(something-16, did-20)
advmod(was-23, when-21)
nsubj(was-23, He-22)
advcl(did-20, was-23)
det(world-26, the-25)
prep_in(was-23, world-26)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH Yes)))
    (: ;)
    (S (CC but)
      (NP (PRP He))
      (VP (VBD did) (RB n't)
        (VP (VB give)
          (NP (NNS people))
          (NP (NN medicine)
            (S
              (VP (TO to)
                (VP (VB cure)
                  (NP (PRP them)))))))))
    (. .) ('' '')))

dep(give-8, Yes-2)
cc(give-8, but-4)
nsubj(give-8, He-5)
aux(give-8, did-6)
neg(give-8, n't-7)
root(ROOT-0, give-8)
iobj(give-8, people-9)
dobj(give-8, medicine-10)
aux(cure-12, to-11)
vmod(medicine-10, cure-12)
dobj(cure-12, them-13)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (NP (DT that))
      (VP (VBD was) (RB n't)
        (ADJP (JJ necessary))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP He))
            (VP (VBD was)
              (VP (VBG Himself)
                (NP (DT the) (NN cure))))))))
    (. .)))

dep(necessary-7, No-2)
nsubj(necessary-7, that-4)
cop(necessary-7, was-5)
neg(necessary-7, n't-6)
root(ROOT-0, necessary-7)
mark(Himself-12, because-9)
nsubj(Himself-12, He-10)
aux(Himself-12, was-11)
advcl(necessary-7, Himself-12)
det(cure-14, the-13)
dobj(Himself-12, cure-14)

(ROOT
  (S (CC But)
    (SBAR
      (SBAR
        (ADVP (RB now))
        (IN that)
        (S
          (NP (PRP He))
          (VP (VBZ is) (RB not)
            (ADJP (JJ present)
              (PP (IN with)
                (NP (PRP$ His) (JJ bodily) (NN presence)))))))
      (: --)
      (PRN
        (FRAG
          (ADVP (RB now)))))
    (, ,)
    (S
      (NP
        (NP (NN medicine)
          (CC and)
          (NN advice))
        (CC and)
        (NP (JJ other) (JJ good) (NNS things)))
      (VP (VBP are)
        (ADVP (RB just))
        (NP
          (NP (DT the) (NNS packets))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (PRP He))
              (VP (VBZ wraps)
                (PRT (RP up))
                (NP
                  (NP (DT the) (NN healing))
                  (SBAR
                    (S
                      (NP (PRP He))
                      (VP (VBZ sends)))))))))))
    (: ;)
    (CC and)
    (S
      (NP (DT the) (NN wisest) (NN doctor))
      (VP (VBZ is)
        (CC but)
        (NP
          (NP (DT the) (NN messenger))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ carries)
                (PP (TO to)
                  (NP
                    (NP (DT the) (JJ sick)
                      (QP (RB as) (JJ much)))
                    (PP (IN of)
                      (NP (NN healing)
                        (CC and)
                        (NN help)))))
                (SBAR (IN as)
                  (S
                    (NP (DT the) (NNP Great) (NNP Doctor))
                    (VP (VBZ sees)
                      (ADJP (JJ fit)
                        (S
                          (VP (TO to)
                            (VP (VB send))))))))))))))
    (. .)))

advmod(present-7, now-2)
mark(present-7, that-3)
nsubj(present-7, He-4)
cop(present-7, is-5)
neg(present-7, not-6)
dep(packets-25, present-7)
poss(presence-11, His-9)
amod(presence-11, bodily-10)
prep_with(present-7, presence-11)
dep(present-7, now-13)
nsubj(packets-25, medicine-15)
conj_and(medicine-15, advice-17)
nsubj(packets-25, advice-17)
amod(things-21, other-19)
amod(things-21, good-20)
conj_and(medicine-15, things-21)
nsubj(packets-25, things-21)
cop(packets-25, are-22)
advmod(packets-25, just-23)
det(packets-25, the-24)
root(ROOT-0, packets-25)
prep_in(wraps-29, packets-25)
nsubj(wraps-29, He-28)
rcmod(packets-25, wraps-29)
prt(wraps-29, up-30)
det(healing-32, the-31)
dobj(wraps-29, healing-32)
nsubj(sends-34, He-33)
rcmod(healing-32, sends-34)
det(doctor-39, the-37)
nn(doctor-39, wisest-38)
nsubj(is-40, doctor-39)
conj_and(packets-25, is-40)
prep_in(wraps-29, is-40)
det(messenger-43, the-42)
conj_and(packets-25, messenger-43)
conj_but(is-40, messenger-43)
xcomp(is-40, messenger-43)
nsubj(carries-45, messenger-43)
rcmod(messenger-43, carries-45)
det(much-50, the-47)
amod(much-50, sick-48)
quantmod(much-50, as-49)
prep_to(carries-45, much-50)
prep_of(much-50, healing-52)
prep_of(much-50, help-54)
conj_and(healing-52, help-54)
mark(sees-59, as-55)
det(Doctor-58, the-56)
nn(Doctor-58, Great-57)
nsubj(sees-59, Doctor-58)
advcl(carries-45, sees-59)
acomp(sees-59, fit-60)
aux(send-62, to-61)
xcomp(fit-60, send-62)

(ROOT
  (S (IN For)
    (NP (PRP He))
    (VP (VBZ is)
      (ADJP (RB so) (JJ anxious))
      (S
        (VP (TO to)
          (VP (VB cure)
            (ADVP (RB thoroughly))
            (SBAR (IN that)
              (S
                (PP (IN in)
                  (NP (JJ many) (NNS cases)))
                (NP (PRP He))
                (VP (MD will) (RB not)
                  (VP (VB cure)
                    (ADVP (DT all) (IN at) (RB once))))))))))
    (. .) ('' '')))

dep(anxious-5, For-1)
nsubj(anxious-5, He-2)
nsubj(cure-7, He-2)
cop(anxious-5, is-3)
advmod(anxious-5, so-4)
root(ROOT-0, anxious-5)
aux(cure-7, to-6)
xcomp(anxious-5, cure-7)
advmod(cure-7, thoroughly-8)
mark(cure-16, that-9)
amod(cases-12, many-11)
prep_in(cure-16, cases-12)
nsubj(cure-16, He-13)
aux(cure-16, will-14)
neg(cure-16, not-15)
ccomp(cure-7, cure-16)
pobj(at-18, all-17)
advmod(cure-16, at-18)
advmod(at-18, once-19)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB How))
      (S
        (NP (PRP I))
        (VP (VBZ _))))
    (VP (MD should)
      (ADVP (RB _))
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (PRP$ His) (NN healing))
              (PP (IN about)))))))
    (. !) ('' '')))

advmod(_-4, How-2)
nsubj(_-4, I-3)
csubj(like-7, _-4)
aux(like-7, should-5)
advmod(like-7, _-6)
root(ROOT-0, like-7)
aux(take-9, to-8)
xcomp(like-7, take-9)
poss(healing-11, His-10)
dobj(take-9, healing-11)
prep(take-9, about-12)

(ROOT
  (SINV
    (VP (VBD cried))
    (NP (NNP Willie))
    (: --) (`` ``)
    (S
      (SBAR (RB just) (IN as)
        (S
          (NP
            (NP (DT the) (NNS doctors) (POS '))
            (NNS boys))
          (VP (VBP take)
            (NP (DT the) (NNS medicines))
            (PP (IN about)
              (PP (IN in)
                (NP (NNS baskets)))))))
      (: :)
      (NP (NN grannie))
      (VP (VBZ tells)
        (NP (PRP me))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP do)
              (PP (IN in)
                (NP (DT the) (JJ big) (NNS towns))))))))
    (. .)))

root(ROOT-0, cried-1)
nsubj(cried-1, Willie-2)
advmod(take-11, just-5)
mark(take-11, as-6)
det(doctors-8, the-7)
poss(boys-10, doctors-8)
nsubj(take-11, boys-10)
advcl(tells-19, take-11)
det(medicines-13, the-12)
dobj(take-11, medicines-13)
prep(take-11, about-14)
pcomp(about-14, in-15)
pobj(in-15, baskets-16)
nsubj(tells-19, grannie-18)
ccomp(cried-1, tells-19)
dobj(tells-19, me-20)
nsubj(do-22, they-21)
dep(tells-19, do-22)
det(towns-26, the-24)
amod(towns-26, big-25)
prep_in(do-22, towns-26)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB _))
    (VP (MD should)
      (ADVP (RB _))
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT the) (NNP Great) (NNP Doctor) (POS 's))
                (NN boy)))))))
    (. !) ('' '')))

nsubj(like-5, I-1)
nsubj(boy-12, I-1)
advmod(like-5, _-2)
aux(like-5, should-3)
advmod(like-5, _-4)
root(ROOT-0, like-5)
aux(boy-12, to-6)
cop(boy-12, be-7)
det(Doctor-10, the-8)
nn(Doctor-10, Great-9)
poss(boy-12, Doctor-10)
xcomp(like-5, boy-12)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (ADVP (RB really))
      (VP (VBP think)
        (ADVP (RB then))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (NNP Mr) (NNP Shepherd))
        (VP (VBD resumed) (, ,)
          (PP (IN after)
            (NP (DT a) (NN pause))))))
    (, ,) (`` ``)
    (SBAR (IN that)
      (S
        (NP (DT a) (NN doctor))
        (VP (VBZ 's))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS best) (NN way))
        (PP (IN of)
          (NP (VBG helping) (NNS people)))))
    (. ?) ('' '')))

nsubj(think-4, You-2)
advmod(think-4, really-3)
ccomp(way-24, think-4)
advmod(think-4, then-5)
nn(Shepherd-9, Mr-8)
nsubj(resumed-10, Shepherd-9)
parataxis(way-24, resumed-10)
det(pause-14, a-13)
prep_after(resumed-10, pause-14)
mark('s-20, that-17)
det(doctor-19, a-18)
nsubj('s-20, doctor-19)
csubj(way-24, 's-20)
cop(way-24, is-21)
det(way-24, the-22)
amod(way-24, best-23)
root(ROOT-0, way-24)
amod(people-27, helping-26)
prep_of(way-24, people-27)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Yes))
      (, ,)
      (NP (PRP I))
      (VP (VBP do)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP
      (NP (NNP Willie))
      (, ,)
      (NP (NNP decidedly)))
    (. .)))

advmod(do-5, Yes-2)
nsubj(do-5, I-4)
ccomp(answered-8, do-5)
root(ROOT-0, answered-8)
nsubj(answered-8, Willie-9)
appos(Willie-9, decidedly-11)

(ROOT
  (S (`` ``)
    (NP (DT A) (NN doctor))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP see)))
      (, ,))
    (VP (VBZ comes)
      (NP
        (NP (JJS nearest))
        (PP (TO to)
          (NP (PRP them))))
      (PP (IN with)
        (NP (PRP$ his) (NN help))))
    (. .)))

det(doctor-3, A-2)
nsubj(comes-8, doctor-3)
nsubj(see-6, you-5)
parataxis(comes-8, see-6)
root(ROOT-0, comes-8)
dobj(comes-8, nearest-9)
prep_to(nearest-9, them-11)
poss(help-14, his-13)
prep_with(comes-8, help-14)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's) (RB not)
        (NP
          (NP (DT the) (NN outside))
          (PP (IN of)
            (NP
              (NP (DT a) (NN man) (POS 's))
              (NN body)))
          (SBAR
            (S
              (NP (PRP he))
              (VP
                (VP (VBZ helps))
                (, ,)
                (CC but)
                (VP
                  (NP (PRP$ his) (JJ inside) (NN health)))))))
        (: --)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP he))
            (VP (VBZ feels))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .) ('' '')))

nsubj(outside-5, It-1)
cop(outside-5, 's-2)
neg(outside-5, not-3)
det(outside-5, the-4)
ccomp(know-24, outside-5)
det(man-8, a-7)
poss(body-10, man-8)
prep_of(outside-5, body-10)
nsubj(helps-12, he-11)
rcmod(outside-5, helps-12)
poss(health-17, his-15)
amod(health-17, inside-16)
rcmod(outside-5, health-17)
conj_but(helps-12, health-17)
advmod(feels-21, how-19)
nsubj(feels-21, he-20)
parataxis(outside-5, feels-21)
nsubj(know-24, you-23)
root(ROOT-0, know-24)

(ROOT
  (S
    (NP (NNP Mr) (NNP Shepherd))
    (ADVP (RB again))
    (VP (VBD thought)
      (PP (IN for)
        (NP (DT a) (JJ few) (NNS moments))))
    (. .)))

nn(Shepherd-2, Mr-1)
nsubj(thought-4, Shepherd-2)
advmod(thought-4, again-3)
root(ROOT-0, thought-4)
det(moments-8, a-6)
amod(moments-8, few-7)
prep_for(thought-4, moments-8)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (NP (PRP he))
    (VP (VBD said) (: --) (`` ``)
      (SBARQ
        (WHNP (WP What))
        (SQ (VBZ 's)
          (NP
            (NP (DT the) (NN difference))
            (PP (IN between)
              (NP
                (NP (PRP$ your) (NN father) (POS 's))
                (NN work)
                (CC and)
                (NN mine)))))
        (. ?) ('' '')))))

prep_at(said-4, length-2)
nsubj(said-4, he-3)
root(ROOT-0, said-4)
ccomp(said-4, What-7)
cop(What-7, 's-8)
det(difference-10, the-9)
nsubj(What-7, difference-10)
poss(father-13, your-12)
poss(work-15, father-13)
prep_between(difference-10, work-15)
prep_between(difference-10, mine-17)
conj_and(work-15, mine-17)

(ROOT
  (S
    (NP (`` ``)
      (NP (DT A) (JJ great) (NN difference))
      (, ,)
      (PP (IN of)
        (NP (NN course)))
      (, ,) ('' ''))
    (VP (VBD replied)
      (NP (NNP Willie)))
    (. .)))

det(difference-4, A-2)
amod(difference-4, great-3)
nsubj(replied-10, difference-4)
prep_of(difference-4, course-7)
root(ROOT-0, replied-10)
dobj(replied-10, Willie-11)

(ROOT
  (S (`` ``)
    (VP (VB Tell)
      (NP (PRP me))
      (ADVP (RB then))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBZ is)))))
    (. ?) ('' '')))

root(ROOT-0, Tell-2)
dobj(Tell-2, me-3)
advmod(Tell-2, then-4)
dobj(is-7, what-5)
nsubj(is-7, it-6)
dep(Tell-2, is-7)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (MD must)
        (VP (VB think)
          (SBAR (IN before)
            (S
              (NP (PRP I))
              (VP (MD can)
                (VP (VB do)
                  (NP (DT that)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(think-4, I-2)
aux(think-4, must-3)
ccomp(said-12, think-4)
mark(do-8, before-5)
nsubj(do-8, I-6)
aux(do-8, can-7)
advcl(think-4, do-8)
dobj(do-8, that-9)
root(ROOT-0, said-12)
nsubj(said-12, Willie-13)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (ADJP (RB so) (JJ easy)
        (S
          (VP (TO to)
            (VP (VB put)
              (NP (NNS things))
              (PP (IN in)
                (NP (NNS words))))))))
    (. !)))

nsubj(easy-6, It-2)
nsubj(put-8, It-2)
cop(easy-6, 's-3)
neg(easy-6, not-4)
advmod(easy-6, so-5)
root(ROOT-0, easy-6)
aux(put-8, to-7)
xcomp(easy-6, put-8)
dobj(put-8, things-9)
prep_in(put-8, words-11)

(ROOT
  (S (: --)
    (NP (PRP You))
    (ADVP (RB very) (RB often))
    (VP (VBP go)
      (S
        (VP (TO to)
          (VP (VB help)
            (NP
              (NP (DT the) (JJ same) (NNS people))
              (: :)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (NP (NN something)
                      (S
                        (VP (TO to)
                          (VP (VB start)
                            (PP (IN with))))))))))))))
    (. .) ('' '')))

nsubj(go-5, You-2)
nsubj(help-7, You-2)
advmod(often-4, very-3)
advmod(go-5, often-4)
root(ROOT-0, go-5)
aux(help-7, to-6)
xcomp(go-5, help-7)
det(people-10, the-8)
amod(people-10, same-9)
dobj(help-7, people-10)
nsubj(something-14, people-10)
cop(something-14, 's-13)
rcmod(people-10, something-14)
aux(start-16, to-15)
vmod(something-14, start-16)
prep(start-16, with-17)

(ROOT
  (S (`` ``)
    (CC But)
    (S
      (S (RB not)
        (VP (TO to)
          (VP (VB give)
            (NP (PRP them))
            (NP (DT the) (JJ same)))))
      (VP (VBP help)))
    (. .) ('' '')))

cc(help-9, But-2)
neg(give-5, not-3)
aux(give-5, to-4)
csubj(help-9, give-5)
iobj(give-5, them-6)
det(same-8, the-7)
dobj(give-5, same-8)
root(ROOT-0, help-9)

(ROOT
  (FRAG
    (INTJ (`` ``) (UH No))
    (, ,)
    (ADVP (RB not) (RB quite))
    (. .)))

discourse(quite-5, No-2)
dep(quite-5, not-4)
root(ROOT-0, quite-5)

(ROOT
  (SINV
    (S (CC And)
      (NP
        (NP (RB yet))
        ('' '') (: --)
        (SBAR (`` ``)
          (S
            (ADVP (IN At) (JJS least))
            (, ,)
            (NP (PRP I))
            (VP (MD can) (RB not)
              (VP (VB write)
                (NP (NNS prescriptions)
                  (CC or)
                  (NN compound) (NNS medicines))
                (PP (IN for)
                  (NP (PRP them)))
                (, ,)
                (S
                  (VP (VBG seeing)
                    (NP (PRP I)))))))))
      (VP (VBP know)
        (NP
          (NP (NN nothing))
          (PP (IN about)
            (NP (JJ such) (NNS things)))))
      (, ,) ('' ''))
    (VP (VBD said))
    (NP (NNP Mr) (NNP Shepherd))
    (. .)))

cc(know-22, And-1)
nsubj(know-22, yet-2)
advmod(write-12, At-6)
pobj(At-6, least-7)
nsubj(write-12, I-9)
aux(write-12, can-10)
neg(write-12, not-11)
dep(yet-2, write-12)
dobj(write-12, prescriptions-13)
nn(medicines-16, compound-15)
dobj(write-12, medicines-16)
conj_or(prescriptions-13, medicines-16)
prep_for(write-12, them-18)
vmod(write-12, seeing-20)
dobj(seeing-20, I-21)
dep(said-29, know-22)
dobj(know-22, nothing-23)
amod(things-26, such-25)
prep_about(nothing-23, things-26)
root(ROOT-0, said-29)
nn(Shepherd-31, Mr-30)
nsubj(said-29, Shepherd-31)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,)
    (PP (IN on)
      (NP (DT the) (JJ other) (NN hand)))
    (, ,)
    (SBAR (IN though)
      (S
        (NP (PRP I))
        (VP (MD ca) (RB n't)
          (VP (VB give)
            (NP (PRP them))
            (NP
              (NP (NN medicine) (RP out))
              (PP (IN of)
                (NP
                  (NP (PRP$ your) (NN papa) (POS 's))
                  (NN basket))))))))
    (, ,)
    (NP (PRP$ your) (NN papa))
    (ADVP (RB very) (RB often))
    (VP (VBZ gives)
      (NP (PRP them))
      (NP
        (NP (NN medicine))
        (PP (RB out) (IN of)
          (NP (NN mine)))))
    (. .) ('' '')))

cc(gives-27, But-2)
det(hand-7, the-5)
amod(hand-7, other-6)
prep_on(gives-27, hand-7)
mark(give-13, though-9)
nsubj(give-13, I-10)
aux(give-13, ca-11)
neg(give-13, n't-12)
advcl(gives-27, give-13)
iobj(give-13, them-14)
dobj(give-13, medicine-15)
poss(papa-19, your-18)
poss(basket-21, papa-19)
prep_out_of(medicine-15, basket-21)
poss(papa-24, your-23)
nsubj(gives-27, papa-24)
advmod(often-26, very-25)
advmod(gives-27, often-26)
root(ROOT-0, gives-27)
iobj(gives-27, them-28)
dobj(gives-27, medicine-29)
prep_out_of(medicine-29, mine-32)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (DT That))
        (VP (VBZ 's)
          (NP (DT a) (NN riddle))))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VBP suppose))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(riddle-5, That-2)
cop(riddle-5, 's-3)
det(riddle-5, a-4)
ccomp(said-11, riddle-5)
nsubj(suppose-8, I-7)
parataxis(riddle-5, suppose-8)
root(ROOT-0, said-11)
nsubj(said-11, Willie-12)

(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's) (RB not))
    (. .)))

discourse('s-5, No-2)
nsubj('s-5, it-4)
root(ROOT-0, 's-5)
neg('s-5, not-6)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (NNS is)
      (NP (PRP it))
      (NP
        (NP (PRP$ your) (NN papa))
        (SBAR
          (S
            (VP (MD can)
              (VP (VB come)
                (NP
                  (ADJP (RB so) (JJ near))
                  (NNS people))
                (S
                  (VP (TO to)
                    (VP (VB help)
                      (NP (PRP them)))))))))))
    (. ?) ('' '')))

advmod(is-2, How-1)
root(ROOT-0, is-2)
dep(is-2, it-3)
poss(papa-5, your-4)
dep(is-2, papa-5)
aux(come-7, can-6)
rcmod(papa-5, come-7)
advmod(near-9, so-8)
amod(people-10, near-9)
dobj(come-7, people-10)
aux(help-12, to-11)
vmod(come-7, help-12)
dobj(help-12, them-13)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (VBZ gives)
      (NP (PRP them))
      (NP
        (NP (NNS things))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP make)
              (NP (PRP them))
              (ADVP (RB well) (RB again)))))))
    (. .) ('' '')))

nsubj(gives-3, He-2)
root(ROOT-0, gives-3)
iobj(gives-3, them-4)
dobj(gives-3, things-5)
nsubj(make-7, things-5)
rcmod(things-5, make-7)
dobj(make-7, them-8)
advmod(again-10, well-9)
advmod(make-7, again-10)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP they))
      (VP (VB do)
        (PP (IN with)
          (NP (DT the) (NNS things))))
      (S
        (NP (PRP he))
        (VP (VBZ gives)
          (NP (PRP them)))))
    (. ?) ('' '')))

dobj(do-5, What-2)
aux(do-5, do-3)
nsubj(do-5, they-4)
root(ROOT-0, do-5)
det(things-8, the-7)
prep_with(do-5, things-8)
nsubj(gives-10, he-9)
dep(do-5, gives-10)
dobj(gives-10, them-11)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (VBP take)
      (NP (PRP them)))
    (. .) ('' '')))

nsubj(take-3, They-2)
root(ROOT-0, take-3)
dobj(take-3, them-4)

(ROOT
  (INTJ (`` ``) (UH How) (. ?) ('' '')))

root(ROOT-0, How-2)

(ROOT
  (S (`` ``)
    (VP
      (VP (VB Put)
        (NP (PRP them))
        (PP (IN in)
          (NP (PRP$ their) (NNS mouths))))
      (CC and)
      (VP (VB swallow)
        (NP (PRP them))))
    (. .) ('' '')))

root(ROOT-0, Put-2)
dobj(Put-2, them-3)
poss(mouths-6, their-5)
prep_in(Put-2, mouths-6)
conj_and(Put-2, swallow-8)
dobj(swallow-8, them-9)

(ROOT
  (S (`` ``)
    (NP (NNP Could))
    (RB n't)
    (NP (PRP they))
    (VP (VBP take)
      (NP (PRP them))
      (PP (IN at)
        (NP (PRP$ their) (NNS ears))))
    (. ?) ('' '')))

nsubj(take-5, Could-2)
neg(take-5, n't-3)
nsubj(take-5, they-4)
root(ROOT-0, take-5)
dobj(take-5, them-6)
poss(ears-9, their-8)
prep_at(take-5, ears-9)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No)))
    (, ,) ('' '')
    (VP (VBD answered))
    (NP (NNP Willie))
    (, ,)
    (S
      (VP (VBG laughing)))
    (. .)))

dep(answered-5, No-2)
root(ROOT-0, answered-5)
nsubj(answered-5, Willie-6)
vmod(answered-5, laughing-8)

(ROOT
  (S (`` ``)
    (VP (VB Why) (RB not))
    (. ?) ('' '')))

root(ROOT-0, Why-2)
neg(Why-2, not-3)

(ROOT
  (S (`` ``)
    (SBAR (IN Because)
      (S
        (NP (PRP$ their) (NNS ears))
        (VP (VBP are) (RB n't))))
    (VP (VBD meant)
      (PP (IN for)
        (S
          (VP (VBG taking)
            (NP (PRP them))))))
    (. .) ('' '')))

mark(are-5, Because-2)
poss(ears-4, their-3)
nsubj(are-5, ears-4)
csubj(meant-7, are-5)
neg(are-5, n't-6)
root(ROOT-0, meant-7)
prepc_for(meant-7, taking-9)
dobj(taking-9, them-10)

(ROOT
  (S (`` ``)
    (S
      (VP (VBP Are) (RB n't)
        (NP (PRP$ their) (NNS ears))))
    (VP (VBD meant)
      (PP (IN for)
        (NP (NN taking) (NN anything)))
      (, ,)
      (ADVP (RB then)))
    (. ?) ('' '')))

cop(ears-5, Are-2)
neg(ears-5, n't-3)
poss(ears-5, their-4)
csubj(meant-6, ears-5)
root(ROOT-0, meant-6)
nn(anything-9, taking-8)
prep_for(meant-6, anything-9)
advmod(meant-6, then-11)

(ROOT
  (S (`` ``)
    (VP (VB Only)
      (NP (NNS words)))
    (. .) ('' '')))

root(ROOT-0, Only-2)
dobj(Only-2, words-3)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Well))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP one))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB try)))))))
      (, ,))
    (VP (MD might) (RB n't)
      (ADVP (RB words))
      (VP (VB be)
        (ADJP (JJ mixed)
          (ADVP (RB so) (RB as))
          (S
            (VP (TO to)
              (VP (VB be)
                (NP (NN medicine))))))))
    (. ?) ('' '')))

nsubj(mixed-14, Well-2)
nsubj(medicine-19, Well-2)
mark(were-6, if-4)
nsubj(were-6, one-5)
nsubj(try-8, one-5)
dep(Well-2, were-6)
aux(try-8, to-7)
xcomp(were-6, try-8)
aux(mixed-14, might-10)
neg(mixed-14, n't-11)
advmod(mixed-14, words-12)
cop(mixed-14, be-13)
root(ROOT-0, mixed-14)
advmod(as-16, so-15)
advmod(mixed-14, as-16)
aux(medicine-19, to-17)
cop(medicine-19, be-18)
xcomp(mixed-14, medicine-19)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (NP (WRB how))))
    (. .) ('' '')))

nsubj(see-5, I-2)
aux(see-5, do-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
dobj(see-5, how-6)

(ROOT
  (SQ (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (DT a) (JJ few) (JJ strong) (NNS words))))))))
    (PRN (, ,)
      (S
        (NP (DT a) (JJ few))
        (VP (VBZ persuasive)
          (NP
            (NP (NNS words))
            (, ,)
            (CC and)
            (NP (DT a) (JJ few) (NN tender) (NNS words)))))
      (, ,))
    (MD might) (RB n't)
    (NP (PRP you))
    (VP (VB mix)
      (NP (PRP them))
      (ADVP (RB so))
      (PRN (: --)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ is))
              (, ,)
              (ADVP (RB so))
              (VP (VBD set)
                (NP (PRP them))
                (PP (IN in)
                  (NP (NN order)))))))
        (: --))
      (SBAR (IN as)
        (S
          (VP (TO to)
            (VP (VB make)
              (S
                (NP (PRP them))
                (NP
                  (NP (DT a) (JJ good) (NN medicine))
                  (PP (IN for)
                    (NP
                      (NP (DT a) (JJ sore) (NN heart))
                      (, ,)
                      (PP (IN for)
                        (NP (NN instance))))))))))))
    (. ?) ('' '')))

mark(were-4, If-2)
nsubj(were-4, you-3)
nsubj(take-6, you-3)
advcl(mix-26, were-4)
aux(take-6, to-5)
xcomp(were-4, take-6)
det(words-10, a-7)
amod(words-10, few-8)
amod(words-10, strong-9)
dobj(take-6, words-10)
det(few-13, a-12)
nsubj(persuasive-14, few-13)
parataxis(mix-26, persuasive-14)
dobj(persuasive-14, words-15)
det(words-21, a-18)
amod(words-21, few-19)
nn(words-21, tender-20)
dobj(persuasive-14, words-21)
conj_and(words-15, words-21)
aux(mix-26, might-23)
neg(mix-26, n't-24)
nsubj(mix-26, you-25)
root(ROOT-0, mix-26)
dobj(mix-26, them-27)
nsubj(make-41, them-27)
advmod(mix-26, so-28)
nsubj(is-31, that-30)
parataxis(mix-26, is-31)
advmod(set-34, so-33)
dep(is-31, set-34)
dobj(set-34, them-35)
prep_in(set-34, order-37)
mark(make-41, as-39)
aux(make-41, to-40)
advcl(mix-26, make-41)
xcomp(mix-26, make-41)
nsubj(medicine-45, them-42)
det(medicine-45, a-43)
amod(medicine-45, good-44)
xcomp(make-41, medicine-45)
det(heart-49, a-47)
amod(heart-49, sore-48)
prep_for(medicine-45, heart-49)
prep_for(heart-49, instance-52)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Ah))
    (. !)))

root(ROOT-0, Ah-2)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP see)))
    (, ,)
    (NP (PRP I))
    (VP (VBP see))
    (. !)))

nsubj(see-2, I-1)
ccomp(see-5, see-2)
nsubj(see-5, I-4)
root(ROOT-0, see-5)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP
      (NP (DT the) (NN medicine))
      (PP (IN for)
        (NP (DT the) (NN heart))))
    (VP (MD must)
      (VP (VB go)
        (PRT (RP in))
        (PP (IN at)
          (NP (DT the) (NNS ears)))))
    (. .) ('' '')))

discourse(go-9, Yes-1)
det(medicine-4, the-3)
nsubj(go-9, medicine-4)
det(heart-7, the-6)
prep_for(medicine-4, heart-7)
aux(go-9, must-8)
root(ROOT-0, go-9)
prt(go-9, in-10)
det(ears-13, the-12)
prep_at(go-9, ears-13)

(ROOT
  (FRAG
    (ADVP (`` ``) (RB Not)
      (ADVP (RB necessarily)))
    (. .)))

dep(necessarily-3, Not-2)
root(ROOT-0, necessarily-3)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD might)
      (VP (VB go)
        (PRT (RP in))
        (PP (IN at)
          (NP (DT the) (NNS eyes)))))
    (. .)))

nsubj(go-3, It-1)
aux(go-3, might-2)
root(ROOT-0, go-3)
prt(go-3, in-4)
det(eyes-7, the-6)
prep_at(go-3, eyes-7)

(ROOT
  (S
    (NP (NNP Jesus))
    (VP (VBD gave)
      (NP (PRP it))
      (PP (IN at)
        (NP
          (NP (DT the) (NNS eyes))
          (, ,)
          (PP (IN for)
            (NP
              (NP (VBG doubting) (NNS hearts))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP He))
                  (VP (VBD said))))))))
      (PRN (: --)
        (S
          (VP (VB Consider)
            (NP (DT the) (NNS lilies)))))
      (, ,)
      (PRN (: --)
        (S
          (VP (VB consider)
            (NP (DT the) (NNS ravens))))))
    (. .) ('' '')))

nsubj(gave-2, Jesus-1)
root(ROOT-0, gave-2)
dobj(gave-2, it-3)
det(eyes-6, the-5)
prep_at(gave-2, eyes-6)
amod(hearts-10, doubting-9)
prep_for(eyes-6, hearts-10)
tmod(said-14, hearts-10)
advmod(said-14, when-12)
nsubj(said-14, He-13)
rcmod(hearts-10, said-14)
parataxis(gave-2, Consider-16)
det(lilies-18, the-17)
dobj(Consider-16, lilies-18)
parataxis(gave-2, consider-21)
det(ravens-23, the-22)
dobj(consider-21, ravens-23)

(ROOT
  (S (`` ``)
    (PP (IN At)
      (NP (DT the) (NNS ears)))
    (, ,)
    (ADVP (RB too))
    (, ,)
    (ADVP (RB though))
    (, ,) ('' '')
    (VP (VBD said)
      (NP
        (NP (NNP Willie))
        (: ;) (`` ``)
        (SBAR (RB just) (IN as)
          (S
            (NP (NN papa))
            (ADVP (RB sometimes))
            (VP (VBZ gives)
              (NP (DT a) (NN medicine)
                (S
                  (VP
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN taken))))
                    (CC and)
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN rubbed)
                          (PP (IN in)
                            (NP (DT both))))))))))))))
    (. .) ('' '')))

det(ears-4, the-3)
prep_at(said-11, ears-4)
advmod(said-11, too-6)
advmod(said-11, though-8)
root(ROOT-0, said-11)
dobj(said-11, Willie-12)
advmod(gives-19, just-15)
mark(gives-19, as-16)
nsubj(gives-19, papa-17)
advmod(gives-19, sometimes-18)
dep(Willie-12, gives-19)
det(medicine-21, a-20)
dobj(gives-19, medicine-21)
aux(taken-24, to-22)
auxpass(taken-24, be-23)
dep(medicine-21, taken-24)
aux(rubbed-28, to-26)
auxpass(rubbed-28, be-27)
dep(medicine-21, rubbed-28)
conj_and(taken-24, rubbed-28)
prep_in(rubbed-28, both-30)

(ROOT
  (S
    (NP (`` ``) (RB Only) (DT the) (NNS ears))
    (VP (MD could)
      (VP (VB have)
        (VP (VBN done)
          (NP
            (NP (NN nothing))
            (PP (IN with)
              (NP (DT the) (NNS words))))
          (SBAR (IN if)
            (S
              (NP (DT the) (NNS eyes))
              (VP (VBD had) (RB n't)
                (VP (VBN taken)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NNS things))
                      (ADVP (PRP themselves)))
                    (ADVP (RB first))))))))))
    (. .)))

advmod(ears-4, Only-2)
det(ears-4, the-3)
nsubj(done-7, ears-4)
aux(done-7, could-5)
aux(done-7, have-6)
root(ROOT-0, done-7)
dobj(done-7, nothing-8)
det(words-11, the-10)
prep_with(nothing-8, words-11)
mark(taken-17, if-12)
det(eyes-14, the-13)
nsubj(taken-17, eyes-14)
aux(taken-17, had-15)
neg(taken-17, n't-16)
advcl(done-7, taken-17)
det(things-20, the-19)
prep_in(taken-17, things-20)
advmod(things-20, themselves-21)
advmod(taken-17, first-22)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB where))
    (SQ (VBZ does)
      (NP (DT this) (NN medicine))
      (VP (VB go)
        (PP (TO to))
        (, ,)
        (S
          (NP (NNP Willie)))))
    (. ?) ('' '')))

cc(go-6, But-1)
advmod(go-6, where-2)
aux(go-6, does-3)
det(medicine-5, this-4)
nsubj(go-6, medicine-5)
root(ROOT-0, go-6)
prep(go-6, to-7)
dep(go-6, Willie-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD must)
            (VP (VB go)
              (PP (TO to)
                (NP (DT the) (NN heart)))
              (, ,)
              (SBAR (IN if)
                (S
                  (NP (DT that))
                  (VP (VBZ 's)
                    (NP
                      (NP (DT the) (NN place))
                      (SBAR
                        (S
                          (VP (VBZ wants)
                            (NP (NN healing))))))))))))))
    (. .) ('' '')))

nsubj(suppose-3, I-2)
root(ROOT-0, suppose-3)
nsubj(go-6, it-4)
aux(go-6, must-5)
ccomp(suppose-3, go-6)
det(heart-9, the-8)
prep_to(go-6, heart-9)
mark(place-15, if-11)
nsubj(place-15, that-12)
cop(place-15, 's-13)
det(place-15, the-14)
advcl(go-6, place-15)
rcmod(place-15, wants-16)
dobj(wants-16, healing-17)

(ROOT
  (S (`` ``)
    (ADVP (RB Does))
    (NP (PRP it))
    (VP (VBP go)
      (PP (TO to)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT a) (NN doctor))
            (VP (MD would)
              (VP (VB call)
                (NP (DT the) (NN heart))
                (, ,)
                (ADVP (RB then))))))))
    (. ?) ('' '')))

advmod(go-4, Does-2)
nsubj(go-4, it-3)
root(ROOT-0, go-4)
dobj(call-10, what-6)
det(doctor-8, a-7)
nsubj(call-10, doctor-8)
aux(call-10, would-9)
prepc_to(go-4, call-10)
det(heart-12, the-11)
dobj(call-10, heart-12)
advmod(call-10, then-14)

(ROOT
  (S
    (FRAG
      (INTJ
        (INTJ (`` ``) (UH No))
        (, ,)
        (INTJ (UH no))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (MD must)
        (VP (VB go)
          (PP (TO to)
            (NP (WP what)))
          (: --)
          (PP (TO to)
            (SBAR
              (WHNP (WP what))
              (S
                (NP
                  (NP (DT a) (NN clergyman))
                  (PRN (: --)
                    (SBAR
                      (WHPP (TO to)
                        (WHNP (WP what)
                          (NP (CD _))))
                      (S
                        (NP (PRP you))
                        (VP (VBZ _))))))
                (VP (VBP call)
                  (NP (DT the) (NN heart)))))))))
    (. .) ('' '')))

dep(go-8, No-2)
discourse(No-2, no-4)
nsubj(go-8, it-6)
aux(go-8, must-7)
root(ROOT-0, go-8)
prep_to(go-8, what-10)
dobj(call-22, what-13)
det(clergyman-15, a-14)
nsubj(call-22, clergyman-15)
prep_to(_-21, what-18)
dep(what-18, _-19)
nsubj(_-21, you-20)
dep(clergyman-15, _-21)
prepc_to(go-8, call-22)
det(heart-24, the-23)
dobj(call-22, heart-24)

(ROOT
  (SBARQ (`` ``)
    (CC And)
    (WHNP (WDT which) (NN heart))
    (SQ (VBZ is)
      (NP
        (NP (NNP nearer))
        (PP (TO to)
          (NP (DT the) (NN person) (PRP himself)))))
    (. ?) ('' '')))

cc(is-5, And-2)
det(heart-4, which-3)
dep(is-5, heart-4)
root(ROOT-0, is-5)
nsubj(is-5, nearer-6)
det(person-9, the-8)
prep_to(nearer-6, person-9)
npadvmod(person-9, himself-10)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD thought)
      (PP (IN for)
        (NP
          (NP (DT a) (NN moment))
          (, ,)
          (NP
            (NP
              (NP (RB then))
              (VP (VBN answered) (, ,)
                (ADVP (RB merrily))))
            (: --)
            (NP
              (NP (DT the) (NN doctor) (POS 's))
              (NN heart)))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ sure))))))
    (. !) ('' '')))

nsubj(thought-2, Willie-1)
nsubj(sure-19, Willie-1)
root(ROOT-0, thought-2)
det(moment-5, a-4)
prep_for(thought-2, moment-5)
appos(moment-5, then-7)
vmod(then-7, answered-8)
advmod(answered-8, merrily-10)
det(doctor-13, the-12)
poss(heart-15, doctor-13)
dep(then-7, heart-15)
aux(sure-19, to-17)
cop(sure-19, be-18)
xcomp(thought-2, sure-19)

(ROOT
  (SINV (`` ``)
    (S
      (FRAG
        (INTJ (UH No) (, ,) (UH Willie)))
      (: ;)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (ADJP (JJ wrong))
          (ADVP (RB there)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Shepherd))
    (, ,)
    (S
      (VP (VBG looking)
        (PRN (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (VBD felt))))
          (, ,))
        (S
          (NP (DT a) (JJ little))
          (ADJP (VBN disappointed)))))
    (. .)))

dep(wrong-8, No-2)
dep(No-2, Willie-4)
nsubj(wrong-8, you-6)
cop(wrong-8, 're-7)
ccomp(said-12, wrong-8)
advmod(wrong-8, there-9)
root(ROOT-0, said-12)
nn(Shepherd-14, Mr-13)
nsubj(said-12, Shepherd-14)
vmod(said-12, looking-16)
mark(felt-20, as-18)
nsubj(felt-20, he-19)
parataxis(looking-16, felt-20)
det(little-23, a-22)
nsubj(disappointed-24, little-23)
xcomp(looking-16, disappointed-24)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Oh)
        (NP (UH yes))))
    (, ,)
    (VP (VBP please))
    (. !) ('' '')))

dep(please-5, Oh-2)
dobj(Oh-2, yes-3)
root(ROOT-0, please-5)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (NNP Willie))))
    (: ;) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (RB almost) (JJ sure)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (ADJP (JJ right))
                (NP (DT this) (NN time))))))))
    (. .) ('' '')))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)
nsubj(sure-8, I-5)
cop(sure-8, 'm-6)
advmod(sure-8, almost-7)
parataxis(said-1, sure-8)
nsubj(right-11, I-9)
cop(right-11, 'm-10)
ccomp(sure-8, right-11)
det(time-13, this-12)
dep(right-11, time-13)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No))
      (, ,)
      (NP (NNP Willie)))
    (: ;)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT the) (NN clergyman))
          (VP (VBZ calls))))
      (NP (DT the) (NN heart))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJS nearest))
          (PP (TO to)
            (NP (DT the) (NN man) (PRP himself))))))
    (. .) ('' '')))

discourse(Willie-4, No-2)
dep(nearest-14, Willie-4)
dobj(calls-9, what-6)
det(clergyman-8, the-7)
nsubj(calls-9, clergyman-8)
advcl(nearest-14, calls-9)
det(heart-11, the-10)
nsubj(nearest-14, heart-11)
cop(nearest-14, is-12)
det(nearest-14, the-13)
root(ROOT-0, nearest-14)
det(man-17, the-16)
prep_to(nearest-14, man-17)
npadvmod(man-17, himself-18)

(ROOT
  (SINV (`` ``)
    (FRAG
      (INTJ (UH No) (, ,) (UH no)))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP (NNP Willie))
    (. .)))

dep(persisted-7, No-2)
dep(No-2, no-4)
root(ROOT-0, persisted-7)
nsubj(persisted-7, Willie-8)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN heart))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 've)
            (VP (VBN got)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (PP (IN with)
                      (NP (NNP _)))))))))))
    (VP (VBZ is)
      (VP (VBG _)
        (S
          (NP (DT the) (NN man))
          (NP (PRP himself)))))
    (. .)))

det(heart-3, The-2)
nsubj(_-12, heart-3)
nsubj(got-6, you-4)
nsubj(do-8, you-4)
aux(got-6, 've-5)
rcmod(heart-3, got-6)
aux(do-8, to-7)
xcomp(got-6, do-8)
prep_with(do-8, _-10)
aux(_-12, is-11)
root(ROOT-0, _-12)
det(man-14, the-13)
nsubj(himself-15, man-14)
xcomp(_-12, himself-15)

(ROOT
  (S (RB So)
    (PP (IN of)
      (NP (NN course)))
    (NP (DT the) (NN doctor))
    (VP (VBZ 's)
      (NP
        (NP (NN heart))
        (SBAR
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN nearer))
                (PP (TO to)
                  (NP (DT the) (NN man)))))))))
    (. .) ('' '')))

advmod(heart-7, So-1)
prep_of(heart-7, course-3)
det(doctor-5, the-4)
nsubj(heart-7, doctor-5)
cop(heart-7, 's-6)
root(ROOT-0, heart-7)
cop(nearer-10, is-8)
det(nearer-10, the-9)
rcmod(heart-7, nearer-10)
det(man-13, the-12)
prep_to(nearer-10, man-13)

(ROOT
  (S
    (NP (NNP Mr) (NNP Shepherd))
    (VP (VBD laughed)
      (NP (DT a) (JJ low) (, ,) (JJ pleasant) (NN laugh)))
    (. .)))

nn(Shepherd-2, Mr-1)
nsubj(laughed-3, Shepherd-2)
root(ROOT-0, laughed-3)
det(laugh-8, a-4)
amod(laugh-8, low-5)
amod(laugh-8, pleasant-7)
dobj(laughed-3, laugh-8)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP 're)
      (ADJP (RB quite) (JJ right))
      (, ,)
      (NP (NNP Willie)))
    (. .)))

nsubj(right-5, You-2)
cop(right-5, 're-3)
advmod(right-5, quite-4)
root(ROOT-0, right-5)
dep(right-5, Willie-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 've)
      (VP (VBN got)
        (NP
          (NP (DT the) (JJS best))
          (PP (IN of)
            (NP (PRP it))))))
    (. .)))

nsubj(got-3, You-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
det(best-5, the-4)
dobj(got-3, best-5)
prep_of(best-5, it-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB very) (JJ pleased)))
    (. .)))

nsubj(pleased-4, I-1)
cop(pleased-4, 'm-2)
advmod(pleased-4, very-3)
root(ROOT-0, pleased-4)

(ROOT
  (S (CC But)
    (ADVP (RB then))
    (, ,)
    (VP (VBD Willie) (, ,)
      (SQ (VBZ does) (RB n't)
        (NP (PRP it))
        (VP (VB strike)
          (NP (PRP you))
          (SBAR (IN that)
            (S
              (PP (IN after)
                (NP (DT all)))
              (NP (EX there))
              (VP (MD might)
                (VP (VB be)
                  (NP
                    (NP (DT a) (JJR closer) (NN way))
                    (PP (IN of)
                      (S
                        (VP (VBG helping)
                          (NP (NNS men))
                          (PP (IN than)
                            (NP
                              (NP (DT the) (NN doctor) (POS 's))
                              (NN way))))))))))))))
    (. ?) ('' '')))

cc(Willie-4, But-1)
advmod(Willie-4, then-2)
root(ROOT-0, Willie-4)
aux(strike-9, does-6)
neg(strike-9, n't-7)
nsubj(strike-9, it-8)
dep(Willie-4, strike-9)
dobj(strike-9, you-10)
mark(way-19, that-11)
prep_after(way-19, all-13)
expl(way-19, there-14)
aux(way-19, might-15)
cop(way-19, be-16)
det(way-19, a-17)
amod(way-19, closer-18)
ccomp(strike-9, way-19)
prepc_of(way-19, helping-21)
dobj(helping-21, men-22)
det(doctor-25, the-24)
poss(way-27, doctor-25)
prep_than(helping-21, way-27)

(ROOT
  (S
    (NP (NNP Again) (NNP Willie))
    (VP (VBD thought)
      (NP (DT a) (NN while)))
    (. .)))

nn(Willie-2, Again-1)
nsubj(thought-3, Willie-2)
root(ROOT-0, thought-3)
det(while-5, a-4)
dobj(thought-3, while-5)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (MD would)
      (VP (VB be)))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD said) (, ,)
          (PP (IN at)
            (NP (NN length)))))
      (, ,) (`` ``))
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD could)
          (VP (VB give)
            (NP (PRP them))
            (NP (NN medicine)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (S
                      (NP (PRP them))
                      (ADJP (JJ happy))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP they))
                          (VP (VBP are)
                            (ADJP (JJ miserable))))))))))))))
    (. .) ('' '')))

expl(be-4, There-2)
aux(be-4, would-3)
root(ROOT-0, be-4)
nsubj(said-8, he-7)
parataxis(be-4, said-8)
prep_at(said-8, length-11)
mark(give-17, if-14)
nsubj(give-17, you-15)
aux(give-17, could-16)
dep(be-4, give-17)
iobj(give-17, them-18)
dobj(give-17, medicine-19)
aux(make-21, to-20)
vmod(medicine-19, make-21)
nsubj(miserable-27, them-22)
dep(miserable-27, happy-23)
advmod(miserable-27, when-24)
nsubj(miserable-27, they-25)
cop(miserable-27, are-26)
xcomp(make-21, miserable-27)

(ROOT
  (SINV (`` ``)
    (S
      (NP (RB Even) (DT the) (NN doctor))
      (VP (MD can)
        (VP (VB do)
          (PP
            (NP (DT a) (JJ little))
            (IN at)
            (NP (DT that))))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP (NNP Mr))
      (VP (VBN Shepherd) (: ;) (`` ``)
        (PP (IN for)
          (SBAR
            (WHADVP (WRB when))
            (S
              (PP (IN in)
                (NP (JJ good) (NN health)))
              (NP (NNS people))
              (VP (VBP are)
                (ADJP
                  (ADJP (RB much) (JJR happier))
                  (PP (IN than)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP they))
                        (VP (VBP are)
                          (ADJP (JJ ill)))))))))))))
    (. .) ('' '')))

advmod(doctor-4, Even-2)
det(doctor-4, the-3)
nsubj(do-6, doctor-4)
aux(do-6, can-5)
ccomp(returned-13, do-6)
det(little-8, a-7)
npadvmod(do-6, little-8)
prep_at(do-6, that-10)
root(ROOT-0, returned-13)
nsubj(returned-13, Mr-14)
vmod(Mr-14, Shepherd-15)
advmod(happier-26, when-19)
amod(health-22, good-21)
prep_in(happier-26, health-22)
nsubj(happier-26, people-23)
cop(happier-26, are-24)
advmod(happier-26, much-25)
prepc_for(Shepherd-15, happier-26)
advmod(ill-31, when-28)
nsubj(ill-31, they-29)
cop(ill-31, are-30)
prepc_than(happier-26, ill-31)

(ROOT
  (SINV (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (MD could)
            (VP (VB give)
              (NP (PRP them))
              (NP (WP what))))))
      (VP (MD would)
        (VP (VB make)
          (S
            (NP (PRP them))
            (ADJP (JJ good))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP are)
                  (ADJP (JJ bad))
                  (ADVP (RB then)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

mark(give-5, If-2)
nsubj(give-5, you-3)
aux(give-5, could-4)
csubj(make-9, give-5)
iobj(give-5, them-6)
dobj(give-5, what-7)
aux(make-9, would-8)
ccomp(said-19, make-9)
nsubj(bad-15, them-10)
dep(bad-15, good-11)
advmod(bad-15, when-12)
nsubj(bad-15, they-13)
cop(bad-15, are-14)
xcomp(make-9, bad-15)
advmod(bad-15, then-16)
root(ROOT-0, said-19)
nsubj(said-19, Willie-20)

(ROOT
  (S
    (INTJ (`` ``) (UH Ah))
    (, ,)
    (ADVP (RB there))
    (NP (PRP you))
    (VP (VBP have)
      (NP (PRP it)))
    (. !) ('' '')))

discourse(have-6, Ah-2)
advmod(have-6, there-4)
nsubj(have-6, you-5)
root(ROOT-0, have-6)
dobj(have-6, it-7)

(ROOT
  (NP (NNP rejoined) (NNP Mr) (NNP Shepherd) (. .)))

nn(Shepherd-3, rejoined-1)
nn(Shepherd-3, Mr-2)
root(ROOT-0, Shepherd-3)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is)
      (NP
        (NP (DT the)
          (ADJP (RB very) (JJS closest))
          (NN way))
        (PP (IN of)
          (NP (VBG helping) (NNS men)))))
    (. .) ('' '')))

nsubj(way-7, That-2)
cop(way-7, is-3)
det(way-7, the-4)
advmod(closest-6, very-5)
amod(way-7, closest-6)
root(ROOT-0, way-7)
amod(men-10, helping-9)
prep_of(way-7, men-10)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (NP (NN nobody))
      (VP (MD can)
        (VP (VB do)
          (NP
            (NP (DT that))
            (PRN (: --)
              (S
                (NP (NN nobody))
                (VP (MD can)
                  (VP (VB make)
                    (S
                      (NP (DT a) (JJ bad) (NN man))
                      (ADJP (JJ good))))))
              (: --))
            (PP (CC but)
              (NP (NNP God)))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

cc(do-5, But-2)
nsubj(do-5, nobody-3)
aux(do-5, can-4)
ccomp(said-20, do-5)
dobj(do-5, that-6)
nsubj(make-10, nobody-8)
aux(make-10, can-9)
dep(that-6, make-10)
det(man-13, a-11)
amod(man-13, bad-12)
nsubj(good-14, man-13)
xcomp(make-10, good-14)
prep(that-6, but-16)
pobj(but-16, God-17)
root(ROOT-0, said-20)
nsubj(said-20, Willie-21)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Certainly))
    (. .)))

root(ROOT-0, Certainly-2)

(ROOT
  (S (CC But)
    (S
      (NP (PRP He))
      (VP (VBZ uses)
        (NP (NNS medicines))))
    (: ;)
    (CC and)
    (S
      (NP (PRP He))
      (VP (VBZ sends)
        (NP (NNS people))
        (PP (RB about)
          (PP (IN with)
            (NP (PRP them)))
          (, ,) (RB just)
          (PP (IN like)
            (NP
              (NP
                (NP (DT the) (NNS doctors) (POS '))
                (NNS boys))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBD were)
                    (VP (VBG speaking)
                      (PP (IN of)))))))))))
    (. .)))

nsubj(uses-3, He-2)
root(ROOT-0, uses-3)
dobj(uses-3, medicines-4)
nsubj(sends-8, He-7)
conj_and(uses-3, sends-8)
dobj(sends-8, people-9)
advmod(sends-8, about-10)
prep_with(sends-8, them-12)
dep(sends-8, just-14)
det(doctors-17, the-16)
poss(boys-19, doctors-17)
prep_like(sends-8, boys-19)
prep_of(speaking-22, boys-19)
nsubj(speaking-22, you-20)
aux(speaking-22, were-21)
rcmod(boys-19, speaking-22)

(ROOT
  (SBARQ
    (WHNP (WP What) (RB else))
    (SQ (VBP am)
      (NP (NNP _) (NNP I) (NNP _))
      (PP
        (ADVP (RB here))
        (IN for)))
    (. ?)))

root(ROOT-0, What-1)
advmod(What-1, else-2)
cop(What-1, am-3)
nn(_-6, _-4)
nn(_-6, I-5)
nsubj(What-1, _-6)
advmod(for-8, here-7)
dep(What-1, for-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN been)
        (VP (VBG carrying)
          (NP (PRP$ His) (NNS medicines) (RB about))
          (PP (IN for)
            (NP (DT a) (JJ good) (JJ many) (NNS years)))
          (ADVP (RB now)))))
    (. .) ('' '')))

nsubj(carrying-4, I-1)
aux(carrying-4, 've-2)
aux(carrying-4, been-3)
root(ROOT-0, carrying-4)
poss(medicines-6, His-5)
dobj(carrying-4, medicines-6)
advmod(medicines-6, about-7)
det(years-12, a-9)
amod(years-12, good-10)
amod(years-12, many-11)
prep_for(carrying-4, years-12)
advmod(carrying-4, now-13)

(ROOT
  (S (`` ``) (RB Then)
    (VP (VBD _)
      (NP (PRP$ your) (JJ _) (NN work)
        (CC and)
        (RB not)
        (NP (PRP$ my) (NN father) (POS 's))
        (JJ comes) (NN nearest))
      (PP (TO to)
        (NP (NNS people)))
      (S
        (VP (TO to)
          (VP (VB help)
            (NP (PRP them))
            (PP (IN after)
              (NP (DT all)))))))
    (. !)))

advmod(_-3, Then-2)
root(ROOT-0, _-3)
poss(nearest-13, your-4)
amod(nearest-13, _-5)
nn(nearest-13, work-6)
dobj(_-3, not-8)
conj_and(nearest-13, not-8)
neg(nearest-13, not-8)
poss(father-10, my-9)
dep(nearest-13, father-10)
possessive(father-10, 's-11)
amod(nearest-13, comes-12)
dobj(_-3, nearest-13)
prep_to(_-3, people-15)
aux(help-17, to-16)
vmod(_-3, help-17)
dobj(help-17, them-18)
prep_after(help-17, all-20)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (PRP$ My) (NN father) (POS 's))
          (NN work))
        (PRN (, ,)
          (S
            (NP (PRP I))
            (VP (VBP see)))
          (, ,)))
      (VP (VBZ does) (RB n't)
        (VP (VB help)
          (S
            (NP (DT the) (JJ very) (NN man))
            (NP (PRP himself))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP
        (VP
          (ADVP (RB only))
          (VBZ helps)
          (NP (PRP$ his) (NN body)))
        (: --)
        (CC or)
        (VP
          (ADVP (IN at) (JJS best))
          (NP (PRP$ his) (NN happiness)))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBZ does) (RB n't)
        (VP (VB go)
          (ADJP (JJ deep) (RB enough)
            (S
              (VP (TO to)
                (VP (VB touch)
                  (NP (PRP himself)))))))))
    (. .)))

poss(father-2, My-1)
poss(work-4, father-2)
nsubj(help-11, work-4)
nsubj(see-7, I-6)
dep(work-4, see-7)
aux(help-11, does-9)
neg(help-11, n't-10)
root(ROOT-0, help-11)
det(man-14, the-12)
amod(man-14, very-13)
nsubj(himself-15, man-14)
xcomp(help-11, himself-15)
nsubj(helps-19, it-17)
advmod(helps-19, only-18)
parataxis(help-11, helps-19)
poss(body-21, his-20)
dobj(helps-19, body-21)
advmod(happiness-27, at-24)
pobj(at-24, best-25)
poss(happiness-27, his-26)
parataxis(help-11, happiness-27)
conj_or(helps-19, happiness-27)
nsubj(go-32, it-29)
aux(go-32, does-30)
neg(go-32, n't-31)
parataxis(help-11, go-32)
acomp(go-32, deep-33)
advmod(deep-33, enough-34)
aux(touch-36, to-35)
xcomp(deep-33, touch-36)
dobj(touch-36, himself-37)

(ROOT
  (S (CC But)
    (NP (PRP$ yours))
    (VP (VBZ helps)
      (NP (DT the) (JJ very) (NN man)))
    (. .)))

cc(helps-3, But-1)
nsubj(helps-3, yours-2)
root(ROOT-0, helps-3)
det(man-6, the-4)
amod(man-6, very-5)
dobj(helps-3, man-6)

(ROOT
  (S
    (NP (NNS Yours))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS best))
        (PP (IN after)
          (NP (DT all)))))
    (. .) ('' '')))

nsubj(best-4, Yours-1)
cop(best-4, is-2)
det(best-4, the-3)
root(ROOT-0, best-4)
prep_after(best-4, all-6)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP
      (NP (NNP Mr) (NNP Shepherd))
      (, ,)
      (NP (NN thoughtfully)))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
ccomp(returned-8, know-5)
root(ROOT-0, returned-8)
nn(Shepherd-10, Mr-9)
nsubj(returned-8, Shepherd-10)
appos(Shepherd-10, thoughtfully-12)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ depends)
      (PRN (, ,)
        (S
          (NP (PRP I))
          (VP (VBP think)))
        (, ,))
      (PP (IN on)
        (NP
          (NP (DT the) (NN kind))
          (PP (IN of)
            (NP
              (NP (NN preparation))
              (VP (VBN gone)
                (PP (IN through))))))))
    (. .) ('' '')))

nsubj(depends-3, It-2)
root(ROOT-0, depends-3)
nsubj(think-6, I-5)
parataxis(depends-3, think-6)
det(kind-10, the-9)
prep_on(depends-3, kind-10)
prep_of(kind-10, preparation-12)
vmod(preparation-12, gone-13)
prep(gone-13, through-14)

(ROOT
  (S (`` ``)
    (VP (VB Oh)
      (NP (UH yes)))
    (. !) ('' '')))

root(ROOT-0, Oh-2)
dobj(Oh-2, yes-3)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB go)
            (PP (IN through)
              (NP (DT the) (JJ theological) (NNS classes)))))))
    (. .)))

nsubj(had-3, You-2)
nsubj(go-5, You-2)
root(ROOT-0, had-3)
aux(go-5, to-4)
xcomp(had-3, go-5)
det(classes-9, the-7)
amod(classes-9, theological-8)
prep_through(go-5, classes-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (PP (IN of)
        (NP (NN course)))
      (VP (VB take)
        (NP (DT the) (JJ medical))))
    (. .) ('' '')))

nsubj(take-5, I-1)
aux(take-5, must-2)
prep_of(take-5, course-4)
root(ROOT-0, take-5)
det(medical-7, the-6)
dobj(take-5, medical-7)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (DT That))
        (VP (VBZ 's)
          (ADJP (JJ true))))
      (, ,)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBZ 's) (RB not)
          (ADJP (JJ true) (RB enough)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Shepherd))
    (. .)))

nsubj(true-4, That-2)
cop(true-4, 's-3)
ccomp(said-14, true-4)
nsubj(true-10, it-7)
cop(true-10, 's-8)
neg(true-10, not-9)
conj_but(true-4, true-10)
ccomp(said-14, true-10)
advmod(true-10, enough-11)
root(ROOT-0, said-14)
nn(Shepherd-16, Mr-15)
nsubj(said-14, Shepherd-16)

(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (MD would) (RB n't)
        (VP (VB make)
          (NP
            (NP (DT a) (NN fraction))
            (PP (IN of)
              (NP (DT the) (NN difference)))))))
    (NP (PRP I))
    (VP (VBP mean))
    (. .)))

nsubj(make-5, That-2)
aux(make-5, would-3)
neg(make-5, n't-4)
dep(mean-12, make-5)
det(fraction-7, a-6)
dobj(make-5, fraction-7)
det(difference-10, the-9)
prep_of(fraction-7, difference-10)
nsubj(mean-12, I-11)
root(ROOT-0, mean-12)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (ADVP (RB just)
        (NP (CD one) (NN preparation)))
      (ADJP (JJ essential)
        (PP (IN for)
          (NP
            (NP (DT a) (NN man))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (MD would)
                  (VP (VB carry)
                    (PP (IN about)
                      (NP
                        (NP (DT the) (JJS best) (NN sort))
                        (PP (IN of)
                          (NP (NNS medicines)))))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
advmod('s-2, just-3)
num(preparation-5, one-4)
pobj(just-3, preparation-5)
acomp('s-2, essential-6)
det(man-9, a-8)
prep_for(essential-6, man-9)
nsubj(carry-12, man-9)
aux(carry-12, would-11)
rcmod(man-9, carry-12)
det(sort-16, the-14)
amod(sort-16, best-15)
prep_about(carry-12, sort-16)
prep_of(sort-16, medicines-18)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (VB think)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBZ is)))))
    (. ?)))

aux(think-3, Can-1)
nsubj(think-3, you-2)
root(ROOT-0, think-3)
dobj(is-6, what-4)
nsubj(is-6, it-5)
ccomp(think-3, is-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (ADJP (JJ necessary)
        (PP (IN for)
          (NP (DT the) (JJ other) (NN sort)))))
    (. .) ('' '')))

nsubj(necessary-4, It-1)
cop(necessary-4, 's-2)
neg(necessary-4, not-3)
root(ROOT-0, necessary-4)
det(sort-8, the-6)
amod(sort-8, other-7)
prep_for(necessary-4, sort-8)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT The) (NN man))
      (VP (MD must)
        (VP (VB be)
          (ADJP (JJ good)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

det(man-3, The-2)
nsubj(good-6, man-3)
aux(good-6, must-4)
cop(good-6, be-5)
ccomp(said-9, good-6)
root(ROOT-0, said-9)
nsubj(said-9, Willie-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR (IN that)
        (S
          (VP (VBZ 's)
            (NP (PRP it))))))
    (. .) ('' '')))

nsubj(suppose-3, I-2)
root(ROOT-0, suppose-3)
mark(it-6, that-4)
cop(it-6, 's-5)
ccomp(suppose-3, it-6)

(ROOT
  (SINV (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ does) (RB n't)
        (VP (VB make)
          (NP (DT the) (NN difference))
          (ADVP (RB exactly)))))
    (, ,) ('' '')
    (VP (VBD returned))
    (NP (NNP Mr) (NNP Shepherd))
    (. .)))

nsubj(make-5, That-2)
aux(make-5, does-3)
neg(make-5, n't-4)
ccomp(returned-11, make-5)
det(difference-7, the-6)
dobj(make-5, difference-7)
advmod(make-5, exactly-8)
root(ROOT-0, returned-11)
nn(Shepherd-13, Mr-12)
nsubj(returned-11, Shepherd-13)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB as) (JJ necessary)
        (PP (IN for)
          (NP (DT a) (NN doctor))))
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ good)
              (PP (IN as)
                (PP (IN for)
                  (NP (DT a) (NN parson)))))))))
    (. .) ('' '')))

nsubj(necessary-5, It-2)
nsubj(good-11, It-2)
cop(necessary-5, is-3)
advmod(necessary-5, as-4)
root(ROOT-0, necessary-5)
det(doctor-8, a-7)
prep_for(necessary-5, doctor-8)
aux(good-11, to-9)
cop(good-11, be-10)
xcomp(necessary-5, good-11)
prepc_as_for(good-11, for-13)
det(parson-15, a-14)
pobj(good-11, parson-15)

(ROOT
  (S
    (S
      (NP (`` ``)
        (NP (NNP Yes))
        (, ,) ('' ''))
      (VP (VBD said)
        (NP (NNP Willie))))
    (: ;) (`` ``)
    (S (CC but)
      (SBAR (IN though)
        (S
          (NP (DT the) (NN doctor))
          (VP (VBD were)
            (NP (DT a) (JJ bad) (NN man)))))
      (, ,)
      (NP (PRP$ his) (NNS medicines))
      (VP (MD might)
        (VP (VB be)
          (ADJP (JJ good)))))
    (. .) ('' '')))

nsubj(said-5, Yes-2)
root(ROOT-0, said-5)
dobj(said-5, Willie-6)
cc(good-22, but-9)
mark(man-16, though-10)
det(doctor-12, the-11)
nsubj(man-16, doctor-12)
cop(man-16, were-13)
det(man-16, a-14)
amod(man-16, bad-15)
advcl(good-22, man-16)
poss(medicines-19, his-18)
nsubj(good-22, medicines-19)
aux(good-22, might-20)
cop(good-22, be-21)
parataxis(said-5, good-22)

(ROOT
  (S (`` ``)
    (ADVP (RB Not) (IN by))
    (NP (DT any))
    (VP (VBZ means)
      (ADJP (RB so) (JJ likely)
        (S
          (VP (TO to)
            (VP (VB be))))))
    (. !) ('' '')))

dep(by-3, Not-2)
advmod(means-5, by-3)
nsubj(means-5, any-4)
root(ROOT-0, means-5)
advmod(likely-7, so-6)
acomp(means-5, likely-7)
aux(be-9, to-8)
xcomp(likely-7, be-9)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NN parson)))
    (. .)))

root(ROOT-0, said-1)
det(parson-3, the-2)
dobj(said-1, parson-3)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (MD can)
      (ADVP (RB never))
      (VP (VB be)
        (ADJP (JJ sure))
        (SBAR (IN that)
          (S
            (NP
              (NP (NN anything))
              (SBAR
                (S
                  (NP (DT a) (JJ bad) (NN man))
                  (VP (VBZ has)
                    (S
                      (VP (TO to)
                        (VP (VB do)
                          (PP (IN with)))))))))
            (VP (MD will)
              (VP (VB be)
                (ADJP (JJ good))))))))
    (. .)))

nsubj(sure-6, You-2)
aux(sure-6, can-3)
neg(sure-6, never-4)
cop(sure-6, be-5)
root(ROOT-0, sure-6)
mark(good-18, that-7)
prep_with(do-14, anything-8)
nsubj(good-18, anything-8)
det(man-11, a-9)
amod(man-11, bad-10)
nsubj(has-12, man-11)
nsubj(do-14, man-11)
rcmod(anything-8, has-12)
aux(do-14, to-13)
xcomp(has-12, do-14)
aux(good-18, will-16)
cop(good-18, be-17)
ccomp(sure-6, good-18)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD may)
        (VP (VB be)
          (VP (, ,)
            (SBAR (IN because)
              (S
                (NP (DT no) (NN man))
                (VP (VBZ is) (RB all)
                  (ADJP (JJ bad)))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (VB be)
          (ADJP (JJ sure)
            (PP (IN of)
              (NP (PRP it)))))))
    (. .)))

nsubj(bad-10, It-1)
aux(bad-10, may-2)
aux(bad-10, be-3)
mark(bad-10, because-5)
neg(man-7, no-6)
nsubj(bad-10, man-7)
cop(bad-10, is-8)
advmod(bad-10, all-9)
root(ROOT-0, bad-10)
nsubj(sure-17, you-13)
aux(sure-17, ca-14)
neg(sure-17, n't-15)
cop(sure-17, be-16)
conj_but(bad-10, sure-17)
prep_of(sure-17, it-19)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (VP (VBG coming)
        (S
          (VP (VBG nearer)
            (NP (PRP it))
            (ADVP (RB now))))))
    (. .)))

nsubj(coming-3, We-1)
aux(coming-3, are-2)
root(ROOT-0, coming-3)
vmod(coming-3, nearer-4)
dobj(nearer-4, it-5)
advmod(nearer-4, now-6)

(ROOT
  (S
    (NP (NNP Might))
    (ADVP (RB n't))
    (NP
      (NP (DT the) (NN parson) (POS 's))
      (NNS medicines))
    (VP (VBP be)
      (ADJP (JJ good)
        (SBAR (IN if)
          (S
            (NP (PRP he))
            (VP (VBD were)
              (ADJP (JJ bad)
                (ADVP (RB just) (RB as) (RB well))
                (PP (IN as)
                  (NP (DT the) (NN doctor) (POS 's)))))))))
    (. ?) ('' '')))

nsubj(good-8, Might-1)
neg(good-8, n't-2)
det(parson-4, the-3)
poss(medicines-6, parson-4)
nsubj(good-8, medicines-6)
cop(good-8, be-7)
root(ROOT-0, good-8)
mark(bad-12, if-9)
nsubj(bad-12, he-10)
cop(bad-12, were-11)
ccomp(good-8, bad-12)
advmod(well-15, just-13)
advmod(well-15, as-14)
mwe(well-15, as-14)
advmod(bad-12, well-15)
det(doctor-18, the-17)
prep_as(bad-12, doctor-18)
possessive(doctor-18, 's-19)

(ROOT
  (SINV (`` ``)
    (S
      (SBAR (IN Less)
        (S
          (ADJP (JJ likely))
          (ADVP (RB still))))
      (, ,)
      (NP (PRP I))
      (VP (VBP think)))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

mark(likely-3, Less-2)
advcl(think-7, likely-3)
advmod(likely-3, still-4)
nsubj(think-7, I-6)
ccomp(said-10, think-7)
root(ROOT-0, said-10)
nsubj(said-10, Willie-11)

(ROOT
  (S (`` ``)
    (S
      (NP (DT The) (NNS words))
      (VP (MD might)
        (VP (VB be)
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (DT the) (JJ right) (NN sort)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (MD would)
        (VP (VB be)
          (PP (IN like)
            (NP
              (NP (NNS medicines))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP
                    (VP (VBD had)
                      (VP (VBN lain)
                        (PP (IN in)
                          (NP (PRP$ his) (NNS drawers)))))
                    (CC or)
                    (VP (VBD stood)
                      (PP (IN in)
                        (NP (PRP$ his) (NNS bottles)))))))))
          (SBAR (IN till)
            (S
              (NP (DT the) (NN good))
              (VP (VBD was)
                (ADVP (DT all) (IN out))
                (PP (IN of)
                  (NP (PRP them)))))))))
    (. .) ('' '')))

det(words-3, The-2)
nsubj(all-6, words-3)
aux(all-6, might-4)
cop(all-6, be-5)
root(ROOT-0, all-6)
det(sort-10, the-8)
amod(sort-10, right-9)
prep_of(all-6, sort-10)
nsubj(be-15, they-13)
aux(be-15, would-14)
conj_but(all-6, be-15)
prep_like(be-15, medicines-17)
nsubj(lain-20, medicines-17)
nsubj(stood-25, medicines-17)
aux(lain-20, had-19)
rcmod(medicines-17, lain-20)
poss(drawers-23, his-22)
prep_in(lain-20, drawers-23)
rcmod(medicines-17, stood-25)
conj_or(lain-20, stood-25)
poss(bottles-28, his-27)
prep_in(stood-25, bottles-28)
mark(was-32, till-29)
det(good-31, the-30)
nsubj(was-32, good-31)
advcl(be-15, was-32)
dep(was-32, all-33)
prep_out_of(was-32, them-36)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (VP (VBG coming)
          (ADVP (RB very) (RB near)
            (PP (TO to)
              (NP
                (NP (DT the) (NN difference))
                (PP (IN of)
                  (NP
                    (NP (NN preparation))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBD wanted)
                          (S
                            (VP (TO to)
                              (VP (VB point)
                                (PRT (RP out))
                                (PP (TO to)
                                  (NP (PRP you)))))))))))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Mr) (NNP Shepherd))
    (. .)))

nsubj(coming-4, You-2)
aux(coming-4, 're-3)
ccomp(said-21, coming-4)
advmod(coming-4, very-5)
det(difference-9, the-8)
prep_near_to(coming-4, difference-9)
prep_of(difference-9, preparation-11)
nsubj(wanted-13, I-12)
nsubj(point-15, I-12)
rcmod(preparation-11, wanted-13)
aux(point-15, to-14)
xcomp(wanted-13, point-15)
prt(point-15, out-16)
prep_to(point-15, you-18)
root(ROOT-0, said-21)
nn(Shepherd-23, Mr-22)
nsubj(said-21, Shepherd-23)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT this))
      (: :)
      (SBAR
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN physician))
              (PP (IN of)
                (NP
                  (NP (NNS men) (POS 's))
                  (JJ _) (NNS selves))))
            (VP
              (VP (VBZ _))
              (, ,)
              (VP
                (ADVP (RB commonly))
                (VBD called)
                (S
                  (NP (JJ _) (NNS souls))
                  (ADJP (JJ _))))
              (, ,)
              (VP (MD must)
                (VP (VB have)
                  (VP (VBN taken))))
              (CC and)
              (VP (MD must)
                (VP (VB keep)
                  (S
                    (VP (VBG taking)
                      (NP
                        (NP (DT the) (NN medicine))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBZ carries)
                              (PRT (RP about))
                              (PP (IN with)
                                (NP (PRP him))))))))))))))
        (: ;)
        (SBAR (IN while)
          (SBAR
            (X (DT the) (JJR less))
            (S
              (NP (DT the) (NN doctor))
              (VP (VBZ wants)
                (PP (IN of)
                  (NP
                    (NP (PRP$ his))
                    (X (DT the) (JJR better))))))))))
    (. .) ('' '')))

nsubj(this-4, It-2)
cop(this-4, is-3)
root(ROOT-0, this-4)
mark(_-14, that-6)
det(physician-8, the-7)
nsubj(_-14, physician-8)
nsubj(called-17, physician-8)
nsubj(taken-24, physician-8)
nsubj(keep-27, physician-8)
poss(selves-13, men-10)
amod(selves-13, _-12)
prep_of(physician-8, selves-13)
advcl(this-4, _-14)
parataxis(this-4, _-14)
advmod(called-17, commonly-16)
advcl(this-4, called-17)
parataxis(this-4, called-17)
conj_and(_-14, called-17)
amod(souls-19, _-18)
nsubj(_-20, souls-19)
xcomp(called-17, _-20)
aux(taken-24, must-22)
aux(taken-24, have-23)
advcl(this-4, taken-24)
parataxis(this-4, taken-24)
conj_and(_-14, taken-24)
aux(keep-27, must-26)
advcl(this-4, keep-27)
parataxis(this-4, keep-27)
conj_and(_-14, keep-27)
xcomp(keep-27, taking-28)
det(medicine-30, the-29)
dobj(taking-28, medicine-30)
nsubj(carries-32, he-31)
rcmod(medicine-30, carries-32)
prt(carries-32, about-33)
prep_with(carries-32, him-35)
dep(wants-42, while-37)
det(less-39, the-38)
dep(wants-42, less-39)
det(doctor-41, the-40)
nsubj(wants-42, doctor-41)
dep(_-14, wants-42)
prep_of(wants-42, his-44)
det(better-46, the-45)
dep(his-44, better-46)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP see) (, ,)
        (S
          (NP (PRP I))
          (VP (VB see)))))
    (, ,) ('' '')
    (VP (VBD cried))
    (NP
      (NP (NNP Willie))
      (, ,)
      (SBAR
        (WHNP (WP whom))
        (S
          (NP
            (NP
              (NP (DT a) (JJ fitting) (NN phrase))
              (, ,)
              (CC or)
              (NP (NN figure)))
            (, ,)
            (CC or)
            (NP
              (NP (NN form))
              (PP (IN of)
                (S
                  (VP (VBG expressing)
                    (NP (DT a) (NN thing))))))
            (, ,))
          (VP (VBD pleased)
            (ADVP (RB as) (RB much))
            (PP (IN as)
              (NP (DT a) (JJ clever) (NN machine)))
            (: --) (`` ``)
            (S
              (NP (PRP I))
              (VP (VB see)))))))
    (. !)))

nsubj(see-3, I-2)
ccomp(cried-9, see-3)
nsubj(see-6, I-5)
ccomp(see-3, see-6)
root(ROOT-0, cried-9)
nsubj(cried-9, Willie-10)
dobj(pleased-27, Willie-10)
det(phrase-15, a-13)
amod(phrase-15, fitting-14)
nsubj(pleased-27, phrase-15)
conj_or(phrase-15, figure-18)
nsubj(pleased-27, figure-18)
conj_or(phrase-15, form-21)
nsubj(pleased-27, form-21)
prepc_of(form-21, expressing-23)
det(thing-25, a-24)
dobj(expressing-23, thing-25)
rcmod(Willie-10, pleased-27)
advmod(much-29, as-28)
advmod(pleased-27, much-29)
det(machine-33, a-31)
amod(machine-33, clever-32)
prep_as(pleased-27, machine-33)
nsubj(see-37, I-36)
ccomp(pleased-27, see-37)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB all)
      (ADJP (JJ right)))
    (. !)))

nsubj(right-4, It-1)
cop(right-4, 's-2)
advmod(right-4, all-3)
root(ROOT-0, right-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP understand)
      (ADVP (RB now)))
    (. .) ('' '')))

nsubj(understand-2, I-1)
root(ROOT-0, understand-2)
advmod(understand-2, now-3)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (PRN
      (S
        (NP (NNP Mr) (NNP Shepherd))
        (VP (VBD went)
          (PRT (RP on)))))
    (, ,) (`` ``)
    (NP (PRP$ your) (NN father))
    (VP (VBZ carries)
      (PP (IN about)
        (NP
          (NP (DT both) (NNS sorts))
          (PP (IN of)
            (NP
              (NP (NNS medicines))
              (PP (IN in)
                (NP (PRP$ his) (NN basket))))))))
    (. .)))

cc(carries-13, But-2)
nn(Shepherd-6, Mr-5)
nsubj(went-7, Shepherd-6)
parataxis(carries-13, went-7)
prt(went-7, on-8)
poss(father-12, your-11)
nsubj(carries-13, father-12)
root(ROOT-0, carries-13)
det(sorts-16, both-15)
prep_about(carries-13, sorts-16)
prep_of(sorts-16, medicines-18)
poss(basket-21, his-20)
prep_in(medicines-18, basket-21)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP (VBZ is)
          (NP (PDT such) (DT a) (JJ healthy) (NN man))
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBP believe)
                (SBAR
                  (S
                    (NP (PRP he))
                    (ADVP (RB very) (RB seldom))
                    (VP (VBZ uses)
                      (NP
                        (NP (DT any))
                        (PP (IN of)
                          (NP (PRP$ his) (JJ own) (NNS medicines))))))))))))
      (: ;)
      (CC but)
      (S
        (NP (PRP he))
        (VP (VBZ is)
          (ADVP (RB always))
          (VP (VBG taking)
            (NP
              (NP (DT some))
              (PP (IN of)
                (NP (DT the) (JJ other) (NN sort))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ makes)
              (SBAR
                (S
                  (NP (PRP him))
                  (VP (VBP fit)
                    (S
                      (VP (TO to)
                        (VP (VB carry)
                          (S
                            (NP (PRP them))
                            (ADJP (IN about))))))))))))))
    (. .)))

nsubj(man-6, He-1)
cop(man-6, is-2)
predet(man-6, such-3)
det(man-6, a-4)
amod(man-6, healthy-5)
root(ROOT-0, man-6)
mark(believe-9, that-7)
nsubj(believe-9, I-8)
ccomp(man-6, believe-9)
nsubj(uses-13, he-10)
advmod(seldom-12, very-11)
advmod(uses-13, seldom-12)
ccomp(believe-9, uses-13)
dobj(uses-13, any-14)
poss(medicines-18, his-16)
amod(medicines-18, own-17)
prep_of(any-14, medicines-18)
nsubj(taking-24, he-21)
aux(taking-24, is-22)
advmod(taking-24, always-23)
conj_but(man-6, taking-24)
dobj(taking-24, some-25)
det(sort-29, the-27)
amod(sort-29, other-28)
prep_of(some-25, sort-29)
nsubj('s-33, that-32)
conj_and(man-6, 's-33)
nsubj(makes-35, what-34)
ccomp('s-33, makes-35)
nsubj(fit-37, him-36)
nsubj(carry-39, him-36)
ccomp(makes-35, fit-37)
aux(carry-39, to-38)
xcomp(fit-37, carry-39)
nsubj(about-41, them-40)
xcomp(carry-39, about-41)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ does)
      (ADJP
        (ADJP (RB far) (RBR more) (JJ good))
        (PP (IN among)
          (NP (DT the) (JJ sick))))
      (SBAR (IN than)
        (S
          (NP (PRP I))
          (VP (MD can)))))
    (. .)))

nsubj(good-5, He-1)
dep(good-5, does-2)
advmod(good-5, far-3)
advmod(good-5, more-4)
root(ROOT-0, good-5)
det(sick-8, the-7)
prep_among(good-5, sick-8)
mark(can-11, than-9)
nsubj(can-11, I-10)
advcl(good-5, can-11)

(ROOT
  (S
    (NP
      (NP (JJ Many))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP do) (RB n't)
            (VP (VB like)
              (NP (PRP$ my) (NN medicine)))))))
    (, ,)
    (VP (MD will)
      (ADVP (RB yet))
      (VP (VB take)
        (NP
          (NP (DT a) (JJ little))
          (PP (IN of)
            (NP (PRP it))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP$ your) (NN father))
            (VP (VBZ mixes)
              (NP (PRP it))
              (PP (IN with)
                (NP (PRP$ his)))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (PRP he))
                  (VP (VBZ has)
                    (NP
                      (NP (DT a) (JJ wonderful) (NN art))
                      (PP (IN in)
                        (S
                          (VP (VBG doing)))))))))))))
    (. .)))

nsubj(like-5, Many-1)
nsubj(take-11, Many-1)
aux(like-5, do-3)
neg(like-5, n't-4)
rcmod(Many-1, like-5)
poss(medicine-7, my-6)
dobj(like-5, medicine-7)
aux(take-11, will-9)
advmod(take-11, yet-10)
root(ROOT-0, take-11)
det(little-13, a-12)
dobj(take-11, little-13)
prep_of(little-13, it-15)
advmod(mixes-19, when-16)
poss(father-18, your-17)
nsubj(mixes-19, father-18)
advcl(take-11, mixes-19)
dobj(mixes-19, it-20)
prep_with(mixes-19, his-22)
mark(has-26, as-24)
nsubj(has-26, he-25)
advcl(mixes-19, has-26)
det(art-29, a-27)
amod(art-29, wonderful-28)
dobj(has-26, art-29)
prepc_in(art-29, doing-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hope)
      (PRN (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP$ your) (NN turn))
            (VP (VBZ comes) (, ,)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (MD will)
                    (VP (VB be)
                      (ADJP (JJ able)
                        (S
                          (VP (TO to)
                            (VP (VB help)
                              (S
                                (NP (DT the) (JJ very) (NN man))
                                (NP (PRP himself))))))))))))))
        (, ,))
      (SBAR (IN as)
        (S
          (NP (PRP$ your) (NN father))
          (VP (VBZ does)))))
    (. .) ('' '')))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
advmod(comes-7, when-4)
poss(turn-6, your-5)
nsubj(comes-7, turn-6)
parataxis(hope-2, comes-7)
nsubj(able-12, you-9)
nsubj(help-14, you-9)
aux(able-12, will-10)
cop(able-12, be-11)
ccomp(comes-7, able-12)
aux(help-14, to-13)
xcomp(able-12, help-14)
det(man-17, the-15)
amod(man-17, very-16)
nsubj(himself-18, man-17)
xcomp(help-14, himself-18)
mark(does-23, as-20)
poss(father-22, your-21)
nsubj(does-23, father-22)
advcl(hope-2, does-23)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (NP (PRP me))
              (VP (TO to)
                (VP (VB be)
                  (NP
                    (NP (DT a) (NN doctor))
                    (PP (IN of)
                      (S
                        (VP (VBG _)
                          (NP
                            (NP (PRP$ your) (JJ _) (NN kind))
                            (, ,)
                            (NP (NNP Mr) (NNP Shepherd))))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(want-4, you-3)
ccomp(Do-2, want-4)
dobj(want-4, me-5)
nsubj(doctor-9, me-5)
aux(doctor-9, to-6)
cop(doctor-9, be-7)
det(doctor-9, a-8)
xcomp(want-4, doctor-9)
prepc_of(doctor-9, _-11)
poss(kind-14, your-12)
amod(kind-14, _-13)
dobj(_-11, kind-14)
nn(Shepherd-17, Mr-16)
appos(kind-14, Shepherd-17)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (RB very) (JJ wrong))
        (NN thing)
        (S
          (VP (TO to)
            (VP (VB take)
              (PRT (RP up))
              (NP (DT that) (NN basket))
              (PP (IN without)
                (S
                  (VP (VBG being)
                    (VP (VBN told)
                      (PP (IN by)
                        (NP
                          (NP (PRP Him))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBZ makes)
                                (NP (DT the) (NN medicine))))))))))))))))
    (. .)))

nsubj(thing-6, It-1)
cop(thing-6, is-2)
det(thing-6, a-3)
advmod(wrong-5, very-4)
amod(thing-6, wrong-5)
root(ROOT-0, thing-6)
aux(take-8, to-7)
vmod(thing-6, take-8)
prt(take-8, up-9)
det(basket-11, that-10)
dobj(take-8, basket-11)
auxpass(told-14, being-13)
prepc_without(take-8, told-14)
agent(told-14, Him-16)
nsubj(makes-18, Him-16)
rcmod(Him-16, makes-18)
det(medicine-20, the-19)
dobj(makes-18, medicine-20)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP He))
          (VP (VBZ wants)
            (NP (DT a) (NN man)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (ADVP (RB so)))))))))
      (, ,)
      (NP (PRP He))
      (VP (MD will)
        (VP (VB let)
          (S
            (NP (PRP him))
            (VP (VB know))))))
    (: --)
    (S
      (NP (PRP He))
      (VP (MD will)
        (VP
          (VP (VB call)
            (NP (PRP him)))
          (CC and)
          (VP (VB tell)
            (S
              (NP (PRP him))
              (VP (TO to)
                (VP (VB do)
                  (NP (PRP it)))))))))
    (. .)))

mark(wants-3, If-1)
nsubj(wants-3, He-2)
advcl(let-12, wants-3)
det(man-5, a-4)
dobj(wants-3, man-5)
aux(do-7, to-6)
vmod(man-5, do-7)
advmod(do-7, so-8)
nsubj(let-12, He-10)
aux(let-12, will-11)
root(ROOT-0, let-12)
nsubj(know-14, him-13)
ccomp(let-12, know-14)
nsubj(call-18, He-16)
nsubj(tell-21, He-16)
aux(call-18, will-17)
parataxis(let-12, call-18)
dobj(call-18, him-19)
parataxis(let-12, tell-21)
conj_and(call-18, tell-21)
dobj(tell-21, him-22)
nsubj(do-24, him-22)
aux(do-24, to-23)
xcomp(tell-21, do-24)
dobj(do-24, it-25)

(ROOT
  (S (CC But)
    (S
      (NP (NN everybody))
      (VP (MD ought)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (DT the) (NN medicine)))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (NN everybody))
            (VP (VBZ needs)
              (NP (PRP it)))))))
    (: ;)
    (CC and)
    (S
      (NP (DT the) (JJ happy) (NN thing))
      (VP (VBZ is) (, ,)
        (ADVP (IN that))
        (, ,)
        (SBAR (IN as)
          (S
            (SBAR (RB soon) (IN as)
              (S
                (NP (NN anyone))
                (VP (VBZ has)
                  (VP (VBN found)
                    (SBAR
                      (WHADJP (WRB how) (JJ good))
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (PRN (: --)
                            (S
                              (NP
                                (NP (NN food)
                                  (CC and)
                                  (NN wine))
                                (CC and)
                                (NP (DT all) (JJ upholding) (NNS things)))
                              (PP (IN in)
                                (NP (CD one))))
                            (: --)))))))))
            (NP (PRP he))
            (VP (VBZ becomes)
              (ADJP (DT both) (JJ able)
                (CC and)
                (JJ anxious))
              (S
                (VP (TO to)
                  (VP (VB give)
                    (NP (PRP it))
                    (PP (TO to)
                      (NP (NNS others)))))))))))
    (. .)))

nsubj(ought-3, everybody-2)
nsubj(take-5, everybody-2)
root(ROOT-0, ought-3)
aux(take-5, to-4)
xcomp(ought-3, take-5)
det(medicine-7, the-6)
dobj(take-5, medicine-7)
mark(needs-11, for-9)
nsubj(needs-11, everybody-10)
advcl(ought-3, needs-11)
dobj(needs-11, it-12)
det(thing-17, the-15)
amod(thing-17, happy-16)
nsubj(is-18, thing-17)
conj_and(ought-3, is-18)
advmod(is-18, that-20)
mark(becomes-44, as-22)
advmod(found-27, soon-23)
mark(found-27, as-24)
nsubj(found-27, anyone-25)
aux(found-27, has-26)
advcl(becomes-44, found-27)
advmod(good-29, how-28)
dep(is-31, good-29)
nsubj(is-31, it-30)
ccomp(found-27, is-31)
parataxis(is-31, food-33)
parataxis(is-31, wine-35)
conj_and(food-33, wine-35)
det(things-39, all-37)
amod(things-39, upholding-38)
parataxis(is-31, things-39)
conj_and(food-33, things-39)
dep(food-33, in-40)
pobj(in-40, one-41)
nsubj(becomes-44, he-43)
nsubj(give-50, he-43)
advcl(is-18, becomes-44)
preconj(able-46, both-45)
acomp(becomes-44, able-46)
acomp(becomes-44, anxious-48)
conj_and(able-46, anxious-48)
aux(give-50, to-49)
xcomp(becomes-44, give-50)
dobj(give-50, it-51)
prep_to(give-50, others-53)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD would)
          (VP (VB help)
            (NP (NNS people))
            (ADVP
              (ADVP (RB as) (RB much))
              (SBAR (IN as)
                (S
                  (NP (PRP$ your) (NN father))
                  (VP (VBZ does)))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB begin)
        (PP (IN by)
          (S
            (VP (VBG taking)
              (S
                (NP
                  (NP (DT some))
                  (PP (IN of)
                    (NP (DT the) (JJ real) (NN medicine))))
                (NP (PRP yourself))))))))
    (. .) ('' '')))

mark(help-4, If-1)
nsubj(help-4, you-2)
aux(help-4, would-3)
advcl(begin-15, help-4)
dobj(help-4, people-5)
advmod(much-7, as-6)
advmod(help-4, much-7)
mark(does-11, as-8)
poss(father-10, your-9)
nsubj(does-11, father-10)
advcl(much-7, does-11)
ccomp(much-7, does-11)
nsubj(begin-15, you-13)
aux(begin-15, must-14)
root(ROOT-0, begin-15)
prepc_by(begin-15, taking-17)
nsubj(yourself-23, some-18)
det(medicine-22, the-20)
amod(medicine-22, real-21)
prep_of(some-18, medicine-22)
xcomp(taking-17, yourself-23)

(ROOT
  (S
    (NP (DT This) (NN conversation))
    (VP (VBD gave)
      (NP (NNP Willie))
      (NP (DT a) (JJ good) (NN deal)
        (S
          (VP (TO to)
            (VP (VB think)
              (PRT (RP about)))))))
    (. .)))

det(conversation-2, This-1)
nsubj(gave-3, conversation-2)
root(ROOT-0, gave-3)
iobj(gave-3, Willie-4)
det(deal-7, a-5)
amod(deal-7, good-6)
dobj(gave-3, deal-7)
aux(think-9, to-8)
vmod(deal-7, think-9)
prt(think-9, about-10)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD had)
      (NP (JJ much) (NN need)
        (S
          (VP (TO to)
            (VP (VB think)
              (PP (IN about)
                (NP (PRP it)))))))
      (, ,)
      (SBAR (IN for)
        (S
          (PP
            (ADVP (RB soon))
            (IN after)
            (NP (DT this)))
          (NP (PRP he))
          (VP
            (VP (VBD left)
              (NP
                (NP (PRP$ his) (NN father) (POS 's))
                (NN house))
              (PP (IN for)
                (NP
                  (NP (DT the) (JJ first) (NN time))
                  (PP (IN in)
                    (NP (PRP$ his) (NN life))))))
            (, ,)
            (CC and)
            (VP (VBD went)
              (PP (TO to)
                (NP (DT a) (JJ great) (NN town)))))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB receive)
            (S
              (NP (EX there))
              (NP
                (NP (DT a) (JJ little) (JJ further) (NN preparation))
                (PP (IN for)
                  (NP (NN college)))))))))
    (. .)))

cc(had-3, And-1)
nsubj(had-3, he-2)
root(ROOT-0, had-3)
amod(need-5, much-4)
dobj(had-3, need-5)
aux(think-7, to-6)
vmod(need-5, think-7)
prep_about(think-7, it-9)
mark(left-16, for-11)
advmod(left-16, soon-12)
prep_after(left-16, this-14)
nsubj(left-16, he-15)
nsubj(went-30, he-15)
advcl(had-3, left-16)
poss(father-18, his-17)
poss(house-20, father-18)
dobj(left-16, house-20)
det(time-24, the-22)
amod(time-24, first-23)
prep_for(left-16, time-24)
poss(life-27, his-26)
prep_in(time-24, life-27)
advcl(had-3, went-30)
conj_and(left-16, went-30)
det(town-34, a-32)
amod(town-34, great-33)
prep_to(went-30, town-34)
aux(receive-37, to-36)
vmod(had-3, receive-37)
expl(preparation-42, there-38)
nsubj(preparation-42, there-38)
det(preparation-42, a-39)
amod(preparation-42, little-40)
amod(preparation-42, further-41)
xcomp(receive-37, preparation-42)
prep_for(preparation-42, college-44)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ next) (NN year))
      (SBAR
        (S
          (NP (PRP he))
          (VP
            (VP (VBD gained)
              (NP
                (NP (DT a) (NN scholarship))
                (, ,)
                (CC or)
                (PRN (, ,)
                  (SBAR (IN as)
                    (S
                      (NP (PRP they))
                      (VP (VBP call)
                        (S
                          (NP (PRP it))
                          (NP (EX there))))))
                  (, ,))
                (NP (DT a)
                  (ADJP (RB _) (JJ bursary))
                  (NN _))))
            (, ,)
            (CC and)
            (VP (VBD was)
              (ADVP (IN at) (RB once)))))))
    (ADVP (RB fully))
    (VP (VBD occupied)
      (PP (IN with)
        (NP (NNS classics)
          (CC and)
          (NNS mathematics)))
      (, ,)
      (S
        (VP (VBG hoping) (, ,)
          (ADVP (RB however))
          (, ,)
          (NP (DT the) (JJ next) (NN year))
          (, ,)
          (S
            (VP (TO to)
              (VP (VB combine)
                (PP (IN with)
                  (NP (PRP them)))
                (NP
                  (NP (JJ certain) (JJ scientific) (NNS studies))
                  (VP (VBG bearing)
                    (ADVP (RBR less) (RB indirectly))
                    (PP (IN upon)
                      (NP
                        (NP (DT the) (NNS duties))
                        (PP (IN of)
                          (NP (DT the) (JJ medical) (NN man)))))))))))))
    (. .)))

det(year-3, The-1)
amod(year-3, next-2)
nsubj(occupied-27, year-3)
nsubj(gained-5, he-4)
nsubj(was-23, he-4)
rcmod(year-3, gained-5)
det(scholarship-7, a-6)
dobj(gained-5, scholarship-7)
mark(call-13, as-11)
nsubj(call-13, they-12)
dep(scholarship-7, call-13)
nsubj(there-15, it-14)
xcomp(call-13, there-15)
det(_-20, a-17)
advmod(bursary-19, _-18)
amod(_-20, bursary-19)
dobj(gained-5, _-20)
conj_or(scholarship-7, _-20)
rcmod(year-3, was-23)
conj_and(gained-5, was-23)
advmod(was-23, at-24)
advmod(at-24, once-25)
advmod(occupied-27, fully-26)
root(ROOT-0, occupied-27)
prep_with(occupied-27, classics-29)
prep_with(occupied-27, mathematics-31)
conj_and(classics-29, mathematics-31)
xcomp(occupied-27, hoping-33)
advmod(hoping-33, however-35)
det(year-39, the-37)
amod(year-39, next-38)
tmod(hoping-33, year-39)
aux(combine-42, to-41)
vmod(hoping-33, combine-42)
prep_with(combine-42, them-44)
amod(studies-47, certain-45)
amod(studies-47, scientific-46)
dobj(combine-42, studies-47)
vmod(studies-47, bearing-48)
advmod(indirectly-50, less-49)
advmod(bearing-48, indirectly-50)
det(duties-53, the-52)
prep_upon(bearing-48, duties-53)
det(man-57, the-55)
amod(man-57, medical-56)
prep_of(duties-53, man-57)

(ROOT
  (NP (NNP CHAPTER) (NNP XX) (. .)))

nn(XX-2, CHAPTER-1)
root(ROOT-0, XX-2)

(ROOT
  (S
    (NP (NNP HOW) (NNP WILLIE) (NNP DID) (NNP HIS))
    (VP (VBP BEST)
      (S
        (VP (TO TO)
          (VP (VB MAKE)
            (NP
              (NP (DT A) (NN BIRD))
              (PP (IN OF)
                (NP (NNP AGNES))))))))
    (. .)))

nn(HIS-4, HOW-1)
nn(HIS-4, WILLIE-2)
nn(HIS-4, DID-3)
nsubj(BEST-5, HIS-4)
nsubj(MAKE-7, HIS-4)
root(ROOT-0, BEST-5)
aux(MAKE-7, TO-6)
xcomp(BEST-5, MAKE-7)
det(BIRD-9, A-8)
dobj(MAKE-7, BIRD-9)
prep_of(BIRD-9, AGNES-11)

(ROOT
  (S
    (S
      (PP (IN During)
        (NP (DT the) (NN time)))
      (NP (PRP he))
      (VP (VBD was)
        (PP (IN at)
          (NP (NN college)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD did)
      (ADVP (RB often))
      (NP (VB think)
        (SBAR
          (WHPP (IN of)
            (WHNP (WP what)))
          (S
            (NP (NNP Mr) (NNP Shepherd))
            (VP (VBD had)
              (VP (VBN said)
                (PP (TO to)
                  (NP (PRP him)))))))))
    (. .)))

det(time-3, the-2)
prep_during(was-5, time-3)
nsubj(was-5, he-4)
ccomp(did-10, was-5)
prep_at(was-5, college-7)
nsubj(did-10, he-9)
root(ROOT-0, did-10)
advmod(did-10, often-11)
dobj(did-10, think-12)
prep_of(said-18, what-14)
nn(Shepherd-16, Mr-15)
nsubj(said-18, Shepherd-16)
aux(said-18, had-17)
dep(think-12, said-18)
prep_to(said-18, him-20)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP he))
          (VP (VBD was)
            (VP (VBN tempted)
              (PP (TO to)
                (NP (DT any) (NN self-indulgence)))))))
      (, ,)
      (NP (DT the) (NN thought))
      (VP (MD would)
        (ADVP (RB always))
        (VP (VB rise)
          (SBAR (IN that)
            (S
              (NP (DT this))
              (VP (VBD was) (RB not)
                (NP (DT the) (NN way)
                  (S
                    (VP (TO to)
                      (VP (VB become)
                        (ADJP (JJ able)
                          (S
                            (VP (TO to)
                              (VP (VB help)
                                (NP
                                  (NP (NNS people))
                                  (, ,) (RB especially)
                                  (NP
                                    (NP (DT the) (JJ real) (NNS selves))
                                    (PP (IN of)
                                      (NP (PRP them)))))))))))))))))))
    (: ;)
    (CC and)
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB when))
        (FRAG
          (PP (IN amongst)
            (NP (DT the) (JJ medical) (NNS students)))))
      (, ,)
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP (VB help)
          (S
            (VP (VBG thinking)
              (SBAR
                (WHADJP (WRB how) (JJ much))
                (S
                  (NP
                    (NP
                      (NP (JJR better) (NNS doctors))
                      (NP (DT some)))
                    (PP (IN of)
                      (NP (PRP them))))
                  (VP (MD would)
                    (VP (VB make)
                      (SBAR (IN if)
                        (S
                          (NP (PRP they))
                          (VP (MD would)
                            (ADVP (CC but))
                            (VP (VB try)
                              (NP
                                (NP (DT the) (NN medicine))
                                (PP (IN of)
                                  (NP
                                    (NP (DT the) (JJ other) (NN basket))
                                    (PP (IN for)
                                      (NP (PRP themselves)))))))))))))))))))
    (. .)))

advmod(tempted-4, When-1)
nsubjpass(tempted-4, he-2)
auxpass(tempted-4, was-3)
advcl(rise-13, tempted-4)
det(self-indulgence-7, any-6)
prep_to(tempted-4, self-indulgence-7)
det(thought-10, the-9)
nsubj(rise-13, thought-10)
aux(rise-13, would-11)
advmod(rise-13, always-12)
root(ROOT-0, rise-13)
mark(way-19, that-14)
nsubj(way-19, this-15)
cop(way-19, was-16)
neg(way-19, not-17)
det(way-19, the-18)
ccomp(rise-13, way-19)
aux(become-21, to-20)
vmod(way-19, become-21)
acomp(become-21, able-22)
aux(help-24, to-23)
xcomp(able-22, help-24)
dobj(help-24, people-25)
advmod(people-25, especially-27)
det(selves-30, the-28)
amod(selves-30, real-29)
dep(people-25, selves-30)
prep_of(selves-30, them-32)
advmod(amongst-37, when-36)
advcl(help-45, amongst-37)
det(students-40, the-38)
amod(students-40, medical-39)
pobj(amongst-37, students-40)
nsubj(help-45, he-42)
aux(help-45, could-43)
neg(help-45, not-44)
conj_and(rise-13, help-45)
xcomp(help-45, thinking-46)
advmod(much-48, how-47)
dep(make-55, much-48)
amod(doctors-50, better-49)
nsubj(make-55, doctors-50)
dep(doctors-50, some-51)
prep_of(doctors-50, them-53)
aux(make-55, would-54)
ccomp(thinking-46, make-55)
mark(try-60, if-56)
nsubj(try-60, they-57)
aux(try-60, would-58)
advmod(try-60, but-59)
advcl(make-55, try-60)
det(medicine-62, the-61)
dobj(try-60, medicine-62)
det(basket-66, the-64)
amod(basket-66, other-65)
prep_of(medicine-62, basket-66)
prep_for(basket-66, themselves-68)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD thought)
        (NP (DT this))
        (ADVP (RB especially))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD saw)
              (SBAR (IN that)
                (S
                  (NP (PRP they))
                  (VP
                    (VP (VBD cared)
                      (NP (NN nothing))
                      (PP (IN for)
                        (NP (PRP$ their) (NNS patients))))
                    (, ,)
                    (CC neither)
                    (VP (VBD had)
                      (NP (DT any) (NN desire)
                        (S
                          (VP (TO to)
                            (VP (VB take)
                              (NP (DT a) (NN part))
                              (PP (IN in)
                                (NP
                                  (NP (DT the) (JJ general) (NN business))
                                  (PP (IN for)
                                    (NP
                                      (NP (DT the) (NN work) (POS 's))
                                      (NN sake)))))))))))))))))
      (, ,)
      (CC but)
      (VP
        (ADVP (RB only))
        (VBD wanted)
        (NP (DT a) (NN practice))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (MD might)
              (VP (VB make)
                (NP (DT a) (NN living))))))))
    (. .)))

nsubj(thought-2, He-1)
nsubj(wanted-36, He-1)
root(ROOT-0, thought-2)
dobj(thought-2, this-3)
advmod(thought-2, especially-4)
advmod(saw-7, when-5)
nsubj(saw-7, he-6)
advcl(thought-2, saw-7)
mark(cared-10, that-8)
nsubj(cared-10, they-9)
ccomp(saw-7, cared-10)
dobj(cared-10, nothing-11)
poss(patients-14, their-13)
prep_for(cared-10, patients-14)
dep(cared-10, neither-16)
conj(cared-10, had-17)
det(desire-19, any-18)
dobj(had-17, desire-19)
aux(take-21, to-20)
vmod(desire-19, take-21)
det(part-23, a-22)
dobj(take-21, part-23)
det(business-27, the-25)
amod(business-27, general-26)
prep_in(take-21, business-27)
det(work-30, the-29)
poss(sake-32, work-30)
prep_for(business-27, sake-32)
advmod(wanted-36, only-35)
conj_but(thought-2, wanted-36)
det(practice-38, a-37)
dobj(wanted-36, practice-38)
mark(make-42, that-39)
nsubj(make-42, they-40)
aux(make-42, might-41)
ccomp(wanted-36, make-42)
det(living-44, a-43)
dobj(make-42, living-44)

(ROOT
  (S (IN For)
    (NP (JJ such))
    (VP (VBP are)
      (ADJP (RB nearly) (RB as) (JJ unfit)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (NNS healers))
                (PP (IN of)
                  (NP (DT the) (NN body))))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (JJ mere) (JJ professional) (NN clergymen))
                  (VP (TO to)
                    (VP (VB be)
                      (NP
                        (NP (NNS healers))
                        (PP (IN of)
                          (NP
                            (NP (VBN broken) (NNS hearts))
                            (CC and)
                            (NP (VBN wounded) (NNS minds))))))))))))))
    (. .)))

dep(unfit-6, For-1)
nsubj(unfit-6, such-2)
nsubj(healers-9, such-2)
cop(unfit-6, are-3)
advmod(unfit-6, nearly-4)
advmod(unfit-6, as-5)
root(ROOT-0, unfit-6)
aux(healers-9, to-7)
cop(healers-9, be-8)
xcomp(unfit-6, healers-9)
det(body-12, the-11)
prep_of(healers-9, body-12)
mark(healers-20, as-14)
amod(clergymen-17, mere-15)
amod(clergymen-17, professional-16)
nsubj(healers-20, clergymen-17)
aux(healers-20, to-18)
cop(healers-20, be-19)
advcl(healers-9, healers-20)
xcomp(healers-9, healers-20)
amod(hearts-23, broken-22)
prep_of(healers-20, hearts-23)
amod(minds-26, wounded-25)
prep_of(healers-20, minds-26)
conj_and(hearts-23, minds-26)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB do)
          (S
            (NP (DT a) (NN man))
            (ADJP (JJ good)
              (PP (IN in)
                (NP (DT any) (NN way))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB sympathise)
        (PP (IN with)
          (NP
            (NP (PRP him))
            (: --)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP
                  (VP (VBZ is))
                  (, ,)
                  (VP (VBP know)
                    (SBAR
                      (S
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (S
                              (NP (PRP he))
                              (VP
                                (VP (VBZ feels))
                                (, ,)
                                (CC and)
                                (VP (VBP reflect)
                                  (NP
                                    (NP (DT the) (NN feeling))
                                    (PP (IN in)
                                      (NP (PRP$ your) (JJ own) (NN mirror)))))))
                            (: ;)
                            (CC and)
                            (S
                              (S
                                (VP (TO to)
                                  (VP (VB be)
                                    (NP (DT a) (JJ good) (NN doctor)))))
                              (, ,)
                              (NP (PRP one))
                              (VP (MD must)
                                (VP (VB love)
                                  (S
                                    (VP (TO to)
                                      (VP (VB heal)))))))))
                        (: ;)
                        (S
                          (VP (MD must)
                            (VP
                              (VP (VB honour)
                                (NP
                                  (NP (DT the) (NN art))
                                  (PP (IN of)
                                    (NP (DT the) (NN physician)))))
                              (CC and)
                              (VP (VB rejoice)
                                (PP (IN in)
                                  (NP (PRP it)))))))
                        (: ;)
                        (VP (MD must)
                          (VP (VB give)
                            (NP (PRP himself))
                            (PP (TO to)
                              (NP (PRP it))))))))
                  (, ,)
                  (SBAR (IN that)
                    (S
                      (NP (PRP he))
                      (VP (MD may)
                        (VP (VB learn)
                          (NP
                            (NP (DT all))
                            (PP (IN of)
                              (NP (PRP it)))))))))))))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD can))))
        (: --)
        (PP (IN from)
          (NP
            (NP (PRP$ its) (NN root))
            (PP (IN of)
              (NP (NN love)))))
        (PP (TO to)
          (NP
            (NP
              (NP (PRP$ its) (NNS branches))
              (PP (IN of)
                (NP (NN theory))))
            (, ,)
            (CC and)
            (NP
              (NP (PRP$ its) (NNS leaves)
                (CC and)
                (NNS fruits))
              (PP (IN of)
                (NP (NN healing))))))))
    (. .)))

aux(do-2, To-1)
advcl(sympathise-12, do-2)
det(man-4, a-3)
nsubj(good-5, man-4)
xcomp(do-2, good-5)
det(way-8, any-7)
prep_in(good-5, way-8)
nsubj(sympathise-12, you-10)
aux(sympathise-12, must-11)
root(ROOT-0, sympathise-12)
prep_with(sympathise-12, him-14)
nsubj(is-17, him-14)
rcmod(him-14, is-17)
dep(is-17, know-19)
dep(feels-22, what-20)
nsubj(feels-22, he-21)
nsubj(reflect-25, he-21)
csubj(give-59, feels-22)
conj_and(feels-22, reflect-25)
csubj(give-59, reflect-25)
det(feeling-27, the-26)
dobj(reflect-25, feeling-27)
poss(mirror-31, your-29)
amod(mirror-31, own-30)
prep_in(feeling-27, mirror-31)
aux(doctor-38, to-34)
cop(doctor-38, be-35)
det(doctor-38, a-36)
amod(doctor-38, good-37)
advcl(love-42, doctor-38)
nsubj(love-42, one-40)
nsubj(heal-44, one-40)
aux(love-42, must-41)
conj_and(feels-22, love-42)
csubj(give-59, love-42)
aux(heal-44, to-43)
xcomp(love-42, heal-44)
aux(honour-47, must-46)
csubj(give-59, honour-47)
parataxis(give-59, honour-47)
det(art-49, the-48)
dobj(honour-47, art-49)
det(physician-52, the-51)
prep_of(art-49, physician-52)
conj_and(honour-47, rejoice-54)
csubj(give-59, rejoice-54)
parataxis(give-59, rejoice-54)
prep_in(rejoice-54, it-56)
aux(give-59, must-58)
ccomp(know-19, give-59)
dobj(give-59, himself-60)
prep_to(give-59, it-62)
mark(learn-67, that-64)
nsubj(learn-67, he-65)
aux(learn-67, may-66)
ccomp(is-17, learn-67)
dobj(learn-67, all-68)
prep_of(all-68, it-70)
mark(can-73, that-71)
nsubj(can-73, he-72)
ccomp(sympathise-12, can-73)
poss(root-77, its-76)
prep_from(sympathise-12, root-77)
prep_of(root-77, love-79)
poss(branches-82, its-81)
prep_to(sympathise-12, branches-82)
prep_of(branches-82, theory-84)
poss(leaves-88, its-87)
prep_to(sympathise-12, leaves-88)
conj_and(branches-82, leaves-88)
conj_and(branches-82, fruits-90)
conj_and(leaves-88, fruits-90)
prep_of(leaves-88, healing-92)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB always))
    (VP (VBD came)
      (NP (NN home))
      (PP (TO to)
        (NP (NNP Priory) (NNPS Leas)))
      (PP (IN for)
        (NP
          (NP (DT the) (NN summer) (NNS intervals))
          (, ,)
          (SBAR
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (MD may)
                  (VP (VB be)
                    (ADJP (JJ sure)
                      (SBAR
                        (S
                          (NP (EX there))
                          (VP (VBD was)
                            (NP
                              (NP (JJ great) (VBG rejoicing))
                              (: --)
                              (NP
                                (NP (JJS loudest))
                                (PP (IN on)
                                  (NP
                                    (NP (DT the) (NN part))
                                    (PP (IN of)
                                      (NP (NNP Agnes)))))))))))))))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD was) (RB then)
                  (NP (PRP$ his) (JJ constant) (NN companion)))))
            (, ,)
            (ADVP (RB as) (RB much) (RB so))
            (, ,)
            (ADVP (IN at) (JJS least))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP she))
                (VP (VBD was)
                  (VP (VBN allowed)))))))))
    (. .)))

nsubj(came-3, He-1)
advmod(came-3, always-2)
root(ROOT-0, came-3)
dobj(came-3, home-4)
nn(Leas-7, Priory-6)
prep_to(came-3, Leas-7)
det(intervals-11, the-9)
nn(intervals-11, summer-10)
prep_for(came-3, intervals-11)
nsubj(companion-35, intervals-11)
advmod(sure-17, when-13)
nsubj(sure-17, you-14)
aux(sure-17, may-15)
cop(sure-17, be-16)
rcmod(intervals-11, sure-17)
expl(was-19, there-18)
ccomp(sure-17, was-19)
nsubj(was-19, great-20)
amod(great-20, rejoicing-21)
dep(great-20, loudest-23)
det(part-26, the-25)
prep_on(loudest-23, part-26)
prep_of(part-26, Agnes-28)
cop(companion-35, was-31)
advmod(companion-35, then-32)
poss(companion-35, his-33)
amod(companion-35, constant-34)
dep(sure-17, companion-35)
advmod(so-39, as-37)
advmod(so-39, much-38)
advmod(sure-17, so-39)
advmod(sure-17, at-41)
pobj(at-41, least-42)
mark(allowed-47, as-44)
nsubjpass(allowed-47, she-45)
auxpass(allowed-47, was-46)
dep(sure-17, allowed-47)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP
        (VP (VBD saw)
          (NP
            (NP (DT a) (JJ good) (NN deal))
            (PP (IN of)
              (NP
                (NP (NNP Mona) (NNP Shepherd))
                (ADVP (RB also))))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD had)
                  (ADVP (RB long))
                  (VP (VBN been)
                    (VP (VBN set)
                      (ADVP (JJ free))
                      (PP (IN from)
                        (NP
                          (NP (DT the)
                            (ADJP (JJ oppressive))
                            (NN charge))
                          (PP (IN of)
                            (NP (NNP Janet))))))))))))
        (, ,)
        (CC and)
        (VP (VBD was)
          (ADVP (RB now))
          (PP (IN under)
            (NP
              (NP (DT the) (NN care))
              (PP (IN of)
                (NP
                  (NP (DT a) (NNS governess))
                  (, ,)
                  (NP (DT a) (JJ wise) (, ,) (JJ elderly) (NN lady)))))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP she))
          (VP (VBD was)
            (NP
              (NP (DT a) (JJ great) (NN friend))
              (PP (IN of)
                (NP (NNP Mrs) (NNP Macmichael)))))))
      (, ,)
      (NP (DT the) (CD two) (NNS families))
      (VP (VBD were)
        (ADJP
          (ADJP (RB even) (JJR more))
          (ADVP (RB together) (RB now))
          (SBAR (IN than)
            (S
              (NP (PRP they))
              (VP (VBD had)
                (VP (VBN been)
                  (PP (IN in)
                    (NP (JJ former) (NNS years))))))))))
    (. .)))

nsubj(saw-2, Willie-1)
nsubj(was-25, Willie-1)
root(ROOT-0, saw-2)
det(deal-5, a-3)
amod(deal-5, good-4)
dobj(saw-2, deal-5)
nsubjpass(set-15, deal-5)
nn(Shepherd-8, Mona-7)
prep_of(deal-5, Shepherd-8)
advmod(Shepherd-8, also-9)
aux(set-15, had-12)
advmod(set-15, long-13)
auxpass(set-15, been-14)
rcmod(deal-5, set-15)
advmod(set-15, free-16)
det(charge-20, the-18)
amod(charge-20, oppressive-19)
prep_from(set-15, charge-20)
prep_of(charge-20, Janet-22)
conj_and(saw-2, was-25)
advmod(was-25, now-26)
det(care-29, the-28)
prep_under(was-25, care-29)
det(governess-32, a-31)
prep_of(care-29, governess-32)
det(lady-38, a-34)
amod(lady-38, wise-35)
amod(lady-38, elderly-37)
appos(governess-32, lady-38)
mark(friend-46, as-41)
nsubj(friend-46, she-42)
cop(friend-46, was-43)
det(friend-46, a-44)
amod(friend-46, great-45)
advcl(more-56, friend-46)
nn(Macmichael-49, Mrs-48)
prep_of(friend-46, Macmichael-49)
det(families-53, the-51)
num(families-53, two-52)
nsubj(more-56, families-53)
cop(more-56, were-54)
advmod(more-56, even-55)
conj_and(saw-2, more-56)
advmod(now-58, together-57)
advmod(more-56, now-58)
mark(been-62, than-59)
nsubj(been-62, they-60)
aux(been-62, had-61)
ccomp(more-56, been-62)
amod(years-65, former-64)
prep_in(been-62, years-65)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (S
      (ADVP (IN while)
        (PP (IN at)
          (NP (NN college))))
      (NP (PRP he))
      (VP (VBD had)
        (NP (DT no) (NN time)
          (S
            (VP (TO to)
              (VP (VB work)
                (PP (IN with)
                  (NP (PRP$ his) (NNS hands)))))))))
    (: :)
    (S
      (NP (PDT all) (PRP$ his) (NN labour))
      (ADVP (RB there))
      (VP (MD must)
        (VP (VB be)
          (PP (IN with)
            (NP (PRP$ his) (NN head))))))
    (: ;)
    (CC but)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD came)
            (NP (NN home)))))
      (NP (PRP he))
      (VP (VBD had)
        (NP
          (NP (RB plenty))
          (PP (IN of)
            (NP (NN time))))
        (PP (IN for)
          (NP (DT both) (NNS sorts)))))
    (. .)))

prep_of(had-8, course-2)
advmod(had-8, while-4)
prep_at(while-4, college-6)
nsubj(had-8, he-7)
root(ROOT-0, had-8)
neg(time-10, no-9)
dobj(had-8, time-10)
aux(work-12, to-11)
vmod(time-10, work-12)
poss(hands-15, his-14)
prep_with(work-12, hands-15)
predet(labour-19, all-17)
poss(labour-19, his-18)
nsubj(be-22, labour-19)
advmod(be-22, there-20)
aux(be-22, must-21)
conj_but(had-8, be-22)
poss(head-25, his-24)
prep_with(be-22, head-25)
advmod(came-30, when-28)
nsubj(came-30, he-29)
advcl(had-33, came-30)
dobj(came-30, home-31)
nsubj(had-33, he-32)
conj_but(had-8, had-33)
dobj(had-33, plenty-34)
prep_of(plenty-34, time-36)
det(sorts-39, both-38)
prep_for(had-33, sorts-39)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD spent)
        (NP
          (NP (DT a) (NN couple))
          (PP (IN of)
            (NP (NNS hours))))
        (PP (IN before)
          (NP (NN breakfast)))
        (PP (IN in)
          (NP
            (NP (DT the) (NN study))
            (PP (IN of)
              (NP (NN physiology)))))))
    (: ;)
    (S
      (PP (IN after)
        (NP
          (NP (NN breakfast))
          (, ,)
          (NP
            (NP
              (QP (DT another) (NN hour)
                (CC or)
                (CD two)))
            (PP (CC either)
              (PP (IN in)
                (NP (DT the) (NN surgery)))
              (, ,)
              (CC or)
              (PP (IN in)
                (NP
                  (NP (DT a) (NN part))
                  (PP (IN of)
                    (NP (DT the) (NNS ruins)))))
              (PRN
                (FRAG
                  (WHNP (WDT which))))))))
      (NP (PRP he))
      (VP (VBD had)
        (ADVP (RB roughly))
        (VP (VBN fitted)
          (PRT (RP up))
          (PP (IN for)
            (NP (DT a) (NN laboratory)))
          (PP (IN with)
            (NP
              (NP (DT a) (NN bench))
              (, ,)
              (NP (DT a) (JJ few) (NNS shelves))
              (, ,)
              (CC and)
              (NP (DT a) (NN furnace)))))))
    (. .)))

nsubj(spent-2, He-1)
root(ROOT-0, spent-2)
det(couple-4, a-3)
dobj(spent-2, couple-4)
prep_of(couple-4, hours-6)
prep_before(spent-2, breakfast-8)
det(study-11, the-10)
prep_in(spent-2, study-11)
prep_of(study-11, physiology-13)
prep_after(fitted-38, breakfast-16)
det(hour-19, another-18)
appos(breakfast-16, hour-19)
appos(breakfast-16, two-21)
conj_or(hour-19, two-21)
preconj(hour-19, either-22)
det(surgery-25, the-24)
prep_in(hour-19, surgery-25)
det(part-30, a-29)
prep_in(hour-19, part-30)
conj_or(surgery-25, part-30)
det(ruins-33, the-32)
prep_of(part-30, ruins-33)
dep(hour-19, which-34)
nsubj(fitted-38, he-35)
aux(fitted-38, had-36)
advmod(fitted-38, roughly-37)
parataxis(spent-2, fitted-38)
prt(fitted-38, up-39)
det(laboratory-42, a-41)
prep_for(fitted-38, laboratory-42)
det(bench-45, a-44)
prep_with(fitted-38, bench-45)
det(shelves-49, a-47)
amod(shelves-49, few-48)
prep_with(fitted-38, shelves-49)
conj_and(bench-45, shelves-49)
det(furnace-53, a-52)
prep_with(fitted-38, furnace-53)
conj_and(bench-45, furnace-53)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN father))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (VP (VBD did) (RB not)
        (VP (VB favour)
          (NP (PRP$ his) (NN being))
          (PP (IN in)
            (NP
              (NP (DT the) (NN latter))
              (PP (IN for)
                (NP (DT a) (JJ long) (NN time)))))
          (ADVP (RB together)))))
    (: ;)
    (S
      (SBAR (IN for)
        (S
          (NP (JJ young) (NNS experimenters))
          (VP
            (VP (VBP are)
              (ADJP (RB commonly) (JJ careless)))
            (, ,)
            (CC and)
            (VP (MD will)
              (ADVP (RB often))
              (VP (VB neglect)
                (NP (JJ proper) (NNS precautions)))))))
      (: --)
      (S
        (VP (VBG breathing)
          (NP
            (PRN (, ,)
              (PP (IN for)
                (NP (NN instance)))
              (, ,))
            (JJ many) (NNS gases))))
      (NP (PRP they))
      (VP (MD ought)
        (S (RB not)
          (VP (TO to)
            (VP (VB breathe))))))
    (. .)))

poss(father-2, His-1)
nsubj(favour-8, father-2)
advmod(favour-8, however-4)
aux(favour-8, did-6)
neg(favour-8, not-7)
root(ROOT-0, favour-8)
poss(being-10, his-9)
dobj(favour-8, being-10)
det(latter-13, the-12)
prep_in(favour-8, latter-13)
det(time-17, a-15)
amod(time-17, long-16)
prep_for(latter-13, time-17)
advmod(favour-8, together-18)
mark(careless-25, for-20)
amod(experimenters-22, young-21)
nsubj(careless-25, experimenters-22)
nsubj(neglect-30, experimenters-22)
cop(careless-25, are-23)
advmod(careless-25, commonly-24)
advcl(ought-42, careless-25)
aux(neglect-30, will-28)
advmod(neglect-30, often-29)
conj_and(careless-25, neglect-30)
advcl(ought-42, neglect-30)
amod(precautions-32, proper-31)
dobj(neglect-30, precautions-32)
parataxis(ought-42, breathing-34)
prep_for(gases-40, instance-37)
amod(gases-40, many-39)
dobj(breathing-34, gases-40)
nsubj(ought-42, they-41)
nsubj(breathe-45, they-41)
parataxis(favour-8, ought-42)
neg(breathe-45, not-43)
aux(breathe-45, to-44)
xcomp(ought-42, breathe-45)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (RB so) (JJ careful))
      (PP (IN over)
        (NP (NNP Agnes)))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (SBAR (IN that)
        (S
          (S
            (ADVP (RB often))
            (NP (PRP he))
            (VP (MD would) (RB not)
              (VP (VB let)
                (NP (PRP her))
                (PRT (RP in))
                (ADVP (IN at) (DT all)))))
          (: ;)
          (CC and)
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP he))
                (VP (VBD did))))
            (, ,)
            (NP (PRP he))
            (ADVP (RB generally))
            (VP (VBD confined)
              (NP (PRP himself))
              (PP (TO to)
                (NP (PRP$ her) (NN amusement))))))))
    (. .)))

nsubj(careful-4, He-1)
cop(careful-4, was-2)
advmod(careful-4, so-3)
root(ROOT-0, careful-4)
prep_over(careful-4, Agnes-6)
advmod(careful-4, however-8)
mark(let-15, that-10)
advmod(let-15, often-11)
nsubj(let-15, he-12)
aux(let-15, would-13)
neg(let-15, not-14)
ccomp(careful-4, let-15)
dobj(let-15, her-16)
prt(let-15, in-17)
advmod(let-15, at-18)
pobj(at-18, all-19)
advmod(did-24, when-22)
nsubj(did-24, he-23)
advcl(confined-28, did-24)
nsubj(confined-28, he-26)
advmod(confined-28, generally-27)
ccomp(careful-4, confined-28)
conj_and(let-15, confined-28)
dobj(confined-28, himself-29)
poss(amusement-32, her-31)
prep_to(confined-28, amusement-32)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (VP (VB show)
        (NP (PRP$ her) (JJ such) (JJ lovely) (NNS things))))
    (. !)))

nsubj(show-3, He-1)
aux(show-3, would-2)
root(ROOT-0, show-3)
poss(things-7, her-4)
amod(things-7, such-5)
amod(things-7, lovely-6)
dobj(show-3, things-7)

(ROOT
  (S (: --)
    (PP (IN for)
      (NP (NN instance)))
    (, ,)
    (NP
      (NP (NNS liquids))
      (NP (DT that)))
    (VP (VBN changed)
      (PP (IN from)
        (NP
          (NP (CD one) (JJ gorgeous) (NN hue))
          (PP (TO to)
            (NP
              (NP (DT another))
              (: ;)
              (NP
                (NP
                  (NP (NNS bubbles))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP
                        (VP (VBP burst)
                          (PP (IN into)
                            (NP (NN flame))))
                        (, ,)
                        (CC and)
                        (VP (VBD ascended)
                          (PP (IN in)
                            (NP
                              (NP (NNS rings))
                              (PP (IN of)
                                (NP (JJ white) (JJ revolving) (NN smoke))))))))))
                (: ;)
                (NP
                  (NP (NN light))
                  (ADJP (RB so) (JJ intense))))))))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD seemed)
            (S
              (VP (TO to)
                (VP (VB darken)
                  (NP (DT the) (NN daylight)))))))))
    (. .)))

prep_for(changed-7, instance-3)
nsubj(changed-7, liquids-5)
dep(liquids-5, that-6)
root(ROOT-0, changed-7)
num(hue-11, one-9)
amod(hue-11, gorgeous-10)
prep_from(changed-7, hue-11)
prep_to(hue-11, another-13)
dep(another-13, bubbles-15)
nsubj(burst-17, bubbles-15)
nsubj(ascended-22, bubbles-15)
rcmod(bubbles-15, burst-17)
prep_into(burst-17, flame-19)
rcmod(bubbles-15, ascended-22)
conj_and(burst-17, ascended-22)
prep_in(ascended-22, rings-24)
amod(smoke-28, white-26)
amod(smoke-28, revolving-27)
prep_of(rings-24, smoke-28)
dep(bubbles-15, light-30)
advmod(intense-32, so-31)
amod(light-30, intense-32)
mark(seemed-36, that-34)
nsubj(seemed-36, it-35)
nsubj(darken-38, it-35)
ccomp(changed-7, seemed-36)
aux(darken-38, to-37)
xcomp(seemed-36, darken-38)
det(daylight-40, the-39)
dobj(darken-38, daylight-40)

(ROOT
  (S
    (S
      (ADVP (RB Sometimes))
      (NP (NNP Mona))
      (VP (MD would)
        (VP (VB be)
          (PP (IN of)
            (NP (DT the) (NN party))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP
          (ADJP (NN nothing) (VBN pleased))
          (NNS Agnes))
        (CC or)
        (NP (PRP$ her)
          (ADJP (JJR better)
            (PP (IN than)
              (NP
                (NP (JJ such) (JJ wonderful) (NNS things))
                (PP (IN as)
                  (NP
                    (NP (DT these))
                    (: ;)
                    (SBAR (IN while)
                      (S
                        (NP (NNP Willie))
                        (VP (VBD found)
                          (S
                            (NP (PRP it))
                            (ADJP (RB very) (JJ amusing))
                            (S
                              (VP (TO to)
                                (VP (VB hear)
                                  (S
                                    (NP
                                      (NP (NNP Agnes))
                                      (, ,)
                                      (SBAR
                                        (WHNP (WP who))
                                        (S
                                          (VP (VBD was)
                                            (ADJP (JJ sharp) (RB enough)
                                              (S
                                                (VP (TO to)
                                                  (VP (VB pick)
                                                    (PRT (RP up))
                                                    (NP
                                                      (NP (RB not) (DT a) (JJ few))
                                                      (PP (IN of)
                                                        (NP (DT the) (NN chemical) (NNS names)))))))))))
                                      (, ,))
                                    (VP (VBG dropping)
                                      (NP (DT the) (JJ big) (NNS words))
                                      (PP (IN from)
                                        (NP (PRP$ her) (NNS lips)))))
                                  (SBAR (IN as)
                                    (S
                                      (SBAR (IN if)
                                        (S
                                          (NP (PRP she))
                                          (VP (VBD were)
                                            (PP (IN on)
                                              (NP
                                                (NP (DT the)
                                                  (ADJP (RBS most) (JJ familiar))
                                                  (NNS terms))
                                                (PP (IN with)
                                                  (NP (DT the) (NNS things))))))))
                                      (NP (PRP they))
                                      (VP (VBD signified)))))))))))
                    (: --))))))
          (NNS _)))
      (VP (VBD phosphuretted)
        (NP
          (NP
            (NP (NN hydrogen))
            (, ,)
            (NP (JJ metaphosphoric) (NN acid)))
          (, ,)
          (NP
            (NP (NN sesquiferrocyanide))
            (PP (IN of)
              (NP (NN iron) (NNS _))))
          (, ,)
          (CC and)
          (NP (JJ such)))
        (PP (IN like))))
    (. .)))

advmod(be-4, Sometimes-1)
nsubj(be-4, Mona-2)
aux(be-4, would-3)
root(ROOT-0, be-4)
det(party-7, the-6)
prep_of(be-4, party-7)
dep(pleased-11, nothing-10)
amod(Agnes-12, pleased-11)
nsubj(phosphuretted-71, Agnes-12)
poss(_-70, her-14)
amod(_-70, better-15)
amod(things-19, such-17)
amod(things-19, wonderful-18)
prep_than(better-15, things-19)
prep_as(things-19, these-21)
mark(found-25, while-23)
nsubj(found-25, Willie-24)
rcmod(these-21, found-25)
nsubj(hear-30, it-26)
advmod(amusing-28, very-27)
dep(hear-30, amusing-28)
aux(hear-30, to-29)
xcomp(found-25, hear-30)
nsubj(sharp-35, Agnes-31)
nsubj(pick-38, Agnes-31)
nsubj(dropping-48, Agnes-31)
cop(sharp-35, was-34)
rcmod(Agnes-31, sharp-35)
advmod(sharp-35, enough-36)
aux(pick-38, to-37)
xcomp(sharp-35, pick-38)
prt(pick-38, up-39)
neg(few-42, not-40)
det(few-42, a-41)
dobj(pick-38, few-42)
det(names-46, the-44)
nn(names-46, chemical-45)
prep_of(few-42, names-46)
dep(hear-30, dropping-48)
det(words-51, the-49)
amod(words-51, big-50)
dobj(dropping-48, words-51)
poss(lips-54, her-53)
prep_from(dropping-48, lips-54)
mark(signified-68, as-55)
mark(were-58, if-56)
nsubj(were-58, she-57)
advcl(signified-68, were-58)
det(terms-63, the-60)
advmod(familiar-62, most-61)
amod(terms-63, familiar-62)
prep_on(were-58, terms-63)
det(things-66, the-65)
prep_with(terms-63, things-66)
nsubj(signified-68, they-67)
advcl(hear-30, signified-68)
conj_or(Agnes-12, _-70)
nsubj(phosphuretted-71, _-70)
conj_and(be-4, phosphuretted-71)
dobj(phosphuretted-71, hydrogen-72)
amod(acid-75, metaphosphoric-74)
appos(hydrogen-72, acid-75)
dobj(phosphuretted-71, sesquiferrocyanide-77)
conj_and(hydrogen-72, sesquiferrocyanide-77)
nn(_-80, iron-79)
prep_of(sesquiferrocyanide-77, _-80)
dobj(phosphuretted-71, such-83)
conj_and(hydrogen-72, such-83)
prep(phosphuretted-71, like-84)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB give)
        (NP (DT an) (NN hour))
        (PP (TO to)
          (NP
            (NP (NN preparation))
            (PP (IN for)
              (NP
                (NP (DT the) (NNS studies))
                (PP (IN of)
                  (NP
                    (NP (JJ next) (NN term))
                    (: ;)
                    (SBAR
                      (WHPP (IN after)
                        (WHNP (WDT which)))
                      (S
                        (PRN (, ,)
                          (PP (IN until)
                            (NP (PRP$ their) (JJ early) (NN dinner)))
                          (, ,))
                        (S
                          (NP (PRP he))
                          (VP (MD would)
                            (VP (VB work)
                              (PP (IN at)
                                (NP (PRP$ his) (NN bench)
                                  (CC or)
                                  (NN turning-lathe)))
                              (, ,)
                              (PP
                                (ADVP (RB generally))
                                (IN at)
                                (NP
                                  (NP (NN something))
                                  (PP (IN for)
                                    (NP (PRP$ his) (NN mother)
                                      (CC or)
                                      (NN grandmother))))))))
                        (: ;)
                        (CC or)
                        (S
                          (NP (PRP he))
                          (VP (MD would)
                            (VP (VB do)
                              (NP (DT a) (JJ little) (NN mason-work))
                              (PP (IN amongst)
                                (NP (DT the) (NNS ruins)))
                              (, ,)
                              (S
                                (VP
                                  (VP (VBG patching)
                                    (CC and)
                                    (VBG strengthening))
                                  (, ,)
                                  (CC or)
                                  (VP
                                    (ADVP (RB even))
                                    (VBG buttressing)))))))))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (PRP he))
                        (VP (VBD thought)
                          (SBAR
                            (S
                              (NP (EX there))
                              (VP (VBD was)
                                (ADVP (RBS most))
                                (NP
                                  (NP (NN danger))
                                  (PP (IN of)
                                    (NP (JJ further) (NN fall))))))))))
                    (: --)))))))
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD had)
              (VP (VBN resolved)
                (SBAR (IN that) (, ,)
                  (S
                    (SBAR (IN if)
                      (S
                        (NP (PRP he))
                        (VP (MD could)
                          (VP (VB help)
                            (NP (PRP it))))))
                    (, ,)
                    (NP (RB not) (DT another) (NN stone))
                    (VP (MD should)
                      (VP (VB come)
                        (PP (TO to)
                          (NP (DT the) (NN ground)))))))))))))
    (. .)))

advmod(give-4, Then-1)
nsubj(give-4, he-2)
aux(give-4, would-3)
root(ROOT-0, give-4)
det(hour-6, an-5)
dobj(give-4, hour-6)
prep_to(give-4, preparation-8)
det(studies-11, the-10)
prep_for(preparation-8, studies-11)
amod(term-14, next-13)
prep_of(studies-11, term-14)
prep_after(work-26, term-14)
dep(work-26, until-19)
poss(dinner-22, their-20)
amod(dinner-22, early-21)
pobj(until-19, dinner-22)
nsubj(work-26, he-24)
aux(work-26, would-25)
rcmod(term-14, work-26)
poss(bench-29, his-28)
prep_at(work-26, bench-29)
prep_at(work-26, turning-lathe-31)
conj_or(bench-29, turning-lathe-31)
advmod(work-26, generally-33)
prep_at(work-26, something-35)
poss(mother-38, his-37)
prep_for(something-35, mother-38)
prep_for(something-35, grandmother-40)
conj_or(mother-38, grandmother-40)
nsubj(do-45, he-43)
aux(do-45, would-44)
rcmod(term-14, do-45)
conj_or(work-26, do-45)
det(mason-work-48, a-46)
amod(mason-work-48, little-47)
dobj(do-45, mason-work-48)
det(ruins-51, the-50)
prep_amongst(do-45, ruins-51)
dep(do-45, patching-53)
dep(do-45, strengthening-55)
conj_and(patching-53, strengthening-55)
advmod(buttressing-59, even-58)
dep(do-45, buttressing-59)
conj_or(patching-53, buttressing-59)
advmod(thought-63, where-61)
nsubj(thought-63, he-62)
rcmod(term-14, thought-63)
expl(was-65, there-64)
ccomp(thought-63, was-65)
advmod(was-65, most-66)
nsubj(was-65, danger-67)
amod(fall-70, further-69)
prep_of(danger-67, fall-70)
mark(resolved-75, for-72)
nsubj(resolved-75, he-73)
aux(resolved-75, had-74)
advcl(give-4, resolved-75)
mark(come-88, that-76)
mark(help-81, if-78)
nsubj(help-81, he-79)
aux(help-81, could-80)
advcl(come-88, help-81)
dobj(help-81, it-82)
neg(stone-86, not-84)
det(stone-86, another-85)
nsubj(come-88, stone-86)
aux(come-88, should-87)
ccomp(resolved-75, come-88)
det(ground-91, the-90)
prep_to(come-88, ground-91)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT this))
        (, ,)
        (NP
          (NP (PRP$ his) (JJ first) (NN summer))
          (PP (IN at)
            (NP
              (NP (NN home))
              (PP (IN from)
                (NP (NN college))))))))
    (, ,)
    (NP (PRP he))
    (ADVP (RB also))
    (VP (VBD fitted)
      (PRT (RP up))
      (NP
        (NP (DT a) (JJ small) (NN forge))
        (: --)
        (PP (IN in)
          (NP
            (NP (DT a) (NN part))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS ruins))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (EX there))
                    (VP (VBD was)
                      (NP
                        (NP (DT a) (JJ wide) (NN chimney))
                        (, ,)
                        (SBAR
                          (WHNP (WP$ whose) (NNS vent))
                          (S
                            (VP (VBD ran)
                              (PRT (RP up))
                              (NP (DT a) (JJ long) (NN way) (NN unbroken)))))))))))))))
    (. .)))

prep_in(fitted-14, this-2)
poss(summer-6, his-4)
amod(summer-6, first-5)
appos(this-2, summer-6)
prep_at(summer-6, home-8)
prep_from(home-8, college-10)
nsubj(fitted-14, he-12)
advmod(fitted-14, also-13)
root(ROOT-0, fitted-14)
prt(fitted-14, up-15)
det(forge-18, a-16)
amod(forge-18, small-17)
dobj(fitted-14, forge-18)
det(part-22, a-21)
prep_in(forge-18, part-22)
det(ruins-25, the-24)
prep_of(part-22, ruins-25)
advmod(was-28, where-26)
expl(was-28, there-27)
rcmod(ruins-25, was-28)
det(chimney-31, a-29)
amod(chimney-31, wide-30)
nsubj(was-28, chimney-31)
poss(vent-34, chimney-31)
nsubj(ran-35, vent-34)
rcmod(chimney-31, ran-35)
prt(ran-35, up-36)
det(unbroken-40, a-37)
amod(unbroken-40, long-38)
nn(unbroken-40, way-39)
dobj(ran-35, unbroken-40)

(ROOT
  (S
    (ADVP (RB Here))
    (S
      (NP (PRP he))
      (VP
        (VP (VBN constructed)
          (NP
            (NP (DT a) (NN pair))
            (PP (IN of)
              (NP (JJ great) (NNS bellows)))))
        (, ,)
        (CC and)
        (VP (VBN set)
          (PRT (RP up))
          (NP
            (NP (DT an) (JJ old) (NN anvil))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP he))
                (VP (VBD bought)
                  (PP (IN for)
                    (PP
                      (NP (DT a) (RB trifle))
                      (IN from)
                      (NP (NNP Mr) (NNP Willett)))))))))))
    (: ;)
    (CC and)
    (ADVP (RB here))
    (S
      (NP (PRP$ his) (NN father))
      (ADVP (RB actually))
      (VP
        (VP (VBD trusted)
          (S
            (NP (PRP him))
            (VP (TO to)
              (VP (VB shoe)
                (NP (PRP$ his) (NNS horses))))))
        (: ;)
        (CC nor)
        (VP (VBD did)
          (SBAR
            (S
              (NP (PRP he))
              (ADVP (RB ever))
              (VP (VBP find)
                (SBAR
                  (S
                    (NP
                      (NP (DT a) (NN nail))
                      (PP (IN of)
                        (NP
                          (NP (NNP Willie) (POS 's))
                          (NN driving))))
                    (VP (VBP require)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBN drawn)
                              (SBAR (IN before)
                                (S
                                  (NP (DT the) (NN shoe))
                                  (VP (VBD had)
                                    (S
                                      (VP (TO to)
                                        (VP (VB give)
                                          (NP (NN place))
                                          (PP (TO to)
                                            (NP (DT a) (JJ new) (NN one))))))))))))))))))))))
    (. .)))

advmod(constructed-3, Here-1)
nsubj(constructed-3, he-2)
nsubj(set-11, he-2)
root(ROOT-0, constructed-3)
det(pair-5, a-4)
dobj(constructed-3, pair-5)
amod(bellows-8, great-7)
prep_of(pair-5, bellows-8)
conj_and(constructed-3, set-11)
prt(set-11, up-12)
det(anvil-15, an-13)
amod(anvil-15, old-14)
dobj(set-11, anvil-15)
dobj(bought-19, anvil-15)
nsubj(bought-19, he-18)
rcmod(anvil-15, bought-19)
prep(bought-19, for-20)
det(trifle-22, a-21)
npadvmod(from-23, trifle-22)
pcomp(for-20, from-23)
nn(Willett-25, Mr-24)
pobj(from-23, Willett-25)
advmod(trusted-32, here-28)
poss(father-30, his-29)
nsubj(trusted-32, father-30)
nsubj(did-40, father-30)
advmod(trusted-32, actually-31)
conj_and(constructed-3, trusted-32)
dobj(trusted-32, him-33)
nsubj(shoe-35, him-33)
aux(shoe-35, to-34)
xcomp(trusted-32, shoe-35)
poss(horses-37, his-36)
dobj(shoe-35, horses-37)
conj_and(constructed-3, did-40)
conj_nor(trusted-32, did-40)
nsubj(find-43, he-41)
advmod(find-43, ever-42)
ccomp(did-40, find-43)
det(nail-45, a-44)
nsubj(require-50, nail-45)
nsubjpass(drawn-53, nail-45)
poss(driving-49, Willie-47)
prep_of(nail-45, driving-49)
ccomp(find-43, require-50)
aux(drawn-53, to-51)
auxpass(drawn-53, be-52)
xcomp(require-50, drawn-53)
mark(had-57, before-54)
det(shoe-56, the-55)
nsubj(had-57, shoe-56)
nsubj(give-59, shoe-56)
advcl(drawn-53, had-57)
aux(give-59, to-58)
xcomp(had-57, give-59)
dobj(give-59, place-60)
det(one-64, a-62)
amod(one-64, new-63)
prep_to(give-59, one-64)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN afternoon)))
    (, ,)
    (S
      (NP (PRP he))
      (ADVP (RB always))
      (VP (VBP read)
        (NP
          (NP
            (NP (NN history))
            (, ,)
            (CC or)
            (NP (NNS tales))
            (, ,))
          (CC or)
          (NP (NN poetry)))))
    (: ;)
    (CC and)
    (ADVP (RB in))
    (S
      (NP (DT the) (NN evening))
      (VP (VBD did)
        (SBAR
          (SBAR
            (WHNP (WDT whatever))
            (S
              (NP (PRP he))
              (VP (VBD felt)
                (ADJP (JJ inclined)
                  (S
                    (VP (TO to)
                      (VP (VB do))))))))
          (: --)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ brings)
                (NP (PRP me))
                (PP (TO to)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBD occupied)
                        (S
                          (NP (PRP him))
                          (NP
                            (NP (DT the) (JJ last) (NNS hours))
                            (PP (IN of)
                              (NP (DT the) (NN daylight)))))
                        (, ,)
                        (PP (IN for)
                          (NP
                            (NP (DT a) (JJ good) (NN part))
                            (PP (IN of)
                              (NP (DT this) (JJ first) (NN summer)))))))))))))))
    (. .)))

det(afternoon-3, the-2)
prep_in(read-7, afternoon-3)
nsubj(read-7, he-5)
advmod(read-7, always-6)
root(ROOT-0, read-7)
dobj(read-7, history-8)
dobj(read-7, tales-11)
conj_or(history-8, tales-11)
dobj(read-7, poetry-14)
conj_or(history-8, poetry-14)
advmod(did-20, in-17)
det(evening-19, the-18)
nsubj(did-20, evening-19)
conj_and(read-7, did-20)
dobj(felt-23, whatever-21)
nsubj(felt-23, he-22)
dep(did-20, felt-23)
acomp(felt-23, inclined-24)
aux(do-26, to-25)
xcomp(inclined-24, do-26)
nsubj(brings-29, which-28)
dep(felt-23, brings-29)
dobj(brings-29, me-30)
nsubj(occupied-33, what-32)
prepc_to(brings-29, occupied-33)
nsubj(hours-37, him-34)
det(hours-37, the-35)
amod(hours-37, last-36)
xcomp(occupied-33, hours-37)
det(daylight-40, the-39)
prep_of(hours-37, daylight-40)
det(part-45, a-43)
amod(part-45, good-44)
prep_for(occupied-33, part-45)
det(summer-49, this-47)
amod(summer-49, first-48)
prep_of(part-45, summer-49)

(ROOT
  (S
    (NP (CD One) (JJ lovely) (NN evening))
    (S
      (PP (IN in)
        (NP (NNP June)))
      (, ,)
      (NP (PRP he))
      (VP (VBD came)
        (PP (IN upon)
          (NP
            (NP (NNP Agnes))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD was)
                  (ADVP (RB now))
                  (ADJP
                    (NP (CD eight) (NNS years))
                    (JJ old))
                  (, ,)
                  (S
                    (VP (VBG lying)
                      (PP (IN under)
                        (NP
                          (NP (DT the) (JJS largest) (NN elm))
                          (PP (IN of)
                            (NP
                              (NP (DT a) (NN clump))
                              (PP (IN of)
                                (NP (JJ great) (NNS elms))))))))))))))))
    (CC and)
    (S
      (NP (NNP Scotch))
      (VP (VBZ firs)
        (PP (IN at)
          (NP
            (NP (DT the) (NN bottom))
            (PP (IN of)
              (NP (DT the) (NN garden)))))))
    (. .)))

num(evening-3, One-1)
amod(evening-3, lovely-2)
dep(came-8, evening-3)
prep_in(came-8, June-5)
nsubj(came-8, he-7)
root(ROOT-0, came-8)
prep_upon(came-8, Agnes-10)
nsubj(old-17, Agnes-10)
cop(old-17, was-13)
advmod(old-17, now-14)
num(years-16, eight-15)
npadvmod(old-17, years-16)
rcmod(Agnes-10, old-17)
xcomp(old-17, lying-19)
det(elm-23, the-21)
amod(elm-23, largest-22)
prep_under(lying-19, elm-23)
det(clump-26, a-25)
prep_of(elm-23, clump-26)
amod(elms-29, great-28)
prep_of(clump-26, elms-29)
nsubj(firs-32, Scotch-31)
conj_and(came-8, firs-32)
det(bottom-35, the-34)
prep_at(firs-32, bottom-35)
det(garden-38, the-37)
prep_of(bottom-35, garden-38)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD were)
        (NP
          (NP (DT the) (JJS highest) (NNS trees))
          (PP (IN in)
            (NP (PDT all) (DT the) (NN neighbourhood))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NN father))
      (VP (VBD was)
        (ADJP (RB very) (JJ fond))
        (PP (IN of)
          (NP (PRP them)))))
    (. .)))

nsubj(trees-5, They-1)
cop(trees-5, were-2)
det(trees-5, the-3)
amod(trees-5, highest-4)
root(ROOT-0, trees-5)
predet(neighbourhood-9, all-7)
det(neighbourhood-9, the-8)
prep_in(trees-5, neighbourhood-9)
poss(father-13, his-12)
nsubj(fond-16, father-13)
cop(fond-16, was-14)
advmod(fond-16, very-15)
conj_and(trees-5, fond-16)
prep_of(fond-16, them-18)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB look)
          (PRT (RP up))
          (PP (IN into)
            (NP
              (NP (DT those) (NNS elms))
              (PP (IN in)
                (NP (DT the) (NN summer) (NN time))))))))
    (NP (PRP$ your) (NNS eyes))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB lose)
            (NP (PRP$ their) (NN way))
            (PP (IN in)
              (NP
                (NP (DT a) (NN mist))
                (PP (IN of)
                  (NP (NNS leaves)))))
            (: ;)
            (SBAR (IN whereas)
              (S
                (NP (DT the) (NNS firs))
                (VP (VBD had)
                  (NP (JJ only)
                    (ADJP (JJ great) (, ,) (JJ bony) (, ,) (JJ bare) (, ,) (JJ gaunt))
                    (NNS arms))
                  (, ,)
                  (PP (IN with)
                    (NP
                      (NP (DT a) (NN tuft))
                      (PP (IN of)
                        (S
                          (VP (VBG bristles)
                            (ADVP (RB here)
                              (CC and)
                              (RB there))))))))))))))
    (. .)))

aux(look-2, To-1)
dep(seemed-13, look-2)
prt(look-2, up-3)
det(elms-6, those-5)
prep_into(look-2, elms-6)
det(time-10, the-8)
nn(time-10, summer-9)
prep_in(elms-6, time-10)
poss(eyes-12, your-11)
nsubj(seemed-13, eyes-12)
nsubj(lose-15, eyes-12)
root(ROOT-0, seemed-13)
aux(lose-15, to-14)
xcomp(seemed-13, lose-15)
poss(way-17, their-16)
dobj(lose-15, way-17)
det(mist-20, a-19)
prep_in(lose-15, mist-20)
prep_of(mist-20, leaves-22)
mark(had-27, whereas-24)
det(firs-26, the-25)
nsubj(had-27, firs-26)
advcl(lose-15, had-27)
parataxis(lose-15, had-27)
amod(arms-36, only-28)
amod(gaunt-35, great-29)
amod(gaunt-35, bony-31)
amod(gaunt-35, bare-33)
amod(arms-36, gaunt-35)
dobj(had-27, arms-36)
det(tuft-40, a-39)
prep_with(had-27, tuft-40)
prepc_of(tuft-40, bristles-42)
advmod(bristles-42, here-43)
advmod(bristles-42, there-45)
conj_and(here-43, there-45)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP
          (NP (DT a) (NN ray))
          (PP (IN of)
            (NP (DT the) (NN setting) (NN sun))))
        (VP (VBD alighted)
          (PP (IN upon)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (DT these) (NNS firs))))))))
    (NP (PRP it))
    (VP (VBP shone)
      (PP (IN like)
        (NP (DT a) (NN flamingo))))
    (. .)))

cc(shone-16, But-1)
advmod(alighted-9, when-2)
det(ray-4, a-3)
nsubj(alighted-9, ray-4)
det(sun-8, the-6)
nn(sun-8, setting-7)
prep_of(ray-4, sun-8)
advcl(shone-16, alighted-9)
prep_upon(alighted-9, one-11)
det(firs-14, these-13)
prep_of(one-11, firs-14)
nsubj(shone-16, it-15)
root(ROOT-0, shone-16)
det(flamingo-19, a-18)
prep_like(shone-16, flamingo-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD seemed)
      (SBAR (RB as)
        (SBAR (IN if)
          (S
            (NP
              (NP (DT the)
                (ADJP (RB surly) (JJ old))
                (NN tree))
              (CC and)
              (NP (DT the) (JJ gracious) (NN sunset)))
            (VP (VBD had)
              (NP
                (NP (DT some) (NN secret))
                (PP (IN between)
                  (NP (PRP them)))))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (PRN (, ,)
            (ADVP
              (ADVP (RB as) (RB often))
              (SBAR (IN as)
                (S
                  (NP (PRP they))
                  (VP (VBD met)))))
            (, ,))
          (S
            (VP (VBD broke)
              (PRT (RP out))
              (PP (IN in)
                (NP (JJ ruddy) (NN flame))))))))
    (. .)))

nsubj(seemed-2, It-1)
root(ROOT-0, seemed-2)
advmod(had-13, as-3)
mark(had-13, if-4)
det(tree-8, the-5)
advmod(old-7, surly-6)
amod(tree-8, old-7)
nsubj(had-13, tree-8)
det(sunset-12, the-10)
amod(sunset-12, gracious-11)
conj_and(tree-8, sunset-12)
nsubj(had-13, sunset-12)
advcl(seemed-2, had-13)
det(secret-15, some-14)
dobj(had-13, secret-15)
prep_between(secret-15, them-17)
nsubj(broke-27, which-19)
advmod(often-22, as-21)
dep(broke-27, often-22)
mark(met-25, as-23)
nsubj(met-25, they-24)
advcl(often-22, met-25)
ccomp(often-22, met-25)
dep(had-13, broke-27)
prt(broke-27, out-28)
amod(flame-31, ruddy-30)
prep_in(broke-27, flame-31)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (NNP Agnes))
      (VP (VBD was)
        (VP (VBG lying)
          (PP (IN on)
            (NP (DT the) (JJ thin) (NN grass)))
          (PP (IN under)
            (NP
              (NP (DT this) (NN clump))
              (PP (IN of)
                (NP (NNS trees)))))
          (, ,)
          (S
            (VP (VBG looking)
              (PRT (RP up))
              (PP (IN into)
                (NP (PRP$ their) (NN mystery))))))))
    (: --)
    (CC and)
    (S
      (NP
        (PRN (: --)
          (FRAG (WP what) (RB else))))
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP think)
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (VBD was)
                    (VP (VBG doing))))))))))
    (. ?)))

advmod(lying-4, Now-1)
nsubj(lying-4, Agnes-2)
aux(lying-4, was-3)
root(ROOT-0, lying-4)
det(grass-8, the-6)
amod(grass-8, thin-7)
prep_on(lying-4, grass-8)
det(clump-11, this-10)
prep_under(lying-4, clump-11)
prep_of(clump-11, trees-13)
vmod(lying-4, looking-15)
prt(looking-15, up-16)
poss(mystery-19, their-18)
prep_into(looking-15, mystery-19)
dep(else-24, what-23)
nsubj(do-25, else-24)
conj_and(lying-4, do-25)
nsubj(think-27, you-26)
ccomp(do-25, think-27)
nsubj(doing-30, she-28)
aux(doing-30, was-29)
ccomp(think-27, doing-30)

(ROOT
  (S (: --)
    (S
      (NP (PRP She))
      (VP (VBD was)
        (VP (VBG sucking)
          (NP
            (NP (PRP$ her) (NN thumb))
            (: --)
            (NP
              (NP (PRP$ her) (NN custom))
              (SBAR
                (WHADVP
                  (ADVP (RB always))
                  (WRB when))
                (S
                  (NP (PRP she))
                  (VP (VBD was)
                    (ADJP (JJ thoughtful))))))))))
    (: ;)
    (CC and)
    (ADVP (RB thoughtful))
    (S
      (NP (PRP she))
      (VP (VBD seemed)
        (ADVP (RB now))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (DT the) (NNS tears))
            (VP (VBD were)
              (PP (IN in)
                (NP (PRP$ her) (NNS eyes))))))))
    (. .)))

nsubj(sucking-4, She-2)
aux(sucking-4, was-3)
root(ROOT-0, sucking-4)
poss(thumb-6, her-5)
dobj(sucking-4, thumb-6)
poss(custom-9, her-8)
dep(thumb-6, custom-9)
advmod(when-11, always-10)
advmod(thoughtful-14, when-11)
nsubj(thoughtful-14, she-12)
cop(thoughtful-14, was-13)
rcmod(custom-9, thoughtful-14)
advmod(seemed-19, thoughtful-17)
nsubj(seemed-19, she-18)
conj_and(sucking-4, seemed-19)
advmod(seemed-19, now-20)
mark(were-25, for-22)
det(tears-24, the-23)
nsubj(were-25, tears-24)
advcl(seemed-19, were-25)
poss(eyes-28, her-27)
prep_in(were-25, eyes-28)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN matter))
        (PP (IN with)
          (NP (PRP$ my) (NN pet)))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, is-3)
det(matter-5, the-4)
nsubj(What-2, matter-5)
poss(pet-8, my-7)
prep_with(matter-5, pet-8)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)

(ROOT
  (S (CC But)
    (PP (RB instead) (IN of)
      (S
        (VP
          (VP (VBG jumping)
            (PRT (RP up)))
          (CC and)
          (VP (VBG flinging)
            (NP (PRP$ her) (NNS arms))
            (PP (IN about)
              (NP (PRP him)))))))
    (PRN (, ,)
      (S
        (NP (PRP she))
        (VP
          (VP
            (ADVP (RB only))
            (VBD looked)
            (PP (IN at)
              (NP (PRP him))))
          (, ,)
          (VP (VBD gave)
            (NP (DT a) (JJ little) (NN sigh)))
          (, ,)
          (VP (VBD drew)
            (NP (PRP$ her) (NN thumb))
            (PP (IN from)
              (NP (PRP$ her) (NN mouth))))
          (, ,)
          (VP (VBD pointed)
            (PP (IN with)
              (NP (PRP it)))
            (ADVP (RB up)
              (PP (IN into)
                (NP (DT the) (NN tree)))))
          (, ,)
          (CC and)
          (VP (VBD said))))
      (, ,))
    (`` ``)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB get)
        (PRT (RP up))
        (ADVP (RB there))))
    (. !)))

cc(get-46, But-1)
prepc_instead_of(get-46, jumping-4)
prt(jumping-4, up-5)
conj_and(jumping-4, flinging-7)
prepc_instead_of(get-46, flinging-7)
poss(arms-9, her-8)
dobj(flinging-7, arms-9)
prep_about(flinging-7, him-11)
nsubj(looked-15, she-13)
nsubj(gave-19, she-13)
nsubj(drew-24, she-13)
nsubj(pointed-31, she-13)
nsubj(said-40, she-13)
advmod(looked-15, only-14)
parataxis(get-46, looked-15)
prep_at(looked-15, him-17)
conj_and(looked-15, gave-19)
parataxis(get-46, gave-19)
det(sigh-22, a-20)
amod(sigh-22, little-21)
dobj(gave-19, sigh-22)
conj_and(looked-15, drew-24)
parataxis(get-46, drew-24)
poss(thumb-26, her-25)
dobj(drew-24, thumb-26)
poss(mouth-29, her-28)
prep_from(drew-24, mouth-29)
conj_and(looked-15, pointed-31)
parataxis(get-46, pointed-31)
prep_with(pointed-31, it-33)
advmod(pointed-31, up-34)
det(tree-37, the-36)
prep_into(up-34, tree-37)
conj_and(looked-15, said-40)
parataxis(get-46, said-40)
nsubj(get-46, I-43)
aux(get-46, ca-44)
neg(get-46, n't-45)
root(ROOT-0, get-46)
prt(get-46, up-47)
advmod(get-46, there-48)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP wish)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD was)
              (NP (DT a) (NN bird))))))
      (, ,) ('' '')
      (CC and)
      (VP (VBD put)
        (NP (PRP$ her) (NN thumb))
        (PP (IN in)
          (NP (PRP$ her) (NN mouth)))
        (ADVP (RB again))))
    (. .)))

nsubj(wish-2, I-1)
nsubj(put-10, I-1)
root(ROOT-0, wish-2)
nsubj(bird-6, I-3)
cop(bird-6, was-4)
det(bird-6, a-5)
ccomp(wish-2, bird-6)
conj_and(wish-2, put-10)
poss(thumb-12, her-11)
dobj(put-10, thumb-12)
poss(mouth-15, her-14)
prep_in(put-10, mouth-15)
advmod(put-10, again-16)

(ROOT
  (S (`` ``)
    (CC But)
    (SBAR (IN if)
      (S
        (S
          (NP (PRP you))
          (VP (VBD were)
            (NP (DT a) (NN bird))))
        (, ,)
        (S
          (NP (PRP you))
          (VP (MD would) (RB n't)
            (VP (VB be)
              (NP (DT a) (NN girl)))))
        (, ,)
        (S
          (NP (PRP you))
          (VP (VBP know)))
        (, ,)
        (CC and)
        (S
          (NP (PRP you))
          (VP (MD would) (RB n't)
            (VP (VB like)
              (NP
                (NP (DT that))
                (, ,) ('' '')
                (SBAR
                  (S
                    (VP (VBD said)
                      (NP (NNP Willie)))))))))))
    (: --) (`` ``)
    (NP
      (QP (IN at) (JJS least) (CD _))
      (NN I) (NNS _))
    (VP (MD should) (RB n't)
      (VP (VB like)
        (NP (PRP it))))
    (. .) ('' '') ('' '')))

cc(like-38, But-2)
mark(bird-7, if-3)
nsubj(bird-7, you-4)
cop(bird-7, were-5)
det(bird-7, a-6)
advcl(like-38, bird-7)
nsubj(girl-14, you-9)
aux(girl-14, would-10)
neg(girl-14, n't-11)
cop(girl-14, be-12)
det(girl-14, a-13)
ccomp(bird-7, girl-14)
conj_and(bird-7, girl-14)
advcl(like-38, girl-14)
nsubj(know-17, you-16)
ccomp(bird-7, know-17)
conj_and(bird-7, know-17)
advcl(like-38, know-17)
nsubj(like-23, you-20)
aux(like-23, would-21)
neg(like-23, n't-22)
conj_and(bird-7, like-23)
advcl(like-38, like-23)
dobj(like-23, that-24)
rcmod(that-24, said-27)
dobj(said-27, Willie-28)
quantmod(_-33, at-31)
mwe(at-31, least-32)
pobj(at-31, least-32)
num(_-35, _-33)
nn(_-35, I-34)
nsubj(like-38, _-35)
aux(like-38, should-36)
neg(like-38, n't-37)
root(ROOT-0, like-38)
dobj(like-38, it-39)

(ROOT
  (S
    (NP (NNP _) (NNP I) (NNP _))
    (VP (MD should) (RB n't)
      (VP (VB mind)))
    (. .)))

nn(_-3, _-1)
nn(_-3, I-2)
nsubj(mind-6, _-3)
aux(mind-6, should-4)
neg(mind-6, n't-5)
root(ROOT-0, mind-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would) (RB rather)
      (VP
        (VP (VB have)
          (NP (NNS wings)))
        (CC and)
        (VP (VB fly)
          (PRT (RP about))
          (PP (IN in)
            (NP (DT the) (NNS trees))))))
    (. .) ('' '')))

nsubj(have-4, I-1)
nsubj(fly-7, I-1)
aux(have-4, would-2)
advmod(have-4, rather-3)
root(ROOT-0, have-4)
dobj(have-4, wings-5)
conj_and(have-4, fly-7)
prt(fly-7, about-8)
det(trees-11, the-10)
prep_in(fly-7, trees-11)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD had)
          (NP (NNS wings)))))
    (NP (PRP you))
    (VP (MD could) (RB n't)
      (VP (VB have)
        (NP (NNS arms))))
    (. .) ('' '')))

mark(had-4, If-2)
nsubj(had-4, you-3)
advcl(have-9, had-4)
dobj(had-4, wings-5)
nsubj(have-9, you-6)
aux(have-9, could-7)
neg(have-9, n't-8)
root(ROOT-0, have-9)
dobj(have-9, arms-10)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD 'd) (RB rather)
      (VP (VB have)
        (NP (NNS wings))))
    (. .) ('' '')))

nsubj(have-5, I-2)
aux(have-5, 'd-3)
advmod(have-5, rather-4)
root(ROOT-0, have-5)
dobj(have-5, wings-6)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (NP (DT a) (NN bird))
          (ADVP (RB up) (RB there)))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ sure)
          (S
            (VP (TO to)
              (VP (VB wish)
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBD were)
                      (ADVP
                        (NP (DT a) (NN girl))
                        (RB down))
                      (ADVP (RB here)))))))))))
    (. .)))

mark(bird-6, If-2)
nsubj(bird-6, you-3)
cop(bird-6, were-4)
det(bird-6, a-5)
advcl(sure-13, bird-6)
advmod(there-8, up-7)
advmod(bird-6, there-8)
nsubj(sure-13, you-10)
nsubj(wish-15, you-10)
aux(sure-13, would-11)
cop(sure-13, be-12)
root(ROOT-0, sure-13)
aux(wish-15, to-14)
xcomp(sure-13, wish-15)
nsubj(were-17, you-16)
ccomp(wish-15, were-17)
det(girl-19, a-18)
npadvmod(down-20, girl-19)
advmod(were-17, down-20)
advmod(were-17, here-21)

(ROOT
  (S
    (SBAR (IN For) (IN if)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (NP (DT a) (NN bird)))))
    (NP (PRP you))
    (VP (MD could) (RB n't)
      (VP
        (VP (VB lie)
          (PP (IN in)
            (NP (DT the) (NN grass))))
        (CC and)
        (VP (VB look)
          (PRT (RP up))
          (PP (IN into)
            (NP (DT the) (NN tree))))))
    (. .) ('' '')))

mark(bird-6, For-1)
mark(bird-6, if-2)
nsubj(bird-6, you-3)
cop(bird-6, were-4)
det(bird-6, a-5)
advcl(lie-10, bird-6)
nsubj(lie-10, you-7)
nsubj(look-15, you-7)
aux(lie-10, could-8)
neg(lie-10, n't-9)
root(ROOT-0, lie-10)
det(grass-13, the-12)
prep_in(lie-10, grass-13)
conj_and(lie-10, look-15)
prt(look-15, up-16)
det(tree-19, the-18)
prep_into(look-15, tree-19)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh) (UH yes))
    (, ,)
    (NP (PRP I))
    (VP (MD could))
    (. .) ('' '')))

discourse(could-6, Oh-2)
dep(Oh-2, yes-3)
nsubj(could-6, I-5)
root(ROOT-0, could-6)

(ROOT
  (S (`` ``)
    (S
      (X
        (X (WP What))
        (NP (DT a) (JJ comical) (JJ little) (NN bird)))
      (NP (PRP you))
      (VP (MD would)
        (VP (VB look)
          (ADVP (RB then))
          (: --)
          (S
            (VP (VBG lying)
              (PRT (RP on))
              (NP (PRP$ your) (JJ little) (NN round) (NN feathery))
              (ADVP (RB back))))
          (, ,)
          (PP (IN with)
            (NP
              (NP (NNS wings))
              (VP (VBN spread)
                (PRT (RP out))
                (S
                  (VP (TO to)
                    (VP (VB keep)
                      (NP (PRP you))
                      (PP (IN from)
                        (S
                          (VP (VBG rolling)
                            (PRT (RP over))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (JJ little) (JJ sparkling) (NNS eyes))
        (, ,)
        (NP
          (NP (CD one))
          (PP (IN on)
            (NP
              (NP (DT each) (NN side))
              (PP (IN of)
                (NP (PDT such) (DT a) (JJ long) (NN beak))))))
        (, ,))
      (VP (VBG staring)
        (PRT (RP up))
        (PP (IN into)
          (NP (DT the) (NN tree)))))
    (. !)))

dep(bird-6, What-2)
det(bird-6, a-3)
amod(bird-6, comical-4)
amod(bird-6, little-5)
dep(look-9, bird-6)
nsubj(look-9, you-7)
aux(look-9, would-8)
root(ROOT-0, look-9)
advmod(look-9, then-10)
parataxis(look-9, lying-12)
prt(lying-12, on-13)
poss(feathery-17, your-14)
amod(feathery-17, little-15)
nn(feathery-17, round-16)
dobj(lying-12, feathery-17)
advmod(lying-12, back-18)
prep_with(look-9, wings-21)
vmod(wings-21, spread-22)
prt(spread-22, out-23)
aux(keep-25, to-24)
xcomp(spread-22, keep-25)
dobj(keep-25, you-26)
prepc_from(keep-25, rolling-28)
prt(rolling-28, over-29)
amod(eyes-34, little-32)
amod(eyes-34, sparkling-33)
nsubj(staring-46, eyes-34)
appos(eyes-34, one-36)
det(side-39, each-38)
prep_on(one-36, side-39)
predet(beak-44, such-41)
det(beak-44, a-42)
amod(beak-44, long-43)
prep_of(side-39, beak-44)
conj_and(look-9, staring-46)
prt(staring-46, up-47)
det(tree-50, the-49)
prep_into(staring-46, tree-50)

(ROOT
  (NP (: --) (NN Miaw) (. !)))

root(ROOT-0, Miaw-2)

(ROOT
  (FRAG
    (NP (NNP Miaw))
    (. !)))

root(ROOT-0, Miaw-1)

(ROOT
  (SINV
    (ADVP (RB Here))
    (VBZ comes)
    (NP (DT the) (NN cat)
      (S
        (VP (TO to)
          (VP (VB eat)
            (NP (PRP you))
            (PRT (RP up))))))
    (. !) ('' '')))

advmod(comes-2, Here-1)
root(ROOT-0, comes-2)
det(cat-4, the-3)
nsubj(comes-2, cat-4)
aux(eat-6, to-5)
vmod(cat-4, eat-6)
dobj(eat-6, you-7)
prt(eat-6, up-8)

(ROOT
  (S
    (NP (NNS Agnes))
    (VP
      (VP (VBD sprang)
        (PP (TO to)
          (NP (PRP$ her) (NNS feet)))
        (PP (IN in)
          (NP (NN terror))))
      (, ,)
      (CC and)
      (VP (VBD rushed)
        (PP (TO to)
          (NP (NNP Willie)))))
    (. .)))

nsubj(sprang-2, Agnes-1)
nsubj(rushed-10, Agnes-1)
root(ROOT-0, sprang-2)
poss(feet-5, her-4)
prep_to(sprang-2, feet-5)
prep_in(sprang-2, terror-7)
conj_and(sprang-2, rushed-10)
prep_to(rushed-10, Willie-12)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD had)
      (ADVP (RB so) (RB fully))
      (VP (VBN fancied)
        (S
          (NP (PRP herself))
          (NP (DT a) (NN bird)))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (JJ very) (NN mention))
              (PP (IN of)
                (NP (DT the) (NN cat))))
            (VP (VBD had)
              (VP (VBN filled)
                (NP (PRP her))
                (PP (IN with)
                  (NP (NN horror)))))))))
    (. .)))

nsubj(fancied-5, She-1)
aux(fancied-5, had-2)
advmod(fully-4, so-3)
advmod(fancied-5, fully-4)
root(ROOT-0, fancied-5)
nsubj(bird-8, herself-6)
det(bird-8, a-7)
xcomp(fancied-5, bird-8)
mark(filled-17, that-9)
det(mention-12, the-10)
amod(mention-12, very-11)
nsubj(filled-17, mention-12)
det(cat-15, the-14)
prep_of(mention-12, cat-15)
aux(filled-17, had-16)
ccomp(fancied-5, filled-17)
dobj(filled-17, her-18)
prep_with(filled-17, horror-20)

(ROOT
  (S
    (ADVP (RB Once) (RBR more))
    (NP (PRP she))
    (VP
      (VP (VBD took)
        (NP (PRP$ her) (NN thumb))
        (PP (IN from)
          (NP (PRP$ her) (NN mouth)
            (S
              (VP (TO to)
                (VP (VB give)
                  (NP (DT a) (JJ little) (NN scream))))))))
      (, ,)
      (CC and)
      (VP (VBD did) (RB not)
        (VP (VB put)
          (NP (PRP it))
          (PP (IN in)
            (ADVP (RB again))))))
    (. .)))

advmod(more-2, Once-1)
advmod(took-4, more-2)
nsubj(took-4, she-3)
nsubj(put-19, she-3)
root(ROOT-0, took-4)
poss(thumb-6, her-5)
dobj(took-4, thumb-6)
poss(mouth-9, her-8)
prep_from(took-4, mouth-9)
aux(give-11, to-10)
vmod(mouth-9, give-11)
det(scream-14, a-12)
amod(scream-14, little-13)
dobj(give-11, scream-14)
aux(put-19, did-17)
neg(put-19, not-18)
conj_and(took-4, put-19)
dobj(put-19, it-20)
prep(put-19, in-21)
pcomp(in-21, again-22)

(ROOT
  (S (`` ``)
    (NP (NNP O))
    (VP (VBZ Willie))
    (. !)))

nsubj(Willie-3, O-2)
root(ROOT-0, Willie-3)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBD frightened)
      (NP (PRP me))
      (ADVP (RB so)))
    (. !) ('' '')))

nsubj(frightened-2, you-1)
root(ROOT-0, frightened-2)
dobj(frightened-2, me-3)
advmod(frightened-2, so-4)

(ROOT
  (S
    (S
      (NP (PRP she))
      (VP (VBD said)))
    (: --)
    (S
      (VP (VBG joining) (, ,)
        (ADVP (RB however))
        (, ,)
        (PP (IN in)
          (NP (PRP$ his) (NN laugh)))))
    (. .)))

nsubj(said-2, she-1)
root(ROOT-0, said-2)
parataxis(said-2, joining-4)
advmod(joining-4, however-6)
poss(laugh-10, his-9)
prep_in(joining-4, laugh-10)

(ROOT
  (S (`` ``)
    (NP (NNP Poor))
    (VP (VBP birdie))
    (. !) ('' '')))

nsubj(birdie-3, Poor-2)
root(ROOT-0, birdie-3)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Did))
    (SQ
      (NP (DT the) (JJ naughty) (NNS puss))
      (VP (VB frighten)
        (NP (PRP it))))
    (. ?)))

advmod(frighten-6, Did-2)
det(puss-5, the-3)
amod(puss-5, naughty-4)
nsubj(frighten-6, puss-5)
root(ROOT-0, frighten-6)
dobj(frighten-6, it-7)

(ROOT
  (S
    (VP (VB Stwoke)
      (NP (PRP$ its) (NNS fedders) (NN den)))
    (. .)))

root(ROOT-0, Stwoke-1)
poss(den-4, its-2)
nn(den-4, fedders-3)
dobj(Stwoke-1, den-4)

(ROOT
  (S
    (S
      (NP
        (PRN (: --)
          (NP
            (NP (NNP Stwoke))
            (NP (PRP it)))
          (: --)))
      (VP (VBP stwoke)
        (NP (PRP it))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD continued) (, ,)
      (S
        (VP (VBG smoothing)
          (PRT (RP down))
          (NP (PRP$ her) (NN hair)))))
    (. .)))

nsubj(stwoke-5, Stwoke-2)
dep(Stwoke-2, it-3)
ccomp(continued-10, stwoke-5)
dobj(stwoke-5, it-6)
nsubj(continued-10, he-9)
root(ROOT-0, continued-10)
xcomp(continued-10, smoothing-12)
prt(smoothing-12, down-13)
poss(hair-15, her-14)
dobj(smoothing-12, hair-15)

(ROOT
  (SINV (`` ``)
    (S (CC But)
      (NP (NNP _))
      (VP (MD would) (RB n't)
        (VP (VB _)
          (S
            (NP (PRP it))
            (VP (VB be)
              (ADJP (JJ nice)))))))
    (, ,) ('' '')
    (VP (VBD persisted))
    (NP
      (NP (NNP Agnes))
      (, ,)
      (SBAR (`` ``)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (RB so) (JJ tall))
              (SBAR (IN as)
                (S
                  (NP (DT the) (NNS birds))
                  (VP (MD can)
                    (VP (VB make)
                      (NP (PRP themselves))
                      (PP (IN with)
                        (NP (PRP$ their) (NNS wings))))))))))))
    (. ?)))

cc(_-6, But-2)
nsubj(_-6, _-3)
aux(_-6, would-4)
neg(_-6, n't-5)
ccomp(persisted-12, _-6)
nsubj(nice-9, it-7)
cop(nice-9, be-8)
ccomp(_-6, nice-9)
root(ROOT-0, persisted-12)
nsubj(persisted-12, Agnes-13)
aux(tall-19, to-16)
cop(tall-19, be-17)
advmod(tall-19, so-18)
vmod(Agnes-13, tall-19)
mark(make-24, as-20)
det(birds-22, the-21)
nsubj(make-24, birds-22)
aux(make-24, can-23)
advcl(tall-19, make-24)
dobj(make-24, themselves-25)
poss(wings-28, their-27)
prep_with(make-24, wings-28)

(ROOT
  (FRAG
    (ADJP (JJ Fancy))
    (S
      (VP (VBG having)
        (NP (PRP$ your) (NN head))
        (PP
          (ADVP (RB up) (RB there))
          (IN in)
          (NP
            (NP (DT the) (JJ green) (NNS leaves))
            (: --)
            (ADJP (RB so) (JJ cool))))))
    (. !)))

root(ROOT-0, Fancy-1)
dep(Fancy-1, having-2)
poss(head-4, your-3)
dobj(having-2, head-4)
advmod(there-6, up-5)
advmod(having-2, there-6)
det(leaves-10, the-8)
amod(leaves-10, green-9)
prep_in(having-2, leaves-10)
advmod(cool-13, so-12)
amod(leaves-10, cool-13)

(ROOT
  (S (CC and)
    (S
      (VP (VBG hearing)
        (S
          (NP (PRP them))
          (NP
            (NP
              (NP (DT all) (NN whisper))
              (, ,)
              (NP (NN whisper))
              (, ,))
            (PP (IN about)
              (NP (PRP$ your) (NNS ears)))))))
    (, ,)
    (CC and)
    (S
      (VP (VBG being)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP
                (VP (VB look)
                  (PRT (RP down))
                  (PP (IN on)
                    (NP
                      (NP (NNS people) (POS 's))
                      (NNS heads))))
                (PRN (, ,)
                  (S
                    (NP (PRP you))
                    (VP (VBP know)))
                  (, ,))
                (NP (NNP Willie))))))))
    (. !)))

root(ROOT-0, hearing-2)
nsubj(whisper-5, them-3)
det(whisper-5, all-4)
xcomp(hearing-2, whisper-5)
appos(whisper-5, whisper-7)
poss(ears-11, your-10)
prep_about(whisper-5, ears-11)
cop(able-15, being-14)
conj_and(hearing-2, able-15)
aux(look-17, to-16)
xcomp(able-15, look-17)
prt(look-17, down-18)
poss(heads-22, people-20)
prep_on(look-17, heads-22)
nsubj(know-25, you-24)
parataxis(look-17, know-25)
dobj(look-17, Willie-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do)
      (SBAR
        (S
          (VP (VBP wish)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD was)
                  (NP (DT a) (NN bird)))))))))
    (. !)))

nsubj(do-2, I-1)
root(ROOT-0, do-2)
ccomp(do-2, wish-3)
nsubj(bird-7, I-4)
cop(bird-7, was-5)
det(bird-7, a-6)
ccomp(wish-3, bird-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do))
    (. !) ('' '')))

nsubj(do-2, I-1)
root(ROOT-0, do-2)

(ROOT
  (S (CC But)
    (SBAR (IN with)
      (S
        (NP (NNP Willie))
        (VP (TO to)
          (VP (VB comfort)
            (CC and)
            (VB play)
            (PP (IN with)
              (NP (PRP her)))))))
    (, ,)
    (NP (PRP she))
    (ADVP (RB soon))
    (VP (VBD forgot)
      (NP (PRP$ her) (VBG soaring) (NN ambition)))
    (. .)))

cc(forgot-13, But-1)
mark(comfort-5, with-2)
nsubj(comfort-5, Willie-3)
nsubj(play-7, Willie-3)
aux(comfort-5, to-4)
advcl(forgot-13, comfort-5)
conj_and(comfort-5, play-7)
advcl(forgot-13, play-7)
prep_with(comfort-5, her-9)
nsubj(forgot-13, she-11)
advmod(forgot-13, soon-12)
root(ROOT-0, forgot-13)
poss(ambition-16, her-14)
amod(ambition-16, soaring-15)
dobj(forgot-13, ambition-16)

(ROOT
  (S
    (NP (NNP Willie))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (VBD did) (RB not)
      (VP (VB forget)
        (NP (PRP it))))
    (. .)))

nsubj(forget-7, Willie-1)
advmod(forget-7, however-3)
aux(forget-7, did-5)
neg(forget-7, not-6)
root(ROOT-0, forget-7)
dobj(forget-7, it-8)

(ROOT
  (FRAG
    (SBAR (IN If)
      (S
        (NP (NNP Agnes))
        (VP (VBD wished)
          (S
            (VP (TO to)
              (VP (VB enjoy)
                (NP
                  (NP (DT the) (NN privacy))
                  (PP (IN of)
                    (NP (DT the) (NNS leaves))))
                (ADVP (RB up)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN height))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NNS trees))
                          (, ,)
                          (SBAR
                            (WHADVP (WRB why))
                            (S
                              (VP (MD should) (RB n't))
                              (NP (PRP she)))))))))))))))
    (. ?)))

mark(wished-3, If-1)
nsubj(wished-3, Agnes-2)
nsubj(enjoy-5, Agnes-2)
root(ROOT-0, wished-3)
aux(enjoy-5, to-4)
xcomp(wished-3, enjoy-5)
det(privacy-7, the-6)
dobj(enjoy-5, privacy-7)
det(leaves-10, the-9)
prep_of(privacy-7, leaves-10)
advmod(enjoy-5, up-11)
det(height-14, the-13)
prep_in(up-11, height-14)
det(trees-17, the-16)
prep_of(height-14, trees-17)
advmod(should-20, why-19)
rcmod(trees-17, should-20)
neg(should-20, n't-21)
dep(should-20, she-22)

(ROOT
  (S
    (ADVP (IN At) (JJS least))
    (, ,)
    (NP (NNP why))
    (VP (MD should) (RB n't)
      (S
        (NP
          (NP (PRP she))
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB help)
                  (NP (PRP her))
                  (PP (TO to)
                    (NP (PRP it))))))))))
    (. .)))

advmod(should-5, At-1)
pobj(At-1, least-2)
nsubj(should-5, why-4)
root(ROOT-0, should-5)
neg(should-5, n't-6)
dep(should-5, she-7)
mark(help-11, if-8)
nsubj(help-11, he-9)
aux(help-11, could-10)
dep(she-7, help-11)
dobj(help-11, her-12)
prep_to(help-11, it-14)

(ROOT
  (S
    (S
      (ADVP (RB Certainly))
      (NP (PRP he))
      (VP (MD could) (RB n't)
        (VP
          (VP (VB change)
            (NP (PRP$ her) (NNS arms))
            (PP (IN into)
              (NP (NNS wings))))
          (, ,)
          (CC or)
          (VP (VB cover)
            (NP (PRP her))
            (PP (IN with)
              (NP (NNS feathers))))
          (, ,)
          (CC or)
          (VP (VB make)
            (S
              (NP (PRP$ her) (NNS bones))
              (ADJP (JJ hollow) (RB so)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN air))
                    (VP (MD might)
                      (VP (VB get)
                        (NP (DT all))
                        (PP
                          (PP (IN through)
                            (NP (PRP her)))
                          (, ,) (RB even)
                          (PP (IN into)
                            (NP (PRP$ her) (NNS quills))))))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD could)
        (VP (VB get)
          (NP (PRP her))
          (PRT (RP up))
          (PP (IN into)
            (NP
              (NP (DT the) (NN tree))
              (, ,)
              (CC and)
              (RB even)
              (NP
                (NP (NN something))
                (NP (JJR more))
                (, ,)
                (ADVP (RB perhaps))))))))
    (. .)))

advmod(change-5, Certainly-1)
nsubj(change-5, he-2)
nsubj(cover-12, he-2)
nsubj(make-18, he-2)
aux(change-5, could-3)
neg(change-5, n't-4)
root(ROOT-0, change-5)
poss(arms-7, her-6)
dobj(change-5, arms-7)
prep_into(change-5, wings-9)
conj_or(change-5, cover-12)
dobj(cover-12, her-13)
prep_with(cover-12, feathers-15)
conj_or(change-5, make-18)
poss(bones-20, her-19)
nsubj(hollow-21, bones-20)
xcomp(make-18, hollow-21)
advmod(hollow-21, so-22)
mark(get-27, that-23)
det(air-25, the-24)
nsubj(get-27, air-25)
aux(get-27, might-26)
ccomp(hollow-21, get-27)
dobj(get-27, all-28)
prep_through(get-27, her-30)
dep(get-27, even-32)
poss(quills-35, her-34)
prep_into(get-27, quills-35)
nsubj(get-40, he-38)
aux(get-40, could-39)
conj_but(change-5, get-40)
dobj(get-40, her-41)
prt(get-40, up-42)
det(tree-45, the-44)
prep_into(get-40, tree-45)
prep_into(get-40, even-48)
advmod(tree-45, even-48)
conj_and(tree-45, even-48)
dep(tree-45, something-49)
dep(something-49, more-50)
advmod(something-49, perhaps-52)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD would)
        (VP (VB see)
          (PP (IN about)
            (NP (PRP it))))))
    (: --)
    (S
      (ADVP (DT that) (VBZ is))
      (, ,)
      (NP (PRP he))
      (VP (MD would)
        (VP (VB think)
          (PP (IN about)
            (NP (PRP it)))
          (, ,)
          (PP (IN for)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN done)
                          (SBAR
                            (S
                              (NP (PRP he))
                              (VP (VBD did) (RB not)
                                (ADVP (RB yet))
                                (VP (VB see))))))))))))))))
    (. .)))

nsubj(see-3, He-1)
aux(see-3, would-2)
root(ROOT-0, see-3)
prep_about(see-3, it-5)
advmod(think-12, that-7)
dep(that-7, is-8)
nsubj(think-12, he-10)
aux(think-12, would-11)
parataxis(see-3, think-12)
prep_about(think-12, it-14)
advmod(was-19, how-17)
nsubj(was-19, it-18)
nsubjpass(done-22, it-18)
prepc_for(think-12, was-19)
aux(done-22, to-20)
auxpass(done-22, be-21)
xcomp(was-19, done-22)
nsubj(see-27, he-23)
aux(see-27, did-24)
neg(see-27, not-25)
advmod(see-27, yet-26)
ccomp(done-22, see-27)

(ROOT
  (S
    (ADVP
      (NP (NNP Long))
      (RB ago))
    (, ,)
    (NP (RB almost) (DT the) (NN moment))
    (NP (PRP he))
    (VP
      (VP (VBD arrived))
      (PRN (, ,)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN set)
              (NP (PRP$ his) (NN wheel))
              (PP (IN in)
                (NP (NN order))))))
        (, ,))
      (CC and)
      (VP (VBD got)
        (NP (PRP$ his) (NN waking-machine))
        (PP (IN into)
          (S
            (VP (VBG working)
              (ADJP (JJ trim)))))))
    (. .)))

dep(ago-2, Long-1)
advmod(arrived-8, ago-2)
advmod(moment-6, almost-4)
det(moment-6, the-5)
nsubj(arrived-8, moment-6)
nsubj(got-19, moment-6)
nsubj(arrived-8, he-7)
root(ROOT-0, arrived-8)
nsubj(set-12, he-10)
aux(set-12, had-11)
parataxis(arrived-8, set-12)
parataxis(got-19, set-12)
poss(wheel-14, his-13)
dobj(set-12, wheel-14)
prep_in(set-12, order-16)
conj_and(arrived-8, got-19)
poss(waking-machine-21, his-20)
dobj(got-19, waking-machine-21)
prepc_into(got-19, working-23)
acomp(working-23, trim-24)

(ROOT
  (S (CC And)
    (ADVP
      (ADVP (RB now) (RBR more))
      (SBAR (IN than)
        (S
          (S
            (ADVP (RB ever))
            (NP (PRP he))
            (VP (VBD enjoyed)
              (S
                (VP (VBG being)
                  (VP (VBN pulled)
                    (PRT (RP out))
                    (PP (IN of)
                      (NP (NN bed)))
                    (PP (IN in)
                      (NP
                        (NP
                          (NP (DT the) (NN middle))
                          (PP (IN of)
                            (NP (DT the) (NN night))))
                        (: --)
                        (ADJP (RB especially)
                          (PP (IN in)
                            (NP (DT the) (JJ fine) (NN weather))))
                        (: ;)
                        (PP (IN for)
                          (NP (RB then)))))
                    (, ,)
                    (PP (IN in)
                      (NP
                        (NP (DT that) (JJ hushed) (NN hour))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (DT the) (NN night))
                            (VP (VBZ is)
                              (ADVP (RB just))
                              (VP (VBG melting)
                                (PP (IN into)
                                  (NP (DT the) (NN morn))))))))))))))
          (, ,)
          (CC and)
          (S
            (NP (DT the) (NN earth))
            (VP (VBZ looks)
              (SBAR (IN as)
                (S
                  (SBAR (IN if)
                    (S
                      (NP (PRP she))
                      (VP (VBD were)
                        (VP (VBG losing)
                          (NP (PRP$ her) (NNS dreams))))))
                  (, ,)
                  (ADVP (RB yet))
                  (VP (VBD had) (RB not)
                    (VP (VBN begun)
                      (S
                        (VP (TO to)
                          (VP (VB recognise)
                            (NP (PRP$ her) (JJ own) (NNS thoughts))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD would) (RB not)
      (ADVP (RB unfrequently))
      (VP
        (VP (VB go)
          (PRT (RP out))
          (PP (IN into)
            (NP (DT the) (NN garden))))
        (, ,)
        (CC and)
        (VP (VB wander)
          (PRT (RP about))
          (PP (IN for)
            (NP (DT a) (JJ few) (JJ thoughtful) (NNS minutes))))))
    (. .)))

advmod(more-3, now-2)
advmod(go-69, more-3)
mark(enjoyed-7, than-4)
advmod(enjoyed-7, ever-5)
nsubj(enjoyed-7, he-6)
advcl(more-3, enjoyed-7)
auxpass(pulled-9, being-8)
xcomp(enjoyed-7, pulled-9)
prt(pulled-9, out-10)
prep_of(pulled-9, bed-12)
det(middle-15, the-14)
prep_in(pulled-9, middle-15)
det(night-18, the-17)
prep_of(middle-15, night-18)
amod(middle-15, especially-20)
det(weather-24, the-22)
amod(weather-24, fine-23)
prep_in(especially-20, weather-24)
prep(middle-15, for-26)
pobj(for-26, then-27)
det(hour-32, that-30)
amod(hour-32, hushed-31)
prep_in(pulled-9, hour-32)
advmod(melting-38, when-33)
det(night-35, the-34)
nsubj(melting-38, night-35)
aux(melting-38, is-36)
advmod(melting-38, just-37)
rcmod(hour-32, melting-38)
det(morn-41, the-40)
prep_into(melting-38, morn-41)
det(earth-45, the-44)
nsubj(looks-46, earth-45)
advcl(more-3, looks-46)
conj_and(enjoyed-7, looks-46)
mark(begun-58, as-47)
mark(losing-51, if-48)
nsubj(losing-51, she-49)
aux(losing-51, were-50)
advcl(begun-58, losing-51)
poss(dreams-53, her-52)
dobj(losing-51, dreams-53)
advmod(begun-58, yet-55)
aux(begun-58, had-56)
neg(begun-58, not-57)
advcl(looks-46, begun-58)
aux(recognise-60, to-59)
xcomp(begun-58, recognise-60)
poss(thoughts-63, her-61)
amod(thoughts-63, own-62)
dobj(recognise-60, thoughts-63)
nsubj(go-69, he-65)
nsubj(wander-76, he-65)
aux(go-69, would-66)
neg(go-69, not-67)
advmod(go-69, unfrequently-68)
root(ROOT-0, go-69)
prt(go-69, out-70)
det(garden-73, the-72)
prep_into(go-69, garden-73)
conj_and(go-69, wander-76)
prt(wander-76, about-77)
det(minutes-82, a-79)
amod(minutes-82, few-80)
amod(minutes-82, thoughtful-81)
prep_for(wander-76, minutes-82)

(ROOT
  (S
    (NP (DT The) (JJ same) (NN night))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP$ his) (NN wheel))
        (VP (VBD pulled)
          (NP (PRP him)))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD rose))
      (CC and)
      (VP (VBD went)
        (PRT (RP out))
        (PP (IN into)
          (NP (DT the) (NN garden)))))
    (. .)))

det(night-3, The-1)
amod(night-3, same-2)
tmod(rose-12, night-3)
advmod(pulled-8, when-5)
poss(wheel-7, his-6)
nsubj(pulled-8, wheel-7)
advcl(rose-12, pulled-8)
dobj(pulled-8, him-9)
nsubj(rose-12, he-11)
nsubj(went-14, he-11)
root(ROOT-0, rose-12)
conj_and(rose-12, went-14)
prt(went-14, out-15)
det(garden-18, the-17)
prep_into(went-14, garden-18)

(ROOT
  (S
    (NP (DT The) (NN night))
    (VP (VBD was)
      (PP (IN at)
        (NP (NNS odds)))
      (PP (IN with)
        (NP
          (NP (NN morning))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (VP
                  (FRAG
                    (WHNP (WDT which))))))))))
    (. .)))

det(night-2, The-1)
nsubj(was-3, night-2)
root(ROOT-0, was-3)
prep_at(was-3, odds-5)
prep_with(was-3, morning-7)
nsubj(which-10, morning-7)
aux(which-10, was-9)
rcmod(morning-7, which-10)

(ROOT
  (S
    (S
      (NP (DT An) (JJ occasional) (NN bat))
      (VP (MD would)
        (VP (VB flit)
          (PP (IN like)
            (NP
              (NP (DT a)
                (ADJP (JJ doubtful))
                (NN shadow))
              (PP (IN across)
                (NP (PRP$ his) (NNS eyes))))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT a) (JJ cool) (NN breath))
        (PP (IN of)
          (NP (NN air))))
      (VP
        (VP (VBD was)
          (VP (VBG roaming)
            (PP (IN about)
              (NP
                (NP (RB as) (RB well))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD was) (RB not)
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN night))
                          (ADVP (IN at) (DT all)))))))))))
        (, ,)
        (CC but)
        (VP
          (ADVP (RB plainly))
          (VBD belonged)
          (PP (TO to)
            (NP (DT the) (NN morning))))))
    (. .)))

det(bat-3, An-1)
amod(bat-3, occasional-2)
nsubj(flit-5, bat-3)
aux(flit-5, would-4)
root(ROOT-0, flit-5)
det(shadow-9, a-7)
amod(shadow-9, doubtful-8)
prep_like(flit-5, shadow-9)
poss(eyes-12, his-11)
prep_across(shadow-9, eyes-12)
det(breath-17, a-15)
amod(breath-17, cool-16)
nsubj(roaming-21, breath-17)
nsubj(belonged-37, breath-17)
prep_of(breath-17, air-19)
aux(roaming-21, was-20)
conj_but(flit-5, roaming-21)
prep(roaming-21, about-22)
advmod(well-24, as-23)
pobj(about-22, well-24)
nsubj(was-27, well-24)
rcmod(well-24, was-27)
neg(was-27, not-28)
det(night-31, the-30)
prep_of(was-27, night-31)
advmod(night-31, at-32)
pobj(at-32, all-33)
advmod(belonged-37, plainly-36)
conj_but(flit-5, belonged-37)
conj_but(roaming-21, belonged-37)
det(morning-40, the-39)
prep_to(belonged-37, morning-40)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD wandered)
        (PP (TO to)
          (NP
            (NP (DT the) (NN bottom))
            (PP (IN of)
              (NP (DT the) (NN garden))))))
      (PRN (: --)
        (PP (TO to)
          (NP
            (NP (DT the) (NN clump))
            (PP (IN of)
              (NP (NNS trees)))))
        (, ,)
        (S
          (VP (VB lay)
            (PRT (RP down))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (NNP Agnes))
                (VP
                  (VP (VBD had)
                    (VP (VBN been)
                      (VP (VBG lying)
                        (NP (DT the) (NN night))
                        (ADVP (RB before)))))
                  (, ,)
                  (CC and)
                  (VP (VBD thought))))))))
      (CC and)
      (VP (VBD thought)
        (SBAR (IN until)
          (S
            (NP (PRP he))
            (VP (VBD felt)
              (PP (IN in)
                (NP (PRP himself)))
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (DT the) (NN child))
                  (VP (VBD had)
                    (VP (VBN felt)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP she))
                          (VP (VBD longed)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (NP (DT a) (NN bird)))))))))))))))))
    (. .)))

nsubj(wandered-2, He-1)
nsubj(thought-30, He-1)
root(ROOT-0, wandered-2)
det(bottom-5, the-4)
prep_to(wandered-2, bottom-5)
det(garden-8, the-7)
prep_of(bottom-5, garden-8)
det(clump-12, the-11)
prep_to(lay-16, clump-12)
prep_of(clump-12, trees-14)
parataxis(wandered-2, lay-16)
parataxis(thought-30, lay-16)
prt(lay-16, down-17)
advmod(lying-22, where-18)
nsubj(lying-22, Agnes-19)
nsubj(thought-28, Agnes-19)
aux(lying-22, had-20)
aux(lying-22, been-21)
advcl(lay-16, lying-22)
det(night-24, the-23)
tmod(lying-22, night-24)
advmod(lying-22, before-25)
advcl(lay-16, thought-28)
conj_and(lying-22, thought-28)
conj_and(wandered-2, thought-30)
mark(felt-33, until-31)
nsubj(felt-33, he-32)
advcl(thought-30, felt-33)
prep_in(felt-33, himself-35)
advmod(felt-40, how-36)
det(child-38, the-37)
nsubj(felt-40, child-38)
aux(felt-40, had-39)
ccomp(felt-33, felt-40)
advmod(longed-43, when-41)
nsubj(longed-43, she-42)
nsubj(bird-47, she-42)
advcl(felt-40, longed-43)
aux(bird-47, to-44)
cop(bird-47, be-45)
det(bird-47, a-46)
xcomp(longed-43, bird-47)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD could)
      (NP (PRP he))
      (VP (VB do)
        (S
          (VP (TO to)
            (VP (VB content)
              (NP (PRP her)))))))
    (. ?)))

dep(do-4, What-1)
aux(do-4, could-2)
nsubj(do-4, he-3)
nsubj(content-6, he-3)
root(ROOT-0, do-4)
aux(content-6, to-5)
xcomp(do-4, content-6)
dobj(content-6, her-7)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD knew)
        (S
          (NP
            (NP (DT every) (NN bough))
            (PP (IN of)
              (NP (DT the) (JJ old) (NNS trees))))
          (NP (PRP himself)))
        (, ,)
        (S
          (VP (VBG having)
            (VP (VBD scrambled)
              (PRT (RP over))
              (NP (PRP them))
              (PP (IN like)
                (NP
                  (NP (DT a) (JJ squirrel) (NNS scores))
                  (PP (IN of)
                    (NP (NNS times))))))))))
    (: ;)
    (S (CC but)
      (SBAR (RB even) (IN if)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB get)
              (NP (NNS Agnes))
              (PP (IN up)
                (NP
                  (NP (DT the) (JJ bare) (NN bole))
                  (PP (IN of)
                    (NP (DT an) (NN elm)
                      (CC or)
                      (NN fir)))))))))
      (, ,)
      (NP (PRP he))
      (VP (MD could) (RB not)
        (VP (VB trust)
          (S
            (NP (PRP her))
            (VP (TO to)
              (VP (VB go)
                (S
                  (VP (VBG scrambling)
                    (PP (IN about)
                      (NP (DT the) (NNS branches)))))))))))
    (. .)))

nsubj(knew-2, He-1)
nsubj(scrambled-12, He-1)
root(ROOT-0, knew-2)
det(bough-4, every-3)
nsubj(himself-9, bough-4)
det(trees-8, the-6)
amod(trees-8, old-7)
prep_of(bough-4, trees-8)
xcomp(knew-2, himself-9)
aux(scrambled-12, having-11)
xcomp(knew-2, scrambled-12)
prt(scrambled-12, over-13)
dobj(scrambled-12, them-14)
det(scores-18, a-16)
amod(scores-18, squirrel-17)
prep_like(scrambled-12, scores-18)
prep_of(scores-18, times-20)
cc(trust-42, but-22)
advmod(get-27, even-23)
mark(get-27, if-24)
nsubj(get-27, he-25)
aux(get-27, could-26)
advcl(trust-42, get-27)
dobj(get-27, Agnes-28)
det(bole-32, the-30)
amod(bole-32, bare-31)
prep_up(get-27, bole-32)
det(elm-35, an-34)
prep_of(bole-32, elm-35)
prep_of(bole-32, fir-37)
conj_or(elm-35, fir-37)
nsubj(trust-42, he-39)
aux(trust-42, could-40)
neg(trust-42, not-41)
parataxis(knew-2, trust-42)
dobj(trust-42, her-43)
nsubj(go-45, her-43)
aux(go-45, to-44)
xcomp(trust-42, go-45)
xcomp(go-45, scrambling-46)
det(branches-49, the-48)
prep_about(scrambling-46, branches-49)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (JJ other) (NN hand)))
    (, ,)
    (SBAR
      (WHADVP (WRB wherever))
      (S
        (NP (PRP he))
        (VP (MD could)
          (VP (VB go)))))
    (, ,)
    (NP (PRP he))
    (VP (MD could)
      (ADVP (RB surely))
      (VP
        (ADVP (RB somehow))
        (VB help)
        (S
          (NP (NNP Agnes))
          (VP (TO to)
            (VP (VB go))))))
    (. .)))

det(hand-4, the-2)
amod(hand-4, other-3)
prep_on(help-15, hand-4)
advmod(go-9, wherever-6)
nsubj(go-9, he-7)
aux(go-9, could-8)
advcl(help-15, go-9)
nsubj(help-15, he-11)
aux(help-15, could-12)
advmod(help-15, surely-13)
advmod(help-15, somehow-14)
root(ROOT-0, help-15)
dobj(help-15, Agnes-16)
nsubj(go-18, Agnes-16)
aux(go-18, to-17)
xcomp(help-15, go-18)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (VP (VBN gathered)
          (NP
            (NP (DT a) (NN thought))
            (CC or)
            (NP (CD two))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD went)
      (ADVP (RB back))
      (PP (TO to)
        (NP (NN bed))))
    (. .)))

aux(gathered-2, Having-1)
vmod(went-9, gathered-2)
det(thought-4, a-3)
dobj(gathered-2, thought-4)
dobj(gathered-2, two-6)
conj_or(thought-4, two-6)
nsubj(went-9, he-8)
root(ROOT-0, went-9)
advmod(went-9, back-10)
prep_to(went-9, bed-12)

(ROOT
  (NP
    (NP
      (NP (DT The) (RB very) (JJ next) (NN evening))
      (SBAR
        (S
          (NP (PRP he))
          (VP
            (VP (VBD set)
              (S
                (VP (TO to)
                  (VP (VB work)))))
            (CC and)
            (VP (VBD spent)
              (NP
                (NP (DT the) (NN whole))
                (PP (IN of)
                  (NP
                    (NP (DT that))
                    (CC and)
                    (NP (DT the) (NN following)))))
              (PP (IN at)
                (NP (PRP$ his) (NN bench)))
              (, ,)
              (S
                (VP
                  (VP (VBG planing))
                  (, ,)
                  (CC and)
                  (VP (VBG shaping))
                  (, ,)
                  (CC and)
                  (VP
                    (ADVP (RB generally))
                    (VBG preparing)
                    (PP (IN for)
                      (NP (DT a) (NN construction))))))
              (, ,))))))
    (NP
      (NP (DT the) (NN plan))
      (PP (IN of)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD was)
              (ADVP (RB now))
              (ADJP (JJ clear)
                (PP (IN in)
                  (NP (PRP$ his) (NN head)))))))))
    (. .)))

det(evening-4, The-1)
advmod(evening-4, very-2)
amod(evening-4, next-3)
root(ROOT-0, evening-4)
nsubj(set-6, he-5)
nsubj(work-8, he-5)
nsubj(spent-10, he-5)
rcmod(evening-4, set-6)
aux(work-8, to-7)
xcomp(set-6, work-8)
rcmod(evening-4, spent-10)
conj_and(set-6, spent-10)
det(whole-12, the-11)
dobj(spent-10, whole-12)
prep_of(whole-12, that-14)
det(following-17, the-16)
prep_of(whole-12, following-17)
conj_and(that-14, following-17)
poss(bench-20, his-19)
prep_at(spent-10, bench-20)
dep(spent-10, planing-22)
dep(spent-10, shaping-25)
conj_and(planing-22, shaping-25)
advmod(preparing-29, generally-28)
dep(spent-10, preparing-29)
conj_and(planing-22, preparing-29)
det(construction-32, a-31)
prep_for(preparing-29, construction-32)
det(plan-35, the-34)
dep(evening-4, plan-35)
nsubj(clear-40, which-37)
cop(clear-40, was-38)
advmod(clear-40, now-39)
prepc_of(plan-35, clear-40)
poss(head-43, his-42)
prep_in(clear-40, head-43)

(ROOT
  (S
    (PP (IN At)
      (NP (NN length)))
    (, ,)
    (PP (IN on)
      (NP (DT the) (JJ third) (NN evening)))
    (, ,)
    (NP (PRP he))
    (VP (VBD carried)
      (NP
        (NP
          (QP (PDT half) (DT a) (NN dozen))
          (JJ long) (NNS poles))
        (, ,)
        (CC and)
        (NP
          (NP (JJ wheeled) (JJ several) (NNS barrowfuls))
          (PP (IN of)
            (NP (JJ short) (NNS planks)))))
      (, ,)
      (S
        (VP (VBG measuring)
          (PP (CC but)
            (NP (DT a) (JJ few) (NNS inches)))
          (PP (IN over)
            (NP (CD two) (NNS feet)))
          (, ,)
          (ADVP (RB down)
            (PP (TO to)
              (NP
                (NP (DT the) (NN clump))
                (PP (IN of)
                  (NP (NNS trees)))))))))
    (. .)))

prep_at(carried-10, length-2)
det(evening-7, the-5)
amod(evening-7, third-6)
prep_on(carried-10, evening-7)
nsubj(carried-10, he-9)
root(ROOT-0, carried-10)
quantmod(dozen-13, half-11)
quantmod(dozen-13, a-12)
num(poles-15, dozen-13)
amod(poles-15, long-14)
dobj(carried-10, poles-15)
amod(barrowfuls-20, wheeled-18)
amod(barrowfuls-20, several-19)
dobj(carried-10, barrowfuls-20)
conj_and(poles-15, barrowfuls-20)
amod(planks-23, short-22)
prep_of(barrowfuls-20, planks-23)
vmod(carried-10, measuring-25)
prep(measuring-25, but-26)
det(inches-29, a-27)
amod(inches-29, few-28)
pobj(but-26, inches-29)
num(feet-32, two-31)
prep_over(measuring-25, feet-32)
advmod(measuring-25, down-34)
det(clump-37, the-36)
prep_to(down-34, clump-37)
prep_of(clump-37, trees-39)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP
          (NP (DT the) (NN foot))
          (PP (IN of)
            (NP (DT the) (JJS largest) (NN elm)))))
      (NP (PRP he))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB dig))))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT the) (NN intention))
            (PP (IN of)
              (S
                (VP (VBG inserting)
                  (NP
                    (NP (DT the) (JJ thick) (NN end))
                    (PP (IN of)
                      (NP (CD one)))
                    (PP (IN of)
                      (NP (DT the) (NNS poles)))))))))))
    (: ;)
    (S
      (S (CC but)
        (NP (PRP he))
        (ADVP (RB soon))
        (VP (VBD found)
          (S
            (NP (PRP it))
            (ADJP (JJ impossible)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (PP
                      (ADVP (DT half) (RB deep) (RB enough))
                      (, ,) (IN because) (IN of)
                      (NP
                        (NP (DT the) (JJ tremendous) (NNS roots))
                        (PP (IN of)
                          (NP (DT the) (NN tree))))))))))))
      (, ,)
      (CC and)
      (S
        (S
          (VP (VBG giving)
            (NP (PRP it))
            (PRT (RP up))))
        (, ,)
        (S
          (VP (VBN thought)
            (PP (IN of)
              (NP (DT a) (JJR better) (NN plan)))))))
    (. .)))

det(foot-3, the-2)
prep_at(began-9, foot-3)
det(elm-7, the-5)
amod(elm-7, largest-6)
prep_of(foot-3, elm-7)
nsubj(began-9, he-8)
nsubj(dig-11, he-8)
root(ROOT-0, began-9)
aux(dig-11, to-10)
xcomp(began-9, dig-11)
det(intention-15, the-14)
prep_with(began-9, intention-15)
prepc_of(intention-15, inserting-17)
det(end-20, the-18)
amod(end-20, thick-19)
dobj(inserting-17, end-20)
prep_of(end-20, one-22)
det(poles-25, the-24)
prep_of(end-20, poles-25)
nsubj(found-30, he-28)
nsubj(giving-49, he-28)
advmod(found-30, soon-29)
parataxis(began-9, found-30)
nsubj(impossible-32, it-31)
nsubj(get-34, it-31)
xcomp(found-30, impossible-32)
aux(get-34, to-33)
xcomp(impossible-32, get-34)
dep(enough-37, half-35)
advmod(enough-37, deep-36)
advmod(get-34, enough-37)
det(roots-43, the-41)
amod(roots-43, tremendous-42)
prep_because_of(get-34, roots-43)
det(tree-46, the-45)
prep_of(roots-43, tree-46)
parataxis(began-9, giving-49)
conj_and(found-30, giving-49)
dobj(giving-49, it-50)
prt(giving-49, up-51)
parataxis(giving-49, thought-53)
det(plan-57, a-55)
amod(plan-57, better-56)
prep_of(thought-53, plan-57)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD set)
        (PRT (RP off))
        (PP (TO to)
          (NP (DT the) (NN smithy))))
      (, ,)
      (CC and)
      (VP (VBD bought)
        (PP (IN of)
          (NP (NNP Mr) (NNP Willett)))
        (NP
          (NP (DT some) (CD fifteen) (NNS feet))
          (PP (IN of)
            (NP (NN iron) (NN rod)))))
      (, ,)
      (PP (IN with)
        (NP
          (QP (DT a) (NN dozen))
          (NNS staples))))
    (. .)))

nsubj(set-2, He-1)
nsubj(bought-9, He-1)
root(ROOT-0, set-2)
prt(set-2, off-3)
det(smithy-6, the-5)
prep_to(set-2, smithy-6)
conj_and(set-2, bought-9)
nn(Willett-12, Mr-11)
prep_of(bought-9, Willett-12)
det(feet-15, some-13)
num(feet-15, fifteen-14)
dobj(bought-9, feet-15)
nn(rod-18, iron-17)
prep_of(feet-15, rod-18)
conj_and(set-2, with-20)
quantmod(dozen-22, a-21)
num(staples-23, dozen-22)
prep_with(set-2, staples-23)

(ROOT
  (S
    (S
      (VP (VBG Carrying)
        (NP (PRP them))
        (ADVP (RB home))
        (PP (TO to)
          (NP (PRP$ his) (JJ small) (NN forge)))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD cut)
        (NP (DT the) (NN rod))
        (PP (IN into)
          (NP
            (NP (JJ equal) (NNS lengths))
            (PP (IN of)
              (NP (DT a) (JJ little)))))
        (PP (IN over)
          (NP (CD two) (NNS feet))))
      (, ,)
      (CC and)
      (VP (VBD made)
        (NP (DT a) (NN hook))
        (PP (IN at)
          (NP
            (NP (DT both) (NNS ends))
            (PP (IN of)
              (NP (DT each) (NN length)))))))
    (. .)))

vmod(cut-10, Carrying-1)
dobj(Carrying-1, them-2)
advmod(Carrying-1, home-3)
poss(forge-7, his-5)
amod(forge-7, small-6)
prep_to(Carrying-1, forge-7)
nsubj(cut-10, he-9)
nsubj(made-24, he-9)
root(ROOT-0, cut-10)
det(rod-12, the-11)
dobj(cut-10, rod-12)
amod(lengths-15, equal-14)
prep_into(cut-10, lengths-15)
det(little-18, a-17)
prep_of(lengths-15, little-18)
num(feet-21, two-20)
prep_over(cut-10, feet-21)
conj_and(cut-10, made-24)
det(hook-26, a-25)
dobj(made-24, hook-26)
det(ends-29, both-28)
prep_at(made-24, ends-29)
det(length-32, each-31)
prep_of(ends-29, length-32)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP
      (VP
        (VP (VBD carried)
          (NP (PRP them))
          (PRT (RP down))
          (PP (TO to)
            (NP (DT the) (NN elm))))
        (, ,)
        (CC and)
        (VP (VBD drove)
          (NP
            (NP (CD six))
            (PP (IN of)
              (NP (DT the) (NNS staples))))
          (PP (IN into)
            (NP
              (NP (DT the) (NN bole))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN tree))
                  (PP (IN at)
                    (NP (JJ equal) (NNS distances)))))))
          (ADVP (DT all) (RB round)))
        (NP (PRP it)))
      (, ,)
      (NP
        (NP (DT a) (NN foot))
        (PP (IN from)
          (NP
            (NP (DT the) (NN ground))
            (: ;)
            (NP
              (NP (DT the) (NNS others))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD drove)
                    (NP (CD one))
                    (PP (IN into)
                      (NP
                        (NP (DT each))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (CD six) (NNS poles))
                            (, ,)
                            (NP (DT a) (NN foot))))))
                    (PP (IN from)
                      (NP (DT the) (JJ thick) (NN end)))))))
            (: ;)
            (SBAR
              (WHPP (IN after)
                (WHNP (WDT which)))
              (S
                (NP (PRP he))
                (VP (VBN connected)
                  (NP (DT the) (NNS poles))
                  (PP (IN with)
                    (NP
                      (NP (DT the) (NN tree))
                      (, ,)
                      (NP (DT each))))
                  (PP (IN by)
                    (NP
                      (NP (DT a) (JJ hooked) (NN rod))
                      (CC and)
                      (NP (PRP$ its) (JJ corresponding) (NNS staples)))))))
            (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP
                  (NP (DT the) (NNS tops))
                  (PP (IN of)
                    (NP (DT the) (NNS poles))))
                (ADVP (RB just))
                (VP (VBN reached)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ first) (NN fork))
                      (PP (IN of)
                        (NP (DT the) (NN elm))))))))))))
    (. .)))

advmod(carried-3, Then-1)
nsubj(carried-3, he-2)
nsubj(drove-11, he-2)
root(ROOT-0, carried-3)
dobj(carried-3, them-4)
prt(carried-3, down-5)
det(elm-8, the-7)
prep_to(carried-3, elm-8)
conj_and(carried-3, drove-11)
dobj(drove-11, six-12)
det(staples-15, the-14)
prep_of(six-12, staples-15)
det(bole-18, the-17)
prep_into(drove-11, bole-18)
det(tree-21, the-20)
prep_of(bole-18, tree-21)
amod(distances-24, equal-23)
prep_at(tree-21, distances-24)
dep(round-26, all-25)
advmod(drove-11, round-26)
dobj(carried-3, it-27)
det(foot-30, a-29)
dobj(carried-3, foot-30)
det(ground-33, the-32)
prep_from(foot-30, ground-33)
prep_after(connected-57, ground-33)
det(others-36, the-35)
dep(ground-33, others-36)
nsubj(drove-38, he-37)
rcmod(others-36, drove-38)
dobj(drove-38, one-39)
prep_into(drove-38, each-41)
det(poles-45, the-43)
num(poles-45, six-44)
prep_of(each-41, poles-45)
det(foot-48, a-47)
appos(poles-45, foot-48)
det(end-52, the-50)
amod(end-52, thick-51)
prep_from(drove-38, end-52)
nsubj(connected-57, he-56)
rcmod(ground-33, connected-57)
det(poles-59, the-58)
dobj(connected-57, poles-59)
det(tree-62, the-61)
prep_with(connected-57, tree-62)
appos(tree-62, each-64)
det(rod-68, a-66)
amod(rod-68, hooked-67)
prep_by(connected-57, rod-68)
poss(staples-72, its-70)
amod(staples-72, corresponding-71)
prep_by(connected-57, staples-72)
conj_and(rod-68, staples-72)
advmod(reached-81, when-74)
det(tops-76, the-75)
nsubj(reached-81, tops-76)
det(poles-79, the-78)
prep_of(tops-76, poles-79)
advmod(reached-81, just-80)
rcmod(ground-33, reached-81)
det(fork-85, the-83)
amod(fork-85, first-84)
prep_to(reached-81, fork-85)
det(elm-88, the-87)
prep_of(fork-85, elm-88)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD nailed)
      (NP (DT a) (NN bracket))
      (PP (TO to)
        (NP (DT the) (NN tree)))
      (, ,)
      (PP (IN at)
        (NP
          (NP (DT the) (NN height))
          (PP (IN of)
            (NP
              (NP (DT an) (JJ easy) (NN step))
              (PP
                (PP (IN from)
                  (NP (DT the) (NN ground)))
                (, ,)
                (CC and)
                (PP (IN at)
                  (NP
                    (NP (DT the) (JJ same) (NN height))
                    (VP (VBN nailed)
                      (NP
                        (NP (DT a) (NN piece))
                        (PP (IN of)
                          (NP (NN wood))))
                      (PP (IN across)
                        (NP
                          (NP
                            (QP (IN between) (CD two)))
                          (PP (IN of)
                            (NP (DT the) (NNS poles))))))))))))))
    (. .)))

advmod(nailed-3, Then-1)
nsubj(nailed-3, he-2)
root(ROOT-0, nailed-3)
det(bracket-5, a-4)
dobj(nailed-3, bracket-5)
det(tree-8, the-7)
prep_to(nailed-3, tree-8)
det(height-12, the-11)
prep_at(nailed-3, height-12)
det(step-16, an-14)
amod(step-16, easy-15)
prep_of(height-12, step-16)
prep_of(height-12, step-16')
conj_and(step-16, step-16')
det(ground-19, the-18)
prep_from(step-16, ground-19)
det(height-25, the-23)
amod(height-25, same-24)
prep_at(step-16', height-25)
vmod(height-25, nailed-26)
det(piece-28, a-27)
dobj(nailed-26, piece-28)
prep_of(piece-28, wood-30)
quantmod(two-33, between-32)
prep_across(nailed-26, two-33)
det(poles-36, the-35)
prep_of(two-33, poles-36)

(ROOT
  (S
    (S
      (VP (VBG Resting)
        (PP (IN on)
          (NP
            (NP (DT the) (NN bracket))
            (CC and)
            (NP
              (NP (DT this) (NN piece))
              (PP (IN of)
                (NP (NN wood))))))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD laid)
        (NP
          (NP (DT the) (JJ first) (NN step))
          (PP (IN of)
            (NP (DT a) (NN stair)))))
      (, ,)
      (CC and)
      (VP (VBN fastened)
        (NP (PRP it))
        (ADVP (RB firmly))
        (PP (TO to)
          (NP (DT both)))))
    (. .)))

vmod(laid-12, Resting-1)
det(bracket-4, the-3)
prep_on(Resting-1, bracket-4)
det(piece-7, this-6)
prep_on(Resting-1, piece-7)
conj_and(bracket-4, piece-7)
prep_of(piece-7, wood-9)
nsubj(laid-12, he-11)
nsubj(fastened-21, he-11)
root(ROOT-0, laid-12)
det(step-15, the-13)
amod(step-15, first-14)
dobj(laid-12, step-15)
det(stair-18, a-17)
prep_of(step-15, stair-18)
conj_and(laid-12, fastened-21)
dobj(fastened-21, it-22)
advmod(fastened-21, firmly-23)
prep_to(fastened-21, both-25)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (DT Another) (NN bracket))
          (ADJP
            (NP (DT a) (RB little))
            (JJR higher)))
        (, ,)
        (CC and)
        (NP
          (NP (DT another) (NN piece))
          (PP (IN of)
            (NP
              (NP (NN wood))
              (VP (VBN nailed)
                (PP (TO to)
                  (NP (CD two) (NNS poles)))))))
        (, ,))
      (VP (VBD raised)
        (NP (DT the) (JJ next) (NN step))))
    (: ;)
    (CC and)
    (S (IN so)
      (NP (PRP he))
      (VP (VBD went)
        (ADVP (RB round)
          (CC and)
          (RB round))
        (NP
          (NP (DT the) (NN tree))
          (PP (IN in)
            (NP (DT an) (JJ ascending) (NN spiral))))
        (, ,)
        (S
          (VP (VBG climbing)
            (PP (IN on)
              (NP
                (NP (DT the) (NNS steps))
                (VP
                  (ADVP (RB already))
                  (VBN placed)
                  (S
                    (VP (TO to)
                      (VP (VB fix)
                        (NP (NNS others))
                        (PP (IN above)
                          (NP (PRP them)))))))))))))
    (. .)))

det(bracket-2, Another-1)
nsubj(raised-17, bracket-2)
det(little-4, a-3)
npadvmod(higher-5, little-4)
amod(bracket-2, higher-5)
det(piece-9, another-8)
conj_and(bracket-2, piece-9)
nsubj(raised-17, piece-9)
prep_of(piece-9, wood-11)
vmod(wood-11, nailed-12)
num(poles-15, two-14)
prep_to(nailed-12, poles-15)
root(ROOT-0, raised-17)
det(step-20, the-18)
amod(step-20, next-19)
dobj(raised-17, step-20)
dep(went-25, so-23)
nsubj(went-25, he-24)
conj_and(raised-17, went-25)
advmod(went-25, round-26)
advmod(went-25, round-28)
conj_and(round-26, round-28)
det(tree-30, the-29)
dobj(went-25, tree-30)
det(spiral-34, an-32)
amod(spiral-34, ascending-33)
prep_in(tree-30, spiral-34)
vmod(went-25, climbing-36)
det(steps-39, the-38)
prep_on(climbing-36, steps-39)
advmod(placed-41, already-40)
vmod(steps-39, placed-41)
aux(fix-43, to-42)
xcomp(placed-41, fix-43)
dobj(fix-43, others-44)
prep_above(fix-43, them-46)

(ROOT
  (S
    (S
      (VP (VBG Encircling)
        (NP (DT the) (NN tree))
        (ADVP
          (QP (DT some) (CD four)
            (CC or)
            (CD five))
          (NNS times))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP he))
            (VP (VBD wanted)
              (NP (DT the) (NN ascent))
              (ADVP (RB easy))
              (PP (IN for)
                (NP (JJ little) (NNS feet))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (PP (IN at)
        (NP
          (NP (NN length))
          (PP (IN at)
            (NP (PRP$ its) (NN fork))))))
    (. .)))

vmod(was-21, Encircling-1)
det(tree-3, the-2)
dobj(Encircling-1, tree-3)
det(four-5, some-4)
dep(times-8, four-5)
conj_or(four-5, five-7)
dep(times-8, five-7)
advmod(Encircling-1, times-8)
mark(wanted-12, for-10)
nsubj(wanted-12, he-11)
advcl(Encircling-1, wanted-12)
det(ascent-14, the-13)
dobj(wanted-12, ascent-14)
advmod(wanted-12, easy-15)
amod(feet-18, little-17)
prep_for(wanted-12, feet-18)
nsubj(was-21, he-20)
root(ROOT-0, was-21)
prep_at(was-21, length-23)
poss(fork-26, its-25)
prep_at(length-23, fork-26)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP he))
    (VP
      (VP (VBD laid)
        (NP (DT a) (NN platform)
          (CC or)
          (NN landing-place)))
      (, ,)
      (CC and)
      (VP (VBD paused)
        (S
          (VP (TO to)
            (VP (VB consider)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (ADVP (JJ next)))))))))))
    (. .)))

advmod(laid-3, There-1)
nsubj(laid-3, he-2)
nsubj(paused-10, he-2)
nsubj(consider-12, he-2)
root(ROOT-0, laid-3)
det(platform-5, a-4)
dobj(laid-3, platform-5)
dobj(laid-3, landing-place-7)
conj_or(platform-5, landing-place-7)
conj_and(laid-3, paused-10)
aux(consider-12, to-11)
xcomp(paused-10, consider-12)
nsubj(do-15, what-13)
aux(do-15, to-14)
ccomp(consider-12, do-15)
xcomp(consider-12, do-15)
advmod(do-15, next-16)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (PP (IN on)
        (NP
          (NP (DT the) (JJ third) (NN evening))
          (PP (IN from)
            (NP
              (NP (DT the) (NN laying))
              (PP (IN of)
                (NP (DT the) (JJ first) (NN step))))))))
    (. .)))

nsubj(was-2, This-1)
root(ROOT-0, was-2)
det(evening-6, the-4)
amod(evening-6, third-5)
prep_on(was-2, evening-6)
det(laying-9, the-8)
prep_from(evening-6, laying-9)
det(step-13, the-11)
amod(step-13, first-12)
prep_of(laying-9, step-13)

(ROOT
  (S
    (PP (IN From)
      (NP (DT the) (NN fork)))
    (NP (JJ many) (NNS boughs))
    (VP (VBD rose)
      (CC and)
      (VBD spread) (: --)
      (PP (IN amongst)
        (NP (PRP them)))
      (PP
        (ADVP
          (NP (CD two))
          (RB very))
        (IN near)
        (NP (DT each) (JJ other)))
      (, ,)
      (PP (IN between)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP he))
            (VP (VBD saw)
              (SBAR
                (WHADVP (WRB how))
                (S (, ,)
                  (PP (IN by)
                    (NP
                      (NP (NN help))
                      (PP (IN of)
                        (NP (JJ various) (NNS inequalities)))))
                  (, ,)
                  (NP (PRP he))
                  (VP (MD might)
                    (VP (VB build)
                      (NP (DT a) (JJ little) (JJ straight) (NN staircase))
                      (S
                        (VP (VBG leading)
                          (PRT (RP up))
                          (PP (IN into)
                            (NP
                              (NP (DT a) (JJ perfect) (NN wilderness))
                              (PP (IN of)
                                (NP (NNS leaves)
                                  (CC and)
                                  (NNS branches))))))))))))))))
    (. .)))

det(fork-3, the-2)
prep_from(rose-6, fork-3)
amod(boughs-5, many-4)
nsubj(rose-6, boughs-5)
nsubj(spread-8, boughs-5)
root(ROOT-0, rose-6)
conj_and(rose-6, spread-8)
prep_amongst(rose-6, them-11)
npadvmod(very-13, two-12)
advmod(rose-6, very-13)
det(other-16, each-15)
prep_near(rose-6, other-16)
dobj(saw-21, which-19)
nsubj(saw-21, he-20)
prepc_between(rose-6, saw-21)
advmod(build-32, how-22)
prep_by(build-32, help-25)
amod(inequalities-28, various-27)
prep_of(help-25, inequalities-28)
nsubj(build-32, he-30)
aux(build-32, might-31)
ccomp(saw-21, build-32)
det(staircase-36, a-33)
amod(staircase-36, little-34)
amod(staircase-36, straight-35)
dobj(build-32, staircase-36)
xcomp(build-32, leading-37)
prt(leading-37, up-38)
det(wilderness-42, a-40)
amod(wilderness-42, perfect-41)
prep_into(leading-37, wilderness-42)
prep_of(wilderness-42, leaves-44)
prep_of(wilderness-42, branches-46)
conj_and(leaves-44, branches-46)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD set)
        (PP (IN about)
          (NP (PRP it)))
        (PP (IN at)
          (NP (RB once)))))
    (, ,)
    (CC and)
    (, ,)
    (SBAR (IN although)
      (S
        (NP (PRP he))
        (VP (VBD found)
          (S
            (NP (PRP it))
            (ADJP (RBR more) (JJ difficult)
              (SBAR (IN than)
                (S
                  (NP (PRP he))
                  (VP (VBD had)
                    (VP (VBN expected)
                      (PRN (, ,)
                        (S
                          (VP (VBN succeeded)
                            (PP (IN at)
                              (NP
                                (NP (JJ last))
                                (PP (IN in)
                                  (S
                                    (VP (VBG building)
                                      (NP
                                        (NP (DT a) (JJ safe) (NN stair))
                                        (PP (IN between)
                                          (NP (DT the) (NNS boughs)))))))))))
                        (, ,))
                      (PP (IN with)
                        (NP
                          (NP (DT a) (NN hand-rail))
                          (PP (IN of)
                            (NP (NN rope)))))
                      (PP (IN on)
                        (NP (DT each) (NN side))))))))))))
    (. .)))

nsubj(set-2, He-1)
root(ROOT-0, set-2)
prep_about(set-2, it-4)
prep(set-2, at-5)
pobj(at-5, once-6)
mark(found-12, although-10)
nsubj(found-12, he-11)
conj_and(set-2, found-12)
nsubj(difficult-15, it-13)
advmod(difficult-15, more-14)
xcomp(found-12, difficult-15)
mark(expected-19, than-16)
nsubj(expected-19, he-17)
aux(expected-19, had-18)
ccomp(difficult-15, expected-19)
parataxis(expected-19, succeeded-21)
prep_at(succeeded-21, last-23)
prepc_in(last-23, building-25)
det(stair-28, a-26)
amod(stair-28, safe-27)
dobj(building-25, stair-28)
det(boughs-31, the-30)
prep_between(stair-28, boughs-31)
det(hand-rail-35, a-34)
prep_with(expected-19, hand-rail-35)
prep_of(hand-rail-35, rope-37)
det(side-40, each-39)
prep_on(expected-19, side-40)

(ROOT
  (S
    (S (CC But)
      (NP (NNP Willie))
      (VP (VBD had)
        (VP (VBN chosen)
          (S
            (VP (TO to)
              (VP (VB ascend)
                (PP (IN in)
                  (NP
                    (NP (DT this) (NN direction))
                    (PP (IN for)
                      (NP (DT another) (NN reason)))))
                (ADVP (RB as) (RB well))))))))
    (: :)
    (S
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT these) (NNS boughs))))
      (VP (VBD was)
        (PP (IN in)
          (NP (JJ close) (NN contact)))
        (PP (IN with)
          (NP
            (NP (DT a) (NN bough))
            (VP (VBG belonging)
              (PP (TO to)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (JJS largest))
                      (PP (IN of)
                        (NP (DT the) (JJ red) (NNS firs))))))))))))
    (. .)))

cc(chosen-4, But-1)
nsubj(chosen-4, Willie-2)
nsubj(ascend-6, Willie-2)
aux(chosen-4, had-3)
root(ROOT-0, chosen-4)
aux(ascend-6, to-5)
xcomp(chosen-4, ascend-6)
det(direction-9, this-8)
prep_in(ascend-6, direction-9)
det(reason-12, another-11)
prep_for(direction-9, reason-12)
advmod(well-14, as-13)
mwe(well-14, as-13)
advmod(ascend-6, well-14)
nsubj(was-20, one-16)
det(boughs-19, these-18)
prep_of(one-16, boughs-19)
parataxis(chosen-4, was-20)
amod(contact-23, close-22)
prep_in(was-20, contact-23)
det(bough-26, a-25)
prep_with(was-20, bough-26)
vmod(bough-26, belonging-27)
prep_to(belonging-27, one-29)
det(largest-32, the-31)
prep_of(one-29, largest-32)
det(firs-36, the-34)
amod(firs-36, red-35)
prep_of(largest-32, firs-36)

(ROOT
  (S
    (PP (IN On)
      (NP (DT this) (NN fir-bough)))
    (NP (PRP he))
    (VP (VBD constructed)
      (NP (DT a) (NN landing-place))
      (, ,)
      (PP (IN upon)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADJP (RB as) (JJ easy)
                (PP (IN as)
                  (ADJP (JJ possible))))
              (S
                (VP (TO to)
                  (VP (VB step)
                    (PP (IN from)
                      (NP
                        (NP (DT the) (NN stair))
                        (PP (IN in)
                          (NP (DT the) (NN elm)))))))))))))
    (. .)))

det(fir-bough-3, this-2)
prep_on(constructed-5, fir-bough-3)
nsubj(constructed-5, he-4)
root(ROOT-0, constructed-5)
det(landing-place-7, a-6)
dobj(constructed-5, landing-place-7)
dobj(easy-14, which-10)
nsubj(step-18, which-10)
nsubj(easy-14, it-11)
cop(easy-14, was-12)
advmod(easy-14, as-13)
prepc_upon(constructed-5, easy-14)
prep_as(easy-14, possible-16)
aux(step-18, to-17)
xcomp(easy-14, step-18)
det(stair-21, the-20)
prep_from(step-18, stair-21)
det(elm-24, the-23)
prep_in(stair-21, elm-24)

(ROOT
  (S
    (ADVP (RB Next))
    (PRN (, ,)
      (S
        (NP (DT the) (NN bough))
        (VP (VBG being)
          (ADJP (RB very) (JJ large))))
      (, ,))
    (NP (PRP he))
    (VP (VBD laid)
      (PP (IN along)
        (NP (PRP it)))
      (NP
        (NP (DT a) (NN plank))
        (VP (VBN steadied)
          (PP (IN by)
            (NP
              (NP (NNS blocks))
              (PP (IN underneath) (: --)
                (NP
                  (NP (DT a) (NN level))
                  (PP (IN for)
                    (NP (DT the) (JJ little) (NNS feet))))))))))
    (. .)))

advmod(laid-10, Next-1)
det(bough-4, the-3)
nsubj(large-7, bough-4)
cop(large-7, being-5)
advmod(large-7, very-6)
parataxis(laid-10, large-7)
nsubj(laid-10, he-9)
root(ROOT-0, laid-10)
prep_along(laid-10, it-12)
det(plank-14, a-13)
dobj(laid-10, plank-14)
vmod(plank-14, steadied-15)
agent(steadied-15, blocks-17)
det(level-21, a-20)
prep_underneath(blocks-17, level-21)
det(feet-25, the-23)
amod(feet-25, little-24)
prep_for(level-21, feet-25)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB weave)
              (NP
                (NP (DT a) (NN network))
                (PP (IN of)
                  (NP (NN rope)
                    (CC and)
                    (NN string))))
              (PP (IN along)
                (NP
                  (NP (DT each) (NN side))
                  (PP (IN of)
                    (NP (DT the) (NN bough)))))
              (, ,)
              (SBAR (RB so) (IN that)
                (S
                  (NP (DT the) (NN child))
                  (VP (MD could) (RB not)
                    (VP (VB fall)
                      (PRT (RP off)))))))))))
    (: ;)
    (CC but)
    (S
      (S
        (VP
          (VP (VBG finding)
            (NP (DT this))
            (PP (RB rather)
              (NP (DT a) (JJ long) (NN job))))
          (, ,)
          (CC and)
          (VP (VBG thinking)
            (S
              (NP (PRP it))
              (NP (DT a) (NN pity)
                (S
                  (VP (TO to)
                    (VP (VB balk)
                      (NP
                        (NP (PRP her))
                        (PP (IN of)
                          (NP
                            (ADVP (RB so) (RB much))
                            (NN pleasure) (RB merely))))
                      (PP (IN for)
                        (NP
                          (NP (DT the) (NN sake))
                          (PP (IN of)
                            (S
                              (VP (VBG surprising)
                                (NP (PRP her))
                                (X (DT the) (RBR more) (JJ thoroughly)))))))))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD resolved)
        (S
          (VP (TO to)
            (VP
              (VP (VB reveal)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP he))
                    (VP (VBD had)
                      (ADVP (RB already))
                      (VP (VBN done))))))
              (, ,)
              (CC and)
              (VP (VB permit)
                (S
                  (NP (PRP her))
                  (VP (TO to)
                    (VP (VB enjoy)
                      (NP (PRP it)))))))))))
    (. .)))

advmod(began-3, Then-1)
nsubj(began-3, he-2)
nsubj(weave-5, he-2)
root(ROOT-0, began-3)
aux(weave-5, to-4)
xcomp(began-3, weave-5)
det(network-7, a-6)
dobj(weave-5, network-7)
prep_of(network-7, rope-9)
prep_of(network-7, string-11)
conj_and(rope-9, string-11)
det(side-14, each-13)
prep_along(weave-5, side-14)
det(bough-17, the-16)
prep_of(side-14, bough-17)
advmod(fall-25, so-19)
mark(fall-25, that-20)
det(child-22, the-21)
nsubj(fall-25, child-22)
aux(fall-25, could-23)
neg(fall-25, not-24)
advcl(weave-5, fall-25)
prt(fall-25, off-26)
vmod(resolved-60, finding-29)
dobj(finding-29, this-30)
prep(finding-29, rather-31)
det(job-34, a-32)
amod(job-34, long-33)
pobj(rather-31, job-34)
conj_and(finding-29, thinking-37)
vmod(resolved-60, thinking-37)
nsubj(pity-40, it-38)
det(pity-40, a-39)
xcomp(thinking-37, pity-40)
aux(balk-42, to-41)
vmod(pity-40, balk-42)
dobj(balk-42, her-43)
advmod(much-46, so-45)
advmod(pleasure-47, much-46)
prep_of(her-43, pleasure-47)
advmod(pleasure-47, merely-48)
det(sake-51, the-50)
prep_for(balk-42, sake-51)
prepc_of(sake-51, surprising-53)
dobj(surprising-53, her-54)
det(thoroughly-57, the-55)
dep(thoroughly-57, more-56)
dep(surprising-53, thoroughly-57)
nsubj(resolved-60, he-59)
nsubj(reveal-62, he-59)
nsubj(permit-70, he-59)
conj_but(began-3, resolved-60)
aux(reveal-62, to-61)
xcomp(resolved-60, reveal-62)
dobj(done-67, what-63)
nsubj(done-67, he-64)
aux(done-67, had-65)
advmod(done-67, already-66)
ccomp(reveal-62, done-67)
xcomp(resolved-60, permit-70)
conj_and(reveal-62, permit-70)
dobj(permit-70, her-71)
nsubj(enjoy-73, her-71)
aux(enjoy-73, to-72)
xcomp(permit-70, enjoy-73)
dobj(enjoy-73, it-74)

(ROOT
  (S (IN For) (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (MD ought)
          (S
            (VP (TO to)
              (VP (VB have)
                (VP (VBN mentioned)
                  (ADVP (RBR sooner)))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD had)
      (VP (VBN taken)
        (NP (NNP Mona))
        (PP (IN into)
          (NP (PRP$ his) (NN confidence)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (VBD had)
        (VP (VBN kept)
          (NP
            (NP (NNP Agnes))
            (PP (RB out) (IN of)
              (NP (DT the) (NN way))))
          (PP (IN for)
            (NP
              (NP (RB now) (RB nearly))
              (NP (DT a) (JJ whole) (NN week))
              (PP (IN of)
                (NP (NNS evenings))))))))
    (. .)))

dep(taken-13, For-1)
mark(ought-5, as-3)
nsubj(ought-5, I-4)
nsubj(mentioned-8, I-4)
advcl(taken-13, ought-5)
aux(mentioned-8, to-6)
aux(mentioned-8, have-7)
xcomp(ought-5, mentioned-8)
advmod(mentioned-8, sooner-9)
nsubj(taken-13, he-11)
aux(taken-13, had-12)
root(ROOT-0, taken-13)
dobj(taken-13, Mona-14)
poss(confidence-17, his-16)
prep_into(taken-13, confidence-17)
nsubj(kept-22, she-20)
aux(kept-22, had-21)
conj_and(taken-13, kept-22)
dobj(kept-22, Agnes-23)
det(way-27, the-26)
prep_out_of(Agnes-23, way-27)
prep(kept-22, for-28)
advmod(nearly-30, now-29)
pobj(for-28, nearly-30)
det(week-33, a-31)
amod(week-33, whole-32)
dep(nearly-30, week-33)
prep_of(nearly-30, evenings-35)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (VP
      (VP (VBD was)
        (VP (VBG finding)
          (S
            (NP (PRP it))
            (ADJP
              (ADJP (JJR more))
              (CC and)
              (ADJP (RBR more) (JJ difficult)
                (S
                  (VP (TO to)
                    (VP (VB restrain)
                      (NP (PRP her))
                      (PP (IN from)
                        (S
                          (VP (VBG rushing)
                            (PRT (RP off))
                            (PP (IN in)
                              (NP
                                (NP (NN search))
                                (PP (IN of)
                                  (NP (NNP Willie))))))))))))))))
      (, ,)
      (CC and)
      (VP (VBD was)
        (ADJP (RB very) (JJ glad))
        (SBAR
          (ADVP (RB indeed))
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD told)
              (NP (PRP her))
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBD was) (RB not)
                    (VP (VBG going)
                      (S
                        (VP (TO to)
                          (VP (VB keep)
                            (NP (DT the) (NN thing))
                            (ADVP
                              (NP (DT a) (NN secret))
                              (RB any) (RB longer))))))))))))))
    (. .)))

nsubj(finding-4, she-2)
nsubj(glad-24, she-2)
aux(finding-4, was-3)
root(ROOT-0, finding-4)
nsubj(more-6, it-5)
nsubj(difficult-9, it-5)
nsubj(restrain-11, it-5)
xcomp(finding-4, more-6)
advmod(difficult-9, more-8)
xcomp(finding-4, difficult-9)
conj_and(more-6, difficult-9)
aux(restrain-11, to-10)
xcomp(difficult-9, restrain-11)
dobj(restrain-11, her-12)
prepc_from(restrain-11, rushing-14)
prt(rushing-14, off-15)
prep_in(rushing-14, search-17)
prep_of(search-17, Willie-19)
cop(glad-24, was-22)
advmod(glad-24, very-23)
conj_and(finding-4, glad-24)
advmod(told-28, indeed-25)
advmod(told-28, when-26)
nsubj(told-28, he-27)
advcl(glad-24, told-28)
dobj(told-28, her-29)
mark(going-34, that-30)
nsubj(going-34, he-31)
nsubj(keep-36, he-31)
aux(going-34, was-32)
neg(going-34, not-33)
ccomp(told-28, going-34)
aux(keep-36, to-35)
xcomp(going-34, keep-36)
det(thing-38, the-37)
dobj(keep-36, thing-38)
det(secret-40, a-39)
dep(longer-42, secret-40)
advmod(longer-42, any-41)
advmod(keep-36, longer-42)

(ROOT
  (FRAG
    (NP (NNP -LSB-) (NNP Illustration))
    (: :)
    (S
      (NP (NNP WILLIE) (NNP CARRIED))
      (VP (VBZ AGNES)
        (PRT (RP UP))
        (NP
          (NP (DT THE) (NNP STAIR) (NNP INTO) (NNP THE) (NNP GREAT) (NNP BRANCHES))
          (PP (IN OF)
            (NP (DT THE) (NNP ELM) (NNP TREE) (. .) (NNP -RSB-))))))))

nn(Illustration-2, -LSB--1)
root(ROOT-0, Illustration-2)
nn(CARRIED-5, WILLIE-4)
nsubj(AGNES-6, CARRIED-5)
dep(Illustration-2, AGNES-6)
prt(AGNES-6, UP-7)
det(BRANCHES-13, THE-8)
nn(BRANCHES-13, STAIR-9)
nn(BRANCHES-13, INTO-10)
nn(BRANCHES-13, THE-11)
nn(BRANCHES-13, GREAT-12)
dobj(AGNES-6, BRANCHES-13)
det(-RSB--19, THE-15)
nn(-RSB--19, ELM-16)
nn(-RSB--19, TREE-17)
prep_of(BRANCHES-13, -RSB--19)

(ROOT
  (NP (NNP CHAPTER) (NNP XXI) (. .)))

nn(XXI-2, CHAPTER-1)
root(ROOT-0, XXI-2)

(ROOT
  (S
    (NP (NNP HOW) (NNP AGNES))
    (VP (VBD LIKED)
      (S
        (VP (VBG BEING)
          (NP (DT A) (NN BIRD)))))
    (. .)))

nn(AGNES-2, HOW-1)
nsubj(LIKED-3, AGNES-2)
root(ROOT-0, LIKED-3)
cop(BIRD-6, BEING-4)
det(BIRD-6, A-5)
xcomp(LIKED-3, BIRD-6)

(ROOT
  (S (CC But)
    (NP (NNP Willie))
    (VP (VBD began)
      (S
        (VP (TO to)
          (VP (VB think)
            (SBAR (IN whether)
              (S
                (NP (PRP he))
                (VP
                  (VP (MD might) (RB not)
                    (VP (VB give)
                      (NP
                        (NP (NNP Agnes))
                        (PP
                          (ADVP
                            (NP (CD two) (NNS surprises))
                            (IN out))
                          (IN of)
                          (NP (PRP it))))
                      (, ,)
                      (PP (IN with)
                        (NP
                          (NP (DT a) (NN dream))
                          (PP (IN into)
                            (NP (DT the) (NN bargain)))))))
                  (, ,)
                  (CC and)
                  (VP (VBD thought)
                    (PRT (RP over))
                    (NP (PRP it)))))))))
      (SBAR (IN until)
        (S
          (NP (PRP he))
          (VP (VBD saw)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP he))
                (VP (MD could)
                  (VP (VB manage)
                    (NP (PRP it))))))))))
    (. .)))

cc(began-3, But-1)
nsubj(began-3, Willie-2)
nsubj(think-5, Willie-2)
root(ROOT-0, began-3)
aux(think-5, to-4)
xcomp(began-3, think-5)
mark(give-10, whether-6)
nsubj(give-10, he-7)
nsubj(thought-26, he-7)
aux(give-10, might-8)
neg(give-10, not-9)
ccomp(think-5, give-10)
dobj(give-10, Agnes-11)
num(surprises-13, two-12)
npadvmod(Agnes-11, surprises-13)
prep_out_of(Agnes-11, it-16)
det(dream-20, a-19)
prep_with(give-10, dream-20)
det(bargain-23, the-22)
prep_into(dream-20, bargain-23)
ccomp(think-5, thought-26)
conj_and(give-10, thought-26)
prt(thought-26, over-27)
dobj(thought-26, it-28)
mark(saw-31, until-29)
nsubj(saw-31, he-30)
advcl(began-3, saw-31)
advmod(manage-35, how-32)
nsubj(manage-35, he-33)
aux(manage-35, could-34)
ccomp(saw-31, manage-35)
dobj(manage-35, it-36)

(ROOT
  (S
    (S
      (NP (PRP She))
      (ADVP (RB always))
      (VP (VBD went)
        (PP (TO to)
          (NP (NN bed)))
        (PP (IN at)
          (NP (CD seven) (RB o'clock)))
        (, ,)
        (SBAR (RB so) (IN that)
          (S
            (PP (IN by)
              (NP (DT the) (NN time)))
            (NP
              (NP (DT the) (JJ other) (NNS people))
              (PP (IN in)
                (NP (DT the) (NN house))))
            (VP (VBD began)
              (S
                (VP (TO to)
                  (VP (VB think)
                    (PP (IN of)
                      (NP (VBG retiring)))))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD was)
      (ADVP (RB generally))
      (ADJP
        (ADVP (RB fast))
        (JJ asleep)))
    (. .)))

nsubj(went-3, She-1)
advmod(went-3, always-2)
ccomp(asleep-31, went-3)
prep_to(went-3, bed-5)
prep_at(went-3, seven-7)
advmod(seven-7, o'clock-8)
advmod(began-21, so-10)
mark(began-21, that-11)
det(time-14, the-13)
prep_by(began-21, time-14)
det(people-17, the-15)
amod(people-17, other-16)
nsubj(began-21, people-17)
nsubj(think-23, people-17)
det(house-20, the-19)
prep_in(people-17, house-20)
advcl(went-3, began-21)
aux(think-23, to-22)
xcomp(began-21, think-23)
prep_of(think-23, retiring-25)
nsubj(asleep-31, she-27)
cop(asleep-31, was-28)
advmod(asleep-31, generally-29)
advmod(asleep-31, fast-30)
root(ROOT-0, asleep-31)

(ROOT
  (S
    (PP (IN About)
      (NP (CD ten) (RB o'clock)))
    (, ,)
    (ADVP (RB therefore))
    (, ,)
    (NP
      (NP (DT the) (JJ next) (NN night))
      (, ,)
      (CONJP (RB just) (IN as))
      (NP (DT a) (JJ great) (NN round) (NN moon)))
    (VP (VBD was)
      (VP (VBG peering)
        (PP (IN above)
          (NP (DT the) (NN horizon)))
        (, ,)
        (PP (IN with)
          (NP
            (NP
              (NP (DT a) (NN quantity))
              (PP (IN of)
                (NP (JJ mackerel) (NNS clouds)))
              (ADJP (JJ ready)
                (S
                  (VP (TO to)
                    (VP (VB receive)
                      (NP (PRP her))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP she))
                          (VP (VBD rose)
                            (SBAR
                              (S
                                (NP
                                  (NP (DT a) (NN yard))
                                  (CC or)
                                  (NP (CD two) (JJR higher))
                                  (, ,)
                                  (NP (NNP Willie))
                                  (, ,)
                                  (VP (VBG taking)
                                    (NP
                                      (NP (DT a) (JJ soft) (NN shawl))
                                      (PP (IN of)
                                        (NP (PRP$ his) (NN mother))))))
                                (VP
                                  (VP (VBZ 's))
                                  (, ,)
                                  (VP (VBD went)
                                    (PP (IN into)
                                      (NP
                                        (NP (NNP Agnes) (POS 's))
                                        (NN room))))
                                  (, ,)
                                  (CC and)
                                  (VP
                                    (S
                                      (VP (VBG having)
                                        (VP (VBN wrapped)
                                          (NP (PRP her))
                                          (PP (IN in)
                                            (NP (DT the) (NN shawl)))
                                          (, ,)
                                          (PP (IN with)
                                            (NP
                                              (NP (DT a) (NN corner))
                                              (PP (IN of)
                                                (NP (PRP it)))
                                              (PP (IN over)
                                                (NP (PRP$ her) (NN head)
                                                  (CC and)
                                                  (NN face))))))))
                                    (, ,)
                                    (VP (VBD carried)
                                      (NP (PRP her))
                                      (PRT (RP out))
                                      (PP (IN into)
                                        (NP (DT the) (NN garden))))))))))))))))
            (, ,)
            (ADVP (RB down)
              (PP (TO to)
                (NP (DT the) (NNS trees))))
            (, ,)
            (CC and)
            (ADVP (RB up)
              (NP (DT the) (NN stair))
              (PP (IN into)
                (NP
                  (NP (DT the) (NN midst))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (JJ great) (NNS boughs)
                        (CC and)
                        (NNS branches))
                      (PP (IN of)
                        (NP (DT the) (NN elm))))))))
            (NP (NN tree))))))
    (. .)))

prep_about(peering-18, ten-2)
advmod(ten-2, o'clock-3)
advmod(peering-18, therefore-5)
det(night-9, the-7)
amod(night-9, next-8)
nsubj(peering-18, night-9)
det(moon-16, a-13)
amod(moon-16, great-14)
nn(moon-16, round-15)
conj_just(night-9, moon-16)
nsubj(peering-18, moon-16)
aux(peering-18, was-17)
root(ROOT-0, peering-18)
det(horizon-21, the-20)
prep_above(peering-18, horizon-21)
det(quantity-25, a-24)
prep_with(peering-18, quantity-25)
amod(clouds-28, mackerel-27)
prep_of(quantity-25, clouds-28)
amod(quantity-25, ready-29)
aux(receive-31, to-30)
xcomp(ready-29, receive-31)
dobj(receive-31, her-32)
advmod(rose-35, when-33)
nsubj(rose-35, she-34)
advcl(receive-31, rose-35)
det(yard-37, a-36)
nsubj('s-51, yard-37)
nsubj(went-53, yard-37)
nsubj(carried-78, yard-37)
num(higher-40, two-39)
conj_or(yard-37, higher-40)
nsubj('s-51, higher-40)
conj_or(yard-37, Willie-42)
nsubj('s-51, Willie-42)
conj_or(yard-37, taking-44)
vmod(yard-37, taking-44)
nsubj('s-51, taking-44)
det(shawl-47, a-45)
amod(shawl-47, soft-46)
dobj(taking-44, shawl-47)
poss(mother-50, his-49)
prep_of(shawl-47, mother-50)
ccomp(rose-35, 's-51)
ccomp(rose-35, went-53)
conj_and('s-51, went-53)
poss(room-57, Agnes-55)
prep_into(went-53, room-57)
aux(wrapped-61, having-60)
xcomp(carried-78, wrapped-61)
dobj(wrapped-61, her-62)
det(shawl-65, the-64)
prep_in(wrapped-61, shawl-65)
det(corner-69, a-68)
prep_with(wrapped-61, corner-69)
prep_of(corner-69, it-71)
poss(head-74, her-73)
prep_over(corner-69, head-74)
prep_over(corner-69, face-76)
conj_and(head-74, face-76)
ccomp(rose-35, carried-78)
conj_and('s-51, carried-78)
nsubj(wrapped-61, her-79)
dobj(carried-78, her-79)
prt(carried-78, out-80)
det(garden-83, the-82)
prep_into(carried-78, garden-83)
prep_with(peering-18, down-85)
advmod(quantity-25, down-85)
conj_and(quantity-25, down-85)
det(trees-88, the-87)
prep_to(down-85, trees-88)
prep_with(peering-18, up-91)
advmod(quantity-25, up-91)
conj_and(quantity-25, up-91)
det(stair-93, the-92)
pobj(up-91, stair-93)
det(midst-96, the-95)
prep_into(up-91, midst-96)
det(boughs-100, the-98)
amod(boughs-100, great-99)
prep_of(midst-96, boughs-100)
prep_of(midst-96, branches-102)
conj_and(boughs-100, branches-102)
det(elm-105, the-104)
prep_of(boughs-100, elm-105)
prep_with(peering-18, tree-106)
conj_and(quantity-25, tree-106)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT a)
          (ADJP (RB very) (JJ warm))
          (NN night))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT a) (JJ soft) (NN breath))
            (PP (IN of)
              (NP
                (NP (JJ south) (NN wind))
                (VP (VBG blowing))))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (DT no) (NN risk))
          (PP (IN of)
            (NP (PRP$ her) (NN taking) (NN cold))))))
    (. .)))

nsubj(night-6, It-1)
cop(night-6, was-2)
det(night-6, a-3)
advmod(warm-5, very-4)
amod(night-6, warm-5)
root(ROOT-0, night-6)
det(breath-11, a-9)
amod(breath-11, soft-10)
prep_with(night-6, breath-11)
amod(wind-14, south-13)
prep_of(breath-11, wind-14)
vmod(wind-14, blowing-15)
expl(was-19, there-18)
conj_and(night-6, was-19)
neg(risk-21, no-20)
nsubj(was-19, risk-21)
poss(cold-25, her-23)
nn(cold-25, taking-24)
prep_of(risk-21, cold-25)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD uncovered)
        (NP (PRP$ her) (NN face)))
      (, ,)
      (CC but)
      (VP (VBD did) (RB not)
        (VP (NN wake)
          (NP (PRP her))
          (, ,)
          (S
            (VP (VBG leaving)
              (NP (DT that))
              (PP (TO to)
                (NP
                  (NP
                    (NP (DT the) (NN change))
                    (PP (IN of)
                      (NP (PRP$ her) (NN position))))
                  (CC and)
                  (NP
                    (NP (DT the) (NN freshness))
                    (PP (IN of)
                      (NP (DT the) (NN air)))))))))))
    (. .)))

nsubj(uncovered-2, He-1)
root(ROOT-0, uncovered-2)
poss(face-4, her-3)
dobj(uncovered-2, face-4)
aux(wake-9, did-7)
neg(wake-9, not-8)
conj_but(uncovered-2, wake-9)
dobj(wake-9, her-10)
vmod(wake-9, leaving-12)
dobj(leaving-12, that-13)
det(change-16, the-15)
prep_to(leaving-12, change-16)
poss(position-19, her-18)
prep_of(change-16, position-19)
det(freshness-22, the-21)
prep_to(leaving-12, freshness-22)
conj_and(change-16, freshness-22)
det(air-25, the-24)
prep_of(freshness-22, air-25)

(ROOT
  (SINV (CC Nor)
    (VBD was)
    (NP (PRP he))
    (VP (VBN disappointed))
    (. .)))

cc(disappointed-4, Nor-1)
auxpass(disappointed-4, was-2)
nsubjpass(disappointed-4, he-3)
root(ROOT-0, disappointed-4)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT a) (JJ few) (NNS moments)))
      (NP (PRP she))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB stir))))))
    (, ,) (RB then)
    (S
      (NP
        (NP (JJ half-opened) (PRP$ her) (NNS eyes))
        (, ,)
        (VP
          (ADVP (RB then))
          (VBN shut)
          (S
            (NP (PRP them))))
        (, ,))
      (ADVP (RB then))
      (VP
        (VP (VBD opened)
          (NP (PRP them))
          (ADVP (RB again)))
        (, ,)
        (VP
          (ADVP (RB then))
          (VBD rubbed)
          (NP (PRP them)))
        (, ,)
        (VP
          (ADVP (RB then))
          (VBD drew)
          (NP (DT a) (JJ deep) (NN breath)))
        (, ,)
        (CC and)
        (ADVP (RB then))
        (VP (VBD began)
          (S
            (VP (TO to)
              (VP
                (VP (VB lift)
                  (NP (PRP$ her) (NN head))
                  (PP (IN from)
                    (NP
                      (NP (NNP Willie) (POS 's))
                      (NN shoulder))))
                (, ,)
                (CC and)
                (VP (VB look)
                  (PP (IN about)
                    (NP (PRP her))))))))))
    (. .)))

det(moments-4, a-2)
amod(moments-4, few-3)
prep_in(began-6, moments-4)
nsubj(began-6, she-5)
nsubj(stir-8, she-5)
root(ROOT-0, began-6)
aux(stir-8, to-7)
xcomp(began-6, stir-8)
advmod(opened-20, then-10)
amod(eyes-13, half-opened-11)
poss(eyes-13, her-12)
nsubj(opened-20, eyes-13)
nsubj(rubbed-25, eyes-13)
nsubj(drew-29, eyes-13)
nsubj(began-36, eyes-13)
nsubj(lift-38, eyes-13)
advmod(shut-16, then-15)
vmod(eyes-13, shut-16)
dep(shut-16, them-17)
advmod(opened-20, then-19)
parataxis(began-6, opened-20)
dobj(opened-20, them-21)
advmod(opened-20, again-22)
advmod(rubbed-25, then-24)
parataxis(began-6, rubbed-25)
conj_and(opened-20, rubbed-25)
dobj(rubbed-25, them-26)
advmod(drew-29, then-28)
parataxis(began-6, drew-29)
conj_and(opened-20, drew-29)
det(breath-32, a-30)
amod(breath-32, deep-31)
dobj(drew-29, breath-32)
advmod(began-36, then-35)
parataxis(began-6, began-36)
conj_and(opened-20, began-36)
aux(lift-38, to-37)
xcomp(began-36, lift-38)
poss(head-40, her-39)
dobj(lift-38, head-40)
poss(shoulder-44, Willie-42)
prep_from(lift-38, shoulder-44)
xcomp(began-36, look-47)
conj_and(lift-38, look-47)
prep_about(look-47, her-49)

(ROOT
  (S
    (PP (IN Through)
      (NP (DT the) (JJ thick) (NNS leaves)))
    (NP (DT the) (NN moon))
    (VP
      (VP (VBD was)
        (VP (VBG shining)
          (PP (IN like)
            (NP (DT a) (JJ great) (JJ white) (NN fire)))))
      (, ,)
      (CC and)
      (VP (MD must)
        (VP (VB have)
          (VP (VBN looked)
            (PP (TO to)
              (NP (PRP$ her) (JJ sleepy) (NNS eyes)))
            (PP
              (ADVP (RB almost))
              (IN within)
              (NP
                (NP (DT a) (NN yard))
                (PP (IN of)
                  (NP (PRP her)))))))))
    (. .)))

det(leaves-4, the-2)
amod(leaves-4, thick-3)
prep_through(shining-8, leaves-4)
det(moon-6, the-5)
nsubj(shining-8, moon-6)
nsubj(looked-18, moon-6)
aux(shining-8, was-7)
root(ROOT-0, shining-8)
det(fire-13, a-10)
amod(fire-13, great-11)
amod(fire-13, white-12)
prep_like(shining-8, fire-13)
aux(looked-18, must-16)
aux(looked-18, have-17)
conj_and(shining-8, looked-18)
poss(eyes-22, her-20)
amod(eyes-22, sleepy-21)
prep_to(looked-18, eyes-22)
advmod(looked-18, almost-23)
det(yard-26, a-25)
prep_within(looked-18, yard-26)
prep_of(yard-26, her-28)

(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (PRP she))
        (VP (VBD had) (RB not)
          (VP (VBN been)
            (ADJP
              (ADJP (RB half) (JJ asleep))
              (, ,)
              (ADJP (RB so) (JJ beheld)))
            (PP (IN through)
              (NP (DT the) (NNS leaves)))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN taken)
          (NP (PRP her))
          (NP (DT a) (NN while))
          (S
            (VP (TO to)
              (VP (VB make)
                (PRT (RP up))
                (NP
                  (NP (PRP$ her) (NN mind))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (DT the) (JJ huge) (JJ bright) (NN thing))
                      (VP (VBD was)))))))))))
    (. .)))

advmod(asleep-8, Even-1)
mark(asleep-8, if-2)
nsubj(asleep-8, she-3)
aux(asleep-8, had-4)
neg(asleep-8, not-5)
cop(asleep-8, been-6)
advmod(asleep-8, half-7)
advcl(taken-19, asleep-8)
advmod(beheld-11, so-10)
dep(asleep-8, beheld-11)
det(leaves-14, the-13)
prep_through(asleep-8, leaves-14)
nsubj(taken-19, it-16)
aux(taken-19, would-17)
aux(taken-19, have-18)
root(ROOT-0, taken-19)
iobj(taken-19, her-20)
det(while-22, a-21)
dobj(taken-19, while-22)
aux(make-24, to-23)
vmod(taken-19, make-24)
prt(make-24, up-25)
poss(mind-27, her-26)
dobj(make-24, mind-27)
dobj(was-33, mind-27)
det(thing-32, the-29)
amod(thing-32, huge-30)
amod(thing-32, bright-31)
nsubj(was-33, thing-32)
rcmod(mind-27, was-33)

(ROOT
  (S (RB Then)
    (NP (PRP she))
    (VP (VBD heard)
      (NP (DT a) (JJ great) (NN fluttering))
      (SBAR (IN as)
        (S
          (SBAR (IN if)
            (S
              (NP (DT the) (NNS leaves))
              (VP (VBD were)
                (VP (VBG talking)
                  (PP
                    (PP (TO to)
                      (NP (PRP her)))
                    (, ,)
                    (CC and)
                    (RB out)
                    (PP (IN of)
                      (NP (PRP them))))))))
          (VP (VBD came)
            (NP
              (NP (DT a) (JJ soft) (NN wind))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP
                    (VP (VBD blew)
                      (PP (IN in)
                        (NP (PRP$ her) (NN face))))
                    (, ,)
                    (CC and)
                    (VP (VBD felt)
                      (S
                        (ADJP (RB very) (JJ sweet)
                          (CC and)
                          (JJ pleasant))))))))))))
    (. .)))

advmod(heard-3, Then-1)
nsubj(heard-3, she-2)
root(ROOT-0, heard-3)
det(fluttering-6, a-4)
amod(fluttering-6, great-5)
dobj(heard-3, fluttering-6)
mark(came-20, as-7)
mark(talking-12, if-8)
det(leaves-10, the-9)
nsubj(talking-12, leaves-10)
aux(talking-12, were-11)
csubj(came-20, talking-12)
prep(talking-12, to-13)
pobj(to-13, her-14)
prep(talking-12, out-17)
conj_and(to-13, out-17)
dep(to-13, of-18)
pobj(of-18, them-19)
advcl(heard-3, came-20)
det(wind-23, a-21)
amod(wind-23, soft-22)
dobj(came-20, wind-23)
nsubj(blew-25, wind-23)
nsubj(felt-31, wind-23)
rcmod(wind-23, blew-25)
poss(face-28, her-27)
prep_in(blew-25, face-28)
rcmod(wind-23, felt-31)
conj_and(blew-25, felt-31)
advmod(sweet-33, very-32)
acomp(felt-31, sweet-33)
acomp(felt-31, pleasant-35)
conj_and(sweet-33, pleasant-35)

(ROOT
  (S
    (NP (PRP She))
    (VP
      (VP (VBD rubbed)
        (NP (PRP$ her) (NNS eyes))
        (ADVP (RB again)))
      (, ,)
      (CC but)
      (VP (MD could) (RB not)
        (VP (VB get)
          (NP (DT the) (NN sleep))
          (PRT (RP out))
          (PP (IN of)
            (NP (PRP them))))))
    (. .)))

nsubj(rubbed-2, She-1)
nsubj(get-10, She-1)
root(ROOT-0, rubbed-2)
poss(eyes-4, her-3)
dobj(rubbed-2, eyes-4)
advmod(rubbed-2, again-5)
aux(get-10, could-8)
neg(get-10, not-9)
conj_but(rubbed-2, get-10)
det(sleep-12, the-11)
dobj(get-10, sleep-12)
prep_out_of(get-10, them-15)

(ROOT
  (S
    (S
      (S
        (PP (IN As)
          (NP (JJ last)))
        (NP (PRP she))
        (VP (VBD said)
          (PP (TO to)
            (NP
              (NP (NNP Willie))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD stood)
                    (PP (IN as)
                      (ADVP (RB still)))
                    (PP (IN as)
                      (NP (DT a) (NN stone))))))))))
      (: --)
      (CC but)
      (S
        (NP
          (NP (PRP$ her) (NN tongue))
          (CC and)
          (NP
            (NP (PRP$ her) (NN voice))
            (CC and)
            (NP (PRP$ her) (NNS lips))))
        (VP (MD could)
          (ADVP (RB hardly))
          (VP (VB make)
            (NP
              (NP (DT the) (NNS words))
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (VBD wanted)
                    (NP (PRP them))
                    (PP (TO to)
                      (NP (JJ utter)))))))))))
    (: :) (`` ``)
    (SQ (VBP Am)
      (NP (PRP I))
      (ADJP (RB awake))
      (. ?))))

prep_as(said-4, last-2)
nsubj(said-4, she-3)
root(ROOT-0, said-4)
prep_to(said-4, Willie-6)
nsubj(stood-9, Willie-6)
rcmod(Willie-6, stood-9)
prep(stood-9, as-10)
pcomp(as-10, still-11)
det(stone-14, a-13)
prep_as(stood-9, stone-14)
poss(tongue-18, her-17)
nsubj(make-27, tongue-18)
poss(voice-21, her-20)
conj_and(tongue-18, voice-21)
nsubj(make-27, voice-21)
poss(lips-24, her-23)
conj_and(tongue-18, lips-24)
conj_and(voice-21, lips-24)
aux(make-27, could-25)
advmod(make-27, hardly-26)
conj_but(said-4, make-27)
det(words-29, the-28)
dobj(make-27, words-29)
nsubj(wanted-31, she-30)
rcmod(words-29, wanted-31)
dobj(wanted-31, them-32)
prep_to(wanted-31, utter-34)
cop(awake-39, Am-37)
nsubj(awake-39, I-38)
dep(said-4, awake-39)

(ROOT
  (SQ (VBP Am)
    (NP (PRP I))
    (VP (VBG dreaming))
    (. ?)))

aux(dreaming-3, Am-1)
nsubj(dreaming-3, I-2)
root(ROOT-0, dreaming-3)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (RB so) (JJ nice)))
    (. !) ('' '')))

nsubj(nice-4, It-1)
cop(nice-4, 's-2)
advmod(nice-4, so-3)
root(ROOT-0, nice-4)

(ROOT
  (S
    (S
      (NP (NNP Willie))
      (VP (VBD did) (RB not)
        (VP (VB answer)
          (NP (PRP her)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJ little) (NN head))
      (VP (VBN sunk)
        (PP (IN on)
          (NP (PRP$ his) (NN shoulder)))
        (ADVP (RB again))))
    (. .)))

nsubj(answer-4, Willie-1)
aux(answer-4, did-2)
neg(answer-4, not-3)
root(ROOT-0, answer-4)
dobj(answer-4, her-5)
det(head-10, the-8)
amod(head-10, little-9)
nsubj(sunk-11, head-10)
conj_and(answer-4, sunk-11)
poss(shoulder-14, his-13)
prep_on(sunk-11, shoulder-14)
advmod(sunk-11, again-15)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD drew)
        (NP
          (NP (DT the) (NN corner))
          (PP (IN of)
            (NP
              (NP (DT the) (NN shawl))
              (PP (IN over)
                (NP (PRP it)))))))
      (, ,)
      (CC and)
      (VP (VBD carried)
        (NP (PRP$ her) (NN back))
        (PP (TO to)
          (NP (PRP$ her) (NN bed)))))
    (. .)))

nsubj(drew-2, He-1)
nsubj(carried-12, He-1)
root(ROOT-0, drew-2)
det(corner-4, the-3)
dobj(drew-2, corner-4)
det(shawl-7, the-6)
prep_of(corner-4, shawl-7)
prep_over(shawl-7, it-9)
conj_and(drew-2, carried-12)
poss(back-14, her-13)
dobj(carried-12, back-14)
poss(bed-17, her-16)
prep_to(carried-12, bed-17)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN laid)
            (NP (PRP her))
            (PRT (RP down))))))
    (, ,)
    (NP (PRP she))
    (VP
      (VP (VBD opened)
        (S
          (NP (PRP$ her) (NNS eyes))
          (ADJP (JJ wide))))
      (, ,)
      (VP (VBD stared)
        (NP (PRP him))
        (PP (IN in)
          (NP
            (NP (DT the) (NN face))
            (PP (IN for)
              (NP
                (NP (DT a) (NN moment))
                (, ,)
                (SBAR (IN as)
                  (S
                    (SBAR (IN if)
                      (S
                        (NP (PRP she))
                        (VP (VBD knew)
                          (NP
                            (NP (DT all))
                            (PP (IN about)
                              (NP (NN everything))))
                          (PP (IN except)
                            (SBAR
                              (WHADJP (RB just) (WP what))
                              (S
                                (NP (PRP she))
                                (VP (VBD was)
                                  (VP (VBG looking)
                                    (PP (IN at))))))))))
                    (, ,)
                    (VP (VB put)
                      (NP (PRP$ her) (NN thumb))
                      (PP (IN in)
                        (NP (PRP$ her) (NN mouth))))))
                (, ,))))))
      (CC and)
      (VP (VBD was)
        (ADVP (RB fast))
        (ADJP (RB asleep))))
    (. .)))

advmod(laid-4, When-1)
nsubj(laid-4, he-2)
aux(laid-4, had-3)
advcl(opened-9, laid-4)
dobj(laid-4, her-5)
prt(laid-4, down-6)
nsubj(opened-9, she-8)
nsubj(stared-14, she-8)
root(ROOT-0, opened-9)
poss(eyes-11, her-10)
nsubj(wide-12, eyes-11)
xcomp(opened-9, wide-12)
conj_and(opened-9, stared-14)
dobj(stared-14, him-15)
det(face-18, the-17)
prep_in(stared-14, face-18)
det(moment-21, a-20)
prep_for(face-18, moment-21)
mark(put-38, as-23)
mark(knew-26, if-24)
nsubj(knew-26, she-25)
advcl(put-38, knew-26)
dobj(knew-26, all-27)
prep_about(all-27, everything-29)
advmod(what-32, just-31)
dep(looking-35, what-32)
nsubj(looking-35, she-33)
aux(looking-35, was-34)
prepc_except(knew-26, looking-35)
prep(looking-35, at-36)
dep(moment-21, put-38)
poss(thumb-40, her-39)
dobj(put-38, thumb-40)
poss(mouth-43, her-42)
prep_in(put-38, mouth-43)
cop(asleep-48, was-46)
advmod(asleep-48, fast-47)
conj_and(opened-9, asleep-48)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ next) (NN morning))
        (PP (IN at)
          (NP
            (NP (NN breakfast))
            (, ,)
            (NP (PRP$ her) (NN papa) (NN out))
            (, ,)
            (CC and)
            (NP (PRP$ her) (NN mamma)))))
      (VP
        (ADVP (RB not) (RB yet))
        (VBD come)
        (PRT (VBP down))))
    (, ,)
    (NP (PRP she))
    (VP (VBD told)
      (NP (NNP Willie))
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN had)
              (NP (PDT such) (DT a) (JJ beautiful) (NN dream)))))))
    (. !)))

det(morning-3, The-1)
amod(morning-3, next-2)
nsubj(come-16, morning-3)
prep_at(morning-3, breakfast-5)
poss(out-9, her-7)
nn(out-9, papa-8)
prep_at(morning-3, out-9)
conj_and(breakfast-5, out-9)
poss(mamma-13, her-12)
prep_at(morning-3, mamma-13)
conj_and(breakfast-5, mamma-13)
dep(yet-15, not-14)
advmod(come-16, yet-15)
ccomp(told-20, come-16)
prt(come-16, down-17)
nsubj(told-20, she-19)
root(ROOT-0, told-20)
dobj(told-20, Willie-21)
mark(had-25, that-22)
nsubj(had-25, she-23)
aux(had-25, had-24)
ccomp(told-20, had-25)
predet(dream-29, such-26)
det(dream-29, a-27)
amod(dream-29, beautiful-28)
dobj(had-25, dream-29)

(ROOT
  (S (: --)
    (S
      (SBAR (IN that)
        (S
          (NP
            (NP (DT an) (NN angel))
            (, ,)
            (PP (IN with)
              (NP (JJ great) (JJ red) (NNS wings)))
            (, ,))
          (VP
            (VP (VBD came)
              (CC and)
              (VBD took)
              (NP (PRP her))
              (PP (IN in)
                (NP (PRP$ his) (NNS arms))))
            (, ,)
            (CC and)
            (VP (VBD flew)
              (PRT (RP up)
                (CC and)
                (RP up))
              (PP (IN with)
                (NP (PRP her)))
              (PP (TO to)
                (NP (DT a) (NN cloud)))))))
      (NP (DT that))
      (VP (VBD lay)
        (NP (NN close))
        (PP (IN by)
          (NP (DT the) (NN moon)))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD stopped)))
    (. .)))

mark(came-11, that-2)
det(angel-4, an-3)
nsubj(came-11, angel-4)
nsubj(took-13, angel-4)
nsubj(flew-20, angel-4)
amod(wings-9, great-7)
amod(wings-9, red-8)
prep_with(angel-4, wings-9)
advcl(lay-30, came-11)
ccomp(lay-30, came-11)
conj_and(came-11, took-13)
advcl(lay-30, took-13)
ccomp(lay-30, took-13)
dobj(came-11, her-14)
poss(arms-17, his-16)
prep_in(came-11, arms-17)
conj_and(came-11, flew-20)
advcl(lay-30, flew-20)
ccomp(lay-30, flew-20)
prt(flew-20, up-21)
cc(up-21, and-22)
dep(up-21, up-23)
prep_with(flew-20, her-25)
det(cloud-28, a-27)
prep_to(flew-20, cloud-28)
nsubj(lay-30, that-29)
nsubj(stopped-38, that-29)
root(ROOT-0, lay-30)
dobj(lay-30, close-31)
det(moon-34, the-33)
prep_by(lay-30, moon-34)
expl(stopped-38, there-37)
conj_and(lay-30, stopped-38)

(ROOT
  (S
    (S
      (NP (DT The) (NN cloud))
      (VP (VBD was)
        (VP (VBN made)
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (JJ little) (NNS birds)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD kept)
                  (S
                    (VP
                      (VP (VBG fluttering)
                        (NP (PRP$ their) (NNS wings)))
                      (CC and)
                      (VP (VBG talking)
                        (PP (TO to)
                          (NP (DT each) (JJ other)))))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP
          (NP (DT the) (NN fluttering))
          (PP (IN of)
            (NP (PRP$ their) (NNS wings))))
        (VP (VBD made)
          (NP (DT a) (NN wind))
          (PP (IN in)
            (NP (PRP$ her) (NN face)))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NN wind))
          (VP (VBD made)
            (S
              (NP (PRP her))
              (ADJP (RB very) (JJ happy)))))
        (, ,)
        (CC and)
        (S
          (S
            (NP (DT the) (NN moon))
            (VP (VBD kept)
              (S
                (VP
                  (VP (VBG looking)
                    (PP (IN through)
                      (NP (DT the) (NNS birds)))
                    (ADVP
                      (ADVP (RB quite) (RB close))
                      (PP (TO to)
                        (NP (PRP them)))))
                  (, ,)
                  (CC and)
                  (VP (VBG smiling)
                    (PP (IN at)
                      (NP (PRP her))))))))
          (, ,)
          (CC and)
          (S
            (NP (PRP she))
            (VP (VBD saw)
              (NP
                (NP (DT the) (NN face))
                (PP (IN of)
                  (NP (DT the) (NN man))))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN moon))
                  (ADJP (RB quite) (JJ plain)))))))))
    (. .)))

det(cloud-2, The-1)
nsubjpass(made-4, cloud-2)
auxpass(made-4, was-3)
root(ROOT-0, made-4)
dobj(made-4, all-5)
nsubj(kept-10, all-5)
amod(birds-8, little-7)
prep_of(all-5, birds-8)
rcmod(all-5, kept-10)
ccomp(kept-10, fluttering-11)
poss(wings-13, their-12)
dobj(fluttering-11, wings-13)
ccomp(kept-10, talking-15)
conj_and(fluttering-11, talking-15)
det(other-18, each-17)
prep_to(talking-15, other-18)
det(fluttering-22, the-21)
nsubj(made-26, fluttering-22)
poss(wings-25, their-24)
prep_of(fluttering-22, wings-25)
conj_and(made-4, made-26)
det(wind-28, a-27)
dobj(made-26, wind-28)
poss(face-31, her-30)
prep_in(made-26, face-31)
det(wind-35, the-34)
nsubj(made-36, wind-35)
conj_and(made-4, made-36)
conj_and(made-26, made-36)
nsubj(happy-39, her-37)
advmod(happy-39, very-38)
xcomp(made-36, happy-39)
det(moon-43, the-42)
nsubj(kept-44, moon-43)
conj_and(made-26, kept-44)
conj_and(made-36, kept-44)
ccomp(kept-44, looking-45)
det(birds-48, the-47)
prep_through(looking-45, birds-48)
advmod(looking-45, quite-49)
prep_close_to(looking-45, them-52)
ccomp(kept-44, smiling-55)
conj_and(looking-45, smiling-55)
prep_at(smiling-55, her-57)
nsubj(saw-61, she-60)
conj_and(made-36, saw-61)
conj_and(kept-44, saw-61)
det(face-63, the-62)
dobj(saw-61, face-63)
det(man-66, the-65)
prep_of(face-63, man-66)
det(moon-69, the-68)
prep_in(saw-61, moon-69)
advmod(plain-71, quite-70)
amod(moon-69, plain-71)

(ROOT
  (S
    (S (CC But)
      (ADVP (RB then))
      (NP (PRP it))
      (VP
        (VP (VBD grew)
          (S
            (ADJP (JJ dark))))
        (CC and)
        (VP (VBD began)
          (PP (TO to)
            (NP (NN thunder))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (DT the) (NN angel))
        (VP (VBD went)
          (PRT (RP down))
          (ADVP (RB very) (RB fast))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NN thunder))
          (VP (VBD was)
            (NP
              (NP (DT the) (NN clapping))
              (PP (IN of)
                (NP (PRP$ his) (JJ big) (JJ red) (NNS wings))))))
        (, ,)
        (CC and)
        (S
          (S
            (NP (PRP he))
            (VP
              (VP (VBD flew)
                (PP (IN with)
                  (NP (PRP her)))
                (PP (IN into)
                  (NP
                    (NP (PRP$ her) (NN mamma) (POS 's))
                    (NN room))))
              (, ,)
              (CC and)
              (VP (VBD laid)
                (NP (PRP her))
                (PRT (RP down))
                (PP (IN in)
                  (NP (PRP$ her) (NN crib))))))
          (, ,)
          (CC and)
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP she))
                (VP (VBD looked)
                  (PP (IN at)
                    (NP (PRP him))))))
            (NP (PRP he))
            (VP (VBD was)
              (ADVP (RB so))
              (PP (IN like)
                (NP (NNP Willie))))))))
    (. .)))

advmod(grew-4, then-2)
nsubj(grew-4, it-3)
nsubj(began-7, it-3)
root(ROOT-0, grew-4)
acomp(grew-4, dark-5)
conj_and(grew-4, began-7)
prep_to(began-7, thunder-9)
det(angel-13, the-12)
nsubj(went-14, angel-13)
conj_and(grew-4, went-14)
prt(went-14, down-15)
advmod(fast-17, very-16)
advmod(went-14, fast-17)
det(thunder-21, the-20)
nsubj(clapping-24, thunder-21)
cop(clapping-24, was-22)
det(clapping-24, the-23)
conj_and(grew-4, clapping-24)
conj_and(went-14, clapping-24)
poss(wings-29, his-26)
amod(wings-29, big-27)
amod(wings-29, red-28)
prep_of(clapping-24, wings-29)
nsubj(flew-33, he-32)
nsubj(laid-43, he-32)
conj_and(went-14, flew-33)
conj_and(clapping-24, flew-33)
prep_with(flew-33, her-35)
poss(mamma-38, her-37)
poss(room-40, mamma-38)
prep_into(flew-33, room-40)
conj_and(clapping-24, laid-43)
conj_and(flew-33, laid-43)
dobj(laid-43, her-44)
prt(laid-43, down-45)
poss(crib-48, her-47)
prep_in(laid-43, crib-48)
advmod(looked-53, when-51)
nsubj(looked-53, she-52)
advcl(was-57, looked-53)
prep_at(looked-53, him-55)
nsubj(was-57, he-56)
conj_and(clapping-24, was-57)
conj_and(flew-33, was-57)
advmod(was-57, so-58)
prep_like(was-57, Willie-60)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (DT the) (NN dream))
                (VP (MD could)
                  (VP (VB have)
                    (VP (VBN come)
                      (PP (IN of)
                        (NP (PRP$ your) (NN wishing)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (NP
                                  (NP (DT a) (NN bird))
                                  (, ,)
                                  (NP (NNP Agnes)))))))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(think-4, you-3)
ccomp(Do-2, think-4)
det(dream-6, the-5)
nsubj(come-9, dream-6)
aux(come-9, could-7)
aux(come-9, have-8)
ccomp(think-4, come-9)
poss(wishing-12, your-11)
prep_of(come-9, wishing-12)
aux(bird-16, to-13)
cop(bird-16, be-14)
det(bird-16, a-15)
vmod(wishing-12, bird-16)
appos(bird-16, Agnes-18)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Willie-2)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)

(ROOT
  (SINV
    (FRAG
      (ADVP (RB Perhaps)))
    (, ,) ('' '')
    (VP (VBD replied))
    (NP (NNP Agnes))
    (. .)))

dep(replied-4, Perhaps-1)
root(ROOT-0, replied-4)
nsubj(replied-4, Agnes-5)

(ROOT
  (S (`` ``)
    (S
      (VP (VBN Are)
        (S
          (NP (PRP you))
          (ADJP (JJ angry)
            (PP (IN with)
              (NP (PRP me)))))
        (PP (IN for)
          (S
            (VP (VBG wishing)
              (NP (PRP I)))))))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN bird))
        (, ,)
        (NP (NNP Willie))))
    (. ?) ('' '')))

csubj(bird-12, Are-2)
nsubj(angry-4, you-3)
xcomp(Are-2, angry-4)
prep_with(angry-4, me-6)
prepc_for(Are-2, wishing-8)
dobj(wishing-8, I-9)
cop(bird-12, was-10)
det(bird-12, a-11)
root(ROOT-0, bird-12)
appos(bird-12, Willie-14)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No) (, ,) (UH darling))
    (. .)))

root(ROOT-0, No-2)
dep(No-2, darling-4)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (S
          (NP (PRP you))
          (VP (VB ask)
            (NP (PDT such) (DT a) (NN question))))))
    (. ?) ('' '')))

nsubj(makes-2, What-1)
root(ROOT-0, makes-2)
nsubj(ask-4, you-3)
ccomp(makes-2, ask-4)
predet(question-7, such-5)
det(question-7, a-6)
dobj(ask-4, question-7)

(ROOT
  (S (`` ``)
    (S
      (PP (IN Because)
        (PP
          (ADVP (RB ever))
          (IN since)
          (NP (RB then))))
      (NP (PRP you))
      (VP (MD wo) (RB n't)
        (VP (VB let)
          (S
            (NP (PRP me))
            (VP (VB go)
              (PP (IN with)
                (NP (PRP you))))))))
    (: --)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG doing)
              (NP (NNS things))))))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)))
    (. .) ('' '')))

prep(let-9, Because-2)
advmod(since-4, ever-3)
pcomp(Because-2, since-4)
pobj(since-4, then-5)
nsubj(let-9, you-6)
aux(let-9, wo-7)
neg(let-9, n't-8)
root(ROOT-0, let-9)
nsubj(go-11, me-10)
ccomp(let-9, go-11)
prep_with(go-11, you-13)
advmod(doing-18, when-15)
nsubj(doing-18, you-16)
aux(doing-18, are-17)
advcl(know-22, doing-18)
dobj(doing-18, things-19)
nsubj(know-22, you-21)
parataxis(let-9, know-22)

(ROOT
  (S (`` ``)
    (INTJ (WRB Why))
    (, ,)
    (NP (PRP you))
    (VP (VBD were)
      (PP (IN in)
        (NP
          (NP (DT the) (NN laboratory))
          (PP (IN with)
            (NP (PRP me)))))
      (NP (NN yesterday)))
    (. !) ('' '')))

discourse(yesterday-11, Why-2)
nsubj(yesterday-11, you-4)
cop(yesterday-11, were-5)
det(laboratory-8, the-7)
prep_in(yesterday-11, laboratory-8)
prep_with(laboratory-8, me-10)
root(ROOT-0, yesterday-11)

(ROOT
  (S
    (VP (VBD said)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, said-1)
dobj(said-1, Willie-2)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (CC but)
      (NP (PRP you))
      (VP (MD would) (RB n't)
        (VP (VB have)
          (NP (PRP me))
          (PP (IN in)
            (NP (DT the) (NN evening)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP you))
              (VP (VBD used)
                (S
                  (VP (TO to)
                    (VP (VB let))))))))))
    (NP (PRP me))
    (VP (VBP be)
      (PP (IN with)
        (NP (PRP you)))
      (ADVP (RB always)))
    (. .)))

discourse(have-8, Yes-2)
conj_but(have-8, you-5)
nsubj(have-8, you-5)
dep(be-19, you-5)
aux(have-8, would-6)
neg(have-8, n't-7)
dep(be-19, have-8)
dobj(have-8, me-9)
det(evening-12, the-11)
prep_in(have-8, evening-12)
advmod(used-15, when-13)
nsubj(used-15, you-14)
nsubj(let-17, you-14)
advcl(have-8, used-15)
aux(let-17, to-16)
xcomp(used-15, let-17)
nsubj(be-19, me-18)
root(ROOT-0, be-19)
prep_with(be-19, you-21)
advmod(be-19, always-22)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG doing)
        (PRT (RP down))
        (PP (IN amongst)
          (NP (DT the) (NNS trees) (NN _)))
        (S
          (ADVP (RB always))
          (VP (VBG _)
            (ADVP (RB now))))))
    (. ?) ('' '')))

dobj(doing-4, What-1)
aux(doing-4, are-2)
nsubj(doing-4, you-3)
root(ROOT-0, doing-4)
prt(doing-4, down-5)
det(_-9, the-7)
nn(_-9, trees-8)
prep_amongst(doing-4, _-9)
advmod(_-11, always-10)
vmod(doing-4, _-11)
advmod(_-11, now-12)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD will)
          (VP
            (VP (VB have)
              (NP (NN patience)))
            (CC and)
            (RB not)
            (VP (VB go)
              (PP (IN near)
                (NP
                  (NP (PRP them))
                  (NP (DT all) (NN day)))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB show)
        (NP (PRP you))
        (PP (IN in)
          (NP (DT the) (NN evening)))))
    (. .) ('' '')))

mark(have-5, If-2)
nsubj(have-5, you-3)
nsubj(go-9, you-3)
aux(have-5, will-4)
advcl(show-17, have-5)
dobj(have-5, patience-6)
neg(go-9, not-8)
conj_and(have-5, go-9)
advcl(show-17, go-9)
prep_near(go-9, them-11)
det(day-13, all-12)
dep(them-11, day-13)
nsubj(show-17, I-15)
aux(show-17, will-16)
root(ROOT-0, show-17)
dobj(show-17, you-18)
det(evening-21, the-20)
prep_in(show-17, evening-21)

(ROOT
  (S
    (S
      (NP (NNS Agnes))
      (VP (VBD promised)))
    (: ;)
    (CC and)
    (S
      (NP (NNP Willie))
      (VP (VBD gave)
        (NP (DT the) (JJ whole) (NN day))
        (PP (TO to)
          (S
            (VP (VBG getting)
              (NP (NNS things))
              (PP (IN on)
                (NP (DT a) (NN bit))))))))
    (. .)))

nsubj(promised-2, Agnes-1)
root(ROOT-0, promised-2)
nsubj(gave-6, Willie-5)
conj_and(promised-2, gave-6)
det(day-9, the-7)
amod(day-9, whole-8)
tmod(gave-6, day-9)
prepc_to(gave-6, getting-11)
dobj(getting-11, things-12)
det(bit-15, a-14)
prep_on(getting-11, bit-15)

(ROOT
  (S
    (VP (VB Amongst)
      (NP (JJ other) (NNS things))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD wove)
            (NP (PDT such) (DT a) (NN network))
            (PP (IN along)
              (NP
                (NP (DT the) (NN bough))
                (PP (IN of)
                  (NP (DT the) (NNP Scotch) (NN fir)))))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (ADJP (RB quite) (JJ safe)
                    (PP (IN for)
                      (NP (NNP Agnes))))
                  (S
                    (VP (TO to)
                      (VP (VB walk)
                        (PP (IN on)
                          (NP (PRP it)))
                        (ADVP (RB down)
                          (PP (TO to)
                            (NP
                              (NP (DT the) (JJ great) (JJ red) (NN hole))
                              (PP (IN of)
                                (NP (DT the) (NN tree))))))))))))))))
    (. .)))

root(ROOT-0, Amongst-1)
amod(things-3, other-2)
dobj(Amongst-1, things-3)
nsubj(wove-5, he-4)
dep(Amongst-1, wove-5)
predet(network-8, such-6)
det(network-8, a-7)
dobj(wove-5, network-8)
det(bough-11, the-10)
prep_along(wove-5, bough-11)
det(fir-15, the-13)
nn(fir-15, Scotch-14)
prep_of(bough-11, fir-15)
mark(safe-21, that-17)
nsubj(safe-21, it-18)
nsubj(walk-25, it-18)
cop(safe-21, was-19)
advmod(safe-21, quite-20)
ccomp(wove-5, safe-21)
prep_for(safe-21, Agnes-23)
aux(walk-25, to-24)
xcomp(safe-21, walk-25)
prep_on(walk-25, it-27)
advmod(walk-25, down-28)
det(hole-33, the-30)
amod(hole-33, great-31)
amod(hole-33, red-32)
prep_to(down-28, hole-33)
det(tree-36, the-35)
prep_of(hole-33, tree-36)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP he))
    (VP (VBD was)
      (ADJP (JJ content)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (DT a) (NN pause))
              (PP (IN for)
                (NP
                  (NP
                    (NP (DT the) (NN present))
                    (, ,)
                    (VP (VBG constructing)
                      (ADVP (RB first))))
                  (, ,)
                  (ADVP (RB however))
                  (, ,)
                  (NP
                    (NP (DT a) (JJ little) (NN chair))
                    (PP (IN of)
                      (NP (NN bough)
                        (CC and)
                        (NN branch))))
                  (CC and)
                  (NP
                    (NP (NN rope)
                      (CC and)
                      (NN twig))
                    (SBAR
                      (WHPP (IN in)
                        (WHNP (WDT which)))
                      (S
                        (NP (PRP she))
                        (VP (MD could)
                          (ADVP (RB safely))
                          (VP (VB sit)))))))))))))
    (. .)))

advmod(content-4, There-1)
nsubj(content-4, he-2)
nsubj(make-6, he-2)
cop(content-4, was-3)
root(ROOT-0, content-4)
aux(make-6, to-5)
xcomp(content-4, make-6)
det(pause-8, a-7)
dobj(make-6, pause-8)
det(present-11, the-10)
prep_for(make-6, present-11)
vmod(present-11, constructing-13)
advmod(constructing-13, first-14)
prep_for(make-6, however-16)
advmod(present-11, however-16)
conj_and(present-11, however-16)
det(chair-20, a-18)
amod(chair-20, little-19)
prep_for(make-6, chair-20)
conj_and(present-11, chair-20)
prep_of(chair-20, bough-22)
prep_of(chair-20, branch-24)
conj_and(bough-22, branch-24)
prep_for(make-6, rope-26)
conj_and(present-11, rope-26)
prep_in(sit-34, rope-26)
conj_and(present-11, twig-28)
conj_and(rope-26, twig-28)
prep_in(sit-34, twig-28)
nsubj(sit-34, she-31)
aux(sit-34, could-32)
advmod(sit-34, safely-33)
rcmod(rope-26, sit-34)

(ROOT
  (S
    (SBAR (RB Just) (IN as)
      (S
        (NP (PRP he))
        (VP (VBD had)
          (VP (VBN finished)
            (NP (DT the) (NN chair))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD heard)
      (NP (PRP$ her) (NN voice) (NN calling))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT a) (NN tone))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD grew)
                (ADJP
                  (ADJP (JJR more))
                  (CC and)
                  (ADJP (RBR more) (JJ pitiful)))))))))
    (. .)))

advmod(finished-5, Just-1)
mark(finished-5, as-2)
nsubj(finished-5, he-3)
aux(finished-5, had-4)
advcl(heard-10, finished-5)
det(chair-7, the-6)
dobj(finished-5, chair-7)
nsubj(heard-10, he-9)
root(ROOT-0, heard-10)
poss(calling-13, her-11)
nn(calling-13, voice-12)
dobj(heard-10, calling-13)
det(tone-17, a-16)
prep_in(heard-10, tone-17)
nsubj(grew-19, tone-17)
rcmod(tone-17, grew-19)
acomp(grew-19, more-20)
advmod(pitiful-23, more-22)
acomp(grew-19, pitiful-23)
conj_and(more-20, pitiful-23)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Willie))
    (. !)))

root(ROOT-0, Willie-2)

(ROOT
  (NP (: --) (NN Willie) (. !)))

root(ROOT-0, Willie-2)

(ROOT
  (NP (: --) (NN Willie) (. !)))

root(ROOT-0, Willie-2)

(ROOT
  (PRN (: --)
    (S
      (NP (NNP Willie))
      (VP (VBP !) ('' '')))))

nsubj(!-3, Willie-2)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD got)
        (PRT (RP down)))
      (CC and)
      (VP (VBD ran)
        (S
          (VP (TO to)
            (VP (VB find)
              (NP (PRP her)))))))
    (. .)))

nsubj(got-2, He-1)
nsubj(ran-5, He-1)
nsubj(find-7, He-1)
root(ROOT-0, got-2)
prt(got-2, down-3)
conj_and(got-2, ran-5)
aux(find-7, to-6)
xcomp(ran-5, find-7)
dobj(find-7, her-8)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (PP (IN at)
          (NP
            (NP (DT the) (NN window))
            (PP (IN of)
              (NP
                (NP (PRP$ his) (NN room))
                (, ,)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP she))
                    (VP (VBD had)
                      (VP (VBN gone)
                        (S
                          (VP (TO to)
                            (VP (VB wait)
                              (SBAR (IN till)
                                (S
                                  (NP (PRP he))
                                  (VP (VBD called)
                                    (NP (PRP her))))))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP$ her) (NN patience))
      (VP (VBD had)
        (PP (IN at)
          (NP (JJ last) (JJ given) (NN way)))))
    (. .)))

nsubj(was-2, She-1)
root(ROOT-0, was-2)
det(window-5, the-4)
prep_at(was-2, window-5)
poss(room-8, his-7)
prep_of(window-5, room-8)
advmod(gone-13, where-10)
nsubj(gone-13, she-11)
nsubj(wait-15, she-11)
aux(gone-13, had-12)
rcmod(room-8, gone-13)
aux(wait-15, to-14)
xcomp(gone-13, wait-15)
mark(called-18, till-16)
nsubj(called-18, he-17)
advcl(wait-15, called-18)
dobj(called-18, her-19)
poss(patience-23, her-22)
nsubj(had-24, patience-23)
conj_but(was-2, had-24)
amod(way-28, last-26)
amod(way-28, given-27)
prep_at(had-24, way-28)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB _))
      (ADJP (RB so) (RB _) (JJ tired))
      (, ,)
      (NP (NNP Willie)))
    (. !)))

nsubj(tired-7, I-2)
cop(tired-7, 'm-3)
advmod(tired-7, _-4)
advmod(tired-7, so-5)
advmod(tired-7, _-6)
root(ROOT-0, tired-7)
dep(tired-7, Willie-9)

(ROOT
  (S
    (NP (NNP May))
    (RB n't)
    (NP (PRP I))
    (VP (VBP come)
      (ADVP (RB yet)))
    (. ?) ('' '')))

tmod(come-4, May-1)
neg(come-4, n't-2)
nsubj(come-4, I-3)
root(ROOT-0, come-4)
advmod(come-4, yet-5)

(ROOT
  (S
    (S (`` ``)
      (VP (VB Wait)
        (ADVP
          (NP (RB just) (CD one) (NN moment))
          (RBR more)))
      (, ,) ('' ''))
    (VP
      (VP (VBD said)
        (NP (NNP Willie)))
      (, ,)
      (CC and)
      (VP (VBD ran)
        (PP (TO to)
          (NP
            (NP (DT the) (NN house))
            (PP (IN for)
              (NP
                (NP (PRP$ his) (NN mother) (POS 's))
                (NN shawl)))))))
    (. .)))

csubj(said-9, Wait-2)
csubj(ran-13, Wait-2)
advmod(moment-5, just-3)
num(moment-5, one-4)
npadvmod(more-6, moment-5)
advmod(Wait-2, more-6)
root(ROOT-0, said-9)
dobj(said-9, Willie-10)
conj_and(said-9, ran-13)
det(house-16, the-15)
prep_to(ran-13, house-16)
poss(mother-19, his-18)
poss(shawl-21, mother-19)
prep_for(house-16, shawl-21)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (SBAR (RB soon) (IN as)
            (S
              (NP (PRP he))
              (VP (VBD began)
                (S
                  (VP (TO to)
                    (VP (VB wrap)
                      (NP (PRP it))
                      (PP (IN about)
                        (NP (PRP her)))))))))
          (, ,)
          (NP (NNP Agnes))
          (VP (VBD said) (, ,)
            (ADVP (RB thoughtfully))
            (: --) (`` ``)
            (S
              (NP (NN Somebody))
              (VP (VBD did)
                (NP (DT that))
                (PP (TO to)
                  (NP (PRP me)))
                (PP (IN before)
                  (PRN (: --)
                    (FRAG (RB not)
                      (ADVP (RB long) (RB ago)))
                    (: --))))))))
      (NP (PRP I))
      (VP (VBP remember)))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT the) (NN angel))
          (PP (IN in)
            (NP (PRP$ my) (NN dream))))))
    (. .) ('' '')))

mark(said-13, As-1)
advmod(began-5, soon-2)
mark(began-5, as-3)
nsubj(began-5, he-4)
nsubj(wrap-7, he-4)
advcl(said-13, began-5)
aux(wrap-7, to-6)
xcomp(began-5, wrap-7)
dobj(wrap-7, it-8)
prep_about(wrap-7, her-10)
nsubj(said-13, Agnes-12)
advcl(remember-30, said-13)
advmod(said-13, thoughtfully-15)
nsubj(did-19, Somebody-18)
ccomp(said-13, did-19)
dobj(did-19, that-20)
prep_to(did-19, me-22)
prep(did-19, before-23)
dep(before-23, not-25)
advmod(ago-27, long-26)
dep(not-25, ago-27)
nsubj(remember-30, I-29)
root(ROOT-0, remember-30)
nsubj(angel-35, it-32)
cop(angel-35, was-33)
det(angel-35, the-34)
parataxis(remember-30, angel-35)
poss(dream-38, my-37)
prep_in(angel-35, dream-38)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP Willie))
        (VP (VBD put)
          (NP (DT the) (NN corner))
          (PP (IN over)
            (NP (PRP$ her) (NN face))))))
    (PRN (, ,)
      (S
        (NP (PRP she))
        (VP (VBD said)))
      (, ,))
    (`` ``)
    (NP (PRP He))
    (VP (VBD did)
      (NP (DT that))
      (ADVP (RB too)))
    (. !) ('' '')))

advmod(put-3, When-1)
nsubj(put-3, Willie-2)
advcl(did-15, put-3)
det(corner-5, the-4)
dobj(put-3, corner-5)
poss(face-8, her-7)
prep_over(put-3, face-8)
nsubj(said-11, she-10)
parataxis(did-15, said-11)
nsubj(did-15, He-14)
root(ROOT-0, did-15)
dobj(did-15, that-16)
advmod(did-15, too-17)

(ROOT
  (S (CC and)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP he))
        (VP (VBD took)
          (NP (PRP her))
          (PP (IN in)
            (NP (PRP$ his) (NNS arms))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (NP (PRP He))
        (VP (VBD did)
          (NP (DT that))
          (ADVP (RB too)))))
    (. !)))

cc(said-11, and-1)
advmod(took-4, when-2)
nsubj(took-4, he-3)
advcl(said-11, took-4)
dobj(took-4, her-5)
poss(arms-8, his-7)
prep_in(took-4, arms-8)
nsubj(said-11, she-10)
root(ROOT-0, said-11)
nsubj(did-15, He-14)
ccomp(said-11, did-15)
dobj(did-15, that-16)
advmod(did-15, too-17)

(ROOT
  (S
    (S
      (ADJP (WRB How) (JJ funny)))
    (NP (PRP you))
    (VP (MD should)
      (VP (VB do)
        (SBAR
          (WHADJP (RB just) (WP what))
          (S
            (NP (DT the) (NN angel))
            (VP (VBD did)
              (PP (IN in)
                (NP (PRP$ my) (NN dream))))))))
    (. !) ('' '')))

advmod(funny-2, How-1)
dep(do-5, funny-2)
nsubj(do-5, you-3)
aux(do-5, should-4)
root(ROOT-0, do-5)
advmod(what-7, just-6)
dep(did-10, what-7)
det(angel-9, the-8)
nsubj(did-10, angel-9)
ccomp(do-5, did-10)
poss(dream-13, my-12)
prep_in(did-10, dream-13)

(ROOT
  (S
    (NP (NNP Willie))
    (VP (VBD ran)
      (PP (IN about)
        (UCP
          (PP (IN with)
            (NP (PRP$ her) (RB here)))
          (CC and)
          (ADVP (RB there))))
      (PP (IN through)
        (NP (DT the) (NNS ruins)))
      (, ,)
      (PP
        (PP (IN into)
          (NP
            (NP (DT the) (NN house))
            (, ,)
            (ADVP (RB up)
              (CC and)
              (RB down))
            (NP (DT the) (NNS stairs))
            (, ,)))
        (CC and)
        (PP (IN through)
          (NP
            (NP (DT the) (NN garden))
            (PP (IN in)
              (NP (JJ many) (NNS directions))))))
      (, ,)
      (SBAR (IN until)
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (VBN satisfied)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (MD must)
                    (VP (VB have)
                      (VP
                        (ADVP (RB thoroughly))
                        (VBN bewildered)
                        (NP (PRP her))
                        (SBAR (IN as)
                          (S
                            (PP (TO to)
                              (NP (NN whereabouts)))
                            (NP (PRP they))
                            (VP
                              (VP (VBD were))
                              (, ,)
                              (CC and)
                              (ADVP (RB then) (IN at) (JJ last))
                              (VP (VBD sped)
                                (PP (IN with)
                                  (NP (PRP her)))
                                (ADVP (RB up)
                                  (NP (DT the) (NN stair))
                                  (PP (TO to)
                                    (NP
                                      (NP (DT the) (NN fork))
                                      (PP (IN of)
                                        (NP (DT the) (NN elm-tree))))))))))))))))))))
    (. .)))

nsubj(ran-2, Willie-1)
nsubj(ran-2', Willie-1)
root(ROOT-0, ran-2)
conj_and(ran-2, ran-2')
prep(ran-2, about-3)
dep(about-3, with-4)
poss(here-6, her-5)
pobj(with-4, here-6)
dep(about-3, there-8)
conj_and(with-4, there-8)
det(ruins-11, the-10)
prep_through(ran-2, ruins-11)
det(house-15, the-14)
prep_into(ran-2, house-15)
advmod(house-15, up-17)
advmod(house-15, down-19)
conj_and(up-17, down-19)
det(stairs-21, the-20)
dep(house-15, stairs-21)
det(garden-26, the-25)
prep_through(ran-2', garden-26)
amod(directions-29, many-28)
prep_in(garden-26, directions-29)
mark(satisfied-34, until-31)
nsubjpass(satisfied-34, he-32)
auxpass(satisfied-34, was-33)
advcl(ran-2, satisfied-34)
nsubj(bewildered-39, he-35)
aux(bewildered-39, must-36)
aux(bewildered-39, have-37)
advmod(bewildered-39, thoroughly-38)
ccomp(satisfied-34, bewildered-39)
dobj(bewildered-39, her-40)
mark(were-45, as-41)
prep_to(were-45, whereabouts-43)
nsubj(were-45, they-44)
nsubj(sped-51, they-44)
advcl(bewildered-39, were-45)
advmod(at-49, then-48)
advcl(bewildered-39, at-49)
advmod(were-45, at-49)
conj_and(were-45, at-49)
advmod(at-49, last-50)
advcl(bewildered-39, sped-51)
conj_and(were-45, sped-51)
prep_with(sped-51, her-53)
advmod(sped-51, up-54)
det(stair-56, the-55)
pobj(up-54, stair-56)
det(fork-59, the-58)
prep_to(up-54, fork-59)
det(elm-tree-62, the-61)
prep_of(fork-59, elm-tree-62)

(ROOT
  (S
    (ADVP (RB There))
    (NP (PRP he))
    (VP
      (VP (VBD threw)
        (PRT (RP back))
        (NP (DT the) (NN shawl)))
      (, ,)
      (CC and)
      (VP (VBD told)
        (S
          (NP (PRP her))
          (VP (TO to)
            (VP (VB look))))))
    (. .)))

advmod(threw-3, There-1)
nsubj(threw-3, he-2)
nsubj(told-9, he-2)
root(ROOT-0, threw-3)
prt(threw-3, back-4)
det(shawl-6, the-5)
dobj(threw-3, shawl-6)
conj_and(threw-3, told-9)
dobj(told-9, her-10)
nsubj(look-12, her-10)
aux(look-12, to-11)
xcomp(told-9, look-12)

(ROOT
  (FRAG
    (S
      (VP (TO To)
        (VP (VB see)
          (NP (PRP$ her) (JJ first)
            (ADJP (RB utterly) (VBN bewildered))
            (NN expression)))))
    (: --)
    (FRAG
      (ADVP (RB then))
      (NP
        (NP (DT the) (JJ slow) (NN glimmering) (NN dawn))
        (PP (IN of)
          (NP
            (NP (NN intelligence))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP she))
                (VP
                  (VP (VBD began)
                    (S
                      (VP (TO to)
                        (VP (VB understand)
                          (SBAR
                            (WHADVP (WRB where))
                            (S
                              (NP (PRP she))
                              (VP (VBD was)
                                (PRN (: --)
                                  (PP (IN next)
                                    (NP
                                      (NP (DT the) (JJ gradual) (NN rise))
                                      (PP (IN of)
                                        (NP
                                          (NP (NN light))
                                          (PP (IN in)
                                            (NP
                                              (NP (PRP$ her) (NN face))
                                              (PP (IN as)
                                                (SBAR
                                                  (SBAR (IN if)
                                                    (S
                                                      (NP (PRP it))
                                                      (VP (VBD came)
                                                        (ADVP (RB there))
                                                        (PP (IN from)
                                                          (NP
                                                            (NP (DT some) (NN spring))
                                                            (ADVP (RB down) (IN below))))
                                                        (, ,)
                                                        (SBAR (IN until)
                                                          (S
                                                            (NP (PRP it))
                                                            (VP (VBD broke)
                                                              (PRT (RP out))
                                                              (PP (IN in)
                                                                (NP (DT a) (NN smile)))
                                                              (PP (DT all) (IN over)
                                                                (NP (PRP it)))
                                                              (, ,)
                                                              (SBAR
                                                                (WHADVP (WRB when))
                                                                (S
                                                                  (PP (IN at)
                                                                    (NP (NN length)))
                                                                  (NP (PRP she))
                                                                  (VP (VBD perceived)
                                                                    (SBAR (IN that)
                                                                      (S
                                                                        (NP (DT this))
                                                                        (VP (VBD was)
                                                                          (SBAR
                                                                            (SBAR
                                                                              (WHNP (WP what))
                                                                              (S
                                                                                (NP (PRP he))
                                                                                (VP (VBD had)
                                                                                  (VP (VBN been)
                                                                                    (VP (VBG working)
                                                                                      (PP (IN at)))))))
                                                                            (, ,)
                                                                            (CC and)
                                                                            (SBAR
                                                                              (WHADVP (WRB why))
                                                                              (S
                                                                                (NP (PRP he))
                                                                                (VP (MD would) (RB n't)
                                                                                  (VP (VB have)
                                                                                    (NP (PRP her))
                                                                                    (PP (IN with)
                                                                                      (NP (PRP him))))))))))))))))))))
                                                  (: --)
                                                  (S
                                                    (VP (VBD gave)
                                                      (NP (NNP Willie))
                                                      (NP
                                                        (NP (PDT all) (DT the) (NN pleasure))
                                                        (SBAR
                                                          (S
                                                            (NP (PRP he))
                                                            (VP (VBD had)
                                                              (VP (VBN hoped)
                                                                (PP (IN for)))))))))))))))))
                                  (: --))
                                (VP
                                  (ADVP (RB quite))
                                  (VBN satisfied)
                                  (S
                                    (NP (PRP him)))))))))))
                  (, ,)
                  (CC and)
                  (VP (VBD made)
                    (S
                      (NP (PRP him))
                      (VP (VB count)
                        (NP
                          (NP (PRP$ his) (NN labour))
                          (VP
                            (ADVP (RB well))
                            (VBN rewarded)))))))))))))
    (. .)))

aux(see-2, To-1)
dep(dawn-13, see-2)
poss(expression-7, her-3)
amod(expression-7, first-4)
advmod(bewildered-6, utterly-5)
amod(expression-7, bewildered-6)
dobj(see-2, expression-7)
dep(dawn-13, then-9)
det(dawn-13, the-10)
amod(dawn-13, slow-11)
nn(dawn-13, glimmering-12)
root(ROOT-0, dawn-13)
prep_of(dawn-13, intelligence-15)
mark(began-19, as-17)
nsubj(began-19, she-18)
nsubj(understand-21, she-18)
nsubj(made-97, she-18)
rcmod(intelligence-15, began-19)
aux(understand-21, to-20)
xcomp(began-19, understand-21)
advmod(satisfied-93, where-22)
nsubjpass(satisfied-93, she-23)
auxpass(satisfied-93, was-24)
dep(satisfied-93, next-26)
det(rise-29, the-27)
amod(rise-29, gradual-28)
pobj(next-26, rise-29)
prep_of(rise-29, light-31)
poss(face-34, her-33)
prep_in(light-31, face-34)
mark(came-38, if-36)
nsubj(came-38, it-37)
dep(gave-82, came-38)
advmod(came-38, there-39)
det(spring-42, some-41)
prep_from(came-38, spring-42)
advmod(below-44, down-43)
advmod(spring-42, below-44)
mark(broke-48, until-46)
nsubj(broke-48, it-47)
advcl(came-38, broke-48)
prt(broke-48, out-49)
det(smile-52, a-51)
prep_in(broke-48, smile-52)
dep(broke-48, all-53)
prep_over(broke-48, it-55)
advmod(perceived-61, when-57)
prep_at(perceived-61, length-59)
nsubj(perceived-61, she-60)
advcl(broke-48, perceived-61)
mark(was-64, that-62)
nsubj(was-64, this-63)
ccomp(perceived-61, was-64)
prep_at(working-69, what-65)
nsubj(working-69, he-66)
aux(working-69, had-67)
aux(working-69, been-68)
dep(was-64, working-69)
advmod(have-77, why-73)
nsubj(have-77, he-74)
aux(have-77, would-75)
neg(have-77, n't-76)
dep(was-64, have-77)
conj_and(working-69, have-77)
dobj(have-77, her-78)
prep_with(have-77, him-80)
prepc_as(face-34, gave-82)
iobj(gave-82, Willie-83)
predet(pleasure-86, all-84)
det(pleasure-86, the-85)
dobj(gave-82, pleasure-86)
prep_for(hoped-89, pleasure-86)
nsubj(hoped-89, he-87)
aux(hoped-89, had-88)
rcmod(pleasure-86, hoped-89)
advmod(satisfied-93, quite-92)
ccomp(understand-21, satisfied-93)
xcomp(satisfied-93, him-94)
rcmod(intelligence-15, made-97)
conj_and(began-19, made-97)
nsubj(count-99, him-98)
ccomp(made-97, count-99)
poss(labour-101, his-100)
dobj(count-99, labour-101)
advmod(rewarded-103, well-102)
vmod(labour-101, rewarded-103)

(ROOT
  (S (`` ``)
    (NP (NNP O))
    (VP (VBZ Willie))
    (. !)))

nsubj(Willie-3, O-2)
root(ROOT-0, Willie-3)

(ROOT
  (INTJ (UH Willie) (. !)))

root(ROOT-0, Willie-1)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT all))
        (PP (IN for)
          (NP (PRP me)))))
    (. !)))

nsubj(all-3, it-1)
cop(all-3, was-2)
root(ROOT-0, all-3)
prep_for(all-3, me-5)

(ROOT
  (PRN (: --)
    (S
      (VP (VBD Was)
        (PP (RB n't)
          (FRAG
            (NP
              (NP (PRP it))
              (NP (RB now)))
            (. ?) ('' '')))))))

root(ROOT-0, Was-2)
prep(Was-2, n't-3)
dep(n't-3, it-4)
dep(it-4, now-5)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB Yes))
      (, ,)
      (NP (PRP it))
      (VP
        (VP (VBD was))
        (, ,)
        (VP (VBZ pet))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

advmod(was-5, Yes-2)
nsubj(was-5, it-4)
ccomp(said-10, was-5)
dep(was-5, pet-7)
root(ROOT-0, said-10)
nsubj(said-10, Willie-11)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBD was)
      (S (RB all)
        (VP (TO to)
          (VP (VB make)
            (S
              (NP
                (NP (DT a) (NN bird))
                (PP (IN of)
                  (NP (PRP me))))
              (: --)
              (VP (VBD was) (RB n't)
                (NP (PRP it))))))))
    (. ?) ('' '')))

nsubj(was-3, It-2)
nsubj(make-6, It-2)
root(ROOT-0, was-3)
advmod(make-6, all-4)
aux(make-6, to-5)
xcomp(was-3, make-6)
det(bird-8, a-7)
nsubj(it-14, bird-8)
prep_of(bird-8, me-10)
cop(it-14, was-12)
neg(it-14, n't-13)
ccomp(make-6, it-14)

(ROOT
  (S
    (NP (PRP she))
    (VP (VBD went)
      (PRT (RP on)))
    (. .)))

nsubj(went-2, she-1)
root(ROOT-0, went-2)
prt(went-2, on-3)

(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (: --)
    (S
      (NP
        (NP
          (QP (RB as) (JJ much)))
        (PP (IN of)
          (NP
            (NP (DT a) (NN bird))
            (PP (IN as)
              (NP (PRP I))))))
      (VP (MD could)))
    (. .)))

advmod(could-11, Yes-2)
quantmod(much-5, as-4)
nsubj(could-11, much-5)
det(bird-8, a-7)
prep_of(much-5, bird-8)
prep_as(bird-8, I-10)
root(ROOT-0, could-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB give)
          (NP (PRP you))
          (NP (NNS wings)))))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP know)))
      (, ,))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (VP (RB n't)
          (S
            (NP
              (NP (DT any))
              (PP (IN of)
                (NP (PRP$ my) (JJ own)))
              (S
                (VP (TO to)
                  (VP (VB fly)
                    (PRT (RP up))
                    (PP (IN with)
                      (NP (PRP you)))
                    (PP (TO to)
                      (NP (DT the) (NN moon))))))))
          (, ,)
          (SBAR (IN as)
            (S
              (NP
                (NP (DT the) (NN angel))
                (PP (IN in)
                  (NP (PRP$ your) (NN dream))))
              (VP (VBD did)))))))
    (. .)))

nsubj(give-4, I-1)
aux(give-4, could-2)
neg(give-4, n't-3)
root(ROOT-0, give-4)
iobj(give-4, you-5)
dobj(give-4, wings-6)
nsubj(know-9, you-8)
dep(give-4, know-9)
nsubj(n't-14, I-12)
aux(n't-14, had-13)
conj_and(give-4, n't-14)
xcomp(n't-14, any-15)
poss(own-18, my-17)
prep_of(any-15, own-18)
aux(fly-20, to-19)
vmod(any-15, fly-20)
prt(fly-20, up-21)
prep_with(fly-20, you-23)
det(moon-26, the-25)
prep_to(fly-20, moon-26)
mark(did-34, as-28)
det(angel-30, the-29)
nsubj(did-34, angel-30)
poss(dream-33, your-32)
prep_in(angel-30, dream-33)
advcl(n't-14, did-34)

(ROOT
  (S
    (NP (DT The) (NN dream))
    (VP (VBD was)
      (ADJP (RB much) (JJR nicer))
      (PRN (: --)
        (S
          (VP (VBD was) (RB n't)
            (NP (PRP it))))))
    (. ?) ('' '')))

det(dream-2, The-1)
nsubj(nicer-5, dream-2)
cop(nicer-5, was-3)
advmod(nicer-5, much-4)
root(ROOT-0, nicer-5)
cop(it-9, was-7)
neg(it-9, n't-8)
parataxis(nicer-5, it-9)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (ADJP (JJ sure)
          (PP (IN about)
            (NP (DT that))))))
    (: --)
    (S
      (ADVP (RB really))
      (NP (PRP I))
      (VP (VBP 'm) (RB not)))
    (. .)))

nsubj(sure-5, I-2)
cop(sure-5, 'm-3)
neg(sure-5, not-4)
root(ROOT-0, sure-5)
prep_about(sure-5, that-7)
advmod('m-11, really-9)
nsubj('m-11, I-10)
parataxis(sure-5, 'm-11)
neg('m-11, not-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJR nicer))
            (S
              (VP (TO to)
                (VP (VB have)
                  (S
                    (NP (DT a) (NN wind))
                    (VP
                      (VP (VBG coming)
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBP do) (RB n't)
                              (VP (VB know)
                                (PP (IN from)
                                  (FRAG
                                    (WHADVP (WRB where)))))))))
                      (, ,)
                      (CC and)
                      (VP (VBG making)
                        (NP (PDT all) (DT the) (JJ leaves) (NN flutter) (RB about))))))))
            (, ,)
            (SBAR (IN than)
              (S
                (VP (TO to)
                  (VP (VB have)
                    (NP
                      (NP (DT the) (NNS wings))
                      (PP (IN of)
                        (NP
                          (NP (NNS birdies))
                          (VP (VBG making)
                            (NP (DT the) (NN wind))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(nicer-5, it-3)
nsubj(have-7, it-3)
nsubj(have-28, it-3)
cop(nicer-5, is-4)
ccomp(think-2, nicer-5)
aux(have-7, to-6)
xcomp(nicer-5, have-7)
det(wind-9, a-8)
nsubj(coming-10, wind-9)
nsubj(making-19, wind-9)
ccomp(have-7, coming-10)
nsubj(know-14, you-11)
aux(know-14, do-12)
neg(know-14, n't-13)
ccomp(coming-10, know-14)
prep(know-14, from-15)
dep(from-15, where-16)
ccomp(have-7, making-19)
conj_and(coming-10, making-19)
predet(flutter-23, all-20)
det(flutter-23, the-21)
amod(flutter-23, leaves-22)
dobj(making-19, flutter-23)
advmod(flutter-23, about-24)
mark(have-28, than-26)
aux(have-28, to-27)
advcl(nicer-5, have-28)
xcomp(nicer-5, have-28)
det(wings-30, the-29)
dobj(have-28, wings-30)
prep_of(wings-30, birdies-32)
vmod(birdies-32, making-33)
det(wind-35, the-34)
dobj(making-33, wind-35)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB care)
        (PP (IN about)
          (NP
            (NP (DT the) (NN man))
            (PP (IN in)
              (NP (DT the) (NN moon)))))
        (ADVP (RB much))))
    (. .)))

cc(care-5, And-1)
nsubj(care-5, I-2)
aux(care-5, do-3)
neg(care-5, n't-4)
root(ROOT-0, care-5)
det(man-8, the-7)
prep_about(care-5, man-8)
det(moon-11, the-10)
prep_in(man-8, moon-11)
advmod(care-5, much-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ 's) (RB not)
      (ADJP (RB so) (JJ nice)
        (PP (IN as)
          (NP
            (NP (PRP you))
            (, ,)
            (NP (NNP Willie))))))
    (. .)))

nsubj(nice-5, He-1)
cop(nice-5, 's-2)
neg(nice-5, not-3)
advmod(nice-5, so-4)
root(ROOT-0, nice-5)
prep_as(nice-5, you-7)
appos(you-7, Willie-9)

(ROOT
  (S (CC And)
    (NP
      (NP (JJ yon) (JJ red) (NN ray))
      (PP (IN of)
        (NP
          (NP (DT the) (NN sun))
          (PP (IN through)
            (NP
              (NP (RB there))
              (PP (IN on)
                (NP (DT the) (NN fir-tree))))))))
    (VP (VBZ is)
      (ADJP (RB as) (JJ good))
      (ADVP (RB nearly))
      (PP (IN as)
        (NP (DT the) (NN moon))))
    (. .) ('' '')))

cc(good-15, And-1)
amod(ray-4, yon-2)
amod(ray-4, red-3)
nsubj(good-15, ray-4)
det(sun-7, the-6)
prep_of(ray-4, sun-7)
prep(sun-7, through-8)
pobj(through-8, there-9)
det(fir-tree-12, the-11)
prep_on(there-9, fir-tree-12)
cop(good-15, is-13)
advmod(good-15, as-14)
root(ROOT-0, good-15)
advmod(good-15, nearly-16)
det(moon-19, the-18)
prep_as(good-15, moon-19)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S (CC but)
    (NP (PRP you))
    (VP (MD may)
      (VP (VB have)
        (NP (DT the) (NN moon))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VB wait)
              (NP (DT a) (NN bit)))))))
    (. .)))

cc(have-4, but-1)
nsubj(have-4, you-2)
aux(have-4, may-3)
root(ROOT-0, have-4)
det(moon-6, the-5)
dobj(have-4, moon-6)
mark(wait-10, if-8)
nsubj(wait-10, you-9)
advcl(have-4, wait-10)
det(bit-12, a-11)
dobj(wait-10, bit-12)

(ROOT
  (S
    (NP (PRP She))
    (VP (MD 'll)
      (VP (VB be)
        (ADJP
          (ADVP (RB too) (RB late))
          (JJ to-night))
        (, ,)
        (ADVP (RB though))))
    (. .) ('' '')))

nsubj(to-night-6, She-1)
aux(to-night-6, 'll-2)
cop(to-night-6, be-3)
advmod(late-5, too-4)
advmod(to-night-6, late-5)
root(ROOT-0, to-night-6)
advmod(to-night-6, though-8)

(ROOT
  (S (`` ``)
    (S (CC But)
      (ADVP (RB now))
      (NP (PRP I))
      (VP (VBP think)
        (PP (IN of)
          (NP
            (NP (PRP it))
            (, ,)
            (NP (NNP Willie))))))
    (, ,) ('' '')
    (PRN
      (SINV
        (VP (VBD said))
        (NP (NNP Agnes))))
    (, ,) (`` ``)
    (NP (PRP I))
    (VP (VBP do)
      (SBAR
        (S
          (VP (VBP believe)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD was) (RB n't)
                  (NP
                    (NP (DT a) (NN dream))
                    (ADVP (IN at) (DT all))))))))))
    (. .) ('' '')))

cc(think-5, But-2)
advmod(think-5, now-3)
nsubj(think-5, I-4)
ccomp(do-17, think-5)
prep_of(think-5, it-7)
appos(it-7, Willie-9)
parataxis(do-17, said-12)
nsubj(said-12, Agnes-13)
nsubj(do-17, I-16)
root(ROOT-0, do-17)
ccomp(do-17, believe-18)
nsubj(dream-23, it-19)
cop(dream-23, was-20)
neg(dream-23, n't-21)
det(dream-23, a-22)
ccomp(believe-18, dream-23)
advmod(dream-23, at-24)
pobj(at-24, all-25)

(ROOT
  (S (`` ``)
    (VP (VB Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (DT a) (JJ real) (NN angel))
                (VP (VBD carried)
                  (NP (PRP you))
                  (ADVP (RB really))
                  (ADVP (RB up)
                    (PP (TO to)
                      (NP (DT the) (NN moon)))))))
            (, ,)
            (ADVP (RB then))))))
    (. ?) ('' '')))

root(ROOT-0, Do-2)
nsubj(think-4, you-3)
ccomp(Do-2, think-4)
det(angel-7, a-5)
amod(angel-7, real-6)
nsubj(carried-8, angel-7)
ccomp(think-4, carried-8)
dobj(carried-8, you-9)
advmod(carried-8, really-10)
advmod(carried-8, up-11)
det(moon-14, the-13)
prep_to(up-11, moon-14)
advmod(think-4, then-16)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Willie-2)

(ROOT
  (S
    (FRAG
      (INTJ (`` ``) (UH No)))
    (: ;)
    (S
      (S (CC but)
        (NP (DT a) (JJ real) (NNP Willie))
        (VP (VBD carried)
          (NP (PRP me))
          (ADVP (RB really) (RB up))
          (PP (IN into)
            (NP (DT this) (NN tree)))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NN moon))
          (VP (VBP shone)
            (PP (IN through)
              (NP (DT the) (NNS leaves)))))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP (VBD thought)
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBD were)
                  (NP (NNS birds)))))))))
    (. .)))

dep(carried-8, No-2)
det(Willie-7, a-5)
amod(Willie-7, real-6)
nsubj(carried-8, Willie-7)
root(ROOT-0, carried-8)
dobj(carried-8, me-9)
advmod(up-11, really-10)
advmod(carried-8, up-11)
det(tree-14, this-13)
prep_into(carried-8, tree-14)
det(moon-18, the-17)
nsubj(shone-19, moon-18)
conj_and(carried-8, shone-19)
det(leaves-22, the-21)
prep_through(shone-19, leaves-22)
nsubj(thought-26, I-25)
conj_and(carried-8, thought-26)
conj_and(shone-19, thought-26)
nsubj(birds-29, they-27)
cop(birds-29, were-28)
ccomp(thought-26, birds-29)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (NP
        (NP
          (NP (PRP$ my) (NN angel))
          (, ,)
          (NP (NNP Willie))
          (, ,))
        (ADJP (RB only) (JJR better)))
      (PP (TO to)
        (NP (PRP me)))
      (PP (IN than)
        (NP (CD twenty) (CD hundred) (NNS angels))))
    (. .) ('' '')))

nsubj(angel-4, You-1)
cop(angel-4, 're-2)
poss(angel-4, my-3)
root(ROOT-0, angel-4)
appos(angel-4, Willie-6)
advmod(better-9, only-8)
amod(angel-4, better-9)
prep_to(angel-4, me-11)
num(angels-15, twenty-13)
num(angels-15, hundred-14)
prep_than(angel-4, angels-15)

(ROOT
  (S (CC And)
    (NP (NNP Agnes))
    (VP (VBD threw)
      (SBAR
        (S
          (NP (PRP$ her) (NNS arms))
          (VP
            (VP (VBP round)
              (NP (PRP$ his) (NN neck)))
            (CC and)
            (VP (VBD hugged)
              (CC and)
              (VBD kissed)
              (NP (PRP him)))))))
    (. .)))

cc(threw-3, And-1)
nsubj(threw-3, Agnes-2)
root(ROOT-0, threw-3)
poss(arms-5, her-4)
nsubj(round-6, arms-5)
nsubj(hugged-10, arms-5)
ccomp(threw-3, round-6)
poss(neck-8, his-7)
dobj(round-6, neck-8)
ccomp(threw-3, hugged-10)
conj_and(round-6, hugged-10)
conj_and(round-6, kissed-12)
conj_and(hugged-10, kissed-12)
dobj(hugged-10, him-13)

(ROOT
  (SINV
    (S
      (S
        (ADVP (RB As) (RB soon)
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB speak) (, ,)
                  (INTJ (DT that) (VBZ is))
                  (, ,)
                  (SBAR
                    (ADVP (RB as) (RB soon))
                    (IN as)
                    (S
                      (NP (PRP she))
                      (VP (VBD ceased)
                        (S
                          (VP (VBG choking)
                            (NP (PRP him))))))))))))
        (, ,)
        (NP (PRP he))
        (VP (VBD said) (: --) (`` ``)
          (S
            (S
              (NP (PRP You))
              (ADVP (RB _))
              (VP (VBD were)
                (VP (VBN _)
                  (PRT (RP up))
                  (PP (IN in)
                    (NP (DT this) (NN tree)))
                  (NP (JJ last) (NN night)))))
            (: :)
            (CC and)
            (S
              (S
                (NP (DT the) (NN wind))
                (VP (VBD was)
                  (VP (VBG fluttering)
                    (NP (DT the) (NNS leaves)))))
              (: ;)
              (CC and)
              (S
                (S
                  (NP (DT the) (NN moon))
                  (VP (VBD was)
                    (VP (VBG shining)
                      (PP (IN through)
                        (NP (PRP them) ('' ''))))))
                (: --) (`` ``)
                (CC And)
                (S
                  (NP (PRP you))
                  (VP (VBD carried)
                    (NP (PRP me))
                    (PP (IN in)
                      (NP (DT this) (NN shawl))))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT that))
        (VP (VBD was)
          (NP
            (NP (DT the) (JJ red) (NNS wings))
            (PP (IN of)
              (NP (DT the) (NN angel)))))))
    (, ,) ('' '')
    (VP (VBD cried))
    (NP
      (NP (NNP Agnes))
      (, ,)
      (NP
        (NP (NN dancing))
        (PP (IN with)
          (NP (NN delight)))))
    (. .)))

advmod(soon-2, As-1)
advmod(said-20, soon-2)
mark(speak-6, as-3)
nsubj(speak-6, he-4)
aux(speak-6, could-5)
ccomp(soon-2, speak-6)
discourse(speak-6, that-8)
dep(that-8, is-9)
advmod(soon-12, as-11)
advmod(ceased-15, soon-12)
mark(ceased-15, as-13)
nsubj(ceased-15, she-14)
advcl(speak-6, ceased-15)
xcomp(ceased-15, choking-16)
dobj(choking-16, him-17)
nsubj(said-20, he-19)
ccomp(cried-71, said-20)
nsubjpass(_-26, You-23)
advmod(_-26, _-24)
auxpass(_-26, were-25)
dep(said-20, _-26)
prt(_-26, up-27)
det(tree-30, this-29)
prep_in(_-26, tree-30)
amod(night-32, last-31)
tmod(_-26, night-32)
det(wind-36, the-35)
nsubj(fluttering-38, wind-36)
aux(fluttering-38, was-37)
dep(said-20, fluttering-38)
conj_and(_-26, fluttering-38)
det(leaves-40, the-39)
dobj(fluttering-38, leaves-40)
det(moon-44, the-43)
nsubj(shining-46, moon-44)
aux(shining-46, was-45)
conj_and(_-26, shining-46)
conj_and(fluttering-38, shining-46)
prep_through(shining-46, them-48)
nsubj(carried-54, you-53)
conj_and(fluttering-38, carried-54)
conj_and(shining-46, carried-54)
dobj(carried-54, me-55)
det(shawl-58, this-57)
prep_in(carried-54, shawl-58)
nsubj(wings-65, that-61)
cop(wings-65, was-62)
det(wings-65, the-63)
amod(wings-65, red-64)
conj_and(said-20, wings-65)
ccomp(cried-71, wings-65)
det(angel-68, the-67)
prep_of(wings-65, angel-68)
root(ROOT-0, cried-71)
nsubj(cried-71, Agnes-72)
appos(Agnes-72, dancing-74)
prep_with(dancing-74, delight-76)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes) (, ,) (UH pet))
    (, ,)
    (NP (PRP I))
    (VP (VBP daresay)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)))))
    (. .)))

discourse(daresay-7, Yes-2)
dep(Yes-2, pet-4)
nsubj(daresay-7, I-6)
root(ROOT-0, daresay-7)
nsubj(was-9, it-8)
ccomp(daresay-7, was-9)

(ROOT
  (S (CC But)
    (S
      (VP (VBP are) (RB n't)
        (NP (PRP you))))
    (VP (VBZ sorry)
      (S
        (VP (TO to)
          (VP (VB lose)
            (NP (PRP$ your) (JJ big) (NN angel))))))
    (. ?) ('' '')))

cc(sorry-5, But-1)
cop(you-4, are-2)
neg(you-4, n't-3)
csubj(sorry-5, you-4)
root(ROOT-0, sorry-5)
aux(lose-7, to-6)
xcomp(sorry-5, lose-7)
poss(angel-10, your-8)
amod(angel-10, big-9)
dobj(lose-7, angel-10)

(ROOT
  (S (`` ``)
    (S
      (NP (DT The) (NN angel))
      (VP (VBD was)
        (ADVP (RB only))
        (PP (IN in)
          (NP (DT a) (NN dream)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP 're)
        (ADVP (RB here))
        (, ,)
        (NP (NNP Willie))))
    (. .)))

det(angel-3, The-2)
nsubj(was-4, angel-3)
root(ROOT-0, was-4)
advmod(was-4, only-5)
det(dream-8, a-7)
prep_in(was-4, dream-8)
nsubj(Willie-15, you-11)
cop(Willie-15, 're-12)
advmod(Willie-15, here-13)
conj_and(was-4, Willie-15)

(ROOT
  (S
    (S
      (ADVP (IN Besides))
      (, ,)
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB be)
          (NP
            (NP
              (NP (DT a) (JJ big) (NN angel))
              (NP (DT some) (NN day)))
            (, ,)
            (NP (NNP Willie))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (MD 'll)
        (VP
          (VP (VB have)
            (NP (NNS wings)))
          (, ,)
          (CC and)
          (VP (VB be)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB fly)
                    (S
                      (NP (PRP me))
                      (ADJP (IN about)))))))))))
    (. .) ('' '')))

advmod(angel-8, Besides-1)
nsubj(angel-8, you-3)
aux(angel-8, 'll-4)
cop(angel-8, be-5)
det(angel-8, a-6)
amod(angel-8, big-7)
root(ROOT-0, angel-8)
det(day-10, some-9)
dep(angel-8, day-10)
appos(angel-8, Willie-12)
advmod(have-18, then-15)
nsubj(have-18, you-16)
nsubj(able-23, you-16)
nsubj(fly-25, you-16)
aux(have-18, 'll-17)
conj_and(angel-8, have-18)
dobj(have-18, wings-19)
cop(able-23, be-22)
conj_and(angel-8, able-23)
conj_and(have-18, able-23)
aux(fly-25, to-24)
xcomp(able-23, fly-25)
nsubj(about-27, me-26)
xcomp(fly-25, about-27)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (VP (MD 'll)
      (VP
        (VP (VB have)
          (NP
            (NP (NNS wings))
            (PP (IN of)
              (NP (PRP$ your) (JJ own))))
          (ADVP (RB then)))
        (, ,)
        (CC and)
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB fly)
                  (PP (IN without)
                    (NP (PRP me))))))))))
    (. .) ('' '')))

nsubj(have-5, you-3)
nsubj(able-14, you-3)
nsubj(fly-16, you-3)
aux(have-5, 'll-4)
root(ROOT-0, have-5)
dobj(have-5, wings-6)
poss(own-9, your-8)
prep_of(wings-6, own-9)
advmod(have-5, then-10)
cop(able-14, be-13)
conj_and(have-5, able-14)
aux(fly-16, to-15)
xcomp(able-14, fly-16)
prep_without(fly-16, me-18)

(ROOT
  (S (`` ``)
    (S (CC But)
      (NP (PRP I))
      (ADVP (RB _))
      (VP (MD may)
        (ADVP (RB _))
        (VP (VB fold)
          (NP (PRP them))
          (PRT (RP up))
          (ADVP (RB sometimes)))))
    (: --)
    (SINV
      (VP (MD may) (RB n't))
      (NP (PRP I)))
    (. ?)))

cc(fold-7, But-2)
nsubj(fold-7, I-3)
advmod(fold-7, _-4)
aux(fold-7, may-5)
advmod(fold-7, _-6)
root(ROOT-0, fold-7)
dobj(fold-7, them-8)
prt(fold-7, up-9)
advmod(fold-7, sometimes-10)
parataxis(fold-7, may-12)
neg(may-12, n't-13)
nsubj(may-12, I-14)

(ROOT
  (S
    (SBAR (IN for)
      (S
        (NP (PRP it))
        (VP (MD would)
          (VP (VB be)
            (ADJP (RB much) (JJR nicer))
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN carried)
                    (PP (IN by)
                      (S
                        (VP (VBG _)
                          (NP (PRP$ your) (JJ _) (NNS wings) (: --))
                          (ADVP (RB sometimes)))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP know))
    (. .)))

mark(nicer-6, for-1)
nsubj(nicer-6, it-2)
nsubjpass(carried-9, it-2)
aux(nicer-6, would-3)
cop(nicer-6, be-4)
advmod(nicer-6, much-5)
advcl(know-19, nicer-6)
aux(carried-9, to-7)
auxpass(carried-9, be-8)
xcomp(nicer-6, carried-9)
agent(carried-9, _-11)
poss(wings-14, your-12)
amod(wings-14, _-13)
dobj(_-11, wings-14)
advmod(_-11, sometimes-16)
nsubj(know-19, you-18)
root(ROOT-0, know-19)

(ROOT
  (S
    (VP (VB Look) (, ,) (VB look) (, ,)
      (NP (NNP Willie)))
    (. !)))

root(ROOT-0, Look-1)
dep(Look-1, look-3)
dobj(Look-1, Willie-5)

(ROOT
  (S
    (VP (VB Look)
      (PP (IN at)
        (NP
          (NP
            (NP (DT the) (NN sunbeam))
            (PP (IN on)
              (NP
                (NP (DT the) (NN trunk))
                (PP (IN of)
                  (NP (DT the) (NN fir))))))
          (: --)
          (SBAR
            (WHNP (WRB how) (JJ red))
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (VP (VBN got))))))))
    (. .)))

root(ROOT-0, Look-1)
det(sunbeam-4, the-3)
prep_at(Look-1, sunbeam-4)
det(trunk-7, the-6)
prep_on(sunbeam-4, trunk-7)
det(fir-10, the-9)
prep_of(trunk-7, fir-10)
advmod(red-13, how-12)
advmod(got-16, red-13)
nsubjpass(got-16, it-14)
auxpass(got-16, 's-15)
rcmod(sunbeam-4, got-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do)
      (SBAR
        (S
          (VP (VBP wish)
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD could)
                  (VP (VB have)
                    (NP
                      (NP (DT a) (NN peep))
                      (PP (IN at)
                        (NP (DT the) (NN sun))))))))))))
    (. .)))

nsubj(do-2, I-1)
root(ROOT-0, do-2)
ccomp(do-2, wish-3)
nsubj(have-6, I-4)
aux(have-6, could-5)
ccomp(wish-3, have-6)
det(peep-8, a-7)
dobj(have-6, peep-8)
det(sun-11, the-10)
prep_at(peep-8, sun-11)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (MD can)
      (NP (PRP he))
      (VP (VB be)))
    (. ?)))

advmod(be-4, Where-1)
aux(be-4, can-2)
nsubj(be-4, he-3)
root(ROOT-0, be-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD should)
        (VP (VB see)
          (NP (PRP him))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD were)
                (S
                  (VP (TO to)
                    (VP (VB go)
                      (PP (IN into)
                        (NP (PRP$ his) (NN beam)))
                      (ADVP (RB there)))))))))))
    (: --)
    (SINV
      (VP (MD should) (RB n't))
      (NP (PRP I)))
    (. ?) ('' '')))

nsubj(see-3, I-1)
aux(see-3, should-2)
root(ROOT-0, see-3)
dobj(see-3, him-4)
mark(were-7, if-5)
nsubj(were-7, I-6)
nsubj(go-9, I-6)
advcl(see-3, were-7)
aux(go-9, to-8)
xcomp(were-7, go-9)
poss(beam-12, his-11)
prep_into(go-9, beam-12)
advmod(go-9, there-13)
parataxis(see-3, should-15)
neg(should-15, n't-16)
nsubj(should-15, I-17)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (VBZ 's)
        (VP (VBG shining)
          (PP (IN past)
            (NP
              (NP (DT the) (NN end))
              (PP (IN of)
                (NP (DT the) (NN cottage))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(shining-4, He-2)
aux(shining-4, 's-3)
ccomp(said-13, shining-4)
det(end-7, the-6)
prep_past(shining-4, end-7)
det(cottage-10, the-9)
prep_of(end-7, cottage-10)
root(ROOT-0, said-13)
nsubj(said-13, Willie-14)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Go)))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB see)
          (NP (PRP him)))))
    (. .) ('' '')))

root(ROOT-0, Go-2)
nsubj(see-7, you-5)
aux(see-7, 'll-6)
conj_and(Go-2, see-7)
dobj(see-7, him-8)

(ROOT
  (S (`` ``)
    (VP (VB Go)
      (FRAG
        (WHADVP (WRB where))))
    (. ?) ('' '')))

root(ROOT-0, Go-2)
dep(Go-2, where-3)

(ROOT
  (S
    (S
      (VP (VBN asked)))
    (VP (VBZ Agnes))
    (. .)))

csubj(Agnes-2, asked-1)
root(ROOT-0, Agnes-2)

(ROOT
  (S (`` ``)
    (VP (VB Into)
      (NP (DT the) (JJ red) (NN sunbeam))
      (PP (IN on)
        (NP (DT the) (NN fir-tree))))
    (. .) ('' '')))

root(ROOT-0, Into-2)
det(sunbeam-5, the-3)
amod(sunbeam-5, red-4)
dobj(Into-2, sunbeam-5)
det(fir-tree-8, the-7)
prep_on(Into-2, fir-tree-8)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP have) (RB n't)
      (VP (VBN got)
        (NP (PRP$ my) (NNS wings))
        (ADVP (RB yet))
        (, ,)
        (ADVP (RB Willie))))
    (. .) ('' '')))

nsubj(got-5, I-2)
aux(got-5, have-3)
neg(got-5, n't-4)
root(ROOT-0, got-5)
poss(wings-7, my-6)
dobj(got-5, wings-7)
advmod(got-5, yet-8)
advmod(got-5, Willie-10)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNS people))
          (ADVP (RB very) (RB often))
          (VP (VBP say)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP 're) (RB not)
                  (ADJP (JJ inclined)
                    (S
                      (VP (TO to)
                        (VP (VB try)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP they))
                              (VP (MD can)
                                (VP (VB do)
                                  (PP (IN with)
                                    (NP (PRP$ their) (NNS legs))))))))))))))))))
    (. .) ('' '')))

nsubj('s-3, That-2)
root(ROOT-0, 's-3)
dobj(say-8, what-4)
nsubj(say-8, people-5)
advmod(often-7, very-6)
advmod(say-8, often-7)
ccomp('s-3, say-8)
advmod(inclined-13, when-9)
nsubj(inclined-13, they-10)
nsubj(try-15, they-10)
cop(inclined-13, 're-11)
neg(inclined-13, not-12)
advcl(say-8, inclined-13)
aux(try-15, to-14)
xcomp(inclined-13, try-15)
dobj(do-19, what-16)
nsubj(do-19, they-17)
aux(do-19, can-18)
ccomp(try-15, do-19)
poss(legs-22, their-21)
prep_with(do-19, legs-22)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB go)
        (NP
          (NP (RB there))
          (, ,)
          (NP (NNP Willie)))))
    (. .) ('' '')))

cc(go-6, But-2)
nsubj(go-6, I-3)
aux(go-6, ca-4)
neg(go-6, n't-5)
root(ROOT-0, go-6)
dobj(go-6, there-7)
appos(there-7, Willie-9)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP have) (RB n't)
      (VP (VBN tried)))
    (. .) ('' '')))

nsubj(tried-5, You-2)
aux(tried-5, have-3)
neg(tried-5, n't-4)
root(ROOT-0, tried-5)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBP am)
      (NP (PRP I))
      (S
        (VP (TO to)
          (VP (VB try)))))
    (. ?) ('' '')))

advmod(am-3, How-2)
root(ROOT-0, am-3)
nsubj(am-3, I-4)
aux(try-6, to-5)
dep(am-3, try-6)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP 're) (RB not)
      (ADVP (RB even))
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB try))))))
    (. .)))

nsubj(trying-6, You-2)
nsubj(try-8, You-2)
aux(trying-6, 're-3)
neg(trying-6, not-4)
advmod(trying-6, even-5)
root(ROOT-0, trying-6)
aux(try-8, to-7)
xcomp(trying-6, try-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG standing)
        (S
          (VP
            (VP (VBG talking))
            (, ,)
            (CC and)
            (VP (VBG saying)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (MD ca) (RB n't)))))))))
    (. .) ('' '')))

nsubj(standing-3, You-1)
aux(standing-3, 're-2)
root(ROOT-0, standing-3)
ccomp(standing-3, talking-4)
ccomp(standing-3, saying-7)
conj_and(talking-4, saying-7)
nsubj(ca-9, you-8)
ccomp(saying-7, ca-9)
neg(ca-9, n't-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (RB nearly)
        (SBAR
          (S
            (NP (DT all) (NNPS Agnes))
            (VP (MD could)
              (VP (VB do)
                (S
                  (VP (TO to)
                    (VP (VB keep)
                      (PP (IN from)
                        (S
                          (VP (VBG crying)))))))))))))
    (. .)))

nsubj(nearly-3, It-1)
cop(nearly-3, was-2)
root(ROOT-0, nearly-3)
det(Agnes-5, all-4)
nsubj(do-7, Agnes-5)
nsubj(keep-9, Agnes-5)
aux(do-7, could-6)
ccomp(nearly-3, do-7)
aux(keep-9, to-8)
xcomp(do-7, keep-9)
prepc_from(keep-9, crying-11)

(ROOT
  (S (CC But)
    (NP (PRP she))
    (VP (VBD felt)
      (SBAR
        (S
          (NP (PRP she))
          (VP (MD must)
            (VP (VB do)
              (NP (NN something))
              (ADVP
                (ADVP (RBR more))
                (SBAR (IN lest)
                  (S
                    (NP (NNP Willie))
                    (VP (MD should)
                      (VP (VB be)
                        (VP (VBN vexed))))))))))))
    (. .)))

cc(felt-3, But-1)
nsubj(felt-3, she-2)
root(ROOT-0, felt-3)
nsubj(do-6, she-4)
aux(do-6, must-5)
ccomp(felt-3, do-6)
dobj(do-6, something-7)
advmod(do-6, more-8)
mark(vexed-13, lest-9)
nsubjpass(vexed-13, Willie-10)
aux(vexed-13, should-11)
auxpass(vexed-13, be-12)
advcl(more-8, vexed-13)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD seemed)
        (PP (CC but)
          (NP (CD one) (NN way)))
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (NNS nearer))
              (PP (TO to)
                (NP (DT the) (NN sunbeam))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD was)
        (S
          (VP (TO to)
            (VP
              (VP (VB go)
                (PRT (RP down))
                (NP (DT this) (NN tree)))
              (CC and)
              (VP (VB run)
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN foot))
                    (PP (IN of)
                      (NP (DT the) (JJ other)))))))))))
    (. .)))

expl(seemed-2, There-1)
root(ROOT-0, seemed-2)
prep(seemed-2, but-3)
num(way-5, one-4)
pobj(but-3, way-5)
aux(get-7, to-6)
xcomp(seemed-2, get-7)
dobj(get-7, nearer-8)
det(sunbeam-11, the-10)
prep_to(get-7, sunbeam-11)
nsubj(was-15, that-14)
nsubj(go-17, that-14)
nsubj(run-22, that-14)
conj_and(seemed-2, was-15)
aux(go-17, to-16)
xcomp(was-15, go-17)
prt(go-17, down-18)
det(tree-20, this-19)
dobj(go-17, tree-20)
xcomp(was-15, run-22)
conj_and(go-17, run-22)
det(foot-25, the-24)
prep_to(run-22, foot-25)
det(other-28, the-27)
prep_of(foot-25, other-28)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (NNP Willie))
        (VP (VBD had)
          (VP (VBN made)
            (NP
              (NP (DT a) (NN stair))
              (PP (IN up)
                (NP (PRP it))))
            (ADVP (RB also))))))
    (. ?)))

dep(made-5, What-1)
mark(made-5, if-2)
nsubj(made-5, Willie-3)
aux(made-5, had-4)
root(ROOT-0, made-5)
det(stair-7, a-6)
dobj(made-5, stair-7)
prep_up(stair-7, it-9)
advmod(made-5, also-10)

(ROOT
  (S (CC But)
    (SBAR (IN as)
      (S
        (NP (PRP she))
        (VP (VBD turned)
          (S
            (VP (TO to)
              (VP (VB see)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP she))
                    (VP (VBD was)
                      (S
                        (VP (TO to)
                          (VP (VB go)
                            (PRT (RP down))))))))))))))
    (, ,)
    (S
      (SBAR (IN for)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN been)
              (VP (VBN carried)
                (PP (IN up)
                  (ADJP (JJ blind))))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD caught)
        (NP
          (NP (NN sight))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ straight) (NN staircase))
              (PP (IN between)
                (NP (DT the) (CD two) (NNS boughs))))))))
    (, ,)
    (CC and)
    (PRN (, ,)
      (PP (IN with)
        (NP
          (NP (DT a) (NN shriek))
          (PP (IN of)
            (NP (NN delight)))))
      (, ,))
    (S
      (ADVP (RB up))
      (NP (PRP she))
      (VP (VBD ran)))
    (. .)))

mark(turned-4, as-2)
nsubj(turned-4, she-3)
nsubj(see-6, she-3)
advcl(caught-23, turned-4)
aux(see-6, to-5)
xcomp(turned-4, see-6)
advmod(was-9, how-7)
nsubj(was-9, she-8)
nsubj(go-11, she-8)
ccomp(see-6, was-9)
aux(go-11, to-10)
xcomp(was-9, go-11)
prt(go-11, down-12)
mark(carried-18, for-14)
nsubjpass(carried-18, she-15)
aux(carried-18, had-16)
auxpass(carried-18, been-17)
advcl(caught-23, carried-18)
prep_up(carried-18, blind-20)
nsubj(caught-23, she-22)
root(ROOT-0, caught-23)
dobj(caught-23, sight-24)
det(staircase-28, the-26)
amod(staircase-28, straight-27)
prep_of(sight-24, staircase-28)
det(boughs-32, the-30)
num(boughs-32, two-31)
prep_between(staircase-28, boughs-32)
dep(caught-23, with-36)
det(shriek-38, a-37)
pobj(with-36, shriek-38)
prep_of(shriek-38, delight-40)
advmod(ran-44, up-42)
nsubj(ran-44, she-43)
ccomp(caught-23, ran-44)
conj_and(caught-23, ran-44)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Gently))
    (, ,)
    (NP (NNP gently))
    (. !)))

root(ROOT-0, Gently-2)
dep(Gently-2, gently-4)

(ROOT
  (SINV
    (S
      (VP (VBP Do) (RB n't)
        (VP (VB bring)
          (NP (DT the) (NN tree))
          (PRT (RP down))
          (PP (IN with)
            (NP (PRP$ your) (JJ tremendous) (NN weight))))))
    (, ,) ('' '')
    (VP (VBD cried))
    (NP (NNP Willie))
    (, ,)
    (S
      (VP (VBG following)
        (NP (PRP$ her) (NN close))
        (ADVP (RB behind))))
    (. .)))

aux(bring-3, Do-1)
neg(bring-3, n't-2)
ccomp(cried-13, bring-3)
det(tree-5, the-4)
dobj(bring-3, tree-5)
prt(bring-3, down-6)
poss(weight-10, your-8)
amod(weight-10, tremendous-9)
prep_with(bring-3, weight-10)
root(ROOT-0, cried-13)
nsubj(cried-13, Willie-14)
vmod(cried-13, following-16)
poss(close-18, her-17)
dobj(following-16, close-18)
advmod(following-16, behind-19)

(ROOT
  (S
    (PP (IN At)
      (NP
        (NP (DT the) (NN end))
        (PP (IN of)
          (NP (DT the) (NNS stairs)))))
    (NP (PRP she))
    (VP
      (VP (VBD sprang)
        (PP (IN upon)
          (NP
            (NP (DT the) (NN bough))
            (PP (IN of)
              (NP (DT the) (NN fir))))))
      (, ,)
      (CC and)
      (VP
        (PP (IN in)
          (ADVP
            (NP (DT a) (NN moment))
            (RBR more)))
        (VBD was)
        (VP (VBG sitting)
          (PP (IN in)
            (NP
              (NP (DT the) (JJ full) (NN light))
              (PP (IN of)
                (NP (DT the) (NN sunset))))))))
    (. .)))

det(end-3, the-2)
prep_at(sprang-8, end-3)
det(stairs-6, the-5)
prep_of(end-3, stairs-6)
nsubj(sprang-8, she-7)
nsubj(sitting-22, she-7)
root(ROOT-0, sprang-8)
det(bough-11, the-10)
prep_upon(sprang-8, bough-11)
det(fir-14, the-13)
prep_of(bough-11, fir-14)
det(moment-19, a-18)
npadvmod(more-20, moment-19)
prepc_in(sitting-22, more-20)
aux(sitting-22, was-21)
conj_and(sprang-8, sitting-22)
det(light-26, the-24)
amod(light-26, full-25)
prep_in(sitting-22, light-26)
det(sunset-29, the-28)
prep_of(light-26, sunset-29)

(ROOT
  (S (`` ``)
    (NP (NNP O))
    (VP (VBZ Willie))
    (. !)))

nsubj(Willie-3, O-2)
root(ROOT-0, Willie-3)

(ROOT
  (INTJ (UH Willie) (. !)))

root(ROOT-0, Willie-1)

(ROOT
  (S
    (NP (DT this) (NN _))
    (VP (VBZ is)
      (VP (VBG _)
        (NP (JJ grand))))
    (. !)))

det(_-2, this-1)
nsubj(_-4, _-2)
aux(_-4, is-3)
root(ROOT-0, _-4)
dobj(_-4, grand-5)

(ROOT
  (SBARQ
    (WHNP (WRB How) (JJ good))
    (, ,)
    (WHADVP (WRB how))
    (SQ
      (ADVP (RB kind)
        (PP (IN of)
          (NP (PRP you))))
      (VP (VBZ !)))))

advmod(good-2, How-1)
nsubj(!-8, good-2)
advmod(!-8, how-4)
advmod(!-8, kind-5)
prep_of(kind-5, you-7)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB _))
    (VP (VBP have)
      (ADVP (RB _))
      (VP (VBN made)
        (NP
          (NP (DT a) (NN bird))
          (PP (IN of)
            (NP (PRP me))))))
    (. !)))

nsubj(made-5, You-1)
advmod(made-5, _-2)
aux(made-5, have-3)
advmod(made-5, _-4)
root(ROOT-0, made-5)
det(bird-7, a-6)
dobj(made-5, bird-7)
prep_of(bird-7, me-9)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD will)
      (NP (NN papa)
        (CC and)
        (NN mamma))
      (VP (VB say)))
    (. ?)))

dobj(say-6, What-1)
aux(say-6, will-2)
nsubj(say-6, papa-3)
conj_and(papa-3, mamma-5)
nsubj(say-6, mamma-5)
root(ROOT-0, say-6)

(ROOT
  (SQ (MD Wo) (RB n't)
    (NP (PRP they))
    (VP (VB be)
      (ADJP (JJ delighted)))
    (. ?)))

aux(delighted-5, Wo-1)
neg(delighted-5, n't-2)
nsubj(delighted-5, they-3)
cop(delighted-5, be-4)
root(ROOT-0, delighted-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (VP (VB run)
        (CC and)
        (VB fetch)
        (NP (NNP Mona))))
    (. .) ('' '')))

nsubj(run-3, I-1)
nsubj(fetch-5, I-1)
aux(run-3, must-2)
root(ROOT-0, run-3)
conj_and(run-3, fetch-5)
dobj(run-3, Mona-6)

(ROOT
  (S (CC So)
    (S
      (VP (VBG saying)
        (S
          (NP (PRP she))
          (VP (VBN hurried)
            (PP
              (PP (IN across)
                (ADVP (RB again)))
              (, ,)
              (CC and)
              (PP (IN down)
                (NP (DT the) (NN stair))))))))
    (, ,)
    (CC and)
    (ADVP (RB away))
    (S
      (VP (TO to)
        (VP (VB look)
          (PP (IN for)
            (NP (NNP Mona) (NNP Shepherd)))
          (, ,)
          (S
            (VP (VBG shouting)
              (PP (IN with)
                (NP (NN delight)))
              (SBAR (IN as)
                (S
                  (NP (PRP she))
                  (VP (VBD ran)))))))))
    (. .)))

root(ROOT-0, saying-2)
nsubj(hurried-4, she-3)
dep(saying-2, hurried-4)
prep(hurried-4, across-5)
pcomp(across-5, again-6)
prep(hurried-4, down-9)
conj_and(across-5, down-9)
det(stair-11, the-10)
pobj(down-9, stair-11)
advmod(look-16, away-14)
aux(look-16, to-15)
conj_and(saying-2, look-16)
nn(Shepherd-19, Mona-18)
prep_for(look-16, Shepherd-19)
xcomp(look-16, shouting-21)
prep_with(shouting-21, delight-23)
mark(ran-26, as-24)
nsubj(ran-26, she-25)
advcl(shouting-21, ran-26)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ few) (NNS minutes)))
    (NP (PRP$ her) (NN cries))
    (VP (VBD had)
      (VP (VBN gathered)
        (NP (DT the) (JJ whole) (NN house))
        (PP (TO to)
          (NP
            (NP
              (NP (DT the) (NN bottom))
              (PP (IN of)
                (NP (DT the) (NN garden))))
            (, ,)
            (CONJP (RB as) (RB well) (IN as))
            (NP
              (NP (NNP Mr) (NNP Shepherd))
              (CC and)
              (NP (NNP Mona)
                (CC and)
                (NNP Mrs) (NNP Hunter)))))))
    (. .)))

det(minutes-4, a-2)
amod(minutes-4, few-3)
prep_in(gathered-8, minutes-4)
poss(cries-6, her-5)
nsubj(gathered-8, cries-6)
aux(gathered-8, had-7)
root(ROOT-0, gathered-8)
det(house-11, the-9)
amod(house-11, whole-10)
dobj(gathered-8, house-11)
det(bottom-14, the-13)
prep_to(gathered-8, bottom-14)
det(garden-17, the-16)
prep_of(bottom-14, garden-17)
nn(Shepherd-23, Mr-22)
prep_to(gathered-8, Shepherd-23)
conj_and(bottom-14, Shepherd-23)
nn(Hunter-28, Mona-25)
conj_and(Mona-25, Mrs-27)
nn(Hunter-28, Mrs-27)
conj_and(bottom-14, Hunter-28)
conj_and(Shepherd-23, Hunter-28)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Mr) (NNP Macmichael))
        (CC and)
        (NP
          (NP (DT all))
          (PP (IN of)
            (NP (PRP them)))))
      (VP (VBD went)
        (PRT (RP up))
        (PP (IN into)
          (NP (DT the) (NN tree)))))
    (, ,)
    (S
      (NP (NNP Mr) (NNP Shepherd))
      (ADJP (JJ last)))
    (CC and)
    (S
      (SBAR (IN with)
        (S
          (NP (DT some))
          (VP (VBZ misgivings)
            (PRN (: ;)
              (PP (IN for))
              (, ,)
              (S
                (VP (VBG having)
                  (NP (DT no) (JJ mechanical) (NN faculty)))))
            (NP (PRP himself)))))
      (, ,)
      (NP (PRP he))
      (VP
        (VP (MD could) (RB not)
          (ADVP (RB rightly))
          (VP (VB value)
            (NP (NNP Willie) (POS 's))))
        (, ,)
        (CC and)
        (VP (VBD feared)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (MD might) (RB not)
                (VP (VB have)
                  (VP (VBN made)
                    (S
                      (NP (DT the) (NN stair))
                      (ADJP (JJ safe)))))))))))
    (. .)))

nn(Macmichael-2, Mr-1)
nsubj(went-7, Macmichael-2)
nsubj(last-15, Macmichael-2)
conj_and(Macmichael-2, all-4)
nsubj(went-7, all-4)
prep_of(all-4, them-6)
root(ROOT-0, went-7)
prt(went-7, up-8)
det(tree-11, the-10)
prep_into(went-7, tree-11)
nn(Shepherd-14, Mr-13)
dep(last-15, Shepherd-14)
conj_and(went-7, last-15)
mark(misgivings-19, with-17)
nsubj(misgivings-19, some-18)
advcl(value-33, misgivings-19)
prep(having-23, for-21)
parataxis(misgivings-19, having-23)
neg(faculty-26, no-24)
amod(faculty-26, mechanical-25)
dobj(having-23, faculty-26)
dobj(misgivings-19, himself-27)
nsubj(value-33, he-29)
nsubj(feared-38, he-29)
aux(value-33, could-30)
neg(value-33, not-31)
advmod(value-33, rightly-32)
conj_and(went-7, value-33)
dobj(value-33, Willie-34)
possessive(Willie-34, 's-35)
conj_and(went-7, feared-38)
conj_and(value-33, feared-38)
mark(made-44, that-39)
nsubj(made-44, he-40)
aux(made-44, might-41)
neg(made-44, not-42)
aux(made-44, have-43)
ccomp(feared-38, made-44)
det(stair-46, the-45)
nsubj(safe-47, stair-46)
xcomp(made-44, safe-47)

(ROOT
  (S (CC But)
    (NP (NNP Mr) (NNP Macmichael))
    (ADVP (RB soon))
    (VP (VBD satisfied)
      (NP (PRP him))
      (, ,)
      (S
        (VP (VBG showing)
          (NP (PRP him))
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP
                (ADJP (JJ strong)
                  (CC and)
                  (JJ firm))
                (NNP Willie))
              (VP (VBD had)
                (VP (VBN made)
                  (NP
                    (NP (DT every) (NN part))
                    (PP (IN of)
                      (NP (PRP it)))))))))))
    (. .)))

cc(satisfied-5, But-1)
nn(Macmichael-3, Mr-2)
nsubj(satisfied-5, Macmichael-3)
advmod(satisfied-5, soon-4)
root(ROOT-0, satisfied-5)
dobj(satisfied-5, him-6)
vmod(satisfied-5, showing-8)
dobj(showing-8, him-9)
advmod(made-16, how-10)
amod(Willie-14, strong-11)
conj_and(strong-11, firm-13)
amod(Willie-14, firm-13)
nsubj(made-16, Willie-14)
aux(made-16, had-15)
dep(showing-8, made-16)
det(part-18, every-17)
dobj(made-16, part-18)
prep_of(part-18, it-20)

(ROOT
  (S
    (NP (DT The) (JJ next) (NN evening))
    (, ,)
    (NP (NNP Willie))
    (VP (VBD went)
      (PP (IN on) (IN with)
        (NP
          (NP (PRP$ his) (NN plan))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD was)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP
                        (NP (DT a) (NN way))
                        (PP (IN for)
                          (NP (NNP Bird) (NNPS Agnes))))
                      (PP (IN from)
                        (NP (CD one) (NN tree)))
                      (PP (TO to)
                        (NP
                          (NP (DT another))
                          (PP (IN over)
                            (NP
                              (NP (DT the) (NN whole))
                              (PP (IN of)
                                (NP (DT the) (NN clump))))))))))))))))
    (. .)))

det(evening-3, The-1)
amod(evening-3, next-2)
tmod(went-6, evening-3)
nsubj(went-6, Willie-5)
root(ROOT-0, went-6)
dep(went-6, on-7)
poss(plan-10, his-9)
prep_with(went-6, plan-10)
nsubj(was-13, plan-10)
nsubj(make-15, plan-10)
rcmod(plan-10, was-13)
aux(make-15, to-14)
xcomp(was-13, make-15)
det(way-17, a-16)
dobj(make-15, way-17)
nn(Agnes-20, Bird-19)
prep_for(way-17, Agnes-20)
num(tree-23, one-22)
prep_from(make-15, tree-23)
prep_to(make-15, another-25)
det(whole-28, the-27)
prep_over(another-25, whole-28)
det(clump-31, the-30)
prep_of(whole-28, clump-31)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD took)
        (S
          (NP (PRP him))
          (NP (JJ many) (NNS evenings)))
        (, ,)
        (ADVP (RB however))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB complete)
              (NP (PRP it)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT a) (NN good))
      (ADJP (RB many) (RBR more)
        (SBAR
          (S
            (VP (TO to)
              (VP (VB construct)
                (PP (IN in)
                  (NP (DT the) (NN elm) (NN tree)))
                (NP
                  (NP (DT a) (JJ thin) (JJ wooden) (NN house) (NN cunningly))
                  (VP (VBN perched)
                    (PP (IN upon)
                      (NP
                        (NP (JJ several))
                        (PP (IN of)
                          (NP (DT the) (JJS strongest) (NNS boughs)
                            (CC and)
                            (NNS branches)))))))))))))
    (. .)))

nsubj(took-2, It-1)
nsubj(complete-10, It-1)
root(ROOT-0, took-2)
nsubj(evenings-5, him-3)
amod(evenings-5, many-4)
xcomp(took-2, evenings-5)
advmod(took-2, however-7)
aux(complete-10, to-9)
xcomp(took-2, complete-10)
dobj(complete-10, it-11)
det(good-15, a-14)
dep(more-17, good-15)
advmod(more-17, many-16)
conj_and(took-2, more-17)
aux(construct-19, to-18)
ccomp(more-17, construct-19)
det(tree-23, the-21)
nn(tree-23, elm-22)
prep_in(construct-19, tree-23)
det(cunningly-28, a-24)
amod(cunningly-28, thin-25)
amod(cunningly-28, wooden-26)
nn(cunningly-28, house-27)
dobj(construct-19, cunningly-28)
vmod(cunningly-28, perched-29)
prep_upon(perched-29, several-31)
det(boughs-35, the-33)
amod(boughs-35, strongest-34)
prep_of(several-31, boughs-35)
prep_of(several-31, branches-37)
conj_and(boughs-35, branches-37)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD called)
      (S
        (NP (PRP it))
        (NP
          (NP (NNP Bird) (NNP Agnes) (POS 's))
          (NNP Nest))))
    (. .)))

nsubj(called-2, He-1)
root(ROOT-0, called-2)
nsubj(Nest-7, it-3)
nn(Agnes-5, Bird-4)
poss(Nest-7, Agnes-5)
xcomp(called-2, Nest-7)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD had)
        (NP
          (NP
            (NP (NNS doors))
            (CC and)
            (NP (NNS windows)))
          (, ,)
          (CC and)
          (NP
            (NP (JJ several) (NNS stories))
            (PP (IN in)
              (NP (PRP it)))))))
    (, ,)
    (NP (RB only) (DT the) (JJ upper) (NNS stories))
    (VP (VBD did) (RB not)
      (VP (VB rest)
        (PP
          (PP (IN on)
            (NP (DT the) (JJR lower)))
          (, ,)
          (CC but)
          (PP (IN upon)
            (NP
              (NP (JJR higher) (NNS branches))
              (PP (IN of)
                (NP (DT the) (NN tree))))))))
    (. .)))

nsubj(had-2, It-1)
ccomp(rest-19, had-2)
dobj(had-2, doors-3)
dobj(had-2, windows-5)
conj_and(doors-3, windows-5)
amod(stories-9, several-8)
dobj(had-2, stories-9)
conj_and(doors-3, stories-9)
prep_in(stories-9, it-11)
advmod(stories-16, only-13)
det(stories-16, the-14)
amod(stories-16, upper-15)
nsubj(rest-19, stories-16)
nsubj(rest-19', stories-16)
aux(rest-19, did-17)
neg(rest-19, not-18)
root(ROOT-0, rest-19)
conj_but(rest-19, rest-19')
det(lower-22, the-21)
prep_on(rest-19, lower-22)
amod(branches-27, higher-26)
prep_upon(rest-19', branches-27)
det(tree-30, the-29)
prep_of(branches-27, tree-30)

(ROOT
  (S
    (PP (TO To)
      (NP
        (NP (CD two))
        (PP (IN of)
          (NP (DT these)))))
    (NP (PRP he))
    (VP (VBD made)
      (NP
        (NP (NNS stairs))
        (, ,)
        (CC and)
        (NP (DT a) (NN rope-ladder)))
      (PP (TO to)
        (NP (DT a) (JJ third))))
    (. .)))

prep_to(made-6, two-2)
prep_of(two-2, these-4)
nsubj(made-6, he-5)
root(ROOT-0, made-6)
dobj(made-6, stairs-7)
det(rope-ladder-11, a-10)
dobj(made-6, rope-ladder-11)
conj_and(stairs-7, rope-ladder-11)
det(third-14, a-13)
prep_to(made-6, third-14)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN house))
        (VP (VBD was)
          (VP (VBN finished)))))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD put)
        (NP (DT a) (JJ little) (NN table))
        (PP (IN in)
          (NP (DT the) (JJS largest) (NN room))))
      (, ,)
      (CC and)
      (VP
        (S
          (VP (VBG having)
            (VP (VBN got)
              (NP (DT some) (JJ light) (NNS chairs))
              (PP (IN from)
                (NP (DT the) (NN house))))))
        (, ,)
        (VP (VBD asked)
          (NP
            (NP (PRP$ his) (NN father))
            (CC and)
            (NP (NN mother)
              (CC and)
              (NN grandmother)))
          (PP (TO to)
            (NP
              (NP (NN tea))
              (PP (IN in)
                (NP
                  (NP (NNP Bird) (NNP Agnes) (POS 's))
                  (NN Nest))))))))
    (. .)))

advmod(finished-5, When-1)
det(house-3, the-2)
nsubjpass(finished-5, house-3)
auxpass(finished-5, was-4)
advcl(put-8, finished-5)
nsubj(put-8, he-7)
nsubj(asked-27, he-7)
root(ROOT-0, put-8)
det(table-11, a-9)
amod(table-11, little-10)
dobj(put-8, table-11)
det(room-15, the-13)
amod(room-15, largest-14)
prep_in(put-8, room-15)
aux(got-19, having-18)
xcomp(asked-27, got-19)
det(chairs-22, some-20)
amod(chairs-22, light-21)
dobj(got-19, chairs-22)
det(house-25, the-24)
prep_from(got-19, house-25)
conj_and(put-8, asked-27)
poss(father-29, his-28)
nsubj(got-19, father-29)
dobj(asked-27, father-29)
nsubj(got-19, mother-31)
dobj(asked-27, mother-31)
conj_and(father-29, mother-31)
conj_and(father-29, grandmother-33)
conj_and(mother-31, grandmother-33)
prep_to(asked-27, tea-35)
nn(Agnes-38, Bird-37)
poss(Nest-40, Agnes-38)
prep_in(tea-35, Nest-40)

(ROOT
  (S (CC But)
    (NP (NN grannie))
    (VP (VBD declined)
      (S
        (VP (TO to)
          (VP (VB go)
            (PRT (RP up))
            (NP (DT the) (NN tree))))))
    (. .)))

cc(declined-3, But-1)
nsubj(declined-3, grannie-2)
nsubj(go-5, grannie-2)
root(ROOT-0, declined-3)
aux(go-5, to-4)
xcomp(declined-3, go-5)
prt(go-5, up-6)
det(tree-8, the-7)
dobj(go-5, tree-8)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD said)
      (SBAR
        (S
          (S
            (VP (VBG _)
              (NP (PRP$ her) (JJ _) (NN climbing) (NNS days))))
          (VP (VBD were)
            (ADVP (RB over) (RB long) (RB ago))))))
    (. .)))

nsubj(said-2, She-1)
root(ROOT-0, said-2)
csubj(were-8, _-3)
poss(days-7, her-4)
amod(days-7, _-5)
nn(days-7, climbing-6)
tmod(_-3, days-7)
ccomp(said-2, were-8)
advmod(ago-11, over-9)
advmod(ago-11, long-10)
advmod(were-8, ago-11)

(ROOT
  (NP (NNP CHAPTER) (NNP XXII) (. .)))

nn(XXII-2, CHAPTER-1)
root(ROOT-0, XXII-2)

(ROOT
  (S
    (NP (NNP WILLIE) (POS 'S))
    (VP (VBZ PLANS)
      (NP (NNP BUD)))
    (. .)))

nsubj(PLANS-3, WILLIE-1)
possessive(WILLIE-1, 'S-2)
root(ROOT-0, PLANS-3)
dobj(PLANS-3, BUD-4)

(ROOT
  (S (CC Either)
    (S
      (NP (PRP they))
      (VP
        (VP (VBD were)
          (ADVP (RB over)))
        (, ,)
        (CC or)
        (VP (VBD were)
          (VP
            (ADVP (RB only))
            (VBG beginning)))))
    (: ;)
    (S
      (X (IN for))
      (, ,)
      (NP
        (NP (DT the) (JJ next) (NN winter))
        (, ,)
        (SBAR (IN while)
          (S
            (NP (NNP Willie))
            (VP (VBD was)
              (PP (IN at)
                (NP (NN college))))))
        (, ,))
      (VP (VBP grannie)
        (SBAR
          (S
            (VP (VBD was)
              (VP (VBN taken)
                (S
                  (ADJP (RB ill)))))))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN although)
        (S
          (NP (PRP they))
          (VP (VBD sent)
            (SBAR (IN for)
              (S
                (NP (PRP him))
                (VP (TO to)
                  (VP (VB come)
                    (ADVP (NN home) (IN at))
                    (ADVP (RB once)))))))))
      (, ,)
      (NP (PRP she))
      (VP (VBD had)
        (VP (VBN climbed)
          (NP
            (NP (JJR higher) (NN ere))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD arrived))))))))
    (. .)))

preconj(were-3, Either-1)
nsubj(were-3, they-2)
nsubj(beginning-9, they-2)
root(ROOT-0, were-3)
advmod(were-3, over-4)
aux(beginning-9, were-7)
advmod(beginning-9, only-8)
conj_or(were-3, beginning-9)
dep(grannie-23, for-11)
det(winter-15, the-13)
amod(winter-15, next-14)
nsubj(grannie-23, winter-15)
mark(was-19, while-17)
nsubj(was-19, Willie-18)
dep(winter-15, was-19)
prep_at(was-19, college-21)
conj_or(were-3, grannie-23)
auxpass(taken-25, was-24)
ccomp(grannie-23, taken-25)
dep(taken-25, ill-26)
mark(sent-31, although-29)
nsubj(sent-31, they-30)
advcl(climbed-42, sent-31)
mark(come-35, for-32)
nsubj(come-35, him-33)
aux(come-35, to-34)
advcl(sent-31, come-35)
xcomp(sent-31, come-35)
dep(at-37, home-36)
advmod(come-35, at-37)
advmod(come-35, once-38)
nsubj(climbed-42, she-40)
aux(climbed-42, had-41)
conj_and(were-3, climbed-42)
amod(ere-44, higher-43)
dobj(climbed-42, ere-44)
nsubj(arrived-46, he-45)
rcmod(ere-44, arrived-46)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBD opened)
          (SBAR
            (S
              (NP (PRP her))
              (VP (MD will)))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD found)
      (SBAR (IN that)
        (S
          (NP (PRP she))
          (VP (VBD had)
            (VP (VBN left)
              (NP (NN everything))
              (PP (TO to)
                (NP (NNP Willie))))))))
    (. .)))

advmod(opened-3, When-1)
nsubj(opened-3, they-2)
advcl(found-8, opened-3)
nsubj(will-5, her-4)
ccomp(opened-3, will-5)
nsubj(found-8, they-7)
root(ROOT-0, found-8)
mark(left-12, that-9)
nsubj(left-12, she-10)
aux(left-12, had-11)
ccomp(found-8, left-12)
dobj(left-12, everything-13)
prep_to(left-12, Willie-15)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP
            (QP (JJR more) (IN than) (DT a) (CD hundred))
            (NNS pounds))
          (PP (IN in)
            (NP (JJ ready) (NN money))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NN property))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD brought)
              (PP (IN in)
                (NP
                  (NP (RB about) (JJ fifty) (NNS pounds))
                  (ADJP (JJ a-year))))
              (: --)
              (PP (RB not) (RB much)
                (PP (TO to)
                  (NP
                    (NP (CD one))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (MD would)
                          (VP (VB have)
                            (VP
                              (VP (VBN spent)
                                (NP (NN everything))
                                (PP (IN on)
                                  (NP (PRP himself))))
                              (, ,)
                              (CC but)
                              (VP
                                (NP
                                  (NP (DT a) (JJ good) (NN deal))
                                  (PP (TO to)
                                    (NP (CD one)))
                                  (SBAR
                                    (WHNP (WP who))
                                    (S
                                      (VP (VBD loved)
                                        (NP (JJ other) (NNS people))))))))))))))
                (, ,)
                (CC and)
                (PP (IN for)
                  (NP (PRP$ their) (NNS sakes))))))))
      (VP (MD would)
        (VP (VB contrive)
          (SBAR (IN that)
            (S
              (NP (DT a) (JJ little))
              (VP (MD should)
                (VP (VB go)
                  (NP (DT a) (JJ long) (NN way)))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
mwe(than-4, more-3)
quantmod(hundred-6, than-4)
quantmod(hundred-6, a-5)
num(pounds-7, hundred-6)
nsubj(was-2, pounds-7)
amod(money-10, ready-9)
prep_in(pounds-7, money-10)
nsubj(brought-15, property-13)
nsubj(brought-15', property-13)
nsubj(contrive-50, property-13)
rcmod(property-13, brought-15)
rcmod(property-13, brought-15')
conj_and(brought-15, brought-15')
advmod(pounds-19, about-17)
amod(pounds-19, fifty-18)
prep_in(brought-15, pounds-19)
amod(pounds-19, a-year-20)
neg(brought-15, not-22)
advmod(brought-15, much-23)
prep_to(brought-15, one-25)
nsubj(spent-29, one-25)
aux(spent-29, would-27)
aux(spent-29, have-28)
rcmod(one-25, spent-29)
dobj(spent-29, everything-30)
prep_on(spent-29, himself-32)
det(deal-37, a-35)
amod(deal-37, good-36)
rcmod(one-25, deal-37)
conj_but(spent-29, deal-37)
nsubj(loved-41, deal-37)
prep_to(deal-37, one-39)
rcmod(deal-37, loved-41)
amod(people-43, other-42)
dobj(loved-41, people-43)
poss(sakes-48, their-47)
prep_for(brought-15', sakes-48)
aux(contrive-50, would-49)
conj_and(was-2, contrive-50)
mark(go-55, that-51)
det(little-53, a-52)
nsubj(go-55, little-53)
aux(go-55, should-54)
ccomp(contrive-50, go-55)
det(way-58, a-56)
amod(way-58, long-57)
dobj(go-55, way-58)

(ROOT
  (S (IN So)
    (NP (NNP Willie))
    (VP (VBD was)
      (ADVP (RB henceforth))
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB relieve)
              (NP (PRP$ his) (NN father))
              (PP (IN by)
                (S
                  (VP (VBG paying)
                    (NP (PDT all) (PRP$ his) (JJ own) (NN college) (NNS expenses))))))))))
    (. .)))

dep(able-5, So-1)
nsubj(able-5, Willie-2)
nsubj(relieve-7, Willie-2)
cop(able-5, was-3)
advmod(able-5, henceforth-4)
root(ROOT-0, able-5)
aux(relieve-7, to-6)
xcomp(able-5, relieve-7)
poss(father-9, his-8)
dobj(relieve-7, father-9)
prepc_by(relieve-7, paying-11)
predet(expenses-16, all-12)
poss(expenses-16, his-13)
amod(expenses-16, own-14)
nn(expenses-16, college-15)
dobj(paying-11, expenses-16)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD laid)
      (PP (IN by)
        (NP
          (QP (DT a) (JJ little)))
        (ADVP (RB too)))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP$ his) (NN father))
          (VP (VBD wished)
            (NP (PRP him))
            (, ,)
            (SBAR (IN until)
              (S
                (NP (PRP he))
                (VP (MD should)
                  (VP (VB see)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (JJS best))
                        (VP (TO to)
                          (VP (VB use)
                            (NP (PRP it))))))))))))))
    (. .)))

nsubj(laid-2, He-1)
root(ROOT-0, laid-2)
quantmod(little-5, a-4)
prep_by(laid-2, little-5)
advmod(laid-2, too-6)
mark(wished-11, as-8)
poss(father-10, his-9)
nsubj(wished-11, father-10)
advcl(laid-2, wished-11)
dobj(wished-11, him-12)
mark(see-17, until-14)
nsubj(see-17, he-15)
aux(see-17, should-16)
advcl(wished-11, see-17)
advmod(use-21, how-18)
nsubj(use-21, best-19)
aux(use-21, to-20)
ccomp(see-17, use-21)
xcomp(see-17, use-21)
dobj(use-21, it-22)

(ROOT
  (S
    (NP (PRP$ His) (NN father))
    (ADVP (RB always))
    (VP (VBD talked)
      (NP
        (NP
          (QP (RB about) (CD _)))
        (VP (VBG using)
          (S
            (VP (VBG _)
              (ADVP (RB never))
              (NP
                (QP (RB about) (CD _)))
              (S
                (VP (VBG spending)
                  (NP (JJ _) (NN money)))))))))
    (. .)))

poss(father-2, His-1)
nsubj(talked-4, father-2)
advmod(talked-4, always-3)
root(ROOT-0, talked-4)
quantmod(_-6, about-5)
dobj(talked-4, _-6)
vmod(_-6, using-7)
vmod(using-7, _-8)
neg(_-8, never-9)
quantmod(_-11, about-10)
dobj(_-8, _-11)
vmod(_-8, spending-12)
amod(money-14, _-13)
dobj(spending-12, money-14)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP he))
          (VP (VBD came)
            (NP (NN home))
            (NP (DT the) (JJ next) (NN summer)))))
      (, ,)
      (NP (PRP he))
      (VP (VBD moved)
        (ADVP (RB again))
        (PP (IN into)
          (NP (PRP$ his) (JJ own) (JJ old) (NN room)))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (NNP Agnes))
            (VP (VBD slept)
              (PP (IN in)
                (NP (DT a) (JJ little) (NN closet)))
              (PP (IN off)
                (NP (PRP$ her) (NN mother) (NNS 's))))))))
    (, ,)
    (CC and)
    (S
      (NP (RB much))
      (VP (VBD preferred)
        (NP (DT that))
        (PP (TO to)
          (NP (DT a)
            (ADJP (JJR larger)
              (CC and)
              (JJR more))
            (JJ solitary) (NN room)))
        (PP (IN for)
          (NP (PRP herself)))))
    (. .)))

advmod(came-3, When-1)
nsubj(came-3, he-2)
advcl(moved-10, came-3)
dobj(came-3, home-4)
det(summer-7, the-5)
amod(summer-7, next-6)
tmod(came-3, summer-7)
nsubj(moved-10, he-9)
root(ROOT-0, moved-10)
advmod(moved-10, again-11)
poss(room-16, his-13)
amod(room-16, own-14)
amod(room-16, old-15)
prep_into(moved-10, room-16)
mark(slept-20, for-18)
nsubj(slept-20, Agnes-19)
advcl(moved-10, slept-20)
det(closet-24, a-22)
amod(closet-24, little-23)
prep_in(slept-20, closet-24)
poss('s-28, her-26)
nn('s-28, mother-27)
prep_off(slept-20, 's-28)
nsubj(preferred-32, much-31)
conj_and(moved-10, preferred-32)
dobj(preferred-32, that-33)
det(room-40, a-35)
amod(room-40, larger-36)
conj_and(larger-36, more-38)
amod(room-40, more-38)
amod(room-40, solitary-39)
prep_to(preferred-32, room-40)
prep_for(preferred-32, herself-42)

(ROOT
  (S
    (NP (PRP$ His) (NN mother))
    (ADVP (RB especially))
    (VP (VBD was)
      (ADJP (JJ glad)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (PRP him))
              (PP (IN under)
                (NP
                  (NP (DT the) (JJ same) (NN roof))
                  (ADVP (RB once) (RBR more)
                    (PP (IN at)
                      (NP (NN night)))))))))))
    (. .)))

poss(mother-2, His-1)
nsubj(glad-5, mother-2)
nsubj(have-7, mother-2)
advmod(glad-5, especially-3)
cop(glad-5, was-4)
root(ROOT-0, glad-5)
aux(have-7, to-6)
xcomp(glad-5, have-7)
dobj(have-7, him-8)
det(roof-12, the-10)
amod(roof-12, same-11)
prep_under(have-7, roof-12)
advmod(more-14, once-13)
advmod(roof-12, more-14)
prep_at(more-14, night-16)

(ROOT
  (S (CC But)
    (NP (NNP Willie))
    (VP (VBD felt)
      (SBAR (IN that)
        (S
          (NP (NN something))
          (VP (MD ought)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN done)
                    (PP (IN with)
                      (NP
                        (NP (DT the) (NN room))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD had)
                              (VP (VBN left)
                                (PP (IN in)
                                  (NP (DT the) (NNS ruins)))))))))))))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (NN nothing))
                (VP (MD ought)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN allowed)
                          (S
                            (VP (TO to)
                              (VP (VB spoil)
                                (PP (IN by)
                                  (NP (NNS uselessness)))))))))))))))))
    (. .)))

cc(felt-3, But-1)
nsubj(felt-3, Willie-2)
root(ROOT-0, felt-3)
mark(ought-6, that-4)
nsubj(ought-6, something-5)
nsubjpass(done-9, something-5)
ccomp(felt-3, ought-6)
aux(done-9, to-7)
auxpass(done-9, be-8)
xcomp(ought-6, done-9)
det(room-12, the-11)
prep_with(done-9, room-12)
nsubj(left-15, he-13)
aux(left-15, had-14)
rcmod(room-12, left-15)
det(ruins-18, the-17)
prep_in(left-15, ruins-18)
mark(ought-22, for-20)
nsubj(ought-22, nothing-21)
nsubjpass(allowed-25, nothing-21)
nsubj(spoil-27, nothing-21)
advcl(ought-6, ought-22)
aux(allowed-25, to-23)
auxpass(allowed-25, be-24)
xcomp(ought-22, allowed-25)
aux(spoil-27, to-26)
xcomp(allowed-25, spoil-27)
prep_by(spoil-27, uselessness-29)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD did) (RB not)
      (PRN (, ,)
        (ADVP (RB however))
        (, ,))
      (VP (VB see)
        (PP (IN for)
          (NP
            (NP (DT some) (NN time))
            (SBAR
              (WHPP (TO to)
                (WHNP (WP what)))
              (S
                (NP (PRP he))
                (VP (MD could)
                  (VP (VB turn)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(see-7, He-1)
aux(see-7, did-2)
neg(see-7, not-3)
dep(see-7, however-5)
root(ROOT-0, see-7)
det(time-10, some-9)
prep_for(see-7, time-10)
prep_to(turn-15, time-10)
nsubj(turn-15, he-13)
aux(turn-15, could-14)
rcmod(time-10, turn-15)
dobj(turn-15, it-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD need)
      (ADVP (RB hardly))
      (VP (VB say)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD kept)
              (PRT (RP up))
              (NP (PDT all) (PRP$ his) (JJ old) (NNS friendships)))))))
    (. .)))

nsubj(say-4, I-1)
aux(say-4, need-2)
advmod(say-4, hardly-3)
root(ROOT-0, say-4)
mark(kept-7, that-5)
nsubj(kept-7, he-6)
ccomp(say-4, kept-7)
prt(kept-7, up-8)
predet(friendships-12, all-9)
poss(friendships-12, his-10)
amod(friendships-12, old-11)
dobj(kept-7, friendships-12)

(ROOT
  (S
    (NP (DT No) (NN day))
    (VP (VBD passed)
      (SBAR (IN while)
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADVP (IN at) (NN home)
              (PP (IN without)
                (NP (PRP$ his))))
            (VP (VBG going)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP
                      (NP
                        (NP (DT some) (NN one))
                        (PP (IN of)
                          (NP (PRP$ his) (JJ former) (NNS companions))))
                      (: --)
                      (NP
                        (NP (NNP Mr) (NNP Willett))
                        (, ,)
                        (CC or)
                        (NP (NNP Mr) (NNP Spelman)))
                      (, ,)
                      (CC or)
                      (NP (NNP Mr) (NNP Wilson)))))))))))
    (. .)))

neg(day-2, No-1)
nsubj(passed-3, day-2)
root(ROOT-0, passed-3)
mark(going-11, while-4)
nsubj(going-11, he-5)
nsubj(see-13, he-5)
aux(going-11, was-6)
advmod(going-11, at-7)
dep(at-7, home-8)
prep_without(at-7, his-10)
advcl(passed-3, going-11)
aux(see-13, to-12)
xcomp(going-11, see-13)
det(one-15, some-14)
dobj(see-13, one-15)
poss(companions-19, his-17)
amod(companions-19, former-18)
prep_of(one-15, companions-19)
nn(Willett-22, Mr-21)
dobj(see-13, Willett-22)
conj_or(one-15, Willett-22)
nn(Spelman-26, Mr-25)
conj_or(one-15, Spelman-26)
conj_or(Willett-22, Spelman-26)
nn(Wilson-30, Mr-29)
dobj(see-13, Wilson-30)
conj_or(one-15, Wilson-30)

(ROOT
  (S
    (PP (IN For)
      (NP (NNP Hector)))
    (, ,)
    (NP (PRP he))
    (VP
      (VP (VBD went)
        (S
          (VP (TO to)
            (VP (VB see)
              (S
                (NP (PRP him))
                (ADJP (JJ oftenest)
                  (PP (IN of)
                    (NP
                      (NP (DT all))
                      (, ,)
                      (NP (PRP he)))))
                (S
                  (VP (VBG being)
                    (NP (PRP$ his) (NN favourite)))))))))
      (, ,)
      (CC and)
      (ADVP (RB sickly))
      (, ,)
      (CC and)
      (ADVP (RB therefore))
      (VP
        (ADVP (IN in) (RBS most))
        (VBP need)
        (PP (IN of)
          (NP (NN attention)))))
    (. .)))

prep_for(went-5, Hector-2)
nsubj(went-5, he-4)
nsubj(see-7, he-4)
nsubj(need-25, he-4)
root(ROOT-0, went-5)
aux(see-7, to-6)
xcomp(went-5, see-7)
nsubj(favourite-16, him-8)
dep(favourite-16, oftenest-9)
prep_of(oftenest-9, all-11)
appos(all-11, he-13)
cop(favourite-16, being-14)
poss(favourite-16, his-15)
xcomp(see-7, favourite-16)
advmod(went-5, sickly-19)
conj_and(went-5, sickly-19)
advmod(need-25, therefore-22)
advmod(need-25, in-23)
advmod(in-23, most-24)
conj_and(went-5, need-25)
prep_of(need-25, attention-27)

(ROOT
  (S
    (S (CC But)
      (NP (PRP he))
      (ADVP (RB greatly))
      (VP (VBD improved)
        (NP (PRP$ his) (NN acquaintance))
        (PP (IN with)
          (NP (NNP William) (NNP Webster)))))
    (: ;)
    (CC and)
    (S
      (SBAR (IN although)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (ADVP (RB now) (RB so) (RB much))
            (S
              (VP (TO to)
                (VP (VB occupy)
                  (NP (PRP him))
                  (, ,)
                  (SBAR
                    (S
                      (VP (MD would) (RB not)
                        (VP (VB be)
                          (ADJP (JJ satisfied))
                          (SBAR (IN until)
                            (S
                              (NP (PRP he))
                              (VP (VBD was)
                                (ADJP (JJ able)
                                  (S
                                    (VP (TO to)
                                      (VP
                                        (VP
                                          (VP (VB drive)
                                            (NP (DT the) (NN shuttle)))
                                          (, ,)
                                          (CC and)
                                          (VP (VB work)
                                            (NP
                                              (NP (DT the) (NNS treadles))
                                              (CC and)
                                              (NP (DT the) (NN batten))))
                                          (, ,))
                                        (CC and)
                                        (PRN (, ,)
                                          (PP (IN in)
                                            (ADJP (JJ short)))
                                          (, ,))
                                        (VP (VB turn)
                                          (PRT (RP out))
                                          (ADVP (RB almost)
                                            (PP (IN as)
                                              (ADJP (JJ good)))
                                            (NP
                                              (NP (DT a) (NN bit))
                                              (PP (IN of)
                                                (NP (NN linen)))))
                                          (PP (IN as)
                                            (NP (NNP William)))))))))))))
                      (NP (PRP himself))))))))))
      (: --)
      (ADVP (RB only))
      (NP (PRP he))
      (VP (VBD wanted)
        (NP
          (QP (RB about) (RB twice) (IN as) (JJ much))
          (NN time))
        (PP (TO to)
          (NP (PRP it)))))
    (. .)))

nsubj(improved-4, he-2)
advmod(improved-4, greatly-3)
root(ROOT-0, improved-4)
poss(acquaintance-6, his-5)
dobj(improved-4, acquaintance-6)
nn(Webster-9, William-8)
prep_with(improved-4, Webster-9)
mark(had-14, although-12)
nsubj(had-14, he-13)
nsubj(occupy-19, he-13)
advcl(wanted-63, had-14)
advmod(much-17, now-15)
advmod(much-17, so-16)
advmod(had-14, much-17)
aux(occupy-19, to-18)
xcomp(had-14, occupy-19)
dobj(occupy-19, him-20)
aux(satisfied-25, would-22)
neg(satisfied-25, not-23)
cop(satisfied-25, be-24)
dep(occupy-19, satisfied-25)
mark(able-29, until-26)
nsubj(able-29, he-27)
nsubj(drive-31, he-27)
nsubj(work-36, he-27)
nsubj(turn-48, he-27)
cop(able-29, was-28)
advcl(satisfied-25, able-29)
aux(drive-31, to-30)
xcomp(able-29, drive-31)
det(shuttle-33, the-32)
dobj(drive-31, shuttle-33)
xcomp(able-29, work-36)
conj_and(drive-31, work-36)
det(treadles-38, the-37)
dobj(work-36, treadles-38)
det(batten-41, the-40)
dobj(work-36, batten-41)
conj_and(treadles-38, batten-41)
dep(drive-31, in-45)
pobj(in-45, short-46)
xcomp(able-29, turn-48)
conj_and(drive-31, turn-48)
prt(turn-48, out-49)
advmod(turn-48, almost-50)
prep_as(almost-50, good-52)
det(bit-54, a-53)
pobj(almost-50, bit-54)
prep_of(bit-54, linen-56)
prep_as(turn-48, William-58)
dep(satisfied-25, himself-59)
advmod(wanted-63, only-61)
nsubj(wanted-63, he-62)
conj_and(improved-4, wanted-63)
quantmod(much-67, about-64)
quantmod(much-67, twice-65)
quantmod(much-67, as-66)
num(time-68, much-67)
dobj(wanted-63, time-68)
prep_to(wanted-63, it-70)

(ROOT
  (S
    (NP (CD One) (NN day))
    (, ,)
    (S
      (VP (VBG going)
        (PRT (RP in))
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (NNP Hector)))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD found)
      (S
        (NP (PRP him))
        (UCP
          (PP (IN in)
            (NP (NN bed)))
          (CC and)
          (ADVP (RB very) (RB poorly)))))
    (. .)))

num(day-2, One-1)
tmod(found-11, day-2)
vmod(found-11, going-4)
prt(going-4, in-5)
aux(see-7, to-6)
xcomp(going-4, see-7)
dobj(see-7, Hector-8)
nsubj(found-11, he-10)
root(ROOT-0, found-11)
dep(in-13, him-12)
dep(found-11, in-13)
pobj(in-13, bed-14)
advmod(poorly-17, very-16)
dep(found-11, poorly-17)
conj_and(in-13, poorly-17)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ My) (NN shoemaking))
      (VP (VBZ is)
        (ADVP (RB nearly))
        (ADVP (RB over))
        (, ,)
        (NP (NNP Mr) (NNP Willie))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said))
    (. .)))

poss(shoemaking-3, My-2)
nsubj(Willie-9, shoemaking-3)
cop(Willie-9, is-4)
advmod(Willie-9, nearly-5)
advmod(Willie-9, over-6)
nn(Willie-9, Mr-8)
ccomp(said-13, Willie-9)
nsubj(said-13, he-12)
root(ROOT-0, said-13)

(ROOT
  (S (`` ``)
    (S (CC But)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB mind)
          (NP (RB much)))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sure)
          (S
            (VP (TO to)
              (VP (VB find)
                (S
                  (NP
                    (NP (DT a) (NN corner))
                    (PP (IN in)
                      (NP (DT the) (JJ general) (NN business))))
                  (ADJP (JJ ready)
                    (PP (IN for)
                      (NP (PRP me))))
                  (SBAR
                    (ADVP (RB somewhere))
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP I))
                      (VP (VBP 'm) (RB not)
                        (VP (VBN wanted)
                          (ADVP (RB here))
                          (ADVP (DT any) (RBR more)))))))))))))
    (. .) ('' '')))

cc(mind-6, But-2)
nsubj(mind-6, I-3)
aux(mind-6, do-4)
neg(mind-6, n't-5)
root(ROOT-0, mind-6)
dobj(mind-6, much-7)
nsubj(sure-11, I-9)
nsubj(find-13, I-9)
cop(sure-11, 'm-10)
parataxis(mind-6, sure-11)
aux(find-13, to-12)
xcomp(sure-11, find-13)
det(corner-15, a-14)
nsubjpass(wanted-28, corner-15)
det(business-19, the-17)
amod(business-19, general-18)
prep_in(corner-15, business-19)
dep(wanted-28, ready-20)
prep_for(ready-20, me-22)
advmod(wanted-28, somewhere-23)
advmod(wanted-28, when-24)
nsubjpass(wanted-28, I-25)
auxpass(wanted-28, 'm-26)
neg(wanted-28, not-27)
xcomp(find-13, wanted-28)
advmod(wanted-28, here-29)
dep(more-31, any-30)
advmod(wanted-28, more-31)

(ROOT
  (S (`` ``)
    (VP (VB Have)
      (S
        (NP (PRP you))
        (VP (VBN been)
          (VP (VBG drinking)
            (NP (DT the) (NN water))
            (ADVP (RB lately))))))
    (. ?) ('' '')))

root(ROOT-0, Have-2)
nsubj(drinking-5, you-3)
aux(drinking-5, been-4)
ccomp(Have-2, drinking-5)
det(water-7, the-6)
dobj(drinking-5, water-7)
advmod(drinking-5, lately-8)

(ROOT
  (S
    (VP (VBD asked)
      (NP (NNP Willie)))
    (. .)))

root(ROOT-0, asked-1)
dobj(asked-1, Willie-2)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH No))
    (. .)))

root(ROOT-0, No-2)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP
        (VP (VBD was)
          (ADJP (RB very) (JJ busy))
          (NP (JJ last) (NN week)))
        (, ,)
        (CC and)
        (VP (VBD had) (RB n't)
          (VP (VB time)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (RB rather) (JJ cold))
        (SBAR (IN for)
          (S
            (NP (PRP me))
            (VP (TO to)
              (VP (VB go)
                (PRT (RP out))))))))
    (. .)))

nsubj(busy-4, I-1)
nsubj(time-11, I-1)
cop(busy-4, was-2)
advmod(busy-4, very-3)
root(ROOT-0, busy-4)
amod(week-6, last-5)
tmod(busy-4, week-6)
aux(time-11, had-9)
neg(time-11, n't-10)
conj_and(busy-4, time-11)
nsubj(cold-17, it-14)
cop(cold-17, was-15)
advmod(cold-17, rather-16)
conj_and(busy-4, cold-17)
mark(go-21, for-18)
nsubj(go-21, me-19)
aux(go-21, to-20)
advcl(cold-17, go-21)
xcomp(cold-17, go-21)
prt(go-21, out-22)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP (DT that) (NN matter)))
    (S
      (NP (DT the) (NN wind))
      (VP (VBD blew)
        (PRT (RP in))
        (PP (IN through)
          (NP (NN door)
            (CC and)
            (NN window)))))
    (IN so)
    (S
      (ADVP (RB dreadfully))
      (PRN (: --)
        (CC and)
        (S
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (PP (CC but)
                (NP (DT a) (NN clay) (NN floor)))))
          (, ,)
          (CC and)
          (S
            (S
              (NP (NN firing))
              (VP (VBZ is)
                (ADJP (RB dear))
                (: --)
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (VBD caught)
                      (NP (DT a) (NN cold)))))))
            (, ,)
            (CC and)
            (S
              (NP (DT a) (NN cold))
              (VP (VBZ is)
                (NP
                  (NP (DT the) (JJS worst) (NN thing))
                  (PP (IN for)
                    (NP (PRP me))))))))
        (: --))
      (NP (DT that))
      (VP (VBZ is)
        (PP (IN for)
          (NP
            (NP (DT this) (JJ poor) (NN rickety) (NN body))
            (PP (IN of)
              (NP (NN mine)))))))
    (. .)))

cc(blew-7, But-1)
det(matter-4, that-3)
prep_for(blew-7, matter-4)
det(wind-6, the-5)
nsubj(blew-7, wind-6)
root(ROOT-0, blew-7)
prt(blew-7, in-8)
prep_through(blew-7, door-10)
prep_through(blew-7, window-12)
conj_and(door-10, window-12)
dep(blew-7, so-13)
advmod(is-46, dreadfully-14)
nsubj('s-18, it-17)
parataxis(is-46, 's-18)
prep('s-18, but-19)
det(floor-22, a-20)
nn(floor-22, clay-21)
pobj(but-19, floor-22)
nsubj(dear-27, firing-25)
cop(dear-27, is-26)
conj_and('s-18, dear-27)
parataxis(is-46, dear-27)
mark(caught-31, that-29)
nsubj(caught-31, I-30)
ccomp(dear-27, caught-31)
parataxis(dear-27, caught-31)
det(cold-33, a-32)
dobj(caught-31, cold-33)
det(cold-37, a-36)
nsubj(thing-41, cold-37)
cop(thing-41, is-38)
det(thing-41, the-39)
amod(thing-41, worst-40)
conj_and('s-18, thing-41)
conj_and(dear-27, thing-41)
prep_for(thing-41, me-43)
nsubj(is-46, that-45)
parataxis(blew-7, is-46)
det(body-51, this-48)
amod(body-51, poor-49)
nn(body-51, rickety-50)
prep_for(is-46, body-51)
prep_of(body-51, mine-53)

(ROOT
  (S (CC And)
    (NP (DT this) (NN cold))
    (VP (VBZ is)
      (NP (DT a) (JJ bad) (NN one)))
    (. .) ('' '')))

cc(one-7, And-1)
det(cold-3, this-2)
nsubj(one-7, cold-3)
cop(one-7, is-4)
det(one-7, a-5)
amod(one-7, bad-6)
root(ROOT-0, one-7)

(ROOT
  (S
    (S
      (ADVP (RB Here))
      (NP
        (NP (DT a) (JJ great) (NN fit))
        (PP (IN of)
          (S
            (VP (VBG coughing)))))
      (VP (VBD came)
        (PRT (RP on))))
    (, ,)
    (S
      (S
        (VP (VBN accompanied)
          (PP (IN by)
            (NP (NNS symptoms)))
          (SBAR (IN that)
            (S
              (NP (NNP Willie))
              (VP (VBD saw))))))
      (VP (VBD were)
        (ADJP (JJ dangerous))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD went)
        (ADVP (NN home) (IN at))
        (ADVP (RB once))
        (S
          (VP (TO to)
            (VP (VB get)
              (S
                (NP (PRP him))
                (NP (DT some) (NN medicine))))))))
    (. .)))

advmod(came-7, Here-1)
det(fit-4, a-2)
amod(fit-4, great-3)
nsubj(came-7, fit-4)
prepc_of(fit-4, coughing-6)
root(ROOT-0, came-7)
prt(came-7, on-8)
csubj(dangerous-17, accompanied-10)
prep_by(accompanied-10, symptoms-12)
mark(saw-15, that-13)
nsubj(saw-15, Willie-14)
ccomp(accompanied-10, saw-15)
cop(dangerous-17, were-16)
ccomp(came-7, dangerous-17)
conj_and(came-7, dangerous-17)
nsubj(went-21, he-20)
nsubj(get-26, he-20)
conj_and(came-7, went-21)
dep(at-23, home-22)
advmod(went-21, at-23)
advmod(went-21, once-24)
aux(get-26, to-25)
xcomp(went-21, get-26)
nsubj(medicine-29, him-27)
det(medicine-29, some-28)
xcomp(get-26, medicine-29)

(ROOT
  (S
    (S
      (PP (IN On)
        (ADVP
          (NP (DT the) (NN way))
          (RB back)))
      (NP (DT a) (NN thought))
      (VP (VBD struck)
        (NP (PRP him))
        (, ,)
        (PP (IN about)
          (WHNP (WDT which)))
        (, ,)
        (ADVP (RB however))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB say)
        (NP (NN nothing))
        (PP (TO to)
          (NP (NNP Hector)))
        (SBAR (IN until)
          (S
            (NP (PRP he))
            (VP (MD should)
              (VP (VB have)
                (VP (VBN talked)
                  (PP (TO to)
                    (NP (PRP$ his) (NN father)
                      (CC and)
                      (NN mother)))
                  (PP (IN about)
                    (NP
                      (NP (PRP it))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (PRP he))
                          (VP (VBD did)
                            (NP (DT that) (JJ same) (NN evening))
                            (PP (IN at)
                              (NP (NN supper)))))))))))))))
    (. .)))

prep(struck-7, On-1)
det(way-3, the-2)
npadvmod(back-4, way-3)
pcomp(On-1, back-4)
det(thought-6, a-5)
nsubj(struck-7, thought-6)
ccomp(say-17, struck-7)
dobj(struck-7, him-8)
prep_about(struck-7, which-11)
advmod(struck-7, however-13)
nsubj(say-17, he-15)
aux(say-17, would-16)
root(ROOT-0, say-17)
dobj(say-17, nothing-18)
prep_to(say-17, Hector-20)
mark(talked-25, until-21)
nsubj(talked-25, he-22)
aux(talked-25, should-23)
aux(talked-25, have-24)
advcl(say-17, talked-25)
poss(father-28, his-27)
prep_to(talked-25, father-28)
prep_to(talked-25, mother-30)
conj_and(father-28, mother-30)
prep_about(talked-25, it-32)
dobj(did-36, it-32)
nsubj(did-36, he-35)
rcmod(it-32, did-36)
det(evening-39, that-37)
amod(evening-39, same-38)
tmod(did-36, evening-39)
prep_at(did-36, supper-41)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB tell)
          (NP (PRP you))
          (NP (WP what))
          (, ,)
          (NP (NNP Hector)))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD went)
            (S
              (VP (TO to)
                (VP (VB see)
                  (NP (PRP him))
                  (NP (DT the) (JJ next) (NN day)))))
            (: --) (`` ``)
            (S
              (NP (PRP you))
              (VP (MD must)
                (VP (VB come)
                  (CC and)
                  (VB occupy)
                  (NP (PRP$ my) (NN room))
                  (PP (IN in)
                    (NP (DT the) (NNS ruins))))))))))
    (. .)))

nsubj(tell-4, I-2)
aux(tell-4, 'll-3)
ccomp(said-12, tell-4)
iobj(tell-4, you-5)
dobj(tell-4, what-6)
dobj(tell-4, Hector-8)
nsubj(said-12, he-11)
root(ROOT-0, said-12)
advmod(went-16, when-14)
nsubj(went-16, he-15)
nsubj(see-18, he-15)
advcl(said-12, went-16)
aux(see-18, to-17)
xcomp(went-16, see-18)
dobj(see-18, him-19)
det(day-22, the-20)
amod(day-22, next-21)
tmod(see-18, day-22)
nsubj(come-27, you-25)
nsubj(occupy-29, you-25)
aux(come-27, must-26)
ccomp(went-16, come-27)
ccomp(went-16, occupy-29)
conj_and(come-27, occupy-29)
poss(room-31, my-30)
dobj(come-27, room-31)
det(ruins-34, the-33)
prep_in(come-27, ruins-34)

(ROOT
  (S
    (S
      (SBAR (IN Since)
        (S
          (NP (NN grannie))
          (VP (VBD went)
            (NP (NN home)))))
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB want)
          (NP (PRP it)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT a) (NN pity)
          (S
            (VP (TO to)
              (VP (VB have)
                (S
                  (NP (PRP it))
                  (VP (VBG lying)
                    (ADJP (JJ idle))))))))))
    (. .)))

mark(went-3, Since-1)
nsubj(went-3, grannie-2)
advcl(want-8, went-3)
dobj(went-3, home-4)
nsubj(want-8, I-5)
aux(want-8, do-6)
neg(want-8, n't-7)
root(ROOT-0, want-8)
dobj(want-8, it-9)
nsubj(pity-15, it-12)
cop(pity-15, 's-13)
det(pity-15, a-14)
conj_and(want-8, pity-15)
aux(have-17, to-16)
vmod(pity-15, have-17)
nsubj(lying-19, it-18)
ccomp(have-17, lying-19)
acomp(lying-19, idle-20)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADJP
          (NP
            (NP (DT a) (NN deal))
            (JJR warmer))
          (SBAR (IN than)
            (FRAG
              (NP (DT this)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB get)
          (NP (DT a) (NN stove))
          (PP (IN in)
            (PP (IN before)
              (NP (DT the) (NN winter)))))))
    (. .)))

nsubj(warmer-5, It-1)
cop(warmer-5, 's-2)
det(deal-4, a-3)
dep(warmer-5, deal-4)
root(ROOT-0, warmer-5)
mark(this-7, than-6)
dep(warmer-5, this-7)
nsubj(get-12, I-10)
aux(get-12, 'll-11)
conj_and(warmer-5, get-12)
det(stove-14, a-13)
dobj(get-12, stove-14)
prep(get-12, in-15)
pcomp(in-15, before-16)
det(winter-18, the-17)
pobj(before-16, winter-18)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD wo) (RB n't)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB work)
                (ADJP (RB so) (JJ hard))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP you))
                    (VP (VBP 've)
                      (VP (VBN got)
                        (NP (DT no) (NN rent)
                          (S
                            (VP (TO to)
                              (VP (VB pay)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB have)
          (NP
            (NP
              (QP (RB as) (JJ much)))
            (PP (IN of)
              (NP (DT the) (NN water))))
          (SBAR (IN as)
            (S
              (NP (PRP you))
              (VP (VBP like)
                (PP (IN without)
                  (NP
                    (NP (DT the) (NN trouble))
                    (PP (IN of)
                      (S
                        (VP (VBG walking)
                          (PRT (RP up))
                          (NP
                            (NP (DT the) (NN hill))
                            (PP (IN for)
                              (NP (PRP it)))))))))))))))
    (. .)))

nsubj(have-4, You-1)
nsubj(work-6, You-1)
aux(have-4, wo-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
aux(work-6, to-5)
xcomp(have-4, work-6)
advmod(hard-8, so-7)
acomp(work-6, hard-8)
advmod(got-12, when-9)
nsubj(got-12, you-10)
aux(got-12, 've-11)
advcl(work-6, got-12)
neg(rent-14, no-13)
dobj(got-12, rent-14)
aux(pay-16, to-15)
vmod(rent-14, pay-16)
nsubj(have-21, you-19)
aux(have-21, will-20)
conj_and(have-4, have-21)
quantmod(much-23, as-22)
dobj(have-21, much-23)
det(water-26, the-25)
prep_of(much-23, water-26)
mark(like-29, as-27)
nsubj(like-29, you-28)
advcl(have-21, like-29)
det(trouble-32, the-31)
prep_without(like-29, trouble-32)
prepc_of(trouble-32, walking-34)
prt(walking-34, up-35)
det(hill-37, the-36)
dobj(walking-34, hill-37)
prep_for(hill-37, it-39)

(ROOT
  (S (RB Then)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN garden))
        (PP (IN for)
          (NP (PRP you)))
        (S
          (VP (TO to)
            (VP (VB walk)
              (PP (IN in)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP you))
                    (VP (VBP please) (: --)
                      (NP
                        (NP (DT all))
                        (PP (IN on)
                          (NP
                            (NP (DT a) (NN level))
                            (, ,)
                            (CC and)
                            (RB only)
                            (NP (DT the) (JJ little) (NN stair))))
                        (S
                          (VP (TO to)
                            (VP (VB climb)
                              (S
                                (VP (TO to)
                                  (VP (VB get)
                                    (PRT (RP back))
                                    (PP (TO to)
                                      (NP (PRP$ your) (JJ own) (NN room)))))))))))))))))))
    (. .) ('' '')))

advmod('s-3, Then-1)
expl('s-3, there-2)
root(ROOT-0, 's-3)
det(garden-5, the-4)
nsubj('s-3, garden-5)
prep_for(garden-5, you-7)
aux(walk-9, to-8)
vmod(garden-5, walk-9)
advmod(please-13, when-11)
nsubj(please-13, you-12)
prepc_in(walk-9, please-13)
dobj(please-13, all-15)
parataxis(please-13, all-15)
det(level-18, a-17)
prep_on(all-15, level-18)
prep_on(all-15, only-21)
advmod(level-18, only-21)
conj_and(level-18, only-21)
det(stair-24, the-22)
amod(stair-24, little-23)
dep(level-18, stair-24)
aux(climb-26, to-25)
vmod(all-15, climb-26)
aux(get-28, to-27)
xcomp(climb-26, get-28)
prt(get-28, back-29)
poss(room-33, your-31)
amod(room-33, own-32)
prep_to(get-28, room-33)

(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB be)
        (NP (PDT such) (DT a) (NN trouble))
        (PP (TO to)
          (NP
            (NP
              (NP (PRP you))
              (NP (DT all)))
            (, ,)
            (NP (NNP Mr) (NNP Willie))))))
    (. !) ('' '')))

cc(trouble-8, But-2)
nsubj(trouble-8, I-3)
aux(trouble-8, should-4)
cop(trouble-8, be-5)
predet(trouble-8, such-6)
det(trouble-8, a-7)
root(ROOT-0, trouble-8)
prep_to(trouble-8, you-10)
det(you-10, all-11)
nn(Willie-14, Mr-13)
appos(you-10, Willie-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD 'd)
        (VP (VB be)
          (NP (DT no) (NN trouble)))))
    (: --)
    (S
      (NP (PRP we))
      (VP (VBP 've)
        (NP
          (NP (CD two) (NNS servants))
          (ADVP (RB now)))))
    (. .)))

nsubj(trouble-6, You-2)
aux(trouble-6, 'd-3)
cop(trouble-6, be-4)
neg(trouble-6, no-5)
root(ROOT-0, trouble-6)
nsubj('ve-9, we-8)
parataxis(trouble-6, 've-9)
num(servants-11, two-10)
dobj('ve-9, servants-11)
advmod(servants-11, now-12)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP like)
            (S
              (S
                (S
                  (NP (PRP you))
                  (VP (MD can)
                    (VP (VB give)
                      (NP (DT the) (JJ little) (NN one))
                      (NP
                        (NP (DT a) (NN shilling))
                        (ADVP (RB now)
                          (CC and)
                          (RB then))))))
                (, ,)
                (CC and)
                (S
                  (NP (PRP she))
                  (VP (MD 'll)
                    (VP (VB be)
                      (ADJP (JJ glad) (RB enough)
                        (S
                          (VP (TO to)
                            (VP
                              (VP (VB make)
                                (NP (PRP$ your) (NN bed)))
                              (, ,)
                              (CC and)
                              (VP (VB sweep)
                                (PRT (RP out))
                                (NP (PRP$ your) (NN room)))))))))))
              (: ;)
              (CC and)
              (S
                (NP (PRP you))
                (VP (VBP know)
                  (SBAR
                    (S
                      (NP (NNP Tibby))
                      (VP
                        (VP (VBZ has)
                          (NP
                            (NP (DT a) (JJ great) (NN regard))
                            (PP (IN for)
                              (NP (PRP you)))))
                        (, ,)
                        (CC and)
                        (VP (MD will)
                          (VP (VB be)
                            (ADJP (RB very) (JJ glad)
                              (S
                                (VP (TO to)
                                  (VP (VB do)
                                    (NP (PDT all) (DT the) (NN cooking)))))))))))))))))
      (NP (PRP you))
      (VP (MD will)
        (VP (VB want))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBZ 's) (RB not)
        (ADJP (JJ much))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP know) (: :)
        (NP (PRP$ your) (NN porridge))))
    (CC and)
    (S
      (NP
        (NP (DT a) (NN cup))
        (PP (IN of)
          (NP (NN tea))))
      (VP (VBZ is)
        (NP
          (QP (RB about) (DT all)))))
    (. .)))

mark(like-3, If-1)
nsubj(like-3, you-2)
advcl(want-56, like-3)
nsubj(give-6, you-4)
aux(give-6, can-5)
dep(like-3, give-6)
det(one-9, the-7)
amod(one-9, little-8)
iobj(give-6, one-9)
det(shilling-11, a-10)
dobj(give-6, shilling-11)
advmod(shilling-11, now-12)
advmod(shilling-11, then-14)
conj_and(now-12, then-14)
nsubj(glad-20, she-17)
nsubj(make-23, she-17)
nsubj(sweep-28, she-17)
aux(glad-20, 'll-18)
cop(glad-20, be-19)
dep(like-3, glad-20)
conj_and(give-6, glad-20)
advmod(glad-20, enough-21)
aux(make-23, to-22)
xcomp(glad-20, make-23)
poss(bed-25, your-24)
dobj(make-23, bed-25)
xcomp(glad-20, sweep-28)
conj_and(make-23, sweep-28)
prt(sweep-28, out-29)
poss(room-31, your-30)
dobj(sweep-28, room-31)
nsubj(know-35, you-34)
dep(like-3, know-35)
conj_and(give-6, know-35)
nsubj(has-37, Tibby-36)
nsubj(glad-48, Tibby-36)
nsubj(do-50, Tibby-36)
ccomp(know-35, has-37)
det(regard-40, a-38)
amod(regard-40, great-39)
dobj(has-37, regard-40)
prep_for(regard-40, you-42)
aux(glad-48, will-45)
cop(glad-48, be-46)
advmod(glad-48, very-47)
ccomp(know-35, glad-48)
conj_and(has-37, glad-48)
aux(do-50, to-49)
xcomp(glad-48, do-50)
predet(cooking-53, all-51)
det(cooking-53, the-52)
dobj(do-50, cooking-53)
nsubj(want-56, you-54)
aux(want-56, will-55)
root(ROOT-0, want-56)
nsubj(much-61, it-58)
cop(much-61, 's-59)
neg(much-61, not-60)
conj_and(want-56, much-61)
nsubj(know-64, I-63)
conj_and(want-56, know-64)
poss(porridge-67, your-66)
dobj(know-64, porridge-67)
parataxis(know-64, porridge-67)
det(cup-70, a-69)
nsubj(all-75, cup-70)
prep_of(cup-70, tea-72)
cop(all-75, is-73)
quantmod(all-75, about-74)
conj_and(want-56, all-75)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB then))
      (NP (EX there))
      (VP (VBZ 's)
        (NP
          (NP (PRP$ my) (NN father)
            (S
              (VP (TO to)
                (VP (VB look)
                  (PP (IN after)
                    (NP (PRP$ your) (NN health)))))))
          (, ,)
          (CC and)
          (NP (NNS Agnes)
            (S
              (VP (TO to)
                (VP (VB amuse)
                  (NP (PRP you))
                  (ADVP (RB sometimes)))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (PRP$ my) (NN mother)
          (S
            (VP (TO to)
              (VP (VB look)
                (PP (IN after)
                  (NP (NN everything)))))))
        (, ,)
        (NP (NNP and))
        ('' '') (: --))
      (ADVP (RB Here))
      (VP
        (ADVP
          (NP (JJ poor) (NNS Hector))
          (RB fairly))
        (VBD broke)
        (PRT (VBP down))))
    (. .)))

advmod('s-4, then-2)
expl('s-4, there-3)
root(ROOT-0, 's-4)
poss(father-6, my-5)
nsubj('s-4, father-6)
aux(look-8, to-7)
vmod(father-6, look-8)
poss(health-11, your-10)
prep_after(look-8, health-11)
nsubj('s-4, Agnes-14)
conj_and(father-6, Agnes-14)
aux(amuse-16, to-15)
vmod(Agnes-14, amuse-16)
dobj(amuse-16, you-17)
advmod(amuse-16, sometimes-18)
poss(mother-22, my-21)
nsubj(broke-35, mother-22)
aux(look-24, to-23)
vmod(mother-22, look-24)
prep_after(look-24, everything-26)
appos(mother-22, and-28)
advmod(broke-35, Here-31)
amod(Hector-33, poor-32)
npadvmod(fairly-34, Hector-33)
advmod(broke-35, fairly-34)
conj_and('s-4, broke-35)
prt(broke-35, down-36)

(ROOT
  (SBAR
    (WHADVP (WRB When))
    (S
      (NP (PRP he))
      (VP (VBD recovered)
        (NP (PRP himself))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD said) (: --) (`` ``)
              (SBARQ (CC But)
                (WHADVP (WRB how))
                (SQ (MD could)
                  (NP
                    (NP (JJ gentle) (NNS folks))
                    (PP (IN like)
                      (NP (PRP you))))
                  (VP (VB bear)
                    (S
                      (VP (TO to)
                        (VP (VB see)
                          (NP (DT a) (JJ hump-backed) (NN creature))
                          (PP (IN like)
                            (S
                              (NP (PRP me))
                              (VP (VBG crawling)
                                (PP (IN about)
                                  (NP (DT the) (NN place)))))))))))
                (. ?) ('' '')))))))))

advmod(recovered-3, When-1)
nsubj(recovered-3, he-2)
root(ROOT-0, recovered-3)
dobj(recovered-3, himself-4)
nsubj(said-6, he-5)
dep(recovered-3, said-6)
cc(bear-16, But-9)
advmod(bear-16, how-10)
aux(bear-16, could-11)
amod(folks-13, gentle-12)
nsubj(bear-16, folks-13)
nsubj(see-18, folks-13)
prep_like(folks-13, you-15)
ccomp(said-6, bear-16)
aux(see-18, to-17)
xcomp(bear-16, see-18)
det(creature-21, a-19)
amod(creature-21, hump-backed-20)
dobj(see-18, creature-21)
nsubj(crawling-24, me-23)
prepc_like(see-18, crawling-24)
det(place-27, the-26)
prep_about(crawling-24, place-27)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP They))
      (VP (MD would)
        (ADVP (RB only))
        (VP (VB enjoy)
          (NP (PRP it))
          (ADVP
            (ADVP (DT the) (RBR more))
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (VP (VBD enjoyed)
                  (NP (PRP it)))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (NNP Willie))
    (. .)))

nsubj(enjoy-5, They-2)
aux(enjoy-5, would-3)
advmod(enjoy-5, only-4)
ccomp(said-15, enjoy-5)
dobj(enjoy-5, it-6)
dep(more-8, the-7)
advmod(enjoy-5, more-8)
mark(enjoyed-11, that-9)
nsubj(enjoyed-11, you-10)
advcl(more-8, enjoyed-11)
ccomp(more-8, enjoyed-11)
dobj(enjoyed-11, it-12)
root(ROOT-0, said-15)
nsubj(said-15, Willie-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was) (RB all)
      (VP (VBN arranged)))
    (. .)))

nsubjpass(arranged-4, It-1)
auxpass(arranged-4, was-2)
advmod(arranged-4, all-3)
root(ROOT-0, arranged-4)

(ROOT
  (S
    (S
      (ADVP (RB As) (RB soon)
        (SBAR (IN as)
          (S
            (NP (NNP Hector))
            (VP (VBD was)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN moved))))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBN carried)
          (PRT (RP up))
          (PP (TO to)
            (NP (DT the) (NNPS Ruins))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD nursed)
        (PP (IN by)
          (NP (NN everybody)))))
    (. .)))

advmod(soon-2, As-1)
advmod(carried-13, soon-2)
mark(able-6, as-3)
nsubj(able-6, Hector-4)
nsubjpass(moved-9, Hector-4)
cop(able-6, was-5)
ccomp(soon-2, able-6)
aux(moved-9, to-7)
auxpass(moved-9, be-8)
xcomp(able-6, moved-9)
nsubjpass(carried-13, he-11)
nsubjpass(nursed-21, he-11)
auxpass(carried-13, was-12)
root(ROOT-0, carried-13)
prt(carried-13, up-14)
det(Ruins-17, the-16)
prep_to(carried-13, Ruins-17)
expl(nursed-21, there-20)
conj_and(carried-13, nursed-21)
prep_by(nursed-21, everybody-23)

(ROOT
  (S
    (NP (NN Nothing))
    (VP (MD could)
      (VP (VB exceed)
        (NP (PRP$ his) (NN comfort))
        (ADVP (RB now))
        (PP (CC but)
          (NP (PRP$ his) (NN gratitude)))))
    (. .)))

nsubj(exceed-3, Nothing-1)
aux(exceed-3, could-2)
root(ROOT-0, exceed-3)
poss(comfort-5, his-4)
dobj(exceed-3, comfort-5)
advmod(exceed-3, now-6)
prep(exceed-3, but-7)
poss(gratitude-9, his-8)
pobj(but-7, gratitude-9)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD was)
        (ADVP (RB soon))
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB work)
                (ADVP (RB again))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADVP (RB evidently))
            (ADJP (JJR happier))
            (SBAR
              (WHADVP (WRB when))
              (S
                (VP (VBG doing)
                  (NP (DT a) (JJ little))
                  (PP (IN towards)
                    (NP (DT the) (JJ general) (NN business)))))))))
      (, ,)
      (NP (NNP Mr) (NNP Macmichael))
      (VP (VBD thought)
        (NP (PRP it))
        (ADVP (RBS best))
        (PP (IN for)
          (NP (PRP him)))))
    (. .)))

nsubj(able-4, He-1)
nsubj(work-6, He-1)
cop(able-4, was-2)
advmod(able-4, soon-3)
root(ROOT-0, able-4)
aux(work-6, to-5)
xcomp(able-4, work-6)
advmod(work-6, again-7)
mark(happier-14, as-10)
nsubj(happier-14, he-11)
cop(happier-14, was-12)
advmod(happier-14, evidently-13)
advcl(thought-26, happier-14)
advmod(doing-16, when-15)
advcl(happier-14, doing-16)
det(little-18, a-17)
dobj(doing-16, little-18)
det(business-22, the-20)
amod(business-22, general-21)
prep_towards(doing-16, business-22)
nn(Macmichael-25, Mr-24)
nsubj(thought-26, Macmichael-25)
conj_and(able-4, thought-26)
dobj(thought-26, it-27)
advmod(thought-26, best-28)
prep_for(thought-26, him-30)

(ROOT
  (S
    (NP
      (NP (CD One) (NN day))
      (, ,)
      (NP
        (NP (NNP Willie))
        (VP
          (VP (VBG being)
            (PP (IN at)
              (NP (NN work)))
            (PP (IN in)
              (NP (PRP$ his) (NN laboratory))))
          (, ,)
          (CC and)
          (VP (VBG getting)
            (S
              (NP (PRP himself))
              (ADJP (JJ half-stifled)
                (PP (IN with)
                  (NP
                    (NP (DT a) (JJ sudden) (NN fume))
                    (PP (IN of)
                      (NP (NN chlorine))))))))))
      (, ,))
    (VP (VBD opened)
      (NP (DT the) (NN door))
      (PP (IN for)
        (NP (DT some) (NN air)))
      (SBAR (RB just) (IN as)
        (S
          (NP (NNP Hector))
          (VP (VBD had)
            (VP (VBN passed)
              (NP (PRP it)))))))
    (. .)))

num(day-2, One-1)
nsubj(opened-23, day-2)
appos(day-2, Willie-4)
dep(Willie-4, being-5)
prep_at(being-5, work-7)
poss(laboratory-10, his-9)
prep_in(being-5, laboratory-10)
dep(Willie-4, getting-13)
conj_and(being-5, getting-13)
nsubj(half-stifled-15, himself-14)
xcomp(getting-13, half-stifled-15)
det(fume-19, a-17)
amod(fume-19, sudden-18)
prep_with(half-stifled-15, fume-19)
prep_of(fume-19, chlorine-21)
root(ROOT-0, opened-23)
det(door-25, the-24)
dobj(opened-23, door-25)
det(air-28, some-27)
prep_for(opened-23, air-28)
advmod(passed-33, just-29)
mark(passed-33, as-30)
nsubj(passed-33, Hector-31)
aux(passed-33, had-32)
advcl(opened-23, passed-33)
dobj(passed-33, it-34)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD stood)
        (PP (IN at)
          (NP (DT the) (NN door))))
      (CC and)
      (VP (VBD followed)
        (NP (PRP him))
        (ADVP (RB down)
          (NP (DT the) (NN walk)))
        (PP (IN with)
          (NP (PRP$ his) (NNS eyes)))
        (, ,)
        (S
          (VP (VBG watching)
            (NP (PRP him))))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD went) (: --)
              (S
                (S
                  (ADVP (RB now))
                  (VP
                    (VP (VBG disappearing)
                      (PP (IN behind)
                        (NP
                          (NP (DT the) (NNS blossoms))
                          (PP (IN of)
                            (NP (DT an) (NN apple-tree))))))
                    (, ,)
                    (ADVP (RB now))
                    (VP (VBG climbing)
                      (NP
                        (NP (CD one))
                        (PP (IN of)
                          (NP (DT the) (JJ little) (NNS mounds)))))))
                (, ,)
                (CC and)
                (S
                  (ADVP (RB now))
                  (VP
                    (VP (VBG getting)
                      (PRT (RP up))
                      (PP (IN into)
                        (NP (DT the) (NN elm-tree))))
                    (, ,)
                    (CC and)
                    (VP (VBG looking) (IN about)
                      (NP (PRP him))
                      (PP (IN on)
                        (NP
                          (NP (DT all) (NNS sides))
                          (, ,)
                          (NP
                            (NP (PRP$ his) (JJ sickly) (NN face))
                            (VP
                              (ADVP (RB absolutely))
                              (VBG shining)
                              (PP (IN with)
                                (NP (NN pleasure))))))))))))))))
    (. .)))

nsubj(stood-2, He-1)
nsubj(followed-7, He-1)
root(ROOT-0, stood-2)
det(door-5, the-4)
prep_at(stood-2, door-5)
conj_and(stood-2, followed-7)
dobj(followed-7, him-8)
advmod(followed-7, down-9)
det(walk-11, the-10)
pobj(down-9, walk-11)
poss(eyes-14, his-13)
prep_with(followed-7, eyes-14)
vmod(followed-7, watching-16)
dobj(watching-16, him-17)
mark(went-20, as-18)
nsubj(went-20, he-19)
advcl(followed-7, went-20)
advmod(disappearing-23, now-22)
parataxis(went-20, disappearing-23)
det(blossoms-26, the-25)
prep_behind(disappearing-23, blossoms-26)
det(apple-tree-29, an-28)
prep_of(blossoms-26, apple-tree-29)
advmod(climbing-32, now-31)
dep(disappearing-23, climbing-32)
dobj(climbing-32, one-33)
det(mounds-37, the-35)
amod(mounds-37, little-36)
prep_of(one-33, mounds-37)
advmod(getting-41, now-40)
parataxis(went-20, getting-41)
conj_and(disappearing-23, getting-41)
prt(getting-41, up-42)
det(elm-tree-45, the-44)
prep_into(getting-41, elm-tree-45)
conj_and(disappearing-23, looking-48)
conj_and(getting-41, looking-48)
dep(looking-48, about-49)
dobj(looking-48, him-50)
det(sides-53, all-52)
prep_on(looking-48, sides-53)
poss(face-57, his-55)
amod(face-57, sickly-56)
appos(sides-53, face-57)
advmod(shining-59, absolutely-58)
vmod(face-57, shining-59)
prep_with(shining-59, pleasure-61)

(ROOT
  (S (`` ``)
    (CC But)
    (, ,) ('' '')
    (VP (VBD said)
      (NP (NNP Willie))
      (ADVP (DT all) (IN at) (RB once))
      (PP (TO to)
        (NP
          (NP (PRP himself))
          (, ,) (`` ``)
          (SBARQ
            (WHADVP (WRB why))
            (SQ (MD should)
              (NP (NNP Hector))
              (VP (VB be)
                (ADJP
                  (NP (DT the) (RB only))
                  (JJ invalid))
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (NP (DT this) (NN pleasure)))))))))))
    (. ?) ('' '')))

cc(said-5, But-2)
root(ROOT-0, said-5)
dobj(said-5, Willie-6)
pobj(at-8, all-7)
advmod(said-5, at-8)
advmod(at-8, once-9)
prep_to(said-5, himself-11)
advmod(invalid-20, why-14)
aux(invalid-20, should-15)
nsubj(invalid-20, Hector-16)
nsubj(have-22, Hector-16)
cop(invalid-20, be-17)
det(only-19, the-18)
npadvmod(invalid-20, only-19)
dep(himself-11, invalid-20)
aux(have-22, to-21)
xcomp(invalid-20, have-22)
det(pleasure-24, this-23)
dobj(have-22, pleasure-24)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD found)
      (NP (DT no) (NN answer))
      (PP (TO to)
        (NP (DT the) (NN question))))
    (. .)))

nsubj(found-2, He-1)
root(ROOT-0, found-2)
neg(answer-4, no-3)
dobj(found-2, answer-4)
det(question-7, the-6)
prep_to(found-2, question-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD looked)
              (PP (IN for)
                (NP (CD one)))
              (ADJP (RB very) (JJ hard))
              (ADVP (RB though)))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
nsubj(looked-6, he-5)
ccomp(think-4, looked-6)
prep_for(looked-6, one-8)
advmod(hard-10, very-9)
acomp(looked-6, hard-10)
advmod(looked-6, though-11)

(ROOT
  (S (CC And)
    (ADVP (RB again))
    (, ,)
    (ADVP (DT all)
      (PP (IN at)
        (ADVP (RB once))))
    (, ,)
    (NP (PRP he))
    (VP (VBD said)
      (PP (TO to)
        (NP
          (NP (PRP himself))
          (: --) (`` ``)
          (SBAR
            (WHNP (WP What))
            (IN if)
            (S
              (NP (DT this))
              (VP (VBZ is)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP
                      (NP (PRP$ my) (NN grannie) (POS 's))
                      (NN money))
                    (VP (VBD was)
                      (VP (VBN given)
                        (NP (PRP me))
                        (PP (IN for))))))))))))
    (. ?) ('' '')))

cc(said-9, And-1)
advmod(said-9, again-2)
advmod(said-9, all-4)
prep(all-4, at-5)
pcomp(at-5, once-6)
nsubj(said-9, he-8)
root(ROOT-0, said-9)
prep_to(said-9, himself-11)
dobj(is-17, himself-11)
mark(is-17, if-15)
nsubj(is-17, this-16)
rcmod(himself-11, is-17)
prep_for(given-24, what-18)
poss(grannie-20, my-19)
poss(money-22, grannie-20)
nsubjpass(given-24, money-22)
auxpass(given-24, was-23)
ccomp(is-17, given-24)
dobj(given-24, me-25)

(ROOT
  (S
    (NP (DT That) (NN night))
    (NP (PRP he))
    (VP (VBD had)
      (NP (DT a) (NN dream)))
    (. .)))

det(night-2, That-1)
tmod(had-4, night-2)
nsubj(had-4, he-3)
root(ROOT-0, had-4)
det(dream-6, a-5)
dobj(had-4, dream-6)

(ROOT
  (S
    (NP (DT The) (CD two) (NNS questions))
    (VP (VBD had)
      (NP
        (NP (DT no) (NN doubt))
        (NP (DT a) (NN share)))
      (PP (IN in)
        (S
          (VP (VBG giving)
            (S
              (NP
                (NP
                  (NP (PRP it))
                  (NP (PRP him)))
                (, ,)
                (CC and)
                (RB perhaps)
                (NP
                  (ADVP (RB also))
                  (NP (DT a) (JJ certain) (NN essay))
                  (PP (IN of)
                    (NP (NNP Lord) (NNP Bacon))))
                (: --))
              (`` ``)
              (PP (IN Of)
                (NP (NNP Building))
                (, ,) ('' '') (NN namely)))
            (: --)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP he))
                (VP (VBD had)
                  (VP (VBN been)
                    (VP (VBG reading)
                      (SBAR (IN before)
                        (S
                          (NP (PRP he))
                          (VP (VBD went)
                            (PP (TO to)
                              (NP (NN bed)))))))))))))))
    (. .)))

det(questions-3, The-1)
num(questions-3, two-2)
nsubj(had-4, questions-3)
root(ROOT-0, had-4)
neg(doubt-6, no-5)
dobj(had-4, doubt-6)
iobj(had-4, doubt-6)
det(share-8, a-7)
dep(doubt-6, share-8)
prepc_in(had-4, giving-10)
dep(giving-10, it-11)
dep(it-11, him-12)
dep(giving-10, perhaps-15)
advmod(it-11, perhaps-15)
conj_and(it-11, perhaps-15)
advmod(essay-19, also-16)
det(essay-19, a-17)
amod(essay-19, certain-18)
dep(it-11, essay-19)
nn(Bacon-22, Lord-21)
prep_of(essay-19, Bacon-22)
dep(it-11, Of-25)
pobj(Of-25, Building-26)
dep(Of-25, namely-29)
dobj(reading-35, which-31)
nsubj(reading-35, he-32)
aux(reading-35, had-33)
aux(reading-35, been-34)
ccomp(giving-10, reading-35)
parataxis(giving-10, reading-35)
mark(went-38, before-36)
nsubj(went-38, he-37)
advcl(reading-35, went-38)
prep_to(went-38, bed-40)

(ROOT
  (NP
    (NP (NNP -LSB-) (NNP Illustration))
    (: :)
    (NP
      (NP (NNP WILLIE) (POS 'S))
      (NNP DREAM) (. .) (NNP -RSB-))))

nn(Illustration-2, -LSB--1)
root(ROOT-0, Illustration-2)
poss(-RSB--8, WILLIE-4)
nn(-RSB--8, DREAM-6)
dep(Illustration-2, -RSB--8)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD dreamed)
        (NP (DT that))
        (, ,)
        (S
          (VP (VBG being)
            (VP (VBN pulled)
              (PRT (RP up))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN middle))
                  (PP (IN of)
                    (NP (DT the) (NN night)))))
              (PP (IN by)
                (NP (PRP$ his) (NN wheel))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD went)
      (PRT (RP down))
      (S
        (VP (TO to)
          (VP (VB go)
            (PP (IN into)
              (NP (DT the) (NN garden)))))))
    (. .)))

nsubj(dreamed-2, He-1)
ccomp(went-19, dreamed-2)
dobj(dreamed-2, that-3)
auxpass(pulled-6, being-5)
vmod(dreamed-2, pulled-6)
prt(pulled-6, up-7)
det(middle-10, the-9)
prep_in(pulled-6, middle-10)
det(night-13, the-12)
prep_of(middle-10, night-13)
poss(wheel-16, his-15)
agent(pulled-6, wheel-16)
nsubj(went-19, he-18)
nsubj(go-22, he-18)
root(ROOT-0, went-19)
prt(went-19, down-20)
aux(go-22, to-21)
xcomp(went-19, go-22)
det(garden-25, the-24)
prep_into(go-22, garden-25)

(ROOT
  (S
    (S (CC But)
      (NP (DT the) (NN moment))
      (NP (PRP he))
      (VP (VBD was)
        (ADVP (RB out))
        (PP (IN of)
          (NP (DT the) (JJ back) (NN door)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD fancied)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBD was)
            (NP
              (NP
                (NP (NN something) (JJ strange))
                (VP (VBG going)
                  (PP (IN on) (IN in)
                    (NP
                      (NP (PRP$ his) (NN room))
                      (PP (IN in)
                        (NP (DT the) (NNS ruins)))))))
              (: --)
              (S
                (S
                  (NP (PRP he))
                  (VP (MD could) (RB not)
                    (VP (VB tell)
                      (NP (WP what)))))
                (, ,)
                (CC but)
                (S
                  (NP (PRP he))
                  (VP (MD must)
                    (VP (VB go)
                      (CC and)
                      (VB see))))))))))
    (. .)))

cc(was-5, But-1)
det(moment-3, the-2)
nsubj(was-5, moment-3)
nsubj(was-5, he-4)
ccomp(fancied-13, was-5)
det(door-10, the-8)
amod(door-10, back-9)
prep_out_of(was-5, door-10)
nsubj(fancied-13, he-12)
root(ROOT-0, fancied-13)
expl(was-15, there-14)
ccomp(fancied-13, was-15)
nsubj(was-15, something-16)
amod(something-16, strange-17)
vmod(something-16, going-18)
dep(going-18, on-19)
poss(room-22, his-21)
prep_in(going-18, room-22)
det(ruins-25, the-24)
prep_in(room-22, ruins-25)
nsubj(tell-30, he-27)
aux(tell-30, could-28)
neg(tell-30, not-29)
dep(something-16, tell-30)
dobj(tell-30, what-31)
nsubj(go-36, he-34)
nsubj(see-38, he-34)
aux(go-36, must-35)
dep(something-16, go-36)
conj_but(tell-30, go-36)
conj_but(tell-30, see-38)
conj_and(go-36, see-38)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP
          (VP (VBD climbed)
            (NP (DT the) (NNS stairs)))
          (CC and)
          (VP (VBD opened)
            (NP (DT the) (NN door))))))
    (, ,)
    (NP (EX there))
    (VP (VBD was)
      (NP
        (NP (NNP Hector) (NNP Macallaster))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP he))
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP (VB be))))))))
      (, ,)
      (ADJP (JJ asleep)
        (PP (IN in)
          (NP (PRP$ his) (NN bed)))))
    (. .)))

advmod(climbed-3, When-1)
nsubj(climbed-3, he-2)
nsubj(opened-7, he-2)
advcl(was-12, climbed-3)
det(stairs-5, the-4)
dobj(climbed-3, stairs-5)
conj_and(climbed-3, opened-7)
advcl(was-12, opened-7)
det(door-9, the-8)
dobj(opened-7, door-9)
expl(was-12, there-11)
root(ROOT-0, was-12)
nn(Macallaster-14, Hector-13)
nsubj(was-12, Macallaster-14)
advmod(ought-17, where-15)
nsubj(ought-17, he-16)
nsubj(be-19, he-16)
rcmod(Macallaster-14, ought-17)
aux(be-19, to-18)
xcomp(ought-17, be-19)
acomp(was-12, asleep-21)
poss(bed-24, his-23)
prep_in(asleep-21, bed-24)

(ROOT
  (S
    (S (CC But)
      (NP (EX there))
      (ADVP (RB _))
      (VP (VBD was)
        (ADJP
          (NP (CD _) (NN something))
          (JJ strange))
        (S
          (VP (VBG going)
            (PRT (RP on))))
        (: ;)
        (SBAR (IN for)
          (S
            (NP
              (NP (DT a) (NN stream))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD came)
                    (S
                      (VP (VBG dashing)
                        (PRT (RP over))
                        (NP
                          (NP (DT the) (NN side))
                          (PP (IN of)
                            (NP (DT the) (JJ wooden) (NN spout)))))))))
              (, ,))
            (VP (VBD was)
              (VP (VBG flowing)
                (ADVP (DT all) (RB round))
                (NP
                  (NP (NNP Hector) (POS 's))
                  (NN bed))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (ADVP (RB away))
      (NP (PRP he))
      (VP (VBD knew) (RB not)
        (VP (VB whither))))
    (. .)))

expl(was-4, there-2)
advmod(was-4, _-3)
root(ROOT-0, was-4)
num(something-6, _-5)
npadvmod(strange-7, something-6)
acomp(was-4, strange-7)
xcomp(was-4, going-8)
prt(going-8, on-9)
mark(flowing-27, for-11)
det(stream-13, a-12)
nsubj(came-16, stream-13)
nsubj(flowing-27, stream-13)
rcmod(stream-13, came-16)
xcomp(came-16, dashing-17)
prt(dashing-17, over-18)
det(side-20, the-19)
dobj(dashing-17, side-20)
det(spout-24, the-22)
amod(spout-24, wooden-23)
prep_of(side-20, spout-24)
aux(flowing-27, was-26)
advcl(was-4, flowing-27)
parataxis(was-4, flowing-27)
dep(round-29, all-28)
advmod(flowing-27, round-29)
poss(bed-32, Hector-30)
dobj(flowing-27, bed-32)
advmod(knew-38, then-35)
advmod(knew-38, away-36)
nsubj(knew-38, he-37)
conj_and(was-4, knew-38)
neg(knew-38, not-39)
dep(knew-38, whither-40)

(ROOT
  (S
    (NP (DT Another) (JJ strange) (NN thing))
    (VP (VBD was) (, ,)
      (SBAR
        (S
          (NP
            (NP (DT that))
            (PP (IN in)
              (NP (DT the) (JJ further) (NN wall))))
          (VP (VBD was)
            (NP
              (NP (DT a) (NN door))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBD was)
                    (ADJP (JJ new)
                      (PP (TO to)
                        (NP (PRP him))))))))))))
    (. .)))

det(thing-3, Another-1)
amod(thing-3, strange-2)
nsubj(was-4, thing-3)
root(ROOT-0, was-4)
nsubj(door-13, that-6)
det(wall-10, the-8)
amod(wall-10, further-9)
prep_in(that-6, wall-10)
cop(door-13, was-11)
det(door-13, a-12)
ccomp(was-4, door-13)
nsubj(new-16, door-13)
cop(new-16, was-15)
rcmod(door-13, new-16)
prep_to(new-16, him-18)

(ROOT
  (S
    (S
      (S
        (NP (PRP He))
        (VP
          (VP (VBD opened)
            (NP (PRP it)))
          (, ,)
          (CC and)
          (VP (VBD found)
            (NP (PRP himself))
            (PP (IN in)
              (NP (DT another) (NN chamber))))
          (, ,)
          (PP (IN like)
            (NP (PRP$ his) (JJ own)))))
      (: ;)
      (CC and)
      (S
        (NP (EX there))
        (ADVP (RB also))
        (VP (VBD lay)
          (NP (DT some) (NN one)))))
    (, ,)
    (NP (PRP he))
    (VP (VBD knew)
      (SBAR (RB not)
        (FRAG
          (WHNP (WP who))))
      (, ,)
      (PP (IN in)
        (NP (DT a) (NN bed)))
      (, ,)
      (PP (IN with)
        (S
          (NP
            (NP (DT a) (NN stream))
            (PP (IN of)
              (NP (NN water))))
          (VP (VBG flowing)
            (NP (DT all))
            (PP (IN around)
              (NP (PRP it)))))))
    (. .)))

nsubj(opened-2, He-1)
nsubj(found-6, He-1)
ccomp(knew-24, opened-2)
dobj(opened-2, it-3)
conj_and(opened-2, found-6)
ccomp(knew-24, found-6)
dobj(found-6, himself-7)
det(chamber-10, another-9)
prep_in(found-6, chamber-10)
conj_and(opened-2, like-12)
ccomp(knew-24, like-12)
poss(own-14, his-13)
prep_like(opened-2, own-14)
expl(lay-19, there-17)
advmod(lay-19, also-18)
conj_and(opened-2, lay-19)
ccomp(knew-24, lay-19)
det(one-21, some-20)
dobj(lay-19, one-21)
nsubj(lay-19, one-21)
nsubj(knew-24, he-23)
root(ROOT-0, knew-24)
dep(who-26, not-25)
dep(knew-24, who-26)
det(bed-30, a-29)
prep_in(knew-24, bed-30)
det(stream-34, a-33)
nsubj(flowing-37, stream-34)
prep_of(stream-34, water-36)
prepc_with(knew-24, flowing-37)
dobj(flowing-37, all-38)
prep_around(flowing-37, it-40)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (ADVP (RB also))
      (NP
        (NP
          (NP (DT a) (JJ second) (NN door))
          (, ,)
          (SBAR
            (WHPP (IN beyond)
              (WHNP (WDT which)))
            (S
              (VP (VBD was)
                (NP (DT a) (JJ third) (NN room)))))
          (, ,))
        (CC and)
        (NP
          (NP (DT a) (JJ third) (NN patient))
          (ADJP (RB asleep)))
        (, ,)
        (CC and)
        (NP
          (NP (DT a) (JJ third) (NN stream))
          (VP (VBG flowing)
            (PP (IN around)
              (NP
                (NP (DT the) (NN bed))
                (, ,)
                (CC and)
                (NP (DT a) (JJ third) (NN door))))
            (PP (IN beyond))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
advmod(was-2, also-3)
det(door-6, a-4)
amod(door-6, second-5)
nsubj(was-2, door-6)
prep_beyond(room-13, door-6)
cop(room-13, was-10)
det(room-13, a-11)
amod(room-13, third-12)
rcmod(door-6, room-13)
det(patient-18, a-16)
amod(patient-18, third-17)
nsubj(was-2, patient-18)
conj_and(door-6, patient-18)
prep_beyond(room-13, patient-18)
amod(patient-18, asleep-19)
det(stream-24, a-22)
amod(stream-24, third-23)
nsubj(was-2, stream-24)
conj_and(door-6, stream-24)
prep_beyond(room-13, stream-24)
vmod(stream-24, flowing-25)
det(bed-28, the-27)
prep_around(flowing-25, bed-28)
det(door-33, a-31)
amod(door-33, third-32)
prep_around(flowing-25, door-33)
conj_and(bed-28, door-33)
prep(flowing-25, beyond-34)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD went)
      (PP (IN from)
        (NP (NN room)))
      (PP (TO to)
        (NP (NN room)))
      (, ,)
      (ADVP (RP on)
        (CC and)
        (RP on))
      (, ,)
      (PP (IN through)
        (NP
          (QP (RB about) (DT a) (CD hundred))
          (JJ such)))
      (, ,)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD thought)))
        (, ,)
        (CC and)
        (S
          (PP (IN at)
            (NP (NN length)))
          (VP (VBD came)
            (PP (TO to)
              (NP
                (NP (DT a) (JJ vaulted) (NN chamber))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD seemed)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (PP (IN over)
                              (NP (DT the) (NN well)))))))))))))))
    (. .)))

nsubj(went-2, He-1)
root(ROOT-0, went-2)
prep_from(went-2, room-4)
prep_to(went-2, room-6)
advmod(went-2, on-8)
advmod(went-2, on-10)
conj_and(on-8, on-10)
quantmod(hundred-15, about-13)
quantmod(hundred-15, a-14)
num(such-16, hundred-15)
prep_through(went-2, such-16)
nsubj(thought-19, he-18)
nsubj(came-24, he-18)
ccomp(went-2, thought-19)
prep_at(came-24, length-23)
ccomp(went-2, came-24)
conj_and(thought-19, came-24)
det(chamber-28, a-26)
amod(chamber-28, vaulted-27)
prep_to(came-24, chamber-28)
nsubj(seemed-31, chamber-28)
nsubj(be-33, chamber-28)
rcmod(chamber-28, seemed-31)
aux(be-33, to-32)
xcomp(seemed-31, be-33)
det(well-36, the-35)
prep_over(be-33, well-36)

(ROOT
  (S
    (S
      (PP (IN From)
        (NP
          (NP (DT the) (NN centre))
          (PP (IN of)
            (NP (DT the) (NN vault)))))
      (VP
        (VP (VBD rose)
          (NP (DT a) (JJ great) (NN chimney)))
        (, ,)
        (CC and)
        (VP
          (PP (IN under)
            (NP (DT the) (NN chimney)))
          (VBD was)
          (NP
            (NP (DT a) (JJ huge) (NN fire))
            (, ,)
            (CC and)
            (ADVP (RB on))
            (NP (DT the) (NN fire))))))
    (VP (VBD stood)
      (NP (DT a) (JJ mighty) (JJ golden) (NN cauldron))
      (, ,)
      (PP (RP up)
        (PP (TO to)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP
                (VP (, ,)
                  (PP (IN through)
                    (NP (DT a) (JJ large) (NN pipe)))
                  (, ,) (VBD came)
                  (NP
                    (NP (DT the) (NN water))
                    (PP (IN of)
                      (NP (DT the) (NN well)))))
                (, ,)
                (CC and)
                (VP (VBD went)
                  (S
                    (VP
                      (VP (VBG pouring)
                        (PRT (RP in))
                        (PP (IN with)
                          (NP (DT a) (JJ great) (NN rushing))))
                      (, ,)
                      (CC and)
                      (VP (VBG hissing))
                      (, ,)
                      (CC and)
                      (VP (VBG bubbling)))))))))))
    (. .)))

det(centre-3, the-2)
prep_from(rose-7, centre-3)
det(vault-6, the-5)
prep_of(centre-3, vault-6)
csubj(stood-25, rose-7)
det(chimney-10, a-8)
amod(chimney-10, great-9)
dobj(rose-7, chimney-10)
det(chimney-15, the-14)
prep_under(fire-19, chimney-15)
cop(fire-19, was-16)
det(fire-19, a-17)
amod(fire-19, huge-18)
conj_and(rose-7, fire-19)
csubj(stood-25, fire-19)
advmod(fire-24, on-22)
det(fire-24, the-23)
conj_and(rose-7, fire-24)
conj_and(fire-19, fire-24)
root(ROOT-0, stood-25)
det(cauldron-29, a-26)
amod(cauldron-29, mighty-27)
amod(cauldron-29, golden-28)
dobj(stood-25, cauldron-29)
prep(stood-25, up-31)
nsubj(came-40, which-33)
nsubj(went-48, which-33)
det(pipe-38, a-36)
amod(pipe-38, large-37)
prep_through(came-40, pipe-38)
prepc_to(up-31, came-40)
det(water-42, the-41)
dobj(came-40, water-42)
det(well-45, the-44)
prep_of(water-42, well-45)
prepc_to(up-31, went-48)
conj_and(came-40, went-48)
ccomp(went-48, pouring-49)
prt(pouring-49, in-50)
det(rushing-54, a-52)
amod(rushing-54, great-53)
prep_with(pouring-49, rushing-54)
ccomp(went-48, hissing-57)
conj_and(pouring-49, hissing-57)
ccomp(went-48, bubbling-60)
conj_and(pouring-49, bubbling-60)

(ROOT
  (S
    (PP (IN From)
      (NP
        (NP (DT the) (JJ other) (NN side))
        (PP (IN of)
          (NP (DT the) (NN cauldron)))))
    (, ,)
    (NP (DT the) (NN water))
    (VP
      (VP (VBD rushed)
        (PRT (RP away))
        (PP (IN through)
          (NP (DT another) (NN pipe)))
        (PP (IN into)
          (NP
            (NP (DT the) (NN trough))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD ran)
                  (PP (IN through)
                    (NP (PDT all) (DT the) (NNS chambers)))))))))
      (, ,)
      (CC and)
      (VP (VBD made)
        (NP
          (NP (DT the) (NNS rivers))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD flowed)
                (NP
                  (NP (DT the) (NNS beds))
                  (PP (IN of)
                    (NP (DT the) (VBG sleeping) (NNS patients))))))))))
    (. .)))

det(side-4, the-2)
amod(side-4, other-3)
prep_from(rushed-11, side-4)
det(cauldron-7, the-6)
prep_of(side-4, cauldron-7)
det(water-10, the-9)
nsubj(rushed-11, water-10)
nsubj(made-27, water-10)
root(ROOT-0, rushed-11)
prt(rushed-11, away-12)
det(pipe-15, another-14)
prep_through(rushed-11, pipe-15)
det(trough-18, the-17)
prep_into(rushed-11, trough-18)
nsubj(ran-20, trough-18)
rcmod(trough-18, ran-20)
predet(chambers-24, all-22)
det(chambers-24, the-23)
prep_through(ran-20, chambers-24)
conj_and(rushed-11, made-27)
det(rivers-29, the-28)
dobj(made-27, rivers-29)
nsubj(flowed-31, rivers-29)
rcmod(rivers-29, flowed-31)
det(beds-33, the-32)
dobj(flowed-31, beds-33)
det(patients-37, the-35)
amod(patients-37, sleeping-36)
prep_of(beds-33, patients-37)

(ROOT
  (S
    (S (CC And)
      (SBAR
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD was)
              (ADJP
                (ADJP (RBS most) (JJ wonderful))
                (PP (IN of)
                  (NP (DT all)))))))
        (: --)
        (PRN
          (PP (IN by)
            (NP (DT the) (NN fire)))))
      (VP (VBD stood)
        (NP (CD two) (NNS angels))
        (, ,)
        (PP (IN with)
          (NP (JJ grand) (JJ lovely) (NNS wings)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP
        (VP (VBD made)
          (NP (DT a) (JJ great) (NN fanning))
          (PP (IN with)
            (NP (PRP$ their) (NNS wings))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB so))
          (VBD blew)
          (NP
            (NP (DT the) (NN fire)
              (PRT (RP up)))
            (ADJP (JJ loud)
              (CC and)
              (JJ strong)))
          (PP (IN about)
            (NP (DT the) (JJ golden) (NN cauldron))))))
    (. .)))

nsubj(wonderful-5, what-2)
cop(wonderful-5, was-3)
advmod(wonderful-5, most-4)
csubj(stood-12, wonderful-5)
prep_of(wonderful-5, all-7)
dep(wonderful-5, by-9)
det(fire-11, the-10)
pobj(by-9, fire-11)
root(ROOT-0, stood-12)
num(angels-14, two-13)
dobj(stood-12, angels-14)
amod(wings-19, grand-17)
amod(wings-19, lovely-18)
prep_with(stood-12, wings-19)
nsubj(made-23, they-22)
nsubj(blew-33, they-22)
conj_and(stood-12, made-23)
det(fanning-26, a-24)
amod(fanning-26, great-25)
dobj(made-23, fanning-26)
poss(wings-29, their-28)
prep_with(made-23, wings-29)
advmod(blew-33, so-32)
conj_and(stood-12, blew-33)
conj_and(made-23, blew-33)
det(fire-35, the-34)
dobj(blew-33, fire-35)
dep(fire-35, up-36)
amod(fire-35, loud-37)
amod(fire-35, strong-39)
conj_and(loud-37, strong-39)
det(cauldron-43, the-41)
amod(cauldron-43, golden-42)
prep_about(blew-33, cauldron-43)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (NNP Willie))
        (VP (VBD looked)
          (PP (IN into)
            (NP (PRP$ their) (NNS faces))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD saw)
      (SBAR
        (SBAR (IN that)
          (S
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (PRP them))))
            (VP (VBD was)
              (NP (PRP$ his) (NN father)))))
        (, ,)
        (CC and)
        (FRAG
          (NP (DT the) (JJ other) (NNP Mr) (NNP Shepherd)))))
    (. .)))

cc(saw-10, And-1)
advmod(looked-4, when-2)
nsubj(looked-4, Willie-3)
advcl(saw-10, looked-4)
poss(faces-7, their-6)
prep_into(looked-4, faces-7)
nsubj(saw-10, he-9)
root(ROOT-0, saw-10)
mark(father-17, that-11)
nsubj(father-17, one-12)
prep_of(one-12, them-14)
cop(father-17, was-15)
poss(father-17, his-16)
ccomp(saw-10, father-17)
det(Shepherd-23, the-20)
amod(Shepherd-23, other-21)
nn(Shepherd-23, Mr-22)
ccomp(saw-10, Shepherd-23)
conj_and(father-17, Shepherd-23)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP
      (VP (VBD gave)
        (NP
          (NP (DT a) (JJ great) (NN cry))
          (PP (IN of)
            (NP (NN delight)))))
      (, ,)
      (CC and)
      (VP (VBD woke)
        (S
          (VP (VBG weeping)))))
    (. .)))

nsubj(gave-3, he-2)
nsubj(woke-11, he-2)
root(ROOT-0, gave-3)
det(cry-6, a-4)
amod(cry-6, great-5)
dobj(gave-3, cry-6)
prep_of(cry-6, delight-8)
conj_and(gave-3, woke-11)
xcomp(woke-11, weeping-12)

(ROOT
  (NP (NNP CHAPTER) (NNP XXIII) (. .)))

nn(XXIII-2, CHAPTER-1)
root(ROOT-0, XXIII-2)

(ROOT
  (S
    (NP (NNP WILLIE) (POS 'S))
    (VP (VBZ PLANS)
      (NP (NNP BLOSSOM)))
    (. .)))

nsubj(PLANS-3, WILLIE-1)
possessive(WILLIE-1, 'S-2)
root(ROOT-0, PLANS-3)
dobj(PLANS-3, BLOSSOM-4)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN morning)))
    (, ,)
    (NP
      (NP (NNP Willie) (POS 's))
      (NN head))
    (VP (VBD was)
      (ADJP (JJ full)
        (PP (IN of)
          (NP (PRP$ his) (NN dream)))))
    (. .)))

det(morning-3, the-2)
prep_in(full-9, morning-3)
poss(head-7, Willie-5)
nsubj(full-9, head-7)
cop(full-9, was-8)
root(ROOT-0, full-9)
poss(dream-12, his-11)
prep_of(full-9, dream-12)

(ROOT
  (FRAG
    (ADJP
      (WHADVP (WRB How))
      (JJ gladly))
    (S (MD would)
      (NP (PRP he))
      (VP (VB have)
        (VP (VBN turned)
          (NP (PRP it))
          (PP (IN into)
            (NP (DT a) (NN reality))))))
    (. !)))

advmod(gladly-2, How-1)
root(ROOT-0, gladly-2)
dep(turned-6, would-3)
nsubj(turned-6, he-4)
aux(turned-6, have-5)
dep(gladly-2, turned-6)
dobj(turned-6, it-7)
det(reality-10, a-9)
prep_into(turned-6, reality-10)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBD was)
        (ADJP (JJ impossible))))
    (: --)
    (CC but)
    (SQ (MD might)
      (NP (PRP he))
      (VP (RB not) (VB do)
        (NP (NN something))
        (PP (IN towards)
          (NP (PRP it))))
      (. ?))))

nsubj(impossible-3, That-1)
cop(impossible-3, was-2)
root(ROOT-0, impossible-3)
aux(do-9, might-6)
nsubj(do-9, he-7)
neg(do-9, not-8)
conj_but(impossible-3, do-9)
dobj(do-9, something-10)
prep_towards(do-9, it-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (ADVP (RB long) (RB ago))
      (VP (VBN seen)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP are)
                    (VP (VBN doomed)
                      (S (RB not)
                        (VP (TO to)
                          (VP (VB realise)
                            (NP (PRP$ their) (NN ideal))))))))))
            (, ,)
            (VP (VBP are)
              (ADVP (RB just))
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (MD will) (RB not)
                      (VP (VB take)
                        (NP
                          (NP (DT the) (JJ first) (NN step))
                          (PP (IN towards)
                            (NP (PRP it))))))))))))))
    (. .)))

nsubj(seen-5, He-1)
aux(seen-5, had-2)
advmod(ago-4, long-3)
advmod(seen-5, ago-4)
root(ROOT-0, seen-5)
mark(those-19, that-6)
nsubjpass(doomed-10, those-7)
nsubj(realise-13, those-7)
nsubj(those-19, those-7)
auxpass(doomed-10, are-9)
rcmod(those-7, doomed-10)
neg(realise-13, not-11)
aux(realise-13, to-12)
xcomp(doomed-10, realise-13)
poss(ideal-15, their-14)
dobj(realise-13, ideal-15)
cop(those-19, are-17)
advmod(those-19, just-18)
ccomp(seen-5, those-19)
nsubj(take-23, those-19)
aux(take-23, will-21)
neg(take-23, not-22)
rcmod(those-19, take-23)
det(step-26, the-24)
amod(step-26, first-25)
dobj(take-23, step-26)
prep_towards(step-26, it-28)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Oh))
    (. !)))

root(ROOT-0, Oh-2)

(ROOT
  (S
    (S
      (NP (DT this))
      (VP (VBZ is)
        (NP (PDT such) (DT a) (JJ little) (NN thing))
        (S
          (VP (TO to)
            (VP (VB do))))))
    (, ,)
    (NP (PRP it))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (NP (DT any) (NN use))))
    (. !) ('' '')))

nsubj(thing-6, this-1)
cop(thing-6, is-2)
predet(thing-6, such-3)
det(thing-6, a-4)
amod(thing-6, little-5)
ccomp(use-15, thing-6)
aux(do-8, to-7)
vmod(thing-6, do-8)
nsubj(use-15, it-10)
aux(use-15, ca-11)
neg(use-15, n't-12)
cop(use-15, be-13)
det(use-15, any-14)
root(ROOT-0, use-15)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP say))
    (. .)))

nsubj(say-2, they-1)
root(ROOT-0, say-2)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP
        (NP (PDT such) (DT a) (NN distance))
        (RB off))
      (SBAR
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP mean))))
        (, ,)
        (CC and)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB give)
                (NP (PRP$ my) (NN life)
                  (S
                    (VP (TO to)
                      (VP (VB have)))))))))))
    (. !) ('' '')))

cc('s-4, And-2)
nsubj('s-4, it-3)
root(ROOT-0, 's-4)
predet(distance-7, such-5)
det(distance-7, a-6)
npadvmod(off-8, distance-7)
advmod('s-4, off-8)
dobj(mean-11, what-9)
nsubj(mean-11, I-10)
dep('s-4, mean-11)
dobj(give-17, what-14)
nsubj(give-17, I-15)
aux(give-17, should-16)
dep('s-4, give-17)
conj_and(mean-11, give-17)
poss(life-19, my-18)
dobj(give-17, life-19)
aux(have-21, to-20)
vmod(life-19, have-21)

(ROOT
  (S
    (S
      (S
        (NP (PRP They))
        (VP (VBP think)))
      (CC and)
      (S
        (NP (PRP they))
        (VP (VBP say)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (MD would)
                (VP (VB give)
                  (NP (PRP$ their) (NN life))
                  (PP (IN for)
                    (NP (PRP it))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB yet))
      (NP (PRP they))
      (VP (MD will) (RB not)
        (VP (VB give)
          (NP (DT a) (JJ single) (JJ hearty) (NN effort)))))
    (. .)))

nsubj(think-2, They-1)
root(ROOT-0, think-2)
nsubj(say-5, they-4)
conj_and(think-2, say-5)
mark(give-9, that-6)
nsubj(give-9, they-7)
aux(give-9, would-8)
ccomp(say-5, give-9)
poss(life-11, their-10)
dobj(give-9, life-11)
prep_for(give-9, it-13)
advmod(give-20, yet-16)
nsubj(give-20, they-17)
aux(give-20, will-18)
neg(give-20, not-19)
conj_and(think-2, give-20)
det(effort-24, a-21)
amod(effort-24, single-22)
amod(effort-24, hearty-23)
dobj(give-20, effort-24)

(ROOT
  (S
    (ADVP (RB Hence))
    (NP (PRP they))
    (VP
      (ADVP (RB just))
      (VBP stop)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP they))
          (VP
            (VP (VBP are))
            (, ,)
            (CC or)
            (ADVP (RB rather))
            (VP (VBP go)
              (PRT (RP back)
                (CC and)
                (RP back))
              (SBAR (IN until)
                (S
                  (NP (PRP they))
                  (VP (VBP do) (RB not)
                    (VP (VB care)
                      (NP (DT a) (NN bit))
                      (PP (IN for)
                        (NP (DT the) (NNS thoughts)))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBD used)
                            (S
                              (VP (TO to)
                                (VP (VB think)
                                  (ADJP (RB so) (JJ great))))))))
                      (SBAR (IN that)
                        (S
                          (NP (PRP they))
                          (VP (VBZ cherished)
                            (NP (PRP them))
                            (PP (IN for)
                              (NP
                                (NP (DT the) (NN glory))
                                (PP (IN of)
                                  (S
                                    (VP (VBG having)
                                      (VP (VBN thought)
                                        (NP (PRP them))))))))))))))))))))
    (. .)))

advmod(stop-4, Hence-1)
nsubj(stop-4, they-2)
advmod(stop-4, just-3)
root(ROOT-0, stop-4)
advmod(are-7, where-5)
nsubj(are-7, they-6)
nsubj(go-11, they-6)
advcl(stop-4, are-7)
advmod(go-11, rather-10)
advcl(stop-4, go-11)
conj_or(are-7, go-11)
prt(go-11, back-12)
cc(back-12, and-13)
dep(back-12, back-14)
mark(care-19, until-15)
nsubj(care-19, they-16)
aux(care-19, do-17)
neg(care-19, not-18)
advcl(go-11, care-19)
det(bit-21, a-20)
dobj(care-19, bit-21)
det(thoughts-24, the-23)
prep_for(care-19, thoughts-24)
nsubj(used-26, they-25)
nsubj(think-28, they-25)
dep(care-19, used-26)
aux(think-28, to-27)
xcomp(used-26, think-28)
advmod(great-30, so-29)
acomp(think-28, great-30)
mark(cherished-33, that-31)
nsubj(cherished-33, they-32)
ccomp(care-19, cherished-33)
dobj(cherished-33, them-34)
det(glory-37, the-36)
prep_for(cherished-33, glory-37)
aux(thought-40, having-39)
prepc_of(glory-37, thought-40)
dobj(thought-40, them-41)

(ROOT
  (S (CC But)
    (NP
      (NP (RB even) (DT the) (JJ wretched) (NNS people))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD set)
            (NP (PRP$ their) (NNS hearts))
            (PP (IN on)
              (S
                (VP (VBG making)
                  (NP (NN money)))))))))
    (, ,)
    (VP (VBP begin)
      (PP (IN by)
        (S
          (VP (VBG saving)
            (NP
              (NP
                (NP (DT the) (JJ first) (NN penny))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (MD can)))))
              (, ,)
              (CC and)
              (NP
                (NP (RB then) (DT the) (JJ next))
                (CC and)
                (NP (DT the) (JJ next))))))))
    (. .)))

cc(begin-14, But-1)
advmod(people-5, even-2)
det(people-5, the-3)
amod(people-5, wretched-4)
nsubj(set-7, people-5)
nsubj(begin-14, people-5)
rcmod(people-5, set-7)
poss(hearts-9, their-8)
dobj(set-7, hearts-9)
prepc_on(set-7, making-11)
dobj(making-11, money-12)
root(ROOT-0, begin-14)
prepc_by(begin-14, saving-16)
det(penny-19, the-17)
amod(penny-19, first-18)
dobj(saving-16, penny-19)
nsubj(can-21, they-20)
rcmod(penny-19, can-21)
advmod(next-26, then-24)
det(next-26, the-25)
dobj(saving-16, next-26)
conj_and(penny-19, next-26)
det(next-29, the-28)
conj_and(penny-19, next-29)
conj_and(next-26, next-29)

(ROOT
  (S
    (S (CC And)
      (NP (PRP they))
      (VP (VBP have)
        (NP (PRP$ their) (NN reward))))
    (: :)
    (S
      (NP (PRP they))
      (VP (VBP get)
        (NP
          (NP (DT the) (NNS riches))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP want) (: --)
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN loss))
                    (PP (IN of)
                      (NP (PRP$ their) (NNS souls)))))
                (SBAR
                  (SBAR
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ sure))))))
                  (, ,)
                  (CC but)
                  (SBAR (IN that)
                    (S
                      (NP (PRP they))
                      (VP (VBD did) (RB not)
                        (VP (VB think)
                          (PP (IN of)))))))))))))
    (. .)))

cc(have-3, And-1)
nsubj(have-3, they-2)
root(ROOT-0, have-3)
poss(reward-5, their-4)
dobj(have-3, reward-5)
nsubj(get-8, they-7)
parataxis(have-3, get-8)
det(riches-10, the-9)
dobj(get-8, riches-10)
nsubj(want-12, they-11)
rcmod(riches-10, want-12)
det(loss-16, the-15)
prep_with(want-12, loss-16)
poss(souls-19, their-18)
prep_of(loss-16, souls-19)
aux(sure-22, to-20)
cop(sure-22, be-21)
ccomp(want-12, sure-22)
mark(think-29, that-25)
nsubj(think-29, they-26)
aux(think-29, did-27)
neg(think-29, not-28)
ccomp(want-12, think-29)
conj_but(sure-22, think-29)
prep(think-29, of-30)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS people))
        (PP (IN on)
          (NP
            (NP (DT the) (JJ other) (NN hand))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP want)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ noble)
                          (CC and)
                          (JJ good))))))))))
        (, ,))
      (VP (VBP begin)
        (PP (IN by)
          (S
            (VP
              (VP (VBG taking)
                (NP
                  (NP (DT the) (JJ first) (NN thing))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ comes)
                        (PP (TO to)
                          (NP (PRP$ their) (NN hand))))))))
              (CC and)
              (VP (VBG doing)
                (NP (DT that) (NN right))))))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (PRP they))
      (VP (VBP go)
        (PRT (RP on))
        (PP (IN from)
          (NP (CD one) (NN thing)))
        (PP (TO to)
          (NP (DT another)))
        (, ,)
        (S
          (VP (VBG growing)
            (S
              (ADJP (JJR better)
                (CC and)
                (JJR better)))))))
    (. .)))

det(people-2, The-1)
nsubj(begin-15, people-2)
det(hand-6, the-4)
amod(hand-6, other-5)
prep_on(people-2, hand-6)
nsubj(want-8, hand-6)
nsubj(noble-11, hand-6)
nsubj(good-13, hand-6)
rcmod(hand-6, want-8)
aux(noble-11, to-9)
cop(noble-11, be-10)
xcomp(want-8, noble-11)
xcomp(want-8, good-13)
conj_and(noble-11, good-13)
root(ROOT-0, begin-15)
prepc_by(begin-15, taking-17)
det(thing-20, the-18)
amod(thing-20, first-19)
dobj(taking-17, thing-20)
nsubj(comes-22, thing-20)
rcmod(thing-20, comes-22)
poss(hand-25, their-24)
prep_to(comes-22, hand-25)
prepc_by(begin-15, doing-27)
conj_and(taking-17, doing-27)
det(right-29, that-28)
dobj(doing-27, right-29)
conj_and(begin-15, so-32)
nsubj(go-34, they-33)
ccomp(begin-15, go-34)
prt(go-34, on-35)
num(thing-38, one-37)
prep_from(go-34, thing-38)
prep_to(go-34, another-40)
xcomp(go-34, growing-42)
acomp(growing-42, better-43)
acomp(growing-42, better-45)
conj_and(better-43, better-45)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ same) (NN way)))
    (, ,)
    (S
      (SBAR (IN although)
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB have)
              (VP (VBN been)
                (ADJP (JJ absurd)
                  (PP (IN in)
                    (NP (NNP Willie))))
                (S
                  (VP (TO to)
                    (VP (VB rack)
                      (NP (PRP$ his) (NN brain))
                      (PP (IN for)
                        (NP (DT some) (NN scheme))))))
                (PP (IN by)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (TO to)
                        (VP (VB restore)
                          (NP (PDT such) (DT a) (JJ grand) (NN building))
                          (PP (IN as)
                            (NP (DT the) (NNP Priory)))))))))))))
      (, ,)
      (NP (PRP he))
      (VP (MD could)
        (ADVP (RB yet))
        (VP (VB bethink)
          (NP (PRP himself))
          (SBAR (IN that)
            (S
              (NP (DT the) (JJ hundredth) (NN room))
              (VP
                (VP (VBD did) (RB not)
                  (VP (VB come)
                    (PP (IN next)
                      (NP (DT the) (JJ first)))))
                (, ,)
                (CC neither)
                (VP (VBD did)
                  (NP (DT the) (JJ third)))))))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NN one))
        (PP (IN after)
          (NP (DT the) (JJ first))))
      (VP (VBD was)
        (NP (DT the) (NN second))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD might)
        (VP (VB do)
          (NP (NN something))
          (PP (IN towards)
            (NP
              (NP (DT the) (NN existence))
              (PP (IN of)
                (NP (DT that))))))))
    (. .)))

det(way-4, the-2)
amod(way-4, same-3)
prep_in(bethink-36, way-4)
mark(absurd-11, although-6)
nsubj(absurd-11, it-7)
nsubj(rack-15, it-7)
aux(absurd-11, would-8)
aux(absurd-11, have-9)
cop(absurd-11, been-10)
advcl(bethink-36, absurd-11)
prep_in(absurd-11, Willie-13)
aux(rack-15, to-14)
xcomp(absurd-11, rack-15)
poss(brain-17, his-16)
dobj(rack-15, brain-17)
det(scheme-20, some-19)
prep_for(rack-15, scheme-20)
nsubj(restore-24, which-22)
aux(restore-24, to-23)
prepc_by(absurd-11, restore-24)
predet(building-28, such-25)
det(building-28, a-26)
amod(building-28, grand-27)
dobj(restore-24, building-28)
det(Priory-31, the-30)
prep_as(restore-24, Priory-31)
nsubj(bethink-36, he-33)
aux(bethink-36, could-34)
advmod(bethink-36, yet-35)
root(ROOT-0, bethink-36)
dobj(bethink-36, himself-37)
mark(come-44, that-38)
det(room-41, the-39)
amod(room-41, hundredth-40)
nsubj(come-44, room-41)
aux(come-44, did-42)
neg(come-44, not-43)
ccomp(bethink-36, come-44)
det(first-47, the-46)
prep_next(come-44, first-47)
dep(come-44, neither-49)
conj(come-44, did-50)
det(third-52, the-51)
dobj(did-50, third-52)
det(one-55, the-54)
nsubj(second-61, one-55)
det(first-58, the-57)
prep_after(one-55, first-58)
cop(second-61, was-59)
det(second-61, the-60)
conj_and(bethink-36, second-61)
nsubj(do-66, he-64)
aux(do-66, might-65)
conj_and(bethink-36, do-66)
dobj(do-66, something-67)
det(existence-70, the-69)
prep_towards(do-66, existence-70)
prep_of(existence-70, that-72)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD went)
        (PRT (RP out))
        (PP
          (ADVP (RB immediately))
          (IN after)
          (NP (NN breakfast))))
      (, ,)
      (CC and)
      (VP (VBD began)
        (S
          (VP (VBG peering)
            (PP (IN about)
              (NP (DT the) (NNS ruins)))
            (S
              (VP (TO to)
                (VP (VB see)
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (DT the) (JJ second) (NN room))
                      (VP (MD might)
                        (VP (VB be))))))))))))
    (. .)))

nsubj(went-2, He-1)
nsubj(began-9, He-1)
root(ROOT-0, went-2)
prt(went-2, out-3)
advmod(went-2, immediately-4)
prep_after(went-2, breakfast-6)
conj_and(went-2, began-9)
xcomp(began-9, peering-10)
det(ruins-13, the-12)
prep_about(peering-10, ruins-13)
aux(see-15, to-14)
xcomp(peering-10, see-15)
advmod(be-21, where-16)
det(room-19, the-17)
amod(room-19, second-18)
nsubj(be-21, room-19)
aux(be-21, might-20)
advcl(see-15, be-21)

(ROOT
  (S
    (PP (TO To)
      (NP (PRP$ his) (NN delight)))
    (NP (PRP he))
    (VP (VBD saw)
      (SBAR (IN that)
        (S (, ,)
          (PP (IN with)
            (NP (DT a) (JJ little) (NN contrivance)))
          (, ,)
          (NP (PRP it))
          (VP (MD could)
            (VP (VB be)
              (VP (VBN built)
                (PP (IN on)
                  (NP
                    (NP (DT the) (JJ other) (NN side))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN wall))
                        (PP (IN of)
                          (NP
                            (NP (NNP Hector) (POS 's))
                            (NN room)))))))))))))
    (. .)))

poss(delight-3, his-2)
prep_to(saw-5, delight-3)
nsubj(saw-5, he-4)
root(ROOT-0, saw-5)
mark(built-16, that-6)
det(contrivance-11, a-9)
amod(contrivance-11, little-10)
prep_with(built-16, contrivance-11)
nsubjpass(built-16, it-13)
aux(built-16, could-14)
auxpass(built-16, be-15)
ccomp(saw-5, built-16)
det(side-20, the-18)
amod(side-20, other-19)
prep_on(built-16, side-20)
det(wall-23, the-22)
prep_of(side-20, wall-23)
poss(room-27, Hector-25)
prep_of(wall-23, room-27)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (NP
        (NP (RB plenty))
        (PP (IN of)
          (NP (NN money))))
      (PP (IN for)
        (S
          (NP
            (NP (PRP it))
            (, ,)
            (NP
              (NP (PRP$ his) (NN grannie) (POS 's))
              (NN legacy)))
          (RB not)
          (VP (VBG being)
            (VP
              (ADVP (RB yet))
              (VBN touched))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
dobj(had-2, plenty-3)
prep_of(plenty-3, money-5)
nsubjpass(touched-16, it-7)
poss(grannie-10, his-9)
poss(legacy-12, grannie-10)
appos(it-7, legacy-12)
neg(touched-16, not-13)
auxpass(touched-16, being-14)
advmod(touched-16, yet-15)
prepc_for(had-2, touched-16)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD thought)
        (NP (PRP it))
        (PP (DT all) (IN over)
          (NP (PRP himself))))
      (, ,)
      (VP (VBD talked)
        (NP (PRP it))
        (PP
          (ADVP (DT all))
          (IN over) (IN with)
          (NP (PRP$ his) (NN father))))
      (, ,)
      (CC and)
      (ADVP (RB then))
      (VP (VBN consulted)
        (NP (PRP it))
        (ADVP (DT all) (RP over))
        (PP (IN with)
          (NP (NNP Spelman)))))
    (. .)))

nsubj(thought-2, He-1)
nsubj(talked-8, He-1)
nsubj(consulted-18, He-1)
root(ROOT-0, thought-2)
dobj(thought-2, it-3)
dep(thought-2, all-4)
prep_over(thought-2, himself-6)
conj_and(thought-2, talked-8)
dobj(talked-8, it-9)
advmod(talked-8, all-10)
dep(talked-8, over-11)
poss(father-14, his-13)
prep_with(talked-8, father-14)
advmod(consulted-18, then-17)
conj_and(thought-2, consulted-18)
dobj(consulted-18, it-19)
dep(over-21, all-20)
advmod(consulted-18, over-21)
prep_with(consulted-18, Spelman-23)

(ROOT
  (S
    (NP (DT The) (NN end))
    (VP (VBD was)
      (PRN (, ,)
        (SBAR (IN that)
          (S
            (PP (IN without)
              (S
                (ADVP (RB nearly))
                (VP (VBG spending)
                  (NP (PRP$ his) (JJ little) (NN store)))))
            (, ,)
            (NP (PRP he))
            (VP (VBD had)
              (VP (, ,)
                (SBAR (IN before)
                  (S
                    (NP (DT the) (NN time))
                    (VP (VBD came)
                      (PP (IN for)
                        (NP (PRP$ his) (NN return)))
                      (PP (TO to)
                        (NP (DT the) (NN college))))))))))
        (, ,))
      (VP (VBN built)
        (NP (DT another) (NN room))))
    (. .)))

det(end-2, The-1)
nsubjpass(built-27, end-2)
auxpass(built-27, was-3)
mark(came-19, that-5)
advmod(spending-8, nearly-7)
prepc_without(came-19, spending-8)
poss(store-11, his-9)
amod(store-11, little-10)
dobj(spending-8, store-11)
nsubj(came-19, he-13)
aux(came-19, had-14)
mark(came-19, before-16)
det(time-18, the-17)
nsubj(came-19, time-18)
parataxis(built-27, came-19)
poss(return-22, his-21)
prep_for(came-19, return-22)
det(college-25, the-24)
prep_to(came-19, college-25)
root(ROOT-0, built-27)
det(room-29, another-28)
dobj(built-27, room-29)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (DT the) (NN garret))
        (VP (VBD was)
          (ADJP (JJ full)
            (PP (IN of)
              (NP
                (NP (PRP$ his) (NN grandmother) (POS 's))
                (NN furniture)))))))
    (, ,)
    (NP (NN nothing))
    (VP (VBD was)
      (NP
        (NP (JJR easier))
        (SBAR
          (SBAR (IN than)
            (S
              (VP (TO to)
                (VP (VB fit)
                  (NP (PRP it))
                  (PRT (RP up))))))
          (: --)
          (CC and)
          (SBAR (IN that)
            (FRAG
              (ADVP (RB very) (RB nicely) (RB too)))))))
    (. .)))

mark(full-5, As-1)
det(garret-3, the-2)
nsubj(full-5, garret-3)
cop(full-5, was-4)
advcl(easier-14, full-5)
poss(grandmother-8, his-7)
poss(furniture-10, grandmother-8)
prep_of(full-5, furniture-10)
nsubj(easier-14, nothing-12)
cop(easier-14, was-13)
root(ROOT-0, easier-14)
mark(fit-17, than-15)
aux(fit-17, to-16)
dep(easier-14, fit-17)
dobj(fit-17, it-18)
prt(fit-17, up-19)
mark(too-25, that-22)
advmod(too-25, very-23)
advmod(too-25, nicely-24)
dep(easier-14, too-25)
conj_and(fit-17, too-25)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD remained)
      (ADVP (RB only))
      (S
        (VP (TO to)
          (VP (VB find)
            (NP
              (NP (DT an) (NN occupant))
              (PP (IN for)
                (NP (PRP it))))))))
    (. .)))

nsubj(remained-2, It-1)
nsubj(find-5, It-1)
root(ROOT-0, remained-2)
advmod(remained-2, only-3)
aux(find-5, to-4)
xcomp(remained-2, find-5)
det(occupant-7, an-6)
dobj(find-5, occupant-7)
prep_for(occupant-7, it-9)

(ROOT
  (S
    (S
      (S
        (NP (DT This))
        (VP (MD would)
          (VP (VB have)
            (VP (VBN been)
              (ADJP (RB easy) (JJ enough))
              (PP
                (ADVP (RB also))
                (IN without)
                (S
                  (VP (VBG going)
                    (ADVP (RB far))
                    (PP (IN from)
                      (NP (DT the) (NN door))))))))))
      (, ,)
      (CC but)
      (S
        (NP
          (NP (DT both) (NNP Willie))
          (CC and)
          (NP (PRP$ his) (NN father)))
        (VP
          (VP (VBD were)
            (NP (JJ practical) (NNS men)))
          (, ,)
          (CC and)
          (VP
            (ADVP (RB therefore))
            (MD could) (RB not)
            (VP (VB be)
              (ADJP (JJ content)
                (PP (IN with)
                  (S
                    (ADVP (RB merely))
                    (VP (VBG doing)
                      (ADJP (JJ good)))))))))))
    (: :)
    (S
      (NP (PRP they))
      (VP (VBD wanted)
        (S
          (VP (TO to)
            (VP (VB do)
              (ADJP
                (ADJP (RB as) (RB much) (JJ good))
                (SBAR (IN as)
                  (S
                    (NP (PRP they))
                    (VP (MD could))))))))))
    (. .)))

nsubj(enough-6, This-1)
aux(enough-6, would-2)
aux(enough-6, have-3)
cop(enough-6, been-4)
advmod(enough-6, easy-5)
root(ROOT-0, enough-6)
advmod(enough-6, also-7)
prepc_without(enough-6, going-9)
det(door-13, the-12)
prep_far_from(going-9, door-13)
det(Willie-17, both-16)
nsubj(men-23, Willie-17)
nsubj(content-30, Willie-17)
poss(father-20, his-19)
conj_and(Willie-17, father-20)
nsubj(men-23, father-20)
cop(men-23, were-21)
amod(men-23, practical-22)
conj_but(enough-6, men-23)
advmod(content-30, therefore-26)
aux(content-30, could-27)
neg(content-30, not-28)
cop(content-30, be-29)
conj_but(enough-6, content-30)
conj_and(men-23, content-30)
advmod(doing-33, merely-32)
prepc_with(content-30, doing-33)
acomp(doing-33, good-34)
nsubj(wanted-37, they-36)
nsubj(good-42, they-36)
parataxis(enough-6, wanted-37)
aux(good-42, to-38)
dep(good-42, do-39)
advmod(good-42, as-40)
advmod(good-42, much-41)
xcomp(wanted-37, good-42)
mark(could-45, as-43)
nsubj(could-45, they-44)
dep(good-42, could-45)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (MD would) (RB not)
        (ADVP (RB therefore))
        (VP (VB satisfy)
          (S
            (NP (PRP them))
            (VP (TO to)
              (VP (VB put)
                (PP (IN into)
                  (NP (PRP$ their) (JJ new) (NN room)))
                (PP (JJ such)
                  (NP (DT a) (NN person))))))))
      (: --)
      (VP (VBP say))
      (, ,)
      (PP (IN as)
        (NP
          (NP (NNP Mrs) (NNP Wilson))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (MD could)
                (VP (VB get)
                  (PRT (RP on))
                  (ADVP
                    (ADVP (RB pretty) (RB well))
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (PRP she))
                        (VP
                          (VP (VBD was))
                          (, ,)
                          (SBAR (IN though)
                            (S
                              (NP (PRP she))
                              (VP (MD might)
                                (VP (VB have)
                                  (VP (VBN been)
                                    (VP (VBN made)
                                      (S
                                        (ADJP (RBR more) (JJ comfortable))))))))))))))))))))
    (. .)))

nsubj(satisfy-5, It-1)
aux(satisfy-5, would-2)
neg(satisfy-5, not-3)
advmod(satisfy-5, therefore-4)
root(ROOT-0, satisfy-5)
dobj(satisfy-5, them-6)
nsubj(put-8, them-6)
aux(put-8, to-7)
xcomp(satisfy-5, put-8)
poss(room-12, their-10)
amod(room-12, new-11)
prep_into(put-8, room-12)
prep(put-8, such-13)
det(person-15, a-14)
dep(such-13, person-15)
dep(satisfy-5, say-17)
nn(Wilson-21, Mrs-20)
prep_as(satisfy-5, Wilson-21)
nsubj(get-25, Wilson-21)
aux(get-25, could-24)
rcmod(Wilson-21, get-25)
prt(get-25, on-26)
advmod(well-28, pretty-27)
advmod(get-25, well-28)
advmod(was-31, where-29)
nsubj(was-31, she-30)
advcl(well-28, was-31)
mark(made-38, though-33)
nsubjpass(made-38, she-34)
aux(made-38, might-35)
aux(made-38, have-36)
auxpass(made-38, been-37)
advcl(was-31, made-38)
advmod(comfortable-40, more-39)
xcomp(made-38, comfortable-40)

(ROOT
  (S (CC But)
    (VP (VB suppose)
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD could)
            (VP (VB find)
              (NP
                (NP
                  (NP (DT the) (JJ sickly) (NN mother))
                  (PP (IN of)
                    (NP (DT a) (JJ large) (NN family))))
                (PRN (, ,)
                  (SBAR
                    (WHNP (WP whom))
                    (S
                      (NP
                        (NP (DT a) (JJ few) (NNS weeks))
                        (PP (IN of)
                          (NP (NN change))))
                      (, ,)
                      (PP (IN with)
                        (NP
                          (NP
                            (NP (DT the) (JJ fine) (NN air))
                            (PP (IN from)
                              (NP (DT the) (NNS hills))))
                          (CC and)
                          (NP
                            (NP (DT the) (JJ wonderful) (NN water))
                            (PP (IN from)
                              (NP
                                (NP (DT the) (NN Prior) (POS 's))
                                (NN well))))))
                      (, ,)
                      (VP (MD would)
                        (VP (VB restore)
                          (PP (TO to)
                            (NP
                              (NP (NN strength)
                                (CC and)
                                (NNS cheerfulness))
                              (, ,)
                              (SBAR
                                (WHNP
                                  (WHNP (WRB how) (RB much))
                                  (ADJP (RBR more) (JJ good)))
                                (S
                                  (VP (MD would)
                                    (NP (PRP they))
                                    (S
                                      (VP (RB not)
                                        (VP (VB be)
                                          (VP (VBG doing)
                                            (PP (IN in)
                                              (NP
                                                (NP (DT that) (NN way))
                                                (: --)
                                                (S
                                                  (VP (VBG seeing)
                                                    (SBAR (IN that)
                                                      (S
                                                        (S
                                                          (VP (TO to)
                                                            (VP (VB help)
                                                              (NP (DT a) (NN mother))
                                                              (PP (IN with)
                                                                (NP (NNS children))))))
                                                        (VP (VBZ is)
                                                          (S
                                                            (VP (TO to)
                                                              (VP (VB help)
                                                                (NP (PDT all) (DT the) (NNS children))
                                                                (ADVP (RB as) (RB well)))))))))))))))))))))))))
                  (, ,))
                (CONJP (RB not) (TO to) (VB mention))
                (NP
                  (NP (DT the) (NN husband))
                  (CC and)
                  (NP
                    (NP (DT the) (NNS friends))
                    (PP (IN of)
                      (NP (DT the) (NN family)))))))))))
    (. !)))

cc(suppose-2, But-1)
root(ROOT-0, suppose-2)
nsubj(find-5, they-3)
aux(find-5, could-4)
ccomp(suppose-2, find-5)
det(mother-8, the-6)
amod(mother-8, sickly-7)
dobj(find-5, mother-8)
det(family-12, a-10)
amod(family-12, large-11)
prep_of(mother-8, family-12)
dobj(restore-39, whom-14)
det(weeks-17, a-15)
amod(weeks-17, few-16)
nsubj(restore-39, weeks-17)
prep_of(weeks-17, change-19)
det(air-24, the-22)
amod(air-24, fine-23)
prep_with(restore-39, air-24)
det(hills-27, the-26)
prep_from(air-24, hills-27)
det(water-31, the-29)
amod(water-31, wonderful-30)
conj_and(air-24, water-31)
prep_with(restore-39, water-31)
det(Prior-34, the-33)
poss(well-36, Prior-34)
prep_from(water-31, well-36)
aux(restore-39, would-38)
dep(mother-8, restore-39)
prep_to(restore-39, strength-41)
prep_to(restore-39, cheerfulness-43)
conj_and(strength-41, cheerfulness-43)
advmod(much-46, how-45)
nsubj(would-49, much-46)
advmod(good-48, more-47)
amod(much-46, good-48)
rcmod(strength-41, would-49)
dobj(would-49, they-50)
neg(doing-53, not-51)
aux(doing-53, be-52)
dep(would-49, doing-53)
det(way-56, that-55)
prep_in(doing-53, way-56)
dep(way-56, seeing-58)
mark(is-66, that-59)
aux(help-61, to-60)
csubj(is-66, help-61)
det(mother-63, a-62)
dobj(help-61, mother-63)
prep_with(help-61, children-65)
ccomp(seeing-58, is-66)
aux(help-68, to-67)
xcomp(is-66, help-68)
predet(children-71, all-69)
det(children-71, the-70)
dobj(help-68, children-71)
advmod(well-73, as-72)
mwe(well-73, as-72)
advmod(help-68, well-73)
det(husband-79, the-78)
dobj(find-5, husband-79)
conj_and(mother-8, husband-79)
det(friends-82, the-81)
conj_and(mother-8, friends-82)
conj_and(husband-79, friends-82)
det(family-85, the-84)
prep_of(friends-82, family-85)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (ADVP (RB plenty))
      (ADJP (JJ such)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN found)
                (PP (IN amongst)
                  (NP
                    (NP (DT the) (NNS patients))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBD had)
                          (S
                            (VP (TO to)
                              (VP (VB attend)
                                (NP (NN while))
                                (PP (IN at)
                                  (NP (NN college)))))))))))))))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
advmod(were-2, plenty-3)
acomp(were-2, such-4)
aux(found-7, to-5)
auxpass(found-7, be-6)
xcomp(such-4, found-7)
det(patients-10, the-9)
prep_amongst(found-7, patients-10)
nsubj(had-12, he-11)
nsubj(attend-14, he-11)
rcmod(patients-10, had-12)
aux(attend-14, to-13)
xcomp(had-12, attend-14)
dobj(attend-14, while-15)
prep_at(attend-14, college-17)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN expense))
        (PP (IN of)
          (NP (NN living))))
      (VP (VBD was) (RB not)
        (ADJP (JJ great)
          (PP (IN at)
            (NP (NNP Priory) (NNPS Leas))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Mr) (NNP MacMichael))
      (VP (VBD was)
        (ADJP (JJ willing)
          (S
            (VP
              (VP (TO to)
                (VP (VB bear)
                  (NP (DT that))))
              (, ,)
              (CONJP (IN if) (RB only))
              (VP (TO to)
                (VP (VB test)
                  (NP
                    (NP (DT the) (NNS influences))
                    (PP (IN of)
                      (NP (DT the) (NN water)
                        (CC and)
                        (NN climate))))
                  (PP (IN upon)
                    (NP (NNS strangers))))))))))
    (. .)))

det(expense-2, The-1)
nsubj(great-7, expense-2)
prep_of(expense-2, living-4)
cop(great-7, was-5)
neg(great-7, not-6)
root(ROOT-0, great-7)
nn(Leas-10, Priory-9)
prep_at(great-7, Leas-10)
nn(MacMichael-14, Mr-13)
nsubj(willing-16, MacMichael-14)
cop(willing-16, was-15)
conj_and(great-7, willing-16)
aux(bear-18, to-17)
dep(willing-16, bear-18)
dobj(bear-18, that-19)
aux(test-24, to-23)
dep(willing-16, test-24)
conj_only(bear-18, test-24)
det(influences-26, the-25)
dobj(test-24, influences-26)
det(water-29, the-28)
prep_of(influences-26, water-29)
prep_of(influences-26, climate-31)
conj_and(water-29, climate-31)
prep_upon(test-24, strangers-33)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (ADVP (RB not)
            (PP (IN by)
              (NP (DT any) (NNS means))))
          (NP
            (NP (DT the) (JJS best) (NN season))
            (PP (IN for)
              (NP (DT the) (NN experiment)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB yet))
      (ADJP (RB thoroughly) (JJ successful))
      (PP (IN with)
        (NP
          (NP (DT the)
            (ADJP (JJ pale) (JJ rheumatic))
            (NN mother))
          (PP (IN of)
            (NP (CD six)))
          (, ,)
          (SBAR
            (WHNP (WP whom))
            (S
              (NP (NNP Willie))
              (ADVP (RB first))
              (VP (VBD sent)
                (NP (NN home))
                (PP (TO to)
                  (NP
                    (NP (PRP$ his) (NN father) (POS 's))
                    (NN care)))))))))
    (. .)))

mark(season-10, Although-1)
nsubj(season-10, it-2)
cop(season-10, was-3)
neg(season-10, not-4)
det(means-7, any-6)
prep_by(not-4, means-7)
det(season-10, the-8)
amod(season-10, best-9)
advcl(successful-19, season-10)
det(experiment-13, the-12)
prep_for(season-10, experiment-13)
nsubj(successful-19, it-15)
cop(successful-19, was-16)
advmod(successful-19, yet-17)
advmod(successful-19, thoroughly-18)
root(ROOT-0, successful-19)
det(mother-24, the-21)
amod(rheumatic-23, pale-22)
amod(mother-24, rheumatic-23)
prep_with(successful-19, mother-24)
dobj(sent-31, mother-24)
prep_of(mother-24, six-26)
nsubj(sent-31, Willie-29)
advmod(sent-31, first-30)
rcmod(mother-24, sent-31)
dobj(sent-31, home-32)
poss(father-35, his-34)
poss(care-37, father-35)
prep_to(sent-31, care-37)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD returned)
        (PP (TO to)
          (NP (PRP$ her) (NNS children)))
        (PP (IN at)
          (NP (NNP Christmas)))
        (, ,)
        (S
          (VP (VBG comparatively)
            (NP
              (NP (DT a) (JJ hale) (NN woman))
              (, ,)
              (ADJP (JJ capable)
                (PP (IN of)
                  (S
                    (VP (VBG making)
                      (NP (PRP them)))))))))))
    (CC and)
    (S
      (NP
        (NP (NN everybody))
        (PP (IN about)
          (NP (PRP her))))
      (ADJP (RB twice) (RB as) (JJ happy)
        (PP (IN as)
          (ADVP (RB before)))))
    (. .)))

nsubj(returned-2, She-1)
nsubj(happy-24, She-1)
root(ROOT-0, returned-2)
poss(children-5, her-4)
prep_to(returned-2, children-5)
prep_at(returned-2, Christmas-7)
xcomp(returned-2, comparatively-9)
det(woman-12, a-10)
amod(woman-12, hale-11)
dobj(comparatively-9, woman-12)
amod(woman-12, capable-14)
prepc_of(capable-14, making-16)
dobj(making-16, them-17)
dep(happy-24, everybody-19)
prep_about(everybody-19, her-21)
advmod(happy-24, twice-22)
advmod(happy-24, as-23)
conj_and(returned-2, happy-24)
prep(happy-24, as-25)
pcomp(as-25, before-26)

(ROOT
  (S
    (S
      (NP
        (NP (DT Another)
          (QP (RB as) (RB nearly)))
        (PP (IN like)
          (NP (PRP her))))
      (PP (IN in)
        (NP
          (NP (JJ bodily) (NN condition)
            (CC and)
            (NNS circumstances))
          (SBAR
            (S
              (SBAR (IN as)
                (S
                  (NP (PRP he))
                  (VP (MD could)
                    (VP (VB find)))))
              (, ,)
              (VP (VBD took)
                (NP (PRP$ her) (NN place)))
              (, ,)))))
      (PRN (: --)
        (PP (IN with)
          (NP (DT a) (JJ like) (NN result)))))
    (: ;)
    (CC and)
    (ADVP (RB before) (RB long))
    (S
      (NP
        (NP (DT the) (NN healing))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD hovered)
              (PP (IN about)
                (NP (NNP Priory) (NNPS Leas)))))))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN known)
                (CC and)
                (VBN talked)
                (PP (IN of) (IN amongst)
                  (NP
                    (NP
                      (NP (DT the) (NNS professors))
                      (PP (IN of)
                        (NP (DT the) (NN college))))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (DT the) (JJ medical) (NNS men))
                      (PP (IN of)
                        (NP (DT the) (NN city))))))))))))
    (. .)))

det(nearly-3, Another-1)
quantmod(nearly-3, as-2)
root(ROOT-0, nearly-3)
prep_like(nearly-3, her-5)
dep(nearly-3, in-6)
amod(condition-8, bodily-7)
pobj(in-6, condition-8)
pobj(in-6, circumstances-10)
conj_and(condition-8, circumstances-10)
mark(find-14, as-11)
nsubj(find-14, he-12)
aux(find-14, could-13)
advcl(took-16, find-14)
rcmod(condition-8, took-16)
poss(place-18, her-17)
dobj(took-16, place-18)
dep(nearly-3, with-21)
det(result-24, a-22)
amod(result-24, like-23)
pobj(with-21, result-24)
advmod(long-28, before-27)
advmod(nearly-3, long-28)
conj_and(nearly-3, long-28)
det(healing-30, the-29)
nsubj(hovered-32, healing-30)
nsubj(began-36, healing-30)
nsubjpass(known-39, healing-30)
nsubjpass(talked-41, healing-30)
rcmod(healing-30, hovered-32)
nn(Leas-35, Priory-34)
prep_about(hovered-32, Leas-35)
ccomp(nearly-3, began-36)
conj_and(nearly-3, began-36)
aux(known-39, to-37)
auxpass(known-39, be-38)
xcomp(began-36, known-39)
xcomp(began-36, talked-41)
conj_and(known-39, talked-41)
dep(known-39, of-42)
det(professors-45, the-44)
prep_amongst(known-39, professors-45)
det(college-48, the-47)
prep_of(professors-45, college-48)
det(men-53, the-51)
amod(men-53, medical-52)
prep_amongst(known-39, men-53)
conj_and(professors-45, men-53)
det(city-56, the-55)
prep_of(men-53, city-56)

(ROOT
  (NP (NNP CHAPTER) (NNP XXIV) (. .)))

nn(XXIV-2, CHAPTER-1)
root(ROOT-0, XXIV-2)

(ROOT
  (S
    (NP (NNP WILLIE) (POS 'S))
    (VP (VBZ PLANS)
      (NP (NNP BEAR) (NNP FRUIT)))
    (. .)))

nsubj(PLANS-3, WILLIE-1)
possessive(WILLIE-1, 'S-2)
root(ROOT-0, PLANS-3)
nn(FRUIT-5, BEAR-4)
dobj(PLANS-3, FRUIT-5)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP$ his) (NNS studies))
        (VP (VBD were)
          (VP (VBN finished)))))
    (, ,)
    (NP (NNP Willie))
    (VP (VBD returned)
      (S
        (VP (TO to)
          (VP (VB assist)
            (NP (PRP$ his) (NN father)))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD had)
            (NP (DT no) (NN desire)
              (S
                (VP (TO to)
                  (VP (VB settle)
                    (PP (IN in)
                      (NP (DT a) (JJ great) (NN city)))
                    (PP (IN with)
                      (NP
                        (NP (DT the) (NN ambition))
                        (PP (IN of)
                          (S
                            (VP
                              (VP (VBG becoming)
                                (NP (DT a) (JJ fashionable) (NN doctor))
                                (S
                                  (VP (VBG getting)
                                    (NP (JJ large) (NNS fees)))))
                              (CC and)
                              (VP (VBG growing)
                                (ADJP (JJ rich))))))))))))))))
    (. .)))

advmod(finished-5, When-1)
poss(studies-3, his-2)
nsubjpass(finished-5, studies-3)
auxpass(finished-5, were-4)
advcl(returned-8, finished-5)
nsubj(returned-8, Willie-7)
nsubj(assist-10, Willie-7)
root(ROOT-0, returned-8)
aux(assist-10, to-9)
xcomp(returned-8, assist-10)
poss(father-12, his-11)
dobj(assist-10, father-12)
mark(had-16, for-14)
nsubj(had-16, he-15)
advcl(returned-8, had-16)
neg(desire-18, no-17)
dobj(had-16, desire-18)
aux(settle-20, to-19)
vmod(desire-18, settle-20)
det(city-24, a-22)
amod(city-24, great-23)
prep_in(settle-20, city-24)
det(ambition-27, the-26)
prep_with(settle-20, ambition-27)
prepc_of(ambition-27, becoming-29)
det(doctor-32, a-30)
amod(doctor-32, fashionable-31)
xcomp(becoming-29, doctor-32)
vmod(becoming-29, getting-33)
amod(fees-35, large-34)
dobj(getting-33, fees-35)
prepc_of(ambition-27, growing-37)
conj_and(becoming-29, growing-37)
acomp(growing-37, rich-38)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD regarded)
      (NP
        (NP (DT the) (NN end))
        (PP (IN of)
          (NP (NN life))))
      (PP (IN as)
        (NP (VBG being)))
      (, ,)
      (PP (IN in)
        (NP (DT a) (JJ large) (NN measure)))
      (, ,)
      (S
        (ADVP (RB just))
        (VP (TO to)
          (VP (VB take)
            (NP (PRP$ his) (NN share))
            (PP (IN in)
              (NP (DT the) (JJ general) (NN business)))))))
    (. .)))

nsubj(regarded-2, He-1)
root(ROOT-0, regarded-2)
det(end-4, the-3)
dobj(regarded-2, end-4)
prep_of(end-4, life-6)
prep_as(regarded-2, being-8)
det(measure-13, a-11)
amod(measure-13, large-12)
prep_in(regarded-2, measure-13)
advmod(take-17, just-15)
aux(take-17, to-16)
vmod(regarded-2, take-17)
poss(share-19, his-18)
dobj(take-17, share-19)
det(business-23, the-21)
amod(business-23, general-22)
prep_in(take-17, business-23)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP (DT this) (NN time)))
      (NP
        (NP (DT the) (NN reputation))
        (PP (IN of)
          (NP
            (NP (DT the) (NN Prior) (POS 's))
            (NNP Well))))
      (VP (VBD had)
        (VP (VBN spread)
          (PP (IN on)
            (NP (DT all) (NNS sides))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN country) (NNS people))
      (VP (VBD had)
        (VP (VBN begun)
          (S
            (VP (TO to)
              (VP
                (VP (VB visit)
                  (NP (DT the) (NNPS Leas)))
                (, ,)
                (CC and)
                (VP (VB stay)
                  (PP (IN for)
                    (NP
                      (NP (DT a) (NN week))
                      (CC or)
                      (NP (CD ten) (NNS days))))
                  (S
                    (VP (TO to)
                      (VP (VB drink)
                        (PP (IN of)
                          (NP (DT the) (NN water)))))))))))))
    (. .)))

det(time-3, this-2)
prep_by(spread-12, time-3)
det(reputation-5, the-4)
nsubj(spread-12, reputation-5)
det(Prior-8, the-7)
poss(Well-10, Prior-8)
prep_of(reputation-5, Well-10)
aux(spread-12, had-11)
root(ROOT-0, spread-12)
det(sides-15, all-14)
prep_on(spread-12, sides-15)
det(people-20, the-18)
nn(people-20, country-19)
nsubj(begun-22, people-20)
nsubj(visit-24, people-20)
nsubj(stay-29, people-20)
nsubj(drink-37, people-20)
aux(begun-22, had-21)
conj_and(spread-12, begun-22)
aux(visit-24, to-23)
xcomp(begun-22, visit-24)
det(Leas-26, the-25)
dobj(visit-24, Leas-26)
xcomp(begun-22, stay-29)
conj_and(visit-24, stay-29)
det(week-32, a-31)
prep_for(stay-29, week-32)
num(days-35, ten-34)
prep_for(stay-29, days-35)
conj_or(week-32, days-35)
aux(drink-37, to-36)
xcomp(stay-29, drink-37)
det(water-40, the-39)
prep_of(drink-37, water-40)

(ROOT
  (SINV
    (ADVP (RB Indeed))
    (ADJP (RB so) (JJ many))
    (VP (VBD kept)
      (S
        (VP (VBG coming)
          (CC and)
          (VBG going)
          (PP (IN at)
            (NP (DT all))))))
    (NP
      (NP (NNS hours))
      (PP (IN through)
        (NP (DT the) (NN garden)))
      (, ,)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NNPS MacMichaels))
            (PP (IN at)
              (NP (NN length))))
          (VP
            (VP (VBD found)
              (S
                (NP (PRP it))
                (ADJP (RB very) (JJ troublesome))))
            (, ,)
            (CC and)
            (VP (VBD had)
              (NP
                (NP (DT a) (JJ small) (NN pipe))
                (VP (VBN laid)
                  (PP (TO to)
                    (NP
                      (NP (DT a) (JJ little) (NN stone) (NN trough))
                      (VP (VBN built)
                        (PP (IN into)
                          (NP (DT the) (NN garden) (NN wall))))))))
              (PP (IN on)
                (NP (DT the) (NN outside)))
              (, ,)
              (SBAR (IN so)
                (S
                  (NP
                    (NP (DT that))
                    (SBAR
                      (WHNP (WP whoever))
                      (S
                        (VP (MD would)
                          (VP (NN might) (VB come)
                            (CC and)
                            (VB drink)
                            (PP (IN with)
                              (NP
                                (NP (JJR less) (NN trouble))
                                (PP (TO to)
                                  (NP (DT all))))))))))
                  (VP (VBN concerned)))))))))
    (. .)))

advmod(kept-4, Indeed-1)
advmod(many-3, so-2)
dep(kept-4, many-3)
root(ROOT-0, kept-4)
xcomp(kept-4, coming-5)
xcomp(kept-4, going-7)
conj_and(coming-5, going-7)
prep_at(coming-5, all-9)
nsubj(kept-4, hours-10)
det(garden-13, the-12)
prep_through(hours-10, garden-13)
mark(found-20, that-15)
det(MacMichaels-17, the-16)
nsubj(found-20, MacMichaels-17)
nsubj(had-26, MacMichaels-17)
prep_at(MacMichaels-17, length-19)
dep(hours-10, found-20)
nsubj(troublesome-23, it-21)
advmod(troublesome-23, very-22)
xcomp(found-20, troublesome-23)
dep(hours-10, had-26)
conj_and(found-20, had-26)
det(pipe-29, a-27)
amod(pipe-29, small-28)
dobj(had-26, pipe-29)
vmod(pipe-29, laid-30)
det(trough-35, a-32)
amod(trough-35, little-33)
nn(trough-35, stone-34)
prep_to(laid-30, trough-35)
vmod(trough-35, built-36)
det(wall-40, the-38)
nn(wall-40, garden-39)
prep_into(built-36, wall-40)
det(outside-43, the-42)
prep_on(had-26, outside-43)
mark(concerned-58, so-45)
nsubj(concerned-58, that-46)
nsubj(come-50, whoever-47)
nsubj(drink-52, whoever-47)
aux(come-50, would-48)
dep(come-50, might-49)
rcmod(that-46, come-50)
rcmod(that-46, drink-52)
conj_and(come-50, drink-52)
amod(trouble-55, less-54)
prep_with(come-50, trouble-55)
prep_to(trouble-55, all-57)
advcl(had-26, concerned-58)

(ROOT
  (S (CC But)
    (NP (NNP Willie))
    (VP (VBD had)
      (VP (VBN come)
        (ADVP (RB home))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ new) (NN idea))
            (PP (IN in)
              (NP (PRP$ his) (NN head)))))))
    (. .)))

cc(come-4, But-1)
nsubj(come-4, Willie-2)
aux(come-4, had-3)
root(ROOT-0, come-4)
advmod(come-4, home-5)
det(idea-9, a-7)
amod(idea-9, new-8)
prep_with(come-4, idea-9)
poss(head-12, his-11)
prep_in(idea-9, head-12)

(ROOT
  (S
    (NP
      (NP (DT An) (JJ old) (NN valetudinarian))
      (PP (IN in)
        (NP (DT the) (NN city)))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD knew)
            (NP (DT every) (NN spa))
            (PP (IN in)
              (NP (NNP Europe))))))
      (, ,))
    (VP
      (VP (VBD wanted)
        (S
          (VP (TO to)
            (VP (VB try)
              (NP
                (NP (DT that))
                (PP (IN of)
                  (NP (NNP Priory) (NNPS Leas))))))))
      (CC and)
      (VP (VBD had)
        (VP (VBN consulted)
          (NP (PRP him))
          (PP (IN about)
            (NP (PRP it))))))
    (. .)))

det(valetudinarian-3, An-1)
amod(valetudinarian-3, old-2)
nsubj(knew-9, valetudinarian-3)
nsubj(wanted-15, valetudinarian-3)
nsubj(try-17, valetudinarian-3)
nsubj(consulted-24, valetudinarian-3)
det(city-6, the-5)
prep_in(valetudinarian-3, city-6)
rcmod(valetudinarian-3, knew-9)
det(spa-11, every-10)
dobj(knew-9, spa-11)
prep_in(knew-9, Europe-13)
root(ROOT-0, wanted-15)
aux(try-17, to-16)
xcomp(wanted-15, try-17)
dobj(try-17, that-18)
nn(Leas-21, Priory-20)
prep_of(that-18, Leas-21)
aux(consulted-24, had-23)
conj_and(wanted-15, consulted-24)
dobj(consulted-24, him-25)
prep_about(consulted-24, it-27)

(ROOT
  (S
    (S
      (VP (VBG Finding)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP (DT no) (JJ such) (NN accommodation)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN had)
                        (SBAR (IN as)
                          (S
                            (NP (PRP he))
                            (VP (VBN judged)
                              (S
                                (ADJP (JJ suitable))))))))))))))))
    (, ,)
    (NP (PRP he))
    (ADVP (RB seriously))
    (VP (VBD advised)
      (S
        (NP (NNP Willie))
        (VP (TO to)
          (VP (VB build)
            (NP (DT a) (NN house) (NN fit))
            (PP (IN for)
              (NP
                (NP (NNS persons))
                (PP (IN of)
                  (NP (NN position)))))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (VBD called)
                  (NP (PRP them))
                  (, ,)
                  (S
                    (VP (VBG assuring)
                      (NP (PRP him))
                      (SBAR (IN that)
                        (S
                          (NP (PRP they))
                          (VP (MD would)
                            (ADVP (RB soon))
                            (VP (VB make)
                              (NP (PRP$ their) (NNS fortunes))
                              (SBAR (IN if)
                                (S
                                  (NP (PRP they))
                                  (VP (VBD did)))))))))))))))))
    (. .)))

vmod(advised-18, Finding-1)
mark(was-4, that-2)
expl(was-4, there-3)
ccomp(Finding-1, was-4)
neg(accommodation-7, no-5)
amod(accommodation-7, such-6)
nsubj(was-4, accommodation-7)
aux(had-10, to-8)
auxpass(had-10, be-9)
vmod(accommodation-7, had-10)
mark(judged-13, as-11)
nsubj(judged-13, he-12)
advcl(had-10, judged-13)
acomp(judged-13, suitable-14)
nsubj(advised-18, he-16)
advmod(advised-18, seriously-17)
root(ROOT-0, advised-18)
dobj(advised-18, Willie-19)
nsubj(build-21, Willie-19)
aux(build-21, to-20)
xcomp(advised-18, build-21)
det(fit-24, a-22)
nn(fit-24, house-23)
dobj(build-21, fit-24)
prep_for(build-21, persons-26)
prep_of(persons-26, position-28)
mark(called-32, as-30)
nsubj(called-32, he-31)
advcl(build-21, called-32)
dobj(called-32, them-33)
vmod(called-32, assuring-35)
dobj(assuring-35, him-36)
mark(make-41, that-37)
nsubj(make-41, they-38)
aux(make-41, would-39)
advmod(make-41, soon-40)
ccomp(assuring-35, make-41)
poss(fortunes-43, their-42)
dobj(make-41, fortunes-43)
mark(did-46, if-44)
nsubj(did-46, they-45)
advcl(make-41, did-46)

(ROOT
  (S
    (ADVP (RB Now))
    (SBAR (IN although)
      (PRN (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBP have)
              (VP (VBD said)))))
        (, ,))
      (S
        (NP (DT this))
        (VP (VBD was) (RB not)
          (NP
            (NP (DT the) (NN ambition))
            (PP (IN of)
              (NP
                (NP (DT either) (NN father)
                  (CC or)
                  (NN son))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (DT a) (NN fortune))
                    (VP (VBD had)
                      (ADVP (RB never))
                      (VP (VBN seemed)
                        (PP (TO to)
                          (NP
                            (NP (DT either) (NN worth))
                            (VP (VBG taking)
                              (NP (NN trouble) (RB about)))))))))))))))
    (, ,)
    (ADVP (RB yet))
    (NP (PRP it))
    (VP (VBD suggested)
      (NP
        (NP (NN something))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD was)
              (ADJP (JJR better)))))))
    (. .)))

advmod(suggested-35, Now-1)
mark(ambition-13, although-2)
mark(said-7, as-4)
nsubj(said-7, I-5)
aux(said-7, have-6)
dep(ambition-13, said-7)
nsubj(ambition-13, this-9)
cop(ambition-13, was-10)
neg(ambition-13, not-11)
det(ambition-13, the-12)
advcl(suggested-35, ambition-13)
preconj(father-16, either-15)
prep_of(ambition-13, father-16)
prep_of(ambition-13, son-18)
conj_or(father-16, son-18)
mark(seemed-25, for-20)
det(fortune-22, a-21)
nsubj(seemed-25, fortune-22)
aux(seemed-25, had-23)
neg(seemed-25, never-24)
rcmod(father-16, seemed-25)
det(worth-28, either-27)
prep_to(seemed-25, worth-28)
vmod(worth-28, taking-29)
dobj(taking-29, trouble-30)
advmod(trouble-30, about-31)
advmod(it-34, yet-33)
nsubj(suggested-35, it-34)
root(ROOT-0, suggested-35)
dobj(suggested-35, something-36)
nsubj(better-39, something-36)
cop(better-39, was-38)
rcmod(something-36, better-39)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP
          (NP (NNP Willie))
          (PP (TO to)
            (NP (PRP$ his) (NN father)))))
      (, ,) (`` ``))
    (SQ (MD should) (RB n't)
      (NP (PRP we))
      (VP (VB restore)
        (NP
          (NP (DT a) (NN bit))
          (PP (IN of)
            (NP (DT the) (NNP Priory))))
        (PP (IN in)
          (NP (PDT such) (DT a) (NN way)))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (NN man))
              (PP (IN like)
                (NP (NNP Mr) (NNP Yellowley))))
            (VP (MD could)
              (VP (VB endure)
                (NP (PRP it))
                (PP (IN for)
                  (NP (DT a) (JJ little) (NN while)))))))))
    (. ?)))

advmod(restore-15, Why-2)
dep(restore-15, said-5)
nsubj(said-5, Willie-6)
poss(father-9, his-8)
prep_to(Willie-6, father-9)
aux(restore-15, should-12)
neg(restore-15, n't-13)
nsubj(restore-15, we-14)
root(ROOT-0, restore-15)
det(bit-17, a-16)
dobj(restore-15, bit-17)
det(Priory-20, the-19)
prep_of(bit-17, Priory-20)
predet(way-24, such-22)
det(way-24, a-23)
prep_in(restore-15, way-24)
mark(endure-32, that-25)
det(man-27, a-26)
nsubj(endure-32, man-27)
nn(Yellowley-30, Mr-29)
prep_like(man-27, Yellowley-30)
aux(endure-32, could-31)
ccomp(restore-15, endure-32)
dobj(endure-32, it-33)
det(while-37, a-35)
amod(while-37, little-36)
prep_for(endure-32, while-37)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD would)
        (VP (VB pay)
          (NP (PRP us))
          (ADVP (RB well)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP we))
      (VP (MD should)
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB do)
                  (NP (JJR more))
                  (PP (IN for)
                    (NP
                      (NP (DT those))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD ca) (RB n't)
                            (VP (VB pay)
                              (NP (PRP us)))))))))))))))
    (. .) ('' '')))

nsubj(pay-3, He-1)
aux(pay-3, would-2)
root(ROOT-0, pay-3)
dobj(pay-3, us-4)
advmod(pay-3, well-5)
advmod(able-12, then-8)
nsubj(able-12, we-9)
nsubj(do-14, we-9)
aux(able-12, should-10)
cop(able-12, be-11)
conj_and(pay-3, able-12)
aux(do-14, to-13)
xcomp(able-12, do-14)
dobj(do-14, more-15)
prep_for(do-14, those-17)
nsubj(pay-21, those-17)
aux(pay-21, ca-19)
neg(pay-21, n't-20)
rcmod(those-17, pay-21)
dobj(pay-21, us-22)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP We))
      (VP (MD could) (RB n't)
        (VP (VB cook)
          (PP (IN for)
            (NP
              (NP (DT a) (NN man))
              (PP (IN like)
                (NP (DT that))))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN mother))
    (. .)))

nsubj(cook-5, We-2)
aux(cook-5, could-3)
neg(cook-5, n't-4)
ccomp(said-13, cook-5)
det(man-8, a-7)
prep_for(cook-5, man-8)
prep_like(man-8, that-10)
root(ROOT-0, said-13)
poss(mother-15, his-14)
nsubj(said-13, mother-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP He))
      (VP (MD would) (RB n't)
        (VP (VB want)
          (NP (DT that)))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP$ his) (NN father))
    (. .)))

nsubj(want-5, He-2)
aux(want-5, would-3)
neg(want-5, n't-4)
ccomp(said-9, want-5)
dobj(want-5, that-6)
root(ROOT-0, said-9)
poss(father-11, his-10)
nsubj(said-9, father-11)

(ROOT
  (S (`` ``)
    (NP (PRP He))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ sure)
          (S
            (VP (TO to)
              (VP (VB bring)
                (NP (PRP$ his) (JJ own) (NNS servants))))))))
    (. .) ('' '')))

nsubj(sure-5, He-2)
nsubj(bring-7, He-2)
aux(sure-5, would-3)
cop(sure-5, be-4)
root(ROOT-0, sure-5)
aux(bring-7, to-6)
xcomp(sure-5, bring-7)
poss(servants-10, his-8)
amod(servants-10, own-9)
dobj(bring-7, servants-10)

(ROOT
  (S
    (NP (DT The) (NN result))
    (VP (VBD was)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (NNP Mr) (NNP MacMichael))
            (VP
              (VP (VBD thought)
                (S
                  (NP (DT the) (NN thing))
                  (ADJP (JJ worth))
                  (S
                    (VP (VBG trying)))))
              (, ,)
              (CC and)
              (VP (VBN resolved)
                (S
                  (VP (TO to)
                    (VP (VB lay)
                      (PRT (RP out))
                      (NP (PDT all) (PRP$ his) (JJ little) (NNS savings)))))))))
        (, ,)
        (CONJP (RB as) (RB well) (IN as))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNP Willie))
            (VP (MD could)
              (VP (VB add) (, ,)
                (PP (IN on)
                  (S
                    (VP (VBG getting)
                      (NP
                        (NP
                          (NP (DT a) (NN kitchen))
                          (CC and)
                          (NP
                            (NP (DT a) (JJ few) (JJ convenient) (NNS rooms))
                            (VP (VBN constructed)
                              (PP (IN in)
                                (NP (DT the) (NNS ruins)))))
                          (: --)
                          (PP (IN of)
                            (NP (NN course))))
                        (VP (VBG keeping)
                          (ADVP
                            (ADVP (RB as) (RB much))
                            (PP (IN as)
                              (ADJP (JJ possible))))
                          (PP (TO to)
                            (NP
                              (NP (PRP$ their) (NN plan))
                              (CC and)
                              (NP (JJ architectural) (NN character)))))))))))))))
    (. .)))

det(result-2, The-1)
nsubj(was-3, result-2)
root(ROOT-0, was-3)
mark(thought-7, that-4)
nn(MacMichael-6, Mr-5)
nsubj(thought-7, MacMichael-6)
nsubj(resolved-14, MacMichael-6)
nsubj(lay-16, MacMichael-6)
ccomp(was-3, thought-7)
det(thing-9, the-8)
nsubj(trying-11, thing-9)
dep(trying-11, worth-10)
xcomp(thought-7, trying-11)
ccomp(was-3, resolved-14)
conj_and(thought-7, resolved-14)
aux(lay-16, to-15)
xcomp(resolved-14, lay-16)
prt(lay-16, out-17)
predet(savings-21, all-18)
poss(savings-21, his-19)
amod(savings-21, little-20)
dobj(lay-16, savings-21)
dobj(add-29, what-26)
nsubj(add-29, Willie-27)
aux(add-29, could-28)
ccomp(was-3, add-29)
conj_and(thought-7, add-29)
prepc_on(add-29, getting-32)
det(kitchen-34, a-33)
dobj(getting-32, kitchen-34)
det(rooms-39, a-36)
amod(rooms-39, few-37)
amod(rooms-39, convenient-38)
dobj(getting-32, rooms-39)
conj_and(kitchen-34, rooms-39)
vmod(rooms-39, constructed-40)
det(ruins-43, the-42)
prep_in(constructed-40, ruins-43)
dobj(getting-32, of-45)
conj_and(kitchen-34, of-45)
prep_of(kitchen-34, course-46)
vmod(kitchen-34, keeping-47)
advmod(much-49, as-48)
advmod(keeping-47, much-49)
prep_as(much-49, possible-51)
poss(plan-54, their-53)
prep_to(keeping-47, plan-54)
amod(character-57, architectural-56)
prep_to(keeping-47, character-57)
conj_and(plan-54, character-57)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD found) (, ,)
      (ADVP (RB however))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB want)
              (NP (DT a) (JJ good) (NN deal))
              (ADVP
                (ADVP (RBR more))
                (SBAR (IN than)
                  (S
                    (NP (PRP they))
                    (VP
                      (VP (MD could)
                        (VP (VB manage)
                          (S
                            (VP (TO to)
                              (VP (VB scrape)
                                (ADVP (RB together))
                                (PP (IN between)
                                  (NP (PRP them))))))))
                      (, ,)
                      (CC and)
                      (VP (VBD was)
                        (PP (IN on)
                          (NP
                            (NP (DT the) (NN point))
                            (PP (IN of)
                              (S
                                (VP
                                  (VP (VBG giving)
                                    (PRT (RP up))
                                    (NP (DT the) (NN scheme)))
                                  (, ,)
                                  (CC or)
                                  (VP
                                    (ADVP (IN at) (JJS least))
                                    (VBG altering)
                                    (NP (PRP it))
                                    (PP (IN for)
                                      (NP
                                        (NP (CD one))
                                        (SBAR
                                          (WHNP (WDT that))
                                          (S
                                            (VP (MD would)
                                              (VP (VB have)
                                                (VP (VBN been)
                                                  (ADJP
                                                    (ADJP (RB much) (JJR longer))
                                                    (PP (IN in)
                                                      (S
                                                        (VP (VBG making)
                                                          (NP (PRP them))
                                                          (NP
                                                            (NP (DT any) (NN return))
                                                            (, ,)
                                                            (SBAR
                                                              (WHADVP (WRB when))
                                                              (S
                                                                (NP
                                                                  (NP (NNP Mr) (NNP Shepherd))
                                                                  (, ,)
                                                                  (SBAR
                                                                    (WHNP (WP who))
                                                                    (S
                                                                      (VP (VBD had)
                                                                        (VP (VBN become)
                                                                          (ADJP (VBN acquainted)
                                                                            (PP
                                                                              (PP (IN with)
                                                                                (NP (PRP$ their) (NNS plans)))
                                                                              (, ,)
                                                                              (CC and)
                                                                              (ADVP (RB consequently))
                                                                              (PP (IN with)
                                                                                (NP (PRP$ their) (NNS difficulties)))))))))
                                                                  (, ,))
                                                                (VP (VBD offered)
                                                                  (S
                                                                    (VP (TO to)
                                                                      (VP (VB join)
                                                                        (NP (PRP them))
                                                                        (PP (IN with)
                                                                          (NP
                                                                            (NP (DT the) (JJ little))
                                                                            (SBAR
                                                                              (S
                                                                                (NP (PRP he))
                                                                                (VP (VBD had)
                                                                                  (VP (VBN laid)
                                                                                    (PRT (RP aside))
                                                                                    (PP (IN for)
                                                                                      (NP
                                                                                        (NP (DT a) (JJ rainy) (NN day))
                                                                                        (: --)
                                                                                        (SBAR
                                                                                          (WHNP (WDT which))
                                                                                          (S
                                                                                            (VP (VBD proved)
                                                                                              (ADJP (RB just) (JJ sufficient)))))))))))))))))))))))))))))))
                                    (S
                                      (VP (TO to)
                                        (VP (VB complete)
                                          (S
                                            (NP (DT the) (NN sum))
                                            (ADJP (JJ necessary))))))))))))))))))))))
    (. .)))

nsubj(found-2, He-1)
root(ROOT-0, found-2)
advmod(found-2, however-4)
mark(want-9, that-6)
nsubj(want-9, it-7)
aux(want-9, would-8)
ccomp(found-2, want-9)
det(deal-12, a-10)
amod(deal-12, good-11)
dobj(want-9, deal-12)
advmod(want-9, more-13)
mark(manage-17, than-14)
nsubj(manage-17, they-15)
nsubj(scrape-19, they-15)
nsubj(was-25, they-15)
aux(manage-17, could-16)
advcl(more-13, manage-17)
aux(scrape-19, to-18)
xcomp(manage-17, scrape-19)
advmod(scrape-19, together-20)
prep_between(scrape-19, them-22)
advcl(more-13, was-25)
conj_and(manage-17, was-25)
det(point-28, the-27)
prep_on(was-25, point-28)
prepc_of(point-28, giving-30)
prt(giving-30, up-31)
det(scheme-33, the-32)
dobj(giving-30, scheme-33)
advmod(altering-38, at-36)
pobj(at-36, least-37)
prepc_of(point-28, altering-38)
conj_or(giving-30, altering-38)
dobj(altering-38, it-39)
prep_for(altering-38, one-41)
nsubj(longer-47, one-41)
aux(longer-47, would-43)
aux(longer-47, have-44)
cop(longer-47, been-45)
advmod(longer-47, much-46)
rcmod(one-41, longer-47)
prepc_in(longer-47, making-49)
iobj(making-49, them-50)
det(return-52, any-51)
dobj(making-49, return-52)
tmod(offered-72, return-52)
advmod(offered-72, when-54)
nn(Shepherd-56, Mr-55)
nsubj(become-60, Shepherd-56)
nsubj(offered-72, Shepherd-56)
nsubj(join-74, Shepherd-56)
aux(become-60, had-59)
rcmod(Shepherd-56, become-60)
acomp(become-60, acquainted-61)
poss(plans-64, their-63)
prep_with(acquainted-61, plans-64)
advmod(acquainted-61, consequently-67)
poss(difficulties-70, their-69)
prep_with(acquainted-61, difficulties-70)
conj_and(plans-64, difficulties-70)
rcmod(return-52, offered-72)
aux(join-74, to-73)
xcomp(offered-72, join-74)
dobj(join-74, them-75)
det(little-78, the-77)
prep_with(join-74, little-78)
nsubj(laid-81, he-79)
aux(laid-81, had-80)
rcmod(little-78, laid-81)
prt(laid-81, aside-82)
det(day-86, a-84)
amod(day-86, rainy-85)
prep_for(laid-81, day-86)
nsubj(proved-89, day-86)
rcmod(day-86, proved-89)
advmod(sufficient-91, just-90)
acomp(proved-89, sufficient-91)
aux(complete-93, to-92)
vmod(altering-38, complete-93)
det(sum-95, the-94)
nsubj(necessary-96, sum-95)
xcomp(complete-93, necessary-96)

(ROOT
  (S
    (S
      (PP (IN Between)
        (NP (DT the) (CD three)))
      (NP (DT the) (NN thing))
      (VP (VBD was)
        (VP (VBN effected))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Mr) (NNP Yellowley))
      (VP (VBD was)
        (NP (PRP$ their) (JJ first) (NN visitor))))
    (. .)))

det(three-3, the-2)
prep_between(effected-7, three-3)
det(thing-5, the-4)
nsubjpass(effected-7, thing-5)
auxpass(effected-7, was-6)
root(ROOT-0, effected-7)
nn(Yellowley-11, Mr-10)
nsubj(visitor-15, Yellowley-11)
cop(visitor-15, was-12)
poss(visitor-15, their-13)
amod(visitor-15, first-14)
conj_and(effected-7, visitor-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ sorry)
          (S
            (VP (TO to)
              (VP (VB say)
                (S
                  (S
                    (NP (PRP he))
                    (VP (VBD grumbled)
                      (NP (DT a) (JJ good) (NN deal))
                      (PP (IN at)
                        (NP (JJ first)))
                      (PP
                        (PP (IN at)
                          (NP
                            (NP (DT the) (NN proximity))
                            (PP (IN of)
                              (NP (DT the) (NN cobbler)))))
                        (, ,)
                        (CC and)
                        (PP (IN at)
                          (S
                            (VP (VBG having)
                              (S
                                (VP (TO to)
                                  (VP (VB meet)
                                    (NP (PRP him))
                                    (PP (IN in)
                                      (NP
                                        (NP (PRP$ his) (NN walks))
                                        (PP (IN about)
                                          (NP (DT the) (NN garden))))))))))))))
                  (: ;)
                  (CC but)
                  (S
                    (NP (DT this))
                    (VP (VBD was)
                      (NP
                        (NP (DT a) (NN point))
                        (SBAR
                          (WHPP (IN on)
                            (WHNP (WDT which)))
                          (S
                            (NP
                              (NP (NNP Mr) (NNP MacMichael))
                              (, ,)
                              (SBAR
                                (WHNP (WP who))
                                (S
                                  (PP (IN of)
                                    (NP (NN course)))
                                  (VP (VBD took)
                                    (NP
                                      (NP (DT the) (JJ old) (NN man) (POS 's))
                                      (NNS complaints))
                                    (ADVP (RB good-humouredly)))))
                              (, ,))
                            (VP (MD would) (RB not)
                              (VP (VB budge)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB reconcile)
              (NP (PRP himself))
              (PP (TO to)
                (NP (PRP it))))))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (ADVP (RB best))
            (VP (MD might))))))
    (. .)))

nsubj(sorry-3, I-1)
nsubj(say-5, I-1)
cop(sorry-3, am-2)
root(ROOT-0, sorry-3)
aux(say-5, to-4)
xcomp(sorry-3, say-5)
nsubj(grumbled-7, he-6)
dep(say-5, grumbled-7)
det(deal-10, a-8)
amod(deal-10, good-9)
dobj(grumbled-7, deal-10)
prep_at(grumbled-7, first-12)
det(proximity-15, the-14)
prep_at(grumbled-7, proximity-15)
det(cobbler-18, the-17)
prep_of(proximity-15, cobbler-18)
prep_at(grumbled-7, having-22)
conj_and(proximity-15, having-22)
aux(meet-24, to-23)
xcomp(having-22, meet-24)
dobj(meet-24, him-25)
poss(walks-28, his-27)
prep_in(meet-24, walks-28)
det(garden-31, the-30)
prep_about(walks-28, garden-31)
nsubj(point-37, this-34)
cop(point-37, was-35)
det(point-37, a-36)
dep(say-5, point-37)
conj_but(grumbled-7, point-37)
prep_on(budge-56, point-37)
nn(MacMichael-41, Mr-40)
nsubj(took-46, MacMichael-41)
nsubj(budge-56, MacMichael-41)
prep_of(took-46, course-45)
rcmod(MacMichael-41, took-46)
det(man-49, the-47)
amod(man-49, old-48)
poss(complaints-51, man-49)
dobj(took-46, complaints-51)
advmod(took-46, good-humouredly-52)
aux(budge-56, would-54)
neg(budge-56, not-55)
rcmod(point-37, budge-56)
nsubj(had-60, he-59)
nsubj(reconcile-62, he-59)
conj_and(sorry-3, had-60)
aux(reconcile-62, to-61)
xcomp(had-60, reconcile-62)
dobj(reconcile-62, himself-63)
prep_to(reconcile-62, it-65)
mark(might-69, as-66)
nsubj(might-69, he-67)
advmod(might-69, best-68)
advcl(had-60, might-69)

(ROOT
  (S (CC Nor)
    (VP (VBD was)
      (S
        (NP (PRP it))
        (ADJP (RB very) (JJ difficult))
        (SBAR (IN after)
          (S
            (NP (PRP he))
            (VP (VBD found)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (MD must)))))))))
    (. .)))

cc(was-2, Nor-1)
root(ROOT-0, was-2)
nsubj(found-8, it-3)
advmod(difficult-5, very-4)
dep(found-8, difficult-5)
mark(found-8, after-6)
nsubj(found-8, he-7)
xcomp(was-2, found-8)
nsubj(must-10, he-9)
ccomp(found-8, must-10)

(ROOT
  (S
    (ADVP (IN Before) (RB long))
    (NP (PRP they))
    (VP (VBD became)
      (NP (JJ excellent) (NNS friends))
      (, ,)
      (SBAR (IN for)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (MD will)
                (ADVP (RB only))
                (VP (VB give)
                  (NP (NN time)
                    (CC and)
                    (NN opportunity))))))
          (, ,)
          (PP (IN in)
            (NP (DT an) (RB ordinarily) (JJ good) (NN man) (NN nature)))
          (VP (MD will)
            (VP (VB overcome)
              (PP (IN in)
                (NP (DT the) (NN end))))))))
    (. .)))

advmod(became-4, Before-1)
advmod(Before-1, long-2)
nsubj(became-4, they-3)
root(ROOT-0, became-4)
amod(friends-6, excellent-5)
xcomp(became-4, friends-6)
mark(overcome-25, for-8)
mark(give-13, if-9)
nsubj(give-13, you-10)
aux(give-13, will-11)
advmod(give-13, only-12)
advcl(overcome-25, give-13)
dobj(give-13, time-14)
dobj(give-13, opportunity-16)
conj_and(time-14, opportunity-16)
det(nature-23, an-19)
advmod(nature-23, ordinarily-20)
amod(nature-23, good-21)
nn(nature-23, man-22)
prep_in(overcome-25, nature-23)
aux(overcome-25, will-24)
advcl(became-4, overcome-25)
det(end-28, the-27)
prep_in(overcome-25, end-28)

(ROOT
  (S
    (S
      (NP (NNP Mr) (NNP Yellowley))
      (VP (VBD was)
        (PP (IN at)
          (NP (NN heart)))
        (ADJP (JJ good-natured))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN cobbler))
      (VP (VBD was)
        (ADJP (RB well) (JJ worth))
        (S
          (VP (VBG knowing)))))
    (. .)))

nn(Yellowley-2, Mr-1)
nsubj(good-natured-6, Yellowley-2)
cop(good-natured-6, was-3)
prep_at(good-natured-6, heart-5)
root(ROOT-0, good-natured-6)
det(cobbler-10, the-9)
nsubj(worth-13, cobbler-10)
cop(worth-13, was-11)
advmod(worth-13, well-12)
conj_and(good-natured-6, worth-13)
xcomp(worth-13, knowing-14)

(ROOT
  (S
    (PP (IN Before)
      (NP (DT the) (JJ former) (NN left)))
    (, ,)
    (NP (DT the) (CD two))
    (VP (VBD were)
      (ADVP (RB often))
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN seen)
              (S
                (VP
                  (VP (VBG pacing)
                    (NP (DT the) (NN garden))
                    (ADVP (RB together)))
                  (, ,)
                  (CC and)
                  (VP (VBG talking)
                    (ADVP (RB happily))))))))))
    (. .)))

det(left-4, the-2)
amod(left-4, former-3)
prep_before(were-8, left-4)
det(two-7, the-6)
nsubj(were-8, two-7)
nsubjpass(seen-12, two-7)
root(ROOT-0, were-8)
advmod(were-8, often-9)
aux(seen-12, to-10)
auxpass(seen-12, be-11)
xcomp(were-8, seen-12)
ccomp(seen-12, pacing-13)
det(garden-15, the-14)
dobj(pacing-13, garden-15)
advmod(pacing-13, together-16)
ccomp(seen-12, talking-19)
conj_and(pacing-13, talking-19)
advmod(talking-19, happily-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB quite) (JJ unnecessary))
      (S
        (VP (TO to)
          (VP (VB recount)
            (NP
              (NP (PDT all) (DT the) (NNS gradations))
              (PP (IN of)
                (NP (NN growth))))
            (PP (IN by)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP
                    (NP (NN room))
                    (PP (IN after)
                      (NP (NN room))))
                  (VP (VBD arose)
                    (PP (IN from)
                      (NP
                        (NP (DT the) (NNS ruins))
                        (PP (IN of)
                          (NP (DT the) (NNP Priory)))))))))))))
    (. .)))

nsubj(unnecessary-4, It-1)
nsubj(recount-6, It-1)
cop(unnecessary-4, is-2)
advmod(unnecessary-4, quite-3)
root(ROOT-0, unnecessary-4)
aux(recount-6, to-5)
xcomp(unnecessary-4, recount-6)
predet(gradations-9, all-7)
det(gradations-9, the-8)
dobj(recount-6, gradations-9)
prep_of(gradations-9, growth-11)
dobj(arose-17, which-13)
nsubj(arose-17, room-14)
prep_after(room-14, room-16)
prepc_by(recount-6, arose-17)
det(ruins-20, the-19)
prep_from(arose-17, ruins-20)
det(Priory-23, the-22)
prep_of(ruins-20, Priory-23)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP Mr) (NNP Yellowley))
        (VP (VBD went)
          (ADVP (RB away))
          (, ,)
          (PP (IN after)
            (NP
              (NP (RB nearly) (CD six) (NNS months) (POS '))
              (NN sojourn)))
          (, ,)
          (PP (IN during)
            (NP
              (NP (DT the) (JJ latter) (NN part))
              (SBAR
                (WHPP (IN of)
                  (WHNP (WDT which)))
                (PRN (, ,)
                  (SBAR (IN so)
                    (S
                      (NP (NNP wonderfully))
                      (VP (VBD was)
                        (NP
                          (NP (PRP he))
                          (VP (VBN restored)
                            (PP (IN by)
                              (NP
                                (NP
                                  (NP (DT the) (NN air))
                                  (CC and)
                                  (NP (DT the) (NN water)))
                                (CC and)
                                (NP
                                  (NP (DT the) (JJ medical) (NN care))
                                  (PP (IN of)
                                    (NP (NNP Mr) (NNP MacMichael)))))))))))
                  (, ,))
                (S
                  (NP (PRP he))
                  (VP (VBD enjoyed)
                    (NP (DT a) (JJ little) (NN shooting))
                    (PP (IN on)
                      (NP (DT the) (NNS hills)))))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBD paid)
      (NP (PRP him))
      (NP
        (UCP
          (NP (DT a) (CD hundred))
          (CC and)
          (ADVP (RB fifty)))
        (NNS pounds))
      (PP (IN for)
        (NP
          (NP (NN accommodation))
          (CC and)
          (NP (JJ medical) (NN attendance))))
      (: --)
      (NP
        (NP (DT no) (JJ great) (NN sum))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (NN money))
            (VP (VBZ goes)
              (NP
                (NP (NNS now-a-days))
                (, ,)
                (CC but)
                (NP (DT a) (JJ good) (NN return)))
              (PP (IN in)
                (NP
                  (NP (CD six) (NNS months))
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN outlay))
                      (PP (IN of)
                        (NP (DT a) (CD thousand) (NNS pounds))))))))))))
    (. .)))

advmod(went-4, When-1)
nn(Yellowley-3, Mr-2)
nsubj(went-4, Yellowley-3)
advcl(paid-50, went-4)
advmod(went-4, away-5)
advmod(months-10, nearly-8)
num(months-10, six-9)
poss(sojourn-12, months-10)
prep_after(went-4, sojourn-12)
det(part-17, the-15)
amod(part-17, latter-16)
prep_during(went-4, part-17)
prep_of(enjoyed-41, part-17)
mark(he-24, so-21)
nsubj(he-24, wonderfully-22)
cop(he-24, was-23)
dep(enjoyed-41, he-24)
vmod(he-24, restored-25)
det(air-28, the-27)
agent(restored-25, air-28)
det(water-31, the-30)
agent(restored-25, water-31)
conj_and(air-28, water-31)
det(care-35, the-33)
amod(care-35, medical-34)
agent(restored-25, care-35)
conj_and(air-28, care-35)
nn(MacMichael-38, Mr-37)
prep_of(care-35, MacMichael-38)
nsubj(enjoyed-41, he-40)
rcmod(part-17, enjoyed-41)
det(shooting-44, a-42)
amod(shooting-44, little-43)
dobj(enjoyed-41, shooting-44)
det(hills-47, the-46)
prep_on(enjoyed-41, hills-47)
nsubj(paid-50, he-49)
root(ROOT-0, paid-50)
iobj(paid-50, him-51)
det(hundred-53, a-52)
nn(pounds-56, hundred-53)
advmod(hundred-53, fifty-55)
conj_and(hundred-53, fifty-55)
nn(pounds-56, fifty-55)
dobj(paid-50, pounds-56)
prep_for(paid-50, accommodation-58)
amod(attendance-61, medical-60)
prep_for(paid-50, attendance-61)
conj_and(accommodation-58, attendance-61)
neg(sum-65, no-63)
amod(sum-65, great-64)
parataxis(paid-50, sum-65)
mark(goes-69, as-67)
nsubj(goes-69, money-68)
dep(sum-65, goes-69)
dobj(goes-69, now-a-days-70)
det(return-75, a-73)
amod(return-75, good-74)
dobj(goes-69, return-75)
conj_but(now-a-days-70, return-75)
num(months-78, six-77)
prep_in(goes-69, months-78)
det(outlay-81, the-80)
prep_for(months-78, outlay-81)
det(pounds-85, a-83)
num(pounds-85, thousand-84)
prep_of(outlay-81, pounds-85)

(ROOT
  (S
    (NP (DT This) (PRP they))
    (VP (VBD laid)
      (PP (IN by)
        (PP (TO to)
          (NP (NNP accumulate))))
      (PP (IN for)
        (NP (DT the) (JJ next) (NN addition))))
    (. .)))

det(they-2, This-1)
nsubj(laid-3, they-2)
root(ROOT-0, laid-3)
prep(laid-3, by-4)
pcomp(by-4, to-5)
pobj(to-5, accumulate-6)
det(addition-10, the-8)
amod(addition-10, next-9)
prep_for(laid-3, addition-10)

(ROOT
  (S (CC And)
    (NP (DT the) (NNP Priory))
    (, ,)
    (S
      (VP (VBG having)
        (ADVP (RB once))
        (VP (VBN taken)
          (PP (TO to)
            (NP (VBG growing))))))
    (, ,)
    (VP (VBD went)
      (PRT (RP on))
      (PP (IN with)
        (NP (PRP it))))
    (. .)))

cc(went-11, And-1)
det(Priory-3, the-2)
nsubj(went-11, Priory-3)
aux(taken-7, having-5)
advmod(taken-7, once-6)
vmod(went-11, taken-7)
prep_to(taken-7, growing-9)
root(ROOT-0, went-11)
prt(went-11, on-12)
prep_with(went-11, it-14)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD cleared)
      (PRT (RP away))
      (NP (NN mound))
      (PP (IN after)
        (NP (NN mound)))
      (PP (IN from)
        (NP (DT the) (NN garden)))
      (, ,)
      (S
        (VP (VBG turning)
          (NP (PRP them))
          (ADVP (RB once) (RBR more))
          (PP (IN into)
            (NP (JJ solid) (NNS walls)))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (VP (VBN formed)
              (ADVP (RB mainly))
              (PP (IN of)
                (NP
                  (NP (JJ excellent) (NNS stones))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD had)
                        (ADVP (RB just))
                        (VP (VBN been)
                          (VP (VBG waiting)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (VP (VBN put)
                                    (PRT (RP up))
                                    (ADVP (RB again))))))))))))))))))
    (. .)))

nsubj(cleared-2, They-1)
root(ROOT-0, cleared-2)
prt(cleared-2, away-3)
dobj(cleared-2, mound-4)
prep_after(cleared-2, mound-6)
det(garden-9, the-8)
prep_from(cleared-2, garden-9)
vmod(cleared-2, turning-11)
dobj(turning-11, them-12)
advmod(more-14, once-13)
advmod(turning-11, more-14)
amod(walls-17, solid-16)
prep_into(turning-11, walls-17)
mark(formed-22, for-19)
nsubjpass(formed-22, they-20)
auxpass(formed-22, were-21)
advcl(cleared-2, formed-22)
advmod(formed-22, mainly-23)
amod(stones-26, excellent-25)
prep_of(formed-22, stones-26)
nsubj(waiting-32, stones-26)
nsubjpass(put-35, stones-26)
aux(waiting-32, had-29)
advmod(waiting-32, just-30)
aux(waiting-32, been-31)
rcmod(stones-26, waiting-32)
aux(put-35, to-33)
auxpass(put-35, be-34)
xcomp(waiting-32, put-35)
prt(put-35, up-36)
advmod(put-35, again-37)

(ROOT
  (S
    (NP (DT The) (JJ only) (JJ evil) (NN consequence))
    (VP (VBD was)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN garden))
          (VP (VBD became)
            (NP (DT a)
              (ADJP (RB little) (JJR less))
              (NN picturesque))
            (PP (IN by)
              (NP (PRP$ their) (NN removal)))
            (, ,)
            (SBAR (IN although)
              (S (, ,)
                (PP (IN on)
                  (NP (DT the) (JJ other) (NN hand)))
                (, ,)
                (NP (DT a) (NN good))
                (VP (VBP deal)
                  (ADJP (RBR more) (JJ productive)))))))))
    (. .)))

det(consequence-4, The-1)
amod(consequence-4, only-2)
amod(consequence-4, evil-3)
nsubj(was-5, consequence-4)
root(ROOT-0, was-5)
mark(became-9, that-6)
det(garden-8, the-7)
nsubj(became-9, garden-8)
ccomp(was-5, became-9)
det(picturesque-13, a-10)
advmod(less-12, little-11)
amod(picturesque-13, less-12)
xcomp(became-9, picturesque-13)
poss(removal-16, their-15)
prep_by(became-9, removal-16)
mark(deal-27, although-18)
det(hand-23, the-21)
amod(hand-23, other-22)
prep_on(deal-27, hand-23)
det(good-26, a-25)
nsubj(deal-27, good-26)
advcl(became-9, deal-27)
advmod(productive-29, more-28)
acomp(deal-27, productive-29)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (EX there))
      (VP (VBD was)
        (NP (DT a) (JJ second)
          (ADJP (RB apparently) (JJ bad))
          (NN consequence))))
    (: --)
    (S
      (NP (DT the) (NNP Priory) (NN spread))
      (CONJP (RB as) (RB well) (IN as))
      (VP (VBD grew) (, ,)
        (SBAR (IN until)
          (S
            (NP (PRP it))
            (VP (VBD encroached) (RB not)
              (VP
                (NP (DT a) (JJ little))
                (PP (IN upon)
                  (NP (DT the) (NN garden)))))))))
    (. .)))

discourse(was-4, Yes-1)
expl(was-4, there-3)
root(ROOT-0, was-4)
det(consequence-9, a-5)
amod(consequence-9, second-6)
advmod(bad-8, apparently-7)
amod(consequence-9, bad-8)
nsubj(was-4, consequence-9)
det(spread-13, the-11)
nn(spread-13, Priory-12)
parataxis(was-4, spread-13)
parataxis(was-4, grew-17)
conj_and(spread-13, grew-17)
mark(encroached-21, until-19)
nsubj(encroached-21, it-20)
advcl(grew-17, encroached-21)
neg(encroached-21, not-22)
det(little-24, a-23)
dep(encroached-21, little-24)
det(garden-27, the-26)
prep_upon(little-24, garden-27)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP (DT this)))
    (NP (DT a) (NN remedy))
    (VP
      (ADVP (RB soon))
      (VBD appeared))
    (. .)))

cc(appeared-7, But-1)
prep_for(appeared-7, this-3)
det(remedy-5, a-4)
nsubj(appeared-7, remedy-5)
advmod(appeared-7, soon-6)
root(ROOT-0, appeared-7)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ next) (NN house)
        (CC and)
        (NN garden))
      (, ,)
      (SBAR (IN although)
        (S
          (VP (VBD called)
            (NP (DT the) (NN Manse))
            (, ,)
            (SBAR (IN because)
              (S
                (NP
                  (NP (DT the) (NN clergyman))
                  (PP (IN of)
                    (NP (DT the) (NN parish))))
                (VP (VBD lived)
                  (ADVP (RB there))))))))
      (, ,))
    (VP (VBD were)
      (NP
        (NP (NNP Mr) (NNP Shepherd) (POS 's))
        (JJ own) (NN property)))
    (. .)))

det(house-3, The-1)
amod(house-3, next-2)
nsubj(property-26, house-3)
conj_and(house-3, garden-5)
nsubj(property-26, garden-5)
mark(called-8, although-7)
dep(house-3, called-8)
det(Manse-10, the-9)
dobj(called-8, Manse-10)
mark(lived-18, because-12)
det(clergyman-14, the-13)
nsubj(lived-18, clergyman-14)
det(parish-17, the-16)
prep_of(clergyman-14, parish-17)
advcl(called-8, lived-18)
advmod(lived-18, there-19)
cop(property-26, were-21)
nn(Shepherd-23, Mr-22)
poss(property-26, Shepherd-23)
amod(property-26, own-25)
root(ROOT-0, property-26)

(ROOT
  (S
    (S
      (NP (DT The) (NNS ruins))
      (VP (VBD formed)
        (NP
          (NP (DT a) (JJ great) (NN part))
          (PP (IN of)
            (NP
              (NP (DT the) (NN boundary))
              (PP (IN between)
                (NP (DT the) (CD two))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ plain)
          (S
            (VP (TO to)
              (VP (VB see)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NNP Priory))
                    (VP (VBD had)
                      (VP (VBN extended)
                        (NP (DT a) (JJ good) (NN way))
                        (PP (IN into)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (VP (VBD was)
                                (ADVP (RB now))
                                (NP (DT the) (JJ other) (NN garden))))))))))))))))
    (. .)))

det(ruins-2, The-1)
nsubj(formed-3, ruins-2)
root(ROOT-0, formed-3)
det(part-6, a-4)
amod(part-6, great-5)
dobj(formed-3, part-6)
det(boundary-9, the-8)
prep_of(part-6, boundary-9)
det(two-12, the-11)
prep_between(boundary-9, two-12)
nsubj(plain-17, it-15)
nsubj(see-19, it-15)
cop(plain-17, was-16)
conj_and(formed-3, plain-17)
aux(see-19, to-18)
xcomp(plain-17, see-19)
mark(extended-24, that-20)
det(Priory-22, the-21)
nsubj(extended-24, Priory-22)
aux(extended-24, had-23)
ccomp(see-19, extended-24)
det(way-27, a-25)
amod(way-27, good-26)
dobj(extended-24, way-27)
nsubj(garden-34, what-29)
cop(garden-34, was-30)
advmod(garden-34, now-31)
det(garden-34, the-32)
amod(garden-34, other-33)
prepc_into(extended-24, garden-34)

(ROOT
  (S
    (ADVP (RB Indeed))
    (NP
      (NP
        (NP (NNP Mr) (NNP Shepherd) (POS 's))
        (NN house))
      (, ,)
      (CONJP (RB as) (RB well) (IN as))
      (NP (NNP Mr) (NNP MacMichael) (NNP 's))
      (, ,))
    (VP (VBD had)
      (VP (VBN been)
        (VP (VBN built)
          (PRT (RP out))
          (PP (IN of)
            (NP (DT the) (NNS ruins))))))
    (. .)))

advmod(built-16, Indeed-1)
nn(Shepherd-3, Mr-2)
poss(house-5, Shepherd-3)
nsubjpass(built-16, house-5)
nn('s-12, Mr-10)
nn('s-12, MacMichael-11)
conj_and(house-5, 's-12)
nsubjpass(built-16, 's-12)
aux(built-16, had-14)
auxpass(built-16, been-15)
root(ROOT-0, built-16)
det(ruins-20, the-19)
prep_out_of(built-16, ruins-20)

(ROOT
  (S
    (NP (NNP Mr) (NNP Shepherd))
    (VP (VBD offered)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP
              (NP
                (NP (DT the) (NN wall))
                (VP (VBN thrown)
                  (PRT (RP down))))
              (CC and)
              (NP
                (NP (DT the) (NN building))
                (VP (VBN extended)
                  (PP (IN on)
                    (NP (PRP$ his) (NN side)))
                  (ADVP
                    (ADVP (RB as) (RB well))
                    (: --)
                    (ADVP (RB so)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (MD should)
                            (VP (VB stand)
                              (PP (IN in)
                                (NP
                                  (NP (DT the) (NN middle))
                                  (PP (IN of)
                                    (NP (CD one) (JJ large) (NN garden))))))))))))))))))
    (. .)))

nn(Shepherd-2, Mr-1)
nsubj(offered-3, Shepherd-2)
nsubj(have-5, Shepherd-2)
root(ROOT-0, offered-3)
aux(have-5, to-4)
xcomp(offered-3, have-5)
det(wall-7, the-6)
dobj(have-5, wall-7)
vmod(wall-7, thrown-8)
prt(thrown-8, down-9)
det(building-12, the-11)
dobj(have-5, building-12)
conj_and(wall-7, building-12)
vmod(building-12, extended-13)
poss(side-16, his-15)
prep_on(extended-13, side-16)
advmod(well-18, as-17)
mwe(well-18, as-17)
advmod(extended-13, well-18)
advmod(well-18, so-20)
mark(stand-24, that-21)
nsubj(stand-24, it-22)
aux(stand-24, should-23)
ccomp(so-20, stand-24)
det(middle-27, the-26)
prep_in(stand-24, middle-27)
num(garden-31, one-29)
amod(garden-31, large-30)
prep_of(middle-27, garden-31)

(ROOT
  (S
    (NP (PRP$ My) (NNS readers))
    (VP (VBP need) (RB not)
      (VP (VB put)
        (NP (DT a) (NN question))
        (ADVP (RB as)
          (PP (TO to)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (MD would)
                  (VP (VB have)
                    (VP (VBN become)
                      (PP (IN of)
                        (NP (PRP it)))
                      (SBAR
                        (SBAR (IN if)
                          (S
                            (NP (DT the) (CD two) (NNS proprietors))
                            (VP (VBD had)
                              (VP (VBN quarrelled)))))
                        (: ;)
                        (SBAR (IN for)
                          (S
                            (NP (PRP it))
                            (VP (VBD had)
                              (VP (VBN become)
                                (S
                                  (ADJP (RBR less) (JJ likely)
                                    (PP (IN than)
                                      (ADVP (RB ever)))))
                                (SBAR (IN that)
                                  (S
                                    (NP (PDT such) (DT a) (NN thing))
                                    (VP (MD should)
                                      (VP (VB happen)))))))))))))))))))
    (. .)))

poss(readers-2, My-1)
nsubj(need-3, readers-2)
root(ROOT-0, need-3)
neg(need-3, not-4)
dep(need-3, put-5)
det(question-7, a-6)
dobj(put-5, question-7)
nsubj(become-13, what-10)
aux(become-13, would-11)
aux(become-13, have-12)
prepc_as_to(put-5, become-13)
prep_of(become-13, it-15)
mark(quarrelled-21, if-16)
det(proprietors-19, the-17)
num(proprietors-19, two-18)
nsubj(quarrelled-21, proprietors-19)
aux(quarrelled-21, had-20)
advcl(become-13, quarrelled-21)
mark(become-26, for-23)
nsubj(become-26, it-24)
aux(become-26, had-25)
dep(quarrelled-21, become-26)
advmod(likely-28, less-27)
acomp(become-26, likely-28)
prep(likely-28, than-29)
pcomp(than-29, ever-30)
mark(happen-36, that-31)
predet(thing-34, such-32)
det(thing-34, a-33)
nsubj(happen-36, thing-34)
aux(happen-36, should-35)
ccomp(become-26, happen-36)

(ROOT
  (S
    (S
      (S
        (NP (NNP Willie))
        (VP (VBD had)
          (VP (VBN told)
            (NP (NNP Mona))
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP
                  (VP (VBD loved)
                    (NP (PRP her))
                    (ADVP
                      (ADVP (RBR more))
                      (SBAR (IN that)
                        (S
                          (NP (PRP he))
                          (VP (MD could)
                            (VP (VB tell)))))))
                  (, ,)
                  (CC and)
                  (VP (VBD wanted)
                    (S
                      (VP (TO to)
                        (VP (VB ask)
                          (S
                            (NP (PRP her))
                            (NP (DT a) (NN question)))))))))))))
      (, ,)
      (S
        (ADVP (RB only))
        (NP (PRP he))
        (VP (VBD did) (RB n't)
          (VP (VB know)
            (NP (WRB how)))))
      (: ;)
      (CC and)
      (S
        (NP (NNP Mona))
        (VP (VBD had)
          (VP (VBN told)
            (NP (NNP Willie))
            (SBAR (IN that)
              (S
                (NP (PRP she))
                (VP (MD would)
                  (VP (VB suppose)
                    (NP (PRP$ his) (NN question))
                    (SBAR (IN if)
                      (S
                        (NP (PRP he))
                        (VP (MD would)
                          (VP (VB suppose)
                            (NP (PRP$ her) (NN answer)))))))))))))
      (: ;)
      (CC and)
      (S
        (NP (NNP Willie))
        (VP (VBD had)
          (VP (VBN said)))))
    (, ,) (`` ``)
    (S
      (NP (NNP May))
      (NP (PRP I))
      (VP (VBP suppose)
        (S
          (NP (PRP it))
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT the) (JJ very) (NN answer))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (MD should)
                      (VP (VB like)))))))))))
    (. ?) ('' '')))

nsubj(told-3, Willie-1)
aux(told-3, had-2)
root(ROOT-0, told-3)
dobj(told-3, Mona-4)
mark(loved-7, that-5)
nsubj(loved-7, he-6)
nsubj(wanted-16, he-6)
nsubj(ask-18, he-6)
ccomp(told-3, loved-7)
dobj(loved-7, her-8)
advmod(loved-7, more-9)
mark(tell-13, that-10)
nsubj(tell-13, he-11)
aux(tell-13, could-12)
advcl(more-9, tell-13)
ccomp(more-9, tell-13)
ccomp(told-3, wanted-16)
conj_and(loved-7, wanted-16)
aux(ask-18, to-17)
xcomp(wanted-16, ask-18)
nsubj(question-21, her-19)
det(question-21, a-20)
xcomp(ask-18, question-21)
advmod(know-27, only-23)
nsubj(know-27, he-24)
aux(know-27, did-25)
neg(know-27, n't-26)
conj_and(told-3, know-27)
dobj(know-27, how-28)
nsubj(told-33, Mona-31)
aux(told-33, had-32)
conj_and(told-3, told-33)
dobj(told-33, Willie-34)
mark(suppose-38, that-35)
nsubj(suppose-38, she-36)
aux(suppose-38, would-37)
ccomp(told-33, suppose-38)
poss(question-40, his-39)
dobj(suppose-38, question-40)
mark(suppose-44, if-41)
nsubj(suppose-44, he-42)
aux(suppose-44, would-43)
advcl(suppose-38, suppose-44)
poss(answer-46, her-45)
dobj(suppose-44, answer-46)
nsubj(said-51, Willie-49)
aux(said-51, had-50)
conj_and(told-3, said-51)
tmod(suppose-56, May-54)
nsubj(suppose-56, I-55)
parataxis(told-3, suppose-56)
dobj(suppose-56, it-57)
nsubj(answer-62, it-57)
aux(answer-62, to-58)
cop(answer-62, be-59)
det(answer-62, the-60)
amod(answer-62, very-61)
xcomp(suppose-56, answer-62)
nsubj(like-65, I-63)
aux(like-65, should-64)
rcmod(answer-62, like-65)

(ROOT
  (S
    (S
      (S (CC and)
        (NP (NNP Mona))
        (VP (VBD had)
          (VP (VBN answered)
            (NP
              (INTJ (`` ``) (UH Yes) ('' ''))
              (NP (RB quite) (CD decidedly))))))
      (: ;)
      (CC and)
      (S
        (NP (NNP Willie))
        (VP (VBD had)
          (VP (VBN given)
            (NP (PRP her))
            (NP (DT a) (NN kiss)))))
      (: ;)
      (CC and)
      (S
        (NP (NNP Mona))
        (VP (VBD had)
          (VP
            (VP (VBN taken)
              (NP (DT the) (NN kiss)))
            (CC and)
            (VP (VBN given)
              (NP (PRP him))
              (NP
                (NP (DT another))
                (PP (IN for)
                  (NP (PRP it))))))))
      (: ;)
      (CC and)
      (S (IN so)
        (NP (PRP it))
        (VP (VBD was) (RB all)
          (VP (VBN understood)))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (DT no) (NN fear))
          (PP (IN of)
            (NP (DT the) (NN wall)
              (S
                (VP (VBG having)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN built)
                          (ADVP (RB up) (RB again))
                          (PP (IN between)
                            (NP (DT the) (NNS gardens))))))))))))))
    (. .)))

nsubj(answered-4, Mona-2)
aux(answered-4, had-3)
root(ROOT-0, answered-4)
discourse(decidedly-9, Yes-6)
advmod(decidedly-9, quite-8)
dobj(answered-4, decidedly-9)
nsubj(given-14, Willie-12)
aux(given-14, had-13)
conj_and(answered-4, given-14)
iobj(given-14, her-15)
det(kiss-17, a-16)
dobj(given-14, kiss-17)
nsubj(taken-22, Mona-20)
nsubj(given-26, Mona-20)
aux(taken-22, had-21)
conj_and(answered-4, taken-22)
det(kiss-24, the-23)
dobj(taken-22, kiss-24)
conj_and(answered-4, given-26)
conj_and(taken-22, given-26)
iobj(given-26, him-27)
dobj(given-26, another-28)
prep_for(another-28, it-30)
dep(understood-37, so-33)
nsubjpass(understood-37, it-34)
auxpass(understood-37, was-35)
advmod(understood-37, all-36)
conj_and(answered-4, understood-37)
expl(was-41, there-40)
conj_and(answered-4, was-41)
neg(fear-43, no-42)
nsubj(was-41, fear-43)
det(wall-46, the-45)
prep_of(fear-43, wall-46)
dep(wall-46, having-47)
aux(built-50, to-48)
auxpass(built-50, be-49)
xcomp(having-47, built-50)
advmod(again-52, up-51)
advmod(built-50, again-52)
det(gardens-55, the-54)
prep_between(built-50, gardens-55)

(ROOT
  (S (IN So)
    (NP (DT the) (NNP Priory))
    (VP
      (VP (VBD grew))
      (CC and)
      (VP (VBN flourished)
        (CC and)
        (VBN gained)
        (NP
          (NP (JJ great) (NN reputation))
          (: ;)
          (CC and)
          (NP
            (NP
              (NP (DT the) (NN fame))
              (PP (IN of)
                (NP (DT the) (CD two) (NNS doctors))))
            (, ,)
            (NP (NN father)
              (CC and)
              (NN son))
            (, ,)
            (VP (VBN spread)
              (S
                (ADJP (JJ far)
                  (CC and)
                  (JJ wide))))))
        (PP (IN for)
          (NP
            (NP (DT the) (NNS cures))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBD wrought))))))))
    (. .)))

dep(grew-4, So-1)
det(Priory-3, the-2)
nsubj(grew-4, Priory-3)
nsubj(flourished-6, Priory-3)
root(ROOT-0, grew-4)
conj_and(grew-4, flourished-6)
conj_and(grew-4, gained-8)
conj_and(flourished-6, gained-8)
amod(reputation-10, great-9)
dobj(flourished-6, reputation-10)
det(fame-14, the-13)
dobj(flourished-6, fame-14)
conj_and(reputation-10, fame-14)
det(doctors-18, the-16)
num(doctors-18, two-17)
prep_of(fame-14, doctors-18)
appos(fame-14, father-20)
appos(fame-14, son-22)
conj_and(father-20, son-22)
vmod(fame-14, spread-24)
acomp(spread-24, far-25)
acomp(spread-24, wide-27)
conj_and(far-25, wide-27)
det(cures-30, the-29)
prep_for(flourished-6, cures-30)
nsubj(wrought-32, they-31)
rcmod(cures-30, wrought-32)

(ROOT
  (S (CC And)
    (NP (JJ many) (NNS people))
    (VP
      (VP (VBD came))
      (CC and)
      (VP (VBD paid)
        (NP (PRP them))
        (NP (JJ large) (NNS sums))))
    (. .)))

amod(people-3, many-2)
nsubj(came-4, people-3)
nsubj(paid-6, people-3)
root(ROOT-0, came-4)
conj_and(came-4, paid-6)
iobj(paid-6, them-7)
amod(sums-9, large-8)
dobj(paid-6, sums-9)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the)
        (ADJP (RBR more) (JJ rich))
        (NNS people))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD came)))))
    (, ,)
    (X
      (X (DT the) (JJR more))
      (NP (JJ poor) (NNS people)))
    (NP (PRP they))
    (VP (VBD invited))
    (. .)))

cc(invited-14, But-1)
det(people-5, the-2)
advmod(rich-4, more-3)
amod(people-5, rich-4)
nsubj(came-7, people-5)
nsubj(invited-14, people-5)
rcmod(people-5, came-7)
det(more-10, the-9)
dep(people-12, more-10)
amod(people-12, poor-11)
dep(invited-14, people-12)
nsubj(invited-14, they-13)
root(ROOT-0, invited-14)

(ROOT
  (S
    (SBAR (IN For)
      (S
        (NP (PRP they))
        (ADVP (RB never))
        (VP (MD would)
          (VP (VB allow)
            (NP
              (NP (DT the) (NN making))
              (PP (IN of)
                (NP (NN money))))
            (PP (TO to))))))
    (VP (VBP intrude)
      (PP (IN upon)
        (NP
          (NP (DT the) (NN dignity))
          (PP (IN of)
            (NP (PRP$ their) (JJ high) (NN calling))))))
    (. .)))

mark(allow-5, For-1)
nsubj(allow-5, they-2)
neg(allow-5, never-3)
aux(allow-5, would-4)
csubj(intrude-11, allow-5)
det(making-7, the-6)
dobj(allow-5, making-7)
prep_of(making-7, money-9)
prep(allow-5, to-10)
root(ROOT-0, intrude-11)
det(dignity-14, the-13)
prep_upon(intrude-11, dignity-14)
poss(calling-18, their-16)
amod(calling-18, high-17)
prep_of(dignity-14, calling-18)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD should)
      (NP (NN avarice)
        (CC and)
        (NN cure))
      (VP (VB go)
        (ADVP (RB together))))
    (. ?)))

advmod(go-6, How-1)
aux(go-6, should-2)
nsubj(go-6, avarice-3)
conj_and(avarice-3, cure-5)
nsubj(go-6, cure-5)
root(ROOT-0, go-6)
advmod(go-6, together-7)

(ROOT
  (S
    (ADVP (RB _))
    (NP
      (NP (DT A) (JJ greedy) (NN healer))
      (PP (IN of)
        (NP (NNS men))))
    (VP (VBZ _))
    (. !)))

advmod(_-7, _-1)
det(healer-4, A-2)
amod(healer-4, greedy-3)
nsubj(_-7, healer-4)
prep_of(healer-4, men-6)
root(ROOT-0, _-7)

(ROOT
  (FRAG
    (WHNP (WP What)
      (NP (DT a) (NN marriage)))
    (PP (IN of)
      (NP (NNS words)))
    (. !)))

root(ROOT-0, What-1)
det(marriage-3, a-2)
dep(What-1, marriage-3)
prep_of(What-1, words-5)

(ROOT
  (S
    (NP (DT The) (NNP Priory))
    (VP (VBD became)
      (NP (RB quite) (DT a) (JJ grand) (NN building)))
    (. .)))

det(Priory-2, The-1)
nsubj(became-3, Priory-2)
root(ROOT-0, became-3)
advmod(building-7, quite-4)
det(building-7, a-5)
amod(building-7, grand-6)
xcomp(became-3, building-7)

(ROOT
  (S
    (S
      (NP (DT The) (NN chapel))
      (VP
        (VP (VBD grew)
          (PRT (RP up))
          (ADVP (RB again)))
        (, ,)
        (CC and)
        (VP (VBD had)
          (NP
            (NP (NNS windows))
            (PP (IN of)
              (NP (JJ stained) (NN glass))))
          (NP (DT that) (NN shone))
          (PP (IN like)
            (NP (NNS jewels))))))
    (: ;)
    (CC and)
    (S
      (S
        (NP (NNP Mr) (NNP Shepherd))
        (, ,)
        (S
          (VP (VBG having)
            (VP (VBN preached)
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ parish) (NN church))
                  (PP (IN in)
                    (NP (DT the) (NN morning))))))))
        (, ,)
        (VP
          (ADVP (RB always))
          (VBD preached)
          (PP (IN in)
            (NP (DT the) (NNP Priory) (NN chapel)))
          (PP (IN on)
            (NP (DT the) (NNP Sunday) (NN evening)))))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (PDT all) (DT the) (NNS patients))
          (, ,)
          (CC and)
          (NP
            (NP (DT any) (NN one))
            (PP (IN besides)
              (NP
                (NP (DT that))
                (VP (VBN pleased)))))
          (, ,))
        (VP (VBD went)
          (S
            (VP (TO to)
              (VP (VB hear)
                (NP (PRP him))))))))
    (. .)))

det(chapel-2, The-1)
nsubj(grew-3, chapel-2)
nsubj(had-8, chapel-2)
root(ROOT-0, grew-3)
prt(grew-3, up-4)
advmod(grew-3, again-5)
conj_and(grew-3, had-8)
iobj(had-8, windows-9)
amod(glass-12, stained-11)
prep_of(windows-9, glass-12)
det(shone-14, that-13)
dobj(had-8, shone-14)
prep_like(had-8, jewels-16)
nn(Shepherd-20, Mr-19)
nsubj(preached-33, Shepherd-20)
aux(preached-23, having-22)
vmod(preached-33, preached-23)
det(church-27, the-25)
amod(church-27, parish-26)
prep_in(preached-23, church-27)
det(morning-30, the-29)
prep_in(church-27, morning-30)
advmod(preached-33, always-32)
conj_and(grew-3, preached-33)
det(chapel-37, the-35)
nn(chapel-37, Priory-36)
prep_in(preached-33, chapel-37)
det(evening-41, the-39)
nn(evening-41, Sunday-40)
prep_on(preached-33, evening-41)
predet(patients-46, all-44)
det(patients-46, the-45)
nsubj(went-55, patients-46)
nsubj(hear-57, patients-46)
det(one-50, any-49)
conj_and(patients-46, one-50)
nsubj(went-55, one-50)
nsubj(hear-57, one-50)
prep_besides(one-50, that-52)
vmod(that-52, pleased-53)
conj_and(grew-3, went-55)
conj_and(preached-33, went-55)
aux(hear-57, to-56)
xcomp(went-55, hear-57)
dobj(hear-57, him-58)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD built)
      (NP
        (NP (JJ great) (NNS baths))
        (, ,)
        (NP
          (UCP
            (ADJP (JJ hot)
              (CC and)
              (JJ cold))
            (, ,)
            (CC and)
            (PP (IN of)
              (NP (DT all))))
          (NNS kinds))
        (: --))
      (PP (IN from)
        (NP
          (NP (NNS baths))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (NNS people))
              (VP (MD could)
                (VP (VB swim)))))))
      (, ,)
      (PP (TO to)
        (NP
          (NP (NNS baths))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP they))
              (VP (VBD were)
                (ADVP (RB only))
                (VP (VBN showered)
                  (PRT (RP on))
                  (PP (IN by)
                    (NP (DT a)
                      (ADJP (RB very) (JJ sharp))
                      (NN rain))))))))))
    (. .)))

nsubj(built-2, They-1)
root(ROOT-0, built-2)
amod(baths-4, great-3)
dobj(built-2, baths-4)
amod(kinds-13, hot-6)
conj_and(hot-6, cold-8)
amod(kinds-13, cold-8)
conj_and(hot-6, of-11)
amod(kinds-13, of-11)
pobj(of-11, all-12)
appos(baths-4, kinds-13)
prep_from(built-2, baths-16)
advmod(swim-20, where-17)
nsubj(swim-20, people-18)
aux(swim-20, could-19)
rcmod(baths-16, swim-20)
prep_to(built-2, baths-23)
advmod(showered-28, where-24)
nsubjpass(showered-28, they-25)
auxpass(showered-28, were-26)
advmod(showered-28, only-27)
rcmod(baths-23, showered-28)
prt(showered-28, on-29)
det(rain-34, a-31)
advmod(sharp-33, very-32)
amod(rain-34, sharp-33)
agent(showered-28, rain-34)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (DT a)
        (ADJP (JJ great)
          (CC and)
          (JJ admirable))
        (NN place)))
    (. .)))

nsubj(place-7, It-1)
cop(place-7, was-2)
det(place-7, a-3)
amod(place-7, great-4)
conj_and(great-4, admirable-6)
amod(place-7, admirable-6)
root(ROOT-0, place-7)

(ROOT
  (S
    (SBAR (IN After)
      (S
        (NP (DT the) (CD two) (NNS fathers))
        (VP (VBD died))))
    (, ,)
    (NP (NNP Mona))
    (VP (VBD had)
      (NP
        (NP (DT a) (NN picture))
        (PP (IN of)
          (NP
            (NP (NNP Willie) (POS 's))
            (NN dream) (NN painted))))
      (, ,)
      (PP (IN with)
        (NP
          (NP (NNS portraits))
          (PP (IN of)
            (NP (PRP them)))))
      (PP (IN as)
        (NP (DT the) (CD two) (NNS angels))))
    (. .)))

mark(died-5, After-1)
det(fathers-4, the-2)
num(fathers-4, two-3)
nsubj(died-5, fathers-4)
advcl(had-8, died-5)
nsubj(had-8, Mona-7)
root(ROOT-0, had-8)
det(picture-10, a-9)
dobj(had-8, picture-10)
poss(painted-15, Willie-12)
nn(painted-15, dream-14)
prep_of(picture-10, painted-15)
prep_with(had-8, portraits-18)
prep_of(portraits-18, them-20)
det(angels-24, the-22)
num(angels-24, two-23)
prep_as(had-8, angels-24)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN story))
        (PP (IN of)
          (NP (NNP Gutta) (NNP Percha) (NNP Willie)))))
    (. .)))

nsubj(story-4, This-1)
cop(story-4, is-2)
det(story-4, the-3)
root(ROOT-0, story-4)
nn(Willie-8, Gutta-6)
nn(Willie-8, Percha-7)
prep_of(story-4, Willie-8)

